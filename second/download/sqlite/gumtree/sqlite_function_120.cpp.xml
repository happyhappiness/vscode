<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_120.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3ParseUri<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(
  <parameter><decl><type><specifier pos:line="2" pos:column="3">const<pos:position pos:line="2" pos:column="8"/></specifier> <name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">zDefaultVfs<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>,        <comment type="block" pos:line="2" pos:column="35">/* VFS to use if no "vfs=xxx" query option */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zUri<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>,               <comment type="block" pos:line="3" pos:column="35">/* Nul-terminated URI to parse */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pFlags<pos:position pos:line="4" pos:column="23"/></name></decl></parameter>,           <comment type="block" pos:line="4" pos:column="35">/* IN/OUT: SQLITE_OPEN_XXX flags */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">sqlite3_vfs<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">ppVfs<pos:position pos:line="5" pos:column="22"/></name></decl></parameter>,            <comment type="block" pos:line="5" pos:column="35">/* OUT: VFS to use */</comment> 
  <parameter><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">pzFile<pos:position pos:line="6" pos:column="16"/></name></decl></parameter>,                  <comment type="block" pos:line="6" pos:column="35">/* OUT: Filename component of URI */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier><modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">pzErrMsg<pos:position pos:line="7" pos:column="18"/></name></decl></parameter>                 <comment type="block" pos:line="7" pos:column="35">/* OUT: Error message (if rc!=SQLITE_OK) */</comment>
)<pos:position pos:line="8" pos:column="2"/></parameter_list><block pos:line="8" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rc<pos:position pos:line="9" pos:column="9"/></name> <init pos:line="9" pos:column="10">= <expr><name pos:line="9" pos:column="12">SQLITE_OK<pos:position pos:line="9" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">int<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">flags<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">pFlags<pos:position pos:line="10" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">zVfs<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name pos:line="11" pos:column="22">zDefaultVfs<pos:position pos:line="11" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">zFile<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name pos:line="13" pos:column="8">c<pos:position pos:line="13" pos:column="9"/></name></decl>;<pos:position pos:line="13" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">nUri<pos:position pos:line="14" pos:column="11"/></name> <init pos:line="14" pos:column="12">= <expr><call><name pos:line="14" pos:column="14">sqlite3Strlen30<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">zUri<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">( <argument><expr><operator pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">pzErrMsg<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><operator pos:line="18" pos:column="8">(<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">flags<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&amp;<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="17">SQLITE_OPEN_URI<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">)<pos:position pos:line="18" pos:column="33"/></operator>             <comment type="block" pos:line="18" pos:column="46">/* IMP: R-48725-32206 */</comment>
            <operator pos:line="19" pos:column="13">||<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="16">sqlite3GlobalConfig<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">.<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">bOpenUri<pos:position pos:line="19" pos:column="44"/></name></name><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator> <comment type="block" pos:line="19" pos:column="46">/* IMP: R-51689-46548 */</comment>
   <operator pos:line="20" pos:column="4">&amp;&amp;<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="7">nUri<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">&gt;=<pos:position pos:line="20" pos:column="16"/></operator><literal type="number" pos:line="20" pos:column="13">5<pos:position pos:line="20" pos:column="14"/></literal> <operator pos:line="20" pos:column="15">&amp;&amp;<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="18">memcmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">zUri<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"file:"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="40">5<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call><operator pos:line="20" pos:column="42">==<pos:position pos:line="20" pos:column="44"/></operator><literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr> <comment type="block" pos:line="20" pos:column="46">/* IMP: R-57884-37496 */</comment>
  )<pos:position pos:line="21" pos:column="4"/></condition><then><block pos:line="21" pos:column="4">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name pos:line="22" pos:column="11">zOpt<pos:position pos:line="22" pos:column="15"/></name></decl>;<pos:position pos:line="22" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">eState<pos:position pos:line="23" pos:column="15"/></name></decl>;<pos:position pos:line="23" pos:column="16"/></decl_stmt>                   <comment type="block" pos:line="23" pos:column="35">/* Parser state when parsing URI */</comment>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">iIn<pos:position pos:line="24" pos:column="12"/></name></decl>;<pos:position pos:line="24" pos:column="13"/></decl_stmt>                      <comment type="block" pos:line="24" pos:column="35">/* Input character index */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">iOut<pos:position pos:line="25" pos:column="13"/></name> <init pos:line="25" pos:column="14">= <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="18"/></decl_stmt>                 <comment type="block" pos:line="25" pos:column="35">/* Output character index */</comment>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">u64<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">nByte<pos:position pos:line="26" pos:column="14"/></name> <init pos:line="26" pos:column="15">= <expr><name pos:line="26" pos:column="17">nUri<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">+<pos:position pos:line="26" pos:column="22"/></operator><literal type="number" pos:line="26" pos:column="22">2<pos:position pos:line="26" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="24"/></decl_stmt>           <comment type="block" pos:line="26" pos:column="35">/* Bytes of space to allocate */</comment>

    <comment type="block" pos:line="28" pos:column="5">/* Make sure the SQLITE_OPEN_URI flag is set to indicate to the VFS xOpen 
    ** method that there may be extra parameters following the file-name.  */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">flags<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">|=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">SQLITE_OPEN_URI<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>

    <for pos:line="32" pos:column="5">for<control pos:line="32" pos:column="8">(<init><expr><name pos:line="32" pos:column="9">iIn<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></init> <condition><expr><name pos:line="32" pos:column="16">iIn<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">&lt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">nUri<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></condition> <incr><expr><name pos:line="32" pos:column="26">iIn<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">++<pos:position pos:line="32" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="32"/></control> <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="33">nByte<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">+=<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="42">(<pos:position pos:line="32" pos:column="43"/></operator><name><name pos:line="32" pos:column="43">zUri<pos:position pos:line="32" pos:column="47"/></name><index pos:line="32" pos:column="47">[<expr><name pos:line="32" pos:column="48">iIn<pos:position pos:line="32" pos:column="51"/></name></expr>]<pos:position pos:line="32" pos:column="52"/></index></name><operator pos:line="32" pos:column="52">==<pos:position pos:line="32" pos:column="54"/></operator><literal type="char" pos:line="32" pos:column="54">'&amp;'<pos:position pos:line="32" pos:column="61"/></literal><operator pos:line="32" pos:column="57">)<pos:position pos:line="32" pos:column="58"/></operator></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt></block></for>
    <expr_stmt><expr><name pos:line="33" pos:column="5">zFile<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">sqlite3_malloc64<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">nByte<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">( <expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">zFile<pos:position pos:line="34" pos:column="15"/></name></expr> )<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17"> <block type="pseudo"><return pos:line="34" pos:column="18">return <expr><name pos:line="34" pos:column="25">SQLITE_NOMEM_BKPT<pos:position pos:line="34" pos:column="42"/></name></expr>;<pos:position pos:line="34" pos:column="43"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">iIn<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <literal type="number" pos:line="36" pos:column="11">5<pos:position pos:line="36" pos:column="12"/></literal></expr>;<pos:position pos:line="36" pos:column="13"/></expr_stmt>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SQLITE_ALLOW_URI_AUTHORITY<pos:position pos:line="37" pos:column="34"/></name></cpp:ifdef>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">( <expr><call><name pos:line="38" pos:column="9">strncmp<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">zUri<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">+<pos:position pos:line="38" pos:column="22"/></operator><literal type="number" pos:line="38" pos:column="22">5<pos:position pos:line="38" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="25">"///"<pos:position pos:line="38" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="32">3<pos:position pos:line="38" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call><operator pos:line="38" pos:column="34">==<pos:position pos:line="38" pos:column="36"/></operator><literal type="number" pos:line="38" pos:column="36">0<pos:position pos:line="38" pos:column="37"/></literal></expr> )<pos:position pos:line="38" pos:column="39"/></condition><then><block pos:line="38" pos:column="39">{
      <expr_stmt><expr><name pos:line="39" pos:column="7">iIn<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <literal type="number" pos:line="39" pos:column="13">7<pos:position pos:line="39" pos:column="14"/></literal></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt>
      <comment type="block" pos:line="40" pos:column="7">/* The following condition causes URIs with five leading / characters
      ** like file://///host/path to be converted into UNCs like //host/path.
      ** The correct URI for that UNC has only two or four leading / characters
      ** file://host/path or file:////host/path.  But 5 leading slashes is a 
      ** common error, we are told, so we handle it as a special case. */</comment>
      <if pos:line="45" pos:column="7">if<condition pos:line="45" pos:column="9">( <expr><call><name pos:line="45" pos:column="11">strncmp<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">zUri<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">+<pos:position pos:line="45" pos:column="24"/></operator><literal type="number" pos:line="45" pos:column="24">7<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"///"<pos:position pos:line="45" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="34">3<pos:position pos:line="45" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call><operator pos:line="45" pos:column="36">==<pos:position pos:line="45" pos:column="38"/></operator><literal type="number" pos:line="45" pos:column="38">0<pos:position pos:line="45" pos:column="39"/></literal></expr> )<pos:position pos:line="45" pos:column="41"/></condition><then><block pos:line="45" pos:column="41">{ <expr_stmt><expr><name pos:line="45" pos:column="43">iIn<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">++<pos:position pos:line="45" pos:column="48"/></operator></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt> }<pos:position pos:line="45" pos:column="51"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then><elseif pos:line="46" pos:column="6">else <if pos:line="46" pos:column="11">if<condition pos:line="46" pos:column="13">( <expr><call><name pos:line="46" pos:column="15">strncmp<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">zUri<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">+<pos:position pos:line="46" pos:column="28"/></operator><literal type="number" pos:line="46" pos:column="28">5<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="31">"//localhost/"<pos:position pos:line="46" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="47">12<pos:position pos:line="46" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call><operator pos:line="46" pos:column="50">==<pos:position pos:line="46" pos:column="52"/></operator><literal type="number" pos:line="46" pos:column="52">0<pos:position pos:line="46" pos:column="53"/></literal></expr> )<pos:position pos:line="46" pos:column="55"/></condition><then><block pos:line="46" pos:column="55">{
      <expr_stmt><expr><name pos:line="47" pos:column="7">iIn<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <literal type="number" pos:line="47" pos:column="13">16<pos:position pos:line="47" pos:column="15"/></literal></expr>;<pos:position pos:line="47" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if></elseif></if>
<cpp:else pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">else<pos:position pos:line="49" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="50" pos:column="5">/* Discard the scheme and authority segments of the URI. */</comment>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">( <expr><name><name pos:line="51" pos:column="9">zUri<pos:position pos:line="51" pos:column="13"/></name><index pos:line="51" pos:column="13">[<expr><literal type="number" pos:line="51" pos:column="14">5<pos:position pos:line="51" pos:column="15"/></literal></expr>]<pos:position pos:line="51" pos:column="16"/></index></name><operator pos:line="51" pos:column="16">==<pos:position pos:line="51" pos:column="18"/></operator><literal type="char" pos:line="51" pos:column="18">'/'<pos:position pos:line="51" pos:column="21"/></literal> <operator pos:line="51" pos:column="22">&amp;&amp;<pos:position pos:line="51" pos:column="32"/></operator> <name><name pos:line="51" pos:column="25">zUri<pos:position pos:line="51" pos:column="29"/></name><index pos:line="51" pos:column="29">[<expr><literal type="number" pos:line="51" pos:column="30">6<pos:position pos:line="51" pos:column="31"/></literal></expr>]<pos:position pos:line="51" pos:column="32"/></index></name><operator pos:line="51" pos:column="32">==<pos:position pos:line="51" pos:column="34"/></operator><literal type="char" pos:line="51" pos:column="34">'/'<pos:position pos:line="51" pos:column="37"/></literal></expr> )<pos:position pos:line="51" pos:column="39"/></condition><then><block pos:line="51" pos:column="39">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">iIn<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <literal type="number" pos:line="52" pos:column="13">7<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
      <while pos:line="53" pos:column="7">while<condition pos:line="53" pos:column="12">( <expr><name><name pos:line="53" pos:column="14">zUri<pos:position pos:line="53" pos:column="18"/></name><index pos:line="53" pos:column="18">[<expr><name pos:line="53" pos:column="19">iIn<pos:position pos:line="53" pos:column="22"/></name></expr>]<pos:position pos:line="53" pos:column="23"/></index></name> <operator pos:line="53" pos:column="24">&amp;&amp;<pos:position pos:line="53" pos:column="34"/></operator> <name><name pos:line="53" pos:column="27">zUri<pos:position pos:line="53" pos:column="31"/></name><index pos:line="53" pos:column="31">[<expr><name pos:line="53" pos:column="32">iIn<pos:position pos:line="53" pos:column="35"/></name></expr>]<pos:position pos:line="53" pos:column="36"/></index></name><operator pos:line="53" pos:column="36">!=<pos:position pos:line="53" pos:column="38"/></operator><literal type="char" pos:line="53" pos:column="38">'/'<pos:position pos:line="53" pos:column="41"/></literal></expr> )<pos:position pos:line="53" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="44">iIn<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">++<pos:position pos:line="53" pos:column="49"/></operator></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt></block></while>
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">( <expr><name pos:line="54" pos:column="11">iIn<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">!=<pos:position pos:line="54" pos:column="16"/></operator><literal type="number" pos:line="54" pos:column="16">7<pos:position pos:line="54" pos:column="17"/></literal> <operator pos:line="54" pos:column="18">&amp;&amp;<pos:position pos:line="54" pos:column="28"/></operator> <operator pos:line="54" pos:column="21">(<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">iIn<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">!=<pos:position pos:line="54" pos:column="27"/></operator><literal type="number" pos:line="54" pos:column="27">16<pos:position pos:line="54" pos:column="29"/></literal> <operator pos:line="54" pos:column="30">||<pos:position pos:line="54" pos:column="32"/></operator> <call><name pos:line="54" pos:column="33">memcmp<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><literal type="string" pos:line="54" pos:column="40">"localhost"<pos:position pos:line="54" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="53">&amp;<pos:position pos:line="54" pos:column="58"/></operator><name><name pos:line="54" pos:column="54">zUri<pos:position pos:line="54" pos:column="58"/></name><index pos:line="54" pos:column="58">[<expr><literal type="number" pos:line="54" pos:column="59">7<pos:position pos:line="54" pos:column="60"/></literal></expr>]<pos:position pos:line="54" pos:column="61"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="63">9<pos:position pos:line="54" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></call><operator pos:line="54" pos:column="65">)<pos:position pos:line="54" pos:column="66"/></operator></expr> )<pos:position pos:line="54" pos:column="68"/></condition><then><block pos:line="54" pos:column="68">{
        <expr_stmt><expr><operator pos:line="55" pos:column="9">*<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">pzErrMsg<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <call><name pos:line="55" pos:column="21">sqlite3_mprintf<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><literal type="string" pos:line="55" pos:column="37">"invalid uri authority: %.*s"<pos:position pos:line="55" pos:column="66"/></literal></expr></argument>, 
            <argument><expr><name pos:line="56" pos:column="13">iIn<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">7<pos:position pos:line="56" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="20">&amp;<pos:position pos:line="56" pos:column="25"/></operator><name><name pos:line="56" pos:column="21">zUri<pos:position pos:line="56" pos:column="25"/></name><index pos:line="56" pos:column="25">[<expr><literal type="number" pos:line="56" pos:column="26">7<pos:position pos:line="56" pos:column="27"/></literal></expr>]<pos:position pos:line="56" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">rc<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <name pos:line="57" pos:column="14">SQLITE_ERROR<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <goto pos:line="58" pos:column="9">goto <name pos:line="58" pos:column="14">parse_uri_out<pos:position pos:line="58" pos:column="27"/></name>;<pos:position pos:line="58" pos:column="28"/></goto>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="63" pos:column="5">/* Copy the filename and any query parameters into the zFile buffer. 
    ** Decode %HH escape codes along the way. 
    **
    ** Within this loop, variable eState may be set to 0, 1 or 2, depending
    ** on the parsing context. As follows:
    **
    **   0: Parsing file-name.
    **   1: Parsing name section of a name=value query parameter.
    **   2: Parsing value section of a name=value query parameter.
    */</comment>
    <expr_stmt><expr><name pos:line="73" pos:column="5">eState<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <literal type="number" pos:line="73" pos:column="14">0<pos:position pos:line="73" pos:column="15"/></literal></expr>;<pos:position pos:line="73" pos:column="16"/></expr_stmt>
    <while pos:line="74" pos:column="5">while<condition pos:line="74" pos:column="10">( <expr><operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">c<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <name><name pos:line="74" pos:column="17">zUri<pos:position pos:line="74" pos:column="21"/></name><index pos:line="74" pos:column="21">[<expr><name pos:line="74" pos:column="22">iIn<pos:position pos:line="74" pos:column="25"/></name></expr>]<pos:position pos:line="74" pos:column="26"/></index></name><operator pos:line="74" pos:column="26">)<pos:position pos:line="74" pos:column="27"/></operator><operator pos:line="74" pos:column="27">!=<pos:position pos:line="74" pos:column="29"/></operator><literal type="number" pos:line="74" pos:column="29">0<pos:position pos:line="74" pos:column="30"/></literal> <operator pos:line="74" pos:column="31">&amp;&amp;<pos:position pos:line="74" pos:column="41"/></operator> <name pos:line="74" pos:column="34">c<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">!=<pos:position pos:line="74" pos:column="37"/></operator><literal type="char" pos:line="74" pos:column="37">'#'<pos:position pos:line="74" pos:column="40"/></literal></expr> )<pos:position pos:line="74" pos:column="42"/></condition><block pos:line="74" pos:column="42">{
      <expr_stmt><expr><name pos:line="75" pos:column="7">iIn<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">++<pos:position pos:line="75" pos:column="12"/></operator></expr>;<pos:position pos:line="75" pos:column="13"/></expr_stmt>
      <if pos:line="76" pos:column="7">if<condition pos:line="76" pos:column="9">( <expr><name pos:line="76" pos:column="11">c<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">==<pos:position pos:line="76" pos:column="14"/></operator><literal type="char" pos:line="76" pos:column="14">'%'<pos:position pos:line="76" pos:column="17"/></literal> 
       <operator pos:line="77" pos:column="8">&amp;&amp;<pos:position pos:line="77" pos:column="18"/></operator> <call><name pos:line="77" pos:column="11">sqlite3Isxdigit<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><name><name pos:line="77" pos:column="27">zUri<pos:position pos:line="77" pos:column="31"/></name><index pos:line="77" pos:column="31">[<expr><name pos:line="77" pos:column="32">iIn<pos:position pos:line="77" pos:column="35"/></name></expr>]<pos:position pos:line="77" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call> 
       <operator pos:line="78" pos:column="8">&amp;&amp;<pos:position pos:line="78" pos:column="18"/></operator> <call><name pos:line="78" pos:column="11">sqlite3Isxdigit<pos:position pos:line="78" pos:column="26"/></name><argument_list pos:line="78" pos:column="26">(<argument><expr><name><name pos:line="78" pos:column="27">zUri<pos:position pos:line="78" pos:column="31"/></name><index pos:line="78" pos:column="31">[<expr><name pos:line="78" pos:column="32">iIn<pos:position pos:line="78" pos:column="35"/></name><operator pos:line="78" pos:column="35">+<pos:position pos:line="78" pos:column="36"/></operator><literal type="number" pos:line="78" pos:column="36">1<pos:position pos:line="78" pos:column="37"/></literal></expr>]<pos:position pos:line="78" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr> 
      )<pos:position pos:line="79" pos:column="8"/></condition><then><block pos:line="79" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">int<pos:position pos:line="80" pos:column="12"/></name></type> <name pos:line="80" pos:column="13">octet<pos:position pos:line="80" pos:column="18"/></name> <init pos:line="80" pos:column="19">= <expr><operator pos:line="80" pos:column="21">(<pos:position pos:line="80" pos:column="22"/></operator><call><name pos:line="80" pos:column="22">sqlite3HexToInt<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name><name pos:line="80" pos:column="38">zUri<pos:position pos:line="80" pos:column="42"/></name><index pos:line="80" pos:column="42">[<expr><name pos:line="80" pos:column="43">iIn<pos:position pos:line="80" pos:column="46"/></name><operator pos:line="80" pos:column="46">++<pos:position pos:line="80" pos:column="48"/></operator></expr>]<pos:position pos:line="80" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call> <operator pos:line="80" pos:column="51">&lt;&lt;<pos:position pos:line="80" pos:column="59"/></operator> <literal type="number" pos:line="80" pos:column="54">4<pos:position pos:line="80" pos:column="55"/></literal><operator pos:line="80" pos:column="55">)<pos:position pos:line="80" pos:column="56"/></operator></expr></init></decl>;<pos:position pos:line="80" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name pos:line="81" pos:column="9">octet<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">+=<pos:position pos:line="81" pos:column="17"/></operator> <call><name pos:line="81" pos:column="18">sqlite3HexToInt<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name><name pos:line="81" pos:column="34">zUri<pos:position pos:line="81" pos:column="38"/></name><index pos:line="81" pos:column="38">[<expr><name pos:line="81" pos:column="39">iIn<pos:position pos:line="81" pos:column="42"/></name><operator pos:line="81" pos:column="42">++<pos:position pos:line="81" pos:column="44"/></operator></expr>]<pos:position pos:line="81" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="83" pos:column="9">assert<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">( <argument><expr><name pos:line="83" pos:column="17">octet<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">&gt;=<pos:position pos:line="83" pos:column="27"/></operator><literal type="number" pos:line="83" pos:column="24">0<pos:position pos:line="83" pos:column="25"/></literal> <operator pos:line="83" pos:column="26">&amp;&amp;<pos:position pos:line="83" pos:column="36"/></operator> <name pos:line="83" pos:column="29">octet<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">&lt;<pos:position pos:line="83" pos:column="38"/></operator><literal type="number" pos:line="83" pos:column="35">256<pos:position pos:line="83" pos:column="38"/></literal></expr></argument> )<pos:position pos:line="83" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="41"/></expr_stmt>
        <if pos:line="84" pos:column="9">if<condition pos:line="84" pos:column="11">( <expr><name pos:line="84" pos:column="13">octet<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">==<pos:position pos:line="84" pos:column="20"/></operator><literal type="number" pos:line="84" pos:column="20">0<pos:position pos:line="84" pos:column="21"/></literal></expr> )<pos:position pos:line="84" pos:column="23"/></condition><then><block pos:line="84" pos:column="23">{
<cpp:ifndef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifndef<pos:position pos:line="85" pos:column="8"/></cpp:directive> <name pos:line="85" pos:column="9">SQLITE_ENABLE_URI_00_ERROR<pos:position pos:line="85" pos:column="35"/></name></cpp:ifndef>
          <comment type="block" pos:line="86" pos:column="11">/* This branch is taken when "%00" appears within the URI. In this
          ** case we ignore all text in the remainder of the path, name or
          ** value currently being parsed. So ignore the current character
          ** and skip to the next "?", "=" or "&amp;", as appropriate. */</comment>
          <while pos:line="90" pos:column="11">while<condition pos:line="90" pos:column="16">( <expr><operator pos:line="90" pos:column="18">(<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">c<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <name><name pos:line="90" pos:column="23">zUri<pos:position pos:line="90" pos:column="27"/></name><index pos:line="90" pos:column="27">[<expr><name pos:line="90" pos:column="28">iIn<pos:position pos:line="90" pos:column="31"/></name></expr>]<pos:position pos:line="90" pos:column="32"/></index></name><operator pos:line="90" pos:column="32">)<pos:position pos:line="90" pos:column="33"/></operator><operator pos:line="90" pos:column="33">!=<pos:position pos:line="90" pos:column="35"/></operator><literal type="number" pos:line="90" pos:column="35">0<pos:position pos:line="90" pos:column="36"/></literal> <operator pos:line="90" pos:column="37">&amp;&amp;<pos:position pos:line="90" pos:column="47"/></operator> <name pos:line="90" pos:column="40">c<pos:position pos:line="90" pos:column="41"/></name><operator pos:line="90" pos:column="41">!=<pos:position pos:line="90" pos:column="43"/></operator><literal type="char" pos:line="90" pos:column="43">'#'<pos:position pos:line="90" pos:column="46"/></literal> 
              <operator pos:line="91" pos:column="15">&amp;&amp;<pos:position pos:line="91" pos:column="25"/></operator> <operator pos:line="91" pos:column="18">(<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">eState<pos:position pos:line="91" pos:column="25"/></name><operator pos:line="91" pos:column="25">!=<pos:position pos:line="91" pos:column="27"/></operator><literal type="number" pos:line="91" pos:column="27">0<pos:position pos:line="91" pos:column="28"/></literal> <operator pos:line="91" pos:column="29">||<pos:position pos:line="91" pos:column="31"/></operator> <name pos:line="91" pos:column="32">c<pos:position pos:line="91" pos:column="33"/></name><operator pos:line="91" pos:column="33">!=<pos:position pos:line="91" pos:column="35"/></operator><literal type="char" pos:line="91" pos:column="35">'?'<pos:position pos:line="91" pos:column="38"/></literal><operator pos:line="91" pos:column="38">)<pos:position pos:line="91" pos:column="39"/></operator>
              <operator pos:line="92" pos:column="15">&amp;&amp;<pos:position pos:line="92" pos:column="25"/></operator> <operator pos:line="92" pos:column="18">(<pos:position pos:line="92" pos:column="19"/></operator><name pos:line="92" pos:column="19">eState<pos:position pos:line="92" pos:column="25"/></name><operator pos:line="92" pos:column="25">!=<pos:position pos:line="92" pos:column="27"/></operator><literal type="number" pos:line="92" pos:column="27">1<pos:position pos:line="92" pos:column="28"/></literal> <operator pos:line="92" pos:column="29">||<pos:position pos:line="92" pos:column="31"/></operator> <operator pos:line="92" pos:column="32">(<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="33">c<pos:position pos:line="92" pos:column="34"/></name><operator pos:line="92" pos:column="34">!=<pos:position pos:line="92" pos:column="36"/></operator><literal type="char" pos:line="92" pos:column="36">'='<pos:position pos:line="92" pos:column="39"/></literal> <operator pos:line="92" pos:column="40">&amp;&amp;<pos:position pos:line="92" pos:column="50"/></operator> <name pos:line="92" pos:column="43">c<pos:position pos:line="92" pos:column="44"/></name><operator pos:line="92" pos:column="44">!=<pos:position pos:line="92" pos:column="46"/></operator><literal type="char" pos:line="92" pos:column="46">'&amp;'<pos:position pos:line="92" pos:column="53"/></literal><operator pos:line="92" pos:column="49">)<pos:position pos:line="92" pos:column="50"/></operator><operator pos:line="92" pos:column="50">)<pos:position pos:line="92" pos:column="51"/></operator>
              <operator pos:line="93" pos:column="15">&amp;&amp;<pos:position pos:line="93" pos:column="25"/></operator> <operator pos:line="93" pos:column="18">(<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="19">eState<pos:position pos:line="93" pos:column="25"/></name><operator pos:line="93" pos:column="25">!=<pos:position pos:line="93" pos:column="27"/></operator><literal type="number" pos:line="93" pos:column="27">2<pos:position pos:line="93" pos:column="28"/></literal> <operator pos:line="93" pos:column="29">||<pos:position pos:line="93" pos:column="31"/></operator> <name pos:line="93" pos:column="32">c<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">!=<pos:position pos:line="93" pos:column="35"/></operator><literal type="char" pos:line="93" pos:column="35">'&amp;'<pos:position pos:line="93" pos:column="42"/></literal><operator pos:line="93" pos:column="38">)<pos:position pos:line="93" pos:column="39"/></operator></expr>
          )<pos:position pos:line="94" pos:column="12"/></condition><block pos:line="94" pos:column="12">{
            <expr_stmt><expr><name pos:line="95" pos:column="13">iIn<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">++<pos:position pos:line="95" pos:column="18"/></operator></expr>;<pos:position pos:line="95" pos:column="19"/></expr_stmt>
          }<pos:position pos:line="96" pos:column="12"/></block></while>
          <continue pos:line="97" pos:column="11">continue;<pos:position pos:line="97" pos:column="20"/></continue>
<cpp:else pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">else<pos:position pos:line="98" pos:column="6"/></cpp:directive></cpp:else>
          <comment type="block" pos:line="99" pos:column="11">/* If ENABLE_URI_00_ERROR is defined, "%00" in a URI is an error. */</comment>
          <expr_stmt><expr><operator pos:line="100" pos:column="11">*<pos:position pos:line="100" pos:column="12"/></operator><name pos:line="100" pos:column="12">pzErrMsg<pos:position pos:line="100" pos:column="20"/></name> <operator pos:line="100" pos:column="21">=<pos:position pos:line="100" pos:column="22"/></operator> <call><name pos:line="100" pos:column="23">sqlite3_mprintf<pos:position pos:line="100" pos:column="38"/></name><argument_list pos:line="100" pos:column="38">(<argument><expr><literal type="string" pos:line="100" pos:column="39">"unexpected %%00 in uri"<pos:position pos:line="100" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="65"/></expr_stmt>
          <expr_stmt><expr><name pos:line="101" pos:column="11">rc<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <name pos:line="101" pos:column="16">SQLITE_ERROR<pos:position pos:line="101" pos:column="28"/></name></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>
          <goto pos:line="102" pos:column="11">goto <name pos:line="102" pos:column="16">parse_uri_out<pos:position pos:line="102" pos:column="29"/></name>;<pos:position pos:line="102" pos:column="30"/></goto>
<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="105" pos:column="9">c<pos:position pos:line="105" pos:column="10"/></name> <operator pos:line="105" pos:column="11">=<pos:position pos:line="105" pos:column="12"/></operator> <name pos:line="105" pos:column="13">octet<pos:position pos:line="105" pos:column="18"/></name></expr>;<pos:position pos:line="105" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="106" pos:column="8"/></block></then><elseif pos:line="106" pos:column="8">else <if pos:line="106" pos:column="13">if<condition pos:line="106" pos:column="15">( <expr><name pos:line="106" pos:column="17">eState<pos:position pos:line="106" pos:column="23"/></name><operator pos:line="106" pos:column="23">==<pos:position pos:line="106" pos:column="25"/></operator><literal type="number" pos:line="106" pos:column="25">1<pos:position pos:line="106" pos:column="26"/></literal> <operator pos:line="106" pos:column="27">&amp;&amp;<pos:position pos:line="106" pos:column="37"/></operator> <operator pos:line="106" pos:column="30">(<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="31">c<pos:position pos:line="106" pos:column="32"/></name><operator pos:line="106" pos:column="32">==<pos:position pos:line="106" pos:column="34"/></operator><literal type="char" pos:line="106" pos:column="34">'&amp;'<pos:position pos:line="106" pos:column="41"/></literal> <operator pos:line="106" pos:column="38">||<pos:position pos:line="106" pos:column="40"/></operator> <name pos:line="106" pos:column="41">c<pos:position pos:line="106" pos:column="42"/></name><operator pos:line="106" pos:column="42">==<pos:position pos:line="106" pos:column="44"/></operator><literal type="char" pos:line="106" pos:column="44">'='<pos:position pos:line="106" pos:column="47"/></literal><operator pos:line="106" pos:column="47">)<pos:position pos:line="106" pos:column="48"/></operator></expr> )<pos:position pos:line="106" pos:column="50"/></condition><then><block pos:line="106" pos:column="50">{
        <if pos:line="107" pos:column="9">if<condition pos:line="107" pos:column="11">( <expr><name><name pos:line="107" pos:column="13">zFile<pos:position pos:line="107" pos:column="18"/></name><index pos:line="107" pos:column="18">[<expr><name pos:line="107" pos:column="19">iOut<pos:position pos:line="107" pos:column="23"/></name><operator pos:line="107" pos:column="23">-<pos:position pos:line="107" pos:column="24"/></operator><literal type="number" pos:line="107" pos:column="24">1<pos:position pos:line="107" pos:column="25"/></literal></expr>]<pos:position pos:line="107" pos:column="26"/></index></name><operator pos:line="107" pos:column="26">==<pos:position pos:line="107" pos:column="28"/></operator><literal type="number" pos:line="107" pos:column="28">0<pos:position pos:line="107" pos:column="29"/></literal></expr> )<pos:position pos:line="107" pos:column="31"/></condition><then><block pos:line="107" pos:column="31">{
          <comment type="block" pos:line="108" pos:column="11">/* An empty option name. Ignore this option altogether. */</comment>
          <while pos:line="109" pos:column="11">while<condition pos:line="109" pos:column="16">( <expr><name><name pos:line="109" pos:column="18">zUri<pos:position pos:line="109" pos:column="22"/></name><index pos:line="109" pos:column="22">[<expr><name pos:line="109" pos:column="23">iIn<pos:position pos:line="109" pos:column="26"/></name></expr>]<pos:position pos:line="109" pos:column="27"/></index></name> <operator pos:line="109" pos:column="28">&amp;&amp;<pos:position pos:line="109" pos:column="38"/></operator> <name><name pos:line="109" pos:column="31">zUri<pos:position pos:line="109" pos:column="35"/></name><index pos:line="109" pos:column="35">[<expr><name pos:line="109" pos:column="36">iIn<pos:position pos:line="109" pos:column="39"/></name></expr>]<pos:position pos:line="109" pos:column="40"/></index></name><operator pos:line="109" pos:column="40">!=<pos:position pos:line="109" pos:column="42"/></operator><literal type="char" pos:line="109" pos:column="42">'#'<pos:position pos:line="109" pos:column="45"/></literal> <operator pos:line="109" pos:column="46">&amp;&amp;<pos:position pos:line="109" pos:column="56"/></operator> <name><name pos:line="109" pos:column="49">zUri<pos:position pos:line="109" pos:column="53"/></name><index pos:line="109" pos:column="53">[<expr><name pos:line="109" pos:column="54">iIn<pos:position pos:line="109" pos:column="57"/></name><operator pos:line="109" pos:column="57">-<pos:position pos:line="109" pos:column="58"/></operator><literal type="number" pos:line="109" pos:column="58">1<pos:position pos:line="109" pos:column="59"/></literal></expr>]<pos:position pos:line="109" pos:column="60"/></index></name><operator pos:line="109" pos:column="60">!=<pos:position pos:line="109" pos:column="62"/></operator><literal type="char" pos:line="109" pos:column="62">'&amp;'<pos:position pos:line="109" pos:column="69"/></literal></expr> )<pos:position pos:line="109" pos:column="67"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="68">iIn<pos:position pos:line="109" pos:column="71"/></name><operator pos:line="109" pos:column="71">++<pos:position pos:line="109" pos:column="73"/></operator></expr>;<pos:position pos:line="109" pos:column="74"/></expr_stmt></block></while>
          <continue pos:line="110" pos:column="11">continue;<pos:position pos:line="110" pos:column="20"/></continue>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>
        <if pos:line="112" pos:column="9">if<condition pos:line="112" pos:column="11">( <expr><name pos:line="112" pos:column="13">c<pos:position pos:line="112" pos:column="14"/></name><operator pos:line="112" pos:column="14">==<pos:position pos:line="112" pos:column="16"/></operator><literal type="char" pos:line="112" pos:column="16">'&amp;'<pos:position pos:line="112" pos:column="23"/></literal></expr> )<pos:position pos:line="112" pos:column="21"/></condition><then><block pos:line="112" pos:column="21">{
          <expr_stmt><expr><name><name pos:line="113" pos:column="11">zFile<pos:position pos:line="113" pos:column="16"/></name><index pos:line="113" pos:column="16">[<expr><name pos:line="113" pos:column="17">iOut<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">++<pos:position pos:line="113" pos:column="23"/></operator></expr>]<pos:position pos:line="113" pos:column="24"/></index></name> <operator pos:line="113" pos:column="25">=<pos:position pos:line="113" pos:column="26"/></operator> <literal type="char" pos:line="113" pos:column="27">'\0'<pos:position pos:line="113" pos:column="31"/></literal></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="114" pos:column="10"/></block></then><else pos:line="114" pos:column="10">else<block pos:line="114" pos:column="14">{
          <expr_stmt><expr><name pos:line="115" pos:column="11">eState<pos:position pos:line="115" pos:column="17"/></name> <operator pos:line="115" pos:column="18">=<pos:position pos:line="115" pos:column="19"/></operator> <literal type="number" pos:line="115" pos:column="20">2<pos:position pos:line="115" pos:column="21"/></literal></expr>;<pos:position pos:line="115" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="117" pos:column="9">c<pos:position pos:line="117" pos:column="10"/></name> <operator pos:line="117" pos:column="11">=<pos:position pos:line="117" pos:column="12"/></operator> <literal type="number" pos:line="117" pos:column="13">0<pos:position pos:line="117" pos:column="14"/></literal></expr>;<pos:position pos:line="117" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="118" pos:column="8"/></block></then></if></elseif><elseif pos:line="118" pos:column="8">else <if pos:line="118" pos:column="13">if<condition pos:line="118" pos:column="15">( <expr><operator pos:line="118" pos:column="17">(<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="18">eState<pos:position pos:line="118" pos:column="24"/></name><operator pos:line="118" pos:column="24">==<pos:position pos:line="118" pos:column="26"/></operator><literal type="number" pos:line="118" pos:column="26">0<pos:position pos:line="118" pos:column="27"/></literal> <operator pos:line="118" pos:column="28">&amp;&amp;<pos:position pos:line="118" pos:column="38"/></operator> <name pos:line="118" pos:column="31">c<pos:position pos:line="118" pos:column="32"/></name><operator pos:line="118" pos:column="32">==<pos:position pos:line="118" pos:column="34"/></operator><literal type="char" pos:line="118" pos:column="34">'?'<pos:position pos:line="118" pos:column="37"/></literal><operator pos:line="118" pos:column="37">)<pos:position pos:line="118" pos:column="38"/></operator> <operator pos:line="118" pos:column="39">||<pos:position pos:line="118" pos:column="41"/></operator> <operator pos:line="118" pos:column="42">(<pos:position pos:line="118" pos:column="43"/></operator><name pos:line="118" pos:column="43">eState<pos:position pos:line="118" pos:column="49"/></name><operator pos:line="118" pos:column="49">==<pos:position pos:line="118" pos:column="51"/></operator><literal type="number" pos:line="118" pos:column="51">2<pos:position pos:line="118" pos:column="52"/></literal> <operator pos:line="118" pos:column="53">&amp;&amp;<pos:position pos:line="118" pos:column="63"/></operator> <name pos:line="118" pos:column="56">c<pos:position pos:line="118" pos:column="57"/></name><operator pos:line="118" pos:column="57">==<pos:position pos:line="118" pos:column="59"/></operator><literal type="char" pos:line="118" pos:column="59">'&amp;'<pos:position pos:line="118" pos:column="66"/></literal><operator pos:line="118" pos:column="62">)<pos:position pos:line="118" pos:column="63"/></operator></expr> )<pos:position pos:line="118" pos:column="65"/></condition><then><block pos:line="118" pos:column="65">{
        <expr_stmt><expr><name pos:line="119" pos:column="9">c<pos:position pos:line="119" pos:column="10"/></name> <operator pos:line="119" pos:column="11">=<pos:position pos:line="119" pos:column="12"/></operator> <literal type="number" pos:line="119" pos:column="13">0<pos:position pos:line="119" pos:column="14"/></literal></expr>;<pos:position pos:line="119" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">eState<pos:position pos:line="120" pos:column="15"/></name> <operator pos:line="120" pos:column="16">=<pos:position pos:line="120" pos:column="17"/></operator> <literal type="number" pos:line="120" pos:column="18">1<pos:position pos:line="120" pos:column="19"/></literal></expr>;<pos:position pos:line="120" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="121" pos:column="8"/></block></then></if></elseif></if>
      <expr_stmt><expr><name><name pos:line="122" pos:column="7">zFile<pos:position pos:line="122" pos:column="12"/></name><index pos:line="122" pos:column="12">[<expr><name pos:line="122" pos:column="13">iOut<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">++<pos:position pos:line="122" pos:column="19"/></operator></expr>]<pos:position pos:line="122" pos:column="20"/></index></name> <operator pos:line="122" pos:column="21">=<pos:position pos:line="122" pos:column="22"/></operator> <name pos:line="122" pos:column="23">c<pos:position pos:line="122" pos:column="24"/></name></expr>;<pos:position pos:line="122" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="123" pos:column="6"/></block></while>
    <if pos:line="124" pos:column="5">if<condition pos:line="124" pos:column="7">( <expr><name pos:line="124" pos:column="9">eState<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">==<pos:position pos:line="124" pos:column="17"/></operator><literal type="number" pos:line="124" pos:column="17">1<pos:position pos:line="124" pos:column="18"/></literal></expr> )<pos:position pos:line="124" pos:column="20"/></condition><then pos:line="124" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="21">zFile<pos:position pos:line="124" pos:column="26"/></name><index pos:line="124" pos:column="26">[<expr><name pos:line="124" pos:column="27">iOut<pos:position pos:line="124" pos:column="31"/></name><operator pos:line="124" pos:column="31">++<pos:position pos:line="124" pos:column="33"/></operator></expr>]<pos:position pos:line="124" pos:column="34"/></index></name> <operator pos:line="124" pos:column="35">=<pos:position pos:line="124" pos:column="36"/></operator> <literal type="char" pos:line="124" pos:column="37">'\0'<pos:position pos:line="124" pos:column="41"/></literal></expr>;<pos:position pos:line="124" pos:column="42"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="125" pos:column="5">zFile<pos:position pos:line="125" pos:column="10"/></name><index pos:line="125" pos:column="10">[<expr><name pos:line="125" pos:column="11">iOut<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">++<pos:position pos:line="125" pos:column="17"/></operator></expr>]<pos:position pos:line="125" pos:column="18"/></index></name> <operator pos:line="125" pos:column="19">=<pos:position pos:line="125" pos:column="20"/></operator> <literal type="char" pos:line="125" pos:column="21">'\0'<pos:position pos:line="125" pos:column="25"/></literal></expr>;<pos:position pos:line="125" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="126" pos:column="5">zFile<pos:position pos:line="126" pos:column="10"/></name><index pos:line="126" pos:column="10">[<expr><name pos:line="126" pos:column="11">iOut<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">++<pos:position pos:line="126" pos:column="17"/></operator></expr>]<pos:position pos:line="126" pos:column="18"/></index></name> <operator pos:line="126" pos:column="19">=<pos:position pos:line="126" pos:column="20"/></operator> <literal type="char" pos:line="126" pos:column="21">'\0'<pos:position pos:line="126" pos:column="25"/></literal></expr>;<pos:position pos:line="126" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="128" pos:column="5">/* Check if there were any options specified that should be interpreted 
    ** here. Options that are interpreted here include "vfs" and those that
    ** correspond to flags that may be passed to the sqlite3_open_v2()
    ** method. */</comment>
    <expr_stmt><expr><name pos:line="132" pos:column="5">zOpt<pos:position pos:line="132" pos:column="9"/></name> <operator pos:line="132" pos:column="10">=<pos:position pos:line="132" pos:column="11"/></operator> <operator pos:line="132" pos:column="12">&amp;<pos:position pos:line="132" pos:column="17"/></operator><name><name pos:line="132" pos:column="13">zFile<pos:position pos:line="132" pos:column="18"/></name><index pos:line="132" pos:column="18">[<expr><call><name pos:line="132" pos:column="19">sqlite3Strlen30<pos:position pos:line="132" pos:column="34"/></name><argument_list pos:line="132" pos:column="34">(<argument><expr><name pos:line="132" pos:column="35">zFile<pos:position pos:line="132" pos:column="40"/></name></expr></argument>)<pos:position pos:line="132" pos:column="41"/></argument_list></call><operator pos:line="132" pos:column="41">+<pos:position pos:line="132" pos:column="42"/></operator><literal type="number" pos:line="132" pos:column="42">1<pos:position pos:line="132" pos:column="43"/></literal></expr>]<pos:position pos:line="132" pos:column="44"/></index></name></expr>;<pos:position pos:line="132" pos:column="45"/></expr_stmt>
    <while pos:line="133" pos:column="5">while<condition pos:line="133" pos:column="10">( <expr><name><name pos:line="133" pos:column="12">zOpt<pos:position pos:line="133" pos:column="16"/></name><index pos:line="133" pos:column="16">[<expr><literal type="number" pos:line="133" pos:column="17">0<pos:position pos:line="133" pos:column="18"/></literal></expr>]<pos:position pos:line="133" pos:column="19"/></index></name></expr> )<pos:position pos:line="133" pos:column="21"/></condition><block pos:line="133" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="134" pos:column="7">int<pos:position pos:line="134" pos:column="10"/></name></type> <name pos:line="134" pos:column="11">nOpt<pos:position pos:line="134" pos:column="15"/></name> <init pos:line="134" pos:column="16">= <expr><call><name pos:line="134" pos:column="18">sqlite3Strlen30<pos:position pos:line="134" pos:column="33"/></name><argument_list pos:line="134" pos:column="33">(<argument><expr><name pos:line="134" pos:column="34">zOpt<pos:position pos:line="134" pos:column="38"/></name></expr></argument>)<pos:position pos:line="134" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="134" pos:column="40"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="135" pos:column="7">char<pos:position pos:line="135" pos:column="11"/></name> <modifier pos:line="135" pos:column="12">*<pos:position pos:line="135" pos:column="13"/></modifier></type><name pos:line="135" pos:column="13">zVal<pos:position pos:line="135" pos:column="17"/></name> <init pos:line="135" pos:column="18">= <expr><operator pos:line="135" pos:column="20">&amp;<pos:position pos:line="135" pos:column="25"/></operator><name><name pos:line="135" pos:column="21">zOpt<pos:position pos:line="135" pos:column="25"/></name><index pos:line="135" pos:column="25">[<expr><name pos:line="135" pos:column="26">nOpt<pos:position pos:line="135" pos:column="30"/></name><operator pos:line="135" pos:column="30">+<pos:position pos:line="135" pos:column="31"/></operator><literal type="number" pos:line="135" pos:column="31">1<pos:position pos:line="135" pos:column="32"/></literal></expr>]<pos:position pos:line="135" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="135" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="136" pos:column="7">int<pos:position pos:line="136" pos:column="10"/></name></type> <name pos:line="136" pos:column="11">nVal<pos:position pos:line="136" pos:column="15"/></name> <init pos:line="136" pos:column="16">= <expr><call><name pos:line="136" pos:column="18">sqlite3Strlen30<pos:position pos:line="136" pos:column="33"/></name><argument_list pos:line="136" pos:column="33">(<argument><expr><name pos:line="136" pos:column="34">zVal<pos:position pos:line="136" pos:column="38"/></name></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="136" pos:column="40"/></decl_stmt>

      <if pos:line="138" pos:column="7">if<condition pos:line="138" pos:column="9">( <expr><name pos:line="138" pos:column="11">nOpt<pos:position pos:line="138" pos:column="15"/></name><operator pos:line="138" pos:column="15">==<pos:position pos:line="138" pos:column="17"/></operator><literal type="number" pos:line="138" pos:column="17">3<pos:position pos:line="138" pos:column="18"/></literal> <operator pos:line="138" pos:column="19">&amp;&amp;<pos:position pos:line="138" pos:column="29"/></operator> <call><name pos:line="138" pos:column="22">memcmp<pos:position pos:line="138" pos:column="28"/></name><argument_list pos:line="138" pos:column="28">(<argument><expr><literal type="string" pos:line="138" pos:column="29">"vfs"<pos:position pos:line="138" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="36">zOpt<pos:position pos:line="138" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="42">3<pos:position pos:line="138" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="44"/></argument_list></call><operator pos:line="138" pos:column="44">==<pos:position pos:line="138" pos:column="46"/></operator><literal type="number" pos:line="138" pos:column="46">0<pos:position pos:line="138" pos:column="47"/></literal></expr> )<pos:position pos:line="138" pos:column="49"/></condition><then><block pos:line="138" pos:column="49">{
        <expr_stmt><expr><name pos:line="139" pos:column="9">zVfs<pos:position pos:line="139" pos:column="13"/></name> <operator pos:line="139" pos:column="14">=<pos:position pos:line="139" pos:column="15"/></operator> <name pos:line="139" pos:column="16">zVal<pos:position pos:line="139" pos:column="20"/></name></expr>;<pos:position pos:line="139" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="140" pos:column="8"/></block></then><else pos:line="140" pos:column="8">else<block pos:line="140" pos:column="12">{
        <struct pos:line="141" pos:column="9">struct <name pos:line="141" pos:column="16">OpenMode<pos:position pos:line="141" pos:column="24"/></name> <block pos:line="141" pos:column="25">{<public type="default" pos:line="141" pos:column="26">
          <decl_stmt><decl><type><specifier pos:line="142" pos:column="11">const<pos:position pos:line="142" pos:column="16"/></specifier> <name pos:line="142" pos:column="17">char<pos:position pos:line="142" pos:column="21"/></name> <modifier pos:line="142" pos:column="22">*<pos:position pos:line="142" pos:column="23"/></modifier></type><name pos:line="142" pos:column="23">z<pos:position pos:line="142" pos:column="24"/></name></decl>;<pos:position pos:line="142" pos:column="25"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="143" pos:column="11">int<pos:position pos:line="143" pos:column="14"/></name></type> <name pos:line="143" pos:column="15">mode<pos:position pos:line="143" pos:column="19"/></name></decl>;<pos:position pos:line="143" pos:column="20"/></decl_stmt>
        <pos:position pos:line="144" pos:column="9"/></public>}<pos:position pos:line="144" pos:column="10"/></block> <decl><modifier pos:line="144" pos:column="11">*<pos:position pos:line="144" pos:column="12"/></modifier><name pos:line="144" pos:column="12">aMode<pos:position pos:line="144" pos:column="17"/></name> <init pos:line="144" pos:column="18">= <expr><literal type="number" pos:line="144" pos:column="20">0<pos:position pos:line="144" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="144" pos:column="22"/></struct>
        <decl_stmt><decl><type><name pos:line="145" pos:column="9">char<pos:position pos:line="145" pos:column="13"/></name> <modifier pos:line="145" pos:column="14">*<pos:position pos:line="145" pos:column="15"/></modifier></type><name pos:line="145" pos:column="15">zModeType<pos:position pos:line="145" pos:column="24"/></name> <init pos:line="145" pos:column="25">= <expr><literal type="number" pos:line="145" pos:column="27">0<pos:position pos:line="145" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="145" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="146" pos:column="9">int<pos:position pos:line="146" pos:column="12"/></name></type> <name pos:line="146" pos:column="13">mask<pos:position pos:line="146" pos:column="17"/></name> <init pos:line="146" pos:column="18">= <expr><literal type="number" pos:line="146" pos:column="20">0<pos:position pos:line="146" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="146" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="147" pos:column="9">int<pos:position pos:line="147" pos:column="12"/></name></type> <name pos:line="147" pos:column="13">limit<pos:position pos:line="147" pos:column="18"/></name> <init pos:line="147" pos:column="19">= <expr><literal type="number" pos:line="147" pos:column="21">0<pos:position pos:line="147" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="147" pos:column="23"/></decl_stmt>

        <if pos:line="149" pos:column="9">if<condition pos:line="149" pos:column="11">( <expr><name pos:line="149" pos:column="13">nOpt<pos:position pos:line="149" pos:column="17"/></name><operator pos:line="149" pos:column="17">==<pos:position pos:line="149" pos:column="19"/></operator><literal type="number" pos:line="149" pos:column="19">5<pos:position pos:line="149" pos:column="20"/></literal> <operator pos:line="149" pos:column="21">&amp;&amp;<pos:position pos:line="149" pos:column="31"/></operator> <call><name pos:line="149" pos:column="24">memcmp<pos:position pos:line="149" pos:column="30"/></name><argument_list pos:line="149" pos:column="30">(<argument><expr><literal type="string" pos:line="149" pos:column="31">"cache"<pos:position pos:line="149" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="40">zOpt<pos:position pos:line="149" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="46">5<pos:position pos:line="149" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="48"/></argument_list></call><operator pos:line="149" pos:column="48">==<pos:position pos:line="149" pos:column="50"/></operator><literal type="number" pos:line="149" pos:column="50">0<pos:position pos:line="149" pos:column="51"/></literal></expr> )<pos:position pos:line="149" pos:column="53"/></condition><then><block pos:line="149" pos:column="53">{
          <decl_stmt><decl><specifier pos:line="150" pos:column="11">static<pos:position pos:line="150" pos:column="17"/></specifier> <type><name><name pos:line="150" pos:column="18">struct<pos:position pos:line="150" pos:column="24"/></name> <name pos:line="150" pos:column="25">OpenMode<pos:position pos:line="150" pos:column="33"/></name></name></type> <name><name pos:line="150" pos:column="34">aCacheMode<pos:position pos:line="150" pos:column="44"/></name><index pos:line="150" pos:column="44">[]<pos:position pos:line="150" pos:column="46"/></index></name> <init pos:line="150" pos:column="47">= <expr><block pos:line="150" pos:column="49">{
            <expr><block pos:line="151" pos:column="13">{ <expr><literal type="string" pos:line="151" pos:column="15">"shared"<pos:position pos:line="151" pos:column="23"/></literal></expr>,  <expr><name pos:line="151" pos:column="26">SQLITE_OPEN_SHAREDCACHE<pos:position pos:line="151" pos:column="49"/></name></expr> }<pos:position pos:line="151" pos:column="51"/></block></expr>,
            <expr><block pos:line="152" pos:column="13">{ <expr><literal type="string" pos:line="152" pos:column="15">"private"<pos:position pos:line="152" pos:column="24"/></literal></expr>, <expr><name pos:line="152" pos:column="26">SQLITE_OPEN_PRIVATECACHE<pos:position pos:line="152" pos:column="50"/></name></expr> }<pos:position pos:line="152" pos:column="52"/></block></expr>,
            <expr><block pos:line="153" pos:column="13">{ <expr><literal type="number" pos:line="153" pos:column="15">0<pos:position pos:line="153" pos:column="16"/></literal></expr>, <expr><literal type="number" pos:line="153" pos:column="18">0<pos:position pos:line="153" pos:column="19"/></literal></expr> }<pos:position pos:line="153" pos:column="21"/></block></expr>
          }<pos:position pos:line="154" pos:column="12"/></block></expr></init></decl>;<pos:position pos:line="154" pos:column="13"/></decl_stmt>

          <expr_stmt><expr><name pos:line="156" pos:column="11">mask<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">=<pos:position pos:line="156" pos:column="17"/></operator> <name pos:line="156" pos:column="18">SQLITE_OPEN_SHAREDCACHE<pos:position pos:line="156" pos:column="41"/></name><operator pos:line="156" pos:column="41">|<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="42">SQLITE_OPEN_PRIVATECACHE<pos:position pos:line="156" pos:column="66"/></name></expr>;<pos:position pos:line="156" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name pos:line="157" pos:column="11">aMode<pos:position pos:line="157" pos:column="16"/></name> <operator pos:line="157" pos:column="17">=<pos:position pos:line="157" pos:column="18"/></operator> <name pos:line="157" pos:column="19">aCacheMode<pos:position pos:line="157" pos:column="29"/></name></expr>;<pos:position pos:line="157" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><name pos:line="158" pos:column="11">limit<pos:position pos:line="158" pos:column="16"/></name> <operator pos:line="158" pos:column="17">=<pos:position pos:line="158" pos:column="18"/></operator> <name pos:line="158" pos:column="19">mask<pos:position pos:line="158" pos:column="23"/></name></expr>;<pos:position pos:line="158" pos:column="24"/></expr_stmt>
          <expr_stmt><expr><name pos:line="159" pos:column="11">zModeType<pos:position pos:line="159" pos:column="20"/></name> <operator pos:line="159" pos:column="21">=<pos:position pos:line="159" pos:column="22"/></operator> <literal type="string" pos:line="159" pos:column="23">"cache"<pos:position pos:line="159" pos:column="30"/></literal></expr>;<pos:position pos:line="159" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="160" pos:column="10"/></block></then></if>
        <if pos:line="161" pos:column="9">if<condition pos:line="161" pos:column="11">( <expr><name pos:line="161" pos:column="13">nOpt<pos:position pos:line="161" pos:column="17"/></name><operator pos:line="161" pos:column="17">==<pos:position pos:line="161" pos:column="19"/></operator><literal type="number" pos:line="161" pos:column="19">4<pos:position pos:line="161" pos:column="20"/></literal> <operator pos:line="161" pos:column="21">&amp;&amp;<pos:position pos:line="161" pos:column="31"/></operator> <call><name pos:line="161" pos:column="24">memcmp<pos:position pos:line="161" pos:column="30"/></name><argument_list pos:line="161" pos:column="30">(<argument><expr><literal type="string" pos:line="161" pos:column="31">"mode"<pos:position pos:line="161" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="161" pos:column="39">zOpt<pos:position pos:line="161" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="45">4<pos:position pos:line="161" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="47"/></argument_list></call><operator pos:line="161" pos:column="47">==<pos:position pos:line="161" pos:column="49"/></operator><literal type="number" pos:line="161" pos:column="49">0<pos:position pos:line="161" pos:column="50"/></literal></expr> )<pos:position pos:line="161" pos:column="52"/></condition><then><block pos:line="161" pos:column="52">{
          <decl_stmt><decl><specifier pos:line="162" pos:column="11">static<pos:position pos:line="162" pos:column="17"/></specifier> <type><name><name pos:line="162" pos:column="18">struct<pos:position pos:line="162" pos:column="24"/></name> <name pos:line="162" pos:column="25">OpenMode<pos:position pos:line="162" pos:column="33"/></name></name></type> <name><name pos:line="162" pos:column="34">aOpenMode<pos:position pos:line="162" pos:column="43"/></name><index pos:line="162" pos:column="43">[]<pos:position pos:line="162" pos:column="45"/></index></name> <init pos:line="162" pos:column="46">= <expr><block pos:line="162" pos:column="48">{
            <expr><block pos:line="163" pos:column="13">{ <expr><literal type="string" pos:line="163" pos:column="15">"ro"<pos:position pos:line="163" pos:column="19"/></literal></expr>,  <expr><name pos:line="163" pos:column="22">SQLITE_OPEN_READONLY<pos:position pos:line="163" pos:column="42"/></name></expr> }<pos:position pos:line="163" pos:column="44"/></block></expr>,
            <expr><block pos:line="164" pos:column="13">{ <expr><literal type="string" pos:line="164" pos:column="15">"rw"<pos:position pos:line="164" pos:column="19"/></literal></expr>,  <expr><name pos:line="164" pos:column="22">SQLITE_OPEN_READWRITE<pos:position pos:line="164" pos:column="43"/></name></expr> }<pos:position pos:line="164" pos:column="45"/></block></expr>, 
            <expr><block pos:line="165" pos:column="13">{ <expr><literal type="string" pos:line="165" pos:column="15">"rwc"<pos:position pos:line="165" pos:column="20"/></literal></expr>, <expr><name pos:line="165" pos:column="22">SQLITE_OPEN_READWRITE<pos:position pos:line="165" pos:column="43"/></name> <operator pos:line="165" pos:column="44">|<pos:position pos:line="165" pos:column="45"/></operator> <name pos:line="165" pos:column="46">SQLITE_OPEN_CREATE<pos:position pos:line="165" pos:column="64"/></name></expr> }<pos:position pos:line="165" pos:column="66"/></block></expr>,
            <expr><block pos:line="166" pos:column="13">{ <expr><literal type="string" pos:line="166" pos:column="15">"memory"<pos:position pos:line="166" pos:column="23"/></literal></expr>, <expr><name pos:line="166" pos:column="25">SQLITE_OPEN_MEMORY<pos:position pos:line="166" pos:column="43"/></name></expr> }<pos:position pos:line="166" pos:column="45"/></block></expr>,
            <expr><block pos:line="167" pos:column="13">{ <expr><literal type="number" pos:line="167" pos:column="15">0<pos:position pos:line="167" pos:column="16"/></literal></expr>, <expr><literal type="number" pos:line="167" pos:column="18">0<pos:position pos:line="167" pos:column="19"/></literal></expr> }<pos:position pos:line="167" pos:column="21"/></block></expr>
          }<pos:position pos:line="168" pos:column="12"/></block></expr></init></decl>;<pos:position pos:line="168" pos:column="13"/></decl_stmt>

          <expr_stmt><expr><name pos:line="170" pos:column="11">mask<pos:position pos:line="170" pos:column="15"/></name> <operator pos:line="170" pos:column="16">=<pos:position pos:line="170" pos:column="17"/></operator> <name pos:line="170" pos:column="18">SQLITE_OPEN_READONLY<pos:position pos:line="170" pos:column="38"/></name> <operator pos:line="170" pos:column="39">|<pos:position pos:line="170" pos:column="40"/></operator> <name pos:line="170" pos:column="41">SQLITE_OPEN_READWRITE<pos:position pos:line="170" pos:column="62"/></name>
                   <operator pos:line="171" pos:column="20">|<pos:position pos:line="171" pos:column="21"/></operator> <name pos:line="171" pos:column="22">SQLITE_OPEN_CREATE<pos:position pos:line="171" pos:column="40"/></name> <operator pos:line="171" pos:column="41">|<pos:position pos:line="171" pos:column="42"/></operator> <name pos:line="171" pos:column="43">SQLITE_OPEN_MEMORY<pos:position pos:line="171" pos:column="61"/></name></expr>;<pos:position pos:line="171" pos:column="62"/></expr_stmt>
          <expr_stmt><expr><name pos:line="172" pos:column="11">aMode<pos:position pos:line="172" pos:column="16"/></name> <operator pos:line="172" pos:column="17">=<pos:position pos:line="172" pos:column="18"/></operator> <name pos:line="172" pos:column="19">aOpenMode<pos:position pos:line="172" pos:column="28"/></name></expr>;<pos:position pos:line="172" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="173" pos:column="11">limit<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">=<pos:position pos:line="173" pos:column="18"/></operator> <name pos:line="173" pos:column="19">mask<pos:position pos:line="173" pos:column="23"/></name> <operator pos:line="173" pos:column="24">&amp;<pos:position pos:line="173" pos:column="29"/></operator> <name pos:line="173" pos:column="26">flags<pos:position pos:line="173" pos:column="31"/></name></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt>
          <expr_stmt><expr><name pos:line="174" pos:column="11">zModeType<pos:position pos:line="174" pos:column="20"/></name> <operator pos:line="174" pos:column="21">=<pos:position pos:line="174" pos:column="22"/></operator> <literal type="string" pos:line="174" pos:column="23">"access"<pos:position pos:line="174" pos:column="31"/></literal></expr>;<pos:position pos:line="174" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if>

        <if pos:line="177" pos:column="9">if<condition pos:line="177" pos:column="11">( <expr><name pos:line="177" pos:column="13">aMode<pos:position pos:line="177" pos:column="18"/></name></expr> )<pos:position pos:line="177" pos:column="20"/></condition><then><block pos:line="177" pos:column="20">{
          <decl_stmt><decl><type><name pos:line="178" pos:column="11">int<pos:position pos:line="178" pos:column="14"/></name></type> <name pos:line="178" pos:column="15">i<pos:position pos:line="178" pos:column="16"/></name></decl>;<pos:position pos:line="178" pos:column="17"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="179" pos:column="11">int<pos:position pos:line="179" pos:column="14"/></name></type> <name pos:line="179" pos:column="15">mode<pos:position pos:line="179" pos:column="19"/></name> <init pos:line="179" pos:column="20">= <expr><literal type="number" pos:line="179" pos:column="22">0<pos:position pos:line="179" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="179" pos:column="24"/></decl_stmt>
          <for pos:line="180" pos:column="11">for<control pos:line="180" pos:column="14">(<init><expr><name pos:line="180" pos:column="15">i<pos:position pos:line="180" pos:column="16"/></name><operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator><literal type="number" pos:line="180" pos:column="17">0<pos:position pos:line="180" pos:column="18"/></literal></expr>;<pos:position pos:line="180" pos:column="19"/></init> <condition><expr><name><name pos:line="180" pos:column="20">aMode<pos:position pos:line="180" pos:column="25"/></name><index pos:line="180" pos:column="25">[<expr><name pos:line="180" pos:column="26">i<pos:position pos:line="180" pos:column="27"/></name></expr>]<pos:position pos:line="180" pos:column="28"/></index></name><operator pos:line="180" pos:column="28">.<pos:position pos:line="180" pos:column="29"/></operator><name pos:line="180" pos:column="29">z<pos:position pos:line="180" pos:column="30"/></name></expr>;<pos:position pos:line="180" pos:column="31"/></condition> <incr><expr><name pos:line="180" pos:column="32">i<pos:position pos:line="180" pos:column="33"/></name><operator pos:line="180" pos:column="33">++<pos:position pos:line="180" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="180" pos:column="36"/></control><block pos:line="180" pos:column="36">{
            <decl_stmt><decl><type><specifier pos:line="181" pos:column="13">const<pos:position pos:line="181" pos:column="18"/></specifier> <name pos:line="181" pos:column="19">char<pos:position pos:line="181" pos:column="23"/></name> <modifier pos:line="181" pos:column="24">*<pos:position pos:line="181" pos:column="25"/></modifier></type><name pos:line="181" pos:column="25">z<pos:position pos:line="181" pos:column="26"/></name> <init pos:line="181" pos:column="27">= <expr><name><name pos:line="181" pos:column="29">aMode<pos:position pos:line="181" pos:column="34"/></name><index pos:line="181" pos:column="34">[<expr><name pos:line="181" pos:column="35">i<pos:position pos:line="181" pos:column="36"/></name></expr>]<pos:position pos:line="181" pos:column="37"/></index></name><operator pos:line="181" pos:column="37">.<pos:position pos:line="181" pos:column="38"/></operator><name pos:line="181" pos:column="38">z<pos:position pos:line="181" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="181" pos:column="40"/></decl_stmt>
            <if pos:line="182" pos:column="13">if<condition pos:line="182" pos:column="15">( <expr><name pos:line="182" pos:column="17">nVal<pos:position pos:line="182" pos:column="21"/></name><operator pos:line="182" pos:column="21">==<pos:position pos:line="182" pos:column="23"/></operator><call><name pos:line="182" pos:column="23">sqlite3Strlen30<pos:position pos:line="182" pos:column="38"/></name><argument_list pos:line="182" pos:column="38">(<argument><expr><name pos:line="182" pos:column="39">z<pos:position pos:line="182" pos:column="40"/></name></expr></argument>)<pos:position pos:line="182" pos:column="41"/></argument_list></call> <operator pos:line="182" pos:column="42">&amp;&amp;<pos:position pos:line="182" pos:column="52"/></operator> <literal type="number" pos:line="182" pos:column="45">0<pos:position pos:line="182" pos:column="46"/></literal><operator pos:line="182" pos:column="46">==<pos:position pos:line="182" pos:column="48"/></operator><call><name pos:line="182" pos:column="48">memcmp<pos:position pos:line="182" pos:column="54"/></name><argument_list pos:line="182" pos:column="54">(<argument><expr><name pos:line="182" pos:column="55">zVal<pos:position pos:line="182" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="61">z<pos:position pos:line="182" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="64">nVal<pos:position pos:line="182" pos:column="68"/></name></expr></argument>)<pos:position pos:line="182" pos:column="69"/></argument_list></call></expr> )<pos:position pos:line="182" pos:column="71"/></condition><then><block pos:line="182" pos:column="71">{
              <expr_stmt><expr><name pos:line="183" pos:column="15">mode<pos:position pos:line="183" pos:column="19"/></name> <operator pos:line="183" pos:column="20">=<pos:position pos:line="183" pos:column="21"/></operator> <name><name pos:line="183" pos:column="22">aMode<pos:position pos:line="183" pos:column="27"/></name><index pos:line="183" pos:column="27">[<expr><name pos:line="183" pos:column="28">i<pos:position pos:line="183" pos:column="29"/></name></expr>]<pos:position pos:line="183" pos:column="30"/></index></name><operator pos:line="183" pos:column="30">.<pos:position pos:line="183" pos:column="31"/></operator><name pos:line="183" pos:column="31">mode<pos:position pos:line="183" pos:column="35"/></name></expr>;<pos:position pos:line="183" pos:column="36"/></expr_stmt>
              <break pos:line="184" pos:column="15">break;<pos:position pos:line="184" pos:column="21"/></break>
            }<pos:position pos:line="185" pos:column="14"/></block></then></if>
          }<pos:position pos:line="186" pos:column="12"/></block></for>
          <if pos:line="187" pos:column="11">if<condition pos:line="187" pos:column="13">( <expr><name pos:line="187" pos:column="15">mode<pos:position pos:line="187" pos:column="19"/></name><operator pos:line="187" pos:column="19">==<pos:position pos:line="187" pos:column="21"/></operator><literal type="number" pos:line="187" pos:column="21">0<pos:position pos:line="187" pos:column="22"/></literal></expr> )<pos:position pos:line="187" pos:column="24"/></condition><then><block pos:line="187" pos:column="24">{
            <expr_stmt><expr><operator pos:line="188" pos:column="13">*<pos:position pos:line="188" pos:column="14"/></operator><name pos:line="188" pos:column="14">pzErrMsg<pos:position pos:line="188" pos:column="22"/></name> <operator pos:line="188" pos:column="23">=<pos:position pos:line="188" pos:column="24"/></operator> <call><name pos:line="188" pos:column="25">sqlite3_mprintf<pos:position pos:line="188" pos:column="40"/></name><argument_list pos:line="188" pos:column="40">(<argument><expr><literal type="string" pos:line="188" pos:column="41">"no such %s mode: %s"<pos:position pos:line="188" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="64">zModeType<pos:position pos:line="188" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="75">zVal<pos:position pos:line="188" pos:column="79"/></name></expr></argument>)<pos:position pos:line="188" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><name pos:line="189" pos:column="13">rc<pos:position pos:line="189" pos:column="15"/></name> <operator pos:line="189" pos:column="16">=<pos:position pos:line="189" pos:column="17"/></operator> <name pos:line="189" pos:column="18">SQLITE_ERROR<pos:position pos:line="189" pos:column="30"/></name></expr>;<pos:position pos:line="189" pos:column="31"/></expr_stmt>
            <goto pos:line="190" pos:column="13">goto <name pos:line="190" pos:column="18">parse_uri_out<pos:position pos:line="190" pos:column="31"/></name>;<pos:position pos:line="190" pos:column="32"/></goto>
          }<pos:position pos:line="191" pos:column="12"/></block></then></if>
          <if pos:line="192" pos:column="11">if<condition pos:line="192" pos:column="13">( <expr><operator pos:line="192" pos:column="15">(<pos:position pos:line="192" pos:column="16"/></operator><name pos:line="192" pos:column="16">mode<pos:position pos:line="192" pos:column="20"/></name> <operator pos:line="192" pos:column="21">&amp;<pos:position pos:line="192" pos:column="26"/></operator> <operator pos:line="192" pos:column="23">~<pos:position pos:line="192" pos:column="24"/></operator><name pos:line="192" pos:column="24">SQLITE_OPEN_MEMORY<pos:position pos:line="192" pos:column="42"/></name><operator pos:line="192" pos:column="42">)<pos:position pos:line="192" pos:column="43"/></operator><operator pos:line="192" pos:column="43">&gt;<pos:position pos:line="192" pos:column="47"/></operator><name pos:line="192" pos:column="44">limit<pos:position pos:line="192" pos:column="49"/></name></expr> )<pos:position pos:line="192" pos:column="51"/></condition><then><block pos:line="192" pos:column="51">{
            <expr_stmt><expr><operator pos:line="193" pos:column="13">*<pos:position pos:line="193" pos:column="14"/></operator><name pos:line="193" pos:column="14">pzErrMsg<pos:position pos:line="193" pos:column="22"/></name> <operator pos:line="193" pos:column="23">=<pos:position pos:line="193" pos:column="24"/></operator> <call><name pos:line="193" pos:column="25">sqlite3_mprintf<pos:position pos:line="193" pos:column="40"/></name><argument_list pos:line="193" pos:column="40">(<argument><expr><literal type="string" pos:line="193" pos:column="41">"%s mode not allowed: %s"<pos:position pos:line="193" pos:column="66"/></literal></expr></argument>,
                                        <argument><expr><name pos:line="194" pos:column="41">zModeType<pos:position pos:line="194" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="52">zVal<pos:position pos:line="194" pos:column="56"/></name></expr></argument>)<pos:position pos:line="194" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="195" pos:column="13">rc<pos:position pos:line="195" pos:column="15"/></name> <operator pos:line="195" pos:column="16">=<pos:position pos:line="195" pos:column="17"/></operator> <name pos:line="195" pos:column="18">SQLITE_PERM<pos:position pos:line="195" pos:column="29"/></name></expr>;<pos:position pos:line="195" pos:column="30"/></expr_stmt>
            <goto pos:line="196" pos:column="13">goto <name pos:line="196" pos:column="18">parse_uri_out<pos:position pos:line="196" pos:column="31"/></name>;<pos:position pos:line="196" pos:column="32"/></goto>
          }<pos:position pos:line="197" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name pos:line="198" pos:column="11">flags<pos:position pos:line="198" pos:column="16"/></name> <operator pos:line="198" pos:column="17">=<pos:position pos:line="198" pos:column="18"/></operator> <operator pos:line="198" pos:column="19">(<pos:position pos:line="198" pos:column="20"/></operator><name pos:line="198" pos:column="20">flags<pos:position pos:line="198" pos:column="25"/></name> <operator pos:line="198" pos:column="26">&amp;<pos:position pos:line="198" pos:column="31"/></operator> <operator pos:line="198" pos:column="28">~<pos:position pos:line="198" pos:column="29"/></operator><name pos:line="198" pos:column="29">mask<pos:position pos:line="198" pos:column="33"/></name><operator pos:line="198" pos:column="33">)<pos:position pos:line="198" pos:column="34"/></operator> <operator pos:line="198" pos:column="35">|<pos:position pos:line="198" pos:column="36"/></operator> <name pos:line="198" pos:column="37">mode<pos:position pos:line="198" pos:column="41"/></name></expr>;<pos:position pos:line="198" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>
      }<pos:position pos:line="200" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="202" pos:column="7">zOpt<pos:position pos:line="202" pos:column="11"/></name> <operator pos:line="202" pos:column="12">=<pos:position pos:line="202" pos:column="13"/></operator> <operator pos:line="202" pos:column="14">&amp;<pos:position pos:line="202" pos:column="19"/></operator><name><name pos:line="202" pos:column="15">zVal<pos:position pos:line="202" pos:column="19"/></name><index pos:line="202" pos:column="19">[<expr><name pos:line="202" pos:column="20">nVal<pos:position pos:line="202" pos:column="24"/></name><operator pos:line="202" pos:column="24">+<pos:position pos:line="202" pos:column="25"/></operator><literal type="number" pos:line="202" pos:column="25">1<pos:position pos:line="202" pos:column="26"/></literal></expr>]<pos:position pos:line="202" pos:column="27"/></index></name></expr>;<pos:position pos:line="202" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="203" pos:column="6"/></block></while>

  }<pos:position pos:line="205" pos:column="4"/></block></then><else pos:line="205" pos:column="4">else<block pos:line="205" pos:column="8">{
    <expr_stmt><expr><name pos:line="206" pos:column="5">zFile<pos:position pos:line="206" pos:column="10"/></name> <operator pos:line="206" pos:column="11">=<pos:position pos:line="206" pos:column="12"/></operator> <call><name pos:line="206" pos:column="13">sqlite3_malloc64<pos:position pos:line="206" pos:column="29"/></name><argument_list pos:line="206" pos:column="29">(<argument><expr><name pos:line="206" pos:column="30">nUri<pos:position pos:line="206" pos:column="34"/></name><operator pos:line="206" pos:column="34">+<pos:position pos:line="206" pos:column="35"/></operator><literal type="number" pos:line="206" pos:column="35">2<pos:position pos:line="206" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="38"/></expr_stmt>
    <if pos:line="207" pos:column="5">if<condition pos:line="207" pos:column="7">( <expr><operator pos:line="207" pos:column="9">!<pos:position pos:line="207" pos:column="10"/></operator><name pos:line="207" pos:column="10">zFile<pos:position pos:line="207" pos:column="15"/></name></expr> )<pos:position pos:line="207" pos:column="17"/></condition><then pos:line="207" pos:column="17"> <block type="pseudo"><return pos:line="207" pos:column="18">return <expr><name pos:line="207" pos:column="25">SQLITE_NOMEM_BKPT<pos:position pos:line="207" pos:column="42"/></name></expr>;<pos:position pos:line="207" pos:column="43"/></return></block></then></if>
    <if pos:line="208" pos:column="5">if<condition pos:line="208" pos:column="7">( <expr><name pos:line="208" pos:column="9">nUri<pos:position pos:line="208" pos:column="13"/></name></expr> )<pos:position pos:line="208" pos:column="15"/></condition><then><block pos:line="208" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="209" pos:column="7">memcpy<pos:position pos:line="209" pos:column="13"/></name><argument_list pos:line="209" pos:column="13">(<argument><expr><name pos:line="209" pos:column="14">zFile<pos:position pos:line="209" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="21">zUri<pos:position pos:line="209" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="27">nUri<pos:position pos:line="209" pos:column="31"/></name></expr></argument>)<pos:position pos:line="209" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="211" pos:column="5">zFile<pos:position pos:line="211" pos:column="10"/></name><index pos:line="211" pos:column="10">[<expr><name pos:line="211" pos:column="11">nUri<pos:position pos:line="211" pos:column="15"/></name></expr>]<pos:position pos:line="211" pos:column="16"/></index></name> <operator pos:line="211" pos:column="17">=<pos:position pos:line="211" pos:column="18"/></operator> <literal type="char" pos:line="211" pos:column="19">'\0'<pos:position pos:line="211" pos:column="23"/></literal></expr>;<pos:position pos:line="211" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="212" pos:column="5">zFile<pos:position pos:line="212" pos:column="10"/></name><index pos:line="212" pos:column="10">[<expr><name pos:line="212" pos:column="11">nUri<pos:position pos:line="212" pos:column="15"/></name><operator pos:line="212" pos:column="15">+<pos:position pos:line="212" pos:column="16"/></operator><literal type="number" pos:line="212" pos:column="16">1<pos:position pos:line="212" pos:column="17"/></literal></expr>]<pos:position pos:line="212" pos:column="18"/></index></name> <operator pos:line="212" pos:column="19">=<pos:position pos:line="212" pos:column="20"/></operator> <literal type="char" pos:line="212" pos:column="21">'\0'<pos:position pos:line="212" pos:column="25"/></literal></expr>;<pos:position pos:line="212" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="213" pos:column="5">flags<pos:position pos:line="213" pos:column="10"/></name> <operator pos:line="213" pos:column="11">&amp;=<pos:position pos:line="213" pos:column="17"/></operator> <operator pos:line="213" pos:column="14">~<pos:position pos:line="213" pos:column="15"/></operator><name pos:line="213" pos:column="15">SQLITE_OPEN_URI<pos:position pos:line="213" pos:column="30"/></name></expr>;<pos:position pos:line="213" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="214" pos:column="4"/></block></else></if>

  <expr_stmt><expr><operator pos:line="216" pos:column="3">*<pos:position pos:line="216" pos:column="4"/></operator><name pos:line="216" pos:column="4">ppVfs<pos:position pos:line="216" pos:column="9"/></name> <operator pos:line="216" pos:column="10">=<pos:position pos:line="216" pos:column="11"/></operator> <call><name pos:line="216" pos:column="12">sqlite3_vfs_find<pos:position pos:line="216" pos:column="28"/></name><argument_list pos:line="216" pos:column="28">(<argument><expr><name pos:line="216" pos:column="29">zVfs<pos:position pos:line="216" pos:column="33"/></name></expr></argument>)<pos:position pos:line="216" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="35"/></expr_stmt>
  <if pos:line="217" pos:column="3">if<condition pos:line="217" pos:column="5">( <expr><operator pos:line="217" pos:column="7">*<pos:position pos:line="217" pos:column="8"/></operator><name pos:line="217" pos:column="8">ppVfs<pos:position pos:line="217" pos:column="13"/></name><operator pos:line="217" pos:column="13">==<pos:position pos:line="217" pos:column="15"/></operator><literal type="number" pos:line="217" pos:column="15">0<pos:position pos:line="217" pos:column="16"/></literal></expr> )<pos:position pos:line="217" pos:column="18"/></condition><then><block pos:line="217" pos:column="18">{
    <expr_stmt><expr><operator pos:line="218" pos:column="5">*<pos:position pos:line="218" pos:column="6"/></operator><name pos:line="218" pos:column="6">pzErrMsg<pos:position pos:line="218" pos:column="14"/></name> <operator pos:line="218" pos:column="15">=<pos:position pos:line="218" pos:column="16"/></operator> <call><name pos:line="218" pos:column="17">sqlite3_mprintf<pos:position pos:line="218" pos:column="32"/></name><argument_list pos:line="218" pos:column="32">(<argument><expr><literal type="string" pos:line="218" pos:column="33">"no such vfs: %s"<pos:position pos:line="218" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="218" pos:column="52">zVfs<pos:position pos:line="218" pos:column="56"/></name></expr></argument>)<pos:position pos:line="218" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="219" pos:column="5">rc<pos:position pos:line="219" pos:column="7"/></name> <operator pos:line="219" pos:column="8">=<pos:position pos:line="219" pos:column="9"/></operator> <name pos:line="219" pos:column="10">SQLITE_ERROR<pos:position pos:line="219" pos:column="22"/></name></expr>;<pos:position pos:line="219" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="220" pos:column="4"/></block></then></if>
 <label><name pos:line="221" pos:column="2">parse_uri_out<pos:position pos:line="221" pos:column="15"/></name>:<pos:position pos:line="221" pos:column="16"/></label>
  <if pos:line="222" pos:column="3">if<condition pos:line="222" pos:column="5">( <expr><name pos:line="222" pos:column="7">rc<pos:position pos:line="222" pos:column="9"/></name><operator pos:line="222" pos:column="9">!=<pos:position pos:line="222" pos:column="11"/></operator><name pos:line="222" pos:column="11">SQLITE_OK<pos:position pos:line="222" pos:column="20"/></name></expr> )<pos:position pos:line="222" pos:column="22"/></condition><then><block pos:line="222" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="223" pos:column="5">sqlite3_free<pos:position pos:line="223" pos:column="17"/></name><argument_list pos:line="223" pos:column="17">(<argument><expr><name pos:line="223" pos:column="18">zFile<pos:position pos:line="223" pos:column="23"/></name></expr></argument>)<pos:position pos:line="223" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="224" pos:column="5">zFile<pos:position pos:line="224" pos:column="10"/></name> <operator pos:line="224" pos:column="11">=<pos:position pos:line="224" pos:column="12"/></operator> <literal type="number" pos:line="224" pos:column="13">0<pos:position pos:line="224" pos:column="14"/></literal></expr>;<pos:position pos:line="224" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="225" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="226" pos:column="3">*<pos:position pos:line="226" pos:column="4"/></operator><name pos:line="226" pos:column="4">pFlags<pos:position pos:line="226" pos:column="10"/></name> <operator pos:line="226" pos:column="11">=<pos:position pos:line="226" pos:column="12"/></operator> <name pos:line="226" pos:column="13">flags<pos:position pos:line="226" pos:column="18"/></name></expr>;<pos:position pos:line="226" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="227" pos:column="3">*<pos:position pos:line="227" pos:column="4"/></operator><name pos:line="227" pos:column="4">pzFile<pos:position pos:line="227" pos:column="10"/></name> <operator pos:line="227" pos:column="11">=<pos:position pos:line="227" pos:column="12"/></operator> <name pos:line="227" pos:column="13">zFile<pos:position pos:line="227" pos:column="18"/></name></expr>;<pos:position pos:line="227" pos:column="19"/></expr_stmt>
  <return pos:line="228" pos:column="3">return <expr><name pos:line="228" pos:column="10">rc<pos:position pos:line="228" pos:column="12"/></name></expr>;<pos:position pos:line="228" pos:column="13"/></return>
}<pos:position pos:line="229" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_130.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3_table_column_metadata<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                <comment type="block" pos:line="2" pos:column="31">/* Connection handle */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zDbName<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>,        <comment type="block" pos:line="3" pos:column="31">/* Database name or NULL */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">zTableName<pos:position pos:line="4" pos:column="25"/></name></decl></parameter>,     <comment type="block" pos:line="4" pos:column="31">/* Table name */</comment>
  <parameter><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">zColumnName<pos:position pos:line="5" pos:column="26"/></name></decl></parameter>,    <comment type="block" pos:line="5" pos:column="31">/* Column name */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <specifier pos:line="6" pos:column="8">const<pos:position pos:line="6" pos:column="13"/></specifier> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">pzDataType<pos:position pos:line="6" pos:column="26"/></name></decl></parameter>,    <comment type="block" pos:line="6" pos:column="31">/* OUTPUT: Declared data type */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <specifier pos:line="7" pos:column="8">const<pos:position pos:line="7" pos:column="13"/></specifier> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">pzCollSeq<pos:position pos:line="7" pos:column="25"/></name></decl></parameter>,     <comment type="block" pos:line="7" pos:column="31">/* OUTPUT: Collation sequence name */</comment>
  <parameter><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name> <modifier pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></modifier></type><name pos:line="8" pos:column="8">pNotNull<pos:position pos:line="8" pos:column="16"/></name></decl></parameter>,              <comment type="block" pos:line="8" pos:column="31">/* OUTPUT: True if NOT NULL constraint exists */</comment>
  <parameter><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name> <modifier pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></modifier></type><name pos:line="9" pos:column="8">pPrimaryKey<pos:position pos:line="9" pos:column="19"/></name></decl></parameter>,           <comment type="block" pos:line="9" pos:column="31">/* OUTPUT: True if column part of PK */</comment>
  <parameter><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name> <modifier pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></modifier></type><name pos:line="10" pos:column="8">pAutoinc<pos:position pos:line="10" pos:column="16"/></name></decl></parameter>               <comment type="block" pos:line="10" pos:column="31">/* OUTPUT: True if column is auto-increment */</comment>
)<pos:position pos:line="11" pos:column="2"/></parameter_list><block pos:line="11" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">rc<pos:position pos:line="12" pos:column="9"/></name></decl>;<pos:position pos:line="12" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">zErrMsg<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">Table<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">pTab<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">Column<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">pCol<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">iCol<pos:position pos:line="16" pos:column="11"/></name> <init pos:line="16" pos:column="12">= <expr><literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name> <specifier pos:line="17" pos:column="8">const<pos:position pos:line="17" pos:column="13"/></specifier> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">zDataType<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name> <specifier pos:line="18" pos:column="8">const<pos:position pos:line="18" pos:column="13"/></specifier> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">zCollSeq<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">notnull<pos:position pos:line="19" pos:column="14"/></name> <init pos:line="19" pos:column="15">= <expr><literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">primarykey<pos:position pos:line="20" pos:column="17"/></name> <init pos:line="20" pos:column="18">= <expr><literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">autoinc<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>


<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">SQLITE_ENABLE_API_ARMOR<pos:position pos:line="24" pos:column="31"/></name></cpp:ifdef>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">( <expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><call><name pos:line="25" pos:column="8">sqlite3SafetyCheckOk<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">db<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call> <operator pos:line="25" pos:column="33">||<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">zTableName<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">==<pos:position pos:line="25" pos:column="48"/></operator><literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal></expr> )<pos:position pos:line="25" pos:column="51"/></condition><then><block pos:line="25" pos:column="51">{
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">SQLITE_MISUSE_BKPT<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="30" pos:column="3">/* Ensure the database schema has been loaded */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">sqlite3_mutex_enter<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">db<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">mutex<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">sqlite3BtreeEnterAll<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">db<pos:position pos:line="32" pos:column="26"/></name></expr></argument>)<pos:position pos:line="32" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">rc<pos:position pos:line="33" pos:column="5"/></name> <operator pos:line="33" pos:column="6">=<pos:position pos:line="33" pos:column="7"/></operator> <call><name pos:line="33" pos:column="8">sqlite3Init<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">db<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="24">&amp;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="25">zErrMsg<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">( <expr><name pos:line="34" pos:column="7">SQLITE_OK<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">!=<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">rc<pos:position pos:line="34" pos:column="20"/></name></expr> )<pos:position pos:line="34" pos:column="22"/></condition><then><block pos:line="34" pos:column="22">{
    <goto pos:line="35" pos:column="5">goto <name pos:line="35" pos:column="10">error_out<pos:position pos:line="35" pos:column="19"/></name>;<pos:position pos:line="35" pos:column="20"/></goto>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="38" pos:column="3">/* Locate the table in question */</comment>
  <expr_stmt><expr><name pos:line="39" pos:column="3">pTab<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <call><name pos:line="39" pos:column="10">sqlite3FindTable<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">db<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="31">zTableName<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">zDbName<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">( <expr><operator pos:line="40" pos:column="7">!<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">pTab<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">||<pos:position pos:line="40" pos:column="15"/></operator> <name><name pos:line="40" pos:column="16">pTab<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">pSelect<pos:position pos:line="40" pos:column="29"/></name></name></expr> )<pos:position pos:line="40" pos:column="31"/></condition><then><block pos:line="40" pos:column="31">{
    <expr_stmt><expr><name pos:line="41" pos:column="5">pTab<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <literal type="number" pos:line="41" pos:column="12">0<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></expr_stmt>
    <goto pos:line="42" pos:column="5">goto <name pos:line="42" pos:column="10">error_out<pos:position pos:line="42" pos:column="19"/></name>;<pos:position pos:line="42" pos:column="20"/></goto>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* Find the column for which info is requested */</comment>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">( <expr><name pos:line="46" pos:column="7">zColumnName<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">==<pos:position pos:line="46" pos:column="20"/></operator><literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr> )<pos:position pos:line="46" pos:column="23"/></condition><then><block pos:line="46" pos:column="23">{
    <comment type="block" pos:line="47" pos:column="5">/* Query for existance of table only */</comment>
  }<pos:position pos:line="48" pos:column="4"/></block></then><else pos:line="48" pos:column="4">else<block pos:line="48" pos:column="8">{
    <for pos:line="49" pos:column="5">for<control pos:line="49" pos:column="8">(<init><expr><name pos:line="49" pos:column="9">iCol<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator><literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>;<pos:position pos:line="49" pos:column="16"/></init> <condition><expr><name pos:line="49" pos:column="17">iCol<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">&lt;<pos:position pos:line="49" pos:column="25"/></operator><name><name pos:line="49" pos:column="22">pTab<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">nCol<pos:position pos:line="49" pos:column="32"/></name></name></expr>;<pos:position pos:line="49" pos:column="33"/></condition> <incr><expr><name pos:line="49" pos:column="34">iCol<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">++<pos:position pos:line="49" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="41"/></control><block pos:line="49" pos:column="41">{
      <expr_stmt><expr><name pos:line="50" pos:column="7">pCol<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <operator pos:line="50" pos:column="14">&amp;<pos:position pos:line="50" pos:column="19"/></operator><name><name pos:line="50" pos:column="15">pTab<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">aCol<pos:position pos:line="50" pos:column="25"/></name><index pos:line="50" pos:column="25">[<expr><name pos:line="50" pos:column="26">iCol<pos:position pos:line="50" pos:column="30"/></name></expr>]<pos:position pos:line="50" pos:column="31"/></index></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">( <expr><literal type="number" pos:line="51" pos:column="11">0<pos:position pos:line="51" pos:column="12"/></literal><operator pos:line="51" pos:column="12">==<pos:position pos:line="51" pos:column="14"/></operator><call><name pos:line="51" pos:column="14">sqlite3StrICmp<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name><name pos:line="51" pos:column="29">pCol<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">zName<pos:position pos:line="51" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">zColumnName<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr> )<pos:position pos:line="51" pos:column="56"/></condition><then><block pos:line="51" pos:column="56">{
        <break pos:line="52" pos:column="9">break;<pos:position pos:line="52" pos:column="15"/></break>
      }<pos:position pos:line="53" pos:column="8"/></block></then></if>
    }<pos:position pos:line="54" pos:column="6"/></block></for>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">( <expr><name pos:line="55" pos:column="9">iCol<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">==<pos:position pos:line="55" pos:column="15"/></operator><name><name pos:line="55" pos:column="15">pTab<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">nCol<pos:position pos:line="55" pos:column="25"/></name></name></expr> )<pos:position pos:line="55" pos:column="27"/></condition><then><block pos:line="55" pos:column="27">{
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">( <expr><call><name pos:line="56" pos:column="11">HasRowid<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">pTab<pos:position pos:line="56" pos:column="24"/></name></expr></argument>)<pos:position pos:line="56" pos:column="25"/></argument_list></call> <operator pos:line="56" pos:column="26">&amp;&amp;<pos:position pos:line="56" pos:column="36"/></operator> <call><name pos:line="56" pos:column="29">sqlite3IsRowid<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">zColumnName<pos:position pos:line="56" pos:column="55"/></name></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr> )<pos:position pos:line="56" pos:column="58"/></condition><then><block pos:line="56" pos:column="58">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">iCol<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <name><name pos:line="57" pos:column="16">pTab<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">iPKey<pos:position pos:line="57" pos:column="27"/></name></name></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">pCol<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <ternary><condition><expr><name pos:line="58" pos:column="16">iCol<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">&gt;=<pos:position pos:line="58" pos:column="25"/></operator><literal type="number" pos:line="58" pos:column="22">0<pos:position pos:line="58" pos:column="23"/></literal></expr> ?<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25"> <expr><operator pos:line="58" pos:column="26">&amp;<pos:position pos:line="58" pos:column="31"/></operator><name><name pos:line="58" pos:column="27">pTab<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">-&gt;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="33">aCol<pos:position pos:line="58" pos:column="37"/></name><index pos:line="58" pos:column="37">[<expr><name pos:line="58" pos:column="38">iCol<pos:position pos:line="58" pos:column="42"/></name></expr>]<pos:position pos:line="58" pos:column="43"/></index></name></expr> <pos:position pos:line="58" pos:column="44"/></then><else pos:line="58" pos:column="44">: <expr><literal type="number" pos:line="58" pos:column="46">0<pos:position pos:line="58" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then><else pos:line="59" pos:column="8">else<block pos:line="59" pos:column="12">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">pTab<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <literal type="number" pos:line="60" pos:column="16">0<pos:position pos:line="60" pos:column="17"/></literal></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
        <goto pos:line="61" pos:column="9">goto <name pos:line="61" pos:column="14">error_out<pos:position pos:line="61" pos:column="23"/></name>;<pos:position pos:line="61" pos:column="24"/></goto>
      }<pos:position pos:line="62" pos:column="8"/></block></else></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
  }<pos:position pos:line="64" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="66" pos:column="3">/* The following block stores the meta information that will be returned
  ** to the caller in local variables zDataType, zCollSeq, notnull, primarykey
  ** and autoinc. At this point there are two possibilities:
  ** 
  **     1. The specified column name was rowid", "oid" or "_rowid_" 
  **        and there is no explicitly declared IPK column. 
  **
  **     2. The table is not a view and the column name identified an 
  **        explicitly declared column. Copy meta information from *pCol.
  */</comment> 
  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">( <expr><name pos:line="76" pos:column="7">pCol<pos:position pos:line="76" pos:column="11"/></name></expr> )<pos:position pos:line="76" pos:column="13"/></condition><then><block pos:line="76" pos:column="13">{
    <expr_stmt><expr><name pos:line="77" pos:column="5">zDataType<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <call><name pos:line="77" pos:column="17">sqlite3ColumnType<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name pos:line="77" pos:column="35">pCol<pos:position pos:line="77" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="77" pos:column="40">0<pos:position pos:line="77" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">zCollSeq<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <name><name pos:line="78" pos:column="16">pCol<pos:position pos:line="78" pos:column="20"/></name><operator pos:line="78" pos:column="20">-&gt;<pos:position pos:line="78" pos:column="25"/></operator><name pos:line="78" pos:column="22">zColl<pos:position pos:line="78" pos:column="27"/></name></name></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="79" pos:column="5">notnull<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">=<pos:position pos:line="79" pos:column="14"/></operator> <name><name pos:line="79" pos:column="15">pCol<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">notNull<pos:position pos:line="79" pos:column="28"/></name></name><operator pos:line="79" pos:column="28">!=<pos:position pos:line="79" pos:column="30"/></operator><literal type="number" pos:line="79" pos:column="30">0<pos:position pos:line="79" pos:column="31"/></literal></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="80" pos:column="5">primarykey<pos:position pos:line="80" pos:column="15"/></name>  <operator pos:line="80" pos:column="17">=<pos:position pos:line="80" pos:column="18"/></operator> <operator pos:line="80" pos:column="19">(<pos:position pos:line="80" pos:column="20"/></operator><name><name pos:line="80" pos:column="20">pCol<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">colFlags<pos:position pos:line="80" pos:column="34"/></name></name> <operator pos:line="80" pos:column="35">&amp;<pos:position pos:line="80" pos:column="40"/></operator> <name pos:line="80" pos:column="37">COLFLAG_PRIMKEY<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">)<pos:position pos:line="80" pos:column="53"/></operator><operator pos:line="80" pos:column="53">!=<pos:position pos:line="80" pos:column="55"/></operator><literal type="number" pos:line="80" pos:column="55">0<pos:position pos:line="80" pos:column="56"/></literal></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="81" pos:column="5">autoinc<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <name><name pos:line="81" pos:column="15">pTab<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">-&gt;<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="21">iPKey<pos:position pos:line="81" pos:column="26"/></name></name><operator pos:line="81" pos:column="26">==<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">iCol<pos:position pos:line="81" pos:column="32"/></name> <operator pos:line="81" pos:column="33">&amp;&amp;<pos:position pos:line="81" pos:column="43"/></operator> <operator pos:line="81" pos:column="36">(<pos:position pos:line="81" pos:column="37"/></operator><name><name pos:line="81" pos:column="37">pTab<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">-&gt;<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="43">tabFlags<pos:position pos:line="81" pos:column="51"/></name></name> <operator pos:line="81" pos:column="52">&amp;<pos:position pos:line="81" pos:column="57"/></operator> <name pos:line="81" pos:column="54">TF_Autoincrement<pos:position pos:line="81" pos:column="70"/></name><operator pos:line="81" pos:column="70">)<pos:position pos:line="81" pos:column="71"/></operator><operator pos:line="81" pos:column="71">!=<pos:position pos:line="81" pos:column="73"/></operator><literal type="number" pos:line="81" pos:column="73">0<pos:position pos:line="81" pos:column="74"/></literal></expr>;<pos:position pos:line="81" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block></then><else pos:line="82" pos:column="4">else<block pos:line="82" pos:column="8">{
    <expr_stmt><expr><name pos:line="83" pos:column="5">zDataType<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <literal type="string" pos:line="83" pos:column="17">"INTEGER"<pos:position pos:line="83" pos:column="26"/></literal></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="84" pos:column="5">primarykey<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <literal type="number" pos:line="84" pos:column="18">1<pos:position pos:line="84" pos:column="19"/></literal></expr>;<pos:position pos:line="84" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>
  <if pos:line="86" pos:column="3">if<condition pos:line="86" pos:column="5">( <expr><operator pos:line="86" pos:column="7">!<pos:position pos:line="86" pos:column="8"/></operator><name pos:line="86" pos:column="8">zCollSeq<pos:position pos:line="86" pos:column="16"/></name></expr> )<pos:position pos:line="86" pos:column="18"/></condition><then><block pos:line="86" pos:column="18">{
    <expr_stmt><expr><name pos:line="87" pos:column="5">zCollSeq<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <name pos:line="87" pos:column="16">sqlite3StrBINARY<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

<label><name pos:line="90" pos:column="1">error_out<pos:position pos:line="90" pos:column="10"/></name>:<pos:position pos:line="90" pos:column="11"/></label>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">sqlite3BtreeLeaveAll<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><name pos:line="91" pos:column="24">db<pos:position pos:line="91" pos:column="26"/></name></expr></argument>)<pos:position pos:line="91" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="93" pos:column="3">/* Whether the function call succeeded or failed, set the output parameters
  ** to whatever their local counterparts contain. If an error did occur,
  ** this has the effect of zeroing all output parameters.
  */</comment>
  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">( <expr><name pos:line="97" pos:column="7">pzDataType<pos:position pos:line="97" pos:column="17"/></name></expr> )<pos:position pos:line="97" pos:column="19"/></condition><then pos:line="97" pos:column="19"> <block type="pseudo"><expr_stmt><expr><operator pos:line="97" pos:column="20">*<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">pzDataType<pos:position pos:line="97" pos:column="31"/></name> <operator pos:line="97" pos:column="32">=<pos:position pos:line="97" pos:column="33"/></operator> <name pos:line="97" pos:column="34">zDataType<pos:position pos:line="97" pos:column="43"/></name></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt></block></then></if>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">( <expr><name pos:line="98" pos:column="7">pzCollSeq<pos:position pos:line="98" pos:column="16"/></name></expr> )<pos:position pos:line="98" pos:column="18"/></condition><then pos:line="98" pos:column="18"> <block type="pseudo"><expr_stmt><expr><operator pos:line="98" pos:column="19">*<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="20">pzCollSeq<pos:position pos:line="98" pos:column="29"/></name> <operator pos:line="98" pos:column="30">=<pos:position pos:line="98" pos:column="31"/></operator> <name pos:line="98" pos:column="32">zCollSeq<pos:position pos:line="98" pos:column="40"/></name></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt></block></then></if>
  <if pos:line="99" pos:column="3">if<condition pos:line="99" pos:column="5">( <expr><name pos:line="99" pos:column="7">pNotNull<pos:position pos:line="99" pos:column="15"/></name></expr> )<pos:position pos:line="99" pos:column="17"/></condition><then pos:line="99" pos:column="17"> <block type="pseudo"><expr_stmt><expr><operator pos:line="99" pos:column="18">*<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="19">pNotNull<pos:position pos:line="99" pos:column="27"/></name> <operator pos:line="99" pos:column="28">=<pos:position pos:line="99" pos:column="29"/></operator> <name pos:line="99" pos:column="30">notnull<pos:position pos:line="99" pos:column="37"/></name></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt></block></then></if>
  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">( <expr><name pos:line="100" pos:column="7">pPrimaryKey<pos:position pos:line="100" pos:column="18"/></name></expr> )<pos:position pos:line="100" pos:column="20"/></condition><then pos:line="100" pos:column="20"> <block type="pseudo"><expr_stmt><expr><operator pos:line="100" pos:column="21">*<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">pPrimaryKey<pos:position pos:line="100" pos:column="33"/></name> <operator pos:line="100" pos:column="34">=<pos:position pos:line="100" pos:column="35"/></operator> <name pos:line="100" pos:column="36">primarykey<pos:position pos:line="100" pos:column="46"/></name></expr>;<pos:position pos:line="100" pos:column="47"/></expr_stmt></block></then></if>
  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">( <expr><name pos:line="101" pos:column="7">pAutoinc<pos:position pos:line="101" pos:column="15"/></name></expr> )<pos:position pos:line="101" pos:column="17"/></condition><then pos:line="101" pos:column="17"> <block type="pseudo"><expr_stmt><expr><operator pos:line="101" pos:column="18">*<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="19">pAutoinc<pos:position pos:line="101" pos:column="27"/></name> <operator pos:line="101" pos:column="28">=<pos:position pos:line="101" pos:column="29"/></operator> <name pos:line="101" pos:column="30">autoinc<pos:position pos:line="101" pos:column="37"/></name></expr>;<pos:position pos:line="101" pos:column="38"/></expr_stmt></block></then></if>

  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">( <expr><name pos:line="103" pos:column="7">SQLITE_OK<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">==<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="18">rc<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">&amp;&amp;<pos:position pos:line="103" pos:column="31"/></operator> <operator pos:line="103" pos:column="24">!<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="25">pTab<pos:position pos:line="103" pos:column="29"/></name></expr> )<pos:position pos:line="103" pos:column="31"/></condition><then><block pos:line="103" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">sqlite3DbFree<pos:position pos:line="104" pos:column="18"/></name><argument_list pos:line="104" pos:column="18">(<argument><expr><name pos:line="104" pos:column="19">db<pos:position pos:line="104" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="23">zErrMsg<pos:position pos:line="104" pos:column="30"/></name></expr></argument>)<pos:position pos:line="104" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="105" pos:column="5">zErrMsg<pos:position pos:line="105" pos:column="12"/></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <call><name pos:line="105" pos:column="15">sqlite3MPrintf<pos:position pos:line="105" pos:column="29"/></name><argument_list pos:line="105" pos:column="29">(<argument><expr><name pos:line="105" pos:column="30">db<pos:position pos:line="105" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="34">"no such table column: %s.%s"<pos:position pos:line="105" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="65">zTableName<pos:position pos:line="105" pos:column="75"/></name></expr></argument>,
        <argument><expr><name pos:line="106" pos:column="9">zColumnName<pos:position pos:line="106" pos:column="20"/></name></expr></argument>)<pos:position pos:line="106" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="107" pos:column="5">rc<pos:position pos:line="107" pos:column="7"/></name> <operator pos:line="107" pos:column="8">=<pos:position pos:line="107" pos:column="9"/></operator> <name pos:line="107" pos:column="10">SQLITE_ERROR<pos:position pos:line="107" pos:column="22"/></name></expr>;<pos:position pos:line="107" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="109" pos:column="3">sqlite3ErrorWithMsg<pos:position pos:line="109" pos:column="22"/></name><argument_list pos:line="109" pos:column="22">(<argument><expr><name pos:line="109" pos:column="23">db<pos:position pos:line="109" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="27">rc<pos:position pos:line="109" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="31">(<pos:position pos:line="109" pos:column="32"/></operator><ternary><condition><expr><name pos:line="109" pos:column="32">zErrMsg<pos:position pos:line="109" pos:column="39"/></name></expr>?<pos:position pos:line="109" pos:column="40"/></condition><then><expr><literal type="string" pos:line="109" pos:column="40">"%s"<pos:position pos:line="109" pos:column="44"/></literal></expr></then><else pos:line="109" pos:column="44">:<expr><literal type="number" pos:line="109" pos:column="45">0<pos:position pos:line="109" pos:column="46"/></literal></expr></else></ternary><operator pos:line="109" pos:column="46">)<pos:position pos:line="109" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="109" pos:column="49">zErrMsg<pos:position pos:line="109" pos:column="56"/></name></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">sqlite3DbFree<pos:position pos:line="110" pos:column="16"/></name><argument_list pos:line="110" pos:column="16">(<argument><expr><name pos:line="110" pos:column="17">db<pos:position pos:line="110" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="21">zErrMsg<pos:position pos:line="110" pos:column="28"/></name></expr></argument>)<pos:position pos:line="110" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="111" pos:column="3">rc<pos:position pos:line="111" pos:column="5"/></name> <operator pos:line="111" pos:column="6">=<pos:position pos:line="111" pos:column="7"/></operator> <call><name pos:line="111" pos:column="8">sqlite3ApiExit<pos:position pos:line="111" pos:column="22"/></name><argument_list pos:line="111" pos:column="22">(<argument><expr><name pos:line="111" pos:column="23">db<pos:position pos:line="111" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="27">rc<pos:position pos:line="111" pos:column="29"/></name></expr></argument>)<pos:position pos:line="111" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">sqlite3_mutex_leave<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">(<argument><expr><name><name pos:line="112" pos:column="23">db<pos:position pos:line="112" pos:column="25"/></name><operator pos:line="112" pos:column="25">-&gt;<pos:position pos:line="112" pos:column="30"/></operator><name pos:line="112" pos:column="27">mutex<pos:position pos:line="112" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="34"/></expr_stmt>
  <return pos:line="113" pos:column="3">return <expr><name pos:line="113" pos:column="10">rc<pos:position pos:line="113" pos:column="12"/></name></expr>;<pos:position pos:line="113" pos:column="13"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

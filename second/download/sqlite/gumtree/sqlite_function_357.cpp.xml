<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_357.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3FindInIndex<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,             <comment type="block" pos:line="2" pos:column="30">/* Parsing context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Expr<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pX<pos:position pos:line="3" pos:column="11"/></name></decl></parameter>,                  <comment type="block" pos:line="3" pos:column="30">/* The right-hand side (RHS) of the IN operator */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">u32<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">inFlags<pos:position pos:line="4" pos:column="14"/></name></decl></parameter>,               <comment type="block" pos:line="4" pos:column="30">/* IN_INDEX_LOOP, _MEMBERSHIP, and/or _NOOP_OK */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name> <modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type><name pos:line="5" pos:column="8">prRhsHasNull<pos:position pos:line="5" pos:column="20"/></name></decl></parameter>,         <comment type="block" pos:line="5" pos:column="30">/* Register holding NULL status.  See notes */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">aiMap<pos:position pos:line="6" pos:column="13"/></name></decl></parameter>                 <comment type="block" pos:line="6" pos:column="30">/* Mapping from Index fields to RHS fields */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">Select<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">p<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>                            <comment type="block" pos:line="8" pos:column="41">/* SELECT to the right of IN operator */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">eType<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>                        <comment type="block" pos:line="9" pos:column="41">/* Type of RHS table. IN_INDEX_* */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">iTab<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><name><name pos:line="10" pos:column="14">pParse<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">nTab<pos:position pos:line="10" pos:column="26"/></name></name><operator pos:line="10" pos:column="26">++<pos:position pos:line="10" pos:column="28"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>            <comment type="block" pos:line="10" pos:column="41">/* Cursor of the RHS table */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">mustBeUnique<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>                     <comment type="block" pos:line="11" pos:column="41">/* True if RHS must be unique */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">Vdbe<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">v<pos:position pos:line="12" pos:column="10"/></name> <init pos:line="12" pos:column="11">= <expr><call><name pos:line="12" pos:column="13">sqlite3GetVdbe<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">pParse<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>     <comment type="block" pos:line="12" pos:column="41">/* Virtual machine being coded */</comment>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">( <argument><expr><name><name pos:line="14" pos:column="11">pX<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">op<pos:position pos:line="14" pos:column="17"/></name></name><operator pos:line="14" pos:column="17">==<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">TK_IN<pos:position pos:line="14" pos:column="24"/></name></expr></argument> )<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">mustBeUnique<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">inFlags<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="29">IN_INDEX_LOOP<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator><operator pos:line="15" pos:column="43">!=<pos:position pos:line="15" pos:column="45"/></operator><literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* If the RHS of this IN(...) operator is a SELECT, and if it matters 
  ** whether or not the SELECT result contains NULL values, check whether
  ** or not NULL is actually possible (it may not be, for example, due 
  ** to NOT NULL constraints in the schema). If no NULL values are possible,
  ** set prRhsHasNull to 0 before continuing.  */</comment>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">( <expr><name pos:line="22" pos:column="7">prRhsHasNull<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&amp;&amp;<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name><name pos:line="22" pos:column="24">pX<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">flags<pos:position pos:line="22" pos:column="33"/></name></name> <operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="36">EP_xIsSelect<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator></expr> )<pos:position pos:line="22" pos:column="51"/></condition><then><block pos:line="22" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name></decl>;<pos:position pos:line="23" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">ExprList<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">pEList<pos:position pos:line="24" pos:column="21"/></name> <init pos:line="24" pos:column="22">= <expr><name><name pos:line="24" pos:column="24">pX<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">x<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">pSelect<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">pEList<pos:position pos:line="24" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="46"/></decl_stmt>
    <for pos:line="25" pos:column="5">for<control pos:line="25" pos:column="8">(<init><expr><name pos:line="25" pos:column="9">i<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator><literal type="number" pos:line="25" pos:column="11">0<pos:position pos:line="25" pos:column="12"/></literal></expr>;<pos:position pos:line="25" pos:column="13"/></init> <condition><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">&lt;<pos:position pos:line="25" pos:column="19"/></operator><name><name pos:line="25" pos:column="16">pEList<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">nExpr<pos:position pos:line="25" pos:column="29"/></name></name></expr>;<pos:position pos:line="25" pos:column="30"/></condition> <incr><expr><name pos:line="25" pos:column="31">i<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">++<pos:position pos:line="25" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="35"/></control><block pos:line="25" pos:column="35">{
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">( <expr><call><name pos:line="26" pos:column="11">sqlite3ExprCanBeNull<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name><name pos:line="26" pos:column="32">pEList<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">a<pos:position pos:line="26" pos:column="41"/></name><index pos:line="26" pos:column="41">[<expr><name pos:line="26" pos:column="42">i<pos:position pos:line="26" pos:column="43"/></name></expr>]<pos:position pos:line="26" pos:column="44"/></index></name><operator pos:line="26" pos:column="44">.<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="45">pExpr<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr> )<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block type="pseudo"><break pos:line="26" pos:column="54">break;<pos:position pos:line="26" pos:column="60"/></break></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">( <expr><name pos:line="28" pos:column="9">i<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">==<pos:position pos:line="28" pos:column="12"/></operator><name><name pos:line="28" pos:column="12">pEList<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">nExpr<pos:position pos:line="28" pos:column="25"/></name></name></expr> )<pos:position pos:line="28" pos:column="27"/></condition><then><block pos:line="28" pos:column="27">{
      <expr_stmt><expr><name pos:line="29" pos:column="7">prRhsHasNull<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <literal type="number" pos:line="29" pos:column="22">0<pos:position pos:line="29" pos:column="23"/></literal></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Check to see if an existing table or index can be used to
  ** satisfy the query.  This is preferable to generating a new 
  ** ephemeral table.  */</comment>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">( <expr><name><name pos:line="36" pos:column="7">pParse<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">nErr<pos:position pos:line="36" pos:column="19"/></name></name><operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator><literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="26">(<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">p<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <call><name pos:line="36" pos:column="31">isCandidateForInOpt<pos:position pos:line="36" pos:column="50"/></name><argument_list pos:line="36" pos:column="50">(<argument><expr><name pos:line="36" pos:column="51">pX<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call><operator pos:line="36" pos:column="54">)<pos:position pos:line="36" pos:column="55"/></operator><operator pos:line="36" pos:column="55">!=<pos:position pos:line="36" pos:column="57"/></operator><literal type="number" pos:line="36" pos:column="57">0<pos:position pos:line="36" pos:column="58"/></literal></expr> )<pos:position pos:line="36" pos:column="60"/></condition><then><block pos:line="36" pos:column="60">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">sqlite3<pos:position pos:line="37" pos:column="12"/></name> <modifier pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></modifier></type><name pos:line="37" pos:column="14">db<pos:position pos:line="37" pos:column="16"/></name> <init pos:line="37" pos:column="17">= <expr><name><name pos:line="37" pos:column="19">pParse<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">db<pos:position pos:line="37" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="37" pos:column="30"/></decl_stmt>              <comment type="block" pos:line="37" pos:column="44">/* Database connection */</comment>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">Table<pos:position pos:line="38" pos:column="10"/></name> <modifier pos:line="38" pos:column="11">*<pos:position pos:line="38" pos:column="12"/></modifier></type><name pos:line="38" pos:column="12">pTab<pos:position pos:line="38" pos:column="16"/></name></decl>;<pos:position pos:line="38" pos:column="17"/></decl_stmt>                           <comment type="block" pos:line="38" pos:column="44">/* Table &lt;table&gt;. */</comment>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">i16<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">iDb<pos:position pos:line="39" pos:column="12"/></name></decl>;<pos:position pos:line="39" pos:column="13"/></decl_stmt>                               <comment type="block" pos:line="39" pos:column="44">/* Database idx for pTab */</comment>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">ExprList<pos:position pos:line="40" pos:column="13"/></name> <modifier pos:line="40" pos:column="14">*<pos:position pos:line="40" pos:column="15"/></modifier></type><name pos:line="40" pos:column="15">pEList<pos:position pos:line="40" pos:column="21"/></name> <init pos:line="40" pos:column="22">= <expr><name><name pos:line="40" pos:column="24">p<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">pEList<pos:position pos:line="40" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="40" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">int<pos:position pos:line="41" pos:column="8"/></name></type> <name pos:line="41" pos:column="9">nExpr<pos:position pos:line="41" pos:column="14"/></name> <init pos:line="41" pos:column="15">= <expr><name><name pos:line="41" pos:column="17">pEList<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">nExpr<pos:position pos:line="41" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">assert<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">( <argument><expr><name><name pos:line="43" pos:column="13">p<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">pEList<pos:position pos:line="43" pos:column="22"/></name></name><operator pos:line="43" pos:column="22">!=<pos:position pos:line="43" pos:column="24"/></operator><literal type="number" pos:line="43" pos:column="24">0<pos:position pos:line="43" pos:column="25"/></literal></expr></argument> )<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>             <comment type="block" pos:line="43" pos:column="41">/* Because of isCandidateForInOpt(p) */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">assert<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">( <argument><expr><name><name pos:line="44" pos:column="13">p<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">pEList<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">a<pos:position pos:line="44" pos:column="25"/></name><index pos:line="44" pos:column="25">[<expr><literal type="number" pos:line="44" pos:column="26">0<pos:position pos:line="44" pos:column="27"/></literal></expr>]<pos:position pos:line="44" pos:column="28"/></index></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">pExpr<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">!=<pos:position pos:line="44" pos:column="36"/></operator><literal type="number" pos:line="44" pos:column="36">0<pos:position pos:line="44" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt> <comment type="block" pos:line="44" pos:column="41">/* Because of isCandidateForInOpt(p) */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">assert<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">( <argument><expr><name><name pos:line="45" pos:column="13">p<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">pSrc<pos:position pos:line="45" pos:column="20"/></name></name><operator pos:line="45" pos:column="20">!=<pos:position pos:line="45" pos:column="22"/></operator><literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>               <comment type="block" pos:line="45" pos:column="41">/* Because of isCandidateForInOpt(p) */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">pTab<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <name><name pos:line="46" pos:column="12">p<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">pSrc<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">a<pos:position pos:line="46" pos:column="22"/></name><index pos:line="46" pos:column="22">[<expr><literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr>]<pos:position pos:line="46" pos:column="25"/></index></name><operator pos:line="46" pos:column="25">.<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="26">pTab<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Code an OP_Transaction and OP_TableLock for &lt;table&gt;. */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">iDb<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <call><name pos:line="49" pos:column="11">sqlite3SchemaToIndex<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">db<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="36">pTab<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">pSchema<pos:position pos:line="49" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">sqlite3CodeVerifySchema<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">pParse<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">iDb<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sqlite3TableLock<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">pParse<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">iDb<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="35">pTab<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">tnum<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="47">0<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="50">pTab<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">-&gt;<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="56">zName<pos:position pos:line="51" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">assert<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">v<pos:position pos:line="53" pos:column="13"/></name></expr></argument>)<pos:position pos:line="53" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>  <comment type="block" pos:line="53" pos:column="17">/* sqlite3GetVdbe() has always been previously called */</comment>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">( <expr><name pos:line="54" pos:column="9">nExpr<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">==<pos:position pos:line="54" pos:column="16"/></operator><literal type="number" pos:line="54" pos:column="16">1<pos:position pos:line="54" pos:column="17"/></literal> <operator pos:line="54" pos:column="18">&amp;&amp;<pos:position pos:line="54" pos:column="28"/></operator> <name><name pos:line="54" pos:column="21">pEList<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">a<pos:position pos:line="54" pos:column="30"/></name><index pos:line="54" pos:column="30">[<expr><literal type="number" pos:line="54" pos:column="31">0<pos:position pos:line="54" pos:column="32"/></literal></expr>]<pos:position pos:line="54" pos:column="33"/></index></name><operator pos:line="54" pos:column="33">.<pos:position pos:line="54" pos:column="34"/></operator><name><name pos:line="54" pos:column="34">pExpr<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">-&gt;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="41">iColumn<pos:position pos:line="54" pos:column="48"/></name></name><operator pos:line="54" pos:column="48">&lt;<pos:position pos:line="54" pos:column="52"/></operator><literal type="number" pos:line="54" pos:column="49">0<pos:position pos:line="54" pos:column="50"/></literal></expr> )<pos:position pos:line="54" pos:column="52"/></condition><then><block pos:line="54" pos:column="52">{
      <comment type="block" pos:line="55" pos:column="7">/* The "x IN (SELECT rowid FROM table)" case */</comment>
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">int<pos:position pos:line="56" pos:column="10"/></name></type> <name pos:line="56" pos:column="11">iAddr<pos:position pos:line="56" pos:column="16"/></name> <init pos:line="56" pos:column="17">= <expr><call><name pos:line="56" pos:column="19">sqlite3VdbeAddOp0<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">v<pos:position pos:line="56" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">OP_Once<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="49"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">VdbeCoverage<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">v<pos:position pos:line="57" pos:column="21"/></name></expr></argument>)<pos:position pos:line="57" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="59" pos:column="7">sqlite3OpenTable<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">pParse<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="32">iTab<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="38">iDb<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">pTab<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">OP_OpenRead<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="60" pos:column="7">eType<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">IN_INDEX_ROWID<pos:position pos:line="60" pos:column="29"/></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="62" pos:column="7">sqlite3VdbeJumpHere<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">v<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="30">iAddr<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then><else pos:line="63" pos:column="6">else<block pos:line="63" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">Index<pos:position pos:line="64" pos:column="12"/></name> <modifier pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></modifier></type><name pos:line="64" pos:column="14">pIdx<pos:position pos:line="64" pos:column="18"/></name></decl>;<pos:position pos:line="64" pos:column="19"/></decl_stmt>                         <comment type="block" pos:line="64" pos:column="44">/* Iterator variable */</comment>
      <decl_stmt><decl><type><name pos:line="65" pos:column="7">int<pos:position pos:line="65" pos:column="10"/></name></type> <name pos:line="65" pos:column="11">affinity_ok<pos:position pos:line="65" pos:column="22"/></name> <init pos:line="65" pos:column="23">= <expr><literal type="number" pos:line="65" pos:column="25">1<pos:position pos:line="65" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="65" pos:column="27"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="66" pos:column="7">int<pos:position pos:line="66" pos:column="10"/></name></type> <name pos:line="66" pos:column="11">i<pos:position pos:line="66" pos:column="12"/></name></decl>;<pos:position pos:line="66" pos:column="13"/></decl_stmt>

      <comment type="block" pos:line="68" pos:column="7">/* Check that the affinity that will be used to perform each 
      ** comparison is the same as the affinity of each column in table
      ** on the RHS of the IN operator.  If it not, it is not possible to
      ** use any index of the RHS table.  */</comment>
      <for pos:line="72" pos:column="7">for<control pos:line="72" pos:column="10">(<init><expr><name pos:line="72" pos:column="11">i<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator><literal type="number" pos:line="72" pos:column="13">0<pos:position pos:line="72" pos:column="14"/></literal></expr>;<pos:position pos:line="72" pos:column="15"/></init> <condition><expr><name pos:line="72" pos:column="16">i<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">&lt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">nExpr<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">&amp;&amp;<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="27">affinity_ok<pos:position pos:line="72" pos:column="38"/></name></expr>;<pos:position pos:line="72" pos:column="39"/></condition> <incr><expr><name pos:line="72" pos:column="40">i<pos:position pos:line="72" pos:column="41"/></name><operator pos:line="72" pos:column="41">++<pos:position pos:line="72" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="44"/></control><block pos:line="72" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">Expr<pos:position pos:line="73" pos:column="13"/></name> <modifier pos:line="73" pos:column="14">*<pos:position pos:line="73" pos:column="15"/></modifier></type><name pos:line="73" pos:column="15">pLhs<pos:position pos:line="73" pos:column="19"/></name> <init pos:line="73" pos:column="20">= <expr><call><name pos:line="73" pos:column="22">sqlite3VectorFieldSubexpr<pos:position pos:line="73" pos:column="47"/></name><argument_list pos:line="73" pos:column="47">(<argument><expr><name><name pos:line="73" pos:column="48">pX<pos:position pos:line="73" pos:column="50"/></name><operator pos:line="73" pos:column="50">-&gt;<pos:position pos:line="73" pos:column="55"/></operator><name pos:line="73" pos:column="52">pLeft<pos:position pos:line="73" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">i<pos:position pos:line="73" pos:column="60"/></name></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="73" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">int<pos:position pos:line="74" pos:column="12"/></name></type> <name pos:line="74" pos:column="13">iCol<pos:position pos:line="74" pos:column="17"/></name> <init pos:line="74" pos:column="18">= <expr><name><name pos:line="74" pos:column="20">pEList<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">a<pos:position pos:line="74" pos:column="29"/></name><index pos:line="74" pos:column="29">[<expr><name pos:line="74" pos:column="30">i<pos:position pos:line="74" pos:column="31"/></name></expr>]<pos:position pos:line="74" pos:column="32"/></index></name><operator pos:line="74" pos:column="32">.<pos:position pos:line="74" pos:column="33"/></operator><name><name pos:line="74" pos:column="33">pExpr<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">iColumn<pos:position pos:line="74" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="74" pos:column="48"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">char<pos:position pos:line="75" pos:column="13"/></name></type> <name pos:line="75" pos:column="14">idxaff<pos:position pos:line="75" pos:column="20"/></name> <init pos:line="75" pos:column="21">= <expr><call><name pos:line="75" pos:column="23">sqlite3TableColumnAffinity<pos:position pos:line="75" pos:column="49"/></name><argument_list pos:line="75" pos:column="49">(<argument><expr><name pos:line="75" pos:column="50">pTab<pos:position pos:line="75" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="75" pos:column="55">iCol<pos:position pos:line="75" pos:column="59"/></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="61"/></decl_stmt> <comment type="block" pos:line="75" pos:column="62">/* RHS table */</comment>
        <decl_stmt><decl><type><name pos:line="76" pos:column="9">char<pos:position pos:line="76" pos:column="13"/></name></type> <name pos:line="76" pos:column="14">cmpaff<pos:position pos:line="76" pos:column="20"/></name> <init pos:line="76" pos:column="21">= <expr><call><name pos:line="76" pos:column="23">sqlite3CompareAffinity<pos:position pos:line="76" pos:column="45"/></name><argument_list pos:line="76" pos:column="45">(<argument><expr><name pos:line="76" pos:column="46">pLhs<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">idxaff<pos:position pos:line="76" pos:column="58"/></name></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="76" pos:column="60"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">testcase<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">( <argument><expr><name pos:line="77" pos:column="19">cmpaff<pos:position pos:line="77" pos:column="25"/></name><operator pos:line="77" pos:column="25">==<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="27">SQLITE_AFF_BLOB<pos:position pos:line="77" pos:column="42"/></name></expr></argument> )<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">testcase<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">( <argument><expr><name pos:line="78" pos:column="19">cmpaff<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">==<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="27">SQLITE_AFF_TEXT<pos:position pos:line="78" pos:column="42"/></name></expr></argument> )<pos:position pos:line="78" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="45"/></expr_stmt>
        <switch pos:line="79" pos:column="9">switch<condition pos:line="79" pos:column="15">( <expr><name pos:line="79" pos:column="17">cmpaff<pos:position pos:line="79" pos:column="23"/></name></expr> )<pos:position pos:line="79" pos:column="25"/></condition><block pos:line="79" pos:column="25">{
          <case pos:line="80" pos:column="11">case <expr><name pos:line="80" pos:column="16">SQLITE_AFF_BLOB<pos:position pos:line="80" pos:column="31"/></name></expr>:<pos:position pos:line="80" pos:column="32"/></case>
            <break pos:line="81" pos:column="13">break;<pos:position pos:line="81" pos:column="19"/></break>
          <case pos:line="82" pos:column="11">case <expr><name pos:line="82" pos:column="16">SQLITE_AFF_TEXT<pos:position pos:line="82" pos:column="31"/></name></expr>:<pos:position pos:line="82" pos:column="32"/></case>
            <comment type="block" pos:line="83" pos:column="13">/* sqlite3CompareAffinity() only returns TEXT if one side or the
            ** other has no affinity and the other side is TEXT.  Hence,
            ** the only way for cmpaff to be TEXT is for idxaff to be TEXT
            ** and for the term on the LHS of the IN to have no affinity. */</comment>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">assert<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">( <argument><expr><name pos:line="87" pos:column="21">idxaff<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">==<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="29">SQLITE_AFF_TEXT<pos:position pos:line="87" pos:column="44"/></name></expr></argument> )<pos:position pos:line="87" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="47"/></expr_stmt>
            <break pos:line="88" pos:column="13">break;<pos:position pos:line="88" pos:column="19"/></break>
          <default pos:line="89" pos:column="11">default:<pos:position pos:line="89" pos:column="19"/></default>
            <expr_stmt><expr><name pos:line="90" pos:column="13">affinity_ok<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">=<pos:position pos:line="90" pos:column="26"/></operator> <call><name pos:line="90" pos:column="27">sqlite3IsNumericAffinity<pos:position pos:line="90" pos:column="51"/></name><argument_list pos:line="90" pos:column="51">(<argument><expr><name pos:line="90" pos:column="52">idxaff<pos:position pos:line="90" pos:column="58"/></name></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></switch>
      }<pos:position pos:line="92" pos:column="8"/></block></for>

      <if pos:line="94" pos:column="7">if<condition pos:line="94" pos:column="9">( <expr><name pos:line="94" pos:column="11">affinity_ok<pos:position pos:line="94" pos:column="22"/></name></expr> )<pos:position pos:line="94" pos:column="24"/></condition><then><block pos:line="94" pos:column="24">{
        <comment type="block" pos:line="95" pos:column="9">/* Search for an existing index that will work for this IN operator */</comment>
        <for pos:line="96" pos:column="9">for<control pos:line="96" pos:column="12">(<init><expr><name pos:line="96" pos:column="13">pIdx<pos:position pos:line="96" pos:column="17"/></name><operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator><name><name pos:line="96" pos:column="18">pTab<pos:position pos:line="96" pos:column="22"/></name><operator pos:line="96" pos:column="22">-&gt;<pos:position pos:line="96" pos:column="27"/></operator><name pos:line="96" pos:column="24">pIndex<pos:position pos:line="96" pos:column="30"/></name></name></expr>;<pos:position pos:line="96" pos:column="31"/></init> <condition><expr><name pos:line="96" pos:column="32">pIdx<pos:position pos:line="96" pos:column="36"/></name> <operator pos:line="96" pos:column="37">&amp;&amp;<pos:position pos:line="96" pos:column="47"/></operator> <name pos:line="96" pos:column="40">eType<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">==<pos:position pos:line="96" pos:column="47"/></operator><literal type="number" pos:line="96" pos:column="47">0<pos:position pos:line="96" pos:column="48"/></literal></expr>;<pos:position pos:line="96" pos:column="49"/></condition> <incr><expr><name pos:line="96" pos:column="50">pIdx<pos:position pos:line="96" pos:column="54"/></name><operator pos:line="96" pos:column="54">=<pos:position pos:line="96" pos:column="55"/></operator><name><name pos:line="96" pos:column="55">pIdx<pos:position pos:line="96" pos:column="59"/></name><operator pos:line="96" pos:column="59">-&gt;<pos:position pos:line="96" pos:column="64"/></operator><name pos:line="96" pos:column="61">pNext<pos:position pos:line="96" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="96" pos:column="67"/></control><block pos:line="96" pos:column="67">{
          <decl_stmt><decl><type><name pos:line="97" pos:column="11">Bitmask<pos:position pos:line="97" pos:column="18"/></name></type> <name pos:line="97" pos:column="19">colUsed<pos:position pos:line="97" pos:column="26"/></name></decl>;<pos:position pos:line="97" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="97" pos:column="33">/* Columns of the index used */</comment>
          <decl_stmt><decl><type><name pos:line="98" pos:column="11">Bitmask<pos:position pos:line="98" pos:column="18"/></name></type> <name pos:line="98" pos:column="19">mCol<pos:position pos:line="98" pos:column="23"/></name></decl>;<pos:position pos:line="98" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="98" pos:column="33">/* Mask for the current column */</comment>
          <if pos:line="99" pos:column="11">if<condition pos:line="99" pos:column="13">( <expr><name><name pos:line="99" pos:column="15">pIdx<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">-&gt;<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="21">nColumn<pos:position pos:line="99" pos:column="28"/></name></name><operator pos:line="99" pos:column="28">&lt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">nExpr<pos:position pos:line="99" pos:column="34"/></name></expr> )<pos:position pos:line="99" pos:column="36"/></condition><then pos:line="99" pos:column="36"> <block type="pseudo"><continue pos:line="99" pos:column="37">continue;<pos:position pos:line="99" pos:column="46"/></continue></block></then></if>
          <comment type="block" pos:line="100" pos:column="11">/* Maximum nColumn is BMS-2, not BMS-1, so that we can compute
          ** BITMASK(nExpr) without overflowing */</comment>
          <expr_stmt><expr><call><name pos:line="102" pos:column="11">testcase<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">( <argument><expr><name><name pos:line="102" pos:column="21">pIdx<pos:position pos:line="102" pos:column="25"/></name><operator pos:line="102" pos:column="25">-&gt;<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="27">nColumn<pos:position pos:line="102" pos:column="34"/></name></name><operator pos:line="102" pos:column="34">==<pos:position pos:line="102" pos:column="36"/></operator><name pos:line="102" pos:column="36">BMS<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">-<pos:position pos:line="102" pos:column="40"/></operator><literal type="number" pos:line="102" pos:column="40">2<pos:position pos:line="102" pos:column="41"/></literal></expr></argument> )<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="103" pos:column="11">testcase<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">( <argument><expr><name><name pos:line="103" pos:column="21">pIdx<pos:position pos:line="103" pos:column="25"/></name><operator pos:line="103" pos:column="25">-&gt;<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="27">nColumn<pos:position pos:line="103" pos:column="34"/></name></name><operator pos:line="103" pos:column="34">==<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="36">BMS<pos:position pos:line="103" pos:column="39"/></name><operator pos:line="103" pos:column="39">-<pos:position pos:line="103" pos:column="40"/></operator><literal type="number" pos:line="103" pos:column="40">1<pos:position pos:line="103" pos:column="41"/></literal></expr></argument> )<pos:position pos:line="103" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="44"/></expr_stmt>
          <if pos:line="104" pos:column="11">if<condition pos:line="104" pos:column="13">( <expr><name><name pos:line="104" pos:column="15">pIdx<pos:position pos:line="104" pos:column="19"/></name><operator pos:line="104" pos:column="19">-&gt;<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="21">nColumn<pos:position pos:line="104" pos:column="28"/></name></name><operator pos:line="104" pos:column="28">&gt;=<pos:position pos:line="104" pos:column="33"/></operator><name pos:line="104" pos:column="30">BMS<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">-<pos:position pos:line="104" pos:column="34"/></operator><literal type="number" pos:line="104" pos:column="34">1<pos:position pos:line="104" pos:column="35"/></literal></expr> )<pos:position pos:line="104" pos:column="37"/></condition><then pos:line="104" pos:column="37"> <block type="pseudo"><continue pos:line="104" pos:column="38">continue;<pos:position pos:line="104" pos:column="47"/></continue></block></then></if>
          <if pos:line="105" pos:column="11">if<condition pos:line="105" pos:column="13">( <expr><name pos:line="105" pos:column="15">mustBeUnique<pos:position pos:line="105" pos:column="27"/></name></expr> )<pos:position pos:line="105" pos:column="29"/></condition><then><block pos:line="105" pos:column="29">{
            <if pos:line="106" pos:column="13">if<condition pos:line="106" pos:column="15">( <expr><name><name pos:line="106" pos:column="17">pIdx<pos:position pos:line="106" pos:column="21"/></name><operator pos:line="106" pos:column="21">-&gt;<pos:position pos:line="106" pos:column="26"/></operator><name pos:line="106" pos:column="23">nKeyCol<pos:position pos:line="106" pos:column="30"/></name></name><operator pos:line="106" pos:column="30">&gt;<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="31">nExpr<pos:position pos:line="106" pos:column="36"/></name>
             <operator pos:line="107" pos:column="14">||<pos:position pos:line="107" pos:column="16"/></operator><operator pos:line="107" pos:column="16">(<pos:position pos:line="107" pos:column="17"/></operator><name><name pos:line="107" pos:column="17">pIdx<pos:position pos:line="107" pos:column="21"/></name><operator pos:line="107" pos:column="21">-&gt;<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="23">nColumn<pos:position pos:line="107" pos:column="30"/></name></name><operator pos:line="107" pos:column="30">&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">nExpr<pos:position pos:line="107" pos:column="36"/></name> <operator pos:line="107" pos:column="37">&amp;&amp;<pos:position pos:line="107" pos:column="47"/></operator> <operator pos:line="107" pos:column="40">!<pos:position pos:line="107" pos:column="41"/></operator><call><name pos:line="107" pos:column="41">IsUniqueIndex<pos:position pos:line="107" pos:column="54"/></name><argument_list pos:line="107" pos:column="54">(<argument><expr><name pos:line="107" pos:column="55">pIdx<pos:position pos:line="107" pos:column="59"/></name></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call><operator pos:line="107" pos:column="60">)<pos:position pos:line="107" pos:column="61"/></operator></expr>
            )<pos:position pos:line="108" pos:column="14"/></condition><then><block pos:line="108" pos:column="14">{
              <continue pos:line="109" pos:column="15">continue;<pos:position pos:line="109" pos:column="24"/></continue>  <comment type="block" pos:line="109" pos:column="26">/* This index is not unique over the IN RHS columns */</comment>
            }<pos:position pos:line="110" pos:column="14"/></block></then></if>
          }<pos:position pos:line="111" pos:column="12"/></block></then></if>
  
          <expr_stmt><expr><name pos:line="113" pos:column="11">colUsed<pos:position pos:line="113" pos:column="18"/></name> <operator pos:line="113" pos:column="19">=<pos:position pos:line="113" pos:column="20"/></operator> <literal type="number" pos:line="113" pos:column="21">0<pos:position pos:line="113" pos:column="22"/></literal></expr>;<pos:position pos:line="113" pos:column="23"/></expr_stmt>   <comment type="block" pos:line="113" pos:column="26">/* Columns of index used so far */</comment>
          <for pos:line="114" pos:column="11">for<control pos:line="114" pos:column="14">(<init><expr><name pos:line="114" pos:column="15">i<pos:position pos:line="114" pos:column="16"/></name><operator pos:line="114" pos:column="16">=<pos:position pos:line="114" pos:column="17"/></operator><literal type="number" pos:line="114" pos:column="17">0<pos:position pos:line="114" pos:column="18"/></literal></expr>;<pos:position pos:line="114" pos:column="19"/></init> <condition><expr><name pos:line="114" pos:column="20">i<pos:position pos:line="114" pos:column="21"/></name><operator pos:line="114" pos:column="21">&lt;<pos:position pos:line="114" pos:column="25"/></operator><name pos:line="114" pos:column="22">nExpr<pos:position pos:line="114" pos:column="27"/></name></expr>;<pos:position pos:line="114" pos:column="28"/></condition> <incr><expr><name pos:line="114" pos:column="29">i<pos:position pos:line="114" pos:column="30"/></name><operator pos:line="114" pos:column="30">++<pos:position pos:line="114" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="114" pos:column="33"/></control><block pos:line="114" pos:column="33">{
            <decl_stmt><decl><type><name pos:line="115" pos:column="13">Expr<pos:position pos:line="115" pos:column="17"/></name> <modifier pos:line="115" pos:column="18">*<pos:position pos:line="115" pos:column="19"/></modifier></type><name pos:line="115" pos:column="19">pLhs<pos:position pos:line="115" pos:column="23"/></name> <init pos:line="115" pos:column="24">= <expr><call><name pos:line="115" pos:column="26">sqlite3VectorFieldSubexpr<pos:position pos:line="115" pos:column="51"/></name><argument_list pos:line="115" pos:column="51">(<argument><expr><name><name pos:line="115" pos:column="52">pX<pos:position pos:line="115" pos:column="54"/></name><operator pos:line="115" pos:column="54">-&gt;<pos:position pos:line="115" pos:column="59"/></operator><name pos:line="115" pos:column="56">pLeft<pos:position pos:line="115" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="63">i<pos:position pos:line="115" pos:column="64"/></name></expr></argument>)<pos:position pos:line="115" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="115" pos:column="66"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">Expr<pos:position pos:line="116" pos:column="17"/></name> <modifier pos:line="116" pos:column="18">*<pos:position pos:line="116" pos:column="19"/></modifier></type><name pos:line="116" pos:column="19">pRhs<pos:position pos:line="116" pos:column="23"/></name> <init pos:line="116" pos:column="24">= <expr><name><name pos:line="116" pos:column="26">pEList<pos:position pos:line="116" pos:column="32"/></name><operator pos:line="116" pos:column="32">-&gt;<pos:position pos:line="116" pos:column="37"/></operator><name pos:line="116" pos:column="34">a<pos:position pos:line="116" pos:column="35"/></name><index pos:line="116" pos:column="35">[<expr><name pos:line="116" pos:column="36">i<pos:position pos:line="116" pos:column="37"/></name></expr>]<pos:position pos:line="116" pos:column="38"/></index></name><operator pos:line="116" pos:column="38">.<pos:position pos:line="116" pos:column="39"/></operator><name pos:line="116" pos:column="39">pExpr<pos:position pos:line="116" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="116" pos:column="45"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">CollSeq<pos:position pos:line="117" pos:column="20"/></name> <modifier pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></modifier></type><name pos:line="117" pos:column="22">pReq<pos:position pos:line="117" pos:column="26"/></name> <init pos:line="117" pos:column="27">= <expr><call><name pos:line="117" pos:column="29">sqlite3BinaryCompareCollSeq<pos:position pos:line="117" pos:column="56"/></name><argument_list pos:line="117" pos:column="56">(<argument><expr><name pos:line="117" pos:column="57">pParse<pos:position pos:line="117" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="65">pLhs<pos:position pos:line="117" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="71">pRhs<pos:position pos:line="117" pos:column="75"/></name></expr></argument>)<pos:position pos:line="117" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="77"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="118" pos:column="13">int<pos:position pos:line="118" pos:column="16"/></name></type> <name pos:line="118" pos:column="17">j<pos:position pos:line="118" pos:column="18"/></name></decl>;<pos:position pos:line="118" pos:column="19"/></decl_stmt>
  
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">assert<pos:position pos:line="120" pos:column="19"/></name><argument_list pos:line="120" pos:column="19">( <argument><expr><name pos:line="120" pos:column="21">pReq<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">!=<pos:position pos:line="120" pos:column="27"/></operator><literal type="number" pos:line="120" pos:column="27">0<pos:position pos:line="120" pos:column="28"/></literal> <operator pos:line="120" pos:column="29">||<pos:position pos:line="120" pos:column="31"/></operator> <name><name pos:line="120" pos:column="32">pRhs<pos:position pos:line="120" pos:column="36"/></name><operator pos:line="120" pos:column="36">-&gt;<pos:position pos:line="120" pos:column="41"/></operator><name pos:line="120" pos:column="38">iColumn<pos:position pos:line="120" pos:column="45"/></name></name><operator pos:line="120" pos:column="45">==<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="47">XN_ROWID<pos:position pos:line="120" pos:column="55"/></name> <operator pos:line="120" pos:column="56">||<pos:position pos:line="120" pos:column="58"/></operator> <name><name pos:line="120" pos:column="59">pParse<pos:position pos:line="120" pos:column="65"/></name><operator pos:line="120" pos:column="65">-&gt;<pos:position pos:line="120" pos:column="70"/></operator><name pos:line="120" pos:column="67">nErr<pos:position pos:line="120" pos:column="71"/></name></name></expr></argument> )<pos:position pos:line="120" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="74"/></expr_stmt>
            <for pos:line="121" pos:column="13">for<control pos:line="121" pos:column="16">(<init><expr><name pos:line="121" pos:column="17">j<pos:position pos:line="121" pos:column="18"/></name><operator pos:line="121" pos:column="18">=<pos:position pos:line="121" pos:column="19"/></operator><literal type="number" pos:line="121" pos:column="19">0<pos:position pos:line="121" pos:column="20"/></literal></expr>;<pos:position pos:line="121" pos:column="21"/></init> <condition><expr><name pos:line="121" pos:column="22">j<pos:position pos:line="121" pos:column="23"/></name><operator pos:line="121" pos:column="23">&lt;<pos:position pos:line="121" pos:column="27"/></operator><name pos:line="121" pos:column="24">nExpr<pos:position pos:line="121" pos:column="29"/></name></expr>;<pos:position pos:line="121" pos:column="30"/></condition> <incr><expr><name pos:line="121" pos:column="31">j<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">++<pos:position pos:line="121" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="121" pos:column="35"/></control><block pos:line="121" pos:column="35">{
              <if pos:line="122" pos:column="15">if<condition pos:line="122" pos:column="17">( <expr><name><name pos:line="122" pos:column="19">pIdx<pos:position pos:line="122" pos:column="23"/></name><operator pos:line="122" pos:column="23">-&gt;<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="25">aiColumn<pos:position pos:line="122" pos:column="33"/></name><index pos:line="122" pos:column="33">[<expr><name pos:line="122" pos:column="34">j<pos:position pos:line="122" pos:column="35"/></name></expr>]<pos:position pos:line="122" pos:column="36"/></index></name><operator pos:line="122" pos:column="36">!=<pos:position pos:line="122" pos:column="38"/></operator><name><name pos:line="122" pos:column="38">pRhs<pos:position pos:line="122" pos:column="42"/></name><operator pos:line="122" pos:column="42">-&gt;<pos:position pos:line="122" pos:column="47"/></operator><name pos:line="122" pos:column="44">iColumn<pos:position pos:line="122" pos:column="51"/></name></name></expr> )<pos:position pos:line="122" pos:column="53"/></condition><then pos:line="122" pos:column="53"> <block type="pseudo"><continue pos:line="122" pos:column="54">continue;<pos:position pos:line="122" pos:column="63"/></continue></block></then></if>
              <expr_stmt><expr><call><name pos:line="123" pos:column="15">assert<pos:position pos:line="123" pos:column="21"/></name><argument_list pos:line="123" pos:column="21">( <argument><expr><name><name pos:line="123" pos:column="23">pIdx<pos:position pos:line="123" pos:column="27"/></name><operator pos:line="123" pos:column="27">-&gt;<pos:position pos:line="123" pos:column="32"/></operator><name pos:line="123" pos:column="29">azColl<pos:position pos:line="123" pos:column="35"/></name><index pos:line="123" pos:column="35">[<expr><name pos:line="123" pos:column="36">j<pos:position pos:line="123" pos:column="37"/></name></expr>]<pos:position pos:line="123" pos:column="38"/></index></name></expr></argument> )<pos:position pos:line="123" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="41"/></expr_stmt>
              <if pos:line="124" pos:column="15">if<condition pos:line="124" pos:column="17">( <expr><name pos:line="124" pos:column="19">pReq<pos:position pos:line="124" pos:column="23"/></name><operator pos:line="124" pos:column="23">!=<pos:position pos:line="124" pos:column="25"/></operator><literal type="number" pos:line="124" pos:column="25">0<pos:position pos:line="124" pos:column="26"/></literal> <operator pos:line="124" pos:column="27">&amp;&amp;<pos:position pos:line="124" pos:column="37"/></operator> <call><name pos:line="124" pos:column="30">sqlite3StrICmp<pos:position pos:line="124" pos:column="44"/></name><argument_list pos:line="124" pos:column="44">(<argument><expr><name><name pos:line="124" pos:column="45">pReq<pos:position pos:line="124" pos:column="49"/></name><operator pos:line="124" pos:column="49">-&gt;<pos:position pos:line="124" pos:column="54"/></operator><name pos:line="124" pos:column="51">zName<pos:position pos:line="124" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="58">pIdx<pos:position pos:line="124" pos:column="62"/></name><operator pos:line="124" pos:column="62">-&gt;<pos:position pos:line="124" pos:column="67"/></operator><name pos:line="124" pos:column="64">azColl<pos:position pos:line="124" pos:column="70"/></name><index pos:line="124" pos:column="70">[<expr><name pos:line="124" pos:column="71">j<pos:position pos:line="124" pos:column="72"/></name></expr>]<pos:position pos:line="124" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="124" pos:column="74"/></argument_list></call><operator pos:line="124" pos:column="74">!=<pos:position pos:line="124" pos:column="76"/></operator><literal type="number" pos:line="124" pos:column="76">0<pos:position pos:line="124" pos:column="77"/></literal></expr> )<pos:position pos:line="124" pos:column="79"/></condition><then><block pos:line="124" pos:column="79">{
                <continue pos:line="125" pos:column="17">continue;<pos:position pos:line="125" pos:column="26"/></continue>
              }<pos:position pos:line="126" pos:column="16"/></block></then></if>
              <break pos:line="127" pos:column="15">break;<pos:position pos:line="127" pos:column="21"/></break>
            }<pos:position pos:line="128" pos:column="14"/></block></for>
            <if pos:line="129" pos:column="13">if<condition pos:line="129" pos:column="15">( <expr><name pos:line="129" pos:column="17">j<pos:position pos:line="129" pos:column="18"/></name><operator pos:line="129" pos:column="18">==<pos:position pos:line="129" pos:column="20"/></operator><name pos:line="129" pos:column="20">nExpr<pos:position pos:line="129" pos:column="25"/></name></expr> )<pos:position pos:line="129" pos:column="27"/></condition><then pos:line="129" pos:column="27"> <block type="pseudo"><break pos:line="129" pos:column="28">break;<pos:position pos:line="129" pos:column="34"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="130" pos:column="13">mCol<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">=<pos:position pos:line="130" pos:column="19"/></operator> <call><name pos:line="130" pos:column="20">MASKBIT<pos:position pos:line="130" pos:column="27"/></name><argument_list pos:line="130" pos:column="27">(<argument><expr><name pos:line="130" pos:column="28">j<pos:position pos:line="130" pos:column="29"/></name></expr></argument>)<pos:position pos:line="130" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>
            <if pos:line="131" pos:column="13">if<condition pos:line="131" pos:column="15">( <expr><name pos:line="131" pos:column="17">mCol<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">&amp;<pos:position pos:line="131" pos:column="27"/></operator> <name pos:line="131" pos:column="24">colUsed<pos:position pos:line="131" pos:column="31"/></name></expr> )<pos:position pos:line="131" pos:column="33"/></condition><then pos:line="131" pos:column="33"> <block type="pseudo"><break pos:line="131" pos:column="34">break;<pos:position pos:line="131" pos:column="40"/></break></block></then></if> <comment type="block" pos:line="131" pos:column="41">/* Each column used only once */</comment>
            <expr_stmt><expr><name pos:line="132" pos:column="13">colUsed<pos:position pos:line="132" pos:column="20"/></name> <operator pos:line="132" pos:column="21">|=<pos:position pos:line="132" pos:column="23"/></operator> <name pos:line="132" pos:column="24">mCol<pos:position pos:line="132" pos:column="28"/></name></expr>;<pos:position pos:line="132" pos:column="29"/></expr_stmt>
            <if pos:line="133" pos:column="13">if<condition pos:line="133" pos:column="15">( <expr><name pos:line="133" pos:column="17">aiMap<pos:position pos:line="133" pos:column="22"/></name></expr> )<pos:position pos:line="133" pos:column="24"/></condition><then pos:line="133" pos:column="24"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="133" pos:column="25">aiMap<pos:position pos:line="133" pos:column="30"/></name><index pos:line="133" pos:column="30">[<expr><name pos:line="133" pos:column="31">i<pos:position pos:line="133" pos:column="32"/></name></expr>]<pos:position pos:line="133" pos:column="33"/></index></name> <operator pos:line="133" pos:column="34">=<pos:position pos:line="133" pos:column="35"/></operator> <name pos:line="133" pos:column="36">j<pos:position pos:line="133" pos:column="37"/></name></expr>;<pos:position pos:line="133" pos:column="38"/></expr_stmt></block></then></if>
          }<pos:position pos:line="134" pos:column="12"/></block></for>
  
          <expr_stmt><expr><call><name pos:line="136" pos:column="11">assert<pos:position pos:line="136" pos:column="17"/></name><argument_list pos:line="136" pos:column="17">( <argument><expr><name pos:line="136" pos:column="19">i<pos:position pos:line="136" pos:column="20"/></name><operator pos:line="136" pos:column="20">==<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="22">nExpr<pos:position pos:line="136" pos:column="27"/></name> <operator pos:line="136" pos:column="28">||<pos:position pos:line="136" pos:column="30"/></operator> <name pos:line="136" pos:column="31">colUsed<pos:position pos:line="136" pos:column="38"/></name><operator pos:line="136" pos:column="38">!=<pos:position pos:line="136" pos:column="40"/></operator><operator pos:line="136" pos:column="40">(<pos:position pos:line="136" pos:column="41"/></operator><call><name pos:line="136" pos:column="41">MASKBIT<pos:position pos:line="136" pos:column="48"/></name><argument_list pos:line="136" pos:column="48">(<argument><expr><name pos:line="136" pos:column="49">nExpr<pos:position pos:line="136" pos:column="54"/></name></expr></argument>)<pos:position pos:line="136" pos:column="55"/></argument_list></call><operator pos:line="136" pos:column="55">-<pos:position pos:line="136" pos:column="56"/></operator><literal type="number" pos:line="136" pos:column="56">1<pos:position pos:line="136" pos:column="57"/></literal><operator pos:line="136" pos:column="57">)<pos:position pos:line="136" pos:column="58"/></operator></expr></argument> )<pos:position pos:line="136" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="61"/></expr_stmt>
          <if pos:line="137" pos:column="11">if<condition pos:line="137" pos:column="13">( <expr><name pos:line="137" pos:column="15">colUsed<pos:position pos:line="137" pos:column="22"/></name><operator pos:line="137" pos:column="22">==<pos:position pos:line="137" pos:column="24"/></operator><operator pos:line="137" pos:column="24">(<pos:position pos:line="137" pos:column="25"/></operator><call><name pos:line="137" pos:column="25">MASKBIT<pos:position pos:line="137" pos:column="32"/></name><argument_list pos:line="137" pos:column="32">(<argument><expr><name pos:line="137" pos:column="33">nExpr<pos:position pos:line="137" pos:column="38"/></name></expr></argument>)<pos:position pos:line="137" pos:column="39"/></argument_list></call><operator pos:line="137" pos:column="39">-<pos:position pos:line="137" pos:column="40"/></operator><literal type="number" pos:line="137" pos:column="40">1<pos:position pos:line="137" pos:column="41"/></literal><operator pos:line="137" pos:column="41">)<pos:position pos:line="137" pos:column="42"/></operator></expr> )<pos:position pos:line="137" pos:column="44"/></condition><then><block pos:line="137" pos:column="44">{
            <comment type="block" pos:line="138" pos:column="13">/* If we reach this point, that means the index pIdx is usable */</comment>
            <decl_stmt><decl><type><name pos:line="139" pos:column="13">int<pos:position pos:line="139" pos:column="16"/></name></type> <name pos:line="139" pos:column="17">iAddr<pos:position pos:line="139" pos:column="22"/></name> <init pos:line="139" pos:column="23">= <expr><call><name pos:line="139" pos:column="25">sqlite3VdbeAddOp0<pos:position pos:line="139" pos:column="42"/></name><argument_list pos:line="139" pos:column="42">(<argument><expr><name pos:line="139" pos:column="43">v<pos:position pos:line="139" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="46">OP_Once<pos:position pos:line="139" pos:column="53"/></name></expr></argument>)<pos:position pos:line="139" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="139" pos:column="55"/></decl_stmt> <expr_stmt><expr><call><name pos:line="139" pos:column="56">VdbeCoverage<pos:position pos:line="139" pos:column="68"/></name><argument_list pos:line="139" pos:column="68">(<argument><expr><name pos:line="139" pos:column="69">v<pos:position pos:line="139" pos:column="70"/></name></expr></argument>)<pos:position pos:line="139" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="72"/></expr_stmt>
<cpp:ifndef pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">ifndef<pos:position pos:line="140" pos:column="8"/></cpp:directive> <name pos:line="140" pos:column="9">SQLITE_OMIT_EXPLAIN<pos:position pos:line="140" pos:column="28"/></name></cpp:ifndef>
            <expr_stmt><expr><call><name pos:line="141" pos:column="13">sqlite3VdbeAddOp4<pos:position pos:line="141" pos:column="30"/></name><argument_list pos:line="141" pos:column="30">(<argument><expr><name pos:line="141" pos:column="31">v<pos:position pos:line="141" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="34">OP_Explain<pos:position pos:line="141" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="46">0<pos:position pos:line="141" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="49">0<pos:position pos:line="141" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="52">0<pos:position pos:line="141" pos:column="53"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="142" pos:column="15">sqlite3MPrintf<pos:position pos:line="142" pos:column="29"/></name><argument_list pos:line="142" pos:column="29">(<argument><expr><name pos:line="142" pos:column="30">db<pos:position pos:line="142" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="34">"USING INDEX %s FOR IN-OPERATOR"<pos:position pos:line="142" pos:column="66"/></literal></expr></argument>,<argument><expr><name><name pos:line="142" pos:column="67">pIdx<pos:position pos:line="142" pos:column="71"/></name><operator pos:line="142" pos:column="71">-&gt;<pos:position pos:line="142" pos:column="76"/></operator><name pos:line="142" pos:column="73">zName<pos:position pos:line="142" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="79"/></argument_list></call></expr></argument>,
              <argument><expr><name pos:line="143" pos:column="15">P4_DYNAMIC<pos:position pos:line="143" pos:column="25"/></name></expr></argument>)<pos:position pos:line="143" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">endif<pos:position pos:line="144" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="145" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="145" pos:column="30"/></name><argument_list pos:line="145" pos:column="30">(<argument><expr><name pos:line="145" pos:column="31">v<pos:position pos:line="145" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="34">OP_OpenRead<pos:position pos:line="145" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="47">iTab<pos:position pos:line="145" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="53">pIdx<pos:position pos:line="145" pos:column="57"/></name><operator pos:line="145" pos:column="57">-&gt;<pos:position pos:line="145" pos:column="62"/></operator><name pos:line="145" pos:column="59">tnum<pos:position pos:line="145" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="65">iDb<pos:position pos:line="145" pos:column="68"/></name></expr></argument>)<pos:position pos:line="145" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">sqlite3VdbeSetP4KeyInfo<pos:position pos:line="146" pos:column="36"/></name><argument_list pos:line="146" pos:column="36">(<argument><expr><name pos:line="146" pos:column="37">pParse<pos:position pos:line="146" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="45">pIdx<pos:position pos:line="146" pos:column="49"/></name></expr></argument>)<pos:position pos:line="146" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">VdbeComment<pos:position pos:line="147" pos:column="24"/></name><argument_list pos:line="147" pos:column="24">(<argument><expr><operator pos:line="147" pos:column="25">(<pos:position pos:line="147" pos:column="26"/></operator><name pos:line="147" pos:column="26">v<pos:position pos:line="147" pos:column="27"/></name><operator pos:line="147" pos:column="27">,<pos:position pos:line="147" pos:column="28"/></operator> <literal type="string" pos:line="147" pos:column="29">"%s"<pos:position pos:line="147" pos:column="33"/></literal><operator pos:line="147" pos:column="33">,<pos:position pos:line="147" pos:column="34"/></operator> <name><name pos:line="147" pos:column="35">pIdx<pos:position pos:line="147" pos:column="39"/></name><operator pos:line="147" pos:column="39">-&gt;<pos:position pos:line="147" pos:column="44"/></operator><name pos:line="147" pos:column="41">zName<pos:position pos:line="147" pos:column="46"/></name></name><operator pos:line="147" pos:column="46">)<pos:position pos:line="147" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="147" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">assert<pos:position pos:line="148" pos:column="19"/></name><argument_list pos:line="148" pos:column="19">( <argument><expr><name pos:line="148" pos:column="21">IN_INDEX_INDEX_DESC<pos:position pos:line="148" pos:column="40"/></name> <operator pos:line="148" pos:column="41">==<pos:position pos:line="148" pos:column="43"/></operator> <name pos:line="148" pos:column="44">IN_INDEX_INDEX_ASC<pos:position pos:line="148" pos:column="62"/></name><operator pos:line="148" pos:column="62">+<pos:position pos:line="148" pos:column="63"/></operator><literal type="number" pos:line="148" pos:column="63">1<pos:position pos:line="148" pos:column="64"/></literal></expr></argument> )<pos:position pos:line="148" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name pos:line="149" pos:column="13">eType<pos:position pos:line="149" pos:column="18"/></name> <operator pos:line="149" pos:column="19">=<pos:position pos:line="149" pos:column="20"/></operator> <name pos:line="149" pos:column="21">IN_INDEX_INDEX_ASC<pos:position pos:line="149" pos:column="39"/></name> <operator pos:line="149" pos:column="40">+<pos:position pos:line="149" pos:column="41"/></operator> <name><name pos:line="149" pos:column="42">pIdx<pos:position pos:line="149" pos:column="46"/></name><operator pos:line="149" pos:column="46">-&gt;<pos:position pos:line="149" pos:column="51"/></operator><name pos:line="149" pos:column="48">aSortOrder<pos:position pos:line="149" pos:column="58"/></name><index pos:line="149" pos:column="58">[<expr><literal type="number" pos:line="149" pos:column="59">0<pos:position pos:line="149" pos:column="60"/></literal></expr>]<pos:position pos:line="149" pos:column="61"/></index></name></expr>;<pos:position pos:line="149" pos:column="62"/></expr_stmt>
  
            <if pos:line="151" pos:column="13">if<condition pos:line="151" pos:column="15">( <expr><name pos:line="151" pos:column="17">prRhsHasNull<pos:position pos:line="151" pos:column="29"/></name></expr> )<pos:position pos:line="151" pos:column="31"/></condition><then><block pos:line="151" pos:column="31">{
<cpp:ifdef pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">ifdef<pos:position pos:line="152" pos:column="7"/></cpp:directive> <name pos:line="152" pos:column="8">SQLITE_ENABLE_COLUMN_USED_MASK<pos:position pos:line="152" pos:column="38"/></name></cpp:ifdef>
              <decl_stmt><decl><type><name pos:line="153" pos:column="15">i64<pos:position pos:line="153" pos:column="18"/></name></type> <name pos:line="153" pos:column="19">mask<pos:position pos:line="153" pos:column="23"/></name> <init pos:line="153" pos:column="24">= <expr><operator pos:line="153" pos:column="26">(<pos:position pos:line="153" pos:column="27"/></operator><literal type="number" pos:line="153" pos:column="27">1<pos:position pos:line="153" pos:column="28"/></literal><operator pos:line="153" pos:column="28">&lt;&lt;<pos:position pos:line="153" pos:column="36"/></operator><name pos:line="153" pos:column="30">nExpr<pos:position pos:line="153" pos:column="35"/></name><operator pos:line="153" pos:column="35">)<pos:position pos:line="153" pos:column="36"/></operator><operator pos:line="153" pos:column="36">-<pos:position pos:line="153" pos:column="37"/></operator><literal type="number" pos:line="153" pos:column="37">1<pos:position pos:line="153" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="153" pos:column="39"/></decl_stmt>
              <expr_stmt><expr><call><name pos:line="154" pos:column="15">sqlite3VdbeAddOp4Dup8<pos:position pos:line="154" pos:column="36"/></name><argument_list pos:line="154" pos:column="36">(<argument><expr><name pos:line="154" pos:column="37">v<pos:position pos:line="154" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="40">OP_ColumnsUsed<pos:position pos:line="154" pos:column="54"/></name></expr></argument>, 
                  <argument><expr><name pos:line="155" pos:column="19">iTab<pos:position pos:line="155" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="25">0<pos:position pos:line="155" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="28">0<pos:position pos:line="155" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="155" pos:column="31">(<pos:position pos:line="155" pos:column="32"/></operator><name pos:line="155" pos:column="32">u8<pos:position pos:line="155" pos:column="34"/></name><operator pos:line="155" pos:column="34">*<pos:position pos:line="155" pos:column="35"/></operator><operator pos:line="155" pos:column="35">)<pos:position pos:line="155" pos:column="36"/></operator><operator pos:line="155" pos:column="36">&amp;<pos:position pos:line="155" pos:column="41"/></operator><name pos:line="155" pos:column="37">mask<pos:position pos:line="155" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="43">P4_INT64<pos:position pos:line="155" pos:column="51"/></name></expr></argument>)<pos:position pos:line="155" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif<pos:position pos:line="156" pos:column="7"/></cpp:directive></cpp:endif>
              <expr_stmt><expr><operator pos:line="157" pos:column="15">*<pos:position pos:line="157" pos:column="16"/></operator><name pos:line="157" pos:column="16">prRhsHasNull<pos:position pos:line="157" pos:column="28"/></name> <operator pos:line="157" pos:column="29">=<pos:position pos:line="157" pos:column="30"/></operator> <operator pos:line="157" pos:column="31">++<pos:position pos:line="157" pos:column="33"/></operator><name><name pos:line="157" pos:column="33">pParse<pos:position pos:line="157" pos:column="39"/></name><operator pos:line="157" pos:column="39">-&gt;<pos:position pos:line="157" pos:column="44"/></operator><name pos:line="157" pos:column="41">nMem<pos:position pos:line="157" pos:column="45"/></name></name></expr>;<pos:position pos:line="157" pos:column="46"/></expr_stmt>
              <if pos:line="158" pos:column="15">if<condition pos:line="158" pos:column="17">( <expr><name pos:line="158" pos:column="19">nExpr<pos:position pos:line="158" pos:column="24"/></name><operator pos:line="158" pos:column="24">==<pos:position pos:line="158" pos:column="26"/></operator><literal type="number" pos:line="158" pos:column="26">1<pos:position pos:line="158" pos:column="27"/></literal></expr> )<pos:position pos:line="158" pos:column="29"/></condition><then><block pos:line="158" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="159" pos:column="17">sqlite3SetHasNullFlag<pos:position pos:line="159" pos:column="38"/></name><argument_list pos:line="159" pos:column="38">(<argument><expr><name pos:line="159" pos:column="39">v<pos:position pos:line="159" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="42">iTab<pos:position pos:line="159" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="48">*<pos:position pos:line="159" pos:column="49"/></operator><name pos:line="159" pos:column="49">prRhsHasNull<pos:position pos:line="159" pos:column="61"/></name></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>
              }<pos:position pos:line="160" pos:column="16"/></block></then></if>
            }<pos:position pos:line="161" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="162" pos:column="13">sqlite3VdbeJumpHere<pos:position pos:line="162" pos:column="32"/></name><argument_list pos:line="162" pos:column="32">(<argument><expr><name pos:line="162" pos:column="33">v<pos:position pos:line="162" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="36">iAddr<pos:position pos:line="162" pos:column="41"/></name></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>
          }<pos:position pos:line="163" pos:column="12"/></block></then></if>
        }<pos:position pos:line="164" pos:column="10"/></block></for> <comment type="block" pos:line="164" pos:column="11">/* End loop over indexes */</comment>
      }<pos:position pos:line="165" pos:column="8"/></block></then></if> <comment type="block" pos:line="165" pos:column="9">/* End if( affinity_ok ) */</comment>
    }<pos:position pos:line="166" pos:column="6"/></block></else></if> <comment type="block" pos:line="166" pos:column="7">/* End if not an rowid index */</comment>
  }<pos:position pos:line="167" pos:column="4"/></block></then></if> <comment type="block" pos:line="167" pos:column="5">/* End attempt to optimize using an index */</comment>

  <comment type="block" pos:line="169" pos:column="3">/* If no preexisting index is available for the IN clause
  ** and IN_INDEX_NOOP is an allowed reply
  ** and the RHS of the IN operator is a list, not a subquery
  ** and the RHS is not constant or has two or fewer terms,
  ** then it is not worth creating an ephemeral table to evaluate
  ** the IN operator so return IN_INDEX_NOOP.
  */</comment>
  <if pos:line="176" pos:column="3">if<condition pos:line="176" pos:column="5">( <expr><name pos:line="176" pos:column="7">eType<pos:position pos:line="176" pos:column="12"/></name><operator pos:line="176" pos:column="12">==<pos:position pos:line="176" pos:column="14"/></operator><literal type="number" pos:line="176" pos:column="14">0<pos:position pos:line="176" pos:column="15"/></literal>
   <operator pos:line="177" pos:column="4">&amp;&amp;<pos:position pos:line="177" pos:column="14"/></operator> <operator pos:line="177" pos:column="7">(<pos:position pos:line="177" pos:column="8"/></operator><name pos:line="177" pos:column="8">inFlags<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">&amp;<pos:position pos:line="177" pos:column="21"/></operator> <name pos:line="177" pos:column="18">IN_INDEX_NOOP_OK<pos:position pos:line="177" pos:column="34"/></name><operator pos:line="177" pos:column="34">)<pos:position pos:line="177" pos:column="35"/></operator>
   <operator pos:line="178" pos:column="4">&amp;&amp;<pos:position pos:line="178" pos:column="14"/></operator> <operator pos:line="178" pos:column="7">!<pos:position pos:line="178" pos:column="8"/></operator><call><name pos:line="178" pos:column="8">ExprHasProperty<pos:position pos:line="178" pos:column="23"/></name><argument_list pos:line="178" pos:column="23">(<argument><expr><name pos:line="178" pos:column="24">pX<pos:position pos:line="178" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="28">EP_xIsSelect<pos:position pos:line="178" pos:column="40"/></name></expr></argument>)<pos:position pos:line="178" pos:column="41"/></argument_list></call>
   <operator pos:line="179" pos:column="4">&amp;&amp;<pos:position pos:line="179" pos:column="14"/></operator> <operator pos:line="179" pos:column="7">(<pos:position pos:line="179" pos:column="8"/></operator><operator pos:line="179" pos:column="8">!<pos:position pos:line="179" pos:column="9"/></operator><call><name pos:line="179" pos:column="9">sqlite3InRhsIsConstant<pos:position pos:line="179" pos:column="31"/></name><argument_list pos:line="179" pos:column="31">(<argument><expr><name pos:line="179" pos:column="32">pX<pos:position pos:line="179" pos:column="34"/></name></expr></argument>)<pos:position pos:line="179" pos:column="35"/></argument_list></call> <operator pos:line="179" pos:column="36">||<pos:position pos:line="179" pos:column="38"/></operator> <name><name pos:line="179" pos:column="39">pX<pos:position pos:line="179" pos:column="41"/></name><operator pos:line="179" pos:column="41">-&gt;<pos:position pos:line="179" pos:column="46"/></operator><name pos:line="179" pos:column="43">x<pos:position pos:line="179" pos:column="44"/></name><operator pos:line="179" pos:column="44">.<pos:position pos:line="179" pos:column="45"/></operator><name pos:line="179" pos:column="45">pList<pos:position pos:line="179" pos:column="50"/></name><operator pos:line="179" pos:column="50">-&gt;<pos:position pos:line="179" pos:column="55"/></operator><name pos:line="179" pos:column="52">nExpr<pos:position pos:line="179" pos:column="57"/></name></name><operator pos:line="179" pos:column="57">&lt;=<pos:position pos:line="179" pos:column="62"/></operator><literal type="number" pos:line="179" pos:column="59">2<pos:position pos:line="179" pos:column="60"/></literal><operator pos:line="179" pos:column="60">)<pos:position pos:line="179" pos:column="61"/></operator></expr>
  )<pos:position pos:line="180" pos:column="4"/></condition><then><block pos:line="180" pos:column="4">{
    <expr_stmt><expr><name pos:line="181" pos:column="5">eType<pos:position pos:line="181" pos:column="10"/></name> <operator pos:line="181" pos:column="11">=<pos:position pos:line="181" pos:column="12"/></operator> <name pos:line="181" pos:column="13">IN_INDEX_NOOP<pos:position pos:line="181" pos:column="26"/></name></expr>;<pos:position pos:line="181" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="182" pos:column="4"/></block></then></if>

  <if pos:line="184" pos:column="3">if<condition pos:line="184" pos:column="5">( <expr><name pos:line="184" pos:column="7">eType<pos:position pos:line="184" pos:column="12"/></name><operator pos:line="184" pos:column="12">==<pos:position pos:line="184" pos:column="14"/></operator><literal type="number" pos:line="184" pos:column="14">0<pos:position pos:line="184" pos:column="15"/></literal></expr> )<pos:position pos:line="184" pos:column="17"/></condition><then><block pos:line="184" pos:column="17">{
    <comment type="block" pos:line="185" pos:column="5">/* Could not find an existing table or index to use as the RHS b-tree.
    ** We will have to generate an ephemeral table to do the job.
    */</comment>
    <decl_stmt><decl><type><name pos:line="188" pos:column="5">u32<pos:position pos:line="188" pos:column="8"/></name></type> <name pos:line="188" pos:column="9">savedNQueryLoop<pos:position pos:line="188" pos:column="24"/></name> <init pos:line="188" pos:column="25">= <expr><name><name pos:line="188" pos:column="27">pParse<pos:position pos:line="188" pos:column="33"/></name><operator pos:line="188" pos:column="33">-&gt;<pos:position pos:line="188" pos:column="38"/></operator><name pos:line="188" pos:column="35">nQueryLoop<pos:position pos:line="188" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="188" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="189" pos:column="5">int<pos:position pos:line="189" pos:column="8"/></name></type> <name pos:line="189" pos:column="9">rMayHaveNull<pos:position pos:line="189" pos:column="21"/></name> <init pos:line="189" pos:column="22">= <expr><literal type="number" pos:line="189" pos:column="24">0<pos:position pos:line="189" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="189" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name pos:line="190" pos:column="5">eType<pos:position pos:line="190" pos:column="10"/></name> <operator pos:line="190" pos:column="11">=<pos:position pos:line="190" pos:column="12"/></operator> <name pos:line="190" pos:column="13">IN_INDEX_EPH<pos:position pos:line="190" pos:column="25"/></name></expr>;<pos:position pos:line="190" pos:column="26"/></expr_stmt>
    <if pos:line="191" pos:column="5">if<condition pos:line="191" pos:column="7">( <expr><name pos:line="191" pos:column="9">inFlags<pos:position pos:line="191" pos:column="16"/></name> <operator pos:line="191" pos:column="17">&amp;<pos:position pos:line="191" pos:column="22"/></operator> <name pos:line="191" pos:column="19">IN_INDEX_LOOP<pos:position pos:line="191" pos:column="32"/></name></expr> )<pos:position pos:line="191" pos:column="34"/></condition><then><block pos:line="191" pos:column="34">{
      <expr_stmt><expr><name><name pos:line="192" pos:column="7">pParse<pos:position pos:line="192" pos:column="13"/></name><operator pos:line="192" pos:column="13">-&gt;<pos:position pos:line="192" pos:column="18"/></operator><name pos:line="192" pos:column="15">nQueryLoop<pos:position pos:line="192" pos:column="25"/></name></name> <operator pos:line="192" pos:column="26">=<pos:position pos:line="192" pos:column="27"/></operator> <literal type="number" pos:line="192" pos:column="28">0<pos:position pos:line="192" pos:column="29"/></literal></expr>;<pos:position pos:line="192" pos:column="30"/></expr_stmt>
      <if pos:line="193" pos:column="7">if<condition pos:line="193" pos:column="9">( <expr><name><name pos:line="193" pos:column="11">pX<pos:position pos:line="193" pos:column="13"/></name><operator pos:line="193" pos:column="13">-&gt;<pos:position pos:line="193" pos:column="18"/></operator><name pos:line="193" pos:column="15">pLeft<pos:position pos:line="193" pos:column="20"/></name><operator pos:line="193" pos:column="20">-&gt;<pos:position pos:line="193" pos:column="25"/></operator><name pos:line="193" pos:column="22">iColumn<pos:position pos:line="193" pos:column="29"/></name></name><operator pos:line="193" pos:column="29">&lt;<pos:position pos:line="193" pos:column="33"/></operator><literal type="number" pos:line="193" pos:column="30">0<pos:position pos:line="193" pos:column="31"/></literal> <operator pos:line="193" pos:column="32">&amp;&amp;<pos:position pos:line="193" pos:column="42"/></operator> <operator pos:line="193" pos:column="35">!<pos:position pos:line="193" pos:column="36"/></operator><call><name pos:line="193" pos:column="36">ExprHasProperty<pos:position pos:line="193" pos:column="51"/></name><argument_list pos:line="193" pos:column="51">(<argument><expr><name pos:line="193" pos:column="52">pX<pos:position pos:line="193" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="56">EP_xIsSelect<pos:position pos:line="193" pos:column="68"/></name></expr></argument>)<pos:position pos:line="193" pos:column="69"/></argument_list></call></expr> )<pos:position pos:line="193" pos:column="71"/></condition><then><block pos:line="193" pos:column="71">{
        <expr_stmt><expr><name pos:line="194" pos:column="9">eType<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">=<pos:position pos:line="194" pos:column="16"/></operator> <name pos:line="194" pos:column="17">IN_INDEX_ROWID<pos:position pos:line="194" pos:column="31"/></name></expr>;<pos:position pos:line="194" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="195" pos:column="8"/></block></then></if>
    }<pos:position pos:line="196" pos:column="6"/></block></then><elseif pos:line="196" pos:column="6">else <if pos:line="196" pos:column="11">if<condition pos:line="196" pos:column="13">( <expr><name pos:line="196" pos:column="15">prRhsHasNull<pos:position pos:line="196" pos:column="27"/></name></expr> )<pos:position pos:line="196" pos:column="29"/></condition><then><block pos:line="196" pos:column="29">{
      <expr_stmt><expr><operator pos:line="197" pos:column="7">*<pos:position pos:line="197" pos:column="8"/></operator><name pos:line="197" pos:column="8">prRhsHasNull<pos:position pos:line="197" pos:column="20"/></name> <operator pos:line="197" pos:column="21">=<pos:position pos:line="197" pos:column="22"/></operator> <name pos:line="197" pos:column="23">rMayHaveNull<pos:position pos:line="197" pos:column="35"/></name> <operator pos:line="197" pos:column="36">=<pos:position pos:line="197" pos:column="37"/></operator> <operator pos:line="197" pos:column="38">++<pos:position pos:line="197" pos:column="40"/></operator><name><name pos:line="197" pos:column="40">pParse<pos:position pos:line="197" pos:column="46"/></name><operator pos:line="197" pos:column="46">-&gt;<pos:position pos:line="197" pos:column="51"/></operator><name pos:line="197" pos:column="48">nMem<pos:position pos:line="197" pos:column="52"/></name></name></expr>;<pos:position pos:line="197" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="198" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">sqlite3CodeSubselect<pos:position pos:line="199" pos:column="25"/></name><argument_list pos:line="199" pos:column="25">(<argument><expr><name pos:line="199" pos:column="26">pParse<pos:position pos:line="199" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="34">pX<pos:position pos:line="199" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="38">rMayHaveNull<pos:position pos:line="199" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="52">eType<pos:position pos:line="199" pos:column="57"/></name><operator pos:line="199" pos:column="57">==<pos:position pos:line="199" pos:column="59"/></operator><name pos:line="199" pos:column="59">IN_INDEX_ROWID<pos:position pos:line="199" pos:column="73"/></name></expr></argument>)<pos:position pos:line="199" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="200" pos:column="5">pParse<pos:position pos:line="200" pos:column="11"/></name><operator pos:line="200" pos:column="11">-&gt;<pos:position pos:line="200" pos:column="16"/></operator><name pos:line="200" pos:column="13">nQueryLoop<pos:position pos:line="200" pos:column="23"/></name></name> <operator pos:line="200" pos:column="24">=<pos:position pos:line="200" pos:column="25"/></operator> <name pos:line="200" pos:column="26">savedNQueryLoop<pos:position pos:line="200" pos:column="41"/></name></expr>;<pos:position pos:line="200" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="201" pos:column="4"/></block></then><else pos:line="201" pos:column="4">else<block pos:line="201" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="202" pos:column="5">pX<pos:position pos:line="202" pos:column="7"/></name><operator pos:line="202" pos:column="7">-&gt;<pos:position pos:line="202" pos:column="12"/></operator><name pos:line="202" pos:column="9">iTable<pos:position pos:line="202" pos:column="15"/></name></name> <operator pos:line="202" pos:column="16">=<pos:position pos:line="202" pos:column="17"/></operator> <name pos:line="202" pos:column="18">iTab<pos:position pos:line="202" pos:column="22"/></name></expr>;<pos:position pos:line="202" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="203" pos:column="4"/></block></else></if>

  <if pos:line="205" pos:column="3">if<condition pos:line="205" pos:column="5">( <expr><name pos:line="205" pos:column="7">aiMap<pos:position pos:line="205" pos:column="12"/></name> <operator pos:line="205" pos:column="13">&amp;&amp;<pos:position pos:line="205" pos:column="23"/></operator> <name pos:line="205" pos:column="16">eType<pos:position pos:line="205" pos:column="21"/></name><operator pos:line="205" pos:column="21">!=<pos:position pos:line="205" pos:column="23"/></operator><name pos:line="205" pos:column="23">IN_INDEX_INDEX_ASC<pos:position pos:line="205" pos:column="41"/></name> <operator pos:line="205" pos:column="42">&amp;&amp;<pos:position pos:line="205" pos:column="52"/></operator> <name pos:line="205" pos:column="45">eType<pos:position pos:line="205" pos:column="50"/></name><operator pos:line="205" pos:column="50">!=<pos:position pos:line="205" pos:column="52"/></operator><name pos:line="205" pos:column="52">IN_INDEX_INDEX_DESC<pos:position pos:line="205" pos:column="71"/></name></expr> )<pos:position pos:line="205" pos:column="73"/></condition><then><block pos:line="205" pos:column="73">{
    <decl_stmt><decl><type><name pos:line="206" pos:column="5">int<pos:position pos:line="206" pos:column="8"/></name></type> <name pos:line="206" pos:column="9">i<pos:position pos:line="206" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="206" pos:column="12">n<pos:position pos:line="206" pos:column="13"/></name></decl>;<pos:position pos:line="206" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name pos:line="207" pos:column="5">n<pos:position pos:line="207" pos:column="6"/></name> <operator pos:line="207" pos:column="7">=<pos:position pos:line="207" pos:column="8"/></operator> <call><name pos:line="207" pos:column="9">sqlite3ExprVectorSize<pos:position pos:line="207" pos:column="30"/></name><argument_list pos:line="207" pos:column="30">(<argument><expr><name><name pos:line="207" pos:column="31">pX<pos:position pos:line="207" pos:column="33"/></name><operator pos:line="207" pos:column="33">-&gt;<pos:position pos:line="207" pos:column="38"/></operator><name pos:line="207" pos:column="35">pLeft<pos:position pos:line="207" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="42"/></expr_stmt>
    <for pos:line="208" pos:column="5">for<control pos:line="208" pos:column="8">(<init><expr><name pos:line="208" pos:column="9">i<pos:position pos:line="208" pos:column="10"/></name><operator pos:line="208" pos:column="10">=<pos:position pos:line="208" pos:column="11"/></operator><literal type="number" pos:line="208" pos:column="11">0<pos:position pos:line="208" pos:column="12"/></literal></expr>;<pos:position pos:line="208" pos:column="13"/></init> <condition><expr><name pos:line="208" pos:column="14">i<pos:position pos:line="208" pos:column="15"/></name><operator pos:line="208" pos:column="15">&lt;<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="16">n<pos:position pos:line="208" pos:column="17"/></name></expr>;<pos:position pos:line="208" pos:column="18"/></condition> <incr><expr><name pos:line="208" pos:column="19">i<pos:position pos:line="208" pos:column="20"/></name><operator pos:line="208" pos:column="20">++<pos:position pos:line="208" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="208" pos:column="23"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="208" pos:column="24">aiMap<pos:position pos:line="208" pos:column="29"/></name><index pos:line="208" pos:column="29">[<expr><name pos:line="208" pos:column="30">i<pos:position pos:line="208" pos:column="31"/></name></expr>]<pos:position pos:line="208" pos:column="32"/></index></name> <operator pos:line="208" pos:column="33">=<pos:position pos:line="208" pos:column="34"/></operator> <name pos:line="208" pos:column="35">i<pos:position pos:line="208" pos:column="36"/></name></expr>;<pos:position pos:line="208" pos:column="37"/></expr_stmt></block></for>
  }<pos:position pos:line="209" pos:column="4"/></block></then></if>
  <return pos:line="210" pos:column="3">return <expr><name pos:line="210" pos:column="10">eType<pos:position pos:line="210" pos:column="15"/></name></expr>;<pos:position pos:line="210" pos:column="16"/></return>
}<pos:position pos:line="211" pos:column="2"/></block></function></unit>

diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/acinclude.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/acinclude.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/acinclude.m4	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/acinclude.m4	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -1594,219 +1594,12 @@
     fi
   else
     AC_MSG_ERROR([Unable to link function send])
   fi
 ])
 
-
-dnl CURL_CHECK_FUNC_RECVFROM
-dnl -------------------------------------------------
-dnl Test if the socket recvfrom() function is available,
-dnl and check its return type and the types of its
-dnl arguments. If the function succeeds HAVE_RECVFROM
-dnl will be defined, defining the types of the arguments
-dnl in RECVFROM_TYPE_ARG1, RECVFROM_TYPE_ARG2, and so on
-dnl to RECVFROM_TYPE_ARG6, defining also the type of the
-dnl function return value in RECVFROM_TYPE_RETV.
-dnl Notice that the types returned for pointer arguments
-dnl will actually be the type pointed by the pointer.
-
-AC_DEFUN([CURL_CHECK_FUNC_RECVFROM], [
-  AC_REQUIRE([CURL_CHECK_HEADER_WINSOCK])dnl
-  AC_REQUIRE([CURL_CHECK_HEADER_WINSOCK2])dnl
-  AC_CHECK_HEADERS(sys/types.h sys/socket.h)
-  #
-  AC_MSG_CHECKING([for recvfrom])
-  AC_LINK_IFELSE([
-    AC_LANG_PROGRAM([[
-#undef inline
-#ifdef HAVE_WINDOWS_H
-#ifndef WIN32_LEAN_AND_MEAN
-#define WIN32_LEAN_AND_MEAN
-#endif
-#include <windows.h>
-#ifdef HAVE_WINSOCK2_H
-#include <winsock2.h>
-#else
-#ifdef HAVE_WINSOCK_H
-#include <winsock.h>
-#endif
-#endif
-#else
-#ifdef HAVE_SYS_TYPES_H
-#include <sys/types.h>
-#endif
-#ifdef HAVE_SYS_SOCKET_H
-#include <sys/socket.h>
-#endif
-#endif
-    ]],[[
-      recvfrom(0, 0, 0, 0, 0, 0);
-    ]])
-  ],[
-    AC_MSG_RESULT([yes])
-    curl_cv_recvfrom="yes"
-  ],[
-    AC_MSG_RESULT([no])
-    curl_cv_recvfrom="no"
-  ])
-  #
-  if test "$curl_cv_recvfrom" = "yes"; then
-    AC_CACHE_CHECK([types of args and return type for recvfrom],
-      [curl_cv_func_recvfrom_args], [
-      curl_cv_func_recvfrom_args="unknown"
-      for recvfrom_retv in 'int' 'ssize_t'; do
-        for recvfrom_arg1 in 'int' 'ssize_t' 'SOCKET'; do
-          for recvfrom_arg2 in 'char *' 'void *'; do
-            for recvfrom_arg3 in 'size_t' 'int' 'socklen_t' 'unsigned int'; do
-              for recvfrom_arg4 in 'int' 'unsigned int'; do
-                for recvfrom_arg5 in 'struct sockaddr *' 'void *' 'const struct sockaddr *'; do
-                  for recvfrom_arg6 in 'socklen_t *' 'int *' 'unsigned int *' 'size_t *' 'void *'; do
-                    if test "$curl_cv_func_recvfrom_args" = "unknown"; then
-                      AC_COMPILE_IFELSE([
-                        AC_LANG_PROGRAM([[
-#undef inline
-#ifdef HAVE_WINDOWS_H
-#ifndef WIN32_LEAN_AND_MEAN
-#define WIN32_LEAN_AND_MEAN
-#endif
-#include <windows.h>
-#ifdef HAVE_WINSOCK2_H
-#include <winsock2.h>
-#else
-#ifdef HAVE_WINSOCK_H
-#include <winsock.h>
-#endif
-#endif
-#define RECVFROMCALLCONV PASCAL
-#else
-#ifdef HAVE_SYS_TYPES_H
-#include <sys/types.h>
-#endif
-#ifdef HAVE_SYS_SOCKET_H
-#include <sys/socket.h>
-#endif
-#define RECVFROMCALLCONV
-#endif
-                          extern $recvfrom_retv RECVFROMCALLCONV
-                          recvfrom($recvfrom_arg1, $recvfrom_arg2,
-                                   $recvfrom_arg3, $recvfrom_arg4,
-                                   $recvfrom_arg5, $recvfrom_arg6);
-                        ]],[[
-                          $recvfrom_arg1 s=0;
-                          $recvfrom_arg2 buf=0;
-                          $recvfrom_arg3 len=0;
-                          $recvfrom_arg4 flags=0;
-                          $recvfrom_arg5 addr=0;
-                          $recvfrom_arg6 addrlen=0;
-                          $recvfrom_retv res=0;
-                          res = recvfrom(s, buf, len, flags, addr, addrlen);
-                        ]])
-                      ],[
-                        curl_cv_func_recvfrom_args="$recvfrom_arg1,$recvfrom_arg2,$recvfrom_arg3,$recvfrom_arg4,$recvfrom_arg5,$recvfrom_arg6,$recvfrom_retv"
-                      ])
-                    fi
-                  done
-                done
-              done
-            done
-          done
-        done
-      done
-    ]) # AC-CACHE-CHECK
-    # Nearly last minute change for this release starts here
-    AC_DEFINE_UNQUOTED(HAVE_RECVFROM, 1,
-      [Define to 1 if you have the recvfrom function.])
-    ac_cv_func_recvfrom="yes"
-    # Nearly last minute change for this release ends here
-    if test "$curl_cv_func_recvfrom_args" = "unknown"; then
-      AC_MSG_WARN([Cannot find proper types to use for recvfrom args])
-    else
-      recvfrom_prev_IFS=$IFS; IFS=','
-      set dummy `echo "$curl_cv_func_recvfrom_args" | sed 's/\*/\*/g'`
-      IFS=$recvfrom_prev_IFS
-      shift
-      #
-      recvfrom_ptrt_arg2=$[2]
-      recvfrom_qual_ptrt_arg5=$[5]
-      recvfrom_ptrt_arg6=$[6]
-      #
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG1, $[1],
-        [Define to the type of arg 1 for recvfrom.])
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG3, $[3],
-        [Define to the type of arg 3 for recvfrom.])
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG4, $[4],
-        [Define to the type of arg 4 for recvfrom.])
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_RETV, $[7],
-        [Define to the function return type for recvfrom.])
-      #
-      prev_sh_opts=$-
-      #
-      case $prev_sh_opts in
-        *f*)
-          ;;
-        *)
-          set -f
-          ;;
-      esac
-      #
-      case "$recvfrom_qual_ptrt_arg5" in
-        const*)
-          recvfrom_qual_arg5=const
-          recvfrom_ptrt_arg5=`echo $recvfrom_qual_ptrt_arg5 | sed 's/^const //'`
-        ;;
-        *)
-          recvfrom_qual_arg5=
-          recvfrom_ptrt_arg5=$recvfrom_qual_ptrt_arg5
-        ;;
-      esac
-      #
-      recvfrom_type_arg2=`echo $recvfrom_ptrt_arg2 | sed 's/ \*//'`
-      recvfrom_type_arg5=`echo $recvfrom_ptrt_arg5 | sed 's/ \*//'`
-      recvfrom_type_arg6=`echo $recvfrom_ptrt_arg6 | sed 's/ \*//'`
-      #
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG2, $recvfrom_type_arg2,
-        [Define to the type pointed by arg 2 for recvfrom.])
-      AC_DEFINE_UNQUOTED(RECVFROM_QUAL_ARG5, $recvfrom_qual_arg5,
-        [Define to the type qualifier pointed by arg 5 for recvfrom.])
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG5, $recvfrom_type_arg5,
-        [Define to the type pointed by arg 5 for recvfrom.])
-      AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG6, $recvfrom_type_arg6,
-        [Define to the type pointed by arg 6 for recvfrom.])
-      #
-      if test "$recvfrom_type_arg2" = "void"; then
-        AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG2_IS_VOID, 1,
-          [Define to 1 if the type pointed by arg 2 for recvfrom is void.])
-      fi
-      if test "$recvfrom_type_arg5" = "void"; then
-        AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG5_IS_VOID, 1,
-          [Define to 1 if the type pointed by arg 5 for recvfrom is void.])
-      fi
-      if test "$recvfrom_type_arg6" = "void"; then
-        AC_DEFINE_UNQUOTED(RECVFROM_TYPE_ARG6_IS_VOID, 1,
-          [Define to 1 if the type pointed by arg 6 for recvfrom is void.])
-      fi
-      #
-      case $prev_sh_opts in
-        *f*)
-          ;;
-        *)
-          set +f
-          ;;
-      esac
-      #
-      AC_DEFINE_UNQUOTED(HAVE_RECVFROM, 1,
-        [Define to 1 if you have the recvfrom function.])
-      ac_cv_func_recvfrom="yes"
-    fi
-  else
-    AC_MSG_WARN([Unable to link function recvfrom])
-  fi
-])
-
-
 dnl CURL_CHECK_MSG_NOSIGNAL
 dnl -------------------------------------------------
 dnl Check for MSG_NOSIGNAL
 
 AC_DEFUN([CURL_CHECK_MSG_NOSIGNAL], [
   AC_CHECK_HEADERS(sys/types.h sys/socket.h)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/aclocal.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/aclocal.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/aclocal.m4	2013-02-06 17:47:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/aclocal.m4	2013-04-12 02:47:02.000000000 +0800
@@ -1053,12 +1053,13 @@
 m4_include([m4/libtool.m4])
 m4_include([m4/ltoptions.m4])
 m4_include([m4/ltsugar.m4])
 m4_include([m4/ltversion.m4])
 m4_include([m4/lt~obsolete.m4])
 m4_include([m4/xc-cc-check.m4])
+m4_include([m4/xc-lt-iface.m4])
 m4_include([m4/xc-translit.m4])
 m4_include([m4/xc-val-flgs.m4])
 m4_include([m4/zz40-xc-ovr.m4])
 m4_include([m4/zz50-xc-ovr.m4])
 m4_include([m4/zz60-xc-ovr.m4])
 m4_include([acinclude.m4])
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0: Android.mk
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/CHANGES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/CHANGES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/CHANGES	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/CHANGES	2013-04-12 15:13:03.000000000 +0800
@@ -3,5749 +3,5858 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                                   Changelog
 
-Version 7.29.0 (6 Feb 2013)
-
-Daniel Stenberg (6 Feb 2013)
-- vms: config-vms.h is removed, no use trying to distribute it
-
-- RELEASE-NOTES: mention the SASL buffer overflow
-
-- [Eldar Zaitov brought this change]
+Version 7.30.0 (12 Apr 2013)
 
-  Curl_sasl_create_digest_md5_message: fix buffer overflow
+Daniel Stenberg (12 Apr 2013)
+- RELEASE-NOTES: cleaned up for 7.30 (synced with 5c5e1a1cd20)
   
-  When negotiating SASL DIGEST-MD5 authentication, the function
-  Curl_sasl_create_digest_md5_message() uses the data provided from the
-  server without doing the proper length checks and that data is then
-  appended to a local fixed-size buffer on the stack.
+  Most notable the security advisory:
+  http://curl.haxx.se/docs/adv_20130412.html
+
+- test1218: another cookie tailmatch test
   
-  This vulnerability can be exploited by someone who is in control of a
-  server that a libcurl based program is accessing with POP3, SMTP or
-  IMAP. For applications that accept user provided URLs, it is also
-  thinkable that a malicious user would feed an application with a URL to
-  a server hosting code targetting this flaw.
+  ... and make 1216 also verify it with a file input
   
-  Bug: http://curl.haxx.se/docs/adv_20130206.html
+  These tests verify commit 3604fde3d3c9b0d, the fix for the "cookie
+  domain tailmatch" vulnerability. See
+  http://curl.haxx.se/docs/adv_20130412.html
 
-Steve Holme (6 Feb 2013)
-- FEATURES: Removed erroneous whitespace
-  
-  Removed whitespace introduced in commit 5f8f20f5e65b that caused
-  formatting issues when generating the website docs.
+- [YAMADA Yasuharu brought this change]
 
-Yang Tse (6 Feb 2013)
-- setup-vms.h: post VMS patch cleanup - III
+  cookie: fix tailmatching to prevent cross-domain leakage
   
-  - rename post-config-vms.h to setup-vms.h
-  - move its inclusion into proper location in curl_setup.h
-
-- vms_show: post VMS patch cleanup - II
+  Cookies set for 'example.com' could accidentaly also be sent by libcurl
+  to the 'bexample.com' (ie with a prefix to the first domain name).
   
-  - remove multiple declarations of vms_show and add comments
-
-- tool_main.c: post VMS patch cleanup - I
+  This is a security vulnerabilty, CVE-2013-1944.
   
-  - remove header inclusion already done in curl_setup_once.h
+  Bug: http://curl.haxx.se/docs/adv_20130412.html
 
-Steve Holme (6 Feb 2013)
-- FEATURES: Added SSPI to list of NTLM libraries
+Guenter Knauf (11 Apr 2013)
+- Enabled MinGW sync resolver builds.
 
-- FEATURES: Added Secure Transport and qssl to list of SSL libraries
+Yang Tse (10 Apr 2013)
+- if2ip.c: fix compiler warning
 
-- FEATURES: Added email feature set
+Guenter Knauf (10 Apr 2013)
+- Fixed lost OpenSSL output with "-t" - followup.
   
-  Added SMTP, SMTPS, POP3, POP3S, IMAP and IMAPS features.
+  The previously applied patch didnt work on Windows; we cant rely
+  on shell commands like 'echo' since they act diffently on each
+  platform and each shell.
+  In order to keep this script platform-independent the code must
+  only use pure Perl.
 
-- imap.h: Corrected incorrect comment clarification
+Daniel Stenberg (9 Apr 2013)
+- test1217: verify parsing 257 responses with "rubbish" before path
   
-  Corrected comment clarification made in commit 167717b8069a.
+  Test 1217 verifies commit e0fb2d86c9f78, and without that change this
+  test fails.
 
-- COPYING: Updated copyright year to include 2013
+- [Bill Middlecamp brought this change]
 
-Daniel Stenberg (5 Feb 2013)
-- RELEASE-NOTES: synced with 25f351424b3538
+  FTP: handle "rubbish" in front of directory name in 257 responses
   
-  8 more bug fixes mentioned
-
-- [John E. Malmberg brought this change]
-
-  VMS: fix and generate the VMS build config
+  When doing PWD, there's a 257 response which apparently some servers
+  prefix with a comment before the path instead of after it as is
+  otherwise the norm.
   
-  config_h.com is a new file that generates a config.h file based on the
-  curl_config.h.in file and a quick scan of the configure script.  This is
-  actually a generic procedure that is shared with other VMS packages.
+  Failing to parse this, several otherwise legitimate use cases break.
   
-  The existing pre-built config-vms.h had over 100 entries that were not
-  correct and in some cases conflicted with the build options available in
-  the build_vms.com.
+  Bug: http://curl.haxx.se/mail/lib-2013-04/0113.html
+
+Guenter Knauf (9 Apr 2013)
+- Fixed ares-enabled builds with static makefiles.
+
+- Fixed lost OpenSSL output with "-t".
   
-  generate_config_vms_h_curl.com is a helper procedure to the
-  config_h.com.  It covers the cases that the generic config_h.com is not
-  able to figure out, and accepts input from the build_vms.com procedure.
+  The OpenSSL pipe wrote to the final CA bundle file, but the encoded PEM
+  output wrote to a temporary file.  Consequently, the OpenSSL output was
+  lost when the temp file was renamed to the final file at script finish
+  (overwriting the final file written earlier by openssl).
+  Patch posted to the list by Richard Michael (rmichael edgeofthenet org).
+
+Daniel Stenberg (9 Apr 2013)
+- test1216: test tailmatching cookie domains
   
-  build_curlbuild_h.com is a new file to generate the curlbuild.h file
-  that Curl is now using when it is using a curl_config.h file.
+  This test is an attempt to repeat the problem YAMADA Yasuharu reported
+  at http://curl.haxx.se/mail/lib-2013-04/0108.html
+
+- RELEASe-NOTES: synced with 29fdb2700f797
   
-  post-config-vms.h is a new file that is needed to provide VMS specific
-  definitions, and most of them need to be set before the system header
-  files are included.
+  added "tcpkeepalive on Mac OS X"
+
+Nick Zitzmann (8 Apr 2013)
+- darwinssl: disable insecure ciphers by default
   
-  The VMS build procedure is fixed:
+  I noticed that aria2's SecureTransport code disables insecure ciphers such
+  as NULL, anonymous, IDEA, and weak-key ciphers used by SSLv3 and later.
+  That's a good idea, and now we do the same thing in order to prevent curl
+  from accessing a "secure" site that only negotiates insecure ciphersuites.
+
+Daniel Stenberg (8 Apr 2013)
+- [Robert Wruck brought this change]
+
+  tcpkeepalive: Support CURLOPT_TCP_KEEPIDLE on OSX
   
-     1. Fixed to link in the correct HP ssl library.
-     2. Fixed to detect if HP Kerberos is installed.
-     3. Fixed to detect if HP LDAP is installed.
-     4. Fixed to detect if gnv$libzshr is installed.
-     5. Simplified the input parameter parsing to not use a loop.
-     6. Warn that 64 bit pointer option support is not complete
-        in comments.
-     7. Default to IEEE floating if platform supports it so
-        resulting libcurl will be compatible with other
-        open source projects on VMS.
-     8. Default to LARGEFILE if platform supports it.
-     9. Default to enable SSL, LDAP, Kerberos, libz
-        if the libraries are present.
-     10. Build with exact case global symbols for libcurl.
-     11. Generate linker option file needed.
-     12. Compiler list option only commonly needed items.
-     13. fulllist option for those who really want it.
-     14. Create debug symbol file on Alpha, IA64.
+  MacOS X doesn't have TCP_KEEPIDLE/TCP_KEEPINTVL but only a single
+  TCP_KEEPALIVE (see
+  http://developer.apple.com/library/mac/#DOCUMENTATION/Darwin/Reference/ManPages/man4/tcp.4.html).
+  Here is a patch for CURLOPT_TCP_KEEPIDLE on OSX platforms.
 
-- Curl_proxyCONNECT: return once CONNECT is sent
+- configure: remove CURL_CHECK_FUNC_RECVFROM
   
-  By doing this unconditionally, we infer a simpler and more defined
-  behavior. This also has the upside that test 1021 no longer fails for me
-  even if I run with valgrind.
+  1 - We don't use the results from the test and we never did. recvfrom()
+  is only used by the TFTP code and it has not caused any problems.
   
-  Also fixed some wrong comments.
+  2 - the CURL_CHECK_FUNC_RECVFROM function is extremely slow
 
-Steve Holme (5 Feb 2013)
-- email: Reworked comments in the endofresp() functions
-  
-  Tidied up the comments in the endofresp() functions to be more
-  meaningful prior to release.
+Steve Holme (8 Apr 2013)
+- RELEASE-NOTES: Corrected duplicate NTLM memory leaks
 
-Marc Hoersken (5 Feb 2013)
-- schannel: Removed extended error connection setup flag
-  
-  According KB975858 this flag may cause problems on Windows 7 and
-  Windows Server 2008 R2 systems. Extended error information is not
-  currently used by libcurl and therefore not a requirement.
+- RELEASE-NOTES: Removed trailing full stop
+
+Daniel Stenberg (8 Apr 2013)
+- [Fabian Keil brought this change]
+
+  proxy: make ConnectionExists() check credential of proxyconnections too
   
-  The flag may improve the SSL-connection shutdown in case of an
-  error. This means it might be a good improvement in the future.
+  Previously it only compared credentials if the requested needle
+  connection wasn't using a proxy. This caused NTLM authentication
+  failures when using proxies as the authentication code wasn't send on
+  the connection where the challenge arrived.
   
-  Fixes bug/issue #1187 - thanks for the report
+  Added test 1215 to verify: NTLM server authentication through a proxy
+  (This is a modified copy of test 67)
 
-Daniel Stenberg (5 Feb 2013)
-- [Tor Arntsen brought this change]
+- RELEASE-NOTES: sync with 704a5dfca9
 
-  singleipconnect: Update *sockp for all CURLE_OK
-  
-  The 56b7c87c7 change left a case where a good sockfd was not copied to
-  *sockp before returning with CURLE_OK
+- TODO-RELEASE: cleaned up, not really maintained lately
 
-- curl_easy_perform: Value stored to 'mcode' is never read
-  
-  pointed out by clang-analyzer
+Marc Hoersken (7 Apr 2013)
+- if2ip.c: Fixed another warning: unused parameter 'remote_scope'
 
-- singleipconnect: remove dead assignment
-  
-  pointed out by clang-analyzer
+Daniel Stenberg (7 Apr 2013)
+- [Marc Hoersken brought this change]
 
-Linus Nielsen Feltzing (5 Feb 2013)
-- CURLMOPT_MAXCONNECTS: restore functionality
+  cookie.c: Made cookie sort function more deterministic
   
-  When a connection is no longer used, it is kept in the cache. If the
-  cache is full, the oldest idle connection is closed. If no connection is
-  idle, the current one is closed instead.
+  Since qsort implementations vary with regards to handling the order
+  of similiar elements, this change makes the internal sort function
+  more deterministic by comparing path length first, then domain length
+  and finally the cookie name. Spotted with testcase 62 on Windows.
 
-Steve Holme (5 Feb 2013)
-- RELEASE-NOTES: Updated following recent changes to the email protocols
-  
-  Added recent additions and fixes following the changes to imap, pop3
-  and smtp. Additionally added another contributor that helped to test
-  the imap sasl changes.
+Marc Hoersken (7 Apr 2013)
+- curl_schannel.c: Follow up on memory leak fix ae4558d
 
-- email: Provided extra comments following recent pop3/imap fixes
+- Revert "getpart.pm: Strip carriage returns to fix Windows support"
   
-  Provided additional clarification about the logic of the authenticate()
-  functions following commit 6b6bdc83bd36 and b4270a9af1d0.
+  This reverts commit e51b23c925a2721cf7c29b2b376d3d8903cfb067.
+  As discussed on the mailinglist, this was not the correct approach.
 
-Daniel Stenberg (5 Feb 2013)
-- [Andrei Kurushin brought this change]
+- http_negotiate.c: Fixed passing argument from incompatible pointer type
 
-  winbuild: include version info for .dll .exe
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1186
+- ftp.c: Added missing brackets around ABOR command logic
 
-- FAQ: clarify 5.13 How do I stop an ongoing transfer
+- sockfilt.c: Fixed detection of client-side connection close
   
-  Rich Gray provided good feedback and we now clarify that you can in fact
-  stop a multi transfer at any point you like by removing the easy handle.
+  WINSOCK only:
+  Since FD_CLOSE is only signaled once, it may trigger at the same
+  time as FD_READ. Data actually being available makes it impossible
+  to detect that the connection was closed by checking that recv returns
+  zero. Another recv attempt could block the connection if it was
+  not closed. This workaround abuses exceptfds in conjunction with
+  readfds to signal that the connection has actually closed.
 
-- [Matt Arsenault brought this change]
+- curl_schannel.c: Fixed memory leak if connection was not successful
 
-  cmake: Fix mingw build
+- if2ip.c: Fixed warning: unused parameter 'remote_scope'
 
-- [Sergei Nikulov brought this change]
+- runtests.pl: Fixed --verbose parameter passed to http_pipe.py
 
-  cmake: updated OpenSSL build
+- sockfilt.c: Reduce CPU load while running under a Windows PIPE
 
-Steve Holme (4 Feb 2013)
-- pop3.c: Updated variable names to use shorter / more readable variant
+- tftpd.c: Apply sread timeout to the whole data transfer session
+
+- getpart.pm: Strip carriage returns to fix Windows support
+
+Daniel Stenberg (6 Apr 2013)
+- ftp tests: libcurl returns CURLE_FTP_ACCEPT_FAILED better now
   
-  Tidied up code from commit 6b6bdc83bdUpdated where a few instances of
-  the pop3c struct variable used the longer conndata struct rather than
-  matching what other code in pop3_authenticate() used.
+  Since commit 57aeabcc1a20f, it handles errors on the control connection
+  while waiting for the data connection better.
+  
+  Test 591 and 592 are updated accordingly.
 
-Guenter Knauf (4 Feb 2013)
-- updated copyright years.
+- FTP: wait on both connections during active STOR state
+  
+  When doing PORT and upload (STOR), this function needs to extract the
+  file descriptor for both connections so that it will respond immediately
+  when the server eventually connects back.
+  
+  This flaw caused active connections to become unnecessary slow but they
+  would still often work due to the normal polling on a timeout. The bug
+  also would not occur if the server connected back very fast, like when
+  testing on local networks.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1183
+  Reported by: Daniel Theron
 
-- configure: update the copyright years for the output.
+Marc Hoersken (6 Apr 2013)
+- tftpd.c: Follow up cleanup and restore of previous sockopt
 
-Steve Holme (3 Feb 2013)
-- imap: Fixed no known authentication mechanism when fallback is required
+Daniel Stenberg (6 Apr 2013)
+- [Kim Vandry brought this change]
+
+  connect: treat an interface bindlocal() problem as a non-fatal error
   
-  Fixed an issue where (lib)curl is compiled without support for a
-  supported challenge-response based SASL authentication mechanism, such
-  as CRAM-MD5 or NTLM, the server doesn't support the LOGIN or PLAIN
-  mechanisms and (lib)curl doesn't fallback to Clear Text authentication.
+  I am using curl_easy_setopt(CURLOPT_INTERFACE, "if!something") to force
+  transfers to use a particular interface but the transfer fails with
+  CURLE_INTERFACE_FAILED, "Failed binding local connection end" if the
+  interface I specify has no IPv6 address. The cause is as follows:
   
-  Note: In order to fallback to Clear Text authentication properly this
-  fix adds support for the LOGINDISABLED server capability.
-  imap: Fixed no known authentication mechanism when fallback is required
+  The remote hostname resolves successfully and has an IPv6 address and an
+  IPv4 address.
   
-  Fixed an issue where (lib)curl is compiled without support for a
-  supported challenge-response based SASL authentication mechanism, such
-  as CRAM-MD5 or NTLM, the server doesn't support the LOGIN or PLAIN
-  mechanisms and (lib)curl doesn't fallback to Clear Text authentication.
+  cURL attempts to connect to the IPv6 address first.
   
-  Note: In order to fallback to Clear Text authentication properly this
-  fix adds support for the LOGINDISABLED server capability.
+  bindlocal (in lib/connect.c) fails because Curl_if2ip cannot find an
+  IPv6 address on the interface.
   
-  Related bug: http://curl.haxx.se/mail/lib-2013-02/0004.html
-  Reported by: Stanislav Ivochkin
-
-- pop3: Fixed no known authentication mechanism when fallback is required
+  This is a fatal error in singleipconnect()
   
-  Fixed an issue where (lib)curl is compiled without support for a
-  supported challenge-response based SASL authentication mechanism, such
-  as CRAM-MD5 or NTLM, the server doesn't support the LOGIN or PLAIN
-  mechanisms and (lib)curl doesn't fallback to APOP or Clear Text
-  authentication.
+  This change will make cURL try the next IP address in the list.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-02/0004.html
-  Reported by: Stanislav Ivochkin
-
-Daniel Stenberg (1 Feb 2013)
-- singleipconnect: simplify and clean up
+  Also included are two changes related to IPv6 address scope:
   
-  Remove timeout argument that's never used.
+  - Filter the choice of address in Curl_if2ip to only consider addresses
+  with the same scope ID as the connection address (mismatched scope for
+  local and remote address does not result in a working connection).
   
-  Make the actual connection get detected on a single spot to reduce code
-  duplication.
+  - bindlocal was ignoring the scope ID of addresses returned by
+  Curl_if2ip . Now it uses them.
   
-  Store the IPv6 state already when the connection is attempted.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1189
 
-- Curl_perfom: removed
-  
-  Curl_perfom is no longer used anywhere since the always-multi commit
-  c43127414d89ccb9, and some related functions were used only from within
-  Curl_perfom.
+Marc Hoersken (6 Apr 2013)
+- tftpd.c: Fixed sread timeout on Windows by setting it manually
 
-Guenter Knauf (30 Jan 2013)
-- Updated date.
+- ftp.pm: Added tskill to support Windows XP Home
 
-Yang Tse (30 Jan 2013)
-- zz40-xc-ovr.m4: fix 'wc' detection - follow-up 2
+- runtests.pl: Modularization of MinGW/Msys compatibility functions
+
+- ftp.pm: Made Perl testsuite able to handle Windows processes
+
+- util.c: Revert workaround eeefcdf, 6eb56e7 and e3787e8
+
+- ftp.pm: Made Perl testsuite able to kill Windows processes
+
+- util.c: Follow up cleanup on eeefcdf
+
+Daniel Stenberg (6 Apr 2013)
+- cpp: use #ifdef __MINGW32__ to avoid compiler complaints
   
-  - Fix a pair of single quotes to double quotes.
+  ... instead of just #if
+
+Marc Hoersken (6 Apr 2013)
+- util.c: Made write_pidfile write the correct PID on MinGW/Msys
   
-  URL: http://curl.haxx.se/mail/lib-2013-01/0355.html
-  Reported by: Tor Arntsen
+  This workaround fixes an issue on MinGW/Msys regarding the Perl
+  testsuite scripts not being able to signal or control the server
+  processes. The MinGW Perl runtime only sees the Msys processes and
+  their corresponding PIDs, but sockfilt (and other servers) wrote the
+  Windows PID into their PID-files. Since this PID is useless to the
+  testsuite, the write_pidfile function was changed to search for the
+  Msys PID and write that into the PID-file.
 
-- zz40-xc-ovr.m4: fix 'wc' detection - follow-up
+Daniel Stenberg (5 Apr 2013)
+- RELEASE-NOTES: synced with 5e722b2d09087
   
-  - Take into account that 'wc' may return leading spaces and/or tabs.
+  3 more bug fixes, 6 more contributors
+
+Marc Hoersken (5 Apr 2013)
+- sockfilt.c: Fixed handling of multiple fds being signaled
+
+Kamil Dudka (5 Apr 2013)
+- curl_global_init.3: improve description of CURL_GLOBAL_ALL
   
-  - Set initial IFS to space, tab and newline.
+  Reported by: Tomas Mlcoch
 
-- zz40-xc-ovr.m4: fix 'wc' detection
+- examples/multi-single.c: fix the order of destructions
   
-  - Take into account that 'wc' may return leading spaces.
+  ... so that it adheres to the API documentation.
   
-  - Set internationalization behavior variables.
+  Reported by: Tomas Mlcoch
+
+Daniel Stenberg (5 Apr 2013)
+- Curl_open: restore default MAXCONNECTS to 5
   
-  Tor Arntsen analyzed and reported the issue.
+  At some point recently we lost the default value for the easy handle's
+  connection cache, and this change puts it back to 5 - which is the
+  former default value and it is documented in the curl_easy_setopt.3 man
+  page.
+
+Marc Hoersken (4 Apr 2013)
+- sockfilt.c: Added wrapper functions to fix Windows console issues
   
-  URL: http://curl.haxx.se/mail/lib-2013-01/0351.html
+  The new read and write wrapper functions support reading from stdin
+  and writing to stdout/stderr on Windows by using the appropriate
+  Windows API functions and data types.
 
-- zz40-xc-ovr.m4: check another three basic utilities
+Yang Tse (4 Apr 2013)
+- lib1509.c: fix compiler warnings
 
-Guenter Knauf (29 Jan 2013)
-- Fixed debug.c to work again unchanged.
+- easy.c: fix compiler warning
+
+Daniel Stenberg (4 Apr 2013)
+- --engine: spellfix the help message
   
-  Added CURLOPT_FOLLOWLOCATION since example.com is now redirected.
+  Reported by: Fredrik Thulin
 
-Daniel Stenberg (29 Jan 2013)
-- [Nick Zitzmann brought this change]
+Yang Tse (4 Apr 2013)
+- http_negotiate.c: follow-up for commit 3dcc1a9c
 
-  darwinssl: Fix bug where packets were sometimes transmitted twice
+Linus Nielsen Feltzing (4 Apr 2013)
+- easy: Fix the broken CURLOPT_MAXCONNECTS option
   
-  There was a bug where, if SSLWrite() returned errSSLWouldBlock but did
-  succeed in transmitting at least something, then we'd incorrectly
-  resend the packet. Now we never take errSSLWouldBlock as a sign that
-  nothing was transferred to/from the server.
+  Copy the CURLOPT_MAXCONNECTS option to CURLMOPT_MAXCONNECTS in
+  curl_easy_perform().
   
-  Bug: http://curl.haxx.se/mail/lib-2013-01/0295.html
-  Reported by: Bruno de Carvalho
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1212
+  Reported-by: Steven Gu
 
-- [Nick Zitzmann brought this change]
+Guenter Knauf (4 Apr 2013)
+- Updated copyright date.
 
-  FAQ: "Darwinssl" is AKA "Secure Transport" and supports NTLM
+- Another small output fix for --help and --version.
 
-- RELEASE-NOTES: only list Nick once
-  
-  Even though he's a fine dude, once is enough for this time!
+Yang Tse (4 Apr 2013)
+- http_negotiate.c: fix several SPNEGO memory handling issues
 
-Yang Tse (28 Jan 2013)
-- zz40-xc-ovr.m4: 1.0 interface stabilization
+Guenter Knauf (4 Apr 2013)
+- Added a cont to specify base64 line wrap.
+
+- Fixed version output.
+
+- Added support for --help and --version options.
+
+- Added option to specify length of base64 output.
   
-  - Stabilization results in 4 public interface m4 macros:
-    XC_CONFIGURE_PREAMBLE
-    XC_CONFIGURE_PREAMBLE_VER_MAJOR
-    XC_CONFIGURE_PREAMBLE_VER_MINOR
-    XC_CHECK_PATH_SEPARATOR
-  - Avoid one level of internal indirection
-  - Update comments
-  - Drop XC_OVR_ZZ40 macro
+  Based on a patch posted to the list by Richard Michael.
 
-Kamil Dudka (28 Jan 2013)
-- docs: fix typos in man pages
-  
-  Reported by: Jiri Jaburek
-  Bug: https://bugzilla.redhat.com/896544
-
-- docs: update the comments about loading CA certs with NSS
-  
-  Bug: https://bugzilla.redhat.com/696783
+Daniel Stenberg (3 Apr 2013)
+- curl_easy_setopt.3: CURLOPT_HTTPGET disables CURLOPT_UPLOAD
 
-Guenter Knauf (28 Jan 2013)
-- Updated dependency libs.
+- [Yasuharu Yamada brought this change]
 
-- Fixed simple.c to work again unchanged.
+  Curl_cookie_add: only increase numcookies for new cookies
   
-  Added CURLOPT_FOLLOWLOCATION since example.com is now redirected.
+  Count up numcookies in Curl_cookie_add() only when cookie is new one
 
-Steve Holme (27 Jan 2013)
-- smtp.c: Fixed unnecessary state change if starttls fails
+- SO_SNDBUF: don't set SNDBUF for win32 versions vista or later
   
-  The state machine should only be changed to SMTP_STARTTLS when the
-  STARTTLS command has been successfully sent to the server.
-
-- pop3.c: Fixed unnecessary state change if starttls fails
+  The Microsoft knowledge-base article
+  http://support.microsoft.com/kb/823764 describes how to use SNDBUF to
+  overcome a performance shortcoming in winsock, but it doesn't apply to
+  Windows Vista and later versions. If the described SNDBUF magic is
+  applied when running on those more recent Windows versions, it seems to
+  instead have the reversed effect in many cases and thus make libcurl
+  perform less good on those systems.
   
-  The state machine should only be changed to POP3_STARTTLS when the
-  STLS command has been successfully sent to the server.
-
-- imap.c: Fixed unnecessary state change if starttls fails
+  This fix thus adds a run-time version-check that does the SNDBUF magic
+  conditionally depending if it is deemed necessary or not.
   
-  The state machine should only be changed to IMAP_STARTTLS when the
-  STARTTLS command has been successfully sent to the server.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1188
+  Reported by: Andrew Kurushin
+  Tested by: Christian Hägele
 
-- email: Updated comment regarding ssldone usage
+Nick Zitzmann (1 Apr 2013)
+- darwinssl: additional descriptive messages of SSL handshake errors
   
-  Updated the ssldone comment as multi mode is always used internally now.
+  (This doesn't need to appear in the release notes.)
 
-Yang Tse (26 Jan 2013)
-- zz40-xc-ovr.m4: emit witness message in configure BODY
-  
-  This avoids witness message in output when running configure --help,
-  while sending the message to config.log for other configure runs.
+Guenter Knauf (1 Apr 2013)
+- Added dns and connect time to output.
 
-Steve Holme (25 Jan 2013)
-- smtp.c: Added comments to smtp_endofresp()
-  
-  Minor code tidy up to add comments similar to those used in the pop3
-  and imap end of resp functions, in order to assist anyone reading the
-  code and highlight the similarities between each of these protocols.
+Daniel Stenberg (1 Apr 2013)
+- RELEASE-NOTES: synced with 0614b902136
 
-Yang Tse (25 Jan 2013)
-- zz40-xc-ovr.m4: truly do version conditional overriding
+- code-policed
+
+- tcpkeepalive: support TCP_KEEPIDLE/TCP_KEEPINTVL on win32
   
-  - version conditional overriding
-  - catch unexpanded XC macros
-  - fix double words in comments
+  Patch by: Robert Wruck
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1209
 
-- zz40-xc-ovr.m4: fix variable assignment of subshell output bashism
+- BINDINGS: BBHTTP is a cocoa binding, Julia has a binding
+
+- ftp_sendquote: use PPSENDF, not FTPSENDF
   
-  Tor Arntsen analyzed and reported the issue.
+  The last remaining code piece that still used FTPSENDF now uses PPSENDF.
+  In the problematic case, a PREQUOTE series was done on a re-used
+  connection when Curl_pp_init() hadn't been called so it had messed up
+  pointers. The init call is done properly from Curl_pp_sendf() so this
+  change fixes this particular crash.
   
-  URL: http://curl.haxx.se/mail/lib-2013-01/0306.html
+  Bug: http://curl.haxx.se/mail/lib-2013-03/0319.html
+  Reported by: Sam Deane
 
-- zz40-xc-ovr.m4: reinstate strict AC_REQUIRE macro dependencies
+Steve Holme (27 Mar 2013)
+- RELEASE-NOTES: Corrected typo
 
-- zz40-xc-ovr.m4: avoid double single-quote usage
+Daniel Stenberg (27 Mar 2013)
+- [Clemens Gruber brought this change]
 
-- zz40-xc-ovr.m4: parentheses balancing of 'case' statements
-  
-  m4 quadrigraph shell comment technique allows proper autoconf
-  parentheses balancing in shell 'case' statements. The presence
-  of unbalanced parentheses may otherwise trigger expansion bugs.
+  multi-uv.c: remove unused variable
 
-Steve Holme (24 Jan 2013)
-- smtp.c: Corrected RFC references
+- RELEASE-NOTES: add two references
+
+- test1509: verify proxy header response headers count
   
-  The most recent version of the SMTP RFC is RFC5321 and not RFC2821 as
-  previously documented.
+  Modified sws to support and use custom CONNECT responses instead of the
+  previously naive hard-coded version. Made the HTTP test server able to
+  extract test case number from the host name in a CONNECT request by
+  finding the number after the last dot. It makes 'machine.moo.123' use
+  test case 123.
   
-  Added RFC1870 and re-ordered list numerically.
-
-- smtp.c: Fixed failure detection during TLS upgrade
+  Adapted a larger amount of tests to the new <connect> style.
   
-  smtp_state_upgrade_tls() would attempt to incorrectly complete the
-  upgrade to smtps and start the EHLO command if
-  Curl_ssl_connect_nonblocking() returned a failure code and if ssldone
-  was set to TRUE. This would only happen when a non-blocking API hadn't
-  been provided by the SSL implementation and curlssl_connect() was
-  called underneath.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1204
+  Reported by: Martin Jansen
 
-- pop3.c: Fixed failure detection during TLS upgrade
-  
-  pop3_state_upgrade_tls() would attempt to incorrectly complete the
-  upgrade to pop3s and start the CAPA command if
-  Curl_ssl_connect_nonblocking() returned a failure code and if ssldone
-  was set to TRUE. This would only happen when a non-blocking API hadn't
-  been provided by the SSL implementation and curlssl_connect() was
-  called underneath.
+- [Clemens Gruber brought this change]
 
-- imap.c: Fixed failure detection during TLS upgrade
+  Added libuv example multi-uv.c
+
+Yang Tse (25 Mar 2013)
+- NTLM: fix several NTLM code paths memory leaks
+
+- WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage
   
-  imap_state_upgrade_tls() would attempt to incorrectly complete the
-  upgrade to imaps and start the CAPABILITY command if
-  Curl_ssl_connect_nonblocking() returned a failure code and if ssldone
-  was set to TRUE. This would only happen when a non-blocking API hadn't
-  been provided by the SSL implementation and curlssl_connect() was
-  called underneath.
+  As of 25-mar-2013 wcsdup() _wcsdup() and _tcsdup() are only used in
+  WIN32 specific code, so tracking of these has not been extended for
+  other build targets. Without this fix, memory tracking system on
+  WIN32 builds, when using these functions, would provide misleading
+  results.
+  
+  In order to properly extend this support for all targets curl.h
+  would have to define curl_wcsdup_callback prototype and consequently
+  wchar_t should be visible before that in curl.h.  IOW curl_wchar_t
+  defined in curlbuild.h and this pulling whatever system header is
+  required to get wchar_t definition.
+  
+  Additionally a new curl_global_init_mem() function that also receives
+  user defined wcsdup() callback would be required.
 
-Yang Tse (24 Jan 2013)
-- zz40-xc-ovr.m4: internals overhauling
+- curl_ntlm_msgs.c: revert commit 463082bea4
   
-  - Update comments
-  - Execute commands in subshells
-  - Faster path separator check
-  - Fix missing 'test' command
-  - Rename private macros
-  - Minimize AC_REQUIRE usage
+  reverts unreleased invalid memory leak fix
 
-Steve Holme (23 Jan 2013)
-- email: Removed unnecessary return statements
+Daniel Stenberg (23 Mar 2013)
+- RELEASE-NOTES: synced with bc6037ed3ec02
   
-  Small tidy up to remove unnecessary return statements prior to the next
-  fix.
+  More changes, bugfixes and contributors!
 
-Yang Tse (23 Jan 2013)
-- zz40-xc-ovr.m4: redirect errors and warnings to stderr
+- [Martin Jansen brought this change]
 
-- zz40-xc-ovr.m4: AC_REQUIRE also XC_CONFIGURE_PREAMBLE success message
+  Curl_proxyCONNECT: count received headers
+  
+  Proxy servers tend to add their own headers at the beginning of
+  responses. The size of these headers was not taken into account by
+  CURLINFO_HEADER_SIZE before this change.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1204
 
-- zz60-xc-ovr.m4: tighten XC_OVR_ZZ60 macro placement requirements
+Steve Holme (21 Mar 2013)
+- sasl: Corrected a few violations of the curl coding standards
+  
+  Corrected some incorrectly positioned pointer variable declarations to
+  be "char *" rather than "char* ".
 
-- configure: use XC_CONFIGURE_PREAMBLE early checks
+- multi.c: Corrected a couple of violations of the curl coding standards
   
-  Some basic checks we make were placed early enough in generated
-  configure script when using autoconf 2.5X versions. Newer autoconf
-  versions expand these checks much further into the configure script,
-  rendering them useless. Using XC_CONFIGURE_PREAMBLE fixes placement
-  of early intended checks across all our autoconf supported versions.
+  Corrected some incorrectly positioned pointer variable declarations to
+  be "type *" rather than "type* ".
 
-- zz40-xc-ovr.m4: provide XC_CONFIGURE_PREAMBLE macro
+- imap-tests: Added CRLF to reply data to be compliant with RFC-822
+  
+  Updated the reply data in tests: 800, 801, 802, 804 and 1321 to possess
+  the CRLF as per RFC-822.
 
-Daniel Stenberg (23 Jan 2013)
-- FAQ: update the SSL lib list and wording in question 2.2
+- multi.c: Fix compilation warning
+  
+  warning: an enumerated type is mixed with another type
 
-Steve Holme (22 Jan 2013)
-- curl_sasl.c: Corrected references to RFC
+- multi.c: fix compilation error
   
-  The most recent version of the RFC is RFC4422 and not RFC2222 as
-  previously documented.
+  warning: conversion from enumeration type to different enumeration type
 
-- email: Corrected references to SASL RFC
+- lib1900.c: fix compilation warning
   
-  The most recent version of the SASL RFC is RFC4422 and not RFC2222 as
-  previously documented.
+  warning: declaration of 'time' shadows a global declaration
 
-Daniel Stenberg (22 Jan 2013)
-- [Ulion brought this change]
+Yang Tse (20 Mar 2013)
+- [John E. Malmberg brought this change]
 
-  formpost: support quotes, commas and semicolon in file names
+  build_vms.com: use existing curlbuild.h and parsing fix
   
-  - document the double-quote and backslash need be escaped if quoting.
-  - libcurl formdata escape double-quote in filename by backslash.
-  - curl formparse can parse filename both contains '"' and ',' or ';'.
-  - curl now can uploading file with ',' or ';' in filename.
+  This patch removes building curlbuild.h from the build_vms.com procedure
+  and uses the one in the daily or release tarball instead.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1171
+  packages/vms/build_curlbuild_h.com is obsolete with this change.
+  
+  Accessing the library module name "tool_main" needs different handling
+  when the optional extended parsing is enabled.
+  
+  Tested on IA64/VMS 8.4 and VAX/VMS 7.3
 
-- memanalyze.pl: handle fopen() of file names with quotes
+Nick Zitzmann (19 Mar 2013)
+- darwinssl: disable ECC ciphers under Mountain Lion by default
+  
+  I found out that ECC doesn't work as of OS X 10.8.3, so those ciphers are
+  turned off until the next point release of OS X.
 
-Yang Tse (21 Jan 2013)
-- xc-cc-check.m4: re-evaluate exporting and AC_SUBST'ing vars
+Steve Holme (18 Mar 2013)
+- FEATURES: Small tidy up for constancy and grammar
+
+Daniel Stenberg (18 Mar 2013)
+- [Oliver Schindler brought this change]
+
+  Curl_proxyCONNECT: clear 'rewindaftersend' on success
   
-  Notes:
+  After having done a POST over a CONNECT request, the 'rewindaftersend'
+  boolean could be holding the previous value which could lead to badness.
   
-  When running a configure script that has nested packages (for example
-  libcurl's configure with --enable-ares and c-ares sources embedded in
-  curl tree) and AC_CONFIG_SUBDIRS([nested-subdir]) machinery is used to
-  automatically run the nested configure script from within the parent
-  configure script, it happens that the nested _shell_ script will
-  inherit shell variables exported from the parent _shell_ script.
+  This should be tested for in a new test case!
   
-  If for example parent configure script sets and exports LDFLAGS and LIBS
-  variables with proper values in order to link either a parent library or
-  program with a library which will be configured and built by a nested
-  package; It will happen that when the nested configure script runs, the
-  nested library does not exist yet and _any_ link-test done in the nested
-  configure will fail, such as those that autoconf macros perform in order
-  to detect existing compiler and its characteristics, the result is that
-  the nested configure script will fail with errors such as:
+  Bug: https://groups.google.com/d/msg/msysgit/B31LNftR4BI/KhRTz0iuGmUJ
+
+Steve Holme (18 Mar 2013)
+- TODO: Reordered the protocol and security sections
   
-  configure: error: C compiler cannot create executables
+  Moved SMTP, POP3, IMAP and New Protocol sections to be listed after the
+  other protocols (FTP, HTTP and TELNET) and SASL to be after SSL and
+  GnuTLS as these are all security related.
   
-  For now, we no longer export variables previously exported here.
+  Additionally fixed numbering of the SSL and GnuTLS sections as they
+  weren't consecutive.
+
+Yang Tse (18 Mar 2013)
+- tests: specify 'text' mode for some output files in verify section
+
+Steve Holme (17 Mar 2013)
+- imap: Fixed incorrect initial response generation for SASL AUTHENTICATE
   
-  On the other hand, AC_SUBST'ing them is appropriate and even with nested
-  packages each package's config.status gets its own package values.
+  Fixed incorrect initial response generation for the NTLM and LOGIN SASL
+  authentication mechanisms when the SASL-IR was detected.
   
-  So we reinstate AC_SUBST'ing previously AC_SUBST'ed variables.
+  Introduced in commit: 6da7dc026c14.
 
-Daniel Stenberg (21 Jan 2013)
-- FAQ: 3.22 curl -X gives me HTTP problems
+- FEATURES: Expanded the supported enhanced IMAP command list
 
-Yang Tse (21 Jan 2013)
-- xc-cc-check.m4: avoid recursive package automake'ing breakage
+- TODO: Corrected typo in TOC
 
-- xc-cc-check.m4: mark earlier variables that are to be exported
+- TODO: Added IMAP section and removed unused Other protocols section
 
-- configure: autotools compatibility fixes - step I
-  
-  Fix proper macro expansion order across autotools versions for
-  C compiler and preprocessor program checks.
+- TODO: Added graceful base64 decoding failure to SMTP and POP3
 
-Steve Holme (20 Jan 2013)
-- pop3.c: Fixed conditional compilation of the apop response function
-  
-  Extended the fix from commit 8b15c84ea91e to additionally exclude
-  pop3_state_apop_resp() if the CURL_DISABLE_CRYPTO_AUTH flag is
-  defined.
+- TODO: Corrected typo on section 10.2 heading
 
-Yang Tse (20 Jan 2013)
-- Makefile.inc: fix $(top_srcdir) not allowed in _SOURCES variables
+Yang Tse (16 Mar 2013)
+- tests: 96, 558, 1330: strip build subdirectory dependent leading path
 
-Daniel Stenberg (19 Jan 2013)
-- formadd: reject trying to read a directory where a file is expected
-  
-  Bug: http://curl.haxx.se/mail/archive-2013-01/0017.html
-  Reported by: Ulrich Doehner
+Steve Holme (15 Mar 2013)
+- TODO: Added section 10.2 Initial response to POP3 to do list
 
-- curl_easy_send.3: document return codes
-  
-  Reported by: Craig Davison
-  Bug: http://curl.haxx.se/mail/lib-2013-01/0234.html
+- imap-tests: Corrected copy/paste error in test808 reply data
 
-- curl_easy_recv.3: document return codes
-  
-  Reported by: Craig Davison
-  Bug: http://curl.haxx.se/mail/lib-2013-01/0234.html
+Yang Tse (15 Mar 2013)
+- unit1330.c: fix date
 
-Steve Holme (19 Jan 2013)
-- email: General code tidy up
+- tests: add #96 #558 and #1330
   
-  Corrected some function argument definitions to maximize the 80
-  character line length limit and be in keeping with the curl
-  coding style.
+  These verfy that the 'memory tracking' subsystem is actually doing its
+  job when using curl tool (#96), a test in libtest (#558) and also a unit
+  test (#1330), in order to prevent regressions in this functionallity.
 
-- pop3.c: Fixed a problem with pop3s connections not connecting properly
+Steve Holme (15 Mar 2013)
+- imap-tests: Added test808 for custom EXAMINE command
+
+Daniel Stenberg (15 Mar 2013)
+- HTTP proxy: insert slash in URL if missing
   
-  Fixed an issue where Curl_ssl_connect_nonblocking() wouldn't complete
-  correctly and the ssldone flag wouldn't be set to true for pop3s based
-  connections.
+  curl has been accepting URLs using slightly wrong syntax for a long
+  time, such as when completely missing as slash "http://example.org" or
+  missing a slash when a query part is given
+  "http://example.org?q=foobar".
   
-  Bug introduced in commit: 4ffb8a6398ed.
+  curl would translate these into a legitimate HTTP request to servers,
+  although as was shown in bug #1206 it was not adjusted properly in the
+  cases where a HTTP proxy was used.
+  
+  Test 1213 and 1214 were added to the test suite to verify this fix.
+  
+  The test HTTP server was adjusted to allow us to specify test number in
+  the host name only without using any slashes in a given URL.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1206
+  Reported by: ScottJi
 
-Daniel Stenberg (18 Jan 2013)
-- RELEASE-NOTES: add references to several bugfixes+changes
+Steve Holme (14 Mar 2013)
+- ftpserver.pl: Added EXAMINE_imap() for IMAP EXAMINE commands
+  
+  Used hard coded data from RFC-3501 section 6.3.2.
 
-Steve Holme (18 Jan 2013)
-- RELEASE-NOTES: Added missing imap fix
+Yang Tse (14 Mar 2013)
+- curl_memory.h: introduce CURLX_NO_MEMORY_CALLBACKS usage possibility
   
-  Added missing imap fix as per commit 709b3506cd9b.
+  This commit alone does not fix anything nor modifies existing
+  interfaces or behaviors, although it is a prerequisite for other
+  fixes.
 
-Yang Tse (18 Jan 2013)
-- runtests.pl: make VPATH builds find valgrind.supp
+- Makefile.vc6: add missing files
 
-Daniel Stenberg (18 Jan 2013)
-- RELEASE-NOTES: synced with c43127414d89
+Linus Nielsen Feltzing (14 Mar 2013)
+- pipelining: Remove dead code.
 
-- always-multi: always use non-blocking internals
+- Multiple pipelines and limiting the number of connections.
   
-  Remove internal separated behavior of the easy vs multi intercace.
-  curl_easy_perform() is now using the multi interface itself.
+  Introducing a number of options to the multi interface that
+  allows for multiple pipelines to the same host, in order to
+  optimize the balance between the penalty for opening new
+  connections and the potential pipelining latency.
   
-  Several minor multi interface quirks and bugs have been fixed in the
-  process.
+  Two new options for limiting the number of connections:
   
-  Much help with debugging this has been provided by: Yang Tse
+  CURLMOPT_MAX_HOST_CONNECTIONS - Limits the number of running connections
+  to the same host. When adding a handle that exceeds this limit,
+  that handle will be put in a pending state until another handle is
+  finished, so we can reuse the connection.
+  
+  CURLMOPT_MAX_TOTAL_CONNECTIONS - Limits the number of connections in total.
+  When adding a handle that exceeds this limit,
+  that handle will be put in a pending state until another handle is
+  finished. The free connection will then be reused, if possible, or
+  closed if the pending handle can't reuse it.
+  
+  Several new options for pipelining:
+  
+  CURLMOPT_MAX_PIPELINE_LENGTH - Limits the pipeling length. If a
+  pipeline is "full" when a connection is to be reused, a new connection
+  will be opened if the CURLMOPT_MAX_xxx_CONNECTIONS limits allow it.
+  If not, the handle will be put in a pending state until a connection is
+  ready (either free or a pipe got shorter).
+  
+  CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE - A pipelined connection will not
+  be reused if it is currently processing a transfer with a content
+  length that is larger than this.
+  
+  CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE - A pipelined connection will not
+  be reused if it is currently processing a chunk larger than this.
+  
+  CURLMOPT_PIPELINING_SITE_BL - A blacklist of hosts that don't allow
+  pipelining.
+  
+  CURLMOPT_PIPELINING_SERVER_BL - A blacklist of server types that don't allow
+  pipelining.
+  
+  See the curl_multi_setopt() man page for details.
 
-Yang Tse (17 Jan 2013)
-- url.c: fix HTTP CONNECT tunnel establishment upon delayed response
+Yang Tse (13 Mar 2013)
+- tool_main.c: remove redundant vms_show storage-class specifier
   
-  Fixes initial proxy response being processed by the tunneled protocol
-  handler instead of the HTTP wrapper handler. This issue would trigger
-  upon delayed CONNECT response from the proxy.
+  vms_show 'extern' storage-class specifier removed from tool_main.c due to...
   
-  Additionally fixes a multi interface code-path in which connections
-  would not time out properly.
+  - Advice from Tor Arntsen: http://curl.haxx.se/mail/lib-2013-03/0164.html
   
-  This does not fix known bug #39.
+  - HP OpenVMS docs stating that 'Extern is the default storage class for
+    variables declared outside a function.'
+    http://h71000.www7.hp.com/commercial/c/docs/dec_c_help_5.html
+    (Storage_Classes section)
+
+- test509: libcurl initialization with memory callbacks and actual usage
+
+Steve Holme (13 Mar 2013)
+- pop3: Removed unnecessary transfer cancellation
   
-  URL: http://curl.haxx.se/mail/lib-2013-01/0191.html
+  Following commit e450f66a02d8 and the changes in the multi interface
+  being used internally, from 7.29.0, the transfer cancellation in
+  pop3_dophase_done() is no longer required.
 
-Daniel Stenberg (16 Jan 2013)
-- [Yves Arrouye brought this change]
+Yang Tse (13 Mar 2013)
+- Makefile.am: add VMS files not being included in tarball
 
-  --libcurl: fix for non-zero default options
+- [Tom Grace brought this change]
+
+  build_vms.com: VMS build fixes
   
-  If the default value for an option taking a long as its value is non
-  zero, and it is set by zero by a command line option, then that command
-  line option is not reflected in --libcurl's output. This is because line
-  520-521 of tool_setopt.c look like:
+  Added missing slash in cc_full_list.
+  Removed unwanted extra quotes inside symbol tool_main
+  for non-VAX architectures that triggered link failure.
+  Replaced curl_sys_inc with sys_inc.
+
+- [Tom Grace brought this change]
+
+  tool_main.c: fix VMS global variable storage-class specifier
   
-  if(!lval)
-      skip = TRUE;
+  An extern submits a psect and a global reference to the linker to point
+  to it. Using "extern int vms_show = 0" also creates a globaldef.
   
-  An example of a command-line option doing so is the -k option that sets
-  CURLOPT_SLL_VERIFYPEER and CURLOPT_SSL_VERIFYHOST to 0L, when the
-  defaults are non-zero.
+  The use of the extern by itself does declare a psect but does not declare
+  a globalsymbol. It does declare a globalref. But the linker needs one and
+  only one globaldef or there is an error.
 
-- FTP: reject illegal port numbers in EPSV 229 responses
+Patrick Monnerat (12 Mar 2013)
+- OS400: synchronize RPG binding
 
-Yang Tse (15 Jan 2013)
-- commit bc682cbd follow-up
+Steve Holme (12 Mar 2013)
+- pop3: Fixed continuous wait when using --ftp-list
+  
+  Don't initiate a transfer when using --ftp-list.
 
-- build: use per-target '_CPPFLAGS' for those currently using default
+Kamil Dudka (12 Mar 2013)
+- [Zdenek Pavlas brought this change]
+
+  curl_global_init: accept the CURL_GLOBAL_ACK_EINTR flag
   
-  Automake documents that doing this will make it choose a different name
-  for intermediate object files even when sharing source files across
-  targets of same Makefile.am.
+  The flag can be used in pycurl-based applications where using the multi
+  interface would not be acceptable because of the performance lost caused
+  by implementing the select() loop in python.
   
-  Up to automake 1.13.1 target's intermediate object files were placed
-  in the build subdirectory of the target. We depended on this, probably
-  undocumented behavior, to achieve same behavior as if a per-target flag
-  had been specified when building targets that actually belong to
-  different Makefile.am files.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1168
+  Downstream Bug: https://bugzilla.redhat.com/919127
+
+- easy: do not ignore poll() failures other than EINTR
+
+Yang Tse (12 Mar 2013)
+- curl.h: stricter CURL_EXTERN linkage decorations logic
   
-  It seems automake 1.13.2 is going to break behavior mentioned above.
+  No API change involved.
   
-  So, lets use a documented behavior in order to achieve same purpose,
-  across automake versions, no matter where automake wishes to place
-  intermediate object files.
+  Info: http://curl.haxx.se/mail/lib-2013-02/0234.html
+
+Daniel Stenberg (11 Mar 2013)
+- THANKS: Latin-1'ified Jiri's name
+
+Steve Holme (11 Mar 2013)
+- test806: Added CRLF to reply data to be compliant with RFC-822
+
+Daniel Stenberg (11 Mar 2013)
+- test805: added crlf newlines to make data size match
   
-  Our build targets that already were using a per-target '_CFLAGS' or
-  '_CPPFLAGS' need no 'fixing', these were already 'fixed'. The only
-  Makefile.am or Makefile.in files in libcurl's source tree touched by
-  this 'fix' are tests/libtest/Makefile.inc and tests/unit/Makefile.inc.
+  since mails sent are supposed to have CRLF line endings I added them and
+  now the data size after (\Seen) matches again properly
 
-- tests/libtest/Makefile.inc: sort build targets
+- test: fix newline for the data check of 807
 
-- tests/Makefile.am: remove wildcard usage in EXTRA_DIST
+Yang Tse (11 Mar 2013)
+- test801 to test807: fix protocol section line endings
 
-Kamil Dudka (15 Jan 2013)
-- nss: fix error messages for CURLE_SSL_{CACERT,CRL}_BADFILE
+Steve Holme (10 Mar 2013)
+- Makefile.am: Corrected a couple of spurious tab characters
   
-  Do not use the error messages from NSS for errors not occurring in NSS.
+  Corrected a couple of tab characters between test702 and test703, and
+  between test900 and test901 which should be spaces.
 
-Steve Holme (14 Jan 2013)
-- TODO: Updated following IMAP SASL additions
+- [Jiri Hruska brought this change]
 
-Yang Tse (14 Jan 2013)
-- configure: fix automake 1.13 compatibility
+  imap: Added test807 for custom request functionality (STORE)
+
+- [Jiri Hruska brought this change]
+
+  imap: Added test806 for IMAP (folder) LIST command
+
+- [Jiri Hruska brought this change]
+
+  imap: Added test805 for APPEND functionality
+
+- [Jiri Hruska brought this change]
+
+  imap: Added test804 for skipping SELECT if in the same mailbox
+
+- [Jiri Hruska brought this change]
+
+  imap: Added test802 and test803 for UIDVALIDITY verification
   
-  Tested with:
+  Added one test for a request with matching UIDVALIDITY and one which is
+  a mismatched request that will fail.
+
+- [Jiri Hruska brought this change]
+
+  imap: Added test801 for UID and SECTION URL parameters
+
+- [Jiri Hruska brought this change]
+
+  imap-tests: Accept quoted parameters in ftpserver.pl
   
-  buildconf: autoconf version 2.69
-  buildconf: autom4te version 2.69
-  buildconf: autoheader version 2.69
-  buildconf: automake version 1.13.1
-  buildconf: aclocal version 1.13.1
-  buildconf: libtool version 2.4
-  buildconf: GNU m4 version 1.4.16
+  Any IMAP parameter can come in escaped and in double quotes. Added a
+  simple function to unquote the command parameters and applied it to
+  the IMAP command handlers.
 
-Daniel Stenberg (13 Jan 2013)
-- BUGS: update bug tracker URL
+- [Jiri Hruska brought this change]
+
+  tests: Fix ftpserver.pl indentation
   
-  ... and refresh number of lines of code
+  The whole of FETCH_imap() had one extra space of indentation, whilst
+  APPEND_imap() used indentation of 2 instead of 4 in places.
 
-- Curl_resolver_getsock: fix the function description comment
+- Makefile.am: Corrected end of line filler character
   
-  It referred to it by the wrong name and said it returned the wrong value.
+  The majority of lines, that specify a test file for inclusion, end with
+  a tab character before the slash whilst some end with a space. Corrected
+  those that end with a space to end with a tab character as well.
+
+- email-tests: Updated the test data that corresponds to the test number
   
-  Reported by: Gisle Vanem
+  Finished segregating the email protocol tests, into their own protocol
+  based ranges, in preparation of adding more e-mail related tests to the
+  test suite.
 
-Kamil Dudka (11 Jan 2013)
-- nss: clear session cache if a client cert from file is used
+- email-tests: Renamed the IMAP test to be 800
   
-  This commit fixes a regression introduced in 052a08ff.
+  Continued segregating the email protocol tests, into their own protocol
+  based ranges, in preparation of adding more e-mail related tests to the
+  test suite.
+
+- email-tests: Renamed the SMTP tests to be in the range 900-906
   
-  NSS caches certs/keys returned by the SSL_GetClientAuthDataHook callback
-  and if we connect second time to the same server, the cached cert/key
-  pair is used.  If we use multiple client certificates for different
-  paths on the same server, we need to clear the session cache to force
-  NSS to call the hook again.  The commit 052a08ff prevented the session
-  cache from being cleared if a client certificate from file was used.
+  Continued segregating the email protocol tests, into their own protocol
+  based ranges, in preparation of adding more e-mail related tests to the
+  test suite.
+
+- email-tests: Renamed the POP3 tests to be in the range 850-857
   
-  The condition is now fixed to cover both cases: consssl->client_nickname
-  is not NULL if a client certificate from the NSS database is used and
-  connssl->obj_clicert is not NULL if a client certificate from file is
-  used.
+  Started segregating the email protocol tests, into their own protocol
+  based ranges, in preparation of adding more e-mail related tests to the
+  test suite.
+
+Daniel Stenberg (10 Mar 2013)
+- hiperfifo: updated to use current libevent API
   
-  Review by: Kai Engert
+  Patch by: Myk Taylor
 
-Yang Tse (11 Jan 2013)
-- sockfilt.c: log file descriptor number on read/write error
+Steve Holme (10 Mar 2013)
+- imap: Reworked some function descriptions
 
-- [Gisle Vanem brought this change]
+- imap: Added some missing comments to imap_sendf()
 
-  packages/DOS/common.dj: remove COFF debug info generation
+- email: Removed hard returns from init functions
+
+Daniel Stenberg (9 Mar 2013)
+- curl_multi_wait: avoid second loop if nothing to do
   
-  gcc on DOS hasn't really supported COFF-debug (-gcoff) on djgpp for a
-  long time.
+  ... hopefully this will also make clang-analyzer stop warning on
+  potentional NULL dereferences (which were false positives anyway).
+
+- multi_runsingle: avoid NULL dereference
   
-  "Sounds like the COFF debug info generation has bit-rotted in GCC.
-   Nothing new here, no other platform uses COFF AFAIK."
+  When Curl_do() returns failure, the connection pointer could be NULL so
+  the code path following needs to that that into account.
   
-  So lets drop it too.
+  Bug: http://curl.haxx.se/mail/lib-2013-03/0062.html
+  Reported by: Eric Hu
+
+Steve Holme (9 Mar 2013)
+- imap: Re-factored all perform based functions
   
-  URL: http://curl.haxx.se/mail/lib-2013-01/0130.html
+  Standardised the naming of all perform based functions to be in the form
+  imap_perform_something().
 
-- curl: ignore SIGPIPE - compilation fix - follow-up
+Daniel Stenberg (9 Mar 2013)
+- [Cédric Deltheil brought this change]
 
-- test servers: handle W32/W64 SIGBREAK with exit_signal_handler
+  examples/getinmemory.c: abort the transfer if not enough memory
+  
+  No more use exit(3) but instead tell libcurl that no byte has been
+  written to let it return a `CURLE_WRITE_ERROR`. In addition, check
+  curl easy handle return code.
 
-- test servers: fix errno, ERRNO and SOCKERRNO usage for W32/W64
+- RELEASE-NOTES: synced with ca3c0ed3a9c
+  
+  8 more bugfixes, one change and a bunch of contributors
 
-- sockfilt.c: fix some W64 compiler warnings
+Yang Tse (9 Mar 2013)
+- Makefile.am: empty AM_LDFLAGS definition for automake 1.7 compatibility
 
-Daniel Stenberg (9 Jan 2013)
-- [Nick Zitzmann brought this change]
+Steve Holme (9 Mar 2013)
+- imap: Added description comments to all perform based functions
 
-  docs: the --with-darwinssl option is available on Apple OSes
+- imap: Removed the need for separate custom request functions
+  
+  Moved the custom request processing into the LIST command as the logic
+  is the same.
 
-Yang Tse (9 Jan 2013)
-- curl: ignore SIGPIPE - compilation fix
+- imap: Corrected typo in comment
 
-- build: fix circular header inclusion with other packages
-  
-  This commit renames lib/setup.h to lib/curl_setup.h and
-  renames lib/setup_once.h to lib/curl_setup_once.h.
+Yang Tse (9 Mar 2013)
+- Makefile.am: empty AM_LDFLAGS definition for automake 1.7 compatibility
+
+Steve Holme (9 Mar 2013)
+- imap: Moved imap_logout() to be grouped with the other perform functions
+
+- email: Updated the function descriptions for the logout / quit functions
   
-  Removes the need and usage of a header inclusion guard foreign
-  to libcurl. [1]
+  Updated the function description comments following commit 4838d196fdbf.
+
+- email: Simplified the logout / quit functions
   
-  Removes the need and presence of an alarming notice we carried
-  in old setup_once.h [2]
+  Moved the blocking state machine to the disconnect functions so that the
+  logout / quit functions are only responsible for sending the actual
+  command needed to logout or quit.
   
-  ----------------------------------------
+  Additionally removed the hard return on failure.
+
+- email: Tidied up the *_regular_transfer() functions
   
-  1 - lib/setup_once.h used __SETUP_ONCE_H macro as header inclusion guard
-      up to commit ec691ca3 which changed this to HEADER_CURL_SETUP_ONCE_H,
-      this single inclusion guard is enough to ensure that inclusion of
-      lib/setup_once.h done from lib/setup.h is only done once.
+  Added comments and simplified convoluted dophase_done comparison.
+
+- email: Simplified nesting of if statements in *_doing() functions
+
+Daniel Stenberg (8 Mar 2013)
+- RELEASE-NOTES: mention that krb4 is up for consideration
+
+Steve Holme (8 Mar 2013)
+- imap: Fixed handling of untagged responses for the STORE custom command
   
-      Additionally lib/setup.h has always used __SETUP_ONCE_H macro to
-      protect inclusion of setup_once.h even after commit ec691ca3, this
-      was to avoid a circular header inclusion triggered when building a
-      c-ares enabled version with c-ares sources available which also has
-      a setup_once.h header. Commit ec691ca3 exposes the real nature of
-      __SETUP_ONCE_H usage in lib/setup.h, it is a header inclusion guard
-      foreign to libcurl belonging to c-ares's setup_once.h
+  Added an exception, for the STORE command, to the untagged response
+  processor in imap_endofresp() as servers will back respones containing
+  the FETCH keyword instead.
+
+Yang Tse (8 Mar 2013)
+- curlbuild.h.dist: enhance non-configure GCC ABI detection logic
   
-      The renaming this commit does, fixes the circular header inclusion,
-      and as such removes the need and usage of a header inclusion guard
-      foreign to libcurl. Macro __SETUP_ONCE_H no longer used in libcurl.
+  GCC specific adjustments:
   
-  2 - Due to the circular interdependency of old lib/setup_once.h and the
-      c-ares setup_once.h header, old file lib/setup_once.h has carried
-      back from 2006 up to now days an alarming and prominent notice about
-      the need of keeping libcurl's and c-ares's setup_once.h in sync.
+  - check __ILP32__ before 32 and 64bit processor architectures in
+    order to detect ILP32 programming model on 64 bit processors
+    which, of course, also support LP64 programming model, when using
+    gcc 4.7 or newer.
   
-      Given that this commit fixes the circular interdependency, the need
-      and presence of mentioned notice is removed.
+  - keep 32bit processor architecture checks in order to support gcc
+    versions older than 4.7 which don't define __ILP32__
   
-      All mentioned interdependencies come back from now old days when
-      the c-ares project lived inside a curl subdirectory. This commit
-      removes last traces of such fact.
+  - check __LP64__ for gcc 3.3 and newer, while keeping 64bit processor
+    architecture checks for older versions which don't define __LP64__
 
-Daniel Stenberg (8 Jan 2013)
-- curl: ignore SIGPIPE
-  
-  This is a work-around for bug #1180 which is really libcurl's inability
-  to ignore SIGPIPE in a few cases. With this work-around at least curl
-  won't suffer from it!
+- curlbuild.h.dist: fix GCC build on ARM systems without configure script
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1180
-  Reported by: Lluís Batlle i Rossell
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1205
+  Reported by: technion
 
-Yang Tse (8 Jan 2013)
-- sockfilt.c: fix some compiler warnings
+- [Gisle Vanem brought this change]
 
-Daniel Stenberg (8 Jan 2013)
-- Revert "configure: update req to 2.59"
+  polarssl.c: fix header filename typo
+
+- configure: use XC_LIBTOOL for portability across libtool versions
+
+- xc-lt-iface.m4: provide XC_LIBTOOL macro
+
+Steve Holme (7 Mar 2013)
+- imap: Fixed SELECT not being performed for custom requests
+
+- email: Minor code tidy up following recent changes
   
-  This reverts commit 7a6d8b1b1a8fcc184c36d6b6e741e32250b4bacb.
+  Removed unwanted braces and added variable initialisation.
+
+- DOCS: Corrected the IMAP URL grammar of the UIDVALIDITY parameter
+
+- FEATURES: Provided a little clarity in some IMAP features
+
+- email: Optimised block_statemach() functions
   
-  URL: http://curl.haxx.se/mail/lib-2013-01/0103.html
+  Optimised the result test in each of the block_statemach() functions.
 
-Steve Holme (8 Jan 2013)
-- pop3: Added support for non-blocking SSL upgrade
+- DOCS: Added the list command to the IMAP URL section
   
-  Added support for asynchronous SSL upgrade when using the
-  multi-interface.
+  Added examples of the list command and clarified existing example URLs
+  following recent changes.
 
-Daniel Stenberg (8 Jan 2013)
-- configure: update req to 2.59
+- FEATURES: Updated for recent imap additions
   
-  I ran the 2.59 version of autoupdate that updates obsoleted configure.ac
-  constructs to the 2.59 standard. With a little hands-on fiddling I
-  prevented it from ruining the quoting in AS_HELP_STRING() uses.
+  Updated the imap features list, corrected a typo in the smtp features
+  and clarified a pop3 feature.
+
+Daniel Stenberg (7 Mar 2013)
+- version bump: the next release will be 7.30.0
+
+- checksrc: ban unsafe functions
   
-  I subsequently also bumped the required autoconf version to 2.59
-  (released in December 2003) as I don't have an older autoconf version
-  around to test with and I can't be bothered to install one either...
+  The list of unsafe functions currently consists of sprintf, vsprintf,
+  strcat, strncat and gets.
   
-  Inspired by: Björn Stenberg
-  Related blog post: http://cazfi.livejournal.com/195108.html
-
-Steve Holme (7 Jan 2013)
-- imap.c: Small tidy up to add missing comment
+  Subsequently, some existing code needed updating to avoid warnings on
+  this.
 
-- imap: Added support for sasl digest-md5 authentication
+Steve Holme (7 Mar 2013)
+- RELEASE-NOTES: Added missing imap fixes and additions
+  
+  With all the recent imap changes it wasn't clear what new features and
+  fixes should be included in the release notes.
 
-- imap: Added support for sasl cram-md5 authentication
+Nick Zitzmann (6 Mar 2013)
+- RELEASE-NOTES: brought this up-to-date with the latest changes
 
-Marc Hoersken (7 Jan 2013)
-- tests/server/sockfilt.c: Fixed integer comparison warning
+Steve Holme (6 Mar 2013)
+- [Jiri Hruska brought this change]
 
-- tests/server/sockfilt.c: Include required Win32 headers
+  imap: Fixed test801 and test1321 to specify a message UID
+  
+  Just a folder list would be retrieved if UID was not specified now.
 
-Steve Holme (7 Jan 2013)
-- imap: Added support for sasl ntlm authentication
+- [Jiri Hruska brought this change]
 
-- imap: Added support for sasl login authentication
+  imap: Fixed ftpserver.pl to allow verification even through LIST command
+  
+  Commit 198012ee inadvertently broke LIST_imap().
 
-- pop3.c: Fixed default authentication detection
+- imap: Tidied up the APPEND and final APPEND response functions
   
-  Fixed an issue where a server may positively respond to the CAPA command
-  but not list clear text as a valid authentication type.
+  Removed unnecessary state changes on failure and setting of result codes
+  on success.
 
-- curl_sasl.c: Small code tidy up following imap changes
+- imap: Tidied up the final FETCH response function
+  
+  Removed unnecessary state change on failure and setting of result code on
+  success.
 
-- smtp.c: Small code tidy up following imap changes
+- imap: Tidied up the LIST response function
+  
+  Reworked comments as they referenced custom commands, removed
+  unnecessary state change on failure and setting of result code on
+  success.
 
-- pop3.c: Small code tidy up following imap changes
+- imap: Removed the custom request response function
+  
+  Removed imap_state_custom_resp() as imap_state_list_resp() provides the
+  same functionality.
 
-- imap: Added support for sasl plain text authentication
+- [Jiri Hruska brought this change]
 
-Marc Hoersken (6 Jan 2013)
-- tests/server/sockfilt.c: Fixed support for listening sockets
+  imap: Updated ftpserver.pl to be more compliant, added new commands
   
-  This commit fixes support for sockets that are ready to accept
-  a new connection and have previously been put into listening mode.
+  Enriched IMAP capabilities of ftpserver.pl in order to be able to
+  add tests for the new IMAP features.
   
-  It also includes changes which are the result of investigation
-  regarding Windows STDIN. These changes are the preparation for further
-  improvements regarding support for reading data from STDIN on Windows.
+  * Added support for APPEND - Saves uploaded data to log/upload.$testno
+  * Added support for LIST - Returns the contents of <reply/> section in
+    the current test, like e.g FETCH.
+  * Added support for STORE - Returns hardcoded updated flags
+  * Changed handling of SELECT - Returns much more information in the
+    usual set of untagged responses; uses hardcoded data from an example
+    in the IMAP RFC
+  * Changed handling of FETCH - Fixed response format
+
+- imap: Added check for empty UID in FETCH command
   
-  Open issue: WaitForMultipleObjectsEx does not support PIPE handles
-  which are returned by GetStdHandle while running without a GUI.
+  As the UID has to be specified by the user for the FETCH command to work
+  correctly, added a check to imap_fetch(), although strictly speaking it
+  is protected by the call from imap_perform().
 
-- tests/server/sockfilt.c: Set Windows Console to binary mode
+Kamil Dudka (6 Mar 2013)
+- nss: fix misplaced code enabling non-blocking socket mode
+  
+  The option needs to be set on the SSL socket.  Setting it on the model
+  takes no effect.  Note that the non-blocking mode is still not enabled
+  for the handshake because the code is not yet ready for that.
 
-- tests/server/sockfilt.c: Improved log error messages
+Daniel Stenberg (6 Mar 2013)
+- imap: fix compiler warning
   
-  Include error code and parameters in error messages.
+  imap.c:694:21: error: unused variable 'imapc' [-Werror=unused-variable]
 
-Steve Holme (6 Jan 2013)
-- imap: Introduced the continue response in imap_endofresp()
+Steve Holme (5 Mar 2013)
+- imap: Added support for list command
 
-- imap: Added support for SASL based authentication mechanism detection
+- imap: Added list perform and response handler functions
+
+- imap: Introduced IMAP_LIST state
+
+- imap: Small tidy up of imap_select() to match imap_append()
   
-  Added support for detecting the supported SASL authentication mechanisms
-  via the CAPABILITY command.
+  Updated the style of imap_select() before adding the LIST command.
 
-Yang Tse (6 Jan 2013)
-- Revert changes relative to lib/*.[ch] recent renaming
+- imap: Moved mailbox check from the imap_do() function
   
-  This reverts renaming and usage of lib/*.h header files done
-  28-12-2012, reverting 2 commits:
+  In preparation for the addition of the LIST command, moved the mailbox
+  check from imap_do() to imap_select() and imap_append().
+
+- curl_setup.h: Added S_IRDIR() macro for compilers that don't support it
   
-    f871de0... build: make use of 76 lib/*.h renamed files
-    ffd8e12... build: rename 76 lib/*.h files
+  Commit 26eaa8383001 introduces the use of S_ISDIR() yet some compilers,
+  such as MSVC don't support it, so we must define a substitute using
+  file flags and mask.
+
+Daniel Stenberg (4 Mar 2013)
+- AddFormData: prevent only directories from being posted
   
-  This also reverts removal of redundant include guard (redundant thanks
-  to changes in above commits) done 2-12-2013, reverting 1 commit:
+  Commit f4cc54cb4746ae5a6d (shipped as part of the 7.29.0 release) was a
+  bug fix that introduced a regression in that while trying to avoid
+  allowing directory names, it also forbade "special" files like character
+  devices and more. like "/dev/null" as was used by Oliver who reported
+  this regression.
   
-    c087374... curl_setup.h: remove redundant include guard
+  Reported by: Oliver Gondža
+  Bug: http://curl.haxx.se/mail/archive-2013-02/0040.html
+
+Nick Zitzmann (3 Mar 2013)
+- darwinssl: fix infinite loop if server disconnected abruptly
   
-  This also reverts renaming and usage of lib/*.c source files done
-  3-12-2013, reverting 3 commits:
+  If the server hung up the connection without sending a closure alert,
+  then we'd keep probing the socket for data even though it's dead. Now
+  we're ready for this situation.
   
-    13606bb... build: make use of 93 lib/*.c renamed files
-    5b6e792... build: rename 93 lib/*.c files
-    7d83dff... build: commit 13606bbfde follow-up 1
+  Bug: http://curl.haxx.se/mail/lib-2013-03/0014.html
+  Reported by: Aki Koskinen
+
+Steve Holme (3 Mar 2013)
+- imap: Added comments to imap_append()
+
+- [Jiri Hruska brought this change]
+
+  imap: Added required mailbox check for FETCH and APPEND commands
+
+- pingpong.c: Fix enumerated type mixed with another type
+
+- smtp: Updated the coding style for state changes after a send operation
   
-  Start of related discussion thread:
+  Some state changes would be performed after a failure test that
+  performed a hard return, whilst others would be performed within a test
+  for success. Updated the code, for consistency, so all instances are
+  performed within a success test.
+
+- pop3: Updated the coding style for state changes after a send operation
   
-    http://curl.haxx.se/mail/lib-2013-01/0012.html
+  Some state changes would be performed after a failure test that
+  performed a hard return, whilst others would be performed within a test
+  for success. Updated the code, for consistency, so all instances are
+  performed within a success test.
+
+- imap: Fixed typo in variable assignment
+
+- [Jiri Hruska brought this change]
+
+  imap: Fixed custom request handling in imap_done()
   
-  Asking for confirmation on pushing this revertion commit:
+  Fixed imap_done() so that neither the FINAL states are not entered when
+  a custom command has been performed.
+
+- [Jiri Hruska brought this change]
+
+  imap: Enabled custom requests in imap_select_resp()
   
-    http://curl.haxx.se/mail/lib-2013-01/0048.html
+  Changed imap_select_resp() to invoke imap_custom() instead of
+  imap_fetch() after the mailbox has been selected if a custom
+  command has been set.
+
+- [Jiri Hruska brought this change]
+
+  imap: Enabled custom requests in imap_perform()
   
-  Confirmation summary:
+  Modified imap_perform() to start with the custom command instead of
+  SELECT when a custom command is to be performed and no mailbox has
+  been given.
+
+- [Jiri Hruska brought this change]
+
+  imap: Added custom request perform and response handler functions
   
-    http://curl.haxx.se/mail/lib-2013-01/0079.html
+  Added imap_custom(), which initiates the custom command processing,
+  and an associated response handler imap_state_custom_resp(), which
+  handles any responses by sending them to the client as body data.
   
-  NOTICE: The list of 2 files that have been modified by other
-  intermixed commits, while renamed, and also by at least one
-  of the 6 commits this one reverts follows below. These 2 files
-  will exhibit a hole in history unless git's '--follow' option
-  is used when viewing logs.
+  All untagged responses with the same name as the first word of the
+  custom request string are accepted, with the exception of SELECT and
+  EXAMINE which have responses that cannot be easily identified. An
+  extra check has been provided for them so that any untagged responses
+  are accepted for them.
+
+- pop3: Fixed unnecessary parent structure reference
   
-    lib/curl_imap.h
-    lib/curl_smtp.h
+  Updated pop3 code following recent imap changes.
 
-Daniel Stenberg (6 Jan 2013)
-- mk-ca-bundle.1: convert syntax to what's used elsewhere
+- [Jiri Hruska brought this change]
+
+  imap: Added custom request parsing
   
-  ... mostly to make sure roffit works better on it, but also to make our
-  man pages use a more unified style.
+  Added imap_parse_custom_request() for parsing the CURLOPT_CUSTOMREQUEST
+  parameter which URL decodes the value and separates the request from
+  any parameters - This makes it easier to filter untagged responses
+  by the request command.
 
-- mk-ca-bundle.1: mention new -f, fix outputfile output
+- [Jiri Hruska brought this change]
+
+  imap: Introduced custom request parameters
   
-  also edited a few sentences to become more verbose
+  Added custom request parameters to the per-request structure.
 
-- mk-ca-bundle: add -f, support passing to stdout and more
+- [Jiri Hruska brought this change]
+
+  imap: Introduced IMAP_CUSTOM state
+
+- imap: Minor code tidy up
   
-  1. When the downloaded data file from Mozilla is current, but the output
-  bundle does not exist: continue processing to create the bundle.  The
-  goal is to have the output file - not just download the latest input.
+  Minor tidy up of code layout and comments following recent changes.
+
+- imap: Simplified the imap_state_append_resp() function
   
-  2. added -f option to force re-processing the file.  Useful for
-  debugging/testing the process.
+  Introduced the result code variable to simplify the state changes and
+  remove the hard returns.
+
+- imap: Changed successful response logic in imap_state_append_resp()
   
-  3. added support for output to '-' (stdout), allowing the output to be
-  piped.
+  For consistency changed the logic of the imap_state_append_resp()
+  function to test for an unsucessful continuation response rather than a
+  succesful one.
+
+- imap: Standardised imapcode condition tests
   
-  4. All progress and error messages go to STDERR rather than STDOUT (3)
+  For consistency changed two if(constant != imapcode) tests to be
+  if(imapcode != constant).
+
+- imap: Moved imap_append() to be with the other perform functions
+
+- [Jiri Hruska brought this change]
+
+  imap: Enabled APPEND support in imap_perform()
   
-  5. The script opened and closed the output file many times
-  unnecessarily.  It now opens it once, does the output and closes it.
+  Added logic in imap_perform() to perform an APPEND rather than SELECT
+  and FETCH if an upload has been specified.
+
+- [Jiri Hruska brought this change]
+
+  imap: Implemented APPEND final processing
   
-  6. Backup of the input files happens after successful processing, not
-  before.
+  The APPEND operation needs to be performed in several steps:
+    1) We send "<tag> APPEND <mailbox> <flags> {<size>}\r\n"
+    2) Server responds with continuation respose "+ ...\r\n"
+    3) We start the transfer and send <size> bytes of data
+    4) Only now we end the request command line by sending "\r\n"
+    5) Server responds with "<tag> OK ...\r\n"
   
-  7. The output is written to a temporary file, and renamed to the
-  requested name after backup - this greatly reduces the window where the
-  file can be seen partially written.
+  This commit performs steps 4 and 5, in the DONE phase, as more
+  processing is required after the transfer.
+
+- [Jiri Hruska brought this change]
+
+  imap: Added APPEND perform and response handler functions
   
-  8. all die calls have a \n at the end to suppress perl's traceback - the
-  traceback isn't useful to end users.
+  Added imap_append() function to initiate upload and imap_append_resp()
+  to handle the continuation response and start the transfer.
+
+- [Jiri Hruska brought this change]
+
+  imap: Introduced IMAP_APPEND and IMAP_APPEND_FINAL states
+
+- [Jiri Hruska brought this change]
+
+  imap: Updated setting of transfer variables in imap_state_fetch_resp()
   
-  Patch: http://curl.haxx.se/mail/lib-2013-01/0045.html
+  Add number of bytes retrieved from the PP cache to req.bytecount and set
+  req.maxdownload only when starting a proper download.
 
-Yang Tse (5 Jan 2013)
-- imap test server: fix typo in name of SELECT_imap() sub definition
+- [Jiri Hruska brought this change]
+
+  imap: Improved FETCH response parsing
   
-  IMAP test server breaking typo introduced with commit b708a522a1
+  Added safer parsing of the untagged FETCH response line and the size of
+  continuation data.
 
-Steve Holme (4 Jan 2013)
-- imap test server: Added support for the CAPABILITY command
+- imap: Fixed accidentally lossing the result code
   
-  Added support for the CAPABILITY command in preparation of upcoming
-  changes.
+  Accidentally lost the result code in imap_state_capability() and
+  imap_state_login() with commit b06a78622609.
 
-Daniel Stenberg (3 Jan 2013)
-- writeout: -w now supports remote_ip/port and local_ip/port
+- imap: Another minor comment addition / tidy up
+
+- imap: Updated the coding style for state changes after a send operation
   
-  Added mention to the curl.1 man page.
+  Some state changes would be performed after a failure test that
+  performed a hard return, whilst others would be performed within a test
+  for success. Updated the code, for consistency, so all instances are
+  performed within a success test.
+
+- pop3 / smtp: Small comment tidy up
   
-  Test case 1223 verifies remote_ip/port.
+  Small tidy up to keep some comments consistant across each of the email
+  protocols.
 
-Yang Tse (3 Jan 2013)
-- test 1222: 8 chars object name generation  &&  test 1221: adjustments
+- [Jiri Hruska brought this change]
 
-Daniel Stenberg (3 Jan 2013)
-- INTERNALS: remove "footnote" never used
+  imap: FETCH response handler cleanup before further changes
+  
+  Removed superfluous NULL assignment after Curl_safefree() and rewrote
+  some comments and logging messages.
 
-Yang Tse (3 Jan 2013)
-- build: commit 13606bbfde follow-up 1
+- pop3: Small tidy up of function arguments
 
-Daniel Stenberg (3 Jan 2013)
-- FAQ: Can I write a server with libcurl?
+- imap: Small tidy up of function arguments
 
-Yang Tse (3 Jan 2013)
-- build: rename 93 lib/*.c files
-  
-  93 lib/*.c source files renamed to use our standard naming scheme.
-  
-  This commit only does the file renaming.
-  
-  ----------------------------------------
+- smtp: Corrected debug message for POP3_AUTH_FINAL constant
   
-    renamed:    lib/amigaos.c -> lib/curl_amigaos.c
-    renamed:    lib/asyn-ares.c -> lib/curl_asyn_ares.c
-    renamed:    lib/asyn-thread.c -> lib/curl_asyn_thread.c
-    renamed:    lib/axtls.c -> lib/curl_axtls.c
-    renamed:    lib/base64.c -> lib/curl_base64.c
-    renamed:    lib/bundles.c -> lib/curl_bundles.c
-    renamed:    lib/conncache.c -> lib/curl_conncache.c
-    renamed:    lib/connect.c -> lib/curl_connect.c
-    renamed:    lib/content_encoding.c -> lib/curl_content_encoding.c
-    renamed:    lib/cookie.c -> lib/curl_cookie.c
-    renamed:    lib/cyassl.c -> lib/curl_cyassl.c
-    renamed:    lib/dict.c -> lib/curl_dict.c
-    renamed:    lib/easy.c -> lib/curl_easy.c
-    renamed:    lib/escape.c -> lib/curl_escape.c
-    renamed:    lib/file.c -> lib/curl_file.c
-    renamed:    lib/fileinfo.c -> lib/curl_fileinfo.c
-    renamed:    lib/formdata.c -> lib/curl_formdata.c
-    renamed:    lib/ftp.c -> lib/curl_ftp.c
-    renamed:    lib/ftplistparser.c -> lib/curl_ftplistparser.c
-    renamed:    lib/getenv.c -> lib/curl_getenv.c
-    renamed:    lib/getinfo.c -> lib/curl_getinfo.c
-    renamed:    lib/gopher.c -> lib/curl_gopher.c
-    renamed:    lib/gtls.c -> lib/curl_gtls.c
-    renamed:    lib/hash.c -> lib/curl_hash.c
-    renamed:    lib/hmac.c -> lib/curl_hmac.c
-    renamed:    lib/hostasyn.c -> lib/curl_hostasyn.c
-    renamed:    lib/hostcheck.c -> lib/curl_hostcheck.c
-    renamed:    lib/hostip.c -> lib/curl_hostip.c
-    renamed:    lib/hostip4.c -> lib/curl_hostip4.c
-    renamed:    lib/hostip6.c -> lib/curl_hostip6.c
-    renamed:    lib/hostsyn.c -> lib/curl_hostsyn.c
-    renamed:    lib/http.c -> lib/curl_http.c
-    renamed:    lib/http_chunks.c -> lib/curl_http_chunks.c
-    renamed:    lib/http_digest.c -> lib/curl_http_digest.c
-    renamed:    lib/http_negotiate.c -> lib/curl_http_negotiate.c
-    renamed:    lib/http_negotiate_sspi.c -> lib/curl_http_negotiate_sspi.c
-    renamed:    lib/http_proxy.c -> lib/curl_http_proxy.c
-    renamed:    lib/idn_win32.c -> lib/curl_idn_win32.c
-    renamed:    lib/if2ip.c -> lib/curl_if2ip.c
-    renamed:    lib/imap.c -> lib/curl_imap.c
-    renamed:    lib/inet_ntop.c -> lib/curl_inet_ntop.c
-    renamed:    lib/inet_pton.c -> lib/curl_inet_pton.c
-    renamed:    lib/krb4.c -> lib/curl_krb4.c
-    renamed:    lib/krb5.c -> lib/curl_krb5.c
-    renamed:    lib/ldap.c -> lib/curl_ldap.c
-    renamed:    lib/llist.c -> lib/curl_llist.c
-    renamed:    lib/md4.c -> lib/curl_md4.c
-    renamed:    lib/md5.c -> lib/curl_md5.c
-    renamed:    lib/memdebug.c -> lib/curl_memdebug.c
-    renamed:    lib/mprintf.c -> lib/curl_mprintf.c
-    renamed:    lib/multi.c -> lib/curl_multi.c
-    renamed:    lib/netrc.c -> lib/curl_netrc.c
-    renamed:    lib/non-ascii.c -> lib/curl_non_ascii.c
-    renamed:    lib/curl_non-ascii.h -> lib/curl_non_ascii.h
-    renamed:    lib/nonblock.c -> lib/curl_nonblock.c
-    renamed:    lib/nss.c -> lib/curl_nss.c
-    renamed:    lib/nwlib.c -> lib/curl_nwlib.c
-    renamed:    lib/nwos.c -> lib/curl_nwos.c
-    renamed:    lib/openldap.c -> lib/curl_openldap.c
-    renamed:    lib/parsedate.c -> lib/curl_parsedate.c
-    renamed:    lib/pingpong.c -> lib/curl_pingpong.c
-    renamed:    lib/polarssl.c -> lib/curl_polarssl.c
-    renamed:    lib/pop3.c -> lib/curl_pop3.c
-    renamed:    lib/progress.c -> lib/curl_progress.c
-    renamed:    lib/qssl.c -> lib/curl_qssl.c
-    renamed:    lib/rawstr.c -> lib/curl_rawstr.c
-    renamed:    lib/rtsp.c -> lib/curl_rtsp.c
-    renamed:    lib/security.c -> lib/curl_security.c
-    renamed:    lib/select.c -> lib/curl_select.c
-    renamed:    lib/sendf.c -> lib/curl_sendf.c
-    renamed:    lib/share.c -> lib/curl_share.c
-    renamed:    lib/slist.c -> lib/curl_slist.c
-    renamed:    lib/smtp.c -> lib/curl_smtp.c
-    renamed:    lib/socks.c -> lib/curl_socks.c
-    renamed:    lib/socks_gssapi.c -> lib/curl_socks_gssapi.c
-    renamed:    lib/socks_sspi.c -> lib/curl_socks_sspi.c
-    renamed:    lib/speedcheck.c -> lib/curl_speedcheck.c
-    renamed:    lib/splay.c -> lib/curl_splay.c
-    renamed:    lib/ssh.c -> lib/curl_ssh.c
-    renamed:    lib/sslgen.c -> lib/curl_sslgen.c
-    renamed:    lib/ssluse.c -> lib/curl_ssluse.c
-    renamed:    lib/strdup.c -> lib/curl_strdup.c
-    renamed:    lib/strequal.c -> lib/curl_strequal.c
-    renamed:    lib/strerror.c -> lib/curl_strerror.c
-    renamed:    lib/strtok.c -> lib/curl_strtok.c
-    renamed:    lib/strtoofft.c -> lib/curl_strtoofft.c
-    renamed:    lib/telnet.c -> lib/curl_telnet.c
-    renamed:    lib/tftp.c -> lib/curl_tftp.c
-    renamed:    lib/timeval.c -> lib/curl_timeval.c
-    renamed:    lib/transfer.c -> lib/curl_transfer.c
-    renamed:    lib/url.c -> lib/curl_url.c
-    renamed:    lib/version.c -> lib/curl_version.c
-    renamed:    lib/warnless.c -> lib/curl_warnless.c
-    renamed:    lib/wildcard.c -> lib/curl_wildcard.c
+  Following commit ad3177da24b8 corrected the debug message in state()
+  from AUTH to AUTH_FINAL.
+
+- pop3: Corrected debug message for POP3_AUTH_FINAL constant
   
-  ----------------------------------------
+  Following commit afad1ce753a1 corrected the debug message in state()
+  from AUTH to AUTH_FINAL.
 
-- build: make use of 93 lib/*.c renamed files
+- imap: Corrected debug message for IMAP_AUTHENTICATE_FINAL constant
   
-  93 *.c source files renamed to use our standard naming scheme.
+  Following commit 13006f3de9ec corrected the debug message in state()
+  from AUTHENTICATE to AUTHENTICATE_FINAL.
+
+- [Jiri Hruska brought this change]
+
+  imap: Fixed error code returned for invalid FETCH response
   
-  This change affects 77 files in libcurl's source tree.
+  If the FETCH command does not result in an untagged response the the
+  UID is probably invalid. As such do not return CURLE_OK.
 
-Daniel Stenberg (3 Jan 2013)
-- INSTALL: unify the SSL library texts
+- [Jiri Hruska brought this change]
+
+  imap: Added processing of the final FETCH responses
   
-  Make them smaller and more similar for each separate SSL library
-  supported by the configure build
+  Not processing the final FETCH responses was not optimal, not only
+  because the response code would be ignored but it would also leave data
+  unread on the socket which would prohibit connection reuse.
 
-Yang Tse (2 Jan 2013)
-- curl_setup.h: remove redundant include guard
+- [Jiri Hruska brought this change]
 
-- build and tests: curl_10char_object_name() shell function
+  imap: Introduced FETCH_FINAL state for processing final fetch responses
   
-  lib/objnames.inc provides definition of curl_10char_object_name() shell
-  function. The intended purpose of this function is to transliterate a
-  (*.c) source file name that may be longer than 10 characters, or not,
-  into a string with at most 10 characters which may be used as an OS/400
-  object name.
+  A typical FETCH response can be broken down into four parts:
   
-  Test case 1221 does unit testng of this function and also verifies
-  that it is possible to generate distinct short object names for all
-  curl and libcurl *.c source file names.
+    1) "* <uid> FETCH (<what> {<size>}\r\n", using continuation syntax
+    2) <size> bytes of the actual message
+    3) ")\r\n", finishing the untagged response
+    4) "<tag> OK ...", finishing the command
   
-  lib/objnames-test.sh is the shell script used for test case 1221.
+  Part 1 is read in imap_fetch_resp(), part 2 is consumed in the PERFORM
+  phase by the transfer subsystem, parts 3 and 4 are currently ignored.
+
+- imap: fix autobuild warning
   
-  tests/runtests.pl modified to accept shell script test cases.
+  Removed whitespace from imap_perform()
+
+- imap: fix compiler warning
   
-  More details inside lib/objnames.inc and lib/objnames-test.sh
+  error: declaration of 'imap' shadows a previous local
 
-- configure.ac: replace AM_CONFIG_HEADER with AC_CONFIG_HEADERS
+- smtp: Re-factored the final SMTP_AUTH constant
   
-  automake 1.13 errors if AM_CONFIG_HEADER is used in configure script.
-  automake 1.13 no longer autoupdates AM_CONFIG_HEADER to
-  AC_CONFIG_HEADERS, thing which automake has been doing since automake
-  version 1.7
+  Changed the final SMTP_AUTH constant to SMTP_AUTH_FINAL for consistency
+  with the response function.
+
+- pop3: Re-factored the final POP3_AUTH constant
   
-  Given that our first automake supported version is automake 1.7,
-  simply replacing AM_CONFIG_HEADER usage with AC_CONFIG_HEADERS seems
-  enough to yet support same automake versions.
+  Changed the final POP3_AUTH constant to POP3_AUTH_FINAL for consistency
+  with the response function.
+
+- imap: Re-factored final IMAP_AUTHENTICATE constant
   
-  Dave Reisner reported issue with 1.13 and provided patch.
+  Changed the final IMAP_AUTHENTICATE constant to IMAP_AUTHENTICATE_FINAL
+  for consistency with the response function.
+
+- imap: Updated the coding style of imap_state_servergreet_resp()
   
-  http://curl.haxx.se/mail/lib-2012-12/0246.html
+  Updated the coding style, in this function, to be consistant with other
+  response functions rather then performing a hard return on failure.
 
-- curl-override.m4: provide AC_CONFIG_MACRO_DIR definition conditionally
+- imap: Reversed the logic of the (un)successful tagged SELECT response
   
-  Provide a 'traceable' AC_CONFIG_MACRO_DIR definition only when using
-  an autoconf version that does not provide it, instead of what we were
-  doing up to now of providing and overriding AC_CONFIG_MACRO_DIR for
-  all autoconf versions.
+  Reversed the logic of the unsuccessful vs successful tagged SELECT
+  response in imap_state_select_resp() to be more logical to read.
 
-Steve Holme (30 Dec 2012)
-- imap.c: Minor follow up tidy up
+- imap: Reversed the logic of the (un)successful tagged CAPABILITY response
+  
+  Reversed the logic of the unsuccessful vs successful tagged CAPABILITY
+  response in imap_state_capability_resp() to be more logical to read.
 
-- imap: Code tidy up prior to adding support for the CAPABILITY command
+- imap: Corrected char* references with char *
   
-  * Changing the order of the state machine to represent the order in
-    which commands are sent to the server.
+  Corrected char* references made in commit: 709b3506cd9b.
+
+- [Jiri Hruska brought this change]
+
+  imap: Added processing of more than one response when sent in same packet
   
-  * Reworking the imap_endofresp() function as the FETCH response doesn't
-    include the command id and shouldn't be part of the length comparison
-    that takes into account the id string.
+  Added a loop to imap_statemach_act() in which Curl_pp_readresp() is
+  called until the cache is drained. Without this multiple responses
+  received in a single packet could result in a hang or delay.
 
-- pop3_doing: Applied debug info message when function fails
+- [Jiri Hruska brought this change]
+
+  imap: Added skipping of SELECT command if already in the same mailbox
   
-  Applied the same debug message as used in smtp_doing() and imap_doing()
-  when pop3_multi_statemach() fails.
+  Added storage and checking of the last mailbox userd to prevent
+  unnecessary switching.
 
-- imap_doing: don't call imap_dophase_done() if already failed
+- [Jiri Hruska brought this change]
+
+  imap: Introduced the mailbox variable
   
-  Applied the POP3 fix from commit 2897ce7dc2e1 so imap_dophase_done()
-  isn't called if imap_multi_statemach() fails.
+  Added the mailbox variable to the per-connection structure in
+  preparation for checking for an already selected mailbox.
 
-- smtp_doing: don't call smtp_dophase_done() if already failed
+- email: Slight reordering of connection based variables
   
-  Applied the POP3 fix from commit 2897ce7dc2e1 so smtp_dophase_done()
-  isn't called if smtp_multi_statemach() fails.
+  Reordered the state and ssl_done variables in order to provide more
+  consistency between the email protocols as well as for for an upcoming
+  change.
 
-Yang Tse (29 Dec 2012)
-- examples/certinfo.c: fix compiler warning
+- imap: Tidied up comments for connection based variables
 
-Steve Holme (29 Dec 2012)
-- pop3.c: Removed unnecessary POP3_STOP state changes
+- DOCS: Added the IMAP UIDVALIDITY property to the CURLOPT_URL section
+
+- [Jiri Hruska brought this change]
+
+  imap: Added verification of UIDVALIDITY mailbox attribute
   
-  Removed unnecessary state changes in pop3_state_starttls_resp()
-  following previous fix in IMAP module.
+  Added support for checking the UIDVALIDITY, and aborting the request, if
+  it has been specified in the URL and the server response is different.
 
-- smtp.c: Added extra comments around SMTP_STOP state change
+- [Jiri Hruska brought this change]
+
+  imap: Added support for parsing the UIDVALIDITY property
   
-  Provided extra comments in the SMTP module following previous IMAP fix.
+  Added support for parsing the UIDVALIDITY property from the SELECT
+  response and storing it in the per-connection structure.
 
-- imap.c: Fixed bad state error when logging in with invalid credentials
+- [Jiri Hruska brought this change]
+
+  imap: Introduced the mailbox_uidvalidity variable
   
-  Fixed a problem with the state machine when attempting to log in with
-  invalid credentials. The server would report login failure but libcurl
-  would not read the response due to inappropriate IMAP_STOP states being
-  set after the login was sent.
+  Added the mailbox_uidvalidity variable to the per-connection structure
+  in preparation for checking the UIDVALIDITY mailbox attribute.
 
-Yang Tse (29 Dec 2012)
-- imap.c: remove trailing whitespace
+- imap: Corrected comment in imap_endofresp()
 
-Steve Holme (28 Dec 2012)
-- imap.c: Code tidy up - Part 2
+- imap: Corrected whitespace
 
-- imap.c: Code tidy up - Part 1
+- [Jiri Hruska brought this change]
+
+  imap: Added filtering of CAPABILITY and FETCH untagged responses
   
-  Applied some of the comment and layout changes that had already been
-  applied to the pop3 and smtp code over the last 6 to 9 months.
+  Only responses that contain "CAPABILITY" and "FETCH", respectively,
+  will be sent to their response handler.
+
+- [Jiri Hruska brought this change]
+
+  imap: Added a helper function for upcoming untagged response filtering
   
-  This is in preparation of adding SASL based authentication.
+  RFC 3501 states that "the client MUST be prepared to accept any response
+  at all times" yet we assume anything received with "* " at the beginning
+  is the untagged response we want.
+  
+  Introduced a helper function that checks whether the input looks like a
+  response to specified command, so that we may filter the ones we are
+  interested in according to the current state.
 
-- pop3.c: Minor code tidy up
+- [Jiri Hruska brought this change]
+
+  imap: Moved CAPABILITY response handling to imap_state_capability_resp()
   
-  Minor tidy up of comments and layout prior to next part of imap work.
+  Introduced similar handling to the FETCH responses, where even the
+  untagged data responses are handled by the response handler of the
+  individual state.
 
-- smtp: Minor code tidy up
+Linus Nielsen Feltzing (26 Feb 2013)
+- Remove unused variable in smtp_state_data_resp()
+
+Steve Holme (25 Feb 2013)
+- email: Small tidy up following recent changes
+
+- smtp: Removed bytecountp from the per-request structure
   
-  Minor tidy up of comments and layout prior to next part of imap work.
+  Removed this pointer to a downloaded bytes counter because it was set in
+  smtp_init() to point to the same variable the transfer functions keep
+  the count in (k->bytecount), effectively making the code in transfer.c
+  "*k->bytecountp = k->bytecount" a no-op.
 
-- curl_imap.h: Tidy up of comments to be more readable
+- pop3: Removed bytecountp from the per-request structure
+  
+  Removed this pointer to a downloaded bytes counter because it was set in
+  pop3_init() to point to the same variable the transfer functions keep
+  the count in (k->bytecount), effectively making the code in transfer.c
+  "*k->bytecountp = k->bytecount" a no-op.
 
-- imap.c: Code tidy up renaming imapsendf() to imap_sendf()
+- [Jiri Hruska brought this change]
+
+  imap: Removed bytecountp from the per-request structure
   
-  Renamed imapsendf() to imap_sendf() to be more in keeping with the
-  other imap functions as well as Curl_pp_sendf() that it replaces.
+  Removed this pointer to a downloaded bytes counter because it was set in
+  imap_init() to point to the same variable the transfer functions keep
+  the count in (k->bytecount), effectively making the code in transfer.c
+  "*k->bytecountp = k->bytecount" a no-op.
 
-Yang Tse (28 Dec 2012)
-- build: rename 76 lib/*.h files
+- [Jiri Hruska brought this change]
+
+  imap: Adjusted SELECT and FETCH function order
   
-  76 private header files renamed to use our standard naming scheme.
+  Moved imap_select() and imap_fetch() to be grouped with the other
+  perform functions.
+
+- [Jiri Hruska brought this change]
+
+  imap: Adjusted SELECT and FETCH state order in imap_statemach_act()
   
-  This commit only does the file renaming.
+  Exchanged the position of these states in the switch statements to
+  match the state enum, execution and function order.
+
+- imap: Minor tidy up of comments in imap_parse_url_path()
   
-  ----------------------------------------
+  Tidy up of comments before next round of imap changes.
+
+- imap: Fixed incorrect comparison for STARTTLS in imap_endofresp()
   
-    renamed:    amigaos.h -> curl_amigaos.h
-    renamed:    arpa_telnet.h -> curl_arpa_telnet.h
-    renamed:    asyn.h -> curl_asyn.h
-    renamed:    axtls.h -> curl_axtls.h
-    renamed:    bundles.h -> curl_bundles.h
-    renamed:    conncache.h -> curl_conncache.h
-    renamed:    connect.h -> curl_connect.h
-    renamed:    content_encoding.h -> curl_content_encoding.h
-    renamed:    cookie.h -> curl_cookie.h
-    renamed:    cyassl.h -> curl_cyassl.h
-    renamed:    dict.h -> curl_dict.h
-    renamed:    easyif.h -> curl_easyif.h
-    renamed:    escape.h -> curl_escape.h
-    renamed:    file.h -> curl_file.h
-    renamed:    fileinfo.h -> curl_fileinfo.h
-    renamed:    formdata.h -> curl_formdata.h
-    renamed:    ftp.h -> curl_ftp.h
-    renamed:    ftplistparser.h -> curl_ftplistparser.h
-    renamed:    getinfo.h -> curl_getinfo.h
-    renamed:    gopher.h -> curl_gopher.h
-    renamed:    gtls.h -> curl_gtls.h
-    renamed:    hash.h -> curl_hash.h
-    renamed:    hostcheck.h -> curl_hostcheck.h
-    renamed:    hostip.h -> curl_hostip.h
-    renamed:    http.h -> curl_http.h
-    renamed:    http_chunks.h -> curl_http_chunks.h
-    renamed:    http_digest.h -> curl_http_digest.h
-    renamed:    http_negotiate.h -> curl_http_negotiate.h
-    renamed:    http_proxy.h -> curl_http_proxy.h
-    renamed:    if2ip.h -> curl_if2ip.h
-    renamed:    imap.h -> curl_imap.h
-    renamed:    inet_ntop.h -> curl_inet_ntop.h
-    renamed:    inet_pton.h -> curl_inet_pton.h
-    renamed:    krb4.h -> curl_krb4.h
-    renamed:    llist.h -> curl_llist.h
-    renamed:    memdebug.h -> curl_memdebug.h
-    renamed:    multiif.h -> curl_multiif.h
-    renamed:    netrc.h -> curl_netrc.h
-    renamed:    non-ascii.h -> curl_non-ascii.h
-    renamed:    nonblock.h -> curl_nonblock.h
-    renamed:    nssg.h -> curl_nssg.h
-    renamed:    parsedate.h -> curl_parsedate.h
-    renamed:    pingpong.h -> curl_pingpong.h
-    renamed:    polarssl.h -> curl_polarssl.h
-    renamed:    pop3.h -> curl_pop3.h
-    renamed:    progress.h -> curl_progress.h
-    renamed:    qssl.h -> curl_qssl.h
-    renamed:    rawstr.h -> curl_rawstr.h
-    renamed:    rtsp.h -> curl_rtsp.h
-    renamed:    select.h -> curl_select.h
-    renamed:    sendf.h -> curl_sendf.h
-    renamed:    setup.h -> curl_setup.h
-    renamed:    setup_once.h -> curl_setup_once.h
-    renamed:    share.h -> curl_share.h
-    renamed:    slist.h -> curl_slist.h
-    renamed:    smtp.h -> curl_smtp.h
-    renamed:    sockaddr.h -> curl_sockaddr.h
-    renamed:    socks.h -> curl_socks.h
-    renamed:    speedcheck.h -> curl_speedcheck.h
-    renamed:    splay.h -> curl_splay.h
-    renamed:    ssh.h -> curl_ssh.h
-    renamed:    sslgen.h -> curl_sslgen.h
-    renamed:    ssluse.h -> curl_ssluse.h
-    renamed:    strdup.h -> curl_strdup.h
-    renamed:    strequal.h -> curl_strequal.h
-    renamed:    strerror.h -> curl_strerror.h
-    renamed:    strtok.h -> curl_strtok.h
-    renamed:    strtoofft.h -> curl_strtoofft.h
-    renamed:    telnet.h -> curl_telnet.h
-    renamed:    tftp.h -> curl_tftp.h
-    renamed:    timeval.h -> curl_timeval.h
-    renamed:    transfer.h -> curl_transfer.h
-    renamed:    url.h -> curl_url.h
-    renamed:    urldata.h -> curl_urldata.h
-    renamed:    warnless.h -> curl_warnless.h
-    renamed:    wildcard.h -> curl_wildcard.h
+  Corrected the comparison type in addition to commit 1dac29fa83a9.
+
+- DOCS: Corrected IMAP URL examples according to RFC5092
   
-  ----------------------------------------
+  URL examples that included the UID weren't technically correct although
+  would pass the curl parser.
 
-- build: make use of 76 lib/*.h renamed files
+Nick Zitzmann (24 Feb 2013)
+- darwinssl: fix undefined $ssllib warning in runtests.pl
   
-  76 private header files renamed to use our standard naming scheme.
+  I also added --with-darwinssl to the list of SSL options in configure.
+
+Steve Holme (24 Feb 2013)
+- imap: Added check for new internal imap response code
+
+- imap: Changed the order of the response types in imap_endofresp()
   
-  This change affects 322 files in libcurl's source tree.
+  From a maintenance point of view the code reads better to view tagged
+  responses, then untagged followed by continuation responses.
+  
+  Additionally, this matches the order of responses in POP3.
 
-- lib/*.h: use our standard naming scheme for header inclusion guards
+- [Jiri Hruska brought this change]
 
-Steve Holme (28 Dec 2012)
-- imsp.c: Fixed usernames and passwords that contain escape characters
+  imap: Added stricter parsing of continuation responses
   
-  Fixed a problem with sending usernames and passwords that contain
-  backslash, quotation mark and space characters.
+  Enhanced the parsing to only allow continuation responses in some
+  states.
 
-Daniel Stenberg (27 Dec 2012)
-- curl.1: extend the -X, --request description
+- imap: Simplified memcmp() in tagged response parsing
 
-- RELEASE-NOTES: synced with e3ed2b82e6
+- [Jiri Hruska brought this change]
 
-- [Nick Zitzmann brought this change]
+  imap: Reworked the logic of untagged command responses
 
-  darwinssl: Fixed inability to disable peer verification
-  
-  ... on Snow Leopard and Lion
-  
-  Snow Leopard introduced the SSLSetSessionOption() function, but it
-  doesn't disable peer verification as expected on Snow Leopard or
-  Lion (it works as expected in Mountain Lion). So we now use sysctl()
-  to detect whether or not the user is using Snow Leopard or Lion,
-  and if that's the case, then we now use the deprecated
-  SSLSetEnableCertVerify() function instead to disable peer verification.
+- imap: Corrected spacing of trailing brace
 
-Yang Tse (26 Dec 2012)
-- curl tool: rename hugehelp files to tool_hugehelp
+- [Jiri Hruska brought this change]
 
-- curl tool: renaming hugehelp files to tool_hugehelp
+  imap: Added stricter parsing of tagged command responses
+  
+  Enhanced the parsing of tagged responses which must start with "OK",
+  "NO" or "BAD"
 
-- sockfilt.c: commit b44da5a82a follow-up 2
+- [Jiri Hruska brought this change]
 
-- sockfilt.c: commit b44da5a82a follow-up
+  imap: Simplified command response test in imap_endofresp()
 
-- sockfilt.c: fix some compiler warnings
+- [Jiri Hruska brought this change]
 
-- curl_multi_remove_handle: commit 0aabfd9963 follow-up
+  imap: Corrected comment in imap_endofresp()
 
-Daniel Stenberg (25 Dec 2012)
-- lib556: enable VERBOSE to ease debugging on failures
+- DOCS: Corrected layout of POP3 and IMAP URL examples
+  
+  Corrected layout issues with the POP3 and IMAP URL examples introduced
+  in commit cb3ae6894fb2.
 
-Marc Hoersken (25 Dec 2012)
-- socklift.c: Quick fix to re-add missing code
+- DOCS: Updated CURLOPT_URL section following recent POP3 and IMAP changes
+  
+  Updated the POP3 sub-section to refer to message ID rather than mailbox.
+  
+  Added an IMAP sub-section with example URLs depicting the specification
+  of mailbox, uid and section.
 
-- socklift.c: Added select_ws function to support Windows
+- pop3: Refactored the mailbox variable as it didn't reflect it's purpose
   
-  WinSock select() does not support standard file descriptors,
-  it can only check SOCKETs. The following function is an attempt
-  to create a select() function with support for other handles.
+  Updated the mailbox variable to correctly reflect it's purpose. The
+  name mailbox was a leftover from when IMAP and POP3 support was
+  initially added to curl.
 
-Yang Tse (25 Dec 2012)
-- Enable tests 1503, 1504 and 1505
+- FEATURES: Updated following recent IMAP changes
 
-- curl_multi_remove_handle: fix memory leak triggered with CURLOPT_RESOLVE
+- [Jiri Hruska brought this change]
 
-- Curl_hash_clean: OOM handling fix
+  imap: Added the ability to FETCH a specific UID and SECTION
+  
+  Updated the FETCH command to send the UID and SECTION parsed from the
+  URL. By default the BODY specifier doesn't include a section, BODY[] is
+  now sent whereas BODY[TEXT] was previously sent. In my opinion
+  retrieving just the message text is rarely useful when dealing with
+  emails, as the headers are required for example, so that functionality
+  is not retained. In can however be simulated by adding SECTION=TEXT to
+  the URL.
+  
+  Also updated test801 and test1321 due to the BODY change.
 
-- test 1504 and 1505: same as 1502 but with different cleanup sequences
+- email: Additional tidy up of comments following recent changes
 
-Daniel Stenberg (24 Dec 2012)
-- Curl_conncache_foreach: allow callback to break loop
+- smtp: Removed some FTP heritage leftovers
   
-  ... and have it take a proper 'struct connectdata *' as first argument
+  Removed user and passwd from the SMTP struct as these cannot be set on
+  a per-request basis and are leftover from legacy FTP code.
+  
+  Changed some comments still using FTP terminology.
 
-- pop3_doing: don't call pop3_dophase_done() if already failed
+- smtp: Moved the per-request variables to the per-request data structure
   
-  ... it also clobbered the 'result' return value so that it wouldn't
-  return the error back to the parent function properly, which broke test
-  809 when run with 'multi-always'.
+  Moved the rcpt variable from the per-connection struct smtp_conn to the
+  new per-request struct and fixed references accordingly.
 
-Yang Tse (23 Dec 2012)
-- test 1503: same as 1502 but with a different cleanup sequence
+- pop3: Introduced a custom SMTP structure for per-request data
+  
+  Created a new SMTP structure and changed the type of the smtp proto
+  variable in connectdata from FTP* to SMTP*.
 
-- test 1502: OOM handling fixes
+unknown (23 Feb 2013)
+- [Steve Holme brought this change]
 
-- curl_multi_wait: OOM handling fix
+  imap: Minor correction of comments for max line length
 
-- [Daniel Stenberg brought this change]
+Daniel Stenberg (23 Feb 2013)
+- strcasestr: remove check for this unused function
 
-  curl_multi_wait: avoid an unnecessary memory allocation
+- pop3: fix compiler warning
+  
+  error: declaration of 'pop3' shadows a previous local
 
-- runtests.pl: prepend $srcdir to HTTPTLS server config files path
+Steve Holme (23 Feb 2013)
+- [Jiri Hruska brought this change]
 
-- multi.c: OOM handling fix
+  imap: Added URL parsing of new variables
+  
+  Updated the imap_parse_url_path() function to parse uidvalidity, uid and
+  section parameters based on RFC-5092.
 
-- lib543.c: OOM handling fixes
+- [Jiri Hruska brought this change]
 
-- configure: add internal sanity check (warn only) on vars for makefiles
+  imap: Introduced imap_is_bchar() function
+  
+  Added imap_is_bchar() for testing if a given character is a valid bchar
+  or not.
 
-Daniel Stenberg (21 Dec 2012)
-- SCP: relative path didn't work
+- [Jiri Hruska brought this change]
+
+  imap: Introduced new per-request veriables
   
-  When prefixing a path with /~/ it is supposed to be used relative to the
-  user's home directory but it didn't work. Now we cut off the entire
-  three byte sequenct "/~/" which seems to be how OpenSSH does it.
+  Added uidvalidity, uid and section variables to the per-request IMAP
+  structure in preparation for upcoming URL parsing.
+
+- pingpong: Renamed curl_ftptransfer to curl_pp_transfer
+
+- pop3: Removed some FTP heritage leftovers
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1173
-  Reported by: Balaji Parasuram
+  Removed user and passwd from the POP3 struct as these cannot be set on
+  a per-request basis and are leftover from legacy FTP code.
+  
+  Changed some comments still using FTP terminology.
 
-Yang Tse (21 Dec 2012)
-- configure: LIBMETALINK_CFLAGS actually is LIBMETALINK_CPPFLAGS
+- pop3: Moved the per-request variables to the per-request data structure
+  
+  Moved the mailbox and custom request variables from the per-connection
+  struct pop3_conn to the new per-request struct and fixed references
+  accordingly.
 
-- configure: add minimal sanity check on user provided CFLAGS and CPPFLAGS
+- pop3: Introduced a custom POP3 structure for per-request data
+  
+  Created a new POP3 structure and changed the type of the pop3 proto
+  variable in connectdata from FTP* to POP*.
 
-- bundles connection caching: some out of memory handling fixes
+- [Jiri Hruska brought this change]
 
-- libntlmconnect.c: fix compiler warnings and OOM handling
+  imap: Fixed escaping of mailbox names
+  
+  Used imap_atom() to escape mailbox names in imap_select().
 
-- configure.ac: clear local test intended variables before use
+- pingpong: Moved curl_ftptransfer definition to pingpong.h
+  
+  Moved the ftp transfer structure into pingpong.h so other protocols that
+  require it don't have to include ftp.h.
 
-- VC6 IDE: link with advapi32.lib when using WIN32 crypto API (md5.c)
+- urldata.h: Fixed comment for opt_no_body variable
+  
+  Corrected comment for opt_no_body variable to CURLOPT_NOBODY.
 
-- curl-functions.m4: improve gethostname arg 2 data type check
+- email: Minor tidy up following IMAP changes
 
-- setup_once.h: HP-UX specific 'bool', 'false' and 'true' definitions.
+- [Jiri Hruska brought this change]
+
+  imap: Removed more FTP leftovers
   
-  Also reverts commit f254c59dc7
+  Changed some variables and comments still using FTP terminology.
 
-- configure: check if compiler halts on function prototype mismatch
+- [Jiri Hruska brought this change]
 
-- warnless.c: fix compiler warnings
+  imap: Removed some FTP heritage leftovers
+  
+  Removed user and passwd from the IMAP struct as these cannot be set on
+  a per-request basis and are leftover from legacy FTP code.
 
-- curl-functions.m4: add gethostname arg 2 data type check and definition
+- [Jiri Hruska brought this change]
 
-Daniel Stenberg (14 Dec 2012)
-- [Nick Zitzmann brought this change]
+  imap: Introduced a custom IMAP structure for per-request data
+  
+  Created a new IMAP structure and changed the type of the imap proto
+  variable in connectdata from FTP* to the new IMAP*.
+  
+  Moved the mailbox variable from the per-connection struct imap_conn to
+  the new per-request struct and fixed references accordingly.
 
-  darwinssl: Fix implicit conversion compiler warnings
+- pop3: Updated do phrase clean-up comment
   
-  The Clang compiler found a few implicit conversion problems that have
-  now been fixed.
+  Following commit 65644b833532 for the IMAP module updated the clean-up
+  comment in POP3.
 
-Yang Tse (14 Dec 2012)
-- setup_once.h: HP-UX <sys/socket.h> issue workaround
+- imap: Fixed memory leak when performing multiple selects
   
-  Issue: When building a 32bit target with large file support HP-UX
-  <sys/socket.h> header file may simultaneously provide two different
-  sets of declarations for sendfile and sendpath functions, one with
-  static and another with external linkage. Given that we do not use
-  mentioned functions we really don't care which linkage is the
-  appropriate one, but on the other hand, the double declaration emmits
-  warnings when using the HP-UX compiler and errors when using modern
-  gcc versions resulting in fatal compilation errors.
+  Moved the clean-up of the mailbox variable from imap_disconnect() to
+  imap_done() as this variable is allocated in the do phase, yet would
+  have only been freed only once if multiple selects where preformed
+  on a single connection.
+
+Daniel Stenberg (22 Feb 2013)
+- [Alexander Klauer brought this change]
+
+  Documentation: Typo in docs/CONTRIBUTE
   
-  Mentioned issue is now fixed as long as we don't use sendfile nor
-  sendpath functions.
+  Fixes a typo get → git in docs/CONTRIBUTE.
 
-- setup_once.h: refactor inclusion of <unistd.h> and <sys/socket.h>
+- [Alexander Klauer brought this change]
+
+  repository: ignore patch files generated by git
   
-  Inclusion of top two most included header files now done in setup_once.h
+  Ignores the patch files generated by the 'git format-patch' command.
 
-- setup_once.h: HP-UX specific TRUE and FALSE definitions
+- [Alexander Klauer brought this change]
+
+  libcurl documentation: clarifications and typos
   
-  Some HP-UX system headers require TRUE defined to 1 and FALSE to 0.
+  * Elaborates on default values of some curl_easy_setopt() options.
+  * Reminds the user to cast variadic arguments to curl_easy_setopt() to
+    'void *' where curl internally interprets them as such.
+  * Clarifies the working of the CURLOPT_SEEKFUNCTION option for
+    curl_easy_setopt().
+  * Fixes typo 'forth' → 'fourth'.
+  * Elaborates on CURL_SOCKET_TIMEOUT.
+  * Adds some missing periods.
+  * Notes that the return value of curl_version() must not be passed to
+    free().
 
-Daniel Stenberg (12 Dec 2012)
-- gopher: #include cleanup
+- [Alexander Klauer brought this change]
+
+  lib/url.c: Generic read/write data pointers
   
-  Remove all system file includes from this file as they're not needed
+  Always interprets the pointer passed with the CURLOPT_WRITEDATA or
+  CURLOPT_READDATA options of curl_easy_setopt() as a void pointer in
+  order to avoid problems in environments where FILE and void pointers
+  have non-trivial conversion.
+
+- [Alexander Klauer brought this change]
+
+  libcurl documentation: updates HTML index
   
-  Reported by: Dan Fandrich
+  * Adds several links to documentation of library functions which were
+    missing.
+  * Marks documentation of deprecated library functions "(deprecated)".
+  * Removes spurious .html suffixes.
 
-Yang Tse (11 Dec 2012)
-- examples/simplessl.c: fix compiler warning
+- ossl_seed: avoid recursive seeding!
 
-- examples/externalsocket.c: fix SunPro compilation issue
+Steve Holme (22 Feb 2013)
+- [Jiri Hruska brought this change]
 
-- examples/simplessl.c: fix compiler warning
+  Fixed checking the socket if there is data waiting in the cache
+  
+  Use Curl_pp_moredata() in Curl_pp_multi_statemach() to check if there is
+  more data to be received, rather than the socket state, as a task could
+  hang waiting for more data from the socket itself.
 
-- build: add bundles and conncache files to other build systems
+- imap.c: Fixed an incorrect variable reference
+  
+  Fixed an incorrect variable reference which was introduced in commit
+  a1701eea289f as a result of a copy and paste from SMTP/POP3.
 
-- conncache: fix enumerated type mixed with another type
+- [Jiri Hruska brought this change]
 
-- examples/anyauthput.c: fix Tru64 compilation issue
+  pingpong: Introduce Curl_pp_moredata()
+  
+  A simple function to test whether the PP is not sending and there are
+  still more data in its receiver cache. This will be later utilized to:
+  
+  1) Change Curl_pp_multi_statemach() and Curl_pp_easy_statemach() to
+     not test socket state and just call user's statemach_act() function
+     when there are more data to process, because otherwise the task would
+     just hang, waiting for more data from the socket.
+  
+  2) Allow PP users to read multiple responses by looping as long as there
+     are more data available and current phase is not finished.
+     (Currently needed for correct processing of IMAP SELECT responses.)
 
-Daniel Stenberg (8 Dec 2012)
-- [Colin Watson brought this change]
+Nick Zitzmann (19 Feb 2013)
+- FEATURES: why yes, we do support metalink
+  
+  I just noticed Metalink support wasn't listed as a feature of the tool.
 
-  configure: fix cross pkg-config detection
+- metalink: fix improbable crash parsing metalink filename
   
-  When cross-compiling, CURL_CHECK_PKGCONFIG was checking for the cross
-  pkg-config using ${host}-pkg-config.
+  The this_url pointer wasn't being initialized, so if strdup() would return
+  null when copying the filename in a metalink file, then hilarity would
+  ensue during the cleanup phase. This change was brought to you by clang,
+  which noticed this and raised a warning.
+
+Yang Tse (19 Feb 2013)
+- smtp.c: fix enumerated type mixed with another type
+
+- polarssl threadlock cleanup
+
+Nick Zitzmann (18 Feb 2013)
+- docs: schannel and darwinssl documentation improvements
   
-  The gold standard for doing this correctly is pkg-config's own macro,
-  PKG_PROG_PKG_CONFIG.  However, on the assumption that you have a good
-  reason not to use that directly (reduced dependencies for maintainer
-  builds?), the behaviour of cURL's version should at least match.
-  PKG_PROG_PKG_CONFIG uses AC_PATH_TOOL, which ultimately ends up trying
-  ${host_alias}-pkg-config; this is not quite the same as what cURL does,
-  and may differ because ${host} has been run through config.sub.  For
-  instance, when cross-building to the armhf architecture on Ubuntu,
-  ${host_alias} is arm-linux-gnueabihf while ${host} is
-  arm-unknown-linux-gnueabihf.  This may also have been the cause of the
-  problem reported at http://curl.haxx.se/mail/lib-2012-04/0224.html.
+  Schannel and darwinssl use the certificates built into the
+  OS to do vert verification instead of bundles. darwinssl
+  is thread-safe. Corrected typos in the NSS docs.
+
+Daniel Stenberg (18 Feb 2013)
+- resolver_error: remove wrong error message output
   
-  AC_PATH_TOOL is significantly simpler than cURL's current code, and
-  dates back to well before the current minimum of Autoconf 2.57, so let's
-  use it instead.
+  The attempt to use gai_strerror() or alternative function didn't work as
+  the 'sock_error' field didn't contain the proper error code. But since
+  this hasn't been reported and thus isn't really a big deal I decided to
+  just scrap the whole attempt to output the detailed resolver error and
+  instead remain with just stating that the resolving of the name failed.
 
-- [Linus Nielsen Feltzing brought this change]
+- [Kim Vandry brought this change]
 
-  Introducing a new persistent connection caching system using "bundles".
+  Curl_resolver_is_resolved: show proper host name on failed resolve
+
+- Curl_resolver_is_resolved: fix compiler warning
   
-  A bundle is a list of all persistent connections to the same host.
-  The connection cache consists of a hash of bundles, with the
-  hostname as the key.
-  The benefits may not be obvious, but they are two:
+  conversion to 'int' from 'long int' may alter its value
+
+- compiler warning fix
   
-  1) Faster search for connections to reuse, since the hash
-     lookup only finds connections to the host in question.
-  2) It lays out the groundworks for an upcoming patch,
-     which will introduce multiple HTTP pipelines.
+  follow-up to commit ed7174c6f66, rename 'wait' to 'block'
+
+- compiler warning fix: declaration of 'wait' shadows a global declaration
   
-  This patch also removes the awkward list of "closure handles",
-  which were needed to send QUIT commands to the FTP server
-  when closing a connection.
-  Now we allocate a separate closure handle and use that
-  one to close all connections.
+  It seems older gcc installations (at least) will cause warnings if we
+  name a variable 'wait'. Now changed to 'block' instead.
   
-  This has been tested in a live system for a few weeks, and of
-  course passes the test suite.
+  Reported by: Jiří Hruška
+  Bug: http://curl.haxx.se/mail/lib-2013-02/0247.html
 
-- [Fabian Keil brought this change]
+Nick Zitzmann (17 Feb 2013)
+- MacOSX-Framework: Make script work in Xcode 4.0 and later
+  
+  Apple made a number of changes to Xcode 4. The SDKs were moved, the entire
+  Developer folder was moved, and PowerPC support was removed. The script
+  will now adapt to those changes and should be future-proofed against
+  additional changes in case Apple moves the Developer folder ever again.
+  Also, the minimum OS X version compiler option was removed, so that the
+  framework can be built against the latest SDK but still run in older cats.
 
-  runtests and friends: Do not add undefined values to @INC
+Daniel Stenberg (17 Feb 2013)
+- docs: refer to CURLOPT_ACCEPT_ENCODING instead of the old name
+
+Steve Holme (16 Feb 2013)
+- email: Tidied up result code variables
   
-  On FreeBSD this fixes the warning:
-  Use of uninitialized value $p in string eq at /usr/local/lib/perl5/5.14.2/BSDPAN/BSDPAN.pm line 36.
+  Tidied up result variables to be consistent in name, declaration order
+  and default values.
 
-Steve Holme (5 Dec 2012)
-- Merge pull request #52 from isn-/master
+Nick Zitzmann (16 Feb 2013)
+- ntlm_core: fix compiler warning when building with clang
   
-  small compilation fix
+  Fixed a 64-to-32 compiler warning raised when building with
+  clang and the --with-darwinssl option.
 
-Stanislav Ivochkin (5 Dec 2012)
-- build: fix compilation with CURL_DISABLE_CRYPTO_AUTH flag
+Daniel Stenberg (16 Feb 2013)
+- Guile-curl: a new libcurl binding
 
-Yang Tse (5 Dec 2012)
-- libtest: fix some compiler warnings
+- polarsslthreadlock: #include the proper memory and debug includes
+  
+  Pointed out by Steve Holme
 
-- examples: fix compilation issues - commit 7332a7cafb follow-up
+Steve Holme (16 Feb 2013)
+- email: Removed unnecessary forward declaration
+  
+  Due to the reordering of functions in commit 586f5d361474 the forward
+  declaration to state_upgrade_tls() are no longer required.
 
-- examples: fix compilation issues - commit 23f8dca6fb follow-up
+- pop3.c: Added reference to RFC-5034
 
-- examples: fix compilation issues
+Daniel Stenberg (15 Feb 2013)
+- [Willem Sparreboom brought this change]
 
-- build: explain current role of LIBS in our Makefile.am files
+  PolarSSL: Change to cURL coding style
   
-  BLANK_AT_MAKETIME may be used in our Makefile.am files to blank
-  LIBS variable used in generated makefile at makefile processing
-  time. Doing this functionally prevents LIBS from being used for
-  all link targets in given makefile.
+  Repaired all curl/lib/checksrc.pl warnings in the previous four patches
 
-Daniel Stenberg (4 Dec 2012)
-- multi: fix re-sending request on early connection close
+- [Willem Sparreboom brought this change]
+
+  PolarSSL: WIN32 threading support for entropy
   
-  This handling already works with the easy-interface code. When a request
-  is sent on a re-used connection that gets closed by the server at the
-  same time as the request is sent, the situation may occur so that we can
-  send the request and we discover the broken connection as a RECV_ERROR
-  in the PERFORM state and then the request needs to be retried on a fresh
-  connection. Test 64 broke with 'multi-always-internally'.
+  Added WIN32 threading support for PolarSSL entropy if
+  --enable-threaded-resolver config flag is set and process.h can be found.
 
-Yang Tse (4 Dec 2012)
-- configure: add minimal sanity check on user provided LIBS and LDFLAGS
+- [Willem Sparreboom brought this change]
 
-- build: prevent global LIBS from influencing src and lib build targets
+  PolarSSL: pthread support for entropy
   
-  Currently, LIBS is already used through other macros.
+  Added pthread support for polarssl entropy if --enable-threaded-resolver
+  config flag is set and pthread.h can be found.
 
-Kamil Dudka (3 Dec 2012)
-- nss: prevent NSS from crashing on client auth hook failure
+- [Willem Sparreboom brought this change]
+
+  PolarSSL: changes to entropy/ctr_drbg/HAVEGE_RANDOM
   
-  Although it is not explicitly stated in the documentation, NSS uses
-  *pRetCert and *pRetKey even if the client authentication hook returns
-  a failure.  Namely, if we destroy *pRetCert without clearing *pRetCert
-  afterwards, NSS destroys the certificate once again, which causes a
-  double free.
+  Add non-threaded entropy and ctr_drbg and removed HAVEGE_RANDOM define
+
+- [Willem Sparreboom brought this change]
+
+  PolarSSL: added human readable error strings
   
-  Reported by: Bob Relyea
+  Print out human readable error strings for PolarSSL related errors
 
-Yang Tse (30 Nov 2012)
-- testcurl.pl: build example programs for several autobuilds
+Steve Holme (15 Feb 2013)
+- pop3: Removed unnecessary state changes on failure
+
+- imap: Removed unnecessary state change on failure
+
+Daniel Stenberg (15 Feb 2013)
+- metalink_cleanup: yet another follow-up fix
+
+- metalink_cleanup: define it without argument
   
-  Affected autobuilds: IRIX, AIX, Tru64 and AIX.
+  Since the function takes no argument, the macro shouldn't take one as
+  some compilers will error out on that.
 
-- build: prevent global LIBS from influencing examples build targets
+- rename "easy" statemachines: call them block instead
+  
+  ... since they're not used by the easy interface really, I wanted to
+  remove the association. Also, I unified the pingpong statemachine driver
+  into a single function with a 'wait' argument: Curl_pp_statemach.
 
-- build: prevent global LIBS from influencing libtest build targets
+Yang Tse (15 Feb 2013)
+- [Gisle Vanem brought this change]
 
-- build: prevent global LIBS from influencing test server build targets
+  curl_setup_once.h: definition of HAVE_CLOSE_S defines sclose() to close_s()
 
-- build: fix Windows build targets damaged since commit 550e403f00
+- [Gisle Vanem brought this change]
 
-- build: avoid linkage of directly unused libraries
+  config-dos.h: define HAVE_CLOSE_S for MSDOS/Watt-32
 
-- dd missing NTLM feature for tests 2025, and 2028 to 2032
+- [Gisle Vanem brought this change]
 
-- avoid mixing of enumerated type with another type
+  config-dos.h: define strerror() to strerror_s_() for High-C
 
-- multi.c: disambiguate precedence of bitwise and relational operation
+- [Gisle Vanem brought this change]
 
-Daniel Stenberg (26 Nov 2012)
-- [Fabian Keil brought this change]
+  config-dos.h: define HAVE_TERMIOS_H only for djgpp
 
-  Remove stray CRLF in chunk-encoded content-free request bodies
+Steve Holme (14 Feb 2013)
+- smtp.c: Fixed a trailing whitespace
   
-  .. that are sent when auth-negotiating before a chunked
-  upload or when setting the 'Transfer-Encoding: chunked'
-  header and intentionally sending no content.
+  Remove tailing whitespace introduced in commit 7ed689d24a4e.
+
+- pop3: Fixed blocking SSL connect when connecting via POP3S
   
-  Adjust test565 and test1333 accordingly.
+  A call to Curl_ssl_connect() was accidentally left in when the SSL/TLS
+  connection layer was reworked in 7.29. Not only would this cause the
+  connection to block but had the additional overhead of calling the
+  non-blocking connect a little bit later.
 
-- FAQ: clarify the 3.4 section
+- smtp: Refactored the smtp_state_auth_resp() function
   
-  You can do custom commands to FTP without sending anything by using the
-  CURLOPT_NOBODY, which -I sets.
+  Renamed smtp_state_auth_resp() function to match the implementations in
+  IMAP and POP3.
 
-- [Lijo Antony brought this change]
+Daniel Stenberg (14 Feb 2013)
+- remove ifdefs
+  
+  Clarify the code by reducing ifdefs
 
-  examples: Updated asiohiper.cpp to remove connect from opensocket
+- strlcat: remove function
   
-  Blocking connect on the socket has been removed from opensocket
-  callback. opensocket just opens a new socket and gives it back to
-  libcurl and libcurl will take care of the connect. sockopt_callback has
-  also been removed, as it is no longer required.
+  This function was only used twice, both in places where performance
+  isn't crucial (socks + if2ip). Removing the use of this function removes
+  the need to have our private version for systems without it == reduced
+  amount of code.
+  
+  Also, in the SOCKS case it is clearly better to fail gracefully rather
+  than to truncate the results.
+  
+  This work was triggered by a bug report on the strcal prototype in
+  strequal.h.
+  
+  strlcat was added in commit db70cd28 in February 2001!
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1192
+  Reported by: Jeremy Huddleston
 
-Yang Tse (23 Nov 2012)
-- build: fix AIX compilation and usage
+- Curl_FormBoundary: made static
   
-  AIX sys/poll.h header file defines 'events' and 'revents' as C
-  preprocessor macros. Usage of these literals in libcurl's external
-  API was introduced in commit de24d7bd4c causing AIX build failures.
-  Appropriate inclusion of sys/poll.h by libcurl's external interface
-  fixes AIX build and usage issues while avoiding a SONAME bump.
+  As Curl_FormBoundary() is no longer used outside of this file (since
+  commit ad7291c1a9d), it is now renamed to formboundary() and is made
+  static.
 
-Steve Holme (23 Nov 2012)
-- DOCS: Updated CURLOPT_CONNECT_ONLY to reflect usage in other protocols
+- ossl_seed: fix the last resort PRNG seeding
+  
+  Instead of just abusing the pseudo-randomizer from Curl_FormBoundary(),
+  this now uses Curl_ossl_random() to get entropy.
 
-Daniel Stenberg (23 Nov 2012)
-- test: offer "automake" output and check for perl better
+Steve Holme (13 Feb 2013)
+- email: Tidy up before additional IMAP work
   
-  runtests.pl -am now uses the "PASS/FAIL: [desc]" output for each
-  executed test. You can run 'make test-am' in the root build directory to
-  invoke that. The reason for this output style is to better allow generic
-  test suite parsers to also grok our test output.
+  Replaced two explicit comparisons of CURLE_OK with boolean alternatives.
   
-  The test Makefile now also tests that perl was indeed found and that the
-  PERL variable points to an executable before it tries to run the main
-  test perl script runtests.pl,
-
-- [Fabian Keil brought this change]
+  General tidy up of comments.
 
-  Test 206: Use a Content-Length header for the 407 response
+- smtp: Removed duplicate pingpong structure initialisation
   
-  Otherwise curl would have to guess where the body ends.
+  The smtp_connect() function was setting the member variables of the
+  pingpong structure twice, once before calling Curl_pp_init() and once
+  after!
 
-- [Fabian Keil brought this change]
+Yang Tse (13 Feb 2013)
+- move msvc IDE related files to 'vs' directory tree
+  
+  Use 'vs' directory tree given that 'vc' intended one clashes
+  with an already existing build target in file Makefile.dist.
 
-  Test 206: Don't respond to a succesful CONNECT request with a body
+Daniel Stenberg (13 Feb 2013)
+- install-sh: updated to support multiple source files as arguments
   
-  It's against the spec and caused test failures when header
-  and response were read from the network separately in which
-  case bug #39 wasn't triggered.
+  Version 7.29.0 uses Makefiles generated with a newer version of the
+  autotools than the previous 7.28.1. These Makefiles try to install
+  e.g. header files by calling install-sh with multiple source files as
+  arguments. The bundled install-sh is to old and does not support this.
+  
+  The problem only occurs, if install-sh is actually being used, ie. the
+  platform install executable is to old or not usable. Example: Solaris
+  10.
+  
+  The files install-sh and mkinstalldirs are now updated with the automake
+  1.11.3 versions. A better fix might be to completely remove them from
+  git and force the files to be added/created during buildconf.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1195
+  Reported by: Rainer Jung
 
-- htmltitle: use .cpp extension for C++ examples
+Yang Tse (13 Feb 2013)
+- move msvc IDE related files to 'vc' directory tree
 
-- [Lijo Antony brought this change]
+- msvc IDE 'vc' directory tree preparation
 
-  examples: Added a c++ example of using multi with boost::asio
+Steve Holme (12 Feb 2013)
+- imap: Corrected a whitespace issue from previous commit
   
-  Added an example for demonstrating the usage of curl multi interface
-  with boost::asio in c++
+  Fixed a small whitespace issue that crept in there in commit
+  508cdf4da4d7.
 
-- VC Makefiles: add missing hostcheck
+- email: Another post optimisation of endofresp() tidy up
+
+- sasl: Fixed null pointer reference when decoding empty digest challenge
   
-  the newly introduced hostcheck.h/c is missing in the Visual Studio
-  Makefiles as obj file.
+  Fixed a null pointer reference when an empty challenge is passed to the
+  Curl_sasl_create_digest_md5_message() function.
   
-  Bug: http://curl.haxx.se/mail/lib-2012-11/0176.html
+  Bug: http://sourceforge.net/p/curl/bugs/1193/
+  Reported by: Saran Neti
 
-- compiler warning fixes
+- email: Post optimisation of endofresp() tidy up
   
-  The conversions from ssize_t to int need to be typecasted.
+  Removed unnecessary end of line check and return.
 
-- bump: start working on 7.28.2
-
-- THANKS: added 14 contributors from the 7.28.1 release
+Nick Zitzmann (12 Feb 2013)
+- darwinssl: Fix send glitchiness with data > 32 or so KB
+  
+  An ambiguity in the SSLWrite() documentation lead to a bad inference in the
+  code where we assumed SSLWrite() returned the amount of bytes written to
+  the socket, when that is not actually true; it returns the amount of data
+  that is buffered for writing to the socket if it returns errSSLWouldBlock.
+  Now darwinssl_send() returns CURLE_AGAIN if data is buffered but not written.
+  
+  Reference URL: http://curl.haxx.se/mail/lib-2013-02/0145.html
 
-Version 7.28.1 (20 Nov 2012)
+Steve Holme (12 Feb 2013)
+- pingpong.h: Fixed line length over 78 characters from b56c9eb48e3c
 
-Daniel Stenberg (20 Nov 2012)
-- RELEASE-NOTES: synced with 52af6e69f079 / 7.28.1
+- pingpong: Optimised the endofresp() function
+  
+  Reworked the pp->endofresp() function so that the conndata, line and
+  line length are passed down to it just as with Curl_client_write()
+  rather than each implementation of the function having to query
+  these values.
+  
+  Additionally changed the int return type to bool as this is more
+  representative of the function's usage.
 
-Kamil Dudka (20 Nov 2012)
-- [Anthony Bryan brought this change]
+- email: Post STARTLS capability code tidy up (Part Three)
+  
+  Corrected the order of the upgrade_tls() functions and moved the handler
+  upgrade and getsock() functions out from the middle of the state related
+  functions.
 
-  RELEASE-NOTES: NSS can be used for metalink hashing
+- email: Post STARTLS capability code tidy up (Part Two)
+  
+  Corrected the order of the pop3_state_capa() / imap_state_capability()
+  and the pop3_state_capa_resp() / imap_state_capability_resp() functions
+  to match the execution order.
 
-- [Fabian Keil brought this change]
+Daniel Stenberg (11 Feb 2013)
+- [ulion brought this change]
 
-  Get test 2032 working when using valgrind
+  SOCKS: fix socks proxy when noproxy matched
   
-  If curl_multi_fdset() sets maxfd to -1, the socket detection
-  loop is skipped and thus !found_new_socket is no cause for alarm.
-
-- test2032: spurious failure caused by premature termination
+  Test 1212 added to verify
   
-  Bug: http://curl.haxx.se/mail/lib-2012-11/0095.html
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1190
 
-Daniel Stenberg (19 Nov 2012)
-- [Fabian Keil brought this change]
+Steve Holme (11 Feb 2013)
+- ntlm: Updated comments for the addition of SASL support to IMAP in v7.29
 
-  Fix comment typos in test 517
+- RELEASE-NOTES: Updated following the recent imap/pop3/smtp changes
 
-- [Fabian Keil brought this change]
+Linus Nielsen Feltzing (10 Feb 2013)
+- Fix NULL pointer reference when closing an unused multi handle.
 
-  Test 92 and 194: normalize spaces in the Server headers
+Steve Holme (10 Feb 2013)
+- email: Post STARTLS capability code tidy up (Part One)
   
-  It makes no difference from curl's point of view but
-  makes it more convenient to use the tests with a
-  lws-normalizing proxy between curl and the test server.
+  Corrected the order of the CAPA / CAPABILITY state machine constants to
+  match the execution order.
 
-- [Fabian Keil brought this change]
+- imap: Fixed memory leak following commit f6010d9a0359
 
-  Add a HOSTIP precheck for tests 31 and 1105
+- smtp: Added support for the STARTTLS capability (Part Two)
   
-  They currently only work for 127.0.0.1 which
-  is hardcoded and can't be easily changed.
+  Added honoring of the tls_supported flag when starting a TLS upgrade
+  rather than unconditionally attempting it. If the use_ssl flag is set
+  to CURLUSESSL_TRY and the server doesn't support TLS upgrades then the
+  connection will continue to authenticate. If this flag is set to
+  CURLUSESSL_ALL then the connection will complete with a failure as it
+  did previously.
 
-- [Fabian Keil brought this change]
+- pop3: Added support for the STLS capability (Part Three)
+  
+  Added honoring of the tls_supported flag when starting a TLS upgrade
+  rather than unconditionally attempting it. If the use_ssl flag is set
+  to CURLUSESSL_TRY and the server doesn't support TLS upgrades then the
+  connection will continue to authenticate. If this flag is set to
+  CURLUSESSL_ALL then the connection will complete with a failure as it
+  did previously.
 
-  Let test 8 work as long as %HOSTIP ends with ".0.0.1"
+- imap: Added support for the STARTTLS capability (Part Three)
   
-  .. and add a precheck to skip the test otherwise.
+  Added honoring of the tls_supported flag when starting a TLS upgrade
+  rather than unconditionally attempting it. If the use_ssl flag is set
+  to CURLUSESSL_TRY and the server doesn't support TLS upgrades then the
+  connection will continue to authenticate. If this flag is set to
+  CURLUSESSL_ALL then the connection will complete with a failure as it
+  did previously.
 
-- [Fabian Keil brought this change]
+Daniel Stenberg (10 Feb 2013)
+- [Alessandro Ghedini brought this change]
 
-  Add --resolve to the keywords and name of test 1318
-  
-  This makes it easier to skip it automatically when
-  the test suite is used with external proxies.
+  htmltitle: fix suggested build command
 
-- [Fabian Keil brought this change]
+Steve Holme (10 Feb 2013)
+- pop3: Added support for the STLS capability (Part Two)
+  
+  Added sending of initial CAPA command before STLS is sent. This allows
+  for the detection of the capability before trying to upgrade the
+  connection.
 
-  Add FTP keywords for a couple of currently keyword-less FTP tests
+- imap: Added support for the STARTTLS capability (Part Two)
+  
+  Added sending of initial CAPABILITY command before STARTTLS is sent.
+  This allows for the detection of the capability before trying to
+  upgrade the connection.
 
-- [Fabian Keil brought this change]
+- smtp: Added support for the STLS capability (Part One)
+  
+  Introduced detection of the STARTTLS capability, in order to add support
+  for TLS upgrades without unconditionally sending the STARTTLS command.
 
-  Add keywords for a couple of currently keyword-less HTTP tests
+- pop3: Added support for the STLS capability (Part One)
+  
+  Introduced detection of the STLS capability, in order to add support
+  for TLS upgrades without unconditionally sending the STLS command.
 
-- [Fabian Keil brought this change]
+- imap: Added support for the STARTTLS capability (Part One)
+  
+  Introduced detection of the STARTTLS capability, in order to add support
+  for TLS upgrades without unconditionally sending the STARTTLS command.
 
-  Use carriage returns in all headers in test 31
+- RELEASE-NOTES: synced with 92f7606f29b704
+
+- smtp: Fixed an issue when processing EHLO failure responses (Part 3)
   
-  Trailing spaces were left unmodifed, assuming they were intentional.
+  Follow up fix to commit 62bd21746443 to cater for servers that don't
+  respond with a 250 in their EHLO responses. Additionally updated the
+  SMTP tests to respond with a 250 response code as per RFC5321.
 
-- [Fabian Keil brought this change]
+- pop3: Fixed SASL authentication capability detection
+  
+  Fixed the SASL capability detection to include the space character
+  before the authentication mechanism list. Otherwise a capability such
+  as SASLSOMETHING would be interpreted as enabling SASL and potentially
+  trying to identify SOMETHING as a mechanism.
 
-  Do not mix CRLF and LF header endings in a couple of HTTP tests
+- pop3: Fixed incorrect return value from pop3_endofresp()
   
-  Consistently use CRLF instead. The mixed endings weren't
-  documented so I assume they were unintentional.
+  Corrected an incorrect return value when -ERR is received from the
+  server - introduced in commit b5bb61ee697b (June 2012).
+
+- smtp: Fixed an issue when processing EHLO failure responses (Part 2)
   
-  This change doesn't matter for curl itself but makes using
-  the tests with a proxy between curl and the test server
-  more convenient.
+  Follow up fix to commit 23d17190ee32 as EHLO capabilities can exist
+  within a positive response line.
+
+- smtp: Fixed an issue with missing capabilities after the AUTH line
   
-  Tests that consistently use no carriage returns were
-  left unmodified as one can easily work around this.
+  Follow up to commit 40f9bb787f05 to fix missing capabilities after an
+  AUTH line.
 
-- fixed memory leak: CURLOPT_RESOLVE with multi interface
+Nick Zitzmann (8 Feb 2013)
+- darwinssl: Make certificate errors less techy
   
-  DNS cache entries populated with CURLOPT_RESOLVE were not properly freed
-  again when done using the multi interface.
+  Previously if a problem was found with one of the server's certificates,
+  we'd log an OSStatus for the end user to look up. Now we explain what
+  was wrong with the site's certificate chain. Also un-did part of the
+  previous commit where the code wouldn't catch errSSLServerAuthCompleted
+  if built under Leopard.
+
+Guenter Knauf (9 Feb 2013)
+- Updated dependency libs.
+
+Steve Holme (9 Feb 2013)
+- imap: Corrected some comments
+
+- smtp: Fixed an issue when processing EHLO failure responses
   
-  Test case 1502 added to verify.
+  Fixed a small issue where smtp_endofresp() would look for capabilities
+  in the description part of a failure response. In theory a server
+  shouldn't respond with SIZE or AUTH in an EHLO command's failure
+  response but if it did then capabilities would be unnecessarily set
+  before eventually failing.
+
+- pop3: Reworked pop3_endofresp() to simplify it little
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3575448
-  Reported by: Alex Gruz
+  Reworked pop3_endofresp() to simplify it and provide consistency between
+  imap and smtp.
 
-- RELEASE-NOTES: synced with ee588fe08807778
+- imap: Renamed state variables in imap_authenticate()
   
-  4 more bug fixes and 4 more contributors
+  Renamed the authstate1 and authstate2 variables in imap_authenticate()
+  as the old name was a left over from when there was only one state
+  variable which was named due to a clash with the state() function.
+  
+  Additionally this provides consistency with the smtp module.
 
-- mem-include-scan: verify memory #includes
+- smtp: Reworked smtp_endofresp() to allow for extra capability detection
+
+- smtp: Renamed smtp_state_auth_passwd_resp() function
   
-  If we use memory functions (malloc, free, strdup etc) in C sources in
-  libcurl and we fail to include curl_memory.h or memdebug.h we either
-  fail to properly support user-provided memory callbacks or the memory
-  leak system of the test suite fails.
+  Renamed the login password response function to better describe it's
+  purpose as well as for consistency with the imap and pop3 modules.
+
+Daniel Stenberg (8 Feb 2013)
+- [Gisle Vanem brought this change]
+
+  ntlm: fix memory leak
   
-  After Ajit's report of a failure in the first category in http_proxy.c,
-  I spotted a few in the second category as well. These problems are now
-  tested for by test 1132 which runs a perl program that scans for and
-  attempts to check that we use the correct include files if a memory
-  related function is used in the source code.
+  Running tests\libtest\libntlmconnect.exe reveals a 1 byte (!) leak in
+  ./lib/curl_ntlm_msgs.c:
   
-  Reported by: Ajit Dhumale
-  Bug: http://curl.haxx.se/mail/lib-2012-11/0125.html
+  perl ..\memanalyze.pl c:memdebug.curl
+  Leak detected: memory still allocated: 1 bytes
+  At 9771e8, there's 1 bytes.
+  allocated by curl_ntlm_msgs.c:399
+  
+  Snippet from curl_ntlm_msgs.c:
+     /* setup ntlm identity's domain and length */
+     dup_domain.tchar_ptr = malloc(sizeof(TCHAR) * (domlen + 1));
+  
+  (my domlen == 0).
+  
+  'dup_domain.tbyte_ptr' looks to be freed in Curl_ntlm_sspi_cleanup() via
+  'ntlm->identity.Domain'. But I see no freeing of 'dup_domain.tchar_ptr'.
 
-- tftp_rx: code style cleanup
+- DONE: consider callback-aborted transfers premature
   
-  Fixed checksrc warnings
+  This bug report properly identified that when doing SMTP and aborting
+  the transfer with a callback, it must be considered aborted prematurely
+  by the code to avoid QUIT etc to be attempted as that would cause a
+  hang.
+  
+  The new test case 1507 verifies this behavior.
+  
+  Reported by: Patricia Muscalu
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1184
 
-- [Fabian Keil brought this change]
+- FAQ: refreshed some phrases
 
-  Fix the libauthretry changes from 7c0cbcf2f61
+Nick Zitzmann (7 Feb 2013)
+- darwinssl: Fix build under Leopard
   
-  They broke the NTLM tests from 2023 to 2031.
+  It turns out that Leopard (OS X 10.5) doesn't have constants for the ECDH
+  ciphers in its headers, so the cases for them have been taken out of the
+  build when building under Leopard. Also added a standard function for
+  getting a string description of a SecCertificateRef.
 
-- [Christian Vogt brought this change]
+Steve Holme (7 Feb 2013)
+- RELEASE-NOTES: Added new imap features
 
-  tftp_rx: handle resends
+- imap: Added support for SASL-IR extension (Part 2)
   
-  Re-send ACK for block X in case we receive block X data again while
-  waiting for block X+1.
+  Modified imap_authenticate() to add support for sending the initial
+  response with the AUTHENTICATE command, as per RFC4959.
+
+- smtp: Updated SMTP_AUTH_PASSWD state constant
   
-  Based on an earlier patch by Marcin Adamski.
+  Changed the SMTP_AUTH_PASSWD state constant to SMTP_AUTH_LOGIN_PASSWD to
+  better describe the state as the second part of an AUTH LOGIN command,
+  as well as for consistency with the imap and pop3 modules.
 
-- autoconf: don't force-disable compiler debug option
+- imap: Added support for SASL-IR extension (Part 1)
   
-  When nothing is told to configure, we should not enforce switching off
-  debug options with -g0 (or similar). We instead don't use -g at all in
-  that situaion and therefore allow the user's CFLAGS settings possibly
-  dictate what to do.
+  Introduced detection of the SASL-IR capability, in order to add support
+  for sending the initial response with the AUTHENTICATE command, as per
+  RFC4959.
 
-- [Mark Snelling brought this change]
+Daniel Stenberg (7 Feb 2013)
+- Revert "vc: remove explicit MSVC6 IDE project file and documentation"
+  
+  This reverts commit 0e66d5878edc3d7ffc445116d194b58bbc7504b9.
 
-  winbuild: Fix PDB file output
+Steve Holme (7 Feb 2013)
+- imap: Changed response tag generation to be completely unique
   
-  And fix some newlines to be proper CRLF
+  Updated the automatic response tag generation to follow the examples
+  given in RC3501, which list a 4 character string such as A001, A002,
+  etc.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3586741
+  As a unique identifier should be generated for each command the string
+  generation is based on the connection id and the incrementing command
+  id.
 
-- RELEASE-NOTES: synced with fa1ae0abcde
+Dan Fandrich (6 Feb 2013)
+- Tweak the Android.mk file for its new location
+  
+  This is untested, but ought to be enough to still allow it
+  to work automatically when the entire curl source tree is
+  dropped into a full Android source tree.
 
-- [Cristian Rodríguez brought this change]
+Daniel Stenberg (6 Feb 2013)
+- vc: remove explicit MSVC6 IDE project file and documentation
+  
+  VC6 is _very_ old and we provide working makefiles even for that
+  compiler. Users who build with the IDE never use that method and project
+  file anyway and it was just lingering in the root dir.
 
-  OpenSSL: Disable SSL/TLS compression
+Steve Holme (6 Feb 2013)
+- imap: Small variable rename in preparation for upcoming change
   
-  It either causes increased memory usage or exposes users
-  to the "CRIME attack" (CVE-2012-4929)
+  Renamed a couple of variables and updated some comments in
+  preparation for upcoming command id / response tag change.
 
-- [Sebastian Rasmussen brought this change]
+Daniel Stenberg (6 Feb 2013)
+- msvc: move Makefile.msvc.names into winbuild/
+  
+  In an attempt to clear up misc files from the root dir
 
-  FILE: Make upload-writes unbuffered by not using FILE streams
+- build: move Android.mk to packages/Android/
 
-Kamil Dudka (13 Nov 2012)
-- tool_metalink: fix error detection of hash alg initialization
+- emacs files: remove from git and dist
   
-  The {MD5,SHA1,SHA256}_Init functions from OpenSSL are called directly
-  without any wrappers and they return 1 for success, 0 otherwise.  Hence,
-  we have to use the same approach in all the wrapper functions that are
-  used for the other crypto libraries.
+  We don't need them and I doubt many people used them. We also don't have
+  any configs for other editors and we wouldn't want that.
+
+Steve Holme (6 Feb 2013)
+- email: Moved starttls code in separate functions
   
-  This commit fixes a regression introduced in commit dca8ae5f.
+  To help maintain the readability of the code in imap.c, pop3.c and
+  smtp.c moved the starttls code into state_starttls() functions.
 
-Daniel Stenberg (13 Nov 2012)
-- RELEASE-NOTES: synced with 7c0cbcf2f617b
+- [Nick Zitzmann brought this change]
 
-- [Sergei Nikulov brought this change]
+  FEATURES: More NTLM and SSL changes, added two others, fixed typo
+  
+  Added IDN and HTTP data compression as they were left out of the
+  document until now.
+  
+  Added notes for qssl, schannel and Secure Transport supporting SSLv2,
+  Secure Transport supports NTLM, and axTLS does not support SSLv3.
+  
+  There was also a typo; "AUTH TSL" should be "AUTH TLS".
 
-  fixed Visual Studio 2010 compilation
+Kamil Dudka (6 Feb 2013)
+- curl-config.in: do not randomly mix tabs and spaces
 
-- [Anton Malov brought this change]
+Daniel Stenberg (6 Feb 2013)
+- 7.29.1: onwards!
 
-  ftp: EPSV-disable fix over SOCKS
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3586338
+- THANKS: 12 contributors from 7.29.0
 
-Patrick Monnerat (12 Nov 2012)
-- Merge branch 'master' of github.com:bagder/curl
+Version 7.29.0 (6 Feb 2013)
 
-- OS400: upgrade wrappers for the 7.28.1 release.
+Daniel Stenberg (6 Feb 2013)
+- vms: config-vms.h is removed, no use trying to distribute it
 
-Daniel Stenberg (12 Nov 2012)
-- runtests: limit execessive logging/output
+- RELEASE-NOTES: mention the SASL buffer overflow
 
-- [Gabriel Sjoberg brought this change]
+- [Eldar Zaitov brought this change]
 
-  Digst: Add microseconds into nounce calculation
+  Curl_sasl_create_digest_md5_message: fix buffer overflow
   
-  When using only 1 second precision, curl doesn't create new cnonce
-  values quickly enough for all uses.
+  When negotiating SASL DIGEST-MD5 authentication, the function
+  Curl_sasl_create_digest_md5_message() uses the data provided from the
+  server without doing the proper length checks and that data is then
+  appended to a local fixed-size buffer on the stack.
   
-  For example, issuing the following command multiple times to a recent
-  Tomcat causes authentication failures:
+  This vulnerability can be exploited by someone who is in control of a
+  server that a libcurl based program is accessing with POP3, SMTP or
+  IMAP. For applications that accept user provided URLs, it is also
+  thinkable that a malicious user would feed an application with a URL to
+  a server hosting code targetting this flaw.
   
-  curl --digest -utest:test http://tomcat.test.com:8080/manager/list
+  Bug: http://curl.haxx.se/docs/adv_20130206.html
+
+Steve Holme (6 Feb 2013)
+- FEATURES: Removed erroneous whitespace
   
-  This is because curl uses the same cnonce for several seconds, but
-  doesn't increment the nonce counter.  Tomcat correctly interprets
-  this as a replay attack and rejects the request.
+  Removed whitespace introduced in commit 5f8f20f5e65b that caused
+  formatting issues when generating the website docs.
+
+Yang Tse (6 Feb 2013)
+- setup-vms.h: post VMS patch cleanup - III
   
-  When microsecond-precision is available, this commit causes curl to
-  change cnonce values much more frequently.
+  - rename post-config-vms.h to setup-vms.h
+  - move its inclusion into proper location in curl_setup.h
+
+- vms_show: post VMS patch cleanup - II
   
-  With microsecond resolution, increasing the nounce length used in the
-  headers to 32 was made to further reduce the risk of duplication.
+  - remove multiple declarations of vms_show and add comments
 
-- SCP/SFTP: improve error code used for send failures
+- tool_main.c: post VMS patch cleanup - I
   
-  Instead of relying on the generic CURLE error for SCP or SFTP send
-  failures, try passing back a more suitable error if possible.
+  - remove header inclusion already done in curl_setup_once.h
 
-- Curl_write: remove unneeded typecast
+Steve Holme (6 Feb 2013)
+- FEATURES: Added SSPI to list of NTLM libraries
 
-Kamil Dudka (9 Nov 2012)
-- tool_metalink: allow to use hash algorithms provided by NSS
-  
-  Fixes bug #3578163:
-  http://sourceforge.net/tracker/?func=detail&atid=100976&aid=3578163&group_id=976
+- FEATURES: Added Secure Transport and qssl to list of SSL libraries
 
-- tool_metalink: allow to handle failure of hash alg initialization
+- FEATURES: Added email feature set
+  
+  Added SMTP, SMTPS, POP3, POP3S, IMAP and IMAPS features.
 
-- tool_metalink: introduce metalink_cleanup() in the internal API
+- imap.h: Corrected incorrect comment clarification
   
-  ... to release resources allocated at global scope
+  Corrected comment clarification made in commit 167717b8069a.
 
-Daniel Stenberg (8 Nov 2012)
-- hostcheck: only build for the actual users
+- COPYING: Updated copyright year to include 2013
+
+Daniel Stenberg (5 Feb 2013)
+- RELEASE-NOTES: synced with 25f351424b3538
   
-  and make local function static
+  8 more bug fixes mentioned
 
-- [Oscar Koeroo brought this change]
+- [John E. Malmberg brought this change]
 
-  SSL: Several SSL-backend related fixes
+  VMS: fix and generate the VMS build config
   
-  axTLS:
+  config_h.com is a new file that generates a config.h file based on the
+  curl_config.h.in file and a quick scan of the configure script.  This is
+  actually a generic procedure that is shared with other VMS packages.
   
-  This will make the axTLS backend perform the RFC2818 checks, honoring
-  the VERIFYHOST setting similar to the OpenSSL backend.
+  The existing pre-built config-vms.h had over 100 entries that were not
+  correct and in some cases conflicted with the build options available in
+  the build_vms.com.
   
-  Generic for OpenSSL and axTLS:
+  generate_config_vms_h_curl.com is a helper procedure to the
+  config_h.com.  It covers the cases that the generic config_h.com is not
+  able to figure out, and accepts input from the build_vms.com procedure.
   
-  Move the hostcheck and cert_hostcheck functions from the lib/ssluse.c
-  files to make them genericly available for both the OpenSSL, axTLS and
-  other SSL backends. They are now in the new lib/hostcheck.c file.
+  build_curlbuild_h.com is a new file to generate the curlbuild.h file
+  that Curl is now using when it is using a curl_config.h file.
   
-  CyaSSL:
+  post-config-vms.h is a new file that is needed to provide VMS specific
+  definitions, and most of them need to be set before the system header
+  files are included.
   
-  CyaSSL now also has the RFC2818 checks enabled by default. There is a
-  limitation that the verifyhost can not be enabled exclusively on the
-  Subject CN field comparison. This SSL backend will thus behave like the
-  NSS and the GnuTLS (meaning: RFC2818 ok, or bust). In other words:
-  setting verifyhost to 0 or 1 will disable the Subject Alt Names checks
-  too.
+  The VMS build procedure is fixed:
   
-  Schannel:
+     1. Fixed to link in the correct HP ssl library.
+     2. Fixed to detect if HP Kerberos is installed.
+     3. Fixed to detect if HP LDAP is installed.
+     4. Fixed to detect if gnv$libzshr is installed.
+     5. Simplified the input parameter parsing to not use a loop.
+     6. Warn that 64 bit pointer option support is not complete
+        in comments.
+     7. Default to IEEE floating if platform supports it so
+        resulting libcurl will be compatible with other
+        open source projects on VMS.
+     8. Default to LARGEFILE if platform supports it.
+     9. Default to enable SSL, LDAP, Kerberos, libz
+        if the libraries are present.
+     10. Build with exact case global symbols for libcurl.
+     11. Generate linker option file needed.
+     12. Compiler list option only commonly needed items.
+     13. fulllist option for those who really want it.
+     14. Create debug symbol file on Alpha, IA64.
+
+- Curl_proxyCONNECT: return once CONNECT is sent
   
-  Updated the schannel information messages: Split the IP address usage
-  message from the verifyhost setting and changed the message about
-  disabling SNI (Server Name Indication, used in HTTP virtual hosting)
-  into a message stating that the Subject Alternative Names checks are
-  being disabled when verifyhost is set to 0 or 1. As a side effect of
-  switching off the RFC2818 related servername checks with
-  SCH_CRED_NO_SERVERNAME_CHECK
-  (http://msdn.microsoft.com/en-us/library/aa923430.aspx) the SNI feature
-  is being disabled. This effect is not documented in MSDN, but Wireshark
-  output clearly shows the effect (details on the libcurl maillist).
-  
-  PolarSSL:
-  
-  Fix the prototype change in PolarSSL of ssl_set_session() and the move
-  of the peer_cert from the ssl_context to the ssl_session. Found this
-  change in the PolarSSL SVN between r1316 and r1317 where the
-  POLARSSL_VERSION_NUMBER was at 0x01010100. But to accommodate the Ubuntu
-  PolarSSL version 1.1.4 the check is to discriminate between lower then
-  PolarSSL version 1.2.0 and 1.2.0 and higher. Note: The PolarSSL SVN
-  trunk jumped from version 1.1.1 to 1.2.0.
+  By doing this unconditionally, we infer a simpler and more defined
+  behavior. This also has the upside that test 1021 no longer fails for me
+  even if I run with valgrind.
   
-  Generic:
+  Also fixed some wrong comments.
+
+Steve Holme (5 Feb 2013)
+- email: Reworked comments in the endofresp() functions
   
-  All the SSL backends are fixed and checked to work with the
-  ssl.verifyhost as a boolean, which is an internal API change.
+  Tidied up the comments in the endofresp() functions to be more
+  meaningful prior to release.
 
-- libcurl: VERSIONINFO update
+Marc Hoersken (5 Feb 2013)
+- schannel: Removed extended error connection setup flag
   
-  Since we added the curl_multi_wait function, the VERSIONINFO needed
-  updating.
+  According KB975858 this flag may cause problems on Windows 7 and
+  Windows Server 2008 R2 systems. Extended error information is not
+  currently used by libcurl and therefore not a requirement.
   
-  Reported by: Patrick Monnerat
-
-Guenter Knauf (8 Nov 2012)
-- Added .def file to output.
+  The flag may improve the SSL-connection shutdown in case of an
+  error. This means it might be a good improvement in the future.
   
-  Requested by Johnny Luong on the libcurl list.
-
-- Added deps for static metalink-aware MinGW builds.
+  Fixes bug/issue #1187 - thanks for the report
 
-Daniel Stenberg (8 Nov 2012)
-- [Fabian Keil brought this change]
+Daniel Stenberg (5 Feb 2013)
+- [Tor Arntsen brought this change]
 
-  Fix compilation of lib1501
+  singleipconnect: Update *sockp for all CURLE_OK
+  
+  The 56b7c87c7 change left a case where a good sockfd was not copied to
+  *sockp before returning with CURLE_OK
 
-- Curl_readwrite: remove debug output
+- curl_easy_perform: Value stored to 'mcode' is never read
   
-  The text "additional stuff not fine" text was added for debug purposes a
-  while ago, but it isn't really helping anyone and for some reason some
-  Linux distributions provide their libcurls built with debug info still
-  present and thus (far too many) users get to read this info.
+  pointed out by clang-analyzer
 
-- RELEASE-NOTES: synced with 487538e87a3d5e
+- singleipconnect: remove dead assignment
   
-  6 new bugfixes and 3 more contributors...
+  pointed out by clang-analyzer
 
-- http_perhapsrewind: consider NTLM over proxy too
+Linus Nielsen Feltzing (5 Feb 2013)
+- CURLMOPT_MAXCONNECTS: restore functionality
   
-  The logic previously checked for a started NTLM negotiation only for
-  host and not also with proxy, leading to problems doing POSTs over a
-  proxy NTLM that are larger than 2000 bytes. Now it includes proxy in the
-  check.
+  When a connection is no longer used, it is kept in the cache. If the
+  cache is full, the oldest idle connection is closed. If no connection is
+  idle, the current one is closed instead.
+
+Steve Holme (5 Feb 2013)
+- RELEASE-NOTES: Updated following recent changes to the email protocols
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3582321
-  Reported by: John Suprock
+  Added recent additions and fixes following the changes to imap, pop3
+  and smtp. Additionally added another contributor that helped to test
+  the imap sasl changes.
 
-- [Lars Buitinck brought this change]
+- email: Provided extra comments following recent pop3/imap fixes
+  
+  Provided additional clarification about the logic of the authenticate()
+  functions following commit 6b6bdc83bd36 and b4270a9af1d0.
 
-  Curl_connecthost: friendlier "couldn't connect" message
+Daniel Stenberg (5 Feb 2013)
+- [Andrei Kurushin brought this change]
 
-- test1413: verify redirects to URLs with fragments
-  
-  The bug report claimed it didn't work. This problem was probably fixed
-  in 473003fbdf.
+  winbuild: include version info for .dll .exe
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3581898
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1186
 
-- URL parser: cut off '#' fragments from URLs (better)
-  
-  The existing logic only cut off the fragment from the separate 'path'
-  buffer which is used when sending HTTP to hosts. The buffer that held
-  the full URL used for proxies were not dealt with. It is now.
-  
-  Test case 5 was updated to use a fragment on a URL over a proxy.
+- FAQ: clarify 5.13 How do I stop an ongoing transfer
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3579813
+  Rich Gray provided good feedback and we now clarify that you can in fact
+  stop a multi transfer at any point you like by removing the easy handle.
 
-- OpenSSL/servercert: use correct buffer size, not size of pointer
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3579286
+- [Matt Arsenault brought this change]
 
-- curl: set CURLOPT_SSL_VERIFYHOST to 0 to disable
+  cmake: Fix mingw build
 
-- test 2027/2030: take duplicate Digest requests into account
-  
-  With the reversion of ce8311c7e49eca and the new clear logic, this flaw
-  is present and we allow it.
+- [Sergei Nikulov brought this change]
 
-- Curl_pretransfer: clear out unwanted auth methods
+  cmake: updated OpenSSL build
+
+Steve Holme (4 Feb 2013)
+- pop3.c: Updated variable names to use shorter / more readable variant
   
-  As a handle can be re-used after having done HTTP auth in a previous
-  request, it must make sure to clear out the HTTP types that aren't
-  wanted in this new request.
+  Tidied up code from commit 6b6bdc83bdUpdated where a few instances of
+  the pop3c struct variable used the longer conndata struct rather than
+  matching what other code in pop3_authenticate() used.
 
-- test1412: verify Digest with repeated URLs
+Guenter Knauf (4 Feb 2013)
+- updated copyright years.
+
+- configure: update the copyright years for the output.
+
+Steve Holme (3 Feb 2013)
+- imap: Fixed no known authentication mechanism when fallback is required
   
-  This test case verifies that bug 3582718 is fixed.
+  Fixed an issue where (lib)curl is compiled without support for a
+  supported challenge-response based SASL authentication mechanism, such
+  as CRAM-MD5 or NTLM, the server doesn't support the LOGIN or PLAIN
+  mechanisms and (lib)curl doesn't fallback to Clear Text authentication.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3582718
-  Reported by: Nick Zitzmann (originally)
-
-- Revert "Zero out auth structs before transfer"
+  Note: In order to fallback to Clear Text authentication properly this
+  fix adds support for the LOGINDISABLED server capability.
+  imap: Fixed no known authentication mechanism when fallback is required
   
-  This reverts commit ce8311c7e49eca93c136b58efa6763853541ec97.
+  Fixed an issue where (lib)curl is compiled without support for a
+  supported challenge-response based SASL authentication mechanism, such
+  as CRAM-MD5 or NTLM, the server doesn't support the LOGIN or PLAIN
+  mechanisms and (lib)curl doesn't fallback to Clear Text authentication.
   
-  The commit made test 2024 work but caused a regression with repeated
-  Digest authentication. We need to fix this differently.
+  Note: In order to fallback to Clear Text authentication properly this
+  fix adds support for the LOGINDISABLED server capability.
+  
+  Related bug: http://curl.haxx.se/mail/lib-2013-02/0004.html
+  Reported by: Stanislav Ivochkin
 
-- CURLOPT_SSL_VERIFYHOST: stop supporting the 1 value
+- pop3: Fixed no known authentication mechanism when fallback is required
   
-  After a research team wrote a document[1] that found several live source
-  codes out there in the wild that misused the CURLOPT_SSL_VERIFYHOST
-  option thinking it was a boolean, this change now bans 1 as a value and
-  will make libcurl return error for it.
+  Fixed an issue where (lib)curl is compiled without support for a
+  supported challenge-response based SASL authentication mechanism, such
+  as CRAM-MD5 or NTLM, the server doesn't support the LOGIN or PLAIN
+  mechanisms and (lib)curl doesn't fallback to APOP or Clear Text
+  authentication.
   
-  1 was never a sensible value to use in production but was introduced
-  back in the days to help debugging. It was always documented clearly
-  this way.
+  Bug: http://curl.haxx.se/mail/lib-2013-02/0004.html
+  Reported by: Stanislav Ivochkin
+
+Daniel Stenberg (1 Feb 2013)
+- singleipconnect: simplify and clean up
   
-  1 was never supported by all SSL backends in libcurl, so this cleanup
-  makes the treatment of it unified.
+  Remove timeout argument that's never used.
   
-  The report's list of mistakes for this option were all PHP code and
-  while there's a binding layer between libcurl and PHP, the PHP team has
-  decided that they have an as thin layer as possible on top of libcurl so
-  they will not alter or specifically filter a 'TRUE' value for this
-  particular option. I sympathize with that position.
+  Make the actual connection get detected on a single spot to reduce code
+  duplication.
   
-  [1] = http://daniel.haxx.se/blog/2012/10/25/libcurl-claimed-to-be-dangerous/
-
-- gnutls: fix compiler warnings
-
-- [Alessandro Ghedini brought this change]
-
-  gnutls: print alerts during handshake
-
-- [Alessandro Ghedini brought this change]
+  Store the IPv6 state already when the connection is attempted.
 
-  gnutls: fix the error_is_fatal logic
+- Curl_perfom: removed
+  
+  Curl_perfom is no longer used anywhere since the always-multi commit
+  c43127414d89ccb9, and some related functions were used only from within
+  Curl_perfom.
 
-- RELEASE-NOTES: synced with fa6d78829fd30ad
+Guenter Knauf (30 Jan 2013)
+- Updated date.
 
-- httpcustomheader.c: free the headers after use
+Yang Tse (30 Jan 2013)
+- zz40-xc-ovr.m4: fix 'wc' detection - follow-up 2
+  
+  - Fix a pair of single quotes to double quotes.
+  
+  URL: http://curl.haxx.se/mail/lib-2013-01/0355.html
+  Reported by: Tor Arntsen
 
-- [Dave Reisner brought this change]
+- zz40-xc-ovr.m4: fix 'wc' detection - follow-up
+  
+  - Take into account that 'wc' may return leading spaces and/or tabs.
+  
+  - Set initial IFS to space, tab and newline.
 
-  uniformly use AM_CPPFLAGS, avoid deprecated INCLUDES
+- zz40-xc-ovr.m4: fix 'wc' detection
   
-  Since automake 1.12.4, the warnings are issued on running automake:
+  - Take into account that 'wc' may return leading spaces.
   
-    warning: 'INCLUDES' is the old name for 'AM_CPPFLAGS' (or '*_CPPFLAGS')
+  - Set internationalization behavior variables.
   
-  Avoid INCLUDES and roll these flags into AM_CPPFLAGS.
+  Tor Arntsen analyzed and reported the issue.
   
-  Compile tested on:
-    Ubuntu 10.04 (automake 1:1.11.1-1)
-    Ubuntu 12.04 (automake 1:1.11.3-1ubuntu2)
-    Arch Linux (automake 1.12.4)
+  URL: http://curl.haxx.se/mail/lib-2013-01/0351.html
 
-- libauthretry.c: shorten lines to fit within 80 cols
+- zz40-xc-ovr.m4: check another three basic utilities
 
-- ftp_readresp: fix build without krb4 support
+Guenter Knauf (29 Jan 2013)
+- Fixed debug.c to work again unchanged.
   
-  Oops, my previous commit broke builds with krb support.
+  Added CURLOPT_FOLLOWLOCATION since example.com is now redirected.
 
-- test/README: mention the 1500 test number range
+Daniel Stenberg (29 Jan 2013)
+- [Nick Zitzmann brought this change]
 
-- FTP: prevent the multi interface from blocking
+  darwinssl: Fix bug where packets were sometimes transmitted twice
   
-  As pointed out in Bug report #3579064, curl_multi_perform() would
-  wrongly use a blocking mechanism internally for some commands which
-  could lead to for example a very long block if the LIST response never
-  showed.
+  There was a bug where, if SSLWrite() returned errSSLWouldBlock but did
+  succeed in transmitting at least something, then we'd incorrectly
+  resend the packet. Now we never take errSSLWouldBlock as a sign that
+  nothing was transferred to/from the server.
   
-  The solution was to make sure to properly continue to use the multi
-  interface non-blocking state machine.
-  
-  The new test 1501 verifies the fix.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3579064
-  Reported by: Guido Berhoerster
-
-Marc Hoersken (1 Nov 2012)
-- winbuild: Use machine type of development environment
-  
-  This patch restores the original behavior instead of always
-  falling back to x86 if no MACHINE-type was specified.
+  Bug: http://curl.haxx.se/mail/lib-2013-01/0295.html
+  Reported by: Bruno de Carvalho
 
-- winbuild: Additional clean up
+- [Nick Zitzmann brought this change]
 
-- [Sapien2 brought this change]
+  FAQ: "Darwinssl" is AKA "Secure Transport" and supports NTLM
 
-  Even more winbuild refactoring
+- RELEASE-NOTES: only list Nick once
+  
+  Even though he's a fine dude, once is enough for this time!
 
-- [Sapien2 brought this change]
+Yang Tse (28 Jan 2013)
+- zz40-xc-ovr.m4: 1.0 interface stabilization
+  
+  - Stabilization results in 4 public interface m4 macros:
+    XC_CONFIGURE_PREAMBLE
+    XC_CONFIGURE_PREAMBLE_VER_MAJOR
+    XC_CONFIGURE_PREAMBLE_VER_MINOR
+    XC_CHECK_PATH_SEPARATOR
+  - Avoid one level of internal indirection
+  - Update comments
+  - Drop XC_OVR_ZZ40 macro
 
-  Minor winbuild refactoring
+Kamil Dudka (28 Jan 2013)
+- docs: fix typos in man pages
+  
+  Reported by: Jiri Jaburek
+  Bug: https://bugzilla.redhat.com/896544
 
-- [Sapien2 brought this change]
+- docs: update the comments about loading CA certs with NSS
+  
+  Bug: https://bugzilla.redhat.com/696783
 
-  Architecture selection for winbuild and minor makefiles refactoring
+Guenter Knauf (28 Jan 2013)
+- Updated dependency libs.
 
-Daniel Stenberg (1 Nov 2012)
-- BUGS: fix the bug tracker URL
-  
-  The URL we used before is the one that goes directly to 'add' a bug
-  report, but since you can only do that after first having logged in to
-  sourceforge, the link often doesn't work for visitors.
+- Fixed simple.c to work again unchanged.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3582408
-  Reported by: Oscar Norlander
+  Added CURLOPT_FOLLOWLOCATION since example.com is now redirected.
 
-- evhiperfifo: fix the pointer passed to WRITEDATA
+Steve Holme (27 Jan 2013)
+- smtp.c: Fixed unnecessary state change if starttls fails
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3582407
-  Reported by: Oscar Norlander
+  The state machine should only be changed to SMTP_STARTTLS when the
+  STARTTLS command has been successfully sent to the server.
 
-Guenter Knauf (1 Nov 2012)
-- Fixed MSVC libssh2 static build.
+- pop3.c: Fixed unnecessary state change if starttls fails
   
-  Since libssh2 supports now agent stuff it also depends on user32.lib.
-  Posted to the list by Jan Ehrhardt.
+  The state machine should only be changed to POP3_STARTTLS when the
+  STLS command has been successfully sent to the server.
 
-Daniel Stenberg (23 Oct 2012)
-- tlsauthtype: deal with the string case insensitively
-  
-  When given a string as 'srp' it didn't work, but required 'SRP'.
-  Starting now, the check disregards casing.
+- imap.c: Fixed unnecessary state change if starttls fails
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3578418
-  Reported by: Jeff Connelly
+  The state machine should only be changed to IMAP_STARTTLS when the
+  STARTTLS command has been successfully sent to the server.
 
-- asyn-ares: restore working with c-ares < 1.6.1
-  
-  Back in those days the public ares.h header didn't include the
-  ares_version.h header so it needs to be included here.
+- email: Updated comment regarding ssldone usage
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3577710
-
-- [Nick Zitzmann brought this change]
+  Updated the ssldone comment as multi mode is always used internally now.
 
-  metalink/md5: Use CommonCrypto on Apple operating systems
+Yang Tse (26 Jan 2013)
+- zz40-xc-ovr.m4: emit witness message in configure BODY
   
-  Previously the Metalink code used Apple's CommonCrypto library only if
-  curl was built using the --with-darwinssl option. Now we use CommonCrypto
-  on all Apple operating systems including Tiger or later, or iOS 5 or
-  later, so you don't need to build --with-darwinssl anymore. Also rolled
-  out this change to libcurl's md5 code.
-
-- href_extractor.c: fix the URL
-
-- [Michał Kowalczyk brought this change]
+  This avoids witness message in output when running configure --help,
+  while sending the message to config.log for other configure runs.
 
-  href_extractor: example code extracting href elements
+Steve Holme (25 Jan 2013)
+- smtp.c: Added comments to smtp_endofresp()
   
-  It does so in a streaming manner using the "Streaming HTML parser".
-
-- [Nick Zitzmann brought this change]
+  Minor code tidy up to add comments similar to those used in the pop3
+  and imap end of resp functions, in order to assist anyone reading the
+  code and highlight the similarities between each of these protocols.
 
-  darwinssl: un-broke iOS build, fix error on server disconnect
+Yang Tse (25 Jan 2013)
+- zz40-xc-ovr.m4: truly do version conditional overriding
   
-  The iOS build was broken by a reference to a function that only existed
-  under OS X; fixed. Also fixed a hard-to-reproduce problem where, if the
-  server disconnected before libcurl got the chance to hang up first and
-  SecureTransport was in use, then we'd raise an error instead of failing
-  gracefully.
-
-- [Alessandro Ghedini brought this change]
+  - version conditional overriding
+  - catch unexpanded XC macros
+  - fix double words in comments
 
-  gnutls: put reset code into else block
+- zz40-xc-ovr.m4: fix variable assignment of subshell output bashism
   
-  Bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=690551
-
-Guenter Knauf (13 Oct 2012)
-- Fix now broken libmetalink-aware OpenSSL build.
-
-- Revert c44e674; add OpenSSL includes/defines.
+  Tor Arntsen analyzed and reported the issue.
   
-  The makefile is designed to build against a libmetalink devel package;
-  therefore is does not matter what will change inside libmetalink.
-  Add OpenSSL includes and defines for libmetalink-aware OpenSSL builds.
+  URL: http://curl.haxx.se/mail/lib-2013-01/0306.html
 
-Daniel Stenberg (10 Oct 2012)
-- version-bump: towards 7.28.1!
+- zz40-xc-ovr.m4: reinstate strict AC_REQUIRE macro dependencies
 
-- THANKS: 14 new contributors from 7.28.0
+- zz40-xc-ovr.m4: avoid double single-quote usage
 
-Version 7.28.0 (10 Oct 2012)
+- zz40-xc-ovr.m4: parentheses balancing of 'case' statements
+  
+  m4 quadrigraph shell comment technique allows proper autoconf
+  parentheses balancing in shell 'case' statements. The presence
+  of unbalanced parentheses may otherwise trigger expansion bugs.
 
-Daniel Stenberg (10 Oct 2012)
-- RELEASE-NOTES: synced with 8373ca3641
+Steve Holme (24 Jan 2013)
+- smtp.c: Corrected RFC references
   
-  One bug, one contributor. Getting ready for release.
+  The most recent version of the SMTP RFC is RFC5321 and not RFC2821 as
+  previously documented.
+  
+  Added RFC1870 and re-ordered list numerically.
 
-- curl_multi_wait: no wait if no descriptors to wait for
+- smtp.c: Fixed failure detection during TLS upgrade
   
-  This is a minor change in behavior after having been pointed out by Mark
-  Tully and discussed on the list. Initially this case would internally
-  call poll() with no sockets and a timeout which would equal a sleep for
-  that specified time.
+  smtp_state_upgrade_tls() would attempt to incorrectly complete the
+  upgrade to smtps and start the EHLO command if
+  Curl_ssl_connect_nonblocking() returned a failure code and if ssldone
+  was set to TRUE. This would only happen when a non-blocking API hadn't
+  been provided by the SSL implementation and curlssl_connect() was
+  called underneath.
+
+- pop3.c: Fixed failure detection during TLS upgrade
   
-  Bug: http://curl.haxx.se/mail/lib-2012-10/0076.html
-  Reported by: Mark Tully
+  pop3_state_upgrade_tls() would attempt to incorrectly complete the
+  upgrade to pop3s and start the CAPA command if
+  Curl_ssl_connect_nonblocking() returned a failure code and if ssldone
+  was set to TRUE. This would only happen when a non-blocking API hadn't
+  been provided by the SSL implementation and curlssl_connect() was
+  called underneath.
 
-- TODO-RELEASE: cleanup for 7.28.0
+- imap.c: Fixed failure detection during TLS upgrade
   
-  one issue is now KNOWN_BUG #79
+  imap_state_upgrade_tls() would attempt to incorrectly complete the
+  upgrade to imaps and start the CAPABILITY command if
+  Curl_ssl_connect_nonblocking() returned a failure code and if ssldone
+  was set to TRUE. This would only happen when a non-blocking API hadn't
+  been provided by the SSL implementation and curlssl_connect() was
+  called underneath.
+
+Yang Tse (24 Jan 2013)
+- zz40-xc-ovr.m4: internals overhauling
   
-  the other we just skip since nobody is working on it or is planning to
-  start working on it anytime soon
+  - Update comments
+  - Execute commands in subshells
+  - Faster path separator check
+  - Fix missing 'test' command
+  - Rename private macros
+  - Minimize AC_REQUIRE usage
 
-- curl_multi_wait.3: style formatting mistake
+Steve Holme (23 Jan 2013)
+- email: Removed unnecessary return statements
+  
+  Small tidy up to remove unnecessary return statements prior to the next
+  fix.
 
-Marc Hoersken (8 Oct 2012)
-- ssluse.c: md5.h is required for Curl_ossl_md5sum
+Yang Tse (23 Jan 2013)
+- zz40-xc-ovr.m4: redirect errors and warnings to stderr
 
-Daniel Stenberg (8 Oct 2012)
-- curl_multi_wait.3: fix the name of the man page
+- zz40-xc-ovr.m4: AC_REQUIRE also XC_CONFIGURE_PREAMBLE success message
 
-- curl_multi_wait.3: renamed the last argument variable for clarity
+- zz60-xc-ovr.m4: tighten XC_OVR_ZZ60 macro placement requirements
 
-Marc Hoersken (6 Oct 2012)
-- curl_schannel.c: Fixed caching more data than required
+- configure: use XC_CONFIGURE_PREAMBLE early checks
   
-  Do not fill the decrypted data buffer with more data unless
-  required in order to return the requested amount of data.
+  Some basic checks we make were placed early enough in generated
+  configure script when using autoconf 2.5X versions. Newer autoconf
+  versions expand these checks much further into the configure script,
+  rendering them useless. Using XC_CONFIGURE_PREAMBLE fixes placement
+  of early intended checks across all our autoconf supported versions.
 
-- curl_schannel: Removed buffer limit and optimized buffer strategy
-  
-  Since there are servers that seem to return very big encrypted
-  data packages, we need to be able to handle those without having
-  an internal size limit. To avoid the buffer growing to fast to
-  early the initial size was decreased and the minimum free space
-  in the buffer was decreased as well.
+- zz40-xc-ovr.m4: provide XC_CONFIGURE_PREAMBLE macro
 
-- lib/socks.c: Merged two size variables into one
+Daniel Stenberg (23 Jan 2013)
+- FAQ: update the SSL lib list and wording in question 2.2
 
-- lib/socks.c: Avoid type conversions where possible
+Steve Holme (22 Jan 2013)
+- curl_sasl.c: Corrected references to RFC
   
-  Streamlined variable names and types to avoid type conversions that
-  may result in data being lost on non 32-bit systems.
+  The most recent version of the RFC is RFC4422 and not RFC2222 as
+  previously documented.
 
-- lib/curl_schannel.c: Hide size_t conversion warning
+- email: Corrected references to SASL RFC
+  
+  The most recent version of the SASL RFC is RFC4422 and not RFC2222 as
+  previously documented.
 
-- krb5/curl_rtmp.c: Hide size_t to int type conversion warning
+Daniel Stenberg (22 Jan 2013)
+- [Ulion brought this change]
 
-- security.c: Aligned internal type to return type
+  formpost: support quotes, commas and semicolon in file names
   
-  Use ssize_t instead of int to avoid conversion problems on 64-bit
-  systems. Also added curlx_sztosi where necessary.
-
-- lib/curl_schannel: Increased maximum buffer size to factor 128
-
-- winbuild/MakefileBuild.vc: Follow up on 0c8ccf7
-
-Daniel Stenberg (2 Oct 2012)
-- RELEASE-NOTES: synced with 971f5bcedd418
+  - document the double-quote and backslash need be escaped if quoting.
+  - libcurl formdata escape double-quote in filename by backslash.
+  - curl formparse can parse filename both contains '"' and ',' or ';'.
+  - curl now can uploading file with ',' or ';' in filename.
   
-  9 new bug fixes, 5 changes, 6 more contributors
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1171
 
-- multi_runsingle: CURLOPT_LOW_SPEED_* fix for rate limitation
-  
-  During the periods of rate limitation, the speedcheck function wasn't
-  called and thus the values weren't updated accordingly and it would then
-  easily trigger wrongly once data got transferred again.
+- memanalyze.pl: handle fopen() of file names with quotes
+
+Yang Tse (21 Jan 2013)
+- xc-cc-check.m4: re-evaluate exporting and AC_SUBST'ing vars
   
-  Also, the progress callback's return code was not acknowledged in this
-  state so it could make an "abort" return code to get ignored and not
-  have the documented effect of aborting an ongoing transfer.
+  Notes:
   
-  Bug: http://curl.haxx.se/mail/lib-2012-09/0081.html
-  Reported by: Jie He
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  tool_metalink.c: Filtered resource URLs by type
+  When running a configure script that has nested packages (for example
+  libcurl's configure with --enable-ares and c-ares sources embedded in
+  curl tree) and AC_CONFIG_SUBDIRS([nested-subdir]) machinery is used to
+  automatically run the nested configure script from within the parent
+  configure script, it happens that the nested _shell_ script will
+  inherit shell variables exported from the parent _shell_ script.
   
-  In Metalink v3, the type attribute of url element indicates the
-  type of the resource the URL points to. It can include URL to the
-  meta data, such as BitTorrent metainfo file.  In Curl, we are not
-  interested in these meta data URLs. Instead, we are only
-  interested in the HTTP and FTP URLs. This change filters out
-  non-HTTP and FTP URLs. If we don't filter out them, it will be
-  downloaded by curl and hash check will fail if hash is provided
-  and next URL will be tried. This change will cut this useless
-  network transfer.
-
-Kamil Dudka (1 Oct 2012)
-- https.c example: remember to call curl_global_init()
+  If for example parent configure script sets and exports LDFLAGS and LIBS
+  variables with proper values in order to link either a parent library or
+  program with a library which will be configured and built by a nested
+  package; It will happen that when the nested configure script runs, the
+  nested library does not exist yet and _any_ link-test done in the nested
+  configure will fail, such as those that autoconf macros perform in order
+  to detect existing compiler and its characteristics, the result is that
+  the nested configure script will fail with errors such as:
   
-  ... in order not to leak memory on initializing an SSL library.
+  configure: error: C compiler cannot create executables
   
-  Reported by: Tomas Mlcoch
-
-Daniel Stenberg (28 Sep 2012)
-- FAQ: remove the date from the topmost line
-
-- FAQ: 5.16 I want a different time-out!
-
-- Curl_reconnect_request: clear pointer on failure
+  For now, we no longer export variables previously exported here.
   
-  The Curl_reconnect_request() function could end up returning a pointer
-  to a free()d struct when Curl_done() failed inside. Clearing the pointer
-  unconditionally after Curl_done() avoids this risk.
+  On the other hand, AC_SUBST'ing them is appropriate and even with nested
+  packages each package's config.status gets its own package values.
   
-  Reported by: Ho-chi Chen
-  Bug: http://curl.haxx.se/mail/lib-2012-09/0188.html
+  So we reinstate AC_SUBST'ing previously AC_SUBST'ed variables.
 
-- CURLOPT_CONNECTTIMEOUT: works without signals or posix too!
+Daniel Stenberg (21 Jan 2013)
+- FAQ: 3.22 curl -X gives me HTTP problems
 
-Marc Hoersken (24 Sep 2012)
-- Makefile.vc6: Follow up on 0c8ccf7
+Yang Tse (21 Jan 2013)
+- xc-cc-check.m4: avoid recursive package automake'ing breakage
 
-- Makefile.vc6: Added missing default library advapi32.lib
+- xc-cc-check.m4: mark earlier variables that are to be exported
 
-Daniel Stenberg (19 Sep 2012)
-- HTTP_ONLY: disable more protocols
+- configure: autotools compatibility fixes - step I
+  
+  Fix proper macro expansion order across autotools versions for
+  C compiler and preprocessor program checks.
 
-- test2006: Updated expected output to include hash name
+Steve Holme (20 Jan 2013)
+- pop3.c: Fixed conditional compilation of the apop response function
   
-  Output changed in commit a34197ef77cb
+  Extended the fix from commit 8b15c84ea91e to additionally exclude
+  pop3_state_apop_resp() if the CURL_DISABLE_CRYPTO_AUTH flag is
+  defined.
 
-- [Sergei Nikulov brought this change]
+Yang Tse (20 Jan 2013)
+- Makefile.inc: fix $(top_srcdir) not allowed in _SOURCES variables
 
-  cmake: use standard findxxx modules for cmake v2.8+
+Daniel Stenberg (19 Jan 2013)
+- formadd: reject trying to read a directory where a file is expected
+  
+  Bug: http://curl.haxx.se/mail/archive-2013-01/0017.html
+  Reported by: Ulrich Doehner
 
-- [Sergei Nikulov brought this change]
+- curl_easy_send.3: document return codes
+  
+  Reported by: Craig Davison
+  Bug: http://curl.haxx.se/mail/lib-2013-01/0234.html
 
-  setup.h: fixed for MS VC10 build
+- curl_easy_recv.3: document return codes
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3568327
+  Reported by: Craig Davison
+  Bug: http://curl.haxx.se/mail/lib-2013-01/0234.html
 
-- TODO-RELEASE: push new features to 7.29
+Steve Holme (19 Jan 2013)
+- email: General code tidy up
   
-  Leave two bug fixes as possibly fixed for 7.28 but as nobody seems to be
-  working on them I have little hope...
+  Corrected some function argument definitions to maximize the 80
+  character line length limit and be in keeping with the curl
+  coding style.
 
-Marc Hoersken (17 Sep 2012)
-- metalink tests: Updated expected output to include hash name
+- pop3.c: Fixed a problem with pop3s connections not connecting properly
+  
+  Fixed an issue where Curl_ssl_connect_nonblocking() wouldn't complete
+  correctly and the ssldone flag wouldn't be set to true for pop3s based
+  connections.
+  
+  Bug introduced in commit: 4ffb8a6398ed.
 
-Daniel Stenberg (16 Sep 2012)
-- [Sara Golemon brought this change]
+Daniel Stenberg (18 Jan 2013)
+- RELEASE-NOTES: add references to several bugfixes+changes
 
-  curl_multi_wait: Add parameter to return number of active sockets
+Steve Holme (18 Jan 2013)
+- RELEASE-NOTES: Added missing imap fix
   
-  Minor change to recently introduced function.  BC breaking, but since
-  curl_multi_wait() doesn't exist in any releases that should be fine.
+  Added missing imap fix as per commit 709b3506cd9b.
 
-Marc Hoersken (14 Sep 2012)
-- socks.c: Fixed warning: conversion to 'int' from 'long unsigned int'
+Yang Tse (18 Jan 2013)
+- runtests.pl: make VPATH builds find valgrind.supp
 
-- http_negotiate.c: Fxied warning: unused variable 'rc'
+Daniel Stenberg (18 Jan 2013)
+- RELEASE-NOTES: synced with c43127414d89
 
-- ssh.c: Fixed warning: implicit conversion from enumeration type
+- always-multi: always use non-blocking internals
+  
+  Remove internal separated behavior of the easy vs multi intercace.
+  curl_easy_perform() is now using the multi interface itself.
+  
+  Several minor multi interface quirks and bugs have been fixed in the
+  process.
+  
+  Much help with debugging this has been provided by: Yang Tse
 
-- socks.c: Check that IPv6 is enabled before using it's features
+Yang Tse (17 Jan 2013)
+- url.c: fix HTTP CONNECT tunnel establishment upon delayed response
+  
+  Fixes initial proxy response being processed by the tunneled protocol
+  handler instead of the HTTP wrapper handler. This issue would trigger
+  upon delayed CONNECT response from the proxy.
+  
+  Additionally fixes a multi interface code-path in which connections
+  would not time out properly.
+  
+  This does not fix known bug #39.
+  
+  URL: http://curl.haxx.se/mail/lib-2013-01/0191.html
 
-- checksrc: Fixed line length and comment indentation
+Daniel Stenberg (16 Jan 2013)
+- [Yves Arrouye brought this change]
 
-- socks.c: Updated error messages to handle hostname and IPv6
+  --libcurl: fix for non-zero default options
+  
+  If the default value for an option taking a long as its value is non
+  zero, and it is set by zero by a command line option, then that command
+  line option is not reflected in --libcurl's output. This is because line
+  520-521 of tool_setopt.c look like:
+  
+  if(!lval)
+      skip = TRUE;
+  
+  An example of a command-line option doing so is the -k option that sets
+  CURLOPT_SLL_VERIFYPEER and CURLOPT_SSL_VERIFYHOST to 0L, when the
+  defaults are non-zero.
 
-- socks.c: Added support for IPv6 connections through SOCKSv5 proxy
+- FTP: reject illegal port numbers in EPSV 229 responses
 
-Daniel Stenberg (13 Sep 2012)
-- parse_proxy: treat "socks://x" as a socks4 proxy
-  
-  Selected socks proxy in Google's Chrome browser. Resulting in the
-  following environment variables:
+Yang Tse (15 Jan 2013)
+- commit bc682cbd follow-up
+
+- build: use per-target '_CPPFLAGS' for those currently using default
   
-  NO_PROXY=localhost,127.0.0.0/8
-  ALL_PROXY=socks://localhost:1080/
-  all_proxy=socks://localhost:1080/
-  no_proxy=localhost,127.0.0.0/8
+  Automake documents that doing this will make it choose a different name
+  for intermediate object files even when sharing source files across
+  targets of same Makefile.am.
   
-  ... and libcurl didn't treat 'socks://' as socks but instead picked HTTP
-  proxy.
+  Up to automake 1.13.1 target's intermediate object files were placed
+  in the build subdirectory of the target. We depended on this, probably
+  undocumented behavior, to achieve same behavior as if a per-target flag
+  had been specified when building targets that actually belong to
+  different Makefile.am files.
   
-  Reported by: Scott Bailey
+  It seems automake 1.13.2 is going to break behavior mentioned above.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3566860
-
-Kamil Dudka (12 Sep 2012)
-- ssh: do not crash if MD5 fingerprint is not provided by libssh2
+  So, lets use a documented behavior in order to achieve same purpose,
+  across automake versions, no matter where automake wishes to place
+  intermediate object files.
   
-  The MD5 fingerprint cannot be computed when running in FIPS mode.
+  Our build targets that already were using a per-target '_CFLAGS' or
+  '_CPPFLAGS' need no 'fixing', these were already 'fixed'. The only
+  Makefile.am or Makefile.in files in libcurl's source tree touched by
+  this 'fix' are tests/libtest/Makefile.inc and tests/unit/Makefile.inc.
 
-- ssh: move the fingerprint checking code to a separate fnc
+- tests/libtest/Makefile.inc: sort build targets
 
-Marc Hoersken (12 Sep 2012)
-- tool_metalink.c: Added name of validation hash to messages
-  
-  This makes it easier to debug broken hashes or hash functions.
+- tests/Makefile.am: remove wildcard usage in EXTRA_DIST
 
-- wincrypt: Fixed cross-compilation issues caused by include name
+Kamil Dudka (15 Jan 2013)
+- nss: fix error messages for CURLE_SSL_{CACERT,CRL}_BADFILE
   
-  For some reason WinCrypt.h is named wincrypt.h under MinGW.
+  Do not use the error messages from NSS for errors not occurring in NSS.
 
-- md5.c: Added support for Microsoft Windows CryptoAPI
+Steve Holme (14 Jan 2013)
+- TODO: Updated following IMAP SASL additions
 
-- Makefile.m32: Updated to build against libmetalink 0.1.2
+Yang Tse (14 Jan 2013)
+- configure: fix automake 1.13 compatibility
   
-  The include and library path were moved within libmetalink, this
-  patch adjusts the defaults provided within the curl MinGW makefile.
-
-- tool_metalink.c: Added support for Microsoft Windows CryptoAPI
+  Tested with:
   
-  Since Metalink support requires a crypto library for hash functions
-  and Windows comes with the builtin CryptoAPI, this patch adds that
-  API as a fallback to the supported crypto libraries.
-  It is automatically used on Windows if no other library is provided.
-
-- libntlmconnect.c: Fixed typo and conversion
+  buildconf: autoconf version 2.69
+  buildconf: autom4te version 2.69
+  buildconf: autoheader version 2.69
+  buildconf: automake version 1.13.1
+  buildconf: aclocal version 1.13.1
+  buildconf: libtool version 2.4
+  buildconf: GNU m4 version 1.4.16
 
-- libntlmconnect.c: Fixed warning: curl_easy_getinfo expects long pointer
+Daniel Stenberg (13 Jan 2013)
+- BUGS: update bug tracker URL
   
-  Fixed tests/libtest/libntlmconnect.c:52: warning: call to
-  '_curl_easy_getinfo_err_long' declared with attribute warning:
-  curl_easy_getinfo expects a pointer to long for this info
-
-- sws.c: Fixed warning: 'err' may be used uninitialized in this function
+  ... and refresh number of lines of code
 
-- libntlmconnect.c: Fixed warning: comparison of signed/unsigned integer
+- Curl_resolver_getsock: fix the function description comment
   
-  Windows does not use -1 to represent invalid sockets and the
-  SOCKET type is unsigned.
-
-- nss.c: Fixed warning: 'err' may be used uninitialized in this function
-
-- tool_metalink.c: Fixed error: 'O_BINARY' undeclared
+  It referred to it by the wrong name and said it returned the wrong value.
   
-  Check for O_BINARY which is not available on every system.
+  Reported by: Gisle Vanem
 
-- tool_metalink.c: Fixed validation of binary files containing EOF
+Kamil Dudka (11 Jan 2013)
+- nss: clear session cache if a client cert from file is used
   
-  Since Windows/MinGW threat 0x1A as the EOF character, reading binary
-  files which contain that byte does not work using text mode.
-  The read function will only read until the first 0x1A byte. This
-  means that the hash is not computed from the whole file and the
-  final validation check using hash comparision fails.
-
-- winbuild: Added support for building with SPNEGO enabled
+  This commit fixes a regression introduced in 052a08ff.
   
-  Since Simple and Protected GSSAPI Negotiation Mechanism
-  is already implemented in curl and supported by the MinGW
-  builds, this change adds build support to winbuild makefiles.
-
-- winbuild: Adjusted order of options to generated config name
+  NSS caches certs/keys returned by the SSL_GetClientAuthDataHook callback
+  and if we connect second time to the same server, the cached cert/key
+  pair is used.  If we use multiple client certificates for different
+  paths on the same server, we need to clear the session cache to force
+  NSS to call the hook again.  The commit 052a08ff prevented the session
+  cache from being cleared if a client certificate from file was used.
   
-  Cleaned up order of handled build options by ordering them
-  nearly alphabetically by using the order of the generated
-  config name. Preparation for future/more build options.
+  The condition is now fixed to cover both cases: consssl->client_nickname
+  is not NULL if a client certificate from the NSS database is used and
+  connssl->obj_clicert is not NULL if a client certificate from file is
+  used.
+  
+  Review by: Kai Engert
 
-Daniel Stenberg (9 Sep 2012)
-- [Anthony Bryan brought this change]
+Yang Tse (11 Jan 2013)
+- sockfilt.c: log file descriptor number on read/write error
 
-  MANUAL: clarified user+password in HTTP URLs
+- [Gisle Vanem brought this change]
 
-- RELEASE-NOTES: synced with 6c6f1f64c2
+  packages/DOS/common.dj: remove COFF debug info generation
   
-  6 bug fixes to mention, 5 contributors
-
-- TODO-RELEASE: CURLSSH_AUTH_AGENT and curl_multi_wait() are done
+  gcc on DOS hasn't really supported COFF-debug (-gcoff) on djgpp for a
+  long time.
   
-  -321 - CURLSSH_AUTH_AGENT patch by Armel Asselin
+  "Sounds like the COFF debug info generation has bit-rotted in GCC.
+   Nothing new here, no other platform uses COFF AFAIK."
   
-  -324 - curl_multi_select() vs curl_multi_fdvec() etc
-
-Marc Hoersken (9 Sep 2012)
-- curl_schannel.c: Reference count the credential/session handle
+  So lets drop it too.
   
-  Reference counting the credential handle should avoid that such a
-  handle is freed while it is still required for connection shutdown
+  URL: http://curl.haxx.se/mail/lib-2013-01/0130.html
 
-Daniel Stenberg (8 Sep 2012)
+- curl: ignore SIGPIPE - compilation fix - follow-up
+
+- test servers: handle W32/W64 SIGBREAK with exit_signal_handler
+
+- test servers: fix errno, ERRNO and SOCKERRNO usage for W32/W64
+
+- sockfilt.c: fix some W64 compiler warnings
+
+Daniel Stenberg (9 Jan 2013)
 - [Nick Zitzmann brought this change]
 
-  darwinssl: fixed for older Mac OS X versions
-  
-  SSL didn't work on older cats if built on a newer cat with weak-linking
-  turned on to support the older cat
+  docs: the --with-darwinssl option is available on Apple OSes
 
-- [David Blaikie brought this change]
+Yang Tse (9 Jan 2013)
+- curl: ignore SIGPIPE - compilation fix
 
-  tool_easysrc.c: Test pointers against NULL
+- build: fix circular header inclusion with other packages
   
-  While validating a new Clang diagnostic (-Wnon-literal-null-conversion -
-  yes, the name isn't quite correct in this case, but it suffices) I found
-  a few violations of it in Curl.
-
-- SOCKS: truly disable it if CURL_DISABLE_PROXY is defined
+  This commit renames lib/setup.h to lib/curl_setup.h and
+  renames lib/setup_once.h to lib/curl_setup_once.h.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3561305
+  Removes the need and usage of a header inclusion guard foreign
+  to libcurl. [1]
   
-  Patch by: Marcel Raad
-
-- mk-ca-bundle: detect start of trust section better
+  Removes the need and presence of an alarming notice we carried
+  in old setup_once.h [2]
   
-  Each certificate section of the input certdata.txt file has a trust
-  section following it with details.
+  ----------------------------------------
   
-  This script failed to detect the start of the trust for at least one
-  cert[*], which made the script continue pass that section into the next
-  one where it found an 'untrusted' marker and as a result that certficate
-  was not included in the output.
+  1 - lib/setup_once.h used __SETUP_ONCE_H macro as header inclusion guard
+      up to commit ec691ca3 which changed this to HEADER_CURL_SETUP_ONCE_H,
+      this single inclusion guard is enough to ensure that inclusion of
+      lib/setup_once.h done from lib/setup.h is only done once.
   
-  [*] = "Hellenic Academic and Research Institutions RootCA 2011"
+      Additionally lib/setup.h has always used __SETUP_ONCE_H macro to
+      protect inclusion of setup_once.h even after commit ec691ca3, this
+      was to avoid a circular header inclusion triggered when building a
+      c-ares enabled version with c-ares sources available which also has
+      a setup_once.h header. Commit ec691ca3 exposes the real nature of
+      __SETUP_ONCE_H usage in lib/setup.h, it is a header inclusion guard
+      foreign to libcurl belonging to c-ares's setup_once.h
   
-  Bug: http://curl.haxx.se/mail/lib-2012-09/0019.html
-
-- [Alessandro Ghedini brought this change]
-
-  gnutls: do not fail on non-fatal handshake errors
+      The renaming this commit does, fixes the circular header inclusion,
+      and as such removes the need and usage of a header inclusion guard
+      foreign to libcurl. Macro __SETUP_ONCE_H no longer used in libcurl.
   
-  Bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=685402
-
-- FILEFORMAT: the FTP commands work for more protocols
+  2 - Due to the circular interdependency of old lib/setup_once.h and the
+      c-ares setup_once.h header, old file lib/setup_once.h has carried
+      back from 2006 up to now days an alarming and prominent notice about
+      the need of keeping libcurl's and c-ares's setup_once.h in sync.
+  
+      Given that this commit fixes the circular interdependency, the need
+      and presence of mentioned notice is removed.
+  
+      All mentioned interdependencies come back from now old days when
+      the c-ares project lived inside a curl subdirectory. This commit
+      removes last traces of such fact.
 
-- test1411: verify SMTP without SIZE support
+Daniel Stenberg (8 Jan 2013)
+- curl: ignore SIGPIPE
+  
+  This is a work-around for bug #1180 which is really libcurl's inability
+  to ignore SIGPIPE in a few cases. With this work-around at least curl
+  won't suffer from it!
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1180
+  Reported by: Lluís Batlle i Rossell
 
-- [František Kučera brought this change]
+Yang Tse (8 Jan 2013)
+- sockfilt.c: fix some compiler warnings
 
-  SMTP: only send SIZE if supported
+Daniel Stenberg (8 Jan 2013)
+- Revert "configure: update req to 2.59"
   
-  SMTP client will send SIZE parameter in MAIL FROM command only if server
-  supports it. Without this patch server might say "504 Command parameter
-  not implemented" and reject the message.
+  This reverts commit 7a6d8b1b1a8fcc184c36d6b6e741e32250b4bacb.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3564114
+  URL: http://curl.haxx.se/mail/lib-2013-01/0103.html
 
-- ftpserver: respond with a 250 to SMTP EHLO
+Steve Holme (8 Jan 2013)
+- pop3: Added support for non-blocking SSL upgrade
   
-  ... and specify that SIZE is supported. 250 is the "correct" response
-  code according to RFC 2821
-
-- RELEASE-NOTES: synced with abb0da919300e
+  Added support for asynchronous SSL upgrade when using the
+  multi-interface.
 
-Dan Fandrich (3 Sep 2012)
-- Updated Symbian build files
+Daniel Stenberg (8 Jan 2013)
+- configure: update req to 2.59
   
-  This is untested, but at least Symbian still has a chance of
-  still working now.
+  I ran the 2.59 version of autoupdate that updates obsoleted configure.ac
+  constructs to the 2.59 standard. With a little hands-on fiddling I
+  prevented it from ruining the quoting in AS_HELP_STRING() uses.
+  
+  I subsequently also bumped the required autoconf version to 2.59
+  (released in December 2003) as I don't have an older autoconf version
+  around to test with and I can't be bothered to install one either...
+  
+  Inspired by: Björn Stenberg
+  Related blog post: http://cazfi.livejournal.com/195108.html
 
-- Updated build docs w.r.t. Android and binary sizes
+Steve Holme (7 Jan 2013)
+- imap.c: Small tidy up to add missing comment
 
-Daniel Stenberg (1 Sep 2012)
-- symbols-in-versions: new CURL_WAIT_* symbols
+- imap: Added support for sasl digest-md5 authentication
 
-- [Sara Golemon brought this change]
+- imap: Added support for sasl cram-md5 authentication
 
-  Unit test for curl_multi_wait()
+Marc Hoersken (7 Jan 2013)
+- tests/server/sockfilt.c: Fixed integer comparison warning
 
-- [Sara Golemon brought this change]
+- tests/server/sockfilt.c: Include required Win32 headers
 
-  Manpage for curl_multi_wait().
+Steve Holme (7 Jan 2013)
+- imap: Added support for sasl ntlm authentication
 
-- [Sara Golemon brought this change]
+- imap: Added support for sasl login authentication
 
-  multi: add curl_multi_wait()
+- pop3.c: Fixed default authentication detection
   
-  /*
-   * Name:     curl_multi_wait()
-   *
-   * Desc:     Poll on all fds within a CURLM set as well as any
-   *           additional fds passed to the function.
-   *
-   * Returns:  CURLMcode type, general multi error code.
-   */
-  CURL_EXTERN CURLMcode curl_multi_wait(CURLM *multi_handle,
-                                        struct curl_waitfd extra_fds[],
-                                        unsigned int extra_nfds,
-                                        int timeout_ms);
+  Fixed an issue where a server may positively respond to the CAPA command
+  but not list clear text as a valid authentication type.
 
-- [Nick Zitzmann brought this change]
+- curl_sasl.c: Small code tidy up following imap changes
 
-  darwinssl: Bugfix for previous commit for older cats
-  
-  I accidentally broke functionality for versions of OS X prior to Mountain
-  Lion in the previous commit. This commit fixes the problems.
+- smtp.c: Small code tidy up following imap changes
 
-- [Joe Mason brought this change]
+- pop3.c: Small code tidy up following imap changes
 
-  Use MAX_EASY_HANDLES instead of hardcoding the number of handles twice
+- imap: Added support for sasl plain text authentication
 
-- test2032: bail out after last transfer
+Marc Hoersken (6 Jan 2013)
+- tests/server/sockfilt.c: Fixed support for listening sockets
   
-  The test would hang and get aborted with a "ABORTING TEST, since it
-  seems that it would have run forever." until I prevented that from
-  happening.
+  This commit fixes support for sockets that are ready to accept
+  a new connection and have previously been put into listening mode.
   
-  I also fixed the data file which got broken CRLF line endings when I
-  sucked down the path from Joe's repo == my fault.
+  It also includes changes which are the result of investigation
+  regarding Windows STDIN. These changes are the preparation for further
+  improvements regarding support for reading data from STDIN on Windows.
   
-  Removed #37 from KNOWN_BUGS as this fix and test case verifies exactly
-  this.
+  Open issue: WaitForMultipleObjectsEx does not support PIPE handles
+  which are returned by GetStdHandle while running without a GUI.
 
-- [Joe Mason brought this change]
+- tests/server/sockfilt.c: Set Windows Console to binary mode
 
-  NTLM: re-use existing connection better
+- tests/server/sockfilt.c: Improved log error messages
   
-  If we need an NTLM connection and one already exists, always choose that
-  one.
+  Include error code and parameters in error messages.
 
-- [Joe Mason brought this change]
+Steve Holme (6 Jan 2013)
+- imap: Introduced the continue response in imap_endofresp()
 
-  NTLM: verify multiple connections work
+- imap: Added support for SASL based authentication mechanism detection
   
-  Add test2032 to test that NTLM does not switch connections in the middle
-  of the handshake
-
-- curl.1: list the -w variables sorted alphabetically
+  Added support for detecting the supported SASL authentication mechanisms
+  via the CAPABILITY command.
 
-- libcurl-share.3: remove wrong info of what can be shared
-  
-  "Currently you can only share DNS and/or COOKIE data" is incorrect since
-  also SSL sessions can be shared.
+Yang Tse (6 Jan 2013)
+- Revert changes relative to lib/*.[ch] recent renaming
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3562261
-  Reported by: Joe Mason
-
-- [Dave Reisner brought this change]
-
-  examples: use do/while loop for multi examples
+  This reverts renaming and usage of lib/*.h header files done
+  28-12-2012, reverting 2 commits:
   
-  It's conceivable that after the first time curl_multi_perform returns,
-  the outvalue still_running will be 0, but work will have been done. This
-  is shown by a workload of small, purely file:// based URLs. Ensure that
-  we always read pending messages off the multi handle by forcing the
-  while loop to run at least once.
-
-- curl.h: fix comment to refer to current names
+    f871de0... build: make use of 76 lib/*.h renamed files
+    ffd8e12... build: rename 76 lib/*.h files
   
-  CURLOPT_USE_SSL should be set to CURLUSESSL_* and nothing else in modern
-  libcurl versions.
-
-- ftpsget: simple example showing a FTPS fetch
-
-- sftpget: SFTP is not "SSH FTP"
-
-- [Armel Asselin brought this change]
-
-  sftpget: example showing a simple SFTP download
+  This also reverts removal of redundant include guard (redundant thanks
+  to changes in above commits) done 2-12-2013, reverting 1 commit:
   
-  ... using SSH-agent
-
-- curl_multi_perform.3: extended/clarified
-
-- INSTALL.cmake: clarify some flaws/limits in the cmake build
-
-- https.c example: spell check used define
+    c087374... curl_setup.h: remove redundant include guard
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3559845
-  Reported by: Olivier Berger
-
-- configure: update the copyright years for the output
-
-- [Nick Zitzmann brought this change]
-
-  darwinssl: add TLS 1.1 and 1.2 support, replace deprecated functions
+  This also reverts renaming and usage of lib/*.c source files done
+  3-12-2013, reverting 3 commits:
   
-  In Mountain Lion, Apple added TLS 1.1 and 1.2, and deprecated a number
-  of SecureTransport functions, some of which we were using. We now check
-  to see if the replacement functions are present, and if so, we use them
-  instead.  The old functions are still present for users of older
-  cats. Also fixed a build warning that started to appear under Mountain
-  Lion
-
-- curl_easy_setopt: documented CURLSOCKTYPE_ACCEPT for SOCKOPTFUNCTION
-
-- [Gokhan Sengun brought this change]
-
-  ftp: active conn, place calling sockopt callback at the end of function
+    13606bb... build: make use of 93 lib/*.c renamed files
+    5b6e792... build: rename 93 lib/*.c files
+    7d83dff... build: commit 13606bbfde follow-up 1
   
-  Commit b91d29a28e170c16d65d956db79f2cd3a82372d2 introduces a bug and breaks Curl_closesocket function. sock_accepted flag for the second socket should be tagged as TRUE before the sockopt callback is called because in case the callback returns an error, Curl_closesocket function is going to call the - fclosesocket - callback for the accept()ed socket
-
-- [Gokhan Sengun brought this change]
-
-  ftp: active conn, allow application to set sockopt after accept() call
+  Start of related discussion thread:
   
-  For active FTP connections, applications may need setting the sockopt after accept() call returns successful. This fix gives a call to the callback registered with CURL_SOCKOPTFUNCTION option. Also a new sock type - CURLSOCKTYPE_ACCEPT - is added. This type is to be passed to application callbacks with - purpose - parameter. Applications may use this parameter to distinguish between socket types.
-
-- configure: remove the --enable/disable-nonblocking options
+    http://curl.haxx.se/mail/lib-2013-01/0012.html
   
-  Removing this option as it currently only functions to lure people into
-  wrongly using it and falsely believing that libcurl will work fine
-  without using nonblocking sockets internally - which leads to hard to
-  track or understand errors.
-
-- [Ant Bryan brought this change]
-
-  MANUAL review
-
-- curl.1: shorten lines, avoid referring to libcurl instead of curl
-
-- [Ant Bryan brought this change]
-
-  curl.1: fix more consistent wording
+  Asking for confirmation on pushing this revertion commit:
   
-  "If this option is used several times, the last one will be used."
-  uniformity
-
-- ssh: use the libssh2 agent API conditionally
+    http://curl.haxx.se/mail/lib-2013-01/0048.html
   
-  Commit e351972bc89aa4c brought in the ssh agent support but some uses of
-  the libssh2 agent API was done unconditionally which wasn't good enough
-  since that API hasn't always been present.
-
-- white space fix: shorten long line
+  Confirmation summary:
   
-  ... to please checksrc.pl
-
-Kamil Dudka (9 Aug 2012)
-- docs: update the links to cipher-suites supported by NSS
+    http://curl.haxx.se/mail/lib-2013-01/0079.html
   
-  ... and make the list of cipher-suites in nss.c readable by humans.
+  NOTICE: The list of 2 files that have been modified by other
+  intermixed commits, while renamed, and also by at least one
+  of the 6 commits this one reverts follows below. These 2 files
+  will exhibit a hole in history unless git's '--follow' option
+  is used when viewing logs.
   
-  Bug: http://curl.haxx.se/mail/archive-2012-08/0016.html
-
-- nss: do not print misleading NSS error codes
+    lib/curl_imap.h
+    lib/curl_smtp.h
 
-Daniel Stenberg (8 Aug 2012)
-- RELEASE-NOTES: synced with 0774386b23
+Daniel Stenberg (6 Jan 2013)
+- mk-ca-bundle.1: convert syntax to what's used elsewhere
   
-  5 more bug fixes, one change, 6 contributors
-
-- [Armel Asselin brought this change]
-
-  docs: mention CURLSSH_AUTH_AGENT
-
-- [Armel Asselin brought this change]
+  ... mostly to make sure roffit works better on it, but also to make our
+  man pages use a more unified style.
 
-  SSH: added agent based authentication
+- mk-ca-bundle.1: mention new -f, fix outputfile output
   
-  CURLSSH_AUTH_AGENT is a new auth type for SSH
+  also edited a few sentences to become more verbose
 
-- bump version to 7.28.0
+- mk-ca-bundle: add -f, support passing to stdout and more
   
-  I am about to merge the first patch that adds changes into the pending
-  release, and thus we bump the minor number.
-
-- RELEASE-NOTES: added missing link
-
-- curl_version: fixed Value stored to 'len' is never read
+  1. When the downloaded data file from Mozilla is current, but the output
+  bundle does not exist: continue processing to create the bundle.  The
+  goal is to have the output file - not just download the latest input.
   
-  Fixed this (harmless) clang-analyzer warning. Also fixed the source
-  indentation level.
-
-- TODO-RELEASE: the (nil) bug is fixed
-
-- add_next_timeout: minor restructure of code
+  2. added -f option to force re-processing the file.  Useful for
+  debugging/testing the process.
   
-  By reading the ->head pointer and using that instead of the ->size
-  number to figure out if there's a list remaining we avoid the (false
-  positive) clang-analyzer warning that we might dereference of a null
-  pointer.
-
-- verbose messages: fixed output of hostnames in re-used connections
+  3. added support for output to '-' (stdout), allowing the output to be
+  piped.
   
-  I suspect this is a regression introduced in commit 207cf150, included
-  since 7.24.0.
+  4. All progress and error messages go to STDERR rather than STDOUT (3)
   
-  Avoid showing '(nil)' as hostname in verbose output by making sure the
-  hostname fixup function is called early enough to set the pointers that
-  are used for this. The name data is set again for each request even for
-  re-used connections to handle multiple hostnames over the same
-  connection (like with proxy) or that the casing etc of the host name is
-  changed between requests (which has proven to be important at least once
-  in the past).
+  5. The script opened and closed the output file many times
+  unnecessarily.  It now opens it once, does the output and closes it.
   
-  Test1011 was modified to use a redirect with a re-used a connection
-  since it then showed the bug and now lo longer does. There's currently
-  no easy way to have the test suite detect 'nil' texts in verbose ouputs
-  so no tests will detect if this problem gets reintroduced.
+  6. Backup of the input files happens after successful processing, not
+  before.
   
-  Bug: http://curl.haxx.se/mail/lib-2012-07/0111.html
-  Reported by: Gisle Vanem
-
-- [Nick Zitzmann brought this change]
-
-  metalink: Un-broke the build when building --with-darwinssl
-
-Guenter Knauf (8 Aug 2012)
-- Fix some compiler warnings.
-
-Daniel Stenberg (8 Aug 2012)
-- TODO-RELEASE: two bugs fixed
+  7. The output is written to a temporary file, and renamed to the
+  requested name after backup - this greatly reduces the window where the
+  file can be seen partially written.
   
-  These are now addressed:
+  8. all die calls have a \n at the end to suppress perl's traceback - the
+  traceback isn't useful to end users.
   
-  323 - patch - select.c / Curl_socket_check() interrupted
+  Patch: http://curl.haxx.se/mail/lib-2013-01/0045.html
+
+Yang Tse (5 Jan 2013)
+- imap test server: fix typo in name of SELECT_imap() sub definition
   
-  325 - Avoid leak of local device string when reusing connection
+  IMAP test server breaking typo introduced with commit b708a522a1
 
-- curl.1: minor format fix for --data-ascii
+Steve Holme (4 Jan 2013)
+- imap test server: Added support for the CAPABILITY command
   
-  ... and removal of trailing whitespace on a single line
+  Added support for the CAPABILITY command in preparation of upcoming
+  changes.
 
-- [Ant Bryan brought this change]
+Daniel Stenberg (3 Jan 2013)
+- writeout: -w now supports remote_ip/port and local_ip/port
+  
+  Added mention to the curl.1 man page.
+  
+  Test case 1223 verifies remote_ip/port.
 
-  curl man page cleanup
-
-- [Mike Crowe brought this change]
-
-  Avoid leak of local device string when reusing connection
-  
-  Ensure that the copy of the CURLOPT_INTERFACE string is freed if we
-  decide we can reuse an existing connection.
-
-- Curl_socket_check: fix timeout return value for select users
-  
-  This is the same fix applied for the conditional code that uses select()
-  that was already done for the poll specific code in commit
-  b61e8b81f5038.
-
-- [Maxime Larocque brought this change]
-
-  Curl_socket_check: fix return code for timeout
-  
-  We found a problem with ftp transfer using libcurl (7.23 and 7.25)
-  inside an application which is receiving unix signals (SIGUSR1,
-  SIGUSR2...) almost continuously. (Linux 2.4, PowerPC, HAVE_POLL_FINE
-  defined).
-  
-  Curl_socket_check() uses poll() to wait for the socket, and retries it
-  when a signal is received (EINTR). However, if a signal is received and
-  it also happens that the timeout has been reached, Curl_socket_check()
-  returns -1 instead of 0 (indicating an error instead of a timeout).
-  
-  In our case, the result is an aborted connection even before the ftp
-  banner is received from the server, and a return value of
-  CURLE_OUT_OF_MEMORY from curl_easy_perform() (Curl_pp_multi_statemach(),
-  in pingpong.c, actually returns OOM if Curl_socket_check() fails :-)
-  Funny to debug on a system on which OOM is a possible cause).
-  
-  Bug: http://curl.haxx.se/mail/lib-2012-07/0122.html
-
-- RELEASE-NOTES: synced with b4a558041fdf65c0
-
-- TODO-RELEASE: fixed another bug
-  
-  bug #3544688 "crash during retry with libcurl and SFTP"
-
-- WSAPoll: disabled on all windows builds
-  
-  Due to WSAPoll bugs, libcurl does not work as intended. When the cURL
-  library is used to setup a connection to an incorrect port, normally the
-  result is CURLE_COULDNT_CONNECT, /* 7 */, but due to the bug in WSAPoll,
-  the result now is CURLE_OPERATION_TIMEDOUT, /* 28 - the timeout time was
-  reached */.
-  
-  On August 1, Jan Koen Annot opened a case for this to Microsoft Premier
-  Online (https://premier.microsoft.com/).  The support engineer handling
-  the case wrote that the case description is quite clear.  He will try to
-  reproduce the issue and then proceed with troubleshooting it.
-  
-  Reported by: Jan Koen Annot
-  Bug: http://curl.haxx.se/mail/lib-2012-07/0310.html
-
-- retry request: only access the HTTP data if in fact HTTP
-  
-  When figuring out if the data stream needs to be rewound when the
-  request is to be resent, we must not access the HTTP struct unless the
-  protocol used is indeed HTTP...
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3544688
-
-- TODO: support DANE, we already support gnutls without gcrypt
-
-- curl-config: parentheses fix
-  
-  Braces, not parentheses, should be used for shell variable names.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3551460
-  Reported by: Edward Sheldrake
-
-- VC build: add define for openssl
-  
-  This fixes a build failure of lib/ssluse.c.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3552997
-
-- TODO-RELEASE: two bugs fixed!
-
-- globbing: fix segfault when >9 globs were used
-  
-  Stupid lack of range checks caused the code to overwrite local variables
-  after glob number nine. Added checks now.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3546353
-
-- [Joe Mason brought this change]
-
-  sws: close sockets properly
-  
-  Fix a bug where closed sockets (fd -1) were left in the all_sockets
-  list, because of missing parens in a pointer arithmetic expression
-  
-  Reenable the tests that were locking up due to this bug.
-
-- [Joe Mason brought this change]
-
-  Remove debug logs that were accidentally checked in
-
-- [Joe Mason brought this change]
-
-  Use select in sws, which has better cross-platform support than poll
-
-- [Joe Mason brought this change]
-
-  Use cross-platform curlx_nonblock instead of fcntl in sws
-
-- operate: fix clang-analyzer warnings for never read variables
-  
-  Two separate "Value stored to 'XXX' is never read" warnings
-
-- operate: fix clang-analyzer warning
-  
-  Value stored to 'separator' is never read
-
-- metalink: change code order to build with gnutls-nettle
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3554668
-  Reported by: Anthony G. Basile
-
-- gtls: fix build failure by including nettle-specific headers
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3554668
-  Reported by: Anthony G. Basile
-
-Guenter Knauf (6 Aug 2012)
-- Fixed compiler warning - argument is type long.
-
-Daniel Stenberg (6 Aug 2012)
-- DISABLED: disable the new tests that do NTLM
-  
-  The tests 2025, 2028 and 2031 don't work for me so I'll have them
-  disabled for now until we solve the problem.
-
-Joe Mason (3 Aug 2012)
-- Add tests of auth retries
-
-- Cleanup handshake after clean NTLM failure
-
-- Zero out auth structs before transfer
-
-- Add a polling loop in main to read from more than one socket at once. Add the O_NONBLOCK and
-  SO_KEEPALIVE flag to all sockets. Note that several loops which used to continue on a return value
-  of 0 (theoretical since 0 would never be returned without O_NONBLOCK) now break on 0 so that they
-  won't continue reading until after poll is called again.
-
-- Change return values of get_request, accept_connection and service_connection to add a return code
-  for non-blocking sockets: now -1 means error or connection finished, 1 means data was read, and 0
-  means there is no data available now so need to wait for poll (new return value)
-
-- Hoist the loop out of get_request, and make sure that it can be reentered when a request is
-  half-finished.
-  
-  Note the the req struct used to be re-initialized AFTER reading pipeline data, so now that we
-  initialize it from the caller we must be careful not to overwrite the pipeline data.
-  
-  Also we now need to handle the case where the buffer is already full when get_request is called -
-  previously this never happened as it was always called with an empty buffer and looped until done.
-  
-  Now get_request is called in a loop, so the next step is to run the loop on a socket only when poll
-  signals it is readable.
+Yang Tse (3 Jan 2013)
+- test 1222: 8 chars object name generation  &&  test 1221: adjustments
 
-- Move blocks of code from the sws main loop into their own functions for easier refactoring later.
-  The next step will be to call the correct function after a poll, rather than looping unconditionally
+Daniel Stenberg (3 Jan 2013)
+- INTERNALS: remove "footnote" never used
 
-- Remove the --fork option of sws, since it makes refactoring to use poll more complicated and should
-  be redundant once we poll
+Yang Tse (3 Jan 2013)
+- build: commit 13606bbfde follow-up 1
 
-Kamil Dudka (30 Jul 2012)
-- file: use fdopen() for uploaded files if available
-  
-  It eliminates noisy events when using inotify and fixes a TOCTOU issue.
-  
-  Bug: https://bugzilla.redhat.com/844385
+Daniel Stenberg (3 Jan 2013)
+- FAQ: Can I write a server with libcurl?
 
-Guenter Knauf (29 Jul 2012)
-- Added DWANT_IDN_PROTOTYPES define for MSVC too.
+Yang Tse (3 Jan 2013)
+- build: rename 93 lib/*.c files
   
-  Discussion on the list: http://curl.haxx.se/mail/lib-2012-07/0271.html
-
-- Added Win32 problems.
-
-- Added hint to read docs/INSTALL too.
-
-- Added new file to distro.
-
-Steve Holme (28 Jul 2012)
-- TODO: Updated after 7.27.0 release
+  93 lib/*.c source files renamed to use our standard naming scheme.
   
-  Removed APOP and SASL authentication from the POP3 section and metalink
-  support from the client section as these features were implemented in
-  this release.
+  This commit only does the file renaming.
   
-  Moved adding gssapi to SASL into it's own section rather than repeat it
-  for each protocol.
-
-Daniel Stenberg (28 Jul 2012)
-- TODO-RELEASE: updated after 7.27.0 release
-
-- THANKS: 12 new contributors from the 7.27.0 release
-
-- version bump: start towards next release
+  ----------------------------------------
   
-  Let's call it 7.27.1 for now, but it it probably going to become 7.28.0
-  when released.
-
-Version 7.27.0 (27 Jul 2012)
-
-Guenter Knauf (27 Jul 2012)
-- Fixed compiler warning 'unused parameter'.
-
-- Added prototypes to kill compiler warning.
-
-- Added --with-winidn to configure.
+    renamed:    lib/amigaos.c -> lib/curl_amigaos.c
+    renamed:    lib/asyn-ares.c -> lib/curl_asyn_ares.c
+    renamed:    lib/asyn-thread.c -> lib/curl_asyn_thread.c
+    renamed:    lib/axtls.c -> lib/curl_axtls.c
+    renamed:    lib/base64.c -> lib/curl_base64.c
+    renamed:    lib/bundles.c -> lib/curl_bundles.c
+    renamed:    lib/conncache.c -> lib/curl_conncache.c
+    renamed:    lib/connect.c -> lib/curl_connect.c
+    renamed:    lib/content_encoding.c -> lib/curl_content_encoding.c
+    renamed:    lib/cookie.c -> lib/curl_cookie.c
+    renamed:    lib/cyassl.c -> lib/curl_cyassl.c
+    renamed:    lib/dict.c -> lib/curl_dict.c
+    renamed:    lib/easy.c -> lib/curl_easy.c
+    renamed:    lib/escape.c -> lib/curl_escape.c
+    renamed:    lib/file.c -> lib/curl_file.c
+    renamed:    lib/fileinfo.c -> lib/curl_fileinfo.c
+    renamed:    lib/formdata.c -> lib/curl_formdata.c
+    renamed:    lib/ftp.c -> lib/curl_ftp.c
+    renamed:    lib/ftplistparser.c -> lib/curl_ftplistparser.c
+    renamed:    lib/getenv.c -> lib/curl_getenv.c
+    renamed:    lib/getinfo.c -> lib/curl_getinfo.c
+    renamed:    lib/gopher.c -> lib/curl_gopher.c
+    renamed:    lib/gtls.c -> lib/curl_gtls.c
+    renamed:    lib/hash.c -> lib/curl_hash.c
+    renamed:    lib/hmac.c -> lib/curl_hmac.c
+    renamed:    lib/hostasyn.c -> lib/curl_hostasyn.c
+    renamed:    lib/hostcheck.c -> lib/curl_hostcheck.c
+    renamed:    lib/hostip.c -> lib/curl_hostip.c
+    renamed:    lib/hostip4.c -> lib/curl_hostip4.c
+    renamed:    lib/hostip6.c -> lib/curl_hostip6.c
+    renamed:    lib/hostsyn.c -> lib/curl_hostsyn.c
+    renamed:    lib/http.c -> lib/curl_http.c
+    renamed:    lib/http_chunks.c -> lib/curl_http_chunks.c
+    renamed:    lib/http_digest.c -> lib/curl_http_digest.c
+    renamed:    lib/http_negotiate.c -> lib/curl_http_negotiate.c
+    renamed:    lib/http_negotiate_sspi.c -> lib/curl_http_negotiate_sspi.c
+    renamed:    lib/http_proxy.c -> lib/curl_http_proxy.c
+    renamed:    lib/idn_win32.c -> lib/curl_idn_win32.c
+    renamed:    lib/if2ip.c -> lib/curl_if2ip.c
+    renamed:    lib/imap.c -> lib/curl_imap.c
+    renamed:    lib/inet_ntop.c -> lib/curl_inet_ntop.c
+    renamed:    lib/inet_pton.c -> lib/curl_inet_pton.c
+    renamed:    lib/krb4.c -> lib/curl_krb4.c
+    renamed:    lib/krb5.c -> lib/curl_krb5.c
+    renamed:    lib/ldap.c -> lib/curl_ldap.c
+    renamed:    lib/llist.c -> lib/curl_llist.c
+    renamed:    lib/md4.c -> lib/curl_md4.c
+    renamed:    lib/md5.c -> lib/curl_md5.c
+    renamed:    lib/memdebug.c -> lib/curl_memdebug.c
+    renamed:    lib/mprintf.c -> lib/curl_mprintf.c
+    renamed:    lib/multi.c -> lib/curl_multi.c
+    renamed:    lib/netrc.c -> lib/curl_netrc.c
+    renamed:    lib/non-ascii.c -> lib/curl_non_ascii.c
+    renamed:    lib/curl_non-ascii.h -> lib/curl_non_ascii.h
+    renamed:    lib/nonblock.c -> lib/curl_nonblock.c
+    renamed:    lib/nss.c -> lib/curl_nss.c
+    renamed:    lib/nwlib.c -> lib/curl_nwlib.c
+    renamed:    lib/nwos.c -> lib/curl_nwos.c
+    renamed:    lib/openldap.c -> lib/curl_openldap.c
+    renamed:    lib/parsedate.c -> lib/curl_parsedate.c
+    renamed:    lib/pingpong.c -> lib/curl_pingpong.c
+    renamed:    lib/polarssl.c -> lib/curl_polarssl.c
+    renamed:    lib/pop3.c -> lib/curl_pop3.c
+    renamed:    lib/progress.c -> lib/curl_progress.c
+    renamed:    lib/qssl.c -> lib/curl_qssl.c
+    renamed:    lib/rawstr.c -> lib/curl_rawstr.c
+    renamed:    lib/rtsp.c -> lib/curl_rtsp.c
+    renamed:    lib/security.c -> lib/curl_security.c
+    renamed:    lib/select.c -> lib/curl_select.c
+    renamed:    lib/sendf.c -> lib/curl_sendf.c
+    renamed:    lib/share.c -> lib/curl_share.c
+    renamed:    lib/slist.c -> lib/curl_slist.c
+    renamed:    lib/smtp.c -> lib/curl_smtp.c
+    renamed:    lib/socks.c -> lib/curl_socks.c
+    renamed:    lib/socks_gssapi.c -> lib/curl_socks_gssapi.c
+    renamed:    lib/socks_sspi.c -> lib/curl_socks_sspi.c
+    renamed:    lib/speedcheck.c -> lib/curl_speedcheck.c
+    renamed:    lib/splay.c -> lib/curl_splay.c
+    renamed:    lib/ssh.c -> lib/curl_ssh.c
+    renamed:    lib/sslgen.c -> lib/curl_sslgen.c
+    renamed:    lib/ssluse.c -> lib/curl_ssluse.c
+    renamed:    lib/strdup.c -> lib/curl_strdup.c
+    renamed:    lib/strequal.c -> lib/curl_strequal.c
+    renamed:    lib/strerror.c -> lib/curl_strerror.c
+    renamed:    lib/strtok.c -> lib/curl_strtok.c
+    renamed:    lib/strtoofft.c -> lib/curl_strtoofft.c
+    renamed:    lib/telnet.c -> lib/curl_telnet.c
+    renamed:    lib/tftp.c -> lib/curl_tftp.c
+    renamed:    lib/timeval.c -> lib/curl_timeval.c
+    renamed:    lib/transfer.c -> lib/curl_transfer.c
+    renamed:    lib/url.c -> lib/curl_url.c
+    renamed:    lib/version.c -> lib/curl_version.c
+    renamed:    lib/warnless.c -> lib/curl_warnless.c
+    renamed:    lib/wildcard.c -> lib/curl_wildcard.c
   
-  This needs another look from the configure experts. I tested that
-  it works so far with MinGW64 cross-compiler; libcurl builds and
-  links fine, but curl not yet ...
-
-Daniel Stenberg (27 Jul 2012)
-- [Ant Bryan brought this change]
-
-  Update man page info on --metalink and typo.
+  ----------------------------------------
 
-- RELEASE-NOTES: remove mentioned of bug never in a release
+- build: make use of 93 lib/*.c renamed files
   
-  The --silent bug came with 7561a0fc834c435 which was never in a release.
-  Pointed out by Kamil Dudka
-
-- RELEASE-NOTES: synced with 33b815e894fb
+  93 *.c source files renamed to use our standard naming scheme.
   
-  4 more bugfixes, 3 more contributors
+  This change affects 77 files in libcurl's source tree.
 
-Guenter Knauf (26 Jul 2012)
-- Changed Windows IDN text to 'WinIDN'.
+Daniel Stenberg (3 Jan 2013)
+- INSTALL: unify the SSL library texts
   
-  Synced the output to the same short form as we now use for
-  Windows SSL (WinSSL).
+  Make them smaller and more similar for each separate SSL library
+  supported by the configure build
 
-Daniel Stenberg (25 Jul 2012)
-- [Nick Zitzmann brought this change]
+Yang Tse (2 Jan 2013)
+- curl_setup.h: remove redundant include guard
 
-  darwinssl: fixed freeze involving the multi interface
+- build and tests: curl_10char_object_name() shell function
   
-  Previously the curl_multi interface would freeze if darwinssl was
-  enabled and at least one of the handles tried to connect to a Web site
-  using HTTPS. Removed the "wouldblock" state darwinssl was using because
-  I figured out a solution for our "would block but in which direction?"
-  dilemma.
-
-Guenter Knauf (25 Jul 2012)
-- Added support for tls-srp to MinGW builds.
-
-Daniel Stenberg (24 Jul 2012)
-- curl_easy_setopt: fix typo
+  lib/objnames.inc provides definition of curl_10char_object_name() shell
+  function. The intended purpose of this function is to transliterate a
+  (*.c) source file name that may be longer than 10 characters, or not,
+  into a string with at most 10 characters which may be used as an OS/400
+  object name.
   
-  Reported by: Santhana Todatry
-
-- keepalive: multiply value for OS-specific units
+  Test case 1221 does unit testng of this function and also verifies
+  that it is possible to generate distinct short object names for all
+  curl and libcurl *.c source file names.
   
-  DragonFly uses milliseconds, while our API and Linux use full seconds.
+  lib/objnames-test.sh is the shell script used for test case 1221.
   
-  Reported by: John Marino
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3546257
-
-Kamil Dudka (22 Jul 2012)
-- http: print reason phrase from HTTP status line on error
+  tests/runtests.pl modified to accept shell script test cases.
   
-  Bug: https://bugzilla.redhat.com/676596
+  More details inside lib/objnames.inc and lib/objnames-test.sh
 
-- tool_operate: fix misplaced initialization of orig_noprogress
+- configure.ac: replace AM_CONFIG_HEADER with AC_CONFIG_HEADERS
   
-  ... and orig_isatty which caused --silent to be entirely ignored in case
-  the standard output was redirected to a file!
-
-Daniel Stenberg (21 Jul 2012)
-- [Anton Yabchinskiy brought this change]
-
-  Client's "qop" value should not be quoted (RFC2617, section 3.2.2).
-
-Guenter Knauf (21 Jul 2012)
-- Fixed typo.
-
-Daniel Stenberg (20 Jul 2012)
-- make: make distclean work again
+  automake 1.13 errors if AM_CONFIG_HEADER is used in configure script.
+  automake 1.13 no longer autoupdates AM_CONFIG_HEADER to
+  AC_CONFIG_HEADERS, thing which automake has been doing since automake
+  version 1.7
   
-  The clean-local hook needed some polish to make sure make distclean
-  works. Added comment describing why.
-
-- test Makefile: only feature 'unit' once in the list of dirs
-
-Dan Fandrich (20 Jul 2012)
-- Fixed some typos in documentation
-
-Guenter Knauf (20 Jul 2012)
-- Fixed CR issue with Win32 version on MSYS.
+  Given that our first automake supported version is automake 1.7,
+  simply replacing AM_CONFIG_HEADER usage with AC_CONFIG_HEADERS seems
+  enough to yet support same automake versions.
   
-  Previous fix didnt work on Linux ...
-
-- Fixed CR issue with Win32 version on MSYS.
-
-- Fixed MSYS <-> Windows path convertion.
+  Dave Reisner reported issue with 1.13 and provided patch.
   
-  Replaced the Windows real path from mount hack with a more
-  reliable and simpler hack: the MSYS shell has a builtin pwd
-  which understands a -W option which does convertion to Windows
-  paths. Tested and confirmed that this works on all MSYS versions
-  I have back to a 3 year old one.
+  http://curl.haxx.se/mail/lib-2012-12/0246.html
 
-- Follow-up fix to detect SSL libs with MinGW.
+- curl-override.m4: provide AC_CONFIG_MACRO_DIR definition conditionally
   
-  1) the check for winssl needs to come before nss check
-  2) the SSL checks must begin with a new if or else we will
-  never find any SSL lib with MinGW.
-
-- Tell git to not convert configure-related files.
+  Provide a 'traceable' AC_CONFIG_MACRO_DIR definition only when using
+  an autoconf version that does not provide it, instead of what we were
+  doing up to now of providing and overriding AC_CONFIG_MACRO_DIR for
+  all autoconf versions.
 
-- Trial to teach runtests.pl about WinSSL.
+Steve Holme (30 Dec 2012)
+- imap.c: Minor follow up tidy up
 
-- Fixed warning 'uninitialized value in numeric gt'.
+- imap: Code tidy up prior to adding support for the CAPABILITY command
   
-  This is a MSYS/MinGW-only warning; full warning text is:
-  Use of uninitialized value in numeric gt (>) at ../../curl/tests/runtests.pl line 2227.
+  * Changing the order of the state machine to represent the order in
+    which commands are sent to the server.
+  
+  * Reworking the imap_endofresp() function as the FETCH response doesn't
+    include the command id and shouldn't be part of the length comparison
+    that takes into account the id string.
 
-Daniel Stenberg (15 Jul 2012)
-- RELEASE-NOTES: synced with 9d11716933616
+- pop3_doing: Applied debug info message when function fails
   
-  Fixed 6 bugs, added 3 contributors
+  Applied the same debug message as used in smtp_doing() and imap_doing()
+  when pop3_multi_statemach() fails.
 
-- multi_runsingle: added precaution against easy_conn NULL pointer
+- imap_doing: don't call imap_dophase_done() if already failed
   
-  In many states the easy_conn pointer is referenced and just assumed to
-  be working. This is an added extra check since analyzing indicates
-  there's a risk we can end up in these states with a NULL pointer there.
+  Applied the POP3 fix from commit 2897ce7dc2e1 so imap_dophase_done()
+  isn't called if imap_multi_statemach() fails.
 
-- getparam: fix the GetStr() macro
+- smtp_doing: don't call smtp_dophase_done() if already failed
   
-  It should return PARAM_NO_MEM if the strdup fails. Spotted by
-  clang-analyzer
+  Applied the POP3 fix from commit 2897ce7dc2e1 so smtp_dophase_done()
+  isn't called if smtp_multi_statemach() fails.
 
-Guenter Knauf (15 Jul 2012)
-- Tell git to not convert configure-related files.
+Yang Tse (29 Dec 2012)
+- examples/certinfo.c: fix compiler warning
 
-Daniel Stenberg (13 Jul 2012)
-- parse_proxy: remove dead assignment
+Steve Holme (29 Dec 2012)
+- pop3.c: Removed unnecessary POP3_STOP state changes
   
-  Spotted by clang-analyzer
+  Removed unnecessary state changes in pop3_state_starttls_resp()
+  following previous fix in IMAP module.
 
-- ftp_do_more: add missing check of return code
+- smtp.c: Added extra comments around SMTP_STOP state change
   
-  Spotted by clang-analyzer. The return code was never checked, just
-  stored.
+  Provided extra comments in the SMTP module following previous IMAP fix.
 
-- getinfo: use va_end and cut off Curl_ from static funcs
+- imap.c: Fixed bad state error when logging in with invalid credentials
   
-  va_end() needs to be used after va_start() and we don't normally use
-  Curl_ prefixes for purely static functions.
-
-- [Philip Craig brought this change]
+  Fixed a problem with the state machine when attempting to log in with
+  invalid credentials. The server would report login failure but libcurl
+  would not read the response due to inappropriate IMAP_STOP states being
+  set after the login was sent.
 
-  Split up Curl_getinfo
-  
-  This avoids false positives from clang's scan-build.
+Yang Tse (29 Dec 2012)
+- imap.c: remove trailing whitespace
 
-Guenter Knauf (12 Jul 2012)
-- Added error checking for curl_global_init().
+Steve Holme (28 Dec 2012)
+- imap.c: Code tidy up - Part 2
 
-- Added curl_global_* functions.
+- imap.c: Code tidy up - Part 1
+  
+  Applied some of the comment and layout changes that had already been
+  applied to the pop3 and smtp code over the last 6 to 9 months.
+  
+  This is in preparation of adding SASL based authentication.
 
-- Minor fixes to MinGW makefiles.
+- pop3.c: Minor code tidy up
+  
+  Minor tidy up of comments and layout prior to next part of imap work.
 
-Daniel Stenberg (12 Jul 2012)
-- docs: mention CURL_GLOBAL_DEFAULT
+- smtp: Minor code tidy up
+  
+  Minor tidy up of comments and layout prior to next part of imap work.
 
-Guenter Knauf (12 Jul 2012)
-- Added curl_global_* functions.
+- curl_imap.h: Tidy up of comments to be more readable
 
-Daniel Stenberg (12 Jul 2012)
-- tests: verify the stricter numeric option parser
+- imap.c: Code tidy up renaming imapsendf() to imap_sendf()
   
-  Test 1409 and 1410 verifies the stricter numeric option parser
-  introduced the other day in commit f2b6ebed7b.
+  Renamed imapsendf() to imap_sendf() to be more in keeping with the
+  other imap functions as well as Curl_pp_sendf() that it replaces.
 
-- SWS: use of uninitialized memory fix
+Yang Tse (28 Dec 2012)
+- build: rename 76 lib/*.h files
   
-  I made "connmon" not get initialized properly before use, and I use the
-  big hammer and make sure we always clear the entire struct to avoid any
-  problem like this in the future.
-
-- test48: verify that HEAD doesn't close extra
+  76 private header files renamed to use our standard naming scheme.
   
-  Two commits ago, we fixed a bug where the connction would be closed
-  prematurely after a HEAD. Now I added connection-monitor to test 48 and
-  added a second HEAD and make sure that both are sent over the same
-  connection.
+  This commit only does the file renaming.
   
-  This triggered a failure before the bug fix and now works. Will help us
-  avoid a future regression of this kind.
-
-- connection-monitor: always log disconnect when enabled
+  ----------------------------------------
   
-  This makes verifying easier and makes us more sure curl closes the
-  connection only at the correct point in time. Adjusted test 206 and 1008
-  accordingly and updated the docs for it.
+    renamed:    amigaos.h -> curl_amigaos.h
+    renamed:    arpa_telnet.h -> curl_arpa_telnet.h
+    renamed:    asyn.h -> curl_asyn.h
+    renamed:    axtls.h -> curl_axtls.h
+    renamed:    bundles.h -> curl_bundles.h
+    renamed:    conncache.h -> curl_conncache.h
+    renamed:    connect.h -> curl_connect.h
+    renamed:    content_encoding.h -> curl_content_encoding.h
+    renamed:    cookie.h -> curl_cookie.h
+    renamed:    cyassl.h -> curl_cyassl.h
+    renamed:    dict.h -> curl_dict.h
+    renamed:    easyif.h -> curl_easyif.h
+    renamed:    escape.h -> curl_escape.h
+    renamed:    file.h -> curl_file.h
+    renamed:    fileinfo.h -> curl_fileinfo.h
+    renamed:    formdata.h -> curl_formdata.h
+    renamed:    ftp.h -> curl_ftp.h
+    renamed:    ftplistparser.h -> curl_ftplistparser.h
+    renamed:    getinfo.h -> curl_getinfo.h
+    renamed:    gopher.h -> curl_gopher.h
+    renamed:    gtls.h -> curl_gtls.h
+    renamed:    hash.h -> curl_hash.h
+    renamed:    hostcheck.h -> curl_hostcheck.h
+    renamed:    hostip.h -> curl_hostip.h
+    renamed:    http.h -> curl_http.h
+    renamed:    http_chunks.h -> curl_http_chunks.h
+    renamed:    http_digest.h -> curl_http_digest.h
+    renamed:    http_negotiate.h -> curl_http_negotiate.h
+    renamed:    http_proxy.h -> curl_http_proxy.h
+    renamed:    if2ip.h -> curl_if2ip.h
+    renamed:    imap.h -> curl_imap.h
+    renamed:    inet_ntop.h -> curl_inet_ntop.h
+    renamed:    inet_pton.h -> curl_inet_pton.h
+    renamed:    krb4.h -> curl_krb4.h
+    renamed:    llist.h -> curl_llist.h
+    renamed:    memdebug.h -> curl_memdebug.h
+    renamed:    multiif.h -> curl_multiif.h
+    renamed:    netrc.h -> curl_netrc.h
+    renamed:    non-ascii.h -> curl_non-ascii.h
+    renamed:    nonblock.h -> curl_nonblock.h
+    renamed:    nssg.h -> curl_nssg.h
+    renamed:    parsedate.h -> curl_parsedate.h
+    renamed:    pingpong.h -> curl_pingpong.h
+    renamed:    polarssl.h -> curl_polarssl.h
+    renamed:    pop3.h -> curl_pop3.h
+    renamed:    progress.h -> curl_progress.h
+    renamed:    qssl.h -> curl_qssl.h
+    renamed:    rawstr.h -> curl_rawstr.h
+    renamed:    rtsp.h -> curl_rtsp.h
+    renamed:    select.h -> curl_select.h
+    renamed:    sendf.h -> curl_sendf.h
+    renamed:    setup.h -> curl_setup.h
+    renamed:    setup_once.h -> curl_setup_once.h
+    renamed:    share.h -> curl_share.h
+    renamed:    slist.h -> curl_slist.h
+    renamed:    smtp.h -> curl_smtp.h
+    renamed:    sockaddr.h -> curl_sockaddr.h
+    renamed:    socks.h -> curl_socks.h
+    renamed:    speedcheck.h -> curl_speedcheck.h
+    renamed:    splay.h -> curl_splay.h
+    renamed:    ssh.h -> curl_ssh.h
+    renamed:    sslgen.h -> curl_sslgen.h
+    renamed:    ssluse.h -> curl_ssluse.h
+    renamed:    strdup.h -> curl_strdup.h
+    renamed:    strequal.h -> curl_strequal.h
+    renamed:    strerror.h -> curl_strerror.h
+    renamed:    strtok.h -> curl_strtok.h
+    renamed:    strtoofft.h -> curl_strtoofft.h
+    renamed:    telnet.h -> curl_telnet.h
+    renamed:    tftp.h -> curl_tftp.h
+    renamed:    timeval.h -> curl_timeval.h
+    renamed:    transfer.h -> curl_transfer.h
+    renamed:    url.h -> curl_url.h
+    renamed:    urldata.h -> curl_urldata.h
+    renamed:    warnless.h -> curl_warnless.h
+    renamed:    wildcard.h -> curl_wildcard.h
+  
+  ----------------------------------------
 
-- HEAD: don't force-close after response-headers
+- build: make use of 76 lib/*.h renamed files
   
-  A HEAD response has no body length and gets the headers like the
-  corresponding GET would so it should not get closed after the response
-  based on the same rules. This mistake caused connections that did HEAD
-  to get closed too often without a valid reason.
+  76 private header files renamed to use our standard naming scheme.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3542731
-  Reported by: Eelco Dolstra
+  This change affects 322 files in libcurl's source tree.
 
-Guenter Knauf (12 Jul 2012)
-- Removed trailing empty strings from awk script.
+- lib/*.h: use our standard naming scheme for header inclusion guards
 
-- Cleaned up version awk script.
+Steve Holme (28 Dec 2012)
+- imsp.c: Fixed usernames and passwords that contain escape characters
+  
+  Fixed a problem with sending usernames and passwords that contain
+  backslash, quotation mark and space characters.
 
-- Added project copyright header.
+Daniel Stenberg (27 Dec 2012)
+- curl.1: extend the -X, --request description
 
-- Removed libcurl.imp from Makefile.am.
-  
-  Updated .gitignore for NetWare created files.
+- RELEASE-NOTES: synced with e3ed2b82e6
 
-- Added missing dependency to export list.
+- [Nick Zitzmann brought this change]
 
-- Fixed export list path.
+  darwinssl: Fixed inability to disable peer verification
+  
+  ... on Snow Leopard and Lion
+  
+  Snow Leopard introduced the SSLSetSessionOption() function, but it
+  doesn't disable peer verification as expected on Snow Leopard or
+  Lion (it works as expected in Mountain Lion). So we now use sysctl()
+  to detect whether or not the user is using Snow Leopard or Lion,
+  and if that's the case, then we now use the deprecated
+  SSLSetEnableCertVerify() function instead to disable peer verification.
 
-- Changed NetWare build to generate export list.
+Yang Tse (26 Dec 2012)
+- curl tool: rename hugehelp files to tool_hugehelp
 
-- Added pointer to FAQ for linkage errors.
+- curl tool: renaming hugehelp files to tool_hugehelp
 
-- Small NetWare makefile tweak.
+- sockfilt.c: commit b44da5a82a follow-up 2
 
-- Changed MinGW makefiles to use WINSSL now.
+- sockfilt.c: commit b44da5a82a follow-up
 
-Daniel Stenberg (10 Jul 2012)
-- test231: fix wrong -C use!
+- sockfilt.c: fix some compiler warnings
 
-- cmdline: parse numerical options stricter
-  
-  1 - str2offset() no longer accepts negative numbers since offsets are by
-  nature positive.
-  
-  2 - introduced str2unum() for the command line parser that accepts
-  numericals which are not supposed to be negative, so that it will
-  properly complain on apparent bad uses and mistakes.
-  
-  Bug: http://curl.haxx.se/mail/archive-2012-07/0013.html
+- curl_multi_remove_handle: commit 0aabfd9963 follow-up
+
+Daniel Stenberg (25 Dec 2012)
+- lib556: enable VERBOSE to ease debugging on failures
 
-- docs: switch to proper UTF-8 for text file encoding
+Marc Hoersken (25 Dec 2012)
+- socklift.c: Quick fix to re-add missing code
 
-Yang Tse (9 Jul 2012)
-- Make Curl_schannel_version() return "WinSSL"
-  
-  Modification based on voting result:
+- socklift.c: Added select_ws function to support Windows
   
-  http://curl.haxx.se/mail/lib-2012-07/0104.html
+  WinSock select() does not support standard file descriptors,
+  it can only check SOCKETs. The following function is an attempt
+  to create a select() function with support for other handles.
 
-Daniel Stenberg (9 Jul 2012)
-- test 46: use different path lengths to get reliable sort order
-  
-  Since the order of the cookies is sorted by the length of the paths,
-  having them on the same path length will make the test depend on what
-  order the qsort() implementation will put them. As seen in the
-  windows/msys output posted by Guenter in this posting:
-  http://curl.haxx.se/mail/lib-2012-07/0105.html
+Yang Tse (25 Dec 2012)
+- Enable tests 1503, 1504 and 1505
 
-- cookie: fixed typo in comment
+- curl_multi_remove_handle: fix memory leak triggered with CURLOPT_RESOLVE
 
-- [Christian Hägele brought this change]
+- Curl_hash_clean: OOM handling fix
 
-  https_getsock: provided for schannel backend as well
+- test 1504 and 1505: same as 1502 but with different cleanup sequences
+
+Daniel Stenberg (24 Dec 2012)
+- Curl_conncache_foreach: allow callback to break loop
   
-  The function https_getsock was only implemented properly when USE_SSLEAY
-  or USE_GNUTLS is defined, but it is also necessary for USE_SCHANNEL.
+  ... and have it take a proper 'struct connectdata *' as first argument
+
+- pop3_doing: don't call pop3_dophase_done() if already failed
   
-  The problem occurs when Curl_read_plain or Curl_write_plain returns
-  CURLE_AGAIN. In that case CURL_OK is returned to the multi-interface an
-  the used socket is set to state CURL_POLL_REMOVE and the easy-state is
-  set to CURLM_STATE_PROTOCONNECT. This is fine, because later the socket
-  should be set to CURL_POLL_IN or CURL_POLL_OUT via multi_getsock. That's
-  where https_getsock is called and doesn't return any sockets.
+  ... it also clobbered the 'result' return value so that it wouldn't
+  return the error back to the parent function properly, which broke test
+  809 when run with 'multi-always'.
 
-- RELEASE-NOTES: added a URL reference to cookie docs
+Yang Tse (23 Dec 2012)
+- test 1503: same as 1502 but with a different cleanup sequence
 
-Guenter Knauf (8 Jul 2012)
-- Removed obsolete include path to project root.
+- test 1502: OOM handling fixes
 
-Daniel Stenberg (8 Jul 2012)
-- TODO-RELEASE: issue 316 NTLM over proxy is fixed
+- curl_multi_wait: OOM handling fix
 
-- [Nick Zitzmann brought this change]
+- [Daniel Stenberg brought this change]
 
-  darwinssl: don't use arc4random_buf
-  
-  Re-wrote Curl_darwinssl_random() to not use arc4random_buf() because the
-  function is not available prior to iOS 4.3 and OS X 10.7.
+  curl_multi_wait: avoid an unnecessary memory allocation
 
-- KNOWN_BUGS: #80 Curl doesn't recognize certs in DER format
+- runtests.pl: prepend $srcdir to HTTPTLS server config files path
 
-- KNOWN_BUGS: #79 - any RCPT TO failure makes and error
+- multi.c: OOM handling fix
 
-Marc Hoersken (8 Jul 2012)
-- winbuild: Aligned BUILD.WINDOWS.txt and Makefile.vc usage help
+- lib543.c: OOM handling fixes
 
-- winbuild: Make USE_WINSSL depend on USE_SSPI
-  
-  Since WinSSL cannot be build without SSPI being enabled,
-  USE_WINSSL now defaults to the value of USE_SSPI.
-  
-  The makefile does now raise an error if WinSSL is enabled
-  while SSPI is disabled.
+- configure: add internal sanity check (warn only) on vars for makefiles
 
-- winbuild: Aligned USE_SSPI with other USE_x defines
+Daniel Stenberg (21 Dec 2012)
+- SCP: relative path didn't work
   
-  Renamed external parameter USE_SSPI = yes/no to ENABLE_SSPI = yes/no.
-  Backwards compatible change: USE_SSPI can still be passed as external
-  parameter with yes/no value as long as ENABLE_SSPI is not given.
+  When prefixing a path with /~/ it is supposed to be used relative to the
+  user's home directory but it didn't work. Now we cut off the entire
+  three byte sequenct "/~/" which seems to be how OpenSSH does it.
   
-  USE_x defines are passed around with true/false values internally,
-  USE_SSPI is now aligned to this approach, but still accepts external
-  values yes/no being passed, just like the other defines.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1173
+  Reported by: Balaji Parasuram
 
-- winbuild: Clean up formatting and variable naming
-  
-  - Changed space usage to line up with the whole file
-  - Renamed CFLAGS_SSPI/IPV6 to SSPI/IPV6_CFLAGS to be
-    consistent with the other CFLAGS_x variables
-  - Make use of existing CFLAGS_IPV6 (previously IPV6_CFLAGS)
-    instead of appending directly to CFLAGS
+Yang Tse (21 Dec 2012)
+- configure: LIBMETALINK_CFLAGS actually is LIBMETALINK_CPPFLAGS
 
-Daniel Stenberg (7 Jul 2012)
-- [Nick Zitzmann brought this change]
+- configure: add minimal sanity check on user provided CFLAGS and CPPFLAGS
 
-  darwinssl: output cipher with text, remove SNI warning
-  
-  The code was printing a warning when SNI was set up successfully. Oops.
-  
-  Printing the cipher number in verbose mode was something only TLS/SSL
-  programmers might understand, so I had it print the name of the cipher,
-  just like in the OpenSSL code. That'll be at least a little bit easier
-  to understand. The SecureTransport API doesn't have a method of getting
-  a string from a cipher like OpenSSL does, so I had to generate the
-  strings manually.
+- bundles connection caching: some out of memory handling fixes
 
-- RELEASE-NOTES: synced with 5a99bce07d
+- libntlmconnect.c: fix compiler warnings and OOM handling
 
-- KNOWN_BUGS: NTLM with unicode works with schannel/winssl!
-  
-  Bug #75 updated with additional info, still remains for builds with
-  other backends.
+- configure.ac: clear local test intended variables before use
 
-- code police: narrow source to < 80 columns
+- VC6 IDE: link with advapi32.lib when using WIN32 crypto API (md5.c)
 
-Yang Tse (5 Jul 2012)
-- unicode NTLM SSPI: cleanup follow-up
+- curl-functions.m4: improve gethostname arg 2 data type check
 
-- unicode NTLM SSPI: cleanup
+- setup_once.h: HP-UX specific 'bool', 'false' and 'true' definitions.
   
-  Reduce the number of #ifdef UNICODE directives used in source files.
+  Also reverts commit f254c59dc7
 
-Daniel Stenberg (5 Jul 2012)
-- tests: use connection-monitor and verify results
-  
-  Test 1008 and 206 don't show the disconnect since it happens when SWS
-  awaits a new request, but 503 does and so the verify section needs that
-  string added.
+- configure: check if compiler halts on function prototype mismatch
+
+- warnless.c: fix compiler warnings
+
+- curl-functions.m4: add gethostname arg 2 data type check and definition
+
+Daniel Stenberg (14 Dec 2012)
+- [Nick Zitzmann brought this change]
 
-- http-proxy: keep CONNECT connections alive (for NTLM)
+  darwinssl: Fix implicit conversion compiler warnings
   
-  When doing CONNECT requests, libcurl must make sure the connection is
-  alive as much as possible. NTLM requires it and it is generally good for
-  other cases as well.
+  The Clang compiler found a few implicit conversion problems that have
+  now been fixed.
+
+Yang Tse (14 Dec 2012)
+- setup_once.h: HP-UX <sys/socket.h> issue workaround
   
-  NTLM over CONNECT requests has been broken since this regression I
-  introduced in my CONNECT cleanup commits that started with 41b02378342,
-  included since 7.25.0.
+  Issue: When building a 32bit target with large file support HP-UX
+  <sys/socket.h> header file may simultaneously provide two different
+  sets of declarations for sendfile and sendpath functions, one with
+  static and another with external linkage. Given that we do not use
+  mentioned functions we really don't care which linkage is the
+  appropriate one, but on the other hand, the double declaration emmits
+  warnings when using the HP-UX compiler and errors when using modern
+  gcc versions resulting in fatal compilation errors.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3538625
-  Reported by: Marcel Raad
+  Mentioned issue is now fixed as long as we don't use sendfile nor
+  sendpath functions.
 
-- sws: support <servercmd> for CONNECT requests
+- setup_once.h: refactor inclusion of <unistd.h> and <sys/socket.h>
   
-  I moved out the servercmd parsing into a its own function called
-  parse_servercmd() and made sure it gets used also when the test number
-  is extracted from CONNECT requests. It turned out sws didn't do that
-  previously!
-
-- FILEFORMAT: provided a full description of connection-monitor
+  Inclusion of top two most included header files now done in setup_once.h
 
-- lib503: enable verbose to ease debugging this
+- setup_once.h: HP-UX specific TRUE and FALSE definitions
+  
+  Some HP-UX system headers require TRUE defined to 1 and FALSE to 0.
 
-- sws: add 'connection-monitor' command support
+Daniel Stenberg (12 Dec 2012)
+- gopher: #include cleanup
   
-  Using this, the server will output in the protocol log when the
-  connection gets disconnected and thus we will verify correctly in the
-  test cases that the connection doesn't get closed prematurely. This is
-  important for example NTLM to work.
+  Remove all system file includes from this file as they're not needed
   
-  Documentation added to FILEFORMAT, test 503 updated to use this.
+  Reported by: Dan Fandrich
 
-Guenter Knauf (4 Jul 2012)
-- Removed non-used variable.
+Yang Tse (11 Dec 2012)
+- examples/simplessl.c: fix compiler warning
 
-- Added error checking for samples.
+- examples/externalsocket.c: fix SunPro compilation issue
 
-- Renamed vars to avoid shadow global declaration.
+- examples/simplessl.c: fix compiler warning
 
-Daniel Stenberg (3 Jul 2012)
-- docs: clarify how to start with curl_multi_socket_action
-  
-  Mention the CURL_SOCKET_TIMEOUT argument in step 6 of the typical
-  application.
+- build: add bundles and conncache files to other build systems
 
-Guenter Knauf (3 Jul 2012)
-- Moved some patterns to subfolder's .gitignore.
+- conncache: fix enumerated type mixed with another type
 
-- Merge branch 'master' of ssh://github.com/bagder/curl
+- examples/anyauthput.c: fix Tru64 compilation issue
 
-- MinGW makefile tweaks for running from sh.
-  
-  Added function macros to make path converting easier.
-  Added CROSSPREFIX to all compile tools.
+Daniel Stenberg (8 Dec 2012)
+- [Colin Watson brought this change]
 
-Yang Tse (3 Jul 2012)
-- [Marc Hoersken brought this change]
+  configure: fix cross pkg-config detection
+  
+  When cross-compiling, CURL_CHECK_PKGCONFIG was checking for the cross
+  pkg-config using ${host}-pkg-config.
+  
+  The gold standard for doing this correctly is pkg-config's own macro,
+  PKG_PROG_PKG_CONFIG.  However, on the assumption that you have a good
+  reason not to use that directly (reduced dependencies for maintainer
+  builds?), the behaviour of cURL's version should at least match.
+  PKG_PROG_PKG_CONFIG uses AC_PATH_TOOL, which ultimately ends up trying
+  ${host_alias}-pkg-config; this is not quite the same as what cURL does,
+  and may differ because ${host} has been run through config.sub.  For
+  instance, when cross-building to the armhf architecture on Ubuntu,
+  ${host_alias} is arm-linux-gnueabihf while ${host} is
+  arm-unknown-linux-gnueabihf.  This may also have been the cause of the
+  problem reported at http://curl.haxx.se/mail/lib-2012-04/0224.html.
+  
+  AC_PATH_TOOL is significantly simpler than cURL's current code, and
+  dates back to well before the current minimum of Autoconf 2.57, so let's
+  use it instead.
 
-  curl_ntlm_msgs.c: Removed unused variable passwd
+- [Linus Nielsen Feltzing brought this change]
 
-Guenter Knauf (3 Jul 2012)
-- Added files generated by mingw32, eclipse and VC.
+  Introducing a new persistent connection caching system using "bundles".
+  
+  A bundle is a list of all persistent connections to the same host.
+  The connection cache consists of a hash of bundles, with the
+  hostname as the key.
+  The benefits may not be obvious, but they are two:
+  
+  1) Faster search for connections to reuse, since the hash
+     lookup only finds connections to the host in question.
+  2) It lays out the groundworks for an upcoming patch,
+     which will introduce multiple HTTP pipelines.
   
-  Posted by Marc Hoersken.
+  This patch also removes the awkward list of "closure handles",
+  which were needed to send QUIT commands to the FTP server
+  when closing a connection.
+  Now we allocate a separate closure handle and use that
+  one to close all connections.
+  
+  This has been tested in a live system for a few weeks, and of
+  course passes the test suite.
 
-Daniel Stenberg (3 Jul 2012)
-- cookies: change the URL in the cookie jar file header
+- [Fabian Keil brought this change]
 
-- HTTP-COOKIES: clarified and modified layout
+  runtests and friends: Do not add undefined values to @INC
+  
+  On FreeBSD this fixes the warning:
+  Use of uninitialized value $p in string eq at /usr/local/lib/perl5/5.14.2/BSDPAN/BSDPAN.pm line 36.
 
-- HTTP-COOKIES: use the FAQ document layout
+Steve Holme (5 Dec 2012)
+- Merge pull request #52 from isn-/master
+  
+  small compilation fix
 
-- HTTP-COOKIES: added cookie documentation
+Stanislav Ivochkin (5 Dec 2012)
+- build: fix compilation with CURL_DISABLE_CRYPTO_AUTH flag
 
-Yang Tse (3 Jul 2012)
-- curl_ntlm_msgs.c: include <tchar.h> for prototypes
+Yang Tse (5 Dec 2012)
+- libtest: fix some compiler warnings
 
-- [Neil Bowers brought this change]
+- examples: fix compilation issues - commit 7332a7cafb follow-up
 
-  testcurl.pl: fix missing semicolon
+- examples: fix compilation issues - commit 23f8dca6fb follow-up
 
-Daniel Stenberg (2 Jul 2012)
-- [Christian Hägele brought this change]
+- examples: fix compilation issues
 
-  unicode NTLM SSPI: heap corruption fixed
+- build: explain current role of LIBS in our Makefile.am files
   
-  When compiling libcurl with UNICODE defined and using unicode characters
-  in username.
-
-Yang Tse (2 Jul 2012)
-- testcurl.pl: allow non in-tree c-ares enabled autobuild
+  BLANK_AT_MAKETIME may be used in our Makefile.am files to blank
+  LIBS variable used in generated makefile at makefile processing
+  time. Doing this functionally prevents LIBS from being used for
+  all link targets in given makefile.
 
-- configure.ac: verify that libmetalink is new enough
+Daniel Stenberg (4 Dec 2012)
+- multi: fix re-sending request on early connection close
   
-  Enabling test2017 to test2022.
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  curl: Added runtime version check for libmetalink
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  Include metalink/metalink.h for libmetalink functions
-
-Daniel Stenberg (2 Jul 2012)
-- errors: CURLM_CALL_MULTI_PERFORM is not returned anymore
+  This handling already works with the easy-interface code. When a request
+  is sent on a re-used connection that gets closed by the server at the
+  same time as the request is sent, the situation may occur so that we can
+  send the request and we discover the broken connection as a RECV_ERROR
+  in the PERFORM state and then the request needs to be retried on a fresh
+  connection. Test 64 broke with 'multi-always-internally'.
 
-- release: cleaned up plans for this and coming release
+Yang Tse (4 Dec 2012)
+- configure: add minimal sanity check on user provided LIBS and LDFLAGS
 
-Yang Tse (29 Jun 2012)
-- curl-compilers.m4: remove -Wstrict-aliasing=3 from clang
+- build: prevent global LIBS from influencing src and lib build targets
   
-  Currently it is unknown if there is any version of clang that
-  actually supports -Wstrict-aliasing. What is known is that there
-  are several that don't support it.
+  Currently, LIBS is already used through other macros.
 
-- test2017 to test2022: more metalink tests
-  
-  With this commit, checks done in previous test2017 are now done in test2018.
+Kamil Dudka (3 Dec 2012)
+- nss: prevent NSS from crashing on client auth hook failure
   
-  Whole range test2017 to test2022 DISABLED until configure is capable of
-  requiring a new-enough metalink library.
+  Although it is not explicitly stated in the documentation, NSS uses
+  *pRetCert and *pRetKey even if the client authentication hook returns
+  a failure.  Namely, if we destroy *pRetCert without clearing *pRetCert
+  afterwards, NSS destroys the certificate once again, which causes a
+  double free.
   
-  Don't try these without mentioned check in place!
+  Reported by: Bob Relyea
 
-- test2005 to test2016: improve failure detection
+Yang Tse (30 Nov 2012)
+- testcurl.pl: build example programs for several autobuilds
+  
+  Affected autobuilds: IRIX, AIX, Tru64 and AIX.
 
-- lib582.c: fix conversion warning
+- build: prevent global LIBS from influencing examples build targets
 
-- nss.c: #include warnless.h for curlx_uztosi and curlx_uztoui prototypes
+- build: prevent global LIBS from influencing libtest build targets
 
-- [Marc Hoersken brought this change]
+- build: prevent global LIBS from influencing test server build targets
 
-  nss.c: Fixed size_t conversion warnings
+- build: fix Windows build targets damaged since commit 550e403f00
 
-- sslgen.c: cleanup temporary compile-time SSL-backend check
+- build: avoid linkage of directly unused libraries
 
-Daniel Stenberg (28 Jun 2012)
-- schannel: provide two additional (dummy) API defines
+- dd missing NTLM feature for tests 2025, and 2028 to 2032
 
-Yang Tse (28 Jun 2012)
-- [Tatsuhiro Tsujikawa brought this change]
+- avoid mixing of enumerated type with another type
 
-  Metalink: message updates
-  
-  Print "parsing (...) OK" only when no warnings are generated.  If
-  no file is found in Metalink, treat it FAILED.
-  
-  If no digest is provided, print WARNING in parse_metalink().
-  Also print validating FAILED after download.
-  
-  These changes make tests 2012 to 2016 pass.
+- multi.c: disambiguate precedence of bitwise and relational operation
 
-Daniel Stenberg (27 Jun 2012)
-- sslgen: avoid compiler error in SSPI builds
+Daniel Stenberg (26 Nov 2012)
+- [Fabian Keil brought this change]
 
-Yang Tse (27 Jun 2012)
-- ssluse.c: fix compiler warning: conversion to 'int' from 'size_t'
+  Remove stray CRLF in chunk-encoded content-free request bodies
   
-  Reported by Tatsuhiro Tsujikawa
+  .. that are sent when auth-negotiating before a chunked
+  upload or when setting the 'Transfer-Encoding: chunked'
+  header and intentionally sending no content.
   
-  http://curl.haxx.se/mail/lib-2012-06/0371.html
-
-- sslgen.c: add compile-time check for SSL-backend completeness
-
-- build: add our standard includes to curl_darwinssl.c and curl_multibyte.c
-
-- build: add curl_schannel and curl_darwinssl files to other build systems
+  Adjust test565 and test1333 accordingly.
 
-- tests: add five more Metalink test cases
+- FAQ: clarify the 3.4 section
+  
+  You can do custom commands to FTP without sending anything by using the
+  CURLOPT_NOBODY, which -I sets.
 
-- tests: update Metalink message format
+- [Lijo Antony brought this change]
 
-- [Tatsuhiro Tsujikawa brought this change]
+  examples: Updated asiohiper.cpp to remove connect from opensocket
+  
+  Blocking connect on the socket has been removed from opensocket
+  callback. opensocket just opens a new socket and gives it back to
+  libcurl and libcurl will take care of the connect. sockopt_callback has
+  also been removed, as it is no longer required.
 
-  Metalink: updated message format
+Yang Tse (23 Nov 2012)
+- build: fix AIX compilation and usage
+  
+  AIX sys/poll.h header file defines 'events' and 'revents' as C
+  preprocessor macros. Usage of these literals in libcurl's external
+  API was introduced in commit de24d7bd4c causing AIX build failures.
+  Appropriate inclusion of sys/poll.h by libcurl's external interface
+  fixes AIX build and usage issues while avoiding a SONAME bump.
 
-- [Nick Zitzmann brought this change]
+Steve Holme (23 Nov 2012)
+- DOCS: Updated CURLOPT_CONNECT_ONLY to reflect usage in other protocols
 
-  DarwinSSL: allow using NTLM authentication
+Daniel Stenberg (23 Nov 2012)
+- test: offer "automake" output and check for perl better
   
-  Allow NTLM authentication when building using SecureTransport (Darwin) for SSL.
+  runtests.pl -am now uses the "PASS/FAIL: [desc]" output for each
+  executed test. You can run 'make test-am' in the root build directory to
+  invoke that. The reason for this output style is to better allow generic
+  test suite parsers to also grok our test output.
   
-  This uses CommonCrypto, a cryptography library that ships with all versions of
-  iOS and Mac OS X. It's like OpenSSL's libcrypto, except that it's missing a few
-  less-common cyphers and doesn't have a big number data structure.
+  The test Makefile now also tests that perl was indeed found and that the
+  PERL variable points to an executable before it tries to run the main
+  test perl script runtests.pl,
 
-- curl_darwinssl.h: add newline at end of file
+- [Fabian Keil brought this change]
 
-Daniel Stenberg (26 Jun 2012)
-- ossl_seed: remove leftover RAND_screen check
-  
-  Before commit 2dded8fedba (dec 2010) there was logic that used
-  RAND_screen() at times and now I remove the leftover #ifdef check for
-  it.
+  Test 206: Use a Content-Length header for the 407 response
   
-  The seeding code that uses Curl_FormBoundary() in ossl_seed() is dubious
-  to keep since it hardly increases randomness but I fear I'll break
-  something if I remove it now...
+  Otherwise curl would have to guess where the body ends.
 
-Yang Tse (26 Jun 2012)
-- [Nick Zitzmann brought this change]
+- [Fabian Keil brought this change]
 
-  DarwinSSL: several adjustments
+  Test 206: Don't respond to a succesful CONNECT request with a body
   
-  - Renamed st_ function prefix to darwinssl_
-  - Renamed Curl_st_ function prefix to Curl_darwinssl_
-  - Moved the duplicated ssl_connect_done out of the #ifdef in lib/urldata.h
-  - Fixed a teensy little bug that made non-blocking connection attempts block
-  - Made it so that it builds cleanly against the iOS 5.1 SDK
+  It's against the spec and caused test failures when header
+  and response were read from the network separately in which
+  case bug #39 wasn't triggered.
 
-- curl-compilers.m4: -Wstrict-aliasing=3 for warning enabled gcc and clang builds
+- htmltitle: use .cpp extension for C++ examples
 
-- [Marc Hoersken brought this change]
+- [Lijo Antony brought this change]
 
-  sockaddr.h: Fixed dereferencing pointer breakin strict-aliasing
+  examples: Added a c++ example of using multi with boost::asio
   
-  Fixed warning: dereferencing pointer does break strict-aliasing rules
-  by using a union inside the struct Curl_sockaddr_storage declaration.
+  Added an example for demonstrating the usage of curl multi interface
+  with boost::asio in c++
 
-Daniel Stenberg (26 Jun 2012)
-- SSL cleanup: use crypto functions through the sslgen layer
+- VC Makefiles: add missing hostcheck
+  
+  the newly introduced hostcheck.h/c is missing in the Visual Studio
+  Makefiles as obj file.
   
-  curl_ntlm_msgs.c would previously use an #ifdef maze and direct
-  SSL-library calls instead of using the SSL layer we have for this
-  purpose.
+  Bug: http://curl.haxx.se/mail/lib-2012-11/0176.html
 
-- [Nick Zitzmann brought this change]
+- compiler warning fixes
+  
+  The conversions from ssize_t to int need to be typecasted.
 
-  darwinssl: add support for native Mac OS X/iOS SSL
+- bump: start working on 7.28.2
 
-- RELEASE-NOTES: link to more metalink info
+- THANKS: added 14 contributors from the 7.28.1 release
 
-- RELEASE-NOTES: synced with d025af9bb576
+Version 7.28.1 (20 Nov 2012)
 
-Yang Tse (25 Jun 2012)
-- curl_schannel.c: Remove redundant NULL assignments following Curl_safefree()
+Daniel Stenberg (20 Nov 2012)
+- RELEASE-NOTES: synced with 52af6e69f079 / 7.28.1
 
-- [Marc Hoersken brought this change]
+Kamil Dudka (20 Nov 2012)
+- [Anthony Bryan brought this change]
 
-  curl_schannel.c: Replace free() with Curl_safefree()
+  RELEASE-NOTES: NSS can be used for metalink hashing
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  curl.1: Updated Metalink description in man page
+  Get test 2032 working when using valgrind
   
-  Documented that --include will be ignored if both --metalink
-  and --include are specified.
-  Also documented that a Metalink file in the local file system
-  cannot be used if FILE protocol is disabled.
+  If curl_multi_fdset() sets maxfd to -1, the socket detection
+  loop is skipped and thus !found_new_socket is no cause for alarm.
 
-Steve Holme (24 Jun 2012)
-- DOCS: Added clarification to CURLOPT_CUSTOMREQUEST for the POP3 protocol
+- test2032: spurious failure caused by premature termination
   
-  Bug: http://curl.haxx.se/mail/lib-2012-06/0302.html
-  Reported by: Nagai H
+  Bug: http://curl.haxx.se/mail/lib-2012-11/0095.html
 
-- smtp: Corrected result code for MAIL, RCPT and DATA commands
-  
-  Bug: http://curl.haxx.se/mail/lib-2012-06/0094.html
-  Reported by: Dan
+Daniel Stenberg (19 Nov 2012)
+- [Fabian Keil brought this change]
 
-Daniel Stenberg (24 Jun 2012)
-- [Ghennadi Procopciuc brought this change]
+  Fix comment typos in test 517
 
-  test: Added test HTTP receive cookies over IPv6
+- [Fabian Keil brought this change]
 
-Yang Tse (22 Jun 2012)
-- tests: add another Metalink test case
+  Test 92 and 194: normalize spaces in the Server headers
+  
+  It makes no difference from curl's point of view but
+  makes it more convenient to use the tests with a
+  lws-normalizing proxy between curl and the test server.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  tests: Enable test2010 and fixed hash value
+  Add a HOSTIP precheck for tests 31 and 1105
+  
+  They currently only work for 127.0.0.1 which
+  is hardcoded and can't be easily changed.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  Metalink: ignore --include if --metalink is used.
+  Let test 8 work as long as %HOSTIP ends with ".0.0.1"
   
-  Including headers in response body will break Metalink XML parser.
-  If it is included in the file described in Metalink XML, hash check
-  will fail. Therefore, --include should be ignored if --metalink is
-  used.
-
-- tests: add six Metalink test cases
+  .. and add a precheck to skip the test otherwise.
 
-- test 2005: add verification of hash checking outcome
+- [Fabian Keil brought this change]
 
-- getpart.pm: remove misleading comment
+  Add --resolve to the keywords and name of test 1318
+  
+  This makes it easier to skip it automatically when
+  the test suite is used with external proxies.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  curl: Prefixed all Metalink related messages with "Metalink: "
+  Add FTP keywords for a couple of currently keyword-less FTP tests
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  tests: Added Metalink test case # 2005
+  Add keywords for a couple of currently keyword-less HTTP tests
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  curl: Restore noprogress and isatty config values.
+  Use carriage returns in all headers in test 31
   
-  The noprogress and isatty in Configurable are global, in a sense
-  that they persist in one curl invocation. Currently once one
-  download writes its response data to tty, they are set to FALSE
-  and they are not restored on successive downloads.  This change
-  first backups the current noprogress and isatty, and restores
-  them when download does not write its data to tty.
+  Trailing spaces were left unmodifed, assuming they were intentional.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Fabian Keil brought this change]
 
-  curl: Made --metalink option toggle Metalink functionality
+  Do not mix CRLF and LF header endings in a couple of HTTP tests
   
-  In this change, --metalink option no longer takes argument.  If
-  it is specified, given URIs are processed as Metalink XML file.
-  If given URIs are remote (e.g., http URI), curl downloads it
-  first. Regardless URI is local file (e.g., file URI scheme) or
-  remote, Metalink XML file is not written to local file system and
-  the received data is fed into Metalink XML parser directly.  This
-  means with --metalink option, filename related options like -O
-  and -o are ignored.
+  Consistently use CRLF instead. The mixed endings weren't
+  documented so I assume they were unintentional.
   
-  Usage examples:
+  This change doesn't matter for curl itself but makes using
+  the tests with a proxy between curl and the test server
+  more convenient.
   
-  $ curl --metalink http://example.org/foo.metalink
+  Tests that consistently use no carriage returns were
+  left unmodified as one can easily work around this.
+
+- fixed memory leak: CURLOPT_RESOLVE with multi interface
   
-  This will download foo.metalink and parse it and then download
-  the URI described there.
+  DNS cache entries populated with CURLOPT_RESOLVE were not properly freed
+  again when done using the multi interface.
   
-  $ curl --metalink file://foo.metalink
+  Test case 1502 added to verify.
   
-  This will parse local file foo.metalink and then download the URI
-  described there.
-
-- [Tatsuhiro Tsujikawa brought this change]
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3575448
+  Reported by: Alex Gruz
 
-  curl: Refactored metalink_checksum
+- RELEASE-NOTES: synced with ee588fe08807778
   
-  When creating metalink_checksum from metalink_checksum_t, first
-  check hex digest is valid for the given hash function.  We do
-  this check in the order of digest_aliases so that first good
-  match will be chosen (strongest hash function available).  As a
-  result, the metalinkfile now only contains at most one
-  metalink_checksum because other entries are just redundant.
-
-- [Gisle Vanem brought this change]
+  4 more bug fixes and 4 more contributors
 
-  tool_doswin.c: fix djgpp function _use_lfn() used without a prototype
+- mem-include-scan: verify memory #includes
   
-  http://curl.haxx.se/mail/archive-2012-06/0028.html
-
-- build: fix RESOURCE bug in lib/Makefile.vc*
+  If we use memory functions (malloc, free, strdup etc) in C sources in
+  libcurl and we fail to include curl_memory.h or memdebug.h we either
+  fail to properly support user-provided memory callbacks or the memory
+  leak system of the test suite fails.
   
-  Removed two, not intended to exist, RESOURCE declarations.
+  After Ajit's report of a failure in the first category in http_proxy.c,
+  I spotted a few in the second category as well. These problems are now
+  tested for by test 1132 which runs a perl program that scans for and
+  attempts to check that we use the correct include files if a memory
+  related function is used in the source code.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3535977
+  Reported by: Ajit Dhumale
+  Bug: http://curl.haxx.se/mail/lib-2012-11/0125.html
+
+- tftp_rx: code style cleanup
   
-  And sorted configuration hunks to reflect same internal order
-  as the one shown in the usage message.
+  Fixed checksrc warnings
 
-Daniel Stenberg (20 Jun 2012)
-- [Marc Hoersken brought this change]
+- [Fabian Keil brought this change]
 
-  schannel: Implement new buffer size strategy
+  Fix the libauthretry changes from 7c0cbcf2f61
   
-  Increase decrypted and encrypted cache buffers using limitted
-  doubling strategy. More information on the mailinglist:
-  http://curl.haxx.se/mail/lib-2012-06/0255.html
-  
-  It updates the two remaining reallocations that have already been there
-  and fixes the other one to use the same "do we need to increase the
-  buffer"-condition as the other two.  CURL_SCHANNEL_BUFFER_STEP_SIZE was
-  renamed to CURL_SCHANNEL_BUFFER_FREE_SIZE since that is actually what it
-  is now.  Since we don't know how much more data we are going to read
-  during the handshake, CURL_SCHANNEL_BUFFER_FREE_SIZE is used as the
-  minimum free space required in the buffer for the next operation.
-  CURL_SCHANNEL_BUFFER_STEP_SIZE was used for that before, too, but since
-  we don't have a step size now, the define was renamed.
-
-Yang Tse (20 Jun 2012)
-- schannel SSL: fix compiler warning
+  They broke the NTLM tests from 2023 to 2031.
 
-- [Mark Salisbury brought this change]
+- [Christian Vogt brought this change]
 
-  schannel SSL: fix for renegotiate problem
+  tftp_rx: handle resends
+  
+  Re-send ACK for block X in case we receive block X data again while
+  waiting for block X+1.
   
-  In schannel_connect_step2() doread should be initialized based
-  on connssl->connecting_state.
+  Based on an earlier patch by Marcin Adamski.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- autoconf: don't force-disable compiler debug option
+  
+  When nothing is told to configure, we should not enforce switching off
+  debug options with -g0 (or similar). We instead don't use -g at all in
+  that situaion and therefore allow the user's CFLAGS settings possibly
+  dictate what to do.
 
-  runtests.pl: make it support metalink feature
+- [Mark Snelling brought this change]
 
-- getpart.pm: make test definition section/part parser more robust
+  winbuild: Fix PDB file output
   
-  Test definition section parts which needed to include xml-lingo as contents
-  of that part required that the xml-blurb was written as a single line. Now the
-  xml-data inside the part can be written multiline making it more readable.
+  And fix some newlines to be proper CRLF
   
-  Tested with <client><file> part which is written to disk before <command> runs.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3586741
 
-Daniel Stenberg (20 Jun 2012)
-- schannel_connect_step2: checksrc whitespace fix
+- RELEASE-NOTES: synced with fa1ae0abcde
 
-Yang Tse (20 Jun 2012)
-- [Mark Salisbury brought this change]
+- [Cristian Rodríguez brought this change]
 
-  schannel SSL: changes in schannel_connect_step2
+  OpenSSL: Disable SSL/TLS compression
   
-  Process extra data buffer before returning from schannel_connect_step2.
-  Without this change I've seen WinCE hang when schannel_connect_step2
-  returns and calls Curl_socket_ready.
+  It either causes increased memory usage or exposes users
+  to the "CRIME attack" (CVE-2012-4929)
+
+- [Sebastian Rasmussen brought this change]
+
+  FILE: Make upload-writes unbuffered by not using FILE streams
+
+Kamil Dudka (13 Nov 2012)
+- tool_metalink: fix error detection of hash alg initialization
   
-  If the encrypted handshake does not fit in the intial buffer (seen with
-  large certificate chain), increasing the encrypted data buffer is necessary.
+  The {MD5,SHA1,SHA256}_Init functions from OpenSSL are called directly
+  without any wrappers and they return 1 for success, 0 otherwise.  Hence,
+  we have to use the same approach in all the wrapper functions that are
+  used for the other crypto libraries.
   
-  Fixed warning in curl_schannel.c line 1215.
+  This commit fixes a regression introduced in commit dca8ae5f.
 
-- [Mark Salisbury brought this change]
+Daniel Stenberg (13 Nov 2012)
+- RELEASE-NOTES: synced with 7c0cbcf2f617b
 
-  config-win32ce.h: WinCE config adjustment
-  
-  process.h is not present on WinCE
+- [Sergei Nikulov brought this change]
 
-- [Mark Salisbury brought this change]
+  fixed Visual Studio 2010 compilation
 
-  schannel SSL: Made send method handle unexpected cases better
-  
-  Implemented timeout loop in schannel_send while sending data.  This
-  is as close as I think we can get to write buffering; I put a big
-  comment in to explain my thinking.
+- [Anton Malov brought this change]
+
+  ftp: EPSV-disable fix over SOCKS
   
-  With some committer adjustments
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3586338
 
-Daniel Stenberg (19 Jun 2012)
-- [Marc Hoersken brought this change]
+Patrick Monnerat (12 Nov 2012)
+- Merge branch 'master' of github.com:bagder/curl
+
+- OS400: upgrade wrappers for the 7.28.1 release.
 
-  curl_schannel.c: Avoid unnecessary realloc calls to reduce buffer size
+Daniel Stenberg (12 Nov 2012)
+- runtests: limit execessive logging/output
 
-Yang Tse (19 Jun 2012)
-- [Mark Salisbury brought this change]
+- [Gabriel Sjoberg brought this change]
 
-  schannel SSL: Use standard Curl read/write methods
+  Digst: Add microseconds into nounce calculation
+  
+  When using only 1 second precision, curl doesn't create new cnonce
+  values quickly enough for all uses.
+  
+  For example, issuing the following command multiple times to a recent
+  Tomcat causes authentication failures:
+  
+  curl --digest -utest:test http://tomcat.test.com:8080/manager/list
+  
+  This is because curl uses the same cnonce for several seconds, but
+  doesn't increment the nonce counter.  Tomcat correctly interprets
+  this as a replay attack and rejects the request.
   
-  Replaced calls to swrite with Curl_write_plain and calls to sread
-  with Curl_read_plain.
+  When microsecond-precision is available, this commit causes curl to
+  change cnonce values much more frequently.
   
-  With some committer adjustments
-
-- schannel SSL: make wording of some trace messages better reflect reality
-
-Daniel Stenberg (19 Jun 2012)
-- [Marc Hoersken brought this change]
+  With microsecond resolution, increasing the nounce length used in the
+  headers to 32 was made to further reduce the risk of duplication.
 
-  curl_schannel.h: Use BUFSIZE as the initial buffer size if available
+- SCP/SFTP: improve error code used for send failures
   
-  Make the Schannel implementation use libcurl's default buffer size
-  for the initial received encrypted and decrypted data cache buffers.
-  The implementation still needs to handle more data since more data
-  might have already been received or decrypted during the handshake
-  or a read operation which needs to be cached for the next read.
-
-Guenter Knauf (19 Jun 2012)
-- Fixed NetWare makefile broken from last commit.
+  Instead of relying on the generic CURLE error for SCP or SFTP send
+  failures, try passing back a more suitable error if possible.
 
-Yang Tse (19 Jun 2012)
-- [Mark Salisbury brought this change]
+- Curl_write: remove unneeded typecast
 
-  schannel SSL: Implemented SSL shutdown
+Kamil Dudka (9 Nov 2012)
+- tool_metalink: allow to use hash algorithms provided by NSS
   
-  curl_schannel.c - implemented graceful SSL shutdown.  If we fail to
-  shutdown the connection gracefully, I've seen schannel try to use a
-  session ID for future connects and the server aborts the connection
-  during the handshake.
+  Fixes bug #3578163:
+  http://sourceforge.net/tracker/?func=detail&atid=100976&aid=3578163&group_id=976
 
-- [Mark Salisbury brought this change]
+- tool_metalink: allow to handle failure of hash alg initialization
 
-  schannel SSL: certificate validation on WinCE
+- tool_metalink: introduce metalink_cleanup() in the internal API
   
-  curl_schannel.c - auto certificate validation doesn't seem to work
-  right on CE.  I added a method to perform the certificate validation
-  which uses CertGetCertificateChain and manually handles the result.
-
-- [Mark Salisbury brought this change]
+  ... to release resources allocated at global scope
 
-  schannel SSL: Added helper methods to simplify code
+Daniel Stenberg (8 Nov 2012)
+- hostcheck: only build for the actual users
   
-  Added helper methods InitSecBuffer() and InitSecBufferDesc() to make it
-  easier to set up SecBuffer & SecBufferDesc structs.
-
-Guenter Knauf (18 Jun 2012)
-- Some more NetWare makefile tweaks for metalink.
-
-Yang Tse (18 Jun 2012)
-- tool_cb_see.c: WinCE build adjustment
-
-- [Mark Salisbury brought this change]
-
-  setup.h: WinCE build adjustment
-
-- [Mark Salisbury brought this change]
+  and make local function static
 
-  ftplistparser.c: do not compile if FTP protocol is not enabled
+- [Oscar Koeroo brought this change]
 
-- Win32: downplay MS bazillion type synonyms game
+  SSL: Several SSL-backend related fixes
   
-  Avoid usage of some MS type synonyms to allow compilation with
-  compiler headers that don't define these, using simpler synonyms.
-
-Daniel Stenberg (15 Jun 2012)
-- Curl_rtsp_parseheader: avoid useless malloc/free
+  axTLS:
   
-  Coverity actually pointed out flawed logic in the previous call to
-  Curl_strntoupper() where the code used sizeof() of a pointer to pass in
-  a size argument. That code still worked since it only needed to
-  uppercase 4 letters. Still, the entire malloc/uppercase/free sequence
-  was pointless since the code has already matched the string once in the
-  condition that starts the block of code.
-
-- curl_share_setopt: use va_end()
+  This will make the axTLS backend perform the RFC2818 checks, honoring
+  the VERIFYHOST setting similar to the OpenSSL backend.
   
-  As spotted by Coverity, va_end() was not used previously. To make it
-  used I took away a bunch of return statements and made them into
-  assignments instead.
-
-Yang Tse (15 Jun 2012)
-- SSPI related code: Unicode support for WinCE - kill compiler warnings
-
-- [Mark Salisbury brought this change]
-
-  SSPI related code: Unicode support for WinCE - commit 46480bb9 follow-up
-
-- build: add curl_multibyte files to build systems
-
-- [Mark Salisbury brought this change]
-
-  SSPI related code: Unicode support for WinCE
+  Generic for OpenSSL and axTLS:
   
-  SSPI related code now compiles with ANSI and WCHAR versions of security
-  methods (WinCE requires WCHAR versions of methods).
+  Move the hostcheck and cert_hostcheck functions from the lib/ssluse.c
+  files to make them genericly available for both the OpenSSL, axTLS and
+  other SSL backends. They are now in the new lib/hostcheck.c file.
   
-  Pulled UTF8 to WCHAR conversion methods out of idn_win32.c into their own file.
+  CyaSSL:
   
-  curl_sasl.c - include curl_memory.h to use correct memory functions.
+  CyaSSL now also has the RFC2818 checks enabled by default. There is a
+  limitation that the verifyhost can not be enabled exclusively on the
+  Subject CN field comparison. This SSL backend will thus behave like the
+  NSS and the GnuTLS (meaning: RFC2818 ok, or bust). In other words:
+  setting verifyhost to 0 or 1 will disable the Subject Alt Names checks
+  too.
   
-  getenv.c and telnet.c - WinCE compatibility fix
+  Schannel:
   
-  With some committer adjustments
-
-Guenter Knauf (15 Jun 2012)
-- Fixed typo.
-
-Yang Tse (14 Jun 2012)
-- winbuild/MakefileBuild.vc: convert line endings to DOS style
+  Updated the schannel information messages: Split the IP address usage
+  message from the verifyhost setting and changed the message about
+  disabling SNI (Server Name Indication, used in HTTP virtual hosting)
+  into a message stating that the Subject Alternative Names checks are
+  being disabled when verifyhost is set to 0 or 1. As a side effect of
+  switching off the RFC2818 related servername checks with
+  SCH_CRED_NO_SERVERNAME_CHECK
+  (http://msdn.microsoft.com/en-us/library/aa923430.aspx) the SNI feature
+  is being disabled. This effect is not documented in MSDN, but Wireshark
+  output clearly shows the effect (details on the libcurl maillist).
   
-  As per request on mailing list: http://curl.haxx.se/mail/lib-2012-06/0222.html
-
-- [Marc Hoersken brought this change]
-
-  winbuild: Allow SSPI build with or without Schannel
+  PolarSSL:
   
-  The changes introduced in commit 2bfa57bc32 are not enough
-  to make it actually possible to use the USE_WINSSL option.
-  Makefile.vc was not updated and the configuration name which is
-  used in the build path did not match between both build files.
+  Fix the prototype change in PolarSSL of ssl_set_session() and the move
+  of the peer_cert from the ssl_context to the ssl_session. Found this
+  change in the PolarSSL SVN between r1316 and r1317 where the
+  POLARSSL_VERSION_NUMBER was at 0x01010100. But to accommodate the Ubuntu
+  PolarSSL version 1.1.4 the check is to discriminate between lower then
+  PolarSSL version 1.2.0 and 1.2.0 and higher. Note: The PolarSSL SVN
+  trunk jumped from version 1.1.1 to 1.2.0.
   
-  This patch fixes those issues and introduces the following changes:
+  Generic:
   
-  - Replaced the -schannel name with -winssl in order to be consistent
-  with the other options
-  - Added ENABLE_WINSSL option to winbuild/Makefile.vc (default yes)
-  - Changed winbuild/MakefileBuild.vc to set USE_WINSSL to true if
-  USE_SSL is false and USE_WINSSL was not specified as a parameter
-  - Separated WINSSL handling from SSPI handling to be consistent with
-  the other options and their corresponding code path
-
-- curl.1: 7.27.0 seems next release
-
-- schannel: fix printf-style format strings
+  All the SSL backends are fixed and checked to work with the
+  ssl.verifyhost as a boolean, which is an internal API change.
 
-- Fix bad failf() and info() usage
+- libcurl: VERSIONINFO update
   
-  Calls to failf() are not supposed to provide trailing newline.
-  Calls to infof() must provide trailing newline.
+  Since we added the curl_multi_wait function, the VERSIONINFO needed
+  updating.
   
-  Fixed 30 or so strings.
+  Reported by: Patrick Monnerat
 
-- schannel: fix unused parameter warnings
+Guenter Knauf (8 Nov 2012)
+- Added .def file to output.
+  
+  Requested by Johnny Luong on the libcurl list.
 
-- schannel: fix comparisons between signed and unsigned
+- Added deps for static metalink-aware MinGW builds.
 
-- schannel: fix discarding qualifier from pointer type
+Daniel Stenberg (8 Nov 2012)
+- [Fabian Keil brought this change]
 
-- schannel: fix shadowing of global declarations
+  Fix compilation of lib1501
 
-- schannel: fix Curl_schannel_init() and Curl_schannel_cleanup() declarations
+- Curl_readwrite: remove debug output
+  
+  The text "additional stuff not fine" text was added for debug purposes a
+  while ago, but it isn't really helping anyone and for some reason some
+  Linux distributions provide their libcurls built with debug info still
+  present and thus (far too many) users get to read this info.
 
-- [Gisle Vanem brought this change]
+- RELEASE-NOTES: synced with 487538e87a3d5e
+  
+  6 new bugfixes and 3 more contributors...
 
-  urldata.h: fix cyassl/openssl/ssl.h build clash with wincrypt.h
+- http_perhapsrewind: consider NTLM over proxy too
   
-  Building with CyaSSL failed compilation. Reason being that OCSP_REQUEST and
-  OCSP_RESPONSE are enum values in CyaSSL and defines in <wincrypt.h> included
-  via <winldap.h> in ldap.c.
+  The logic previously checked for a started NTLM negotiation only for
+  host and not also with proxy, leading to problems doing POSTs over a
+  proxy NTLM that are larger than 2000 bytes. Now it includes proxy in the
+  check.
   
-  http://curl.haxx.se/mail/lib-2012-06/0196.html
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3582321
+  Reported by: John Suprock
+
+- [Lars Buitinck brought this change]
+
+  Curl_connecthost: friendlier "couldn't connect" message
 
-- MakefileBuild.vc: Allow building without SSL
+- test1413: verify redirects to URLs with fragments
   
-  In order to use Windows native SSL support define 'USE_WINSSL'
+  The bug report claimed it didn't work. This problem was probably fixed
+  in 473003fbdf.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3581898
 
-- configure: new option --with-winssl
+- URL parser: cut off '#' fragments from URLs (better)
   
-  This option may be used to build curl/libcurl using SSL/TLS support provided
-  by MS windows system libraries. Option is mutually exclusive with any other
-  SSL library. Default value is --without-winssl.
+  The existing logic only cut off the fragment from the separate 'path'
+  buffer which is used when sending HTTP to hosts. The buffer that held
+  the full URL used for proxies were not dealt with. It is now.
   
-  --with-winssl option implies --with-sspi option.
+  Test case 5 was updated to use a fragment on a URL over a proxy.
   
-  Option meaningful only for Windows builds.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3579813
 
-Guenter Knauf (13 Jun 2012)
-- Changed Schannel string to SSL-Windows-native.
+- OpenSSL/servercert: use correct buffer size, not size of pointer
   
-  This is more descriptive for the user who might
-  not even know what schannnel is at all.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3579286
 
-Yang Tse (13 Jun 2012)
-- schannel: remove version number and identify its use with 'schannel' literal
+- curl: set CURLOPT_SSL_VERIFYHOST to 0 to disable
+
+- test 2027/2030: take duplicate Digest requests into account
   
-  Version number is removed in order to make this info consistent with
-  how we do it with other MS and Linux system libraries for which we don't
-  provide this info.
+  With the reversion of ce8311c7e49eca and the new clear logic, this flaw
+  is present and we allow it.
+
+- Curl_pretransfer: clear out unwanted auth methods
   
-  Identifier changed from 'WinSSPI' to 'schannel' given that this is the
-  actual provider of the SSL/TLS support. libcurl can still be built with
-  SSPI and without SCHANNEL support.
+  As a handle can be re-used after having done HTTP auth in a previous
+  request, it must make sure to clear out the HTTP types that aren't
+  wanted in this new request.
 
-Daniel Stenberg (12 Jun 2012)
-- singlesocket: remove dead code
+- test1412: verify Digest with repeated URLs
   
-  No need to check if 'entry' is non-NULL in a spot where it is already checked
-  and guaranteed to be non-NULL.
+  This test case verifies that bug 3582718 is fixed.
   
-  (Spotted by a Coverity scan)
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3582718
+  Reported by: Nick Zitzmann (originally)
 
-- netrc: remove dead code
+- Revert "Zero out auth structs before transfer"
   
-  Remove two states from the enum and the corresponding code for them as
-  these states were never reached or used.
+  This reverts commit ce8311c7e49eca93c136b58efa6763853541ec97.
   
-  (Spotted by a Coverity scan)
+  The commit made test 2024 work but caused a regression with repeated
+  Digest authentication. We need to fix this differently.
 
-Yang Tse (12 Jun 2012)
-- Revert "connect.c/ftp.c: Fixed dereferencing pointer breakin strict-aliasing"
+- CURLOPT_SSL_VERIFYHOST: stop supporting the 1 value
   
-  This reverts commit 9c94236e6cc078a0dc5a78b6e2fefc1403e5375e.
+  After a research team wrote a document[1] that found several live source
+  codes out there in the wild that misused the CURLOPT_SSL_VERIFYHOST
+  option thinking it was a boolean, this change now bans 1 as a value and
+  will make libcurl return error for it.
   
-  It didn't server its purpose, so lets go back to long-time working code.
-
-- socks_sspi.c: further cleanup
-
-- [Marc Hoersken brought this change]
-
-  socks_sspi.c: Clean up and removal of obsolete minor status
+  1 was never a sensible value to use in production but was introduced
+  back in the days to help debugging. It was always documented clearly
+  this way.
   
-  Removed obsolete minor status variable and parameter of status function
-  which was never used or set at all. Also Curl_sspi_strerror does support
-  only one status and there is no need for a second sub status.
-
-Guenter Knauf (12 Jun 2012)
-- Removed trailing whitespaces.
+  1 was never supported by all SSL backends in libcurl, so this cleanup
+  makes the treatment of it unified.
+  
+  The report's list of mistakes for this option were all PHP code and
+  while there's a binding layer between libcurl and PHP, the PHP team has
+  decided that they have an as thin layer as possible on top of libcurl so
+  they will not alter or specifically filter a 'TRUE' value for this
+  particular option. I sympathize with that position.
+  
+  [1] = http://daniel.haxx.se/blog/2012/10/25/libcurl-claimed-to-be-dangerous/
 
-Yang Tse (12 Jun 2012)
-- strerror.c: make Curl_sspi_strerror() always return code for errors
+- gnutls: fix compiler warnings
 
-- curl_sspi.h: provide sspi status definitions missing in old headers
+- [Alessandro Ghedini brought this change]
 
-- sspi: make Curl_sspi_strerror() libcurl's sspi status code string function
+  gnutls: print alerts during handshake
 
-- sspi: make Curl_sspi_strerror() libcurl's sspi status code string function
+- [Alessandro Ghedini brought this change]
 
-Daniel Stenberg (11 Jun 2012)
-- Revert: 634f7cfee40d4658 partially
-  
-  Make sure CURL_VERSION_SSPI is present and works as in previous releases
-  for ABI and API compatibility reasons.
+  gnutls: fix the error_is_fatal logic
 
-- checksrc: shorten a few lines to comply
+- RELEASE-NOTES: synced with fa6d78829fd30ad
 
-- cleanup: remove trailing whitespace
+- httpcustomheader.c: free the headers after use
 
-- [Marc Hoersken brought this change]
+- [Dave Reisner brought this change]
 
-  winbuild: Removed WITH_SSL=schannel and tie schannel to SSPI
+  uniformly use AM_CPPFLAGS, avoid deprecated INCLUDES
   
-  Removed specific WITH_SSL=schannel paramter that did not fit the general
-  schema and complicated the parameters. For now Schannel will be enabled
-  if SSPI is enabled and OpenSSL is disabled.
-
-- [Steve Holme brought this change]
+  Since automake 1.12.4, the warnings are issued on running automake:
+  
+    warning: 'INCLUDES' is the old name for 'AM_CPPFLAGS' (or '*_CPPFLAGS')
+  
+  Avoid INCLUDES and roll these flags into AM_CPPFLAGS.
+  
+  Compile tested on:
+    Ubuntu 10.04 (automake 1:1.11.1-1)
+    Ubuntu 12.04 (automake 1:1.11.3-1ubuntu2)
+    Arch Linux (automake 1.12.4)
 
-  Makefile.vc6: Added version.lib if built with SSPI
+- libauthretry.c: shorten lines to fit within 80 cols
 
-- [Marc Hoersken brought this change]
+- ftp_readresp: fix build without krb4 support
+  
+  Oops, my previous commit broke builds with krb support.
 
-  winbuild: Updated winbuild scripts to add schannel
+- test/README: mention the 1500 test number range
 
-- [Marc Hoersken brought this change]
+- FTP: prevent the multi interface from blocking
+  
+  As pointed out in Bug report #3579064, curl_multi_perform() would
+  wrongly use a blocking mechanism internally for some commands which
+  could lead to for example a very long block if the LIST response never
+  showed.
+  
+  The solution was to make sure to properly continue to use the multi
+  interface non-blocking state machine.
+  
+  The new test 1501 verifies the fix.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3579064
+  Reported by: Guido Berhoerster
 
-  mingw32: Fixed warning of USE_SSL being redefined
+Marc Hoersken (1 Nov 2012)
+- winbuild: Use machine type of development environment
+  
+  This patch restores the original behavior instead of always
+  falling back to x86 if no MACHINE-type was specified.
 
-- [Marc Hoersken brought this change]
+- winbuild: Additional clean up
 
-  sspi: Fixed incompatible parameter pointer type in Curl_sspi_version
+- [Sapien2 brought this change]
 
-- [Marc Hoersken brought this change]
+  Even more winbuild refactoring
 
-  sspi: Updated RELEASE-NOTES, FEATURES and THANKS
+- [Sapien2 brought this change]
 
-- [Marc Hoersken brought this change]
+  Minor winbuild refactoring
 
-  setup.h: Automatically define USE_SSL if USE_SCHANNEL is defined
+- [Sapien2 brought this change]
 
-- [Marc Hoersken brought this change]
+  Architecture selection for winbuild and minor makefiles refactoring
 
-  version: Replaced SSPI feature information with version string details
+Daniel Stenberg (1 Nov 2012)
+- BUGS: fix the bug tracker URL
   
-  Added Windows SSPI version information to the curl version string when
-  SCHANNEL SSL is not enabled, as the version of the library should also
-  be included when SSPI is used to generate security contexts.
+  The URL we used before is the one that goes directly to 'add' a bug
+  report, but since you can only do that after first having logged in to
+  sourceforge, the link often doesn't work for visitors.
   
-  Removed SSPI from the feature list as the features are GSS-Negotiate,
-  NTLM and SSL depending on the usage of the SSPI library.
-
-- [Steve Holme brought this change]
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3582408
+  Reported by: Oscar Norlander
 
-  sspi.c: Post Curl_sspi_version() rework code tidy up
+- evhiperfifo: fix the pointer passed to WRITEDATA
   
-  Removed duplicate blank lines.
-  Removed spaces between the not and test in various if statements.
-  Removed explicit test of NULL in an if statement.
-  Placed function returns on same line as function declarations.
-  Replaced the use of curl_maprintf() with aprintf() as it is the
-  preprocessor job to do this substitution if ENABLE_CURLX_PRINTF
-  is set.
-
-- [Steve Holme brought this change]
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3582407
+  Reported by: Oscar Norlander
 
-  sspi: Reworked Curl_sspi_version() to return version components
+Guenter Knauf (1 Nov 2012)
+- Fixed MSVC libssh2 static build.
   
-  Reworked the version function to return four version components rather
-  than a string that has to be freed by the caller.
-
-- [Guenter Knauf brought this change]
-
-  configure.ac: Added -lversion if built with SSPI
-
-- [Marc Hoersken brought this change]
+  Since libssh2 supports now agent stuff it also depends on user32.lib.
+  Posted to the list by Jan Ehrhardt.
 
-  schannel: Code cleanup and bug fixes
+Daniel Stenberg (23 Oct 2012)
+- tlsauthtype: deal with the string case insensitively
+  
+  When given a string as 'srp' it didn't work, but required 'SRP'.
+  Starting now, the check disregards casing.
   
-  curl_sspi.c: Fixed mingw32-gcc compiler warnings
-  curl_sspi.c: Fixed length of error code hex output
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3578418
+  Reported by: Jeff Connelly
+
+- asyn-ares: restore working with c-ares < 1.6.1
   
-  The hex value was printed as signed 64-bit value on 64-bit systems:
-  SEC_E_WRONG_PRINCIPAL (0xFFFFFFFF80090322)
+  Back in those days the public ares.h header didn't include the
+  ares_version.h header so it needs to be included here.
   
-  It is now correctly printed as the following:
-  SEC_E_WRONG_PRINCIPAL (0x80090322)
-  
-  curl_sspi.c: Fallback to security function table version number
-  Instead of reporting an unknown version, the interface version is used.
-  
-  curl_sspi.c: Removed SSPI/ version prefix from Curl_sspi_version
-  curl_schannel: Replaced static buffer sizes with defined names
-  curl_schannel.c: First brace when declaring functions on column 0
-  curl_schannel.c: Put the pointer sign directly at variable name
-  curl_schannel.c: Use structs directly instead of typedef'ed structs
-  curl_schannel.c: Removed space before opening brace
-  curl_schannel.c: Fixed lines being longer than 80 chars
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3577710
 
-- [Marc Hoersken brought this change]
+- [Nick Zitzmann brought this change]
 
-  curl_sspi: Added Curl_sspi_version function
+  metalink/md5: Use CommonCrypto on Apple operating systems
   
-  Added new function to get SSPI version as string.
-  Added required library version.lib to makefiles.
-  Changed curl_schannel.c to use Curl_sspi_version.
-
-- [Guenter Knauf brought this change]
+  Previously the Metalink code used Apple's CommonCrypto library only if
+  curl was built using the --with-darwinssl option. Now we use CommonCrypto
+  on all Apple operating systems including Tiger or later, or iOS 5 or
+  later, so you don't need to build --with-darwinssl anymore. Also rolled
+  out this change to libcurl's md5 code.
 
-  schannel: Updated mingw32 makefiles
+- href_extractor.c: fix the URL
 
-- [Marc Hoersken brought this change]
+- [Michał Kowalczyk brought this change]
 
-  schannel: Replace ASCII specific code with general defines
+  href_extractor: example code extracting href elements
+  
+  It does so in a streaming manner using the "Streaming HTML parser".
 
-- [Marc Hoersken brought this change]
+- [Nick Zitzmann brought this change]
 
-  schannel: Added definitions which are missing in mingw32
+  darwinssl: un-broke iOS build, fix error on server disconnect
+  
+  The iOS build was broken by a reference to a function that only existed
+  under OS X; fixed. Also fixed a hard-to-reproduce problem where, if the
+  server disconnected before libcurl got the chance to hang up first and
+  SecureTransport was in use, then we'd raise an error instead of failing
+  gracefully.
 
-- [Marc Hoersken brought this change]
+- [Alessandro Ghedini brought this change]
 
-  schannel: Moved interal struct types to urldata.h
+  gnutls: put reset code into else block
   
-  Moved type definitions in order to avoid inclusion loop
+  Bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=690551
 
-- [Marc Hoersken brought this change]
+Guenter Knauf (13 Oct 2012)
+- Fix now broken libmetalink-aware OpenSSL build.
 
-  schannel: Fixed compiler warnings about pointer type assignments
+- Revert c44e674; add OpenSSL includes/defines.
+  
+  The makefile is designed to build against a libmetalink devel package;
+  therefore is does not matter what will change inside libmetalink.
+  Add OpenSSL includes and defines for libmetalink-aware OpenSSL builds.
 
-- [Marc Hoersken brought this change]
+Daniel Stenberg (10 Oct 2012)
+- version-bump: towards 7.28.1!
 
-  schannel: Fixed critical typo in conditions and added buffer length checks
+- THANKS: 14 new contributors from 7.28.0
 
-- [Marc Hoersken brought this change]
+Version 7.28.0 (10 Oct 2012)
 
-  sspi: Refactored socks_sspi and schannel to use same error message functions
+Daniel Stenberg (10 Oct 2012)
+- RELEASE-NOTES: synced with 8373ca3641
   
-  Moved the error constant switch to curl_sspi.c and added two new helper
-  functions to curl_sspi.[ch] which either return the constant or a fully
-  translated message representing the SSPI security status.
-  Updated socks_sspi.c and curl_schannel.c to use the new functions.
-
-- [Marc Hoersken brought this change]
+  One bug, one contributor. Getting ready for release.
 
-  schannel: Added special shutdown check for Windows 2000 Professional
+- curl_multi_wait: no wait if no descriptors to wait for
   
-  Windows 2000 Professional:  Schannel returns SEC_E_OK instead
-  of SEC_I_CONTEXT_EXPIRED. If the length of the output buffer
-  is zero and the first byte of the encrypted packet is 0x15,
-  the application can safely assume that the message was a
-  close_notify message and change the return value to
-  SEC_I_CONTEXT_EXPIRED.
-  
-  Connection shutdown does not mean that there is no data to read
-  Correctly handle incomplete message and ask curl to re-read
-  Fixed buffer for decrypted being to small
-  Re-structured read condition to be more effective
-  Removed obsolete verbose messages
-  Changed memory reduction method to keep a minimum buffer of size 4096
-
-- [Marc Hoersken brought this change]
+  This is a minor change in behavior after having been pointed out by Mark
+  Tully and discussed on the list. Initially this case would internally
+  call poll() with no sockets and a timeout which would equal a sleep for
+  that specified time.
+  
+  Bug: http://curl.haxx.se/mail/lib-2012-10/0076.html
+  Reported by: Mark Tully
 
-  schannel: Implemented SSL/TLS renegotiation
+- TODO-RELEASE: cleanup for 7.28.0
+  
+  one issue is now KNOWN_BUG #79
   
-  Updated TODO information and added related MSDN articles
+  the other we just skip since nobody is working on it or is planning to
+  start working on it anytime soon
 
-- [Marc Hoersken brought this change]
+- curl_multi_wait.3: style formatting mistake
 
-  schannel: Save session credential handles in session cache
+Marc Hoersken (8 Oct 2012)
+- ssluse.c: md5.h is required for Curl_ossl_md5sum
 
-- [Marc Hoersken brought this change]
+Daniel Stenberg (8 Oct 2012)
+- curl_multi_wait.3: fix the name of the man page
 
-  schannel: Code cleanup
+- curl_multi_wait.3: renamed the last argument variable for clarity
 
-- [Marc Hoersken brought this change]
+Marc Hoersken (6 Oct 2012)
+- curl_schannel.c: Fixed caching more data than required
+  
+  Do not fill the decrypted data buffer with more data unless
+  required in order to return the requested amount of data.
 
-  schannel: Check for required context attributes
+- curl_schannel: Removed buffer limit and optimized buffer strategy
+  
+  Since there are servers that seem to return very big encrypted
+  data packages, we need to be able to handle those without having
+  an internal size limit. To avoid the buffer growing to fast to
+  early the initial size was decreased and the minimum free space
+  in the buffer was decreased as well.
 
-- [Marc Hoersken brought this change]
+- lib/socks.c: Merged two size variables into one
 
-  schannel: Allow certificate and revocation checks being deactivated
+- lib/socks.c: Avoid type conversions where possible
+  
+  Streamlined variable names and types to avoid type conversions that
+  may result in data being lost on non 32-bit systems.
 
-- [Marc Hoersken brought this change]
+- lib/curl_schannel.c: Hide size_t conversion warning
 
-  schannel: Added SSL/TLS support with Microsoft Windows Schannel SSPI
+- krb5/curl_rtmp.c: Hide size_t to int type conversion warning
 
-- [Marc Hoersken brought this change]
+- security.c: Aligned internal type to return type
+  
+  Use ssize_t instead of int to avoid conversion problems on 64-bit
+  systems. Also added curlx_sztosi where necessary.
 
-  http: Replaced specific SSL libraries list in https_getsock fallback
+- lib/curl_schannel: Increased maximum buffer size to factor 128
 
-- [Marc Hoersken brought this change]
+- winbuild/MakefileBuild.vc: Follow up on 0c8ccf7
 
-  connect.c/ftp.c: Fixed dereferencing pointer breakin strict-aliasing
+Daniel Stenberg (2 Oct 2012)
+- RELEASE-NOTES: synced with 971f5bcedd418
   
-  Fixed warning: dereferencing pointer does break strict-aliasing rules
-  by using a union instead of separate pointer variables.
-  Internal union sockaddr_u could probably be moved to generic header.
-  Thanks to Paul Howarth for the hint about using unions for this.
-  
-  Important for winbuild: Separate declaration of sockaddr_u pointer.
-  The pointer variable *sock cannot be declared and initialized right
-  after the union declaration. Therefore it has to be a separate statement.
+  9 new bug fixes, 5 changes, 6 more contributors
 
-- [Marc Hoersken brought this change]
+- multi_runsingle: CURLOPT_LOW_SPEED_* fix for rate limitation
+  
+  During the periods of rate limitation, the speedcheck function wasn't
+  called and thus the values weren't updated accordingly and it would then
+  easily trigger wrongly once data got transferred again.
+  
+  Also, the progress callback's return code was not acknowledged in this
+  state so it could make an "abort" return code to get ignored and not
+  have the documented effect of aborting an ongoing transfer.
+  
+  Bug: http://curl.haxx.se/mail/lib-2012-09/0081.html
+  Reported by: Jie He
 
-  curl_ntlm_msgs.c: Fixed passwdlen not being used and recalculated
+- [Tatsuhiro Tsujikawa brought this change]
 
-Yang Tse (11 Jun 2012)
-- tests: fix test definitions # 1355, 1363, 1385 and 1393
+  tool_metalink.c: Filtered resource URLs by type
   
-  -i without HTTP protocol shall not include headers in the output
+  In Metalink v3, the type attribute of url element indicates the
+  type of the resource the URL points to. It can include URL to the
+  meta data, such as BitTorrent metainfo file.  In Curl, we are not
+  interested in these meta data URLs. Instead, we are only
+  interested in the HTTP and FTP URLs. This change filters out
+  non-HTTP and FTP URLs. If we don't filter out them, it will be
+  downloaded by curl and hash check will fail if hash is provided
+  and next URL will be tried. This change will cut this useless
+  network transfer.
 
-Daniel Stenberg (10 Jun 2012)
-- Curl_pgrsDone: return int and acknowledge return code
+Kamil Dudka (1 Oct 2012)
+- https.c example: remember to call curl_global_init()
   
-  Since Curl_pgrsDone() itself calls Curl_pgrsUpdate() which may return an
-  abort instruction or similar we need to return that info back and
-  subsequently properly handle return codes from Curl_pgrsDone() where
-  used.
+  ... in order not to leak memory on initializing an SSL library.
   
-  (Spotted by a Coverity scan)
+  Reported by: Tomas Mlcoch
 
-Steve Holme (10 Jun 2012)
-- [Marc Hoersken brought this change]
+Daniel Stenberg (28 Sep 2012)
+- FAQ: remove the date from the topmost line
 
-  winbuild: Fixed environment variables being lost
-  
-  Fixed USE_IPV6 and USE_IDN not being passed
-  from Makefile.vc to MakefileBuild.vc
-  Fixed whitespace and formatting issues
-  Fixed typo and format in help message
+- FAQ: 5.16 I want a different time-out!
 
-Guenter Knauf (9 Jun 2012)
-- Added metalink support to NetWare builds.
+- Curl_reconnect_request: clear pointer on failure
+  
+  The Curl_reconnect_request() function could end up returning a pointer
+  to a free()d struct when Curl_done() failed inside. Clearing the pointer
+  unconditionally after Curl_done() avoids this risk.
+  
+  Reported by: Ho-chi Chen
+  Bug: http://curl.haxx.se/mail/lib-2012-09/0188.html
 
-Steve Holme (9 Jun 2012)
-- smtp.c: Removed unused variable
+- CURLOPT_CONNECTTIMEOUT: works without signals or posix too!
 
-- smtp: Post apop feature code tidy up
+Marc Hoersken (24 Sep 2012)
+- Makefile.vc6: Follow up on 0c8ccf7
 
-- pop3: Post apop feature code tidy up
+- Makefile.vc6: Added missing default library advapi32.lib
 
-- pop3: Added support for apop authentication
+Daniel Stenberg (19 Sep 2012)
+- HTTP_ONLY: disable more protocols
 
-- pop3: Enhanced the extended authentication mechanism detection
+- test2006: Updated expected output to include hash name
   
-  Enhanced the authentication type / mechanism detection in preparation
-  for the introduction of APOP support.
+  Output changed in commit a34197ef77cb
 
-- pop3.c: Fixed length of SASL check
+- [Sergei Nikulov brought this change]
 
-Yang Tse (9 Jun 2012)
-- Fixes allowing 26 more test cases in 1334 to 1393 range to succeed
+  cmake: use standard findxxx modules for cmake v2.8+
 
-- tests: fix test definitions # 1370 and 1371
-  
-  -J without -O shall not honor C-D filename
+- [Sergei Nikulov brought this change]
 
-Daniel Stenberg (9 Jun 2012)
-- OpenSSL: support longer certificate subject names
-  
-  Previously it would use a 256 byte buffer and thus cut off very long
-  subject names. The limit is now upped to the receive buffer size, 16K.
+  setup.h: fixed for MS VC10 build
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3533045
-  Reported by: Anthony G. Basile
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3568327
 
-Kamil Dudka (8 Jun 2012)
-- ssl: fix duplicated SSL handshake with multi interface and proxy
+- TODO-RELEASE: push new features to 7.29
   
-  Bug: https://bugzilla.redhat.com/788526
-  Reported by: Enrico Scholz
+  Leave two bug fixes as possibly fixed for 7.28 but as nobody seems to be
+  working on them I have little hope...
 
-Daniel Stenberg (8 Jun 2012)
-- tool_getparam.h: fix compiler error
-  
-  forward declare the Configurable struct
+Marc Hoersken (17 Sep 2012)
+- metalink tests: Updated expected output to include hash name
 
-- metalink: restore some includes
-  
-  Commit eeeba1496cbca removed them and thus broke my Linux build
+Daniel Stenberg (16 Sep 2012)
+- [Sara Golemon brought this change]
 
-- openldap: OOM fixes
-  
-  when calloc fails, return error! (Detected by Fortify)
+  curl_multi_wait: Add parameter to return number of active sockets
   
-  Reported by: Robert B. Harris
+  Minor change to recently introduced function.  BC breaking, but since
+  curl_multi_wait() doesn't exist in any releases that should be fine.
 
-Steve Holme (8 Jun 2012)
-- sasl: Re-factored mechanism constants in preparation for APOP work
+Marc Hoersken (14 Sep 2012)
+- socks.c: Fixed warning: conversion to 'int' from 'long unsigned int'
 
-Yang Tse (8 Jun 2012)
-- metalink: build fixes and adjustments II
-  
-  Additionally, make hash checking ability mandatory in order to allow metalink
-  support in curl.
-  
-  A command line option could be introduced to skip hash checking at runtime,
-  but the ability to check hashes should always be built-in when providing
-  metalink support.
+- http_negotiate.c: Fxied warning: unused variable 'rc'
 
-Guenter Knauf (8 Jun 2012)
-- Added metalink support to MinGW builds.
+- ssh.c: Fixed warning: implicit conversion from enumeration type
 
-Daniel Stenberg (7 Jun 2012)
-- log2changes.pl: fix the Version output
-  
-  Previously it could easily wrongly get repeated
+- socks.c: Check that IPv6 is enabled before using it's features
+
+- checksrc: Fixed line length and comment indentation
+
+- socks.c: Updated error messages to handle hostname and IPv6
 
-Yang Tse (7 Jun 2012)
-- metalink: build fixes and adjustments I
+- socks.c: Added support for IPv6 connections through SOCKSv5 proxy
 
-Daniel Stenberg (7 Jun 2012)
-- lib554.c: use curl_formadd() properly
+Daniel Stenberg (13 Sep 2012)
+- parse_proxy: treat "socks://x" as a socks4 proxy
   
-  The length/size options take longs so make sure to pass on such types.
+  Selected socks proxy in Google's Chrome browser. Resulting in the
+  following environment variables:
   
-  Reported by: Neil Bowers
-  Bug: http://curl.haxx.se/mail/lib-2012-06/0001.html
-
-Steve Holme (7 Jun 2012)
-- smtp.c: Re-factored the smtp_state_*_resp() functions
+  NO_PROXY=localhost,127.0.0.0/8
+  ALL_PROXY=socks://localhost:1080/
+  all_proxy=socks://localhost:1080/
+  no_proxy=localhost,127.0.0.0/8
   
-  Re-factored the smtp_state_*_resp() functions to 1) Match the constants
-  that were refactored in commit 00fddba6727c, 2) To be more readable and
-  3) To match their counterparties in pop3.c.
-
-Yang Tse (7 Jun 2012)
-- Fixes allowing HTTP test cases 1338, 1339, 1368 and 1369 to succeed
-
-- tests 1364 to 1393: several -o filename -J -i -D combinations for HTTP and FTP
-
-- tests 1348 to 1363: test definition polishing
+  ... and libcurl didn't treat 'socks://' as socks but instead picked HTTP
+  proxy.
   
-  Verify that the "Saved to filename 'blabla'" message is only displayed when
-  the 'blabla' filename being used _actually_ has been specified by the server
-  in the Content-Disposition header.
+  Reported by: Scott Bailey
   
-  Use relative path for unintended file creation postcheck.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3566860
 
-Steve Holme (6 Jun 2012)
-- smtp: Re-factored the SMTP_AUTH* state machine constants
+Kamil Dudka (12 Sep 2012)
+- ssh: do not crash if MD5 fingerprint is not provided by libssh2
   
-  Re-factored the SMTP_AUTH* constants, that are used by the state
-  machine, to be clearer to read.
+  The MD5 fingerprint cannot be computed when running in FIPS mode.
 
-Guenter Knauf (6 Jun 2012)
-- Added hint for pkg-config wrapper script.
+- ssh: move the fingerprint checking code to a separate fnc
 
-- Updated Android section with recent NDK.
+Marc Hoersken (12 Sep 2012)
+- tool_metalink.c: Added name of validation hash to messages
   
-  The r7b had some bugs, and shouldnt be used.
+  This makes it easier to debug broken hashes or hash functions.
 
-Yang Tse (6 Jun 2012)
-- Disable non-HTTP header related tests
+- wincrypt: Fixed cross-compilation issues caused by include name
   
-  These now detect incompleate header data and fail
+  For some reason WinCrypt.h is named wincrypt.h under MinGW.
 
-- tests 1348 to 1363: compleate header data part of test definition
+- md5.c: Added support for Microsoft Windows CryptoAPI
 
-- tests 1334 to 1363 revisited.
-  
-  Add a postcheck section to verify unintended file creation.
+- Makefile.m32: Updated to build against libmetalink 0.1.2
   
-  Remove needless <file> checks in verify section. Renumbering where appropriate.
+  The include and library path were moved within libmetalink, this
+  patch adjusts the defaults provided within the curl MinGW makefile.
 
-- tests: adjust file part behavior in test verify section.
+- tool_metalink.c: Added support for Microsoft Windows CryptoAPI
   
-  When a <file> part is now specified with no contents at all, this
-  will actually verify that the specified file has no contents at all.
-  Previously file contents would be ignored.
+  Since Metalink support requires a crypto library for hash functions
+  and Windows comes with the builtin CryptoAPI, this patch adds that
+  API as a fallback to the supported crypto libraries.
+  It is automatically used on Windows if no other library is provided.
 
-Steve Holme (5 Jun 2012)
-- smtp.c: Removed whitespace
+- libntlmconnect.c: Fixed typo and conversion
 
-- pop3: Another small code tidy up
+- libntlmconnect.c: Fixed warning: curl_easy_getinfo expects long pointer
   
-  Missed some comments that we identified during the SMTP tidy up earlier.
+  Fixed tests/libtest/libntlmconnect.c:52: warning: call to
+  '_curl_easy_getinfo_err_long' declared with attribute warning:
+  curl_easy_getinfo expects a pointer to long for this info
 
-- smtp: Post authentication code tidy up
-  
-  Corrected lines longer than 78 characters.
-  
-  Removed unnecessary braces in smtp_state_helo_resp().
-  
-  Introduced some comments in data sending functions.
-  
-  Tidied up comments to match changes made in pop3.c.
+- sws.c: Fixed warning: 'err' may be used uninitialized in this function
 
-Yang Tse (5 Jun 2012)
-- tests 1348 to 1363: add a comma in test description
+- libntlmconnect.c: Fixed warning: comparison of signed/unsigned integer
+  
+  Windows does not use -1 to represent invalid sockets and the
+  SOCKET type is unsigned.
 
-Steve Holme (5 Jun 2012)
-- email: Removed duplicated header file
+- nss.c: Fixed warning: 'err' may be used uninitialized in this function
 
-- sasl: Renamed Curl_sasl_decode_ntlm_type2_message()
+- tool_metalink.c: Fixed error: 'O_BINARY' undeclared
   
-  For consistency with other SASL based functions renamed this function
-  to Curl_sasl_create_ntlm_type3_message() which better describes its
-  usage.
+  Check for O_BINARY which is not available on every system.
 
-- pop3: Post authentication code tidy up
-  
-  Corrected lines longer than 78 characters.
-  
-  Changed POP3_AUTH_FINAL to POP3_AUTH to match SMTP code now that the
-  AUTH command is no longer sent on its own.
-  
-  Introduced some comments in data sending functions.
+- tool_metalink.c: Fixed validation of binary files containing EOF
   
-  Another attempt at trying to rational code and comment style.
-
-- pop3: Added support for sasl digest-md5 authentication
-
-Yang Tse (4 Jun 2012)
-- sasl: add reference for curl_sasl
-
-- Makefile.inc: tab adjustment
+  Since Windows/MinGW threat 0x1A as the EOF character, reading binary
+  files which contain that byte does not work using text mode.
+  The read function will only read until the first 0x1A byte. This
+  means that the hash is not computed from the whole file and the
+  final validation check using hash comparision fails.
 
-Daniel Stenberg (4 Jun 2012)
-- pop3 tests: CAPA instead of AUTH
+- winbuild: Added support for building with SPNEGO enabled
   
-  After Steve's commit e336bc7c42c7340 test 1319 and 1407 need to check
-  for CAPA instead of AUTH.
+  Since Simple and Protected GSSAPI Negotiation Mechanism
+  is already implemented in curl and supported by the MinGW
+  builds, this change adds build support to winbuild makefiles.
 
-Steve Holme (4 Jun 2012)
-- sasl: Added service parameter to Curl_sasl_create_digest_md5_message()
+- winbuild: Adjusted order of options to generated config name
   
-  Added a service type parameter to Curl_sasl_create_digest_md5_message()
-  to allow the function to be used by different services rather than being
-  hard coded to "smtp".
+  Cleaned up order of handled build options by ordering them
+  nearly alphabetically by using the order of the generated
+  config name. Preparation for future/more build options.
 
-Yang Tse (4 Jun 2012)
-- tests 1356 to 1363: several -O -J -i -D combinations with FTP protocol
-  
-  Currently 1356 to 1362 succeed but a write failure is logged in traceNNNN.
-  
-  Currently 1363 fails, so disabled for now.
+Daniel Stenberg (9 Sep 2012)
+- [Anthony Bryan brought this change]
 
-Steve Holme (4 Jun 2012)
-- tests: Updated pop3 tests for change in auth mechanism detection
+  MANUAL: clarified user+password in HTTP URLs
 
-- pop3: Changed the sasl mechanism detection from auth to capa
+- RELEASE-NOTES: synced with 6c6f1f64c2
   
-  Not all SASL enabled POP3 servers support the AUTH command on its own
-  when trying to detect the supported mechanisms. As such changed the
-  mechanism detection to use the CAPA command instead.
+  6 bug fixes to mention, 5 contributors
 
-Daniel Stenberg (4 Jun 2012)
-- curl_easy_setopt.3: proto updates + cleanups
-  
-  - For all *FUNCTION options, they now all show the complete prototype in
-    the description. Previously some of them would just refer to a
-    typedef'ed function pointer in the curl.h header.
+- TODO-RELEASE: CURLSSH_AUTH_AGENT and curl_multi_wait() are done
   
-  - I made the phrasing of that "Pass a pointer to a function that matches
-    the following prototype" the same for all *FUNCTION option descriptions.
+  -321 - CURLSSH_AUTH_AGENT patch by Armel Asselin
   
-  - I removed some uses of 'should'. I think I sometimes over-use this
-    word as in many places I actually mean MUST or otherwise more specific
-    and not-so-optional synonyms.
+  -324 - curl_multi_select() vs curl_multi_fdvec() etc
 
-Yang Tse (4 Jun 2012)
-- tests 1348 to 1355: several -O -J -i -D combinations with FTP protocol
-  
-  Currently 1348 to 1354 succeed but a write failure is logged in traceNNNN.
+Marc Hoersken (9 Sep 2012)
+- curl_schannel.c: Reference count the credential/session handle
   
-  Currently 1355 fails, so disabled for now.
+  Reference counting the credential handle should avoid that such a
+  handle is freed while it is still required for connection shutdown
 
-- tests 1346 to 1347: several -O -J -i -D combinations with HTTP protocol
+Daniel Stenberg (8 Sep 2012)
+- [Nick Zitzmann brought this change]
 
-Steve Holme (4 Jun 2012)
-- sasl: Small code tidy up
+  darwinssl: fixed for older Mac OS X versions
   
-  Reworked variable names in Curl_sasl_create_cram_md5_message() to match
-  those in Curl_sasl_create_digest_md5_message() as they are more
-  appropriate.
+  SSL didn't work on older cats if built on a newer cat with weak-linking
+  turned on to support the older cat
 
-- sasl: Moved digest-md5 authentication message creation from smtp.c
-  
-  Moved the digest-md5 message creation from smtp.c into the sasl module
-  to allow for use by other modules such as pop3.
+- [David Blaikie brought this change]
 
-- sasl: Small code tidy up before moving digest-md5 over
+  tool_easysrc.c: Test pointers against NULL
   
-  Correction of comments and variable names.
-
-- RELEASE-NOTES: Added missing addition of sasl login support
-
-- pop3: Added support for sasl cram-md5 authentication
-
-Daniel Stenberg (3 Jun 2012)
-- Curl_sasl_create_plain_message: remove TAB
+  While validating a new Clang diagnostic (-Wnon-literal-null-conversion -
+  yes, the name isn't quite correct in this case, but it suffices) I found
+  a few violations of it in Curl.
 
-Steve Holme (3 Jun 2012)
-- sasl: Small code tidy up
+- SOCKS: truly disable it if CURL_DISABLE_PROXY is defined
   
-  Added some comments and removed an unreferenced variable.
-
-- pop3.c: Added conditional compilation for NTLM function calls
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3561305
   
-  Added USE_NTLM condition compilation around the NTLM functions called
-  from pop3_statemach_act() introduced in commit 69f7156ad96877.
+  Patch by: Marcel Raad
 
-- sasl: Moved cram-md5 authentication message creation from smtp.c
+- mk-ca-bundle: detect start of trust section better
   
-  Moved the cram-md5 message creation from smtp.c into the sasl module
-  to allow for use by other modules such as pop3.
-
-- pop3: Fixed an issue with changes introduced in commit c267c53017bc
+  Each certificate section of the input certdata.txt file has a trust
+  section following it with details.
   
-  Because pop3_endofresp() is called for each line of data yet is not
-  passed the line and line length, so we have to use the data pointed to
-  by pp->linestart_resp which contains the whole packet, the mechanisms
-  were being detected in one call yet the function would be called for
-  each line of data.
+  This script failed to detect the start of the trust for at least one
+  cert[*], which made the script continue pass that section into the next
+  one where it found an 'untrusted' marker and as a result that certficate
+  was not included in the output.
   
-  Using curl with verbose mode enabled would show that one line of data
-  would be received in response to the AUTH command, before the AUTH
-  <mechanism> command was sent to the server and then the next few lines
-  of the original AUTH command would be displayed before the response from
-  the AUTH <mechanism> command. This would then cause problems when
-  parsing the CRAM-MD5 challenge data as extra data was contained in the
-  buffer.
+  [*] = "Hellenic Academic and Research Institutions RootCA 2011"
   
-  Changed the parsing so that each line is checked for the mechanisms
-  and the function returns FALSE until the whole of the AUTH response has
-  been processed.
+  Bug: http://curl.haxx.se/mail/lib-2012-09/0019.html
 
-Daniel Stenberg (3 Jun 2012)
-- version: bump to 7.27.0 for next release
-  
-  Due to new features
+- [Alessandro Ghedini brought this change]
 
-- RELEASE-NOTES: synced with c4e3578e4bf
+  gnutls: do not fail on non-fatal handshake errors
   
-  Also bumped the contributor number and next release is to become 7.27.0
+  Bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=685402
 
-- THANKS: 16 new contributors from the 7.26.0 release
+- FILEFORMAT: the FTP commands work for more protocols
 
-Steve Holme (3 Jun 2012)
-- DOCS: Fixed list in Section 18.2 not displaying correctly on web site
+- test1411: verify SMTP without SIZE support
 
-- DOCS: Corrected missed heading renumbering from commit 530675a1ad7
+- [František Kučera brought this change]
 
-- DOCS: Added IMAP and LDAP sections
-  
-  Added new sections 11. IMAP and 12. LDAP to document adding SASL based
-  authentication.
+  SMTP: only send SIZE if supported
   
-  Renumbered current sections 11 to 17 as 13 to 19.
+  SMTP client will send SIZE parameter in MAIL FROM command only if server
+  supports it. Without this patch server might say "504 Command parameter
+  not implemented" and reject the message.
   
-  Additionally added 19.10 Add CURLOPT_MAIL_CLIENT option.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3564114
 
-- sasl.c: Fix to avoid warnings introduced in commit d9ca9e9869e8
+- ftpserver: respond with a 250 to SMTP EHLO
   
-  Applied a fix to avoid warnings on systems where Curl_ntlm_sspi_cleanup()
-  is just a nop.
-
-- pop3.c:Corrected typo in commit 69ba0da8272d
+  ... and specify that SIZE is supported. 250 is the "correct" response
+  code according to RFC 2821
 
-- pop3: Fixed the issue of having to supply the user name for all requests
-  
-  Previously it wasn't possible to connect to POP3 and not specify the
-  user name as a CURLE_ACCESS_DENIED error would be returned. This error
-  occurred because USER would be sent to the server with a blank user name
-  if no mailbox user was specified as the server would reply with -ERR.
-  
-  This wasn't a problem prior to the 7.26.0 release but with the
-  introduction of custom commands the user and/or application developer
-  might want to issue a CAPA command without having to log in as a
-  specific mailbox user.
-  
-  Additionally this fix won't send the newly introduced AUTH command if no
-  user name is specified.
+- RELEASE-NOTES: synced with abb0da919300e
 
-- pop3.c: Small code tidy up
-  
-  Corrected lines exceeding 78 characters.
+Dan Fandrich (3 Sep 2012)
+- Updated Symbian build files
   
-  Repositioned some comments and added extra clarity.
-
-- sasl: Corrected variable names in comments and parameters
-
-- pop3: Added support for sasl ntlm authentication
+  This is untested, but at least Symbian still has a chance of
+  still working now.
 
-- sasl: Small comment style tidy up following ntlm commit
+- Updated build docs w.r.t. Android and binary sizes
 
-- sasl: Moved ntlm authentication message handling from smtp.c
-  
-  Moved the ntlm message creation and decoding from smtp.c into the sasl
-  module to allow for use by other modules such as pop3.
+Daniel Stenberg (1 Sep 2012)
+- symbols-in-versions: new CURL_WAIT_* symbols
 
-- pop3: Added support for sasl login authentication
+- [Sara Golemon brought this change]
 
-Yang Tse (1 Jun 2012)
-- tests 1334 to 1345: several -O -J -i -D combinations with HTTP protocol
+  Unit test for curl_multi_wait()
 
-- tests: support test definitions with up to 5 file checks in <verify> section
-  
-  This is done introducing tags <file1> to <file4> besides existing <file> one,
-  as well as corresponding <stripfile1> to <stripfile4> ones, that can be used
-  in the <verify> section in the same way as the non-numbered ones.
+- [Sara Golemon brought this change]
 
-Steve Holme (31 May 2012)
-- sasl: Moved login authentication message creation from smtp.c
-  
-  Moved the login message creation from smtp.c into the sasl module
-  to allow for use by other modules such as pop3.
+  Manpage for curl_multi_wait().
 
-- smtp.c: Reworked message encoding in smtp_state_authpasswd_resp()
-  
-  Rather than encoding the password message itself the
-  smtp_state_authpasswd_resp() function now delegates the work to the same
-  function that smtp_state_authlogin_resp() and smtp_authenticate() use
-  when constructing the encoded user name.
+- [Sara Golemon brought this change]
 
-- smtp.c: Re-factored smtp_auth_login_user() for use with passwords
+  multi: add curl_multi_wait()
   
-  In preparation for moving to the SASL module re-factored the
-  smtp_auth_login_user() function to smtp_auth_login() so that it can be
-  used for both user names and passwords as sending both of these under
-  the login authentication mechanism is the same.
-
-- pop3: Added support for sasl plain text authentication
+  /*
+   * Name:     curl_multi_wait()
+   *
+   * Desc:     Poll on all fds within a CURLM set as well as any
+   *           additional fds passed to the function.
+   *
+   * Returns:  CURLMcode type, general multi error code.
+   */
+  CURL_EXTERN CURLMcode curl_multi_wait(CURLM *multi_handle,
+                                        struct curl_waitfd extra_fds[],
+                                        unsigned int extra_nfds,
+                                        int timeout_ms);
 
-- curl_ntlm_msgs.c: Corrected small spelling mistake in comments
+- [Nick Zitzmann brought this change]
 
-- sasl: Moved plain text authentication message creation from smtp.c
+  darwinssl: Bugfix for previous commit for older cats
   
-  Moved the plain text message creation from smtp.c into the sasl module
-  to allow for use by other modules such as pop3.
-
-Yang Tse (30 May 2012)
-- configure: fix LDAPS disabling related misplaced closing parenthesis
+  I accidentally broke functionality for versions of OS X prior to Mountain
+  Lion in the previous commit. This commit fixes the problems.
 
-- pop3 test server: allow pop3 test server verification to succeed again
-  
-  Introduce SUPPORTCAPA and SUPPORTAUTH config commands to allow further
-  pop3 test server expansion for tests that require CAPA or AUTH support,
-  although this will need some extra work to make it fully functional.
+- [Joe Mason brought this change]
 
-Steve Holme (28 May 2012)
-- pop3: Introduced the continue response in pop3_endofresp()
+  Use MAX_EASY_HANDLES instead of hardcoding the number of handles twice
 
-- pop3: Changed response code from O and E to + and -
-  
-  The POP3 protocol doesn't really have the concept of error codes and
-  uses +, +OK and -ERR in response to commands to indicate continue,
-  success and error.
+- test2032: bail out after last transfer
   
-  The AUTH command is one of those commands that requires multiple pieces
-  of data to be sent to the server where the server will respond with + as
-  part of the handshaking. This meant changing the values before
-  continuing with the next stage of adding authentication support.
-
-- pop3: Small code tidy up following authentication work so far
+  The test would hang and get aborted with a "ABORTING TEST, since it
+  seems that it would have run forever." until I prevented that from
+  happening.
   
-  Changed the order of the state machine to match the order of actual
-  events.
+  I also fixed the data file which got broken CRLF line endings when I
+  sucked down the path from Joe's repo == my fault.
   
-  Reworked some comments and function parameter positioning that I missed
-  the other day.
+  Removed #37 from KNOWN_BUGS as this fix and test case verifies exactly
+  this.
 
-Kamil Dudka (28 May 2012)
-- nss: use human-readable error messages provided by NSS
-  
-  Bug: http://lists.baseurl.org/pipermail/yum-devel/2012-January/009002.html
+- [Joe Mason brought this change]
 
-Daniel Stenberg (27 May 2012)
-- test1013.pl: filter out Metalink
+  NTLM: re-use existing connection better
   
-  Since it isn't a feature supported by curl-config we can't compare that
-  with the --version output
+  If we need an NTLM connection and one already exists, always choose that
+  one.
 
-- pop3: remove variable-not-used warnings
+- [Joe Mason brought this change]
 
-Steve Holme (27 May 2012)
-- DOCS: Corrected the "Added in" version number for CURLOPT_MAIL_AUTH
+  NTLM: verify multiple connections work
   
-  Additionally corrected another RFC link that I missed yesterday.
+  Add test2032 to test that NTLM does not switch connections in the middle
+  of the handshake
 
-- pop3: Added support for SASL based authentication mechanism detection
+- curl.1: list the -w variables sorted alphabetically
+
+- libcurl-share.3: remove wrong info of what can be shared
   
-  Added support for detecting the supported SASL authentication mechanisms
-  via the AUTH command. There are two ways of detecting them, either by
-  using the AUTH command, that will return -ERR if not supported or by
-  using the CAPA command which will return SASL and the list of mechanisms
-  if supported, not include SASL if SASL authentication is not supported
-  or -ERR if the CAPA command is not supported. As such it seems simpler
-  to use the AUTH command and fallback to normal clear text authentication
-  if the the command is not supported.
+  "Currently you can only share DNS and/or COOKIE data" is incorrect since
+  also SSL sessions can be shared.
   
-  Additionally updated the test cases to return -ERR when the AUTH command
-  is encountered. Additional test cases will be added when support for the
-  individual authentication mechanisms is added.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3562261
+  Reported by: Joe Mason
 
-Daniel Stenberg (27 May 2012)
-- pop3: remove trailing whitespace
+- [Dave Reisner brought this change]
 
-Steve Holme (27 May 2012)
-- pop3: Code tidy up before the introduction of authentication code
-  
-  Moved EOB definition into header file.
-  
-  Switched the logic around in pop3_endofresp() to allow for the
-  introduction of auth-mechanism detection.
-  
-  Repositioned second and third function variables where they will fit
-  within the 78 character line limit.
+  examples: use do/while loop for multi examples
   
-  Tidied up some comments.
+  It's conceivable that after the first time curl_multi_perform returns,
+  the outvalue still_running will be 0, but work will have been done. This
+  is shown by a workload of small, purely file:// based URLs. Ensure that
+  we always read pending messages off the multi handle by forcing the
+  while loop to run at least once.
 
-Guenter Knauf (27 May 2012)
-- Enabled OpenSSL static linkage.
+- curl.h: fix comment to refer to current names
+  
+  CURLOPT_USE_SSL should be set to CURLUSESSL_* and nothing else in modern
+  libcurl versions.
 
-- Enabled OpenSSL static linkage.
+- ftpsget: simple example showing a FTPS fetch
 
-- Try to detect OpenSSL build type automatically.
+- sftpget: SFTP is not "SSH FTP"
 
-Daniel Stenberg (26 May 2012)
-- metalink: fix build errors when disabled
+- [Armel Asselin brought this change]
 
-- [Tatsuhiro Tsujikawa brought this change]
+  sftpget: example showing a simple SFTP download
+  
+  ... using SSH-agent
 
-  Reduced #ifdef HAVE_METALINK
+- curl_multi_perform.3: extended/clarified
 
-- [Tatsuhiro Tsujikawa brought this change]
+- INSTALL.cmake: clarify some flaws/limits in the cmake build
 
-  Disable hash check if neither OpenSSL nor GNUTLS is installed.
+- https.c example: spell check used define
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3559845
+  Reported by: Olivier Berger
 
-- [Tatsuhiro Tsujikawa brought this change]
+- configure: update the copyright years for the output
 
-  Format GETOUT_METALINK nicely
+- [Nick Zitzmann brought this change]
 
-- [Tatsuhiro Tsujikawa brought this change]
+  darwinssl: add TLS 1.1 and 1.2 support, replace deprecated functions
+  
+  In Mountain Lion, Apple added TLS 1.1 and 1.2, and deprecated a number
+  of SecureTransport functions, some of which we were using. We now check
+  to see if the replacement functions are present, and if so, we use them
+  instead.  The old functions are still present for users of older
+  cats. Also fixed a build warning that started to appear under Mountain
+  Lion
 
-  Minimize usage of structs from libmetalink
+- curl_easy_setopt: documented CURLSOCKTYPE_ACCEPT for SOCKOPTFUNCTION
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Gokhan Sengun brought this change]
 
-  Check checksum of downloaded file if checksum is available
-  
-  Metalink file contains several hash types of checksums, such as
-  md5, sha-1, sha-256, etc. To deal with these checksums, I created
-  abstraction layer based on lib/curl_md5.h and
-  lib/md5.c. Basically, they are almost the same but I changed the
-  code so that it is not hash type dependent. Currently,
-  GNUTLS(nettle or gcrypt) and OpenSSL functions are supported.
-  
-  Checksum checking is done by reopening download file.  If there
-  is an I/O error, the current implementation just prints error
-  message and does not try next resource.
+  ftp: active conn, place calling sockopt callback at the end of function
   
-  In this patch, the supported hash types are: md5, sha-1 and sha-256.
+  Commit b91d29a28e170c16d65d956db79f2cd3a82372d2 introduces a bug and breaks Curl_closesocket function. sock_accepted flag for the second socket should be tagged as TRUE before the sockopt callback is called because in case the callback returns an error, Curl_closesocket function is going to call the - fclosesocket - callback for the accept()ed socket
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Gokhan Sengun brought this change]
 
-  Always create directory hierarchy for Metalink.
-  
-  Filenames contained in Metalink file can include directory information.
-  Filenames are unique in Metalink file, taking into account the directory
-  information. So we need to create the directory hierarchy.
-  
-  Curl has --create-dirs option, but we create directory hierarchy for
-  Metalink downloads regardless of the option value.
+  ftp: active conn, allow application to set sockopt after accept() call
   
-  This patch also put metalink int variable outside of HAVE_LIBMETALINK
-  guard. This reduces the number of #ifdefs.
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  Fixed segmentation fault when Metalink has no valid file or no resource.
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  Support media-type parameter in Content-Type
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  Print "Metalink" in Features if Metalink support is enabled.
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  Removed trailing space
-
-- [ant brought this change]
+  For active FTP connections, applications may need setting the sockopt after accept() call returns successful. This fix gives a call to the callback registered with CURL_SOCKOPTFUNCTION option. Also a new sock type - CURLSOCKTYPE_ACCEPT - is added. This type is to be passed to application callbacks with - purpose - parameter. Applications may use this parameter to distinguish between socket types.
 
-  Add --metalink to --help
+- configure: remove the --enable/disable-nonblocking options
+  
+  Removing this option as it currently only functions to lure people into
+  wrongly using it and falsely believing that libcurl will work fine
+  without using nonblocking sockets internally - which leads to hard to
+  track or understand errors.
 
-- [ant brought this change]
+- [Ant Bryan brought this change]
 
-  Add Metalink information and --metalink option to man page
+  MANUAL review
 
-- [ant brought this change]
+- curl.1: shorten lines, avoid referring to libcurl instead of curl
 
-  Add Metalink information and --metalink option to man page
+- [Ant Bryan brought this change]
 
-- [ant brought this change]
+  curl.1: fix more consistent wording
+  
+  "If this option is used several times, the last one will be used."
+  uniformity
 
-  Adds Metalink information to INSTALL
+- ssh: use the libssh2 agent API conditionally
+  
+  Commit e351972bc89aa4c brought in the ssh agent support but some uses of
+  the libssh2 agent API was done unconditionally which wasn't good enough
+  since that API hasn't always been present.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- white space fix: shorten long line
+  
+  ... to please checksrc.pl
 
-  --metalink option is available regardless of Metalink support.
+Kamil Dudka (9 Aug 2012)
+- docs: update the links to cipher-suites supported by NSS
+  
+  ... and make the list of cipher-suites in nss.c readable by humans.
+  
+  Bug: http://curl.haxx.se/mail/archive-2012-08/0016.html
 
-- [Tatsuhiro Tsujikawa brought this change]
+- nss: do not print misleading NSS error codes
 
-  metalink: parse downloaded Metalink file
+Daniel Stenberg (8 Aug 2012)
+- RELEASE-NOTES: synced with 0774386b23
   
-  Parse downloaded Metalink file and add downloads described there. Fixed
-  compile error without metalink support.
+  5 more bug fixes, one change, 6 contributors
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Armel Asselin brought this change]
 
-  Fixed HAVE_LIBMETALINK conditional is always true
+  docs: mention CURLSSH_AUTH_AGENT
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Armel Asselin brought this change]
 
-  metalink: minor metalinkfile fix
+  SSH: added agent based authentication
   
-  Don't update config->metalinkfile_last in operate(). Use local variable
-  to point to the current metalinkfile.
-
-- [Tatsuhiro Tsujikawa brought this change]
+  CURLSSH_AUTH_AGENT is a new auth type for SSH
 
-  metalink: show help message even if disabled
+- bump version to 7.28.0
   
-  Print message if --metalink is used while metalink support is not
-  enabled. Migrated Metalink support in tool_operate.c and removed
-  operatemetalink().
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  Applied patches from Daniel
+  I am about to merge the first patch that adds changes into the pending
+  release, and thus we bump the minor number.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- RELEASE-NOTES: added missing link
 
-  Support Metalink.
-  
-  This change adds experimental Metalink support to curl.
-  To enable Metalink support, run configure with --with-libmetalink.
-  To feed Metalink file to curl, use --metalink option like this:
-  
-    $ curl -O --metalink foo.metalink
+- curl_version: fixed Value stored to 'len' is never read
   
-  We use libmetalink to parse Metalink files.
+  Fixed this (harmless) clang-analyzer warning. Also fixed the source
+  indentation level.
 
-Steve Holme (26 May 2012)
-- DOCS: Fixed line spacing of authentication examples in CURLOPT_URL
+- TODO-RELEASE: the (nil) bug is fixed
 
-- DOCS: Changed domain names in various examples to example.com
+- add_next_timeout: minor restructure of code
   
-  Updated various references of real domain names to example.com as per
-  RFC-2606.
+  By reading the ->head pointer and using that instead of the ->size
+  number to figure out if there's a list remaining we avoid the (false
+  positive) clang-analyzer warning that we might dereference of a null
+  pointer.
 
-- DOCS: Fixed meaning of bit 2 in CURLOPT_POSTREDIR
+- verbose messages: fixed output of hostnames in re-used connections
   
-  Setting bit 2 for this value was documented as having a constant value
-  defined as CURL_REDIR_POST_303 yet referenced a 302 request.
+  I suspect this is a regression introduced in commit 207cf150, included
+  since 7.24.0.
   
-  Additionally corrected the meaning of CURL_REDIR_POST_ALL for all three
-  bits and fixed problems with the bolding of keywords in this section.
-
-- DOCS: Standardised how RFCs are referenced.
+  Avoid showing '(nil)' as hostname in verbose output by making sure the
+  hostname fixup function is called early enough to set the pointers that
+  are used for this. The name data is set again for each request even for
+  re-used connections to handle multiple hostnames over the same
+  connection (like with proxy) or that the casing etc of the host name is
+  changed between requests (which has proven to be important at least once
+  in the past).
+  
+  Test1011 was modified to use a redirect with a re-used a connection
+  since it then showed the bug and now lo longer does. There's currently
+  no easy way to have the test suite detect 'nil' texts in verbose ouputs
+  so no tests will detect if this problem gets reintroduced.
   
-  Standardised how RFCs are referenced so that the website may autolink to
-  the correct documentation on ietf.org. Additionally removed the one link
-  to RFC3986 on curl.haxx.se.
+  Bug: http://curl.haxx.se/mail/lib-2012-07/0111.html
+  Reported by: Gisle Vanem
 
-Yang Tse (26 May 2012)
-- Fix libcurl.pc and curl-config generation for static MingW* cross builds
+- [Nick Zitzmann brought this change]
 
-Daniel Stenberg (25 May 2012)
-- [Tatsuhiro Tsujikawa brought this change]
+  metalink: Un-broke the build when building --with-darwinssl
 
-  Made -D option work with -O and -J.
+Guenter Knauf (8 Aug 2012)
+- Fix some compiler warnings.
+
+Daniel Stenberg (8 Aug 2012)
+- TODO-RELEASE: two bugs fixed
   
-  To achieve this, first new structure HeaderData is defined to hold
-  necessary data to perform header-related work.  Then tool_header_cb now
-  receives HeaderData pointer as userdata.  All header-related work
-  (currently, dumping header and Content-Disposition inspection) are done
-  in this callback function.  HeaderData.outs->config is used to determine
-  whether each work is done.
+  These are now addressed:
   
-  Unit tests were also updated because after this change, curl code always
-  sets CURLOPT_HEADERFUNCTION and CURLOPT_HEADERDATA.
+  323 - patch - select.c / Curl_socket_check() interrupted
   
-  Tested with -O -J -D, -O -J -i and -O -J -D -i and all worked fine.
-
-Steve Holme (25 May 2012)
-- sasl: Re-factored auth-mechanism constants to be more generic
+  325 - Avoid leak of local device string when reusing connection
 
-- smtp: Moved auth-mechanism constants into a separate header file
+- curl.1: minor format fix for --data-ascii
   
-  Move the SMTP_AUTH constants into a separate header file in
-  preparation for adding SASL based authentication to POP3 as the two
-  protocols will need to share them.
+  ... and removal of trailing whitespace on a single line
+
+- [Ant Bryan brought this change]
 
-Kamil Dudka (25 May 2012)
-- nss: avoid using explicit casts of code pointers
+  curl man page cleanup
 
-Steve Holme (24 May 2012)
-- DOCS: Added LDAP to the CURLOPT_URL section
+- [Mike Crowe brought this change]
 
-- TODO: Removed DIGEST-MD5 authentication from SMTP to do list
-  
-  Removed DIGEST-MD5 from Section 9.1 Other authentication mechanisms as
-  the feature was added to SMTP in 7.26.0.
+  Avoid leak of local device string when reusing connection
   
-  Also corrected small spelling mistake.
+  Ensure that the copy of the CURLOPT_INTERFACE string is freed if we
+  decide we can reuse an existing connection.
 
-Daniel Stenberg (24 May 2012)
-- bump to 7.26.1: start working towards next release
+- Curl_socket_check: fix timeout return value for select users
+  
+  This is the same fix applied for the conditional code that uses select()
+  that was already done for the poll specific code in commit
+  b61e8b81f5038.
 
-Version 7.26.0 (24 May 2012)
+- [Maxime Larocque brought this change]
 
-Daniel Stenberg (24 May 2012)
-- RELEASE-NOTES: synced with ef60fdbd73
+  Curl_socket_check: fix return code for timeout
   
-  Just before 7.26.0 is about to ship
-
-Steve Holme (22 May 2012)
-- smtp: Fixed an issue with the multi-interface always sending postdata
+  We found a problem with ftp transfer using libcurl (7.23 and 7.25)
+  inside an application which is receiving unix signals (SIGUSR1,
+  SIGUSR2...) almost continuously. (Linux 2.4, PowerPC, HAVE_POLL_FINE
+  defined).
   
-  Due to the result code being reset to CURLE_OK when smtp_dophase_done()
-  was called, postdata would incorrectly be sent to the server when the
-  MAIL FROM or RCPT command was rejected.
+  Curl_socket_check() uses poll() to wait for the socket, and retries it
+  when a signal is received (EINTR). However, if a signal is received and
+  it also happens that the timeout has been reached, Curl_socket_check()
+  returns -1 instead of 0 (indicating an error instead of a timeout).
   
-  As such, libcurl would return the wrong result code from performing the
-  operation and additionally set CURLINFO_RESPONSE_CODE to be that
-  returned by the postdata command.
+  In our case, the result is an aborted connection even before the ftp
+  banner is received from the server, and a return value of
+  CURLE_OUT_OF_MEMORY from curl_easy_perform() (Curl_pp_multi_statemach(),
+  in pingpong.c, actually returns OOM if Curl_socket_check() fails :-)
+  Funny to debug on a system on which OOM is a possible cause).
   
-  Bug: http://curl.haxx.se/mail/lib-2012-05/0108.html
-  Reported by: Gokhan Sengun
+  Bug: http://curl.haxx.se/mail/lib-2012-07/0122.html
 
-- DOCS: Updated version number for features added in the pending release
+- RELEASE-NOTES: synced with b4a558041fdf65c0
 
-Daniel Stenberg (22 May 2012)
-- [Tatsuhiro Tsujikawa brought this change]
+- TODO-RELEASE: fixed another bug
+  
+  bug #3544688 "crash during retry with libcurl and SFTP"
 
-  Fixed compile error with GNUTLS+NETTLE
+- WSAPoll: disabled on all windows builds
   
-  In nettle/md5.h, md5_init and md5_update are defined as macros to
-  nettle_md5_init and nettle_md5_update respectively.  This causes
-  error when using MD5_params.md5_init and md5_update.  This patch
-  renames these members as md5_init_func and md5_update_func to
-  avoid name conflict. For completeness, MD5_params.md5_final was
-  also renamed as md5_final_func.
+  Due to WSAPoll bugs, libcurl does not work as intended. When the cURL
+  library is used to setup a connection to an incorrect port, normally the
+  result is CURLE_COULDNT_CONNECT, /* 7 */, but due to the bug in WSAPoll,
+  the result now is CURLE_OPERATION_TIMEDOUT, /* 28 - the timeout time was
+  reached */.
   
-  The changes in curl_ntlm_core.c is conversion error and fixed by
-  casting to proper type.
-
-- TODO-RELEASE: mention the pending biggies for 7.27.0
-
-- [Jan Ehrhardt brought this change]
-
-  winbuild: fix IPv6 enabled build
+  On August 1, Jan Koen Annot opened a case for this to Microsoft Premier
+  Online (https://premier.microsoft.com/).  The support engineer handling
+  the case wrote that the case description is quite clear.  He will try to
+  reproduce the issue and then proceed with troubleshooting it.
   
-  The existing check was wrong so IPv6 support would never be enabled
-
-- 7.26.0: will be the next release version
+  Reported by: Jan Koen Annot
+  Bug: http://curl.haxx.se/mail/lib-2012-07/0310.html
 
-- RELEASE-NOTES: synced with 8ae1e657e82a
+- retry request: only access the HTTP data if in fact HTTP
+  
+  When figuring out if the data stream needs to be rewound when the
+  request is to be resent, we must not access the HTTP struct unless the
+  protocol used is indeed HTTP...
   
-  And mention that this will become 7.26.0
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3544688
 
-Guenter Knauf (22 May 2012)
-- Updated dependency libary versions.
+- TODO: support DANE, we already support gnutls without gcrypt
 
-Daniel Stenberg (20 May 2012)
-- curl-config.1: fix curl-config usage in example
+- curl-config: parentheses fix
   
-  The curl-config command must be used twice in the single command line to
-  work properly in some environments.
+  Braces, not parentheses, should be used for shell variable names.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3528241
-  Reported by: Julian Taylor
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3551460
+  Reported by: Edward Sheldrake
 
-Steve Holme (17 May 2012)
-- smtp: Fixed non-escaping of dot character at beginning of line
+- VC build: add define for openssl
   
-  A dot character at the beginning of a line would not be escaped to a
-  double dot as required by RFC-2821, instead it would be deleted by the
-  mail server. Please see section 4.5.2 of the RFC for more information.
+  This fixes a build failure of lib/ssluse.c.
   
-  Note: This fix also simplifies the detection of repeated CRLF.CRLF
-  combinations, such as CRLF.CRLF.CRLF, a little rather than having to
-  advance the eob counter to 2.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3552997
 
-Daniel Stenberg (16 May 2012)
-- FAQ: updated 1.10 How many are using curl?
-  
-  Now linking to http://daniel.haxx.se/blog/2012/05/16/300m-users/
+- TODO-RELEASE: two bugs fixed!
 
-- disable-versioned-symbols: removed superfluous 'fi'
+- globbing: fix segfault when >9 globs were used
   
-  The commit e315927a1a left this in
-
-- MakefileBuild.vc: use the correct IDN variable
+  Stupid lack of range checks caused the code to overwrite local variables
+  after glob number nine. Added checks now.
   
-  The variable that control IDN enablement is called USE_IDN within these
-  Makefiles
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3546353
 
-- [Pierre Chapuis brought this change]
+- [Joe Mason brought this change]
 
-  autoconf: improve handling of versioned symbols
+  sws: close sockets properly
   
-  It checks whether versioned symbols should be enabled before checking
-  whether it is possible (i.e. the linker supports --version-script) or
-  not. This avoids a useless warning when building cURL on a platform that
-  does not use GNU ld.
+  Fix a bug where closed sockets (fd -1) were left in the all_sockets
+  list, because of missing parens in a pointer arithmetic expression
   
-  Moreover, it fixes broken indentation of this chunk of code.
+  Reenable the tests that were locking up due to this bug.
 
-- curl.1: clarify -x usage
-  
-  1 - fix the syntax in the .IP line
-  
-  2 - Provided user names and passwords are URL decoded by libcurl
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3525935
+- [Joe Mason brought this change]
 
-- NTLM: is supported in GnuTLS builds too
-  
-  ... since commit 9a4c887c4a7 introduced in libcurl 7.19.4
+  Remove debug logs that were accidentally checked in
 
-- TODO: happy eyeballs is now RFC6555
+- [Joe Mason brought this change]
 
-- my_useragent: shorten user-agent
-  
-  The built-in user-agent will now only say curl/[version] and nothing
-  else in an attempt to decrease overhead in HTTP requests.
+  Use select in sws, which has better cross-platform support than poll
 
-- CURLOPT_HEADERFUNCTION: works for non-HTTP protocols too
+- [Joe Mason brought this change]
 
-Claes Jakobsson (3 May 2012)
-- Add note about default timeout in CURLOPT_TIMEOUT
+  Use cross-platform curlx_nonblock instead of fcntl in sws
 
-Daniel Stenberg (2 May 2012)
-- [Gokhan Sengun brought this change]
+- operate: fix clang-analyzer warnings for never read variables
+  
+  Two separate "Value stored to 'XXX' is never read" warnings
 
-  MD5: OOM fix
+- operate: fix clang-analyzer warning
   
-  check whether md5 initialization succeeded before updating digest of
-  buffers onto it
+  Value stored to 'separator' is never read
 
-- REALEASE-NOTES: synced with 64f48e884e3c1
+- metalink: change code order to build with gnutls-nettle
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3554668
+  Reported by: Anthony G. Basile
 
-- [Jan Schaumann brought this change]
+- gtls: fix build failure by including nettle-specific headers
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3554668
+  Reported by: Anthony G. Basile
 
-  add newly created manual page
+Guenter Knauf (6 Aug 2012)
+- Fixed compiler warning - argument is type long.
 
-- [Jan Schaumann brought this change]
+Daniel Stenberg (6 Aug 2012)
+- DISABLED: disable the new tests that do NTLM
+  
+  The tests 2025, 2028 and 2031 don't work for me so I'll have them
+  disabled for now until we solve the problem.
 
-  add a manual page for mk-ca-bundle
+Joe Mason (3 Aug 2012)
+- Add tests of auth retries
 
-Guenter Knauf (26 Apr 2012)
-- Updated dependency lib versions.
+- Cleanup handshake after clean NTLM failure
 
-Daniel Stenberg (23 Apr 2012)
-- URL parse: reject numerical IPv6 addresses outside brackets
-  
-  Roman Mamedov spotted (in
-  http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=670126) that curl would
-  not complain when given a URL with an IPv6 numerical address without
-  brackets. It would simply cut off the last ":[hex]" part and thus not
-  work correctly.
-  
-  That's a URL using an illegal syntax and now libcurl will instead return
-  a clear error code and error message detailing the error.
-  
-  The above mentioned bug report claims this to be a regression but
-  libcurl does not guarantee functionality when given URLs that aren't
-  following the URL spec (RFC3986 mostly). I consider the fact that it
-  used to handle this differently a mere coincidence.
+- Zero out auth structs before transfer
 
-- Curl_MD5_init: fix OOM memory leak
-  
-  Bug: http://curl.haxx.se/mail/lib-2012-04/0246.html
-  Reported by: Michael Mueller
+- Add a polling loop in main to read from more than one socket at once. Add the O_NONBLOCK and
+  SO_KEEPALIVE flag to all sockets. Note that several loops which used to continue on a return value
+  of 0 (theoretical since 0 would never be returned without O_NONBLOCK) now break on 0 so that they
+  won't continue reading until after poll is called again.
 
-- [Gokhan Sengun brought this change]
+- Change return values of get_request, accept_connection and service_connection to add a return code
+  for non-blocking sockets: now -1 means error or connection finished, 1 means data was read, and 0
+  means there is no data available now so need to wait for poll (new return value)
 
-  OpenSSL cert: provide more details when cert check fails
+- Hoist the loop out of get_request, and make sure that it can be reentered when a request is
+  half-finished.
   
-  curl needs to be more chatty regarding certificate verification failure
-  during SSL handshake
-
-Yang Tse (23 Apr 2012)
-- Revert "sspi: Added version information"
+  Note the the req struct used to be re-initialized AFTER reading pipeline data, so now that we
+  initialize it from the caller we must be careful not to overwrite the pipeline data.
   
-  This reverts commit 2976de480808119dae08fc6f52c8d75ba1aedb1a.
-
-- Revert "sspi - Small code tidy up"
+  Also we now need to handle the case where the buffer is already full when get_request is called -
+  previously this never happened as it was always called with an empty buffer and looped until done.
   
-  This reverts commit 46cd5f1daddad3b3e542e6d93eee52e8bb9a8687.
+  Now get_request is called in a loop, so the next step is to run the loop on a socket only when poll
+  signals it is readable.
 
-- Revert "Fixed 'extra tokens at end of #endif directive'."
-  
-  This reverts commit 77172a242fc0c820f97eae39d0e3e0f265222fe6.
+- Move blocks of code from the sws main loop into their own functions for easier refactoring later.
+  The next step will be to call the correct function after a poll, rather than looping unconditionally
 
-- Revert "Fixed 'Trailing whitespace' found by checksrc."
-  
-  This reverts commit 683bfa60ad0b52505947e59b03515e5f44378523.
+- Remove the --fork option of sws, since it makes refactoring to use poll more complicated and should
+  be redundant once we poll
 
-- Revert "sspi: Code tidy up to remove unused variable."
+Kamil Dudka (30 Jul 2012)
+- file: use fdopen() for uploaded files if available
+  
+  It eliminates noisy events when using inotify and fixes a TOCTOU issue.
   
-  This reverts commit 412510f97407d617426d93b80e6b6bf0a8ff11ac.
+  Bug: https://bugzilla.redhat.com/844385
 
-- Revert "Add -lversion if build with SSPI."
+Guenter Knauf (29 Jul 2012)
+- Added DWANT_IDN_PROTOTYPES define for MSVC too.
   
-  This reverts commit 9ec0b7e0c44d29eca6f45916fe5af3501168fe85.
+  Discussion on the list: http://curl.haxx.se/mail/lib-2012-07/0271.html
 
-Guenter Knauf (23 Apr 2012)
-- Add -lversion if build with SSPI.
+- Added Win32 problems.
 
-Steve Holme (22 Apr 2012)
-- sspi: Code tidy up to remove unused variable.
+- Added hint to read docs/INSTALL too.
 
-Guenter Knauf (22 Apr 2012)
-- Fixed 'Trailing whitespace' found by checksrc.
+- Added new file to distro.
 
-- Fixed 'extra tokens at end of #endif directive'.
+Steve Holme (28 Jul 2012)
+- TODO: Updated after 7.27.0 release
+  
+  Removed APOP and SASL authentication from the POP3 section and metalink
+  support from the client section as these features were implemented in
+  this release.
+  
+  Moved adding gssapi to SASL into it's own section rather than repeat it
+  for each protocol.
 
-Steve Holme (22 Apr 2012)
-- sspi - Small code tidy up
+Daniel Stenberg (28 Jul 2012)
+- TODO-RELEASE: updated after 7.27.0 release
 
-- sspi: Added version information
-  
-  Added version information for Windows SSPI to curl's main version
-  string and removed SSPI from the features string.
+- THANKS: 12 new contributors from the 7.27.0 release
 
-Daniel Stenberg (20 Apr 2012)
-- HTTP: empty chunked POST ended up in two zero size chunks
-  
-  When doing a chunked-encoded POST with -d (CURLOPT_POSTFIELDS) and the
-  size of the POST was zero length, it made libcurl first send a zero
-  chunk and then the terminating one. This could confuse a receiver and it
-  should rather just send the terminating chunk as it does with this fix.
-  
-  Test case 1333 is added to verify.
+- version bump: start towards next release
   
-  Bug: http://curl.haxx.se/mail/archive-2012-04/0060.html
-  Reported by: Arnaud Compan
+  Let's call it 7.27.1 for now, but it it probably going to become 7.28.0
+  when released.
 
-Guenter Knauf (20 Apr 2012)
-- Updated dependency lib versions.
+Version 7.27.0 (27 Jul 2012)
 
-Daniel Stenberg (19 Apr 2012)
-- singleipconnect: return OK even when Curl_socket() fails
-  
-  Commit 9109cdec11ee5a brought this regression (shipped since 7.24.0).
-  
-  The singleipconnect() function must not return an error if Curl_socket()
-  returns an error. It should then simply return OK and pass a SOCKET_BAD
-  back simply because that is how the user of this function expects it to
-  work and something else is not fine.
-  
-  Reported by: Blaise Potard
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3516508
+Guenter Knauf (27 Jul 2012)
+- Fixed compiler warning 'unused parameter'.
 
-Yang Tse (19 Apr 2012)
-- Take in account that CURLAUTH_* bitmasks are now 'unsigned long' - follow-up
-  
-  MIPSPro compiler detected curl_easy_getinfo() related missing adjustments.
-  SunPro compiler detected curl tool --libcurl option related missing adjustments.
+- Added prototypes to kill compiler warning.
 
-- url.c: CURLOPT_HTTPAUTH and CURLOPT_PROXYAUTH fixes
-  
-  Fail with CURLE_NOT_BUILT_IN when none of requested auth methods is supported.
+- Added --with-winidn to configure.
   
-  Reject CURLAUTH_ONLY bit when given alone or with CURLAUTH_NONE.
+  This needs another look from the configure experts. I tested that
+  it works so far with MinGW64 cross-compiler; libcurl builds and
+  links fine, but curl not yet ...
+
+Daniel Stenberg (27 Jul 2012)
+- [Ant Bryan brought this change]
+
+  Update man page info on --metalink and typo.
 
-- Take in account that CURLAUTH_* bitmasks are now 'unsigned long'
+- RELEASE-NOTES: remove mentioned of bug never in a release
   
-  Data type of internal vars holding CURLAUTH_* bitmasks changed from 'long' to
-  'unsigned long' for proper handling and operating.
+  The --silent bug came with 7561a0fc834c435 which was never in a release.
+  Pointed out by Kamil Dudka
 
-- curl.h: CURLAUTH_* bitmasks adjusted to become 'unsigned long' typed
+- RELEASE-NOTES: synced with 33b815e894fb
   
-  Info: http://curl.haxx.se/mail/lib-2012-04/0170.html
+  4 more bugfixes, 3 more contributors
 
-- Some explicit conversion to 'long' of curl_easy_setopt() third argument
+Guenter Knauf (26 Jul 2012)
+- Changed Windows IDN text to 'WinIDN'.
   
-  Explicit conversion to 'long' of curl_easy_setopt() third argument for options
-  CURLOPT_HTTPAUTH and CURLOPT_PROXYAUTH given that this is how its bitmasks are
-  docummented to be used.
+  Synced the output to the same short form as we now use for
+  Windows SSL (WinSSL).
 
-- build adjustments: commit 9e24b9c7 follow-up
+Daniel Stenberg (25 Jul 2012)
+- [Nick Zitzmann brought this change]
 
-Daniel Stenberg (17 Apr 2012)
-- -# progress meter: avoid superfluous updates and duplicate lines
-  
-  By comparing if a different "progress point" is reached or not since the
-  previous update, the progress function callback for this now avoids many
-  superfluous screen updates. This has the nice side-effect that it fixes
-  a problem that causes a second progress meter line.
-  
-  The second line output happened because when we use the -# progress
-  meter, we force a newline output after the transfer in the main loop in
-  curl, but when libcurl calls the progress callback from
-  curl_easy_cleanup() it would then output the progress display
-  again. Possibly the naive newline output is wrong but this optimization
-  was suitable anyway...
+  darwinssl: fixed freeze involving the multi interface
   
-  Reported by: Daniel Theron
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3517418
-
-Yang Tse (16 Apr 2012)
-- nss.c: fix compiler warning
+  Previously the curl_multi interface would freeze if darwinssl was
+  enabled and at least one of the handles tried to connect to a Web site
+  using HTTPS. Removed the "wouldblock" state darwinssl was using because
+  I figured out a solution for our "would block but in which direction?"
+  dilemma.
 
-- curl-compilers.m4: -Wno-pedantic-ms-format for Windows gcc 4.5 builds
-  
-  When building a Windows target with gcc 4.5 or newer and strict compiler
-  warnings enabled use -Wno-pedantic-ms-format in addition to other flags.
+Guenter Knauf (25 Jul 2012)
+- Added support for tls-srp to MinGW builds.
 
-Kamil Dudka (16 Apr 2012)
-- tests/valgrind.pm: suppress memleaks of NSS_InitContext()
+Daniel Stenberg (24 Jul 2012)
+- curl_easy_setopt: fix typo
   
-  Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=745224
+  Reported by: Santhana Todatry
 
-Yang Tse (14 Apr 2012)
-- setup_once.h: tighten requirements for stdbool.h header inclusion
-  
-  Include stdbool.h only when it is available and configure is capable of
-  detecting a proper 'bool' data type when the header is included.
+- keepalive: multiply value for OS-specific units
   
-  Compilation fix for old or unpatched versions of XL C compiler.
+  DragonFly uses milliseconds, while our API and Linux use full seconds.
   
-  Report: http://curl.haxx.se/mail/archive-2012-04/0022.html
+  Reported by: John Marino
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3546257
 
-- headers: require GCC 2.7 or newer in order to allow attribute GCC'isms usage
+Kamil Dudka (22 Jul 2012)
+- http: print reason phrase from HTTP status line on error
   
-  Usage in other code paths already protected and requiring even newer versions.
-
-- [Jonathan Nieder brought this change]
+  Bug: https://bugzilla.redhat.com/676596
 
-  headers: surround GCC attribute names with double underscores
-  
-  This protects from attribute names being defined by third party's code.
+- tool_operate: fix misplaced initialization of orig_noprogress
   
-  Improvement: http://curl.haxx.se/mail/lib-2012-04/0127.html
-
-Guenter Knauf (13 Apr 2012)
-- Updated copyright year.
-
-Yang Tse (13 Apr 2012)
-- testcurl.pl: build example programs for Android cross-compiles
-
-- nss.c: fix compiler warning
+  ... and orig_isatty which caused --silent to be entirely ignored in case
+  the standard output was redirected to a file!
 
-- examples: fix compiler warnings
+Daniel Stenberg (21 Jul 2012)
+- [Anton Yabchinskiy brought this change]
 
-Kamil Dudka (13 Apr 2012)
-- nss: provide human-readable names for NSS errors
+  Client's "qop" value should not be quoted (RFC2617, section 3.2.2).
 
-- nss: use NSS_InitContext() to initialize NSS if available
-  
-  NSS_InitContext() was introduced in NSS 3.12.5 and helps to prevent
-  collisions on NSS initialization/shutdown with other libraries.
-  
-  Bug: https://bugzilla.redhat.com/738456
+Guenter Knauf (21 Jul 2012)
+- Fixed typo.
 
-- nss: unconditionally require PK11_CreateGenericObject()
+Daniel Stenberg (20 Jul 2012)
+- make: make distclean work again
   
-  This bumps the minimal supported version of NSS to 3.12.x.
-
-Guenter Knauf (13 Apr 2012)
-- Set batch mode to 755 to make Cygwin git pulls work.
-
-- Added section for Android configure cross-compile.
-
-- Added NetWare export.
-
-Yang Tse (12 Apr 2012)
-- testcurl.pl: build example programs for MinGW cross-compiles
+  The clean-local hook needed some polish to make sure make distclean
+  works. Added comment describing why.
 
-- tool_operate.c: fix compiler warning
+- test Makefile: only feature 'unit' once in the list of dirs
 
-- url.c: fix compiler warning
+Dan Fandrich (20 Jul 2012)
+- Fixed some typos in documentation
 
-Guenter Knauf (12 Apr 2012)
-- Updated dependency lib versions (2nd try).
+Guenter Knauf (20 Jul 2012)
+- Fixed CR issue with Win32 version on MSYS.
+  
+  Previous fix didnt work on Linux ...
 
-- Updated dependency lib versions.
+- Fixed CR issue with Win32 version on MSYS.
 
-Yang Tse (12 Apr 2012)
-- tool_formparse.c: rename a couple of vars to avoid declaration shadowing
+- Fixed MSYS <-> Windows path convertion.
+  
+  Replaced the Windows real path from mount hack with a more
+  reliable and simpler hack: the MSYS shell has a builtin pwd
+  which understands a -W option which does convertion to Windows
+  paths. Tested and confirmed that this works on all MSYS versions
+  I have back to a 3 year old one.
 
-- OS400/initscript.sh: fix db2_name() module name generation
+- Follow-up fix to detect SSL libs with MinGW.
   
-  Allow repeatable file name length reduction on file names with underscore or
-  dash characters. This is done in order to better support libcurl's existing
-  source file names and allow OS/400 package to build out of the box again.
+  1) the check for winssl needs to come before nss check
+  2) the SSL checks must begin with a new if or else we will
+  never find any SSL lib with MinGW.
 
-- testcurl.pl: log more environment vars that modify configure and build behavior
+- Tell git to not convert configure-related files.
 
-- configure: NATIVE_WINDOWS no longer defined in config files
+- Trial to teach runtests.pl about WinSSL.
 
-- build adjustments: CURL_HIDDEN_SYMBOLS no longer defined in config files
-  
-  configure script now provides conditional definitions for Makefile.am
-  that result in CURL_HIDDEN_SYMBOLS being defined by resulting makefiles
-  when appropriate.
+- Fixed warning 'uninitialized value in numeric gt'.
   
-  Additionally, configure script option for symbol hiding control is now
-  named --enable-symbol-hiding --disable-symbol-hiding. While still valid,
-  old option name --enable-hidden-symbols --disable-hidden-symbols will
-  be deprecated in some future release.
+  This is a MSYS/MinGW-only warning; full warning text is:
+  Use of uninitialized value in numeric gt (>) at ../../curl/tests/runtests.pl line 2227.
 
-- build adjustments: functionally revert commits 4d3fb91f and bbfe1182
+Daniel Stenberg (15 Jul 2012)
+- RELEASE-NOTES: synced with 9d11716933616
   
-  Undefining CURL_HIDDEN_SYMBOLS in source files isn't the proper fix.
+  Fixed 6 bugs, added 3 contributors
 
-- test servers: build adjustment
+- multi_runsingle: added precaution against easy_conn NULL pointer
   
-  Undefine CURL_HIDDEN_SYMBOLS libcurl private preprocessor macro that might
-  leak from lib/setup.h into source files where this should not be defined.
+  In many states the easy_conn pointer is referenced and just assumed to
+  be working. This is an added extra check since analyzing indicates
+  there's a risk we can end up in these states with a NULL pointer there.
 
-- libtests: build adjustment
+- getparam: fix the GetStr() macro
   
-  Undefine CURL_HIDDEN_SYMBOLS libcurl private preprocessor macro that might
-  leak from lib/setup.h into source files where this should not be defined.
+  It should return PARAM_NO_MEM if the strdup fails. Spotted by
+  clang-analyzer
 
-- curl tool: make setup.h first header included in tool_setup.h again
+Guenter Knauf (15 Jul 2012)
+- Tell git to not convert configure-related files.
 
-- curl tool: use configuration files from lib directory - follow-up II
+Daniel Stenberg (13 Jul 2012)
+- parse_proxy: remove dead assignment
   
-  lib/config-win32.h no longer copied to src/config-win32.h
+  Spotted by clang-analyzer
 
-- configure: Windows cross-compilation fixes
+- ftp_do_more: add missing check of return code
   
-  BUILDING_LIBCURL and CURL_STATICLIB are no longer defined in curl_config.h,
-  configure will generate appropriate conditionals so that mentioned symbols
-  get defined and used in Makefiles at compilation time
-
-- curl tool: make curl.h first header included in tool_setup.h
+  Spotted by clang-analyzer. The return code was never checked, just
+  stored.
 
-- curl tool: use configuration files from lib directory - follow-up I
+- getinfo: use va_end and cut off Curl_ from static funcs
   
-  amigaos.[ch] now integrates nicely with any libcurl build
+  va_end() needs to be used after va_start() and we don't normally use
+  Curl_ prefixes for purely static functions.
 
-- curl tool: use configuration files from lib directory
-  
-  Configuration files such as curl_config.h and all config-*.h no longer exist
-  nor are generated/copied into 'src' directory, now these only exist in 'lib'
-  directory from where curl tool sources uses them.
-  
-  Additionally old src/setup.h has been refactored into src/tool_setup.h which
-  now pulls lib/setup.h
-  
-  The possibility of a makefile needing an include path adjustment exists.
+- [Philip Craig brought this change]
 
-Daniel Stenberg (6 Apr 2012)
-- PolarSSL: correct return code for CRL matches
+  Split up Curl_getinfo
   
-  When a server certificate matches one in the given CRL file, the code
-  now returns CURLE_SSL_CACERT as test case 313 expects and verifies.
+  This avoids false positives from clang's scan-build.
 
-- PolarSSL: include version number in version string
-  
-  Previously it would say PolarSSL only, now it says PolarSSL/1.1.0 in the
-  same style other libs and components do.
+Guenter Knauf (12 Jul 2012)
+- Added error checking for curl_global_init().
+
+- Added curl_global_* functions.
 
-- test: added test 1332 that tests --post303
+- Minor fixes to MinGW makefiles.
 
-- curl: add --post303 to set the CURL_REDIR_POST_303 option
+Daniel Stenberg (12 Jul 2012)
+- docs: mention CURL_GLOBAL_DEFAULT
 
-- [Andrei Cipu brought this change]
+Guenter Knauf (12 Jul 2012)
+- Added curl_global_* functions.
 
-  CURLOPT_POSTREDIR: also allow 303 to do POST on the redirected URL
+Daniel Stenberg (12 Jul 2012)
+- tests: verify the stricter numeric option parser
   
-  As it turns out, some people do want that after all.
+  Test 1409 and 1410 verifies the stricter numeric option parser
+  introduced the other day in commit f2b6ebed7b.
 
-- test1331: cookies on a 407 response
+- SWS: use of uninitialized memory fix
   
-  Verify that cookies are sent back even after a 407 response has been
-  received
-
-- [Dag Ekengren brought this change]
-
-  PolarSSL: add support for asynchronous connect
-
-- [Tim Heckman brought this change]
+  I made "connmon" not get initialized properly before use, and I use the
+  big hammer and make sure we always clear the entire struct to avoid any
+  problem like this in the future.
 
-  Revert "access the CA source file using HTTPS"
-  
-  This reverts commit f7e2ab6.
+- test48: verify that HEAD doesn't close extra
   
-  This change caused fetching of the certificates to become unreliable.
+  Two commits ago, we fixed a bug where the connction would be closed
+  prematurely after a HEAD. Now I added connection-monitor to test 48 and
+  added a second HEAD and make sure that both are sent over the same
+  connection.
   
-  Bug: http://curl.haxx.se/mail/lib-2012-03/0238.html
-  Reported by: Tim Heckman
-
-- [Andrei Cipu brought this change]
+  This triggered a failure before the bug fix and now works. Will help us
+  avoid a future regression of this kind.
 
-  IPv6 cookie domain: get rid of the first bracket before the second.
+- connection-monitor: always log disconnect when enabled
   
-  Commit 97b66ebe was copying a smaller buffer, thus duplicating the last
-  character.
+  This makes verifying easier and makes us more sure curl closes the
+  connection only at the correct point in time. Adjusted test 206 and 1008
+  accordingly and updated the docs for it.
 
-- MAIL-ETIQUETTE: Added "How to unsubscribe"
+- HEAD: don't force-close after response-headers
   
-  ... as it seems to hard for some people
-
-Yang Tse (4 Apr 2012)
-- ftp.c: ftplistparser related OOM handling fix
-
-- smtp.c: fix compiler warnings
+  A HEAD response has no body length and gets the headers like the
+  corresponding GET would so it should not get closed after the response
+  based on the same rules. This mistake caused connections that did HEAD
+  to get closed too often without a valid reason.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=3542731
+  Reported by: Eelco Dolstra
 
-- lib599.c: fix compiler warning
+Guenter Knauf (12 Jul 2012)
+- Removed trailing empty strings from awk script.
 
-Daniel Stenberg (4 Apr 2012)
-- runtests: yassl and polarssl are not openssl
-  
-  Don't set the "has_openssl" variable if yassl or polarssl is found as
-  they will simply not work as 100% drop-in replacements for some of the
-  stuff the "OpenSSL" feature is used for.
-  
-  I spotted this problem when doing test runs with PolarSSL builds.
+- Cleaned up version awk script.
 
-- [Lijo Antony brought this change]
+- Added project copyright header.
 
-  connect.c: return changed to CURLE_COULDNT_CONNECT when opensocket fails
+- Removed libcurl.imp from Makefile.am.
   
-  Curl_socket returns CURLE_COULDNT_CONNECT when the opensocket callback
-  returns CURL_SOCKET_BAD. Previous return value CURLE_FAILED_INIT
-  conveys incorrect information to the user.
+  Updated .gitignore for NetWare created files.
 
-Steve Holme (2 Apr 2012)
-- pop3: Reworked the command sending and handling
-  
-  Reworked the command sending from two specific LIST and RETR command
-  functions into a single command based function as well as the two
-  associated response handlers into a generic command handler.
+- Added missing dependency to export list.
 
-Daniel Stenberg (1 Apr 2012)
-- [Dave Reisner brought this change]
+- Fixed export list path.
 
-  curl tool: add filename_effective token for --write-out
-  
-  By modifying the parameter list for ourWriteOut() and passing the
-  OutStruct that collects data in tool_operate, we get access to the
-  remote name that we're writing to. Shell scripters should find this
-  useful when used in conjuntion with the --remote-header-name option.
+- Changed NetWare build to generate export list.
 
-Steve Holme (1 Apr 2012)
-- smtp.c: Code policing and tidy up
+- Added pointer to FAQ for linkage errors.
 
-Daniel Stenberg (1 Apr 2012)
-- [Armel Asselin brought this change]
+- Small NetWare makefile tweak.
 
-  SSH: public key can now be an empty string
-  
-  If an empty string is passed to CURLOPT_SSH_PUBLIC_KEYFILE, libcurl will
-  pass no public key to libssh2 which then tries to compute it from the
-  private key. This is known to work when libssh2 1.4.0+ is linked against
-  OpenSSL.
+- Changed MinGW makefiles to use WINSSL now.
 
-- [Tatsuhiro Tsujikawa brought this change]
+Daniel Stenberg (10 Jul 2012)
+- test231: fix wrong -C use!
 
-  OpenSSL: Made cert hostname check conform to RFC 6125
-  
-  This change replaces RFC 2818 based hostname check in OpenSSL build with
-  RFC 6125 [1] based one.
-  
-  The hostname check in RFC 2818 is ambiguous and each project implements
-  it in the their own way and they are slightly different. I check curl,
-  gnutls, Firefox and Chrome and they are all different.
-  
-  I don't think there is a bug in current implementation of hostname
-  check. But it is not as strict as the modern browsers do. Currently,
-  curl allows multiple wildcard character '*' and it matches '.'. (as
-  described in the comment in ssluse.c).
+- cmdline: parse numerical options stricter
   
-  Firefox implementation is also based on RFC 2818 but it only allows at
-  most one wildcard character and it must be in the left-most label in the
-  pattern and the wildcard must not be followed by any character in the
-  label.[2] Chromium implementation is based on RFC 6125 as my patch does.
-  Firefox and Chromium both require wildcard in the left-most label in the
-  presented identifier.
+  1 - str2offset() no longer accepts negative numbers since offsets are by
+  nature positive.
   
-  This patch is more strict than the current implementation, so there may
-  be some cases where old curl works but new one does not. But at the same
-  time I think it is good practice to follow the modern browsers do and
-  follow the newer RFC.
+  2 - introduced str2unum() for the command line parser that accepts
+  numericals which are not supposed to be negative, so that it will
+  properly complain on apparent bad uses and mistakes.
   
-  [1] http://tools.ietf.org/html/rfc6125#section-6.4.3
-  [2] https://bugzilla.mozilla.org/show_bug.cgi?id=159483
+  Bug: http://curl.haxx.se/mail/archive-2012-07/0013.html
 
-- HTTP: reset expected DL/UL sizes on redirects
-  
-  With FOLLOWLOCATION enabled. When a 3xx page is downloaded and the
-  download size was known (like with a Content-Length header), but the
-  subsequent URL (transfered after the 3xx page) was chunked encoded, then
-  the previous "known download size" would linger and cause the progress
-  meter to get incorrect information, ie the former value would remain
-  being sent in. This could easily result in downloads that were WAY
-  larger than "expected" and would cause >100% outputs with the curl
-  command line tool.
+- docs: switch to proper UTF-8 for text file encoding
+
+Yang Tse (9 Jul 2012)
+- Make Curl_schannel_version() return "WinSSL"
   
-  Test case 599 was created and it was used to repeat the bug and then
-  verify the fix.
+  Modification based on voting result:
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=3510057
-  Reported by: Michael Wallner
+  http://curl.haxx.se/mail/lib-2012-07/0104.html
 
-Steve Holme (31 Mar 2012)
-- [Gökhan Şengün brought this change]
+Daniel Stenberg (9 Jul 2012)
+- test 46: use different path lengths to get reliable sort order
+  
+  Since the order of the cookies is sorted by the length of the paths,
+  having them on the same path length will make the test depend on what
+  order the qsort() implementation will put them. As seen in the
+  windows/msys output posted by Guenter in this posting:
+  http://curl.haxx.se/mail/lib-2012-07/0105.html
 
-  smtp: Add support for DIGEST-MD5 authentication
+- cookie: fixed typo in comment
 
-- [Gökhan Şengün brought this change]
+- [Christian Hägele brought this change]
 
-  smtp: Cody tidy up of md5 digest length
+  https_getsock: provided for schannel backend as well
+  
+  The function https_getsock was only implemented properly when USE_SSLEAY
+  or USE_GNUTLS is defined, but it is also necessary for USE_SCHANNEL.
   
-  Replaced the hard coded md5 digest length (16) with a preprocessor
-  constant
+  The problem occurs when Curl_read_plain or Curl_write_plain returns
+  CURLE_AGAIN. In that case CURL_OK is returned to the multi-interface an
+  the used socket is set to state CURL_POLL_REMOVE and the easy-state is
+  set to CURLM_STATE_PROTOCONNECT. This is fine, because later the socket
+  should be set to CURL_POLL_IN or CURL_POLL_OUT via multi_getsock. That's
+  where https_getsock is called and doesn't return any sockets.
 
-- [Gökhan Şengün brought this change]
+- RELEASE-NOTES: added a URL reference to cookie docs
 
-  md5: Add support for calculating the md5 sum of buffers incrementally
-  
-  It is now possible to calculate the md5 sum as the stream of buffers
-  becomes known where as previously it was only possible to calculate the
-  md5 sum of a pre-prepared buffer.
+Guenter Knauf (8 Jul 2012)
+- Removed obsolete include path to project root.
 
-Daniel Stenberg (31 Mar 2012)
-- Revert "mk-ca-bundle.pl: use LWP::UserAgent for https"
-  
-  This reverts commit 9f0e1689f169b83b8fbdae23e0024cc57dcbc770.
-  
-  It turned out that "improvement" instead made the fetching of the
-  certificates unreliable
-  
-  Bug: http://curl.haxx.se/mail/lib-2012-03/0238.html
-  Reported by: Tim Heckman
+Daniel Stenberg (8 Jul 2012)
+- TODO-RELEASE: issue 316 NTLM over proxy is fixed
 
-Steve Holme (31 Mar 2012)
-- DOCS: Added information regarding POP3 commands to CURLOPT_CUSTOMREQUEST
+- [Nick Zitzmann brought this change]
 
-- pop3: Added support for additional pop3 commands
+  darwinssl: don't use arc4random_buf
   
-  This feature allows the user to specify and use additional POP3
-  commands such as UIDL and DELE via libcurl's CURLOPT_CUSTOMREQUEST or
-  curl's -X command line option.
+  Re-wrote Curl_darwinssl_random() to not use arc4random_buf() because the
+  function is not available prior to iOS 4.3 and OS X 10.7.
 
-Yang Tse (30 Mar 2012)
-- [tetetest tetetest brought this change]
+- KNOWN_BUGS: #80 Curl doesn't recognize certs in DER format
 
-  CMakeLists.txt: fix Windows LDAP/LDAPS option handling
-  
-  bug: http://curl.haxx.se/mail/lib-2012-03/0278.html
+- KNOWN_BUGS: #79 - any RCPT TO failure makes and error
 
-- [tetetest tetetest brought this change]
+Marc Hoersken (8 Jul 2012)
+- winbuild: Aligned BUILD.WINDOWS.txt and Makefile.vc usage help
 
-  CMakeLists.txt: fix MS Visual Studio x64 unsigned long long literal suffix
+- winbuild: Make USE_WINSSL depend on USE_SSPI
   
-  bug: http://curl.haxx.se/mail/lib-2012-03/0255.html
-
-Steve Holme (28 Mar 2012)
-- TODO: Corrected POP3 section heading
+  Since WinSSL cannot be build without SSPI being enabled,
+  USE_WINSSL now defaults to the value of USE_SSPI.
+  
+  The makefile does now raise an error if WinSSL is enabled
+  while SSPI is disabled.
 
-Yang Tse (28 Mar 2012)
-- curl-functions.m4: update detection logic of getaddrinfo() thread-safeness
+- winbuild: Aligned USE_SSPI with other USE_x defines
+  
+  Renamed external parameter USE_SSPI = yes/no to ENABLE_SSPI = yes/no.
+  Backwards compatible change: USE_SSPI can still be passed as external
+  parameter with yes/no value as long as ENABLE_SSPI is not given.
   
-  Take in account that h_errno might be a modifiable lvalue not defined as
-  a C preprocessor macro
+  USE_x defines are passed around with true/false values internally,
+  USE_SSPI is now aligned to this approach, but still accepts external
+  values yes/no being passed, just like the other defines.
 
-Steve Holme (27 Mar 2012)
-- TODO: Added SMTP and POP3 specific features
+- winbuild: Clean up formatting and variable naming
+  
+  - Changed space usage to line up with the whole file
+  - Renamed CFLAGS_SSPI/IPV6 to SSPI/IPV6_CFLAGS to be
+    consistent with the other CFLAGS_x variables
+  - Make use of existing CFLAGS_IPV6 (previously IPV6_CFLAGS)
+    instead of appending directly to CFLAGS
 
-Yang Tse (27 Mar 2012)
-- [Olaf Flebbe brought this change]
+Daniel Stenberg (7 Jul 2012)
+- [Nick Zitzmann brought this change]
 
-  tool_cb_dbg.c: fix tool_cb_dbg() to behave properly even for size 0
+  darwinssl: output cipher with text, remove SNI warning
   
-  curl segfault in debug callback triggered with CURLINFO_HEADER_OUT and size 0
+  The code was printing a warning when SNI was set up successfully. Oops.
   
-  bug: http://curl.haxx.se/bug/view.cgi?id=3511794
-
-- test #1405: support HTTP disabled builds
-
-Steve Holme (26 Mar 2012)
-- test #809: Updated error code to match recent pop3 changes
+  Printing the cipher number in verbose mode was something only TLS/SSL
+  programmers might understand, so I had it print the name of the cipher,
+  just like in the OpenSSL code. That'll be at least a little bit easier
+  to understand. The SecureTransport API doesn't have a method of getting
+  a string from a cipher like OpenSSL does, so I had to generate the
+  strings manually.
 
-Yang Tse (25 Mar 2012)
-- ssh.c: code cleanup, Curl_safefree() already nullifies pointer
+- RELEASE-NOTES: synced with 5a99bce07d
 
-- fix some compiler warnings
+- KNOWN_BUGS: NTLM with unicode works with schannel/winssl!
+  
+  Bug #75 updated with additional info, still remains for builds with
+  other backends.
 
-Steve Holme (25 Mar 2012)
-- pop3.c: Corrected problem with state() introduced in 01690ed2bce5
+- code police: narrow source to < 80 columns
 
-- pop.c: Small code tidy up
+Yang Tse (5 Jul 2012)
+- unicode NTLM SSPI: cleanup follow-up
 
-- pop3: Removed the need for the single message LIST command handler
+- unicode NTLM SSPI: cleanup
   
-  Simplified the code to remove the need for a separate "LIST <msg id>"
-  command handler and state machine and instead use the LIST command
-  handler for both operations.
+  Reduce the number of #ifdef UNICODE directives used in source files.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/configure	2013-02-06 17:47:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/configure	2013-04-12 02:47:03.000000000 +0800
@@ -899,15 +899,15 @@
 USE_MANUAL_TRUE
 MANOPT
 NROFF
 PERL
 IPV6_ENABLED
 IDN_ENABLED
-VERSIONED_SYMBOLS_FALSE
-VERSIONED_SYMBOLS_TRUE
-VERSIONED_FLAVOUR
+CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_FALSE
+CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_TRUE
+CURL_LT_SHLIB_VERSIONED_FLAVOUR
 USE_LIBRTMP
 USE_LIBSSH2
 LIBMETALINK_CPPFLAGS
 LIBMETALINK_LDFLAGS
 LIBMETALINK_LIBS
 CURL_CA_BUNDLE
@@ -951,24 +951,24 @@
 DOING_NATIVE_WINDOWS_FALSE
 DOING_NATIVE_WINDOWS_TRUE
 BUILD_UNITTESTS_FALSE
 BUILD_UNITTESTS_TRUE
 CURLDEBUG_FALSE
 CURLDEBUG_TRUE
-NO_UNDEFINED_FALSE
-NO_UNDEFINED_TRUE
 USE_EXPLICIT_LIB_DEPS_FALSE
 USE_EXPLICIT_LIB_DEPS_TRUE
 REQUIRE_LIB_DEPS
 CPPFLAG_CURL_STATICLIB
 USE_CPPFLAG_CURL_STATICLIB_FALSE
 USE_CPPFLAG_CURL_STATICLIB_TRUE
-USE_CPPFLAG_BUILDING_LIBCURL_FALSE
-USE_CPPFLAG_BUILDING_LIBCURL_TRUE
-MIMPURE_FALSE
-MIMPURE_TRUE
+CURL_LT_SHLIB_USE_MIMPURE_TEXT_FALSE
+CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE
+CURL_LT_SHLIB_USE_NO_UNDEFINED_FALSE
+CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE
+CURL_LT_SHLIB_USE_VERSION_INFO_FALSE
+CURL_LT_SHLIB_USE_VERSION_INFO_TRUE
 OTOOL64
 OTOOL
 LIPO
 NMEDIT
 DSYMUTIL
 MANIFEST_TOOL
@@ -7694,344 +7694,12 @@
   fi
 
 
 fi
 
 
-enable_win32_dll=yes
-
-case $host in
-*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)
-  if test -n "$ac_tool_prefix"; then
-  # Extract the first word of "${ac_tool_prefix}as", so it can be a program name with args.
-set dummy ${ac_tool_prefix}as; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_AS+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$AS"; then
-  ac_cv_prog_AS="$AS" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_AS="${ac_tool_prefix}as"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-AS=$ac_cv_prog_AS
-if test -n "$AS"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
-$as_echo "$AS" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-fi
-if test -z "$ac_cv_prog_AS"; then
-  ac_ct_AS=$AS
-  # Extract the first word of "as", so it can be a program name with args.
-set dummy as; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_ac_ct_AS+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$ac_ct_AS"; then
-  ac_cv_prog_ac_ct_AS="$ac_ct_AS" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_ac_ct_AS="as"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-ac_ct_AS=$ac_cv_prog_ac_ct_AS
-if test -n "$ac_ct_AS"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AS" >&5
-$as_echo "$ac_ct_AS" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-  if test "x$ac_ct_AS" = x; then
-    AS="false"
-  else
-    case $cross_compiling:$ac_tool_warned in
-yes:)
-{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
-$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
-ac_tool_warned=yes ;;
-esac
-    AS=$ac_ct_AS
-  fi
-else
-  AS="$ac_cv_prog_AS"
-fi
-
-  if test -n "$ac_tool_prefix"; then
-  # Extract the first word of "${ac_tool_prefix}dlltool", so it can be a program name with args.
-set dummy ${ac_tool_prefix}dlltool; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_DLLTOOL+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$DLLTOOL"; then
-  ac_cv_prog_DLLTOOL="$DLLTOOL" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_DLLTOOL="${ac_tool_prefix}dlltool"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-DLLTOOL=$ac_cv_prog_DLLTOOL
-if test -n "$DLLTOOL"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL" >&5
-$as_echo "$DLLTOOL" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-fi
-if test -z "$ac_cv_prog_DLLTOOL"; then
-  ac_ct_DLLTOOL=$DLLTOOL
-  # Extract the first word of "dlltool", so it can be a program name with args.
-set dummy dlltool; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_ac_ct_DLLTOOL+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$ac_ct_DLLTOOL"; then
-  ac_cv_prog_ac_ct_DLLTOOL="$ac_ct_DLLTOOL" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_ac_ct_DLLTOOL="dlltool"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-ac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL
-if test -n "$ac_ct_DLLTOOL"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL" >&5
-$as_echo "$ac_ct_DLLTOOL" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-  if test "x$ac_ct_DLLTOOL" = x; then
-    DLLTOOL="false"
-  else
-    case $cross_compiling:$ac_tool_warned in
-yes:)
-{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
-$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
-ac_tool_warned=yes ;;
-esac
-    DLLTOOL=$ac_ct_DLLTOOL
-  fi
-else
-  DLLTOOL="$ac_cv_prog_DLLTOOL"
-fi
-
-  if test -n "$ac_tool_prefix"; then
-  # Extract the first word of "${ac_tool_prefix}objdump", so it can be a program name with args.
-set dummy ${ac_tool_prefix}objdump; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_OBJDUMP+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$OBJDUMP"; then
-  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_OBJDUMP="${ac_tool_prefix}objdump"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-OBJDUMP=$ac_cv_prog_OBJDUMP
-if test -n "$OBJDUMP"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
-$as_echo "$OBJDUMP" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-fi
-if test -z "$ac_cv_prog_OBJDUMP"; then
-  ac_ct_OBJDUMP=$OBJDUMP
-  # Extract the first word of "objdump", so it can be a program name with args.
-set dummy objdump; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$ac_ct_OBJDUMP"; then
-  ac_cv_prog_ac_ct_OBJDUMP="$ac_ct_OBJDUMP" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_ac_ct_OBJDUMP="objdump"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-ac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP
-if test -n "$ac_ct_OBJDUMP"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP" >&5
-$as_echo "$ac_ct_OBJDUMP" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-  if test "x$ac_ct_OBJDUMP" = x; then
-    OBJDUMP="false"
-  else
-    case $cross_compiling:$ac_tool_warned in
-yes:)
-{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
-$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
-ac_tool_warned=yes ;;
-esac
-    OBJDUMP=$ac_ct_OBJDUMP
-  fi
-else
-  OBJDUMP="$ac_cv_prog_OBJDUMP"
-fi
-
-  ;;
-esac
-
-test -z "$AS" && AS=as
-
-
-
-
-
-test -z "$DLLTOOL" && DLLTOOL=dlltool
-
-
-
-
-
-test -z "$OBJDUMP" && OBJDUMP=objdump
-
-
-
-
-
-
-
-
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if arch-OS host is AMD64-Linux/FreeBSD (to build static libraries with PIC)" >&5
-$as_echo_n "checking if arch-OS host is AMD64-Linux/FreeBSD (to build static libraries with PIC)... " >&6; }
-case $host in
-  x86_64*linux*|amd64*freebsd*|ia64*freebsd*)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    with_pic=yes
-    ;;
-  *)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    ;;
-esac
-
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if compiler is icc (to build with PIC)" >&5
-$as_echo_n "checking if compiler is icc (to build with PIC)... " >&6; }
-case $CC in
-  icc | */icc)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    with_pic=yes
-    ;;
-  *)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    ;;
-esac
-
 case `pwd` in
   *\ * | *\	*)
     { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&5
 $as_echo "$as_me: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&2;} ;;
 esac
 
@@ -11126,17 +10794,424 @@
 _ACEOF
 
 fi
 
 done
 
+# ------------------------------------ #
+#  Determine libtool default behavior  #
+# ------------------------------------ #
+
+#
+# Default behavior is to enable shared and static libraries on systems
+# where libtool knows how to build both library versions, and does not
+# require separate configuration and build runs for each flavor.
+#
+
+xc_lt_want_enable_shared='yes'
+xc_lt_want_enable_static='yes'
+
+#
+# User may have disabled shared or static libraries.
+#
+case "x$enable_shared" in # (
+  xno)
+    xc_lt_want_enable_shared='no'
+    ;;
+esac
+case "x$enable_static" in # (
+  xno)
+    xc_lt_want_enable_static='no'
+    ;;
+esac
+if test "x$xc_lt_want_enable_shared" = 'xno' &&
+  test "x$xc_lt_want_enable_static" = 'xno'; then
+  as_fn_error $? "can not disable shared and static libraries simultaneously" "$LINENO" 5
+fi
+
+#
+# Default behavior on systems that require independent configuration
+# and build runs for shared and static is to enable shared libraries
+# and disable static ones. On these systems option '--disable-shared'
+# must be used in order to build a proper static library.
+#
+
+if test "x$xc_lt_want_enable_shared" = 'xyes' &&
+  test "x$xc_lt_want_enable_static" = 'xyes'; then
+  case $host_os in # (
+    mingw* | pw32* | cegcc* | os2* | aix*)
+      xc_lt_want_enable_static='no'
+      ;;
+  esac
+fi
+
+#
+# Make libtool aware of current shared and static library preferences
+# taking in account that, depending on host characteristics, libtool
+# may modify these option preferences later in this configure script.
+#
+
+enable_shared=$xc_lt_want_enable_shared
+enable_static=$xc_lt_want_enable_static
+
+#
+# Default behavior is to build PIC objects for shared libraries and
+# non-PIC objects for static libraries.
+#
+
+xc_lt_want_with_pic='default'
+
+#
+# User may have specified PIC preference.
+#
+
+case "x$with_pic" in # ((
+  xno)
+    xc_lt_want_with_pic='no'
+    ;;
+  xyes)
+    xc_lt_want_with_pic='yes'
+    ;;
+esac
+
+#
+# Default behavior on some systems where building a shared library out
+# of non-PIC compiled objects will fail with following linker error
+# "relocation R_X86_64_32 can not be used when making a shared object"
+# is to build PIC objects even for static libraries. This behavior may
+# be overriden using 'configure --disable-shared --without-pic'.
+#
+
+if test "x$xc_lt_want_with_pic" = 'xdefault'; then
+  case $host_cpu in # (
+    x86_64 | amd64 | ia64)
+      case $host_os in # (
+        linux* | freebsd*)
+          xc_lt_want_with_pic='yes'
+          ;;
+      esac
+      ;;
+  esac
+fi
+
+#
+# Make libtool aware of current PIC preference taking in account that,
+# depending on host characteristics, libtool may modify PIC default
+# behavior to fit host system idiosyncrasies later in this script.
+#
+
+with_pic=$xc_lt_want_with_pic
+
+## ----------------------- ##
+##  Start of libtool code  ##
+## ----------------------- ##
 
 
 
 
 # Set options
+enable_win32_dll=yes
+
+case $host in
+*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}as", so it can be a program name with args.
+set dummy ${ac_tool_prefix}as; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_AS+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS"; then
+  ac_cv_prog_AS="$AS" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_AS="${ac_tool_prefix}as"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS=$ac_cv_prog_AS
+if test -n "$AS"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
+$as_echo "$AS" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AS"; then
+  ac_ct_AS=$AS
+  # Extract the first word of "as", so it can be a program name with args.
+set dummy as; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_ac_ct_AS+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AS"; then
+  ac_cv_prog_ac_ct_AS="$ac_ct_AS" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_AS="as"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AS=$ac_cv_prog_ac_ct_AS
+if test -n "$ac_ct_AS"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AS" >&5
+$as_echo "$ac_ct_AS" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AS" = x; then
+    AS="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AS=$ac_ct_AS
+  fi
+else
+  AS="$ac_cv_prog_AS"
+fi
+
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}dlltool", so it can be a program name with args.
+set dummy ${ac_tool_prefix}dlltool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_DLLTOOL+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL"; then
+  ac_cv_prog_DLLTOOL="$DLLTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_DLLTOOL="${ac_tool_prefix}dlltool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL=$ac_cv_prog_DLLTOOL
+if test -n "$DLLTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL" >&5
+$as_echo "$DLLTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_DLLTOOL"; then
+  ac_ct_DLLTOOL=$DLLTOOL
+  # Extract the first word of "dlltool", so it can be a program name with args.
+set dummy dlltool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_ac_ct_DLLTOOL+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DLLTOOL"; then
+  ac_cv_prog_ac_ct_DLLTOOL="$ac_ct_DLLTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_DLLTOOL="dlltool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL
+if test -n "$ac_ct_DLLTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL" >&5
+$as_echo "$ac_ct_DLLTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_DLLTOOL" = x; then
+    DLLTOOL="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DLLTOOL=$ac_ct_DLLTOOL
+  fi
+else
+  DLLTOOL="$ac_cv_prog_DLLTOOL"
+fi
+
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}objdump", so it can be a program name with args.
+set dummy ${ac_tool_prefix}objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_OBJDUMP+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_OBJDUMP="${ac_tool_prefix}objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OBJDUMP"; then
+  ac_ct_OBJDUMP=$OBJDUMP
+  # Extract the first word of "objdump", so it can be a program name with args.
+set dummy objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OBJDUMP"; then
+  ac_cv_prog_ac_ct_OBJDUMP="$ac_ct_OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_OBJDUMP="objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP
+if test -n "$ac_ct_OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP" >&5
+$as_echo "$ac_ct_OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OBJDUMP" = x; then
+    OBJDUMP="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OBJDUMP=$ac_ct_OBJDUMP
+  fi
+else
+  OBJDUMP="$ac_cv_prog_OBJDUMP"
+fi
+
+  ;;
+esac
+
+test -z "$AS" && AS=as
+
+
+
+
+
+test -z "$DLLTOOL" && DLLTOOL=dlltool
+
+
+
+
+
+test -z "$OBJDUMP" && OBJDUMP=objdump
+
+
+
+
 
 
 
         enable_dlopen=no
 
 
@@ -15119,81 +15194,229 @@
 
 
 
 # Only expand once:
 
 
+## --------------------- ##
+##  End of libtool code  ##
+## --------------------- ##
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if we need -mimpure-text" >&5
-$as_echo_n "checking if we need -mimpure-text... " >&6; }
-mimpure=no
-case $host in
-  *-*-solaris2*)
-    if test "$GCC" = "yes"; then
-      mimpure="yes"
+#
+# Verify if finally libtool shared libraries will be built
+#
+
+case "x$enable_shared" in # ((
+  xyes | xno)
+    xc_lt_build_shared=$enable_shared
+    ;;
+  *)
+    as_fn_error $? "unexpected libtool enable_shared value: $enable_shared" "$LINENO" 5
+    ;;
+esac
+
+#
+# Verify if finally libtool static libraries will be built
+#
+
+case "x$enable_static" in # ((
+  xyes | xno)
+    xc_lt_build_static=$enable_static
+    ;;
+  *)
+    as_fn_error $? "unexpected libtool enable_static value: $enable_static" "$LINENO" 5
+    ;;
+esac
+
+#
+# Verify if libtool shared libraries should be linked using flag -version-info
+#
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries with -version-info" >&5
+$as_echo_n "checking whether to build shared libraries with -version-info... " >&6; }
+xc_lt_shlib_use_version_info='yes'
+if test "x$version_type" = 'xnone'; then
+  xc_lt_shlib_use_version_info='no'
+fi
+case $host_os in # (
+  amigaos*)
+    xc_lt_shlib_use_version_info='yes'
+    ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_shlib_use_version_info" >&5
+$as_echo "$xc_lt_shlib_use_version_info" >&6; }
+
+#
+# Verify if libtool shared libraries should be linked using flag -no-undefined
+#
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries with -no-undefined" >&5
+$as_echo_n "checking whether to build shared libraries with -no-undefined... " >&6; }
+xc_lt_shlib_use_no_undefined='no'
+if test "x$allow_undefined" = 'xno'; then
+  xc_lt_shlib_use_no_undefined='yes'
+elif test "x$allow_undefined_flag" = 'xunsupported'; then
+  xc_lt_shlib_use_no_undefined='yes'
+fi
+case $host_os in # (
+  cygwin* | mingw* | pw32* | cegcc* | os2* | aix*)
+    xc_lt_shlib_use_no_undefined='yes'
+    ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_shlib_use_no_undefined" >&5
+$as_echo "$xc_lt_shlib_use_no_undefined" >&6; }
+
+#
+# Verify if libtool shared libraries should be linked using flag -mimpure-text
+#
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries with -mimpure-text" >&5
+$as_echo_n "checking whether to build shared libraries with -mimpure-text... " >&6; }
+xc_lt_shlib_use_mimpure_text='no'
+case $host_os in # (
+  solaris2*)
+    if test "x$GCC" = 'xyes'; then
+      xc_lt_shlib_use_mimpure_text='yes'
     fi
     ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_shlib_use_mimpure_text" >&5
+$as_echo "$xc_lt_shlib_use_mimpure_text" >&6; }
+
+#
+# Find out wether libtool libraries would be built wit PIC
+#
+
+case "x$pic_mode" in # ((((
+  xdefault)
+    xc_lt_build_shared_with_pic='yes'
+    xc_lt_build_static_with_pic='no'
+    ;;
+  xyes)
+    xc_lt_build_shared_with_pic='yes'
+    xc_lt_build_static_with_pic='yes'
+    ;;
+  xno)
+    xc_lt_build_shared_with_pic='no'
+    xc_lt_build_static_with_pic='no'
+    ;;
   *)
+    xc_lt_build_shared_with_pic='unknown'
+    xc_lt_build_static_with_pic='unknown'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unexpected libtool pic_mode value: $pic_mode" >&5
+$as_echo "$as_me: WARNING: unexpected libtool pic_mode value: $pic_mode" >&2;}
     ;;
 esac
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $mimpure" >&5
-$as_echo "$mimpure" >&6; }
- if test x$mimpure = xyes; then
-  MIMPURE_TRUE=
-  MIMPURE_FALSE='#'
-else
-  MIMPURE_TRUE='#'
-  MIMPURE_FALSE=
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries with PIC" >&5
+$as_echo_n "checking whether to build shared libraries with PIC... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_build_shared_with_pic" >&5
+$as_echo "$xc_lt_build_shared_with_pic" >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries with PIC" >&5
+$as_echo_n "checking whether to build static libraries with PIC... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_build_static_with_pic" >&5
+$as_echo "$xc_lt_build_static_with_pic" >&6; }
+
+#
+# Verify if libtool shared libraries will be built while static not built
+#
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries only" >&5
+$as_echo_n "checking whether to build shared libraries only... " >&6; }
+if test "$xc_lt_build_shared" = 'yes' &&
+  test "$xc_lt_build_static" = 'no'; then
+  xc_lt_build_shared_only='yes'
+else
+  xc_lt_build_shared_only='no'
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_build_shared_only" >&5
+$as_echo "$xc_lt_build_shared_only" >&6; }
+
+#
+# Verify if libtool static libraries will be built while shared not built
+#
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries only" >&5
+$as_echo_n "checking whether to build static libraries only... " >&6; }
+if test "$xc_lt_build_static" = 'yes' &&
+  test "$xc_lt_build_shared" = 'no'; then
+  xc_lt_build_static_only='yes'
+else
+  xc_lt_build_static_only='no'
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xc_lt_build_static_only" >&5
+$as_echo "$xc_lt_build_static_only" >&6; }
+
+
+
+
+#
+# Automake conditionals based on libtool related checks
+#
+
+ if test "x$xc_lt_shlib_use_version_info" = 'xyes'; then
+  CURL_LT_SHLIB_USE_VERSION_INFO_TRUE=
+  CURL_LT_SHLIB_USE_VERSION_INFO_FALSE='#'
+else
+  CURL_LT_SHLIB_USE_VERSION_INFO_TRUE='#'
+  CURL_LT_SHLIB_USE_VERSION_INFO_FALSE=
 fi
 
+ if test "x$xc_lt_shlib_use_no_undefined" = 'xyes'; then
+  CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE=
+  CURL_LT_SHLIB_USE_NO_UNDEFINED_FALSE='#'
+else
+  CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE='#'
+  CURL_LT_SHLIB_USE_NO_UNDEFINED_FALSE=
+fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if we need BUILDING_LIBCURL" >&5
-$as_echo_n "checking if we need BUILDING_LIBCURL... " >&6; }
-use_cppflag_building_libcurl="no"
-use_cppflag_curl_staticlib="no"
-CPPFLAG_CURL_STATICLIB=""
-case $host in
-  *-*-mingw*)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    use_cppflag_building_libcurl="yes"
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we need CURL_STATICLIB" >&5
-$as_echo_n "checking if we need CURL_STATICLIB... " >&6; }
-    if test "X$enable_shared" = "Xno"
-    then
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      use_cppflag_curl_staticlib="yes"
-      CPPFLAG_CURL_STATICLIB="-DCURL_STATICLIB"
-    else
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    fi
-    ;;
-  *)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    ;;
-esac
- if test x$use_cppflag_building_libcurl = xyes; then
-  USE_CPPFLAG_BUILDING_LIBCURL_TRUE=
-  USE_CPPFLAG_BUILDING_LIBCURL_FALSE='#'
+ if test "x$xc_lt_shlib_use_mimpure_text" = 'xyes'; then
+  CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE=
+  CURL_LT_SHLIB_USE_MIMPURE_TEXT_FALSE='#'
 else
-  USE_CPPFLAG_BUILDING_LIBCURL_TRUE='#'
-  USE_CPPFLAG_BUILDING_LIBCURL_FALSE=
+  CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE='#'
+  CURL_LT_SHLIB_USE_MIMPURE_TEXT_FALSE=
 fi
 
- if test x$use_cppflag_curl_staticlib = xyes; then
+
+#
+# Due to libtool and automake machinery limitations of not allowing
+# specifying separate CPPFLAGS or CFLAGS when compiling objects for
+# inclusion of these in shared or static libraries, we are forced to
+# build using separate configure runs for shared and static libraries
+# on systems where different CPPFLAGS or CFLAGS are mandatory in order
+# to compile objects for each kind of library. Notice that relying on
+# the '-DPIC' CFLAG that libtool provides is not valid given that the
+# user might for example choose to build static libraries with PIC.
+#
+
+#
+# Make our Makefile.am files use the staticlib CPPFLAG only when strictly
+# targeting a static library and not building its shared counterpart.
+#
+
+ if test "x$xc_lt_build_static_only" = 'xyes'; then
   USE_CPPFLAG_CURL_STATICLIB_TRUE=
   USE_CPPFLAG_CURL_STATICLIB_FALSE='#'
 else
   USE_CPPFLAG_CURL_STATICLIB_TRUE='#'
   USE_CPPFLAG_CURL_STATICLIB_FALSE=
 fi
 
 
+#
+# Make staticlib CPPFLAG variable and its definition visible in output
+# files unconditionally, providing an empty definition unless strictly
+# targeting a static library and not building its shared counterpart.
+#
+
+CPPFLAG_CURL_STATICLIB=
+if test "x$xc_lt_build_static_only" = 'xyes'; then
+  CPPFLAG_CURL_STATICLIB='-DCURL_STATICLIB'
+fi
+
+
 
 # Determine whether all dependent libraries must be specified when linking
 if test "X$enable_shared" = "Xyes" -a "X$link_all_deplibs" = "Xno"
 then
     REQUIRE_LIB_DEPS=no
 else
@@ -15206,44 +15429,12 @@
 else
   USE_EXPLICIT_LIB_DEPS_TRUE='#'
   USE_EXPLICIT_LIB_DEPS_FALSE=
 fi
 
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
-$as_echo_n "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
-set x ${MAKE-make}
-ac_make=`$as_echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
-if eval \${ac_cv_prog_make_${ac_make}_set+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  cat >conftest.make <<\_ACEOF
-SHELL = /bin/sh
-all:
-	@echo '@@@%%%=$(MAKE)=@@@%%%'
-_ACEOF
-# GNU make sometimes prints "make[1]: Entering ...", which would confuse us.
-case `${MAKE-make} -f conftest.make 2>/dev/null` in
-  *@@@%%%=?*=@@@%%%*)
-    eval ac_cv_prog_make_${ac_make}_set=yes;;
-  *)
-    eval ac_cv_prog_make_${ac_make}_set=no;;
-esac
-rm -f conftest.make
-fi
-if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-  SET_MAKE=
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-  SET_MAKE="MAKE=${MAKE-make}"
-fi
-
-
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for inline" >&5
 $as_echo_n "checking for inline... " >&6; }
 if ${ac_cv_c_inline+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   ac_cv_c_inline=no
@@ -17693,39 +17884,13 @@
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
   fi
 
 
 
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if shared libraries need -no-undefined" >&5
-$as_echo_n "checking if shared libraries need -no-undefined... " >&6; }
-  need_no_undefined="no"
-  case $host in
-    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc* | *-*-aix*)
-      need_no_undefined="yes"
-      ;;
-  esac
-  if test "x$allow_undefined" = "xno"; then
-    need_no_undefined="yes"
-  elif test "x$allow_undefined_flag" = "xunsupported"; then
-    need_no_undefined="yes"
-  fi
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $need_no_undefined" >&5
-$as_echo "$need_no_undefined" >&6; }
-
- if test x$need_no_undefined = xyes; then
-  NO_UNDEFINED_TRUE=
-  NO_UNDEFINED_FALSE='#'
-else
-  NO_UNDEFINED_TRUE='#'
-  NO_UNDEFINED_FALSE=
-fi
-
-
-
-    supports_curldebug="unknown"
+      supports_curldebug="unknown"
   if test "$want_curldebug" = "yes"; then
     if test "x$enable_shared" != "xno" &&
       test "x$enable_shared" != "xyes"; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unknown enable_shared setting." >&5
 $as_echo "$as_me: WARNING: unknown enable_shared setting." >&2;}
       supports_curldebug="no"
@@ -17735,13 +17900,13 @@
       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unknown enable_static setting." >&5
 $as_echo "$as_me: WARNING: unknown enable_static setting." >&2;}
       supports_curldebug="no"
     fi
     if test "$supports_curldebug" != "no"; then
       if test "$enable_shared" = "yes" &&
-        test "$need_no_undefined" = "yes"; then
+        test "x$xc_lt_shlib_use_no_undefined" = 'xyes'; then
         supports_curldebug="no"
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: shared library does not support undefined symbols." >&5
 $as_echo "$as_me: WARNING: shared library does not support undefined symbols." >&2;}
       fi
     fi
   fi
@@ -23816,14 +23981,14 @@
   fi
 fi
 
 if test "x$OPENSSL_ENABLED$GNUTLS_ENABLED$NSS_ENABLED$POLARSSL_ENABLED$AXTLS_ENABLED$CYASSL_ENABLED$WINSSL_ENABLED$DARWINSSL_ENABLED" = "x"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: SSL disabled, you will not be able to use HTTPS, FTPS, NTLM and more." >&5
 $as_echo "$as_me: WARNING: SSL disabled, you will not be able to use HTTPS, FTPS, NTLM and more." >&2;}
-  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Use --with-ssl, --with-gnutls, --with-polarssl, --with-cyassl, --with-nss, --with-axtls or --with-winssl to address this." >&5
-$as_echo "$as_me: WARNING: Use --with-ssl, --with-gnutls, --with-polarssl, --with-cyassl, --with-nss, --with-axtls or --with-winssl to address this." >&2;}
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Use --with-ssl, --with-gnutls, --with-polarssl, --with-cyassl, --with-nss, --with-axtls, --with-winssl, or --with-darwinssl to address this." >&5
+$as_echo "$as_me: WARNING: Use --with-ssl, --with-gnutls, --with-polarssl, --with-cyassl, --with-nss, --with-axtls, --with-winssl, or --with-darwinssl to address this." >&2;}
 else
   # SSL is enabled, genericly
 
   SSL_ENABLED="1"
 fi
 
@@ -24865,20 +25030,20 @@
 $as_echo "no" >&6; }
 
 
 fi
 
 
-VERSIONED_FLAVOUR="$versioned_symbols_flavour"
+CURL_LT_SHLIB_VERSIONED_FLAVOUR="$versioned_symbols_flavour"
 
- if test "x$versioned_symbols" = "xyes"; then
-  VERSIONED_SYMBOLS_TRUE=
-  VERSIONED_SYMBOLS_FALSE='#'
+ if test "x$versioned_symbols" = 'xyes'; then
+  CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_TRUE=
+  CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_FALSE='#'
 else
-  VERSIONED_SYMBOLS_TRUE='#'
-  VERSIONED_SYMBOLS_FALSE=
+  CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_TRUE='#'
+  CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_FALSE=
 fi
 
 
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable Windows native IDN (Windows native builds only)" >&5
 $as_echo_n "checking whether to enable Windows native IDN (Windows native builds only)... " >&6; }
@@ -27710,294 +27875,12 @@
 
 fi
 
 done
 
   #
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for recvfrom" >&5
-$as_echo_n "checking for recvfrom... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-#undef inline
-#ifdef HAVE_WINDOWS_H
-#ifndef WIN32_LEAN_AND_MEAN
-#define WIN32_LEAN_AND_MEAN
-#endif
-#include <windows.h>
-#ifdef HAVE_WINSOCK2_H
-#include <winsock2.h>
-#else
-#ifdef HAVE_WINSOCK_H
-#include <winsock.h>
-#endif
-#endif
-#else
-#ifdef HAVE_SYS_TYPES_H
-#include <sys/types.h>
-#endif
-#ifdef HAVE_SYS_SOCKET_H
-#include <sys/socket.h>
-#endif
-#endif
-
-int main (void)
-{
-
-      recvfrom(0, 0, 0, 0, 0, 0);
-
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    curl_cv_recvfrom="yes"
-
-else
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    curl_cv_recvfrom="no"
-
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-  #
-  if test "$curl_cv_recvfrom" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking types of args and return type for recvfrom" >&5
-$as_echo_n "checking types of args and return type for recvfrom... " >&6; }
-if ${curl_cv_func_recvfrom_args+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-
-      curl_cv_func_recvfrom_args="unknown"
-      for recvfrom_retv in 'int' 'ssize_t'; do
-        for recvfrom_arg1 in 'int' 'ssize_t' 'SOCKET'; do
-          for recvfrom_arg2 in 'char *' 'void *'; do
-            for recvfrom_arg3 in 'size_t' 'int' 'socklen_t' 'unsigned int'; do
-              for recvfrom_arg4 in 'int' 'unsigned int'; do
-                for recvfrom_arg5 in 'struct sockaddr *' 'void *' 'const struct sockaddr *'; do
-                  for recvfrom_arg6 in 'socklen_t *' 'int *' 'unsigned int *' 'size_t *' 'void *'; do
-                    if test "$curl_cv_func_recvfrom_args" = "unknown"; then
-                      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-#undef inline
-#ifdef HAVE_WINDOWS_H
-#ifndef WIN32_LEAN_AND_MEAN
-#define WIN32_LEAN_AND_MEAN
-#endif
-#include <windows.h>
-#ifdef HAVE_WINSOCK2_H
-#include <winsock2.h>
-#else
-#ifdef HAVE_WINSOCK_H
-#include <winsock.h>
-#endif
-#endif
-#define RECVFROMCALLCONV PASCAL
-#else
-#ifdef HAVE_SYS_TYPES_H
-#include <sys/types.h>
-#endif
-#ifdef HAVE_SYS_SOCKET_H
-#include <sys/socket.h>
-#endif
-#define RECVFROMCALLCONV
-#endif
-                          extern $recvfrom_retv RECVFROMCALLCONV
-                          recvfrom($recvfrom_arg1, $recvfrom_arg2,
-                                   $recvfrom_arg3, $recvfrom_arg4,
-                                   $recvfrom_arg5, $recvfrom_arg6);
-
-int main (void)
-{
-
-                          $recvfrom_arg1 s=0;
-                          $recvfrom_arg2 buf=0;
-                          $recvfrom_arg3 len=0;
-                          $recvfrom_arg4 flags=0;
-                          $recvfrom_arg5 addr=0;
-                          $recvfrom_arg6 addrlen=0;
-                          $recvfrom_retv res=0;
-                          res = recvfrom(s, buf, len, flags, addr, addrlen);
-
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-
-                        curl_cv_func_recvfrom_args="$recvfrom_arg1,$recvfrom_arg2,$recvfrom_arg3,$recvfrom_arg4,$recvfrom_arg5,$recvfrom_arg6,$recvfrom_retv"
-
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-                    fi
-                  done
-                done
-              done
-            done
-          done
-        done
-      done
-
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $curl_cv_func_recvfrom_args" >&5
-$as_echo "$curl_cv_func_recvfrom_args" >&6; } # AC-CACHE-CHECK
-    # Nearly last minute change for this release starts here
-
-cat >>confdefs.h <<_ACEOF
-#define HAVE_RECVFROM 1
-_ACEOF
-
-    ac_cv_func_recvfrom="yes"
-    # Nearly last minute change for this release ends here
-    if test "$curl_cv_func_recvfrom_args" = "unknown"; then
-      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Cannot find proper types to use for recvfrom args" >&5
-$as_echo "$as_me: WARNING: Cannot find proper types to use for recvfrom args" >&2;}
-    else
-      recvfrom_prev_IFS=$IFS; IFS=','
-      set dummy `echo "$curl_cv_func_recvfrom_args" | sed 's/\*/\*/g'`
-      IFS=$recvfrom_prev_IFS
-      shift
-      #
-      recvfrom_ptrt_arg2=$2
-      recvfrom_qual_ptrt_arg5=$5
-      recvfrom_ptrt_arg6=$6
-      #
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG1 $1
-_ACEOF
-
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG3 $3
-_ACEOF
-
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG4 $4
-_ACEOF
-
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_RETV $7
-_ACEOF
-
-      #
-      prev_sh_opts=$-
-      #
-      case $prev_sh_opts in
-        *f*)
-          ;;
-        *)
-          set -f
-          ;;
-      esac
-      #
-      case "$recvfrom_qual_ptrt_arg5" in
-        const*)
-          recvfrom_qual_arg5=const
-          recvfrom_ptrt_arg5=`echo $recvfrom_qual_ptrt_arg5 | sed 's/^const //'`
-        ;;
-        *)
-          recvfrom_qual_arg5=
-          recvfrom_ptrt_arg5=$recvfrom_qual_ptrt_arg5
-        ;;
-      esac
-      #
-      recvfrom_type_arg2=`echo $recvfrom_ptrt_arg2 | sed 's/ \*//'`
-      recvfrom_type_arg5=`echo $recvfrom_ptrt_arg5 | sed 's/ \*//'`
-      recvfrom_type_arg6=`echo $recvfrom_ptrt_arg6 | sed 's/ \*//'`
-      #
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG2 $recvfrom_type_arg2
-_ACEOF
-
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_QUAL_ARG5 $recvfrom_qual_arg5
-_ACEOF
-
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG5 $recvfrom_type_arg5
-_ACEOF
-
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG6 $recvfrom_type_arg6
-_ACEOF
-
-      #
-      if test "$recvfrom_type_arg2" = "void"; then
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG2_IS_VOID 1
-_ACEOF
-
-      fi
-      if test "$recvfrom_type_arg5" = "void"; then
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG5_IS_VOID 1
-_ACEOF
-
-      fi
-      if test "$recvfrom_type_arg6" = "void"; then
-
-cat >>confdefs.h <<_ACEOF
-#define RECVFROM_TYPE_ARG6_IS_VOID 1
-_ACEOF
-
-      fi
-      #
-      case $prev_sh_opts in
-        *f*)
-          ;;
-        *)
-          set +f
-          ;;
-      esac
-      #
-
-cat >>confdefs.h <<_ACEOF
-#define HAVE_RECVFROM 1
-_ACEOF
-
-      ac_cv_func_recvfrom="yes"
-    fi
-  else
-    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Unable to link function recvfrom" >&5
-$as_echo "$as_me: WARNING: Unable to link function recvfrom" >&2;}
-  fi
-
-
-      for ac_header in sys/types.h sys/socket.h
-do :
-  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
-ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
-if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
-  cat >>confdefs.h <<_ACEOF
-#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
-_ACEOF
-
-fi
-
-done
-
-  #
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for send" >&5
 $as_echo_n "checking for send... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 
@@ -35927,161 +35810,12 @@
 $as_echo "no" >&6; }
     ac_cv_func_strcasecmp="no"
   fi
 
 
     #
-  tst_links_strcasestr="unknown"
-  tst_proto_strcasestr="unknown"
-  tst_compi_strcasestr="unknown"
-  tst_allow_strcasestr="unknown"
-  #
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strcasestr can be linked" >&5
-$as_echo_n "checking if strcasestr can be linked... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-#define strcasestr innocuous_strcasestr
-#ifdef __STDC__
-# include <limits.h>
-#else
-# include <assert.h>
-#endif
-#undef strcasestr
-#ifdef __cplusplus
-extern "C"
-#endif
-char strcasestr ();
-#if defined __stub_strcasestr || defined __stub___strcasestr
-choke me
-#endif
-
-int main (void)
-{
-return strcasestr ();
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    tst_links_strcasestr="yes"
-
-else
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    tst_links_strcasestr="no"
-
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-  #
-  if test "$tst_links_strcasestr" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strcasestr is prototyped" >&5
-$as_echo_n "checking if strcasestr is prototyped... " >&6; }
-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-      $curl_includes_string
-
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "strcasestr" >/dev/null 2>&1; then :
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      tst_proto_strcasestr="yes"
-
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      tst_proto_strcasestr="no"
-
-fi
-rm -f conftest*
-
-  fi
-  #
-  if test "$tst_proto_strcasestr" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strcasestr is compilable" >&5
-$as_echo_n "checking if strcasestr is compilable... " >&6; }
-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-        $curl_includes_string
-
-int main (void)
-{
-
-        if(0 != strcasestr(0, 0))
-          return 1;
-
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      tst_compi_strcasestr="yes"
-
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      tst_compi_strcasestr="no"
-
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  fi
-  #
-  if test "$tst_compi_strcasestr" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strcasestr usage allowed" >&5
-$as_echo_n "checking if strcasestr usage allowed... " >&6; }
-    if test "x$curl_disallow_strcasestr" != "xyes"; then
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      tst_allow_strcasestr="yes"
-    else
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      tst_allow_strcasestr="no"
-    fi
-  fi
-  #
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strcasestr might be used" >&5
-$as_echo_n "checking if strcasestr might be used... " >&6; }
-  if test "$tst_links_strcasestr" = "yes" &&
-     test "$tst_proto_strcasestr" = "yes" &&
-     test "$tst_compi_strcasestr" = "yes" &&
-     test "$tst_allow_strcasestr" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-cat >>confdefs.h <<_ACEOF
-#define HAVE_STRCASESTR 1
-_ACEOF
-
-    ac_cv_func_strcasestr="yes"
-  else
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    ac_cv_func_strcasestr="no"
-  fi
-
-
-    #
   tst_links_strcmpi="unknown"
   tst_proto_strcmpi="unknown"
   tst_compi_strcmpi="unknown"
   tst_allow_strcmpi="unknown"
   #
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strcmpi can be linked" >&5
@@ -36935,161 +36669,12 @@
 $as_echo "no" >&6; }
     ac_cv_func_stricmp="no"
   fi
 
 
     #
-  tst_links_strlcat="unknown"
-  tst_proto_strlcat="unknown"
-  tst_compi_strlcat="unknown"
-  tst_allow_strlcat="unknown"
-  #
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strlcat can be linked" >&5
-$as_echo_n "checking if strlcat can be linked... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-#define strlcat innocuous_strlcat
-#ifdef __STDC__
-# include <limits.h>
-#else
-# include <assert.h>
-#endif
-#undef strlcat
-#ifdef __cplusplus
-extern "C"
-#endif
-char strlcat ();
-#if defined __stub_strlcat || defined __stub___strlcat
-choke me
-#endif
-
-int main (void)
-{
-return strlcat ();
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    tst_links_strlcat="yes"
-
-else
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    tst_links_strlcat="no"
-
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-  #
-  if test "$tst_links_strlcat" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strlcat is prototyped" >&5
-$as_echo_n "checking if strlcat is prototyped... " >&6; }
-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-      $curl_includes_string
-
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "strlcat" >/dev/null 2>&1; then :
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      tst_proto_strlcat="yes"
-
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      tst_proto_strlcat="no"
-
-fi
-rm -f conftest*
-
-  fi
-  #
-  if test "$tst_proto_strlcat" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strlcat is compilable" >&5
-$as_echo_n "checking if strlcat is compilable... " >&6; }
-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-        $curl_includes_string
-
-int main (void)
-{
-
-        if(0 != strlcat(0, 0, 0))
-          return 1;
-
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      tst_compi_strlcat="yes"
-
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      tst_compi_strlcat="no"
-
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  fi
-  #
-  if test "$tst_compi_strlcat" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strlcat usage allowed" >&5
-$as_echo_n "checking if strlcat usage allowed... " >&6; }
-    if test "x$curl_disallow_strlcat" != "xyes"; then
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      tst_allow_strlcat="yes"
-    else
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      tst_allow_strlcat="no"
-    fi
-  fi
-  #
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strlcat might be used" >&5
-$as_echo_n "checking if strlcat might be used... " >&6; }
-  if test "$tst_links_strlcat" = "yes" &&
-     test "$tst_proto_strlcat" = "yes" &&
-     test "$tst_compi_strlcat" = "yes" &&
-     test "$tst_allow_strlcat" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-cat >>confdefs.h <<_ACEOF
-#define HAVE_STRLCAT 1
-_ACEOF
-
-    ac_cv_func_strlcat="yes"
-  else
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    ac_cv_func_strlcat="no"
-  fi
-
-
-    #
   tst_links_strncasecmp="unknown"
   tst_proto_strncasecmp="unknown"
   tst_compi_strncasecmp="unknown"
   tst_allow_strncasecmp="unknown"
   #
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking if strncasecmp can be linked" >&5
@@ -39778,32 +39363,32 @@
   am__EXEEXT_FALSE='#'
 else
   am__EXEEXT_TRUE='#'
   am__EXEEXT_FALSE=
 fi
 
-if test -z "${MIMPURE_TRUE}" && test -z "${MIMPURE_FALSE}"; then
-  as_fn_error $? "conditional \"MIMPURE\" was never defined.
+if test -z "${CURL_LT_SHLIB_USE_VERSION_INFO_TRUE}" && test -z "${CURL_LT_SHLIB_USE_VERSION_INFO_FALSE}"; then
+  as_fn_error $? "conditional \"CURL_LT_SHLIB_USE_VERSION_INFO\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
-if test -z "${USE_CPPFLAG_BUILDING_LIBCURL_TRUE}" && test -z "${USE_CPPFLAG_BUILDING_LIBCURL_FALSE}"; then
-  as_fn_error $? "conditional \"USE_CPPFLAG_BUILDING_LIBCURL\" was never defined.
+if test -z "${CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE}" && test -z "${CURL_LT_SHLIB_USE_NO_UNDEFINED_FALSE}"; then
+  as_fn_error $? "conditional \"CURL_LT_SHLIB_USE_NO_UNDEFINED\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE}" && test -z "${CURL_LT_SHLIB_USE_MIMPURE_TEXT_FALSE}"; then
+  as_fn_error $? "conditional \"CURL_LT_SHLIB_USE_MIMPURE_TEXT\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${USE_CPPFLAG_CURL_STATICLIB_TRUE}" && test -z "${USE_CPPFLAG_CURL_STATICLIB_FALSE}"; then
   as_fn_error $? "conditional \"USE_CPPFLAG_CURL_STATICLIB\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${USE_EXPLICIT_LIB_DEPS_TRUE}" && test -z "${USE_EXPLICIT_LIB_DEPS_FALSE}"; then
   as_fn_error $? "conditional \"USE_EXPLICIT_LIB_DEPS\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
-if test -z "${NO_UNDEFINED_TRUE}" && test -z "${NO_UNDEFINED_FALSE}"; then
-  as_fn_error $? "conditional \"NO_UNDEFINED\" was never defined.
-Usually this means the macro was only invoked conditionally." "$LINENO" 5
-fi
 if test -z "${CURLDEBUG_TRUE}" && test -z "${CURLDEBUG_FALSE}"; then
   as_fn_error $? "conditional \"CURLDEBUG\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${BUILD_UNITTESTS_TRUE}" && test -z "${BUILD_UNITTESTS_FALSE}"; then
   as_fn_error $? "conditional \"BUILD_UNITTESTS\" was never defined.
@@ -39814,14 +39399,14 @@
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${HAVE_LIBZ_TRUE}" && test -z "${HAVE_LIBZ_FALSE}"; then
   as_fn_error $? "conditional \"HAVE_LIBZ\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
-if test -z "${VERSIONED_SYMBOLS_TRUE}" && test -z "${VERSIONED_SYMBOLS_FALSE}"; then
-  as_fn_error $? "conditional \"VERSIONED_SYMBOLS\" was never defined.
+if test -z "${CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_TRUE}" && test -z "${CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_FALSE}"; then
+  as_fn_error $? "conditional \"CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${USE_MANUAL_TRUE}" && test -z "${USE_MANUAL_FALSE}"; then
   as_fn_error $? "conditional \"USE_MANUAL\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
@@ -40426,17 +40011,17 @@
 # if CDPATH is set.
 (unset CDPATH) >/dev/null 2>&1 && unset CDPATH
 
 sed_quote_subst='$sed_quote_subst'
 double_quote_subst='$double_quote_subst'
 delay_variable_subst='$delay_variable_subst'
+macro_version='`$ECHO "$macro_version" | $SED "$delay_single_quote_subst"`'
+macro_revision='`$ECHO "$macro_revision" | $SED "$delay_single_quote_subst"`'
 AS='`$ECHO "$AS" | $SED "$delay_single_quote_subst"`'
 DLLTOOL='`$ECHO "$DLLTOOL" | $SED "$delay_single_quote_subst"`'
 OBJDUMP='`$ECHO "$OBJDUMP" | $SED "$delay_single_quote_subst"`'
-macro_version='`$ECHO "$macro_version" | $SED "$delay_single_quote_subst"`'
-macro_revision='`$ECHO "$macro_revision" | $SED "$delay_single_quote_subst"`'
 enable_shared='`$ECHO "$enable_shared" | $SED "$delay_single_quote_subst"`'
 enable_static='`$ECHO "$enable_static" | $SED "$delay_single_quote_subst"`'
 pic_mode='`$ECHO "$pic_mode" | $SED "$delay_single_quote_subst"`'
 enable_fast_install='`$ECHO "$enable_fast_install" | $SED "$delay_single_quote_subst"`'
 SHELL='`$ECHO "$SHELL" | $SED "$delay_single_quote_subst"`'
 ECHO='`$ECHO "$ECHO" | $SED "$delay_single_quote_subst"`'
@@ -41485,25 +41070,25 @@
 
 # The names of the tagged configurations supported by this script.
 available_tags=""
 
 # ### BEGIN LIBTOOL CONFIG
 
+# Which release of libtool.m4 was used?
+macro_version=$macro_version
+macro_revision=$macro_revision
+
 # Assembler program.
 AS=$lt_AS
 
 # DLL creation program.
 DLLTOOL=$lt_DLLTOOL
 
 # Object dumper program.
 OBJDUMP=$lt_OBJDUMP
 
-# Which release of libtool.m4 was used?
-macro_version=$macro_version
-macro_revision=$macro_revision
-
 # Whether or not to build shared libraries.
 build_libtool_libs=$enable_shared
 
 # Whether or not to build static libraries.
 build_old_libs=$enable_static
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/configure.ac	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/configure.ac	2013-04-12 02:46:54.000000000 +0800
@@ -195,95 +195,67 @@
 CURL_CONFIGURE_THREAD_SAFE
 CURL_CONFIGURE_REENTRANT
 
 dnl check for how to do large files
 AC_SYS_LARGEFILE
 
-dnl support building of Windows DLLs
-AC_LIBTOOL_WIN32_DLL
+XC_LIBTOOL
 
-dnl force libtool to build static libraries with PIC on AMD64-Linux & FreeBSD
-AC_MSG_CHECKING([if arch-OS host is AMD64-Linux/FreeBSD (to build static libraries with PIC)])
-case $host in
-  x86_64*linux*|amd64*freebsd*|ia64*freebsd*)
-    AC_MSG_RESULT([yes])
-    with_pic=yes
-    ;;
-  *)
-    AC_MSG_RESULT([no])
-    ;;
-esac
-
-AC_MSG_CHECKING([if compiler is icc (to build with PIC)])
-case $CC in
-  icc | */icc)
-    AC_MSG_RESULT([yes])
-    with_pic=yes
-    ;;
-  *)
-    AC_MSG_RESULT([no])
-    ;;
-esac
-
-dnl libtool setup
-AC_PROG_LIBTOOL
-
-AC_MSG_CHECKING([if we need -mimpure-text])
-mimpure=no
-case $host in
-  *-*-solaris2*)
-    if test "$GCC" = "yes"; then
-      mimpure="yes"
-    fi
-    ;;
-  *)
-    ;;
-esac
-AC_MSG_RESULT($mimpure)
-AM_CONDITIONAL(MIMPURE, test x$mimpure = xyes)
+#
+# Automake conditionals based on libtool related checks
+#
+
+AM_CONDITIONAL([CURL_LT_SHLIB_USE_VERSION_INFO],
+  [test "x$xc_lt_shlib_use_version_info" = 'xyes'])
+AM_CONDITIONAL([CURL_LT_SHLIB_USE_NO_UNDEFINED],
+  [test "x$xc_lt_shlib_use_no_undefined" = 'xyes'])
+AM_CONDITIONAL([CURL_LT_SHLIB_USE_MIMPURE_TEXT],
+  [test "x$xc_lt_shlib_use_mimpure_text" = 'xyes'])
+
+#
+# Due to libtool and automake machinery limitations of not allowing
+# specifying separate CPPFLAGS or CFLAGS when compiling objects for
+# inclusion of these in shared or static libraries, we are forced to
+# build using separate configure runs for shared and static libraries
+# on systems where different CPPFLAGS or CFLAGS are mandatory in order
+# to compile objects for each kind of library. Notice that relying on
+# the '-DPIC' CFLAG that libtool provides is not valid given that the
+# user might for example choose to build static libraries with PIC.
+#
+
+#
+# Make our Makefile.am files use the staticlib CPPFLAG only when strictly
+# targeting a static library and not building its shared counterpart.
+#
+
+AM_CONDITIONAL([USE_CPPFLAG_CURL_STATICLIB],
+  [test "x$xc_lt_build_static_only" = 'xyes'])
+
+#
+# Make staticlib CPPFLAG variable and its definition visible in output
+# files unconditionally, providing an empty definition unless strictly
+# targeting a static library and not building its shared counterpart.
+#
+
+CPPFLAG_CURL_STATICLIB=
+if test "x$xc_lt_build_static_only" = 'xyes'; then
+  CPPFLAG_CURL_STATICLIB='-DCURL_STATICLIB'
+fi
+AC_SUBST([CPPFLAG_CURL_STATICLIB])
 
-AC_MSG_CHECKING([if we need BUILDING_LIBCURL])
-use_cppflag_building_libcurl="no"
-use_cppflag_curl_staticlib="no"
-CPPFLAG_CURL_STATICLIB=""
-case $host in
-  *-*-mingw*)
-    AC_MSG_RESULT(yes)
-    use_cppflag_building_libcurl="yes"
-    AC_MSG_CHECKING([if we need CURL_STATICLIB])
-    if test "X$enable_shared" = "Xno"
-    then
-      AC_MSG_RESULT(yes)
-      use_cppflag_curl_staticlib="yes"
-      CPPFLAG_CURL_STATICLIB="-DCURL_STATICLIB"
-    else
-      AC_MSG_RESULT(no)
-    fi
-    ;;
-  *)
-    AC_MSG_RESULT(no)
-    ;;
-esac
-AM_CONDITIONAL(USE_CPPFLAG_BUILDING_LIBCURL, test x$use_cppflag_building_libcurl = xyes)
-AM_CONDITIONAL(USE_CPPFLAG_CURL_STATICLIB, test x$use_cppflag_curl_staticlib = xyes)
-AC_SUBST(CPPFLAG_CURL_STATICLIB)
 
 # Determine whether all dependent libraries must be specified when linking
 if test "X$enable_shared" = "Xyes" -a "X$link_all_deplibs" = "Xno"
 then
     REQUIRE_LIB_DEPS=no
 else
     REQUIRE_LIB_DEPS=yes
 fi
 AC_SUBST(REQUIRE_LIB_DEPS)
 AM_CONDITIONAL(USE_EXPLICIT_LIB_DEPS, test x$REQUIRE_LIB_DEPS = xyes)
 
-dnl The install stuff has already been taken care of by the automake stuff
-dnl AC_PROG_INSTALL
-AC_PROG_MAKE_SET
-
 dnl check if there's a way to force code inline
 AC_C_INLINE
 
 dnl **********************************************************************
 dnl platform/compiler/architecture specific checks/flags
 dnl **********************************************************************
@@ -308,15 +280,12 @@
 
 CURL_CHECK_COMPILER_HALT_ON_ERROR
 CURL_CHECK_COMPILER_ARRAY_SIZE_NEGATIVE
 CURL_CHECK_COMPILER_PROTOTYPE_MISMATCH
 CURL_CHECK_COMPILER_SYMBOL_HIDING
 
-CURL_CHECK_NO_UNDEFINED
-AM_CONDITIONAL(NO_UNDEFINED, test x$need_no_undefined = xyes)
-
 CURL_CHECK_CURLDEBUG
 AM_CONDITIONAL(CURLDEBUG, test x$want_curldebug = xyes)
 
 supports_unittests=yes
 # cross-compilation of unit tests static library/programs fails when
 # libcurl shared library is built. This might be due to a libtool or
@@ -2290,13 +2259,13 @@
     ])
   fi
 fi
 
 if test "x$OPENSSL_ENABLED$GNUTLS_ENABLED$NSS_ENABLED$POLARSSL_ENABLED$AXTLS_ENABLED$CYASSL_ENABLED$WINSSL_ENABLED$DARWINSSL_ENABLED" = "x"; then
   AC_MSG_WARN([SSL disabled, you will not be able to use HTTPS, FTPS, NTLM and more.])
-  AC_MSG_WARN([Use --with-ssl, --with-gnutls, --with-polarssl, --with-cyassl, --with-nss, --with-axtls or --with-winssl to address this.])
+  AC_MSG_WARN([Use --with-ssl, --with-gnutls, --with-polarssl, --with-cyassl, --with-nss, --with-axtls, --with-winssl, or --with-darwinssl to address this.])
 else
   # SSL is enabled, genericly
   AC_SUBST(SSL_ENABLED)
   SSL_ENABLED="1"
 fi
 
@@ -2610,14 +2579,16 @@
   esac
 ], [
 AC_MSG_RESULT(no)
 ]
 )
 
-AC_SUBST(VERSIONED_FLAVOUR, ["$versioned_symbols_flavour"])
-AM_CONDITIONAL(VERSIONED_SYMBOLS, test "x$versioned_symbols" = "xyes")
+AC_SUBST([CURL_LT_SHLIB_VERSIONED_FLAVOUR],
+  ["$versioned_symbols_flavour"])
+AM_CONDITIONAL([CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS],
+  [test "x$versioned_symbols" = 'xyes'])
 
 dnl -------------------------------------------------
 dnl check winidn option before other IDN libraries
 dnl -------------------------------------------------
 
 AC_MSG_CHECKING([whether to enable Windows native IDN (Windows native builds only)])
@@ -2994,13 +2965,12 @@
 
 AC_TYPE_SIGNAL
 
 CURL_CHECK_FUNC_SELECT
 
 CURL_CHECK_FUNC_RECV
-CURL_CHECK_FUNC_RECVFROM
 CURL_CHECK_FUNC_SEND
 CURL_CHECK_MSG_NOSIGNAL
 
 CURL_CHECK_FUNC_ALARM
 CURL_CHECK_FUNC_BASENAME
 CURL_CHECK_FUNC_CLOSESOCKET
@@ -3036,18 +3006,16 @@
 CURL_CHECK_FUNC_SIGINTERRUPT
 CURL_CHECK_FUNC_SIGNAL
 CURL_CHECK_FUNC_SIGSETJMP
 CURL_CHECK_FUNC_SOCKET
 CURL_CHECK_FUNC_SOCKETPAIR
 CURL_CHECK_FUNC_STRCASECMP
-CURL_CHECK_FUNC_STRCASESTR
 CURL_CHECK_FUNC_STRCMPI
 CURL_CHECK_FUNC_STRDUP
 CURL_CHECK_FUNC_STRERROR_R
 CURL_CHECK_FUNC_STRICMP
-CURL_CHECK_FUNC_STRLCAT
 CURL_CHECK_FUNC_STRNCASECMP
 CURL_CHECK_FUNC_STRNCMPI
 CURL_CHECK_FUNC_STRNICMP
 CURL_CHECK_FUNC_STRSTR
 CURL_CHECK_FUNC_STRTOK_R
 CURL_CHECK_FUNC_STRTOLL
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/curl-config.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/curl-config.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/curl-config.in	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/curl-config.in	2013-02-06 22:44:37.000000000 +0800
@@ -156,14 +156,14 @@
 
     --static-libs)
 	echo @libdir@/libcurl.@libext@ @LDFLAGS@ @LIBCURL_LIBS@
 	;;
 
     --configure)
-      echo @CONFIGURE_OPTIONS@
-    ;;
+        echo @CONFIGURE_OPTIONS@
+        ;;
 
     *)
         echo "unknown option: $1"
 	usage 1
 	;;
     esac
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0: curl-style.el
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/BINDINGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/BINDINGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/BINDINGS	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/BINDINGS	2013-04-12 02:46:54.000000000 +0800
@@ -3,20 +3,20 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                                libcurl bindings
 
-Creative people have written bindings or interfaces for various environments
-and programming languages. Using one of these allows you to take advantage of
-curl powers from within your favourite language or system.
+ Creative people have written bindings or interfaces for various environments
+ and programming languages. Using one of these allows you to take advantage of
+ curl powers from within your favourite language or system.
 
-This is a list of all known interfaces as of this writing.
+ This is a list of all known interfaces as of this writing.
 
-The bindings listed below are not part of the curl/libcurl distribution
-archives, but must be downloaded and installed separately.
+ The bindings listed below are not part of the curl/libcurl distribution
+ archives, but must be downloaded and installed separately.
 
 Ada95
 
   Writtten by Andreas Almroth
   http://www.almroth.com/adacurl/index.html
 
@@ -38,13 +38,16 @@
 
   Written by Stephen Nestinger and Jonathan Rogado
   http://chcurl.sourceforge.net/
 
 Cocoa
 
-  Written by Dan Wood
+  BBHTTP: written by Bruno de Carvalho
+  https://github.com/brunodecarvalho/BBHTTP
+
+  curlhandle: Written by Dan Wood
   http://curlhandle.sourceforge.net/
 
 D
 
   Written by Kenneth Bogert
   http://curl.haxx.se/libcurl/d/
@@ -78,22 +82,32 @@
 
 glib/GTK+
 
   Written by Richard Atterer
   http://atterer.net/glibcurl/
 
+Guile:
+
+  Written by Michael L. Gran
+  http://www.lonelycactus.com/guile-curl.html
+
 Haskell
 
   Written by Galois, Inc
   http://hackage.haskell.org/cgi-bin/hackage-scripts/package/curl
 
 Java
 
   Maintained by [blank]
   http://curl.haxx.se/libcurl/java/
 
+Julia
+
+  Written by Paul Howe
+  https://github.com/forio/Curl.jl
+
 Lisp
 
   Written by Liam Healy
   http://common-lisp.net/project/cl-curl/
 
 Lua
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/CONTRIBUTE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/CONTRIBUTE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/CONTRIBUTE	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/CONTRIBUTE	2013-03-05 18:02:20.000000000 +0800
@@ -209,13 +209,13 @@
      git format-patch remotes/origin/master
 
  This creates files in your local directory named NNNN-[name].patch for each
  commit.
 
  Now send those patches off to the curl-library list. You can of course opt to
- do that with the 'get send-email' command.
+ do that with the 'git send-email' command.
 
 3.3 How To Make a Patch without git
 
  Keep a copy of the unmodified curl sources. Make your changes in a separate
  source tree. When you think you have something that you want to offer the
  curl community, use GNU diff to generate patches.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/curl-config.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/curl-config.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/curl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/curl.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/chkspeed.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/chkspeed.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/chkspeed.c	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/chkspeed.c	2013-04-12 02:46:54.000000000 +0800
@@ -57,13 +57,13 @@
 }
 
 int main(int argc, char *argv[])
 {
   CURL *curl_handle;
   CURLcode res;
-  int prtsep = 0, prttime = 0;
+  int prtall = 0, prtsep = 0, prttime = 0;
   const char *url = URL_1M;
   char *appname = argv[0];
 
   if (argc > 1) {
     /* parse input parameters */
     for (argc--, argv++; *argv; argc--, argv++) {
@@ -74,12 +74,14 @@
                   appname);
           exit(1);
         } else if (strncasecmp(*argv, "-V", 2) == 0) {
           fprintf(stderr, "\r%s %s - %s\n",
                   appname, CHKSPEED_VERSION, curl_version());
           exit(1);
+        } else if (strncasecmp(*argv, "-A", 2) == 0) {
+          prtall = 1;
         } else if (strncasecmp(*argv, "-X", 2) == 0) {
           prtsep = 1;
         } else if (strncasecmp(*argv, "-T", 2) == 0) {
           prttime = 1;
         } else if (strncasecmp(*argv, "-M=", 3) == 0) {
           long m = strtol((*argv)+3, NULL, 10);
@@ -158,12 +160,24 @@
 
     /* check for average download speed */
     res = curl_easy_getinfo(curl_handle, CURLINFO_SPEED_DOWNLOAD, &val);
     if((CURLE_OK == res) && (val>0))
       printf("Average download speed: %0.3f kbyte/sec.\n", val / 1024);
 
+    if (prtall) {
+      /* check for name resolution time */
+      res = curl_easy_getinfo(curl_handle, CURLINFO_NAMELOOKUP_TIME, &val);
+      if((CURLE_OK == res) && (val>0))
+        printf("Name lookup time: %0.3f sec.\n", val);
+
+      /* check for connect time */
+      res = curl_easy_getinfo(curl_handle, CURLINFO_CONNECT_TIME, &val);
+      if((CURLE_OK == res) && (val>0))
+        printf("Connect time: %0.3f sec.\n", val);
+    }
+
   } else {
     fprintf(stderr, "Error while fetching '%s' : %s\n",
             url, curl_easy_strerror(res));
   }
 
   /* cleanup curl stuff */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/getinmemory.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/getinmemory.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/getinmemory.c	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/getinmemory.c	2013-04-12 02:46:54.000000000 +0800
@@ -39,16 +39,16 @@
 WriteMemoryCallback(void *contents, size_t size, size_t nmemb, void *userp)
 {
   size_t realsize = size * nmemb;
   struct MemoryStruct *mem = (struct MemoryStruct *)userp;
 
   mem->memory = realloc(mem->memory, mem->size + realsize + 1);
-  if (mem->memory == NULL) {
+  if(mem->memory == NULL) {
     /* out of memory! */
     printf("not enough memory (realloc returned NULL)\n");
-    exit(EXIT_FAILURE);
+    return 0;
   }
 
   memcpy(&(mem->memory[mem->size]), contents, realsize);
   mem->size += realsize;
   mem->memory[mem->size] = 0;
 
@@ -56,12 +56,13 @@
 }
 
 
 int main(void)
 {
   CURL *curl_handle;
+  CURLcode res;
 
   struct MemoryStruct chunk;
 
   chunk.memory = malloc(1);  /* will be grown as needed by the realloc above */
   chunk.size = 0;    /* no data at this point */
 
@@ -81,29 +82,36 @@
 
   /* some servers don't like requests that are made without a user-agent
      field, so we provide one */
   curl_easy_setopt(curl_handle, CURLOPT_USERAGENT, "libcurl-agent/1.0");
 
   /* get it! */
-  curl_easy_perform(curl_handle);
+  res = curl_easy_perform(curl_handle);
 
-  /* cleanup curl stuff */
-  curl_easy_cleanup(curl_handle);
+  /* check for errors */
+  if(res != CURLE_OK) {
+    fprintf(stderr, "curl_easy_perform() failed: %s\n",
+            curl_easy_strerror(res));
+  }
+  else {
+    /*
+     * Now, our chunk.memory points to a memory block that is chunk.size
+     * bytes big and contains the remote file.
+     *
+     * Do something nice with it!
+     *
+     * You should be aware of the fact that at this point we might have an
+     * allocated data block, and nothing has yet deallocated that data. So when
+     * you're done with it, you should free() it as a nice application.
+     */
 
-  /*
-   * Now, our chunk.memory points to a memory block that is chunk.size
-   * bytes big and contains the remote file.
-   *
-   * Do something nice with it!
-   *
-   * You should be aware of the fact that at this point we might have an
-   * allocated data block, and nothing has yet deallocated that data. So when
-   * you're done with it, you should free() it as a nice application.
-   */
+    printf("%lu bytes retrieved\n", (long)chunk.size);
+  }
 
-  printf("%lu bytes retrieved\n", (long)chunk.size);
+  /* cleanup curl stuff */
+  curl_easy_cleanup(curl_handle);
 
   if(chunk.memory)
     free(chunk.memory);
 
   /* we're done with libcurl, so clean it up */
   curl_global_cleanup();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/hiperfifo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/hiperfifo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/hiperfifo.c	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/hiperfifo.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -21,13 +21,13 @@
  ***************************************************************************/
 /* Example application source code using the multi socket interface to
    download many files at once.
 
 Written by Jeff Pohlmeyer
 
-Requires libevent and a (POSIX?) system that has mkfifo().
+Requires libevent version 2 and a (POSIX?) system that has mkfifo().
 
 This is an adaptation of libcurl's "hipev.c" and libevent's "event-test.c"
 sample programs.
 
 When running, the program creates the named pipe "hiper.fifo"
 
@@ -58,47 +58,51 @@
 #include <stdlib.h>
 #include <sys/time.h>
 #include <time.h>
 #include <unistd.h>
 #include <sys/poll.h>
 #include <curl/curl.h>
-#include <event.h>
+#include <event2/event.h>
 #include <fcntl.h>
 #include <sys/stat.h>
 #include <errno.h>
 
 
 #define MSG_OUT stdout /* Send info to stdout, change to stderr if you want */
 
 
 /* Global information, common to all connections */
-typedef struct _GlobalInfo {
-  struct event fifo_event;
-  struct event timer_event;
+typedef struct _GlobalInfo
+{
+  struct event_base *evbase;
+  struct event *fifo_event;
+  struct event *timer_event;
   CURLM *multi;
   int still_running;
   FILE* input;
 } GlobalInfo;
 
 
 /* Information associated with a specific easy handle */
-typedef struct _ConnInfo {
+typedef struct _ConnInfo
+{
   CURL *easy;
   char *url;
   GlobalInfo *global;
   char error[CURL_ERROR_SIZE];
 } ConnInfo;
 
 
 /* Information associated with a specific socket */
-typedef struct _SockInfo {
+typedef struct _SockInfo
+{
   curl_socket_t sockfd;
   CURL *easy;
   int action;
   long timeout;
-  struct event ev;
+  struct event *ev;
   int evset;
   GlobalInfo *global;
 } SockInfo;
 
 
 
@@ -108,13 +112,13 @@
   struct timeval timeout;
   (void)multi; /* unused */
 
   timeout.tv_sec = timeout_ms/1000;
   timeout.tv_usec = (timeout_ms%1000)*1000;
   fprintf(MSG_OUT, "multi_timer_cb: Setting timeout to %ld ms\n", timeout_ms);
-  evtimer_add(&g->timer_event, &timeout);
+  evtimer_add(g->timer_event, &timeout);
   return 0;
 }
 
 /* Die if we get a bad CURLMcode somewhere */
 static void mcode_or_die(const char *where, CURLMcode code)
 {
@@ -183,14 +187,14 @@
   rc = curl_multi_socket_action(g->multi, fd, action, &g->still_running);
   mcode_or_die("event_cb: curl_multi_socket_action", rc);
 
   check_multi_info(g);
   if ( g->still_running <= 0 ) {
     fprintf(MSG_OUT, "last transfer done, kill timeout\n");
-    if (evtimer_pending(&g->timer_event, NULL)) {
-      evtimer_del(&g->timer_event);
+    if (evtimer_pending(g->timer_event, NULL)) {
+      evtimer_del(g->timer_event);
     }
   }
 }
 
 
 
@@ -212,13 +216,13 @@
 
 /* Clean up the SockInfo structure */
 static void remsock(SockInfo *f)
 {
   if (f) {
     if (f->evset)
-      event_del(&f->ev);
+      event_free(f->ev);
     free(f);
   }
 }
 
 
 
@@ -229,22 +233,23 @@
      (act&CURL_POLL_IN?EV_READ:0)|(act&CURL_POLL_OUT?EV_WRITE:0)|EV_PERSIST;
 
   f->sockfd = s;
   f->action = act;
   f->easy = e;
   if (f->evset)
-    event_del(&f->ev);
-  event_set(&f->ev, f->sockfd, kind, event_cb, g);
-  f->evset=1;
-  event_add(&f->ev, NULL);
+    event_free(f->ev);
+  f->ev = event_new(g->evbase, f->sockfd, kind, event_cb, g);
+  f->evset = 1;
+  event_add(f->ev, NULL);
 }
 
 
 
 /* Initialize a new SockInfo structure */
-static void addsock(curl_socket_t s, CURL *easy, int action, GlobalInfo *g) {
+static void addsock(curl_socket_t s, CURL *easy, int action, GlobalInfo *g)
+{
   SockInfo *fdp = calloc(sizeof(SockInfo), 1);
 
   fdp->global = g;
   setsock(fdp, s, easy, action, g);
   curl_multi_assign(g->multi, s, fdp);
 }
@@ -356,16 +361,16 @@
       new_conn(s,arg);  /* if we read a URL, go get it! */
     } else break;
   } while ( rv != EOF);
 }
 
 /* Create a named pipe and tell libevent to monitor it */
+static const char *fifo = "hiper.fifo";
 static int init_fifo (GlobalInfo *g)
 {
   struct stat st;
-  static const char *fifo = "hiper.fifo";
   curl_socket_t sockfd;
 
   fprintf(MSG_OUT, "Creating named pipe \"%s\"\n", fifo);
   if (lstat (fifo, &st) == 0) {
     if ((st.st_mode & S_IFMT) == S_IFREG) {
       errno = EEXIST;
@@ -383,36 +388,49 @@
     perror("open");
     exit (1);
   }
   g->input = fdopen(sockfd, "r");
 
   fprintf(MSG_OUT, "Now, pipe some URL's into > %s\n", fifo);
-  event_set(&g->fifo_event, sockfd, EV_READ | EV_PERSIST, fifo_cb, g);
-  event_add(&g->fifo_event, NULL);
+  g->fifo_event = event_new(g->evbase, sockfd, EV_READ|EV_PERSIST, fifo_cb, g);
+  event_add(g->fifo_event, NULL);
   return (0);
 }
 
+static void clean_fifo(GlobalInfo *g)
+{
+    event_free(g->fifo_event);
+    fclose(g->input);
+    unlink(fifo);
+}
+
 int main(int argc, char **argv)
 {
   GlobalInfo g;
   (void)argc;
   (void)argv;
 
   memset(&g, 0, sizeof(GlobalInfo));
-  event_init();
+  g.evbase = event_base_new();
   init_fifo(&g);
   g.multi = curl_multi_init();
-  evtimer_set(&g.timer_event, timer_cb, &g);
+  g.timer_event = evtimer_new(g.evbase, timer_cb, &g);
 
   /* setup the generic multi interface options we want */
   curl_multi_setopt(g.multi, CURLMOPT_SOCKETFUNCTION, sock_cb);
   curl_multi_setopt(g.multi, CURLMOPT_SOCKETDATA, &g);
   curl_multi_setopt(g.multi, CURLMOPT_TIMERFUNCTION, multi_timer_cb);
   curl_multi_setopt(g.multi, CURLMOPT_TIMERDATA, &g);
 
   /* we don't call any curl_multi_socket*() function yet as we have no handles
      added! */
 
-  event_dispatch();
+  event_base_dispatch(g.evbase);
+
+  /* this, of course, won't get called since only way to stop this program is
+     via ctrl-C, but it is here to show how cleanup /would/ be done. */
+  clean_fifo(&g);
+  event_free(g.timer_event);
+  event_base_free(g.evbase);
   curl_multi_cleanup(g.multi);
   return 0;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/htmltitle.cpp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/htmltitle.cpp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/htmltitle.cpp	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/htmltitle.cpp	2013-02-11 01:54:56.000000000 +0800
@@ -22,13 +22,13 @@
 // Get a web page, parse it with libxml.
 //
 // Written by Lars Nilsson
 //
 // GNU C++ compile command line suggestion (edit paths accordingly):
 //
-// g++ -Wall -I/opt/curl/include -I/opt/libxml/include/libxml2 htmltitle.cc \
+// g++ -Wall -I/opt/curl/include -I/opt/libxml/include/libxml2 htmltitle.cpp \
 // -o htmltitle -L/opt/curl/lib -L/opt/libxml/lib -lcurl -lxml2
 
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
 #include <string>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.am	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.am	2013-04-12 02:46:54.000000000 +0800
@@ -40,13 +40,12 @@
 
 LIBDIR = $(top_builddir)/lib
 
 # Avoid libcurl obsolete stuff
 AM_CPPFLAGS += -DCURL_NO_OLDIES
 
-# Mostly for Windows build targets, when using static libcurl
 if USE_CPPFLAG_CURL_STATICLIB
 AM_CPPFLAGS += -DCURL_STATICLIB
 endif
 
 # Prevent LIBS from being used for all link targets
 LIBS = $(BLANK_AT_MAKETIME)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.in	2013-02-06 17:47:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.in	2013-04-12 02:47:03.000000000 +0800
@@ -69,14 +69,12 @@
 POST_INSTALL = :
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-
-# Mostly for Windows build targets, when using static libcurl
 @USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_1 = -DCURL_STATICLIB
 DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/Makefile.inc
 check_PROGRAMS = 10-at-a-time$(EXEEXT) anyauthput$(EXEEXT) \
 	cookie_interface$(EXEEXT) debug$(EXEEXT) fileupload$(EXEEXT) \
 	fopen$(EXEEXT) ftpget$(EXEEXT) ftpgetresp$(EXEEXT) \
@@ -102,12 +100,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -497,12 +496,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -590,13 +590,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -675,13 +674,14 @@
 
 # These examples require external dependencies that may not be commonly
 # available on POSIX systems, so don't bother attempting to compile them here.
 COMPLICATED_EXAMPLES = curlgtk.c curlx.c htmltitle.cpp cacertinmem.c	   \
   ftpuploadresume.c ghiper.c hiperfifo.c htmltidy.c multithread.c	   \
   opensslthreadlock.c sampleconv.c synctime.c threaded-ssl.c evhiperfifo.c \
-  smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp
+  smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp \
+  multi-uv.c
 
 all: all-am
 
 .SUFFIXES:
 .SUFFIXES: .c .lo .o .obj
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.inc	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.inc	2013-04-12 02:46:54.000000000 +0800
@@ -9,7 +9,8 @@
 
 # These examples require external dependencies that may not be commonly
 # available on POSIX systems, so don't bother attempting to compile them here.
 COMPLICATED_EXAMPLES = curlgtk.c curlx.c htmltitle.cpp cacertinmem.c	   \
   ftpuploadresume.c ghiper.c hiperfifo.c htmltidy.c multithread.c	   \
   opensslthreadlock.c sampleconv.c synctime.c threaded-ssl.c evhiperfifo.c \
-  smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp
+  smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp \
+  multi-uv.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.m32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.m32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.m32	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.m32	2013-02-10 23:47:14.000000000 +0800
@@ -35,13 +35,13 @@
 # Edit the path below to point to the base of your Zlib sources.
 ifndef ZLIB_PATH
 ZLIB_PATH = ../../../zlib-1.2.7
 endif
 # Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../../openssl-0.9.8x
+OPENSSL_PATH = ../../../openssl-0.9.8y
 endif
 # Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
 LIBSSH2_PATH = ../../../libssh2-1.4.3
 endif
 # Edit the path below to point to the base of your librtmp package.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.netware /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.netware
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/Makefile.netware	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/Makefile.netware	2013-02-10 23:47:14.000000000 +0800
@@ -16,13 +16,13 @@
 ifndef ZLIB_PATH
 ZLIB_PATH = ../../../zlib-1.2.7
 endif
 
 # Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../../openssl-0.9.8x
+OPENSSL_PATH = ../../../openssl-0.9.8y
 endif
 
 # Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
 LIBSSH2_PATH = ../../../libssh2-1.4.3
 endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/multi-single.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/multi-single.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/multi-single.c	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/multi-single.c	2013-04-12 02:46:54.000000000 +0800
@@ -38,12 +38,14 @@
 {
   CURL *http_handle;
   CURLM *multi_handle;
 
   int still_running; /* keep number of running handles */
 
+  curl_global_init(CURL_GLOBAL_DEFAULT);
+
   http_handle = curl_easy_init();
 
   /* set the options (I left out a few, you'll get the point anyway) */
   curl_easy_setopt(http_handle, CURLOPT_URL, "http://www.example.com/");
 
   /* init a multi stack */
@@ -105,12 +107,16 @@
       /* timeout or readable/writable sockets */
       curl_multi_perform(multi_handle, &still_running);
       break;
     }
   } while(still_running);
 
-  curl_multi_cleanup(multi_handle);
+  curl_multi_remove_handle(multi_handle, http_handle);
 
   curl_easy_cleanup(http_handle);
 
+  curl_multi_cleanup(multi_handle);
+
+  curl_global_cleanup();
+
   return 0;
 }
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples: multi-uv.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/examples/README	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/examples/README	2013-04-12 02:46:54.000000000 +0800
@@ -58,12 +58,13 @@
 imap.c         - simple IMAP transfer
 multi-app.c    - a multi-interface app
 multi-debugcallback.c - a multi-interface app using the debug callback
 multi-double.c - a multi-interface app doing two simultaneous transfers
 multi-post.c   - a multi-interface app doing a multipart formpost
 multi-single.c - a multi-interface app getting a single file
+multi-uv.c     - a multi-interface app using libuv
 multithread.c  - an example using multi-treading transferring multiple files
 opensslthreadlock.c - show how to do locking when using OpenSSL multi-threaded
 persistant.c   - request two URLs with a persistent connection
 pop3s.c        - POP3S transfer
 pop3slist.c    - POP3S LIST
 post-callback.c - send a HTTP POST using a callback
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/FAQ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/FAQ
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/FAQ	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/FAQ	2013-02-08 16:02:24.000000000 +0800
@@ -242,16 +242,16 @@
   (lib)curl on full or even part time. We do this voluntarily on our spare
   time. Occasionally companies pay individual developers to work on curl, but
   that's up to each company and developer. It is not controlled by nor
   supervised in any way by the project.
 
   We still get help from companies. Haxx provides web site, bandwidth, mailing
-  lists etc and sourceforge.net hosts project services we take advantage from,
-  like the bug tracker. Also again, some companies have sponsored certain
-  parts of the development in the past and I hope some will continue to do so
-  in the future.
+  lists etc, sourceforge.net hosts project services we take advantage from,
+  like the bug tracker and github hosts the primary git repository. Also
+  again, some companies have sponsored certain parts of the development in the
+  past and I hope some will continue to do so in the future.
 
   If you want to support our project, consider a donation or a banner-program
   or even better: by helping us coding, documenting, testing etc.
 
   1.7 What about CURL from curl.com?
 
@@ -306,23 +306,22 @@
   fact using it.
 
   We don't know how many users that downloaded or installed curl and then
   never use it.
 
   In May 2012 Daniel did a counting game and came up with a number that may
-  be completely wrong or somewhat accurate. 300 million!
+  be completely wrong or somewhat accurate. Over 500 million!
 
   See http://daniel.haxx.se/blog/2012/05/16/300m-users/
 
   1.11 Why don't you update ca-bundle.crt
 
-  The ca-bundle.crt file that used to be bundled with curl was very outdated
-  (it being last modified year 2000 should tell) and must be replaced with a
-  much more modern and up-to-date version by anyone who wants to verify peers
-  anyway. It is no longer provided, the last curl release that shipped it was
-  curl 7.18.0.
+  The ca cert bundle that used to shipped with curl was very outdated and must
+  be replaced with an up-to-date version by anyone who wants to verify
+  peers. It is no longer provided by curl. The last curl release ever that
+  shipped a ca cert bundle was curl 7.18.0.
 
   In the cURL project we've decided not to attempt to keep this file updated
   (or even present anymore) since deciding what to add to a ca cert bundle is
   an undertaking we've not been ready to accept, and the one we can get from
   Mozilla is perfectly fine so there's no need to duplicate that work.
 
@@ -430,16 +429,16 @@
   http://curl.haxx.se/docs/ssl-compared.html
 
   2.3 Where can I find a copy of LIBEAY32.DLL?
 
   That is an OpenSSL binary built for Windows.
 
-  Curl uses OpenSSL to do the SSL stuff. The LIBEAY32.DLL is what curl needs
-  on a windows machine to do https://. Check out the curl web site to find
-  accurate and up-to-date pointers to recent OpenSSL DLLs and other binary
-  packages.
+  Curl can be built with OpenSSL to do the SSL stuff. The LIBEAY32.DLL is then
+  what curl needs on a windows machine to do https:// etc. Check out the curl
+  web site to find accurate and up-to-date pointers to recent OpenSSL DLLs and
+  other binary packages.
 
   2.4 Does curl support SOCKS (RFC 1928) ?
 
   Yes, SOCKS 4 and 5 are supported.
 
 
@@ -469,15 +468,15 @@
   Curl supports resumed transfers both ways on both FTP and HTTP.
   Try the -C option.
 
   3.3 Why doesn't my posting using -F work?
 
   You can't simply use -F or -d at your choice. The web server that will
-  receive your post assumes one of the formats. If the form you're trying to
-  "fake" sets the type to 'multipart/form-data', then and only then you must
-  use the -F type. In all the most common cases, you should use -d which then
+  receive your post expects one of the formats. If the form you're trying to
+  submit uses the type 'multipart/form-data', then and only then you must use
+  the -F type. In all the most common cases, you should use -d which then
   causes a posting with the type 'application/x-www-form-urlencoded'.
 
   This is described in some detail in the MANUAL and TheArtOfHttpScripting
   documents, and if you don't understand it the first time, read it again
   before you post questions about this to the mailing list. Also, try reading
   through the mailing list archives for old postings and questions regarding
@@ -499,15 +498,15 @@
   the -H/--header option. By adding a header with empty contents you safely
   disable that one. Use -H "Accept:" to disable that specific header.
 
   3.6 Does curl support ASP, XML, XHTML or HTML version Y?
 
   To curl, all contents are alike. It doesn't matter how the page was
-  generated. It may be ASP, PHP, Perl, shell-script, SSI or plain
-  HTML-files. There's no difference to curl and it doesn't even know what kind
-  of language that generated the page.
+  generated. It may be ASP, PHP, Perl, shell-script, SSI or plain HTML
+  files. There's no difference to curl and it doesn't even know what kind of
+  language that generated the page.
 
   See also item 3.14 regarding javascript.
 
   3.7 Can I use curl to delete/rename a file through FTP?
 
   Yes. You specify custom FTP commands with -Q/--quote.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/FEATURES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/FEATURES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/FEATURES	2013-02-06 18:06:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/FEATURES	2013-04-12 02:46:54.000000000 +0800
@@ -10,33 +10,35 @@
  - config file support
  - multiple URLs in a single command line
  - range "globbing" support: [0-13], {one,two,three}
  - multiple file upload on a single command line
  - custom maximum transfer rate
  - redirectable stderr
+ - metalink support (*13)
 
-libcurl supports
+libcurl
  - full URL syntax with no length limit
  - custom maximum download time
  - custom least download speed acceptable
  - custom output result after completion
  - guesses protocol from host name unless specified
  - uses .netrc
- - progress bar/time specs while downloading
+ - progress bar with time statistics while downloading
  - "standard" proxy environment variables support
  - compiles on win32 (reported builds on 40+ operating systems)
  - selectable network interface for outgoing traffic
  - IPv6 support on unix and Windows
  - persistent connections
  - socks5 support
- - supports user name + password in proxy environment variables
+ - supports user name and password in proxy environment variables
  - operations through proxy "tunnel" (using CONNECT)
- - supports large files (>2GB and >4GB) both upload/download
+ - support for large files (>2GB and >4GB) during upload and download
  - replaceable memory functions (malloc, free, realloc, etc)
  - asynchronous name resolving (*6)
  - both a push and a pull style interface
+ - international domain names (*11)
 
 HTTP
  - HTTP/1.1 compliant (optionally uses 1.0)
  - GET
  - PUT
  - HEAD
@@ -57,26 +59,28 @@
  - range
  - proxy authentication
  - time conditions
  - via http-proxy
  - retrieve file modification date
  - Content-Encoding support for deflate and gzip
- - "Transfer-Encoding: chunked" support for "uploads"
+ - "Transfer-Encoding: chunked" support in uploads
+ - data compression (*12)
 
 HTTPS (*1)
  - (all the HTTP features)
  - using client certificates
  - verify server certificate
  - via http-proxy
  - select desired encryption
- - force usage of a specific SSL version (SSLv2(*7), SSLv3 or TLSv1)
+ - force usage of a specific SSL version (SSLv2 (*7), SSLv3 (*10) or TLSv1)
 
 FTP
  - download
  - authentication
- - kerberos4 (*5), kerberos5 (*3)
+ - kerberos4 (*5)
+ - kerberos5 (*3)
  - active/passive using PORT, EPRT, PASV or EPSV
  - single file size information (compare to HTTP HEAD)
  - 'type=' URL support
  - dir listing
  - dir listing names-only
  - upload
@@ -90,24 +94,25 @@
  - all operations can be tunneled through a http-proxy
  - customizable to retrieve file modification date
  - no dir depth limit
 
 FTPS (*1)
  - implicit ftps:// support that use SSL on both connections
- - explicit "AUTH TSL" and "AUTH SSL" usage to "upgrade" plain ftp://
+ - explicit "AUTH TLS" and "AUTH SSL" usage to "upgrade" plain ftp://
    connection to use SSL for both or one of the connections
 
 SCP (*8)
  - both password and public key auth
 
 SFTP (*8)
  - both password and public key auth
  - with custom commands sent before/after the transfer
 
 TFTP
- - download / upload
+ - download
+ - upload
 
 TELNET
  - connection negotiation
  - custom telnet options
  - stdin/stdout I/O
 
@@ -116,18 +121,18 @@
 
 DICT
  - extended DICT URL support
 
 FILE
  - URL support
- - "uploads"
+ - upload
  - resume
 
 SMTP
  - authentication: Plain, Login, CRAM-MD5, Digest-MD5 and NTLM (*9)
- - send mail
+ - send e-mails
  - mail from support
  - mail size support
  - mail auth support for trusted server-to-server relaying
  - multiple recipients
  - via http-proxy
 
@@ -139,40 +144,53 @@
 POP3
  - authentication: Clear Text, APOP and SASL
  - SASL based authentication: Plain, Login, CRAM-MD5, Digest-MD5 and
    NTLM (*9)
  - list e-mails
  - retrieve e-mails
- - enhanced command support for: CAPA, DELE, TOP, STAT, UIDL and NOOP
+ - enhanced command support for: CAPA, DELE, TOP, STAT, UIDL and NOOP via
+   custom requests
  - via http-proxy
 
 POP3S (*1)
  - implicit pop3s:// support
  - explicit "STLS" usage to "upgrade" plain pop3:// connections to use SSL
  - via http-proxy
 
 IMAP
  - authentication: Clear Text and SASL
- - select mailbox
- - basic fetch e-mail support
  - SASL based authentication: Plain, Login, CRAM-MD5, Digest-MD5 and
    NTLM (*9)
+ - list the folders of a mailbox
+ - select a mailbox with support for verifing the UIDVALIDITY
+ - fetch e-mails with support for specifing the UID and SECTION
+ - upload e-mails via the append command
+ - enhanced command support for: EXAMINE, CREATE, DELETE, RENAME, STATUS,
+   STORE, COPY and UID via custom requests
  - via http-proxy
 
 IMAPS (*1)
  - implicit imaps:// support
  - explicit "STARTTLS" usage to "upgrade" plain imap:// connections to use SSL
  - via http-proxy
 
 FOOTNOTES
 =========
 
   *1 = requires OpenSSL, GnuTLS, NSS, yassl, axTLS, PolarSSL, schannel (native
-       Windows), Secure Transport (native iOS/OS X)  or qssl (native IBM i)
+       Windows), Secure Transport (native iOS/OS X) or qssl (native IBM i)
   *2 = requires OpenLDAP
-  *3 = requires a GSSAPI-compliant library, such as Heimdal or similar.
+  *3 = requires a GSSAPI-compliant library, such as Heimdal or similar
   *4 = requires FBopenssl
-  *5 = requires a krb4 library, such as the MIT one or similar.
+  *5 = requires a krb4 library, such as the MIT one or similar
   *6 = requires c-ares
-  *7 = requires OpenSSL or NSS, as GnuTLS only supports SSLv3 and TLSv1
+  *7 = requires OpenSSL, NSS, qssl, schannel or Secure Transport; GnuTLS, for
+       example, only supports SSLv3 and TLSv1
   *8 = requires libssh2
-  *9 = requires OpenSSL, GnuTLS, NSS, yassl or SSPI (native Windows)
+  *9 = requires OpenSSL, GnuTLS, NSS, yassl, Secure Transport or SSPI (native
+       Windows)
+  *10 = requires any of the SSL libraries in (*1) above other than axTLS, which
+        does not support SSLv3
+  *11 = requires libidn or Windows
+  *12 = requires libz
+  *13 = requires libmetalink, and either an Apple or Microsoft operating
+        system, or OpenSSL, or GnuTLS, or NSS
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/INSTALL /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/INSTALL
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/INSTALL	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/INSTALL	2013-02-14 02:45:00.000000000 +0800
@@ -218,13 +218,13 @@
    If you have any problems linking libraries or finding header files, be sure
    to verify that the provided "Makefile.m32" files use the proper paths, and
    adjust as necessary. It is also possible to override these paths with
    environment variables, for example:
 
      set ZLIB_PATH=c:\zlib-1.2.7
-     set OPENSSL_PATH=c:\openssl-0.9.8x
+     set OPENSSL_PATH=c:\openssl-0.9.8y
      set LIBSSH2_PATH=c:\libssh2-1.4.3
 
    ATTENTION: if you want to build with libssh2 support you have to use latest
    version 0.17 - previous versions will NOT work with 7.17.0 and later!
    Use 'mingw32-make mingw32-ssh2-ssl-zlib' to build with SSH2 and SSL enabled.
 
@@ -334,13 +334,13 @@
    the OpenSSL home directory.  OpenSSL static libraries (libeay32.lib,
    ssleay32.lib, RSAglue.lib) are created in the out32 subdirectory.
 
    Before running nmake define the OPENSSL_PATH environment variable with
    the root/base directory of OpenSSL, for example:
 
-     set OPENSSL_PATH=c:\openssl-0.9.8x
+     set OPENSSL_PATH=c:\openssl-0.9.8y
 
    Then run 'nmake vc-ssl' or 'nmake vc-ssl-dll' in curl's root
    directory.  'nmake vc-ssl' will create a libcurl static and dynamic
    libraries in the lib subdirectory, as well as a statically linked
    version of curl.exe in the src subdirectory.  This statically linked
    version is a standalone executable not requiring any DLL at
@@ -356,26 +356,26 @@
    ----------
 
    A minimal VC++ 6.0 reference workspace (vc6curl.dsw) is available with the
    source distribution archive to allow proper building of the two included
    projects, the libcurl library and the curl tool.
 
-   1) Open the vc6curl.dsw workspace with MSVC6's IDE.
+   1) Open the vs/vc6/vc6curl.dsw workspace with MSVC6's IDE.
    2) Select 'Build' from top menu.
    3) Select 'Batch Build' from dropdown menu.
    4) Make sure that the eight project configurations are 'checked'.
    5) Click on the 'Build' button.
    6) Once the eight project configurations are built you are done.
 
    Dynamic and static libcurl libraries are built in debug and release flavours,
-   and can be located each one in its own subdirectory, DLL-Debug, DLL-Release,
-   LIB-Debug and LIB-Release, all of them below the 'lib' subdirectory.
+   and can be located each one in its own subdirectory, dll-debug, dll-release,
+   lib-debug and lib-release, all of them below the 'vs/vc6/lib' subdirectory.
 
    In the same way four curl executables are created, each using its respective
    library. The resulting curl executables are located in its own subdirectory,
-   DLL-Debug, DLL-Release, LIB-Debug and LIB-Release, below the 'src' subdir.
+   dll-debug, dll-release, lib-debug and lib-release, below 'vs/vc6/src' subdir.
 
    These reference VC++ 6.0 configurations are generated using the dynamic CRT.
 
    Intentionally, these reference VC++ 6.0 projects and configurations don't use
    third party libraries, such as OpenSSL or Zlib, to allow proper compilation
    and configuration for all new users without further requirements.
@@ -873,13 +873,13 @@
    To clean the build results type 'make -f ./Makefile.vxworks clean'.
 
 
 Android
 =======
    Method using the static makefile:
-      - see the build notes in the Android.mk file.
+      - see the build notes in the packages/Android/Android.mk file.
 
    Method using a configure cross-compile (tested with Android NDK r7c, r8):
       - prepare the toolchain of the Android NDK for standalone use; this can
         be done by invoking the script:
         ./build/tools/make-standalone-toolchain.sh
         which creates a usual cross-compile toolchain. Lets assume that you put
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/INTERNALS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/INTERNALS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/INTERNALS	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/INTERNALS	2013-04-12 02:46:54.000000000 +0800
@@ -39,23 +39,23 @@
  libssh2      0.16
  c-ares       1.6.0
  libidn       0.4.1
  cyassl       2.0.0
  openldap     2.0
  MIT krb5 lib 1.2.4
- qsossl       V5R2M0
+ qsossl       V5R3M0
  NSS          3.12.x
  axTLS        1.2.7
  Heimdal      ?
 
  On systems where configure runs, we aim at working on them all - if they have
  a suitable C compiler. On systems that don't run configure, we strive to keep
  curl running fine on:
 
  Windows      98
- AS/400       V5R2M0
+ AS/400       V5R3M0
  Symbian      9.1
  Windows CE   ?
  TPF          ?
 
  When writing code (mostly for generating stuff included in release tarballs)
  we use a few "build tools" and we make sure that we remain functional with
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_duphandle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_duphandle.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_escape.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_escape.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_escape.pdf	2013-02-06 18:08:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_escape.pdf	2013-04-12 15:12:58.000000000 +0800
@@ -66,30 +66,30 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:ba8f4ead-a861-11ed-0000-e20d2ea3735f' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:ba8f4ead-a861-11ed-0000-e20d2ea3735f' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-02-06T11:08:40+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-02-06T11:08:40+01:00</xmp:CreateDate>
-<xmp:CreatorTool>groff version 1.22.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:ba8f4ead-a861-11ed-0000-e20d2ea3735f' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:ba8f4ead-a861-11ed-0000-e20d2ea3735f'/>
-<rdf:Description rdf:about='uuid:ba8f4ead-a861-11ed-0000-e20d2ea3735f' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:f3e45ea3-db5c-11ed-0000-e20d2ea3735f' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:f3e45ea3-db5c-11ed-0000-e20d2ea3735f' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-04-12T09:12:58+02:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-04-12T09:12:58+02:00</xmp:CreateDate>
+<xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
+<rdf:Description rdf:about='uuid:f3e45ea3-db5c-11ed-0000-e20d2ea3735f' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:f3e45ea3-db5c-11ed-0000-e20d2ea3735f'/>
+<rdf:Description rdf:about='uuid:f3e45ea3-db5c-11ed-0000-e20d2ea3735f' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20130206110840+01'00')
-/ModDate(D:20130206110840+01'00')
-/Creator(groff version 1.22.1)>>endobj
+/CreationDate(D:20130412091258+02'00')
+/ModDate(D:20130412091258+02'00')
+/Creator(groff version 1.22.2)>>endobj
 xref
 0 15
 0000000000 65535 f 
 0000001546 00000 n 
 0000003436 00000 n 
 0000001487 00000 n 
@@ -103,11 +103,11 @@
 0000001652 00000 n 
 0000001682 00000 n 
 0000001947 00000 n 
 0000002013 00000 n 
 trailer
 << /Size 15 /Root 1 0 R /Info 2 0 R
-/ID [<D603BA540007FA8CB8E3C3596BB0E427><D603BA540007FA8CB8E3C3596BB0E427>]
+/ID [<EC2E13B9DFE31DF75A0609BDED131FF7><EC2E13B9DFE31DF75A0609BDED131FF7>]
 >>
 startxref
 3590
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_getinfo.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_getinfo.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_pause.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_pause.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_recv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_recv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_reset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_reset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_send.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_send.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_setopt.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_setopt.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_setopt.3	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_setopt.3	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at http://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -55,33 +55,35 @@
 \fIcurl_easy_duphandle(3)\fP call.
 .SH BEHAVIOR OPTIONS
 .IP CURLOPT_VERBOSE
 Set the parameter to 1 to get the library to display a lot of verbose
 information about its operations. Very useful for libcurl and/or protocol
 debugging and understanding. The verbose information will be sent to stderr,
-or the stream set with \fICURLOPT_STDERR\fP.
+or the stream set with \fICURLOPT_STDERR\fP. The default value for this
+parameter is 0.
 
 You hardly ever want this set in production use, you will almost always want
 this when you debug/report problems. Another neat option for debugging is the
 \fICURLOPT_DEBUGFUNCTION\fP.
 .IP CURLOPT_HEADER
 A parameter set to 1 tells the library to include the header in the body
 output. This is only relevant for protocols that actually have headers
-preceding the data (like HTTP).
+preceding the data (like HTTP). The default value for this parameter is 0.
 .IP CURLOPT_NOPROGRESS
 Pass a long. If set to 1, it tells the library to shut off the progress meter
 completely. It will also prevent the \fICURLOPT_PROGRESSFUNCTION\fP from
-getting called.
+getting called. The default value for this parameter is 1.
 
 Future versions of libcurl are likely to not have any built-in progress meter
 at all.
 .IP CURLOPT_NOSIGNAL
 Pass a long. If it is 1, libcurl will not use any functions that
 install signal handlers or any functions that cause signals to be sent to the
 process. This option is mainly here to allow multi-threaded unix applications
 to still set/use all timeout options etc, without risking getting signals.
+The default value for this parameter is 0.
 (Added in 7.10)
 
 If this option is set and libcurl has been built with the standard name
 resolver, timeouts will not occur while the name resolve takes place.
 Consider building libcurl with c-ares support to enable asynchronous DNS
 lookups, which enables nice timeouts for name resolves without signals.
@@ -177,14 +179,15 @@
 header data to the write callback, you can get up to
 \fICURL_MAX_HTTP_HEADER\fP bytes of header data passed into it. This usually
 means 100K.
 .IP CURLOPT_WRITEDATA
 Data pointer to pass to the file write function. If you use the
 \fICURLOPT_WRITEFUNCTION\fP option, this is the pointer you'll get as
-input. If you don't use a callback, you must pass a 'FILE *' as libcurl will
-pass this to fwrite() when writing data.
+input. If you don't use a callback, you must pass a 'FILE *' (cast
+to 'void *') as libcurl will pass this to fwrite() when writing data.
+By default, the value of this parameter is unspecified.
 
 The internal \fICURLOPT_WRITEFUNCTION\fP will write the data to the FILE *
 given with this option, or to stdout if this option hasn't been set.
 
 If you're using libcurl as a win32 DLL, you \fBMUST\fP use the
 \fICURLOPT_WRITEFUNCTION\fP if you set this option or you will experience
@@ -223,13 +226,13 @@
 internal read function will be used. It is doing an fread() on the FILE *
 userdata set with \fICURLOPT_READDATA\fP.
 .IP CURLOPT_READDATA
 Data pointer to pass to the file read function. If you use the
 \fICURLOPT_READFUNCTION\fP option, this is the pointer you'll get as input. If
 you don't specify a read callback but instead rely on the default internal
-read function, this data must be a valid readable FILE *.
+read function, this data must be a valid readable FILE * (cast to 'void *').
 
 If you're using libcurl as a win32 DLL, you MUST use a
 \fICURLOPT_READFUNCTION\fP if you set this option.
 
 This option was also known by the older name \fICURLOPT_INFILE\fP, the name
 \fICURLOPT_READDATA\fP was introduced in 7.9.7.
@@ -237,19 +240,21 @@
 Pass a pointer to a function that matches the following prototype:
 \fBcurlioerr function(CURL *handle, int cmd, void *clientp);\fP. This function
 gets called by libcurl when something special I/O-related needs to be done
 that the library can't do by itself. For now, rewinding the read data stream
 is the only action it can request. The rewinding of the read data stream may
 be necessary when doing a HTTP PUT or POST with a multi-pass authentication
-method.  (Option added in 7.12.3).
+method. By default, this parameter is set to NULL.  (Option added in 7.12.3).
 
-Use \fICURLOPT_SEEKFUNCTION\fP instead to provide seeking!
+Use \fICURLOPT_SEEKFUNCTION\fP instead to provide seeking! If
+\fICURLOPT_SEEKFUNCTION\fP is set, this parameter will be ignored when seeking.
 .IP CURLOPT_IOCTLDATA
 Pass a pointer that will be untouched by libcurl and passed as the 3rd
-argument in the ioctl callback set with \fICURLOPT_IOCTLFUNCTION\fP.  (Option
-added in 7.12.3)
+argument in the ioctl callback set with \fICURLOPT_IOCTLFUNCTION\fP.
+By default, the value of this parameter is unspecified.  (Option added in
+7.12.3)
 .IP CURLOPT_SEEKFUNCTION
 Pass a pointer to a function that matches the following prototype: \fBint
 function(void *instream, curl_off_t offset, int origin);\fP This function gets
 called by libcurl to seek to a certain position in the input stream and can be
 used to fast forward a file in a resumed upload (instead of reading all
 uploaded bytes with the normal read function/callback). It is also called to
@@ -259,22 +264,25 @@
 only passes SEEK_SET. The callback must return 0 (CURL_SEEKFUNC_OK) on
 success, 1 (CURL_SEEKFUNC_FAIL) to cause the upload operation to fail or 2
 (CURL_SEEKFUNC_CANTSEEK) to indicate that while the seek failed, libcurl is
 free to work around the problem if possible. The latter can sometimes be done
 by instead reading from the input or similar.
 
+By default, this parameter is unset.
+
 If you forward the input arguments directly to "fseek" or "lseek", note that
 the data type for \fIoffset\fP is not the same as defined for curl_off_t on
 many systems! (Option added in 7.18.0)
 .IP CURLOPT_SEEKDATA
 Data pointer to pass to the file seek function. If you use the
 \fICURLOPT_SEEKFUNCTION\fP option, this is the pointer you'll get as input. If
 you don't specify a seek callback, NULL is passed. (Option added in 7.18.0)
 .IP CURLOPT_SOCKOPTFUNCTION
 Pass a pointer to a function that matches the following prototype: \fBint
-function(void *clientp, curl_socket_t curlfd, curlsocktype purpose);\fP. This
+function(void *clientp, curl_socket_t curlfd, curlsocktype purpose);\fP. By
+default, this parameter is unset. If set, this
 function gets called by libcurl after the socket() call but before the
 connect() call. The callback's \fIpurpose\fP argument identifies the exact
 purpose for this particular socket:
 
 \fICURLSOCKTYPE_IPCXN\fP for actively created connections or since 7.28.0
 \fICURLSOCKTYPE_ACCEPT\fP for FTP when the connection was setup with PORT/EPSV
@@ -290,12 +298,13 @@
 Added in 7.21.5, the callback function may return
 \fICURL_SOCKOPT_ALREADY_CONNECTED\fP, which tells libcurl that the socket is
 in fact already connected and then libcurl will not attempt to connect it.
 .IP CURLOPT_SOCKOPTDATA
 Pass a pointer that will be untouched by libcurl and passed as the first
 argument in the sockopt callback set with \fICURLOPT_SOCKOPTFUNCTION\fP.
+The default value of this parameter is unspecified.
 (Option added in 7.16.0)
 .IP CURLOPT_OPENSOCKETFUNCTION
 Pass a pointer to a function that matches the following prototype:
 \fBcurl_socket_t function(void *clientp, curlsocktype purpose, struct
 curl_sockaddr *address);\fP. This function gets called by libcurl instead of
 the \fIsocket(2)\fP call. The callback's \fIpurpose\fP argument identifies the
@@ -314,24 +323,27 @@
    return socket(addr->family, addr->socktype, addr->protocol);
 .fi
 (Option added in 7.17.1.)
 .IP CURLOPT_OPENSOCKETDATA
 Pass a pointer that will be untouched by libcurl and passed as the first
 argument in the opensocket callback set with \fICURLOPT_OPENSOCKETFUNCTION\fP.
+The default value of this parameter is unspecified.
 (Option added in 7.17.1.)
 .IP CURLOPT_CLOSESOCKETFUNCTION
 Pass a pointer to a function that matches the following prototype: \fBint
 function(void *clientp, curl_socket_t item);\fP. This function gets called by
 libcurl instead of the \fIclose(3)\fP or \fIclosesocket(3)\fP call when
 sockets are closed (not for any other file descriptors). This is pretty much
 the reverse to the \fICURLOPT_OPENSOCKETFUNCTION\fP option. Return 0 to signal
 success and 1 if there was an error.  (Option added in 7.21.7)
 .IP CURLOPT_CLOSESOCKETDATA
 Pass a pointer that will be untouched by libcurl and passed as the first
 argument in the closesocket callback set with
-\fICURLOPT_CLOSESOCKETFUNCTION\fP.  (Option added in 7.21.7)
+\fICURLOPT_CLOSESOCKETFUNCTION\fP.
+The default value of this parameter is unspecified.
+(Option added in 7.21.7)
 .IP CURLOPT_PROGRESSFUNCTION
 Pass a pointer to a function that matches the following prototype: \fBint
 function(void *clientp, double dltotal, double dlnow, double ultotal, double
 ulnow); \fP. This function gets called by libcurl instead of its internal
 equivalent with a frequent interval during operation (roughly once per second
 or sooner) no matter if data is being transferred or not.  Unknown/unused
@@ -346,12 +358,13 @@
 
 \fICURLOPT_NOPROGRESS\fP must be set to 0 to make this function actually
 get called.
 .IP CURLOPT_PROGRESSDATA
 Pass a pointer that will be untouched by libcurl and passed as the first
 argument in the progress callback set with \fICURLOPT_PROGRESSFUNCTION\fP.
+The default value of this parameter is unspecified.
 .IP CURLOPT_HEADERFUNCTION
 Pass a pointer to a function that matches the following prototype:
 \fBsize_t function( void *ptr, size_t size, size_t nmemb, void
 *userdata);\fP. This function gets called by libcurl as soon as it has
 received header data. The header callback will be called once for each header
 and only complete header lines are passed on to the callback. Parsing headers
@@ -711,18 +724,45 @@
 
 smtp://mail.example.com/client.example.com - This will send client.example.com in
 the HELO / EHLO command to the mail server at example.com.
 
 .B POP3
 
-The path part of a POP3 request specifies the mailbox (message) to retrieve.
-If the mailbox is not specified then a list of waiting messages is returned
-instead.
+The path part of a POP3 request specifies the message ID to retrieve. If the
+ID is not specified then a list of waiting messages is returned instead.
+
+pop3://user:password@mail.example.com - This lists the available messages for
+the user
+
+pop3://user:password@mail.example.com/1 - This retrieves the first message for
+the user
+
+.B IMAP
+
+The path part of an IMAP request not only specifies the mailbox to list (Added
+in 7.30.0) or select, but can also be used to check the UIDVALIDITY of the
+mailbox and to specify the UID and SECTION of the message to fetch (Added in
+7.30.0).
+
+imap://user:password@mail.example.com - Performs a top level folder list
 
-pop3://user:password@mail.example.com - This lists the available messages
-pop3://user:password@mail.example.com/1 - This retrieves the first message
+imap://user:password@mail.example.com/INBOX - Performs a folder list on the
+user's inbox
+
+imap://user:password@mail.example.com/INBOX/;UID=1 - Selects the user's inbox
+and fetches message 1
+
+imap://user:password@mail.example.com/INBOX;UIDVALIDITY=50/;UID=2 - Selects
+the user's inbox, checks the UIDVALIDITY of the mailbox is 50 and fetches
+message 2 if it is
+
+imap://user:password@mail.example.com/INBOX/;UID=3/;SECTION=TEXT - Selects the
+user's inbox and fetches message 3 with only the text portion of the message
+
+For more information about the individual components of an IMAP URL please
+see RFC5092.
 
 .B SCP
 
 The path part of a SCP request specifies the file to retrieve and from what
 directory. The file part may not be omitted. The file is taken as an absolute
 path from the root directory on the server. To specify a path relative to
@@ -1442,13 +1482,13 @@
 .IP CURLOPT_HTTPGET
 Pass a long. If the long is 1, this forces the HTTP request to get back
 to GET. Usable if a POST, HEAD, PUT, or a custom request has been used
 previously using the same curl handle.
 
 When setting \fICURLOPT_HTTPGET\fP to 1, it will automatically set
-\fICURLOPT_NOBODY\fP to 0 (since 7.14.1).
+\fICURLOPT_NOBODY\fP to 0 and \fICURLOPT_UPLOAD\fP to 0.
 .IP CURLOPT_HTTP_VERSION
 Pass a long, set to one of the values described below. They force libcurl to
 use the specific HTTP versions. This is not sensible to do unless you have a
 good reason.
 .RS
 .IP CURL_HTTP_VERSION_NONE
@@ -1465,14 +1505,14 @@
 gigabytes. If this option is used, curl will not be able to accurately report
 progress, and will simply stop the download when the server ends the
 connection. (added in 7.14.1)
 .IP CURLOPT_HTTP_CONTENT_DECODING
 Pass a long to tell libcurl how to act on content decoding. If set to zero,
 content decoding will be disabled. If set to 1 it is enabled. Libcurl has no
-default content decoding but requires you to use \fICURLOPT_ENCODING\fP for
-that. (added in 7.16.2)
+default content decoding but requires you to use \fICURLOPT_ACCEPT_ENCODING\fP
+for that. (added in 7.16.2)
 .IP CURLOPT_HTTP_TRANSFER_DECODING
 Pass a long to tell libcurl how to act on transfer decoding. If set to zero,
 transfer decoding will be disabled, if set to 1 it is enabled
 (default). libcurl does chunked transfer decoding by default unless this
 option is set to zero. (added in 7.16.2)
 .SH SMTP OPTIONS
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_setopt.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_setopt.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_setopt.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_setopt.html	2013-04-12 15:12:52.000000000 +0800
@@ -53,21 +53,21 @@
 <p class="level0">Options set with this function call are valid for all forthcoming transfers performed using this <span Class="emphasis">handle</span>.  The options are not in any way reset between transfers, so if you want subsequent transfers with different options, you must change them between the transfers. You can optionally reset all options back to internal default with <a class="emphasis" href="./curl_easy_reset.html">curl_easy_reset(3)</a>. 
 <p class="level0">Strings passed to libcurl as 'char *' arguments, are copied by the library; thus the string storage associated to the pointer argument may be overwritten after curl_easy_setopt() returns. Exceptions to this rule are described in the option details below. 
 <p class="level0">Before version 7.17.0, strings were not copied. Instead the user was forced keep them available until libcurl no longer needed them. 
 <p class="level0">The <span Class="emphasis">handle</span> is the return code from a <a class="emphasis" href="./curl_easy_init.html">curl_easy_init(3)</a> or <a class="emphasis" href="./curl_easy_duphandle.html">curl_easy_duphandle(3)</a> call. <a name="BEHAVIOR"></a><h2 class="nroffsh">BEHAVIOR OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTVERBOSE"></a><span class="nroffip">CURLOPT_VERBOSE</span> 
-<p class="level1">Set the parameter to 1 to get the library to display a lot of verbose information about its operations. Very useful for libcurl and/or protocol debugging and understanding. The verbose information will be sent to stderr, or the stream set with <a class="emphasis" href="#CURLOPTSTDERR">CURLOPT_STDERR</a>. 
+<p class="level1">Set the parameter to 1 to get the library to display a lot of verbose information about its operations. Very useful for libcurl and/or protocol debugging and understanding. The verbose information will be sent to stderr, or the stream set with <a class="emphasis" href="#CURLOPTSTDERR">CURLOPT_STDERR</a>. The default value for this parameter is 0. 
 <p class="level1">You hardly ever want this set in production use, you will almost always want this when you debug/report problems. Another neat option for debugging is the <a class="emphasis" href="#CURLOPTDEBUGFUNCTION">CURLOPT_DEBUGFUNCTION</a>. 
 <p class="level0"><a name="CURLOPTHEADER"></a><span class="nroffip">CURLOPT_HEADER</span> 
-<p class="level1">A parameter set to 1 tells the library to include the header in the body output. This is only relevant for protocols that actually have headers preceding the data (like HTTP). 
+<p class="level1">A parameter set to 1 tells the library to include the header in the body output. This is only relevant for protocols that actually have headers preceding the data (like HTTP). The default value for this parameter is 0. 
 <p class="level0"><a name="CURLOPTNOPROGRESS"></a><span class="nroffip">CURLOPT_NOPROGRESS</span> 
-<p class="level1">Pass a long. If set to 1, it tells the library to shut off the progress meter completely. It will also prevent the <a class="emphasis" href="#CURLOPTPROGRESSFUNCTION">CURLOPT_PROGRESSFUNCTION</a> from getting called. 
+<p class="level1">Pass a long. If set to 1, it tells the library to shut off the progress meter completely. It will also prevent the <a class="emphasis" href="#CURLOPTPROGRESSFUNCTION">CURLOPT_PROGRESSFUNCTION</a> from getting called. The default value for this parameter is 1. 
 <p class="level1">Future versions of libcurl are likely to not have any built-in progress meter at all. 
 <p class="level0"><a name="CURLOPTNOSIGNAL"></a><span class="nroffip">CURLOPT_NOSIGNAL</span> 
-<p class="level1">Pass a long. If it is 1, libcurl will not use any functions that install signal handlers or any functions that cause signals to be sent to the process. This option is mainly here to allow multi-threaded unix applications to still set/use all timeout options etc, without risking getting signals. (Added in 7.10) 
+<p class="level1">Pass a long. If it is 1, libcurl will not use any functions that install signal handlers or any functions that cause signals to be sent to the process. This option is mainly here to allow multi-threaded unix applications to still set/use all timeout options etc, without risking getting signals. The default value for this parameter is 0. (Added in 7.10) 
 <p class="level1">If this option is set and libcurl has been built with the standard name resolver, timeouts will not occur while the name resolve takes place. Consider building libcurl with c-ares support to enable asynchronous DNS lookups, which enables nice timeouts for name resolves without signals. 
 <p class="level1">Setting <a class="emphasis" href="#CURLOPTNOSIGNAL">CURLOPT_NOSIGNAL</a> to 1 makes libcurl NOT ask the system to ignore SIGPIPE signals, which otherwise are sent by the system when trying to send data to a socket which is closed in the other end. libcurl makes an effort to never cause such SIGPIPEs to trigger, but some operating systems have no way to avoid them and even on those that have there are some corner cases when they may still happen, contrary to our desire. In addition, using <a class="emphasis" href="#CURLAUTHNTLMWB">CURLAUTH_NTLM_WB</a> authentication could cause a SIGCHLD signal to be raised. 
 <p class="level0"><a name="CURLOPTWILDCARDMATCH"></a><span class="nroffip">CURLOPT_WILDCARDMATCH</span> 
 <p class="level1">Set this option to 1 if you want to transfer multiple files according to a file name pattern. The pattern can be specified as part of the <a class="emphasis" href="#CURLOPTURL">CURLOPT_URL</a> option, using an fnmatch-like pattern (Shell Pattern Matching) in the last part of URL (file name). 
 <p class="level1">By default, libcurl uses its internal wildcard matching implementation. You can provide your own matching function by the <a class="emphasis" href="#CURLOPTFNMATCHFUNCTION">CURLOPT_FNMATCH_FUNCTION</a> option. 
 <p class="level1">This feature is only supported by the FTP download for now. 
@@ -100,60 +100,61 @@
 <p class="level1">From 7.18.0, the function can return CURL_WRITEFUNC_PAUSE which then will cause writing to this connection to become paused. See <a class="emphasis" href="./curl_easy_pause.html">curl_easy_pause(3)</a> for further details. 
 <p class="level1">This function may be called with zero bytes data if the transferred file is empty. 
 <p class="level1">Set this option to NULL to get the internal default function. The internal default function will write the data to the FILE * given with <a class="emphasis" href="#CURLOPTWRITEDATA">CURLOPT_WRITEDATA</a>. 
 <p class="level1">Set the <span Class="emphasis">userdata</span> argument with the <a class="emphasis" href="#CURLOPTWRITEDATA">CURLOPT_WRITEDATA</a> option. 
 <p class="level1">The callback function will be passed as much data as possible in all invokes, but you cannot possibly make any assumptions. It may be one byte, it may be thousands. The maximum amount of body data that can be passed to the write callback is defined in the curl.h header file: CURL_MAX_WRITE_SIZE (the usual default is 16K). If you however have <a class="emphasis" href="#CURLOPTHEADER">CURLOPT_HEADER</a> set, which sends header data to the write callback, you can get up to <span Class="emphasis">CURL_MAX_HTTP_HEADER</span> bytes of header data passed into it. This usually means 100K. 
 <p class="level0"><a name="CURLOPTWRITEDATA"></a><span class="nroffip">CURLOPT_WRITEDATA</span> 
-<p class="level1">Data pointer to pass to the file write function. If you use the <a class="emphasis" href="#CURLOPTWRITEFUNCTION">CURLOPT_WRITEFUNCTION</a> option, this is the pointer you'll get as input. If you don't use a callback, you must pass a 'FILE *' as libcurl will pass this to fwrite() when writing data. 
+<p class="level1">Data pointer to pass to the file write function. If you use the <a class="emphasis" href="#CURLOPTWRITEFUNCTION">CURLOPT_WRITEFUNCTION</a> option, this is the pointer you'll get as input. If you don't use a callback, you must pass a 'FILE *' (cast to 'void *') as libcurl will pass this to fwrite() when writing data. By default, the value of this parameter is unspecified. 
 <p class="level1">The internal <a class="emphasis" href="#CURLOPTWRITEFUNCTION">CURLOPT_WRITEFUNCTION</a> will write the data to the FILE * given with this option, or to stdout if this option hasn't been set. 
 <p class="level1">If you're using libcurl as a win32 DLL, you <span Class="bold">MUST</span> use the <a class="emphasis" href="#CURLOPTWRITEFUNCTION">CURLOPT_WRITEFUNCTION</a> if you set this option or you will experience crashes. 
 <p class="level1">This option is also known with the older name <span Class="emphasis">CURLOPT_FILE</span>, the name <a class="emphasis" href="#CURLOPTWRITEDATA">CURLOPT_WRITEDATA</a> was introduced in 7.9.7. 
 <p class="level0"><a name="CURLOPTREADFUNCTION"></a><span class="nroffip">CURLOPT_READFUNCTION</span> 
 <p class="level1">Pass a pointer to a function that matches the following prototype: <span Class="bold">size_t function( void *ptr, size_t size, size_t nmemb, void *userdata);</span> This function gets called by libcurl as soon as it needs to read data in order to send it to the peer. The data area pointed at by the pointer <span Class="emphasis">ptr</span> may be filled with at most <span Class="emphasis">size</span> multiplied with <span Class="emphasis">nmemb</span> number of bytes. Your function must return the actual number of bytes that you stored in that memory area. Returning 0 will signal end-of-file to the library and cause it to stop the current transfer. 
 <p class="level1">If you stop the current transfer by returning 0 "pre-maturely" (i.e before the server expected it, like when you've said you will upload N bytes and you upload less than N bytes), you may experience that the server "hangs" waiting for the rest of the data that won't come. 
 <p class="level1">The read callback may return <span Class="emphasis">CURL_READFUNC_ABORT</span> to stop the current operation immediately, resulting in a <span Class="emphasis">CURLE_ABORTED_BY_CALLBACK</span> error code from the transfer (Added in 7.12.1) 
 <p class="level1">From 7.18.0, the function can return CURL_READFUNC_PAUSE which then will cause reading from this connection to become paused. See <a class="emphasis" href="./curl_easy_pause.html">curl_easy_pause(3)</a> for further details. 
 <p class="level1"><span Class="bold">Bugs</span>: when doing TFTP uploads, you must return the exact amount of data that the callback wants, or it will be considered the final packet by the server end and the transfer will end there. 
 <p class="level1">If you set this callback pointer to NULL, or don't set it at all, the default internal read function will be used. It is doing an fread() on the FILE * userdata set with <a class="emphasis" href="#CURLOPTREADDATA">CURLOPT_READDATA</a>. 
 <p class="level0"><a name="CURLOPTREADDATA"></a><span class="nroffip">CURLOPT_READDATA</span> 
-<p class="level1">Data pointer to pass to the file read function. If you use the <a class="emphasis" href="#CURLOPTREADFUNCTION">CURLOPT_READFUNCTION</a> option, this is the pointer you'll get as input. If you don't specify a read callback but instead rely on the default internal read function, this data must be a valid readable FILE *. 
+<p class="level1">Data pointer to pass to the file read function. If you use the <a class="emphasis" href="#CURLOPTREADFUNCTION">CURLOPT_READFUNCTION</a> option, this is the pointer you'll get as input. If you don't specify a read callback but instead rely on the default internal read function, this data must be a valid readable FILE * (cast to 'void *'). 
 <p class="level1">If you're using libcurl as a win32 DLL, you MUST use a <a class="emphasis" href="#CURLOPTREADFUNCTION">CURLOPT_READFUNCTION</a> if you set this option. 
 <p class="level1">This option was also known by the older name <span Class="emphasis">CURLOPT_INFILE</span>, the name <a class="emphasis" href="#CURLOPTREADDATA">CURLOPT_READDATA</a> was introduced in 7.9.7. 
 <p class="level0"><a name="CURLOPTIOCTLFUNCTION"></a><span class="nroffip">CURLOPT_IOCTLFUNCTION</span> 
-<p class="level1">Pass a pointer to a function that matches the following prototype: <span Class="bold">curlioerr function(CURL *handle, int cmd, void *clientp);</span>. This function gets called by libcurl when something special I/O-related needs to be done that the library can't do by itself. For now, rewinding the read data stream is the only action it can request. The rewinding of the read data stream may be necessary when doing a HTTP PUT or POST with a multi-pass authentication method.  (Option added in 7.12.3). 
-<p class="level1">Use <a class="emphasis" href="#CURLOPTSEEKFUNCTION">CURLOPT_SEEKFUNCTION</a> instead to provide seeking! 
+<p class="level1">Pass a pointer to a function that matches the following prototype: <span Class="bold">curlioerr function(CURL *handle, int cmd, void *clientp);</span>. This function gets called by libcurl when something special I/O-related needs to be done that the library can't do by itself. For now, rewinding the read data stream is the only action it can request. The rewinding of the read data stream may be necessary when doing a HTTP PUT or POST with a multi-pass authentication method. By default, this parameter is set to NULL.  (Option added in 7.12.3). 
+<p class="level1">Use <a class="emphasis" href="#CURLOPTSEEKFUNCTION">CURLOPT_SEEKFUNCTION</a> instead to provide seeking! If <a class="emphasis" href="#CURLOPTSEEKFUNCTION">CURLOPT_SEEKFUNCTION</a> is set, this parameter will be ignored when seeking. 
 <p class="level0"><a name="CURLOPTIOCTLDATA"></a><span class="nroffip">CURLOPT_IOCTLDATA</span> 
-<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the 3rd argument in the ioctl callback set with <a class="emphasis" href="#CURLOPTIOCTLFUNCTION">CURLOPT_IOCTLFUNCTION</a>.  (Option added in 7.12.3) 
+<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the 3rd argument in the ioctl callback set with <a class="emphasis" href="#CURLOPTIOCTLFUNCTION">CURLOPT_IOCTLFUNCTION</a>. By default, the value of this parameter is unspecified.  (Option added in 7.12.3) 
 <p class="level0"><a name="CURLOPTSEEKFUNCTION"></a><span class="nroffip">CURLOPT_SEEKFUNCTION</span> 
 <p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">int function(void *instream, curl_off_t offset, int origin);</span> This function gets called by libcurl to seek to a certain position in the input stream and can be used to fast forward a file in a resumed upload (instead of reading all uploaded bytes with the normal read function/callback). It is also called to rewind a stream when doing a HTTP PUT or POST with a multi-pass authentication method. The function shall work like "fseek" or "lseek" and accepted SEEK_SET, SEEK_CUR and SEEK_END as argument for origin, although (in 7.18.0) libcurl only passes SEEK_SET. The callback must return 0 (CURL_SEEKFUNC_OK) on success, 1 (CURL_SEEKFUNC_FAIL) to cause the upload operation to fail or 2 (CURL_SEEKFUNC_CANTSEEK) to indicate that while the seek failed, libcurl is free to work around the problem if possible. The latter can sometimes be done by instead reading from the input or similar. 
+<p class="level1">By default, this parameter is unset. 
 <p class="level1">If you forward the input arguments directly to "fseek" or "lseek", note that the data type for <span Class="emphasis">offset</span> is not the same as defined for curl_off_t on many systems! (Option added in 7.18.0) 
 <p class="level0"><a name="CURLOPTSEEKDATA"></a><span class="nroffip">CURLOPT_SEEKDATA</span> 
 <p class="level1">Data pointer to pass to the file seek function. If you use the <a class="emphasis" href="#CURLOPTSEEKFUNCTION">CURLOPT_SEEKFUNCTION</a> option, this is the pointer you'll get as input. If you don't specify a seek callback, NULL is passed. (Option added in 7.18.0) 
 <p class="level0"><a name="CURLOPTSOCKOPTFUNCTION"></a><span class="nroffip">CURLOPT_SOCKOPTFUNCTION</span> 
-<p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">int function(void *clientp, curl_socket_t curlfd, curlsocktype purpose);</span>. This function gets called by libcurl after the socket() call but before the connect() call. The callback's <span Class="emphasis">purpose</span> argument identifies the exact purpose for this particular socket: 
+<p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">int function(void *clientp, curl_socket_t curlfd, curlsocktype purpose);</span>. By default, this parameter is unset. If set, this function gets called by libcurl after the socket() call but before the connect() call. The callback's <span Class="emphasis">purpose</span> argument identifies the exact purpose for this particular socket: 
 <p class="level1"><span Class="emphasis">CURLSOCKTYPE_IPCXN</span> for actively created connections or since 7.28.0 <span Class="emphasis">CURLSOCKTYPE_ACCEPT</span> for FTP when the connection was setup with PORT/EPSV (in earlier versions these sockets weren't passed to this callback). 
 <p class="level1">Future versions of libcurl may support more purposes. It passes the newly created socket descriptor so additional setsockopt() calls can be done at the user's discretion.  Return 0 (zero) from the callback on success. Return 1 from the callback function to signal an unrecoverable error to the library and it will close the socket and return <span Class="emphasis">CURLE_COULDNT_CONNECT</span>.  (Option added in 7.16.0) 
 <p class="level1">Added in 7.21.5, the callback function may return <span Class="emphasis">CURL_SOCKOPT_ALREADY_CONNECTED</span>, which tells libcurl that the socket is in fact already connected and then libcurl will not attempt to connect it. 
 <p class="level0"><a name="CURLOPTSOCKOPTDATA"></a><span class="nroffip">CURLOPT_SOCKOPTDATA</span> 
-<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the sockopt callback set with <a class="emphasis" href="#CURLOPTSOCKOPTFUNCTION">CURLOPT_SOCKOPTFUNCTION</a>. (Option added in 7.16.0) 
+<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the sockopt callback set with <a class="emphasis" href="#CURLOPTSOCKOPTFUNCTION">CURLOPT_SOCKOPTFUNCTION</a>. The default value of this parameter is unspecified. (Option added in 7.16.0) 
 <p class="level0"><a name="CURLOPTOPENSOCKETFUNCTION"></a><span class="nroffip">CURLOPT_OPENSOCKETFUNCTION</span> 
 <p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">curl_socket_t function(void *clientp, curlsocktype purpose, struct curl_sockaddr *address);</span>. This function gets called by libcurl instead of the <span Class="emphasis">socket(2)</span> call. The callback's <span Class="emphasis">purpose</span> argument identifies the exact purpose for this particular socket: <span Class="emphasis">CURLSOCKTYPE_IPCXN</span> is for IP based connections. Future versions of libcurl may support more purposes. It passes the resolved peer address as a <span Class="emphasis">address</span> argument so the callback can modify the address or refuse to connect at all. The callback function should return the socket or <span Class="emphasis">CURL_SOCKET_BAD</span> in case no connection could be established or another error was detected. Any additional <span Class="emphasis">setsockopt(2)</span> calls can be done on the socket at the user's discretion. <span Class="emphasis">CURL_SOCKET_BAD</span> return value from the callback function will signal an unrecoverable error to the library and it will return <span Class="emphasis">CURLE_COULDNT_CONNECT</span>.  This return code can be used for IP address blacklisting.  The default behavior is: 
 <p class="level1">&nbsp;  return socket(addr-&gt;family, addr-&gt;socktype, addr-&gt;protocol); 
 <p class="level1">(Option added in 7.17.1.) 
 <p class="level0"><a name="CURLOPTOPENSOCKETDATA"></a><span class="nroffip">CURLOPT_OPENSOCKETDATA</span> 
-<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the opensocket callback set with <a class="emphasis" href="#CURLOPTOPENSOCKETFUNCTION">CURLOPT_OPENSOCKETFUNCTION</a>. (Option added in 7.17.1.) 
+<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the opensocket callback set with <a class="emphasis" href="#CURLOPTOPENSOCKETFUNCTION">CURLOPT_OPENSOCKETFUNCTION</a>. The default value of this parameter is unspecified. (Option added in 7.17.1.) 
 <p class="level0"><a name="CURLOPTCLOSESOCKETFUNCTION"></a><span class="nroffip">CURLOPT_CLOSESOCKETFUNCTION</span> 
 <p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">int function(void *clientp, curl_socket_t item);</span>. This function gets called by libcurl instead of the <span Class="emphasis">close(3)</span> or <span Class="emphasis">closesocket(3)</span> call when sockets are closed (not for any other file descriptors). This is pretty much the reverse to the <a class="emphasis" href="#CURLOPTOPENSOCKETFUNCTION">CURLOPT_OPENSOCKETFUNCTION</a> option. Return 0 to signal success and 1 if there was an error.  (Option added in 7.21.7) 
 <p class="level0"><a name="CURLOPTCLOSESOCKETDATA"></a><span class="nroffip">CURLOPT_CLOSESOCKETDATA</span> 
-<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the closesocket callback set with <a class="emphasis" href="#CURLOPTCLOSESOCKETFUNCTION">CURLOPT_CLOSESOCKETFUNCTION</a>.  (Option added in 7.21.7) 
+<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the closesocket callback set with <a class="emphasis" href="#CURLOPTCLOSESOCKETFUNCTION">CURLOPT_CLOSESOCKETFUNCTION</a>. The default value of this parameter is unspecified. (Option added in 7.21.7) 
 <p class="level0"><a name="CURLOPTPROGRESSFUNCTION"></a><span class="nroffip">CURLOPT_PROGRESSFUNCTION</span> 
 <p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">int function(void *clientp, double dltotal, double dlnow, double ultotal, double ulnow); </span>. This function gets called by libcurl instead of its internal equivalent with a frequent interval during operation (roughly once per second or sooner) no matter if data is being transferred or not.  Unknown/unused argument values passed to the callback will be set to zero (like if you only download data, the upload size will remain 0). Returning a non-zero value from this callback will cause libcurl to abort the transfer and return <span Class="emphasis">CURLE_ABORTED_BY_CALLBACK</span>. 
 <p class="level1">If you transfer data with the multi interface, this function will not be called during periods of idleness unless you call the appropriate libcurl function that performs transfers. 
 <p class="level1"><a class="emphasis" href="#CURLOPTNOPROGRESS">CURLOPT_NOPROGRESS</a> must be set to 0 to make this function actually get called. 
 <p class="level0"><a name="CURLOPTPROGRESSDATA"></a><span class="nroffip">CURLOPT_PROGRESSDATA</span> 
-<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the progress callback set with <a class="emphasis" href="#CURLOPTPROGRESSFUNCTION">CURLOPT_PROGRESSFUNCTION</a>. 
+<p class="level1">Pass a pointer that will be untouched by libcurl and passed as the first argument in the progress callback set with <a class="emphasis" href="#CURLOPTPROGRESSFUNCTION">CURLOPT_PROGRESSFUNCTION</a>. The default value of this parameter is unspecified. 
 <p class="level0"><a name="CURLOPTHEADERFUNCTION"></a><span class="nroffip">CURLOPT_HEADERFUNCTION</span> 
 <p class="level1">Pass a pointer to a function that matches the following prototype: <span class="bold">size_t function( void *ptr, size_t size, size_t nmemb, void *userdata);</span>. This function gets called by libcurl as soon as it has received header data. The header callback will be called once for each header and only complete header lines are passed on to the callback. Parsing headers is very easy using this. The size of the data pointed to by <span Class="emphasis">ptr</span> is <span Class="emphasis">size</span> multiplied with <span Class="emphasis">nmemb</span>. Do not assume that the header line is zero terminated! The pointer named <span Class="emphasis">userdata</span> is the one you set with the <a class="emphasis" href="#CURLOPTWRITEHEADER">CURLOPT_WRITEHEADER</a> option. The callback function must return the number of bytes actually taken care of. If that amount differs from the amount passed to your function, it'll signal an error to the library. This will abort the transfer and return <span Class="emphasis">CURL_WRITE_ERROR</span>. 
 <p class="level1">A complete HTTP header that is passed to this function can be up to <span Class="emphasis">CURL_MAX_HTTP_HEADER</span> (100K) bytes. 
 <p class="level1">If this option is not set, or if it is set to NULL, but <span Class="emphasis">CURLOPT_HEADERDATA</span> (<a class="emphasis" href="#CURLOPTWRITEHEADER">CURLOPT_WRITEHEADER</a>) is set to anything but NULL, the function used to accept response data will be used instead. That is, it will be the function specified with <a class="emphasis" href="#CURLOPTWRITEFUNCTION">CURLOPT_WRITEFUNCTION</a>, or if it is not specified or NULL - the default, stream-writing function. 
 <p class="level1">It's important to note that the callback will be invoked for the headers of all responses received after initiating a request and not just the final response. This includes all responses which occur during authentication negotiation. If you need to operate on only the headers from the final response, you will need to collect headers in the callback yourself and use HTTP status lines, for example, to delimit response boundaries. 
 <p class="level1">When a server sends a chunked encoded transfer, it may contain a trailer. That trailer is identical to a HTTP header and if such a trailer is received it is passed to the application using this callback as well. There are several ways to detect it being a trailer and not an ordinary header: 1) it comes after the response-body. 2) it comes after the final header line (CR LF) 3) a Trailer: header among the regular response-headers mention what header(s) to expect in the trailer. 
@@ -267,14 +268,23 @@
 <p class="level1"><a href="ftp://user">ftp://user</a>:password@ftp.example.com//readme.txt - This retrieves the readme.txt from the root directory when logging in as a specified user. 
 <p class="level1"><a class="bold" href="#SMTP">SMTP</a> 
 <p class="level1">The path part of a SMTP request specifies the host name to present during communication with the mail server. If the path is omitted then libcurl will attempt to resolve the local computer's host name. However, this may not return the fully qualified domain name that is required by some mail servers and specifying this path allows you to set an alternative name, such as your machine's fully qualified domain name, which you might have obtained from an external function such as gethostname or getaddrinfo. 
 <p class="level1">smtp://mail.example.com - This connects to the mail server at example.com and sends your local computer's host name in the HELO / EHLO command. 
 <p class="level1">smtp://mail.example.com/client.example.com - This will send client.example.com in the HELO / EHLO command to the mail server at example.com. 
 <p class="level1"><span Class="bold">POP3</span> 
-<p class="level1">The path part of a POP3 request specifies the mailbox (message) to retrieve. If the mailbox is not specified then a list of waiting messages is returned instead. 
-<p class="level1">pop3://user:password@mail.example.com - This lists the available messages pop3://user:password@mail.example.com/1 - This retrieves the first message 
+<p class="level1">The path part of a POP3 request specifies the message ID to retrieve. If the ID is not specified then a list of waiting messages is returned instead. 
+<p class="level1">pop3://user:password@mail.example.com - This lists the available messages for the user 
+<p class="level1">pop3://user:password@mail.example.com/1 - This retrieves the first message for the user 
+<p class="level1"><span Class="bold">IMAP</span> 
+<p class="level1">The path part of an IMAP request not only specifies the mailbox to list (Added in 7.30.0) or select, but can also be used to check the UIDVALIDITY of the mailbox and to specify the UID and SECTION of the message to fetch (Added in 7.30.0). 
+<p class="level1">imap://user:password@mail.example.com - Performs a top level folder list 
+<p class="level1">imap://user:password@mail.example.com/INBOX - Performs a folder list on the user's inbox 
+<p class="level1">imap://user:password@mail.example.com/INBOX/;UID=1 - Selects the user's inbox and fetches message 1 
+<p class="level1">imap://user:password@mail.example.com/INBOX;UIDVALIDITY=50/;UID=2 - Selects the user's inbox, checks the UIDVALIDITY of the mailbox is 50 and fetches message 2 if it is 
+<p class="level1">imap://user:password@mail.example.com/INBOX/;UID=3/;SECTION=TEXT - Selects the user's inbox and fetches message 3 with only the text portion of the message 
+<p class="level1">For more information about the individual components of an IMAP URL please see <a href="http://www.ietf.org/rfc/rfc5092.txt">RFC 5092</a>. 
 <p class="level1"><span Class="bold">SCP</span> 
 <p class="level1">The path part of a SCP request specifies the file to retrieve and from what directory. The file part may not be omitted. The file is taken as an absolute path from the root directory on the server. To specify a path relative to the user's home directory on the server, prepend ~/ to the path portion. If the user name is not embedded in the URL, it can be set with the <a class="emphasis" href="#CURLOPTUSERPWD">CURLOPT_USERPWD</a> or <a class="bold" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> option. 
 <p class="level1">scp://user@example.com/etc/issue - This specifies the file /etc/issue 
 <p class="level1">scp://example.com/~/my-file - This specifies the file my-file in the user's home directory on the server 
 <p class="level1"><span Class="bold">SFTP</span> 
 <p class="level1">The path part of a SFTP request specifies the file to retrieve and from what directory. If the file part is omitted then libcurl downloads the directory listing for the directory specified.  If the path ends in a / then a directory listing is returned instead of a file.  If the path is omitted entirely then the directory listing for the root / home directory will be returned. If the user name is not embedded in the URL, it can be set with the <a class="emphasis" href="#CURLOPTUSERPWD">CURLOPT_USERPWD</a> or <a class="bold" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> option. 
@@ -501,13 +511,13 @@
 <p class="level0"><a name="CURLOPTCOOKIESESSION"></a><span class="nroffip">CURLOPT_COOKIESESSION</span> 
 <p class="level1">Pass a long set to 1 to mark this as a new cookie "session". It will force libcurl to ignore all cookies it is about to load that are "session cookies" from the previous session. By default, libcurl always stores and loads all cookies, independent if they are session cookies or not. Session cookies are cookies without expiry date and they are meant to be alive and existing for this "session" only. 
 <p class="level0"><a name="CURLOPTCOOKIELIST"></a><span class="nroffip">CURLOPT_COOKIELIST</span> 
 <p class="level1">Pass a char * to a cookie string. Cookie can be either in Netscape / Mozilla format or just regular HTTP-style header (Set-Cookie: ...) format. If cURL cookie engine was not enabled it will enable its cookie engine.  Passing a magic string "ALL" will erase all cookies known by cURL. (Added in 7.14.1) Passing the special string "SESS" will only erase all session cookies known by cURL. (Added in 7.15.4) Passing the special string "FLUSH" will write all cookies known by cURL to the file specified by <a class="emphasis" href="#CURLOPTCOOKIEJAR">CURLOPT_COOKIEJAR</a>. (Added in 7.17.1) 
 <p class="level0"><a name="CURLOPTHTTPGET"></a><span class="nroffip">CURLOPT_HTTPGET</span> 
 <p class="level1">Pass a long. If the long is 1, this forces the HTTP request to get back to GET. Usable if a POST, HEAD, PUT, or a custom request has been used previously using the same curl handle. 
-<p class="level1">When setting <a class="emphasis" href="#CURLOPTHTTPGET">CURLOPT_HTTPGET</a> to 1, it will automatically set <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> to 0 (since 7.14.1). 
+<p class="level1">When setting <a class="emphasis" href="#CURLOPTHTTPGET">CURLOPT_HTTPGET</a> to 1, it will automatically set <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> to 0 and <a class="emphasis" href="#CURLOPTUPLOAD">CURLOPT_UPLOAD</a> to 0. 
 <p class="level0"><a name="CURLOPTHTTPVERSION"></a><span class="nroffip">CURLOPT_HTTP_VERSION</span> 
 <p class="level1">Pass a long, set to one of the values described below. They force libcurl to use the specific HTTP versions. This is not sensible to do unless you have a good reason. 
 <p class="level2">
 <p class="level1"><a name="CURLHTTPVERSIONNONE"></a><span class="nroffip">CURL_HTTP_VERSION_NONE</span> 
 <p class="level2">We don't care about what version the library uses. libcurl will use whatever it thinks fit. 
 <p class="level1"><a name="CURLHTTPVERSION10"></a><span class="nroffip">CURL_HTTP_VERSION_1_0</span> 
@@ -515,13 +525,13 @@
 <p class="level1"><a name="CURLHTTPVERSION11"></a><span class="nroffip">CURL_HTTP_VERSION_1_1</span> 
 <p class="level2">Enforce HTTP 1.1 requests. 
 <p class="level1">
 <p class="level0"><a name="CURLOPTIGNORECONTENTLENGTH"></a><span class="nroffip">CURLOPT_IGNORE_CONTENT_LENGTH</span> 
 <p class="level1">Ignore the Content-Length header. This is useful for Apache 1.x (and similar servers) which will report incorrect content length for files over 2 gigabytes. If this option is used, curl will not be able to accurately report progress, and will simply stop the download when the server ends the connection. (added in 7.14.1) 
 <p class="level0"><a name="CURLOPTHTTPCONTENTDECODING"></a><span class="nroffip">CURLOPT_HTTP_CONTENT_DECODING</span> 
-<p class="level1">Pass a long to tell libcurl how to act on content decoding. If set to zero, content decoding will be disabled. If set to 1 it is enabled. Libcurl has no default content decoding but requires you to use <span Class="emphasis">CURLOPT_ENCODING</span> for that. (added in 7.16.2) 
+<p class="level1">Pass a long to tell libcurl how to act on content decoding. If set to zero, content decoding will be disabled. If set to 1 it is enabled. Libcurl has no default content decoding but requires you to use <a class="emphasis" href="#CURLOPTACCEPTENCODING">CURLOPT_ACCEPT_ENCODING</a> for that. (added in 7.16.2) 
 <p class="level0"><a name="CURLOPTHTTPTRANSFERDECODING"></a><span class="nroffip">CURLOPT_HTTP_TRANSFER_DECODING</span> 
 <p class="level1">Pass a long to tell libcurl how to act on transfer decoding. If set to zero, transfer decoding will be disabled, if set to 1 it is enabled (default). libcurl does chunked transfer decoding by default unless this option is set to zero. (added in 7.16.2) <a name="SMTP"></a><h2 class="nroffsh">SMTP OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTMAILFROM"></a><span class="nroffip">CURLOPT_MAIL_FROM</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. This should be used to specify the sender's email address when sending SMTP mail with libcurl. 
 <p class="level1">An originator email address should be specified with angled brackets (&lt;&gt;) around it, which if not specified, will be added by libcurl from version 7.21.4 onwards. Failing to provide such brackets may cause the server to reject the email. 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_easy_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_easy_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_escape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_escape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_formadd.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_formadd.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_formfree.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_formfree.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_formget.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_formget.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_free.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_free.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_free.pdf	2013-02-06 18:08:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_free.pdf	2013-04-12 15:12:55.000000000 +0800
@@ -60,30 +60,30 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:b8c58b2d-a861-11ed-0000-156c038b2dc2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:b8c58b2d-a861-11ed-0000-156c038b2dc2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-02-06T11:08:37+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-02-06T11:08:37+01:00</xmp:CreateDate>
-<xmp:CreatorTool>groff version 1.22.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:b8c58b2d-a861-11ed-0000-156c038b2dc2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:b8c58b2d-a861-11ed-0000-156c038b2dc2'/>
-<rdf:Description rdf:about='uuid:b8c58b2d-a861-11ed-0000-156c038b2dc2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:f21a9b23-db5c-11ed-0000-156c038b2dc2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:f21a9b23-db5c-11ed-0000-156c038b2dc2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-04-12T09:12:55+02:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-04-12T09:12:55+02:00</xmp:CreateDate>
+<xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
+<rdf:Description rdf:about='uuid:f21a9b23-db5c-11ed-0000-156c038b2dc2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:f21a9b23-db5c-11ed-0000-156c038b2dc2'/>
+<rdf:Description rdf:about='uuid:f21a9b23-db5c-11ed-0000-156c038b2dc2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20130206110837+01'00')
-/ModDate(D:20130206110837+01'00')
-/Creator(groff version 1.22.1)>>endobj
+/CreationDate(D:20130412091255+02'00')
+/ModDate(D:20130412091255+02'00')
+/Creator(groff version 1.22.2)>>endobj
 xref
 0 14
 0000000000 65535 f 
 0000000888 00000 n 
 0000002696 00000 n 
 0000000829 00000 n 
@@ -96,11 +96,11 @@
 0000001074 00000 n 
 0000000994 00000 n 
 0000001024 00000 n 
 0000001273 00000 n 
 trailer
 << /Size 14 /Root 1 0 R /Info 2 0 R
-/ID [<0EA3D41182AFB1081715DDEBB3BB91E1><0EA3D41182AFB1081715DDEBB3BB91E1>]
+/ID [<06EC00BF04F6D27D8C045B6938F5DC7B><06EC00BF04F6D27D8C045B6938F5DC7B>]
 >>
 startxref
 2850
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_getdate.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_getdate.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_getenv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_getenv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_cleanup.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_init.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_init.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_init.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_init.3	2013-04-12 02:46:54.000000000 +0800
@@ -53,13 +53,14 @@
 See the description in \fBlibcurl\fP(3) of global environment requirements for
 details of how to use this function.
 
 .SH FLAGS
 .TP 5
 .B CURL_GLOBAL_ALL
-Initialize everything possible. This sets all known bits.
+Initialize everything possible. This sets all known bits except
+\fBCURL_GLOBAL_ACK_EINTR\fP.
 .TP
 .B CURL_GLOBAL_SSL
 Initialize SSL
 .TP
 .B CURL_GLOBAL_WIN32
 Initialize the Win32 socket libraries.
@@ -67,12 +68,16 @@
 .B CURL_GLOBAL_NOTHING
 Initialise nothing extra. This sets no bit.
 .TP
 .B CURL_GLOBAL_DEFAULT
 A sensible default. It will init both SSL and Win32. Right now, this equals
 the functionality of the \fBCURL_GLOBAL_ALL\fP mask.
+.TP
+.B CURL_GLOBAL_ACK_EINTR
+When this flag is set, curl will acknowledge EINTR condition when connecting
+or when waiting for data.  Otherwise, curl waits until full timeout elapses.
 .SH RETURN VALUE
 If this function returns non-zero, something went wrong and you cannot use the
 other curl functions.
 .SH "SEE ALSO"
 .BR curl_global_init_mem "(3), "
 .BR curl_global_cleanup "(3), "
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_init.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_init.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_init.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_init.html	2013-04-12 15:12:52.000000000 +0800
@@ -54,15 +54,16 @@
 <p class="level0">This function must be called at least once within a program (a program is all the code that shares a memory space) before the program calls any other function in libcurl.  The environment it sets up is constant for the life of the program and is the same for every program, so multiple calls have the same effect as one call. 
 <p class="level0">The flags option is a bit pattern that tells libcurl exactly what features to init, as described below. Set the desired bits by ORing the values together. In normal operation, you must specify CURL_GLOBAL_ALL.  Don't use any other value unless you are familiar with it and mean to control internal operations of libcurl. 
 <p class="level0"><span Class="bold">This function is not thread safe.</span> You must not call it when any other thread in the program (i.e. a thread sharing the same memory) is running. This doesn't just mean no other thread that is using libcurl.  Because <span Class="emphasis">curl_global_init()</span> calls functions of other libraries that are similarly thread unsafe, it could conflict with any other thread that uses these other libraries. 
 <p class="level0">See the description in <span Class="bold">libcurl</span>(3) of global environment requirements for details of how to use this function. 
 <p class="level0"><a name="FLAGS"></a><h2 class="nroffsh">FLAGS</h2>
 <p class="level0">
-<p class="level0"><span Class="bold">CURL_GLOBAL_ALL</span> Initialize everything possible. This sets all known bits. 
+<p class="level0"><span Class="bold">CURL_GLOBAL_ALL</span> Initialize everything possible. This sets all known bits except <span Class="bold">CURL_GLOBAL_ACK_EINTR</span>. 
 <p class="level0"><span Class="bold">CURL_GLOBAL_SSL</span> Initialize SSL 
 <p class="level0"><span Class="bold">CURL_GLOBAL_WIN32</span> Initialize the Win32 socket libraries. 
 <p class="level0"><span Class="bold">CURL_GLOBAL_NOTHING</span> Initialise nothing extra. This sets no bit. 
-<p class="level0"><span Class="bold">CURL_GLOBAL_DEFAULT</span> A sensible default. It will init both SSL and Win32. Right now, this equals the functionality of the <span Class="bold">CURL_GLOBAL_ALL</span> mask. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
+<p class="level0"><span Class="bold">CURL_GLOBAL_DEFAULT</span> A sensible default. It will init both SSL and Win32. Right now, this equals the functionality of the <span Class="bold">CURL_GLOBAL_ALL</span> mask. 
+<p class="level0"><span Class="bold">CURL_GLOBAL_ACK_EINTR</span> When this flag is set, curl will acknowledge EINTR condition when connecting or when waiting for data.  Otherwise, curl waits until full timeout elapses. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">If this function returns non-zero, something went wrong and you cannot use the other curl functions. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_global_init_mem.html">curl_global_init_mem (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_global_cleanup.html">curl_global_cleanup (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_easy_init.html">curl_easy_init (3) </a> <a class="manpage" href="./libcurl.html">libcurl (3) </a> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_init_mem.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_init_mem.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_global_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_global_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_mprintf.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_mprintf.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_add_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_add_handle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_assign.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_assign.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_cleanup.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_cleanup.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_cleanup.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_cleanup.3	2013-03-05 18:02:20.000000000 +0800
@@ -38,9 +38,10 @@
 2 - \fIcurl_easy_cleanup(3)\fP can now be called independently since the easy
 handle is no longer connected to the multi handle
 
 3 - \fIcurl_multi_cleanup(3)\fP should be called when all easy handles are
 removed
 .SH RETURN VALUE
-CURLMcode type, general libcurl multi interface error code.
+CURLMcode type, general libcurl multi interface error code. On success,
+CURLM_OK is returned.
 .SH "SEE ALSO"
 .BR curl_multi_init "(3)," curl_easy_cleanup "(3)," curl_easy_init "(3)"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_cleanup.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_cleanup.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_cleanup.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_cleanup.html	2013-04-12 15:12:52.000000000 +0800
@@ -51,10 +51,10 @@
 <p class="level0"><span Class="bold">CURLMcode curl_multi_cleanup( CURLM *multi_handle );</span> 
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">Cleans up and removes a whole multi stack. It does not free or touch any individual easy handles in any way - they still need to be closed individually, using the usual <a class="emphasis" href="./curl_easy_cleanup.html">curl_easy_cleanup(3)</a> way. The order of cleaning up should be: 
 <p class="level0">1 - <a class="emphasis" href="./curl_multi_remove_handle.html">curl_multi_remove_handle(3)</a> before any easy handles are cleaned up 
 <p class="level0">2 - <a class="emphasis" href="./curl_easy_cleanup.html">curl_easy_cleanup(3)</a> can now be called independently since the easy handle is no longer connected to the multi handle 
 <p class="level0">3 - <a class="emphasis" href="./curl_multi_cleanup.html">curl_multi_cleanup(3)</a> should be called when all easy handles are removed <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
-<p class="level0">CURLMcode type, general libcurl multi interface error code. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
+<p class="level0">CURLMcode type, general libcurl multi interface error code. On success, CURLM_OK is returned. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_multi_init.html">curl_multi_init (3)</a> <a class="manpage" href="./curl_easy_cleanup.html"> curl_easy_cleanup (3)</a> <a class="manpage" href="./curl_easy_init.html"> curl_easy_init (3)</a> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_fdset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_fdset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_info_read.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_info_read.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_remove_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_remove_handle.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_setopt.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_setopt.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_setopt.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_setopt.3	2013-04-12 02:46:54.000000000 +0800
@@ -46,32 +46,35 @@
 time a \fIcurl_multi_socket(3)\fP function was called. If the given callback
 pointer is NULL, no callback will be called. Set the callback's \fBuserp\fP
 argument with \fICURLMOPT_SOCKETDATA\fP.  See \fIcurl_multi_socket(3)\fP for
 more callback details.
 .IP CURLMOPT_SOCKETDATA
 Pass a pointer to whatever you want passed to the \fBcurl_socket_callback\fP's
-forth argument, the userp pointer. This is not used by libcurl but only
+fourth argument, the userp pointer. This is not used by libcurl but only
 passed-thru as-is. Set the callback pointer with
 \fICURLMOPT_SOCKETFUNCTION\fP.
 .IP CURLMOPT_PIPELINING
 Pass a long set to 1 to enable or 0 to disable. Enabling pipelining on a multi
 handle will make it attempt to perform HTTP Pipelining as far as possible for
 transfers using this handle. This means that if you add a second request that
 can use an already existing connection, the second request will be \&"piped"
 on the same connection rather than being executed in parallel. (Added in
 7.16.0)
 .IP CURLMOPT_TIMERFUNCTION
 Pass a pointer to a function matching the \fBcurl_multi_timer_callback\fP
-prototype.  This function will then be called when the timeout value
+prototype: int curl_multi_timer_callback(CURLM *multi /* multi handle */,
+long timeout_ms /* timeout in milliseconds */, void *userp /* TIMERDATA */).
+This function will then be called when the timeout value
 changes. The timeout value is at what latest time the application should call
 one of the \&"performing" functions of the multi interface
 (\fIcurl_multi_socket_action(3)\fP and \fIcurl_multi_perform(3)\fP) - to allow
 libcurl to keep timeouts and retries etc to work. A timeout value of -1 means
 that there is no timeout at all, and 0 means that the timeout is already
 reached. Libcurl attempts to limit calling this only when the fixed future
-timeout time actually changes. See also \fICURLMOPT_TIMERDATA\fP. This
+timeout time actually changes. See also \fICURLMOPT_TIMERDATA\fP. The callback
+should return 0 on success, and -1 on error. This
 callback can be used instead of, or in addition to,
 \fIcurl_multi_timeout(3)\fP. (Added in 7.16.0)
 .IP CURLMOPT_TIMERDATA
 Pass a pointer to whatever you want passed to the
 \fBcurl_multi_timer_callback\fP's third argument, the userp pointer.  This is
 not used by libcurl but only passed-thru as-is. Set the callback pointer with
@@ -89,12 +92,118 @@
 number of open connections from increasing.
 
 This option is for the multi handle's use only, when using the easy interface
 you should instead use the \fICURLOPT_MAXCONNECTS\fP option.
 
 (Added in 7.16.3)
+.IP CURLMOPT_MAX_HOST_CONNECTIONS
+Pass a long. The set number will be used as the maximum amount of
+simultaneously open connections to a single host. For each new session to
+a host, libcurl will open a new connection up to the limit set by
+CURLMOPT_MAX_HOST_CONNECTIONS. When the limit is reached, the sessions will
+be pending until there are available connections. If CURLMOPT_PIPELINING is
+1, libcurl will try to pipeline if the host is capable of it.
+
+The default value is 0, which means that there is no limit.
+However, for backwards compatibility, setting it to 0 when CURLMOPT_PIPELINING
+is 1 will not be treated as unlimited. Instead it will open only 1 connection
+and try to pipeline on it.
+
+(Added in 7.30.0)
+.IP CURLMOPT_MAX_PIPELINE_LENGTH
+Pass a long. The set number will be used as the maximum amount of requests
+in a pipelined connection. When this limit is reached, libcurl will use another
+connection to the same host (see CURLMOPT_MAX_HOST_CONNECTIONS), or queue the
+requests until one of the pipelines to the host is ready to accept a request.
+Thus, the total number of requests in-flight is CURLMOPT_MAX_HOST_CONNECTIONS *
+CURLMOPT_MAX_PIPELINE_LENGTH.
+The default value is 5.
+
+(Added in 7.30.0)
+.IP CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE
+Pass a long. If a pipelined connection is currently processing a request
+with a Content-Length larger than CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE, that
+connection will not be considered for additional requests, even if it is
+shorter than CURLMOPT_MAX_PIPELINE_LENGTH.
+The default value is 0, which means that the penalization is inactive.
+
+(Added in 7.30.0)
+.IP CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE
+Pass a long. If a pipelined connection is currently processing a
+chunked (Transfer-encoding: chunked) request with a current chunk length
+larger than CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE, that connection will not be
+considered for additional requests, even if it is shorter than
+CURLMOPT_MAX_PIPELINE_LENGTH.
+The default value is 0, which means that the penalization is inactive.
+
+(Added in 7.30.0)
+.IP CURLMOPT_PIPELINING_SITE_BL
+Pass an array of char *, ending with NULL. This is a list of sites that are
+blacklisted from pipelining, i.e sites that are known to not support HTTP
+pipelining. The array is copied by libcurl.
+
+The default value is NULL, which means that there is no blacklist.
+
+Pass a NULL pointer to clear the blacklist.
+
+Example:
+
+.nf
+  site_blacklist[] =
+  {
+    "www.haxx.se",
+    "www.example.com:1234",
+    NULL
+  };
+
+  curl_multi_setopt(m, CURLMOPT_PIPELINE_SITE_BL, site_blacklist);
+.fi
+
+(Added in 7.30.0)
+.IP CURLMOPT_PIPELINING_SERVER_BL
+Pass an array of char *, ending with NULL. This is a list of server types
+prefixes (in the Server: HTTP header) that are blacklisted from pipelining,
+i.e server types that are known to not support HTTP pipelining. The array is
+copied by libcurl.
+
+Note that the comparison matches if the Server: header begins with the string
+in the blacklist, i.e "Server: Ninja 1.2.3" and "Server: Ninja 1.4.0" can 
+both be blacklisted by having "Ninja" in the backlist.
+
+The default value is NULL, which means that there is no blacklist.
+
+Pass a NULL pointer to clear the blacklist.
+
+Example:
+
+.nf
+  server_blacklist[] =
+  {
+    "Microsoft-IIS/6.0",
+    "nginx/0.8.54",
+    NULL
+  };
+
+  curl_multi_setopt(m, CURLMOPT_PIPELINE_SERVER_BL, server_blacklist);
+.fi
+
+(Added in 7.30.0)
+.IP CURLMOPT_MAX_TOTAL_CONNECTIONS
+Pass a long. The set number will be used as the maximum amount of
+simultaneously open connections in total. For each new session, libcurl
+will open a new connection up to the limit set by
+CURLMOPT_MAX_TOTAL_CONNECTIONS. When the limit is reached, the sessions will
+be pending until there are available connections. If CURLMOPT_PIPELINING is
+1, libcurl will try to pipeline if the host is capable of it.
+
+The default value is 0, which means that there is no limit.
+However, for backwards compatibility, setting it to 0 when CURLMOPT_PIPELINING
+is 1 will not be treated as unlimited. Instead it will open only 1 connection
+and try to pipeline on it.
+
+(Added in 7.30.0)
 .SH RETURNS
 The standard CURLMcode for multi interface error codes. Note that it returns a
 CURLM_UNKNOWN_OPTION if you try setting an option that this version of libcurl
 doesn't know of.
 .SH AVAILABILITY
 This function was added in libcurl 7.15.4.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_setopt.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_setopt.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_setopt.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_setopt.html	2013-04-12 15:12:52.000000000 +0800
@@ -52,24 +52,62 @@
 <p class="level0">curl_multi_setopt() is used to tell a libcurl multi handle how to behave. By using the appropriate options to <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a>, you can change libcurl's behaviour when using that multi handle.  All options are set with the <span Class="emphasis">option</span> followed by the parameter <span Class="emphasis">param</span>. That parameter can be a <span Class="bold">long</span>, a <span Class="bold">function pointer</span>, an <span Class="bold">object pointer</span> or a <span Class="bold">curl_off_t</span> type, depending on what the specific option expects. Read this manual carefully as bad input values may cause libcurl to behave badly! You can only set one option in each function call. 
 <p class="level0"><a name="OPTIONS"></a><h2 class="nroffsh">OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLMOPTSOCKETFUNCTION"></a><span class="nroffip">CURLMOPT_SOCKETFUNCTION</span> 
 <p class="level1">Pass a pointer to a function matching the <span Class="bold">curl_socket_callback</span> prototype. The <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> function informs the application about updates in the socket (file descriptor) status by doing none, one, or multiple calls to the curl_socket_callback given in the <span Class="bold">param</span> argument. They update the status with changes since the previous time a <a class="emphasis" href="./curl_multi_socket.html">curl_multi_socket(3)</a> function was called. If the given callback pointer is NULL, no callback will be called. Set the callback's <span Class="bold">userp</span> argument with <a class="emphasis" href="#CURLMOPTSOCKETDATA">CURLMOPT_SOCKETDATA</a>.  See <a class="emphasis" href="./curl_multi_socket.html">curl_multi_socket(3)</a> for more callback details. 
 <p class="level0"><a name="CURLMOPTSOCKETDATA"></a><span class="nroffip">CURLMOPT_SOCKETDATA</span> 
-<p class="level1">Pass a pointer to whatever you want passed to the <span Class="bold">curl_socket_callback</span>'s forth argument, the userp pointer. This is not used by libcurl but only passed-thru as-is. Set the callback pointer with <a class="emphasis" href="#CURLMOPTSOCKETFUNCTION">CURLMOPT_SOCKETFUNCTION</a>. 
+<p class="level1">Pass a pointer to whatever you want passed to the <span Class="bold">curl_socket_callback</span>'s fourth argument, the userp pointer. This is not used by libcurl but only passed-thru as-is. Set the callback pointer with <a class="emphasis" href="#CURLMOPTSOCKETFUNCTION">CURLMOPT_SOCKETFUNCTION</a>. 
 <p class="level0"><a name="CURLMOPTPIPELINING"></a><span class="nroffip">CURLMOPT_PIPELINING</span> 
 <p class="level1">Pass a long set to 1 to enable or 0 to disable. Enabling pipelining on a multi handle will make it attempt to perform HTTP Pipelining as far as possible for transfers using this handle. This means that if you add a second request that can use an already existing connection, the second request will be "piped" on the same connection rather than being executed in parallel. (Added in 7.16.0) 
 <p class="level0"><a name="CURLMOPTTIMERFUNCTION"></a><span class="nroffip">CURLMOPT_TIMERFUNCTION</span> 
-<p class="level1">Pass a pointer to a function matching the <span Class="bold">curl_multi_timer_callback</span> prototype.  This function will then be called when the timeout value changes. The timeout value is at what latest time the application should call one of the "performing" functions of the multi interface (<a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> and <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a>) - to allow libcurl to keep timeouts and retries etc to work. A timeout value of -1 means that there is no timeout at all, and 0 means that the timeout is already reached. Libcurl attempts to limit calling this only when the fixed future timeout time actually changes. See also <a class="emphasis" href="#CURLMOPTTIMERDATA">CURLMOPT_TIMERDATA</a>. This callback can be used instead of, or in addition to, <a class="emphasis" href="./curl_multi_timeout.html">curl_multi_timeout(3)</a>. (Added in 7.16.0) 
+<p class="level1">Pass a pointer to a function matching the <span Class="bold">curl_multi_timer_callback</span> prototype: int curl_multi_timer_callback(CURLM *multi /* multi handle */, long timeout_ms /* timeout in milliseconds */, void *userp /* TIMERDATA */). This function will then be called when the timeout value changes. The timeout value is at what latest time the application should call one of the "performing" functions of the multi interface (<a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> and <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a>) - to allow libcurl to keep timeouts and retries etc to work. A timeout value of -1 means that there is no timeout at all, and 0 means that the timeout is already reached. Libcurl attempts to limit calling this only when the fixed future timeout time actually changes. See also <a class="emphasis" href="#CURLMOPTTIMERDATA">CURLMOPT_TIMERDATA</a>. The callback should return 0 on success, and -1 on error. This callback can be used instead of, or in addition to, <a class="emphasis" href="./curl_multi_timeout.html">curl_multi_timeout(3)</a>. (Added in 7.16.0) 
 <p class="level0"><a name="CURLMOPTTIMERDATA"></a><span class="nroffip">CURLMOPT_TIMERDATA</span> 
 <p class="level1">Pass a pointer to whatever you want passed to the <span Class="bold">curl_multi_timer_callback</span>'s third argument, the userp pointer.  This is not used by libcurl but only passed-thru as-is. Set the callback pointer with <a class="emphasis" href="#CURLMOPTTIMERFUNCTION">CURLMOPT_TIMERFUNCTION</a>. (Added in 7.16.0) 
 <p class="level0"><a name="CURLMOPTMAXCONNECTS"></a><span class="nroffip">CURLMOPT_MAXCONNECTS</span> 
 <p class="level1">Pass a long. The set number will be used as the maximum amount of simultaneously open connections that libcurl may cache. Default is 10, and libcurl will enlarge the size for each added easy handle to make it fit 4 times the number of added easy handles. 
 <p class="level1">By setting this option, you can prevent the cache size from growing beyond the limit set by you. 
 <p class="level1">When the cache is full, curl closes the oldest one in the cache to prevent the number of open connections from increasing. 
 <p class="level1">This option is for the multi handle's use only, when using the easy interface you should instead use the <span Class="emphasis">CURLOPT_MAXCONNECTS</span> option. 
-<p class="level1">(Added in 7.16.3) <a name="RETURNS"></a><h2 class="nroffsh">RETURNS</h2>
+<p class="level1">(Added in 7.16.3) 
+<p class="level0"><a name="CURLMOPTMAXHOSTCONNECTIONS"></a><span class="nroffip">CURLMOPT_MAX_HOST_CONNECTIONS</span> 
+<p class="level1">Pass a long. The set number will be used as the maximum amount of simultaneously open connections to a single host. For each new session to a host, libcurl will open a new connection up to the limit set by CURLMOPT_MAX_HOST_CONNECTIONS. When the limit is reached, the sessions will be pending until there are available connections. If CURLMOPT_PIPELINING is 1, libcurl will try to pipeline if the host is capable of it. 
+<p class="level1">The default value is 0, which means that there is no limit. However, for backwards compatibility, setting it to 0 when CURLMOPT_PIPELINING is 1 will not be treated as unlimited. Instead it will open only 1 connection and try to pipeline on it. 
+<p class="level1">(Added in 7.30.0) 
+<p class="level0"><a name="CURLMOPTMAXPIPELINELENGTH"></a><span class="nroffip">CURLMOPT_MAX_PIPELINE_LENGTH</span> 
+<p class="level1">Pass a long. The set number will be used as the maximum amount of requests in a pipelined connection. When this limit is reached, libcurl will use another connection to the same host (see CURLMOPT_MAX_HOST_CONNECTIONS), or queue the requests until one of the pipelines to the host is ready to accept a request. Thus, the total number of requests in-flight is CURLMOPT_MAX_HOST_CONNECTIONS * CURLMOPT_MAX_PIPELINE_LENGTH. The default value is 5. 
+<p class="level1">(Added in 7.30.0) 
+<p class="level0"><a name="CURLMOPTCONTENTLENGTHPENALTYSIZE"></a><span class="nroffip">CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</span> 
+<p class="level1">Pass a long. If a pipelined connection is currently processing a request with a Content-Length larger than CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE, that connection will not be considered for additional requests, even if it is shorter than CURLMOPT_MAX_PIPELINE_LENGTH. The default value is 0, which means that the penalization is inactive. 
+<p class="level1">(Added in 7.30.0) 
+<p class="level0"><a name="CURLMOPTCHUNKLENGTHPENALTYSIZE"></a><span class="nroffip">CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</span> 
+<p class="level1">Pass a long. If a pipelined connection is currently processing a chunked (Transfer-encoding: chunked) request with a current chunk length larger than CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE, that connection will not be considered for additional requests, even if it is shorter than CURLMOPT_MAX_PIPELINE_LENGTH. The default value is 0, which means that the penalization is inactive. 
+<p class="level1">(Added in 7.30.0) 
+<p class="level0"><a name="CURLMOPTPIPELININGSITEBL"></a><span class="nroffip">CURLMOPT_PIPELINING_SITE_BL</span> 
+<p class="level1">Pass an array of char *, ending with NULL. This is a list of sites that are blacklisted from pipelining, i.e sites that are known to not support HTTP pipelining. The array is copied by libcurl. 
+<p class="level1">The default value is NULL, which means that there is no blacklist. 
+<p class="level1">Pass a NULL pointer to clear the blacklist. 
+<p class="level1">Example: 
+<p class="level1">
+<p class="level1">&nbsp; site_blacklist[] = &nbsp; { &nbsp;   "www.haxx.se", &nbsp;   "www.example.com:1234", &nbsp;   NULL &nbsp; }; 
+<p class="level1">&nbsp; curl_multi_setopt(m, CURLMOPT_PIPELINE_SITE_BL, site_blacklist); 
+<p class="level1">
+<p class="level1">(Added in 7.30.0) 
+<p class="level0"><a name="CURLMOPTPIPELININGSERVERBL"></a><span class="nroffip">CURLMOPT_PIPELINING_SERVER_BL</span> 
+<p class="level1">Pass an array of char *, ending with NULL. This is a list of server types prefixes (in the Server: HTTP header) that are blacklisted from pipelining, i.e server types that are known to not support HTTP pipelining. The array is copied by libcurl. 
+<p class="level1">Note that the comparison matches if the Server: header begins with the string in the blacklist, i.e "Server: Ninja 1.2.3" and "Server: Ninja 1.4.0" can  both be blacklisted by having "Ninja" in the backlist. 
+<p class="level1">The default value is NULL, which means that there is no blacklist. 
+<p class="level1">Pass a NULL pointer to clear the blacklist. 
+<p class="level1">Example: 
+<p class="level1">
+<p class="level1">&nbsp; server_blacklist[] = &nbsp; { &nbsp;   "Microsoft-IIS/6.0", &nbsp;   "nginx/0.8.54", &nbsp;   NULL &nbsp; }; 
+<p class="level1">&nbsp; curl_multi_setopt(m, CURLMOPT_PIPELINE_SERVER_BL, server_blacklist); 
+<p class="level1">
+<p class="level1">(Added in 7.30.0) 
+<p class="level0"><a name="CURLMOPTMAXTOTALCONNECTIONS"></a><span class="nroffip">CURLMOPT_MAX_TOTAL_CONNECTIONS</span> 
+<p class="level1">Pass a long. The set number will be used as the maximum amount of simultaneously open connections in total. For each new session, libcurl will open a new connection up to the limit set by CURLMOPT_MAX_TOTAL_CONNECTIONS. When the limit is reached, the sessions will be pending until there are available connections. If CURLMOPT_PIPELINING is 1, libcurl will try to pipeline if the host is capable of it. 
+<p class="level1">The default value is 0, which means that there is no limit. However, for backwards compatibility, setting it to 0 when CURLMOPT_PIPELINING is 1 will not be treated as unlimited. Instead it will open only 1 connection and try to pipeline on it. 
+<p class="level1">(Added in 7.30.0) <a name="RETURNS"></a><h2 class="nroffsh">RETURNS</h2>
 <p class="level0">The standard CURLMcode for multi interface error codes. Note that it returns a CURLM_UNKNOWN_OPTION if you try setting an option that this version of libcurl doesn't know of. <a name="AVAILABILITY"></a><h2 class="nroffsh">AVAILABILITY</h2>
 <p class="level0">This function was added in libcurl 7.15.4. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_multi_cleanup.html">curl_multi_cleanup (3)</a> <a class="manpage" href="./curl_multi_init.html">  curl_multi_init (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_multi_socket.html">curl_multi_socket (3)</a> <a class="manpage" href="./curl_multi_info_read.html">  curl_multi_info_read (3)</a> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_setopt.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_socket_action.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_socket_action.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_socket_action.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_socket_action.3	2013-03-05 18:02:20.000000000 +0800
@@ -35,13 +35,15 @@
 should call \fIcurl_multi_socket_action(3)\fP with the \fBsockfd\fP argument
 set to the socket with the action. When the events on a socket are known, they
 can be passed as an events bitmask \fBev_bitmask\fP by first setting
 \fBev_bitmask\fP to 0, and then adding using bitwise OR (|) any combination of
 events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or
 CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and
-libcurl will test the descriptor internally.
+libcurl will test the descriptor internally. It is also permissible to pass
+CURL_SOCKET_TIMEOUT to the \fBsockfd\fP parameter in order to initiate the
+whole process or when a timeout occurs.
 
 At return, the integer \fBrunning_handles\fP points to will contain the number
 of running easy handles within the multi handle. When this number reaches
 zero, all transfers are complete/done. When you call
 \fIcurl_multi_socket_action(3)\fP on a specific socket and the counter
 decreases by one, it DOES NOT necessarily mean that this exact socket/transfer
@@ -68,13 +70,16 @@
 .nf
 
   int curl_socket_callback(CURL *easy,      /* easy handle */
                            curl_socket_t s, /* socket */
                            int action,      /* see values below */
                            void *userp,    /* private callback pointer */
-                           void *socketp); /* private socket pointer */
+                           void *socketp); /* private socket pointer,
+                                              \fBNULL\fI if not
+                                              previously assigned with
+                                              \fIcurl_multi_assign(3)\fP */
 
 .fi
 The callback MUST return 0.
 
 The \fIeasy\fP argument is a pointer to the easy handle that deals with this
 particular socket. Note that a single handle may work with several sockets
@@ -129,21 +134,21 @@
 4. Add easy handles with curl_multi_add_handle()
 
 5. Provide some means to manage the sockets libcurl is using, so you can check
 them for activity. This can be done through your application code, or by way
 of an external library such as libevent or glib.
 
-6. Call curl_multi_socket_action(...CURL_SOCKET_TIMEOUT...) to kickstart
-everything. To get one or more callbacks called.
+6. Call curl_multi_socket_action(..., CURL_SOCKET_TIMEOUT, 0, ...)
+to kickstart everything. To get one or more callbacks called.
 
 7. Wait for activity on any of libcurl's sockets, use the timeout value your
-callback has been told
+callback has been told.
 
 8, When activity is detected, call curl_multi_socket_action() for the
 socket(s) that got action. If no activity is detected and the timeout expires,
-call \fIcurl_multi_socket_action(3)\fP with \fICURL_SOCKET_TIMEOUT\fP
+call \fIcurl_multi_socket_action(3)\fP with \fICURL_SOCKET_TIMEOUT\fP.
 .SH AVAILABILITY
 This function was added in libcurl 7.15.4, and is deemed stable since 7.16.0.
 .SH "SEE ALSO"
 .BR curl_multi_cleanup "(3), " curl_multi_init "(3), "
 .BR curl_multi_fdset "(3), " curl_multi_info_read "(3), "
 .BR "the hiperfifo.c example"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_socket_action.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_socket_action.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_socket_action.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_socket_action.html	2013-04-12 15:12:52.000000000 +0800
@@ -48,20 +48,20 @@
 <p class="level0"><a name="NAME"></a><h2 class="nroffsh">NAME</h2>
 <p class="level0">curl_multi_socket_action - reads/writes available data given an action <a name="SYNOPSIS"></a><h2 class="nroffsh">SYNOPSIS</h2>
 <p class="level0">
 <p class="level0">#include &lt;curl/curl.h&gt; 
 <p class="level0">CURLMcode curl_multi_socket_action(CURLM * multi_handle, &nbsp;                                  curl_socket_t sockfd, int ev_bitmask, &nbsp;                                  int *running_handles); 
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
-<p class="level0">When the application has detected action on a socket handled by libcurl, it should call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> with the <span Class="bold">sockfd</span> argument set to the socket with the action. When the events on a socket are known, they can be passed as an events bitmask <span Class="bold">ev_bitmask</span> by first setting <span Class="bold">ev_bitmask</span> to 0, and then adding using bitwise OR (|) any combination of events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and libcurl will test the descriptor internally. 
+<p class="level0">When the application has detected action on a socket handled by libcurl, it should call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> with the <span Class="bold">sockfd</span> argument set to the socket with the action. When the events on a socket are known, they can be passed as an events bitmask <span Class="bold">ev_bitmask</span> by first setting <span Class="bold">ev_bitmask</span> to 0, and then adding using bitwise OR (|) any combination of events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and libcurl will test the descriptor internally. It is also permissible to pass CURL_SOCKET_TIMEOUT to the <span Class="bold">sockfd</span> parameter in order to initiate the whole process or when a timeout occurs. 
 <p class="level0">At return, the integer <span Class="bold">running_handles</span> points to will contain the number of running easy handles within the multi handle. When this number reaches zero, all transfers are complete/done. When you call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> on a specific socket and the counter decreases by one, it DOES NOT necessarily mean that this exact socket/transfer is the one that completed. Use <a class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read(3)</a> to figure out which easy handle that completed. 
 <p class="level0">The <a class="bold" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> functions inform the application about updates in the socket (file descriptor) status by doing none, one, or multiple calls to the socket callback function set with the CURLMOPT_SOCKETFUNCTION option to <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a>. They update the status with changes since the previous time the callback was called. 
 <p class="level0">Get the timeout time by setting the <span Class="emphasis">CURLMOPT_TIMERFUNCTION</span> option with <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a>. Your application will then get called with information on how long to wait for socket actions at most before doing the timeout action: call the <a class="bold" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> function with the <span Class="bold">sockfd</span> argument set to CURL_SOCKET_TIMEOUT. You can also use the <a class="emphasis" href="./curl_multi_timeout.html">curl_multi_timeout(3)</a> function to poll the value at any given time, but for an event-based system using the callback is far better than relying on polling the timeout value. <a name="CALLBACK"></a><h2 class="nroffsh">CALLBACK DETAILS</h2>
 <p class="level0">
 <p class="level0">The socket <span Class="bold">callback</span> function uses a prototype like this 
 <p class="level0">
-<p class="level0">&nbsp; int curl_socket_callback(CURL *easy,      /* easy handle */ &nbsp;                          curl_socket_t s, /* socket */ &nbsp;                          int action,      /* see values below */ &nbsp;                          void *userp,    /* private callback pointer */ &nbsp;                          void *socketp); /* private socket pointer */ 
+<p class="level0">&nbsp; int curl_socket_callback(CURL *easy,      /* easy handle */ &nbsp;                          curl_socket_t s, /* socket */ &nbsp;                          int action,      /* see values below */ &nbsp;                          void *userp,    /* private callback pointer */ &nbsp;                          void *socketp); /* private socket pointer, &nbsp;                                             <span class="bold">NULL<span class="emphasis"> if not &nbsp;                                             previously assigned with &nbsp;                                             <a class="emphasis" href="./curl_multi_assign.html">curl_multi_assign(3)</a> */ 
 <p class="level0">
 <p class="level0">The callback MUST return 0. 
 <p class="level0">The <span Class="emphasis">easy</span> argument is a pointer to the easy handle that deals with this particular socket. Note that a single handle may work with several sockets simultaneously. 
 <p class="level0">The <span Class="emphasis">s</span> argument is the actual socket value as you use it within your system. 
 <p class="level0">The <span Class="emphasis">action</span> argument to the callback has one of five values: 
 <p class="level1">
@@ -83,13 +83,13 @@
 <p class="level0">The return code from this function is for the whole multi stack.  Problems still might have occurred on individual transfers even when one of these functions return OK. <a name="TYPICAL"></a><h2 class="nroffsh">TYPICAL USAGE</h2>
 <p class="level0">1. Create a multi handle 
 <p class="level0">2. Set the socket callback with CURLMOPT_SOCKETFUNCTION 
 <p class="level0">3. Set the timeout callback with CURLMOPT_TIMERFUNCTION, to get to know what timeout value to use when waiting for socket activities. 
 <p class="level0">4. Add easy handles with curl_multi_add_handle() 
 <p class="level0">5. Provide some means to manage the sockets libcurl is using, so you can check them for activity. This can be done through your application code, or by way of an external library such as libevent or glib. 
-<p class="level0">6. Call curl_multi_socket_action(...CURL_SOCKET_TIMEOUT...) to kickstart everything. To get one or more callbacks called. 
-<p class="level0">7. Wait for activity on any of libcurl's sockets, use the timeout value your callback has been told 
-<p class="level0">8, When activity is detected, call curl_multi_socket_action() for the socket(s) that got action. If no activity is detected and the timeout expires, call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> with <span Class="emphasis">CURL_SOCKET_TIMEOUT</span> <a name="AVAILABILITY"></a><h2 class="nroffsh">AVAILABILITY</h2>
+<p class="level0">6. Call curl_multi_socket_action(..., CURL_SOCKET_TIMEOUT, 0, ...) to kickstart everything. To get one or more callbacks called. 
+<p class="level0">7. Wait for activity on any of libcurl's sockets, use the timeout value your callback has been told. 
+<p class="level0">8, When activity is detected, call curl_multi_socket_action() for the socket(s) that got action. If no activity is detected and the timeout expires, call <a class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> with <span Class="emphasis">CURL_SOCKET_TIMEOUT</span>. <a name="AVAILABILITY"></a><h2 class="nroffsh">AVAILABILITY</h2>
 <p class="level0">This function was added in libcurl 7.15.4, and is deemed stable since 7.16.0. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_multi_cleanup.html">curl_multi_cleanup (3)</a> <a class="manpage" href="./curl_multi_init.html">  curl_multi_init (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_multi_fdset.html">curl_multi_fdset (3)</a> <a class="manpage" href="./curl_multi_info_read.html">  curl_multi_info_read (3)</a> <span Class="manpage"> </span> <span Class="manpage">the hiperfifo.c example</span> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_socket_action.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_socket_action.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_socket.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_socket.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_strerror.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_timeout.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_timeout.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_timeout.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_timeout.3	2013-03-05 18:02:20.000000000 +0800
@@ -39,13 +39,13 @@
 
 The timeout value returned in the long \fBtimeout\fP points to, is in number
 of milliseconds at this very moment. If 0, it means you should proceed
 immediately without waiting for anything. If it returns -1, there's no timeout
 at all set.
 
-An application that uses the multi_socket API SHOULD not use this function, but
+An application that uses the multi_socket API SHOULD NOT use this function, but
 SHOULD instead use \fIcurl_multi_setopt(3)\fP and its
 \fPCURLMOPT_TIMERFUNCTION\fP option for proper and desired behavior.
 
 Note: if libcurl returns a -1 timeout here, it just means that libcurl
 currently has no stored timeout value. You must not wait too long (more than a
 few seconds perhaps) before you call curl_multi_perform() again.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_timeout.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_timeout.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_timeout.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_timeout.html	2013-04-12 15:12:52.000000000 +0800
@@ -50,13 +50,13 @@
 <p class="level0">#include &lt;curl/curl.h&gt; 
 <p class="level0">CURLMcode curl_multi_timeout(CURLM *multi_handle, long *timeout); <a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">
 <p class="level0">An application using the libcurl multi interface should call <a class="bold" href="./curl_multi_timeout.html">curl_multi_timeout(3)</a> to figure out how long it should wait for socket actions - at most - before proceeding. 
 <p class="level0">Proceeding means either doing the socket-style timeout action: call the <a class="bold" href="./curl_multi_socket_action.html">curl_multi_socket_action(3)</a> function with the <span Class="bold">sockfd</span> argument set to CURL_SOCKET_TIMEOUT, or call <a class="bold" href="./curl_multi_perform.html">curl_multi_perform(3)</a> if you're using the simpler and older multi interface approach. 
 <p class="level0">The timeout value returned in the long <span Class="bold">timeout</span> points to, is in number of milliseconds at this very moment. If 0, it means you should proceed immediately without waiting for anything. If it returns -1, there's no timeout at all set. 
-<p class="level0">An application that uses the multi_socket API SHOULD not use this function, but SHOULD instead use <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a> and its </span>CURLMOPT_TIMERFUNCTION</span> option for proper and desired behavior. 
+<p class="level0">An application that uses the multi_socket API SHOULD NOT use this function, but SHOULD instead use <a class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt(3)</a> and its </span>CURLMOPT_TIMERFUNCTION</span> option for proper and desired behavior. 
 <p class="level0">Note: if libcurl returns a -1 timeout here, it just means that libcurl currently has no stored timeout value. You must not wait too long (more than a few seconds perhaps) before you call curl_multi_perform() again. <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">The standard CURLMcode for multi interface error codes. <a name="TYPICAL"></a><h2 class="nroffsh">TYPICAL USAGE</h2>
 <p class="level0">Call <a class="bold" href="./curl_multi_timeout.html">curl_multi_timeout(3)</a>, then wait for action on the sockets. You figure out which sockets to wait for by calling <a class="bold" href="./curl_multi_fdset.html">curl_multi_fdset(3)</a> or by a previous call to <a class="bold" href="./curl_multi_socket.html">curl_multi_socket(3)</a>. <a name="AVAILABILITY"></a><h2 class="nroffsh">AVAILABILITY</h2>
 <p class="level0">This function was added in libcurl 7.15.4. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_multi_fdset.html">curl_multi_fdset (3)</a> <a class="manpage" href="./curl_multi_info_read.html">  curl_multi_info_read (3)</a> <span Class="manpage"> </span> <a class="manpage" href="./curl_multi_socket.html">curl_multi_socket (3)</a> <a class="manpage" href="./curl_multi_setopt.html">  curl_multi_setopt (3) </a> 
 <p class="level0"><p class="roffit">
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_timeout.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_timeout.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_multi_wait.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_multi_wait.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_share_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_share_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_share_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_share_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_share_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_share_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_share_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_share_strerror.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_slist_append.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_slist_append.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_slist_append.pdf	2013-02-06 18:08:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_slist_append.pdf	2013-04-12 15:12:54.000000000 +0800
@@ -69,30 +69,30 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-b52b3dcd9ad6' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-b52b3dcd9ad6' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-02-06T11:08:36+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-02-06T11:08:36+01:00</xmp:CreateDate>
-<xmp:CreatorTool>groff version 1.22.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-b52b3dcd9ad6' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:b82cf4ad-a861-11ed-0000-b52b3dcd9ad6'/>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-b52b3dcd9ad6' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-b52b3dcd9ad6' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-b52b3dcd9ad6' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-04-12T09:12:54+02:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-04-12T09:12:54+02:00</xmp:CreateDate>
+<xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-b52b3dcd9ad6' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:f18204a3-db5c-11ed-0000-b52b3dcd9ad6'/>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-b52b3dcd9ad6' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20130206110836+01'00')
-/ModDate(D:20130206110836+01'00')
-/Creator(groff version 1.22.1)>>endobj
+/CreationDate(D:20130412091254+02'00')
+/ModDate(D:20130412091254+02'00')
+/Creator(groff version 1.22.2)>>endobj
 xref
 0 15
 0000000000 65535 f 
 0000001330 00000 n 
 0000003210 00000 n 
 0000001271 00000 n 
@@ -106,11 +106,11 @@
 0000001436 00000 n 
 0000001466 00000 n 
 0000001731 00000 n 
 0000001787 00000 n 
 trailer
 << /Size 15 /Root 1 0 R /Info 2 0 R
-/ID [<6C32F323F7F9DE703BF4C77DA956A37A><6C32F323F7F9DE703BF4C77DA956A37A>]
+/ID [<208A0A18A816F8E87B954E9DF5D7A1AE><208A0A18A816F8E87B954E9DF5D7A1AE>]
 >>
 startxref
 3364
 %%EOF
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_slist_free_all.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_slist_free_all.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_slist_free_all.pdf	2013-02-06 18:08:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_slist_free_all.pdf	2013-04-12 15:12:54.000000000 +0800
@@ -59,30 +59,30 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-224f381b10d2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-224f381b10d2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-02-06T11:08:36+01:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-02-06T11:08:36+01:00</xmp:CreateDate>
-<xmp:CreatorTool>groff version 1.22.1</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-224f381b10d2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:b82cf4ad-a861-11ed-0000-224f381b10d2'/>
-<rdf:Description rdf:about='uuid:b82cf4ad-a861-11ed-0000-224f381b10d2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-224f381b10d2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-224f381b10d2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-04-12T09:12:54+02:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-04-12T09:12:54+02:00</xmp:CreateDate>
+<xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-224f381b10d2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:f18204a3-db5c-11ed-0000-224f381b10d2'/>
+<rdf:Description rdf:about='uuid:f18204a3-db5c-11ed-0000-224f381b10d2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20130206110836+01'00')
-/ModDate(D:20130206110836+01'00')
-/Creator(groff version 1.22.1)>>endobj
+/CreationDate(D:20130412091254+02'00')
+/ModDate(D:20130412091254+02'00')
+/Creator(groff version 1.22.2)>>endobj
 xref
 0 14
 0000000000 65535 f 
 0000000869 00000 n 
 0000002677 00000 n 
 0000000810 00000 n 
@@ -95,11 +95,11 @@
 0000001055 00000 n 
 0000000975 00000 n 
 0000001005 00000 n 
 0000001254 00000 n 
 trailer
 << /Size 14 /Root 1 0 R /Info 2 0 R
-/ID [<9FD59BE10F91097FB361BE00CF172282><9FD59BE10F91097FB361BE00CF172282>]
+/ID [<B6F56EEF6C9DB6C10DFF9BBE22CF309E><B6F56EEF6C9DB6C10DFF9BBE22CF309E>]
 >>
 startxref
 2831
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_strequal.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_strequal.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_unescape.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_version.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_version.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_version.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_version.3	2013-03-05 18:02:20.000000000 +0800
@@ -28,9 +28,10 @@
 .BI "char *curl_version( );"
 .ad
 .SH DESCRIPTION
 Returns a human readable string with the version number of libcurl and some of
 its important components (like OpenSSL version).
 .SH RETURN VALUE
-A pointer to a zero terminated string.
+A pointer to a zero terminated string. The string resides in a statically
+allocated buffer and must not be freed by the caller.
 .SH "SEE ALSO"
 .BR curl_version_info "(3)"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_version.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_version.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_version.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_version.html	2013-04-12 15:12:52.000000000 +0800
@@ -48,10 +48,10 @@
 <p class="level0"><a name="NAME"></a><h2 class="nroffsh">NAME</h2>
 <p class="level0">curl_version - returns the libcurl version string <a name="SYNOPSIS"></a><h2 class="nroffsh">SYNOPSIS</h2>
 <p class="level0"><span Class="bold">#include &lt;curl/curl.h&gt;</span> 
 <p class="level0"><span Class="bold">char *curl_version( );</span> 
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">Returns a human readable string with the version number of libcurl and some of its important components (like OpenSSL version). <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
-<p class="level0">A pointer to a zero terminated string. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
+<p class="level0">A pointer to a zero terminated string. The string resides in a statically allocated buffer and must not be freed by the caller. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a class="manpage" href="./curl_version_info.html">curl_version_info (3)</a> <p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_version_info.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_version_info.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/curl_version.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/curl_version.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/index.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/index.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/index.html	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/index.html	2013-03-05 18:02:20.000000000 +0800
@@ -18,44 +18,53 @@
 <br><a href="libcurl-errors.html">libcurl-errors</a>
 <br><a href="libcurl-tutorial.html">libcurl-tutorial</a>
 
 <H2>Library Functions (A-Z)</H2>
 <a href="curl_easy_cleanup.html">curl_easy_cleanup</A>
 <br><a href="curl_easy_duphandle.html">curl_easy_duphandle</A>
+<br><a href="curl_easy_escape.html">curl_easy_escape</A>
 <br><a href="curl_easy_getinfo.html">curl_easy_getinfo</A>
 <br><a href="curl_easy_init.html">curl_easy_init</A>
+<br><a href="curl_easy_pause.html">curl_easy_pause</A>
 <br><a href="curl_easy_perform.html">curl_easy_perform</A>
 <br><a href="curl_easy_recv.html">curl_easy_recv</A>
 <br><a href="curl_easy_reset.html">curl_easy_reset</A>
 <br><a href="curl_easy_send.html">curl_easy_send</A>
 <br><a href="curl_easy_setopt.html">curl_easy_setopt</A>
 <br><a href="curl_easy_strerror.html">curl_easy_strerror</A>
-<br><a href="curl_escape.html">curl_escape</A>
+<br><a href="curl_easy_unescape.html">curl_easy_unescape</A>
+<br><a href="curl_escape.html">curl_escape</A> (deprecated)
 <br><a href="curl_formadd.html">curl_formadd</A>
 <br><a href="curl_formfree.html">curl_formfree</A>
+<br><a href="curl_formget.html">curl_formget</A>
 <br><a href="curl_free.html">curl_free</A>
 <br><a href="curl_getdate.html">curl_getdate</A>
-<br><a href="curl_getenv.html">curl_getenv</A>
+<br><a href="curl_getenv.html">curl_getenv</A> (deprecated)
 <br><a href="curl_global_cleanup.html">curl_global_cleanup</A>
 <br><a href="curl_global_init.html">curl_global_init</A>
 <br><a href="curl_global_init_mem.html">curl_global_init_mem</A>
-<br><a href="curl_mprintf.html">curl_mprintf</A>
+<br><a href="curl_mprintf.html">curl_mprintf</A> (deprecated)
 <br><a href="curl_multi_add_handle.html">curl_multi_add_handle</a>
+<br><a href="curl_multi_assign.html">curl_multi_assign</a>
 <br><a href="curl_multi_cleanup.html">curl_multi_cleanup</a>
 <br><a href="curl_multi_fdset.html">curl_multi_fdset</a>
 <br><a href="curl_multi_info_read.html">curl_multi_info_read</a>
 <br><a href="curl_multi_init.html">curl_multi_init</a>
 <br><a href="curl_multi_perform.html">curl_multi_perform</a>
 <br><a href="curl_multi_remove_handle.html">curl_multi_remove_handle</a>
-<br><a href="curl_multi_strerror.html">curl_multi_strerror.html</a>
+<br><a href="curl_multi_setopt.html">curl_multi_setopt</a>
+<br><a href="curl_multi_socket.html">curl_multi_socket</a> (deprecated)
+<br><a href="curl_multi_socket_action.html">curl_multi_socket_action</a>
+<br><a href="curl_multi_strerror.html">curl_multi_strerror</a>
+<br><a href="curl_multi_timeout.html">curl_multi_timeout</a> (deprecated)
 <br><a href="curl_share_cleanup.html">curl_share_cleanup</A>
 <br><a href="curl_share_init.html">curl_share_init</A>
 <br><a href="curl_share_setopt.html">curl_share_setopt</A>
-<br><a href="curl_share_strerror.html">curl_share_strerror.html</a>
+<br><a href="curl_share_strerror.html">curl_share_strerror</a>
 <br><a href="curl_slist_append.html">curl_slist_append</A>
 <br><a href="curl_slist_free_all.html">curl_slist_free_all</A>
 <br><a href="curl_strequal.html">curl_strequal and curl_strnequal</A>
-<br><a href="curl_unescape.html">curl_unescape</A>
+<br><a href="curl_unescape.html">curl_unescape</A> (deprecated)
 <br><a href="curl_version.html">curl_version</A>
 <br><a href="curl_version_info.html">curl_version_info</A>
 
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-easy.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-easy.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-errors.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-errors.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-errors.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-errors.3	2013-04-12 02:46:54.000000000 +0800
@@ -237,12 +237,15 @@
 .IP "CURLE_RTSP_SESSION_ERROR (86)"
 Mismatch of RTSP Session Identifiers.
 .IP "CURLE_FTP_BAD_FILE_LIST (87)"
 Unable to parse FTP file list (during FTP wildcard downloading).
 .IP "CURLE_CHUNK_FAILED (88)"
 Chunk callback reported error.
+.IP "CURLE_NO_CONNECTION_AVAILABLE (89)"
+(For internal use only, will never be returned by libcurl) No connection
+available, the session will be queued. (added in 7.30.0)
 .IP "CURLE_OBSOLETE*"
 These error codes will never be returned. They were used in an old libcurl
 version and are currently unused.
 .SH "CURLMcode"
 This is the generic return code used by functions in the libcurl multi
 interface. Also consider \fIcurl_multi_strerror(3)\fP.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-errors.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-errors.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-errors.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-errors.html	2013-04-12 15:12:52.000000000 +0800
@@ -205,12 +205,14 @@
 <p class="level0"><a name="CURLERTSPSESSIONERROR"></a><span class="nroffip">CURLE_RTSP_SESSION_ERROR (86)</span> 
 <p class="level1">Mismatch of RTSP Session Identifiers. 
 <p class="level0"><a name="CURLEFTPBADFILELIST"></a><span class="nroffip">CURLE_FTP_BAD_FILE_LIST (87)</span> 
 <p class="level1">Unable to parse FTP file list (during FTP wildcard downloading). 
 <p class="level0"><a name="CURLECHUNKFAILED"></a><span class="nroffip">CURLE_CHUNK_FAILED (88)</span> 
 <p class="level1">Chunk callback reported error. 
+<p class="level0"><a name="CURLENOCONNECTIONAVAILABLE"></a><span class="nroffip">CURLE_NO_CONNECTION_AVAILABLE (89)</span> 
+<p class="level1">(For internal use only, will never be returned by libcurl) No connection available, the session will be queued. (added in 7.30.0) 
 <p class="level0"><a name="CURLEOBSOLETE"></a><span class="nroffip">CURLE_OBSOLETE*</span> 
 <p class="level1">These error codes will never be returned. They were used in an old libcurl version and are currently unused. <a name="CURLMcode"></a><h2 class="nroffsh">CURLMcode</h2>
 <p class="level0">This is the generic return code used by functions in the libcurl multi interface. Also consider <a class="emphasis" href="./curl_multi_strerror.html">curl_multi_strerror(3)</a>. 
 <p class="level0"><a name="CURLMCALLMULTIPERFORM"></a><span class="nroffip">CURLM_CALL_MULTI_PERFORM (-1)</span> 
 <p class="level1">This is not really an error. It means you should call <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a> again without doing select() or similar in between. Before version 7.20.0 this could be returned by <a class="emphasis" href="./curl_multi_perform.html">curl_multi_perform(3)</a>, but in later versions this return code is never used. 
 <p class="level0"><a name="CURLMOK"></a><span class="nroffip">CURLM_OK (0)</span> 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-errors.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-errors.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-multi.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-multi.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-share.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-share.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-tutorial.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-tutorial.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-tutorial.3	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-tutorial.3	2013-03-05 18:02:20.000000000 +0800
@@ -286,12 +286,16 @@
  Required actions unknown.
 
 axTLS
 
  Required actions unknown.
 
+Secure Transport
+
+ The engine is fully thread-safe, and no additional steps are required.
+
 When using multiple threads you should set the CURLOPT_NOSIGNAL option to 1
 for all handles. Everything will or might work fine except that timeouts are
 not honored during the DNS lookup - which you can work around by building
 libcurl with c-ares support. c-ares is a library that provides asynchronous
 name resolves. On some platforms, libcurl simply will not function properly
 multi-threaded unless this option is set.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-tutorial.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-tutorial.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-tutorial.html	2013-02-06 18:08:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-tutorial.html	2013-04-12 15:12:52.000000000 +0800
@@ -128,12 +128,14 @@
 <p class="level0">PolarSSL 
 <p class="level0">&nbsp;Required actions unknown. 
 <p class="level0">yassl 
 <p class="level0">&nbsp;Required actions unknown. 
 <p class="level0">axTLS 
 <p class="level0">&nbsp;Required actions unknown. 
+<p class="level0">Secure Transport 
+<p class="level0">&nbsp;The engine is fully thread-safe, and no additional steps are required. 
 <p class="level0">When using multiple threads you should set the CURLOPT_NOSIGNAL option to 1 for all handles. Everything will or might work fine except that timeouts are not honored during the DNS lookup - which you can work around by building libcurl with c-ares support. c-ares is a library that provides asynchronous name resolves. On some platforms, libcurl simply will not function properly multi-threaded unless this option is set. 
 <p class="level0">Also, note that CURLOPT_DNS_USE_GLOBAL_CACHE is not thread-safe. 
 <p class="level0"><a name="When"></a><h2 class="nroffsh">When It Doesn't Work</h2>
 <p class="level0">There will always be times when the transfer fails for some reason. You might have set the wrong libcurl option or misunderstood what the libcurl option actually does, or the remote server might return non-standard replies that confuse the library which then confuses your program. 
 <p class="level0">There's one golden rule when these things occur: set the CURLOPT_VERBOSE option to 1. It'll cause the library to spew out the entire protocol details it sends, some internal info and some received protocol data as well (especially when using FTP). If you're using HTTP, adding the headers in the received output to study is also a clever way to get a better understanding why the server behaves the way it does. Include headers in the normal body output with CURLOPT_HEADER set 1. 
 <p class="level0">Of course, there are bugs left. We need to know about them to be able to fix them, so we're quite dependent on your bug reports! When you do report suspected bugs in libcurl, please include as many details as you possibly can: a protocol dump that CURLOPT_VERBOSE produces, library version, as much as possible of your code that uses libcurl, operating system name and version, compiler name and version etc. 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/libcurl-tutorial.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/libcurl-tutorial.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/Makefile.in	2013-02-06 17:47:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/Makefile.in	2013-04-12 02:47:03.000000000 +0800
@@ -81,12 +81,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -168,12 +169,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -259,13 +261,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/symbols-in-versions /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/symbols-in-versions
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/libcurl/symbols-in-versions	2013-01-17 06:06:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/libcurl/symbols-in-versions	2013-04-12 02:46:54.000000000 +0800
@@ -82,12 +82,13 @@
 CURLE_LDAP_CANNOT_BIND          7.1
 CURLE_LDAP_INVALID_URL          7.10.8
 CURLE_LDAP_SEARCH_FAILED        7.1
 CURLE_LIBRARY_NOT_FOUND         7.1           7.17.0
 CURLE_LOGIN_DENIED              7.13.1
 CURLE_MALFORMAT_USER            7.1           7.17.0
+CURLE_NO_CONNECTION_AVAILABLE   7.30.0
 CURLE_NOT_BUILT_IN              7.21.5
 CURLE_OK                        7.1
 CURLE_OPERATION_TIMEDOUT        7.10.2
 CURLE_OPERATION_TIMEOUTED       7.1           7.17.0
 CURLE_OUT_OF_MEMORY             7.1
 CURLE_PARTIAL_FILE              7.1
@@ -264,14 +265,21 @@
 CURLKHSTAT_FINE_ADD_TO_FILE     7.19.6
 CURLKHSTAT_REJECT               7.19.6
 CURLKHTYPE_DSS                  7.19.6
 CURLKHTYPE_RSA                  7.19.6
 CURLKHTYPE_RSA1                 7.19.6
 CURLKHTYPE_UNKNOWN              7.19.6
+CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE 7.30.0
+CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE 7.30.0
+CURLMOPT_MAX_HOST_CONNECTIONS   7.30.0
+CURLMOPT_MAX_PIPELINE_LENGTH    7.30.0
+CURLMOPT_MAX_TOTAL_CONNECTIONS  7.30.0
 CURLMOPT_MAXCONNECTS            7.16.3
 CURLMOPT_PIPELINING             7.16.0
+CURLMOPT_PIPELINING_SERVER_BL   7.30.0
+CURLMOPT_PIPELINING_SITE_BL     7.30.0
 CURLMOPT_SOCKETDATA             7.15.4
 CURLMOPT_SOCKETFUNCTION         7.15.4
 CURLMOPT_TIMERDATA              7.16.0
 CURLMOPT_TIMERFUNCTION          7.16.0
 CURLMSG_DONE                    7.9.6
 CURLMSG_NONE                    7.9.6
@@ -611,12 +619,13 @@
 CURL_FORMADD_UNKNOWN_OPTION     7.9.8
 CURL_GLOBAL_ALL                 7.8
 CURL_GLOBAL_DEFAULT             7.8
 CURL_GLOBAL_NOTHING             7.8
 CURL_GLOBAL_SSL                 7.8
 CURL_GLOBAL_WIN32               7.8.1
+CURL_GLOBAL_ACK_EINTR           7.30.0
 CURL_HTTP_VERSION_1_0           7.9.1
 CURL_HTTP_VERSION_1_1           7.9.1
 CURL_HTTP_VERSION_NONE          7.9.1
 CURL_IPRESOLVE_V4               7.10.8
 CURL_IPRESOLVE_V6               7.10.8
 CURL_IPRESOLVE_WHATEVER         7.10.8
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/Makefile.in	2013-02-06 17:47:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/Makefile.in	2013-04-12 02:47:03.000000000 +0800
@@ -82,12 +82,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -209,12 +210,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -300,13 +302,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/mk-ca-bundle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/mk-ca-bundle.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/SSLCERTS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/SSLCERTS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/SSLCERTS	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/SSLCERTS	2013-03-05 18:02:20.000000000 +0800
@@ -1,9 +1,15 @@
                       Peer SSL Certificate Verification
                       =================================
 
+(NOTE: If libcurl was built with Schannel or Secure Transport support, then
+this does not apply to you. Scroll down for details on how the OS-native
+engines handle SSL certificates. If you're not sure, then run "curl -V" and
+read the results. If the version string says "WinSSL" in it, then it was built
+with Schannel support.)
+
 libcurl performs peer SSL certificate verification by default.  This is done
 by using CA cert bundle that the SSL library can use to make sure the peer's
 server certificate is valid.
 
 If you communicate with HTTPS or FTPS servers using certificates that are
 signed by CAs present in the bundle, you can be sure that the remote server
@@ -90,27 +96,43 @@
 during the handshake and SSL will then refuse further communication with that
 server.
 
                       Peer SSL Certificate Verification with NSS
                       ==========================================
 
-If libcurl is build with NSS support then depending on the OS distribution it
-is probably required to take some additional steps to use the system-wide CA
-cert db. RedHat ships with an additional module libnsspem.so which enables NSS
-to read the OpenSSL PEM CA bundle. With OpenSuSE this lib is missing, and NSS
-can only work with its own internal formats. Also NSS got a new database
-format:
-https://wiki.mozilla.org/NSS_Shared_DB
-Starting with version 7.19.7 libcurl will check for the NSS version it runs,
-and add automatically the 'sql:' prefix to the certdb directory (either the
+If libcurl was built with NSS support, then depending on the OS distribution,
+it is probably required to take some additional steps to use the system-wide CA
+cert db. RedHat ships with an additional module, libnsspem.so, which enables
+NSS to read the OpenSSL PEM CA bundle. This library is missing in OpenSuSE, and
+without it, NSS can only work with its own internal formats. NSS also has a new
+database format: https://wiki.mozilla.org/NSS_Shared_DB
+
+Starting with version 7.19.7, libcurl will check for the NSS version it runs,
+and automatically add the 'sql:' prefix to the certdb directory (either the
 hardcoded default /etc/pki/nssdb or the directory configured with SSL_DIR
-environment variable) if a version 3.12.0 or later is detected.
-To check which certdb format your distribution provides examine the default
-certdb location /etc/pki/nssdb; the new certdb format can be identified by
+environment variable) if version 3.12.0 or later is detected. To check which
+ertdb format your distribution provides, examine the default
+certdb location: /etc/pki/nssdb; the new certdb format can be identified by
 the filenames cert9.db, key4.db, pkcs11.txt; filenames of older versions are
 cert8.db, key3.db, modsec.db.
-Usually these cert databases are empty; but NSS also has built-in CAs which are
-provided through a shared library libnssckbi.so; if you want to use these
-built-in CAs then create a symlink to libnssckbi.so in /etc/pki/nssdb:
+
+Usually these cert databases are empty, but NSS also has built-in CAs which are
+provided through a shared library, libnssckbi.so; if you want to use these
+built-in CAs, then create a symlink to libnssckbi.so in /etc/pki/nssdb:
 ln -s /usr/lib[64]/libnssckbi.so /etc/pki/nssdb/libnssckbi.so
 
+     Peer SSL Certificate Verification with Schannel and Secure Transport
+     ====================================================================
 
+If libcurl was built with Schannel (Microsoft's TLS/SSL engine) or Secure
+Transport (Apple's TLS/SSL engine) support, then libcurl will still perform
+peer certificate verification, but instead of using a CA cert bundle, it will
+use the certificates that are built into the OS. These are the same
+certificates that appear in the Internet Options control panel (under Windows)
+or Keychain Access application (under OS X). Any custom security rules for
+certificates will be honored.
+
+Schannel will run CRL checks on certificates unless peer verification is
+disabled. Secure Transport on iOS will run OCSP checks on certificates unless
+peer verification is disabled. Secure Transport on OS X will run either OCSP
+or CRL checks on certificates if those features are enabled, and this behavior
+can be adjusted in the preferences of Keychain Access.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/THANKS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/THANKS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/THANKS	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/THANKS	2013-04-12 02:46:54.000000000 +0800
@@ -86,12 +86,13 @@
 Arthur Murray
 Arve Knudsen
 Ates Goral
 Augustus Saunders
 Avery Fay
 Axel Tillequin
+Balaji Parasuram
 Balint Szilakszi
 Bart Whiteley
 Bas Mevissen
 Ben Darnell
 Ben Greear
 Ben Madsen
@@ -108,12 +109,13 @@
 Bill Hoffman
 Bjoern Sikora
 Bjorn Augustsson
 Bjorn Reese
 Björn Stenberg
 Blaise Potard
+Bob Relyea
 Bob Richmond
 Bob Schader
 Bogdan Nicula
 Brad Burdick
 Brad Hards
 Brad King
@@ -125,12 +127,13 @@
 Brian Dessent
 Brian J. Murrell
 Brian R Duffy
 Brian Ulm
 Brock Noland
 Bruce Mitchener
+Bruno de Carvalho
 Bryan Henderson
 Bryan Kemp
 Cameron Kaiser
 Camille Moncelier
 Caolan McNamara
 Carsten Lange
@@ -268,12 +271,13 @@
 Ebenezer Ikonne
 Edin Kadribasic
 Eduard Bloch
 Edward Sheldrake
 Eelco Dolstra
 Eetu Ojanen
+Eldar Zaitov
 Ellis Pritchard
 Emanuele Bovisio
 Emil Romanus
 Emiliano Ida
 Enrico Scholz
 Enrik Berkhan
@@ -442,12 +446,14 @@
 Jesse Noller
 Jie He
 Jim Drash
 Jim Freeman
 Jim Hollinger
 Jim Meyering
+Jiri Jaburek
+Jiri Hruska
 Jocelyn Jaubert
 Joe Halpin
 Joe Malicki
 Joe Mason
 Joel Chen
 Jofell Gallardo
@@ -499,12 +505,13 @@
 Julien Royer
 Jun-ichiro itojun Hagino
 Jurij Smakov
 Justin Fletcher
 Jörg Mueller-Tolk
 Jörn Hartroth
+Kai Engert
 Kai Sommerfeld
 Kai-Uwe Rommel
 Kalle Vahlman
 Kamil Dudka
 Kang-Jin Lee
 Karl M
@@ -556,12 +563,13 @@
 Lijo Antony
 Linas Vepstas
 Ling Thio
 Linus Nielsen Feltzing
 Lisa Xu
 Liza Alenchery
+Lluís Batlle i Rossell
 Loic Dachary
 Loren Kirkby
 Luca Altea
 Luca Alteas
 Lucas Adamski
 Lukasz Czekierda
@@ -613,12 +621,13 @@
 Maruko
 Massimiliano Ziccardi
 Massimo Callegari
 Mateusz Loskot
 Mathias Axelsson
 Mats Lidell
+Matt Arsenault
 Matt Kraai
 Matt Veenstra
 Matt Witherspoon
 Matt Wixson
 Matteo Rocco
 Matthew Blain
@@ -873,12 +882,13 @@
 Song Ma
 Sonia Subramanian
 Spacen Jasset
 Spiridonoff A.V
 Stadler Stephan
 Stan van de Burgt
+Stanislav Ivochkin
 Stefan Esser
 Stefan Krause
 Stefan Teleman
 Stefan Tomanek
 Stefan Ulrich
 Stephan Bergmann
@@ -955,12 +965,13 @@
 Toshiyuki Maezawa
 Traian Nicolescu
 Troels Walsted Hansen
 Troy Engel
 Tupone Alfredo
 Ulf Härnhammar
+Ulrich Doehner
 Ulrich Zadow
 Venkat Akella
 Victor Snezhko
 Vikram Saxena
 Vilmos Nebehaj
 Vincent Bronner
@@ -988,12 +999,13 @@
 Xavier Bouchoux
 Yang Tse
 Yarram Sunil
 Yehoshua Hershberg
 Yukihiro Kawada
 Yuriy Sosov
+Yves Arrouye
 Yves Lejeune
 Zmey Petroff
 Zvi Har'El
 nk
 swalkaus at yahoo.com
 tommink[at]post.pl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/docs/TODO	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/docs/TODO	2013-04-12 02:46:54.000000000 +0800
@@ -42,42 +42,47 @@
  6. TELNET
  6.1 ditch stdin
  6.2 ditch telnet-specific select
  6.3 feature negotiation debug data
  6.4 send data in chunks
 
- 7. SSL
- 7.1 Disable specific versions
- 7.2 Provide mutex locking API
- 7.3 Evaluate SSL patches
- 7.4 Cache OpenSSL contexts
- 7.5 Export session ids
- 7.6 Provide callback for cert verification
- 7.7 Support other SSL libraries
- 7.9 improve configure --with-ssl
- 7.10 Support DANE
-
- 8. GnuTLS
- 8.1 SSL engine stuff
- 8.3 check connection
-
- 9. SMTP
- 9.1 Specify the preferred authentication mechanism
- 9.2 Initial response
- 9.3 Pipelining
+ 7. SMTP
+ 7.1 Specify the preferred authentication mechanism
+ 7.2 Initial response
+ 7.3 Pipelining
+ 7.4 Graceful base64 decoding failure
  
- 10. POP3
- 10.1 auth= in URLs
+ 8. POP3
+ 8.1 auth= in URLs
+ 8.2 Initial response
+ 8.3 Graceful base64 decoding failure
  
- 11. LDAP
- 11.1 SASL based authentication mechanisms
+ 9. IMAP
+ 9.1 auth= in URLs
+ 9.2 Graceful base64 decoding failure
  
- 12. Other protocols
+ 10. LDAP
+ 10.1 SASL based authentication mechanisms
+ 
+ 11. New protocols
+ 11.1 RSYNC
 
- 13. New protocols
- 13.1 RSYNC
+ 12. SSL
+ 12.1 Disable specific versions
+ 12.2 Provide mutex locking API
+ 12.3 Evaluate SSL patches
+ 12.4 Cache OpenSSL contexts
+ 12.5 Export session ids
+ 12.6 Provide callback for cert verification
+ 12.7 Support other SSL libraries
+ 12.8 improve configure --with-ssl
+ 12.9 Support DANE
+
+ 13. GnuTLS
+ 13.1 SSL engine stuff
+ 13.2 check connection
 
  14. SASL
  14.1 Other authentication mechanisms
  
  15. Client
  15.1 sync
@@ -287,135 +290,164 @@
 6.4 send data in chunks
 
   Currently, telnet sends data one byte at a time.  This is fine for interactive
   use, but inefficient for any other.  Sent data should be sent in larger
   chunks.
 
-7. SSL
+7. SMTP
+
+7.1 Specify the preferred authentication mechanism
+
+ Add the ability to specify the preferred authentication mechanism or a list
+ of mechanisms that should be used. Not only that, but the order that is
+ returned by the server during the EHLO response should be honored by curl.
+
+7.2 Initial response
+
+ Add the ability for the user to specify whether the initial response is
+ included in the AUTH command. Some email servers, such as Microsoft
+ Exchange, can work with either whilst others need to have the initial
+ response sent separately:
+
+ http://curl.haxx.se/mail/lib-2012-03/0114.html
+
+7.3 Pipelining
+
+ Add support for pipelining emails.
+
+7.4 Graceful base64 decoding failure
+
+ Rather than shutting down the session and returning an error when the
+ decoding of a base64 encoded authentication response fails, we should
+ gracefully shutdown the authentication process by sending a * response to the
+ server as per RFC4954.
+
+8. POP3
+
+8.1 auth= in URLs
+
+ Being able to specify the preferred authentication mechanism in the URL as
+ per RFC2384.
+
+8.2 Initial response
+
+ Add the ability for the user to specify whether the initial response is
+ included in the AUTH command as per RFC5034.
+
+8.3 Graceful base64 decoding failure
+
+ Rather than shutting down the session and returning an error when the
+ decoding of a base64 encoded authentication response fails, we should
+ gracefully shutdown the authentication process by sending a * response to the
+ server as per RFC5034.
+
+9. IMAP
+
+9.1 auth= in URLs
+
+ Being able to specify the preferred authentication mechanism in the URL as
+ per RFC5092.
+
+9.2 Graceful base64 decoding failure
+
+ Rather than shutting down the session and returning an error when the
+ decoding of a base64 encoded authentication response fails, we should
+ gracefully shutdown the authentication process by sending a * response to the
+ server as per RFC3501.
+
+10. LDAP
+
+10.1 SASL based authentication mechanisms
+
+ Currently the LDAP module only supports ldap_simple_bind_s() in order to bind
+ to an LDAP server. However, this function sends username and password details
+ using the simple authentication mechanism (as clear text). However, it should
+ be possible to use ldap_bind_s() instead specifing the security context
+ information ourselves.
 
-7.1 Disable specific versions
+11. New protocols
+
+11.1 RSYNC
+
+ There's no RFC for the protocol or an URI/URL format.  An implementation
+ should most probably use an existing rsync library, such as librsync.
+
+12. SSL
+
+12.1 Disable specific versions
 
  Provide an option that allows for disabling specific SSL versions, such as
  SSLv2 http://curl.haxx.se/bug/feature.cgi?id=1767276
 
-7.2 Provide mutex locking API
+12.2 Provide mutex locking API
 
  Provide a libcurl API for setting mutex callbacks in the underlying SSL
  library, so that the same application code can use mutex-locking
  independently of OpenSSL or GnutTLS being used.
 
-7.3 Evaluate SSL patches
+12.3 Evaluate SSL patches
 
  Evaluate/apply Gertjan van Wingerde's SSL patches:
  http://curl.haxx.se/mail/lib-2004-03/0087.html
 
-7.4 Cache OpenSSL contexts
+12.4 Cache OpenSSL contexts
 
  "Look at SSL cafile - quick traces look to me like these are done on every
  request as well, when they should only be necessary once per ssl context (or
  once per handle)". The major improvement we can rather easily do is to make
  sure we don't create and kill a new SSL "context" for every request, but
  instead make one for every connection and re-use that SSL context in the same
  style connections are re-used. It will make us use slightly more memory but
  it will libcurl do less creations and deletions of SSL contexts.
 
-7.5 Export session ids
+12.5 Export session ids
 
  Add an interface to libcurl that enables "session IDs" to get
  exported/imported. Cris Bailiff said: "OpenSSL has functions which can
  serialise the current SSL state to a buffer of your choice, and recover/reset
  the state from such a buffer at a later date - this is used by mod_ssl for
  apache to implement and SSL session ID cache".
 
-7.6 Provide callback for cert verification
+12.6 Provide callback for cert verification
 
  OpenSSL supports a callback for customised verification of the peer
  certificate, but this doesn't seem to be exposed in the libcurl APIs. Could
  it be? There's so much that could be done if it were!
 
-7.7 Support other SSL libraries
+12.7 Support other SSL libraries
 
  Make curl's SSL layer capable of using other free SSL libraries.  Such as
  MatrixSSL (http://www.matrixssl.org/).
 
-7.9 improve configure --with-ssl
+12.8 improve configure --with-ssl
 
  make the configure --with-ssl option first check for OpenSSL, then GnuTLS,
  then NSS...
 
-7.10 Support DANE
+12.9 Support DANE
 
  DNS-Based Authentication of Named Entities (DANE) is a way to provide SSL
  keys and certs over DNS using DNSSEC as an alternative to the CA model.
  http://www.rfc-editor.org/rfc/rfc6698.txt
 
+13. GnuTLS
 
-8. GnuTLS
-
-8.1 SSL engine stuff
+13.1 SSL engine stuff
 
  Is this even possible?
 
-8.3 check connection
+13.2 check connection
 
  Add a way to check if the connection seems to be alive, to correspond to the
  SSL_peak() way we use with OpenSSL.
 
-
-9. SMTP
-
-9.1 Specify the preferred authentication mechanism
-
- Add the ability to specify the preferred authentication mechanism or a list
- of mechanisms that should be used. Not only that, but the order that is
- returned by the server during the EHLO response should be honored by curl.
-
-9.2 Initial response
-
- Add the ability for the user to specify whether the initial response is
- included in the AUTH command. Some email servers, such as Microsoft
- Exchange, can work with either whilst others need to have the initial
- response sent separately:
-
- http://curl.haxx.se/mail/lib-2012-03/0114.html
-
-9.3 Pipelining
-
- Add support for pipelining emails.
-
-10. POP3
-
-10.1 auth= in URLs
-
- Being able to specify the preferred authentication mechanism in the URL as
- per RFC2384.
-
-11. LDAP
-
-11.1 SASL based authentication mechanisms
-
- Currently the LDAP module only supports ldap_simple_bind_s() in order to bind
- to an LDAP server. However, this function sends username and password details
- using the simple authentication mechanism (as clear text). However, it should
- be possible to use ldap_bind_s() instead specifing the security context
- information ourselves.
-
-12. Other protocols
-
-13. New protocols
-
-13.1 RSYNC
-
- There's no RFC for the protocol or an URI/URL format.  An implementation
- should most probably use an existing rsync library, such as librsync.
-
 14. SASL
 
 14.1 Other authentication mechanisms
 
- Add support for gssapi to SMTP, POP3 and IMAP.
+ Add support for GSSAPI to SMTP, POP3 and IMAP.
 
 15. Client
 
 15.1 sync
 
  "curl --sync http://example.com/feed[1-100].rss" or
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/curlbuild.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/curlbuild.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/curlbuild.h	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/curlbuild.h	2013-04-12 15:13:03.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -524,22 +524,24 @@
 
 /* ===================================== */
 /*    KEEP GENERIC GCC THE LAST ENTRY    */
 /* ===================================== */
 
 #elif defined(__GNUC__)
-#  if defined(__i386__) || defined(__ppc__)
+#  if defined(__ILP32__) || \
+      defined(__i386__) || defined(__ppc__) || defined(__arm__)
 #    define CURL_SIZEOF_LONG           4
 #    define CURL_TYPEOF_CURL_OFF_T     long long
 #    define CURL_FORMAT_CURL_OFF_T     "lld"
 #    define CURL_FORMAT_CURL_OFF_TU    "llu"
 #    define CURL_FORMAT_OFF_T          "%lld"
 #    define CURL_SIZEOF_CURL_OFF_T     8
 #    define CURL_SUFFIX_CURL_OFF_T     LL
 #    define CURL_SUFFIX_CURL_OFF_TU    ULL
-#  elif defined(__x86_64__) || defined(__ppc64__)
+#  elif defined(__LP64__) || \
+        defined(__x86_64__) || defined(__ppc64__)
 #    define CURL_SIZEOF_LONG           8
 #    define CURL_TYPEOF_CURL_OFF_T     long
 #    define CURL_FORMAT_CURL_OFF_T     "ld"
 #    define CURL_FORMAT_CURL_OFF_TU    "lu"
 #    define CURL_FORMAT_OFF_T          "%ld"
 #    define CURL_SIZEOF_CURL_OFF_T     8
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/curl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/curl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/curl.h	2013-01-17 06:06:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/curl.h	2013-04-12 02:46:54.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -90,35 +90,27 @@
 extern "C" {
 #endif
 
 typedef void CURL;
 
 /*
- * Decorate exportable functions for Win32 and Symbian OS DLL linking.
- * This avoids using a .def file for building libcurl.dll.
+ * libcurl external API function linkage decorations.
  */
-#if (defined(WIN32) || defined(_WIN32) || defined(__SYMBIAN32__)) && \
-     !defined(CURL_STATICLIB)
-#if defined(BUILDING_LIBCURL)
-#define CURL_EXTERN  __declspec(dllexport)
-#else
-#define CURL_EXTERN  __declspec(dllimport)
-#endif
-#else
 
-#ifdef CURL_HIDDEN_SYMBOLS
-/*
- * This definition is used to make external definitions visible in the
- * shared library when symbols are hidden by default.  It makes no
- * difference when compiling applications whether this is set or not,
- * only when compiling the library.
- */
-#define CURL_EXTERN CURL_EXTERN_SYMBOL
+#ifdef CURL_STATICLIB
+#  define CURL_EXTERN
+#elif defined(WIN32) || defined(_WIN32) || defined(__SYMBIAN32__)
+#  if defined(BUILDING_LIBCURL)
+#    define CURL_EXTERN  __declspec(dllexport)
+#  else
+#    define CURL_EXTERN  __declspec(dllimport)
+#  endif
+#elif defined(BUILDING_LIBCURL) && defined(CURL_HIDDEN_SYMBOLS)
+#  define CURL_EXTERN CURL_EXTERN_SYMBOL
 #else
-#define CURL_EXTERN
-#endif
+#  define CURL_EXTERN
 #endif
 
 #ifndef curl_socket_typedef
 /* socket typedef */
 #if defined(WIN32) && !defined(__LWIP_OPT_H__)
 typedef SOCKET curl_socket_t;
@@ -512,12 +504,14 @@
                                     7.19.0) */
   CURLE_FTP_PRET_FAILED,         /* 84 - a PRET command failed */
   CURLE_RTSP_CSEQ_ERROR,         /* 85 - mismatch of RTSP CSeq numbers */
   CURLE_RTSP_SESSION_ERROR,      /* 86 - mismatch of RTSP Session Ids */
   CURLE_FTP_BAD_FILE_LIST,       /* 87 - unable to parse FTP file list */
   CURLE_CHUNK_FAILED,            /* 88 - chunk callback reported error */
+  CURLE_NO_CONNECTION_AVAILABLE, /* 89 - No connection available, the
+                                    session will be queued */
   CURL_LAST /* never use! */
 } CURLcode;
 
 #ifndef CURL_NO_OLDIES /* define this to test if your app builds with all
                           the obsolete stuff removed! */
 
@@ -2020,12 +2014,13 @@
 
 #define CURL_GLOBAL_SSL (1<<0)
 #define CURL_GLOBAL_WIN32 (1<<1)
 #define CURL_GLOBAL_ALL (CURL_GLOBAL_SSL|CURL_GLOBAL_WIN32)
 #define CURL_GLOBAL_NOTHING 0
 #define CURL_GLOBAL_DEFAULT CURL_GLOBAL_ALL
+#define CURL_GLOBAL_ACK_EINTR (1<<2)
 
 
 /*****************************************************************************
  * Setup defines, protos etc for the sharing stuff.
  */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/curlver.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/curlver.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/curlver.h	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/curlver.h	2013-04-12 15:13:03.000000000 +0800
@@ -27,18 +27,18 @@
 
 /* This is the global package copyright */
 #define LIBCURL_COPYRIGHT "1996 - 2013 Daniel Stenberg, <daniel@haxx.se>."
 
 /* This is the version number of the libcurl package from which this header
    file origins: */
-#define LIBCURL_VERSION "7.29.0"
+#define LIBCURL_VERSION "7.30.0"
 
 /* The numeric version number is also available "in parts" by using these
    defines: */
 #define LIBCURL_VERSION_MAJOR 7
-#define LIBCURL_VERSION_MINOR 29
+#define LIBCURL_VERSION_MINOR 30
 #define LIBCURL_VERSION_PATCH 0
 
 /* This is the numeric version of the libcurl version number, meant for easier
    parsing and comparions by programs. The LIBCURL_VERSION_NUM define will
    always follow this syntax:
 
@@ -50,20 +50,20 @@
    appears as "0x090b07".
 
    This 6-digit (24 bits) hexadecimal number does not show pre-release number,
    and it is always a greater number in a more recent release. It makes
    comparisons with greater than and less than work.
 */
-#define LIBCURL_VERSION_NUM 0x071d00
+#define LIBCURL_VERSION_NUM 0x071e00
 
 /*
  * This is the date and time when the full source package was created. The
  * timestamp is not stored in git, as the timestamp is properly set in the
  * tarballs by the maketgz script.
  *
  * The format of the date should follow this template:
  *
  * "Mon Feb 12 11:35:33 UTC 2007"
  */
-#define LIBCURL_TIMESTAMP "Wed Feb  6 10:13:08 UTC 2013"
+#define LIBCURL_TIMESTAMP "Fri Apr 12 07:12:20 UTC 2013"
 
 #endif /* __CURL_CURLVER_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/Makefile.in	2013-02-06 17:47:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/Makefile.in	2013-04-12 02:47:03.000000000 +0800
@@ -60,12 +60,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -146,12 +147,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -237,13 +239,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/mprintf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/mprintf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/mprintf.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/mprintf.h	2013-04-12 02:46:54.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2006, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -55,13 +55,13 @@
 # undef vsnprintf
 # undef aprintf
 # undef vaprintf
 # define printf curl_mprintf
 # define fprintf curl_mfprintf
 #ifdef CURLDEBUG
-/* When built with CURLDEBUG we define away the sprintf() functions since we
+/* When built with CURLDEBUG we define away the sprintf functions since we
    don't want internal code to be using them */
 # define sprintf sprintf_was_used
 # define vsprintf vsprintf_was_used
 #else
 # define sprintf curl_msprintf
 # define vsprintf curl_mvsprintf
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/multi.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/multi.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/curl/multi.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/curl/multi.h	2013-04-12 02:46:54.000000000 +0800
@@ -335,12 +335,37 @@
   /* This is the argument passed to the timer callback */
   CINIT(TIMERDATA, OBJECTPOINT, 5),
 
   /* maximum number of entries in the connection cache */
   CINIT(MAXCONNECTS, LONG, 6),
 
+  /* maximum number of (pipelining) connections to one host */
+  CINIT(MAX_HOST_CONNECTIONS, LONG, 7),
+
+  /* maximum number of requests in a pipeline */
+  CINIT(MAX_PIPELINE_LENGTH, LONG, 8),
+
+  /* a connection with a content-length longer than this
+     will not be considered for pipelining */
+  CINIT(CONTENT_LENGTH_PENALTY_SIZE, OFF_T, 9),
+
+  /* a connection with a chunk length longer than this
+     will not be considered for pipelining */
+  CINIT(CHUNK_LENGTH_PENALTY_SIZE, OFF_T, 10),
+
+  /* a list of site names(+port) that are blacklisted from
+     pipelining */
+  CINIT(PIPELINING_SITE_BL, OBJECTPOINT, 11),
+
+  /* a list of server types that are blacklisted from
+     pipelining */
+  CINIT(PIPELINING_SERVER_BL, OBJECTPOINT, 12),
+
+  /* maximum number of open connections in total */
+  CINIT(MAX_TOTAL_CONNECTIONS, LONG, 13),
+
   CURLMOPT_LASTENTRY /* the last unused */
 } CURLMoption;
 
 
 /*
  * Name:    curl_multi_setopt()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/include/Makefile.in	2013-02-06 17:47:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/include/Makefile.in	2013-04-12 02:47:03.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -156,12 +157,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -247,13 +249,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/install-sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/install-sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/install-sh	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/install-sh	2013-02-13 22:47:54.000000000 +0800
@@ -1,250 +1,527 @@
 #!/bin/sh
-#
 # install - install a program, script, or datafile
-# This comes from X11R5 (mit/util/scripts/install.sh).
+
+scriptversion=2011-01-19.21; # UTC
+
+# This originates from X11R5 (mit/util/scripts/install.sh), which was
+# later released in X11R6 (xc/config/util/install.sh) with the
+# following copyright and license.
+#
+# Copyright (C) 1994 X Consortium
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to
+# deal in the Software without restriction, including without limitation the
+# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+# sell copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
+# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
+# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
+# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+#
+# Except as contained in this notice, the name of the X Consortium shall not
+# be used in advertising or otherwise to promote the sale, use or other deal-
+# ings in this Software without prior written authorization from the X Consor-
+# tium.
 #
-# Copyright 1991 by the Massachusetts Institute of Technology
 #
-# Permission to use, copy, modify, distribute, and sell this software and its
-# documentation for any purpose is hereby granted without fee, provided that
-# the above copyright notice appear in all copies and that both that
-# copyright notice and this permission notice appear in supporting
-# documentation, and that the name of M.I.T. not be used in advertising or
-# publicity pertaining to distribution of the software without specific,
-# written prior permission.  M.I.T. makes no representations about the
-# suitability of this software for any purpose.  It is provided "as is"
-# without express or implied warranty.
+# FSF changes to this file are in the public domain.
 #
 # Calling this script install-sh is preferred over install.sh, to prevent
 # `make' implicit rules from creating a file called install from it
 # when there is no Makefile.
 #
 # This script is compatible with the BSD install script, but was written
-# from scratch.  It can only install one file at a time, a restriction
-# shared with many OS's install programs.
+# from scratch.
 
+nl='
+'
+IFS=" ""	$nl"
 
 # set DOITPROG to echo to test this script
 
 # Don't use :- since 4.3BSD and earlier shells don't like it.
-doit="${DOITPROG-}"
-
-
-# put in absolute paths if you don't have them in your path; or use env. vars.
-
-mvprog="${MVPROG-mv}"
-cpprog="${CPPROG-cp}"
-chmodprog="${CHMODPROG-chmod}"
-chownprog="${CHOWNPROG-chown}"
-chgrpprog="${CHGRPPROG-chgrp}"
-stripprog="${STRIPPROG-strip}"
-rmprog="${RMPROG-rm}"
-mkdirprog="${MKDIRPROG-mkdir}"
-
-transformbasename=""
-transform_arg=""
-instcmd="$mvprog"
-chmodcmd="$chmodprog 0755"
-chowncmd=""
-chgrpcmd=""
-stripcmd=""
-rmcmd="$rmprog -f"
-mvcmd="$mvprog"
-src=""
-dst=""
-dir_arg=""
-
-while [ x"$1" != x ]; do
-    case $1 in
-	-c) instcmd="$cpprog"
-	    shift
-	    continue;;
-
-	-d) dir_arg=true
-	    shift
-	    continue;;
-
-	-m) chmodcmd="$chmodprog $2"
-	    shift
-	    shift
-	    continue;;
-
-	-o) chowncmd="$chownprog $2"
-	    shift
-	    shift
-	    continue;;
-
-	-g) chgrpcmd="$chgrpprog $2"
-	    shift
-	    shift
-	    continue;;
-
-	-s) stripcmd="$stripprog"
-	    shift
-	    continue;;
-
-	-t=*) transformarg=`echo $1 | sed 's/-t=//'`
-	    shift
-	    continue;;
-
-	-b=*) transformbasename=`echo $1 | sed 's/-b=//'`
-	    shift
-	    continue;;
-
-	*)  if [ x"$src" = x ]
-	    then
-		src=$1
-	    else
-		# this colon is to work around a 386BSD /bin/sh bug
-		:
-		dst=$1
-	    fi
-	    shift
-	    continue;;
-    esac
-done
-
-if [ x"$src" = x ]
-then
-	echo "install:	no input file specified"
-	exit 1
+doit=${DOITPROG-}
+if test -z "$doit"; then
+  doit_exec=exec
 else
-	true
+  doit_exec=$doit
 fi
 
-if [ x"$dir_arg" != x ]; then
-	dst=$src
-	src=""
-	
-	if [ -d $dst ]; then
-		instcmd=:
-	else
-		instcmd=mkdir
-	fi
-else
+# Put in absolute file names if you don't have them in your path;
+# or use environment vars.
 
-# Waiting for this to be detected by the "$instcmd $src $dsttmp" command
-# might cause directories to be created, which would be especially bad
-# if $src (and thus $dsttmp) contains '*'.
-
-	if [ -f $src -o -d $src ]
-	then
-		true
-	else
-		echo "install:  $src does not exist"
-		exit 1
-	fi
-	
-	if [ x"$dst" = x ]
-	then
-		echo "install:	no destination specified"
-		exit 1
-	else
-		true
-	fi
-
-# If destination is a directory, append the input filename; if your system
-# does not like double slashes in filenames, you may need to add some logic
-
-	if [ -d $dst ]
-	then
-		dst="$dst"/`basename $src`
-	else
-		true
-	fi
-fi
-
-## this sed command emulates the dirname command
-dstdir=`echo $dst | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`
+chgrpprog=${CHGRPPROG-chgrp}
+chmodprog=${CHMODPROG-chmod}
+chownprog=${CHOWNPROG-chown}
+cmpprog=${CMPPROG-cmp}
+cpprog=${CPPROG-cp}
+mkdirprog=${MKDIRPROG-mkdir}
+mvprog=${MVPROG-mv}
+rmprog=${RMPROG-rm}
+stripprog=${STRIPPROG-strip}
+
+posix_glob='?'
+initialize_posix_glob='
+  test "$posix_glob" != "?" || {
+    if (set -f) 2>/dev/null; then
+      posix_glob=
+    else
+      posix_glob=:
+    fi
+  }
+'
 
-# Make sure that the destination directory exists.
-#  this part is taken from Noah Friedman's mkinstalldirs script
+posix_mkdir=
 
-# Skip lots of stat calls in the usual case.
-if [ ! -d "$dstdir" ]; then
-defaultIFS='	
-'
-IFS="${IFS-${defaultIFS}}"
+# Desired mode of installed file.
+mode=0755
 
-oIFS="${IFS}"
-# Some sh's can't handle IFS=/ for some reason.
-IFS='%'
-set - `echo ${dstdir} | sed -e 's@/@%@g' -e 's@^%@/@'`
-IFS="${oIFS}"
-
-pathcomp=''
-
-while [ $# -ne 0 ] ; do
-	pathcomp="${pathcomp}${1}"
-	shift
-
-	if [ ! -d "${pathcomp}" ] ;
-        then
-		$mkdirprog "${pathcomp}"
-	else
-		true
-	fi
+chgrpcmd=
+chmodcmd=$chmodprog
+chowncmd=
+mvcmd=$mvprog
+rmcmd="$rmprog -f"
+stripcmd=
 
-	pathcomp="${pathcomp}/"
+src=
+dst=
+dir_arg=
+dst_arg=
+
+copy_on_change=false
+no_target_directory=
+
+usage="\
+Usage: $0 [OPTION]... [-T] SRCFILE DSTFILE
+   or: $0 [OPTION]... SRCFILES... DIRECTORY
+   or: $0 [OPTION]... -t DIRECTORY SRCFILES...
+   or: $0 [OPTION]... -d DIRECTORIES...
+
+In the 1st form, copy SRCFILE to DSTFILE.
+In the 2nd and 3rd, copy all SRCFILES to DIRECTORY.
+In the 4th, create DIRECTORIES.
+
+Options:
+     --help     display this help and exit.
+     --version  display version info and exit.
+
+  -c            (ignored)
+  -C            install only if different (preserve the last data modification time)
+  -d            create directories instead of installing files.
+  -g GROUP      $chgrpprog installed files to GROUP.
+  -m MODE       $chmodprog installed files to MODE.
+  -o USER       $chownprog installed files to USER.
+  -s            $stripprog installed files.
+  -t DIRECTORY  install into DIRECTORY.
+  -T            report an error if DSTFILE is a directory.
+
+Environment variables override the default commands:
+  CHGRPPROG CHMODPROG CHOWNPROG CMPPROG CPPROG MKDIRPROG MVPROG
+  RMPROG STRIPPROG
+"
+
+while test $# -ne 0; do
+  case $1 in
+    -c) ;;
+
+    -C) copy_on_change=true;;
+
+    -d) dir_arg=true;;
+
+    -g) chgrpcmd="$chgrpprog $2"
+	shift;;
+
+    --help) echo "$usage"; exit $?;;
+
+    -m) mode=$2
+	case $mode in
+	  *' '* | *'	'* | *'
+'*	  | *'*'* | *'?'* | *'['*)
+	    echo "$0: invalid mode: $mode" >&2
+	    exit 1;;
+	esac
+	shift;;
+
+    -o) chowncmd="$chownprog $2"
+	shift;;
+
+    -s) stripcmd=$stripprog;;
+
+    -t) dst_arg=$2
+	# Protect names problematic for `test' and other utilities.
+	case $dst_arg in
+	  -* | [=\(\)!]) dst_arg=./$dst_arg;;
+	esac
+	shift;;
+
+    -T) no_target_directory=true;;
+
+    --version) echo "$0 $scriptversion"; exit $?;;
+
+    --)	shift
+	break;;
+
+    -*)	echo "$0: invalid option: $1" >&2
+	exit 1;;
+
+    *)  break;;
+  esac
+  shift
 done
+
+if test $# -ne 0 && test -z "$dir_arg$dst_arg"; then
+  # When -d is used, all remaining arguments are directories to create.
+  # When -t is used, the destination is already specified.
+  # Otherwise, the last argument is the destination.  Remove it from $@.
+  for arg
+  do
+    if test -n "$dst_arg"; then
+      # $@ is not empty: it contains at least $arg.
+      set fnord "$@" "$dst_arg"
+      shift # fnord
+    fi
+    shift # arg
+    dst_arg=$arg
+    # Protect names problematic for `test' and other utilities.
+    case $dst_arg in
+      -* | [=\(\)!]) dst_arg=./$dst_arg;;
+    esac
+  done
 fi
 
-if [ x"$dir_arg" != x ]
-then
-	$doit $instcmd $dst &&
-
-	if [ x"$chowncmd" != x ]; then $doit $chowncmd $dst; else true ; fi &&
-	if [ x"$chgrpcmd" != x ]; then $doit $chgrpcmd $dst; else true ; fi &&
-	if [ x"$stripcmd" != x ]; then $doit $stripcmd $dst; else true ; fi &&
-	if [ x"$chmodcmd" != x ]; then $doit $chmodcmd $dst; else true ; fi
-else
+if test $# -eq 0; then
+  if test -z "$dir_arg"; then
+    echo "$0: no input file specified." >&2
+    exit 1
+  fi
+  # It's OK to call `install-sh -d' without argument.
+  # This can happen when creating conditional directories.
+  exit 0
+fi
 
-# If we're going to rename the final executable, determine the name now.
+if test -z "$dir_arg"; then
+  do_exit='(exit $ret); exit $ret'
+  trap "ret=129; $do_exit" 1
+  trap "ret=130; $do_exit" 2
+  trap "ret=141; $do_exit" 13
+  trap "ret=143; $do_exit" 15
+
+  # Set umask so as not to create temps with too-generous modes.
+  # However, 'strip' requires both read and write access to temps.
+  case $mode in
+    # Optimize common cases.
+    *644) cp_umask=133;;
+    *755) cp_umask=22;;
+
+    *[0-7])
+      if test -z "$stripcmd"; then
+	u_plus_rw=
+      else
+	u_plus_rw='% 200'
+      fi
+      cp_umask=`expr '(' 777 - $mode % 1000 ')' $u_plus_rw`;;
+    *)
+      if test -z "$stripcmd"; then
+	u_plus_rw=
+      else
+	u_plus_rw=,u+rw
+      fi
+      cp_umask=$mode$u_plus_rw;;
+  esac
+fi
 
-	if [ x"$transformarg" = x ]
-	then
-		dstfile=`basename $dst`
+for src
+do
+  # Protect names problematic for `test' and other utilities.
+  case $src in
+    -* | [=\(\)!]) src=./$src;;
+  esac
+
+  if test -n "$dir_arg"; then
+    dst=$src
+    dstdir=$dst
+    test -d "$dstdir"
+    dstdir_status=$?
+  else
+
+    # Waiting for this to be detected by the "$cpprog $src $dsttmp" command
+    # might cause directories to be created, which would be especially bad
+    # if $src (and thus $dsttmp) contains '*'.
+    if test ! -f "$src" && test ! -d "$src"; then
+      echo "$0: $src does not exist." >&2
+      exit 1
+    fi
+
+    if test -z "$dst_arg"; then
+      echo "$0: no destination specified." >&2
+      exit 1
+    fi
+    dst=$dst_arg
+
+    # If destination is a directory, append the input filename; won't work
+    # if double slashes aren't ignored.
+    if test -d "$dst"; then
+      if test -n "$no_target_directory"; then
+	echo "$0: $dst_arg: Is a directory" >&2
+	exit 1
+      fi
+      dstdir=$dst
+      dst=$dstdir/`basename "$src"`
+      dstdir_status=0
+    else
+      # Prefer dirname, but fall back on a substitute if dirname fails.
+      dstdir=`
+	(dirname "$dst") 2>/dev/null ||
+	expr X"$dst" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	     X"$dst" : 'X\(//\)[^/]' \| \
+	     X"$dst" : 'X\(//\)$' \| \
+	     X"$dst" : 'X\(/\)' \| . 2>/dev/null ||
+	echo X"$dst" |
+	    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+		   s//\1/
+		   q
+		 }
+		 /^X\(\/\/\)[^/].*/{
+		   s//\1/
+		   q
+		 }
+		 /^X\(\/\/\)$/{
+		   s//\1/
+		   q
+		 }
+		 /^X\(\/\).*/{
+		   s//\1/
+		   q
+		 }
+		 s/.*/./; q'
+      `
+
+      test -d "$dstdir"
+      dstdir_status=$?
+    fi
+  fi
+
+  obsolete_mkdir_used=false
+
+  if test $dstdir_status != 0; then
+    case $posix_mkdir in
+      '')
+	# Create intermediate dirs using mode 755 as modified by the umask.
+	# This is like FreeBSD 'install' as of 1997-10-28.
+	umask=`umask`
+	case $stripcmd.$umask in
+	  # Optimize common cases.
+	  *[2367][2367]) mkdir_umask=$umask;;
+	  .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;
+
+	  *[0-7])
+	    mkdir_umask=`expr $umask + 22 \
+	      - $umask % 100 % 40 + $umask % 20 \
+	      - $umask % 10 % 4 + $umask % 2
+	    `;;
+	  *) mkdir_umask=$umask,go-w;;
+	esac
+
+	# With -d, create the new directory with the user-specified mode.
+	# Otherwise, rely on $mkdir_umask.
+	if test -n "$dir_arg"; then
+	  mkdir_mode=-m$mode
 	else
-		dstfile=`basename $dst $transformbasename |
-			sed $transformarg`$transformbasename
+	  mkdir_mode=
 	fi
 
-# don't allow the sed command to completely eliminate the filename
+	posix_mkdir=false
+	case $umask in
+	  *[123567][0-7][0-7])
+	    # POSIX mkdir -p sets u+wx bits regardless of umask, which
+	    # is incompatible with FreeBSD 'install' when (umask & 300) != 0.
+	    ;;
+	  *)
+	    tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$
+	    trap 'ret=$?; rmdir "$tmpdir/d" "$tmpdir" 2>/dev/null; exit $ret' 0
+
+	    if (umask $mkdir_umask &&
+		exec $mkdirprog $mkdir_mode -p -- "$tmpdir/d") >/dev/null 2>&1
+	    then
+	      if test -z "$dir_arg" || {
+		   # Check for POSIX incompatibilities with -m.
+		   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or
+		   # other-writeable bit of parent directory when it shouldn't.
+		   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.
+		   ls_ld_tmpdir=`ls -ld "$tmpdir"`
+		   case $ls_ld_tmpdir in
+		     d????-?r-*) different_mode=700;;
+		     d????-?--*) different_mode=755;;
+		     *) false;;
+		   esac &&
+		   $mkdirprog -m$different_mode -p -- "$tmpdir" && {
+		     ls_ld_tmpdir_1=`ls -ld "$tmpdir"`
+		     test "$ls_ld_tmpdir" = "$ls_ld_tmpdir_1"
+		   }
+		 }
+	      then posix_mkdir=:
+	      fi
+	      rmdir "$tmpdir/d" "$tmpdir"
+	    else
+	      # Remove any dirs left behind by ancient mkdir implementations.
+	      rmdir ./$mkdir_mode ./-p ./-- 2>/dev/null
+	    fi
+	    trap '' 0;;
+	esac;;
+    esac
 
-	if [ x"$dstfile" = x ]
-	then
-		dstfile=`basename $dst`
+    if
+      $posix_mkdir && (
+	umask $mkdir_umask &&
+	$doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir"
+      )
+    then :
+    else
+
+      # The umask is ridiculous, or mkdir does not conform to POSIX,
+      # or it failed possibly due to a race condition.  Create the
+      # directory the slow way, step by step, checking for races as we go.
+
+      case $dstdir in
+	/*) prefix='/';;
+	[-=\(\)!]*) prefix='./';;
+	*)  prefix='';;
+      esac
+
+      eval "$initialize_posix_glob"
+
+      oIFS=$IFS
+      IFS=/
+      $posix_glob set -f
+      set fnord $dstdir
+      shift
+      $posix_glob set +f
+      IFS=$oIFS
+
+      prefixes=
+
+      for d
+      do
+	test X"$d" = X && continue
+
+	prefix=$prefix$d
+	if test -d "$prefix"; then
+	  prefixes=
 	else
-		true
+	  if $posix_mkdir; then
+	    (umask=$mkdir_umask &&
+	     $doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir") && break
+	    # Don't fail if two instances are running concurrently.
+	    test -d "$prefix" || exit 1
+	  else
+	    case $prefix in
+	      *\'*) qprefix=`echo "$prefix" | sed "s/'/'\\\\\\\\''/g"`;;
+	      *) qprefix=$prefix;;
+	    esac
+	    prefixes="$prefixes '$qprefix'"
+	  fi
 	fi
+	prefix=$prefix/
+      done
 
-# Make a temp file name in the proper directory.
-
-	dsttmp=$dstdir/#inst.$$#
-
-# Move or copy the file name to the temp name
-
-	$doit $instcmd $src $dsttmp &&
-
-	trap "rm -f ${dsttmp}" 0 &&
-
-# and set any options; do chmod last to preserve setuid bits
-
-# If any of these fail, we abort the whole thing.  If we want to
-# ignore errors from any of these, just make sure not to ignore
-# errors from the above "$doit $instcmd $src $dsttmp" command.
-
-	if [ x"$chowncmd" != x ]; then $doit $chowncmd $dsttmp; else true;fi &&
-	if [ x"$chgrpcmd" != x ]; then $doit $chgrpcmd $dsttmp; else true;fi &&
-	if [ x"$stripcmd" != x ]; then $doit $stripcmd $dsttmp; else true;fi &&
-	if [ x"$chmodcmd" != x ]; then $doit $chmodcmd $dsttmp; else true;fi &&
-
-# Now rename the file to the real destination.
-
-	$doit $rmcmd -f $dstdir/$dstfile &&
-	$doit $mvcmd $dsttmp $dstdir/$dstfile
-
-fi &&
+      if test -n "$prefixes"; then
+	# Don't fail if two instances are running concurrently.
+	(umask $mkdir_umask &&
+	 eval "\$doit_exec \$mkdirprog $prefixes") ||
+	  test -d "$dstdir" || exit 1
+	obsolete_mkdir_used=true
+      fi
+    fi
+  fi
+
+  if test -n "$dir_arg"; then
+    { test -z "$chowncmd" || $doit $chowncmd "$dst"; } &&
+    { test -z "$chgrpcmd" || $doit $chgrpcmd "$dst"; } &&
+    { test "$obsolete_mkdir_used$chowncmd$chgrpcmd" = false ||
+      test -z "$chmodcmd" || $doit $chmodcmd $mode "$dst"; } || exit 1
+  else
+
+    # Make a couple of temp file names in the proper directory.
+    dsttmp=$dstdir/_inst.$$_
+    rmtmp=$dstdir/_rm.$$_
+
+    # Trap to clean up those temp files at exit.
+    trap 'ret=$?; rm -f "$dsttmp" "$rmtmp" && exit $ret' 0
+
+    # Copy the file name to the temp name.
+    (umask $cp_umask && $doit_exec $cpprog "$src" "$dsttmp") &&
+
+    # and set any options; do chmod last to preserve setuid bits.
+    #
+    # If any of these fail, we abort the whole thing.  If we want to
+    # ignore errors from any of these, just make sure not to ignore
+    # errors from the above "$doit $cpprog $src $dsttmp" command.
+    #
+    { test -z "$chowncmd" || $doit $chowncmd "$dsttmp"; } &&
+    { test -z "$chgrpcmd" || $doit $chgrpcmd "$dsttmp"; } &&
+    { test -z "$stripcmd" || $doit $stripcmd "$dsttmp"; } &&
+    { test -z "$chmodcmd" || $doit $chmodcmd $mode "$dsttmp"; } &&
+
+    # If -C, don't bother to copy if it wouldn't change the file.
+    if $copy_on_change &&
+       old=`LC_ALL=C ls -dlL "$dst"	2>/dev/null` &&
+       new=`LC_ALL=C ls -dlL "$dsttmp"	2>/dev/null` &&
+
+       eval "$initialize_posix_glob" &&
+       $posix_glob set -f &&
+       set X $old && old=:$2:$4:$5:$6 &&
+       set X $new && new=:$2:$4:$5:$6 &&
+       $posix_glob set +f &&
+
+       test "$old" = "$new" &&
+       $cmpprog "$dst" "$dsttmp" >/dev/null 2>&1
+    then
+      rm -f "$dsttmp"
+    else
+      # Rename the file to the real destination.
+      $doit $mvcmd -f "$dsttmp" "$dst" 2>/dev/null ||
+
+      # The rename failed, perhaps because mv can't rename something else
+      # to itself, or perhaps because mv is so ancient that it does not
+      # support -f.
+      {
+	# Now remove or move aside any old file at destination location.
+	# We try this two ways since rm can't unlink itself on some
+	# systems and the destination file might be busy for other
+	# reasons.  In this case, the final cleanup might fail but the new
+	# file should still install successfully.
+	{
+	  test ! -f "$dst" ||
+	  $doit $rmcmd -f "$dst" 2>/dev/null ||
+	  { $doit $mvcmd -f "$dst" "$rmtmp" 2>/dev/null &&
+	    { $doit $rmcmd -f "$rmtmp" 2>/dev/null; :; }
+	  } ||
+	  { echo "$0: cannot unlink or rename $dst" >&2
+	    (exit 1); exit 1
+	  }
+	} &&
+
+	# Now rename the file to the real destination.
+	$doit $mvcmd "$dsttmp" "$dst"
+      }
+    fi || exit 1
 
+    trap '' 0
+  fi
+done
 
-exit 0
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-time-zone: "UTC"
+# time-stamp-end: "; # UTC"
+# End:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/asyn-thread.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/asyn-thread.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/asyn-thread.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/asyn-thread.c	2013-02-19 05:52:18.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -167,13 +167,13 @@
 #endif
 };
 
 struct thread_data {
   curl_thread_t thread_hnd;
   unsigned int poll_interval;
-  int interval_end;
+  long interval_end;
   struct thread_sync_data tsd;
 };
 
 static struct thread_sync_data *conn_thread_sync_data(struct connectdata *conn)
 {
   return &(((struct thread_data *)conn->async.os_specific)->tsd);
@@ -384,67 +384,33 @@
 
   SET_ERRNO(err);
 
   return FALSE;
 }
 
-#if defined(HAVE_GETADDRINFO) && !defined(HAVE_GAI_STRERROR) && !defined(WIN32)
-/* NetWare has getaddrinfo but lacks gai_strerror.
-   Windows has a gai_strerror but it is bad (not thread-safe) and the generic
-   socket error string function can be used for this pupose. */
-static const char *gai_strerror(int ecode)
-{
-  switch (ecode) {
-  case EAI_AGAIN:
-    return "The name could not be resolved at this time";
-  case EAI_BADFLAGS:
-    return "The flags parameter had an invalid value";
-  case EAI_FAIL:
-    return "A non-recoverable error occurred when attempting to "
-      "resolve the name";
-  case EAI_FAMILY:
-    return "The address family was not recognized";
-  case EAI_MEMORY:
-    return "Out of memory";
-  case EAI_NONAME:
-    return "The name does not resolve for the supplied parameters";
-  case EAI_SERVICE:
-    return "The service passed was not recognized for the "
-      "specified socket type"
-  case EAI_SOCKTYPE:
-    return "The intended socket type was not recognized"
-  case EAI_SYSTEM:
-    return "A system error occurred";
-  case EAI_OVERFLOW:
-    return "An argument buffer overflowed";
-  default:
-    return "Unknown error";
-
-/* define this now as this is a private implementation of said function */
-#define HAVE_GAI_STRERROR
-}
-#endif
-
-
 /*
  * resolver_error() calls failf() with the appropriate message after a resolve
  * error
  */
 
-static void resolver_error(struct connectdata *conn, const char *host_or_proxy)
+static CURLcode resolver_error(struct connectdata *conn)
 {
-  failf(conn->data, "Could not resolve %s: %s; %s", host_or_proxy,
-        conn->async.hostname,
-#ifdef HAVE_GAI_STRERROR
-        /* NetWare doesn't have gai_strerror and on Windows it isn't deemed
-           thread-safe */
-        gai_strerror(conn->async.status)
-#else
-        Curl_strerror(conn, conn->async.status)
-#endif
-    );
+  const char *host_or_proxy;
+  CURLcode rc;
+  if(conn->bits.httpproxy) {
+    host_or_proxy = "proxy";
+    rc = CURLE_COULDNT_RESOLVE_PROXY;
+  }
+  else {
+    host_or_proxy = "host";
+    rc = CURLE_COULDNT_RESOLVE_HOST;
+  }
+
+  failf(conn->data, "Could not resolve %s: %s", host_or_proxy,
+        conn->async.hostname);
+  return rc;
 }
 
 /*
  * Curl_resolver_wait_resolv()
  *
  * waits for a resolve to finish. This function should be avoided since using
@@ -470,23 +436,15 @@
 
   conn->async.done = TRUE;
 
   if(entry)
     *entry = conn->async.dns;
 
-  if(!conn->async.dns) {
-    /* a name was not resolved */
-    if(conn->bits.httpproxy) {
-      resolver_error(conn, "proxy");
-      rc = CURLE_COULDNT_RESOLVE_PROXY;
-    }
-    else {
-      resolver_error(conn, "host");
-      rc = CURLE_COULDNT_RESOLVE_HOST;
-    }
-  }
+  if(!conn->async.dns)
+    /* a name was not resolved, report error */
+    rc = resolver_error(conn);
 
   destroy_async_data(&conn->async);
 
   if(!conn->async.dns)
     conn->bits.close = TRUE;
 
@@ -515,23 +473,24 @@
   Curl_mutex_acquire(td->tsd.mtx);
   done = td->tsd.done;
   Curl_mutex_release(td->tsd.mtx);
 
   if(done) {
     getaddrinfo_complete(conn);
-    destroy_async_data(&conn->async);
 
     if(!conn->async.dns) {
-      resolver_error(conn, "host");
-      return CURLE_COULDNT_RESOLVE_HOST;
+      CURLcode rc = resolver_error(conn);
+      destroy_async_data(&conn->async);
+      return rc;
     }
+    destroy_async_data(&conn->async);
     *entry = conn->async.dns;
   }
   else {
     /* poll for name lookup done with exponential backoff up to 250ms */
-    int elapsed = Curl_tvdiff(Curl_tvnow(), data->progress.t_startsingle);
+    long elapsed = Curl_tvdiff(Curl_tvnow(), data->progress.t_startsingle);
     if(elapsed < 0)
       elapsed = 0;
 
     if(td->poll_interval == 0)
       /* Start at 1ms poll interval */
       td->poll_interval = 1;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/checksrc.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/checksrc.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/checksrc.pl	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/checksrc.pl	2013-04-12 02:46:54.000000000 +0800
@@ -3,13 +3,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 2011 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -150,12 +150,18 @@
         }
         # check for "){"
         if($l =~ /^(.*)\)\{/) {
             checkwarn($line, length($1)+1, $file, $l, "missing space after close paren");
         }
 
+        # scan for use of banned functions
+        if($l =~ /^(.*\W)(sprintf|vsprintf|strcat|strncat|gets)\s*\(/) {
+            checkwarn($line, length($1), $file, $l,
+                      "use of $2 is banned");
+        }
+
         # check for open brace first on line but not first column
         # only alert if previous line ended with a close paren and wasn't a cpp
         # line
         if((($prevl =~ /\)\z/) && ($prevl !~ /^ *#/)) && ($l =~ /^( +)\{/)) {
             checkwarn($line, length($1), $file, $l, "badly placed open brace");
         }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-dos.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-dos.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-dos.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-dos.h	2013-02-15 18:05:20.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -76,13 +76,12 @@
 #define HAVE_STRUCT_TIMEVAL    1
 #define HAVE_STRUCT_IN6_ADDR   1
 #define HAVE_SYS_IOCTL_H       1
 #define HAVE_SYS_SOCKET_H      1
 #define HAVE_SYS_STAT_H        1
 #define HAVE_SYS_TYPES_H       1
-#define HAVE_TERMIOS_H         1
 #define HAVE_TIME_H            1
 #define HAVE_UNISTD_H          1
 
 #define NEED_MALLOC_H          1
 
 #define RETSIGTYPE             void
@@ -146,46 +145,43 @@
 #define CURL_DISABLE_LDAP        1
 
 #define in_addr_t  u_long
 
 #if defined(__HIGHC__) || \
     (defined(__GNUC__) && (__GNUC__ < 4))
-#define ssize_t    int
+  #define ssize_t  int
 #endif
 
 #define CURL_CA_BUNDLE  getenv("CURL_CA_BUNDLE")
 
 /* Target HAVE_x section */
 
 #if defined(DJGPP)
   #define HAVE_BASENAME   1
   #define HAVE_STRCASECMP 1
   #define HAVE_SIGACTION  1
   #define HAVE_SIGSETJMP  1
   #define HAVE_SYS_TIME_H 1
+  #define HAVE_TERMIOS_H  1
   #define HAVE_VARIADIC_MACROS_GCC 1
 
-  #if (DJGPP_MINOR >= 4)
-    #define HAVE_STRLCAT  1
-  #endif
-
   /* Because djgpp <= 2.03 doesn't have snprintf() etc. */
   #if (DJGPP_MINOR < 4)
     #define _MPRINTF_REPLACE
   #endif
 
 #elif defined(__WATCOMC__)
   #define HAVE_STRCASECMP 1
 
 #elif defined(__HIGHC__)
   #define HAVE_SYS_TIME_H 1
+  #define strerror(e) strerror_s_((e))
 #endif
 
 #ifdef MSDOS  /* Watt-32 */
-  #define HAVE_CLOSESOCKET_CAMEL  1
-  #define CloseSocket(s)          close_s((s))
+  #define HAVE_CLOSE_S    1
 #endif
 
 #undef word
 #undef byte
 
 #endif /* HEADER_CURL_CONFIG_DOS_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-os400.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-os400.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-os400.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-os400.h	2013-02-14 17:41:45.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -295,15 +295,12 @@
 /* Define if you have the <strings.h> header file. */
 #define HAVE_STRINGS_H
 
 /* Define if you have the <string.h> header file. */
 #define HAVE_STRING_H
 
-/* Define if you have the `strlcat' function. */
-#undef HAVE_STRLCAT
-
 /* Define if you have the `strlcpy' function. */
 #undef HAVE_STRLCPY
 
 /* Define if you have the <stropts.h> header file. */
 #undef HAVE_STROPTS_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-riscos.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-riscos.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-riscos.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-riscos.h	2013-02-14 17:41:45.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -302,15 +302,12 @@
 /* Define if you have the <strings.h> header file. */
 #undef HAVE_STRINGS_H
 
 /* Define if you have the <string.h> header file. */
 #define HAVE_STRING_H
 
-/* Define if you have the `strlcat' function. */
-#undef HAVE_STRLCAT
-
 /* Define if you have the `strlcpy' function. */
 #undef HAVE_STRLCPY
 
 /* Define if you have the `strstr' function. */
 #define HAVE_STRSTR
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-symbian.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-symbian.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-symbian.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-symbian.h	2013-03-05 18:02:20.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -501,15 +501,12 @@
 /* Define to 1 if you have the <stdlib.h> header file. */
 #define HAVE_STDLIB_H 1
 
 /* Define to 1 if you have the `strcasecmp' function. */
 #define HAVE_STRCASECMP 1
 
-/* Define to 1 if you have the `strcasestr' function. */
-#define HAVE_STRCASESTR 1
-
 /* Define to 1 if you have the `strcmpi' function. */
 /* #undef HAVE_STRCMPI */
 
 /* Define to 1 if you have the `strdup' function. */
 #define HAVE_STRDUP 1
 
@@ -522,15 +519,12 @@
 /* Define to 1 if you have the <strings.h> header file. */
 #define HAVE_STRINGS_H 1
 
 /* Define to 1 if you have the <string.h> header file. */
 #define HAVE_STRING_H 1
 
-/* Define to 1 if you have the `strlcat' function. */
-#define HAVE_STRLCAT 1
-
 /* Define to 1 if you have the `strlcpy' function. */
 #define HAVE_STRLCPY 1
 
 /* Define to 1 if you have the `strstr' function. */
 #define HAVE_STRSTR 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-tpf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-tpf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-tpf.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-tpf.h	2013-02-14 17:41:45.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -468,15 +468,12 @@
 /* Define to 1 if you have the <strings.h> header file. */
 #define HAVE_STRINGS_H 1
 
 /* Define to 1 if you have the <string.h> header file. */
 #define HAVE_STRING_H 1
 
-/* Define to 1 if you have the `strlcat' function. */
-/* #undef HAVE_STRLCAT */
-
 /* Define to 1 if you have the `strlcpy' function. */
 /* #undef HAVE_STRLCPY */
 
 /* Define to 1 if you have the `strstr' function. */
 #define HAVE_STRSTR 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-vxworks.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-vxworks.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-vxworks.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-vxworks.h	2013-03-05 18:02:20.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -568,15 +568,12 @@
 /* Define to 1 if you have the <stdlib.h> header file. */
 #define HAVE_STDLIB_H 1
 
 /* Define to 1 if you have the strcasecmp function. */
 #define HAVE_STRCASECMP 1
 
-/* Define to 1 if you have the strcasestr function. */
-/* #undef HAVE_STRCASESTR */
-
 /* Define to 1 if you have the strcmpi function. */
 /* #undef HAVE_STRCMPI */
 
 /* Define to 1 if you have the strdup function. */
 #define HAVE_STRDUP 1
 
@@ -589,15 +586,12 @@
 /* Define to 1 if you have the <strings.h> header file. */
 #define HAVE_STRINGS_H 1
 
 /* Define to 1 if you have the <string.h> header file. */
 #define HAVE_STRING_H 1
 
-/* Define to 1 if you have the strlcat function. */
-/* #undef HAVE_STRLCAT */
-
 /* Define to 1 if you have the `strlcpy' function. */
 /* #undef HAVE_STRLCPY */
 
 /* Define to 1 if you have the strncasecmp function. */
 #define HAVE_STRNCASECMP 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-win32.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-win32.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/config-win32.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/config-win32.h	2013-04-12 05:52:12.000000000 +0800
@@ -608,14 +608,17 @@
  * Undefine both USE_ARES and USE_THREADS_WIN32 for synchronous DNS.
  */
 
 /* Define to enable c-ares asynchronous DNS lookups. */
 /* #define USE_ARES 1 */
 
-/* Define to enable threaded asynchronous DNS lookups. */
-#define USE_THREADS_WIN32 1
+/* Default define to enable threaded asynchronous DNS lookups. */
+#if !defined(USE_SYNC_DNS) && !defined(USE_ARES) && \
+    !defined(USE_THREADS_WIN32)
+#  define USE_THREADS_WIN32 1
+#endif
 
 #if defined(USE_ARES) && defined(USE_THREADS_WIN32)
 #  error "Only one DNS lookup specialty may be defined at most"
 #endif
 
 /* ---------------------------------------------------------------- */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/connect.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/connect.c	2013-04-12 02:46:54.000000000 +0800
@@ -84,31 +84,57 @@
 /* This isn't actually supported under Symbian OS */
 #undef SO_NOSIGPIPE
 #endif
 
 static bool verifyconnect(curl_socket_t sockfd, int *error);
 
-#ifdef __DragonFly__
-/* DragonFlyBSD uses millisecond as KEEPIDLE and KEEPINTVL units */
+#if defined(__DragonFly__) || defined(HAVE_WINSOCK_H)
+/* DragonFlyBSD and Windows use millisecond units */
 #define KEEPALIVE_FACTOR(x) (x *= 1000)
 #else
 #define KEEPALIVE_FACTOR(x)
 #endif
 
+#if defined(HAVE_WINSOCK_H) && !defined(SIO_KEEPALIVE_VALS)
+#define SIO_KEEPALIVE_VALS    _WSAIOW(IOC_VENDOR,4)
+
+struct tcp_keepalive {
+  u_long onoff;
+  u_long keepalivetime;
+  u_long keepaliveinterval;
+};
+#endif
+
 static void
 tcpkeepalive(struct SessionHandle *data,
              curl_socket_t sockfd)
 {
   int optval = data->set.tcp_keepalive?1:0;
 
   /* only set IDLE and INTVL if setting KEEPALIVE is successful */
   if(setsockopt(sockfd, SOL_SOCKET, SO_KEEPALIVE,
         (void *)&optval, sizeof(optval)) < 0) {
     infof(data, "Failed to set SO_KEEPALIVE on fd %d\n", sockfd);
   }
   else {
+#if defined(SIO_KEEPALIVE_VALS)
+    struct tcp_keepalive vals;
+    DWORD dummy;
+    vals.onoff = 1;
+    optval = curlx_sltosi(data->set.tcp_keepidle);
+    KEEPALIVE_FACTOR(optval);
+    vals.keepalivetime = optval;
+    optval = curlx_sltosi(data->set.tcp_keepintvl);
+    KEEPALIVE_FACTOR(optval);
+    vals.keepaliveinterval = optval;
+    if(WSAIoctl(sockfd, SIO_KEEPALIVE_VALS, (LPVOID) &vals, sizeof(vals),
+                NULL, 0, &dummy, NULL, NULL) != 0) {
+      infof(data, "Failed to set SIO_KEEPALIVE_VALS on fd %d: %d\n",
+            (int)sockfd, WSAGetLastError());
+    }
+#else
 #ifdef TCP_KEEPIDLE
     optval = curlx_sltosi(data->set.tcp_keepidle);
     KEEPALIVE_FACTOR(optval);
     if(setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPIDLE,
           (void *)&optval, sizeof(optval)) < 0) {
       infof(data, "Failed to set TCP_KEEPIDLE on fd %d\n", sockfd);
@@ -119,12 +145,22 @@
     KEEPALIVE_FACTOR(optval);
     if(setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPINTVL,
           (void *)&optval, sizeof(optval)) < 0) {
       infof(data, "Failed to set TCP_KEEPINTVL on fd %d\n", sockfd);
     }
 #endif
+#ifdef TCP_KEEPALIVE
+    /* Mac OS X style */
+    optval = curlx_sltosi(data->set.tcp_keepidle);
+    KEEPALIVE_FACTOR(optval);
+    if(setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPALIVE,
+          (void *)&optval, sizeof(optval)) < 0) {
+      infof(data, "Failed to set TCP_KEEPALIVE on fd %d\n", sockfd);
+    }
+#endif
+#endif
   }
 }
 
 static CURLcode
 singleipconnect(struct connectdata *conn,
                 const Curl_addrinfo *ai, /* start connecting to this */
@@ -280,47 +316,60 @@
     else if(strncmp(host_prefix, dev, strlen(host_prefix)) == 0) {
       dev += strlen(host_prefix);
       is_host = TRUE;
     }
 
     /* interface */
-    if(!is_host && (is_interface || Curl_if_is_interface_name(dev))) {
-      if(Curl_if2ip(af, dev, myhost, sizeof(myhost)) == NULL)
-        return CURLE_INTERFACE_FAILED;
-
-      /*
-       * We now have the numerical IP address in the 'myhost' buffer
-       */
-      infof(data, "Local Interface %s is ip %s using address family %i\n",
-            dev, myhost, af);
-      done = 1;
+    if(!is_host) {
+      switch(Curl_if2ip(af, conn->scope, dev, myhost, sizeof(myhost))) {
+        case IF2IP_NOT_FOUND:
+          if(is_interface) {
+            /* Do not fall back to treating it as a host name */
+            failf(data, "Couldn't bind to interface '%s'", dev);
+            return CURLE_INTERFACE_FAILED;
+          }
+          break;
+        case IF2IP_AF_NOT_SUPPORTED:
+          /* Signal the caller to try another address family if available */
+          return CURLE_UNSUPPORTED_PROTOCOL;
+        case IF2IP_FOUND:
+          is_interface = TRUE;
+          /*
+           * We now have the numerical IP address in the 'myhost' buffer
+           */
+          infof(data, "Local Interface %s is ip %s using address family %i\n",
+                dev, myhost, af);
+          done = 1;
 
 #ifdef SO_BINDTODEVICE
-      /* I am not sure any other OSs than Linux that provide this feature, and
-       * at the least I cannot test. --Ben
-       *
-       * This feature allows one to tightly bind the local socket to a
-       * particular interface.  This will force even requests to other local
-       * interfaces to go out the external interface.
-       *
-       *
-       * Only bind to the interface when specified as interface, not just as a
-       * hostname or ip address.
-       */
-      if(setsockopt(sockfd, SOL_SOCKET, SO_BINDTODEVICE,
-                    dev, (curl_socklen_t)strlen(dev)+1) != 0) {
-        error = SOCKERRNO;
-        infof(data, "SO_BINDTODEVICE %s failed with errno %d: %s;"
-              " will do regular bind\n",
-              dev, error, Curl_strerror(conn, error));
-        /* This is typically "errno 1, error: Operation not permitted" if
-           you're not running as root or another suitable privileged user */
-      }
+          /* I am not sure any other OSs than Linux that provide this feature,
+           * and at the least I cannot test. --Ben
+           *
+           * This feature allows one to tightly bind the local socket to a
+           * particular interface.  This will force even requests to other
+           * local interfaces to go out the external interface.
+           *
+           *
+           * Only bind to the interface when specified as interface, not just
+           * as a hostname or ip address.
+           */
+          if(setsockopt(sockfd, SOL_SOCKET, SO_BINDTODEVICE,
+                        dev, (curl_socklen_t)strlen(dev)+1) != 0) {
+            error = SOCKERRNO;
+            infof(data, "SO_BINDTODEVICE %s failed with errno %d: %s;"
+                  " will do regular bind\n",
+                  dev, error, Curl_strerror(conn, error));
+            /* This is typically "errno 1, error: Operation not permitted" if
+               you're not running as root or another suitable privileged
+               user */
+          }
 #endif
+          break;
+      }
     }
-    else {
+    if(!is_interface) {
       /*
        * This was not an interface, resolve the name as a host name
        * or IP number
        *
        * Temporarily force name resolution to use only the address type
        * of the connection. The resolve functions should really be changed
@@ -358,17 +407,32 @@
       }
     }
 
     if(done > 0) {
 #ifdef ENABLE_IPV6
       /* ipv6 address */
-      if((af == AF_INET6) &&
-         (Curl_inet_pton(AF_INET6, myhost, &si6->sin6_addr) > 0)) {
-        si6->sin6_family = AF_INET6;
-        si6->sin6_port = htons(port);
-        sizeof_sa = sizeof(struct sockaddr_in6);
+      if(af == AF_INET6) {
+#ifdef HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID
+        char *scope_ptr = strchr(myhost, '%');
+
+        if(scope_ptr) *(scope_ptr++) = 0;
+#endif
+        if(Curl_inet_pton(AF_INET6, myhost, &si6->sin6_addr) > 0) {
+          si6->sin6_family = AF_INET6;
+          si6->sin6_port = htons(port);
+#ifdef HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID
+          if(scope_ptr) {
+            /* The "myhost" string either comes from Curl_if2ip or
+               from Curl_printable_address. The latter returns only
+               numeric scope IDs and the former returns none at all.
+               So the scope ID, if present, is known to be numeric */
+            si6->sin6_scope_id = atoi(scope_ptr);
+          }
+        }
+#endif
+          sizeof_sa = sizeof(struct sockaddr_in6);
       }
       else
 #endif
       /* ipv4 address */
       if((af == AF_INET) &&
          (Curl_inet_pton(AF_INET, myhost, &si4->sin_addr) > 0)) {
@@ -822,19 +886,41 @@
 
    http://support.microsoft.com/kb/823764
 
    Work-around: Make the Socket Send Buffer Size Larger Than the Program Send
    Buffer Size
 
+   The problem described in this knowledge-base is applied only to pre-Vista
+   Windows.  Following function trying to detect OS version and skips
+   SO_SNDBUF adjustment for Windows Vista and above.
 */
+#define DETECT_OS_NONE 0
+#define DETECT_OS_PREVISTA 1
+#define DETECT_OS_VISTA_OR_LATER 2
+
 void Curl_sndbufset(curl_socket_t sockfd)
 {
   int val = CURL_MAX_WRITE_SIZE + 32;
   int curval = 0;
   int curlen = sizeof(curval);
 
+  OSVERSIONINFO osver;
+  static int detectOsState = DETECT_OS_NONE;
+
+  if(detectOsState == DETECT_OS_NONE) {
+    memset(&osver, 0, sizeof(osver));
+    osver.dwOSVersionInfoSize = sizeof(osver);
+    detectOsState = DETECT_OS_PREVISTA;
+    if(GetVersionEx(&osver)) {
+      if(osver.dwMajorVersion >= 6)
+        detectOsState = DETECT_OS_VISTA_OR_LATER;
+    }
+  }
+  if(detectOsState == DETECT_OS_VISTA_OR_LATER)
+    return;
+
   if(getsockopt(sockfd, SOL_SOCKET, SO_SNDBUF, (char *)&curval, &curlen) == 0)
     if(curval > val)
       return;
 
   setsockopt(sockfd, SOL_SOCKET, SO_SNDBUF, (const char *)&val, sizeof(val));
 }
@@ -914,12 +1000,17 @@
   }
 
   /* possibly bind the local end to an IP, interface or port */
   res = bindlocal(conn, sockfd, addr.family);
   if(res) {
     Curl_closesocket(conn, sockfd); /* close socket and bail out */
+    if(res == CURLE_UNSUPPORTED_PROTOCOL) {
+      /* The address family is not supported on this interface.
+         We can continue trying addresses */
+      return CURLE_OK;
+    }
     return res;
   }
 
   /* set socket non-blocking */
   curlx_nonblock(sockfd, TRUE);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/cookie.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/cookie.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/cookie.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/cookie.c	2013-04-12 05:55:10.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -115,21 +115,35 @@
   if(co->version)
     free(co->version);
 
   free(co);
 }
 
-static bool tailmatch(const char *little, const char *bigone)
+static bool tailmatch(const char *cooke_domain, const char *hostname)
 {
-  size_t littlelen = strlen(little);
-  size_t biglen = strlen(bigone);
+  size_t cookie_domain_len = strlen(cooke_domain);
+  size_t hostname_len = strlen(hostname);
 
-  if(littlelen > biglen)
+  if(hostname_len < cookie_domain_len)
     return FALSE;
 
-  return Curl_raw_equal(little, bigone+biglen-littlelen) ? TRUE : FALSE;
+  if(!Curl_raw_equal(cooke_domain, hostname+hostname_len-cookie_domain_len))
+    return FALSE;
+
+  /* A lead char of cookie_domain is not '.'.
+     RFC6265 4.1.2.3. The Domain Attribute says:
+       For example, if the value of the Domain attribute is
+       "example.com", the user agent will include the cookie in the Cookie
+       header when making HTTP requests to example.com, www.example.com, and
+       www.corp.example.com.
+   */
+  if(hostname_len == cookie_domain_len)
+    return TRUE;
+  if('.' == *(hostname + hostname_len - cookie_domain_len - 1))
+    return TRUE;
+  return FALSE;
 }
 
 /*
  * Load cookies from all given cookie files (CURLOPT_COOKIEFILE).
  */
 void Curl_cookie_loadfiles(struct SessionHandle *data)
@@ -686,15 +700,15 @@
   if(!replace_old) {
     /* then make the last item point on this new one */
     if(lastc)
       lastc->next = co;
     else
       c->cookies = co;
+    c->numcookies++; /* one more cookie in the jar */
   }
 
-  c->numcookies++; /* one more cookie in the jar */
   return co;
 }
 
 /*****************************************************************************
  *
  * Curl_cookie_init()
@@ -774,17 +788,34 @@
 
 /* sort this so that the longest path gets before the shorter path */
 static int cookie_sort(const void *p1, const void *p2)
 {
   struct Cookie *c1 = *(struct Cookie **)p1;
   struct Cookie *c2 = *(struct Cookie **)p2;
+  size_t l1, l2;
+
+  /* 1 - compare cookie path lengths */
+  l1 = c1->path ? strlen(c1->path) : 0;
+  l2 = c2->path ? strlen(c2->path) : 0;
+
+  if(l1 != l2)
+    return (l2 > l1) ? 1 : -1 ; /* avoid size_t <=> int conversions */
+
+  /* 2 - compare cookie domain lengths */
+  l1 = c1->domain ? strlen(c1->domain) : 0;
+  l2 = c2->domain ? strlen(c2->domain) : 0;
+
+  if(l1 != l2)
+    return (l2 > l1) ? 1 : -1 ;  /* avoid size_t <=> int conversions */
 
-  size_t l1 = c1->path?strlen(c1->path):0;
-  size_t l2 = c2->path?strlen(c2->path):0;
+  /* 3 - compare cookie names */
+  if(c1->name && c2->name)
+    return strcmp(c1->name, c2->name);
 
-  return (l2 > l1) ? 1 : (l2 < l1) ? -1 : 0 ;
+  /* sorry, can't be more deterministic */
+  return 0;
 }
 
 /*****************************************************************************
  *
  * Curl_cookie_getlist()
  *
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_config.h.in	2013-02-06 17:48:21.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_config.h.in	2013-04-12 02:47:33.000000000 +0800
@@ -530,15 +530,12 @@
 /* Define to 1 if you have the `RAND_status' function. */
 #undef HAVE_RAND_STATUS
 
 /* Define to 1 if you have the recv function. */
 #undef HAVE_RECV
 
-/* Define to 1 if you have the recvfrom function. */
-#undef HAVE_RECVFROM
-
 /* Define to 1 if you have the <rsa.h> header file. */
 #undef HAVE_RSA_H
 
 /* Define to 1 if you have the select function. */
 #undef HAVE_SELECT
 
@@ -626,15 +623,12 @@
 /* Define to 1 if you have the <stdlib.h> header file. */
 #undef HAVE_STDLIB_H
 
 /* Define to 1 if you have the strcasecmp function. */
 #undef HAVE_STRCASECMP
 
-/* Define to 1 if you have the strcasestr function. */
-#undef HAVE_STRCASESTR
-
 /* Define to 1 if you have the strcmpi function. */
 #undef HAVE_STRCMPI
 
 /* Define to 1 if you have the strdup function. */
 #undef HAVE_STRDUP
 
@@ -647,15 +641,12 @@
 /* Define to 1 if you have the <strings.h> header file. */
 #undef HAVE_STRINGS_H
 
 /* Define to 1 if you have the <string.h> header file. */
 #undef HAVE_STRING_H
 
-/* Define to 1 if you have the strlcat function. */
-#undef HAVE_STRLCAT
-
 /* Define to 1 if you have the `strlcpy' function. */
 #undef HAVE_STRLCPY
 
 /* Define to 1 if you have the strncasecmp function. */
 #undef HAVE_STRNCASECMP
 
@@ -846,45 +837,12 @@
 /* Define to the version of this package. */
 #undef PACKAGE_VERSION
 
 /* a suitable file to read random data from */
 #undef RANDOM_FILE
 
-/* Define to the type qualifier pointed by arg 5 for recvfrom. */
-#undef RECVFROM_QUAL_ARG5
-
-/* Define to the type of arg 1 for recvfrom. */
-#undef RECVFROM_TYPE_ARG1
-
-/* Define to the type pointed by arg 2 for recvfrom. */
-#undef RECVFROM_TYPE_ARG2
-
-/* Define to 1 if the type pointed by arg 2 for recvfrom is void. */
-#undef RECVFROM_TYPE_ARG2_IS_VOID
-
-/* Define to the type of arg 3 for recvfrom. */
-#undef RECVFROM_TYPE_ARG3
-
-/* Define to the type of arg 4 for recvfrom. */
-#undef RECVFROM_TYPE_ARG4
-
-/* Define to the type pointed by arg 5 for recvfrom. */
-#undef RECVFROM_TYPE_ARG5
-
-/* Define to 1 if the type pointed by arg 5 for recvfrom is void. */
-#undef RECVFROM_TYPE_ARG5_IS_VOID
-
-/* Define to the type pointed by arg 6 for recvfrom. */
-#undef RECVFROM_TYPE_ARG6
-
-/* Define to 1 if the type pointed by arg 6 for recvfrom is void. */
-#undef RECVFROM_TYPE_ARG6_IS_VOID
-
-/* Define to the function return type for recvfrom. */
-#undef RECVFROM_TYPE_RETV
-
 /* Define to the type of arg 1 for recv. */
 #undef RECV_TYPE_ARG1
 
 /* Define to the type of arg 2 for recv. */
 #undef RECV_TYPE_ARG2
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_darwinssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_darwinssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_darwinssl.c	2013-01-29 16:05:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_darwinssl.c	2013-04-12 02:46:54.000000000 +0800
@@ -56,12 +56,13 @@
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 /* From MacTypes.h (which we can't include because it isn't present in iOS: */
 #define ioErr -36
+#define paramErr -50
 
 /* In Mountain Lion and iOS 5, Apple made some changes to the API. They
    added TLS 1.1 and 1.2 support, and deprecated and replaced some
    functions. You need to build against the Mountain Lion or iOS 5 SDK
    or later to get TLS 1.1 or 1.2 support working in cURL. We'll weak-link
    to the newer functions and use them if present in the user's OS.
@@ -94,14 +95,14 @@
   for(;;) {
     bytesRead = 0;
     rrtn = read(sock, currData, bytesToGo);
     if(rrtn <= 0) {
       /* this is guesswork... */
       theErr = errno;
-      if((rrtn == 0) && (theErr == 0)) {
-        /* try fix for iSync */
+      if(rrtn == 0) { /* EOF = server hung up */
+        /* the framework will turn this into errSSLClosedNoNotify */
         rtn = errSSLClosedGraceful;
       }
       else /* do the switch */
         switch(theErr) {
           case ENOENT:
             /* connection closed */
@@ -357,12 +358,13 @@
     case TLS_DHE_RSA_WITH_AES_256_CBC_SHA:
       return "TLS_DHE_RSA_WITH_AES_256_CBC_SHA";
       break;
     case TLS_DH_anon_WITH_AES_256_CBC_SHA:
       return "TLS_DH_anon_WITH_AES_256_CBC_SHA";
       break;
+#if defined(__MAC_10_6) || defined(__IPHONE_5_0)
     /* TLS 1.0 with ECDSA (RFC 4492) */
     case TLS_ECDH_ECDSA_WITH_NULL_SHA:
       return "TLS_ECDH_ECDSA_WITH_NULL_SHA";
       break;
     case TLS_ECDH_ECDSA_WITH_RC4_128_SHA:
       return "TLS_ECDH_ECDSA_WITH_RC4_128_SHA";
@@ -433,12 +435,13 @@
     case TLS_ECDH_anon_WITH_AES_128_CBC_SHA:
       return "TLS_ECDH_anon_WITH_AES_128_CBC_SHA";
       break;
     case TLS_ECDH_anon_WITH_AES_256_CBC_SHA:
       return "TLS_ECDH_anon_WITH_AES_256_CBC_SHA";
       break;
+#endif /* defined(__MAC_10_6) || defined(__IPHONE_5_0) */
 #if defined(__MAC_10_8) || defined(__IPHONE_5_0)
     /* TLS 1.2 (RFC 5246) */
     case TLS_RSA_WITH_NULL_MD5:
       return "TLS_RSA_WITH_NULL_MD5";
       break;
     case TLS_RSA_WITH_NULL_SHA:
@@ -623,45 +626,72 @@
       break;
 #endif /* defined(__MAC_10_8) || defined(__IPHONE_5_0) */
   }
   return "TLS_NULL_WITH_NULL_NULL";
 }
 
-CF_INLINE bool IsRunningMountainLionOrLater(void)
-{
 #if (TARGET_OS_MAC && !(TARGET_OS_EMBEDDED || TARGET_OS_IPHONE))
+CF_INLINE void GetDarwinVersionNumber(int *major, int *minor)
+{
   int mib[2];
   char *os_version;
   size_t os_version_len;
-  char *os_version_major/*, *os_version_minor, *os_version_point*/;
-  int os_version_major_int;
+  char *os_version_major, *os_version_minor/*, *os_version_point*/;
 
   /* Get the Darwin kernel version from the kernel using sysctl(): */
   mib[0] = CTL_KERN;
   mib[1] = KERN_OSRELEASE;
   if(sysctl(mib, 2, NULL, &os_version_len, NULL, 0) == -1)
-    return false;
+    return;
   os_version = malloc(os_version_len*sizeof(char));
   if(!os_version)
-    return false;
+    return;
   if(sysctl(mib, 2, os_version, &os_version_len, NULL, 0) == -1) {
     free(os_version);
-    return false;
+    return;
   }
 
-  /* Parse the version. If it's version 12.0.0 or later, then this user is
-     using Mountain Lion. */
+  /* Parse the version: */
   os_version_major = strtok(os_version, ".");
-  /*os_version_minor = strtok(NULL, ".");
-  os_version_point = strtok(NULL, ".");*/
-  os_version_major_int = atoi(os_version_major);
+  os_version_minor = strtok(NULL, ".");
+  /*os_version_point = strtok(NULL, ".");*/
+  *major = atoi(os_version_major);
+  *minor = atoi(os_version_minor);
   free(os_version);
-  return os_version_major_int >= 12;
-#else
-  return true;  /* iOS users: this doesn't concern you */
+}
 #endif
+
+/* Apple provides a myriad of ways of getting information about a certificate
+   into a string. Some aren't available under iOS or newer cats. So here's
+   a unified function for getting a string describing the certificate that
+   ought to work in all cats starting with Leopard. */
+CF_INLINE CFStringRef CopyCertSubject(SecCertificateRef cert)
+{
+  CFStringRef server_cert_summary = CFSTR("(null)");
+
+#if (TARGET_OS_EMBEDDED || TARGET_OS_IPHONE)
+  /* iOS: There's only one way to do this. */
+  server_cert_summary = SecCertificateCopySubjectSummary(cert);
+#else
+#if defined(__MAC_10_7)
+  /* Lion & later: Get the long description if we can. */
+  if(SecCertificateCopyLongDescription != NULL)
+    server_cert_summary =
+      SecCertificateCopyLongDescription(NULL, cert, NULL);
+  else
+#endif /* defined(__MAC_10_7) */
+#if defined(__MAC_10_6)
+  /* Snow Leopard: Get the certificate summary. */
+  if(SecCertificateCopySubjectSummary != NULL)
+    server_cert_summary = SecCertificateCopySubjectSummary(cert);
+  else
+#endif /* defined(__MAC_10_6) */
+  /* Leopard is as far back as we go... */
+  (void)SecCertificateCopyCommonName(cert, &server_cert_summary);
+#endif /* (TARGET_OS_EMBEDDED || TARGET_OS_IPHONE) */
+  return server_cert_summary;
 }
 
 static CURLcode darwinssl_connect_step1(struct connectdata *conn,
                                         int sockindex)
 {
   struct SessionHandle *data = conn->data;
@@ -669,14 +699,20 @@
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
-  /*SSLConnectionRef ssl_connection;*/
+  size_t all_ciphers_count = 0UL, allowed_ciphers_count = 0UL, i;
+  SSLCipherSuite *all_ciphers = NULL, *allowed_ciphers = NULL;
   OSStatus err = noErr;
+#if (TARGET_OS_MAC && !(TARGET_OS_EMBEDDED || TARGET_OS_IPHONE))
+  int darwinver_maj = 0, darwinver_min = 0;
+
+  GetDarwinVersionNumber(&darwinver_maj, &darwinver_min);
+#endif
 
 #if defined(__MAC_10_8) || defined(__IPHONE_5_0)
   if(SSLCreateContext != NULL) {  /* use the newer API if avaialble */
     if(connssl->ssl_ctx)
       CFRelease(connssl->ssl_ctx);
     connssl->ssl_ctx = SSLCreateContext(NULL, kSSLClientSide, kSSLStreamType);
@@ -703,12 +739,13 @@
   err = SSLNewContext(false, &(connssl->ssl_ctx));
   if(err != noErr) {
     failf(data, "SSL: couldn't create a context: OSStatus %d", err);
     return CURLE_OUT_OF_MEMORY;
   }
 #endif /* defined(__MAC_10_8) || defined(__IPHONE_5_0) */
+  connssl->ssl_write_buffered_length = 0UL; /* reset buffered write length */
 
   /* check to see if we've been told to use an explicit SSL/TLS version */
 #if defined(__MAC_10_8) || defined(__IPHONE_5_0)
   if(SSLSetProtocolVersionMax != NULL) {
     switch(data->set.ssl.version) {
       case CURL_SSLVERSION_DEFAULT: default:
@@ -814,13 +851,18 @@
      a library bug with the way the kSSLSessionOptionBreakOnServerAuth flag
      works, it doesn't work as expected under Snow Leopard or Lion.
      So we need to call SSLSetEnableCertVerify() on those older cats in order
      to disable certificate validation if the user turned that off.
      (SecureTransport will always validate the certificate chain by
      default.) */
-  if(SSLSetSessionOption != NULL && IsRunningMountainLionOrLater()) {
+  /* (Note: Darwin 12.x.x is Mountain Lion.) */
+#if (TARGET_OS_MAC && !(TARGET_OS_EMBEDDED || TARGET_OS_IPHONE))
+  if(SSLSetSessionOption != NULL && darwinver_maj >= 12) {
+#else
+  if(SSLSetSessionOption != NULL) {
+#endif /* (TARGET_OS_MAC && !(TARGET_OS_EMBEDDED || TARGET_OS_IPHONE)) */
     err = SSLSetSessionOption(connssl->ssl_ctx,
                               kSSLSessionOptionBreakOnServerAuth,
                               data->set.ssl.verifypeer?false:true);
     if(err != noErr) {
       failf(data, "SSL: SSLSetSessionOption() failed: OSStatus %d", err);
       return CURLE_SSL_CONNECT_ERROR;
@@ -858,25 +900,110 @@
     if(err != noErr) {
       infof(data, "WARNING: SSL: SSLSetPeerDomainName() failed: OSStatus %d",
             err);
     }
   }
 
+  /* Disable cipher suites that ST supports but are not safe. These ciphers
+     are unlikely to be used in any case since ST gives other ciphers a much
+     higher priority, but it's probably better that we not connect at all than
+     to give the user a false sense of security if the server only supports
+     insecure ciphers. (Note: We don't care about SSLv2-only ciphers.) */
+  (void)SSLGetNumberSupportedCiphers(connssl->ssl_ctx, &all_ciphers_count);
+  all_ciphers = malloc(all_ciphers_count*sizeof(SSLCipherSuite));
+  allowed_ciphers = malloc(all_ciphers_count*sizeof(SSLCipherSuite));
+  if(all_ciphers && allowed_ciphers &&
+     SSLGetSupportedCiphers(connssl->ssl_ctx, all_ciphers,
+       &all_ciphers_count) == noErr) {
+    for(i = 0UL ; i < all_ciphers_count ; i++) {
+#if (TARGET_OS_MAC && !(TARGET_OS_EMBEDDED || TARGET_OS_IPHONE))
+     /* There's a known bug in early versions of Mountain Lion where ST's ECC
+        ciphers (cipher suite 0xC001 through 0xC032) simply do not work.
+        Work around the problem here by disabling those ciphers if we are
+        running in an affected version of OS X. */
+      if(darwinver_maj == 12 && darwinver_min <= 3 &&
+         all_ciphers[i] >= 0xC001 && all_ciphers[i] <= 0xC032) {
+           continue;
+      }
+#endif
+      switch(all_ciphers[i]) {
+        /* Disable NULL ciphersuites: */
+        case SSL_NULL_WITH_NULL_NULL:
+        case SSL_RSA_WITH_NULL_MD5:
+        case SSL_RSA_WITH_NULL_SHA:
+        case SSL_FORTEZZA_DMS_WITH_NULL_SHA:
+        case 0xC001: /* TLS_ECDH_ECDSA_WITH_NULL_SHA */
+        case 0xC006: /* TLS_ECDHE_ECDSA_WITH_NULL_SHA */
+        case 0xC00B: /* TLS_ECDH_RSA_WITH_NULL_SHA */
+        case 0xC010: /* TLS_ECDHE_RSA_WITH_NULL_SHA */
+        /* Disable anonymous ciphersuites: */
+        case SSL_DH_anon_EXPORT_WITH_RC4_40_MD5:
+        case SSL_DH_anon_WITH_RC4_128_MD5:
+        case SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA:
+        case SSL_DH_anon_WITH_DES_CBC_SHA:
+        case SSL_DH_anon_WITH_3DES_EDE_CBC_SHA:
+        case TLS_DH_anon_WITH_AES_128_CBC_SHA:
+        case TLS_DH_anon_WITH_AES_256_CBC_SHA:
+        case 0xC015: /* TLS_ECDH_anon_WITH_NULL_SHA */
+        case 0xC016: /* TLS_ECDH_anon_WITH_RC4_128_SHA */
+        case 0xC017: /* TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA */
+        case 0xC018: /* TLS_ECDH_anon_WITH_AES_128_CBC_SHA */
+        case 0xC019: /* TLS_ECDH_anon_WITH_AES_256_CBC_SHA */
+        case 0x006C: /* TLS_DH_anon_WITH_AES_128_CBC_SHA256 */
+        case 0x006D: /* TLS_DH_anon_WITH_AES_256_CBC_SHA256 */
+        case 0x00A6: /* TLS_DH_anon_WITH_AES_128_GCM_SHA256 */
+        case 0x00A7: /* TLS_DH_anon_WITH_AES_256_GCM_SHA384 */
+        /* Disable weak key ciphersuites: */
+        case SSL_RSA_EXPORT_WITH_RC4_40_MD5:
+        case SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5:
+        case SSL_RSA_EXPORT_WITH_DES40_CBC_SHA:
+        case SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA:
+        case SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA:
+        case SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA:
+        case SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA:
+        case SSL_RSA_WITH_DES_CBC_SHA:
+        case SSL_DH_DSS_WITH_DES_CBC_SHA:
+        case SSL_DH_RSA_WITH_DES_CBC_SHA:
+        case SSL_DHE_DSS_WITH_DES_CBC_SHA:
+        case SSL_DHE_RSA_WITH_DES_CBC_SHA:
+        /* Disable IDEA: */
+        case SSL_RSA_WITH_IDEA_CBC_SHA:
+        case SSL_RSA_WITH_IDEA_CBC_MD5:
+          break;
+        default: /* enable everything else */
+          allowed_ciphers[allowed_ciphers_count++] = all_ciphers[i];
+          break;
+      }
+    }
+    err = SSLSetEnabledCiphers(connssl->ssl_ctx, allowed_ciphers,
+                               allowed_ciphers_count);
+    if(err != noErr) {
+      failf(data, "SSL: SSLSetEnabledCiphers() failed: OSStatus %d", err);
+      return CURLE_SSL_CONNECT_ERROR;
+    }
+  }
+  else {
+    Curl_safefree(all_ciphers);
+    Curl_safefree(allowed_ciphers);
+    failf(data, "SSL: Failed to allocate memory for allowed ciphers");
+    return CURLE_OUT_OF_MEMORY;
+  }
+  Curl_safefree(all_ciphers);
+  Curl_safefree(allowed_ciphers);
+
   err = SSLSetIOFuncs(connssl->ssl_ctx, SocketRead, SocketWrite);
   if(err != noErr) {
     failf(data, "SSL: SSLSetIOFuncs() failed: OSStatus %d", err);
     return CURLE_SSL_CONNECT_ERROR;
   }
 
   /* pass the raw socket into the SSL layers */
   /* We need to store the FD in a constant memory address, because
    * SSLSetConnection() will not copy that address. I've found that
    * conn->sock[sockindex] may change on its own. */
   connssl->ssl_sockfd = sockfd;
-  /*ssl_connection = &(connssl->ssl_sockfd);
-  err = SSLSetConnection(connssl->ssl_ctx, ssl_connection);*/
   err = SSLSetConnection(connssl->ssl_ctx, connssl);
   if(err != noErr) {
     failf(data, "SSL: SSLSetConnection() failed: %d", err);
     return CURLE_SSL_CONNECT_ERROR;
   }
 
@@ -904,28 +1031,63 @@
     switch (err) {
       case errSSLWouldBlock:  /* they're not done with us yet */
         connssl->connecting_state = connssl->ssl_direction ?
             ssl_connect_2_writing : ssl_connect_2_reading;
         return CURLE_OK;
 
-      case errSSLServerAuthCompleted:
+      /* The below is errSSLServerAuthCompleted; it's not defined in
+        Leopard's headers */
+      case -9841:
         /* the documentation says we need to call SSLHandshake() again */
         return darwinssl_connect_step2(conn, sockindex);
 
+      /* These are all certificate problems with the server: */
       case errSSLXCertChainInvalid:
+        failf(data, "SSL certificate problem: Invalid certificate chain");
+        return CURLE_SSL_CACERT;
       case errSSLUnknownRootCert:
+        failf(data, "SSL certificate problem: Untrusted root certificate");
+        return CURLE_SSL_CACERT;
       case errSSLNoRootCert:
+        failf(data, "SSL certificate problem: No root certificate");
+        return CURLE_SSL_CACERT;
       case errSSLCertExpired:
-        failf(data, "SSL certificate problem: OSStatus %d", err);
+        failf(data, "SSL certificate problem: Certificate chain had an "
+              "expired certificate");
         return CURLE_SSL_CACERT;
+      case errSSLBadCert:
+        failf(data, "SSL certificate problem: Couldn't understand the server "
+              "certificate format");
+        return CURLE_SSL_CONNECT_ERROR;
 
+      /* This error is raised if the server's cert didn't match the server's
+         host name: */
       case errSSLHostNameMismatch:
         failf(data, "SSL certificate peer verification failed, the "
               "certificate did not match \"%s\"\n", conn->host.dispname);
         return CURLE_PEER_FAILED_VERIFICATION;
 
+      /* Generic handshake errors: */
+      case errSSLConnectionRefused:
+        failf(data, "Server dropped the connection during the SSL handshake");
+        return CURLE_SSL_CONNECT_ERROR;
+      case errSSLClosedAbort:
+        failf(data, "Server aborted the SSL handshake");
+        return CURLE_SSL_CONNECT_ERROR;
+      case errSSLNegotiation:
+        failf(data, "Could not negotiate an SSL cipher suite with the server");
+        return CURLE_SSL_CONNECT_ERROR;
+      /* Sometimes paramErr happens with buggy ciphers: */
+      case paramErr: case errSSLInternal:
+        failf(data, "Internal SSL engine error encountered during the "
+              "SSL handshake");
+        return CURLE_SSL_CONNECT_ERROR;
+      case errSSLFatalAlert:
+        failf(data, "Fatal SSL engine error encountered during the SSL "
+              "handshake");
+        return CURLE_SSL_CONNECT_ERROR;
       default:
         failf(data, "Unknown SSL protocol error in connection to %s:%d",
               conn->host.name, err);
         return CURLE_SSL_CONNECT_ERROR;
     }
   }
@@ -990,13 +1152,13 @@
 #pragma unused(server_certs)
   err = SSLCopyPeerTrust(connssl->ssl_ctx, &trust);
   if(err == noErr) {
     count = SecTrustGetCertificateCount(trust);
     for(i = 0L ; i < count ; i++) {
       server_cert = SecTrustGetCertificateAtIndex(trust, i);
-      server_cert_summary = SecCertificateCopySubjectSummary(server_cert);
+      server_cert_summary = CopyCertSubject(server_cert);
       memset(server_cert_summary_c, 0, 128);
       if(CFStringGetCString(server_cert_summary,
                             server_cert_summary_c,
                             128,
                             kCFStringEncodingUTF8)) {
         infof(data, "Server certificate: %s\n", server_cert_summary_c);
@@ -1016,14 +1178,13 @@
 #pragma unused(server_certs)
     err = SSLCopyPeerTrust(connssl->ssl_ctx, &trust);
     if(err == noErr) {
       count = SecTrustGetCertificateCount(trust);
       for(i = 0L ; i < count ; i++) {
         server_cert = SecTrustGetCertificateAtIndex(trust, i);
-        server_cert_summary =
-          SecCertificateCopyLongDescription(NULL, server_cert, NULL);
+        server_cert_summary = CopyCertSubject(server_cert);
         memset(server_cert_summary_c, 0, 128);
         if(CFStringGetCString(server_cert_summary,
                               server_cert_summary_c,
                               128,
                               kCFStringEncodingUTF8)) {
           infof(data, "Server certificate: %s\n", server_cert_summary_c);
@@ -1038,13 +1199,13 @@
     if(err == noErr) {
       count = CFArrayGetCount(server_certs);
       for(i = 0L ; i < count ; i++) {
         server_cert = (SecCertificateRef)CFArrayGetValueAtIndex(server_certs,
                                                                 i);
 
-        server_cert_summary = SecCertificateCopySubjectSummary(server_cert);
+        server_cert_summary = CopyCertSubject(server_cert);
         memset(server_cert_summary_c, 0, 128);
         if(CFStringGetCString(server_cert_summary,
                               server_cert_summary_c,
                               128,
                               kCFStringEncodingUTF8)) {
           infof(data, "Server certificate: %s\n", server_cert_summary_c);
@@ -1059,14 +1220,13 @@
 #pragma unused(trust)
   err = SSLCopyPeerCertificates(connssl->ssl_ctx, &server_certs);
   if(err == noErr) {
     count = CFArrayGetCount(server_certs);
     for(i = 0L ; i < count ; i++) {
       server_cert = (SecCertificateRef)CFArrayGetValueAtIndex(server_certs, i);
-
-      server_cert_summary = SecCertificateCopySubjectSummary(server_cert);
+      server_cert_summary = CopyCertSubject(server_cert);
       memset(server_cert_summary_c, 0, 128);
       if(CFStringGetCString(server_cert_summary,
                             server_cert_summary_c,
                             128,
                             kCFStringEncodingUTF8)) {
         infof(data, "Server certificate: %s\n", server_cert_summary_c);
@@ -1381,28 +1541,64 @@
                               size_t len,
                               CURLcode *curlcode)
 {
   /*struct SessionHandle *data = conn->data;*/
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   size_t processed = 0UL;
-  OSStatus err = SSLWrite(connssl->ssl_ctx, mem, len, &processed);
+  OSStatus err;
 
-  if(err != noErr) {
+  /* The SSLWrite() function works a little differently than expected. The
+     fourth argument (processed) is currently documented in Apple's
+     documentation as: "On return, the length, in bytes, of the data actually
+     written."
+
+     Now, one could interpret that as "written to the socket," but actually,
+     it returns the amount of data that was written to a buffer internal to
+     the SSLContextRef instead. So it's possible for SSLWrite() to return
+     errSSLWouldBlock and a number of bytes "written" because those bytes were
+     encrypted and written to a buffer, not to the socket.
+
+     So if this happens, then we need to keep calling SSLWrite() over and
+     over again with no new data until it quits returning errSSLWouldBlock. */
+
+  /* Do we have buffered data to write from the last time we were called? */
+  if(connssl->ssl_write_buffered_length) {
+    /* Write the buffered data: */
+    err = SSLWrite(connssl->ssl_ctx, NULL, 0UL, &processed);
     switch (err) {
-      case errSSLWouldBlock:  /* return how much we sent (if anything) */
-        if(processed)
-          return (ssize_t)processed;
-        *curlcode = CURLE_AGAIN;
-        return -1;
+      case noErr:
+        /* processed is always going to be 0 because we didn't write to
+           the buffer, so return how much was written to the socket */
+        processed = connssl->ssl_write_buffered_length;
+        connssl->ssl_write_buffered_length = 0UL;
         break;
-
+      case errSSLWouldBlock: /* argh, try again */
+        *curlcode = CURLE_AGAIN;
+        return -1L;
       default:
-        failf(conn->data, "SSLWrite() return error %d", err);
+        failf(conn->data, "SSLWrite() returned error %d", err);
         *curlcode = CURLE_SEND_ERROR;
-        return -1;
-        break;
+        return -1L;
+    }
+  }
+  else {
+    /* We've got new data to write: */
+    err = SSLWrite(connssl->ssl_ctx, mem, len, &processed);
+    if(err != noErr) {
+      switch (err) {
+        case errSSLWouldBlock:
+          /* Data was buffered but not sent, we have to tell the caller
+             to try sending again, and remember how much was buffered */
+          connssl->ssl_write_buffered_length = len;
+          *curlcode = CURLE_AGAIN;
+          return -1L;
+        default:
+          failf(conn->data, "SSLWrite() returned error %d", err);
+          *curlcode = CURLE_SEND_ERROR;
+          return -1L;
+      }
     }
   }
   return (ssize_t)processed;
 }
 
 static ssize_t darwinssl_recv(struct connectdata *conn,
@@ -1419,24 +1615,29 @@
   if(err != noErr) {
     switch (err) {
       case errSSLWouldBlock:  /* return how much we read (if anything) */
         if(processed)
           return (ssize_t)processed;
         *curlcode = CURLE_AGAIN;
-        return -1;
+        return -1L;
         break;
 
-      case errSSLClosedGraceful: /* they're done; fail gracefully */
+      /* errSSLClosedGraceful - server gracefully shut down the SSL session
+         errSSLClosedNoNotify - server hung up on us instead of sending a
+           closure alert notice, read() is returning 0
+         Either way, inform the caller that the server disconnected. */
+      case errSSLClosedGraceful:
+      case errSSLClosedNoNotify:
         *curlcode = CURLE_OK;
-        return -1;
+        return -1L;
         break;
 
       default:
         failf(conn->data, "SSLRead() return error %d", err);
         *curlcode = CURLE_RECV_ERROR;
-        return -1;
+        return -1L;
         break;
     }
   }
   return (ssize_t)processed;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_memory.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_memory.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_memory.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_memory.h	2013-04-12 02:46:54.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2009, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -19,31 +19,121 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
-#include <curl/curl.h> /* for the typedefs */
+/*
+ * Nasty internal details ahead...
+ *
+ * File curl_memory.h must be included by _all_ *.c source files
+ * that use memory related functions strdup, malloc, calloc, realloc
+ * or free, and given source file is used to build libcurl library.
+ *
+ * There is nearly no exception to above rule. All libcurl source
+ * files in 'lib' subdirectory as well as those living deep inside
+ * 'packages' subdirectories and linked together in order to build
+ * libcurl library shall follow it.
+ *
+ * File lib/strdup.c is an exception, given that it provides a strdup
+ * clone implementation while using malloc. Extra care needed inside
+ * this one. TODO: revisit this paragraph and related code.
+ *
+ * The need for curl_memory.h inclusion is due to libcurl's feature
+ * of allowing library user to provide memory replacement functions,
+ * memory callbacks, at runtime with curl_global_init_mem()
+ *
+ * Any *.c source file used to build libcurl library that does not
+ * include curl_memory.h and uses any memory function of the five
+ * mentioned above will compile without any indication, but it will
+ * trigger weird memory related issues at runtime.
+ *
+ * OTOH some source files from 'lib' subdirectory may additionally be
+ * used directly as source code when using some curlx_ functions by
+ * third party programs that don't even use libcurl at all. When using
+ * these source files in this way it is necessary these are compiled
+ * with CURLX_NO_MEMORY_CALLBACKS defined, in order to ensure that no
+ * attempt of calling libcurl's memory callbacks is done from code
+ * which can not use this machinery.
+ *
+ * Notice that libcurl's 'memory tracking' system works chaining into
+ * the memory callback machinery. This implies that when compiling
+ * 'lib' source files with CURLX_NO_MEMORY_CALLBACKS defined this file
+ * disengages usage of libcurl's 'memory tracking' system, defining
+ * MEMDEBUG_NODEFINES and overriding CURLDEBUG purpose.
+ *
+ * CURLX_NO_MEMORY_CALLBACKS takes precedence over CURLDEBUG. This is
+ * done in order to allow building a 'memory tracking' enabled libcurl
+ * and at the same time allow building programs which do not use it.
+ *
+ * Programs and libraries in 'tests' subdirectories have specific
+ * purposes and needs, and as such each one will use whatever fits
+ * best, depending additionally wether it links with libcurl or not.
+ *
+ * Caveat emptor. Proper curlx_* separation is a work in progress
+ * the same as CURLX_NO_MEMORY_CALLBACKS usage, some adjustments may
+ * still be required. IOW don't use them yet, there are sharp edges.
+ */
+
+#ifdef HEADER_CURL_MEMDEBUG_H
+#error "Header memdebug.h shall not be included before curl_memory.h"
+#endif
+
+#ifndef CURLX_NO_MEMORY_CALLBACKS
+
+#include <curl/curl.h> /* for the callback typedefs */
 
 extern curl_malloc_callback Curl_cmalloc;
 extern curl_free_callback Curl_cfree;
 extern curl_realloc_callback Curl_crealloc;
 extern curl_strdup_callback Curl_cstrdup;
 extern curl_calloc_callback Curl_ccalloc;
+#ifdef WIN32
+extern curl_wcsdup_callback Curl_cwcsdup;
+#endif
 
 #ifndef CURLDEBUG
-/* Only do this define-mania if we're not using the memdebug system, as that
-   has preference on this magic. */
+
+/*
+ * libcurl's 'memory tracking' system defines strdup, malloc, calloc,
+ * realloc and free, along with others, in memdebug.h in a different
+ * way although still using memory callbacks forward declared above.
+ * When using the 'memory tracking' system (CURLDEBUG defined) we do
+ * not define here the five memory functions given that definitions
+ * from memdebug.h are the ones that shall be used.
+ */
+
 #undef strdup
 #define strdup(ptr) Curl_cstrdup(ptr)
 #undef malloc
 #define malloc(size) Curl_cmalloc(size)
 #undef calloc
 #define calloc(nbelem,size) Curl_ccalloc(nbelem, size)
 #undef realloc
 #define realloc(ptr,size) Curl_crealloc(ptr, size)
 #undef free
 #define free(ptr) Curl_cfree(ptr)
 
+#ifdef WIN32
+#  undef wcsdup
+#  define wcsdup(ptr) Curl_cwcsdup(ptr)
+#  undef _wcsdup
+#  define _wcsdup(ptr) Curl_cwcsdup(ptr)
+#  undef _tcsdup
+#  ifdef UNICODE
+#    define _tcsdup(ptr) Curl_cwcsdup(ptr)
+#  else
+#    define _tcsdup(ptr) Curl_cstrdup(ptr)
+#  endif
 #endif
 
+#endif /* CURLDEBUG */
+
+#else /* CURLX_NO_MEMORY_CALLBACKS */
+
+#ifndef MEMDEBUG_NODEFINES
+#define MEMDEBUG_NODEFINES
+#endif
+
+#endif /* CURLX_NO_MEMORY_CALLBACKS */
+
 #endif /* HEADER_CURL_MEMORY_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_ntlm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_ntlm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_ntlm.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_ntlm.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -187,14 +186,16 @@
 
     if(base64) {
       Curl_safefree(*allocuserpwd);
       *allocuserpwd = aprintf("%sAuthorization: NTLM %s\r\n",
                               proxy ? "Proxy-" : "",
                               base64);
-      DEBUG_OUT(fprintf(stderr, "**** Header %s\n ", *allocuserpwd));
       free(base64);
+      if(!*allocuserpwd)
+        return CURLE_OUT_OF_MEMORY;
+      DEBUG_OUT(fprintf(stderr, "**** Header %s\n ", *allocuserpwd));
     }
     break;
 
   case NTLMSTATE_TYPE2:
     /* We already received the type-2 message, create a type-3 message */
     error = Curl_ntlm_create_type3_message(conn->data, userp, passwdp,
@@ -204,27 +205,26 @@
 
     if(base64) {
       Curl_safefree(*allocuserpwd);
       *allocuserpwd = aprintf("%sAuthorization: NTLM %s\r\n",
                               proxy ? "Proxy-" : "",
                               base64);
-      DEBUG_OUT(fprintf(stderr, "**** %s\n ", *allocuserpwd));
       free(base64);
+      if(!*allocuserpwd)
+        return CURLE_OUT_OF_MEMORY;
+      DEBUG_OUT(fprintf(stderr, "**** %s\n ", *allocuserpwd));
 
       ntlm->state = NTLMSTATE_TYPE3; /* we send a type-3 */
       authp->done = TRUE;
     }
     break;
 
   case NTLMSTATE_TYPE3:
     /* connection is already authenticated,
      * don't send a header in future requests */
-    if(*allocuserpwd) {
-      free(*allocuserpwd);
-      *allocuserpwd = NULL;
-    }
+    Curl_safefree(*allocuserpwd);
     authp->done = TRUE;
     break;
   }
 
   return CURLE_OK;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_ntlm_core.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_ntlm_core.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_ntlm_core.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_ntlm_core.c	2013-02-18 02:30:12.000000000 +0800
@@ -418,13 +418,13 @@
     gcry_md_write(MD4pw, pw, 2 * len);
     memcpy (ntbuffer, gcry_md_read (MD4pw, 0), MD4_DIGEST_LENGTH);
     gcry_md_close(MD4pw);
 #elif defined(USE_NSS)
     Curl_md4it(ntbuffer, pw, 2 * len);
 #elif defined(USE_DARWINSSL)
-    (void)CC_MD4(pw, 2 * len, ntbuffer);
+    (void)CC_MD4(pw, (CC_LONG)(2 * len), ntbuffer);
 #endif
 
     memset(ntbuffer + 16, 0, 21 - 16);
   }
 
   free(pw);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_ntlm_msgs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_ntlm_msgs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_ntlm_msgs.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_ntlm_msgs.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -176,16 +176,17 @@
        from the beginning of the NTLM message.
 */
 
 /*
  * Curl_ntlm_decode_type2_message()
  *
- * This is used to decode a ntlm type-2 message received from a: HTTP, SMTP
- * or POP3 server. The message is first decoded from a base64 string into a
- * raw ntlm message and checked for validity before the appropriate data for
- * creating a type-3 message is written to the given ntlm data structure.
+ * This is used to decode a ntlm type-2 message received from a HTTP or SASL
+ * based (such as SMTP, POP3 or IMAP) server. The message is first decoded
+ * from a base64 string into a raw ntlm message and checked for validity
+ * before the appropriate data for creating a type-3 message is written to
+ * the given ntlm data structure.
  *
  * Parameters:
  *
  * data    [in]     - Pointer to session handle.
  * header  [in]     - Pointer to the input buffer.
  * ntlm    [in]     - Pointer to ntlm data struct being used and modified.
@@ -302,15 +303,15 @@
 }
 #endif
 
 /*
  * Curl_ntlm_create_type1_message()
  *
- * This is used to generate an already encoded NTLM type-1 message ready
- * for sending to the recipient, be it a: HTTP, SMTP or POP3 server,
- * using the appropriate compile time crypo API.
+ * This is used to generate an already encoded NTLM type-1 message ready for
+ * sending to the recipient, be it a HTTP or SASL based (such as SMTP, POP3
+ * or IMAP) server, using the appropriate compile time crypo API.
  *
  * Parameters:
  *
  * userp   [in]     - The user name in the format User or Domain\User.
  * passdwp [in]     - The user's password.
  * ntlm    [in/out] - The ntlm data struct being used and modified.
@@ -549,15 +550,15 @@
   return Curl_base64_encode(NULL, (char *)ntlmbuf, size, outptr, outlen);
 }
 
 /*
  * Curl_ntlm_create_type3_message()
  *
- * This is used to generate an already encoded NTLM type-3 message ready
- * for sending to the recipient, be it a: HTTP, SMTP or POP3 server,
- * using the appropriate compile time crypo API.
+ * This is used to generate an already encoded NTLM type-3 message ready for
+ * sending to the recipient, be it a HTTP or SASL based (such as SMTP, POP3
+ * or IMAP) server, using the appropriate compile time crypo API.
  *
  * Parameters:
  *
  * data    [in]     - The session handle.
  * userp   [in]     - The user name in the format User or Domain\User.
  * passdwp [in]     - The user's password.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_sasl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_sasl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_sasl.c	2013-02-06 18:06:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_sasl.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2012-2013, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2012 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -87,14 +87,14 @@
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_plain_message(struct SessionHandle *data,
-                                        const char* userp,
-                                        const char* passwdp,
+                                        const char *userp,
+                                        const char *passwdp,
                                         char **outptr, size_t *outlen)
 {
   char plainauth[2 * MAX_CURL_USER_LENGTH + MAX_CURL_PASSWORD_LENGTH];
   size_t ulen;
   size_t plen;
 
@@ -135,13 +135,13 @@
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_login_message(struct SessionHandle *data,
-                                        const char* valuep, char **outptr,
+                                        const char *valuep, char **outptr,
                                         size_t *outlen)
 {
   size_t vlen = strlen(valuep);
 
   if(!vlen) {
     /* Calculate an empty reply */
@@ -176,15 +176,15 @@
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_cram_md5_message(struct SessionHandle *data,
-                                           const char* chlg64,
-                                           const char* userp,
-                                           const char* passwdp,
+                                           const char *chlg64,
+                                           const char *userp,
+                                           const char *passwdp,
                                            char **outptr, size_t *outlen)
 {
   CURLcode result = CURLE_OK;
   size_t chlg64len = strlen(chlg64);
   unsigned char *chlg = (unsigned char *) NULL;
   size_t chlglen = 0;
@@ -247,16 +247,16 @@
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_digest_md5_message(struct SessionHandle *data,
-                                             const char* chlg64,
-                                             const char* userp,
-                                             const char* passwdp,
-                                             const char* service,
+                                             const char *chlg64,
+                                             const char *userp,
+                                             const char *passwdp,
+                                             const char *service,
                                              char **outptr, size_t *outlen)
 {
   static const char table16[] = "0123456789abcdef";
 
   CURLcode result = CURLE_OK;
   unsigned char *chlg = (unsigned char *) NULL;
@@ -280,12 +280,15 @@
 
   result = Curl_base64_decode(chlg64, &chlg, &chlglen);
 
   if(result)
     return result;
 
+  if(!chlg)
+    return CURLE_LOGIN_DENIED;
+
   /* Retrieve nonce string from the challenge */
   if(!sasl_digest_get_key_value(chlg, "nonce=\"", nonce,
                                 sizeof(nonce), '\"')) {
     Curl_safefree(chlg);
     return CURLE_LOGIN_DENIED;
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_sasl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_sasl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_sasl.h	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_sasl.h	2013-04-12 02:46:54.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2012 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -32,36 +32,36 @@
 #define SASL_MECH_GSSAPI        0x0010
 #define SASL_MECH_EXTERNAL      0x0020
 #define SASL_MECH_NTLM          0x0040
 
 /* This is used to generate a base64 encoded PLAIN authentication message */
 CURLcode Curl_sasl_create_plain_message(struct SessionHandle *data,
-                                        const char* userp,
-                                        const char* passwdp,
+                                        const char *userp,
+                                        const char *passwdp,
                                         char **outptr, size_t *outlen);
 
 /* This is used to generate a base64 encoded LOGIN authentication message
    containing either the user name or password details */
 CURLcode Curl_sasl_create_login_message(struct SessionHandle *data,
-                                        const char* valuep, char **outptr,
+                                        const char *valuep, char **outptr,
                                         size_t *outlen);
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 /* This is used to generate a base64 encoded CRAM-MD5 response message */
 CURLcode Curl_sasl_create_cram_md5_message(struct SessionHandle *data,
-                                           const char* chlg64,
-                                           const char* user,
-                                           const char* passwdp,
+                                           const char *chlg64,
+                                           const char *user,
+                                           const char *passwdp,
                                            char **outptr, size_t *outlen);
 
 /* This is used to generate a base64 encoded DIGEST-MD5 response message */
 CURLcode Curl_sasl_create_digest_md5_message(struct SessionHandle *data,
-                                             const char* chlg64,
-                                             const char* user,
-                                             const char* passwdp,
-                                             const char* service,
+                                             const char *chlg64,
+                                             const char *user,
+                                             const char *passwdp,
+                                             const char *service,
                                              char **outptr, size_t *outlen);
 #endif
 
 #ifdef USE_NTLM
 /* This is used to generate a base64 encoded NTLM type-1 message */
 CURLcode Curl_sasl_create_ntlm_type1_message(const char *userp,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_schannel.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_schannel.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_schannel.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_schannel.c	2013-04-12 02:46:54.000000000 +0800
@@ -1060,12 +1060,13 @@
 {
   /* See http://msdn.microsoft.com/en-us/library/windows/desktop/aa380138.aspx
    * Shutting Down an Schannel Connection
    */
   struct SessionHandle *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  struct curl_schannel_cred *cached_cred = NULL;
 
   infof(data, "schannel: shutting down SSL/TLS connection with %s port %hu\n",
         conn->host.name, conn->remote_port);
 
   if(connssl->cred && connssl->ctxt) {
     SecBufferDesc BuffDesc;
@@ -1123,21 +1124,38 @@
               " (bytes written: %zd)\n", curl_easy_strerror(code), written);
       }
     }
 
     /* free SSPI Schannel API security context handle */
     if(connssl->ctxt) {
+      infof(data, "schannel: clear security context handle\n");
       s_pSecFn->DeleteSecurityContext(&connssl->ctxt->ctxt_handle);
       Curl_safefree(connssl->ctxt);
     }
 
-    /* decrement the reference counter of the credential/session handle */
-    if(connssl->cred && connssl->cred->refcount > 0) {
-      connssl->cred->refcount--;
-      infof(data, "schannel: decremented credential handle refcount = %d\n",
-            connssl->cred->refcount);
+    /* free SSPI Schannel API credential handle */
+    if(connssl->cred) {
+      /* decrement the reference counter of the credential/session handle */
+      if(connssl->cred->refcount > 0) {
+        connssl->cred->refcount--;
+        infof(data, "schannel: decremented credential handle refcount = %d\n",
+              connssl->cred->refcount);
+      }
+
+      /* if the handle refcount is zero, check if we have not cached it */
+      if(connssl->cred->refcount == 0) {
+        if(Curl_ssl_getsessionid(conn, (void**)&cached_cred, NULL)) {
+          cached_cred = NULL;
+        }
+        /* if the handle was not cached, it is stale to be freed */
+        if(connssl->cred != cached_cred) {
+          infof(data, "schannel: clear credential handle\n");
+          s_pSecFn->FreeCredentialsHandle(&connssl->cred->cred_handle);
+          Curl_safefree(connssl->cred);
+        }
+      }
     }
   }
 
   /* free internal buffer for received encrypted data */
   if(connssl->encdata_buffer != NULL) {
     Curl_safefree(connssl->encdata_buffer);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_setup.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_setup.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_setup.h	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_setup.h	2013-04-12 02:46:54.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -267,12 +267,13 @@
 #  else
 #    ifdef HAVE_WINSOCK_H
 #      include <winsock.h>
 #    endif
 #  endif
 #  include <tchar.h>
+   typedef wchar_t *(*curl_wcsdup_callback)(const wchar_t *str);
 #endif
 
 /*
  * Define USE_WINSOCK to 2 if we have and use WINSOCK2 API, else
  * define USE_WINSOCK to 1 if we have and use WINSOCK  API, else
  * undefine USE_WINSOCK.
@@ -691,7 +692,12 @@
 
 /* Define S_ISREG if not defined by system headers, f.e. MSVC */
 #if !defined(S_ISREG) && defined(S_IFMT) && defined(S_IFREG)
 #define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
 #endif
 
+/* Define S_ISDIR if not defined by system headers, f.e. MSVC */
+#if !defined(S_ISDIR) && defined(S_IFMT) && defined(S_IFDIR)
+#define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
+#endif
+
 #endif /* HEADER_CURL_SETUP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_setup_once.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_setup_once.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/curl_setup_once.h	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/curl_setup_once.h	2013-02-15 18:05:20.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -254,12 +254,14 @@
  */
 
 #if defined(HAVE_CLOSESOCKET)
 #  define sclose(x)  closesocket((x))
 #elif defined(HAVE_CLOSESOCKET_CAMEL)
 #  define sclose(x)  CloseSocket((x))
+#elif defined(HAVE_CLOSE_S)
+#  define sclose(x)  close_s((x))
 #elif defined(USE_LWIPSOCK)
 #  define sclose(x)  lwip_close((x))
 #else
 #  define sclose(x)  close((x))
 #endif
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/easy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/easy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/easy.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/easy.c	2013-04-12 02:46:54.000000000 +0800
@@ -19,12 +19,20 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
+/*
+ * See comment in curl_memory.h for the explanation of this sanity check.
+ */
+
+#ifdef CURLX_NO_MEMORY_CALLBACKS
+#error "libcurl shall not ever be built with CURLX_NO_MEMORY_CALLBACKS defined"
+#endif
+
 #ifdef HAVE_NETINET_IN_H
 #include <netinet/in.h>
 #endif
 #ifdef HAVE_NETDB_H
 #include <netdb.h>
 #endif
@@ -186,12 +194,15 @@
  */
 curl_malloc_callback Curl_cmalloc = (curl_malloc_callback)malloc;
 curl_free_callback Curl_cfree = (curl_free_callback)free;
 curl_realloc_callback Curl_crealloc = (curl_realloc_callback)realloc;
 curl_strdup_callback Curl_cstrdup = (curl_strdup_callback)system_strdup;
 curl_calloc_callback Curl_ccalloc = (curl_calloc_callback)calloc;
+#ifdef WIN32
+curl_wcsdup_callback Curl_cwcsdup = (curl_wcsdup_callback)wcsdup;
+#endif
 #else
 /*
  * Symbian OS doesn't support initialization to code in writeable static data.
  * Initialization will occur in the curl_global_init() call.
  */
 curl_malloc_callback Curl_cmalloc;
@@ -217,12 +228,15 @@
   /* Setup the default memory functions here (again) */
   Curl_cmalloc = (curl_malloc_callback)malloc;
   Curl_cfree = (curl_free_callback)free;
   Curl_crealloc = (curl_realloc_callback)realloc;
   Curl_cstrdup = (curl_strdup_callback)system_strdup;
   Curl_ccalloc = (curl_calloc_callback)calloc;
+#ifdef WIN32
+  Curl_cwcsdup = (curl_wcsdup_callback)wcsdup;
+#endif
 
   if(flags & CURL_GLOBAL_SSL)
     if(!Curl_ssl_init()) {
       DEBUGF(fprintf(stderr, "Error: Curl_ssl_init failed\n"));
       return CURLE_FAILED_INIT;
     }
@@ -259,12 +273,15 @@
   if(libssh2_init(0)) {
     DEBUGF(fprintf(stderr, "Error: libssh2_init failed\n"));
     return CURLE_FAILED_INIT;
   }
 #endif
 
+  if(flags & CURL_GLOBAL_ACK_EINTR)
+    Curl_ack_eintr = 1;
+
   init_flags  = flags;
 
   /* Preset pseudo-random number sequence. */
 
   Curl_srand();
 
@@ -423,12 +440,15 @@
     multi = curl_multi_init();
     if(!multi)
       return CURLE_OUT_OF_MEMORY;
     data->multi_easy = multi;
   }
 
+  /* Copy the MAXCONNECTS option to the multi handle */
+  curl_multi_setopt(multi, CURLMOPT_MAXCONNECTS, data->set.maxconnects);
+
   mcode = curl_multi_add_handle(multi, easy);
   if(mcode) {
     curl_multi_cleanup(multi);
     if(mcode == CURLM_OUT_OF_MEMORY)
       return CURLE_OUT_OF_MEMORY;
     else
@@ -438,17 +458,25 @@
   /* assign this after curl_multi_add_handle() since that function checks for
      it and rejects this handle otherwise */
   data->multi = multi;
 
   while(!done && !mcode) {
     int still_running;
+    int ret;
+
+    mcode = curl_multi_wait(multi, NULL, 0, 1000, &ret);
 
-    mcode = curl_multi_wait(multi, NULL, 0, 1000, NULL);
+    if(mcode == CURLM_OK) {
+      if(ret == -1) {
+        /* poll() failed not on EINTR, indicate a network problem */
+        code = CURLE_RECV_ERROR;
+        break;
+      }
 
-    if(mcode == CURLM_OK)
       mcode = curl_multi_perform(multi, &still_running);
+    }
 
     /* only read 'still_running' if curl_multi_perform() return OK */
     if((mcode == CURLM_OK) && !still_running) {
       msg = curl_multi_info_read(multi, &rc);
       if(msg) {
         code = msg->data.result;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/formdata.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/formdata.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/formdata.c	2013-01-22 22:43:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/formdata.c	2013-03-05 18:02:20.000000000 +0800
@@ -53,12 +53,13 @@
 #ifndef HAVE_BASENAME
 static char *Curl_basename(char *path);
 #define basename(x)  Curl_basename((x))
 #endif
 
 static size_t readfromfile(struct Form *form, char *buffer, size_t size);
+static char *formboundary(void);
 
 /* What kind of Content-Type to use on un-specified files with unrecognized
    extensions. */
 #define HTTPPOST_CONTENTTYPE_DEFAULT "application/octet-stream"
 
 #define FORM_FILE_SEPARATOR ','
@@ -827,13 +828,13 @@
       *size += length;
     else {
       /* Since this is a file to be uploaded here, add the size of the actual
          file */
       if(!strequal("-", newform->line)) {
         struct_stat file;
-        if(!stat(newform->line, &file) && S_ISREG(file.st_mode))
+        if(!stat(newform->line, &file) && !S_ISDIR(file.st_mode))
           *size += file.st_size;
         else
           return CURLE_BAD_FUNCTION_ARGUMENT;
       }
     }
   }
@@ -1097,13 +1098,13 @@
 
   *finalform = NULL; /* default form is empty */
 
   if(!post)
     return result; /* no input => no output! */
 
-  boundary = Curl_FormBoundary();
+  boundary = formboundary();
   if(!boundary)
     return CURLE_OUT_OF_MEMORY;
 
   /* Make the first line of the output */
   result = AddFormDataf(&form, NULL,
                         "%s; boundary=%s\r\n",
@@ -1153,13 +1154,13 @@
 
     if(post->more) {
       /* If used, this is a link to more file names, we must then do
          the magic to include several files with the same field name */
 
       Curl_safefree(fileboundary);
-      fileboundary = Curl_FormBoundary();
+      fileboundary = formboundary();
       if(!fileboundary) {
         result = CURLE_OUT_OF_MEMORY;
         break;
       }
 
       result = AddFormDataf(&form, &size,
@@ -1456,12 +1457,40 @@
 
   form->data = form->data->next; /* advance */
 
   return header;
 }
 
+/*
+ * formboundary() creates a suitable boundary string and returns an allocated
+ * one.
+ */
+static char *formboundary(void)
+{
+  char *retstring;
+  size_t i;
+
+  static const char table16[]="0123456789abcdef";
+
+  retstring = malloc(BOUNDARY_LENGTH+1);
+
+  if(!retstring)
+    return NULL; /* failed */
+
+  strcpy(retstring, "----------------------------");
+
+  for(i=strlen(retstring); i<BOUNDARY_LENGTH; i++)
+    retstring[i] = table16[Curl_rand()%16];
+
+  /* 28 dashes and 12 hexadecimal digits makes 12^16 (184884258895036416)
+     combinations */
+  retstring[BOUNDARY_LENGTH]=0; /* zero terminate */
+
+  return retstring;
+}
+
 #else  /* CURL_DISABLE_HTTP */
 CURLFORMcode curl_formadd(struct curl_httppost **httppost,
                           struct curl_httppost **last_post,
                           ...)
 {
   (void)httppost;
@@ -1481,40 +1510,8 @@
 void curl_formfree(struct curl_httppost *form)
 {
   (void)form;
   /* does nothing HTTP is disabled */
 }
 
-#endif  /* CURL_DISABLE_HTTP */
-
-#if !defined(CURL_DISABLE_HTTP) || defined(USE_SSLEAY)
-
-/*
- * Curl_FormBoundary() creates a suitable boundary string and returns an
- * allocated one. This is also used by SSL-code so it must be present even
- * if HTTP is disabled!
- */
-char *Curl_FormBoundary(void)
-{
-  char *retstring;
-  size_t i;
-
-  static const char table16[]="0123456789abcdef";
-
-  retstring = malloc(BOUNDARY_LENGTH+1);
-
-  if(!retstring)
-    return NULL; /* failed */
-
-  strcpy(retstring, "----------------------------");
-
-  for(i=strlen(retstring); i<BOUNDARY_LENGTH; i++)
-    retstring[i] = table16[Curl_rand()%16];
-
-  /* 28 dashes and 12 hexadecimal digits makes 12^16 (184884258895036416)
-     combinations */
-  retstring[BOUNDARY_LENGTH]=0; /* zero terminate */
-
-  return retstring;
-}
 
-#endif  /* !defined(CURL_DISABLE_HTTP) || defined(USE_SSLEAY) */
+#endif  /* !defined(CURL_DISABLE_HTTP) */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ftp.c	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ftp.c	2013-04-12 05:19:19.000000000 +0800
@@ -159,14 +159,12 @@
                              int *ftpcode,
                              size_t *size);
 static CURLcode ftp_dophase_done(struct connectdata *conn,
                                  bool connected);
 
 /* easy-to-use macro: */
-#define FTPSENDF(x,y,z)    if((result = Curl_ftpsendf(x,y,z)) != CURLE_OK) \
-                              return result
 #define PPSENDF(x,y,z)  if((result = Curl_pp_sendf(x,y,z)) != CURLE_OK) \
                               return result
 
 
 /*
  * FTP protocol handler.
@@ -595,23 +593,23 @@
 #define STATUSCODE(line) (ISDIGIT(line[0]) && ISDIGIT(line[1]) &&       \
                           ISDIGIT(line[2]))
 
 /* macro to check for the last line in an FTP server response */
 #define LASTLINE(line) (STATUSCODE(line) && (' ' == line[3]))
 
-static int ftp_endofresp(struct pingpong *pp,
-                         int *code)
+static bool ftp_endofresp(struct connectdata *conn, char *line, size_t len,
+                          int *code)
 {
-  char *line = pp->linestart_resp;
-  size_t len = pp->nread_resp;
+  (void)conn;
 
   if((len > 3) && LASTLINE(line)) {
     *code = curlx_sltosi(strtol(line, NULL, 10));
-    return 1;
+    return TRUE;
   }
-  return 0;
+
+  return FALSE;
 }
 
 static CURLcode ftp_readresp(curl_socket_t sockfd,
                              struct pingpong *pp,
                              int *ftpcode, /* return the ftp-code if done */
                              size_t *size) /* size of the response */
@@ -877,20 +875,22 @@
     return GETSOCK_BLANK;
 
   /* When in DO_MORE state, we could be either waiting for us to connect to a
      remote site, or we could wait for that site to connect to us. Or just
      handle ordinary commands.
 
-     When waiting for a connect, we will be in FTP_STOP state and then we wait
-     for the secondary socket to become writeable. If we're in another state,
-     we're still handling commands on the control (primary) connection.
+     When waiting for a connect, we can be in FTP_STOP state (or we're in
+     FTP_STOR when we do an upload) and then we wait for the secondary socket
+     to become writeable. . If we're in another state, we're still handling
+     commands on the control (primary) connection.
 
   */
 
   switch(ftpc->state) {
   case FTP_STOP:
+  case FTP_STOR:
     break;
   default:
     return Curl_pp_getsock(&conn->proto.ftpc.pp, socks, numsocks);
   }
 
   socks[0] = conn->sock[SECONDARYSOCKET];
@@ -1065,18 +1065,23 @@
     if(port_min > port_max )
       port_min = port_max = 0;
 
 
     if(*addr != '\0') {
       /* attempt to get the address of the given interface name */
-      if(!Curl_if2ip(conn->ip_addr->ai_family, addr,
-                     hbuf, sizeof(hbuf)))
-        /* not an interface, use the given string as host name instead */
-        host = addr;
-      else
-        host = hbuf; /* use the hbuf for host name */
+      switch(Curl_if2ip(conn->ip_addr->ai_family, conn->scope, addr,
+                     hbuf, sizeof(hbuf))) {
+        case IF2IP_NOT_FOUND:
+          /* not an interface, use the given string as host name instead */
+          host = addr;
+          break;
+        case IF2IP_AF_NOT_SUPPORTED:
+          return CURLE_FTP_PORT_FAILED;
+        case IF2IP_FOUND:
+          host = hbuf; /* use the hbuf for host name */
+      }
     }
     else
       /* there was only a port(-range) given, default the host */
       host = NULL;
   } /* data->set.ftpport */
 
@@ -2863,19 +2868,25 @@
 
         dir = malloc(nread + 1);
         if(!dir)
           return CURLE_OUT_OF_MEMORY;
 
         /* Reply format is like
-           257<space>"<directory-name>"<space><commentary> and the RFC959
-           says
+           257<space>[rubbish]"<directory-name>"<space><commentary> and the
+           RFC959 says
 
            The directory name can contain any character; embedded
            double-quotes should be escaped by double-quotes (the
            "quote-doubling" convention).
         */
+
+        /* scan for the first double-quote for non-standard responses */
+        while(ptr < &data->state.buffer[sizeof(data->state.buffer)]
+              && *ptr != '\n' && *ptr != '\0' && *ptr != '"')
+          ptr++;
+
         if('\"' == *ptr) {
           /* it started good */
           ptr++;
           for(store = dir; *ptr;) {
             if('\"' == *ptr) {
               if('\"' == ptr[1]) {
@@ -3121,30 +3132,30 @@
 
 /* called repeatedly until done from multi.c */
 static CURLcode ftp_multi_statemach(struct connectdata *conn,
                                     bool *done)
 {
   struct ftp_conn *ftpc = &conn->proto.ftpc;
-  CURLcode result = Curl_pp_multi_statemach(&ftpc->pp);
+  CURLcode result = Curl_pp_statemach(&ftpc->pp, FALSE);
 
   /* Check for the state outside of the Curl_socket_ready() return code checks
      since at times we are in fact already in this state when this function
      gets called. */
   *done = (ftpc->state == FTP_STOP) ? TRUE : FALSE;
 
   return result;
 }
 
-static CURLcode ftp_easy_statemach(struct connectdata *conn)
+static CURLcode ftp_block_statemach(struct connectdata *conn)
 {
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   CURLcode result = CURLE_OK;
 
   while(ftpc->state != FTP_STOP) {
-    result = Curl_pp_easy_statemach(pp);
+    result = Curl_pp_statemach(pp, TRUE);
     if(result)
       break;
   }
 
   return result;
 }
@@ -3366,21 +3377,22 @@
 
 #ifdef _WIN32_WCE
   shutdown(conn->sock[SECONDARYSOCKET],2);  /* SD_BOTH */
 #endif
 
   if(conn->sock[SECONDARYSOCKET] != CURL_SOCKET_BAD) {
-    if(!result && ftpc->dont_check && data->req.maxdownload > 0)
+    if(!result && ftpc->dont_check && data->req.maxdownload > 0) {
       /* partial download completed */
       result = Curl_pp_sendf(pp, "ABOR");
       if(result) {
         failf(data, "Failure sending ABOR command: %s",
               curl_easy_strerror(result));
         ftpc->ctl_valid = FALSE; /* mark control connection as bad */
         conn->bits.close = TRUE; /* mark for connection closure */
       }
+    }
 
     if(conn->ssl[SECONDARYSOCKET].use) {
       /* The secondary socket is using SSL so we must close down that part
          first before we close the socket for real */
       Curl_ssl_close(conn, SECONDARYSOCKET);
 
@@ -3520,13 +3532,13 @@
 
       if(cmd[0] == '*') {
         cmd++;
         acceptfail = TRUE;
       }
 
-      FTPSENDF(conn, "%s", cmd);
+      PPSENDF(&conn->proto.ftpc.pp, "%s", cmd);
 
       pp->response = Curl_tvnow(); /* timeout relative now */
 
       result = Curl_GetFTPResponse(&nread, conn, &ftpcode);
       if(result)
         return result;
@@ -3975,22 +3987,17 @@
   }
 
   case CURLWC_DOWNLOADING: {
     /* filelist has at least one file, lets get first one */
     struct ftp_conn *ftpc = &conn->proto.ftpc;
     struct curl_fileinfo *finfo = wildcard->filelist->head->ptr;
-    char *tmp_path = malloc(strlen(conn->data->state.path) +
-                      strlen(finfo->filename) + 1);
-    if(!tmp_path) {
+
+    char *tmp_path = aprintf("%s%s", wildcard->path, finfo->filename);
+    if(!tmp_path)
       return CURLE_OUT_OF_MEMORY;
-    }
 
-    tmp_path[0] = 0;
-    /* make full path to matched file */
-    strcat(tmp_path, wildcard->path);
-    strcat(tmp_path, finfo->filename);
     /* switch default "state.pathbuffer" and tmp_path, good to see
        ftp_parse_url_path function to understand this trick */
     Curl_safefree(conn->data->state.pathbuffer);
     conn->data->state.pathbuffer = tmp_path;
     conn->data->state.path = tmp_path;
 
@@ -4121,19 +4128,19 @@
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
   enum protection_level data_sec = conn->data_prot;
 #endif
 
   va_list ap;
   va_start(ap, fmt);
-  vsnprintf(s, SBUF_SIZE-3, fmt, ap);
+  write_len = vsnprintf(s, SBUF_SIZE-3, fmt, ap);
   va_end(ap);
 
-  strcat(s, "\r\n"); /* append a trailing CRLF */
+  strcpy(&s[write_len], "\r\n"); /* append a trailing CRLF */
+  write_len +=2;
 
   bytes_written=0;
-  write_len = strlen(s);
 
   res = Curl_convert_to_network(conn->data, s, write_len);
   /* Curl_convert_to_network calls failf if unsuccessful */
   if(res)
     return(res);
 
@@ -4190,13 +4197,13 @@
       state(conn, FTP_STOP);
       return result;
     }
 
     state(conn, FTP_QUIT);
 
-    result = ftp_easy_statemach(conn);
+    result = ftp_block_statemach(conn);
   }
 
   return result;
 }
 
 /***********************************************************************
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ftp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ftp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ftp.h	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ftp.h	2013-03-05 18:02:20.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -94,31 +94,24 @@
   FTPFILE_MULTICWD  = 1, /* as defined by RFC1738 */
   FTPFILE_NOCWD     = 2, /* use SIZE / RETR / STOR on the full path */
   FTPFILE_SINGLECWD = 3  /* make one CWD, then SIZE / RETR / STOR on the
                             file */
 } curl_ftpfile;
 
-typedef enum {
-  FTPTRANSFER_BODY, /* yes do transfer a body */
-  FTPTRANSFER_INFO, /* do still go through to get info/headers */
-  FTPTRANSFER_NONE, /* don't get anything and don't get info */
-  FTPTRANSFER_LAST  /* end of list marker, never used */
-} curl_ftptransfer;
-
 /* This FTP struct is used in the SessionHandle. All FTP data that is
    connection-oriented must be in FTP_conn to properly deal with the fact that
    perhaps the SessionHandle is changed between the times the connection is
    used. */
 struct FTP {
   curl_off_t *bytecountp;
   char *user;    /* user name string */
   char *passwd;  /* password string */
 
   /* transfer a file/body or not, done as a typedefed enum just to make
      debuggers display the full symbol and not just the numerical value */
-  curl_ftptransfer transfer;
+  curl_pp_transfer transfer;
   curl_off_t downloadsize;
 };
 
 
 /* ftp_conn is used for struct connection-oriented data in the connectdata
    struct */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http.c	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http.c	2013-04-12 02:46:54.000000000 +0800
@@ -70,12 +70,14 @@
 #include "multiif.h"
 #include "rawstr.h"
 #include "content_encoding.h"
 #include "http_proxy.h"
 #include "warnless.h"
 #include "non-ascii.h"
+#include "bundles.h"
+#include "pipeline.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 /* The last #include file should be: */
 #include "memdebug.h"
@@ -1734,14 +1736,17 @@
     conn->bits.authneg = TRUE;
   }
   else
     conn->bits.authneg = FALSE;
 
   Curl_safefree(conn->allocptr.ref);
-  if(data->change.referer && !Curl_checkheaders(data, "Referer:"))
+  if(data->change.referer && !Curl_checkheaders(data, "Referer:")) {
     conn->allocptr.ref = aprintf("Referer: %s\r\n", data->change.referer);
+    if(!conn->allocptr.ref)
+      return CURLE_OUT_OF_MEMORY;
+  }
   else
     conn->allocptr.ref = NULL;
 
   if(data->set.str[STRING_COOKIE] && !Curl_checkheaders(data, "Cookie:"))
     addcookies = data->set.str[STRING_COOKIE];
 
@@ -3145,19 +3150,25 @@
              server keeps it open for us! */
           infof(data, "HTTP 1.0, assume close after body\n");
           conn->bits.close = TRUE;
         }
         else if(conn->httpversion >= 11 &&
                 !conn->bits.close) {
+          struct connectbundle *cb_ptr;
 
           /* If HTTP version is >= 1.1 and connection is persistent
              server supports pipelining. */
           DEBUGF(infof(data,
                        "HTTP 1.1 or later with persistent connection, "
                        "pipelining supported\n"));
-          conn->server_supports_pipelining = TRUE;
+          /* Activate pipelining if needed */
+          cb_ptr = conn->bundle;
+          if(cb_ptr) {
+            if(!Curl_pipeline_site_blacklisted(data, conn))
+              cb_ptr->server_supports_pipelining = TRUE;
+          }
         }
 
         switch(k->httpcode) {
         case 204:
           /* (quote from RFC2616, section 10.2.5): The server has
            * fulfilled the request but does not need to return an
@@ -3228,12 +3239,22 @@
         free(contenttype);
       else {
         Curl_safefree(data->info.contenttype);
         data->info.contenttype = contenttype;
       }
     }
+    else if(checkprefix("Server:", k->p)) {
+      char *server_name = copy_header_value(k->p);
+
+      /* Turn off pipelining if the server version is blacklisted */
+      if(conn->bundle && conn->bundle->server_supports_pipelining) {
+        if(Curl_pipeline_server_blacklisted(data, server_name))
+          conn->bundle->server_supports_pipelining = FALSE;
+      }
+      Curl_safefree(server_name);
+    }
     else if((conn->httpversion == 10) &&
             conn->bits.httpproxy &&
             Curl_compareheader(k->p,
                                "Proxy-Connection:", "keep-alive")) {
       /*
        * When a HTTP/1.0 reply comes when using a proxy, the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http_digest.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http_digest.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http_digest.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http_digest.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -284,12 +284,13 @@
   char *cnonce = NULL;
   size_t cnonce_sz = 0;
   char *tmp = NULL;
   struct timeval now;
 
   char **allocuserpwd;
+  size_t userlen;
   const char *userp;
   const char *passwdp;
   struct auth *authp;
 
   struct SessionHandle *data = conn->data;
   struct digestdata *d;
@@ -530,16 +531,17 @@
       return CURLE_OUT_OF_MEMORY;
     free(*allocuserpwd);
     *allocuserpwd = tmp;
   }
 
   /* append CRLF + zero (3 bytes) to the userpwd header */
-  tmp = realloc(*allocuserpwd, strlen(*allocuserpwd) + 3);
+  userlen = strlen(*allocuserpwd);
+  tmp = realloc(*allocuserpwd, userlen + 3);
   if(!tmp)
     return CURLE_OUT_OF_MEMORY;
-  strcat(tmp, "\r\n");
+  strcpy(&tmp[userlen], "\r\n"); /* append the data */
   *allocuserpwd = tmp;
 
   return CURLE_OK;
 }
 
 static void digest_cleanup_one(struct digestdata *d)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http_negotiate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http_negotiate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http_negotiate.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http_negotiate.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -132,13 +132,13 @@
 int Curl_input_negotiate(struct connectdata *conn, bool proxy,
                          const char *header)
 {
   struct SessionHandle *data = conn->data;
   struct negotiatedata *neg_ctx = proxy?&data->state.proxyneg:
     &data->state.negotiate;
-  OM_uint32 major_status, minor_status, minor_status2;
+  OM_uint32 major_status, minor_status, discard_st;
   gss_buffer_desc input_token = GSS_C_EMPTY_BUFFER;
   gss_buffer_desc output_token = GSS_C_EMPTY_BUFFER;
   int ret;
   size_t len;
   size_t rawlen = 0;
   bool gss;
@@ -189,52 +189,56 @@
     error = Curl_base64_decode(header,
                                (unsigned char **)&input_token.value, &rawlen);
     if(error || rawlen == 0)
       return -1;
     input_token.length = rawlen;
 
+    DEBUGASSERT(input_token.value != NULL);
+
 #ifdef HAVE_SPNEGO /* Handle SPNEGO */
     if(checkprefix("Negotiate", header)) {
-      ASN1_OBJECT *   object            = NULL;
-      unsigned char * spnegoToken       = NULL;
+      unsigned char  *spnegoToken       = NULL;
       size_t          spnegoTokenLength = 0;
-      unsigned char * mechToken         = NULL;
-      size_t          mechTokenLength   = 0;
-
-      if(input_token.value == NULL)
-        return CURLE_OUT_OF_MEMORY;
+      gss_buffer_desc mechToken         = GSS_C_EMPTY_BUFFER;
 
       spnegoToken = malloc(input_token.length);
-      if(spnegoToken == NULL)
+      if(spnegoToken == NULL) {
+        Curl_safefree(input_token.value);
         return CURLE_OUT_OF_MEMORY;
-
+      }
+      memcpy(spnegoToken, input_token.value, input_token.length);
       spnegoTokenLength = input_token.length;
 
-      object = OBJ_txt2obj ("1.2.840.113554.1.2.2", 1);
       if(!parseSpnegoTargetToken(spnegoToken,
                                  spnegoTokenLength,
                                  NULL,
                                  NULL,
-                                 &mechToken,
-                                 &mechTokenLength,
+                                 (unsigned char**)&mechToken.value,
+                                 &mechToken.length,
                                  NULL,
                                  NULL)) {
-        free(spnegoToken);
-        spnegoToken = NULL;
+        Curl_safefree(spnegoToken);
         infof(data, "Parse SPNEGO Target Token failed\n");
       }
+      else if(!mechToken.value || !mechToken.length) {
+        Curl_safefree(spnegoToken);
+        if(mechToken.value)
+          gss_release_buffer(&discard_st, &mechToken);
+        infof(data, "Parse SPNEGO Target Token succeeded (NULL token)\n");
+      }
       else {
-        free(input_token.value);
-        input_token.value = malloc(mechTokenLength);
-        if(input_token.value == NULL)
+        Curl_safefree(spnegoToken);
+        Curl_safefree(input_token.value);
+        input_token.value = malloc(mechToken.length);
+        if(input_token.value == NULL) {
+          gss_release_buffer(&discard_st, &mechToken);
           return CURLE_OUT_OF_MEMORY;
-
-        memcpy(input_token.value, mechToken,mechTokenLength);
-        input_token.length = mechTokenLength;
-        free(mechToken);
-        mechToken = NULL;
+        }
+        memcpy(input_token.value, mechToken.value, mechToken.length);
+        input_token.length = mechToken.length;
+        gss_release_buffer(&discard_st, &mechToken);
         infof(data, "Parse SPNEGO Target Token succeeded\n");
       }
     }
 #endif
   }
 
@@ -243,120 +247,131 @@
                                            &neg_ctx->context,
                                            neg_ctx->server_name,
                                            GSS_C_NO_CHANNEL_BINDINGS,
                                            &input_token,
                                            &output_token,
                                            NULL);
-  if(input_token.length > 0)
-    gss_release_buffer(&minor_status2, &input_token);
+  Curl_safefree(input_token.value);
+
   neg_ctx->status = major_status;
   if(GSS_ERROR(major_status)) {
-    /* Curl_cleanup_negotiate(data) ??? */
-    log_gss_error(conn, minor_status,
-                  "gss_init_sec_context() failed: ");
+    if(output_token.value)
+      gss_release_buffer(&discard_st, &output_token);
+    log_gss_error(conn, minor_status, "gss_init_sec_context() failed: ");
     return -1;
   }
 
-  if(output_token.length == 0) {
+  if(!output_token.value || !output_token.length) {
+    if(output_token.value)
+      gss_release_buffer(&discard_st, &output_token);
     return -1;
   }
 
   neg_ctx->output_token = output_token;
-  /* conn->bits.close = FALSE; */
-
   return 0;
 }
 
 
 CURLcode Curl_output_negotiate(struct connectdata *conn, bool proxy)
 {
   struct negotiatedata *neg_ctx = proxy?&conn->data->state.proxyneg:
     &conn->data->state.negotiate;
   char *encoded = NULL;
   size_t len = 0;
   char *userp;
   CURLcode error;
+  OM_uint32 discard_st;
 
 #ifdef HAVE_SPNEGO /* Handle SPNEGO */
   if(checkprefix("Negotiate", neg_ctx->protocol)) {
-    ASN1_OBJECT *   object            = NULL;
-    unsigned char * spnegoToken       = NULL;
-    size_t          spnegoTokenLength = 0;
-    unsigned char * responseToken       = NULL;
+    ASN1_OBJECT    *object              = NULL;
+    unsigned char  *responseToken       = NULL;
     size_t          responseTokenLength = 0;
+    gss_buffer_desc spnegoToken         = GSS_C_EMPTY_BUFFER;
 
     responseToken = malloc(neg_ctx->output_token.length);
     if(responseToken == NULL)
       return CURLE_OUT_OF_MEMORY;
     memcpy(responseToken, neg_ctx->output_token.value,
            neg_ctx->output_token.length);
     responseTokenLength = neg_ctx->output_token.length;
 
-    object=OBJ_txt2obj ("1.2.840.113554.1.2.2", 1);
-    if(!makeSpnegoInitialToken (object,
-                                 responseToken,
-                                 responseTokenLength,
-                                 &spnegoToken,
-                                 &spnegoTokenLength)) {
-      free(responseToken);
-      responseToken = NULL;
+    object = OBJ_txt2obj("1.2.840.113554.1.2.2", 1);
+    if(!object) {
+      Curl_safefree(responseToken);
+      return CURLE_OUT_OF_MEMORY;
+    }
+
+    if(!makeSpnegoInitialToken(object,
+                               responseToken,
+                               responseTokenLength,
+                               (unsigned char**)&spnegoToken.value,
+                               &spnegoToken.length)) {
+      Curl_safefree(responseToken);
+      ASN1_OBJECT_free(object);
       infof(conn->data, "Make SPNEGO Initial Token failed\n");
     }
+    else if(!spnegoToken.value || !spnegoToken.length) {
+      Curl_safefree(responseToken);
+      ASN1_OBJECT_free(object);
+      if(spnegoToken.value)
+        gss_release_buffer(&discard_st, &spnegoToken);
+      infof(conn->data, "Make SPNEGO Initial Token succeeded (NULL token)\n");
+    }
     else {
-      free(responseToken);
-      responseToken = NULL;
-      free(neg_ctx->output_token.value);
-      neg_ctx->output_token.value = malloc(spnegoTokenLength);
-      if(neg_ctx->output_token.value == NULL) {
-        free(spnegoToken);
-        spnegoToken = NULL;
-        return CURLE_OUT_OF_MEMORY;
-      }
-      memcpy(neg_ctx->output_token.value, spnegoToken,spnegoTokenLength);
-      neg_ctx->output_token.length = spnegoTokenLength;
-      free(spnegoToken);
-      spnegoToken = NULL;
+      Curl_safefree(responseToken);
+      ASN1_OBJECT_free(object);
+      gss_release_buffer(&discard_st, &neg_ctx->output_token);
+      neg_ctx->output_token.value = spnegoToken.value;
+      neg_ctx->output_token.length = spnegoToken.length;
       infof(conn->data, "Make SPNEGO Initial Token succeeded\n");
     }
   }
 #endif
   error = Curl_base64_encode(conn->data,
                              neg_ctx->output_token.value,
                              neg_ctx->output_token.length,
                              &encoded, &len);
   if(error) {
-    Curl_safefree(neg_ctx->output_token.value);
+    gss_release_buffer(&discard_st, &neg_ctx->output_token);
     neg_ctx->output_token.value = NULL;
+    neg_ctx->output_token.length = 0;
     return error;
   }
 
-  if(len == 0) {
-    Curl_safefree(neg_ctx->output_token.value);
+  if(!encoded || !len) {
+    gss_release_buffer(&discard_st, &neg_ctx->output_token);
     neg_ctx->output_token.value = NULL;
+    neg_ctx->output_token.length = 0;
     return CURLE_REMOTE_ACCESS_DENIED;
   }
 
   userp = aprintf("%sAuthorization: %s %s\r\n", proxy ? "Proxy-" : "",
                   neg_ctx->protocol, encoded);
-
-  if(proxy)
+  if(proxy) {
+    Curl_safefree(conn->allocptr.proxyuserpwd);
     conn->allocptr.proxyuserpwd = userp;
-  else
+  }
+  else {
+    Curl_safefree(conn->allocptr.userpwd);
     conn->allocptr.userpwd = userp;
-  free(encoded);
-  Curl_cleanup_negotiate (conn->data);
+  }
+
+  Curl_safefree(encoded);
+  Curl_cleanup_negotiate(conn->data);
+
   return (userp == NULL) ? CURLE_OUT_OF_MEMORY : CURLE_OK;
 }
 
 static void cleanup(struct negotiatedata *neg_ctx)
 {
   OM_uint32 minor_status;
   if(neg_ctx->context != GSS_C_NO_CONTEXT)
     gss_delete_sec_context(&minor_status, &neg_ctx->context, GSS_C_NO_BUFFER);
 
-  if(neg_ctx->output_token.length != 0)
+  if(neg_ctx->output_token.value)
     gss_release_buffer(&minor_status, &neg_ctx->output_token);
 
   if(neg_ctx->server_name != GSS_C_NO_NAME)
     gss_release_name(&minor_status, &neg_ctx->server_name);
 
   memset(neg_ctx, 0, sizeof(*neg_ctx));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http_proxy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http_proxy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/http_proxy.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/http_proxy.c	2013-04-12 02:46:54.000000000 +0800
@@ -353,12 +353,16 @@
                   writetype = CLIENTWRITE_HEADER;
                   if(data->set.include_header)
                     writetype |= CLIENTWRITE_BODY;
 
                   result = Curl_client_write(conn, writetype, line_start,
                                              perline);
+
+                  data->info.header_size += (long)perline;
+                  data->req.headerbytecount += (long)perline;
+
                   if(result)
                     return result;
 
                   /* Newlines are CRLF, so the CR is ignored as the line isn't
                      really terminated until the LF comes. Treat a following CR
                      as end-of-headers as well.*/
@@ -557,9 +561,11 @@
   conn->allocptr.proxyuserpwd = NULL;
 
   data->state.authproxy.done = TRUE;
 
   infof (data, "Proxy replied OK to CONNECT request\n");
   data->req.ignorebody = FALSE; /* put it (back) to non-ignore state */
+  conn->bits.rewindaftersend = FALSE; /* make sure this isn't set for the
+                                         document request  */
   return CURLE_OK;
 }
 #endif /* CURL_DISABLE_PROXY */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/if2ip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/if2ip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/if2ip.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/if2ip.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -80,110 +80,139 @@
     }
     freeifaddrs(head);
   }
   return result;
 }
 
-char *Curl_if2ip(int af, const char *interf, char *buf, int buf_size)
+if2ip_result_t Curl_if2ip(int af, unsigned int remote_scope,
+                          const char *interf, char *buf, int buf_size)
 {
   struct ifaddrs *iface, *head;
-  char *ip = NULL;
+  if2ip_result_t res = IF2IP_NOT_FOUND;
+
+#ifndef ENABLE_IPV6
+  (void) remote_scope;
+#endif
 
   if(getifaddrs(&head) >= 0) {
     for(iface=head; iface != NULL; iface=iface->ifa_next) {
-      if((iface->ifa_addr != NULL) &&
-         (iface->ifa_addr->sa_family == af) &&
-         curl_strequal(iface->ifa_name, interf)) {
-        void *addr;
-        char scope[12]="";
+      if(iface->ifa_addr != NULL) {
+        if(iface->ifa_addr->sa_family == af) {
+          if(curl_strequal(iface->ifa_name, interf)) {
+            void *addr;
+            char *ip;
+            char scope[12]="";
+            char ipstr[64];
 #ifdef ENABLE_IPV6
-        if(af == AF_INET6) {
-          unsigned int scopeid = 0;
-          addr = &((struct sockaddr_in6 *)iface->ifa_addr)->sin6_addr;
+            if(af == AF_INET6) {
+              unsigned int scopeid = 0;
+              addr = &((struct sockaddr_in6 *)iface->ifa_addr)->sin6_addr;
 #ifdef HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID
-          /* Include the scope of this interface as part of the address */
-          scopeid = ((struct sockaddr_in6 *)iface->ifa_addr)->sin6_scope_id;
-#endif
-          if(scopeid)
-            snprintf(scope, sizeof(scope), "%%%u", scopeid);
+              /* Include the scope of this interface as part of the address */
+              scopeid =
+                ((struct sockaddr_in6 *)iface->ifa_addr)->sin6_scope_id;
+#endif
+              if(scopeid != remote_scope) {
+                /* We are interested only in interface addresses whose
+                   scope ID matches the remote address we want to
+                   connect to: global (0) for global, link-local for
+                   link-local, etc... */
+                if(res == IF2IP_NOT_FOUND) res = IF2IP_AF_NOT_SUPPORTED;
+                continue;
+              }
+              if(scopeid)
+                snprintf(scope, sizeof(scope), "%%%u", scopeid);
+            }
+            else
+#endif
+              addr = &((struct sockaddr_in *)iface->ifa_addr)->sin_addr;
+            res = IF2IP_FOUND;
+            ip = (char *) Curl_inet_ntop(af, addr, ipstr, sizeof(ipstr));
+            snprintf(buf, buf_size, "%s%s", ip, scope);
+            break;
+          }
+        }
+        else if((res == IF2IP_NOT_FOUND) &&
+                curl_strequal(iface->ifa_name, interf)) {
+          res = IF2IP_AF_NOT_SUPPORTED;
         }
-        else
-#endif
-          addr = &((struct sockaddr_in *)iface->ifa_addr)->sin_addr;
-        ip = (char *) Curl_inet_ntop(af, addr, buf, buf_size);
-        strlcat(buf, scope, buf_size);
-        break;
       }
     }
     freeifaddrs(head);
   }
-  return ip;
+  return res;
 }
 
 #elif defined(HAVE_IOCTL_SIOCGIFADDR)
 
 bool Curl_if_is_interface_name(const char *interf)
 {
   /* This is here just to support the old interfaces */
   char buf[256];
 
-  char *ip = Curl_if2ip(AF_INET, interf, buf, sizeof(buf));
-
-  return (ip != NULL) ? TRUE : FALSE;
+  return (Curl_if2ip(AF_INET, 0, interf, buf, sizeof(buf)) ==
+          IF2IP_NOT_FOUND) ? FALSE : TRUE;
 }
 
-char *Curl_if2ip(int af, const char *interf, char *buf, int buf_size)
+if2ip_result_t Curl_if2ip(int af, unsigned int remote_scope,
+                          const char *interf, char *buf, int buf_size)
 {
   struct ifreq req;
   struct in_addr in;
   struct sockaddr_in *s;
   curl_socket_t dummy;
   size_t len;
-  char *ip;
+
+  (void)remote_scope;
 
   if(!interf || (af != AF_INET))
-    return NULL;
+    return IF2IP_NOT_FOUND;
 
   len = strlen(interf);
   if(len >= sizeof(req.ifr_name))
-    return NULL;
+    return IF2IP_NOT_FOUND;
 
   dummy = socket(AF_INET, SOCK_STREAM, 0);
   if(CURL_SOCKET_BAD == dummy)
-    return NULL;
+    return IF2IP_NOT_FOUND;
 
   memset(&req, 0, sizeof(req));
   memcpy(req.ifr_name, interf, len+1);
   req.ifr_addr.sa_family = AF_INET;
 
   if(ioctl(dummy, SIOCGIFADDR, &req) < 0) {
     sclose(dummy);
-    return NULL;
+    /* With SIOCGIFADDR, we cannot tell the difference between an interface
+       that does not exist and an interface that has no address of the
+       correct family. Assume the interface does not exist */
+    return IF2IP_NOT_FOUND;
   }
 
   s = (struct sockaddr_in *)&req.ifr_addr;
   memcpy(&in, &s->sin_addr, sizeof(in));
-  ip = (char *) Curl_inet_ntop(s->sin_family, &in, buf, buf_size);
+  Curl_inet_ntop(s->sin_family, &in, buf, buf_size);
 
   sclose(dummy);
-  return ip;
+  return IF2IP_FOUND;
 }
 
 #else
 
 bool Curl_if_is_interface_name(const char *interf)
 {
   (void) interf;
 
   return FALSE;
 }
 
-char *Curl_if2ip(int af, const char *interf, char *buf, int buf_size)
+if2ip_result_t Curl_if2ip(int af, unsigned int remote_scope,
+                          const char *interf, char *buf, int buf_size)
 {
     (void) af;
+    (void) remote_scope;
     (void) interf;
     (void) buf;
     (void) buf_size;
-    return NULL;
+    return IF2IP_NOT_FOUND;
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/if2ip.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/if2ip.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/if2ip.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/if2ip.h	2013-04-12 02:46:54.000000000 +0800
@@ -21,13 +21,21 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 #include "curl_setup.h"
 
 bool Curl_if_is_interface_name(const char *interf);
-char *Curl_if2ip(int af, const char *interf, char *buf, int buf_size);
+
+typedef enum {
+  IF2IP_NOT_FOUND = 0, /* Interface not found */
+  IF2IP_AF_NOT_SUPPORTED = 1, /* Int. exists but has no address for this af */
+  IF2IP_FOUND = 2 /* The address has been stored in "buf" */
+} if2ip_result_t;
+
+if2ip_result_t Curl_if2ip(int af, unsigned int remote_scope,
+                          const char *interf, char *buf, int buf_size);
 
 #ifdef __INTERIX
 
 /* Nedelcho Stanev's work-around for SFU 3.0 */
 struct ifreq {
 #define IFNAMSIZ 16
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/imap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/imap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/imap.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/imap.c	2013-04-12 02:46:54.000000000 +0800
@@ -21,12 +21,13 @@
  * RFC2195 CRAM-MD5 authentication
  * RFC2595 Using TLS with IMAP, POP3 and ACAP
  * RFC2831 DIGEST-MD5 authentication
  * RFC3501 IMAPv4 protocol
  * RFC4422 Simple Authentication and Security Layer (SASL)
  * RFC4616 PLAIN authentication
+ * RFC4959 IMAP Extension for SASL Initial Client Response
  * RFC5092 IMAP URL Scheme
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
@@ -83,24 +84,24 @@
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 /* Local API functions */
 static CURLcode imap_parse_url_path(struct connectdata *conn);
+static CURLcode imap_parse_custom_request(struct connectdata *conn);
 static CURLcode imap_regular_transfer(struct connectdata *conn, bool *done);
 static CURLcode imap_do(struct connectdata *conn, bool *done);
 static CURLcode imap_done(struct connectdata *conn, CURLcode status,
                           bool premature);
 static CURLcode imap_connect(struct connectdata *conn, bool *done);
 static CURLcode imap_disconnect(struct connectdata *conn, bool dead);
 static CURLcode imap_multi_statemach(struct connectdata *conn, bool *done);
 static int imap_getsock(struct connectdata *conn, curl_socket_t *socks,
                         int numsocks);
 static CURLcode imap_doing(struct connectdata *conn, bool *dophase_done);
 static CURLcode imap_setup_connection(struct connectdata *conn);
-static CURLcode imap_state_upgrade_tls(struct connectdata *conn);
 
 /*
  * IMAP protocol handler.
  */
 
 const struct Curl_handler Curl_handler_imap = {
@@ -200,66 +201,69 @@
   CURLPROTO_HTTP,                       /* protocol */
   PROTOPT_NONE                          /* flags */
 };
 #endif
 #endif
 
+#ifdef USE_SSL
+static void imap_to_imaps(struct connectdata *conn)
+{
+  conn->handler = &Curl_handler_imaps;
+}
+#else
+#define imap_to_imaps(x) Curl_nop_stmt
+#endif
+
 /***********************************************************************
  *
  * imap_sendf()
  *
  * Sends the formated string as an IMAP command to the server.
  *
  * Designed to never block.
  */
-static CURLcode imap_sendf(struct connectdata *conn,
-                           const char *idstr, /* command id to wait for */
-                           const char *fmt, ...)
+static CURLcode imap_sendf(struct connectdata *conn, const char *fmt, ...)
 {
-  CURLcode res;
+  CURLcode result = CURLE_OK;
   struct imap_conn *imapc = &conn->proto.imapc;
+  char *taggedfmt;
   va_list ap;
   va_start(ap, fmt);
 
-  imapc->idstr = idstr;
-
-  res = Curl_pp_vsendf(&imapc->pp, fmt, ap);
+  /* Calculate the next command ID wrapping at 3 digits */
+  imapc->cmdid = (imapc->cmdid + 1) % 1000;
 
-  va_end(ap);
-
-  return res;
-}
+  /* Calculate the tag based on the connection ID and command ID */
+  snprintf(imapc->resptag, sizeof(imapc->resptag), "%c%03d",
+           'A' + (conn->connection_id % 26), imapc->cmdid);
+
+  /* Prefix the format with the tag */
+  taggedfmt = aprintf("%s %s", imapc->resptag, fmt);
+  if(!taggedfmt)
+    return CURLE_OUT_OF_MEMORY;
 
-static const char *getcmdid(struct connectdata *conn)
-{
-  static const char * const ids[]= {
-    "A",
-    "B",
-    "C",
-    "D"
-  };
-
-  struct imap_conn *imapc = &conn->proto.imapc;
+  /* Send the data with the tag */
+  result = Curl_pp_vsendf(&imapc->pp, taggedfmt, ap);
 
-  /* Get the next id, but wrap at end of table */
-  imapc->cmdid = (int)((imapc->cmdid + 1) % (sizeof(ids) / sizeof(ids[0])));
+  Curl_safefree(taggedfmt);
+  va_end(ap);
 
-  return ids[imapc->cmdid];
+  return result;
 }
 
 /***********************************************************************
  *
  * imap_atom()
  *
  * Checks the input string for characters that need escaping and returns an
  * atom ready for sending to the server.
  *
  * The returned string needs to be freed.
  *
  */
-static char* imap_atom(const char* str)
+static char *imap_atom(const char *str)
 {
   const char *p1;
   char *p2;
   size_t backsp_count = 0;
   size_t quote_count = 0;
   bool space_exists = FALSE;
@@ -319,371 +323,721 @@
   /* Terminate the string */
   newstr[newlen] = '\0';
 
   return newstr;
 }
 
-/* Function that checks for an ending imap status code at the start of the
-   given string but also detects the supported authentication mechanisms from
-   the CAPABILITY response. */
-static int imap_endofresp(struct pingpong *pp, int *resp)
-{
-  char *line = pp->linestart_resp;
-  size_t len = pp->nread_resp;
-  struct imap_conn *imapc = &pp->conn->proto.imapc;
-  const char *id = imapc->idstr;
+/***********************************************************************
+ *
+ * imap_matchresp()
+ *
+ * Determines whether the untagged response is related to the specified
+ * command by checking if it is in format "* <command-name> ..." or
+ * "* <number> <command-name> ...".
+ *
+ * The "* " marker is assumed to have already been checked by the caller.
+ */
+static bool imap_matchresp(const char *line, size_t len, const char *cmd)
+{
+  const char *end = line + len;
+  size_t cmd_len = strlen(cmd);
+
+  /* Skip the untagged response marker */
+  line += 2;
+
+  /* Do we have a number after the marker? */
+  if(line < end && ISDIGIT(*line)) {
+    /* Skip the number */
+    do
+      line++;
+    while(line < end && ISDIGIT(*line));
+
+    /* Do we have the space character? */
+    if(line == end || *line != ' ')
+      return FALSE;
+
+    line++;
+  }
+
+  /* Does the command name match and is it followed by a space character or at
+     the end of line? */
+  if(line + cmd_len <= end && Curl_raw_nequal(line, cmd, cmd_len) &&
+     (line[cmd_len] == ' ' || line + cmd_len == end))
+    return TRUE;
+
+  return FALSE;
+}
+
+/***********************************************************************
+ *
+ * imap_endofresp()
+ *
+ * Checks whether the given string is a valid tagged, untagged or continuation
+ * response which can be processed by the response handler.
+ */
+static bool imap_endofresp(struct connectdata *conn, char *line, size_t len,
+                           int *resp)
+{
+  struct IMAP *imap = conn->data->state.proto.imap;
+  struct imap_conn *imapc = &conn->proto.imapc;
+  const char *id = imapc->resptag;
   size_t id_len = strlen(id);
-  size_t wordlen;
 
-  /* Do we have a generic command response? */
-  if(len >= id_len + 3) {
-    if(!memcmp(id, line, id_len) && line[id_len] == ' ') {
-      *resp = line[id_len + 1]; /* O, N or B */
-      return TRUE;
+  /* Do we have a tagged command response? */
+  if(len >= id_len + 1 && !memcmp(id, line, id_len) && line[id_len] == ' ') {
+    line += id_len + 1;
+    len -= id_len + 1;
+
+    if(len >= 2 && !memcmp(line, "OK", 2))
+      *resp = 'O';
+    else if(len >= 2 && !memcmp(line, "NO", 2))
+      *resp = 'N';
+    else if(len >= 3 && !memcmp(line, "BAD", 3))
+      *resp = 'B';
+    else {
+      failf(conn->data, "Bad tagged response");
+      *resp = -1;
     }
-  }
 
-  /* Do we have a generic continuation response? */
-  if((len == 3 && !memcmp("+", line, 1)) ||
-     (len >= 2 && !memcmp("+ ", line, 2))) {
-    *resp = '+';
     return TRUE;
   }
 
-  /* Are we processing CAPABILITY command responses? */
-  if(imapc->state == IMAP_CAPABILITY) {
-    /* Do we have a valid response? */
-    if(len >= 2 && !memcmp("* ", line, 2)) {
-      line += 2;
-      len -= 2;
-
-      /* Loop through the data line */
-      for(;;) {
-        while(len &&
-              (*line == ' ' || *line == '\t' ||
-               *line == '\r' || *line == '\n')) {
-
-          if(*line == '\n')
-            return FALSE;
-
-          line++;
-          len--;
-        }
-
-        if(!len)
-          break;
-
-        /* Extract the word */
-        for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
-              line[wordlen] != '\t' && line[wordlen] != '\r' &&
-              line[wordlen] != '\n';)
-          wordlen++;
-
-        /* Has the server explicitly disabled clear text authentication? */
-        if(wordlen == 13 && !memcmp(line, "LOGINDISABLED", 13))
-          imapc->login_disabled = TRUE;
-
-        /* Do we have a SASL based authentication mechanism? */
-        else if(wordlen > 5 && !memcmp(line, "AUTH=", 5)) {
-          line += 5;
-          len -= 5;
-          wordlen -= 5;
-
-          /* Test the word for a matching authentication mechanism */
-          if(wordlen == 5 && !memcmp(line, "LOGIN", 5))
-            imapc->authmechs |= SASL_MECH_LOGIN;
-          if(wordlen == 5 && !memcmp(line, "PLAIN", 5))
-            imapc->authmechs |= SASL_MECH_PLAIN;
-          else if(wordlen == 8 && !memcmp(line, "CRAM-MD5", 8))
-            imapc->authmechs |= SASL_MECH_CRAM_MD5;
-          else if(wordlen == 10 && !memcmp(line, "DIGEST-MD5", 10))
-            imapc->authmechs |= SASL_MECH_DIGEST_MD5;
-          else if(wordlen == 6 && !memcmp(line, "GSSAPI", 6))
-            imapc->authmechs |= SASL_MECH_GSSAPI;
-          else if(wordlen == 8 && !memcmp(line, "EXTERNAL", 8))
-            imapc->authmechs |= SASL_MECH_EXTERNAL;
-          else if(wordlen == 4 && !memcmp(line, "NTLM", 4))
-            imapc->authmechs |= SASL_MECH_NTLM;
-        }
+  /* Do we have an untagged command response? */
+  if(len >= 2 && !memcmp("* ", line, 2)) {
+    switch(imapc->state) {
+      /* States which are interested in untagged responses */
+      case IMAP_CAPABILITY:
+        if(!imap_matchresp(line, len, "CAPABILITY"))
+          return FALSE;
+        break;
+
+      case IMAP_LIST:
+        if((!imap->custom && !imap_matchresp(line, len, "LIST")) ||
+          (imap->custom && !imap_matchresp(line, len, imap->custom) &&
+           (strcmp(imap->custom, "STORE") ||
+            !imap_matchresp(line, len, "FETCH")) &&
+           strcmp(imap->custom, "SELECT") &&
+           strcmp(imap->custom, "EXAMINE")))
+          return FALSE;
+        break;
 
-        line += wordlen;
-        len -= wordlen;
-      }
+      case IMAP_SELECT:
+        /* SELECT is special in that its untagged responses do not have a
+           common prefix so accept anything! */
+        break;
+
+      case IMAP_FETCH:
+        if(!imap_matchresp(line, len, "FETCH"))
+          return FALSE;
+        break;
+
+      /* Ignore other untagged responses */
+      default:
+        return FALSE;
     }
+
+    *resp = '*';
+    return TRUE;
   }
 
-  /* Are we processing FETCH command responses? */
-  if(imapc->state == IMAP_FETCH) {
-    /* Do we have a valid response? */
-    if(len >= 2 && !memcmp("* ", line, 2)) {
-      *resp = '*';
-      return TRUE;
+  /* Do we have a continuation response? */
+  if((len == 3 && !memcmp("+", line, 1)) ||
+     (len >= 2 && !memcmp("+ ", line, 2))) {
+    switch(imapc->state) {
+      /* States which are interested in continuation responses */
+      case IMAP_AUTHENTICATE_PLAIN:
+      case IMAP_AUTHENTICATE_LOGIN:
+      case IMAP_AUTHENTICATE_LOGIN_PASSWD:
+      case IMAP_AUTHENTICATE_CRAMMD5:
+      case IMAP_AUTHENTICATE_DIGESTMD5:
+      case IMAP_AUTHENTICATE_DIGESTMD5_RESP:
+      case IMAP_AUTHENTICATE_NTLM:
+      case IMAP_AUTHENTICATE_NTLM_TYPE2MSG:
+      case IMAP_AUTHENTICATE_FINAL:
+      case IMAP_APPEND:
+        *resp = '+';
+        break;
+
+      default:
+        failf(conn->data, "Unexpected continuation response");
+        *resp = -1;
+        break;
     }
+
+    return TRUE;
   }
 
   return FALSE; /* Nothing for us */
 }
 
-/* This is the ONLY way to change IMAP state! */
+/***********************************************************************
+ *
+ * state()
+ *
+ * This is the ONLY way to change IMAP state!
+ */
 static void state(struct connectdata *conn, imapstate newstate)
 {
   struct imap_conn *imapc = &conn->proto.imapc;
 #if defined(DEBUGBUILD) && !defined(CURL_DISABLE_VERBOSE_STRINGS)
   /* for debug purposes */
   static const char * const names[]={
     "STOP",
     "SERVERGREET",
+    "CAPABILITY",
     "STARTTLS",
     "UPGRADETLS",
-    "CAPABILITY",
     "AUTHENTICATE_PLAIN",
     "AUTHENTICATE_LOGIN",
     "AUTHENTICATE_LOGIN_PASSWD",
     "AUTHENTICATE_CRAMMD5",
     "AUTHENTICATE_DIGESTMD5",
     "AUTHENTICATE_DIGESTMD5_RESP",
     "AUTHENTICATE_NTLM",
     "AUTHENTICATE_NTLM_TYPE2MSG",
-    "AUTHENTICATE",
+    "AUTHENTICATE_FINAL",
     "LOGIN",
+    "LIST",
     "SELECT",
     "FETCH",
+    "FETCH_FINAL",
+    "APPEND",
+    "APPEND_FINAL",
     "LOGOUT",
     /* LAST */
   };
 
   if(imapc->state != newstate)
     infof(conn->data, "IMAP %p state change from %s to %s\n",
           imapc, names[imapc->state], names[newstate]);
 #endif
 
   imapc->state = newstate;
 }
 
-static CURLcode imap_state_capability(struct connectdata *conn)
+/***********************************************************************
+ *
+ * imap_perform_capability()
+ *
+ * Sends the CAPABILITY command in order to obtain a list of server side
+ * supported capabilities.
+ */
+static CURLcode imap_perform_capability(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   struct imap_conn *imapc = &conn->proto.imapc;
-  const char *str;
 
   imapc->authmechs = 0;         /* No known authentication mechanisms yet */
   imapc->authused = 0;          /* Clear the authentication mechanism used */
+  imapc->tls_supported = FALSE; /* Clear the TLS capability */
 
-  /* Check we have a username and password to authenticate with and end the
-     connect phase if we don't */
-  if(!conn->bits.user_passwd) {
-    state(conn, IMAP_STOP);
+  /* Send the CAPABILITY command */
+  result = imap_sendf(conn, "CAPABILITY");
 
-    return result;
-  }
+  if(!result)
+    state(conn, IMAP_CAPABILITY);
 
-  str = getcmdid(conn);
+  return result;
+}
 
-  /* Send the CAPABILITY command */
-  result = imap_sendf(conn, str, "%s CAPABILITY", str);
+/***********************************************************************
+ *
+ * imap_perform_starttls()
+ *
+ * Sends the STARTTLS command to start the upgrade to TLS.
+ */
+static CURLcode imap_perform_starttls(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
 
-  if(result)
-    return result;
+  /* Send the STARTTLS command */
+  result = imap_sendf(conn, "STARTTLS");
 
-  state(conn, IMAP_CAPABILITY);
+  if(!result)
+    state(conn, IMAP_STARTTLS);
 
-  return CURLE_OK;
+  return result;
 }
 
-static CURLcode imap_state_login(struct connectdata *conn)
+/***********************************************************************
+ *
+ * imap_perform_upgrade_tls()
+ *
+ * Performs the upgrade to TLS.
+ */
+static CURLcode imap_perform_upgrade_tls(struct connectdata *conn)
 {
-  CURLcode result;
-  struct FTP *imap = conn->data->state.proto.imap;
-  const char *str = getcmdid(conn);
-  char *user = imap_atom(imap->user);
-  char *passwd = imap_atom(imap->passwd);
-
-  /* send USER and password */
-  result = imap_sendf(conn, str, "%s LOGIN %s %s", str,
-                      user ? user : "", passwd ? passwd : "");
+  CURLcode result = CURLE_OK;
+  struct imap_conn *imapc = &conn->proto.imapc;
 
-  Curl_safefree(user);
-  Curl_safefree(passwd);
+  /* Start the SSL connection */
+  result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &imapc->ssldone);
+
+  if(!result) {
+    if(imapc->state != IMAP_UPGRADETLS)
+      state(conn, IMAP_UPGRADETLS);
+
+    if(imapc->ssldone) {
+      imap_to_imaps(conn);
+      result = imap_perform_capability(conn);
+    }
+  }
+
+  return result;
+}
+
+/***********************************************************************
+ *
+ * imap_perform_login()
+ *
+ * Sends a clear text LOGIN command to authenticate with.
+ */
+static CURLcode imap_perform_login(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+  char *user;
+  char *passwd;
+
+  /* Check we have a username and password to authenticate with and end the
+     connect phase if we don't */
+  if(!conn->bits.user_passwd) {
+    state(conn, IMAP_STOP);
 
-  if(result)
     return result;
+  }
 
-  state(conn, IMAP_LOGIN);
+  /* Make sure the username and password are in the correct atom format */
+  user = imap_atom(conn->user);
+  passwd = imap_atom(conn->passwd);
+
+  /* Send the LOGIN command */
+  result = imap_sendf(conn, "LOGIN %s %s", user ? user : "",
+                      passwd ? passwd : "");
 
-  return CURLE_OK;
+  Curl_safefree(user);
+  Curl_safefree(passwd);
+
+  if(!result)
+    state(conn, IMAP_LOGIN);
+
+  return result;
 }
 
-static CURLcode imap_authenticate(struct connectdata *conn)
+/***********************************************************************
+ *
+ * imap_perform_authenticate()
+ *
+ * Sends an AUTHENTICATE command allowing the client to login with the
+ * appropriate SASL authentication mechanism.
+ *
+ * Additionally, the function will perform fallback to the LOGIN command
+ * should a common mechanism not be available between the client and server.
+ */
+static CURLcode imap_perform_authenticate(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   struct imap_conn *imapc = &conn->proto.imapc;
   const char *mech = NULL;
-  imapstate authstate = IMAP_STOP;
+  char *initresp = NULL;
+  size_t len = 0;
+  imapstate state1 = IMAP_STOP;
+  imapstate state2 = IMAP_STOP;
+
+  /* Check we have a username and password to authenticate with and end the
+     connect phase if we don't */
+  if(!conn->bits.user_passwd) {
+    state(conn, IMAP_STOP);
+
+    return result;
+  }
 
   /* Calculate the supported authentication mechanism by decreasing order of
      security */
 #ifndef CURL_DISABLE_CRYPTO_AUTH
   if(imapc->authmechs & SASL_MECH_DIGEST_MD5) {
     mech = "DIGEST-MD5";
-    authstate = IMAP_AUTHENTICATE_DIGESTMD5;
+    state1 = IMAP_AUTHENTICATE_DIGESTMD5;
     imapc->authused = SASL_MECH_DIGEST_MD5;
   }
   else if(imapc->authmechs & SASL_MECH_CRAM_MD5) {
     mech = "CRAM-MD5";
-    authstate = IMAP_AUTHENTICATE_CRAMMD5;
+    state1 = IMAP_AUTHENTICATE_CRAMMD5;
     imapc->authused = SASL_MECH_CRAM_MD5;
   }
   else
 #endif
 #ifdef USE_NTLM
   if(imapc->authmechs & SASL_MECH_NTLM) {
     mech = "NTLM";
-    authstate = IMAP_AUTHENTICATE_NTLM;
+    state1 = IMAP_AUTHENTICATE_NTLM;
+    state2 = IMAP_AUTHENTICATE_NTLM_TYPE2MSG;
     imapc->authused = SASL_MECH_NTLM;
+
+    if(imapc->ir_supported)
+      result = Curl_sasl_create_ntlm_type1_message(conn->user, conn->passwd,
+                                                   &conn->ntlm,
+                                                   &initresp, &len);
   }
   else
 #endif
   if(imapc->authmechs & SASL_MECH_LOGIN) {
     mech = "LOGIN";
-    authstate = IMAP_AUTHENTICATE_LOGIN;
+    state1 = IMAP_AUTHENTICATE_LOGIN;
+    state2 = IMAP_AUTHENTICATE_LOGIN_PASSWD;
     imapc->authused = SASL_MECH_LOGIN;
+
+    if(imapc->ir_supported)
+      result = Curl_sasl_create_login_message(conn->data, conn->user,
+                                              &initresp, &len);
   }
   else if(imapc->authmechs & SASL_MECH_PLAIN) {
     mech = "PLAIN";
-    authstate = IMAP_AUTHENTICATE_PLAIN;
+    state1 = IMAP_AUTHENTICATE_PLAIN;
+    state2 = IMAP_AUTHENTICATE_FINAL;
     imapc->authused = SASL_MECH_PLAIN;
+
+    if(imapc->ir_supported)
+      result = Curl_sasl_create_plain_message(conn->data, conn->user,
+                                              conn->passwd, &initresp, &len);
   }
 
+  if(result)
+    return result;
+
   if(mech) {
     /* Perform SASL based authentication */
-    const char *str = getcmdid(conn);
+    if(initresp) {
+      result = imap_sendf(conn, "AUTHENTICATE %s %s", mech, initresp);
 
-    result = imap_sendf(conn, str, "%s AUTHENTICATE %s", str, mech);
+      if(!result)
+        state(conn, state2);
+    }
+    else {
+      result = imap_sendf(conn, "AUTHENTICATE %s", mech);
 
-    if(!result)
-      state(conn, authstate);
+      if(!result)
+        state(conn, state1);
+    }
+
+    Curl_safefree(initresp);
   }
   else if(!imapc->login_disabled)
     /* Perform clear text authentication */
-    result = imap_state_login(conn);
+    result = imap_perform_login(conn);
   else {
     /* Other mechanisms not supported */
     infof(conn->data, "No known authentication mechanisms supported!\n");
     result = CURLE_LOGIN_DENIED;
   }
 
   return result;
 }
 
-/* For the IMAP "protocol connect" and "doing" phases only */
-static int imap_getsock(struct connectdata *conn, curl_socket_t *socks,
-                        int numsocks)
+/***********************************************************************
+ *
+ * imap_perform_list()
+ *
+ * Sends a LIST command or an alternative custom request.
+ */
+static CURLcode imap_perform_list(struct connectdata *conn)
 {
-  return Curl_pp_getsock(&conn->proto.imapc.pp, socks, numsocks);
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct IMAP *imap = data->state.proto.imap;
+  char *mailbox;
+
+  if(imap->custom)
+    /* Send the custom request */
+    result = imap_sendf(conn, "%s%s", imap->custom,
+                        imap->custom_params ? imap->custom_params : "");
+  else {
+    /* Make sure the mailbox is in the correct atom format */
+    mailbox = imap_atom(imap->mailbox ? imap->mailbox : "");
+    if(!mailbox)
+      return CURLE_OUT_OF_MEMORY;
+
+    /* Send the LIST command */
+    result = imap_sendf(conn, "LIST \"%s\" *", mailbox);
+
+    Curl_safefree(mailbox);
+  }
+
+  if(!result)
+    state(conn, IMAP_LIST);
+
+  return result;
 }
 
-#ifdef USE_SSL
-static void imap_to_imaps(struct connectdata *conn)
+/***********************************************************************
+ *
+ * imap_perform_select()
+ *
+ * Sends a SELECT command to ask the server to change the selected mailbox.
+ */
+static CURLcode imap_perform_select(struct connectdata *conn)
 {
-  conn->handler = &Curl_handler_imaps;
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct IMAP *imap = data->state.proto.imap;
+  struct imap_conn *imapc = &conn->proto.imapc;
+  char *mailbox;
+
+  /* Invalidate old information as we are switching mailboxes */
+  Curl_safefree(imapc->mailbox);
+  Curl_safefree(imapc->mailbox_uidvalidity);
+
+  /* Check we have a mailbox */
+  if(!imap->mailbox) {
+    failf(conn->data, "Cannot SELECT without a mailbox.");
+    return CURLE_URL_MALFORMAT;
+  }
+
+  /* Make sure the mailbox is in the correct atom format */
+  mailbox = imap_atom(imap->mailbox);
+  if(!mailbox)
+    return CURLE_OUT_OF_MEMORY;
+
+  /* Send the SELECT command */
+  result = imap_sendf(conn, "SELECT %s", mailbox);
+
+  Curl_safefree(mailbox);
+
+  if(!result)
+    state(conn, IMAP_SELECT);
+
+  return result;
 }
-#else
-#define imap_to_imaps(x) Curl_nop_stmt
-#endif
 
-/* For the initial server greeting */
-static CURLcode imap_state_servergreet_resp(struct connectdata *conn,
-                                            int imapcode,
-                                            imapstate instate)
+/***********************************************************************
+ *
+ * imap_perform_fetch()
+ *
+ * Sends a FETCH command to initiate the download of a message.
+ */
+static CURLcode imap_perform_fetch(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct IMAP *imap = conn->data->state.proto.imap;
 
-  (void)instate; /* no use for this yet */
+  /* Check we have a UID */
+  if(!imap->uid) {
+    failf(conn->data, "Cannot FETCH without a UID.");
+    return CURLE_URL_MALFORMAT;
+  }
 
-  if(imapcode != 'O') {
-    failf(data, "Got unexpected imap-server response");
-    return CURLE_FTP_WEIRD_SERVER_REPLY;
+  /* Send the FETCH command */
+  result = imap_sendf(conn, "FETCH %s BODY[%s]",
+                      imap->uid,
+                      imap->section ? imap->section : "");
+
+  if(!result)
+    state(conn, IMAP_FETCH);
+
+  return result;
+}
+
+/***********************************************************************
+ *
+ * imap_perform_append()
+ *
+ * Sends an APPEND command to initiate the upload of a message.
+ */
+static CURLcode imap_perform_append(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+  struct IMAP *imap = conn->data->state.proto.imap;
+  char *mailbox;
+
+  /* Check we have a mailbox */
+  if(!imap->mailbox) {
+    failf(conn->data, "Cannot APPEND without a mailbox.");
+    return CURLE_URL_MALFORMAT;
   }
 
-  if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
-    /* We don't have a SSL/TLS connection yet, but SSL is requested. Switch
-       to TLS connection now */
-    const char *str = getcmdid(conn);
-    result = imap_sendf(conn, str, "%s STARTTLS", str);
-    if(!result)
-      state(conn, IMAP_STARTTLS);
+  /* Check we know the size of the upload */
+  if(conn->data->set.infilesize < 0) {
+    failf(conn->data, "Cannot APPEND with unknown input file size\n");
+    return CURLE_UPLOAD_FAILED;
   }
-  else
-    result = imap_state_capability(conn);
+
+  /* Make sure the mailbox is in the correct atom format */
+  mailbox = imap_atom(imap->mailbox);
+  if(!mailbox)
+    return CURLE_OUT_OF_MEMORY;
+
+  /* Send the APPEND command */
+  result = imap_sendf(conn, "APPEND %s (\\Seen) {%" FORMAT_OFF_T "}",
+                      mailbox, conn->data->set.infilesize);
+
+  Curl_safefree(mailbox);
+
+  if(!result)
+    state(conn, IMAP_APPEND);
 
   return result;
 }
 
-/* For STARTTLS responses */
-static CURLcode imap_state_starttls_resp(struct connectdata *conn,
-                                         int imapcode,
-                                         imapstate instate)
+/***********************************************************************
+ *
+ * imap_perform_logout()
+ *
+ * Performs the logout action prior to sclose() being called.
+ */
+static CURLcode imap_perform_logout(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+
+  /* Send the LOGOUT command */
+  result = imap_sendf(conn, "LOGOUT");
+
+  if(!result)
+    state(conn, IMAP_LOGOUT);
+
+  return result;
+}
+
+/* For the initial server greeting */
+static CURLcode imap_state_servergreet_resp(struct connectdata *conn,
+                                            int imapcode,
+                                            imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != 'O') {
-    if(data->set.use_ssl != CURLUSESSL_TRY) {
-      failf(data, "STARTTLS denied. %c", imapcode);
-      result = CURLE_USE_SSL_FAILED;
-    }
-    else
-      result = imap_state_capability(conn);
+    failf(data, "Got unexpected imap-server response");
+    result = CURLE_FTP_WEIRD_SERVER_REPLY; /* TODO: fix this code */
   }
   else
-    result = imap_state_upgrade_tls(conn);
+    result = imap_perform_capability(conn);
 
   return result;
 }
 
-static CURLcode imap_state_upgrade_tls(struct connectdata *conn)
+/* For CAPABILITY responses */
+static CURLcode imap_state_capability_resp(struct connectdata *conn,
+                                           int imapcode,
+                                           imapstate instate)
 {
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
   struct imap_conn *imapc = &conn->proto.imapc;
-  CURLcode result;
+  const char *line = data->state.buffer;
+  size_t wordlen;
+
+  (void)instate; /* no use for this yet */
+
+  /* Do we have a untagged response? */
+  if(imapcode == '*') {
+    line += 2;
+
+    /* Loop through the data line */
+    for(;;) {
+      while(*line &&
+            (*line == ' ' || *line == '\t' ||
+              *line == '\r' || *line == '\n')) {
+
+        line++;
+      }
 
-  result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &imapc->ssldone);
+      if(!*line)
+        break;
 
-  if(!result) {
-    if(imapc->state != IMAP_UPGRADETLS)
-      state(conn, IMAP_UPGRADETLS);
+      /* Extract the word */
+      for(wordlen = 0; line[wordlen] && line[wordlen] != ' ' &&
+            line[wordlen] != '\t' && line[wordlen] != '\r' &&
+            line[wordlen] != '\n';)
+        wordlen++;
+
+      /* Does the server support the STARTTLS capability? */
+      if(wordlen == 8 && !memcmp(line, "STARTTLS", 8))
+        imapc->tls_supported = TRUE;
+
+      /* Has the server explicitly disabled clear text authentication? */
+      else if(wordlen == 13 && !memcmp(line, "LOGINDISABLED", 13))
+        imapc->login_disabled = TRUE;
+
+      /* Does the server support the SASL-IR capability? */
+      else if(wordlen == 7 && !memcmp(line, "SASL-IR", 7))
+        imapc->ir_supported = TRUE;
+
+      /* Do we have a SASL based authentication mechanism? */
+      else if(wordlen > 5 && !memcmp(line, "AUTH=", 5)) {
+        line += 5;
+        wordlen -= 5;
+
+        /* Test the word for a matching authentication mechanism */
+        if(wordlen == 5 && !memcmp(line, "LOGIN", 5))
+          imapc->authmechs |= SASL_MECH_LOGIN;
+        if(wordlen == 5 && !memcmp(line, "PLAIN", 5))
+          imapc->authmechs |= SASL_MECH_PLAIN;
+        else if(wordlen == 8 && !memcmp(line, "CRAM-MD5", 8))
+          imapc->authmechs |= SASL_MECH_CRAM_MD5;
+        else if(wordlen == 10 && !memcmp(line, "DIGEST-MD5", 10))
+          imapc->authmechs |= SASL_MECH_DIGEST_MD5;
+        else if(wordlen == 6 && !memcmp(line, "GSSAPI", 6))
+          imapc->authmechs |= SASL_MECH_GSSAPI;
+        else if(wordlen == 8 && !memcmp(line, "EXTERNAL", 8))
+          imapc->authmechs |= SASL_MECH_EXTERNAL;
+        else if(wordlen == 4 && !memcmp(line, "NTLM", 4))
+          imapc->authmechs |= SASL_MECH_NTLM;
+      }
 
-    if(imapc->ssldone) {
-      imap_to_imaps(conn);
-      result = imap_state_capability(conn);
+      line += wordlen;
     }
   }
+  else if(imapcode == 'O') {
+    if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
+      /* We don't have a SSL/TLS connection yet, but SSL is requested */
+      if(imapc->tls_supported)
+        /* Switch to TLS connection now */
+        result = imap_perform_starttls(conn);
+      else if(data->set.use_ssl == CURLUSESSL_TRY)
+        /* Fallback and carry on with authentication */
+        result = imap_perform_authenticate(conn);
+      else {
+        failf(data, "STARTTLS not supported.");
+        result = CURLE_USE_SSL_FAILED;
+      }
+    }
+    else
+      result = imap_perform_authenticate(conn);
+  }
+  else
+    result = imap_perform_login(conn);
 
   return result;
 }
 
-/* For CAPABILITY responses */
-static CURLcode imap_state_capability_resp(struct connectdata *conn,
-                                           int imapcode,
-                                           imapstate instate)
+/* For STARTTLS responses */
+static CURLcode imap_state_starttls_resp(struct connectdata *conn,
+                                         int imapcode,
+                                         imapstate instate)
 {
   CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
-  if(imapcode == 'O')
-    result = imap_authenticate(conn);
+  if(imapcode != 'O') {
+    if(data->set.use_ssl != CURLUSESSL_TRY) {
+      failf(data, "STARTTLS denied. %c", imapcode);
+      result = CURLE_USE_SSL_FAILED;
+    }
+    else
+      result = imap_perform_authenticate(conn);
+  }
   else
-    result = imap_state_login(conn);
+    result = imap_perform_upgrade_tls(conn);
 
   return result;
 }
 
-/* For AUTHENTICATE PLAIN responses */
+/* For AUTHENTICATE PLAIN (without initial response) responses */
 static CURLcode imap_state_auth_plain_resp(struct connectdata *conn,
                                            int imapcode,
                                            imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -704,23 +1058,23 @@
     /* Send the message */
     if(!result) {
       if(plainauth) {
         result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", plainauth);
 
         if(!result)
-          state(conn, IMAP_AUTHENTICATE);
+          state(conn, IMAP_AUTHENTICATE_FINAL);
       }
 
       Curl_safefree(plainauth);
     }
   }
 
   return result;
 }
 
-/* For AUTHENTICATE LOGIN responses */
+/* For AUTHENTICATE LOGIN (without initial response) responses */
 static CURLcode imap_state_auth_login_resp(struct connectdata *conn,
                                            int imapcode,
                                            imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -778,13 +1132,13 @@
     /* Send the password */
     if(!result) {
       if(authpasswd) {
         result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", authpasswd);
 
         if(!result)
-          state(conn, IMAP_AUTHENTICATE);
+          state(conn, IMAP_AUTHENTICATE_FINAL);
       }
 
       Curl_safefree(authpasswd);
     }
   }
 
@@ -833,13 +1187,13 @@
   /* Send the response */
   if(!result) {
     if(rplyb64) {
       result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", rplyb64);
 
       if(!result)
-        state(conn, IMAP_AUTHENTICATE);
+        state(conn, IMAP_AUTHENTICATE_FINAL);
     }
 
     Curl_safefree(rplyb64);
   }
 
   return result;
@@ -903,21 +1257,21 @@
   }
   else {
     /* Send an empty response */
     result = Curl_pp_sendf(&conn->proto.imapc.pp, "");
 
     if(!result)
-      state(conn, IMAP_AUTHENTICATE);
+      state(conn, IMAP_AUTHENTICATE_FINAL);
   }
 
   return result;
 }
 #endif
 
 #ifdef USE_NTLM
-/* For AUTHENTICATE NTLM responses */
+/* For AUTHENTICATE NTLM (without initial response) responses */
 static CURLcode imap_state_auth_ntlm_resp(struct connectdata *conn,
                                           int imapcode,
                                           imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -979,13 +1333,13 @@
     /* Send the message */
     if(!result) {
       if(type3msg) {
         result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", type3msg);
 
         if(!result)
-          state(conn, IMAP_AUTHENTICATE);
+          state(conn, IMAP_AUTHENTICATE_FINAL);
       }
 
       Curl_safefree(type3msg);
     }
   }
 
@@ -1004,15 +1358,15 @@
   (void)instate; /* no use for this yet */
 
   if(imapcode != 'O') {
     failf(data, "Authentication failed: %d", imapcode);
     result = CURLE_LOGIN_DENIED;
   }
-
-  /* End of connect phase */
-  state(conn, IMAP_STOP);
+  else
+    /* End of connect phase */
+    state(conn, IMAP_STOP);
 
   return result;
 }
 
 /* For LOGIN responses */
 static CURLcode imap_state_login_resp(struct connectdata *conn,
@@ -1032,194 +1386,281 @@
     /* End of connect phase */
     state(conn, IMAP_STOP);
 
   return result;
 }
 
-/* Start the DO phase */
-static CURLcode imap_select(struct connectdata *conn)
-{
-  CURLcode result = CURLE_OK;
-  struct imap_conn *imapc = &conn->proto.imapc;
-  const char *str = getcmdid(conn);
-
-  result = imap_sendf(conn, str, "%s SELECT %s", str,
-                      imapc->mailbox?imapc->mailbox:"");
-  if(result)
-    return result;
-
-  state(conn, IMAP_SELECT);
-
-  return result;
-}
-
-static CURLcode imap_fetch(struct connectdata *conn)
+/* For LIST responses */
+static CURLcode imap_state_list_resp(struct connectdata *conn, int imapcode,
+                                     imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  const char *str = getcmdid(conn);
-
-  /* TODO: make this select the correct mail
-   * Use "1 body[text]" to get the full mail body of mail 1
-   */
-  result = imap_sendf(conn, str, "%s FETCH 1 BODY[TEXT]", str);
-  if(result)
-    return result;
+  char *line = conn->data->state.buffer;
+  size_t len = strlen(line);
 
-  /*
-   * When issued, the server will respond with a single line similar to
-   * '* 1 FETCH (BODY[TEXT] {2021}'
-   *
-   * Identifying the fetch and how many bytes of contents we can expect. We
-   * must extract that number before continuing to "download as usual".
-   */
+  (void)instate; /* No use for this yet */
 
-  state(conn, IMAP_FETCH);
+  if(imapcode == '*') {
+    /* Temporarily add the LF character back and send as body to the client */
+    line[len] = '\n';
+    result = Curl_client_write(conn, CLIENTWRITE_BODY, line, len + 1);
+    line[len] = '\0';
+  }
+  else if(imapcode != 'O')
+    result = CURLE_QUOTE_ERROR; /* TODO: Fix error code */
+  else
+    /* End of DO phase */
+    state(conn, IMAP_STOP);
 
   return result;
 }
 
 /* For SELECT responses */
-static CURLcode imap_state_select_resp(struct connectdata *conn,
-                                       int imapcode,
+static CURLcode imap_state_select_resp(struct connectdata *conn, int imapcode,
                                        imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
+  struct IMAP *imap = conn->data->state.proto.imap;
+  struct imap_conn *imapc = &conn->proto.imapc;
+  const char *line = data->state.buffer;
+  char tmp[20];
 
   (void)instate; /* no use for this yet */
 
-  if(imapcode != 'O') {
+  if(imapcode == '*') {
+    /* See if this is an UIDVALIDITY response */
+    if(sscanf(line + 2, "OK [UIDVALIDITY %19[0123456789]]", tmp) == 1) {
+      Curl_safefree(imapc->mailbox_uidvalidity);
+      imapc->mailbox_uidvalidity = strdup(tmp);
+    }
+  }
+  else if(imapcode == 'O') {
+    /* Check if the UIDVALIDITY has been specified and matches */
+    if(imap->uidvalidity && imapc->mailbox_uidvalidity &&
+       strcmp(imap->uidvalidity, imapc->mailbox_uidvalidity)) {
+      failf(conn->data, "Mailbox UIDVALIDITY has changed");
+      result = CURLE_REMOTE_FILE_NOT_FOUND;
+    }
+    else {
+      /* Note the currently opened mailbox on this connection */
+      imapc->mailbox = strdup(imap->mailbox);
+
+      if(imap->custom)
+        result = imap_perform_list(conn);
+      else
+        result = imap_perform_fetch(conn);
+    }
+  }
+  else {
     failf(data, "Select failed");
     result = CURLE_LOGIN_DENIED;
   }
-  else
-    result = imap_fetch(conn);
 
   return result;
 }
 
-/* For the (first line of) FETCH BODY[TEXT] response */
+/* For the (first line of the) FETCH responses */
 static CURLcode imap_state_fetch_resp(struct connectdata *conn, int imapcode,
                                       imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
   struct imap_conn *imapc = &conn->proto.imapc;
-  struct FTP *imap = data->state.proto.imap;
   struct pingpong *pp = &imapc->pp;
   const char *ptr = data->state.buffer;
+  bool parsed = FALSE;
+  curl_off_t size;
 
   (void)instate; /* no use for this yet */
 
-  if('*' != imapcode) {
+  if(imapcode != '*') {
     Curl_pgrsSetDownloadSize(data, 0);
     state(conn, IMAP_STOP);
-    return CURLE_OK;
+    return CURLE_REMOTE_FILE_NOT_FOUND; /* TODO: Fix error code */
   }
 
-  /* Something like this comes "* 1 FETCH (BODY[TEXT] {2021}\r" */
+  /* Something like this is received "* 1 FETCH (BODY[TEXT] {2021}\r" so parse
+     the continuation data contained within the curly brackets */
   while(*ptr && (*ptr != '{'))
     ptr++;
 
   if(*ptr == '{') {
-    curl_off_t filesize = curlx_strtoofft(ptr + 1, NULL, 10);
-    if(filesize)
-      Curl_pgrsSetDownloadSize(data, filesize);
+    char *endptr;
+    size = curlx_strtoofft(ptr + 1, &endptr, 10);
+    if(endptr - ptr > 1 && endptr[0] == '}' &&
+       endptr[1] == '\r' && endptr[2] == '\0')
+      parsed = TRUE;
+  }
 
-    infof(data, "Found %" FORMAT_OFF_TU " bytes to download\n", filesize);
+  if(parsed) {
+    infof(data, "Found %" FORMAT_OFF_TU " bytes to download\n", size);
+    Curl_pgrsSetDownloadSize(data, size);
 
     if(pp->cache) {
       /* At this point there is a bunch of data in the header "cache" that is
          actually body content, send it as body and then skip it. Do note
          that there may even be additional "headers" after the body. */
       size_t chunk = pp->cache_size;
 
-      if(chunk > (size_t)filesize)
-        /* the conversion from curl_off_t to size_t is always fine here */
-        chunk = (size_t)filesize;
+      if(chunk > (size_t)size)
+        /* The conversion from curl_off_t to size_t is always fine here */
+        chunk = (size_t)size;
 
       result = Curl_client_write(conn, CLIENTWRITE_BODY, pp->cache, chunk);
       if(result)
         return result;
 
-      filesize -= chunk;
+      data->req.bytecount += chunk;
+      size -= chunk;
+
+      infof(data, "Written %" FORMAT_OFF_TU " bytes, %" FORMAT_OFF_TU
+            " bytes are left for transfer\n", (curl_off_t)chunk, size);
 
-      /* we've now used parts of or the entire cache */
+      /* Have we used the entire cache or just part of it?*/
       if(pp->cache_size > chunk) {
-        /* part of, move the trailing data to the start and reduce the size */
-        memmove(pp->cache, pp->cache+chunk,
-                pp->cache_size - chunk);
+        /* Only part of it so shrink the cache to fit the trailing data */
+        memmove(pp->cache, pp->cache + chunk, pp->cache_size - chunk);
         pp->cache_size -= chunk;
       }
       else {
-        /* cache is drained */
+        /* Free the cache */
         Curl_safefree(pp->cache);
-        pp->cache = NULL;
+
+        /* Reset the cache size */
         pp->cache_size = 0;
       }
     }
 
-    infof(data, "Filesize left: %" FORMAT_OFF_T "\n", filesize);
-
-    if(!filesize)
-      /* the entire data is already transferred! */
+    if(!size)
+      /* The entire data is already transferred! */
       Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
-    else
+    else {
       /* IMAP download */
-      Curl_setup_transfer(conn, FIRSTSOCKET, filesize, FALSE,
-                          imap->bytecountp, -1, NULL); /* no upload here */
-
-    data->req.maxdownload = filesize;
+      data->req.maxdownload = size;
+      Curl_setup_transfer(conn, FIRSTSOCKET, size, FALSE, NULL, -1, NULL);
+    }
   }
-  else
+  else {
     /* We don't know how to parse this line */
+    failf(pp->conn->data, "Failed to parse FETCH response.");
     result = CURLE_FTP_WEIRD_SERVER_REPLY; /* TODO: fix this code */
+  }
 
-  /* End of do phase */
+  /* End of DO phase */
   state(conn, IMAP_STOP);
 
   return result;
 }
 
+/* For final FETCH responses performed after the download */
+static CURLcode imap_state_fetch_final_resp(struct connectdata *conn,
+                                            int imapcode,
+                                            imapstate instate)
+{
+  CURLcode result = CURLE_OK;
+
+  (void)instate; /* No use for this yet */
+
+  if(imapcode != 'O')
+    result = CURLE_FTP_WEIRD_SERVER_REPLY; /* TODO: Fix error code */
+  else
+    /* End of DONE phase */
+    state(conn, IMAP_STOP);
+
+  return result;
+}
+
+/* For APPEND responses */
+static CURLcode imap_state_append_resp(struct connectdata *conn, int imapcode,
+                                       imapstate instate)
+{
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+
+  (void)instate; /* No use for this yet */
+
+  if(imapcode != '+') {
+    result = CURLE_UPLOAD_FAILED;
+  }
+  else {
+    /* Set the progress upload size */
+    Curl_pgrsSetUploadSize(data, data->set.infilesize);
+
+    /* IMAP upload */
+    Curl_setup_transfer(conn, -1, -1, FALSE, NULL, FIRSTSOCKET, NULL);
+
+    /* End of DO phase */
+    state(conn, IMAP_STOP);
+  }
+
+  return result;
+}
+
+/* For final APPEND responses performed after the upload */
+static CURLcode imap_state_append_final_resp(struct connectdata *conn,
+                                             int imapcode,
+                                             imapstate instate)
+{
+  CURLcode result = CURLE_OK;
+
+  (void)instate; /* No use for this yet */
+
+  if(imapcode != 'O')
+    result = CURLE_UPLOAD_FAILED;
+  else
+    /* End of DONE phase */
+    state(conn, IMAP_STOP);
+
+  return result;
+}
+
 static CURLcode imap_statemach_act(struct connectdata *conn)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   int imapcode;
   struct imap_conn *imapc = &conn->proto.imapc;
   struct pingpong *pp = &imapc->pp;
   size_t nread = 0;
 
   /* Busy upgrading the connection; right now all I/O is SSL/TLS, not IMAP */
   if(imapc->state == IMAP_UPGRADETLS)
-    return imap_state_upgrade_tls(conn);
+    return imap_perform_upgrade_tls(conn);
 
   /* Flush any data that needs to be sent */
   if(pp->sendleft)
     return Curl_pp_flushsend(pp);
 
-  /* Read the response from the server */
-  result = Curl_pp_readresp(sock, pp, &imapcode, &nread);
-  if(result)
-    return result;
+  do {
+    /* Read the response from the server */
+    result = Curl_pp_readresp(sock, pp, &imapcode, &nread);
+    if(result)
+      return result;
+
+    /* Was there an error parsing the response line? */
+    if(imapcode == -1)
+      return CURLE_FTP_WEIRD_SERVER_REPLY;
+
+    if(!imapcode)
+      break;
 
-  if(imapcode) {
     /* We have now received a full IMAP server response */
     switch(imapc->state) {
     case IMAP_SERVERGREET:
       result = imap_state_servergreet_resp(conn, imapcode, imapc->state);
       break;
 
-    case IMAP_STARTTLS:
-      result = imap_state_starttls_resp(conn, imapcode, imapc->state);
-      break;
-
     case IMAP_CAPABILITY:
       result = imap_state_capability_resp(conn, imapcode, imapc->state);
       break;
 
+    case IMAP_STARTTLS:
+      result = imap_state_starttls_resp(conn, imapcode, imapc->state);
+      break;
+
     case IMAP_AUTHENTICATE_PLAIN:
       result = imap_state_auth_plain_resp(conn, imapcode, imapc->state);
       break;
 
     case IMAP_AUTHENTICATE_LOGIN:
       result = imap_state_auth_login_resp(conn, imapcode, imapc->state);
@@ -1252,95 +1693,105 @@
     case IMAP_AUTHENTICATE_NTLM_TYPE2MSG:
       result = imap_state_auth_ntlm_type2msg_resp(conn, imapcode,
                                                   imapc->state);
       break;
 #endif
 
-    case IMAP_AUTHENTICATE:
+    case IMAP_AUTHENTICATE_FINAL:
       result = imap_state_auth_final_resp(conn, imapcode, imapc->state);
       break;
 
     case IMAP_LOGIN:
       result = imap_state_login_resp(conn, imapcode, imapc->state);
       break;
 
-    case IMAP_FETCH:
-      result = imap_state_fetch_resp(conn, imapcode, imapc->state);
+    case IMAP_LIST:
+      result = imap_state_list_resp(conn, imapcode, imapc->state);
       break;
 
     case IMAP_SELECT:
       result = imap_state_select_resp(conn, imapcode, imapc->state);
       break;
 
+    case IMAP_FETCH:
+      result = imap_state_fetch_resp(conn, imapcode, imapc->state);
+      break;
+
+    case IMAP_FETCH_FINAL:
+      result = imap_state_fetch_final_resp(conn, imapcode, imapc->state);
+      break;
+
+    case IMAP_APPEND:
+      result = imap_state_append_resp(conn, imapcode, imapc->state);
+      break;
+
+    case IMAP_APPEND_FINAL:
+      result = imap_state_append_final_resp(conn, imapcode, imapc->state);
+      break;
+
     case IMAP_LOGOUT:
       /* fallthrough, just stop! */
     default:
       /* internal error */
       state(conn, IMAP_STOP);
       break;
     }
-  }
+  } while(!result && imapc->state != IMAP_STOP && Curl_pp_moredata(pp));
 
   return result;
 }
 
 /* Called repeatedly until done from multi.c */
 static CURLcode imap_multi_statemach(struct connectdata *conn, bool *done)
 {
+  CURLcode result = CURLE_OK;
   struct imap_conn *imapc = &conn->proto.imapc;
-  CURLcode result;
 
   if((conn->handler->flags & PROTOPT_SSL) && !imapc->ssldone)
     result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &imapc->ssldone);
   else
-    result = Curl_pp_multi_statemach(&imapc->pp);
+    result = Curl_pp_statemach(&imapc->pp, FALSE);
 
   *done = (imapc->state == IMAP_STOP) ? TRUE : FALSE;
 
   return result;
 }
 
-static CURLcode imap_easy_statemach(struct connectdata *conn)
+static CURLcode imap_block_statemach(struct connectdata *conn)
 {
-  struct imap_conn *imapc = &conn->proto.imapc;
-  struct pingpong *pp = &imapc->pp;
   CURLcode result = CURLE_OK;
+  struct imap_conn *imapc = &conn->proto.imapc;
 
-  while(imapc->state != IMAP_STOP) {
-    result = Curl_pp_easy_statemach(pp);
-    if(result)
-      break;
-  }
+  while(imapc->state != IMAP_STOP && !result)
+    result = Curl_pp_statemach(&imapc->pp, TRUE);
 
   return result;
 }
 
 /* Allocate and initialize the struct IMAP for the current SessionHandle if
    required */
 static CURLcode imap_init(struct connectdata *conn)
 {
+  CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct FTP *imap = data->state.proto.imap;
+  struct IMAP *imap = data->state.proto.imap;
 
   if(!imap) {
-    imap = data->state.proto.imap = calloc(sizeof(struct FTP), 1);
+    imap = data->state.proto.imap = calloc(sizeof(struct IMAP), 1);
     if(!imap)
-      return CURLE_OUT_OF_MEMORY;
+      result = CURLE_OUT_OF_MEMORY;
   }
 
-  /* Get some initial data into the imap struct */
-  imap->bytecountp = &data->req.bytecount;
-
-  /* No need to duplicate user+password, the connectdata struct won't change
-     during a session, but we re-init them here since on subsequent inits
-     since the conn struct may have changed or been replaced.
-  */
-  imap->user = conn->user;
-  imap->passwd = conn->passwd;
+  return result;
+}
 
-  return CURLE_OK;
+/* For the IMAP "protocol connect" and "doing" phases only */
+static int imap_getsock(struct connectdata *conn, curl_socket_t *socks,
+                        int numsocks)
+{
+  return Curl_pp_getsock(&conn->proto.imapc.pp, socks, numsocks);
 }
 
 /***********************************************************************
  *
  * imap_connect() should do everything that is to be considered a part of
  * the connection phase.
@@ -1348,41 +1799,44 @@
  * The variable 'done' points to will be TRUE if the protocol-layer connect
  * phase is done when this function returns, or FALSE is not. When called as
  * a part of the easy interface, it will always be TRUE.
  */
 static CURLcode imap_connect(struct connectdata *conn, bool *done)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   struct imap_conn *imapc = &conn->proto.imapc;
   struct pingpong *pp = &imapc->pp;
 
   *done = FALSE; /* default to not done yet */
 
   /* If there already is a protocol-specific struct allocated for this
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
 
+  /* Initialise the IMAP layer */
   result = imap_init(conn);
-  if(CURLE_OK != result)
+  if(result)
     return result;
 
-  /* We always support persistent connections on imap */
+  /* We always support persistent connections in IMAP */
   conn->bits.close = FALSE;
 
-  pp->response_time = RESP_TIMEOUT; /* set default response time-out */
+  /* Set the default response time-out */
+  pp->response_time = RESP_TIMEOUT;
   pp->statemach_act = imap_statemach_act;
   pp->endofresp = imap_endofresp;
   pp->conn = conn;
 
-  Curl_pp_init(pp); /* init generic pingpong data */
+  /* Initialise the pingpong layer */
+  Curl_pp_init(pp);
 
   /* Start off waiting for the server greeting response */
   state(conn, IMAP_SERVERGREET);
 
-  /* Start off with an id of '*' */
-  imapc->idstr = "*";
+  /* Start off with an response id of '*' */
+  strcpy(imapc->resptag, "*");
 
   result = imap_multi_statemach(conn, done);
 
   return result;
 }
 
@@ -1395,66 +1849,121 @@
  *
  * Input argument is already checked for validity.
  */
 static CURLcode imap_done(struct connectdata *conn, CURLcode status,
                           bool premature)
 {
+  CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct FTP *imap = data->state.proto.imap;
-  CURLcode result=CURLE_OK;
+  struct IMAP *imap = data->state.proto.imap;
 
   (void)premature;
 
   if(!imap)
-    /* When the easy handle is removed from the multi while libcurl is still
-     * trying to resolve the host name, it seems that the imap struct is not
-     * yet initialized, but the removal action calls Curl_done() which calls
-     * this function. So we simply return success if no imap pointer is set.
-     */
+    /* When the easy handle is removed from the multi interface while libcurl
+       is still trying to resolve the host name, the IMAP struct is not yet
+       initialized. However, the removal action calls Curl_done() which in
+       turn calls this function, so we simply return success. */
     return CURLE_OK;
 
   if(status) {
     conn->bits.close = TRUE; /* marked for closure */
     result = status;         /* use the already set error code */
   }
+  else if(!data->set.connect_only && !imap->custom &&
+          (imap->uid || data->set.upload)) {
+    /* Handle responses after FETCH or APPEND transfer has finished */
+    if(!data->set.upload)
+      state(conn, IMAP_FETCH_FINAL);
+    else {
+      /* End the APPEND command first by sending an empty line */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "");
+      if(!result)
+        state(conn, IMAP_APPEND_FINAL);
+    }
+
+    /* Run the state-machine
+
+       TODO: when the multi interface is used, this _really_ should be using
+       the imap_multi_statemach function but we have no general support for
+       non-blocking DONE operations, not in the multi state machine and with
+       Curl_done() invokes on several places in the code!
+    */
+    if(!result)
+      result = imap_block_statemach(conn);
+  }
 
-  /* Clear the transfer mode for the next connection */
+  /* Cleanup our per-request based variables */
+  Curl_safefree(imap->mailbox);
+  Curl_safefree(imap->uidvalidity);
+  Curl_safefree(imap->uid);
+  Curl_safefree(imap->section);
+  Curl_safefree(imap->custom);
+  Curl_safefree(imap->custom_params);
+
+  /* Clear the transfer mode for the next request */
   imap->transfer = FTPTRANSFER_BODY;
 
   return result;
 }
 
 /***********************************************************************
  *
  * imap_perform()
  *
- * This is the actual DO function for IMAP. Get a file/directory according to
- * the options previously setup.
+ * This is the actual DO function for IMAP. Fetch or append a message, or do
+ * other things according to the options previously setup.
  */
 static CURLcode imap_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is IMAP and no proxy */
   CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct IMAP *imap = data->state.proto.imap;
+  struct imap_conn *imapc = &conn->proto.imapc;
+  bool selected = FALSE;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
   if(conn->data->set.opt_no_body) {
     /* Requested no body means no transfer */
-    struct FTP *imap = conn->data->state.proto.imap;
     imap->transfer = FTPTRANSFER_INFO;
   }
 
   *dophase_done = FALSE; /* not done yet */
 
+  /* Determine if the requested mailbox (with the same UIDVALIDITY if set)
+     has already been selected on this connection */
+  if(imap->mailbox && imapc->mailbox &&
+     !strcmp(imap->mailbox, imapc->mailbox) &&
+     (!imap->uidvalidity || !imapc->mailbox_uidvalidity ||
+      !strcmp(imap->uidvalidity, imapc->mailbox_uidvalidity)))
+    selected = TRUE;
+
   /* Start the first command in the DO phase */
-  result = imap_select(conn);
+  if(conn->data->set.upload)
+    /* APPEND can be executed directly */
+    result = imap_perform_append(conn);
+  else if(imap->custom && (selected || !imap->mailbox))
+    /* Custom command using the same mailbox or no mailbox */
+    result = imap_perform_list(conn);
+  else if(!imap->custom && selected && imap->uid)
+    /* FETCH from the same mailbox */
+    result = imap_perform_fetch(conn);
+  else if(imap->mailbox && !selected && (imap->custom || imap->uid))
+    /* SELECT the mailbox */
+    result = imap_perform_select(conn);
+  else
+    /* LIST */
+    result = imap_perform_list(conn);
+
   if(result)
     return result;
 
-  /* run the state-machine */
+  /* Run the state-machine */
   result = imap_multi_statemach(conn, dophase_done);
 
   *connected = conn->bits.tcpconnect[FIRSTSOCKET];
 
   if(*dophase_done)
     DEBUGF(infof(conn->data, "DO phase is complete\n"));
@@ -1470,58 +1979,36 @@
  * parts etc as a wrapper to the actual DO function (imap_perform).
  *
  * The input argument is already checked for validity.
  */
 static CURLcode imap_do(struct connectdata *conn, bool *done)
 {
-  CURLcode retcode = CURLE_OK;
+  CURLcode result = CURLE_OK;
 
   *done = FALSE; /* default to false */
 
-  /*
-    Since connections can be re-used between SessionHandles, this might be a
-    connection already existing but on a fresh SessionHandle struct so we must
-    make sure we have a good 'struct IMAP' to play with. For new connections,
-    the struct IMAP is allocated and setup in the imap_connect() function.
-  */
+  /* Since connections can be re-used between SessionHandles, there might be a
+     connection already existing but on a fresh SessionHandle struct. As such
+     we make sure we have a good IMAP struct to play with. For new connections
+     the IMAP struct is allocated and setup in the imap_connect() function. */
   Curl_reset_reqproto(conn);
-  retcode = imap_init(conn);
-  if(retcode)
-    return retcode;
+  result = imap_init(conn);
+  if(result)
+    return result;
 
   /* Parse the URL path */
-  retcode = imap_parse_url_path(conn);
-  if(retcode)
-    return retcode;
-
-  retcode = imap_regular_transfer(conn, done);
-
-  return retcode;
-}
-
-/***********************************************************************
- *
- * imap_logout()
- *
- * This should be called before calling sclose().  We should then wait for the
- * response from the server before returning. The calling code should then try
- * to close the connection.
- *
- */
-static CURLcode imap_logout(struct connectdata *conn)
-{
-  CURLcode result = CURLE_OK;
-  const char *str = getcmdid(conn);
-
-  result = imap_sendf(conn, str, "%s LOGOUT", str, NULL);
+  result = imap_parse_url_path(conn);
   if(result)
     return result;
 
-  state(conn, IMAP_LOGOUT);
+  /* Parse the custom request */
+  result = imap_parse_custom_request(conn);
+  if(result)
+    return result;
 
-  result = imap_easy_statemach(conn);
+  result = imap_regular_transfer(conn, done);
 
   return result;
 }
 
 /***********************************************************************
  *
@@ -1529,60 +2016,220 @@
  *
  * Disconnect from an IMAP server. Cleanup protocol-specific per-connection
  * resources. BLOCKING.
  */
 static CURLcode imap_disconnect(struct connectdata *conn, bool dead_connection)
 {
-  struct imap_conn *imapc= &conn->proto.imapc;
+  struct imap_conn *imapc = &conn->proto.imapc;
 
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
-     disconnect wait in vain and cause more problems than we need to */
+     disconnect wait in vain and cause more problems than we need to. */
 
   /* The IMAP session may or may not have been allocated/setup at this
      point! */
   if(!dead_connection && imapc->pp.conn)
-    (void)imap_logout(conn); /* ignore errors on the LOGOUT */
+    if(!imap_perform_logout(conn))
+      (void)imap_block_statemach(conn); /* ignore errors on LOGOUT */
 
   /* Disconnect from the server */
   Curl_pp_disconnect(&imapc->pp);
 
   /* Cleanup the SASL module */
   Curl_sasl_cleanup(conn, imapc->authused);
 
   /* Cleanup our connection based variables */
   Curl_safefree(imapc->mailbox);
+  Curl_safefree(imapc->mailbox_uidvalidity);
 
   return CURLE_OK;
 }
 
 /***********************************************************************
  *
+ * imap_is_bchar()
+ *
+ * Portable test of whether the specified char is a "bchar" as defined in the
+ * grammar of RFC-5092.
+ */
+static bool imap_is_bchar(char ch)
+{
+  switch(ch) {
+    /* bchar */
+    case ':': case '@': case '/':
+    /* bchar -> achar */
+    case '&': case '=':
+    /* bchar -> achar -> uchar -> unreserved */
+    case '0': case '1': case '2': case '3': case '4': case '5': case '6':
+    case '7': case '8': case '9':
+    case 'A': case 'B': case 'C': case 'D': case 'E': case 'F': case 'G':
+    case 'H': case 'I': case 'J': case 'K': case 'L': case 'M': case 'N':
+    case 'O': case 'P': case 'Q': case 'R': case 'S': case 'T': case 'U':
+    case 'V': case 'W': case 'X': case 'Y': case 'Z':
+    case 'a': case 'b': case 'c': case 'd': case 'e': case 'f': case 'g':
+    case 'h': case 'i': case 'j': case 'k': case 'l': case 'm': case 'n':
+    case 'o': case 'p': case 'q': case 'r': case 's': case 't': case 'u':
+    case 'v': case 'w': case 'x': case 'y': case 'z':
+    case '-': case '.': case '_': case '~':
+    /* bchar -> achar -> uchar -> sub-delims-sh */
+    case '!': case '$': case '\'': case '(': case ')': case '*':
+    case '+': case ',':
+    /* bchar -> achar -> uchar -> pct-encoded */
+    case '%': /* HEXDIG chars are already included above */
+      return true;
+
+    default:
+      return false;
+  }
+}
+
+/***********************************************************************
+ *
  * imap_parse_url_path()
  *
  * Parse the URL path into separate path components.
  *
  */
 static CURLcode imap_parse_url_path(struct connectdata *conn)
 {
-  /* The imap struct is already inited in imap_connect() */
-  struct imap_conn *imapc = &conn->proto.imapc;
+  /* The imap struct is already initialised in imap_connect() */
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct IMAP *imap = data->state.proto.imap;
+  const char *begin = data->state.path;
+  const char *ptr = begin;
+
+  /* See how much of the URL is a valid path and decode it */
+  while(imap_is_bchar(*ptr))
+    ptr++;
+
+  if(ptr != begin) {
+    /* Remove the trailing slash if present */
+    const char *end = ptr;
+    if(end > begin && end[-1] == '/')
+      end--;
+
+    result = Curl_urldecode(data, begin, end - begin, &imap->mailbox, NULL,
+                            TRUE);
+    if(result)
+      return result;
+  }
+  else
+    imap->mailbox = NULL;
+
+  /* There can be any number of parameters in the form ";NAME=VALUE" */
+  while(*ptr == ';') {
+    char *name;
+    char *value;
+    size_t valuelen;
+
+    /* Find the length of the name parameter */
+    begin = ++ptr;
+    while(*ptr && *ptr != '=')
+      ptr++;
+
+    if(!*ptr)
+      return CURLE_URL_MALFORMAT;
+
+    /* Decode the name parameter */
+    result = Curl_urldecode(data, begin, ptr - begin, &name, NULL, TRUE);
+    if(result)
+      return result;
+
+    /* Find the length of the value parameter */
+    begin = ++ptr;
+    while(imap_is_bchar(*ptr))
+      ptr++;
+
+    /* Decode the value parameter */
+    result = Curl_urldecode(data, begin, ptr - begin, &value, &valuelen, TRUE);
+    if(result) {
+      Curl_safefree(name);
+      return result;
+    }
+
+    DEBUGF(infof(conn->data, "IMAP URL parameter '%s' = '%s'\n", name, value));
+
+    /* Process the known hierarchical parameters (UIDVALIDITY, UID and SECTION)
+       stripping of the trailing slash character if it is present.
+
+       Note: Unknown parameters trigger a URL_MALFORMAT error. */
+    if(Curl_raw_equal(name, "UIDVALIDITY") && !imap->uidvalidity) {
+      if(valuelen > 0 && value[valuelen - 1] == '/')
+        value[valuelen - 1] = '\0';
+
+      imap->uidvalidity = value;
+      value = NULL;
+    }
+    else if(Curl_raw_equal(name, "UID") && !imap->uid) {
+      if(valuelen > 0 && value[valuelen - 1] == '/')
+        value[valuelen - 1] = '\0';
+
+      imap->uid = value;
+      value = NULL;
+    }
+    else if(Curl_raw_equal(name, "SECTION") && !imap->section) {
+      if(valuelen > 0 && value[valuelen - 1] == '/')
+        value[valuelen - 1] = '\0';
+
+      imap->section = value;
+      value = NULL;
+    }
+    else {
+      Curl_safefree(name);
+      Curl_safefree(value);
+
+      return CURLE_URL_MALFORMAT;
+    }
+
+    Curl_safefree(name);
+    Curl_safefree(value);
+  }
+
+  /* Any extra stuff at the end of the URL is an error */
+  if(*ptr)
+    return CURLE_URL_MALFORMAT;
+
+  return CURLE_OK;
+}
+
+static CURLcode imap_parse_custom_request(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  const char *path = data->state.path;
+  struct IMAP *imap = data->state.proto.imap;
+  const char *custom = data->set.str[STRING_CUSTOMREQUEST];
+
+  if(custom) {
+    /* URL decode the custom request */
+    result = Curl_urldecode(data, custom, 0, &imap->custom, NULL, TRUE);
+
+    /* Extract the parameters if specified */
+    if(!result) {
+      const char *params = imap->custom;
+
+      while(*params && *params != ' ')
+        params++;
 
-  if(!*path)
-    path = "INBOX";
+      if(*params) {
+        imap->custom_params = strdup(params);
+        imap->custom[params - imap->custom] = '\0';
+
+        if(!imap->custom_params)
+          result = CURLE_OUT_OF_MEMORY;
+      }
+    }
+  }
 
-  /* URL decode the path and use this mailbox */
-  return Curl_urldecode(data, path, 0, &imapc->mailbox, NULL, TRUE);
+  return result;
 }
 
 /* Call this when the DO phase has completed */
 static CURLcode imap_dophase_done(struct connectdata *conn, bool connected)
 {
-  struct FTP *imap = conn->data->state.proto.imap;
+  struct IMAP *imap = conn->data->state.proto.imap;
 
   (void)connected;
 
   if(imap->transfer != FTPTRANSFER_BODY)
     /* no data to transfer */
     Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
@@ -1594,18 +2241,16 @@
 static CURLcode imap_doing(struct connectdata *conn, bool *dophase_done)
 {
   CURLcode result = imap_multi_statemach(conn, dophase_done);
 
   if(result)
     DEBUGF(infof(conn->data, "DO phase failed\n"));
-  else {
-    if(*dophase_done) {
-      result = imap_dophase_done(conn, FALSE /* not connected */);
+  else if(*dophase_done) {
+    result = imap_dophase_done(conn, FALSE /* not connected */);
 
-      DEBUGF(infof(conn->data, "DO phase is complete\n"));
-    }
+    DEBUGF(infof(conn->data, "DO phase is complete\n"));
   }
 
   return result;
 }
 
 /***********************************************************************
@@ -1624,36 +2269,34 @@
   bool connected = FALSE;
   struct SessionHandle *data = conn->data;
 
   /* Make sure size is unknown at this point */
   data->req.size = -1;
 
+  /* Set the progress data */
   Curl_pgrsSetUploadCounter(data, 0);
   Curl_pgrsSetDownloadCounter(data, 0);
   Curl_pgrsSetUploadSize(data, 0);
   Curl_pgrsSetDownloadSize(data, 0);
 
+  /* Carry out the perform */
   result = imap_perform(conn, &connected, dophase_done);
 
-  if(CURLE_OK == result) {
-    if(!*dophase_done)
-      /* The DO phase has not completed yet */
-      return CURLE_OK;
-
+  /* Perform post DO phase operations if necessary */
+  if(!result && *dophase_done)
     result = imap_dophase_done(conn, connected);
-  }
 
   return result;
 }
 
-static CURLcode imap_setup_connection(struct connectdata * conn)
+static CURLcode imap_setup_connection(struct connectdata *conn)
 {
   struct SessionHandle *data = conn->data;
 
   if(conn->bits.httpproxy && !data->set.tunnel_thru_httpproxy) {
-    /* Unless we have asked to tunnel imap operations through the proxy, we
+    /* Unless we have asked to tunnel IMAP operations through the proxy, we
        switch and use HTTP operations only */
 #ifndef CURL_DISABLE_HTTP
     if(conn->handler == &Curl_handler_imap)
       conn->handler = &Curl_handler_imap_proxy;
     else {
 #ifdef USE_SSL
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/imap.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/imap.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/imap.h	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/imap.h	2013-04-12 02:46:54.000000000 +0800
@@ -28,44 +28,65 @@
  * IMAP unique setup
  ***************************************************************************/
 typedef enum {
   IMAP_STOP,         /* do nothing state, stops the state machine */
   IMAP_SERVERGREET,  /* waiting for the initial greeting immediately after
                         a connect */
+  IMAP_CAPABILITY,
   IMAP_STARTTLS,
   IMAP_UPGRADETLS,   /* asynchronously upgrade the connection to SSL/TLS
                        (multi mode only) */
-  IMAP_CAPABILITY,
   IMAP_AUTHENTICATE_PLAIN,
   IMAP_AUTHENTICATE_LOGIN,
   IMAP_AUTHENTICATE_LOGIN_PASSWD,
   IMAP_AUTHENTICATE_CRAMMD5,
   IMAP_AUTHENTICATE_DIGESTMD5,
   IMAP_AUTHENTICATE_DIGESTMD5_RESP,
   IMAP_AUTHENTICATE_NTLM,
   IMAP_AUTHENTICATE_NTLM_TYPE2MSG,
-  IMAP_AUTHENTICATE,
+  IMAP_AUTHENTICATE_FINAL,
   IMAP_LOGIN,
+  IMAP_LIST,
   IMAP_SELECT,
   IMAP_FETCH,
+  IMAP_FETCH_FINAL,
+  IMAP_APPEND,
+  IMAP_APPEND_FINAL,
   IMAP_LOGOUT,
   IMAP_LAST          /* never used */
 } imapstate;
 
+/* This IMAP struct is used in the SessionHandle. All IMAP data that is
+   connection-oriented must be in imap_conn to properly deal with the fact that
+   perhaps the SessionHandle is changed between the times the connection is
+   used. */
+struct IMAP {
+  curl_pp_transfer transfer;
+  char *mailbox;          /* Mailbox to select */
+  char *uidvalidity;      /* UIDVALIDITY to check in select */
+  char *uid;              /* Message UID to fetch */
+  char *section;          /* Message SECTION to fetch */
+  char *custom;           /* Custom request */
+  char *custom_params;    /* Parameters for the custom request */
+};
+
 /* imap_conn is used for struct connection-oriented data in the connectdata
    struct */
 struct imap_conn {
   struct pingpong pp;
-  char *mailbox;          /* Mailbox to select */
-  unsigned int authmechs; /* Accepted authentication mechanisms */
-  unsigned int authused;  /* Auth mechanism used for the connection */
-  imapstate state;        /* Always use imap.c:state() to change state! */
-  int cmdid;              /* Next command ID */
-  const char *idstr;      /* String based response ID to wait for */
-  bool ssldone;           /* Is connect() over SSL done? */
-  bool login_disabled;    /* LOGIN command explicitly disabled by server */
+  imapstate state;            /* Always use imap.c:state() to change state! */
+  bool ssldone;               /* Is connect() over SSL done? */
+  unsigned int authmechs;     /* Accepted authentication mechanisms */
+  unsigned int authused;      /* Auth mechanism used for the connection */
+  int cmdid;                  /* Last used command ID */
+  char resptag[5];            /* Response tag to wait for */
+  bool tls_supported;         /* StartTLS capability supported by server */
+  bool login_disabled;        /* LOGIN command disabled by server */
+  bool ir_supported;          /* Initial response supported by server */
+  char *mailbox;              /* The last selected mailbox */
+  char *mailbox_uidvalidity;  /* UIDVALIDITY parsed from select response */
 };
 
 extern const struct Curl_handler Curl_handler_imap;
 extern const struct Curl_handler Curl_handler_imaps;
 
 #endif /* HEADER_CURL_IMAP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/libcurl.plist /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/libcurl.plist
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/libcurl.plist	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/libcurl.plist	2013-04-12 15:13:03.000000000 +0800
@@ -9,27 +9,27 @@
 	<string>English</string>
 
 	<key>CFBundleExecutable</key>
 	<string>curl</string>
 
 	<key>CFBundleIdentifier</key>
-	<string>com.libcurl.libcurl</string>
+	<string>se.haxx.curl.libcurl</string>
 
 	<key>CFBundleVersion</key>
-	<string>7.29.0</string>
+	<string>7.30.0</string>
 
 	<key>CFBundleName</key>
 	<string>libcurl</string>
 
 	<key>CFBundlePackageType</key>
 	<string>FMWK</string>
 
 	<key>CFBundleSignature</key>
 	<string>????</string>
 
 	<key>CFBundleShortVersionString</key>
-	<string>libcurl 7.29.0</string>
+	<string>libcurl 7.30.0</string>
 
 	<key>CFBundleGetInfoString</key>
-	<string>libcurl.plist 7.29.0</string>
+	<string>libcurl.plist 7.30.0</string>
 </dict>
 </plist>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib: libcurl.vcproj
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/libcurl.vers.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/libcurl.vers.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/libcurl.vers.in	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/libcurl.vers.in	2013-04-12 02:46:54.000000000 +0800
@@ -3,11 +3,11 @@
   local:
     __*;
     _rest*;
     _save*;
 };
 
-CURL_@VERSIONED_FLAVOUR@4
+CURL_@CURL_LT_SHLIB_VERSIONED_FLAVOUR@4
 {
   global: curl_*;
   local: *;
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.am	2013-02-06 18:11:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.am	2013-04-12 02:46:54.000000000 +0800
@@ -18,41 +18,38 @@
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
 
-DSP = vc6libcurl.dsp
-VCPROJ = libcurl.vcproj
-
 DOCS = README.encoding README.memoryleak README.ares README.curlx	\
  README.hostip README.multi_socket README.httpauth README.pipelining    \
  README.curl_off_t README.pingpong
 
 CMAKE_DIST = CMakeLists.txt curl_config.h.cmake
 
-EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 $(DSP)		\
- vc6libcurl.dsw config-win32.h config-win32ce.h config-riscos.h		\
- config-mac.h curl_config.h.in makefile.dj config-dos.h libcurl.plist	\
- libcurl.rc config-amigaos.h makefile.amiga Makefile.netware nwlib.c	\
- nwos.c msvcproj.head msvcproj.foot config-win32ce.h config-os400.h	\
- setup-os400.h config-symbian.h Makefile.Watcom config-tpf.h $(DOCS)	\
- $(VCPROJ) mk-ca-bundle.pl mk-ca-bundle.vbs firefox-db2pem.sh		\
- $(CMAKE_DIST) config-vxworks.h Makefile.vxworks checksrc.pl		\
+EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 config-win32.h	\
+ config-win32ce.h config-riscos.h config-mac.h curl_config.h.in		\
+ makefile.dj config-dos.h libcurl.plist libcurl.rc config-amigaos.h	\
+ makefile.amiga Makefile.netware nwlib.c nwos.c config-win32ce.h	\
+ config-os400.h setup-os400.h config-symbian.h Makefile.Watcom		\
+ config-tpf.h $(DOCS) mk-ca-bundle.pl mk-ca-bundle.vbs $(CMAKE_DIST)	\
+ firefox-db2pem.sh config-vxworks.h Makefile.vxworks checksrc.pl	\
  objnames-test08.sh objnames-test10.sh objnames.inc
 
-CLEANFILES = $(DSP) $(VCPROJ)
-
 lib_LTLIBRARIES = libcurl.la
-LIBCURL_LIBS = @LIBCURL_LIBS@
+
+if BUILD_UNITTESTS
+noinst_LTLIBRARIES = libcurlu.la
+else
+noinst_LTLIBRARIES =
+endif
 
 # This might hold -Werror
 CFLAGS += @CURL_CFLAG_EXTRAS@
 
-CFLAG_CURL_SYMBOL_HIDING = @CFLAG_CURL_SYMBOL_HIDING@
-
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
 # $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
@@ -76,21 +73,14 @@
               -I$(top_builddir)/include      \
               -I$(top_srcdir)/include        \
               -I$(top_builddir)/lib          \
               -I$(top_srcdir)/lib
 endif
 
-# Mostly for Windows build targets, when building libcurl library
-if USE_CPPFLAG_BUILDING_LIBCURL
-AM_CPPFLAGS += -DBUILDING_LIBCURL
-endif
-
-# Mostly for Windows build targets, when building static libcurl
-if USE_CPPFLAG_CURL_STATICLIB
-AM_CPPFLAGS += -DCURL_STATICLIB
-endif
+# Prevent LIBS from being used for all link targets
+LIBS = $(BLANK_AT_MAKETIME)
 
 if SONAME_BUMP
 #
 # Bumping of SONAME conditionally may seem like a weird thing to do, and yeah
 # it is. The problem is that we try to avoid the bump as hard as possible, but
 # yet it is still necessary for a few rare situations. The configure script will
@@ -114,109 +104,59 @@
 # 1. if there are only source changes, use C:R+1:A
 # 2. if interfaces were added use C+1:0:A+1
 # 3. if interfaces were removed, then use C+1:0:0
 #
 # For the full guide on libcurl ABI rules, see docs/libcurl/ABI
 
-if NO_UNDEFINED
-# The -no-undefined flag is crucial to build fine on some platforms
-UNDEF = -no-undefined
+AM_CPPFLAGS += -DBUILDING_LIBCURL
+AM_LDFLAGS =
+AM_CFLAGS =
+
+libcurl_la_CPPFLAGS_EXTRA =
+libcurl_la_LDFLAGS_EXTRA =
+libcurl_la_CFLAGS_EXTRA =
+
+if CURL_LT_SHLIB_USE_VERSION_INFO
+libcurl_la_LDFLAGS_EXTRA += $(VERSIONINFO)
 endif
 
-if MIMPURE
-# This is for gcc on Solaris (8+ ?) to avoid "relocations remain against
-# allocatable but non-writable sections" problems.
-MIMPURE = -mimpure-text
+if CURL_LT_SHLIB_USE_NO_UNDEFINED
+libcurl_la_LDFLAGS_EXTRA += -no-undefined
 endif
 
-if VERSIONED_SYMBOLS
-VERSIONED_SYMBOLS = -Wl,--version-script=libcurl.vers
+if CURL_LT_SHLIB_USE_MIMPURE_TEXT
+libcurl_la_LDFLAGS_EXTRA += -mimpure-text
 endif
 
-# Prevent LIBS from being used for all link targets
-LIBS = $(BLANK_AT_MAKETIME)
+if CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS
+libcurl_la_LDFLAGS_EXTRA += -Wl,--version-script=libcurl.vers
+endif
 
-libcurl_la_LDFLAGS = $(UNDEF) $(VERSIONINFO) $(MIMPURE) $(VERSIONED_SYMBOLS) $(LIBCURL_LIBS)
+if USE_CPPFLAG_CURL_STATICLIB
+libcurl_la_CPPFLAGS_EXTRA += -DCURL_STATICLIB
+endif
 
 if DOING_CURL_SYMBOL_HIDING
-libcurl_la_CPPFLAGS = $(AM_CPPFLAGS) -DCURL_HIDDEN_SYMBOLS
-libcurl_la_CFLAGS = $(AM_CFLAGS) $(CFLAG_CURL_SYMBOL_HIDING)
-else
-libcurl_la_CPPFLAGS = $(AM_CPPFLAGS)
-libcurl_la_CFLAGS = $(AM_CFLAGS)
+libcurl_la_CPPFLAGS_EXTRA += -DCURL_HIDDEN_SYMBOLS
+libcurl_la_CFLAGS_EXTRA += $(CFLAG_CURL_SYMBOL_HIDING)
 endif
 
-# unit testing static library built only along with unit tests
-if BUILD_UNITTESTS
-noinst_LTLIBRARIES = libcurlu.la
-else
-noinst_LTLIBRARIES =
-endif
+libcurl_la_CPPFLAGS = $(AM_CPPFLAGS) $(libcurl_la_CPPFLAGS_EXTRA)
+libcurl_la_LDFLAGS = $(AM_LDFLAGS) $(libcurl_la_LDFLAGS_EXTRA) $(LIBCURL_LIBS)
+libcurl_la_CFLAGS = $(AM_CFLAGS) $(libcurl_la_CFLAGS_EXTRA)
 
-libcurlu_la_CPPFLAGS = $(AM_CPPFLAGS) -DUNITTESTS
-libcurlu_la_LDFLAGS = -static $(LIBCURL_LIBS)
+libcurlu_la_CPPFLAGS = $(AM_CPPFLAGS) -DCURL_STATICLIB -DUNITTESTS
+libcurlu_la_LDFLAGS = $(AM_LDFLAGS) -static $(LIBCURL_LIBS)
 libcurlu_la_CFLAGS = $(AM_CFLAGS)
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
 include Makefile.inc
 
 libcurl_la_SOURCES = $(CSOURCES) $(HHEADERS)
 libcurlu_la_SOURCES = $(CSOURCES) $(HHEADERS)
 
-WIN32SOURCES = $(CSOURCES)
-WIN32HEADERS = $(HHEADERS) config-win32.h
-
-DSPOUT = | awk '{printf("%s\r\n", $$0)}' >> $(DSP)
-VCPROJOUT = | awk '{printf("%s\r\n", $$0)}' >> $(VCPROJ)
-
-$(DSP): msvcproj.head msvcproj.foot Makefile.am
-	echo "creating $(DSP)"
-	@(cp $(srcdir)/msvcproj.head $(DSP); \
-	echo "# Begin Group \"Source Files\"" $(DSPOUT); \
-        echo "" $(DSPOUT); \
-        echo "# PROP Default_Filter \"\"" $(DSPOUT); \
-        win32_srcs='$(WIN32SOURCES)'; \
-        sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
-        for file in $$sorted_srcs; do \
-	echo "# Begin Source File" $(DSPOUT); \
-	echo "" $(DSPOUT); \
-	echo "SOURCE=.\\"$$file $(DSPOUT); \
-	echo "# End Source File" $(DSPOUT); \
-	done; \
-	echo "# End Group" $(DSPOUT); \
-	echo "# Begin Group \"Header Files\"" $(DSPOUT); \
-        echo "" $(DSPOUT); \
-        echo "# PROP Default_Filter \"\"" $(DSPOUT); \
-        win32_hdrs='$(WIN32HEADERS)'; \
-        sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
-        for file in $$sorted_hdrs; do \
-	echo "# Begin Source File" $(DSPOUT); \
-	echo "" $(DSPOUT); \
-	echo "SOURCE=.\\"$$file $(DSPOUT); \
-	echo "# End Source File" $(DSPOUT); \
-	done; \
-	echo "# End Group" $(DSPOUT); \
-	cat $(srcdir)/msvcproj.foot $(DSPOUT) )
-
-$(VCPROJ): vc8proj.head vc8proj.foot Makefile.am
-	echo "creating $(VCPROJ)"
-	@(cp $(srcdir)/vc8proj.head $(VCPROJ); \
-        win32_srcs='$(WIN32SOURCES)'; \
-        sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
-        for file in $$sorted_srcs; do \
-	echo "<File RelativePath=\""$$file"\"></File>" $(VCPROJOUT); \
-	done; \
-	echo "</Filter><Filter	Name=\"Header Files\">" $(VCPROJOUT); \
-        win32_hdrs='$(WIN32HEADERS)'; \
-        sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
-        for file in $$sorted_hdrs; do \
-	echo "<File RelativePath=\""$$file"\"></File>" $(VCPROJOUT); \
-	done; \
-	cat $(srcdir)/vc8proj.foot $(VCPROJOUT) )
-
-
 checksrc:
 	@@PERL@ $(top_srcdir)/lib/checksrc.pl -D$(top_srcdir)/lib $(CSOURCES) $(HHEADERS)
 
 if CURLDEBUG
 # for debug builds, we scan the sources on all regular make invokes
 all-local: checksrc
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.b32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.b32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.b32	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.b32	2013-02-10 23:47:14.000000000 +0800
@@ -24,13 +24,13 @@
 !ifndef ZLIB_PATH
 ZLIB_PATH = ..\..\zlib-1.2.7
 !endif
 
 # Edit the path below to point to the base of your OpenSSL package.
 !ifndef OPENSSL_PATH
-OPENSSL_PATH = ..\..\openssl-0.9.8x
+OPENSSL_PATH = ..\..\openssl-0.9.8y
 !endif
 
 # Set libcurl static lib, dll and import lib
 LIBCURL_LIB    = libcurl.lib
 LIBCURL_DLL    = libcurl.dll
 LIBCURL_IMPLIB = libcurl_imp.lib
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.in	2013-02-06 18:11:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -57,18 +57,19 @@
 POST_INSTALL = :
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-
-# Mostly for Windows build targets, when building libcurl library
-@USE_CPPFLAG_BUILDING_LIBCURL_TRUE@am__append_1 = -DBUILDING_LIBCURL
-
-# Mostly for Windows build targets, when building static libcurl
-@USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_2 = -DCURL_STATICLIB
+@CURL_LT_SHLIB_USE_VERSION_INFO_TRUE@am__append_1 = $(VERSIONINFO)
+@CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE@am__append_2 = -no-undefined
+@CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE@am__append_3 = -mimpure-text
+@CURL_LT_SHLIB_USE_VERSIONED_SYMBOLS_TRUE@am__append_4 = -Wl,--version-script=libcurl.vers
+@USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_5 = -DCURL_STATICLIB
+@DOING_CURL_SYMBOL_HIDING_TRUE@am__append_6 = -DCURL_HIDDEN_SYMBOLS
+@DOING_CURL_SYMBOL_HIDING_TRUE@am__append_7 = $(CFLAG_CURL_SYMBOL_HIDING)
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/Makefile.inc $(srcdir)/curl_config.h.in \
 	$(srcdir)/libcurl.vers.in
 subdir = lib
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
@@ -77,12 +78,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -156,24 +158,25 @@
 	libcurl_la-curl_sspi.lo libcurl_la-slist.lo \
 	libcurl_la-nonblock.lo libcurl_la-curl_memrchr.lo \
 	libcurl_la-imap.lo libcurl_la-pop3.lo libcurl_la-smtp.lo \
 	libcurl_la-pingpong.lo libcurl_la-rtsp.lo \
 	libcurl_la-curl_threads.lo libcurl_la-warnless.lo \
 	libcurl_la-hmac.lo libcurl_la-polarssl.lo \
-	libcurl_la-curl_rtmp.lo libcurl_la-openldap.lo \
-	libcurl_la-curl_gethostname.lo libcurl_la-gopher.lo \
-	libcurl_la-axtls.lo libcurl_la-idn_win32.lo \
-	libcurl_la-http_negotiate_sspi.lo libcurl_la-cyassl.lo \
-	libcurl_la-http_proxy.lo libcurl_la-non-ascii.lo \
-	libcurl_la-asyn-ares.lo libcurl_la-asyn-thread.lo \
-	libcurl_la-curl_gssapi.lo libcurl_la-curl_ntlm.lo \
-	libcurl_la-curl_ntlm_wb.lo libcurl_la-curl_ntlm_core.lo \
-	libcurl_la-curl_ntlm_msgs.lo libcurl_la-curl_sasl.lo \
-	libcurl_la-curl_schannel.lo libcurl_la-curl_multibyte.lo \
-	libcurl_la-curl_darwinssl.lo libcurl_la-hostcheck.lo \
-	libcurl_la-bundles.lo libcurl_la-conncache.lo
+	libcurl_la-polarssl_threadlock.lo libcurl_la-curl_rtmp.lo \
+	libcurl_la-openldap.lo libcurl_la-curl_gethostname.lo \
+	libcurl_la-gopher.lo libcurl_la-axtls.lo \
+	libcurl_la-idn_win32.lo libcurl_la-http_negotiate_sspi.lo \
+	libcurl_la-cyassl.lo libcurl_la-http_proxy.lo \
+	libcurl_la-non-ascii.lo libcurl_la-asyn-ares.lo \
+	libcurl_la-asyn-thread.lo libcurl_la-curl_gssapi.lo \
+	libcurl_la-curl_ntlm.lo libcurl_la-curl_ntlm_wb.lo \
+	libcurl_la-curl_ntlm_core.lo libcurl_la-curl_ntlm_msgs.lo \
+	libcurl_la-curl_sasl.lo libcurl_la-curl_schannel.lo \
+	libcurl_la-curl_multibyte.lo libcurl_la-curl_darwinssl.lo \
+	libcurl_la-hostcheck.lo libcurl_la-bundles.lo \
+	libcurl_la-conncache.lo libcurl_la-pipeline.lo
 am__objects_2 =
 am_libcurl_la_OBJECTS = $(am__objects_1) $(am__objects_2)
 libcurl_la_OBJECTS = $(am_libcurl_la_OBJECTS)
 libcurl_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libcurl_la_CFLAGS) \
 	$(CFLAGS) $(libcurl_la_LDFLAGS) $(LDFLAGS) -o $@
@@ -215,24 +218,25 @@
 	libcurlu_la-slist.lo libcurlu_la-nonblock.lo \
 	libcurlu_la-curl_memrchr.lo libcurlu_la-imap.lo \
 	libcurlu_la-pop3.lo libcurlu_la-smtp.lo \
 	libcurlu_la-pingpong.lo libcurlu_la-rtsp.lo \
 	libcurlu_la-curl_threads.lo libcurlu_la-warnless.lo \
 	libcurlu_la-hmac.lo libcurlu_la-polarssl.lo \
-	libcurlu_la-curl_rtmp.lo libcurlu_la-openldap.lo \
-	libcurlu_la-curl_gethostname.lo libcurlu_la-gopher.lo \
-	libcurlu_la-axtls.lo libcurlu_la-idn_win32.lo \
-	libcurlu_la-http_negotiate_sspi.lo libcurlu_la-cyassl.lo \
-	libcurlu_la-http_proxy.lo libcurlu_la-non-ascii.lo \
-	libcurlu_la-asyn-ares.lo libcurlu_la-asyn-thread.lo \
-	libcurlu_la-curl_gssapi.lo libcurlu_la-curl_ntlm.lo \
-	libcurlu_la-curl_ntlm_wb.lo libcurlu_la-curl_ntlm_core.lo \
-	libcurlu_la-curl_ntlm_msgs.lo libcurlu_la-curl_sasl.lo \
-	libcurlu_la-curl_schannel.lo libcurlu_la-curl_multibyte.lo \
-	libcurlu_la-curl_darwinssl.lo libcurlu_la-hostcheck.lo \
-	libcurlu_la-bundles.lo libcurlu_la-conncache.lo
+	libcurlu_la-polarssl_threadlock.lo libcurlu_la-curl_rtmp.lo \
+	libcurlu_la-openldap.lo libcurlu_la-curl_gethostname.lo \
+	libcurlu_la-gopher.lo libcurlu_la-axtls.lo \
+	libcurlu_la-idn_win32.lo libcurlu_la-http_negotiate_sspi.lo \
+	libcurlu_la-cyassl.lo libcurlu_la-http_proxy.lo \
+	libcurlu_la-non-ascii.lo libcurlu_la-asyn-ares.lo \
+	libcurlu_la-asyn-thread.lo libcurlu_la-curl_gssapi.lo \
+	libcurlu_la-curl_ntlm.lo libcurlu_la-curl_ntlm_wb.lo \
+	libcurlu_la-curl_ntlm_core.lo libcurlu_la-curl_ntlm_msgs.lo \
+	libcurlu_la-curl_sasl.lo libcurlu_la-curl_schannel.lo \
+	libcurlu_la-curl_multibyte.lo libcurlu_la-curl_darwinssl.lo \
+	libcurlu_la-hostcheck.lo libcurlu_la-bundles.lo \
+	libcurlu_la-conncache.lo libcurlu_la-pipeline.lo
 am_libcurlu_la_OBJECTS = $(am__objects_3) $(am__objects_2)
 libcurlu_la_OBJECTS = $(am_libcurlu_la_OBJECTS)
 libcurlu_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libcurlu_la_CFLAGS) \
 	$(CFLAGS) $(libcurlu_la_LDFLAGS) $(LDFLAGS) -o $@
 @BUILD_UNITTESTS_TRUE@am_libcurlu_la_rpath =
@@ -292,12 +296,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -385,13 +390,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -465,37 +469,48 @@
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 ###########################################################################
 AUTOMAKE_OPTIONS = foreign nostdinc
-DSP = vc6libcurl.dsp
-VCPROJ = libcurl.vcproj
 DOCS = README.encoding README.memoryleak README.ares README.curlx	\
  README.hostip README.multi_socket README.httpauth README.pipelining    \
  README.curl_off_t README.pingpong
 
 CMAKE_DIST = CMakeLists.txt curl_config.h.cmake
-EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 $(DSP)		\
- vc6libcurl.dsw config-win32.h config-win32ce.h config-riscos.h		\
- config-mac.h curl_config.h.in makefile.dj config-dos.h libcurl.plist	\
- libcurl.rc config-amigaos.h makefile.amiga Makefile.netware nwlib.c	\
- nwos.c msvcproj.head msvcproj.foot config-win32ce.h config-os400.h	\
- setup-os400.h config-symbian.h Makefile.Watcom config-tpf.h $(DOCS)	\
- $(VCPROJ) mk-ca-bundle.pl mk-ca-bundle.vbs firefox-db2pem.sh		\
- $(CMAKE_DIST) config-vxworks.h Makefile.vxworks checksrc.pl		\
+EXTRA_DIST = Makefile.b32 Makefile.m32 Makefile.vc6 config-win32.h	\
+ config-win32ce.h config-riscos.h config-mac.h curl_config.h.in		\
+ makefile.dj config-dos.h libcurl.plist libcurl.rc config-amigaos.h	\
+ makefile.amiga Makefile.netware nwlib.c nwos.c config-win32ce.h	\
+ config-os400.h setup-os400.h config-symbian.h Makefile.Watcom		\
+ config-tpf.h $(DOCS) mk-ca-bundle.pl mk-ca-bundle.vbs $(CMAKE_DIST)	\
+ firefox-db2pem.sh config-vxworks.h Makefile.vxworks checksrc.pl	\
  objnames-test08.sh objnames-test10.sh objnames.inc
 
-CLEANFILES = $(DSP) $(VCPROJ)
 lib_LTLIBRARIES = libcurl.la
+@BUILD_UNITTESTS_FALSE@noinst_LTLIBRARIES = 
+@BUILD_UNITTESTS_TRUE@noinst_LTLIBRARIES = libcurlu.la
+
+# This flag accepts an argument of the form current[:revision[:age]]. So,
+# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to
+# 1.
+#
+# Here's the simplified rule guide on how to change -version-info:
+# (current version is C:R:A)
+#
+# 1. if there are only source changes, use C:R+1:A
+# 2. if interfaces were added use C+1:0:A+1
+# 3. if interfaces were removed, then use C+1:0:0
+#
+# For the full guide on libcurl ABI rules, see docs/libcurl/ABI
 @USE_EMBEDDED_ARES_FALSE@AM_CPPFLAGS = -I$(top_builddir)/include/curl \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_builddir)/include \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_srcdir)/include \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_builddir)/lib \
-@USE_EMBEDDED_ARES_FALSE@	-I$(top_srcdir)/lib $(am__append_1) \
-@USE_EMBEDDED_ARES_FALSE@	$(am__append_2)
+@USE_EMBEDDED_ARES_FALSE@	-I$(top_srcdir)/lib \
+@USE_EMBEDDED_ARES_FALSE@	-DBUILDING_LIBCURL
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
@@ -503,64 +518,56 @@
 # $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h
 # $(top_srcdir)/include is for libcurl's external include files
 # $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file
 # $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other "private" files
 # $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file
 # $(top_srcdir)/ares is for in-tree c-ares's external include files
+
+# This flag accepts an argument of the form current[:revision[:age]]. So,
+# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to
+# 1.
+#
+# Here's the simplified rule guide on how to change -version-info:
+# (current version is C:R:A)
+#
+# 1. if there are only source changes, use C:R+1:A
+# 2. if interfaces were added use C+1:0:A+1
+# 3. if interfaces were removed, then use C+1:0:0
+#
+# For the full guide on libcurl ABI rules, see docs/libcurl/ABI
 @USE_EMBEDDED_ARES_TRUE@AM_CPPFLAGS = -I$(top_builddir)/include/curl \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/include \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/include \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/lib \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/lib \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/ares \
-@USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/ares $(am__append_1) \
-@USE_EMBEDDED_ARES_TRUE@	$(am__append_2)
+@USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/ares \
+@USE_EMBEDDED_ARES_TRUE@	-DBUILDING_LIBCURL
 @SONAME_BUMP_FALSE@VERSIONINFO = -version-info 7:0:3
 
 #
 # Bumping of SONAME conditionally may seem like a weird thing to do, and yeah
 # it is. The problem is that we try to avoid the bump as hard as possible, but
 # yet it is still necessary for a few rare situations. The configure script will
 # attempt to figure out these situations, and it can be forced to consider this
 # to be such a case! See README.curl_off_t for further details.
 #
 # This conditional soname bump SHOULD be removed at next "proper" bump.
 #
 @SONAME_BUMP_TRUE@VERSIONINFO = -version-info 8:0:3
-
-# This flag accepts an argument of the form current[:revision[:age]]. So,
-# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to
-# 1.
-#
-# Here's the simplified rule guide on how to change -version-info:
-# (current version is C:R:A)
-#
-# 1. if there are only source changes, use C:R+1:A
-# 2. if interfaces were added use C+1:0:A+1
-# 3. if interfaces were removed, then use C+1:0:0
-#
-# For the full guide on libcurl ABI rules, see docs/libcurl/ABI
-
-# The -no-undefined flag is crucial to build fine on some platforms
-@NO_UNDEFINED_TRUE@UNDEF = -no-undefined
-
-# This is for gcc on Solaris (8+ ?) to avoid "relocations remain against
-# allocatable but non-writable sections" problems.
-@MIMPURE_TRUE@MIMPURE = -mimpure-text
-@VERSIONED_SYMBOLS_TRUE@VERSIONED_SYMBOLS = -Wl,--version-script=libcurl.vers
-libcurl_la_LDFLAGS = $(UNDEF) $(VERSIONINFO) $(MIMPURE) $(VERSIONED_SYMBOLS) $(LIBCURL_LIBS)
-@DOING_CURL_SYMBOL_HIDING_FALSE@libcurl_la_CPPFLAGS = $(AM_CPPFLAGS)
-@DOING_CURL_SYMBOL_HIDING_TRUE@libcurl_la_CPPFLAGS = $(AM_CPPFLAGS) -DCURL_HIDDEN_SYMBOLS
-@DOING_CURL_SYMBOL_HIDING_FALSE@libcurl_la_CFLAGS = $(AM_CFLAGS)
-@DOING_CURL_SYMBOL_HIDING_TRUE@libcurl_la_CFLAGS = $(AM_CFLAGS) $(CFLAG_CURL_SYMBOL_HIDING)
-@BUILD_UNITTESTS_FALSE@noinst_LTLIBRARIES = 
-
-# unit testing static library built only along with unit tests
-@BUILD_UNITTESTS_TRUE@noinst_LTLIBRARIES = libcurlu.la
-libcurlu_la_CPPFLAGS = $(AM_CPPFLAGS) -DUNITTESTS
-libcurlu_la_LDFLAGS = -static $(LIBCURL_LIBS)
+AM_LDFLAGS = 
+AM_CFLAGS = 
+libcurl_la_CPPFLAGS_EXTRA = $(am__append_5) $(am__append_6)
+libcurl_la_LDFLAGS_EXTRA = $(am__append_1) $(am__append_2) \
+	$(am__append_3) $(am__append_4)
+libcurl_la_CFLAGS_EXTRA = $(am__append_7)
+libcurl_la_CPPFLAGS = $(AM_CPPFLAGS) $(libcurl_la_CPPFLAGS_EXTRA)
+libcurl_la_LDFLAGS = $(AM_LDFLAGS) $(libcurl_la_LDFLAGS_EXTRA) $(LIBCURL_LIBS)
+libcurl_la_CFLAGS = $(AM_CFLAGS) $(libcurl_la_CFLAGS_EXTRA)
+libcurlu_la_CPPFLAGS = $(AM_CPPFLAGS) -DCURL_STATICLIB -DUNITTESTS
+libcurlu_la_LDFLAGS = $(AM_LDFLAGS) -static $(LIBCURL_LIBS)
 libcurlu_la_CFLAGS = $(AM_CFLAGS)
 CSOURCES = file.c timeval.c base64.c hostip.c progress.c formdata.c	\
   cookie.c http.c sendf.c ftp.c url.c dict.c if2ip.c speedcheck.c	\
   ldap.c ssluse.c version.c getenv.c escape.c mprintf.c telnet.c	\
   netrc.c getinfo.c transfer.c strequal.c easy.c security.c krb4.c	\
   curl_fnmatch.c fileinfo.c ftplistparser.c wildcard.c krb5.c		\
@@ -569,46 +576,42 @@
   http_negotiate.c inet_pton.c strtoofft.c strerror.c amigaos.c		\
   hostasyn.c hostip4.c hostip6.c hostsyn.c inet_ntop.c parsedate.c	\
   select.c gtls.c sslgen.c tftp.c splay.c strdup.c socks.c ssh.c nss.c	\
   qssl.c rawstr.c curl_addrinfo.c socks_gssapi.c socks_sspi.c		\
   curl_sspi.c slist.c nonblock.c curl_memrchr.c imap.c pop3.c smtp.c	\
   pingpong.c rtsp.c curl_threads.c warnless.c hmac.c polarssl.c		\
-  curl_rtmp.c openldap.c curl_gethostname.c gopher.c axtls.c		\
-  idn_win32.c http_negotiate_sspi.c cyassl.c http_proxy.c non-ascii.c	\
-  asyn-ares.c asyn-thread.c curl_gssapi.c curl_ntlm.c curl_ntlm_wb.c	\
-  curl_ntlm_core.c curl_ntlm_msgs.c curl_sasl.c curl_schannel.c	        \
-  curl_multibyte.c curl_darwinssl.c hostcheck.c                         \
-  bundles.c conncache.c
+  polarssl_threadlock.c curl_rtmp.c openldap.c curl_gethostname.c	\
+  gopher.c axtls.c idn_win32.c http_negotiate_sspi.c cyassl.c		\
+  http_proxy.c non-ascii.c asyn-ares.c asyn-thread.c curl_gssapi.c	\
+  curl_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_ntlm_msgs.c		\
+  curl_sasl.c curl_schannel.c curl_multibyte.c curl_darwinssl.c		\
+  hostcheck.c bundles.c conncache.c pipeline.c
 
 HHEADERS = arpa_telnet.h netrc.h file.h timeval.h qssl.h hostip.h	\
   progress.h formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h	\
   if2ip.h speedcheck.h urldata.h curl_ldap.h ssluse.h escape.h telnet.h	\
   getinfo.h strequal.h krb4.h memdebug.h http_chunks.h curl_rand.h	\
   curl_fnmatch.h wildcard.h fileinfo.h ftplistparser.h strtok.h		\
   connect.h llist.h hash.h content_encoding.h share.h curl_md4.h	\
   curl_md5.h http_digest.h http_negotiate.h inet_pton.h amigaos.h	\
   strtoofft.h strerror.h inet_ntop.h curlx.h curl_memory.h curl_setup.h	\
   transfer.h select.h easyif.h multiif.h parsedate.h sslgen.h gtls.h	\
-  tftp.h sockaddr.h splay.h strdup.h socks.h ssh.h nssg.h		\
-  curl_base64.h rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h	\
+  tftp.h sockaddr.h splay.h strdup.h socks.h ssh.h nssg.h curl_base64.h	\
+  rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h		\
   curl_memrchr.h imap.h pop3.h smtp.h pingpong.h rtsp.h curl_threads.h	\
-  warnless.h curl_hmac.h polarssl.h curl_rtmp.h curl_gethostname.h	\
-  gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h asyn.h curl_ntlm.h	\
-  curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h curl_ntlm_msgs.h	\
-  curl_sasl.h curl_schannel.h curl_multibyte.h curl_darwinssl.h	        \
-  hostcheck.h bundles.h conncache.h curl_setup_once.h multihandle.h     \
-  setup-vms.h
+  warnless.h curl_hmac.h polarssl.h polarssl_threadlock.h curl_rtmp.h	\
+  curl_gethostname.h gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h	\
+  asyn.h curl_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h	\
+  curl_ntlm_msgs.h curl_sasl.h curl_schannel.h curl_multibyte.h		\
+  curl_darwinssl.h hostcheck.h bundles.h conncache.h curl_setup_once.h	\
+  multihandle.h setup-vms.h pipeline.h
 
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
 libcurl_la_SOURCES = $(CSOURCES) $(HHEADERS)
 libcurlu_la_SOURCES = $(CSOURCES) $(HHEADERS)
-WIN32SOURCES = $(CSOURCES)
-WIN32HEADERS = $(HHEADERS) config-win32.h
-DSPOUT = | awk '{printf("%s\r\n", $$0)}' >> $(DSP)
-VCPROJOUT = | awk '{printf("%s\r\n", $$0)}' >> $(VCPROJ)
 all: curl_config.h
 	$(MAKE) $(AM_MAKEFLAGS) all-am
 
 .SUFFIXES:
 .SUFFIXES: .c .lo .o .obj
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
@@ -783,13 +786,15 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-non-ascii.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-nonblock.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-nss.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-openldap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-parsedate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-pingpong.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-pipeline.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-polarssl.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-polarssl_threadlock.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-pop3.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-progress.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-qssl.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-rawstr.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-rtsp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-security.Plo@am__quote@
@@ -891,13 +896,15 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-non-ascii.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-nonblock.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-nss.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-openldap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-parsedate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-pingpong.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-pipeline.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-polarssl.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-polarssl_threadlock.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-pop3.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-progress.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-qssl.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-rawstr.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-rtsp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-security.Plo@am__quote@
@@ -1534,12 +1541,19 @@
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-polarssl.lo -MD -MP -MF $(DEPDIR)/libcurl_la-polarssl.Tpo -c -o libcurl_la-polarssl.lo `test -f 'polarssl.c' || echo '$(srcdir)/'`polarssl.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurl_la-polarssl.Tpo $(DEPDIR)/libcurl_la-polarssl.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polarssl.c' object='libcurl_la-polarssl.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-polarssl.lo `test -f 'polarssl.c' || echo '$(srcdir)/'`polarssl.c
 
+libcurl_la-polarssl_threadlock.lo: polarssl_threadlock.c
+@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-polarssl_threadlock.lo -MD -MP -MF $(DEPDIR)/libcurl_la-polarssl_threadlock.Tpo -c -o libcurl_la-polarssl_threadlock.lo `test -f 'polarssl_threadlock.c' || echo '$(srcdir)/'`polarssl_threadlock.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurl_la-polarssl_threadlock.Tpo $(DEPDIR)/libcurl_la-polarssl_threadlock.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polarssl_threadlock.c' object='libcurl_la-polarssl_threadlock.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-polarssl_threadlock.lo `test -f 'polarssl_threadlock.c' || echo '$(srcdir)/'`polarssl_threadlock.c
+
 libcurl_la-curl_rtmp.lo: curl_rtmp.c
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-curl_rtmp.lo -MD -MP -MF $(DEPDIR)/libcurl_la-curl_rtmp.Tpo -c -o libcurl_la-curl_rtmp.lo `test -f 'curl_rtmp.c' || echo '$(srcdir)/'`curl_rtmp.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurl_la-curl_rtmp.Tpo $(DEPDIR)/libcurl_la-curl_rtmp.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='curl_rtmp.c' object='libcurl_la-curl_rtmp.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-curl_rtmp.lo `test -f 'curl_rtmp.c' || echo '$(srcdir)/'`curl_rtmp.c
@@ -1702,12 +1716,19 @@
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-conncache.lo -MD -MP -MF $(DEPDIR)/libcurl_la-conncache.Tpo -c -o libcurl_la-conncache.lo `test -f 'conncache.c' || echo '$(srcdir)/'`conncache.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurl_la-conncache.Tpo $(DEPDIR)/libcurl_la-conncache.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='conncache.c' object='libcurl_la-conncache.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-conncache.lo `test -f 'conncache.c' || echo '$(srcdir)/'`conncache.c
 
+libcurl_la-pipeline.lo: pipeline.c
+@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-pipeline.lo -MD -MP -MF $(DEPDIR)/libcurl_la-pipeline.Tpo -c -o libcurl_la-pipeline.lo `test -f 'pipeline.c' || echo '$(srcdir)/'`pipeline.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurl_la-pipeline.Tpo $(DEPDIR)/libcurl_la-pipeline.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pipeline.c' object='libcurl_la-pipeline.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-pipeline.lo `test -f 'pipeline.c' || echo '$(srcdir)/'`pipeline.c
+
 libcurlu_la-file.lo: file.c
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-file.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-file.Tpo -c -o libcurlu_la-file.lo `test -f 'file.c' || echo '$(srcdir)/'`file.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurlu_la-file.Tpo $(DEPDIR)/libcurlu_la-file.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='file.c' object='libcurlu_la-file.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-file.lo `test -f 'file.c' || echo '$(srcdir)/'`file.c
@@ -2290,12 +2311,19 @@
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-polarssl.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-polarssl.Tpo -c -o libcurlu_la-polarssl.lo `test -f 'polarssl.c' || echo '$(srcdir)/'`polarssl.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurlu_la-polarssl.Tpo $(DEPDIR)/libcurlu_la-polarssl.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polarssl.c' object='libcurlu_la-polarssl.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-polarssl.lo `test -f 'polarssl.c' || echo '$(srcdir)/'`polarssl.c
 
+libcurlu_la-polarssl_threadlock.lo: polarssl_threadlock.c
+@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-polarssl_threadlock.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-polarssl_threadlock.Tpo -c -o libcurlu_la-polarssl_threadlock.lo `test -f 'polarssl_threadlock.c' || echo '$(srcdir)/'`polarssl_threadlock.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurlu_la-polarssl_threadlock.Tpo $(DEPDIR)/libcurlu_la-polarssl_threadlock.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polarssl_threadlock.c' object='libcurlu_la-polarssl_threadlock.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-polarssl_threadlock.lo `test -f 'polarssl_threadlock.c' || echo '$(srcdir)/'`polarssl_threadlock.c
+
 libcurlu_la-curl_rtmp.lo: curl_rtmp.c
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-curl_rtmp.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-curl_rtmp.Tpo -c -o libcurlu_la-curl_rtmp.lo `test -f 'curl_rtmp.c' || echo '$(srcdir)/'`curl_rtmp.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurlu_la-curl_rtmp.Tpo $(DEPDIR)/libcurlu_la-curl_rtmp.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='curl_rtmp.c' object='libcurlu_la-curl_rtmp.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-curl_rtmp.lo `test -f 'curl_rtmp.c' || echo '$(srcdir)/'`curl_rtmp.c
@@ -2458,12 +2486,19 @@
 @am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-conncache.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-conncache.Tpo -c -o libcurlu_la-conncache.lo `test -f 'conncache.c' || echo '$(srcdir)/'`conncache.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurlu_la-conncache.Tpo $(DEPDIR)/libcurlu_la-conncache.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='conncache.c' object='libcurlu_la-conncache.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-conncache.lo `test -f 'conncache.c' || echo '$(srcdir)/'`conncache.c
 
+libcurlu_la-pipeline.lo: pipeline.c
+@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-pipeline.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-pipeline.Tpo -c -o libcurlu_la-pipeline.lo `test -f 'pipeline.c' || echo '$(srcdir)/'`pipeline.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libcurlu_la-pipeline.Tpo $(DEPDIR)/libcurlu_la-pipeline.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pipeline.c' object='libcurlu_la-pipeline.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-pipeline.lo `test -f 'pipeline.c' || echo '$(srcdir)/'`pipeline.c
+
 mostlyclean-libtool:
 	-rm -f *.lo
 
 clean-libtool:
 	-rm -rf .libs _libs
 
@@ -2576,13 +2611,12 @@
 	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
 	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
 	fi
 mostlyclean-generic:
 
 clean-generic:
-	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
 
 distclean-generic:
 	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
 	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
 
 maintainer-clean-generic:
@@ -2674,57 +2708,12 @@
 	installcheck-am installdirs maintainer-clean \
 	maintainer-clean-generic mostlyclean mostlyclean-compile \
 	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
 	tags uninstall uninstall-am uninstall-libLTLIBRARIES
 
 
-$(DSP): msvcproj.head msvcproj.foot Makefile.am
-	echo "creating $(DSP)"
-	@(cp $(srcdir)/msvcproj.head $(DSP); \
-	echo "# Begin Group \"Source Files\"" $(DSPOUT); \
-        echo "" $(DSPOUT); \
-        echo "# PROP Default_Filter \"\"" $(DSPOUT); \
-        win32_srcs='$(WIN32SOURCES)'; \
-        sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
-        for file in $$sorted_srcs; do \
-	echo "# Begin Source File" $(DSPOUT); \
-	echo "" $(DSPOUT); \
-	echo "SOURCE=.\\"$$file $(DSPOUT); \
-	echo "# End Source File" $(DSPOUT); \
-	done; \
-	echo "# End Group" $(DSPOUT); \
-	echo "# Begin Group \"Header Files\"" $(DSPOUT); \
-        echo "" $(DSPOUT); \
-        echo "# PROP Default_Filter \"\"" $(DSPOUT); \
-        win32_hdrs='$(WIN32HEADERS)'; \
-        sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
-        for file in $$sorted_hdrs; do \
-	echo "# Begin Source File" $(DSPOUT); \
-	echo "" $(DSPOUT); \
-	echo "SOURCE=.\\"$$file $(DSPOUT); \
-	echo "# End Source File" $(DSPOUT); \
-	done; \
-	echo "# End Group" $(DSPOUT); \
-	cat $(srcdir)/msvcproj.foot $(DSPOUT) )
-
-$(VCPROJ): vc8proj.head vc8proj.foot Makefile.am
-	echo "creating $(VCPROJ)"
-	@(cp $(srcdir)/vc8proj.head $(VCPROJ); \
-        win32_srcs='$(WIN32SOURCES)'; \
-        sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
-        for file in $$sorted_srcs; do \
-	echo "<File RelativePath=\""$$file"\"></File>" $(VCPROJOUT); \
-	done; \
-	echo "</Filter><Filter	Name=\"Header Files\">" $(VCPROJOUT); \
-        win32_hdrs='$(WIN32HEADERS)'; \
-        sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
-        for file in $$sorted_hdrs; do \
-	echo "<File RelativePath=\""$$file"\"></File>" $(VCPROJOUT); \
-	done; \
-	cat $(srcdir)/vc8proj.foot $(VCPROJOUT) )
-
 checksrc:
 	@@PERL@ $(top_srcdir)/lib/checksrc.pl -D$(top_srcdir)/lib $(CSOURCES) $(HHEADERS)
 
 # for debug builds, we scan the sources on all regular make invokes
 @CURLDEBUG_TRUE@all-local: checksrc
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.inc	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.inc	2013-04-12 02:46:54.000000000 +0800
@@ -17,31 +17,31 @@
   http_negotiate.c inet_pton.c strtoofft.c strerror.c amigaos.c		\
   hostasyn.c hostip4.c hostip6.c hostsyn.c inet_ntop.c parsedate.c	\
   select.c gtls.c sslgen.c tftp.c splay.c strdup.c socks.c ssh.c nss.c	\
   qssl.c rawstr.c curl_addrinfo.c socks_gssapi.c socks_sspi.c		\
   curl_sspi.c slist.c nonblock.c curl_memrchr.c imap.c pop3.c smtp.c	\
   pingpong.c rtsp.c curl_threads.c warnless.c hmac.c polarssl.c		\
-  curl_rtmp.c openldap.c curl_gethostname.c gopher.c axtls.c		\
-  idn_win32.c http_negotiate_sspi.c cyassl.c http_proxy.c non-ascii.c	\
-  asyn-ares.c asyn-thread.c curl_gssapi.c curl_ntlm.c curl_ntlm_wb.c	\
-  curl_ntlm_core.c curl_ntlm_msgs.c curl_sasl.c curl_schannel.c	        \
-  curl_multibyte.c curl_darwinssl.c hostcheck.c                         \
-  bundles.c conncache.c
+  polarssl_threadlock.c curl_rtmp.c openldap.c curl_gethostname.c	\
+  gopher.c axtls.c idn_win32.c http_negotiate_sspi.c cyassl.c		\
+  http_proxy.c non-ascii.c asyn-ares.c asyn-thread.c curl_gssapi.c	\
+  curl_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_ntlm_msgs.c		\
+  curl_sasl.c curl_schannel.c curl_multibyte.c curl_darwinssl.c		\
+  hostcheck.c bundles.c conncache.c pipeline.c
 
 HHEADERS = arpa_telnet.h netrc.h file.h timeval.h qssl.h hostip.h	\
   progress.h formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h	\
   if2ip.h speedcheck.h urldata.h curl_ldap.h ssluse.h escape.h telnet.h	\
   getinfo.h strequal.h krb4.h memdebug.h http_chunks.h curl_rand.h	\
   curl_fnmatch.h wildcard.h fileinfo.h ftplistparser.h strtok.h		\
   connect.h llist.h hash.h content_encoding.h share.h curl_md4.h	\
   curl_md5.h http_digest.h http_negotiate.h inet_pton.h amigaos.h	\
   strtoofft.h strerror.h inet_ntop.h curlx.h curl_memory.h curl_setup.h	\
   transfer.h select.h easyif.h multiif.h parsedate.h sslgen.h gtls.h	\
-  tftp.h sockaddr.h splay.h strdup.h socks.h ssh.h nssg.h		\
-  curl_base64.h rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h	\
+  tftp.h sockaddr.h splay.h strdup.h socks.h ssh.h nssg.h curl_base64.h	\
+  rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h		\
   curl_memrchr.h imap.h pop3.h smtp.h pingpong.h rtsp.h curl_threads.h	\
-  warnless.h curl_hmac.h polarssl.h curl_rtmp.h curl_gethostname.h	\
-  gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h asyn.h curl_ntlm.h	\
-  curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h curl_ntlm_msgs.h	\
-  curl_sasl.h curl_schannel.h curl_multibyte.h curl_darwinssl.h	        \
-  hostcheck.h bundles.h conncache.h curl_setup_once.h multihandle.h     \
-  setup-vms.h
+  warnless.h curl_hmac.h polarssl.h polarssl_threadlock.h curl_rtmp.h	\
+  curl_gethostname.h gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h	\
+  asyn.h curl_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h	\
+  curl_ntlm_msgs.h curl_sasl.h curl_schannel.h curl_multibyte.h		\
+  curl_darwinssl.h hostcheck.h bundles.h conncache.h curl_setup_once.h	\
+  multihandle.h setup-vms.h pipeline.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.m32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.m32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.m32	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.m32	2013-04-12 05:52:12.000000000 +0800
@@ -15,13 +15,13 @@
 # Edit the path below to point to the base of your Zlib sources.
 ifndef ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 endif
 # Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 endif
 # Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
 LIBSSH2_PATH = ../../libssh2-1.4.3
 endif
 # Edit the path below to point to the base of your librtmp package.
@@ -103,12 +103,15 @@
 ifeq ($(findstring -dyn,$(CFG)),-dyn)
 DYN = 1
 endif
 ifeq ($(findstring -ares,$(CFG)),-ares)
 ARES = 1
 endif
+ifeq ($(findstring -sync,$(CFG)),-sync)
+SYNC = 1
+endif
 ifeq ($(findstring -rtmp,$(CFG)),-rtmp)
 RTMP = 1
 SSL = 1
 ZLIB = 1
 endif
 ifeq ($(findstring -ssh2,$(CFG)),-ssh2)
@@ -148,17 +151,21 @@
 SSPI = 1
 endif
 
 INCLUDES = -I. -I../include
 CFLAGS += -DBUILDING_LIBCURL
 
-ifdef ARES
-  INCLUDES += -I"$(LIBCARES_PATH)"
-  CFLAGS += -DUSE_ARES
-  DLL_LIBS += -L"$(LIBCARES_PATH)" -lcares
-  libcurl_dll_DEPENDENCIES = $(LIBCARES_PATH)/libcares.a
+ifdef SYNC
+  CFLAGS += -DUSE_SYNC_DNS
+else
+  ifdef ARES
+    INCLUDES += -I"$(LIBCARES_PATH)"
+    CFLAGS += -DUSE_ARES -DCARES_STATICLIB
+    DLL_LIBS += -L"$(LIBCARES_PATH)" -lcares
+    libcurl_dll_DEPENDENCIES = $(LIBCARES_PATH)/libcares.a
+  endif
 endif
 ifdef RTMP
   INCLUDES += -I"$(LIBRTMP_PATH)"
   CFLAGS += -DUSE_LIBRTMP
   DLL_LIBS += -L"$(LIBRTMP_PATH)/librtmp" -lrtmp -lwinmm
 endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.netware /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.netware
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.netware	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.netware	2013-02-10 23:47:14.000000000 +0800
@@ -16,13 +16,13 @@
 ifndef ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 endif
 
 # Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 endif
 
 # Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
 LIBSSH2_PATH = ../../libssh2-1.4.3
 endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc10
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc10	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc10	2013-04-12 15:13:03.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -59,16 +59,16 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH   = ../../openssl-0.9.8x
+OPENSSL_PATH   = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF LIBSSH2_PATH
 LIBSSH2_PATH   = ../../libssh2-1.4.3
 !ENDIF
 
@@ -491,36 +491,40 @@
 	@-erase /s *.pdb 2> NUL
 	@-erase /s *.res 2> NUL
 !ELSE
 # A config was provided, so the library can be built.
 #
 X_OBJS= \
+	$(DIROBJ)\amigaos.obj \
 	$(DIROBJ)\asyn-ares.obj \
 	$(DIROBJ)\asyn-thread.obj \
+	$(DIROBJ)\axtls.obj \
 	$(DIROBJ)\base64.obj \
 	$(DIROBJ)\bundles.obj \
 	$(DIROBJ)\conncache.obj \
 	$(DIROBJ)\connect.obj \
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_darwinssl.obj \
 	$(DIROBJ)\curl_fnmatch.obj \
 	$(DIROBJ)\curl_gethostname.obj \
+	$(DIROBJ)\curl_gssapi.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_multibyte.obj \
 	$(DIROBJ)\curl_ntlm.obj \
 	$(DIROBJ)\curl_ntlm_core.obj \
 	$(DIROBJ)\curl_ntlm_msgs.obj \
 	$(DIROBJ)\curl_ntlm_wb.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_rtmp.obj \
 	$(DIROBJ)\curl_sasl.obj \
 	$(DIROBJ)\curl_schannel.obj \
 	$(DIROBJ)\curl_sspi.obj \
 	$(DIROBJ)\curl_threads.obj \
+	$(DIROBJ)\cyassl.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\fileinfo.obj \
 	$(DIROBJ)\formdata.obj \
@@ -541,33 +545,42 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_negotiate_sspi.obj \
 	$(DIROBJ)\http_proxy.obj \
+	$(DIROBJ)\idn_win32.obj \
 	$(DIROBJ)\if2ip.obj \
 	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
+	$(DIROBJ)\krb4.obj \
+	$(DIROBJ)\krb5.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md4.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
+	$(DIROBJ)\non-ascii.obj \
 	$(DIROBJ)\nonblock.obj \
+	$(DIROBJ)\nss.obj \
 	$(DIROBJ)\openldap.obj \
 	$(DIROBJ)\parsedate.obj \
 	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
+	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
+	$(DIROBJ)\qssl.obj \
 	$(DIROBJ)\rawstr.obj \
 	$(DIROBJ)\rtsp.obj \
+	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
 	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
@@ -575,12 +588,13 @@
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
 	$(DIROBJ)\sslgen.obj \
 	$(DIROBJ)\ssluse.obj \
+	$(DIROBJ)\strdup.obj \
 	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc6
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc6	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc6	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -59,16 +59,16 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH   = ../../openssl-0.9.8x
+OPENSSL_PATH   = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF LIBSSH2_PATH
 LIBSSH2_PATH   = ../../libssh2-1.4.3
 !ENDIF
 
@@ -491,36 +491,40 @@
 	@-erase /s *.pdb 2> NUL
 	@-erase /s *.res 2> NUL
 !ELSE
 # A config was provided, so the library can be built.
 #
 X_OBJS= \
+	$(DIROBJ)\amigaos.obj \
 	$(DIROBJ)\asyn-ares.obj \
 	$(DIROBJ)\asyn-thread.obj \
+	$(DIROBJ)\axtls.obj \
 	$(DIROBJ)\base64.obj \
 	$(DIROBJ)\bundles.obj \
 	$(DIROBJ)\conncache.obj \
 	$(DIROBJ)\connect.obj \
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_darwinssl.obj \
 	$(DIROBJ)\curl_fnmatch.obj \
 	$(DIROBJ)\curl_gethostname.obj \
+	$(DIROBJ)\curl_gssapi.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_multibyte.obj \
 	$(DIROBJ)\curl_ntlm.obj \
 	$(DIROBJ)\curl_ntlm_core.obj \
 	$(DIROBJ)\curl_ntlm_msgs.obj \
 	$(DIROBJ)\curl_ntlm_wb.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_rtmp.obj \
 	$(DIROBJ)\curl_sasl.obj \
 	$(DIROBJ)\curl_schannel.obj \
 	$(DIROBJ)\curl_sspi.obj \
 	$(DIROBJ)\curl_threads.obj \
+	$(DIROBJ)\cyassl.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\fileinfo.obj \
 	$(DIROBJ)\formdata.obj \
@@ -541,33 +545,42 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_negotiate_sspi.obj \
 	$(DIROBJ)\http_proxy.obj \
+	$(DIROBJ)\idn_win32.obj \
 	$(DIROBJ)\if2ip.obj \
 	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
+	$(DIROBJ)\krb4.obj \
+	$(DIROBJ)\krb5.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md4.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
+	$(DIROBJ)\non-ascii.obj \
 	$(DIROBJ)\nonblock.obj \
+	$(DIROBJ)\nss.obj \
 	$(DIROBJ)\openldap.obj \
 	$(DIROBJ)\parsedate.obj \
 	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
+	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
+	$(DIROBJ)\qssl.obj \
 	$(DIROBJ)\rawstr.obj \
 	$(DIROBJ)\rtsp.obj \
+	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
 	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
@@ -575,12 +588,13 @@
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
 	$(DIROBJ)\sslgen.obj \
 	$(DIROBJ)\ssluse.obj \
+	$(DIROBJ)\strdup.obj \
 	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc8
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc8	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc8	2013-04-12 15:13:03.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -59,16 +59,16 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH   = ../../openssl-0.9.8x
+OPENSSL_PATH   = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF LIBSSH2_PATH
 LIBSSH2_PATH   = ../../libssh2-1.4.3
 !ENDIF
 
@@ -491,36 +491,40 @@
 	@-erase /s *.pdb 2> NUL
 	@-erase /s *.res 2> NUL
 !ELSE
 # A config was provided, so the library can be built.
 #
 X_OBJS= \
+	$(DIROBJ)\amigaos.obj \
 	$(DIROBJ)\asyn-ares.obj \
 	$(DIROBJ)\asyn-thread.obj \
+	$(DIROBJ)\axtls.obj \
 	$(DIROBJ)\base64.obj \
 	$(DIROBJ)\bundles.obj \
 	$(DIROBJ)\conncache.obj \
 	$(DIROBJ)\connect.obj \
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_darwinssl.obj \
 	$(DIROBJ)\curl_fnmatch.obj \
 	$(DIROBJ)\curl_gethostname.obj \
+	$(DIROBJ)\curl_gssapi.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_multibyte.obj \
 	$(DIROBJ)\curl_ntlm.obj \
 	$(DIROBJ)\curl_ntlm_core.obj \
 	$(DIROBJ)\curl_ntlm_msgs.obj \
 	$(DIROBJ)\curl_ntlm_wb.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_rtmp.obj \
 	$(DIROBJ)\curl_sasl.obj \
 	$(DIROBJ)\curl_schannel.obj \
 	$(DIROBJ)\curl_sspi.obj \
 	$(DIROBJ)\curl_threads.obj \
+	$(DIROBJ)\cyassl.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\fileinfo.obj \
 	$(DIROBJ)\formdata.obj \
@@ -541,33 +545,42 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_negotiate_sspi.obj \
 	$(DIROBJ)\http_proxy.obj \
+	$(DIROBJ)\idn_win32.obj \
 	$(DIROBJ)\if2ip.obj \
 	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
+	$(DIROBJ)\krb4.obj \
+	$(DIROBJ)\krb5.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md4.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
+	$(DIROBJ)\non-ascii.obj \
 	$(DIROBJ)\nonblock.obj \
+	$(DIROBJ)\nss.obj \
 	$(DIROBJ)\openldap.obj \
 	$(DIROBJ)\parsedate.obj \
 	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
+	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
+	$(DIROBJ)\qssl.obj \
 	$(DIROBJ)\rawstr.obj \
 	$(DIROBJ)\rtsp.obj \
+	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
 	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
@@ -575,12 +588,13 @@
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
 	$(DIROBJ)\sslgen.obj \
 	$(DIROBJ)\ssluse.obj \
+	$(DIROBJ)\strdup.obj \
 	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc9
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vc9	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vc9	2013-04-12 15:13:03.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -59,16 +59,16 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH   = ../../openssl-0.9.8x
+OPENSSL_PATH   = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF LIBSSH2_PATH
 LIBSSH2_PATH   = ../../libssh2-1.4.3
 !ENDIF
 
@@ -491,36 +491,40 @@
 	@-erase /s *.pdb 2> NUL
 	@-erase /s *.res 2> NUL
 !ELSE
 # A config was provided, so the library can be built.
 #
 X_OBJS= \
+	$(DIROBJ)\amigaos.obj \
 	$(DIROBJ)\asyn-ares.obj \
 	$(DIROBJ)\asyn-thread.obj \
+	$(DIROBJ)\axtls.obj \
 	$(DIROBJ)\base64.obj \
 	$(DIROBJ)\bundles.obj \
 	$(DIROBJ)\conncache.obj \
 	$(DIROBJ)\connect.obj \
 	$(DIROBJ)\content_encoding.obj \
 	$(DIROBJ)\cookie.obj \
 	$(DIROBJ)\curl_addrinfo.obj \
 	$(DIROBJ)\curl_darwinssl.obj \
 	$(DIROBJ)\curl_fnmatch.obj \
 	$(DIROBJ)\curl_gethostname.obj \
+	$(DIROBJ)\curl_gssapi.obj \
 	$(DIROBJ)\curl_memrchr.obj \
 	$(DIROBJ)\curl_multibyte.obj \
 	$(DIROBJ)\curl_ntlm.obj \
 	$(DIROBJ)\curl_ntlm_core.obj \
 	$(DIROBJ)\curl_ntlm_msgs.obj \
 	$(DIROBJ)\curl_ntlm_wb.obj \
 	$(DIROBJ)\curl_rand.obj \
 	$(DIROBJ)\curl_rtmp.obj \
 	$(DIROBJ)\curl_sasl.obj \
 	$(DIROBJ)\curl_schannel.obj \
 	$(DIROBJ)\curl_sspi.obj \
 	$(DIROBJ)\curl_threads.obj \
+	$(DIROBJ)\cyassl.obj \
 	$(DIROBJ)\dict.obj \
 	$(DIROBJ)\easy.obj \
 	$(DIROBJ)\escape.obj \
 	$(DIROBJ)\file.obj \
 	$(DIROBJ)\fileinfo.obj \
 	$(DIROBJ)\formdata.obj \
@@ -541,33 +545,42 @@
 	$(DIROBJ)\http.obj \
 	$(DIROBJ)\http_chunks.obj \
 	$(DIROBJ)\http_digest.obj \
 	$(DIROBJ)\http_negotiate.obj \
 	$(DIROBJ)\http_negotiate_sspi.obj \
 	$(DIROBJ)\http_proxy.obj \
+	$(DIROBJ)\idn_win32.obj \
 	$(DIROBJ)\if2ip.obj \
 	$(DIROBJ)\imap.obj \
 	$(DIROBJ)\inet_ntop.obj \
 	$(DIROBJ)\inet_pton.obj \
+	$(DIROBJ)\krb4.obj \
+	$(DIROBJ)\krb5.obj \
 	$(DIROBJ)\ldap.obj \
 	$(DIROBJ)\llist.obj \
 	$(DIROBJ)\md4.obj \
 	$(DIROBJ)\md5.obj \
 	$(DIROBJ)\memdebug.obj \
 	$(DIROBJ)\mprintf.obj \
 	$(DIROBJ)\multi.obj \
 	$(DIROBJ)\netrc.obj \
+	$(DIROBJ)\non-ascii.obj \
 	$(DIROBJ)\nonblock.obj \
+	$(DIROBJ)\nss.obj \
 	$(DIROBJ)\openldap.obj \
 	$(DIROBJ)\parsedate.obj \
 	$(DIROBJ)\pingpong.obj \
+	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
+	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
+	$(DIROBJ)\qssl.obj \
 	$(DIROBJ)\rawstr.obj \
 	$(DIROBJ)\rtsp.obj \
+	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
 	$(DIROBJ)\slist.obj \
 	$(DIROBJ)\smtp.obj \
 	$(DIROBJ)\socks.obj \
@@ -575,12 +588,13 @@
 	$(DIROBJ)\socks_sspi.obj \
 	$(DIROBJ)\speedcheck.obj \
 	$(DIROBJ)\splay.obj \
 	$(DIROBJ)\ssh.obj \
 	$(DIROBJ)\sslgen.obj \
 	$(DIROBJ)\ssluse.obj \
+	$(DIROBJ)\strdup.obj \
 	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vxworks /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vxworks
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.vxworks	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.vxworks	2013-02-10 23:47:14.000000000 +0800
@@ -30,14 +30,14 @@
 
 # BUILD_TYE:= <debug>|<release> (build with debugging info or optimized)
 BUILD_TYPE := debug
 USER_CFLAGS:=
 
 # directories where to seek for includes and libraries
-OPENSSL_INC := D:/libraries/openssl/openssl-0.9.8x-vxWorks6.3/include
-OPENSSL_LIB := D:/libraries/openssl/openssl-0.9.8x-vxWorks6.3
+OPENSSL_INC := D:/libraries/openssl/openssl-0.9.8y-vxWorks6.3/include
+OPENSSL_LIB := D:/libraries/openssl/openssl-0.9.8y-vxWorks6.3
 ZLIB_INC    := D:/libraries/zlib/zlib-1.2.7-VxWorks6.3/zlib-1.2.7
 ZLIB_LIB    := D:/libraries/zlib/zlib-1.2.7-VxWorks6.3/binaries/vxworks_3.1_gnu/Debug/lib
 ARES_INC    :=
 ARES_LIB    :=
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.Watcom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.Watcom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/Makefile.Watcom	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/Makefile.Watcom	2013-02-10 23:47:14.000000000 +0800
@@ -98,13 +98,13 @@
 LIBRTMP_ROOT = ..$(DS)..$(DS)rtmpdump-2.3
 !endif
 
 !ifdef %openssl_root
 OPENSSL_ROOT = $(%openssl_root)
 !else
-OPENSSL_ROOT = ..$(DS)..$(DS)openssl-0.9.8x
+OPENSSL_ROOT = ..$(DS)..$(DS)openssl-0.9.8y
 !endif
 
 !ifdef %ares_root
 ARES_ROOT = $(%ares_root)
 !else
 ARES_ROOT = ..$(DS)ares
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/memdebug.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/memdebug.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/memdebug.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/memdebug.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -236,12 +236,38 @@
     curl_memlog("MEM %s:%d strdup(%p) (%zu) = %p\n",
                 source, line, str, len, mem);
 
   return mem;
 }
 
+#ifdef WIN32
+wchar_t *curl_dowcsdup(const wchar_t *str, int line, const char *source)
+{
+  wchar_t *mem;
+  size_t wsiz, bsiz;
+
+  assert(str != NULL);
+
+  if(countcheck("wcsdup", line, source))
+    return NULL;
+
+  wsiz = wcslen(str) + 1;
+  bsiz = wsiz * sizeof(wchar_t);
+
+  mem = curl_domalloc(bsiz, 0, NULL); /* NULL prevents logging */
+  if(mem)
+    memcpy(mem, str, bsiz);
+
+  if(source)
+    curl_memlog("MEM %s:%d wcsdup(%p) (%zu) = %p\n",
+                source, line, str, bsiz, mem);
+
+  return mem;
+}
+#endif
+
 /* We provide a realloc() that accepts a NULL as pointer, which then
    performs a malloc(). In order to work with ares. */
 void *curl_dorealloc(void *ptr, size_t wantedsize,
                      int line, const char *source)
 {
   struct memdebug *mem=NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/memdebug.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/memdebug.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/memdebug.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/memdebug.h	2013-04-12 02:46:54.000000000 +0800
@@ -5,13 +5,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -43,12 +43,17 @@
 CURL_EXTERN void *curl_docalloc(size_t elements, size_t size, int line,
                                 const char *source);
 CURL_EXTERN void *curl_dorealloc(void *ptr, size_t size, int line,
                                  const char *source);
 CURL_EXTERN void curl_dofree(void *ptr, int line, const char *source);
 CURL_EXTERN char *curl_dostrdup(const char *str, int line, const char *source);
+#ifdef WIN32
+CURL_EXTERN wchar_t *curl_dowcsdup(const wchar_t *str, int line,
+                                   const char *source);
+#endif
+
 CURL_EXTERN void curl_memdebug(const char *logname);
 CURL_EXTERN void curl_memlimit(long limit);
 CURL_EXTERN void curl_memlog(const char *format, ...);
 
 /* file descriptor manipulators */
 CURL_EXTERN curl_socket_t curl_socket(int domain, int type, int protocol,
@@ -81,12 +86,25 @@
 #define strdup(ptr) curl_dostrdup(ptr, __LINE__, __FILE__)
 #define malloc(size) curl_domalloc(size, __LINE__, __FILE__)
 #define calloc(nbelem,size) curl_docalloc(nbelem, size, __LINE__, __FILE__)
 #define realloc(ptr,size) curl_dorealloc(ptr, size, __LINE__, __FILE__)
 #define free(ptr) curl_dofree(ptr, __LINE__, __FILE__)
 
+#ifdef WIN32
+#  undef wcsdup
+#  define wcsdup(ptr) curl_dowcsdup(ptr, __LINE__, __FILE__)
+#  undef _wcsdup
+#  define _wcsdup(ptr) curl_dowcsdup(ptr, __LINE__, __FILE__)
+#  undef _tcsdup
+#  ifdef UNICODE
+#    define _tcsdup(ptr) curl_dowcsdup(ptr, __LINE__, __FILE__)
+#  else
+#    define _tcsdup(ptr) curl_dostrdup(ptr, __LINE__, __FILE__)
+#  endif
+#endif
+
 #define socket(domain,type,protocol)\
  curl_socket(domain,type,protocol,__LINE__,__FILE__)
 #undef accept /* for those with accept as a macro */
 #define accept(sock,addr,len)\
  curl_accept(sock,addr,len,__LINE__,__FILE__)
 #ifdef HAVE_SOCKETPAIR
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/mk-ca-bundle.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/mk-ca-bundle.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/mk-ca-bundle.pl	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/mk-ca-bundle.pl	2013-04-12 02:46:54.000000000 +0800
@@ -31,21 +31,25 @@
 # Hacked by Guenter Knauf.
 #
 use Getopt::Std;
 use MIME::Base64;
 use LWP::UserAgent;
 use strict;
-use vars qw($opt_b $opt_f $opt_h $opt_i $opt_l $opt_n $opt_q $opt_t $opt_u $opt_v);
+use vars qw($opt_b $opt_f $opt_h $opt_i $opt_l $opt_n $opt_q $opt_t $opt_u $opt_v $opt_w);
 
 my $url = 'http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt?raw=1';
 # If the OpenSSL commandline is not in search path you can configure it here!
 my $openssl = 'openssl';
 
-my $version = '1.17';
+my $version = '1.18';
 
-getopts('bfhilnqtuv');
+$opt_w = 76; # default base64 encoded lines length
+
+$0 =~ s@.*(/|\\)@@;
+$Getopt::Std::STANDARD_HELP_VERSION = 1;
+getopts('bfhilnqtuvw:');
 
 if ($opt_i) {
   print ("=" x 78 . "\n");
   print "Script Version            : $version\n";
   print "Perl Version              : $]\n";
   print "Operating System Name     : $^O\n";
@@ -53,27 +57,33 @@
   print "MIME::Base64.pm Version   : ${MIME::Base64::VERSION}\n";
   print "LWP::UserAgent.pm Version : ${LWP::UserAgent::VERSION}\n";
   print "LWP.pm Version            : ${LWP::VERSION}\n";
   print ("=" x 78 . "\n");
 }
 
-$0 =~ s@.*(/|\\)@@;
-if ($opt_h) {
-  printf("Usage:\t%s [-b] [-f] [-i] [-l] [-n] [-q] [-t] [-u] [-v] [<outputfile>]\n", $0);
+sub HELP_MESSAGE() {
+  print "Usage:\t${0} [-b] [-f] [-i] [-l] [-n] [-q] [-t] [-u] [-v] [-w<l>] [<outputfile>]\n";
   print "\t-b\tbackup an existing version of ca-bundle.crt\n";
   print "\t-f\tforce rebuild even if certdata.txt is current\n";
   print "\t-i\tprint version info about used modules\n";
   print "\t-l\tprint license info about certdata.txt\n";
   print "\t-n\tno download of certdata.txt (to use existing)\n";
   print "\t-q\tbe really quiet (no progress output at all)\n";
   print "\t-t\tinclude plain text listing of certificates\n";
   print "\t-u\tunlink (remove) certdata.txt after processing\n";
   print "\t-v\tbe verbose and print out processed CAs\n";
+  print "\t-w <l>\twrap base64 output lines after <l> chars (default: ${opt_w})\n";
   exit;
 }
 
+sub VERSION_MESSAGE() {
+  print "${0} version ${version} running Perl ${]} on ${^O}\n";
+}
+
+HELP_MESSAGE() if ($opt_h);
+
 my $crt = $ARGV[0] || 'ca-bundle.crt';
 (my $txt = $url) =~ s@(.*/|\?.*)@@g;
 
 my $stdout = $crt eq '-';
 my $resp;
 my $fetched;
@@ -111,13 +121,13 @@
 ##
 ## Certificate data from Mozilla as of: ${currentdate}
 ##
 ## This is a bundle of X.509 certificates of public Certificate Authorities
 ## (CA). These were automatically extracted from Mozilla's root certificates
 ## file (certdata.txt).  This file can be found in the mozilla source tree:
-## $url
+## ${url}
 ##
 ## It contains the certificates in ${format}PEM format and therefore
 ## can be directly used with curl / libcurl / php_curl, or with
 ## an Apache+mod_ssl webserver for SSL client authentication.
 ## Just configure this file as the SSLCACertificateFile.
 ##
@@ -179,24 +189,33 @@
           $untrusted = 1;
       }
     }
     if ($untrusted) {
       $skipnum ++;
     } else {
+      my $encoded = MIME::Base64::encode_base64($data, '');
+      $encoded =~ s/(.{1,${opt_w}})/$1\n/g;
       my $pem = "-----BEGIN CERTIFICATE-----\n"
-              . MIME::Base64::encode($data)
+              . $encoded
               . "-----END CERTIFICATE-----\n";
       print CRT "\n$caname\n";
       print CRT ("=" x length($caname) . "\n");
       if (!$opt_t) {
         print CRT $pem;
-      }
-      if ($opt_t) {
-        open(TMP, "|$openssl x509 -md5 -fingerprint -text -inform PEM >> $crt") or die "Couldn't open openssl pipe: $!\n";
+      } else {
+        my $pipe = "|$openssl x509 -md5 -fingerprint -text -inform PEM";
+        if (!$stdout) {
+          $pipe .= " >> $crt.~";
+          close(CRT) or die "Couldn't close $crt.~: $!";
+        }
+        open(TMP, $pipe) or die "Couldn't open openssl pipe: $!";
         print TMP $pem;
-        close(TMP) or die "Couldn't close openssl pipe: $!\n";
+        close(TMP) or die "Couldn't close openssl pipe: $!";
+        if (!$stdout) {
+          open(CRT, ">>$crt.~") or die "Couldn't open $crt.~: $!";
+        }
       }
       print STDERR "Parsing: $caname\n" if ($opt_v);
       $certnum ++;
       $start_of_cert = 0;
     }
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/mk-ca-bundle.vbs /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/mk-ca-bundle.vbs
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/mk-ca-bundle.vbs	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/mk-ca-bundle.vbs	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
 '*                                  _   _ ____  _
 '*  Project                     ___| | | |  _ \| |
 '*                             / __| | | | |_) | |
 '*                            | (__| |_| |  _ <| |___
 '*                             \___|\___/|_| \_\_____|
 '*
-'* Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
+'* Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 '*
 '* This software is licensed as described in the file COPYING, which
 '* you should have received as part of this distribution. The terms
 '* are also available at http://curl.haxx.se/docs/copyright.html.
 '*
 '* You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -23,22 +23,23 @@
 '* ca-bundle.crt for use with OpenSSL / libcurl / libcurl bindings
 '* Requires WinHttp.WinHttpRequest.5.1 and ADODB.Stream which are part of
 '* W2000 SP3 or later, WXP SP1 or later, W2003 Server SP1 or later.
 '* Hacked by Guenter Knauf
 '***************************************************************************
 Option Explicit
-Const myVersion = "0.3.6"
+Const myVersion = "0.3.7"
 
 Const myUrl = "http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt?raw=1"
 
 Const myOpenssl = "openssl.exe"
 
 Const myCdSavF = FALSE       ' Flag: save downloaded data to file certdata.txt
 Const myCaBakF = TRUE        ' Flag: backup existing ca-bundle certificate
 Const myAskLiF = TRUE        ' Flag: display certdata.txt license agreement
 Const myAskTiF = TRUE        ' Flag: ask to include certificate text info
+Const myWrapLe = 76          ' Default length of base64 output lines
 
 '******************* Nothing to configure below! *******************
 Dim objShell, objNetwork, objFSO, objHttp
 Dim myBase, mySelf, myFh, myTmpFh, myCdData, myCdFile, myCaFile, myTmpName, myBakNum, myOptTxt, i
 Set objNetwork = WScript.CreateObject("WScript.Network")
 Set objShell = WScript.CreateObject("WScript.Shell")
@@ -236,13 +237,14 @@
   End If
   Set objRegExp = Nothing
 End Function
 
 Function Base64Encode(inData)
   Const Base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
-  Dim cOut, sOut, I
+  Dim cOut, sOut, lWrap, I
+  lWrap = Int(myWrapLe * 3 / 4)
 
   'For each group of 3 bytes
   For I = 1 To Len(inData) Step 3
     Dim nGroup, pOut, sGroup
 
     'Create one long from this 3 bytes.
@@ -262,15 +264,15 @@
            Mid(Base64, CLng("&o" & Mid(nGroup, 5, 2)) + 1, 1) & _
            Mid(Base64, CLng("&o" & Mid(nGroup, 7, 2)) + 1, 1)
 
     'Add the part To OutPut string
     sOut = sOut + pOut
 
-    'Add a new line For Each 76 chars In dest (76*3/4 = 57)
+    'Add a new line For Each myWrapLe chars In dest
     If (I < Len(inData) - 2) Then
-      If (I + 2) Mod 57 = 0 Then sOut = sOut & vbLf
+      If (I + 2) Mod lWrap = 0 Then sOut = sOut & vbLf
     End If
   Next
   Select Case Len(inData) Mod 3
     Case 1: '8 bit final
       sOut = Left(sOut, Len(sOut) - 2) & "=="
     Case 2: '16 bit final
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/mprintf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/mprintf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/mprintf.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/mprintf.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1999 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -200,107 +200,12 @@
     return 1; /* true */
   default:
     return 0; /* false */
   }
 }
 
-#ifdef DPRINTF_DEBUG2
-static void dprintf_Pass1Report(va_stack_t *vto, int max)
-{
-  int i;
-  char buffer[256];
-  int bit;
-  int flags;
-
-  for(i=0; i<max; i++) {
-    char *type;
-    switch(vto[i].type) {
-    case FORMAT_UNKNOWN:
-      type = "unknown";
-      break;
-    case FORMAT_STRING:
-      type ="string";
-      break;
-    case FORMAT_PTR:
-      type ="pointer";
-      break;
-    case FORMAT_INT:
-      type = "int";
-      break;
-    case FORMAT_INTPTR:
-      type = "intptr";
-      break;
-    case FORMAT_LONG:
-      type = "long";
-      break;
-    case FORMAT_LONGLONG:
-      type = "long long";
-      break;
-    case FORMAT_DOUBLE:
-      type = "double";
-      break;
-    case FORMAT_LONGDOUBLE:
-      type = "long double";
-      break;
-    }
-
-
-    buffer[0]=0;
-
-    for(bit=0; bit<31; bit++) {
-      flags = vto[i].flags & (1<<bit);
-
-      if(flags & FLAGS_SPACE)
-        strcat(buffer, "space ");
-      else if(flags & FLAGS_SHOWSIGN)
-        strcat(buffer, "plus ");
-      else if(flags & FLAGS_LEFT)
-        strcat(buffer, "left ");
-      else if(flags & FLAGS_ALT)
-        strcat(buffer, "alt ");
-      else if(flags & FLAGS_SHORT)
-        strcat(buffer, "short ");
-      else if(flags & FLAGS_LONG)
-        strcat(buffer, "long ");
-      else if(flags & FLAGS_LONGLONG)
-        strcat(buffer, "longlong ");
-      else if(flags & FLAGS_LONGDOUBLE)
-        strcat(buffer, "longdouble ");
-      else if(flags & FLAGS_PAD_NIL)
-        strcat(buffer, "padnil ");
-      else if(flags & FLAGS_UNSIGNED)
-        strcat(buffer, "unsigned ");
-      else if(flags & FLAGS_OCTAL)
-        strcat(buffer, "octal ");
-      else if(flags & FLAGS_HEX)
-        strcat(buffer, "hex ");
-      else if(flags & FLAGS_UPPER)
-        strcat(buffer, "upper ");
-      else if(flags & FLAGS_WIDTH)
-        strcat(buffer, "width ");
-      else if(flags & FLAGS_WIDTHPARAM)
-        strcat(buffer, "widthparam ");
-      else if(flags & FLAGS_PREC)
-        strcat(buffer, "precision ");
-      else if(flags & FLAGS_PRECPARAM)
-        strcat(buffer, "precparam ");
-      else if(flags & FLAGS_CHAR)
-        strcat(buffer, "char ");
-      else if(flags & FLAGS_FLOATE)
-        strcat(buffer, "floate ");
-      else if(flags & FLAGS_FLOATG)
-        strcat(buffer, "floatg ");
-    }
-    printf("REPORT: %d. %s [%s]\n", i, type, buffer);
-
-  }
-
-
-}
-#endif
-
 /******************************************************************
  *
  * Pass 1:
  * Create an index with the type of each parameter entry and its
  * value (may vary in size)
  *
@@ -534,16 +439,12 @@
                                                 of width! */
       }
       *endpos++ = fmt + 1; /* end of this sequence */
     }
   }
 
-#ifdef DPRINTF_DEBUG2
-  dprintf_Pass1Report(vto, max_param);
-#endif
-
   /* Read the arg list parameters into our data list */
   for(i=0; i<max_param; i++) {
     if((i + 1 < max_param) && (vto[i + 1].type == FORMAT_WIDTH)) {
       /* Width/precision arguments must be read before the main argument
        * they are attached to
        */
@@ -916,13 +817,13 @@
       }
       break;
 
     case FORMAT_DOUBLE:
       {
         char formatbuf[32]="%";
-        char *fptr;
+        char *fptr = &formatbuf[1];
         size_t left = sizeof(formatbuf)-strlen(formatbuf);
         int len;
 
         width = -1;
         if(p->flags & FLAGS_WIDTH)
           width = p->width;
@@ -933,21 +834,21 @@
         if(p->flags & FLAGS_PREC)
           prec = p->precision;
         else if(p->flags & FLAGS_PRECPARAM)
           prec = (long)vto[p->precision].data.num.as_signed;
 
         if(p->flags & FLAGS_LEFT)
-          strcat(formatbuf, "-");
+          *fptr++ = '-';
         if(p->flags & FLAGS_SHOWSIGN)
-          strcat(formatbuf, "+");
+          *fptr++ = '+';
         if(p->flags & FLAGS_SPACE)
-          strcat(formatbuf, " ");
+          *fptr++ = ' ';
         if(p->flags & FLAGS_ALT)
-          strcat(formatbuf, "#");
+          *fptr++ = '#';
 
-        fptr=&formatbuf[strlen(formatbuf)];
+        *fptr = 0;
 
         if(width >= 0) {
           /* RECURSIVE USAGE */
           len = curl_msnprintf(fptr, left, "%ld", width);
           fptr += len;
           left -= len;
@@ -966,14 +867,14 @@
           *fptr++ = (char)((p->flags & FLAGS_UPPER) ? 'G' : 'g');
         else
           *fptr++ = 'f';
 
         *fptr = 0; /* and a final zero termination */
 
-        /* NOTE NOTE NOTE!! Not all sprintf() implementations returns number
-           of output characters */
+        /* NOTE NOTE NOTE!! Not all sprintf implementations return number of
+           output characters */
         (sprintf)(work, formatbuf, p->data.dnum);
 
         for(fptr=work; *fptr; fptr++)
           OUTCHAR(*fptr);
       }
       break;
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib: msvcproj.foot
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib: msvcproj.head
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/multi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/multi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/multi.c	2013-02-06 06:01:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/multi.c	2013-04-12 02:46:54.000000000 +0800
@@ -37,12 +37,13 @@
 #include "select.h"
 #include "warnless.h"
 #include "speedcheck.h"
 #include "conncache.h"
 #include "bundles.h"
 #include "multihandle.h"
+#include "pipeline.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
@@ -66,28 +67,22 @@
   ((x) && (((struct SessionHandle *)(x))->magic == CURLEASY_MAGIC_NUMBER))
 
 static void singlesocket(struct Curl_multi *multi,
                          struct Curl_one_easy *easy);
 static int update_timer(struct Curl_multi *multi);
 
-static CURLcode addHandleToSendOrPendPipeline(struct SessionHandle *handle,
-                                              struct connectdata *conn);
-static int checkPendPipeline(struct connectdata *conn);
-static void moveHandleFromSendToRecvPipeline(struct SessionHandle *handle,
-                                             struct connectdata *conn);
-static void moveHandleFromRecvToDonePipeline(struct SessionHandle *handle,
-                                             struct connectdata *conn);
 static bool isHandleAtHead(struct SessionHandle *handle,
                            struct curl_llist *pipeline);
 static CURLMcode add_next_timeout(struct timeval now,
                                   struct Curl_multi *multi,
                                   struct SessionHandle *d);
 
 #ifdef DEBUGBUILD
 static const char * const statename[]={
   "INIT",
+  "CONNECT_PEND",
   "CONNECT",
   "WAITRESOLVE",
   "WAITCONNECT",
   "WAITPROXYCONNECT",
   "PROTOCONNECT",
   "WAITDO",
@@ -122,15 +117,15 @@
     /* don't bother when the new state is the same as the old state */
     return;
 
   easy->state = state;
 
 #ifdef DEBUGBUILD
-  if(easy->easy_conn) {
-    if(easy->state > CURLM_STATE_CONNECT &&
-       easy->state < CURLM_STATE_COMPLETED)
+  if(easy->state >= CURLM_STATE_CONNECT_PEND &&
+     easy->state < CURLM_STATE_COMPLETED) {
+    if(easy->easy_conn)
       connection_id = easy->easy_conn->connection_id;
 
     infof(easy->easy_handle,
           "STATE: %s => %s handle %p; line %d (connection #%ld) \n",
           statename[oldstate], statename[easy->state],
           (char *)easy, lineno, connection_id);
@@ -215,22 +210,22 @@
   struct Curl_sh_entry *p = (struct Curl_sh_entry *) freethis;
 
   if(p)
     free(p);
 }
 
-static size_t fd_key_compare(void*k1, size_t k1_len, void*k2, size_t k2_len)
+static size_t fd_key_compare(void *k1, size_t k1_len, void *k2, size_t k2_len)
 {
   (void) k1_len; (void) k2_len;
 
-  return (*((int* ) k1)) == (*((int* ) k2));
+  return (*((int *) k1)) == (*((int *) k2));
 }
 
-static size_t hash_fd(void* key, size_t key_length, size_t slots_num)
+static size_t hash_fd(void *key, size_t key_length, size_t slots_num)
 {
-  int fd = * ((int* ) key);
+  int fd = *((int *) key);
   (void) key_length;
 
   return (fd % (int)slots_num);
 }
 
 /*
@@ -311,12 +306,13 @@
   /* Let's make the doubly-linked list a circular list.  This makes
      the linked list code simpler and allows inserting at the end
      with less work (we didn't keep a tail pointer before). */
   multi->easy.next = &multi->easy;
   multi->easy.prev = &multi->easy;
 
+  multi->max_pipeline_length = 5;
   return (CURLM *) multi;
 
   error:
 
   Curl_hash_destroy(multi->sockhash);
   multi->sockhash = NULL;
@@ -577,13 +573,13 @@
         /* Clear connection pipelines, if Curl_done above was not called */
         Curl_getoff_all_pipelines(easy->easy_handle, easy->easy_conn);
     }
 
     /* as this was using a shared connection cache we clear the pointer
        to that since we're not part of that multi handle anymore */
-    easy->easy_handle->state.conn_cache = NULL;
+      easy->easy_handle->state.conn_cache = NULL;
 
     /* change state without using multistate(), only to make singlesocket() do
        what we want */
     easy->state = CURLM_STATE_COMPLETED;
     singlesocket(multi, easy); /* to let the application know what sockets
                                   that vanish with this handle */
@@ -635,15 +631,15 @@
     return CURLM_OK;
   }
   else
     return CURLM_BAD_EASY_HANDLE; /* twasn't found */
 }
 
-bool Curl_multi_canPipeline(const struct Curl_multi* multi)
+bool Curl_multi_pipeline_enabled(const struct Curl_multi *multi)
 {
-  return multi->pipelining_enabled;
+  return (multi && multi->pipelining_enabled) ? TRUE : FALSE;
 }
 
 void Curl_multi_handlePipeBreak(struct SessionHandle *data)
 {
   struct Curl_one_easy *one_easy = data->set.one_easy;
 
@@ -799,13 +795,14 @@
 {
   struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
   struct Curl_one_easy *easy;
   curl_socket_t sockbunch[MAX_SOCKSPEREASYHANDLE];
   int bitmap;
   unsigned int i;
-  unsigned int nfds = extra_nfds;
+  unsigned int nfds = 0;
+  unsigned int curlfds;
   struct pollfd *ufds = NULL;
 
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   /* Count up how many fds we have from the multi handle */
@@ -829,45 +826,53 @@
       }
     }
 
     easy = easy->next; /* check next handle */
   }
 
+  curlfds = nfds; /* number of internal file descriptors */
+  nfds += extra_nfds; /* add the externally provided ones */
+
   if(nfds) {
     ufds = malloc(nfds * sizeof(struct pollfd));
     if(!ufds)
       return CURLM_OUT_OF_MEMORY;
   }
   nfds = 0;
 
-  /* Add the curl handles to our pollfds first */
-  easy=multi->easy.next;
-  while(easy != &multi->easy) {
-    bitmap = multi_getsock(easy, sockbunch, MAX_SOCKSPEREASYHANDLE);
+  /* only do the second loop if we found descriptors in the first stage run
+     above */
 
-    for(i=0; i< MAX_SOCKSPEREASYHANDLE; i++) {
-      curl_socket_t s = CURL_SOCKET_BAD;
+  if(curlfds) {
+    /* Add the curl handles to our pollfds first */
+    easy=multi->easy.next;
+    while(easy != &multi->easy) {
+      bitmap = multi_getsock(easy, sockbunch, MAX_SOCKSPEREASYHANDLE);
 
-      if(bitmap & GETSOCK_READSOCK(i)) {
-        ufds[nfds].fd = sockbunch[i];
-        ufds[nfds].events = POLLIN;
-        ++nfds;
-        s = sockbunch[i];
-      }
-      if(bitmap & GETSOCK_WRITESOCK(i)) {
-        ufds[nfds].fd = sockbunch[i];
-        ufds[nfds].events = POLLOUT;
-        ++nfds;
-        s = sockbunch[i];
-      }
-      if(s == CURL_SOCKET_BAD) {
-        break;
+      for(i=0; i< MAX_SOCKSPEREASYHANDLE; i++) {
+        curl_socket_t s = CURL_SOCKET_BAD;
+
+        if(bitmap & GETSOCK_READSOCK(i)) {
+          ufds[nfds].fd = sockbunch[i];
+          ufds[nfds].events = POLLIN;
+          ++nfds;
+          s = sockbunch[i];
+        }
+        if(bitmap & GETSOCK_WRITESOCK(i)) {
+          ufds[nfds].fd = sockbunch[i];
+          ufds[nfds].events = POLLOUT;
+          ++nfds;
+          s = sockbunch[i];
+        }
+        if(s == CURL_SOCKET_BAD) {
+          break;
+        }
       }
-    }
 
-    easy = easy->next; /* check next handle */
+      easy = easy->next; /* check next handle */
+    }
   }
 
   /* Add external file descriptions from poll-like struct curl_waitfd */
   for(i = 0; i < extra_nfds; i++) {
     ufds[nfds].fd = extra_fds[i].fd;
     ufds[nfds].events = 0;
@@ -995,22 +1000,33 @@
         /* after init, go CONNECT */
         multistate(easy, CURLM_STATE_CONNECT);
         result = CURLM_CALL_MULTI_PERFORM;
       }
       break;
 
+    case CURLM_STATE_CONNECT_PEND:
+      /* We will stay here until there is a connection available. Then
+         we try again in the CURLM_STATE_CONNECT state. */
+      break;
+
     case CURLM_STATE_CONNECT:
-      /* Connect. We get a connection identifier filled in. */
+      /* Connect. We want to get a connection identifier filled in. */
       Curl_pgrsTime(data, TIMER_STARTSINGLE);
       easy->result = Curl_connect(data, &easy->easy_conn,
                                   &async, &protocol_connect);
+      if(CURLE_NO_CONNECTION_AVAILABLE == easy->result) {
+        /* There was no connection available. We will go to the pending
+           state and wait for an available connection. */
+        multistate(easy, CURLM_STATE_CONNECT_PEND);
+        easy->result = CURLE_OK;
+        break;
+      }
 
       if(CURLE_OK == easy->result) {
         /* Add this handle to the send or pend pipeline */
-        easy->result = addHandleToSendOrPendPipeline(data,
-                                                     easy->easy_conn);
+        easy->result = Curl_add_handle_to_pipeline(data, easy->easy_conn);
         if(CURLE_OK != easy->result)
           disconnect_conn = TRUE;
         else {
           if(async)
             /* We're now waiting for an asynchronous name lookup */
             multistate(easy, CURLM_STATE_WAITRESOLVE);
@@ -1199,14 +1215,15 @@
         multistate(easy, CURLM_STATE_DONE);
         easy->result = CURLE_OK;
         result = CURLM_CALL_MULTI_PERFORM;
       }
       else {
         /* Perform the protocol's DO action */
-        easy->result = Curl_do(&easy->easy_conn,
-                               &dophase_done);
+        easy->result = Curl_do(&easy->easy_conn, &dophase_done);
+
+        /* When Curl_do() returns failure, easy->easy_conn might be NULL! */
 
         if(CURLE_OK == easy->result) {
           if(!dophase_done) {
             /* some steps needed for wildcard matching */
             if(data->set.wildcardmatch) {
               struct WildcardData *wc = &data->wildcard;
@@ -1289,13 +1306,14 @@
             disconnect_conn = TRUE;
           }
         }
         else {
           /* failure detected */
           Curl_posttransfer(data);
-          Curl_done(&easy->easy_conn, easy->result, FALSE);
+          if(easy->easy_conn)
+            Curl_done(&easy->easy_conn, easy->result, FALSE);
           disconnect_conn = TRUE;
         }
       }
       break;
 
     case CURLM_STATE_DOING:
@@ -1343,15 +1361,15 @@
         disconnect_conn = TRUE;
       }
       break;
 
     case CURLM_STATE_DO_DONE:
       /* Move ourselves from the send to recv pipeline */
-      moveHandleFromSendToRecvPipeline(data, easy->easy_conn);
+      Curl_move_handle_from_send_to_recv_pipe(data, easy->easy_conn);
       /* Check if we can move pending requests to send pipe */
-      checkPendPipeline(easy->easy_conn);
+      Curl_multi_process_pending_handles(multi);
       multistate(easy, CURLM_STATE_WAITPERFORM);
       result = CURLM_CALL_MULTI_PERFORM;
       break;
 
     case CURLM_STATE_WAITPERFORM:
       /* Wait for our turn to PERFORM */
@@ -1477,21 +1495,20 @@
         followtype follow=FOLLOW_NONE;
 
         /* call this even if the readwrite function returned error */
         Curl_posttransfer(data);
 
         /* we're no longer receiving */
-        moveHandleFromRecvToDonePipeline(data,
-                                         easy->easy_conn);
+        Curl_removeHandleFromPipeline(data, easy->easy_conn->recv_pipe);
 
         /* expire the new receiving pipeline head */
         if(easy->easy_conn->recv_pipe->head)
           Curl_expire(easy->easy_conn->recv_pipe->head->ptr, 1);
 
         /* Check if we can move pending requests to send pipe */
-        checkPendPipeline(easy->easy_conn);
+        Curl_multi_process_pending_handles(multi);
 
         /* When we follow redirects or is set to retry the connection, we must
            to go back to the CONNECT state */
         if(data->req.newurl || retry) {
           if(!retry) {
             /* if the URL is a follow-location and not just a retried request
@@ -1540,20 +1557,17 @@
       break;
       }
 
     case CURLM_STATE_DONE:
 
       if(easy->easy_conn) {
-        /* Remove ourselves from the receive and done pipelines. Handle
-           should be on one of these lists, depending upon how we got here. */
+        /* Remove ourselves from the receive pipeline, if we are there. */
         Curl_removeHandleFromPipeline(data,
                                       easy->easy_conn->recv_pipe);
-        Curl_removeHandleFromPipeline(data,
-                                      easy->easy_conn->done_pipe);
         /* Check if we can move pending requests to send pipe */
-        checkPendPipeline(easy->easy_conn);
+        Curl_multi_process_pending_handles(multi);
 
         if(easy->easy_conn->bits.stream_was_rewound) {
           /* This request read past its response boundary so we quickly let
              the other requests consume those bytes since there is no
              guarantee that the socket will become active again */
           result = CURLM_CALL_MULTI_PERFORM;
@@ -1624,16 +1638,14 @@
           easy->easy_conn->writechannel_inuse = FALSE;
           easy->easy_conn->readchannel_inuse = FALSE;
           Curl_removeHandleFromPipeline(data,
                                         easy->easy_conn->send_pipe);
           Curl_removeHandleFromPipeline(data,
                                         easy->easy_conn->recv_pipe);
-          Curl_removeHandleFromPipeline(data,
-                                        easy->easy_conn->done_pipe);
           /* Check if we can move pending requests to send pipe */
-          checkPendPipeline(easy->easy_conn);
+          Curl_multi_process_pending_handles(multi);
 
           if(disconnect_conn) {
             /* disconnect properly */
             Curl_disconnect(easy->easy_conn, /* dead_connection */ FALSE);
 
             /* This is where we make sure that the easy_conn pointer is reset.
@@ -1770,17 +1782,19 @@
   if(GOOD_MULTI_HANDLE(multi)) {
     multi->type = 0; /* not good anymore */
 
     /* Close all the connections in the connection cache */
     close_all_connections(multi);
 
-    multi->closure_handle->dns.hostcache = multi->hostcache;
-    Curl_hostcache_clean(multi->closure_handle);
+    if(multi->closure_handle) {
+      multi->closure_handle->dns.hostcache = multi->hostcache;
+      Curl_hostcache_clean(multi->closure_handle);
 
-    Curl_close(multi->closure_handle);
-    multi->closure_handle = NULL;
+      Curl_close(multi->closure_handle);
+      multi->closure_handle = NULL;
+    }
 
     Curl_hash_destroy(multi->sockhash);
     multi->sockhash = NULL;
 
     Curl_conncache_destroy(multi->conn_cache);
     multi->conn_cache = NULL;
@@ -1809,12 +1823,16 @@
       easy = nexteasy;
     }
 
     Curl_hash_destroy(multi->hostcache);
     multi->hostcache = NULL;
 
+    /* Free the blacklists by setting them to NULL */
+    Curl_pipeline_set_site_blacklist(NULL, &multi->pipelining_site_bl);
+    Curl_pipeline_set_server_blacklist(NULL, &multi->pipelining_server_bl);
+
     free(multi);
 
     return CURLM_OK;
   }
   else
     return CURLM_BAD_HANDLE;
@@ -2226,12 +2244,35 @@
   case CURLMOPT_TIMERDATA:
     multi->timer_userp = va_arg(param, void *);
     break;
   case CURLMOPT_MAXCONNECTS:
     multi->maxconnects = va_arg(param, long);
     break;
+  case CURLMOPT_MAX_HOST_CONNECTIONS:
+    multi->max_host_connections = va_arg(param, long);
+    break;
+  case CURLMOPT_MAX_PIPELINE_LENGTH:
+    multi->max_pipeline_length = va_arg(param, long);
+    break;
+  case CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE:
+    multi->content_length_penalty_size = va_arg(param, long);
+    break;
+  case CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE:
+    multi->chunk_length_penalty_size = va_arg(param, long);
+    break;
+  case CURLMOPT_PIPELINING_SITE_BL:
+    res = Curl_pipeline_set_site_blacklist(va_arg(param, char **),
+                                           &multi->pipelining_site_bl);
+    break;
+  case CURLMOPT_PIPELINING_SERVER_BL:
+    res = Curl_pipeline_set_server_blacklist(va_arg(param, char **),
+                                             &multi->pipelining_server_bl);
+    break;
+  case CURLMOPT_MAX_TOTAL_CONNECTIONS:
+    multi->max_total_connections = va_arg(param, long);
+    break;
   default:
     res = CURLM_UNKNOWN_OPTION;
     break;
   }
   va_end(param);
   return res;
@@ -2350,137 +2391,18 @@
 
   multi->timer_lastcall = multi->timetree->key;
 
   return multi->timer_cb((CURLM*)multi, timeout_ms, multi->timer_userp);
 }
 
-static CURLcode addHandleToSendOrPendPipeline(struct SessionHandle *handle,
+void Curl_multi_set_easy_connection(struct SessionHandle *handle,
                                               struct connectdata *conn)
 {
-  size_t pipeLen = conn->send_pipe->size + conn->recv_pipe->size;
-  struct curl_llist_element *sendhead = conn->send_pipe->head;
-  struct curl_llist *pipeline;
-  CURLcode rc;
-
-  if(!Curl_isPipeliningEnabled(handle) ||
-     pipeLen == 0)
-    pipeline = conn->send_pipe;
-  else {
-    if(conn->server_supports_pipelining &&
-       pipeLen < MAX_PIPELINE_LENGTH)
-      pipeline = conn->send_pipe;
-    else
-      pipeline = conn->pend_pipe;
-  }
-
-  rc = Curl_addHandleToPipeline(handle, pipeline);
-
-  if(pipeline == conn->send_pipe && sendhead != conn->send_pipe->head) {
-    /* this is a new one as head, expire it */
-    conn->writechannel_inuse = FALSE; /* not in use yet */
-#ifdef DEBUGBUILD
-    infof(conn->data, "%p is at send pipe head!\n",
-          conn->send_pipe->head->ptr);
-#endif
-    Curl_expire(conn->send_pipe->head->ptr, 1);
-  }
-
-  return rc;
+  handle->set.one_easy->easy_conn = conn;
 }
 
-static int checkPendPipeline(struct connectdata *conn)
-{
-  int result = 0;
-  struct curl_llist_element *sendhead = conn->send_pipe->head;
-
-  size_t pipeLen = conn->send_pipe->size + conn->recv_pipe->size;
-  if(conn->server_supports_pipelining || pipeLen == 0) {
-    struct curl_llist_element *curr = conn->pend_pipe->head;
-    const size_t maxPipeLen =
-      conn->server_supports_pipelining ? MAX_PIPELINE_LENGTH : 1;
-
-    while(pipeLen < maxPipeLen && curr) {
-      Curl_llist_move(conn->pend_pipe, curr,
-                      conn->send_pipe, conn->send_pipe->tail);
-      Curl_pgrsTime(curr->ptr, TIMER_PRETRANSFER);
-      ++result; /* count how many handles we moved */
-      curr = conn->pend_pipe->head;
-      ++pipeLen;
-    }
-  }
-
-  if(result) {
-    conn->now = Curl_tvnow();
-    /* something moved, check for a new send pipeline leader */
-    if(sendhead != conn->send_pipe->head) {
-      /* this is a new one as head, expire it */
-      conn->writechannel_inuse = FALSE; /* not in use yet */
-#ifdef DEBUGBUILD
-      infof(conn->data, "%p is at send pipe head!\n",
-            conn->send_pipe->head->ptr);
-#endif
-      Curl_expire(conn->send_pipe->head->ptr, 1);
-    }
-  }
-
-  return result;
-}
-
-/* Move this transfer from the sending list to the receiving list.
-
-   Pay special attention to the new sending list "leader" as it needs to get
-   checked to update what sockets it acts on.
-
-*/
-static void moveHandleFromSendToRecvPipeline(struct SessionHandle *handle,
-                                             struct connectdata *conn)
-{
-  struct curl_llist_element *curr;
-
-  curr = conn->send_pipe->head;
-  while(curr) {
-    if(curr->ptr == handle) {
-      Curl_llist_move(conn->send_pipe, curr,
-                      conn->recv_pipe, conn->recv_pipe->tail);
-
-      if(conn->send_pipe->head) {
-        /* Since there's a new easy handle at the start of the send pipeline,
-           set its timeout value to 1ms to make it trigger instantly */
-        conn->writechannel_inuse = FALSE; /* not used now */
-#ifdef DEBUGBUILD
-        infof(conn->data, "%p is at send pipe head B!\n",
-              conn->send_pipe->head->ptr);
-#endif
-        Curl_expire(conn->send_pipe->head->ptr, 1);
-      }
-
-      /* The receiver's list is not really interesting here since either this
-         handle is now first in the list and we'll deal with it soon, or
-         another handle is already first and thus is already taken care of */
-
-      break; /* we're done! */
-    }
-    curr = curr->next;
-  }
-}
-
-static void moveHandleFromRecvToDonePipeline(struct SessionHandle *handle,
-                                            struct connectdata *conn)
-{
-  struct curl_llist_element *curr;
-
-  curr = conn->recv_pipe->head;
-  while(curr) {
-    if(curr->ptr == handle) {
-      Curl_llist_move(conn->recv_pipe, curr,
-                      conn->done_pipe, conn->done_pipe->tail);
-      break;
-    }
-    curr = curr->next;
-  }
-}
 static bool isHandleAtHead(struct SessionHandle *handle,
                            struct curl_llist *pipeline)
 {
   struct curl_llist_element *curr = pipeline->head;
   if(curr)
     return (curr->ptr == handle) ? TRUE : FALSE;
@@ -2654,12 +2576,62 @@
 
   there->socketp = hashp;
 
   return CURLM_OK;
 }
 
+size_t Curl_multi_max_host_connections(struct Curl_multi *multi)
+{
+  return multi ? multi->max_host_connections : 0;
+}
+
+size_t Curl_multi_max_total_connections(struct Curl_multi *multi)
+{
+  return multi ? multi->max_total_connections : 0;
+}
+
+size_t Curl_multi_max_pipeline_length(struct Curl_multi *multi)
+{
+  return multi ? multi->max_pipeline_length : 0;
+}
+
+curl_off_t Curl_multi_content_length_penalty_size(struct Curl_multi *multi)
+{
+  return multi ? multi->content_length_penalty_size : 0;
+}
+
+curl_off_t Curl_multi_chunk_length_penalty_size(struct Curl_multi *multi)
+{
+  return multi ? multi->chunk_length_penalty_size : 0;
+}
+
+struct curl_llist *Curl_multi_pipelining_site_bl(struct Curl_multi *multi)
+{
+  return multi->pipelining_site_bl;
+}
+
+struct curl_llist *Curl_multi_pipelining_server_bl(struct Curl_multi *multi)
+{
+  return multi->pipelining_server_bl;
+}
+
+void Curl_multi_process_pending_handles(struct Curl_multi *multi)
+{
+  struct Curl_one_easy *easy;
+
+  easy=multi->easy.next;
+  while(easy != &multi->easy) {
+    if(easy->state == CURLM_STATE_CONNECT_PEND) {
+      multistate(easy, CURLM_STATE_CONNECT);
+      /* Make sure that the handle will be processed soonish. */
+      Curl_expire(easy->easy_handle, 1);
+    }
+    easy = easy->next; /* operate on next handle */
+  }
+}
+
 #ifdef DEBUGBUILD
 void Curl_multi_dump(const struct Curl_multi *multi_handle)
 {
   struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
   struct Curl_one_easy *easy;
   int i;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/multihandle.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/multihandle.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/multihandle.h	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/multihandle.h	2013-04-12 02:46:54.000000000 +0800
@@ -28,31 +28,32 @@
 };
 
 /* NOTE: if you add a state here, add the name to the statename[] array as
    well!
 */
 typedef enum {
-  CURLM_STATE_INIT,        /* 0 - start in this state */
-  CURLM_STATE_CONNECT,     /* 1 - resolve/connect has been sent off */
-  CURLM_STATE_WAITRESOLVE, /* 2 - awaiting the resolve to finalize */
-  CURLM_STATE_WAITCONNECT, /* 3 - awaiting the connect to finalize */
-  CURLM_STATE_WAITPROXYCONNECT, /* 4 - awaiting proxy CONNECT to finalize */
-  CURLM_STATE_PROTOCONNECT, /* 5 - completing the protocol-specific connect
-                               phase */
-  CURLM_STATE_WAITDO,      /* 6 - wait for our turn to send the request */
-  CURLM_STATE_DO,          /* 7 - start send off the request (part 1) */
-  CURLM_STATE_DOING,       /* 8 - sending off the request (part 1) */
-  CURLM_STATE_DO_MORE,     /* 9 - send off the request (part 2) */
-  CURLM_STATE_DO_DONE,     /* 10 - done sending off request */
-  CURLM_STATE_WAITPERFORM, /* 11 - wait for our turn to read the response */
-  CURLM_STATE_PERFORM,     /* 12 - transfer data */
-  CURLM_STATE_TOOFAST,     /* 13 - wait because limit-rate exceeded */
-  CURLM_STATE_DONE,        /* 14 - post data transfer operation */
-  CURLM_STATE_COMPLETED,   /* 15 - operation complete */
-  CURLM_STATE_MSGSENT,     /* 16 - the operation complete message is sent */
-  CURLM_STATE_LAST         /* 17 - not a true state, never use this */
+  CURLM_STATE_INIT,         /* 0 - start in this state */
+  CURLM_STATE_CONNECT_PEND, /* 1 - no connections, waiting for one */
+  CURLM_STATE_CONNECT,      /* 2 - resolve/connect has been sent off */
+  CURLM_STATE_WAITRESOLVE,  /* 3 - awaiting the resolve to finalize */
+  CURLM_STATE_WAITCONNECT,  /* 4 - awaiting the connect to finalize */
+  CURLM_STATE_WAITPROXYCONNECT, /* 5 - awaiting proxy CONNECT to finalize */
+  CURLM_STATE_PROTOCONNECT, /* 6 - completing the protocol-specific connect
+                                   phase */
+  CURLM_STATE_WAITDO,       /* 7 - wait for our turn to send the request */
+  CURLM_STATE_DO,           /* 8 - start send off the request (part 1) */
+  CURLM_STATE_DOING,        /* 9 - sending off the request (part 1) */
+  CURLM_STATE_DO_MORE,      /* 10 - send off the request (part 2) */
+  CURLM_STATE_DO_DONE,      /* 11 - done sending off request */
+  CURLM_STATE_WAITPERFORM,  /* 12 - wait for our turn to read the response */
+  CURLM_STATE_PERFORM,      /* 13 - transfer data */
+  CURLM_STATE_TOOFAST,      /* 14 - wait because limit-rate exceeded */
+  CURLM_STATE_DONE,         /* 15 - post data transfer operation */
+  CURLM_STATE_COMPLETED,    /* 16 - operation complete */
+  CURLM_STATE_MSGSENT,      /* 17 - the operation complete message is sent */
+  CURLM_STATE_LAST          /* 18 - not a true state, never use this */
 } CURLMstate;
 
 /* we support N sockets per easy handle. Set the corresponding bit to what
    action we should wait for */
 #define MAX_SOCKSPEREASYHANDLE 5
 #define GETSOCK_READABLE (0x00ff)
@@ -120,12 +121,36 @@
      curl_multi_cleanup() */
   struct SessionHandle *closure_handle;
 
   long maxconnects; /* if >0, a fixed limit of the maximum number of entries
                        we're allowed to grow the connection cache to */
 
+  long max_host_connections; /* if >0, a fixed limit of the maximum number
+                                of connections per host */
+
+  long max_total_connections; /* if >0, a fixed limit of the maximum number
+                                 of connections in total */
+
+  long max_pipeline_length; /* if >0, maximum number of requests in a
+                               pipeline */
+
+  long content_length_penalty_size; /* a connection with a
+                                       content-length bigger than
+                                       this is not considered
+                                       for pipelining */
+
+  long chunk_length_penalty_size; /* a connection with a chunk length
+                                     bigger than this is not
+                                     considered for pipelining */
+
+  struct curl_llist *pipelining_site_bl; /* List of sites that are blacklisted
+                                            from pipelining */
+
+  struct curl_llist *pipelining_server_bl; /* List of server types that are
+                                              blacklisted from pipelining */
+
   /* timer callback and user data pointer for the *socket() API */
   curl_multi_timer_callback timer_cb;
   void *timer_userp;
   struct timeval timer_lastcall; /* the fixed time for the timeout for the
                                     previous callback */
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/multiif.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/multiif.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/multiif.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/multiif.h	2013-04-12 02:46:54.000000000 +0800
@@ -24,13 +24,13 @@
 
 /*
  * Prototypes for library-wide functions provided by multi.c
  */
 void Curl_expire(struct SessionHandle *data, long milli);
 
-bool Curl_multi_canPipeline(const struct Curl_multi* multi);
+bool Curl_multi_pipeline_enabled(const struct Curl_multi* multi);
 void Curl_multi_handlePipeBreak(struct SessionHandle *data);
 
 /* the write bits start at bit 16 for the *getsock() bitmap */
 #define GETSOCK_WRITEBITSTART 16
 
 #define GETSOCK_BLANK 0 /* no bits set */
@@ -47,8 +47,34 @@
   * allow easier tracking of the internal handle's state and what sockets
   * they use. Only for research and development DEBUGBUILD enabled builds.
   */
 void Curl_multi_dump(const struct Curl_multi *multi_handle);
 #endif
 
-#endif /* HEADER_CURL_MULTIIF_H */
+/* Update the current connection of a One_Easy handle */
+void Curl_multi_set_easy_connection(struct SessionHandle *handle,
+                                    struct connectdata *conn);
+
+void Curl_multi_process_pending_handles(struct Curl_multi *multi);
+
+/* Return the value of the CURLMOPT_MAX_HOST_CONNECTIONS option */
+size_t Curl_multi_max_host_connections(struct Curl_multi *multi);
+
+/* Return the value of the CURLMOPT_MAX_PIPELINE_LENGTH option */
+size_t Curl_multi_max_pipeline_length(struct Curl_multi *multi);
+
+/* Return the value of the CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE option */
+curl_off_t Curl_multi_content_length_penalty_size(struct Curl_multi *multi);
 
+/* Return the value of the CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE option */
+curl_off_t Curl_multi_chunk_length_penalty_size(struct Curl_multi *multi);
+
+/* Return the value of the CURLMOPT_PIPELINING_SITE_BL option */
+struct curl_llist *Curl_multi_pipelining_site_bl(struct Curl_multi *multi);
+
+/* Return the value of the CURLMOPT_PIPELINING_SERVER_BL option */
+struct curl_llist *Curl_multi_pipelining_server_bl(struct Curl_multi *multi);
+
+/* Return the value of the CURLMOPT_MAX_TOTAL_CONNECTIONS option */
+size_t Curl_multi_max_total_connections(struct Curl_multi *multi);
+
+#endif /* HEADER_CURL_MULTIIF_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/nss.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/nss.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/nss.c	2013-01-17 06:22:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/nss.c	2013-04-12 02:46:54.000000000 +0800
@@ -1234,18 +1234,12 @@
 
   model = PR_NewTCPSocket();
   if(!model)
     goto error;
   model = SSL_ImportFD(NULL, model);
 
-  /* make the socket nonblocking */
-  sock_opt.option = PR_SockOpt_Nonblocking;
-  sock_opt.value.non_blocking = PR_TRUE;
-  if(PR_SetSocketOption(model, &sock_opt) != PR_SUCCESS)
-    goto error;
-
   if(SSL_OptionSet(model, SSL_SECURITY, PR_TRUE) != SECSuccess)
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_SERVER, PR_FALSE) != SECSuccess)
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_CLIENT, PR_TRUE) != SECSuccess)
     goto error;
@@ -1412,12 +1406,18 @@
       curlerr = CURLE_PEER_FAILED_VERIFICATION;
     else if(conn->data->set.ssl.certverifyresult!=0)
       curlerr = CURLE_SSL_CACERT;
     goto error;
   }
 
+  /* switch the SSL socket into non-blocking mode */
+  sock_opt.option = PR_SockOpt_Nonblocking;
+  sock_opt.value.non_blocking = PR_TRUE;
+  if(PR_SetSocketOption(connssl->handle, &sock_opt) != PR_SUCCESS)
+    goto error;
+
   connssl->state = ssl_connection_complete;
   conn->recv[sockindex] = nss_recv;
   conn->send[sockindex] = nss_send;
 
   display_conn_info(conn, connssl->handle);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pingpong.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pingpong.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pingpong.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pingpong.c	2013-03-30 04:06:29.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -73,84 +73,58 @@
     timeout_ms = CURLMIN(timeout_ms, timeout2_ms);
   }
 
   return timeout_ms;
 }
 
-
 /*
- * Curl_pp_multi_statemach()
- *
- * called repeatedly until done when the multi interface is used.
+ * Curl_pp_statemach()
  */
-CURLcode Curl_pp_multi_statemach(struct pingpong *pp)
-{
-  struct connectdata *conn = pp->conn;
-  curl_socket_t sock = conn->sock[FIRSTSOCKET];
-  int rc;
-  struct SessionHandle *data=conn->data;
-  CURLcode result = CURLE_OK;
-  long timeout_ms = Curl_pp_state_timeout(pp);
-
-  if(timeout_ms <= 0) {
-    failf(data, "server response timeout");
-    return CURLE_OPERATION_TIMEDOUT;
-  }
-
-  rc = Curl_socket_ready(pp->sendleft?CURL_SOCKET_BAD:sock, /* reading */
-                         pp->sendleft?sock:CURL_SOCKET_BAD, /* writing */
-                         0);
-
-  if(rc == -1) {
-    failf(data, "select/poll error");
-    return CURLE_OUT_OF_MEMORY;
-  }
-  else if(rc != 0)
-    result = pp->statemach_act(conn);
-
-  /* if rc == 0, then select() timed out */
-
-  return result;
-}
-
-/*
- * Curl_pp_easy_statemach()
- *
- * called repeatedly until done when the easy interface is used.
- */
-CURLcode Curl_pp_easy_statemach(struct pingpong *pp)
+CURLcode Curl_pp_statemach(struct pingpong *pp, bool block)
 {
   struct connectdata *conn = pp->conn;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   int rc;
   long interval_ms;
   long timeout_ms = Curl_pp_state_timeout(pp);
   struct SessionHandle *data=conn->data;
-  CURLcode result;
+  CURLcode result = CURLE_OK;
 
   if(timeout_ms <=0 ) {
     failf(data, "server response timeout");
     return CURLE_OPERATION_TIMEDOUT; /* already too little time */
   }
 
-  interval_ms = 1000;  /* use 1 second timeout intervals */
-  if(timeout_ms < interval_ms)
-    interval_ms = timeout_ms;
-
-  rc = Curl_socket_ready(pp->sendleft?CURL_SOCKET_BAD:sock, /* reading */
-                         pp->sendleft?sock:CURL_SOCKET_BAD, /* writing */
-                         interval_ms);
+  if(block) {
+    interval_ms = 1000;  /* use 1 second timeout intervals */
+    if(timeout_ms < interval_ms)
+      interval_ms = timeout_ms;
+  }
+  else
+    interval_ms = 0; /* immediate */
 
-  if(Curl_pgrsUpdate(conn))
-    result = CURLE_ABORTED_BY_CALLBACK;
+  if(Curl_pp_moredata(pp))
+    /* We are receiving and there is data in the cache so just read it */
+    rc = 1;
   else
-    result = Curl_speedcheck(data, Curl_tvnow());
+    rc = Curl_socket_ready(pp->sendleft?CURL_SOCKET_BAD:sock, /* reading */
+                           pp->sendleft?sock:CURL_SOCKET_BAD, /* writing */
+                           interval_ms);
+
+  if(block) {
+    /* if we didn't wait, we don't have to spend time on this now */
+    if(Curl_pgrsUpdate(conn))
+      result = CURLE_ABORTED_BY_CALLBACK;
+    else
+      result = Curl_speedcheck(data, Curl_tvnow());
 
-  if(result)
-    ;
-  else if(rc == -1) {
+    if(result)
+      return result;
+  }
+
+  if(rc == -1) {
     failf(data, "select/poll error");
     result = CURLE_OUT_OF_MEMORY;
   }
   else if(rc)
     result = pp->statemach_act(conn);
 
@@ -392,13 +366,13 @@
            */
           result = Curl_client_write(conn, CLIENTWRITE_HEADER,
                                      pp->linestart_resp, perline);
           if(result)
             return result;
 
-          if(pp->endofresp(pp, code)) {
+          if(pp->endofresp(conn, pp->linestart_resp, perline, code)) {
             /* This is the end of the last line, copy the last line to the
                start of the buffer and zero terminate, for old times sake (and
                krb4)! */
             char *meow;
             int n;
             for(meow=pp->linestart_resp, n=0; meow<ptr; meow++, n++)
@@ -530,9 +504,13 @@
     free(pp->cache);
     pp->cache = NULL;
   }
   return CURLE_OK;
 }
 
-
+bool Curl_pp_moredata(struct pingpong *pp)
+{
+  return (!pp->sendleft && pp->cache && pp->nread_resp < pp->cache_size) ?
+         TRUE : FALSE;
+}
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pingpong.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pingpong.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pingpong.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pingpong.h	2013-03-05 18:02:20.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -29,12 +29,19 @@
 #define USE_PINGPONG
 #endif
 
 /* forward-declaration, this is defined in urldata.h */
 struct connectdata;
 
+typedef enum {
+  FTPTRANSFER_BODY, /* yes do transfer a body */
+  FTPTRANSFER_INFO, /* do still go through to get info/headers */
+  FTPTRANSFER_NONE, /* don't get anything and don't get info */
+  FTPTRANSFER_LAST  /* end of list marker, never used */
+} curl_pp_transfer;
+
 /*
  * 'pingpong' is the generic struct used for protocols doing server<->client
  * conversations in a back-and-forth style such as FTP, IMAP, POP3, SMTP etc.
  *
  * It holds response cache and non-blocking sending data.
  */
@@ -61,29 +68,23 @@
 
   /* Function pointers the protocols MUST implement and provide for the
      pingpong layer to function */
 
   CURLcode (*statemach_act)(struct connectdata *conn);
 
-  int (*endofresp)(struct pingpong *pp, int *code);
+  bool (*endofresp)(struct connectdata *conn, char *ptr, size_t len,
+                    int *code);
 };
 
 /*
- * Curl_pp_multi_statemach()
- *
- * called repeatedly until done when the multi interface is used.
- */
-CURLcode Curl_pp_multi_statemach(struct pingpong *pp);
-
-/*
- * Curl_pp_easy_statemach()
+ * Curl_pp_statemach()
  *
- * called repeatedly until done when the easy interface is used.
+ * called repeatedly until done. Set 'wait' to make it wait a while on the
+ * socket if there's no traffic.
  */
-CURLcode Curl_pp_easy_statemach(struct pingpong *pp);
-
+CURLcode Curl_pp_statemach(struct pingpong *pp, bool block);
 
 /* initialize stuff to prepare for reading a fresh new response */
 void Curl_pp_init(struct pingpong *pp);
 
 /* Returns timeout in ms. 0 or negative number means the timeout has already
    triggered */
@@ -133,7 +134,17 @@
 /* call this when a pingpong connection is disconnected */
 CURLcode Curl_pp_disconnect(struct pingpong *pp);
 
 int Curl_pp_getsock(struct pingpong *pp, curl_socket_t *socks,
                     int numsocks);
 
+
+/***********************************************************************
+ *
+ * Curl_pp_moredata()
+ *
+ * Returns whether there are still more data in the cache and so a call
+ * to Curl_pp_readresp() will not block.
+ */
+bool Curl_pp_moredata(struct pingpong *pp);
+
 #endif /* HEADER_CURL_PINGPONG_H */
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib: pipeline.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib: pipeline.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/polarssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/polarssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/polarssl.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/polarssl.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,14 +2,14 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2010, 2011, Hoi-Ho Chan, <hoiho.chan@gmail.com>
- * Copyright (C) 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2010 - 2011, Hoi-Ho Chan, <hoiho.chan@gmail.com>
+ * Copyright (C) 2012 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -30,19 +30,27 @@
 #include "curl_setup.h"
 
 #ifdef USE_POLARSSL
 
 #include <polarssl/net.h>
 #include <polarssl/ssl.h>
-#include <polarssl/havege.h>
 #include <polarssl/certs.h>
 #include <polarssl/x509.h>
 #include <polarssl/version.h>
 
+#if POLARSSL_VERSION_NUMBER >= 0x01000000
+#include <polarssl/error.h>
+#endif /* POLARSSL_VERSION_NUMBER >= 0x01000000 */
+
+#if POLARSSL_VERSION_NUMBER>0x01010000
 #include <polarssl/entropy.h>
 #include <polarssl/ctr_drbg.h>
+#else
+#include <polarssl/havege.h>
+#endif /* POLARSSL_VERSION_NUMBER>0x01010000 */
+
 
 #if POLARSSL_VERSION_NUMBER<0x01000000
 /*
   Earlier versions of polarssl had no WANT_READ or WANT_WRITE, only TRY_AGAIN
 */
 #define POLARSSL_ERR_NET_WANT_READ  POLARSSL_ERR_NET_TRY_AGAIN
@@ -55,28 +63,58 @@
 #include "polarssl.h"
 #include "sslgen.h"
 #include "parsedate.h"
 #include "connect.h" /* for the connect timeout */
 #include "select.h"
 #include "rawstr.h"
+#include "polarssl_threadlock.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
-/* version dependent differences */
-#if POLARSSL_VERSION_NUMBER < 0x01010000
-/* the old way */
-#define HAVEGE_RANDOM havege_rand
-#else
-/* from 1.1.0 */
-#define HAVEGE_RANDOM havege_random
+/* apply threading? */
+#if defined(USE_THREADS_POSIX) || defined(USE_THREADS_WIN32)
+#define THREADING_SUPPORT
 #endif
 
+#if defined(THREADING_SUPPORT) && POLARSSL_VERSION_NUMBER>0x01010000
+static entropy_context entropy;
+
+static int  entropy_init_initialized  = 0;
+
+/* start of entropy_init_mutex() */
+static void entropy_init_mutex(entropy_context *ctx)
+{
+  /* lock 0 = entropy_init_mutex() */
+  polarsslthreadlock_lock_function(0);
+  if(entropy_init_initialized == 0) {
+    entropy_init(ctx);
+    entropy_init_initialized = 1;
+  }
+  polarsslthreadlock_unlock_function(0);
+}
+/* end of entropy_init_mutex() */
+
+/* start of entropy_func_mutex() */
+static int entropy_func_mutex(void *data, unsigned char *output, size_t len)
+{
+    int ret;
+    /* lock 1 = entropy_func_mutex() */
+    polarsslthreadlock_lock_function(1);
+    ret = entropy_func(data, output, len);
+    polarsslthreadlock_unlock_function(1);
+
+    return ret;
+}
+/* end of entropy_func_mutex() */
+
+#endif /* THREADING_SUPPORT && POLARSSL_VERSION_NUMBER>0x01010000 */
+
 /* Define this to enable lots of debugging for PolarSSL */
 #undef POLARSSL_DEBUG
 
 #ifdef POLARSSL_DEBUG
 static void polarssl_debug(void *context, int level, char *line)
 {
@@ -110,32 +148,65 @@
 #else
   struct in_addr addr;
 #endif
   void *old_session = NULL;
   size_t old_session_size = 0;
 
+  char errorbuf[128];
+  memset(errorbuf, 0, sizeof(errorbuf));
+
+
   /* PolarSSL only supports SSLv3 and TLSv1 */
   if(data->set.ssl.version == CURL_SSLVERSION_SSLv2) {
     failf(data, "PolarSSL does not support SSLv2");
     return CURLE_SSL_CONNECT_ERROR;
   }
   else if(data->set.ssl.version == CURL_SSLVERSION_SSLv3)
     sni = FALSE; /* SSLv3 has no SNI */
 
+#if POLARSSL_VERSION_NUMBER<0x01010000
   havege_init(&connssl->hs);
+#else
+#ifdef THREADING_SUPPORT
+  entropy_init_mutex(&entropy);
+
+  if((ret = ctr_drbg_init(&connssl->ctr_drbg, entropy_func_mutex, &entropy,
+                               connssl->ssn.id, connssl->ssn.length)) != 0) {
+#ifdef POLARSSL_ERROR_C
+     error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+     failf(data, "Failed - PolarSSL: ctr_drbg_init returned (-0x%04X) %s\n",
+                                                            -ret, errorbuf);
+  }
+#else
+  entropy_init(&connssl->entropy);
+
+  if((ret = ctr_drbg_init(&connssl->ctr_drbg, entropy_func, &connssl->entropy,
+                                connssl->ssn.id, connssl->ssn.length)) != 0) {
+#ifdef POLARSSL_ERROR_C
+     error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+     failf(data, "Failed - PolarSSL: ctr_drbg_init returned (-0x%04X) %s\n",
+                                                            -ret, errorbuf);
+  }
+#endif /* THREADING_SUPPORT */
+#endif /* POLARSSL_VERSION_NUMBER<0x01010000 */
 
   /* Load the trusted CA */
   memset(&connssl->cacert, 0, sizeof(x509_cert));
 
   if(data->set.str[STRING_SSL_CAFILE]) {
     ret = x509parse_crtfile(&connssl->cacert,
                             data->set.str[STRING_SSL_CAFILE]);
 
     if(ret<0) {
-      failf(data, "Error reading ca cert file %s: -0x%04X",
-            data->set.str[STRING_SSL_CAFILE], ret);
+#ifdef POLARSSL_ERROR_C
+      error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+      failf(data, "Error reading ca cert file %s - PolarSSL: (-0x%04X) %s",
+            data->set.str[STRING_SSL_CAFILE], -ret, errorbuf);
 
       if(data->set.ssl.verifypeer)
         return CURLE_SSL_CACERT_BADFILE;
     }
   }
 
@@ -144,41 +215,53 @@
 
   if(data->set.str[STRING_CERT]) {
     ret = x509parse_crtfile(&connssl->clicert,
                             data->set.str[STRING_CERT]);
 
     if(ret) {
-      failf(data, "Error reading client cert file %s: -0x%04X",
-            data->set.str[STRING_CERT], -ret);
+#ifdef POLARSSL_ERROR_C
+      error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+      failf(data, "Error reading client cert file %s - PolarSSL: (-0x%04X) %s",
+            data->set.str[STRING_CERT], -ret, errorbuf);
+
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load the client private key */
   if(data->set.str[STRING_KEY]) {
     ret = x509parse_keyfile(&connssl->rsa,
                             data->set.str[STRING_KEY],
                             data->set.str[STRING_KEY_PASSWD]);
 
     if(ret) {
-      failf(data, "Error reading private key %s: -0x%04X",
-            data->set.str[STRING_KEY], -ret);
+#ifdef POLARSSL_ERROR_C
+      error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+      failf(data, "Error reading private key %s - PolarSSL: (-0x%04X) %s",
+            data->set.str[STRING_KEY], -ret, errorbuf);
+
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load the CRL */
   memset(&connssl->crl, 0, sizeof(x509_crl));
 
   if(data->set.str[STRING_SSL_CRLFILE]) {
     ret = x509parse_crlfile(&connssl->crl,
                             data->set.str[STRING_SSL_CRLFILE]);
 
     if(ret) {
-      failf(data, "Error reading CRL file %s: -0x%04X",
-            data->set.str[STRING_SSL_CRLFILE], -ret);
+#ifdef POLARSSL_ERROR_C
+      error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+      failf(data, "Error reading CRL file %s - PolarSSL: (-0x%04X) %s",
+            data->set.str[STRING_SSL_CRLFILE], -ret, errorbuf);
+
       return CURLE_SSL_CRL_BADFILE;
     }
   }
 
   infof(data, "PolarSSL: Connecting to %s:%d\n",
         conn->host.name, conn->remote_port);
@@ -188,14 +271,19 @@
     return CURLE_SSL_CONNECT_ERROR;
   }
 
   ssl_set_endpoint(&connssl->ssl, SSL_IS_CLIENT);
   ssl_set_authmode(&connssl->ssl, SSL_VERIFY_OPTIONAL);
 
-  ssl_set_rng(&connssl->ssl, HAVEGE_RANDOM,
+#if POLARSSL_VERSION_NUMBER<0x01010000
+  ssl_set_rng(&connssl->ssl, havege_rand,
               &connssl->hs);
+#else
+  ssl_set_rng(&connssl->ssl, ctr_drbg_random,
+              &connssl->ctr_drbg);
+#endif /* POLARSSL_VERSION_NUMBER<0x01010000 */
   ssl_set_bio(&connssl->ssl,
               net_recv, &conn->sock[sockindex],
               net_send, &conn->sock[sockindex]);
 
 
 #if POLARSSL_VERSION_NUMBER<0x01000000
@@ -250,22 +338,30 @@
 {
   int ret;
   struct SessionHandle *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
   char buffer[1024];
 
+  char errorbuf[128];
+  memset(errorbuf, 0, sizeof(errorbuf));
+
   conn->recv[sockindex] = polarssl_recv;
   conn->send[sockindex] = polarssl_send;
 
   for(;;) {
     if(!(ret = ssl_handshake(&connssl->ssl)))
       break;
     else if(ret != POLARSSL_ERR_NET_WANT_READ &&
             ret != POLARSSL_ERR_NET_WANT_WRITE) {
-      failf(data, "ssl_handshake returned -0x%04X", -ret);
-      return CURLE_SSL_CONNECT_ERROR;
+#ifdef POLARSSL_ERROR_C
+     error_strerror(ret, errorbuf, sizeof(errorbuf));
+#endif /* POLARSSL_ERROR_C */
+     failf(data, "ssl_handshake returned - PolarSSL: (-0x%04X) %s",
+                                                    -ret, errorbuf);
+
+     return CURLE_SSL_CONNECT_ERROR;
     }
     else {
       if(ret == POLARSSL_ERR_NET_WANT_READ) {
         connssl->connecting_state = ssl_connect_2_reading;
         return CURLE_OK;
       }
@@ -590,7 +686,21 @@
 
   DEBUGASSERT(done);
 
   return CURLE_OK;
 }
 
-#endif
+/*
+ * return 0 error initializing SSL
+ * return 1 SSL initialized successfully
+ */
+int polarssl_init(void)
+{
+  return polarsslthreadlock_thread_setup();
+}
+
+void polarssl_cleanup(void)
+{
+  (void)polarsslthreadlock_thread_cleanup();
+}
+
+#endif /* USE_POLARSSL */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/polarssl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/polarssl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/polarssl.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/polarssl.h	2013-02-16 06:42:25.000000000 +0800
@@ -22,12 +22,17 @@
  *
  ***************************************************************************/
 #include "curl_setup.h"
 
 #ifdef USE_POLARSSL
 
+/* Called on first use PolarSSL, setup threading if supported */
+int  polarssl_init(void);
+void polarssl_cleanup(void);
+
+
 CURLcode Curl_polarssl_connect(struct connectdata *conn, int sockindex);
 
 CURLcode Curl_polarssl_connect_nonblocking(struct connectdata *conn,
                                            int sockindex,
                                            bool *done);
 
@@ -40,14 +45,14 @@
 
 void Curl_polarssl_session_free(void *ptr);
 size_t Curl_polarssl_version(char *buffer, size_t size);
 int Curl_polarssl_shutdown(struct connectdata *conn, int sockindex);
 
 /* API setup for PolarSSL */
-#define curlssl_init() (1)
-#define curlssl_cleanup() Curl_nop_stmt
+#define curlssl_init() polarssl_init()
+#define curlssl_cleanup() polarssl_cleanup()
 #define curlssl_connect Curl_polarssl_connect
 #define curlssl_connect_nonblocking Curl_polarssl_connect_nonblocking
 #define curlssl_session_free(x)  Curl_polarssl_session_free(x)
 #define curlssl_close_all Curl_polarssl_close_all
 #define curlssl_close Curl_polarssl_close
 #define curlssl_shutdown(x,y) 0
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib: polarssl_threadlock.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib: polarssl_threadlock.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pop3.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pop3.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pop3.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pop3.c	2013-04-12 02:46:54.000000000 +0800
@@ -24,12 +24,13 @@
  * RFC2384 POP URL Scheme
  * RFC2449 POP3 Extension Mechanism
  * RFC2595 Using TLS with IMAP, POP3 and ACAP
  * RFC2831 DIGEST-MD5 authentication
  * RFC4422 Simple Authentication and Security Layer (SASL)
  * RFC4616 PLAIN authentication
+ * RFC5034 POP3 SASL Authentication Mechanism
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #ifndef CURL_DISABLE_POP3
@@ -99,13 +100,12 @@
 static CURLcode pop3_disconnect(struct connectdata *conn, bool dead);
 static CURLcode pop3_multi_statemach(struct connectdata *conn, bool *done);
 static int pop3_getsock(struct connectdata *conn, curl_socket_t *socks,
                         int numsocks);
 static CURLcode pop3_doing(struct connectdata *conn, bool *dophase_done);
 static CURLcode pop3_setup_connection(struct connectdata *conn);
-static CURLcode pop3_state_upgrade_tls(struct connectdata *conn);
 
 /*
  * POP3 protocol handler.
  */
 
 const struct Curl_handler Curl_handler_pop3 = {
@@ -204,30 +204,37 @@
   CURLPROTO_HTTP,                       /* protocol */
   PROTOPT_NONE                          /* flags */
 };
 #endif
 #endif
 
-/* Function that checks for an ending pop3 status code at the start of the
+#ifdef USE_SSL
+static void pop3_to_pop3s(struct connectdata *conn)
+{
+  conn->handler = &Curl_handler_pop3s;
+}
+#else
+#define pop3_to_pop3s(x) Curl_nop_stmt
+#endif
+
+/* Function that checks for an ending POP3 status code at the start of the
    given string, but also detects the APOP timestamp from the server greeting
-   as well as the supported authentication types and allowed SASL mechanisms
-   from the CAPA response. */
-static int pop3_endofresp(struct pingpong *pp, int *resp)
-{
-  char *line = pp->linestart_resp;
-  size_t len = strlen(pp->linestart_resp);
-  struct connectdata *conn = pp->conn;
+   and various capabilities from the CAPA response including the supported
+   authentication types and allowed SASL mechanisms. */
+static bool pop3_endofresp(struct connectdata *conn, char *line, size_t len,
+                           int *resp)
+{
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   size_t wordlen;
   size_t i;
 
   /* Do we have an error response? */
   if(len >= 4 && !memcmp("-ERR", line, 4)) {
     *resp = '-';
 
-    return FALSE;
+    return TRUE;
   }
 
   /* Are we processing servergreet responses? */
   if(pop3c->state == POP3_SERVERGREET) {
     /* Look for the APOP timestamp */
     if(len >= 3 && line[len - 3] == '>') {
@@ -249,116 +256,114 @@
         }
       }
     }
   }
   /* Are we processing CAPA command responses? */
   else if(pop3c->state == POP3_CAPA) {
-
-    /* Do we have the terminating character? */
+    /* Do we have the terminating line? */
     if(len >= 1 && !memcmp(line, ".", 1)) {
       *resp = '+';
 
       return TRUE;
     }
 
+    /* Does the server support the STLS capability? */
+    if(len >= 4 && !memcmp(line, "STLS", 4))
+      pop3c->tls_supported = TRUE;
+
     /* Does the server support clear text authentication? */
-    if(len >= 4 && !memcmp(line, "USER", 4)) {
+    else if(len >= 4 && !memcmp(line, "USER", 4))
       pop3c->authtypes |= POP3_TYPE_CLEARTEXT;
-      return FALSE;
-    }
 
     /* Does the server support APOP authentication? */
-    if(len >= 4 && !memcmp(line, "APOP", 4)) {
+    else if(len >= 4 && !memcmp(line, "APOP", 4))
       pop3c->authtypes |= POP3_TYPE_APOP;
-      return FALSE;
-    }
 
     /* Does the server support SASL based authentication? */
-    if(len < 4 || memcmp(line, "SASL", 4))
-      return FALSE;
+    else if(len >= 5 && !memcmp(line, "SASL ", 5)) {
+      pop3c->authtypes |= POP3_TYPE_SASL;
+
+      /* Advance past the SASL keyword */
+      line += 5;
+      len -= 5;
+
+      /* Loop through the data line */
+      for(;;) {
+        while(len &&
+              (*line == ' ' || *line == '\t' ||
+               *line == '\r' || *line == '\n')) {
 
-    pop3c->authtypes |= POP3_TYPE_SASL;
+          line++;
+          len--;
+        }
 
-    /* Advance past the SASL keyword */
-    line += 4;
-    len -= 4;
-
-    /* Loop through the data line */
-    for(;;) {
-      while(len &&
-            (*line == ' ' || *line == '\t' ||
-             *line == '\r' || *line == '\n')) {
+        if(!len)
+          break;
 
-        if(*line == '\n')
-          return FALSE;
+        /* Extract the word */
+        for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
+              line[wordlen] != '\t' && line[wordlen] != '\r' &&
+              line[wordlen] != '\n';)
+          wordlen++;
+
+        /* Test the word for a matching authentication mechanism */
+        if(wordlen == 5 && !memcmp(line, "LOGIN", 5))
+          pop3c->authmechs |= SASL_MECH_LOGIN;
+        else if(wordlen == 5 && !memcmp(line, "PLAIN", 5))
+          pop3c->authmechs |= SASL_MECH_PLAIN;
+        else if(wordlen == 8 && !memcmp(line, "CRAM-MD5", 8))
+          pop3c->authmechs |= SASL_MECH_CRAM_MD5;
+        else if(wordlen == 10 && !memcmp(line, "DIGEST-MD5", 10))
+          pop3c->authmechs |= SASL_MECH_DIGEST_MD5;
+        else if(wordlen == 6 && !memcmp(line, "GSSAPI", 6))
+          pop3c->authmechs |= SASL_MECH_GSSAPI;
+        else if(wordlen == 8 && !memcmp(line, "EXTERNAL", 8))
+          pop3c->authmechs |= SASL_MECH_EXTERNAL;
+        else if(wordlen == 4 && !memcmp(line, "NTLM", 4))
+          pop3c->authmechs |= SASL_MECH_NTLM;
 
-        line++;
-        len--;
+        line += wordlen;
+        len -= wordlen;
       }
+    }
 
-      if(!len)
-        break;
+    return FALSE;
+  }
 
-      /* Extract the word */
-      for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
-            line[wordlen] != '\t' && line[wordlen] != '\r' &&
-            line[wordlen] != '\n';)
-        wordlen++;
-
-      /* Test the word for a matching authentication mechanism */
-      if(wordlen == 5 && !memcmp(line, "LOGIN", 5))
-        pop3c->authmechs |= SASL_MECH_LOGIN;
-      else if(wordlen == 5 && !memcmp(line, "PLAIN", 5))
-        pop3c->authmechs |= SASL_MECH_PLAIN;
-      else if(wordlen == 8 && !memcmp(line, "CRAM-MD5", 8))
-        pop3c->authmechs |= SASL_MECH_CRAM_MD5;
-      else if(wordlen == 10 && !memcmp(line, "DIGEST-MD5", 10))
-        pop3c->authmechs |= SASL_MECH_DIGEST_MD5;
-      else if(wordlen == 6 && !memcmp(line, "GSSAPI", 6))
-        pop3c->authmechs |= SASL_MECH_GSSAPI;
-      else if(wordlen == 8 && !memcmp(line, "EXTERNAL", 8))
-        pop3c->authmechs |= SASL_MECH_EXTERNAL;
-      else if(wordlen == 4 && !memcmp(line, "NTLM", 4))
-        pop3c->authmechs |= SASL_MECH_NTLM;
+  /* Do we have a command or continuation response? */
+  if((len >= 3 && !memcmp("+OK", line, 3)) ||
+     (len >= 1 && !memcmp("+", line, 1))) {
+    *resp = '+';
 
-      line += wordlen;
-      len -= wordlen;
-    }
+    return TRUE;
   }
 
-  if((len < 1 || memcmp("+", line, 1)) &&
-     (len < 3 || memcmp("+OK", line, 3)))
   return FALSE; /* Nothing for us */
-
-  /* Otherwise it's a positive response */
-  *resp = '+';
-
-  return TRUE;
 }
 
 /* This is the ONLY way to change POP3 state! */
 static void state(struct connectdata *conn, pop3state newstate)
 {
   struct pop3_conn *pop3c = &conn->proto.pop3c;
 #if defined(DEBUGBUILD) && !defined(CURL_DISABLE_VERBOSE_STRINGS)
   /* for debug purposes */
   static const char * const names[] = {
     "STOP",
     "SERVERGREET",
+    "CAPA",
     "STARTTLS",
     "UPGRADETLS",
-    "CAPA",
     "AUTH_PLAIN",
     "AUTH_LOGIN",
     "AUTH_LOGIN_PASSWD",
     "AUTH_CRAMMD5",
     "AUTH_DIGESTMD5",
     "AUTH_DIGESTMD5_RESP",
     "AUTH_NTLM",
     "AUTH_NTLM_TYPE2MSG",
-    "AUTH",
+    "AUTH_FINAL",
     "APOP",
     "USER",
     "PASS",
     "COMMAND",
     "QUIT",
     /* LAST */
@@ -376,58 +381,97 @@
 {
   CURLcode result = CURLE_OK;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
 
   pop3c->authmechs = 0;         /* No known authentication mechanisms yet */
   pop3c->authused = 0;          /* Clear the authentication mechanism used */
-
-  /* Check we have a username and password to authenticate with and end the
-     connect phase if we don't */
-  if(!conn->bits.user_passwd) {
-    state(conn, POP3_STOP);
-
-    return result;
-  }
+  pop3c->tls_supported = FALSE; /* Clear the TLS capability */
 
   /* Send the CAPA command */
   result = Curl_pp_sendf(&pop3c->pp, "CAPA");
 
-  if(result)
-    return result;
+  if(!result)
+    state(conn, POP3_CAPA);
+
+  return result;
+}
 
-  state(conn, POP3_CAPA);
+static CURLcode pop3_state_starttls(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
 
-  return CURLE_OK;
+  /* Send the STLS command */
+  result = Curl_pp_sendf(&conn->proto.pop3c.pp, "STLS");
+
+  if(!result)
+    state(conn, POP3_STARTTLS);
+
+  return result;
+}
+
+static CURLcode pop3_state_upgrade_tls(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+  struct pop3_conn *pop3c = &conn->proto.pop3c;
+
+  /* Start the SSL connection */
+  result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &pop3c->ssldone);
+
+  if(!result) {
+    if(pop3c->state != POP3_UPGRADETLS)
+      state(conn, POP3_UPGRADETLS);
+
+    if(pop3c->ssldone) {
+      pop3_to_pop3s(conn);
+      result = pop3_state_capa(conn);
+    }
+  }
+
+  return result;
 }
 
 static CURLcode pop3_state_user(struct connectdata *conn)
 {
-  CURLcode result;
-  struct FTP *pop3 = conn->data->state.proto.pop3;
+  CURLcode result = CURLE_OK;
+
+  /* Check we have a username and password to authenticate with and end the
+     connect phase if we don't */
+  if(!conn->bits.user_passwd) {
+    state(conn, POP3_STOP);
 
-  /* Send the USER command */
-  result = Curl_pp_sendf(&conn->proto.pop3c.pp, "USER %s",
-                         pop3->user ? pop3->user : "");
-  if(result)
     return result;
+  }
 
-  state(conn, POP3_USER);
+  /* Send the USER command */
+  result = Curl_pp_sendf(&conn->proto.pop3c.pp, "USER %s",
+                         conn->user ? conn->user : "");
+  if(!result)
+    state(conn, POP3_USER);
 
-  return CURLE_OK;
+  return result;
 }
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 static CURLcode pop3_state_apop(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   size_t i;
   MD5_context *ctxt;
   unsigned char digest[MD5_DIGEST_LEN];
   char secret[2 * MD5_DIGEST_LEN + 1];
 
+  /* Check we have a username and password to authenticate with and end the
+     connect phase if we don't */
+  if(!conn->bits.user_passwd) {
+    state(conn, POP3_STOP);
+
+    return result;
+  }
+
+  /* Create the digest */
   ctxt = Curl_MD5_init(Curl_DIGEST_MD5);
   if(!ctxt)
     return CURLE_OUT_OF_MEMORY;
 
   Curl_MD5_update(ctxt, (const unsigned char *) pop3c->apoptimestamp,
                   curlx_uztoui(strlen(pop3c->apoptimestamp)));
@@ -455,12 +499,20 @@
 {
   CURLcode result = CURLE_OK;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   const char *mech = NULL;
   pop3state authstate = POP3_STOP;
 
+  /* Check we have a username and password to authenticate with and end the
+     connect phase if we don't */
+  if(!conn->bits.user_passwd) {
+    state(conn, POP3_STOP);
+
+    return result;
+  }
+
   /* Calculate the supported authentication mechanism by decreasing order of
      security */
   if(pop3c->authtypes & POP3_TYPE_SASL) {
 #ifndef CURL_DISABLE_CRYPTO_AUTH
     if(pop3c->authmechs & SASL_MECH_DIGEST_MD5) {
       mech = "DIGEST-MD5";
@@ -515,53 +567,59 @@
     result = CURLE_LOGIN_DENIED;
   }
 
   return result;
 }
 
-/* For the POP3 "protocol connect" and "doing" phases only */
-static int pop3_getsock(struct connectdata *conn, curl_socket_t *socks,
-                        int numsocks)
-{
-  return Curl_pp_getsock(&conn->proto.pop3c.pp, socks, numsocks);
-}
-
-#ifdef USE_SSL
-static void pop3_to_pop3s(struct connectdata *conn)
-{
-  conn->handler = &Curl_handler_pop3s;
-}
-#else
-#define pop3_to_pop3s(x) Curl_nop_stmt
-#endif
-
 /* For the initial server greeting */
 static CURLcode pop3_state_servergreet_resp(struct connectdata *conn,
                                             int pop3code,
                                             pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Got unexpected pop3-server response");
     return CURLE_FTP_WEIRD_SERVER_REPLY;
   }
 
-  if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
-    /* We don't have a SSL/TLS connection yet, but SSL is requested. Switch
-       to TLS connection now */
-    result = Curl_pp_sendf(&pop3c->pp, "STLS");
-    if(!result)
-      state(conn, POP3_STARTTLS);
+  result = pop3_state_capa(conn);
+
+  return result;
+}
+
+/* For CAPA responses */
+static CURLcode pop3_state_capa_resp(struct connectdata *conn, int pop3code,
+                                     pop3state instate)
+{
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct pop3_conn *pop3c = &conn->proto.pop3c;
+
+  (void)instate; /* no use for this yet */
+
+  if(pop3code != '+')
+    result = pop3_state_user(conn);
+  else if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
+    /* We don't have a SSL/TLS connection yet, but SSL is requested */
+    if(pop3c->tls_supported)
+      /* Switch to TLS connection now */
+      result = pop3_state_starttls(conn);
+    else if(data->set.use_ssl == CURLUSESSL_TRY)
+      /* Fallback and carry on with authentication */
+      result = pop3_authenticate(conn);
+    else {
+      failf(data, "STLS not supported.");
+      result = CURLE_USE_SSL_FAILED;
+    }
   }
   else
-    result = pop3_state_capa(conn);
+    result = pop3_authenticate(conn);
 
   return result;
 }
 
 /* For STARTTLS responses */
 static CURLcode pop3_state_starttls_resp(struct connectdata *conn,
@@ -576,56 +634,20 @@
   if(pop3code != '+') {
     if(data->set.use_ssl != CURLUSESSL_TRY) {
       failf(data, "STARTTLS denied. %c", pop3code);
       result = CURLE_USE_SSL_FAILED;
     }
     else
-      result = pop3_state_capa(conn);
+      result = pop3_authenticate(conn);
   }
   else
     result = pop3_state_upgrade_tls(conn);
 
   return result;
 }
 
-static CURLcode pop3_state_upgrade_tls(struct connectdata *conn)
-{
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
-  CURLcode result;
-
-  result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &pop3c->ssldone);
-
-  if(!result) {
-    if(pop3c->state != POP3_UPGRADETLS)
-      state(conn, POP3_UPGRADETLS);
-
-    if(pop3c->ssldone) {
-      pop3_to_pop3s(conn);
-      result = pop3_state_capa(conn);
-    }
-  }
-
-  return result;
-}
-
-/* For CAPA responses */
-static CURLcode pop3_state_capa_resp(struct connectdata *conn, int pop3code,
-                                     pop3state instate)
-{
-  CURLcode result = CURLE_OK;
-
-  (void)instate; /* no use for this yet */
-
-  if(pop3code == '+')
-    result = pop3_authenticate(conn);
-  else
-    result = pop3_state_user(conn);
-
-  return result;
-}
-
 /* For AUTH PLAIN responses */
 static CURLcode pop3_state_auth_plain_resp(struct connectdata *conn,
                                            int pop3code,
                                            pop3state instate)
 {
   CURLcode result = CURLE_OK;
@@ -647,13 +669,13 @@
     /* Send the message */
     if(!result) {
       if(plainauth) {
         result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", plainauth);
 
         if(!result)
-          state(conn, POP3_AUTH);
+          state(conn, POP3_AUTH_FINAL);
       }
 
       Curl_safefree(plainauth);
     }
   }
 
@@ -721,13 +743,13 @@
     /* Send the password */
     if(!result) {
       if(authpasswd) {
         result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", authpasswd);
 
         if(!result)
-          state(conn, POP3_AUTH);
+          state(conn, POP3_AUTH_FINAL);
       }
 
       Curl_safefree(authpasswd);
     }
   }
 
@@ -776,13 +798,13 @@
   /* Send the response */
   if(!result) {
     if(rplyb64) {
       result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", rplyb64);
 
       if(!result)
-        state(conn, POP3_AUTH);
+        state(conn, POP3_AUTH_FINAL);
     }
 
     Curl_safefree(rplyb64);
   }
 
   return result;
@@ -846,13 +868,13 @@
   }
   else {
     /* Send an empty response */
     result = Curl_pp_sendf(&conn->proto.pop3c.pp, "");
 
     if(!result)
-      state(conn, POP3_AUTH);
+      state(conn, POP3_AUTH_FINAL);
   }
 
   return result;
 }
 #endif
 
@@ -922,13 +944,13 @@
     /* Send the message */
     if(!result) {
       if(type3msg) {
         result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", type3msg);
 
         if(!result)
-          state(conn, POP3_AUTH);
+          state(conn, POP3_AUTH_FINAL);
       }
 
       Curl_safefree(type3msg);
     }
   }
 
@@ -947,15 +969,15 @@
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Authentication failed: %d", pop3code);
     result = CURLE_LOGIN_DENIED;
   }
-
-  /* End of connect phase */
-  state(conn, POP3_STOP);
+  else
+    /* End of connect phase */
+    state(conn, POP3_STOP);
 
   return result;
 }
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 static CURLcode pop3_state_apop_resp(struct connectdata *conn, int pop3code,
@@ -967,42 +989,39 @@
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Authentication failed: %d", pop3code);
     result = CURLE_LOGIN_DENIED;
   }
-
-  /* End of connect phase */
-  state(conn, POP3_STOP);
+  else
+    /* End of connect phase */
+    state(conn, POP3_STOP);
 
   return result;
 }
 #endif
 
 /* For USER responses */
 static CURLcode pop3_state_user_resp(struct connectdata *conn, int pop3code,
                                      pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct FTP *pop3 = data->state.proto.pop3;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied. %c", pop3code);
     result = CURLE_LOGIN_DENIED;
   }
   else
     /* Send the PASS command */
     result = Curl_pp_sendf(&conn->proto.pop3c.pp, "PASS %s",
-                           pop3->passwd ? pop3->passwd : "");
-  if(result)
-    return result;
-
-  state(conn, POP3_PASS);
+                           conn->passwd ? conn->passwd : "");
+  if(!result)
+    state(conn, POP3_PASS);
 
   return result;
 }
 
 /* For PASS responses */
 static CURLcode pop3_state_pass_resp(struct connectdata *conn, int pop3code,
@@ -1014,65 +1033,62 @@
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied. %c", pop3code);
     result = CURLE_LOGIN_DENIED;
   }
-
-  /* End of connect phase */
-  state(conn, POP3_STOP);
+  else
+    /* End of connect phase */
+    state(conn, POP3_STOP);
 
   return result;
 }
 
 /* Start the DO phase for the command */
 static CURLcode pop3_command(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
+  struct SessionHandle *data = conn->data;
+  struct POP3 *pop3 = data->state.proto.pop3;
   const char *command = NULL;
 
   /* Calculate the default command */
-  if(pop3c->mailbox[0] == '\0' || conn->data->set.ftp_list_only) {
+  if(pop3->id[0] == '\0' || conn->data->set.ftp_list_only) {
     command = "LIST";
 
-    if(pop3c->mailbox[0] != '\0') {
+    if(pop3->id[0] != '\0')
       /* Message specific LIST so skip the BODY transfer */
-      struct FTP *pop3 = conn->data->state.proto.pop3;
       pop3->transfer = FTPTRANSFER_INFO;
-    }
   }
   else
     command = "RETR";
 
   /* Send the command */
-  if(pop3c->mailbox[0] != '\0')
+  if(pop3->id[0] != '\0')
     result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s %s",
-                           (pop3c->custom && pop3c->custom[0] != '\0' ?
-                            pop3c->custom : command), pop3c->mailbox);
+                           (pop3->custom && pop3->custom[0] != '\0' ?
+                            pop3->custom : command), pop3->id);
   else
     result = Curl_pp_sendf(&conn->proto.pop3c.pp,
-                           (pop3c->custom && pop3c->custom[0] != '\0' ?
-                            pop3c->custom : command));
-
-  if(result)
-    return result;
+                           (pop3->custom && pop3->custom[0] != '\0' ?
+                            pop3->custom : command));
 
-  state(conn, POP3_COMMAND);
+  if(!result)
+    state(conn, POP3_COMMAND);
 
   return result;
 }
 
 /* For command responses */
 static CURLcode pop3_state_command_resp(struct connectdata *conn,
                                         int pop3code,
                                         pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct FTP *pop3 = data->state.proto.pop3;
+  struct POP3 *pop3 = data->state.proto.pop3;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   struct pingpong *pp = &pop3c->pp;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
@@ -1087,43 +1103,44 @@
   pop3c->eob = 2;
 
   /* But since this initial CR LF pair is not part of the actual body, we set
      the strip counter here so that these bytes won't be delivered. */
   pop3c->strip = 2;
 
-  /* POP3 download */
-  Curl_setup_transfer(conn, FIRSTSOCKET, -1, FALSE, pop3->bytecountp,
-                      -1, NULL); /* no upload here */
+  if(pop3->transfer == FTPTRANSFER_BODY) {
+    /* POP3 download */
+    Curl_setup_transfer(conn, FIRSTSOCKET, -1, FALSE, NULL, -1, NULL);
+
+    if(pp->cache) {
+      /* The header "cache" contains a bunch of data that is actually body
+         content so send it as such. Note that there may even be additional
+         "headers" after the body */
+
+      if(!data->set.opt_no_body) {
+        result = Curl_pop3_write(conn, pp->cache, pp->cache_size);
+        if(result)
+          return result;
+      }
 
-  if(pp->cache) {
-    /* The header "cache" contains a bunch of data that is actually body
-       content so send it as such. Note that there may even be additional
-       "headers" after the body */
+      /* Free the cache */
+      Curl_safefree(pp->cache);
 
-    if(!data->set.opt_no_body) {
-      result = Curl_pop3_write(conn, pp->cache, pp->cache_size);
-      if(result)
-        return result;
+      /* Reset the cache size */
+      pp->cache_size = 0;
     }
-
-    /* Free the cache */
-    Curl_safefree(pp->cache);
-
-    /* Reset the cache size */
-    pp->cache_size = 0;
   }
 
-  /* End of do phase */
+  /* End of DO phase */
   state(conn, POP3_STOP);
 
   return result;
 }
 
 static CURLcode pop3_statemach_act(struct connectdata *conn)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   int pop3code;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   struct pingpong *pp = &pop3c->pp;
   size_t nread = 0;
 
@@ -1144,20 +1161,20 @@
     /* We have now received a full POP3 server response */
     switch(pop3c->state) {
     case POP3_SERVERGREET:
       result = pop3_state_servergreet_resp(conn, pop3code, pop3c->state);
       break;
 
-    case POP3_STARTTLS:
-      result = pop3_state_starttls_resp(conn, pop3code, pop3c->state);
-      break;
-
     case POP3_CAPA:
       result = pop3_state_capa_resp(conn, pop3code, pop3c->state);
       break;
 
+    case POP3_STARTTLS:
+      result = pop3_state_starttls_resp(conn, pop3code, pop3c->state);
+      break;
+
     case POP3_AUTH_PLAIN:
       result = pop3_state_auth_plain_resp(conn, pop3code, pop3c->state);
       break;
 
     case POP3_AUTH_LOGIN:
       result = pop3_state_auth_login_resp(conn, pop3code, pop3c->state);
@@ -1190,13 +1207,13 @@
     case POP3_AUTH_NTLM_TYPE2MSG:
       result = pop3_state_auth_ntlm_type2msg_resp(conn, pop3code,
                                                   pop3c->state);
       break;
 #endif
 
-    case POP3_AUTH:
+    case POP3_AUTH_FINAL:
       result = pop3_state_auth_final_resp(conn, pop3code, pop3c->state);
       break;
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
     case POP3_APOP:
       result = pop3_state_apop_resp(conn, pop3code, pop3c->state);
@@ -1227,64 +1244,58 @@
   return result;
 }
 
 /* Called repeatedly until done from multi.c */
 static CURLcode pop3_multi_statemach(struct connectdata *conn, bool *done)
 {
+  CURLcode result = CURLE_OK;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
-  CURLcode result;
 
   if((conn->handler->flags & PROTOPT_SSL) && !pop3c->ssldone)
     result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &pop3c->ssldone);
   else
-    result = Curl_pp_multi_statemach(&pop3c->pp);
+    result = Curl_pp_statemach(&pop3c->pp, FALSE);
 
   *done = (pop3c->state == POP3_STOP) ? TRUE : FALSE;
 
   return result;
 }
 
-static CURLcode pop3_easy_statemach(struct connectdata *conn)
+static CURLcode pop3_block_statemach(struct connectdata *conn)
 {
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
-  struct pingpong *pp = &pop3c->pp;
   CURLcode result = CURLE_OK;
+  struct pop3_conn *pop3c = &conn->proto.pop3c;
 
-  while(pop3c->state != POP3_STOP) {
-    result = Curl_pp_easy_statemach(pp);
-    if(result)
-      break;
-  }
+  while(pop3c->state != POP3_STOP && !result)
+    result = Curl_pp_statemach(&pop3c->pp, TRUE);
 
   return result;
 }
 
 /* Allocate and initialize the POP3 struct for the current SessionHandle if
    required */
 static CURLcode pop3_init(struct connectdata *conn)
 {
+  CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct FTP *pop3 = data->state.proto.pop3;
+  struct POP3 *pop3 = data->state.proto.pop3;
 
   if(!pop3) {
-    pop3 = data->state.proto.pop3 = calloc(sizeof(struct FTP), 1);
+    pop3 = data->state.proto.pop3 = calloc(sizeof(struct POP3), 1);
     if(!pop3)
-      return CURLE_OUT_OF_MEMORY;
+      result = CURLE_OUT_OF_MEMORY;
   }
 
-  /* Get some initial data into the pop3 struct */
-  pop3->bytecountp = &data->req.bytecount;
-
-  /* No need to duplicate user+password, the connectdata struct won't change
-     during a session, but we re-init them here since on subsequent inits
-     since the conn struct may have changed or been replaced.
-  */
-  pop3->user = conn->user;
-  pop3->passwd = conn->passwd;
+  return result;
+}
 
-  return CURLE_OK;
+/* For the POP3 "protocol connect" and "doing" phases only */
+static int pop3_getsock(struct connectdata *conn, curl_socket_t *socks,
+                        int numsocks)
+{
+  return Curl_pp_getsock(&conn->proto.pop3c.pp, socks, numsocks);
 }
 
 /***********************************************************************
  *
  * pop3_connect()
  *
@@ -1294,43 +1305,37 @@
  * The variable 'done' points to will be TRUE if the protocol-layer connect
  * phase is done when this function returns, or FALSE is not. When called as
  * a part of the easy interface, it will always be TRUE.
  */
 static CURLcode pop3_connect(struct connectdata *conn, bool *done)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   struct pingpong *pp = &pop3c->pp;
 
   *done = FALSE; /* default to not done yet */
 
   /* If there already is a protocol-specific struct allocated for this
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
 
+  /* Initialise the POP3 layer */
   result = pop3_init(conn);
-  if(CURLE_OK != result)
+  if(result)
     return result;
 
-  /* We always support persistent connections on pop3 */
+  /* We always support persistent connections in POP3 */
   conn->bits.close = FALSE;
 
-  pp->response_time = RESP_TIMEOUT; /* set default response time-out */
+  /* Set the default response time-out */
+  pp->response_time = RESP_TIMEOUT;
   pp->statemach_act = pop3_statemach_act;
   pp->endofresp = pop3_endofresp;
   pp->conn = conn;
 
-  if(conn->handler->flags & PROTOPT_SSL) {
-    /* POP3S is simply pop3 with SSL for the control channel */
-    /* so perform the SSL initialization for this socket */
-    result = Curl_ssl_connect(conn, FIRSTSOCKET);
-    if(result)
-      return result;
-  }
-
-  /* Initialise the response reader stuff */
+  /* Initialise the pingpong layer */
   Curl_pp_init(pp);
 
   /* Start off waiting for the server greeting response */
   state(conn, POP3_SERVERGREET);
 
   result = pop3_multi_statemach(conn, done);
@@ -1347,60 +1352,58 @@
  *
  * Input argument is already checked for validity.
  */
 static CURLcode pop3_done(struct connectdata *conn, CURLcode status,
                           bool premature)
 {
-  struct SessionHandle *data = conn->data;
-  struct FTP *pop3 = data->state.proto.pop3;
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
   CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct POP3 *pop3 = data->state.proto.pop3;
 
   (void)premature;
 
   if(!pop3)
-    /* When the easy handle is removed from the multi while libcurl is still
-     * trying to resolve the host name, it seems that the pop3 struct is not
-     * yet initialized, but the removal action calls Curl_done() which calls
-     * this function. So we simply return success if no pop3 pointer is set.
-     */
+    /* When the easy handle is removed from the multi interface while libcurl
+       is still trying to resolve the host name, the POP3 struct is not yet
+       initialized. However, the removal action calls Curl_done() which in
+       turn calls this function, so we simply return success. */
     return CURLE_OK;
 
   if(status) {
     conn->bits.close = TRUE; /* marked for closure */
     result = status;         /* use the already set error code */
   }
 
-  /* Cleanup our do based variables */
-  Curl_safefree(pop3c->mailbox);
-  Curl_safefree(pop3c->custom);
+  /* Cleanup our per-request based variables */
+  Curl_safefree(pop3->id);
+  Curl_safefree(pop3->custom);
 
-  /* Clear the transfer mode for the next connection */
+  /* Clear the transfer mode for the next request */
   pop3->transfer = FTPTRANSFER_BODY;
 
   return result;
 }
 
 /***********************************************************************
  *
  * pop3_perform()
  *
- * This is the actual DO function for POP3. Get a file/directory according to
+ * This is the actual DO function for POP3. Get a message/listing according to
  * the options previously setup.
  */
 static CURLcode pop3_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is POP3 and no proxy */
   CURLcode result = CURLE_OK;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
   if(conn->data->set.opt_no_body) {
     /* Requested no body means no transfer */
-    struct FTP *pop3 = conn->data->state.proto.pop3;
+    struct POP3 *pop3 = conn->data->state.proto.pop3;
     pop3->transfer = FTPTRANSFER_INFO;
   }
 
   *dophase_done = FALSE; /* not done yet */
 
   /* Start the first command in the DO phase */
@@ -1427,61 +1430,55 @@
  * parts etc as a wrapper to the actual DO function (pop3_perform).
  *
  * The input argument is already checked for validity.
  */
 static CURLcode pop3_do(struct connectdata *conn, bool *done)
 {
-  CURLcode retcode = CURLE_OK;
+  CURLcode result = CURLE_OK;
 
   *done = FALSE; /* default to false */
 
-  /*
-    Since connections can be re-used between SessionHandles, this might be a
-    connection already existing but on a fresh SessionHandle struct so we must
-    make sure we have a good 'struct POP3' to play with. For new connections,
-    the struct POP3 is allocated and setup in the pop3_connect() function.
-  */
+  /* Since connections can be re-used between SessionHandles, there might be a
+     connection already existing but on a fresh SessionHandle struct. As such
+     we make sure we have a good POP3 struct to play with. For new connections
+     the POP3 struct is allocated and setup in the pop3_connect() function. */
   Curl_reset_reqproto(conn);
-  retcode = pop3_init(conn);
-  if(retcode)
-    return retcode;
+  result = pop3_init(conn);
+  if(result)
+    return result;
 
   /* Parse the URL path */
-  retcode = pop3_parse_url_path(conn);
-  if(retcode)
-    return retcode;
+  result = pop3_parse_url_path(conn);
+  if(result)
+    return result;
 
   /* Parse the custom request */
-  retcode = pop3_parse_custom_request(conn);
-  if(retcode)
-    return retcode;
+  result = pop3_parse_custom_request(conn);
+  if(result)
+    return result;
 
-  retcode = pop3_regular_transfer(conn, done);
+  result = pop3_regular_transfer(conn, done);
 
-  return retcode;
+  return result;
 }
 
 /***********************************************************************
  *
  * pop3_quit()
  *
- * This should be called before calling sclose().  We should then wait for the
- * response from the server before returning. The calling code should then try
- * to close the connection.
+ * Performs the quit action prior to sclose() be called.
  */
 static CURLcode pop3_quit(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
 
-  result = Curl_pp_sendf(&conn->proto.pop3c.pp, "QUIT", NULL);
-  if(result)
-    return result;
-
-  state(conn, POP3_QUIT);
+  /* Send the QUIT command */
+  result = Curl_pp_sendf(&conn->proto.pop3c.pp, "QUIT");
 
-  result = pop3_easy_statemach(conn);
+  if(!result)
+    state(conn, POP3_QUIT);
 
   return result;
 }
 
 /***********************************************************************
  *
@@ -1494,18 +1491,19 @@
                                 bool dead_connection)
 {
   struct pop3_conn *pop3c = &conn->proto.pop3c;
 
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
-     disconnect wait in vain and cause more problems than we need to */
+     disconnect wait in vain and cause more problems than we need to. */
 
   /* The POP3 session may or may not have been allocated/setup at this
      point! */
   if(!dead_connection && pop3c->pp.conn)
-    (void)pop3_quit(conn); /* ignore errors on the LOGOUT */
+    if(!pop3_quit(conn))
+      (void)pop3_block_statemach(conn); /* ignore errors on QUIT */
 
   /* Disconnect from the server */
   Curl_pp_disconnect(&pop3c->pp);
 
   /* Cleanup the SASL module */
   Curl_sasl_cleanup(conn, pop3c->authused);
@@ -1522,61 +1520,54 @@
  *
  * Parse the URL path into separate path components.
  */
 static CURLcode pop3_parse_url_path(struct connectdata *conn)
 {
   /* The POP3 struct is already initialised in pop3_connect() */
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
   struct SessionHandle *data = conn->data;
+  struct POP3 *pop3 = data->state.proto.pop3;
   const char *path = data->state.path;
 
-  /* URL decode the path and use this mailbox */
-  return Curl_urldecode(data, path, 0, &pop3c->mailbox, NULL, TRUE);
+  /* URL decode the path for the message ID */
+  return Curl_urldecode(data, path, 0, &pop3->id, NULL, TRUE);
 }
 
 static CURLcode pop3_parse_custom_request(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct pop3_conn *pop3c = &conn->proto.pop3c;
   struct SessionHandle *data = conn->data;
-  const char *custom = conn->data->set.str[STRING_CUSTOMREQUEST];
+  struct POP3 *pop3 = data->state.proto.pop3;
+  const char *custom = data->set.str[STRING_CUSTOMREQUEST];
 
   /* URL decode the custom request */
   if(custom)
-    result = Curl_urldecode(data, custom, 0, &pop3c->custom, NULL, TRUE);
+    result = Curl_urldecode(data, custom, 0, &pop3->custom, NULL, TRUE);
 
   return result;
 }
 
 /* Call this when the DO phase has completed */
 static CURLcode pop3_dophase_done(struct connectdata *conn, bool connected)
 {
-  struct FTP *pop3 = conn->data->state.proto.pop3;
-
+  (void)conn;
   (void)connected;
 
-  if(pop3->transfer != FTPTRANSFER_BODY)
-    /* no data to transfer */
-    Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
-
   return CURLE_OK;
 }
 
 /* Called from multi.c while DOing */
 static CURLcode pop3_doing(struct connectdata *conn, bool *dophase_done)
 {
   CURLcode result = pop3_multi_statemach(conn, dophase_done);
 
   if(result)
     DEBUGF(infof(conn->data, "DO phase failed\n"));
-  else {
-    if(*dophase_done) {
-      result = pop3_dophase_done(conn, FALSE /* not connected */);
+  else if(*dophase_done) {
+    result = pop3_dophase_done(conn, FALSE /* not connected */);
 
-      DEBUGF(infof(conn->data, "DO phase is complete\n"));
-    }
+    DEBUGF(infof(conn->data, "DO phase is complete\n"));
   }
 
   return result;
 }
 
 /***********************************************************************
@@ -1595,36 +1586,34 @@
   bool connected = FALSE;
   struct SessionHandle *data = conn->data;
 
   /* Make sure size is unknown at this point */
   data->req.size = -1;
 
+  /* Set the progress data */
   Curl_pgrsSetUploadCounter(data, 0);
   Curl_pgrsSetDownloadCounter(data, 0);
   Curl_pgrsSetUploadSize(data, 0);
   Curl_pgrsSetDownloadSize(data, 0);
 
+  /* Carry out the perform */
   result = pop3_perform(conn, &connected, dophase_done);
 
-  if(CURLE_OK == result) {
-    if(!*dophase_done)
-      /* The DO phase has not completed yet */
-      return CURLE_OK;
-
+  /* Perform post DO phase operations if necessary */
+  if(!result && *dophase_done)
     result = pop3_dophase_done(conn, connected);
-  }
 
   return result;
 }
 
-static CURLcode pop3_setup_connection(struct connectdata * conn)
+static CURLcode pop3_setup_connection(struct connectdata *conn)
 {
   struct SessionHandle *data = conn->data;
 
   if(conn->bits.httpproxy && !data->set.tunnel_thru_httpproxy) {
-    /* Unless we have asked to tunnel pop3 operations through the proxy, we
+    /* Unless we have asked to tunnel POP3 operations through the proxy, we
        switch and use HTTP operations only */
 #ifndef CURL_DISABLE_HTTP
     if(conn->handler == &Curl_handler_pop3)
       conn->handler = &Curl_handler_pop3_proxy;
     else {
 #ifdef USE_SSL
@@ -1665,13 +1654,13 @@
   size_t i;
 
   /* Search through the buffer looking for the end-of-body marker which is
      5 bytes (0d 0a 2e 0d 0a). Note that a line starting with a dot matches
      the eob so the server will have prefixed it with an extra dot which we
      need to strip out. Additionally the marker could of course be spread out
-     over 5 different data chunks */
+     over 5 different data chunks. */
   for(i = 0; i < nread; i++) {
     size_t prev = pop3c->eob;
 
     switch(str[i]) {
     case 0x0d:
       if(pop3c->eob == 0) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pop3.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pop3.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/pop3.h	2013-01-28 06:12:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/pop3.h	2013-03-05 18:02:20.000000000 +0800
@@ -19,56 +19,67 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
+#include "pingpong.h"
+
 /****************************************************************************
  * POP3 unique setup
  ***************************************************************************/
 typedef enum {
   POP3_STOP,         /* do nothing state, stops the state machine */
   POP3_SERVERGREET,  /* waiting for the initial greeting immediately after
                         a connect */
+  POP3_CAPA,
   POP3_STARTTLS,
   POP3_UPGRADETLS,   /* asynchronously upgrade the connection to SSL/TLS
                        (multi mode only) */
-  POP3_CAPA,
   POP3_AUTH_PLAIN,
   POP3_AUTH_LOGIN,
   POP3_AUTH_LOGIN_PASSWD,
   POP3_AUTH_CRAMMD5,
   POP3_AUTH_DIGESTMD5,
   POP3_AUTH_DIGESTMD5_RESP,
   POP3_AUTH_NTLM,
   POP3_AUTH_NTLM_TYPE2MSG,
-  POP3_AUTH,
+  POP3_AUTH_FINAL,
   POP3_APOP,
   POP3_USER,
   POP3_PASS,
   POP3_COMMAND,
   POP3_QUIT,
   POP3_LAST          /* never used */
 } pop3state;
 
+/* This POP3 struct is used in the SessionHandle. All POP3 data that is
+   connection-oriented must be in pop3_conn to properly deal with the fact that
+   perhaps the SessionHandle is changed between the times the connection is
+   used. */
+struct POP3 {
+  curl_pp_transfer transfer;
+  char *id;               /* Message ID */
+  char *custom;           /* Custom Request */
+};
+
 /* pop3_conn is used for struct connection-oriented data in the connectdata
    struct */
 struct pop3_conn {
   struct pingpong pp;
-  char *mailbox;          /* Message ID */
-  char *custom;           /* Custom Request */
+  pop3state state;        /* Always use pop3.c:state() to change state! */
+  bool ssldone;           /* Is connect() over SSL done? */
   size_t eob;             /* Number of bytes of the EOB (End Of Body) that
                              have been received so far */
   size_t strip;           /* Number of bytes from the start to ignore as
                              non-body */
   unsigned int authtypes; /* Supported authentication types */
   unsigned int authmechs; /* Accepted SASL authentication mechanisms */
   unsigned int authused;  /* SASL auth mechanism used for the connection */
   char *apoptimestamp;    /* APOP timestamp from the server greeting */
-  pop3state state;        /* Always use pop3.c:state() to change state! */
-  bool ssldone;           /* Is connect() over SSL done? */
+  bool tls_supported;     /* StartTLS capability supported by server */
 };
 
 extern const struct Curl_handler Curl_handler_pop3;
 extern const struct Curl_handler Curl_handler_pop3s;
 
 /* Authentication type flags */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/README.pipelining /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/README.pipelining
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/README.pipelining	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/README.pipelining	2013-04-12 02:46:54.000000000 +0800
@@ -39,13 +39,6 @@
 
 - Explicitly asking for pipelining handle X and handle Y won't be supported.
   It isn't easy for an app to do this association. The lib should probably
   still resolve the second one properly to make sure that they actually _can_
   be considered for pipelining. Also, asking for explicit pipelining on handle
   X may be tricky when handle X get a closed connection.
-
-- We need options to control max pipeline length, and probably how to behave
-  if we reach that limit. As was discussed on the list, it can probably be
-  made very complicated, so perhaps we can think of a way to pass all
-  variables involved to a callback and let the application decide how to act
-  in specific situations. Either way, these fancy options are only interesting
-  to work on when everything is working and we have working apps to test with.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/select.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/select.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/select.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/select.c	2013-04-12 02:46:54.000000000 +0800
@@ -47,33 +47,26 @@
 #include "warnless.h"
 
 /* Convenience local macros */
 
 #define elapsed_ms  (int)curlx_tvdiff(curlx_tvnow(), initial_tv)
 
-#ifdef CURL_ACKNOWLEDGE_EINTR
-#define error_not_EINTR (1)
-#else
-#define error_not_EINTR (error != EINTR)
-#endif
+int Curl_ack_eintr = 0;
+#define error_not_EINTR (Curl_ack_eintr || error != EINTR)
 
 /*
  * Internal function used for waiting a specific amount of ms
  * in Curl_socket_ready() and Curl_poll() when no file descriptor
  * is provided to wait on, just being used to delay execution.
  * WinSock select() and poll() timeout mechanisms need a valid
  * socket descriptor in a not null file descriptor set to work.
  * Waiting indefinitely with this function is not allowed, a
  * zero or negative timeout value will return immediately.
  * Timeout resolution, accuracy, as well as maximum supported
  * value is system dependent, neither factor is a citical issue
  * for the intended use of this function in the library.
- * On non-DOS and non-Winsock platforms, when compiled with
- * CURL_ACKNOWLEDGE_EINTR defined, EINTR condition is honored
- * and function might exit early without awaiting full timeout,
- * otherwise EINTR will be ignored and full timeout will elapse.
  *
  * Return values:
  *   -1 = system call error, invalid timeout value, or interrupted
  *    0 = specified timeout has elapsed
  */
 int Curl_wait_ms(int timeout_ms)
@@ -130,15 +123,12 @@
  * otherwise select() is used.  An error is returned if select() is being used
  * and a file descriptor is too large for FD_SETSIZE.
  *
  * A negative timeout value makes this function wait indefinitely,
  * unles no valid file descriptor is given, when this happens the
  * negative timeout is ignored and the function times out immediately.
- * When compiled with CURL_ACKNOWLEDGE_EINTR defined, EINTR condition
- * is honored and function might exit early without awaiting timeout,
- * otherwise EINTR will be ignored.
  *
  * Return values:
  *   -1 = system call error or fd >= FD_SETSIZE
  *    0 = timeout
  *    [bitmask] = action as described below
  *
@@ -348,15 +338,12 @@
  * This is a wrapper around poll().  If poll() does not exist, then
  * select() is used instead.  An error is returned if select() is
  * being used and a file descriptor is too large for FD_SETSIZE.
  * A negative timeout value makes this function wait indefinitely,
  * unles no valid file descriptor is given, when this happens the
  * negative timeout is ignored and the function times out immediately.
- * When compiled with CURL_ACKNOWLEDGE_EINTR defined, EINTR condition
- * is honored and function might exit early without awaiting timeout,
- * otherwise EINTR will be ignored.
  *
  * Return values:
  *   -1 = system call error or fd >= FD_SETSIZE
  *    0 = timeout
  *    N = number of structures with non zero revent fields
  */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/select.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/select.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/select.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/select.h	2013-04-12 02:46:54.000000000 +0800
@@ -78,12 +78,18 @@
 /* provide the former API internally */
 #define Curl_socket_ready(x,y,z) \
   Curl_socket_check(x, CURL_SOCKET_BAD, y, z)
 
 int Curl_poll(struct pollfd ufds[], unsigned int nfds, int timeout_ms);
 
+/* On non-DOS and non-Winsock platforms, when Curl_ack_eintr is set,
+ * EINTR condition is honored and function might exit early without
+ * awaiting full timeout.  Otherwise EINTR will be ignored and full
+ * timeout will elapse. */
+extern int Curl_ack_eintr;
+
 int Curl_wait_ms(int timeout_ms);
 
 #ifdef TPF
 int tpf_select_libcurl(int maxfds, fd_set* reads, fd_set* writes,
                        fd_set* excepts, struct timeval* tv);
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/sendf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/sendf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/sendf.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/sendf.c	2013-04-12 02:46:54.000000000 +0800
@@ -526,14 +526,13 @@
                    ssize_t *n)               /* amount bytes read */
 {
   CURLcode curlcode = CURLE_RECV_ERROR;
   ssize_t nread = 0;
   size_t bytesfromsocket = 0;
   char *buffertofill = NULL;
-  bool pipelining = (conn->data->multi &&
-                     Curl_multi_canPipeline(conn->data->multi)) ? TRUE : FALSE;
+  bool pipelining = Curl_multi_pipeline_enabled(conn->data->multi);
 
   /* Set 'num' to 0 or 1, depending on which socket that has been sent here.
      If it is the second socket, we set num to 1. Otherwise to 0. This lets
      us use the correct ssl handle. */
   int num = (sockfd == conn->sock[SECONDARYSOCKET]);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/smtp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/smtp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/smtp.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/smtp.c	2013-04-12 02:46:54.000000000 +0800
@@ -96,13 +96,12 @@
 static CURLcode smtp_disconnect(struct connectdata *conn, bool dead);
 static CURLcode smtp_multi_statemach(struct connectdata *conn, bool *done);
 static int smtp_getsock(struct connectdata *conn, curl_socket_t *socks,
                         int numsocks);
 static CURLcode smtp_doing(struct connectdata *conn, bool *dophase_done);
 static CURLcode smtp_setup_connection(struct connectdata *conn);
-static CURLcode smtp_state_upgrade_tls(struct connectdata *conn);
 
 /*
  * SMTP protocol handler.
  */
 
 const struct Curl_handler Curl_handler_smtp = {
@@ -201,80 +200,95 @@
   CURLPROTO_HTTP,                       /* protocol */
   PROTOPT_NONE                          /* flags */
 };
 #endif
 #endif
 
-/* Function that checks for an ending smtp status code at the start of the
-   given string, but also detects the supported authentication mechanisms
-   from  the EHLO AUTH response. */
-static int smtp_endofresp(struct pingpong *pp, int *resp)
-{
-  char *line = pp->linestart_resp;
-  size_t len = pp->nread_resp;
-  struct connectdata *conn = pp->conn;
+#ifdef USE_SSL
+static void smtp_to_smtps(struct connectdata *conn)
+{
+  conn->handler = &Curl_handler_smtps;
+}
+#else
+#define smtp_to_smtps(x) Curl_nop_stmt
+#endif
+
+/* Function that checks for an ending SMTP status code at the start of the
+   given string, but also detects various capabilities from the EHLO response
+   including the supported authentication mechanisms. */
+static bool smtp_endofresp(struct connectdata *conn, char *line, size_t len,
+                           int *resp)
+{
   struct smtp_conn *smtpc = &conn->proto.smtpc;
-  int result;
+  bool result = FALSE;
   size_t wordlen;
 
   if(len < 4 || !ISDIGIT(line[0]) || !ISDIGIT(line[1]) || !ISDIGIT(line[2]))
     return FALSE;       /* Nothing for us */
 
-  /* Extract the response code if necessary */
-  if((result = (line[3] == ' ')) != 0)
+  /* Do we have a command response? */
+  result = (line[3] == ' ') ? TRUE : FALSE;
+  if(result)
     *resp = curlx_sltosi(strtol(line, NULL, 10));
 
-  line += 4;
-  len -= 4;
+  /* Are we processing EHLO command data? */
+  if(smtpc->state == SMTP_EHLO && (!result || (result && *resp/100 == 2))) {
+    line += 4;
+    len -= 4;
+
+    /* Does the server support the STARTTLS capability? */
+    if(len >= 8 && !memcmp(line, "STARTTLS", 8))
+      smtpc->tls_supported = TRUE;
+
+    /* Does the server support the SIZE capability? */
+    else if(len >= 4 && !memcmp(line, "SIZE", 4))
+      smtpc->size_supported = TRUE;
+
+    /* Do we have the authentication mechanism list? */
+    else if(len >= 5 && !memcmp(line, "AUTH ", 5)) {
+      line += 5;
+      len -= 5;
+
+      /* Loop through the data line */
+      for(;;) {
+        while(len &&
+              (*line == ' ' || *line == '\t' ||
+               *line == '\r' || *line == '\n')) {
+
+          line++;
+          len--;
+        }
+
+        if(!len)
+          break;
+
+        /* Extract the word */
+        for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
+              line[wordlen] != '\t' && line[wordlen] != '\r' &&
+              line[wordlen] != '\n';)
+          wordlen++;
+
+        /* Test the word for a matching authentication mechanism */
+        if(wordlen == 5 && !memcmp(line, "LOGIN", 5))
+          smtpc->authmechs |= SASL_MECH_LOGIN;
+        else if(wordlen == 5 && !memcmp(line, "PLAIN", 5))
+          smtpc->authmechs |= SASL_MECH_PLAIN;
+        else if(wordlen == 8 && !memcmp(line, "CRAM-MD5", 8))
+          smtpc->authmechs |= SASL_MECH_CRAM_MD5;
+        else if(wordlen == 10 && !memcmp(line, "DIGEST-MD5", 10))
+          smtpc->authmechs |= SASL_MECH_DIGEST_MD5;
+        else if(wordlen == 6 && !memcmp(line, "GSSAPI", 6))
+          smtpc->authmechs |= SASL_MECH_GSSAPI;
+        else if(wordlen == 8 && !memcmp(line, "EXTERNAL", 8))
+          smtpc->authmechs |= SASL_MECH_EXTERNAL;
+        else if(wordlen == 4 && !memcmp(line, "NTLM", 4))
+          smtpc->authmechs |= SASL_MECH_NTLM;
 
-  /* Does the server support the SIZE capability? */
-  if(smtpc->state == SMTP_EHLO && len >= 4 && !memcmp(line, "SIZE", 4)) {
-    DEBUGF(infof(conn->data, "Server supports SIZE extension.\n"));
-    smtpc->size_supported = true;
-  }
-
-  /* Do we have the authentication mechanism list? */
-  if(smtpc->state == SMTP_EHLO && len >= 5 && !memcmp(line, "AUTH ", 5)) {
-    line += 5;
-    len -= 5;
-
-    for(;;) {
-      while(len &&
-            (*line == ' ' || *line == '\t' ||
-             *line == '\r' || *line == '\n')) {
-        line++;
-        len--;
+        line += wordlen;
+        len -= wordlen;
       }
-
-      if(!len)
-        break;
-
-      /* Extract the word */
-      for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
-            line[wordlen] != '\t' && line[wordlen] != '\r' &&
-            line[wordlen] != '\n';)
-        wordlen++;
-
-      /* Test the word for a matching authentication mechanism */
-      if(wordlen == 5 && !memcmp(line, "LOGIN", 5))
-        smtpc->authmechs |= SASL_MECH_LOGIN;
-      else if(wordlen == 5 && !memcmp(line, "PLAIN", 5))
-        smtpc->authmechs |= SASL_MECH_PLAIN;
-      else if(wordlen == 8 && !memcmp(line, "CRAM-MD5", 8))
-        smtpc->authmechs |= SASL_MECH_CRAM_MD5;
-      else if(wordlen == 10 && !memcmp(line, "DIGEST-MD5", 10))
-        smtpc->authmechs |= SASL_MECH_DIGEST_MD5;
-      else if(wordlen == 6 && !memcmp(line, "GSSAPI", 6))
-        smtpc->authmechs |= SASL_MECH_GSSAPI;
-      else if(wordlen == 8 && !memcmp(line, "EXTERNAL", 8))
-        smtpc->authmechs |= SASL_MECH_EXTERNAL;
-      else if(wordlen == 4 && !memcmp(line, "NTLM", 4))
-        smtpc->authmechs |= SASL_MECH_NTLM;
-
-      line += wordlen;
-      len -= wordlen;
     }
   }
 
   return result;
 }
 
@@ -290,19 +304,19 @@
     "EHLO",
     "HELO",
     "STARTTLS",
     "UPGRADETLS",
     "AUTH_PLAIN",
     "AUTH_LOGIN",
-    "AUTH_PASSWD",
+    "AUTH_LOGIN_PASSWD",
     "AUTH_CRAMMD5",
     "AUTH_DIGESTMD5",
     "AUTH_DIGESTMD5_RESP",
     "AUTH_NTLM",
     "AUTH_NTLM_TYPE2MSG",
-    "AUTH",
+    "AUTH_FINAL",
     "MAIL",
     "RCPT",
     "DATA",
     "POSTDATA",
     "QUIT",
     /* LAST */
@@ -315,55 +329,86 @@
 
   smtpc->state = newstate;
 }
 
 static CURLcode smtp_state_ehlo(struct connectdata *conn)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
 
   smtpc->authmechs = 0;         /* No known authentication mechanisms yet */
   smtpc->authused = 0;          /* Clear the authentication mechanism used
                                    for esmtp connections */
+  smtpc->tls_supported = FALSE; /* Clear the TLS capability */
 
   /* Send the EHLO command */
   result = Curl_pp_sendf(&smtpc->pp, "EHLO %s", smtpc->domain);
 
-  if(result)
-    return result;
+  if(!result)
+    state(conn, SMTP_EHLO);
 
-  state(conn, SMTP_EHLO);
-
-  return CURLE_OK;
+  return result;
 }
 
 static CURLcode smtp_state_helo(struct connectdata *conn)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
 
   smtpc->authused = 0;          /* No authentication mechanism used in smtp
                                    connections */
 
   /* Send the HELO command */
   result = Curl_pp_sendf(&smtpc->pp, "HELO %s", smtpc->domain);
 
-  if(result)
-    return result;
+  if(!result)
+    state(conn, SMTP_HELO);
+
+  return result;
+}
 
-  state(conn, SMTP_HELO);
+static CURLcode smtp_state_starttls(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
 
-  return CURLE_OK;
+  /* Send the STARTTLS command */
+  result = Curl_pp_sendf(&conn->proto.smtpc.pp, "STARTTLS");
+
+  if(!result)
+    state(conn, SMTP_STARTTLS);
+
+  return result;
+}
+
+static CURLcode smtp_state_upgrade_tls(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+  struct smtp_conn *smtpc = &conn->proto.smtpc;
+
+  /* Start the SSL connection */
+  result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &smtpc->ssldone);
+
+  if(!result) {
+    if(smtpc->state != SMTP_UPGRADETLS)
+      state(conn, SMTP_UPGRADETLS);
+
+    if(smtpc->ssldone) {
+      smtp_to_smtps(conn);
+      result = smtp_state_ehlo(conn);
+    }
+  }
+
+  return result;
 }
 
 static CURLcode smtp_authenticate(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
-  char *initresp = NULL;
   const char *mech = NULL;
+  char *initresp = NULL;
   size_t len = 0;
   smtpstate state1 = SMTP_STOP;
   smtpstate state2 = SMTP_STOP;
 
   /* Check we have a username and password to authenticate with and end the
      connect phase if we don't */
@@ -400,21 +445,21 @@
   }
   else
 #endif
   if(smtpc->authmechs & SASL_MECH_LOGIN) {
     mech = "LOGIN";
     state1 = SMTP_AUTH_LOGIN;
-    state2 = SMTP_AUTH_PASSWD;
+    state2 = SMTP_AUTH_LOGIN_PASSWD;
     smtpc->authused = SASL_MECH_LOGIN;
     result = Curl_sasl_create_login_message(conn->data, conn->user,
                                             &initresp, &len);
   }
   else if(smtpc->authmechs & SASL_MECH_PLAIN) {
     mech = "PLAIN";
     state1 = SMTP_AUTH_PLAIN;
-    state2 = SMTP_AUTH;
+    state2 = SMTP_AUTH_FINAL;
     smtpc->authused = SASL_MECH_PLAIN;
     result = Curl_sasl_create_plain_message(conn->data, conn->user,
                                             conn->passwd, &initresp, &len);
   }
   else {
     /* Other mechanisms not supported */
@@ -441,28 +486,12 @@
     Curl_safefree(initresp);
   }
 
   return result;
 }
 
-/* For the SMTP "protocol connect" and "doing" phases only */
-static int smtp_getsock(struct connectdata *conn, curl_socket_t *socks,
-                        int numsocks)
-{
-  return Curl_pp_getsock(&conn->proto.smtpc.pp, socks, numsocks);
-}
-
-#ifdef USE_SSL
-static void smtp_to_smtps(struct connectdata *conn)
-{
-  conn->handler = &Curl_handler_smtps;
-}
-#else
-#define smtp_to_smtps(x) Curl_nop_stmt
-#endif
-
 /* For the initial server greeting */
 static CURLcode smtp_state_servergreet_resp(struct connectdata *conn,
                                             int smtpcode,
                                             smtpstate instate)
 {
   CURLcode result = CURLE_OK;
@@ -501,38 +530,19 @@
   else
     result = smtp_state_upgrade_tls(conn);
 
   return result;
 }
 
-static CURLcode smtp_state_upgrade_tls(struct connectdata *conn)
-{
-  struct smtp_conn *smtpc = &conn->proto.smtpc;
-  CURLcode result;
-
-  result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &smtpc->ssldone);
-
-  if(!result) {
-    if(smtpc->state != SMTP_UPGRADETLS)
-      state(conn, SMTP_UPGRADETLS);
-
-    if(smtpc->ssldone) {
-      smtp_to_smtps(conn);
-      result = smtp_state_ehlo(conn);
-    }
-  }
-
-  return result;
-}
-
 /* For EHLO responses */
 static CURLcode smtp_state_ehlo_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
+  struct smtp_conn *smtpc = &conn->proto.smtpc;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     if((data->set.use_ssl <= CURLUSESSL_TRY || conn->ssl[FIRSTSOCKET].use) &&
      !conn->bits.user_passwd)
@@ -540,17 +550,23 @@
     else {
       failf(data, "Remote access denied: %d", smtpcode);
       result = CURLE_REMOTE_ACCESS_DENIED;
     }
   }
   else if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
-    /* We don't have a SSL/TLS connection yet, but SSL is requested. Switch
-       to TLS connection now */
-    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "STARTTLS");
-    if(!result)
-      state(conn, SMTP_STARTTLS);
+    /* We don't have a SSL/TLS connection yet, but SSL is requested */
+    if(smtpc->tls_supported)
+      /* Switch to TLS connection now */
+      result = smtp_state_starttls(conn);
+    else if(data->set.use_ssl == CURLUSESSL_TRY)
+      /* Fallback and carry on with authentication */
+      result = smtp_authenticate(conn);
+    else {
+      failf(data, "STARTTLS not supported.");
+      result = CURLE_USE_SSL_FAILED;
+    }
   }
   else
     result = smtp_authenticate(conn);
 
   return result;
 }
@@ -599,13 +615,13 @@
     /* Send the message */
     if(!result) {
       if(plainauth) {
         result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", plainauth);
 
         if(!result)
-          state(conn, SMTP_AUTH);
+          state(conn, SMTP_AUTH_FINAL);
       }
 
       Curl_safefree(plainauth);
     }
   }
 
@@ -636,26 +652,26 @@
     /* Send the user */
     if(!result) {
       if(authuser) {
         result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", authuser);
 
         if(!result)
-          state(conn, SMTP_AUTH_PASSWD);
+          state(conn, SMTP_AUTH_LOGIN_PASSWD);
       }
 
       Curl_safefree(authuser);
     }
   }
 
   return result;
 }
 
-/* For responses to user entry of AUTH LOGIN */
-static CURLcode smtp_state_auth_passwd_resp(struct connectdata *conn,
-                                            int smtpcode,
-                                            smtpstate instate)
+/* For AUTH LOGIN user entry responses */
+static CURLcode smtp_state_auth_login_password_resp(struct connectdata *conn,
+                                                    int smtpcode,
+                                                    smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
   size_t len = 0;
   char *authpasswd = NULL;
 
@@ -673,13 +689,13 @@
     /* Send the password */
     if(!result) {
       if(authpasswd) {
         result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", authpasswd);
 
         if(!result)
-          state(conn, SMTP_AUTH);
+          state(conn, SMTP_AUTH_FINAL);
       }
 
       Curl_safefree(authpasswd);
     }
   }
 
@@ -728,13 +744,13 @@
   /* Send the response */
   if(!result) {
     if(rplyb64) {
       result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", rplyb64);
 
       if(!result)
-        state(conn, SMTP_AUTH);
+        state(conn, SMTP_AUTH_FINAL);
     }
 
     Curl_safefree(rplyb64);
   }
 
   return result;
@@ -798,13 +814,13 @@
   }
   else {
     /* Send an empty response */
     result = Curl_pp_sendf(&conn->proto.smtpc.pp, "");
 
     if(!result)
-      state(conn, SMTP_AUTH);
+      state(conn, SMTP_AUTH_FINAL);
   }
 
   return result;
 }
 
 #endif
@@ -875,26 +891,27 @@
     /* Send the message */
     if(!result) {
       if(type3msg) {
         result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", type3msg);
 
         if(!result)
-          state(conn, SMTP_AUTH);
+          state(conn, SMTP_AUTH_FINAL);
       }
 
       Curl_safefree(type3msg);
     }
   }
 
   return result;
 }
 #endif
 
 /* For the final responses to the AUTH sequence */
-static CURLcode smtp_state_auth_resp(struct connectdata *conn, int smtpcode,
-                                     smtpstate instate)
+static CURLcode smtp_state_auth_final_resp(struct connectdata *conn,
+                                           int smtpcode,
+                                           smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
@@ -972,33 +989,32 @@
                            "MAIL FROM:%s SIZE=%s", from, size);
 
   Curl_safefree(from);
   Curl_safefree(auth);
   Curl_safefree(size);
 
-  if(result)
-    return result;
-
-  state(conn, SMTP_MAIL);
+  if(!result)
+    state(conn, SMTP_MAIL);
 
   return result;
 }
 
 static CURLcode smtp_rcpt_to(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct smtp_conn *smtpc = &conn->proto.smtpc;
+  struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->state.proto.smtp;
 
   /* Send the RCPT TO command */
-  if(smtpc->rcpt) {
-    if(smtpc->rcpt->data[0] == '<')
+  if(smtp->rcpt) {
+    if(smtp->rcpt->data[0] == '<')
       result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:%s",
-                             smtpc->rcpt->data);
+                             smtp->rcpt->data);
     else
       result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:<%s>",
-                             smtpc->rcpt->data);
+                             smtp->rcpt->data);
     if(!result)
       state(conn, SMTP_RCPT);
   }
 
   return result;
 }
@@ -1006,23 +1022,23 @@
 /* For MAIL responses */
 static CURLcode smtp_state_mail_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->state.proto.smtp;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "MAIL failed: %d", smtpcode);
     result = CURLE_SEND_ERROR;
     state(conn, SMTP_STOP);
   }
   else {
-    struct smtp_conn *smtpc = &conn->proto.smtpc;
-    smtpc->rcpt = data->set.mail_rcpt;
+    smtp->rcpt = data->set.mail_rcpt;
 
     result = smtp_rcpt_to(conn);
   }
 
   return result;
 }
@@ -1030,63 +1046,56 @@
 /* For RCPT responses */
 static CURLcode smtp_state_rcpt_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->state.proto.smtp;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "RCPT failed: %d", smtpcode);
     result = CURLE_SEND_ERROR;
     state(conn, SMTP_STOP);
   }
   else {
-    struct smtp_conn *smtpc = &conn->proto.smtpc;
-
-    if(smtpc->rcpt) {
-      smtpc->rcpt = smtpc->rcpt->next;
+    if(smtp->rcpt) {
+      smtp->rcpt = smtp->rcpt->next;
       result = smtp_rcpt_to(conn);
 
       /* If we failed or still are sending RCPT data then return */
-      if(result || smtpc->rcpt)
+      if(result || smtp->rcpt)
         return result;
     }
 
     /* Send the DATA command */
     result = Curl_pp_sendf(&conn->proto.smtpc.pp, "DATA");
 
-    if(result)
-      return result;
-
-    state(conn, SMTP_DATA);
+    if(!result)
+      state(conn, SMTP_DATA);
   }
 
   return result;
 }
 
 /* For DATA response */
 static CURLcode smtp_state_data_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
-  struct SessionHandle *data = conn->data;
-  struct FTP *smtp = data->state.proto.smtp;
-
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 354) {
     state(conn, SMTP_STOP);
     return CURLE_SEND_ERROR;
   }
 
   /* SMTP upload */
-  Curl_setup_transfer(conn, -1, -1, FALSE, NULL, /* no download */
-                      FIRSTSOCKET, smtp->bytecountp);
+  Curl_setup_transfer(conn, -1, -1, FALSE, NULL, FIRSTSOCKET, NULL);
 
-  /* End of do phase */
+  /* End of DO phase */
   state(conn, SMTP_STOP);
 
   return CURLE_OK;
 }
 
 /* For POSTDATA responses, which are received after the entire DATA
@@ -1099,21 +1108,21 @@
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 250)
     result = CURLE_RECV_ERROR;
 
-  /* End of done phase */
+  /* End of DONE phase */
   state(conn, SMTP_STOP);
 
   return result;
 }
 
 static CURLcode smtp_statemach_act(struct connectdata *conn)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   struct SessionHandle *data = conn->data;
   int smtpcode;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   struct pingpong *pp = &smtpc->pp;
   size_t nread = 0;
@@ -1159,14 +1168,15 @@
       break;
 
     case SMTP_AUTH_LOGIN:
       result = smtp_state_auth_login_resp(conn, smtpcode, smtpc->state);
       break;
 
-    case SMTP_AUTH_PASSWD:
-      result = smtp_state_auth_passwd_resp(conn, smtpcode, smtpc->state);
+    case SMTP_AUTH_LOGIN_PASSWD:
+      result = smtp_state_auth_login_password_resp(conn, smtpcode,
+                                                   smtpc->state);
       break;
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
     case SMTP_AUTH_CRAMMD5:
       result = smtp_state_auth_cram_resp(conn, smtpcode, smtpc->state);
       break;
@@ -1188,14 +1198,14 @@
     case SMTP_AUTH_NTLM_TYPE2MSG:
       result = smtp_state_auth_ntlm_type2msg_resp(conn, smtpcode,
                                                   smtpc->state);
       break;
 #endif
 
-    case SMTP_AUTH:
-      result = smtp_state_auth_resp(conn, smtpcode, smtpc->state);
+    case SMTP_AUTH_FINAL:
+      result = smtp_state_auth_final_resp(conn, smtpcode, smtpc->state);
       break;
 
     case SMTP_MAIL:
       result = smtp_state_mail_resp(conn, smtpcode, smtpc->state);
       break;
 
@@ -1223,64 +1233,58 @@
   return result;
 }
 
 /* Called repeatedly until done from multi.c */
 static CURLcode smtp_multi_statemach(struct connectdata *conn, bool *done)
 {
+  CURLcode result = CURLE_OK;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
-  CURLcode result;
 
   if((conn->handler->flags & PROTOPT_SSL) && !smtpc->ssldone)
     result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, &smtpc->ssldone);
   else
-    result = Curl_pp_multi_statemach(&smtpc->pp);
+    result = Curl_pp_statemach(&smtpc->pp, FALSE);
 
   *done = (smtpc->state == SMTP_STOP) ? TRUE : FALSE;
 
   return result;
 }
 
-static CURLcode smtp_easy_statemach(struct connectdata *conn)
+static CURLcode smtp_block_statemach(struct connectdata *conn)
 {
-  struct smtp_conn *smtpc = &conn->proto.smtpc;
-  struct pingpong *pp = &smtpc->pp;
   CURLcode result = CURLE_OK;
+  struct smtp_conn *smtpc = &conn->proto.smtpc;
 
-  while(smtpc->state != SMTP_STOP) {
-    result = Curl_pp_easy_statemach(pp);
-    if(result)
-      break;
-  }
+  while(smtpc->state != SMTP_STOP && !result)
+    result = Curl_pp_statemach(&smtpc->pp, TRUE);
 
   return result;
 }
 
 /* Allocate and initialize the SMTP struct for the current SessionHandle if
    required */
 static CURLcode smtp_init(struct connectdata *conn)
 {
+  CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct FTP *smtp = data->state.proto.smtp;
+  struct SMTP *smtp = data->state.proto.smtp;
 
   if(!smtp) {
-    smtp = data->state.proto.smtp = calloc(sizeof(struct FTP), 1);
+    smtp = data->state.proto.smtp = calloc(sizeof(struct SMTP), 1);
     if(!smtp)
-      return CURLE_OUT_OF_MEMORY;
+      result = CURLE_OUT_OF_MEMORY;
   }
 
-  /* Get some initial data into the smtp struct */
-  smtp->bytecountp = &data->req.bytecount;
-
-  /* No need to duplicate user+password, the connectdata struct won't change
-     during a session, but we re-init them here since on subsequent inits
-     since the conn struct may have changed or been replaced.
-  */
-  smtp->user = conn->user;
-  smtp->passwd = conn->passwd;
+  return result;
+}
 
-  return CURLE_OK;
+/* For the SMTP "protocol connect" and "doing" phases only */
+static int smtp_getsock(struct connectdata *conn, curl_socket_t *socks,
+                        int numsocks)
+{
+  return Curl_pp_getsock(&conn->proto.smtpc.pp, socks, numsocks);
 }
 
 /***********************************************************************
  *
  * smtp_connect()
  *
@@ -1290,45 +1294,41 @@
  * The variable pointed to by 'done' will be TRUE if the protocol-layer
  * connect phase is done when this function returns, or FALSE if not. When
  * called as a part of the easy interface, it will always be TRUE.
  */
 static CURLcode smtp_connect(struct connectdata *conn, bool *done)
 {
-  CURLcode result;
+  CURLcode result = CURLE_OK;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   struct pingpong *pp = &smtpc->pp;
   const char *path = conn->data->state.path;
   char localhost[HOSTNAME_MAX + 1];
 
   *done = FALSE; /* default to not done yet */
 
   /* If there already is a protocol-specific struct allocated for this
      sessionhandle, deal with it */
   Curl_reset_reqproto(conn);
 
+  /* Initialise the SMTP layer */
   result = smtp_init(conn);
-  if(CURLE_OK != result)
+  if(result)
     return result;
 
-  /* We always support persistent connections on smtp */
+  /* We always support persistent connections in SMTP */
   conn->bits.close = FALSE;
 
-  pp->response_time = RESP_TIMEOUT; /* set default response time-out */
-  pp->statemach_act = smtp_statemach_act;
-  pp->endofresp = smtp_endofresp;
-  pp->conn = conn;
-
-  /* Initialise the response reader stuff */
-  Curl_pp_init(pp);
-
   /* Set the default response time-out */
   pp->response_time = RESP_TIMEOUT;
   pp->statemach_act = smtp_statemach_act;
   pp->endofresp = smtp_endofresp;
   pp->conn = conn;
 
+  /* Initialise the pingpong layer */
+  Curl_pp_init(pp);
+
   /* Calculate the path if necessary */
   if(!*path) {
     if(!Curl_gethostname(localhost, sizeof(localhost)))
       path = localhost;
     else
       path = "localhost";
@@ -1356,25 +1356,24 @@
  *
  * Input argument is already checked for validity.
  */
 static CURLcode smtp_done(struct connectdata *conn, CURLcode status,
                           bool premature)
 {
-  struct SessionHandle *data = conn->data;
-  struct FTP *smtp = data->state.proto.smtp;
   CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->state.proto.smtp;
   ssize_t bytes_written;
 
   (void)premature;
 
   if(!smtp)
-    /* When the easy handle is removed from the multi while libcurl is still
-     * trying to resolve the host name, it seems that the smtp struct is not
-     * yet initialized, but the removal action calls Curl_done() which calls
-     * this function. So we simply return success if no smtp pointer is set.
-     */
+    /* When the easy handle is removed from the multi interface while libcurl
+       is still trying to resolve the host name, the SMTP struct is not yet
+       initialized. However, the removal action calls Curl_done() which in
+       turn calls this function, so we simply return success. */
     return CURLE_OK;
 
   if(status) {
     conn->bits.close = TRUE; /* marked for closure */
     result = status;         /* use the already set error code */
   }
@@ -1409,39 +1408,39 @@
 
        TODO: when the multi interface is used, this _really_ should be using
        the smtp_multi_statemach function but we have no general support for
        non-blocking DONE operations, not in the multi state machine and with
        Curl_done() invokes on several places in the code!
     */
-    result = smtp_easy_statemach(conn);
+    result = smtp_block_statemach(conn);
   }
 
-  /* Clear the transfer mode for the next connection */
+  /* Clear the transfer mode for the next request */
   smtp->transfer = FTPTRANSFER_BODY;
 
   return result;
 }
 
 /***********************************************************************
  *
  * smtp_perform()
  *
- * This is the actual DO function for SMTP. Get a file/directory according to
- * the options previously setup.
+ * This is the actual DO function for SMTP. Send a mail according to the
+ * options previously setup.
  */
 static CURLcode smtp_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is SMTP and no proxy */
   CURLcode result = CURLE_OK;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
   if(conn->data->set.opt_no_body) {
     /* Requested no body means no transfer */
-    struct FTP *smtp = conn->data->state.proto.smtp;
+    struct SMTP *smtp = conn->data->state.proto.smtp;
     smtp->transfer = FTPTRANSFER_INFO;
   }
 
   *dophase_done = FALSE; /* not done yet */
 
   /* Start the first command in the DO phase */
@@ -1468,51 +1467,45 @@
  * parts etc as a wrapper to the actual DO function (smtp_perform).
  *
  * The input argument is already checked for validity.
  */
 static CURLcode smtp_do(struct connectdata *conn, bool *done)
 {
-  CURLcode retcode = CURLE_OK;
+  CURLcode result = CURLE_OK;
 
   *done = FALSE; /* default to false */
 
-  /*
-    Since connections can be re-used between SessionHandles, this might be a
-    connection already existing but on a fresh SessionHandle struct so we must
-    make sure we have a good 'struct SMTP' to play with. For new connections,
-    the struct SMTP is allocated and setup in the smtp_connect() function.
-  */
+  /* Since connections can be re-used between SessionHandles, there might be a
+     connection already existing but on a fresh SessionHandle struct. As such
+     we make sure we have a good SMTP struct to play with. For new connections
+     the SMTP struct is allocated and setup in the smtp_connect() function. */
   Curl_reset_reqproto(conn);
-  retcode = smtp_init(conn);
-  if(retcode)
-    return retcode;
+  result = smtp_init(conn);
+  if(result)
+    return result;
 
-  retcode = smtp_regular_transfer(conn, done);
+  result = smtp_regular_transfer(conn, done);
 
-  return retcode;
+  return result;
 }
 
 /***********************************************************************
  *
  * smtp_quit()
  *
- * This should be called before calling sclose().  We should then wait for the
- * response from the server before returning. The calling code should then try
- * to close the connection.
+ * Performs the quit action prior to sclose() being called.
  */
 static CURLcode smtp_quit(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
 
+  /* Send the QUIT command */
   result = Curl_pp_sendf(&conn->proto.smtpc.pp, "QUIT");
-  if(result)
-    return result;
 
-  state(conn, SMTP_QUIT);
-
-  result = smtp_easy_statemach(conn);
+  if(!result)
+    state(conn, SMTP_QUIT);
 
   return result;
 }
 
 /***********************************************************************
  *
@@ -1525,18 +1518,19 @@
                                 bool dead_connection)
 {
   struct smtp_conn *smtpc = &conn->proto.smtpc;
 
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
-     disconnect wait in vain and cause more problems than we need to */
+     disconnect wait in vain and cause more problems than we need to. */
 
   /* The SMTP session may or may not have been allocated/setup at this
      point! */
   if(!dead_connection && smtpc->pp.conn)
-    (void)smtp_quit(conn); /* ignore errors on the LOGOUT */
+    if(!smtp_quit(conn))
+      (void)smtp_block_statemach(conn); /* ignore errors on QUIT */
 
   /* Disconnect from the server */
   Curl_pp_disconnect(&smtpc->pp);
 
   /* Cleanup the SASL module */
   Curl_sasl_cleanup(conn, smtpc->authused);
@@ -1547,13 +1541,13 @@
   return CURLE_OK;
 }
 
 /* Call this when the DO phase has completed */
 static CURLcode smtp_dophase_done(struct connectdata *conn, bool connected)
 {
-  struct FTP *smtp = conn->data->state.proto.smtp;
+  struct SMTP *smtp = conn->data->state.proto.smtp;
 
   (void)connected;
 
   if(smtp->transfer != FTPTRANSFER_BODY)
     /* no data to transfer */
     Curl_setup_transfer(conn, -1, -1, FALSE, NULL, -1, NULL);
@@ -1565,18 +1559,16 @@
 static CURLcode smtp_doing(struct connectdata *conn, bool *dophase_done)
 {
   CURLcode result = smtp_multi_statemach(conn, dophase_done);
 
   if(result)
     DEBUGF(infof(conn->data, "DO phase failed\n"));
-  else {
-    if(*dophase_done) {
-      result = smtp_dophase_done(conn, FALSE /* not connected */);
+  else if(*dophase_done) {
+    result = smtp_dophase_done(conn, FALSE /* not connected */);
 
-      DEBUGF(infof(conn->data, "DO phase is complete\n"));
-    }
+    DEBUGF(infof(conn->data, "DO phase is complete\n"));
   }
 
   return result;
 }
 
 /***********************************************************************
@@ -1595,36 +1587,34 @@
   bool connected = FALSE;
   struct SessionHandle *data = conn->data;
 
   /* Make sure size is unknown at this point */
   data->req.size = -1;
 
+  /* Set the progress data */
   Curl_pgrsSetUploadCounter(data, 0);
   Curl_pgrsSetDownloadCounter(data, 0);
   Curl_pgrsSetUploadSize(data, 0);
   Curl_pgrsSetDownloadSize(data, 0);
 
+  /* Carry out the perform */
   result = smtp_perform(conn, &connected, dophase_done);
 
-  if(CURLE_OK == result) {
-    if(!*dophase_done)
-      /* The DO phase has not completed yet */
-      return CURLE_OK;
-
+  /* Perform post DO phase operations if necessary */
+  if(!result && *dophase_done)
     result = smtp_dophase_done(conn, connected);
-  }
 
   return result;
 }
 
 static CURLcode smtp_setup_connection(struct connectdata *conn)
 {
   struct SessionHandle *data = conn->data;
 
   if(conn->bits.httpproxy && !data->set.tunnel_thru_httpproxy) {
-    /* Unless we have asked to tunnel smtp operations through the proxy, we
+    /* Unless we have asked to tunnel SMTP operations through the proxy, we
        switch and use HTTP operations only */
 #ifndef CURL_DISABLE_HTTP
     if(conn->handler == &Curl_handler_smtp)
       conn->handler = &Curl_handler_smtp_proxy;
     else {
 #ifdef USE_SSL
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/smtp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/smtp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/smtp.h	2013-01-28 06:12:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/smtp.h	2013-03-05 18:02:20.000000000 +0800
@@ -35,39 +35,48 @@
   SMTP_HELO,
   SMTP_STARTTLS,
   SMTP_UPGRADETLS,  /* asynchronously upgrade the connection to SSL/TLS
                        (multi mode only) */
   SMTP_AUTH_PLAIN,
   SMTP_AUTH_LOGIN,
-  SMTP_AUTH_PASSWD,
+  SMTP_AUTH_LOGIN_PASSWD,
   SMTP_AUTH_CRAMMD5,
   SMTP_AUTH_DIGESTMD5,
   SMTP_AUTH_DIGESTMD5_RESP,
   SMTP_AUTH_NTLM,
   SMTP_AUTH_NTLM_TYPE2MSG,
-  SMTP_AUTH,
+  SMTP_AUTH_FINAL,
   SMTP_MAIL,        /* MAIL FROM */
   SMTP_RCPT,        /* RCPT TO */
   SMTP_DATA,
   SMTP_POSTDATA,
   SMTP_QUIT,
   SMTP_LAST         /* never used */
 } smtpstate;
 
+/* This SMTP struct is used in the SessionHandle. All SMTP data that is
+   connection-oriented must be in smtp_conn to properly deal with the fact that
+   perhaps the SessionHandle is changed between the times the connection is
+   used. */
+struct SMTP {
+  curl_pp_transfer transfer;
+  struct curl_slist *rcpt; /* Recipient list */
+};
+
 /* smtp_conn is used for struct connection-oriented data in the connectdata
    struct */
 struct smtp_conn {
   struct pingpong pp;
+  smtpstate state;         /* Always use smtp.c:state() to change state! */
+  bool ssldone;            /* Is connect() over SSL done? */
   char *domain;            /* Client address/name to send in the EHLO */
   size_t eob;              /* Number of bytes of the EOB (End Of Body) that
                               have been received so far */
   unsigned int authmechs;  /* Accepted authentication mechanisms */
   unsigned int authused;   /* Auth mechanism used for the connection */
-  smtpstate state;         /* Always use smtp.c:state() to change state! */
-  struct curl_slist *rcpt; /* Recipient list */
-  bool ssldone;            /* Is connect() over SSL done? */
+  bool tls_supported;      /* StartTLS capability supported by server */
   bool size_supported;     /* If server supports SIZE extension according to
                               RFC 1870 */
 };
 
 extern const struct Curl_handler Curl_handler_smtp;
 extern const struct Curl_handler Curl_handler_smtps;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/socks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/socks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/socks.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/socks.c	2013-02-14 17:41:45.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -193,14 +193,21 @@
   }
 
   /*
    * This is currently not supporting "Identification Protocol (RFC1413)".
    */
   socksreq[8] = 0; /* ensure empty userid is NUL-terminated */
-  if(proxy_name)
-    strlcat((char*)socksreq + 8, proxy_name, sizeof(socksreq) - 8);
+  if(proxy_name) {
+    size_t plen = strlen(proxy_name);
+    if(plen >= sizeof(socksreq) - 8) {
+      failf(data, "Too long SOCKS proxy name, can't use!\n");
+      return CURLE_COULDNT_CONNECT;
+    }
+    /* copy the proxy name WITH trailing zero */
+    memcpy(socksreq + 8, proxy_name, plen+1);
+  }
 
   /*
    * Make connection
    */
   {
     ssize_t actualread;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ssh.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ssh.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ssh.c	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ssh.c	2013-02-15 18:05:20.000000000 +0800
@@ -2632,13 +2632,13 @@
   *done = (sshc->state == SSH_STOP) ? TRUE : FALSE;
   ssh_block2waitfor(conn, block);
 
   return result;
 }
 
-static CURLcode ssh_easy_statemach(struct connectdata *conn,
+static CURLcode ssh_block_statemach(struct connectdata *conn,
                                    bool duringconnect)
 {
   struct ssh_conn *sshc = &conn->proto.sshc;
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
 
@@ -2899,13 +2899,13 @@
 
   if(ssh->ssh_session) {
     /* only if there's a session still around to use! */
 
     state(conn, SSH_SESSION_DISCONNECT);
 
-    result = ssh_easy_statemach(conn, FALSE);
+    result = ssh_block_statemach(conn, FALSE);
   }
 
   return result;
 }
 
 /* generic done function for both SCP and SFTP called from their specific
@@ -2920,13 +2920,13 @@
 
        TODO: when the multi interface is used, this _really_ should be using
        the ssh_multi_statemach function but we have no general support for
        non-blocking DONE operations, not in the multi state machine and with
        Curl_done() invokes on several places in the code!
     */
-    result = ssh_easy_statemach(conn, FALSE);
+    result = ssh_block_statemach(conn, FALSE);
   }
   else
     result = status;
 
   if(sftp_scp)
     Curl_safefree(sftp_scp->path);
@@ -3062,13 +3062,13 @@
 
   Curl_safefree(conn->data->state.proto.ssh);
 
   if(conn->proto.sshc.ssh_session) {
     /* only if there's a session still around to use! */
     state(conn, SSH_SFTP_SHUTDOWN);
-    result = ssh_easy_statemach(conn, FALSE);
+    result = ssh_block_statemach(conn, FALSE);
   }
 
   DEBUGF(infof(conn->data, "SSH DISCONNECT is done\n"));
 
   return result;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ssluse.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ssluse.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/ssluse.c	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/ssluse.c	2013-03-05 18:02:20.000000000 +0800
@@ -233,33 +233,18 @@
     }
   }
 #endif
 
   /* If we get here, it means we need to seed the PRNG using a "silly"
      approach! */
-  {
-    int len;
-    char *area;
-
-    /* Changed call to RAND_seed to use the underlying RAND_add implementation
-     * directly.  Do this in a loop, with the amount of additional entropy
-     * being dependent upon the algorithm used by Curl_FormBoundary(): N bytes
-     * of a 7-bit ascii set. -- Richard Gorton, March 11 2003.
-     */
-
-    do {
-      area = Curl_FormBoundary();
-      if(!area)
-        return 3; /* out of memory */
-
-      len = curlx_uztosi(strlen(area));
-      RAND_add(area, len, (len >> 1));
-
-      free(area); /* now remove the random junk */
-    } while(!RAND_status());
-  }
+  do {
+    unsigned char randb[64];
+    int len = sizeof(randb);
+    RAND_bytes(randb, len);
+    RAND_add(randb, len, (len >> 1));
+  } while(!RAND_status());
 
   /* generates a default path for the random seed file */
   buf[0]=0; /* blank it first */
   RAND_file_name(buf, BUFSIZE);
   if(buf[0]) {
     /* we got a file name to try */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/strequal.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/strequal.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/strequal.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/strequal.c	2013-02-14 17:41:45.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -74,51 +74,6 @@
   if(0 == max)
     return 1; /* they are equal this far */
 
   return toupper(*first) == toupper(*second);
 #endif
 }
-
-#ifndef HAVE_STRLCAT
-/*
- * The strlcat() function appends the NUL-terminated string src to the end
- * of dst. It will append at most size - strlen(dst) - 1 bytes, NUL-termi-
- * nating the result.
- *
- * The strlcpy() and strlcat() functions return the total length of the
- * string they tried to create.  For strlcpy() that means the length of src.
- * For strlcat() that means the initial length of dst plus the length of
- * src. While this may seem somewhat confusing it was done to make trunca-
- * tion detection simple.
- *
- *
- */
-size_t Curl_strlcat(char *dst, const char *src, size_t siz)
-{
-  char *d = dst;
-  const char *s = src;
-  size_t n = siz;
-  union {
-    ssize_t sig;
-     size_t uns;
-  } dlen;
-
-  /* Find the end of dst and adjust bytes left but don't go past end */
-  while(n-- != 0 && *d != '\0')
-    d++;
-  dlen.sig = d - dst;
-  n = siz - dlen.uns;
-
-  if(n == 0)
-    return(dlen.uns + strlen(s));
-  while(*s != '\0') {
-    if(n != 1) {
-      *d++ = *s;
-      n--;
-    }
-    s++;
-  }
-  *d = '\0';
-
-  return(dlen.uns + (s - src));     /* count does not include NUL */
-}
-#endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/strequal.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/strequal.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/strequal.h	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/strequal.h	2013-02-14 17:41:45.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -24,13 +24,8 @@
 
 #include <curl/curl.h>
 
 #define strequal(a,b) curl_strequal(a,b)
 #define strnequal(a,b,c) curl_strnequal(a,b,c)
 
-#ifndef HAVE_STRLCAT
-#define strlcat(x,y,z) Curl_strlcat(x,y,z)
-#endif
-size_t strlcat(char *dst, const char *src, size_t siz);
-
 #endif /* HEADER_CURL_STREQUAL_H */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/strerror.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/strerror.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/strerror.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/strerror.c	2013-04-12 02:46:54.000000000 +0800
@@ -289,12 +289,15 @@
   case CURLE_FTP_BAD_FILE_LIST:
     return "Unable to parse FTP file list";
 
   case CURLE_CHUNK_FAILED:
     return "Chunk callback failed";
 
+  case CURLE_NO_CONNECTION_AVAILABLE:
+    return "The max connection limit is reached";
+
     /* error codes not used by current libcurl */
   case CURLE_OBSOLETE16:
   case CURLE_OBSOLETE20:
   case CURLE_OBSOLETE24:
   case CURLE_OBSOLETE29:
   case CURLE_OBSOLETE32:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/transfer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/transfer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/transfer.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/transfer.c	2013-04-12 02:46:54.000000000 +0800
@@ -470,13 +470,13 @@
       }
 
       if(stop_reading) {
         /* We've stopped dealing with input, get out of the do-while loop */
 
         if(nread > 0) {
-          if(conn->data->multi && Curl_multi_canPipeline(conn->data->multi)) {
+          if(Curl_multi_pipeline_enabled(conn->data->multi)) {
             infof(data,
                   "Rewinding stream by : %zd"
                   " bytes on url %s (zero-length body)\n",
                   nread, data->state.path);
             read_rewind(conn, (size_t)nread);
           }
@@ -599,14 +599,13 @@
              Push it back to be read on the next pass. */
 
           dataleft = conn->chunk.dataleft;
           if(dataleft != 0) {
             infof(conn->data, "Leftovers after chunking: %zu bytes\n",
                   dataleft);
-            if(conn->data->multi &&
-               Curl_multi_canPipeline(conn->data->multi)) {
+            if(Curl_multi_pipeline_enabled(conn->data->multi)) {
               /* only attempt the rewind if we truly are pipelining */
               infof(conn->data, "Rewinding %zu bytes\n",dataleft);
               read_rewind(conn, dataleft);
             }
           }
         }
@@ -623,13 +622,13 @@
 
       if((-1 != k->maxdownload) &&
          (k->bytecount + nread >= k->maxdownload)) {
 
         excess = (size_t)(k->bytecount + nread - k->maxdownload);
         if(excess > 0 && !k->ignorebody) {
-          if(conn->data->multi && Curl_multi_canPipeline(conn->data->multi)) {
+          if(Curl_multi_pipeline_enabled(conn->data->multi)) {
             /* The 'excess' amount below can't be more than BUFSIZE which
                always will fit in a size_t */
             infof(data,
                   "Rewinding stream by : %zu"
                   " bytes on url %s (size = %" FORMAT_OFF_T
                   ", maxdownload = %" FORMAT_OFF_T
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/url.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/url.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/url.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/url.c	2013-04-12 02:46:54.000000000 +0800
@@ -120,23 +120,27 @@
 #include "curl_rtmp.h"
 #include "gopher.h"
 #include "http_proxy.h"
 #include "bundles.h"
 #include "conncache.h"
 #include "multihandle.h"
+#include "pipeline.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 /* Local static prototypes */
 static struct connectdata *
 find_oldest_idle_connection(struct SessionHandle *data);
+static struct connectdata *
+find_oldest_idle_connection_in_bundle(struct SessionHandle *data,
+                                      struct connectbundle *bundle);
 static void conn_free(struct connectdata *conn);
 static void signalPipeClose(struct curl_llist *pipeline, bool pipe_broke);
 static CURLcode do_init(struct connectdata *conn);
 static CURLcode parse_url_userpass(struct SessionHandle *data,
                                    struct connectdata *conn,
                                    char *user, char *passwd);
@@ -610,18 +614,15 @@
     data->progress.flags |= PGRS_HIDE;
     data->state.current_speed = -1; /* init to negative == impossible */
 
     data->wildcard.state = CURLWC_INIT;
     data->wildcard.filelist = NULL;
     data->set.fnmatch = ZERO_NULL;
-    /* This no longer creates a connection cache here. It is instead made on
-       the first call to curl_easy_perform() or when the handle is added to a
-       multi stack. */
+    data->set.maxconnects = DEFAULT_CONNCACHE_SIZE; /* for easy handles */
   }
 
-
   if(res) {
     Curl_resolver_cleanup(data->state.resolver);
     if(data->state.headerbuff)
       free(data->state.headerbuff);
     Curl_freeset(data);
     free(data);
@@ -1391,15 +1392,16 @@
      * error string in.
      */
     data->set.errorbuffer = va_arg(param, char *);
     break;
   case CURLOPT_FILE:
     /*
-     * FILE pointer to write to or include in the data write callback
+     * FILE pointer to write to. Or possibly
+     * used as argument to the write callback.
      */
-    data->set.out = va_arg(param, FILE *);
+    data->set.out = va_arg(param, void *);
     break;
   case CURLOPT_FTPPORT:
     /*
      * Use FTP PORT, this also specifies which IP address to use
      */
     result = setstropt(&data->set.str[STRING_FTPPORT],
@@ -1434,13 +1436,13 @@
 
   case CURLOPT_INFILE:
     /*
      * FILE pointer to read the file to be uploaded from. Or possibly
      * used as argument to the read callback.
      */
-    data->set.in = va_arg(param, FILE *);
+    data->set.in = va_arg(param, void *);
     break;
   case CURLOPT_INFILESIZE:
     /*
      * If known, this should inform curl about the file size of the
      * to-be-uploaded file.
      */
@@ -2466,19 +2468,15 @@
   Curl_safefree(conn->host.rawalloc); /* host name buffer */
   Curl_safefree(conn->proxy.rawalloc); /* proxy name buffer */
   Curl_safefree(conn->master_buffer);
 
   Curl_llist_destroy(conn->send_pipe, NULL);
   Curl_llist_destroy(conn->recv_pipe, NULL);
-  Curl_llist_destroy(conn->pend_pipe, NULL);
-  Curl_llist_destroy(conn->done_pipe, NULL);
 
   conn->send_pipe = NULL;
   conn->recv_pipe = NULL;
-  conn->pend_pipe = NULL;
-  conn->done_pipe = NULL;
 
   Curl_safefree(conn->localdev);
   Curl_free_ssl_config(&conn->ssl_config);
 
   free(conn); /* free all the connection oriented data */
 }
@@ -2519,19 +2517,19 @@
     if(has_proxy_ntlm) {
       data->state.authproxy.done = FALSE;
       data->state.authproxy.picked =
         data->state.authproxy.want;
     }
 
-    if(has_host_ntlm || has_proxy_ntlm) {
+    if(has_host_ntlm || has_proxy_ntlm)
       data->state.authproblem = FALSE;
-
-      Curl_http_ntlm_cleanup(conn);
-    }
   }
 
+  /* Cleanup NTLM connection-related data */
+  Curl_http_ntlm_cleanup(conn);
+
   /* Cleanup possible redirect junk */
   if(data->req.newurl) {
     free(data->req.newurl);
     data->req.newurl = NULL;
   }
 
@@ -2562,17 +2560,15 @@
                                    curl_win32_idn_to_ascii */
 #endif
 
   Curl_ssl_close(conn, FIRSTSOCKET);
 
   /* Indicate to all handles on the pipe that we're dead */
-  if(Curl_isPipeliningEnabled(data)) {
+  if(Curl_multi_pipeline_enabled(data->multi)) {
     signalPipeClose(conn->send_pipe, TRUE);
     signalPipeClose(conn->recv_pipe, TRUE);
-    signalPipeClose(conn->pend_pipe, TRUE);
-    signalPipeClose(conn->done_pipe, FALSE);
   }
 
   conn_free(conn);
   data->state.current_conn = NULL;
   Curl_speedinit(data);
 
@@ -2598,34 +2594,32 @@
 }
 
 static bool IsPipeliningPossible(const struct SessionHandle *handle,
                                  const struct connectdata *conn)
 {
   if((conn->handler->protocol & CURLPROTO_HTTP) &&
-     handle->multi && Curl_multi_canPipeline(handle->multi) &&
+     Curl_multi_pipeline_enabled(handle->multi) &&
      (handle->set.httpreq == HTTPREQ_GET ||
       handle->set.httpreq == HTTPREQ_HEAD) &&
      handle->set.httpversion != CURL_HTTP_VERSION_1_0)
     return TRUE;
 
   return FALSE;
 }
 
 bool Curl_isPipeliningEnabled(const struct SessionHandle *handle)
 {
-  if(handle->multi && Curl_multi_canPipeline(handle->multi))
-    return TRUE;
-
-  return FALSE;
+  return Curl_multi_pipeline_enabled(handle->multi);
 }
 
 CURLcode Curl_addHandleToPipeline(struct SessionHandle *data,
                                   struct curl_llist *pipeline)
 {
   if(!Curl_llist_insert_next(pipeline, pipeline->tail, data))
     return CURLE_OUT_OF_MEMORY;
+  infof(data, "Curl_addHandleToPipeline: length: %d\n", pipeline->size);
   return CURLE_OK;
 }
 
 int Curl_removeHandleFromPipeline(struct SessionHandle *handle,
                                   struct curl_llist *pipeline)
 {
@@ -2679,14 +2673,12 @@
     (gethandleathead(conn->send_pipe) == data)) ? TRUE : FALSE;
 
   if(Curl_removeHandleFromPipeline(data, conn->recv_pipe) && recv_head)
     conn->readchannel_inuse = FALSE;
   if(Curl_removeHandleFromPipeline(data, conn->send_pipe) && send_head)
     conn->writechannel_inuse = FALSE;
-  Curl_removeHandleFromPipeline(data, conn->pend_pipe);
-  Curl_removeHandleFromPipeline(data, conn->done_pipe);
 }
 
 static void signalPipeClose(struct curl_llist *pipeline, bool pipe_broke)
 {
   struct curl_llist_element *curr;
 
@@ -2711,14 +2703,14 @@
     Curl_llist_remove(pipeline, curr, NULL);
     curr = next;
   }
 }
 
 /*
- * This function kills and removes an existing connection in the connection
- * cache. The connection that has been unused for the longest time.
+ * This function finds the connection in the connection
+ * cache that has been unused for the longest time.
  *
  * Returns the pointer to the oldest idle connection, or NULL if none was
  * found.
  */
 static struct connectdata *
 find_oldest_idle_connection(struct SessionHandle *data)
@@ -2763,41 +2755,101 @@
   }
 
   return conn_candidate;
 }
 
 /*
+ * This function finds the connection in the connection
+ * bundle that has been unused for the longest time.
+ *
+ * Returns the pointer to the oldest idle connection, or NULL if none was
+ * found.
+ */
+static struct connectdata *
+find_oldest_idle_connection_in_bundle(struct SessionHandle *data,
+                                      struct connectbundle *bundle)
+{
+  struct curl_llist_element *curr;
+  long highscore=-1;
+  long score;
+  struct timeval now;
+  struct connectdata *conn_candidate = NULL;
+  struct connectdata *conn;
+
+  (void)data;
+
+  now = Curl_tvnow();
+
+  curr = bundle->conn_list->head;
+  while(curr) {
+    conn = curr->ptr;
+
+    if(!conn->inuse) {
+      /* Set higher score for the age passed since the connection was used */
+      score = Curl_tvdiff(now, conn->now);
+
+      if(score > highscore) {
+        highscore = score;
+        conn_candidate = conn;
+      }
+    }
+    curr = curr->next;
+  }
+
+  return conn_candidate;
+}
+
+/*
  * Given one filled in connection struct (named needle), this function should
  * detect if there already is one that has all the significant details
  * exactly the same and thus should be used instead.
  *
  * If there is a match, this function returns TRUE - and has marked the
  * connection as 'in-use'. It must later be called with ConnectionDone() to
  * return back to 'idle' (unused) state.
+ *
+ * The force_reuse flag is set if the connection must be used, even if
+ * the pipelining strategy wants to open a new connection instead of reusing.
  */
 static bool
 ConnectionExists(struct SessionHandle *data,
                  struct connectdata *needle,
-                 struct connectdata **usethis)
+                 struct connectdata **usethis,
+                 bool *force_reuse)
 {
   struct connectdata *check;
   struct connectdata *chosen = 0;
   bool canPipeline = IsPipeliningPossible(data, needle);
   bool wantNTLM = (data->state.authhost.want==CURLAUTH_NTLM) ||
                   (data->state.authhost.want==CURLAUTH_NTLM_WB) ? TRUE : FALSE;
   struct connectbundle *bundle;
 
+  *force_reuse = FALSE;
+
+  /* We can't pipe if the site is blacklisted */
+  if(canPipeline && Curl_pipeline_site_blacklisted(data, needle)) {
+    canPipeline = FALSE;
+  }
+
   /* Look up the bundle with all the connections to this
      particular host */
   bundle = Curl_conncache_find_bundle(data->state.conn_cache,
                                       needle->host.name);
   if(bundle) {
+    size_t max_pipe_len = Curl_multi_max_pipeline_length(data->multi);
+    size_t best_pipe_len = max_pipe_len;
     struct curl_llist_element *curr;
 
     infof(data, "Found bundle for host %s: %p\n", needle->host.name, bundle);
 
+    /* We can't pipe if we don't know anything about the server */
+    if(canPipeline && !bundle->server_supports_pipelining) {
+      infof(data, "Server doesn't support pipelining\n");
+      canPipeline = FALSE;
+    }
+
     curr = bundle->conn_list->head;
     while(curr) {
       bool match = FALSE;
       bool credentialsMatch = FALSE;
       size_t pipeLen;
 
@@ -2841,18 +2893,12 @@
             continue;
         }
         else if(rh) {
           if(!IsPipeliningPossible(rh, check))
             continue;
         }
-#ifdef DEBUGBUILD
-      if(pipeLen > MAX_PIPELINE_LENGTH) {
-        infof(data, "BAD! Connection #%ld has too big pipeline!\n",
-              check->connection_id);
-      }
-#endif
       }
       else {
         if(pipeLen > 0) {
           /* can only happen within multi handles, and means that another easy
              handle is using this connection */
           continue;
@@ -2925,12 +2971,24 @@
            !check->localdev ||
            !needle->localdev ||
            strcmp(check->localdev, needle->localdev))
           continue;
       }
 
+      if((needle->handler->protocol & CURLPROTO_FTP) ||
+         ((needle->handler->protocol & CURLPROTO_HTTP) && wantNTLM)) {
+         /* This is FTP or HTTP+NTLM, verify that we're using the same name
+            and password as well */
+         if(!strequal(needle->user, check->user) ||
+            !strequal(needle->passwd, check->passwd)) {
+            /* one of them was different */
+            continue;
+         }
+         credentialsMatch = TRUE;
+      }
+
       if(!needle->bits.httpproxy || needle->handler->flags&PROTOPT_SSL ||
          (needle->bits.httpproxy && check->bits.httpproxy &&
           needle->bits.tunnel_proxy && check->bits.tunnel_proxy &&
           Curl_raw_equal(needle->proxy.name, check->proxy.name) &&
           (needle->port == check->port))) {
         /* The requested connection does not use a HTTP proxy or it uses SSL or
@@ -2958,23 +3016,12 @@
                            "Connection #%ld has not started SSL connect, "
                            "can't reuse\n",
                            check->connection_id));
               continue;
             }
           }
-          if((needle->handler->protocol & CURLPROTO_FTP) ||
-             ((needle->handler->protocol & CURLPROTO_HTTP) && wantNTLM)) {
-            /* This is FTP or HTTP+NTLM, verify that we're using the same name
-               and password as well */
-            if(!strequal(needle->user, check->user) ||
-               !strequal(needle->passwd, check->passwd)) {
-              /* one of them was different */
-              continue;
-            }
-            credentialsMatch = TRUE;
-          }
           match = TRUE;
         }
       }
       else { /* The requested needle connection is using a proxy,
                 is the checked one using the same host, port and type? */
         if(check->bits.proxy &&
@@ -2985,32 +3032,66 @@
           /* This is the same proxy connection, use it! */
           match = TRUE;
         }
       }
 
       if(match) {
-        chosen = check;
+        /* If we are looking for an NTLM connection, check if this is already
+           authenticating with the right credentials. If not, keep looking so
+           that we can reuse NTLM connections if possible. (Especially we
+           must not reuse the same connection if partway through
+           a handshake!) */
+        if(wantNTLM) {
+          if(credentialsMatch && check->ntlm.state != NTLMSTATE_NONE) {
+            chosen = check;
+
+            /* We must use this connection, no other */
+            *force_reuse = TRUE;
+            break;
+          }
+          else
+            continue;
+        }
 
-        /* If we are not looking for an NTLM connection, we can choose this one
-           immediately. */
-        if(!wantNTLM)
-          break;
+        if(canPipeline) {
+          /* We can pipeline if we want to. Let's continue looking for
+             the optimal connection to use, i.e the shortest pipe that is not
+             blacklisted. */
+
+          if(pipeLen == 0) {
+            /* We have the optimal connection. Let's stop looking. */
+            chosen = check;
+            break;
+          }
 
-        /* Otherwise, check if this is already authenticating with the right
-           credentials. If not, keep looking so that we can reuse NTLM
-           connections if possible. (Especially we must reuse the same
-           connection if partway through a handshake!) */
-        if(credentialsMatch && chosen->ntlm.state != NTLMSTATE_NONE)
+          /* We can't use the connection if the pipe is full */
+          if(pipeLen >= max_pipe_len)
+            continue;
+
+          /* We can't use the connection if the pipe is penalized */
+          if(Curl_pipeline_penalized(data, check))
+            continue;
+
+          if(pipeLen < best_pipe_len) {
+            /* This connection has a shorter pipe so far. We'll pick this
+               and continue searching */
+            chosen = check;
+            best_pipe_len = pipeLen;
+            continue;
+          }
+        }
+        else {
+          /* We have found a connection. Let's stop searching. */
+          chosen = check;
           break;
+        }
       }
     }
   }
 
   if(chosen) {
-    chosen->inuse = TRUE; /* mark this as being in use so that no other
-                            handle in a multi stack may nick it */
     *usethis = chosen;
     return TRUE; /* yes, we found one to use! */
   }
 
   return FALSE; /* no matching connecting exists */
 }
@@ -3077,12 +3158,15 @@
 
    Note: this function's sub-functions call failf()
 
 */
 CURLcode Curl_connected_proxy(struct connectdata *conn)
 {
+  if(!conn->bits.proxy)
+    return CURLE_OK;
+
   switch(conn->proxytype) {
 #ifndef CURL_DISABLE_PROXY
   case CURLPROXY_SOCKS5:
   case CURLPROXY_SOCKS5_HOSTNAME:
     return Curl_SOCKS5(conn->proxyuser, conn->proxypasswd,
                        conn->host.name, conn->remote_port,
@@ -3468,27 +3552,24 @@
   conn->ntlm_auth_hlpr_socket = CURL_SOCKET_BAD;
   conn->ntlm_auth_hlpr_pid = 0;
   conn->challenge_header = NULL;
   conn->response_header = NULL;
 #endif
 
-  if(data->multi && Curl_multi_canPipeline(data->multi) &&
+  if(Curl_multi_pipeline_enabled(data->multi) &&
       !conn->master_buffer) {
     /* Allocate master_buffer to be used for pipelining */
     conn->master_buffer = calloc(BUFSIZE, sizeof (char));
     if(!conn->master_buffer)
       goto error;
   }
 
   /* Initialize the pipeline lists */
   conn->send_pipe = Curl_llist_alloc((curl_llist_dtor) llist_dtor);
   conn->recv_pipe = Curl_llist_alloc((curl_llist_dtor) llist_dtor);
-  conn->pend_pipe = Curl_llist_alloc((curl_llist_dtor) llist_dtor);
-  conn->done_pipe = Curl_llist_alloc((curl_llist_dtor) llist_dtor);
-  if(!conn->send_pipe || !conn->recv_pipe || !conn->pend_pipe ||
-     !conn->done_pipe)
+  if(!conn->send_pipe || !conn->recv_pipe)
     goto error;
 
 #if defined(HAVE_KRB4) || defined(HAVE_GSSAPI)
   conn->data_prot = PROT_CLEAR;
 #endif
 
@@ -3508,19 +3589,15 @@
 
   return conn;
   error:
 
   Curl_llist_destroy(conn->send_pipe, NULL);
   Curl_llist_destroy(conn->recv_pipe, NULL);
-  Curl_llist_destroy(conn->pend_pipe, NULL);
-  Curl_llist_destroy(conn->done_pipe, NULL);
 
   conn->send_pipe = NULL;
   conn->recv_pipe = NULL;
-  conn->pend_pipe = NULL;
-  conn->done_pipe = NULL;
 
   Curl_safefree(conn->master_buffer);
   Curl_safefree(conn->localdev);
   Curl_safefree(conn);
   return NULL;
 }
@@ -3581,12 +3658,13 @@
   char *path = data->state.path;
   char *query;
   int rc;
   char protobuf[16];
   const char *protop;
   CURLcode result;
+  bool fix_slash = FALSE;
 
   *prot_missing = FALSE;
 
   /*************************************************************
    * Parse the URL.
    *
@@ -3727,30 +3805,67 @@
     memmove(path+hostlen+1, path, pathlen+1);
 
      /* now copy the trailing host part in front of the existing path */
     memcpy(path+1, query, hostlen);
 
     path[0]='/'; /* prepend the missing slash */
+    fix_slash = TRUE;
 
     *query=0; /* now cut off the hostname at the ? */
   }
   else if(!path[0]) {
     /* if there's no path set, use a single slash */
     strcpy(path, "/");
+    fix_slash = TRUE;
   }
 
   /* If the URL is malformatted (missing a '/' after hostname before path) we
    * insert a slash here. The only letter except '/' we accept to start a path
    * is '?'.
    */
   if(path[0] == '?') {
     /* We need this function to deal with overlapping memory areas. We know
        that the memory area 'path' points to is 'urllen' bytes big and that
        is bigger than the path. Use +1 to move the zero byte too. */
     memmove(&path[1], path, strlen(path)+1);
     path[0] = '/';
+    fix_slash = TRUE;
+  }
+
+
+  /*
+   * "fix_slash" means that the URL was malformatted so we need to generate an
+   * updated version with the new slash inserted at the right place!  We need
+   * the corrected URL when communicating over HTTP proxy and we don't know at
+   * this point if we're using a proxy or not.
+   */
+  if(fix_slash) {
+    char *reurl;
+
+    size_t plen = strlen(path); /* new path, should be 1 byte longer than
+                                   the original */
+    size_t urllen = strlen(data->change.url); /* original URL length */
+
+    reurl = malloc(urllen + 2); /* 2 for zerobyte + slash */
+    if(!reurl)
+      return CURLE_OUT_OF_MEMORY;
+
+    /* copy the prefix */
+    memcpy(reurl, data->change.url, urllen - (plen-1));
+
+    /* append the trailing piece + zerobyte */
+    memcpy(&reurl[urllen - (plen-1)], path, plen + 1);
+
+    /* possible free the old one */
+    if(data->change.url_alloc) {
+      Curl_safefree(data->change.url);
+      data->change.url_alloc = FALSE;
+    }
+
+    data->change.url = reurl;
+    data->change.url_alloc = TRUE; /* free this later */
   }
 
   /*************************************************************
    * Parse a user name and password in the URL and strip it out
    * of the host name
    *************************************************************/
@@ -4616,19 +4731,15 @@
   Curl_safefree(old_conn->proxyuser);
   Curl_safefree(old_conn->proxypasswd);
   Curl_safefree(old_conn->localdev);
 
   Curl_llist_destroy(old_conn->send_pipe, NULL);
   Curl_llist_destroy(old_conn->recv_pipe, NULL);
-  Curl_llist_destroy(old_conn->pend_pipe, NULL);
-  Curl_llist_destroy(old_conn->done_pipe, NULL);
 
   old_conn->send_pipe = NULL;
   old_conn->recv_pipe = NULL;
-  old_conn->pend_pipe = NULL;
-  old_conn->done_pipe = NULL;
 
   Curl_safefree(old_conn->master_buffer);
 }
 
 /**
  * create_conn() sets up a new connectdata struct, or re-uses an already
@@ -4656,12 +4767,16 @@
   size_t urllen;
   char user[MAX_CURL_USER_LENGTH];
   char passwd[MAX_CURL_PASSWORD_LENGTH];
   bool reuse;
   char *proxy = NULL;
   bool prot_missing = FALSE;
+  bool no_connections_available = FALSE;
+  bool force_reuse;
+  size_t max_host_connections = Curl_multi_max_host_connections(data->multi);
+  size_t max_total_connections = Curl_multi_max_total_connections(data->multi);
 
   *async = FALSE;
 
   /*************************************************************
    * Check input data
    *************************************************************/
@@ -4956,21 +5071,41 @@
      we only acknowledge this option if this is not a re-used connection
      already (which happens due to follow-location or during a HTTP
      authentication phase). */
   if(data->set.reuse_fresh && !data->state.this_is_a_follow)
     reuse = FALSE;
   else
-    reuse = ConnectionExists(data, conn, &conn_temp);
+    reuse = ConnectionExists(data, conn, &conn_temp, &force_reuse);
+
+  /* If we found a reusable connection, we may still want to
+     open a new connection if we are pipelining. */
+  if(reuse && !force_reuse && IsPipeliningPossible(data, conn_temp)) {
+    size_t pipelen = conn_temp->send_pipe->size + conn_temp->recv_pipe->size;
+    if(pipelen > 0) {
+      infof(data, "Found connection %d, with requests in the pipe (%d)\n",
+            conn_temp->connection_id, pipelen);
+
+      if(conn_temp->bundle->num_connections < max_host_connections &&
+         data->state.conn_cache->num_connections < max_total_connections) {
+        /* We want a new connection anyway */
+        reuse = FALSE;
+
+        infof(data, "We can reuse, but we want a new connection anyway\n");
+      }
+    }
+  }
 
   if(reuse) {
     /*
      * We already have a connection for this, we got the former connection
      * in the conn_temp variable and thus we need to cleanup the one we
      * just allocated before we can move along and use the previously
      * existing one.
      */
+    conn_temp->inuse = TRUE; /* mark this as being in use so that no other
+                                handle in a multi stack may nick it */
     reuse_conn(conn, conn_temp);
     free(conn);          /* we don't need this anymore */
     conn = conn_temp;
     *in_connect = conn;
 
     /* set a pointer to the hostname we display */
@@ -4978,20 +5113,72 @@
 
     infof(data, "Re-using existing connection! (#%ld) with host %s\n",
           conn->connection_id,
           conn->proxy.name?conn->proxy.dispname:conn->host.dispname);
   }
   else {
-    /*
-     * This is a brand new connection, so let's store it in the connection
-     * cache of ours!
-     */
-    conn->inuse = TRUE;
-    ConnectionStore(data, conn);
+    /* We have decided that we want a new connection. However, we may not
+       be able to do that if we have reached the limit of how many
+       connections we are allowed to open. */
+    struct connectbundle *bundle;
+
+    bundle = Curl_conncache_find_bundle(data->state.conn_cache,
+                                        conn->host.name);
+    if(max_host_connections > 0 && bundle &&
+       (bundle->num_connections >= max_host_connections)) {
+      struct connectdata *conn_candidate;
+
+      /* The bundle is full. Let's see if we can kill a connection. */
+      conn_candidate = find_oldest_idle_connection_in_bundle(data, bundle);
+
+      if(conn_candidate) {
+        /* Set the connection's owner correctly, then kill it */
+        conn_candidate->data = data;
+        (void)Curl_disconnect(conn_candidate, /* dead_connection */ FALSE);
+      }
+      else
+        no_connections_available = TRUE;
+    }
+
+    if(max_total_connections > 0 &&
+       (data->state.conn_cache->num_connections >= max_total_connections)) {
+      struct connectdata *conn_candidate;
+
+      /* The cache is full. Let's see if we can kill a connection. */
+      conn_candidate = find_oldest_idle_connection(data);
+
+      if(conn_candidate) {
+        /* Set the connection's owner correctly, then kill it */
+        conn_candidate->data = data;
+        (void)Curl_disconnect(conn_candidate, /* dead_connection */ FALSE);
+      }
+      else
+        no_connections_available = TRUE;
+    }
+
+
+    if(no_connections_available) {
+      infof(data, "No connections available.\n");
+
+      conn_free(conn);
+      *in_connect = NULL;
+
+      return CURLE_NO_CONNECTION_AVAILABLE;
+    }
+    else {
+      /*
+       * This is a brand new connection, so let's store it in the connection
+       * cache of ours!
+       */
+      ConnectionStore(data, conn);
+    }
   }
 
+  /* Mark the connection as used */
+  conn->inuse = TRUE;
+
   /* Setup and init stuff before DO starts, in preparing for the transfer. */
   do_init(conn);
 
   /*
    * Setup whatever necessary for a resumed transfer
    */
@@ -5160,12 +5347,17 @@
          connection, in which case DNS was unnecessary, or because DNS
          really did finish already (synch resolver/fast async resolve) */
       code = Curl_setup_conn(*in_connect, protocol_done);
     }
   }
 
+  if(code == CURLE_NO_CONNECTION_AVAILABLE) {
+    *in_connect = NULL;
+    return code;
+  }
+
   if(code && *in_connect) {
     /* We're not allowed to return failure with memory left allocated
        in the connectdata struct, free those here */
     Curl_disconnect(*in_connect, FALSE); /* close the connection */
     *in_connect = NULL;           /* return a NULL */
   }
@@ -5216,12 +5408,19 @@
 
   if(conn->dns_entry) {
     Curl_resolv_unlock(data, conn->dns_entry); /* done with this */
     conn->dns_entry = NULL;
   }
 
+  if(status == CURLE_ABORTED_BY_CALLBACK)
+    /* When we're aborted due to a callback return code it basically have to
+       be counted as premature as there is trouble ahead if we don't. We have
+       many callbacks and protocols work differently, we could potentially do
+       this more fine-grained in the future. */
+    premature = TRUE;
+
   /* this calls the protocol-specific function pointer previously set */
   if(conn->handler->done)
     result = conn->handler->done(conn, status, premature);
   else
     result = CURLE_OK;
 
@@ -5244,18 +5443,14 @@
 
      if premature is TRUE, it means this connection was said to be DONE before
      the entire request operation is complete and thus we can't know in what
      state it is for re-using, so we're forced to close it. In a perfect world
      we can add code that keep track of if we really must close it here or not,
      but currently we have no such detail knowledge.
-
-     connection_id == -1 here means that the connection has not been added
-     to the connection cache (OOM) and thus we must disconnect it here.
   */
-  if(data->set.reuse_forbid || conn->bits.close || premature ||
-     (-1 == conn->connection_id)) {
+  if(data->set.reuse_forbid || conn->bits.close || premature) {
     CURLcode res2 = Curl_disconnect(conn, premature); /* close connection */
 
     /* If we had an error already, make sure we return that one. But
        if we got a new error, return that. */
     if(!result && res2)
       result = res2;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/urldata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/urldata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib/urldata.h	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/lib/urldata.h	2013-04-12 02:46:54.000000000 +0800
@@ -55,12 +55,14 @@
 #define DICT_DEFINE2 "/D:"
 #define DICT_DEFINE3 "/LOOKUP:"
 
 #define CURL_DEFAULT_USER "anonymous"
 #define CURL_DEFAULT_PASSWORD "ftp@example.com"
 
+#define DEFAULT_CONNCACHE_SIZE 5
+
 /* length of longest IPv6 address string including the trailing null */
 #define MAX_IPADR_LEN sizeof("ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255")
 
 /* Default FTP/IMAP etc response timeout in milliseconds.
    Symbian OS panics when given a timeout much greater than 1/2 hour.
 */
@@ -104,15 +106,21 @@
 
 #ifdef USE_GNUTLS
 #include <gnutls/gnutls.h>
 #endif
 
 #ifdef USE_POLARSSL
-#include <polarssl/havege.h>
 #include <polarssl/ssl.h>
-#endif
+#include <polarssl/version.h>
+#if POLARSSL_VERSION_NUMBER<0x01010000
+#include <polarssl/havege.h>
+#else
+#include <polarssl/entropy.h>
+#include <polarssl/ctr_drbg.h>
+#endif /* POLARSSL_VERSION_NUMBER<0x01010000 */
+#endif /* USE_POLARSSL */
 
 #ifdef USE_CYASSL
 #undef OCSP_REQUEST  /* avoid cyassl/openssl/ssl.h clash with wincrypt.h */
 #undef OCSP_RESPONSE /* avoid cyassl/openssl/ssl.h clash with wincrypt.h */
 #include <cyassl/openssl/ssl.h>
 #endif
@@ -279,13 +287,19 @@
 #ifdef USE_TLS_SRP
   gnutls_srp_client_credentials srp_client_cred;
 #endif
   ssl_connect_state connecting_state;
 #endif /* USE_GNUTLS */
 #ifdef USE_POLARSSL
+#if POLARSSL_VERSION_NUMBER<0x01010000
   havege_state hs;
+#else
+  /* from v1.1.0, use ctr_drbg and entropy */
+  ctr_drbg_context ctr_drbg;
+  entropy_context entropy;
+#endif /* POLARSSL_VERSION_NUMBER<0x01010000 */
   ssl_context ssl;
   ssl_session ssn;
   int server_fd;
   x509_cert cacert;
   x509_cert clicert;
   x509_crl crl;
@@ -323,12 +337,13 @@
 #endif /* USE_SCHANNEL */
 #ifdef USE_DARWINSSL
   SSLContextRef ssl_ctx;
   curl_socket_t ssl_sockfd;
   ssl_connect_state connecting_state;
   bool ssl_direction; /* true if writing, false if reading */
+  size_t ssl_write_buffered_length;
 #endif /* USE_DARWINSSL */
 };
 
 struct ssl_config_data {
   long version;          /* what version the client wants to use */
   long certverifyresult; /* result from the certificate verification */
@@ -919,23 +934,16 @@
      is up for grabs by one. */
 
   bool readchannel_inuse;  /* whether the read channel is in use by an easy
                               handle */
   bool writechannel_inuse; /* whether the write channel is in use by an easy
                               handle */
-  bool server_supports_pipelining; /* TRUE if server supports pipelining,
-                                      set after first response */
   struct curl_llist *send_pipe; /* List of handles waiting to
                                    send on this pipeline */
   struct curl_llist *recv_pipe; /* List of handles waiting to read
                                    their responses on this pipeline */
-  struct curl_llist *pend_pipe; /* List of pending handles on
-                                   this pipeline */
-  struct curl_llist *done_pipe; /* Handles that are finished, but
-                                   still reference this connectdata */
-#define MAX_PIPELINE_LENGTH 5
   char* master_buffer; /* The master buffer allocated on-demand;
                           used for pipelining. */
   size_t read_pos; /* Current read position in the master buffer */
   size_t buf_len; /* Length of the buffer?? */
 
 
@@ -1006,14 +1014,13 @@
   /* tunnel as in tunnel through a HTTP proxy with CONNECT */
   enum {
     TUNNEL_INIT,    /* init/default/no tunnel state */
     TUNNEL_CONNECT, /* CONNECT has been sent off */
     TUNNEL_COMPLETE /* CONNECT response received completely */
   } tunnel_state[2]; /* two separate ones to allow FTP */
-
-   struct connectbundle *bundle; /* The bundle we are member of */
+  struct connectbundle *bundle; /* The bundle we are member of */
 };
 
 /* The end of connectdata. */
 
 /*
  * Struct to keep statistical and informational data.
@@ -1156,19 +1163,12 @@
      also close the multi handle! */
   bool multi_owned_by_easy;
 
   /* buffers to store authentication data in, as parsed from input options */
   struct timeval keeps_speed; /* for the progress meter really */
 
-  struct connectdata *pending_conn; /* This points to the connection we want
-                                       to open when we are waiting in the
-                                       CONNECT_PEND state in the multi
-                                       interface. This to avoid recreating it
-                                       when we enter the CONNECT state again.
-                                    */
-
   struct connectdata *lastconnect; /* The last connection, NULL if undefined */
 
   char *headerbuff; /* allocated buffer to store headers in */
   size_t headersize;   /* size of the allocation */
 
   char buffer[BUFSIZE+1]; /* download buffer */
@@ -1276,15 +1276,15 @@
     struct FTP *ftp;
     /* void *tftp;    not used */
     struct FILEPROTO *file;
     void *telnet;        /* private for telnet.c-eyes only */
     void *generic;
     struct SSHPROTO *ssh;
-    struct FTP *imap;
-    struct FTP *pop3;
-    struct FTP *smtp;
+    struct IMAP *imap;
+    struct POP3 *pop3;
+    struct SMTP *smtp;
   } proto;
   /* current user of this SessionHandle instance, or NULL */
   struct connectdata *current_conn;
 
   /* if true, force SSL connection retry (workaround for certain servers) */
   bool ssl_connect_retry;
@@ -1516,13 +1516,13 @@
   bool http_follow_location; /* follow HTTP redirects */
   bool http_transfer_encoding; /* request compressed HTTP transfer-encoding */
   bool http_disable_hostname_check_before_authentication;
   bool include_header;   /* include received protocol headers in data output */
   bool http_set_referer; /* is a custom referer used */
   bool http_auto_referer; /* set "correct" referer when following location: */
-  bool opt_no_body;      /* as set with CURLOPT_NO_BODY */
+  bool opt_no_body;      /* as set with CURLOPT_NOBODY */
   bool set_port;         /* custom port number used */
   bool upload;           /* upload request */
   enum CURL_NETRC_OPTION
        use_netrc;        /* defined in include/curl.h */
   bool verbose;          /* output verbosity */
   bool krb;              /* kerberos connection requested */
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib: vc6libcurl.dsp
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/lib: vc6libcurl.dsw
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/m4/curl-compilers.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/m4/curl-compilers.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/m4/curl-compilers.m4	2013-01-21 05:58:39.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/m4/curl-compilers.m4	2013-04-12 02:46:54.000000000 +0800
@@ -18,13 +18,13 @@
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 #***************************************************************************
 
 # File version for 'aclocal' use. Keep it a single number.
-# serial 65
+# serial 66
 
 
 dnl CURL_CHECK_COMPILER
 dnl -------------------------------------------------
 dnl Verify if the C compiler being used is known.
 
@@ -1192,12 +1192,13 @@
 dnl Actually the curl debug memory tracking feature can
 dnl only be used/enabled when libcurl is built as a static
 dnl library or as a shared one on those systems on which
 dnl shared libraries support undefined symbols.
 
 AC_DEFUN([CURL_CHECK_CURLDEBUG], [
+  AC_REQUIRE([XC_LIBTOOL])dnl
   AC_REQUIRE([CURL_SHFUNC_SQUEEZE])dnl
   supports_curldebug="unknown"
   if test "$want_curldebug" = "yes"; then
     if test "x$enable_shared" != "xno" &&
       test "x$enable_shared" != "xyes"; then
       AC_MSG_WARN([unknown enable_shared setting.])
@@ -1207,13 +1208,13 @@
       test "x$enable_static" != "xyes"; then
       AC_MSG_WARN([unknown enable_static setting.])
       supports_curldebug="no"
     fi
     if test "$supports_curldebug" != "no"; then
       if test "$enable_shared" = "yes" &&
-        test "$need_no_undefined" = "yes"; then
+        test "x$xc_lt_shlib_use_no_undefined" = 'xyes'; then
         supports_curldebug="no"
         AC_MSG_WARN([shared library does not support undefined symbols.])
       fi
     fi
   fi
   #
@@ -1235,37 +1236,12 @@
     CPPFLAGS="-DDEBUGBUILD $CPPFLAGS"
     squeeze CPPFLAGS
   fi
 ])
 
 
-dnl CURL_CHECK_NO_UNDEFINED
-dnl -------------------------------------------------
-dnl Checks if the -no-undefined flag must be used when
-dnl building shared libraries. This is required on all
-dnl systems on which shared libraries should not have
-dnl references to undefined symbols. This check should
-dnl not be done before AC-PROG-LIBTOOL.
-
-AC_DEFUN([CURL_CHECK_NO_UNDEFINED], [
-  AC_BEFORE([$0],[CURL_CHECK_CURLDEBUG])dnl
-  AC_MSG_CHECKING([if shared libraries need -no-undefined])
-  need_no_undefined="no"
-  case $host in
-    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc* | *-*-aix*)
-      need_no_undefined="yes"
-      ;;
-  esac
-  if test "x$allow_undefined" = "xno"; then
-    need_no_undefined="yes"
-  elif test "x$allow_undefined_flag" = "xunsupported"; then
-    need_no_undefined="yes"
-  fi
-  AC_MSG_RESULT($need_no_undefined)
-])
-
 
 dnl CURL_CHECK_COMPILER_HALT_ON_ERROR
 dnl -------------------------------------------------
 dnl Verifies if the compiler actually halts after the
 dnl compilation phase without generating any object
 dnl code file, when the source compiles with errors.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/m4/curl-functions.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/m4/curl-functions.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/m4/curl-functions.m4	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/m4/curl-functions.m4	2013-03-05 18:02:20.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -18,13 +18,13 @@
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 #***************************************************************************
 
 # File version for 'aclocal' use. Keep it a single number.
-# serial 72
+# serial 73
 
 
 dnl CURL_INCLUDES_ARPA_INET
 dnl -------------------------------------------------
 dnl Set up variable with list of headers that must be
 dnl included when arpa/inet.h is to be included.
@@ -5864,98 +5864,12 @@
   else
     AC_MSG_RESULT([no])
     ac_cv_func_strcasecmp="no"
   fi
 ])
 
-
-dnl CURL_CHECK_FUNC_STRCASESTR
-dnl -------------------------------------------------
-dnl Verify if strcasestr is available, prototyped, and
-dnl can be compiled. If all of these are true, and
-dnl usage has not been previously disallowed with
-dnl shell variable curl_disallow_strcasestr, then
-dnl HAVE_STRCASESTR will be defined.
-
-AC_DEFUN([CURL_CHECK_FUNC_STRCASESTR], [
-  AC_REQUIRE([CURL_INCLUDES_STRING])dnl
-  #
-  tst_links_strcasestr="unknown"
-  tst_proto_strcasestr="unknown"
-  tst_compi_strcasestr="unknown"
-  tst_allow_strcasestr="unknown"
-  #
-  AC_MSG_CHECKING([if strcasestr can be linked])
-  AC_LINK_IFELSE([
-    AC_LANG_FUNC_LINK_TRY([strcasestr])
-  ],[
-    AC_MSG_RESULT([yes])
-    tst_links_strcasestr="yes"
-  ],[
-    AC_MSG_RESULT([no])
-    tst_links_strcasestr="no"
-  ])
-  #
-  if test "$tst_links_strcasestr" = "yes"; then
-    AC_MSG_CHECKING([if strcasestr is prototyped])
-    AC_EGREP_CPP([strcasestr],[
-      $curl_includes_string
-    ],[
-      AC_MSG_RESULT([yes])
-      tst_proto_strcasestr="yes"
-    ],[
-      AC_MSG_RESULT([no])
-      tst_proto_strcasestr="no"
-    ])
-  fi
-  #
-  if test "$tst_proto_strcasestr" = "yes"; then
-    AC_MSG_CHECKING([if strcasestr is compilable])
-    AC_COMPILE_IFELSE([
-      AC_LANG_PROGRAM([[
-        $curl_includes_string
-      ]],[[
-        if(0 != strcasestr(0, 0))
-          return 1;
-      ]])
-    ],[
-      AC_MSG_RESULT([yes])
-      tst_compi_strcasestr="yes"
-    ],[
-      AC_MSG_RESULT([no])
-      tst_compi_strcasestr="no"
-    ])
-  fi
-  #
-  if test "$tst_compi_strcasestr" = "yes"; then
-    AC_MSG_CHECKING([if strcasestr usage allowed])
-    if test "x$curl_disallow_strcasestr" != "xyes"; then
-      AC_MSG_RESULT([yes])
-      tst_allow_strcasestr="yes"
-    else
-      AC_MSG_RESULT([no])
-      tst_allow_strcasestr="no"
-    fi
-  fi
-  #
-  AC_MSG_CHECKING([if strcasestr might be used])
-  if test "$tst_links_strcasestr" = "yes" &&
-     test "$tst_proto_strcasestr" = "yes" &&
-     test "$tst_compi_strcasestr" = "yes" &&
-     test "$tst_allow_strcasestr" = "yes"; then
-    AC_MSG_RESULT([yes])
-    AC_DEFINE_UNQUOTED(HAVE_STRCASESTR, 1,
-      [Define to 1 if you have the strcasestr function.])
-    ac_cv_func_strcasestr="yes"
-  else
-    AC_MSG_RESULT([no])
-    ac_cv_func_strcasestr="no"
-  fi
-])
-
-
 dnl CURL_CHECK_FUNC_STRCMPI
 dnl -------------------------------------------------
 dnl Verify if strcmpi is available, prototyped, and
 dnl can be compiled. If all of these are true, and
 dnl usage has not been previously disallowed with
 dnl shell variable curl_disallow_strcmpi, then
@@ -6469,98 +6383,12 @@
   else
     AC_MSG_RESULT([no])
     ac_cv_func_stricmp="no"
   fi
 ])
 
-
-dnl CURL_CHECK_FUNC_STRLCAT
-dnl -------------------------------------------------
-dnl Verify if strlcat is available, prototyped, and
-dnl can be compiled. If all of these are true, and
-dnl usage has not been previously disallowed with
-dnl shell variable curl_disallow_strlcat, then
-dnl HAVE_STRLCAT will be defined.
-
-AC_DEFUN([CURL_CHECK_FUNC_STRLCAT], [
-  AC_REQUIRE([CURL_INCLUDES_STRING])dnl
-  #
-  tst_links_strlcat="unknown"
-  tst_proto_strlcat="unknown"
-  tst_compi_strlcat="unknown"
-  tst_allow_strlcat="unknown"
-  #
-  AC_MSG_CHECKING([if strlcat can be linked])
-  AC_LINK_IFELSE([
-    AC_LANG_FUNC_LINK_TRY([strlcat])
-  ],[
-    AC_MSG_RESULT([yes])
-    tst_links_strlcat="yes"
-  ],[
-    AC_MSG_RESULT([no])
-    tst_links_strlcat="no"
-  ])
-  #
-  if test "$tst_links_strlcat" = "yes"; then
-    AC_MSG_CHECKING([if strlcat is prototyped])
-    AC_EGREP_CPP([strlcat],[
-      $curl_includes_string
-    ],[
-      AC_MSG_RESULT([yes])
-      tst_proto_strlcat="yes"
-    ],[
-      AC_MSG_RESULT([no])
-      tst_proto_strlcat="no"
-    ])
-  fi
-  #
-  if test "$tst_proto_strlcat" = "yes"; then
-    AC_MSG_CHECKING([if strlcat is compilable])
-    AC_COMPILE_IFELSE([
-      AC_LANG_PROGRAM([[
-        $curl_includes_string
-      ]],[[
-        if(0 != strlcat(0, 0, 0))
-          return 1;
-      ]])
-    ],[
-      AC_MSG_RESULT([yes])
-      tst_compi_strlcat="yes"
-    ],[
-      AC_MSG_RESULT([no])
-      tst_compi_strlcat="no"
-    ])
-  fi
-  #
-  if test "$tst_compi_strlcat" = "yes"; then
-    AC_MSG_CHECKING([if strlcat usage allowed])
-    if test "x$curl_disallow_strlcat" != "xyes"; then
-      AC_MSG_RESULT([yes])
-      tst_allow_strlcat="yes"
-    else
-      AC_MSG_RESULT([no])
-      tst_allow_strlcat="no"
-    fi
-  fi
-  #
-  AC_MSG_CHECKING([if strlcat might be used])
-  if test "$tst_links_strlcat" = "yes" &&
-     test "$tst_proto_strlcat" = "yes" &&
-     test "$tst_compi_strlcat" = "yes" &&
-     test "$tst_allow_strlcat" = "yes"; then
-    AC_MSG_RESULT([yes])
-    AC_DEFINE_UNQUOTED(HAVE_STRLCAT, 1,
-      [Define to 1 if you have the strlcat function.])
-    ac_cv_func_strlcat="yes"
-  else
-    AC_MSG_RESULT([no])
-    ac_cv_func_strlcat="no"
-  fi
-])
-
-
 dnl CURL_CHECK_FUNC_STRNCASECMP
 dnl -------------------------------------------------
 dnl Verify if strncasecmp is available, prototyped, and
 dnl can be compiled. If all of these are true, and
 dnl usage has not been previously disallowed with
 dnl shell variable curl_disallow_strncasecmp, then
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/m4: xc-lt-iface.m4
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/MacOSX-Framework /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/MacOSX-Framework
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/MacOSX-Framework	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/MacOSX-Framework	2013-02-18 06:19:52.000000000 +0800
@@ -7,12 +7,16 @@
 # the 10.4u SDK.
 #
 # Also note:
 # 10.5 is the *ONLY* SDK that support PPC64 :( -- 10.6 do not have ppc64 support
 #If you need to have PPC64 support then change below to 1
 PPC64_NEEDED=0
+# Apple does not support building for PPC anymore in Xcode 4 and later.
+# If you're using Xcode 3 or earlier and need PPC support, then change
+# the setting below to 1
+PPC_NEEDED=0
 
 # For me the default is to develop for the platform I am on, and if you
 #desire compatibility with older versions then change USE_OLD to 1 :)
 USE_OLD=0
 
 VERSION=`/usr/bin/sed -ne 's/^#define LIBCURL_VERSION "\(.*\)"/\1/p' include/curl/curlver.h`
@@ -21,63 +25,73 @@
 #I also wanted to "copy over" the system, and thus the reason I added the
 # version to Versions/Release-7.20.1 etc.
 # now a simple rsync -vaP libcurl.framework /Library/Frameworks will install it
 # and setup the right paths to this version, leaving the system version
 # "intact", so you can "fix" it later with the links to Versions/A/...
 
-
-OLD_SDK=`ls  /Developer/SDKs|head -1`
-NEW_SDK=`ls -r /Developer/SDKs|head -1`
+DEVELOPER_PATH=`xcode-select --print-path`
+# Around Xcode 4.3, SDKs were moved from the Developer folder into the
+# MacOSX.platform folder
+if test -d "$DEVELOPER_PATH/Platforms/MacOSX.platform/Developer/SDKs"; then
+ SDK_PATH="$DEVELOPER_PATH/Platforms/MacOSX.platform/Developer/SDKs"
+else
+ SDK_PATH="$DEVELOPER_PATH/SDKs";
+fi
+OLD_SDK=`ls  $SDK_PATH|head -1`
+NEW_SDK=`ls -r $SDK_PATH|head -1`
 
 if test "0"$USE_OLD -gt 0
 then
  SDK32=$OLD_SDK
 else
  SDK32=$NEW_SDK
 fi
 
 MACVER=`echo $SDK32|sed -e s/[a-zA-Z]//g -e s/.\$//`
 
-SDK32_DIR='/Developer/SDKs/'$SDK32
+SDK32_DIR=$SDK_PATH/$SDK32
 MINVER32='-mmacosx-version-min='$MACVER
-ARCHES32='-arch i386 -arch ppc'
-
+if test $PPC_NEEDED -gt 0; then
+ ARCHES32='-arch i386 -arch ppc'
+else
+ ARCHES32='-arch i386'
+fi
 
 if test $PPC64_NEEDED -gt 0
 then
   SDK64=10.5
   ARCHES64='-arch x86_64 -arch ppc64'
-  SDK64=`ls  /Developer/SDKs|grep 10.5|head -1`
+  SDK64=`ls  $SDK_PATH|grep 10.5|head -1`
 else
  ARCHES64='-arch x86_64'
  #We "know" that 10.4 and earlier do not support 64bit
- OLD_SDK64=`ls  /Developer/SDKs|egrep -v "10.[0-4]"|head -1`
- NEW_SDK64=`ls -r /Developer/SDKs|egrep -v "10.[0-4]"|head -1`
+ OLD_SDK64=`ls  $SDK_PATH|egrep -v "10.[0-4]"|head -1`
+ NEW_SDK64=`ls -r $SDK_PATH|egrep -v "10.[0-4]"|head -1`
  if test $USE_OLD -gt 0
   then
    SDK64=$OLD_SDK64
   else
    SDK64=$NEW_SDK64
   fi
 fi
 
-SDK64_DIR='/Developer/SDKs/'$SDK64
+SDK64_DIR=$SDK_PATH/$SDK64
 MACVER64=`echo $SDK64|sed -e s/[a-zA-Z]//g -e s/.\$//`
 
 MINVER64='-mmacosx-version-min='$MACVER64
 
 if test ! -z $SDK32; then
   echo "----Configuring libcurl for 32 bit universal framework..."
   make clean
-  ./configure --disable-dependency-tracking --disable-static --with-gssapi \
-    CFLAGS="-Os -isysroot $SDK32_DIR $ARCHES32 $MINVER32" \
-    LDFLAGS="-Wl,-syslibroot,$SDK32_DIR $ARCHES32 $MINVER32 -Wl,-headerpad_max_install_names" \
+  ./configure --disable-dependency-tracking --disable-static --with-gssapi --with-darwinssl \
+    CFLAGS="-Os -isysroot $SDK32_DIR $ARCHES32" \
+    LDFLAGS="-Wl,-syslibroot,$SDK32_DIR $ARCHES32 -Wl,-headerpad_max_install_names" \
     CC=$CC
 
   echo "----Building 32 bit libcurl..."
-  make
+  make -j `sysctl -n hw.logicalcpu_max`
 
   echo "----Creating 32 bit framework..."
   rm -r libcurl.framework
   mkdir -p libcurl.framework/${FRAMEWORK_VERSION}/Resources
   cp lib/.libs/libcurl.dylib libcurl.framework/${FRAMEWORK_VERSION}/libcurl
   install_name_tool -id @executable_path/../Frameworks/libcurl.framework/${FRAMEWORK_VERSION}/libcurl libcurl.framework/${FRAMEWORK_VERSION}/libcurl
@@ -88,25 +102,25 @@
   ln -fs ${FRAMEWORK_VERSION}/libcurl libcurl
   ln -fs ${FRAMEWORK_VERSION}/Resources Resources
   ln -fs ${FRAMEWORK_VERSION}/Headers Headers
   cd Versions
   ln -fs ${FRAMEWORK_VERSION} Current
 
-  echo TEsting for SDK64
+  echo Testing for SDK64
   if test -d $SDK64_DIR; then
   echo entering...
     popd
     make clean
     echo "----Configuring libcurl for 64 bit universal framework..."
-    ./configure --disable-dependency-tracking --disable-static --with-gssapi \
-      CFLAGS="-Os -isysroot $SDK64_DIR $ARCHES64 $MINVER64" \
-      LDFLAGS="-Wl,-syslibroot,$SDK64_DIR $ARCHES64 $MINVER64 -Wl,-headerpad_max_install_names" \
+    ./configure --disable-dependency-tracking --disable-static --with-gssapi --with-darwinssl \
+      CFLAGS="-Os -isysroot $SDK64_DIR $ARCHES64" \
+      LDFLAGS="-Wl,-syslibroot,$SDK64_DIR $ARCHES64 -Wl,-headerpad_max_install_names" \
       CC=$CC
 
     echo "----Building 64 bit libcurl..."
-    make
+    make -j `sysctl -n hw.logicalcpu_max`
 
     echo "----Appending 64 bit framework to 32 bit framework..."
     cp lib/.libs/libcurl.dylib libcurl.framework/${FRAMEWORK_VERSION}/libcurl64
     install_name_tool -id @executable_path/../Frameworks/libcurl.framework/${FRAMEWORK_VERSION}/libcurl libcurl.framework/${FRAMEWORK_VERSION}/libcurl64
     cp libcurl.framework/${FRAMEWORK_VERSION}/libcurl libcurl.framework/${FRAMEWORK_VERSION}/libcurl32
     pwd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/Makefile.am	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/Makefile.am	2013-02-14 02:45:00.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -27,28 +27,59 @@
 CMAKE_DIST = CMakeLists.txt CMake/CMakeConfigurableFile.in		\
 CMake/CurlCheckCSourceCompiles.cmake CMake/CurlCheckCSourceRuns.cmake	\
 CMake/CurlTests.c CMake/FindOpenSSL.cmake CMake/FindZLIB.cmake		\
 CMake/OtherTests.cmake CMake/Platforms/WindowsCache.cmake		\
 CMake/Utilities.cmake include/curl/curlbuild.h.cmake
 
+VC6LIBDSP = vs/vc6/lib/vc6libcurl.dsp
+VC6LIBDSPHEAD = vs/t/lib/vc6_libcurl_dsp.head
+VC6LIBDSPFOOT = vs/t/lib/vc6_libcurl_dsp.foot
+
+VC8LIBPRJ = vs/vc8/lib/vc8libcurl.vcproj
+VC8LIBPRJHEAD = vs/t/lib/vc8_libcurl_prj.head
+VC8LIBPRJFOOT = vs/t/lib/vc8_libcurl_prj.foot
+
+VC_DIST = \
+ vs/t/README \
+ $(VC6LIBDSP) $(VC6LIBDSPHEAD) $(VC6LIBDSPFOOT) \
+ $(VC8LIBPRJ) $(VC8LIBPRJHEAD) $(VC8LIBPRJFOOT) \
+ vs/vc6/vc6curl.dsw \
+ vs/vc6/lib/vc6libcurl.dsw \
+ vs/vc6/src/vc6curltool.dsw \
+ vs/vc6/src/vc6curltool.dsp
+
+VC6LIBDSP_DEPS = $(VC6LIBDSPHEAD) $(VC6LIBDSPFOOT) \
+ Makefile.am lib/Makefile.inc
+
+VC8LIBPRJ_DEPS = $(VC8LIBPRJHEAD) $(VC8LIBPRJFOOT) \
+ Makefile.am lib/Makefile.inc
+
 WINBUILD_DIST = winbuild/BUILD.WINDOWS.txt winbuild/gen_resp_file.bat	\
-winbuild/MakefileBuild.vc winbuild/Makefile.vc
+ winbuild/MakefileBuild.vc winbuild/Makefile.vc				\
+ winbuild/Makefile.msvc.names
 
 EXTRA_DIST = CHANGES COPYING maketgz Makefile.dist curl-config.in	\
- curl-style.el sample.emacs RELEASE-NOTES buildconf 	\
- libcurl.pc.in vc6curl.dsw MacOSX-Framework Android.mk $(CMAKE_DIST)	\
- Makefile.msvc.names $(WINBUILD_DIST) lib/libcurl.vers.in
+ RELEASE-NOTES buildconf libcurl.pc.in MacOSX-Framework	\
+ $(CMAKE_DIST) $(VC_DIST) $(WINBUILD_DIST) lib/libcurl.vers.in
+
+CLEANFILES = $(VC6LIBDSP) $(VC8LIBPRJ)
 
 bin_SCRIPTS = curl-config
 
 SUBDIRS = lib src include
 DIST_SUBDIRS = $(SUBDIRS) tests packages docs
 
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = libcurl.pc
 
+# List of libcurl source files required to generate VC IDE dsp and prj files
+include lib/Makefile.inc
+
+WIN32SOURCES = $(CSOURCES)
+WIN32HEADERS = $(HHEADERS) config-win32.h
+
 dist-hook:
 	rm -rf $(top_builddir)/tests/log
 	find $(distdir) -name "*.dist" -exec rm {} \;
 	(distit=`find $(srcdir) -name "*.dist" | grep -v ./ares/`; \
 	for file in $$distit; do \
 	  strip=`echo $$file | sed -e s/^$(srcdir)// -e s/\.dist//`; \
@@ -86,13 +117,13 @@
 
 endif
 
 examples:
 	@(cd docs/examples; $(MAKE) check)
 
-# This is a hook to have 'make clean' also clean up the dosc and the tests
+# This is a hook to have 'make clean' also clean up the docs and the tests
 # dir. The extra check for the Makefiles being present is necessary because
 # 'make distcheck' will make clean first in these directories _before_ it runs
 # this hook.
 clean-local:
 	@(if test -f tests/Makefile; then cd tests; $(MAKE) clean; fi)
 	@(if test -f docs/Makefile; then cd docs; $(MAKE) clean; fi)
@@ -163,6 +194,89 @@
 	@echo "generate a fresh ca-bundle.crt"
 	./lib/firefox-db2pem.sh lib/ca-bundle.crt
 
 checksrc:
 	cd lib && $(MAKE) checksrc
 	cd src && $(MAKE) checksrc
+
+.PHONY: vc6-ide
+
+vc6-ide:
+	$(MAKE) $(VC6LIBDSP)
+
+$(VC6LIBDSP): $(VC6LIBDSP_DEPS)
+	@(echo "generating '$(VC6LIBDSP)'"; \
+	\
+	for dir in 'vs' 'vs/vc6' 'vs/vc6/lib'; do \
+	  test -d "$$dir" || mkdir "$$dir" || exit 1; \
+	done; \
+	\
+	dir='..\..\..\lib\'; \
+	body='$(VC6LIBDSP)'.body; \
+	win32_srcs='$(WIN32SOURCES)'; \
+	win32_hdrs='$(WIN32HEADERS)'; \
+	sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
+	sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
+	\
+	echo "# Begin Group \"Source Files\""  > $$body; \
+	echo ""                               >> $$body; \
+	echo "# PROP Default_Filter \"\""     >> $$body; \
+	for file in $$sorted_srcs; do \
+	  echo "# Begin Source File"          >> $$body; \
+	  echo ""                             >> $$body; \
+	  echo "SOURCE="$$dir$$file           >> $$body; \
+	  echo "# End Source File"            >> $$body; \
+	done; \
+	echo "# End Group"                    >> $$body; \
+	echo "# Begin Group \"Header Files\"" >> $$body; \
+	echo ""                               >> $$body; \
+	echo "# PROP Default_Filter \"\""     >> $$body; \
+	for file in $$sorted_hdrs; do \
+	  echo "# Begin Source File"          >> $$body; \
+	  echo ""                             >> $$body; \
+	  echo "SOURCE="$$dir$$file           >> $$body; \
+	  echo "# End Source File"            >> $$body; \
+	done; \
+	echo "# End Group"                    >> $$body; \
+	\
+	awk '{ printf("%s\r\n", $$0); }' \
+	  $(srcdir)/$(VC6LIBDSPHEAD) $$body $(srcdir)/$(VC6LIBDSPFOOT) \
+	  > $(VC6LIBDSP) || { rm -f $$body; exit 1; }; \
+	\
+	rm -f $$body)
+
+.PHONY: vc8-ide
+
+vc8-ide:
+	$(MAKE) $(VC8LIBPRJ)
+
+$(VC8LIBPRJ): $(VC8LIBPRJ_DEPS)
+	@(echo "generating '$(VC8LIBPRJ)'"; \
+	\
+	for dir in 'vs' 'vs/vc8' 'vs/vc8/lib'; do \
+	  test -d "$$dir" || mkdir "$$dir" || exit 1; \
+	done; \
+	\
+	dir='..\..\..\lib\'; \
+	body='$(VC8LIBPRJ)'.body; \
+	win32_srcs='$(WIN32SOURCES)'; \
+	win32_hdrs='$(WIN32HEADERS)'; \
+	sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
+	sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
+	\
+	echo "%tab%%tab%<Filter Name=\"Source Files\">"  > $$body; \
+	for file in $$sorted_srcs; do \
+	  echo "%tab%%tab%%tab%<File RelativePath=\""$$dir$$file"\"></File>" >> $$body; \
+	done; \
+	echo "%tab%%tab%</Filter>"                      >> $$body; \
+	echo "%tab%%tab%<Filter Name=\"Header Files\">" >> $$body; \
+	for file in $$sorted_hdrs; do \
+	  echo "%tab%%tab%%tab%<File RelativePath=\""$$dir$$file"\"></File>" >> $$body; \
+	done; \
+	echo "%tab%%tab%</Filter>"                      >> $$body; \
+	\
+	awk '{ gsub(/%tab%/, "\t"); printf("%s\r\n", $$0); }' \
+	  $(srcdir)/$(VC8LIBPRJHEAD) $$body $(srcdir)/$(VC8LIBPRJFOOT) \
+	  > $(VC8LIBPRJ) || { rm -f $$body; exit 1; }; \
+	\
+	rm -f $$body)
+
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/Makefile.in	2013-02-06 18:14:03.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/Makefile.in	2013-04-12 15:12:50.000000000 +0800
@@ -19,13 +19,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -34,12 +34,21 @@
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 ###########################################################################
 
+# ./lib/Makefile.inc
+# Using the backslash as line continuation character might be problematic
+# with some make flavours, as Watcom's wmake showed us already. If we
+# ever want to change this in a portable manner then we should consider
+# this idea (posted to the libcurl list by Adam Kellas):
+# CSRC1 = file1.c file2.c file3.c
+# CSRC2 = file4.c file5.c file6.c
+# CSOURCES = $(CSRC1) $(CSRC2)
+
 
 VPATH = @srcdir@
 am__make_dryrun = \
   { \
     am__dry=no; \
     case $$MAKEFLAGS in \
@@ -71,28 +80,29 @@
 POST_INSTALL = :
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-subdir = .
 DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
 	$(srcdir)/Makefile.in $(srcdir)/curl-config.in \
-	$(srcdir)/libcurl.pc.in $(top_srcdir)/configure COPYING \
-	compile config.guess config.sub depcomp install-sh ltmain.sh \
-	missing mkinstalldirs
+	$(srcdir)/lib/Makefile.inc $(srcdir)/libcurl.pc.in \
+	$(top_srcdir)/configure COPYING compile config.guess \
+	config.sub depcomp install-sh ltmain.sh missing mkinstalldirs
+subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
 	$(top_srcdir)/m4/curl-confopts.m4 \
 	$(top_srcdir)/m4/curl-functions.m4 \
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -227,12 +237,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -318,13 +329,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -383,31 +393,96 @@
 CMAKE_DIST = CMakeLists.txt CMake/CMakeConfigurableFile.in		\
 CMake/CurlCheckCSourceCompiles.cmake CMake/CurlCheckCSourceRuns.cmake	\
 CMake/CurlTests.c CMake/FindOpenSSL.cmake CMake/FindZLIB.cmake		\
 CMake/OtherTests.cmake CMake/Platforms/WindowsCache.cmake		\
 CMake/Utilities.cmake include/curl/curlbuild.h.cmake
 
+VC6LIBDSP = vs/vc6/lib/vc6libcurl.dsp
+VC6LIBDSPHEAD = vs/t/lib/vc6_libcurl_dsp.head
+VC6LIBDSPFOOT = vs/t/lib/vc6_libcurl_dsp.foot
+VC8LIBPRJ = vs/vc8/lib/vc8libcurl.vcproj
+VC8LIBPRJHEAD = vs/t/lib/vc8_libcurl_prj.head
+VC8LIBPRJFOOT = vs/t/lib/vc8_libcurl_prj.foot
+VC_DIST = \
+ vs/t/README \
+ $(VC6LIBDSP) $(VC6LIBDSPHEAD) $(VC6LIBDSPFOOT) \
+ $(VC8LIBPRJ) $(VC8LIBPRJHEAD) $(VC8LIBPRJFOOT) \
+ vs/vc6/vc6curl.dsw \
+ vs/vc6/lib/vc6libcurl.dsw \
+ vs/vc6/src/vc6curltool.dsw \
+ vs/vc6/src/vc6curltool.dsp
+
+VC6LIBDSP_DEPS = $(VC6LIBDSPHEAD) $(VC6LIBDSPFOOT) \
+ Makefile.am lib/Makefile.inc
+
+VC8LIBPRJ_DEPS = $(VC8LIBPRJHEAD) $(VC8LIBPRJFOOT) \
+ Makefile.am lib/Makefile.inc
+
 WINBUILD_DIST = winbuild/BUILD.WINDOWS.txt winbuild/gen_resp_file.bat	\
-winbuild/MakefileBuild.vc winbuild/Makefile.vc
+ winbuild/MakefileBuild.vc winbuild/Makefile.vc				\
+ winbuild/Makefile.msvc.names
 
 EXTRA_DIST = CHANGES COPYING maketgz Makefile.dist curl-config.in	\
- curl-style.el sample.emacs RELEASE-NOTES buildconf 	\
- libcurl.pc.in vc6curl.dsw MacOSX-Framework Android.mk $(CMAKE_DIST)	\
- Makefile.msvc.names $(WINBUILD_DIST) lib/libcurl.vers.in
+ RELEASE-NOTES buildconf libcurl.pc.in MacOSX-Framework	\
+ $(CMAKE_DIST) $(VC_DIST) $(WINBUILD_DIST) lib/libcurl.vers.in
 
+CLEANFILES = $(VC6LIBDSP) $(VC8LIBPRJ)
 bin_SCRIPTS = curl-config
 SUBDIRS = lib src include
 DIST_SUBDIRS = $(SUBDIRS) tests packages docs
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = libcurl.pc
+CSOURCES = file.c timeval.c base64.c hostip.c progress.c formdata.c	\
+  cookie.c http.c sendf.c ftp.c url.c dict.c if2ip.c speedcheck.c	\
+  ldap.c ssluse.c version.c getenv.c escape.c mprintf.c telnet.c	\
+  netrc.c getinfo.c transfer.c strequal.c easy.c security.c krb4.c	\
+  curl_fnmatch.c fileinfo.c ftplistparser.c wildcard.c krb5.c		\
+  memdebug.c http_chunks.c strtok.c connect.c llist.c hash.c multi.c	\
+  content_encoding.c share.c http_digest.c md4.c md5.c curl_rand.c	\
+  http_negotiate.c inet_pton.c strtoofft.c strerror.c amigaos.c		\
+  hostasyn.c hostip4.c hostip6.c hostsyn.c inet_ntop.c parsedate.c	\
+  select.c gtls.c sslgen.c tftp.c splay.c strdup.c socks.c ssh.c nss.c	\
+  qssl.c rawstr.c curl_addrinfo.c socks_gssapi.c socks_sspi.c		\
+  curl_sspi.c slist.c nonblock.c curl_memrchr.c imap.c pop3.c smtp.c	\
+  pingpong.c rtsp.c curl_threads.c warnless.c hmac.c polarssl.c		\
+  polarssl_threadlock.c curl_rtmp.c openldap.c curl_gethostname.c	\
+  gopher.c axtls.c idn_win32.c http_negotiate_sspi.c cyassl.c		\
+  http_proxy.c non-ascii.c asyn-ares.c asyn-thread.c curl_gssapi.c	\
+  curl_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_ntlm_msgs.c		\
+  curl_sasl.c curl_schannel.c curl_multibyte.c curl_darwinssl.c		\
+  hostcheck.c bundles.c conncache.c pipeline.c
+
+HHEADERS = arpa_telnet.h netrc.h file.h timeval.h qssl.h hostip.h	\
+  progress.h formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h	\
+  if2ip.h speedcheck.h urldata.h curl_ldap.h ssluse.h escape.h telnet.h	\
+  getinfo.h strequal.h krb4.h memdebug.h http_chunks.h curl_rand.h	\
+  curl_fnmatch.h wildcard.h fileinfo.h ftplistparser.h strtok.h		\
+  connect.h llist.h hash.h content_encoding.h share.h curl_md4.h	\
+  curl_md5.h http_digest.h http_negotiate.h inet_pton.h amigaos.h	\
+  strtoofft.h strerror.h inet_ntop.h curlx.h curl_memory.h curl_setup.h	\
+  transfer.h select.h easyif.h multiif.h parsedate.h sslgen.h gtls.h	\
+  tftp.h sockaddr.h splay.h strdup.h socks.h ssh.h nssg.h curl_base64.h	\
+  rawstr.h curl_addrinfo.h curl_sspi.h slist.h nonblock.h		\
+  curl_memrchr.h imap.h pop3.h smtp.h pingpong.h rtsp.h curl_threads.h	\
+  warnless.h curl_hmac.h polarssl.h polarssl_threadlock.h curl_rtmp.h	\
+  curl_gethostname.h gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h	\
+  asyn.h curl_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h	\
+  curl_ntlm_msgs.h curl_sasl.h curl_schannel.h curl_multibyte.h		\
+  curl_darwinssl.h hostcheck.h bundles.h conncache.h curl_setup_once.h	\
+  multihandle.h setup-vms.h pipeline.h
+
+
+# List of libcurl source files required to generate VC IDE dsp and prj files
+WIN32SOURCES = $(CSOURCES)
+WIN32HEADERS = $(HHEADERS) config-win32.h
 all: all-recursive
 
 .SUFFIXES:
 am--refresh: Makefile
 	@:
-$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/lib/Makefile.inc $(am__configure_deps)
 	@for dep in $?; do \
 	  case '$(am__configure_deps)' in \
 	    *$$dep*) \
 	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
 	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
 		&& exit 0; \
@@ -424,12 +499,13 @@
 	    echo ' $(SHELL) ./config.status'; \
 	    $(SHELL) ./config.status;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
 	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
 	esac;
+$(srcdir)/lib/Makefile.inc:
 
 $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
 	$(SHELL) ./config.status --recheck
 
 $(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
 	$(am__cd) $(srcdir) && $(AUTOCONF)
@@ -858,12 +934,13 @@
 	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
 	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
 	fi
 mostlyclean-generic:
 
 clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
 
 distclean-generic:
 	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
 	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
 
 maintainer-clean-generic:
@@ -996,13 +1073,13 @@
 @CROSSCOMPILING_FALSE@test-am:
 @CROSSCOMPILING_FALSE@	@(cd tests; $(MAKE) all am-test)
 
 examples:
 	@(cd docs/examples; $(MAKE) check)
 
-# This is a hook to have 'make clean' also clean up the dosc and the tests
+# This is a hook to have 'make clean' also clean up the docs and the tests
 # dir. The extra check for the Makefiles being present is necessary because
 # 'make distcheck' will make clean first in these directories _before_ it runs
 # this hook.
 clean-local:
 	@(if test -f tests/Makefile; then cd tests; $(MAKE) clean; fi)
 	@(if test -f docs/Makefile; then cd docs; $(MAKE) clean; fi)
@@ -1074,9 +1151,91 @@
 	./lib/firefox-db2pem.sh lib/ca-bundle.crt
 
 checksrc:
 	cd lib && $(MAKE) checksrc
 	cd src && $(MAKE) checksrc
 
+.PHONY: vc6-ide
+
+vc6-ide:
+	$(MAKE) $(VC6LIBDSP)
+
+$(VC6LIBDSP): $(VC6LIBDSP_DEPS)
+	@(echo "generating '$(VC6LIBDSP)'"; \
+	\
+	for dir in 'vs' 'vs/vc6' 'vs/vc6/lib'; do \
+	  test -d "$$dir" || mkdir "$$dir" || exit 1; \
+	done; \
+	\
+	dir='..\..\..\lib\'; \
+	body='$(VC6LIBDSP)'.body; \
+	win32_srcs='$(WIN32SOURCES)'; \
+	win32_hdrs='$(WIN32HEADERS)'; \
+	sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
+	sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
+	\
+	echo "# Begin Group \"Source Files\""  > $$body; \
+	echo ""                               >> $$body; \
+	echo "# PROP Default_Filter \"\""     >> $$body; \
+	for file in $$sorted_srcs; do \
+	  echo "# Begin Source File"          >> $$body; \
+	  echo ""                             >> $$body; \
+	  echo "SOURCE="$$dir$$file           >> $$body; \
+	  echo "# End Source File"            >> $$body; \
+	done; \
+	echo "# End Group"                    >> $$body; \
+	echo "# Begin Group \"Header Files\"" >> $$body; \
+	echo ""                               >> $$body; \
+	echo "# PROP Default_Filter \"\""     >> $$body; \
+	for file in $$sorted_hdrs; do \
+	  echo "# Begin Source File"          >> $$body; \
+	  echo ""                             >> $$body; \
+	  echo "SOURCE="$$dir$$file           >> $$body; \
+	  echo "# End Source File"            >> $$body; \
+	done; \
+	echo "# End Group"                    >> $$body; \
+	\
+	awk '{ printf("%s\r\n", $$0); }' \
+	  $(srcdir)/$(VC6LIBDSPHEAD) $$body $(srcdir)/$(VC6LIBDSPFOOT) \
+	  > $(VC6LIBDSP) || { rm -f $$body; exit 1; }; \
+	\
+	rm -f $$body)
+
+.PHONY: vc8-ide
+
+vc8-ide:
+	$(MAKE) $(VC8LIBPRJ)
+
+$(VC8LIBPRJ): $(VC8LIBPRJ_DEPS)
+	@(echo "generating '$(VC8LIBPRJ)'"; \
+	\
+	for dir in 'vs' 'vs/vc8' 'vs/vc8/lib'; do \
+	  test -d "$$dir" || mkdir "$$dir" || exit 1; \
+	done; \
+	\
+	dir='..\..\..\lib\'; \
+	body='$(VC8LIBPRJ)'.body; \
+	win32_srcs='$(WIN32SOURCES)'; \
+	win32_hdrs='$(WIN32HEADERS)'; \
+	sorted_srcs=`for file in $$win32_srcs; do echo $$file; done | sort`; \
+	sorted_hdrs=`for file in $$win32_hdrs; do echo $$file; done | sort`; \
+	\
+	echo "%tab%%tab%<Filter Name=\"Source Files\">"  > $$body; \
+	for file in $$sorted_srcs; do \
+	  echo "%tab%%tab%%tab%<File RelativePath=\""$$dir$$file"\"></File>" >> $$body; \
+	done; \
+	echo "%tab%%tab%</Filter>"                      >> $$body; \
+	echo "%tab%%tab%<Filter Name=\"Header Files\">" >> $$body; \
+	for file in $$sorted_hdrs; do \
+	  echo "%tab%%tab%%tab%<File RelativePath=\""$$dir$$file"\"></File>" >> $$body; \
+	done; \
+	echo "%tab%%tab%</Filter>"                      >> $$body; \
+	\
+	awk '{ gsub(/%tab%/, "\t"); printf("%s\r\n", $$0); }' \
+	  $(srcdir)/$(VC8LIBPRJHEAD) $$body $(srcdir)/$(VC8LIBPRJFOOT) \
+	  > $(VC8LIBPRJ) || { rm -f $$body; exit 1; }; \
+	\
+	rm -f $$body)
+
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0: Makefile.msvc.names
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/mkinstalldirs /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/mkinstalldirs
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/mkinstalldirs	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/mkinstalldirs	2013-02-13 22:47:54.000000000 +0800
@@ -1,39 +1,162 @@
 #! /bin/sh
 # mkinstalldirs --- make directory hierarchy
-# Author: Noah Friedman <friedman@prep.ai.mit.edu>
-# Created: 1993-05-16
-# Public domain
 
+scriptversion=2009-04-28.21; # UTC
 
+# Original author: Noah Friedman <friedman@prep.ai.mit.edu>
+# Created: 1993-05-16
+# Public domain.
+#
+# This file is maintained in Automake, please report
+# bugs to <bug-automake@gnu.org> or send patches to
+# <automake-patches@gnu.org>.
+
+nl='
+'
+IFS=" ""	$nl"
 errstatus=0
+dirmode=
 
-for file
-do
-   set fnord `echo ":$file" | sed -ne 's/^:\//#/;s/^://;s/\// /g;s/^#/\//;p'`
-   shift
+usage="\
+Usage: mkinstalldirs [-h] [--help] [--version] [-m MODE] DIR ...
 
-   pathcomp=
-   for d
-   do
-     pathcomp="$pathcomp$d"
-     case "$pathcomp" in
-       -* ) pathcomp=./$pathcomp ;;
-     esac
+Create each directory DIR (with mode MODE, if specified), including all
+leading file name components.
 
-     if test ! -d "$pathcomp"; then
-        echo "mkdir -m0755 $pathcomp" 1>&2
+Report bugs to <bug-automake@gnu.org>."
+
+# process command line arguments
+while test $# -gt 0 ; do
+  case $1 in
+    -h | --help | --h*)         # -h for help
+      echo "$usage"
+      exit $?
+      ;;
+    -m)                         # -m PERM arg
+      shift
+      test $# -eq 0 && { echo "$usage" 1>&2; exit 1; }
+      dirmode=$1
+      shift
+      ;;
+    --version)
+      echo "$0 $scriptversion"
+      exit $?
+      ;;
+    --)                         # stop option processing
+      shift
+      break
+      ;;
+    -*)                         # unknown option
+      echo "$usage" 1>&2
+      exit 1
+      ;;
+    *)                          # first non-opt arg
+      break
+      ;;
+  esac
+done
 
-        mkdir -m0755 "$pathcomp" || lasterr=$?
+for file
+do
+  if test -d "$file"; then
+    shift
+  else
+    break
+  fi
+done
+
+case $# in
+  0) exit 0 ;;
+esac
+
+# Solaris 8's mkdir -p isn't thread-safe.  If you mkdir -p a/b and
+# mkdir -p a/c at the same time, both will detect that a is missing,
+# one will create a, then the other will try to create a and die with
+# a "File exists" error.  This is a problem when calling mkinstalldirs
+# from a parallel make.  We use --version in the probe to restrict
+# ourselves to GNU mkdir, which is thread-safe.
+case $dirmode in
+  '')
+    if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+      echo "mkdir -p -- $*"
+      exec mkdir -p -- "$@"
+    else
+      # On NextStep and OpenStep, the `mkdir' command does not
+      # recognize any option.  It will interpret all options as
+      # directories to create, and then abort because `.' already
+      # exists.
+      test -d ./-p && rmdir ./-p
+      test -d ./--version && rmdir ./--version
+    fi
+    ;;
+  *)
+    if mkdir -m "$dirmode" -p --version . >/dev/null 2>&1 &&
+       test ! -d ./--version; then
+      echo "mkdir -m $dirmode -p -- $*"
+      exec mkdir -m "$dirmode" -p -- "$@"
+    else
+      # Clean up after NextStep and OpenStep mkdir.
+      for d in ./-m ./-p ./--version "./$dirmode";
+      do
+        test -d $d && rmdir $d
+      done
+    fi
+    ;;
+esac
 
-        if test ! -d "$pathcomp"; then
-  	  errstatus=$lasterr
+for file
+do
+  case $file in
+    /*) pathcomp=/ ;;
+    *)  pathcomp= ;;
+  esac
+  oIFS=$IFS
+  IFS=/
+  set fnord $file
+  shift
+  IFS=$oIFS
+
+  for d
+  do
+    test "x$d" = x && continue
+
+    pathcomp=$pathcomp$d
+    case $pathcomp in
+      -*) pathcomp=./$pathcomp ;;
+    esac
+
+    if test ! -d "$pathcomp"; then
+      echo "mkdir $pathcomp"
+
+      mkdir "$pathcomp" || lasterr=$?
+
+      if test ! -d "$pathcomp"; then
+	errstatus=$lasterr
+      else
+	if test ! -z "$dirmode"; then
+	  echo "chmod $dirmode $pathcomp"
+	  lasterr=
+	  chmod "$dirmode" "$pathcomp" || lasterr=$?
+
+	  if test ! -z "$lasterr"; then
+	    errstatus=$lasterr
+	  fi
         fi
-     fi
+      fi
+    fi
 
-     pathcomp="$pathcomp/"
-   done
+    pathcomp=$pathcomp/
+  done
 done
 
 exit $errstatus
 
-# mkinstalldirs ends here
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-time-zone: "UTC"
+# time-stamp-end: "; # UTC"
+# End:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/AIX/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/AIX/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/AIX/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/AIX/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -154,12 +155,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -245,13 +247,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/AIX/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/AIX/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/AIX/RPM/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/AIX/RPM/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -60,12 +60,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -115,12 +116,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -206,13 +208,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages: Android
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/EPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/EPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/EPM/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/EPM/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -60,12 +60,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -115,12 +116,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -206,13 +208,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Linux/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Linux/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Linux/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Linux/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -154,12 +155,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -245,13 +247,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Linux/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Linux/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Linux/RPM/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Linux/RPM/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -60,12 +60,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -115,12 +116,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -206,13 +208,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Makefile.am	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Makefile.am	2013-02-07 06:07:47.000000000 +0800
@@ -26,8 +26,8 @@
 	Symbian/group/libcurl.iby 	\
 	Symbian/group/libcurl.mmp 	\
 	Symbian/group/libcurl.pkg 	\
 	Symbian/readme.txt 		\
 	TPF/curl.mak 			\
 	TPF/maketpf.env_curl 		\
-	TPF/maketpf.env_curllib
-
+	TPF/maketpf.env_curllib         \
+	Android/Android.mk
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -154,12 +155,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -245,13 +247,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -332,13 +333,14 @@
 	Symbian/group/libcurl.iby 	\
 	Symbian/group/libcurl.mmp 	\
 	Symbian/group/libcurl.pkg 	\
 	Symbian/readme.txt 		\
 	TPF/curl.mak 			\
 	TPF/maketpf.env_curl 		\
-	TPF/maketpf.env_curllib
+	TPF/maketpf.env_curllib         \
+	Android/Android.mk
 
 all: all-recursive
 
 .SUFFIXES:
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
 	@for dep in $?; do \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/OS400/curl.inc.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/OS400/curl.inc.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/OS400/curl.inc.in	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/OS400/curl.inc.in	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
       *                                  _   _ ____  _
       *  Project                     ___| | | |  _ \| |
       *                             / __| | | | |_) | |
       *                            | (__| |_| |  _ <| |___
       *                             \___|\___/|_| \_\_____|
       *
-      * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+      * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
       *
       * This software is licensed as described in the file COPYING, which
       * you should have received as part of this distribution. The terms
       * are also available at http://curl.haxx.se/docs/copyright.html.
       *
       * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -77,12 +77,14 @@
      d CURL_GLOBAL_ALL...
      d                 c                   X'00000003'
      d CURL_GLOBAL_NOTHING...
      d                 c                   X'00000000'
      d CURL_GLOBAL_DEFAULT...
      d                 c                   X'00000003'
+     d CURL_GLOBAL_ACK_EINTR...
+     d                 c                   X'00000004'
       *
      d CURL_VERSION_IPV6...
      d                 c                   X'00000001'
      d CURL_VERSION_KERBEROS4...
      d                 c                   X'00000002'
      d CURL_VERSION_SSL...
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/OS400/make-lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/OS400/make-lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/OS400/make-lib.sh	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/OS400/make-lib.sh	2013-04-12 02:46:54.000000000 +0800
@@ -10,13 +10,13 @@
 
 #      Create and compile the identification source file.
 
 echo '#pragma comment(user, "libcurl version '"${LIBCURL_VERSION}"'")' > os400.c
 echo '#pragma comment(user, __DATE__)' >> os400.c
 echo '#pragma comment(user, __TIME__)' >> os400.c
-echo '#pragma comment(copyright, "Copyright (C) 1998-2012 Daniel Stenberg et al. OS/400 version by P. Monnerat")' >> os400.c
+echo '#pragma comment(copyright, "Copyright (C) 1998-2013 Daniel Stenberg et al. OS/400 version by P. Monnerat")' >> os400.c
 make_module     OS400           os400.c
 LINK=                           # No need to rebuild service program yet.
 MODULES=
 
 
 #       Get source list.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Solaris/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Solaris/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Solaris/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Solaris/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -62,12 +62,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -117,12 +118,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -208,13 +210,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/vms/build_vms.com /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms/build_vms.com
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/vms/build_vms.com	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms/build_vms.com	2013-04-12 02:46:54.000000000 +0800
@@ -120,12 +120,22 @@
 $!		     KERBEROS support where available.
 $!		     LDAP default to on where available
 $!		     LARGEFILE default to on where available
 $!		     IEEE float default to on where available.
 $!		     Generate the curl_config.h file from system inspection.
 $!		     Linker finds ldap with out option file.
+$! 13-Mar-2013, Tom Grace
+$!                   Added missing slash in cc_full_list.
+$!                   Removed unwanted extra quotes inside symbol tool_main
+$!                   for non-VAX architectures that triggered link failure.
+$!                   Replaced curl_sys_inc with sys_inc.
+$! 19-Mar-2013, John Malmberg
+$!                   symbol tool_main needs to be quoted when parse style is
+$!                   set to exended in versions of VMS greater than 7.3-1.
+$!                   Remove curlbuild.h generation as it should be pre-built
+$!                   in the curl release or daily tarball.
 $!
 $!===========================================================================
 $!
 $!
 $! Save the original default dev:[dir], and arrange for its restoration
 $! at exit.
@@ -190,19 +200,45 @@
 $!
 $!
 $!
 $! Define the architecture-specific product file destination directory
 $! name(s).
 $!
+$ parse_style = "TRADITIONAL"
 $ if (f$getsyi("HW_MODEL") .lt. 1024)
 $ then
 $    arch_name = "VAX"
 $ else
 $    arch_name = ""
 $    arch_name = arch_name + f$edit(f$getsyi("ARCH_NAME"), "UPCASE")
 $    if (arch_name .eqs. "") then arch_name = "UNK"
+$!
+$!   Extended parsing option starts with VMS 7.3-1.
+$!   There is no 7.4, so that simplifies the parse a bit.
+$!
+$    node_swvers = f$getsyi("node_swvers")
+$    version_patch = f$extract(1, f$length(node_swvers), node_swvers)
+$    maj_ver = f$element(0, ".", version_patch)
+$    min_ver_patch = f$element(1, ".", version_patch)
+$    min_ver = f$element(0, "-", min_ver_patch)
+$    patch = f$element(1, "-", min_ver_patch)
+$    if patch .eqs. "-" then patch = ""
+$    parse_x = 0
+$    if maj_ver .ges. "8"
+$    then
+$       parse_x = 1
+$    else
+$       if maj_ver .eqs. "7" .and. min_ver .ges. "3" .and. patch .nes. ""
+$       then
+$          parse_x = 1
+$       endif
+$    endif
+$    if parse_x
+$    then
+$       parse_style = f$getjpi("", "parse_style_perm")
+$    endif
 $ endif
 $!
 $ exedir = proc_dev_dir - delim + ".''arch_name'" + delim
 $ lisdir = exedir
 $ objdir = exedir
 $!
@@ -223,13 +259,13 @@
 $ osslolb = 0
 $ nozlib = 0
 $ nokerberos = 0
 $ cc_names = "/names=(shortened, as_is)/repository='exedir'
 $ cc_defs = "HAVE_CONFIG_H=1"
 $ cc_list = "/list='objdir'/show=(expan, includ)/machine
-$ cc_full_list = "list='objdir'/show=(all, nomessages)/machine
+$ cc_full_list = "/list='objdir'/show=(all, nomessages)/machine
 $ link_qual = ""
 $ if arch_name .eqs. "VAX"
 $ then
 $    cc_debug = "/nodebug/optimize"
 $    !cc_defs = cc_defs + ""
 $    cc_float = ""
@@ -267,14 +303,12 @@
 $   if (f$search(prods) .nes. "") then delete /log 'prods'
 $   prods = proc_dev_dir + arch_name + ".DIR;1"
 $   if (f$search(prods) .nes. "") then set prot=o:rwed 'prods'
 $   if (f$search(prods) .nes. "") then delete /log 'prods'
 $   file = "[]config_vms.h"
 $   if f$search(file) .nes. "" then delete/log 'file';*
-$   file = "[.include.curl]curlbuild.h"
-$   if f$search(file) .nes. "" then delete/log 'file';*
 $   file = "[.lib]config_vms.h"
 $   if f$search(file) .nes. "" then delete/log 'file';*
 $       goto Common_Exit
 $    endif
 $!
 $ if f$locate(",clean_all,", args_lower) .lt. args_lower_len
@@ -646,33 +680,24 @@
 $   copy config.h 'objdir'curl_config.h
 $   delete config.h;
 $!   set nover
 $endif
 $!
 $!
-$write sys$output "Creating the new curlbuild.h"
-$new_conf = f$search("[.include.curl]curlbuild.h")
-$if new_conf .eqs. ""
-$then
-$!   set ver
-$   @'proc_dev_dir'build_curlbuild_h.com
-$!   set nover
-$endif
-$!
 $!
 $ on control_y then goto Common_Exit
 $!
 $ set default 'proc_dev_dir'
 $ sys_inc = "''curl_sys_inc1', ''curl_sys_inc2', ''curl_logical'"
 $ if curl_sys_krbinc .nes. ""
 $ then
 $   sys_inc = sys_inc + ",''curl_sys_krbinc'"
 $ endif
 $ if curl_sys_zlibinc .nes. ""
 $ then
-$   curl_sys_inc = sys_inc + ",''curl_sys_zlibinc'"
+$   sys_inc = sys_inc + ",''curl_sys_zlibinc'"
 $ endif
 $ call build "[--.lib]" "*.c" "''objdir'CURLLIB.OLB" "amigaos, nwlib, nwos"
 $ if ($status .eq. ctrl_y) then goto Common_Exit
 $ call build "[--.src]" "*.c" "''objdir'CURLSRC.OLB"
 $ if ($status .eq. ctrl_y) then goto Common_Exit
 $ call build "[]" "*.msg" "''objdir'CURLSRC.OLB"
@@ -719,19 +744,23 @@
 $close opt
 $!
 $!
 $! If we are not on VAX, then we want the debug symbol table in
 $! a separate file.
 $! VAX needs the tool_main unquoted in uppercase,
-$! Alpha and IA64 need tool_main quoted in exact case.
+$! Alpha and IA64 need tool_main quoted in exact case when parse style is
+$! extended.
 $ link_dsf1 = ""
 $ link_dsf2 = ""
 $ tool_main = "tool_main"
 $ if arch_name .nes. "VAX"
 $ then
-$   tool_main = """tool_main"""
+$   if parse_style .eqs. "EXTENDED"
+$   then
+$      tool_main = """tool_main"""
+$   endif
 $   link_dsf1 = "/dsf=" + exedir + "CURL.DSF"
 $   link_dsf2 = "/dsf=" + exedir + "CURL_DEBUG.DSF"
 $ endif
 $ if (list .eq. 0)
 $ then
 $   link_map1 = "/nomap"
@@ -835,13 +864,13 @@
 $    typ = f$edit(f$parse(file, , , "TYPE"), "UPCASE") - "."
 $    if (typ .eqs. "C")
 $    then
 $       'vo_c' "CC (opts) ", file
 $	define/user curl 'curl_logical'
 $	if curl_sys_krbinc .nes. "" then define/user gssapi 'curl_sys_krbinc'
-$	define/user decc$system_include 'curl_sys_inc'
+$	define/user decc$system_include 'sys_inc'
 $       CC 'cc_defs' -
          'cc_qual1' -
          'cc_qual2' -
          'file'
 $    else
 $       cmd_msg = "MESSAGE " + msg_qual
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms: config_h.com
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms: generate_config_vms_h_curl.com
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/vms/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/vms/Makefile.am	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms/Makefile.am	2013-04-12 02:46:54.000000000 +0800
@@ -1,6 +1,9 @@
-EXTRA_DIST = build_vms.com \
+EXTRA_DIST = \
+ build_vms.com \
+ config_h.com \
  curlmsg.h \
  curlmsg.msg \
  curlmsg.sdl \
  curlmsg_vms.h \
+ generate_config_vms_h_curl.com \
  readme
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/vms/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/vms/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/vms/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -114,12 +115,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -205,13 +207,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -262,17 +263,20 @@
 subdirs = @subdirs@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
-EXTRA_DIST = build_vms.com \
+EXTRA_DIST = \
+ build_vms.com \
+ config_h.com \
  curlmsg.h \
  curlmsg.msg \
  curlmsg.sdl \
  curlmsg_vms.h \
+ generate_config_vms_h_curl.com \
  readme
 
 all: all-am
 
 .SUFFIXES:
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Win32/cygwin/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Win32/cygwin/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Win32/cygwin/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Win32/cygwin/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -114,12 +115,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -205,13 +207,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Win32/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Win32/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/packages/Win32/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/packages/Win32/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -154,12 +155,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -245,13 +247,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/RELEASE-NOTES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/RELEASE-NOTES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/RELEASE-NOTES	2013-02-06 18:06:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/RELEASE-NOTES	2013-04-12 05:58:31.000000000 +0800
@@ -1,100 +1,133 @@
-Curl and libcurl 7.29.0
+Curl and libcurl 7.30.0
 
- Public curl releases:         131
+ Public curl releases:         132
  Command line options:         152
  curl_easy_setopt() options:   199
  Public functions in libcurl:  58
- Known libcurl bindings:       39
- Contributors:                 993
+ Known libcurl bindings:       42
+ Contributors:                 1005
 
-This release includes the following securify fix:
-
- o POP3/IMAP/SMTP SASL buffer overflow vulnerability [17]
+***
+  krb4 support is up for removal. If you care about it at all, speak up
+  on the curl-library list asap!
+***
 
 This release includes the following changes:
 
- o test: offer "automake" output and check for perl better
- o always-multi: always use non-blocking internals [1]
- o imap: Added support for sasl digest-md5 authentication
- o imap: Added support for sasl cram-md5 authentication
- o imap: Added support for sasl ntlm authentication
- o imap: Added support for sasl login authentication
- o imap: Added support for sasl plain text authentication
- o imap: Added support for login disabled server capability
- o mk-ca-bundle: add -f, support passing to stdout and more [5]
- o writeout: -w now supports remote_ip/port and local_ip/port
+ o imap: Changed response tag generation to be completely unique
+ o imap: Added support for SASL-IR extension
+ o imap: Added support for the list command
+ o imap: Added support for the append command
+ o imap: Added custom request parsing
+ o imap: Added support to the fetch command for UID and SECTION properties
+ o imap: Added parsing and verification of the UIDVALIDITY mailbox attribute
+ o darwinssl: Make certificate errors less techy
+ o imap/pop3/smtp: Added support for the STARTTLS capability
+ o checksrc: ban use of sprintf, vsprintf, strcat, strncat and gets
+ o curl_global_init() now accepts the CURL_GLOBAL_ACK_EINTR flag [10]
+ o Added CURLMOPT_MAX_HOST_CONNECTIONS, CURLMOPT_MAX_TOTAL_CONNECTIONS for
+   new multi interface connection handling
+ o Added CURLMOPT_MAX_PIPELINE_LENGTH, CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE,
+   CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE, CURLMOPT_PIPELINING_SITE_BL and
+   CURLMOPT_PIPELINING_SERVER_BL for new pipelining control [15]
 
 This release includes the following bugfixes:
 
- o nss: prevent NSS from crashing on client auth hook failure
- o darwinssl: Fixed inability to disable peer verification on Snow Leopard
-   and Lion
- o curl_multi_remove_handle: fix memory leak triggered with CURLOPT_RESOLVE
- o SCP: relative path didn't work as documented [7]
- o setup_once.h: HP-UX <sys/socket.h> issue workaround
- o configure: fix cross pkg-config detection
- o runtests: Do not add undefined values to @INC
- o build: fix compilation with CURL_DISABLE_CRYPTO_AUTH flag
- o multi: fix re-sending request on early connection close
- o HTTP: remove stray CRLF in chunk-encoded content-free request bodies
- o build: fix AIX compilation and usage of events/revents
- o VC Makefiles: add missing hostcheck
- o nss: clear session cache if a client certificate from file is used
- o nss: fix error messages for CURLE_SSL_{CACERT,CRL}_BADFILE
- o fix HTTP CONNECT tunnel establishment upon delayed response [2]
- o --libcurl: fix for non-zero default options
- o FTP: reject illegal port numbers in EPSV 229 responses
- o build: use per-target '_CPPFLAGS' for those currently using default
- o configure: fix automake 1.13 compatibility [6]
- o curl: ignore SIGPIPE [4]
- o pop3: Added support for non-blocking SSL upgrade
- o pop3: Fixed default authentication detection
- o imap: Fixed usernames and passwords that contain escape characters
- o packages/DOS/common.dj: remove COFF debug info generation [3]
- o imap/pop3/smtp: Fixed failure detection during TLS upgrade [8]
- o pop3: Fixed no known authentication mechanism when fallback is required [9]
- o formadd: reject trying to read a directory where a file is expected [10]
- o formpost: support quotes, commas and semicolon in file names [11]
- o docs: update the comments about loading CA certs with NSS [12]
- o docs: fix typos in man pages [13]
- o darwinssl: Fix bug where packets were sometimes transmitted twice [14]
- o winbuild: include version info for .dll .exe [15]
- o schannel: Removed extended error connection setup flag [16]
- o VMS: fix and generate the VMS build config
+ o SECURITY ADVISORY: cookie tailmatching to avoid cross-domain leakage [25]
+ o darwinssl: Fix build under Leopard
+ o DONE: consider callback-aborted transfers premature [1]
+ o ntlm: Fixed memory leaks
+ o smtp: Fixed an issue when processing EHLO failure responses
+ o pop3: Fixed incorrect return value from pop3_endofresp()
+ o pop3: Fixed SASL authentication capability detection
+ o pop3: Fixed blocking SSL connect when connecting via POP3S
+ o imap: Fixed memory leak when performing multiple selects 
+ o nss: fix misplaced code enabling non-blocking socket mode
+ o AddFormData: prevent only directories from being posted [2]
+ o darwinssl: fix infinite loop if server disconnected abruptly [3]
+ o metalink: fix improbable crash parsing metalink filename
+ o show proper host name on failed resolve
+ o MacOSX-Framework: Make script work in Xcode 4.0 and later
+ o strlcat: remove function [4]
+ o darwinssl: Fix send glitchiness with data > 32 or so KB [5]
+ o polarssl: better 1.1.x and 1.2.x support
+ o various documentation improvements
+ o multi: NULL pointer reference when closing an unused multi handle [9]
+ o SOCKS: fix socks proxy when noproxy matched [7]
+ o install-sh: updated to support multiple source files as arguments [6]
+ o PolarSSL: added human readable error strings
+ o resolver_error: remove wrong error message output
+ o docs: updates HTML index and general improvements
+ o curlbuild.h.dist: enhance non-configure GCC ABI detection logic
+ o sasl: Fixed null pointer reference when decoding empty digest challenge [8]
+ o easy: do not ignore poll() failures other than EINTR
+ o darwinssl: disable ECC ciphers under Mountain Lion by default
+ o CONNECT: count received headers [11]
+ o build: fixes for VMS
+ o CONNECT: clear 'rewindaftersend' on success [12]
+ o HTTP proxy: insert slash in URL if missing [13]
+ o hiperfifo: updated to use current libevent API [14]
+ o getinmemory.c: abort the transfer nicely if not enough memory
+ o improved win32 memorytracking
+ o corrected proxy header response headers count [16]
+ o FTP quote operations on re-used connection [17]
+ o tcpkeepalive on win32 [18]
+ o tcpkeepalive on Mac OS X [23]
+ o easy: acknowledge the CURLOPT_MAXCONNECTS option properly [19]
+ o easy interface: restore default MAXCONNECTS to 5
+ o win32: don't set SO_SNDBUF for windows vista or later versions [20]
+ o HTTP: made cookie sort function more deterministic
+ o winssl: Fixed memory leak if connection was not successful
+ o FTP: wait on both connections during active STOR state [21]
+ o connect: treat a failed local bind of an interface as a non-fatal error [22]
+ o darwinssl: disable insecure ciphers by default
+ o FTP: handle "rubbish" in front of directory name in 257 responses [24]
+ o mk-ca-bundle: Fixed lost OpenSSL output with "-t"
 
 This release includes the following known bugs:
 
  o see docs/KNOWN_BUGS (http://curl.haxx.se/docs/knownbugs.html)
 
 This release would not have looked like this without help, code, reports and
 advice from friends like these:
 
- Nick Zitzmann, Colin Watson, Fabian Keil, Kamil Dudka, Lijo Antony,
- Linus Nielsen Feltzing, Marc Hoersken, Stanislav Ivochkin, Steve Holme,
- Yang Tse, Balaji Parasuram, Dan Fandrich, Bob Relyea, Gisle Vanem,
- Yves Arrouye, Kai Engert, Lluís Batlle i Rossell, Jirí Hruka,
- John E. Malmberg, Tor Arntsen, Matt Arsenault, Sergei Nikulov,
- Guenter Knauf, Craig Davison, Ulrich Doehner, Jiri Jaburek, Bruno de Carvalho,
- Eldar Zaitov
+ Kamil Dudka, Steve Holme, Nick Zitzmann, Patricia Muscalu, Dan Fandrich,
+ Gisle Vanem, Guenter Knauf, Yang Tse, Oliver Gondža, Aki Koskinen,
+ Alexander Klauer, Kim Vandry, Willem Sparreboom, Jeremy Huddleston,
+ Bruno de Carvalho, Rainer Jung, Jeremy Huddleston, Kim Vandry, Jiri Hruska,
+ Alexander Klauer, Saran Neti, Alessandro Ghedini, Linus Nielsen Feltzing,
+ Martin Jansen, John E. Malmberg, Tom Grace, Patrick Monnerat,
+ Zdenek Pavlas, Myk Taylor, Cédric Deltheil, Robert Wruck, Sam Deane,
+ Clemens Gruber, Marc Hoersken, Tomas Mlcoch, Fredrik Thulin, Steven Gu,
+ Andrew Kurushin, Christian Hägele, Daniel Theron, Bill Middlecamp,
+ Richard Michael, Yamada Yasuharu
 
         Thanks! (and sorry if I forgot to mention someone)
 
 References to bug reports and discussions on issues:
 
- [1] = http://daniel.haxx.se/blog/2013/01/17/internally-were-all-multi-now/
- [2] = http://curl.haxx.se/mail/lib-2013-01/0191.html
- [3] = http://curl.haxx.se/mail/lib-2013-01/0130.html
- [4] = http://curl.haxx.se/bug/view.cgi?id=1180
- [5] = http://curl.haxx.se/mail/lib-2013-01/0045.html
- [6] = http://curl.haxx.se/mail/lib-2012-12/0246.html
- [7] = http://curl.haxx.se/bug/view.cgi?id=1173
- [8] = http://curl.haxx.se/mail/lib-2013-01/0250.html
- [9] = http://curl.haxx.se/mail/lib-2013-02/0004.html
- [10] = http://curl.haxx.se/mail/archive-2013-01/0017.html
- [11] = http://curl.haxx.se/bug/view.cgi?id=1171
- [12] = https://bugzilla.redhat.com/696783
- [13] = https://bugzilla.redhat.com/896544
- [14] = http://curl.haxx.se/mail/lib-2013-01/0295.html
- [15] = http://curl.haxx.se/bug/view.cgi?id=1186
- [16] = http://curl.haxx.se/bug/view.cgi?id=1187
- [17] = http://curl.haxx.se/docs/adv_20130206.html
+ [1] = http://curl.haxx.se/bug/view.cgi?id=1184
+ [2] = http://curl.haxx.se/mail/archive-2013-02/0040.html
+ [3] = http://curl.haxx.se/mail/lib-2013-03/0014.html
+ [4] = http://curl.haxx.se/bug/view.cgi?id=1192
+ [5] = http://curl.haxx.se/mail/lib-2013-02/0145.html
+ [6] = http://curl.haxx.se/bug/view.cgi?id=1195
+ [7] = http://curl.haxx.se/bug/view.cgi?id=1190
+ [8] = http://curl.haxx.se/bug/view.cgi?id=1193
+ [9] = http://curl.haxx.se/bug/view.cgi?id=1194
+ [10] = http://curl.haxx.se/bug/view.cgi?id=1168
+ [11] = http://curl.haxx.se/bug/view.cgi?id=1204
+ [12] = https://groups.google.com/d/msg/msysgit/B31LNftR4BI/KhRTz0iuGmUJ
+ [13] = http://curl.haxx.se/bug/view.cgi?id=1206
+ [14] = http://curl.haxx.se/bug/view.cgi?id=1199
+ [15] = http://daniel.haxx.se/blog/2013/03/26/better-pipelining-in-libcurl-7-30-0/
+ [16] = http://curl.haxx.se/bug/view.cgi?id=1204
+ [17] = http://curl.haxx.se/mail/lib-2013-03/0319.html
+ [18] = http://curl.haxx.se/bug/view.cgi?id=1209
+ [19] = http://curl.haxx.se/bug/view.cgi?id=1212
+ [20] = http://curl.haxx.se/bug/view.cgi?id=1188
+ [21] = http://curl.haxx.se/bug/view.cgi?id=1183
+ [22] = http://curl.haxx.se/bug/view.cgi?id=1189
+ [23] = http://curl.haxx.se/bug/view.cgi?id=1214
+ [24] = http://curl.haxx.se/mail/lib-2013-04/0113.html
+ [25] = http://curl.haxx.se/docs/adv_20130412.html
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0: sample.emacs
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.am	2013-01-20 21:30:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.am	2013-04-12 02:46:54.000000000 +0800
@@ -41,13 +41,12 @@
               -I$(top_builddir)/src          \
               -I$(top_srcdir)/lib            \
               -I$(top_srcdir)/src
 
 bin_PROGRAMS = curl
 
-# Mostly for Windows build targets, when using static libcurl
 if USE_CPPFLAG_CURL_STATICLIB
 AM_CPPFLAGS += -DCURL_STATICLIB
 endif
 
 include Makefile.inc
 
@@ -72,16 +71,15 @@
 # Use the C locale to ensure that only ASCII characters appear in the
 # embedded text.
 NROFF=env LC_ALL=C @NROFF@ @MANOPT@ # figured out by the configure script
 
 EXTRA_DIST = mkhelp.pl makefile.dj Makefile.vc6 Makefile.b32 Makefile.m32 \
 	macos/curl.mcp.xml.sit.hqx                                        \
-	macos/MACINSTALL.TXT macos/src/curl_GUSIConfig.cpp vc6curlsrc.dsp \
+	macos/MACINSTALL.TXT macos/src/curl_GUSIConfig.cpp \
 	macos/src/macos_main.cpp makefile.amiga curl.rc                   \
-	Makefile.netware Makefile.inc Makefile.Watcom vc6curlsrc.dsw      \
-	CMakeLists.txt
+	Makefile.netware Makefile.inc Makefile.Watcom CMakeLists.txt
 
 MANPAGE=$(top_srcdir)/docs/curl.1
 README=$(top_srcdir)/docs/MANUAL
 MKHELP=$(top_srcdir)/src/mkhelp.pl
 HUGE=tool_hugehelp.c
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.b32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.b32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.b32	2013-01-20 21:30:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.b32	2013-02-10 23:47:14.000000000 +0800
@@ -24,13 +24,13 @@
 !ifndef ZLIB_PATH
 ZLIB_PATH = ..\..\zlib-1.2.7
 !endif
 
 # Edit the path below to point to the base of your OpenSSL package.
 !ifndef OPENSSL_PATH
-OPENSSL_PATH = ..\..\openssl-0.9.8x
+OPENSSL_PATH = ..\..\openssl-0.9.8y
 !endif
 
 # Set program's name
 PROGNAME = curl.exe
 
 # Setup environment
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -58,14 +58,12 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 bin_PROGRAMS = curl$(EXEEXT)
-
-# Mostly for Windows build targets, when using static libcurl
 @USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_1 = -DCURL_STATICLIB
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/Makefile.inc
 subdir = src
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
@@ -74,12 +72,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -175,12 +174,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -270,13 +270,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -469,16 +468,15 @@
 curl_CPPFLAGS = $(AM_CPPFLAGS) $(LIBMETALINK_CPPFLAGS)
 curl_DEPENDENCIES = $(top_builddir)/lib/libcurl.la
 BUILT_SOURCES = tool_hugehelp.c
 CLEANFILES = tool_hugehelp.c
 EXTRA_DIST = mkhelp.pl makefile.dj Makefile.vc6 Makefile.b32 Makefile.m32 \
 	macos/curl.mcp.xml.sit.hqx                                        \
-	macos/MACINSTALL.TXT macos/src/curl_GUSIConfig.cpp vc6curlsrc.dsp \
+	macos/MACINSTALL.TXT macos/src/curl_GUSIConfig.cpp \
 	macos/src/macos_main.cpp makefile.amiga curl.rc                   \
-	Makefile.netware Makefile.inc Makefile.Watcom vc6curlsrc.dsw      \
-	CMakeLists.txt
+	Makefile.netware Makefile.inc Makefile.Watcom CMakeLists.txt
 
 MANPAGE = $(top_srcdir)/docs/curl.1
 README = $(top_srcdir)/docs/MANUAL
 MKHELP = $(top_srcdir)/src/mkhelp.pl
 HUGE = tool_hugehelp.c
 all: $(BUILT_SOURCES)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.m32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.m32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.m32	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.m32	2013-04-12 05:52:12.000000000 +0800
@@ -15,13 +15,13 @@
 # Edit the path below to point to the base of your Zlib sources.
 ifndef ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 endif
 # Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 endif
 # Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
 LIBSSH2_PATH = ../../libssh2-1.4.3
 endif
 # Edit the path below to point to the base of your librtmp package.
@@ -117,12 +117,15 @@
 ifeq ($(findstring -dyn,$(CFG)),-dyn)
 DYN = 1
 endif
 ifeq ($(findstring -ares,$(CFG)),-ares)
 ARES = 1
 endif
+ifeq ($(findstring -sync,$(CFG)),-sync)
+SYNC = 1
+endif
 ifeq ($(findstring -rtmp,$(CFG)),-rtmp)
 RTMP = 1
 SSL = 1
 ZLIB = 1
 endif
 ifeq ($(findstring -ssh2,$(CFG)),-ssh2)
@@ -170,18 +173,22 @@
 else
   curl_DEPENDENCIES = $(PROOT)/lib/libcurl.a
   curl_LDADD = -L$(PROOT)/lib -lcurl
   CFLAGS += -DCURL_STATICLIB
   LDFLAGS += -static
 endif
-ifdef ARES
-  ifndef DYN
-    curl_DEPENDENCIES += $(LIBCARES_PATH)/libcares.a
+ifdef SYNC
+  CFLAGS += -DUSE_SYNC_DNS
+else
+  ifdef ARES
+    ifndef DYN
+      curl_DEPENDENCIES += $(LIBCARES_PATH)/libcares.a
+    endif
+    CFLAGS += -DUSE_ARES -DCARES_STATICLIB
+    curl_LDADD += -L"$(LIBCARES_PATH)" -lcares
   endif
-  CFLAGS += -DUSE_ARES
-  curl_LDADD += -L"$(LIBCARES_PATH)" -lcares
 endif
 ifdef RTMP
   CFLAGS += -DUSE_LIBRTMP
   curl_LDADD += -L"$(LIBRTMP_PATH)/librtmp" -lrtmp -lwinmm
 endif
 ifdef SSH2
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.netware /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.netware
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.netware	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.netware	2013-02-10 23:47:14.000000000 +0800
@@ -16,13 +16,13 @@
 ifndef ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 endif
 
 # Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 endif
 
 # Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
 LIBSSH2_PATH = ../../libssh2-1.4.3
 endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc10
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc10	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc10	2013-04-12 15:13:03.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -49,18 +49,17 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
-
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 !ENDIF
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc6
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc6	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc6	2013-02-10 23:47:14.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -49,18 +49,17 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
-
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 !ENDIF
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc8
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc8	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc8	2013-04-12 15:13:03.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -49,18 +49,17 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
-
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 !ENDIF
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc9
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.vc9	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.vc9	2013-04-12 15:13:03.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1999 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1999 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -49,18 +49,17 @@
 !ENDIF
 
 # ------------------------------------------------
 # Makefile.msvc.names provides libcurl file names
 # ------------------------------------------------
 
-!INCLUDE ..\Makefile.msvc.names
-
+!INCLUDE ..\winbuild\Makefile.msvc.names
 
 
 !IFNDEF OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-0.9.8x
+OPENSSL_PATH = ../../openssl-0.9.8y
 !ENDIF
 
 !IFNDEF ZLIB_PATH
 ZLIB_PATH = ../../zlib-1.2.7
 !ENDIF
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.Watcom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.Watcom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/Makefile.Watcom	2013-01-29 04:55:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/Makefile.Watcom	2013-02-10 23:47:14.000000000 +0800
@@ -87,13 +87,13 @@
 LIBRTMP_ROOT = ..$(DS)..$(DS)rtmpdump-2.3
 !endif
 
 !ifdef %openssl_root
 OPENSSL_ROOT = $(%openssl_root)
 !else
-OPENSSL_ROOT = ..$(DS)..$(DS)openssl-0.9.8x
+OPENSSL_ROOT = ..$(DS)..$(DS)openssl-0.9.8y
 !endif
 
 !ifdef %ares_root
 ARES_ROOT = $(%ares_root)
 !else
 ARES_ROOT = ..$(DS)ares
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_dirhie.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_dirhie.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_dirhie.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_dirhie.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -95,18 +95,20 @@
 {
   char *tempdir;
   char *tempdir2;
   char *outdup;
   char *dirbuildup;
   CURLcode result = CURLE_OK;
+  size_t outlen;
 
+  outlen = strlen(outfile);
   outdup = strdup(outfile);
   if(!outdup)
     return CURLE_OUT_OF_MEMORY;
 
-  dirbuildup = malloc(strlen(outfile) + 1);
+  dirbuildup = malloc(outlen + 1);
   if(!dirbuildup) {
     Curl_safefree(outdup);
     return CURLE_OUT_OF_MEMORY;
   }
   dirbuildup[0] = '\0';
 
@@ -116,18 +118,18 @@
     tempdir2 = strtok(NULL, DIR_CHAR);
     /* since strtok returns a token for the last word even
        if not ending with DIR_CHAR, we need to prune it */
     if(tempdir2 != NULL) {
       size_t dlen = strlen(dirbuildup);
       if(dlen)
-        sprintf(&dirbuildup[dlen], "%s%s", DIR_CHAR, tempdir);
+        snprintf(&dirbuildup[dlen], outlen - dlen, "%s%s", DIR_CHAR, tempdir);
       else {
         if(0 != strncmp(outdup, DIR_CHAR, 1))
           strcpy(dirbuildup, tempdir);
         else
-          sprintf(dirbuildup, "%s%s", DIR_CHAR, tempdir);
+          snprintf(dirbuildup, outlen, "%s%s", DIR_CHAR, tempdir);
       }
       if(access(dirbuildup, F_OK) == -1) {
         if(-1 == mkdir(dirbuildup,(mode_t)0000750)) {
           show_dir_errno(errors, dirbuildup);
           result = CURLE_WRITE_ERROR;
           break; /* get out of loop */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_help.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_help.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_help.c	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_help.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -68,13 +68,13 @@
   "     --delegation STRING GSS-API delegation permission",
   "     --digest        Use HTTP Digest Authentication (H)",
   "     --disable-eprt  Inhibit using EPRT or LPRT (F)",
   "     --disable-epsv  Inhibit using EPSV (F)",
   " -D, --dump-header FILE  Write the headers to this file",
   "     --egd-file FILE  EGD socket path for random data (SSL)",
-  "     --engine ENGINGE  Crypto engine (SSL). \"--engine list\" for list",
+  "     --engine ENGINE  Crypto engine (SSL). \"--engine list\" for list",
 #ifdef USE_ENVIRONMENT
   "     --environment   Write results to environment variables (RISC OS)",
 #endif
   " -f, --fail          Fail silently (no output at all) on HTTP errors (H)",
   " -F, --form CONTENT  Specify HTTP multipart POST data (H)",
   "     --form-string STRING  Specify HTTP multipart POST data (H)",
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_hugehelp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_hugehelp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_hugehelp.c	2013-01-29 04:57:07.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_hugehelp.c	2013-03-31 04:46:09.000000000 +0800
@@ -1,11 +1,11 @@
 #include "tool_setup.h"
 #ifndef HAVE_LIBZ
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Mon Jan 28 21:57:07 2013
+ * Generation time: Sat Mar 30 21:46:09 2013
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 void hugehelp(void)
 {
    fputs(
@@ -3936,13 +3936,13 @@
 , stdout) ;
 }
 #endif /* USE_MANUAL */
 #else
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Mon Jan 28 21:57:07 2013
+ * Generation time: Sat Mar 30 21:46:09 2013
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 #include <zlib.h>
 #include "memdebug.h" /* keep this as LAST include */
 static const unsigned char hugehelpgz[] = {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_main.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_main.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_main.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_main.c	2013-04-12 02:46:54.000000000 +0800
@@ -49,13 +49,13 @@
 /*
  * vms_show is a global variable, used in main() as parameter for
  * function vms_special_exit() to allow proper curl tool exiting.
  * Its value may be set in other tool_*.c source files thanks to
  * forward declaration present in tool_vms.h
  */
-static int vms_show = 0;
+int vms_show = 0;
 #endif
 
 /*
  * Ensure that file descriptors 0, 1 and 2 (stdin, stdout, stderr) are
  * open before starting to run.  Otherwise, the first three network
  * sockets opened by curl could be used for input sources, downloaded data
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_metalink.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_metalink.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_metalink.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_metalink.h	2013-02-15 20:44:52.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -153,9 +153,12 @@
 
 #else /* USE_METALINK */
 
 #define count_next_metalink_resource(x)  0
 #define clean_metalink(x)  Curl_nop_stmt
 
+/* metalink_cleanup() takes no arguments */
+#define metalink_cleanup() Curl_nop_stmt
+
 #endif /* USE_METALINK */
 
 #endif /* HEADER_CURL_TOOL_METALINK_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_operate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_operate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_operate.c	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_operate.c	2013-04-12 02:46:54.000000000 +0800
@@ -532,13 +532,13 @@
         struct InStruct input;
         struct timeval retrystart;
         curl_off_t uploadfilesize;
         long retry_numretries;
         long retry_sleep_default;
         long retry_sleep;
-        char *this_url;
+        char *this_url = NULL;
         int metalink_next_res = 0;
 
         outfile = NULL;
         infdopen = FALSE;
         infd = STDIN_FILENO;
         uploadfilesize = -1; /* -1 means unknown */
@@ -802,24 +802,24 @@
                  then append the data with an ampersand separator instead! */
               sep='&';
           }
           /*
            * Then append ? followed by the get fields to the url.
            */
-          urlbuffer = malloc(strlen(this_url) + strlen(httpgetfields) + 3);
-          if(!urlbuffer) {
-            res = CURLE_OUT_OF_MEMORY;
-            goto show_error;
-          }
           if(pc)
-            sprintf(urlbuffer, "%s%c%s", this_url, sep, httpgetfields);
+            urlbuffer = aprintf("%s%c%s", this_url, sep, httpgetfields);
           else
             /* Append  / before the ? to create a well-formed url
                if the url contains a hostname only
             */
-            sprintf(urlbuffer, "%s/?%s", this_url, httpgetfields);
+            urlbuffer = aprintf("%s/?%s", this_url, httpgetfields);
+
+          if(!urlbuffer) {
+            res = CURLE_OUT_OF_MEMORY;
+            goto show_error;
+          }
 
           Curl_safefree(this_url); /* free previous URL */
           this_url = urlbuffer; /* use our new URL instead! */
         }
 
         if(!config->errors)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_operhlp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_operhlp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_operhlp.c	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_operhlp.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -28,17 +28,13 @@
 #include "curlx.h"
 
 #include "tool_cfgable.h"
 #include "tool_convert.h"
 #include "tool_operhlp.h"
 #include "tool_version.h"
-
-#ifdef USE_METALINK
-/* import the declaration of metalink_cleanup() */
-#  include "tool_metalink.h"
-#endif
+#include "tool_metalink.h"
 
 #include "memdebug.h" /* keep this as LAST include */
 
 /*
  * my_useragent: returns allocated string with default user agent
  */
@@ -124,28 +120,26 @@
     else
       filep = filename;
 
     /* URL encode the file name */
     encfile = curl_easy_escape(curl, filep, 0 /* use strlen */);
     if(encfile) {
-      char *urlbuffer = malloc(strlen(url) + strlen(encfile) + 3);
-      if(!urlbuffer) {
-        curl_free(encfile);
-        Curl_safefree(url);
-        return NULL;
-      }
+      char *urlbuffer;
       if(ptr)
         /* there is a trailing slash on the URL */
-        sprintf(urlbuffer, "%s%s", url, encfile);
+        urlbuffer = aprintf("%s%s", url, encfile);
       else
         /* there is no trailing slash on the URL */
-        sprintf(urlbuffer, "%s/%s", url, encfile);
+        urlbuffer = aprintf("%s/%s", url, encfile);
 
       curl_free(encfile);
       Curl_safefree(url);
 
+      if(!urlbuffer)
+        return NULL;
+
       url = urlbuffer; /* use our new URL instead! */
     }
   }
   return url;
 }
 
@@ -217,15 +211,13 @@
  * _all_ libcurl usage is done.
  */
 void main_free(void)
 {
   curl_global_cleanup();
   convert_cleanup();
-#ifdef USE_METALINK
   metalink_cleanup();
-#endif
 }
 
 #ifdef CURLDEBUG
 void memory_tracking_init(void)
 {
   char *env;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_parsecfg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_parsecfg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_parsecfg.c	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_parsecfg.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -272,35 +272,36 @@
  * NULL is returned on an out of memory condition.
  */
 static char *my_get_line(FILE *fp)
 {
   char buf[4096];
   char *nl = NULL;
-  char *retval = NULL;
+  char *line = NULL;
 
   do {
     if(NULL == fgets(buf, sizeof(buf), fp))
       break;
-    if(!retval) {
-      retval = strdup(buf);
-      if(!retval)
+    if(!line) {
+      line = strdup(buf);
+      if(!line)
         return NULL;
     }
     else {
       char *ptr;
-      ptr = realloc(retval, strlen(retval) + strlen(buf) + 1);
+      size_t linelen = strlen(line);
+      ptr = realloc(line, linelen + strlen(buf) + 1);
       if(!ptr) {
-        Curl_safefree(retval);
+        Curl_safefree(line);
         return NULL;
       }
-      retval = ptr;
-      strcat(retval, buf);
+      line = ptr;
+      strcpy(&line[linelen], buf);
     }
-    nl = strchr(retval, '\n');
+    nl = strchr(line, '\n');
   } while(!nl);
 
   if(nl)
     *nl = '\0';
 
-  return retval;
+  return line;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_setopt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_setopt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_setopt.c	2013-01-17 06:22:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_setopt.c	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -196,13 +196,13 @@
     }
     else if(c=='"') {
       strcpy(e, "\\\"");
       e += 2;
     }
     else if(! isprint(c)) {
-      sprintf(e, "\\%03o", c);
+      snprintf(e, 4, "\\%03o", c);
       e += 4;
     }
     else
       *e++ = c;
   }
   *e = '\0';
@@ -267,13 +267,13 @@
         rest &= ~ nv->value;    /* remove bits handled here */
         CODE3("%s(long)%s%s",
               preamble, nv->name, rest ? " |" : ");");
         if(!rest)
           break;                /* handled them all */
         /* replace with all spaces for continuation line */
-        sprintf(preamble, "%*s", strlen(preamble), "");
+        snprintf(preamble, sizeof(preamble), "%*s", strlen(preamble), "");
       }
     }
     /* If any bits have no definition, output an explicit value.
      * This could happen if new bits are defined and used
      * but the NameValue list is not updated. */
     if(rest)
@@ -310,13 +310,13 @@
         rest &= ~ nv->value;    /* remove bits handled here */
         CODE3("%s(long)%s%s",
               preamble, nv->name, rest ? " |" : ");");
         if(!rest)
           break;                /* handled them all */
         /* replace with all spaces for continuation line */
-        sprintf(preamble, "%*s", strlen(preamble), "");
+        snprintf(preamble, sizeof(preamble), "%*s", strlen(preamble), "");
       }
     }
     /* If any bits have no definition, output an explicit value.
      * This could happen if new bits are defined and used
      * but the NameValue list is not updated. */
     if(rest)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src/tool_version.h	2013-02-06 18:14:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/src/tool_version.h	2013-04-12 15:13:03.000000000 +0800
@@ -22,13 +22,13 @@
  *
  ***************************************************************************/
 #include <curl/curlver.h>
 
 #define CURL_NAME "curl"
 #define CURL_COPYRIGHT LIBCURL_COPYRIGHT
-#define CURL_VERSION "7.29.0"
+#define CURL_VERSION "7.30.0"
 #define CURL_VERSION_MAJOR LIBCURL_VERSION_MAJOR
 #define CURL_VERSION_MINOR LIBCURL_VERSION_MINOR
 #define CURL_VERSION_PATCH LIBCURL_VERSION_PATCH
 #define CURL_ID CURL_NAME " " CURL_VERSION " (" OS ") "
 
 #endif /* HEADER_CURL_TOOL_VERSION_H */
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src: vc6curlsrc.dsp
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/src: vc6curlsrc.dsw
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/certs/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/certs/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/certs/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/certs/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -154,12 +155,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -245,13 +247,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/certs/scripts/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/certs/scripts/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/certs/scripts/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/certs/scripts/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -114,12 +115,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -205,13 +207,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/Makefile.am	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/Makefile.am	2013-04-12 05:55:10.000000000 +0800
@@ -9,101 +9,118 @@
 test30 test31 test32 test33 test34 test35 test36 test37 test38 test39	\
 test40 test41 test42 test43 test44 test45 test46 test47 test48 test49	\
 test50 test51 test52 test53 test54 test55 test56 test57 test58 test59	\
 test60 test61 test62 test63 test64 test65 test66 test67 test68 test69	\
 test70 test71 test72 test73 test74 test75 test76 test77 test78 test79	\
 test80 test81 test82 test83 test84 test85 test86 test87 test88 test89	\
-test90 test91 test92 test93 test94 test95 test97 test98 test99 test100	\
-test101 test102 test103 test104 test105 test106 test107 test108 test109	\
-test110 test111 test112 test113 test114 test115 test116 test117 test118	\
-test119 test120 test121 test122 test123 test124 test125 test126 test127	\
-test128 test129 test130 test131 test132 test133 test134 test135 test136	\
-test137 test138 test139 test140 test141 test142 test143 test144 test145	\
-test146 test147 test148 test149 test150 test151 test152 test153 test154	\
-test155 test156 test157 test158 test159 test160 test161 test162 test163	\
-test164 test165 test166 test167 test168 test169 test170 test171 test172	\
-test173 test174 test175 test176 test177 test178 test179 test180 test181	\
-test182 test183 test184 test185 test186 test187 test188 test189 test190	\
-test191 test192 test193 test194 test195 test196 test197 test198 test199	\
-test200 test201 test202 test203 test204 test205 test206 test207 test208	\
-test209 test210 test211 test212 test213 test214 test215 test216 test217	\
-test218 test220 test221 test222 test223 test224 test225 test226 test227	\
-test228 test229 test231 test233 test234 test235 test236 test237 test238	\
-test239 test240 test241 test242 test243 test245 test246 test247 test248	\
-test249 test250 test251 test252 test253 test254 test255 test256 test257	\
-test258 test259 test260 test261 test262 test263 test264 test265 test266	\
-test267 test268 test269 test270 test271 test272 test273 test274 test275	\
-test276 test277 test278 test279 test280 test281 test282 test283 test284	\
-test285 test286 test287 test288 test289 test290 test291 test292 test293	\
-test294 test295 test296 test297 test298 test299 test300 test301 test302	\
-test303 test304 test305 test306 test307 test308 test309 test310 test311	\
-test312 test313 test320 test321 test322 test323 test324 test350 test351	\
-test352 test353 test354 test400 test401 test402 test403 test404 test405	\
-test406 test407 test408 test409 test500 test501 test502 test503 test504	\
-test505 test506 test507 test508 test510 test511 test512 test513 test514	\
-test515 test516 test517 test518 test519 test520 test521 test522 test523	\
-test524 test525 test526 test527 test528 test529 test530 test531 test532	\
-test533 test534 test535 test536 test537 test538 test539 test540 test541	\
-test542 test543 test544 test545 test546 test547 test548 test549 test550	\
-test551 test552 test553 test554 test555 test556 test557 test560 test561	\
-test562 test563 test564 test565 test566 test567 test568 test569 test570	\
-test571 test572 test573 test574 test575 test576 test578 test579 test580	\
-test581 test582 test583 test584 test585 test586 test587 test588 test590 \
-test591 test592 test593 test594 test595 test596 test597 test598 test599 \
-test600 test601 test602 test603 test604	\
-test605 test606 test607 test608 test609 test610 test611 test612 test613	\
-test614 test615 test616 test617 test618 test619 test620 test621 test622	\
-test623 test624 test625 test626 test627 test628 test629 test630 test631	\
-test632 test633 test634 test635 test636 test637 test638 test639 \
+test90 test91 test92 test93 test94 test95 test96 test97 test98 test99   \
+test100 test101 test102 test103 test104 test105 test106 test107 test108 \
+test109 test110 test111 test112 test113 test114 test115 test116 test117 \
+test118 test119 test120 test121 test122 test123 test124 test125 test126 \
+test127 test128 test129 test130 test131 test132 test133 test134 test135 \
+test136 test137 test138 test139 test140 test141 test142 test143 test144 \
+test145 test146 test147 test148 test149 test150 test151 test152 test153 \
+test154 test155 test156 test157 test158 test159 test160 test161 test162 \
+test163 test164 test165 test166 test167 test168 test169 test170 test171 \
+test172 test173 test174 test175 test176 test177 test178 test179 test180 \
+test181 test182 test183 test184 test185 test186 test187 test188 test189 \
+test190 test191 test192 test193 test194 test195 test196 test197 test198 \
+test199 test200 test201 test202 test203 test204 test205 test206 test207 \
+test208 test209 test210 test211 test212 test213 test214 test215 test216 \
+test217 test218         test220 test221 test222 test223 test224 test225 \
+test226 test227 test228 test229         test231         test233 test234 \
+test235 test236 test237 test238 test239 test240 test241 test242 test243 \
+        test245 test246 test247 test248 test249 test250 test251 test252 \
+test253 test254 test255 test256 test257 test258 test259 test260 test261 \
+test262 test263 test264 test265 test266 test267 test268 test269 test270 \
+test271 test272 test273 test274 test275 test276 test277 test278 test279 \
+test280 test281 test282 test283 test284 test285 test286 test287 test288 \
+test289 test290 test291 test292 test293 test294 test295 test296 test297 \
+test298 test299 test300 test301 test302 test303 test304 test305 test306 \
+test307 test308 test309 test310 test311 test312 test313                 \
+                                test320 test321 test322 test323 test324 \
+test350 test351 test352 test353 test354 \
+\
+test400 test401 test402 test403 test404 test405 test406 test407 test408 \
+test409 \
+\
+test500 test501 test502 test503 test504 test505 test506 test507 test508 \
+test509 test510 test511 test512 test513 test514 test515 test516 test517 \
+test518 test519 test520 test521 test522 test523 test524 test525 test526 \
+test527 test528 test529 test530 test531 test532 test533 test534 test535 \
+test536 test537 test538 test539 test540 test541 test542 test543 test544 \
+test545 test546 test547 test548 test549 test550 test551 test552 test553 \
+test554 test555 test556 test557 test558         test560 test561 test562 \
+test563 test564 test565 test566 test567 test568 test569 test570 test571 \
+test572 test573 test574 test575 test576         test578 test579 test580 \
+test581 test582 test583 test584 test585 test586 test587 test588         \
+test590 test591 test592 test593 test594 test595 test596 test597 test598 \
+test599 test600 test601 test602 test603 test604 test605 test606 test607 \
+test608 test609 test610 test611 test612 test613 test614 test615 test616 \
+test617 test618 test619 test620 test621 test622 test623 test624 test625 \
+test626 test627 test628 test629 test630 test631 test632 test633 test634 \
+test635 test636 test637 test638 test639 \
+\
 test700 test701 test702	test703 test704 test705 test706 test707 test708 \
 test709 test710 \
-test800 test801 test802	\
-test803 test804 test805 test806 test807 test808 test809 test810 test811	\
-test812 test813 test814 test815 \
-test1000 test1001 test1002 test1003 test1004 test1005	\
-test1006 test1007 test1008 test1009 test1010 test1011 test1012 test1013	\
-test1014 test1015 test1016 test1017 test1018 test1019 test1020 test1021	\
-test1022 test1023 test1024 test1025 test1026 test1027 test1028 test1029	\
-test1030 test1031 test1032 test1033 test1034 test1035 test1036 test1037	\
-test1038 test1039 test1040 test1041 test1042 test1043 test1044 test1045	\
-test1046 test1047 test1048 test1049 test1050 test1051 test1052 test1053	\
-test1054 test1055 test1056 test1057 test1058 test1059 test1060 test1061	\
-test1062 test1063 test1064 test1065 test1066 test1067 test1068 test1069	\
-test1070 test1071 test1072 test1073 test1074 test1075 test1076 test1077	\
-test1078 test1079 test1080 test1081 test1082 test1083 test1084 test1085	\
-test1086 test1087 test1088 test1089 test1090 test1091 test1092 test1093	\
-test1094 test1095 test1096 test1097 test1098 test1099 test1100 test1101	\
-test1102 test1103 test1104 test1105 test1106 test1107 test1108 test1109	\
-test1110 test1111 test1112 test1113 test1114 test1115 test1116 test1117	\
-test1118 test1119 test1120 test1121 test1122 test1123 test1124 test1125	\
-test1126 test1127 test1128 test1129 test1130 test1131 test1132 test1133 \
+\
+test800 test801 test802 test803 test804 test805 test806 test807 test808 \
+\
+test850 test851 test852 test853 test854 test855 test856 test857 \
+\
+test900 test901 test902 test903 test904 test905 test906 \
+\
+test1000 test1001 test1002 test1003 test1004 test1005 test1006 test1007 \
+test1008 test1009 test1010 test1011 test1012 test1013 test1014 test1015 \
+test1016 test1017 test1018 test1019 test1020 test1021 test1022 test1023 \
+test1024 test1025 test1026 test1027 test1028 test1029 test1030 test1031 \
+test1032 test1033 test1034 test1035 test1036 test1037 test1038 test1039 \
+test1040 test1041 test1042 test1043 test1044 test1045 test1046 test1047 \
+test1048 test1049 test1050 test1051 test1052 test1053 test1054 test1055 \
+test1056 test1057 test1058 test1059 test1060 test1061 test1062 test1063 \
+test1064 test1065 test1066 test1067 test1068 test1069 test1070 test1071 \
+test1072 test1073 test1074 test1075 test1076 test1077 test1078 test1079 \
+test1080 test1081 test1082 test1083 test1084 test1085 test1086 test1087 \
+test1088 test1089 test1090 test1091 test1092 test1093 test1094 test1095 \
+test1096 test1097 test1098 test1099 test1100 test1101 test1102 test1103 \
+test1104 test1105 test1106 test1107 test1108 test1109 test1110 test1111 \
+test1112 test1113 test1114 test1115 test1116 test1117 test1118 test1119 \
+test1120 test1121 test1122 test1123 test1124 test1125 test1126 test1127 \
+test1128 test1129 test1130 test1131 test1132 test1133 \
+\
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
-test1208 test1209 test1210 test1211 \
+test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
+test1216 test1217 test1218 \
 test1220 test1221 test1222 test1223 \
-test1300 test1301 test1302 test1303 test1304 test1305	\
-test1306 test1307 test1308 test1309 test1310 test1311 test1312 test1313 \
-test1314 test1315 test1316 test1317 test1318 test1319 test1320 test1321 \
-test1322 test1323 test1324 test1325 test1326 test1327 test1328 test1329 \
-test1331 test1332 test1333 test1334 test1335 test1336 test1337 test1338 \
-test1339 test1340 test1341 test1342 test1343 test1344 test1345 test1346 \
-test1347 test1348 test1349 test1350 test1351 test1352 test1353 test1354 \
-test1355 test1356 test1357 test1358 test1359 test1360 test1361 test1362 \
-test1363 test1364 test1365 test1366 test1367 test1368 test1369 test1370 \
-test1371 test1372 test1373 test1374 test1375 test1376 test1377 test1378 \
-test1379 test1380 test1381 test1382 test1383 test1384 test1385 test1386 \
-test1387 test1388 test1389 test1390 test1391 test1392 test1393 \
+\
+test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
+test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
+test1316 test1317 test1318 test1319 test1320 test1321 test1322 test1323 \
+test1324 test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
+test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
+test1340 test1341 test1342 test1343 test1344 test1345 test1346 test1347 \
+test1348 test1349 test1350 test1351 test1352 test1353 test1354 test1355 \
+test1356 test1357 test1358 test1359 test1360 test1361 test1362 test1363 \
+test1364 test1365 test1366 test1367 test1368 test1369 test1370 test1371 \
+test1372 test1373 test1374 test1375 test1376 test1377 test1378 test1379 \
+test1380 test1381 test1382 test1383 test1384 test1385 test1386 test1387 \
+test1388 test1389 test1390 test1391 test1392 test1393 \
+\
 test1400 test1401 test1402 test1403 test1404 test1405 test1406 test1407 \
 test1408 test1409 test1410 test1411 test1412 test1413 \
-test1500 test1501 test1502 test1503 test1504 test1505 test1506 \
+\
+test1500 test1501 test1502 test1503 test1504 test1505 test1506 test1507 \
+test1508 test1509 test1510 \
+\
+test1900 test1901 test1902 test1903 \
+\
 test2000 test2001 test2002 test2003 test2004 test2005 test2006 test2007 \
 test2008 test2009 test2010 test2011 test2012 test2013 test2014 test2015 \
-test2016 test2017 test2018 test2019 test2020 test2021 test2022 \
-test2023 test2024 test2025 \
-test2026 test2027 test2028 \
-test2029 test2030 test2031 \
-test2032
+test2016 test2017 test2018 test2019 test2020 test2021 test2022 test2023 \
+test2024 test2025 test2026 test2027 test2028 test2029 test2030 test2031 \
+test2032 test2033
 
 EXTRA_DIST = $(TESTCASES) DISABLED
 
 filecheck:
 	@mkdir test-place; \
 	cp "$(top_srcdir)"/tests/data/test[0-9]* test-place/; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/Makefile.in	2013-04-12 06:14:10.000000000 +0800
@@ -59,12 +59,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -114,12 +115,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -205,13 +207,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -273,101 +274,118 @@
 test30 test31 test32 test33 test34 test35 test36 test37 test38 test39	\
 test40 test41 test42 test43 test44 test45 test46 test47 test48 test49	\
 test50 test51 test52 test53 test54 test55 test56 test57 test58 test59	\
 test60 test61 test62 test63 test64 test65 test66 test67 test68 test69	\
 test70 test71 test72 test73 test74 test75 test76 test77 test78 test79	\
 test80 test81 test82 test83 test84 test85 test86 test87 test88 test89	\
-test90 test91 test92 test93 test94 test95 test97 test98 test99 test100	\
-test101 test102 test103 test104 test105 test106 test107 test108 test109	\
-test110 test111 test112 test113 test114 test115 test116 test117 test118	\
-test119 test120 test121 test122 test123 test124 test125 test126 test127	\
-test128 test129 test130 test131 test132 test133 test134 test135 test136	\
-test137 test138 test139 test140 test141 test142 test143 test144 test145	\
-test146 test147 test148 test149 test150 test151 test152 test153 test154	\
-test155 test156 test157 test158 test159 test160 test161 test162 test163	\
-test164 test165 test166 test167 test168 test169 test170 test171 test172	\
-test173 test174 test175 test176 test177 test178 test179 test180 test181	\
-test182 test183 test184 test185 test186 test187 test188 test189 test190	\
-test191 test192 test193 test194 test195 test196 test197 test198 test199	\
-test200 test201 test202 test203 test204 test205 test206 test207 test208	\
-test209 test210 test211 test212 test213 test214 test215 test216 test217	\
-test218 test220 test221 test222 test223 test224 test225 test226 test227	\
-test228 test229 test231 test233 test234 test235 test236 test237 test238	\
-test239 test240 test241 test242 test243 test245 test246 test247 test248	\
-test249 test250 test251 test252 test253 test254 test255 test256 test257	\
-test258 test259 test260 test261 test262 test263 test264 test265 test266	\
-test267 test268 test269 test270 test271 test272 test273 test274 test275	\
-test276 test277 test278 test279 test280 test281 test282 test283 test284	\
-test285 test286 test287 test288 test289 test290 test291 test292 test293	\
-test294 test295 test296 test297 test298 test299 test300 test301 test302	\
-test303 test304 test305 test306 test307 test308 test309 test310 test311	\
-test312 test313 test320 test321 test322 test323 test324 test350 test351	\
-test352 test353 test354 test400 test401 test402 test403 test404 test405	\
-test406 test407 test408 test409 test500 test501 test502 test503 test504	\
-test505 test506 test507 test508 test510 test511 test512 test513 test514	\
-test515 test516 test517 test518 test519 test520 test521 test522 test523	\
-test524 test525 test526 test527 test528 test529 test530 test531 test532	\
-test533 test534 test535 test536 test537 test538 test539 test540 test541	\
-test542 test543 test544 test545 test546 test547 test548 test549 test550	\
-test551 test552 test553 test554 test555 test556 test557 test560 test561	\
-test562 test563 test564 test565 test566 test567 test568 test569 test570	\
-test571 test572 test573 test574 test575 test576 test578 test579 test580	\
-test581 test582 test583 test584 test585 test586 test587 test588 test590 \
-test591 test592 test593 test594 test595 test596 test597 test598 test599 \
-test600 test601 test602 test603 test604	\
-test605 test606 test607 test608 test609 test610 test611 test612 test613	\
-test614 test615 test616 test617 test618 test619 test620 test621 test622	\
-test623 test624 test625 test626 test627 test628 test629 test630 test631	\
-test632 test633 test634 test635 test636 test637 test638 test639 \
+test90 test91 test92 test93 test94 test95 test96 test97 test98 test99   \
+test100 test101 test102 test103 test104 test105 test106 test107 test108 \
+test109 test110 test111 test112 test113 test114 test115 test116 test117 \
+test118 test119 test120 test121 test122 test123 test124 test125 test126 \
+test127 test128 test129 test130 test131 test132 test133 test134 test135 \
+test136 test137 test138 test139 test140 test141 test142 test143 test144 \
+test145 test146 test147 test148 test149 test150 test151 test152 test153 \
+test154 test155 test156 test157 test158 test159 test160 test161 test162 \
+test163 test164 test165 test166 test167 test168 test169 test170 test171 \
+test172 test173 test174 test175 test176 test177 test178 test179 test180 \
+test181 test182 test183 test184 test185 test186 test187 test188 test189 \
+test190 test191 test192 test193 test194 test195 test196 test197 test198 \
+test199 test200 test201 test202 test203 test204 test205 test206 test207 \
+test208 test209 test210 test211 test212 test213 test214 test215 test216 \
+test217 test218         test220 test221 test222 test223 test224 test225 \
+test226 test227 test228 test229         test231         test233 test234 \
+test235 test236 test237 test238 test239 test240 test241 test242 test243 \
+        test245 test246 test247 test248 test249 test250 test251 test252 \
+test253 test254 test255 test256 test257 test258 test259 test260 test261 \
+test262 test263 test264 test265 test266 test267 test268 test269 test270 \
+test271 test272 test273 test274 test275 test276 test277 test278 test279 \
+test280 test281 test282 test283 test284 test285 test286 test287 test288 \
+test289 test290 test291 test292 test293 test294 test295 test296 test297 \
+test298 test299 test300 test301 test302 test303 test304 test305 test306 \
+test307 test308 test309 test310 test311 test312 test313                 \
+                                test320 test321 test322 test323 test324 \
+test350 test351 test352 test353 test354 \
+\
+test400 test401 test402 test403 test404 test405 test406 test407 test408 \
+test409 \
+\
+test500 test501 test502 test503 test504 test505 test506 test507 test508 \
+test509 test510 test511 test512 test513 test514 test515 test516 test517 \
+test518 test519 test520 test521 test522 test523 test524 test525 test526 \
+test527 test528 test529 test530 test531 test532 test533 test534 test535 \
+test536 test537 test538 test539 test540 test541 test542 test543 test544 \
+test545 test546 test547 test548 test549 test550 test551 test552 test553 \
+test554 test555 test556 test557 test558         test560 test561 test562 \
+test563 test564 test565 test566 test567 test568 test569 test570 test571 \
+test572 test573 test574 test575 test576         test578 test579 test580 \
+test581 test582 test583 test584 test585 test586 test587 test588         \
+test590 test591 test592 test593 test594 test595 test596 test597 test598 \
+test599 test600 test601 test602 test603 test604 test605 test606 test607 \
+test608 test609 test610 test611 test612 test613 test614 test615 test616 \
+test617 test618 test619 test620 test621 test622 test623 test624 test625 \
+test626 test627 test628 test629 test630 test631 test632 test633 test634 \
+test635 test636 test637 test638 test639 \
+\
 test700 test701 test702	test703 test704 test705 test706 test707 test708 \
 test709 test710 \
-test800 test801 test802	\
-test803 test804 test805 test806 test807 test808 test809 test810 test811	\
-test812 test813 test814 test815 \
-test1000 test1001 test1002 test1003 test1004 test1005	\
-test1006 test1007 test1008 test1009 test1010 test1011 test1012 test1013	\
-test1014 test1015 test1016 test1017 test1018 test1019 test1020 test1021	\
-test1022 test1023 test1024 test1025 test1026 test1027 test1028 test1029	\
-test1030 test1031 test1032 test1033 test1034 test1035 test1036 test1037	\
-test1038 test1039 test1040 test1041 test1042 test1043 test1044 test1045	\
-test1046 test1047 test1048 test1049 test1050 test1051 test1052 test1053	\
-test1054 test1055 test1056 test1057 test1058 test1059 test1060 test1061	\
-test1062 test1063 test1064 test1065 test1066 test1067 test1068 test1069	\
-test1070 test1071 test1072 test1073 test1074 test1075 test1076 test1077	\
-test1078 test1079 test1080 test1081 test1082 test1083 test1084 test1085	\
-test1086 test1087 test1088 test1089 test1090 test1091 test1092 test1093	\
-test1094 test1095 test1096 test1097 test1098 test1099 test1100 test1101	\
-test1102 test1103 test1104 test1105 test1106 test1107 test1108 test1109	\
-test1110 test1111 test1112 test1113 test1114 test1115 test1116 test1117	\
-test1118 test1119 test1120 test1121 test1122 test1123 test1124 test1125	\
-test1126 test1127 test1128 test1129 test1130 test1131 test1132 test1133 \
+\
+test800 test801 test802 test803 test804 test805 test806 test807 test808 \
+\
+test850 test851 test852 test853 test854 test855 test856 test857 \
+\
+test900 test901 test902 test903 test904 test905 test906 \
+\
+test1000 test1001 test1002 test1003 test1004 test1005 test1006 test1007 \
+test1008 test1009 test1010 test1011 test1012 test1013 test1014 test1015 \
+test1016 test1017 test1018 test1019 test1020 test1021 test1022 test1023 \
+test1024 test1025 test1026 test1027 test1028 test1029 test1030 test1031 \
+test1032 test1033 test1034 test1035 test1036 test1037 test1038 test1039 \
+test1040 test1041 test1042 test1043 test1044 test1045 test1046 test1047 \
+test1048 test1049 test1050 test1051 test1052 test1053 test1054 test1055 \
+test1056 test1057 test1058 test1059 test1060 test1061 test1062 test1063 \
+test1064 test1065 test1066 test1067 test1068 test1069 test1070 test1071 \
+test1072 test1073 test1074 test1075 test1076 test1077 test1078 test1079 \
+test1080 test1081 test1082 test1083 test1084 test1085 test1086 test1087 \
+test1088 test1089 test1090 test1091 test1092 test1093 test1094 test1095 \
+test1096 test1097 test1098 test1099 test1100 test1101 test1102 test1103 \
+test1104 test1105 test1106 test1107 test1108 test1109 test1110 test1111 \
+test1112 test1113 test1114 test1115 test1116 test1117 test1118 test1119 \
+test1120 test1121 test1122 test1123 test1124 test1125 test1126 test1127 \
+test1128 test1129 test1130 test1131 test1132 test1133 \
+\
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
-test1208 test1209 test1210 test1211 \
+test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
+test1216 test1217 test1218 \
 test1220 test1221 test1222 test1223 \
-test1300 test1301 test1302 test1303 test1304 test1305	\
-test1306 test1307 test1308 test1309 test1310 test1311 test1312 test1313 \
-test1314 test1315 test1316 test1317 test1318 test1319 test1320 test1321 \
-test1322 test1323 test1324 test1325 test1326 test1327 test1328 test1329 \
-test1331 test1332 test1333 test1334 test1335 test1336 test1337 test1338 \
-test1339 test1340 test1341 test1342 test1343 test1344 test1345 test1346 \
-test1347 test1348 test1349 test1350 test1351 test1352 test1353 test1354 \
-test1355 test1356 test1357 test1358 test1359 test1360 test1361 test1362 \
-test1363 test1364 test1365 test1366 test1367 test1368 test1369 test1370 \
-test1371 test1372 test1373 test1374 test1375 test1376 test1377 test1378 \
-test1379 test1380 test1381 test1382 test1383 test1384 test1385 test1386 \
-test1387 test1388 test1389 test1390 test1391 test1392 test1393 \
+\
+test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
+test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
+test1316 test1317 test1318 test1319 test1320 test1321 test1322 test1323 \
+test1324 test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
+test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
+test1340 test1341 test1342 test1343 test1344 test1345 test1346 test1347 \
+test1348 test1349 test1350 test1351 test1352 test1353 test1354 test1355 \
+test1356 test1357 test1358 test1359 test1360 test1361 test1362 test1363 \
+test1364 test1365 test1366 test1367 test1368 test1369 test1370 test1371 \
+test1372 test1373 test1374 test1375 test1376 test1377 test1378 test1379 \
+test1380 test1381 test1382 test1383 test1384 test1385 test1386 test1387 \
+test1388 test1389 test1390 test1391 test1392 test1393 \
+\
 test1400 test1401 test1402 test1403 test1404 test1405 test1406 test1407 \
 test1408 test1409 test1410 test1411 test1412 test1413 \
-test1500 test1501 test1502 test1503 test1504 test1505 test1506 \
+\
+test1500 test1501 test1502 test1503 test1504 test1505 test1506 test1507 \
+test1508 test1509 test1510 \
+\
+test1900 test1901 test1902 test1903 \
+\
 test2000 test2001 test2002 test2003 test2004 test2005 test2006 test2007 \
 test2008 test2009 test2010 test2011 test2012 test2013 test2014 test2015 \
-test2016 test2017 test2018 test2019 test2020 test2021 test2022 \
-test2023 test2024 test2025 \
-test2026 test2027 test2028 \
-test2029 test2030 test2031 \
-test2032
+test2016 test2017 test2018 test2019 test2020 test2021 test2022 test2023 \
+test2024 test2025 test2026 test2027 test2028 test2029 test2030 test2031 \
+test2032 test2033
 
 EXTRA_DIST = $(TESTCASES) DISABLED
 all: all-am
 
 .SUFFIXES:
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1008 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1008
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1008	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1008	2013-04-12 02:46:54.000000000 +0800
@@ -13,33 +13,33 @@
 <reply>
 <servercmd>
 connection-monitor
 </servercmd>
 
 # this is returned first since we get no proxy-auth
-<data1001>
+<connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 Transfer-Encoding: chunked
 
 20
 And you should ignore this data.
 FA0

 0
 
-</data1001>
+</connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
-<data1002>
+<connect1002>
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
-</data1002>
+</connect1002>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -93,38 +93,38 @@
 # we force our own host name, in order to make the test machine independent
 CURL_GETHOSTNAME=curlhost
 # we try to use the LD_PRELOAD hack, if not a debug build
 LD_PRELOAD=%PWD/libtest/.libs/libhostname.so
  </setenv>
  <command>
-http://test.remote.example.com:1008/path/10080002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel
+http://test.remote.example.com.1008:%HTTPPORT/path/10080002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel
 </command>
 <precheck>
 chkhostname curlhost
 </precheck>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.example.com:1008 HTTP/1.1
-Host: test.remote.example.com:1008
+CONNECT test.remote.example.com.1008:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.1008:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.example.com:1008 HTTP/1.1
-Host: test.remote.example.com:1008
+CONNECT test.remote.example.com.1008:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.1008:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAABQAFAHAAAAAIAAgAdQAAAAAAAAAAAAAABoKBAKAeQjzKtCQ7ubW8S6MN7B59436GAxPu0CVROwwNBsgxML49gcbAXLT/bU+H5wrS9XNpbGx5Y3VybGhvc3Q=
 Proxy-Connection: Keep-Alive
 
 GET /path/10080002 HTTP/1.1
 User-Agent: curl/7.12.3-CVS (i686-pc-linux-gnu) libcurl/7.12.3-CVS OpenSSL/0.9.6b zlib/1.1.4
-Host: test.remote.example.com:1008
+Host: test.remote.example.com.1008:%HTTPPORT
 Accept: */*
 
 [DISCONNECT]
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1021 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1021
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1021	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1021	2013-04-12 02:46:54.000000000 +0800
@@ -9,38 +9,38 @@
 --proxy-anyauth
 </keywords>
 </info>
 # Server-side
 <reply>
 
-<data>
+<connect>
 HTTP/1.1 407 Authorization Required to proxy me my dear swsclose
 Proxy-Authenticate: NTLM
 Content-Length: 21
 Connection: close
 
 data to discard
-</data>
+</connect>
 
 # this is returned first since we get no proxy-auth
-<data1001>
+<connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 Content-Length: 28
 
 And you should ignore this data.
-</data1001>
+</connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
-<data1002>
+<connect1002>
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
-</data1002>
+</connect1002>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -99,41 +99,41 @@
 # we force our own host name, in order to make the test machine independent
 CURL_GETHOSTNAME=curlhost
 # we try to use the LD_PRELOAD hack, if not a debug build
 LD_PRELOAD=%PWD/libtest/.libs/libhostname.so
  </setenv>
  <command>
-http://test.remote.example.com:1021/path/10210002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-anyauth --proxytunnel
+http://test.remote.example.com.1021:%HTTPPORT/path/10210002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-anyauth --proxytunnel
 </command>
 <precheck>
 chkhostname curlhost
 </precheck>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.example.com:1021 HTTP/1.1
-Host: test.remote.example.com:1021
+CONNECT test.remote.example.com.1021:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.1021:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.example.com:1021 HTTP/1.1
-Host: test.remote.example.com:1021
+CONNECT test.remote.example.com.1021:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.1021:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.example.com:1021 HTTP/1.1
-Host: test.remote.example.com:1021
+CONNECT test.remote.example.com.1021:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.1021:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAABQAFAHAAAAAIAAgAdQAAAAAAAAAAAAAABoKBAKAeQjzKtCQ7ubW8S6MN7B59436GAxPu0CVROwwNBsgxML49gcbAXLT/bU+H5wrS9XNpbGx5Y3VybGhvc3Q=
 Proxy-Connection: Keep-Alive
 
 GET /path/10210002 HTTP/1.1
 User-Agent: curl/7.12.3-CVS (i686-pc-linux-gnu) libcurl/7.12.3-CVS OpenSSL/0.9.6b zlib/1.1.4
-Host: test.remote.example.com:1021
+Host: test.remote.example.com.1021:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1059 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1059
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1059	2013-01-17 06:05:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1059	2013-04-12 02:46:54.000000000 +0800
@@ -9,19 +9,19 @@
 </keywords>
 
 </info>
 #
 # Server-side
 <reply>
-<data>
+<connect>
 HTTP/1.1 501 Method not implemented swsclose
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Connection: close
 Content-Length: 0
 
-</data>
+</connect>
 </reply>
 
 #
 # Client-side
 <client>
 <features>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1060 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1060
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1060	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1060	2013-04-12 02:46:54.000000000 +0800
@@ -11,13 +11,13 @@
 </info>
 
 # Server-side
 <reply>
 
 # this is returned first since we get no proxy-auth
-<data>
+<connect>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Content-Length: 40000
 X-tra-long-header: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 
 And you should ignore this data. aaaaaaaaaaaaaaaa
@@ -817,13 +817,13 @@
 And you should ignore this data. aaaaaaaaaaaaaaaa
 And you should ignore this data. aaaaaaaaaaaaaaaa
 And you should ignore this data. aaaaaaaaaaaaaaaa
 And you should ignore this data. aaaaaaaaaaaaaaaa
 And you should ignore this data. aaaaaaaaaaaaaaaa
 end of 1 KB aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-</data>
+</connect>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -832,18 +832,18 @@
 Funny-head: yesyes
 
 daniel
 </data2>
 
 # then this is returned when we get proxy-auth
-<data1000>
+<connect1000>
 HTTP/1.1 200 OK swsbounce
 Server: no
 
 Nice proxy auth sir!
-</data1000>
+</connect1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Content-Length: 40000
 X-tra-long-header: 
@@ -871,32 +871,32 @@
 crypto
 </features>
  <name>
 HTTP proxy CONNECT auth Digest, large headers and data
  </name>
  <command>
-http://test.remote.haxx.se:1060/path/10600002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-digest --proxytunnel
+http://test.remote.haxx.se.1060:%HTTPPORT/path/10600002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-digest --proxytunnel
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.haxx.se:1060 HTTP/1.1
-Host: test.remote.haxx.se:1060
+CONNECT test.remote.haxx.se.1060:%HTTPPORT HTTP/1.1
+Host: test.remote.haxx.se.1060:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.haxx.se:1060 HTTP/1.1
-Host: test.remote.haxx.se:1060
-Proxy-Authorization: Digest username="silly", realm="weirdorealm", nonce="12345", uri="test.remote.haxx.se:1060", response="79e394ffcd42b6c771c7582da1fc4498"
+CONNECT test.remote.haxx.se.1060:%HTTPPORT HTTP/1.1
+Host: test.remote.haxx.se.1060:%HTTPPORT
+Proxy-Authorization: Digest username="silly", realm="weirdorealm", nonce="12345", uri="test.remote.haxx.se.1060:%HTTPPORT", response="e1fbed39c26f4efe284adc0e576ff638"
 Proxy-Connection: Keep-Alive
 
 GET /path/10600002 HTTP/1.1
-Host: test.remote.haxx.se:1060
+Host: test.remote.haxx.se.1060:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1061 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1061
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1061	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1061	2013-04-12 02:46:54.000000000 +0800
@@ -12,13 +12,13 @@
 </info>
 
 # Server-side
 <reply>
 
 # this is returned first since we get no proxy-auth
-<data>
+<connect>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Transfer-Encoding: chunked
 X-tra-long-header: 
 
 9c40
@@ -822,13 +822,13 @@
 And you should ignore this data. aaaaaaaaaaaaaaaa
 And you should ignore this data. aaaaaaaaaaaaaaaa
 end of 1 KB aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 
 0
 
-</data>
+</connect>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -837,18 +837,18 @@
 Funny-head: yesyes
 
 daniel
 </data2>
 
 # then this is returned when we get proxy-auth
-<data1000>
+<connect1000>
 HTTP/1.1 200 OK swsbounce
 Server: no
 
 Nice proxy auth sir!
-</data1000>
+</connect1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Transfer-Encoding: chunked
 X-tra-long-header: 
@@ -876,32 +876,32 @@
 crypto
 </features>
  <name>
 HTTP proxy CONNECT auth Digest, large headers and chunked data
  </name>
  <command>
-http://test.remote.haxx.se:1061/path/10610002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-digest --proxytunnel
+http://test.remote.haxx.se.1061:%HTTPPORT/path/10610002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-digest --proxytunnel
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.haxx.se:1061 HTTP/1.1
-Host: test.remote.haxx.se:1061
+CONNECT test.remote.haxx.se.1061:%HTTPPORT HTTP/1.1
+Host: test.remote.haxx.se.1061:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.haxx.se:1061 HTTP/1.1
-Host: test.remote.haxx.se:1061
-Proxy-Authorization: Digest username="silly", realm="weirdorealm", nonce="12345", uri="test.remote.haxx.se:1061", response="8e96acf6a6214012183879e28e73b2d3"
+CONNECT test.remote.haxx.se.1061:%HTTPPORT HTTP/1.1
+Host: test.remote.haxx.se.1061:%HTTPPORT
+Proxy-Authorization: Digest username="silly", realm="weirdorealm", nonce="12345", uri="test.remote.haxx.se.1061:%HTTPPORT", response="4e23449fa93224834299e7282a70472c"
 Proxy-Connection: Keep-Alive
 
 GET /path/10610002 HTTP/1.1
-Host: test.remote.haxx.se:1061
+Host: test.remote.haxx.se.1061:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1078 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1078
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1078	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1078	2013-04-12 02:46:54.000000000 +0800
@@ -10,12 +10,18 @@
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+Server: test tunnel 2000
+
+</connect>
+
 <data nocheck="yes">
 HTTP/1.0 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Type: text/html
 Funny-head: yesyes
@@ -34,40 +40,41 @@
 http-proxy
 </server>
  <name>
 HTTP 1.0 CONNECT with proxytunnel and downgrade GET to HTTP/1.0
  </name>
  <command>
---proxy1.0 %HOSTIP:%PROXYPORT -p http://%HOSTIP:%HTTPPORT/we/want/that/page/1078 http://%HOSTIP:%HTTPPORT/we/want/that/page/1078
+--proxy1.0 %HOSTIP:%PROXYPORT -p http://%HOSTIP.1078:%HTTPPORT/we/want/that/page/1078 http://%HOSTIP.1078:%HTTPPORT/we/want/that/page/1078
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent:.*
 </strip>
 <proxy>
-CONNECT %HOSTIP:%HTTPPORT HTTP/1.0
-Host: %HOSTIP:%HTTPPORT
+CONNECT %HOSTIP.1078:%HTTPPORT HTTP/1.0
+Host: %HOSTIP.1078:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol>
 GET /we/want/that/page/1078 HTTP/1.1
-Host: %HOSTIP:%HTTPPORT
+Host: %HOSTIP.1078:%HTTPPORT
 Accept: */*
 
 GET /we/want/that/page/1078 HTTP/1.0
-Host: %HOSTIP:%HTTPPORT
+Host: %HOSTIP.1078:%HTTPPORT
 Accept: */*
 
 </protocol>
 <stdout>
 HTTP/1.1 200 Mighty fine indeed
+Server: test tunnel 2000
 
 HTTP/1.0 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Type: text/html
 Funny-head: yesyes
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1097 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1097
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1097	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1097	2013-04-12 02:46:54.000000000 +0800
@@ -15,19 +15,21 @@
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
 Content-Length: 27
 
 This is all fine and dandy
 </data>
-<data1001>
+
+<connect1001>
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
 Content-Length: 27
 
 This is all fine and dandy
-</data1001>
+</connect1001>
+
 <datacheck>
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
 Content-Length: 27
 
 HTTP/1.1 200 We are fine and cool
@@ -47,31 +49,31 @@
 NTLM
 </features>
  <name>
 HTTP POST using CONNECT with --proxy-ntlm but no auth is required
  </name>
  <command>
-http://test.a.galaxy.far.far.away:1097/1097 --proxy http://%HOSTIP:%HTTPPORT --proxy-user foo:bar --proxy-ntlm -d "dummy=value" -p
+http://test.a.galaxy.far.far.away.1097:%HTTPPORT/1097 --proxy http://%HOSTIP:%HTTPPORT --proxy-user foo:bar --proxy-ntlm -d "dummy=value" -p
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.a.galaxy.far.far.away:1097 HTTP/1.1
-Host: test.a.galaxy.far.far.away:1097
+CONNECT test.a.galaxy.far.far.away.1097:%HTTPPORT HTTP/1.1
+Host: test.a.galaxy.far.far.away.1097:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
 User-Agent: curl/7.19.5-CVS (i686-pc-linux-gnu) libcurl/7.19.5-CVS OpenSSL/0.9.8g zlib/1.2.3.3 c-ares/1.6.1-CVS libidn/1.12 libssh2/1.0.1_CVS
 Proxy-Connection: Keep-Alive
 
 POST /1097 HTTP/1.1
 User-Agent: curl/7.19.5-CVS (i686-pc-linux-gnu) libcurl/7.19.5-CVS OpenSSL/0.9.8g zlib/1.2.3.3 c-ares/1.6.1-CVS libidn/1.12 libssh2/1.0.1_CVS
-Host: test.a.galaxy.far.far.away:1097
+Host: test.a.galaxy.far.far.away.1097:%HTTPPORT
 Accept: */*
 Content-Length: 0
 Content-Type: application/x-www-form-urlencoded
 
 </protocol>
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1105
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1105	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1105	2013-04-12 02:46:54.000000000 +0800
@@ -50,13 +50,13 @@
 Accept: */*
 Content-Length: 33
 Content-Type: application/x-www-form-urlencoded
 
 userid=myname&password=mypassword
 </protocol>
-<file name="log/cookie1105.txt">
+<file name="log/cookie1105.txt" mode="text">
 # Netscape HTTP Cookie File
 # http://curl.haxx.se/docs/http-cookies.html
 # This file was generated by libcurl! Edit at your own risk.
 
 127.0.0.1	FALSE	/we/want/	FALSE	0	foobar	name
 .127.0.0.1	TRUE	"/silly/"	FALSE	0	mismatch	this
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1212
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1213
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1214
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1215
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1216
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1217
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1218
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1221
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1221	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1221	2013-04-12 02:46:54.000000000 +0800
@@ -14,15 +14,15 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
-<file1 name="log/stderr1221">
+<file1 name="log/stderr1221" mode="text">
 </file1>
-<file2 name="log/stdout1221">
+<file2 name="log/stdout1221" mode="text">
 Testing curl_10char_object_name...
 
 result: 16AFKPQRST expected: 16AFKPQRST input: 123__678__ABC__FGH__KLM__PQRSTUV
 result: 16AFKPQ expected: 16AFKPQ input: 123__678__ABC__FGH__KLM__PQ.S.UV
 result: 16ABC expected: 16ABC input: 123__678__ABC..FGH..KLM..PQRSTUV
 result: 16 expected: 16 input: 123__678_.ABC._FGH__KLM__PQRSTUV
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1222
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1222	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1222	2013-04-12 02:46:54.000000000 +0800
@@ -14,15 +14,15 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
-<file1 name="log/stderr1222">
+<file1 name="log/stderr1222" mode="text">
 </file1>
-<file2 name="log/stdout1222">
+<file2 name="log/stdout1222" mode="text">
 Testing curl_8char_object_name...
 
 result: 16AFKPQR expected: 16AFKPQR input: 123__678__ABC__FGH__KLM__PQRSTUV
 result: 16AFKPQ expected: 16AFKPQ input: 123__678__ABC__FGH__KLM__PQ.S.UV
 result: 16ABC expected: 16ABC input: 123__678__ABC..FGH..KLM..PQRSTUV
 result: 16 expected: 16 input: 123__678_.ABC._FGH__KLM__PQRSTUV
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1309
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1309	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1309	2013-04-12 02:46:54.000000000 +0800
@@ -21,13 +21,13 @@
 <tool>
 unit1309
 </tool>
 </client>
 
 <verify>
-<stdout>
+<stdout mode="text">
 Result:
       0.1013[3]
     0.1003[2]
       0.954[3]
   0.944[1]
 0.934[0]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1316 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1316
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1316	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1316	2013-04-12 02:46:54.000000000 +0800
@@ -9,18 +9,27 @@
 HTTP proxy
 </keywords>
 </info>
 #
 # Server-side
 <reply>
+
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+Magic: sure you can FTP me
+
+</connect>
+
 # When doing LIST, we get the default list output hard-coded in the test
 # FTP server
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
+Magic: sure you can FTP me
 
 HTTP/1.1 200 Mighty fine indeed
+Magic: sure you can FTP me
 
 total 20
 drwxr-xr-x   8 98       98           512 Oct 22 13:06 .
 drwxr-xr-x   8 98       98           512 Oct 22 13:06 ..
 drwxr-xr-x   2 98       98           512 May  2  1996 .NeXT
 -r--r--r--   1 0        1             35 Jul 16  1996 README
@@ -33,21 +42,26 @@
 </datacheck>
 </reply>
 
 #
 # Client-side
 <client>
+
+# please send the real CONNECT connect off to the FTP server's port
+<connectport>
+%FTPPORT
+</connectport>
 <server>
 ftp
 http-proxy
 </server>
  <name>
 FTP LIST tunneled through HTTP proxy
  </name>
  <command>
-ftp://%HOSTIP:%FTPPORT/ -p -x %HOSTIP:%PROXYPORT
+ftp://ftp.1316:%FTPPORT/ -p -x %HOSTIP:%PROXYPORT
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1319 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1319
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1319	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1319	2013-04-12 02:46:54.000000000 +0800
@@ -8,12 +8,19 @@
 HTTP proxy
 </keywords>
 </info>
 #
 # Server-side
 <reply>
+
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+pop3: sure hit me
+
+</connect>
+
 # When doing LIST, we get the default list output hard-coded in the test
 # FTP server
 <data>
 From: me@somewhere
 To: fake@nowhere
 
@@ -22,12 +29,13 @@
 --
   yours sincerely
 </data>
 
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
+pop3: sure hit me
 
 From: me@somewhere
 To: fake@nowhere
 
 body
 
@@ -44,13 +52,13 @@
 http-proxy
 </server>
  <name>
 POP3 fetch tunneled through HTTP proxy
  </name>
  <command>
-pop3://%HOSTIP:%POP3PORT/1319 -p -x %HOSTIP:%PROXYPORT -u user:secret
+pop3://pop.1319:%POP3PORT/1319 -p -x %HOSTIP:%PROXYPORT -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
@@ -62,14 +70,14 @@
 USER user
 PASS secret
 RETR 1319
 QUIT
 </protocol>
 <proxy>
-CONNECT %HOSTIP:%POP3PORT HTTP/1.1
-Host: %HOSTIP:%POP3PORT
+CONNECT pop.1319:%POP3PORT HTTP/1.1
+Host: pop.1319:%POP3PORT
 User-Agent: curl/7.24.0-DEV (i686-pc-linux-gnu) libcurl/7.24.0-DEV OpenSSL/1.0.0e zlib/1.2.3.4 c-ares/1.7.6-DEV libidn/1.23 libssh2/1.4.0_DEV librtmp/2.2e
 Proxy-Connection: Keep-Alive
 
 </proxy>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1320 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1320
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1320	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1320	2013-04-12 02:46:54.000000000 +0800
@@ -8,12 +8,17 @@
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+smtp: sure hit me
+
+</connect>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
@@ -27,13 +32,13 @@
 From: different
 To: another
 
 body
 </stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 1320@foo --mail-rcpt 1320@foobar.example --mail-from 1320@from -T - -p -x %HOSTIP:%PROXYPORT
+smtp://smtp.1320:%SMTPPORT/user --mail-rcpt 1320@foo --mail-rcpt 1320@foobar.example --mail-from 1320@from -T - -p -x %HOSTIP:%PROXYPORT
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
@@ -54,14 +59,14 @@
 
 body
 
 .
 </upload>
 <proxy>
-CONNECT %HOSTIP:%SMTPPORT HTTP/1.1
-Host: %HOSTIP:%SMTPPORT
+CONNECT smtp.1320:%SMTPPORT HTTP/1.1
+Host: smtp.1320:%SMTPPORT
 User-Agent: curl/7.24.0-DEV (i686-pc-linux-gnu) libcurl/7.24.0-DEV OpenSSL/1.0.0e zlib/1.2.3.4 c-ares/1.7.6-DEV libidn/1.23 libssh2/1.4.0_DEV librtmp/2.2e
 Proxy-Connection: Keep-Alive
 
 </proxy>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1321 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1321
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1321	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1321	2013-04-12 02:46:54.000000000 +0800
@@ -9,31 +9,37 @@
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+imap: sure hit me
+
+</connect>
 <data>
-From: me@somewhere
-To: fake@nowhere
-
-body
-
---
-  yours sincerely
+From: me@somewhere
+To: fake@nowhere
+
+body
+
+--
+  yours sincerely
 </data>
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
+imap: sure hit me
 
-From: me@somewhere
-To: fake@nowhere
-
-body
-
---
-  yours sincerely
+From: me@somewhere
+To: fake@nowhere
+
+body
+
+--
+  yours sincerely
 </datacheck>
 </reply>
 
 #
 # Client-side
 <client>
@@ -42,32 +48,32 @@
 http-proxy
 </server>
  <name>
 IMAP FETCH tunneled through HTTP proxy
  </name>
  <command>
-imap://%HOSTIP:%IMAPPORT/1321 -u user:secret -p -x %HOSTIP:%PROXYPORT
+'imap://imap.1321:%IMAPPORT/1321/;UID=1' -u user:secret -p -x %HOSTIP:%PROXYPORT
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-B CAPABILITY
-C LOGIN user secret
-D SELECT 1321
-A FETCH 1 BODY[TEXT]
-B LOGOUT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 1321
+A004 FETCH 1 BODY[]
+A005 LOGOUT
 </protocol>
 <proxy>
-CONNECT %HOSTIP:%IMAPPORT HTTP/1.1
-Host: %HOSTIP:%IMAPPORT
+CONNECT imap.1321:%IMAPPORT HTTP/1.1
+Host: imap.1321:%IMAPPORT
 User-Agent: curl/7.24.0-DEV (i686-pc-linux-gnu) libcurl/7.24.0-DEV OpenSSL/1.0.0e zlib/1.2.3.4 c-ares/1.7.6-DEV libidn/1.23 libssh2/1.4.0_DEV librtmp/2.2e
 Proxy-Connection: Keep-Alive
 
 </proxy>
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1330
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1334 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1334
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1334	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1334	2013-04-12 02:46:54.000000000 +0800
@@ -52,25 +52,25 @@
 GET /1334 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1334">
+<file1 name="log/1334" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1334">
+<file2 name="log/heads1334" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 </file2>
 
-<file3 name="log/stdout1334">
+<file3 name="log/stdout1334" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1335 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1335
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1335	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1335	2013-04-12 02:46:54.000000000 +0800
@@ -52,17 +52,17 @@
 GET /1335 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1335">
+<file1 name="log/1335" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1335">
+<file2 name="log/stdout1335" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1336 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1336
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1336	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1336	2013-04-12 02:46:54.000000000 +0800
@@ -56,26 +56,26 @@
 GET /1336 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1336">
+<file1 name="log/1336" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1336">
+<file2 name="log/heads1336" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1336; charset=funny; option=strange
 
 </file2>
 
-<file3 name="log/stdout1336">
+<file3 name="log/stdout1336" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1337 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1337
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1337	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1337	2013-04-12 02:46:54.000000000 +0800
@@ -56,17 +56,17 @@
 GET /1337 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1337">
+<file1 name="log/1337" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1337">
+<file2 name="log/stdout1337" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1338 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1338
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1338	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1338	2013-04-12 02:46:54.000000000 +0800
@@ -53,25 +53,25 @@
 GET /1338 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1338">
+<file1 name="log/1338" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1338">
+<file2 name="log/heads1338" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 </file2>
 
-<file3 name="log/stdout1338">
+<file3 name="log/stdout1338" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1339 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1339
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1339	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1339	2013-04-12 02:46:54.000000000 +0800
@@ -53,17 +53,17 @@
 GET /1339 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1339">
+<file1 name="log/1339" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1339">
+<file2 name="log/stdout1339" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1340 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1340
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1340	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1340	2013-04-12 02:46:54.000000000 +0800
@@ -54,27 +54,27 @@
 GET /1340 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/name1340">
+<file1 name="log/name1340" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1340">
+<file2 name="log/heads1340" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1340; charset=funny; option=strange
 
 </file2>
 
-<file3 name="log/stdout1340">
+<file3 name="log/stdout1340" mode="text">
 curl: Saved to filename '%PWD/log/name1340'
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1341 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1341
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1341	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1341	2013-04-12 02:46:54.000000000 +0800
@@ -54,17 +54,17 @@
 GET /1341 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/name1341">
+<file1 name="log/name1341" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1341">
+<file2 name="log/stdout1341" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1342 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1342
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1342	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1342	2013-04-12 02:46:54.000000000 +0800
@@ -52,32 +52,32 @@
 GET /1342 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1342">
+<file1 name="log/1342" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 12345
 </file1>
 
-<file2 name="log/heads1342">
+<file2 name="log/heads1342" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 </file2>
 
-<file3 name="log/stdout1342">
+<file3 name="log/stdout1342" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1343 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1343
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1343	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1343	2013-04-12 02:46:54.000000000 +0800
@@ -52,24 +52,24 @@
 GET /1343 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1343">
+<file1 name="log/1343" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 12345
 </file1>
 
-<file2 name="log/stdout1343">
+<file2 name="log/stdout1343" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1344 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1344
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1344	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1344	2013-04-12 02:46:54.000000000 +0800
@@ -56,34 +56,34 @@
 GET /1344 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1344">
+<file1 name="log/1344" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1344; charset=funny; option=strange
 
 12345
 </file1>
 
-<file2 name="log/heads1344">
+<file2 name="log/heads1344" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1344; charset=funny; option=strange
 
 </file2>
 
-<file3 name="log/stdout1344">
+<file3 name="log/stdout1344" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1345 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1345
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1345	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1345	2013-04-12 02:46:54.000000000 +0800
@@ -56,25 +56,25 @@
 GET /1345 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1345">
+<file1 name="log/1345" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1345; charset=funny; option=strange
 
 12345
 </file1>
 
-<file2 name="log/stdout1345">
+<file2 name="log/stdout1345" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1346 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1346
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1346	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1346	2013-04-12 02:46:54.000000000 +0800
@@ -52,22 +52,22 @@
 GET /1346 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1346">
+<file1 name="log/1346" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 12345
 </file1>
 
-<file2 name="log/stdout1346">
+<file2 name="log/stdout1346" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1347 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1347
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1347	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1347	2013-04-12 02:46:54.000000000 +0800
@@ -56,23 +56,23 @@
 GET /1347 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/1347">
+<file1 name="log/1347" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1347; charset=funny; option=strange
 
 12345
 </file1>
 
-<file2 name="log/stdout1347">
+<file2 name="log/stdout1347" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1348 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1348
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1348	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1348	2013-04-12 02:46:54.000000000 +0800
@@ -46,16 +46,16 @@
 TYPE I
 SIZE file1348
 RETR file1348
 QUIT
 </protocol>
 
-<file1 name="log/file1348">
+<file1 name="log/file1348" mode="text">
 fooo
 mooo
 </file1>
 
-<file2 name="log/stdout1348">
+<file2 name="log/stdout1348" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1356 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1356
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1356	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1356	2013-04-12 02:46:54.000000000 +0800
@@ -57,23 +57,23 @@
 TYPE I
 SIZE file1356
 RETR file1356
 QUIT
 </protocol>
 
-<file1 name="log/file1356">
+<file1 name="log/file1356" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1356; charset=funny; option=strange
 
 MOOOO
 </file1>
 
-<file2 name="log/stdout1356">
+<file2 name="log/stdout1356" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1363 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1363
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1363	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1363	2013-04-12 02:46:54.000000000 +0800
@@ -57,23 +57,23 @@
 TYPE I
 SIZE file1363
 RETR file1363
 QUIT
 </protocol>
 
-<file1 name="log/file1363">
+<file1 name="log/file1363" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1363; charset=funny; option=strange
 
 MOOOO
 </file1>
 
-<file2 name="log/stdout1363">
+<file2 name="log/stdout1363" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1364 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1364
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1364	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1364	2013-04-12 02:46:54.000000000 +0800
@@ -47,25 +47,25 @@
 GET /1364 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1364">
+<file1 name="log/outfile1364" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1364">
+<file2 name="log/heads1364" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 </file2>
 
-<file3 name="log/stdout1364">
+<file3 name="log/stdout1364" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1365 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1365
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1365	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1365	2013-04-12 02:46:54.000000000 +0800
@@ -47,17 +47,17 @@
 GET /1365 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1365">
+<file1 name="log/outfile1365" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1365">
+<file2 name="log/stdout1365" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1366 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1366
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1366	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1366	2013-04-12 02:46:54.000000000 +0800
@@ -48,26 +48,26 @@
 GET /1366 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1366">
+<file1 name="log/outfile1366" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1366">
+<file2 name="log/heads1366" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1366; charset=funny; option=strange
 
 </file2>
 
-<file3 name="log/stdout1366">
+<file3 name="log/stdout1366" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1367 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1367
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1367	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1367	2013-04-12 02:46:54.000000000 +0800
@@ -48,17 +48,17 @@
 GET /1367 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1367">
+<file1 name="log/outfile1367" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1367">
+<file2 name="log/stdout1367" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1368 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1368
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1368	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1368	2013-04-12 02:46:54.000000000 +0800
@@ -48,25 +48,25 @@
 GET /1368 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1368">
+<file1 name="log/outfile1368" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1368">
+<file2 name="log/heads1368" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 </file2>
 
-<file3 name="log/stdout1368">
+<file3 name="log/stdout1368" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1369 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1369
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1369	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1369	2013-04-12 02:46:54.000000000 +0800
@@ -48,17 +48,17 @@
 GET /1369 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1369">
+<file1 name="log/outfile1369" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1369">
+<file2 name="log/stdout1369" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1370 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1370
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1370	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1370	2013-04-12 02:46:54.000000000 +0800
@@ -49,26 +49,26 @@
 GET /1370 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1370">
+<file1 name="log/outfile1370" mode="text">
 12345
 </file1>
 
-<file2 name="log/heads1370">
+<file2 name="log/heads1370" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1370; charset=funny; option=strange
 
 </file2>
 
-<file3 name="log/stdout1370">
+<file3 name="log/stdout1370" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1371 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1371
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1371	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1371	2013-04-12 02:46:54.000000000 +0800
@@ -49,17 +49,17 @@
 GET /1371 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1371">
+<file1 name="log/outfile1371" mode="text">
 12345
 </file1>
 
-<file2 name="log/stdout1371">
+<file2 name="log/stdout1371" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1372 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1372
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1372	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1372	2013-04-12 02:46:54.000000000 +0800
@@ -47,32 +47,32 @@
 GET /1372 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1372">
+<file1 name="log/outfile1372" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 12345
 </file1>
 
-<file2 name="log/heads1372">
+<file2 name="log/heads1372" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 </file2>
 
-<file3 name="log/stdout1372">
+<file3 name="log/stdout1372" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1373 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1373
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1373	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1373	2013-04-12 02:46:54.000000000 +0800
@@ -47,24 +47,24 @@
 GET /1373 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1373">
+<file1 name="log/outfile1373" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 12345
 </file1>
 
-<file2 name="log/stdout1373">
+<file2 name="log/stdout1373" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1374 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1374
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1374	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1374	2013-04-12 02:46:54.000000000 +0800
@@ -48,34 +48,34 @@
 GET /1374 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1374">
+<file1 name="log/outfile1374" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1374; charset=funny; option=strange
 
 12345
 </file1>
 
-<file2 name="log/heads1374">
+<file2 name="log/heads1374" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1374; charset=funny; option=strange
 
 </file2>
 
-<file3 name="log/stdout1374">
+<file3 name="log/stdout1374" mode="text">
 </file3>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1375 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1375
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1375	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1375	2013-04-12 02:46:54.000000000 +0800
@@ -48,25 +48,25 @@
 GET /1375 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1375">
+<file1 name="log/outfile1375" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1375; charset=funny; option=strange
 
 12345
 </file1>
 
-<file2 name="log/stdout1375">
+<file2 name="log/stdout1375" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1376 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1376
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1376	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1376	2013-04-12 02:46:54.000000000 +0800
@@ -47,22 +47,22 @@
 GET /1376 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1376">
+<file1 name="log/outfile1376" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 
 12345
 </file1>
 
-<file2 name="log/stdout1376">
+<file2 name="log/stdout1376" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1377 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1377
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1377	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1377	2013-04-12 02:46:54.000000000 +0800
@@ -48,23 +48,23 @@
 GET /1377 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
 
-<file1 name="log/outfile1377">
+<file1 name="log/outfile1377" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1377; charset=funny; option=strange
 
 12345
 </file1>
 
-<file2 name="log/stdout1377">
+<file2 name="log/stdout1377" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1378 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1378
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1378	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1378	2013-04-12 02:46:54.000000000 +0800
@@ -41,16 +41,16 @@
 TYPE I
 SIZE file1378
 RETR file1378
 QUIT
 </protocol>
 
-<file1 name="log/download1378">
+<file1 name="log/download1378" mode="text">
 fooo
 mooo
 </file1>
 
-<file2 name="log/stdout1378">
+<file2 name="log/stdout1378" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1385 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1385
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1385	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1385	2013-04-12 02:46:54.000000000 +0800
@@ -41,16 +41,16 @@
 TYPE I
 SIZE file1385
 RETR file1385
 QUIT
 </protocol>
 
-<file1 name="log/download1385">
+<file1 name="log/download1385" mode="text">
 fooo
 mooo
 </file1>
 
-<file2 name="log/stdout1385">
+<file2 name="log/stdout1385" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1386 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1386
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1386	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1386	2013-04-12 02:46:54.000000000 +0800
@@ -49,23 +49,23 @@
 TYPE I
 SIZE file1386
 RETR file1386
 QUIT
 </protocol>
 
-<file1 name="log/download1386">
+<file1 name="log/download1386" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1386; charset=funny; option=strange
 
 MOOOO
 </file1>
 
-<file2 name="log/stdout1386">
+<file2 name="log/stdout1386" mode="text">
 </file2>
 
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1393 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1393
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test1393	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test1393	2013-04-12 02:46:54.000000000 +0800
@@ -49,23 +49,23 @@
 TYPE I
 SIZE file1393
 RETR file1393
 QUIT
 </protocol>
 
-<file1 name="log/download1393">
+<file1 name="log/download1393" mode="text">
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Length: 6
 Connection: close
 Content-Type: text/html
 Content-Disposition: filename=name1393; charset=funny; option=strange
 
 MOOOO
 </file1>
 
-<file2 name="log/stdout1393">
+<file2 name="log/stdout1393" mode="text">
 </file2>
 
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1507
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1508
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1509
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1510
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1900
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1901
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1902
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test1903
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test2033
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test206
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test206	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test206	2013-04-12 02:46:54.000000000 +0800
@@ -11,22 +11,24 @@
 </info>
 
 # Server-side
 <reply>
 <servercmd>
 connection-monitor
+auth_required
 </servercmd>
 
+
 # this is returned first since we get no proxy-auth
-<data>
+<connect>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Content-Length: 33
 
 And you should ignore this data.
-</data>
+</connect>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -35,17 +37,17 @@
 Funny-head: yesyes
 
 daniel
 </data2>
 
 # then this is returned when we get proxy-auth
-<data1000>
+<connect1000>
 HTTP/1.1 200 OK swsbounce
 Server: no
 
-</data1000>
+</connect1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Content-Length: 33
 
@@ -72,34 +74,34 @@
 crypto
 </features>
  <name>
 HTTP proxy CONNECT auth Digest
  </name>
  <command>
-http://test.remote.haxx.se:206/path/2060002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-digest --proxytunnel
+http://test.remote.haxx.se.206:%HTTPPORT/path/2060002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-digest --proxytunnel
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.haxx.se:206 HTTP/1.1
-Host: test.remote.haxx.se:206
+CONNECT test.remote.haxx.se.206:%HTTPPORT HTTP/1.1
+Host: test.remote.haxx.se.206:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.haxx.se:206 HTTP/1.1
-Host: test.remote.haxx.se:206
-Proxy-Authorization: Digest username="silly", realm="weirdorealm", nonce="12345", uri="test.remote.haxx.se:206", response="676e0836f3e1c5b31bf29770ef9d8224"
+CONNECT test.remote.haxx.se.206:%HTTPPORT HTTP/1.1
+Host: test.remote.haxx.se.206:%HTTPPORT
+Proxy-Authorization: Digest username="silly", realm="weirdorealm", nonce="12345", uri="test.remote.haxx.se.206:%HTTPPORT", response="003e36decb4dbf6366b3ecb9b87c24ec"
 Proxy-Connection: Keep-Alive
 
 GET /path/2060002 HTTP/1.1
 User-Agent: curl/7.12.3-CVS (i686-pc-linux-gnu) libcurl/7.12.3-CVS OpenSSL/0.9.6b zlib/1.1.4
-Host: test.remote.haxx.se:206
+Host: test.remote.haxx.se.206:%HTTPPORT
 Accept: */*
 
 [DISCONNECT]
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test209
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test209	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test209	2013-04-12 02:46:54.000000000 +0800
@@ -10,27 +10,27 @@
 </info>
 
 # Server-side
 <reply>
 
 # this is returned first since we get no proxy-auth
-<data1001>
+<connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 
 And you should ignore this data.
-</data1001>
+</connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
-<data1002>
+<connect1002>
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
-</data1002>
+</connect1002>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -83,37 +83,37 @@
 # we force our own host name, in order to make the test machine independent
 CURL_GETHOSTNAME=curlhost
 # we try to use the LD_PRELOAD hack, if not a debug build
 LD_PRELOAD=%PWD/libtest/.libs/libhostname.so
  </setenv>
  <command>
-http://test.remote.example.com:209/path/2090002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel
+http://test.remote.example.com.209:%HTTPPORT/path/2090002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel
 </command>
 <precheck>
 chkhostname curlhost
 </precheck>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.example.com:209 HTTP/1.1
-Host: test.remote.example.com:209
+CONNECT test.remote.example.com.209:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.209:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.example.com:209 HTTP/1.1
-Host: test.remote.example.com:209
+CONNECT test.remote.example.com.209:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.209:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAABQAFAHAAAAAIAAgAdQAAAAAAAAAAAAAABoKBAKAeQjzKtCQ7ubW8S6MN7B59436GAxPu0CVROwwNBsgxML49gcbAXLT/bU+H5wrS9XNpbGx5Y3VybGhvc3Q=
 Proxy-Connection: Keep-Alive
 
 GET /path/2090002 HTTP/1.1
 User-Agent: curl/7.12.3-CVS (i686-pc-linux-gnu) libcurl/7.12.3-CVS OpenSSL/0.9.6b zlib/1.1.4
-Host: test.remote.example.com:209
+Host: test.remote.example.com.209:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test213
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test213	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test213	2013-04-12 02:46:54.000000000 +0800
@@ -10,27 +10,27 @@
 </info>
 
 # Server-side
 <reply>
 
 # this is returned first since we get no proxy-auth
-<data1001>
+<connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 
 And you should ignore this data.
-</data1001>
+</connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
-<data1002>
+<connect1002>
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
-</data1002>
+</connect1002>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -83,38 +83,38 @@
 # we force our own host name, in order to make the test machine independent
 CURL_GETHOSTNAME=curlhost
 # we try to use the LD_PRELOAD hack, if not a debug build
 LD_PRELOAD=%PWD/libtest/.libs/libhostname.so
  </setenv>
  <command>
-http://test.remote.example.com:213/path/2130002 --proxy1.0 http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel -d "postit"
+http://test.remote.example.com.213:%HTTPPORT/path/2130002 --proxy1.0 http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel -d "postit"
 </command>
 <precheck>
 chkhostname curlhost
 </precheck>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol nonewline="yes">
-CONNECT test.remote.example.com:213 HTTP/1.0
-Host: test.remote.example.com:213
+CONNECT test.remote.example.com.213:%HTTPPORT HTTP/1.0
+Host: test.remote.example.com.213:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.example.com:213 HTTP/1.0
-Host: test.remote.example.com:213
+CONNECT test.remote.example.com.213:%HTTPPORT HTTP/1.0
+Host: test.remote.example.com.213:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAABQAFAHAAAAAIAAgAdQAAAAAAAAAAAAAABoKBAKAeQjzKtCQ7ubW8S6MN7B59436GAxPu0CVROwwNBsgxML49gcbAXLT/bU+H5wrS9XNpbGx5Y3VybGhvc3Q=
 Proxy-Connection: Keep-Alive
 
 POST /path/2130002 HTTP/1.1
 User-Agent: curl/7.12.3-CVS (i686-pc-linux-gnu) libcurl/7.12.3-CVS OpenSSL/0.9.6b zlib/1.1.4
-Host: test.remote.example.com:213
+Host: test.remote.example.com.213:%HTTPPORT
 Accept: */*
 Content-Length: 6
 Content-Type: application/x-www-form-urlencoded
 
 postit
 </protocol>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test217
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test217	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test217	2013-04-12 02:46:54.000000000 +0800
@@ -12,41 +12,41 @@
 </info>
 
 # Server-side
 <reply>
 
 # this is returned first since we get no proxy-auth
-<data nocheck="yes">
+<connect nocheck="yes">
 HTTP/1.1 405 Method Not Allowed swsclose
 
 And you should ignore this data.
-</data>
+</connect>
 
 </reply>
 
 # Client-side
 <client>
 <server>
 http
 </server>
  <name>
 HTTP proxy CONNECT to proxy returning 405
  </name>
  <command>
-http://test.remote.example.com:217/path/2170002 --proxy http://%HOSTIP:%HTTPPORT --proxytunnel -w "%{http_code} %{http_connect}\n"
+http://test.remote.example.com.217:%HTTPPORT/path/2170002 --proxy http://%HOSTIP:%HTTPPORT --proxytunnel -w "%{http_code} %{http_connect}\n"
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol>
-CONNECT test.remote.example.com:217 HTTP/1.1
-Host: test.remote.example.com:217
+CONNECT test.remote.example.com.217:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.217:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
 </protocol>
 # CURLE_RECV_ERROR
 <errorcode>
 56
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test24
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test24	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test24	2013-04-12 02:46:54.000000000 +0800
@@ -40,11 +40,11 @@
 Accept: */*
 
 </protocol>
 <errorcode>
 22
 </errorcode>
-<file2 name="log/stderr24">
+<file2 name="log/stderr24" mode="text">
 curl: (22) The requested URL returned error: 404 BAD BOY
 </file2>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test265
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test265	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test265	2013-04-12 02:46:54.000000000 +0800
@@ -10,29 +10,29 @@
 </info>
 
 # Server-side
 <reply>
 
 # this is returned first since we get no proxy-auth
-<data1001>
+<connect1001>
 HTTP/1.0 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 Content-Length: 1033
 
 And you should ignore this data.
z
-</data1001>
+</connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
-<data1002>
+<connect1002>
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
-</data1002>
+</connect1002>
 
 # this is returned when we get a GET!
 <data2>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 7
@@ -86,38 +86,38 @@
 # we force our own host name, in order to make the test machine independent
 CURL_GETHOSTNAME=curlhost
 # we try to use the LD_PRELOAD hack, if not a debug build
 LD_PRELOAD=%PWD/libtest/.libs/libhostname.so
  </setenv>
  <command>
-http://test.remote.example.com:265/path/2650002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel -d "postit"
+http://test.remote.example.com.265:%HTTPPORT/path/2650002 --proxy http://%HOSTIP:%HTTPPORT --proxy-user silly:person --proxy-ntlm --proxytunnel -d "postit"
 </command>
 <precheck>
 chkhostname curlhost
 </precheck>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent: curl/.*
 </strip>
 <protocol nonewline="yes">
-CONNECT test.remote.example.com:265 HTTP/1.1
-Host: test.remote.example.com:265
+CONNECT test.remote.example.com.265:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.265:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA=
 Proxy-Connection: Keep-Alive
 
-CONNECT test.remote.example.com:265 HTTP/1.1
-Host: test.remote.example.com:265
+CONNECT test.remote.example.com.265:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.265:%HTTPPORT
 Proxy-Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAABQAFAHAAAAAIAAgAdQAAAAAAAAAAAAAABoKBAKAeQjzKtCQ7ubW8S6MN7B59436GAxPu0CVROwwNBsgxML49gcbAXLT/bU+H5wrS9XNpbGx5Y3VybGhvc3Q=
 Proxy-Connection: Keep-Alive
 
 POST /path/2650002 HTTP/1.1
 User-Agent: curl/7.12.3-CVS (i686-pc-linux-gnu) libcurl/7.12.3-CVS OpenSSL/0.9.6b zlib/1.1.4
-Host: test.remote.example.com:265
+Host: test.remote.example.com.265:%HTTPPORT
 Accept: */*
 Content-Length: 6
 Content-Type: application/x-www-form-urlencoded
 
 postit
 </protocol>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test275
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test275	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test275	2013-04-12 02:46:54.000000000 +0800
@@ -11,23 +11,30 @@
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
+<connect>
+HTTP/1.1 200 OK
+Connected-fine: sure
+
+</connect>
+
 <data>
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Type: text/html
 Content-Length: 9
 
 contents
 </data>
 <datacheck>
-HTTP/1.1 200 Mighty fine indeed
+HTTP/1.1 200 OK
+Connected-fine: sure
 
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Content-Type: text/html
 Content-Length: 9
@@ -44,38 +51,38 @@
 http-proxy
 </server>
  <name>
 HTTP CONNECT with proxytunnel getting two URLs from the same host
  </name>
  <command>
-http://remotesite.com:%HTTPPORT/we/want/that/page/275 -p -x %HOSTIP:%PROXYPORT --user iam:myself --proxy-user youare:yourself http://remotesite.com:%HTTPPORT/we/want/that/page/275
+http://remotesite.com.275:%HTTPPORT/we/want/that/page/275 -p -x %HOSTIP:%PROXYPORT --user iam:myself --proxy-user youare:yourself http://remotesite.com.275:%HTTPPORT/we/want/that/page/275
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent:.*
 </strip>
 <proxy>
-CONNECT remotesite.com:%HTTPPORT HTTP/1.1
-Host: remotesite.com:%HTTPPORT
+CONNECT remotesite.com.275:%HTTPPORT HTTP/1.1
+Host: remotesite.com.275:%HTTPPORT
 Proxy-Authorization: Basic eW91YXJlOnlvdXJzZWxm
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol>
 GET /we/want/that/page/275 HTTP/1.1
 Authorization: Basic aWFtOm15c2VsZg==
-Host: remotesite.com:%HTTPPORT
+Host: remotesite.com.275:%HTTPPORT
 Accept: */*
 
 GET /we/want/that/page/275 HTTP/1.1
 Authorization: Basic aWFtOm15c2VsZg==
-Host: remotesite.com:%HTTPPORT
+Host: remotesite.com.275:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test287
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test287	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test287	2013-04-12 02:46:54.000000000 +0800
@@ -8,39 +8,38 @@
 </keywords>
 </info>
 
 # Server-side
 <reply>
 
-# this is returned first since we get no proxy-auth
-<data nocheck="yes">
+<connect nocheck="yes">
 HTTP/1.1 405 Method Not Allowed swsclose
 
 And you should ignore this data.
-</data>
+</connect>
 
 </reply>
 
 # Client-side
 <client>
 <server>
 http
 </server>
  <name>
 HTTP proxy CONNECT with custom User-Agent header
  </name>
  <command>
-http://test.remote.example.com:287/path/287 -H "User-Agent: looser/2007" --proxy http://%HOSTIP:%HTTPPORT --proxytunnel
+http://test.remote.example.com.287:%HTTPPORT/path/287 -H "User-Agent: looser/2007" --proxy http://%HOSTIP:%HTTPPORT --proxytunnel
 </command>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-CONNECT test.remote.example.com:287 HTTP/1.1
-Host: test.remote.example.com:287
+CONNECT test.remote.example.com.287:%HTTPPORT HTTP/1.1
+Host: test.remote.example.com.287:%HTTPPORT
 Proxy-Connection: Keep-Alive
 User-Agent: looser/2007
 
 </protocol>
 # CURLE_RECV_ERROR
 <errorcode>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test302
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test302	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test302	2013-04-12 02:46:54.000000000 +0800
@@ -6,25 +6,36 @@
 HTTP CONNECT
 HTTP proxy
 FAILURE
 </keywords>
 </info>
 
+# Server-side
+<reply>
+
+<connect nocheck="yes">
+HTTP/1.1 405 Method Not Allowed swsclose
+
+And you should ignore this data.
+</connect>
+
+</reply>
+
 # Client-side
 <client>
 <features>
 SSL
 </features>
 <server>
 https
 </server>
  <name>
 HTTPS GET over HTTP proxy fails
  </name>
  <command>
--k -U fake:user -x %HOSTIP:%HTTPPORT https://bad.fakeurl-to.test/slash/302
+-k -U fake:user -x %HOSTIP:%HTTPPORT https://bad.fakeurl-to.test:302/slash/302
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test503 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test503
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test503	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test503	2013-04-12 02:46:54.000000000 +0800
@@ -13,12 +13,16 @@
 
 # Server-side
 <reply>
 <servercmd>
 connection-monitor
 </servercmd>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+
+</connect>
 <data>
 HTTP/1.1 200 OK swsclose
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Last-Modified: Tue, 13 Jun 2000 12:10:00 GMT
 ETag: "21025-dc7-39462498"
@@ -48,13 +52,13 @@
 </tool>
 
  <name>
 simple multi http:// through proxytunnel with authentication info
  </name>
  <command>
-http://%HOSTIP:%HTTPPORT/503 %HOSTIP:%PROXYPORT
+http://machine.503:%HTTPPORT/503 %HOSTIP:%PROXYPORT
 </command>
 <file name="log/test503.txt">
 foo
    bar
 bar
    foo
@@ -62,22 +66,22 @@
 </file>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <proxy>
-CONNECT %HOSTIP:%HTTPPORT HTTP/1.1
-Host: %HOSTIP:%HTTPPORT
+CONNECT machine.503:%HTTPPORT HTTP/1.1
+Host: machine.503:%HTTPPORT
 Proxy-Authorization: Basic dGVzdDppbmc=
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol>
 GET /503 HTTP/1.1
 Authorization: Basic dGVzdDppbmc=
-Host: %HOSTIP:%HTTPPORT
+Host: machine.503:%HTTPPORT
 Accept: */*
 
 [DISCONNECT]
 </protocol>
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test509
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test530 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test530
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test530	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test530	2013-04-12 02:46:54.000000000 +0800
@@ -1,11 +1,11 @@
 <testcase>
 <info>
 <keywords>
 HTTP
-Pipelining
+pipelining
 multi
 </keywords>
 </info>
 
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test536 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test536
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test536	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test536	2013-04-12 02:46:54.000000000 +0800
@@ -1,7 +1,15 @@
 <testcase>
+<info>
+<keywords>
+HTTP
+pipelining
+multi
+</keywords>
+</info>
+
 <reply>
 <data mode="text">
 HTTP/1.1 404 Badness
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 ETag: "21025-dc7-39462498"
 Content-Length: 6
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test543 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test543
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test543	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test543	2013-04-12 02:46:54.000000000 +0800
@@ -25,11 +25,11 @@
 
 # Verify data after the test has been "shot"
 #
 # There's no MTDM in the protocol here since this code doesn't ask for the
 # time/date of the file
 <verify>
-<stdout>
+<stdout mode="text">
 %9C%26K%3DI%04%A1%01%E0%D8%7C%20%B7%EFS%29%FA%1DW%E1
 </stdout>
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test558
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test571 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test571
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test571	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test571	2013-04-12 02:46:54.000000000 +0800
@@ -80,13 +80,13 @@
 <command>
 rtsp://%HOSTIP:%RTSPPORT/571 log/protofile.txt
 </command>
 </client>
 
 <verify>
-<stdout>
+<stdout mode="text">
 RTP: message size 10, channel 1
 RTP: message size 500, channel 0
 RTP: message size 196, channel 0
 RTP: message size 124, channel 0
 RTP: message size 824, channel 0
 RTP: message size 10, channel 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test584 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test584
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test584	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test584	2013-04-12 02:46:54.000000000 +0800
@@ -1,11 +1,11 @@
 <testcase>
 <info>
 <keywords>
 HTTP
-Pipelining
+pipelining
 multi
 </keywords>
 </info>
 
 # Server-side
 # Silly division of the first request is solely to appease the server which expects n_data_items == n_requests
@@ -73,13 +73,13 @@
 
 GET /path/5840004 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 
 </protocol>
-<stdout>
+<stdout mode="text">
 HTTP/1.1 200 OK
 Server: test-server/fake
 Content-Length: 4
 
 584
 HTTP/1.1 200 OK
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test591 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test591
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test591	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test591	2013-04-12 02:46:54.000000000 +0800
@@ -60,14 +60,14 @@
 EPRT |1|
 PORT
 TYPE I
 STOR 591
 QUIT
 </protocol>
-# CURLE_UPLOAD_FAILED = 25
+# CURLE_FTP_ACCEPT_FAILED = 10
 <errorcode>
-25
+10
 </errorcode>
 <upload>
 </upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test592 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test592
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test592	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test592	2013-04-12 02:46:54.000000000 +0800
@@ -59,15 +59,16 @@
 PWD
 CWD path
 EPRT |1|
 PORT
 TYPE I
 STOR 592
+QUIT
 </protocol>
-# 28 == CURLE_OPERATION_TIMEDOUT
+# CURLE_FTP_ACCEPT_FAILED = 10
 <errorcode>
-28
+10
 </errorcode>
 <upload>
 </upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test80
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test80	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test80	2013-04-12 02:46:54.000000000 +0800
@@ -21,12 +21,16 @@
 Content-Type: text/html
 Funny-head: yesyes
 Content-Length: 9
 
 contents
 </data>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+
+</connect>
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
 
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake swsclose
@@ -46,34 +50,34 @@
 http-proxy
 </server>
  <name>
 HTTP 1.0 CONNECT with proxytunnel and proxy+host Basic authentication
  </name>
  <command>
-http://%HOSTIP:%HTTPPORT/we/want/that/page/80 -p --proxy1.0 %HOSTIP:%PROXYPORT --user iam:myself --proxy-user youare:yourself
+http://test.80:%HTTPPORT/we/want/that/page/80 -p --proxy1.0 %HOSTIP:%PROXYPORT --user iam:myself --proxy-user youare:yourself
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent:.*
 </strip>
 <proxy>
-CONNECT %HOSTIP:%HTTPPORT HTTP/1.0
-Host: %HOSTIP:%HTTPPORT
+CONNECT test.80:%HTTPPORT HTTP/1.0
+Host: test.80:%HTTPPORT
 Proxy-Authorization: Basic eW91YXJlOnlvdXJzZWxm
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol>
 GET /we/want/that/page/80 HTTP/1.1
 Authorization: Basic aWFtOm15c2VsZg==
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
-Host: %HOSTIP:%HTTPPORT
+Host: test.80:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test800 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test800
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test800	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test800	2013-04-12 02:46:54.000000000 +0800
@@ -1,11 +1,11 @@
 <testcase>
 <info>
 <keywords>
-POP3
-RETR
+IMAP
+FETCH
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
@@ -21,28 +21,28 @@
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-pop3
+imap
 </server>
  <name>
-POP3 RETR
+IMAP FETCH
  </name>
  <command>
-pop3://%HOSTIP:%POP3PORT/800 -u user:secret
+'imap://%HOSTIP:%IMAPPORT/800/;UID=1' -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-CAPA
-USER user
-PASS secret
-RETR 800
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 800
+A004 FETCH 1 BODY[]
+A005 LOGOUT
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test801 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test801
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test801	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test801	2013-04-12 02:46:54.000000000 +0800
@@ -7,42 +7,39 @@
 </info>
 
 #
 # Server-side
 <reply>
 <data>
-From: me@somewhere
-To: fake@nowhere
-
-body
-
---
-  yours sincerely
+body
+
+--
+  yours sincerely
 </data>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
 imap
 </server>
  <name>
-IMAP FETCH
+IMAP FETCH by UID and SECTION
  </name>
  <command>
-imap://%HOSTIP:%IMAPPORT/801 -u user:secret
+'imap://%HOSTIP:%IMAPPORT/801/;UID=123/;SECTION=1' -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-B CAPABILITY
-C LOGIN user secret
-D SELECT 801
-A FETCH 1 BODY[TEXT]
-B LOGOUT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 801
+A004 FETCH 123 BODY[1]
+A005 LOGOUT
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test802 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test802
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test802	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test802	2013-04-12 02:46:54.000000000 +0800
@@ -1,53 +1,46 @@
 <testcase>
 <info>
 <keywords>
-SMTP
+IMAP
+SELECT
+UIDVALIDITY
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
+<data>
+body
+
+--
+  yours sincerely
+</data>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-smtp
+imap
 </server>
  <name>
-SMTP
+IMAP SELECT UIDVALIDITY Success
  </name>
-<stdin>
-From: different
-To: another
-
-body
-</stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 802@foo --mail-rcpt 802@foobar.example --mail-from 802@from -T -
+'imap://%HOSTIP:%IMAPPORT/802;UIDVALIDITY=3857529045/;UID=123/;SECTION=TEXT' -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-EHLO user
-MAIL FROM:<802@from>
-RCPT TO:<802@foo>
-RCPT TO:<802@foobar.example>
-DATA
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 802
+A004 FETCH 123 BODY[TEXT]
+A005 LOGOUT
 </protocol>
-<upload>
-From: different
-To: another
-
-body
-
-.
-</upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test803 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test803
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test803	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test803	2013-04-12 02:46:54.000000000 +0800
@@ -1,64 +1,44 @@
 <testcase>
 <info>
 <keywords>
-SMTP
+IMAP
+SELECT
+UIDVALIDITY
+FAILURE
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-smtp
+imap
 </server>
  <name>
-SMTP with CRLF-dot-CRLF in data
+IMAP SELECT UIDVALIDITY Failure
  </name>
-<stdin>
-From: different
-To: another
-
-
-.
-.
-
-.
-
-body
-</stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 803@foo --mail-from '<803@from>' -T -
+'imap://%HOSTIP:%IMAPPORT/803;UIDVALIDITY=12345/;UID=123' -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
+# CURLE_REMOTE_FILE_NOT_FOUND - UIDVALIDITY mismatch
+<errorcode>
+78
+</errorcode>
 <protocol>
-EHLO user
-MAIL FROM:<803@from>
-RCPT TO:<803@foo>
-DATA
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 803
+A004 LOGOUT
 </protocol>
-<upload>
-From: different
-To: another
-
-
-..
-..
-
-..
-
-body
-
-.
-</upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test804 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test804
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test804	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test804	2013-04-12 02:46:54.000000000 +0800
@@ -1,59 +1,46 @@
 <testcase>
 <info>
 <keywords>
-SMTP
-SMTP HELO
-RFC821
+IMAP
+SELECT
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
-<servercmd>
-REPLY EHLO 500 Command unrecognized
-REPLY HELO 250 Already old but still servicing...
-</servercmd>
+<data>
+body
+
+--
+  yours sincerely
+</data>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-smtp
+imap
 </server>
  <name>
-RFC821-only SMTP server (EHLO not supported)
+IMAP doesn't perform SELECT if re-using the same mailbox
  </name>
-<stdin>
-From: different
-To: another
-
-body
-</stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 804@foo --mail-from 804@from -T -
+-u user:secret 'imap://%HOSTIP:%IMAPPORT/804/;UID=123/;SECTION=1' 'imap://%HOSTIP:%IMAPPORT/804/;UID=456/;SECTION=2.3'
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-EHLO user
-HELO user
-MAIL FROM:<804@from>
-RCPT TO:<804@foo>
-DATA
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 804
+A004 FETCH 123 BODY[1]
+A005 FETCH 456 BODY[2.3]
+A006 LOGOUT
 </protocol>
-<upload>
-From: different
-To: another
-
-body
-
-.
-</upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test805 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test805
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test805	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test805	2013-04-12 02:46:54.000000000 +0800
@@ -1,54 +1,61 @@
 <testcase>
 <info>
 <keywords>
-SMTP
-SMTP AUTH PLAIN
-RFC4616
-RFC4954
+IMAP
+APPEND
+UPLOAD
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
-<servercmd>
-REPLY EHLO 220 AUTH PLAIN
-REPLY AUTH 235 Authenticated
-</servercmd>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-smtp
+imap
 </server>
  <name>
-SMTP plain authentication
+IMAP APPEND
  </name>
-<stdin>
-mail body
-</stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 805@foo --mail-from 805@from -u test:1234 -T -
+-u user:secret -T log/upload805 'imap://%HOSTIP:%IMAPPORT/805'
 </command>
+<file name="log/upload805">
+Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
+From: Fred Foobar <foobar@example.COM>
+Subject: afternoon meeting
+To: joe@example.com
+Message-Id: <B27397-0100000@example.COM>
+MIME-Version: 1.0
+Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
+
+Hello Joe, do you think we can meet at 3:30 tomorrow?
+</file>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-EHLO user
-AUTH PLAIN dGVzdAB0ZXN0ADEyMzQ=
-MAIL FROM:<805@from>
-RCPT TO:<805@foo>
-DATA
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 APPEND 805 (\Seen) {295}
+A004 LOGOUT
 </protocol>
 <upload>
-mail body
+Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
+From: Fred Foobar <foobar@example.COM>
+Subject: afternoon meeting
+To: joe@example.com
+Message-Id: <B27397-0100000@example.COM>
+MIME-Version: 1.0
+Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
 
-.
+Hello Joe, do you think we can meet at 3:30 tomorrow?
 </upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test806 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test806
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test806	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test806	2013-04-12 02:46:54.000000000 +0800
@@ -1,55 +1,43 @@
 <testcase>
 <info>
 <keywords>
-SMTP
-SMTP AUTH LOGIN
-RFC4954
+IMAP
+LIST
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
-<servercmd>
-REPLY EHLO 220 AUTH LOGIN
-REPLY AUTH 334 UGFzc3dvcmQ6
-REPLY MTIzNA== 235 Authenticated
-</servercmd>
+<data>
+* LIST () "/" /806/blurdybloop
+* LIST (\Noselect) "/" /806/foo
+* LIST () "/" /806/foo/bar
+</data>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-smtp
+imap
 </server>
  <name>
-SMTP login authentication
+IMAP LIST
  </name>
-<stdin>
-mail body
-</stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 806@foo --mail-from 806@from -u test:1234 -T -
+-u user:secret 'imap://%HOSTIP:%IMAPPORT/806/'
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-EHLO user
-AUTH LOGIN dGVzdA==
-MTIzNA==
-MAIL FROM:<806@from>
-RCPT TO:<806@foo>
-DATA
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 LIST "806" *
+A004 LOGOUT
 </protocol>
-<upload>
-mail body
-
-.
-</upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test807 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test807
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test807	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test807	2013-04-12 02:46:54.000000000 +0800
@@ -1,59 +1,43 @@
 <testcase>
 <info>
 <keywords>
-SMTP
-SMTP AUTH CRAM-MD5
-RFC2195
-RFC4954
+IMAP
+STORE
+CUSTOMREQUEST
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
-<servercmd>
-REPLY EHLO 220 AUTH CRAM-MD5
-REPLY AUTH 334 PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+
-REPLY dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw 235 Authenticated
-</servercmd>
+<data>
+* 123 FETCH (FLAGS (\Seen \Deleted))
+</data>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-smtp
+imap
 </server>
-<features>
-crypto
-</features>
  <name>
-SMTP CRAM-MD5 authentication
+IMAP STORE (CUSTOMREQUEST)
  </name>
-<stdin>
-mail body
-</stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/user --mail-rcpt 807@foo --mail-from 807@from -u tim:tanstaaftanstaaf -T -
+-u user:secret -X 'STORE 123 +Flags \Deleted' 'imap://%HOSTIP:%IMAPPORT/807'
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-EHLO user
-AUTH CRAM-MD5
-dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw
-MAIL FROM:<807@from>
-RCPT TO:<807@foo>
-DATA
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 SELECT 807
+A004 STORE 123 +Flags \Deleted
+A005 LOGOUT
 </protocol>
-<upload>
-mail body
-
-.
-</upload>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test808 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test808
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test808	2013-01-18 05:40:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test808	2013-04-12 02:46:54.000000000 +0800
@@ -1,43 +1,48 @@
 <testcase>
 <info>
 <keywords>
-POP3
-LIST
+IMAP
+EXAMINE
+CUSTOMREQUEST
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
-<servercmd>
-# include the '.\r\n' 3-byte trailer to end the transfer poperly!
-REPLY LIST +OK 808 100\r\n.
-</servercmd>
+<data>
+* 17 EXISTS
+* 2 RECENT
+* OK [UNSEEN 8] Message 8 is first unseen
+* OK [UIDVALIDITY 3857529045] UIDs valid
+* OK [UIDNEXT 4392] Predicted next UID
+* FLAGS (\Answered \Flagged \Deleted \Seen \Draft)
+* OK [PERMANENTFLAGS ()] No permanent flags permitted
+</data>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
-pop3
+imap
 </server>
  <name>
-POP3 LIST one message
+IMAP EXAMINE (CUSTOMREQUEST)
  </name>
  <command>
-pop3://%HOSTIP:%POP3PORT/808 -l -u user:secret
+'imap://%HOSTIP:%IMAPPORT' -u user:secret -X 'EXAMINE 808'
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
-CAPA
-USER user
-PASS secret
-LIST 808
-QUIT
+A001 CAPABILITY
+A002 LOGIN user secret
+A003 EXAMINE 808
+A004 LOGOUT
 </protocol>
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test809
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test810
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test811
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test812
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test813
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test814
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data: test815
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test83
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test83	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test83	2013-04-12 02:46:54.000000000 +0800
@@ -18,12 +18,16 @@
 Content-Type: text/html
 Funny-head: yesyes
 Content-Length: 9
 
 contents
 </data>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+
+</connect>
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
 
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake swsclose
@@ -43,33 +47,33 @@
 http-proxy
 </server>
  <name>
 HTTP over proxy-tunnel with site authentication
  </name>
  <command>
-http://%HOSTIP:%HTTPPORT/we/want/that/page/83 -p -x %HOSTIP:%PROXYPORT --user iam:myself
+http://test.83:%HTTPPORT/we/want/that/page/83 -p -x %HOSTIP:%PROXYPORT --user iam:myself
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent:.*
 </strip>
 <proxy>
-CONNECT %HOSTIP:%HTTPPORT HTTP/1.1
+CONNECT test.83:%HTTPPORT HTTP/1.1
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
-Host: %HOSTIP:%HTTPPORT
+Host: test.83:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol>
 GET /we/want/that/page/83 HTTP/1.1
 Authorization: Basic aWFtOm15c2VsZg==
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
-Host: %HOSTIP:%HTTPPORT
+Host: test.83:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
 </testcase>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test850
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test851
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test852
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test853
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test854
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test855
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test856
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test857
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test900
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test901
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test902
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test903
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test904
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test905
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test906
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test94
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test94	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test94	2013-04-12 02:46:54.000000000 +0800
@@ -8,20 +8,20 @@
 FAILURE
 </keywords>
 </info>
 #
 # Server-side
 <reply>
-<data nocheck="yes">
+<connect nocheck="yes">
 HTTP/1.1 407 Needs proxy authentication
 Server: test-server/fake swsclose yesyes
 Proxy-Authenticate: Basic "oh please"
 Connection: close
 
 bing
-</data>
+</connect>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test95
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/data/test95	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data/test95	2013-04-12 02:46:54.000000000 +0800
@@ -18,12 +18,16 @@
 Content-Type: text/html
 Funny-head: yesyes
 Content-Length: 9
 
 contents
 </data>
+<connect>
+HTTP/1.1 200 Mighty fine indeed
+
+</connect>
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
 
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake swsclose
@@ -43,33 +47,33 @@
 http-proxy
 </server>
  <name>
 HTTP over proxytunnel using POST
  </name>
  <command>
-http://%HOSTIP:%HTTPPORT/we/want/that/page/95 -p -x %HOSTIP:%PROXYPORT -d "datatopost=ohthatsfunyesyes"
+http://test.95:%HTTPPORT/we/want/that/page/95 -p -x %HOSTIP:%PROXYPORT -d "datatopost=ohthatsfunyesyes"
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <strip>
 ^User-Agent:.*
 </strip>
 <proxy>
-CONNECT %HOSTIP:%HTTPPORT HTTP/1.1
+CONNECT test.95:%HTTPPORT HTTP/1.1
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
-Host: %HOSTIP:%HTTPPORT
+Host: test.95:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol nonewline="yes">
 POST /we/want/that/page/95 HTTP/1.1
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
-Host: %HOSTIP:%HTTPPORT
+Host: test.95:%HTTPPORT
 Accept: */*
 Content-Length: 27
 Content-Type: application/x-www-form-urlencoded
 
 datatopost=ohthatsfunyesyes
 </protocol>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/data: test96
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/FILEFORMAT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/FILEFORMAT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/FILEFORMAT	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/FILEFORMAT	2013-04-12 05:19:19.000000000 +0800
@@ -72,12 +72,17 @@
 Dynamically changing num in this way allows the test harness to be used to
 test authentication negotiation where several different requests must be sent
 to complete a transfer. The response to each request is found in its own data
 section.  Validating the entire negotiation sequence can be done by
 specifying a datacheck section.
 </dataNUM>
+<connect>
+The connect section is used instead of the 'data' for all CONNECT
+requests. The remainder of the rules for the data section then apply but with
+a connect prefix.
+</connect>
 <datacheck [nonewline="yes"]>
 if the data is sent but this is what should be checked afterwards. If
 'nonewline' is set, we will cut off the trailing newline of this given data
 before comparing with the one actually received by the client
 </datacheck>
 <size>
@@ -188,12 +193,13 @@
 SSL
 socks
 unittest
 debug
 TLS-SRP
 Metalink
+TrackMemory
 
 as well as each protocol that curl supports.  A protocol only needs to be
 specified if it is different from the server (useful when the server
 is 'none').
 </features>
 
@@ -243,15 +249,16 @@
 
 Note that the URL that gets passed to the server actually controls what data
 that is returned. The last slash in the URL must be followed by a number. That
 number (N) will be used by the test-server to load test case N and return the
 data that is defined within the <reply><data></data></reply> section.
 
-If a CONNECT is used to the server (to emulate HTTPS etc over proxy), the port
-number given in the CONNECT request will be used to identify which test that
-is being run, if the proxy host name is said to start with 'test'.
+If there's no test number found above, the HTTP test server will use the
+number following the last dot in the given hostname (made so that a CONNECT
+can still pass on test number) so that "foo.bar.123" gets treated as test case
+123.
 
 Set type="perl" to write the test case as a perl script. It implies that
 there's no memory debugging and valgrind gets shut off for this test.
 
 Set option="no-output" to prevent the test script to slap on the --output
 argument that directs the output to a file. The --output is also not added if
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/ftp.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/ftp.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/ftp.pm	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/ftp.pm	2013-04-12 02:46:54.000000000 +0800
@@ -45,12 +45,84 @@
         $pid = 0 unless($pid > 0);
     }
     return $pid;
 }
 
 #######################################################################
+# pidexists checks if a process with a given pid exists and is alive.
+# This will return the positive pid if the process exists and is alive.
+# This will return the negative pid if the process exists differently.
+# This will return 0 if the process could not be found.
+#
+sub pidexists {
+    my $pid = $_[0];
+
+    if($pid > 0) {
+        # verify if currently existing and alive
+        if(kill(0, $pid)) {
+            return $pid;
+        }
+
+        # verify if currently existing Windows process
+        if($^O eq "msys") {
+            my $filter = "PID eq $pid";
+            my $result = `tasklist -fi \"$filter\" 2>nul`;
+            if(index($result, "$pid") != -1) {
+                return -$pid;
+            }
+        }
+    }
+
+    return 0;
+}
+
+#######################################################################
+# pidterm asks the process with a given pid to terminate gracefully.
+#
+sub pidterm {
+    my $pid = $_[0];
+
+    if($pid > 0) {
+        # signal the process to terminate
+        kill("TERM", $pid);
+
+        # request the process to quit
+        if($^O eq "msys") {
+            my $filter = "PID eq $pid";
+            my $result = `tasklist -fi \"$filter\" 2>nul`;
+            if(index($result, "$pid") != -1) {
+                system("taskkill -fi \"$filter\" >nul 2>&1");
+            }
+        }
+    }
+}
+
+#######################################################################
+# pidkill kills the process with a given pid mercilessly andforcefully.
+#
+sub pidkill {
+    my $pid = $_[0];
+
+    if($pid > 0) {
+        # signal the process to terminate
+        kill("KILL", $pid);
+
+        # request the process to quit
+        if($^O eq "msys") {
+            my $filter = "PID eq $pid";
+            my $result = `tasklist -fi \"$filter\" 2>nul`;
+            if(index($result, "$pid") != -1) {
+                system("taskkill -f -fi \"$filter\" >nul 2>&1");
+                # Windows XP Home compatibility
+                system("tskill $pid >nul 2>&1");
+            }
+        }
+    }
+}
+
+#######################################################################
 # processexists checks if a process with the pid stored in the given
 # pidfile exists and is alive. This will return 0 on any file related
 # error or if a pid can not be extracted from the given file. When a
 # process with the same pid as the one extracted from the given file
 # is currently alive this returns that positive pid. Otherwise, when
 # the process is not alive, will return the negative value of the pid.
@@ -61,13 +133,13 @@
 
     # fetch pid from pidfile
     my $pid = pidfromfile($pidfile);
 
     if($pid > 0) {
         # verify if currently alive
-        if(kill(0, $pid)) {
+        if(pidexists($pid)) {
             return $pid;
         }
         else {
             # get rid of the certainly invalid pidfile
             unlink($pidfile) if($pid == pidfromfile($pidfile));
             # reap its dead children, if not done yet
@@ -108,16 +180,16 @@
     # Send a SIGTERM to processes which are alive to gracefully stop them.
     foreach my $tmp (@requested) {
         chomp $tmp;
         if($tmp =~ /^(\d+)$/) {
             my $pid = $1;
             if($pid > 0) {
-                if(kill(0, $pid)) {
+                if(pidexists($pid)) {
                     print("RUN: Process with pid $pid signalled to die\n")
                         if($verbose);
-                    kill("TERM", $pid);
+                    pidterm($pid);
                     push @signalled, $pid;
                 }
                 else {
                     print("RUN: Process with pid $pid already dead\n")
                         if($verbose);
                     # if possible reap its dead children
@@ -131,13 +203,13 @@
     # Allow all signalled processes five seconds to gracefully die.
     if(@signalled) {
         my $twentieths = 5 * 20;
         while($twentieths--) {
             for(my $i = scalar(@signalled) - 1; $i >= 0; $i--) {
                 my $pid = $signalled[$i];
-                if(!kill(0, $pid)) {
+                if(!pidexists($pid)) {
                     print("RUN: Process with pid $pid gracefully died\n")
                         if($verbose);
                     splice @signalled, $i, 1;
                     # if possible reap its dead children
                     waitpid($pid, &WNOHANG);
                     push @reapchild, $pid;
@@ -151,13 +223,13 @@
     # Mercilessly SIGKILL processes still alive.
     if(@signalled) {
         foreach my $pid (@signalled) {
             if($pid > 0) {
                 print("RUN: Process with pid $pid forced to die with SIGKILL\n")
                     if($verbose);
-                kill("KILL", $pid);
+                pidkill($pid);
                 # if possible reap its dead children
                 waitpid($pid, &WNOHANG);
                 push @reapchild, $pid;
             }
         }
     }
@@ -191,13 +263,13 @@
     if(!$which || ($which eq 'main')) {
         $pidfile = mainsockf_pidfilename($proto, $ipvnum, $idnum);
         $pid = processexists($pidfile);
         if($pid > 0) {
             printf("* kill pid for %s-%s => %d\n", $server,
                 ($proto eq 'ftp')?'ctrl':'filt', $pid) if($verbose);
-            kill("KILL", $pid);
+            pidkill($pid);
             waitpid($pid, 0);
         }
         unlink($pidfile) if(-f $pidfile);
     }
 
     return if($proto ne 'ftp');
@@ -205,13 +277,13 @@
     if(!$which || ($which eq 'data')) {
         $pidfile = datasockf_pidfilename($proto, $ipvnum, $idnum);
         $pid = processexists($pidfile);
         if($pid > 0) {
             printf("* kill pid for %s-data => %d\n", $server,
                 $pid) if($verbose);
-            kill("KILL", $pid);
+            pidkill($pid);
             waitpid($pid, 0);
         }
         unlink($pidfile) if(-f $pidfile);
     }
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/ftpserver.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/ftpserver.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/ftpserver.pl	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/ftpserver.pl	2013-04-12 05:19:19.000000000 +0800
@@ -576,19 +576,22 @@
             '   \___|\___/|_| \_\_____|'."\r\n",
             '+OK cURL POP3 server ready to serve'."\r\n"
         );
     }
     elsif($proto eq 'imap') {
         %commandfunc = (
+            'APPEND' => \&APPEND_imap,
             'CAPABILITY' => \&CAPABILITY_imap,
+            'EXAMINE' => \&EXAMINE_imap,
             'FETCH'  => \&FETCH_imap,
+            'LIST'   => \&LIST_imap,
             'SELECT' => \&SELECT_imap,
+            'STORE'  => \&STORE_imap
         );
         %displaytext = (
             'LOGIN'  => ' OK We are happy you popped in!',
-            'SELECT' => ' OK selection done',
             'LOGOUT' => ' OK thanks for the fish',
         );
         @welcome = (
             '        _   _ ____  _     '."\r\n",
             '    ___| | | |  _ \| |    '."\r\n",
             '   / __| | | | |_) | |    '."\r\n",
@@ -757,12 +760,20 @@
 # global to allow the command functions to read it
 my $cmdid;
 
 # what was picked by SELECT
 my $selected;
 
+# Any IMAP parameter can come in escaped and in double quotes.
+# This function is dumb (so far) and just removes the quotes if present.
+sub fix_imap_params {
+    foreach (@_) {
+        $_ = $1 if /^"(.*)"$/;
+    }
+}
+
 sub CAPABILITY_imap {
     my ($testno) = @_;
     my $data;
 
     if(!$support_capa) {
         sendcontrol "$cmdid BAD Command\r\n";
@@ -780,70 +791,225 @@
 
     return 0;
 }
 
 sub SELECT_imap {
     my ($testno) = @_;
-    my @data;
-    my $size;
+    fix_imap_params($testno);
 
     logmsg "SELECT_imap got test $testno\n";
 
+    # Example from RFC 3501, 6.3.1. SELECT Command
+    sendcontrol "* 172 EXISTS\r\n";
+    sendcontrol "* 1 RECENT\r\n";
+    sendcontrol "* OK [UNSEEN 12] Message 12 is first unseen\r\n";
+    sendcontrol "* OK [UIDVALIDITY 3857529045] UIDs valid\r\n";
+    sendcontrol "* OK [UIDNEXT 4392] Predicted next UID\r\n";
+    sendcontrol "* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\r\n";
+    sendcontrol "* OK [PERMANENTFLAGS (\\Deleted \\Seen \\*)] Limited\r\n";
+    sendcontrol "$cmdid OK [READ-WRITE] SELECT completed\r\n";
+
     $selected = $testno;
 
     return 0;
 }
 
 sub FETCH_imap {
-     my ($testno) = @_;
-     my @data;
-     my $size;
+    my ($args) = @_;
+    my ($uid, $how) = split(/ /, $args, 2);
+    my @data;
+    my $size;
+    fix_imap_params($uid, $how);
+
+    logmsg "FETCH_imap got $args\n";
+
+    if($selected eq "verifiedserver") {
+        # this is the secret command that verifies that this actually is
+        # the curl test server
+        my $response = "WE ROOLZ: $$\r\n";
+        if($verbose) {
+            print STDERR "FTPD: We returned proof we are the test server\n";
+        }
+        $data[0] = $response;
+        logmsg "return proof we are we\n";
+    }
+    else {
+        logmsg "retrieve a mail\n";
+
+        my $testno = $selected;
+        $testno =~ s/^([^0-9]*)//;
+        my $testpart = "";
+        if ($testno > 10000) {
+            $testpart = $testno % 10000;
+            $testno = int($testno / 10000);
+        }
+
+        # send mail content
+        loadtest("$srcdir/data/test$testno");
+
+        @data = getpart("reply", "data$testpart");
+    }
+
+    for (@data) {
+        $size += length($_);
+    }
+
+    sendcontrol "* $uid FETCH ($how {$size}\r\n";
+
+    for my $d (@data) {
+        sendcontrol $d;
+    }
+
+    sendcontrol ")\r\n";
+    sendcontrol "$cmdid OK FETCH completed\r\n";
+
+    return 0;
+}
+
+sub APPEND_imap {
+    my ($args) = @_;
+
+    logmsg "APPEND_imap got $args\r\n";
+
+    $args =~ /^([^ ]+) [^{]*\{(\d+)\}$/;
+    my ($folder, $size) = ($1, $2);
+    fix_imap_params($folder);
+
+    sendcontrol "+ Ready for literal data\r\n";
+
+    my $testno = $folder;
+    my $filename = "log/upload.$testno";
+
+    logmsg "Store test number $testno in $filename\n";
+
+    open(FILE, ">$filename") ||
+        return 0; # failed to open output
+
+    my $received = 0;
+    my $line;
+    while(5 == (sysread \*SFREAD, $line, 5)) {
+        if($line eq "DATA\n") {
+            sysread \*SFREAD, $line, 5;
+
+            my $chunksize = 0;
+            if($line =~ /^([0-9a-fA-F]{4})\n/) {
+                $chunksize = hex($1);
+            }
 
-     logmsg "FETCH_imap got test $testno\n";
+            read_mainsockf(\$line, $chunksize);
 
-     $testno = $selected;
+            my $left = $size - $received;
+            my $datasize = ($left > $chunksize) ? $chunksize : $left;
 
-     if($testno =~ /^verifiedserver$/) {
+            if($datasize > 0) {
+                logmsg "> Appending $datasize bytes to file\n";
+                print FILE substr($line, 0, $datasize) if(!$nosave);
+                $line = substr($line, $datasize);
+
+                $received += $datasize;
+                if($received == $size) {
+                    logmsg "Received all data, waiting for final CRLF.\n";
+                }
+            }
+
+            if($received == $size && $line eq "\r\n") {
+                last;
+            }
+        }
+        elsif($line eq "DISC\n") {
+            logmsg "Unexpected disconnect!\n";
+            last;
+        }
+        else {
+            logmsg "No support for: $line";
+            last;
+        }
+    }
+
+    if($nosave) {
+        print FILE "$size bytes would've been stored here\n";
+    }
+    close(FILE);
+
+    logmsg "received $size bytes upload\n";
+
+    sendcontrol "$cmdid OK APPEND completed\r\n";
+
+    return 0;
+}
+
+sub STORE_imap {
+    my ($args) = @_;
+    my ($uid, $what) = split(/ /, $args, 2);
+    fix_imap_params($uid);
+
+    logmsg "STORE_imap got $args\n";
+
+    sendcontrol "* $uid FETCH (FLAGS (\\Seen \\Deleted))\r\n";
+    sendcontrol "$cmdid OK STORE completed\r\n";
+
+    return 0;
+}
+
+sub LIST_imap {
+    my ($args) = @_;
+    my ($reference, $mailbox) = split(/ /, $args, 2);
+    my @data;
+    fix_imap_params($reference, $mailbox);
+
+    logmsg "LIST_imap got $args\n";
+
+    if ($reference eq "verifiedserver") {
          # this is the secret command that verifies that this actually is
          # the curl test server
-         my $response = "WE ROOLZ: $$\r\n";
+         @data = ("* LIST () \"/\" \"WE ROOLZ: $$\"\r\n");
          if($verbose) {
              print STDERR "FTPD: We returned proof we are the test server\n";
          }
-         $data[0] = $response;
          logmsg "return proof we are we\n";
-     }
-     else {
-         logmsg "retrieve a mail\n";
-
-         $testno =~ s/^([^0-9]*)//;
-         my $testpart = "";
-         if ($testno > 10000) {
-             $testpart = $testno % 10000;
-             $testno = int($testno / 10000);
-         }
+    }
+    else {
+        my $testno = $reference;
+        $testno =~ s/^([^0-9]*)//;
+        my $testpart = "";
+        if ($testno > 10000) {
+            $testpart = $testno % 10000;
+            $testno = int($testno / 10000);
+        }
+    
+        loadtest("$srcdir/data/test$testno");
 
-         # send mail content
-         loadtest("$srcdir/data/test$testno");
+        @data = getpart("reply", "data$testpart");
+    }
 
-         @data = getpart("reply", "data$testpart");
-     }
+    for my $d (@data) {
+        sendcontrol $d;
+    }
 
-     for (@data) {
-         $size += length($_);
-     }
+    sendcontrol "$cmdid OK LIST Completed\r\n";
 
-     sendcontrol "* FETCH starts {$size}\r\n";
+    return 0;
+}
 
-     for my $d (@data) {
-         sendcontrol $d;
-     }
+sub EXAMINE_imap {
+    my ($testno) = @_;
+    fix_imap_params($testno);
 
-     sendcontrol "$cmdid OK FETCH completed\r\n";
+    logmsg "EXAMINE_imap got test $testno\n";
 
-     return 0;
+    # Example from RFC 3501, 6.3.2. EXAMINE Command
+    sendcontrol "* 17 EXISTS\r\n";
+    sendcontrol "* 2 RECENT\r\n";
+    sendcontrol "* OK [UNSEEN 8] Message 8 is first unseen\r\n";
+    sendcontrol "* OK [UIDVALIDITY 3857529045] UIDs valid\r\n";
+    sendcontrol "* OK [UIDNEXT 4392] Predicted next UID\r\n";
+    sendcontrol "* FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\r\n";
+    sendcontrol "* OK [PERMANENTFLAGS ()] No permanent flags permitted\r\n";
+    sendcontrol "$cmdid OK [READ-ONLY] EXAMINE completed\r\n";
+
+    return 0;
 }
 
 ################
 ################ POP3 commands
 ################
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib1507.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib1508.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib1509.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib1510.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib1900.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib509.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/lib530.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/lib530.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/lib530.c	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/lib530.c	2013-04-12 02:46:54.000000000 +0800
@@ -34,12 +34,13 @@
   int res = 0;
   CURL *curl[NUM_HANDLES];
   int running;
   CURLM *m = NULL;
   int i;
   char target_url[256];
+  int handles_added = 0;
 
   for(i=0; i < NUM_HANDLES; i++)
     curl[i] = NULL;
 
   start_test_timing();
 
@@ -56,16 +57,19 @@
     target_url[sizeof(target_url) - 1] = '\0';
     easy_setopt(curl[i], CURLOPT_URL, target_url);
     /* go verbose */
     easy_setopt(curl[i], CURLOPT_VERBOSE, 1L);
     /* include headers */
     easy_setopt(curl[i], CURLOPT_HEADER, 1L);
-    /* add handle to multi */
-    multi_add_handle(m, curl[i]);
   }
 
+  /* Add the first handle to multi. We do this to let libcurl detect
+     that the server can do pipelining. The rest of the handles will be
+     added later. */
+  multi_add_handle(m, curl[handles_added++]);
+
   multi_setopt(m, CURLMOPT_PIPELINING, 1L);
 
   fprintf(stderr, "Start at URL 0\n");
 
   for(;;) {
     struct timeval interval;
@@ -76,15 +80,20 @@
     interval.tv_usec = 0;
 
     multi_perform(m, &running);
 
     abort_on_test_timeout();
 
-    if(!running)
+    if(!running && handles_added >= NUM_HANDLES)
       break; /* done */
 
+    /* Add the rest of the handles now that the first handle has sent the
+       request. */
+    while(handles_added < NUM_HANDLES)
+      multi_add_handle(m, curl[handles_added++]);
+
     FD_ZERO(&rd);
     FD_ZERO(&wr);
     FD_ZERO(&exc);
 
     multi_fdset(m, &rd, &wr, &exc, &maxfd);
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest: lib558.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/libntlmconnect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/libntlmconnect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/libntlmconnect.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/libntlmconnect.c	2013-04-12 02:46:54.000000000 +0800
@@ -122,12 +122,18 @@
     free(full_url);
     return res;
   }
 
   multi_init(multi);
 
+#ifdef USE_PIPELINING
+  multi_setopt(multi, CURLMOPT_PIPELINING, 1);
+  multi_setopt(multi, CURLMOPT_MAX_HOST_CONNECTIONS, 5);
+  multi_setopt(multi, CURLMOPT_MAX_TOTAL_CONNECTIONS, 10);
+#endif
+
   for(;;) {
     struct timeval interval;
     fd_set fdread;
     fd_set fdwrite;
     fd_set fdexcep;
     long timeout = -99;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/Makefile.am	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/Makefile.am	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -67,17 +67,12 @@
 endif
 
 # Dependencies (may need to be overriden)
 LDADD = $(SUPPORTFILES_LIBS)
 DEPENDENCIES = $(top_builddir)/lib/libcurl.la
 
-# Mostly for Windows build targets, when using static libcurl
-if USE_CPPFLAG_CURL_STATICLIB
-AM_CPPFLAGS += -DCURL_STATICLIB
-endif
-
 # Makefile.inc provides the source defines (TESTUTIL, SUPPORTFILES,
 # noinst_PROGRAMS, lib*_SOURCES, and lib*_CFLAGS)
 include Makefile.inc
 
 # Preloading of libhostname allows host name overriding,
 # this is used to make some tests machine independent.
@@ -85,24 +80,38 @@
 if BUILD_LIBHOSTNAME
 noinst_LTLIBRARIES = libhostname.la
 else
 noinst_LTLIBRARIES =
 endif
 
-if NO_UNDEFINED
-# The -no-undefined flag is crucial to build fine on some platforms
-UNDEF = -no-undefined
+if USE_CPPFLAG_CURL_STATICLIB
+AM_CPPFLAGS += -DCURL_STATICLIB
 endif
 
-libhostname_la_SOURCES = sethostname.c sethostname.h
+AM_LDFLAGS =
+AM_CFLAGS =
 
-libhostname_la_LIBADD =
-libhostname_la_DEPENDENCIES =
-libhostname_la_LDFLAGS = -module -avoid-version $(UNDEF) -rpath /nowhere
+libhostname_la_CPPFLAGS_EXTRA =
+libhostname_la_LDFLAGS_EXTRA = -module -avoid-version -rpath /nowhere
+libhostname_la_CFLAGS_EXTRA =
+
+if CURL_LT_SHLIB_USE_NO_UNDEFINED
+libhostname_la_LDFLAGS_EXTRA += -no-undefined
+endif
+
+if CURL_LT_SHLIB_USE_MIMPURE_TEXT
+libhostname_la_LDFLAGS_EXTRA += -mimpure-text
+endif
 
 if DOING_CURL_SYMBOL_HIDING
-libhostname_la_CPPFLAGS = $(AM_CPPFLAGS) -DCURL_HIDDEN_SYMBOLS
-libhostname_la_CFLAGS = $(AM_CFLAGS) $(CFLAG_CURL_SYMBOL_HIDING)
-else
-libhostname_la_CPPFLAGS = $(AM_CPPFLAGS)
-libhostname_la_CFLAGS = $(AM_CFLAGS)
+libhostname_la_CPPFLAGS_EXTRA += -DCURL_HIDDEN_SYMBOLS
+libhostname_la_CFLAGS_EXTRA += $(CFLAG_CURL_SYMBOL_HIDING)
 endif
+
+libhostname_la_CPPFLAGS = $(AM_CPPFLAGS) $(libhostname_la_CPPFLAGS_EXTRA)
+libhostname_la_LDFLAGS = $(AM_LDFLAGS) $(libhostname_la_LDFLAGS_EXTRA)
+libhostname_la_CFLAGS = $(AM_CFLAGS) $(libhostname_la_CFLAGS_EXTRA)
+
+libhostname_la_SOURCES = sethostname.c sethostname.h
+
+libhostname_la_LIBADD =
+libhostname_la_DEPENDENCIES =
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/Makefile.in	2013-04-12 02:47:05.000000000 +0800
@@ -49,57 +49,63 @@
 POST_INSTALL = :
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-
-# Mostly for Windows build targets, when using static libcurl
-@USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_1 = -DCURL_STATICLIB
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/Makefile.inc
 noinst_PROGRAMS = chkhostname$(EXEEXT) libauthretry$(EXEEXT) \
 	libntlmconnect$(EXEEXT) lib500$(EXEEXT) lib501$(EXEEXT) \
 	lib502$(EXEEXT) lib503$(EXEEXT) lib504$(EXEEXT) \
 	lib505$(EXEEXT) lib506$(EXEEXT) lib507$(EXEEXT) \
-	lib508$(EXEEXT) lib510$(EXEEXT) lib511$(EXEEXT) \
-	lib512$(EXEEXT) lib513$(EXEEXT) lib514$(EXEEXT) \
-	lib515$(EXEEXT) lib516$(EXEEXT) lib517$(EXEEXT) \
-	lib518$(EXEEXT) lib519$(EXEEXT) lib520$(EXEEXT) \
-	lib521$(EXEEXT) lib523$(EXEEXT) lib524$(EXEEXT) \
-	lib525$(EXEEXT) lib526$(EXEEXT) lib527$(EXEEXT) \
-	lib529$(EXEEXT) lib530$(EXEEXT) lib532$(EXEEXT) \
-	lib533$(EXEEXT) lib536$(EXEEXT) lib537$(EXEEXT) \
-	lib539$(EXEEXT) lib540$(EXEEXT) lib541$(EXEEXT) \
-	lib542$(EXEEXT) lib543$(EXEEXT) lib544$(EXEEXT) \
-	lib545$(EXEEXT) lib547$(EXEEXT) lib548$(EXEEXT) \
-	lib549$(EXEEXT) lib552$(EXEEXT) lib553$(EXEEXT) \
-	lib554$(EXEEXT) lib555$(EXEEXT) lib556$(EXEEXT) \
-	lib557$(EXEEXT) lib560$(EXEEXT) lib562$(EXEEXT) \
-	lib564$(EXEEXT) lib565$(EXEEXT) lib566$(EXEEXT) \
-	lib567$(EXEEXT) lib568$(EXEEXT) lib569$(EXEEXT) \
-	lib570$(EXEEXT) lib571$(EXEEXT) lib572$(EXEEXT) \
-	lib573$(EXEEXT) lib574$(EXEEXT) lib575$(EXEEXT) \
-	lib576$(EXEEXT) lib578$(EXEEXT) lib579$(EXEEXT) \
-	lib582$(EXEEXT) lib583$(EXEEXT) lib585$(EXEEXT) \
-	lib586$(EXEEXT) lib587$(EXEEXT) lib590$(EXEEXT) \
-	lib591$(EXEEXT) lib597$(EXEEXT) lib598$(EXEEXT) \
-	lib599$(EXEEXT) lib1500$(EXEEXT) lib1501$(EXEEXT) \
-	lib1502$(EXEEXT) lib1503$(EXEEXT) lib1504$(EXEEXT) \
-	lib1505$(EXEEXT) lib1506$(EXEEXT)
+	lib508$(EXEEXT) lib509$(EXEEXT) lib510$(EXEEXT) \
+	lib511$(EXEEXT) lib512$(EXEEXT) lib513$(EXEEXT) \
+	lib514$(EXEEXT) lib515$(EXEEXT) lib516$(EXEEXT) \
+	lib517$(EXEEXT) lib518$(EXEEXT) lib519$(EXEEXT) \
+	lib520$(EXEEXT) lib521$(EXEEXT) lib523$(EXEEXT) \
+	lib524$(EXEEXT) lib525$(EXEEXT) lib526$(EXEEXT) \
+	lib527$(EXEEXT) lib529$(EXEEXT) lib530$(EXEEXT) \
+	lib532$(EXEEXT) lib533$(EXEEXT) lib536$(EXEEXT) \
+	lib537$(EXEEXT) lib539$(EXEEXT) lib540$(EXEEXT) \
+	lib541$(EXEEXT) lib542$(EXEEXT) lib543$(EXEEXT) \
+	lib544$(EXEEXT) lib545$(EXEEXT) lib547$(EXEEXT) \
+	lib548$(EXEEXT) lib549$(EXEEXT) lib552$(EXEEXT) \
+	lib553$(EXEEXT) lib554$(EXEEXT) lib555$(EXEEXT) \
+	lib556$(EXEEXT) lib557$(EXEEXT) lib558$(EXEEXT) \
+	lib560$(EXEEXT) lib562$(EXEEXT) lib564$(EXEEXT) \
+	lib565$(EXEEXT) lib566$(EXEEXT) lib567$(EXEEXT) \
+	lib568$(EXEEXT) lib569$(EXEEXT) lib570$(EXEEXT) \
+	lib571$(EXEEXT) lib572$(EXEEXT) lib573$(EXEEXT) \
+	lib574$(EXEEXT) lib575$(EXEEXT) lib576$(EXEEXT) \
+	lib578$(EXEEXT) lib579$(EXEEXT) lib582$(EXEEXT) \
+	lib583$(EXEEXT) lib585$(EXEEXT) lib586$(EXEEXT) \
+	lib587$(EXEEXT) lib590$(EXEEXT) lib591$(EXEEXT) \
+	lib597$(EXEEXT) lib598$(EXEEXT) lib599$(EXEEXT) \
+	lib1500$(EXEEXT) lib1501$(EXEEXT) lib1502$(EXEEXT) \
+	lib1503$(EXEEXT) lib1504$(EXEEXT) lib1505$(EXEEXT) \
+	lib1506$(EXEEXT) lib1507$(EXEEXT) lib1508$(EXEEXT) \
+	lib1509$(EXEEXT) lib1510$(EXEEXT) lib1900$(EXEEXT) \
+	lib2033$(EXEEXT)
+@USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_1 = -DCURL_STATICLIB
+@CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE@am__append_2 = -no-undefined
+@CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE@am__append_3 = -mimpure-text
+@DOING_CURL_SYMBOL_HIDING_TRUE@am__append_4 = -DCURL_HIDDEN_SYMBOLS
+@DOING_CURL_SYMBOL_HIDING_TRUE@am__append_5 = $(CFLAG_CURL_SYMBOL_HIDING)
 subdir = tests/libtest
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
 	$(top_srcdir)/m4/curl-confopts.m4 \
 	$(top_srcdir)/m4/curl-functions.m4 \
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -170,453 +176,507 @@
 am__objects_19 = lib1506-testutil.$(OBJEXT)
 am__objects_20 = lib1506-warnless.$(OBJEXT)
 am_lib1506_OBJECTS = lib1506-lib1506.$(OBJEXT) $(am__objects_18) \
 	$(am__objects_19) $(am__objects_20)
 lib1506_OBJECTS = $(am_lib1506_OBJECTS)
 lib1506_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_21 = lib500-first.$(OBJEXT)
-am__objects_22 = lib500-testutil.$(OBJEXT)
-am__objects_23 = lib500-testtrace.$(OBJEXT)
-am_lib500_OBJECTS = lib500-lib500.$(OBJEXT) $(am__objects_21) \
+am__objects_21 = lib1507-first.$(OBJEXT)
+am__objects_22 = lib1507-testutil.$(OBJEXT)
+am__objects_23 = lib1507-warnless.$(OBJEXT)
+am_lib1507_OBJECTS = lib1507-lib1507.$(OBJEXT) $(am__objects_21) \
 	$(am__objects_22) $(am__objects_23)
+lib1507_OBJECTS = $(am_lib1507_OBJECTS)
+lib1507_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_24 = lib1508-first.$(OBJEXT)
+am__objects_25 = lib1508-testutil.$(OBJEXT)
+am__objects_26 = lib1508-warnless.$(OBJEXT)
+am_lib1508_OBJECTS = lib1508-lib1508.$(OBJEXT) $(am__objects_24) \
+	$(am__objects_25) $(am__objects_26)
+lib1508_OBJECTS = $(am_lib1508_OBJECTS)
+lib1508_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_27 = lib1509-first.$(OBJEXT)
+am__objects_28 = lib1509-testutil.$(OBJEXT)
+am__objects_29 = lib1509-warnless.$(OBJEXT)
+am_lib1509_OBJECTS = lib1509-lib1509.$(OBJEXT) $(am__objects_27) \
+	$(am__objects_28) $(am__objects_29)
+lib1509_OBJECTS = $(am_lib1509_OBJECTS)
+lib1509_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_30 = lib1510-first.$(OBJEXT)
+am__objects_31 = lib1510-testutil.$(OBJEXT)
+am__objects_32 = lib1510-warnless.$(OBJEXT)
+am_lib1510_OBJECTS = lib1510-lib1510.$(OBJEXT) $(am__objects_30) \
+	$(am__objects_31) $(am__objects_32)
+lib1510_OBJECTS = $(am_lib1510_OBJECTS)
+lib1510_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_33 = lib1900-first.$(OBJEXT)
+am__objects_34 = lib1900-testutil.$(OBJEXT)
+am__objects_35 = lib1900-warnless.$(OBJEXT)
+am_lib1900_OBJECTS = lib1900-lib1900.$(OBJEXT) $(am__objects_33) \
+	$(am__objects_34) $(am__objects_35)
+lib1900_OBJECTS = $(am_lib1900_OBJECTS)
+lib1900_LDADD = $(LDADD)
+lib1900_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_36 = lib2033-first.$(OBJEXT)
+am__objects_37 = lib2033-testutil.$(OBJEXT)
+am__objects_38 = lib2033-warnless.$(OBJEXT)
+am_lib2033_OBJECTS = lib2033-libntlmconnect.$(OBJEXT) \
+	$(am__objects_36) $(am__objects_37) $(am__objects_38)
+lib2033_OBJECTS = $(am_lib2033_OBJECTS)
+lib2033_LDADD = $(LDADD)
+lib2033_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_39 = lib500-first.$(OBJEXT)
+am__objects_40 = lib500-testutil.$(OBJEXT)
+am__objects_41 = lib500-testtrace.$(OBJEXT)
+am_lib500_OBJECTS = lib500-lib500.$(OBJEXT) $(am__objects_39) \
+	$(am__objects_40) $(am__objects_41)
 lib500_OBJECTS = $(am_lib500_OBJECTS)
 lib500_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_24 = lib501-first.$(OBJEXT)
-am_lib501_OBJECTS = lib501-lib501.$(OBJEXT) $(am__objects_24)
+am__objects_42 = lib501-first.$(OBJEXT)
+am_lib501_OBJECTS = lib501-lib501.$(OBJEXT) $(am__objects_42)
 lib501_OBJECTS = $(am_lib501_OBJECTS)
 lib501_LDADD = $(LDADD)
 lib501_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_25 = lib502-first.$(OBJEXT)
-am__objects_26 = lib502-testutil.$(OBJEXT)
-am__objects_27 = lib502-warnless.$(OBJEXT)
-am_lib502_OBJECTS = lib502-lib502.$(OBJEXT) $(am__objects_25) \
-	$(am__objects_26) $(am__objects_27)
+am__objects_43 = lib502-first.$(OBJEXT)
+am__objects_44 = lib502-testutil.$(OBJEXT)
+am__objects_45 = lib502-warnless.$(OBJEXT)
+am_lib502_OBJECTS = lib502-lib502.$(OBJEXT) $(am__objects_43) \
+	$(am__objects_44) $(am__objects_45)
 lib502_OBJECTS = $(am_lib502_OBJECTS)
 lib502_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_28 = lib503-first.$(OBJEXT)
-am__objects_29 = lib503-testutil.$(OBJEXT)
-am__objects_30 = lib503-warnless.$(OBJEXT)
-am_lib503_OBJECTS = lib503-lib503.$(OBJEXT) $(am__objects_28) \
-	$(am__objects_29) $(am__objects_30)
+am__objects_46 = lib503-first.$(OBJEXT)
+am__objects_47 = lib503-testutil.$(OBJEXT)
+am__objects_48 = lib503-warnless.$(OBJEXT)
+am_lib503_OBJECTS = lib503-lib503.$(OBJEXT) $(am__objects_46) \
+	$(am__objects_47) $(am__objects_48)
 lib503_OBJECTS = $(am_lib503_OBJECTS)
 lib503_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_31 = lib504-first.$(OBJEXT)
-am__objects_32 = lib504-testutil.$(OBJEXT)
-am__objects_33 = lib504-warnless.$(OBJEXT)
-am_lib504_OBJECTS = lib504-lib504.$(OBJEXT) $(am__objects_31) \
-	$(am__objects_32) $(am__objects_33)
+am__objects_49 = lib504-first.$(OBJEXT)
+am__objects_50 = lib504-testutil.$(OBJEXT)
+am__objects_51 = lib504-warnless.$(OBJEXT)
+am_lib504_OBJECTS = lib504-lib504.$(OBJEXT) $(am__objects_49) \
+	$(am__objects_50) $(am__objects_51)
 lib504_OBJECTS = $(am_lib504_OBJECTS)
 lib504_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_34 = lib505-first.$(OBJEXT)
-am_lib505_OBJECTS = lib505-lib505.$(OBJEXT) $(am__objects_34)
+am__objects_52 = lib505-first.$(OBJEXT)
+am_lib505_OBJECTS = lib505-lib505.$(OBJEXT) $(am__objects_52)
 lib505_OBJECTS = $(am_lib505_OBJECTS)
 lib505_LDADD = $(LDADD)
 lib505_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_35 = lib506-first.$(OBJEXT)
-am_lib506_OBJECTS = lib506-lib506.$(OBJEXT) $(am__objects_35)
+am__objects_53 = lib506-first.$(OBJEXT)
+am_lib506_OBJECTS = lib506-lib506.$(OBJEXT) $(am__objects_53)
 lib506_OBJECTS = $(am_lib506_OBJECTS)
 lib506_LDADD = $(LDADD)
 lib506_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_36 = lib507-first.$(OBJEXT)
-am__objects_37 = lib507-testutil.$(OBJEXT)
-am__objects_38 = lib507-warnless.$(OBJEXT)
-am_lib507_OBJECTS = lib507-lib507.$(OBJEXT) $(am__objects_36) \
-	$(am__objects_37) $(am__objects_38)
+am__objects_54 = lib507-first.$(OBJEXT)
+am__objects_55 = lib507-testutil.$(OBJEXT)
+am__objects_56 = lib507-warnless.$(OBJEXT)
+am_lib507_OBJECTS = lib507-lib507.$(OBJEXT) $(am__objects_54) \
+	$(am__objects_55) $(am__objects_56)
 lib507_OBJECTS = $(am_lib507_OBJECTS)
 lib507_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_39 = lib508-first.$(OBJEXT)
-am_lib508_OBJECTS = lib508-lib508.$(OBJEXT) $(am__objects_39)
+am__objects_57 = lib508-first.$(OBJEXT)
+am_lib508_OBJECTS = lib508-lib508.$(OBJEXT) $(am__objects_57)
 lib508_OBJECTS = $(am_lib508_OBJECTS)
 lib508_LDADD = $(LDADD)
 lib508_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_40 = lib510-first.$(OBJEXT)
-am_lib510_OBJECTS = lib510-lib510.$(OBJEXT) $(am__objects_40)
+am__objects_58 = lib509-first.$(OBJEXT)
+am_lib509_OBJECTS = lib509-lib509.$(OBJEXT) $(am__objects_58)
+lib509_OBJECTS = $(am_lib509_OBJECTS)
+lib509_LDADD = $(LDADD)
+lib509_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_59 = lib510-first.$(OBJEXT)
+am_lib510_OBJECTS = lib510-lib510.$(OBJEXT) $(am__objects_59)
 lib510_OBJECTS = $(am_lib510_OBJECTS)
 lib510_LDADD = $(LDADD)
 lib510_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_41 = lib511-first.$(OBJEXT)
-am_lib511_OBJECTS = lib511-lib511.$(OBJEXT) $(am__objects_41)
+am__objects_60 = lib511-first.$(OBJEXT)
+am_lib511_OBJECTS = lib511-lib511.$(OBJEXT) $(am__objects_60)
 lib511_OBJECTS = $(am_lib511_OBJECTS)
 lib511_LDADD = $(LDADD)
 lib511_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_42 = lib512-first.$(OBJEXT)
-am_lib512_OBJECTS = lib512-lib512.$(OBJEXT) $(am__objects_42)
+am__objects_61 = lib512-first.$(OBJEXT)
+am_lib512_OBJECTS = lib512-lib512.$(OBJEXT) $(am__objects_61)
 lib512_OBJECTS = $(am_lib512_OBJECTS)
 lib512_LDADD = $(LDADD)
 lib512_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_43 = lib513-first.$(OBJEXT)
-am_lib513_OBJECTS = lib513-lib513.$(OBJEXT) $(am__objects_43)
+am__objects_62 = lib513-first.$(OBJEXT)
+am_lib513_OBJECTS = lib513-lib513.$(OBJEXT) $(am__objects_62)
 lib513_OBJECTS = $(am_lib513_OBJECTS)
 lib513_LDADD = $(LDADD)
 lib513_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_44 = lib514-first.$(OBJEXT)
-am_lib514_OBJECTS = lib514-lib514.$(OBJEXT) $(am__objects_44)
+am__objects_63 = lib514-first.$(OBJEXT)
+am_lib514_OBJECTS = lib514-lib514.$(OBJEXT) $(am__objects_63)
 lib514_OBJECTS = $(am_lib514_OBJECTS)
 lib514_LDADD = $(LDADD)
 lib514_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_45 = lib515-first.$(OBJEXT)
-am_lib515_OBJECTS = lib515-lib515.$(OBJEXT) $(am__objects_45)
+am__objects_64 = lib515-first.$(OBJEXT)
+am_lib515_OBJECTS = lib515-lib515.$(OBJEXT) $(am__objects_64)
 lib515_OBJECTS = $(am_lib515_OBJECTS)
 lib515_LDADD = $(LDADD)
 lib515_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_46 = lib516-first.$(OBJEXT)
-am_lib516_OBJECTS = lib516-lib516.$(OBJEXT) $(am__objects_46)
+am__objects_65 = lib516-first.$(OBJEXT)
+am_lib516_OBJECTS = lib516-lib516.$(OBJEXT) $(am__objects_65)
 lib516_OBJECTS = $(am_lib516_OBJECTS)
 lib516_LDADD = $(LDADD)
 lib516_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_47 = lib517-first.$(OBJEXT)
-am_lib517_OBJECTS = lib517-lib517.$(OBJEXT) $(am__objects_47)
+am__objects_66 = lib517-first.$(OBJEXT)
+am_lib517_OBJECTS = lib517-lib517.$(OBJEXT) $(am__objects_66)
 lib517_OBJECTS = $(am_lib517_OBJECTS)
 lib517_LDADD = $(LDADD)
 lib517_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_48 = lib518-first.$(OBJEXT)
-am__objects_49 = lib518-warnless.$(OBJEXT)
-am_lib518_OBJECTS = lib518-lib518.$(OBJEXT) $(am__objects_48) \
-	$(am__objects_49)
+am__objects_67 = lib518-first.$(OBJEXT)
+am__objects_68 = lib518-warnless.$(OBJEXT)
+am_lib518_OBJECTS = lib518-lib518.$(OBJEXT) $(am__objects_67) \
+	$(am__objects_68)
 lib518_OBJECTS = $(am_lib518_OBJECTS)
 lib518_LDADD = $(LDADD)
 lib518_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_50 = lib519-first.$(OBJEXT)
-am_lib519_OBJECTS = lib519-lib519.$(OBJEXT) $(am__objects_50)
+am__objects_69 = lib519-first.$(OBJEXT)
+am_lib519_OBJECTS = lib519-lib519.$(OBJEXT) $(am__objects_69)
 lib519_OBJECTS = $(am_lib519_OBJECTS)
 lib519_LDADD = $(LDADD)
 lib519_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_51 = lib520-first.$(OBJEXT)
-am_lib520_OBJECTS = lib520-lib520.$(OBJEXT) $(am__objects_51)
+am__objects_70 = lib520-first.$(OBJEXT)
+am_lib520_OBJECTS = lib520-lib520.$(OBJEXT) $(am__objects_70)
 lib520_OBJECTS = $(am_lib520_OBJECTS)
 lib520_LDADD = $(LDADD)
 lib520_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_52 = lib521-first.$(OBJEXT)
-am_lib521_OBJECTS = lib521-lib521.$(OBJEXT) $(am__objects_52)
+am__objects_71 = lib521-first.$(OBJEXT)
+am_lib521_OBJECTS = lib521-lib521.$(OBJEXT) $(am__objects_71)
 lib521_OBJECTS = $(am_lib521_OBJECTS)
 lib521_LDADD = $(LDADD)
 lib521_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_53 = lib523-first.$(OBJEXT)
-am_lib523_OBJECTS = lib523-lib523.$(OBJEXT) $(am__objects_53)
+am__objects_72 = lib523-first.$(OBJEXT)
+am_lib523_OBJECTS = lib523-lib523.$(OBJEXT) $(am__objects_72)
 lib523_OBJECTS = $(am_lib523_OBJECTS)
 lib523_LDADD = $(LDADD)
 lib523_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_54 = lib524-first.$(OBJEXT)
-am_lib524_OBJECTS = lib524-lib524.$(OBJEXT) $(am__objects_54)
+am__objects_73 = lib524-first.$(OBJEXT)
+am_lib524_OBJECTS = lib524-lib524.$(OBJEXT) $(am__objects_73)
 lib524_OBJECTS = $(am_lib524_OBJECTS)
 lib524_LDADD = $(LDADD)
 lib524_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_55 = lib525-first.$(OBJEXT)
-am__objects_56 = lib525-testutil.$(OBJEXT)
-am__objects_57 = lib525-warnless.$(OBJEXT)
-am_lib525_OBJECTS = lib525-lib525.$(OBJEXT) $(am__objects_55) \
-	$(am__objects_56) $(am__objects_57)
+am__objects_74 = lib525-first.$(OBJEXT)
+am__objects_75 = lib525-testutil.$(OBJEXT)
+am__objects_76 = lib525-warnless.$(OBJEXT)
+am_lib525_OBJECTS = lib525-lib525.$(OBJEXT) $(am__objects_74) \
+	$(am__objects_75) $(am__objects_76)
 lib525_OBJECTS = $(am_lib525_OBJECTS)
 lib525_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_58 = lib526-first.$(OBJEXT)
-am__objects_59 = lib526-testutil.$(OBJEXT)
-am__objects_60 = lib526-warnless.$(OBJEXT)
-am_lib526_OBJECTS = lib526-lib526.$(OBJEXT) $(am__objects_58) \
-	$(am__objects_59) $(am__objects_60)
+am__objects_77 = lib526-first.$(OBJEXT)
+am__objects_78 = lib526-testutil.$(OBJEXT)
+am__objects_79 = lib526-warnless.$(OBJEXT)
+am_lib526_OBJECTS = lib526-lib526.$(OBJEXT) $(am__objects_77) \
+	$(am__objects_78) $(am__objects_79)
 lib526_OBJECTS = $(am_lib526_OBJECTS)
 lib526_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_61 = lib527-first.$(OBJEXT)
-am__objects_62 = lib527-testutil.$(OBJEXT)
-am__objects_63 = lib527-warnless.$(OBJEXT)
-am_lib527_OBJECTS = lib527-lib526.$(OBJEXT) $(am__objects_61) \
-	$(am__objects_62) $(am__objects_63)
+am__objects_80 = lib527-first.$(OBJEXT)
+am__objects_81 = lib527-testutil.$(OBJEXT)
+am__objects_82 = lib527-warnless.$(OBJEXT)
+am_lib527_OBJECTS = lib527-lib526.$(OBJEXT) $(am__objects_80) \
+	$(am__objects_81) $(am__objects_82)
 lib527_OBJECTS = $(am_lib527_OBJECTS)
 lib527_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_64 = lib529-first.$(OBJEXT)
-am__objects_65 = lib529-testutil.$(OBJEXT)
-am__objects_66 = lib529-warnless.$(OBJEXT)
-am_lib529_OBJECTS = lib529-lib525.$(OBJEXT) $(am__objects_64) \
-	$(am__objects_65) $(am__objects_66)
+am__objects_83 = lib529-first.$(OBJEXT)
+am__objects_84 = lib529-testutil.$(OBJEXT)
+am__objects_85 = lib529-warnless.$(OBJEXT)
+am_lib529_OBJECTS = lib529-lib525.$(OBJEXT) $(am__objects_83) \
+	$(am__objects_84) $(am__objects_85)
 lib529_OBJECTS = $(am_lib529_OBJECTS)
 lib529_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_67 = lib530-first.$(OBJEXT)
-am__objects_68 = lib530-testutil.$(OBJEXT)
-am__objects_69 = lib530-warnless.$(OBJEXT)
-am_lib530_OBJECTS = lib530-lib530.$(OBJEXT) $(am__objects_67) \
-	$(am__objects_68) $(am__objects_69)
+am__objects_86 = lib530-first.$(OBJEXT)
+am__objects_87 = lib530-testutil.$(OBJEXT)
+am__objects_88 = lib530-warnless.$(OBJEXT)
+am_lib530_OBJECTS = lib530-lib530.$(OBJEXT) $(am__objects_86) \
+	$(am__objects_87) $(am__objects_88)
 lib530_OBJECTS = $(am_lib530_OBJECTS)
 lib530_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_70 = lib532-first.$(OBJEXT)
-am__objects_71 = lib532-testutil.$(OBJEXT)
-am__objects_72 = lib532-warnless.$(OBJEXT)
-am_lib532_OBJECTS = lib532-lib526.$(OBJEXT) $(am__objects_70) \
-	$(am__objects_71) $(am__objects_72)
+am__objects_89 = lib532-first.$(OBJEXT)
+am__objects_90 = lib532-testutil.$(OBJEXT)
+am__objects_91 = lib532-warnless.$(OBJEXT)
+am_lib532_OBJECTS = lib532-lib526.$(OBJEXT) $(am__objects_89) \
+	$(am__objects_90) $(am__objects_91)
 lib532_OBJECTS = $(am_lib532_OBJECTS)
 lib532_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_73 = lib533-first.$(OBJEXT)
-am__objects_74 = lib533-testutil.$(OBJEXT)
-am__objects_75 = lib533-warnless.$(OBJEXT)
-am_lib533_OBJECTS = lib533-lib533.$(OBJEXT) $(am__objects_73) \
-	$(am__objects_74) $(am__objects_75)
+am__objects_92 = lib533-first.$(OBJEXT)
+am__objects_93 = lib533-testutil.$(OBJEXT)
+am__objects_94 = lib533-warnless.$(OBJEXT)
+am_lib533_OBJECTS = lib533-lib533.$(OBJEXT) $(am__objects_92) \
+	$(am__objects_93) $(am__objects_94)
 lib533_OBJECTS = $(am_lib533_OBJECTS)
 lib533_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_76 = lib536-first.$(OBJEXT)
-am__objects_77 = lib536-testutil.$(OBJEXT)
-am__objects_78 = lib536-warnless.$(OBJEXT)
-am_lib536_OBJECTS = lib536-lib536.$(OBJEXT) $(am__objects_76) \
-	$(am__objects_77) $(am__objects_78)
+am__objects_95 = lib536-first.$(OBJEXT)
+am__objects_96 = lib536-testutil.$(OBJEXT)
+am__objects_97 = lib536-warnless.$(OBJEXT)
+am_lib536_OBJECTS = lib536-lib536.$(OBJEXT) $(am__objects_95) \
+	$(am__objects_96) $(am__objects_97)
 lib536_OBJECTS = $(am_lib536_OBJECTS)
 lib536_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_79 = lib537-first.$(OBJEXT)
-am__objects_80 = lib537-warnless.$(OBJEXT)
-am_lib537_OBJECTS = lib537-lib537.$(OBJEXT) $(am__objects_79) \
-	$(am__objects_80)
+am__objects_98 = lib537-first.$(OBJEXT)
+am__objects_99 = lib537-warnless.$(OBJEXT)
+am_lib537_OBJECTS = lib537-lib537.$(OBJEXT) $(am__objects_98) \
+	$(am__objects_99)
 lib537_OBJECTS = $(am_lib537_OBJECTS)
 lib537_LDADD = $(LDADD)
 lib537_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_81 = lib539-first.$(OBJEXT)
-am_lib539_OBJECTS = lib539-lib539.$(OBJEXT) $(am__objects_81)
+am__objects_100 = lib539-first.$(OBJEXT)
+am_lib539_OBJECTS = lib539-lib539.$(OBJEXT) $(am__objects_100)
 lib539_OBJECTS = $(am_lib539_OBJECTS)
 lib539_LDADD = $(LDADD)
 lib539_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_82 = lib540-first.$(OBJEXT)
-am__objects_83 = lib540-testutil.$(OBJEXT)
-am__objects_84 = lib540-warnless.$(OBJEXT)
-am_lib540_OBJECTS = lib540-lib540.$(OBJEXT) $(am__objects_82) \
-	$(am__objects_83) $(am__objects_84)
+am__objects_101 = lib540-first.$(OBJEXT)
+am__objects_102 = lib540-testutil.$(OBJEXT)
+am__objects_103 = lib540-warnless.$(OBJEXT)
+am_lib540_OBJECTS = lib540-lib540.$(OBJEXT) $(am__objects_101) \
+	$(am__objects_102) $(am__objects_103)
 lib540_OBJECTS = $(am_lib540_OBJECTS)
 lib540_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_85 = lib541-first.$(OBJEXT)
-am_lib541_OBJECTS = lib541-lib541.$(OBJEXT) $(am__objects_85)
+am__objects_104 = lib541-first.$(OBJEXT)
+am_lib541_OBJECTS = lib541-lib541.$(OBJEXT) $(am__objects_104)
 lib541_OBJECTS = $(am_lib541_OBJECTS)
 lib541_LDADD = $(LDADD)
 lib541_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_86 = lib542-first.$(OBJEXT)
-am_lib542_OBJECTS = lib542-lib542.$(OBJEXT) $(am__objects_86)
+am__objects_105 = lib542-first.$(OBJEXT)
+am_lib542_OBJECTS = lib542-lib542.$(OBJEXT) $(am__objects_105)
 lib542_OBJECTS = $(am_lib542_OBJECTS)
 lib542_LDADD = $(LDADD)
 lib542_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_87 = lib543-first.$(OBJEXT)
-am_lib543_OBJECTS = lib543-lib543.$(OBJEXT) $(am__objects_87)
+am__objects_106 = lib543-first.$(OBJEXT)
+am_lib543_OBJECTS = lib543-lib543.$(OBJEXT) $(am__objects_106)
 lib543_OBJECTS = $(am_lib543_OBJECTS)
 lib543_LDADD = $(LDADD)
 lib543_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_88 = lib544-first.$(OBJEXT)
-am_lib544_OBJECTS = lib544-lib544.$(OBJEXT) $(am__objects_88)
+am__objects_107 = lib544-first.$(OBJEXT)
+am_lib544_OBJECTS = lib544-lib544.$(OBJEXT) $(am__objects_107)
 lib544_OBJECTS = $(am_lib544_OBJECTS)
 lib544_LDADD = $(LDADD)
 lib544_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_89 = lib545-first.$(OBJEXT)
-am_lib545_OBJECTS = lib545-lib544.$(OBJEXT) $(am__objects_89)
+am__objects_108 = lib545-first.$(OBJEXT)
+am_lib545_OBJECTS = lib545-lib544.$(OBJEXT) $(am__objects_108)
 lib545_OBJECTS = $(am_lib545_OBJECTS)
 lib545_LDADD = $(LDADD)
 lib545_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_90 = lib547-first.$(OBJEXT)
-am_lib547_OBJECTS = lib547-lib547.$(OBJEXT) $(am__objects_90)
+am__objects_109 = lib547-first.$(OBJEXT)
+am_lib547_OBJECTS = lib547-lib547.$(OBJEXT) $(am__objects_109)
 lib547_OBJECTS = $(am_lib547_OBJECTS)
 lib547_LDADD = $(LDADD)
 lib547_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_91 = lib548-first.$(OBJEXT)
-am_lib548_OBJECTS = lib548-lib547.$(OBJEXT) $(am__objects_91)
+am__objects_110 = lib548-first.$(OBJEXT)
+am_lib548_OBJECTS = lib548-lib547.$(OBJEXT) $(am__objects_110)
 lib548_OBJECTS = $(am_lib548_OBJECTS)
 lib548_LDADD = $(LDADD)
 lib548_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_92 = lib549-first.$(OBJEXT)
-am_lib549_OBJECTS = lib549-lib549.$(OBJEXT) $(am__objects_92)
+am__objects_111 = lib549-first.$(OBJEXT)
+am_lib549_OBJECTS = lib549-lib549.$(OBJEXT) $(am__objects_111)
 lib549_OBJECTS = $(am_lib549_OBJECTS)
 lib549_LDADD = $(LDADD)
 lib549_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_93 = lib552-first.$(OBJEXT)
-am__objects_94 = lib552-warnless.$(OBJEXT)
-am_lib552_OBJECTS = lib552-lib552.$(OBJEXT) $(am__objects_93) \
-	$(am__objects_94)
+am__objects_112 = lib552-first.$(OBJEXT)
+am__objects_113 = lib552-warnless.$(OBJEXT)
+am_lib552_OBJECTS = lib552-lib552.$(OBJEXT) $(am__objects_112) \
+	$(am__objects_113)
 lib552_OBJECTS = $(am_lib552_OBJECTS)
 lib552_LDADD = $(LDADD)
 lib552_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_95 = lib553-first.$(OBJEXT)
-am_lib553_OBJECTS = lib553-lib553.$(OBJEXT) $(am__objects_95)
+am__objects_114 = lib553-first.$(OBJEXT)
+am_lib553_OBJECTS = lib553-lib553.$(OBJEXT) $(am__objects_114)
 lib553_OBJECTS = $(am_lib553_OBJECTS)
 lib553_LDADD = $(LDADD)
 lib553_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_96 = lib554-first.$(OBJEXT)
-am_lib554_OBJECTS = lib554-lib554.$(OBJEXT) $(am__objects_96)
+am__objects_115 = lib554-first.$(OBJEXT)
+am_lib554_OBJECTS = lib554-lib554.$(OBJEXT) $(am__objects_115)
 lib554_OBJECTS = $(am_lib554_OBJECTS)
 lib554_LDADD = $(LDADD)
 lib554_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_97 = lib555-first.$(OBJEXT)
-am__objects_98 = lib555-testutil.$(OBJEXT)
-am__objects_99 = lib555-warnless.$(OBJEXT)
-am_lib555_OBJECTS = lib555-lib555.$(OBJEXT) $(am__objects_97) \
-	$(am__objects_98) $(am__objects_99)
+am__objects_116 = lib555-first.$(OBJEXT)
+am__objects_117 = lib555-testutil.$(OBJEXT)
+am__objects_118 = lib555-warnless.$(OBJEXT)
+am_lib555_OBJECTS = lib555-lib555.$(OBJEXT) $(am__objects_116) \
+	$(am__objects_117) $(am__objects_118)
 lib555_OBJECTS = $(am_lib555_OBJECTS)
 lib555_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_100 = lib556-first.$(OBJEXT)
-am_lib556_OBJECTS = lib556-lib556.$(OBJEXT) $(am__objects_100)
+am__objects_119 = lib556-first.$(OBJEXT)
+am_lib556_OBJECTS = lib556-lib556.$(OBJEXT) $(am__objects_119)
 lib556_OBJECTS = $(am_lib556_OBJECTS)
 lib556_LDADD = $(LDADD)
 lib556_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_101 = lib557-first.$(OBJEXT)
-am_lib557_OBJECTS = lib557-lib557.$(OBJEXT) $(am__objects_101)
+am__objects_120 = lib557-first.$(OBJEXT)
+am_lib557_OBJECTS = lib557-lib557.$(OBJEXT) $(am__objects_120)
 lib557_OBJECTS = $(am_lib557_OBJECTS)
 lib557_LDADD = $(LDADD)
 lib557_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_102 = lib560-first.$(OBJEXT)
-am__objects_103 = lib560-testutil.$(OBJEXT)
-am__objects_104 = lib560-warnless.$(OBJEXT)
-am_lib560_OBJECTS = lib560-lib560.$(OBJEXT) $(am__objects_102) \
-	$(am__objects_103) $(am__objects_104)
+am__objects_121 = lib558-first.$(OBJEXT)
+am_lib558_OBJECTS = lib558-lib558.$(OBJEXT) $(am__objects_121)
+lib558_OBJECTS = $(am_lib558_OBJECTS)
+lib558_LDADD = $(LDADD)
+lib558_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_122 = lib560-first.$(OBJEXT)
+am__objects_123 = lib560-testutil.$(OBJEXT)
+am__objects_124 = lib560-warnless.$(OBJEXT)
+am_lib560_OBJECTS = lib560-lib560.$(OBJEXT) $(am__objects_122) \
+	$(am__objects_123) $(am__objects_124)
 lib560_OBJECTS = $(am_lib560_OBJECTS)
 lib560_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_105 = lib562-first.$(OBJEXT)
-am_lib562_OBJECTS = lib562-lib562.$(OBJEXT) $(am__objects_105)
+am__objects_125 = lib562-first.$(OBJEXT)
+am_lib562_OBJECTS = lib562-lib562.$(OBJEXT) $(am__objects_125)
 lib562_OBJECTS = $(am_lib562_OBJECTS)
 lib562_LDADD = $(LDADD)
 lib562_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_106 = lib564-first.$(OBJEXT)
-am__objects_107 = lib564-testutil.$(OBJEXT)
-am__objects_108 = lib564-warnless.$(OBJEXT)
-am_lib564_OBJECTS = lib564-lib564.$(OBJEXT) $(am__objects_106) \
-	$(am__objects_107) $(am__objects_108)
+am__objects_126 = lib564-first.$(OBJEXT)
+am__objects_127 = lib564-testutil.$(OBJEXT)
+am__objects_128 = lib564-warnless.$(OBJEXT)
+am_lib564_OBJECTS = lib564-lib564.$(OBJEXT) $(am__objects_126) \
+	$(am__objects_127) $(am__objects_128)
 lib564_OBJECTS = $(am_lib564_OBJECTS)
 lib564_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_109 = lib565-first.$(OBJEXT)
-am_lib565_OBJECTS = lib565-lib510.$(OBJEXT) $(am__objects_109)
+am__objects_129 = lib565-first.$(OBJEXT)
+am_lib565_OBJECTS = lib565-lib510.$(OBJEXT) $(am__objects_129)
 lib565_OBJECTS = $(am_lib565_OBJECTS)
 lib565_LDADD = $(LDADD)
 lib565_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_110 = lib566-first.$(OBJEXT)
-am_lib566_OBJECTS = lib566-lib566.$(OBJEXT) $(am__objects_110)
+am__objects_130 = lib566-first.$(OBJEXT)
+am_lib566_OBJECTS = lib566-lib566.$(OBJEXT) $(am__objects_130)
 lib566_OBJECTS = $(am_lib566_OBJECTS)
 lib566_LDADD = $(LDADD)
 lib566_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_111 = lib567-first.$(OBJEXT)
-am_lib567_OBJECTS = lib567-lib567.$(OBJEXT) $(am__objects_111)
+am__objects_131 = lib567-first.$(OBJEXT)
+am_lib567_OBJECTS = lib567-lib567.$(OBJEXT) $(am__objects_131)
 lib567_OBJECTS = $(am_lib567_OBJECTS)
 lib567_LDADD = $(LDADD)
 lib567_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_112 = lib568-first.$(OBJEXT)
-am_lib568_OBJECTS = lib568-lib568.$(OBJEXT) $(am__objects_112)
+am__objects_132 = lib568-first.$(OBJEXT)
+am_lib568_OBJECTS = lib568-lib568.$(OBJEXT) $(am__objects_132)
 lib568_OBJECTS = $(am_lib568_OBJECTS)
 lib568_LDADD = $(LDADD)
 lib568_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_113 = lib569-first.$(OBJEXT)
-am_lib569_OBJECTS = lib569-lib569.$(OBJEXT) $(am__objects_113)
+am__objects_133 = lib569-first.$(OBJEXT)
+am_lib569_OBJECTS = lib569-lib569.$(OBJEXT) $(am__objects_133)
 lib569_OBJECTS = $(am_lib569_OBJECTS)
 lib569_LDADD = $(LDADD)
 lib569_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_114 = lib570-first.$(OBJEXT)
-am_lib570_OBJECTS = lib570-lib570.$(OBJEXT) $(am__objects_114)
+am__objects_134 = lib570-first.$(OBJEXT)
+am_lib570_OBJECTS = lib570-lib570.$(OBJEXT) $(am__objects_134)
 lib570_OBJECTS = $(am_lib570_OBJECTS)
 lib570_LDADD = $(LDADD)
 lib570_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_115 = lib571-first.$(OBJEXT)
-am__objects_116 = lib571-warnless.$(OBJEXT)
-am_lib571_OBJECTS = lib571-lib571.$(OBJEXT) $(am__objects_115) \
-	$(am__objects_116)
+am__objects_135 = lib571-first.$(OBJEXT)
+am__objects_136 = lib571-warnless.$(OBJEXT)
+am_lib571_OBJECTS = lib571-lib571.$(OBJEXT) $(am__objects_135) \
+	$(am__objects_136)
 lib571_OBJECTS = $(am_lib571_OBJECTS)
 lib571_LDADD = $(LDADD)
 lib571_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_117 = lib572-first.$(OBJEXT)
-am_lib572_OBJECTS = lib572-lib572.$(OBJEXT) $(am__objects_117)
+am__objects_137 = lib572-first.$(OBJEXT)
+am_lib572_OBJECTS = lib572-lib572.$(OBJEXT) $(am__objects_137)
 lib572_OBJECTS = $(am_lib572_OBJECTS)
 lib572_LDADD = $(LDADD)
 lib572_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_118 = lib573-first.$(OBJEXT)
-am__objects_119 = lib573-testutil.$(OBJEXT)
-am__objects_120 = lib573-warnless.$(OBJEXT)
-am__objects_121 = lib573-testtrace.$(OBJEXT)
-am_lib573_OBJECTS = lib573-lib573.$(OBJEXT) $(am__objects_118) \
-	$(am__objects_119) $(am__objects_120) $(am__objects_121)
+am__objects_138 = lib573-first.$(OBJEXT)
+am__objects_139 = lib573-testutil.$(OBJEXT)
+am__objects_140 = lib573-warnless.$(OBJEXT)
+am__objects_141 = lib573-testtrace.$(OBJEXT)
+am_lib573_OBJECTS = lib573-lib573.$(OBJEXT) $(am__objects_138) \
+	$(am__objects_139) $(am__objects_140) $(am__objects_141)
 lib573_OBJECTS = $(am_lib573_OBJECTS)
 lib573_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_122 = lib574-first.$(OBJEXT)
-am_lib574_OBJECTS = lib574-lib574.$(OBJEXT) $(am__objects_122)
+am__objects_142 = lib574-first.$(OBJEXT)
+am_lib574_OBJECTS = lib574-lib574.$(OBJEXT) $(am__objects_142)
 lib574_OBJECTS = $(am_lib574_OBJECTS)
 lib574_LDADD = $(LDADD)
 lib574_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_123 = lib575-first.$(OBJEXT)
-am__objects_124 = lib575-testutil.$(OBJEXT)
-am__objects_125 = lib575-warnless.$(OBJEXT)
-am_lib575_OBJECTS = lib575-lib575.$(OBJEXT) $(am__objects_123) \
-	$(am__objects_124) $(am__objects_125)
+am__objects_143 = lib575-first.$(OBJEXT)
+am__objects_144 = lib575-testutil.$(OBJEXT)
+am__objects_145 = lib575-warnless.$(OBJEXT)
+am_lib575_OBJECTS = lib575-lib575.$(OBJEXT) $(am__objects_143) \
+	$(am__objects_144) $(am__objects_145)
 lib575_OBJECTS = $(am_lib575_OBJECTS)
 lib575_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_126 = lib576-first.$(OBJEXT)
-am_lib576_OBJECTS = lib576-lib576.$(OBJEXT) $(am__objects_126)
+am__objects_146 = lib576-first.$(OBJEXT)
+am_lib576_OBJECTS = lib576-lib576.$(OBJEXT) $(am__objects_146)
 lib576_OBJECTS = $(am_lib576_OBJECTS)
 lib576_LDADD = $(LDADD)
 lib576_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_127 = lib578-first.$(OBJEXT)
-am_lib578_OBJECTS = lib578-lib578.$(OBJEXT) $(am__objects_127)
+am__objects_147 = lib578-first.$(OBJEXT)
+am_lib578_OBJECTS = lib578-lib578.$(OBJEXT) $(am__objects_147)
 lib578_OBJECTS = $(am_lib578_OBJECTS)
 lib578_LDADD = $(LDADD)
 lib578_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_128 = lib579-first.$(OBJEXT)
-am_lib579_OBJECTS = lib579-lib579.$(OBJEXT) $(am__objects_128)
+am__objects_148 = lib579-first.$(OBJEXT)
+am_lib579_OBJECTS = lib579-lib579.$(OBJEXT) $(am__objects_148)
 lib579_OBJECTS = $(am_lib579_OBJECTS)
 lib579_LDADD = $(LDADD)
 lib579_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_129 = lib582-first.$(OBJEXT)
-am__objects_130 = lib582-testutil.$(OBJEXT)
-am__objects_131 = lib582-warnless.$(OBJEXT)
-am_lib582_OBJECTS = lib582-lib582.$(OBJEXT) $(am__objects_129) \
-	$(am__objects_130) $(am__objects_131)
+am__objects_149 = lib582-first.$(OBJEXT)
+am__objects_150 = lib582-testutil.$(OBJEXT)
+am__objects_151 = lib582-warnless.$(OBJEXT)
+am_lib582_OBJECTS = lib582-lib582.$(OBJEXT) $(am__objects_149) \
+	$(am__objects_150) $(am__objects_151)
 lib582_OBJECTS = $(am_lib582_OBJECTS)
 lib582_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_132 = lib583-first.$(OBJEXT)
-am_lib583_OBJECTS = lib583-lib583.$(OBJEXT) $(am__objects_132)
+am__objects_152 = lib583-first.$(OBJEXT)
+am_lib583_OBJECTS = lib583-lib583.$(OBJEXT) $(am__objects_152)
 lib583_OBJECTS = $(am_lib583_OBJECTS)
 lib583_LDADD = $(LDADD)
 lib583_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_133 = lib585-first.$(OBJEXT)
-am__objects_134 = lib585-testutil.$(OBJEXT)
-am__objects_135 = lib585-testtrace.$(OBJEXT)
-am_lib585_OBJECTS = lib585-lib500.$(OBJEXT) $(am__objects_133) \
-	$(am__objects_134) $(am__objects_135)
+am__objects_153 = lib585-first.$(OBJEXT)
+am__objects_154 = lib585-testutil.$(OBJEXT)
+am__objects_155 = lib585-testtrace.$(OBJEXT)
+am_lib585_OBJECTS = lib585-lib500.$(OBJEXT) $(am__objects_153) \
+	$(am__objects_154) $(am__objects_155)
 lib585_OBJECTS = $(am_lib585_OBJECTS)
 lib585_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_136 = lib586-first.$(OBJEXT)
-am_lib586_OBJECTS = lib586-lib586.$(OBJEXT) $(am__objects_136)
+am__objects_156 = lib586-first.$(OBJEXT)
+am_lib586_OBJECTS = lib586-lib586.$(OBJEXT) $(am__objects_156)
 lib586_OBJECTS = $(am_lib586_OBJECTS)
 lib586_LDADD = $(LDADD)
 lib586_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_137 = lib587-first.$(OBJEXT)
-am_lib587_OBJECTS = lib587-lib554.$(OBJEXT) $(am__objects_137)
+am__objects_157 = lib587-first.$(OBJEXT)
+am_lib587_OBJECTS = lib587-lib554.$(OBJEXT) $(am__objects_157)
 lib587_OBJECTS = $(am_lib587_OBJECTS)
 lib587_LDADD = $(LDADD)
 lib587_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_138 = lib590-first.$(OBJEXT)
-am_lib590_OBJECTS = lib590-lib590.$(OBJEXT) $(am__objects_138)
+am__objects_158 = lib590-first.$(OBJEXT)
+am_lib590_OBJECTS = lib590-lib590.$(OBJEXT) $(am__objects_158)
 lib590_OBJECTS = $(am_lib590_OBJECTS)
 lib590_LDADD = $(LDADD)
 lib590_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_139 = lib591-first.$(OBJEXT)
-am__objects_140 = lib591-testutil.$(OBJEXT)
-am__objects_141 = lib591-warnless.$(OBJEXT)
-am_lib591_OBJECTS = lib591-lib591.$(OBJEXT) $(am__objects_139) \
-	$(am__objects_140) $(am__objects_141)
+am__objects_159 = lib591-first.$(OBJEXT)
+am__objects_160 = lib591-testutil.$(OBJEXT)
+am__objects_161 = lib591-warnless.$(OBJEXT)
+am_lib591_OBJECTS = lib591-lib591.$(OBJEXT) $(am__objects_159) \
+	$(am__objects_160) $(am__objects_161)
 lib591_OBJECTS = $(am_lib591_OBJECTS)
 lib591_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_142 = lib597-first.$(OBJEXT)
-am__objects_143 = lib597-testutil.$(OBJEXT)
-am__objects_144 = lib597-warnless.$(OBJEXT)
-am_lib597_OBJECTS = lib597-lib597.$(OBJEXT) $(am__objects_142) \
-	$(am__objects_143) $(am__objects_144)
+am__objects_162 = lib597-first.$(OBJEXT)
+am__objects_163 = lib597-testutil.$(OBJEXT)
+am__objects_164 = lib597-warnless.$(OBJEXT)
+am_lib597_OBJECTS = lib597-lib597.$(OBJEXT) $(am__objects_162) \
+	$(am__objects_163) $(am__objects_164)
 lib597_OBJECTS = $(am_lib597_OBJECTS)
 lib597_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_145 = lib598-first.$(OBJEXT)
-am_lib598_OBJECTS = lib598-lib598.$(OBJEXT) $(am__objects_145)
+am__objects_165 = lib598-first.$(OBJEXT)
+am_lib598_OBJECTS = lib598-lib598.$(OBJEXT) $(am__objects_165)
 lib598_OBJECTS = $(am_lib598_OBJECTS)
 lib598_LDADD = $(LDADD)
 lib598_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_146 = lib599-first.$(OBJEXT)
-am_lib599_OBJECTS = lib599-lib599.$(OBJEXT) $(am__objects_146)
+am__objects_166 = lib599-first.$(OBJEXT)
+am_lib599_OBJECTS = lib599-lib599.$(OBJEXT) $(am__objects_166)
 lib599_OBJECTS = $(am_lib599_OBJECTS)
 lib599_LDADD = $(LDADD)
 lib599_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_147 = libauthretry-first.$(OBJEXT)
+am__objects_167 = libauthretry-first.$(OBJEXT)
 am_libauthretry_OBJECTS = libauthretry-libauthretry.$(OBJEXT) \
-	$(am__objects_147)
+	$(am__objects_167)
 libauthretry_OBJECTS = $(am_libauthretry_OBJECTS)
 libauthretry_LDADD = $(LDADD)
 libauthretry_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_148 = libntlmconnect-first.$(OBJEXT)
-am__objects_149 = libntlmconnect-testutil.$(OBJEXT)
-am__objects_150 = libntlmconnect-warnless.$(OBJEXT)
+am__objects_168 = libntlmconnect-first.$(OBJEXT)
+am__objects_169 = libntlmconnect-testutil.$(OBJEXT)
+am__objects_170 = libntlmconnect-warnless.$(OBJEXT)
 am_libntlmconnect_OBJECTS = libntlmconnect-libntlmconnect.$(OBJEXT) \
-	$(am__objects_148) $(am__objects_149) $(am__objects_150)
+	$(am__objects_168) $(am__objects_169) $(am__objects_170)
 libntlmconnect_OBJECTS = $(am_libntlmconnect_OBJECTS)
 libntlmconnect_DEPENDENCIES = $(am__DEPENDENCIES_1)
 DEFAULT_INCLUDES = 
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
 am__mv = mv -f
@@ -629,69 +689,73 @@
 LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
 	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
 	$(LDFLAGS) -o $@
 SOURCES = $(libhostname_la_SOURCES) $(chkhostname_SOURCES) \
 	$(lib1500_SOURCES) $(lib1501_SOURCES) $(lib1502_SOURCES) \
 	$(lib1503_SOURCES) $(lib1504_SOURCES) $(lib1505_SOURCES) \
-	$(lib1506_SOURCES) $(lib500_SOURCES) $(lib501_SOURCES) \
+	$(lib1506_SOURCES) $(lib1507_SOURCES) $(lib1508_SOURCES) \
+	$(lib1509_SOURCES) $(lib1510_SOURCES) $(lib1900_SOURCES) \
+	$(lib2033_SOURCES) $(lib500_SOURCES) $(lib501_SOURCES) \
 	$(lib502_SOURCES) $(lib503_SOURCES) $(lib504_SOURCES) \
 	$(lib505_SOURCES) $(lib506_SOURCES) $(lib507_SOURCES) \
-	$(lib508_SOURCES) $(lib510_SOURCES) $(lib511_SOURCES) \
-	$(lib512_SOURCES) $(lib513_SOURCES) $(lib514_SOURCES) \
-	$(lib515_SOURCES) $(lib516_SOURCES) $(lib517_SOURCES) \
-	$(lib518_SOURCES) $(lib519_SOURCES) $(lib520_SOURCES) \
-	$(lib521_SOURCES) $(lib523_SOURCES) $(lib524_SOURCES) \
-	$(lib525_SOURCES) $(lib526_SOURCES) $(lib527_SOURCES) \
-	$(lib529_SOURCES) $(lib530_SOURCES) $(lib532_SOURCES) \
-	$(lib533_SOURCES) $(lib536_SOURCES) $(lib537_SOURCES) \
-	$(lib539_SOURCES) $(lib540_SOURCES) $(lib541_SOURCES) \
-	$(lib542_SOURCES) $(lib543_SOURCES) $(lib544_SOURCES) \
-	$(lib545_SOURCES) $(lib547_SOURCES) $(lib548_SOURCES) \
-	$(lib549_SOURCES) $(lib552_SOURCES) $(lib553_SOURCES) \
-	$(lib554_SOURCES) $(lib555_SOURCES) $(lib556_SOURCES) \
-	$(lib557_SOURCES) $(lib560_SOURCES) $(lib562_SOURCES) \
-	$(lib564_SOURCES) $(lib565_SOURCES) $(lib566_SOURCES) \
-	$(lib567_SOURCES) $(lib568_SOURCES) $(lib569_SOURCES) \
-	$(lib570_SOURCES) $(lib571_SOURCES) $(lib572_SOURCES) \
-	$(lib573_SOURCES) $(lib574_SOURCES) $(lib575_SOURCES) \
-	$(lib576_SOURCES) $(lib578_SOURCES) $(lib579_SOURCES) \
-	$(lib582_SOURCES) $(lib583_SOURCES) $(lib585_SOURCES) \
-	$(lib586_SOURCES) $(lib587_SOURCES) $(lib590_SOURCES) \
-	$(lib591_SOURCES) $(lib597_SOURCES) $(lib598_SOURCES) \
-	$(lib599_SOURCES) $(libauthretry_SOURCES) \
-	$(libntlmconnect_SOURCES)
+	$(lib508_SOURCES) $(lib509_SOURCES) $(lib510_SOURCES) \
+	$(lib511_SOURCES) $(lib512_SOURCES) $(lib513_SOURCES) \
+	$(lib514_SOURCES) $(lib515_SOURCES) $(lib516_SOURCES) \
+	$(lib517_SOURCES) $(lib518_SOURCES) $(lib519_SOURCES) \
+	$(lib520_SOURCES) $(lib521_SOURCES) $(lib523_SOURCES) \
+	$(lib524_SOURCES) $(lib525_SOURCES) $(lib526_SOURCES) \
+	$(lib527_SOURCES) $(lib529_SOURCES) $(lib530_SOURCES) \
+	$(lib532_SOURCES) $(lib533_SOURCES) $(lib536_SOURCES) \
+	$(lib537_SOURCES) $(lib539_SOURCES) $(lib540_SOURCES) \
+	$(lib541_SOURCES) $(lib542_SOURCES) $(lib543_SOURCES) \
+	$(lib544_SOURCES) $(lib545_SOURCES) $(lib547_SOURCES) \
+	$(lib548_SOURCES) $(lib549_SOURCES) $(lib552_SOURCES) \
+	$(lib553_SOURCES) $(lib554_SOURCES) $(lib555_SOURCES) \
+	$(lib556_SOURCES) $(lib557_SOURCES) $(lib558_SOURCES) \
+	$(lib560_SOURCES) $(lib562_SOURCES) $(lib564_SOURCES) \
+	$(lib565_SOURCES) $(lib566_SOURCES) $(lib567_SOURCES) \
+	$(lib568_SOURCES) $(lib569_SOURCES) $(lib570_SOURCES) \
+	$(lib571_SOURCES) $(lib572_SOURCES) $(lib573_SOURCES) \
+	$(lib574_SOURCES) $(lib575_SOURCES) $(lib576_SOURCES) \
+	$(lib578_SOURCES) $(lib579_SOURCES) $(lib582_SOURCES) \
+	$(lib583_SOURCES) $(lib585_SOURCES) $(lib586_SOURCES) \
+	$(lib587_SOURCES) $(lib590_SOURCES) $(lib591_SOURCES) \
+	$(lib597_SOURCES) $(lib598_SOURCES) $(lib599_SOURCES) \
+	$(libauthretry_SOURCES) $(libntlmconnect_SOURCES)
 DIST_SOURCES = $(libhostname_la_SOURCES) $(chkhostname_SOURCES) \
 	$(lib1500_SOURCES) $(lib1501_SOURCES) $(lib1502_SOURCES) \
 	$(lib1503_SOURCES) $(lib1504_SOURCES) $(lib1505_SOURCES) \
-	$(lib1506_SOURCES) $(lib500_SOURCES) $(lib501_SOURCES) \
+	$(lib1506_SOURCES) $(lib1507_SOURCES) $(lib1508_SOURCES) \
+	$(lib1509_SOURCES) $(lib1510_SOURCES) $(lib1900_SOURCES) \
+	$(lib2033_SOURCES) $(lib500_SOURCES) $(lib501_SOURCES) \
 	$(lib502_SOURCES) $(lib503_SOURCES) $(lib504_SOURCES) \
 	$(lib505_SOURCES) $(lib506_SOURCES) $(lib507_SOURCES) \
-	$(lib508_SOURCES) $(lib510_SOURCES) $(lib511_SOURCES) \
-	$(lib512_SOURCES) $(lib513_SOURCES) $(lib514_SOURCES) \
-	$(lib515_SOURCES) $(lib516_SOURCES) $(lib517_SOURCES) \
-	$(lib518_SOURCES) $(lib519_SOURCES) $(lib520_SOURCES) \
-	$(lib521_SOURCES) $(lib523_SOURCES) $(lib524_SOURCES) \
-	$(lib525_SOURCES) $(lib526_SOURCES) $(lib527_SOURCES) \
-	$(lib529_SOURCES) $(lib530_SOURCES) $(lib532_SOURCES) \
-	$(lib533_SOURCES) $(lib536_SOURCES) $(lib537_SOURCES) \
-	$(lib539_SOURCES) $(lib540_SOURCES) $(lib541_SOURCES) \
-	$(lib542_SOURCES) $(lib543_SOURCES) $(lib544_SOURCES) \
-	$(lib545_SOURCES) $(lib547_SOURCES) $(lib548_SOURCES) \
-	$(lib549_SOURCES) $(lib552_SOURCES) $(lib553_SOURCES) \
-	$(lib554_SOURCES) $(lib555_SOURCES) $(lib556_SOURCES) \
-	$(lib557_SOURCES) $(lib560_SOURCES) $(lib562_SOURCES) \
-	$(lib564_SOURCES) $(lib565_SOURCES) $(lib566_SOURCES) \
-	$(lib567_SOURCES) $(lib568_SOURCES) $(lib569_SOURCES) \
-	$(lib570_SOURCES) $(lib571_SOURCES) $(lib572_SOURCES) \
-	$(lib573_SOURCES) $(lib574_SOURCES) $(lib575_SOURCES) \
-	$(lib576_SOURCES) $(lib578_SOURCES) $(lib579_SOURCES) \
-	$(lib582_SOURCES) $(lib583_SOURCES) $(lib585_SOURCES) \
-	$(lib586_SOURCES) $(lib587_SOURCES) $(lib590_SOURCES) \
-	$(lib591_SOURCES) $(lib597_SOURCES) $(lib598_SOURCES) \
-	$(lib599_SOURCES) $(libauthretry_SOURCES) \
-	$(libntlmconnect_SOURCES)
+	$(lib508_SOURCES) $(lib509_SOURCES) $(lib510_SOURCES) \
+	$(lib511_SOURCES) $(lib512_SOURCES) $(lib513_SOURCES) \
+	$(lib514_SOURCES) $(lib515_SOURCES) $(lib516_SOURCES) \
+	$(lib517_SOURCES) $(lib518_SOURCES) $(lib519_SOURCES) \
+	$(lib520_SOURCES) $(lib521_SOURCES) $(lib523_SOURCES) \
+	$(lib524_SOURCES) $(lib525_SOURCES) $(lib526_SOURCES) \
+	$(lib527_SOURCES) $(lib529_SOURCES) $(lib530_SOURCES) \
+	$(lib532_SOURCES) $(lib533_SOURCES) $(lib536_SOURCES) \
+	$(lib537_SOURCES) $(lib539_SOURCES) $(lib540_SOURCES) \
+	$(lib541_SOURCES) $(lib542_SOURCES) $(lib543_SOURCES) \
+	$(lib544_SOURCES) $(lib545_SOURCES) $(lib547_SOURCES) \
+	$(lib548_SOURCES) $(lib549_SOURCES) $(lib552_SOURCES) \
+	$(lib553_SOURCES) $(lib554_SOURCES) $(lib555_SOURCES) \
+	$(lib556_SOURCES) $(lib557_SOURCES) $(lib558_SOURCES) \
+	$(lib560_SOURCES) $(lib562_SOURCES) $(lib564_SOURCES) \
+	$(lib565_SOURCES) $(lib566_SOURCES) $(lib567_SOURCES) \
+	$(lib568_SOURCES) $(lib569_SOURCES) $(lib570_SOURCES) \
+	$(lib571_SOURCES) $(lib572_SOURCES) $(lib573_SOURCES) \
+	$(lib574_SOURCES) $(lib575_SOURCES) $(lib576_SOURCES) \
+	$(lib578_SOURCES) $(lib579_SOURCES) $(lib582_SOURCES) \
+	$(lib583_SOURCES) $(lib585_SOURCES) $(lib586_SOURCES) \
+	$(lib587_SOURCES) $(lib590_SOURCES) $(lib591_SOURCES) \
+	$(lib597_SOURCES) $(lib598_SOURCES) $(lib599_SOURCES) \
+	$(libauthretry_SOURCES) $(libntlmconnect_SOURCES)
 am__can_run_installinfo = \
   case $$AM_UPDATE_INFO_DIR in \
     n|no|NO) false;; \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
 ETAGS = etags
@@ -728,12 +792,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -821,13 +886,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -886,13 +950,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -981,12 +1045,14 @@
 lib506_CPPFLAGS = $(AM_CPPFLAGS)
 lib507_SOURCES = lib507.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib507_LDADD = $(TESTUTIL_LIBS)
 lib507_CPPFLAGS = $(AM_CPPFLAGS)
 lib508_SOURCES = lib508.c $(SUPPORTFILES)
 lib508_CPPFLAGS = $(AM_CPPFLAGS)
+lib509_SOURCES = lib509.c $(SUPPORTFILES)
+lib509_CPPFLAGS = $(AM_CPPFLAGS)
 lib510_SOURCES = lib510.c $(SUPPORTFILES)
 lib510_CPPFLAGS = $(AM_CPPFLAGS)
 lib511_SOURCES = lib511.c $(SUPPORTFILES)
 lib511_CPPFLAGS = $(AM_CPPFLAGS)
 lib512_SOURCES = lib512.c $(SUPPORTFILES)
 lib512_CPPFLAGS = $(AM_CPPFLAGS)
@@ -1069,12 +1135,14 @@
 lib555_LDADD = $(TESTUTIL_LIBS)
 lib555_CPPFLAGS = $(AM_CPPFLAGS)
 lib556_SOURCES = lib556.c $(SUPPORTFILES)
 lib556_CPPFLAGS = $(AM_CPPFLAGS)
 lib557_SOURCES = lib557.c $(SUPPORTFILES)
 lib557_CPPFLAGS = $(AM_CPPFLAGS)
+lib558_SOURCES = lib558.c $(SUPPORTFILES)
+lib558_CPPFLAGS = $(AM_CPPFLAGS)
 lib560_SOURCES = lib560.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib560_LDADD = $(TESTUTIL_LIBS)
 lib560_CPPFLAGS = $(AM_CPPFLAGS)
 lib562_SOURCES = lib562.c $(SUPPORTFILES)
 lib562_CPPFLAGS = $(AM_CPPFLAGS)
 lib564_SOURCES = lib564.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
@@ -1152,31 +1220,48 @@
 lib1505_SOURCES = lib1502.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1505_LDADD = $(TESTUTIL_LIBS)
 lib1505_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1505
 lib1506_SOURCES = lib1506.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1506_LDADD = $(TESTUTIL_LIBS)
 lib1506_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1506
+lib1507_SOURCES = lib1507.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1507_LDADD = $(TESTUTIL_LIBS)
+lib1507_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1507
+lib1508_SOURCES = lib1508.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1508_LDADD = $(TESTUTIL_LIBS)
+lib1508_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1508
+lib1509_SOURCES = lib1509.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1509_LDADD = $(TESTUTIL_LIBS)
+lib1509_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1509
+lib1510_SOURCES = lib1510.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1510_LDADD = $(TESTUTIL_LIBS)
+lib1510_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1510
+lib1900_SOURCES = lib1900.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1900_CPPFLAGS = $(AM_CPPFLAGS)
+lib2033_SOURCES = libntlmconnect.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib2033_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_PIPELINING
 @BUILD_LIBHOSTNAME_FALSE@noinst_LTLIBRARIES = 
 
 # Makefile.inc provides the source defines (TESTUTIL, SUPPORTFILES,
 # noinst_PROGRAMS, lib*_SOURCES, and lib*_CFLAGS)
 
 # Preloading of libhostname allows host name overriding,
 # this is used to make some tests machine independent.
 @BUILD_LIBHOSTNAME_TRUE@noinst_LTLIBRARIES = libhostname.la
-
-# The -no-undefined flag is crucial to build fine on some platforms
-@NO_UNDEFINED_TRUE@UNDEF = -no-undefined
+AM_LDFLAGS = 
+AM_CFLAGS = 
+libhostname_la_CPPFLAGS_EXTRA = $(am__append_4)
+libhostname_la_LDFLAGS_EXTRA = -module -avoid-version -rpath /nowhere \
+	$(am__append_2) $(am__append_3)
+libhostname_la_CFLAGS_EXTRA = $(am__append_5)
+libhostname_la_CPPFLAGS = $(AM_CPPFLAGS) $(libhostname_la_CPPFLAGS_EXTRA)
+libhostname_la_LDFLAGS = $(AM_LDFLAGS) $(libhostname_la_LDFLAGS_EXTRA)
+libhostname_la_CFLAGS = $(AM_CFLAGS) $(libhostname_la_CFLAGS_EXTRA)
 libhostname_la_SOURCES = sethostname.c sethostname.h
 libhostname_la_LIBADD = 
 libhostname_la_DEPENDENCIES = 
-libhostname_la_LDFLAGS = -module -avoid-version $(UNDEF) -rpath /nowhere
-@DOING_CURL_SYMBOL_HIDING_FALSE@libhostname_la_CPPFLAGS = $(AM_CPPFLAGS)
-@DOING_CURL_SYMBOL_HIDING_TRUE@libhostname_la_CPPFLAGS = $(AM_CPPFLAGS) -DCURL_HIDDEN_SYMBOLS
-@DOING_CURL_SYMBOL_HIDING_FALSE@libhostname_la_CFLAGS = $(AM_CFLAGS)
-@DOING_CURL_SYMBOL_HIDING_TRUE@libhostname_la_CFLAGS = $(AM_CFLAGS) $(CFLAG_CURL_SYMBOL_HIDING)
 all: all-am
 
 .SUFFIXES:
 .SUFFIXES: .c .lo .o .obj
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
 	@for dep in $?; do \
@@ -1250,12 +1335,30 @@
 lib1505$(EXEEXT): $(lib1505_OBJECTS) $(lib1505_DEPENDENCIES) $(EXTRA_lib1505_DEPENDENCIES) 
 	@rm -f lib1505$(EXEEXT)
 	$(LINK) $(lib1505_OBJECTS) $(lib1505_LDADD) $(LIBS)
 lib1506$(EXEEXT): $(lib1506_OBJECTS) $(lib1506_DEPENDENCIES) $(EXTRA_lib1506_DEPENDENCIES) 
 	@rm -f lib1506$(EXEEXT)
 	$(LINK) $(lib1506_OBJECTS) $(lib1506_LDADD) $(LIBS)
+lib1507$(EXEEXT): $(lib1507_OBJECTS) $(lib1507_DEPENDENCIES) $(EXTRA_lib1507_DEPENDENCIES) 
+	@rm -f lib1507$(EXEEXT)
+	$(LINK) $(lib1507_OBJECTS) $(lib1507_LDADD) $(LIBS)
+lib1508$(EXEEXT): $(lib1508_OBJECTS) $(lib1508_DEPENDENCIES) $(EXTRA_lib1508_DEPENDENCIES) 
+	@rm -f lib1508$(EXEEXT)
+	$(LINK) $(lib1508_OBJECTS) $(lib1508_LDADD) $(LIBS)
+lib1509$(EXEEXT): $(lib1509_OBJECTS) $(lib1509_DEPENDENCIES) $(EXTRA_lib1509_DEPENDENCIES) 
+	@rm -f lib1509$(EXEEXT)
+	$(LINK) $(lib1509_OBJECTS) $(lib1509_LDADD) $(LIBS)
+lib1510$(EXEEXT): $(lib1510_OBJECTS) $(lib1510_DEPENDENCIES) $(EXTRA_lib1510_DEPENDENCIES) 
+	@rm -f lib1510$(EXEEXT)
+	$(LINK) $(lib1510_OBJECTS) $(lib1510_LDADD) $(LIBS)
+lib1900$(EXEEXT): $(lib1900_OBJECTS) $(lib1900_DEPENDENCIES) $(EXTRA_lib1900_DEPENDENCIES) 
+	@rm -f lib1900$(EXEEXT)
+	$(LINK) $(lib1900_OBJECTS) $(lib1900_LDADD) $(LIBS)
+lib2033$(EXEEXT): $(lib2033_OBJECTS) $(lib2033_DEPENDENCIES) $(EXTRA_lib2033_DEPENDENCIES) 
+	@rm -f lib2033$(EXEEXT)
+	$(LINK) $(lib2033_OBJECTS) $(lib2033_LDADD) $(LIBS)
 lib500$(EXEEXT): $(lib500_OBJECTS) $(lib500_DEPENDENCIES) $(EXTRA_lib500_DEPENDENCIES) 
 	@rm -f lib500$(EXEEXT)
 	$(LINK) $(lib500_OBJECTS) $(lib500_LDADD) $(LIBS)
 lib501$(EXEEXT): $(lib501_OBJECTS) $(lib501_DEPENDENCIES) $(EXTRA_lib501_DEPENDENCIES) 
 	@rm -f lib501$(EXEEXT)
 	$(LINK) $(lib501_OBJECTS) $(lib501_LDADD) $(LIBS)
@@ -1277,12 +1380,15 @@
 lib507$(EXEEXT): $(lib507_OBJECTS) $(lib507_DEPENDENCIES) $(EXTRA_lib507_DEPENDENCIES) 
 	@rm -f lib507$(EXEEXT)
 	$(LINK) $(lib507_OBJECTS) $(lib507_LDADD) $(LIBS)
 lib508$(EXEEXT): $(lib508_OBJECTS) $(lib508_DEPENDENCIES) $(EXTRA_lib508_DEPENDENCIES) 
 	@rm -f lib508$(EXEEXT)
 	$(LINK) $(lib508_OBJECTS) $(lib508_LDADD) $(LIBS)
+lib509$(EXEEXT): $(lib509_OBJECTS) $(lib509_DEPENDENCIES) $(EXTRA_lib509_DEPENDENCIES) 
+	@rm -f lib509$(EXEEXT)
+	$(LINK) $(lib509_OBJECTS) $(lib509_LDADD) $(LIBS)
 lib510$(EXEEXT): $(lib510_OBJECTS) $(lib510_DEPENDENCIES) $(EXTRA_lib510_DEPENDENCIES) 
 	@rm -f lib510$(EXEEXT)
 	$(LINK) $(lib510_OBJECTS) $(lib510_LDADD) $(LIBS)
 lib511$(EXEEXT): $(lib511_OBJECTS) $(lib511_DEPENDENCIES) $(EXTRA_lib511_DEPENDENCIES) 
 	@rm -f lib511$(EXEEXT)
 	$(LINK) $(lib511_OBJECTS) $(lib511_LDADD) $(LIBS)
@@ -1394,12 +1500,15 @@
 lib556$(EXEEXT): $(lib556_OBJECTS) $(lib556_DEPENDENCIES) $(EXTRA_lib556_DEPENDENCIES) 
 	@rm -f lib556$(EXEEXT)
 	$(LINK) $(lib556_OBJECTS) $(lib556_LDADD) $(LIBS)
 lib557$(EXEEXT): $(lib557_OBJECTS) $(lib557_DEPENDENCIES) $(EXTRA_lib557_DEPENDENCIES) 
 	@rm -f lib557$(EXEEXT)
 	$(LINK) $(lib557_OBJECTS) $(lib557_LDADD) $(LIBS)
+lib558$(EXEEXT): $(lib558_OBJECTS) $(lib558_DEPENDENCIES) $(EXTRA_lib558_DEPENDENCIES) 
+	@rm -f lib558$(EXEEXT)
+	$(LINK) $(lib558_OBJECTS) $(lib558_LDADD) $(LIBS)
 lib560$(EXEEXT): $(lib560_OBJECTS) $(lib560_DEPENDENCIES) $(EXTRA_lib560_DEPENDENCIES) 
 	@rm -f lib560$(EXEEXT)
 	$(LINK) $(lib560_OBJECTS) $(lib560_LDADD) $(LIBS)
 lib562$(EXEEXT): $(lib562_OBJECTS) $(lib562_DEPENDENCIES) $(EXTRA_lib562_DEPENDENCIES) 
 	@rm -f lib562$(EXEEXT)
 	$(LINK) $(lib562_OBJECTS) $(lib562_LDADD) $(LIBS)
@@ -1517,12 +1626,36 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1505-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1505-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1506-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1506-lib1506.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1506-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1506-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1507-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1507-lib1507.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1507-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1507-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1508-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1508-lib1508.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1508-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1508-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1509-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1509-lib1509.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1509-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1509-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1510-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1510-lib1510.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1510-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1510-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-lib1900.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-libntlmconnect.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib500-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib500-lib500.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib500-testtrace.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib500-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib501-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib501-lib501.Po@am__quote@
@@ -1545,12 +1678,14 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib507-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib507-lib507.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib507-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib507-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib508-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib508-lib508.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib509-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib509-lib509.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib510-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib510-lib510.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib511-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib511-lib511.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib512-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib512-lib512.Po@am__quote@
@@ -1646,12 +1781,14 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib555-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib555-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib556-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib556-lib556.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib557-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib557-lib557.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib558-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib558-lib558.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib560-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib560-lib560.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib560-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib560-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib562-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib562-lib562.Po@am__quote@
@@ -2160,12 +2297,348 @@
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1506_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1506-warnless.obj -MD -MP -MF $(DEPDIR)/lib1506-warnless.Tpo -c -o lib1506-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1506-warnless.Tpo $(DEPDIR)/lib1506-warnless.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1506-warnless.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1506_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1506-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
 
+lib1507-lib1507.o: lib1507.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-lib1507.o -MD -MP -MF $(DEPDIR)/lib1507-lib1507.Tpo -c -o lib1507-lib1507.o `test -f 'lib1507.c' || echo '$(srcdir)/'`lib1507.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-lib1507.Tpo $(DEPDIR)/lib1507-lib1507.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1507.c' object='lib1507-lib1507.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-lib1507.o `test -f 'lib1507.c' || echo '$(srcdir)/'`lib1507.c
+
+lib1507-lib1507.obj: lib1507.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-lib1507.obj -MD -MP -MF $(DEPDIR)/lib1507-lib1507.Tpo -c -o lib1507-lib1507.obj `if test -f 'lib1507.c'; then $(CYGPATH_W) 'lib1507.c'; else $(CYGPATH_W) '$(srcdir)/lib1507.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-lib1507.Tpo $(DEPDIR)/lib1507-lib1507.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1507.c' object='lib1507-lib1507.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-lib1507.obj `if test -f 'lib1507.c'; then $(CYGPATH_W) 'lib1507.c'; else $(CYGPATH_W) '$(srcdir)/lib1507.c'; fi`
+
+lib1507-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-first.o -MD -MP -MF $(DEPDIR)/lib1507-first.Tpo -c -o lib1507-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-first.Tpo $(DEPDIR)/lib1507-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1507-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1507-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-first.obj -MD -MP -MF $(DEPDIR)/lib1507-first.Tpo -c -o lib1507-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-first.Tpo $(DEPDIR)/lib1507-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1507-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1507-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-testutil.o -MD -MP -MF $(DEPDIR)/lib1507-testutil.Tpo -c -o lib1507-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-testutil.Tpo $(DEPDIR)/lib1507-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1507-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1507-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-testutil.obj -MD -MP -MF $(DEPDIR)/lib1507-testutil.Tpo -c -o lib1507-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-testutil.Tpo $(DEPDIR)/lib1507-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1507-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+lib1507-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-warnless.o -MD -MP -MF $(DEPDIR)/lib1507-warnless.Tpo -c -o lib1507-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-warnless.Tpo $(DEPDIR)/lib1507-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1507-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+lib1507-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1507-warnless.obj -MD -MP -MF $(DEPDIR)/lib1507-warnless.Tpo -c -o lib1507-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1507-warnless.Tpo $(DEPDIR)/lib1507-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1507-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1507_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1507-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib1508-lib1508.o: lib1508.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-lib1508.o -MD -MP -MF $(DEPDIR)/lib1508-lib1508.Tpo -c -o lib1508-lib1508.o `test -f 'lib1508.c' || echo '$(srcdir)/'`lib1508.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-lib1508.Tpo $(DEPDIR)/lib1508-lib1508.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1508.c' object='lib1508-lib1508.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-lib1508.o `test -f 'lib1508.c' || echo '$(srcdir)/'`lib1508.c
+
+lib1508-lib1508.obj: lib1508.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-lib1508.obj -MD -MP -MF $(DEPDIR)/lib1508-lib1508.Tpo -c -o lib1508-lib1508.obj `if test -f 'lib1508.c'; then $(CYGPATH_W) 'lib1508.c'; else $(CYGPATH_W) '$(srcdir)/lib1508.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-lib1508.Tpo $(DEPDIR)/lib1508-lib1508.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1508.c' object='lib1508-lib1508.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-lib1508.obj `if test -f 'lib1508.c'; then $(CYGPATH_W) 'lib1508.c'; else $(CYGPATH_W) '$(srcdir)/lib1508.c'; fi`
+
+lib1508-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-first.o -MD -MP -MF $(DEPDIR)/lib1508-first.Tpo -c -o lib1508-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-first.Tpo $(DEPDIR)/lib1508-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1508-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1508-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-first.obj -MD -MP -MF $(DEPDIR)/lib1508-first.Tpo -c -o lib1508-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-first.Tpo $(DEPDIR)/lib1508-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1508-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1508-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-testutil.o -MD -MP -MF $(DEPDIR)/lib1508-testutil.Tpo -c -o lib1508-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-testutil.Tpo $(DEPDIR)/lib1508-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1508-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1508-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-testutil.obj -MD -MP -MF $(DEPDIR)/lib1508-testutil.Tpo -c -o lib1508-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-testutil.Tpo $(DEPDIR)/lib1508-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1508-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+lib1508-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-warnless.o -MD -MP -MF $(DEPDIR)/lib1508-warnless.Tpo -c -o lib1508-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-warnless.Tpo $(DEPDIR)/lib1508-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1508-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+lib1508-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1508-warnless.obj -MD -MP -MF $(DEPDIR)/lib1508-warnless.Tpo -c -o lib1508-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1508-warnless.Tpo $(DEPDIR)/lib1508-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1508-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1508-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib1509-lib1509.o: lib1509.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-lib1509.o -MD -MP -MF $(DEPDIR)/lib1509-lib1509.Tpo -c -o lib1509-lib1509.o `test -f 'lib1509.c' || echo '$(srcdir)/'`lib1509.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-lib1509.Tpo $(DEPDIR)/lib1509-lib1509.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1509.c' object='lib1509-lib1509.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-lib1509.o `test -f 'lib1509.c' || echo '$(srcdir)/'`lib1509.c
+
+lib1509-lib1509.obj: lib1509.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-lib1509.obj -MD -MP -MF $(DEPDIR)/lib1509-lib1509.Tpo -c -o lib1509-lib1509.obj `if test -f 'lib1509.c'; then $(CYGPATH_W) 'lib1509.c'; else $(CYGPATH_W) '$(srcdir)/lib1509.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-lib1509.Tpo $(DEPDIR)/lib1509-lib1509.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1509.c' object='lib1509-lib1509.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-lib1509.obj `if test -f 'lib1509.c'; then $(CYGPATH_W) 'lib1509.c'; else $(CYGPATH_W) '$(srcdir)/lib1509.c'; fi`
+
+lib1509-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-first.o -MD -MP -MF $(DEPDIR)/lib1509-first.Tpo -c -o lib1509-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-first.Tpo $(DEPDIR)/lib1509-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1509-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1509-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-first.obj -MD -MP -MF $(DEPDIR)/lib1509-first.Tpo -c -o lib1509-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-first.Tpo $(DEPDIR)/lib1509-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1509-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1509-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-testutil.o -MD -MP -MF $(DEPDIR)/lib1509-testutil.Tpo -c -o lib1509-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-testutil.Tpo $(DEPDIR)/lib1509-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1509-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1509-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-testutil.obj -MD -MP -MF $(DEPDIR)/lib1509-testutil.Tpo -c -o lib1509-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-testutil.Tpo $(DEPDIR)/lib1509-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1509-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+lib1509-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-warnless.o -MD -MP -MF $(DEPDIR)/lib1509-warnless.Tpo -c -o lib1509-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-warnless.Tpo $(DEPDIR)/lib1509-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1509-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+lib1509-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1509-warnless.obj -MD -MP -MF $(DEPDIR)/lib1509-warnless.Tpo -c -o lib1509-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1509-warnless.Tpo $(DEPDIR)/lib1509-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1509-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1509-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib1510-lib1510.o: lib1510.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-lib1510.o -MD -MP -MF $(DEPDIR)/lib1510-lib1510.Tpo -c -o lib1510-lib1510.o `test -f 'lib1510.c' || echo '$(srcdir)/'`lib1510.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-lib1510.Tpo $(DEPDIR)/lib1510-lib1510.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1510.c' object='lib1510-lib1510.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-lib1510.o `test -f 'lib1510.c' || echo '$(srcdir)/'`lib1510.c
+
+lib1510-lib1510.obj: lib1510.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-lib1510.obj -MD -MP -MF $(DEPDIR)/lib1510-lib1510.Tpo -c -o lib1510-lib1510.obj `if test -f 'lib1510.c'; then $(CYGPATH_W) 'lib1510.c'; else $(CYGPATH_W) '$(srcdir)/lib1510.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-lib1510.Tpo $(DEPDIR)/lib1510-lib1510.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1510.c' object='lib1510-lib1510.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-lib1510.obj `if test -f 'lib1510.c'; then $(CYGPATH_W) 'lib1510.c'; else $(CYGPATH_W) '$(srcdir)/lib1510.c'; fi`
+
+lib1510-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-first.o -MD -MP -MF $(DEPDIR)/lib1510-first.Tpo -c -o lib1510-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-first.Tpo $(DEPDIR)/lib1510-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1510-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1510-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-first.obj -MD -MP -MF $(DEPDIR)/lib1510-first.Tpo -c -o lib1510-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-first.Tpo $(DEPDIR)/lib1510-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1510-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1510-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-testutil.o -MD -MP -MF $(DEPDIR)/lib1510-testutil.Tpo -c -o lib1510-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-testutil.Tpo $(DEPDIR)/lib1510-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1510-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1510-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-testutil.obj -MD -MP -MF $(DEPDIR)/lib1510-testutil.Tpo -c -o lib1510-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-testutil.Tpo $(DEPDIR)/lib1510-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1510-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+lib1510-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-warnless.o -MD -MP -MF $(DEPDIR)/lib1510-warnless.Tpo -c -o lib1510-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-warnless.Tpo $(DEPDIR)/lib1510-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1510-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+lib1510-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1510-warnless.obj -MD -MP -MF $(DEPDIR)/lib1510-warnless.Tpo -c -o lib1510-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1510-warnless.Tpo $(DEPDIR)/lib1510-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1510-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1510-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib1900-lib1900.o: lib1900.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-lib1900.o -MD -MP -MF $(DEPDIR)/lib1900-lib1900.Tpo -c -o lib1900-lib1900.o `test -f 'lib1900.c' || echo '$(srcdir)/'`lib1900.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-lib1900.Tpo $(DEPDIR)/lib1900-lib1900.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1900.c' object='lib1900-lib1900.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-lib1900.o `test -f 'lib1900.c' || echo '$(srcdir)/'`lib1900.c
+
+lib1900-lib1900.obj: lib1900.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-lib1900.obj -MD -MP -MF $(DEPDIR)/lib1900-lib1900.Tpo -c -o lib1900-lib1900.obj `if test -f 'lib1900.c'; then $(CYGPATH_W) 'lib1900.c'; else $(CYGPATH_W) '$(srcdir)/lib1900.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-lib1900.Tpo $(DEPDIR)/lib1900-lib1900.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib1900.c' object='lib1900-lib1900.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-lib1900.obj `if test -f 'lib1900.c'; then $(CYGPATH_W) 'lib1900.c'; else $(CYGPATH_W) '$(srcdir)/lib1900.c'; fi`
+
+lib1900-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-first.o -MD -MP -MF $(DEPDIR)/lib1900-first.Tpo -c -o lib1900-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-first.Tpo $(DEPDIR)/lib1900-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1900-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1900-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-first.obj -MD -MP -MF $(DEPDIR)/lib1900-first.Tpo -c -o lib1900-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-first.Tpo $(DEPDIR)/lib1900-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib1900-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1900-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-testutil.o -MD -MP -MF $(DEPDIR)/lib1900-testutil.Tpo -c -o lib1900-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-testutil.Tpo $(DEPDIR)/lib1900-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1900-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1900-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-testutil.obj -MD -MP -MF $(DEPDIR)/lib1900-testutil.Tpo -c -o lib1900-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-testutil.Tpo $(DEPDIR)/lib1900-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib1900-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+lib1900-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-warnless.o -MD -MP -MF $(DEPDIR)/lib1900-warnless.Tpo -c -o lib1900-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-warnless.Tpo $(DEPDIR)/lib1900-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1900-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+lib1900-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-warnless.obj -MD -MP -MF $(DEPDIR)/lib1900-warnless.Tpo -c -o lib1900-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib1900-warnless.Tpo $(DEPDIR)/lib1900-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib1900-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib2033-libntlmconnect.o: libntlmconnect.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-libntlmconnect.o -MD -MP -MF $(DEPDIR)/lib2033-libntlmconnect.Tpo -c -o lib2033-libntlmconnect.o `test -f 'libntlmconnect.c' || echo '$(srcdir)/'`libntlmconnect.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-libntlmconnect.Tpo $(DEPDIR)/lib2033-libntlmconnect.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libntlmconnect.c' object='lib2033-libntlmconnect.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-libntlmconnect.o `test -f 'libntlmconnect.c' || echo '$(srcdir)/'`libntlmconnect.c
+
+lib2033-libntlmconnect.obj: libntlmconnect.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-libntlmconnect.obj -MD -MP -MF $(DEPDIR)/lib2033-libntlmconnect.Tpo -c -o lib2033-libntlmconnect.obj `if test -f 'libntlmconnect.c'; then $(CYGPATH_W) 'libntlmconnect.c'; else $(CYGPATH_W) '$(srcdir)/libntlmconnect.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-libntlmconnect.Tpo $(DEPDIR)/lib2033-libntlmconnect.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libntlmconnect.c' object='lib2033-libntlmconnect.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-libntlmconnect.obj `if test -f 'libntlmconnect.c'; then $(CYGPATH_W) 'libntlmconnect.c'; else $(CYGPATH_W) '$(srcdir)/libntlmconnect.c'; fi`
+
+lib2033-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-first.o -MD -MP -MF $(DEPDIR)/lib2033-first.Tpo -c -o lib2033-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-first.Tpo $(DEPDIR)/lib2033-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib2033-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib2033-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-first.obj -MD -MP -MF $(DEPDIR)/lib2033-first.Tpo -c -o lib2033-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-first.Tpo $(DEPDIR)/lib2033-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib2033-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib2033-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-testutil.o -MD -MP -MF $(DEPDIR)/lib2033-testutil.Tpo -c -o lib2033-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-testutil.Tpo $(DEPDIR)/lib2033-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib2033-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib2033-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-testutil.obj -MD -MP -MF $(DEPDIR)/lib2033-testutil.Tpo -c -o lib2033-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-testutil.Tpo $(DEPDIR)/lib2033-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='testutil.c' object='lib2033-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+lib2033-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-warnless.o -MD -MP -MF $(DEPDIR)/lib2033-warnless.Tpo -c -o lib2033-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-warnless.Tpo $(DEPDIR)/lib2033-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib2033-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+lib2033-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib2033-warnless.obj -MD -MP -MF $(DEPDIR)/lib2033-warnless.Tpo -c -o lib2033-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib2033-warnless.Tpo $(DEPDIR)/lib2033-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../../lib/warnless.c' object='lib2033-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib2033_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib2033-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
 lib500-lib500.o: lib500.c
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib500_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib500-lib500.o -MD -MP -MF $(DEPDIR)/lib500-lib500.Tpo -c -o lib500-lib500.o `test -f 'lib500.c' || echo '$(srcdir)/'`lib500.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib500-lib500.Tpo $(DEPDIR)/lib500-lib500.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib500.c' object='lib500-lib500.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib500_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib500-lib500.o `test -f 'lib500.c' || echo '$(srcdir)/'`lib500.c
@@ -2552,12 +3025,40 @@
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib508-first.obj -MD -MP -MF $(DEPDIR)/lib508-first.Tpo -c -o lib508-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib508-first.Tpo $(DEPDIR)/lib508-first.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib508-first.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib508_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib508-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
 
+lib509-lib509.o: lib509.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib509-lib509.o -MD -MP -MF $(DEPDIR)/lib509-lib509.Tpo -c -o lib509-lib509.o `test -f 'lib509.c' || echo '$(srcdir)/'`lib509.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib509-lib509.Tpo $(DEPDIR)/lib509-lib509.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib509.c' object='lib509-lib509.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib509-lib509.o `test -f 'lib509.c' || echo '$(srcdir)/'`lib509.c
+
+lib509-lib509.obj: lib509.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib509-lib509.obj -MD -MP -MF $(DEPDIR)/lib509-lib509.Tpo -c -o lib509-lib509.obj `if test -f 'lib509.c'; then $(CYGPATH_W) 'lib509.c'; else $(CYGPATH_W) '$(srcdir)/lib509.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib509-lib509.Tpo $(DEPDIR)/lib509-lib509.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib509.c' object='lib509-lib509.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib509-lib509.obj `if test -f 'lib509.c'; then $(CYGPATH_W) 'lib509.c'; else $(CYGPATH_W) '$(srcdir)/lib509.c'; fi`
+
+lib509-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib509-first.o -MD -MP -MF $(DEPDIR)/lib509-first.Tpo -c -o lib509-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib509-first.Tpo $(DEPDIR)/lib509-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib509-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib509-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib509-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib509-first.obj -MD -MP -MF $(DEPDIR)/lib509-first.Tpo -c -o lib509-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib509-first.Tpo $(DEPDIR)/lib509-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib509-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib509_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib509-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
 lib510-lib510.o: lib510.c
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib510-lib510.o -MD -MP -MF $(DEPDIR)/lib510-lib510.Tpo -c -o lib510-lib510.o `test -f 'lib510.c' || echo '$(srcdir)/'`lib510.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib510-lib510.Tpo $(DEPDIR)/lib510-lib510.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib510.c' object='lib510-lib510.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib510_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib510-lib510.o `test -f 'lib510.c' || echo '$(srcdir)/'`lib510.c
@@ -3966,12 +4467,40 @@
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib557_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib557-first.obj -MD -MP -MF $(DEPDIR)/lib557-first.Tpo -c -o lib557-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib557-first.Tpo $(DEPDIR)/lib557-first.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib557-first.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib557_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib557-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
 
+lib558-lib558.o: lib558.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib558-lib558.o -MD -MP -MF $(DEPDIR)/lib558-lib558.Tpo -c -o lib558-lib558.o `test -f 'lib558.c' || echo '$(srcdir)/'`lib558.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib558-lib558.Tpo $(DEPDIR)/lib558-lib558.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib558.c' object='lib558-lib558.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib558-lib558.o `test -f 'lib558.c' || echo '$(srcdir)/'`lib558.c
+
+lib558-lib558.obj: lib558.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib558-lib558.obj -MD -MP -MF $(DEPDIR)/lib558-lib558.Tpo -c -o lib558-lib558.obj `if test -f 'lib558.c'; then $(CYGPATH_W) 'lib558.c'; else $(CYGPATH_W) '$(srcdir)/lib558.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib558-lib558.Tpo $(DEPDIR)/lib558-lib558.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib558.c' object='lib558-lib558.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib558-lib558.obj `if test -f 'lib558.c'; then $(CYGPATH_W) 'lib558.c'; else $(CYGPATH_W) '$(srcdir)/lib558.c'; fi`
+
+lib558-first.o: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib558-first.o -MD -MP -MF $(DEPDIR)/lib558-first.Tpo -c -o lib558-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib558-first.Tpo $(DEPDIR)/lib558-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib558-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib558-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib558-first.obj: first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib558-first.obj -MD -MP -MF $(DEPDIR)/lib558-first.Tpo -c -o lib558-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib558-first.Tpo $(DEPDIR)/lib558-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='first.c' object='lib558-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib558_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib558-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
 lib560-lib560.o: lib560.c
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib560_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib560-lib560.o -MD -MP -MF $(DEPDIR)/lib560-lib560.Tpo -c -o lib560-lib560.o `test -f 'lib560.c' || echo '$(srcdir)/'`lib560.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lib560-lib560.Tpo $(DEPDIR)/lib560-lib560.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lib560.c' object='lib560-lib560.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib560_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib560-lib560.o `test -f 'lib560.c' || echo '$(srcdir)/'`lib560.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/Makefile.inc	2013-02-06 17:47:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/Makefile.inc	2013-04-12 02:46:54.000000000 +0800
@@ -8,25 +8,25 @@
 WARNLESS = ../../lib/warnless.c ../../lib/warnless.h
 
 # these files are used in every single test program below
 SUPPORTFILES = first.c test.h
 
 # These are all libcurl test programs
-noinst_PROGRAMS = chkhostname libauthretry libntlmconnect \
-  lib500 lib501 lib502 lib503 lib504 lib505 lib506 lib507 lib508        \
-  lib510 lib511 lib512 lib513 lib514 lib515 lib516 lib517 lib518 lib519 \
-  lib520 lib521        lib523 lib524 lib525 lib526 lib527        lib529 \
-  lib530        lib532 lib533               lib536 lib537        lib539 \
-  lib540 lib541 lib542 lib543 lib544 lib545        lib547 lib548 lib549 \
-                lib552 lib553 lib554 lib555 lib556 lib557               \
-  lib560        lib562        lib564 lib565 lib566 lib567 lib568 lib569 \
-  lib570 lib571 lib572 lib573 lib574 lib575 lib576        lib578 lib579 \
-                lib582 lib583        lib585 lib586 lib587               \
-  lib590 lib591                                    lib597 lib598 lib599 \
-  \
-  lib1500 lib1501 lib1502 lib1503 lib1504 lib1505 lib1506
+noinst_PROGRAMS = chkhostname libauthretry libntlmconnect                \
+ lib500 lib501 lib502 lib503 lib504 lib505 lib506 lib507 lib508 lib509   \
+ lib510 lib511 lib512 lib513 lib514 lib515 lib516 lib517 lib518 lib519   \
+ lib520 lib521 lib523 lib524 lib525 lib526 lib527 lib529 lib530 lib532   \
+ lib533 lib536 lib537 lib539 lib540 lib541 lib542 lib543 lib544 lib545   \
+ lib547 lib548 lib549 lib552 lib553 lib554 lib555 lib556 lib557 lib558   \
+        lib560 lib562 lib564 lib565 lib566 lib567 lib568 lib569 lib570   \
+ lib571 lib572 lib573 lib574 lib575 lib576        lib578 lib579 lib582   \
+ lib583 lib585 lib586 lib587        lib590 lib591 lib597 lib598 lib599   \
+ lib1500 lib1501 lib1502 lib1503 lib1504 lib1505 lib1506 lib1507 lib1508 \
+ lib1509 lib1510 \
+ lib1900 \
+ lib2033
 
 chkhostname_SOURCES = chkhostname.c ../../lib/curl_gethostname.c
 chkhostname_LDADD = @CURL_NETWORK_LIBS@
 chkhostname_DEPENDENCIES =
 chkhostname_CPPFLAGS = $(AM_CPPFLAGS)
 
@@ -66,12 +66,15 @@
 lib507_LDADD = $(TESTUTIL_LIBS)
 lib507_CPPFLAGS = $(AM_CPPFLAGS)
 
 lib508_SOURCES = lib508.c $(SUPPORTFILES)
 lib508_CPPFLAGS = $(AM_CPPFLAGS)
 
+lib509_SOURCES = lib509.c $(SUPPORTFILES)
+lib509_CPPFLAGS = $(AM_CPPFLAGS)
+
 lib510_SOURCES = lib510.c $(SUPPORTFILES)
 lib510_CPPFLAGS = $(AM_CPPFLAGS)
 
 lib511_SOURCES = lib511.c $(SUPPORTFILES)
 lib511_CPPFLAGS = $(AM_CPPFLAGS)
 
@@ -193,12 +196,15 @@
 lib556_SOURCES = lib556.c $(SUPPORTFILES)
 lib556_CPPFLAGS = $(AM_CPPFLAGS)
 
 lib557_SOURCES = lib557.c $(SUPPORTFILES)
 lib557_CPPFLAGS = $(AM_CPPFLAGS)
 
+lib558_SOURCES = lib558.c $(SUPPORTFILES)
+lib558_CPPFLAGS = $(AM_CPPFLAGS)
+
 lib560_SOURCES = lib560.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib560_LDADD = $(TESTUTIL_LIBS)
 lib560_CPPFLAGS = $(AM_CPPFLAGS)
 
 lib562_SOURCES = lib562.c $(SUPPORTFILES)
 lib562_CPPFLAGS = $(AM_CPPFLAGS)
@@ -309,6 +315,28 @@
 lib1505_LDADD = $(TESTUTIL_LIBS)
 lib1505_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1505
 
 lib1506_SOURCES = lib1506.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1506_LDADD = $(TESTUTIL_LIBS)
 lib1506_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1506
+
+lib1507_SOURCES = lib1507.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1507_LDADD = $(TESTUTIL_LIBS)
+lib1507_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1507
+
+lib1508_SOURCES = lib1508.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1508_LDADD = $(TESTUTIL_LIBS)
+lib1508_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1508
+
+lib1509_SOURCES = lib1509.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1509_LDADD = $(TESTUTIL_LIBS)
+lib1509_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1509
+
+lib1510_SOURCES = lib1510.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1510_LDADD = $(TESTUTIL_LIBS)
+lib1510_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1510
+
+lib1900_SOURCES = lib1900.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1900_CPPFLAGS = $(AM_CPPFLAGS)
+
+lib2033_SOURCES = libntlmconnect.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib2033_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_PIPELINING
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/sethostname.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/sethostname.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/libtest/sethostname.h	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/libtest/sethostname.h	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -17,24 +17,24 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
-#if (defined(WIN32) || defined(__SYMBIAN32__)) && !defined(CURL_STATICLIB)
+#ifdef CURL_STATICLIB
+#  define LIBHOSTNAME_EXTERN
+#elif defined(WIN32) || defined(__SYMBIAN32__)
 #  if defined(BUILDING_LIBCURL)
 #    define LIBHOSTNAME_EXTERN  __declspec(dllexport)
 #  else
 #    define LIBHOSTNAME_EXTERN  __declspec(dllimport)
 #  endif
+#elif defined(BUILDING_LIBCURL) && defined(CURL_HIDDEN_SYMBOLS)
+#  define LIBHOSTNAME_EXTERN CURL_EXTERN_SYMBOL
 #else
-#  ifdef CURL_HIDDEN_SYMBOLS
-#    define LIBHOSTNAME_EXTERN CURL_EXTERN_SYMBOL
-#  else
-#    define LIBHOSTNAME_EXTERN
-#  endif
+#  define LIBHOSTNAME_EXTERN
 #endif
 
 #ifdef USE_WINSOCK
 #  define FUNCALLCONV __stdcall
 #else
 #  define FUNCALLCONV
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/Makefile.in	2013-02-06 17:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/Makefile.in	2013-04-12 02:47:04.000000000 +0800
@@ -81,12 +81,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -175,12 +176,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -266,13 +268,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/memanalyze.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/memanalyze.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/memanalyze.pl	2013-01-22 22:19:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/memanalyze.pl	2013-04-12 02:46:54.000000000 +0800
@@ -28,12 +28,13 @@
 # MEM sendf.c:232 free(f6520)
 
 my $mallocs=0;
 my $callocs=0;
 my $reallocs=0;
 my $strdups=0;
+my $wcsdups=0;
 my $showlimit;
 
 while(1) {
     if($ARGV[0] eq "-v") {
         $verbose=1;
         shift @ARGV;
@@ -217,12 +218,31 @@
                        $getmem{$addr}, $totalmem);
             }
 
             newtotal($totalmem);
             $strdups++;
         }
+        elsif($function =~ /wcsdup\(0x([0-9a-f]*)\) \((\d*)\) = 0x([0-9a-f]*)/) {
+            # wcsdup(a5b50) (8) = df7c0
+
+            $dup = $1;
+            $size = $2;
+            $addr = $3;
+            $getmem{$addr}="$source:$linenum";
+            $sizeataddr{$addr}=$size;
+
+            $totalmem += $size;
+
+            if($trace) {
+                printf("WCSDUP: $size bytes at %s, makes totally: %d bytes\n",
+                       $getmem{$addr}, $totalmem);
+            }
+
+            newtotal($totalmem);
+            $wcsdups++;
+        }
         else {
             print "Not recognized input line: $function\n";
         }
     }
     # FD url.c:1282 socket() = 5
     elsif($_ =~ /^FD ([^ ]*):(\d*) (.*)/) {
@@ -375,11 +395,12 @@
 
 if($verbose) {
     print "Mallocs: $mallocs\n",
     "Reallocs: $reallocs\n",
     "Callocs: $callocs\n",
     "Strdups:  $strdups\n",
+    "Wcsdups:  $wcsdups\n",
     "Frees: $frees\n",
-    "Allocations: ".($mallocs + $callocs + $reallocs + $strdups)."\n";
+    "Allocations: ".($mallocs + $callocs + $reallocs + $strdups + $wcsdups)."\n";
 
     print "Maximum allocated: $maxmem\n";
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/README	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/README	2013-04-12 02:46:54.000000000 +0800
@@ -36,12 +36,13 @@
 
 1. Running
 
  1.1 Requires to run
 
   perl (and a unix-style shell)
+  python (and a unix-style shell)
   diff (when a test fails, a diff is shown)
   stunnel (for HTTPS and FTPS tests)
   OpenSSH or SunSSH (for SCP, SFTP and SOCKS4/5 tests)
 
  1.2 Port numbers used by test servers
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/runtests.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/runtests.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/runtests.pl	2013-02-01 15:15:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/runtests.pl	2013-04-12 02:46:54.000000000 +0800
@@ -137,12 +137,13 @@
 my $RTSP6PORT;           # RTSP IPv6 server port
 my $GOPHERPORT;          # Gopher
 my $GOPHER6PORT;         # Gopher IPv6 server port
 my $HTTPTLSPORT;         # HTTP TLS (non-stunnel) server port
 my $HTTPTLS6PORT;        # HTTP TLS (non-stunnel) IPv6 server port
 my $HTTPPROXYPORT;       # HTTP proxy port, when using CONNECT
+my $HTTPPIPEPORT;        # HTTP pipelining port
 
 my $srcdir = $ENV{'srcdir'} || '.';
 my $CURL="../src/curl".exe_ext(); # what curl executable to run on the tests
 my $VCURL=$CURL;   # what curl binary to use to verify the servers with
                    # VCURL is handy to set to the system one when the one you
                    # just built hangs or crashes and thus prevent verification
@@ -172,14 +173,14 @@
 #
 
 # invoke perl like this:
 my $perl="perl -I$srcdir";
 my $server_response_maxtime=13;
 
-my $debug_build=0; # curl built with --enable-debug
-my $curl_debug=0;  # curl built with --enable-curldebug (memory tracking)
+my $debug_build=0;          # built debug enabled (--enable-debug)
+my $has_memory_tracking=0;  # built with memory tracking (--enable-curldebug)
 my $libtool;
 
 # name of the file that the memory debugging creates:
 my $memdump="$LOGDIR/memdump";
 
 # the path to the script that analyzes the memory debug output file:
@@ -210,19 +211,20 @@
 my $has_ntlm;    # set if libcurl is built with NTLM support
 my $has_ntlm_wb; # set if libcurl is built with NTLM delegation to winbind
 my $has_charconv;# set if libcurl is built with CharConv support
 my $has_tls_srp; # set if libcurl is built with TLS-SRP support
 my $has_metalink;# set if curl is built with Metalink support
 
-my $has_openssl; # built with a lib using an OpenSSL-like API
-my $has_gnutls;  # built with GnuTLS
-my $has_nss;     # built with NSS
-my $has_yassl;   # built with yassl
-my $has_polarssl;# built with polarssl
-my $has_axtls;   # built with axTLS
-my $has_winssl;  # built with WinSSL (Schannel/SSPI)
+my $has_openssl;  # built with a lib using an OpenSSL-like API
+my $has_gnutls;   # built with GnuTLS
+my $has_nss;      # built with NSS
+my $has_yassl;    # built with yassl
+my $has_polarssl; # built with polarssl
+my $has_axtls;    # built with axTLS
+my $has_winssl;   # built with WinSSL (Schannel/SSPI)
+my $has_darwinssl;# build with DarwinSSL (Secure Transport)
 
 my $has_shared = "unknown";  # built shared
 
 my $ssllib;      # name of the lib we use (for human presentation)
 my $has_crypto;  # set if libcurl is built with cryptographic support
 my $has_textaware; # set if running on a system that has a text mode concept
@@ -335,16 +337,16 @@
 delete $ENV{'CURL_CA_BUNDLE'} if($ENV{'CURL_CA_BUNDLE'});
 
 #######################################################################
 # Load serverpidfile hash with pidfile names for all possible servers.
 #
 sub init_serverpidfile_hash {
-  for my $proto (('ftp', 'http', 'imap', 'pop3', 'smtp')) {
+  for my $proto (('ftp', 'http', 'imap', 'pop3', 'smtp', 'http')) {
     for my $ssl (('', 's')) {
       for my $ipvnum ((4, 6)) {
-        for my $idnum ((1, 2)) {
+        for my $idnum ((1, 2, 3)) {
           my $serv = servername_id("$proto$ssl", $ipvnum, $idnum);
           my $pidf = server_pidfilename("$proto$ssl", $ipvnum, $idnum);
           $serverpidfile{$serv} = $pidf;
         }
       }
     }
@@ -422,13 +424,13 @@
 
     my $count = $timeout;
     while($count--) {
         if(-f $pidfile && -s $pidfile && open(PID, "<$pidfile")) {
             $pid2 = 0 + <PID>;
             close(PID);
-            if(($pid2 > 0) && kill(0, $pid2)) {
+            if(($pid2 > 0) && pidexists($pid2)) {
                 # if $pid2 is valid, then make sure this pid is alive, as
                 # otherwise it is just likely to be the _previous_ pidfile or
                 # similar!
                 last;
             }
             # invalidate $pid2 if not actually alive
@@ -638,17 +640,17 @@
         killsockfilters($proto, $ipvnum, $idnum, $verbose);
     }
     #
     # All servers relative to the given one must be stopped also
     #
     my @killservers;
-    if($server =~ /^(ftp|http|imap|pop3|smtp)s((\d*)(-ipv6|))$/) {
+    if($server =~ /^(ftp|http|imap|pop3|smtp|httppipe)s((\d*)(-ipv6|))$/) {
         # given a stunnel based ssl server, also kill non-ssl underlying one
         push @killservers, "${1}${2}";
     }
-    elsif($server =~ /^(ftp|http|imap|pop3|smtp)((\d*)(-ipv6|))$/) {
+    elsif($server =~ /^(ftp|http|imap|pop3|smtp|httppipe)((\d*)(-ipv6|))$/) {
         # given a non-ssl server, also kill stunnel based ssl piggybacking one
         push @killservers, "${1}s${2}";
     }
     elsif($server =~ /^(socks)((\d*)(-ipv6|))$/) {
         # given a socks server, also kill ssh underlying one
         push @killservers, "ssh${2}";
@@ -923,13 +925,13 @@
         $pid=0+<FILE>;
         close(FILE);
     }
     if($pid > 0) {
         # if we have a pid it is actually our ssh server,
         # since runsshserver() unlinks previous pidfile
-        if(!kill(0, $pid)) {
+        if(!pidexists($pid)) {
             logmsg "RUN: SSH server has died after starting up\n";
             checkdied($pid);
             unlink($pidfile);
             $pid = -1;
         }
     }
@@ -1036,13 +1038,13 @@
     if($data && ($data =~ /GNUTLS/) && open(FILE, "<$pidfile")) {
         $pid=0+<FILE>;
         close(FILE);
         if($pid > 0) {
             # if we have a pid it is actually our httptls server,
             # since runhttptlsserver() unlinks previous pidfile
-            if(!kill(0, $pid)) {
+            if(!pidexists($pid)) {
                 logmsg "RUN: $server server has died after starting up\n";
                 checkdied($pid);
                 unlink($pidfile);
                 $pid = -1;
             }
         }
@@ -1072,13 +1074,13 @@
         $pid=0+<FILE>;
         close(FILE);
     }
     if($pid > 0) {
         # if we have a pid it is actually our socks server,
         # since runsocksserver() unlinks previous pidfile
-        if(!kill(0, $pid)) {
+        if(!pidexists($pid)) {
             logmsg "RUN: SOCKS server has died after starting up\n";
             checkdied($pid);
             unlink($pidfile);
             $pid = -1;
         }
     }
@@ -1101,12 +1103,13 @@
                  'https' => \&verifyhttp,
                  'rtsp' => \&verifyrtsp,
                  'ftp' => \&verifyftp,
                  'pop3' => \&verifyftp,
                  'imap' => \&verifyftp,
                  'smtp' => \&verifyftp,
+                 'httppipe' => \&verifyhttp,
                  'ftps' => \&verifyftp,
                  'tftp' => \&verifyftp,
                  'ssh' => \&verifyssh,
                  'socks' => \&verifysocks,
                  'gopher' => \&verifyhttp,
                  'httptls' => \&verifyhttptls);
@@ -1166,22 +1169,30 @@
     my $idnum = 1;
     my $server;
     my $srvrname;
     my $pidfile;
     my $logfile;
     my $flags = "";
+    my $exe = "$perl $srcdir/httpserver.pl";
+    my $verbose_flag = "--verbose ";
 
     if($alt eq "ipv6") {
         # if IPv6, use a different setup
         $ipvnum = 6;
         $ip = $HOST6IP;
     }
     elsif($alt eq "proxy") {
         # basically the same, but another ID
         $idnum = 2;
     }
+    elsif($alt eq "pipe") {
+        # basically the same, but another ID
+        $idnum = 3;
+        $exe = "python $srcdir/http_pipe.py";
+        $verbose_flag .= "1 ";
+    }
 
     $server = servername_id($proto, $ipvnum, $idnum);
 
     $pidfile = $serverpidfile{$server};
 
     # don't retry if the server doesn't work
@@ -1198,21 +1209,96 @@
     $srvrname = servername_str($proto, $ipvnum, $idnum);
 
     $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
 
     $flags .= "--gopher " if($proto eq "gopher");
     $flags .= "--connect $HOSTIP " if($alt eq "proxy");
-    $flags .= "--verbose " if($debugprotocol);
+    $flags .= $verbose_flag if($debugprotocol);
     $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
     $flags .= "--id $idnum " if($idnum > 1);
     $flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
 
-    my $cmd = "$perl $srcdir/httpserver.pl $flags";
+    my $cmd = "$exe $flags";
     my ($httppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
-    if($httppid <= 0 || !kill(0, $httppid)) {
+    if($httppid <= 0 || !pidexists($httppid)) {
+        # it is NOT alive
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
+        displaylogs($testnumcheck);
+        $doesntrun{$pidfile} = 1;
+        return (0,0);
+    }
+
+    # Server is up. Verify that we can speak to it.
+    my $pid3 = verifyserver($proto, $ipvnum, $idnum, $ip, $port);
+    if(!$pid3) {
+        logmsg "RUN: $srvrname server failed verification\n";
+        # failed to talk to it properly. Kill the server and return failure
+        stopserver($server, "$httppid $pid2");
+        displaylogs($testnumcheck);
+        $doesntrun{$pidfile} = 1;
+        return (0,0);
+    }
+    $pid2 = $pid3;
+
+    if($verbose) {
+        logmsg "RUN: $srvrname server is now running PID $httppid\n";
+    }
+
+    sleep(1);
+
+    return ($httppid, $pid2);
+}
+
+#######################################################################
+# start the http server
+#
+sub runhttp_pipeserver {
+    my ($proto, $verbose, $alt, $port) = @_;
+    my $ip = $HOSTIP;
+    my $ipvnum = 4;
+    my $idnum = 1;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
+
+    if($alt eq "ipv6") {
+        # No IPv6
+    }
+
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
+
+    # don't retry if the server doesn't work
+    if ($doesntrun{$pidfile}) {
+        return (0,0);
+    }
+
+    my $pid = processexists($pidfile);
+    if($pid > 0) {
+        stopserver($server, "$pid");
+    }
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
+
+    $flags .= "--verbose 1 " if($debugprotocol);
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--id $idnum " if($idnum > 1);
+    $flags .= "--port $port --srcdir \"$srcdir\"";
+
+    my $cmd = "$srcdir/http_pipe.py $flags";
+    my ($httppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
+
+    if($httppid <= 0 || !pidexists($httppid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
@@ -1287,13 +1373,13 @@
     $flags .= "--stunnel \"$stunnel\" --srcdir \"$srcdir\" ";
     $flags .= "--connect $HTTPPORT --accept $HTTPSPORT";
 
     my $cmd = "$perl $srcdir/secureserver.pl $flags";
     my ($httpspid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
-    if($httpspid <= 0 || !kill(0, $httpspid)) {
+    if($httpspid <= 0 || !pidexists($httpspid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return(0,0);
@@ -1367,13 +1453,13 @@
     $flags .= "--srppasswd $srcdir/certs/srp-verifier-db ";
     $flags .= "--srppasswdconf $srcdir/certs/srp-verifier-conf";
 
     my $cmd = "$httptlssrv $flags > $logfile 2>&1";
     my ($httptlspid, $pid2) = startnew($cmd, $pidfile, 10, 1); # fake pidfile
 
-    if($httptlspid <= 0 || !kill(0, $httptlspid)) {
+    if($httptlspid <= 0 || !pidexists($httptlspid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
@@ -1462,13 +1548,13 @@
     $flags .= "--id $idnum " if($idnum > 1);
     $flags .= "--ipv$ipvnum --port $port --addr \"$ip\"";
 
     my $cmd = "$perl $srcdir/ftpserver.pl $flags";
     my ($ftppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
-    if($ftppid <= 0 || !kill(0, $ftppid)) {
+    if($ftppid <= 0 || !pidexists($ftppid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
@@ -1544,13 +1630,13 @@
     $flags .= "--stunnel \"$stunnel\" --srcdir \"$srcdir\" ";
     $flags .= "--connect $FTPPORT --accept $FTPSPORT";
 
     my $cmd = "$perl $srcdir/secureserver.pl $flags";
     my ($ftpspid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
-    if($ftpspid <= 0 || !kill(0, $ftpspid)) {
+    if($ftpspid <= 0 || !pidexists($ftpspid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return(0,0);
@@ -1626,13 +1712,13 @@
     $flags .= "--id $idnum " if($idnum > 1);
     $flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
 
     my $cmd = "$perl $srcdir/tftpserver.pl $flags";
     my ($tftppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
-    if($tftppid <= 0 || !kill(0, $tftppid)) {
+    if($tftppid <= 0 || !pidexists($tftppid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
@@ -1707,13 +1793,13 @@
     $flags .= "--id $idnum " if($idnum > 1);
     $flags .= "--ipv$ipvnum --port $port --srcdir \"$srcdir\"";
 
     my $cmd = "$perl $srcdir/rtspserver.pl $flags";
     my ($rtsppid, $pid2) = startnew($cmd, $pidfile, 15, 0);
 
-    if($rtsppid <= 0 || !kill(0, $rtsppid)) {
+    if($rtsppid <= 0 || !pidexists($rtsppid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         displaylogs($testnumcheck);
         $doesntrun{$pidfile} = 1;
         return (0,0);
@@ -1789,13 +1875,13 @@
     my ($sshpid, $pid2) = startnew($cmd, $pidfile, 60, 0);
 
     # on loaded systems sshserver start up can take longer than the timeout
     # passed to startnew, when this happens startnew completes without being
     # able to read the pidfile and consequently returns a zero pid2 above.
 
-    if($sshpid <= 0 || !kill(0, $sshpid)) {
+    if($sshpid <= 0 || !pidexists($sshpid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         stopserver($server, "$pid2");
         $doesntrun{$pidfile} = 1;
         return (0,0);
     }
@@ -1946,13 +2032,13 @@
     $sshlog  = server_logfilename($LOGDIR, 'socks', $ipvnum, $idnum);
 
     # start our socks server
     my $cmd="$ssh -N -F $sshconfig $ip > $sshlog 2>&1";
     my ($sshpid, $pid2) = startnew($cmd, $pidfile, 30, 1); # fake pidfile
 
-    if($sshpid <= 0 || !kill(0, $sshpid)) {
+    if($sshpid <= 0 || !pidexists($sshpid)) {
         # it is NOT alive
         logmsg "RUN: failed to start the $srvrname server\n";
         display_sshlog();
         display_sshconfig();
         display_sshdlog();
         display_sshdconfig();
@@ -2255,12 +2341,16 @@
                $ssllib="polarssl";
            }
            elsif ($libcurl =~ /axtls/i) {
                $has_axtls=1;
                $ssllib="axTLS";
            }
+           elsif ($libcurl =~ /securetransport/i) {
+               $has_darwinssl=1;
+               $ssllib="DarwinSSL";
+           }
         }
         elsif($_ =~ /^Protocols: (.*)/i) {
             # these are the protocols compiled in to this libcurl
             @protocols = split(' ', lc($1));
 
             # Generate a "proto-ipv6" version of each protocol to match the
@@ -2268,20 +2358,23 @@
             # compiled in because the <features> test will fail.
             push @protocols, map($_ . '-ipv6', @protocols);
 
             # 'http-proxy' is used in test cases to do CONNECT through
             push @protocols, 'http-proxy';
 
+            # 'http-pipe' is the special server for testing pipelining
+            push @protocols, 'http-pipe';
+
             # 'none' is used in test cases to mean no server
             push @protocols, 'none';
         }
         elsif($_ =~ /^Features: (.*)/i) {
             $feat = $1;
             if($feat =~ /TrackMemory/i) {
-                # curl was built with --enable-curldebug (memory tracking)
-                $curl_debug = 1;
+                # built with memory tracking support (--enable-curldebug)
+                $has_memory_tracking = 1;
             }
             if($feat =~ /debug/i) {
                 # curl was built with --enable-debug
                 $debug_build = 1;
             }
             if($feat =~ /SSL/i) {
@@ -2393,14 +2486,15 @@
         if($sws[0] =~ /IPv6/) {
             # FTP server has ipv6 support!
             $ftp_ipv6 = 1;
         }
     }
 
-    if(!$curl_debug && $torture) {
-        die "can't run torture tests since curl was not built with curldebug";
+    if(!$has_memory_tracking && $torture) {
+        die "can't run torture tests since curl was built without ".
+            "TrackMemory feature (--enable-curldebug)";
     }
 
     $has_shared = `sh $CURLCONFIG --built-shared`;
     chomp $has_shared;
 
     # curl doesn't list cryptographic support separately, so assume it's
@@ -2417,13 +2511,13 @@
     "* Host: $hostname",
     "* System: $hosttype");
 
     logmsg sprintf("* Server SSL:   %8s", $stunnel?"ON ":"OFF");
     logmsg sprintf("  libcurl SSL:  %s\n", $ssl_version?"ON ":"OFF");
     logmsg sprintf("* debug build:  %8s", $debug_build?"ON ":"OFF");
-    logmsg sprintf("  track memory: %s\n", $curl_debug?"ON ":"OFF");
+    logmsg sprintf("  track memory: %s\n", $has_memory_tracking?"ON ":"OFF");
     logmsg sprintf("* valgrind:     %8s", $valgrind?"ON ":"OFF");
     logmsg sprintf("  HTTP IPv6     %s\n", $http_ipv6?"ON ":"OFF");
     logmsg sprintf("* FTP IPv6      %8s", $ftp_ipv6?"ON ":"OFF");
     logmsg sprintf("  Libtool lib:  %s\n", $libtool?"ON ":"OFF");
     logmsg sprintf("* Shared build:      %s\n", $has_shared);
     if($ssl_version) {
@@ -2469,12 +2563,13 @@
         logmsg sprintf("*   HTTPTLS/%d ", $HTTPTLSPORT);
         if($has_ipv6) {
             logmsg sprintf("HTTPTLS-IPv6/%d ", $HTTPTLS6PORT);
         }
         logmsg "\n";
     }
+    logmsg sprintf("*   HTTP-PIPE/%d \n", $HTTPPIPEPORT);
 
     $has_textaware = ($^O eq 'MSWin32') || ($^O eq 'msys');
 
     logmsg "***************************************** \n";
 }
 
@@ -2497,12 +2592,13 @@
 
   $$thing =~ s/%HTTPTLS6PORT/$HTTPTLS6PORT/g;
   $$thing =~ s/%HTTPTLSPORT/$HTTPTLSPORT/g;
   $$thing =~ s/%HTTP6PORT/$HTTP6PORT/g;
   $$thing =~ s/%HTTPSPORT/$HTTPSPORT/g;
   $$thing =~ s/%HTTPPORT/$HTTPPORT/g;
+  $$thing =~ s/%HTTPPIPEPORT/$HTTPPIPEPORT/g;
   $$thing =~ s/%PROXYPORT/$HTTPPROXYPORT/g;
 
   $$thing =~ s/%IMAP6PORT/$IMAP6PORT/g;
   $$thing =~ s/%IMAPPORT/$IMAPPORT/g;
 
   $$thing =~ s/%POP36PORT/$POP36PORT/g;
@@ -2679,22 +2775,32 @@
         }
         elsif($f eq "WinSSL") {
             if($has_winssl) {
                 next;
             }
         }
+        elsif($f eq "DarwinSSL") {
+            if($has_darwinssl) {
+                next;
+            }
+        }
         elsif($f eq "unittest") {
             if($debug_build) {
                 next;
             }
         }
         elsif($f eq "debug") {
             if($debug_build) {
                 next;
             }
         }
+        elsif($f eq "TrackMemory") {
+            if($has_memory_tracking) {
+                next;
+            }
+        }
         elsif($f eq "large_file") {
             if($large_file) {
                 next;
             }
         }
         elsif($f eq "idn") {
@@ -2963,13 +3069,13 @@
         subVariables \$cmd;
     }
     else {
         # there was no command given, use something silly
         $cmd="-";
     }
-    if($curl_debug) {
+    if($has_memory_tracking) {
         unlink($memdump);
     }
 
     # create a (possibly-empty) file before starting the test
     my @inputfile=getpart("client", "file");
     my %fileattr = getpartattr("client", "file");
@@ -3558,15 +3664,15 @@
         logmsg " exit FAILED\n";
         # timestamp test result verification end
         $timevrfyend{$testnum} = Time::HiRes::time() if($timestats);
         return 1;
     }
 
-    if($curl_debug) {
+    if($has_memory_tracking) {
         if(! -f $memdump) {
-            logmsg "\n** ALERT! memory debugging with no output file?\n"
+            logmsg "\n** ALERT! memory tracking with no output file?\n"
                 if(!$cmdtype eq "perl");
         }
         else {
             my @memdata=`$memanalyze $memdump`;
             my $leak=0;
             for(@memdata) {
@@ -3857,12 +3963,29 @@
                 }
                 logmsg sprintf("* pid http-ipv6 => %d %d\n", $pid, $pid2)
                     if($verbose);
                 $run{'http-ipv6'}="$pid $pid2";
             }
         }
+        elsif($what eq "http-pipe") {
+            if($torture && $run{'http-pipe'} &&
+               !responsive_http_server("http", $verbose, "pipe",
+                                       $HTTPPIPEPORT)) {
+                stopserver('http-pipe');
+            }
+            if(!$run{'http-pipe'}) {
+                ($pid, $pid2) = runhttpserver("http", $verbose, "pipe",
+                                              $HTTPPIPEPORT);
+                if($pid <= 0) {
+                    return "failed starting HTTP-pipe server";
+                }
+                logmsg sprintf ("* pid http-pipe => %d %d\n", $pid, $pid2)
+                    if($verbose);
+                $run{'http-pipe'}="$pid $pid2";
+            }
+        }
         elsif($what eq "rtsp") {
             if($torture && $run{'rtsp'} &&
                !responsive_rtsp_server($verbose)) {
                 stopserver('rtsp');
             }
             if(!$run{'rtsp'}) {
@@ -4499,12 +4622,13 @@
 $RTSP6PORT       = $base++; # RTSP IPv6 server port
 $GOPHERPORT      = $base++; # Gopher IPv4 server port
 $GOPHER6PORT     = $base++; # Gopher IPv6 server port
 $HTTPTLSPORT     = $base++; # HTTP TLS (non-stunnel) server port
 $HTTPTLS6PORT    = $base++; # HTTP TLS (non-stunnel) IPv6 server port
 $HTTPPROXYPORT   = $base++; # HTTP proxy port, when using CONNECT
+$HTTPPIPEPORT    = $base++; # HTTP pipelining port
 
 #######################################################################
 # clear and create logging directory:
 #
 
 cleardir($LOGDIR);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/getpart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/getpart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/getpart.c	2013-01-07 06:33:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/getpart.c	2013-04-12 02:46:54.000000000 +0800
@@ -55,12 +55,15 @@
 
 curl_malloc_callback Curl_cmalloc = (curl_malloc_callback)malloc;
 curl_free_callback Curl_cfree = (curl_free_callback)free;
 curl_realloc_callback Curl_crealloc = (curl_realloc_callback)realloc;
 curl_strdup_callback Curl_cstrdup = (curl_strdup_callback)strdup;
 curl_calloc_callback Curl_ccalloc = (curl_calloc_callback)calloc;
+#ifdef WIN32
+curl_wcsdup_callback Curl_cwcsdup = (curl_wcsdup_callback)wcsdup;
+#endif
 
 #if defined(_MSC_VER) && defined(_DLL)
 #  pragma warning(default:4232) /* MSVC extension, dllimport identity */
 #endif
 
 /*
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/Makefile.in	2013-02-06 17:47:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/Makefile.in	2013-04-12 02:47:05.000000000 +0800
@@ -65,12 +65,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -235,12 +236,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -328,13 +330,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/sockfilt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/sockfilt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/sockfilt.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/sockfilt.c	2013-04-12 02:46:54.000000000 +0800
@@ -267,12 +267,79 @@
 #if defined(SIGBREAK) && defined(WIN32)
   if(SIG_ERR != old_sigbreak_handler)
     (void)signal(SIGBREAK, old_sigbreak_handler);
 #endif
 }
 
+#ifdef WIN32
+/*
+ * read-wrapper to support reading from stdin on Windows.
+ */
+static ssize_t read_wincon(int fd, void *buf, size_t count)
+{
+  HANDLE handle = NULL;
+  DWORD mode, rcount = 0;
+  BOOL success;
+
+  if(fd == fileno(stdin)) {
+    handle = GetStdHandle(STD_INPUT_HANDLE);
+  }
+  else {
+    return read(fd, buf, count);
+  }
+
+  if(GetConsoleMode(handle, &mode)) {
+    success = ReadConsole(handle, buf, count, &rcount, NULL);
+  }
+  else {
+    success = ReadFile(handle, buf, count, &rcount, NULL);
+  }
+  if(success) {
+    return rcount;
+  }
+
+  errno = GetLastError();
+  return -1;
+}
+#define read(a,b,c) read_wincon(a,b,c)
+
+/*
+ * write-wrapper to support writing to stdout and stderr on Windows.
+ */
+static ssize_t write_wincon(int fd, const void *buf, size_t count)
+{
+  HANDLE handle = NULL;
+  DWORD mode, wcount = 0;
+  BOOL success;
+
+  if(fd == fileno(stdout)) {
+    handle = GetStdHandle(STD_OUTPUT_HANDLE);
+  }
+  else if(fd == fileno(stderr)) {
+    handle = GetStdHandle(STD_ERROR_HANDLE);
+  }
+  else {
+    return write(fd, buf, count);
+  }
+
+  if(GetConsoleMode(handle, &mode)) {
+    success = WriteConsole(handle, buf, count, &wcount, NULL);
+  }
+  else {
+    success = WriteFile(handle, buf, count, &wcount, NULL);
+  }
+  if(success) {
+    return wcount;
+  }
+
+  errno = GetLastError();
+  return -1;
+}
+#define write(a,b,c) write_wincon(a,b,c)
+#endif
+
 /*
  * fullread is a wrapper around the read() function. This will repeat the call
  * to read() until it actually has read the complete number of bytes indicated
  * in nbytes or it fails with a condition that cannot be handled with a simple
  * retry of the read call.
  */
@@ -448,13 +515,13 @@
  * http://msdn.microsoft.com/en-us/library/windows/desktop/ms741572.aspx
  */
 static int select_ws(int nfds, fd_set *readfds, fd_set *writefds,
                      fd_set *exceptfds, struct timeval *timeout)
 {
   long networkevents;
-  DWORD milliseconds, wait, idx, avail, events, inputs;
+  DWORD milliseconds, wait, idx, mode, avail, events, inputs;
   WSAEVENT wsaevent, *wsaevents;
   WSANETWORKEVENTS wsanetevents;
   INPUT_RECORD *inputrecords;
   HANDLE handle, *handles;
   curl_socket_t sock, *fdarr, *wsasocks;
   int error, fds;
@@ -510,13 +577,13 @@
       networkevents |= FD_READ|FD_ACCEPT|FD_CLOSE;
 
     if(FD_ISSET(fds, writefds))
       networkevents |= FD_WRITE|FD_CONNECT;
 
     if(FD_ISSET(fds, exceptfds))
-      networkevents |= FD_OOB;
+      networkevents |= FD_OOB|FD_CLOSE;
 
     /* only wait for events for which we actually care */
     if(networkevents) {
       fdarr[nfd] = curlx_sitosk(fds);
       if(fds == fileno(stdin)) {
         handles[nfd] = GetStdHandle(STD_INPUT_HANDLE);
@@ -562,25 +629,28 @@
   for(idx = 0; idx < nfd; idx++) {
     handle = handles[idx];
     sock = fdarr[idx];
     fds = curlx_sktosi(sock);
 
     /* check if the current internal handle was triggered */
-    if(wait != WAIT_FAILED && (wait - WAIT_OBJECT_0) >= idx &&
+    if(wait != WAIT_FAILED && (wait - WAIT_OBJECT_0) <= idx &&
        WaitForSingleObjectEx(handle, 0, FALSE) == WAIT_OBJECT_0) {
       /* try to handle the event with STD* handle functions */
       if(fds == fileno(stdin)) {
         /* check if there is no data in the input buffer */
         if(!stdin->_cnt) {
           /* check if we are getting data from a PIPE */
-          if(!GetConsoleMode(handle, &avail)) {
+          if(!GetConsoleMode(handle, &mode)) {
             /* check if there is no data from PIPE input */
             if(!PeekNamedPipe(handle, NULL, 0, NULL, &avail, NULL))
               avail = 0;
-            if(!avail)
+            if(!avail) {
               FD_CLR(sock, readfds);
+              /* reduce CPU load */
+              Sleep(10);
+            }
           } /* check if there is no data from keyboard input */
           else if (!_kbhit()) {
             /* check if there are INPUT_RECORDs in the input buffer */
             if(GetNumberOfConsoleInputEvents(handle, &events)) {
               if(events > 0) {
                 /* remove INPUT_RECORDs from the input buffer */
@@ -612,24 +682,33 @@
         /* stdout and stderr are never ready for read or exceptional */
         FD_CLR(sock, readfds);
         FD_CLR(sock, exceptfds);
       }
       else {
         /* try to handle the event with the WINSOCK2 functions */
-        error = WSAEnumNetworkEvents(fds, NULL, &wsanetevents);
+        error = WSAEnumNetworkEvents(fds, handle, &wsanetevents);
         if(error != SOCKET_ERROR) {
           /* remove from descriptor set if not ready for read/accept/close */
           if(!(wsanetevents.lNetworkEvents & (FD_READ|FD_ACCEPT|FD_CLOSE)))
             FD_CLR(sock, readfds);
 
           /* remove from descriptor set if not ready for write/connect */
           if(!(wsanetevents.lNetworkEvents & (FD_WRITE|FD_CONNECT)))
             FD_CLR(sock, writefds);
 
+          /* HACK:
+           * use exceptfds together with readfds to signal
+           * that the connection was closed by the client.
+           *
+           * Reason: FD_CLOSE is only signaled once, sometimes
+           * at the same time as FD_READ with data being available.
+           * This means that recv/sread is not reliable to detect
+           * that the connection is closed.
+           */
           /* remove from descriptor set if not exceptional */
-          if(!(wsanetevents.lNetworkEvents & FD_OOB))
+          if(!(wsanetevents.lNetworkEvents & (FD_OOB|FD_CLOSE)))
             FD_CLR(sock, exceptfds);
         }
       }
 
       /* check if the event has not been filtered using specific tests */
       if(FD_ISSET(sock, readfds) || FD_ISSET(sock, writefds) ||
@@ -729,22 +808,28 @@
       logmsg("socket is -1! on %s:%d", __FILE__, __LINE__);
       maxfd = 0; /* stdin */
     }
     else {
       /* there's always a socket to wait for */
       FD_SET(sockfd, &fds_read);
+#ifdef USE_WINSOCK
+      FD_SET(sockfd, &fds_err);
+#endif
       maxfd = (int)sockfd;
     }
     break;
 
   case ACTIVE:
 
     sockfd = *sockfdp;
     /* sockfd turns CURL_SOCKET_BAD when our connection has been closed */
     if(CURL_SOCKET_BAD != sockfd) {
       FD_SET(sockfd, &fds_read);
+#ifdef USE_WINSOCK
+      FD_SET(sockfd, &fds_err);
+#endif
       maxfd = (int)sockfd;
     }
     else {
       logmsg("No socket to read on");
       maxfd = 0;
     }
@@ -906,33 +991,39 @@
       return TRUE;
     }
 
     /* read from socket, pass on data to stdout */
     nread_socket = sread(sockfd, buffer, sizeof(buffer));
 
-    if(nread_socket <= 0) {
+    if(nread_socket > 0) {
+      snprintf(data, sizeof(data), "DATA\n%04zx\n", nread_socket);
+      if(!write_stdout(data, 10))
+        return FALSE;
+      if(!write_stdout(buffer, nread_socket))
+        return FALSE;
+
+      logmsg("< %zd bytes data, client => server", nread_socket);
+      lograw(buffer, nread_socket);
+    }
+
+    if(nread_socket <= 0
+#ifdef USE_WINSOCK
+       || FD_ISSET(sockfd, &fds_err)
+#endif
+       ) {
       logmsg("====> Client disconnect");
       if(!write_stdout("DISC\n", 5))
         return FALSE;
       sclose(sockfd);
       *sockfdp = CURL_SOCKET_BAD;
       if(*mode == PASSIVE_CONNECT)
         *mode = PASSIVE_LISTEN;
       else
         *mode = ACTIVE_DISCONNECT;
       return TRUE;
     }
-
-    snprintf(data, sizeof(data), "DATA\n%04zx\n", nread_socket);
-    if(!write_stdout(data, 10))
-      return FALSE;
-    if(!write_stdout(buffer, nread_socket))
-      return FALSE;
-
-    logmsg("< %zd bytes data, client => server", nread_socket);
-    lograw(buffer, nread_socket);
   }
 
   return TRUE;
 }
 
 static curl_socket_t sockdaemon(curl_socket_t sock,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/sws.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/sws.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/sws.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/sws.c	2013-04-12 02:46:54.000000000 +0800
@@ -85,12 +85,14 @@
 #define RCMD_NORMALREQ 0 /* default request, use the tests file normally */
 #define RCMD_IDLE      1 /* told to sit idle */
 #define RCMD_STREAM    2 /* told to stream */
 
 struct httprequest {
   char reqbuf[REQBUFSIZ]; /* buffer area for the incoming request */
+  bool connect_request; /* if a CONNECT */
+  unsigned short connect_port; /* the port number CONNECT used */
   size_t checkindex; /* where to start checking of the request */
   size_t offset;     /* size of the incoming request */
   long testno;       /* test number found in the request */
   long partno;       /* part number found in the request */
   bool open;      /* keep connection open info, as found in the request */
   bool auth_req;  /* authentication required, don't wait for body unless
@@ -108,13 +110,12 @@
                      bytes said in Content-Length, but the server only reads N
                      - skip bytes. */
   int rcmd;       /* doing a special command, see defines above */
   int prot_version;  /* HTTP version * 10 */
   bool pipelining;   /* true if request is pipelined */
   int callcount;  /* times ProcessRequest() gets called */
-  unsigned short connect_port; /* the port number CONNECT used */
   bool connmon;   /* monitor the state of the connection, log disconnects */
   int done_processing;
 };
 
 #define MAX_SOCKETS 1024
 
@@ -163,35 +164,24 @@
    proper point - like with NTLM */
 #define CMD_CONNECTIONMONITOR "connection-monitor"
 
 #define END_OF_HEADERS "\r\n\r\n"
 
 enum {
-  DOCNUMBER_NOTHING = -7,
-  DOCNUMBER_QUIT    = -6,
-  DOCNUMBER_BADCONNECT = -5,
-  DOCNUMBER_INTERNAL= -4,
-  DOCNUMBER_CONNECT = -3,
+  DOCNUMBER_NOTHING = -4,
+  DOCNUMBER_QUIT    = -3,
   DOCNUMBER_WERULEZ = -2,
   DOCNUMBER_404     = -1
 };
 
 static const char *end_of_headers = END_OF_HEADERS;
 
 /* sent as reply to a QUIT */
 static const char *docquit =
 "HTTP/1.1 200 Goodbye" END_OF_HEADERS;
 
-/* sent as reply to a CONNECT */
-static const char *docconnect =
-"HTTP/1.1 200 Mighty fine indeed" END_OF_HEADERS;
-
-/* sent as reply to a "bad" CONNECT */
-static const char *docbadconnect =
-"HTTP/1.1 501 Forbidden you fool" END_OF_HEADERS;
-
 /* send back this on 404 file not found */
 static const char *doc404 = "HTTP/1.1 404 Not Found\r\n"
     "Server: " SWSVERSION "\r\n"
     "Connection: close\r\n"
     "Content-Type: text/html"
     END_OF_HEADERS
@@ -339,14 +329,14 @@
   filename = test2file(req->testno);
 
   stream=fopen(filename, "rb");
   if(!stream) {
     error = errno;
     logmsg("fopen() failed with error: %d %s", error, strerror(error));
-    logmsg("Error opening file: %s", filename);
-    logmsg("Couldn't open test file %ld", req->testno);
+    logmsg("  [1] Error opening file: %s", filename);
+    logmsg("  Couldn't open test file %ld", req->testno);
     req->open = FALSE; /* closes connection */
     return 1; /* done */
   }
   else {
     char *orgcmd = NULL;
     char *cmd = NULL;
@@ -504,29 +494,40 @@
         req->partno = req->testno % 10000;
         req->testno /= 10000;
       }
       else
         req->partno = 0;
 
-      sprintf(logbuf, "Requested test number %ld part %ld",
-              req->testno, req->partno);
-      logmsg("%s", logbuf);
+      if(req->testno) {
 
-      /* find and parse <servercmd> for this test */
-      parse_servercmd(req);
+        sprintf(logbuf, "Requested test number %ld part %ld",
+                req->testno, req->partno);
+        logmsg("%s", logbuf);
+
+        /* find and parse <servercmd> for this test */
+        parse_servercmd(req);
+      }
+      else
+        req->testno = DOCNUMBER_NOTHING;
 
     }
-    else {
+
+    if(req->testno == DOCNUMBER_NOTHING) {
+      /* didn't find any in the first scan, try alternative test case
+         number placements */
+
       if(sscanf(req->reqbuf, "CONNECT %" MAXDOCNAMELEN_TXT "s HTTP/%d.%d",
                 doc, &prot_major, &prot_minor) == 3) {
         char *portp = NULL;
 
         sprintf(logbuf, "Received a CONNECT %s HTTP/%d.%d request",
                 doc, prot_major, prot_minor);
         logmsg("%s", logbuf);
 
+        req->connect_request = TRUE;
+
         if(req->prot_version == 10)
           req->open = FALSE; /* HTTP 1.0 closes connection by default */
 
         if(doc[0] == '[') {
           char *p = &doc[1];
           while(*p && (ISXDIGIT(*p) || (*p == ':') || (*p == '.')))
@@ -545,30 +546,51 @@
           unsigned long ulnum = strtoul(portp+1, NULL, 10);
           if(!ulnum || (ulnum > 65535UL))
             logmsg("Invalid CONNECT port received");
           else
             req->connect_port = curlx_ultous(ulnum);
         }
+      }
+    }
+
+    if(req->testno == DOCNUMBER_NOTHING) {
+      /* Still no test case number. Try to get the the number off the last dot
+         instead, IE we consider the TLD to be the test number. Test 123 can
+         then be written as "example.com.123". */
+
+      /* find the last dot */
+      ptr = strrchr(doc, '.');
+
+      /* get the number after it */
+      if(ptr) {
+        ptr++; /* skip the dot */
+
+        req->testno = strtol(ptr, &ptr, 10);
+
+        if(req->testno > 10000) {
+          req->partno = req->testno % 10000;
+          req->testno /= 10000;
+
+          logmsg("found test %d in requested host name", req->testno);
 
-        if(!strncmp(doc, "bad", 3))
-          /* if the host name starts with bad, we fake an error here */
-          req->testno = DOCNUMBER_BADCONNECT;
-        else if(!strncmp(doc, "test", 4))
-          /* if the host name starts with test, the port number used in the
-             CONNECT line will be used as test number! */
-          req->testno = req->connect_port?req->connect_port:DOCNUMBER_CONNECT;
+        }
         else
-          req->testno = req->connect_port?DOCNUMBER_CONNECT:DOCNUMBER_BADCONNECT;
+          req->partno = 0;
+
+        sprintf(logbuf, "Requested test number %ld part %ld (from host name)",
+                req->testno, req->partno);
+        logmsg("%s", logbuf);
 
-        /* find and parse <servercmd> for this test */
-        parse_servercmd(req);
       }
-      else {
+
+      if(!req->testno) {
         logmsg("Did not find test number in PATH");
         req->testno = DOCNUMBER_404;
       }
+      else
+        parse_servercmd(req);
     }
   }
   else if((req->offset >= 3) && (req->testno == DOCNUMBER_NOTHING)) {
     logmsg("** Unusual request. Starts with %02x %02x %02x",
            line[0], line[1], line[2]);
   }
@@ -779,13 +801,13 @@
     return;
 
   do {
     dump = fopen(dumpfile, "ab");
   } while ((dump == NULL) && ((error = errno) == EINTR));
   if (dump == NULL) {
-    logmsg("Error opening file %s error: %d %s",
+    logmsg("[2] Error opening file %s error: %d %s",
            dumpfile, error, strerror(error));
     logmsg("Failed to write request input ");
     return;
   }
 
   writeleft = totalsize;
@@ -825,12 +847,13 @@
   if(!req->pipelining) {
     req->checkindex = 0;
     req->offset = 0;
   }
   req->testno = DOCNUMBER_NOTHING;
   req->partno = 0;
+  req->connect_request = FALSE;
   req->open = TRUE;
   req->auth_req = FALSE;
   req->auth = FALSE;
   req->cl = 0;
   req->digest = FALSE;
   req->ntlm = FALSE;
@@ -964,16 +987,12 @@
   size_t responsesize;
   int error = 0;
   int res;
   const char *responsedump = is_proxy?RESPONSE_PROXY_DUMP:RESPONSE_DUMP;
   static char weare[256];
 
-  char partbuf[80]="data";
-
-  logmsg("Send response test%ld section <data%ld>", req->testno, req->partno);
-
   switch(req->rcmd) {
   default:
   case RCMD_NORMALREQ:
     break; /* continue with business as usual */
   case RCMD_STREAM:
 #define STREAMTHIS "a string to stream 01234567890\n"
@@ -1013,44 +1032,41 @@
         sprintf(weare, "%s", msgbuf);
       else
         sprintf(weare, "HTTP/1.1 200 OK\r\nContent-Length: %zu\r\n\r\n%s",
                 msglen, msgbuf);
       buffer = weare;
       break;
-    case DOCNUMBER_INTERNAL:
-      logmsg("Bailing out due to internal error");
-      return -1;
-    case DOCNUMBER_CONNECT:
-      logmsg("Replying to CONNECT");
-      buffer = docconnect;
-      break;
-    case DOCNUMBER_BADCONNECT:
-      logmsg("Replying to a bad CONNECT");
-      buffer = docbadconnect;
-      break;
     case DOCNUMBER_404:
     default:
       logmsg("Replying to with a 404");
       buffer = doc404;
       break;
     }
 
     count = strlen(buffer);
   }
   else {
+    char partbuf[80];
     char *filename = test2file(req->testno);
 
-    if(0 != req->partno)
-      sprintf(partbuf, "data%ld", req->partno);
+    /* select the <data> tag for "normal" requests and the <connect> one
+       for CONNECT requests (within the <reply> section) */
+    const char *section= req->connect_request?"connect":"data";
+
+    if(req->partno)
+      sprintf(partbuf, "%s%ld", section, req->partno);
+    else
+      sprintf(partbuf, "%s", section);
+
+    logmsg("Send response test%ld section <%s>", req->testno, partbuf);
 
     stream=fopen(filename, "rb");
     if(!stream) {
       error = errno;
       logmsg("fopen() failed with error: %d %s", error, strerror(error));
-      logmsg("Error opening file: %s", filename);
-      logmsg("Couldn't open test file");
+      logmsg("  [3] Error opening file: %s", filename);
       return 0;
     }
     else {
       error = getpart(&ptr, &count, "reply", partbuf, stream);
       fclose(stream);
       if(error) {
@@ -1068,14 +1084,13 @@
 
     /* re-open the same file again */
     stream=fopen(filename, "rb");
     if(!stream) {
       error = errno;
       logmsg("fopen() failed with error: %d %s", error, strerror(error));
-      logmsg("Error opening file: %s", filename);
-      logmsg("Couldn't open test file");
+      logmsg("  [4] Error opening file: %s", filename);
       if(ptr)
         free(ptr);
       return 0;
     }
     else {
       /* get the custom server control "commands" */
@@ -1113,13 +1128,13 @@
     prevbounce = FALSE;
 
   dump = fopen(responsedump, "ab");
   if(!dump) {
     error = errno;
     logmsg("fopen() failed with error: %d %s", error, strerror(error));
-    logmsg("Error opening file: %s", responsedump);
+    logmsg("  [5] Error opening file: %s", responsedump);
     if(ptr)
       free(ptr);
     if(cmd)
       free(cmd);
     return -1;
   }
@@ -1346,14 +1361,14 @@
 
 #define CTRL  0
 #define DATA  1
 
 static void http_connect(curl_socket_t *infdp,
                          curl_socket_t rootfd,
-                         struct httprequest *req,
-                         const char *ipaddr)
+                         const char *ipaddr,
+                         unsigned short ipport)
 {
   curl_socket_t serverfd[2] = {CURL_SOCKET_BAD, CURL_SOCKET_BAD};
   curl_socket_t clientfd[2] = {CURL_SOCKET_BAD, CURL_SOCKET_BAD};
   ssize_t toc[2] = {0, 0}; /* number of bytes to client */
   ssize_t tos[2] = {0, 0}; /* number of bytes to server */
   char readclient[2][256];
@@ -1379,13 +1394,13 @@
      This is done to prevent triggering libcurl known bug #39. */
   for(loop = 2; (loop > 0) && !got_exit_signal; loop--)
     wait_ms(250);
   if(got_exit_signal)
     goto http_connect_cleanup;
 
-  serverfd[CTRL] = connect_to(ipaddr, req->connect_port);
+  serverfd[CTRL] = connect_to(ipaddr, ipport);
   if(serverfd[CTRL] == CURL_SOCKET_BAD)
     goto http_connect_cleanup;
 
   /* Primary tunnel socket endpoints are now connected. Tunnel data back and
      forth over the primary tunnel until client or server breaks the primary
      tunnel, simultaneously allowing establishment, operation and teardown of
@@ -1496,13 +1511,13 @@
             }
           }
 
           /* skip this and close the socket if err < 0 */
           if(err >= 0) {
             err = send_doc(datafd, &req2);
-            if(!err && (req2.testno == DOCNUMBER_CONNECT)) {
+            if(!err && req2.connect_request) {
               /* sleep to prevent triggering libcurl known bug #39. */
               for(loop = 2; (loop > 0) && !got_exit_signal; loop--)
                 wait_ms(250);
               if(!got_exit_signal) {
                 /* connect to the server */
                 serverfd[DATA] = connect_to(ipaddr, req2.connect_port);
@@ -1804,13 +1819,14 @@
   return msgsock;
 }
 
 /* returns 1 if the connection should be serviced again immediately, 0 if there
    is no data waiting, or < 0 if it should be closed */
 static int service_connection(curl_socket_t msgsock, struct httprequest *req,
-                              curl_socket_t listensock, const char *hostport)
+                              curl_socket_t listensock,
+                              const char *connecthost)
 {
   if(got_exit_signal)
     return -1;
 
   while(!req->done_processing) {
     int rc = get_request(msgsock, req);
@@ -1835,41 +1851,40 @@
   }
 
   send_doc(msgsock, req);
   if(got_exit_signal)
     return -1;
 
-  if(DOCNUMBER_CONNECT == req->testno) {
-    /* a CONNECT request, setup and talk the tunnel */
-    if(!is_proxy) {
-      logmsg("received CONNECT but isn't running as proxy! EXIT");
-    }
-    else
-      http_connect(&msgsock, listensock, req, hostport);
-    return -1;
-  }
-
-  if((req->testno < 0) && (req->testno != DOCNUMBER_CONNECT)) {
+  if(req->testno < 0) {
     logmsg("special request received, no persistency");
     return -1;
   }
   if(!req->open) {
     logmsg("instructed to close connection after server-reply");
     return -1;
   }
 
+  if(req->connect_request) {
+    /* a CONNECT request, setup and talk the tunnel */
+    if(!is_proxy) {
+      logmsg("received CONNECT but isn't running as proxy!");
+      return 1;
+    }
+    else {
+      http_connect(&msgsock, listensock, connecthost, req->connect_port);
+      return -1;
+    }
+  }
+
   /* if we got a CONNECT, loop and get another request as well! */
 
   if(req->open) {
     logmsg("=> persistant connection request ended, awaits new request\n");
     return 1;
   }
 
-  if(req->testno == DOCNUMBER_CONNECT)
-    return 1;
-
   return -1;
 }
 
 int main(int argc, char *argv[])
 {
   srvr_sockaddr_union_t me;
@@ -1880,13 +1895,15 @@
   char *pidname= (char *)".http.pid";
   struct httprequest req;
   int rc;
   int error;
   int arg=1;
   long pid;
-  const char *hostport = "127.0.0.1";
+  const char *connecthost = "127.0.0.1";
+
+  /* a default CONNECT port is basically pointless but still ... */
   size_t socket_idx;
 
   memset(&req, 0, sizeof(req));
 
   while(argc>arg) {
     if(!strcmp("--version", argv[arg])) {
@@ -1950,20 +1967,21 @@
       if(argc>arg) {
         path = argv[arg];
         arg++;
       }
     }
     else if(!strcmp("--connect", argv[arg])) {
-      /* store the connect host, but also use this as a hint that we
-         run as a proxy and do a few different internal choices */
+      /* The connect host IP number that the proxy will connect to no matter
+         what the client asks for, but also use this as a hint that we run as
+         a proxy and do a few different internal choices */
       arg++;
       if(argc>arg) {
-        hostport = argv[arg];
+        connecthost = argv[arg];
         arg++;
         is_proxy = TRUE;
-        logmsg("Run as proxy, CONNECT to %s", hostport);
+        logmsg("Run as proxy, CONNECT to host %s", connecthost);
       }
     }
     else {
       puts("Usage: sws [option]\n"
            " --version\n"
            " --logfile [file]\n"
@@ -2141,13 +2159,14 @@
       if (FD_ISSET(all_sockets[socket_idx], &input)) {
         if(got_exit_signal)
           goto sws_cleanup;
 
         /* Service this connection until it has nothing available */
         do {
-          rc = service_connection(all_sockets[socket_idx], &req, sock, hostport);
+          rc = service_connection(all_sockets[socket_idx], &req, sock,
+                                  connecthost);
           if(got_exit_signal)
             goto sws_cleanup;
 
           if (rc < 0) {
             logmsg("====> Client disconnect %d", req.connmon);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/tftpd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/tftpd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/server/tftpd.c	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/server/tftpd.c	2013-04-12 02:46:54.000000000 +0800
@@ -872,13 +872,13 @@
       peer = socket(AF_INET6, SOCK_DGRAM, 0);
       if(CURL_SOCKET_BAD == peer) {
         logmsg("socket");
         result = 2;
         break;
       }
-      if (connect(peer, &from.sa, sizeof(from.sa6)) < 0) {
+      if(connect(peer, &from.sa, sizeof(from.sa6)) < 0) {
         logmsg("connect: fail");
         result = 1;
         break;
       }
     }
 #endif
@@ -961,12 +961,15 @@
   char *cp;
   int first = 1, ecode;
   struct formats *pf;
   char *filename, *mode = NULL;
   int error;
   FILE *server;
+#ifdef USE_WINSOCK
+  DWORD recvtimeout, recvtimeoutbak;
+#endif
 
   /* Open request dump file. */
   server = fopen(REQUEST_DUMP, "ab");
   if(!server) {
     error = errno;
     logmsg("fopen() failed with error: %d %s", error, strerror(error));
@@ -1015,17 +1018,33 @@
   }
   ecode = validate_access(test, filename, tp->th_opcode);
   if (ecode) {
     nak(ecode);
     return 1;
   }
+
+#ifdef USE_WINSOCK
+  recvtimeout = sizeof(recvtimeoutbak);
+  getsockopt(peer, SOL_SOCKET, SO_RCVTIMEO,
+             (char*)&recvtimeoutbak, (int*)&recvtimeout);
+  recvtimeout = TIMEOUT*1000;
+  setsockopt(peer, SOL_SOCKET, SO_RCVTIMEO,
+             (const char*)&recvtimeout, sizeof(recvtimeout));
+#endif
+
   if (tp->th_opcode == opcode_WRQ)
     recvtftp(test, pf);
   else
     sendtftp(test, pf);
 
+#ifdef USE_WINSOCK
+  recvtimeout = recvtimeoutbak;
+  setsockopt(peer, SOL_SOCKET, SO_RCVTIMEO,
+             (const char*)&recvtimeout, sizeof(recvtimeout));
+#endif
+
   return 0;
 }
 
 /*
  * Validate file access.
  */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/serverhelp.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/serverhelp.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/serverhelp.pm	2012-12-12 06:32:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/serverhelp.pm	2013-04-12 02:46:54.000000000 +0800
@@ -76,13 +76,13 @@
     my $server = $_[0];
     my $proto;
     my $ipvnum;
     my $idnum;
 
     if($server =~
-        /^((ftp|http|imap|pop3|smtp)s?)(\d*)(-ipv6|)$/) {
+        /^((ftp|http|imap|pop3|smtp|http-pipe)s?)(\d*)(-ipv6|)$/) {
         $proto  = $1;
         $idnum  = ($3 && ($3 > 1)) ? $3 : 1;
         $ipvnum = ($4 && ($4 =~ /6$/)) ? 6 : 4;
     }
     elsif($server =~
         /^(tftp|sftp|socks|ssh|rtsp|gopher|httptls)(\d*)(-ipv6|)$/) {
@@ -102,13 +102,13 @@
 #
 sub servername_str {
     my ($proto, $ipver, $idnum) = @_;
 
     $proto = uc($proto) if($proto);
     die "unsupported protocol: '$proto'" unless($proto &&
-        ($proto =~ /^(((FTP|HTTP|IMAP|POP3|SMTP)S?)|(TFTP|SFTP|SOCKS|SSH|RTSP|GOPHER|HTTPTLS))$/));
+        ($proto =~ /^(((FTP|HTTP|IMAP|POP3|SMTP|HTTP-PIPE)S?)|(TFTP|SFTP|SOCKS|SSH|RTSP|GOPHER|HTTPTLS))$/));
 
     $ipver = (not $ipver) ? 'ipv4' : lc($ipver);
     die "unsupported IP version: '$ipver'" unless($ipver &&
         ($ipver =~ /^(4|6|ipv4|ipv6|-ipv4|-ipv6)$/));
     $ipver = ($ipver =~ /6$/) ? '-IPv6' : '';
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/unit/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/unit/Makefile.am	2013-01-17 06:05:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit/Makefile.am	2013-04-12 02:46:54.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -56,18 +56,13 @@
 
 # Prevent LIBS from being used for all link targets
 LIBS = $(BLANK_AT_MAKETIME)
 
 LDADD = $(top_builddir)/lib/libcurlu.la @LDFLAGS@ @LIBCURL_LIBS@
 DEPENDENCIES = $(top_builddir)/lib/libcurlu.la
-AM_CPPFLAGS += -DUNITTESTS
-
-# Mostly for Windows build targets, when using static libcurl
-if USE_CPPFLAG_CURL_STATICLIB
-AM_CPPFLAGS += -DCURL_STATICLIB
-endif
+AM_CPPFLAGS += -DCURL_STATICLIB -DUNITTESTS
 
 # Makefile.inc provides neat definitions
 include Makefile.inc
 
 if BUILD_UNITTESTS
 noinst_PROGRAMS = $(UNITPROGS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/unit/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/unit/Makefile.in	2013-02-06 17:47:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit/Makefile.in	2013-04-12 02:47:05.000000000 +0800
@@ -50,15 +50,12 @@
 POST_INSTALL = :
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-
-# Mostly for Windows build targets, when using static libcurl
-@USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_1 = -DCURL_STATICLIB
 DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/Makefile.inc
 @BUILD_UNITTESTS_TRUE@noinst_PROGRAMS = $(am__EXEEXT_1)
 subdir = tests/unit
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
@@ -67,12 +64,13 @@
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
 	$(top_srcdir)/m4/curl-reentrant.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/m4/xc-cc-check.m4 \
+	$(top_srcdir)/m4/xc-lt-iface.m4 \
 	$(top_srcdir)/m4/xc-translit.m4 \
 	$(top_srcdir)/m4/xc-val-flgs.m4 \
 	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
 	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -82,13 +80,14 @@
 CONFIG_HEADER = $(top_builddir)/lib/curl_config.h \
 	$(top_builddir)/include/curl/curlbuild.h
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
 am__EXEEXT_1 = unit1300$(EXEEXT) unit1301$(EXEEXT) unit1302$(EXEEXT) \
 	unit1303$(EXEEXT) unit1304$(EXEEXT) unit1305$(EXEEXT) \
-	unit1307$(EXEEXT) unit1308$(EXEEXT) unit1309$(EXEEXT)
+	unit1307$(EXEEXT) unit1308$(EXEEXT) unit1309$(EXEEXT) \
+	unit1330$(EXEEXT)
 PROGRAMS = $(noinst_PROGRAMS)
 am__objects_1 = unit1300-first.$(OBJEXT)
 am_unit1300_OBJECTS = unit1300-unit1300.$(OBJEXT) $(am__objects_1)
 unit1300_OBJECTS = $(am_unit1300_OBJECTS)
 unit1300_LDADD = $(LDADD)
 unit1300_DEPENDENCIES = $(top_builddir)/lib/libcurlu.la
@@ -129,12 +128,17 @@
 unit1308_DEPENDENCIES = $(top_builddir)/lib/libcurlu.la
 am__objects_9 = unit1309-first.$(OBJEXT)
 am_unit1309_OBJECTS = unit1309-unit1309.$(OBJEXT) $(am__objects_9)
 unit1309_OBJECTS = $(am_unit1309_OBJECTS)
 unit1309_LDADD = $(LDADD)
 unit1309_DEPENDENCIES = $(top_builddir)/lib/libcurlu.la
+am__objects_10 = unit1330-first.$(OBJEXT)
+am_unit1330_OBJECTS = unit1330-unit1330.$(OBJEXT) $(am__objects_10)
+unit1330_OBJECTS = $(am_unit1330_OBJECTS)
+unit1330_LDADD = $(LDADD)
+unit1330_DEPENDENCIES = $(top_builddir)/lib/libcurlu.la
 DEFAULT_INCLUDES = 
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
 am__mv = mv -f
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
@@ -144,17 +148,18 @@
 CCLD = $(CC)
 LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
 	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
 	$(LDFLAGS) -o $@
 SOURCES = $(unit1300_SOURCES) $(unit1301_SOURCES) $(unit1302_SOURCES) \
 	$(unit1303_SOURCES) $(unit1304_SOURCES) $(unit1305_SOURCES) \
-	$(unit1307_SOURCES) $(unit1308_SOURCES) $(unit1309_SOURCES)
+	$(unit1307_SOURCES) $(unit1308_SOURCES) $(unit1309_SOURCES) \
+	$(unit1330_SOURCES)
 DIST_SOURCES = $(unit1300_SOURCES) $(unit1301_SOURCES) \
 	$(unit1302_SOURCES) $(unit1303_SOURCES) $(unit1304_SOURCES) \
 	$(unit1305_SOURCES) $(unit1307_SOURCES) $(unit1308_SOURCES) \
-	$(unit1309_SOURCES)
+	$(unit1309_SOURCES) $(unit1330_SOURCES)
 am__can_run_installinfo = \
   case $$AM_UPDATE_INFO_DIR in \
     n|no|NO) false;; \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
 ETAGS = etags
@@ -191,12 +196,13 @@
 CURL_DISABLE_POP3 = @CURL_DISABLE_POP3@
 CURL_DISABLE_PROXY = @CURL_DISABLE_PROXY@
 CURL_DISABLE_RTSP = @CURL_DISABLE_RTSP@
 CURL_DISABLE_SMTP = @CURL_DISABLE_SMTP@
 CURL_DISABLE_TELNET = @CURL_DISABLE_TELNET@
 CURL_DISABLE_TFTP = @CURL_DISABLE_TFTP@
+CURL_LT_SHLIB_VERSIONED_FLAVOUR = @CURL_LT_SHLIB_VERSIONED_FLAVOUR@
 CURL_NETWORK_AND_TIME_LIBS = @CURL_NETWORK_AND_TIME_LIBS@
 CURL_NETWORK_LIBS = @CURL_NETWORK_LIBS@
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
@@ -284,13 +290,12 @@
 USE_OPENLDAP = @USE_OPENLDAP@
 USE_POLARSSL = @USE_POLARSSL@
 USE_SCHANNEL = @USE_SCHANNEL@
 USE_SSLEAY = @USE_SSLEAY@
 USE_WINDOWS_SSPI = @USE_WINDOWS_SSPI@
 VERSION = @VERSION@
-VERSIONED_FLAVOUR = @VERSIONED_FLAVOUR@
 VERSIONNUM = @VERSIONNUM@
 ZLIB_LIBS = @ZLIB_LIBS@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
 abs_top_builddir = @abs_top_builddir@
 abs_top_srcdir = @abs_top_srcdir@
@@ -349,13 +354,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at http://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -370,13 +375,13 @@
 @USE_EMBEDDED_ARES_FALSE@AM_CPPFLAGS = -I$(top_builddir)/include/curl \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_builddir)/include \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_srcdir)/include \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_builddir)/lib \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_srcdir)/lib \
 @USE_EMBEDDED_ARES_FALSE@	-I$(top_srcdir)/tests/libtest \
-@USE_EMBEDDED_ARES_FALSE@	-DUNITTESTS $(am__append_1)
+@USE_EMBEDDED_ARES_FALSE@	-DCURL_STATICLIB -DUNITTESTS
 
 # Specify our include paths here, and do it relative to $(top_srcdir) and
 # $(top_builddir), to ensure that these paths which belong to the library
 # being currently built and tested are searched before the library which
 # might possibly already be installed in the system.
 #
@@ -391,25 +396,25 @@
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/include \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/include \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/lib \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/lib \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/tests/libtest \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/ares \
-@USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/ares -DUNITTESTS \
-@USE_EMBEDDED_ARES_TRUE@	$(am__append_1)
+@USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/ares -DCURL_STATICLIB \
+@USE_EMBEDDED_ARES_TRUE@	-DUNITTESTS
 EXTRA_DIST = Makefile.inc
 LDADD = $(top_builddir)/lib/libcurlu.la @LDFLAGS@ @LIBCURL_LIBS@
 DEPENDENCIES = $(top_builddir)/lib/libcurlu.la
 UNITFILES = curlcheck.h \
  ../libtest/test.h \
  ../libtest/first.c
 
 
 # These are all unit test programs
 UNITPROGS = unit1300 unit1301 unit1302 unit1303 unit1304 unit1305 unit1307 \
- unit1308 unit1309
+ unit1308 unit1309 unit1330
 
 unit1300_SOURCES = unit1300.c $(UNITFILES)
 unit1300_CPPFLAGS = $(AM_CPPFLAGS)
 unit1301_SOURCES = unit1301.c $(UNITFILES)
 unit1301_CPPFLAGS = $(AM_CPPFLAGS)
 unit1302_SOURCES = unit1302.c $(UNITFILES)
@@ -423,12 +428,14 @@
 unit1307_SOURCES = unit1307.c $(UNITFILES)
 unit1307_CPPFLAGS = $(AM_CPPFLAGS)
 unit1308_SOURCES = unit1308.c $(UNITFILES)
 unit1308_CPPFLAGS = $(AM_CPPFLAGS)
 unit1309_SOURCES = unit1309.c $(UNITFILES)
 unit1309_CPPFLAGS = $(AM_CPPFLAGS)
+unit1330_SOURCES = unit1330.c $(UNITFILES)
+unit1330_CPPFLAGS = $(AM_CPPFLAGS)
 all: all-am
 
 .SUFFIXES:
 .SUFFIXES: .c .lo .o .obj
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
 	@for dep in $?; do \
@@ -494,12 +501,15 @@
 unit1308$(EXEEXT): $(unit1308_OBJECTS) $(unit1308_DEPENDENCIES) $(EXTRA_unit1308_DEPENDENCIES) 
 	@rm -f unit1308$(EXEEXT)
 	$(LINK) $(unit1308_OBJECTS) $(unit1308_LDADD) $(LIBS)
 unit1309$(EXEEXT): $(unit1309_OBJECTS) $(unit1309_DEPENDENCIES) $(EXTRA_unit1309_DEPENDENCIES) 
 	@rm -f unit1309$(EXEEXT)
 	$(LINK) $(unit1309_OBJECTS) $(unit1309_LDADD) $(LIBS)
+unit1330$(EXEEXT): $(unit1330_OBJECTS) $(unit1330_DEPENDENCIES) $(EXTRA_unit1330_DEPENDENCIES) 
+	@rm -f unit1330$(EXEEXT)
+	$(LINK) $(unit1330_OBJECTS) $(unit1330_LDADD) $(LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
@@ -519,12 +529,14 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1307-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1307-unit1307.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1308-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1308-unit1308.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1309-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1309-unit1309.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1330-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit1330-unit1330.Po@am__quote@
 
 .c.o:
 @am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@@ -793,12 +805,40 @@
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1309_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unit1309-first.obj -MD -MP -MF $(DEPDIR)/unit1309-first.Tpo -c -o unit1309-first.obj `if test -f '../libtest/first.c'; then $(CYGPATH_W) '../libtest/first.c'; else $(CYGPATH_W) '$(srcdir)/../libtest/first.c'; fi`
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/unit1309-first.Tpo $(DEPDIR)/unit1309-first.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../libtest/first.c' object='unit1309-first.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1309_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unit1309-first.obj `if test -f '../libtest/first.c'; then $(CYGPATH_W) '../libtest/first.c'; else $(CYGPATH_W) '$(srcdir)/../libtest/first.c'; fi`
 
+unit1330-unit1330.o: unit1330.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unit1330-unit1330.o -MD -MP -MF $(DEPDIR)/unit1330-unit1330.Tpo -c -o unit1330-unit1330.o `test -f 'unit1330.c' || echo '$(srcdir)/'`unit1330.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/unit1330-unit1330.Tpo $(DEPDIR)/unit1330-unit1330.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='unit1330.c' object='unit1330-unit1330.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unit1330-unit1330.o `test -f 'unit1330.c' || echo '$(srcdir)/'`unit1330.c
+
+unit1330-unit1330.obj: unit1330.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unit1330-unit1330.obj -MD -MP -MF $(DEPDIR)/unit1330-unit1330.Tpo -c -o unit1330-unit1330.obj `if test -f 'unit1330.c'; then $(CYGPATH_W) 'unit1330.c'; else $(CYGPATH_W) '$(srcdir)/unit1330.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/unit1330-unit1330.Tpo $(DEPDIR)/unit1330-unit1330.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='unit1330.c' object='unit1330-unit1330.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unit1330-unit1330.obj `if test -f 'unit1330.c'; then $(CYGPATH_W) 'unit1330.c'; else $(CYGPATH_W) '$(srcdir)/unit1330.c'; fi`
+
+unit1330-first.o: ../libtest/first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unit1330-first.o -MD -MP -MF $(DEPDIR)/unit1330-first.Tpo -c -o unit1330-first.o `test -f '../libtest/first.c' || echo '$(srcdir)/'`../libtest/first.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/unit1330-first.Tpo $(DEPDIR)/unit1330-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../libtest/first.c' object='unit1330-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unit1330-first.o `test -f '../libtest/first.c' || echo '$(srcdir)/'`../libtest/first.c
+
+unit1330-first.obj: ../libtest/first.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unit1330-first.obj -MD -MP -MF $(DEPDIR)/unit1330-first.Tpo -c -o unit1330-first.obj `if test -f '../libtest/first.c'; then $(CYGPATH_W) '../libtest/first.c'; else $(CYGPATH_W) '$(srcdir)/../libtest/first.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/unit1330-first.Tpo $(DEPDIR)/unit1330-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../libtest/first.c' object='unit1330-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(unit1330_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unit1330-first.obj `if test -f '../libtest/first.c'; then $(CYGPATH_W) '../libtest/first.c'; else $(CYGPATH_W) '$(srcdir)/../libtest/first.c'; fi`
+
 mostlyclean-libtool:
 	-rm -f *.lo
 
 clean-libtool:
 	-rm -rf .libs _libs
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/unit/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0/tests/unit/Makefile.inc	2013-01-20 21:30:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit/Makefile.inc	2013-04-12 02:46:54.000000000 +0800
@@ -3,13 +3,13 @@
 UNITFILES = curlcheck.h \
  ../libtest/test.h \
  ../libtest/first.c
 
 # These are all unit test programs
 UNITPROGS = unit1300 unit1301 unit1302 unit1303 unit1304 unit1305 unit1307 \
- unit1308 unit1309
+ unit1308 unit1309 unit1330
 
 unit1300_SOURCES = unit1300.c $(UNITFILES)
 unit1300_CPPFLAGS = $(AM_CPPFLAGS)
 
 unit1301_SOURCES = unit1301.c $(UNITFILES)
 unit1301_CPPFLAGS = $(AM_CPPFLAGS)
@@ -32,6 +32,9 @@
 unit1308_SOURCES = unit1308.c $(UNITFILES)
 unit1308_CPPFLAGS = $(AM_CPPFLAGS)
 
 unit1309_SOURCES = unit1309.c $(UNITFILES)
 unit1309_CPPFLAGS = $(AM_CPPFLAGS)
 
+unit1330_SOURCES = unit1330.c $(UNITFILES)
+unit1330_CPPFLAGS = $(AM_CPPFLAGS)
+
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/tests/unit: unit1330.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.29.0: vc6curl.dsw
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0: vs
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.30.0/winbuild: Makefile.msvc.names

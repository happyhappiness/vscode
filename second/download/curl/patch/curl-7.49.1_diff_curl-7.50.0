diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/acinclude.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/acinclude.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/acinclude.m4	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/acinclude.m4	2016-07-21 06:31:36.000000000 +0800
@@ -2562,14 +2562,14 @@
 dnl Check if a default ca-bundle should be used
 dnl
 dnl regarding the paths this will scan:
 dnl /etc/ssl/certs/ca-certificates.crt Debian systems
 dnl /etc/pki/tls/certs/ca-bundle.crt Redhat and Mandriva
 dnl /usr/share/ssl/certs/ca-bundle.crt old(er) Redhat
-dnl /usr/local/share/certs/ca-root.crt FreeBSD
-dnl /etc/ssl/cert.pem OpenBSD
+dnl /usr/local/share/certs/ca-root-nss.crt FreeBSD
+dnl /etc/ssl/cert.pem OpenBSD, FreeBSD (symlink)
 dnl /etc/ssl/certs/ (ca path) SUSE
 
 AC_DEFUN([CURL_CHECK_CA_BUNDLE], [
 
   AC_MSG_CHECKING([default CA cert bundle/path])
 
@@ -2637,13 +2637,13 @@
           cac="$ac_default_prefix/share/curl/curl-ca-bundle.crt"
         fi
 
         for a in /etc/ssl/certs/ca-certificates.crt \
                  /etc/pki/tls/certs/ca-bundle.crt \
                  /usr/share/ssl/certs/ca-bundle.crt \
-                 /usr/local/share/certs/ca-root.crt \
+                 /usr/local/share/certs/ca-root-nss.crt \
                  /etc/ssl/cert.pem \
                  "$cac"; do
           if test -f "$a"; then
             ca="$a"
             break
           fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/CHANGES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/CHANGES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/CHANGES	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/CHANGES	2016-07-21 16:56:49.000000000 +0800
@@ -3,12 +3,556 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                                   Changelog
 
+Version 7.50.0 (21 Jul 2016)
+
+Daniel Stenberg (21 Jul 2016)
+- RELEASE-NOTES: version 7.50.0 ready
+
+- THANKS: 13 new contributors from the 7.50.0 release
+
+Jay Satiro (21 Jul 2016)
+- winbuild: fix embedded manifest option
+  
+  Embedded manifest option didn't work due to typo.
+  
+  Reported-by: Stefan Kanthak
+
+- vauth: Fix memleak by freeing credentials if out of memory
+  
+  This is a follow up to the parent commit dcdd4be which fixes one leak
+  but creates another by failing to free the credentials handle if out of
+  memory. Also there's a second location a few lines down where we fail to
+  do same. This commit fixes both of those issues.
+
+Daniel Stenberg (20 Jul 2016)
+- [Saurav Babu brought this change]
+
+  vauth: Fixed memory leak due to function returning without free
+  
+  This patch allocates memory to "output_token" only when it is required
+  so that memory is not leaked if function returns.
+
+- test558: updated after ipv6-check move
+  
+  Follow-up commit to c50980807c5 to make this test pass.
+
+Jay Satiro (20 Jul 2016)
+- connect: disable TFO on Linux when using SSL
+  
+  - Linux TFO + TLS is not implemented yet.
+  
+  Bug: https://github.com/curl/curl/issues/907
+
+Daniel Stenberg (19 Jul 2016)
+- ROADMAP: QUIC and TLS 1.3
+
+- RELEASE-NOTES: synced with c50980807c5
+
+Jay Satiro (18 Jul 2016)
+- [Brian Prodoehl brought this change]
+
+  curl_global_init: Check if IPv6 works
+  
+  - Curl_ipv6works() is not thread-safe until after the first call, so
+  call it once during global init to avoid a possible race condition.
+  
+  Bug: https://github.com/curl/curl/issues/915
+  PR: https://github.com/curl/curl/pull/918
+
+- [Timothy Polich brought this change]
+
+  CURLMOPT_SOCKETFUNCTION.3: fix typo
+  
+  Closes https://github.com/curl/curl/pull/914
+
+- [Miroslav Franc brought this change]
+
+  library: Fix memory leaks found during static analysis
+  
+  Closes https://github.com/curl/curl/pull/913
+
+- [Viktor Szakats brought this change]
+
+  cookie.c: Fix misleading indentation
+  
+  Closes https://github.com/curl/curl/pull/911
+
+- FAQ: Update FTP directory listing section for MLSD command
+  
+  Explain how some FTP servers support the machine readable listing
+  format MLSD from RFC 3659 and compare it to LIST.
+  
+  Ref: https://github.com/curl/curl/issues/906
+
+Daniel Stenberg (1 Jul 2016)
+- [Sergei Nikulov brought this change]
+
+  Appveyor: Updates for options - CURL_STATICLIB/BUILD_TESTING
+  
+  Closes #892
+
+- TODO: 17.4 also brings more HTTP/2 support
+
+- TODO: try next proxy if one doesn't work
+  
+  Closes #896
+
+- conn: don't free easy handle data in handler->disconnect
+  
+  Reported-by: Gou Lingfeng
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0139.html
+
+- test1244: test different proxy ports same URL
+
+- curl_global_init.3: improved formatting of the flags
+
+- curl_global_init.3: expand on the SSL and WIN32 bits purpose
+  
+  Reported-by: Richard Gray
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0136.html
+
+- [Michael Kaufmann brought this change]
+
+  cleanup: minor code cleanup in Curl_http_readwrite_headers()
+  
+  - the expression of an 'if' was always true
+  - a 'while' contained a condition that was always true
+  - use 'if(k->exp100 > EXP100_SEND_DATA)' instead of 'if(k->exp100)'
+  - fixed a typo
+  
+  Closes #889
+
+- SFTP: set a generic error when no SFTP one exists...
+  
+  ... as otherwise we could get a 0 which would count as no error and we'd
+  wrongly continue and could end up segfaulting.
+  
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0052.html
+  Reported-by: 暖和的和暖
+
+- ROADMAP: http2 tests are merged, mention http2 perf
+
+- docs/README.md: to render nicer pages on github
+  
+  ... as previously the README.cmake would be picked and put at the bottom
+  of the docs page there and it wasn't very representative!
+
+- README.md: change host name for the svg logo
+  
+  rawgit.com asks to use the domain cdn.rawgit.com for production
+  
+  See #900
+
+- [Viktor Szakats brought this change]
+
+  README.md: use the SVG logo
+
+- README.md: logo on top!
+
+- KNOWN_BUGS: 3.4 POP3 expects "CRLF.CRLF" eob for some
+  
+  Closes #740
+
+- RELEASE-NOTES: synced with d61c80515aa8
+
+- [Michael Osipov brought this change]
+
+  acinclude.m4: improve autodetection of CA bundle on FreeBSD
+  
+  The FreeBSD Port security/ca_root_nss installs the Mozilla NSS CA bundle
+  to /usr/local/share/certs/ca-root-nss.crt. Use this bundle in the
+  discovery process.
+  
+  This change also removes the former FreeBSD path that has been obsolete
+  for 8 years since this FreeBSD ports commit:
+  https://svnweb.freebsd.org/ports/head/security/?view=revision&revision=215953
+  
+  Closes #894
+
+- configure: don't specify .lib for libs on windows
+  
+  Another follow up for crypt32.lib linking with winssl
+
+- configure: fix winssl LIBS change typo
+  
+  follow-up from 120bf29e
+
+- TODO: "TCP Fast Open" is done, add monitor pool connections
+
+- configure: add crypt32.lib for winssl builds
+  
+  Necessary since 6cabd78531f
+
+- Makefile.vc: link with crypt32.lib for winssl builds
+  
+  Necessary since 6cabd78531f
+  
+  Fixes #853
+
+- [Joel Depooter brought this change]
+
+  VC: Add crypt32.lib to Visual Sudio project template files
+  
+  Closes #854
+
+- vc: fix the build for schannel certinfo support
+  
+  Broken since 6cabd785, which adds use of the Curl_extract_certinfo
+  function from the x509asn1.c file.
+
+- typedefs: use the full structs in internal code...
+  
+  ... and save the typedef'ed names for headers and external APIs.
+
+- internals: rename the SessionHandle struct to Curl_easy
+
+- headers: forward declare CURL, CURLM and CURLSH as structs
+  
+  Instead of typedef'ing to void, typedef to their corresponding actual
+  struct names to allow compilers to type-check.
+  
+  Assisted-by: Reinhard Max
+
+Jay Satiro (22 Jun 2016)
+- vtls: Only call add/getsession if session id is enabled
+  
+  Prior to this change we called Curl_ssl_getsessionid and
+  Curl_ssl_addsessionid regardless of whether session ID reusing was
+  enabled. According to comments that is in case session ID reuse was
+  disabled but then later enabled.
+  
+  The old way was not intuitive and probably not something users expected.
+  When a user disables session ID caching I'd guess they don't expect the
+  session ID to be cached anyway in case the caching is later enabled.
+
+Daniel Stenberg (22 Jun 2016)
+- curl.1: the used progress meter suffix is k in lower case
+  
+  Closes #883
+
+- [Sergei Nikulov brought this change]
+
+  cmake: now using BUILD_TESTING=ON/OFF
+  
+  CMake build now using BUILD_TESTING=ON/OFF (default is OFF) to build
+  tests and enabling CTest integration. Options BUILD_CURL_TESTS and
+  BUILD_DASHBOARD_REPORTS was removed.
+  
+  Closes #882
+  
+  Reviewed-by: Brad King
+
+- [Michael Kaufmann brought this change]
+
+  cleanup: fix method names in code comments
+  
+  Closes #887
+
+Kamil Dudka (21 Jun 2016)
+- curl-compilers.m4: improve detection of GCC's -fvisibility= flag
+  
+  Some builds of GCC produce output on both stdout and stderr when --help
+  --verbose is used.  The 2>&1 redirection caused them to be arbitrarily
+  interleaved with each other because of stream buffering.  Consequently,
+  grep failed to match the fvisibility= string in the mixed output, even
+  though the string was present in GCC's standard output.
+  
+  This led to silently disabling symbol hiding in some builds of curl.
+
+Daniel Stenberg (19 Jun 2016)
+- tests: fix the HTTP/2 tests
+  
+  The HTTP/2 tests brought with commit bf05606ef1f were using the internal
+  name 'http2' for the HTTP/2 server, while in fact that name was already
+  used for the second instance of the HTTP server. This made tests using
+  the second instance (like test 2050) fail after a HTTP/2 test had run.
+  
+  The server is now known as HTTP/2 internally and within the <server>
+  section in test cases. 1700, 1701 and 1702 were updated accordingly.
+
+- openssl: use more 'const' to fix build warnings with 1.1.0 branch
+
+- curl.1: missed 'T' in the progress unit suffixes
+
+- curl.1: mention the unix for the progress meter
+
+Patrick Monnerat (16 Jun 2016)
+- os400: add new definitions to ILE/RPG binding.
+
+Daniel Stenberg (16 Jun 2016)
+- openssl: fix cert check with non-DNS name fields present
+  
+  Regression introduced in 5f5b62635 (released in 7.48.0)
+  
+  Reported-by: Fabian Ruff
+  Fixes #875
+
+Dan Fandrich (16 Jun 2016)
+- axtls: Use Curl_wait_ms instead of the less-portable usleep
+
+- axtls: Fixed compile after compile 31c521b0
+
+- tests: Added HTTP proxy keywords to tests 1141 & 1142
+
+Jay Satiro (15 Jun 2016)
+- [Sergei Nikulov brought this change]
+
+  cmake: Fix build with winldap
+  
+  Bug: https://github.com/curl/curl/pull/874
+  Reported-by: Sergei Nikulov
+
+- CURLOPT_POSTFIELDS.3: Clarify what happens when set empty
+  
+  When CURLOPT_POSTFIELDS is set to an empty string libcurl will send a
+  zero-byte POST. Prior to this change it was documented as sending data
+  from the read callback.
+  
+  This also changes the wording of what happens when empty or NULL so that
+  it's hopefully easier to understand for people whose primary language
+  isn't English.
+  
+  Bug: https://github.com/curl/curl/issues/862
+  Reported-by: Askar Safin
+
+- [Michael Wallner brought this change]
+
+  curl_multi_socket_action.3: Fix rewording
+  
+  - Remove some erroneous text.
+  
+  Closes https://github.com/curl/curl/pull/865
+
+- [Luo Jinghua brought this change]
+
+  resolve: enable protocol family logic for synthesized IPv6
+  
+  - Enable protocol family logic for IPv6 resolves even when support
+  for synthesized addresses is enabled.
+  
+  This is a follow up to the parent commit that added support for
+  synthesized IPv6 addresses from IPv4 on iOS/OS X. The protocol family
+  logic needed for IPv6 was inadvertently excluded if support for
+  synthesized addresses was enabled.
+  
+  Bug: https://github.com/curl/curl/issues/863
+  Ref: https://github.com/curl/curl/pull/866
+  Ref: https://github.com/curl/curl/pull/867
+
+Daniel Stenberg (7 Jun 2016)
+- [Luo Jinghua brought this change]
+
+  resolve: add support for IPv6 DNS64/NAT64 Networks on OS X + iOS
+  
+  Use getaddrinfo() to resolve the IPv4 address literal on iOS/Mac OS X.
+  If the current network interface doesn’t support IPv4, but supports
+  IPv6, NAT64, and DNS64.
+  
+  Closes #866
+  Fixes #863
+
+- tests: two more HTTP/2 tests
+  
+  1701 and 1702
+
+- runtests: don't display logs when http2 server fails to start
+
+- runtests: make stripfile work on stdout as well
+  
+  ... and have test 1700 use that to strip out the nghttpx server: headers
+
+- http2-tests: test1700 is the first real HTTP/2 test
+  
+  It requires that 'nghttpx' is in the PATH, and it will run the tests
+  using nghttpx as a front-end proxy in front of the standard HTTP/1 test
+  server. This uses HTTP/2 over plain TCP.
+  
+  If you like me have nghttpx installed in a custom path, you can run test 1700
+  like this:
+  
+  $ PATH=$PATH:$HOME/build-nghttp2/bin/ ./runtests.pl 1700
+
+- RELEASE-NOTES: synced with 34855feeb4c299
+
+Steve Holme (6 Jun 2016)
+- schannel: Disable ALPN on Windows < 8.1
+  
+  Calling QueryContextAttributes with SECPKG_ATTR_APPLICATION_PROTOCOL
+  fails on Windows < 8.1 so we need to disable ALPN on these OS versions.
+  
+  Inspiration provide by: Daniel Seither
+  
+  Closes #848
+  Fixes #840
+
+Jay Satiro (5 Jun 2016)
+- checksrc: Add LoadLibrary to the banned functions list
+  
+  LoadLibrary was supplanted by Curl_load_library for security
+  reasons in 6df916d.
+
+- http: Fix HTTP/2 connection reuse
+  
+  - Change the parser to not require a minor version for HTTP/2.
+  
+  HTTP/2 connection reuse broke when we changed from HTTP/2.0 to HTTP/2
+  in 8243a95 because the parser still expected a minor version.
+  
+  Bug: https://github.com/curl/curl/issues/855
+  Reported-by: Andrew Robbins, Frank Gevaerts
+
+Steve Holme (4 Jun 2016)
+- connect.c: Fixed compilation warning from commit 332e8d6164
+  
+  connect.c:952:5: warning: suggest explicit braces to avoid ambiguous 'else'
+
+- win32: Used centralised verify windows version function
+  
+  Closes #845
+
+- win32: Added verify windows version functionality
+
+- win32: Introduced centralised verify windows version function
+
+Kamil Dudka (3 Jun 2016)
+- tool_urlglob: fix off-by-one error in glob_parse()
+  
+  ... causing SIGSEGV while parsing URL with too many globs.
+  Minimal example:
+  
+  $ curl $(for i in $(seq 101); do printf '{a}'; done)
+  
+  Reported-by: Romain Coltel
+  Bug: https://bugzilla.redhat.com/1340757
+
+Daniel Stenberg (1 Jun 2016)
+- [Benjamin Kircher brought this change]
+
+  libcurl-multi.3: fix small typo
+  
+  Closes #850
+
+- [Viktor Szakats brought this change]
+
+  makefile.m32: add crypt32 for winssl builds
+  
+  Dependency added by 6cabd78
+  
+  Closes #849
+
+- [Ivan Avdeev brought this change]
+
+  vtls: fix ssl session cache race condition
+  
+  Sessionid cache management is inseparable from managing individual
+  session lifetimes. E.g. for reference-counted sessions (like those in
+  SChannel and OpenSSL engines) every session addition and removal
+  should be accompanied with refcount increment and decrement
+  respectively. Failing to do so synchronously leads to a race condition
+  that causes symptoms like use-after-free and memory corruption.
+  This commit:
+   - makes existing session cache locking explicit, thus allowing
+     individual engines to manage lock's scope.
+   - fixes OpenSSL and SChannel engines by putting refcount management
+     inside this lock's scope in relevant places.
+   - adds these explicit locking calls to other engines that use
+     sessionid cache to accommodate for this change. Note, however,
+     that it is unknown whether any of these engines could also have
+     this race.
+  
+  Bug: https://github.com/curl/curl/issues/815
+  Fixes #815
+  Closes #847
+
+- [Andrew Kurushin brought this change]
+
+  schannel: add CURLOPT_CERTINFO support
+  
+  Closes #822
+
+- RELEASE-NOTES: synced with 142ee9fa15002315
+
+- openssl: rename the private SSL_strerror
+  
+  ... to make it not look like an OpenSSL function
+
+- [Michael Kaufmann brought this change]
+
+  openssl: Use correct buffer sizes for error messages
+  
+  Closes #844
+
+- curl: fix -q [regression]
+  
+  This broke in 7.49.0 with commit e200034425a7625
+  
+  Fixes #842
+
+- URL parser: allow URLs to use one, two or three slashes
+  
+  Mostly in order to support broken web sites that redirect to broken URLs
+  that are accepted by browsers.
+  
+  Browsers are typically even more leniant than this as the WHATWG URL
+  spec they should allow an _infinite_ amount. I tested 8000 slashes with
+  Firefox and it just worked.
+  
+  Added test case 1141, 1142 and 1143 to verify the new parser.
+  
+  Closes #791
+
+- [Renaud Lehoux brought this change]
+
+  cmake: Added missing mbedTLS support
+  
+  Closes #837
+
+- [Renaud Lehoux brought this change]
+
+  mbedtls: removed unused variables
+  
+  Closes #838
+
+- [Frank Gevaerts brought this change]
+
+  http: add CURLINFO_HTTP_VERSION and %{http_version}
+  
+  Adds access to the effectively used http version to both libcurl and
+  curl.
+  
+  Closes #799
+
+- bump: start the journey toward 7.50.0
+
+- [Marcel Raad brought this change]
+
+  openssl: fix build with OPENSSL_NO_COMP
+  
+  With OPENSSL_NO_COMP defined, there is no function
+  SSL_COMP_free_compression_methods
+  
+  Closes #836
+
+- [Gisle Vanem brought this change]
+
+  memdebug: fix MSVC crash with -DMEMDEBUG_LOG_SYNC
+  
+  Fixes #828
+
+- [Jonathan brought this change]
+
+  README.md: polish
+  
+  Closes #834
+
+- RELEASE-NOTES: fix vuln link
+
 Version 7.49.1 (30 May 2016)
 
 Daniel Stenberg (30 May 2016)
 - RELEASE-NOTES: 7.49.1
 
 - [Steve Holme brought this change]
@@ -5123,493 +5667,6 @@
 
   CURLINFO_SSL_ENGINES.3: add short description
 
 - [Svyatoslav Mishyn brought this change]
 
   CURLINFO_CONTENT_LENGTH_UPLOAD.3: replace "receive" with "get" for consistency
-
-- [Svyatoslav Mishyn brought this change]
-
-  CURLINFO_REDIRECT_TIME.3: remove redundant '!'
-
-Kamil Dudka (4 Sep 2015)
-- Revert "has: generate the curl/has.h header"
-  
-  This reverts commit a60bde79f9adeb135d5c642a07f0d783fbfbbc25 I have
-  pushed by mistake.  Apologies for my incompetent use of the git repo!
-
-- nss: do not directly access SSL_ImplementedCiphers[]
-  
-  It causes dynamic linking issues at run-time after an update of NSS.
-  
-  Bug: https://lists.fedoraproject.org/pipermail/devel/2015-September/214117.html
-
-- [Daniel Stenberg brought this change]
-
-  has: generate the curl/has.h header
-  
-  changed macro name, moved and renamed script to become docs/libcurl/has.pl,
-  generate code that is checksrc compliant
-
-Daniel Stenberg (3 Sep 2015)
-- gitignore: ignore more generated VC Makefiles
-
-- projects/Windows/.gitignore: ignore generated files for release
-
-- http2: don't pass on Connection: headers
-  
-  RFC 7540 section 8.1.2.2 states: "An endpoint MUST NOT generate an
-  HTTP/2 message containing connection-specific header fields; any message
-  containing connection-specific header fields MUST be treated as
-  malformed"
-  
-  Closes #401
-
-- curl.1: update RFC references
-
-- CURLOPT_POSTREDIR.3: update RFC number and section
-
-- CURLOPT_FOLLOWLOCATION.3: mention methods for redirects
-  
-  and some general cleaning up
-
-- [Marcel Raad brought this change]
-
-  inet_pton.c: Fix MSVC run-time check failure (2)
-  
-  This fixes another run-time check failure because of a narrowing cast on
-  Visual C++.
-  
-  Closes #408
-
-Jay Satiro (3 Sep 2015)
-- docs: Warn about any-domain cookies and multiple transfers
-  
-  - Warn that cookies without a domain are sent to any domain:
-  CURLOPT_COOKIELIST, CURLOPT_COOKIEFILE, --cookie
-  
-  - Note that imported Set-Cookie cookies without a domain are no longer
-  exported:
-  CURLINFO_COOKIELIST, CURLOPT_COOKIEJAR, --cookie-jar
-
-Steve Holme (2 Sep 2015)
-- tool_sdecls.h: Fixed compilation warning from commit 4a889441d3
-  
-  tool_sdecls.h:139 warning: comma at end of enumerator list
-
-Daniel Stenberg (2 Sep 2015)
-- opts: 8 more CURLINFO* options as stand-alone man pages
-
-- RELEASE-NOTES: synced with c764cb4add1a8
-
-- man-pages: more SEE ALSO links
-
-- opts: more CURLINFO_* options as stand-alone man pages
-
-Steve Holme (31 Aug 2015)
-- sasl: Only define Curl_sasl_digest_get_pair() when CRYPTO_AUTH enabled
-  
-  Introduced in commit 59f3f92ba6 this function is only implemented when
-  CURL_DISABLE_CRYPTO_AUTH is not defined. As such we shouldn't define
-  the function in the header file either.
-
-- sasl: Updated SPN variables and comments for consistency
-  
-  In places the "host name" and "realm" variable was referred to as
-  "instance" whilst in others it was referred to as "host".
-
-Daniel Stenberg (30 Aug 2015)
-- configure: check for HMAC_Update in openssl
-  
-  Turns out HMAC_Init is now deprecated in openssl master (and I spelled
-  HMAC_Init_ex wrong in previous commit)
-
-Steve Holme (30 Aug 2015)
-- win32: Use DES_set_odd_parity() from OpenSSL/BoringSSL by default
-  
-  Set HAVE_DES_SET_ODD_PARITY when using OpenSSL/BoringSSL as native
-  Windows builds don't use the autoconf tools.
-
-- des: Fixed compilation warning from commit 613e5022fe
-  
-  curl_ntlm_core.c:150: warning 'Curl_des_set_odd_parity' undefined;
-                        assuming extern returning int
-
-- buildconf.bat: Fixed double blank line in 'curl manual' warning output
-
-- makefiles: Added our standard copyright header
-  
-  But kept the original author, when they were specified in a comment, as
-  the initial copyright holder.
-
-Jay Satiro (29 Aug 2015)
-- CURLOPT_FILETIME.3: CURLINFO_FILETIME has its own manpage now
-
-Daniel Stenberg (29 Aug 2015)
-- CURLINFO_RESPONSE_CODE.3: added short description
-
-- opts: 7 initial CURLINFO_* options as stand-alone man pages
-
-- [Nikolai Kondrashov brought this change]
-
-  libcurl.m4: Put braces around empty if body
-  
-  Put braces around empty "if" body in libcurl.m4 check to avoid warning:
-  
-          suggest braces around empty body in an 'if' statement
-  
-  and make it work with -Werror builds.
-  
-  Closes #402
-
-- [Svyatoslav Mishyn brought this change]
-
-  curl_easy_escape.3: escape '\n'
-  
-  Closes #398
-
-- [Svyatoslav Mishyn brought this change]
-
-  curl_easy_{escape,setopt}.3: fix example
-  
-  remove redundant '}'
-
-- [Sergei Nikulov brought this change]
-
-  cmake: added Windows SSL support
-  
-  Closes #399
-
-- curl: point out the conflicting HTTP methods if used
-  
-  It isn't always clear to the user which options that cause the HTTP
-  methods to conflict so by spelling them out it should hopefully be
-  easier to understand why curl complains.
-
-- curl: clarify that users can only specify one _METHOD_
-
-- [Svyatoslav Mishyn brought this change]
-
-  curl_easy_{escape,unescape}.3: "char *" vs. "const char *"
-  
-  Closes #395
-
-Patrick Monnerat (24 Aug 2015)
-- os400: include new options in wrappers and update ILE/RPG binding.
-
-Daniel Stenberg (24 Aug 2015)
-- KNOWN_BUGS: #2, not reading a HEAD response-body is not a bug
-  
-  ... since HTTP is forbidden to return any such.
-
-- KNOWN_BUGS: #78 zero-length files is already fixed!
-
-- [Razvan Cojocaru brought this change]
-
-  getinfo: added CURLINFO_ACTIVESOCKET
-  
-  This patch addresses known bug #76, where on 64-bit Windows SOCKET is 64
-  bits wide, but long is only 32, making CURLINFO_LASTSOCKET unreliable.
-  
-  Signed-off-by: Razvan Cojocaru <rcojocaru@bitdefender.com>
-
-- http2: remove dead code
-  
-  Leftovers from when we removed the private socket hash.
-  
-  Coverity CID 1317365, "Logically dead code"
-
-- ntlm: mark deliberate switch case fall-through
-  
-  Coverity CID 1317367, "Missing break in switch"
-
-- http2: on_frame_recv: get a proper 'conn' for the debug logging
-  
-  "Explicit null dereferenced (FORWARD_NULL)"
-  
-  Coverity CID 1317366
-
-- RELEASE-NOTES: synced with 2acaf3c804
-
-Dan Fandrich (23 Aug 2015)
-- tool: fix memory leak with --proto-default option
-
-Jay Satiro (22 Aug 2015)
-- [Nathaniel Waisbrot brought this change]
-
-  CURLOPT_DEFAULT_PROTOCOL: added
-  
-  - Add new option CURLOPT_DEFAULT_PROTOCOL to allow specifying a default
-  protocol for schemeless URLs.
-  
-  - Add new tool option --proto-default to expose
-  CURLOPT_DEFAULT_PROTOCOL.
-  
-  In the case of schemeless URLs libcurl will behave in this way:
-  
-  When the option is used libcurl will use the supplied default.
-  
-  When the option is not used, libcurl will follow its usual plan of
-  guessing from the hostname and falling back to 'http'.
-
-- runtests: Allow for spaces in server-verify curl custom path
-
-Daniel Stenberg (22 Aug 2015)
-- NTLM: recent boringssl brought DES_set_odd_parity back
-  
-  ... so improve the #ifdefs for using our local implementation.
-
-- configure: detect latest boringssl
-  
-  Since boringssl brought back DES_set_odd_parity again, it cannot be used
-  to differentiate from boringssl. Using the OPENSSL_IS_BORINGSSL define
-  seems better anyway.
-  
-  URL: https://android.googlesource.com/platform/external/curl/+/f551028d5caab29d4b4a4ae8c159c76c3cfd4887%5E!/
-  Original-patch-by: Bertrand Simonnet
-  
-  Closes #393
-
-- configure: change functions to detect openssl (clones)
-  
-  ... since boringssl moved the former ones and the check started to fail.
-  
-  URL: https://android.googlesource.com/platform/external/curl/+/f551028d5caab29d4b4a4ae8c159c76c3cfd4887%5E!/
-  Original-patch-by: Bertrand Simonnet
-
-- [Alessandro Ghedini brought this change]
-
-  openssl: handle lack of server cert when strict checking disabled
-  
-  If strict certificate checking is disabled (CURLOPT_SSL_VERIFYPEER
-  and CURLOPT_SSL_VERIFYHOST are disabled) do not fail if the server
-  doesn't present a certificate at all.
-  
-  Closes #392
-
-- ftp: clear the do_more bit when the server has connected
-  
-  The multi state machine would otherwise go into the DO_MORE state after
-  DO, even for the case when the FTP state machine had already performed
-  those duties, which caused libcurl to get stuck in that state and fail
-  miserably. This occured for for active ftp uploads.
-  
-  Reported-by: Patricia Muscalu
-
-- [Jactry Zeng brought this change]
-
-  travis.yml: Add OS X testbot.
-
-- [Rémy Léone brought this change]
-
-  travis: Upgrading to container based build
-  
-  http://docs.travis-ci.com/user/migrating-from-legacy
-  
-  Closes #388
-
-- RELEASE-NOTES: synced with 14ff86256b13e
-
-- [Erik Janssen brought this change]
-
-  rtsp: stop reading empty DESCRIBE responses
-  
-  Based-on-patch-by: Jim Hollinger
-
-- [Erik Janssen brought this change]
-
-  rtsp: support basic/digest authentication
-
-- [Sam Roth brought this change]
-
-  CURLMOPT_PUSHFUNCTION.3: fix argument types
-  
-  Closes #389
-  Closes #386
-
-- [Marcel Raad brought this change]
-
-  inet_pton.c: Fix MSVC run-time check failure
-  
-  Visual Studio complains with a message box:
-  
-  "Run-Time Check Failure #1 - A cast to a smaller data type has caused a
-  loss of data.  If this was intentional, you should mask the source of
-  the cast with the appropriate bitmask.
-  
-  For example:
-  char c = (i & 0xFF);
-  
-  Changing the code in this way will not affect the quality of the
-  resulting optimized code."
-  
-  This is because only 'val' is cast to unsigned char, so the "& 0xff" has
-  no effect.
-  
-  Closes #387
-
-Jay Satiro (18 Aug 2015)
-- docs: Update the redirect protocols disabled by default
-  
-  - Clarify that FILE and SCP are disabled by default since 7.19.4
-  - Add that SMB and SMBS are disabled by default since 7.40.0
-  - Add CURLPROTO_SMBS to the list of protocols
-
-- gitignore: Sort for readability
-  
-  find . -name .gitignore -print0 | xargs -i -0 sort -o '{}' '{}'
-
-Daniel Stenberg (15 Aug 2015)
-- curl_easy_getinfo.3: fix superfluous space
-  
-  ... and changed "oriented" to "related"
-  
-  Closes #378
-
-- CURLOPT_HTTP_VERSION.3: connection re-use goes before version
-
-- [Daniel Kahn Gillmor brought this change]
-
-  curl.1: Document weaknesses in SSLv2 and SSLv3
-  
-  Acknowledge that SSLv3 is also widely considered to be insecure.
-  
-  Also, provide references for people who want to know more about why it's
-  insecure.
-
-Steve Holme (14 Aug 2015)
-- generate.bat: Added support for generating only the prerequisite files
-
-- generate.bat: Only call buildconf.bat if it exists
-
-- generate.bat: Fixed issues when ran in directories with special chars
-
-Daniel Stenberg (14 Aug 2015)
-- [Brad King brought this change]
-
-  cmake: Fix CurlTests check for gethostbyname_r with 5 arguments
-  
-  Fix the check code to pass 5 arguments instead of 6.  This typo was
-  introduced by commit aebfd4cfbf (cmake: fix gethostby{addr,name}_r in
-  CurlTests, 2014-10-31).
-
-Steve Holme (14 Aug 2015)
-- * buildconf.bat: Fixed issues when ran in directories with special chars
-  
-  Bug: https://github.com/bagder/curl/pull/379
-  Reported-by: Daniel Seither
-
-Jay Satiro (13 Aug 2015)
-- curl_global_init_mem.3: Stronger thread safety warning
-  
-  Bug: http://curl.haxx.se/mail/lib-2015-08/0016.html
-  Reported-by: Eric Ridge
-
-Daniel Stenberg (12 Aug 2015)
-- [Svyatoslav Mishyn brought this change]
-
-  curl_multi_add_handle.3: fix a typo
-  
-  "can not" => "cannot"
-  
-  closes #377
-
-- [Alessandro Ghedini brought this change]
-
-  docs: fix typos
-  
-  closes #376
-
-- bump: start working toward 7.45.0
-
-- THANKS: remove duplicate name
-
-- THANKS-filter: merge Todd's names
-
-- THANKS: 13 new contributors from the 7.44.0 RELEASE-NOTES
-
-Version 7.44.0 (11 Aug 2015)
-
-Daniel Stenberg (11 Aug 2015)
-- RELEASE-NOTES: synced with c75a1e775061
-
-- [Svyatoslav Mishyn brought this change]
-
-  curl_formget.3: correct return code
-  
-  Closes #375
-
-- [Svyatoslav Mishyn brought this change]
-
-  libcurl-tutorial.3: fix formatting
-  
-  Closes #374
-
-- [Svyatoslav Mishyn brought this change]
-
-  curl_easy_recv.3: fix formatting
-
-- [Anders Bakken brought this change]
-
-  http2: discard frames with no SessionHandle
-  
-  Return 0 instead of NGHTTP2_ERR_CALLBACK_FAILURE if we can't locate the
-  SessionHandle. Apparently mod_h2 will sometimes send a frame for a
-  stream_id we're finished with.
-  
-  Use nghttp2_session_get_stream_user_data and
-  nghttp2_session_set_stream_user_data to identify SessionHandles instead
-  of a hash.
-  
-  Closes #372
-
-- RELEASE-NOTES: synced with 9ee40ce2aba
-
-- [Viktor Szakats brought this change]
-
-  build: refer to fixed libidn versions
-  
-  closes #371
-
-- Revert "configure: disable libidn by default"
-  
-  This reverts commit e6749055d65398315fd77f5b5b8234c5552ac2d3.
-  
-  ... since libidn has since been fixed.
-
-- [Jakub Zakrzewski brought this change]
-
-  CMake: s/HAVE_GSS_API/HAVE_GSSAPI/ to match header define
-  
-  Otherwise the build only pretended to use GSS-API
-  
-  Closes #370
-
-- SFTP: fix range request off-by-one in size check
-  
-  Reported-by: Tim Stack
-  
-  Closes #359
-
-- test46: update cookie expire time
-  
-  ... since it went old and thus was expired and caused the test to fail!
-
-Steve Holme (9 Aug 2015)
-- generate.bat: Use buildconf.bat for prerequisite file generation
-
-- buildconf.bat: Tidy up of comments after recent commits
-
-- buildconf.bat: Added full generation of src\tool_hugehelp.c
-  
-  Added support for generating the full man page based on code from
-  generate.bat.
-
-- buildconf.bat: Added detection of groff, nroff, perl and gzip
-  
-  To allow for the full generation of tool_hugehelp.c added detection of
-  the required programs - based on code from generate.bat.
-
-- buildconf.bat: Move DOS variable clean-up code to separate function
-  
-  Rather than duplicate future variables, during clean-up of both success
-  and error conditions, use a common function that can be called by both.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/CMakeLists.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/CMakeLists.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/CMakeLists.txt	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/CMakeLists.txt	2016-07-21 06:31:36.000000000 +0800
@@ -69,13 +69,12 @@
 set(OS "\"${CMAKE_SYSTEM_NAME}\"")
 
 include_directories(${PROJECT_BINARY_DIR}/include/curl)
 include_directories( ${CURL_SOURCE_DIR}/include )
 
 option(BUILD_CURL_EXE "Set to ON to build cURL executable." ON)
-option(BUILD_CURL_TESTS "Set to ON to build cURL tests." ON)
 option(CURL_STATICLIB "Set to ON to build libcurl with static linking." OFF)
 option(ENABLE_ARES "Set to ON to enable c-ares support" OFF)
 option(ENABLE_THREADED_RESOLVER "Set to ON to enable POSIX threaded DNS lookup" OFF)
 
 option(ENABLE_DEBUG "Set to ON to enable curl debug features" OFF)
 option(ENABLE_CURLDEBUG "Set to ON to build with TrackMemory feature enabled" OFF)
@@ -105,18 +104,12 @@
   set(USE_ARES 1)
   find_package(CARES REQUIRED)
   list(APPEND CURL_LIBS ${CARES_LIBRARY} )
   set(CURL_LIBS ${CURL_LIBS} ${CARES_LIBRARY})
 endif()
 
-option(BUILD_DASHBOARD_REPORTS "Set to ON to activate reporting of cURL builds here http://www.cdash.org/CDashPublic/index.php?project=CURL" OFF)
-if(BUILD_DASHBOARD_REPORTS)
-  #INCLUDE(Dart)
-  include(CTest)
-endif(BUILD_DASHBOARD_REPORTS)
-
 if(MSVC)
   option(BUILD_RELEASE_DEBUG_DIRS "Set OFF to build each configuration to a separate directory" OFF)
   mark_as_advanced(BUILD_RELEASE_DEBUG_DIRS)
 endif()
 
 option(CURL_HIDDEN_SYMBOLS "Set to ON to hide libcurl internal symbols (=hide all symbols that aren't officially external)." ON)
@@ -327,17 +320,16 @@
   elseif(WIN32)
     set(CURL_WINDOWS_SSPI ON)
   endif()
 endif()
 
 if(NOT CURL_DISABLE_LDAP)
-
   if(WIN32)
     option(USE_WIN32_LDAP "Use Windows LDAP implementation" ON)
     if(USE_WIN32_LDAP)
-      check_library_exists("wldap32" cldap_open "" HAVE_WLDAP32)
+      check_library_exists_concat("wldap32" cldap_open HAVE_WLDAP32)
       if(NOT HAVE_WLDAP32)
         set(USE_WIN32_LDAP OFF)
       endif()
     endif()
   endif()
 
@@ -346,84 +338,84 @@
   set(CMAKE_LDAP_LIB "ldap" CACHE STRING "Name or full path to ldap library")
   set(CMAKE_LBER_LIB "lber" CACHE STRING "Name or full path to lber library")
 
   if(CMAKE_USE_OPENLDAP AND USE_WIN32_LDAP)
     message(FATAL_ERROR "Cannot use USE_WIN32_LDAP and CMAKE_USE_OPENLDAP at the same time")
   endif()
-  
+
   # Now that we know, we're not using windows LDAP...
-  if(NOT USE_WIN32_LDAP)
+  if(USE_WIN32_LDAP)
+    check_include_file_concat("winldap.h" HAVE_WINLDAP_H)
+    check_include_file_concat("winber.h"  HAVE_WINBER_H)
+  else()
     # Check for LDAP
     set(CMAKE_REQUIRED_LIBRARIES ${OPENSSL_LIBRARIES})
     check_library_exists_concat(${CMAKE_LDAP_LIB} ldap_init HAVE_LIBLDAP)
     check_library_exists_concat(${CMAKE_LBER_LIB} ber_init HAVE_LIBLBER)
-  else()
-    check_include_file_concat("winldap.h" HAVE_WINLDAP_H)
-    check_include_file_concat("winber.h"  HAVE_WINBER_H)
-  endif()
-  
-  set(CMAKE_REQUIRED_INCLUDES_BAK ${CMAKE_REQUIRED_INCLUDES})
-  set(CMAKE_LDAP_INCLUDE_DIR "" CACHE STRING "Path to LDAP include directory")
-  if(CMAKE_LDAP_INCLUDE_DIR)
-    list(APPEND CMAKE_REQUIRED_INCLUDES ${CMAKE_LDAP_INCLUDE_DIR})
-  endif()
-  check_include_file_concat("ldap.h"           HAVE_LDAP_H)
-  check_include_file_concat("lber.h"           HAVE_LBER_H)
-
-  if(NOT HAVE_LDAP_H)
-    message(STATUS "LDAP_H not found CURL_DISABLE_LDAP set ON")
-    set(CURL_DISABLE_LDAP ON CACHE BOOL "" FORCE)
-    set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_BAK}) #LDAP includes won't be used
-  elseif(NOT HAVE_LIBLDAP)
-    message(STATUS "LDAP library '${CMAKE_LDAP_LIB}' not found CURL_DISABLE_LDAP set ON")
-    set(CURL_DISABLE_LDAP ON CACHE BOOL "" FORCE)
-    set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_BAK}) #LDAP includes won't be used
-  else()
-    if(CMAKE_USE_OPENLDAP)
-      set(USE_OPENLDAP ON)
-    endif()
+
+    set(CMAKE_REQUIRED_INCLUDES_BAK ${CMAKE_REQUIRED_INCLUDES})
+    set(CMAKE_LDAP_INCLUDE_DIR "" CACHE STRING "Path to LDAP include directory")
     if(CMAKE_LDAP_INCLUDE_DIR)
-      include_directories(${CMAKE_LDAP_INCLUDE_DIR})
-    endif()
-    set(NEED_LBER_H ON)
-    set(_HEADER_LIST)
-    if(HAVE_WINDOWS_H)
-      list(APPEND _HEADER_LIST "windows.h")
-    endif()
-    if(HAVE_SYS_TYPES_H)
-      list(APPEND _HEADER_LIST "sys/types.h")
+      list(APPEND CMAKE_REQUIRED_INCLUDES ${CMAKE_LDAP_INCLUDE_DIR})
     endif()
-    list(APPEND _HEADER_LIST "ldap.h")
+    check_include_file_concat("ldap.h"           HAVE_LDAP_H)
+    check_include_file_concat("lber.h"           HAVE_LBER_H)
 
-    set(_SRC_STRING "")
-    foreach(_HEADER ${_HEADER_LIST})
-      set(_INCLUDE_STRING "${_INCLUDE_STRING}#include <${_HEADER}>\n")
-    endforeach()
+    if(NOT HAVE_LDAP_H)
+      message(STATUS "LDAP_H not found CURL_DISABLE_LDAP set ON")
+      set(CURL_DISABLE_LDAP ON CACHE BOOL "" FORCE)
+      set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_BAK}) #LDAP includes won't be used
+    elseif(NOT HAVE_LIBLDAP)
+      message(STATUS "LDAP library '${CMAKE_LDAP_LIB}' not found CURL_DISABLE_LDAP set ON")
+      set(CURL_DISABLE_LDAP ON CACHE BOOL "" FORCE)
+      set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_BAK}) #LDAP includes won't be used
+    else()
+      if(CMAKE_USE_OPENLDAP)
+        set(USE_OPENLDAP ON)
+      endif()
+      if(CMAKE_LDAP_INCLUDE_DIR)
+        include_directories(${CMAKE_LDAP_INCLUDE_DIR})
+      endif()
+      set(NEED_LBER_H ON)
+      set(_HEADER_LIST)
+      if(HAVE_WINDOWS_H)
+        list(APPEND _HEADER_LIST "windows.h")
+      endif()
+      if(HAVE_SYS_TYPES_H)
+        list(APPEND _HEADER_LIST "sys/types.h")
+      endif()
+      list(APPEND _HEADER_LIST "ldap.h")
 
-    set(_SRC_STRING
-      "
-      ${_INCLUDE_STRING}
-      int main(int argc, char ** argv)
-      {
-        BerValue *bvp = NULL;
-        BerElement *bep = ber_init(bvp);
-        ber_free(bep, 1);
-        return 0;
-      }"
-    )
-    set(CMAKE_REQUIRED_DEFINITIONS "${CMAKE_REQUIRED_DEFINITIONS} -DLDAP_DEPRECATED=1")
-    list(APPEND CMAKE_REQUIRED_LIBRARIES ${CMAKE_LDAP_LIB})
-    if(HAVE_LIBLBER)
-      list(APPEND CMAKE_REQUIRED_LIBRARIES ${CMAKE_LBER_LIB})
-    endif()
-    check_c_source_compiles("${_SRC_STRING}" NOT_NEED_LBER_H)
+      set(_SRC_STRING "")
+      foreach(_HEADER ${_HEADER_LIST})
+        set(_INCLUDE_STRING "${_INCLUDE_STRING}#include <${_HEADER}>\n")
+      endforeach()
 
-    if(NOT_NEED_LBER_H)
-      set(NEED_LBER_H OFF)
-    else()
-      set(CURL_TEST_DEFINES "${CURL_TEST_DEFINES} -DNEED_LBER_H")
+      set(_SRC_STRING
+        "
+        ${_INCLUDE_STRING}
+        int main(int argc, char ** argv)
+        {
+          BerValue *bvp = NULL;
+          BerElement *bep = ber_init(bvp);
+          ber_free(bep, 1);
+          return 0;
+        }"
+      )
+      set(CMAKE_REQUIRED_DEFINITIONS "${CMAKE_REQUIRED_DEFINITIONS} -DLDAP_DEPRECATED=1")
+      list(APPEND CMAKE_REQUIRED_LIBRARIES ${CMAKE_LDAP_LIB})
+      if(HAVE_LIBLBER)
+        list(APPEND CMAKE_REQUIRED_LIBRARIES ${CMAKE_LBER_LIB})
+      endif()
+      check_c_source_compiles("${_SRC_STRING}" NOT_NEED_LBER_H)
+
+      if(NOT_NEED_LBER_H)
+        set(NEED_LBER_H OFF)
+      else()
+        set(CURL_TEST_DEFINES "${CURL_TEST_DEFINES} -DNEED_LBER_H")
+      endif()
     endif()
   endif()
 
 endif()
 
 # No ldap, no ldaps.
@@ -575,12 +567,13 @@
     if(HAVE_SSPI_H)
       check_include_file_concat("schannel.h" HAVE_SCHANNEL_H)
       set(USE_WINDOWS_SSPI ON)
       if(HAVE_SCHANNEL_H)
         set(USE_SCHANNEL ON)
         set(SSL_ENABLED ON)
+        check_library_exists_concat("crypt32" CertFreeCertificateContext HAVE_LIBCRYPT32)
       endif()
     endif()
   endif()
 endif(NOT UNIX)
 
 check_include_file_concat("stdio.h"          HAVE_STDIO_H)
@@ -1038,13 +1031,15 @@
 endfunction()
 
 add_subdirectory(lib)
 if(BUILD_CURL_EXE)
   add_subdirectory(src)
 endif()
-if(BUILD_CURL_TESTS)
+
+include(CTest)
+if(BUILD_TESTING)
   add_subdirectory(tests)
 endif()
 
 # TODO support GNUTLS, NSS, POLARSSL, AXTLS, CYASSL, WINSSL, DARWINSSL
 if(USE_OPENSSL)
   set(SSL_ENABLED 1)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/configure	2016-05-22 01:52:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/configure	2016-07-21 07:54:04.000000000 +0800
@@ -18482,13 +18482,13 @@
             tmp_EXTERN="__attribute__ ((__visibility__ (\"default\")))"
       tmp_CFLAGS="-fvisibility=hidden"
       supports_symbol_hiding="yes"
       ;;
     GNU_C)
             if test "$compiler_num" -ge "304"; then
-        if $CC --help --verbose 2>&1 | grep fvisibility= > /dev/null ; then
+        if $CC --help --verbose 2>/dev/null | grep fvisibility= >/dev/null ; then
           tmp_EXTERN="__attribute__ ((__visibility__ (\"default\")))"
           tmp_CFLAGS="-fvisibility=hidden"
           supports_symbol_hiding="yes"
         fi
       fi
       ;;
@@ -21853,12 +21853,13 @@
 
 $as_echo "#define USE_WINDOWS_SSPI 1" >>confdefs.h
 
     USE_WINDOWS_SSPI=1
 
     curl_sspi_msg="enabled"
+    LIBS="-lcrypt32 $LIBS"
   else
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
   fi
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
@@ -25072,13 +25073,13 @@
           cac="$ac_default_prefix/share/curl/curl-ca-bundle.crt"
         fi
 
         for a in /etc/ssl/certs/ca-certificates.crt \
                  /etc/pki/tls/certs/ca-bundle.crt \
                  /usr/share/ssl/certs/ca-bundle.crt \
-                 /usr/local/share/certs/ca-root.crt \
+                 /usr/local/share/certs/ca-root-nss.crt \
                  /etc/ssl/cert.pem \
                  "$cac"; do
           if test -f "$a"; then
             ca="$a"
             break
           fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/configure.ac	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/configure.ac	2016-07-21 06:31:36.000000000 +0800
@@ -1345,12 +1345,13 @@
     curl_ssl_msg="enabled (Windows-native)"
     WINSSL_ENABLED=1
     # --with-winssl implies --enable-sspi
     AC_DEFINE(USE_WINDOWS_SSPI, 1, [to enable SSPI support])
     AC_SUBST(USE_WINDOWS_SSPI, [1])
     curl_sspi_msg="enabled"
+    LIBS="-lcrypt32 $LIBS"
   else
     AC_MSG_RESULT(no)
   fi
 else
   AC_MSG_RESULT(no)
 fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/curl.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/curl.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/curl.1	2016-05-17 20:00:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/curl.1	2016-07-21 06:31:36.000000000 +0800
@@ -95,13 +95,16 @@
 getting many files from the same server will not do multiple connects /
 handshakes. This improves speed. Of course this is only done on files
 specified on a single command line and cannot be used between separate curl
 invokes.
 .SH "PROGRESS METER"
 curl normally displays a progress meter during operations, indicating the
-amount of transferred data, transfer speeds and estimated time left, etc.
+amount of transferred data, transfer speeds and estimated time left, etc. The
+progress meter displays number of bytes and the speeds are in bytes per
+second. The suffixes (k, M, G, T, P) are 1024 based. For example 1k is 1024
+bytes. 1M is 1048576 bytes.
 
 curl displays this data to the terminal by default, so if you invoke curl to
 do an operation and it is about to write data to the terminal, it
 \fIdisables\fP the progress meter as otherwise it would mess up the output
 mixing progress meter and response data.
 
@@ -1941,12 +1944,15 @@
 same info.
 .TP
 .B http_connect
 The numerical code that was found in the last response (from a proxy) to a
 curl CONNECT request. (Added in 7.12.4)
 .TP
+.B http_version
+The http version that was effectively used. (Added in 7.50.0)
+.TP
 .B local_ip
 The IP address of the local end of the most recently done connection - can be
 either IPv4 or IPv6 (Added in 7.29.0)
 .TP
 .B local_port
 The local port number of the most recently done connection (Added in 7.29.0)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/curl-config.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/curl-config.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/curl.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/curl.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/curl.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/curl.html	2016-07-21 16:55:58.000000000 +0800
@@ -72,13 +72,13 @@
 <p class="level0">When using [] or {} sequences when invoked from a command line prompt, you probably have to put the full URL within double quotes to avoid the shell from interfering with it. This also goes for other characters treated special, like for example '&', '?' and '*'. 
 <p class="level0">Provide the IPv6 zone index in the URL with an escaped percentage sign and the interface name. Like in 
 <p class="level0">&nbsp; <a href="http://[fe80::3%25eth0]/">http://[fe80::3%25eth0]/</a> 
 <p class="level0">If you specify URL without protocol:// prefix, curl will attempt to guess what protocol you might want. It will then default to HTTP but try other protocols based on often-used host name prefixes. For example, for host names starting with "ftp." curl will assume you want to speak FTP. 
 <p class="level0">curl will do its best to use what you pass to it as a URL. It is not trying to validate it as a syntactically correct URL by any means but is instead <span Class="bold">very</span> liberal with what it accepts. 
 <p class="level0">curl will attempt to re-use connections for multiple file transfers, so that getting many files from the same server will not do multiple connects / handshakes. This improves speed. Of course this is only done on files specified on a single command line and cannot be used between separate curl invokes. <a name="PROGRESS"></a><h2 class="nroffsh">PROGRESS METER</h2>
-<p class="level0">curl normally displays a progress meter during operations, indicating the amount of transferred data, transfer speeds and estimated time left, etc. 
+<p class="level0">curl normally displays a progress meter during operations, indicating the amount of transferred data, transfer speeds and estimated time left, etc. The progress meter displays number of bytes and the speeds are in bytes per second. The suffixes (k, M, G, T, P) are 1024 based. For example 1k is 1024 bytes. 1M is 1048576 bytes. 
 <p class="level0">curl displays this data to the terminal by default, so if you invoke curl to do an operation and it is about to write data to the terminal, it <span Class="emphasis">disables</span> the progress meter as otherwise it would mess up the output mixing progress meter and response data. 
 <p class="level0">If you want a progress meter for HTTP POST or PUT requests, you need to redirect the response output to a file, using shell redirect (&gt;), -o [file] or similar. 
 <p class="level0">It is not the same case for FTP upload as that operation does not spit out any response data to the terminal. 
 <p class="level0">If you prefer a progress "bar" instead of the regular meter, <span Class="emphasis">-&#35;</span> is your friend. <a name="OPTIONS"></a><h2 class="nroffsh">OPTIONS</h2>
 <p class="level0">Options start with one or two dashes. Many of the options require an additional value next to them. 
 <p class="level0">The short "single-dash" form of the options, -d for example, may be used with or without a space between it and its value, although a space is a recommended separator. The long "double-dash" form, --data for example, requires a space between it and its value. 
@@ -813,12 +813,13 @@
 <p class="level2">
 <p class="level2"><span Class="bold">content_type</span> The Content-Type of the requested document, if there was any. 
 <p class="level2"><span Class="bold">filename_effective</span> The ultimate filename that curl writes out to. This is only meaningful if curl is told to write to a file with the <span Class="emphasis">--remote-name</span> or <span Class="emphasis">--output</span> option. It's most useful in combination with the <span Class="emphasis">--remote-header-name</span> option. (Added in 7.26.0) 
 <p class="level2"><span Class="bold">ftp_entry_path</span> The initial path curl ended up in when logging on to the remote FTP server. (Added in 7.15.4) 
 <p class="level2"><span Class="bold">http_code</span> The numerical response code that was found in the last retrieved HTTP(S) or FTP(s) transfer. In 7.18.2 the alias <span Class="bold">response_code</span> was added to show the same info. 
 <p class="level2"><span Class="bold">http_connect</span> The numerical code that was found in the last response (from a proxy) to a curl CONNECT request. (Added in 7.12.4) 
+<p class="level2"><span Class="bold">http_version</span> The http version that was effectively used. (Added in 7.50.0) 
 <p class="level2"><span Class="bold">local_ip</span> The IP address of the local end of the most recently done connection - can be either IPv4 or IPv6 (Added in 7.29.0) 
 <p class="level2"><span Class="bold">local_port</span> The local port number of the most recently done connection (Added in 7.29.0) 
 <p class="level2"><span Class="bold">num_connects</span> Number of new connects made in the recent transfer. (Added in 7.12.3) 
 <p class="level2"><span Class="bold">num_redirects</span> Number of redirects that were followed in the request. (Added in 7.12.3) 
 <p class="level2"><span Class="bold">redirect_url</span> When an HTTP request was made without -L to follow redirects, this variable will show the actual URL a redirect <span Class="emphasis">would</span> take you to. (Added in 7.18.2) 
 <p class="level2"><span Class="bold">remote_ip</span> The remote IP address of the most recently done connection - can be either IPv4 or IPv6 (Added in 7.29.0) 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/curl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/curl.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/FAQ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/FAQ
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/FAQ	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/FAQ	2016-07-21 06:31:36.000000000 +0800
@@ -1399,23 +1399,33 @@
 
   If you end the FTP URL you request with a slash, libcurl will provide you
   with a directory listing of that given directory. You can also set
   CURLOPT_CUSTOMREQUEST to alter what exact listing command libcurl would use
   to list the files.
 
-  The follow-up question that tend to follow the previous one, is how a
-  program is supposed to parse the directory listing. How does it know what's
-  a file and what's a dir and what's a symlink etc. The harsh reality is that
-  FTP provides no such fine and easy-to-parse output. The output format FTP
-  servers respond to LIST commands are entirely at the server's own liking and
-  the NLST output doesn't reveal any types and in many cases don't even
-  include all the directory entries. Also, both LIST and NLST tend to hide
-  unix-style hidden files (those that start with a dot) by default so you need
-  to do "LIST -a" or similar to see them.
+  The follow-up question tends to be how is a program supposed to parse the
+  directory listing. How does it know what's a file and what's a dir and what's
+  a symlink etc. If the FTP server supports the MLSD command then it will
+  return data in a machine-readable format that can be parsed for type. The
+  types are specified by RFC3659 section 7.5.1. If MLSD is not supported then
+  you have to work with what you're given. The LIST output format is entirely
+  at the server's own liking and the NLST output doesn't reveal any types and
+  in many cases doesn't even include all the directory entries. Also, both LIST
+  and NLST tend to hide unix-style hidden files (those that start with a dot)
+  by default so you need to do "LIST -a" or similar to see them.
 
-  The application thus needs to parse the LIST output. One such existing
+  Example - List only directories.
+  ftp.funet.fi supports MLSD and ftp.kernel.org does not:
+
+     curl -s ftp.funet.fi/pub/ -X MLSD | \
+       perl -lne 'print if s/(?:^|;)type=dir;[^ ]+ (.+)$/$1/'
+
+     curl -s ftp.kernel.org/pub/linux/kernel/ | \
+       perl -lne 'print if s/^d[-rwx]{9}(?: +[^ ]+){7} (.+)$/$1/'
+
+  If you need to parse LIST output in libcurl one such existing
   list parser is available at https://cr.yp.to/ftpparse.html  Versions of
   libcurl since 7.21.0 also provide the ability to specify a wildcard to
   download multiple files from one FTP directory.
 
   5.16 I want a different time-out!
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/INTERNALS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/INTERNALS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/INTERNALS	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/INTERNALS	2016-07-21 06:31:36.000000000 +0800
@@ -163,14 +163,14 @@
  operating systems. Don't walk on the edge.
 
 <a name="Library"></a>
 Library
 =======
 
- (See `LIBCURL-STRUCTS` for a separate document describing all major internal
- structs and their purposes.)
+ (See [Structs in libcurl](#structs) for the separate section describing all
+ major internal structs and their purposes.)
 
  There are plenty of entry points to the library, namely each publicly defined
  function that libcurl offers to applications. All of those functions are
  rather small and easy-to-follow. All the ones prefixed with `curl_easy` are
  put in the lib/easy.c file.
 
@@ -181,20 +181,20 @@
 
  All printf()-style functions use the supplied clones in lib/mprintf.c. This
  makes sure we stay absolutely platform independent.
 
  [ `curl_easy_init()`][2] allocates an internal struct and makes some
  initializations.  The returned handle does not reveal internals. This is the
- 'SessionHandle' struct which works as an "anchor" struct for all `curl_easy`
+ 'Curl_easy' struct which works as an "anchor" struct for all `curl_easy`
  functions. All connections performed will get connect-specific data allocated
  that should be used for things related to particular connections/requests.
 
  [`curl_easy_setopt()`][1] takes three arguments, where the option stuff must
  be passed in pairs: the parameter-ID and the parameter-value. The list of
  options is documented in the man page. This function mainly sets things in
- the 'SessionHandle' struct.
+ the 'Curl_easy' struct.
 
  `curl_easy_perform()` is just a wrapper function that makes use of the multi
  API.  It basically calls `curl_multi_init()`, `curl_multi_add_handle()`,
  `curl_multi_wait()`, and `curl_multi_perform()` until the transfer is done
  and then returns.
 
@@ -215,13 +215,13 @@
    is time to tell the server to get a document/file. `Curl_do()` arranges
    this.
 
    This function makes sure there's an allocated and initiated 'connectdata'
    struct that is used for this particular connection only (although there may
    be several requests performed on the same connect). A bunch of things are
-   inited/inherited from the SessionHandle struct.
+   inited/inherited from the Curl_easy struct.
 
 <a name="Curl_do"></a>
 Curl_do()
 ---------
 
    `Curl_do()` makes sure the proper protocol-specific function is called. The
@@ -382,17 +382,17 @@
 Persistent Connections
 ======================
 
  The persistent connection support in libcurl requires some considerations on
  how to do things inside of the library.
 
- - The 'SessionHandle' struct returned in the [`curl_easy_init()`][2] call
+ - The 'Curl_easy' struct returned in the [`curl_easy_init()`][2] call
    must never hold connection-oriented data. It is meant to hold the root data
    as well as all the options etc that the library-user may choose.
 
- - The 'SessionHandle' struct holds the "connection cache" (an array of
+ - The 'Curl_easy' struct holds the "connection cache" (an array of
    pointers to 'connectdata' structs).
 
  - This enables the 'curl handle' to be reused on subsequent transfers.
 
  - When libcurl is told to perform a transfer, it first checks for an already
    existing connection in the cache that we can use. Otherwise it creates a
@@ -853,44 +853,44 @@
 Structs in libcurl
 ==================
 
 This section should cover 7.32.0 pretty accurately, but will make sense even
 for older and later versions as things don't change drastically that often.
 
-## SessionHandle
+## Curl_easy
 
-  The SessionHandle handle struct is the one returned to the outside in the
-  external API as a "CURL *". This is usually known as an easy handle in API
-  documentations and examples.
+  The Curl_easy struct is the one returned to the outside in the external API
+  as a "CURL *". This is usually known as an easy handle in API documentations
+  and examples.
 
   Information and state that is related to the actual connection is in the
   'connectdata' struct. When a transfer is about to be made, libcurl will
   either create a new connection or re-use an existing one. The particular
   connectdata that is used by this handle is pointed out by
-  SessionHandle->easy_conn.
+  Curl_easy->easy_conn.
 
   Data and information that regard this particular single transfer is put in
   the SingleRequest sub-struct.
 
-  When the SessionHandle struct is added to a multi handle, as it must be in
-  order to do any transfer, the ->multi member will point to the `Curl_multi`
-  struct it belongs to. The ->prev and ->next members will then be used by the
-  multi code to keep a linked list of SessionHandle structs that are added to
-  that same multi handle. libcurl always uses multi so ->multi *will* point to
-  a `Curl_multi` when a transfer is in progress.
+  When the Curl_easy struct is added to a multi handle, as it must be in order
+  to do any transfer, the ->multi member will point to the `Curl_multi` struct
+  it belongs to. The ->prev and ->next members will then be used by the multi
+  code to keep a linked list of Curl_easy structs that are added to that same
+  multi handle. libcurl always uses multi so ->multi *will* point to a
+  `Curl_multi` when a transfer is in progress.
 
-  ->mstate is the multi state of this particular SessionHandle. When
+  ->mstate is the multi state of this particular Curl_easy. When
   `multi_runsingle()` is called, it will act on this handle according to which
   state it is in. The mstate is also what tells which sockets to return for a
-  specific SessionHandle when [`curl_multi_fdset()`][12] is called etc.
+  specific Curl_easy when [`curl_multi_fdset()`][12] is called etc.
 
   The libcurl source code generally use the name 'data' for the variable that
-  points to the SessionHandle.
+  points to the Curl_easy.
 
-  When doing multiplexed HTTP/2 transfers, each SessionHandle is associated
-  with an individual stream, sharing the same connectdata struct. Multiplexing
+  When doing multiplexed HTTP/2 transfers, each Curl_easy is associated with
+  an individual stream, sharing the same connectdata struct. Multiplexing
   makes it even more important to keep things associated with the right thing!
 
 ## connectdata
 
   A general idea in libcurl is to keep connections around in a connection
   "cache" after they have been used in case they will be used again and then
@@ -898,28 +898,27 @@
   performance boost.
 
   Each 'connectdata' identifies a single physical connection to a server. If
   the connection can't be kept alive, the connection will be closed after use
   and then this struct can be removed from the cache and freed.
 
-  Thus, the same SessionHandle can be used multiple times and each time select
+  Thus, the same Curl_easy can be used multiple times and each time select
   another connectdata struct to use for the connection. Keep this in mind, as
   it is then important to consider if options or choices are based on the
-  connection or the SessionHandle.
+  connection or the Curl_easy.
 
   Functions in libcurl will assume that connectdata->data points to the
-  SessionHandle that uses this connection (for the moment).
+  Curl_easy that uses this connection (for the moment).
 
   As a special complexity, some protocols supported by libcurl require a
   special disconnect procedure that is more than just shutting down the
   socket. It can involve sending one or more commands to the server before
   doing so. Since connections are kept in the connection cache after use, the
-  original SessionHandle may no longer be around when the time comes to shut
-  down a particular connection. For this purpose, libcurl holds a special
-  dummy `closure_handle` SessionHandle in the `Curl_multi` struct to use when
-  needed.
+  original Curl_easy may no longer be around when the time comes to shut down
+  a particular connection. For this purpose, libcurl holds a special dummy
+  `closure_handle` Curl_easy in the `Curl_multi` struct to use when needed.
 
   FTP uses two TCP connections for a typical transfer but it keeps both in
   this single struct and thus can be considered a single connection for most
   internal concerns.
 
   The libcurl source code generally use the name 'conn' for the variable that
@@ -929,31 +928,31 @@
 
   Internally, the easy interface is implemented as a wrapper around multi
   interface functions. This makes everything multi interface.
 
   `Curl_multi` is the multi handle struct exposed as "CURLM *" in external APIs.
 
-  This struct holds a list of SessionHandle structs that have been added to
-  this handle with [`curl_multi_add_handle()`][13]. The start of the list is
-  ->easyp and ->num_easy is a counter of added SessionHandles.
+  This struct holds a list of Curl_easy structs that have been added to this
+  handle with [`curl_multi_add_handle()`][13]. The start of the list is
+  ->easyp and ->num_easy is a counter of added Curl_easys.
 
   ->msglist is a linked list of messages to send back when
   [`curl_multi_info_read()`][14] is called. Basically a node is added to that
-  list when an individual SessionHandle's transfer has completed.
+  list when an individual Curl_easy's transfer has completed.
 
   ->hostcache points to the name cache. It is a hash table for looking up name
   to IP. The nodes have a limited life time in there and this cache is meant
   to reduce the time for when the same name is wanted within a short period of
   time.
 
-  ->timetree points to a tree of SessionHandles, sorted by the remaining time
-  until it should be checked - normally some sort of timeout. Each
-  SessionHandle has one node in the tree.
+  ->timetree points to a tree of Curl_easys, sorted by the remaining time
+  until it should be checked - normally some sort of timeout. Each Curl_easy
+  has one node in the tree.
 
   ->sockhash is a hash table to allow fast lookups of socket descriptor to
-  which SessionHandle that uses that descriptor. This is necessary for the
+  which Curl_easy that uses that descriptor. This is necessary for the
   `multi_socket` API.
 
   ->conn_cache points to the connection cache. It keeps track of all
   connections that are kept after use. The cache has a maximum size.
 
   ->closure_handle is described in the 'connectdata' section.
@@ -974,17 +973,17 @@
 
   ->scheme is the URL scheme name, usually spelled out in uppercase. That's
   "HTTP" or "FTP" etc. SSL versions of the protcol need its own `Curl_handler`
   setup so HTTPS separate from HTTP.
 
   ->setup_connection is called to allow the protocol code to allocate protocol
-  specific data that then gets associated with that SessionHandle for the rest
-  of this transfer. It gets freed again at the end of the transfer. It will be
+  specific data that then gets associated with that Curl_easy for the rest of
+  this transfer. It gets freed again at the end of the transfer. It will be
   called before the 'connectdata' for the transfer has been selected/created.
   Most protocols will allocate its private 'struct [PROTOCOL]' here and assign
-  SessionHandle->req.protop to point to it.
+  Curl_easy->req.protop to point to it.
 
   ->connect_it allows a protocol to do some specific actions after the TCP
   connect is done, that can still be considered part of the connection phase.
 
   Some protocols will alter the connectdata->recv[] and connectdata->send[]
   function pointers in this function.
@@ -1033,13 +1032,13 @@
 
   - `PROTOPT_DUAL` - this protocol uses two connections
 
   - `PROTOPT_CLOSEACTION` - this protocol has actions to do before closing the
     connection. This flag is no longer used by code, yet still set for a bunch
     protocol handlers.
-  
+
   - `PROTOPT_DIRLOCK` - "direction lock". The SSH protocols set this bit to
     limit which "direction" of socket actions that the main engine will
     concern itself about.
 
   - `PROTOPT_NONETWORK` - a protocol that doesn't use network (read file:)
 
@@ -1048,36 +1047,36 @@
 
   - `PROTOPT_NOURLQUERY` - this protocol can't handle a query part on the URL
     (?foo=bar)
 
 ## conncache
 
-  Is a hash table with connections for later re-use. Each SessionHandle has
-  a pointer to its connection cache. Each multi handle sets up a connection
-  cache that all added SessionHandles share by default.
+  Is a hash table with connections for later re-use. Each Curl_easy has a
+  pointer to its connection cache. Each multi handle sets up a connection
+  cache that all added Curl_easys share by default.
 
 ## Curl_share
-  
+
   The libcurl share API allocates a `Curl_share` struct, exposed to the
   external API as "CURLSH *".
 
   The idea is that the struct can have a set of own versions of caches and
   pools and then by providing this struct in the `CURLOPT_SHARE` option, those
-  specific SessionHandles will use the caches/pools that this share handle
+  specific Curl_easys will use the caches/pools that this share handle
   holds.
 
-  Then individual SessionHandle structs can be made to share specific things
+  Then individual Curl_easy structs can be made to share specific things
   that they otherwise wouldn't, such as cookies.
 
   The `Curl_share` struct can currently hold cookies, DNS cache and the SSL
   session cache.
 
 ## CookieInfo
 
   This is the main cookie struct. It holds all known cookies and related
-  information. Each SessionHandle has its own private CookieInfo even when
+  information. Each Curl_easy has its own private CookieInfo even when
   they are added to a multi handle. They can be made to share cookies by using
   the share API.
 
 
 [1]: https://curl.haxx.se/libcurl/c/curl_easy_setopt.html
 [2]: https://curl.haxx.se/libcurl/c/curl_easy_init.html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/KNOWN_BUGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/KNOWN_BUGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/KNOWN_BUGS	2016-05-17 20:00:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/KNOWN_BUGS	2016-07-21 06:31:36.000000000 +0800
@@ -30,12 +30,13 @@
  2.4 GnuTLS backend skips really long certificate fields
 
  3. Email protocols
  3.1 IMAP SEARCH ALL truncated response
  3.2 No disconnect command
  3.3 SMTP to multiple recipients
+ 3.4 POP3 expects "CRLF.CRLF" eob for some single-line responses
 
  4. Command line
  4.1 -J with %-encoded file nameas
  4.2 -J with -C - fails
  4.3 --retry and transfer timeouts
 
@@ -240,12 +241,18 @@
  When sending data to multiple recipients, curl will abort and return failure
  if one of the recipients indicate failure (on the "RCPT TO"
  command). Ordinary mail programs would proceed and still send to the ones
  that can receive data. This is subject for change in the future.
  https://curl.haxx.se/bug/view.cgi?id=1116
 
+3.4 POP3 expects "CRLF.CRLF" eob for some single-line responses
+
+ You have to tell libcurl not to expect a body, when dealing with one line
+ response commands. Please see the POP3 examples and test cases which show
+ this for the NOOP and DELE commands. https://curl.haxx.se/bug/?i=740
+
 
 4. Command line
 
 4.1 -J with %-encoded file nameas
 
  -J/--remote-header-name doesn't decode %-encoded file names. RFC6266 details
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_duphandle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_duphandle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_escape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_escape.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_getinfo.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_getinfo.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_getinfo.3	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_getinfo.3	2016-07-21 06:31:36.000000000 +0800
@@ -47,12 +47,15 @@
 .IP CURLINFO_RESPONSE_CODE
 Last received response code.
 See \fICURLINFO_RESPONSE_CODE(3)\fP
 .IP CURLINFO_HTTP_CONNECTCODE
 Last proxy CONNECT response code.
 See \fICURLINFO_HTTP_CONNECTCODE(3)\fP
+.IP CURLINFO_HTTP_VERSION
+The http version used in the connection.
+See \fICURLINFO_HTTP_VERSION(3)\fP
 .IP CURLINFO_FILETIME
 Remote time of the retrieved document.
 See \fICURLINFO_FILETIME(3)\fP
 .IP CURLINFO_TOTAL_TIME
 Total time of previous transfer.
 See \fICURLINFO_TOTAL_TIME(3)\fP
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_getinfo.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_getinfo.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_getinfo.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_getinfo.html	2016-07-21 16:55:58.000000000 +0800
@@ -61,12 +61,14 @@
 <p class="level0"><a name="CURLINFOEFFECTIVEURL"></a><span class="nroffip">CURLINFO_EFFECTIVE_URL</span> 
 <p class="level1">Last used URL. See <span Class="emphasis">CURLINFO_EFFECTIVE_URL(3)</span> 
 <p class="level0"><a name="CURLINFORESPONSECODE"></a><span class="nroffip">CURLINFO_RESPONSE_CODE</span> 
 <p class="level1">Last received response code. See <span Class="emphasis">CURLINFO_RESPONSE_CODE(3)</span> 
 <p class="level0"><a name="CURLINFOHTTPCONNECTCODE"></a><span class="nroffip">CURLINFO_HTTP_CONNECTCODE</span> 
 <p class="level1">Last proxy CONNECT response code. See <span Class="emphasis">CURLINFO_HTTP_CONNECTCODE(3)</span> 
+<p class="level0"><a name="CURLINFOHTTPVERSION"></a><span class="nroffip">CURLINFO_HTTP_VERSION</span> 
+<p class="level1">The http version used in the connection. See <span Class="emphasis">CURLINFO_HTTP_VERSION(3)</span> 
 <p class="level0"><a name="CURLINFOFILETIME"></a><span class="nroffip">CURLINFO_FILETIME</span> 
 <p class="level1">Remote time of the retrieved document. See <span Class="emphasis">CURLINFO_FILETIME(3)</span> 
 <p class="level0"><a name="CURLINFOTOTALTIME"></a><span class="nroffip">CURLINFO_TOTAL_TIME</span> 
 <p class="level1">Total time of previous transfer. See <span Class="emphasis">CURLINFO_TOTAL_TIME(3)</span> 
 <p class="level0"><a name="CURLINFONAMELOOKUPTIME"></a><span class="nroffip">CURLINFO_NAMELOOKUP_TIME</span> 
 <p class="level1">Time from start until name resolving completed. See <span Class="emphasis">CURLINFO_NAMELOOKUP_TIME(3)</span> 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_getinfo.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_getinfo.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_pause.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_pause.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_recv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_recv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_reset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_reset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_send.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_send.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_easy_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_easy_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_escape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_escape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_formadd.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_formadd.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_formfree.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_formfree.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_formget.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_formget.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_free.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_free.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_getdate.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_getdate.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_getenv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_getenv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_cleanup.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_init.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_init.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_init.3	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_init.3	2016-07-21 06:31:36.000000000 +0800
@@ -53,33 +53,40 @@
 If you are initializing libcurl from a Windows DLL you should not initialize it
 from DllMain or a static initializer because Windows holds the loader lock
 during that time and it could cause a deadlock.
 
 See the description in \fIlibcurl(3)\fP of global environment requirements for
 details of how to use this function.
-
 .SH FLAGS
-.TP 5
-.B CURL_GLOBAL_ALL
+.IP CURL_GLOBAL_ALL
 Initialize everything possible. This sets all known bits except
 \fBCURL_GLOBAL_ACK_EINTR\fP.
-.TP
-.B CURL_GLOBAL_SSL
-Initialize SSL
-.TP
-.B CURL_GLOBAL_WIN32
+
+.IP CURL_GLOBAL_SSL
+Initialize SSL.
+
+The implication here is that if this bit is not set, the initialization of the
+SSL layer needs to be done by the application or at least outside of
+libcurl. The exact procedure how to do SSL initializtion depends on the TLS
+backend libcurl uses.
+
+Doing TLS based transfers without having the TLS layer initialized may lead to
+unexpected behaviors.
+.IP CURL_GLOBAL_WIN32
 Initialize the Win32 socket libraries.
-.TP
-.B CURL_GLOBAL_NOTHING
+
+The implication here is that if this bit is not set, the initialization of
+winsock has to be done by the application or you risk getting undefined
+behaviors. This option exists for when the initialization is handled outside
+of libcurl so there's no need for libcurl to do it again.
+.IP CURL_GLOBAL_NOTHING
 Initialise nothing extra. This sets no bit.
-.TP
-.B CURL_GLOBAL_DEFAULT
+.IP CURL_GLOBAL_DEFAULT
 A sensible default. It will init both SSL and Win32. Right now, this equals
 the functionality of the \fBCURL_GLOBAL_ALL\fP mask.
-.TP
-.B CURL_GLOBAL_ACK_EINTR
+.IP CURL_GLOBAL_ACK_EINTR
 When this flag is set, curl will acknowledge EINTR condition when connecting
 or when waiting for data.  Otherwise, curl waits until full timeout
 elapses. (Added in 7.30.0)
 .SH RETURN VALUE
 If this function returns non-zero, something went wrong and you cannot use the
 other curl functions.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_init.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_init.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_init.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_init.html	2016-07-21 16:55:59.000000000 +0800
@@ -57,19 +57,28 @@
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">This function sets up the program environment that libcurl needs.  Think of it as an extension of the library loader. 
 <p class="level0">This function must be called at least once within a program (a program is all the code that shares a memory space) before the program calls any other function in libcurl.  The environment it sets up is constant for the life of the program and is the same for every program, so multiple calls have the same effect as one call. 
 <p class="level0">The flags option is a bit pattern that tells libcurl exactly what features to init, as described below. Set the desired bits by ORing the values together. In normal operation, you must specify CURL_GLOBAL_ALL.  Don't use any other value unless you are familiar with it and mean to control internal operations of libcurl. 
 <p class="level0"><span Class="bold">This function is not thread safe.</span> You must not call it when any other thread in the program (i.e. a thread sharing the same memory) is running. This doesn't just mean no other thread that is using libcurl.  Because <a Class="emphasis" href="./curl_global_init.html">curl_global_init</a> calls functions of other libraries that are similarly thread unsafe, it could conflict with any other thread that uses these other libraries. 
 <p class="level0">If you are initializing libcurl from a Windows DLL you should not initialize it from DllMain or a static initializer because Windows holds the loader lock during that time and it could cause a deadlock. 
-<p class="level0">See the description in <a Class="emphasis" href="./libcurl.html">libcurl</a> of global environment requirements for details of how to use this function. 
-<p class="level0"><a name="FLAGS"></a><h2 class="nroffsh">FLAGS</h2>
+<p class="level0">See the description in <a Class="emphasis" href="./libcurl.html">libcurl</a> of global environment requirements for details of how to use this function. <a name="FLAGS"></a><h2 class="nroffsh">FLAGS</h2>
 <p class="level0">
-<p class="level0"><span Class="bold">CURL_GLOBAL_ALL</span> Initialize everything possible. This sets all known bits except <span Class="bold">CURL_GLOBAL_ACK_EINTR</span>. 
-<p class="level0"><span Class="bold">CURL_GLOBAL_SSL</span> Initialize SSL 
-<p class="level0"><span Class="bold">CURL_GLOBAL_WIN32</span> Initialize the Win32 socket libraries. 
-<p class="level0"><span Class="bold">CURL_GLOBAL_NOTHING</span> Initialise nothing extra. This sets no bit. 
-<p class="level0"><span Class="bold">CURL_GLOBAL_DEFAULT</span> A sensible default. It will init both SSL and Win32. Right now, this equals the functionality of the <span Class="bold">CURL_GLOBAL_ALL</span> mask. 
-<p class="level0"><span Class="bold">CURL_GLOBAL_ACK_EINTR</span> When this flag is set, curl will acknowledge EINTR condition when connecting or when waiting for data.  Otherwise, curl waits until full timeout elapses. (Added in 7.30.0) <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
+<p class="level0"><a name="CURLGLOBALALL"></a><span class="nroffip">CURL_GLOBAL_ALL</span> 
+<p class="level1">Initialize everything possible. This sets all known bits except <a class="bold" href="#CURLGLOBALACKEINTR">CURL_GLOBAL_ACK_EINTR</a>. 
+<p class="level1">
+<p class="level0"><a name="CURLGLOBALSSL"></a><span class="nroffip">CURL_GLOBAL_SSL</span> 
+<p class="level1">Initialize SSL. 
+<p class="level1">The implication here is that if this bit is not set, the initialization of the SSL layer needs to be done by the application or at least outside of libcurl. The exact procedure how to do SSL initializtion depends on the TLS backend libcurl uses. 
+<p class="level1">Doing TLS based transfers without having the TLS layer initialized may lead to unexpected behaviors. 
+<p class="level0"><a name="CURLGLOBALWIN32"></a><span class="nroffip">CURL_GLOBAL_WIN32</span> 
+<p class="level1">Initialize the Win32 socket libraries. 
+<p class="level1">The implication here is that if this bit is not set, the initialization of winsock has to be done by the application or you risk getting undefined behaviors. This option exists for when the initialization is handled outside of libcurl so there's no need for libcurl to do it again. 
+<p class="level0"><a name="CURLGLOBALNOTHING"></a><span class="nroffip">CURL_GLOBAL_NOTHING</span> 
+<p class="level1">Initialise nothing extra. This sets no bit. 
+<p class="level0"><a name="CURLGLOBALDEFAULT"></a><span class="nroffip">CURL_GLOBAL_DEFAULT</span> 
+<p class="level1">A sensible default. It will init both SSL and Win32. Right now, this equals the functionality of the <a class="bold" href="#CURLGLOBALALL">CURL_GLOBAL_ALL</a> mask. 
+<p class="level0"><a name="CURLGLOBALACKEINTR"></a><span class="nroffip">CURL_GLOBAL_ACK_EINTR</span> 
+<p class="level1">When this flag is set, curl will acknowledge EINTR condition when connecting or when waiting for data.  Otherwise, curl waits until full timeout elapses. (Added in 7.30.0) <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">If this function returns non-zero, something went wrong and you cannot use the other curl functions. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><a Class="manpage" href="./curl_global_init_mem.html">curl_global_init_mem</a>, <a Class="manpage" href="./curl_global_cleanup.html">curl_global_cleanup</a>, <a Class="manpage" href="./curl_easy_init.html">curl_easy_init</a>, <a Class="manpage" href="./libcurl.html">libcurl</a><p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_init_mem.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_init_mem.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_global_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_global_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_mprintf.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_mprintf.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_add_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_add_handle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_assign.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_assign.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_fdset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_fdset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_info_read.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_info_read.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_remove_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_remove_handle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_setopt.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket_action.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket_action.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket_action.3	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket_action.3	2016-07-21 06:31:36.000000000 +0800
@@ -40,13 +40,13 @@
 events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or
 CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and
 libcurl will test the descriptor internally. It is also permissible to pass
 CURL_SOCKET_TIMEOUT to the \fBsockfd\fP parameter in order to initiate the
 whole process or when a timeout occurs.
 
-At return, the integer \fBrunning_handles\fP points to will contain the number
+At return, \fBrunning_handles\fP points to the number
 of running easy handles within the multi handle. When this number reaches
 zero, all transfers are complete/done. When you call
 \fIcurl_multi_socket_action(3)\fP on a specific socket and the counter
 decreases by one, it DOES NOT necessarily mean that this exact socket/transfer
 is the one that completed. Use \fIcurl_multi_info_read(3)\fP to figure out
 which easy handle that completed.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket_action.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket_action.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket_action.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket_action.html	2016-07-21 16:55:59.000000000 +0800
@@ -60,13 +60,13 @@
 &nbsp;                                  int ev_bitmask,
 &nbsp;                                  int *running_handles);
 </pre>
 
 <p class="level0"><a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">When the application has detected action on a socket handled by libcurl, it should call <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> with the <span Class="bold">sockfd</span> argument set to the socket with the action. When the events on a socket are known, they can be passed as an events bitmask <span Class="bold">ev_bitmask</span> by first setting <span Class="bold">ev_bitmask</span> to 0, and then adding using bitwise OR (|) any combination of events to be chosen from CURL_CSELECT_IN, CURL_CSELECT_OUT or CURL_CSELECT_ERR. When the events on a socket are unknown, pass 0 instead, and libcurl will test the descriptor internally. It is also permissible to pass CURL_SOCKET_TIMEOUT to the <span Class="bold">sockfd</span> parameter in order to initiate the whole process or when a timeout occurs. 
-<p class="level0">At return, the integer <span Class="bold">running_handles</span> points to will contain the number of running easy handles within the multi handle. When this number reaches zero, all transfers are complete/done. When you call <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> on a specific socket and the counter decreases by one, it DOES NOT necessarily mean that this exact socket/transfer is the one that completed. Use <a Class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read</a> to figure out which easy handle that completed. 
+<p class="level0">At return, <span Class="bold">running_handles</span> points to the number of running easy handles within the multi handle. When this number reaches zero, all transfers are complete/done. When you call <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> on a specific socket and the counter decreases by one, it DOES NOT necessarily mean that this exact socket/transfer is the one that completed. Use <a Class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read</a> to figure out which easy handle that completed. 
 <p class="level0">The <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> functions inform the application about updates in the socket (file descriptor) status by doing none, one, or multiple calls to the socket callback function set with the <span Class="emphasis">CURLMOPT_SOCKETFUNCTION(3)</span> option to <a Class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt</a>. They update the status with changes since the previous time the callback was called. 
 <p class="level0">Get the timeout time by setting the <span Class="emphasis">CURLMOPT_TIMERFUNCTION(3)</span> option with <a Class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt</a>. Your application will then get called with information on how long to wait for socket actions at most before doing the timeout action: call the <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> function with the <span Class="bold">sockfd</span> argument set to CURL_SOCKET_TIMEOUT. You can also use the <a Class="emphasis" href="./curl_multi_timeout.html">curl_multi_timeout</a> function to poll the value at any given time, but for an event-based system using the callback is far better than relying on polling the timeout value. <a name="CALLBACK"></a><h2 class="nroffsh">CALLBACK DETAILS</h2>
 <p class="level0">
 <p class="level0">The socket <span Class="bold">callback</span> function uses a prototype like this <pre class="level0">
 &nbsp;
 &nbsp; int curl_socket_callback(CURL *easy,      /* easy handle */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket_action.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket_action.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket_all.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket_all.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_socket.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_socket.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_timeout.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_timeout.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_multi_wait.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_multi_wait.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_share_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_share_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_share_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_share_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_share_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_share_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_share_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_share_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_slist_append.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_slist_append.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_slist_free_all.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_slist_free_all.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_strequal.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_strequal.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_version_info.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_version_info.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/curl_version.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/curl_version.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-easy.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-easy.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-errors.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-errors.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-multi.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-multi.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-multi.3	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-multi.3	2016-07-21 06:31:36.000000000 +0800
@@ -150,13 +150,13 @@
 
 The CURLMOPT_TIMERFUNCTION callback is called to set a timeout. When that
 timeout expires, your application should call the
 \fIcurl_multi_socket_action(3)\fP function saying it was due to a timeout.
 
 This API is typically used with an event-driven underlying functionality (like
-libevent, libev, kqueue, epoll or similar) which which the application
+libevent, libev, kqueue, epoll or similar) with which the application
 "subscribes" on socket changes. This allows applications and libcurl to much
 better scale upward and beyond thousands of simultaneous transfers without
 losing performance.
 
 When you've added your initial set of handles, you call
 \fIcurl_multi_socket_action(3)\fP with CURL_SOCKET_TIMEOUT set in the sockfd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-multi.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-multi.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-multi.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-multi.html	2016-07-21 16:55:59.000000000 +0800
@@ -74,13 +74,13 @@
 <p class="level0"><a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> function offers a way for applications to not only avoid being forced to use select(), but it also offers a much more high-performance API that will make a significant difference for applications using large numbers of simultaneous connections. 
 <p class="level0"><a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> is then used instead of <a Class="emphasis" href="./curl_multi_perform.html">curl_multi_perform</a>. 
 <p class="level0">When using this API, you add easy handles to the multi handle just as with the normal multi interface. Then you also set two callbacks with the CURLMOPT_SOCKETFUNCTION and CURLMOPT_TIMERFUNCTION options to <a Class="emphasis" href="./curl_multi_setopt.html">curl_multi_setopt</a>. They are two callback functions that libcurl will call with information about what sockets to wait for, and for what activity, and what the current timeout time is - if that expires libcurl should be notified. 
 <p class="level0">The multi_socket API is designed to inform your application about which sockets libcurl is currently using and for what activities (read and/or write) on those sockets your application is expected to wait for. 
 <p class="level0">Your application must make sure to receive all sockets informed about in the CURLMOPT_SOCKETFUNCTION callback and make sure it reacts on the given activity on them. When a socket has the given activity, you call <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> specifying which socket and action there are. 
 <p class="level0">The CURLMOPT_TIMERFUNCTION callback is called to set a timeout. When that timeout expires, your application should call the <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> function saying it was due to a timeout. 
-<p class="level0">This API is typically used with an event-driven underlying functionality (like libevent, libev, kqueue, epoll or similar) which which the application "subscribes" on socket changes. This allows applications and libcurl to much better scale upward and beyond thousands of simultaneous transfers without losing performance. 
+<p class="level0">This API is typically used with an event-driven underlying functionality (like libevent, libev, kqueue, epoll or similar) with which the application "subscribes" on socket changes. This allows applications and libcurl to much better scale upward and beyond thousands of simultaneous transfers without losing performance. 
 <p class="level0">When you've added your initial set of handles, you call <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> with CURL_SOCKET_TIMEOUT set in the sockfd argument, and you'll get callbacks call that sets you up and you then continue to call <a Class="emphasis" href="./curl_multi_socket_action.html">curl_multi_socket_action</a> accordingly when you get activity on the sockets you've been asked to wait on, or if the timeout timer expires. 
 <p class="level0">You can poll <a Class="emphasis" href="./curl_multi_info_read.html">curl_multi_info_read</a> to see if any transfer has completed, as it then has a message saying so. <a name="BLOCKING"></a><h2 class="nroffsh">BLOCKING</h2>
 <p class="level0">A few areas in the code are still using blocking code, even when used from the multi interface. While we certainly want and intend for these to get fixed in the future, you should be aware of the following current restrictions: 
 <p class="level0"><pre class="level0">
 &nbsp;- Name resolves unless the c-ares or threaded-resolver backends are used
 &nbsp;- NSS SSL connections
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-multi.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-multi.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-share.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-share.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-symbols.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-symbols.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-symbols.3	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-symbols.3	2016-07-21 16:55:59.000000000 +0800
@@ -16,13 +16,13 @@
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
 .\" **************************************************************************
-.TH libcurl-symbols 3 "maj 30, 2016" "libcurl 7.41.0" "libcurl symbols"
+.TH libcurl-symbols 3 "jul 21, 2016" "libcurl 7.41.0" "libcurl symbols"
 .SH NAME
 libcurl-symbols \- libcurl symbol version information
 .SH "libcurl symbols"
 This man page details version information for public symbols provided in the
 libcurl header files. This lists the first version in which the symbol was
 introduced and for some symbols two additional information pieces:
@@ -487,12 +487,14 @@
 Introduced in 7.10.8
 .IP CURLINFO_HTTP_CODE
 Introduced in 7.4.1
 Deprecated since 7.10.8
 .IP CURLINFO_HTTP_CONNECTCODE
 Introduced in 7.10.7
+.IP CURLINFO_HTTP_VERSION
+Introduced in 7.50.0
 .IP CURLINFO_LASTONE
 Introduced in 7.4.1
 .IP CURLINFO_LASTSOCKET
 Introduced in 7.15.2
 .IP CURLINFO_LOCAL_IP
 Introduced in 7.21.0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-symbols.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-symbols.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-symbols.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-symbols.html	2016-07-21 16:55:59.000000000 +0800
@@ -475,12 +475,14 @@
 <p class="level0"><a name="CURLINFOHTTPAUTHAVAIL"></a><span class="nroffip">CURLINFO_HTTPAUTH_AVAIL</span> 
 <p class="level1">Introduced in 7.10.8 
 <p class="level0"><a name="CURLINFOHTTPCODE"></a><span class="nroffip">CURLINFO_HTTP_CODE</span> 
 <p class="level1">Introduced in 7.4.1 Deprecated since 7.10.8 
 <p class="level0"><a name="CURLINFOHTTPCONNECTCODE"></a><span class="nroffip">CURLINFO_HTTP_CONNECTCODE</span> 
 <p class="level1">Introduced in 7.10.7 
+<p class="level0"><a name="CURLINFOHTTPVERSION"></a><span class="nroffip">CURLINFO_HTTP_VERSION</span> 
+<p class="level1">Introduced in 7.50.0 
 <p class="level0"><a name="CURLINFOLASTONE"></a><span class="nroffip">CURLINFO_LASTONE</span> 
 <p class="level1">Introduced in 7.4.1 
 <p class="level0"><a name="CURLINFOLASTSOCKET"></a><span class="nroffip">CURLINFO_LASTSOCKET</span> 
 <p class="level1">Introduced in 7.15.2 
 <p class="level0"><a name="CURLINFOLOCALIP"></a><span class="nroffip">CURLINFO_LOCAL_IP</span> 
 <p class="level1">Introduced in 7.21.0 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-symbols.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-symbols.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-thread.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-thread.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/libcurl-tutorial.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/libcurl-tutorial.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_ACTIVESOCKET.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_ACTIVESOCKET.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_APPCONNECT_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_APPCONNECT_TIME.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CERTINFO.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CERTINFO.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CERTINFO.3	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CERTINFO.3	2016-07-21 06:31:36.000000000 +0800
@@ -2,13 +2,13 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at https://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -38,14 +38,14 @@
 for the specific named data. See also the certinfo.c example.
 .SH PROTOCOLS
 All TLS-based
 .SH EXAMPLE
 TODO
 .SH AVAILABILITY
-This option is only working in libcurl built with OpenSSL, NSS or GSKit
-support.
+This option is only working in libcurl built with OpenSSL, NSS, schannel or
+GSKit support. schannel support added in 7.50.0
 
 Added in 7.19.1
 .SH RETURN VALUE
 Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
 .SH "SEE ALSO"
 .BR curl_easy_getinfo "(3), " curl_easy_setopt "(3), "
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CERTINFO.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CERTINFO.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CERTINFO.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CERTINFO.html	2016-07-21 16:55:59.000000000 +0800
@@ -54,12 +54,12 @@
 <p class="level0">CURLINFO_CERTINFO - get the TLS certificate chain <a name="SYNOPSIS"></a><h2 class="nroffsh">SYNOPSIS</h2>
 <p class="level0">&#35;include &lt;curl/curl.h&gt; 
 <p class="level0">CURLcode curl_easy_getinfo(CURL *handle, CURLINFO_CERTINFO, &nbsp;                          struct curl_certinfo *chainp); <a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">Pass a pointer to a 'struct curl_certinfo *' and you'll get it set to point to struct that holds a number of linked lists with info about the certificate chain, assuming you had <a Class="emphasis" href="./CURLOPT_CERTINFO.html">CURLOPT_CERTINFO</a> enabled when the request was made. The struct reports how many certs it found and then you can extract info for each of those certs by following the linked lists. The info chain is provided in a series of data in the format "name:content" where the content is for the specific named data. See also the certinfo.c example. <a name="PROTOCOLS"></a><h2 class="nroffsh">PROTOCOLS</h2>
 <p class="level0">All TLS-based <a name="EXAMPLE"></a><h2 class="nroffsh">EXAMPLE</h2>
 <p class="level0">TODO <a name="AVAILABILITY"></a><h2 class="nroffsh">AVAILABILITY</h2>
-<p class="level0">This option is only working in libcurl built with OpenSSL, NSS or GSKit support. 
+<p class="level0">This option is only working in libcurl built with OpenSSL, NSS, schannel or GSKit support. schannel support added in 7.50.0 
 <p class="level0">Added in 7.19.1 <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
 <p class="level0">Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not. <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><span Class="manpage">curl_easy_getinfo (3)</span>, <span Class="manpage">curl_easy_setopt (3)</span><p class="roffit">
  This HTML page was made with <a href="http://daniel.haxx.se/projects/roffit/">roffit</a>.
 </body></html>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CERTINFO.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CERTINFO.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CONDITION_UNMET.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CONDITION_UNMET.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CONNECT_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CONNECT_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CONTENT_LENGTH_DOWNLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CONTENT_LENGTH_DOWNLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CONTENT_LENGTH_UPLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CONTENT_LENGTH_UPLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_CONTENT_TYPE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_CONTENT_TYPE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_COOKIELIST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_COOKIELIST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_EFFECTIVE_URL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_EFFECTIVE_URL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_FILETIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_FILETIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_FTP_ENTRY_PATH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_FTP_ENTRY_PATH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_HEADER_SIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_HEADER_SIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_HTTPAUTH_AVAIL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_HTTPAUTH_AVAIL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_HTTP_CONNECTCODE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_HTTP_CONNECTCODE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_LASTSOCKET.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_LASTSOCKET.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_LOCAL_IP.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_LOCAL_IP.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_LOCAL_PORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_LOCAL_PORT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_NAMELOOKUP_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_NAMELOOKUP_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_NUM_CONNECTS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_NUM_CONNECTS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_OS_ERRNO.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_OS_ERRNO.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_PRETRANSFER_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_PRETRANSFER_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_PRIMARY_IP.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_PRIMARY_IP.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_PRIMARY_PORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_PRIMARY_PORT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_PRIVATE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_PRIVATE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_PROXYAUTH_AVAIL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_PROXYAUTH_AVAIL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_REDIRECT_COUNT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_REDIRECT_COUNT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_REDIRECT_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_REDIRECT_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_REDIRECT_URL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_REDIRECT_URL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_REQUEST_SIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_REQUEST_SIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_RESPONSE_CODE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_RESPONSE_CODE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_RTSP_CLIENT_CSEQ.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_RTSP_CLIENT_CSEQ.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_RTSP_CSEQ_RECV.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_RTSP_CSEQ_RECV.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_RTSP_SERVER_CSEQ.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_RTSP_SERVER_CSEQ.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_RTSP_SESSION_ID.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_RTSP_SESSION_ID.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_SIZE_DOWNLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_SIZE_DOWNLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_SIZE_UPLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_SIZE_UPLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_SPEED_DOWNLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_SPEED_DOWNLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_SPEED_UPLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_SPEED_UPLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_SSL_ENGINES.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_SSL_ENGINES.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_SSL_VERIFYRESULT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_SSL_VERIFYRESULT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_STARTTRANSFER_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_STARTTRANSFER_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_TLS_SESSION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_TLS_SESSION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_TLS_SSL_PTR.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_TLS_SSL_PTR.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLINFO_TOTAL_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLINFO_TOTAL_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_MAXCONNECTS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_MAXCONNECTS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_MAX_HOST_CONNECTIONS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_MAX_HOST_CONNECTIONS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_MAX_PIPELINE_LENGTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_MAX_PIPELINE_LENGTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_MAX_TOTAL_CONNECTIONS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_MAX_TOTAL_CONNECTIONS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_PIPELINING.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_PIPELINING.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_PIPELINING_SERVER_BL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_PIPELINING_SERVER_BL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_PIPELINING_SITE_BL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_PIPELINING_SITE_BL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_PUSHDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_PUSHDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_PUSHFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_PUSHFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_SOCKETDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_SOCKETDATA.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.3	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.3	2016-07-21 06:31:36.000000000 +0800
@@ -51,13 +51,13 @@
 socket. It can hold one of these values:
 .IP CURL_POLL_IN
 Wait for incoming data. For the socket to become readable.
 .IP CURL_POLL_OUT
 Wait for outgoing data. For the socket to become writable.
 .IP CURL_POLL_INOUT
-Wait for incoming abd outgoing data. For the socket to become readable or
+Wait for incoming and outgoing data. For the socket to become readable or
 writable.
 .IP CURL_POLL_REMOVE
 The specified socket/file descriptor is no longer used by libcurl.
 .SH DEFAULT
 NULL (no callback)
 .SH PROTOCOLS
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.html	2016-05-30 14:16:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.html	2016-07-21 16:55:59.000000000 +0800
@@ -69,13 +69,13 @@
 <p class="level0">The <span Class="bold">what</span> parameter informs the callback on the status of the given socket. It can hold one of these values: 
 <p class="level0"><a name="CURLPOLLIN"></a><span class="nroffip">CURL_POLL_IN</span> 
 <p class="level1">Wait for incoming data. For the socket to become readable. 
 <p class="level0"><a name="CURLPOLLOUT"></a><span class="nroffip">CURL_POLL_OUT</span> 
 <p class="level1">Wait for outgoing data. For the socket to become writable. 
 <p class="level0"><a name="CURLPOLLINOUT"></a><span class="nroffip">CURL_POLL_INOUT</span> 
-<p class="level1">Wait for incoming abd outgoing data. For the socket to become readable or writable. 
+<p class="level1">Wait for incoming and outgoing data. For the socket to become readable or writable. 
 <p class="level0"><a name="CURLPOLLREMOVE"></a><span class="nroffip">CURL_POLL_REMOVE</span> 
 <p class="level1">The specified socket/file descriptor is no longer used by libcurl. <a name="DEFAULT"></a><h2 class="nroffsh">DEFAULT</h2>
 <p class="level0">NULL (no callback) <a name="PROTOCOLS"></a><h2 class="nroffsh">PROTOCOLS</h2>
 <p class="level0">All <a name="EXAMPLE"></a><h2 class="nroffsh">EXAMPLE</h2>
 <p class="level0">TODO <a name="AVAILABILITY"></a><h2 class="nroffsh">AVAILABILITY</h2>
 <p class="level0">Added in 7.15.4 <a name="RETURN"></a><h2 class="nroffsh">RETURN VALUE</h2>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_SOCKETFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_TIMERDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_TIMERDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLMOPT_TIMERFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLMOPT_TIMERFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_ACCEPT_ENCODING.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_ACCEPT_ENCODING.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_ACCEPTTIMEOUT_MS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_ACCEPTTIMEOUT_MS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_ADDRESS_SCOPE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_ADDRESS_SCOPE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_APPEND.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_APPEND.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_AUTOREFERER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_AUTOREFERER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_BUFFERSIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_BUFFERSIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CAINFO.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CAINFO.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CAPATH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CAPATH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CERTINFO.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CERTINFO.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CHUNK_BGN_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CHUNK_BGN_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CHUNK_DATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CHUNK_DATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CHUNK_END_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CHUNK_END_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CLOSESOCKETDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CLOSESOCKETDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CLOSESOCKETFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CLOSESOCKETFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONNECT_ONLY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONNECT_ONLY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONNECTTIMEOUT_MS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONNECTTIMEOUT_MS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONNECTTIMEOUT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONNECTTIMEOUT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONNECT_TO.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONNECT_TO.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONV_FROM_NETWORK_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONV_FROM_NETWORK_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONV_FROM_UTF8_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONV_FROM_UTF8_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CONV_TO_NETWORK_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CONV_TO_NETWORK_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_COOKIEFILE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_COOKIEFILE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_COOKIEJAR.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_COOKIEJAR.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_COOKIELIST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_COOKIELIST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_COOKIE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_COOKIE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_COOKIESESSION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_COOKIESESSION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_COPYPOSTFIELDS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_COPYPOSTFIELDS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CRLFILE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CRLFILE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CRLF.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CRLF.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_CUSTOMREQUEST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_CUSTOMREQUEST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DEBUGDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DEBUGDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DEBUGFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DEBUGFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DEFAULT_PROTOCOL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DEFAULT_PROTOCOL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DIRLISTONLY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DIRLISTONLY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DNS_CACHE_TIMEOUT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DNS_CACHE_TIMEOUT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DNS_INTERFACE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DNS_INTERFACE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DNS_LOCAL_IP4.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DNS_LOCAL_IP4.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DNS_LOCAL_IP6.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DNS_LOCAL_IP6.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DNS_SERVERS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DNS_SERVERS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_DNS_USE_GLOBAL_CACHE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_DNS_USE_GLOBAL_CACHE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_EGDSOCKET.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_EGDSOCKET.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_ERRORBUFFER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_ERRORBUFFER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_EXPECT_100_TIMEOUT_MS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_EXPECT_100_TIMEOUT_MS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FAILONERROR.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FAILONERROR.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FILETIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FILETIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FNMATCH_DATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FNMATCH_DATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FNMATCH_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FNMATCH_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FOLLOWLOCATION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FOLLOWLOCATION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FORBID_REUSE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FORBID_REUSE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FRESH_CONNECT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FRESH_CONNECT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_ACCOUNT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_ACCOUNT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_ALTERNATIVE_TO_USER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_ALTERNATIVE_TO_USER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_CREATE_MISSING_DIRS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_CREATE_MISSING_DIRS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_FILEMETHOD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_FILEMETHOD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTPPORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTPPORT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_RESPONSE_TIMEOUT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_RESPONSE_TIMEOUT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_SKIP_PASV_IP.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_SKIP_PASV_IP.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTPSSLAUTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTPSSLAUTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_SSL_CCC.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_SSL_CCC.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_USE_EPRT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_USE_EPRT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_USE_EPSV.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_USE_EPSV.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_FTP_USE_PRET.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_FTP_USE_PRET.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_GSSAPI_DELEGATION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_GSSAPI_DELEGATION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HEADERDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HEADERDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HEADERFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HEADERFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HEADEROPT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HEADEROPT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HEADER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HEADER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTP200ALIASES.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTP200ALIASES.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTPAUTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTPAUTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTP_CONTENT_DECODING.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTP_CONTENT_DECODING.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTPGET.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTPGET.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTPHEADER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTPHEADER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTPPOST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTPPOST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTPPROXYTUNNEL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTPPROXYTUNNEL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTP_TRANSFER_DECODING.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTP_TRANSFER_DECODING.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_HTTP_VERSION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_HTTP_VERSION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_IGNORE_CONTENT_LENGTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_IGNORE_CONTENT_LENGTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_INFILESIZE_LARGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_INFILESIZE_LARGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_INFILESIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_INFILESIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_INTERFACE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_INTERFACE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_INTERLEAVEDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_INTERLEAVEDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_INTERLEAVEFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_INTERLEAVEFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_IOCTLDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_IOCTLDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_IOCTLFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_IOCTLFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_IPRESOLVE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_IPRESOLVE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_ISSUERCERT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_ISSUERCERT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_KEYPASSWD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_KEYPASSWD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_KRBLEVEL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_KRBLEVEL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_LOCALPORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_LOCALPORT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_LOCALPORTRANGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_LOCALPORTRANGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_LOGIN_OPTIONS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_LOGIN_OPTIONS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_LOW_SPEED_LIMIT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_LOW_SPEED_LIMIT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_LOW_SPEED_TIME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_LOW_SPEED_TIME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAIL_AUTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAIL_AUTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAIL_FROM.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAIL_FROM.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAIL_RCPT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAIL_RCPT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAXCONNECTS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAXCONNECTS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAXFILESIZE_LARGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAXFILESIZE_LARGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAXFILESIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAXFILESIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAX_RECV_SPEED_LARGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAX_RECV_SPEED_LARGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAXREDIRS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAXREDIRS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_MAX_SEND_SPEED_LARGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_MAX_SEND_SPEED_LARGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NETRC_FILE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NETRC_FILE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NETRC.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NETRC.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NEW_DIRECTORY_PERMS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NEW_DIRECTORY_PERMS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NEW_FILE_PERMS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NEW_FILE_PERMS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NOBODY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NOBODY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NOPROGRESS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NOPROGRESS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NOPROXY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NOPROXY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_NOSIGNAL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_NOSIGNAL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_OPENSOCKETDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_OPENSOCKETDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_OPENSOCKETFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_OPENSOCKETFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PASSWORD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PASSWORD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PATH_AS_IS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PATH_AS_IS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PINNEDPUBLICKEY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PINNEDPUBLICKEY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PIPEWAIT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PIPEWAIT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PORT.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDS.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDS.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDS.3	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDS.3	2016-07-21 06:31:36.000000000 +0800
@@ -39,22 +39,21 @@
 \fICURLOPT_COPYPOSTFIELDS(3)\fP option.
 
 This POST is a normal application/x-www-form-urlencoded kind (and libcurl will
 set that Content-Type by default when this option is used), which is commonly
 used by HTML forms. Change Content-Type with \fICURLOPT_HTTPHEADER(3)\fP.
 
-Using \fICURLOPT_POSTFIELDS(3)\fP implies \fICURLOPT_POST(3)\fP.
-
 You can use \fIcurl_easy_escape(3)\fP to url-encode your data, if necessary. It
 returns a pointer to an encoded string that can be passed as \fIpostdata\fP.
 
-If you want to do a zero-byte POST, you need to set
-\fICURLOPT_POSTFIELDSIZE(3)\fP explicitly to zero, as simply setting
-\fICURLOPT_POSTFIELDS(3)\fP to NULL or "" just effectively disables the
-sending of the specified string. libcurl will instead assume that you'll send
-the POST data using the read callback!
+Using \fICURLOPT_POSTFIELDS(3)\fP implies \fICURLOPT_POST(3)\fP.
+
+If \fICURLOPT_POSTFIELDS(3)\fP is explicitly set to NULL then libcurl will get
+the POST data from the read callback. If you want to send a zero-byte POST set
+\fICURLOPT_POSTFIELDS(3)\fP to an empty string, or set \fICURLOPT_POST(3)\fP to
+1 and \fICURLOPT_POSTFIELDSIZE(3)\fP to 0.
 
 Using POST with HTTP 1.1 implies the use of a "Expect: 100-continue" header.
 You can disable this header with \fICURLOPT_HTTPHEADER(3)\fP as usual.
 
 To make multipart/formdata posts (aka RFC2388-posts), check out the
 \fICURLOPT_HTTPPOST(3)\fP option combined with \fIcurl_formadd(3)\fP.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDS.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDS.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDS.html	2016-05-30 14:16:07.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDS.html	2016-07-21 16:56:00.000000000 +0800
@@ -54,15 +54,15 @@
 <p class="level0">CURLOPT_POSTFIELDS - specify data to POST to server <a name="SYNOPSIS"></a><h2 class="nroffsh">SYNOPSIS</h2>
 <p class="level0">&#35;include &lt;curl/curl.h&gt; 
 <p class="level0">CURLcode curl_easy_setopt(CURL *handle, CURLOPT_POSTFIELDS, char *postdata); <a name="DESCRIPTION"></a><h2 class="nroffsh">DESCRIPTION</h2>
 <p class="level0">Pass a char * as parameter, pointing to the full data to send in a HTTP POST operation. You must make sure that the data is formatted the way you want the server to receive it. libcurl will not convert or encode it for you in any way. For example, the web server may assume that this data is url-encoded. 
 <p class="level0">The data pointed to is NOT copied by the library: as a consequence, it must be preserved by the calling application until the associated transfer finishes. This behaviour can be changed (so libcurl does copy the data) by setting the <a Class="emphasis" href="./CURLOPT_COPYPOSTFIELDS.html">CURLOPT_COPYPOSTFIELDS</a> option. 
 <p class="level0">This POST is a normal application/x-www-form-urlencoded kind (and libcurl will set that Content-Type by default when this option is used), which is commonly used by HTML forms. Change Content-Type with <a Class="emphasis" href="./CURLOPT_HTTPHEADER.html">CURLOPT_HTTPHEADER</a>. 
-<p class="level0">Using <a Class="emphasis" href="./CURLOPT_POSTFIELDS.html">CURLOPT_POSTFIELDS</a> implies <a Class="emphasis" href="./CURLOPT_POST.html">CURLOPT_POST</a>. 
 <p class="level0">You can use <span Class="emphasis">curl_easy_escape(3)</span> to url-encode your data, if necessary. It returns a pointer to an encoded string that can be passed as <span Class="emphasis">postdata</span>. 
-<p class="level0">If you want to do a zero-byte POST, you need to set <a Class="emphasis" href="./CURLOPT_POSTFIELDSIZE.html">CURLOPT_POSTFIELDSIZE</a> explicitly to zero, as simply setting <a Class="emphasis" href="./CURLOPT_POSTFIELDS.html">CURLOPT_POSTFIELDS</a> to NULL or "" just effectively disables the sending of the specified string. libcurl will instead assume that you'll send the POST data using the read callback! 
+<p class="level0">Using <a Class="emphasis" href="./CURLOPT_POSTFIELDS.html">CURLOPT_POSTFIELDS</a> implies <a Class="emphasis" href="./CURLOPT_POST.html">CURLOPT_POST</a>. 
+<p class="level0">If <a Class="emphasis" href="./CURLOPT_POSTFIELDS.html">CURLOPT_POSTFIELDS</a> is explicitly set to NULL then libcurl will get the POST data from the read callback. If you want to send a zero-byte POST set <a Class="emphasis" href="./CURLOPT_POSTFIELDS.html">CURLOPT_POSTFIELDS</a> to an empty string, or set <a Class="emphasis" href="./CURLOPT_POST.html">CURLOPT_POST</a> to 1 and <a Class="emphasis" href="./CURLOPT_POSTFIELDSIZE.html">CURLOPT_POSTFIELDSIZE</a> to 0. 
 <p class="level0">Using POST with HTTP 1.1 implies the use of a "Expect: 100-continue" header. You can disable this header with <a Class="emphasis" href="./CURLOPT_HTTPHEADER.html">CURLOPT_HTTPHEADER</a> as usual. 
 <p class="level0">To make multipart/formdata posts (aka <a href="http://www.ietf.org/rfc/rfc2388.txt">RFC 2388</a>-posts), check out the <a Class="emphasis" href="./CURLOPT_HTTPPOST.html">CURLOPT_HTTPPOST</a> option combined with <span Class="emphasis">curl_formadd(3)</span>. <a name="DEFAULT"></a><h2 class="nroffsh">DEFAULT</h2>
 <p class="level0">NULL <a name="PROTOCOLS"></a><h2 class="nroffsh">PROTOCOLS</h2>
 <p class="level0">HTTP <a name="EXAMPLE"></a><h2 class="nroffsh">EXAMPLE</h2>
 <p class="level0"><pre class="level0">
 CURL *curl = curl_easy_init();
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDSIZE_LARGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDSIZE_LARGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDSIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDSIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTFIELDS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTFIELDS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTQUOTE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTQUOTE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_POSTREDIR.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_POSTREDIR.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PREQUOTE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PREQUOTE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PRIVATE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PRIVATE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROGRESSDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROGRESSDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROGRESSFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROGRESSFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROTOCOLS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROTOCOLS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYAUTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYAUTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYHEADER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYHEADER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYPASSWORD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYPASSWORD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYPORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYPORT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXY_SERVICE_NAME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXY_SERVICE_NAME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXY_TRANSFER_MODE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXY_TRANSFER_MODE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYTYPE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYTYPE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYUSERNAME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYUSERNAME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PROXYUSERPWD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PROXYUSERPWD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_PUT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_PUT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_QUOTE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_QUOTE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RANDOM_FILE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RANDOM_FILE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RANGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RANGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_READDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_READDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_READFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_READFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_REDIR_PROTOCOLS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_REDIR_PROTOCOLS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_REFERER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_REFERER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RESOLVE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RESOLVE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RESUME_FROM_LARGE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RESUME_FROM_LARGE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RESUME_FROM.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RESUME_FROM.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RTSP_CLIENT_CSEQ.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RTSP_CLIENT_CSEQ.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RTSP_REQUEST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RTSP_REQUEST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RTSP_SERVER_CSEQ.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RTSP_SERVER_CSEQ.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RTSP_SESSION_ID.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RTSP_SESSION_ID.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RTSP_STREAM_URI.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RTSP_STREAM_URI.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_RTSP_TRANSPORT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_RTSP_TRANSPORT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SASL_IR.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SASL_IR.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SEEKDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SEEKDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SEEKFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SEEKFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SERVICE_NAME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SERVICE_NAME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SHARE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SHARE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SOCKOPTDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SOCKOPTDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SOCKOPTFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SOCKOPTFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SOCKS5_GSSAPI_NEC.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SOCKS5_GSSAPI_NEC.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SOCKS5_GSSAPI_SERVICE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SOCKS5_GSSAPI_SERVICE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_AUTH_TYPES.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_AUTH_TYPES.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_HOST_PUBLIC_KEY_MD5.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_HOST_PUBLIC_KEY_MD5.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_KEYDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_KEYDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_KEYFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_KEYFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_KNOWNHOSTS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_KNOWNHOSTS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_PRIVATE_KEYFILE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_PRIVATE_KEYFILE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSH_PUBLIC_KEYFILE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSH_PUBLIC_KEYFILE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLCERT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLCERT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLCERTTYPE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLCERTTYPE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_CIPHER_LIST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_CIPHER_LIST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_CTX_DATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_CTX_DATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_CTX_FUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_CTX_FUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_ENABLE_ALPN.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_ENABLE_ALPN.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_ENABLE_NPN.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_ENABLE_NPN.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLENGINE_DEFAULT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLENGINE_DEFAULT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLENGINE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLENGINE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_FALSESTART.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_FALSESTART.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLKEY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLKEY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLKEYTYPE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLKEYTYPE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_OPTIONS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_OPTIONS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_SESSIONID_CACHE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_SESSIONID_CACHE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_VERIFYHOST.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_VERIFYHOST.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_VERIFYPEER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_VERIFYPEER.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSL_VERIFYSTATUS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSL_VERIFYSTATUS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_SSLVERSION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_SSLVERSION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_STDERR.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_STDERR.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_STREAM_DEPENDS_E.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_STREAM_DEPENDS_E.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_STREAM_DEPENDS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_STREAM_DEPENDS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_STREAM_WEIGHT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_STREAM_WEIGHT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TCP_FASTOPEN.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TCP_FASTOPEN.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TCP_KEEPALIVE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TCP_KEEPALIVE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TCP_KEEPIDLE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TCP_KEEPIDLE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TCP_KEEPINTVL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TCP_KEEPINTVL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TCP_NODELAY.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TCP_NODELAY.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TELNETOPTIONS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TELNETOPTIONS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TFTP_BLKSIZE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TFTP_BLKSIZE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TFTP_NO_OPTIONS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TFTP_NO_OPTIONS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TIMECONDITION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TIMECONDITION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TIMEOUT_MS.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TIMEOUT_MS.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TIMEOUT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TIMEOUT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TIMEVALUE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TIMEVALUE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TLSAUTH_PASSWORD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TLSAUTH_PASSWORD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TLSAUTH_TYPE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TLSAUTH_TYPE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TLSAUTH_USERNAME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TLSAUTH_USERNAME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TRANSFER_ENCODING.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TRANSFER_ENCODING.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_TRANSFERTEXT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_TRANSFERTEXT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_UNIX_SOCKET_PATH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_UNIX_SOCKET_PATH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_UNRESTRICTED_AUTH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_UNRESTRICTED_AUTH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_UPLOAD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_UPLOAD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_URL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_URL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_USERAGENT.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_USERAGENT.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_USERNAME.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_USERNAME.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_USERPWD.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_USERPWD.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_USE_SSL.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_USE_SSL.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_VERBOSE.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_VERBOSE.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_WILDCARDMATCH.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_WILDCARDMATCH.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_WRITEDATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_WRITEDATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_WRITEFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_WRITEFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_XFERINFODATA.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_XFERINFODATA.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_XFERINFOFUNCTION.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_XFERINFOFUNCTION.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/opts/CURLOPT_XOAUTH2_BEARER.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/opts/CURLOPT_XOAUTH2_BEARER.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/symbols-in-versions /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/symbols-in-versions
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/libcurl/symbols-in-versions	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/libcurl/symbols-in-versions	2016-07-21 06:31:36.000000000 +0800
@@ -220,12 +220,13 @@
 CURLINFO_HEADER_IN              7.9.6
 CURLINFO_HEADER_OUT             7.9.6
 CURLINFO_HEADER_SIZE            7.4.1
 CURLINFO_HTTPAUTH_AVAIL         7.10.8
 CURLINFO_HTTP_CODE              7.4.1         7.10.8
 CURLINFO_HTTP_CONNECTCODE       7.10.7
+CURLINFO_HTTP_VERSION           7.50.0
 CURLINFO_LASTONE                7.4.1
 CURLINFO_LASTSOCKET             7.15.2
 CURLINFO_LOCAL_IP               7.21.0
 CURLINFO_LOCAL_PORT             7.21.0
 CURLINFO_LONG                   7.4.1
 CURLINFO_MASK                   7.4.1
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/mk-ca-bundle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/mk-ca-bundle.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/ROADMAP.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/ROADMAP.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/ROADMAP.md	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/ROADMAP.md	2016-07-21 06:31:36.000000000 +0800
@@ -5,21 +5,37 @@
 intended to serve as a guideline for others for information, feedback and
 possible participation.
 
 HTTP/2
 ------
 
-- test suite
+Improve performance. Measurements and tests have shown that in several cases
+doing transfers over HTTP/2 can be notably slower than the same transfer done
+over HTTP/1. Some of that difference can be attributed the inefficient window
+size handling currently in use but there are probably more to be learned and
+worked on to optimize this.
+
+QUIC
+----
+
+The standardization process of QUIC has been taken to the IETF and can be
+followed on the [IETF QUIC Mailing
+list](https://www.ietf.org/mailman/listinfo/quic). I'd like us to get on the
+bandwagon. Ideally, this would be done with a separate library/project to
+handle the binary/framing layer in a similar fashion to how HTTP/2 is
+implemented. This, to allow other projects to benefit from the work and to
+thus broaden the interest and chance of others to participate.
+
+TLS 1.3
+-------
+
+The new version of the TLS protocol is in the pipeline and will soon start to
+get used out in the wild. It offers some new interesting features and will
+need the TLS libraries to adapt and quite likely provide additional or
+modified APIs. libcurl needs to adapt accordingly.
 
-   Base this on existing nghttp2 server to start with to make functional
-   tests. Later on we can adopt that code or work with nghttp2 to provide ways
-   to have the http2 server respond with broken responses to make sure we deal
-   with that nicely as well.
-
-   To decide: if we need to bundle parts of the nghttp2 stuff that probably
-   won't be shipped by many distros.
 
 HTTP cookies
 ------------
 
 Two cookie drafts have been adopted by the httpwg in IETF and we should
 support them as the popular browsers will as well:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/THANKS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/THANKS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/THANKS	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/THANKS	2016-07-21 16:54:20.000000000 +0800
@@ -84,12 +84,13 @@
 Andrew Biggs
 Andrew Bushnell
 Andrew Francis
 Andrew Fuller
 Andrew Kurushin
 Andrew Moise
+Andrew Robbins
 Andrew Wansink
 Andrew de los Reyes
 Andrey Labunets
 Andrii Moiseiev
 Andrés García
 Andy Cedilnik
@@ -412,12 +413,13 @@
 Evgeny Grin
 Evgeny Turnaev
 Eygene Ryabinkin
 Fabian Frank
 Fabian Hiernaux
 Fabian Keil
+Fabian Ruff
 Fabrizio Ammollo
 Fedor Karpelevitch
 Feist Josselin
 Felix Yan
 Felix von Leitner
 Feng Tu
@@ -473,12 +475,13 @@
 Glen Nakamura
 Glen Scott
 Glenn Sheridan
 Google Inc.
 Gordon Marler
 Gorilla Maguila
+Gou Lingfeng
 Grant Erickson
 Grant Pannell
 Greg Hewgill
 Greg Morse
 Greg Onufer
 Greg Pratt
@@ -540,12 +543,13 @@
 Ingmar Runge
 Ingo Ralf Blum
 Ingo Wilken
 Irfan Adilovic
 Isaac Boukris
 Ishan SinghLevett
+Ivan Avdeev
 Ivo Bellin Salarin
 Jack Zhang
 Jacky Lam
 Jacob Meuser
 Jacob Moshenko
 Jactry Zeng
@@ -796,12 +800,13 @@
 Ludwig Nussel
 Lukas Ruzicka
 Lukasz Czekierda
 Luke Amery
 Luke Call
 Luke Dashjr
+Luo Jinghua
 Luong Dinh Dung
 Lyndon Hill
 Maciej Karpiuk
 Maciej Puzio
 Maciej W. Rozycki
 Maks Naumov
@@ -923,12 +928,13 @@
 Mike Hommey
 Mike Mio
 Mike Power
 Mike Protts
 Mike Revi
 Miklos Nemeth
+Miroslav Franc
 Miroslav Spousta
 Mitz Wark
 Mohamed Lrhazi
 Mohammad AlSaleh
 Mohun Biswas
 Mostyn Bramley-Moore
@@ -1085,18 +1091,20 @@
 Randy McMurchy
 Ravi Pratap
 Ray Dassen
 Ray Pekowski
 Ray Satiro
 Razvan Cojocaru
+Reinhard Max
 Reinout van Schouwen
 Remi Gacogne
 Renato Botelho
 Renaud Chaillat
 Renaud Duhaut
 Renaud Guillard
+Renaud Lehoux
 Rene Bernhardt
 Rene Rebe
 Reuven Wachtfogel
 Reza Arbab
 Ricardo Cadime
 Rich Burridge
@@ -1105,12 +1113,13 @@
 Richard Archer
 Richard Atterer
 Richard Bramante
 Richard Clayton
 Richard Cooper
 Richard Gorton
+Richard Gray
 Richard Hosking
 Richard Michael
 Richard Moore
 Richard Prescott
 Richard Silverman
 Richard van den Berg
@@ -1140,12 +1149,13 @@
 Rodrigo Silva
 Roger Leigh
 Roland Blom
 Roland Krikava
 Roland Zimmermann
 Rolland Dudemaine
+Romain Coltel
 Roman Koifman
 Roman Mamedov
 Romulo A. Ceccon
 Ron Parker
 Ron Zapp
 Rosimildo da Silva
@@ -1174,12 +1184,13 @@
 Santhana Todatry
 Saqib Ali
 Sara Golemon
 Saran Neti
 Sascha Swiercy
 Saul good
+Saurav Babu
 Scott Bailey
 Scott Barrett
 Scott Cantor
 Scott Davis
 Scott McCreary
 Sean Boudreau
@@ -1214,12 +1225,13 @@
 Stadler Stephan
 Stan van de Burgt
 Stanislav Ivochkin
 Stefan Bühler
 Stefan Eissing
 Stefan Esser
+Stefan Kanthak
 Stefan Krause
 Stefan Neis
 Stefan Teleman
 Stefan Tomanek
 Stefan Ulrich
 Steinar H. Gunderson
@@ -1283,12 +1295,13 @@
 Tim Rühsen
 Tim Sneddon
 Tim Stack
 Tim Starling
 Timo Sirainen
 Timotej Lazar
+Timothy Polich
 Tinus van den Berg
 Tobias Markus
 Tobias Rundström
 Tobias Stoeckmann
 Toby Peterson
 Todd A Ouska
@@ -1403,8 +1416,9 @@
 marc-groundctl on github
 neex on github
 nk
 silveja1 on github
 swalkaus at yahoo.com
 tommink[at]post.pl
+vanillajonathan on github
 Štefan Kremeň
 Никита Дорохин
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/docs/TODO	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/docs/TODO	2016-07-21 06:31:36.000000000 +0800
@@ -30,12 +30,13 @@
  1.12 have form functions use CURL handle argument
  1.13 Add CURLOPT_MAIL_CLIENT option
  1.14 Typesafe curl_easy_setopt()
  1.15 TCP Fast Open
  1.16 Try to URL encode given URL
  1.17 Add support for IRIs
+ 1.18 try next proxy if one doesn't work
 
  2. libcurl - multi interface
  2.1 More non-blocking
  2.2 Better support for same name resolves
  2.3 Non-blocking curl_multi_remove_handle()
  2.4 Split connect and authentication process
@@ -285,16 +286,25 @@
   curl_easy_set_large() - sets a curl_off_t value
 
   curl_easy_set_ptr() - sets a pointer
 
   curl_easy_set_cb() - sets a callback PLUS its callback data
 
-1.15 TCP Fast Open
+1.15 Monitor connections in the connection pool
 
- RFC 7413 defines how to include data already in the TCP SYN handshake to
- reduce latency.
+ libcurl's connection cache or pool holds a number of open connections for the
+ purpose of possible subsequent connection reuse. It may contain a few up to a
+ significant amount of connections. Currently, libcurl leaves all connections
+ as they are and first when a connection is iterated over for matching or
+ reuse purpose it is verified that it is still alive.
+
+ Those connections may get closed by the server side for idleness or they may
+ get a HTTP/2 ping from the peer to verify that they're still alive. By adding
+ monitoring of the connections while in the pool, libcurl can detect dead
+ connections (and close them) better and earlier, and it can handle HTTP/2
+ pings to keep such ones alive even when not actively doing transfers on them.
 
 1.16 Try to URL encode given URL
 
  Given a URL that for example contains spaces, libcurl could have an option
  that would try somewhat harder than it does now and convert spaces to %20 and
  perhaps URL encoded byte values over 128 etc (basically do what the redirect
@@ -308,12 +318,21 @@
  support this, curl/libcurl would need to translate/encode the given input
  from the input string encoding into percent encoded output "over the wire".
 
  To make that work smoothly for curl users even on Windows, curl would
  probably need to be able to convert from several input encodings.
 
+1.18 try next proxy if one doesn't work
+
+ Allow an application to specify a list of proxies to try, and failing to
+ connect to the first go on and try the next instead until the list is
+ exhausted. Browsers support this feature at least when they specify proxies
+ using PACs.
+
+ https://github.com/curl/curl/issues/896
+
 
 2. libcurl - multi interface
 
 2.1 More non-blocking
 
  Make sure we don't ever loop because of non-blocking sockets returning
@@ -713,12 +732,15 @@
 
  The client could be told to use maximum N simultaneous parallel transfers and
  then just make sure that happens. It should of course not make more than one
  connection to the same remote host. This would require the client to use the
  multi interface. https://curl.haxx.se/bug/feature.cgi?id=1558595
 
+ Using the multi interface would also allow properly using parallel transfers
+ with HTTP/2 and supporting HTTP/2 server push from the command line.
+
 17.5 provide formpost headers
 
  Extending the capabilities of the multipart formposting. How about leaving
  the ';type=foo' syntax as it is and adding an extra tag (headers) which
  works like this: curl -F "coolfiles=@fil1.txt;headers=@fil1.hdr" where
  fil1.hdr contains extra headers like
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/curl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/curl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/curl.h	2016-05-21 04:59:02.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/curl.h	2016-07-21 06:31:36.000000000 +0800
@@ -88,13 +88,13 @@
 #endif
 
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
-typedef void CURL;
+typedef struct Curl_easy CURL;
 
 /*
  * libcurl external API function linkage decorations.
  */
 
 #ifdef CURL_STATICLIB
@@ -2190,15 +2190,16 @@
   CURLINFO_PRIMARY_PORT     = CURLINFO_LONG   + 40,
   CURLINFO_LOCAL_IP         = CURLINFO_STRING + 41,
   CURLINFO_LOCAL_PORT       = CURLINFO_LONG   + 42,
   CURLINFO_TLS_SESSION      = CURLINFO_SLIST  + 43,
   CURLINFO_ACTIVESOCKET     = CURLINFO_SOCKET + 44,
   CURLINFO_TLS_SSL_PTR      = CURLINFO_SLIST  + 45,
+  CURLINFO_HTTP_VERSION     = CURLINFO_LONG   + 46,
   /* Fill in new entries below here! */
 
-  CURLINFO_LASTONE          = 45
+  CURLINFO_LASTONE          = 46
 } CURLINFO;
 
 /* CURLINFO_RESPONSE_CODE is the new name for the option previously known as
    CURLINFO_HTTP_CODE */
 #define CURLINFO_HTTP_CODE CURLINFO_RESPONSE_CODE
 
@@ -2254,13 +2255,13 @@
                                    curl_lock_access locktype,
                                    void *userptr);
 typedef void (*curl_unlock_function)(CURL *handle,
                                      curl_lock_data data,
                                      void *userptr);
 
-typedef void CURLSH;
+typedef struct Curl_share CURLSH;
 
 typedef enum {
   CURLSHE_OK,  /* all is fine */
   CURLSHE_BAD_OPTION, /* 1 */
   CURLSHE_IN_USE,     /* 2 */
   CURLSHE_INVALID,    /* 3 */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/curlver.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/curlver.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/curlver.h	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/curlver.h	2016-07-21 16:56:49.000000000 +0800
@@ -27,19 +27,19 @@
 
 /* This is the global package copyright */
 #define LIBCURL_COPYRIGHT "1996 - 2016 Daniel Stenberg, <daniel@haxx.se>."
 
 /* This is the version number of the libcurl package from which this header
    file origins: */
-#define LIBCURL_VERSION "7.49.1"
+#define LIBCURL_VERSION "7.50.0"
 
 /* The numeric version number is also available "in parts" by using these
    defines: */
 #define LIBCURL_VERSION_MAJOR 7
-#define LIBCURL_VERSION_MINOR 49
-#define LIBCURL_VERSION_PATCH 1
+#define LIBCURL_VERSION_MINOR 50
+#define LIBCURL_VERSION_PATCH 0
 
 /* This is the numeric version of the libcurl version number, meant for easier
    parsing and comparions by programs. The LIBCURL_VERSION_NUM define will
    always follow this syntax:
 
          0xXXYYZZ
@@ -54,24 +54,24 @@
    comparisons with greater than and less than work.
 
    Note: This define is the full hex number and _does not_ use the
    CURL_VERSION_BITS() macro since curl's own configure script greps for it
    and needs it to contain the full number.
 */
-#define LIBCURL_VERSION_NUM 0x073101
+#define LIBCURL_VERSION_NUM 0x073200
 
 /*
  * This is the date and time when the full source package was created. The
  * timestamp is not stored in git, as the timestamp is properly set in the
  * tarballs by the maketgz script.
  *
  * The format of the date should follow this template:
  *
  * "Mon Feb 12 11:35:33 UTC 2007"
  */
-#define LIBCURL_TIMESTAMP "Mon May 30 06:15:46 UTC 2016"
+#define LIBCURL_TIMESTAMP "Thu Jul 21 08:55:43 UTC 2016"
 
 #define CURL_VERSION_BITS(x,y,z) ((x)<<16|(y)<<8|z)
 #define CURL_AT_LEAST_VERSION(x,y,z) \
   (LIBCURL_VERSION_NUM >= CURL_VERSION_BITS(x, y, z))
 
 #endif /* __CURL_CURLVER_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/Makefile.in	2016-05-22 01:52:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/Makefile.in	2016-07-21 07:54:04.000000000 +0800
@@ -428,15 +428,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu include/curl/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign include/curl/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu include/curl/Makefile
+	  $(AUTOMAKE) --foreign include/curl/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/multi.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/multi.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/include/curl/multi.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/include/curl/multi.h	2016-07-21 06:31:36.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -49,13 +49,13 @@
 #include "curl.h"
 
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
-typedef void CURLM;
+typedef struct Curl_multi CURLM;
 
 typedef enum {
   CURLM_CALL_MULTI_PERFORM = -1, /* please call curl_multi_perform() or
                                     curl_multi_socket*() soon */
   CURLM_OK,
   CURLM_BAD_HANDLE,      /* the passed-in handle is not a valid CURLM handle */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/asyn-ares.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/asyn-ares.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/asyn-ares.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/asyn-ares.c	2016-07-21 06:31:36.000000000 +0800
@@ -246,13 +246,13 @@
  *
  * return number of sockets it worked on
  */
 
 static int waitperform(struct connectdata *conn, int timeout_ms)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int nfds;
   int bitmask;
   ares_socket_t socks[ARES_GETSOCK_MAXNUM];
   struct pollfd pfd[ARES_GETSOCK_MAXNUM];
   int i;
   int num = 0;
@@ -306,13 +306,13 @@
  *
  * Returns normal CURLcode errors.
  */
 CURLcode Curl_resolver_is_resolved(struct connectdata *conn,
                                    struct Curl_dns_entry **dns)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ResolverResults *res = (struct ResolverResults *)
     conn->async.os_specific;
   CURLcode result = CURLE_OK;
 
   *dns = NULL;
 
@@ -350,13 +350,13 @@
  * CURLE_OPERATION_TIMEDOUT if a time-out occurred.
  */
 CURLcode Curl_resolver_wait_resolv(struct connectdata *conn,
                                    struct Curl_dns_entry **entry)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   long timeout;
   struct timeval now = Curl_tvnow();
   struct Curl_dns_entry *temp_entry;
 
   timeout = Curl_timeleft(data, &now, TRUE);
   if(!timeout)
@@ -489,13 +489,13 @@
 Curl_addrinfo *Curl_resolver_getaddrinfo(struct connectdata *conn,
                                          const char *hostname,
                                          int port,
                                          int *waitp)
 {
   char *bufp;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct in_addr in;
   int family = PF_INET;
 #ifdef ENABLE_IPV6 /* CURLRES_IPV6 */
   struct in6_addr in6;
 #endif /* CURLRES_IPV6 */
 
@@ -580,13 +580,13 @@
 
     *waitp = 1; /* expect asynchronous response */
   }
   return NULL; /* no struct yet */
 }
 
-CURLcode Curl_set_dns_servers(struct SessionHandle *data,
+CURLcode Curl_set_dns_servers(struct Curl_easy *data,
                               char *servers)
 {
   CURLcode result = CURLE_NOT_BUILT_IN;
   int ares_result;
 
   /* If server is NULL or empty, this would purge all DNS servers
@@ -618,13 +618,13 @@
   (void)data;
   (void)(ares_result);
 #endif
   return result;
 }
 
-CURLcode Curl_set_dns_interface(struct SessionHandle *data,
+CURLcode Curl_set_dns_interface(struct Curl_easy *data,
                                 const char *interf)
 {
 #if (ARES_VERSION >= 0x010704)
   if(!interf)
     interf = "";
 
@@ -635,13 +635,13 @@
   (void)data;
   (void)interf;
   return CURLE_NOT_BUILT_IN;
 #endif
 }
 
-CURLcode Curl_set_dns_local_ip4(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip4(struct Curl_easy *data,
                                 const char *local_ip4)
 {
 #if (ARES_VERSION >= 0x010704)
   struct in_addr a4;
 
   if((!local_ip4) || (local_ip4[0] == 0)) {
@@ -660,13 +660,13 @@
   (void)data;
   (void)local_ip4;
   return CURLE_NOT_BUILT_IN;
 #endif
 }
 
-CURLcode Curl_set_dns_local_ip6(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip6(struct Curl_easy *data,
                                 const char *local_ip6)
 {
 #if (ARES_VERSION >= 0x010704) && defined(ENABLE_IPV6)
   unsigned char a6[INET6_ADDRSTRLEN];
 
   if((!local_ip6) || (local_ip6[0] == 0)) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/asyn.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/asyn.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/asyn.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/asyn.h	2016-07-21 06:31:36.000000000 +0800
@@ -24,13 +24,13 @@
 
 #include "curl_setup.h"
 #include "curl_addrinfo.h"
 
 struct addrinfo;
 struct hostent;
-struct SessionHandle;
+struct Curl_easy;
 struct connectdata;
 struct Curl_dns_entry;
 
 /*
  * This header defines all functions in the internal asynch resolver interface.
  * All asynch resolvers need to provide these functions.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/asyn-thread.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/asyn-thread.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/asyn-thread.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/asyn-thread.c	2016-07-21 06:31:36.000000000 +0800
@@ -276,12 +276,15 @@
 
   if(rc != 0) {
     tsd->sock_error = SOCKERRNO?SOCKERRNO:rc;
     if(tsd->sock_error == 0)
       tsd->sock_error = RESOLVER_ENOMEM;
   }
+  else {
+    Curl_addrinfo_set_port(tsd->res, tsd->port);
+  }
 
   Curl_mutex_acquire(tsd->mtx);
   if(tsd->done) {
     /* too late, gotta clean up the mess */
     Curl_mutex_release(tsd->mtx);
     destroy_thread_sync_data(tsd);
@@ -491,13 +494,13 @@
  * name resolve request has completed. It should also make sure to time-out if
  * the operation seems to take too long.
  */
 CURLcode Curl_resolver_is_resolved(struct connectdata *conn,
                                    struct Curl_dns_entry **entry)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct thread_data   *td = (struct thread_data*) conn->async.os_specific;
   int done = 0;
 
   *entry = NULL;
 
   if(!td) {
@@ -599,23 +602,27 @@
 #ifdef CURLRES_IPV6
   struct in6_addr in6;
 #endif /* CURLRES_IPV6 */
 
   *waitp = 0; /* default to synchronous response */
 
+#ifndef USE_RESOLVE_ON_IPS
   /* First check if this is an IPv4 address string */
   if(Curl_inet_pton(AF_INET, hostname, &in) > 0)
     /* This is a dotted IP address 123.123.123.123-style */
     return Curl_ip2addr(AF_INET, &in, hostname, port);
 
 #ifdef CURLRES_IPV6
   /* check if this is an IPv6 address string */
-  if(Curl_inet_pton (AF_INET6, hostname, &in6) > 0)
+  if(Curl_inet_pton(AF_INET6, hostname, &in6) > 0)
     /* This is an IPv6 address literal */
     return Curl_ip2addr(AF_INET6, &in6, hostname, port);
+#endif /* CURLRES_IPV6 */
+#endif /* !USE_RESOLVE_ON_IPS */
 
+#ifdef CURLRES_IPV6
   /*
    * Check if a limited name resolve has been requested.
    */
   switch(conn->ip_version) {
   case CURL_IPRESOLVE_V4:
     pf = PF_INET;
@@ -653,43 +659,47 @@
   error = Curl_getaddrinfo_ex(hostname, sbuf, &hints, &res);
   if(error) {
     infof(conn->data, "getaddrinfo() failed for %s:%d; %s\n",
           hostname, port, Curl_strerror(conn, SOCKERRNO));
     return NULL;
   }
+  else {
+    Curl_addrinfo_set_port(res, port);
+  }
+
   return res;
 }
 
 #endif /* !HAVE_GETADDRINFO */
 
-CURLcode Curl_set_dns_servers(struct SessionHandle *data,
+CURLcode Curl_set_dns_servers(struct Curl_easy *data,
                               char *servers)
 {
   (void)data;
   (void)servers;
   return CURLE_NOT_BUILT_IN;
 
 }
 
-CURLcode Curl_set_dns_interface(struct SessionHandle *data,
+CURLcode Curl_set_dns_interface(struct Curl_easy *data,
                                 const char *interf)
 {
   (void)data;
   (void)interf;
   return CURLE_NOT_BUILT_IN;
 }
 
-CURLcode Curl_set_dns_local_ip4(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip4(struct Curl_easy *data,
                                 const char *local_ip4)
 {
   (void)data;
   (void)local_ip4;
   return CURLE_NOT_BUILT_IN;
 }
 
-CURLcode Curl_set_dns_local_ip6(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip6(struct Curl_easy *data,
                                 const char *local_ip6)
 {
   (void)data;
   (void)local_ip6;
   return CURLE_NOT_BUILT_IN;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/base64.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/base64.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/base64.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/base64.c	2016-07-21 06:31:36.000000000 +0800
@@ -20,13 +20,13 @@
  *
  ***************************************************************************/
 
 /* Base64 encoding/decoding */
 
 #include "curl_setup.h"
-#include "urldata.h" /* for the SessionHandle definition */
+#include "urldata.h" /* for the Curl_easy definition */
 #include "warnless.h"
 #include "curl_base64.h"
 #include "non-ascii.h"
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
@@ -166,13 +166,13 @@
   *outlen = rawlen;
 
   return CURLE_OK;
 }
 
 static CURLcode base64_encode(const char *table64,
-                              struct SessionHandle *data,
+                              struct Curl_easy *data,
                               const char *inputbuff, size_t insize,
                               char **outptr, size_t *outlen)
 {
   CURLcode result;
   unsigned char ibuf[3];
   unsigned char obuf[4];
@@ -280,13 +280,13 @@
  * output shall not be considered valid unless CURLE_OK is returned.
  *
  * When encoded data length is 0, returns NULL in *outptr.
  *
  * @unittest: 1302
  */
-CURLcode Curl_base64_encode(struct SessionHandle *data,
+CURLcode Curl_base64_encode(struct Curl_easy *data,
                             const char *inputbuff, size_t insize,
                             char **outptr, size_t *outlen)
 {
   return base64_encode(base64, data, inputbuff, insize, outptr, outlen);
 }
 
@@ -304,12 +304,12 @@
  * output shall not be considered valid unless CURLE_OK is returned.
  *
  * When encoded data length is 0, returns NULL in *outptr.
  *
  * @unittest: 1302
  */
-CURLcode Curl_base64url_encode(struct SessionHandle *data,
+CURLcode Curl_base64url_encode(struct Curl_easy *data,
                                const char *inputbuff, size_t insize,
                                char **outptr, size_t *outlen)
 {
   return base64_encode(base64url, data, inputbuff, insize, outptr, outlen);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/checksrc.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/checksrc.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/checksrc.pl	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/checksrc.pl	2016-07-21 06:31:36.000000000 +0800
@@ -418,13 +418,19 @@
         if($l =~ /^(.*[^ ].*) ;$/) {
             checkwarn("SPACESEMILCOLON",
                       $line, length($1), $file, $ol, "space before last semicolon");
         }
 
         # scan for use of banned functions
-        if($l =~ /^(.*\W)(sprintf|vsprintf|strcat|strncat|_mbscat|_mbsncat|_tcscat|_tcsncat|wcscat|wcsncat|gets)\s*\(/) {
+        if($l =~ /^(.*\W)
+                   (gets|
+                    v?sprintf|
+                    (str|_mbs|_tcs|_wcs)n?cat|
+                    LoadLibrary(Ex)?(A|W)?)
+                   \s*\(
+                 /x) {
             checkwarn("BANNEDFUNC",
                       $line, length($1), $file, $ol,
                       "use of $2 is banned");
         }
 
         # scan for use of non-binary fopen without the macro
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/conncache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/conncache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/conncache.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/conncache.c	2016-07-21 06:31:36.000000000 +0800
@@ -42,13 +42,13 @@
   struct connectdata *data = element;
   (void)user;
 
   data->bundle = NULL;
 }
 
-static CURLcode bundle_create(struct SessionHandle *data,
+static CURLcode bundle_create(struct Curl_easy *data,
                               struct connectbundle **cb_ptr)
 {
   (void)data;
   DEBUGASSERT(*cb_ptr == NULL);
   *cb_ptr = malloc(sizeof(struct connectbundle));
   if(!*cb_ptr)
@@ -196,13 +196,13 @@
 CURLcode Curl_conncache_add_conn(struct conncache *connc,
                                  struct connectdata *conn)
 {
   CURLcode result;
   struct connectbundle *bundle;
   struct connectbundle *new_bundle = NULL;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   bundle = Curl_conncache_find_bundle(conn, data->state.conn_cache);
   if(!bundle) {
     char *key;
     int rc;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/connect.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/connect.c	2016-07-21 06:31:36.000000000 +0800
@@ -69,12 +69,13 @@
 #include "inet_pton.h"
 #include "vtls/vtls.h" /* for Curl_ssl_check_cxn() */
 #include "progress.h"
 #include "warnless.h"
 #include "conncache.h"
 #include "multihandle.h"
+#include "system_win32.h"
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
@@ -100,13 +101,13 @@
   u_long keepalivetime;
   u_long keepaliveinterval;
 };
 #endif
 
 static void
-tcpkeepalive(struct SessionHandle *data,
+tcpkeepalive(struct Curl_easy *data,
              curl_socket_t sockfd)
 {
   int optval = data->set.tcp_keepalive?1:0;
 
   /* only set IDLE and INTVL if setting KEEPALIVE is successful */
   if(setsockopt(sockfd, SOL_SOCKET, SO_KEEPALIVE,
@@ -175,13 +176,13 @@
  * If 'nowp' is non-NULL, it points to the current time.
  * 'duringconnect' is FALSE if not during a connect, as then of course the
  * connect timeout is not taken into account!
  *
  * @unittest: 1303
  */
-long Curl_timeleft(struct SessionHandle *data,
+long Curl_timeleft(struct Curl_easy *data,
                    struct timeval *nowp,
                    bool duringconnect)
 {
   int timeout_set = 0;
   long timeout_ms = duringconnect?DEFAULT_CONNECT_TIMEOUT:0;
   struct timeval now;
@@ -235,13 +236,13 @@
   return timeout_ms;
 }
 
 static CURLcode bindlocal(struct connectdata *conn,
                           curl_socket_t sockfd, int af, unsigned int scope)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   struct Curl_sockaddr_storage sa;
   struct sockaddr *sock = (struct sockaddr *)&sa;  /* bind to this address */
   curl_socklen_t sizeof_sa = 0; /* size of the data sock points to */
   struct sockaddr_in *si4 = (struct sockaddr_in *)&sa;
 #ifdef ENABLE_IPV6
@@ -659,13 +660,13 @@
    connection */
 void Curl_updateconninfo(struct connectdata *conn, curl_socket_t sockfd)
 {
   curl_socklen_t len;
   struct Curl_sockaddr_storage ssrem;
   struct Curl_sockaddr_storage ssloc;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(conn->socktype == SOCK_DGRAM)
     /* there's no connection! */
     return;
 
   if(!conn->bits.reuse && !conn->bits.tcp_fastopen) {
@@ -716,13 +717,13 @@
  */
 
 CURLcode Curl_is_connected(struct connectdata *conn,
                            int sockindex,
                            bool *connected)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_OK;
   long allow;
   int error = 0;
   struct timeval now;
   int rc;
   int i;
@@ -867,13 +868,13 @@
 }
 
 void Curl_tcpnodelay(struct connectdata *conn, curl_socket_t sockfd)
 {
 #if defined(TCP_NODELAY)
 #if !defined(CURL_DISABLE_VERBOSE_STRINGS)
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 #endif
   curl_socklen_t onoff = (curl_socklen_t) 1;
   int level = IPPROTO_TCP;
 
 #if 0
   /* The use of getprotobyname() is disabled since it isn't thread-safe on
@@ -909,13 +910,13 @@
    sending data to a dead peer (instead of relying on the 4th argument to send
    being MSG_NOSIGNAL). Possibly also existing and in use on other BSD
    systems? */
 static void nosigpipe(struct connectdata *conn,
                       curl_socket_t sockfd)
 {
-  struct SessionHandle *data= conn->data;
+  struct Curl_easy *data= conn->data;
   int onoff = 1;
   if(setsockopt(sockfd, SOL_SOCKET, SO_NOSIGPIPE, (void *)&onoff,
                 sizeof(onoff)) < 0)
     infof(data, "Could not set SO_NOSIGPIPE: %s\n",
           Curl_strerror(conn, SOCKERRNO));
 }
@@ -942,49 +943,21 @@
 
 void Curl_sndbufset(curl_socket_t sockfd)
 {
   int val = CURL_MAX_WRITE_SIZE + 32;
   int curval = 0;
   int curlen = sizeof(curval);
-  DWORD majorVersion = 6;
 
   static int detectOsState = DETECT_OS_NONE;
 
   if(detectOsState == DETECT_OS_NONE) {
-#if !defined(_WIN32_WINNT) || !defined(_WIN32_WINNT_WIN2K) || \
-    (_WIN32_WINNT < _WIN32_WINNT_WIN2K)
-    OSVERSIONINFO osver;
-
-    memset(&osver, 0, sizeof(osver));
-    osver.dwOSVersionInfoSize = sizeof(osver);
-
-    detectOsState = DETECT_OS_PREVISTA;
-    if(GetVersionEx(&osver)) {
-      if(osver.dwMajorVersion >= majorVersion)
-        detectOsState = DETECT_OS_VISTA_OR_LATER;
-    }
-#else
-    ULONGLONG cm;
-    OSVERSIONINFOEX osver;
-
-    memset(&osver, 0, sizeof(osver));
-    osver.dwOSVersionInfoSize = sizeof(osver);
-    osver.dwMajorVersion = majorVersion;
-
-    cm = VerSetConditionMask(0, VER_MAJORVERSION, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_MINORVERSION, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_SERVICEPACKMAJOR, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_SERVICEPACKMINOR, VER_GREATER_EQUAL);
-
-    if(VerifyVersionInfo(&osver, (VER_MAJORVERSION | VER_MINORVERSION |
-                                  VER_SERVICEPACKMAJOR | VER_SERVICEPACKMINOR),
-                         cm))
+    if(Curl_verify_windows_version(6, 0, PLATFORM_WINNT,
+                                   VERSION_GREATER_THAN_EQUAL))
       detectOsState = DETECT_OS_VISTA_OR_LATER;
     else
       detectOsState = DETECT_OS_PREVISTA;
-#endif
   }
 
   if(detectOsState == DETECT_OS_VISTA_OR_LATER)
     return;
 
   if(getsockopt(sockfd, SOL_SOCKET, SO_SNDBUF, (char *)&curval, &curlen) == 0)
@@ -1009,13 +982,13 @@
                                 curl_socket_t *sockp)
 {
   struct Curl_sockaddr_ex addr;
   int rc = -1;
   int error = 0;
   bool isconnected = FALSE;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sockfd;
   CURLcode result;
   char ipaddress[MAX_IPADR_LEN];
   long port;
   bool is_tcp;
 
@@ -1108,13 +1081,16 @@
       endpoints.sae_dstaddrlen = addr.addrlen;
 
       rc = connectx(sockfd, &endpoints, SAE_ASSOCID_ANY,
                     CONNECT_RESUME_ON_READ_WRITE | CONNECT_DATA_IDEMPOTENT,
                     NULL, 0, NULL, NULL);
 #elif defined(MSG_FASTOPEN) /* Linux */
-      rc = 0; /* Do nothing */
+      if(conn->given->flags & PROTOPT_SSL)
+        rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
+      else
+        rc = 0; /* Do nothing */
 #endif
     }
     else {
       rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
     }
 
@@ -1170,13 +1146,13 @@
  * pointer with the connected socket.
  */
 
 CURLcode Curl_connecthost(struct connectdata *conn,  /* context */
                           const struct Curl_dns_entry *remotehost)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct timeval before = Curl_tvnow();
   CURLcode result = CURLE_COULDNT_CONNECT;
 
   long timeout_ms = Curl_timeleft(data, &before, TRUE);
 
   if(timeout_ms < 0) {
@@ -1229,17 +1205,17 @@
   }
   return 0;
 }
 
 /*
  * Used to extract socket and connectdata struct for the most recent
- * transfer on the given SessionHandle.
+ * transfer on the given Curl_easy.
  *
  * The returned socket will be CURL_SOCKET_BAD in case of failure!
  */
-curl_socket_t Curl_getconnectinfo(struct SessionHandle *data,
+curl_socket_t Curl_getconnectinfo(struct Curl_easy *data,
                                   struct connectdata **connp)
 {
   curl_socket_t sockfd;
 
   DEBUGASSERT(data);
 
@@ -1333,13 +1309,13 @@
  */
 CURLcode Curl_socket(struct connectdata *conn,
                      const Curl_addrinfo *ai,
                      struct Curl_sockaddr_ex *addr,
                      curl_socket_t *sockfd)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct Curl_sockaddr_ex dummy;
 
   if(!addr)
     /* if the caller doesn't want info back, use a local temp copy */
     addr = &dummy;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/connect.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/connect.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/connect.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/connect.h	2016-07-21 06:31:36.000000000 +0800
@@ -32,27 +32,27 @@
 
 CURLcode Curl_connecthost(struct connectdata *conn,
                           const struct Curl_dns_entry *host);
 
 /* generic function that returns how much time there's left to run, according
    to the timeouts set */
-long Curl_timeleft(struct SessionHandle *data,
+long Curl_timeleft(struct Curl_easy *data,
                    struct timeval *nowp,
                    bool duringconnect);
 
 #define DEFAULT_CONNECT_TIMEOUT 300000 /* milliseconds == five minutes */
 #define HAPPY_EYEBALLS_TIMEOUT     200 /* milliseconds to wait between
                                           IPv4/IPv6 connection attempts */
 
 /*
  * Used to extract socket and connectdata struct for the most recent
- * transfer on the given SessionHandle.
+ * transfer on the given Curl_easy.
  *
  * The returned socket will be CURL_SOCKET_BAD in case of failure!
  */
-curl_socket_t Curl_getconnectinfo(struct SessionHandle *data,
+curl_socket_t Curl_getconnectinfo(struct Curl_easy *data,
                                   struct connectdata **connp);
 
 #ifdef USE_WINSOCK
 /* When you run a program that uses the Windows Sockets API, you may
    experience slow performance when you copy data to a TCP server.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/content_encoding.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/content_encoding.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/content_encoding.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/content_encoding.c	2016-07-21 06:31:36.000000000 +0800
@@ -64,13 +64,13 @@
   free(ptr);
 }
 
 static CURLcode
 process_zlib_error(struct connectdata *conn, z_stream *z)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   if(z->msg)
     failf (data, "Error while processing content unencoding: %s",
            z->msg);
   else
     failf (data, "Error while processing content unencoding: "
            "Unknown failure within decompression software.");
@@ -422,13 +422,13 @@
   return inflate_stream(conn, k);
 #endif
 }
 
 void Curl_unencode_cleanup(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SingleRequest *k = &data->req;
   z_stream *z = &k->z;
   if(k->zlib_init != ZLIB_UNINIT)
     (void) exit_zlib(z, &k->zlib_init, CURLE_OK);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/cookie.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/cookie.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/cookie.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/cookie.c	2016-07-21 06:31:36.000000000 +0800
@@ -23,19 +23,19 @@
 /***
 
 
 RECEIVING COOKIE INFORMATION
 ============================
 
-struct CookieInfo *Curl_cookie_init(struct SessionHandle *data,
+struct CookieInfo *Curl_cookie_init(struct Curl_easy *data,
                     const char *file, struct CookieInfo *inc, bool newsession);
 
         Inits a cookie struct to store data in a local file. This is always
         called before any cookies are set.
 
-struct Cookie *Curl_cookie_add(struct SessionHandle *data,
+struct Cookie *Curl_cookie_add(struct Curl_easy *data,
                  struct CookieInfo *c, bool httpheader, char *lineptr,
                  const char *domain, const char *path);
 
         The 'lineptr' parameter is a full "Set-cookie:" line as
         received from a server.
 
@@ -257,13 +257,13 @@
 
 /*
  * Load cookies from all given cookie files (CURLOPT_COOKIEFILE).
  *
  * NOTE: OOM or cookie parsing failures are ignored.
  */
-void Curl_cookie_loadfiles(struct SessionHandle *data)
+void Curl_cookie_loadfiles(struct Curl_easy *data)
 {
   struct curl_slist *list = data->change.cookielist;
   if(list) {
     Curl_share_lock(data, CURL_LOCK_DATA_COOKIE, CURL_LOCK_ACCESS_SINGLE);
     while(list) {
       struct CookieInfo *newcookies = Curl_cookie_init(data,
@@ -359,13 +359,13 @@
  *
  * Returns NULL on out of memory or invalid cookie. This is suboptimal,
  * as they should be treated separately.
  ***************************************************************************/
 
 struct Cookie *
-Curl_cookie_add(struct SessionHandle *data,
+Curl_cookie_add(struct Curl_easy *data,
                 /* The 'data' pointer here may be NULL at times, and thus
                    must only be used very carefully for things that can deal
                    with data being NULL. Such as infof() and similar */
 
                 struct CookieInfo *c,
                 bool httpheader, /* TRUE if HTTP header-style line */
@@ -910,13 +910,13 @@
  * called before any cookies are set. File may be NULL.
  *
  * If 'newsession' is TRUE, discard all "session cookies" on read from file.
  *
  * Returns NULL on out of memory. Invalid cookies are ignored.
  ****************************************************************************/
-struct CookieInfo *Curl_cookie_init(struct SessionHandle *data,
+struct CookieInfo *Curl_cookie_init(struct Curl_easy *data,
                                     const char *file,
                                     struct CookieInfo *inc,
                                     bool newsession)
 {
   struct CookieInfo *c;
   FILE *fp = NULL;
@@ -1311,25 +1311,25 @@
       continue;
     format_ptr = get_netscape_format(co);
     if(format_ptr == NULL) {
       fprintf(out, "#\n# Fatal libcurl error\n");
       if(!use_stdout)
         fclose(out);
-        return 1;
+      return 1;
     }
     fprintf(out, "%s\n", format_ptr);
     free(format_ptr);
   }
 
   if(!use_stdout)
     fclose(out);
 
   return 0;
 }
 
-struct curl_slist *Curl_cookie_list(struct SessionHandle *data)
+struct curl_slist *Curl_cookie_list(struct Curl_easy *data)
 {
   struct curl_slist *list = NULL;
   struct curl_slist *beg;
   struct Cookie *c;
   char *line;
 
@@ -1354,13 +1354,13 @@
     list = beg;
   }
 
   return list;
 }
 
-void Curl_flush_cookies(struct SessionHandle *data, int cleanup)
+void Curl_flush_cookies(struct Curl_easy *data, int cleanup)
 {
   if(data->set.str[STRING_COOKIEJAR]) {
     if(data->change.cookielist) {
       /* If there is a list of cookie files to read, do it first so that
          we have all the told files read before we write the new jar.
          Curl_cookie_loadfiles() LOCKS and UNLOCKS the share itself! */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/cookie.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/cookie.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/cookie.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/cookie.h	2016-07-21 06:31:36.000000000 +0800
@@ -67,19 +67,19 @@
 #define MAX_COOKIE_LINE_TXT "4999"
 
 /* This is the maximum length of a cookie name we deal with: */
 #define MAX_NAME 1024
 #define MAX_NAME_TXT "1023"
 
-struct SessionHandle;
+struct Curl_easy;
 /*
  * Add a cookie to the internal list of cookies. The domain and path arguments
  * are only used if the header boolean is TRUE.
  */
 
-struct Cookie *Curl_cookie_add(struct SessionHandle *data,
+struct Cookie *Curl_cookie_add(struct Curl_easy *data,
                                struct CookieInfo *, bool header, char *lineptr,
                                const char *domain, const char *path);
 
 struct Cookie *Curl_cookie_getlist(struct CookieInfo *, const char *,
                                    const char *, bool);
 void Curl_cookie_freelist(struct Cookie *cookies, bool cookiestoo);
@@ -90,15 +90,15 @@
 #define Curl_cookie_list(x) NULL
 #define Curl_cookie_loadfiles(x) Curl_nop_stmt
 #define Curl_cookie_init(x,y,z,w) NULL
 #define Curl_cookie_cleanup(x) Curl_nop_stmt
 #define Curl_flush_cookies(x,y) Curl_nop_stmt
 #else
-void Curl_flush_cookies(struct SessionHandle *data, int cleanup);
+void Curl_flush_cookies(struct Curl_easy *data, int cleanup);
 void Curl_cookie_cleanup(struct CookieInfo *);
-struct CookieInfo *Curl_cookie_init(struct SessionHandle *data,
+struct CookieInfo *Curl_cookie_init(struct Curl_easy *data,
                                     const char *, struct CookieInfo *, bool);
-struct curl_slist *Curl_cookie_list(struct SessionHandle *data);
-void Curl_cookie_loadfiles(struct SessionHandle *data);
+struct curl_slist *Curl_cookie_list(struct Curl_easy *data);
+void Curl_cookie_loadfiles(struct Curl_easy *data);
 #endif
 
 #endif /* HEADER_CURL_COOKIE_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_addrinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_addrinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_addrinfo.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_addrinfo.c	2016-07-21 06:31:36.000000000 +0800
@@ -560,6 +560,35 @@
     curl_memlog("ADDR %s:%d getaddrinfo() failed\n",
                 source, line);
   return res;
 }
 #endif /* defined(CURLDEBUG) && defined(HAVE_GETADDRINFO) */
 
+#if defined(HAVE_GETADDRINFO) && defined(USE_RESOLVE_ON_IPS)
+/*
+ * Work-arounds the sin6_port is always zero bug on iOS 9.3.2 and Mac OS X
+ * 10.11.5.
+ */
+void Curl_addrinfo_set_port(Curl_addrinfo *addrinfo, int port)
+{
+  Curl_addrinfo *ca;
+  struct sockaddr_in *addr;
+#ifdef ENABLE_IPV6
+  struct sockaddr_in6 *addr6;
+#endif
+  for(ca = addrinfo; ca != NULL; ca = ca->ai_next) {
+    switch (ca->ai_family) {
+    case AF_INET:
+      addr = (void *)ca->ai_addr; /* storage area for this info */
+      addr->sin_port = htons((unsigned short)port);
+      break;
+
+#ifdef ENABLE_IPV6
+    case AF_INET6:
+      addr6 = (void *)ca->ai_addr; /* storage area for this info */
+      addr6->sin6_port = htons((unsigned short)port);
+      break;
+#endif
+    }
+  }
+}
+#endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_addrinfo.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_addrinfo.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_addrinfo.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_addrinfo.h	2016-07-21 06:31:36.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -96,7 +96,15 @@
                    const char *service,
                    const struct addrinfo *hints,
                    struct addrinfo **result,
                    int line, const char *source);
 #endif
 
+#ifdef HAVE_GETADDRINFO
+#ifdef USE_RESOLVE_ON_IPS
+void Curl_addrinfo_set_port(Curl_addrinfo *addrinfo, int port);
+#else
+#define Curl_addrinfo_set_port(x,y)
+#endif
+#endif
+
 #endif /* HEADER_CURL_ADDRINFO_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_base64.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_base64.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_base64.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_base64.h	2016-07-21 06:31:36.000000000 +0800
@@ -19,16 +19,16 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
-CURLcode Curl_base64_encode(struct SessionHandle *data,
+CURLcode Curl_base64_encode(struct Curl_easy *data,
                             const char *inputbuff, size_t insize,
                             char **outptr, size_t *outlen);
-CURLcode Curl_base64url_encode(struct SessionHandle *data,
+CURLcode Curl_base64url_encode(struct Curl_easy *data,
                                const char *inputbuff, size_t insize,
                                char **outptr, size_t *outlen);
 
 CURLcode Curl_base64_decode(const char *src,
                             unsigned char **outptr, size_t *outlen);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_config.h.cmake /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_config.h.cmake
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_config.h.cmake	2016-03-17 23:58:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_config.h.cmake	2016-07-21 06:31:36.000000000 +0800
@@ -912,12 +912,15 @@
 /* if GnuTLS is enabled */
 #cmakedefine USE_GNUTLS 1
 
 /* if PolarSSL is enabled */
 #cmakedefine USE_POLARSSL 1
 
+/* if mbedTLS is enabled */
+#cmakedefine USE_MBEDTLS 1
+
 /* if libSSH2 is in use */
 #cmakedefine USE_LIBSSH2 1
 
 /* If you want to build curl with the built-in manual */
 #cmakedefine USE_MANUAL 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_gssapi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_gssapi.c	2016-07-21 06:31:36.000000000 +0800
@@ -30,13 +30,13 @@
 static char spnego_oid_bytes[] = "\x2b\x06\x01\x05\x05\x02";
 gss_OID_desc Curl_spnego_mech_oid = { 6, &spnego_oid_bytes };
 static char krb5_oid_bytes[] = "\x2a\x86\x48\x86\xf7\x12\x01\x02\x02";
 gss_OID_desc Curl_krb5_mech_oid = { 9, &krb5_oid_bytes };
 
 OM_uint32 Curl_gss_init_sec_context(
-    struct SessionHandle *data,
+    struct Curl_easy *data,
     OM_uint32 *minor_status,
     gss_ctx_id_t *context,
     gss_name_t target_name,
     gss_OID mech_type,
     gss_channel_bindings_t input_chan_bindings,
     gss_buffer_t input_token,
@@ -111,13 +111,13 @@
  *
  * data    [in] - The session handle.
  * prefix  [in] - The prefix of the log message.
  * major   [in] - The major status code.
  * minor   [in] - The minor status code.
  */
-void Curl_gss_log_error(struct SessionHandle *data, const char *prefix,
+void Curl_gss_log_error(struct Curl_easy *data, const char *prefix,
                         OM_uint32 major, OM_uint32 minor)
 {
   char buf[GSS_LOG_BUFFER_LEN];
   size_t len = 0;
 
   if(major != GSS_S_FAILURE)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_gssapi.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_gssapi.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_gssapi.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_gssapi.h	2016-07-21 06:31:36.000000000 +0800
@@ -41,25 +41,25 @@
 
 extern gss_OID_desc Curl_spnego_mech_oid;
 extern gss_OID_desc Curl_krb5_mech_oid;
 
 /* Common method for using GSS-API */
 OM_uint32 Curl_gss_init_sec_context(
-    struct SessionHandle *data,
+    struct Curl_easy *data,
     OM_uint32 *minor_status,
     gss_ctx_id_t *context,
     gss_name_t target_name,
     gss_OID mech_type,
     gss_channel_bindings_t input_chan_bindings,
     gss_buffer_t input_token,
     gss_buffer_t output_token,
     const bool mutual_auth,
     OM_uint32 *ret_flags);
 
 /* Helper to log a GSS-API error status */
-void Curl_gss_log_error(struct SessionHandle *data, const char *prefix,
+void Curl_gss_log_error(struct Curl_easy *data, const char *prefix,
                         OM_uint32 major, OM_uint32 minor);
 
 /* Provide some definitions missing in old headers */
 #ifdef HAVE_OLD_GSSMIT
 #define GSS_C_NT_HOSTBASED_SERVICE gss_nt_service_name
 #define NCOMPAT 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_ntlm_core.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_ntlm_core.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_ntlm_core.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_ntlm_core.c	2016-07-21 06:31:36.000000000 +0800
@@ -408,13 +408,13 @@
 #endif
 }
 
 /*
  * Set up lanmanager hashed password
  */
-CURLcode Curl_ntlm_core_mk_lm_hash(struct SessionHandle *data,
+CURLcode Curl_ntlm_core_mk_lm_hash(struct Curl_easy *data,
                                    const char *password,
                                    unsigned char *lmbuffer /* 21 bytes */)
 {
   CURLcode result;
   unsigned char pw[14];
   static const unsigned char magic[] = {
@@ -502,13 +502,13 @@
 #endif /* USE_NTLM_V2 && !USE_WINDOWS_SSPI */
 
 /*
  * Set up nt hashed passwords
  * @unittest: 1600
  */
-CURLcode Curl_ntlm_core_mk_nt_hash(struct SessionHandle *data,
+CURLcode Curl_ntlm_core_mk_nt_hash(struct Curl_easy *data,
                                    const char *password,
                                    unsigned char *ntbuffer /* 21 bytes */)
 {
   size_t len = strlen(password);
   unsigned char *pw = malloc(len * 2);
   CURLcode result;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_ntlm_core.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_ntlm_core.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_ntlm_core.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_ntlm_core.h	2016-07-21 06:31:36.000000000 +0800
@@ -61,18 +61,18 @@
 #endif
 
 void Curl_ntlm_core_lm_resp(const unsigned char *keys,
                             const unsigned char *plaintext,
                             unsigned char *results);
 
-CURLcode Curl_ntlm_core_mk_lm_hash(struct SessionHandle *data,
+CURLcode Curl_ntlm_core_mk_lm_hash(struct Curl_easy *data,
                                    const char *password,
                                    unsigned char *lmbuffer /* 21 bytes */);
 
 #if USE_NTRESPONSES
-CURLcode Curl_ntlm_core_mk_nt_hash(struct SessionHandle *data,
+CURLcode Curl_ntlm_core_mk_nt_hash(struct Curl_easy *data,
                                    const char *password,
                                    unsigned char *ntbuffer /* 21 bytes */);
 
 #if USE_NTLM_V2 && !defined(USE_WINDOWS_SSPI)
 
 CURLcode Curl_hmac_md5(const unsigned char *key, unsigned int keylen,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_sasl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_sasl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_sasl.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_sasl.c	2016-07-21 06:31:36.000000000 +0800
@@ -254,13 +254,13 @@
  * Calculate the required login details for SASL authentication.
  */
 CURLcode Curl_sasl_start(struct SASL *sasl, struct connectdata *conn,
                          bool force_ir, saslprogress *progress)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   unsigned int enabledmechs;
   const char *mech = NULL;
   char *resp = NULL;
   size_t len = 0;
   saslstate state1 = SASL_STOP;
   saslstate state2 = SASL_FINAL;
@@ -402,13 +402,13 @@
  * Continue the authentication.
  */
 CURLcode Curl_sasl_continue(struct SASL *sasl, struct connectdata *conn,
                             int code, saslprogress *progress)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   saslstate newstate = SASL_FINAL;
   char *resp = NULL;
 #if !defined(CURL_DISABLE_CRYPTO_AUTH)
   char *serverdata;
   char *chlg = NULL;
   size_t chlglen = 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_sasl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_sasl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_sasl.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_sasl.h	2016-07-21 06:31:36.000000000 +0800
@@ -21,13 +21,13 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include <curl/curl.h>
 
-struct SessionHandle;
+struct Curl_easy;
 struct connectdata;
 
 /* Authentication mechanism flags */
 #define SASL_MECH_LOGIN             (1 << 0)
 #define SASL_MECH_PLAIN             (1 << 1)
 #define SASL_MECH_CRAM_MD5          (1 << 2)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_setup.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_setup.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_setup.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_setup.h	2016-07-21 06:31:36.000000000 +0800
@@ -219,12 +219,21 @@
 
 #ifdef __VMS
 #  include "setup-vms.h"
 #endif
 
 /*
+ * Use getaddrinfo to resolve the IPv4 address literal. If the current network
+ * interface doesn’t support IPv4, but supports IPv6, NAT64, and DNS64,
+ * performing this task will result in a synthesized IPv6 address.
+ */
+#ifdef  __APPLE__
+#define USE_RESOLVE_ON_IPS 1
+#endif
+
+/*
  * Include header files for windows builds before redefining anything.
  * Use this preprocessor block only to include or exclude windows.h,
  * winsock2.h, ws2tcpip.h or winsock.h. Any other windows thing belongs
  * to any other further and independent block.  Under Cygwin things work
  * just as under linux (e.g. <sys/socket.h>) and the winsock headers should
  * never be included when __CYGWIN__ is defined.  configure script takes
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/curl_sspi.c	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/curl_sspi.c	2016-07-21 06:31:36.000000000 +0800
@@ -64,63 +64,22 @@
  *
  * Once this function has been executed, Windows SSPI functions can be
  * called through the Security Service Provider Interface dispatch table.
  */
 CURLcode Curl_sspi_global_init(void)
 {
-  bool securityDll = FALSE;
   INITSECURITYINTERFACE_FN pInitSecurityInterface;
 
   /* If security interface is not yet initialized try to do this */
   if(!s_hSecDll) {
     /* Security Service Provider Interface (SSPI) functions are located in
      * security.dll on WinNT 4.0 and in secur32.dll on Win9x. Win2K and XP
      * have both these DLLs (security.dll forwards calls to secur32.dll) */
-    DWORD majorVersion = 4;
-    DWORD platformId = VER_PLATFORM_WIN32_NT;
-
-#if !defined(_WIN32_WINNT) || !defined(_WIN32_WINNT_WIN2K) || \
-    (_WIN32_WINNT < _WIN32_WINNT_WIN2K)
-    OSVERSIONINFO osver;
-
-    memset(&osver, 0, sizeof(osver));
-    osver.dwOSVersionInfoSize = sizeof(osver);
-
-    /* Find out Windows version */
-    if(!GetVersionEx(&osver))
-      return CURLE_FAILED_INIT;
-
-    /* Verify the major version number == 4 and platform id == WIN_NT */
-    if(osver.dwMajorVersion == majorVersion &&
-       osver.dwPlatformId == platformId)
-      securityDll = TRUE;
-#else
-    ULONGLONG cm;
-    OSVERSIONINFOEX osver;
-
-    memset(&osver, 0, sizeof(osver));
-    osver.dwOSVersionInfoSize = sizeof(osver);
-    osver.dwMajorVersion = majorVersion;
-    osver.dwPlatformId = platformId;
-
-    cm = VerSetConditionMask(0, VER_MAJORVERSION, VER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_MINORVERSION, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_SERVICEPACKMAJOR, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_SERVICEPACKMINOR, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_PLATFORMID, VER_EQUAL);
-
-    /* Verify the major version number == 4 and platform id == WIN_NT */
-    if(VerifyVersionInfo(&osver, (VER_MAJORVERSION | VER_MINORVERSION |
-                                  VER_SERVICEPACKMAJOR | VER_SERVICEPACKMINOR |
-                                  VER_PLATFORMID),
-                         cm))
-      securityDll = TRUE;
-#endif
 
     /* Load SSPI dll into the address space of the calling process */
-    if(securityDll)
+    if(Curl_verify_windows_version(4, 0, PLATFORM_WINNT, VERSION_EQUAL))
       s_hSecDll = Curl_load_library(TEXT("security.dll"));
     else
       s_hSecDll = Curl_load_library(TEXT("secur32.dll"));
     if(!s_hSecDll)
       return CURLE_FAILED_INIT;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/dict.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/dict.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/dict.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/dict.c	2016-07-21 06:31:36.000000000 +0800
@@ -88,13 +88,13 @@
   ZERO_NULL,                            /* readwrite */
   PORT_DICT,                            /* defport */
   CURLPROTO_DICT,                       /* protocol */
   PROTOPT_NONE | PROTOPT_NOURLQUERY      /* flags */
 };
 
-static char *unescape_word(struct SessionHandle *data, const char *inputbuff)
+static char *unescape_word(struct Curl_easy *data, const char *inputbuff)
 {
   char *newp;
   char *dictp;
   char *ptr;
   int len;
   char ch;
@@ -130,13 +130,13 @@
   char *ppath;
   char *database = NULL;
   char *strategy = NULL;
   char *nthdef = NULL; /* This is not part of the protocol, but required
                           by RFC 2229 */
   CURLcode result=CURLE_OK;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   curl_socket_t sockfd = conn->sock[FIRSTSOCKET];
 
   char *path = data->state.path;
   curl_off_t *bytecount = &data->req.bytecount;
 
   *done = TRUE; /* unconditionally */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/easy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/easy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/easy.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/easy.c	2016-07-21 06:31:36.000000000 +0800
@@ -268,12 +268,14 @@
 
   if(Curl_resolver_global_init()) {
     DEBUGF(fprintf(stderr, "Error: resolver_global_init failed\n"));
     return CURLE_FAILED_INIT;
   }
 
+  (void)Curl_ipv6works();
+
 #if defined(USE_LIBSSH2) && defined(HAVE_LIBSSH2_INIT)
   if(libssh2_init(0)) {
     DEBUGF(fprintf(stderr, "Error: libssh2_init failed\n"));
     return CURLE_FAILED_INIT;
   }
 #endif
@@ -362,16 +364,16 @@
 }
 
 /*
  * curl_easy_init() is the external interface to alloc, setup and init an
  * easy handle that is returned. If anything goes wrong, NULL is returned.
  */
-CURL *curl_easy_init(void)
+struct Curl_easy *curl_easy_init(void)
 {
   CURLcode result;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
 
   /* Make sure we inited the global SSL stuff */
   if(!initialized) {
     result = curl_global_init(CURL_GLOBAL_DEFAULT);
     if(result) {
       /* something in the global init failed, return nothing */
@@ -393,19 +395,18 @@
 /*
  * curl_easy_setopt() is the external interface for setting options on an
  * easy handle.
  */
 
 #undef curl_easy_setopt
-CURLcode curl_easy_setopt(CURL *curl, CURLoption tag, ...)
+CURLcode curl_easy_setopt(struct Curl_easy *data, CURLoption tag, ...)
 {
   va_list arg;
-  struct SessionHandle *data = curl;
   CURLcode result;
 
-  if(!curl)
+  if(!data)
     return CURLE_BAD_FUNCTION_ARGUMENT;
 
   va_start(arg, tag);
 
   result = Curl_setopt(data, tag, arg);
 
@@ -431,13 +432,13 @@
 /* events_timer
  *
  * Callback that gets called with a new value when the timeout should be
  * updated.
  */
 
-static int events_timer(CURLM *multi,    /* multi handle */
+static int events_timer(struct Curl_multi *multi,    /* multi handle */
                         long timeout_ms, /* see above */
                         void *userp)    /* private callback pointer */
 {
   struct events *ev = userp;
   (void)multi;
   if(timeout_ms == -1)
@@ -486,13 +487,13 @@
 
 /* events_socket
  *
  * Callback that gets called with information about socket activity to
  * monitor.
  */
-static int events_socket(CURL *easy,      /* easy handle */
+static int events_socket(struct Curl_easy *easy,      /* easy handle */
                          curl_socket_t s, /* socket */
                          int what,        /* see above */
                          void *userp,     /* private callback
                                              pointer */
                          void *socketp)   /* private socket
                                              pointer */
@@ -564,13 +565,13 @@
 
 /*
  * events_setup()
  *
  * Do the multi handle setups that only event-based transfers need.
  */
-static void events_setup(CURLM *multi, struct events *ev)
+static void events_setup(struct Curl_multi *multi, struct events *ev)
 {
   /* timer callback */
   curl_multi_setopt(multi, CURLMOPT_TIMERFUNCTION, events_timer);
   curl_multi_setopt(multi, CURLMOPT_TIMERDATA, ev);
 
   /* socket callback */
@@ -668,13 +669,13 @@
 
 
 /* easy_events()
  *
  * Runs a transfer in a blocking manner using the events-based API
  */
-static CURLcode easy_events(CURLM *multi)
+static CURLcode easy_events(struct Curl_multi *multi)
 {
   struct events evs= {2, FALSE, 0, NULL, 0};
 
   /* if running event-based, do some further multi inits */
   events_setup(multi, &evs);
 
@@ -682,13 +683,13 @@
 }
 #else /* CURLDEBUG */
 /* when not built with debug, this function doesn't exist */
 #define easy_events(x) CURLE_NOT_BUILT_IN
 #endif
 
-static CURLcode easy_transfer(CURLM *multi)
+static CURLcode easy_transfer(struct Curl_multi *multi)
 {
   bool done = FALSE;
   CURLMcode mcode = CURLM_OK;
   CURLcode result = CURLE_OK;
   struct timeval before;
   int without_fds = 0;  /* count number of consecutive returns from
@@ -762,15 +763,15 @@
  * function, the same multi handle must be re-used so that the same pools and
  * caches can be used.
  *
  * DEBUG: if 'events' is set TRUE, this function will use a replacement engine
  * instead of curl_multi_perform() and use curl_multi_socket_action().
  */
-static CURLcode easy_perform(struct SessionHandle *data, bool events)
+static CURLcode easy_perform(struct Curl_easy *data, bool events)
 {
-  CURLM *multi;
+  struct Curl_multi *multi;
   CURLMcode mcode;
   CURLcode result = CURLE_OK;
   SIGPIPE_VARIABLE(pipe_st);
 
   if(!data)
     return CURLE_BAD_FUNCTION_ARGUMENT;
@@ -824,36 +825,35 @@
 
 
 /*
  * curl_easy_perform() is the external interface that performs a blocking
  * transfer as previously setup.
  */
-CURLcode curl_easy_perform(CURL *easy)
+CURLcode curl_easy_perform(struct Curl_easy *data)
 {
-  return easy_perform(easy, FALSE);
+  return easy_perform(data, FALSE);
 }
 
 #ifdef CURLDEBUG
 /*
  * curl_easy_perform_ev() is the external interface that performs a blocking
  * transfer using the event-based API internally.
  */
-CURLcode curl_easy_perform_ev(CURL *easy)
+CURLcode curl_easy_perform_ev(struct Curl_easy *data)
 {
-  return easy_perform(easy, TRUE);
+  return easy_perform(data, TRUE);
 }
 
 #endif
 
 /*
  * curl_easy_cleanup() is the external interface to cleaning/freeing the given
  * easy handle.
  */
-void curl_easy_cleanup(CURL *curl)
+void curl_easy_cleanup(struct Curl_easy *data)
 {
-  struct SessionHandle *data = (struct SessionHandle *)curl;
   SIGPIPE_VARIABLE(pipe_st);
 
   if(!data)
     return;
 
   sigpipe_ignore(data, &pipe_st);
@@ -863,18 +863,17 @@
 
 /*
  * curl_easy_getinfo() is an external interface that allows an app to retrieve
  * information from a performed transfer and similar.
  */
 #undef curl_easy_getinfo
-CURLcode curl_easy_getinfo(CURL *curl, CURLINFO info, ...)
+CURLcode curl_easy_getinfo(struct Curl_easy *data, CURLINFO info, ...)
 {
   va_list arg;
   void *paramp;
   CURLcode result;
-  struct SessionHandle *data = (struct SessionHandle *)curl;
 
   va_start(arg, info);
   paramp = va_arg(arg, void *);
 
   result = Curl_getinfo(data, info, paramp);
 
@@ -884,17 +883,15 @@
 
 /*
  * curl_easy_duphandle() is an external interface to allow duplication of a
  * given input easy handle. The returned handle will be a new working handle
  * with all options set exactly as the input source handle.
  */
-CURL *curl_easy_duphandle(CURL *incurl)
+struct Curl_easy *curl_easy_duphandle(struct Curl_easy *data)
 {
-  struct SessionHandle *data=(struct SessionHandle *)incurl;
-
-  struct SessionHandle *outcurl = calloc(1, sizeof(struct SessionHandle));
+  struct Curl_easy *outcurl = calloc(1, sizeof(struct Curl_easy));
   if(NULL == outcurl)
     goto fail;
 
   /*
    * We setup a few buffers we need. We should probably make them
    * get setup on-demand in the code, as that would probably decrease
@@ -979,16 +976,14 @@
 }
 
 /*
  * curl_easy_reset() is an external interface that allows an app to re-
  * initialize a session handle to the default values.
  */
-void curl_easy_reset(CURL *curl)
+void curl_easy_reset(struct Curl_easy *data)
 {
-  struct SessionHandle *data = (struct SessionHandle *)curl;
-
   Curl_safefree(data->state.pathbuffer);
 
   data->state.path = NULL;
 
   Curl_free_request_state(data);
 
@@ -1011,15 +1006,14 @@
  *
  * NOTE: if you have the receiving paused and you call this function to remove
  * the pausing, you may get your write callback called at this point.
  *
  * Action is a bitmask consisting of CURLPAUSE_* bits in curl/curl.h
  */
-CURLcode curl_easy_pause(CURL *curl, int action)
+CURLcode curl_easy_pause(struct Curl_easy *data, int action)
 {
-  struct SessionHandle *data = (struct SessionHandle *)curl;
   struct SingleRequest *k = &data->req;
   CURLcode result = CURLE_OK;
 
   /* first switch off both pause bits */
   int newstate = k->keepon &~ (KEEP_RECV_PAUSE| KEEP_SEND_PAUSE);
 
@@ -1053,13 +1047,13 @@
     Curl_expire(data, 1); /* get this handle going again */
 
   return result;
 }
 
 
-static CURLcode easy_connection(struct SessionHandle *data,
+static CURLcode easy_connection(struct Curl_easy *data,
                                 curl_socket_t *sfd,
                                 struct connectdata **connp)
 {
   if(data == NULL)
     return CURLE_BAD_FUNCTION_ARGUMENT;
 
@@ -1081,19 +1075,19 @@
 
 /*
  * Receives data from the connected socket. Use after successful
  * curl_easy_perform() with CURLOPT_CONNECT_ONLY option.
  * Returns CURLE_OK on success, error code on error.
  */
-CURLcode curl_easy_recv(CURL *curl, void *buffer, size_t buflen, size_t *n)
+CURLcode curl_easy_recv(struct Curl_easy *data, void *buffer, size_t buflen,
+                        size_t *n)
 {
   curl_socket_t sfd;
   CURLcode result;
   ssize_t n1;
   struct connectdata *c;
-  struct SessionHandle *data = (struct SessionHandle *)curl;
 
   result = easy_connection(data, &sfd, &c);
   if(result)
     return result;
 
   *n = 0;
@@ -1108,20 +1102,19 @@
 }
 
 /*
  * Sends data over the connected socket. Use after successful
  * curl_easy_perform() with CURLOPT_CONNECT_ONLY option.
  */
-CURLcode curl_easy_send(CURL *curl, const void *buffer, size_t buflen,
-                        size_t *n)
+CURLcode curl_easy_send(struct Curl_easy *data, const void *buffer,
+                        size_t buflen, size_t *n)
 {
   curl_socket_t sfd;
   CURLcode result;
   ssize_t n1;
   struct connectdata *c = NULL;
-  struct SessionHandle *data = (struct SessionHandle *)curl;
 
   result = easy_connection(data, &sfd, &c);
   if(result)
     return result;
 
   *n = 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/easyif.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/easyif.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/easyif.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/easyif.h	2016-07-21 06:31:36.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -23,11 +23,11 @@
  ***************************************************************************/
 
 /*
  * Prototypes for library-wide functions provided by easy.c
  */
 #ifdef CURLDEBUG
-CURL_EXTERN CURLcode curl_easy_perform_ev(CURL *easy);
+CURL_EXTERN CURLcode curl_easy_perform_ev(struct Curl_easy *easy);
 #endif
 
 #endif /* HEADER_CURL_EASYIF_H */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/escape.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/escape.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/escape.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/escape.c	2016-07-21 06:31:36.000000000 +0800
@@ -72,13 +72,14 @@
 /* for ABI-compatibility with previous versions */
 char *curl_unescape(const char *string, int length)
 {
   return curl_easy_unescape(NULL, string, length, NULL);
 }
 
-char *curl_easy_escape(CURL *handle, const char *string, int inlength)
+char *curl_easy_escape(struct Curl_easy *data, const char *string,
+                       int inlength)
 {
   size_t alloc = (inlength?(size_t)inlength:strlen(string))+1;
   char *ns;
   char *testing_ptr = NULL;
   unsigned char in; /* we need to treat the characters unsigned */
   size_t newlen = alloc;
@@ -109,13 +110,13 @@
         }
         else {
           ns = testing_ptr;
         }
       }
 
-      result = Curl_convert_to_network(handle, &in, 1);
+      result = Curl_convert_to_network(data, &in, 1);
       if(result) {
         /* Curl_convert_to_network calls failf if unsuccessful */
         free(ns);
         return NULL;
       }
 
@@ -136,13 +137,13 @@
  * data and rejects such data.
  *
  * Returns a pointer to a malloced string in *ostring with length given in
  * *olen. If length == 0, the length is assumed to be strlen(string).
  *
  */
-CURLcode Curl_urldecode(struct SessionHandle *data,
+CURLcode Curl_urldecode(struct Curl_easy *data,
                         const char *string, size_t length,
                         char **ostring, size_t *olen,
                         bool reject_ctrl)
 {
   size_t alloc = (length?length:strlen(string))+1;
   char *ns = malloc(alloc);
@@ -203,19 +204,19 @@
 /*
  * Unescapes the given URL escaped string of given length. Returns a
  * pointer to a malloced string with length given in *olen.
  * If length == 0, the length is assumed to be strlen(string).
  * If olen == NULL, no output length is stored.
  */
-char *curl_easy_unescape(CURL *handle, const char *string, int length,
-                         int *olen)
+char *curl_easy_unescape(struct Curl_easy *data, const char *string,
+                         int length, int *olen)
 {
   char *str = NULL;
   size_t inputlen = length;
   size_t outputlen;
-  CURLcode res = Curl_urldecode(handle, string, inputlen, &str, &outputlen,
+  CURLcode res = Curl_urldecode(data, string, inputlen, &str, &outputlen,
                                 FALSE);
   if(res)
     return NULL;
   if(olen)
     *olen = curlx_uztosi(outputlen);
   return str;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/escape.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/escape.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/escape.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/escape.h	2016-07-21 06:31:36.000000000 +0800
@@ -21,13 +21,13 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 /* Escape and unescape URL encoding in strings. The functions return a new
  * allocated string or NULL if an error occurred.  */
 
-CURLcode Curl_urldecode(struct SessionHandle *data,
+CURLcode Curl_urldecode(struct Curl_easy *data,
                         const char *string, size_t length,
                         char **ostring, size_t *olen,
                         bool reject_crlf);
 
 #endif /* HEADER_CURL_ESCAPE_H */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/file.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/file.c	2016-07-21 06:31:36.000000000 +0800
@@ -132,13 +132,13 @@
 static CURLcode file_range(struct connectdata *conn)
 {
   curl_off_t from, to;
   curl_off_t totalsize=-1;
   char *ptr;
   char *ptr2;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(data->state.use_range && data->state.range) {
     from=curlx_strtoofft(data->state.range, &ptr, 0);
     while(*ptr && (ISSPACE(*ptr) || (*ptr=='-')))
       ptr++;
     to=curlx_strtoofft(ptr, &ptr2, 0);
@@ -182,13 +182,13 @@
  * file_connect() gets called from Curl_protocol_connect() to allow us to
  * do protocol-specific actions at connect-time.  We emulate a
  * connect-then-transfer protocol and "connect" to the file here
  */
 static CURLcode file_connect(struct connectdata *conn, bool *done)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char *real_path;
   struct FILEPROTO *file = data->req.protop;
   int fd;
 #ifdef DOS_FILESYSTEM
   int i;
   char *actual_path;
@@ -224,21 +224,25 @@
   }
 
   /* change path separators from '/' to '\\' for DOS, Windows and OS/2 */
   for(i=0; i < real_path_len; ++i)
     if(actual_path[i] == '/')
       actual_path[i] = '\\';
-    else if(!actual_path[i]) /* binary zero */
+    else if(!actual_path[i]) { /* binary zero */
+      Curl_safefree(real_path);
       return CURLE_URL_MALFORMAT;
+    }
 
   fd = open_readonly(actual_path, O_RDONLY|O_BINARY);
   file->path = actual_path;
 #else
-  if(memchr(real_path, 0, real_path_len))
+  if(memchr(real_path, 0, real_path_len)) {
     /* binary zeroes indicate foul play */
+    Curl_safefree(real_path);
     return CURLE_URL_MALFORMAT;
+  }
 
   fd = open_readonly(real_path, O_RDONLY);
   file->path = real_path;
 #endif
   file->freepath = real_path; /* free this when done */
 
@@ -298,13 +302,13 @@
 {
   struct FILEPROTO *file = conn->data->req.protop;
   const char *dir = strchr(file->path, DIRSEP);
   int fd;
   int mode;
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char *buf = data->state.buffer;
   size_t nread;
   size_t nwrite;
   curl_off_t bytecount = 0;
   struct timeval now = Curl_tvnow();
   struct_stat file_stat;
@@ -425,13 +429,13 @@
                           Windows version to have a different struct without
                           having to redefine the simple word 'stat' */
   curl_off_t expected_size=0;
   bool size_known;
   bool fstated=FALSE;
   ssize_t nread;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char *buf = data->state.buffer;
   curl_off_t bytecount = 0;
   int fd;
   struct timeval now = Curl_tvnow();
   struct FILEPROTO *file;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/formdata.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/formdata.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/formdata.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/formdata.c	2016-07-21 06:31:36.000000000 +0800
@@ -27,13 +27,13 @@
 #ifndef CURL_DISABLE_HTTP
 
 #if defined(HAVE_LIBGEN_H) && defined(HAVE_BASENAME)
 #include <libgen.h>
 #endif
 
-#include "urldata.h" /* for struct SessionHandle */
+#include "urldata.h" /* for struct Curl_easy */
 #include "formdata.h"
 #include "vtls/vtls.h"
 #include "strequal.h"
 #include "sendf.h"
 #include "strdup.h"
 /* The last 3 #include files should be in this order */
@@ -44,13 +44,13 @@
 #ifndef HAVE_BASENAME
 static char *Curl_basename(char *path);
 #define basename(x)  Curl_basename((x))
 #endif
 
 static size_t readfromfile(struct Form *form, char *buffer, size_t size);
-static char *formboundary(struct SessionHandle *data);
+static char *formboundary(struct Curl_easy *data);
 
 /* What kind of Content-Type to use on un-specified files with unrecognized
    extensions. */
 #define HTTPPOST_CONTENTTYPE_DEFAULT "application/octet-stream"
 
 #define FORM_FILE_SEPARATOR ','
@@ -1133,13 +1133,13 @@
  *
  * This function will not do a failf() for the potential memory failures but
  * should for all other errors it spots. Just note that this function MAY get
  * a NULL pointer in the 'data' argument.
  */
 
-CURLcode Curl_getformdata(struct SessionHandle *data,
+CURLcode Curl_getformdata(struct Curl_easy *data,
                           struct FormData **finalform,
                           struct curl_httppost *post,
                           const char *custom_content_type,
                           curl_off_t *sizep)
 {
   struct FormData *form = NULL;
@@ -1546,13 +1546,13 @@
 }
 
 /*
  * formboundary() creates a suitable boundary string and returns an allocated
  * one.
  */
-static char *formboundary(struct SessionHandle *data)
+static char *formboundary(struct Curl_easy *data)
 {
   /* 24 dashes and 16 hexadecimal digits makes 64 bit (18446744073709551615)
      combinations */
   return aprintf("------------------------%08x%08x",
                  Curl_rand(data), Curl_rand(data));
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/formdata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/formdata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/formdata.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/formdata.h	2016-07-21 06:31:36.000000000 +0800
@@ -67,13 +67,13 @@
   struct curl_slist* contentheader;
   struct FormInfo *more;
 } FormInfo;
 
 int Curl_FormInit(struct Form *form, struct FormData *formdata);
 
-CURLcode Curl_getformdata(struct SessionHandle *data,
+CURLcode Curl_getformdata(struct Curl_easy *data,
                           struct FormData **,
                           struct curl_httppost *post,
                           const char *custom_contenttype,
                           curl_off_t *size);
 
 /* fread() emulation */
@@ -90,9 +90,9 @@
 char *Curl_formpostheader(void *formp, size_t *len);
 
 char *Curl_FormBoundary(void);
 
 void Curl_formclean(struct FormData **);
 
-CURLcode Curl_formconvert(struct SessionHandle *, struct FormData *);
+CURLcode Curl_formconvert(struct Curl_easy *, struct FormData *);
 
 #endif /* HEADER_CURL_FORMDATA_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ftp.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ftp.c	2016-07-21 06:31:36.000000000 +0800
@@ -324,13 +324,13 @@
  * After connection request is received from the server this function is
  * called to accept the connection and close the listening socket
  *
  */
 static CURLcode AcceptServerConnect(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sock = conn->sock[SECONDARYSOCKET];
   curl_socket_t s = CURL_SOCKET_BAD;
 #ifdef ENABLE_IPV6
   struct Curl_sockaddr_storage add;
 #else
   struct sockaddr_in add;
@@ -381,13 +381,13 @@
  * already elapsed.
  *
  * The start time is stored in progress.t_acceptdata - as set with
  * Curl_pgrsTime(..., TIMER_STARTACCEPT);
  *
  */
-static long ftp_timeleft_accept(struct SessionHandle *data)
+static long ftp_timeleft_accept(struct Curl_easy *data)
 {
   long timeout_ms = DEFAULT_ACCEPT_TIMEOUT;
   long other;
   struct timeval now;
 
   if(data->set.accepttimeout > 0)
@@ -421,13 +421,13 @@
  * checks both data connection for connection establishment and ctrl
  * connection for a negative response regarding a failure in connecting
  *
  */
 static CURLcode ReceivedServerConnect(struct connectdata *conn, bool *received)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t ctrl_sock = conn->sock[FIRSTSOCKET];
   curl_socket_t data_sock = conn->sock[SECONDARYSOCKET];
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   int result;
   long timeout_ms;
@@ -492,13 +492,13 @@
  * After connection from server is accepted this function is called to
  * setup transfer parameters and initiate the data transfer.
  *
  */
 static CURLcode InitiateTransfer(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct FTP *ftp = data->req.protop;
   CURLcode result = CURLE_OK;
 
   if(conn->ssl[SECONDARYSOCKET].use) {
     /* since we only have a plaintext TCP connection here, we must now
      * do the TLS stuff */
@@ -543,13 +543,13 @@
  * us. This function checks whether data connection is established if so it is
  * accepted.
  *
  */
 static CURLcode AllowServerConnect(struct connectdata *conn, bool *connected)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   long timeout_ms;
   CURLcode result = CURLE_OK;
 
   *connected = FALSE;
   infof(data, "Preparing for accepting server on data port\n");
 
@@ -614,13 +614,13 @@
 static CURLcode ftp_readresp(curl_socket_t sockfd,
                              struct pingpong *pp,
                              int *ftpcode, /* return the ftp-code if done */
                              size_t *size) /* size of the response */
 {
   struct connectdata *conn = pp->conn;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 #ifdef HAVE_GSSAPI
   char * const buf = data->state.buffer;
 #endif
   CURLcode result = CURLE_OK;
   int code;
 
@@ -686,13 +686,13 @@
    * Alas, read as much as possible, split up into lines, use the ending
    * line in a response or continue reading.  */
 
   curl_socket_t sockfd = conn->sock[FIRSTSOCKET];
   long timeout;              /* timeout in milliseconds */
   long interval_ms;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_OK;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   size_t nread;
   int cache_skip=0;
   int value_to_be_ignored=0;
@@ -977,13 +977,13 @@
 static CURLcode ftp_state_use_port(struct connectdata *conn,
                                    ftpport fcmd) /* start with this */
 
 {
   CURLcode result = CURLE_OK;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   curl_socket_t portsock= CURL_SOCKET_BAD;
   char myhost[256] = "";
 
   struct Curl_sockaddr_storage ss;
   Curl_addrinfo *res, *ai;
   curl_socklen_t sslen;
@@ -1400,13 +1400,13 @@
  * take off for real.
  */
 static CURLcode ftp_state_prepare_transfer(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   struct FTP *ftp = conn->data->req.protop;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(ftp->transfer != FTPTRANSFER_BODY) {
     /* doesn't transfer any data */
 
     /* still possibly do PRE QUOTE jobs */
     state(conn, FTP_RETR_PREQUOTE);
@@ -1483,13 +1483,13 @@
   return result;
 }
 
 static CURLcode ftp_state_list(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* If this output is to be machine-parsed, the NLST command might be better
      to use, since the LIST command output is not specified or standard in any
      way. It has turned out that the NLST list output is not the same on all
      servers either... */
 
@@ -1572,13 +1572,13 @@
 }
 
 static CURLcode ftp_state_type(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   struct FTP *ftp = conn->data->req.protop;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
 
   /* If we have selected NOBODY and HEADER, it means that we only want file
      information. Which in FTP can't be much more than the file size and
      date. */
   if(data->set.opt_no_body && ftpc->file &&
@@ -1604,13 +1604,13 @@
 
 /* This is called after the CWD commands have been done in the beginning of
    the DO phase */
 static CURLcode ftp_state_mdtm(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
 
   /* Requested time of file or time-depended transfer? */
   if((data->set.get_filetime || data->set.timecondition) && ftpc->file) {
 
     /* we have requested to get the modified-time of the file, this is a white
@@ -1629,13 +1629,13 @@
 /* This is called after the TYPE and possible quote commands have been sent */
 static CURLcode ftp_state_ul_setup(struct connectdata *conn,
                                    bool sizechecked)
 {
   CURLcode result = CURLE_OK;
   struct FTP *ftp = conn->data->req.protop;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   int seekerr = CURL_SEEKFUNC_OK;
 
   if((data->state.resume_from && !sizechecked) ||
      ((data->state.resume_from > 0) && sizechecked)) {
     /* we're about to continue the uploading of a file */
@@ -1725,13 +1725,13 @@
 
 static CURLcode ftp_state_quote(struct connectdata *conn,
                                 bool init,
                                 ftpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   bool quote=FALSE;
   struct curl_slist *item;
 
   switch(instate) {
@@ -1856,13 +1856,13 @@
  */
 static CURLcode proxy_magic(struct connectdata *conn,
                             char *newhost, unsigned short newport,
                             bool *magicdone)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
 #if defined(CURL_DISABLE_PROXY)
   (void) newhost;
   (void) newport;
 #endif
 
@@ -1947,13 +1947,13 @@
 
 static CURLcode ftp_state_pasv_resp(struct connectdata *conn,
                                     int ftpcode)
 {
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   CURLcode result;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   struct Curl_dns_entry *addr=NULL;
   int rc;
   unsigned short connectport; /* the local port connect() should use! */
   char *str=&data->state.buffer[4];  /* start on the first letter */
 
   /* if we come here again, make sure the former name is cleared */
@@ -2122,13 +2122,13 @@
   return result;
 }
 
 static CURLcode ftp_state_port_resp(struct connectdata *conn,
                                     int ftpcode)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   ftpport fcmd = (ftpport)ftpc->count1;
   CURLcode result = CURLE_OK;
 
   /* The FTP spec tells a positive response should have code 200.
      Be more permissive here to tolerate deviant servers. */
@@ -2159,13 +2159,13 @@
 }
 
 static CURLcode ftp_state_mdtm_resp(struct connectdata *conn,
                                     int ftpcode)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
 
   switch(ftpcode) {
   case 213:
     {
@@ -2264,13 +2264,13 @@
 
 static CURLcode ftp_state_type_resp(struct connectdata *conn,
                                     int ftpcode,
                                     ftpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
 
   if(ftpcode/100 != 2) {
     /* "sasserftpd" and "(u)r(x)bot ftpd" both responds with 226 after a
        successful 'TYPE I'. While that is not as RFC959 says, it is still a
        positive response code and we allow that. */
     failf(data, "Couldn't set desired mode");
@@ -2293,13 +2293,13 @@
 }
 
 static CURLcode ftp_state_retr(struct connectdata *conn,
                                          curl_off_t filesize)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
 
   if(data->set.max_filesize && (filesize > data->set.max_filesize)) {
     failf(data, "Maximum file size exceeded");
     return CURLE_FILESIZE_EXCEEDED;
@@ -2376,13 +2376,13 @@
 
 static CURLcode ftp_state_size_resp(struct connectdata *conn,
                                     int ftpcode,
                                     ftpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   curl_off_t filesize;
   char *buf = data->state.buffer;
 
   /* get the size from the ascii string: */
   filesize = (ftpcode == 213)?curlx_strtoofft(buf+4, NULL, 0):-1;
 
@@ -2448,13 +2448,13 @@
 }
 
 static CURLcode ftp_state_stor_resp(struct connectdata *conn,
                                     int ftpcode, ftpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(ftpcode>=400) {
     failf(data, "Failed FTP upload: %0d", ftpcode);
     state(conn, FTP_STOP);
     /* oops, we never close the sockets! */
     return CURLE_UPLOAD_FAILED;
@@ -2487,13 +2487,13 @@
 /* for LIST and RETR responses */
 static CURLcode ftp_state_get_resp(struct connectdata *conn,
                                     int ftpcode,
                                     ftpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct FTP *ftp = data->req.protop;
   char *buf = data->state.buffer;
 
   if((ftpcode == 150) || (ftpcode == 125)) {
 
     /*
@@ -2644,13 +2644,13 @@
 /* for USER and PASS responses */
 static CURLcode ftp_state_user_resp(struct connectdata *conn,
                                     int ftpcode,
                                     ftpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   (void)instate; /* no use for this yet */
 
   /* some need password anyway, and others just return 2xx ignored */
   if((ftpcode == 331) && (ftpc->state == FTP_USER)) {
@@ -2699,13 +2699,13 @@
 
 /* for ACCT response */
 static CURLcode ftp_state_acct_resp(struct connectdata *conn,
                                     int ftpcode)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   if(ftpcode != 230) {
     failf(data, "ACCT rejected by server: %03d", ftpcode);
     result = CURLE_FTP_WEIRD_PASS_REPLY; /* FIX */
   }
   else
     result = ftp_state_loggedin(conn);
@@ -2715,13 +2715,13 @@
 
 
 static CURLcode ftp_statemach_act(struct connectdata *conn)
 {
   CURLcode result;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   int ftpcode;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   static const char ftpauth[][4]  = { "SSL", "TLS" };
   size_t nread = 0;
 
@@ -3240,13 +3240,13 @@
  *
  * Input argument is already checked for validity.
  */
 static CURLcode ftp_done(struct connectdata *conn, CURLcode status,
                          bool premature)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   ssize_t nread;
   int ftpcode;
   CURLcode result = CURLE_OK;
@@ -3584,13 +3584,13 @@
 
 static CURLcode ftp_range(struct connectdata *conn)
 {
   curl_off_t from, to;
   char *ptr;
   char *ptr2;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
 
   if(data->state.use_range && data->state.range) {
     from=curlx_strtoofft(data->state.range, &ptr, 0);
     while(*ptr && (ISSPACE(*ptr) || (*ptr=='-')))
       ptr++;
@@ -3642,13 +3642,13 @@
  * (which basically is only for when PASV is being sent to retry a failed
  * EPSV).
  */
 
 static CURLcode ftp_do_more(struct connectdata *conn, int *completep)
 {
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   CURLcode result = CURLE_OK;
   bool connected = FALSE;
   bool complete = FALSE;
 
   /* the ftp struct is inited in ftp_connect() */
@@ -4206,13 +4206,13 @@
     ftpc->ctl_valid = FALSE;
 
   /* The FTP session may or may not have been allocated/setup at this point! */
   (void)ftp_quit(conn); /* ignore errors on the QUIT */
 
   if(ftpc->entrypath) {
-    struct SessionHandle *data = conn->data;
+    struct Curl_easy *data = conn->data;
     if(data->state.most_recent_ftp_entrypath == ftpc->entrypath) {
       data->state.most_recent_ftp_entrypath = NULL;
     }
     free(ftpc->entrypath);
     ftpc->entrypath = NULL;
   }
@@ -4239,13 +4239,13 @@
  * Parse the URL path into separate path components.
  *
  */
 static
 CURLcode ftp_parse_url_path(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   /* the ftp struct is already inited in ftp_connect() */
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   const char *slash_pos;  /* position of the first '/' char in curpos */
   const char *path_to_use = data->state.path;
   const char *cur_pos;
@@ -4491,13 +4491,13 @@
 static
 CURLcode ftp_regular_transfer(struct connectdata *conn,
                               bool *dophase_done)
 {
   CURLcode result=CURLE_OK;
   bool connected=FALSE;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   data->req.size = -1; /* make sure this is unknown at this point */
 
   Curl_pgrsSetUploadCounter(data, 0);
   Curl_pgrsSetDownloadCounter(data, 0);
   Curl_pgrsSetUploadSize(data, -1);
@@ -4525,13 +4525,13 @@
 
   return result;
 }
 
 static CURLcode ftp_setup_connection(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char *type;
   char command;
   struct FTP *ftp;
 
   if(conn->bits.httpproxy && !data->set.tunnel_thru_httpproxy) {
     /* Unless we have asked to tunnel ftp operations through the proxy, we
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ftp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ftp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ftp.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ftp.h	2016-07-21 06:31:36.000000000 +0800
@@ -94,15 +94,15 @@
   FTPFILE_MULTICWD  = 1, /* as defined by RFC1738 */
   FTPFILE_NOCWD     = 2, /* use SIZE / RETR / STOR on the full path */
   FTPFILE_SINGLECWD = 3  /* make one CWD, then SIZE / RETR / STOR on the
                             file */
 } curl_ftpfile;
 
-/* This FTP struct is used in the SessionHandle. All FTP data that is
+/* This FTP struct is used in the Curl_easy. All FTP data that is
    connection-oriented must be in FTP_conn to properly deal with the fact that
-   perhaps the SessionHandle is changed between the times the connection is
+   perhaps the Curl_easy is changed between the times the connection is
    used. */
 struct FTP {
   curl_off_t *bytecountp;
   char *user;    /* user name string */
   char *passwd;  /* password string */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/getinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/getinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/getinfo.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/getinfo.c	2016-07-21 06:31:36.000000000 +0800
@@ -36,13 +36,13 @@
 #include "memdebug.h"
 
 /*
  * This is supposed to be called in the beginning of a perform() session
  * and should reset all session-info variables
  */
-CURLcode Curl_initinfo(struct SessionHandle *data)
+CURLcode Curl_initinfo(struct Curl_easy *data)
 {
   struct Progress *pro = &data->progress;
   struct PureInfo *info = &data->info;
 
   pro->t_nslookup = 0;
   pro->t_connect = 0;
@@ -70,13 +70,13 @@
   info->conn_primary_port = 0;
   info->conn_local_port = 0;
 
   return CURLE_OK;
 }
 
-static CURLcode getinfo_char(struct SessionHandle *data, CURLINFO info,
+static CURLcode getinfo_char(struct Curl_easy *data, CURLINFO info,
                              char **param_charp)
 {
   switch(info) {
   case CURLINFO_EFFECTIVE_URL:
     *param_charp = data->change.url?data->change.url:(char *)"";
     break;
@@ -116,13 +116,13 @@
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
 }
 
-static CURLcode getinfo_long(struct SessionHandle *data, CURLINFO info,
+static CURLcode getinfo_long(struct Curl_easy *data, CURLINFO info,
                              long *param_longp)
 {
   curl_socket_t sockfd;
 
   union {
     unsigned long *to_ulong;
@@ -195,21 +195,37 @@
   case CURLINFO_RTSP_SERVER_CSEQ:
     *param_longp = data->state.rtsp_next_server_CSeq;
     break;
   case CURLINFO_RTSP_CSEQ_RECV:
     *param_longp = data->state.rtsp_CSeq_recv;
     break;
+  case CURLINFO_HTTP_VERSION:
+    switch (data->info.httpversion) {
+    case 10:
+      *param_longp = CURL_HTTP_VERSION_1_0;
+      break;
+    case 11:
+      *param_longp = CURL_HTTP_VERSION_1_1;
+      break;
+    case 20:
+      *param_longp = CURL_HTTP_VERSION_2_0;
+      break;
+    default:
+      *param_longp = CURL_HTTP_VERSION_NONE;
+      break;
+    }
+    break;
 
   default:
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
 }
 
-static CURLcode getinfo_double(struct SessionHandle *data, CURLINFO info,
+static CURLcode getinfo_double(struct Curl_easy *data, CURLINFO info,
                                double *param_doublep)
 {
   switch(info) {
   case CURLINFO_TOTAL_TIME:
     *param_doublep = data->progress.timespent;
     break;
@@ -256,13 +272,13 @@
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
 }
 
-static CURLcode getinfo_slist(struct SessionHandle *data, CURLINFO info,
+static CURLcode getinfo_slist(struct Curl_easy *data, CURLINFO info,
                               struct curl_slist **param_slistp)
 {
   union {
     struct curl_certinfo *to_certinfo;
     struct curl_slist    *to_slist;
   } ptr;
@@ -332,13 +348,13 @@
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
 }
 
-static CURLcode getinfo_socket(struct SessionHandle *data, CURLINFO info,
+static CURLcode getinfo_socket(struct Curl_easy *data, CURLINFO info,
                                curl_socket_t *param_socketp)
 {
   switch(info) {
   case CURLINFO_ACTIVESOCKET:
     *param_socketp = Curl_getconnectinfo(data, NULL);
     break;
@@ -346,13 +362,13 @@
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
 }
 
-CURLcode Curl_getinfo(struct SessionHandle *data, CURLINFO info, ...)
+CURLcode Curl_getinfo(struct Curl_easy *data, CURLINFO info, ...)
 {
   va_list arg;
   long *param_longp = NULL;
   double *param_doublep = NULL;
   char **param_charp = NULL;
   struct curl_slist **param_slistp = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/getinfo.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/getinfo.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/getinfo.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/getinfo.h	2016-07-21 06:31:36.000000000 +0800
@@ -18,10 +18,10 @@
  * furnished to do so, under the terms of the COPYING file.
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
-CURLcode Curl_getinfo(struct SessionHandle *data, CURLINFO info, ...);
-CURLcode Curl_initinfo(struct SessionHandle *data);
+CURLcode Curl_getinfo(struct Curl_easy *data, CURLINFO info, ...);
+CURLcode Curl_initinfo(struct Curl_easy *data);
 
 #endif /* HEADER_CURL_GETINFO_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/gopher.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/gopher.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/gopher.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/gopher.c	2016-07-21 06:31:36.000000000 +0800
@@ -72,13 +72,13 @@
   PROTOPT_NONE                          /* flags */
 };
 
 static CURLcode gopher_do(struct connectdata *conn, bool *done)
 {
   CURLcode result=CURLE_OK;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   curl_socket_t sockfd = conn->sock[FIRSTSOCKET];
 
   curl_off_t *bytecount = &data->req.bytecount;
   char *path = data->state.path;
   char *sel;
   char *sel_org = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostasyn.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostasyn.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostasyn.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostasyn.c	2016-07-21 06:31:36.000000000 +0800
@@ -74,13 +74,13 @@
   CURLcode result = CURLE_OK;
 
   conn->async.status = status;
 
   if(CURL_ASYNC_SUCCESS == status) {
     if(ai) {
-      struct SessionHandle *data = conn->data;
+      struct Curl_easy *data = conn->data;
 
       if(data->share)
         Curl_share_lock(data, CURL_LOCK_DATA_DNS, CURL_LOCK_ACCESS_SINGLE);
 
       dns = Curl_cache_addr(data, ai,
                             conn->async.hostname,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostip6.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostip6.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostip6.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostip6.c	2016-07-21 06:31:36.000000000 +0800
@@ -164,16 +164,18 @@
 {
   struct addrinfo hints;
   Curl_addrinfo *res;
   int error;
   char sbuf[12];
   char *sbufptr = NULL;
+#ifndef USE_RESOLVE_ON_IPS
   char addrbuf[128];
+#endif
   int pf;
 #if !defined(CURL_DISABLE_VERBOSE_STRINGS)
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 #endif
 
   *waitp = 0; /* synchronous response only */
 
   /* Check if a limited name resolve has been requested */
   switch(conn->ip_version) {
@@ -193,29 +195,39 @@
     pf = PF_INET;
 
   memset(&hints, 0, sizeof(hints));
   hints.ai_family = pf;
   hints.ai_socktype = conn->socktype;
 
+#ifndef USE_RESOLVE_ON_IPS
+  /*
+   * The AI_NUMERICHOST must not be set to get synthesized IPv6 address from
+   * an IPv4 address on iOS and Mac OS X.
+   */
   if((1 == Curl_inet_pton(AF_INET, hostname, addrbuf)) ||
      (1 == Curl_inet_pton(AF_INET6, hostname, addrbuf))) {
     /* the given address is numerical only, prevent a reverse lookup */
     hints.ai_flags = AI_NUMERICHOST;
   }
+#endif
 
   if(port) {
     snprintf(sbuf, sizeof(sbuf), "%d", port);
     sbufptr=sbuf;
   }
 
   error = Curl_getaddrinfo_ex(hostname, sbufptr, &hints, &res);
   if(error) {
     infof(data, "getaddrinfo(3) failed for %s:%d\n", hostname, port);
     return NULL;
   }
 
+  if(port) {
+    Curl_addrinfo_set_port(res, port);
+  }
+
   dump_addrinfo(conn, res);
 
   return res;
 }
 #endif /* CURLRES_SYNCH */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostip.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostip.c	2016-07-21 06:31:36.000000000 +0800
@@ -251,13 +251,13 @@
 }
 
 /*
  * Library-wide function for pruning the DNS cache. This function takes and
  * returns the appropriate locks.
  */
-void Curl_hostcache_prune(struct SessionHandle *data)
+void Curl_hostcache_prune(struct Curl_easy *data)
 {
   time_t now;
 
   if((data->set.dns_cache_timeout == -1) || !data->dns.hostcache)
     /* cache forever means never prune, and NULL hostcache means
        we can't do it */
@@ -290,13 +290,13 @@
                 const char *hostname,
                 int port)
 {
   char *entry_id = NULL;
   struct Curl_dns_entry *dns = NULL;
   size_t entry_len;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Create an entry id, based upon the hostname and port */
   entry_id = create_hostcache_id(hostname, port);
   /* If we can't create the entry id, fail */
   if(!entry_id)
     return dns;
@@ -342,13 +342,13 @@
  */
 struct Curl_dns_entry *
 Curl_fetch_addr(struct connectdata *conn,
                 const char *hostname,
                 int port)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct Curl_dns_entry *dns = NULL;
 
   if(data->share)
     Curl_share_lock(data, CURL_LOCK_DATA_DNS, CURL_LOCK_ACCESS_SINGLE);
 
   dns = fetch_addr(conn, hostname, port);
@@ -369,13 +369,13 @@
  * address, we call this function to store the information in the dns
  * cache etc
  *
  * Returns the Curl_dns_entry entry pointer or NULL if the storage failed.
  */
 struct Curl_dns_entry *
-Curl_cache_addr(struct SessionHandle *data,
+Curl_cache_addr(struct Curl_easy *data,
                 Curl_addrinfo *addr,
                 const char *hostname,
                 int port)
 {
   char *entry_id;
   size_t entry_len;
@@ -444,13 +444,13 @@
 int Curl_resolv(struct connectdata *conn,
                 const char *hostname,
                 int port,
                 struct Curl_dns_entry **entry)
 {
   struct Curl_dns_entry *dns = NULL;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result;
   int rc = CURLRESOLV_ERROR; /* default to failure */
 
   *entry = NULL;
 
   if(data->share)
@@ -579,13 +579,13 @@
 #ifdef HAVE_SIGNAL
   void (*keep_sigact)(int);       /* store the old handler here */
 #endif /* HAVE_SIGNAL */
 #endif /* HAVE_SIGACTION */
   volatile long timeout;
   volatile unsigned int prev_alarm = 0;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 #endif /* USE_ALARM_TIMEOUT */
   int rc;
 
   *entry = NULL;
 
   if(timeoutms < 0)
@@ -713,13 +713,13 @@
  * Curl_resolv_unlock() unlocks the given cached DNS entry. When this has been
  * made, the struct may be destroyed due to pruning. It is important that only
  * one unlock is made for each Curl_resolv() call.
  *
  * May be called with 'data' == NULL for global cache.
  */
-void Curl_resolv_unlock(struct SessionHandle *data, struct Curl_dns_entry *dns)
+void Curl_resolv_unlock(struct Curl_easy *data, struct Curl_dns_entry *dns)
 {
   if(data && data->share)
     Curl_share_lock(data, CURL_LOCK_DATA_DNS, CURL_LOCK_ACCESS_SINGLE);
 
   freednsentry(dns);
 
@@ -755,26 +755,26 @@
  * Curl_hostcache_clean()
  *
  * This _can_ be called with 'data' == NULL but then of course no locking
  * can be done!
  */
 
-void Curl_hostcache_clean(struct SessionHandle *data,
+void Curl_hostcache_clean(struct Curl_easy *data,
                           struct curl_hash *hash)
 {
   if(data && data->share)
     Curl_share_lock(data, CURL_LOCK_DATA_DNS, CURL_LOCK_ACCESS_SINGLE);
 
   Curl_hash_clean(hash);
 
   if(data && data->share)
     Curl_share_unlock(data, CURL_LOCK_DATA_DNS);
 }
 
 
-CURLcode Curl_loadhostpairs(struct SessionHandle *data)
+CURLcode Curl_loadhostpairs(struct Curl_easy *data)
 {
   struct curl_slist *hostp;
   char hostname[256];
   char address[256];
   int port;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostip.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostip.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostip.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostip.h	2016-07-21 06:31:36.000000000 +0800
@@ -47,13 +47,13 @@
                                     many seconds for a name resolve */
 
 #define CURL_ASYNC_SUCCESS CURLE_OK
 
 struct addrinfo;
 struct hostent;
-struct SessionHandle;
+struct Curl_easy;
 struct connectdata;
 
 /*
  * Curl_global_host_cache_init() initializes and sets up a global DNS cache.
  * Global DNS cache is general badness. Do not use. This will be removed in
  * a future version. Use the share interface instead!
@@ -115,23 +115,23 @@
                                 const char *hostname,
                                 int port,
                                 int *waitp);
 
 
 /* unlock a previously resolved dns entry */
-void Curl_resolv_unlock(struct SessionHandle *data,
+void Curl_resolv_unlock(struct Curl_easy *data,
                         struct Curl_dns_entry *dns);
 
 /* for debugging purposes only: */
 void Curl_scan_cache_used(void *user, void *ptr);
 
 /* init a new dns cache and return success */
 int Curl_mk_dnscache(struct curl_hash *hash);
 
 /* prune old entries from the DNS cache */
-void Curl_hostcache_prune(struct SessionHandle *data);
+void Curl_hostcache_prune(struct Curl_easy *data);
 
 /* Return # of adresses in a Curl_addrinfo struct */
 int Curl_num_addresses (const Curl_addrinfo *addr);
 
 #if defined(CURLDEBUG) && defined(HAVE_GETNAMEINFO)
 int curl_dogetnameinfo(GETNAMEINFO_QUAL_ARG1 GETNAMEINFO_TYPE_ARG1 sa,
@@ -185,13 +185,13 @@
 /*
  * Curl_cache_addr() stores a 'Curl_addrinfo' struct in the DNS cache.
  *
  * Returns the Curl_dns_entry entry pointer or NULL if the storage failed.
  */
 struct Curl_dns_entry *
-Curl_cache_addr(struct SessionHandle *data, Curl_addrinfo *addr,
+Curl_cache_addr(struct Curl_easy *data, Curl_addrinfo *addr,
                 const char *hostname, int port);
 
 #ifndef INADDR_NONE
 #define CURL_INADDR_NONE (in_addr_t) ~0
 #else
 #define CURL_INADDR_NONE INADDR_NONE
@@ -206,45 +206,45 @@
 extern sigjmp_buf curl_jmpenv;
 #endif
 
 /*
  * Function provided by the resolver backend to set DNS servers to use.
  */
-CURLcode Curl_set_dns_servers(struct SessionHandle *data, char *servers);
+CURLcode Curl_set_dns_servers(struct Curl_easy *data, char *servers);
 
 /*
  * Function provided by the resolver backend to set
  * outgoing interface to use for DNS requests
  */
-CURLcode Curl_set_dns_interface(struct SessionHandle *data,
+CURLcode Curl_set_dns_interface(struct Curl_easy *data,
                                 const char *interf);
 
 /*
  * Function provided by the resolver backend to set
  * local IPv4 address to use as source address for DNS requests
  */
-CURLcode Curl_set_dns_local_ip4(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip4(struct Curl_easy *data,
                                 const char *local_ip4);
 
 /*
  * Function provided by the resolver backend to set
  * local IPv6 address to use as source address for DNS requests
  */
-CURLcode Curl_set_dns_local_ip6(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip6(struct Curl_easy *data,
                                 const char *local_ip6);
 
 /*
  * Clean off entries from the cache
  */
-void Curl_hostcache_clean(struct SessionHandle *data, struct curl_hash *hash);
+void Curl_hostcache_clean(struct Curl_easy *data, struct curl_hash *hash);
 
 /*
  * Destroy the hostcache of this handle.
  */
-void Curl_hostcache_destroy(struct SessionHandle *data);
+void Curl_hostcache_destroy(struct Curl_easy *data);
 
 /*
  * Populate the cache with specified entries from CURLOPT_RESOLVE.
  */
-CURLcode Curl_loadhostpairs(struct SessionHandle *data);
+CURLcode Curl_loadhostpairs(struct Curl_easy *data);
 
 #endif /* HEADER_CURL_HOSTIP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostsyn.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostsyn.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/hostsyn.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/hostsyn.c	2016-07-21 06:31:36.000000000 +0800
@@ -56,50 +56,50 @@
  **********************************************************************/
 #ifdef CURLRES_SYNCH
 
 /*
  * Function provided by the resolver backend to set DNS servers to use.
  */
-CURLcode Curl_set_dns_servers(struct SessionHandle *data,
+CURLcode Curl_set_dns_servers(struct Curl_easy *data,
                               char *servers)
 {
   (void)data;
   (void)servers;
   return CURLE_NOT_BUILT_IN;
 
 }
 
 /*
  * Function provided by the resolver backend to set
  * outgoing interface to use for DNS requests
  */
-CURLcode Curl_set_dns_interface(struct SessionHandle *data,
+CURLcode Curl_set_dns_interface(struct Curl_easy *data,
                                 const char *interf)
 {
   (void)data;
   (void)interf;
   return CURLE_NOT_BUILT_IN;
 }
 
 /*
  * Function provided by the resolver backend to set
  * local IPv4 address to use as source address for DNS requests
  */
-CURLcode Curl_set_dns_local_ip4(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip4(struct Curl_easy *data,
                                 const char *local_ip4)
 {
   (void)data;
   (void)local_ip4;
   return CURLE_NOT_BUILT_IN;
 }
 
 /*
  * Function provided by the resolver backend to set
  * local IPv6 address to use as source address for DNS requests
  */
-CURLcode Curl_set_dns_local_ip6(struct SessionHandle *data,
+CURLcode Curl_set_dns_local_ip6(struct Curl_easy *data,
                                 const char *local_ip6)
 {
   (void)data;
   (void)local_ip6;
   return CURLE_NOT_BUILT_IN;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http2.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http2.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http2.c	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http2.c	2016-07-21 06:31:36.000000000 +0800
@@ -136,13 +136,13 @@
   DEBUGF(infof(conn->data, "HTTP/2 DISCONNECT done\n"));
 
   return CURLE_OK;
 }
 
 /* called from Curl_http_setup_conn */
-void Curl_http2_setup_req(struct SessionHandle *data)
+void Curl_http2_setup_req(struct Curl_easy *data)
 {
   struct HTTP *http = data->req.protop;
 
   http->nread_header_recvbuf = 0;
   http->bodystarted = FALSE;
   http->status_code = -1;
@@ -281,13 +281,13 @@
 }
 
 
 /* We pass a pointer to this struct in the push callback, but the contents of
    the struct are hidden from the user. */
 struct curl_pushheaders {
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   const nghttp2_push_promise *frame;
 };
 
 /*
  * push header access function. Only to be used from within the push callback
  */
@@ -332,15 +332,15 @@
       }
     }
   }
   return NULL;
 }
 
-static CURL *duphandle(struct SessionHandle *data)
+static struct Curl_easy *duphandle(struct Curl_easy *data)
 {
-  struct SessionHandle *second = curl_easy_duphandle(data);
+  struct Curl_easy *second = curl_easy_duphandle(data);
   if(second) {
     /* setup the request struct */
     struct HTTP *http = calloc(1, sizeof(struct HTTP));
     if(!http) {
       (void)Curl_close(second);
       second = NULL;
@@ -360,13 +360,13 @@
     }
   }
   return second;
 }
 
 
-static int push_promise(struct SessionHandle *data,
+static int push_promise(struct Curl_easy *data,
                         struct connectdata *conn,
                         const nghttp2_push_promise *frame)
 {
   int rv;
   DEBUGF(infof(data, "PUSH_PROMISE received, stream %u!\n",
                frame->promised_stream_id));
@@ -375,13 +375,13 @@
     struct HTTP *newstream;
     struct curl_pushheaders heads;
     CURLMcode rc;
     struct http_conn *httpc;
     size_t i;
     /* clone the parent */
-    struct SessionHandle *newhandle = duphandle(data);
+    struct Curl_easy *newhandle = duphandle(data);
     if(!newhandle) {
       infof(data, "failed to duplicate handle\n");
       rv = 1; /* FAIL HARD */
       goto fail;
     }
 
@@ -442,13 +442,13 @@
 
 static int on_frame_recv(nghttp2_session *session, const nghttp2_frame *frame,
                          void *userp)
 {
   struct connectdata *conn = (struct connectdata *)userp;
   struct http_conn *httpc = &conn->proto.httpc;
-  struct SessionHandle *data_s = NULL;
+  struct Curl_easy *data_s = NULL;
   struct HTTP *stream = NULL;
   static int lastStream = -1;
   int rv;
   size_t left, ncopy;
   int32_t stream_id = frame->hd.stream_id;
 
@@ -479,13 +479,13 @@
   data_s = nghttp2_session_get_stream_user_data(session, stream_id);
   if(lastStream != stream_id) {
     lastStream = stream_id;
   }
   if(!data_s) {
     DEBUGF(infof(conn->data,
-                 "No SessionHandle associated with stream: %x\n",
+                 "No Curl_easy associated with stream: %x\n",
                  stream_id));
     return 0;
   }
 
   stream = data_s->req.protop;
   if(!stream)
@@ -570,13 +570,13 @@
 }
 
 static int on_invalid_frame_recv(nghttp2_session *session,
                                  const nghttp2_frame *frame,
                                  int lib_error_code, void *userp)
 {
-  struct SessionHandle *data_s = NULL;
+  struct Curl_easy *data_s = NULL;
   (void)userp;
 
   data_s = nghttp2_session_get_stream_user_data(session, frame->hd.stream_id);
   if(data_s) {
     DEBUGF(infof(data_s,
                  "on_invalid_frame_recv() was called, error=%d:%s\n",
@@ -587,13 +587,13 @@
 
 static int on_data_chunk_recv(nghttp2_session *session, uint8_t flags,
                               int32_t stream_id,
                               const uint8_t *data, size_t len, void *userp)
 {
   struct HTTP *stream;
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   size_t nread;
   struct connectdata *conn = (struct connectdata *)userp;
   (void)session;
   (void)flags;
   (void)data;
 
@@ -653,13 +653,13 @@
 }
 
 static int before_frame_send(nghttp2_session *session,
                              const nghttp2_frame *frame,
                              void *userp)
 {
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   (void)userp;
 
   data_s = nghttp2_session_get_stream_user_data(session, frame->hd.stream_id);
   if(data_s) {
     DEBUGF(infof(data_s, "before_frame_send() was called\n"));
   }
@@ -667,13 +667,13 @@
   return 0;
 }
 static int on_frame_send(nghttp2_session *session,
                          const nghttp2_frame *frame,
                          void *userp)
 {
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   (void)userp;
 
   data_s = nghttp2_session_get_stream_user_data(session, frame->hd.stream_id);
   if(data_s) {
     DEBUGF(infof(data_s, "on_frame_send() was called, length = %zd\n",
                  frame->hd.length));
@@ -681,13 +681,13 @@
   return 0;
 }
 static int on_frame_not_send(nghttp2_session *session,
                              const nghttp2_frame *frame,
                              int lib_error_code, void *userp)
 {
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   (void)userp;
 
   data_s = nghttp2_session_get_stream_user_data(session, frame->hd.stream_id);
   if(data_s) {
     DEBUGF(infof(data_s,
                  "on_frame_not_send() was called, lib_error_code = %d\n",
@@ -695,13 +695,13 @@
   }
   return 0;
 }
 static int on_stream_close(nghttp2_session *session, int32_t stream_id,
                            uint32_t error_code, void *userp)
 {
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   struct HTTP *stream;
   struct connectdata *conn = (struct connectdata *)userp;
   (void)session;
   (void)stream_id;
 
   if(stream_id) {
@@ -732,13 +732,13 @@
 }
 
 static int on_begin_headers(nghttp2_session *session,
                             const nghttp2_frame *frame, void *userp)
 {
   struct HTTP *stream;
-  struct SessionHandle *data_s = NULL;
+  struct Curl_easy *data_s = NULL;
   (void)userp;
 
   data_s = nghttp2_session_get_stream_user_data(session, frame->hd.stream_id);
   if(!data_s) {
     return 0;
   }
@@ -799,13 +799,13 @@
                      const uint8_t *name, size_t namelen,
                      const uint8_t *value, size_t valuelen,
                      uint8_t flags,
                      void *userp)
 {
   struct HTTP *stream;
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   int32_t stream_id = frame->hd.stream_id;
   struct connectdata *conn = (struct connectdata *)userp;
   (void)flags;
 
   DEBUGASSERT(stream_id); /* should never be a zero stream ID here */
 
@@ -911,13 +911,13 @@
                                          int32_t stream_id,
                                          uint8_t *buf, size_t length,
                                          uint32_t *data_flags,
                                          nghttp2_data_source *source,
                                          void *userp)
 {
-  struct SessionHandle *data_s;
+  struct Curl_easy *data_s;
   struct HTTP *stream = NULL;
   size_t nread;
   (void)source;
   (void)userp;
 
   if(stream_id) {
@@ -1093,22 +1093,22 @@
  */
 static int should_close_session(struct http_conn *httpc) {
   return httpc->drain_total == 0 && !nghttp2_session_want_read(httpc->h2) &&
          !nghttp2_session_want_write(httpc->h2);
 }
 
-static int h2_session_send(struct SessionHandle *data,
+static int h2_session_send(struct Curl_easy *data,
                            nghttp2_session *h2);
 
 /*
  * h2_process_pending_input() processes pending input left in
  * httpc->inbuf.  Then, call h2_session_send() to send pending data.
  * This function returns 0 if it succeeds, or -1 and error code will
  * be assigned to *err.
  */
-static int h2_process_pending_input(struct SessionHandle *data,
+static int h2_process_pending_input(struct Curl_easy *data,
                                     struct http_conn *httpc,
                                     CURLcode *err) {
   ssize_t nread;
   char *inbuf;
   ssize_t rv;
 
@@ -1153,13 +1153,13 @@
   }
 
   return 0;
 }
 
 static ssize_t http2_handle_stream_close(struct connectdata *conn,
-                                         struct SessionHandle *data,
+                                         struct Curl_easy *data,
                                          struct HTTP *stream, CURLcode *err) {
   char *trailer_pos, *trailer_end;
   CURLcode result;
   struct http_conn *httpc = &conn->proto.httpc;
 
   if(httpc->pause_stream_id == stream->stream_id) {
@@ -1223,13 +1223,13 @@
 /*
  * h2_pri_spec() fills in the pri_spec struct, used by nghttp2 to send weight
  * and dependency to the peer. It also stores the updated values in the state
  * struct.
  */
 
-static void h2_pri_spec(struct SessionHandle *data,
+static void h2_pri_spec(struct Curl_easy *data,
                         nghttp2_priority_spec *pri_spec)
 {
   struct HTTP *depstream = (data->set.stream_depends_on?
                             data->set.stream_depends_on->req.protop:NULL);
   int32_t depstream_id = depstream? depstream->stream_id:0;
   nghttp2_priority_spec_init(pri_spec, depstream_id, data->set.stream_weight,
@@ -1241,13 +1241,13 @@
 
 /*
  * h2_session_send() checks if there's been an update in the priority /
  * dependency settings and if so it submits a PRIORITY frame with the updated
  * info.
  */
-static int h2_session_send(struct SessionHandle *data,
+static int h2_session_send(struct Curl_easy *data,
                            nghttp2_session *h2)
 {
   struct HTTP *stream = data->req.protop;
   if((data->set.stream_weight != data->state.stream_weight) ||
      (data->set.stream_depends_e != data->state.stream_depends_e) ||
      (data->set.stream_depends_on != data->state.stream_depends_on) ) {
@@ -1276,13 +1276,13 @@
                           char *mem, size_t len, CURLcode *err)
 {
   CURLcode result = CURLE_OK;
   ssize_t rv;
   ssize_t nread;
   struct http_conn *httpc = &conn->proto.httpc;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct HTTP *stream = data->req.protop;
 
   (void)sockindex; /* we always do HTTP2 on sockindex 0 */
 
   if(should_close_session(httpc)) {
     DEBUGF(infof(data,
@@ -1294,13 +1294,13 @@
   /* Nullify here because we call nghttp2_session_send() and they
      might refer to the old buffer. */
   stream->upload_mem = NULL;
   stream->upload_len = 0;
 
   /*
-   * At this point 'stream' is just in the SessionHandle the connection
+   * At this point 'stream' is just in the Curl_easy the connection
    * identifies as its owner at this time.
    */
 
   if(stream->bodystarted &&
      stream->nread_header_recvbuf < stream->header_recvbuf->size_used) {
     /* If there is body data pending for this stream to return, do that */
@@ -1861,13 +1861,13 @@
                              const char *mem, size_t nread)
 {
   CURLcode result;
   struct http_conn *httpc = &conn->proto.httpc;
   int rv;
   ssize_t nproc;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct HTTP *stream = conn->data->req.protop;
 
   result = Curl_http2_setup(conn);
   if(result)
     return result;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http2.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http2.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http2.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http2.h	2016-07-21 06:31:36.000000000 +0800
@@ -47,13 +47,13 @@
                                     struct connectdata *conn);
 CURLcode Curl_http2_setup(struct connectdata *conn);
 CURLcode Curl_http2_switched(struct connectdata *conn,
                              const char *data, size_t nread);
 /* called from Curl_http_setup_conn */
 void Curl_http2_setup_conn(struct connectdata *conn);
-void Curl_http2_setup_req(struct SessionHandle *data);
+void Curl_http2_setup_req(struct Curl_easy *data);
 #else /* USE_NGHTTP2 */
 #define Curl_http2_init(x) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_send_request(x) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_request_upgrade(x,y) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_setup(x) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_switched(x,y,z) CURLE_UNSUPPORTED_PROTOCOL
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http.c	2016-07-21 06:31:36.000000000 +0800
@@ -148,13 +148,13 @@
   PROTOPT_SSL | PROTOPT_CREDSPERREQUEST | PROTOPT_ALPN_NPN /* flags */
 };
 #endif
 
 CURLcode Curl_http_setup_conn(struct connectdata *conn)
 {
-  /* allocate the HTTP-specific struct for the SessionHandle, only to survive
+  /* allocate the HTTP-specific struct for the Curl_easy, only to survive
      during this request */
   struct HTTP *http;
   DEBUGASSERT(conn->data->req.protop == NULL);
 
   http = calloc(1, sizeof(struct HTTP));
   if(!http)
@@ -176,13 +176,13 @@
  */
 char *Curl_checkheaders(const struct connectdata *conn,
                         const char *thisheader)
 {
   struct curl_slist *head;
   size_t thislen = strlen(thisheader);
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   for(head = data->set.headers;head; head=head->next) {
     if(Curl_raw_nequal(head->data, thisheader, thislen))
       return head->data;
   }
 
@@ -191,22 +191,22 @@
 
 /*
  * checkProxyHeaders() checks the linked list of custom proxy headers
  * if proxy headers are not available, then it will lookup into http header
  * link list
  *
- * It takes a connectdata struct as input instead of the SessionHandle simply
+ * It takes a connectdata struct as input instead of the Curl_easy simply
  * to know if this is a proxy request or not, as it then might check a
  * different header list.
  */
 char *Curl_checkProxyheaders(const struct connectdata *conn,
                              const char *thisheader)
 {
   struct curl_slist *head;
   size_t thislen = strlen(thisheader);
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   for(head = (conn->bits.proxy && data->set.sep_headers) ?
         data->set.proxyheaders : data->set.headers;
       head; head=head->next) {
     if(Curl_raw_nequal(head->data, thisheader, thislen))
       return head->data;
@@ -277,13 +277,13 @@
  * Returns CURLcode.
  */
 static CURLcode http_output_basic(struct connectdata *conn, bool proxy)
 {
   size_t size = 0;
   char *authorization = NULL;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char **userp;
   const char *user;
   const char *pwd;
   CURLcode result;
 
   if(proxy) {
@@ -374,13 +374,13 @@
  *     }
  *   }
  * }
  */
 static CURLcode http_perhapsrewind(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct HTTP *http = data->req.protop;
   curl_off_t bytessent;
   curl_off_t expectsend = -1; /* default is unknown */
 
   if(!http)
     /* If this is still NULL, we have not reach very far and we can safely
@@ -482,13 +482,13 @@
  * which one (if any) to use. It will set 'newurl' if an auth method was
  * picked.
  */
 
 CURLcode Curl_http_auth_act(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   bool pickhost = FALSE;
   bool pickproxy = FALSE;
   CURLcode result = CURLE_OK;
 
   if(100 <= data->req.httpcode && 199 >= data->req.httpcode)
     /* this is a transient response code, ignore */
@@ -564,13 +564,13 @@
                     const char *path,
                     bool proxy)
 {
   const char *auth = NULL;
   CURLcode result = CURLE_OK;
 #if !defined(CURL_DISABLE_VERBOSE_STRINGS) || defined(USE_SPNEGO)
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 #endif
 #ifdef USE_SPNEGO
   struct negotiatedata *negdata = proxy ?
     &data->state.proxyneg : &data->state.negotiate;
 #endif
 
@@ -671,13 +671,13 @@
                       const char *request,
                       const char *path,
                       bool proxytunnel) /* TRUE if this is the request setting
                                            up the proxy tunnel */
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct auth *authhost;
   struct auth *authproxy;
 
   DEBUGASSERT(data);
 
   authhost = &data->state.authhost;
@@ -744,13 +744,13 @@
 CURLcode Curl_http_input_auth(struct connectdata *conn, bool proxy,
                               const char *auth) /* the first non-space */
 {
   /*
    * This resource requires authentication
    */
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
 #ifdef USE_SPNEGO
   struct negotiatedata *negdata = proxy?
     &data->state.proxyneg:&data->state.negotiate;
 #endif
   unsigned long *availp;
@@ -904,13 +904,13 @@
  * @retval 0 communications should continue
  *
  * @retval 1 communications should not continue
  */
 static int http_should_fail(struct connectdata *conn)
 {
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   int httpcode;
 
   DEBUGASSERT(conn);
   data = conn->data;
   DEBUGASSERT(data);
 
@@ -1438,13 +1438,13 @@
  * performed.
  */
 
 CURLcode Curl_http_done(struct connectdata *conn,
                         CURLcode status, bool premature)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct HTTP *http = data->req.protop;
 #ifdef USE_NGHTTP2
   struct http_conn *httpc = &conn->proto.httpc;
 #endif
 
   Curl_unencode_cleanup(conn);
@@ -1536,26 +1536,26 @@
  *
  * - if the user specifically requested HTTP 1.0
  * - if the server we are connected to only supports 1.0
  * - if any server previously contacted to handle this request only supports
  * 1.0.
  */
-static bool use_http_1_1plus(const struct SessionHandle *data,
+static bool use_http_1_1plus(const struct Curl_easy *data,
                              const struct connectdata *conn)
 {
   if((data->state.httpversion == 10) || (conn->httpversion == 10))
     return FALSE;
   if((data->set.httpversion == CURL_HTTP_VERSION_1_0) &&
      (conn->httpversion <= 10))
     return FALSE;
   return ((data->set.httpversion == CURL_HTTP_VERSION_NONE) ||
           (data->set.httpversion >= CURL_HTTP_VERSION_1_1));
 }
 
 /* check and possibly add an Expect: header */
-static CURLcode expect100(struct SessionHandle *data,
+static CURLcode expect100(struct Curl_easy *data,
                           struct connectdata *conn,
                           Curl_send_buffer *req_buffer)
 {
   CURLcode result = CURLE_OK;
   const char *ptr;
   data->state.expect100header = FALSE; /* default to false unless it is set
@@ -1592,13 +1592,13 @@
                                  Curl_send_buffer *req_buffer)
 {
   char *ptr;
   struct curl_slist *h[2];
   struct curl_slist *headers;
   int numlists=1; /* by default */
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int i;
 
   enum proxy_use proxy;
 
   if(is_connect)
     proxy = HEADER_CONNECT;
@@ -1697,13 +1697,13 @@
     }
   }
 
   return CURLE_OK;
 }
 
-CURLcode Curl_add_timecondition(struct SessionHandle *data,
+CURLcode Curl_add_timecondition(struct Curl_easy *data,
                                 Curl_send_buffer *req_buffer)
 {
   const struct tm *tm;
   char *buf = data->state.buffer;
   struct tm keeptime;
   CURLcode result;
@@ -1755,19 +1755,19 @@
   }
 
   return result;
 }
 
 /*
- * Curl_http() gets called from the generic Curl_do() function when a HTTP
+ * Curl_http() gets called from the generic multi_do() function when a HTTP
  * request is to be performed. This creates and sends a properly constructed
  * HTTP request.
  */
 CURLcode Curl_http(struct connectdata *conn, bool *done)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_OK;
   struct HTTP *http;
   const char *ppath = data->state.path;
   bool paste_ftp_userpwd = FALSE;
   char ftp_typecode[sizeof("/;type=?")] = "";
   const char *host = conn->host.name;
@@ -2774,13 +2774,13 @@
 /*
  * checkhttpprefix()
  *
  * Returns TRUE if member of the list matches prefix of string
  */
 static bool
-checkhttpprefix(struct SessionHandle *data,
+checkhttpprefix(struct Curl_easy *data,
                 const char *s)
 {
   struct curl_slist *head = data->set.http200aliases;
   bool rc = FALSE;
 #ifdef CURL_DOES_CONVERSIONS
   /* convert from the network encoding using a scratch area */
@@ -2813,13 +2813,13 @@
 #endif /* CURL_DOES_CONVERSIONS */
   return rc;
 }
 
 #ifndef CURL_DISABLE_RTSP
 static bool
-checkrtspprefix(struct SessionHandle *data,
+checkrtspprefix(struct Curl_easy *data,
                 const char *s)
 {
 
 #ifdef CURL_DOES_CONVERSIONS
   /* convert from the network encoding using a scratch area */
   char *scratch = strdup(s);
@@ -2841,13 +2841,13 @@
   else
     return FALSE;
 }
 #endif /* CURL_DISABLE_RTSP */
 
 static bool
-checkprotoprefix(struct SessionHandle *data, struct connectdata *conn,
+checkprotoprefix(struct Curl_easy *data, struct connectdata *conn,
                  const char *s)
 {
 #ifndef CURL_DISABLE_RTSP
   if(conn->handler->protocol & CURLPROTO_RTSP)
     return checkrtspprefix(data, s);
 #else
@@ -2859,13 +2859,13 @@
 
 /*
  * header_append() copies a chunk of data to the end of the already received
  * header. We make sure that the full string fit in the allocated header
  * buffer, or else we enlarge it.
  */
-static CURLcode header_append(struct SessionHandle *data,
+static CURLcode header_append(struct Curl_easy *data,
                               struct SingleRequest *k,
                               size_t length)
 {
   if(k->hbuflen + length >= data->state.headersize) {
     /* We enlarge the header buffer as it is too small */
     char *newbuff;
@@ -2897,13 +2897,13 @@
   k->hbuflen += length;
   *k->hbufp = 0;
 
   return CURLE_OK;
 }
 
-static void print_http_error(struct SessionHandle *data)
+static void print_http_error(struct Curl_easy *data)
 {
   struct SingleRequest *k = &data->req;
   char *beg = k->p;
 
   /* make sure that data->req.p points to the HTTP status line */
   if(!strncmp(beg, "HTTP", 4)) {
@@ -2937,13 +2937,13 @@
   failf(data, "The requested URL returned error: %d", k->httpcode);
 }
 
 /*
  * Read any HTTP header lines from the server and pass them to the client app.
  */
-CURLcode Curl_http_readwrite_headers(struct SessionHandle *data,
+CURLcode Curl_http_readwrite_headers(struct Curl_easy *data,
                                        struct connectdata *conn,
                                        ssize_t *nread,
                                        bool *stop_reading)
 {
   CURLcode result;
   struct SingleRequest *k = &data->req;
@@ -3051,13 +3051,13 @@
         k->headerline = 0; /* restart the header line counter */
 
         /* "A user agent MAY ignore unexpected 1xx status responses." */
         switch(k->httpcode) {
         case 100:
           /* if we did wait for this do enable write now! */
-          if(k->exp100) {
+          if(k->exp100 > EXP100_SEND_DATA) {
             k->exp100 = EXP100_SEND_DATA;
             k->keepon |= KEEP_SEND;
           }
           break;
         case 101:
           /* Switching Protocols */
@@ -3135,58 +3135,56 @@
       data->info.header_size += (long)headerlen;
       data->req.headerbytecount += (long)headerlen;
 
       data->req.deductheadercount =
         (100 <= k->httpcode && 199 >= k->httpcode)?data->req.headerbytecount:0;
 
-      if(!*stop_reading) {
-        /* Curl_http_auth_act() checks what authentication methods
-         * that are available and decides which one (if any) to
-         * use. It will set 'newurl' if an auth method was picked. */
-        result = Curl_http_auth_act(conn);
+      /* Curl_http_auth_act() checks what authentication methods
+       * that are available and decides which one (if any) to
+       * use. It will set 'newurl' if an auth method was picked. */
+      result = Curl_http_auth_act(conn);
 
-        if(result)
-          return result;
+      if(result)
+        return result;
 
-        if(k->httpcode >= 300) {
-          if((!conn->bits.authneg) && !conn->bits.close &&
-             !conn->bits.rewindaftersend) {
-            /*
-             * General treatment of errors when about to send data. Including :
-             * "417 Expectation Failed", while waiting for 100-continue.
-             *
-             * The check for close above is done simply because of something
-             * else has already deemed the connection to get closed then
-             * something else should've considered the big picture and we
-             * avoid this check.
-             *
-             * rewindaftersend indicates that something has told libcurl to
-             * continue sending even if it gets discarded
+      if(k->httpcode >= 300) {
+        if((!conn->bits.authneg) && !conn->bits.close &&
+           !conn->bits.rewindaftersend) {
+          /*
+           * General treatment of errors when about to send data. Including :
+           * "417 Expectation Failed", while waiting for 100-continue.
+           *
+           * The check for close above is done simply because of something
+           * else has already deemed the connection to get closed then
+           * something else should've considered the big picture and we
+           * avoid this check.
+           *
+           * rewindaftersend indicates that something has told libcurl to
+           * continue sending even if it gets discarded
+           */
+
+          switch(data->set.httpreq) {
+          case HTTPREQ_PUT:
+          case HTTPREQ_POST:
+          case HTTPREQ_POST_FORM:
+            /* We got an error response. If this happened before the whole
+             * request body has been sent we stop sending and mark the
+             * connection for closure after we've read the entire response.
              */
-
-            switch(data->set.httpreq) {
-            case HTTPREQ_PUT:
-            case HTTPREQ_POST:
-            case HTTPREQ_POST_FORM:
-              /* We got an error response. If this happened before the whole
-               * request body has been sent we stop sending and mark the
-               * connection for closure after we've read the entire response.
-               */
-              if(!k->upload_done) {
-                infof(data, "HTTP error before end of send, stop sending\n");
-                connclose(conn, "Stop sending data before everything sent");
-                k->upload_done = TRUE;
-                k->keepon &= ~KEEP_SEND; /* don't send */
-                if(data->state.expect100header)
-                  k->exp100 = EXP100_FAILED;
-              }
-              break;
-
-            default: /* default label present to avoid compiler warnings */
-              break;
+            if(!k->upload_done) {
+              infof(data, "HTTP error before end of send, stop sending\n");
+              connclose(conn, "Stop sending data before everything sent");
+              k->upload_done = TRUE;
+              k->keepon &= ~KEEP_SEND; /* don't send */
+              if(data->state.expect100header)
+                k->exp100 = EXP100_FAILED;
             }
+            break;
+
+          default: /* default label present to avoid compiler warnings */
+            break;
           }
         }
 
         if(conn->bits.rewindaftersend) {
           /* We rewind after a complete send, so thus we continue
              sending now */
@@ -3207,13 +3205,13 @@
 #ifndef CURL_DISABLE_RTSP
         else if((conn->handler->protocol & CURLPROTO_RTSP) &&
                 (data->set.rtspreq == RTSPREQ_DESCRIBE) &&
                 (k->size <= -1))
           /* Respect section 4.4 of rfc2326: If the Content-Length header is
              absent, a length 0 must be assumed.  It will prevent libcurl from
-             hanging on DECRIBE request that got refused for whatever
+             hanging on DESCRIBE request that got refused for whatever
              reason */
           *stop_reading = TRUE;
 #endif
         else {
           /* If we know the expected size of this document, we set the
              maximum download size to the size of the expected
@@ -3305,12 +3303,19 @@
          */
         nc = sscanf(HEADER1,
                     " HTTP/%d.%d %d",
                     &httpversion_major,
                     &conn->httpversion,
                     &k->httpcode);
+
+        if(nc == 1 && httpversion_major == 2 &&
+           1 == sscanf(HEADER1, " HTTP/2 %d", &k->httpcode)) {
+          conn->httpversion = 0;
+          nc = 3;
+        }
+
         if(nc==3) {
           conn->httpversion += 10 * httpversion_major;
 
           if(k->upgr101 == UPGR101_RECEIVED) {
             /* supposedly upgraded to http2 now */
             if(conn->httpversion != 20)
@@ -3751,13 +3756,13 @@
     data->req.headerbytecount += (long)k->hbuflen;
 
     /* reset hbufp pointer && hbuflen */
     k->hbufp = data->state.headerbuff;
     k->hbuflen = 0;
   }
-  while(!*stop_reading && *k->str); /* header line within buffer */
+  while(*k->str); /* header line within buffer */
 
   /* We might have reached the end of the header part here, but
      there might be a non-header part left in the end of the read
      buffer. */
 
   return CURLE_OK;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_chunks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_chunks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_chunks.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_chunks.c	2016-07-21 06:31:36.000000000 +0800
@@ -105,13 +105,13 @@
 CHUNKcode Curl_httpchunk_read(struct connectdata *conn,
                               char *datap,
                               ssize_t datalen,
                               ssize_t *wrotep)
 {
   CURLcode result=CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct Curl_chunker *ch = &conn->chunk;
   struct SingleRequest *k = &data->req;
   size_t piece;
   curl_off_t length = (curl_off_t)datalen;
   size_t *wrote = (size_t *)wrotep;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_digest.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_digest.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_digest.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_digest.c	2016-07-21 06:31:36.000000000 +0800
@@ -42,13 +42,13 @@
 
 CURLcode Curl_input_digest(struct connectdata *conn,
                            bool proxy,
                            const char *header) /* rest of the *-authenticate:
                                                   header */
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Point to the correct struct with this */
   struct digestdata *digest;
 
   if(proxy) {
     digest = &data->state.proxydigest;
@@ -70,13 +70,13 @@
 CURLcode Curl_output_digest(struct connectdata *conn,
                             bool proxy,
                             const unsigned char *request,
                             const unsigned char *uripath)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   unsigned char *path;
   char *tmp;
   char *response;
   size_t len;
   bool have_chlg;
 
@@ -166,13 +166,13 @@
 
   authp->done = TRUE;
 
   return CURLE_OK;
 }
 
-void Curl_digest_cleanup(struct SessionHandle *data)
+void Curl_digest_cleanup(struct Curl_easy *data)
 {
   Curl_auth_digest_cleanup(&data->state.digest);
   Curl_auth_digest_cleanup(&data->state.proxydigest);
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_digest.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_digest.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_digest.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_digest.h	2016-07-21 06:31:36.000000000 +0800
@@ -31,12 +31,12 @@
 CURLcode Curl_output_digest(struct connectdata *conn,
                             bool proxy,
                             const unsigned char *request,
                             const unsigned char *uripath);
 
 #if !defined(CURL_DISABLE_HTTP) && !defined(CURL_DISABLE_CRYPTO_AUTH)
-void Curl_digest_cleanup(struct SessionHandle *data);
+void Curl_digest_cleanup(struct Curl_easy *data);
 #else
 #define Curl_digest_cleanup(x) Curl_nop_stmt
 #endif
 
 #endif /* HEADER_CURL_HTTP_DIGEST_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http.h	2016-07-21 06:31:36.000000000 +0800
@@ -66,13 +66,13 @@
 CURLcode Curl_add_buffer_send(Curl_send_buffer *in,
                               struct connectdata *conn,
                               long *bytes_written,
                               size_t included_body_bytes,
                               int socketindex);
 
-CURLcode Curl_add_timecondition(struct SessionHandle *data,
+CURLcode Curl_add_timecondition(struct Curl_easy *data,
                                 Curl_send_buffer *buf);
 CURLcode Curl_add_custom_headers(struct connectdata *conn,
                                  bool is_connect,
                                  Curl_send_buffer *req_buffer);
 
 /* protocol-specific functions set up to be called by the main engine */
@@ -84,13 +84,13 @@
 /* The following functions are defined in http_chunks.c */
 void Curl_httpchunk_init(struct connectdata *conn);
 CHUNKcode Curl_httpchunk_read(struct connectdata *conn, char *datap,
                               ssize_t length, ssize_t *wrote);
 
 /* These functions are in http.c */
-void Curl_http_auth_stage(struct SessionHandle *data, int stage);
+void Curl_http_auth_stage(struct Curl_easy *data, int stage);
 CURLcode Curl_http_input_auth(struct connectdata *conn, bool proxy,
                               const char *auth);
 CURLcode Curl_http_auth_act(struct connectdata *conn);
 CURLcode Curl_http_perhapsrewind(struct connectdata *conn);
 
 /* If only the PICKNONE bit is set, there has been a round-trip and we
@@ -213,20 +213,20 @@
      this case, we wrongly sends the content of mem buffer if we share
      them for both cases. */
   int32_t pause_stream_id; /* stream ID which paused
                               nghttp2_session_mem_recv */
   size_t drain_total; /* sum of all stream's UrlState.drain */
 
-  /* this is a hash of all individual streams (SessionHandle structs) */
+  /* this is a hash of all individual streams (Curl_easy structs) */
   struct h2settings settings;
 #else
   int unused; /* prevent a compiler warning */
 #endif
 };
 
-CURLcode Curl_http_readwrite_headers(struct SessionHandle *data,
+CURLcode Curl_http_readwrite_headers(struct Curl_easy *data,
                                      struct connectdata *conn,
                                      ssize_t *nread,
                                      bool *stop_reading);
 
 /**
  * Curl_http_output_auth() setups the authentication headers for the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_negotiate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_negotiate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_negotiate.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_negotiate.c	2016-07-21 06:31:36.000000000 +0800
@@ -35,13 +35,13 @@
 #include "curl_memory.h"
 #include "memdebug.h"
 
 CURLcode Curl_input_negotiate(struct connectdata *conn, bool proxy,
                               const char *header)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   size_t len;
 
   /* Point to the username, password, service and host */
   const char *userp;
   const char *passwdp;
   const char *service;
@@ -121,13 +121,13 @@
 
   free(base64);
 
   return (userp == NULL) ? CURLE_OUT_OF_MEMORY : CURLE_OK;
 }
 
-void Curl_cleanup_negotiate(struct SessionHandle *data)
+void Curl_cleanup_negotiate(struct Curl_easy *data)
 {
   Curl_auth_spnego_cleanup(&data->state.negotiate);
   Curl_auth_spnego_cleanup(&data->state.proxyneg);
 }
 
 #endif /* !CURL_DISABLE_HTTP && USE_SPNEGO */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_negotiate.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_negotiate.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_negotiate.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_negotiate.h	2016-07-21 06:31:36.000000000 +0800
@@ -28,11 +28,11 @@
 CURLcode Curl_input_negotiate(struct connectdata *conn, bool proxy,
                               const char *header);
 
 /* this is for creating Negotiate header output */
 CURLcode Curl_output_negotiate(struct connectdata *conn, bool proxy);
 
-void Curl_cleanup_negotiate(struct SessionHandle *data);
+void Curl_cleanup_negotiate(struct Curl_easy *data);
 
 #endif /* USE_SPNEGO */
 
 #endif /* HEADER_CURL_HTTP_NEGOTIATE_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_proxy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_proxy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/http_proxy.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/http_proxy.c	2016-07-21 06:31:36.000000000 +0800
@@ -104,13 +104,13 @@
                            int sockindex,
                            const char *hostname,
                            int remote_port,
                            bool blocking)
 {
   int subversion=0;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   struct SingleRequest *k = &data->req;
   CURLcode result;
   curl_socket_t tunnelsocket = conn->sock[sockindex];
   curl_off_t cl=0;
   bool closeConnection = FALSE;
   bool chunked_encoding = FALSE;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/imap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/imap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/imap.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/imap.c	2016-07-21 06:31:36.000000000 +0800
@@ -645,13 +645,13 @@
  *
  * Sends a LIST command or an alternative custom request.
  */
 static CURLcode imap_perform_list(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = data->req.protop;
   char *mailbox;
 
   if(imap->custom)
     /* Send the custom request */
     result = imap_sendf(conn, "%s%s", imap->custom,
@@ -680,13 +680,13 @@
  *
  * Sends a SELECT command to ask the server to change the selected mailbox.
  */
 static CURLcode imap_perform_select(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = data->req.protop;
   struct imap_conn *imapc = &conn->proto.imapc;
   char *mailbox;
 
   /* Invalidate old information as we are switching mailboxes */
   Curl_safefree(imapc->mailbox);
@@ -837,13 +837,13 @@
 /* For the initial server greeting */
 static CURLcode imap_state_servergreet_resp(struct connectdata *conn,
                                             int imapcode,
                                             imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != 'O') {
     failf(data, "Got unexpected imap-server response");
     result = CURLE_FTP_WEIRD_SERVER_REPLY; /* TODO: fix this code */
@@ -857,13 +857,13 @@
 /* For CAPABILITY responses */
 static CURLcode imap_state_capability_resp(struct connectdata *conn,
                                            int imapcode,
                                            imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct imap_conn *imapc = &conn->proto.imapc;
   const char *line = data->state.buffer;
   size_t wordlen;
 
   (void)instate; /* no use for this yet */
 
@@ -944,13 +944,13 @@
 /* For STARTTLS responses */
 static CURLcode imap_state_starttls_resp(struct connectdata *conn,
                                          int imapcode,
                                          imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != 'O') {
     if(data->set.use_ssl != CURLUSESSL_TRY) {
       failf(data, "STARTTLS denied. %c", imapcode);
@@ -968,13 +968,13 @@
 /* For SASL authentication responses */
 static CURLcode imap_state_auth_resp(struct connectdata *conn,
                                      int imapcode,
                                      imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct imap_conn *imapc = &conn->proto.imapc;
   saslprogress progress;
 
   (void)instate; /* no use for this yet */
 
   result = Curl_sasl_continue(&imapc->sasl, conn, imapcode, &progress);
@@ -1002,13 +1002,13 @@
 /* For LOGIN responses */
 static CURLcode imap_state_login_resp(struct connectdata *conn,
                                       int imapcode,
                                       imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != 'O') {
     failf(data, "Access denied. %c", imapcode);
     result = CURLE_LOGIN_DENIED;
@@ -1048,13 +1048,13 @@
 
 /* For SELECT responses */
 static CURLcode imap_state_select_resp(struct connectdata *conn, int imapcode,
                                        imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = conn->data->req.protop;
   struct imap_conn *imapc = &conn->proto.imapc;
   const char *line = data->state.buffer;
   char tmp[20];
 
   (void)instate; /* no use for this yet */
@@ -1095,13 +1095,13 @@
 
 /* For the (first line of the) FETCH responses */
 static CURLcode imap_state_fetch_resp(struct connectdata *conn, int imapcode,
                                       imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct imap_conn *imapc = &conn->proto.imapc;
   struct pingpong *pp = &imapc->pp;
   const char *ptr = data->state.buffer;
   bool parsed = FALSE;
   curl_off_t size = 0;
 
@@ -1208,13 +1208,13 @@
 
 /* For APPEND responses */
 static CURLcode imap_state_append_resp(struct connectdata *conn, int imapcode,
                                        imapstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* No use for this yet */
 
   if(imapcode != '+') {
     result = CURLE_UPLOAD_FAILED;
   }
@@ -1368,18 +1368,18 @@
   while(imapc->state != IMAP_STOP && !result)
     result = Curl_pp_statemach(&imapc->pp, TRUE);
 
   return result;
 }
 
-/* Allocate and initialize the struct IMAP for the current SessionHandle if
+/* Allocate and initialize the struct IMAP for the current Curl_easy if
    required */
 static CURLcode imap_init(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap;
 
   imap = data->req.protop = calloc(sizeof(struct IMAP), 1);
   if(!imap)
     result = CURLE_OUT_OF_MEMORY;
 
@@ -1453,13 +1453,13 @@
  * Input argument is already checked for validity.
  */
 static CURLcode imap_done(struct connectdata *conn, CURLcode status,
                           bool premature)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = data->req.protop;
 
   (void)premature;
 
   if(!imap)
     return CURLE_OK;
@@ -1515,13 +1515,13 @@
  */
 static CURLcode imap_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is IMAP and no proxy */
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = data->req.protop;
   struct imap_conn *imapc = &conn->proto.imapc;
   bool selected = FALSE;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
@@ -1680,13 +1680,13 @@
  */
 static CURLcode imap_regular_transfer(struct connectdata *conn,
                                       bool *dophase_done)
 {
   CURLcode result = CURLE_OK;
   bool connected = FALSE;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Make sure size is unknown at this point */
   data->req.size = -1;
 
   /* Set the progress data */
   Curl_pgrsSetUploadCounter(data, 0);
@@ -1703,13 +1703,13 @@
 
   return result;
 }
 
 static CURLcode imap_setup_connection(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Initialise the IMAP layer */
   CURLcode result = imap_init(conn);
   if(result)
     return result;
 
@@ -1968,13 +1968,13 @@
  *
  */
 static CURLcode imap_parse_url_path(struct connectdata *conn)
 {
   /* The imap struct is already initialised in imap_connect() */
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = data->req.protop;
   const char *begin = data->state.path;
   const char *ptr = begin;
 
   /* See how much of the URL is a valid path and decode it */
   while(imap_is_bchar(*ptr))
@@ -2098,13 +2098,13 @@
  *
  * Parse the custom request.
  */
 static CURLcode imap_parse_custom_request(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct IMAP *imap = data->req.protop;
   const char *custom = data->set.str[STRING_CUSTOMREQUEST];
 
   if(custom) {
     /* URL decode the custom request */
     result = Curl_urldecode(data, custom, 0, &imap->custom, NULL, TRUE);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/imap.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/imap.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/imap.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/imap.h	2016-07-21 06:31:36.000000000 +0800
@@ -46,15 +46,15 @@
   IMAP_APPEND_FINAL,
   IMAP_SEARCH,
   IMAP_LOGOUT,
   IMAP_LAST          /* never used */
 } imapstate;
 
-/* This IMAP struct is used in the SessionHandle. All IMAP data that is
+/* This IMAP struct is used in the Curl_easy. All IMAP data that is
    connection-oriented must be in imap_conn to properly deal with the fact that
-   perhaps the SessionHandle is changed between the times the connection is
+   perhaps the Curl_easy is changed between the times the connection is
    used. */
 struct IMAP {
   curl_pp_transfer transfer;
   char *mailbox;          /* Mailbox to select */
   char *uidvalidity;      /* UIDVALIDITY to check in select */
   char *uid;              /* Message UID to fetch */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/krb5.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/krb5.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/krb5.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/krb5.c	2016-07-21 06:31:36.000000000 +0800
@@ -147,13 +147,13 @@
 {
   int ret = AUTH_OK;
   char *p;
   const char *host = conn->host.name;
   ssize_t nread;
   curl_socklen_t l = sizeof(conn->local_addr);
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result;
   const char *service = data->set.str[STRING_SERVICE_NAME] ?
                         data->set.str[STRING_SERVICE_NAME] :
                         "ftp";
   const char *srv_host = "host";
   gss_buffer_desc input_buffer, output_buffer, _gssresp, *gssresp;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ldap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ldap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ldap.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ldap.c	2016-07-21 06:31:36.000000000 +0800
@@ -189,13 +189,13 @@
   int rc = 0;
   LDAP *server = NULL;
   LDAPURLDesc *ludp = NULL;
   LDAPMessage *ldapmsg = NULL;
   LDAPMessage *entryIterator;
   int num = 0;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   int ldap_proto = LDAP_VERSION3;
   int ldap_ssl = 0;
   char *val_b64 = NULL;
   size_t val_b64_sz = 0;
   curl_off_t dlsize = 0;
 #ifdef LDAP_OPT_NETWORK_TIMEOUT
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/libcurl.plist /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/libcurl.plist
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/libcurl.plist	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/libcurl.plist	2016-07-21 16:56:49.000000000 +0800
@@ -12,24 +12,24 @@
 	<string>curl</string>
 
 	<key>CFBundleIdentifier</key>
 	<string>se.haxx.curl.libcurl</string>
 
 	<key>CFBundleVersion</key>
-	<string>7.49.1</string>
+	<string>7.50.0</string>
 
 	<key>CFBundleName</key>
 	<string>libcurl</string>
 
 	<key>CFBundlePackageType</key>
 	<string>FMWK</string>
 
 	<key>CFBundleSignature</key>
 	<string>????</string>
 
 	<key>CFBundleShortVersionString</key>
-	<string>libcurl 7.49.1</string>
+	<string>libcurl 7.50.0</string>
 
 	<key>CFBundleGetInfoString</key>
-	<string>libcurl.plist 7.49.1</string>
+	<string>libcurl.plist 7.50.0</string>
 </dict>
 </plist>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.m32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.m32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.m32	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.m32	2016-07-21 06:31:36.000000000 +0800
@@ -255,12 +255,16 @@
   DLL_LIBS += -L"$(OPENSSL_LIBPATH)" $(OPENSSL_LIBS)
   ifdef SRP
     ifeq "$(wildcard $(OPENSSL_INCLUDE)/openssl/srp.h)" "$(OPENSSL_INCLUDE)/openssl/srp.h"
       CFLAGS += -DHAVE_OPENSSL_SRP -DUSE_TLS_SRP
     endif
   endif
+else
+ifdef WINSSL
+  DLL_LIBS += -lcrypt32
+endif
 endif
 ifdef ZLIB
   INCLUDES += -I"$(ZLIB_PATH)"
   CFLAGS += -DHAVE_LIBZ -DHAVE_ZLIB_H
   DLL_LIBS += -L"$(ZLIB_PATH)" -lz
 endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc10
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc10	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc10	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /EHsc /DWIN32 /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc11
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc11	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc11	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /EHsc /DWIN32 /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc12
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc12	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc12	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /EHsc /DWIN32 /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc14
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc14	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc14	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /EHsc /DWIN32 /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc6
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc6	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc6	2016-07-21 06:31:36.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /GX /DWIN32 /YX /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc7
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc7	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc7	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /GX /DWIN32 /YX /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc8
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc8	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc8	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /EHsc /DWIN32 /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib bufferoverflowu.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc9
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/Makefile.vc9	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/Makefile.vc9	2016-07-21 16:56:49.000000000 +0800
@@ -112,12 +112,13 @@
 CFLAGS       = /I. /I../include /nologo /W3 /EHsc /DWIN32 /FD /c /DBUILDING_LIBCURL /D_BIND_TO_CURRENT_VCLIBS_VERSION=1
 CFLAGSLIB    = /DCURL_STATICLIB
 LNKDLL       = link.exe /DLL
 LNKLIB       = link.exe /lib
 LFLAGS       = /nologo /machine:$(MACHINE)
 SSLLIBS      = libeay32.lib ssleay32.lib
+WINSSLLIBS   = crypt32.lib
 ZLIBLIBSDLL  = zdll.lib
 ZLIBLIBS     = zlib.lib
 WINLIBS      = ws2_32.lib wldap32.lib advapi32.lib
 CFLAGS       = $(CFLAGS)
 
 CFGSET       = FALSE
@@ -173,13 +174,13 @@
 # release-winssl
 
 !IF "$(CFG)" == "release-winssl"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-zlib
@@ -210,13 +211,13 @@
 # release-winssl-zlib
 
 !IF "$(CFG)" == "release-winssl-zlib"
 TARGET   = $(LIBCURL_STA_LIB_REL)
 DIROBJ   = $(CFG)
 LFLAGSZLIB = "/LIBPATH:$(ZLIB_PATH)"
-LNK      = $(LNKLIB) $(LFLAGSZLIB) /out:$(DIROBJ)\$(TARGET)
+LNK      = $(LNKLIB) $(LFLAGSZLIB) $(WINSSLLIBS) /out:$(DIROBJ)\$(TARGET)
 CC       = $(CCNODBG) $(RTLIB) $(CFLAGSWINSSL) $(CFLAGSZLIB) $(CFLAGSLIB)
 CFGSET   = TRUE
 !ENDIF
 
 ######################
 # release-ssl-ssh2-zlib
@@ -641,12 +642,13 @@
 	$(DIROBJ)\timeval.obj \
 	$(DIROBJ)\transfer.obj \
 	$(DIROBJ)\url.obj \
 	$(DIROBJ)\version.obj \
 	$(DIROBJ)\warnless.obj \
 	$(DIROBJ)\wildcard.obj \
+        $(DIROBJ)\x509asn1.obj \
 	$(RESOURCE)
 
 all : $(TARGET)
 
 $(TARGET): $(X_OBJS)
 	$(LNK) $(LFLAGS) $(X_OBJS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/memdebug.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/memdebug.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/memdebug.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/memdebug.c	2016-07-21 06:31:36.000000000 +0800
@@ -116,13 +116,13 @@
     if(logname && *logname)
       logfile = fopen(logname, FOPEN_WRITETEXT);
     else
       logfile = stderr;
 #ifdef MEMDEBUG_LOG_SYNC
     /* Flush the log file after every line so the log isn't lost in a crash */
-    setvbuf(logfile, (char *)NULL, _IOLBF, 0);
+    setbuf(logfile, (char *)NULL);
 #endif
   }
 }
 
 /* This function sets the number of malloc() calls that should return
    successfully! */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/multi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/multi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/multi.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/multi.c	2016-07-21 06:31:36.000000000 +0800
@@ -58,21 +58,21 @@
 
 #define CURL_CONNECTION_HASH_SIZE 97
 
 #define CURL_MULTI_HANDLE 0x000bab1e
 
 #define GOOD_MULTI_HANDLE(x) \
-  ((x) && (((struct Curl_multi *)(x))->type == CURL_MULTI_HANDLE))
+  ((x) && (x)->type == CURL_MULTI_HANDLE)
 
 static void singlesocket(struct Curl_multi *multi,
-                         struct SessionHandle *data);
+                         struct Curl_easy *data);
 static int update_timer(struct Curl_multi *multi);
 
 static CURLMcode add_next_timeout(struct timeval now,
                                   struct Curl_multi *multi,
-                                  struct SessionHandle *d);
+                                  struct Curl_easy *d);
 static CURLMcode multi_timeout(struct Curl_multi *multi,
                                long *timeout_ms);
 
 #ifdef DEBUGBUILD
 static const char * const statename[]={
   "INIT",
@@ -97,16 +97,16 @@
 };
 #endif
 
 static void multi_freetimeout(void *a, void *b);
 
 /* function pointer called once when switching TO a state */
-typedef void (*init_multistate_func)(struct SessionHandle *data);
+typedef void (*init_multistate_func)(struct Curl_easy *data);
 
 /* always use this function to change state, to make debugging easier */
-static void mstate(struct SessionHandle *data, CURLMstate state
+static void mstate(struct Curl_easy *data, CURLMstate state
 #ifdef DEBUGBUILD
                    , int lineno
 #endif
 )
 {
   CURLMstate oldstate = data->mstate;
@@ -159,13 +159,13 @@
 
 /*
  * We add one of these structs to the sockhash for a particular socket
  */
 
 struct Curl_sh_entry {
-  struct SessionHandle *easy;
+  struct Curl_easy *easy;
   int action;  /* what action READ/WRITE this socket waits for */
   curl_socket_t socket; /* mainly to ease debugging */
   void *socketp; /* settable by users with curl_multi_assign() */
 };
 /* bits for 'action' having no bits means this socket is not expecting any
    action */
@@ -182,13 +182,13 @@
   return NULL;
 }
 
 /* make sure this socket is present in the hash for this handle */
 static struct Curl_sh_entry *sh_addentry(struct curl_hash *sh,
                                          curl_socket_t s,
-                                         struct SessionHandle *data)
+                                         struct Curl_easy *data)
 {
   struct Curl_sh_entry *there = sh_getentry(sh, s);
   struct Curl_sh_entry *check;
 
   if(there)
     /* it is present, return fine */
@@ -331,13 +331,13 @@
   multi->closure_handle->state.conn_cache = &multi->conn_cache;
 
   multi->max_pipeline_length = 5;
 
   /* -1 means it not set by user, use the default value */
   multi->maxconnects = -1;
-  return (CURLM *) multi;
+  return multi;
 
   error:
 
   Curl_hash_destroy(&multi->sockhash);
   Curl_hash_destroy(&multi->hostcache);
   Curl_conncache_destroy(&multi->conn_cache);
@@ -347,31 +347,29 @@
   Curl_llist_destroy(multi->pending, NULL);
 
   free(multi);
   return NULL;
 }
 
-CURLM *curl_multi_init(void)
+struct Curl_multi *curl_multi_init(void)
 {
   return Curl_multi_handle(CURL_SOCKET_HASH_TABLE_SIZE,
                            CURL_CONNECTION_HASH_SIZE);
 }
 
-CURLMcode curl_multi_add_handle(CURLM *multi_handle,
-                                CURL *easy_handle)
+CURLMcode curl_multi_add_handle(struct Curl_multi *multi,
+                                struct Curl_easy *data)
 {
   struct curl_llist *timeoutlist;
-  struct Curl_multi *multi = (struct Curl_multi *)multi_handle;
-  struct SessionHandle *data = (struct SessionHandle *)easy_handle;
 
   /* First, make some basic checks that the CURLM handle is a good handle */
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   /* Verify that we got a somewhat good easy handle too */
-  if(!GOOD_EASY_HANDLE(easy_handle))
+  if(!GOOD_EASY_HANDLE(data))
     return CURLM_BAD_EASY_HANDLE;
 
   /* Prevent users from adding same easy handle more than once and prevent
      adding to more than one multi stack */
   if(data->multi)
     return CURLM_ADDED_ALREADY;
@@ -414,32 +412,32 @@
   }
 
   /* Point to the multi's connection cache */
   data->state.conn_cache = &multi->conn_cache;
 
   /* This adds the new entry at the 'end' of the doubly-linked circular
-     list of SessionHandle structs to try and maintain a FIFO queue so
+     list of Curl_easy structs to try and maintain a FIFO queue so
      the pipelined requests are in order. */
 
   /* We add this new entry last in the list. */
 
   data->next = NULL; /* end of the line */
   if(multi->easyp) {
-    struct SessionHandle *last = multi->easylp;
+    struct Curl_easy *last = multi->easylp;
     last->next = data;
     data->prev = last;
     multi->easylp = data; /* the new last node */
   }
   else {
     /* first node, make prev NULL! */
     data->prev = NULL;
     multi->easylp = multi->easyp = data; /* both first and last */
   }
 
-  /* make the SessionHandle refer back to this multi handle */
-  data->multi = multi_handle;
+  /* make the Curl_easy refer back to this multi handle */
+  data->multi = multi;
 
   /* Set the timeout for this handle to expire really soon so that it will
      be taken care of even when this handle is added in the midst of operation
      when only the curl_multi_socket() API is used. During that flow, only
      sockets that time-out or have actions will be dealt with. Since this
      handle has no action yet, we make sure it times out to get things to
@@ -484,13 +482,13 @@
 }
 #endif
 
 /* Mark the connection as 'idle', or close it if the cache is full.
    Returns TRUE if the connection is kept, or FALSE if it was closed. */
 static bool
-ConnectionDone(struct SessionHandle *data, struct connectdata *conn)
+ConnectionDone(struct Curl_easy *data, struct connectdata *conn)
 {
   /* data->multi->maxconnects can be negative, deal with it. */
   size_t maxconnects =
     (data->multi->maxconnects < 0) ? data->multi->num_easy * 4:
     data->multi->maxconnects;
   struct connectdata *conn_candidate = NULL;
@@ -520,13 +518,13 @@
                           CURLcode status,  /* an error if this is called
                                                after an error was detected */
                           bool premature)
 {
   CURLcode result;
   struct connectdata *conn;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
 
   DEBUGASSERT(*connp);
 
   conn = *connp;
   data = conn->data;
 
@@ -642,28 +640,26 @@
                  */
   Curl_free_request_state(data);
 
   return result;
 }
 
-CURLMcode curl_multi_remove_handle(CURLM *multi_handle,
-                                   CURL *curl_handle)
+CURLMcode curl_multi_remove_handle(struct Curl_multi *multi,
+                                   struct Curl_easy *data)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-  struct SessionHandle *easy = curl_handle;
-  struct SessionHandle *data = easy;
+  struct Curl_easy *easy = data;
   bool premature;
   bool easy_owns_conn;
   struct curl_llist_element *e;
 
   /* First, make some basic checks that the CURLM handle is a good handle */
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   /* Verify that we got a somewhat good easy handle too */
-  if(!GOOD_EASY_HANDLE(curl_handle))
+  if(!GOOD_EASY_HANDLE(data))
     return CURLM_BAD_EASY_HANDLE;
 
   /* Prevent users from trying to remove same easy handle more than once */
   if(!data->multi)
     return CURLM_OK; /* it is already removed so let's say it is fine! */
 
@@ -788,13 +784,13 @@
 /* Return TRUE if the application asked for a certain set of pipelining */
 bool Curl_pipeline_wanted(const struct Curl_multi *multi, int bits)
 {
   return (multi && (multi->pipelining & bits)) ? TRUE : FALSE;
 }
 
-void Curl_multi_handlePipeBreak(struct SessionHandle *data)
+void Curl_multi_handlePipeBreak(struct Curl_easy *data)
 {
   data->easy_conn = NULL;
 }
 
 static int waitconnect_getsock(struct connectdata *conn,
                                curl_socket_t *sock,
@@ -841,13 +837,13 @@
   if(conn && conn->handler->domore_getsock)
     return conn->handler->domore_getsock(conn, socks, numsocks);
   return GETSOCK_BLANK;
 }
 
 /* returns bitmapped flags for this handle and its sockets */
-static int multi_getsock(struct SessionHandle *data,
+static int multi_getsock(struct Curl_easy *data,
                          curl_socket_t *socks, /* points to numsocks number
                                                   of sockets */
                          int numsocks)
 {
   /* If the pipe broke, or if there's no connection left for this easy handle,
      then we MUST bail out now with no bitmask set. The no connection case can
@@ -907,21 +903,20 @@
   case CURLM_STATE_WAITPERFORM:
     return Curl_single_getsock(data->easy_conn, socks, numsocks);
   }
 
 }
 
-CURLMcode curl_multi_fdset(CURLM *multi_handle,
+CURLMcode curl_multi_fdset(struct Curl_multi *multi,
                            fd_set *read_fd_set, fd_set *write_fd_set,
                            fd_set *exc_fd_set, int *max_fd)
 {
   /* Scan through all the easy handles to get the file descriptors set.
      Some easy handles may not have connected to the remote host yet,
      and then we must make sure that is done. */
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   int this_max_fd=-1;
   curl_socket_t sockbunch[MAX_SOCKSPEREASYHANDLE];
   int bitmap;
   int i;
   (void)exc_fd_set; /* not used */
 
@@ -957,20 +952,19 @@
 
   *max_fd = this_max_fd;
 
   return CURLM_OK;
 }
 
-CURLMcode curl_multi_wait(CURLM *multi_handle,
+CURLMcode curl_multi_wait(struct Curl_multi *multi,
                           struct curl_waitfd extra_fds[],
                           unsigned int extra_nfds,
                           int timeout_ms,
                           int *ret)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   curl_socket_t sockbunch[MAX_SOCKSPEREASYHANDLE];
   int bitmap;
   unsigned int i;
   unsigned int nfds = 0;
   unsigned int curlfds;
   struct pollfd *ufds = NULL;
@@ -1127,13 +1121,13 @@
   if(clear)
     multi->recheckstate = FALSE;
   return retval;
 }
 
 CURLMcode Curl_multi_add_perform(struct Curl_multi *multi,
-                                 struct SessionHandle *data,
+                                 struct Curl_easy *data,
                                  struct connectdata *conn)
 {
   CURLMcode rc;
 
   rc = curl_multi_add_handle(multi, data);
   if(!rc) {
@@ -1152,13 +1146,13 @@
 }
 
 static CURLcode multi_reconnect_request(struct connectdata **connp)
 {
   CURLcode result = CURLE_OK;
   struct connectdata *conn = *connp;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* This was a re-use of a connection and we got a write error in the
    * DO-phase. Then we DISCONNECT this connection and have another attempt to
    * CONNECT and then DO again! The retry cannot possibly find another
    * connection to re-use, since we only keep one possible connection for
    * each.  */
@@ -1220,13 +1214,13 @@
 }
 
 static CURLcode multi_do(struct connectdata **connp, bool *done)
 {
   CURLcode result=CURLE_OK;
   struct connectdata *conn = *connp;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(conn->handler->do_it) {
     /* generic protocol-specific function pointer set in curl_connect() */
     result = conn->handler->do_it(conn, done);
 
     /* This was formerly done in transfer.c, but we better do it here */
@@ -1283,13 +1277,13 @@
 
   return result;
 }
 
 static CURLMcode multi_runsingle(struct Curl_multi *multi,
                                  struct timeval now,
-                                 struct SessionHandle *data)
+                                 struct Curl_easy *data)
 {
   struct Curl_message *msg = NULL;
   bool connected;
   bool async;
   bool protocol_connect = FALSE;
   bool dophase_done = FALSE;
@@ -2099,16 +2093,15 @@
 
 
   return rc;
 }
 
 
-CURLMcode curl_multi_perform(CURLM *multi_handle, int *running_handles)
+CURLMcode curl_multi_perform(struct Curl_multi *multi, int *running_handles)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   CURLMcode returncode=CURLM_OK;
   struct Curl_tree *t;
   struct timeval now = Curl_tvnow();
 
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
@@ -2169,17 +2162,16 @@
     sigpipe_restore(&pipe_st);
 
     conn = Curl_conncache_find_first_connection(&multi->conn_cache);
   }
 }
 
-CURLMcode curl_multi_cleanup(CURLM *multi_handle)
+CURLMcode curl_multi_cleanup(struct Curl_multi *multi)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-  struct SessionHandle *data;
-  struct SessionHandle *nextdata;
+  struct Curl_easy *data;
+  struct Curl_easy *nextdata;
 
   if(GOOD_MULTI_HANDLE(multi)) {
     bool restore_pipe = FALSE;
     SIGPIPE_VARIABLE(pipe_st);
 
     multi->type = 0; /* not good anymore */
@@ -2244,15 +2236,14 @@
  * figure out if a transfer has ended. We MUST make this function as fast as
  * possible as it will be polled frequently and we MUST NOT scan any lists in
  * here to figure out things. We must scale fine to thousands of handles and
  * beyond. The current design is fully O(1).
  */
 
-CURLMsg *curl_multi_info_read(CURLM *multi_handle, int *msgs_in_queue)
+CURLMsg *curl_multi_info_read(struct Curl_multi *multi, int *msgs_in_queue)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
   struct Curl_message *msg;
 
   *msgs_in_queue = 0; /* default to none */
 
   if(GOOD_MULTI_HANDLE(multi) && Curl_llist_count(multi->msglist)) {
     /* there is one or more messages in the list */
@@ -2277,13 +2268,13 @@
 /*
  * singlesocket() checks what sockets we deal with and their "action state"
  * and if we have a different state in any of those sockets from last time we
  * call the callback accordingly.
  */
 static void singlesocket(struct Curl_multi *multi,
-                         struct SessionHandle *data)
+                         struct Curl_easy *data)
 {
   curl_socket_t socks[MAX_SOCKSPEREASYHANDLE];
   int i;
   struct Curl_sh_entry *entry;
   curl_socket_t s;
   int num;
@@ -2449,24 +2440,24 @@
 
 
 
 /*
  * add_next_timeout()
  *
- * Each SessionHandle has a list of timeouts. The add_next_timeout() is called
+ * Each Curl_easy has a list of timeouts. The add_next_timeout() is called
  * when it has just been removed from the splay tree because the timeout has
  * expired. This function is then to advance in the list to pick the next
  * timeout to use (skip the already expired ones) and add this node back to
  * the splay tree again.
  *
  * The splay tree only has each sessionhandle as a single node and the nearest
  * timeout is used to sort it on.
  */
 static CURLMcode add_next_timeout(struct timeval now,
                                   struct Curl_multi *multi,
-                                  struct SessionHandle *d)
+                                  struct Curl_easy *d)
 {
   struct timeval *tv = &d->state.expiretime;
   struct curl_llist *list = d->state.timeoutlist;
   struct curl_llist_element *e;
 
   /* move over the timeout list for this specific handle and remove all
@@ -2508,13 +2499,13 @@
                               bool checkall,
                               curl_socket_t s,
                               int ev_bitmask,
                               int *running_handles)
 {
   CURLMcode result = CURLM_OK;
-  struct SessionHandle *data = NULL;
+  struct Curl_easy *data = NULL;
   struct Curl_tree *t;
   struct timeval now = Curl_tvnow();
 
   if(checkall) {
     /* *perform() deals with running_handles on its own */
     result = curl_multi_perform(multi, running_handles);
@@ -2636,16 +2627,15 @@
 
   *running_handles = multi->num_alive;
   return result;
 }
 
 #undef curl_multi_setopt
-CURLMcode curl_multi_setopt(CURLM *multi_handle,
+CURLMcode curl_multi_setopt(struct Curl_multi *multi,
                             CURLMoption option, ...)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
   CURLMcode res = CURLM_OK;
   va_list param;
 
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
@@ -2707,39 +2697,38 @@
   return res;
 }
 
 /* we define curl_multi_socket() in the public multi.h header */
 #undef curl_multi_socket
 
-CURLMcode curl_multi_socket(CURLM *multi_handle, curl_socket_t s,
+CURLMcode curl_multi_socket(struct Curl_multi *multi, curl_socket_t s,
                             int *running_handles)
 {
-  CURLMcode result = multi_socket((struct Curl_multi *)multi_handle, FALSE, s,
-                                  0, running_handles);
+  CURLMcode result = multi_socket(multi, FALSE, s, 0, running_handles);
   if(CURLM_OK >= result)
-    update_timer((struct Curl_multi *)multi_handle);
+    update_timer(multi);
   return result;
 }
 
-CURLMcode curl_multi_socket_action(CURLM *multi_handle, curl_socket_t s,
+CURLMcode curl_multi_socket_action(struct Curl_multi *multi, curl_socket_t s,
                                    int ev_bitmask, int *running_handles)
 {
-  CURLMcode result = multi_socket((struct Curl_multi *)multi_handle, FALSE, s,
+  CURLMcode result = multi_socket(multi, FALSE, s,
                                   ev_bitmask, running_handles);
   if(CURLM_OK >= result)
-    update_timer((struct Curl_multi *)multi_handle);
+    update_timer(multi);
   return result;
 }
 
-CURLMcode curl_multi_socket_all(CURLM *multi_handle, int *running_handles)
+CURLMcode curl_multi_socket_all(struct Curl_multi *multi, int *running_handles)
 
 {
-  CURLMcode result = multi_socket((struct Curl_multi *)multi_handle,
-                                  TRUE, CURL_SOCKET_BAD, 0, running_handles);
+  CURLMcode result = multi_socket(multi, TRUE, CURL_SOCKET_BAD, 0,
+                                  running_handles);
   if(CURLM_OK >= result)
-    update_timer((struct Curl_multi *)multi_handle);
+    update_timer(multi);
   return result;
 }
 
 static CURLMcode multi_timeout(struct Curl_multi *multi,
                                long *timeout_ms)
 {
@@ -2772,17 +2761,15 @@
   else
     *timeout_ms = -1;
 
   return CURLM_OK;
 }
 
-CURLMcode curl_multi_timeout(CURLM *multi_handle,
+CURLMcode curl_multi_timeout(struct Curl_multi *multi,
                              long *timeout_ms)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-
   /* First, make some basic checks that the CURLM handle is a good handle */
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   return multi_timeout(multi, timeout_ms);
 }
@@ -2803,13 +2790,13 @@
   if(timeout_ms < 0) {
     static const struct timeval none={0, 0};
     if(Curl_splaycomparekeys(none, multi->timer_lastcall)) {
       multi->timer_lastcall = none;
       /* there's no timeout now but there was one previously, tell the app to
          disable it */
-      return multi->timer_cb((CURLM*)multi, -1, multi->timer_userp);
+      return multi->timer_cb(multi, -1, multi->timer_userp);
     }
     return 0;
   }
 
   /* When multi_timeout() is done, multi->timetree points to the node with the
    * timeout we got the (relative) time-out time for. We can thus easily check
@@ -2817,13 +2804,13 @@
    * avoid calling the callback again. */
   if(Curl_splaycomparekeys(multi->timetree->key, multi->timer_lastcall) == 0)
     return 0;
 
   multi->timer_lastcall = multi->timetree->key;
 
-  return multi->timer_cb((CURLM*)multi, timeout_ms, multi->timer_userp);
+  return multi->timer_cb(multi, timeout_ms, multi->timer_userp);
 }
 
 /*
  * multi_freetimeout()
  *
  * Callback used by the llist system when a single timeout list entry is
@@ -2889,13 +2876,13 @@
  *
  * Note that the timeout will be added to a queue of timeouts if it defines a
  * moment in time that is later than the current head of queue.
  *
  * Pass zero to clear all timeout values for this handle.
 */
-void Curl_expire(struct SessionHandle *data, long milli)
+void Curl_expire(struct Curl_easy *data, long milli)
 {
   struct Curl_multi *multi = data->multi;
   struct timeval *nowp = &data->state.expiretime;
   int rc;
 
   /* this is only interesting while there is still an associated multi struct
@@ -2983,13 +2970,13 @@
  *
  * Use this function if the code logic risks calling this function many times
  * or if there's no particular conditional wait in the code for this specific
  * time-out period to expire.
  *
  */
-void Curl_expire_latest(struct SessionHandle *data, long milli)
+void Curl_expire_latest(struct Curl_easy *data, long milli)
 {
   struct timeval *expire = &data->state.expiretime;
 
   struct timeval set;
 
   set = Curl_tvnow();
@@ -3012,17 +2999,16 @@
   }
 
   /* Just add the timeout like normal */
   Curl_expire(data, milli);
 }
 
-CURLMcode curl_multi_assign(CURLM *multi_handle,
-                            curl_socket_t s, void *hashp)
+CURLMcode curl_multi_assign(struct Curl_multi *multi, curl_socket_t s,
+                            void *hashp)
 {
   struct Curl_sh_entry *there = NULL;
-  struct Curl_multi *multi = (struct Curl_multi *)multi_handle;
 
   there = sh_getentry(&multi->sockhash, s);
 
   if(!there)
     return CURLM_BAD_SOCKET;
 
@@ -3063,13 +3049,13 @@
 
 void Curl_multi_process_pending_handles(struct Curl_multi *multi)
 {
   struct curl_llist_element *e = multi->pending->head;
 
   while(e) {
-    struct SessionHandle *data = e->ptr;
+    struct Curl_easy *data = e->ptr;
     struct curl_llist_element *next = e->next;
 
     if(data->mstate == CURLM_STATE_CONNECT_PEND) {
       multistate(data, CURLM_STATE_CONNECT);
 
       /* Remove this node from the list */
@@ -3081,16 +3067,15 @@
 
     e = next; /* operate on next handle */
   }
 }
 
 #ifdef DEBUGBUILD
-void Curl_multi_dump(const struct Curl_multi *multi_handle)
+void Curl_multi_dump(struct Curl_multi *multi)
 {
-  struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   int i;
   fprintf(stderr, "* Multi status: %d handles, %d alive\n",
           multi->num_easy, multi->num_alive);
   for(data=multi->easyp; data; data = data->next) {
     if(data->mstate < CURLM_STATE_COMPLETED) {
       /* only display handles that are not completed */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/multihandle.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/multihandle.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/multihandle.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/multihandle.h	2016-07-21 06:31:36.000000000 +0800
@@ -68,22 +68,22 @@
 struct Curl_multi {
   /* First a simple identifier to easier detect if a user mix up
      this multi handle with an easy handle. Set this to CURL_MULTI_HANDLE. */
   long type;
 
   /* We have a doubly-linked circular list with easy handles */
-  struct SessionHandle *easyp;
-  struct SessionHandle *easylp; /* last node */
+  struct Curl_easy *easyp;
+  struct Curl_easy *easylp; /* last node */
 
   int num_easy; /* amount of entries in the linked list above. */
   int num_alive; /* amount of easy handles that are added but have not yet
                     reached COMPLETE state */
 
   struct curl_llist *msglist; /* a list of messages from completed transfers */
 
-  struct curl_llist *pending; /* SessionHandles that are in the
+  struct curl_llist *pending; /* Curl_easys that are in the
                                  CURLM_STATE_CONNECT_PEND state */
 
   /* callback function and user data pointer for the *socket() API */
   curl_socket_callback socket_cb;
   void *socket_userp;
 
@@ -110,13 +110,13 @@
 
   /* Shared connection cache (bundles)*/
   struct conncache conn_cache;
 
   /* This handle will be used for closing the cached connections in
      curl_multi_cleanup() */
-  struct SessionHandle *closure_handle;
+  struct Curl_easy *closure_handle;
 
   long maxconnects; /* if >0, a fixed limit of the maximum number of entries
                        we're allowed to grow the connection cache to */
 
   long max_host_connections; /* if >0, a fixed limit of the maximum number
                                 of connections per host */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/multiif.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/multiif.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/multiif.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/multiif.h	2016-07-21 06:31:36.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -22,16 +22,16 @@
  *
  ***************************************************************************/
 
 /*
  * Prototypes for library-wide functions provided by multi.c
  */
-void Curl_expire(struct SessionHandle *data, long milli);
-void Curl_expire_latest(struct SessionHandle *data, long milli);
+void Curl_expire(struct Curl_easy *data, long milli);
+void Curl_expire_latest(struct Curl_easy *data, long milli);
 bool Curl_pipeline_wanted(const struct Curl_multi* multi, int bits);
-void Curl_multi_handlePipeBreak(struct SessionHandle *data);
+void Curl_multi_handlePipeBreak(struct Curl_easy *data);
 
 /* Internal version of curl_multi_init() accepts size parameters for the
    socket and connection hashes */
 struct Curl_multi *Curl_multi_handle(int hashsize, int chashsize);
 
 /* the write bits start at bit 16 for the *getsock() bitmap */
@@ -48,13 +48,13 @@
 #ifdef DEBUGBUILD
  /*
   * Curl_multi_dump is not a stable public function, this is only meant to
   * allow easier tracking of the internal handle's state and what sockets
   * they use. Only for research and development DEBUGBUILD enabled builds.
   */
-void Curl_multi_dump(const struct Curl_multi *multi_handle);
+void Curl_multi_dump(struct Curl_multi *multi);
 #endif
 
 void Curl_multi_process_pending_handles(struct Curl_multi *multi);
 
 /* Return the value of the CURLMOPT_MAX_HOST_CONNECTIONS option */
 size_t Curl_multi_max_host_connections(struct Curl_multi *multi);
@@ -89,9 +89,9 @@
 void Curl_multi_closed(struct connectdata *conn, curl_socket_t s);
 
 /*
  * Add a handle and move it into PERFORM state at once. For pushed streams.
  */
 CURLMcode Curl_multi_add_perform(struct Curl_multi *multi,
-                                 struct SessionHandle *data,
+                                 struct Curl_easy *data,
                                  struct connectdata *conn);
 #endif /* HEADER_CURL_MULTIIF_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/non-ascii.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/non-ascii.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/non-ascii.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/non-ascii.c	2016-07-21 06:31:36.000000000 +0800
@@ -48,13 +48,13 @@
 #endif /* HAVE_ICONV */
 
 /*
  * Curl_convert_clone() returns a malloced copy of the source string (if
  * returning CURLE_OK), with the data converted to network format.
  */
-CURLcode Curl_convert_clone(struct SessionHandle *data,
+CURLcode Curl_convert_clone(struct Curl_easy *data,
                            const char *indata,
                            size_t insize,
                            char **outbuf)
 {
   char *convbuf;
   CURLcode result;
@@ -76,13 +76,13 @@
 }
 
 /*
  * Curl_convert_to_network() is an internal function for performing ASCII
  * conversions on non-ASCII platforms. It convers the buffer _in place_.
  */
-CURLcode Curl_convert_to_network(struct SessionHandle *data,
+CURLcode Curl_convert_to_network(struct Curl_easy *data,
                                  char *buffer, size_t length)
 {
   if(data->set.convtonetwork) {
     /* use translation callback */
     CURLcode result = data->set.convtonetwork(buffer, length);
     if(result) {
@@ -136,13 +136,13 @@
 }
 
 /*
  * Curl_convert_from_network() is an internal function for performing ASCII
  * conversions on non-ASCII platforms. It convers the buffer _in place_.
  */
-CURLcode Curl_convert_from_network(struct SessionHandle *data,
+CURLcode Curl_convert_from_network(struct Curl_easy *data,
                                    char *buffer, size_t length)
 {
   if(data->set.convfromnetwork) {
     /* use translation callback */
     CURLcode result = data->set.convfromnetwork(buffer, length);
     if(result) {
@@ -196,13 +196,13 @@
 }
 
 /*
  * Curl_convert_from_utf8() is an internal function for performing UTF-8
  * conversions on non-ASCII platforms.
  */
-CURLcode Curl_convert_from_utf8(struct SessionHandle *data,
+CURLcode Curl_convert_from_utf8(struct Curl_easy *data,
                                 char *buffer, size_t length)
 {
   if(data->set.convfromutf8) {
     /* use translation callback */
     CURLcode result = data->set.convfromutf8(buffer, length);
     if(result) {
@@ -258,44 +258,44 @@
   }
 
   return CURLE_OK;
 }
 
 /*
- * Init conversion stuff for a SessionHandle
+ * Init conversion stuff for a Curl_easy
  */
-void Curl_convert_init(struct SessionHandle *data)
+void Curl_convert_init(struct Curl_easy *data)
 {
 #if defined(CURL_DOES_CONVERSIONS) && defined(HAVE_ICONV)
   /* conversion descriptors for iconv calls */
   data->outbound_cd = (iconv_t)-1;
   data->inbound_cd  = (iconv_t)-1;
   data->utf8_cd     = (iconv_t)-1;
 #else
   (void)data;
 #endif /* CURL_DOES_CONVERSIONS && HAVE_ICONV */
 }
 
 /*
- * Setup conversion stuff for a SessionHandle
+ * Setup conversion stuff for a Curl_easy
  */
-void Curl_convert_setup(struct SessionHandle *data)
+void Curl_convert_setup(struct Curl_easy *data)
 {
   data->inbound_cd = iconv_open(CURL_ICONV_CODESET_OF_HOST,
                                 CURL_ICONV_CODESET_OF_NETWORK);
   data->outbound_cd = iconv_open(CURL_ICONV_CODESET_OF_NETWORK,
                                  CURL_ICONV_CODESET_OF_HOST);
   data->utf8_cd = iconv_open(CURL_ICONV_CODESET_OF_HOST,
                              CURL_ICONV_CODESET_FOR_UTF8);
 }
 
 /*
- * Close conversion stuff for a SessionHandle
+ * Close conversion stuff for a Curl_easy
  */
 
-void Curl_convert_close(struct SessionHandle *data)
+void Curl_convert_close(struct Curl_easy *data)
 {
 #ifdef HAVE_ICONV
   /* close iconv conversion descriptors */
   if(data->inbound_cd != (iconv_t)-1) {
     iconv_close(data->inbound_cd);
   }
@@ -311,13 +311,13 @@
 }
 
 /*
  * Curl_convert_form() is used from http.c, this converts any form items that
    need to be sent in the network encoding.  Returns CURLE_OK on success.
  */
-CURLcode Curl_convert_form(struct SessionHandle *data, struct FormData *form)
+CURLcode Curl_convert_form(struct Curl_easy *data, struct FormData *form)
 {
   CURLcode result;
 
   if(!data)
     return CURLE_BAD_FUNCTION_ARGUMENT;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/non-ascii.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/non-ascii.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/non-ascii.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/non-ascii.h	2016-07-21 06:31:36.000000000 +0800
@@ -30,28 +30,28 @@
 /*
  * Curl_convert_clone() returns a malloced copy of the source string (if
  * returning CURLE_OK), with the data converted to network format.
  *
  * If no conversion was needed *outbuf may be NULL.
  */
-CURLcode Curl_convert_clone(struct SessionHandle *data,
+CURLcode Curl_convert_clone(struct Curl_easy *data,
                             const char *indata,
                             size_t insize,
                             char **outbuf);
 
-void Curl_convert_init(struct SessionHandle *data);
-void Curl_convert_setup(struct SessionHandle *data);
-void Curl_convert_close(struct SessionHandle *data);
+void Curl_convert_init(struct Curl_easy *data);
+void Curl_convert_setup(struct Curl_easy *data);
+void Curl_convert_close(struct Curl_easy *data);
 
-CURLcode Curl_convert_to_network(struct SessionHandle *data,
+CURLcode Curl_convert_to_network(struct Curl_easy *data,
                                  char *buffer, size_t length);
-CURLcode Curl_convert_from_network(struct SessionHandle *data,
+CURLcode Curl_convert_from_network(struct Curl_easy *data,
                                  char *buffer, size_t length);
-CURLcode Curl_convert_from_utf8(struct SessionHandle *data,
+CURLcode Curl_convert_from_utf8(struct Curl_easy *data,
                                  char *buffer, size_t length);
-CURLcode Curl_convert_form(struct SessionHandle *data, struct FormData *form);
+CURLcode Curl_convert_form(struct Curl_easy *data, struct FormData *form);
 #else
 #define Curl_convert_clone(a,b,c,d) ((void)a, CURLE_OK)
 #define Curl_convert_init(x) Curl_nop_stmt
 #define Curl_convert_setup(x) Curl_nop_stmt
 #define Curl_convert_close(x) Curl_nop_stmt
 #define Curl_convert_to_network(a,b,c) ((void)a, CURLE_OK)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/openldap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/openldap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/openldap.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/openldap.c	2016-07-21 06:31:36.000000000 +0800
@@ -147,13 +147,13 @@
 } ldapreqinfo;
 
 static CURLcode ldap_setup_connection(struct connectdata *conn)
 {
   ldapconninfo *li;
   LDAPURLDesc *lud;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   int rc, proto;
   CURLcode status;
 
   rc = ldap_url_parse(data->change.url, &lud);
   if(rc != LDAP_URL_SUCCESS) {
     const char *msg = "url parsing problem";
@@ -185,13 +185,13 @@
 static Sockbuf_IO ldapsb_tls;
 #endif
 
 static CURLcode ldap_connect(struct connectdata *conn, bool *done)
 {
   ldapconninfo *li = conn->proto.generic;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int rc, proto = LDAP_VERSION3;
   char hosturl[1024];
   char *ptr;
 
   (void)done;
 
@@ -223,13 +223,13 @@
   return CURLE_OK;
 }
 
 static CURLcode ldap_connecting(struct connectdata *conn, bool *done)
 {
   ldapconninfo *li = conn->proto.generic;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   LDAPMessage *msg = NULL;
   struct timeval tv = {0, 1}, *tvp;
   int rc, err;
   char *info = NULL;
 
 #ifdef USE_SSL
@@ -349,13 +349,13 @@
   ldapconninfo *li = conn->proto.generic;
   ldapreqinfo *lr;
   CURLcode status = CURLE_OK;
   int rc = 0;
   LDAPURLDesc *ludp = NULL;
   int msgid;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
 
   connkeep(conn, "OpenLDAP do");
 
   infof(data, "LDAP local: %s\n", data->change.url);
 
   rc = ldap_url_parse(data->change.url, &ludp);
@@ -412,13 +412,13 @@
 }
 
 static ssize_t ldap_recv(struct connectdata *conn, int sockindex, char *buf,
                          size_t len, CURLcode *err)
 {
   ldapconninfo *li = conn->proto.generic;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   ldapreqinfo *lr = data->req.protop;
   int rc, ret;
   LDAPMessage *msg = NULL;
   LDAPMessage *ent;
   BerElement *ber = NULL;
   struct timeval tv = {0, 1};
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pingpong.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pingpong.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pingpong.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pingpong.c	2016-07-21 06:31:36.000000000 +0800
@@ -44,13 +44,13 @@
 
 /* Returns timeout in ms. 0 or negative number means the timeout has already
    triggered */
 long Curl_pp_state_timeout(struct pingpong *pp)
 {
   struct connectdata *conn = pp->conn;
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   long timeout_ms; /* in milliseconds */
   long timeout2_ms; /* in milliseconds */
   long response_time= (data->set.server_response_timeout)?
     data->set.server_response_timeout: pp->response_time;
 
   /* if CURLOPT_SERVER_RESPONSE_TIMEOUT is set, use that to determine
@@ -82,13 +82,13 @@
 {
   struct connectdata *conn = pp->conn;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   int rc;
   long interval_ms;
   long timeout_ms = Curl_pp_state_timeout(pp);
-  struct SessionHandle *data=conn->data;
+  struct Curl_easy *data=conn->data;
   CURLcode result = CURLE_OK;
 
   if(timeout_ms <=0) {
     failf(data, "server response timeout");
     return CURLE_OPERATION_TIMEDOUT; /* already too little time */
   }
@@ -162,13 +162,13 @@
   ssize_t bytes_written;
   size_t write_len;
   char *fmt_crlf;
   char *s;
   CURLcode result;
   struct connectdata *conn = pp->conn;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
 #ifdef HAVE_GSSAPI
   enum protection_level data_sec = conn->data_prot;
 #endif
 
   DEBUGASSERT(pp->sendleft == 0);
@@ -268,13 +268,13 @@
 {
   ssize_t perline; /* count bytes per line */
   bool keepon=TRUE;
   ssize_t gotbytes;
   char *ptr;
   struct connectdata *conn = pp->conn;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char * const buf = data->state.buffer;
   CURLcode result = CURLE_OK;
 
   *code = 0; /* 0 for errors or not done */
   *size = 0;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pipeline.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pipeline.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pipeline.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pipeline.c	2016-07-21 06:31:36.000000000 +0800
@@ -54,26 +54,26 @@
 static void server_blacklist_llist_dtor(void *user, void *element)
 {
   (void)user;
   free(element);
 }
 
-bool Curl_pipeline_penalized(struct SessionHandle *data,
+bool Curl_pipeline_penalized(struct Curl_easy *data,
                              struct connectdata *conn)
 {
   if(data) {
     bool penalized = FALSE;
     curl_off_t penalty_size =
       Curl_multi_content_length_penalty_size(data->multi);
     curl_off_t chunk_penalty_size =
       Curl_multi_chunk_length_penalty_size(data->multi);
     curl_off_t recv_size = -2; /* Make it easy to spot in the log */
 
     /* Find the head of the recv pipe, if any */
     if(conn->recv_pipe && conn->recv_pipe->head) {
-      struct SessionHandle *recv_handle = conn->recv_pipe->head->ptr;
+      struct Curl_easy *recv_handle = conn->recv_pipe->head->ptr;
 
       recv_size = recv_handle->req.size;
 
       if(penalty_size > 0 && recv_size > penalty_size)
         penalized = TRUE;
     }
@@ -88,22 +88,22 @@
           conn->chunk.datasize, penalized?"TRUE":"FALSE");
     return penalized;
   }
   return FALSE;
 }
 
-static CURLcode addHandleToPipeline(struct SessionHandle *data,
+static CURLcode addHandleToPipeline(struct Curl_easy *data,
                                     struct curl_llist *pipeline)
 {
   if(!Curl_llist_insert_next(pipeline, pipeline->tail, data))
     return CURLE_OUT_OF_MEMORY;
   return CURLE_OK;
 }
 
 
-CURLcode Curl_add_handle_to_pipeline(struct SessionHandle *handle,
+CURLcode Curl_add_handle_to_pipeline(struct Curl_easy *handle,
                                      struct connectdata *conn)
 {
   struct curl_llist_element *sendhead = conn->send_pipe->head;
   struct curl_llist *pipeline;
   CURLcode result;
 
@@ -127,13 +127,13 @@
 /* Move this transfer from the sending list to the receiving list.
 
    Pay special attention to the new sending list "leader" as it needs to get
    checked to update what sockets it acts on.
 
 */
-void Curl_move_handle_from_send_to_recv_pipe(struct SessionHandle *handle,
+void Curl_move_handle_from_send_to_recv_pipe(struct Curl_easy *handle,
                                              struct connectdata *conn)
 {
   struct curl_llist_element *curr;
 
   curr = conn->send_pipe->head;
   while(curr) {
@@ -159,13 +159,13 @@
       break; /* we're done! */
     }
     curr = curr->next;
   }
 }
 
-bool Curl_pipeline_site_blacklisted(struct SessionHandle *handle,
+bool Curl_pipeline_site_blacklisted(struct Curl_easy *handle,
                                     struct connectdata *conn)
 {
   if(handle->multi) {
     struct curl_llist *blacklist =
       Curl_multi_pipelining_site_bl(handle->multi);
 
@@ -251,13 +251,13 @@
   /* This might be NULL if sites == NULL, i.e the blacklist is cleared */
   *list_ptr = new_list;
 
   return CURLM_OK;
 }
 
-bool Curl_pipeline_server_blacklisted(struct SessionHandle *handle,
+bool Curl_pipeline_server_blacklisted(struct Curl_easy *handle,
                                       char *server_name)
 {
   if(handle->multi && server_name) {
     struct curl_llist *blacklist =
       Curl_multi_pipelining_server_bl(handle->multi);
 
@@ -296,17 +296,22 @@
 
     /* Parse the URLs and populate the list */
     while(*servers) {
       char *server_name;
 
       server_name = strdup(*servers);
-      if(!server_name)
+      if(!server_name) {
+        Curl_llist_destroy(new_list, NULL);
         return CURLM_OUT_OF_MEMORY;
+      }
 
-      if(!Curl_llist_insert_next(new_list, new_list->tail, server_name))
+      if(!Curl_llist_insert_next(new_list, new_list->tail, server_name)) {
+        Curl_llist_destroy(new_list, NULL);
+        Curl_safefree(server_name);
         return CURLM_OUT_OF_MEMORY;
+      }
 
       servers++;
     }
   }
 
   /* Free the old list */
@@ -317,32 +322,32 @@
   /* This might be NULL if sites == NULL, i.e the blacklist is cleared */
   *list_ptr = new_list;
 
   return CURLM_OK;
 }
 
-static bool pipe_head(struct SessionHandle *data,
+static bool pipe_head(struct Curl_easy *data,
                       struct curl_llist *pipeline)
 {
   if(pipeline) {
     struct curl_llist_element *curr = pipeline->head;
     if(curr)
       return (curr->ptr == data) ? TRUE : FALSE;
   }
   return FALSE;
 }
 
 /* returns TRUE if the given handle is head of the recv pipe */
-bool Curl_recvpipe_head(struct SessionHandle *data,
+bool Curl_recvpipe_head(struct Curl_easy *data,
                         struct connectdata *conn)
 {
   return pipe_head(data, conn->recv_pipe);
 }
 
 /* returns TRUE if the given handle is head of the send pipe */
-bool Curl_sendpipe_head(struct SessionHandle *data,
+bool Curl_sendpipe_head(struct Curl_easy *data,
                         struct connectdata *conn)
 {
   return pipe_head(data, conn->send_pipe);
 }
 
 
@@ -350,13 +355,13 @@
  * Check if the write channel is available and this handle as at the head,
  * then grab the channel and return TRUE.
  *
  * If not available, return FALSE.
  */
 
-bool Curl_pipeline_checkget_write(struct SessionHandle *data,
+bool Curl_pipeline_checkget_write(struct Curl_easy *data,
                                   struct connectdata *conn)
 {
   if(conn->bits.multiplex)
     /* when multiplexing, we can use it at once */
     return TRUE;
 
@@ -373,13 +378,13 @@
  * Check if the read channel is available and this handle as at the head, then
  * grab the channel and return TRUE.
  *
  * If not available, return FALSE.
  */
 
-bool Curl_pipeline_checkget_read(struct SessionHandle *data,
+bool Curl_pipeline_checkget_read(struct Curl_easy *data,
                                  struct connectdata *conn)
 {
   if(conn->bits.multiplex)
     /* when multiplexing, we can use it at once */
     return TRUE;
 
@@ -410,13 +415,13 @@
 
 #if 0
 void print_pipeline(struct connectdata *conn)
 {
   struct curl_llist_element *curr;
   struct connectbundle *cb_ptr;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   cb_ptr = conn->bundle;
 
   if(cb_ptr) {
     curr = cb_ptr->conn_list->head;
     while(curr) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pipeline.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pipeline.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pipeline.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pipeline.h	2016-07-21 06:31:36.000000000 +0800
@@ -20,37 +20,37 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
-CURLcode Curl_add_handle_to_pipeline(struct SessionHandle *handle,
+CURLcode Curl_add_handle_to_pipeline(struct Curl_easy *handle,
                                      struct connectdata *conn);
-void Curl_move_handle_from_send_to_recv_pipe(struct SessionHandle *handle,
+void Curl_move_handle_from_send_to_recv_pipe(struct Curl_easy *handle,
                                              struct connectdata *conn);
-bool Curl_pipeline_penalized(struct SessionHandle *data,
+bool Curl_pipeline_penalized(struct Curl_easy *data,
                              struct connectdata *conn);
 
-bool Curl_pipeline_site_blacklisted(struct SessionHandle *handle,
+bool Curl_pipeline_site_blacklisted(struct Curl_easy *handle,
                                     struct connectdata *conn);
 
 CURLMcode Curl_pipeline_set_site_blacklist(char **sites,
                                            struct curl_llist **list_ptr);
 
-bool Curl_pipeline_server_blacklisted(struct SessionHandle *handle,
+bool Curl_pipeline_server_blacklisted(struct Curl_easy *handle,
                                       char *server_name);
 
 CURLMcode Curl_pipeline_set_server_blacklist(char **servers,
                                              struct curl_llist **list_ptr);
 
-bool Curl_pipeline_checkget_write(struct SessionHandle *data,
+bool Curl_pipeline_checkget_write(struct Curl_easy *data,
                                   struct connectdata *conn);
-bool Curl_pipeline_checkget_read(struct SessionHandle *data,
+bool Curl_pipeline_checkget_read(struct Curl_easy *data,
                                  struct connectdata *conn);
 void Curl_pipeline_leave_write(struct connectdata *conn);
 void Curl_pipeline_leave_read(struct connectdata *conn);
-bool Curl_recvpipe_head(struct SessionHandle *data,
+bool Curl_recvpipe_head(struct Curl_easy *data,
                         struct connectdata *conn);
-bool Curl_sendpipe_head(struct SessionHandle *data,
+bool Curl_sendpipe_head(struct Curl_easy *data,
                         struct connectdata *conn);
 
 #endif /* HEADER_CURL_PIPELINE_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pop3.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pop3.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pop3.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pop3.c	2016-07-21 06:31:36.000000000 +0800
@@ -594,13 +594,13 @@
  *
  * Sends a POP3 based command.
  */
 static CURLcode pop3_perform_command(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct POP3 *pop3 = data->req.protop;
   const char *command = NULL;
 
   /* Calculate the default command */
   if(pop3->id[0] == '\0' || conn->data->set.ftp_list_only) {
     command = "LIST";
@@ -650,13 +650,13 @@
 /* For the initial server greeting */
 static CURLcode pop3_state_servergreet_resp(struct connectdata *conn,
                                             int pop3code,
                                             pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   const char *line = data->state.buffer;
   size_t len = strlen(line);
   size_t i;
 
   (void)instate; /* no use for this yet */
@@ -701,13 +701,13 @@
 
 /* For CAPA responses */
 static CURLcode pop3_state_capa_resp(struct connectdata *conn, int pop3code,
                                      pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   const char *line = data->state.buffer;
   size_t len = strlen(line);
   size_t wordlen;
 
   (void)instate; /* no use for this yet */
@@ -792,13 +792,13 @@
 /* For STARTTLS responses */
 static CURLcode pop3_state_starttls_resp(struct connectdata *conn,
                                          int pop3code,
                                          pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     if(data->set.use_ssl != CURLUSESSL_TRY) {
       failf(data, "STARTTLS denied. %c", pop3code);
@@ -816,13 +816,13 @@
 /* For SASL authentication responses */
 static CURLcode pop3_state_auth_resp(struct connectdata *conn,
                                      int pop3code,
                                      pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   saslprogress progress;
 
   (void)instate; /* no use for this yet */
 
   result = Curl_sasl_continue(&pop3c->sasl, conn, pop3code, &progress);
@@ -856,13 +856,13 @@
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 /* For APOP responses */
 static CURLcode pop3_state_apop_resp(struct connectdata *conn, int pop3code,
                                      pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Authentication failed: %d", pop3code);
     result = CURLE_LOGIN_DENIED;
@@ -877,13 +877,13 @@
 
 /* For USER responses */
 static CURLcode pop3_state_user_resp(struct connectdata *conn, int pop3code,
                                      pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied. %c", pop3code);
     result = CURLE_LOGIN_DENIED;
@@ -900,13 +900,13 @@
 
 /* For PASS responses */
 static CURLcode pop3_state_pass_resp(struct connectdata *conn, int pop3code,
                                      pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied. %c", pop3code);
     result = CURLE_LOGIN_DENIED;
@@ -921,13 +921,13 @@
 /* For command responses */
 static CURLcode pop3_state_command_resp(struct connectdata *conn,
                                         int pop3code,
                                         pop3state instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct POP3 *pop3 = data->req.protop;
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   struct pingpong *pp = &pop3c->pp;
 
   (void)instate; /* no use for this yet */
 
@@ -1075,18 +1075,18 @@
   while(pop3c->state != POP3_STOP && !result)
     result = Curl_pp_statemach(&pop3c->pp, TRUE);
 
   return result;
 }
 
-/* Allocate and initialize the POP3 struct for the current SessionHandle if
+/* Allocate and initialize the POP3 struct for the current Curl_easy if
    required */
 static CURLcode pop3_init(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct POP3 *pop3;
 
   pop3 = data->req.protop = calloc(sizeof(struct POP3), 1);
   if(!pop3)
     result = CURLE_OUT_OF_MEMORY;
 
@@ -1157,13 +1157,13 @@
  * Input argument is already checked for validity.
  */
 static CURLcode pop3_done(struct connectdata *conn, CURLcode status,
                           bool premature)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct POP3 *pop3 = data->req.protop;
 
   (void)premature;
 
   if(!pop3)
     return CURLE_OK;
@@ -1321,13 +1321,13 @@
  */
 static CURLcode pop3_regular_transfer(struct connectdata *conn,
                                       bool *dophase_done)
 {
   CURLcode result = CURLE_OK;
   bool connected = FALSE;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Make sure size is unknown at this point */
   data->req.size = -1;
 
   /* Set the progress data */
   Curl_pgrsSetUploadCounter(data, 0);
@@ -1344,13 +1344,13 @@
 
   return result;
 }
 
 static CURLcode pop3_setup_connection(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Initialise the POP3 layer */
   CURLcode result = pop3_init(conn);
   if(result)
     return result;
 
@@ -1451,13 +1451,13 @@
  *
  * Parse the URL path into separate path components.
  */
 static CURLcode pop3_parse_url_path(struct connectdata *conn)
 {
   /* The POP3 struct is already initialised in pop3_connect() */
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct POP3 *pop3 = data->req.protop;
   const char *path = data->state.path;
 
   /* URL decode the path for the message ID */
   return Curl_urldecode(data, path, 0, &pop3->id, NULL, TRUE);
 }
@@ -1468,13 +1468,13 @@
  *
  * Parse the custom request.
  */
 static CURLcode pop3_parse_custom_request(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct POP3 *pop3 = data->req.protop;
   const char *custom = data->set.str[STRING_CUSTOMREQUEST];
 
   /* URL decode the custom request */
   if(custom)
     result = Curl_urldecode(data, custom, 0, &pop3->custom, NULL, TRUE);
@@ -1490,13 +1490,13 @@
  * until the end is found.
  */
 CURLcode Curl_pop3_write(struct connectdata *conn, char *str, size_t nread)
 {
   /* This code could be made into a special function in the handler struct */
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SingleRequest *k = &data->req;
 
   struct pop3_conn *pop3c = &conn->proto.pop3c;
   bool strip_dot = FALSE;
   size_t last = 0;
   size_t i;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pop3.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pop3.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/pop3.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/pop3.h	2016-07-21 06:31:36.000000000 +0800
@@ -42,15 +42,15 @@
   POP3_PASS,
   POP3_COMMAND,
   POP3_QUIT,
   POP3_LAST          /* never used */
 } pop3state;
 
-/* This POP3 struct is used in the SessionHandle. All POP3 data that is
+/* This POP3 struct is used in the Curl_easy. All POP3 data that is
    connection-oriented must be in pop3_conn to properly deal with the fact that
-   perhaps the SessionHandle is changed between the times the connection is
+   perhaps the Curl_easy is changed between the times the connection is
    used. */
 struct POP3 {
   curl_pp_transfer transfer;
   char *id;               /* Message ID */
   char *custom;           /* Custom Request */
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/progress.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/progress.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/progress.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/progress.c	2016-07-21 06:31:36.000000000 +0800
@@ -130,13 +130,13 @@
 
 */
 
 int Curl_pgrsDone(struct connectdata *conn)
 {
   int rc;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   data->progress.lastshow=0;
   rc = Curl_pgrsUpdate(conn); /* the final (forced) update */
   if(rc)
     return rc;
 
   if(!(data->progress.flags & PGRS_HIDE) &&
@@ -147,24 +147,24 @@
 
   data->progress.speeder_c = 0; /* reset the progress meter display */
   return 0;
 }
 
 /* reset all times except redirect, and reset the known transfer sizes */
-void Curl_pgrsResetTimesSizes(struct SessionHandle *data)
+void Curl_pgrsResetTimesSizes(struct Curl_easy *data)
 {
   data->progress.t_nslookup = 0.0;
   data->progress.t_connect = 0.0;
   data->progress.t_pretransfer = 0.0;
   data->progress.t_starttransfer = 0.0;
 
   Curl_pgrsSetDownloadSize(data, -1);
   Curl_pgrsSetUploadSize(data, -1);
 }
 
-void Curl_pgrsTime(struct SessionHandle *data, timerid timer)
+void Curl_pgrsTime(struct Curl_easy *data, timerid timer)
 {
   struct timeval now = Curl_tvnow();
 
   switch(timer) {
   default:
   case TIMER_NONE:
@@ -209,43 +209,43 @@
   case TIMER_REDIRECT:
     data->progress.t_redirect = Curl_tvdiff_secs(now, data->progress.start);
     break;
   }
 }
 
-void Curl_pgrsStartNow(struct SessionHandle *data)
+void Curl_pgrsStartNow(struct Curl_easy *data)
 {
   data->progress.speeder_c = 0; /* reset the progress meter display */
   data->progress.start = Curl_tvnow();
   /* clear all bits except HIDE and HEADERS_OUT */
   data->progress.flags &= PGRS_HIDE|PGRS_HEADERS_OUT;
 }
 
-void Curl_pgrsSetDownloadCounter(struct SessionHandle *data, curl_off_t size)
+void Curl_pgrsSetDownloadCounter(struct Curl_easy *data, curl_off_t size)
 {
   data->progress.downloaded = size;
 }
 
-void Curl_pgrsSetUploadCounter(struct SessionHandle *data, curl_off_t size)
+void Curl_pgrsSetUploadCounter(struct Curl_easy *data, curl_off_t size)
 {
   data->progress.uploaded = size;
 }
 
-void Curl_pgrsSetDownloadSize(struct SessionHandle *data, curl_off_t size)
+void Curl_pgrsSetDownloadSize(struct Curl_easy *data, curl_off_t size)
 {
   if(size >= 0) {
     data->progress.size_dl = size;
     data->progress.flags |= PGRS_DL_SIZE_KNOWN;
   }
   else {
     data->progress.size_dl = 0;
     data->progress.flags &= ~PGRS_DL_SIZE_KNOWN;
   }
 }
 
-void Curl_pgrsSetUploadSize(struct SessionHandle *data, curl_off_t size)
+void Curl_pgrsSetUploadSize(struct Curl_easy *data, curl_off_t size)
 {
   if(size >= 0) {
     data->progress.size_ul = size;
     data->progress.flags |= PGRS_UL_SIZE_KNOWN;
   }
   else {
@@ -266,13 +266,13 @@
   curl_off_t dlpercen=0;
   curl_off_t ulpercen=0;
   curl_off_t total_percen=0;
   curl_off_t total_transfer;
   curl_off_t total_expected_transfer;
   curl_off_t timespent;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int nowindex = data->progress.speeder_c% CURR_TIME;
   int checkindex;
   int countindex; /* amount of seconds stored in the speeder array */
   char time_left[10];
   char time_total[10];
   char time_spent[10];
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/progress.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/progress.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/progress.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/progress.h	2016-07-21 06:31:36.000000000 +0800
@@ -38,20 +38,20 @@
   TIMER_STARTACCEPT,
   TIMER_REDIRECT,
   TIMER_LAST /* must be last */
 } timerid;
 
 int Curl_pgrsDone(struct connectdata *);
-void Curl_pgrsStartNow(struct SessionHandle *data);
-void Curl_pgrsSetDownloadSize(struct SessionHandle *data, curl_off_t size);
-void Curl_pgrsSetUploadSize(struct SessionHandle *data, curl_off_t size);
-void Curl_pgrsSetDownloadCounter(struct SessionHandle *data, curl_off_t size);
-void Curl_pgrsSetUploadCounter(struct SessionHandle *data, curl_off_t size);
+void Curl_pgrsStartNow(struct Curl_easy *data);
+void Curl_pgrsSetDownloadSize(struct Curl_easy *data, curl_off_t size);
+void Curl_pgrsSetUploadSize(struct Curl_easy *data, curl_off_t size);
+void Curl_pgrsSetDownloadCounter(struct Curl_easy *data, curl_off_t size);
+void Curl_pgrsSetUploadCounter(struct Curl_easy *data, curl_off_t size);
 int Curl_pgrsUpdate(struct connectdata *);
-void Curl_pgrsResetTimesSizes(struct SessionHandle *data);
-void Curl_pgrsTime(struct SessionHandle *data, timerid timer);
+void Curl_pgrsResetTimesSizes(struct Curl_easy *data);
+void Curl_pgrsTime(struct Curl_easy *data, timerid timer);
 
 
 /* Don't show progress for sizes smaller than: */
 #define LEAST_SIZE_PROGRESS BUFSIZE
 
 #define PROGRESS_DOWNLOAD (1<<0)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/rtsp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/rtsp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/rtsp.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/rtsp.c	2016-07-21 06:31:36.000000000 +0800
@@ -70,13 +70,13 @@
  * Parse and write out any available RTP data.
  *
  * nread: amount of data left after k->str. will be modified if RTP
  *        data is parsed and k->str is moved up
  * readmore: whether or not the RTP parser needs more data right away
  */
-static CURLcode rtsp_rtp_readwrite(struct SessionHandle *data,
+static CURLcode rtsp_rtp_readwrite(struct Curl_easy *data,
                                    struct connectdata *conn,
                                    ssize_t *nread,
                                    bool *readmore);
 
 static CURLcode rtsp_setup_connection(struct connectdata *conn);
 
@@ -155,25 +155,25 @@
   else if(sval & CURL_CSELECT_ERR) {
     /* socket is in an error state */
     ret_val = TRUE;
   }
   else if((sval & CURL_CSELECT_IN) && check->data) {
     /* readable with no error. could be closed or could be alive but we can
-       only check if we have a proper SessionHandle for the connection */
+       only check if we have a proper Curl_easy for the connection */
     curl_socket_t connectinfo = Curl_getconnectinfo(check->data, &check);
     if(connectinfo != CURL_SOCKET_BAD)
       ret_val = FALSE;
   }
 
   return ret_val;
 }
 
 static CURLcode rtsp_connect(struct connectdata *conn, bool *done)
 {
   CURLcode httpStatus;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   httpStatus = Curl_http_connect(conn, done);
 
   /* Initialize the CSeq if not already done */
   if(data->state.rtsp_next_client_CSeq == 0)
     data->state.rtsp_next_client_CSeq = 1;
@@ -193,13 +193,13 @@
 }
 
 
 static CURLcode rtsp_done(struct connectdata *conn,
                           CURLcode status, bool premature)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct RTSP *rtsp = data->req.protop;
   CURLcode httpStatus;
   long CSeq_sent;
   long CSeq_recv;
 
   /* Bypass HTTP empty-reply checks on receive */
@@ -227,13 +227,13 @@
 
   return httpStatus;
 }
 
 static CURLcode rtsp_do(struct connectdata *conn, bool *done)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result=CURLE_OK;
   Curl_RtspReq rtspreq = data->set.rtspreq;
   struct RTSP *rtsp = data->req.protop;
   struct HTTP *http;
   Curl_send_buffer *req_buffer;
   curl_off_t postsize = 0; /* for ANNOUNCE and SET_PARAMETER */
@@ -597,13 +597,13 @@
   }
 
   return result;
 }
 
 
-static CURLcode rtsp_rtp_readwrite(struct SessionHandle *data,
+static CURLcode rtsp_rtp_readwrite(struct Curl_easy *data,
                                    struct connectdata *conn,
                                    ssize_t *nread,
                                    bool *readmore) {
   struct SingleRequest *k = &data->req;
   struct rtsp_conn *rtspc = &(conn->proto.rtspc);
 
@@ -728,13 +728,13 @@
   return CURLE_OK;
 }
 
 static
 CURLcode rtp_client_write(struct connectdata *conn, char *ptr, size_t len)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   size_t wrote;
   curl_write_callback writeit;
 
   if(len == 0) {
     failf (data, "Cannot write a 0 size RTP packet.");
     return CURLE_WRITE_ERROR;
@@ -756,13 +756,13 @@
   return CURLE_OK;
 }
 
 CURLcode Curl_rtsp_parseheader(struct connectdata *conn,
                                char *header)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   long CSeq = 0;
 
   if(checkprefix("CSeq:", header)) {
     /* Store the received CSeq. Match is verified in rtsp_done */
     int nc = sscanf(&header[4], ": %ld", &CSeq);
     if(nc == 1) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/security.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/security.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/security.c	2016-03-17 23:58:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/security.c	2016-07-21 06:31:36.000000000 +0800
@@ -473,13 +473,13 @@
   return 0;
 }
 
 static CURLcode choose_mech(struct connectdata *conn)
 {
   int ret;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   void *tmp_allocation;
   const struct Curl_sec_client_mech *mech = &Curl_krb5_client_mech;
 
   tmp_allocation = realloc(conn->app_data, mech->size);
   if(tmp_allocation == NULL) {
     failf(data, "Failed realloc of size %u", mech->size);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/sendf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/sendf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/sendf.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/sendf.c	2016-07-21 06:31:36.000000000 +0800
@@ -43,13 +43,13 @@
 /*
  * convert_lineends() changes CRLF (\r\n) end-of-line markers to a single LF
  * (\n), with special processing for CRLF sequences that are split between two
  * blocks of data.  Remaining, bare CRs are changed to LFs.  The possibly new
  * size of the data is returned.
  */
-static size_t convert_lineends(struct SessionHandle *data,
+static size_t convert_lineends(struct Curl_easy *data,
                                char *startPtr, size_t size)
 {
   char *inPtr, *outPtr;
 
   /* sanity check */
   if((startPtr == NULL) || (size < 1)) {
@@ -204,13 +204,13 @@
 #define pre_receive_plain(c,n) do {} WHILE_FALSE
 #define get_pre_recved(c,n,b,l) 0
 #endif /* ! USE_RECV_BEFORE_SEND_WORKAROUND */
 
 /* Curl_infof() is for info message along the way */
 
-void Curl_infof(struct SessionHandle *data, const char *fmt, ...)
+void Curl_infof(struct Curl_easy *data, const char *fmt, ...)
 {
   if(data && data->set.verbose) {
     va_list ap;
     size_t len;
     char print_buffer[2048 + 1];
     va_start(ap, fmt);
@@ -222,13 +222,13 @@
 }
 
 /* Curl_failf() is for messages stating why we failed.
  * The message SHALL NOT include any LF or CR.
  */
 
-void Curl_failf(struct SessionHandle *data, const char *fmt, ...)
+void Curl_failf(struct Curl_easy *data, const char *fmt, ...)
 {
   va_list ap;
   size_t len;
   va_start(ap, fmt);
 
   vsnprintf(data->state.buffer, BUFSIZE, fmt, ap);
@@ -250,13 +250,13 @@
 }
 
 /* Curl_sendf() sends formated data to the server */
 CURLcode Curl_sendf(curl_socket_t sockfd, struct connectdata *conn,
                     const char *fmt, ...)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   ssize_t bytes_written;
   size_t write_len;
   CURLcode result = CURLE_OK;
   char *s;
   char *sptr;
   va_list ap;
@@ -449,13 +449,13 @@
       *code = CURLE_RECV_ERROR;
     }
   }
   return nread;
 }
 
-static CURLcode pausewrite(struct SessionHandle *data,
+static CURLcode pausewrite(struct Curl_easy *data,
                            int type, /* what type of data */
                            const char *ptr,
                            size_t len)
 {
   /* signalled to pause sending on this connection, but since we have data
      we want to send we need to dup it to save a copy for when the sending
@@ -488,13 +488,13 @@
  */
 CURLcode Curl_client_chop_write(struct connectdata *conn,
                                 int type,
                                 char * ptr,
                                 size_t len)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_write_callback writeheader = NULL;
   curl_write_callback writebody = NULL;
 
   if(!len)
     return CURLE_OK;
 
@@ -595,13 +595,13 @@
  */
 CURLcode Curl_client_write(struct connectdata *conn,
                            int type,
                            char *ptr,
                            size_t len)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(0 == len)
     len = strlen(ptr);
 
   /* FTP data may need conversion. */
   if((type & CLIENTWRITE_BODY) &&
@@ -715,13 +715,13 @@
   *n += nread;
 
   return CURLE_OK;
 }
 
 /* return 0 on success */
-static int showit(struct SessionHandle *data, curl_infotype type,
+static int showit(struct Curl_easy *data, curl_infotype type,
                   char *ptr, size_t size)
 {
   static const char s_infotype[CURLINFO_END][3] = {
     "* ", "< ", "> ", "{ ", "} ", "{ ", "} " };
 
 #ifdef CURL_DOES_CONVERSIONS
@@ -784,13 +784,13 @@
   default: /* nada */
     break;
   }
   return 0;
 }
 
-int Curl_debug(struct SessionHandle *data, curl_infotype type,
+int Curl_debug(struct Curl_easy *data, curl_infotype type,
                char *ptr, size_t size,
                struct connectdata *conn)
 {
   int rc;
   if(data->set.printhost && conn && conn->host.dispname) {
     char buffer[160];
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/sendf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/sendf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/sendf.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/sendf.h	2016-07-21 06:31:36.000000000 +0800
@@ -23,14 +23,14 @@
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 CURLcode Curl_sendf(curl_socket_t sockfd, struct connectdata *,
                     const char *fmt, ...);
-void Curl_infof(struct SessionHandle *, const char *fmt, ...);
-void Curl_failf(struct SessionHandle *, const char *fmt, ...);
+void Curl_infof(struct Curl_easy *, const char *fmt, ...);
+void Curl_failf(struct Curl_easy *, const char *fmt, ...);
 
 #if defined(CURL_DISABLE_VERBOSE_STRINGS)
 
 #if defined(HAVE_VARIADIC_MACROS_C99)
 #define infof(...)  Curl_nop_stmt
 #elif defined(HAVE_VARIADIC_MACROS_GCC)
@@ -81,12 +81,12 @@
 CURLcode Curl_write_plain(struct connectdata *conn,
                           curl_socket_t sockfd,
                           const void *mem, size_t len,
                           ssize_t *written);
 
 /* the function used to output verbose information */
-int Curl_debug(struct SessionHandle *handle, curl_infotype type,
+int Curl_debug(struct Curl_easy *handle, curl_infotype type,
                char *data, size_t size,
                struct connectdata *conn);
 
 
 #endif /* HEADER_CURL_SENDF_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/share.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/share.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/share.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/share.c	2016-07-21 06:31:36.000000000 +0800
@@ -28,13 +28,13 @@
 #include "vtls/vtls.h"
 #include "curl_memory.h"
 
 /* The last #include file should be: */
 #include "memdebug.h"
 
-CURLSH *
+struct Curl_share *
 curl_share_init(void)
 {
   struct Curl_share *share = calloc(1, sizeof(struct Curl_share));
   if(share) {
     share->specifier |= (1<<CURL_LOCK_DATA_SHARE);
 
@@ -46,15 +46,14 @@
 
   return share;
 }
 
 #undef curl_share_setopt
 CURLSHcode
-curl_share_setopt(CURLSH *sh, CURLSHoption option, ...)
+curl_share_setopt(struct Curl_share *share, CURLSHoption option, ...)
 {
-  struct Curl_share *share = (struct Curl_share *)sh;
   va_list param;
   int type;
   curl_lock_function lockfunc;
   curl_unlock_function unlockfunc;
   void *ptr;
   CURLSHcode res = CURLSHE_OK;
@@ -169,16 +168,14 @@
   va_end(param);
 
   return res;
 }
 
 CURLSHcode
-curl_share_cleanup(CURLSH *sh)
+curl_share_cleanup(struct Curl_share *share)
 {
-  struct Curl_share *share = (struct Curl_share *)sh;
-
   if(share == NULL)
     return CURLSHE_INVALID;
 
   if(share->lockfunc)
     share->lockfunc(NULL, CURL_LOCK_DATA_SHARE, CURL_LOCK_ACCESS_SINGLE,
                     share->clientdata);
@@ -210,13 +207,13 @@
 
   return CURLSHE_OK;
 }
 
 
 CURLSHcode
-Curl_share_lock(struct SessionHandle *data, curl_lock_data type,
+Curl_share_lock(struct Curl_easy *data, curl_lock_data type,
                 curl_lock_access accesstype)
 {
   struct Curl_share *share = data->share;
 
   if(share == NULL)
     return CURLSHE_INVALID;
@@ -228,13 +225,13 @@
   /* else if we don't share this, pretend successful lock */
 
   return CURLSHE_OK;
 }
 
 CURLSHcode
-Curl_share_unlock(struct SessionHandle *data, curl_lock_data type)
+Curl_share_unlock(struct Curl_easy *data, curl_lock_data type)
 {
   struct Curl_share *share = data->share;
 
   if(share == NULL)
     return CURLSHE_INVALID;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/share.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/share.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/share.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/share.h	2016-07-21 06:31:36.000000000 +0800
@@ -51,11 +51,11 @@
 
   struct curl_ssl_session *sslsession;
   size_t max_ssl_sessions;
   long sessionage;
 };
 
-CURLSHcode Curl_share_lock (struct SessionHandle *, curl_lock_data,
+CURLSHcode Curl_share_lock (struct Curl_easy *, curl_lock_data,
                             curl_lock_access);
-CURLSHcode Curl_share_unlock (struct SessionHandle *, curl_lock_data);
+CURLSHcode Curl_share_unlock (struct Curl_easy *, curl_lock_data);
 
 #endif /* HEADER_CURL_SHARE_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/sigpipe.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/sigpipe.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/sigpipe.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/sigpipe.h	2016-07-21 06:31:36.000000000 +0800
@@ -35,16 +35,16 @@
 
 /*
  * sigpipe_ignore() makes sure we ignore SIGPIPE while running libcurl
  * internals, and then sigpipe_restore() will restore the situation when we
  * return from libcurl again.
  */
-static void sigpipe_ignore(struct SessionHandle *data,
+static void sigpipe_ignore(struct Curl_easy *data,
                            struct sigpipe_ignore *ig)
 {
-  /* get a local copy of no_signal because the SessionHandle might not be
+  /* get a local copy of no_signal because the Curl_easy might not be
      around when we restore */
   ig->no_signal = data->set.no_signal;
   if(!data->set.no_signal) {
     struct sigaction action;
     /* first, extract the existing situation */
     memset(&ig->old_pipe_act, 0, sizeof(struct sigaction));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/smb.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/smb.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/smb.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/smb.c	2016-07-21 06:31:36.000000000 +0800
@@ -902,13 +902,12 @@
   Curl_safefree(smbc->domain);
   Curl_safefree(smbc->recv_buf);
 
   /* smb_done is not always called, so cleanup the request */
   if(req) {
     Curl_safefree(req->share);
-    Curl_safefree(conn->data->req.protop);
   }
 
   return CURLE_OK;
 }
 
 static int smb_getsock(struct connectdata *conn, curl_socket_t *socks,
@@ -927,13 +926,13 @@
   return GETSOCK_READSOCK(0);
 }
 
 static CURLcode smb_parse_url_path(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct smb_request *req = data->req.protop;
   char *path;
   char *slash;
 
   /* URL decode the path */
   result = Curl_urldecode(data, data->state.path, 0, &path, NULL, TRUE);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/smtp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/smtp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/smtp.c	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/smtp.c	2016-07-21 06:31:36.000000000 +0800
@@ -517,13 +517,13 @@
  *
  * Sends a SMTP based command.
  */
 static CURLcode smtp_perform_command(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
 
   /* Send the command */
   if(smtp->rcpt)
     result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s %s",
                            smtp->custom && smtp->custom[0] != '\0' ?
@@ -549,13 +549,13 @@
 static CURLcode smtp_perform_mail(struct connectdata *conn)
 {
   char *from = NULL;
   char *auth = NULL;
   char *size = NULL;
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Calculate the FROM parameter */
   if(!data->set.str[STRING_MAIL_FROM])
     /* Null reverse-path, RFC-5321, sect. 3.6.3 */
     from = strdup("<>");
   else if(data->set.str[STRING_MAIL_FROM][0] == '<')
@@ -624,13 +624,13 @@
  * Sends a RCPT TO command for a given recipient as part of the message upload
  * process.
  */
 static CURLcode smtp_perform_rcpt_to(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
 
   /* Send the RCPT TO command */
   if(smtp->rcpt->data[0] == '<')
     result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:%s",
                            smtp->rcpt->data);
@@ -665,13 +665,13 @@
 /* For the initial server greeting */
 static CURLcode smtp_state_servergreet_resp(struct connectdata *conn,
                                             int smtpcode,
                                             smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "Got unexpected smtp-server response: %d", smtpcode);
     result = CURLE_FTP_WEIRD_SERVER_REPLY;
@@ -685,13 +685,13 @@
 /* For STARTTLS responses */
 static CURLcode smtp_state_starttls_resp(struct connectdata *conn,
                                          int smtpcode,
                                          smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 220) {
     if(data->set.use_ssl != CURLUSESSL_TRY) {
       failf(data, "STARTTLS denied. %c", smtpcode);
@@ -708,13 +708,13 @@
 
 /* For EHLO responses */
 static CURLcode smtp_state_ehlo_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   const char *line = data->state.buffer;
   size_t len = strlen(line);
   size_t wordlen;
 
   (void)instate; /* no use for this yet */
@@ -803,13 +803,13 @@
 
 /* For HELO responses */
 static CURLcode smtp_state_helo_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "Remote access denied: %d", smtpcode);
     result = CURLE_REMOTE_ACCESS_DENIED;
@@ -824,13 +824,13 @@
 /* For SASL authentication responses */
 static CURLcode smtp_state_auth_resp(struct connectdata *conn,
                                      int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   saslprogress progress;
 
   (void)instate; /* no use for this yet */
 
   result = Curl_sasl_continue(&smtpc->sasl, conn, smtpcode, &progress);
@@ -852,13 +852,13 @@
 
 /* For command responses */
 static CURLcode smtp_state_command_resp(struct connectdata *conn, int smtpcode,
                                         smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
   char *line = data->state.buffer;
   size_t len = strlen(line);
 
   (void)instate; /* no use for this yet */
 
@@ -898,13 +898,13 @@
 
 /* For MAIL responses */
 static CURLcode smtp_state_mail_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "MAIL failed: %d", smtpcode);
     result = CURLE_SEND_ERROR;
@@ -918,13 +918,13 @@
 
 /* For RCPT responses */
 static CURLcode smtp_state_rcpt_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "RCPT failed: %d", smtpcode);
@@ -950,13 +950,13 @@
 
 /* For DATA response */
 static CURLcode smtp_state_data_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 354) {
     failf(data, "DATA failed: %d", smtpcode);
     result = CURLE_SEND_ERROR;
@@ -995,13 +995,13 @@
 }
 
 static CURLcode smtp_statemach_act(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int smtpcode;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   struct pingpong *pp = &smtpc->pp;
   size_t nread = 0;
 
   /* Busy upgrading the connection; right now all I/O is SSL/TLS, not SMTP */
@@ -1105,18 +1105,18 @@
   while(smtpc->state != SMTP_STOP && !result)
     result = Curl_pp_statemach(&smtpc->pp, TRUE);
 
   return result;
 }
 
-/* Allocate and initialize the SMTP struct for the current SessionHandle if
+/* Allocate and initialize the SMTP struct for the current Curl_easy if
    required */
 static CURLcode smtp_init(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp;
 
   smtp = data->req.protop = calloc(sizeof(struct SMTP), 1);
   if(!smtp)
     result = CURLE_OUT_OF_MEMORY;
 
@@ -1191,13 +1191,13 @@
  * Input argument is already checked for validity.
  */
 static CURLcode smtp_done(struct connectdata *conn, CURLcode status,
                           bool premature)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
   struct pingpong *pp = &conn->proto.smtpc.pp;
   char *eob;
   ssize_t len;
   ssize_t bytes_written;
 
@@ -1281,13 +1281,13 @@
  */
 static CURLcode smtp_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is SMTP and no proxy */
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
   if(data->set.opt_no_body) {
     /* Requested no body means no transfer */
@@ -1420,13 +1420,13 @@
  */
 static CURLcode smtp_regular_transfer(struct connectdata *conn,
                                       bool *dophase_done)
 {
   CURLcode result = CURLE_OK;
   bool connected = FALSE;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* Make sure size is unknown at this point */
   data->req.size = -1;
 
   /* Set the progress data */
   Curl_pgrsSetUploadCounter(data, 0);
@@ -1443,13 +1443,13 @@
 
   return result;
 }
 
 static CURLcode smtp_setup_connection(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result;
 
   /* Clear the TLS upgraded flag */
   conn->tls_upgraded = FALSE;
 
   /* Set up the proxy if necessary */
@@ -1531,13 +1531,13 @@
  *
  * Parse the URL path into separate path components.
  */
 static CURLcode smtp_parse_url_path(struct connectdata *conn)
 {
   /* The SMTP struct is already initialised in smtp_connect() */
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   const char *path = data->state.path;
   char localhost[HOSTNAME_MAX + 1];
 
   /* Calculate the path if necessary */
   if(!*path) {
@@ -1557,13 +1557,13 @@
  *
  * Parse the custom request.
  */
 static CURLcode smtp_parse_custom_request(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
   const char *custom = data->set.str[STRING_CUSTOMREQUEST];
 
   /* URL decode the custom request */
   if(custom)
     result = Curl_urldecode(data, custom, 0, &smtp->custom, NULL, TRUE);
@@ -1578,13 +1578,13 @@
      be deleted by the server when not part of an EOB terminator and a
      genuine CRLF.CRLF which isn't escaped will wrongly be detected as end of
      data by the server
   */
   ssize_t i;
   ssize_t si;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SMTP *smtp = data->req.protop;
   char *scratch = data->state.scratch;
   char *newscratch = NULL;
   char *oldscratch = NULL;
   size_t eob_sent;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/smtp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/smtp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/smtp.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/smtp.h	2016-07-21 06:31:36.000000000 +0800
@@ -44,15 +44,15 @@
   SMTP_DATA,
   SMTP_POSTDATA,
   SMTP_QUIT,
   SMTP_LAST         /* never used */
 } smtpstate;
 
-/* This SMTP struct is used in the SessionHandle. All SMTP data that is
+/* This SMTP struct is used in the Curl_easy. All SMTP data that is
    connection-oriented must be in smtp_conn to properly deal with the fact that
-   perhaps the SessionHandle is changed between the times the connection is
+   perhaps the Curl_easy is changed between the times the connection is
    used. */
 struct SMTP {
   curl_pp_transfer transfer;
   char *custom;            /* Custom Request */
   struct curl_slist *rcpt; /* Recipient list */
   size_t eob;              /* Number of bytes of the EOB (End Of Body) that
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/socks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/socks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/socks.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/socks.c	2016-07-21 06:31:36.000000000 +0800
@@ -116,13 +116,13 @@
 #define SOCKS4REQLEN 262
   unsigned char socksreq[SOCKS4REQLEN]; /* room for SOCKS4 request incl. user
                                            id */
   int result;
   CURLcode code;
   curl_socket_t sock = conn->sock[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(Curl_timeleft(data, NULL, TRUE) < 0) {
     /* time-out, bail out, go home */
     failf(data, "Connection time-out");
     return CURLE_OPERATION_TIMEDOUT;
   }
@@ -371,13 +371,13 @@
   unsigned char socksreq[600]; /* room for large user/pw (255 max each) */
   ssize_t actualread;
   ssize_t written;
   int result;
   CURLcode code;
   curl_socket_t sock = conn->sock[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   long timeout;
   bool socks5_resolve_local = (conn->proxytype == CURLPROXY_SOCKS5)?TRUE:FALSE;
   const size_t hostname_len = strlen(hostname);
   ssize_t len = 0;
 
   /* RFC1928 chapter 5 specifies max 255 chars for domain name in packet */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/socks_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/socks_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/socks_gssapi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/socks_gssapi.c	2016-07-21 06:31:36.000000000 +0800
@@ -40,13 +40,13 @@
 
 static gss_ctx_id_t gss_context = GSS_C_NO_CONTEXT;
 
 /*
  * Helper GSS-API error functions.
  */
-static int check_gss_err(struct SessionHandle *data,
+static int check_gss_err(struct Curl_easy *data,
                          OM_uint32 major_status,
                          OM_uint32 minor_status,
                          const char* function)
 {
   if(GSS_ERROR(major_status)) {
     OM_uint32 maj_stat, min_stat;
@@ -99,13 +99,13 @@
   return 0;
 }
 
 CURLcode Curl_SOCKS5_gssapi_negotiate(int sockindex,
                                       struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sock = conn->sock[sockindex];
   CURLcode code;
   ssize_t actualread;
   ssize_t written;
   int result;
   OM_uint32 gss_major_status, gss_minor_status, gss_status;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/socks_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/socks_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/socks_sspi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/socks_sspi.c	2016-07-21 06:31:36.000000000 +0800
@@ -31,12 +31,13 @@
 #include "strerror.h"
 #include "timeval.h"
 #include "socks.h"
 #include "curl_sspi.h"
 #include "curl_multibyte.h"
 #include "warnless.h"
+#include "strdup.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 /*
@@ -58,13 +59,13 @@
 }
 
 /* This is the SSPI-using version of this function */
 CURLcode Curl_SOCKS5_gssapi_negotiate(int sockindex,
                                       struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sock = conn->sock[sockindex];
   CURLcode code;
   ssize_t actualread;
   ssize_t written;
   int result;
   /* Needs GSS-API authentication */
@@ -93,16 +94,15 @@
    * | 1  |  1   |  2  | up to 2^16 - 1 |
    * +----+------+-----+----------------+
    */
 
   /* prepare service name */
   if(strchr(service, '/')) {
-    service_name = malloc(strlen(service));
+    service_name = strdup(service);
     if(!service_name)
       return CURLE_OUT_OF_MEMORY;
-    memcpy(service_name, service, strlen(service));
   }
   else {
     service_name = malloc(strlen(service) + strlen(conn->proxy.name) + 2);
     if(!service_name)
       return CURLE_OUT_OF_MEMORY;
     snprintf(service_name, strlen(service) +strlen(conn->proxy.name)+2,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/speedcheck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/speedcheck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/speedcheck.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/speedcheck.c	2016-07-21 06:31:36.000000000 +0800
@@ -25,18 +25,18 @@
 #include <curl/curl.h>
 #include "urldata.h"
 #include "sendf.h"
 #include "multiif.h"
 #include "speedcheck.h"
 
-void Curl_speedinit(struct SessionHandle *data)
+void Curl_speedinit(struct Curl_easy *data)
 {
   memset(&data->state.keeps_speed, 0, sizeof(struct timeval));
 }
 
-CURLcode Curl_speedcheck(struct SessionHandle *data,
+CURLcode Curl_speedcheck(struct Curl_easy *data,
                          struct timeval now)
 {
   if((data->progress.current_speed >= 0) &&
      data->set.low_speed_time &&
      (Curl_tvlong(data->state.keeps_speed) != 0) &&
      (data->progress.current_speed < data->set.low_speed_limit)) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/speedcheck.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/speedcheck.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/speedcheck.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/speedcheck.h	2016-07-21 06:31:36.000000000 +0800
@@ -23,11 +23,11 @@
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #include "timeval.h"
 
-void Curl_speedinit(struct SessionHandle *data);
-CURLcode Curl_speedcheck(struct SessionHandle *data,
+void Curl_speedinit(struct Curl_easy *data);
+CURLcode Curl_speedcheck(struct Curl_easy *data,
                          struct timeval now);
 
 #endif /* HEADER_CURL_SPEEDCHECK_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ssh.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ssh.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ssh.c	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ssh.c	2016-07-21 06:31:36.000000000 +0800
@@ -410,13 +410,13 @@
 /* figure out the path to work with in this particular request */
 static CURLcode ssh_getworkingpath(struct connectdata *conn,
                                    char *homedir,  /* when SFTP is used */
                                    char **path) /* returns the  allocated
                                                    real path to work with */
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char *real_path = NULL;
   char *working_path;
   int working_path_len;
 
   working_path = curl_easy_unescape(data, data->state.path, 0,
                                     &working_path_len);
@@ -470,13 +470,13 @@
   *path = real_path;
 
   return CURLE_OK;
 }
 
 #ifdef HAVE_LIBSSH2_KNOWNHOST_API
-static int sshkeycallback(CURL *easy,
+static int sshkeycallback(struct Curl_easy *easy,
                           const struct curl_khkey *knownkey, /* known */
                           const struct curl_khkey *foundkey, /* found */
                           enum curl_khmatch match,
                           void *clientp)
 {
   (void)easy;
@@ -519,13 +519,13 @@
 
 static CURLcode ssh_knownhost(struct connectdata *conn)
 {
   CURLcode result = CURLE_OK;
 
 #ifdef HAVE_LIBSSH2_KNOWNHOST_API
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   if(data->set.str[STRING_SSH_KNOWNHOSTS]) {
     /* we're asked to verify the host against a file */
     struct ssh_conn *sshc = &conn->proto.sshc;
     int rc;
     int keytype;
@@ -654,13 +654,13 @@
   return result;
 }
 
 static CURLcode ssh_check_fingerprint(struct connectdata *conn)
 {
   struct ssh_conn *sshc = &conn->proto.sshc;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   const char *pubkey_md5 = data->set.str[STRING_SSH_HOST_PUBLIC_KEY_MD5];
   char md5buffer[33];
   int i;
 
   const char *fingerprint = libssh2_hostkey_hash(sshc->ssh_session,
       LIBSSH2_HOSTKEY_HASH_MD5);
@@ -705,13 +705,13 @@
  * meaning it wants to be called again when the socket is ready
  */
 
 static CURLcode ssh_statemach_act(struct connectdata *conn, bool *block)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct SSHPROTO *sftp_scp = data->req.protop;
   struct ssh_conn *sshc = &conn->proto.sshc;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   char *new_readdir_line;
   int rc = LIBSSH2_ERROR_NONE;
   int err;
@@ -1158,14 +1158,19 @@
         }
         conn->data->state.most_recent_ftp_entrypath = sshc->homedir;
       }
       else {
         /* Return the error type */
         err = sftp_libssh2_last_error(sshc->sftp_session);
-        result = sftp_libssh2_error_to_CURLE(err);
-        sshc->actualcode = result?result:CURLE_SSH;
+        if(err)
+          result = sftp_libssh2_error_to_CURLE(err);
+        else
+          /* in this case, the error wasn't in the SFTP level but for example
+             a time-out or similar */
+          result = CURLE_SSH;
+        sshc->actualcode = result;
         DEBUGF(infof(data, "error = %d makes libcurl = %d\n",
                      err, (int)result));
         state(conn, SSH_STOP);
         break;
       }
     }
@@ -2816,13 +2821,13 @@
 
 static CURLcode ssh_block_statemach(struct connectdata *conn,
                                    bool duringconnect)
 {
   struct ssh_conn *sshc = &conn->proto.sshc;
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   while((sshc->state != SSH_STOP) && !result) {
     bool block;
     long left;
 
     result = ssh_statemach_act(conn, &block);
@@ -2890,13 +2895,13 @@
 {
 #ifdef CURL_LIBSSH2_DEBUG
   curl_socket_t sock;
 #endif
   struct ssh_conn *ssh;
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* initialize per-handle data if not already */
   if(!data->req.protop)
     ssh_setup_connection(conn);
 
   /* We default to persistent connections. We set this already in this connect
@@ -3016,13 +3021,13 @@
  */
 
 static CURLcode ssh_do(struct connectdata *conn, bool *done)
 {
   CURLcode result;
   bool connected = 0;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssh_conn *sshc = &conn->proto.sshc;
 
   *done = FALSE; /* default to false */
 
   data->req.size = -1; /* make sure this is unknown at this point */
 
@@ -3049,14 +3054,12 @@
 static CURLcode scp_disconnect(struct connectdata *conn, bool dead_connection)
 {
   CURLcode result = CURLE_OK;
   struct ssh_conn *ssh = &conn->proto.sshc;
   (void) dead_connection;
 
-  Curl_safefree(conn->data->req.protop);
-
   if(ssh->ssh_session) {
     /* only if there's a session still around to use! */
 
     state(conn, SSH_SESSION_DISCONNECT);
 
     result = ssh_block_statemach(conn, FALSE);
@@ -3212,14 +3215,12 @@
 {
   CURLcode result = CURLE_OK;
   (void) dead_connection;
 
   DEBUGF(infof(conn->data, "SSH DISCONNECT starts now\n"));
 
-  Curl_safefree(conn->data->req.protop);
-
   if(conn->proto.sshc.ssh_session) {
     /* only if there's a session still around to use! */
     state(conn, SSH_SFTP_SHUTDOWN);
     result = ssh_block_statemach(conn, FALSE);
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ssh.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ssh.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/ssh.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/ssh.h	2016-07-21 06:31:36.000000000 +0800
@@ -95,13 +95,13 @@
   SSH_SESSION_FREE,       /* Last state in SCP/SFTP-DISCONNECT */
   SSH_QUIT,
   SSH_LAST  /* never used */
 } sshstate;
 
 /* this struct is used in the HandleData struct which is part of the
-   SessionHandle, which means this is used on a per-easy handle basis.
+   Curl_easy, which means this is used on a per-easy handle basis.
    Everything that is strictly related to a connection is banned from this
    struct. */
 struct SSHPROTO {
   char *path;                  /* the path we operate on */
 };
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/system_win32.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/system_win32.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/system_win32.c	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/system_win32.c	2016-07-21 06:31:36.000000000 +0800
@@ -21,22 +21,23 @@
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #if defined(WIN32)
 
-#if defined(USE_WINDOWS_SSPI) || (!defined(CURL_DISABLE_TELNET) && \
-                                  defined(USE_WINSOCK))
-
 #include <curl/curl.h>
 #include "system_win32.h"
 
 /* The last #include files should be: */
 #include "curl_memory.h"
 #include "memdebug.h"
 
+#if defined(USE_WINDOWS_SSPI) || (!defined(CURL_DISABLE_TELNET) && \
+                                  defined(USE_WINSOCK))
+
+
 #if !defined(LOAD_WITH_ALTERED_SEARCH_PATH)
 #define LOAD_WITH_ALTERED_SEARCH_PATH  0x00000008
 #endif
 
 #if !defined(LOAD_LIBRARY_SEARCH_SYSTEM32)
 #define LOAD_LIBRARY_SEARCH_SYSTEM32   0x00000800
@@ -53,12 +54,172 @@
 #    define LOADLIBARYEX  "LoadLibraryExW"
 #  endif
 #else
 #  define LOADLIBARYEX    "LoadLibraryExA"
 #endif
 
+#endif /* USE_WINDOWS_SSPI || (!CURL_DISABLE_TELNET && USE_WINSOCK) */
+
+/*
+ * Curl_verify_windows_version()
+ *
+ * This is used to verify if we are running on a specific windows version.
+ *
+ * Parameters:
+ *
+ * majorVersion [in] - The major version number.
+ * minorVersion [in] - The minor version number.
+ * platform     [in] - The optional platform identifer.
+ * condition    [in] - The test condition used to specifier whether we are
+ *                     checking a version less then, equal to or greater than
+ *                     what is specified in the major and minor version
+ *                     numbers.
+ *
+ * Returns TRUE if matched; otherwise FALSE.
+ */
+bool Curl_verify_windows_version(const unsigned int majorVersion,
+                                 const unsigned int minorVersion,
+                                 const PlatformIdentifier platform,
+                                 const VersionCondition condition)
+{
+  bool matched = FALSE;
+
+#if !defined(_WIN32_WINNT) || !defined(_WIN32_WINNT_WIN2K) || \
+    (_WIN32_WINNT < _WIN32_WINNT_WIN2K)
+  OSVERSIONINFO osver;
+
+  memset(&osver, 0, sizeof(osver));
+  osver.dwOSVersionInfoSize = sizeof(osver);
+
+  /* Find out Windows version */
+  if(GetVersionEx(&osver)) {
+    /* Verify the Operating System version number */
+    switch(condition) {
+    case VERSION_LESS_THAN:
+      if(osver.dwMajorVersion < majorVersion ||
+        (osver.dwMajorVersion == majorVersion &&
+         osver.dwMinorVersion < minorVersion))
+        matched = TRUE;
+      break;
+
+    case VERSION_LESS_THAN_EQUAL:
+      if(osver.dwMajorVersion <= majorVersion &&
+         osver.dwMinorVersion <= minorVersion)
+        matched = TRUE;
+      break;
+
+    case VERSION_EQUAL:
+      if(osver.dwMajorVersion == majorVersion &&
+         osver.dwMinorVersion == minorVersion)
+        matched = TRUE;
+      break;
+
+    case VERSION_GREATER_THAN_EQUAL:
+      if(osver.dwMajorVersion >= majorVersion &&
+         osver.dwMinorVersion >= minorVersion)
+        matched = TRUE;
+      break;
+
+    case VERSION_GREATER_THAN:
+      if(osver.dwMajorVersion > majorVersion ||
+        (osver.dwMajorVersion == majorVersion &&
+         osver.dwMinorVersion > minorVersion))
+        matched = TRUE;
+      break;
+    }
+
+    /* Verify the platform identifier (if necessary) */
+    if(matched && platform != PLATFORM_DONT_CARE) {
+      switch(platform) {
+      case PLATFORM_WINDOWS:
+        if(osver.dwPlatformId != VER_PLATFORM_WIN32_WINDOWS)
+          matched = FALSE;
+        break;
+
+      case PLATFORM_WINNT:
+        if(osver.dwPlatformId != VER_PLATFORM_WIN32_NT)
+          matched = FALSE;
+      }
+    }
+  }
+#else
+  ULONGLONG cm = 0;
+  OSVERSIONINFOEX osver;
+  BYTE majorCondition;
+  BYTE minorCondition;
+  BYTE spMajorCondition;
+  BYTE spMinorCondition;
+
+  switch(condition) {
+  case VERSION_LESS_THAN:
+    majorCondition = VER_LESS;
+    minorCondition = VER_LESS;
+    spMajorCondition = VER_LESS_EQUAL;
+    spMinorCondition = VER_LESS_EQUAL;
+    break;
+
+  case VERSION_LESS_THAN_EQUAL:
+    majorCondition = VER_LESS_EQUAL;
+    minorCondition = VER_LESS_EQUAL;
+    spMajorCondition = VER_LESS_EQUAL;
+    spMinorCondition = VER_LESS_EQUAL;
+    break;
+
+  case VERSION_EQUAL:
+    majorCondition = VER_EQUAL;
+    minorCondition = VER_EQUAL;
+    spMajorCondition = VER_GREATER_EQUAL;
+    spMinorCondition = VER_GREATER_EQUAL;
+    break;
+
+  case VERSION_GREATER_THAN_EQUAL:
+    majorCondition = VER_GREATER_EQUAL;
+    minorCondition = VER_GREATER_EQUAL;
+    spMajorCondition = VER_GREATER_EQUAL;
+    spMinorCondition = VER_GREATER_EQUAL;
+    break;
+
+  case VERSION_GREATER_THAN:
+    majorCondition = VER_GREATER;
+    minorCondition = VER_GREATER;
+    spMajorCondition = VER_GREATER_EQUAL;
+    spMinorCondition = VER_GREATER_EQUAL;
+    break;
+
+  default:
+    return FALSE;
+  }
+
+  memset(&osver, 0, sizeof(osver));
+  osver.dwOSVersionInfoSize = sizeof(osver);
+  osver.dwMajorVersion = majorVersion;
+  osver.dwMinorVersion = minorVersion;
+  if(platform == PLATFORM_WINDOWS)
+    osver.dwPlatformId = VER_PLATFORM_WIN32_WINDOWS;
+  else if(platform == PLATFORM_WINNT)
+    osver.dwPlatformId = VER_PLATFORM_WIN32_NT;
+
+  cm = VerSetConditionMask(cm, VER_MAJORVERSION, majorCondition);
+  cm = VerSetConditionMask(cm, VER_MINORVERSION, minorCondition);
+  cm = VerSetConditionMask(cm, VER_SERVICEPACKMAJOR, spMajorCondition);
+  cm = VerSetConditionMask(cm, VER_SERVICEPACKMINOR, spMinorCondition);
+  if(platform != PLATFORM_DONT_CARE)
+    cm = VerSetConditionMask(cm, VER_PLATFORMID, VER_EQUAL);
+
+  if(VerifyVersionInfo(&osver, (VER_MAJORVERSION | VER_MINORVERSION |
+                                VER_SERVICEPACKMAJOR | VER_SERVICEPACKMINOR),
+                       cm))
+    matched = TRUE;
+#endif
+
+  return matched;
+}
+
+#if defined(USE_WINDOWS_SSPI) || (!defined(CURL_DISABLE_TELNET) && \
+                                  defined(USE_WINSOCK))
+
 /*
  * Curl_load_library()
  *
  * This is used to dynamically load DLLs using the most secure method available
  * for the version of Windows that we are running on.
  *
@@ -85,16 +246,18 @@
   pLoadLibraryEx = (LOADLIBRARYEX_FN) GetProcAddress(hKernel32, LOADLIBARYEX);
 
   /* Detect if there's already a path in the filename and load the library if
      there is. Note: Both back slashes and forward slashes have been supported
      since the earlier days of DOS at an API level although they are not
      supported by command prompt */
-  if(_tcspbrk(filename, TEXT("\\/")))
+  if(_tcspbrk(filename, TEXT("\\/"))) {
+    /** !checksrc! disable BANNEDFUNC 1 **/
     hModule = pLoadLibraryEx ?
       pLoadLibraryEx(filename, NULL, LOAD_WITH_ALTERED_SEARCH_PATH) :
       LoadLibrary(filename);
+  }
   /* Detect if KB2533623 is installed, as LOAD_LIBARY_SEARCH_SYSTEM32 is only
      supported on Windows Vista, Windows Server 2008, Windows 7 and Windows
      Server 2008 R2 with this patch or natively on Windows 8 and above */
   else if(pLoadLibraryEx && GetProcAddress(hKernel32, "AddDllDirectory")) {
     /* Load the DLL from the Windows system directory */
     hModule = pLoadLibraryEx(filename, NULL, LOAD_LIBRARY_SEARCH_SYSTEM32);
@@ -110,12 +273,13 @@
       if(path && GetSystemDirectory(path, systemdirlen)) {
         /* Calculate the full DLL path */
         _tcscpy(path + _tcslen(path), TEXT("\\"));
         _tcscpy(path + _tcslen(path), filename);
 
         /* Load the DLL from the Windows system directory */
+        /** !checksrc! disable BANNEDFUNC 1 **/
         hModule = pLoadLibraryEx ?
           pLoadLibraryEx(path, NULL, LOAD_WITH_ALTERED_SEARCH_PATH) :
           LoadLibrary(path);
 
         free(path);
       }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/system_win32.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/system_win32.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/system_win32.h	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/system_win32.h	2016-07-21 06:31:36.000000000 +0800
@@ -23,12 +23,34 @@
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #if defined(WIN32)
 
+/* Version condition */
+typedef enum {
+  VERSION_LESS_THAN,
+  VERSION_LESS_THAN_EQUAL,
+  VERSION_EQUAL,
+  VERSION_GREATER_THAN_EQUAL,
+  VERSION_GREATER_THAN
+} VersionCondition;
+
+/* Platform identifier */
+typedef enum {
+  PLATFORM_DONT_CARE,
+  PLATFORM_WINDOWS,
+  PLATFORM_WINNT
+} PlatformIdentifier;
+
+/* This is used to verify if we are running on a specific windows version */
+bool Curl_verify_windows_version(const unsigned int majorVersion,
+                                 const unsigned int minorVersion,
+                                 const PlatformIdentifier platform,
+                                 const VersionCondition condition);
+
 #if defined(USE_WINDOWS_SSPI) || (!defined(CURL_DISABLE_TELNET) && \
                                   defined(USE_WINSOCK))
 
 /* This is used to dynamically load DLLs */
 HMODULE Curl_load_library(LPCTSTR filename);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/telnet.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/telnet.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/telnet.c	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/telnet.c	2016-07-21 06:31:36.000000000 +0800
@@ -89,32 +89,32 @@
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
 #define printoption(a,b,c,d)  Curl_nop_stmt
 #endif
 
 #ifdef USE_WINSOCK
 typedef FARPROC WSOCK2_FUNC;
-static CURLcode check_wsock2 (struct SessionHandle *data);
+static CURLcode check_wsock2 (struct Curl_easy *data);
 #endif
 
 static
 CURLcode telrcv(struct connectdata *,
                 const unsigned char *inbuf, /* Data received from socket */
                 ssize_t count);             /* Number of bytes received */
 
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-static void printoption(struct SessionHandle *data,
+static void printoption(struct Curl_easy *data,
                         const char *direction,
                         int cmd, int option);
 #endif
 
 static void negotiate(struct connectdata *);
 static void send_negotiation(struct connectdata *, int cmd, int option);
 static void set_local_option(struct connectdata *, int cmd, int option);
 static void set_remote_option(struct connectdata *, int cmd, int option);
 
-static void printsub(struct SessionHandle *data,
+static void printsub(struct Curl_easy *data,
                      int direction, unsigned char *pointer,
                      size_t length);
 static void suboption(struct connectdata *);
 static void sendsuboption(struct connectdata *conn, int option);
 
 static CURLcode telnet_do(struct connectdata *conn, bool *done);
@@ -196,13 +196,13 @@
   PROTOPT_NONE | PROTOPT_NOURLQUERY     /* flags */
 };
 
 
 #ifdef USE_WINSOCK
 static CURLcode
-check_wsock2(struct SessionHandle *data)
+check_wsock2(struct Curl_easy *data)
 {
   int err;
   WORD wVersionRequested;
   WSADATA wsaData;
 
   DEBUGASSERT(data);
@@ -303,13 +303,13 @@
     if(tn->him_preferred[i] == CURL_YES)
       set_remote_option(conn, i, CURL_YES);
   }
 }
 
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-static void printoption(struct SessionHandle *data,
+static void printoption(struct Curl_easy *data,
                         const char *direction, int cmd, int option)
 {
   const char *fmt;
   const char *opt;
 
   if(data->set.verbose) {
@@ -344,13 +344,13 @@
 
 static void send_negotiation(struct connectdata *conn, int cmd, int option)
 {
    unsigned char buf[3];
    ssize_t bytes_written;
    int err;
-   struct SessionHandle *data = conn->data;
+   struct Curl_easy *data = conn->data;
 
    buf[0] = CURL_IAC;
    buf[1] = (unsigned char)cmd;
    buf[2] = (unsigned char)option;
 
    bytes_written = swrite(conn->sock[FIRSTSOCKET], buf, 3);
@@ -700,13 +700,13 @@
     }
     break;
   }
 }
 
 
-static void printsub(struct SessionHandle *data,
+static void printsub(struct Curl_easy *data,
                      int direction,             /* '<' or '>' */
                      unsigned char *pointer,    /* where suboption data is */
                      size_t length)             /* length of suboption data */
 {
   unsigned int i = 0;
 
@@ -819,13 +819,13 @@
 static CURLcode check_telnet_options(struct connectdata *conn)
 {
   struct curl_slist *head;
   struct curl_slist *beg;
   char option_keyword[128] = "";
   char option_arg[256] = "";
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct TELNET *tn = (struct TELNET *)conn->data->req.protop;
   CURLcode result = CURLE_OK;
   int binary_option;
 
   /* Add the user name as an environment variable if it
      was given on the command line */
@@ -929,13 +929,13 @@
   ssize_t bytes_written;
   size_t len;
   size_t tmplen;
   int err;
   char varname[128] = "";
   char varval[128] = "";
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct TELNET *tn = (struct TELNET *)data->req.protop;
 
   printsub(data, '<', (unsigned char *)tn->subbuffer, CURL_SB_LEN(tn)+2);
   switch (CURL_SB_GET(tn)) {
     case CURL_TELOPT_TTYPE:
       len = strlen(tn->subopt_ttype) + 4 + 2;
@@ -1004,13 +1004,13 @@
 {
   ssize_t bytes_written;
   int err;
   unsigned short x, y;
   unsigned char*uc1, *uc2;
 
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct TELNET *tn = (struct TELNET *)data->req.protop;
 
   switch (option) {
   case CURL_TELOPT_NAWS:
     /* We prepare data to be sent */
     CURL_SB_CLEAR(tn);
@@ -1062,13 +1062,13 @@
                 ssize_t count)              /* Number of bytes received */
 {
   unsigned char c;
   CURLcode result;
   int in = 0;
   int startwrite=-1;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct TELNET *tn = (struct TELNET *)data->req.protop;
 
 #define startskipping()                                       \
   if(startwrite >= 0) {                                       \
     result = Curl_client_write(conn,                          \
                                CLIENTWRITE_BODY,              \
@@ -1279,13 +1279,13 @@
   return CURLE_OK;
 }
 
 static CURLcode telnet_do(struct connectdata *conn, bool *done)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sockfd = conn->sock[FIRSTSOCKET];
 #ifdef USE_WINSOCK
   HMODULE wsock2;
   WSOCK2_FUNC close_event_func;
   WSOCK2_FUNC create_event_func;
   WSOCK2_FUNC event_select_func;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/tftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/tftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/tftp.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/tftp.c	2016-07-21 06:31:36.000000000 +0800
@@ -330,13 +330,13 @@
 }
 
 static CURLcode tftp_parse_option_ack(tftp_state_data_t *state,
                                       const char *ptr, int len)
 {
   const char *tmp = ptr;
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
 
   /* if OACK doesn't contain blksize option, the default (512) must be used */
   state->blksize = TFTP_BLKSIZE_DEFAULT;
 
   while(tmp < ptr + len) {
     const char *option, *value;
@@ -413,13 +413,13 @@
 
 static CURLcode tftp_connect_for_tx(tftp_state_data_t *state,
                                     tftp_event_t event)
 {
   CURLcode result;
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
 
   infof(data, "%s\n", "Connected for transmit");
 #endif
   state->state = TFTP_STATE_TX;
   result = tftp_set_timeouts(state);
   if(result)
@@ -429,13 +429,13 @@
 
 static CURLcode tftp_connect_for_rx(tftp_state_data_t *state,
                                     tftp_event_t event)
 {
   CURLcode result;
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
 
   infof(data, "%s\n", "Connected for receive");
 #endif
   state->state = TFTP_STATE_RX;
   result = tftp_set_timeouts(state);
   if(result)
@@ -447,13 +447,13 @@
 {
   size_t sbytes;
   ssize_t senddata;
   const char *mode = "octet";
   char *filename;
   char buf[64];
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
   CURLcode result = CURLE_OK;
 
   /* Set ascii mode if -B flag was used */
   if(data->set.prefer_ascii)
     mode = "netascii";
 
@@ -578,13 +578,13 @@
  *
  **********************************************************/
 static CURLcode tftp_rx(tftp_state_data_t *state, tftp_event_t event)
 {
   ssize_t sbytes;
   int rblock;
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
 
   switch(event) {
 
   case TFTP_EVENT_DATA:
     /* Is this the block we expect? */
     rblock = getrpacketblock(&state->rpacket);
@@ -697,13 +697,13 @@
  *
  * Event handler for the TX state
  *
  **********************************************************/
 static CURLcode tftp_tx(tftp_state_data_t *state, tftp_event_t event)
 {
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
   ssize_t sbytes;
   int rblock;
   CURLcode result = CURLE_OK;
   struct SingleRequest *k = &data->req;
 
   switch(event) {
@@ -886,13 +886,13 @@
  *
  **********************************************************/
 static CURLcode tftp_state_machine(tftp_state_data_t *state,
                                    tftp_event_t event)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = state->conn->data;
+  struct Curl_easy *data = state->conn->data;
 
   switch(state->state) {
   case TFTP_STATE_START:
     DEBUGF(infof(data, "TFTP_STATE_START\n"));
     result = tftp_send_first(state, event);
     break;
@@ -1078,13 +1078,13 @@
  **********************************************************/
 static CURLcode tftp_receive_packet(struct connectdata *conn)
 {
   struct Curl_sockaddr_storage fromaddr;
   curl_socklen_t        fromlen;
   CURLcode              result = CURLE_OK;
-  struct SessionHandle  *data = conn->data;
+  struct Curl_easy  *data = conn->data;
   tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
   struct SingleRequest  *k = &data->req;
 
   /* Receive the packet */
   fromlen = sizeof(fromaddr);
   state->rbytes = (int)recvfrom(state->sockfd,
@@ -1197,13 +1197,13 @@
  **********************************************************/
 static CURLcode tftp_multi_statemach(struct connectdata *conn, bool *done)
 {
   int                   rc;
   tftp_event_t          event;
   CURLcode              result = CURLE_OK;
-  struct SessionHandle  *data = conn->data;
+  struct Curl_easy  *data = conn->data;
   tftp_state_data_t     *state = (tftp_state_data_t *)conn->proto.tftpc;
   long                  timeout_ms = tftp_state_timeout(conn, &event);
 
   *done = FALSE;
 
   if(timeout_ms <= 0) {
@@ -1339,13 +1339,13 @@
 
   return result;
 }
 
 static CURLcode tftp_setup_connection(struct connectdata * conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   char * type;
   char command;
 
   conn->socktype = SOCK_DGRAM;   /* UDP datagram based */
 
   /* TFTP URLs support an extension like ";mode=<typecode>" that
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/transfer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/transfer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/transfer.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/transfer.c	2016-07-21 06:31:36.000000000 +0800
@@ -84,13 +84,13 @@
 /*
  * This function will call the read callback to fill our buffer with data
  * to upload.
  */
 CURLcode Curl_fillreadbuffer(struct connectdata *conn, int bytes, int *nreadp)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   size_t buffersize = (size_t)bytes;
   int nread;
 #ifdef CURL_DOES_CONVERSIONS
   bool sending_http_headers = FALSE;
 
   if(conn->handler->protocol&(PROTO_FAMILY_HTTP|CURLPROTO_RTSP)) {
@@ -239,13 +239,13 @@
  * Curl_readrewind() rewinds the read stream. This is typically used for HTTP
  * POST/PUT with multi-pass authentication when a sending was denied and a
  * resend is necessary.
  */
 CURLcode Curl_readrewind(struct connectdata *conn)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   conn->bits.rewindaftersend = FALSE; /* we rewind now */
 
   /* explicitly switch off sending data on this connection now since we are
      about to restart a new transfer and thus we want to avoid inadvertently
      sending more data on the existing connection until the next transfer
@@ -349,13 +349,13 @@
 }
 
 /*
  * Check to see if CURLOPT_TIMECONDITION was met by comparing the time of the
  * remote document with the time provided by CURLOPT_TIMEVAL
  */
-bool Curl_meets_timecondition(struct SessionHandle *data, time_t timeofdoc)
+bool Curl_meets_timecondition(struct Curl_easy *data, time_t timeofdoc)
 {
   if((timeofdoc == 0) || (data->set.timevalue == 0))
     return TRUE;
 
   switch(data->set.timecondition) {
   case CURL_TIMECOND_IFMODSINCE:
@@ -382,13 +382,13 @@
 
 /*
  * Go ahead and do a read if we have a readable socket or if
  * the stream was rewound (in which case we have data in a
  * buffer)
  */
-static CURLcode readwrite_data(struct SessionHandle *data,
+static CURLcode readwrite_data(struct Curl_easy *data,
                                struct connectdata *conn,
                                struct SingleRequest *k,
                                int *didwhat, bool *done)
 {
   CURLcode result = CURLE_OK;
   ssize_t nread; /* number of bytes read */
@@ -830,13 +830,13 @@
 }
 
 
 /*
  * Send data to upload to the server, when the socket is writable.
  */
-static CURLcode readwrite_upload(struct SessionHandle *data,
+static CURLcode readwrite_upload(struct Curl_easy *data,
                                  struct connectdata *conn,
                                  struct SingleRequest *k,
                                  int *didwhat)
 {
   ssize_t i, si;
   ssize_t bytes_written;
@@ -1028,13 +1028,13 @@
 
 /*
  * Curl_readwrite() is the low-level function to be called when data is to
  * be read and written to/from the connection.
  */
 CURLcode Curl_readwrite(struct connectdata *conn,
-                        struct SessionHandle *data,
+                        struct Curl_easy *data,
                         bool *done)
 {
   struct SingleRequest *k = &data->req;
   CURLcode result;
   int didwhat=0;
 
@@ -1205,13 +1205,13 @@
  */
 int Curl_single_getsock(const struct connectdata *conn,
                         curl_socket_t *sock, /* points to numsocks number
                                                 of sockets */
                         int numsocks)
 {
-  const struct SessionHandle *data = conn->data;
+  const struct Curl_easy *data = conn->data;
   int bitmap = GETSOCK_BLANK;
   unsigned sockindex = 0;
 
   if(conn->handler->perform_getsock)
     return conn->handler->perform_getsock(conn, sock, numsocks);
 
@@ -1302,24 +1302,24 @@
 
   return (long)rv;
 }
 
 /* Curl_init_CONNECT() gets called each time the handle switches to CONNECT
    which means this gets called once for each subsequent redirect etc */
-void Curl_init_CONNECT(struct SessionHandle *data)
+void Curl_init_CONNECT(struct Curl_easy *data)
 {
   data->state.fread_func = data->set.fread_func_set;
   data->state.in = data->set.in_set;
 }
 
 /*
  * Curl_pretransfer() is called immediately before a transfer starts, and only
  * once for one transfer no matter if it has redirects or do multi-pass
  * authentication etc.
  */
-CURLcode Curl_pretransfer(struct SessionHandle *data)
+CURLcode Curl_pretransfer(struct Curl_easy *data)
 {
   CURLcode result;
   if(!data->change.url) {
     /* we can't do anything without URL */
     failf(data, "No URL set!");
     return CURLE_URL_MALFORMAT;
@@ -1400,13 +1400,13 @@
   return result;
 }
 
 /*
  * Curl_posttransfer() is called immediately after a transfer ends
  */
-CURLcode Curl_posttransfer(struct SessionHandle *data)
+CURLcode Curl_posttransfer(struct Curl_easy *data)
 {
 #if defined(HAVE_SIGNAL) && defined(SIGPIPE) && !defined(HAVE_MSG_NOSIGNAL)
   /* restore the signal handler for SIGPIPE before we get back */
   if(!data->set.no_signal)
     signal(SIGPIPE, data->state.prev_signal);
 #else
@@ -1657,13 +1657,13 @@
 #endif /* CURL_DISABLE_HTTP */
 
 /*
  * Curl_follow() handles the URL redirect magic. Pass in the 'newurl' string
  * as given by the remote server and set up the new URL to request.
  */
-CURLcode Curl_follow(struct SessionHandle *data,
+CURLcode Curl_follow(struct Curl_easy *data,
                      char *newurl, /* this 'newurl' is the Location: string,
                                       and it must be malloc()ed before passed
                                       here */
                      followtype type) /* see transfer.h */
 {
 #ifdef CURL_DISABLE_HTTP
@@ -1861,13 +1861,13 @@
 /* Returns CURLE_OK *and* sets '*url' if a request retry is wanted.
 
    NOTE: that the *url is malloc()ed. */
 CURLcode Curl_retry_request(struct connectdata *conn,
                             char **url)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   *url = NULL;
 
   /* if we're talking upload, we can't do the checks below, unless the protocol
      is HTTP as when uploading over HTTP we will still get a response */
   if(data->set.upload &&
@@ -1917,13 +1917,13 @@
   curl_off_t *bytecountp,   /* return number of bytes read or NULL */
   int writesockindex,       /* socket index to write to, it may very well be
                                the same we read from. -1 disables */
   curl_off_t *writecountp   /* return number of bytes written or NULL */
   )
 {
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   struct SingleRequest *k;
 
   DEBUGASSERT(conn != NULL);
 
   data = conn->data;
   k = &data->req;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/transfer.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/transfer.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/transfer.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/transfer.h	2016-07-21 06:31:36.000000000 +0800
@@ -19,41 +19,41 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
-void Curl_init_CONNECT(struct SessionHandle *data);
+void Curl_init_CONNECT(struct Curl_easy *data);
 
-CURLcode Curl_pretransfer(struct SessionHandle *data);
+CURLcode Curl_pretransfer(struct Curl_easy *data);
 CURLcode Curl_second_connect(struct connectdata *conn);
-CURLcode Curl_posttransfer(struct SessionHandle *data);
+CURLcode Curl_posttransfer(struct Curl_easy *data);
 
 typedef enum {
   FOLLOW_NONE,  /* not used within the function, just a placeholder to
                    allow initing to this */
   FOLLOW_FAKE,  /* only records stuff, not actually following */
   FOLLOW_RETRY, /* set if this is a request retry as opposed to a real
                           redirect following */
   FOLLOW_REDIR, /* a full true redirect */
   FOLLOW_LAST   /* never used */
 } followtype;
 
-CURLcode Curl_follow(struct SessionHandle *data, char *newurl,
+CURLcode Curl_follow(struct Curl_easy *data, char *newurl,
                      followtype type);
 
 
 CURLcode Curl_readwrite(struct connectdata *conn,
-                        struct SessionHandle *data, bool *done);
+                        struct Curl_easy *data, bool *done);
 int Curl_single_getsock(const struct connectdata *conn,
                         curl_socket_t *socks,
                         int numsocks);
 CURLcode Curl_readrewind(struct connectdata *conn);
 CURLcode Curl_fillreadbuffer(struct connectdata *conn, int bytes, int *nreadp);
 CURLcode Curl_retry_request(struct connectdata *conn, char **url);
-bool Curl_meets_timecondition(struct SessionHandle *data, time_t timeofdoc);
+bool Curl_meets_timecondition(struct Curl_easy *data, time_t timeofdoc);
 
 /* This sets up a forthcoming transfer */
 void
 Curl_setup_transfer (struct connectdata *data,
                int sockindex,           /* socket index to read from or -1 */
                curl_off_t size,         /* -1 if unknown at this point */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/url.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/url.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/url.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/url.c	2016-07-21 06:31:36.000000000 +0800
@@ -134,18 +134,18 @@
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 /* Local static prototypes */
 static struct connectdata *
-find_oldest_idle_connection_in_bundle(struct SessionHandle *data,
+find_oldest_idle_connection_in_bundle(struct Curl_easy *data,
                                       struct connectbundle *bundle);
 static void conn_free(struct connectdata *conn);
 static void free_fixed_hostname(struct hostname *host);
 static void signalPipeClose(struct curl_llist *pipeline, bool pipe_broke);
-static CURLcode parse_url_login(struct SessionHandle *data,
+static CURLcode parse_url_login(struct Curl_easy *data,
                                 struct connectdata *conn,
                                 char **userptr, char **passwdptr,
                                 char **optionsptr);
 static CURLcode parse_login_details(const char *login, const size_t len,
                                     char **userptr, char **passwdptr,
                                     char **optionsptr);
@@ -274,13 +274,13 @@
   ZERO_NULL,                            /* readwrite */
   0,                                    /* defport */
   0,                                    /* protocol */
   PROTOPT_NONE                          /* flags */
 };
 
-void Curl_freeset(struct SessionHandle *data)
+void Curl_freeset(struct Curl_easy *data)
 {
   /* Free all dynamic strings stored in the data->set substructure. */
   enum dupstring i;
   for(i=(enum dupstring)0; i < STRING_LAST; i++) {
     Curl_safefree(data->set.str[i]);
   }
@@ -352,13 +352,13 @@
     }
   }
 
   return result;
 }
 
-CURLcode Curl_dupset(struct SessionHandle *dst, struct SessionHandle *src)
+CURLcode Curl_dupset(struct Curl_easy *dst, struct Curl_easy *src)
 {
   CURLcode result = CURLE_OK;
   enum dupstring i;
 
   /* Copy src->set into dst->set first, then deal with the strings
      afterwards */
@@ -395,13 +395,13 @@
  *
  * NOTE: if we ever add something that attempts to write to a socket or
  * similar here, we must ignore SIGPIPE first. It is currently only done
  * when curl_easy_perform() is invoked.
  */
 
-CURLcode Curl_close(struct SessionHandle *data)
+CURLcode Curl_close(struct Curl_easy *data)
 {
   struct Curl_multi *m;
 
   if(!data)
     return CURLE_OK;
 
@@ -493,14 +493,14 @@
   Curl_freeset(data);
   free(data);
   return CURLE_OK;
 }
 
 /*
- * Initialize the UserDefined fields within a SessionHandle.
- * This may be safely called on a new or existing SessionHandle.
+ * Initialize the UserDefined fields within a Curl_easy.
+ * This may be safely called on a new or existing Curl_easy.
  */
 CURLcode Curl_init_userdefined(struct UserDefined *set)
 {
   CURLcode result = CURLE_OK;
 
   set->out = stdout; /* default output to stdout */
@@ -618,22 +618,22 @@
  *
  * @param curl is a pointer to a sessionhandle pointer that gets set by this
  * function.
  * @return CURLcode
  */
 
-CURLcode Curl_open(struct SessionHandle **curl)
+CURLcode Curl_open(struct Curl_easy **curl)
 {
   CURLcode result;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
 
   /* Very simple start-up: alloc the struct, init it with zeroes and return */
-  data = calloc(1, sizeof(struct SessionHandle));
+  data = calloc(1, sizeof(struct Curl_easy));
   if(!data) {
     /* this is a very serious error */
-    DEBUGF(fprintf(stderr, "Error: calloc of SessionHandle failed\n"));
+    DEBUGF(fprintf(stderr, "Error: calloc of Curl_easy failed\n"));
     return CURLE_OUT_OF_MEMORY;
   }
 
   data->magic = CURLEASY_MAGIC_NUMBER;
 
   result = Curl_resolver_init(&data->state.resolver);
@@ -681,13 +681,13 @@
   else
     *curl = data;
 
   return result;
 }
 
-CURLcode Curl_setopt(struct SessionHandle *data, CURLoption option,
+CURLcode Curl_setopt(struct Curl_easy *data, CURLoption option,
                      va_list param)
 {
   char *argptr;
   CURLcode result = CURLE_OK;
   long arg;
 #ifndef CURL_DISABLE_HTTP
@@ -2681,13 +2681,13 @@
   case CURLOPT_STREAM_DEPENDS:
   case CURLOPT_STREAM_DEPENDS_E:
   {
 #ifndef USE_NGHTTP2
     return CURLE_NOT_BUILT_IN;
 #else
-    struct SessionHandle *dep = va_arg(param, struct SessionHandle *);
+    struct Curl_easy *dep = va_arg(param, struct Curl_easy *);
     if(dep && GOOD_EASY_HANDLE(dep)) {
       data->set.stream_depends_on = dep;
       data->set.stream_depends_e = (option == CURLOPT_STREAM_DEPENDS_E);
     }
     break;
 #endif
@@ -2809,20 +2809,20 @@
 
 /*
  * Disconnects the given connection. Note the connection may not be the
  * primary connection, like when freeing room in the connection cache or
  * killing of a dead old connection.
  *
- * This function MUST NOT reset state in the SessionHandle struct if that
+ * This function MUST NOT reset state in the Curl_easy struct if that
  * isn't strictly bound to the life-time of *this* particular connection.
  *
  */
 
 CURLcode Curl_disconnect(struct connectdata *conn, bool dead_connection)
 {
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   if(!conn)
     return CURLE_OK; /* this is closed and fine already */
   data = conn->data;
 
   if(!data) {
     DEBUGF(fprintf(stderr, "DISCONNECT without easy handle, ignoring\n"));
@@ -2885,13 +2885,13 @@
 }
 
 /*
  * IsPipeliningPossible() returns TRUE if the options set would allow
  * pipelining/multiplexing and the connection is using a HTTP protocol.
  */
-static bool IsPipeliningPossible(const struct SessionHandle *handle,
+static bool IsPipeliningPossible(const struct Curl_easy *handle,
                                  const struct connectdata *conn)
 {
   /* If a HTTP protocol and pipelining is enabled */
   if(conn->handler->protocol & PROTO_FAMILY_HTTP) {
 
     if(Curl_pipeline_wanted(handle->multi, CURLPIPE_HTTP1) &&
@@ -2906,13 +2906,13 @@
       /* allows HTTP/2 */
       return TRUE;
   }
   return FALSE;
 }
 
-int Curl_removeHandleFromPipeline(struct SessionHandle *handle,
+int Curl_removeHandleFromPipeline(struct Curl_easy *handle,
                                   struct curl_llist *pipeline)
 {
   if(pipeline) {
     struct curl_llist_element *curr;
 
     curr = pipeline->head;
@@ -2932,32 +2932,32 @@
 static void Curl_printPipeline(struct curl_llist *pipeline)
 {
   struct curl_llist_element *curr;
 
   curr = pipeline->head;
   while(curr) {
-    struct SessionHandle *data = (struct SessionHandle *) curr->ptr;
+    struct Curl_easy *data = (struct Curl_easy *) curr->ptr;
     infof(data, "Handle in pipeline: %s\n", data->state.path);
     curr = curr->next;
   }
 }
 #endif
 
-static struct SessionHandle* gethandleathead(struct curl_llist *pipeline)
+static struct Curl_easy* gethandleathead(struct curl_llist *pipeline)
 {
   struct curl_llist_element *curr = pipeline->head;
   if(curr) {
-    return (struct SessionHandle *) curr->ptr;
+    return (struct Curl_easy *) curr->ptr;
   }
 
   return NULL;
 }
 
 /* remove the specified connection from all (possible) pipelines and related
    queues */
-void Curl_getoff_all_pipelines(struct SessionHandle *data,
+void Curl_getoff_all_pipelines(struct Curl_easy *data,
                                struct connectdata *conn)
 {
   bool recv_head = (conn->readchannel_inuse &&
                     Curl_recvpipe_head(data, conn));
   bool send_head = (conn->writechannel_inuse &&
                     Curl_sendpipe_head(data, conn));
@@ -2975,13 +2975,13 @@
   if(!pipeline)
     return;
 
   curr = pipeline->head;
   while(curr) {
     struct curl_llist_element *next = curr->next;
-    struct SessionHandle *data = (struct SessionHandle *) curr->ptr;
+    struct Curl_easy *data = (struct Curl_easy *) curr->ptr;
 
 #ifdef DEBUGBUILD /* debug-only code */
     if(data->magic != CURLEASY_MAGIC_NUMBER) {
       /* MAJOR BADNESS */
       infof(data, "signalPipeClose() found BAAD easy handle\n");
     }
@@ -3000,13 +3000,13 @@
  * cache that has been unused for the longest time.
  *
  * Returns the pointer to the oldest idle connection, or NULL if none was
  * found.
  */
 struct connectdata *
-Curl_oldest_idle_connection(struct SessionHandle *data)
+Curl_oldest_idle_connection(struct Curl_easy *data)
 {
   struct conncache *bc = data->state.conn_cache;
   struct curl_hash_iterator iter;
   struct curl_llist_element *curr;
   struct curl_hash_element *he;
   long highscore=-1;
@@ -3052,13 +3052,13 @@
  * bundle that has been unused for the longest time.
  *
  * Returns the pointer to the oldest idle connection, or NULL if none was
  * found.
  */
 static struct connectdata *
-find_oldest_idle_connection_in_bundle(struct SessionHandle *data,
+find_oldest_idle_connection_in_bundle(struct Curl_easy *data,
                                       struct connectbundle *bundle)
 {
   struct curl_llist_element *curr;
   long highscore=-1;
   long score;
   struct timeval now;
@@ -3092,13 +3092,13 @@
  * This function checks if given connection is dead and disconnects if so.
  * (That also removes it from the connection cache.)
  *
  * Returns TRUE if the connection actually was dead and disconnected.
  */
 static bool disconnect_if_dead(struct connectdata *conn,
-                               struct SessionHandle *data)
+                               struct Curl_easy *data)
 {
   size_t pipeLen = conn->send_pipe->size + conn->recv_pipe->size;
   if(!pipeLen && !conn->inuse) {
     /* The check for a dead socket makes sense only if there are no
        handles in pipeline and the connection isn't already marked in
        use */
@@ -3126,23 +3126,23 @@
  *
  * Returns always 0.
  */
 static int call_disconnect_if_dead(struct connectdata *conn,
                                       void *param)
 {
-  struct SessionHandle* data = (struct SessionHandle*)param;
+  struct Curl_easy* data = (struct Curl_easy*)param;
   disconnect_if_dead(conn, data);
   return 0; /* continue iteration */
 }
 
 /*
  * This function scans the connection cache for half-open/dead connections,
  * closes and removes them.
  * The cleanup is done at most once per second.
  */
-static void prune_dead_connections(struct SessionHandle *data)
+static void prune_dead_connections(struct Curl_easy *data)
 {
   struct timeval now = Curl_tvnow();
   long elapsed = Curl_tvdiff(now, data->state.conn_cache->last_cleanup);
 
   if(elapsed >= 1000L) {
     Curl_conncache_foreach(data->state.conn_cache, data,
@@ -3168,13 +3168,13 @@
  * return back to 'idle' (unused) state.
  *
  * The force_reuse flag is set if the connection must be used, even if
  * the pipelining strategy wants to open a new connection instead of reusing.
  */
 static bool
-ConnectionExists(struct SessionHandle *data,
+ConnectionExists(struct Curl_easy *data,
                  struct connectdata *needle,
                  struct connectdata **usethis,
                  bool *force_reuse,
                  bool *waitpipe)
 {
   struct connectdata *check;
@@ -3267,14 +3267,14 @@
       pipeLen = check->send_pipe->size + check->recv_pipe->size;
 
       if(canPipeline) {
 
         if(!check->bits.multiplex) {
           /* If not multiplexing, make sure the pipe has only GET requests */
-          struct SessionHandle* sh = gethandleathead(check->send_pipe);
-          struct SessionHandle* rh = gethandleathead(check->recv_pipe);
+          struct Curl_easy* sh = gethandleathead(check->send_pipe);
+          struct Curl_easy* rh = gethandleathead(check->recv_pipe);
           if(sh) {
             if(!IsPipeliningPossible(sh, check))
               continue;
           }
           else if(rh) {
             if(!IsPipeliningPossible(rh, check))
@@ -3753,13 +3753,13 @@
 }
 
 #ifdef USE_LIBIDN
 /*
  * Check if characters in hostname is allowed in Top Level Domain.
  */
-static bool tld_check_name(struct SessionHandle *data,
+static bool tld_check_name(struct Curl_easy *data,
                            const char *ace_hostname)
 {
   size_t err_pos;
   char *uc_name = NULL;
   int rc;
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
@@ -3795,13 +3795,13 @@
 }
 #endif
 
 /*
  * Perform any necessary IDN conversion of hostname
  */
-static void fix_hostname(struct SessionHandle *data,
+static void fix_hostname(struct Curl_easy *data,
                          struct connectdata *conn, struct hostname *host)
 {
   size_t len;
 
 #ifndef USE_LIBIDN
   (void)data;
@@ -3884,13 +3884,13 @@
   /* Do nothing */
 }
 
 /*
  * Allocate and initialize a new connectdata object.
  */
-static struct connectdata *allocate_conn(struct SessionHandle *data)
+static struct connectdata *allocate_conn(struct Curl_easy *data)
 {
   struct connectdata *conn = calloc(1, sizeof(struct connectdata));
   if(!conn)
     return NULL;
 
   conn->handler = &Curl_handler_dummy;  /* Be sure we have a handler defined
@@ -3917,13 +3917,13 @@
   connclose(conn, "Default to force-close");
 
   /* Store creation time to help future close decision making */
   conn->created = Curl_tvnow();
 
   conn->data = data; /* Setup the association between this connection
-                        and the SessionHandle */
+                        and the Curl_easy */
 
   conn->proxytype = data->set.proxytype; /* type */
 
 #ifdef CURL_DISABLE_PROXY
 
   conn->bits.proxy = FALSE;
@@ -3989,13 +3989,13 @@
       goto error;
   }
   conn->localportrange = data->set.localportrange;
   conn->localport = data->set.localport;
 
   /* the close socket stuff needs to be copied to the connection struct as
-     it may live on without (this specific) SessionHandle */
+     it may live on without (this specific) Curl_easy */
   conn->fclosesocket = data->set.fclosesocket;
   conn->closesocket_client = data->set.closesocket_client;
 
   return conn;
   error:
 
@@ -4008,13 +4008,13 @@
   free(conn->master_buffer);
   free(conn->localdev);
   free(conn);
   return NULL;
 }
 
-static CURLcode findprotocol(struct SessionHandle *data,
+static CURLcode findprotocol(struct Curl_easy *data,
                              struct connectdata *conn,
                              const char *protostr)
 {
   const struct Curl_handler * const *pp;
   const struct Curl_handler *p;
 
@@ -4053,13 +4053,13 @@
   return CURLE_UNSUPPORTED_PROTOCOL;
 }
 
 /*
  * Parse URL and fill in the relevant members of the connection struct.
  */
-static CURLcode parseurlandfillconn(struct SessionHandle *data,
+static CURLcode parseurlandfillconn(struct Curl_easy *data,
                                     struct connectdata *conn,
                                     bool *prot_missing,
                                     char **userp, char **passwdp,
                                     char **optionsp)
 {
   char *at;
@@ -4138,18 +4138,23 @@
     }
 
     protop = "file"; /* protocol string */
   }
   else {
     /* clear path */
+    char slashbuf[4];
     path[0]=0;
 
-    if(2 > sscanf(data->change.url,
-                   "%15[^\n:]://%[^\n/?]%[^\n]",
-                   protobuf,
-                   conn->host.name, path)) {
+    rc = sscanf(data->change.url,
+                "%15[^\n:]:%3[/]%[^\n/?]%[^\n]",
+                protobuf, slashbuf, conn->host.name, path);
+    if(2 == rc) {
+      failf(data, "Bad URL");
+      return CURLE_URL_MALFORMAT;
+    }
+    if(3 > rc) {
 
       /*
        * The URL was badly formatted, let's try the browser-style _without_
        * protocol specified like 'http://'.
        */
       rc = sscanf(data->change.url, "%[^\n/?]%[^\n]", conn->host.name, path);
@@ -4194,14 +4199,29 @@
         else
           protop = "http";
       }
 
       *prot_missing = TRUE; /* not given in URL */
     }
-    else
+    else {
+      size_t s = strlen(slashbuf);
       protop = protobuf;
+      if(s != 2) {
+        infof(data, "Unwillingly accepted illegal URL using %d slash%s!\n",
+              s, s>1?"es":"");
+
+        if(data->change.url_alloc)
+          free(data->change.url);
+        /* repair the URL to use two slashes */
+        data->change.url = aprintf("%s://%s%s",
+                                   protobuf, conn->host.name, path);
+        if(!data->change.url)
+          return CURLE_OUT_OF_MEMORY;
+        data->change.url_alloc = TRUE;
+      }
+    }
   }
 
   /* We search for '?' in the host name (but only on the right side of a
    * @-letter to allow ?-letters in username and password) to handle things
    * like http://example.com?param= (notice the missing '/').
    */
@@ -4401,13 +4421,13 @@
 }
 
 /*
  * If we're doing a resumed transfer, we need to setup our stuff
  * properly.
  */
-static CURLcode setup_range(struct SessionHandle *data)
+static CURLcode setup_range(struct Curl_easy *data)
 {
   struct UrlState *s = &data->state;
   s->resume_from = data->set.set_resume_from;
   if(s->resume_from || data->set.str[STRING_SET_RANGE]) {
     if(s->rangestringalloc)
       free(s->range);
@@ -4433,22 +4453,22 @@
 
 
 /*
  * setup_connection_internals() -
  *
  * Setup connection internals specific to the requested protocol in the
- * SessionHandle. This is inited and setup before the connection is made but
+ * Curl_easy. This is inited and setup before the connection is made but
  * is about the particular protocol that is to be used.
  *
  * This MUST get called after proxy magic has been figured out.
  */
 static CURLcode setup_connection_internals(struct connectdata *conn)
 {
   const struct Curl_handler * p;
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   /* in some case in the multi state-machine, we go back to the CONNECT state
      and then a second (or third or...) call to this function will be made
      without doing a DISCONNECT or DONE in between (since the connection is
      yet in place) and therefore this function needs to first make sure
      there's no lingering previous data allocated. */
@@ -4478,16 +4498,16 @@
 
   return CURLE_OK;
 }
 
 /*
  * Curl_free_request_state() should free temp data that was allocated in the
- * SessionHandle for this single request.
+ * Curl_easy for this single request.
  */
 
-void Curl_free_request_state(struct SessionHandle *data)
+void Curl_free_request_state(struct Curl_easy *data)
 {
   Curl_safefree(data->req.protop);
   Curl_safefree(data->req.newurl);
 }
 
 
@@ -4655,13 +4675,13 @@
 
 /*
  * If this is supposed to use a proxy, we need to figure out the proxy
  * host name, so that we can re-use an existing connection
  * that may exist registered to the same proxy host.
  */
-static CURLcode parse_proxy(struct SessionHandle *data,
+static CURLcode parse_proxy(struct Curl_easy *data,
                             struct connectdata *conn, char *proxy)
 {
   char *prox_portno;
   char *endofprot;
 
   /* We use 'proxyptr' to point to the proxy name from now on... */
@@ -4818,13 +4838,13 @@
   return CURLE_OK;
 }
 
 /*
  * Extract the user and password from the authentication string
  */
-static CURLcode parse_proxy_auth(struct SessionHandle *data,
+static CURLcode parse_proxy_auth(struct Curl_easy *data,
                                  struct connectdata *conn)
 {
   char proxyuser[MAX_CURL_USER_LENGTH]="";
   char proxypasswd[MAX_CURL_PASSWORD_LENGTH]="";
 
   if(data->set.str[STRING_PROXYUSERNAME] != NULL) {
@@ -4863,13 +4883,13 @@
  *          conn->bits.user_passwd  - non-zero if non-default passwords exist
  *          user                    - non-zero length if defined
  *          passwd                  - non-zero length if defined
  *          options                 - non-zero length if defined
  *          conn->host.name         - remove user name and password
  */
-static CURLcode parse_url_login(struct SessionHandle *data,
+static CURLcode parse_url_login(struct Curl_easy *data,
                                 struct connectdata *conn,
                                 char **user, char **passwd, char **options)
 {
   CURLcode result = CURLE_OK;
   char *userp = NULL;
   char *passwdp = NULL;
@@ -5102,13 +5122,13 @@
  *
  * The conn->host.name is currently [user:passwd@]host[:port] where host
  * could be a hostname, IPv4 address or IPv6 address.
  *
  * The port number embedded in the URL is replaced, if necessary.
  *************************************************************/
-static CURLcode parse_remote_port(struct SessionHandle *data,
+static CURLcode parse_remote_port(struct Curl_easy *data,
                                   struct connectdata *conn)
 {
   char *portptr;
   char endbracket;
 
   /* Note that at this point, the IPv6 address cannot contain any scope
@@ -5214,13 +5234,13 @@
 }
 
 /*
  * Override the login details from the URL with that in the CURLOPT_USERPWD
  * option or a .netrc file, if applicable.
  */
-static CURLcode override_login(struct SessionHandle *data,
+static CURLcode override_login(struct Curl_easy *data,
                                struct connectdata *conn,
                                char **userp, char **passwdp, char **optionsp)
 {
   if(data->set.str[STRING_USERNAME]) {
     free(*userp);
     *userp = strdup(data->set.str[STRING_USERNAME]);
@@ -5317,13 +5337,13 @@
 
 /*
  * Parses a "host:port" string to connect to.
  * The hostname and the port may be empty; in this case, NULL is returned for
  * the hostname and -1 for the port.
  */
-static CURLcode parse_connect_to_host_port(struct SessionHandle *data,
+static CURLcode parse_connect_to_host_port(struct Curl_easy *data,
                                            const char *host,
                                            char **hostname_result,
                                            int *port_result)
 {
   char *host_dup;
   char *hostptr;
@@ -5408,13 +5428,13 @@
 }
 
 /*
  * Parses one "connect to" string in the form:
  * "HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT".
  */
-static CURLcode parse_connect_to_string(struct SessionHandle *data,
+static CURLcode parse_connect_to_string(struct Curl_easy *data,
                                         struct connectdata *conn,
                                         const char *conn_to_host,
                                         char **host_result,
                                         int *port_result)
 {
   CURLcode result = CURLE_OK;
@@ -5474,13 +5494,13 @@
 }
 
 /*
  * Processes all strings in the "connect to" slist, and uses the "connect
  * to host" and "connect to port" of the first string that matches.
  */
-static CURLcode parse_connect_to_slist(struct SessionHandle *data,
+static CURLcode parse_connect_to_slist(struct Curl_easy *data,
                                        struct connectdata *conn,
                                        struct curl_slist *conn_to_host)
 {
   CURLcode result = CURLE_OK;
   char *host = NULL;
   int port = 0;
@@ -5523,13 +5543,13 @@
   return result;
 }
 
 /*************************************************************
  * Resolve the address of the server or proxy
  *************************************************************/
-static CURLcode resolve_server(struct SessionHandle *data,
+static CURLcode resolve_server(struct Curl_easy *data,
                                struct connectdata *conn,
                                bool *async)
 {
   CURLcode result=CURLE_OK;
   long timeout_ms = Curl_timeleft(data, NULL, TRUE);
 
@@ -5718,13 +5738,13 @@
  * @param async is set TRUE when an async DNS resolution is pending
  * @see Curl_setup_conn()
  *
  * *NOTE* this function assigns the conn->data pointer!
  */
 
-static CURLcode create_conn(struct SessionHandle *data,
+static CURLcode create_conn(struct Curl_easy *data,
                             struct connectdata **in_connect,
                             bool *async)
 {
   CURLcode result = CURLE_OK;
   struct connectdata *conn;
   struct connectdata *conn_temp = NULL;
@@ -6090,13 +6110,13 @@
   /* Get a cloned copy of the SSL config situation stored in the
      connection struct. But to get this going nicely, we must first make
      sure that the strings in the master copy are pointing to the correct
      strings in the session handle strings array!
 
      Keep in mind that the pointers in the master copy are pointing to strings
-     that will be freed as part of the SessionHandle struct, but all cloned
+     that will be freed as part of the Curl_easy struct, but all cloned
      copies will be separately allocated.
   */
   data->set.ssl.CApath = data->set.str[STRING_SSL_CAPATH];
   data->set.ssl.CAfile = data->set.str[STRING_SSL_CAFILE];
   data->set.ssl.CRLfile = data->set.str[STRING_SSL_CRLFILE];
   data->set.ssl.issuercert = data->set.str[STRING_SSL_ISSUERCERT];
@@ -6309,13 +6329,13 @@
  */
 
 CURLcode Curl_setup_conn(struct connectdata *conn,
                          bool *protocol_done)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   Curl_pgrsTime(data, TIMER_NAMELOOKUP);
 
   if(conn->handler->flags & PROTOPT_NONETWORK) {
     /* nothing to setup when not using a network */
     *protocol_done = TRUE;
@@ -6383,13 +6403,13 @@
   }
 #endif
 
   return result;
 }
 
-CURLcode Curl_connect(struct SessionHandle *data,
+CURLcode Curl_connect(struct Curl_easy *data,
                       struct connectdata **in_connect,
                       bool *asyncp,
                       bool *protocol_done)
 {
   CURLcode result;
 
@@ -6426,20 +6446,20 @@
   return result;
 }
 
 /*
  * Curl_init_do() inits the readwrite session. This is inited each time (in
  * the DO function before the protocol-specific DO functions are invoked) for
- * a transfer, sometimes multiple times on the same SessionHandle. Make sure
+ * a transfer, sometimes multiple times on the same Curl_easy. Make sure
  * nothing in here depends on stuff that are setup dynamically for the
  * transfer.
  *
  * Allow this function to get called with 'conn' set to NULL.
  */
 
-CURLcode Curl_init_do(struct SessionHandle *data, struct connectdata *conn)
+CURLcode Curl_init_do(struct Curl_easy *data, struct connectdata *conn)
 {
   struct SingleRequest *k = &data->req;
 
   if(conn)
     conn->bits.do_more = FALSE; /* by default there's no curl_do_more() to
                                  * use */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/urldata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/urldata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/urldata.h	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/urldata.h	2016-07-21 06:31:36.000000000 +0800
@@ -205,13 +205,13 @@
 /* Initial size of the buffer to store headers in, it'll be enlarged in case
    of need. */
 #define HEADERSIZE 256
 
 #define CURLEASY_MAGIC_NUMBER 0xc0dedbadU
 #define GOOD_EASY_HANDLE(x) \
-  ((x) && (((struct SessionHandle *)(x))->magic == CURLEASY_MAGIC_NUMBER))
+  ((x) && ((x)->magic == CURLEASY_MAGIC_NUMBER))
 
 /* Some convenience macros to get the larger/smaller value out of two given.
    We prefix with CURL to prevent name collisions. */
 #define CURLMAX(x,y) ((x)>(y)?(x):(y))
 #define CURLMIN(x,y) ((x)<(y)?(x):(y))
 
@@ -239,13 +238,12 @@
 #ifdef USE_SCHANNEL
 /* Structs to store Schannel handles */
 struct curl_schannel_cred {
   CredHandle cred_handle;
   TimeStamp time_stamp;
   int refcount;
-  bool cached;
 };
 
 struct curl_schannel_ctxt {
   CtxtHandle ctxt_handle;
   TimeStamp time_stamp;
 };
@@ -309,13 +307,13 @@
 #elif defined(USE_CYASSL)
   SSL_CTX* ctx;
   SSL*     handle;
 #elif defined(USE_NSS)
   PRFileDesc *handle;
   char *client_nickname;
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   struct curl_llist *obj_list;
   PK11GenericObject *obj_clicert;
 #elif defined(USE_GSKIT)
   gsk_handle handle;
   int iocport;
 #elif defined(USE_AXTLS)
@@ -616,15 +614,15 @@
   UPGR101_REQUESTED,          /* upgrade requested */
   UPGR101_RECEIVED,           /* response received */
   UPGR101_WORKING             /* talking upgraded protocol */
 };
 
 /*
- * Request specific data in the easy handle (SessionHandle).  Previously,
+ * Request specific data in the easy handle (Curl_easy).  Previously,
  * these members were on the connectdata struct but since a conn struct may
- * now be shared between different SessionHandles, we store connection-specific
+ * now be shared between different Curl_easys, we store connection-specific
  * data here. This struct only keeps stuff that's interesting for *this*
  * request, as it will be cleared between multiple ones
  */
 struct SingleRequest {
   curl_off_t size;        /* -1 if unknown at this point */
   curl_off_t *bytecountp; /* return number of bytes read or NULL */
@@ -789,13 +787,13 @@
    * is set to TRUE.
    */
   CURLcode (*disconnect)(struct connectdata *, bool dead_connection);
 
   /* If used, this function gets called from transfer.c:readwrite_data() to
      allow the protocol to do extra reads/writes */
-  CURLcode (*readwrite)(struct SessionHandle *data, struct connectdata *conn,
+  CURLcode (*readwrite)(struct Curl_easy *data, struct connectdata *conn,
                         ssize_t *nread, bool *readmore);
 
   long defport;           /* Default port. */
   unsigned int protocol;  /* See CURLPROTO_* - this needs to be the single
                              specific protocol bit */
   unsigned int flags;     /* Extra particular characteristics, see PROTOPT_* */
@@ -849,16 +847,16 @@
 
 /*
  * The connectdata struct contains all fields and variables that should be
  * unique for an entire connection.
  */
 struct connectdata {
-  /* 'data' is the CURRENT SessionHandle using this connection -- take great
+  /* 'data' is the CURRENT Curl_easy using this connection -- take great
      caution that this might very well vary between different times this
      connection is used! */
-  struct SessionHandle *data;
+  struct Curl_easy *data;
 
   /* chunk is for HTTP chunked encoding, but is in the general connectdata
      struct only because we can do just about any protocol through a HTTP proxy
      and a HTTP proxy may in fact respond using chunked encoding */
   struct Curl_chunker chunk;
 
@@ -963,13 +961,13 @@
   long timeoutms_per_addr; /* how long time in milliseconds to spend on
                               trying to connect to each IP address */
 
   const struct Curl_handler *handler; /* Connection's protocol handler */
   const struct Curl_handler *given;   /* The protocol first given */
 
-  long ip_version; /* copied from the SessionHandle at creation time */
+  long ip_version; /* copied from the Curl_easy at creation time */
 
   /**** curl_get() phase fields */
 
   curl_socket_t sockfd;   /* socket to read from or CURL_SOCKET_BAD */
   curl_socket_t writesockfd; /* socket to write to, it may very
                                 well be the same we read from.
@@ -1206,13 +1204,13 @@
     RTSPREQ_LAST /* last in list */
 } Curl_RtspReq;
 
 /*
  * Values that are generated, temporary or calculated internally for a
  * "session handle" must be defined within the 'struct UrlState'.  This struct
- * will be used within the SessionHandle struct. When the 'SessionHandle'
+ * will be used within the Curl_easy struct. When the 'Curl_easy'
  * struct is cloned, this data MUST NOT be copied.
  *
  * Remember that any "state" information goes globally for the curl handle.
  * Session-data MUST be put in the connectdata struct and here.  */
 #define MAX_CURL_USER_LENGTH 256
 #define MAX_CURL_PASSWORD_LENGTH 256
@@ -1345,20 +1343,20 @@
   curl_off_t infilesize; /* size of file to upload, -1 means unknown.
                             Copied from set.filesize at start of operation */
 
   size_t drain; /* Increased when this stream has data to read, even if its
                    socket is not necessarily is readable. Decreased when
                    checked. */
-  bool done; /* set to FALSE when Curl_do() is called and set to TRUE when
-                Curl_done() is called, to prevent Curl_done() to get invoked
-                twice when the multi interface is used. */
+  bool done; /* set to FALSE when Curl_init_do() is called and set to TRUE
+                when multi_done() is called, to prevent multi_done() to get
+                invoked twice when the multi interface is used. */
 
   curl_read_callback fread_func; /* read callback/function */
   void *in;                      /* CURLOPT_READDATA */
 
-  struct SessionHandle *stream_depends_on;
+  struct Curl_easy *stream_depends_on;
   bool stream_depends_e; /* set or don't set the Exclusive bit */
   int stream_weight;
 };
 
 
 /*
@@ -1677,13 +1675,13 @@
   bool ssl_enable_alpn;     /* TLS ALPN extension? */
   bool path_as_is;      /* allow dotdots? */
   bool pipewait;        /* wait for pipe/multiplex status before starting a
                            new connection */
   long expect_100_timeout; /* in milliseconds */
 
-  struct SessionHandle *stream_depends_on;
+  struct Curl_easy *stream_depends_on;
   bool stream_depends_e; /* set or don't set the Exclusive bit */
   int stream_weight;
 };
 
 struct Names {
   struct curl_hash *hostcache;
@@ -1702,16 +1700,16 @@
  * The 'struct UserDefined' must only contain data that is set once to go for
  * many (perhaps) independent connections. Values that are generated or
  * calculated internally for the "session handle" must be defined within the
  * 'struct UrlState' instead.
  */
 
-struct SessionHandle {
+struct Curl_easy {
   /* first, two fields for the linked list of these */
-  struct SessionHandle *next;
-  struct SessionHandle *prev;
+  struct Curl_easy *next;
+  struct Curl_easy *prev;
 
   struct connectdata *easy_conn;     /* the "unit's" connection */
 
   CURLMstate mstate;  /* the handle's state */
   CURLcode result;   /* previous result */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/url.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/url.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/url.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/url.h	2016-07-21 06:31:36.000000000 +0800
@@ -24,50 +24,50 @@
 #include "curl_setup.h"
 
 /*
  * Prototypes for library-wide functions provided by url.c
  */
 
-CURLcode Curl_init_do(struct SessionHandle *data, struct connectdata *conn);
-CURLcode Curl_open(struct SessionHandle **curl);
+CURLcode Curl_init_do(struct Curl_easy *data, struct connectdata *conn);
+CURLcode Curl_open(struct Curl_easy **curl);
 CURLcode Curl_init_userdefined(struct UserDefined *set);
-CURLcode Curl_setopt(struct SessionHandle *data, CURLoption option,
+CURLcode Curl_setopt(struct Curl_easy *data, CURLoption option,
                      va_list arg);
-CURLcode Curl_dupset(struct SessionHandle * dst, struct SessionHandle * src);
-void Curl_freeset(struct SessionHandle * data);
-CURLcode Curl_close(struct SessionHandle *data); /* opposite of curl_open() */
-CURLcode Curl_connect(struct SessionHandle *, struct connectdata **,
+CURLcode Curl_dupset(struct Curl_easy * dst, struct Curl_easy * src);
+void Curl_freeset(struct Curl_easy * data);
+CURLcode Curl_close(struct Curl_easy *data); /* opposite of curl_open() */
+CURLcode Curl_connect(struct Curl_easy *, struct connectdata **,
                       bool *async, bool *protocol_connect);
 CURLcode Curl_disconnect(struct connectdata *, bool dead_connection);
 CURLcode Curl_protocol_connect(struct connectdata *conn, bool *done);
 CURLcode Curl_protocol_connecting(struct connectdata *conn, bool *done);
 CURLcode Curl_protocol_doing(struct connectdata *conn, bool *done);
 CURLcode Curl_setup_conn(struct connectdata *conn,
                          bool *protocol_done);
-void Curl_free_request_state(struct SessionHandle *data);
+void Curl_free_request_state(struct Curl_easy *data);
 
 int Curl_protocol_getsock(struct connectdata *conn,
                           curl_socket_t *socks,
                           int numsocks);
 int Curl_doing_getsock(struct connectdata *conn,
                        curl_socket_t *socks,
                        int numsocks);
 
-bool Curl_isPipeliningEnabled(const struct SessionHandle *handle);
-CURLcode Curl_addHandleToPipeline(struct SessionHandle *handle,
+bool Curl_isPipeliningEnabled(const struct Curl_easy *handle);
+CURLcode Curl_addHandleToPipeline(struct Curl_easy *handle,
                                   struct curl_llist *pipeline);
-int Curl_removeHandleFromPipeline(struct SessionHandle *handle,
+int Curl_removeHandleFromPipeline(struct Curl_easy *handle,
                                   struct curl_llist *pipeline);
 struct connectdata *
-Curl_oldest_idle_connection(struct SessionHandle *data);
+Curl_oldest_idle_connection(struct Curl_easy *data);
 /* remove the specified connection from all (possible) pipelines and related
    queues */
-void Curl_getoff_all_pipelines(struct SessionHandle *data,
+void Curl_getoff_all_pipelines(struct Curl_easy *data,
                                struct connectdata *conn);
 
-void Curl_close_connections(struct SessionHandle *data);
+void Curl_close_connections(struct Curl_easy *data);
 
 #define CURL_DEFAULT_PROXY_PORT 1080 /* default proxy port unless specified */
 
 CURLcode Curl_connected_proxy(struct connectdata *conn, int sockindex);
 
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/cleartext.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/cleartext.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/cleartext.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/cleartext.c	2016-07-21 06:31:36.000000000 +0800
@@ -56,13 +56,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_plain_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_plain_message(struct Curl_easy *data,
                                         const char *userp,
                                         const char *passwdp,
                                         char **outptr, size_t *outlen)
 {
   CURLcode result;
   char *plainauth;
@@ -107,13 +107,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_login_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_login_message(struct Curl_easy *data,
                                         const char *valuep, char **outptr,
                                         size_t *outlen)
 {
   size_t vlen = strlen(valuep);
 
   if(!vlen) {
@@ -145,13 +145,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_external_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_external_message(struct Curl_easy *data,
                                            const char *user, char **outptr,
                                            size_t *outlen)
 {
   /* This is the same formatting as the login message */
   return Curl_auth_create_login_message(data, user, outptr, outlen);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/cram.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/cram.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/cram.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/cram.c	2016-07-21 06:31:36.000000000 +0800
@@ -85,13 +85,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_cram_md5_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_cram_md5_message(struct Curl_easy *data,
                                            const char *chlg,
                                            const char *userp,
                                            const char *passwdp,
                                            char **outptr, size_t *outlen)
 {
   CURLcode result = CURLE_OK;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/digest.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/digest.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/digest.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/digest.c	2016-07-21 06:31:36.000000000 +0800
@@ -321,13 +321,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_digest_md5_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_digest_md5_message(struct Curl_easy *data,
                                              const char *chlg64,
                                              const char *userp,
                                              const char *passwdp,
                                              const char *service,
                                              char **outptr, size_t *outlen)
 {
@@ -642,13 +642,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_digest_http_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_digest_http_message(struct Curl_easy *data,
                                               const char *userp,
                                               const char *passwdp,
                                               const unsigned char *request,
                                               const unsigned char *uripath,
                                               struct digestdata *digest,
                                               char **outptr, size_t *outlen)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/digest_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/digest_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/digest_sspi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/digest_sspi.c	2016-07-21 16:51:46.000000000 +0800
@@ -59,13 +59,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_digest_md5_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_digest_md5_message(struct Curl_easy *data,
                                              const char *chlg64,
                                              const char *userp,
                                              const char *passwdp,
                                              const char *service,
                                              char **outptr, size_t *outlen)
 {
@@ -346,13 +346,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_digest_http_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_digest_http_message(struct Curl_easy *data,
                                               const char *userp,
                                               const char *passwdp,
                                               const unsigned char *request,
                                               const unsigned char *uripath,
                                               struct digestdata *digest,
                                               char **outptr, size_t *outlen)
@@ -384,18 +384,12 @@
 
   token_max = SecurityPackage->cbMaxToken;
 
   /* Release the package buffer as it is not required anymore */
   s_pSecFn->FreeContextBuffer(SecurityPackage);
 
-  /* Allocate the output buffer according to the max token size as indicated
-     by the security package */
-  output_token = malloc(token_max);
-  if(!output_token)
-    return CURLE_OUT_OF_MEMORY;
-
   if(userp && *userp) {
     /* Populate our identity structure */
     if(Curl_create_sspi_identity(userp, passwdp, &identity))
       return CURLE_OUT_OF_MEMORY;
 
     /* Populate our identity domain */
@@ -415,17 +409,27 @@
                                               (TCHAR *) TEXT(SP_NAME_DIGEST),
                                               SECPKG_CRED_OUTBOUND, NULL,
                                               p_identity, NULL, NULL,
                                               &credentials, &expiry);
   if(status != SEC_E_OK) {
     Curl_sspi_free_identity(p_identity);
-    free(output_token);
 
     return CURLE_LOGIN_DENIED;
   }
 
+  /* Allocate the output buffer according to the max token size as indicated
+     by the security package */
+  output_token = malloc(token_max);
+  if(!output_token) {
+    s_pSecFn->FreeCredentialsHandle(&credentials);
+
+    Curl_sspi_free_identity(p_identity);
+
+    return CURLE_OUT_OF_MEMORY;
+  }
+
   /* Setup the challenge "input" security buffer if present */
   chlg_desc.ulVersion    = SECBUFFER_VERSION;
   chlg_desc.cBuffers     = 3;
   chlg_desc.pBuffers     = chlg_buf;
   chlg_buf[0].BufferType = SECBUFFER_TOKEN;
   chlg_buf[0].pvBuffer   = digest->input_token;
@@ -444,12 +448,14 @@
   resp_buf.BufferType = SECBUFFER_TOKEN;
   resp_buf.pvBuffer   = output_token;
   resp_buf.cbBuffer   = curlx_uztoul(token_max);
 
   spn = Curl_convert_UTF8_to_tchar((char *) uripath);
   if(!spn) {
+    s_pSecFn->FreeCredentialsHandle(&credentials);
+
     Curl_sspi_free_identity(p_identity);
     free(output_token);
 
     return CURLE_OUT_OF_MEMORY;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/krb5_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/krb5_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/krb5_gssapi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/krb5_gssapi.c	2016-07-21 06:31:36.000000000 +0800
@@ -62,13 +62,13 @@
  * outptr      [in/out] - The address where a pointer to newly allocated memory
  *                        holding the result will be stored upon completion.
  * outlen      [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_gssapi_user_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_gssapi_user_message(struct Curl_easy *data,
                                               const char *userp,
                                               const char *passwdp,
                                               const char *service,
                                               const char *host,
                                               const bool mutual_auth,
                                               const char *chlg64,
@@ -187,13 +187,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_gssapi_security_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_gssapi_security_message(struct Curl_easy *data,
                                                   const char *chlg64,
                                                   struct kerberos5data *krb5,
                                                   char **outptr,
                                                   size_t *outlen)
 {
   CURLcode result = CURLE_OK;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/krb5_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/krb5_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/krb5_sspi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/krb5_sspi.c	2016-07-21 06:31:36.000000000 +0800
@@ -59,13 +59,13 @@
  * outptr      [in/out] - The address where a pointer to newly allocated memory
  *                        holding the result will be stored upon completion.
  * outlen      [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_gssapi_user_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_gssapi_user_message(struct Curl_easy *data,
                                               const char *userp,
                                               const char *passwdp,
                                               const char *service,
                                               const char *host,
                                               const bool mutual_auth,
                                               const char *chlg64,
@@ -237,13 +237,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_gssapi_security_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_gssapi_security_message(struct Curl_easy *data,
                                                   const char *chlg64,
                                                   struct kerberos5data *krb5,
                                                   char **outptr,
                                                   size_t *outlen)
 {
   CURLcode result = CURLE_OK;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/ntlm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/ntlm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/ntlm.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/ntlm.c	2016-07-21 06:31:36.000000000 +0800
@@ -161,13 +161,13 @@
  * buffer    [in]     - The decoded type-2 message.
  * size      [in]     - The input buffer size, at least 32 bytes.
  * ntlm      [in/out] - The NTLM data struct being used and modified.
  *
  * Returns CURLE_OK on success.
  */
-static CURLcode ntlm_decode_type2_target(struct SessionHandle *data,
+static CURLcode ntlm_decode_type2_target(struct Curl_easy *data,
                                          unsigned char *buffer,
                                          size_t size,
                                          struct ntlmdata *ntlm)
 {
   unsigned short target_info_len = 0;
   unsigned int target_info_offset = 0;
@@ -229,13 +229,13 @@
  * data     [in]     - The session handle.
  * type2msg [in]     - The base64 encoded type-2 message.
  * ntlm     [in/out] - The NTLM data struct being used and modified.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_decode_ntlm_type2_message(struct SessionHandle *data,
+CURLcode Curl_auth_decode_ntlm_type2_message(struct Curl_easy *data,
                                              const char *type2msg,
                                              struct ntlmdata *ntlm)
 {
   static const char type2_marker[] = { 0x02, 0x00, 0x00, 0x00 };
 
   /* NTLM type-2 message structure:
@@ -462,13 +462,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_ntlm_type3_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_ntlm_type3_message(struct Curl_easy *data,
                                              const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr, size_t *outlen)
 
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/ntlm_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/ntlm_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/ntlm_sspi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/ntlm_sspi.c	2016-07-21 06:31:36.000000000 +0800
@@ -159,13 +159,13 @@
  * data     [in]     - The session handle.
  * type2msg [in]     - The base64 encoded type-2 message.
  * ntlm     [in/out] - The NTLM data struct being used and modified.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_decode_ntlm_type2_message(struct SessionHandle *data,
+CURLcode Curl_auth_decode_ntlm_type2_message(struct Curl_easy *data,
                                              const char *type2msg,
                                              struct ntlmdata *ntlm)
 {
   CURLcode result = CURLE_OK;
   unsigned char *type2 = NULL;
   size_t type2_len = 0;
@@ -211,13 +211,13 @@
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_ntlm_type3_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_ntlm_type3_message(struct Curl_easy *data,
                                              const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr, size_t *outlen)
 {
   CURLcode result = CURLE_OK;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/oauth2.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/oauth2.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/oauth2.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/oauth2.c	2016-07-21 06:31:36.000000000 +0800
@@ -52,13 +52,13 @@
  * outptr[in / out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen[out]      - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_oauth_bearer_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_oauth_bearer_message(struct Curl_easy *data,
                                                const char *user,
                                                const char *host,
                                                const long port,
                                                const char *bearer,
                                                char **outptr, size_t *outlen)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/spnego_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/spnego_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/spnego_gssapi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/spnego_gssapi.c	2016-07-21 06:31:36.000000000 +0800
@@ -55,13 +55,13 @@
  * host        [in]     - The host name.
  * chlg64      [in]     - The optional base64 encoded challenge message.
  * nego        [in/out] - The Negotiate data struct being used and modified.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_decode_spnego_message(struct SessionHandle *data,
+CURLcode Curl_auth_decode_spnego_message(struct Curl_easy *data,
                                          const char *user,
                                          const char *password,
                                          const char *service,
                                          const char *host,
                                          const char *chlg64,
                                          struct negotiatedata *nego)
@@ -184,13 +184,13 @@
  * outptr      [in/out] - The address where a pointer to newly allocated memory
  *                        holding the result will be stored upon completion.
  * outlen      [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_spnego_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_spnego_message(struct Curl_easy *data,
                                          struct negotiatedata *nego,
                                          char **outptr, size_t *outlen)
 {
   CURLcode result;
   OM_uint32 minor_status;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/spnego_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/spnego_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/spnego_sspi.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/spnego_sspi.c	2016-07-21 06:31:36.000000000 +0800
@@ -54,13 +54,13 @@
  * host        [in]     - The host name.
  * chlg64      [in]     - The optional base64 encoded challenge message.
  * nego        [in/out] - The Negotiate data struct being used and modified.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_decode_spnego_message(struct SessionHandle *data,
+CURLcode Curl_auth_decode_spnego_message(struct Curl_easy *data,
                                          const char *user,
                                          const char *password,
                                          const char *service,
                                          const char *host,
                                          const char *chlg64,
                                          struct negotiatedata *nego)
@@ -231,13 +231,13 @@
  * outptr      [in/out] - The address where a pointer to newly allocated memory
  *                        holding the result will be stored upon completion.
  * outlen      [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
-CURLcode Curl_auth_create_spnego_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_spnego_message(struct Curl_easy *data,
                                          struct negotiatedata *nego,
                                          char **outptr, size_t *outlen)
 {
   CURLcode result;
 
   /* Base64 encode the already generated response */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/vauth.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/vauth.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vauth/vauth.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vauth/vauth.h	2016-07-21 06:31:36.000000000 +0800
@@ -21,13 +21,13 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include <curl/curl.h>
 
-struct SessionHandle;
+struct Curl_easy;
 
 #if !defined(CURL_DISABLE_CRYPTO_AUTH)
 struct digestdata;
 #endif
 
 #if defined(USE_NTLM)
@@ -53,53 +53,53 @@
 #else
 TCHAR *Curl_auth_build_spn(const char *service, const char *host,
                            const char *realm);
 #endif
 
 /* This is used to generate a base64 encoded PLAIN cleartext message */
-CURLcode Curl_auth_create_plain_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_plain_message(struct Curl_easy *data,
                                         const char *userp,
                                         const char *passwdp,
                                         char **outptr, size_t *outlen);
 
 /* This is used to generate a base64 encoded LOGIN cleartext message */
-CURLcode Curl_auth_create_login_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_login_message(struct Curl_easy *data,
                                         const char *valuep, char **outptr,
                                         size_t *outlen);
 
 /* This is used to generate a base64 encoded EXTERNAL cleartext message */
-CURLcode Curl_auth_create_external_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_external_message(struct Curl_easy *data,
                                            const char *user, char **outptr,
                                            size_t *outlen);
 
 #if !defined(CURL_DISABLE_CRYPTO_AUTH)
 /* This is used to decode a CRAM-MD5 challenge message */
 CURLcode Curl_auth_decode_cram_md5_message(const char *chlg64, char **outptr,
                                            size_t *outlen);
 
 /* This is used to generate a CRAM-MD5 response message */
-CURLcode Curl_auth_create_cram_md5_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_cram_md5_message(struct Curl_easy *data,
                                            const char *chlg,
                                            const char *userp,
                                            const char *passwdp,
                                            char **outptr, size_t *outlen);
 
 /* This is used to generate a base64 encoded DIGEST-MD5 response message */
-CURLcode Curl_auth_create_digest_md5_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_digest_md5_message(struct Curl_easy *data,
                                              const char *chlg64,
                                              const char *userp,
                                              const char *passwdp,
                                              const char *service,
                                              char **outptr, size_t *outlen);
 
 /* This is used to decode a HTTP DIGEST challenge message */
 CURLcode Curl_auth_decode_digest_http_message(const char *chlg,
                                               struct digestdata *digest);
 
 /* This is used to generate a HTTP DIGEST response message */
-CURLcode Curl_auth_create_digest_http_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_digest_http_message(struct Curl_easy *data,
                                               const char *userp,
                                               const char *passwdp,
                                               const unsigned char *request,
                                               const unsigned char *uri,
                                               struct digestdata *digest,
                                               char **outptr, size_t *outlen);
@@ -114,73 +114,73 @@
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr,
                                              size_t *outlen);
 
 /* This is used to decode a base64 encoded NTLM type-2 message */
-CURLcode Curl_auth_decode_ntlm_type2_message(struct SessionHandle *data,
+CURLcode Curl_auth_decode_ntlm_type2_message(struct Curl_easy *data,
                                              const char *type2msg,
                                              struct ntlmdata *ntlm);
 
 /* This is used to generate a base64 encoded NTLM type-3 message */
-CURLcode Curl_auth_create_ntlm_type3_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_ntlm_type3_message(struct Curl_easy *data,
                                              const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr, size_t *outlen);
 
 /* This is used to clean up the NTLM specific data */
 void Curl_auth_ntlm_cleanup(struct ntlmdata *ntlm);
 #endif /* USE_NTLM */
 
 /* This is used to generate a base64 encoded OAuth 2.0 message */
-CURLcode Curl_auth_create_oauth_bearer_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_oauth_bearer_message(struct Curl_easy *data,
                                                const char *user,
                                                const char *host,
                                                const long port,
                                                const char *bearer,
                                                char **outptr, size_t *outlen);
 #if defined(USE_KERBEROS5)
 /* This is used to generate a base64 encoded GSSAPI (Kerberos V5) user token
    message */
-CURLcode Curl_auth_create_gssapi_user_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_gssapi_user_message(struct Curl_easy *data,
                                               const char *userp,
                                               const char *passwdp,
                                               const char *service,
                                               const char *host,
                                               const bool mutual,
                                               const char *chlg64,
                                               struct kerberos5data *krb5,
                                               char **outptr, size_t *outlen);
 
 /* This is used to generate a base64 encoded GSSAPI (Kerberos V5) security
    token message */
-CURLcode Curl_auth_create_gssapi_security_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_gssapi_security_message(struct Curl_easy *data,
                                                   const char *input,
                                                   struct kerberos5data *krb5,
                                                   char **outptr,
                                                   size_t *outlen);
 
 /* This is used to clean up the GSSAPI specific data */
 void Curl_auth_gssapi_cleanup(struct kerberos5data *krb5);
 #endif /* USE_KERBEROS5 */
 
 #if (defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)) && defined(USE_SPNEGO)
 /* This is used to decode a base64 encoded SPNEGO (Negotiate) challenge
    message */
-CURLcode Curl_auth_decode_spnego_message(struct SessionHandle *data,
+CURLcode Curl_auth_decode_spnego_message(struct Curl_easy *data,
                                          const char *user,
                                          const char *passwood,
                                          const char *service,
                                          const char *host,
                                          const char *chlg64,
                                          struct negotiatedata *nego);
 
 /* This is used to generate a base64 encoded SPNEGO (Negotiate) response
    message */
-CURLcode Curl_auth_create_spnego_message(struct SessionHandle *data,
+CURLcode Curl_auth_create_spnego_message(struct Curl_easy *data,
                                          struct negotiatedata *nego,
                                          char **outptr, size_t *outlen);
 
 /* This is used to clean up the SPNEGO specifiec data */
 void Curl_auth_spnego_cleanup(struct negotiatedata* nego);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/axtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/axtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/axtls.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/axtls.c	2016-07-21 06:31:36.000000000 +0800
@@ -134,20 +134,18 @@
  * For both blocking and non-blocking connects, this function sets up the
  * ssl context and state.  This function is called after the TCP connect
  * has completed.
  */
 static CURLcode connect_prep(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   SSL_CTX *ssl_ctx;
   SSL *ssl = NULL;
   int cert_types[] = {SSL_OBJ_X509_CERT, SSL_OBJ_PKCS12, 0};
   int key_types[] = {SSL_OBJ_RSA_KEY, SSL_OBJ_PKCS8, SSL_OBJ_PKCS12, 0};
   int i, ssl_fcn_return;
-  const uint8_t *ssl_sessionid;
-  size_t ssl_idsize;
 
   /* Assuming users will not compile in custom key/cert to axTLS.
   *  Also, even for blocking connects, use axTLS non-blocking feature.
   */
   uint32_t client_option = SSL_NO_DEFAULT_KEY |
     SSL_SERVER_VERIFY_LATER |
@@ -255,36 +253,42 @@
   /* gtls.c does more here that is being left out for now
    * 1) set session credentials.  can probably ignore since axtls puts this
    *    info in the ssl_ctx struct
    * 2) setting up callbacks.  these seem gnutls specific
    */
 
-  /* In axTLS, handshaking happens inside ssl_client_new. */
-  if(!Curl_ssl_getsessionid(conn, (void **) &ssl_sessionid, &ssl_idsize)) {
-    /* we got a session id, use it! */
-    infof (data, "SSL re-using session ID\n");
-    ssl = ssl_client_new(ssl_ctx, conn->sock[sockindex],
-                         ssl_sessionid, (uint8_t)ssl_idsize);
+  if(conn->ssl_config.sessionid) {
+    const uint8_t *ssl_sessionid;
+    size_t ssl_idsize;
+
+    /* In axTLS, handshaking happens inside ssl_client_new. */
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, (void **) &ssl_sessionid, &ssl_idsize)) {
+      /* we got a session id, use it! */
+      infof (data, "SSL re-using session ID\n");
+      ssl = ssl_client_new(ssl_ctx, conn->sock[sockindex],
+                           ssl_sessionid, (uint8_t)ssl_idsize);
+    }
+    Curl_ssl_sessionid_unlock(conn);
   }
-  else
+
+  if(!ssl)
     ssl = ssl_client_new(ssl_ctx, conn->sock[sockindex], NULL, 0);
 
   conn->ssl[sockindex].ssl = ssl;
   return CURLE_OK;
 }
 
 /*
  * For both blocking and non-blocking connects, this function finalizes the
  * SSL connection.
  */
 static CURLcode connect_finish(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   SSL *ssl = conn->ssl[sockindex].ssl;
-  const uint8_t *ssl_sessionid;
-  size_t ssl_idsize;
   const char *peer_CN;
   uint32_t dns_altname_index;
   const char *dns_altname;
   int8_t found_subject_alt_names = 0;
   int8_t found_subject_alt_name_matching_conn = 0;
 
@@ -376,17 +380,21 @@
   /* General housekeeping */
   conn->ssl[sockindex].state = ssl_connection_complete;
   conn->recv[sockindex] = axtls_recv;
   conn->send[sockindex] = axtls_send;
 
   /* Put our freshly minted SSL session in cache */
-  ssl_idsize = ssl_get_session_id_size(ssl);
-  ssl_sessionid = ssl_get_session_id(ssl);
-  if(Curl_ssl_addsessionid(conn, (void *) ssl_sessionid, ssl_idsize)
-     != CURLE_OK)
-    infof (data, "failed to add session to cache\n");
+  if(conn->ssl_config.sessionid) {
+    const uint8_t *ssl_sessionid = ssl_get_session_id_size(ssl);
+    size_t ssl_idsize = ssl_get_session_id(ssl);
+    Curl_ssl_sessionid_lock(conn);
+    if(Curl_ssl_addsessionid(conn, (void *) ssl_sessionid, ssl_idsize)
+       != CURLE_OK)
+      infof (data, "failed to add session to cache\n");
+    Curl_ssl_sessionid_unlock(conn);
+  }
 
   return CURLE_OK;
 }
 
 /*
  * Use axTLS's non-blocking connection feature to open an SSL connection.
@@ -461,13 +469,13 @@
  */
 CURLcode
 Curl_axtls_connect(struct connectdata *conn,
                   int sockindex)
 
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode conn_step = connect_prep(conn, sockindex);
   int ssl_fcn_return;
   SSL *ssl = conn->ssl[sockindex].ssl;
   long timeout_ms;
 
   if(conn_step != CURLE_OK) {
@@ -490,13 +498,13 @@
     if(ssl_fcn_return < 0) {
       Curl_axtls_close(conn, sockindex);
       ssl_display_error(ssl_fcn_return); /* goes to stdout. */
       return map_error_to_curl(ssl_fcn_return);
     }
     /* TODO: avoid polling */
-    usleep(10000);
+    Curl_wait_ms(10);
   }
   infof (conn->data, "handshake completed successfully\n");
 
   conn_step = connect_finish(conn, sockindex);
   if(conn_step != CURLE_OK) {
     Curl_axtls_close(conn, sockindex);
@@ -551,13 +559,13 @@
 {
   /* Outline taken from openssl.c since functions are in axTLS compat layer.
      axTLS's error set is much smaller, so a lot of error-handling was removed.
    */
   int retval = 0;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   uint8_t *buf;
   ssize_t nread;
 
   infof(conn->data, "  Curl_axtls_shutdown\n");
 
   /* This has only been tested on the proftpd server, and the mod_tls code
@@ -667,13 +675,13 @@
 
 size_t Curl_axtls_version(char *buffer, size_t size)
 {
   return snprintf(buffer, size, "axTLS/%s", ssl_version());
 }
 
-int Curl_axtls_random(struct SessionHandle *data,
+int Curl_axtls_random(struct Curl_easy *data,
                       unsigned char *entropy,
                       size_t length)
 {
   static bool ssl_seeded = FALSE;
   (void)data;
   if(!ssl_seeded) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/axtls.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/axtls.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/axtls.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/axtls.h	2016-07-21 06:31:36.000000000 +0800
@@ -39,13 +39,13 @@
 void Curl_axtls_close(struct connectdata *conn, int sockindex);
 
 void Curl_axtls_session_free(void *ptr);
 size_t Curl_axtls_version(char *buffer, size_t size);
 int Curl_axtls_shutdown(struct connectdata *conn, int sockindex);
 int Curl_axtls_check_cxn(struct connectdata *conn);
-int Curl_axtls_random(struct SessionHandle *data,
+int Curl_axtls_random(struct Curl_easy *data,
                       unsigned char *entropy,
                       size_t length);
 
 /* Set the API backend definition to axTLS */
 #define CURL_SSL_BACKEND CURLSSLBACKEND_AXTLS
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/cyassl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/cyassl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/cyassl.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/cyassl.c	2016-07-21 06:31:36.000000000 +0800
@@ -131,16 +131,15 @@
  */
 static CURLcode
 cyassl_connect_step1(struct connectdata *conn,
                      int sockindex)
 {
   char error_buffer[CYASSL_MAX_ERROR_SZ];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data* conssl = &conn->ssl[sockindex];
   SSL_METHOD* req_method = NULL;
-  void* ssl_sessionid = NULL;
   curl_socket_t sockfd = conn->sock[sockindex];
 #ifdef HAVE_SNI
   bool sni = FALSE;
 #define use_sni(x)  sni = (x)
 #else
 #define use_sni(x)  Curl_nop_stmt
@@ -375,21 +374,29 @@
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 #endif /* HAVE_ALPN */
 
   /* Check if there's a cached ID we can/should use here! */
-  if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL)) {
-    /* we got a session id, use it! */
-    if(!SSL_set_session(conssl->handle, ssl_sessionid)) {
-      failf(data, "SSL: SSL_set_session failed: %s",
-            ERR_error_string(SSL_get_error(conssl->handle, 0), error_buffer));
-      return CURLE_SSL_CONNECT_ERROR;
+  if(conn->ssl_config.sessionid) {
+    void *ssl_sessionid = NULL;
+
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL)) {
+      /* we got a session id, use it! */
+      if(!SSL_set_session(conssl->handle, ssl_sessionid)) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "SSL: SSL_set_session failed: %s",
+              ERR_error_string(SSL_get_error(conssl->handle, 0),
+              error_buffer));
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      /* Informational message */
+      infof (data, "SSL re-using session ID\n");
     }
-    /* Informational message */
-    infof (data, "SSL re-using session ID\n");
+    Curl_ssl_sessionid_unlock(conn);
   }
 
   /* pass the raw socket into the SSL layer */
   if(!SSL_set_fd(conssl->handle, (int)sockfd)) {
     failf(data, "SSL: SSL_set_fd failed");
     return CURLE_SSL_CONNECT_ERROR;
@@ -402,13 +409,13 @@
 
 static CURLcode
 cyassl_connect_step2(struct connectdata *conn,
                      int sockindex)
 {
   int ret = -1;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data* conssl = &conn->ssl[sockindex];
 
   conn->recv[sockindex] = cyassl_recv;
   conn->send[sockindex] = cyassl_send;
 
   /* Enable RFC2818 checks */
@@ -568,38 +575,44 @@
 
 static CURLcode
 cyassl_connect_step3(struct connectdata *conn,
                      int sockindex)
 {
   CURLcode result = CURLE_OK;
-  void *old_ssl_sessionid=NULL;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  bool incache;
-  SSL_SESSION *our_ssl_sessionid;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  our_ssl_sessionid = SSL_get_session(connssl->handle);
-
-  incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL));
-  if(incache) {
-    if(old_ssl_sessionid != our_ssl_sessionid) {
-      infof(data, "old SSL session ID is stale, removing\n");
-      Curl_ssl_delsessionid(conn, old_ssl_sessionid);
-      incache = FALSE;
+  if(conn->ssl_config.sessionid) {
+    bool incache;
+    SSL_SESSION *our_ssl_sessionid;
+    void *old_ssl_sessionid = NULL;
+
+    our_ssl_sessionid = SSL_get_session(connssl->handle);
+
+    Curl_ssl_sessionid_lock(conn);
+    incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL));
+    if(incache) {
+      if(old_ssl_sessionid != our_ssl_sessionid) {
+        infof(data, "old SSL session ID is stale, removing\n");
+        Curl_ssl_delsessionid(conn, old_ssl_sessionid);
+        incache = FALSE;
+      }
     }
-  }
 
-  if(!incache) {
-    result = Curl_ssl_addsessionid(conn, our_ssl_sessionid,
-                                   0 /* unknown size */);
-    if(result) {
-      failf(data, "failed to store ssl session");
-      return result;
+    if(!incache) {
+      result = Curl_ssl_addsessionid(conn, our_ssl_sessionid,
+                                     0 /* unknown size */);
+      if(result) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "failed to store ssl session");
+        return result;
+      }
     }
+    Curl_ssl_sessionid_unlock(conn);
   }
 
   connssl->connecting_state = ssl_connect_done;
 
   return result;
 }
@@ -738,13 +751,13 @@
 cyassl_connect_common(struct connectdata *conn,
                       int sockindex,
                       bool nonblocking,
                       bool *done)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int what;
 
   /* check if the connection has already been established */
@@ -869,13 +882,13 @@
 
   DEBUGASSERT(done);
 
   return CURLE_OK;
 }
 
-int Curl_cyassl_random(struct SessionHandle *data,
+int Curl_cyassl_random(struct Curl_easy *data,
                        unsigned char *entropy,
                        size_t length)
 {
   RNG rng;
   (void)data;
   if(InitRng(&rng))
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/cyassl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/cyassl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/cyassl.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/cyassl.h	2016-07-21 06:31:36.000000000 +0800
@@ -48,13 +48,13 @@
 size_t Curl_cyassl_version(char *buffer, size_t size);
 int Curl_cyassl_shutdown(struct connectdata *conn, int sockindex);
 int Curl_cyassl_init(void);
 CURLcode Curl_cyassl_connect_nonblocking(struct connectdata *conn,
                                          int sockindex,
                                          bool *done);
-int Curl_cyassl_random(struct SessionHandle *data,
+int Curl_cyassl_random(struct Curl_easy *data,
                        unsigned char *entropy,
                        size_t length);
 void Curl_cyassl_sha256sum(const unsigned char *tmp, /* input */
                      size_t tmplen,
                      unsigned char *sha256sum, /* output */
                      size_t unused);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/darwinssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/darwinssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/darwinssl.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/darwinssl.c	2016-07-21 06:31:36.000000000 +0800
@@ -25,13 +25,13 @@
  * Source file for all iOS and Mac OS X SecureTransport-specific code for the
  * TLS/SSL layer. No code but vtls.c should ever call or use these functions.
  */
 
 #include "curl_setup.h"
 
-#include "urldata.h" /* for the SessionHandle definition */
+#include "urldata.h" /* for the Curl_easy definition */
 #include "curl_base64.h"
 #include "strtok.h"
 
 #ifdef USE_DARWINSSL
 
 #ifdef HAVE_LIMITS_H
@@ -996,24 +996,22 @@
   return false;
 }
 
 static CURLcode darwinssl_connect_step1(struct connectdata *conn,
                                         int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif /* ENABLE_IPV6 */
   size_t all_ciphers_count = 0UL, allowed_ciphers_count = 0UL, i;
   SSLCipherSuite *all_ciphers = NULL, *allowed_ciphers = NULL;
-  char *ssl_sessionid;
-  size_t ssl_sessionid_len;
   OSStatus err = noErr;
 #if CURL_BUILD_MAC
   int darwinver_maj = 0, darwinver_min = 0;
 
   GetDarwinVersionNumber(&darwinver_maj, &darwinver_min);
 #endif /* CURL_BUILD_MAC */
@@ -1471,43 +1469,52 @@
     SSLSetSessionOption(connssl->ssl_ctx, kSSLSessionOptionFalseStart,
                       data->set.ssl.falsestart); /* false start support */
   }
 #endif /* CURL_BUILD_MAC_10_9 || CURL_BUILD_IOS_7 */
 
   /* Check if there's a cached ID we can/should use here! */
-  if(!Curl_ssl_getsessionid(conn, (void **)&ssl_sessionid,
-                            &ssl_sessionid_len)) {
-    /* we got a session id, use it! */
-    err = SSLSetPeerID(connssl->ssl_ctx, ssl_sessionid, ssl_sessionid_len);
-    if(err != noErr) {
-      failf(data, "SSL: SSLSetPeerID() failed: OSStatus %d", err);
-      return CURLE_SSL_CONNECT_ERROR;
+  if(conn->ssl_config.sessionid) {
+    char *ssl_sessionid;
+    size_t ssl_sessionid_len;
+
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, (void **)&ssl_sessionid,
+                              &ssl_sessionid_len)) {
+      /* we got a session id, use it! */
+      err = SSLSetPeerID(connssl->ssl_ctx, ssl_sessionid, ssl_sessionid_len);
+      Curl_ssl_sessionid_unlock(conn);
+      if(err != noErr) {
+        failf(data, "SSL: SSLSetPeerID() failed: OSStatus %d", err);
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      /* Informational message */
+      infof(data, "SSL re-using session ID\n");
     }
-    /* Informational message */
-    infof(data, "SSL re-using session ID\n");
-  }
-  /* If there isn't one, then let's make one up! This has to be done prior
-     to starting the handshake. */
-  else {
-    CURLcode result;
-    ssl_sessionid =
-      aprintf("%s:%d:%d:%s:%hu", data->set.str[STRING_SSL_CAFILE],
-              data->set.ssl.verifypeer, data->set.ssl.verifyhost,
-              conn->host.name, conn->remote_port);
-    ssl_sessionid_len = strlen(ssl_sessionid);
+    /* If there isn't one, then let's make one up! This has to be done prior
+       to starting the handshake. */
+    else {
+      CURLcode result;
+      ssl_sessionid =
+        aprintf("%s:%d:%d:%s:%hu", data->set.str[STRING_SSL_CAFILE],
+                data->set.ssl.verifypeer, data->set.ssl.verifyhost,
+                conn->host.name, conn->remote_port);
+      ssl_sessionid_len = strlen(ssl_sessionid);
 
-    err = SSLSetPeerID(connssl->ssl_ctx, ssl_sessionid, ssl_sessionid_len);
-    if(err != noErr) {
-      failf(data, "SSL: SSLSetPeerID() failed: OSStatus %d", err);
-      return CURLE_SSL_CONNECT_ERROR;
-    }
+      err = SSLSetPeerID(connssl->ssl_ctx, ssl_sessionid, ssl_sessionid_len);
+      if(err != noErr) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "SSL: SSLSetPeerID() failed: OSStatus %d", err);
+        return CURLE_SSL_CONNECT_ERROR;
+      }
 
-    result = Curl_ssl_addsessionid(conn, ssl_sessionid, ssl_sessionid_len);
-    if(result) {
-      failf(data, "failed to store ssl session");
-      return result;
+      result = Curl_ssl_addsessionid(conn, ssl_sessionid, ssl_sessionid_len);
+      Curl_ssl_sessionid_unlock(conn);
+      if(result) {
+        failf(data, "failed to store ssl session");
+        return result;
+      }
     }
   }
 
   err = SSLSetIOFuncs(connssl->ssl_ctx, SocketRead, SocketWrite);
   if(err != noErr) {
     failf(data, "SSL: SSLSetIOFuncs() failed: OSStatus %d", err);
@@ -1623,13 +1630,13 @@
   *out = data;
   *outlen = len;
 
   return 0;
 }
 
-static int sslerr_to_curlerr(struct SessionHandle *data, int err)
+static int sslerr_to_curlerr(struct Curl_easy *data, int err)
 {
   switch(err) {
     case errSSLXCertChainInvalid:
       failf(data, "SSL certificate problem: Invalid certificate chain");
       return CURLE_SSL_CACERT;
     case errSSLUnknownRootCert:
@@ -1652,13 +1659,13 @@
     default:
       failf(data, "SSL unexpected certificate error %d", err);
       return CURLE_SSL_CACERT;
   }
 }
 
-static int append_cert_to_array(struct SessionHandle *data,
+static int append_cert_to_array(struct Curl_easy *data,
                                 unsigned char *buf, size_t buflen,
                                 CFMutableArrayRef array)
 {
     CFDataRef certdata = CFDataCreate(kCFAllocatorDefault, buf, buflen);
     if(!certdata) {
       failf(data, "SSL: failed to allocate array for CA certificate");
@@ -1697,13 +1704,13 @@
     CFArrayAppendValue(array, cacert);
     CFRelease(cacert);
 
     return CURLE_OK;
 }
 
-static int verify_cert(const char *cafile, struct SessionHandle *data,
+static int verify_cert(const char *cafile, struct Curl_easy *data,
                        SSLContextRef ctx)
 {
   int n = 0, rc;
   long res;
   unsigned char *certbuf, *der;
   size_t buflen, derlen, offset = 0;
@@ -1817,13 +1824,13 @@
   }
 }
 
 static CURLcode
 darwinssl_connect_step2(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   OSStatus err;
   SSLCipherSuite cipher;
   SSLProtocol protocol = 0;
 
   DEBUGASSERT(ssl_connect_2 == connssl->connecting_state
@@ -1957,13 +1964,13 @@
 }
 
 static CURLcode
 darwinssl_connect_step3(struct connectdata *conn,
                         int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   CFStringRef server_cert_summary;
   char server_cert_summary_c[128];
   CFArrayRef server_certs = NULL;
   SecCertificateRef server_cert;
   OSStatus err;
@@ -2081,13 +2088,13 @@
 darwinssl_connect_common(struct connectdata *conn,
                          int sockindex,
                          bool nonblocking,
                          bool *done)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int what;
 
   /* check if the connection has already been established */
@@ -2236,13 +2243,13 @@
   connssl->ssl_sockfd = 0;
 }
 
 int Curl_darwinssl_shutdown(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   ssize_t nread;
   int what;
   int rc;
   char buf[120];
 
   if(!connssl->ssl_ctx)
@@ -2384,13 +2391,13 @@
 static ssize_t darwinssl_send(struct connectdata *conn,
                               int sockindex,
                               const void *mem,
                               size_t len,
                               CURLcode *curlcode)
 {
-  /*struct SessionHandle *data = conn->data;*/
+  /*struct Curl_easy *data = conn->data;*/
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   size_t processed = 0UL;
   OSStatus err;
 
   /* The SSLWrite() function works a little differently than expected. The
      fourth argument (processed) is currently documented in Apple's
@@ -2450,13 +2457,13 @@
 static ssize_t darwinssl_recv(struct connectdata *conn,
                               int num,
                               char *buf,
                               size_t buffersize,
                               CURLcode *curlcode)
 {
-  /*struct SessionHandle *data = conn->data;*/
+  /*struct Curl_easy *data = conn->data;*/
   struct ssl_connect_data *connssl = &conn->ssl[num];
   size_t processed = 0UL;
   OSStatus err = SSLRead(connssl->ssl_ctx, buf, buffersize, &processed);
 
   if(err != noErr) {
     switch (err) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/gskit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/gskit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/gskit.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/gskit.c	2016-07-21 06:31:36.000000000 +0800
@@ -160,13 +160,13 @@
     return true;
   }
   return false;
 }
 
 
-static CURLcode gskit_status(struct SessionHandle *data, int rc,
+static CURLcode gskit_status(struct Curl_easy *data, int rc,
                              const char *procname, CURLcode defcode)
 {
   /* Process GSKit status and map it to a CURLcode. */
   switch (rc) {
   case GSK_OK:
   case GSK_OS400_ASYNCHRONOUS_SOC_INIT:
@@ -203,13 +203,13 @@
     break;
   }
   return defcode;
 }
 
 
-static CURLcode set_enum(struct SessionHandle *data, gsk_handle h,
+static CURLcode set_enum(struct Curl_easy *data, gsk_handle h,
                 GSK_ENUM_ID id, GSK_ENUM_VALUE value, bool unsupported_ok)
 {
   int rc = gsk_attribute_set_enum(h, id, value);
 
   switch (rc) {
   case GSK_OK:
@@ -225,13 +225,13 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_buffer(struct SessionHandle *data, gsk_handle h,
+static CURLcode set_buffer(struct Curl_easy *data, gsk_handle h,
                         GSK_BUF_ID id, const char *buffer, bool unsupported_ok)
 {
   int rc = gsk_attribute_set_buffer(h, id, buffer, 0);
 
   switch (rc) {
   case GSK_OK:
@@ -247,13 +247,13 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_numeric(struct SessionHandle *data,
+static CURLcode set_numeric(struct Curl_easy *data,
                             gsk_handle h, GSK_NUM_ID id, int value)
 {
   int rc = gsk_attribute_set_numeric_value(h, id, value);
 
   switch (rc) {
   case GSK_OK:
@@ -267,13 +267,13 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_callback(struct SessionHandle *data,
+static CURLcode set_callback(struct Curl_easy *data,
                              gsk_handle h, GSK_CALLBACK_ID id, void *info)
 {
   int rc = gsk_attribute_set_callback(h, id, info);
 
   switch (rc) {
   case GSK_OK:
@@ -286,13 +286,13 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_ciphers(struct SessionHandle *data,
+static CURLcode set_ciphers(struct Curl_easy *data,
                                         gsk_handle h, unsigned int *protoflags)
 {
   const char *cipherlist = data->set.str[STRING_SSL_CIPHER_LIST];
   const char *clp;
   const gskit_cipher *ctp;
   int i;
@@ -433,13 +433,13 @@
 void Curl_gskit_cleanup(void)
 {
   /* Nothing to do. */
 }
 
 
-static CURLcode init_environment(struct SessionHandle *data,
+static CURLcode init_environment(struct Curl_easy *data,
                                  gsk_handle *envir, const char *appid,
                                  const char *file, const char *label,
                                  const char *password)
 {
   int rc;
   CURLcode result;
@@ -499,13 +499,13 @@
   QsoDestroyIOCompletionPort(connssl->iocport);
   connssl->iocport = -1;
 }
 
 
 static void close_one(struct ssl_connect_data *conn,
-                      struct SessionHandle *data)
+                      struct Curl_easy *data)
 {
   if(conn->handle) {
     gskit_status(data, gsk_secure_soc_close(&conn->handle),
               "gsk_secure_soc_close()", 0);
     conn->handle = (gsk_handle) NULL;
   }
@@ -514,13 +514,13 @@
 }
 
 
 static ssize_t gskit_send(struct connectdata *conn, int sockindex,
                            const void *mem, size_t len, CURLcode *curlcode)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode cc;
   int written;
 
   cc = gskit_status(data,
                     gsk_secure_soc_write(conn->ssl[sockindex].handle,
                                          (char *) mem, (int) len, &written),
@@ -533,13 +533,13 @@
 }
 
 
 static ssize_t gskit_recv(struct connectdata *conn, int num, char *buf,
                            size_t buffersize, CURLcode *curlcode)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int buffsize;
   int nread;
   CURLcode cc;
 
   buffsize = buffersize > (size_t) INT_MAX? INT_MAX: (int) buffersize;
   cc = gskit_status(data, gsk_secure_soc_read(conn->ssl[num].handle,
@@ -552,13 +552,13 @@
   return (ssize_t) nread;
 }
 
 
 static CURLcode gskit_connect_step1(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   gsk_handle envir;
   CURLcode result;
   int rc;
   char *keyringfile;
   char *keyringpwd;
@@ -747,13 +747,13 @@
 }
 
 
 static CURLcode gskit_connect_step2(struct connectdata *conn, int sockindex,
                                     bool nonblocking)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   Qso_OverlappedIO_t cstat;
   long timeout_ms;
   struct timeval stmv;
   CURLcode result;
 
@@ -798,13 +798,13 @@
   return result;
 }
 
 
 static CURLcode gskit_connect_step3(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   const gsk_cert_data_elem *cdev;
   int cdec;
   const gsk_cert_data_elem *p;
   const char *cert = (const char *) NULL;
   const char *certend;
@@ -886,13 +886,13 @@
 }
 
 
 static CURLcode gskit_connect_common(struct connectdata *conn, int sockindex,
                                      bool nonblocking, bool *done)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   long timeout_ms;
   Qso_OverlappedIO_t cstat;
   CURLcode result = CURLE_OK;
 
   *done = connssl->state == ssl_connection_complete;
@@ -973,24 +973,24 @@
   return CURLE_OK;
 }
 
 
 void Curl_gskit_close(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   if(connssl->use)
     close_one(connssl, data);
 }
 
 
 int Curl_gskit_shutdown(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   ssize_t nread;
   int what;
   int rc;
   char buf[120];
 
   if(!connssl->handle)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/gtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/gtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/gtls.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/gtls.c	2016-07-21 06:31:36.000000000 +0800
@@ -198,13 +198,13 @@
     gnutls_global_deinit();
     gtls_inited = FALSE;
   }
   return 1;
 }
 
-static void showtime(struct SessionHandle *data,
+static void showtime(struct Curl_easy *data,
                      const char *text,
                      time_t stamp)
 {
   struct tm buffer;
   const struct tm *tm = &buffer;
   CURLcode result = Curl_gmtime(stamp, &buffer);
@@ -259,13 +259,13 @@
 /* this function does a SSL/TLS (re-)handshake */
 static CURLcode handshake(struct connectdata *conn,
                           int sockindex,
                           bool duringconnect,
                           bool nonblocking)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   gnutls_session_t session = conn->ssl[sockindex].session;
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int rc;
   int what;
@@ -364,17 +364,15 @@
 }
 
 static CURLcode
 gtls_connect_step1(struct connectdata *conn,
                    int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   gnutls_session_t session;
   int rc;
-  void *ssl_sessionid;
-  size_t ssl_idsize;
   bool sni = TRUE; /* default is SNI enabled */
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
@@ -746,25 +744,31 @@
     }
   }
 #endif
 
   /* This might be a reconnect, so we check for a session ID in the cache
      to speed up things */
+  if(conn->ssl_config.sessionid) {
+    void *ssl_sessionid;
+    size_t ssl_idsize;
+
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, &ssl_idsize)) {
+      /* we got a session id, use it! */
+      gnutls_session_set_data(session, ssl_sessionid, ssl_idsize);
 
-  if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, &ssl_idsize)) {
-    /* we got a session id, use it! */
-    gnutls_session_set_data(session, ssl_sessionid, ssl_idsize);
-
-    /* Informational message */
-    infof (data, "SSL re-using session ID\n");
+      /* Informational message */
+      infof (data, "SSL re-using session ID\n");
+    }
+    Curl_ssl_sessionid_unlock(conn);
   }
 
   return CURLE_OK;
 }
 
-static CURLcode pkp_pin_peer_pubkey(struct SessionHandle *data,
+static CURLcode pkp_pin_peer_pubkey(struct Curl_easy *data,
                                     gnutls_x509_crt_t cert,
                                     const char *pinnedpubkey)
 {
   /* Scratch */
   size_t len1 = 0, len2 = 0;
   unsigned char *buff1 = NULL;
@@ -833,17 +837,15 @@
   char certbuf[256] = ""; /* big enough? */
   size_t size;
   unsigned int algo;
   unsigned int bits;
   time_t certclock;
   const char *ptr;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   gnutls_session_t session = conn->ssl[sockindex].session;
   int rc;
-  bool incache;
-  void *ssl_sessionid;
 #ifdef HAS_ALPN
   gnutls_datum_t proto;
 #endif
   CURLcode result = CURLE_OK;
 
   gnutls_protocol_t version = gnutls_protocol_get_version(session);
@@ -1265,37 +1267,41 @@
 #endif
 
   conn->ssl[sockindex].state = ssl_connection_complete;
   conn->recv[sockindex] = gtls_recv;
   conn->send[sockindex] = gtls_send;
 
-  {
+  if(conn->ssl_config.sessionid) {
     /* we always unconditionally get the session id here, as even if we
        already got it from the cache and asked to use it in the connection, it
        might've been rejected and then a new one is in use now and we need to
        detect that. */
+    bool incache;
+    void *ssl_sessionid;
     void *connect_sessionid;
     size_t connect_idsize = 0;
 
     /* get the session ID data size */
     gnutls_session_get_data(session, NULL, &connect_idsize);
     connect_sessionid = malloc(connect_idsize); /* get a buffer for it */
 
     if(connect_sessionid) {
       /* extract session ID to the allocated buffer */
       gnutls_session_get_data(session, connect_sessionid, &connect_idsize);
 
+      Curl_ssl_sessionid_lock(conn);
       incache = !(Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL));
       if(incache) {
         /* there was one before in the cache, so instead of risking that the
            previous one was rejected, we just kill that and store the new */
         Curl_ssl_delsessionid(conn, ssl_sessionid);
       }
 
       /* store this session id */
       result = Curl_ssl_addsessionid(conn, connect_sessionid, connect_idsize);
+      Curl_ssl_sessionid_unlock(conn);
       if(result) {
         free(connect_sessionid);
         result = CURLE_OUT_OF_MEMORY;
       }
     }
     else
@@ -1422,13 +1428,13 @@
  * socket open (CCC - Clear Command Channel)
  */
 int Curl_gtls_shutdown(struct connectdata *conn, int sockindex)
 {
   ssize_t result;
   int retval = 0;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int done = 0;
   char buf[120];
 
   /* This has only been tested on the proftpd server, and the mod_tls code
      sends a close notify alert without waiting for a close notify alert in
      response. Thus we wait for a close notify alert from the server, but
@@ -1535,13 +1541,13 @@
 size_t Curl_gtls_version(char *buffer, size_t size)
 {
   return snprintf(buffer, size, "GnuTLS/%s", gnutls_check_version(NULL));
 }
 
 #ifndef USE_GNUTLS_NETTLE
-static int Curl_gtls_seed(struct SessionHandle *data)
+static int Curl_gtls_seed(struct Curl_easy *data)
 {
   /* we have the "SSL is seeded" boolean static to prevent multiple
      time-consuming seedings in vain */
   static bool ssl_seeded = FALSE;
 
   /* Quickly add a bit of entropy */
@@ -1559,13 +1565,13 @@
   }
   return 0;
 }
 #endif
 
 /* data might be NULL! */
-int Curl_gtls_random(struct SessionHandle *data,
+int Curl_gtls_random(struct Curl_easy *data,
                      unsigned char *entropy,
                      size_t length)
 {
 #if defined(USE_GNUTLS_NETTLE)
   (void)data;
   gnutls_rnd(GNUTLS_RND_RANDOM, entropy, length);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/gtls.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/gtls.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/gtls.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/gtls.h	2016-07-21 06:31:36.000000000 +0800
@@ -38,13 +38,13 @@
  /* close a SSL connection */
 void Curl_gtls_close(struct connectdata *conn, int sockindex);
 
 void Curl_gtls_session_free(void *ptr);
 size_t Curl_gtls_version(char *buffer, size_t size);
 int Curl_gtls_shutdown(struct connectdata *conn, int sockindex);
-int Curl_gtls_random(struct SessionHandle *data,
+int Curl_gtls_random(struct Curl_easy *data,
                      unsigned char *entropy,
                      size_t length);
 void Curl_gtls_md5sum(unsigned char *tmp, /* input */
                       size_t tmplen,
                       unsigned char *md5sum, /* output */
                       size_t md5len);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/mbedtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/mbedtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/mbedtls.c	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/mbedtls.c	2016-07-21 06:31:36.000000000 +0800
@@ -100,18 +100,18 @@
 #undef MBEDTLS_DEBUG
 
 #ifdef MBEDTLS_DEBUG
 static void mbed_debug(void *context, int level, const char *f_name,
                        int line_nb, const char *line)
 {
-  struct SessionHandle *data = NULL;
+  struct Curl_easy *data = NULL;
 
   if(!context)
     return;
 
-  data = (struct SessionHandle *)context;
+  data = (struct Curl_easy *)context;
 
   infof(data, "%s", line);
   (void) level;
 }
 #else
 #endif
@@ -155,33 +155,24 @@
 static Curl_send mbed_send;
 
 static CURLcode
 mbed_connect_step1(struct connectdata *conn,
                    int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
 
-  bool sni = TRUE; /* default is SNI enabled */
   int ret = -1;
-#ifdef ENABLE_IPV6
-  struct in6_addr addr;
-#else
-  struct in_addr addr;
-#endif
-  void *old_session = NULL;
   char errorbuf[128];
   errorbuf[0]=0;
 
   /* mbedTLS only supports SSLv3 and TLSv1 */
   if(data->set.ssl.version == CURL_SSLVERSION_SSLv2) {
     failf(data, "mbedTLS does not support SSLv2");
     return CURLE_SSL_CONNECT_ERROR;
   }
-  else if(data->set.ssl.version == CURL_SSLVERSION_SSLv3)
-    sni = FALSE; /* SSLv3 has no SNI */
 
 #ifdef THREADING_SUPPORT
   entropy_init_mutex(&entropy);
   mbedtls_ctr_drbg_init(&connssl->ctr_drbg);
 
   ret = mbedtls_ctr_drbg_seed(&connssl->ctr_drbg, entropy_func_mutex,
@@ -370,19 +361,28 @@
                       mbedtls_net_send,
                       mbedtls_net_recv,
                       NULL /*  rev_timeout() */);
 
   mbedtls_ssl_conf_ciphersuites(&connssl->config,
                                 mbedtls_ssl_list_ciphersuites());
-  if(!Curl_ssl_getsessionid(conn, &old_session, NULL)) {
-    ret = mbedtls_ssl_set_session(&connssl->ssl, old_session);
-    if(ret) {
-      failf(data, "mbedtls_ssl_set_session returned -0x%x", -ret);
-      return CURLE_SSL_CONNECT_ERROR;
+
+  /* Check if there's a cached ID we can/should use here! */
+  if(conn->ssl_config.sessionid) {
+    void *old_session = NULL;
+
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &old_session, NULL)) {
+      ret = mbedtls_ssl_set_session(&connssl->ssl, old_session);
+      if(ret) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "mbedtls_ssl_set_session returned -0x%x", -ret);
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      infof(data, "mbedTLS re-using session\n");
     }
-    infof(data, "mbedTLS re-using session\n");
+    Curl_ssl_sessionid_unlock(conn);
   }
 
   mbedtls_ssl_conf_ca_chain(&connssl->config,
                             &connssl->cacert,
                             &connssl->crl);
 
@@ -430,13 +430,13 @@
 
 static CURLcode
 mbed_connect_step2(struct connectdata *conn,
                    int sockindex)
 {
   int ret;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
   const mbedtls_x509_crt *peercert;
 
 #ifdef HAS_ALPN
   const char* next_protocol;
 #endif
@@ -592,40 +592,45 @@
 static CURLcode
 mbed_connect_step3(struct connectdata *conn,
                    int sockindex)
 {
   CURLcode retcode = CURLE_OK;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
-  void *old_ssl_sessionid = NULL;
-  mbedtls_ssl_session *our_ssl_sessionid;
-  int ret;
+  struct Curl_easy *data = conn->data;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  our_ssl_sessionid = malloc(sizeof(mbedtls_ssl_session));
-  if(!our_ssl_sessionid)
-    return CURLE_OUT_OF_MEMORY;
+  if(conn->ssl_config.sessionid) {
+    int ret;
+    mbedtls_ssl_session *our_ssl_sessionid;
+    void *old_ssl_sessionid = NULL;
+
+    our_ssl_sessionid = malloc(sizeof(mbedtls_ssl_session));
+    if(!our_ssl_sessionid)
+      return CURLE_OUT_OF_MEMORY;
 
-  mbedtls_ssl_session_init(our_ssl_sessionid);
+    mbedtls_ssl_session_init(our_ssl_sessionid);
 
-  ret = mbedtls_ssl_get_session(&connssl->ssl, our_ssl_sessionid);
-  if(ret) {
-    failf(data, "mbedtls_ssl_get_session returned -0x%x", -ret);
-    return CURLE_SSL_CONNECT_ERROR;
-  }
+    ret = mbedtls_ssl_get_session(&connssl->ssl, our_ssl_sessionid);
+    if(ret) {
+      failf(data, "mbedtls_ssl_get_session returned -0x%x", -ret);
+      return CURLE_SSL_CONNECT_ERROR;
+    }
 
-  /* If there's already a matching session in the cache, delete it */
-  if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL))
-    Curl_ssl_delsessionid(conn, old_ssl_sessionid);
-
-  retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0);
-  if(retcode) {
-    free(our_ssl_sessionid);
-    failf(data, "failed to store ssl session");
-    return retcode;
+    /* If there's already a matching session in the cache, delete it */
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL))
+      Curl_ssl_delsessionid(conn, old_ssl_sessionid);
+
+    retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0);
+    Curl_ssl_sessionid_unlock(conn);
+    if(retcode) {
+      free(our_ssl_sessionid);
+      failf(data, "failed to store ssl session");
+      return retcode;
+    }
   }
 
   connssl->connecting_state = ssl_connect_done;
 
   return CURLE_OK;
 }
@@ -645,13 +650,13 @@
     ret = -1;
   }
 
   return ret;
 }
 
-void Curl_mbedtls_close_all(struct SessionHandle *data)
+void Curl_mbedtls_close_all(struct Curl_easy *data)
 {
   (void)data;
 }
 
 void Curl_mbedtls_close(struct connectdata *conn, int sockindex)
 {
@@ -709,13 +714,13 @@
 mbed_connect_common(struct connectdata *conn,
                     int sockindex,
                     bool nonblocking,
                     bool *done)
 {
   CURLcode retcode;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int what;
 
   /* check if the connection has already been established */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/mbedtls.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/mbedtls.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/mbedtls.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/mbedtls.h	2016-07-21 06:31:36.000000000 +0800
@@ -38,13 +38,13 @@
 CURLcode Curl_mbedtls_connect_nonblocking(struct connectdata *conn,
                                            int sockindex,
                                            bool *done);
 
 /* tell mbedTLS to close down all open information regarding connections (and
    thus session ID caching etc) */
-void Curl_mbedtls_close_all(struct SessionHandle *data);
+void Curl_mbedtls_close_all(struct Curl_easy *data);
 
  /* close a SSL connection */
 void Curl_mbedtls_close(struct connectdata *conn, int sockindex);
 
 void Curl_mbedtls_session_free(void *ptr);
 size_t Curl_mbedtls_version(char *buffer, size_t size);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/nss.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/nss.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/nss.c	2016-05-16 15:23:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/nss.c	2016-07-21 06:31:36.000000000 +0800
@@ -195,18 +195,18 @@
   if(name)
     return name;
 
   return "unknown error";
 }
 
-static void nss_print_error_message(struct SessionHandle *data, PRUint32 err)
+static void nss_print_error_message(struct Curl_easy *data, PRUint32 err)
 {
   failf(data, "%s", PR_ErrorToString(err, PR_LANGUAGE_I_DEFAULT));
 }
 
-static SECStatus set_ciphers(struct SessionHandle *data, PRFileDesc * model,
+static SECStatus set_ciphers(struct Curl_easy *data, PRFileDesc * model,
                              char *cipher_list)
 {
   unsigned int i;
   PRBool cipher_state[NUM_OF_CIPHERS];
   PRBool found;
   char *cipher;
@@ -316,13 +316,13 @@
 /* Check if the given string is filename or nickname of a certificate.  If the
  * given string is recognized as filename, return NULL.  If the given string is
  * recognized as nickname, return a duplicated string.  The returned string
  * should be later deallocated using free().  If the OOM failure occurs, we
  * return NULL, too.
  */
-static char* dup_nickname(struct SessionHandle *data, enum dupstring cert_kind)
+static char* dup_nickname(struct Curl_easy *data, enum dupstring cert_kind)
 {
   const char *str = data->set.str[cert_kind];
   const char *n;
 
   if(!is_file(str))
     /* no such file exists, use the string as nickname */
@@ -594,13 +594,13 @@
   return 0; /* The caller will print a generic error */
 }
 
 static CURLcode cert_stuff(struct connectdata *conn, int sockindex,
                            char *cert_file, char *key_file)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result;
 
   if(cert_file) {
     result = nss_load_cert(&conn->ssl[sockindex], cert_file, PR_FALSE);
     if(result) {
       const PRErrorCode err = PR_GetError();
@@ -733,13 +733,13 @@
 
 #if NSSVERNUM >= 0x030f04 /* 3.15.4 */
 static SECStatus CanFalseStartCallback(PRFileDesc *sock, void *client_data,
                                        PRBool *canFalseStart)
 {
   struct connectdata *conn = client_data;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   SSLChannelInfo channelInfo;
   SSLCipherSuiteInfo cipherInfo;
 
   SECStatus rv;
   PRBool negotiatedExtension;
@@ -788,13 +788,13 @@
 
 end:
   return SECSuccess;
 }
 #endif
 
-static void display_cert_info(struct SessionHandle *data,
+static void display_cert_info(struct Curl_easy *data,
                               CERTCertificate *cert)
 {
   char *subject, *issuer, *common_name;
   PRExplodedTime printableTime;
   char timeString[256];
   PRTime notBefore, notAfter;
@@ -889,13 +889,13 @@
   return result;
 }
 
 static SECStatus BadCertHandler(void *arg, PRFileDesc *sock)
 {
   struct connectdata *conn = (struct connectdata *)arg;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   PRErrorCode err = PR_GetError();
   CERTCertificate *cert;
 
   /* remember the cert verification result */
   data->set.ssl.certverifyresult = err;
 
@@ -947,13 +947,13 @@
 }
 
 static CURLcode cmp_peer_pubkey(struct ssl_connect_data *connssl,
                                 const char *pinnedpubkey)
 {
   CURLcode result = CURLE_SSL_PINNEDPUBKEYNOTMATCH;
-  struct SessionHandle *data = connssl->data;
+  struct Curl_easy *data = connssl->data;
   CERTCertificate *cert;
 
   if(!pinnedpubkey)
     /* no pinned public key specified */
     return CURLE_OK;
 
@@ -999,13 +999,13 @@
 static SECStatus SelectClientCert(void *arg, PRFileDesc *sock,
                                   struct CERTDistNamesStr *caNames,
                                   struct CERTCertificateStr **pRetCert,
                                   struct SECKEYPrivateKeyStr **pRetKey)
 {
   struct ssl_connect_data *connssl = (struct ssl_connect_data *)arg;
-  struct SessionHandle *data = connssl->data;
+  struct Curl_easy *data = connssl->data;
   const char *nickname = connssl->client_nickname;
 
   if(connssl->obj_clicert) {
     /* use the cert/key provided by PEM reader */
     static const char pem_slotname[] = "PEM Token #1";
     SECItem cert_der = { 0, NULL, 0 };
@@ -1131,13 +1131,13 @@
   const PRCloseFN close_fn = PR_GetDefaultIOMethods()->close;
   fd->secret = NULL;
   return close_fn(fd);
 }
 
 /* data might be NULL */
-static CURLcode nss_init_core(struct SessionHandle *data, const char *cert_dir)
+static CURLcode nss_init_core(struct Curl_easy *data, const char *cert_dir)
 {
   NSSInitParameters initparams;
 
   if(nss_context != NULL)
     return CURLE_OK;
 
@@ -1169,13 +1169,13 @@
 
   infof(data, "Unable to initialize NSS\n");
   return CURLE_SSL_CACERT_BADFILE;
 }
 
 /* data might be NULL */
-static CURLcode nss_init(struct SessionHandle *data)
+static CURLcode nss_init(struct Curl_easy *data)
 {
   char *cert_dir;
   struct_stat st;
   CURLcode result;
 
   if(initialized)
@@ -1248,13 +1248,13 @@
   /* We will actually initialize NSS later */
 
   return 1;
 }
 
 /* data might be NULL */
-CURLcode Curl_nss_force_init(struct SessionHandle *data)
+CURLcode Curl_nss_force_init(struct Curl_easy *data)
 {
   CURLcode result;
   if(!nss_initlock) {
     if(data)
       failf(data, "unable to initialize NSS, curl_global_init() should have "
                   "been called with CURL_GLOBAL_SSL or CURL_GLOBAL_ALL");
@@ -1394,13 +1394,13 @@
 static Curl_recv nss_recv;
 static Curl_send nss_send;
 
 static CURLcode nss_load_ca_certificates(struct connectdata *conn,
                                          int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   const char *cafile = data->set.ssl.CAfile;
   const char *capath = data->set.ssl.CApath;
 
   if(cafile) {
     CURLcode result = nss_load_cert(&conn->ssl[sockindex], cafile, PR_TRUE);
     if(result)
@@ -1444,13 +1444,13 @@
       capath ? capath : "none");
 
   return CURLE_OK;
 }
 
 static CURLcode nss_init_sslver(SSLVersionRange *sslver,
-                                struct SessionHandle *data)
+                                struct Curl_easy *data)
 {
   switch(data->set.ssl.version) {
   default:
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     sslver->min = SSL_LIBRARY_VERSION_TLS_1_0;
@@ -1497,13 +1497,13 @@
 
   failf(data, "TLS minor version cannot be set");
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 static CURLcode nss_fail_connect(struct ssl_connect_data *connssl,
-                                 struct SessionHandle *data,
+                                 struct Curl_easy *data,
                                  CURLcode curlerr)
 {
   PRErrorCode err = 0;
 
   if(is_nss_error(curlerr)) {
     /* read NSPR error code */
@@ -1524,13 +1524,13 @@
 
   return curlerr;
 }
 
 /* Switch the SSL socket into non-blocking mode. */
 static CURLcode nss_set_nonblock(struct ssl_connect_data *connssl,
-                                 struct SessionHandle *data)
+                                 struct Curl_easy *data)
 {
   static PRSocketOptionData sock_opt;
   sock_opt.option = PR_SockOpt_Nonblocking;
   sock_opt.value.non_blocking = PR_TRUE;
 
   if(PR_SetSocketOption(connssl->handle, &sock_opt) != PR_SUCCESS)
@@ -1543,13 +1543,13 @@
 {
   PRFileDesc *model = NULL;
   PRFileDesc *nspr_io = NULL;
   PRFileDesc *nspr_io_stub = NULL;
   PRBool ssl_no_cache;
   PRBool ssl_cbc_random_iv;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   CURLcode result;
 
   SSLVersionRange sslver = {
     SSL_LIBRARY_VERSION_TLS_1_0,  /* min */
@@ -1812,13 +1812,13 @@
   return nss_fail_connect(connssl, data, result);
 }
 
 static CURLcode nss_do_connect(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_SSL_CONNECT_ERROR;
   PRUint32 timeout;
 
   /* check timeout situation */
   const long time_left = Curl_timeleft(data, NULL, TRUE);
   if(time_left < 0L) {
@@ -1875,13 +1875,13 @@
 }
 
 static CURLcode nss_connect_common(struct connectdata *conn, int sockindex,
                                    bool *done)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   const bool blocking = (done == NULL);
   CURLcode result;
 
   if(connssl->state == ssl_connection_complete)
     return CURLE_OK;
 
@@ -2012,20 +2012,20 @@
 size_t Curl_nss_version(char *buffer, size_t size)
 {
   return snprintf(buffer, size, "NSS/%s", NSS_VERSION);
 }
 
 /* data might be NULL */
-int Curl_nss_seed(struct SessionHandle *data)
+int Curl_nss_seed(struct Curl_easy *data)
 {
   /* make sure that NSS is initialized */
   return !!Curl_nss_force_init(data);
 }
 
 /* data might be NULL */
-int Curl_nss_random(struct SessionHandle *data,
+int Curl_nss_random(struct Curl_easy *data,
                     unsigned char *entropy,
                     size_t length)
 {
   Curl_nss_seed(data);  /* Initiate the seed if not already done */
 
   if(SECSuccess != PK11_GenerateRandom(entropy, curlx_uztosi(length)))
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/nssg.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/nssg.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/nssg.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/nssg.h	2016-07-21 06:31:36.000000000 +0800
@@ -39,18 +39,18 @@
 
 int Curl_nss_init(void);
 void Curl_nss_cleanup(void);
 
 size_t Curl_nss_version(char *buffer, size_t size);
 int Curl_nss_check_cxn(struct connectdata *cxn);
-int Curl_nss_seed(struct SessionHandle *data);
+int Curl_nss_seed(struct Curl_easy *data);
 
 /* initialize NSS library if not already */
-CURLcode Curl_nss_force_init(struct SessionHandle *data);
+CURLcode Curl_nss_force_init(struct Curl_easy *data);
 
-int Curl_nss_random(struct SessionHandle *data,
+int Curl_nss_random(struct Curl_easy *data,
                     unsigned char *entropy,
                     size_t length);
 
 void Curl_nss_md5sum(unsigned char *tmp, /* input */
                      size_t tmplen,
                      unsigned char *md5sum, /* output */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/openssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/openssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/openssl.c	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/openssl.c	2016-07-21 06:31:36.000000000 +0800
@@ -119,12 +119,18 @@
 
 #if (OPENSSL_VERSION_NUMBER >= 0x1000200fL) && /* 1.0.2 or later */ \
   !defined(LIBRESSL_VERSION_NUMBER)
 #define HAVE_X509_GET0_SIGNATURE 1
 #endif
 
+#if OPENSSL_VERSION_NUMBER >= 0x10002003L && \
+  OPENSSL_VERSION_NUMBER <= 0x10002FFFL && \
+  !defined(OPENSSL_NO_COMP)
+#define HAVE_SSL_COMP_FREE_COMPRESSION_METHODS 1
+#endif
+
 #if (OPENSSL_VERSION_NUMBER < 0x0090808fL)
 /* not present in older OpenSSL */
 #define OPENSSL_load_builtin_modules(x)
 #endif
 
 #if defined(LIBRESSL_VERSION_NUMBER)
@@ -177,13 +183,13 @@
 {
   /* this is a very silly decision to make */
   return (nread > 500) ? TRUE : FALSE;
 }
 #endif
 
-static int ossl_seed(struct SessionHandle *data)
+static int ossl_seed(struct Curl_easy *data)
 {
   char *buf = data->state.buffer; /* point to the big buffer */
   int nread=0;
 
   /* Q: should we add support for a random file name as a libcurl option?
      A: Yes, it is here */
@@ -246,13 +252,13 @@
   }
 
   infof(data, "libcurl is now using a weak random seed!\n");
   return nread;
 }
 
-static void Curl_ossl_seed(struct SessionHandle *data)
+static void Curl_ossl_seed(struct Curl_easy *data)
 {
   /* we have the "SSL is seeded" boolean static to prevent multiple
      time-consuming seedings in vain */
   static bool ssl_seeded = FALSE;
 
   if(!ssl_seeded || data->set.str[STRING_SSL_RANDOM_FILE] ||
@@ -330,13 +336,13 @@
                SSL_CTX* ctx,
                char *cert_file,
                const char *cert_type,
                char *key_file,
                const char *key_type)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   int file_type = do_file_type(cert_type);
 
   if(cert_file || (file_type == SSL_FILETYPE_ENGINE)) {
     SSL *ssl;
     X509 *x509;
@@ -663,13 +669,13 @@
   return !rc;
 #endif
 }
 
 /* Return error string for last OpenSSL error
  */
-static char *SSL_strerror(unsigned long error, char *buf, size_t size)
+static char *ossl_strerror(unsigned long error, char *buf, size_t size)
 {
   /* OpenSSL 0.9.6 and later has a function named
      ERR_error_string_n() that takes the size of the buffer as a
      third argument */
   ERR_error_string_n(error, buf, size);
   return buf;
@@ -745,14 +751,13 @@
   ERR_remove_state(0);
 #endif
 
   /* Free all memory allocated by all configuration modules */
   CONF_modules_free();
 
-#if OPENSSL_VERSION_NUMBER >= 0x10002003L && \
-    OPENSSL_VERSION_NUMBER <= 0x10002FFFL
+#ifdef HAVE_SSL_COMP_FREE_COMPRESSION_METHODS
   SSL_COMP_free_compression_methods();
 #endif
 }
 
 /*
  * This function is used to determine connection status.
@@ -805,13 +810,13 @@
 #endif
   return -1; /* connection status unknown */
 }
 
 /* Selects an OpenSSL crypto engine
  */
-CURLcode Curl_ossl_set_engine(struct SessionHandle *data, const char *engine)
+CURLcode Curl_ossl_set_engine(struct Curl_easy *data, const char *engine)
 {
 #if defined(USE_OPENSSL) && defined(HAVE_OPENSSL_ENGINE_H)
   ENGINE *e;
 
 #if OPENSSL_VERSION_NUMBER >= 0x00909000L
   e = ENGINE_by_id(engine);
@@ -836,13 +841,13 @@
   }
   if(!ENGINE_init(e)) {
     char buf[256];
 
     ENGINE_free(e);
     failf(data, "Failed to initialise SSL Engine '%s':\n%s",
-          engine, SSL_strerror(ERR_get_error(), buf, sizeof(buf)));
+          engine, ossl_strerror(ERR_get_error(), buf, sizeof(buf)));
     return CURLE_SSL_ENGINE_INITFAILED;
   }
   data->state.engine = e;
   return CURLE_OK;
 #else
   (void)engine;
@@ -850,13 +855,13 @@
   return CURLE_SSL_ENGINE_NOTFOUND;
 #endif
 }
 
 /* Sets engine as default for all SSL operations
  */
-CURLcode Curl_ossl_set_engine_default(struct SessionHandle *data)
+CURLcode Curl_ossl_set_engine_default(struct Curl_easy *data)
 {
 #ifdef HAVE_OPENSSL_ENGINE_H
   if(data->state.engine) {
     if(ENGINE_set_default(data->state.engine, ENGINE_METHOD_ALL) > 0) {
       infof(data, "set default crypto engine '%s'\n",
             ENGINE_get_id(data->state.engine));
@@ -872,13 +877,13 @@
 #endif
   return CURLE_OK;
 }
 
 /* Return list of OpenSSL crypto engine names.
  */
-struct curl_slist *Curl_ossl_engines_list(struct SessionHandle *data)
+struct curl_slist *Curl_ossl_engines_list(struct Curl_easy *data)
 {
   struct curl_slist *list = NULL;
 #if defined(USE_OPENSSL) && defined(HAVE_OPENSSL_ENGINE_H)
   struct curl_slist *beg;
   ENGINE *e;
 
@@ -921,15 +926,15 @@
  * socket open (CCC - Clear Command Channel)
  */
 int Curl_ossl_shutdown(struct connectdata *conn, int sockindex)
 {
   int retval = 0;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
-  char buf[120]; /* We will use this for the OpenSSL error buffer, so it has
-                    to be at least 120 bytes long. */
+  struct Curl_easy *data = conn->data;
+  char buf[256]; /* We will use this for the OpenSSL error buffer, so it has
+                    to be at least 256 bytes long. */
   unsigned long sslerror;
   ssize_t nread;
   int buffsize;
   int err;
   int done = 0;
 
@@ -972,13 +977,13 @@
           done = 1;
           break;
         default:
           /* openssl/ssl.h says "look at error stack/return value/errno" */
           sslerror = ERR_get_error();
           failf(conn->data, OSSL_PACKAGE " SSL read: %s, errno %d",
-                ERR_error_string(sslerror, buf),
+                ossl_strerror(sslerror, buf, sizeof(buf)),
                 SOCKERRNO);
           done = 1;
           break;
         }
       }
       else if(0 == what) {
@@ -1024,13 +1029,13 @@
 }
 
 /*
  * This function is called when the 'data' struct is going away. Close
  * down everything and free all resources!
  */
-void Curl_ossl_close_all(struct SessionHandle *data)
+void Curl_ossl_close_all(struct Curl_easy *data)
 {
 #ifdef HAVE_OPENSSL_ENGINE_H
   if(data->state.engine) {
     ENGINE_finish(data->state.engine);
     ENGINE_free(data->state.engine);
     data->state.engine = NULL;
@@ -1066,20 +1071,21 @@
 */
 static CURLcode verifyhost(struct connectdata *conn, X509 *server_cert)
 {
   bool matched = FALSE;
   int target = GEN_DNS; /* target type, GEN_DNS or GEN_IPADD */
   size_t addrlen = 0;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   STACK_OF(GENERAL_NAME) *altnames;
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
   CURLcode result = CURLE_OK;
+  bool dNSName = FALSE; /* if a dNSName field exists in the cert */
 
 #ifdef ENABLE_IPV6
   if(conn->bits.ipv6_ip &&
      Curl_inet_pton(AF_INET6, conn->host.name, &addr)) {
     target = GEN_IPADD;
     addrlen = sizeof(struct in6_addr);
@@ -1094,22 +1100,29 @@
   /* get a "list" of alternative names */
   altnames = X509_get_ext_d2i(server_cert, NID_subject_alt_name, NULL, NULL);
 
   if(altnames) {
     int numalts;
     int i;
+    bool dnsmatched = FALSE;
+    bool ipmatched = FALSE;
 
     /* get amount of alternatives, RFC2459 claims there MUST be at least
        one, but we don't depend on it... */
     numalts = sk_GENERAL_NAME_num(altnames);
 
-    /* loop through all alternatives while none has matched */
-    for(i=0; (i<numalts) && !matched; i++) {
+    /* loop through all alternatives - until a dnsmatch */
+    for(i=0; (i < numalts) && !dnsmatched; i++) {
       /* get a handle to alternative name number i */
       const GENERAL_NAME *check = sk_GENERAL_NAME_value(altnames, i);
 
+      /* If a subjectAltName extension of type dNSName is present, that MUST
+         be used as the identity. / RFC2818 section 3.1 */
+      if(check->type == GEN_DNS)
+        dNSName = TRUE;
+
       /* only check alternatives of the same type the target is */
       if(check->type == target) {
         /* get data and length */
         const char *altptr = (char *)ASN1_STRING_data(check->d.ia5);
         size_t altlen = (size_t) ASN1_STRING_length(check->d.ia5);
 
@@ -1126,41 +1139,46 @@
              it always 0-terminates an IA5String."
           */
           if((altlen == strlen(altptr)) &&
              /* if this isn't true, there was an embedded zero in the name
                 string and we cannot match it. */
              Curl_cert_hostcheck(altptr, conn->host.name)) {
-            matched = TRUE;
+            dnsmatched = TRUE;
             infof(data,
                   " subjectAltName: host \"%s\" matched cert's \"%s\"\n",
                   conn->host.dispname, altptr);
           }
           break;
 
         case GEN_IPADD: /* IP address comparison */
           /* compare alternative IP address if the data chunk is the same size
              our server IP address is */
           if((altlen == addrlen) && !memcmp(altptr, &addr, altlen)) {
-            matched = TRUE;
+            ipmatched = TRUE;
             infof(data,
                   " subjectAltName: host \"%s\" matched cert's IP address!\n",
                   conn->host.dispname);
           }
           break;
         }
       }
     }
     GENERAL_NAMES_free(altnames);
+
+    if(dnsmatched || (!dNSName && ipmatched)) {
+      /* count as a match if the dnsname matched or if there was no dnsname
+         fields at all AND there was an IP field match */
+      matched = TRUE;
+    }
   }
 
   if(matched)
     /* an alternative name matched */
     ;
-  else if(altnames) {
-    /* an alternative name field existed, but didn't match and then we MUST
-       fail */
+  else if(dNSName) {
+    /* an dNSName field existed, but didn't match and then we MUST fail */
     infof(data, " subjectAltName does not match %s\n", conn->host.dispname);
     failf(data, "SSL: no alternative certificate subject name matches "
           "target host name '%s'", conn->host.dispname);
     result = CURLE_PEER_FAILED_VERIFICATION;
   }
   else {
@@ -1254,13 +1272,13 @@
 static CURLcode verifystatus(struct connectdata *conn,
                              struct ssl_connect_data *connssl)
 {
   int i, ocsp_status;
   const unsigned char *p;
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
 
   OCSP_RESPONSE *rsp = NULL;
   OCSP_BASICRESP *br = NULL;
   X509_STORE     *st = NULL;
   STACK_OF(X509) *ch = NULL;
 
@@ -1470,13 +1488,13 @@
  * Our callback from the SSL/TLS layers.
  */
 static void ssl_tls_trace(int direction, int ssl_ver, int content_type,
                           const void *buf, size_t len, SSL *ssl,
                           void *userp)
 {
-  struct SessionHandle *data;
+  struct Curl_easy *data;
   const char *msg_name, *tls_rt_name;
   char ssl_buf[1024];
   char unknown[32];
   int msg_type, txt_len;
   const char *verstr = NULL;
   struct connectdata *conn = userp;
@@ -1656,15 +1674,14 @@
 }
 
 static CURLcode ossl_connect_step1(struct connectdata *conn, int sockindex)
 {
   CURLcode result = CURLE_OK;
   char *ciphers;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   SSL_METHOD_QUAL SSL_METHOD *req_method = NULL;
-  void *ssl_sessionid = NULL;
   X509_LOOKUP *lookup = NULL;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   long ctx_options;
 #ifdef SSL_CTRL_SET_TLSEXT_HOSTNAME
   bool sni;
@@ -2074,21 +2091,28 @@
      !SSL_set_tlsext_host_name(connssl->handle, conn->host.name))
     infof(data, "WARNING: failed to configure server name indication (SNI) "
           "TLS extension\n");
 #endif
 
   /* Check if there's a cached ID we can/should use here! */
-  if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL)) {
-    /* we got a session id, use it! */
-    if(!SSL_set_session(connssl->handle, ssl_sessionid)) {
-      failf(data, "SSL: SSL_set_session failed: %s",
-            ERR_error_string(ERR_get_error(), NULL));
-      return CURLE_SSL_CONNECT_ERROR;
+  if(conn->ssl_config.sessionid) {
+    void *ssl_sessionid = NULL;
+
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL)) {
+      /* we got a session id, use it! */
+      if(!SSL_set_session(connssl->handle, ssl_sessionid)) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "SSL: SSL_set_session failed: %s",
+              ERR_error_string(ERR_get_error(), NULL));
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      /* Informational message */
+      infof (data, "SSL re-using session ID\n");
     }
-    /* Informational message */
-    infof (data, "SSL re-using session ID\n");
+    Curl_ssl_sessionid_unlock(conn);
   }
 
   /* pass the raw socket into the SSL layers */
   if(!SSL_set_fd(connssl->handle, (int)sockfd)) {
     failf(data, "SSL: SSL_set_fd failed: %s",
           ERR_error_string(ERR_get_error(), NULL));
@@ -2099,13 +2123,13 @@
 
   return CURLE_OK;
 }
 
 static CURLcode ossl_connect_step2(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int err;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   DEBUGASSERT(ssl_connect_2 == connssl->connecting_state
              || ssl_connect_2_reading == connssl->connecting_state
              || ssl_connect_2_writing == connssl->connecting_state);
 
@@ -2162,13 +2186,13 @@
           /* strcpy() is fine here as long as the string fits within
              error_buffer */
           strcpy(error_buffer, "SSL certificate verification failed");
       }
       else {
         result = CURLE_SSL_CONNECT_ERROR;
-        SSL_strerror(errdetail, error_buffer, sizeof(error_buffer));
+        ossl_strerror(errdetail, error_buffer, sizeof(error_buffer));
       }
 
       /* detail is already set to the SSL error above */
 
       /* If we e.g. use SSLv2 request-method and the server doesn't like us
        * (RST connection etc.), OpenSSL gives no explanation whatsoever and
@@ -2247,17 +2271,20 @@
   long info_len = BIO_get_mem_data(mem, &ptr); \
   Curl_ssl_push_certinfo_len(data, _num, _label, ptr, info_len); \
   if(1!=BIO_reset(mem))                                          \
     break;                                                       \
 } WHILE_FALSE
 
-static void pubkey_show(struct SessionHandle *data,
+static void pubkey_show(struct Curl_easy *data,
                         BIO *mem,
                         int num,
                         const char *type,
                         const char *name,
+#ifdef HAVE_OPAQUE_RSA_DSA_DH
+                        const
+#endif
                         BIGNUM *bn)
 {
   char *ptr;
   char namebuf[32];
 
   snprintf(namebuf, sizeof(namebuf), "%s(%s)", type, name);
@@ -2277,13 +2304,13 @@
   if(_type->_name) { \
     pubkey_show(data, mem, _num, #_type, #_name, _type->_name); \
   } \
 } WHILE_FALSE
 #endif
 
-static int X509V3_ext(struct SessionHandle *data,
+static int X509V3_ext(struct Curl_easy *data,
                       int certnum,
                       STACK_OF(X509_EXTENSION) *exts)
 {
   int i;
   size_t j;
 
@@ -2337,13 +2364,13 @@
                                struct ssl_connect_data *connssl)
 
 {
   CURLcode result;
   STACK_OF(X509) *sk;
   int i;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   int numcerts;
   BIO *mem;
 
   sk = SSL_get_peer_cert_chain(connssl->handle);
   if(!sk) {
     return CURLE_OUT_OF_MEMORY;
@@ -2440,20 +2467,20 @@
 #else
         rsa = pubkey->pkey.rsa;
 #endif
 
 #ifdef HAVE_OPAQUE_RSA_DSA_DH
         {
-          BIGNUM *n;
-          BIGNUM *e;
-          BIGNUM *d;
-          BIGNUM *p;
-          BIGNUM *q;
-          BIGNUM *dmp1;
-          BIGNUM *dmq1;
-          BIGNUM *iqmp;
+          const BIGNUM *n;
+          const BIGNUM *e;
+          const BIGNUM *d;
+          const BIGNUM *p;
+          const BIGNUM *q;
+          const BIGNUM *dmp1;
+          const BIGNUM *dmq1;
+          const BIGNUM *iqmp;
 
           RSA_get0_key(rsa, &n, &e, &d);
           RSA_get0_factors(rsa, &p, &q);
           RSA_get0_crt_params(rsa, &dmp1, &dmq1, &iqmp);
           BN_print(mem, n);
           push_certinfo("RSA Public Key", i);
@@ -2488,17 +2515,17 @@
         dsa = EVP_PKEY_get0_DSA(pubkey);
 #else
         dsa = pubkey->pkey.dsa;
 #endif
 #ifdef HAVE_OPAQUE_RSA_DSA_DH
         {
-          BIGNUM *p;
-          BIGNUM *q;
-          BIGNUM *g;
-          BIGNUM *priv_key;
-          BIGNUM *pub_key;
+          const BIGNUM *p;
+          const BIGNUM *q;
+          const BIGNUM *g;
+          const BIGNUM *priv_key;
+          const BIGNUM *pub_key;
 
           DSA_get0_pqg(dsa, &p, &q, &g);
           DSA_get0_key(dsa, &pub_key, &priv_key);
 
           print_pubkey_BN(dsa, p, i);
           print_pubkey_BN(dsa, q, i);
@@ -2522,17 +2549,17 @@
         dh = EVP_PKEY_get0_DH(pubkey);
 #else
         dh = pubkey->pkey.dh;
 #endif
 #ifdef HAVE_OPAQUE_RSA_DSA_DH
         {
-          BIGNUM *p;
-          BIGNUM *q;
-          BIGNUM *g;
-          BIGNUM *priv_key;
-          BIGNUM *pub_key;
+          const BIGNUM *p;
+          const BIGNUM *q;
+          const BIGNUM *g;
+          const BIGNUM *priv_key;
+          const BIGNUM *pub_key;
           DH_get0_pqg(dh, &p, &q, &g);
           DH_get0_key(dh, &pub_key, &priv_key);
           print_pubkey_BN(dh, p, i);
           print_pubkey_BN(dh, q, i);
           print_pubkey_BN(dh, g, i);
           print_pubkey_BN(dh, priv_key, i);
@@ -2571,13 +2598,13 @@
 }
 
 /*
  * Heavily modified from:
  * https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning#OpenSSL
  */
-static CURLcode pkp_pin_peer_pubkey(struct SessionHandle *data, X509* cert,
+static CURLcode pkp_pin_peer_pubkey(struct Curl_easy *data, X509* cert,
                                     const char *pinnedpubkey)
 {
   /* Scratch */
   int len1 = 0, len2 = 0;
   unsigned char *buff1 = NULL, *temp = NULL;
 
@@ -2642,13 +2669,13 @@
                            struct ssl_connect_data *connssl,
                            bool strict)
 {
   CURLcode result = CURLE_OK;
   int rc;
   long lerr, len;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   X509 *issuer;
   FILE *fp;
   char *buffer = data->state.buffer;
   const char *ptr;
   BIO *mem = BIO_new(BIO_s_mem());
 
@@ -2796,49 +2823,55 @@
   return result;
 }
 
 static CURLcode ossl_connect_step3(struct connectdata *conn, int sockindex)
 {
   CURLcode result = CURLE_OK;
-  void *old_ssl_sessionid = NULL;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  bool incache;
-  SSL_SESSION *our_ssl_sessionid;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  our_ssl_sessionid = SSL_get1_session(connssl->handle);
-
-  /* SSL_get1_session() will increment the reference count and the session
-     will stay in memory until explicitly freed with SSL_SESSION_free(3),
-     regardless of its state. */
-
-  incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL));
-  if(incache) {
-    if(old_ssl_sessionid != our_ssl_sessionid) {
-      infof(data, "old SSL session ID is stale, removing\n");
-      Curl_ssl_delsessionid(conn, old_ssl_sessionid);
-      incache = FALSE;
+  if(conn->ssl_config.sessionid) {
+    bool incache;
+    SSL_SESSION *our_ssl_sessionid;
+    void *old_ssl_sessionid = NULL;
+
+    our_ssl_sessionid = SSL_get1_session(connssl->handle);
+
+    /* SSL_get1_session() will increment the reference count and the session
+        will stay in memory until explicitly freed with SSL_SESSION_free(3),
+        regardless of its state. */
+
+    Curl_ssl_sessionid_lock(conn);
+    incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL));
+    if(incache) {
+      if(old_ssl_sessionid != our_ssl_sessionid) {
+        infof(data, "old SSL session ID is stale, removing\n");
+        Curl_ssl_delsessionid(conn, old_ssl_sessionid);
+        incache = FALSE;
+      }
     }
-  }
 
-  if(!incache) {
-    result = Curl_ssl_addsessionid(conn, our_ssl_sessionid,
-                                   0 /* unknown size */);
-    if(result) {
-      failf(data, "failed to store ssl session");
-      return result;
+    if(!incache) {
+      result = Curl_ssl_addsessionid(conn, our_ssl_sessionid,
+                                      0 /* unknown size */);
+      if(result) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "failed to store ssl session");
+        return result;
+      }
     }
-  }
-  else {
-    /* Session was incache, so refcount already incremented earlier.
-     * Avoid further increments with each SSL_get1_session() call.
-     * This does not free the session as refcount remains > 0
-     */
-    SSL_SESSION_free(our_ssl_sessionid);
+    else {
+      /* Session was incache, so refcount already incremented earlier.
+        * Avoid further increments with each SSL_get1_session() call.
+        * This does not free the session as refcount remains > 0
+        */
+      SSL_SESSION_free(our_ssl_sessionid);
+    }
+    Curl_ssl_sessionid_unlock(conn);
   }
 
   /*
    * We check certificates to authenticate the server; otherwise we risk
    * man-in-the-middle attack; NEVERTHELESS, if we're told explicitly not to
    * verify the peer ignore faults and failures from the server cert
@@ -2860,13 +2893,13 @@
 static CURLcode ossl_connect_common(struct connectdata *conn,
                                     int sockindex,
                                     bool nonblocking,
                                     bool *done)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int what;
 
   /* check if the connection has already been established */
@@ -3004,13 +3037,13 @@
                          size_t len,
                          CURLcode *curlcode)
 {
   /* SSL_write() is said to return 'int' while write() and send() returns
      'size_t' */
   int err;
-  char error_buffer[120]; /* OpenSSL documents that this must be at least 120
+  char error_buffer[256]; /* OpenSSL documents that this must be at least 256
                              bytes long. */
   unsigned long sslerror;
   int memlen;
   int rc;
 
   ERR_clear_error();
@@ -3036,13 +3069,13 @@
       return -1;
     case SSL_ERROR_SSL:
       /*  A failure in the SSL library occurred, usually a protocol error.
           The OpenSSL error queue contains more information on the error. */
       sslerror = ERR_get_error();
       failf(conn->data, "SSL_write() error: %s",
-            ERR_error_string(sslerror, error_buffer));
+            ossl_strerror(sslerror, error_buffer, sizeof(error_buffer)));
       *curlcode = CURLE_SEND_ERROR;
       return -1;
     }
     /* a true error */
     failf(conn->data, "SSL_write() return error %d", err);
     *curlcode = CURLE_SEND_ERROR;
@@ -3055,14 +3088,14 @@
 static ssize_t ossl_recv(struct connectdata *conn, /* connection data */
                          int num,                  /* socketindex */
                          char *buf,                /* store read data here */
                          size_t buffersize,        /* max amount to read */
                          CURLcode *curlcode)
 {
-  char error_buffer[120]; /* OpenSSL documents that this must be at
-                             least 120 bytes long. */
+  char error_buffer[256]; /* OpenSSL documents that this must be at
+                             least 256 bytes long. */
   unsigned long sslerror;
   ssize_t nread;
   int buffsize;
 
   ERR_clear_error();
 
@@ -3087,13 +3120,13 @@
       /* https://www.openssl.org/docs/crypto/ERR_get_error.html */
       sslerror = ERR_get_error();
       if((nread < 0) || sslerror) {
         /* If the return code was negative or there actually is an error in the
            queue */
         failf(conn->data, "SSL read: %s, errno %d",
-              ERR_error_string(sslerror, error_buffer),
+              ossl_strerror(sslerror, error_buffer, sizeof(error_buffer)),
               SOCKERRNO);
         *curlcode = CURLE_RECV_ERROR;
         return -1;
       }
     }
   }
@@ -3137,13 +3170,13 @@
                   (ssleay_value>>12)&0xff,
                   sub);
 #endif /* OPENSSL_IS_BORINGSSL */
 }
 
 /* can be called with data == NULL */
-int Curl_ossl_random(struct SessionHandle *data, unsigned char *entropy,
+int Curl_ossl_random(struct Curl_easy *data, unsigned char *entropy,
                      size_t length)
 {
   if(data) {
     Curl_ossl_seed(data); /* Initiate the seed if not already done */
   }
   RAND_bytes(entropy, curlx_uztosi(length));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/openssl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/openssl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/openssl.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/openssl.h	2016-07-21 06:31:36.000000000 +0800
@@ -38,38 +38,38 @@
 
 /* close a SSL connection */
 void Curl_ossl_close(struct connectdata *conn, int sockindex);
 
 /* tell OpenSSL to close down all open information regarding connections (and
    thus session ID caching etc) */
-void Curl_ossl_close_all(struct SessionHandle *data);
+void Curl_ossl_close_all(struct Curl_easy *data);
 
 /* Sets an OpenSSL engine */
-CURLcode Curl_ossl_set_engine(struct SessionHandle *data, const char *engine);
+CURLcode Curl_ossl_set_engine(struct Curl_easy *data, const char *engine);
 
 /* function provided for the generic SSL-layer, called when a session id
    should be freed */
 void Curl_ossl_session_free(void *ptr);
 
 /* Sets engine as default for all SSL operations */
-CURLcode Curl_ossl_set_engine_default(struct SessionHandle *data);
+CURLcode Curl_ossl_set_engine_default(struct Curl_easy *data);
 
 /* Build list of OpenSSL engines */
-struct curl_slist *Curl_ossl_engines_list(struct SessionHandle *data);
+struct curl_slist *Curl_ossl_engines_list(struct Curl_easy *data);
 
 int Curl_ossl_init(void);
 void Curl_ossl_cleanup(void);
 
 size_t Curl_ossl_version(char *buffer, size_t size);
 int Curl_ossl_check_cxn(struct connectdata *cxn);
 int Curl_ossl_shutdown(struct connectdata *conn, int sockindex);
 bool Curl_ossl_data_pending(const struct connectdata *conn,
                             int connindex);
 
 /* return 0 if a find random is filled in */
-int Curl_ossl_random(struct SessionHandle *data, unsigned char *entropy,
+int Curl_ossl_random(struct Curl_easy *data, unsigned char *entropy,
                      size_t length);
 void Curl_ossl_md5sum(unsigned char *tmp, /* input */
                       size_t tmplen,
                       unsigned char *md5sum /* output */,
                       size_t unused);
 void Curl_ossl_sha256sum(const unsigned char *tmp, /* input */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/polarssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/polarssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/polarssl.c	2016-05-18 13:59:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/polarssl.c	2016-07-21 06:31:36.000000000 +0800
@@ -111,18 +111,18 @@
 /* Define this to enable lots of debugging for PolarSSL */
 #undef POLARSSL_DEBUG
 
 #ifdef POLARSSL_DEBUG
 static void polarssl_debug(void *context, int level, const char *line)
 {
-  struct SessionHandle *data = NULL;
+  struct Curl_easy *data = NULL;
 
   if(!context)
     return;
 
-  data = (struct SessionHandle *)context;
+  data = (struct Curl_easy *)context;
 
   infof(data, "%s", line);
   (void) level;
 }
 #else
 #endif
@@ -137,23 +137,22 @@
 
 
 static CURLcode
 polarssl_connect_step1(struct connectdata *conn,
                      int sockindex)
 {
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
 
   bool sni = TRUE; /* default is SNI enabled */
   int ret = -1;
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
-  void *old_session = NULL;
   char errorbuf[128];
   errorbuf[0]=0;
 
   /* PolarSSL only supports SSLv3 and TLSv1 */
   if(data->set.ssl.version == CURL_SSLVERSION_SSLv2) {
     failf(data, "PolarSSL does not support SSLv2");
@@ -334,19 +333,27 @@
               &connssl->ctr_drbg);
   ssl_set_bio(&connssl->ssl,
               net_recv, &conn->sock[sockindex],
               net_send, &conn->sock[sockindex]);
 
   ssl_set_ciphersuites(&connssl->ssl, ssl_list_ciphersuites());
-  if(!Curl_ssl_getsessionid(conn, &old_session, NULL)) {
-    ret = ssl_set_session(&connssl->ssl, old_session);
-    if(ret) {
-      failf(data, "ssl_set_session returned -0x%x", -ret);
-      return CURLE_SSL_CONNECT_ERROR;
+
+  /* Check if there's a cached ID we can/should use here! */
+  if(conn->ssl_config.sessionid) {
+    void *old_session = NULL;
+
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &old_session, NULL)) {
+      ret = ssl_set_session(&connssl->ssl, old_session);
+      Curl_ssl_sessionid_unlock(conn);
+      if(ret) {
+        failf(data, "ssl_set_session returned -0x%x", -ret);
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      infof(data, "PolarSSL re-using session\n");
     }
-    infof(data, "PolarSSL re-using session\n");
   }
 
   ssl_set_ca_chain(&connssl->ssl,
                    &connssl->cacert,
                    &connssl->crl,
                    conn->host.name);
@@ -394,13 +401,13 @@
 
 static CURLcode
 polarssl_connect_step2(struct connectdata *conn,
                      int sockindex)
 {
   int ret;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
   char buffer[1024];
 
   char errorbuf[128];
   errorbuf[0] = 0;
 
@@ -549,40 +556,45 @@
 static CURLcode
 polarssl_connect_step3(struct connectdata *conn,
                      int sockindex)
 {
   CURLcode retcode = CURLE_OK;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct SessionHandle *data = conn->data;
-  void *old_ssl_sessionid = NULL;
-  ssl_session *our_ssl_sessionid;
-  int ret;
+  struct Curl_easy *data = conn->data;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  our_ssl_sessionid = malloc(sizeof(ssl_session));
-  if(!our_ssl_sessionid)
-    return CURLE_OUT_OF_MEMORY;
-
-  ssl_session_init(our_ssl_sessionid);
-
-  ret = ssl_get_session(&connssl->ssl, our_ssl_sessionid);
-  if(ret) {
-    failf(data, "ssl_get_session returned -0x%x", -ret);
-    return CURLE_SSL_CONNECT_ERROR;
-  }
+  if(conn->ssl_config.sessionid) {
+    int ret;
+    ssl_session *our_ssl_sessionid;
+    void *old_ssl_sessionid = NULL;
 
-  /* If there's already a matching session in the cache, delete it */
-  if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL))
-    Curl_ssl_delsessionid(conn, old_ssl_sessionid);
-
-  retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0);
-  if(retcode) {
-    free(our_ssl_sessionid);
-    failf(data, "failed to store ssl session");
-    return retcode;
+    our_ssl_sessionid = malloc(sizeof(ssl_session));
+    if(!our_ssl_sessionid)
+      return CURLE_OUT_OF_MEMORY;
+
+    ssl_session_init(our_ssl_sessionid);
+
+    ret = ssl_get_session(&connssl->ssl, our_ssl_sessionid);
+    if(ret) {
+      failf(data, "ssl_get_session returned -0x%x", -ret);
+      return CURLE_SSL_CONNECT_ERROR;
+    }
+
+    /* If there's already a matching session in the cache, delete it */
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL))
+      Curl_ssl_delsessionid(conn, old_ssl_sessionid);
+
+    retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0);
+    Curl_ssl_sessionid_unlock(conn);
+    if(retcode) {
+      free(our_ssl_sessionid);
+      failf(data, "failed to store ssl session");
+      return retcode;
+    }
   }
 
   connssl->connecting_state = ssl_connect_done;
 
   return CURLE_OK;
 }
@@ -663,13 +675,13 @@
 polarssl_connect_common(struct connectdata *conn,
                         int sockindex,
                         bool nonblocking,
                         bool *done)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int what;
 
   /* check if the connection has already been established */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/schannel.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/schannel.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/schannel.c	2016-05-27 22:09:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/schannel.c	2016-07-21 06:31:36.000000000 +0800
@@ -53,19 +53,25 @@
 #include "connect.h" /* for the connect timeout */
 #include "strerror.h"
 #include "select.h" /* for the socket readyness */
 #include "inet_pton.h" /* for IP addr SNI check */
 #include "curl_multibyte.h"
 #include "warnless.h"
+#include "x509asn1.h"
 #include "curl_printf.h"
+#include "system_win32.h"
+
+ /* The last #include file should be: */
 #include "curl_memory.h"
-/* The last #include file should be: */
 #include "memdebug.h"
 
-/* ALPN requires version 8.1 of the  Windows SDK, which was
-   shipped with Visual Studio 2013, aka _MSC_VER 1800*/
+/* ALPN requires version 8.1 of the Windows SDK, which was
+   shipped with Visual Studio 2013, aka _MSC_VER 1800:
+
+   https://technet.microsoft.com/en-us/library/hh831771%28v=ws.11%29.aspx
+*/
 #if defined(_MSC_VER) && (_MSC_VER >= 1800) && !defined(_USING_V110_SDK71_)
 #  define HAS_ALPN 1
 #endif
 
 /* Uncomment to force verbose output
  * #define infof(x, y, ...) printf(y, __VA_ARGS__)
@@ -96,13 +102,13 @@
 }
 
 static CURLcode
 schannel_connect_step1(struct connectdata *conn, int sockindex)
 {
   ssize_t written = -1;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   SecBuffer outbuf;
   SecBufferDesc outbuf_desc;
   SecBuffer inbuf;
   SecBufferDesc inbuf_desc;
 #ifdef HAS_ALPN
@@ -118,18 +124,30 @@
   TCHAR *host_name;
   CURLcode result;
 
   infof(data, "schannel: SSL/TLS connection with %s port %hu (step 1/3)\n",
         conn->host.name, conn->remote_port);
 
+  connssl->cred = NULL;
+
   /* check for an existing re-usable credential handle */
-  if(!Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL)) {
-    connssl->cred = old_cred;
-    infof(data, "schannel: re-using existing credential handle\n");
+  if(conn->ssl_config.sessionid) {
+    Curl_ssl_sessionid_lock(conn);
+    if(!Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL)) {
+      connssl->cred = old_cred;
+      infof(data, "schannel: re-using existing credential handle\n");
+
+      /* increment the reference counter of the credential/session handle */
+      connssl->cred->refcount++;
+      infof(data, "schannel: incremented credential handle refcount = %d\n",
+            connssl->cred->refcount);
+    }
+    Curl_ssl_sessionid_unlock(conn);
   }
-  else {
+
+  if(!connssl->cred) {
     /* setup Schannel API options */
     memset(&schannel_cred, 0, sizeof(schannel_cred));
     schannel_cred.dwVersion = SCHANNEL_CRED_VERSION;
 
     if(data->set.ssl.verifypeer) {
 #ifdef _WIN32_WCE
@@ -196,12 +214,13 @@
       malloc(sizeof(struct curl_schannel_cred));
     if(!connssl->cred) {
       failf(data, "schannel: unable to allocate memory");
       return CURLE_OUT_OF_MEMORY;
     }
     memset(connssl->cred, 0, sizeof(struct curl_schannel_cred));
+    connssl->cred->refcount = 1;
 
     /* https://msdn.microsoft.com/en-us/library/windows/desktop/aa374716.aspx
        */
     sspi_status =
       s_pSecFn->AcquireCredentialsHandle(NULL, (TCHAR *)UNISP_NAME,
                                          SECPKG_CRED_OUTBOUND, NULL,
@@ -228,13 +247,16 @@
 #endif
     ) {
     infof(data, "schannel: using IP address, SNI is not supported by OS.\n");
   }
 
 #ifdef HAS_ALPN
-  if(conn->bits.tls_enable_alpn) {
+  /* ALPN is only supported on Windows 8.1 / Server 2012 R2 and above */
+  if(conn->bits.tls_enable_alpn &&
+     Curl_verify_windows_version(6, 3, PLATFORM_WINNT,
+                                 VERSION_GREATER_THAN_EQUAL)) {
     int cur = 0;
     int list_start_index = 0;
     unsigned int* extension_len = NULL;
     unsigned short* list_len = NULL;
 
     /* The first four bytes will be an unsigned int indicating number
@@ -354,13 +376,13 @@
 
 static CURLcode
 schannel_connect_step2(struct connectdata *conn, int sockindex)
 {
   int i;
   ssize_t nread = -1, written = -1;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   unsigned char *reallocated_buffer;
   size_t reallocated_length;
   SecBuffer outbuf[3];
   SecBufferDesc outbuf_desc;
   SecBuffer inbuf[2];
@@ -594,20 +616,19 @@
 }
 
 static CURLcode
 schannel_connect_step3(struct connectdata *conn, int sockindex)
 {
   CURLcode result = CURLE_OK;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-  struct curl_schannel_cred *old_cred = NULL;
-#ifdef HAS_ALPN
   SECURITY_STATUS sspi_status = SEC_E_OK;
+  CERT_CONTEXT *ccert_context = NULL;
+#ifdef HAS_ALPN
   SecPkgContext_ApplicationProtocol alpn_result;
 #endif
-  bool incache;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
   infof(data, "schannel: SSL/TLS connection with %s port %hu (step 3/3)\n",
         conn->host.name, conn->remote_port);
 
@@ -627,13 +648,16 @@
     if(!(connssl->ret_flags & ISC_RET_STREAM))
       failf(data, "schannel: failed to setup stream orientation");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #ifdef HAS_ALPN
-  if(conn->bits.tls_enable_alpn) {
+  /* ALPN is only supported on Windows 8.1 / Server 2012 R2 and above */
+  if(conn->bits.tls_enable_alpn &&
+     Curl_verify_windows_version(6, 3, PLATFORM_WINNT,
+                                 VERSION_GREATER_THAN_EQUAL)) {
     sspi_status = s_pSecFn->QueryContextAttributes(&connssl->ctxt->ctxt_handle,
       SECPKG_ATTR_APPLICATION_PROTOCOL, &alpn_result);
 
     if(sspi_status != SEC_E_OK) {
       failf(data, "schannel: failed to retrieve ALPN result");
       return CURLE_SSL_CONNECT_ERROR;
@@ -661,53 +685,79 @@
     }
     else
       infof(data, "ALPN, server did not agree to a protocol\n");
   }
 #endif
 
-  /* increment the reference counter of the credential/session handle */
-  if(connssl->cred && connssl->ctxt) {
-    connssl->cred->refcount++;
-    infof(data, "schannel: incremented credential handle refcount = %d\n",
-          connssl->cred->refcount);
-  }
-
   /* save the current session data for possible re-use */
-  incache = !(Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL));
-  if(incache) {
-    if(old_cred != connssl->cred) {
-      infof(data, "schannel: old credential handle is stale, removing\n");
-      Curl_ssl_delsessionid(conn, (void *)old_cred);
-      incache = FALSE;
+  if(conn->ssl_config.sessionid) {
+    bool incache;
+    struct curl_schannel_cred *old_cred = NULL;
+
+    Curl_ssl_sessionid_lock(conn);
+    incache = !(Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL));
+    if(incache) {
+      if(old_cred != connssl->cred) {
+        infof(data, "schannel: old credential handle is stale, removing\n");
+        /* we're not taking old_cred ownership here, no refcount++ is needed */
+        Curl_ssl_delsessionid(conn, (void *)old_cred);
+        incache = FALSE;
+      }
+    }
+    if(!incache) {
+      result = Curl_ssl_addsessionid(conn, (void *)connssl->cred,
+                                     sizeof(struct curl_schannel_cred));
+      if(result) {
+        Curl_ssl_sessionid_unlock(conn);
+        failf(data, "schannel: failed to store credential handle");
+        return result;
+      }
+      else {
+        /* this cred session is now also referenced by sessionid cache */
+        connssl->cred->refcount++;
+        infof(data, "schannel: stored credential handle in session cache\n");
+      }
     }
+    Curl_ssl_sessionid_unlock(conn);
   }
 
-  if(!incache) {
-    result = Curl_ssl_addsessionid(conn, (void *)connssl->cred,
-                                   sizeof(struct curl_schannel_cred));
-    if(result) {
-      failf(data, "schannel: failed to store credential handle");
-      return result;
+  if(data->set.ssl.certinfo) {
+    sspi_status = s_pSecFn->QueryContextAttributes(&connssl->ctxt->ctxt_handle,
+      SECPKG_ATTR_REMOTE_CERT_CONTEXT, &ccert_context);
+
+    if((sspi_status != SEC_E_OK) || (ccert_context == NULL)) {
+      failf(data, "schannel: failed to retrieve remote cert context");
+      return CURLE_SSL_CONNECT_ERROR;
     }
-    else {
-      connssl->cred->cached = TRUE;
-      infof(data, "schannel: stored credential handle in session cache\n");
+
+    result = Curl_ssl_init_certinfo(data, 1);
+    if(!result) {
+      if(((ccert_context->dwCertEncodingType & X509_ASN_ENCODING) != 0) &&
+         (ccert_context->cbCertEncoded > 0)) {
+
+        const char *beg = (const char *) ccert_context->pbCertEncoded;
+        const char *end = beg + ccert_context->cbCertEncoded;
+        result = Curl_extract_certinfo(conn, 0, beg, end);
+      }
     }
+    CertFreeCertificateContext(ccert_context);
+    if(result)
+      return result;
   }
 
   connssl->connecting_state = ssl_connect_done;
 
   return CURLE_OK;
 }
 
 static CURLcode
 schannel_connect_common(struct connectdata *conn, int sockindex,
                         bool nonblocking, bool *done)
 {
   CURLcode result;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
   long timeout_ms;
   int what;
 
   /* check if the connection has already been established */
@@ -960,13 +1010,13 @@
 static ssize_t
 schannel_recv(struct connectdata *conn, int sockindex,
               char *buf, size_t len, CURLcode *err)
 {
   size_t size = 0;
   ssize_t nread = -1;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   unsigned char *reallocated_buffer;
   size_t reallocated_length;
   bool done = FALSE;
   SecBuffer inbuf[4];
   SecBufferDesc inbuf_desc;
@@ -1223,45 +1273,14 @@
   Additionally, Windows 2000 (v5.0) is a special case since it seems it doesn't
   return close_notify. In that case if the connection was closed we assume it
   was graceful (close_notify) since there doesn't seem to be a way to tell.
   */
   if(len && !connssl->decdata_offset && connssl->recv_connection_closed &&
      !connssl->recv_sspi_close_notify) {
-    bool isWin2k = FALSE;
-
-#if !defined(_WIN32_WINNT) || !defined(_WIN32_WINNT_WIN2K) || \
-    (_WIN32_WINNT < _WIN32_WINNT_WIN2K)
-    OSVERSIONINFO osver;
-
-    memset(&osver, 0, sizeof(osver));
-    osver.dwOSVersionInfoSize = sizeof(osver);
-
-    /* Find out the Windows version */
-    if(GetVersionEx(&osver)) {
-      /* Verify the version number is 5.0 */
-      if(osver.dwMajorVersion == 5 && osver.dwMinorVersion == 0)
-        isWin2k = TRUE;
-    }
-#else
-    ULONGLONG cm;
-    OSVERSIONINFOEX osver;
-
-    memset(&osver, 0, sizeof(osver));
-    osver.dwOSVersionInfoSize = sizeof(osver);
-    osver.dwMajorVersion = 5;
-
-    cm = VerSetConditionMask(0, VER_MAJORVERSION, VER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_MINORVERSION, VER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_SERVICEPACKMAJOR, VER_GREATER_EQUAL);
-    cm = VerSetConditionMask(cm, VER_SERVICEPACKMINOR, VER_GREATER_EQUAL);
-
-    if(VerifyVersionInfo(&osver, (VER_MAJORVERSION | VER_MINORVERSION |
-                                  VER_SERVICEPACKMAJOR | VER_SERVICEPACKMINOR),
-                         cm))
-      isWin2k = TRUE;
-#endif
+    bool isWin2k = Curl_verify_windows_version(5, 0, PLATFORM_WINNT,
+                                               VERSION_EQUAL);
 
     if(isWin2k && sspi_status == SEC_E_OK)
       connssl->recv_sspi_close_notify = true;
     else {
       *err = CURLE_RECV_ERROR;
       infof(data, "schannel: server closed abruptly (missing close_notify)\n");
@@ -1340,13 +1359,13 @@
 
 int Curl_schannel_shutdown(struct connectdata *conn, int sockindex)
 {
   /* See https://msdn.microsoft.com/en-us/library/windows/desktop/aa380138.aspx
    * Shutting Down an Schannel Connection
    */
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   infof(data, "schannel: shutting down SSL/TLS connection with %s port %hu\n",
         conn->host.name, conn->remote_port);
 
   if(connssl->cred && connssl->ctxt) {
@@ -1413,25 +1432,16 @@
     s_pSecFn->DeleteSecurityContext(&connssl->ctxt->ctxt_handle);
     Curl_safefree(connssl->ctxt);
   }
 
   /* free SSPI Schannel API credential handle */
   if(connssl->cred) {
-    /* decrement the reference counter of the credential/session handle */
-    if(connssl->cred->refcount > 0) {
-      connssl->cred->refcount--;
-      infof(data, "schannel: decremented credential handle refcount = %d\n",
-            connssl->cred->refcount);
-    }
-
-    /* if the handle was not cached and the refcount is zero */
-    if(!connssl->cred->cached && connssl->cred->refcount == 0) {
-      infof(data, "schannel: clear credential handle\n");
-      s_pSecFn->FreeCredentialsHandle(&connssl->cred->cred_handle);
-      Curl_safefree(connssl->cred);
-    }
+    Curl_ssl_sessionid_lock(conn);
+    Curl_schannel_session_free(connssl->cred);
+    Curl_ssl_sessionid_unlock(conn);
+    connssl->cred = NULL;
   }
 
   /* free internal buffer for received encrypted data */
   if(connssl->encdata_buffer != NULL) {
     Curl_safefree(connssl->encdata_buffer);
     connssl->encdata_length = 0;
@@ -1447,22 +1457,19 @@
 
   return CURLE_OK;
 }
 
 void Curl_schannel_session_free(void *ptr)
 {
+  /* this is expected to be called under sessionid lock */
   struct curl_schannel_cred *cred = ptr;
 
-  if(cred && cred->cached) {
-    if(cred->refcount == 0) {
-      s_pSecFn->FreeCredentialsHandle(&cred->cred_handle);
-      Curl_safefree(cred);
-    }
-    else {
-      cred->cached = FALSE;
-    }
+  cred->refcount--;
+  if(cred->refcount == 0) {
+    s_pSecFn->FreeCredentialsHandle(&cred->cred_handle);
+    Curl_safefree(cred);
   }
 }
 
 int Curl_schannel_init(void)
 {
   return (Curl_sspi_global_init() == CURLE_OK ? 1 : 0);
@@ -1498,13 +1505,13 @@
 }
 
 #ifdef _WIN32_WCE
 static CURLcode verify_certificate(struct connectdata *conn, int sockindex)
 {
   SECURITY_STATUS status;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   CURLcode result = CURLE_OK;
   CERT_CONTEXT *pCertContextServer = NULL;
   const CERT_CHAIN_CONTEXT *pChainContext = NULL;
 
   status = s_pSecFn->QueryContextAttributes(&connssl->ctxt->ctxt_handle,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/schannel.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/schannel.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/schannel.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/schannel.h	2016-07-21 06:31:36.000000000 +0800
@@ -94,12 +94,15 @@
 
 int Curl_schannel_random(unsigned char *entropy, size_t length);
 
 /* Set the API backend definition to Schannel */
 #define CURL_SSL_BACKEND CURLSSLBACKEND_SCHANNEL
 
+/* this backend supports CURLOPT_CERTINFO */
+#define have_curlssl_certinfo 1
+
 /* API setup for Schannel */
 #define curlssl_init Curl_schannel_init
 #define curlssl_cleanup Curl_schannel_cleanup
 #define curlssl_connect Curl_schannel_connect
 #define curlssl_connect_nonblocking Curl_schannel_connect_nonblocking
 #define curlssl_session_free Curl_schannel_session_free
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/vtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/vtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/vtls.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/vtls.c	2016-07-21 06:31:36.000000000 +0800
@@ -178,13 +178,13 @@
  *
  * NOTE: 'data' may be passed in as NULL when coming from external API without
  * easy handle!
  *
  */
 
-unsigned int Curl_rand(struct SessionHandle *data)
+unsigned int Curl_rand(struct Curl_easy *data)
 {
   unsigned int r = 0;
   static unsigned int randseed;
   static bool seeded = FALSE;
 
 #ifdef CURLDEBUG
@@ -273,13 +273,13 @@
     /* only cleanup if we did a previous init */
     curlssl_cleanup();
     init_ssl = FALSE;
   }
 }
 
-static bool ssl_prefs_check(struct SessionHandle *data)
+static bool ssl_prefs_check(struct Curl_easy *data)
 {
   /* check for CURLOPT_SSLVERSION invalid parameter value */
   if((data->set.ssl.version < 0)
      || (data->set.ssl.version >= CURL_SSLVERSION_LAST)) {
     failf(data, "Unrecognized parameter value passed via CURLOPT_SSLVERSION");
     return FALSE;
@@ -327,36 +327,55 @@
   if(!result && *done)
     Curl_pgrsTime(conn->data, TIMER_APPCONNECT); /* SSL is connected */
   return result;
 }
 
 /*
+ * Lock shared SSL session data
+ */
+void Curl_ssl_sessionid_lock(struct connectdata *conn)
+{
+  if(SSLSESSION_SHARED(conn->data))
+    Curl_share_lock(conn->data,
+                    CURL_LOCK_DATA_SSL_SESSION, CURL_LOCK_ACCESS_SINGLE);
+}
+
+/*
+ * Unlock shared SSL session data
+ */
+void Curl_ssl_sessionid_unlock(struct connectdata *conn)
+{
+  if(SSLSESSION_SHARED(conn->data))
+    Curl_share_unlock(conn->data, CURL_LOCK_DATA_SSL_SESSION);
+}
+
+/*
  * Check if there's a session ID for the given connection in the cache, and if
  * there's one suitable, it is provided. Returns TRUE when no entry matched.
  */
 bool Curl_ssl_getsessionid(struct connectdata *conn,
                            void **ssl_sessionid,
                            size_t *idsize) /* set 0 if unknown */
 {
   struct curl_ssl_session *check;
-  struct SessionHandle *data = conn->data;
+  struct Curl_easy *data = conn->data;
   size_t i;
   long *general_age;
   bool no_match = TRUE;
 
   *ssl_sessionid = NULL;
 
+  DEBUGASSERT(conn->ssl_config.sessionid);
+
   if(!conn->ssl_config.sessionid)
     /* session ID re-use is disabled */
     return TRUE;
 
   /* Lock if shared */
-  if(SSLSESSION_SHARED(data)) {
-    Curl_share_lock(data, CURL_LOCK_DATA_SSL_SESSION, CURL_LOCK_ACCESS_SINGLE);
+  if(SSLSESSION_SHARED(data))
     general_age = &data->share->sessionage;
-  }
   else
     general_age = &data->state.sessionage;
 
   for(i = 0; i < data->set.ssl.max_ssl_sessions; i++) {
     check = &data->state.session[i];
     if(!check->sessionid)
@@ -379,16 +398,12 @@
         *idsize = check->idsize;
       no_match = FALSE;
       break;
     }
   }
 
-  /* Unlock */
-  if(SSLSESSION_SHARED(data))
-    Curl_share_unlock(data, CURL_LOCK_DATA_SSL_SESSION);
-
   return no_match;
 }
 
 /*
  * Kill a single session ID entry in the cache.
  */
@@ -413,28 +428,22 @@
 /*
  * Delete the given session ID from the cache.
  */
 void Curl_ssl_delsessionid(struct connectdata *conn, void *ssl_sessionid)
 {
   size_t i;
-  struct SessionHandle *data=conn->data;
-
-  if(SSLSESSION_SHARED(data))
-    Curl_share_lock(data, CURL_LOCK_DATA_SSL_SESSION, CURL_LOCK_ACCESS_SINGLE);
+  struct Curl_easy *data=conn->data;
 
   for(i = 0; i < data->set.ssl.max_ssl_sessions; i++) {
     struct curl_ssl_session *check = &data->state.session[i];
 
     if(check->sessionid == ssl_sessionid) {
       Curl_ssl_kill_session(check);
       break;
     }
   }
-
-  if(SSLSESSION_SHARED(data))
-    Curl_share_unlock(data, CURL_LOCK_DATA_SSL_SESSION);
 }
 
 /*
  * Store session id in the session cache. The ID passed on to this function
  * must already have been extracted and allocated the proper way for the SSL
  * layer. Curl_XXXX_session_free() will be called to free/kill the session ID
@@ -442,23 +451,21 @@
  */
 CURLcode Curl_ssl_addsessionid(struct connectdata *conn,
                                void *ssl_sessionid,
                                size_t idsize)
 {
   size_t i;
-  struct SessionHandle *data=conn->data; /* the mother of all structs */
+  struct Curl_easy *data=conn->data; /* the mother of all structs */
   struct curl_ssl_session *store = &data->state.session[0];
   long oldest_age=data->state.session[0].age; /* zero if unused */
   char *clone_host;
   char *clone_conn_to_host;
   int conn_to_port;
   long *general_age;
 
-  /* Even though session ID re-use might be disabled, that only disables USING
-     IT. We still store it here in case the re-using is again enabled for an
-     upcoming transfer */
+  DEBUGASSERT(conn->ssl_config.sessionid);
 
   clone_host = strdup(conn->host.name);
   if(!clone_host)
     return CURLE_OUT_OF_MEMORY; /* bail out */
 
   if(conn->bits.conn_to_host) {
@@ -478,13 +485,12 @@
 
   /* Now we should add the session ID and the host name to the cache, (remove
      the oldest if necessary) */
 
   /* If using shared SSL session, lock! */
   if(SSLSESSION_SHARED(data)) {
-    Curl_share_lock(data, CURL_LOCK_DATA_SSL_SESSION, CURL_LOCK_ACCESS_SINGLE);
     general_age = &data->share->sessionage;
   }
   else {
     general_age = &data->state.sessionage;
   }
 
@@ -511,28 +517,24 @@
   free(store->conn_to_host);
   store->name = clone_host;               /* clone host name */
   store->conn_to_host = clone_conn_to_host; /* clone connect to host name */
   store->conn_to_port = conn_to_port; /* connect to port number */
   store->remote_port = conn->remote_port; /* port number */
 
-  /* Unlock */
-  if(SSLSESSION_SHARED(data))
-    Curl_share_unlock(data, CURL_LOCK_DATA_SSL_SESSION);
-
   if(!Curl_clone_ssl_config(&conn->ssl_config, &store->ssl_config)) {
     store->sessionid = NULL; /* let caller free sessionid */
     free(clone_host);
     free(clone_conn_to_host);
     return CURLE_OUT_OF_MEMORY;
   }
 
   return CURLE_OK;
 }
 
 
-void Curl_ssl_close_all(struct SessionHandle *data)
+void Curl_ssl_close_all(struct Curl_easy *data)
 {
   size_t i;
   /* kill the session ID cache if not shared */
   if(data->state.session && !SSLSESSION_SHARED(data)) {
     for(i = 0; i < data->set.ssl.max_ssl_sessions; i++)
       /* the single-killer function handles empty table slots */
@@ -564,35 +566,35 @@
 
   return CURLE_OK;
 }
 
 /* Selects an SSL crypto engine
  */
-CURLcode Curl_ssl_set_engine(struct SessionHandle *data, const char *engine)
+CURLcode Curl_ssl_set_engine(struct Curl_easy *data, const char *engine)
 {
   return curlssl_set_engine(data, engine);
 }
 
 /* Selects the default SSL crypto engine
  */
-CURLcode Curl_ssl_set_engine_default(struct SessionHandle *data)
+CURLcode Curl_ssl_set_engine_default(struct Curl_easy *data)
 {
   return curlssl_set_engine_default(data);
 }
 
 /* Return list of OpenSSL crypto engine names. */
-struct curl_slist *Curl_ssl_engines_list(struct SessionHandle *data)
+struct curl_slist *Curl_ssl_engines_list(struct Curl_easy *data)
 {
   return curlssl_engines_list(data);
 }
 
 /*
  * This sets up a session ID cache to the specified size. Make sure this code
  * is agnostic to what underlying SSL technology we use.
  */
-CURLcode Curl_ssl_initsessions(struct SessionHandle *data, size_t amount)
+CURLcode Curl_ssl_initsessions(struct Curl_easy *data, size_t amount)
 {
   struct curl_ssl_session *session;
 
   if(data->state.session)
     /* this is just a precaution to prevent multiple inits */
     return CURLE_OK;
@@ -629,13 +631,13 @@
 bool Curl_ssl_data_pending(const struct connectdata *conn,
                            int connindex)
 {
   return curlssl_data_pending(conn, connindex);
 }
 
-void Curl_ssl_free_certinfo(struct SessionHandle *data)
+void Curl_ssl_free_certinfo(struct Curl_easy *data)
 {
   int i;
   struct curl_certinfo *ci = &data->info.certs;
 
   if(ci->num_of_certs) {
     /* free all individual lists used */
@@ -647,13 +649,13 @@
     free(ci->certinfo); /* free the actual array too */
     ci->certinfo = NULL;
     ci->num_of_certs = 0;
   }
 }
 
-CURLcode Curl_ssl_init_certinfo(struct SessionHandle *data, int num)
+CURLcode Curl_ssl_init_certinfo(struct Curl_easy *data, int num)
 {
   struct curl_certinfo *ci = &data->info.certs;
   struct curl_slist **table;
 
   /* Free any previous certificate information structures */
   Curl_ssl_free_certinfo(data);
@@ -669,13 +671,13 @@
   return CURLE_OK;
 }
 
 /*
  * 'value' is NOT a zero terminated string
  */
-CURLcode Curl_ssl_push_certinfo_len(struct SessionHandle *data,
+CURLcode Curl_ssl_push_certinfo_len(struct Curl_easy *data,
                                     int certnum,
                                     const char *label,
                                     const char *value,
                                     size_t valuelen)
 {
   struct curl_certinfo * ci = &data->info.certs;
@@ -710,23 +712,23 @@
 }
 
 /*
  * This is a convenience function for push_certinfo_len that takes a zero
  * terminated value.
  */
-CURLcode Curl_ssl_push_certinfo(struct SessionHandle *data,
+CURLcode Curl_ssl_push_certinfo(struct Curl_easy *data,
                                 int certnum,
                                 const char *label,
                                 const char *value)
 {
   size_t valuelen = strlen(value);
 
   return Curl_ssl_push_certinfo_len(data, certnum, label, value, valuelen);
 }
 
-int Curl_ssl_random(struct SessionHandle *data,
+int Curl_ssl_random(struct Curl_easy *data,
                      unsigned char *entropy,
                      size_t length)
 {
   return curlssl_random(data, entropy, length);
 }
 
@@ -789,13 +791,13 @@
 }
 
 /*
  * Generic pinned public key check.
  */
 
-CURLcode Curl_pin_peer_pubkey(struct SessionHandle *data,
+CURLcode Curl_pin_peer_pubkey(struct Curl_easy *data,
                               const char *pinnedpubkey,
                               const unsigned char *pubkey, size_t pubkeylen)
 {
   FILE *fp;
   unsigned char *buf = NULL, *pem_ptr = NULL;
   long filesize;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/vtls.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/vtls.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/vtls/vtls.h	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/vtls/vtls.h	2016-07-21 06:31:36.000000000 +0800
@@ -53,75 +53,106 @@
 bool Curl_ssl_config_matches(struct ssl_config_data* data,
                              struct ssl_config_data* needle);
 bool Curl_clone_ssl_config(struct ssl_config_data* source,
                            struct ssl_config_data* dest);
 void Curl_free_ssl_config(struct ssl_config_data* sslc);
 
-unsigned int Curl_rand(struct SessionHandle *);
+unsigned int Curl_rand(struct Curl_easy *);
 
 int Curl_ssl_backend(void);
 
 #ifdef USE_SSL
 int Curl_ssl_init(void);
 void Curl_ssl_cleanup(void);
 CURLcode Curl_ssl_connect(struct connectdata *conn, int sockindex);
 CURLcode Curl_ssl_connect_nonblocking(struct connectdata *conn,
                                       int sockindex,
                                       bool *done);
 /* tell the SSL stuff to close down all open information regarding
    connections (and thus session ID caching etc) */
-void Curl_ssl_close_all(struct SessionHandle *data);
+void Curl_ssl_close_all(struct Curl_easy *data);
 void Curl_ssl_close(struct connectdata *conn, int sockindex);
 CURLcode Curl_ssl_shutdown(struct connectdata *conn, int sockindex);
-CURLcode Curl_ssl_set_engine(struct SessionHandle *data, const char *engine);
+CURLcode Curl_ssl_set_engine(struct Curl_easy *data, const char *engine);
 /* Sets engine as default for all SSL operations */
-CURLcode Curl_ssl_set_engine_default(struct SessionHandle *data);
-struct curl_slist *Curl_ssl_engines_list(struct SessionHandle *data);
+CURLcode Curl_ssl_set_engine_default(struct Curl_easy *data);
+struct curl_slist *Curl_ssl_engines_list(struct Curl_easy *data);
 
 /* init the SSL session ID cache */
-CURLcode Curl_ssl_initsessions(struct SessionHandle *, size_t);
+CURLcode Curl_ssl_initsessions(struct Curl_easy *, size_t);
 size_t Curl_ssl_version(char *buffer, size_t size);
 bool Curl_ssl_data_pending(const struct connectdata *conn,
                            int connindex);
 int Curl_ssl_check_cxn(struct connectdata *conn);
 
 /* Certificate information list handling. */
 
-void Curl_ssl_free_certinfo(struct SessionHandle *data);
-CURLcode Curl_ssl_init_certinfo(struct SessionHandle * data, int num);
-CURLcode Curl_ssl_push_certinfo_len(struct SessionHandle * data, int certnum,
+void Curl_ssl_free_certinfo(struct Curl_easy *data);
+CURLcode Curl_ssl_init_certinfo(struct Curl_easy * data, int num);
+CURLcode Curl_ssl_push_certinfo_len(struct Curl_easy * data, int certnum,
                                     const char * label, const char * value,
                                     size_t valuelen);
-CURLcode Curl_ssl_push_certinfo(struct SessionHandle * data, int certnum,
+CURLcode Curl_ssl_push_certinfo(struct Curl_easy * data, int certnum,
                                 const char * label, const char * value);
 
 /* Functions to be used by SSL library adaptation functions */
 
-/* extract a session ID */
+/* Lock session cache mutex.
+ * Call this before calling other Curl_ssl_*session* functions
+ * Caller should unlock this mutex as soon as possible, as it may block
+ * other SSL connection from making progress.
+ * The purpose of explicitly locking SSL session cache data is to allow
+ * individual SSL engines to manage session lifetime in their specific way.
+ */
+void Curl_ssl_sessionid_lock(struct connectdata *conn);
+
+/* Unlock session cache mutex */
+void Curl_ssl_sessionid_unlock(struct connectdata *conn);
+
+/* extract a session ID
+ * Sessionid mutex must be locked (see Curl_ssl_sessionid_lock).
+ * Caller must make sure that the ownership of returned sessionid object
+ * is properly taken (e.g. its refcount is incremented
+ * under sessionid mutex).
+ */
 bool Curl_ssl_getsessionid(struct connectdata *conn,
                            void **ssl_sessionid,
                            size_t *idsize); /* set 0 if unknown */
-/* add a new session ID */
+/* add a new session ID
+ * Sessionid mutex must be locked (see Curl_ssl_sessionid_lock).
+ * Caller must ensure that it has properly shared ownership of this sessionid
+ * object with cache (e.g. incrementing refcount on success)
+ */
 CURLcode Curl_ssl_addsessionid(struct connectdata *conn,
                                void *ssl_sessionid,
                                size_t idsize);
-/* Kill a single session ID entry in the cache */
+/* Kill a single session ID entry in the cache
+ * Sessionid mutex must be locked (see Curl_ssl_sessionid_lock).
+ * This will call engine-specific curlssl_session_free function, which must
+ * take sessionid object ownership from sessionid cache
+ * (e.g. decrement refcount).
+ */
 void Curl_ssl_kill_session(struct curl_ssl_session *session);
-/* delete a session from the cache */
+/* delete a session from the cache
+ * Sessionid mutex must be locked (see Curl_ssl_sessionid_lock).
+ * This will call engine-specific curlssl_session_free function, which must
+ * take sessionid object ownership from sessionid cache
+ * (e.g. decrement refcount).
+ */
 void Curl_ssl_delsessionid(struct connectdata *conn, void *ssl_sessionid);
 
 /* get N random bytes into the buffer, return 0 if a find random is filled
    in */
-int Curl_ssl_random(struct SessionHandle *data, unsigned char *buffer,
+int Curl_ssl_random(struct Curl_easy *data, unsigned char *buffer,
                     size_t length);
 CURLcode Curl_ssl_md5sum(unsigned char *tmp, /* input */
                          size_t tmplen,
                          unsigned char *md5sum, /* output */
                          size_t md5len);
 /* Check pinned public key. */
-CURLcode Curl_pin_peer_pubkey(struct SessionHandle *data,
+CURLcode Curl_pin_peer_pubkey(struct Curl_easy *data,
                               const char *pinnedpubkey,
                               const unsigned char *pubkey, size_t pubkeylen);
 
 bool Curl_ssl_cert_status_request(void);
 
 bool Curl_ssl_false_start(void);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/wildcard.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/wildcard.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/wildcard.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/wildcard.h	2016-07-21 06:31:36.000000000 +0800
@@ -50,9 +50,9 @@
   void *customptr;  /* for CURLOPT_CHUNK_DATA pointer */
 };
 
 CURLcode Curl_wildcard_init(struct WildcardData *wc);
 void Curl_wildcard_dtor(struct WildcardData *wc);
 
-struct SessionHandle;
+struct Curl_easy;
 
 #endif /* HEADER_CURL_WILDCARD_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/x509asn1.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/x509asn1.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/x509asn1.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/x509asn1.c	2016-07-21 06:31:36.000000000 +0800
@@ -20,13 +20,13 @@
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #if defined(USE_GSKIT) || defined(USE_NSS) || defined(USE_GNUTLS) || \
-    defined(USE_CYASSL)
+    defined(USE_CYASSL) || defined(USE_SCHANNEL)
 
 #include <curl/curl.h>
 #include "urldata.h"
 #include "strequal.h"
 #include "hostcheck.h"
 #include "vtls/vtls.h"
@@ -781,13 +781,13 @@
   param->beg = param->end = end;
   if(beg < end)
     Curl_getASN1Element(param, beg, end);
   return OID2str(oid.beg, oid.end, TRUE);
 }
 
-static void do_pubkey_field(struct SessionHandle * data, int certnum,
+static void do_pubkey_field(struct Curl_easy * data, int certnum,
                             const char * label, curl_asn1Element * elem)
 {
   const char * output;
 
   /* Generate a certificate information record for the public key. */
 
@@ -798,13 +798,13 @@
     if(!certnum)
       infof(data, "   %s: %s\n", label, output);
     free((char *) output);
   }
 }
 
-static void do_pubkey(struct SessionHandle * data, int certnum,
+static void do_pubkey(struct Curl_easy * data, int certnum,
                       const char * algo, curl_asn1Element * param,
                       curl_asn1Element * pubkey)
 {
   curl_asn1Element elem;
   curl_asn1Element pk;
   const char * p;
@@ -868,13 +868,13 @@
 CURLcode Curl_extract_certinfo(struct connectdata * conn,
                                int certnum,
                                const char * beg,
                                const char * end)
 {
   curl_X509certificate cert;
-  struct SessionHandle * data = conn->data;
+  struct Curl_easy * data = conn->data;
   curl_asn1Element param;
   const char * ccp;
   char * cp1;
   size_t cl1;
   char * cp2;
   CURLcode result;
@@ -1022,13 +1022,13 @@
   if(!certnum)
     infof(data, "%s\n", cp2);
   free(cp2);
   return CURLE_OK;
 }
 
-#endif /* USE_GSKIT or USE_NSS or USE_GNUTLS or USE_CYASSL */
+#endif /* USE_GSKIT or USE_NSS or USE_GNUTLS or USE_CYASSL or USE_SCHANNEL */
 
 #if defined(USE_GSKIT)
 
 static const char * checkOID(const char * beg, const char * end,
                              const char * oid)
 {
@@ -1053,13 +1053,13 @@
   return matched? ccp: (const char *) NULL;
 }
 
 CURLcode Curl_verifyhost(struct connectdata * conn,
                          const char * beg, const char * end)
 {
-  struct SessionHandle * data = conn->data;
+  struct Curl_easy * data = conn->data;
   curl_X509certificate cert;
   curl_asn1Element dn;
   curl_asn1Element elem;
   curl_asn1Element ext;
   curl_asn1Element name;
   const char * p;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/x509asn1.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/x509asn1.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/lib/x509asn1.h	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/lib/x509asn1.h	2016-07-21 06:31:36.000000000 +0800
@@ -23,13 +23,13 @@
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #if defined(USE_GSKIT) || defined(USE_NSS) || defined(USE_GNUTLS) || \
-    defined(USE_CYASSL)
+    defined(USE_CYASSL) || defined(USE_SCHANNEL)
 
 #include "urldata.h"
 
 /*
  * Constants.
  */
@@ -125,8 +125,8 @@
                     const char * beg, const char * end);
 CURLcode Curl_extract_certinfo(struct connectdata * conn, int certnum,
                                const char * beg, const char * end);
 CURLcode Curl_verifyhost(struct connectdata * conn,
                          const char * beg, const char * end);
 
-#endif /* USE_GSKIT or USE_NSS or USE_GNUTLS or USE_CYASSL */
+#endif /* USE_GSKIT or USE_NSS or USE_GNUTLS or USE_CYASSL or USE_SCHANNEL */
 #endif /* HEADER_CURL_X509ASN1_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/m4/curl-compilers.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/m4/curl-compilers.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/m4/curl-compilers.m4	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/m4/curl-compilers.m4	2016-07-21 06:31:36.000000000 +0800
@@ -18,13 +18,13 @@
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 #***************************************************************************
 
 # File version for 'aclocal' use. Keep it a single number.
-# serial 66
+# serial 67
 
 
 dnl CURL_CHECK_COMPILER
 dnl -------------------------------------------------
 dnl Verify if the C compiler being used is known.
 
@@ -1371,13 +1371,13 @@
       tmp_CFLAGS="-fvisibility=hidden"
       supports_symbol_hiding="yes"
       ;;
     GNU_C)
       dnl Only gcc 3.4 or later
       if test "$compiler_num" -ge "304"; then
-        if $CC --help --verbose 2>&1 | grep fvisibility= > /dev/null ; then
+        if $CC --help --verbose 2>/dev/null | grep fvisibility= >/dev/null ; then
           tmp_EXTERN="__attribute__ ((__visibility__ (\"default\")))"
           tmp_CFLAGS="-fvisibility=hidden"
           supports_symbol_hiding="yes"
         fi
       fi
       ;;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/AIX/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/AIX/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/AIX/Makefile.in	2016-05-22 01:52:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/AIX/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -397,15 +397,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/AIX/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/AIX/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/AIX/Makefile
+	  $(AUTOMAKE) --foreign packages/AIX/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/AIX/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/AIX/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/AIX/RPM/Makefile.in	2016-05-22 01:52:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/AIX/RPM/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -336,15 +336,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/AIX/RPM/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/AIX/RPM/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/AIX/RPM/Makefile
+	  $(AUTOMAKE) --foreign packages/AIX/RPM/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Linux/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Linux/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Linux/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Linux/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -396,15 +396,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/Linux/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/Linux/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/Linux/Makefile
+	  $(AUTOMAKE) --foreign packages/Linux/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Linux/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Linux/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Linux/RPM/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Linux/RPM/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -337,15 +337,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/Linux/RPM/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/Linux/RPM/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/Linux/RPM/Makefile
+	  $(AUTOMAKE) --foreign packages/Linux/RPM/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -428,15 +428,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/Makefile
+	  $(AUTOMAKE) --foreign packages/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/OS400/ccsidcurl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/OS400/ccsidcurl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/OS400/ccsidcurl.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/OS400/ccsidcurl.c	2016-07-21 06:31:36.000000000 +0800
@@ -607,21 +607,21 @@
 {
   va_list arg;
   void * paramp;
   CURLcode ret;
   unsigned int ccsid;
   char * * cpp;
-  struct SessionHandle * data;
+  struct Curl_easy * data;
   struct curl_slist * * slp;
   struct curl_certinfo * cipf;
   struct curl_certinfo * cipt;
 
   /* WARNING: unlike curl_easy_get_info(), the strings returned by this
      procedure have to be free'ed. */
 
-  data = (struct SessionHandle *) curl;
+  data = (struct Curl_easy *) curl;
   va_start(arg, info);
   paramp = va_arg(arg, void *);
   ret = Curl_getinfo(data, info, paramp);
 
   if(ret == CURLE_OK)
     switch ((int) info & CURLINFO_TYPEMASK) {
@@ -1105,13 +1105,13 @@
 CURLcode
 curl_easy_setopt_ccsid(CURL * curl, CURLoption tag, ...)
 
 {
   CURLcode result;
   va_list arg;
-  struct SessionHandle * data;
+  struct Curl_easy * data;
   char * s;
   char * cp;
   unsigned int ccsid;
   curl_off_t pfsize;
   static char testwarn = 1;
 
@@ -1127,13 +1127,13 @@
     if((int) STRING_LASTZEROTERMINATED != (int) STRING_UNIX_SOCKET_PATH + 1 ||
        (int) STRING_LAST != (int) STRING_COPYPOSTFIELDS + 1)
       curl_mfprintf(stderr,
        "*** WARNING: curl_easy_setopt_ccsid() should be reworked ***\n");
     }
 
-  data = (struct SessionHandle *) curl;
+  data = (struct Curl_easy *) curl;
   va_start(arg, tag);
 
   switch (tag) {
 
   case CURLOPT_CAINFO:
   case CURLOPT_CAPATH:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/OS400/curl.inc.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/OS400/curl.inc.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/OS400/curl.inc.in	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/OS400/curl.inc.in	2016-07-21 06:31:36.000000000 +0800
@@ -2,13 +2,13 @@
       *                                  _   _ ____  _
       *  Project                     ___| | | |  _ \| |
       *                             / __| | | | |_) | |
       *                            | (__| |_| |  _ <| |___
       *                             \___|\___/|_| \_\_____|
       *
-      * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+      * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
       *
       * This software is licensed as described in the file COPYING, which
       * you should have received as part of this distribution. The terms
       * are also available at https://curl.haxx.se/docs/copyright.html.
       *
       * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -1433,12 +1433,14 @@
      d  CURLINFO_TLS_SESSION...                                                 CURLINFO_SLIST + 43
      d                 c                   X'0040002B'
      d  CURLINFO_ACTIVESOCKET...                                                CURLINFO_SOCKET + 44
      d                 c                   X'0050002C'
      d  CURLINFO_TLS_SSL_PTR...                                                 CURLINFO_SLIST + 45
      d                 c                   X'0040002D'
+     d  CURLINFO_HTTP_VERSION...                                                CURLINFO_LONG + 46
+     d                 c                   X'0020002E'
       *
      d  CURLINFO_HTTP_CODE...                                                   Old ...RESPONSE_CODE
      d                 c                   X'00200002'
       *
      d curl_sslbackend...
      d                 s             10i 0 based(######ptr######)               Enum
@@ -1463,12 +1465,19 @@
      d  CURLSSLBACKEND_DARWINSSL...
      d                 c                   9
      d  CURLSSLBACKEND_AXTLS...
      d                 c                   10
      d  CURLSSLBACKEND_MBEDTLS...
      d                 c                   11
+      * Aliases for clones.
+     d  CURLSSLBACKEND_LIBRESSL...
+     d                 c                   1
+     d  CURLSSLBACKEND_BORINGSSL...
+     d                 c                   1
+     d  CURLSSLBACKEND_WOLFSSL...
+     d                 c                   6
       *
      d curl_closepolicy...
      d                 s             10i 0 based(######ptr######)               Enum
      d  CURLCLOSEPOLICY_OLDEST...
      d                 c                   1
      d  CURLCLOSEPOLICY_LEAST_RECENTLY_USED...
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Solaris/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Solaris/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Solaris/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Solaris/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -343,15 +343,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/Solaris/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/Solaris/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/Solaris/Makefile
+	  $(AUTOMAKE) --foreign packages/Solaris/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/vms/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/vms/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/vms/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/vms/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -372,15 +372,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/vms/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/vms/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/vms/Makefile
+	  $(AUTOMAKE) --foreign packages/vms/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Win32/cygwin/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Win32/cygwin/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Win32/cygwin/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Win32/cygwin/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -353,15 +353,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/Win32/cygwin/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/Win32/cygwin/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/Win32/cygwin/Makefile
+	  $(AUTOMAKE) --foreign packages/Win32/cygwin/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Win32/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Win32/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/packages/Win32/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/packages/Win32/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -397,15 +397,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/Win32/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign packages/Win32/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu packages/Win32/Makefile
+	  $(AUTOMAKE) --foreign packages/Win32/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC10/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC10/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC10/lib/libcurl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC10/lib/libcurl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -1437,13 +1437,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1471,13 +1471,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1505,13 +1505,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1538,13 +1538,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1571,13 +1571,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1603,13 +1603,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1635,13 +1635,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -1666,13 +1666,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC10/src/curl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC10/src/curl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC10/src/curl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC10/src/curl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -2401,13 +2401,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2432,13 +2432,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2464,13 +2464,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2496,13 +2496,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2527,13 +2527,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2556,13 +2556,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2586,13 +2586,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2616,13 +2616,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC10\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC11/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC11/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC11/lib/libcurl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC11/lib/libcurl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -1493,13 +1493,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1527,13 +1527,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1561,13 +1561,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1594,13 +1594,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1627,13 +1627,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1659,13 +1659,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1691,13 +1691,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -1722,13 +1722,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC11/src/curl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC11/src/curl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC11/src/curl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC11/src/curl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -2457,13 +2457,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2488,13 +2488,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2520,13 +2520,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2552,13 +2552,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2583,13 +2583,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2612,13 +2612,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2642,13 +2642,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2672,13 +2672,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC11\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC12/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC12/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC12/lib/libcurl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC12/lib/libcurl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -1493,13 +1493,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1527,13 +1527,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1561,13 +1561,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1594,13 +1594,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1627,13 +1627,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1659,13 +1659,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1691,13 +1691,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -1722,13 +1722,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC12/src/curl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC12/src/curl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC12/src/curl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC12/src/curl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -2457,13 +2457,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2488,13 +2488,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2520,13 +2520,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2552,13 +2552,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2583,13 +2583,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2612,13 +2612,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2642,13 +2642,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2672,13 +2672,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC12\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC14/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC14/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC14/lib/libcurl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC14/lib/libcurl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -1493,13 +1493,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1527,13 +1527,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
@@ -1561,13 +1561,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1594,13 +1594,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
@@ -1627,13 +1627,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1659,13 +1659,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ManifestFile>$(IntDir)$(TargetFileName).intermediate.manifest</ManifestFile>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
@@ -1691,13 +1691,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -1722,13 +1722,13 @@
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <ImportLibrary>$(TargetDir)$(TargetName).lib</ImportLibrary>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC14/src/curl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC14/src/curl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC14/src/curl.vcxproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC14/src/curl.vcxproj	2016-07-21 16:56:49.000000000 +0800
@@ -2457,13 +2457,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2488,13 +2488,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
@@ -2520,13 +2520,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2552,13 +2552,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurld.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(TargetDir)$(TargetName).pdb</ProgramDatabaseFile>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
@@ -2583,13 +2583,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2612,13 +2612,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win32\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX86</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2642,13 +2642,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
@@ -2672,13 +2672,13 @@
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <Culture>0x0409</Culture>
       <AdditionalIncludeDirectories>..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>ws2_32.lib;wldap32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>ws2_32.lib;wldap32.lib;crypt32.lib;normaliz.lib;libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
       <AdditionalLibraryDirectories>..\..\..\..\build\Win64\VC14\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <SubSystem>Console</SubSystem>
       <TargetMachine>MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC6/lib/libcurl.dsp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC6/lib/libcurl.dsp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC6/lib/libcurl.dsp	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC6/lib/libcurl.dsp	2016-07-21 16:56:49.000000000 +0800
@@ -162,14 +162,14 @@
 # ADD BASE RSC /l 0x409 /d "_DEBUG"
 # ADD RSC /l 0x409 /d "_DEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI\libcurld.dll" /pdbtype:con /fixed:no
-# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI\libcurld.dll" /pdbtype:con /fixed:no
+# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI\libcurld.dll" /pdbtype:con /fixed:no
+# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI\libcurld.dll" /pdbtype:con /fixed:no
 
 !ELSEIF  "$(CFG)" == "libcurl - Win32 DLL Debug DLL Windows SSPI DLL WinIDN"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 1
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI - DLL WinIDN"
@@ -192,14 +192,14 @@
 # ADD BASE RSC /l 0x409 /d "_DEBUG"
 # ADD RSC /l 0x409 /d "_DEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI - DLL WinIDN\libcurld.dll" /pdbtype:con /fixed:no
-# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI - DLL WinIDN\libcurld.dll" /pdbtype:con /fixed:no
+# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI - DLL WinIDN\libcurld.dll" /pdbtype:con /fixed:no
+# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\DLL Debug - DLL Windows SSPI - DLL WinIDN\libcurld.dll" /pdbtype:con /fixed:no
 
 !ELSEIF  "$(CFG)" == "libcurl - Win32 DLL Release"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 0
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\DLL Release"
@@ -311,14 +311,14 @@
 # ADD BASE RSC /l 0x409 /d "NDEBUG"
 # ADD RSC /l 0x409 /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
-# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
+# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
+# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
 
 !ELSEIF  "$(CFG)" == "libcurl - Win32 DLL Release DLL Windows SSPI DLL WinIDN"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 0
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\DLL Release - DLL Windows SSPI - DLL WinIDN"
@@ -341,14 +341,14 @@
 # ADD BASE RSC /l 0x409 /d "NDEBUG"
 # ADD RSC /l 0x409 /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
-# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
+# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
+# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib /nologo /dll /pdb:none /machine:I386 /fixed:no /release
 
 !ELSEIF  "$(CFG)" == "libcurl - Win32 LIB Debug"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 1
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\LIB Debug"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC6/src/curl.dsp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC6/src/curl.dsp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC6/src/curl.dsp	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC6/src/curl.dsp	2016-07-21 16:56:49.000000000 +0800
@@ -391,14 +391,14 @@
 # ADD BASE RSC /l 0x409 /i "..\..\..\..\include" /d "_DEBUG"
 # ADD RSC /l 0x409 /i "..\..\..\..\include" /d "_DEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI" /fixed:no
-# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI" /fixed:no
+# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI" /fixed:no
+# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI" /fixed:no
 
 !ELSEIF  "$(CFG)" == "curl - Win32 LIB Debug DLL Windows SSPI DLL WinIDN"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 1
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN"
@@ -416,14 +416,14 @@
 # ADD BASE RSC /l 0x409 /i "..\..\..\..\include" /d "_DEBUG"
 # ADD RSC /l 0x409 /i "..\..\..\..\include" /d "_DEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN" /fixed:no
-# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN" /fixed:no
+# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN" /fixed:no
+# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurld.lib /nologo /subsystem:console /incremental:no /debug /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN\curld.exe" /pdbtype:con /libpath:"..\..\..\..\build\Win32\VC6\LIB Debug - DLL Windows SSPI - DLL WinIDN" /fixed:no
 
 !ELSEIF  "$(CFG)" == "curl - Win32 LIB Debug LIB OpenSSL"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 1
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\LIB Debug - LIB OpenSSL"
@@ -565,14 +565,14 @@
 # ADD BASE RSC /l 0x409 /i "..\..\..\..\include" /d "NDEBUG"
 # ADD RSC /l 0x409 /i "..\..\..\..\include" /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI" /fixed:no
-# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI" /fixed:no
+# ADD BASE LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI" /fixed:no
+# ADD LINK32 advapi32.lib wldap32.lib ws2_32.lib crypt32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI" /fixed:no
 
 !ELSEIF  "$(CFG)" == "curl - Win32 LIB Release DLL Windows SSPI DLL WinIDN"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 0
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN"
@@ -590,14 +590,14 @@
 # ADD BASE RSC /l 0x409 /i "..\..\..\..\include" /d "NDEBUG"
 # ADD RSC /l 0x409 /i "..\..\..\..\include" /d "NDEBUG"
 BSC32=bscmake.exe
 # ADD BASE BSC32 /nologo
 # ADD BSC32 /nologo
 LINK32=link.exe
-# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN" /fixed:no
-# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN" /fixed:no
+# ADD BASE LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN" /fixed:no
+# ADD LINK32 advapi32.lib normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurl.lib /nologo /subsystem:console /pdb:none /machine:I386 /out:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN\curl.exe" /libpath:"..\..\..\..\build\Win32\VC6\LIB Release - DLL Windows SSPI - DLL WinIDN" /fixed:no
 
 !ELSEIF  "$(CFG)" == "curl - Win32 LIB Release LIB OpenSSL"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 0
 # PROP BASE Output_Dir "..\..\..\..\build\Win32\VC6\LIB Release - LIB OpenSSL"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7/lib/libcurl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7/lib/libcurl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -445,13 +445,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				SetChecksum="TRUE"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
 			<Tool
@@ -496,13 +496,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
@@ -940,13 +940,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
@@ -992,13 +992,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				SetChecksum="TRUE"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
 			<Tool
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7/src/curl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7/src/curl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7/src/curl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7/src/curl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -129,13 +129,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib libcurl.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7\$(ConfigurationName)"
 				SubSystem="1"/>
 			<Tool
@@ -880,13 +880,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib libcurld.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7\$(ConfigurationName)"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -1131,13 +1131,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib libcurld.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7\$(ConfigurationName)"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -1182,13 +1182,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib libcurl.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7\$(ConfigurationName)"
 				SubSystem="1"/>
 			<Tool
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7.1/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7.1/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7.1/lib/libcurl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7.1/lib/libcurl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -499,13 +499,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				SetChecksum="TRUE"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
 			<Tool
@@ -556,13 +556,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
@@ -1060,13 +1060,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
@@ -1118,13 +1118,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				SetChecksum="TRUE"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"/>
 			<Tool
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7.1/src/curl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7.1/src/curl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC7.1/src/curl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC7.1/src/curl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -141,13 +141,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib libcurl.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib libcurl.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7.1\$(ConfigurationName)"
 				SubSystem="1"/>
 			<Tool
@@ -982,13 +982,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="wldap32.lib ws2_32.lib libcurld.lib"
+				AdditionalDependencies="wldap32.lib ws2_32.lib libcurld.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7.1\$(ConfigurationName)"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -1263,13 +1263,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib libcurld.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7.1\$(ConfigurationName)"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -1320,13 +1320,13 @@
 				CompileAs="0"/>
 			<Tool
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
 				AdditionalOptions="/MACHINE:I386 /FIXED:NO"
-				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib libcurl.lib"
+				AdditionalDependencies="normaliz.lib wldap32.lib ws2_32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				SuppressStartupBanner="TRUE"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC7.1\$(ConfigurationName)"
 				SubSystem="1"/>
 			<Tool
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC8/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC8/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC8/lib/libcurl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC8/lib/libcurl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -1025,13 +1025,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -1113,13 +1113,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
@@ -1200,13 +1200,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="1"
@@ -1286,13 +1286,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="17"
 			/>
@@ -3047,13 +3047,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -3135,13 +3135,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
@@ -3222,13 +3222,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="1"
@@ -3308,13 +3308,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="17"
 			/>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC8/src/curl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC8/src/curl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC8/src/curl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC8/src/curl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -3107,13 +3107,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC8\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3193,13 +3193,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC8\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3278,13 +3278,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC8\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="1"
 			/>
@@ -3362,13 +3362,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC8\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="17"
 			/>
@@ -3783,13 +3783,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC8\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3869,13 +3869,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC8\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3954,13 +3954,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC8\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="1"
 			/>
@@ -4038,13 +4038,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC8\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="17"
 			/>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC9/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC9/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC9/lib/libcurl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC9/lib/libcurl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -1002,13 +1002,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -1087,13 +1087,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
@@ -1171,13 +1171,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="1"
@@ -1254,13 +1254,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="17"
 			/>
@@ -3000,13 +3000,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -3085,13 +3085,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
@@ -3169,13 +3169,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ManifestFile="$(IntDir)\$(TargetFileName).intermediate.manifest"
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="1"
@@ -3252,13 +3252,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib"
 				OutputFile="$(OutDir)\$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories=""
 				ImportLibrary="$(TargetDir)$(TargetName).lib"
 				TargetMachine="17"
 			/>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC9/src/curl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC9/src/curl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/projects/Windows/VC9/src/curl.vcproj	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/projects/Windows/VC9/src/curl.vcproj	2016-07-21 16:56:49.000000000 +0800
@@ -3000,13 +3000,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC9\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3083,13 +3083,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC9\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3165,13 +3165,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC9\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="1"
 			/>
@@ -3246,13 +3246,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC9\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="17"
 			/>
@@ -3652,13 +3652,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC9\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3735,13 +3735,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurld.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurld.lib"
 				OutputFile="$(OutDir)\$(ProjectName)d.exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC9\$(ConfigurationName)"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
 				SubSystem="1"
@@ -3817,13 +3817,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win32\VC9\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="1"
 			/>
@@ -3898,13 +3898,13 @@
 			/>
 			<Tool
 				Name="VCPreLinkEventTool"
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib wldap32.lib normaliz.lib libcurl.lib"
+				AdditionalDependencies="ws2_32.lib wldap32.lib crypt32.lib normaliz.lib libcurl.lib"
 				OutputFile="$(OutDir)\$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="..\..\..\..\build\Win64\VC9\$(ConfigurationName)"
 				SubSystem="1"
 				TargetMachine="17"
 			/>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/RELEASE-NOTES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/RELEASE-NOTES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/RELEASE-NOTES	2016-05-30 14:14:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/RELEASE-NOTES	2016-07-21 16:54:20.000000000 +0800
@@ -1,57 +1,103 @@
-Curl and libcurl 7.49.1
+Curl and libcurl 7.50.0
 
- Public curl releases:         155
+ Public curl releases:         156
  Command line options:         185
  curl_easy_setopt() options:   224
  Public functions in libcurl:  61
  Contributors:                 1404
 
+This release includes the following changes:
+
+ o http: add CURLINFO_HTTP_VERSION and %{http_version} [3]
+
 This release includes the following bugfixes:
 
- o Windows: prevent DLL hijacking, CVE-2016-4802 [11]
- o dist: include manpage-scan.pl, nroff-scan.pl and CHECKSRC.md [1]
- o schannel: fix compile break with MSVC XP toolset [2]
- o curlbuild.h.dist: check __LP64__ as well to fix MIPS build [3]
- o dist: include curl_multi_socket_all.3 [4]
- o http2: use HTTP/2 in the HTTP/1.1-alike response
- o openssl: ERR_remove_thread_state() is deprecated in latest 1.1.0
- o CURLOPT_CONNECT_TO.3: user must not free the list prematurely [5]
- o libcurl.m4: Avoid obsolete warning [6]
- o winbuild/Makefile.vc: Fix check on SSL, MBEDTLS, WINSSL exclusivity [7]
- o curl_multibyte: fix compiler error
- o openssl: cleanup must free compression methods (memory leak) [8]
- o mbedtls: fix includes so snprintf() works [9]
- o checksrc.pl: Added variants of strcat() & strncat() to banned function list
- o contributors.sh: better grep pattern and show GitHub username [10]
- o ssh: fix build for libssh2 before 1.2.6 [12]
- o curl_share_setopt.3: Add min ver needed for ssl session lock [13]
+ o memdebug: fix MSVC crash with -DMEMDEBUG_LOG_SYNC [1]
+ o openssl: fix build with OPENSSL_NO_COMP [2]
+ o mbedtls: removed unused variables [4]
+ o cmake: Added missing mbedTLS support [5]
+ o URL parser: allow URLs to use one, two or three slashes [6]
+ o curl: fix -q [regression] [7]
+ o openssl: Use correct buffer sizes for error messages [8]
+ o curl: fix SIGSEGV while parsing URL with too many globs [9]
+ o schannel: add CURLOPT_CERTINFO support [10]
+ o vtls: fix ssl session cache race condition [11]
+ o http: Fix HTTP/2 connection reuse [regression] [12]
+ o checksrc: Add LoadLibrary to the banned functions list
+ o schannel: Disable ALPN on Windows < 8.1 [13]
+ o configure: occasional ignorance of --enable-symbol-hiding with GCC
+ o http2: test17xx are the first real HTTP/2 tests
+ o resolve: add support for IPv6 DNS64/NAT64 Networks on OS X + iOS [14]
+ o curl_multi_socket_action.3: rewording [15]
+ o CURLOPT_POSTFIELDS.3: Clarify what happens when set empty [16]
+ o cmake: Fix build with winldap [17]
+ o openssl: fix cert check with non-DNS name fields present [18]
+ o curl.1: mention the units for the progress meter [20]
+ o openssl: use more 'const' to fix build warnings with 1.1.0 branch
+ o cmake: now using BUILD_TESTING=ON/OFF [19]
+ o vtls: Only call add/getsession if session id is enabled
+ o headers: forward declare CURL, CURLM and CURLSH as structs [21]
+ o configure: improve detection of CA bundle path on FreeBSD [22]
+ o SFTP: set a generic error when no SFTP one exists [23]
+ o curl_global_init.3: expand on the SSL and WIN32 bits purpose [24]
+ o conn: don't free easy handle data in handler->disconnect [25]
+ o cookie.c: Fix misleading indentation [26]
+ o library: Fix memory leaks found during static analysis [27]
+ o CURLMOPT_SOCKETFUNCTION.3: fix typo [28]
+ o curl_global_init: moved the "IPv6 works" check here [29]
+ o connect: disable TFO on Linux when using SSL [30]
+ o vauth: Fixed memory leak due to function returning without free [31]
+ o winbuild: fix embedded manifest option
 
 This release includes the following known bugs:
 
  o see docs/KNOWN_BUGS (https://curl.haxx.se/docs/knownbugs.html)
 
 This release would not have looked like this without help, code, reports and
 advice from friends like these:
 
-  Alexander Traud, Daniel Stenberg, Gisle Vanem, Jan Ehrhardt,
-  jveazey on github, Marcel Raad, Michael Kaufmann, Michael Wallner,
-  Moti Avrahami, Paul Howarth, Ray Satiro, Steve Holme, Tomas Jakobsson,
-  (13 contributors)
+  Andrew Kurushin, Andrew Robbins, Askar Safin, Benjamin Kircher, Brad King,
+  Brian Prodoehl, Dan Fandrich, Daniel Seither, Daniel Stenberg, Fabian Ruff,
+  Frank Gevaerts, Gisle Vanem, Gou Lingfeng, Ivan Avdeev, Joel Depooter,
+  Kamil Dudka, Luo Jinghua, Marcel Raad, Michael Kaufmann, Michael Osipov,
+  Michael Wallner, Miroslav Franc, Patrick Monnerat, Ray Satiro, Reinhard Max,
+  Renaud Lehoux, Richard Gray, Romain Coltel, Saurav Babu, Sergei Nikulov,
+  Stefan Kanthak, Steve Holme, Timothy Polich, vanillajonathan on github,
+  Viktor Szakáts,
+  (35 contributors)
 
         Thanks! (and sorry if I forgot to mention someone)
 
 References to bug reports and discussions on issues:
 
- [1] = https://curl.haxx.se/mail/lib-2016-05/0113.html
- [2] = https://curl.haxx.se/bug/?i=812
- [3] = https://curl.haxx.se/bug/?i=813
- [4] = https://curl.haxx.se/bug/?i=816
- [5] = https://curl.haxx.se/bug/?i=819
- [6] = https://curl.haxx.se/bug/?i=821
- [7] = https://curl.haxx.se/bug/?i=818
- [8] = https://curl.haxx.se/bug/?i=817
- [9] = https://curl.haxx.se/mail/lib-2016-05/0196.html
- [10] = https://curl.haxx.se/bug/?i=824
- [11] = https://curl.haxx.se/docs/adv_20160527.html
- [12] = https://curl.haxx.se/bug/?i=831
- [13] = https://github.com/curl/curl/issues/826
+ [1] = https://curl.haxx.se/bug/?i=828
+ [2] = https://curl.haxx.se/bug/?i=836
+ [3] = https://curl.haxx.se/bug/?i=799
+ [4] = https://curl.haxx.se/bug/?i=838
+ [5] = https://curl.haxx.se/bug/?i=837
+ [6] = https://curl.haxx.se/bug/?i=791
+ [7] = https://curl.haxx.se/bug/?i=842
+ [8] = https://curl.haxx.se/bug/?i=844
+ [9] = https://bugzilla.redhat.com/1340757
+ [10] = https://curl.haxx.se/bug/?i=822
+ [11] = https://curl.haxx.se/bug/?i=815
+ [12] = https://curl.haxx.se/bug/?i=855
+ [13] = https://curl.haxx.se/bug/?i=840
+ [14] = https://curl.haxx.se/bug/?i=863
+ [15] = https://curl.haxx.se/bug/?i=865
+ [16] = https://curl.haxx.se/bug/?i=862
+ [17] = https://curl.haxx.se/bug/?i=874
+ [18] = https://curl.haxx.se/bug/?i=875
+ [19] = https://curl.haxx.se/bug/?i=882
+ [20] = https://curl.haxx.se/bug/?i=883
+ [21] = https://curl.haxx.se/mail/lib-2016-06/0100.html
+ [22] = https://curl.haxx.se/bug/?i=894
+ [23] = https://curl.haxx.se/mail/lib-2016-06/0052.html
+ [24] = https://curl.haxx.se/mail/lib-2016-06/0136.html
+ [25] = https://curl.haxx.se/mail/lib-2016-06/0139.html
+ [26] = https://curl.haxx.se/bug/?i=911
+ [27] = https://curl.haxx.se/bug/?i=913
+ [28] = https://curl.haxx.se/bug/?i=914
+ [29] = https://curl.haxx.se/bug/?i=915
+ [30] = https://curl.haxx.se/bug/?i=907
+ [31] = https://curl.haxx.se/mail/lib-2016-07/0054.html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/scripts/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/scripts/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/scripts/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/scripts/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -358,15 +358,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu scripts/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign scripts/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu scripts/Makefile
+	  $(AUTOMAKE) --foreign scripts/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/Makefile.m32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/Makefile.m32
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/Makefile.m32	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/Makefile.m32	2016-07-21 06:31:36.000000000 +0800
@@ -271,12 +271,16 @@
   ifndef DYN
     OPENSSL_LIBS += -lgdi32 -lcrypt32
   endif
   INCLUDES += -I"$(OPENSSL_INCLUDE)"
   CFLAGS += -DUSE_OPENSSL
   curl_LDADD += -L"$(OPENSSL_LIBPATH)" $(OPENSSL_LIBS)
+else
+ifdef WINSSL
+  curl_LDADD += -lcrypt32
+endif
 endif
 ifdef ZLIB
   INCLUDES += -I"$(ZLIB_PATH)"
   CFLAGS += -DHAVE_LIBZ -DHAVE_ZLIB_H
   curl_LDADD += -L"$(ZLIB_PATH)" -lz
 endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_hugehelp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_hugehelp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_hugehelp.c	2016-05-30 14:14:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_hugehelp.c	2016-07-21 07:54:33.000000000 +0800
@@ -1,11 +1,11 @@
 #include "tool_setup.h"
 #ifndef HAVE_LIBZ
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Mon May 30 08:14:01 2016
+ * Generation time: Thu Jul 21 01:54:33 2016
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 void hugehelp(void)
 {
    fputs(
@@ -108,1035 +108,1039 @@
 "       files  specified  on  a  single command line and cannot be used between\n"
 "       separate curl invokes.\n"
 "\n"
 "PROGRESS METER\n"
 "       curl normally displays a progress meter during  operations,  indicating\n"
 "       the  amount  of  transferred  data,  transfer speeds and estimated time\n"
-"       left, etc.\n"
+"       left, etc. The progress meter displays number of bytes and  the  speeds\n"
+"       are  in  bytes per second. The suffixes (k, M, G, T, P) are 1024 based.\n"
+"       For example 1k is 1024 bytes. 1M is 1048576 bytes.\n"
 "\n"
-"       curl displays this data to the terminal by default, so  if  you  invoke\n"
-"       curl  to do an operation and it is about to write data to the terminal,\n"
 , stdout);
  fputs(
+"       curl displays this data to the terminal by default, so  if  you  invoke\n"
+"       curl  to do an operation and it is about to write data to the terminal,\n"
 "       it disables the progress meter as otherwise it would mess up the output\n"
 "       mixing progress meter and response data.\n"
 "\n"
 "       If you want a progress meter for HTTP POST or PUT requests, you need to\n"
 "       redirect the response output to a file, using shell  redirect  (>),  -o\n"
 "       [file] or similar.\n"
 "\n"
+, stdout);
+ fputs(
 "       It  is not the same case for FTP upload as that operation does not spit\n"
 "       out any response data to the terminal.\n"
 "\n"
-, stdout);
- fputs(
 "       If you prefer a progress \"bar\" instead of the regular meter, -# is your\n"
 "       friend.\n"
 "OPTIONS\n"
 "       Options  start  with  one or two dashes. Many of the options require an\n"
 "       additional value next to them.\n"
 "\n"
 "       The short \"single-dash\" form of the options, -d  for  example,  may  be\n"
-"       used with or without a space between it and its value, although a space\n"
-"       is a recommended separator. The long  \"double-dash\"  form,  --data  for\n"
 , stdout);
  fputs(
+"       used with or without a space between it and its value, although a space\n"
+"       is a recommended separator. The long  \"double-dash\"  form,  --data  for\n"
 "       example, requires a space between it and its value.\n"
 "\n"
 "       Short version options that don't need any additional values can be used\n"
 "       immediately next to each other, like for example you  can  specify  all\n"
 "       the options -O, -L and -v at once as -OLv.\n"
 "\n"
-"       In general, all boolean options are enabled with --option and yet again\n"
-"       disabled with --no-option. That is, you use the exact same option  name\n"
 , stdout);
  fputs(
+"       In general, all boolean options are enabled with --option and yet again\n"
+"       disabled with --no-option. That is, you use the exact same option  name\n"
 "       but prefix it with \"no-\". However, in this list we mostly only list and\n"
 "       show the --option version of them. (This concept with --no options  was\n"
 "       added  in  7.19.0.  Previously  most  options  were  toggled  on/off on\n"
 "       repeated use of the same command line option.)\n"
 "\n"
 "       -#, --progress-bar\n"
+, stdout);
+ fputs(
 "              Make curl display progress as a simple progress bar  instead  of\n"
 "              the standard, more informational, meter.\n"
 "\n"
 "       -:, --next\n"
-, stdout);
- fputs(
 "              Tells curl to use a separate operation for the following URL and\n"
 "              associated  options.  This  allows  you  to  send  several   URL\n"
 "              requests,  each  with  their  own specific options, for example,\n"
 "              such as different user names or custom requests for each. (Added\n"
 "              in 7.36.0)\n"
 "\n"
+, stdout);
+ fputs(
 "       -0, --http1.0\n"
 "              (HTTP)  Tells  curl to use HTTP version 1.0 instead of using its\n"
 "              internally preferred: HTTP 1.1.\n"
 "\n"
-, stdout);
- fputs(
 "       --http1.1\n"
 "              (HTTP) Tells curl to use HTTP version 1.1. This is the  internal\n"
 "              default version. (Added in 7.33.0)\n"
 "\n"
 "       --http2\n"
 "              (HTTP)  Tells  curl  to  issue  its  requests using HTTP 2. This\n"
 "              requires that the underlying libcurl was built  to  support  it.\n"
 "              (Added in 7.33.0)\n"
 "\n"
-"       --http2-prior-knowledge\n"
-"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
 , stdout);
  fputs(
+"       --http2-prior-knowledge\n"
+"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
 "              HTTP/2 without HTTP/1.1 Upgrade.  It  requires  prior  knowledge\n"
 "              that  the  server  supports HTTP/2 straight away. HTTPS requests\n"
 "              will still do HTTP/2 the standard way with  negotiated  protocol\n"
 "              version in the TLS handshake.\n"
 "\n"
 "              HTTP/2  support  in  general  also  requires that the underlying\n"
+, stdout);
+ fputs(
 "              libcurl was built to support it. (Added in 7.49.0)\n"
 "\n"
 "       --no-npn\n"
-, stdout);
- fputs(
 "              Disable the NPN TLS extension. NPN  is  enabled  by  default  if\n"
 "              libcurl  was built with an SSL library that supports NPN. NPN is\n"
 "              used by a libcurl that supports HTTP 2 to negotiate HTTP 2  sup-\n"
 "              port with the server during https sessions.\n"
 "\n"
 "              (Added in 7.36.0)\n"
 "\n"
 "       --no-alpn\n"
-"              Disable  the  ALPN  TLS extension. ALPN is enabled by default if\n"
 , stdout);
  fputs(
+"              Disable  the  ALPN  TLS extension. ALPN is enabled by default if\n"
 "              libcurl was built with an SSL library that supports  ALPN.  ALPN\n"
 "              is  used  by  a libcurl that supports HTTP 2 to negotiate HTTP 2\n"
 "              support with the server during https sessions.\n"
 "\n"
 "              (Added in 7.36.0)\n"
 "\n"
 "       -1, --tlsv1\n"
 "              (SSL) Forces curl to use TLS version 1.x when negotiating with a\n"
-"              remote  TLS  server.   You can use options --tlsv1.0, --tlsv1.1,\n"
 , stdout);
  fputs(
+"              remote  TLS  server.   You can use options --tlsv1.0, --tlsv1.1,\n"
 "              and --tlsv1.2 to control the TLS version more precisely (if  the\n"
 "              SSL backend in use supports such a level of control).\n"
 "\n"
 "       -2, --sslv2\n"
 "              (SSL)  Forces  curl to use SSL version 2 when negotiating with a\n"
 "              remote SSL server. Sometimes curl is built  without  SSLv2  sup-\n"
 "              port. SSLv2 is widely considered insecure (see RFC 6176).\n"
 "\n"
 "       -3, --sslv3\n"
-"              (SSL)  Forces  curl to use SSL version 3 when negotiating with a\n"
 , stdout);
  fputs(
+"              (SSL)  Forces  curl to use SSL version 3 when negotiating with a\n"
 "              remote SSL server. Sometimes curl is built  without  SSLv3  sup-\n"
 "              port. SSLv3 is widely considered insecure (see RFC 7568).\n"
 "\n"
 "       -4, --ipv4\n"
 "              This  option tells curl to resolve names to IPv4 addresses only,\n"
 "              and not for example try IPv6.\n"
 "\n"
 "       -6, --ipv6\n"
 "              This option tells curl to resolve names to IPv6 addresses  only,\n"
+, stdout);
+ fputs(
 "              and not for example try IPv4.\n"
 "\n"
 "       -a, --append\n"
-, stdout);
- fputs(
 "              (FTP/SFTP) When used in an upload, this makes curl append to the\n"
 "              target file instead  of  overwriting  it.  If  the  remote  file\n"
 "              doesn't  exist,  it  will  be  created.   Note that this flag is\n"
 "              ignored by some SFTP servers (including OpenSSH).\n"
 "\n"
 "       -A, --user-agent <agent string>\n"
 "              (HTTP) Specify the User-Agent string to send to the HTTP server.\n"
-"              Some   badly   done  CGIs  fail  if  this  field  isn't  set  to\n"
 , stdout);
  fputs(
+"              Some   badly   done  CGIs  fail  if  this  field  isn't  set  to\n"
 "              \"Mozilla/4.0\". To encode blanks  in  the  string,  surround  the\n"
 "              string  with  single  quote marks. This can also be set with the\n"
 "              -H, --header option of course.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --anyauth\n"
 "              (HTTP) Tells curl to figure out authentication method by itself,\n"
-"              and  use  the most secure one the remote site claims to support.\n"
 , stdout);
  fputs(
+"              and  use  the most secure one the remote site claims to support.\n"
 "              This is done by first doing a request and checking the response-\n"
 "              headers,  thus  possibly  inducing  an extra network round-trip.\n"
 "              This is  used  instead  of  setting  a  specific  authentication\n"
 "              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
 "              --negotiate.\n"
 "\n"
-"              Note that using --anyauth is not recommended if you  do  uploads\n"
 , stdout);
  fputs(
+"              Note that using --anyauth is not recommended if you  do  uploads\n"
 "              from  stdin, since it may require data to be sent twice and then\n"
 "              the client must be able to rewind. If the need should arise when\n"
 "              uploading from stdin, the upload operation will fail.\n"
 "\n"
 "       -b, --cookie <name=data>\n"
 "              (HTTP)  Pass the data to the HTTP server as a cookie. It is sup-\n"
 "              posedly the data previously received from the server in a  \"Set-\n"
-"              Cookie:\"  line.  The data should be in the format \"NAME1=VALUE1;\n"
 , stdout);
  fputs(
+"              Cookie:\"  line.  The data should be in the format \"NAME1=VALUE1;\n"
 "              NAME2=VALUE2\".\n"
 "\n"
 "              If no '=' symbol is used in the line, it is treated as  a  file-\n"
 "              name  to  use to read previously stored cookie lines from, which\n"
 "              should be used in this session if they match. Using this  method\n"
 "              also  activates  the  cookie  engine which will make curl record\n"
-"              incoming cookies too, which may be handy if you're using this in\n"
 , stdout);
  fputs(
+"              incoming cookies too, which may be handy if you're using this in\n"
 "              combination  with  the -L, --location option. The file format of\n"
 "              the file to read cookies from should be plain HTTP headers (Set-\n"
 "              Cookie style) or the Netscape/Mozilla cookie file format.\n"
 "\n"
 "              The  file  specified with -b, --cookie is only used as input. No\n"
 "              cookies will be written to the file. To store cookies,  use  the\n"
-"              -c, --cookie-jar option.\n"
-"\n"
 , stdout);
  fputs(
+"              -c, --cookie-jar option.\n"
+"\n"
 "              Exercise  caution  if  you  are  using  this option and multiple\n"
 "              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
 "              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
 "              then the cookie is sent for any domain (even after redirects are\n"
 "              followed)  and cannot be modified by a server-set cookie. If the\n"
-"              cookie engine is enabled and a server sets a cookie of the  same\n"
 , stdout);
  fputs(
+"              cookie engine is enabled and a server sets a cookie of the  same\n"
 "              name then both will be sent on a future transfer to that server,\n"
 "              likely not what you intended.  To address  these  issues  set  a\n"
 "              domain  in  Set-Cookie  (doing that will include sub-domains) or\n"
 "              use the Netscape format.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -B, --use-ascii\n"
-"              (FTP/LDAP) Enable ASCII transfer. For  FTP,  this  can  also  be\n"
 , stdout);
  fputs(
+"              (FTP/LDAP) Enable ASCII transfer. For  FTP,  this  can  also  be\n"
 "              enforced  by  using an URL that ends with \";type=A\". This option\n"
 "              causes data sent to stdout to be in text mode for win32 systems.\n"
 "\n"
 "       --basic\n"
 "              (HTTP) Tells curl to use  HTTP  Basic  authentication  with  the\n"
 "              remote  host.  This  is  the  default and this option is usually\n"
 "              pointless, unless you use it to override a previously set option\n"
-"              that  sets  a  different  authentication method (such as --ntlm,\n"
 , stdout);
  fputs(
+"              that  sets  a  different  authentication method (such as --ntlm,\n"
 "              --digest, or --negotiate).\n"
 "\n"
 "              Used together with -u, --user and -x, --proxy.\n"
 "\n"
 "              See also --proxy-basic.\n"
 "\n"
 "       -c, --cookie-jar <file name>\n"
 "              (HTTP) Specify to which file you want curl to write all  cookies\n"
 "              after  a completed operation. Curl writes all cookies previously\n"
 "              read from a specified file as well as all cookies received  from\n"
-"              remote server(s). If no cookies are known, no data will be writ-\n"
 , stdout);
  fputs(
+"              remote server(s). If no cookies are known, no data will be writ-\n"
 "              ten. The file will be written using  the  Netscape  cookie  file\n"
 "              format.  If  you  set  the  file name to a single dash, \"-\", the\n"
 "              cookies will be written to stdout.\n"
 "\n"
 "              This command line option will activate the  cookie  engine  that\n"
 "              makes curl record and use cookies. Another way to activate it is\n"
 "              to use the -b, --cookie option.\n"
 "\n"
-"              If the cookie jar can't be created or written to, the whole curl\n"
 , stdout);
  fputs(
+"              If the cookie jar can't be created or written to, the whole curl\n"
 "              operation  won't  fail or even report an error clearly. Using -v\n"
 "              will get a warning displayed, but that is the only visible feed-\n"
 "              back you get about this possibly lethal situation.\n"
 "\n"
 "              Since 7.43.0 cookies that were imported in the Set-Cookie format\n"
 "              without a domain name are not exported by this option.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the  last  specified  file\n"
 "              name will be used.\n"
 "\n"
-, stdout);
- fputs(
 "       -C, --continue-at <offset>\n"
 "              Continue/Resume  a  previous  file transfer at the given offset.\n"
 "              The given offset is the exact  number  of  bytes  that  will  be\n"
 "              skipped,  counting  from the beginning of the source file before\n"
 "              it is transferred to the destination.  If used with uploads, the\n"
+, stdout);
+ fputs(
 "              FTP server command SIZE will not be used by curl.\n"
 "\n"
 "              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
-, stdout);
- fputs(
 "              resume the transfer. It then uses the given  output/input  files\n"
 "              to figure that out.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --ciphers <list of ciphers>\n"
 "              (SSL) Specifies which ciphers to use in the connection. The list\n"
-"              of ciphers must specify valid ciphers. Read  up  on  SSL  cipher\n"
-"              list           details           on           this          URL:\n"
 , stdout);
  fputs(
+"              of ciphers must specify valid ciphers. Read  up  on  SSL  cipher\n"
+"              list           details           on           this          URL:\n"
 "              https://www.openssl.org/docs/apps/ciphers.html\n"
 "\n"
 "              NSS ciphers are done differently than OpenSSL  and  GnuTLS.  The\n"
 "              full  list of NSS ciphers is in the NSSCipherSuite entry at this\n"
 "              URL:                                         https://git.fedora-\n"
+, stdout);
+ fputs(
 "              hosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --compressed\n"
-, stdout);
- fputs(
 "              (HTTP) Request a compressed response using one of the algorithms\n"
 "              curl supports, and save  the  uncompressed  document.   If  this\n"
 "              option  is  used  and  the server sends an unsupported encoding,\n"
 "              curl will report an error.\n"
 "\n"
 "       --connect-timeout <seconds>\n"
-"              Maximum time in seconds that  you  allow  curl's  connection  to\n"
-"              take.   This  only  limits the connection phase, so if curl con-\n"
 , stdout);
  fputs(
+"              Maximum time in seconds that  you  allow  curl's  connection  to\n"
+"              take.   This  only  limits the connection phase, so if curl con-\n"
 "              nects within the given period it will continue - if not it  will\n"
 "              exit.  Since version 7.32.0, this option accepts decimal values.\n"
 "\n"
 "              See also the -m, --max-time option.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --create-dirs\n"
-"              When  used  in  conjunction with the -o option, curl will create\n"
-"              the necessary local directory hierarchy as needed.  This  option\n"
 , stdout);
  fputs(
+"              When  used  in  conjunction with the -o option, curl will create\n"
+"              the necessary local directory hierarchy as needed.  This  option\n"
 "              creates  the dirs mentioned with the -o option, nothing else. If\n"
 "              the -o file name uses no dir or if the dirs it mentions  already\n"
 "              exist, no dir will be created.\n"
 "\n"
 "              To  create remote directories when using FTP or SFTP, try --ftp-\n"
 "              create-dirs.\n"
 "\n"
+, stdout);
+ fputs(
 "       --crlf Convert LF to CRLF in upload. Useful for MVS (OS/390).\n"
 "\n"
 "              (SMTP added in 7.40.0)\n"
 "\n"
 "       --crlfile <file>\n"
-, stdout);
- fputs(
 "              (HTTPS/FTPS) Provide a file using PEM format with a  Certificate\n"
 "              Revocation  List  that may specify peer certificates that are to\n"
 "              be considered revoked.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "              (Added in 7.19.7)\n"
 "       -d, --data <data>\n"
-"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
-"              server,  in  the  same  way  that a browser does when a user has\n"
 , stdout);
  fputs(
+"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
+"              server,  in  the  same  way  that a browser does when a user has\n"
 "              filled in an HTML form and presses the submit button. This  will\n"
 "              cause curl to pass the data to the server using the content-type\n"
 "              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
 "\n"
 "              -d, --data is the same as --data-ascii. --data-raw is almost the\n"
-"              same but does not have a special interpretation of the @ charac-\n"
-"              ter. To post data purely binary,  you  should  instead  use  the\n"
 , stdout);
  fputs(
+"              same but does not have a special interpretation of the @ charac-\n"
+"              ter. To post data purely binary,  you  should  instead  use  the\n"
 "              --data-binary  option.   To URL-encode the value of a form field\n"
 "              you may use --data-urlencode.\n"
 "\n"
 "              If any of these options is used more than once on the same  com-\n"
 "              mand  line,  the  data  pieces specified will be merged together\n"
+, stdout);
+ fputs(
 "              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
 "              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
 "              'name=daniel&skill=lousy'.\n"
 "\n"
-, stdout);
- fputs(
 "              If you start the data with the letter @, the rest  should  be  a\n"
 "              file  name  to read the data from, or - if you want curl to read\n"
 "              the data from stdin. Multiple files can also be specified. Post-\n"
+, stdout);
+ fputs(
 "              ing  data  from  a  file  named 'foobar' would thus be done with\n"
 "              --data @foobar. When --data is told to read  from  a  file  like\n"
 "              that, carriage returns and newlines will be stripped out. If you\n"
-, stdout);
- fputs(
 "              don't want the @ character to have a special interpretation  use\n"
 "              --data-raw instead.\n"
 "\n"
 "       -D, --dump-header <file>\n"
 "              Write the protocol headers to the specified file.\n"
 "\n"
+, stdout);
+ fputs(
 "              This  option  is handy to use when you want to store the headers\n"
 "              that an HTTP site sends to you. Cookies from the  headers  could\n"
 "              then  be  read  in  a  second  curl  invocation by using the -b,\n"
-, stdout);
- fputs(
 "              --cookie option! The -c, --cookie-jar option is a better way  to\n"
 "              store cookies.\n"
 "\n"
 "              When  used  in FTP, the FTP server response lines are considered\n"
 "              being \"headers\" and thus are saved there.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --data-ascii <data>\n"
 "              See -d, --data.\n"
 "\n"
 "       --data-binary <data>\n"
 "              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
-, stdout);
- fputs(
 "              cessing whatsoever.\n"
 "\n"
 "              If  you  start  the data with the letter @, the rest should be a\n"
 "              filename.  Data is posted in a similar  manner  as  --data-ascii\n"
+, stdout);
+ fputs(
 "              does,  except  that  newlines and carriage returns are preserved\n"
 "              and conversions are never done.\n"
 "\n"
 "              If this option is used several times,  the  ones  following  the\n"
 "              first will append data as described in -d, --data.\n"
 "\n"
 "       --data-raw <data>\n"
-, stdout);
- fputs(
 "              (HTTP)  This posts data similarly to --data but without the spe-\n"
 "              cial interpretation of the @ character. See -d, --data.   (Added\n"
 "              in 7.43.0)\n"
 "\n"
+, stdout);
+ fputs(
 "       --data-urlencode <data>\n"
 "              (HTTP) This posts data, similar to the other --data options with\n"
 "              the exception that this performs URL-encoding. (Added in 7.18.0)\n"
 "              To be CGI-compliant, the <data> part should begin  with  a  name\n"
-, stdout);
- fputs(
 "              followed  by a separator and a content specification. The <data>\n"
 "              part can be passed to curl using one of the following syntaxes:\n"
 "\n"
 "              content\n"
+, stdout);
+ fputs(
 "                     This will make curl URL-encode the content and pass  that\n"
 "                     on.  Just  be careful so that the content doesn't contain\n"
 "                     any = or @ symbols, as that will  then  make  the  syntax\n"
 "                     match one of the other cases below!\n"
 "\n"
 "              =content\n"
-, stdout);
- fputs(
 "                     This  will make curl URL-encode the content and pass that\n"
 "                     on. The preceding = symbol is not included in the data.\n"
 "\n"
+, stdout);
+ fputs(
 "              name=content\n"
 "                     This will make curl URL-encode the content part and  pass\n"
 "                     that  on.  Note that the name part is expected to be URL-\n"
 "                     encoded already.\n"
 "\n"
 "              @filename\n"
 "                     This will  make  curl  load  data  from  the  given  file\n"
-, stdout);
- fputs(
 "                     (including  any  newlines), URL-encode that data and pass\n"
 "                     it on in the POST.\n"
 "\n"
 "              name@filename\n"
+, stdout);
+ fputs(
 "                     This will  make  curl  load  data  from  the  given  file\n"
 "                     (including  any  newlines), URL-encode that data and pass\n"
 "                     it on in the POST. The  name  part  gets  an  equal  sign\n"
 "                     appended, resulting in name=urlencoded-file-content. Note\n"
-, stdout);
- fputs(
 "                     that the name is expected to be URL-encoded already.\n"
 "\n"
 "       --delegation LEVEL\n"
 "              Set LEVEL to tell the server what it is allowed to delegate when\n"
+, stdout);
+ fputs(
 "              it comes to user credentials. Used with GSS/kerberos.\n"
 "\n"
 "              none   Don't allow any delegation.\n"
 "\n"
 "              policy Delegates  if  and only if the OK-AS-DELEGATE flag is set\n"
 "                     in the Kerberos service ticket,  which  is  a  matter  of\n"
 "                     realm policy.\n"
 "\n"
-, stdout);
- fputs(
 "              always Unconditionally allow the server to delegate.\n"
 "\n"
 "       --digest\n"
 "              (HTTP)  Enables HTTP Digest authentication. This is an authenti-\n"
+, stdout);
+ fputs(
 "              cation scheme that prevents the password from  being  sent  over\n"
 "              the  wire in clear text. Use this in combination with the normal\n"
 "              -u, --user option to  set  user  name  and  password.  See  also\n"
 "              --ntlm, --negotiate and --anyauth for related options.\n"
 "\n"
-, stdout);
- fputs(
 "              If  this  option  is  used  several times, only the first one is\n"
 "              used.\n"
 "\n"
 "       --disable-eprt\n"
+, stdout);
+ fputs(
 "              (FTP) Tell curl to disable the use of the EPRT and LPRT commands\n"
 "              when doing active FTP transfers. Curl will normally always first\n"
 "              attempt to use EPRT, then LPRT before using PORT, but with  this\n"
 "              option,  it  will  use PORT right away. EPRT and LPRT are exten-\n"
-, stdout);
- fputs(
 "              sions to the original FTP protocol, and  may  not  work  on  all\n"
 "              servers, but they enable more functionality in a better way than\n"
+, stdout);
+ fputs(
 "              the traditional PORT command.\n"
 "\n"
 "              --eprt can be used to explicitly enable EPRT again and --no-eprt\n"
 "              is an alias for --disable-eprt.\n"
 "\n"
 "              If  the  server is an IPv6 host, this option will have no effect\n"
 "              as EPRT is necessary then.\n"
 "\n"
-, stdout);
- fputs(
 "              Disabling EPRT only changes the active behavior. If you want  to\n"
 "              switch  to  passive  mode  you need to not use -P, --ftp-port or\n"
 "              force it with --ftp-pasv.\n"
 "\n"
+, stdout);
+ fputs(
 "       --disable-epsv\n"
 "              (FTP) Tell curl to disable the use  of  the  EPSV  command  when\n"
 "              doing  passive  FTP  transfers.  Curl will normally always first\n"
 "              attempt to use EPSV before PASV, but with this option,  it  will\n"
 "              not try using EPSV.\n"
 "\n"
-, stdout);
- fputs(
 "              --epsv can be used to explicitly enable EPSV again and --no-epsv\n"
 "              is an alias for --disable-epsv.\n"
 "\n"
 "              If the server is an IPv6 host, this option will have  no  effect\n"
+, stdout);
+ fputs(
 "              as EPSV is necessary then.\n"
 "\n"
 "              Disabling EPSV only changes the passive behavior. If you want to\n"
 "              switch to active mode you need to use -P, --ftp-port.\n"
 "\n"
 "       --dns-interface <interface>\n"
-, stdout);
- fputs(
 "              Tell curl to send outgoing  DNS  requests  through  <interface>.\n"
 "              This  option  is  a  counterpart  to --interface (which does not\n"
 "              affect DNS). The supplied string must be an interface name  (not\n"
 "              an address).\n"
 "\n"
+, stdout);
+ fputs(
 "              This  option  requires  that  libcurl  was built with a resolver\n"
 "              backend that supports this operation. The c-ares backend is  the\n"
 "              only such one. (Added in 7.33.0)\n"
 "\n"
-, stdout);
- fputs(
 "       --dns-ipv4-addr <ip-address>\n"
 "              Tell curl to bind to <ip-address> when making IPv4 DNS requests,\n"
 "              so that the DNS requests originate from this address. The  argu-\n"
 "              ment should be a single IPv4 address.\n"
 "\n"
+, stdout);
+ fputs(
 "              This  option  requires  that  libcurl  was built with a resolver\n"
 "              backend that supports this operation. The c-ares backend is  the\n"
 "              only such one.  (Added in 7.33.0)\n"
 "\n"
 "       --dns-ipv6-addr <ip-address>\n"
-, stdout);
- fputs(
 "              Tell curl to bind to <ip-address> when making IPv6 DNS requests,\n"
 "              so that the DNS requests originate from this address. The  argu-\n"
 "              ment should be a single IPv6 address.\n"
 "\n"
+, stdout);
+ fputs(
 "              This  option  requires  that  libcurl  was built with a resolver\n"
 "              backend that supports this operation. The c-ares backend is  the\n"
 "              only such one.  (Added in 7.33.0)\n"
 "\n"
 "       --dns-servers <ip-address,ip-address>\n"
-, stdout);
- fputs(
 "              Set  the  list  of  DNS servers to be used instead of the system\n"
 "              default.  The list of IP addresses should be separated with com-\n"
 "              mas. Port numbers may also optionally be given as :<port-number>\n"
+, stdout);
+ fputs(
 "              after each IP address.\n"
 "\n"
 "              This option requires that libcurl  was  built  with  a  resolver\n"
 "              backend  that supports this operation. The c-ares backend is the\n"
 "              only such one.  (Added in 7.33.0)\n"
 "\n"
-, stdout);
- fputs(
 "       -e, --referer <URL>\n"
 "              (HTTP) Sends the \"Referrer Page\" information to the HTTP server.\n"
 "              This can also be set with the -H, --header flag of course.  When\n"
+, stdout);
+ fputs(
 "              used with -L, --location you can append \";auto\" to the --referer\n"
 "              URL to make curl automatically set the previous URL when it fol-\n"
 "              lows a Location: header. The \";auto\" string can be  used  alone,\n"
 "              even if you don't set an initial --referer.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -E, --cert <certificate[:password]>\n"
 "              (SSL)  Tells  curl  to use the specified client certificate file\n"
+, stdout);
+ fputs(
 "              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
 "              col.  The  certificate must be in PKCS#12 format if using Secure\n"
 "              Transport, or PEM format if using  any  other  engine.   If  the\n"
-, stdout);
- fputs(
 "              optional password isn't specified, it will be queried for on the\n"
 "              terminal. Note that this option  assumes  a  \"certificate\"  file\n"
 "              that is the private key and the client certificate concatenated!\n"
+, stdout);
+ fputs(
 "              See --cert and --key to specify them independently.\n"
 "\n"
 "              If curl is built against the NSS SSL library  then  this  option\n"
 "              can  tell curl the nickname of the certificate to use within the\n"
-, stdout);
- fputs(
 "              NSS database defined by the environment variable SSL_DIR (or  by\n"
 "              default  /etc/pki/nssdb).  If  the  NSS PEM PKCS#11 module (lib-\n"
 "              nsspem.so) is available then PEM files may  be  loaded.  If  you\n"
+, stdout);
+ fputs(
 "              want to use a file from the current directory, please precede it\n"
 "              with \"./\" prefix, in order to avoid confusion with  a  nickname.\n"
 "              If  the nickname contains \":\", it needs to be preceded by \"\\\" so\n"
-, stdout);
- fputs(
 "              that it is not recognized as password delimiter.  If  the  nick-\n"
 "              name  contains \"\\\", it needs to be escaped as \"\\\\\" so that it is\n"
 "              not recognized as an escape character.\n"
 "\n"
+, stdout);
+ fputs(
 "              (iOS and Mac OS X only) If curl is built against  Secure  Trans-\n"
 "              port,  then  the  certificate string can either be the name of a\n"
 "              certificate/private key in the system or user keychain,  or  the\n"
-, stdout);
- fputs(
 "              path  to  a  PKCS#12-encoded certificate and private key. If you\n"
 "              want to use a file from the current directory, please precede it\n"
 "              with \"./\" prefix, in order to avoid confusion with a nickname.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --engine <name>\n"
 "              Select  the  OpenSSL crypto engine to use for cipher operations.\n"
 "              Use --engine list  to  print  a  list  of  build-time  supported\n"
-, stdout);
- fputs(
 "              engines.  Note  that  not  all  (or  none) of the engines may be\n"
 "              available at run-time.\n"
 "\n"
 "       --environment\n"
 "              (RISC OS ONLY) Sets a range of environment variables, using  the\n"
+, stdout);
+ fputs(
 "              names the -w option supports, to allow easier extraction of use-\n"
 "              ful information after having run curl.\n"
 "\n"
 "       --egd-file <file>\n"
 "              (SSL) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
-, stdout);
- fputs(
 "              socket.  The  socket  is  used to seed the random engine for SSL\n"
 "              connections. See also the --random-file option.\n"
 "\n"
 "       --expect100-timeout <seconds>\n"
 "              (HTTP) Maximum time in seconds that you allow curl to wait for a\n"
+, stdout);
+ fputs(
 "              100-continue  response  when curl emits an Expects: 100-continue\n"
 "              header in its request. By default curl  will  wait  one  second.\n"
 "              This  option accepts decimal values! When curl stops waiting, it\n"
-, stdout);
- fputs(
 "              will continue as if the response has been received.\n"
 "\n"
 "              (Added in 7.47.0)\n"
 "\n"
 "       --cert-type <type>\n"
 "              (SSL) Tells curl what certificate type the provided  certificate\n"
+, stdout);
+ fputs(
 "              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
 "              PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --cacert <CA certificate>\n"
-, stdout);
- fputs(
 "              (SSL) Tells curl to use the specified certificate file to verify\n"
 "              the  peer.  The  file  may contain multiple CA certificates. The\n"
 "              certificate(s) must be in PEM format. Normally curl is built  to\n"
+, stdout);
+ fputs(
 "              use a default file for this, so this option is typically used to\n"
 "              alter that default file.\n"
 "\n"
 "              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
-, stdout);
- fputs(
 "              if  it  is  set,  and uses the given path as a path to a CA cert\n"
 "              bundle. This option overrides that variable.\n"
 "\n"
 "              The windows version of curl will automatically  look  for  a  CA\n"
 "              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
+, stdout);
+ fputs(
 "              tory as curl.exe, or in the Current Working Directory, or in any\n"
 "              folder along your PATH.\n"
 "\n"
 "              If  curl  is  built  against  the  NSS  SSL library, the NSS PEM\n"
-, stdout);
- fputs(
 "              PKCS#11 module (libnsspem.so) needs to  be  available  for  this\n"
 "              option to work properly.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --capath <CA certificate directory>\n"
+, stdout);
+ fputs(
 "              (SSL)  Tells  curl to use the specified certificate directory to\n"
 "              verify the peer. Multiple paths can be  provided  by  separating\n"
 "              them with \":\" (e.g.  \"path1:path2:path3\"). The certificates must\n"
-, stdout);
- fputs(
 "              be in PEM format, and if curl  is  built  against  OpenSSL,  the\n"
 "              directory  must  have  been processed using the c_rehash utility\n"
 "              supplied with OpenSSL. Using --capath can allow  OpenSSL-powered\n"
+, stdout);
+ fputs(
 "              curl  to  make  SSL-connections much more efficiently than using\n"
 "              --cacert if the --cacert file contains many CA certificates.\n"
 "\n"
 "              If this option is set, the default capath value will be ignored,\n"
-, stdout);
- fputs(
 "              and if it is used several times, the last one will be used.\n"
 "\n"
 "       --pinnedpubkey <pinned public key (hashes)>\n"
 "              (SSL)  Tells  curl  to  use  the  specified  public key file (or\n"
+, stdout);
+ fputs(
 "              hashes) to verify the peer. This can be a path to a  file  which\n"
 "              contains a single public key in PEM or DER format, or any number\n"
 "              of base64 encoded sha256 hashes preceded by 'sha256//' and sepa-\n"
 "              rated by ';'\n"
 "\n"
-, stdout);
- fputs(
 "              When  negotiating  a  TLS  or SSL connection, the server sends a\n"
 "              certificate indicating its identity. A public key  is  extracted\n"
+, stdout);
+ fputs(
 "              from  this certificate and if it does not exactly match the pub-\n"
 "              lic key provided to this option, curl will abort the  connection\n"
 "              before sending or receiving any data.\n"
 "\n"
 "              PEM/DER support:\n"
 "                7.39.0: OpenSSL, GnuTLS and GSKit\n"
 "                7.43.0: NSS and wolfSSL/CyaSSL\n"
-, stdout);
- fputs(
 "                7.47.0: mbedtls\n"
 "                7.49.0: PolarSSL sha256 support:\n"
 "                7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.\n"
+, stdout);
+ fputs(
 "                7.47.0: mbedtls\n"
 "                7.49.0: PolarSSL Other SSL backends not supported.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --cert-status\n"
 "              (SSL)  Tells curl to verify the status of the server certificate\n"
-, stdout);
- fputs(
 "              by using the Certificate Status Request (aka. OCSP stapling) TLS\n"
 "              extension.\n"
 "\n"
 "              If  this option is enabled and the server sends an invalid (e.g.\n"
+, stdout);
+ fputs(
 "              expired) response, if the response suggests that the server cer-\n"
 "              tificate  has  been  revoked, or no response at all is received,\n"
 "              the verification fails.\n"
 "\n"
 "              This is currently only implemented in the  OpenSSL,  GnuTLS  and\n"
-, stdout);
- fputs(
 "              NSS backends.  (Added in 7.41.0)\n"
 "\n"
 "       --false-start\n"
 "\n"
 "              (SSL)  Tells  curl  to use false start during the TLS handshake.\n"
+, stdout);
+ fputs(
 "              False start is a mode where a  TLS  client  will  start  sending\n"
 "              application data before verifying the server's Finished message,\n"
 "              thus saving a round trip when performing a full handshake.\n"
 "\n"
 "              This is currently only implemented in the NSS and Secure  Trans-\n"
-, stdout);
- fputs(
 "              port  (on  iOS  7.0  or  later, or OS X 10.9 or later) backends.\n"
 "              (Added in 7.42.0)\n"
 "\n"
 "       -f, --fail\n"
+, stdout);
+ fputs(
 "              (HTTP) Fail silently (no output at all) on server  errors.  This\n"
 "              is  mostly done to better enable scripts etc to better deal with\n"
 "              failed attempts. In normal cases when an HTTP  server  fails  to\n"
 "              deliver  a  document,  it  returns  an  HTML document stating so\n"
-, stdout);
- fputs(
 "              (which often also describes why and more). This flag  will  pre-\n"
 "              vent curl from outputting that and return error 22.\n"
 "\n"
+, stdout);
+ fputs(
 "              This  method is not fail-safe and there are occasions where non-\n"
 "              successful response codes will  slip  through,  especially  when\n"
 "              authentication is involved (response codes 401 and 407).\n"
 "\n"
 "       -F, --form <name=content>\n"
 "              (HTTP)  This  lets curl emulate a filled-in form in which a user\n"
-, stdout);
- fputs(
 "              has pressed the submit button. This causes  curl  to  POST  data\n"
 "              using  the  Content-Type  multipart/form-data  according  to RFC\n"
+, stdout);
+ fputs(
 "              2388. This enables uploading of binary files etc. To  force  the\n"
 "              'content'  part  to  be  a  file, prefix the file name with an @\n"
 "              sign. To just get the content part from a file, prefix the  file\n"
 "              name  with  the symbol <. The difference between @ and < is then\n"
-, stdout);
- fputs(
 "              that @ makes a file get attached in the post as a  file  upload,\n"
 "              while  the  <  makes  a text field and just get the contents for\n"
+, stdout);
+ fputs(
 "              that text field from a file.\n"
 "\n"
 "              Example: to send an image to a server, where  'profile'  is  the\n"
 "              name of the form-field to which portrait.jpg will be the input:\n"
 "\n"
 "              curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
 "\n"
-, stdout);
- fputs(
 "              To read content from stdin instead of a file, use - as the file-\n"
 "              name. This goes for both @ and <  constructs.  Unfortunately  it\n"
+, stdout);
+ fputs(
 "              does  not support reading the file from a named pipe or similar,\n"
 "              as it needs the full size before the transfer starts.\n"
 "\n"
 "              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
 "              'type=', in a manner similar to:\n"
 "\n"
 "              curl -F \"web=@index.html;type=text/html\" example.com\n"
-, stdout);
- fputs(
 "\n"
 "              or\n"
 "\n"
 "              curl -F \"name=daniel;type=text/foo\" example.com\n"
 "\n"
+, stdout);
+ fputs(
 "              You  can  also explicitly change the name field of a file upload\n"
 "              part by setting filename=, like this:\n"
 "\n"
 "              curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
 "\n"
 "              If filename/path contains ',' or ';', it must be quoted by  dou-\n"
 "              ble-quotes like:\n"
 "\n"
 "              curl   -F   \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"  exam-\n"
 "              ple.com\n"
 "\n"
-, stdout);
- fputs(
 "              or\n"
 "\n"
+, stdout);
+ fputs(
 "              curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
 "\n"
 "              Note that if a filename/path is  quoted  by  double-quotes,  any\n"
 "              double-quote or backslash within the filename must be escaped by\n"
 "              backslash.\n"
 "\n"
 "              See further examples and details in the MANUAL.\n"
 "\n"
 "              This option can be used multiple times.\n"
 "\n"
 "       --ftp-account [data]\n"
+"              (FTP) When an FTP server asks for \"account data\" after user name\n"
 , stdout);
  fputs(
-"              (FTP) When an FTP server asks for \"account data\" after user name\n"
 "              and  password has been provided, this data is sent off using the\n"
 "              ACCT command. (Added in 7.13.0)\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --ftp-alternative-to-user <command>\n"
 "              (FTP) If authenticating with the USER and PASS  commands  fails,\n"
 "              send  this  command.   When  connecting  to  Tumbleweed's Secure\n"
+"              Transport server over FTPS using  a  client  certificate,  using\n"
 , stdout);
  fputs(
-"              Transport server over FTPS using  a  client  certificate,  using\n"
 "              \"SITE  AUTH\"  will tell the server to retrieve the username from\n"
 "              the certificate. (Added in 7.15.5)\n"
 "\n"
 "       --ftp-create-dirs\n"
 "              (FTP/SFTP) When an FTP or SFTP URL/operation uses  a  path  that\n"
 "              doesn't  currently exist on the server, the standard behavior of\n"
 "              curl is to fail. Using this option, curl will instead attempt to\n"
-, stdout);
- fputs(
 "              create missing directories.\n"
 "\n"
 "       --ftp-method [method]\n"
+, stdout);
+ fputs(
 "              (FTP)  Control what method curl should use to reach a file on an\n"
 "              FTP(S) server. The method argument should be one of the  follow-\n"
 "              ing alternatives:\n"
 "\n"
 "              multicwd\n"
 "                     curl  does  a  single CWD operation for each path part in\n"
 "                     the given URL. For deep hierarchies this means very  many\n"
+"                     commands.  This  is  how RFC 1738 says it should be done.\n"
 , stdout);
  fputs(
-"                     commands.  This  is  how RFC 1738 says it should be done.\n"
 "                     This is the default but the slowest behavior.\n"
 "\n"
 "              nocwd  curl does no CWD at all. curl will do  SIZE,  RETR,  STOR\n"
 "                     etc and give a full path to the server for all these com-\n"
 "                     mands. This is the fastest behavior.\n"
 "\n"
 "              singlecwd\n"
 "                     curl does one CWD with the full target directory and then\n"
+"                     operates  on  the  file  \"normally\" (like in the multicwd\n"
 , stdout);
  fputs(
-"                     operates  on  the  file  \"normally\" (like in the multicwd\n"
 "                     case). This is somewhat  more  standards  compliant  than\n"
 "                     'nocwd' but without the full penalty of 'multicwd'.\n"
 "\n"
 "              (Added in 7.15.1)\n"
 "\n"
 "       --ftp-pasv\n"
 "              (FTP)  Use  passive mode for the data connection. Passive is the\n"
 "              internal default behavior, but using this option can be used  to\n"
-, stdout);
- fputs(
 "              override a previous -P/-ftp-port option. (Added in 7.11.0)\n"
 "\n"
+, stdout);
+ fputs(
 "              If  this  option  is  used  several times, only the first one is\n"
 "              used. Undoing an enforced passive really isn't  doable  but  you\n"
 "              must then instead enforce the correct -P, --ftp-port again.\n"
 "\n"
 "              Passive mode means that curl will try the EPSV command first and\n"
 "              then PASV, unless --disable-epsv is used.\n"
 "\n"
 "       --ftp-skip-pasv-ip\n"
+"              (FTP) Tell curl to not use the IP address the server suggests in\n"
 , stdout);
  fputs(
-"              (FTP) Tell curl to not use the IP address the server suggests in\n"
 "              its  response to curl's PASV command when curl connects the data\n"
 "              connection. Instead curl will re-use  the  same  IP  address  it\n"
 "              already uses for the control connection. (Added in 7.14.2)\n"
 "\n"
 "              This  option has no effect if PORT, EPRT or EPSV is used instead\n"
 "              of PASV.\n"
 "\n"
 "       --ftp-pret\n"
+"              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
 , stdout);
  fputs(
-"              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
 "              Certain  FTP  servers,  mainly drftpd, require this non-standard\n"
 "              command for directory listings as well as up  and  downloads  in\n"
 "              PASV mode.  (Added in 7.20.x)\n"
 "\n"
 "       --ftp-ssl-ccc\n"
 "              (FTP)  Use  CCC  (Clear  Command Channel) Shuts down the SSL/TLS\n"
 "              layer after authenticating. The rest of the control channel com-\n"
+"              munication  will be unencrypted. This allows NAT routers to fol-\n"
 , stdout);
  fputs(
-"              munication  will be unencrypted. This allows NAT routers to fol-\n"
 "              low the FTP transaction. The default mode is passive. See --ftp-\n"
 "              ssl-ccc-mode for other modes.  (Added in 7.16.1)\n"
 "\n"
 "       --ftp-ssl-ccc-mode [active/passive]\n"
 "              (FTP)  Use  CCC  (Clear  Command Channel) Sets the CCC mode. The\n"
 "              passive mode will not initiate the shutdown,  but  instead  wait\n"
+"              for the server to do it, and will not reply to the shutdown from\n"
 , stdout);
  fputs(
-"              for the server to do it, and will not reply to the shutdown from\n"
 "              the server. The active mode initiates the shutdown and waits for\n"
 "              a reply from the server.  (Added in 7.16.2)\n"
 "\n"
 "       --ftp-ssl-control\n"
 "              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
 "              Allows secure authentication, but non-encrypted  data  transfers\n"
 "              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
+"              port SSL/TLS.  (Added in 7.16.0) that can still be used but will\n"
 , stdout);
  fputs(
-"              port SSL/TLS.  (Added in 7.16.0) that can still be used but will\n"
 "              be removed in a future version.\n"
 "\n"
 "       --ftp-ssl\n"
 "              (FTP) This deprecated option is now known as --ssl.\n"
 "\n"
 "       --ftp-ssl-reqd\n"
 "              (FTP) This deprecated option is now known as --ssl-reqd.\n"
 "\n"
 "       --form-string <name=string>\n"
 "              (HTTP)  Similar  to  --form except that the value string for the\n"
 "              named parameter is used literally. Leading '@' and  '<'  charac-\n"
+"              ters, and the ';type=' string in the value have no special mean-\n"
 , stdout);
  fputs(
-"              ters, and the ';type=' string in the value have no special mean-\n"
 "              ing. Use this in preference to --form if there's any possibility\n"
 "              that  the  string  value may accidentally trigger the '@' or '<'\n"
 "              features of --form.\n"
 "\n"
 "       -g, --globoff\n"
 "              This option switches off the \"URL globbing parser\". When you set\n"
 "              this  option, you can specify URLs that contain the letters {}[]\n"
+"              without having them being interpreted by curl itself. Note  that\n"
 , stdout);
  fputs(
-"              without having them being interpreted by curl itself. Note  that\n"
 "              these  letters are not normal legal URL contents but they should\n"
 "              be encoded according to the URI standard.\n"
 "\n"
 "       -G, --get\n"
 "              When used, this option will make all  data  specified  with  -d,\n"
 "              --data,  --data-binary or --data-urlencode to be used in an HTTP\n"
 "              GET request instead of the POST request that otherwise would  be\n"
+"              used. The data will be appended to the URL with a '?' separator.\n"
 , stdout);
  fputs(
-"              used. The data will be appended to the URL with a '?' separator.\n"
 "              If  used  in  combination with -I, the POST data will instead be\n"
 "              appended to the URL with a HEAD request.\n"
 "\n"
 "              If this option is used several times,  only  the  first  one  is\n"
 "              used.  This is because undoing a GET doesn't make sense, but you\n"
 "              should then instead enforce the alternative method you prefer.\n"
 "\n"
 "       -H, --header <header>\n"
+"              (HTTP) Extra header to include in the request when sending  HTTP\n"
 , stdout);
  fputs(
-"              (HTTP) Extra header to include in the request when sending  HTTP\n"
 "              to  a  server. You may specify any number of extra headers. Note\n"
 "              that if you should add a custom header that has the same name as\n"
 "              one  of  the  internal  ones curl would use, your externally set\n"
 "              header will be used instead of the internal one. This allows you\n"
 "              to  make  even  trickier  stuff than curl would normally do. You\n"
+"              should not replace internally set headers without  knowing  per-\n"
 , stdout);
  fputs(
-"              should not replace internally set headers without  knowing  per-\n"
 "              fectly well what you're doing. Remove an internal header by giv-\n"
 "              ing a replacement without content  on  the  right  side  of  the\n"
 "              colon, as in: -H \"Host:\". If you send the custom header with no-\n"
 "              value then its header must be terminated with a semicolon,  such\n"
 "              as -H \"X-Custom-Header;\" to send \"X-Custom-Header:\".\n"
 "\n"
+"              curl  will  make  sure  that each header you add/replace is sent\n"
 , stdout);
  fputs(
-"              curl  will  make  sure  that each header you add/replace is sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
 "              See also the -A, --user-agent and -e, --referer options.\n"
 "\n"
 "              Starting in 7.37.0, you need --proxy-header to send custom head-\n"
 "              ers intended for a proxy.\n"
 "\n"
-, stdout);
- fputs(
 "              Example:\n"
 "\n"
+, stdout);
+ fputs(
 "              # curl -H \"X-First-Name: Joe\" http://example.com/\n"
 "\n"
 "              WARNING:  headers  set  with  this  option  will  be  set in all\n"
 "              requests - even after redirects are  followed,  like  when  told\n"
 "              with  -L,  --location. This can lead to the header being sent to\n"
 "              other hosts than the original host, so sensitive headers  should\n"
@@ -2731,559 +2735,564 @@
 "              http_connect   The numerical code that was  found  in  the  last\n"
 "                             response   (from  a  proxy)  to  a  curl  CONNECT\n"
 "                             request. (Added in 7.12.4)\n"
 "\n"
 , stdout);
  fputs(
-"              local_ip       The IP address of  the  local  end  of  the  most\n"
-"                             recently  done connection - can be either IPv4 or\n"
+"              http_version   The  http  version  that  was  effectively  used.\n"
+"                             (Added in 7.50.0)\n"
+"\n"
+"              local_ip       The  IP  address  of  the  local  end of the most\n"
+"                             recently done connection - can be either IPv4  or\n"
 "                             IPv6 (Added in 7.29.0)\n"
 "\n"
-"              local_port     The local port number of the most  recently  done\n"
+"              local_port     The  local  port number of the most recently done\n"
 "                             connection (Added in 7.29.0)\n"
 "\n"
-"              num_connects   Number  of new connects made in the recent trans-\n"
-"                             fer. (Added in 7.12.3)\n"
-"\n"
 , stdout);
  fputs(
-"              num_redirects  Number of redirects that  were  followed  in  the\n"
+"              num_connects   Number of new connects made in the recent  trans-\n"
+"                             fer. (Added in 7.12.3)\n"
+"\n"
+"              num_redirects  Number  of  redirects  that  were followed in the\n"
 "                             request. (Added in 7.12.3)\n"
 "\n"
-"              redirect_url   When  an HTTP request was made without -L to fol-\n"
+"              redirect_url   When an HTTP request was made without -L to  fol-\n"
 "                             low redirects, this variable will show the actual\n"
-"                             URL  a  redirect  would  take  you  to. (Added in\n"
-"                             7.18.2)\n"
-"\n"
-"              remote_ip      The remote IP address of the most  recently  done\n"
 , stdout);
  fputs(
+"                             URL a redirect  would  take  you  to.  (Added  in\n"
+"                             7.18.2)\n"
+"\n"
+"              remote_ip      The  remote  IP address of the most recently done\n"
 "                             connection - can be either IPv4 or IPv6 (Added in\n"
 "                             7.29.0)\n"
 "\n"
-"              remote_port    The remote port number of the most recently  done\n"
+"              remote_port    The  remote port number of the most recently done\n"
 "                             connection (Added in 7.29.0)\n"
 "\n"
+, stdout);
+ fputs(
 "              size_download  The total amount of bytes that were downloaded.\n"
 "\n"
 "              size_header    The total amount of bytes of the downloaded head-\n"
 "                             ers.\n"
 "\n"
-, stdout);
- fputs(
-"              size_request   The total amount of bytes that were sent  in  the\n"
+"              size_request   The  total  amount of bytes that were sent in the\n"
 "                             HTTP request.\n"
 "\n"
 "              size_upload    The total amount of bytes that were uploaded.\n"
 "\n"
 "              speed_download The average download speed that curl measured for\n"
+, stdout);
+ fputs(
 "                             the complete download. Bytes per second.\n"
 "\n"
-"              speed_upload   The average upload speed that curl  measured  for\n"
+"              speed_upload   The  average  upload speed that curl measured for\n"
 "                             the complete upload. Bytes per second.\n"
 "\n"
-, stdout);
- fputs(
 "              ssl_verify_result\n"
-"                             The  result of the SSL peer certificate verifica-\n"
+"                             The result of the SSL peer certificate  verifica-\n"
 "                             tion that was requested. 0 means the verification\n"
 "                             was successful. (Added in 7.19.0)\n"
 "\n"
-"              time_appconnect\n"
-"                             The  time,  in  seconds,  it  took from the start\n"
-"                             until the SSL/SSH/etc  connect/handshake  to  the\n"
 , stdout);
  fputs(
+"              time_appconnect\n"
+"                             The time, in seconds,  it  took  from  the  start\n"
+"                             until  the  SSL/SSH/etc  connect/handshake to the\n"
 "                             remote host was completed. (Added in 7.19.0)\n"
 "\n"
-"              time_connect   The  time,  in  seconds,  it  took from the start\n"
-"                             until the TCP connect  to  the  remote  host  (or\n"
+"              time_connect   The time, in seconds,  it  took  from  the  start\n"
+"                             until  the  TCP  connect  to  the remote host (or\n"
 "                             proxy) was completed.\n"
 "\n"
+, stdout);
+ fputs(
 "              time_namelookup\n"
-"                             The  time,  in  seconds,  it  took from the start\n"
+"                             The time, in seconds,  it  took  from  the  start\n"
 "                             until the name resolving was completed.\n"
 "\n"
 "              time_pretransfer\n"
+"                             The  time,  in  seconds,  it  took from the start\n"
+"                             until the file transfer was just about to  begin.\n"
+"                             This includes all pre-transfer commands and nego-\n"
 , stdout);
  fputs(
-"                             The time, in seconds,  it  took  from  the  start\n"
-"                             until  the file transfer was just about to begin.\n"
-"                             This includes all pre-transfer commands and nego-\n"
 "                             tiations that are specific to the particular pro-\n"
 "                             tocol(s) involved.\n"
 "\n"
 "              time_redirect  The time, in seconds, it took for all redirection\n"
+"                             steps include name lookup,  connect,  pretransfer\n"
+"                             and  transfer  before  the  final transaction was\n"
+"                             started. time_redirect shows the complete  execu-\n"
 , stdout);
  fputs(
-"                             steps  include  name lookup, connect, pretransfer\n"
-"                             and transfer before  the  final  transaction  was\n"
-"                             started.  time_redirect shows the complete execu-\n"
-"                             tion time for multiple  redirections.  (Added  in\n"
+"                             tion  time  for  multiple redirections. (Added in\n"
 "                             7.12.3)\n"
 "\n"
 "              time_starttransfer\n"
-"                             The  time,  in  seconds,  it  took from the start\n"
+"                             The time, in seconds,  it  took  from  the  start\n"
+"                             until  the first byte was just about to be trans-\n"
+"                             ferred. This includes time_pretransfer  and  also\n"
+"                             the  time  the  server  needed  to  calculate the\n"
 , stdout);
  fputs(
-"                             until the first byte was just about to be  trans-\n"
-"                             ferred.  This  includes time_pretransfer and also\n"
-"                             the time  the  server  needed  to  calculate  the\n"
 "                             result.\n"
 "\n"
-"              time_total     The  total time, in seconds, that the full opera-\n"
+"              time_total     The total time, in seconds, that the full  opera-\n"
 "                             tion lasted. The time will be displayed with mil-\n"
 "                             lisecond resolution.\n"
 "\n"
-, stdout);
- fputs(
 "              url_effective  The URL that was fetched last. This is most mean-\n"
-"                             ingful if you've told curl  to  follow  location:\n"
+"                             ingful  if  you've  told curl to follow location:\n"
 "                             headers.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -x, --proxy <[protocol://][user:password@]proxyhost[:port]>\n"
 "              Use the specified proxy.\n"
 "\n"
-"              The  proxy  string can be specified with a protocol:// prefix to\n"
+"              The proxy string can be specified with a protocol://  prefix  to\n"
+"              specify  alternative proxy protocols. Use socks4://, socks4a://,\n"
+"              socks5:// or socks5h:// to request the specific SOCKS version to\n"
 , stdout);
  fputs(
-"              specify alternative proxy protocols. Use socks4://,  socks4a://,\n"
-"              socks5:// or socks5h:// to request the specific SOCKS version to\n"
-"              be used. No protocol specified, http:// and all others  will  be\n"
+"              be  used.  No protocol specified, http:// and all others will be\n"
 "              treated as HTTP proxies. (The protocol support was added in curl\n"
 "              7.21.7)\n"
 "\n"
-"              If the port number is not specified in the proxy string,  it  is\n"
+"              If  the  port number is not specified in the proxy string, it is\n"
 "              assumed to be 1080.\n"
 "\n"
+"              This option overrides existing environment  variables  that  set\n"
+"              the  proxy  to use. If there's an environment variable setting a\n"
 , stdout);
  fputs(
-"              This  option  overrides  existing environment variables that set\n"
-"              the proxy to use. If there's an environment variable  setting  a\n"
 "              proxy, you can set proxy to \"\" to override it.\n"
 "\n"
 "              All operations that are performed over an HTTP proxy will trans-\n"
-"              parently be converted to HTTP. It means  that  certain  protocol\n"
+"              parently  be  converted  to HTTP. It means that certain protocol\n"
 "              specific operations might not be available. This is not the case\n"
-, stdout);
- fputs(
 "              if you can tunnel through the proxy, as one with the -p, --prox-\n"
 "              ytunnel option.\n"
 "\n"
 "              User and password that might be provided in the proxy string are\n"
-"              URL decoded by curl. This allows you to pass in special  charac-\n"
-"              ters such as @ by using %40 or pass in a colon with %3a.\n"
-"\n"
-"              The  proxy host can be specified the exact same way as the proxy\n"
-"              environment variables, including the protocol  prefix  (http://)\n"
 , stdout);
  fputs(
+"              URL  decoded by curl. This allows you to pass in special charac-\n"
+"              ters such as @ by using %40 or pass in a colon with %3a.\n"
+"\n"
+"              The proxy host can be specified the exact same way as the  proxy\n"
+"              environment  variables,  including the protocol prefix (http://)\n"
 "              and the embedded user + password.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -X, --request <command>\n"
-"              (HTTP) Specifies a custom request method to use when communicat-\n"
-"              ing with the HTTP server.  The specified request method will  be\n"
-"              used  instead  of  the  method otherwise used (which defaults to\n"
-"              GET). Read the HTTP 1.1 specification for details  and  explana-\n"
 , stdout);
  fputs(
-"              tions.  Common  additional HTTP requests include PUT and DELETE,\n"
+"              (HTTP) Specifies a custom request method to use when communicat-\n"
+"              ing  with the HTTP server.  The specified request method will be\n"
+"              used instead of the method otherwise  used  (which  defaults  to\n"
+"              GET).  Read  the HTTP 1.1 specification for details and explana-\n"
+"              tions. Common additional HTTP requests include PUT  and  DELETE,\n"
 "              but related technologies like WebDAV offers PROPFIND, COPY, MOVE\n"
 "              and more.\n"
 "\n"
-"              Normally  you  don't  need  this option. All sorts of GET, HEAD,\n"
+, stdout);
+ fputs(
+"              Normally you don't need this option. All  sorts  of  GET,  HEAD,\n"
 "              POST and PUT requests are rather invoked by using dedicated com-\n"
 "              mand line options.\n"
 "\n"
-"              This  option  only  changes  the  actual  word  used in the HTTP\n"
-, stdout);
- fputs(
-"              request, it does not alter the way curl behaves. So for  example\n"
-"              if  you  want  to make a proper HEAD request, using -X HEAD will\n"
+"              This option only changes  the  actual  word  used  in  the  HTTP\n"
+"              request,  it does not alter the way curl behaves. So for example\n"
+"              if you want to make a proper HEAD request, using  -X  HEAD  will\n"
 "              not suffice. You need to use the -I, --head option.\n"
 "\n"
-"              The method string you set with -X will be used for all requests,\n"
-"              which if you for example use -L, --location may cause unintended\n"
-"              side-effects when curl doesn't change request  method  according\n"
 , stdout);
  fputs(
+"              The method string you set with -X will be used for all requests,\n"
+"              which if you for example use -L, --location may cause unintended\n"
+"              side-effects  when  curl doesn't change request method according\n"
 "              to the HTTP 30x response codes - and similar.\n"
 "\n"
 "              (FTP) Specifies a custom FTP command to use instead of LIST when\n"
 "              doing file lists with FTP.\n"
 "\n"
 "              (POP3) Specifies a custom POP3 command to use instead of LIST or\n"
+, stdout);
+ fputs(
 "              RETR. (Added in 7.26.0)\n"
 "\n"
-"              (IMAP)  Specifies  a custom IMAP command to use instead of LIST.\n"
+"              (IMAP) Specifies a custom IMAP command to use instead  of  LIST.\n"
 "              (Added in 7.30.0)\n"
 "\n"
 "              (SMTP) Specifies a custom SMTP command to use instead of HELP or\n"
-, stdout);
- fputs(
 "              VRFY. (Added in 7.34.0)\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --xattr\n"
-"              When  saving  output  to a file, this option tells curl to store\n"
-"              certain file metadata in extended  file  attributes.  Currently,\n"
-"              the URL is stored in the xdg.origin.url attribute and, for HTTP,\n"
-"              the content type is stored in the mime_type  attribute.  If  the\n"
+"              When saving output to a file, this option tells  curl  to  store\n"
 , stdout);
  fputs(
-"              file  system  does not support extended attributes, a warning is\n"
+"              certain  file  metadata  in extended file attributes. Currently,\n"
+"              the URL is stored in the xdg.origin.url attribute and, for HTTP,\n"
+"              the  content  type  is stored in the mime_type attribute. If the\n"
+"              file system does not support extended attributes, a  warning  is\n"
 "              issued.\n"
 "\n"
 "       -y, --speed-time <time>\n"
 "              If a download is slower than speed-limit bytes per second during\n"
+, stdout);
+ fputs(
 "              a speed-time period, the download gets aborted. If speed-time is\n"
 "              used, the default speed-limit will be 1 unless set with -Y.\n"
 "\n"
-"              This option controls transfers and thus  will  not  affect  slow\n"
-, stdout);
- fputs(
-"              connects  etc.  If this is a concern for you, try the --connect-\n"
+"              This  option  controls  transfers  and thus will not affect slow\n"
+"              connects etc. If this is a concern for you, try  the  --connect-\n"
 "              timeout option.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -Y, --speed-limit <speed>\n"
+, stdout);
+ fputs(
 "              If a download is slower than this given speed (in bytes per sec-\n"
-"              ond)  for  speed-time seconds it gets aborted. speed-time is set\n"
+"              ond) for speed-time seconds it gets aborted. speed-time  is  set\n"
 "              with -y and is 30 if not set.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -z, --time-cond <date expression>|<file>\n"
-"              (HTTP/FTP) Request a file that has been modified later than  the\n"
-"              given  time  and date, or one that has been modified before that\n"
-"              time. The <date expression> can be all sorts of date strings  or\n"
-"              if it doesn't match any internal ones, it is taken as a filename\n"
+"              (HTTP/FTP)  Request a file that has been modified later than the\n"
+"              given time and date, or one that has been modified  before  that\n"
 , stdout);
  fputs(
-"              and tries to get  the  modification  date  (mtime)  from  <file>\n"
-"              instead.  See  the curl_getdate(3) man pages for date expression\n"
+"              time.  The <date expression> can be all sorts of date strings or\n"
+"              if it doesn't match any internal ones, it is taken as a filename\n"
+"              and  tries  to  get  the  modification  date (mtime) from <file>\n"
+"              instead. See the curl_getdate(3) man pages for  date  expression\n"
 "              details.\n"
 "\n"
 "              Start the date expression with a dash (-) to make it request for\n"
-"              a  document that is older than the given date/time, default is a\n"
+"              a document that is older than the given date/time, default is  a\n"
+, stdout);
+ fputs(
 "              document that is newer than the specified date/time.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-, stdout);
- fputs(
 "       -h, --help\n"
-"              Usage help. This lists all current command line options  with  a\n"
+"              Usage  help.  This lists all current command line options with a\n"
 "              short description.\n"
 "\n"
 "       -M, --manual\n"
 "              Manual. Display the huge help text.\n"
 "\n"
 "       -V, --version\n"
 "              Displays information about curl and the libcurl version it uses.\n"
-"              The  first  line  includes the full version of curl, libcurl and\n"
-"              other 3rd party libraries linked with the executable.\n"
-"\n"
 , stdout);
  fputs(
-"              The second line (starts with \"Protocols:\") shows  all  protocols\n"
+"              The first line includes the full version of  curl,  libcurl  and\n"
+"              other 3rd party libraries linked with the executable.\n"
+"\n"
+"              The  second  line (starts with \"Protocols:\") shows all protocols\n"
 "              that libcurl reports to support.\n"
 "\n"
 "              The third line (starts with \"Features:\") shows specific features\n"
 "              libcurl reports to offer. Available features include:\n"
 "\n"
 "              IPv6   You can use IPv6 with this.\n"
 "\n"
-"              krb4   Krb4 for FTP is supported.\n"
-"\n"
-"              SSL    SSL versions of various protocols are supported, such  as\n"
 , stdout);
  fputs(
+"              krb4   Krb4 for FTP is supported.\n"
+"\n"
+"              SSL    SSL  versions of various protocols are supported, such as\n"
 "                     HTTPS, FTPS, POP3S and so on.\n"
 "\n"
-"              libz   Automatic  decompression of compressed files over HTTP is\n"
+"              libz   Automatic decompression of compressed files over HTTP  is\n"
 "                     supported.\n"
 "\n"
 "              NTLM   NTLM authentication is supported.\n"
 "\n"
-"              Debug  This curl uses a libcurl built with Debug.  This  enables\n"
-"                     more  error-tracking  and memory debugging etc. For curl-\n"
+"              Debug  This  curl  uses a libcurl built with Debug. This enables\n"
+, stdout);
+ fputs(
+"                     more error-tracking and memory debugging etc.  For  curl-\n"
 "                     developers only!\n"
 "\n"
 "              AsynchDNS\n"
-, stdout);
- fputs(
-"                     This curl uses asynchronous name  resolves.  Asynchronous\n"
-"                     name  resolves can be done using either the c-ares or the\n"
+"                     This  curl  uses asynchronous name resolves. Asynchronous\n"
+"                     name resolves can be done using either the c-ares or  the\n"
 "                     threaded resolver backends.\n"
 "\n"
 "              SPNEGO SPNEGO authentication is supported.\n"
 "\n"
 "              Largefile\n"
+, stdout);
+ fputs(
 "                     This curl supports transfers of large files, files larger\n"
 "                     than 2GB.\n"
 "\n"
 "              IDN    This curl supports IDN - international domain names.\n"
 "\n"
 "              GSS-API\n"
-, stdout);
- fputs(
 "                     GSS-API is supported.\n"
 "\n"
 "              SSPI   SSPI is supported.\n"
 "\n"
 "              TLS-SRP\n"
-"                     SRP  (Secure Remote Password) authentication is supported\n"
+"                     SRP (Secure Remote Password) authentication is  supported\n"
 "                     for TLS.\n"
 "\n"
 "              HTTP2  HTTP/2 support has been built-in.\n"
 "\n"
-"              Metalink\n"
-"                     This curl supports Metalink (both version 3  and  4  (RFC\n"
-"                     5854)),  which  describes  mirrors and hashes.  curl will\n"
 , stdout);
  fputs(
+"              Metalink\n"
+"                     This  curl  supports  Metalink (both version 3 and 4 (RFC\n"
+"                     5854)), which describes mirrors and  hashes.   curl  will\n"
 "                     use mirrors for failover if there are errors (such as the\n"
 "                     file or server not being available).\n"
 "\n"
 "FILES\n"
 "       ~/.curlrc\n"
 "              Default config file, see -K, --config for details.\n"
 "\n"
 "ENVIRONMENT\n"
 "       The environment variables can be specified in lower case or upper case.\n"
+, stdout);
+ fputs(
 "       The lower case version has precedence. http_proxy is an exception as it\n"
 "       is only available in lower case.\n"
 "\n"
-, stdout);
- fputs(
-"       Using  an  environment variable to set the proxy has the same effect as\n"
+"       Using an environment variable to set the proxy has the same  effect  as\n"
 "       using the --proxy option.\n"
 "\n"
 "       http_proxy [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for HTTP.\n"
 "       HTTPS_PROXY [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for HTTPS.\n"
 "\n"
 "       [url-protocol]_PROXY [protocol://]<host>[:port]\n"
-"              Sets the proxy server to use for [url-protocol], where the  pro-\n"
 , stdout);
  fputs(
-"              tocol  is  a  protocol  that curl supports and as specified in a\n"
+"              Sets  the proxy server to use for [url-protocol], where the pro-\n"
+"              tocol is a protocol that curl supports and  as  specified  in  a\n"
 "              URL. FTP, FTPS, POP3, IMAP, SMTP, LDAP etc.\n"
 "\n"
 "       ALL_PROXY [protocol://]<host>[:port]\n"
-"              Sets the proxy server to use if no  protocol-specific  proxy  is\n"
+"              Sets  the  proxy  server to use if no protocol-specific proxy is\n"
 "              set.\n"
 "\n"
 "       NO_PROXY <comma-separated list of hosts>\n"
-"              list  of  host names that shouldn't go through any proxy. If set\n"
+"              list of host names that shouldn't go through any proxy.  If  set\n"
+, stdout);
+ fputs(
 "              to a asterisk '*' only, it matches all hosts.\n"
 "\n"
 "PROXY PROTOCOL PREFIXES\n"
-, stdout);
- fputs(
-"       Since curl version 7.21.7, the proxy string may  be  specified  with  a\n"
+"       Since  curl  version  7.21.7,  the proxy string may be specified with a\n"
 "       protocol:// prefix to specify alternative proxy protocols.\n"
 "\n"
-"       If  no  protocol  is  specified  in  the  proxy string or if the string\n"
-"       doesn't match a supported one, the proxy will be  treated  as  an  HTTP\n"
+"       If no protocol is specified in  the  proxy  string  or  if  the  string\n"
+"       doesn't  match  a  supported  one, the proxy will be treated as an HTTP\n"
 "       proxy.\n"
 "\n"
 "       The supported proxy protocol prefixes are as follows:\n"
 "\n"
 "       socks4://\n"
+, stdout);
+ fputs(
 "              Makes it the equivalent of --socks4\n"
 "\n"
 "       socks4a://\n"
-, stdout);
- fputs(
 "              Makes it the equivalent of --socks4a\n"
 "\n"
 "       socks5://\n"
 "              Makes it the equivalent of --socks5\n"
 "\n"
 "       socks5h://\n"
 "              Makes it the equivalent of --socks5-hostname\n"
 "\n"
 "EXIT CODES\n"
-"       There  are  a  bunch  of  different error codes and their corresponding\n"
-"       error messages that may appear during bad conditions. At  the  time  of\n"
+"       There are a bunch of different  error  codes  and  their  corresponding\n"
+"       error  messages  that  may appear during bad conditions. At the time of\n"
 "       this writing, the exit codes are:\n"
 "\n"
-"       1      Unsupported protocol. This build of curl has no support for this\n"
 , stdout);
  fputs(
+"       1      Unsupported protocol. This build of curl has no support for this\n"
 "              protocol.\n"
 "\n"
 "       2      Failed to initialize.\n"
 "\n"
 "       3      URL malformed. The syntax was not correct.\n"
 "\n"
-"       4      A feature or option that  was  needed  to  perform  the  desired\n"
-"              request  was  not  enabled  or was explicitly disabled at build-\n"
-"              time. To make curl able to do this, you  probably  need  another\n"
+"       4      A  feature  or  option  that  was  needed to perform the desired\n"
+"              request was not enabled or was  explicitly  disabled  at  build-\n"
+"              time.  To  make  curl able to do this, you probably need another\n"
 "              build of libcurl!\n"
 "\n"
-"       5      Couldn't  resolve  proxy.  The  given  proxy  host  could not be\n"
-"              resolved.\n"
-"\n"
 , stdout);
  fputs(
+"       5      Couldn't resolve proxy.  The  given  proxy  host  could  not  be\n"
+"              resolved.\n"
+"\n"
 "       6      Couldn't resolve host. The given remote host was not resolved.\n"
 "\n"
 "       7      Failed to connect to host.\n"
 "\n"
-"       8      FTP weird server reply.  The  server  sent  data  curl  couldn't\n"
+"       8      FTP  weird  server  reply.  The  server  sent data curl couldn't\n"
 "              parse.\n"
 "\n"
-"       9      FTP  access  denied. The server denied login or denied access to\n"
-"              the particular resource or directory you wanted to  reach.  Most\n"
-"              often  you  tried to change to a directory that doesn't exist on\n"
-"              the server.\n"
-"\n"
+"       9      FTP access denied. The server denied login or denied  access  to\n"
+"              the  particular  resource or directory you wanted to reach. Most\n"
 , stdout);
  fputs(
-"       11     FTP weird PASS reply. Curl couldn't parse the reply sent to  the\n"
+"              often you tried to change to a directory that doesn't  exist  on\n"
+"              the server.\n"
+"\n"
+"       11     FTP  weird PASS reply. Curl couldn't parse the reply sent to the\n"
 "              PASS request.\n"
 "\n"
-"       13     FTP  weird PASV reply, Curl couldn't parse the reply sent to the\n"
+"       13     FTP weird PASV reply, Curl couldn't parse the reply sent to  the\n"
 "              PASV request.\n"
 "\n"
-"       14     FTP weird 227 format.  Curl  couldn't  parse  the  227-line  the\n"
+"       14     FTP  weird  227  format.  Curl  couldn't  parse the 227-line the\n"
 "              server sent.\n"
 "\n"
-"       15     FTP  can't  get host. Couldn't resolve the host IP we got in the\n"
-"              227-line.\n"
-"\n"
 , stdout);
  fputs(
-"       17     FTP couldn't set binary.  Couldn't  change  transfer  method  to\n"
+"       15     FTP can't get host. Couldn't resolve the host IP we got  in  the\n"
+"              227-line.\n"
+"\n"
+"       17     FTP  couldn't  set  binary.  Couldn't  change transfer method to\n"
 "              binary.\n"
 "\n"
 "       18     Partial file. Only a part of the file was transferred.\n"
 "\n"
-"       19     FTP  couldn't download/access the given file, the RETR (or simi-\n"
+"       19     FTP couldn't download/access the given file, the RETR (or  simi-\n"
 "              lar) command failed.\n"
 "\n"
 "       21     FTP quote error. A quote command returned error from the server.\n"
-"       22     HTTP page not retrieved. The requested  url  was  not  found  or\n"
 , stdout);
  fputs(
-"              returned  another  error  with  the HTTP error code being 400 or\n"
+"       22     HTTP  page  not  retrieved.  The  requested url was not found or\n"
+"              returned another error with the HTTP error  code  being  400  or\n"
 "              above. This return code only appears if -f, --fail is used.\n"
 "\n"
-"       23     Write error. Curl couldn't write data to a local  filesystem  or\n"
+"       23     Write  error.  Curl couldn't write data to a local filesystem or\n"
 "              similar.\n"
 "\n"
-"       25     FTP  couldn't  STOR  file. The server denied the STOR operation,\n"
+"       25     FTP couldn't STOR file. The server denied  the  STOR  operation,\n"
 "              used for FTP uploading.\n"
 "\n"
+, stdout);
+ fputs(
 "       26     Read error. Various reading problems.\n"
 "\n"
 "       27     Out of memory. A memory allocation request failed.\n"
 "\n"
-, stdout);
- fputs(
-"       28     Operation timeout. The specified  time-out  period  was  reached\n"
+"       28     Operation  timeout.  The  specified  time-out period was reached\n"
 "              according to the conditions.\n"
 "\n"
-"       30     FTP  PORT  failed.  The PORT command failed. Not all FTP servers\n"
-"              support the PORT  command,  try  doing  a  transfer  using  PASV\n"
+"       30     FTP PORT failed. The PORT command failed. Not  all  FTP  servers\n"
+"              support  the  PORT  command,  try  doing  a  transfer using PASV\n"
 "              instead!\n"
 "\n"
-"       31     FTP  couldn't use REST. The REST command failed. This command is\n"
+, stdout);
+ fputs(
+"       31     FTP couldn't use REST. The REST command failed. This command  is\n"
 "              used for resumed FTP transfers.\n"
 "\n"
 "       33     HTTP range error. The range \"command\" didn't work.\n"
 "\n"
-, stdout);
- fputs(
 "       34     HTTP post error. Internal post-request generation error.\n"
 "\n"
 "       35     SSL connect error. The SSL handshaking failed.\n"
 "\n"
-"       36     FTP bad download resume. Couldn't continue  an  earlier  aborted\n"
+"       36     FTP  bad  download  resume. Couldn't continue an earlier aborted\n"
 "              download.\n"
 "\n"
+, stdout);
+ fputs(
 "       37     FILE couldn't read file. Failed to open the file. Permissions?\n"
 "\n"
 "       38     LDAP cannot bind. LDAP bind operation failed.\n"
 "\n"
 "       39     LDAP search failed.\n"
 "\n"
 "       41     Function not found. A required LDAP function was not found.\n"
 "\n"
-, stdout);
- fputs(
 "       42     Aborted by callback. An application told curl to abort the oper-\n"
 "              ation.\n"
 "\n"
 "       43     Internal error. A function was called with a bad parameter.\n"
 "\n"
-"       45     Interface error. A specified outgoing  interface  could  not  be\n"
+, stdout);
+ fputs(
+"       45     Interface  error.  A  specified  outgoing interface could not be\n"
 "              used.\n"
 "\n"
 "       47     Too many redirects. When following redirects, curl hit the maxi-\n"
 "              mum amount.\n"
 "\n"
-"       48     Unknown option specified to libcurl.  This  indicates  that  you\n"
-, stdout);
- fputs(
-"              passed  a weird option to curl that was passed on to libcurl and\n"
+"       48     Unknown  option  specified  to  libcurl. This indicates that you\n"
+"              passed a weird option to curl that was passed on to libcurl  and\n"
 "              rejected. Read up in the manual!\n"
 "\n"
 "       49     Malformed telnet option.\n"
 "\n"
+, stdout);
+ fputs(
 "       51     The peer's SSL certificate or SSH MD5 fingerprint was not OK.\n"
 "\n"
-"       52     The server didn't reply anything, which here  is  considered  an\n"
+"       52     The  server  didn't  reply anything, which here is considered an\n"
 "              error.\n"
 "\n"
 "       53     SSL crypto engine not found.\n"
 "\n"
 "       54     Cannot set SSL crypto engine as default.\n"
 "\n"
 "       55     Failed sending network data.\n"
 "\n"
-, stdout);
- fputs(
 "       56     Failure in receiving network data.\n"
 "\n"
 "       58     Problem with the local certificate.\n"
 "\n"
 "       59     Couldn't use specified SSL cipher.\n"
 "\n"
-"       60     Peer  certificate cannot be authenticated with known CA certifi-\n"
+, stdout);
+ fputs(
+"       60     Peer certificate cannot be authenticated with known CA  certifi-\n"
 "              cates.\n"
 "\n"
 "       61     Unrecognized transfer encoding.\n"
 "\n"
 "       62     Invalid LDAP URL.\n"
 "\n"
 "       63     Maximum file size exceeded.\n"
 "\n"
 "       64     Requested FTP SSL level failed.\n"
 "\n"
 "       65     Sending the data requires a rewind that failed.\n"
 "\n"
-, stdout);
- fputs(
 "       66     Failed to initialise SSL Engine.\n"
 "\n"
-"       67     The user name, password, or similar was not  accepted  and  curl\n"
+"       67     The  user  name,  password, or similar was not accepted and curl\n"
 "              failed to log in.\n"
 "\n"
+, stdout);
+ fputs(
 "       68     File not found on TFTP server.\n"
 "\n"
 "       69     Permission problem on TFTP server.\n"
 "\n"
 "       70     Out of disk space on TFTP server.\n"
 "\n"
@@ -3292,54 +3301,54 @@
 "       72     Unknown TFTP transfer ID.\n"
 "\n"
 "       73     File already exists (TFTP).\n"
 "\n"
 "       74     No such user (TFTP).\n"
 "\n"
-, stdout);
- fputs(
 "       75     Character conversion failed.\n"
 "\n"
 "       76     Character conversion functions required.\n"
 "\n"
 "       77     Problem with reading the SSL CA cert (path? access rights?).\n"
 "\n"
+, stdout);
+ fputs(
 "       78     The resource referenced in the URL does not exist.\n"
 "\n"
 "       79     An unspecified error occurred during the SSH session.\n"
 "\n"
 "       80     Failed to shut down the SSL connection.\n"
 "\n"
-"       82     Could  not  load  CRL  file,  missing  or wrong format (added in\n"
+"       82     Could not load CRL file,  missing  or  wrong  format  (added  in\n"
 "              7.19.0).\n"
 "\n"
-, stdout);
- fputs(
 "       83     Issuer check failed (added in 7.19.0).\n"
 "\n"
 "       84     The FTP PRET command failed\n"
 "\n"
 "       85     RTSP: mismatch of CSeq numbers\n"
 "\n"
 "       86     RTSP: mismatch of Session Identifiers\n"
 "\n"
+, stdout);
+ fputs(
 "       87     unable to parse FTP file list\n"
 "\n"
 "       88     FTP chunk callback reported error\n"
 "\n"
 "       89     No connection available, the session will be queued\n"
 "\n"
 "       90     SSL public key does not matched pinned public key\n"
 "\n"
-, stdout);
- fputs(
 "       XX     More error codes will appear here in future releases. The exist-\n"
 "              ing ones are meant to never change.\n"
 "\n"
 "AUTHORS / CONTRIBUTORS\n"
-"       Daniel  Stenberg is the main author, but the whole list of contributors\n"
+"       Daniel Stenberg is the main author, but the whole list of  contributors\n"
+, stdout);
+ fputs(
 "       is found in the separate THANKS file.\n"
 "\n"
 "WWW\n"
 "       https://curl.haxx.se\n"
 "\n"
 "FTP\n"
@@ -3348,227 +3357,227 @@
 "SEE ALSO\n"
 "       ftp(1), wget(1)\n"
 "\n"
 "LATEST VERSION\n"
 "\n"
 "  You always find news about what's going on as well as the latest versions\n"
-, stdout);
- fputs(
 "  from the curl web pages, located at:\n"
 "\n"
 "        https://curl.haxx.se\n"
 "\n"
 "SIMPLE USAGE\n"
 "\n"
 "  Get the main page from Netscape's web-server:\n"
 "\n"
 "        curl http://www.netscape.com/\n"
 "\n"
+, stdout);
+ fputs(
 "  Get the README file the user's home directory at funet's ftp-server:\n"
 "\n"
 "        curl ftp://ftp.funet.fi/README\n"
 "\n"
 "  Get a web page from a server using port 8000:\n"
 "\n"
 "        curl http://www.weirdserver.com:8000/\n"
 "\n"
 "  Get a directory listing of an FTP site:\n"
 "\n"
 "        curl ftp://cool.haxx.se/\n"
 "\n"
-, stdout);
- fputs(
 "  Get the definition of curl from a dictionary:\n"
 "\n"
 "        curl dict://dict.org/m:curl\n"
 "\n"
 "  Fetch two documents at once:\n"
 "\n"
 "        curl ftp://cool.haxx.se/ http://www.weirdserver.com:8000/\n"
 "\n"
+, stdout);
+ fputs(
 "  Get a file off an FTPS server:\n"
 "\n"
 "        curl ftps://files.are.secure.com/secrets.txt\n"
 "\n"
 "  or use the more appropriate FTPS way to get the same file:\n"
 "\n"
 "        curl --ftp-ssl ftp://files.are.secure.com/secrets.txt\n"
 "\n"
 "  Get a file from an SSH server using SFTP:\n"
 "\n"
 "        curl -u username sftp://example.com/etc/issue\n"
 "\n"
-, stdout);
- fputs(
 "  Get a file from an SSH server using SCP using a private key\n"
 "  (not password-protected) to authenticate:\n"
 "\n"
 "        curl -u username: --key ~/.ssh/id_rsa \\\n"
+, stdout);
+ fputs(
 "             scp://example.com/~/file.txt\n"
 "\n"
 "  Get a file from an SSH server using SCP using a private key\n"
 "  (password-protected) to authenticate:\n"
 "\n"
 "        curl -u username: --key ~/.ssh/id_rsa --pass private_key_password \\\n"
 "             scp://example.com/~/file.txt\n"
 "\n"
 "  Get the main page from an IPv6 web server:\n"
 "\n"
-, stdout);
- fputs(
 "        curl \"http://[2001:1890:1112:1::20]/\"\n"
 "\n"
 "  Get a file from an SMB server:\n"
 "\n"
 "        curl -u \"domain\\username:passwd\" smb://server.example.com/share/file.txt\n"
 "\n"
 "DOWNLOAD TO A FILE\n"
 "\n"
+, stdout);
+ fputs(
 "  Get a web page and store in a local file with a specific name:\n"
 "\n"
 "        curl -o thatpage.html http://www.netscape.com/\n"
 "\n"
 "  Get a web page and store in a local file, make the local file get the name\n"
 "  of the remote document (if no file name part is specified in the URL, this\n"
 "  will fail):\n"
 "\n"
-, stdout);
- fputs(
 "        curl -O http://www.netscape.com/index.html\n"
 "\n"
 "  Fetch two files and store them with their remote names:\n"
 "\n"
 "        curl -O www.haxx.se/index.html -O curl.haxx.se/download.html\n"
 "\n"
 "USING PASSWORDS\n"
 "\n"
 " FTP\n"
 "\n"
+, stdout);
+ fputs(
 "   To ftp files using name+passwd, include them in the URL like:\n"
 "\n"
 "        curl ftp://name:passwd@machine.domain:port/full/path/to/file\n"
 "\n"
 "   or specify them with the -u flag like\n"
 "\n"
 "        curl -u name:passwd ftp://machine.domain:port/full/path/to/file\n"
 "\n"
 " FTPS\n"
 "\n"
-, stdout);
- fputs(
 "   It is just like for FTP, but you may also want to specify and use\n"
 "   SSL-specific options for certificates etc.\n"
 "\n"
 "   Note that using FTPS:// as prefix is the \"implicit\" way as described in the\n"
+, stdout);
+ fputs(
 "   standards while the recommended \"explicit\" way is done by using FTP:// and\n"
 "   the --ftp-ssl option.\n"
 "\n"
 " SFTP / SCP\n"
 "\n"
 "   This is similar to FTP, but you can use the --key option to specify a\n"
 "   private key to use instead of a password. Note that the private key may\n"
-, stdout);
- fputs(
 "   itself be protected by a password that is unrelated to the login password\n"
 "   of the remote system; this password is specified using the --pass option.\n"
 "   Typically, curl will automatically extract the public key from the private\n"
+, stdout);
+ fputs(
 "   key file, but in cases where curl does not have the proper library support,\n"
 "   a matching public key file must be specified using the --pubkey option.\n"
 "\n"
 " HTTP\n"
 "\n"
 "   Curl also supports user and password in HTTP URLs, thus you can pick a file\n"
 "   like:\n"
 "\n"
-, stdout);
- fputs(
 "        curl http://name:passwd@machine.domain/full/path/to/file\n"
 "\n"
 "   or specify user and password separately like in\n"
 "\n"
 "        curl -u name:passwd http://machine.domain/full/path/to/file\n"
 "\n"
+, stdout);
+ fputs(
 "   HTTP offers many different methods of authentication and curl supports\n"
 "   several: Basic, Digest, NTLM and Negotiate (SPNEGO). Without telling which\n"
 "   method to use, curl defaults to Basic. You can also ask curl to pick the\n"
 "   most secure ones out of the ones that the server accepts for the given URL,\n"
-, stdout);
- fputs(
 "   by using --anyauth.\n"
 "\n"
 "   NOTE! According to the URL specification, HTTP URLs can not contain a user\n"
 "   and password, so that style will not work when using curl via a proxy, even\n"
+, stdout);
+ fputs(
 "   though curl allows it at other times. When using a proxy, you _must_ use\n"
 "   the -u style for user and password.\n"
 "\n"
 " HTTPS\n"
 "\n"
 "   Probably most commonly used with private certificates, as explained below.\n"
 "\n"
 "PROXY\n"
 "\n"
 " curl supports both HTTP and SOCKS proxy servers, with optional authentication.\n"
-, stdout);
- fputs(
 " It does not have special support for FTP proxy servers since there are no\n"
 " standards for those, but it can still be made to work with many of them. You\n"
+, stdout);
+ fputs(
 " can also use both HTTP and SOCKS proxies to transfer files to and from FTP\n"
 " servers.\n"
 "\n"
 " Get an ftp file using an HTTP proxy named my-proxy that uses port 888:\n"
 "\n"
 "        curl -x my-proxy:888 ftp://ftp.leachsite.com/README\n"
 "\n"
 " Get a file from an HTTP server that requires user and password, using the\n"
 " same proxy as above:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -u user:passwd -x my-proxy:888 http://www.get.this/\n"
 "\n"
 " Some proxies require special authentication. Specify by using -U as above:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -U user:passwd -x my-proxy:888 http://www.get.this/\n"
 "\n"
 " A comma-separated list of hosts and domains which do not use the proxy can\n"
 " be specified as:\n"
 "\n"
 "        curl --noproxy localhost,get.this -x my-proxy:888 http://www.get.this/\n"
 "\n"
 " If the proxy is specified with --proxy1.0 instead of --proxy or -x, then\n"
-, stdout);
- fputs(
 " curl will use HTTP/1.0 instead of HTTP/1.1 for any CONNECT attempts.\n"
 "\n"
 " curl also supports SOCKS4 and SOCKS5 proxies with --socks4 and --socks5.\n"
 "\n"
+, stdout);
+ fputs(
 " See also the environment variables Curl supports that offer further proxy\n"
 " control.\n"
 "\n"
 " Most FTP proxy servers are set up to appear as a normal FTP server from the\n"
 " client's perspective, with special commands to select the remote FTP server.\n"
 " curl supports the -u, -Q and --ftp-account options that can be used to\n"
-, stdout);
- fputs(
 " set up transfers through many FTP proxies. For example, a file can be\n"
 " uploaded to a remote FTP server using a Blue Coat FTP proxy with the\n"
 " options:\n"
 "\n"
+, stdout);
+ fputs(
 "   curl -u \"Remote-FTP-Username@remote.ftp.server Proxy-Username:Remote-Pass\" \\\n"
 "    --ftp-account Proxy-Password --upload-file local-file \\\n"
 "    ftp://my-ftp.proxy.server:21/remote/upload/path/\n"
 "\n"
 " See the manual for your FTP proxy to determine the form it expects to set up\n"
 " transfers, and curl's -v option to see exactly what curl is sending.\n"
 "\n"
-, stdout);
- fputs(
 "RANGES\n"
 "\n"
 "  HTTP 1.1 introduced byte-ranges. Using this, a client can request\n"
 "  to get only one or more subparts of a specified document. Curl supports\n"
+, stdout);
+ fputs(
 "  this with the -r flag.\n"
 "\n"
 "  Get the first 100 bytes of a document:\n"
 "\n"
 "        curl -r 0-99 http://www.get.this/\n"
 "\n"
@@ -3576,73 +3585,73 @@
 "\n"
 "        curl -r -500 http://www.get.this/\n"
 "\n"
 "  Curl also supports simple ranges for FTP files as well. Then you can only\n"
 "  specify start and stop position.\n"
 "\n"
-, stdout);
- fputs(
 "  Get the first 100 bytes of a document using FTP:\n"
 "\n"
 "        curl -r 0-99 ftp://www.get.this/README\n"
 "\n"
 "UPLOADING\n"
 "\n"
 " FTP / FTPS / SFTP / SCP\n"
 "\n"
 "  Upload all data on stdin to a specified server:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -T - ftp://ftp.upload.com/myfile\n"
 "\n"
 "  Upload data from a specified file, login with user and password:\n"
 "\n"
 "        curl -T uploadfile -u user:passwd ftp://ftp.upload.com/myfile\n"
 "\n"
 "  Upload a local file to the remote site, and use the local file name at the remote\n"
 "  site too:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -T uploadfile -u user:passwd ftp://ftp.upload.com/\n"
 "\n"
 "  Upload a local file to get appended to the remote file:\n"
 "\n"
 "        curl -T localfile -a ftp://ftp.upload.com/remotefile\n"
 "\n"
+, stdout);
+ fputs(
 "  Curl also supports ftp upload through a proxy, but only if the proxy is\n"
 "  configured to allow that kind of tunneling. If it does, you can run curl in\n"
 "  a fashion similar to:\n"
 "\n"
 "        curl --proxytunnel -x proxy:port -T localfile ftp.upload.com\n"
 "\n"
 "SMB / SMBS\n"
 "\n"
 "        curl -T file.txt -u \"domain\\username:passwd\" \n"
-, stdout);
- fputs(
 "         smb://server.example.com/share/\n"
 "\n"
 " HTTP\n"
 "\n"
 "  Upload all data on stdin to a specified HTTP site:\n"
 "\n"
 "        curl -T - http://www.upload.com/myfile\n"
 "\n"
+, stdout);
+ fputs(
 "  Note that the HTTP server must have been configured to accept PUT before\n"
 "  this can be done successfully.\n"
 "\n"
 "  For other ways to do HTTP data upload, see the POST section below.\n"
 "\n"
 "VERBOSE / DEBUG\n"
 "\n"
 "  If curl fails where it isn't supposed to, if the servers don't let you in,\n"
 "  if you can't understand the responses: use the -v flag to get verbose\n"
-, stdout);
- fputs(
 "  fetching. Curl will output lots of info and what it sends and receives in\n"
 "  order to let the user see all client-server interaction (but it won't show\n"
+, stdout);
+ fputs(
 "  you the actual data).\n"
 "\n"
 "        curl -v ftp://ftp.upload.com/\n"
 "\n"
 "  To get even more details and information on what curl does, try using the\n"
 "  --trace or --trace-ascii options with a given file name to log to, like\n"
@@ -3650,468 +3659,468 @@
 "\n"
 "        curl --trace trace.txt www.haxx.se\n"
 "\n"
 "\n"
 "DETAILED INFORMATION\n"
 "\n"
-, stdout);
- fputs(
 "  Different protocols provide different ways of getting detailed information\n"
 "  about specific files/documents. To get curl to show detailed information\n"
+, stdout);
+ fputs(
 "  about a single file, you should use -I/--head option. It displays all\n"
 "  available info on a single file for HTTP and FTP. The HTTP information is a\n"
 "  lot more extensive.\n"
 "\n"
 "  For HTTP, you can get the header information (the same as -I would show)\n"
 "  shown before the data by using -i/--include. Curl understands the\n"
-, stdout);
- fputs(
 "  -D/--dump-header option when getting files from both FTP and HTTP, and it\n"
 "  will then store the headers in the specified file.\n"
 "\n"
+, stdout);
+ fputs(
 "  Store the HTTP headers in a separate file (headers.txt in the example):\n"
 "\n"
 "        curl --dump-header headers.txt curl.haxx.se\n"
 "\n"
 "  Note that headers stored in a separate file can be very useful at a later\n"
 "  time if you want curl to use cookies sent by the server. More about that in\n"
 "  the cookies section.\n"
 "\n"
 "POST (HTTP)\n"
 "\n"
-, stdout);
- fputs(
 "  It's easy to post data using curl. This is done using the -d <data>\n"
 "  option.  The post data must be urlencoded.\n"
 "\n"
 "  Post a simple \"name\" and \"phone\" guestbook.\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -d \"name=Rafael%20Sagula&phone=3320780\" \\\n"
 "                http://www.where.com/guest.cgi\n"
 "\n"
 "  How to post a form with curl, lesson #1:\n"
 "\n"
 "  Dig out all the <input> tags in the form that you want to fill in. (There's\n"
 "  a perl program called formfind.pl on the curl site that helps with this).\n"
 "\n"
-, stdout);
- fputs(
 "  If there's a \"normal\" post, you use -d to post. -d takes a full \"post\n"
 "  string\", which is in the format\n"
 "\n"
 "        <variable1>=<data1>&<variable2>=<data2>&...\n"
 "\n"
+, stdout);
+ fputs(
 "  The 'variable' names are the names set with \"name=\" in the <input> tags, and\n"
 "  the data is the contents you want to fill in for the inputs. The data *must*\n"
 "  be properly URL encoded. That means you replace space with + and that you\n"
 "  replace weird letters with %XX where XX is the hexadecimal representation of\n"
-, stdout);
- fputs(
 "  the letter's ASCII code.\n"
 "\n"
 "  Example:\n"
 "\n"
 "  (page located at http://www.formpost.com/getthis/\n"
 "\n"
 "        <form action=\"post.cgi\" method=\"post\">\n"
 "        <input name=user size=10>\n"
+, stdout);
+ fputs(
 "        <input name=pass type=password size=10>\n"
 "        <input name=id type=hidden value=\"blablabla\">\n"
 "        <input name=ding value=\"submit\">\n"
 "        </form>\n"
 "\n"
 "  We want to enter user 'foobar' with password '12345'.\n"
 "\n"
 "  To post to this, you enter a curl command line like:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -d \"user=foobar&pass=12345&id=blablabla&ding=submit\"  (continues)\n"
 "          http://www.formpost.com/getthis/post.cgi\n"
 "\n"
 "\n"
 "  While -d uses the application/x-www-form-urlencoded mime-type, generally\n"
+, stdout);
+ fputs(
 "  understood by CGI's and similar, curl also supports the more capable\n"
 "  multipart/form-data type. This latter type supports things like file upload.\n"
 "\n"
 "  -F accepts parameters like -F \"name=contents\". If you want the contents to\n"
-, stdout);
- fputs(
 "  be read from a file, use <@filename> as contents. When specifying a file,\n"
 "  you can also specify the file content type by appending ';type=<mime type>'\n"
 "  to the file name. You can also post the contents of several files in one\n"
+, stdout);
+ fputs(
 "  field.  For example, the field name 'coolfiles' is used to send three files,\n"
 "  with different content types using the following syntax:\n"
 "\n"
 "        curl -F \"coolfiles=@fil1.gif;type=image/gif,fil2.txt,fil3.html\" \\\n"
 "        http://www.post.com/postit.cgi\n"
 "\n"
-, stdout);
- fputs(
 "  If the content-type is not specified, curl will try to guess from the file\n"
 "  extension (it only knows a few), or use the previously specified type (from\n"
 "  an earlier file if several files are specified in a list) or else it will\n"
+, stdout);
+ fputs(
 "  use the default type 'application/octet-stream'.\n"
 "\n"
 "  Emulate a fill-in form with -F. Let's say you fill in three fields in a\n"
 "  form. One field is a file name which to post, one field is your name and one\n"
-, stdout);
- fputs(
 "  field is a file description. We want to post the file we have written named\n"
 "  \"cooltext.txt\". To let curl do the posting of this data instead of your\n"
 "  favourite browser, you have to read the HTML source of the form page and\n"
+, stdout);
+ fputs(
 "  find the names of the input fields. In our example, the input field names\n"
 "  are 'file', 'yourname' and 'filedescription'.\n"
 "\n"
 "        curl -F \"file=@cooltext.txt\" -F \"yourname=Daniel\" \\\n"
 "             -F \"filedescription=Cool text file with cool text inside\" \\\n"
-, stdout);
- fputs(
 "             http://www.post.com/postit.cgi\n"
 "\n"
 "  To send two files in one post you can do it in two ways:\n"
 "\n"
 "  1. Send multiple files in a single \"field\" with a single field name:\n"
 "\n"
 "        curl -F \"pictures=@dog.gif,cat.gif\"\n"
 "\n"
+, stdout);
+ fputs(
 "  2. Send two fields with two field names:\n"
 "\n"
 "        curl -F \"docpicture=@dog.gif\" -F \"catpicture=@cat.gif\"\n"
 "\n"
 "  To send a field value literally without interpreting a leading '@'\n"
 "  or '<', or an embedded ';type=', use --form-string instead of\n"
-, stdout);
- fputs(
 "  -F. This is recommended when the value is obtained from a user or\n"
 "  some other unpredictable source. Under these circumstances, using\n"
 "  -F instead of --form-string would allow a user to trick curl into\n"
 "  uploading a file.\n"
 "\n"
 "REFERRER\n"
 "\n"
+, stdout);
+ fputs(
 "  An HTTP request has the option to include information about which address\n"
 "  referred it to the actual page.  Curl allows you to specify the\n"
 "  referrer to be used on the command line. It is especially useful to\n"
-, stdout);
- fputs(
 "  fool or trick stupid servers or CGI scripts that rely on that information\n"
 "  being available or contain certain data.\n"
 "\n"
 "        curl -e www.coolsite.com http://www.showme.com/\n"
 "\n"
 "  NOTE: The Referer: [sic] field is defined in the HTTP spec to be a full URL.\n"
 "\n"
 "USER AGENT\n"
 "\n"
+, stdout);
+ fputs(
 "  An HTTP request has the option to include information about the browser\n"
 "  that generated the request. Curl allows it to be specified on the command\n"
 "  line. It is especially useful to fool or trick stupid servers or CGI\n"
-, stdout);
- fputs(
 "  scripts that only accept certain browsers.\n"
 "\n"
 "  Example:\n"
 "\n"
 "  curl -A 'Mozilla/3.0 (Win95; I)' http://www.nationsbank.com/\n"
 "\n"
 "  Other common strings:\n"
 "    'Mozilla/3.0 (Win95; I)'     Netscape Version 3 for Windows 95\n"
+, stdout);
+ fputs(
 "    'Mozilla/3.04 (Win95; U)'    Netscape Version 3 for Windows 95\n"
 "    'Mozilla/2.02 (OS/2; U)'     Netscape Version 2 for OS/2\n"
 "    'Mozilla/4.04 [en] (X11; U; AIX 4.2; Nav)'           NS for AIX\n"
 "    'Mozilla/4.05 [en] (X11; U; Linux 2.0.32 i586)'      NS for Linux\n"
 "\n"
-, stdout);
- fputs(
 "  Note that Internet Explorer tries hard to be compatible in every way:\n"
 "    'Mozilla/4.0 (compatible; MSIE 4.01; Windows 95)'    MSIE for W95\n"
 "\n"
 "  Mozilla is not the only possible User-Agent name:\n"
+, stdout);
+ fputs(
 "    'Konqueror/1.0'             KDE File Manager desktop client\n"
 "    'Lynx/2.7.1 libwww-FM/2.14' Lynx command line browser\n"
 "\n"
 "COOKIES\n"
 "\n"
 "  Cookies are generally used by web servers to keep state information at the\n"
 "  client's side. The server sets cookies by sending a response line in the\n"
-, stdout);
- fputs(
 "  headers that looks like 'Set-Cookie: <data>' where the data part then\n"
 "  typically contains a set of NAME=VALUE pairs (separated by semicolons ';'\n"
+, stdout);
+ fputs(
 "  like \"NAME1=VALUE1; NAME2=VALUE2;\"). The server can also specify for what\n"
 "  path the \"cookie\" should be used for (by specifying \"path=value\"), when the\n"
 "  cookie should expire (\"expire=DATE\"), for what domain to use it\n"
 "  (\"domain=NAME\") and if it should be used on secure connections only\n"
 "  (\"secure\").\n"
 "\n"
-, stdout);
- fputs(
 "  If you've received a page from a server that contains a header like:\n"
 "        Set-Cookie: sessionid=boo123; path=\"/foo\";\n"
 "\n"
+, stdout);
+ fputs(
 "  it means the server wants that first pair passed on when we get anything in\n"
 "  a path beginning with \"/foo\".\n"
 "\n"
 "  Example, get a page that wants my name passed in a cookie:\n"
 "\n"
 "        curl -b \"name=Daniel\" www.sillypage.com\n"
 "\n"
 "  Curl also has the ability to use previously received cookies in following\n"
 "  sessions. If you get cookies from a server and store them in a file in a\n"
-, stdout);
- fputs(
 "  manner similar to:\n"
 "\n"
 "        curl --dump-header headers www.example.com\n"
 "\n"
+, stdout);
+ fputs(
 "  ... you can then in a second connect to that (or another) site, use the\n"
 "  cookies from the 'headers' file like:\n"
 "\n"
 "        curl -b headers www.example.com\n"
 "\n"
 "  While saving headers to a file is a working way to store cookies, it is\n"
 "  however error-prone and not the preferred way to do this. Instead, make curl\n"
 "  save the incoming cookies using the well-known netscape cookie format like\n"
 "  this:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -c cookies.txt www.example.com\n"
 "\n"
+, stdout);
+ fputs(
 "  Note that by specifying -b you enable the \"cookie awareness\" and with -L\n"
 "  you can make curl follow a location: (which often is used in combination\n"
 "  with cookies). So that if a site sends cookies and a location, you can\n"
 "  use a non-existing file to trigger the cookie awareness like:\n"
 "\n"
 "        curl -L -b empty.txt www.example.com\n"
 "\n"
 "  The file to read cookies from must be formatted using plain HTTP headers OR\n"
+"  as netscape's cookie file. Curl will determine what kind it is based on the\n"
 , stdout);
  fputs(
-"  as netscape's cookie file. Curl will determine what kind it is based on the\n"
 "  file contents.  In the above command, curl will parse the header and store\n"
 "  the cookies received from www.example.com.  curl will send to the server the\n"
 "  stored cookies which match the request as it follows the location.  The\n"
 "  file \"empty.txt\" may be a nonexistent file.\n"
 "\n"
 "  To read and write cookies from a netscape cookie file, you can set both -b\n"
 "  and -c to use the same file:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -b cookies.txt -c cookies.txt www.example.com\n"
 "\n"
 "PROGRESS METER\n"
 "\n"
+, stdout);
+ fputs(
 "  The progress meter exists to show a user that something actually is\n"
 "  happening. The different fields in the output have the following meaning:\n"
 "\n"
 "  % Total    % Received % Xferd  Average Speed          Time             Curr.\n"
 "                                 Dload  Upload Total    Current  Left    Speed\n"
 "  0  151M    0 38608    0     0   9406      0  4:41:43  0:00:04  4:41:39  9287\n"
 "\n"
 "  From left-to-right:\n"
+"   %             - percentage completed of the whole transfer\n"
 , stdout);
  fputs(
-"   %             - percentage completed of the whole transfer\n"
 "   Total         - total size of the whole expected transfer\n"
 "   %             - percentage completed of the download\n"
 "   Received      - currently downloaded amount of bytes\n"
 "   %             - percentage completed of the upload\n"
 "   Xferd         - currently uploaded amount of bytes\n"
 "   Average Speed\n"
 "   Dload         - the average transfer speed of the download\n"
 "   Average Speed\n"
 "   Upload        - the average transfer speed of the upload\n"
+"   Time Total    - expected time to complete the operation\n"
 , stdout);
  fputs(
-"   Time Total    - expected time to complete the operation\n"
 "   Time Current  - time passed since the invoke\n"
 "   Time Left     - expected time left to completion\n"
 "   Curr.Speed    - the average transfer speed the last 5 seconds (the first\n"
 "                   5 seconds of a transfer is based on less time of course.)\n"
 "\n"
 "  The -# option will display a totally different progress bar that doesn't\n"
 "  need much explanation!\n"
 "\n"
 "SPEED LIMIT\n"
 "\n"
+"  Curl allows the user to set the transfer speed conditions that must be met\n"
 , stdout);
  fputs(
-"  Curl allows the user to set the transfer speed conditions that must be met\n"
 "  to let the transfer keep going. By using the switch -y and -Y you\n"
 "  can make curl abort transfers if the transfer speed is below the specified\n"
 "  lowest limit for a specified time.\n"
 "\n"
 "  To have curl abort the download if the speed is slower than 3000 bytes per\n"
 "  second for 1 minute, run:\n"
 "\n"
 "        curl -Y 3000 -y 60 www.far-away-site.com\n"
 "\n"
 "  This can very well be used in combination with the overall time limit, so\n"
-, stdout);
- fputs(
 "  that the above operation must be completed in whole within 30 minutes:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -m 1800 -Y 3000 -y 60 www.far-away-site.com\n"
 "\n"
 "  Forcing curl not to transfer data faster than a given rate is also possible,\n"
 "  which might be useful if you're using a limited bandwidth connection and you\n"
 "  don't want your transfer to use all of it (sometimes referred to as\n"
 "  \"bandwidth throttle\").\n"
 "\n"
 "  Make curl transfer data no faster than 10 kilobytes per second:\n"
 "\n"
-, stdout);
- fputs(
 "        curl --limit-rate 10K www.far-away-site.com\n"
 "\n"
 "    or\n"
 "\n"
 "        curl --limit-rate 10240 www.far-away-site.com\n"
 "\n"
+, stdout);
+ fputs(
 "  Or prevent curl from uploading data faster than 1 megabyte per second:\n"
 "\n"
 "        curl -T upload --limit-rate 1M ftp://uploadshereplease.com\n"
 "\n"
 "  When using the --limit-rate option, the transfer rate is regulated on a\n"
 "  per-second basis, which will cause the total transfer speed to become lower\n"
 "  than the given number. Sometimes of course substantially lower, if your\n"
-, stdout);
- fputs(
 "  transfer stalls during periods.\n"
 "\n"
 "CONFIG FILE\n"
 "\n"
 "  Curl automatically tries to read the .curlrc file (or _curlrc file on win32\n"
+, stdout);
+ fputs(
 "  systems) from the user's home dir on startup.\n"
 "\n"
 "  The config file could be made up with normal command line switches, but you\n"
 "  can also specify the long options without the dashes to make it more\n"
 "  readable. You can separate the options and the parameter with spaces, or\n"
 "  with = or :. Comments can be used within the file. If the first letter on a\n"
-, stdout);
- fputs(
 "  line is a '#'-symbol the rest of the line is treated as a comment.\n"
 "\n"
 "  If you want the parameter to contain spaces, you must enclose the entire\n"
+, stdout);
+ fputs(
 "  parameter within double quotes (\"). Within those quotes, you specify a\n"
 "  quote as \\\".\n"
 "\n"
 "  NOTE: You must specify options and their arguments on the same line.\n"
 "\n"
 "  Example, set default time out and proxy in a config file:\n"
 "\n"
 "        # We want a 30 minute timeout:\n"
 "        -m 1800\n"
 "        # ... and we use a proxy for all accesses:\n"
-, stdout);
- fputs(
 "        proxy = proxy.our.domain.com:8080\n"
 "\n"
 "  White spaces ARE significant at the end of lines, but all white spaces\n"
+, stdout);
+ fputs(
 "  leading up to the first characters of each line are ignored.\n"
 "\n"
 "  Prevent curl from reading the default file by using -q as the first command\n"
 "  line parameter, like:\n"
 "\n"
 "        curl -q www.thatsite.com\n"
 "\n"
 "  Force curl to get and display a local help page in case it is invoked\n"
 "  without URL by making a config file similar to:\n"
 "\n"
 "        # default url to get\n"
-, stdout);
- fputs(
 "        url = \"http://help.with.curl.com/curlhelp.html\"\n"
 "\n"
 "  You can specify another config file to be read by using the -K/--config\n"
+, stdout);
+ fputs(
 "  flag. If you set config file name to \"-\" it'll read the config from stdin,\n"
 "  which can be handy if you want to hide options from being visible in process\n"
 "  tables etc:\n"
 "\n"
 "        echo \"user = user:passwd\" | curl -K - http://that.secret.site.com\n"
 "\n"
 "EXTRA HEADERS\n"
 "\n"
 "  When using curl in your own very special programs, you may end up needing\n"
-, stdout);
- fputs(
 "  to pass on your own custom headers when getting a web page. You can do\n"
 "  this by using the -H flag.\n"
 "\n"
+, stdout);
+ fputs(
 "  Example, send the header \"X-you-and-me: yes\" to the server when getting a\n"
 "  page:\n"
 "\n"
 "        curl -H \"X-you-and-me: yes\" www.love.com\n"
 "\n"
 "  This can also be useful in case you want curl to send a different text in a\n"
 "  header than it normally does. The -H header you specify then replaces the\n"
 "  header curl would normally send. If you replace an internal header with an\n"
-, stdout);
- fputs(
 "  empty one, you prevent that header from being sent. To prevent the Host:\n"
 "  header from being used:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -H \"Host:\" www.server.com\n"
 "\n"
 "FTP and PATH NAMES\n"
 "\n"
 "  Do note that when getting files with the ftp:// URL, the given path is\n"
 "  relative the directory you enter. To get the file 'README' from your home\n"
 "  directory at your ftp site, do:\n"
 "\n"
 "        curl ftp://user:passwd@my.site.com/README\n"
 "\n"
 "  But if you want the README file from the root directory of that very same\n"
-, stdout);
- fputs(
 "  site, you need to specify the absolute file name:\n"
 "\n"
 "        curl ftp://user:passwd@my.site.com//README\n"
 "\n"
+, stdout);
+ fputs(
 "  (I.e with an extra slash in front of the file name.)\n"
 "\n"
 "SFTP and SCP and PATH NAMES\n"
 "\n"
 "  With sftp: and scp: URLs, the path name given is the absolute name on the\n"
 "  server. To access a file relative to the remote user's home directory,\n"
 "  prefix the file with /~/ , such as:\n"
 "\n"
 "        curl -u $USER sftp://home.example.com/~/.bashrc\n"
 "\n"
 "FTP and firewalls\n"
 "\n"
+"  The FTP protocol requires one of the involved parties to open a second\n"
 , stdout);
  fputs(
-"  The FTP protocol requires one of the involved parties to open a second\n"
 "  connection as soon as data is about to get transferred. There are two ways to\n"
 "  do this.\n"
 "\n"
 "  The default way for curl is to issue the PASV command which causes the\n"
 "  server to open another port and await another connection performed by the\n"
 "  client. This is good if the client is behind a firewall that doesn't allow\n"
 "  incoming connections.\n"
 "\n"
 "        curl ftp.download.com\n"
 "\n"
+"  If the server, for example, is behind a firewall that doesn't allow connections\n"
 , stdout);
  fputs(
-"  If the server, for example, is behind a firewall that doesn't allow connections\n"
 "  on ports other than 21 (or if it just doesn't support the PASV command), the\n"
 "  other way to do it is to use the PORT command and instruct the server to\n"
 "  connect to the client on the given IP number and port (as parameters to the\n"
 "  PORT command).\n"
 "\n"
 "  The -P flag to curl supports a few different options. Your machine may have\n"
 "  several IP-addresses and/or network interfaces and curl allows you to select\n"
-, stdout);
- fputs(
 "  which of them to use. Default address can also be used:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -P - ftp.download.com\n"
 "\n"
 "  Download with PORT but use the IP address of our 'le0' interface (this does\n"
 "  not work on windows):\n"
 "\n"
 "        curl -P le0 ftp.download.com\n"
@@ -4121,18 +4130,18 @@
 "        curl -P 192.168.0.10 ftp.download.com\n"
 "\n"
 "NETWORK INTERFACE\n"
 "\n"
 "  Get a web page from a server using a specified port for the interface:\n"
 "\n"
-, stdout);
- fputs(
 "        curl --interface eth0:1 http://www.netscape.com/\n"
 "\n"
 "  or\n"
 "\n"
+, stdout);
+ fputs(
 "        curl --interface 192.168.1.10 http://www.netscape.com/\n"
 "\n"
 "HTTPS\n"
 "\n"
 "  Secure HTTP requires SSL libraries to be installed and used when curl is\n"
 "  built. If that is done, curl is capable of retrieving and posting documents\n"
@@ -4140,47 +4149,47 @@
 "\n"
 "  Example:\n"
 "\n"
 "        curl https://www.secure-site.com\n"
 "\n"
 "  Curl is also capable of using your personal certificates to get/post files\n"
+"  from sites that require valid certificates. The only drawback is that the\n"
 , stdout);
  fputs(
-"  from sites that require valid certificates. The only drawback is that the\n"
 "  certificate needs to be in PEM-format. PEM is a standard and open format to\n"
 "  store certificates with, but it is not used by the most commonly used\n"
 "  browsers (Netscape and MSIE both use the so called PKCS#12 format). If you\n"
 "  want curl to use the certificates you use with your (favourite) browser, you\n"
 "  may need to download/compile a converter that can convert your browser's\n"
+"  formatted certificates to PEM formatted ones. This kind of converter is\n"
 , stdout);
  fputs(
-"  formatted certificates to PEM formatted ones. This kind of converter is\n"
 "  included in recent versions of OpenSSL, and for older versions Dr Stephen\n"
 "  N. Henson has written a patch for SSLeay that adds this functionality. You\n"
 "  can get his patch (that requires an SSLeay installation) from his site at:\n"
 "  http://www.drh-consultancy.demon.co.uk/\n"
 "\n"
 "  Example on how to automatically retrieve a document using a certificate with\n"
 "  a personal password:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -E /path/to/cert.pem:password https://secure.site.com/\n"
 "\n"
+, stdout);
+ fputs(
 "  If you neglect to specify the password on the command line, you will be\n"
 "  prompted for the correct password before any data can be received.\n"
 "\n"
 "  Many older SSL-servers have problems with SSLv3 or TLS, which newer versions\n"
 "  of OpenSSL etc use, therefore it is sometimes useful to specify what\n"
 "  SSL-version curl should use. Use -3, -2 or -1 to specify that exact SSL\n"
 "  version to use (for SSLv3, SSLv2 or TLSv1 respectively):\n"
 "\n"
-, stdout);
- fputs(
 "        curl -2 https://secure.site.com/\n"
 "\n"
+, stdout);
+ fputs(
 "  Otherwise, curl will first attempt to use v3 and then v2.\n"
 "\n"
 "  To use OpenSSL to convert your favourite browser's certificate into a PEM\n"
 "  formatted one that curl can use, do something like this:\n"
 "\n"
 "    In Netscape, you start with hitting the 'Security' menu button.\n"
@@ -4565,790 +4574,797 @@
 #include "tool_hugehelp.h"
 void hugehelp(void) {}
 #endif /* USE_MANUAL */
 #else
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Mon May 30 08:14:01 2016
+ * Generation time: Thu Jul 21 01:54:33 2016
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 #include <zlib.h>
 #include "memdebug.h" /* keep this as LAST include */
 static const unsigned char hugehelpgz[] = {
   /* This mumbo-jumbo is the huge help text compressed with gzip.
-     Thanks to this operation, the size of this data shrunk from 172704
-     to 51939 bytes. You can disable the use of compressed help
+     Thanks to this operation, the size of this data shrunk from 173029
+     to 52097 bytes. You can disable the use of compressed help
      texts by NOT passing -c to the mkhelp.pl tool. */
   0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xed, 0xfd,
-  0x6b, 0x5b, 0x23, 0x57, 0x96, 0x26, 0x0c, 0x7f, 0xe7, 0x57, 0x44, 0x53,
-  0x6f, 0x35, 0xd0, 0x25, 0x89, 0x43, 0x1e, 0xec, 0xa4, 0x32, 0xdd, 0xc6,
-  0x24, 0x69, 0x33, 0x26, 0x13, 0x06, 0x91, 0xb6, 0x6b, 0x6c, 0x5f, 0x79,
-  0x85, 0xa4, 0x00, 0xa2, 0x90, 0x14, 0xaa, 0x88, 0x10, 0x24, 0xd5, 0xd3,
-  0xf3, 0xdb, 0xdf, 0x75, 0xaf, 0xc3, 0xde, 0x3b, 0x22, 0xb6, 0x20, 0xed,
-  0xaa, 0xec, 0x67, 0x9e, 0x79, 0xc6, 0xdd, 0x95, 0x80, 0x14, 0xb1, 0x8f,
-  0x6b, 0xaf, 0xbd, 0x8e, 0xf7, 0x4a, 0x92, 0xc7, 0xfe, 0xfb, 0xc0, 0xff,
-  0xfb, 0x40, 0xff, 0xd1, 0xcf, 0xb5, 0x24, 0x39, 0x2b, 0x8b, 0xbf, 0x66,
-  0xe3, 0x3a, 0xfe, 0xec, 0x87, 0x0f, 0xff, 0x33, 0x91, 0xff, 0xa3, 0x77,
-  0x7e, 0xa1, 0x9f, 0x6b, 0x0f, 0xb6, 0xbd, 0x9d, 0xf8, 0x17, 0xfe, 0xe7,
-  0x87, 0xad, 0xe4, 0xb1, 0x17, 0xfe, 0x67, 0xb2, 0xc9, 0x2f, 0x7c, 0xd0,
-  0x1e, 0x5e, 0xe2, 0xf7, 0x0f, 0x1f, 0x1e, 0xee, 0xe4, 0x17, 0x8c, 0x0a,
-  0xff, 0x6c, 0xe3, 0xbd, 0x5f, 0x3e, 0xe0, 0x57, 0xfa, 0x64, 0x6d, 0xed,
-  0xdd, 0xc1, 0xdb, 0x23, 0x7b, 0x75, 0xbc, 0x2c, 0xa7, 0x49, 0x3f, 0xa9,
-  0xcb, 0x74, 0x5e, 0x5d, 0x66, 0x65, 0x92, 0x26, 0xef, 0xcf, 0x4f, 0xd6,
-  0xd6, 0x86, 0x7f, 0x79, 0x77, 0x7a, 0x36, 0x3c, 0x1e, 0x36, 0x1e, 0xfb,
-  0xb9, 0x58, 0xd4, 0x79, 0x31, 0xaf, 0x7e, 0x4d, 0x7e, 0xa6, 0x87, 0x06,
-  0x83, 0xc1, 0xaf, 0x6b, 0x6b, 0xaf, 0x8f, 0x86, 0x87, 0xe7, 0xc7, 0x67,
-  0x17, 0xc7, 0xa7, 0xef, 0x1a, 0xcf, 0x26, 0x79, 0x95, 0x50, 0x63, 0x75,
-  0x51, 0x4c, 0xe9, 0x1f, 0xdf, 0xfe, 0x24, 0xad, 0xd3, 0xe4, 0xb2, 0x2c,
-  0x66, 0x49, 0x51, 0xe2, 0x8b, 0x34, 0xa9, 0xb2, 0xf2, 0x36, 0x2b, 0x7b,
-  0xc9, 0xb2, 0xca, 0xe7, 0x57, 0x49, 0x31, 0xcf, 0x92, 0xe2, 0x32, 0xa9,
-  0xaf, 0x33, 0x6b, 0xae, 0x5a, 0x2e, 0x16, 0x45, 0x59, 0x67, 0x93, 0x64,
-  0x51, 0x16, 0x75, 0x31, 0x2e, 0xa6, 0x55, 0xb2, 0xf9, 0xfa, 0xf8, 0xf0,
-  0xa2, 0x97, 0xbc, 0x39, 0x3e, 0x39, 0xa2, 0x7f, 0x2f, 0xce, 0xf8, 0x9f,
-  0x61, 0x2f, 0xf9, 0xf6, 0xf4, 0xec, 0xbb, 0xa3, 0xf3, 0x5e, 0xf2, 0xdd,
-  0x05, 0x3e, 0xc3, 0xbf, 0xf4, 0x61, 0x72, 0xfc, 0xf6, 0xe0, 0xac, 0x67,
-  0xcd, 0xe1, 0x0f, 0x7c, 0x78, 0xf2, 0x9a, 0x3e, 0x94, 0x1f, 0xf8, 0xf3,
-  0xec, 0xf4, 0xec, 0x89, 0xfe, 0xc0, 0x9f, 0xe7, 0x17, 0x6f, 0xe9, 0xdb,
-  0xf3, 0x8b, 0x21, 0xfd, 0x3b, 0x3c, 0xc4, 0x3f, 0xdc, 0xcb, 0xf0, 0xed,
-  0x37, 0xfc, 0xcf, 0xd0, 0x35, 0x37, 0x7c, 0x2b, 0x9f, 0x73, 0x4f, 0x17,
-  0x47, 0x27, 0xef, 0x8e, 0x2e, 0x92, 0x74, 0x3e, 0x49, 0x2e, 0xe8, 0xf9,
-  0xad, 0x41, 0x72, 0x71, 0x9d, 0x25, 0xe3, 0x62, 0x36, 0xc3, 0x47, 0xb4,
-  0x22, 0x93, 0xac, 0xca, 0xaf, 0xe6, 0x34, 0x15, 0x9a, 0xf9, 0x5d, 0x51,
-  0xde, 0x24, 0xc9, 0x5d, 0x5e, 0x5f, 0x17, 0xcb, 0xda, 0x9a, 0x5b, 0xd2,
-  0x6a, 0x24, 0xf9, 0xbc, 0xce, 0xca, 0x74, 0x8c, 0xb5, 0x1e, 0xac, 0x35,
-  0x56, 0xb5, 0xb8, 0xa4, 0x35, 0xac, 0x68, 0xd1, 0x46, 0xcb, 0x6a, 0x5a,
-  0xa4, 0x13, 0x2c, 0x15, 0xbd, 0x72, 0xb9, 0xa4, 0x45, 0x2e, 0xf3, 0xf1,
-  0x4d, 0x95, 0x4c, 0xf3, 0x9b, 0x0c, 0x0b, 0xf5, 0xf1, 0xde, 0x16, 0xae,
-  0x27, 0x8d, 0xa6, 0x4b, 0x5a, 0xd3, 0x79, 0xdf, 0x9a, 0xab, 0xf3, 0x71,
-  0x8a, 0x0e, 0x78, 0xe5, 0x92, 0xe5, 0x02, 0xad, 0xc9, 0x8a, 0x25, 0x8b,
-  0xa2, 0xa2, 0x97, 0x86, 0xc3, 0x13, 0x1a, 0xf9, 0x7c, 0x9e, 0xf1, 0x38,
-  0xaa, 0x1e, 0xfd, 0x51, 0xdc, 0xe4, 0x19, 0xfd, 0x72, 0x99, 0x4f, 0xb3,
-  0x44, 0x76, 0xd4, 0x35, 0x87, 0xad, 0x4d, 0xca, 0xac, 0x5a, 0xce, 0x32,
-  0x5a, 0xbd, 0xb7, 0x59, 0x9d, 0x4e, 0xf3, 0xf9, 0x0d, 0xfd, 0x8a, 0x89,
-  0xcf, 0x8a, 0x32, 0x1b, 0x24, 0x07, 0x55, 0x72, 0x5f, 0x2c, 0x69, 0xc2,
-  0xd3, 0x29, 0xed, 0x79, 0x96, 0x8c, 0xb2, 0x69, 0x71, 0xd7, 0xc3, 0x4e,
-  0x27, 0xf3, 0xe5, 0x6c, 0x44, 0x0d, 0x14, 0x97, 0xbe, 0xb9, 0xb4, 0x5e,
-  0x52, 0x73, 0xf2, 0xf4, 0x2c, 0xa5, 0x39, 0xd1, 0xbb, 0x65, 0x72, 0x9d,
-  0xd1, 0x9c, 0xab, 0x45, 0x3e, 0xff, 0x97, 0xe6, 0xba, 0xd0, 0xd2, 0x2e,
-  0x8a, 0xbb, 0xac, 0xa4, 0x95, 0x1d, 0xdd, 0x27, 0xb4, 0x08, 0x23, 0x21,
-  0xc2, 0x4b, 0x22, 0xb2, 0x24, 0xa5, 0x26, 0x1c, 0x01, 0xf6, 0xcb, 0x6c,
-  0x9a, 0x82, 0x98, 0x5c, 0x1f, 0x03, 0xda, 0xc4, 0xcc, 0x51, 0x9b, 0xbe,
-  0xba, 0xf9, 0x64, 0x8b, 0x5f, 0x9e, 0xd0, 0x4c, 0xf2, 0x69, 0x45, 0xdb,
-  0x80, 0x63, 0xa1, 0xcf, 0x60, 0x53, 0x71, 0x4c, 0x88, 0x36, 0xef, 0xe7,
-  0x75, 0xfa, 0x91, 0xbb, 0x57, 0xda, 0xec, 0x4f, 0xb2, 0x45, 0x36, 0x9f,
-  0x64, 0xf3, 0x7a, 0x90, 0xfc, 0xa5, 0x58, 0x6e, 0x50, 0xdf, 0x97, 0x39,
-  0xad, 0x41, 0xaa, 0x4d, 0x51, 0xcf, 0x44, 0x04, 0xe3, 0x32, 0x5f, 0x04,
-  0x5b, 0x51, 0xcc, 0x69, 0xcf, 0x93, 0xf3, 0x37, 0x87, 0xc9, 0x93, 0x17,
-  0x5f, 0x3e, 0xf7, 0x7b, 0x4e, 0x0d, 0x24, 0xe3, 0x74, 0x4e, 0x33, 0xce,
-  0xc6, 0xf9, 0xe5, 0x7d, 0x32, 0x5b, 0x4e, 0xeb, 0x7c, 0x41, 0xab, 0x4f,
-  0x9d, 0x57, 0x38, 0x40, 0x8b, 0xb4, 0xac, 0x2b, 0x10, 0x01, 0x7f, 0xc0,
-  0x73, 0xbf, 0x2b, 0xf3, 0x1a, 0x07, 0x89, 0xbf, 0xa3, 0x11, 0x66, 0x75,
-  0x65, 0xcd, 0x81, 0xd6, 0xa8, 0x9f, 0x11, 0xd1, 0x16, 0x2d, 0x6d, 0x5a,
-  0x51, 0xa7, 0xfb, 0x6b, 0x9e, 0x87, 0x5c, 0xd7, 0xf5, 0x62, 0x7f, 0x7b,
-  0xbb, 0xca, 0xeb, 0x6c, 0xf0, 0x1f, 0x74, 0x0e, 0x7b, 0xf5, 0x5d, 0xd1,
-  0xab, 0xaf, 0xcb, 0x2c, 0xfb, 0xcf, 0x01, 0xd1, 0xb0, 0x7b, 0x92, 0xfa,
-  0xbd, 0xd7, 0x81, 0x5d, 0x65, 0x35, 0xf5, 0xf0, 0xb7, 0x65, 0x36, 0x47,
-  0x8b, 0x34, 0x8e, 0x74, 0xba, 0xb8, 0x4e, 0x69, 0x3b, 0x33, 0xa2, 0x46,
-  0x9c, 0x6c, 0x22, 0x18, 0x8c, 0x4a, 0xce, 0xf6, 0xcf, 0xbf, 0x76, 0x3b,
-  0xbd, 0xe4, 0x3e, 0xe9, 0xdf, 0x41, 0xf6, 0x31, 0x9d, 0xd1, 0xdc, 0xd0,
-  0xd5, 0x36, 0x48, 0xec, 0xe7, 0xdd, 0xfe, 0xee, 0xce, 0xce, 0xaf, 0x83,
-  0xfa, 0x63, 0xfd, 0x69, 0xcf, 0xef, 0xec, 0xf8, 0x37, 0xf0, 0xe8, 0x26,
-  0xe6, 0x9b, 0x4c, 0x89, 0x64, 0xd0, 0xf9, 0xdf, 0xb3, 0xb2, 0xa8, 0xb6,
-  0x3e, 0xad, 0xa5, 0xb4, 0xff, 0xf7, 0x66, 0xbf, 0xef, 0xb2, 0x8a, 0x69,
-  0xc6, 0xcf, 0x35, 0x49, 0x4b, 0xa2, 0xdb, 0xa2, 0xf6, 0xec, 0xa9, 0x47,
-  0x87, 0xb2, 0x76, 0x2b, 0x43, 0x67, 0x8e, 0x9e, 0x26, 0xc6, 0x96, 0x4e,
-  0xc1, 0xd3, 0xaa, 0x64, 0x9e, 0x7d, 0x74, 0xa7, 0x9c, 0x4e, 0x7f, 0x96,
-  0x8e, 0xaf, 0x93, 0x82, 0x88, 0xbf, 0x8c, 0x6c, 0x41, 0x38, 0xa0, 0xb4,
-  0x1c, 0x5f, 0xe7, 0xb7, 0xb4, 0x1a, 0x2f, 0x5e, 0x3c, 0xef, 0xd3, 0x3f,
-  0x2f, 0x7e, 0xdd, 0xbe, 0x2d, 0xa6, 0xb4, 0x38, 0x4f, 0x7f, 0xdd, 0xc6,
-  0x16, 0xff, 0x47, 0xda, 0x1b, 0xf5, 0xc6, 0xff, 0x39, 0xb8, 0xae, 0x67,
-  0xd3, 0x95, 0x84, 0x93, 0xce, 0xe9, 0x7f, 0xb3, 0x62, 0x39, 0xaf, 0x1d,
-  0xb1, 0x10, 0xcd, 0xd5, 0x01, 0x73, 0xa2, 0xe3, 0x4a, 0x67, 0x14, 0xa4,
-  0x0d, 0x1a, 0xc2, 0xa9, 0xa3, 0x03, 0xea, 0x8f, 0x63, 0x3d, 0xbe, 0xa6,
-  0xf9, 0x13, 0xf1, 0xa4, 0xba, 0x06, 0x75, 0x9e, 0xe2, 0x60, 0x12, 0x7f,
-  0x00, 0xbf, 0xe2, 0xa6, 0xa4, 0xb3, 0x9c, 0x9e, 0x2b, 0xca, 0x49, 0x56,
-  0x36, 0xc9, 0x98, 0x87, 0xe3, 0xc7, 0x93, 0xd0, 0x7a, 0x2e, 0xa8, 0xf3,
-  0x25, 0x58, 0x1d, 0x9f, 0x34, 0xb4, 0x40, 0x67, 0xf4, 0x8a, 0x96, 0x8a,
-  0x96, 0x07, 0x84, 0x85, 0xd5, 0xbb, 0x4f, 0xde, 0xd1, 0x1e, 0x0a, 0x7f,
-  0x08, 0xe8, 0x6f, 0x9a, 0xd5, 0xf5, 0xa3, 0x2b, 0xe7, 0x89, 0x68, 0x7f,
-  0xb7, 0x43, 0x47, 0xab, 0x9e, 0xa7, 0xad, 0xdf, 0xdf, 0x6b, 0x3e, 0xfc,
-  0x23, 0xf1, 0x4d, 0x4f, 0xc1, 0xd4, 0xfb, 0x7f, 0xfc, 0x67, 0x40, 0x08,
-  0x77, 0xf8, 0x36, 0x9f, 0xdf, 0x16, 0x37, 0x34, 0x71, 0xbe, 0xd8, 0xd2,
-  0xc6, 0xa2, 0x26, 0x60, 0x0d, 0xb3, 0x45, 0xed, 0x6e, 0x0c, 0x50, 0x08,
-  0x7d, 0x34, 0x4a, 0x47, 0xd3, 0xfb, 0xe4, 0x3a, 0xbd, 0xcd, 0x30, 0xdf,
-  0x05, 0x91, 0x0e, 0x56, 0x80, 0x38, 0xf9, 0x94, 0x59, 0x8b, 0x9e, 0xd5,
-  0x49, 0xb1, 0x1c, 0xd1, 0x79, 0xff, 0xdb, 0xb2, 0xa8, 0x65, 0x61, 0xd2,
-  0xdb, 0x22, 0x9f, 0x34, 0xae, 0xc7, 0xeb, 0x0c, 0x3c, 0x06, 0x1d, 0xf3,
-  0xbd, 0x41, 0x3c, 0x0e, 0x23, 0x65, 0xda, 0xcf, 0x6b, 0xdc, 0x40, 0xc4,
-  0x9d, 0xd2, 0x69, 0x55, 0x24, 0xc9, 0x55, 0x01, 0xc2, 0x65, 0x9e, 0xc8,
-  0x94, 0x47, 0x9b, 0x72, 0x9d, 0xe2, 0xa2, 0xa1, 0x3b, 0xc5, 0x91, 0x66,
-  0x99, 0x31, 0x7b, 0xe4, 0x9d, 0x4a, 0xa7, 0x3d, 0xb9, 0x50, 0xf0, 0x8e,
-  0x2e, 0x55, 0xb2, 0xf1, 0xaf, 0x1b, 0xbd, 0x64, 0xe3, 0xdf, 0x37, 0x98,
-  0xb5, 0x6f, 0xfc, 0xdb, 0x86, 0xdf, 0x67, 0x92, 0x90, 0x6e, 0xf3, 0x09,
-  0xee, 0x06, 0x9a, 0xc9, 0xf1, 0xd9, 0xed, 0xf3, 0xe4, 0xef, 0xb8, 0xce,
-  0x89, 0xfd, 0x65, 0x1f, 0x8d, 0x48, 0x6c, 0x6e, 0xf4, 0x76, 0x42, 0x7c,
-  0x30, 0x5d, 0xe0, 0x5e, 0xcf, 0xca, 0x31, 0x51, 0x54, 0x7a, 0x45, 0x34,
-  0x44, 0xd7, 0xa3, 0x35, 0x87, 0xf6, 0xf1, 0x8a, 0x4c, 0x8b, 0x78, 0x56,
-  0x32, 0x4f, 0x67, 0x44, 0xa4, 0x27, 0x18, 0x51, 0x3e, 0xef, 0x6e, 0xe6,
-  0xcf, 0x97, 0xd9, 0x97, 0x3b, 0xfb, 0xfb, 0x4f, 0xfe, 0xb8, 0xf7, 0x2c,
-  0xab, 0xaf, 0x77, 0x7e, 0xdd, 0x76, 0x8f, 0x1c, 0x5f, 0xf2, 0xb2, 0x1b,
-  0xf9, 0xd9, 0x20, 0xe8, 0xe2, 0x75, 0x8c, 0x9b, 0xde, 0xa7, 0xdf, 0xb3,
-  0xcb, 0xfc, 0x63, 0xcf, 0x44, 0x18, 0x39, 0x06, 0x29, 0x91, 0x1a, 0xed,
-  0x1f, 0x4e, 0xad, 0x35, 0x77, 0xb5, 0xcc, 0x2a, 0x5a, 0xc9, 0xbb, 0xeb,
-  0xb4, 0x4e, 0x5c, 0x03, 0xb2, 0xb3, 0xb3, 0xfc, 0xea, 0xba, 0x4e, 0xee,
-  0x52, 0xf0, 0xff, 0xe3, 0x5a, 0x9a, 0xc0, 0xc5, 0x4b, 0x5c, 0xff, 0x32,
-  0x25, 0xf6, 0x8d, 0x3d, 0xe4, 0x5b, 0x76, 0xe4, 0x2f, 0xfd, 0x9a, 0xc8,
-  0x5c, 0x36, 0xc4, 0x4b, 0x38, 0xa3, 0xb4, 0xc2, 0x41, 0x9a, 0xd3, 0x79,
-  0xad, 0xe9, 0xda, 0x5e, 0xe2, 0xaf, 0x6b, 0xba, 0x98, 0x79, 0x0d, 0x74,
-  0xa0, 0x7c, 0x77, 0xbd, 0xc1, 0x76, 0x62, 0x6f, 0xdc, 0x7d, 0x42, 0x9b,
-  0xd4, 0xd3, 0x6d, 0x76, 0x6f, 0x54, 0x74, 0xe0, 0x88, 0x59, 0x38, 0xca,
-  0x58, 0x07, 0xdf, 0x5b, 0x97, 0x79, 0xf2, 0x18, 0xd3, 0x0a, 0x77, 0xb7,
-  0xdc, 0xd0, 0x34, 0xf8, 0x60, 0xb2, 0xb4, 0x68, 0xe9, 0x0d, 0xa4, 0x84,
-  0x96, 0x2c, 0xc2, 0xaf, 0x4d, 0x0a, 0x22, 0x32, 0x1a, 0x2d, 0xf1, 0x47,
-  0xcc, 0x0c, 0x5c, 0x8f, 0x57, 0x85, 0x89, 0x9c, 0xda, 0xc4, 0x87, 0x79,
-  0x0d, 0xb6, 0xcf, 0x82, 0x25, 0x8d, 0x97, 0x16, 0x85, 0x65, 0x43, 0xe2,
-  0x9d, 0xc1, 0xfc, 0xf9, 0xc6, 0xa2, 0x67, 0x93, 0x5b, 0x12, 0x1c, 0x48,
-  0x46, 0xcc, 0xdc, 0x5b, 0x7c, 0xc5, 0x8e, 0x21, 0xae, 0x4c, 0xe9, 0xbc,
-  0x8c, 0x8b, 0xb2, 0x84, 0x10, 0x8e, 0x1d, 0x1c, 0x09, 0x5f, 0x9b, 0x65,
-  0x74, 0xb3, 0x87, 0xcb, 0x99, 0xe3, 0x8e, 0x21, 0xfe, 0x42, 0xa2, 0x02,
-  0x73, 0x10, 0xba, 0xd2, 0x99, 0x0d, 0xf3, 0xc4, 0x79, 0x74, 0x68, 0x7b,
-  0x3c, 0xce, 0x16, 0x75, 0x15, 0x9b, 0x93, 0x6d, 0x38, 0x0d, 0xa7, 0xcc,
-  0xb0, 0xf2, 0xa1, 0x1c, 0xc4, 0xeb, 0xea, 0xee, 0x61, 0x16, 0x85, 0x4c,
-  0xb4, 0x20, 0xd1, 0xa8, 0x72, 0xab, 0x56, 0x33, 0x6d, 0x10, 0x1b, 0xe3,
-  0x35, 0x9f, 0x61, 0xa0, 0x78, 0xb8, 0x92, 0x93, 0xca, 0xec, 0x12, 0x1b,
-  0x29, 0xc2, 0xaf, 0xf4, 0x8b, 0xdb, 0x84, 0xd6, 0xd3, 0x35, 0x4e, 0xbd,
-  0xba, 0x3d, 0x45, 0xf7, 0x15, 0xa9, 0x0d, 0x74, 0xb9, 0x4e, 0xaa, 0x6b,
-  0x92, 0x87, 0x2a, 0x3d, 0xd9, 0xf9, 0x8c, 0x68, 0xe6, 0x16, 0xfb, 0xbb,
-  0xc8, 0xb2, 0xc9, 0x20, 0x39, 0xbd, 0x04, 0x57, 0x2d, 0x69, 0xd0, 0x35,
-  0x7f, 0x0d, 0x46, 0x4f, 0xeb, 0x36, 0x61, 0xb9, 0xda, 0x1d, 0x2d, 0x19,
-  0x4a, 0xc0, 0xb1, 0x41, 0x69, 0xb4, 0xd8, 0x09, 0xb8, 0xdc, 0xb4, 0x79,
-  0x2b, 0xf0, 0x39, 0x24, 0xee, 0x8d, 0xe1, 0x8d, 0xb2, 0x84, 0x29, 0x71,
-  0x94, 0xd5, 0x77, 0x59, 0xe6, 0x9a, 0xab, 0x32, 0xba, 0x89, 0xb0, 0x69,
-  0x22, 0x8c, 0x31, 0x33, 0xc4, 0xd2, 0x9e, 0x9d, 0x9f, 0x7e, 0x7b, 0x7e,
-  0x34, 0x1c, 0x26, 0x6f, 0x8f, 0x2e, 0x8e, 0xce, 0x1b, 0x2b, 0x3d, 0x2f,
-  0xca, 0x19, 0xef, 0xe8, 0x24, 0xaf, 0x16, 0xd3, 0xf4, 0x1e, 0x5b, 0x4d,
-  0x33, 0xb9, 0x2a, 0x71, 0xb2, 0x66, 0x19, 0x6e, 0x85, 0xc9, 0x92, 0x39,
-  0x59, 0x52, 0x10, 0x7f, 0x48, 0x55, 0x08, 0x05, 0x33, 0x61, 0xc9, 0x75,
-  0x7e, 0xe5, 0x57, 0x9a, 0x38, 0x8e, 0x5e, 0x6e, 0xb8, 0xdd, 0xdc, 0x7e,
-  0x40, 0x1a, 0x64, 0x7d, 0xa3, 0xe7, 0x3f, 0x93, 0x65, 0xaa, 0x78, 0x4e,
-  0x44, 0xb3, 0xf9, 0x8c, 0x99, 0x1d, 0xfd, 0xf4, 0x02, 0x60, 0x76, 0x49,
-  0xd2, 0x2f, 0x5d, 0x78, 0x2d, 0xd2, 0x70, 0xe3, 0xe4, 0x75, 0x65, 0x35,
-  0x06, 0x7a, 0x0d, 0x75, 0x4e, 0x63, 0x9d, 0xe5, 0x73, 0x22, 0x30, 0x22,
-  0x48, 0x3d, 0xe5, 0xa0, 0x04, 0x1a, 0xeb, 0xa5, 0xf0, 0x04, 0x5d, 0x91,
-  0xa6, 0x7e, 0x44, 0x2f, 0xd3, 0x66, 0x13, 0x17, 0x74, 0xd3, 0xe3, 0x41,
-  0x11, 0x69, 0x82, 0x5f, 0x8f, 0xc0, 0x9a, 0xa0, 0x24, 0x90, 0x34, 0x97,
-  0x45, 0x7b, 0x73, 0xf7, 0x09, 0xbd, 0x41, 0x63, 0xa3, 0xdb, 0x04, 0x17,
-  0xc4, 0x75, 0xd6, 0x5e, 0x45, 0x3a, 0x44, 0xcc, 0x5b, 0xee, 0xf2, 0x8a,
-  0x0f, 0xd5, 0x5d, 0xb1, 0x9c, 0x92, 0x48, 0x8e, 0x07, 0x96, 0x0b, 0x7e,
-  0x81, 0xba, 0x5a, 0xf8, 0xd3, 0x33, 0xcb, 0x3f, 0x62, 0xd5, 0xdb, 0xad,
-  0xd0, 0xd0, 0xe8, 0xcf, 0x05, 0x6d, 0x82, 0x0c, 0x67, 0xd0, 0xe6, 0xad,
-  0xcc, 0x35, 0x3a, 0x7b, 0x88, 0xd3, 0xc2, 0xec, 0xee, 0xec, 0x74, 0x78,
-  0x81, 0xbb, 0xf3, 0xec, 0xfd, 0x05, 0x35, 0x44, 0x97, 0x67, 0x55, 0xd3,
-  0x76, 0xe2, 0xc5, 0x79, 0xc6, 0xfa, 0x90, 0x35, 0x47, 0xbb, 0x96, 0xf3,
-  0x11, 0x67, 0x81, 0xc0, 0xba, 0x94, 0x31, 0x8a, 0xc2, 0x08, 0xe2, 0x35,
-  0x75, 0x51, 0x6e, 0x3f, 0xff, 0x52, 0xb2, 0xf9, 0xd5, 0x16, 0x6d, 0x77,
-  0xdf, 0x35, 0xf7, 0x33, 0x9e, 0xe6, 0x5b, 0xbb, 0xca, 0x67, 0xf9, 0x34,
-  0x0d, 0xc4, 0x12, 0xe5, 0x44, 0xa0, 0x6b, 0x77, 0x1e, 0xc7, 0xc4, 0x76,
-  0x79, 0xd0, 0x5e, 0x2b, 0xc2, 0x0a, 0xf2, 0x69, 0xf6, 0x1b, 0x35, 0xc1,
-  0x45, 0xca, 0xc2, 0xdf, 0x22, 0x77, 0x0b, 0x87, 0x1d, 0xc3, 0x31, 0x6f,
-  0x2c, 0x53, 0x7b, 0xd7, 0x3a, 0xcb, 0x06, 0x4e, 0xce, 0x6a, 0xb7, 0x5b,
-  0xb8, 0xf5, 0x51, 0x5a, 0xae, 0x3b, 0x0e, 0x26, 0xba, 0x30, 0x35, 0x7a,
-  0xb5, 0xa4, 0xc1, 0xcb, 0xaa, 0xf6, 0x92, 0xfe, 0x1f, 0x30, 0x72, 0xa8,
-  0x44, 0xee, 0x44, 0x93, 0xa8, 0x3d, 0x9f, 0x0c, 0xd6, 0x4e, 0x59, 0x15,
-  0x77, 0x7a, 0xfb, 0xa9, 0x68, 0xec, 0x89, 0xb0, 0x7f, 0x51, 0x01, 0x12,
-  0x51, 0xb2, 0x49, 0xe4, 0xba, 0x23, 0x1a, 0x4c, 0x69, 0x09, 0x89, 0x99,
-  0xbc, 0xc5, 0xd0, 0xb5, 0x33, 0x55, 0xf3, 0x79, 0x9f, 0x68, 0x59, 0x69,
-  0x56, 0xee, 0x4a, 0x9e, 0x4c, 0x72, 0x7c, 0x47, 0xc4, 0x4e, 0x8c, 0x7a,
-  0x99, 0xb1, 0x54, 0xab, 0x73, 0x9c, 0xf9, 0xb9, 0x41, 0x41, 0xaa, 0xae,
-  0x49, 0x2a, 0x4e, 0xd6, 0x85, 0xa1, 0xf4, 0xd1, 0xcd, 0x3a, 0x16, 0x76,
-  0xd6, 0xea, 0x84, 0xe6, 0x32, 0xd1, 0xcb, 0x4a, 0x05, 0x0c, 0xda, 0xbe,
-  0x59, 0x7a, 0x1f, 0x8a, 0x9f, 0xcc, 0x72, 0x78, 0xe4, 0x45, 0xe9, 0xee,
-  0x6d, 0xba, 0x19, 0x16, 0x90, 0x09, 0x94, 0x15, 0x31, 0x4f, 0xe7, 0xf3,
-  0x53, 0xc9, 0xd0, 0x7a, 0x24, 0xf4, 0xe0, 0xc9, 0xab, 0x6b, 0x7b, 0x34,
-  0xb8, 0x1f, 0x52, 0x9a, 0x1b, 0x78, 0x1c, 0x34, 0xb5, 0x89, 0xb1, 0xaf,
-  0xa2, 0x14, 0x7d, 0x7d, 0x5a, 0x80, 0xeb, 0xac, 0x8b, 0xe8, 0xa5, 0x23,
-  0xe7, 0xa1, 0x83, 0xb0, 0xfa, 0xbc, 0xab, 0xf8, 0xd3, 0x9a, 0x73, 0xc3,
-  0xd6, 0xe5, 0xaa, 0x1e, 0x1d, 0x9a, 0x5f, 0xa8, 0x21, 0x2f, 0x12, 0xdd,
-  0x00, 0x15, 0xc8, 0xca, 0xd6, 0x9d, 0xa9, 0x8d, 0x38, 0xf6, 0x46, 0x2d,
-  0x87, 0x83, 0xa5, 0xf7, 0xd6, 0xca, 0x57, 0x2c, 0x50, 0x2b, 0x3f, 0x76,
-  0x33, 0xa3, 0x19, 0x4d, 0x72, 0x62, 0x69, 0xc4, 0x57, 0x6d, 0x67, 0xbc,
-  0xa2, 0x11, 0x91, 0xe5, 0xee, 0x3b, 0x92, 0x39, 0xb4, 0xe5, 0x90, 0xb3,
-  0xda, 0x98, 0xfa, 0xa7, 0xb4, 0x53, 0x27, 0x3c, 0x8f, 0xfe, 0x6d, 0x82,
-  0xd3, 0x40, 0xd2, 0x2f, 0x8e, 0x46, 0xff, 0xf4, 0xe4, 0x36, 0xa0, 0x6a,
-  0xe8, 0x84, 0x73, 0x5c, 0xb7, 0x3d, 0xd6, 0xbb, 0x47, 0x45, 0x41, 0x0a,
-  0x98, 0x9f, 0x1a, 0xb4, 0xa6, 0x6c, 0x0e, 0x66, 0xa5, 0x3b, 0xda, 0xef,
-  0xcb, 0x57, 0xdc, 0xf2, 0x3d, 0x49, 0xfd, 0xe9, 0x55, 0x9a, 0x3b, 0x7a,
-  0x53, 0xc6, 0xe6, 0x9e, 0x9d, 0x17, 0xfa, 0x38, 0x76, 0x0a, 0x17, 0xb9,
-  0xf2, 0x90, 0x25, 0xdf, 0x77, 0x19, 0xe6, 0x45, 0x4c, 0x80, 0x4f, 0xb2,
-  0x36, 0xcb, 0xd2, 0x8f, 0x35, 0x37, 0x62, 0x79, 0x0f, 0xa2, 0x13, 0x73,
-  0x42, 0x16, 0x84, 0xa8, 0xc9, 0xf5, 0x41, 0xf2, 0x5d, 0x71, 0x97, 0xb1,
-  0x15, 0x8a, 0xc5, 0xd4, 0x1c, 0x76, 0x14, 0x92, 0x68, 0xee, 0xb2, 0x64,
-  0x46, 0x12, 0x14, 0xad, 0x26, 0x5f, 0xa2, 0xfc, 0x19, 0x8d, 0xd3, 0x8b,
-  0xde, 0xc5, 0x1d, 0x77, 0xeb, 0x26, 0xe1, 0x76, 0xf2, 0x52, 0x4e, 0x44,
-  0xb2, 0xc9, 0x97, 0xf4, 0x18, 0x8b, 0xb5, 0xa8, 0xfd, 0x2c, 0xdc, 0x7a,
-  0x10, 0xdb, 0xac, 0x82, 0xc3, 0x85, 0x1b, 0x8b, 0x46, 0x90, 0x7c, 0x31,
-  0xd8, 0x7d, 0x31, 0xd8, 0x19, 0x40, 0xa4, 0xce, 0x6e, 0xf3, 0x62, 0x59,
-  0x51, 0xef, 0x3c, 0x94, 0x24, 0x78, 0x33, 0x2b, 0x21, 0x6a, 0x17, 0x57,
-  0x57, 0x53, 0xb9, 0xc0, 0xb7, 0x8b, 0xcb, 0xcb, 0xe0, 0x8e, 0x2f, 0xb3,
-  0x85, 0x88, 0xf2, 0x58, 0x1c, 0x3d, 0x74, 0xc2, 0xe3, 0xc2, 0xcb, 0x5d,
-  0x97, 0xd3, 0x2b, 0xc6, 0xfd, 0x3f, 0xd0, 0x46, 0xf7, 0x8d, 0x1b, 0xf5,
-  0x89, 0x19, 0xb5, 0xac, 0x8c, 0x6f, 0x61, 0x8d, 0x09, 0xaf, 0x44, 0xcf,
-  0xba, 0x44, 0x60, 0xcb, 0x99, 0xb4, 0xdc, 0x87, 0xd4, 0x42, 0xe2, 0xd8,
-  0x59, 0x60, 0xe3, 0x09, 0x88, 0x8c, 0x98, 0xd3, 0x7c, 0x92, 0x96, 0xa4,
-  0x42, 0xc3, 0x54, 0x44, 0x0f, 0xe3, 0xb4, 0xa5, 0x42, 0xee, 0x3d, 0xe1,
-  0x79, 0x9e, 0xc4, 0xfa, 0xfb, 0x18, 0x60, 0xa8, 0x4e, 0x1b, 0xd7, 0xa1,
-  0xab, 0xa0, 0x92, 0x91, 0xa9, 0x28, 0x9a, 0x7a, 0xc9, 0xc4, 0x33, 0x6f,
-  0x53, 0x36, 0x2f, 0x8b, 0xe9, 0xb4, 0xb8, 0xc3, 0x25, 0x02, 0x61, 0x32,
-  0xd8, 0x56, 0xdb, 0x8e, 0xaa, 0x2a, 0xc6, 0xb9, 0xd8, 0x8a, 0x74, 0xd1,
-  0x59, 0x41, 0x66, 0xc3, 0x26, 0x5e, 0xad, 0xf4, 0x76, 0x87, 0xd8, 0x5a,
-  0x11, 0x27, 0x49, 0x9c, 0xc2, 0xcf, 0xd6, 0xa1, 0x56, 0x73, 0xfe, 0xd2,
-  0x93, 0x23, 0xa9, 0xac, 0x98, 0x46, 0x92, 0x43, 0x1f, 0xbb, 0x33, 0x65,
-  0x3d, 0x1f, 0x7b, 0xd6, 0x18, 0x1c, 0xd5, 0x5e, 0xab, 0xb9, 0x6a, 0x49,
-  0x6d, 0xd0, 0x7a, 0x4f, 0x72, 0x98, 0x04, 0x49, 0x7b, 0x12, 0x2b, 0x9f,
-  0xc8, 0xfa, 0xf4, 0xda, 0x78, 0x59, 0xd5, 0x24, 0x68, 0x5a, 0xaf, 0xd2,
-  0x14, 0xf5, 0x4b, 0x24, 0x79, 0x00, 0x3a, 0x6b, 0x35, 0x47, 0x44, 0xf7,
-  0xc5, 0xe0, 0xc9, 0xf3, 0xc1, 0x4e, 0x40, 0x08, 0x3b, 0x58, 0x67, 0xa8,
-  0x56, 0xbb, 0x83, 0x9d, 0xd6, 0xe3, 0x9b, 0xb8, 0xd3, 0xb7, 0x6c, 0xc9,
-  0x1b, 0x6b, 0xce, 0xb7, 0xbd, 0x9d, 0x03, 0x7a, 0x33, 0xbc, 0xc9, 0xe4,
-  0xce, 0xce, 0xbd, 0x45, 0xca, 0xf5, 0x4e, 0x3b, 0x3c, 0x67, 0x71, 0x50,
-  0xee, 0x43, 0xba, 0xcf, 0xf7, 0xa5, 0xa5, 0xdd, 0xc1, 0x6e, 0xb0, 0xf5,
-  0x3a, 0x9c, 0xdd, 0xf8, 0x70, 0xba, 0x04, 0xd0, 0x1a, 0xcc, 0xae, 0x09,
-  0xcd, 0x22, 0x29, 0xb9, 0x7e, 0x5b, 0xcd, 0x99, 0xaa, 0xa6, 0x2f, 0xda,
-  0x92, 0xe9, 0x22, 0x3d, 0x69, 0x2c, 0x12, 0x8f, 0x68, 0xef, 0x13, 0x96,
-  0x87, 0xc9, 0x24, 0x27, 0x2d, 0x0b, 0xfd, 0xd2, 0x86, 0xf8, 0xad, 0x91,
-  0x55, 0xe1, 0xa1, 0xee, 0xc9, 0x00, 0x23, 0xa4, 0xc3, 0x17, 0x0b, 0x5f,
-  0x0c, 0x18, 0xf9, 0x92, 0xee, 0xad, 0x72, 0xca, 0x5a, 0x93, 0xd9, 0x3a,
-  0x89, 0x91, 0x10, 0x7f, 0xcb, 0xa7, 0xb5, 0x12, 0xa4, 0x98, 0xa5, 0xd0,
-  0xd7, 0xa0, 0x3d, 0xba, 0xc7, 0x66, 0x43, 0xa7, 0x3f, 0x2f, 0xca, 0xfe,
-  0xcd, 0xbc, 0xb8, 0x23, 0xd6, 0x72, 0x95, 0xfd, 0x9e, 0xd9, 0xcd, 0x49,
-  0x79, 0xb9, 0x38, 0x19, 0xca, 0xb4, 0x9a, 0x53, 0x6d, 0x35, 0x87, 0x27,
-  0xb6, 0xf7, 0xdc, 0xbd, 0xce, 0x7f, 0xd2, 0x56, 0x25, 0xef, 0x17, 0x57,
-  0x65, 0x3a, 0xc9, 0x54, 0x65, 0x74, 0x6b, 0x90, 0xf0, 0xe0, 0x92, 0x64,
-  0xd5, 0xe8, 0x44, 0xf1, 0xe2, 0xed, 0x55, 0xe5, 0xca, 0xd6, 0xa2, 0xb2,
-  0xae, 0x2a, 0xd2, 0x06, 0x58, 0x4d, 0x4f, 0xef, 0xd2, 0xfb, 0x81, 0xb8,
-  0x09, 0xdc, 0x18, 0x5b, 0xcd, 0x89, 0xb9, 0xba, 0x56, 0x5d, 0x57, 0x1b,
-  0x08, 0x79, 0x16, 0x2d, 0xfc, 0xbd, 0x9e, 0xe5, 0x79, 0x76, 0x55, 0xd4,
-  0xca, 0x31, 0x4c, 0x93, 0x6f, 0x35, 0x67, 0xb4, 0xa8, 0xd6, 0x10, 0xac,
-  0x90, 0x53, 0xe9, 0x06, 0x6b, 0xf1, 0x95, 0x09, 0xf6, 0x72, 0x9e, 0xd8,
-  0xf5, 0x9a, 0xa8, 0x4d, 0xe7, 0x21, 0xda, 0x68, 0x35, 0xd7, 0xa5, 0x14,
-  0xda, 0x34, 0x6b, 0x1b, 0xa6, 0xa2, 0x90, 0x30, 0x9e, 0xbe, 0x68, 0x12,
-  0x06, 0x5d, 0x93, 0xf3, 0xc5, 0xbc, 0xd5, 0xe2, 0x6b, 0xb9, 0x9e, 0xb9,
-  0xdb, 0x77, 0x67, 0xef, 0x78, 0x3a, 0xc4, 0x97, 0xb3, 0xb9, 0x1c, 0x1b,
-  0x7c, 0xc4, 0xba, 0xbe, 0xdd, 0xf8, 0x6c, 0xa0, 0xb6, 0xd3, 0x45, 0xea,
-  0xd1, 0x8a, 0x01, 0x06, 0x23, 0x34, 0x53, 0x11, 0xbc, 0x11, 0xf4, 0x75,
-  0x99, 0x92, 0x3e, 0xcf, 0x33, 0x75, 0x7b, 0x4a, 0x9d, 0x48, 0x4f, 0x9d,
-  0x63, 0x23, 0x9a, 0x2a, 0x8c, 0x8d, 0xd6, 0x70, 0xf3, 0x4d, 0x39, 0x71,
-  0x58, 0x04, 0xb7, 0x71, 0xf6, 0x19, 0x1e, 0xea, 0xb7, 0x9a, 0xe3, 0x65,
-  0xe2, 0xf1, 0xf0, 0xf6, 0x0b, 0x6d, 0xa9, 0x8e, 0x8a, 0x63, 0x43, 0x2a,
-  0x38, 0x5d, 0x77, 0x7c, 0x4d, 0xac, 0x3d, 0x74, 0xe2, 0x9e, 0x77, 0x16,
-  0x36, 0x9d, 0xae, 0x5c, 0x59, 0x21, 0xe4, 0x83, 0x13, 0xac, 0x64, 0x6b,
-  0x75, 0xf9, 0x43, 0x5a, 0x5d, 0x5b, 0x5c, 0xaf, 0x7d, 0xae, 0x5e, 0xd9,
-  0xdf, 0xb2, 0xb0, 0xdc, 0xc1, 0x40, 0x7e, 0xb4, 0xf9, 0x75, 0xa5, 0xab,
-  0xcb, 0x1b, 0xfa, 0xdb, 0xd7, 0xb7, 0x73, 0x97, 0x2d, 0x3e, 0xcf, 0xe2,
-  0xee, 0xe2, 0x06, 0xab, 0xa7, 0xd5, 0x6d, 0xe7, 0xc2, 0xa0, 0x69, 0x6f,
-  0xc1, 0x74, 0x06, 0x0b, 0x6e, 0x78, 0x61, 0x60, 0x8d, 0xfd, 0x7d, 0xf1,
-  0x51, 0xac, 0xbb, 0x36, 0x7c, 0x67, 0x3d, 0x4b, 0x3b, 0x0c, 0x7a, 0x56,
-  0xd0, 0xe4, 0xf8, 0x6d, 0x1d, 0xfc, 0x20, 0xb0, 0xc2, 0xb3, 0x00, 0x66,
-  0x72, 0xb4, 0x8c, 0x67, 0xb0, 0xe3, 0x86, 0x36, 0xd8, 0x6d, 0xdf, 0xed,
-  0x2c, 0x64, 0xeb, 0x97, 0xbc, 0x7e, 0x24, 0x3f, 0xd6, 0x65, 0x31, 0x75,
-  0x2c, 0xc3, 0x46, 0xc8, 0xd2, 0x12, 0xdd, 0x98, 0x63, 0xd2, 0xed, 0xe9,
-  0xee, 0xdc, 0x84, 0xc1, 0x21, 0x30, 0x0d, 0x9b, 0x92, 0x41, 0x5b, 0x3c,
-  0x4a, 0xc7, 0x37, 0x10, 0x51, 0x72, 0xf5, 0x4c, 0xd8, 0x1e, 0x89, 0x18,
-  0x91, 0x4c, 0x49, 0x70, 0x81, 0x77, 0xd1, 0x7a, 0xda, 0x0a, 0xee, 0xdc,
-  0x3d, 0x8c, 0xb4, 0xaa, 0xa6, 0xb7, 0x7b, 0xd1, 0x45, 0xb4, 0x55, 0x6c,
-  0x2c, 0x23, 0xba, 0xb4, 0x41, 0xee, 0xfd, 0xb6, 0x45, 0xc4, 0xab, 0xb6,
-  0x84, 0xc3, 0x82, 0x64, 0xbf, 0x7c, 0x66, 0x7b, 0x94, 0xbb, 0x1b, 0xce,
-  0x2e, 0x0b, 0x3c, 0x7d, 0xbb, 0xfa, 0xb8, 0x0e, 0xf4, 0xfb, 0x1c, 0x8e,
-  0xc4, 0x49, 0xc6, 0xf6, 0x43, 0x3a, 0x3d, 0x13, 0x76, 0x14, 0x92, 0x5c,
-  0x92, 0x51, 0xb3, 0x59, 0xb2, 0x09, 0x6f, 0x24, 0x9c, 0x6f, 0xcf, 0x77,
-  0xbf, 0x78, 0x1e, 0xce, 0xfc, 0x89, 0xcd, 0xfc, 0xc9, 0xef, 0x9b, 0xf9,
-  0x93, 0xcf, 0x3d, 0xf3, 0x27, 0x8f, 0xcc, 0xfc, 0xc9, 0xa7, 0xce, 0xfc,
-  0x8b, 0x67, 0xcf, 0xbf, 0x0c, 0x67, 0xfe, 0x14, 0x33, 0xcf, 0x17, 0xb7,
-  0x4f, 0xdb, 0x22, 0x36, 0x4b, 0xbf, 0xaa, 0xec, 0xd4, 0x0d, 0x71, 0x8b,
-  0xee, 0xa0, 0x62, 0x7a, 0x9b, 0xa9, 0x04, 0x4a, 0x1f, 0x1c, 0x9f, 0xdd,
-  0x3e, 0x85, 0x4e, 0x03, 0x25, 0x20, 0x13, 0x33, 0x64, 0x8c, 0xd0, 0x61,
-  0x46, 0x09, 0x55, 0x52, 0x18, 0xc3, 0xe1, 0x3b, 0x08, 0x46, 0xf3, 0x5c,
-  0x47, 0xf3, 0x3c, 0x36, 0x9a, 0x4f, 0x1e, 0xcc, 0xf3, 0x60, 0x30, 0xbf,
-  0x75, 0x34, 0x4f, 0x83, 0xd1, 0xa4, 0x18, 0x4d, 0xba, 0x80, 0x97, 0xb7,
-  0x4d, 0x16, 0x6f, 0xe8, 0xbe, 0x46, 0xa0, 0xc0, 0x96, 0xf9, 0x8c, 0xd4,
-  0x67, 0x36, 0x77, 0x0e, 0x76, 0xd6, 0x2d, 0xe1, 0xcf, 0xd6, 0xb1, 0x4a,
-  0x3b, 0x6a, 0x41, 0x69, 0x4b, 0x32, 0x69, 0x09, 0x37, 0x18, 0xdb, 0x98,
-  0x03, 0xfd, 0x89, 0xfe, 0x47, 0x24, 0xe2, 0xdc, 0xbc, 0xb8, 0xb8, 0x61,
-  0x4c, 0x92, 0x9b, 0xc2, 0x38, 0x11, 0x5e, 0x6a, 0x4b, 0xb5, 0x45, 0x56,
-  0xc1, 0xa4, 0x40, 0x73, 0xcb, 0xe1, 0xe0, 0x87, 0x0a, 0xec, 0x3c, 0x7d,
-  0x44, 0xc4, 0xe2, 0xf8, 0x01, 0xdf, 0x7a, 0x87, 0x26, 0x54, 0x9e, 0xa0,
-  0xe1, 0x5e, 0x4e, 0xd3, 0xab, 0xee, 0xed, 0x9a, 0x5f, 0xcd, 0x0b, 0xf5,
-  0xb7, 0x57, 0x44, 0xac, 0x1c, 0x20, 0xa1, 0xe4, 0x5b, 0x11, 0x27, 0x9a,
-  0x8f, 0xa7, 0x4b, 0xf6, 0xbb, 0x9e, 0xd2, 0x04, 0x87, 0xc3, 0xef, 0x42,
-  0xea, 0x3a, 0xc0, 0x0a, 0x42, 0x5d, 0xe9, 0xa7, 0x57, 0xd0, 0x5c, 0x5e,
-  0xca, 0x0f, 0x12, 0xcb, 0xe8, 0x85, 0xaf, 0xe2, 0xd2, 0xe6, 0x50, 0xed,
-  0x13, 0xec, 0x43, 0xc2, 0xab, 0x07, 0xc1, 0x3b, 0x2c, 0xc8, 0xf8, 0x75,
-  0x94, 0x5b, 0x46, 0x8f, 0x52, 0x9b, 0x19, 0x62, 0xac, 0x34, 0xe3, 0x74,
-  0x02, 0x95, 0x5a, 0xec, 0xe2, 0xc9, 0xe1, 0xb7, 0xc7, 0x70, 0x8c, 0xa5,
-  0xf9, 0x54, 0x8c, 0xb6, 0x3c, 0x6d, 0x5a, 0xc3, 0x6c, 0x0a, 0x7d, 0x5c,
-  0x56, 0xad, 0xca, 0x1a, 0x2e, 0x20, 0xfd, 0x6f, 0xfd, 0x6d, 0xf1, 0x77,
-  0x5a, 0xc2, 0x74, 0xfb, 0xe9, 0x60, 0x67, 0x9d, 0x84, 0xf7, 0x82, 0xae,
-  0xe3, 0x71, 0x31, 0xc9, 0x92, 0xd1, 0x34, 0x9d, 0xdf, 0x54, 0x22, 0xb2,
-  0x89, 0x30, 0xca, 0x23, 0xed, 0xe1, 0xc4, 0x96, 0x65, 0xb1, 0x84, 0xba,
-  0xd8, 0xdd, 0x72, 0x9d, 0x8e, 0xca, 0x93, 0x6a, 0x8c, 0x17, 0xef, 0x1f,
-  0x51, 0x4d, 0x79, 0x63, 0x56, 0x7f, 0xdc, 0x2a, 0x2c, 0xff, 0x8d, 0x32,
-  0x1e, 0x98, 0xdd, 0x9c, 0xad, 0xe6, 0xfa, 0xdf, 0xb1, 0x0a, 0x47, 0x84,
-  0x83, 0xe8, 0x0a, 0x39, 0x28, 0x85, 0x39, 0x08, 0x3a, 0x17, 0xe9, 0xf1,
-  0xa5, 0x4c, 0x5c, 0x1f, 0xcc, 0x2b, 0x21, 0x60, 0x53, 0x6a, 0x99, 0x1d,
-  0x49, 0xbc, 0xc6, 0x34, 0xad, 0x6a, 0x36, 0x22, 0x32, 0xf9, 0xa8, 0x11,
-  0x2a, 0x54, 0xd3, 0xd2, 0xf9, 0x3d, 0xe2, 0x4d, 0x3e, 0x45, 0x4d, 0xbb,
-  0xcc, 0xaf, 0xc0, 0x8a, 0xd8, 0xa4, 0xc7, 0x21, 0x2a, 0x16, 0x99, 0x02,
-  0xbd, 0xff, 0xba, 0x60, 0x02, 0x23, 0x8d, 0x22, 0x9b, 0x5e, 0xc6, 0xce,
-  0x2b, 0xf3, 0x5c, 0x1e, 0x13, 0x5b, 0x47, 0x94, 0xaf, 0x61, 0x68, 0x62,
-  0x35, 0xe5, 0xd3, 0x80, 0x88, 0x86, 0x64, 0x3c, 0x4d, 0xf3, 0x59, 0x15,
-  0x88, 0xbc, 0x83, 0x18, 0x37, 0x81, 0x69, 0x1f, 0x6f, 0x8f, 0xe0, 0xae,
-  0x29, 0x2b, 0x98, 0xe1, 0xb0, 0x21, 0xa9, 0xa9, 0x07, 0xe2, 0x0c, 0xb9,
-  0xce, 0xc6, 0x37, 0x4c, 0x76, 0x81, 0x89, 0xba, 0xcd, 0x85, 0x65, 0xd5,
-  0xa1, 0xee, 0xd7, 0xd7, 0x4b, 0xa8, 0x2d, 0x05, 0xc9, 0x2f, 0x70, 0xf9,
-  0xc2, 0x85, 0xb1, 0x1c, 0xf3, 0x36, 0xc3, 0x07, 0xfa, 0x91, 0x94, 0x11,
-  0xba, 0x22, 0x6a, 0x0e, 0x07, 0x62, 0xc2, 0xe8, 0x13, 0x11, 0x2c, 0x56,
-  0x8d, 0x4e, 0xe5, 0xae, 0x06, 0x3f, 0xa8, 0xd4, 0xcb, 0xc4, 0x0e, 0x1c,
-  0x33, 0x22, 0xb4, 0x56, 0xb3, 0xd5, 0x9c, 0xac, 0x6d, 0x0f, 0x3e, 0xcc,
-  0x1c, 0xc6, 0x08, 0x6f, 0x08, 0x24, 0x2d, 0x47, 0xcd, 0x54, 0xa3, 0xb4,
-  0xca, 0xc7, 0x20, 0xa0, 0x49, 0x7e, 0x95, 0x81, 0x63, 0x90, 0xb0, 0x5a,
-  0x4f, 0x67, 0xbd, 0x88, 0xad, 0x04, 0xf6, 0x18, 0x15, 0xf1, 0x3a, 0x64,
-  0xe5, 0xb9, 0x89, 0x28, 0xba, 0x8e, 0x3a, 0xcc, 0xf8, 0x1e, 0x9a, 0x62,
-  0x73, 0xb1, 0x8a, 0x63, 0x14, 0xca, 0x33, 0xdb, 0x7c, 0x87, 0xfd, 0x67,
-  0x74, 0x50, 0x88, 0xb9, 0xf4, 0x70, 0x42, 0xc6, 0xec, 0xd5, 0x80, 0xc5,
-  0xd8, 0xcc, 0xd5, 0x66, 0x77, 0xe7, 0xb3, 0x01, 0x57, 0xe6, 0x5d, 0x3e,
-  0xce, 0xcc, 0x9b, 0x3c, 0x8f, 0x98, 0x9f, 0xc6, 0xd3, 0x1c, 0xcf, 0xcd,
-  0x96, 0x15, 0x7b, 0xb8, 0x44, 0xa5, 0xc1, 0x25, 0x72, 0x47, 0x5b, 0x35,
-  0x90, 0x73, 0x91, 0x89, 0x29, 0xb6, 0xba, 0x66, 0xf7, 0x49, 0x5a, 0xe6,
-  0xec, 0xe9, 0xec, 0x34, 0x27, 0x63, 0xc6, 0x34, 0x79, 0x9c, 0x3a, 0x4c,
-  0x56, 0xcb, 0xc4, 0x99, 0xe0, 0xed, 0x50, 0x7c, 0x76, 0xc0, 0x73, 0x82,
-  0x83, 0x33, 0xc2, 0x22, 0x4b, 0xa0, 0x55, 0xf2, 0x12, 0x97, 0xd7, 0x2b,
-  0x4c, 0x66, 0x05, 0x4b, 0x4c, 0xce, 0xd8, 0xc1, 0x7a, 0xdd, 0xf4, 0x34,
-  0x04, 0xbc, 0x4f, 0xec, 0x71, 0xd2, 0x1c, 0x7b, 0xa3, 0xf3, 0x2a, 0x2e,
-  0x2f, 0x10, 0x49, 0x4d, 0xef, 0x7d, 0x4b, 0x0b, 0x6f, 0x74, 0xa4, 0xbd,
-  0xc9, 0xf2, 0x5b, 0x8b, 0x6c, 0x08, 0x64, 0x73, 0x0e, 0x05, 0x49, 0xd6,
-  0x87, 0x59, 0xdd, 0x6e, 0xee, 0x90, 0xfb, 0xdb, 0x5f, 0x4f, 0x82, 0x98,
-  0x12, 0x69, 0x57, 0x17, 0x6f, 0x94, 0x99, 0xfa, 0x2b, 0x66, 0xbe, 0x64,
-  0x1d, 0x01, 0x89, 0xbb, 0xaf, 0x7e, 0x38, 0x38, 0x79, 0x7f, 0xb4, 0xfb,
-  0xe7, 0x36, 0xf9, 0xd0, 0x77, 0x7b, 0xf2, 0xdd, 0xde, 0x7a, 0x8c, 0x67,
-  0xcd, 0x8b, 0x64, 0xe3, 0xd5, 0x46, 0x52, 0xdd, 0xcf, 0x46, 0xc5, 0xd4,
-  0x71, 0x2d, 0xed, 0x01, 0x43, 0xe8, 0xa9, 0x53, 0xcd, 0x42, 0x1b, 0x52,
-  0x8e, 0x4c, 0xe4, 0x2b, 0xb2, 0x3d, 0x76, 0x76, 0xae, 0xb3, 0x2d, 0x83,
-  0x2d, 0xca, 0xa0, 0x81, 0x74, 0x12, 0xae, 0x47, 0x55, 0xf3, 0xa5, 0xa7,
-  0x5b, 0x84, 0xd6, 0xc5, 0xa3, 0xdb, 0x93, 0x83, 0xd4, 0x66, 0xe7, 0x6e,
-  0xc2, 0x7e, 0x4c, 0xb9, 0x53, 0x65, 0x40, 0xec, 0x35, 0xe2, 0x6d, 0x68,
-  0x0d, 0x60, 0x98, 0x7b, 0x5f, 0x09, 0x4f, 0xc1, 0x29, 0x97, 0xf3, 0xd9,
-  0x66, 0x78, 0xac, 0xf1, 0xc3, 0x19, 0x7e, 0x9b, 0x22, 0x1c, 0x44, 0x2e,
-  0x16, 0x1d, 0x0b, 0x5d, 0x3c, 0x57, 0x30, 0xe8, 0xca, 0x81, 0xf6, 0x71,
-  0x73, 0xcc, 0x67, 0x71, 0xc4, 0xca, 0xae, 0xcd, 0x8f, 0xce, 0x1d, 0xba,
-  0xd4, 0xc8, 0x3e, 0x04, 0x6b, 0xea, 0x3c, 0xf8, 0x3c, 0xd1, 0xb0, 0x61,
-  0x9b, 0xb8, 0xd7, 0x43, 0xb9, 0x51, 0x66, 0x7a, 0x82, 0xc5, 0xb3, 0xdc,
-  0x26, 0x7d, 0x6a, 0x6c, 0x94, 0xcf, 0x85, 0xb6, 0xbd, 0x71, 0x33, 0xe9,
-  0x9f, 0x80, 0xa6, 0xa7, 0x85, 0x32, 0x75, 0x6f, 0xbe, 0x57, 0xef, 0xb9,
-  0xd2, 0x40, 0xd4, 0x2e, 0x2c, 0xee, 0x75, 0xdd, 0x05, 0x1b, 0xa5, 0x1c,
-  0x2c, 0xb7, 0xb2, 0x0b, 0xe2, 0xeb, 0x73, 0xa1, 0x7a, 0x65, 0xb9, 0x24,
-  0x9e, 0xaf, 0xa2, 0x4a, 0xda, 0xbf, 0xfb, 0x69, 0xb6, 0x95, 0xa8, 0x09,
-  0xf8, 0x5d, 0x56, 0x73, 0x08, 0xca, 0xb6, 0xde, 0xe2, 0xb6, 0x96, 0xc1,
-  0xc0, 0x3a, 0x14, 0xc7, 0xc1, 0x7f, 0x12, 0x02, 0xe9, 0xdd, 0xe7, 0xc2,
-  0x31, 0xc3, 0xd3, 0x6b, 0x8e, 0x77, 0xde, 0x78, 0x8e, 0x7a, 0x5b, 0x2c,
-  0x49, 0x52, 0x7b, 0x57, 0x74, 0x56, 0x4d, 0x66, 0x65, 0x37, 0x29, 0xe4,
-  0x3a, 0x52, 0xf1, 0xed, 0x34, 0xa3, 0x23, 0x16, 0x2b, 0x98, 0xf0, 0x7c,
-  0x0c, 0xa6, 0xbb, 0xf7, 0xda, 0x8c, 0x78, 0xec, 0xc7, 0xd0, 0xff, 0x6b,
-  0x6a, 0xb7, 0x7e, 0x67, 0x16, 0x47, 0x1f, 0xb3, 0x12, 0x5a, 0x23, 0x98,
-  0xfe, 0x52, 0xb6, 0xcc, 0x79, 0xab, 0xe1, 0xa3, 0xd1, 0x9d, 0x6e, 0x08,
-  0x04, 0x1c, 0xca, 0xa9, 0xc1, 0x09, 0xed, 0xcd, 0xb2, 0x10, 0x08, 0x26,
-  0x9c, 0x62, 0x4c, 0x44, 0x37, 0x70, 0x2e, 0x4e, 0x73, 0xce, 0x34, 0x4e,
-  0xb9, 0x2e, 0x6f, 0x0f, 0x5b, 0xd1, 0x21, 0xa5, 0xd4, 0x56, 0xd8, 0xdd,
-  0xee, 0x09, 0xb6, 0x54, 0xf7, 0x50, 0x29, 0x06, 0xc3, 0x11, 0x27, 0x99,
-  0x8f, 0x2a, 0x9b, 0x14, 0x33, 0xa2, 0x86, 0x5e, 0x97, 0x94, 0x2c, 0xd8,
-  0xcd, 0xf6, 0x86, 0x2f, 0x06, 0x08, 0xfa, 0xf0, 0xad, 0xc9, 0x5b, 0xc9,
-  0x26, 0x09, 0x3a, 0x34, 0xcb, 0x4b, 0xf8, 0xad, 0xcd, 0xa1, 0xcc, 0x1e,
-  0xab, 0xf6, 0x0d, 0xc4, 0x8e, 0x83, 0x6c, 0xb2, 0x95, 0xb4, 0x42, 0x23,
-  0x66, 0xc5, 0x44, 0xc8, 0x81, 0x8d, 0x4e, 0xc2, 0x28, 0xfb, 0x10, 0xcf,
-  0x1c, 0x0b, 0xbe, 0x8c, 0x6c, 0x99, 0x0e, 0x4a, 0x8f, 0x6f, 0x60, 0xd0,
-  0x49, 0x39, 0x6c, 0x54, 0xf9, 0x2d, 0xe2, 0x38, 0x1d, 0x33, 0x37, 0x77,
-  0x0e, 0xfb, 0x73, 0x62, 0x2c, 0x8c, 0x67, 0x3c, 0x2a, 0xea, 0x6b, 0x47,
-  0x57, 0x3c, 0x61, 0x6c, 0x62, 0x72, 0xb9, 0x44, 0xd8, 0xab, 0x8f, 0x88,
-  0x60, 0x4a, 0x83, 0xdd, 0x46, 0xe2, 0xb0, 0x3b, 0x96, 0xa3, 0x1b, 0xf6,
-  0x26, 0xd2, 0x0c, 0x5d, 0x60, 0x0f, 0xcc, 0xe6, 0xb8, 0xad, 0xc1, 0xdb,
-  0x0b, 0xd3, 0xaa, 0x78, 0x99, 0xb1, 0x5d, 0x6c, 0x05, 0xae, 0x54, 0x60,
-  0x4e, 0x3b, 0x4a, 0x08, 0x2f, 0x35, 0x8b, 0xc5, 0xc1, 0x96, 0x26, 0x9b,
-  0x22, 0x67, 0xf1, 0x40, 0x78, 0xc8, 0xa2, 0x40, 0xc0, 0x52, 0x31, 0xea,
-  0xcb, 0x4b, 0x15, 0x8e, 0x6d, 0xd7, 0xc4, 0xd7, 0x38, 0xc8, 0xab, 0x0e,
-  0xed, 0x3f, 0x4f, 0xb4, 0xfd, 0x46, 0x75, 0x97, 0x7e, 0x5a, 0x8d, 0xf3,
-  0x3c, 0xa6, 0x00, 0x22, 0xa2, 0x7c, 0x2b, 0x39, 0xe2, 0x4d, 0x4c, 0x0e,
-  0x86, 0x87, 0xc7, 0xc7, 0x6e, 0xad, 0x07, 0x12, 0xad, 0xc5, 0xa1, 0xe4,
-  0xca, 0xe8, 0x59, 0xe6, 0x12, 0xc6, 0x3e, 0x6a, 0x6f, 0x65, 0x06, 0x3f,
-  0xd8, 0xd8, 0xcc, 0x6c, 0x72, 0x22, 0xe9, 0x71, 0xb8, 0xab, 0x78, 0xa1,
-  0x68, 0x13, 0x2a, 0xf5, 0x62, 0xfe, 0xb9, 0xbe, 0x5f, 0x64, 0xaf, 0x0e,
-  0xd6, 0x07, 0xa1, 0x52, 0xdc, 0x26, 0xb4, 0x74, 0x09, 0xdd, 0x57, 0xae,
-  0x62, 0x16, 0x8c, 0xc0, 0x56, 0x26, 0x1a, 0x69, 0xa2, 0xb7, 0x32, 0xbc,
-  0xc6, 0x33, 0x28, 0x30, 0x97, 0xec, 0x6b, 0x9f, 0x3f, 0xd9, 0xa3, 0x9b,
-  0x95, 0x64, 0xcd, 0x59, 0x15, 0xca, 0xf7, 0x2c, 0x1a, 0x7e, 0xaa, 0x13,
-  0x46, 0x98, 0x73, 0xf2, 0x0d, 0xde, 0x69, 0x8b, 0xa5, 0xc1, 0x4d, 0xb1,
-  0xc2, 0xa6, 0x86, 0x10, 0x36, 0xe7, 0x77, 0xcb, 0xed, 0xd2, 0x33, 0x4b,
-  0xa7, 0x48, 0x75, 0xad, 0x9d, 0x5d, 0xc2, 0x93, 0xd4, 0x11, 0x72, 0x88,
-  0x6a, 0xa7, 0x44, 0xa7, 0xbd, 0x64, 0x39, 0xc7, 0x4f, 0xc7, 0x9a, 0x72,
-  0x9e, 0x3e, 0x74, 0xea, 0x12, 0xc1, 0x8b, 0x0d, 0xf1, 0x07, 0x34, 0x1c,
-  0x5d, 0x4b, 0xf1, 0x32, 0xf0, 0xa1, 0x04, 0xb7, 0xf2, 0x5e, 0xb8, 0x15,
-  0x4a, 0xcc, 0xa6, 0xf9, 0xeb, 0x54, 0x86, 0xee, 0xc8, 0xcf, 0x26, 0x63,
-  0xd3, 0xaa, 0x07, 0xc2, 0xf4, 0x56, 0x87, 0x92, 0xdf, 0x57, 0x1c, 0x2d,
-  0x73, 0x95, 0x71, 0xbc, 0xa0, 0xdc, 0x3b, 0x4b, 0xd3, 0xa7, 0xc5, 0x72,
-  0xf8, 0x51, 0x1d, 0xb8, 0x1f, 0xef, 0x3b, 0x6f, 0x0f, 0xb3, 0x4c, 0x88,
-  0x4d, 0x1f, 0x90, 0x8d, 0x0c, 0x76, 0xb6, 0x7d, 0x7d, 0xbc, 0x64, 0x3e,
-  0x0c, 0x9e, 0xf2, 0x98, 0x5e, 0x5e, 0xa8, 0xe4, 0xc0, 0x2f, 0xb8, 0x80,
-  0x20, 0xa3, 0x03, 0x89, 0x63, 0xe2, 0x48, 0x7c, 0xbd, 0xc3, 0xda, 0x2c,
-  0x9f, 0xd9, 0xae, 0xc4, 0xce, 0xd2, 0xfd, 0x02, 0x39, 0xcd, 0x89, 0xca,
-  0x83, 0xe4, 0x90, 0x8d, 0xd7, 0x68, 0xa3, 0xe2, 0x46, 0xec, 0xd6, 0xf4,
-  0x5b, 0xd5, 0xa1, 0x9e, 0xd4, 0x45, 0xe3, 0xfa, 0x6b, 0x9a, 0xc7, 0x46,
-  0x9b, 0x70, 0x97, 0x71, 0xc4, 0x63, 0xa3, 0x29, 0x27, 0xe9, 0xf2, 0x6b,
-  0x71, 0x62, 0x14, 0x16, 0xb9, 0x59, 0x6d, 0x0d, 0x54, 0xf0, 0xb4, 0x97,
-  0x71, 0x65, 0xc2, 0x21, 0x45, 0xb2, 0xfe, 0xbc, 0x90, 0x13, 0x16, 0x5e,
-  0xe8, 0x6d, 0x61, 0x84, 0xd8, 0x67, 0x20, 0x01, 0xb5, 0xaf, 0x7e, 0x77,
-  0xf5, 0x66, 0x89, 0x67, 0x6c, 0x4e, 0xcc, 0x8b, 0x58, 0x76, 0x94, 0xe9,
-  0x89, 0x19, 0x88, 0xaf, 0x70, 0x31, 0x56, 0x38, 0x49, 0x45, 0xee, 0x04,
-  0x4e, 0xb6, 0x11, 0x93, 0x02, 0x82, 0x5a, 0x7a, 0xc9, 0x7a, 0x7f, 0xbd,
-  0xb7, 0xf2, 0x42, 0x8a, 0x8a, 0x24, 0xc2, 0x2e, 0x22, 0x32, 0x11, 0x07,
-  0x39, 0x74, 0xc2, 0x0a, 0x34, 0x9e, 0x52, 0x05, 0xd6, 0xa8, 0xb8, 0xca,
-  0x27, 0xa9, 0xad, 0x9c, 0x7a, 0xfb, 0x98, 0x08, 0xae, 0x4c, 0xd7, 0x12,
-  0x88, 0xc9, 0x43, 0x1b, 0x24, 0x07, 0x73, 0x09, 0x98, 0x85, 0xf3, 0x0d,
-  0x13, 0xb3, 0x2e, 0x58, 0xd2, 0x6f, 0xaf, 0x76, 0xe1, 0xee, 0x89, 0x86,
-  0x88, 0xb6, 0x42, 0x34, 0x52, 0x75, 0x4f, 0x1f, 0xc2, 0x21, 0x20, 0x1e,
-  0xbd, 0xc1, 0x17, 0xbc, 0xda, 0xc8, 0x38, 0x0c, 0xc9, 0x2d, 0x8a, 0xdc,
-  0x1b, 0x77, 0xd7, 0xc5, 0x54, 0x84, 0xed, 0x56, 0x73, 0x5e, 0xe1, 0x4b,
-  0xee, 0x58, 0x5a, 0x11, 0x3b, 0x13, 0x6c, 0x8c, 0x10, 0x37, 0xca, 0x8c,
-  0x5d, 0x1f, 0xb0, 0x04, 0x94, 0x25, 0xfc, 0xf6, 0xd3, 0x2c, 0x2d, 0xa7,
-  0xf7, 0xa6, 0x0d, 0xf4, 0x6f, 0x63, 0xfe, 0x48, 0x98, 0x05, 0x89, 0xc2,
-  0xd2, 0x72, 0x8e, 0x67, 0x34, 0x0c, 0xc3, 0x32, 0x10, 0x6a, 0x09, 0x8c,
-  0x91, 0xe8, 0x1d, 0x88, 0xa0, 0xb7, 0x39, 0x0c, 0x0f, 0x44, 0x6c, 0xa4,
-  0xc0, 0xb6, 0x29, 0x11, 0x7e, 0x01, 0x26, 0x19, 0x6e, 0x52, 0xa2, 0x0e,
-  0xaf, 0x39, 0x9b, 0x46, 0xad, 0x15, 0x74, 0x14, 0xaf, 0xe9, 0x86, 0xac,
-  0xf2, 0x7a, 0x99, 0x46, 0x97, 0x6b, 0xc8, 0x2a, 0xf8, 0x17, 0x83, 0xa7,
-  0x4f, 0x06, 0x3b, 0x5e, 0x93, 0xe0, 0x7b, 0x1c, 0x01, 0x2a, 0xf9, 0x4c,
-  0x93, 0xb7, 0x54, 0x21, 0xeb, 0xc8, 0x71, 0x9d, 0xf9, 0x59, 0x78, 0x97,
-  0x8a, 0x0a, 0x4c, 0xbb, 0x96, 0x6c, 0x91, 0x7d, 0xd4, 0xd6, 0x46, 0xf7,
-  0x21, 0xdb, 0xff, 0x07, 0xee, 0x7b, 0xb9, 0xf0, 0xc3, 0x48, 0xd8, 0xc8,
-  0x01, 0xe3, 0x31, 0xac, 0x10, 0x08, 0x0e, 0x85, 0xa2, 0x88, 0xe3, 0xcf,
-  0x97, 0x24, 0x15, 0xd4, 0xc9, 0xcb, 0xe2, 0xf2, 0x92, 0xce, 0xdf, 0x57,
-  0x1d, 0x05, 0x44, 0x1e, 0xd9, 0x3e, 0xe7, 0x2c, 0x29, 0xbe, 0x36, 0x8c,
-  0x7d, 0x25, 0xcd, 0x40, 0xe2, 0x44, 0x3d, 0xb9, 0x57, 0x39, 0x28, 0x44,
-  0x9a, 0x1b, 0x44, 0xd4, 0x90, 0xf0, 0x7b, 0xdb, 0x71, 0x89, 0x80, 0xb2,
-  0x8c, 0x2a, 0x36, 0x0f, 0x8d, 0xee, 0x55, 0x59, 0x4c, 0xeb, 0x6e, 0x6a,
-  0x87, 0x69, 0xaa, 0x37, 0xf9, 0x62, 0x01, 0x0a, 0x92, 0x9c, 0x0c, 0x66,
-  0x40, 0x4e, 0xe5, 0x1f, 0x65, 0x74, 0x54, 0x99, 0xd4, 0x2c, 0x8c, 0xa8,
-  0x58, 0x92, 0x5c, 0x22, 0x83, 0x1e, 0x65, 0xb4, 0x8f, 0xed, 0xe6, 0x4c,
-  0xe1, 0xf6, 0x81, 0xb8, 0xaa, 0xcf, 0x4c, 0x10, 0x74, 0x3b, 0x57, 0xae,
-  0x8e, 0x6d, 0xf2, 0xb1, 0x7d, 0x6a, 0xee, 0x89, 0x71, 0x24, 0x6f, 0x5a,
-  0x76, 0x5c, 0x66, 0x78, 0xfc, 0x3f, 0x8e, 0x7c, 0xd8, 0xb4, 0x8b, 0x4b,
-  0xbe, 0xe7, 0x23, 0x18, 0xbb, 0x35, 0x13, 0x62, 0x77, 0x87, 0xb4, 0x5f,
-  0xeb, 0x3c, 0x14, 0x5c, 0x00, 0x76, 0x37, 0xd1, 0x8d, 0x5d, 0x20, 0xda,
-  0x48, 0x22, 0xcc, 0x39, 0x5b, 0x0b, 0x14, 0x78, 0x47, 0xfc, 0x25, 0xdb,
-  0xe6, 0x10, 0xaf, 0xa2, 0x73, 0x1d, 0xf0, 0x16, 0x72, 0x60, 0xa7, 0x13,
-  0xed, 0x8e, 0x6b, 0x11, 0xbb, 0x59, 0xc8, 0xf2, 0xdb, 0xa7, 0xa1, 0xab,
-  0xdb, 0xac, 0x00, 0x6a, 0xe4, 0x75, 0x97, 0x41, 0xa9, 0x15, 0x54, 0xe2,
-  0x4c, 0x97, 0x9f, 0x53, 0x80, 0xed, 0x8f, 0xf3, 0xc5, 0x35, 0x34, 0xb5,
-  0x97, 0x1c, 0xce, 0x06, 0x73, 0xb0, 0x7c, 0xf0, 0x55, 0xd4, 0xc9, 0x35,
-  0xd4, 0x83, 0x51, 0xe9, 0xf5, 0x6e, 0x6f, 0x2b, 0x53, 0xcd, 0x4d, 0xb1,
-  0xb2, 0x00, 0x79, 0x0d, 0xa1, 0xa4, 0xa6, 0xdb, 0x7c, 0xd0, 0x75, 0x24,
-  0x86, 0x36, 0x53, 0xda, 0x38, 0xe0, 0xdf, 0xbe, 0x1a, 0x24, 0xe7, 0x6c,
-  0xd5, 0x5c, 0x2e, 0x24, 0x22, 0x1d, 0x2e, 0x31, 0xfd, 0xae, 0xa3, 0x97,
-  0x54, 0x75, 0x23, 0x64, 0x87, 0xf3, 0xf4, 0xc2, 0xfe, 0xe6, 0x0d, 0x71,
-  0x2d, 0x0f, 0xbe, 0x23, 0x01, 0x7a, 0xbf, 0x6d, 0xad, 0x85, 0x8f, 0x79,
-  0x7f, 0x7b, 0xfb, 0xee, 0xee, 0x6e, 0x40, 0x1c, 0x7b, 0x5e, 0x55, 0xd3,
-  0x41, 0x51, 0x5e, 0x6d, 0x4f, 0x8a, 0x71, 0xb5, 0x9d, 0x2e, 0x16, 0xd5,
-  0xb6, 0x8d, 0xb0, 0x91, 0x67, 0x65, 0x36, 0xaa, 0xe1, 0xd0, 0x4d, 0x0e,
-  0xac, 0x8a, 0x4d, 0xc8, 0x4e, 0x26, 0x64, 0xd3, 0x1a, 0x31, 0x78, 0xf1,
-  0x84, 0x9c, 0xa8, 0xe1, 0xfa, 0xdb, 0xf9, 0xf2, 0xe2, 0x64, 0x28, 0xe6,
-  0xb1, 0xf6, 0x7d, 0x8e, 0x24, 0xa0, 0xc4, 0xb6, 0x27, 0x6c, 0x9c, 0xed,
-  0x2e, 0xa2, 0xf1, 0x0c, 0x87, 0x87, 0xfc, 0xe1, 0x70, 0x09, 0xc9, 0x8a,
-  0xba, 0x29, 0xef, 0x13, 0xf5, 0xd8, 0xb4, 0x89, 0x9f, 0xa6, 0x9b, 0x7c,
-  0xea, 0x7f, 0xb6, 0x10, 0x57, 0x79, 0x3d, 0xb8, 0xcc, 0x26, 0x45, 0x99,
-  0x76, 0x0c, 0xdb, 0x05, 0x72, 0xe1, 0x78, 0x75, 0xc6, 0xf4, 0xd4, 0x36,
-  0x69, 0x0b, 0x1f, 0x68, 0xbd, 0x06, 0xf8, 0x9d, 0x8d, 0x31, 0xb2, 0x68,
-  0xf6, 0x31, 0xd6, 0xeb, 0x0f, 0xaf, 0x59, 0x99, 0xa6, 0xf3, 0x50, 0x7d,
-  0x4e, 0xc2, 0x26, 0xc9, 0x91, 0xfd, 0x7b, 0x93, 0xb8, 0xa8, 0x7a, 0x6e,
-  0x26, 0xfc, 0xc4, 0x3f, 0xe9, 0xa3, 0xb5, 0xdb, 0xe9, 0xc7, 0x24, 0x1c,
-  0x5e, 0x15, 0x74, 0xc9, 0x5f, 0xcf, 0xda, 0xeb, 0xc9, 0x7c, 0xc3, 0x3c,
-  0xe8, 0x6c, 0x0d, 0x27, 0x3d, 0xfc, 0xd6, 0x0c, 0x15, 0xcb, 0x79, 0xd0,
-  0x3a, 0x51, 0xc2, 0x98, 0x38, 0x05, 0x92, 0x81, 0xcc, 0x49, 0xd7, 0xd9,
-  0x1e, 0x0b, 0x54, 0xf5, 0xc6, 0xfd, 0x54, 0x9d, 0x43, 0x5e, 0xf7, 0x9f,
-  0x73, 0xca, 0x02, 0xb5, 0xed, 0x93, 0xa1, 0xd9, 0xcf, 0x04, 0x8f, 0x52,
-  0x6c, 0x74, 0xbc, 0x44, 0x2d, 0xd1, 0xa2, 0xb9, 0x54, 0x7c, 0x5e, 0xfb,
-  0x58, 0x5e, 0xf0, 0xba, 0x97, 0x15, 0xc9, 0x59, 0xd4, 0xc9, 0x57, 0x9d,
-  0x58, 0xcf, 0x8f, 0xf9, 0x6c, 0x39, 0xe3, 0x6d, 0x00, 0xe5, 0xe9, 0x63,
-  0x7a, 0x97, 0x88, 0xb5, 0x08, 0xc6, 0x10, 0xe9, 0x76, 0x03, 0xfa, 0xac,
-  0xe3, 0x04, 0x11, 0x6f, 0x59, 0x8d, 0x28, 0x27, 0xef, 0x46, 0x86, 0x70,
-  0x42, 0x64, 0x3e, 0x43, 0xc0, 0x58, 0x93, 0x8b, 0x24, 0x8b, 0xeb, 0xb4,
-  0xca, 0x38, 0x8b, 0x22, 0xbf, 0x94, 0x29, 0x85, 0xd9, 0x30, 0x8d, 0xa4,
-  0x18, 0xcd, 0x94, 0xf3, 0x1c, 0x97, 0x04, 0xae, 0xbc, 0x98, 0x48, 0x84,
-  0x2f, 0x0b, 0xf8, 0x72, 0xf1, 0x26, 0x7d, 0xb4, 0x85, 0xdb, 0xc2, 0x1c,
-  0x9f, 0x6d, 0x75, 0xfb, 0x23, 0xfb, 0x52, 0x45, 0xa0, 0x31, 0x1f, 0xfe,
-  0x17, 0x83, 0x27, 0x7b, 0x08, 0xd6, 0x68, 0x18, 0xc2, 0x24, 0x77, 0x88,
-  0x98, 0xce, 0x38, 0x9f, 0xb9, 0x80, 0xec, 0xd5, 0xca, 0x16, 0x4b, 0x9e,
-  0x33, 0xc8, 0x09, 0xb3, 0xf4, 0x23, 0xaf, 0xf9, 0x3f, 0x2e, 0xb7, 0x3c,
-  0x7e, 0x1a, 0x58, 0x56, 0x25, 0xbd, 0xb2, 0x6c, 0x13, 0x1c, 0xfb, 0xa6,
-  0x9d, 0x1f, 0x89, 0xb7, 0xec, 0xaf, 0x44, 0xb5, 0x2a, 0xb0, 0x6b, 0x08,
-  0x4e, 0xdf, 0x62, 0x94, 0x7b, 0x01, 0x45, 0x49, 0x9b, 0x11, 0x43, 0x2d,
-  0xed, 0x04, 0x11, 0x3c, 0x62, 0x88, 0x60, 0xe8, 0x45, 0x64, 0x30, 0xce,
-  0x7b, 0x41, 0x7f, 0x5f, 0xe7, 0x34, 0xf2, 0x72, 0x7c, 0x7d, 0x0f, 0x7d,
-  0x0b, 0x2e, 0x14, 0x31, 0x1b, 0x05, 0x71, 0x04, 0x6d, 0xfa, 0xe5, 0x3e,
-  0x54, 0xcf, 0xc7, 0xe8, 0x13, 0x9c, 0x1f, 0x7a, 0xce, 0xe4, 0x84, 0xd6,
-  0xe8, 0xa0, 0x08, 0xe0, 0xe4, 0x66, 0xd3, 0x8a, 0x2d, 0x6c, 0x91, 0xd1,
-  0xf5, 0x8b, 0x40, 0x0d, 0xe2, 0xeb, 0x19, 0x4a, 0x5a, 0x5e, 0xb2, 0xed,
-  0xf1, 0xd2, 0x77, 0x04, 0x3f, 0x92, 0xf4, 0xc5, 0x21, 0xbe, 0xd0, 0x21,
-  0xef, 0xbb, 0x34, 0x02, 0x2d, 0x5d, 0xdf, 0xb7, 0xb5, 0x37, 0xdf, 0x79,
-  0x47, 0x2f, 0x2a, 0x6c, 0x3e, 0xa6, 0x41, 0xda, 0xc2, 0xe4, 0x96, 0x39,
-  0x2a, 0x6c, 0x07, 0x02, 0x0e, 0x0d, 0x46, 0x40, 0x06, 0xc0, 0xc9, 0xfb,
-  0xfd, 0xcb, 0xba, 0xe3, 0xa8, 0x09, 0xb6, 0xb4, 0xb9, 0xd3, 0xd3, 0x4b,
-  0x88, 0x97, 0x44, 0x23, 0x75, 0x72, 0xf2, 0x06, 0x57, 0xf3, 0xe1, 0x39,
-  0xfd, 0xcc, 0x2d, 0xec, 0x00, 0xca, 0x04, 0x63, 0x04, 0xc0, 0xa6, 0xf3,
-  0xf6, 0x87, 0x61, 0xb2, 0x79, 0x3a, 0xdc, 0x7e, 0xf2, 0x62, 0xa7, 0x6b,
-  0x5d, 0xd8, 0x04, 0x90, 0x81, 0x06, 0xa2, 0x4b, 0x18, 0xe0, 0x4e, 0x33,
-  0x5a, 0x0d, 0x7d, 0x61, 0x29, 0xd9, 0x2e, 0x10, 0x35, 0x09, 0x0c, 0xb7,
-  0x01, 0xc5, 0xb0, 0xe5, 0x92, 0x41, 0x25, 0x5f, 0x47, 0xe7, 0x79, 0x76,
-  0xf4, 0xd6, 0xcc, 0xb7, 0x12, 0x09, 0x43, 0x72, 0x31, 0x8d, 0x1a, 0x0e,
-  0xcb, 0x2e, 0x61, 0x9d, 0x67, 0xb7, 0xe6, 0x35, 0x48, 0x4e, 0xf8, 0xba,
-  0x67, 0xb6, 0x03, 0x0b, 0xb3, 0x09, 0x0f, 0x8b, 0x0c, 0x22, 0xa1, 0x6f,
-  0x41, 0x39, 0x13, 0xee, 0xe0, 0x0e, 0xf3, 0x19, 0x65, 0x61, 0x0c, 0x0c,
-  0x49, 0xde, 0xc8, 0xd8, 0xfd, 0x7c, 0x27, 0x30, 0x12, 0x9d, 0xb6, 0xfb,
-  0x62, 0xf0, 0xc5, 0x96, 0x5b, 0xcb, 0x49, 0xcf, 0xb2, 0x49, 0x5e, 0x3e,
-  0xe0, 0xe4, 0x1b, 0x66, 0xc2, 0x6f, 0xc3, 0xf4, 0x6a, 0x7e, 0x89, 0x1d,
-  0x70, 0x9c, 0x55, 0x65, 0xae, 0x69, 0xf6, 0x5b, 0xf1, 0x1d, 0x84, 0x57,
-  0xdb, 0x02, 0xbe, 0xa2, 0x6c, 0x04, 0x01, 0x09, 0xec, 0xeb, 0x82, 0x02,
-  0xad, 0x8b, 0x96, 0x8c, 0xca, 0xe2, 0x0e, 0x56, 0x24, 0x4e, 0x6f, 0x62,
-  0xea, 0x4c, 0x25, 0xaa, 0xfc, 0x3a, 0xed, 0x78, 0x61, 0x69, 0xce, 0x2e,
-  0xb8, 0xe5, 0xbb, 0x8b, 0xb7, 0x27, 0x92, 0xdb, 0x83, 0x9b, 0x6b, 0xa1,
-  0x31, 0x36, 0x3c, 0xe6, 0xe5, 0x88, 0xb8, 0x3b, 0xd4, 0xd2, 0x5a, 0x44,
-  0x43, 0x1c, 0xfb, 0x08, 0xeb, 0x65, 0xd3, 0xa4, 0x13, 0xc8, 0x17, 0x31,
-  0xbf, 0xa6, 0xde, 0x85, 0xe6, 0x81, 0xe2, 0xcd, 0x24, 0x05, 0x9c, 0xee,
-  0xb0, 0xfb, 0x45, 0x9b, 0x72, 0x48, 0x60, 0x9b, 0xaa, 0x01, 0x6e, 0xfb,
-  0x63, 0x9f, 0x64, 0xba, 0x3e, 0x46, 0xd7, 0xa7, 0xe6, 0x25, 0x3a, 0x03,
-  0x2c, 0xe8, 0x90, 0x6e, 0x69, 0xa1, 0x93, 0xa4, 0xff, 0x06, 0x5b, 0x81,
-  0x47, 0x3a, 0xdb, 0x17, 0xec, 0x92, 0x2a, 0x58, 0xbc, 0x6c, 0x6c, 0xc8,
-  0xc3, 0xa7, 0x62, 0x06, 0x1e, 0xd8, 0x5f, 0x65, 0x7a, 0xc7, 0xe9, 0x45,
-  0x53, 0x8e, 0x46, 0x88, 0xc4, 0x77, 0xe0, 0x65, 0x28, 0xe9, 0x2e, 0x83,
-  0x8c, 0x13, 0xc0, 0x53, 0x4b, 0xb7, 0x96, 0x88, 0x74, 0x5a, 0xc1, 0x3a,
-  0xad, 0x7d, 0x1e, 0x49, 0xf2, 0xb5, 0x26, 0x6a, 0x77, 0xed, 0x48, 0x25,
-  0x3b, 0x87, 0x80, 0xd8, 0xa1, 0xae, 0x5b, 0xd2, 0x22, 0xe8, 0x56, 0x85,
-  0x23, 0xae, 0xbc, 0xef, 0x99, 0x35, 0x48, 0x9c, 0x65, 0x3e, 0x68, 0x60,
-  0x95, 0xf3, 0x48, 0x26, 0x21, 0x2f, 0x27, 0xce, 0x55, 0xc7, 0x7c, 0x8c,
-  0x84, 0xc8, 0xbe, 0x86, 0xb6, 0x60, 0x44, 0x92, 0xfd, 0x05, 0xc0, 0x07,
-  0xd9, 0x78, 0x8e, 0x95, 0x69, 0x35, 0xc7, 0xe9, 0xd0, 0x29, 0xbb, 0xc0,
-  0xac, 0x69, 0xb7, 0x03, 0xb1, 0x73, 0xe7, 0x33, 0xd0, 0x82, 0x78, 0x49,
-  0x3b, 0x80, 0x1c, 0xea, 0xc8, 0x62, 0x34, 0x27, 0x1e, 0x29, 0x7a, 0x81,
-  0xd0, 0x30, 0x09, 0x5c, 0xfd, 0x8e, 0x09, 0x09, 0x32, 0x94, 0x78, 0x7f,
-  0xd5, 0x62, 0xcc, 0x79, 0x5b, 0x8b, 0x1c, 0x37, 0x55, 0xc3, 0x73, 0x27,
-  0x87, 0x77, 0x96, 0x95, 0x57, 0x81, 0x65, 0x35, 0x62, 0x95, 0xf0, 0xd9,
-  0x24, 0xac, 0x1d, 0xff, 0x6b, 0x5f, 0x3c, 0xce, 0x7c, 0x9b, 0x2d, 0xc5,
-  0x25, 0xc7, 0x5f, 0x6c, 0x20, 0xa1, 0x4d, 0x7d, 0xf7, 0x73, 0x5a, 0x16,
-  0x10, 0x51, 0x57, 0xdb, 0x9e, 0x4e, 0x5f, 0x4d, 0x49, 0xf3, 0xbf, 0xdf,
-  0x48, 0x34, 0x23, 0x53, 0x03, 0xbb, 0x6b, 0xb5, 0x0c, 0x70, 0xae, 0xcf,
-  0xf8, 0x7a, 0x39, 0xbf, 0x31, 0xcd, 0x7d, 0x5a, 0x14, 0x08, 0x28, 0x82,
-  0x43, 0xa6, 0xd5, 0xdc, 0x46, 0xd0, 0xdb, 0xbf, 0x86, 0x6d, 0xc7, 0x56,
-  0x99, 0xf3, 0xe0, 0x39, 0x19, 0xd0, 0x9d, 0x30, 0x77, 0xad, 0x0a, 0xac,
-  0x42, 0xf2, 0x75, 0xcf, 0x22, 0x5b, 0x6a, 0x4f, 0x3c, 0x88, 0x11, 0x4b,
-  0xbb, 0x5c, 0x20, 0x0b, 0x9c, 0xe6, 0x6c, 0x74, 0x75, 0xad, 0x8a, 0x5b,
-  0x1c, 0xf6, 0x6c, 0x8b, 0xea, 0x68, 0x58, 0x84, 0xf1, 0x70, 0xe4, 0xae,
-  0xf6, 0xf8, 0x40, 0x1c, 0x3b, 0x31, 0x48, 0xde, 0x86, 0xb9, 0xd6, 0xad,
-  0xc8, 0x27, 0xdb, 0xc5, 0x41, 0x72, 0x46, 0xeb, 0xd5, 0xef, 0xf8, 0xb7,
-  0xaf, 0x6c, 0xdb, 0x25, 0x68, 0x24, 0x0d, 0x47, 0x3c, 0x49, 0x36, 0x2e,
-  0x8b, 0x62, 0x94, 0x96, 0x1b, 0xba, 0x01, 0x1c, 0xa6, 0x33, 0x52, 0xe5,
-  0x0d, 0x4b, 0x12, 0x3d, 0x1d, 0xc9, 0xd7, 0xf2, 0xd6, 0x40, 0xc4, 0xa8,
-  0x80, 0x37, 0x14, 0xd3, 0x89, 0x5b, 0x84, 0x76, 0x87, 0x91, 0x4d, 0xc3,
-  0xa6, 0x92, 0x6c, 0x95, 0x96, 0x65, 0x0e, 0xe0, 0x03, 0x3a, 0xf2, 0xcb,
-  0x72, 0x2e, 0x89, 0xc9, 0xf3, 0xec, 0x4e, 0x22, 0x0b, 0x9c, 0xf3, 0x0e,
-  0x11, 0x41, 0x40, 0x4a, 0x80, 0x69, 0x40, 0x37, 0xb1, 0xe3, 0x58, 0x83,
-  0x6d, 0x51, 0x52, 0xf7, 0x03, 0x8e, 0x51, 0x8b, 0x83, 0xef, 0x61, 0x2e,
-  0x83, 0x13, 0x16, 0x67, 0x05, 0xcc, 0xcf, 0x84, 0x6b, 0x04, 0x12, 0xc7,
-  0x6b, 0xe6, 0x89, 0xcb, 0xd9, 0xc2, 0x42, 0xcb, 0xa2, 0xd2, 0xc0, 0x8f,
-  0x6c, 0xf2, 0xd7, 0x8c, 0x64, 0x41, 0x48, 0x30, 0x07, 0xbd, 0xb1, 0xf4,
-  0x86, 0x61, 0x3e, 0x6e, 0x55, 0x0e, 0xd5, 0x23, 0x89, 0x46, 0x70, 0x30,
-  0x03, 0xb4, 0xfc, 0x01, 0x5c, 0x81, 0x7a, 0xc8, 0xd1, 0xae, 0x76, 0x13,
-  0x73, 0xd9, 0xa4, 0x1a, 0x2a, 0xc0, 0x21, 0x61, 0xa2, 0x57, 0xd1, 0xab,
-  0xd4, 0xcc, 0x40, 0x23, 0x04, 0x82, 0x04, 0x7d, 0x37, 0x5c, 0xd8, 0xc4,
-  0xa6, 0x93, 0x98, 0x53, 0x99, 0x4f, 0x85, 0xec, 0x78, 0xae, 0x09, 0xf4,
-  0xac, 0x21, 0x39, 0x10, 0xac, 0xb9, 0x13, 0x61, 0x1c, 0x0a, 0x8e, 0xda,
-  0xa1, 0x3b, 0x0b, 0xde, 0xb0, 0x4a, 0xff, 0x0b, 0x9b, 0x51, 0x56, 0x78,
-  0xf3, 0x25, 0x83, 0x75, 0x24, 0x87, 0x55, 0x2e, 0xf0, 0xa2, 0x13, 0x48,
-  0x18, 0x84, 0x0b, 0x74, 0x56, 0xb6, 0xa5, 0x01, 0x88, 0xd4, 0x49, 0xfd,
-  0x05, 0x76, 0x36, 0xa7, 0x17, 0x0b, 0x25, 0xa6, 0x65, 0x28, 0x3d, 0x75,
-  0x24, 0x2b, 0xcc, 0x6b, 0x5d, 0x97, 0x6b, 0x5d, 0x9d, 0x72, 0x4b, 0x79,
-  0x0b, 0xaa, 0x31, 0x73, 0x85, 0xf2, 0xb3, 0x46, 0x1c, 0xfa, 0xcb, 0x38,
-  0x2e, 0x4e, 0x41, 0x19, 0xf3, 0x97, 0x79, 0xe7, 0x4d, 0xbd, 0xf3, 0x1e,
-  0x92, 0xc4, 0x2e, 0xd4, 0x2e, 0x5e, 0xab, 0x0b, 0x95, 0x2d, 0xad, 0x53,
-  0xd6, 0x6b, 0x5a, 0x81, 0x20, 0xa4, 0x1d, 0x68, 0x5c, 0x1f, 0x48, 0xbf,
-  0x23, 0xc5, 0x23, 0xfa, 0x07, 0xa1, 0xe0, 0x44, 0x8f, 0x55, 0x91, 0xdd,
-  0x86, 0xb9, 0x8d, 0x7e, 0x5d, 0xf4, 0xe6, 0x96, 0xac, 0xed, 0x4f, 0xe2,
-  0xd4, 0x3e, 0x24, 0x26, 0xc6, 0xa6, 0x05, 0x3a, 0x25, 0x79, 0xad, 0xdc,
-  0x6a, 0xc1, 0x46, 0x1c, 0x05, 0xf4, 0x91, 0xc4, 0xf8, 0xc4, 0xe0, 0x7c,
-  0x38, 0x40, 0x2a, 0x5c, 0xd1, 0x48, 0x20, 0x31, 0xb2, 0x18, 0x3f, 0x72,
-  0x4e, 0xab, 0xde, 0x4e, 0x8e, 0x67, 0x49, 0x48, 0x44, 0x9b, 0xab, 0x49,
-  0x9e, 0x02, 0xd3, 0xd6, 0x24, 0x12, 0xc6, 0x39, 0x66, 0xed, 0xa5, 0x72,
-  0x29, 0xc2, 0xf3, 0x8c, 0xf3, 0x3f, 0x68, 0xc3, 0x7f, 0x27, 0xcd, 0xc8,
-  0x01, 0x66, 0xe0, 0xa5, 0x20, 0xd1, 0x33, 0x22, 0xf3, 0x48, 0x94, 0xa7,
-  0xf8, 0xa9, 0x24, 0x16, 0x9b, 0x17, 0x3a, 0xad, 0x14, 0xa6, 0x6b, 0x24,
-  0xab, 0xf4, 0x00, 0xe9, 0x80, 0x47, 0x3e, 0x44, 0x37, 0x1d, 0xc2, 0xd1,
-  0xf5, 0x9e, 0x32, 0x2b, 0xd3, 0x0b, 0x04, 0x32, 0xa1, 0xb9, 0x3e, 0x94,
-  0x35, 0x76, 0xe8, 0xe6, 0x71, 0xf9, 0x90, 0xe5, 0xc1, 0x16, 0xa5, 0x3b,
-  0x1d, 0x24, 0x96, 0xf1, 0xf9, 0xb4, 0x95, 0xfe, 0xd7, 0x14, 0xd2, 0x7e,
-  0xcb, 0x71, 0xe8, 0x39, 0x32, 0x52, 0xe6, 0x2e, 0xfe, 0x39, 0x9d, 0x9e,
-  0x49, 0x73, 0x91, 0x6b, 0x55, 0x9c, 0x16, 0x20, 0x25, 0x0e, 0xe3, 0x77,
-  0x51, 0xe7, 0x8b, 0xac, 0x84, 0x64, 0x59, 0x79, 0xc9, 0x93, 0x76, 0xb0,
-  0x99, 0xa3, 0xb6, 0xfb, 0x25, 0x46, 0xdf, 0x51, 0xb9, 0xe9, 0x04, 0x1c,
-  0x7e, 0x7b, 0xcc, 0xe6, 0xc0, 0x69, 0x4e, 0x97, 0x83, 0x9c, 0x11, 0x99,
-  0x8b, 0xa0, 0xa2, 0xb9, 0xa3, 0x72, 0x95, 0xbb, 0x08, 0x84, 0xb4, 0x99,
-  0x2a, 0xde, 0x8a, 0xf5, 0x49, 0x2c, 0xa6, 0x47, 0x91, 0x02, 0x34, 0x38,
-  0x47, 0x75, 0x10, 0x17, 0x75, 0x9b, 0x7a, 0x13, 0x78, 0x74, 0xed, 0xb8,
-  0x77, 0x4d, 0xdc, 0x87, 0x96, 0x23, 0x8e, 0x11, 0xbe, 0x2b, 0x3a, 0xf6,
-  0x47, 0x4f, 0xb6, 0x82, 0x32, 0x97, 0x55, 0xfb, 0x6b, 0x1d, 0x4f, 0x2d,
-  0x77, 0x1f, 0x87, 0x81, 0xe4, 0x0d, 0x6a, 0xc5, 0x01, 0xb6, 0xa4, 0x78,
-  0x1b, 0x3e, 0xab, 0x6d, 0x69, 0x55, 0x45, 0xbd, 0xb1, 0xce, 0x9e, 0x4e,
-  0xa4, 0xf4, 0xdf, 0x60, 0xb9, 0x67, 0x4d, 0x9a, 0x4e, 0x29, 0x2c, 0x0a,
-  0x55, 0xe1, 0x13, 0x0f, 0xad, 0x35, 0x4b, 0x34, 0xc0, 0xdf, 0x69, 0x27,
-  0xb6, 0xcb, 0x9d, 0xfa, 0xfb, 0xe4, 0x15, 0xa4, 0xc3, 0xaf, 0x35, 0x72,
-  0x13, 0x96, 0xd4, 0x2a, 0x08, 0x00, 0xd2, 0x0b, 0x96, 0xc7, 0xae, 0x0a,
-  0x2b, 0x2f, 0x43, 0xbc, 0x39, 0x0e, 0xa1, 0x0c, 0x57, 0x4f, 0xc8, 0x0f,
-  0x70, 0x1e, 0x95, 0x20, 0x0d, 0xfe, 0x4b, 0x7b, 0xf1, 0x5e, 0x3d, 0xbe,
-  0x7a, 0xbf, 0x75, 0xf9, 0x1e, 0x5e, 0xbd, 0x8b, 0x6b, 0x49, 0xd6, 0xca,
+  0x6b, 0x5b, 0x23, 0x47, 0x96, 0x2e, 0x0c, 0x7f, 0xe7, 0x57, 0xe4, 0xd0,
+  0x6f, 0x0f, 0xd0, 0x2d, 0x89, 0x43, 0x1d, 0xec, 0xa2, 0xab, 0x3c, 0xc6,
+  0x14, 0x65, 0x33, 0xa6, 0x0a, 0x36, 0xa2, 0x6c, 0xf7, 0xb6, 0x7d, 0xd5,
+  0x95, 0x92, 0x12, 0xc8, 0x46, 0x52, 0xaa, 0x33, 0x53, 0x50, 0xf4, 0x4c,
+  0xef, 0xdf, 0xfe, 0xae, 0x7b, 0x1d, 0x22, 0x22, 0x33, 0x43, 0x50, 0x76,
+  0xb7, 0xfb, 0xd9, 0xcf, 0x7e, 0xb6, 0x67, 0xba, 0x00, 0x29, 0x33, 0x8e,
+  0x2b, 0x56, 0xac, 0xe3, 0xbd, 0x92, 0xe4, 0xb1, 0xff, 0x3e, 0xf0, 0xff,
+  0x3e, 0xd0, 0x7f, 0xf4, 0x73, 0x2d, 0x49, 0xce, 0xca, 0xe2, 0x2f, 0xd9,
+  0xb8, 0x8e, 0x3f, 0xfb, 0xe1, 0xc3, 0x7f, 0x27, 0xf2, 0x7f, 0xf4, 0xce,
+  0x4f, 0xf4, 0x73, 0xed, 0xc1, 0xb6, 0xb7, 0x13, 0xff, 0xc2, 0x7f, 0x7f,
+  0xd8, 0x4a, 0x1e, 0x7b, 0xe1, 0xbf, 0x93, 0x4d, 0x7e, 0xe1, 0x83, 0xf6,
+  0xf0, 0x12, 0xbf, 0x7f, 0xf8, 0xf0, 0x70, 0x27, 0x3f, 0x61, 0x54, 0xf8,
+  0x67, 0x1b, 0xef, 0xfd, 0xf4, 0x01, 0xbf, 0xd2, 0x27, 0x6b, 0x6b, 0xef,
+  0x0e, 0xde, 0x1e, 0xd9, 0xab, 0xe3, 0x65, 0x39, 0x4d, 0xfa, 0x49, 0x5d,
+  0xa6, 0xf3, 0xea, 0x32, 0x2b, 0x93, 0x34, 0x79, 0x7f, 0x7e, 0xb2, 0xb6,
+  0x36, 0xfc, 0xf3, 0xbb, 0xd3, 0xb3, 0xe1, 0xf1, 0xb0, 0xf1, 0xd8, 0x8f,
+  0xc5, 0xa2, 0xce, 0x8b, 0x79, 0xf5, 0x73, 0xf2, 0x23, 0x3d, 0x34, 0x18,
+  0x0c, 0x7e, 0x5e, 0x5b, 0x7b, 0x7d, 0x34, 0x3c, 0x3c, 0x3f, 0x3e, 0xbb,
+  0x38, 0x3e, 0x7d, 0xd7, 0x78, 0x36, 0xc9, 0xab, 0x84, 0x1a, 0xab, 0x8b,
+  0x62, 0x4a, 0xff, 0xf8, 0xf6, 0x27, 0x69, 0x9d, 0x26, 0x97, 0x65, 0x31,
+  0x4b, 0x8a, 0x12, 0x5f, 0xa4, 0x49, 0x95, 0x95, 0xb7, 0x59, 0xd9, 0x4b,
+  0x96, 0x55, 0x3e, 0xbf, 0x4a, 0x8a, 0x79, 0x96, 0x14, 0x97, 0x49, 0x7d,
+  0x9d, 0x59, 0x73, 0xd5, 0x72, 0xb1, 0x28, 0xca, 0x3a, 0x9b, 0x24, 0x8b,
+  0xb2, 0xa8, 0x8b, 0x71, 0x31, 0xad, 0x92, 0xcd, 0xd7, 0xc7, 0x87, 0x17,
+  0xbd, 0xe4, 0xcd, 0xf1, 0xc9, 0x11, 0xfd, 0x7b, 0x71, 0xc6, 0xff, 0x0c,
+  0x7b, 0xc9, 0xd7, 0xa7, 0x67, 0xdf, 0x1c, 0x9d, 0xf7, 0x92, 0x6f, 0x2e,
+  0xf0, 0x19, 0xfe, 0xa5, 0x0f, 0x93, 0xe3, 0xb7, 0x07, 0x67, 0x3d, 0x6b,
+  0x0e, 0x7f, 0xe0, 0xc3, 0x93, 0xd7, 0xf4, 0xa1, 0xfc, 0xc0, 0x9f, 0x67,
+  0xa7, 0x67, 0x4f, 0xf4, 0x07, 0xfe, 0x3c, 0xbf, 0x78, 0x4b, 0xdf, 0x9e,
+  0x5f, 0x0c, 0xe9, 0xdf, 0xe1, 0x21, 0xfe, 0xe1, 0x5e, 0x86, 0x6f, 0xbf,
+  0xe2, 0x7f, 0x86, 0xae, 0xb9, 0xe1, 0x5b, 0xf9, 0x9c, 0x7b, 0xba, 0x38,
+  0x3a, 0x79, 0x77, 0x74, 0x91, 0xa4, 0xf3, 0x49, 0x72, 0x41, 0xcf, 0x6f,
+  0x0d, 0x92, 0x8b, 0xeb, 0x2c, 0x19, 0x17, 0xb3, 0x19, 0x3e, 0xa2, 0x15,
+  0x99, 0x64, 0x55, 0x7e, 0x35, 0xa7, 0xa9, 0xd0, 0xcc, 0xef, 0x8a, 0xf2,
+  0x26, 0x49, 0xee, 0xf2, 0xfa, 0xba, 0x58, 0xd6, 0xd6, 0xdc, 0x92, 0x56,
+  0x23, 0xc9, 0xe7, 0x75, 0x56, 0xa6, 0x63, 0xac, 0xf5, 0x60, 0xad, 0xb1,
+  0xaa, 0xc5, 0x25, 0xad, 0x61, 0x45, 0x8b, 0x36, 0x5a, 0x56, 0xd3, 0x22,
+  0x9d, 0x60, 0xa9, 0xe8, 0x95, 0xcb, 0x25, 0x2d, 0x72, 0x99, 0x8f, 0x6f,
+  0xaa, 0x64, 0x9a, 0xdf, 0x64, 0x58, 0xa8, 0x8f, 0xf7, 0xb6, 0x70, 0x3d,
+  0x69, 0x34, 0x5d, 0xd2, 0x9a, 0xce, 0xfb, 0xd6, 0x5c, 0x9d, 0x8f, 0x53,
+  0x74, 0xc0, 0x2b, 0x97, 0x2c, 0x17, 0x68, 0x4d, 0x56, 0x2c, 0x59, 0x14,
+  0x15, 0xbd, 0x34, 0x1c, 0x9e, 0xd0, 0xc8, 0xe7, 0xf3, 0x8c, 0xc7, 0x51,
+  0xf5, 0xe8, 0x8f, 0xe2, 0x26, 0xcf, 0xe8, 0x97, 0xcb, 0x7c, 0x9a, 0x25,
+  0xb2, 0xa3, 0xae, 0x39, 0x6c, 0x6d, 0x52, 0x66, 0xd5, 0x72, 0x96, 0xd1,
+  0xea, 0xbd, 0xcd, 0xea, 0x74, 0x9a, 0xcf, 0x6f, 0xe8, 0x57, 0x4c, 0x7c,
+  0x56, 0x94, 0xd9, 0x20, 0x39, 0xa8, 0x92, 0xfb, 0x62, 0x49, 0x13, 0x9e,
+  0x4e, 0x69, 0xcf, 0xb3, 0x64, 0x94, 0x4d, 0x8b, 0xbb, 0x1e, 0x76, 0x3a,
+  0x99, 0x2f, 0x67, 0x23, 0x6a, 0xa0, 0xb8, 0xf4, 0xcd, 0xa5, 0xf5, 0x92,
+  0x9a, 0x93, 0xa7, 0x67, 0x29, 0xcd, 0x89, 0xde, 0x2d, 0x93, 0xeb, 0x8c,
+  0xe6, 0x5c, 0x2d, 0xf2, 0xf9, 0xbf, 0x35, 0xd7, 0x85, 0x96, 0x76, 0x51,
+  0xdc, 0x65, 0x25, 0xad, 0xec, 0xe8, 0x3e, 0xa1, 0x45, 0x18, 0x09, 0x11,
+  0x5e, 0x12, 0x91, 0x25, 0x29, 0x35, 0xe1, 0x08, 0xb0, 0x5f, 0x66, 0xd3,
+  0x14, 0xc4, 0xe4, 0xfa, 0x18, 0xd0, 0x26, 0x66, 0x8e, 0xda, 0xf4, 0xd5,
+  0xcd, 0x27, 0x5b, 0xfc, 0xf2, 0x84, 0x66, 0x92, 0x4f, 0x2b, 0xda, 0x06,
+  0x1c, 0x0b, 0x7d, 0x06, 0x9b, 0x8a, 0x63, 0x42, 0xb4, 0x79, 0x3f, 0xaf,
+  0xd3, 0x8f, 0xdc, 0xbd, 0xd2, 0x66, 0x7f, 0x92, 0x2d, 0xb2, 0xf9, 0x24,
+  0x9b, 0xd7, 0x83, 0xe4, 0xcf, 0xc5, 0x72, 0x83, 0xfa, 0xbe, 0xcc, 0x69,
+  0x0d, 0x52, 0x6d, 0x8a, 0x7a, 0x26, 0x22, 0x18, 0x97, 0xf9, 0x22, 0xd8,
+  0x8a, 0x62, 0x4e, 0x7b, 0x9e, 0x9c, 0xbf, 0x39, 0x4c, 0x9e, 0xbc, 0xf8,
+  0xfc, 0xb9, 0xdf, 0x73, 0x6a, 0x20, 0x19, 0xa7, 0x73, 0x9a, 0x71, 0x36,
+  0xce, 0x2f, 0xef, 0x93, 0xd9, 0x72, 0x5a, 0xe7, 0x0b, 0x5a, 0x7d, 0xea,
+  0xbc, 0xc2, 0x01, 0x5a, 0xa4, 0x65, 0x5d, 0x81, 0x08, 0xf8, 0x03, 0x9e,
+  0xfb, 0x5d, 0x99, 0xd7, 0x38, 0x48, 0xfc, 0x1d, 0x8d, 0x30, 0xab, 0x2b,
+  0x6b, 0x0e, 0xb4, 0x46, 0xfd, 0x8c, 0x88, 0xb6, 0x68, 0x69, 0xd3, 0x8a,
+  0x3a, 0xdd, 0x5f, 0xf3, 0x3c, 0xe4, 0xba, 0xae, 0x17, 0xfb, 0xdb, 0xdb,
+  0x55, 0x5e, 0x67, 0x83, 0xff, 0xa2, 0x73, 0xd8, 0xab, 0xef, 0x8a, 0x5e,
+  0x7d, 0x5d, 0x66, 0xd9, 0xdf, 0x07, 0x44, 0xc3, 0xee, 0x49, 0xea, 0xf7,
+  0x5e, 0x07, 0x76, 0x95, 0xd5, 0xd4, 0xc3, 0x5f, 0x97, 0xd9, 0x1c, 0x2d,
+  0xd2, 0x38, 0xd2, 0xe9, 0xe2, 0x3a, 0xa5, 0xed, 0xcc, 0x88, 0x1a, 0x71,
+  0xb2, 0x89, 0x60, 0x30, 0x2a, 0x39, 0xdb, 0x3f, 0xfe, 0xdc, 0xed, 0xf4,
+  0x92, 0xfb, 0xa4, 0x7f, 0x07, 0xd9, 0xc7, 0x74, 0x46, 0x73, 0x43, 0x57,
+  0xdb, 0x20, 0xb1, 0x1f, 0x77, 0xfb, 0xbb, 0x3b, 0x3b, 0x3f, 0x0f, 0xea,
+  0x8f, 0xf5, 0xa7, 0x3d, 0xbf, 0xb3, 0xe3, 0xdf, 0xc0, 0xa3, 0x9b, 0x98,
+  0x6f, 0x32, 0x25, 0x92, 0x41, 0xe7, 0x7f, 0xcb, 0xca, 0xa2, 0xda, 0xfa,
+  0xb4, 0x96, 0xd2, 0xfe, 0xdf, 0x9a, 0xfd, 0xbe, 0xcb, 0x2a, 0xa6, 0x19,
+  0x3f, 0xd7, 0x24, 0x2d, 0x89, 0x6e, 0x8b, 0xda, 0xb3, 0xa7, 0x1e, 0x1d,
+  0xca, 0xda, 0xad, 0x0c, 0x9d, 0x39, 0x7a, 0x9a, 0x18, 0x5b, 0x3a, 0x05,
+  0x4f, 0xab, 0x92, 0x79, 0xf6, 0xd1, 0x9d, 0x72, 0x3a, 0xfd, 0x59, 0x3a,
+  0xbe, 0x4e, 0x0a, 0x22, 0xfe, 0x32, 0xb2, 0x05, 0xe1, 0x80, 0xd2, 0x72,
+  0x7c, 0x9d, 0xdf, 0xd2, 0x6a, 0xbc, 0x78, 0xf1, 0xbc, 0x4f, 0xff, 0xbc,
+  0xf8, 0x79, 0xfb, 0xb6, 0x98, 0xd2, 0xe2, 0x3c, 0xfd, 0x79, 0x1b, 0x5b,
+  0xfc, 0x5f, 0x69, 0x6f, 0xd4, 0x1b, 0xff, 0x7d, 0x70, 0x5d, 0xcf, 0xa6,
+  0x2b, 0x09, 0x27, 0x9d, 0xd3, 0xff, 0x66, 0xc5, 0x72, 0x5e, 0x3b, 0x62,
+  0x21, 0x9a, 0xab, 0x03, 0xe6, 0x44, 0xc7, 0x95, 0xce, 0x28, 0x48, 0x1b,
+  0x34, 0x84, 0x53, 0x47, 0x07, 0xd4, 0x1f, 0xc7, 0x7a, 0x7c, 0x4d, 0xf3,
+  0x27, 0xe2, 0x49, 0x75, 0x0d, 0xea, 0x3c, 0xc5, 0xc1, 0x24, 0xfe, 0x00,
+  0x7e, 0xc5, 0x4d, 0x49, 0x67, 0x39, 0x3d, 0x57, 0x94, 0x93, 0xac, 0x6c,
+  0x92, 0x31, 0x0f, 0xc7, 0x8f, 0x27, 0xa1, 0xf5, 0x5c, 0x50, 0xe7, 0x4b,
+  0xb0, 0x3a, 0x3e, 0x69, 0x68, 0x81, 0xce, 0xe8, 0x15, 0x2d, 0x15, 0x2d,
+  0x0f, 0x08, 0x0b, 0xab, 0x77, 0x9f, 0xbc, 0xa3, 0x3d, 0x14, 0xfe, 0x10,
+  0xd0, 0xdf, 0x34, 0xab, 0xeb, 0x47, 0x57, 0xce, 0x13, 0xd1, 0xfe, 0x6e,
+  0x87, 0x8e, 0x56, 0x3d, 0x4f, 0x5b, 0xbf, 0xbf, 0xd7, 0x7c, 0xf8, 0x7b,
+  0xe2, 0x9b, 0x9e, 0x82, 0xa9, 0xf7, 0xff, 0xfa, 0x7b, 0x40, 0x08, 0x77,
+  0xf8, 0x36, 0x9f, 0xdf, 0x16, 0x37, 0x34, 0x71, 0xbe, 0xd8, 0xd2, 0xc6,
+  0xa2, 0x26, 0x60, 0x0d, 0xb3, 0x45, 0xed, 0x6e, 0x0c, 0x50, 0x08, 0x7d,
+  0x34, 0x4a, 0x47, 0xd3, 0xfb, 0xe4, 0x3a, 0xbd, 0xcd, 0x30, 0xdf, 0x05,
+  0x91, 0x0e, 0x56, 0x80, 0x38, 0xf9, 0x94, 0x59, 0x8b, 0x9e, 0xd5, 0x49,
+  0xb1, 0x1c, 0xd1, 0x79, 0xff, 0xeb, 0xb2, 0xa8, 0x65, 0x61, 0xd2, 0xdb,
+  0x22, 0x9f, 0x34, 0xae, 0xc7, 0xeb, 0x0c, 0x3c, 0x06, 0x1d, 0xf3, 0xbd,
+  0x41, 0x3c, 0x0e, 0x23, 0x65, 0xda, 0xcf, 0x6b, 0xdc, 0x40, 0xc4, 0x9d,
+  0xd2, 0x69, 0x55, 0x24, 0xc9, 0x55, 0x01, 0xc2, 0x65, 0x9e, 0xc8, 0x94,
+  0x47, 0x9b, 0x72, 0x9d, 0xe2, 0xa2, 0xa1, 0x3b, 0xc5, 0x91, 0x66, 0x99,
+  0x31, 0x7b, 0xe4, 0x9d, 0x4a, 0xa7, 0x3d, 0xb9, 0x50, 0xf0, 0x8e, 0x2e,
+  0x55, 0xb2, 0xf1, 0xef, 0x1b, 0xbd, 0x64, 0xe3, 0x3f, 0x36, 0x98, 0xb5,
+  0x6f, 0xfc, 0x61, 0xc3, 0xef, 0x33, 0x49, 0x48, 0xb7, 0xf9, 0x04, 0x77,
+  0x03, 0xcd, 0xe4, 0xf8, 0xec, 0xf6, 0x79, 0xf2, 0x37, 0x5c, 0xe7, 0xc4,
+  0xfe, 0xb2, 0x8f, 0x46, 0x24, 0x36, 0x37, 0x7a, 0x3b, 0x21, 0x3e, 0x98,
+  0x2e, 0x70, 0xaf, 0x67, 0xe5, 0x98, 0x28, 0x2a, 0xbd, 0x22, 0x1a, 0xa2,
+  0xeb, 0xd1, 0x9a, 0x43, 0xfb, 0x78, 0x45, 0xa6, 0x45, 0x3c, 0x2b, 0x99,
+  0xa7, 0x33, 0x22, 0xd2, 0x13, 0x8c, 0x28, 0x9f, 0x77, 0x37, 0xf3, 0xc7,
+  0xcb, 0xec, 0xf3, 0x9d, 0xfd, 0xfd, 0x27, 0xbf, 0xdf, 0x7b, 0x96, 0xd5,
+  0xd7, 0x3b, 0x3f, 0x6f, 0xbb, 0x47, 0x8e, 0x2f, 0x79, 0xd9, 0x8d, 0xfc,
+  0x6c, 0x10, 0x74, 0xf1, 0x3a, 0xc6, 0x4d, 0xef, 0xd3, 0xef, 0xd9, 0x65,
+  0xfe, 0xb1, 0x67, 0x22, 0x8c, 0x1c, 0x83, 0x94, 0x48, 0x8d, 0xf6, 0x0f,
+  0xa7, 0xd6, 0x9a, 0xbb, 0x5a, 0x66, 0x15, 0xad, 0xe4, 0xdd, 0x75, 0x5a,
+  0x27, 0xae, 0x01, 0xd9, 0xd9, 0x59, 0x7e, 0x75, 0x5d, 0x27, 0x77, 0x29,
+  0xf8, 0xff, 0x71, 0x2d, 0x4d, 0xe0, 0xe2, 0x25, 0xae, 0x7f, 0x99, 0x12,
+  0xfb, 0xc6, 0x1e, 0xf2, 0x2d, 0x3b, 0xf2, 0x97, 0x7e, 0x4d, 0x64, 0x2e,
+  0x1b, 0xe2, 0x25, 0x9c, 0x51, 0x5a, 0xe1, 0x20, 0xcd, 0xe9, 0xbc, 0xd6,
+  0x74, 0x6d, 0x2f, 0xf1, 0xd7, 0x35, 0x5d, 0xcc, 0xbc, 0x06, 0x3a, 0x50,
+  0xbe, 0xbb, 0xde, 0x60, 0x3b, 0xb1, 0x37, 0xee, 0x3e, 0xa1, 0x4d, 0xea,
+  0xe9, 0x36, 0xbb, 0x37, 0x2a, 0x3a, 0x70, 0xc4, 0x2c, 0x1c, 0x65, 0xac,
+  0x83, 0xef, 0xad, 0xcb, 0x3c, 0x79, 0x8c, 0x69, 0x85, 0xbb, 0x5b, 0x6e,
+  0x68, 0x1a, 0x7c, 0x30, 0x59, 0x5a, 0xb4, 0xf4, 0x06, 0x52, 0x42, 0x4b,
+  0x16, 0xe1, 0xd7, 0x26, 0x05, 0x11, 0x19, 0x8d, 0x96, 0xf8, 0x23, 0x66,
+  0x06, 0xae, 0xc7, 0xab, 0xc2, 0x44, 0x4e, 0x6d, 0xe2, 0xc3, 0xbc, 0x06,
+  0xdb, 0x67, 0xc1, 0x92, 0xc6, 0x4b, 0x8b, 0xc2, 0xb2, 0x21, 0xf1, 0xce,
+  0x60, 0xfe, 0x7c, 0x63, 0xd1, 0xb3, 0xc9, 0x2d, 0x09, 0x0e, 0x24, 0x23,
+  0x66, 0xee, 0x2d, 0xbe, 0x62, 0xc7, 0x10, 0x57, 0xa6, 0x74, 0x5e, 0xc6,
+  0x45, 0x59, 0x42, 0x08, 0xc7, 0x0e, 0x8e, 0x84, 0xaf, 0xcd, 0x32, 0xba,
+  0xd9, 0xc3, 0xe5, 0xcc, 0x71, 0xc7, 0x10, 0x7f, 0x21, 0x51, 0x81, 0x39,
+  0x08, 0x5d, 0xe9, 0xcc, 0x86, 0x79, 0xe2, 0x3c, 0x3a, 0xb4, 0x3d, 0x1e,
+  0x67, 0x8b, 0xba, 0x8a, 0xcd, 0xc9, 0x36, 0x9c, 0x86, 0x53, 0x66, 0x58,
+  0xf9, 0x50, 0x0e, 0xe2, 0x75, 0x75, 0xf7, 0x30, 0x8b, 0x42, 0x26, 0x5a,
+  0x90, 0x68, 0x54, 0xb9, 0x55, 0xab, 0x99, 0x36, 0x88, 0x8d, 0xf1, 0x9a,
+  0xcf, 0x30, 0x50, 0x3c, 0x5c, 0xc9, 0x49, 0x65, 0x76, 0x89, 0x8d, 0x14,
+  0xe1, 0x57, 0xfa, 0xc5, 0x6d, 0x42, 0xeb, 0xe9, 0x1a, 0xa7, 0x5e, 0xdd,
+  0x9e, 0xa2, 0xfb, 0x8a, 0xd4, 0x06, 0xba, 0x5c, 0x27, 0xd5, 0x35, 0xc9,
+  0x43, 0x95, 0x9e, 0xec, 0x7c, 0x46, 0x34, 0x73, 0x8b, 0xfd, 0x5d, 0x64,
+  0xd9, 0x64, 0x90, 0x9c, 0x5e, 0x82, 0xab, 0x96, 0x34, 0xe8, 0x9a, 0xbf,
+  0x06, 0xa3, 0xa7, 0x75, 0x9b, 0xb0, 0x5c, 0xed, 0x8e, 0x96, 0x0c, 0x25,
+  0xe0, 0xd8, 0xa0, 0x34, 0x5a, 0xec, 0x04, 0x5c, 0x6e, 0xda, 0xbc, 0x15,
+  0xf8, 0x1c, 0x12, 0xf7, 0xc6, 0xf0, 0x46, 0x59, 0xc2, 0x94, 0x38, 0xca,
+  0xea, 0xbb, 0x2c, 0x73, 0xcd, 0x55, 0x19, 0xdd, 0x44, 0xd8, 0x34, 0x11,
+  0xc6, 0x98, 0x19, 0x62, 0x69, 0xcf, 0xce, 0x4f, 0xbf, 0x3e, 0x3f, 0x1a,
+  0x0e, 0x93, 0xb7, 0x47, 0x17, 0x47, 0xe7, 0x8d, 0x95, 0x9e, 0x17, 0xe5,
+  0x8c, 0x77, 0x74, 0x92, 0x57, 0x8b, 0x69, 0x7a, 0x8f, 0xad, 0xa6, 0x99,
+  0x5c, 0x95, 0x38, 0x59, 0xb3, 0x0c, 0xb7, 0xc2, 0x64, 0xc9, 0x9c, 0x2c,
+  0x29, 0x88, 0x3f, 0xa4, 0x2a, 0x84, 0x82, 0x99, 0xb0, 0xe4, 0x3a, 0xbf,
+  0xf2, 0x2b, 0x4d, 0x1c, 0x47, 0x2f, 0x37, 0xdc, 0x6e, 0x6e, 0x3f, 0x20,
+  0x0d, 0xb2, 0xbe, 0xd1, 0xf3, 0x9f, 0xc9, 0x32, 0x55, 0x3c, 0x27, 0xa2,
+  0xd9, 0x7c, 0xc6, 0xcc, 0x8e, 0x7e, 0x7a, 0x01, 0x30, 0xbb, 0x24, 0xe9,
+  0x97, 0x2e, 0x3c, 0x11, 0xde, 0xdb, 0x63, 0xb2, 0xd1, 0x3a, 0x91, 0x95,
+  0xc8, 0x10, 0xac, 0x19, 0x0d, 0xca, 0x50, 0xa4, 0x07, 0xc7, 0xc4, 0x48,
+  0x4c, 0x00, 0xef, 0xd3, 0xc7, 0x16, 0x18, 0x42, 0x46, 0x3b, 0x3b, 0x91,
+  0xe6, 0xab, 0xe5, 0x25, 0x1f, 0xe4, 0x64, 0x93, 0x84, 0xe5, 0xb7, 0xa4,
+  0xc0, 0x90, 0x12, 0xd1, 0x4b, 0xce, 0xb6, 0xf8, 0xbd, 0xdd, 0x9d, 0xbd,
+  0xa7, 0xc2, 0x08, 0x06, 0xd6, 0xdc, 0x9b, 0x80, 0x11, 0xef, 0xde, 0x60,
+  0x7b, 0xe5, 0x21, 0x34, 0x3e, 0x48, 0x76, 0xdf, 0xca, 0x27, 0x4f, 0x3f,
+  0x7f, 0xf6, 0xd9, 0x73, 0xfd, 0xb0, 0x49, 0xe0, 0x6e, 0xfc, 0x4c, 0x1d,
+  0xac, 0x8c, 0x41, 0x3b, 0xa3, 0x91, 0xd0, 0xec, 0x66, 0xf9, 0x9c, 0x8e,
+  0x09, 0x1d, 0x2b, 0xe5, 0x55, 0xa0, 0x67, 0x1a, 0xfc, 0xa5, 0x70, 0x36,
+  0xdd, 0xd7, 0xa6, 0x96, 0x47, 0x2f, 0x13, 0xc9, 0x12, 0x2f, 0x77, 0x9b,
+  0xc4, 0x2b, 0x41, 0x07, 0x0c, 0xb7, 0xce, 0x08, 0x0c, 0x16, 0xaa, 0x0e,
+  0xc9, 0xa4, 0x59, 0xb4, 0x37, 0x77, 0x2b, 0xd2, 0x1b, 0x34, 0x36, 0xba,
+  0x13, 0x71, 0xcd, 0x75, 0xd7, 0x9d, 0x58, 0x01, 0x73, 0xc8, 0xbb, 0xbc,
+  0x62, 0xd6, 0x70, 0x57, 0x2c, 0xa7, 0xa4, 0x58, 0xe0, 0x81, 0xe5, 0x82,
+  0x5f, 0xa0, 0xae, 0x16, 0x9e, 0x07, 0xcc, 0xf2, 0x8f, 0xa0, 0x9d, 0x76,
+  0x2b, 0x34, 0x34, 0xfa, 0x73, 0x41, 0xa4, 0x24, 0xc3, 0x19, 0xb4, 0x6f,
+  0x08, 0xe6, 0x7d, 0x1d, 0x4a, 0xc4, 0x99, 0x67, 0xa6, 0x7d, 0x76, 0x3a,
+  0xbc, 0x80, 0x04, 0x70, 0xf6, 0xfe, 0x82, 0x1a, 0x22, 0x11, 0xa0, 0xaa,
+  0x89, 0x28, 0xf1, 0xe2, 0x3c, 0x63, 0xad, 0xce, 0x9a, 0x23, 0xda, 0xcb,
+  0x99, 0x51, 0xb1, 0x58, 0x63, 0x5d, 0xca, 0x18, 0x45, 0xed, 0xc5, 0x11,
+  0x34, 0xa5, 0x57, 0xee, 0x70, 0xff, 0x52, 0xb2, 0xf9, 0xc5, 0x16, 0x11,
+  0x6d, 0xdf, 0x35, 0xf7, 0x23, 0x9e, 0x66, 0xd9, 0xa3, 0xca, 0x67, 0xf9,
+  0x34, 0x0d, 0x84, 0x2b, 0xe5, 0xa7, 0x38, 0x9d, 0x8e, 0xab, 0x8c, 0x89,
+  0x66, 0x78, 0xd0, 0x5e, 0xb7, 0xc3, 0x0a, 0x32, 0x4f, 0xf2, 0x1b, 0x35,
+  0x81, 0x38, 0xc0, 0x22, 0xec, 0x22, 0x77, 0x0b, 0x87, 0x1d, 0x03, 0xb3,
+  0x6a, 0x2c, 0x53, 0x7b, 0xd7, 0x3a, 0xcb, 0x86, 0xfb, 0x88, 0x8d, 0x07,
+  0x6e, 0xe1, 0xd6, 0x47, 0x69, 0xb9, 0xee, 0xf8, 0xb0, 0x68, 0xf4, 0xd4,
+  0xe8, 0xd5, 0x92, 0x06, 0x2f, 0xab, 0xda, 0x4b, 0xfa, 0xbf, 0xc3, 0xc8,
+  0xa1, 0xd8, 0x39, 0xbe, 0x44, 0x0a, 0x03, 0x1d, 0x8d, 0xb5, 0x53, 0x36,
+  0x28, 0x38, 0xeb, 0xc3, 0xa9, 0xd8, 0x1d, 0x12, 0xb9, 0xc4, 0x44, 0x91,
+  0x49, 0xc4, 0x54, 0x40, 0x82, 0xe3, 0x1d, 0xd1, 0x60, 0x4a, 0x4b, 0x48,
+  0x07, 0xe0, 0x2d, 0x86, 0xae, 0x9d, 0xa9, 0xb1, 0x82, 0xf7, 0x89, 0x96,
+  0x95, 0x66, 0xe5, 0xce, 0xe4, 0x64, 0x92, 0xe3, 0x3b, 0x22, 0x76, 0xba,
+  0x6e, 0x96, 0x19, 0xcb, 0xe6, 0x3a, 0xc7, 0x99, 0x9f, 0x1b, 0x9f, 0xcf,
+  0x6b, 0x92, 0xed, 0x93, 0x75, 0x61, 0x8b, 0x7d, 0x74, 0xb3, 0x8e, 0x85,
+  0x9d, 0xb5, 0x3a, 0xa1, 0xb9, 0x4c, 0xf4, 0xca, 0xd5, 0xd3, 0x49, 0xdb,
+  0x37, 0x4b, 0xef, 0x43, 0x21, 0x9a, 0x19, 0x27, 0x8f, 0xbc, 0x28, 0x9d,
+  0xf4, 0x41, 0xf7, 0xdb, 0x02, 0x92, 0x8d, 0x32, 0x54, 0xbe, 0x99, 0xf8,
+  0xfc, 0x54, 0x32, 0xb4, 0x1e, 0x89, 0x6e, 0x78, 0xf2, 0xea, 0xda, 0x1e,
+  0x0d, 0x6e, 0xb9, 0x94, 0xe6, 0x06, 0x4e, 0x0d, 0x7d, 0x73, 0x62, 0x4c,
+  0xb8, 0x28, 0x85, 0xb3, 0x4c, 0x0b, 0xf0, 0xce, 0x75, 0x11, 0x20, 0x75,
+  0xe4, 0x3c, 0x74, 0x10, 0x56, 0x9f, 0x77, 0x15, 0x7f, 0x5a, 0x73, 0x6e,
+  0xd8, 0xba, 0x5c, 0xd5, 0xa3, 0x43, 0xf3, 0x0b, 0x35, 0xe4, 0x45, 0xa2,
+  0x7b, 0xac, 0x02, 0x59, 0xd9, 0xba, 0x33, 0xb5, 0xd1, 0xbd, 0xb3, 0x51,
+  0xcb, 0xe1, 0x60, 0x1d, 0xa4, 0xb5, 0xf2, 0x15, 0xab, 0x05, 0x7a, 0xab,
+  0xb8, 0x99, 0xd1, 0x8c, 0x26, 0x39, 0x31, 0x66, 0xba, 0x1d, 0x6c, 0x67,
+  0xbc, 0xba, 0x14, 0x91, 0x48, 0xef, 0x3b, 0xfa, 0x05, 0x74, 0xfe, 0xf0,
+  0x7e, 0xb0, 0x31, 0xf5, 0x4f, 0x69, 0xa7, 0x4e, 0x78, 0x1e, 0xfd, 0xdb,
+  0x04, 0xa7, 0x81, 0x64, 0x78, 0x1c, 0x8d, 0xfe, 0xe9, 0xc9, 0x6d, 0x40,
+  0xd5, 0xd0, 0x6c, 0xe7, 0x10, 0x1a, 0x7a, 0x6c, 0x3d, 0x18, 0x15, 0x05,
+  0xa9, 0x91, 0x7e, 0x6a, 0x60, 0xce, 0xd9, 0x1c, 0xcc, 0x4a, 0x77, 0xb4,
+  0xdf, 0x97, 0xaf, 0xb8, 0xe5, 0x7b, 0xd2, 0x5d, 0xd2, 0xab, 0x34, 0x77,
+  0xf4, 0xa6, 0x8c, 0xcd, 0x3d, 0x3b, 0x2f, 0xf4, 0x71, 0xec, 0x14, 0xc4,
+  0x11, 0xe5, 0x21, 0x4b, 0xbe, 0xb5, 0x33, 0xcc, 0x8b, 0x98, 0x00, 0x9f,
+  0x64, 0x6d, 0x96, 0x65, 0x38, 0x6b, 0x6e, 0xc4, 0x52, 0x2b, 0x04, 0x40,
+  0xe6, 0x84, 0x2c, 0xce, 0x51, 0x93, 0xeb, 0x83, 0xe4, 0x9b, 0xe2, 0x2e,
+  0x63, 0x5b, 0x1a, 0x0b, 0xdb, 0x39, 0xac, 0x41, 0x24, 0x97, 0xdd, 0x65,
+  0xc9, 0x8c, 0xe4, 0x40, 0x5a, 0x4d, 0x16, 0x05, 0xf8, 0x33, 0x1a, 0xa7,
+  0x57, 0x20, 0x8a, 0x3b, 0xee, 0xd6, 0x4d, 0xc2, 0xed, 0xe4, 0xa5, 0x9c,
+  0x88, 0x64, 0x93, 0x45, 0x8d, 0x31, 0x16, 0x6b, 0x51, 0xfb, 0x59, 0xb8,
+  0xf5, 0x20, 0xb6, 0x59, 0x05, 0x87, 0x0b, 0xf7, 0x2e, 0xae, 0xbc, 0xcf,
+  0x06, 0xbb, 0x2f, 0x06, 0x3b, 0x03, 0x28, 0x06, 0xd9, 0x6d, 0x5e, 0x2c,
+  0x2b, 0xea, 0x9d, 0x87, 0x92, 0x04, 0x6f, 0x66, 0xb8, 0x20, 0xeb, 0xe2,
+  0xea, 0x6a, 0x2a, 0x62, 0xc8, 0x76, 0x71, 0x79, 0x19, 0x48, 0x2a, 0x65,
+  0xb6, 0x10, 0x85, 0x04, 0x8b, 0xa3, 0x87, 0x4e, 0x78, 0x5c, 0x28, 0xa2,
+  0xe8, 0x72, 0x7a, 0xf5, 0xbe, 0xff, 0x3b, 0xda, 0xe8, 0xbe, 0x71, 0xa3,
+  0x3e, 0x31, 0xa3, 0x96, 0xad, 0xf4, 0x2d, 0x6c, 0x4a, 0xe1, 0x95, 0xe8,
+  0x59, 0x97, 0x88, 0x9d, 0x39, 0x93, 0x96, 0xfb, 0x90, 0x5a, 0x48, 0x1c,
+  0x3b, 0x0b, 0x2c, 0x55, 0x01, 0x91, 0x11, 0x73, 0x9a, 0x4f, 0xd2, 0x72,
+  0xd2, 0x63, 0x83, 0x17, 0x3d, 0x8c, 0xd3, 0x96, 0x0a, 0xb9, 0xf7, 0x84,
+  0xe7, 0x79, 0x12, 0xeb, 0xef, 0x63, 0x80, 0xa1, 0x51, 0xc0, 0xb8, 0x0e,
+  0x5d, 0x05, 0x95, 0x8c, 0x4c, 0x05, 0xea, 0xd4, 0xcb, 0x57, 0x9e, 0x79,
+  0x9b, 0xca, 0x7c, 0x59, 0x4c, 0xa7, 0xc5, 0x1d, 0x2e, 0x11, 0x88, 0xc4,
+  0xc1, 0xb6, 0xda, 0x76, 0x54, 0x55, 0x31, 0xce, 0xc5, 0xe2, 0xa5, 0x8b,
+  0xce, 0x6a, 0x3e, 0x9b, 0x67, 0xf1, 0x6a, 0xa5, 0xb7, 0x3b, 0x84, 0xef,
+  0x2a, 0x9b, 0xb3, 0x91, 0x43, 0xcc, 0x16, 0x6c, 0xe3, 0x6a, 0x35, 0xe7,
+  0x2f, 0x3d, 0x39, 0x92, 0xca, 0x8a, 0x69, 0x24, 0x39, 0xb4, 0xca, 0x3b,
+  0x33, 0x39, 0xe4, 0x63, 0xcf, 0x1a, 0x83, 0xa3, 0xda, 0x6b, 0x35, 0x57,
+  0x2d, 0xa9, 0x0d, 0x5a, 0xef, 0x49, 0x0e, 0xc3, 0x26, 0xe9, 0x80, 0x62,
+  0xab, 0x14, 0x8d, 0x85, 0x5e, 0x1b, 0x2f, 0xab, 0x9a, 0xc4, 0x65, 0xeb,
+  0x55, 0x9a, 0xa2, 0x7e, 0x89, 0x24, 0x0f, 0x40, 0x67, 0xad, 0xe6, 0x88,
+  0xe8, 0x3e, 0x1b, 0x3c, 0x79, 0x3e, 0xd8, 0x09, 0x08, 0x61, 0x07, 0xeb,
+  0x0c, 0x05, 0x71, 0x77, 0xb0, 0xd3, 0x7a, 0x7c, 0x13, 0x77, 0xfa, 0x96,
+  0x2d, 0x79, 0x63, 0xcd, 0xf9, 0xb6, 0xb7, 0x73, 0x40, 0x6f, 0x86, 0x37,
+  0x99, 0xdc, 0xd9, 0xb9, 0xb7, 0xab, 0xb9, 0xde, 0x69, 0x87, 0xe7, 0x2c,
+  0xd4, 0xca, 0x7d, 0x48, 0xf7, 0xf9, 0xbe, 0xb4, 0xb4, 0x3b, 0xd8, 0x0d,
+  0xb6, 0x5e, 0x87, 0xb3, 0x1b, 0x1f, 0x4e, 0x97, 0x00, 0x5a, 0x83, 0xd9,
+  0x35, 0xd1, 0x5f, 0x24, 0x25, 0xd7, 0x6f, 0xab, 0x39, 0x53, 0x38, 0xf5,
+  0x45, 0x5b, 0x32, 0x5d, 0xa4, 0x27, 0x8d, 0x45, 0xe2, 0x11, 0xed, 0x7d,
+  0xc2, 0xf2, 0x30, 0x99, 0xe4, 0xa4, 0x2b, 0xa2, 0x5f, 0xda, 0x10, 0xbf,
+  0x35, 0xb2, 0x2a, 0x3c, 0xd4, 0x3d, 0x19, 0x60, 0x84, 0x74, 0xf8, 0x62,
+  0xe1, 0x8b, 0x01, 0x23, 0x5f, 0xd2, 0xbd, 0x55, 0x4e, 0x59, 0xf7, 0x33,
+  0x8b, 0x2d, 0x31, 0x12, 0xe2, 0x6f, 0xf9, 0xb4, 0x56, 0x82, 0x14, 0xe3,
+  0x1a, 0xfa, 0x1a, 0xb4, 0x47, 0xf7, 0xd8, 0x6c, 0xe8, 0xf4, 0xe7, 0x45,
+  0xd9, 0xbf, 0x99, 0x17, 0x77, 0xc4, 0x5a, 0xae, 0xb2, 0x5f, 0x33, 0xbb,
+  0x39, 0xa9, 0x60, 0x17, 0x27, 0x43, 0x99, 0x56, 0x73, 0xaa, 0xad, 0xe6,
+  0xf0, 0xc4, 0xf6, 0x9e, 0xbb, 0xd7, 0xf9, 0x4f, 0xda, 0xaa, 0xe4, 0xfd,
+  0xe2, 0xaa, 0x4c, 0x27, 0x99, 0x2a, 0xbe, 0x6e, 0x0d, 0x12, 0x1e, 0x5c,
+  0x92, 0xac, 0x1a, 0x9d, 0xa8, 0x8f, 0xa2, 0x4f, 0x88, 0x8a, 0x68, 0x6b,
+  0x51, 0x59, 0x57, 0x15, 0xe9, 0x34, 0x6c, 0x6c, 0x48, 0xef, 0xd2, 0xfb,
+  0x81, 0x38, 0x3b, 0xdc, 0x18, 0x5b, 0xcd, 0x89, 0xd1, 0xbd, 0x56, 0x8d,
+  0x5d, 0x1b, 0x08, 0x79, 0x16, 0x2d, 0xfc, 0xbd, 0x9e, 0xe5, 0x79, 0x76,
+  0x55, 0xd4, 0xca, 0x31, 0xcc, 0x1e, 0xd1, 0x6a, 0xce, 0x68, 0x51, 0x6d,
+  0x3a, 0x58, 0x21, 0xa7, 0x98, 0x0e, 0xd6, 0xe2, 0x2b, 0x13, 0xec, 0xe5,
+  0x3c, 0xb1, 0xeb, 0x35, 0x51, 0xcb, 0xd4, 0x43, 0xb4, 0xd1, 0x6a, 0xae,
+  0x4b, 0x29, 0xb4, 0x69, 0xd6, 0x36, 0x0c, 0x5e, 0x21, 0x61, 0x3c, 0x7d,
+  0xd1, 0x24, 0x0c, 0xba, 0x26, 0xe7, 0x8b, 0x79, 0xab, 0xc5, 0xd7, 0x72,
+  0x3d, 0x73, 0xb7, 0xef, 0xce, 0xde, 0xf1, 0x74, 0x88, 0x2f, 0x67, 0x73,
+  0x39, 0x36, 0xf8, 0x88, 0x2d, 0x16, 0x76, 0xe3, 0xb3, 0x99, 0xdd, 0x4e,
+  0x17, 0xa9, 0x47, 0x2b, 0x06, 0x18, 0x8c, 0xd0, 0x0c, 0x5e, 0xf0, 0xa9,
+  0xd0, 0xd7, 0x65, 0x5a, 0xde, 0xcb, 0x4c, 0xdd, 0x9e, 0x52, 0x27, 0xd2,
+  0x53, 0xe7, 0xd8, 0x88, 0xbe, 0x0d, 0x93, 0xa9, 0x35, 0xdc, 0x7c, 0x53,
+  0x4e, 0x1c, 0x16, 0xc1, 0x6d, 0x9c, 0x7d, 0x86, 0x87, 0xfa, 0xad, 0xe6,
+  0x78, 0x99, 0x78, 0x3c, 0xbc, 0xfd, 0x42, 0x5b, 0xaa, 0x69, 0xe3, 0xd8,
+  0x54, 0xf4, 0x59, 0x55, 0xf1, 0x35, 0xb1, 0xf6, 0xd0, 0x89, 0x7b, 0xde,
+  0x59, 0xd8, 0x74, 0xba, 0x72, 0x65, 0x85, 0x90, 0x0f, 0x4e, 0xb0, 0x92,
+  0xad, 0xd5, 0xe5, 0x0f, 0x69, 0x75, 0x6d, 0x71, 0xbd, 0xf6, 0xb9, 0x7a,
+  0x65, 0x7f, 0xc9, 0xc2, 0x72, 0x07, 0x03, 0xf9, 0xd1, 0xe6, 0xd7, 0x95,
+  0xae, 0x2e, 0x6f, 0xe8, 0x2f, 0x5f, 0xdf, 0xce, 0x5d, 0xb6, 0xf8, 0x6d,
+  0x16, 0x77, 0x17, 0x37, 0x58, 0x3d, 0xad, 0x6e, 0x3b, 0x17, 0x06, 0x4d,
+  0x7b, 0x0b, 0x26, 0x01, 0xd8, 0xa1, 0xc3, 0x0b, 0x03, 0x6b, 0xec, 0xef,
+  0x8b, 0x8f, 0x62, 0xa3, 0xb6, 0xe1, 0x3b, 0x1b, 0x60, 0xda, 0x61, 0xd0,
+  0xb3, 0x82, 0x26, 0xc7, 0x6f, 0xeb, 0xe0, 0x07, 0x81, 0x2f, 0x81, 0x05,
+  0x30, 0x93, 0xa3, 0x65, 0x3c, 0x83, 0x1d, 0x37, 0xb4, 0xc1, 0x6e, 0xfb,
+  0x6e, 0x67, 0x21, 0x5b, 0xbf, 0xe4, 0xf5, 0x23, 0xf9, 0xb1, 0x2e, 0x8b,
+  0xa9, 0x63, 0x19, 0x36, 0x42, 0x96, 0x96, 0xe8, 0xc6, 0x1c, 0x93, 0x6e,
+  0x4f, 0x77, 0xe7, 0x26, 0x0c, 0x0e, 0x81, 0x81, 0xdb, 0x94, 0x0c, 0xda,
+  0xe2, 0x51, 0x3a, 0xbe, 0x81, 0x88, 0x92, 0xab, 0x7f, 0xc5, 0xf6, 0x48,
+  0xc4, 0x88, 0x64, 0x4a, 0x82, 0x0b, 0x7c, 0xa4, 0xd6, 0xd3, 0x56, 0x70,
+  0xe7, 0xee, 0x61, 0xa4, 0x55, 0x35, 0xbd, 0xdd, 0x8b, 0x2e, 0xa2, 0xad,
+  0x62, 0x63, 0x19, 0xd1, 0xa5, 0x0d, 0x72, 0xef, 0x97, 0x2d, 0x22, 0x5e,
+  0xb5, 0x25, 0x1c, 0x16, 0x24, 0xfb, 0xe5, 0x33, 0xdb, 0xa3, 0xdc, 0xdd,
+  0x70, 0x76, 0x59, 0xe0, 0xe9, 0xdb, 0xd5, 0xc7, 0x75, 0xa0, 0xdf, 0xe7,
+  0x70, 0x87, 0x4e, 0x32, 0xb6, 0x82, 0xd2, 0xe9, 0x99, 0xb0, 0xbb, 0x93,
+  0xe4, 0x92, 0x8c, 0x9a, 0xcd, 0x92, 0x4d, 0xf8, 0x54, 0xe1, 0x42, 0x7c,
+  0xbe, 0xfb, 0xd9, 0xf3, 0x70, 0xe6, 0x4f, 0x6c, 0xe6, 0x4f, 0x7e, 0xdd,
+  0xcc, 0x9f, 0xfc, 0xd6, 0x33, 0x7f, 0xf2, 0xc8, 0xcc, 0x9f, 0x7c, 0xea,
+  0xcc, 0x3f, 0x7b, 0xf6, 0xfc, 0xf3, 0x70, 0xe6, 0x4f, 0x31, 0xf3, 0x7c,
+  0x71, 0xfb, 0xb4, 0x2d, 0x62, 0xb3, 0xf4, 0xab, 0xca, 0x4e, 0xdd, 0x10,
+  0xb7, 0xe8, 0x0e, 0x2a, 0xa6, 0xb7, 0x99, 0x4a, 0xa0, 0xf4, 0xc1, 0xf1,
+  0xd9, 0xed, 0x53, 0xe8, 0x34, 0x50, 0x02, 0x32, 0x31, 0xa6, 0xc6, 0x08,
+  0x1d, 0x66, 0x94, 0x50, 0x25, 0x85, 0x49, 0x1f, 0x1e, 0x90, 0x60, 0x34,
+  0xcf, 0x75, 0x34, 0xcf, 0x63, 0xa3, 0xf9, 0xe4, 0xc1, 0x3c, 0x0f, 0x06,
+  0xf3, 0x4b, 0x47, 0xf3, 0x34, 0x18, 0x4d, 0x8a, 0xd1, 0xa4, 0x0b, 0xf8,
+  0xaa, 0xdb, 0x64, 0xf1, 0x86, 0xee, 0x6b, 0x84, 0x3b, 0x6c, 0x99, 0xe7,
+  0x4b, 0x3d, 0x7f, 0x73, 0x17, 0x26, 0xc0, 0xba, 0x25, 0xbc, 0xf2, 0x3a,
+  0x56, 0x69, 0x47, 0x2d, 0x28, 0x6d, 0x49, 0x26, 0x2d, 0xe1, 0xcc, 0x63,
+  0x4b, 0x79, 0xa0, 0x3f, 0xd1, 0xff, 0x88, 0x44, 0x9c, 0xb3, 0x1a, 0x17,
+  0x37, 0x8c, 0x49, 0x72, 0x53, 0x18, 0x27, 0xc2, 0x4b, 0x6d, 0xa9, 0xb6,
+  0xc8, 0x2a, 0x98, 0x14, 0x68, 0x6e, 0x39, 0xc2, 0x14, 0xa0, 0x02, 0x3b,
+  0x7f, 0x25, 0x11, 0xb1, 0xb8, 0xaf, 0xc0, 0xb7, 0xde, 0xa1, 0x09, 0x95,
+  0x27, 0x68, 0xb8, 0x97, 0xd3, 0xf4, 0xaa, 0x7b, 0xbb, 0xe6, 0x57, 0xf3,
+  0x42, 0xa3, 0x06, 0x2a, 0x22, 0x56, 0x0e, 0xf3, 0x50, 0xf2, 0xad, 0x88,
+  0x13, 0xcd, 0xc7, 0xd3, 0x25, 0x7b, 0x8f, 0x4f, 0x69, 0x82, 0xc3, 0xe1,
+  0x37, 0x21, 0x75, 0x1d, 0x60, 0x05, 0xa1, 0xae, 0xf4, 0xd3, 0x2b, 0x68,
+  0x2e, 0x2f, 0xe5, 0x07, 0x89, 0x65, 0xf4, 0xc2, 0x17, 0x71, 0x69, 0x73,
+  0xa8, 0xf6, 0x09, 0xf6, 0x84, 0xe1, 0xd5, 0x83, 0xe0, 0x1d, 0x16, 0x64,
+  0xfc, 0x3a, 0xca, 0x2d, 0xa3, 0x47, 0xa9, 0xcd, 0x0c, 0x31, 0x56, 0x9a,
+  0x71, 0x3a, 0x81, 0x4a, 0x2d, 0xd6, 0xfd, 0xe4, 0xf0, 0xeb, 0x63, 0xb8,
+  0xf7, 0xd2, 0x7c, 0x2a, 0x46, 0x5b, 0x9e, 0x36, 0xad, 0x61, 0x36, 0x85,
+  0x3e, 0x2e, 0xab, 0x56, 0x65, 0x0d, 0x47, 0x96, 0xfe, 0xb7, 0xfe, 0xb6,
+  0xf8, 0x1b, 0x2d, 0x61, 0xba, 0xfd, 0x74, 0xb0, 0xb3, 0x4e, 0xc2, 0x7b,
+  0x41, 0xd7, 0xf1, 0xb8, 0x98, 0x64, 0xc9, 0x68, 0x9a, 0xce, 0x6f, 0x2a,
+  0x11, 0xd9, 0x44, 0x18, 0xe5, 0x91, 0xf6, 0x70, 0x62, 0xcb, 0xb2, 0x58,
+  0xaa, 0xd1, 0xbb, 0x7d, 0x13, 0xca, 0x74, 0x54, 0x9e, 0x54, 0x97, 0x82,
+  0xf8, 0x30, 0x89, 0x6a, 0xca, 0x1b, 0xf3, 0x5d, 0xe0, 0x56, 0x61, 0xf9,
+  0x6f, 0x94, 0xf1, 0xc0, 0xec, 0xe6, 0x6c, 0x35, 0xd7, 0xff, 0x86, 0x55,
+  0x38, 0x22, 0x1c, 0x18, 0xdc, 0xe5, 0xa0, 0x14, 0xe6, 0xe6, 0xe8, 0x5c,
+  0xa4, 0xc7, 0x97, 0x32, 0x71, 0x7d, 0x30, 0xaf, 0x84, 0x80, 0x4d, 0xa9,
+  0x65, 0x76, 0x24, 0x51, 0x27, 0xd3, 0xb4, 0xaa, 0xd9, 0x88, 0xc8, 0xe4,
+  0xa3, 0x46, 0xa8, 0x50, 0x4d, 0x4b, 0xe7, 0xf7, 0x88, 0x9a, 0xf9, 0x14,
+  0x35, 0xed, 0x32, 0xbf, 0x02, 0x2b, 0x62, 0x93, 0x1e, 0x07, 0xda, 0x58,
+  0x7c, 0x0d, 0xf4, 0xfe, 0xeb, 0x82, 0x09, 0x8c, 0x34, 0x8a, 0x6c, 0x7a,
+  0x19, 0x3b, 0xaf, 0xcc, 0x73, 0x79, 0x4c, 0x6c, 0x1d, 0x51, 0xbe, 0x86,
+  0xa1, 0x89, 0xd5, 0x94, 0x4f, 0x03, 0xe2, 0x32, 0x92, 0xf1, 0x34, 0xcd,
+  0x67, 0x55, 0x20, 0xf2, 0x0e, 0x62, 0xdc, 0x04, 0xa6, 0x7d, 0xbc, 0x3d,
+  0x82, 0xd3, 0xa9, 0xac, 0x60, 0x86, 0xc3, 0x86, 0xa4, 0xa6, 0x1e, 0x88,
+  0x4b, 0xe7, 0x3a, 0x1b, 0xdf, 0x30, 0xd9, 0x05, 0x26, 0xea, 0x36, 0x17,
+  0x96, 0x55, 0x87, 0xba, 0x5f, 0x5f, 0x2f, 0xa1, 0xb6, 0x14, 0x24, 0xbf,
+  0xc0, 0x71, 0x0d, 0x47, 0xcc, 0x72, 0xcc, 0xdb, 0x0c, 0x4f, 0xee, 0x47,
+  0x52, 0x46, 0xe8, 0x8a, 0xa8, 0x39, 0xa8, 0x89, 0x09, 0xa3, 0x4f, 0x44,
+  0xb0, 0x58, 0x35, 0x3a, 0x95, 0xbb, 0x1a, 0xfc, 0xa0, 0x52, 0x5f, 0x19,
+  0xbb, 0xa1, 0xcc, 0x88, 0xd0, 0x5a, 0xcd, 0x56, 0x73, 0xb2, 0xb6, 0x3d,
+  0x78, 0x62, 0x73, 0x18, 0x23, 0xbc, 0x21, 0x90, 0xb4, 0x1c, 0x35, 0x53,
+  0x8d, 0xd2, 0x2a, 0x1f, 0x83, 0x80, 0x26, 0xf9, 0x55, 0x06, 0x8e, 0x41,
+  0xc2, 0x6a, 0x3d, 0x9d, 0xf5, 0x22, 0xb6, 0x12, 0xd8, 0x63, 0x54, 0xc4,
+  0xeb, 0x90, 0x95, 0xe7, 0x26, 0xa2, 0xe8, 0x3a, 0xea, 0x30, 0xe3, 0x7b,
+  0x68, 0x8a, 0xcd, 0xc5, 0x2a, 0x8e, 0x51, 0x28, 0xcf, 0x6c, 0xf3, 0x1d,
+  0xf6, 0x02, 0xd2, 0x41, 0x21, 0xe6, 0xd2, 0xc3, 0x09, 0x19, 0xb3, 0x57,
+  0x03, 0x16, 0x63, 0x33, 0x57, 0x9b, 0xdd, 0x9d, 0xcf, 0x06, 0x1c, 0xb2,
+  0x77, 0xf9, 0x38, 0x33, 0x9f, 0xf8, 0x3c, 0x62, 0x7e, 0x1a, 0x4f, 0x73,
+  0x3c, 0x37, 0x5b, 0x56, 0xec, 0xa7, 0x13, 0x95, 0x06, 0x97, 0xc8, 0x5d,
+  0x0e, 0x6f, 0xd3, 0xb1, 0xd8, 0xce, 0xd8, 0x14, 0x5b, 0x5d, 0xb3, 0xfb,
+  0x24, 0x2d, 0x73, 0xf6, 0xd7, 0x76, 0x9a, 0x93, 0x31, 0x63, 0x9a, 0x3c,
+  0x4e, 0x1d, 0x26, 0xab, 0x65, 0xe2, 0x4c, 0xf0, 0x76, 0x28, 0x3e, 0x3b,
+  0xe0, 0x39, 0xc1, 0xc1, 0x19, 0x61, 0x91, 0x25, 0x5c, 0x2c, 0x79, 0x89,
+  0xcb, 0xeb, 0x15, 0x26, 0xb3, 0x82, 0x25, 0x26, 0x67, 0xec, 0x26, 0xbe,
+  0x6e, 0x7a, 0x1a, 0x02, 0xde, 0x27, 0xf6, 0x38, 0x69, 0x8e, 0x7d, 0xea,
+  0x79, 0x15, 0x97, 0x17, 0x88, 0xa4, 0xa6, 0xf7, 0xbe, 0xa5, 0x85, 0x37,
+  0x3a, 0xd2, 0xde, 0x64, 0xf9, 0xad, 0xc5, 0x67, 0x04, 0xb2, 0x39, 0x07,
+  0xb4, 0x24, 0xeb, 0xc3, 0xac, 0x6e, 0x37, 0x77, 0xc8, 0xfd, 0xed, 0xaf,
+  0x27, 0x41, 0x64, 0x8c, 0xb4, 0xab, 0x8b, 0x37, 0xca, 0x4c, 0xfd, 0x15,
+  0x33, 0x5f, 0xb2, 0x8e, 0xb0, 0xca, 0xdd, 0x57, 0xdf, 0x1d, 0x9c, 0xbc,
+  0x3f, 0xda, 0xfd, 0x53, 0x9b, 0x7c, 0xe8, 0xbb, 0x3d, 0xf9, 0x6e, 0x6f,
+  0x3d, 0xc6, 0xb3, 0xe6, 0x45, 0xb2, 0xf1, 0x6a, 0x23, 0xa9, 0xee, 0x67,
+  0xa3, 0x62, 0xea, 0xb8, 0x96, 0xf6, 0x80, 0x21, 0xf4, 0xd4, 0xa9, 0x66,
+  0x01, 0x1a, 0x29, 0xc7, 0x57, 0xf2, 0x15, 0xd9, 0x1e, 0x3b, 0x87, 0x08,
+  0xb0, 0x2d, 0x83, 0x2d, 0xca, 0xa0, 0x81, 0x74, 0x12, 0xae, 0x47, 0x55,
+  0xf3, 0xa5, 0xa7, 0x5b, 0x84, 0xd6, 0xc5, 0x2f, 0xdd, 0x93, 0x83, 0xd4,
+  0x66, 0xe7, 0x6e, 0xc2, 0x7e, 0x4c, 0xb9, 0x53, 0x65, 0x40, 0xec, 0x35,
+  0xa2, 0x86, 0x68, 0x0d, 0x60, 0x98, 0x7b, 0x5f, 0x09, 0x4f, 0xc1, 0x29,
+  0x97, 0xf3, 0xd9, 0x66, 0x78, 0xac, 0xf1, 0xc3, 0xa5, 0x7f, 0x9b, 0xc2,
+  0x25, 0x2a, 0x17, 0x8b, 0x8e, 0x85, 0x2e, 0x9e, 0x2b, 0x18, 0x74, 0xe5,
+  0x40, 0xfb, 0xe8, 0x3f, 0xe6, 0xb3, 0x38, 0x62, 0x65, 0xd7, 0xe6, 0x47,
+  0xe7, 0x0e, 0x5d, 0x6a, 0x7c, 0x22, 0x42, 0x4e, 0x75, 0x1e, 0x7c, 0x9e,
+  0x68, 0xd8, 0xb0, 0x4d, 0xdc, 0xeb, 0xa1, 0xdc, 0x28, 0x33, 0x3d, 0xc1,
+  0xe2, 0x1f, 0x6f, 0x93, 0x3e, 0x35, 0x36, 0xca, 0xe7, 0x42, 0xdb, 0xde,
+  0xb8, 0x99, 0xf4, 0x4f, 0x40, 0xd3, 0xd3, 0x42, 0x99, 0xba, 0x37, 0xdf,
+  0x6b, 0x0c, 0x80, 0xd2, 0x40, 0xd4, 0x2e, 0x2c, 0x41, 0x02, 0xba, 0x0b,
+  0x36, 0x4a, 0x39, 0x58, 0x6e, 0x65, 0x17, 0xc4, 0xd7, 0xe7, 0x42, 0xf5,
+  0xca, 0x72, 0x49, 0x3c, 0x5f, 0x45, 0x95, 0xb4, 0x7f, 0xf7, 0xd3, 0x6c,
+  0x2b, 0x51, 0x13, 0xf0, 0xbb, 0xac, 0xe6, 0x40, 0x9a, 0x6d, 0xbd, 0xc5,
+  0x6d, 0x2d, 0x83, 0x81, 0x75, 0x28, 0x8e, 0x43, 0x18, 0x25, 0x90, 0xd3,
+  0x07, 0x01, 0x08, 0xc7, 0x0c, 0x4f, 0xaf, 0x85, 0x0f, 0xf0, 0xc6, 0x73,
+  0xec, 0xde, 0x62, 0x49, 0x92, 0xda, 0xbb, 0xa2, 0xb3, 0x6a, 0x32, 0x2b,
+  0xbb, 0x49, 0x21, 0xd7, 0x91, 0x8a, 0x6f, 0xa7, 0x19, 0x1d, 0xb1, 0x58,
+  0xc1, 0x84, 0xe7, 0x23, 0x49, 0xdd, 0xbd, 0xd7, 0x66, 0xc4, 0x63, 0x3f,
+  0x86, 0xfe, 0x5f, 0x52, 0xbb, 0xf5, 0x3b, 0xb3, 0x38, 0xfa, 0x98, 0x95,
+  0xd0, 0x1a, 0xc1, 0xf4, 0x97, 0xb2, 0x65, 0xce, 0x5b, 0xcd, 0x8e, 0x77,
+  0xd9, 0xe9, 0x86, 0x40, 0xc0, 0x01, 0xa9, 0x1a, 0x62, 0xd1, 0xde, 0x2c,
+  0x0b, 0xe4, 0x60, 0xc2, 0x29, 0xc6, 0x44, 0x74, 0x03, 0xe7, 0xe2, 0x34,
+  0xe7, 0x4c, 0xe3, 0x94, 0xeb, 0xf2, 0xf6, 0xb0, 0x15, 0x1d, 0x52, 0x4a,
+  0x6d, 0x85, 0xdd, 0xed, 0x9e, 0x60, 0x4b, 0x75, 0x0f, 0x95, 0x62, 0x30,
+  0x1c, 0x71, 0x92, 0xf9, 0xd8, 0xb8, 0x49, 0x31, 0x23, 0x6a, 0xe8, 0x75,
+  0x49, 0xc9, 0x42, 0xf6, 0x6c, 0x6f, 0xf8, 0x62, 0x80, 0xa0, 0x0f, 0xdf,
+  0x9a, 0xbc, 0x95, 0x6c, 0x92, 0xa0, 0x43, 0xb3, 0xbc, 0x84, 0xdf, 0xda,
+  0x1c, 0xca, 0xec, 0xb1, 0x6a, 0xdf, 0x40, 0xec, 0x38, 0xc8, 0x26, 0x5b,
+  0x49, 0x2b, 0xc0, 0x63, 0x56, 0x4c, 0x84, 0x1c, 0xd8, 0xe8, 0x24, 0x8c,
+  0xb2, 0x0f, 0xf1, 0xcc, 0xb1, 0xe0, 0xcb, 0xc8, 0x96, 0xe9, 0xa0, 0xf4,
+  0xf8, 0x06, 0x06, 0x9d, 0x94, 0x83, 0x5f, 0x95, 0xdf, 0x22, 0x1a, 0xd5,
+  0x31, 0x73, 0x73, 0xe7, 0xb0, 0x3f, 0x27, 0xc6, 0xc2, 0x78, 0xc6, 0xa3,
+  0xa2, 0xbe, 0x76, 0x74, 0xc5, 0x13, 0xc6, 0x26, 0x26, 0x97, 0x4b, 0x04,
+  0xef, 0xfa, 0xb8, 0x0e, 0xa6, 0x34, 0xd8, 0x6d, 0x24, 0x9a, 0xbc, 0x63,
+  0x39, 0xba, 0x61, 0x6f, 0x22, 0xcd, 0xd0, 0x85, 0x27, 0xc1, 0x6c, 0x8e,
+  0xdb, 0x1a, 0xbc, 0xbd, 0x30, 0xad, 0x8a, 0x97, 0x19, 0xdb, 0xc5, 0x56,
+  0xe0, 0x4a, 0x05, 0xe6, 0xb4, 0xa3, 0x84, 0xf0, 0x52, 0xb3, 0x58, 0x1c,
+  0x6c, 0x69, 0xb2, 0x29, 0x72, 0x16, 0x0f, 0x84, 0x87, 0x2c, 0x0a, 0x04,
+  0x2c, 0x15, 0xa3, 0xbe, 0xbc, 0x54, 0xe1, 0xd8, 0x76, 0x4d, 0x7c, 0x8d,
+  0x83, 0xbc, 0xea, 0xd0, 0xfe, 0xf3, 0x44, 0xdb, 0xaf, 0x54, 0x77, 0xe9,
+  0xa7, 0xd5, 0x38, 0xcf, 0x63, 0x0a, 0x20, 0xe2, 0xe2, 0xb7, 0x92, 0x23,
+  0xde, 0xc4, 0xe4, 0x60, 0x78, 0x78, 0x7c, 0xec, 0xd6, 0x7a, 0x20, 0x31,
+  0x67, 0x1c, 0x10, 0xaf, 0x8c, 0x9e, 0x65, 0x2e, 0x61, 0xec, 0xa3, 0xf6,
+  0x56, 0x66, 0xf0, 0x83, 0x8d, 0xcd, 0xcc, 0x26, 0x27, 0x92, 0x1e, 0x87,
+  0xbb, 0x8a, 0x17, 0x8a, 0x36, 0xa1, 0x52, 0x2f, 0xe6, 0x9f, 0xea, 0xfb,
+  0x45, 0xf6, 0xea, 0x60, 0x7d, 0x10, 0x2a, 0xc5, 0x6d, 0x42, 0x4b, 0x97,
+  0xd0, 0x7d, 0xe5, 0x2a, 0x66, 0xc1, 0x08, 0x6c, 0x65, 0xa2, 0x91, 0x26,
+  0x7a, 0x2b, 0xc3, 0x6b, 0x3c, 0x83, 0x02, 0x73, 0xc9, 0xbe, 0xf6, 0xf9,
+  0x93, 0x3d, 0xba, 0x59, 0x49, 0xd6, 0x9c, 0x55, 0xa1, 0x7c, 0xcf, 0xa2,
+  0xe1, 0xa7, 0x3a, 0x61, 0x84, 0x39, 0x27, 0x5f, 0xe1, 0x9d, 0xb6, 0x58,
+  0x1a, 0xdc, 0x14, 0x2b, 0x6c, 0x6a, 0x08, 0xc4, 0x73, 0x7e, 0xb7, 0xdc,
+  0x2e, 0x3d, 0xb3, 0x74, 0x8a, 0x54, 0xd7, 0xda, 0xd9, 0x25, 0x3c, 0x49,
+  0x1d, 0x21, 0x87, 0xa8, 0x76, 0x4a, 0x74, 0xda, 0x4b, 0x96, 0x73, 0xfc,
+  0x74, 0xac, 0x29, 0xe7, 0xe9, 0x43, 0xa7, 0x2e, 0x11, 0x82, 0xd9, 0x10,
+  0x7f, 0x40, 0xc3, 0xd1, 0xb5, 0x14, 0x2f, 0x03, 0x1f, 0x4a, 0x70, 0x2b,
+  0xef, 0x85, 0x5b, 0xa1, 0xc4, 0x6c, 0x9a, 0xbf, 0x4e, 0x65, 0xe8, 0x8e,
+  0xfc, 0x6c, 0x32, 0x36, 0xad, 0x7a, 0x20, 0x4c, 0x6f, 0x75, 0x28, 0xf9,
+  0x7d, 0xc5, 0xd1, 0x32, 0x57, 0x19, 0x47, 0x3d, 0xca, 0xbd, 0xb3, 0x34,
+  0x7d, 0x5a, 0x2c, 0x87, 0x1f, 0xd5, 0x81, 0xfb, 0xf1, 0xbe, 0xf3, 0xf6,
+  0x30, 0xcb, 0x84, 0xd8, 0xf4, 0x01, 0xd9, 0xc8, 0x60, 0x67, 0xdb, 0xd7,
+  0xc7, 0x4b, 0xe6, 0xc3, 0xe0, 0x29, 0x8f, 0xe9, 0xe5, 0x85, 0x4a, 0x0e,
+  0xfc, 0x82, 0x0b, 0x08, 0x32, 0x3a, 0x90, 0x38, 0x26, 0xce, 0x27, 0xd0,
+  0x3b, 0xac, 0xcd, 0xf2, 0x99, 0xed, 0x4a, 0x04, 0x30, 0xdd, 0x2f, 0x90,
+  0xd3, 0x9c, 0xa8, 0x3c, 0x48, 0x0e, 0xd9, 0x78, 0x8d, 0x36, 0x2a, 0x6e,
+  0xc4, 0x6e, 0x4d, 0xbf, 0x55, 0x1d, 0xea, 0x49, 0x5d, 0x4c, 0xb1, 0xbf,
+  0xa6, 0x79, 0x6c, 0xb4, 0x09, 0x77, 0x19, 0xc7, 0x6d, 0x36, 0x9a, 0x72,
+  0x92, 0x2e, 0xbf, 0x16, 0x27, 0x46, 0x61, 0x91, 0x9b, 0xd5, 0xd6, 0x40,
+  0x05, 0x4f, 0x7b, 0x19, 0x57, 0x26, 0x1c, 0x52, 0x24, 0xeb, 0xcf, 0x0b,
+  0x39, 0x61, 0xe1, 0x85, 0xde, 0x16, 0x46, 0x88, 0x7d, 0x06, 0x12, 0x50,
+  0xfb, 0xea, 0x77, 0x57, 0x6f, 0x96, 0x78, 0xc6, 0xe6, 0xc4, 0xbc, 0x88,
+  0x65, 0x47, 0x99, 0x9e, 0x98, 0x81, 0xf8, 0x0a, 0x17, 0x63, 0x85, 0x93,
+  0x54, 0xe4, 0x4e, 0xe0, 0x94, 0x21, 0x31, 0x29, 0x20, 0xa8, 0xa5, 0x97,
+  0xac, 0xf7, 0xd7, 0x7b, 0x2b, 0x2f, 0xa4, 0xa8, 0x48, 0x22, 0xec, 0x22,
+  0x22, 0x13, 0x71, 0x90, 0x43, 0x27, 0xac, 0x40, 0xa3, 0x42, 0x55, 0x60,
+  0x8d, 0x8a, 0xab, 0x7c, 0x92, 0xda, 0xca, 0xa9, 0xb7, 0x8f, 0x89, 0xe0,
+  0xca, 0x74, 0x2d, 0xe1, 0xa4, 0x3c, 0xb4, 0x41, 0x72, 0x30, 0x97, 0xb0,
+  0x5f, 0x38, 0xdf, 0x30, 0x31, 0xeb, 0x82, 0x25, 0xfd, 0xf6, 0x6a, 0x17,
+  0xee, 0x9e, 0x68, 0x88, 0x68, 0x2b, 0x44, 0x23, 0x55, 0xf7, 0xf4, 0x21,
+  0x1c, 0x02, 0xe2, 0xd1, 0x1b, 0x7c, 0xc1, 0xab, 0x8d, 0x8c, 0xc3, 0x90,
+  0xdc, 0xa2, 0xc8, 0xbd, 0x71, 0x77, 0x5d, 0x4c, 0x45, 0xd8, 0x6e, 0x35,
+  0xe7, 0x15, 0xbe, 0xe4, 0x8e, 0xa5, 0x15, 0xb1, 0x33, 0xc1, 0xc6, 0x08,
+  0x71, 0xa3, 0xcc, 0xd8, 0xf5, 0x01, 0x4b, 0x40, 0x59, 0xc2, 0x6f, 0x3f,
+  0xcd, 0xd2, 0x72, 0x7a, 0x6f, 0xda, 0x40, 0xff, 0x36, 0xe6, 0x8f, 0x84,
+  0x59, 0x90, 0x28, 0x2c, 0x2d, 0xe7, 0x78, 0x46, 0xc3, 0x30, 0x2c, 0x8f,
+  0xa2, 0x96, 0xc0, 0x18, 0x89, 0xde, 0x81, 0x08, 0x7a, 0x9b, 0xc3, 0xf0,
+  0x40, 0xc4, 0x46, 0x0a, 0x6c, 0x9b, 0x12, 0xe1, 0x17, 0x60, 0x92, 0xe1,
+  0x26, 0x25, 0xea, 0xf0, 0x9a, 0x73, 0x82, 0xd4, 0x5a, 0x41, 0x47, 0xf1,
+  0x9a, 0x6e, 0xc8, 0x2a, 0xaf, 0x97, 0x69, 0x74, 0xb9, 0x86, 0xac, 0x82,
+  0x7f, 0x36, 0x78, 0xfa, 0x64, 0xb0, 0xe3, 0x35, 0x09, 0xbe, 0xc7, 0x11,
+  0xa0, 0x92, 0xcf, 0x34, 0x05, 0x4d, 0x15, 0xb2, 0x8e, 0x1c, 0xd7, 0x99,
+  0x9f, 0x85, 0x77, 0xa9, 0xa8, 0xc0, 0xb4, 0x6b, 0x29, 0x23, 0xd9, 0x47,
+  0x6d, 0x6d, 0x74, 0x1f, 0xb2, 0xfd, 0x7f, 0xe0, 0xbe, 0x97, 0x0b, 0x3f,
+  0x8c, 0xe7, 0x8d, 0x1c, 0x30, 0x1e, 0xc3, 0x0a, 0x81, 0xe0, 0x50, 0x28,
+  0x8a, 0x38, 0xfe, 0x7c, 0x49, 0x52, 0x41, 0x9d, 0xbc, 0x2c, 0x2e, 0x2f,
+  0xe9, 0xfc, 0x7d, 0xd1, 0x51, 0x40, 0xe4, 0x91, 0xed, 0x73, 0xce, 0xf5,
+  0xe2, 0x6b, 0xc3, 0xd8, 0x57, 0xd2, 0x0c, 0x87, 0x4e, 0xd4, 0x93, 0x7b,
+  0x95, 0x83, 0x42, 0xa4, 0xb9, 0x41, 0x44, 0x0d, 0x09, 0xbf, 0xb7, 0x1d,
+  0x97, 0x08, 0x28, 0x0b, 0xb2, 0x65, 0xf3, 0x90, 0xc4, 0xcf, 0xea, 0x95,
+  0xd5, 0x4e, 0x50, 0x31, 0x4d, 0xf5, 0x26, 0x5f, 0x2c, 0x40, 0x41, 0x92,
+  0x59, 0xc2, 0x0c, 0xc8, 0xa9, 0xfc, 0xa3, 0x8c, 0x8e, 0x2a, 0x93, 0x9a,
+  0x85, 0x11, 0x15, 0x4b, 0x92, 0x4b, 0x64, 0xd0, 0xa3, 0x8c, 0xf6, 0xb1,
+  0xdd, 0x9c, 0x29, 0xdc, 0x3e, 0x9c, 0x58, 0xf5, 0x99, 0x09, 0x42, 0x87,
+  0xe7, 0xca, 0xd5, 0xb1, 0x4d, 0x3e, 0xb6, 0x4f, 0xcd, 0x3d, 0x31, 0x8e,
+  0xe4, 0x4d, 0xcb, 0x8e, 0xcb, 0x0c, 0x8f, 0xff, 0xe7, 0x91, 0x0f, 0xfe,
+  0x76, 0xd1, 0xd5, 0xf7, 0x7c, 0x04, 0x63, 0xb7, 0x66, 0x42, 0xec, 0xee,
+  0x90, 0xf6, 0x6b, 0x9d, 0x87, 0x82, 0x0b, 0xc0, 0xee, 0x26, 0xba, 0xb1,
+  0x0b, 0x44, 0x1b, 0x49, 0x9c, 0x3c, 0xe7, 0x9c, 0x81, 0x02, 0xef, 0x88,
+  0xbf, 0x64, 0xdb, 0x1c, 0xe2, 0x55, 0x74, 0xae, 0x03, 0xde, 0x42, 0x0e,
+  0xec, 0x74, 0xa2, 0xdd, 0x71, 0x2d, 0x62, 0x37, 0x0b, 0x59, 0x7e, 0xfb,
+  0x34, 0x74, 0x75, 0x9b, 0x15, 0x40, 0x8d, 0x1f, 0xef, 0x32, 0x28, 0xb5,
+  0x82, 0x4a, 0x9c, 0xe9, 0xf2, 0xb7, 0x14, 0x60, 0xfb, 0xe3, 0x7c, 0x71,
+  0x0d, 0x4d, 0xed, 0x25, 0x87, 0xb3, 0xc1, 0x1c, 0x2c, 0x1f, 0x7c, 0x11,
+  0x75, 0x72, 0x0d, 0xf5, 0x60, 0x54, 0x7a, 0xbd, 0xdb, 0xdb, 0xca, 0x54,
+  0x73, 0x53, 0xac, 0x2c, 0xcc, 0x5f, 0x43, 0x28, 0xa9, 0xe9, 0x36, 0x1f,
+  0x74, 0x1d, 0x89, 0xa1, 0xcd, 0x94, 0x36, 0x4e, 0x5b, 0xb0, 0xaf, 0x06,
+  0xc9, 0x39, 0x5b, 0x35, 0x97, 0x0b, 0x89, 0xab, 0x87, 0x4b, 0x4c, 0xbf,
+  0xeb, 0xe8, 0x25, 0x55, 0xdd, 0x08, 0xd9, 0xe1, 0x6c, 0xc3, 0xb0, 0xbf,
+  0x79, 0x43, 0x5c, 0xcb, 0x83, 0xef, 0x48, 0x80, 0xde, 0x6f, 0x5b, 0x6b,
+  0xe1, 0x63, 0xde, 0xdf, 0xde, 0xbe, 0xbb, 0xbb, 0x1b, 0x10, 0xc7, 0x9e,
+  0x57, 0xd5, 0x74, 0x50, 0x94, 0x57, 0xdb, 0x93, 0x62, 0x5c, 0x6d, 0xa7,
+  0x8b, 0x45, 0xb5, 0x6d, 0x23, 0x6c, 0x64, 0x8b, 0x99, 0x8d, 0x6a, 0x38,
+  0x74, 0x93, 0x03, 0xab, 0x62, 0x13, 0xb2, 0x93, 0x09, 0xd9, 0xb4, 0x46,
+  0x0c, 0x5e, 0x3c, 0x21, 0x27, 0x6a, 0xb8, 0xfe, 0x7a, 0xbe, 0xbc, 0x38,
+  0x19, 0x8a, 0x79, 0xac, 0x7d, 0x9f, 0x23, 0x95, 0x29, 0xb1, 0xed, 0x09,
+  0x1b, 0x67, 0xbb, 0x8b, 0x68, 0x3c, 0xc3, 0xe1, 0x21, 0x7f, 0x38, 0x5c,
+  0x42, 0xb2, 0xa2, 0x6e, 0xca, 0xfb, 0x44, 0x3d, 0x36, 0x6d, 0xe2, 0xa7,
+  0xe9, 0x26, 0x9f, 0xfa, 0x9f, 0x2d, 0xc4, 0x55, 0x5e, 0x0f, 0x2e, 0xb3,
+  0x49, 0x51, 0xa6, 0x1d, 0xc3, 0x76, 0x81, 0x8c, 0x3e, 0x5e, 0x9d, 0x31,
+  0x3d, 0xb5, 0x4d, 0xda, 0xc2, 0x07, 0x5a, 0xaf, 0x01, 0x7e, 0x67, 0x63,
+  0x8c, 0x2c, 0x9a, 0x7d, 0x8c, 0xf5, 0xfa, 0xdd, 0x6b, 0x56, 0xa6, 0xe9,
+  0x3c, 0x54, 0xbf, 0x25, 0x61, 0x93, 0xe4, 0xc8, 0xfe, 0xbd, 0x49, 0x5c,
+  0x54, 0x3d, 0x37, 0x13, 0x7e, 0xe2, 0x9f, 0xf4, 0xd1, 0xda, 0xed, 0x24,
+  0x6a, 0x12, 0x0e, 0xaf, 0x0a, 0xba, 0xe4, 0xaf, 0x67, 0xed, 0xf5, 0x64,
+  0xbe, 0x61, 0x1e, 0x74, 0xb6, 0x86, 0x93, 0x1e, 0x7e, 0x6b, 0x86, 0x8a,
+  0xe5, 0x3c, 0x68, 0x9d, 0x28, 0x61, 0x4c, 0x9c, 0x02, 0x29, 0x4d, 0xe6,
+  0xa4, 0xeb, 0x6c, 0x8f, 0x05, 0xaa, 0x7a, 0xe3, 0xbe, 0xcb, 0x88, 0x70,
+  0xba, 0xff, 0x9c, 0x13, 0x2f, 0xa8, 0x6d, 0x9f, 0xd2, 0xcd, 0x7e, 0x26,
+  0x78, 0x94, 0x62, 0xa3, 0xe3, 0x25, 0x6a, 0x89, 0x16, 0xcd, 0xa5, 0xe2,
+  0xf3, 0xda, 0xc7, 0xf2, 0x82, 0xd7, 0xbd, 0x94, 0xcc, 0x8a, 0x0e, 0x0f,
+  0x78, 0x9b, 0x7e, 0xcc, 0x67, 0xcb, 0x19, 0x6f, 0x03, 0x28, 0x4f, 0x1f,
+  0xd3, 0xbb, 0x44, 0xac, 0x45, 0x30, 0x86, 0x48, 0xb7, 0x1b, 0xd0, 0x67,
+  0x1d, 0x27, 0x88, 0x78, 0xcb, 0x6a, 0x44, 0x39, 0x79, 0x37, 0x32, 0x84,
+  0x13, 0x22, 0xf3, 0x19, 0x02, 0xc6, 0x9a, 0x5c, 0x24, 0x59, 0x5c, 0xa7,
+  0x55, 0xc6, 0x59, 0x14, 0xf9, 0xa5, 0x4c, 0x29, 0xcc, 0xe9, 0x69, 0xa4,
+  0xf6, 0x68, 0xbe, 0x9f, 0xe7, 0xb8, 0x24, 0x70, 0xe5, 0xc5, 0x44, 0x22,
+  0x7c, 0x59, 0xc0, 0x97, 0x8b, 0x37, 0xe9, 0xa3, 0x2d, 0xdc, 0x16, 0xe6,
+  0xf8, 0x6c, 0xab, 0xdb, 0x1f, 0xd9, 0x97, 0x2a, 0x02, 0x8d, 0xf9, 0xf0,
+  0x3f, 0x1b, 0x3c, 0xd9, 0x43, 0xb0, 0x46, 0xc3, 0x10, 0x26, 0x19, 0x50,
+  0xc4, 0x74, 0xc6, 0xf9, 0xcc, 0x05, 0x64, 0xaf, 0x56, 0xb6, 0x58, 0xf2,
+  0x9c, 0x41, 0x4e, 0x98, 0xa5, 0x1f, 0x79, 0xcd, 0xff, 0x71, 0xb9, 0xe5,
+  0xf1, 0xd3, 0xc0, 0xb2, 0x2a, 0xe9, 0x95, 0x65, 0x9b, 0xe0, 0xd8, 0x37,
+  0xed, 0xfc, 0x48, 0xbc, 0x65, 0x7f, 0x21, 0xaa, 0x55, 0x81, 0x5d, 0x43,
+  0x70, 0xfa, 0x16, 0xa3, 0xdc, 0x0b, 0x28, 0x4a, 0xda, 0x8c, 0x18, 0x6a,
+  0x69, 0x27, 0x88, 0xe0, 0x11, 0x43, 0x04, 0x43, 0x2f, 0x22, 0x83, 0x71,
+  0xde, 0x0b, 0xfa, 0xfb, 0x3a, 0xa7, 0x91, 0x97, 0xe3, 0xeb, 0x7b, 0xe8,
+  0x5b, 0x70, 0xa1, 0x88, 0xd9, 0x28, 0x88, 0x23, 0x68, 0xd3, 0x2f, 0xf7,
+  0xa1, 0x7a, 0x3e, 0x46, 0x9f, 0xe0, 0xfc, 0xd0, 0x73, 0x26, 0x27, 0xb4,
+  0x46, 0x07, 0x45, 0x00, 0x27, 0x37, 0x9b, 0x56, 0x6c, 0x61, 0x8b, 0x8c,
+  0xae, 0x5f, 0x04, 0x6a, 0x10, 0x5f, 0xcf, 0x50, 0xd2, 0xf2, 0x92, 0x6d,
+  0x8f, 0x97, 0xbe, 0x23, 0xf8, 0x91, 0xa4, 0x2f, 0x0e, 0xf1, 0x85, 0x0e,
+  0x79, 0xdf, 0xa5, 0x11, 0x68, 0xe9, 0xfa, 0xbe, 0xad, 0xbd, 0xf9, 0xce,
+  0x3b, 0x7a, 0x51, 0x61, 0xf3, 0x31, 0x0d, 0xd2, 0x16, 0x26, 0xb7, 0xfc,
+  0x57, 0x61, 0x3b, 0x10, 0x70, 0x68, 0x30, 0x02, 0x95, 0x00, 0x4e, 0xde,
+  0xef, 0x5f, 0xd6, 0x1d, 0x47, 0x4d, 0xb0, 0xa5, 0xcd, 0x9d, 0x9e, 0x5e,
+  0x42, 0xbc, 0x24, 0x1a, 0xa9, 0x93, 0x93, 0x37, 0xb8, 0x9a, 0x0f, 0xcf,
+  0xe9, 0x67, 0x6e, 0x61, 0x07, 0x50, 0x26, 0x18, 0xe9, 0x00, 0x36, 0x9d,
+  0xb7, 0xdf, 0x0d, 0x93, 0xcd, 0xd3, 0xe1, 0xf6, 0x93, 0x17, 0x3b, 0x5d,
+  0xeb, 0xc2, 0x26, 0xe0, 0x18, 0x34, 0x10, 0x5d, 0xc2, 0x00, 0x77, 0x9a,
+  0xd1, 0x6a, 0xe8, 0x0b, 0x4b, 0xc9, 0x76, 0x81, 0xa8, 0x49, 0x60, 0xb8,
+  0x0d, 0x40, 0x89, 0x2d, 0x97, 0xd2, 0x2a, 0xf9, 0x3a, 0x3a, 0xcf, 0xb3,
+  0xa3, 0xb7, 0x66, 0xbe, 0x95, 0x48, 0x18, 0x92, 0x8b, 0x69, 0xd4, 0x70,
+  0x58, 0x76, 0x09, 0xeb, 0x3c, 0xbb, 0x35, 0xaf, 0x41, 0x72, 0xc2, 0xd7,
+  0x3d, 0xb3, 0x1d, 0x58, 0x98, 0x4d, 0x78, 0x58, 0x64, 0x10, 0x09, 0x7d,
+  0x0b, 0xca, 0x99, 0x70, 0x07, 0x77, 0x98, 0xcf, 0x28, 0x0b, 0x63, 0x60,
+  0x48, 0xf2, 0x46, 0xde, 0xf1, 0x6f, 0x77, 0x02, 0x23, 0xd1, 0x69, 0xbb,
+  0x2f, 0x06, 0x9f, 0x6d, 0xb9, 0xb5, 0x9c, 0xf4, 0x2c, 0x9b, 0xe4, 0xe5,
+  0x03, 0x4e, 0xbe, 0x61, 0x26, 0xfc, 0x36, 0x4c, 0x12, 0xe7, 0x97, 0xd8,
+  0x01, 0xc7, 0x59, 0x55, 0xe6, 0x9a, 0x66, 0xbf, 0x15, 0xdf, 0x41, 0x78,
+  0xb5, 0x2d, 0xe0, 0x2b, 0x56, 0x48, 0x10, 0x90, 0xc0, 0xbe, 0x2e, 0x28,
+  0xd0, 0xba, 0x68, 0xc9, 0xa8, 0x2c, 0xee, 0x60, 0x45, 0xe2, 0xf4, 0x26,
+  0xa6, 0xce, 0x54, 0xa2, 0xca, 0xaf, 0xd3, 0x8e, 0x17, 0x96, 0xe6, 0xec,
+  0x82, 0x5b, 0xbe, 0xb9, 0x78, 0x7b, 0x22, 0xb9, 0x3d, 0xb8, 0xb9, 0x16,
+  0x1a, 0x63, 0xc3, 0x63, 0x5e, 0x8e, 0x88, 0xbb, 0x43, 0x2d, 0xad, 0x45,
+  0x34, 0xc4, 0xb1, 0x8f, 0xb0, 0x5e, 0x36, 0x4d, 0x3a, 0x81, 0x7c, 0x11,
+  0xf3, 0x6b, 0xea, 0x5d, 0x68, 0x1e, 0x28, 0xde, 0x4c, 0x52, 0xc0, 0xe9,
+  0x0e, 0xbb, 0x5f, 0xb4, 0x29, 0x87, 0x04, 0xb6, 0xa9, 0x1a, 0xe0, 0xb6,
+  0x3f, 0xf6, 0x49, 0xa6, 0xeb, 0x63, 0x74, 0x7d, 0x6a, 0x5e, 0xa2, 0x33,
+  0xc0, 0x82, 0x0e, 0xe9, 0x96, 0x16, 0x3a, 0x49, 0xfa, 0x6f, 0xb0, 0x15,
+  0x78, 0xa4, 0xb3, 0x7d, 0xc1, 0x2e, 0xa9, 0x82, 0xc5, 0xcb, 0xc6, 0x86,
+  0x3c, 0x7c, 0x2a, 0x66, 0xe0, 0x81, 0xfd, 0x55, 0xa6, 0x77, 0x9c, 0x5e,
+  0x34, 0xe5, 0x68, 0x84, 0x48, 0x7c, 0x07, 0x5e, 0x86, 0x92, 0xee, 0x32,
+  0xc8, 0x38, 0x8d, 0x3d, 0xb5, 0xa4, 0x71, 0x89, 0x48, 0xa7, 0x15, 0xac,
+  0xd3, 0xda, 0xe7, 0x91, 0x24, 0x5f, 0x6a, 0xba, 0x79, 0xd7, 0x8e, 0x54,
+  0xb2, 0x73, 0x08, 0xb8, 0x23, 0xea, 0xba, 0x25, 0x2d, 0x82, 0x6e, 0x55,
+  0x38, 0xe2, 0xca, 0xfb, 0x9e, 0x59, 0x83, 0xc4, 0x59, 0xe6, 0x83, 0x06,
+  0x56, 0x39, 0x8f, 0x64, 0x12, 0xf2, 0x72, 0xe2, 0x5c, 0x75, 0xcc, 0xc7,
+  0x48, 0x88, 0xec, 0x6b, 0x68, 0x0b, 0x46, 0x24, 0xd9, 0x5f, 0x80, 0xad,
+  0x90, 0x8d, 0xe7, 0x58, 0x99, 0x56, 0x73, 0x9c, 0xd4, 0x9d, 0xb2, 0x0b,
+  0xcc, 0x9a, 0x76, 0x3b, 0x10, 0x3b, 0x77, 0x3e, 0x03, 0x2d, 0x88, 0x97,
+  0xb4, 0x03, 0xc8, 0xa1, 0x8e, 0x2c, 0x46, 0x73, 0xe2, 0x91, 0x62, 0x30,
+  0x08, 0x0d, 0x93, 0xc0, 0xd5, 0xef, 0x98, 0x90, 0x20, 0x43, 0x89, 0xf7,
+  0x57, 0x2d, 0xc6, 0x9c, 0xb7, 0xb5, 0xc8, 0x71, 0x53, 0x35, 0x3c, 0x77,
+  0x72, 0x78, 0x67, 0x59, 0x79, 0x15, 0x58, 0x56, 0x23, 0x56, 0x09, 0x9f,
+  0x4d, 0xc2, 0xda, 0xf1, 0xbf, 0xf7, 0xc5, 0xe3, 0xcc, 0xb7, 0xd9, 0x52,
+  0x5c, 0x72, 0xfc, 0xc5, 0x06, 0x12, 0xda, 0xd4, 0x77, 0x3f, 0xa7, 0x65,
+  0x01, 0x11, 0x75, 0xb5, 0xed, 0xe9, 0xf4, 0xd5, 0x94, 0x34, 0xff, 0xfb,
+  0x8d, 0x44, 0x33, 0x32, 0x35, 0xb0, 0xbb, 0x56, 0xcb, 0x00, 0xe7, 0xfa,
+  0x8c, 0xaf, 0x97, 0xf3, 0x1b, 0xd3, 0xdc, 0xa7, 0x45, 0x81, 0x80, 0x22,
+  0x38, 0x64, 0x5a, 0xcd, 0x6d, 0x04, 0xbd, 0xfd, 0x7b, 0xd8, 0x76, 0x6c,
+  0x95, 0x39, 0x9b, 0x9f, 0x93, 0x01, 0xdd, 0x09, 0x73, 0xd7, 0xaa, 0x80,
+  0x43, 0x24, 0x5f, 0xf6, 0x2c, 0xb2, 0xa5, 0xf6, 0xc4, 0x83, 0x18, 0xb1,
+  0xb4, 0xcb, 0x05, 0xb2, 0xc0, 0x69, 0xce, 0x46, 0x57, 0xd7, 0xaa, 0xb8,
+  0xc5, 0x61, 0xcf, 0xb6, 0xa8, 0x8e, 0x86, 0x45, 0x18, 0x0f, 0x47, 0xee,
+  0x6a, 0x8f, 0x72, 0xc4, 0xb1, 0x13, 0x83, 0xe4, 0x6d, 0x98, 0x31, 0xde,
+  0x8a, 0x7c, 0xb2, 0x5d, 0x1c, 0x24, 0x67, 0xb4, 0x5e, 0xfd, 0x8e, 0x7f,
+  0xfb, 0xca, 0xb6, 0x5d, 0x82, 0x46, 0xd2, 0x70, 0xc4, 0x93, 0x64, 0xe3,
+  0xb2, 0x28, 0x46, 0x69, 0xb9, 0xa1, 0x1b, 0xc0, 0x61, 0x3a, 0x23, 0x55,
+  0xde, 0xb0, 0x24, 0xd1, 0xd3, 0x91, 0x7c, 0x29, 0x6f, 0x0d, 0x44, 0x8c,
+  0x0a, 0x78, 0x43, 0x31, 0x9d, 0xb8, 0x45, 0x68, 0x77, 0x18, 0xd9, 0x34,
+  0x6c, 0x2a, 0xc9, 0x56, 0x69, 0x59, 0xe6, 0x80, 0x6f, 0xa0, 0x23, 0xbf,
+  0x2c, 0xe7, 0x92, 0x0d, 0x3d, 0xcf, 0xee, 0x24, 0xb2, 0xc0, 0x39, 0xef,
+  0x10, 0x11, 0x04, 0xbc, 0x07, 0x98, 0x06, 0x74, 0x13, 0x3b, 0x8e, 0x35,
+  0xd8, 0x16, 0x05, 0x80, 0x20, 0xe0, 0x18, 0xb5, 0x38, 0xf8, 0x1e, 0xe6,
+  0x32, 0x38, 0x61, 0x71, 0x56, 0xc0, 0xfc, 0x4c, 0xb8, 0x46, 0x20, 0x71,
+  0xbc, 0x66, 0x9e, 0xb8, 0x9c, 0x2d, 0x2c, 0xb4, 0x2c, 0x2a, 0x0d, 0x7c,
+  0xcf, 0x26, 0x7f, 0xcd, 0x48, 0x16, 0x9c, 0x07, 0x73, 0xd0, 0x1b, 0x4b,
+  0x6f, 0x18, 0xe6, 0xe3, 0x56, 0xe5, 0x50, 0x3d, 0x92, 0x68, 0x04, 0x07,
+  0x96, 0x40, 0xcb, 0x1f, 0x80, 0x2e, 0xa8, 0x87, 0x1c, 0xed, 0x6a, 0x37,
+  0x31, 0x97, 0x4d, 0xaa, 0xa1, 0x02, 0x1c, 0x12, 0x26, 0x7a, 0x15, 0xbd,
+  0x4a, 0xcd, 0x0c, 0x34, 0x42, 0x20, 0x80, 0x19, 0x70, 0xc3, 0x85, 0x4d,
+  0x6c, 0x3a, 0x89, 0x39, 0x95, 0xf9, 0x54, 0xc8, 0x8e, 0xe7, 0x0a, 0x03,
+  0xc0, 0x1a, 0x92, 0x83, 0xf2, 0x9a, 0x3b, 0x11, 0xc6, 0x61, 0xf9, 0xa8,
+  0x1d, 0xba, 0xb3, 0xe0, 0x0d, 0xab, 0xf4, 0xbf, 0xb1, 0x19, 0x65, 0x85,
+  0x37, 0x5f, 0x32, 0x58, 0x47, 0x72, 0x58, 0xe5, 0x02, 0x2f, 0x3a, 0x81,
+  0x84, 0x41, 0xb8, 0x40, 0x67, 0x65, 0x5b, 0x1a, 0x80, 0x48, 0x9d, 0xd4,
+  0x5f, 0x60, 0x67, 0x73, 0x7a, 0xb1, 0x50, 0x62, 0x5a, 0x86, 0xd2, 0x53,
+  0x47, 0xb2, 0xc2, 0xbc, 0xd6, 0x75, 0xb9, 0xd6, 0xd5, 0x29, 0xb7, 0x94,
+  0xb7, 0xa0, 0x1a, 0x33, 0x57, 0x28, 0x7f, 0xd3, 0x88, 0x43, 0x7f, 0x19,
+  0xc7, 0xc5, 0x29, 0x28, 0x63, 0xfe, 0x32, 0xef, 0xbc, 0xa9, 0x77, 0xde,
+  0x43, 0x92, 0xd8, 0x85, 0xda, 0xc5, 0x6b, 0x75, 0xa1, 0xb2, 0xa5, 0x75,
+  0xca, 0x7a, 0x4d, 0x2b, 0x10, 0x84, 0xb4, 0x03, 0x8d, 0xeb, 0x03, 0xe9,
+  0x77, 0xa4, 0x78, 0x44, 0xff, 0x20, 0x14, 0x9c, 0xe8, 0xb1, 0x2a, 0xb2,
+  0xdb, 0x30, 0xb7, 0xd1, 0xaf, 0x8b, 0xde, 0xdc, 0x92, 0xb5, 0xfd, 0x49,
+  0x9c, 0xda, 0x87, 0xc4, 0xc4, 0xd8, 0xb4, 0x00, 0xc0, 0x24, 0xaf, 0x95,
+  0x5b, 0x2d, 0xd8, 0x88, 0xa3, 0xb0, 0x44, 0x92, 0x18, 0x9f, 0x18, 0x28,
+  0x11, 0x07, 0x48, 0x85, 0x2b, 0x1a, 0x09, 0x24, 0x46, 0x16, 0xe3, 0x47,
+  0xce, 0x69, 0xd5, 0xdb, 0xc9, 0xf1, 0x2c, 0x09, 0x89, 0x68, 0x73, 0x35,
+  0xc9, 0x53, 0x60, 0xda, 0x9a, 0x44, 0xc2, 0x38, 0xc7, 0xac, 0xbd, 0x54,
+  0x2e, 0x45, 0x78, 0x9e, 0x71, 0xfe, 0x07, 0x6d, 0xf8, 0xaf, 0xa4, 0x19,
+  0x39, 0xc0, 0x0c, 0x1f, 0x15, 0x24, 0x7a, 0x46, 0x64, 0x1e, 0x89, 0xf2,
+  0x14, 0x3f, 0x95, 0xc4, 0x62, 0xf3, 0x42, 0xa7, 0x95, 0x82, 0x8d, 0x8d,
+  0x64, 0x95, 0x1e, 0x20, 0x1d, 0xf0, 0xc8, 0x87, 0xe8, 0xa6, 0x43, 0x38,
+  0xba, 0xde, 0x53, 0x66, 0x65, 0x7a, 0x81, 0x40, 0x26, 0x34, 0xd7, 0x87,
+  0xb2, 0xc6, 0x0e, 0xdd, 0x3c, 0x2e, 0x1f, 0xb2, 0x3c, 0xd8, 0xa2, 0x74,
+  0xa7, 0x83, 0xc4, 0x32, 0x3e, 0x9f, 0xb6, 0xd2, 0xff, 0x9a, 0x42, 0xda,
+  0x2f, 0x39, 0x0e, 0x3d, 0x47, 0x46, 0xca, 0xdc, 0xc5, 0x3f, 0xa7, 0xd3,
+  0x33, 0x69, 0x2e, 0x72, 0xad, 0x8a, 0xd3, 0x02, 0xa4, 0xc4, 0x61, 0xfc,
+  0x2e, 0xea, 0x7c, 0x91, 0x95, 0x90, 0x2c, 0x2b, 0x2f, 0x79, 0xd2, 0x0e,
+  0x36, 0x73, 0xd4, 0x76, 0x3f, 0xc7, 0xe8, 0x3b, 0x2a, 0x37, 0x9d, 0x80,
+  0xc3, 0xaf, 0x8f, 0xd9, 0x1c, 0x38, 0xcd, 0xe9, 0x72, 0x90, 0x33, 0x22,
+  0x73, 0x11, 0x6c, 0x37, 0x77, 0x54, 0xae, 0x72, 0x17, 0x81, 0x90, 0x36,
+  0x53, 0xc5, 0x5b, 0xb1, 0x3e, 0x89, 0xc5, 0xf4, 0x28, 0x52, 0x80, 0x06,
+  0xe7, 0xa8, 0x0e, 0xe2, 0xa2, 0x6e, 0x53, 0x6f, 0x02, 0x8f, 0xae, 0x1d,
+  0xf7, 0xae, 0x89, 0xfb, 0xd0, 0x72, 0xc4, 0x31, 0xc2, 0x77, 0x45, 0xc7,
+  0xfe, 0xe8, 0xc9, 0x56, 0xb0, 0xf2, 0xb2, 0x6a, 0x7f, 0xad, 0xe3, 0xa9,
+  0xe5, 0xee, 0xe3, 0x60, 0x96, 0xbc, 0x41, 0xad, 0x38, 0xc0, 0x96, 0x14,
+  0x6f, 0xc3, 0x67, 0xb5, 0x2d, 0xad, 0xaa, 0xa8, 0x37, 0xd6, 0xd9, 0xd3,
+  0x89, 0x94, 0xfe, 0x13, 0x96, 0x7b, 0xd6, 0xa4, 0xe9, 0x94, 0xc2, 0xa2,
+  0x50, 0x15, 0x3e, 0xf1, 0xd0, 0x5a, 0xb3, 0x44, 0x03, 0xfc, 0x9d, 0x76,
+  0x62, 0xbb, 0xdc, 0xa9, 0xbf, 0x4f, 0x5e, 0x41, 0x3a, 0xfc, 0x52, 0x23,
+  0x37, 0x61, 0x49, 0xad, 0x82, 0x00, 0x20, 0xbd, 0x60, 0x79, 0xec, 0xaa,
+  0xb0, 0xf2, 0x32, 0xc4, 0x9b, 0xe3, 0x10, 0xca, 0x70, 0xf5, 0x84, 0xfc,
+  0x00, 0xe7, 0x51, 0x09, 0x5e, 0xe2, 0xbf, 0xb5, 0x17, 0xef, 0xd5, 0xe3,
+  0xab, 0xf7, 0x4b, 0x97, 0xef, 0xe1, 0xd5, 0x13, 0x50, 0x1c, 0xd2, 0x3f,
   0x38, 0x3e, 0xf8, 0x55, 0x10, 0xb1, 0xca, 0x46, 0x49, 0x09, 0x78, 0x72,
   0x8e, 0xd2, 0x26, 0xaf, 0x09, 0x1c, 0x91, 0xaf, 0xfe, 0x59, 0xbb, 0xce,
   0xc4, 0xc8, 0x7a, 0x12, 0x06, 0x1f, 0x6f, 0x4e, 0x98, 0x3b, 0xef, 0x7d,
   0x98, 0x15, 0xa2, 0xb6, 0x34, 0x6e, 0x01, 0x11, 0x6b, 0x1f, 0x89, 0xfe,
-  0x6b, 0x21, 0xe6, 0x11, 0x63, 0x7c, 0xf5, 0xe3, 0xcd, 0xa9, 0xfa, 0x6d,
-  0xc6, 0xb5, 0xce, 0xfc, 0xbe, 0xb6, 0xab, 0xea, 0xb1, 0xc9, 0x29, 0x5d,
+  0x6b, 0x21, 0xe6, 0x11, 0x23, 0x95, 0xf5, 0xe3, 0xcd, 0xa9, 0xfa, 0x6d,
+  0xc6, 0xb5, 0xce, 0xfc, 0xbe, 0xb4, 0xab, 0xea, 0xb1, 0xc9, 0x29, 0x5d,
   0x88, 0x94, 0xc5, 0x81, 0xd5, 0x0d, 0x49, 0x9f, 0xe9, 0x45, 0xfd, 0x6f,
   0x11, 0x7f, 0xae, 0x71, 0x32, 0x9f, 0xa5, 0xc2, 0xf4, 0xe8, 0x2e, 0xb1,
   0xad, 0x5e, 0x73, 0xcd, 0x52, 0xd5, 0xae, 0x6d, 0xa3, 0xe3, 0xcd, 0xe5,
   0x1c, 0x60, 0xa7, 0xdb, 0x07, 0xcb, 0x4c, 0x74, 0xfb, 0xfe, 0x0f, 0x9b,
-  0xa2, 0xc4, 0xc3, 0x8a, 0x0a, 0x28, 0x88, 0x93, 0x57, 0x12, 0x14, 0x45,
-  0xc3, 0xca, 0xfe, 0xb6, 0x44, 0xa2, 0x72, 0x88, 0xe9, 0xd6, 0xb1, 0xd3,
+  0xa2, 0xc4, 0xc3, 0x8a, 0x0a, 0x28, 0xb8, 0x99, 0x57, 0x12, 0x14, 0x45,
+  0xc3, 0xca, 0xfe, 0xba, 0x44, 0xa2, 0x72, 0x88, 0x4c, 0xd7, 0xb1, 0xd3,
   0x70, 0x20, 0x61, 0x8f, 0x3d, 0xaa, 0x53, 0x56, 0xac, 0xd5, 0xe5, 0xff,
   0xca, 0x1b, 0x6b, 0xfa, 0x1c, 0xa9, 0xad, 0x54, 0x3b, 0x60, 0x3a, 0x7c,
   0x80, 0x58, 0x1d, 0x71, 0xc6, 0xe9, 0x72, 0x25, 0x05, 0xd2, 0x4d, 0x95,
-  0x4d, 0xb3, 0x2b, 0xb9, 0x57, 0x4f, 0x8e, 0x7e, 0x38, 0x3a, 0xe9, 0x48,
-  0x90, 0xb5, 0x7c, 0xee, 0x1c, 0xc8, 0x81, 0x59, 0xca, 0x60, 0xc5, 0xd8,
+  0x4d, 0xb3, 0x2b, 0xb9, 0x57, 0x4f, 0x8e, 0xbe, 0x3b, 0x3a, 0xe9, 0x48,
+  0x90, 0xb5, 0x7c, 0xee, 0x1c, 0xc8, 0x81, 0x59, 0xca, 0xc0, 0xd1, 0xd8,
   0xf8, 0x23, 0x37, 0x06, 0x00, 0x9e, 0xa4, 0xc5, 0x68, 0xa6, 0x40, 0x0e,
-  0x06, 0xa9, 0xd9, 0x69, 0x6c, 0x64, 0x1b, 0x93, 0x60, 0x2d, 0xb8, 0x8a,
-  0xd5, 0x40, 0xc2, 0xbc, 0xf8, 0x62, 0xfa, 0x76, 0x38, 0xdc, 0xbe, 0xc9,
-  0xca, 0x11, 0xe0, 0x2b, 0xbb, 0x04, 0xc5, 0xe9, 0x4b, 0xc9, 0x6b, 0x56,
+  0x06, 0xa9, 0xd9, 0x69, 0x6c, 0x64, 0x1b, 0x93, 0x60, 0x2d, 0xe8, 0x90,
+  0xd5, 0x40, 0xc2, 0xbc, 0xf8, 0x62, 0xfa, 0x7a, 0x38, 0xdc, 0xbe, 0xc9,
+  0xca, 0x11, 0x40, 0x38, 0xbb, 0x04, 0xc5, 0xe9, 0x4b, 0xc9, 0x6b, 0x56,
   0xfe, 0xc4, 0x13, 0xc3, 0x01, 0xad, 0x6e, 0x26, 0x9d, 0x37, 0x16, 0xc5,
   0x34, 0x1f, 0xdf, 0x27, 0xaf, 0x75, 0x64, 0x95, 0xc4, 0xfd, 0x62, 0xd7,
-  0xd9, 0x1d, 0xa3, 0xe6, 0xf0, 0xd3, 0xef, 0xfb, 0x07, 0xc3, 0xfe, 0xeb,
-  0xa3, 0x93, 0xa3, 0x6f, 0x0f, 0x2e, 0x8e, 0x2c, 0x03, 0x0c, 0x61, 0x45,
-  0x2b, 0xe8, 0x42, 0x28, 0xe2, 0x7b, 0x1d, 0x27, 0xaf, 0x0a, 0x92, 0x2e,
-  0xea, 0x7c, 0x7c, 0x93, 0xd5, 0x3e, 0xcd, 0x44, 0x40, 0x81, 0xc1, 0xad,
+  0xd9, 0x1d, 0xa3, 0xe6, 0xf0, 0xd3, 0x6f, 0xfb, 0x07, 0xc3, 0xfe, 0xeb,
+  0xa3, 0x93, 0xa3, 0xaf, 0x0f, 0x2e, 0x8e, 0x2c, 0x03, 0x0c, 0x61, 0x45,
+  0x2b, 0xe8, 0x42, 0x28, 0xe2, 0x5b, 0x1d, 0x27, 0xaf, 0x0a, 0x92, 0x2e,
+  0xea, 0x7c, 0x7c, 0x93, 0xd5, 0x3e, 0xcd, 0x44, 0xa0, 0x8d, 0xc1, 0xad,
   0x6b, 0x89, 0x4e, 0x88, 0x37, 0x47, 0x5b, 0x33, 0x9d, 0xe9, 0x50, 0x3b,
   0x33, 0x48, 0xa7, 0x77, 0x80, 0xe1, 0x7a, 0x3f, 0x87, 0xa2, 0xa5, 0x98,
   0x38, 0x10, 0xc3, 0x79, 0xf6, 0xc1, 0x96, 0x04, 0xeb, 0xdf, 0xd8, 0x65,
   0x0e, 0xb4, 0x5b, 0x21, 0xaa, 0x49, 0xd4, 0xa6, 0xa6, 0x2e, 0xbf, 0xe6,
   0x27, 0x5b, 0x01, 0x7d, 0x1e, 0x41, 0x02, 0x86, 0x08, 0xfd, 0xaa, 0x23,
   0xaa, 0x09, 0x15, 0x55, 0xe3, 0xeb, 0x6c, 0xa6, 0x87, 0x0b, 0xa1, 0x1e,
   0xf4, 0xa8, 0x42, 0x74, 0xd1, 0x01, 0xbb, 0x43, 0x5c, 0x93, 0x1c, 0x65,
   0xd1, 0x9f, 0x24, 0x26, 0x93, 0x03, 0x11, 0x23, 0x22, 0x12, 0x11, 0x03,
   0x23, 0xa3, 0x48, 0x80, 0x10, 0xc7, 0x69, 0x32, 0x95, 0x58, 0x30, 0x7e,
-  0x23, 0xfc, 0xde, 0xa9, 0x09, 0x82, 0xb2, 0xd6, 0x56, 0x35, 0x7d, 0xbc,
+  0x23, 0xfc, 0xde, 0xa9, 0x09, 0x82, 0x15, 0xd7, 0x56, 0x35, 0x7d, 0xbc,
   0xa0, 0x25, 0x4f, 0x16, 0x1a, 0x32, 0xc6, 0x1f, 0xea, 0x69, 0x76, 0x37,
-  0x03, 0x46, 0x2a, 0x20, 0xb9, 0x12, 0xa9, 0xda, 0xcd, 0xfd, 0xe1, 0xac,
-  0xa0, 0x20, 0x6c, 0x51, 0x33, 0x98, 0x2d, 0xcf, 0x07, 0x6e, 0x07, 0x83,
-  0xdd, 0x35, 0x24, 0x95, 0x98, 0xca, 0x53, 0xb7, 0x15, 0x7e, 0x55, 0x51,
+  0x03, 0x46, 0x2a, 0x50, 0xbf, 0x12, 0xa9, 0xda, 0xcd, 0xfd, 0xe1, 0xac,
+  0xa0, 0x20, 0x6c, 0x51, 0x33, 0x98, 0x2d, 0xcf, 0x07, 0x6e, 0x07, 0x03,
+  0x0f, 0x36, 0x24, 0x95, 0x98, 0xca, 0x53, 0xb7, 0x15, 0x7e, 0x55, 0x51,
   0x5b, 0xb2, 0x3d, 0x13, 0xaa, 0x04, 0xc7, 0x97, 0xaa, 0x15, 0x46, 0x73,
   0xff, 0x9b, 0xbb, 0xce, 0xf9, 0xf4, 0xfd, 0x6c, 0x51, 0xd6, 0x91, 0xa0,
   0x5d, 0x09, 0x5b, 0x75, 0xb6, 0xa9, 0x49, 0x80, 0x6b, 0x10, 0xa0, 0xe7,
-  0x1c, 0x9d, 0x9d, 0x0b, 0xb8, 0xf3, 0x09, 0x7e, 0xd1, 0x48, 0x94, 0x0e,
-  0x60, 0x04, 0x83, 0x3d, 0x4a, 0xd6, 0x18, 0xbb, 0xbc, 0x59, 0xab, 0x76,
-  0x01, 0xf2, 0x16, 0xcb, 0x28, 0x91, 0x2b, 0x8a, 0x81, 0xa7, 0x24, 0xcd,
-  0xf3, 0x69, 0x53, 0xbb, 0x07, 0x23, 0xc4, 0x48, 0x30, 0x84, 0x9e, 0x88,
+  0x1c, 0x9d, 0x9d, 0x0b, 0x44, 0xf5, 0x09, 0x7e, 0xd1, 0x48, 0x94, 0x0e,
+  0x60, 0x04, 0x43, 0x56, 0x4a, 0xd6, 0x18, 0xbb, 0xbc, 0x59, 0xab, 0x76,
+  0x01, 0xf2, 0x16, 0xcb, 0x28, 0x91, 0x2b, 0x8a, 0xe4, 0xa7, 0x24, 0xcd,
+  0xf3, 0x69, 0x53, 0xbb, 0x87, 0x54, 0xc4, 0x48, 0x30, 0x84, 0x9e, 0x88,
   0x46, 0x3c, 0x08, 0x89, 0xbe, 0x31, 0xef, 0xca, 0x29, 0xbe, 0x34, 0x55,
   0xe2, 0x01, 0x67, 0x73, 0x23, 0xf9, 0x13, 0xcd, 0xe2, 0xcd, 0xa4, 0x0c,
   0x30, 0x31, 0x9a, 0x53, 0x65, 0xd4, 0x26, 0x20, 0x0f, 0xb4, 0x09, 0x5d,
   0x34, 0x36, 0x93, 0xf8, 0xa9, 0x01, 0xc6, 0xc1, 0xc3, 0x84, 0xcd, 0xe6,
-  0x23, 0xfe, 0x71, 0x41, 0xf4, 0x82, 0x98, 0xa3, 0xb0, 0xd7, 0x0c, 0x37,
+  0x23, 0xfe, 0x71, 0x41, 0xf4, 0x82, 0x98, 0xa3, 0xe0, 0xdd, 0x0c, 0x9a,
   0xd8, 0x71, 0x03, 0x68, 0xfa, 0xa8, 0xc5, 0xb1, 0x65, 0xf7, 0x1a, 0x0b,
   0x2f, 0xd6, 0xdf, 0x4b, 0x75, 0x52, 0xa6, 0xd3, 0xbc, 0xbe, 0x17, 0xd5,
   0x35, 0xb0, 0x81, 0xc0, 0x36, 0x1c, 0x39, 0x37, 0xb4, 0xf0, 0x0e, 0x38,
   0x8b, 0x67, 0xa9, 0xdb, 0xd6, 0xb5, 0xf4, 0x33, 0x6d, 0x84, 0xa8, 0x5a,
   0x8c, 0x9e, 0xf5, 0x11, 0x9e, 0x84, 0x1c, 0x7a, 0xbe, 0x0e, 0x45, 0x56,
   0x06, 0x20, 0x55, 0x4a, 0xe5, 0xf3, 0x22, 0x46, 0x55, 0xca, 0x20, 0x48,
   0x01, 0x11, 0xec, 0x9d, 0x26, 0x09, 0xae, 0x20, 0x7f, 0x8f, 0x59, 0x22,
-  0xaf, 0x73, 0xd6, 0xf2, 0x35, 0xc3, 0x71, 0x87, 0x3a, 0x2f, 0xef, 0x1b,
+  0xaf, 0x73, 0xd6, 0xf2, 0x35, 0x83, 0x8a, 0x87, 0x3a, 0x2f, 0xef, 0x1b,
   0x9b, 0xf4, 0xe6, 0x34, 0xc2, 0xcb, 0x4b, 0xba, 0xe3, 0x3a, 0xd8, 0x45,
   0x32, 0x4e, 0xc8, 0x96, 0xce, 0x35, 0x0b, 0xaa, 0xe9, 0x74, 0x2c, 0x40,
-  0x13, 0xa0, 0x1e, 0x7e, 0x81, 0xcf, 0x16, 0x29, 0x93, 0x82, 0xc3, 0x8b,
+  0x13, 0xa0, 0x1e, 0x7e, 0x81, 0xcf, 0x16, 0x29, 0x93, 0x82, 0x26, 0x8c,
   0x28, 0x08, 0xa1, 0xe1, 0x51, 0x46, 0xfd, 0xe5, 0x40, 0x48, 0x0b, 0xe1,
   0xfe, 0x22, 0x76, 0x27, 0xa2, 0x3c, 0x30, 0x7a, 0x70, 0x14, 0xf0, 0x0e,
   0xbc, 0x2b, 0xf1, 0xe4, 0x21, 0xd6, 0x1f, 0x53, 0x02, 0xbb, 0x05, 0xce,
   0x7a, 0xea, 0xea, 0xe4, 0x50, 0x85, 0x4e, 0x7c, 0x3f, 0xc7, 0xbf, 0x3b,
-  0xac, 0x2e, 0x7d, 0x32, 0xad, 0x6e, 0xe3, 0x47, 0xbb, 0xba, 0xfd, 0xed,
-  0x47, 0x5b, 0x10, 0x23, 0xb1, 0xf2, 0x47, 0x67, 0xc3, 0x1f, 0x12, 0x17,
+  0xac, 0x2e, 0x7d, 0x32, 0xad, 0x6e, 0xe3, 0x47, 0xbb, 0xba, 0xfd, 0xe5,
+  0x47, 0x5b, 0x70, 0x2f, 0xb1, 0xf2, 0x47, 0x67, 0xc3, 0xef, 0x12, 0x17,
   0x5f, 0x16, 0xbb, 0xb2, 0xe5, 0x54, 0xfb, 0x79, 0x81, 0xce, 0xc3, 0x93,
-  0xfd, 0x8f, 0x1e, 0x6d, 0xea, 0x5f, 0xcf, 0xf3, 0xd9, 0xc1, 0xf0, 0x87,
+  0xfd, 0x8f, 0x1e, 0x6d, 0xea, 0x5f, 0xcf, 0xf3, 0xd9, 0xc1, 0xf0, 0xbb,
   0xe0, 0x24, 0x07, 0x9b, 0x1f, 0x1c, 0xdd, 0x8e, 0x2c, 0x50, 0xb3, 0xeb,
   0x58, 0x78, 0x01, 0x5a, 0x8b, 0xd2, 0x78, 0x75, 0xfb, 0x29, 0x34, 0x4e,
   0x43, 0xe9, 0xd0, 0x78, 0x67, 0x79, 0x1f, 0xa2, 0xf1, 0x70, 0x8f, 0x9a,
-  0x81, 0xb5, 0xbf, 0x8d, 0xc2, 0xc5, 0x98, 0xb6, 0x92, 0xc6, 0x69, 0x9c,
-  0xbf, 0x8d, 0xc6, 0xe9, 0x85, 0x0e, 0x8d, 0xdb, 0x86, 0xc6, 0x89, 0x7c,
+  0x81, 0xb5, 0xbf, 0x8c, 0xc2, 0xc5, 0x98, 0xb6, 0x92, 0xc6, 0x69, 0x9c,
+  0xbf, 0x8c, 0xc6, 0xe9, 0x85, 0x0e, 0x8d, 0xdb, 0x86, 0xc6, 0x89, 0x7c,
   0x15, 0x8d, 0x5b, 0xd8, 0x71, 0x26, 0xf4, 0x1d, 0x92, 0x77, 0x97, 0xb4,
-  0x1b, 0x04, 0x3b, 0xaf, 0xfa, 0x1e, 0xd3, 0xf8, 0xa5, 0xfb, 0xf5, 0xab,
+  0x1b, 0x04, 0x3b, 0xaf, 0xfa, 0x1e, 0x99, 0xf9, 0xa5, 0xfb, 0xf5, 0x8b,
   0x08, 0x9e, 0x99, 0xa3, 0x5b, 0x4e, 0x6f, 0x2f, 0x96, 0xf5, 0x95, 0xd0,
   0xe0, 0xeb, 0x77, 0xc3, 0x00, 0x41, 0x8a, 0x66, 0x51, 0x32, 0xd2, 0x61,
-  0xd8, 0xda, 0xe0, 0x31, 0x73, 0x3a, 0x24, 0x31, 0x45, 0xe0, 0x16, 0xc9,
+  0xd8, 0xda, 0xe0, 0x31, 0x73, 0x3a, 0x24, 0x31, 0xc5, 0x11, 0x17, 0xc9,
   0x9d, 0xcd, 0x51, 0x7e, 0x64, 0x9b, 0x22, 0xb4, 0x99, 0xab, 0xb2, 0x13,
-  0xb0, 0x8f, 0x3d, 0xc1, 0x40, 0xb4, 0xcc, 0x01, 0x42, 0x93, 0xa6, 0xb0,
-  0x81, 0x6a, 0x12, 0xbb, 0x4b, 0xa7, 0x9d, 0xb7, 0x10, 0x9c, 0xe9, 0x5c,
-  0x46, 0x9a, 0x9b, 0x5b, 0x22, 0xd1, 0xd6, 0x23, 0x8e, 0x00, 0x8f, 0x04,
-  0xa5, 0x7e, 0xb1, 0x55, 0xa8, 0x41, 0x86, 0x02, 0x51, 0x46, 0x62, 0x9e,
-  0x19, 0x2c, 0xa0, 0x81, 0x56, 0xa3, 0xe4, 0xe7, 0x52, 0x0e, 0xb8, 0x72,
-  0x43, 0x3f, 0x45, 0x47, 0x0e, 0x3c, 0xa5, 0x8a, 0x59, 0x10, 0x99, 0x9c,
-  0x38, 0xbd, 0x03, 0xe6, 0xca, 0x07, 0xd1, 0xb5, 0x78, 0xe7, 0x17, 0xb7,
-  0x4f, 0xfb, 0x98, 0x2a, 0xed, 0xd5, 0xa2, 0xaf, 0x73, 0x7e, 0x70, 0xeb,
-  0x47, 0xb9, 0x20, 0x1b, 0x84, 0xcf, 0x8b, 0x98, 0x41, 0x1a, 0x22, 0x56,
-  0x9a, 0x91, 0x36, 0x40, 0x11, 0x0e, 0x63, 0xae, 0x4d, 0xb1, 0x81, 0x95,
-  0x26, 0x7c, 0xce, 0xae, 0x6c, 0x92, 0xd8, 0xd4, 0xeb, 0x81, 0x53, 0x29,
-  0x5d, 0xa8, 0x66, 0x97, 0x96, 0x57, 0xcb, 0x8e, 0x73, 0x95, 0x4d, 0x5e,
-  0xde, 0xdc, 0x6c, 0x59, 0x05, 0x21, 0xe2, 0xc7, 0xff, 0xbb, 0x37, 0xf1,
-  0x53, 0x76, 0xf1, 0xf9, 0x3f, 0x7f, 0x17, 0x9f, 0xff, 0x6f, 0xb2, 0x8b,
-  0xcf, 0xff, 0x3f, 0xb2, 0x8b, 0x06, 0x57, 0x12, 0xec, 0x49, 0x6f, 0xf5,
-  0x76, 0x0e, 0x5d, 0x52, 0x8d, 0x04, 0x1f, 0x43, 0x72, 0xc0, 0x3e, 0x58,
-  0x2b, 0x62, 0x64, 0xd0, 0x4c, 0xef, 0x06, 0x7a, 0xaf, 0x64, 0xd0, 0xc5,
-  0x51, 0x06, 0x35, 0x41, 0xde, 0xa2, 0x7d, 0x8f, 0xcf, 0x02, 0x98, 0x1a,
-  0xbf, 0x3b, 0x86, 0x63, 0xa9, 0x46, 0x81, 0x68, 0xc4, 0x43, 0x05, 0x37,
-  0x38, 0xf1, 0x71, 0x89, 0xfd, 0x97, 0x54, 0x5c, 0x76, 0x95, 0xcb, 0x76,
-  0xb1, 0x38, 0x32, 0xb2, 0x20, 0x49, 0xda, 0xa0, 0xfd, 0x97, 0x58, 0xee,
-  0xbe, 0x3c, 0xfe, 0x55, 0x34, 0x1f, 0x8b, 0x91, 0x2a, 0xfd, 0x90, 0xe2,
-  0xe4, 0xa0, 0xd4, 0xd0, 0x44, 0xa2, 0x6b, 0x90, 0x42, 0x08, 0x5e, 0xc4,
-  0xd7, 0xce, 0x23, 0xe4, 0xf0, 0xbb, 0xe8, 0xe1, 0x1f, 0x22, 0x87, 0x0c,
-  0x97, 0x35, 0x43, 0x4f, 0xc2, 0x9d, 0xfd, 0xfe, 0xfc, 0xe4, 0xd1, 0x70,
-  0xac, 0xf5, 0x73, 0x01, 0xaa, 0x2c, 0x93, 0xb3, 0xf4, 0x2a, 0x5b, 0x0f,
-  0x41, 0x4b, 0x3f, 0x01, 0x86, 0xe6, 0x41, 0x14, 0x97, 0x26, 0x6e, 0x0b,
-  0x1b, 0x5f, 0x3c, 0x6a, 0x8b, 0x78, 0x6f, 0x63, 0x50, 0x77, 0x22, 0x23,
-  0x37, 0xd3, 0xed, 0xad, 0x1c, 0x89, 0xfa, 0xb6, 0xd6, 0xff, 0x8c, 0x64,
-  0x87, 0x75, 0x1b, 0xa0, 0x9b, 0x72, 0x37, 0x62, 0x1c, 0x8f, 0x78, 0x0b,
-  0x72, 0x33, 0x45, 0x02, 0x63, 0x15, 0xbf, 0xbe, 0xa6, 0xaf, 0x70, 0x3d,
-  0x85, 0x6b, 0x41, 0x3a, 0xbe, 0x2c, 0xa6, 0x6d, 0xd2, 0x64, 0xac, 0xd4,
-  0x34, 0x39, 0xd1, 0x41, 0xed, 0xab, 0x63, 0x5d, 0x36, 0xd2, 0x86, 0xa4,
-  0x52, 0x83, 0xca, 0xa6, 0x16, 0x09, 0x3d, 0x45, 0x1d, 0x9a, 0x76, 0x0c,
-  0x26, 0xe8, 0x57, 0x43, 0x4a, 0x34, 0x01, 0x3c, 0xab, 0x45, 0xcc, 0xc8,
-  0xb9, 0x2c, 0x89, 0x9b, 0xd6, 0x67, 0x74, 0x38, 0x1f, 0xb1, 0x67, 0x1e,
-  0x11, 0x97, 0x2f, 0x83, 0xf8, 0xc3, 0x9f, 0xf7, 0xcd, 0x60, 0xf2, 0x6b,
+  0xb0, 0x8f, 0x3d, 0xc1, 0x40, 0xb6, 0x0c, 0x90, 0x15, 0x5e, 0x57, 0x98,
+  0xe2, 0x24, 0x89, 0xdd, 0xa5, 0xd3, 0xce, 0x5b, 0x38, 0xd4, 0x74, 0x2e,
+  0x23, 0xcd, 0xcd, 0x2d, 0x91, 0x68, 0xeb, 0x11, 0x47, 0x80, 0x47, 0x82,
+  0x52, 0xbf, 0xd8, 0x2a, 0xd4, 0x20, 0x43, 0x81, 0x28, 0x23, 0x31, 0xcf,
+  0x0c, 0x16, 0xd0, 0x40, 0xab, 0x51, 0xf2, 0x73, 0x29, 0x07, 0x5c, 0x7f,
+  0xa2, 0x9f, 0xa2, 0x23, 0x07, 0x9e, 0x52, 0xc5, 0x2c, 0x88, 0x4c, 0x4e,
+  0x9c, 0xde, 0x01, 0x73, 0xe5, 0x83, 0xe8, 0x5a, 0xbc, 0xf3, 0x8b, 0xdb,
+  0xa7, 0x7d, 0x4c, 0x95, 0xf6, 0x6a, 0xd1, 0xd7, 0x39, 0x3f, 0xb8, 0xf5,
+  0xa3, 0x5c, 0x90, 0x0d, 0xc2, 0xe7, 0x45, 0xcc, 0x20, 0x0d, 0x11, 0x2b,
+  0xcd, 0x48, 0x1b, 0xa0, 0x08, 0x87, 0x31, 0xd7, 0xa6, 0xd8, 0xc0, 0x4a,
+  0x13, 0x3e, 0x67, 0x57, 0x36, 0x49, 0x6c, 0xea, 0xf5, 0xc0, 0xa9, 0x94,
+  0x2e, 0x54, 0xb3, 0x4b, 0xcb, 0xab, 0x65, 0xc7, 0xb9, 0xca, 0x26, 0x2f,
+  0x6f, 0x6e, 0xb6, 0xac, 0x82, 0x10, 0xf1, 0xe3, 0xff, 0xdd, 0x9b, 0xf8,
+  0x29, 0xbb, 0xf8, 0xfc, 0x9f, 0xbf, 0x8b, 0xcf, 0xff, 0x37, 0xd9, 0xc5,
+  0xe7, 0xff, 0x1f, 0xd9, 0x45, 0x83, 0x2b, 0x09, 0xf6, 0xa4, 0xb7, 0x7a,
+  0x3b, 0x87, 0x2e, 0xa9, 0x46, 0x82, 0x8f, 0x21, 0x39, 0x60, 0x1f, 0xac,
+  0x15, 0x31, 0x32, 0x68, 0xa6, 0x77, 0x03, 0xbd, 0x57, 0x32, 0xe8, 0xe2,
+  0x28, 0x83, 0x9a, 0x20, 0x6f, 0xd1, 0xbe, 0xc7, 0x67, 0x01, 0x4c, 0x8d,
+  0xdf, 0x1d, 0xc3, 0xb1, 0x54, 0xa3, 0x40, 0x34, 0xe2, 0xa1, 0x82, 0x1b,
+  0x9c, 0xf8, 0xb8, 0xc4, 0xfe, 0x4b, 0x2a, 0x2e, 0xbb, 0xca, 0x65, 0xbb,
+  0x58, 0x1c, 0x19, 0x59, 0x90, 0x24, 0x6d, 0xd0, 0xfe, 0x4b, 0x2c, 0x77,
+  0x5f, 0x1e, 0xff, 0x22, 0x9a, 0x8f, 0xc5, 0x48, 0x95, 0x7e, 0x48, 0x71,
+  0x72, 0x50, 0x6a, 0x68, 0x22, 0xd1, 0x35, 0x48, 0x21, 0x04, 0x2f, 0xe2,
+  0x6b, 0xe7, 0x11, 0x72, 0xf8, 0x55, 0xf4, 0xf0, 0x0f, 0x91, 0x43, 0x86,
+  0xcb, 0x9a, 0xa1, 0x27, 0xe1, 0xce, 0x7e, 0x7f, 0x7e, 0xf2, 0x68, 0x38,
+  0xd6, 0xfa, 0xb9, 0x00, 0x55, 0x96, 0xc9, 0x59, 0x7a, 0x95, 0xad, 0x87,
+  0xa0, 0xa5, 0x9f, 0x00, 0x43, 0xf3, 0x20, 0x8a, 0x4b, 0x13, 0xb7, 0x85,
+  0x8d, 0x2f, 0x1e, 0xb5, 0x45, 0xbc, 0xb7, 0x31, 0xa8, 0x3b, 0x91, 0x91,
+  0x9b, 0xe9, 0xf6, 0x56, 0x54, 0x45, 0x7d, 0x5b, 0xeb, 0x7f, 0x42, 0xb2,
+  0xc3, 0xba, 0x0d, 0xd0, 0x4d, 0xb9, 0x1b, 0x31, 0x8e, 0x47, 0xbc, 0x05,
+  0xb9, 0x99, 0x22, 0x81, 0xb1, 0x8a, 0x5f, 0x5f, 0xd3, 0x57, 0xb8, 0x2a,
+  0xc4, 0xb5, 0x20, 0x1d, 0x5f, 0x16, 0xd3, 0x36, 0x69, 0x32, 0x56, 0x6a,
+  0x9a, 0x9c, 0xe8, 0xa0, 0xf6, 0xd5, 0xb1, 0x2e, 0x1b, 0x69, 0x43, 0x52,
+  0xa9, 0x41, 0x65, 0x53, 0x8b, 0x84, 0x9e, 0xa2, 0x9a, 0x4e, 0x3b, 0x06,
+  0x13, 0xf4, 0xab, 0x21, 0x25, 0x9a, 0x00, 0x9e, 0xd5, 0x22, 0x66, 0xe4,
+  0x5c, 0x5c, 0xc5, 0x4d, 0xeb, 0x37, 0x74, 0x38, 0x1f, 0xb1, 0x67, 0x1e,
+  0x11, 0x97, 0x2f, 0x83, 0xf8, 0xc3, 0x1f, 0xf7, 0xcd, 0x60, 0xf2, 0x73,
   0x3c, 0x9d, 0xa2, 0x03, 0x9a, 0x69, 0x99, 0x69, 0xde, 0x85, 0xac, 0x68,
-  0x24, 0x41, 0xab, 0x31, 0xfb, 0x2e, 0x2f, 0xb7, 0x95, 0x17, 0x48, 0x2d,
-  0x91, 0x90, 0x08, 0x40, 0x8b, 0x5e, 0x21, 0x08, 0x33, 0x61, 0x3f, 0x95,
-  0x78, 0x42, 0xa8, 0xf7, 0xbe, 0xd4, 0x94, 0x60, 0xcd, 0xbc, 0x63, 0xb1,
+  0x24, 0x41, 0xab, 0x31, 0xfb, 0x2e, 0x2f, 0xb7, 0x15, 0x49, 0x48, 0x2d,
+  0x91, 0x90, 0x08, 0x40, 0x4b, 0x77, 0x21, 0x08, 0x33, 0x61, 0x3f, 0x95,
+  0x78, 0x42, 0xa8, 0xf7, 0xbe, 0x54, 0xc6, 0x60, 0xcd, 0xbc, 0x63, 0xb1,
   0xd2, 0x40, 0x26, 0x18, 0x9c, 0x83, 0x8e, 0x4d, 0x86, 0xa3, 0x23, 0x73,
-  0xf6, 0xfd, 0xe1, 0xf0, 0x0f, 0xbb, 0x7b, 0x16, 0xbe, 0x99, 0x1b, 0x9a,
-  0xeb, 0x90, 0x21, 0x77, 0xda, 0xe4, 0x0d, 0xa5, 0x48, 0x8a, 0x4f, 0x01,
-  0xf3, 0xdd, 0x47, 0x7d, 0xba, 0xd7, 0xc4, 0x1a, 0xad, 0x65, 0x48, 0x24,
+  0xf6, 0xed, 0xe1, 0xf0, 0x77, 0xbb, 0x7b, 0x16, 0xbe, 0x99, 0x1b, 0x9a,
+  0xeb, 0x90, 0x21, 0x77, 0xda, 0xe4, 0x0d, 0xa5, 0x48, 0x4a, 0x68, 0x01,
+  0xf3, 0xdd, 0x47, 0x7d, 0xba, 0xd7, 0xc4, 0x1a, 0xad, 0xc5, 0x54, 0x24,
   0x17, 0xd0, 0xc7, 0xc8, 0x67, 0x51, 0xab, 0x05, 0x6d, 0x90, 0x33, 0x9c,
-  0x09, 0x28, 0x93, 0x5b, 0xb4, 0x9e, 0x8b, 0xf6, 0x1e, 0xa1, 0x58, 0x0a,
-  0xea, 0x0e, 0x4d, 0x58, 0x25, 0x91, 0x38, 0xb1, 0x6e, 0xd8, 0x9c, 0x80,
-  0xb1, 0xb7, 0x91, 0xae, 0xec, 0x5e, 0x93, 0x62, 0x18, 0x22, 0x21, 0xaf,
+  0x09, 0x28, 0x93, 0x5b, 0xb4, 0x9e, 0x8b, 0xf6, 0x1e, 0xa1, 0xe4, 0x0b,
+  0xaa, 0x27, 0x4d, 0x58, 0x25, 0x91, 0x38, 0xb1, 0x6e, 0xd8, 0x9c, 0x80,
+  0xb1, 0xb7, 0x91, 0xae, 0xec, 0x5e, 0x93, 0x92, 0x1e, 0x22, 0x21, 0xaf,
   0x07, 0xeb, 0xb1, 0x1e, 0x35, 0xb5, 0x87, 0x09, 0x77, 0x8b, 0x52, 0xf2,
-  0x10, 0x6f, 0xb2, 0x7b, 0x57, 0xbf, 0x24, 0xb2, 0xa1, 0x00, 0x84, 0xa6,
-  0x9f, 0xb8, 0xb3, 0x27, 0xff, 0x12, 0x8b, 0x54, 0x10, 0xd2, 0x12, 0xe5,
-  0x0b, 0x6d, 0x41, 0x03, 0xf0, 0x08, 0x58, 0x33, 0xae, 0xa9, 0xa2, 0x75,
-  0xa6, 0xa6, 0xf7, 0x31, 0x32, 0x6f, 0xc2, 0xc6, 0xb1, 0x2e, 0x27, 0x11,
+  0x10, 0x6f, 0xb2, 0x7b, 0x57, 0x85, 0x25, 0xb2, 0xa1, 0x00, 0x84, 0xa6,
+  0x9f, 0xb8, 0xb3, 0x27, 0xff, 0x16, 0x8b, 0x54, 0x10, 0xd2, 0x12, 0xe5,
+  0x0b, 0x6d, 0x41, 0x03, 0xf0, 0x08, 0x58, 0x33, 0xae, 0x0c, 0xa3, 0xd5,
+  0xb2, 0xa6, 0xf7, 0x31, 0x32, 0x6f, 0xc2, 0xc6, 0xb1, 0x2e, 0x27, 0x11,
   0x89, 0x9c, 0x4f, 0x12, 0xa2, 0x3e, 0xaa, 0xa3, 0xad, 0x7e, 0x20, 0x24,
   0x1b, 0xc6, 0xfc, 0x20, 0x65, 0x0a, 0x86, 0xc5, 0x7c, 0x7c, 0xc3, 0xb2,
   0xbc, 0xde, 0x70, 0xe1, 0xe4, 0x2c, 0x40, 0xc7, 0xc5, 0xe5, 0x47, 0xb2,
   0x65, 0xe0, 0x6b, 0x00, 0x39, 0xe2, 0x16, 0xcc, 0xe7, 0x96, 0xd0, 0x87,
   0x3c, 0x96, 0xdb, 0xbc, 0x2c, 0xe6, 0x2c, 0x9b, 0xdc, 0xa6, 0x65, 0xce,
   0xea, 0x28, 0x8d, 0xf6, 0xc3, 0xeb, 0xe3, 0xf3, 0x64, 0x13, 0xc9, 0xf3,
@@ -5356,3561 +5372,3567 @@
   0xf9, 0xf6, 0xbc, 0xaa, 0x26, 0xa3, 0xad, 0x10, 0x16, 0x0d, 0x5d, 0x82,
   0x0a, 0x85, 0x88, 0x77, 0xa1, 0xb1, 0x2d, 0xa9, 0xe1, 0x4d, 0x5a, 0x83,
   0x4e, 0x52, 0x41, 0x45, 0x0b, 0x3d, 0x1b, 0x54, 0xc5, 0x16, 0xab, 0xa8,
   0xb7, 0x69, 0x3e, 0x35, 0x83, 0xc1, 0x5c, 0x28, 0x99, 0xe3, 0xd0, 0x14,
   0xa2, 0x5e, 0x3c, 0x33, 0x1c, 0x50, 0xaa, 0x41, 0x1b, 0xed, 0x73, 0xaa,
   0xd1, 0x49, 0x02, 0x47, 0x2d, 0xc0, 0x22, 0x16, 0x60, 0x44, 0xab, 0xc9,
-  0x39, 0xe3, 0x2e, 0x5a, 0xbe, 0x87, 0xda, 0x2d, 0x58, 0x15, 0x71, 0x13,
-  0xc2, 0xf2, 0x11, 0x0b, 0x44, 0x5c, 0x1f, 0x6c, 0xaf, 0xbb, 0x5a, 0x35,
-  0xb4, 0xc4, 0x5c, 0x6e, 0xc9, 0x17, 0x07, 0x22, 0xe2, 0xba, 0x5c, 0x56,
+  0x39, 0xe3, 0x2e, 0x5a, 0xbe, 0x87, 0x0a, 0x34, 0x58, 0x15, 0x71, 0x13,
+  0xc2, 0xf2, 0x11, 0x0b, 0x44, 0x5c, 0x1f, 0x6c, 0xaf, 0xbb, 0x8a, 0x3b,
+  0xb4, 0xc4, 0x5c, 0x34, 0xca, 0x97, 0x38, 0x22, 0xe2, 0xba, 0x5c, 0x56,
   0xce, 0x0e, 0xcc, 0x9e, 0x6d, 0xdd, 0xae, 0xc1, 0x0a, 0xb3, 0x93, 0xdb,
-  0x4e, 0xf5, 0xd9, 0x56, 0xc9, 0xfa, 0xfe, 0x3a, 0x1f, 0xaa, 0x39, 0x97,
-  0xcb, 0x10, 0xd1, 0x46, 0x47, 0xc5, 0x9b, 0xb5, 0xfe, 0xcb, 0x7a, 0xd2,
-  0x31, 0x05, 0xd7, 0xde, 0x0b, 0x62, 0xc0, 0x4e, 0x57, 0xf3, 0xfc, 0xef,
+  0x4e, 0xf5, 0xd9, 0x56, 0xc9, 0xfa, 0xfe, 0x3a, 0x1f, 0xaa, 0x39, 0x17,
+  0xfd, 0x10, 0xd1, 0x46, 0x47, 0xc5, 0x9b, 0xb5, 0xfe, 0xd3, 0x7a, 0xd2,
+  0x31, 0x05, 0xd7, 0xde, 0x0b, 0x62, 0xc0, 0x4e, 0x57, 0xf3, 0xfc, 0x6f,
   0x82, 0x80, 0xe2, 0xce, 0xee, 0x24, 0xe3, 0x9c, 0x8f, 0xac, 0x0c, 0x77,
-  0x08, 0x23, 0x88, 0xa3, 0xf1, 0xf8, 0x21, 0xfd, 0xd2, 0x1d, 0x92, 0x95,
-  0x10, 0x4a, 0xf1, 0x35, 0x0f, 0x29, 0x18, 0x44, 0xc4, 0x40, 0xd2, 0x1c,
-  0x92, 0xab, 0x41, 0x14, 0xc4, 0x4f, 0x74, 0x02, 0xb8, 0xf3, 0xd3, 0x21,
-  0x1f, 0xc4, 0xb7, 0xe9, 0x38, 0xa1, 0x5f, 0x7f, 0x62, 0xb1, 0x62, 0x6b,
+  0x08, 0x23, 0x88, 0xa3, 0xf1, 0xf8, 0x21, 0xfd, 0xd4, 0x1d, 0x92, 0x15,
+  0x42, 0x4a, 0xf1, 0x35, 0x0f, 0x29, 0x18, 0x44, 0xc4, 0x40, 0xd2, 0x1c,
+  0x92, 0xab, 0xa4, 0x14, 0xc4, 0x4f, 0x74, 0x02, 0xb8, 0xf3, 0xd3, 0x21,
+  0x1f, 0xc4, 0xb7, 0xe9, 0x38, 0xa1, 0x5f, 0x7f, 0x60, 0xb1, 0x62, 0x6b,
   0xf5, 0x19, 0x53, 0x8e, 0xa8, 0x4c, 0x30, 0x06, 0xce, 0xd8, 0xf3, 0x67,
   0xae, 0xc5, 0x6f, 0x83, 0x4b, 0x30, 0xcb, 0x99, 0x37, 0x8e, 0x32, 0xef,
   0xd1, 0x42, 0xb8, 0x6d, 0x27, 0x98, 0xc8, 0xbd, 0xbc, 0x1d, 0xf2, 0x1e,
-  0x2b, 0xc9, 0xc5, 0x82, 0x27, 0x78, 0x30, 0x5b, 0xf6, 0xe9, 0x1b, 0x9a,
+  0x2b, 0x2c, 0xc6, 0x82, 0x27, 0x78, 0x30, 0x5b, 0xf6, 0xe9, 0x1b, 0x9a,
   0x28, 0x10, 0xa9, 0xf0, 0x51, 0xe4, 0x68, 0x2e, 0xd2, 0x5a, 0x8d, 0x77,
   0x44, 0x34, 0xca, 0xf1, 0x9d, 0xcb, 0x2c, 0x1c, 0xa8, 0x04, 0x7a, 0xbb,
-  0xfe, 0x56, 0x04, 0x25, 0xfe, 0x3f, 0x4f, 0xfc, 0x69, 0x40, 0xfa, 0x9f,
-  0x2f, 0xf8, 0x4c, 0x73, 0xd9, 0x5f, 0xc6, 0x70, 0x12, 0x86, 0xd9, 0x94,
-  0x0b, 0x93, 0xf0, 0x5e, 0x5b, 0x0a, 0xe0, 0xb8, 0xbc, 0x5f, 0xc0, 0xf2,
-  0x26, 0xef, 0xe9, 0x0a, 0xe1, 0xbe, 0x92, 0x44, 0xbf, 0xa0, 0xe4, 0xcd,
-  0x20, 0x92, 0xc9, 0xea, 0x3a, 0x14, 0x3d, 0x84, 0x6d, 0xad, 0x44, 0x37,
-  0x35, 0xef, 0x9a, 0xd7, 0x4d, 0x40, 0x96, 0x13, 0x49, 0x37, 0xf2, 0x55,
-  0xea, 0x3a, 0x10, 0x23, 0x68, 0xa8, 0x32, 0xf7, 0xbe, 0x05, 0x73, 0xc1,
-  0x50, 0xcf, 0x60, 0x0d, 0xcc, 0x72, 0xe1, 0x65, 0xdc, 0x32, 0x4e, 0xaf,
-  0x6f, 0x28, 0x42, 0x54, 0x5b, 0x6b, 0x70, 0xec, 0x92, 0x9a, 0x29, 0x97,
-  0x73, 0xee, 0xbd, 0xb9, 0x52, 0x8e, 0xbf, 0xb7, 0xcf, 0xd9, 0xf9, 0xf1,
-  0xf0, 0x10, 0x07, 0xec, 0xf4, 0xdd, 0xc9, 0x5f, 0x20, 0x68, 0x33, 0xde,
-  0x0d, 0x57, 0x84, 0x43, 0xd7, 0xb1, 0x8b, 0xa1, 0xea, 0x05, 0x58, 0x09,
-  0x11, 0xde, 0x21, 0x57, 0x72, 0xff, 0xce, 0xb6, 0xd8, 0xe7, 0xec, 0x81,
-  0x5c, 0xd8, 0x5f, 0x48, 0x04, 0x97, 0x43, 0xcf, 0x41, 0xb4, 0xde, 0xd8,
-  0x42, 0xaa, 0x96, 0x5d, 0x34, 0x3f, 0xc4, 0xba, 0x84, 0x12, 0xbe, 0xa8,
-  0x47, 0x30, 0x17, 0x52, 0xf7, 0x34, 0xd1, 0x56, 0xda, 0x31, 0x4d, 0xf4,
-  0x4a, 0xfc, 0xd6, 0x2b, 0x32, 0x65, 0x82, 0xdc, 0xda, 0x7b, 0xb5, 0x41,
-  0x22, 0x70, 0xd0, 0xc1, 0x8f, 0x89, 0x45, 0x1a, 0x58, 0xbc, 0x0b, 0xba,
-  0x67, 0xbe, 0x4d, 0xc1, 0x0b, 0xc4, 0xf0, 0x97, 0x66, 0xb3, 0xce, 0x05,
-  0x5d, 0x15, 0x70, 0xb3, 0x9a, 0x00, 0x27, 0x7f, 0x05, 0x0e, 0x34, 0x36,
-  0x1f, 0x4a, 0x10, 0x26, 0x16, 0x74, 0x42, 0x27, 0x50, 0x09, 0x08, 0x24,
-  0x47, 0x43, 0xe9, 0x86, 0x15, 0x59, 0xb9, 0xab, 0x41, 0x2b, 0x8b, 0xad,
-  0x2f, 0xef, 0xcb, 0xd4, 0xda, 0x49, 0x6c, 0x34, 0x6b, 0x76, 0xb8, 0xef,
-  0xee, 0xec, 0x3c, 0x9a, 0x59, 0xa8, 0xfa, 0xd4, 0x83, 0x09, 0x86, 0x10,
-  0xf0, 0x65, 0x9b, 0x1c, 0x8c, 0x48, 0x9a, 0x2b, 0x6c, 0x53, 0xab, 0x39,
-  0x74, 0xe9, 0x12, 0xfd, 0x7c, 0xf0, 0xaa, 0x88, 0xc9, 0xfc, 0x76, 0xc6,
-  0x69, 0x86, 0xc4, 0x58, 0x8f, 0x78, 0x8c, 0xd5, 0x7e, 0xe3, 0x9d, 0x28,
-  0x78, 0x23, 0x06, 0x84, 0x97, 0xd4, 0xd0, 0x32, 0x48, 0xbe, 0xf1, 0x10,
-  0xdb, 0x61, 0x85, 0x38, 0x1e, 0x15, 0x33, 0x08, 0x1d, 0xff, 0x83, 0xa6,
-  0xd7, 0x78, 0xf6, 0xe0, 0xbf, 0x48, 0x50, 0xae, 0xe4, 0x96, 0xd6, 0xc5,
-  0xa2, 0xe2, 0x56, 0x19, 0x31, 0x34, 0xc2, 0x07, 0xc3, 0xb4, 0x46, 0x80,
-  0x8b, 0x5d, 0x36, 0xab, 0x25, 0x5d, 0xc3, 0xfc, 0x92, 0x31, 0xba, 0x84,
-  0x80, 0x9a, 0x3c, 0x98, 0x96, 0xf4, 0xf4, 0x8b, 0x56, 0x8e, 0x17, 0xf1,
-  0x79, 0xce, 0xaa, 0x49, 0x5e, 0xe2, 0xdf, 0x38, 0xed, 0x06, 0x30, 0x3f,
-  0x1c, 0xfb, 0xd0, 0x10, 0x00, 0xf1, 0xae, 0x06, 0x7e, 0x23, 0x07, 0x6c,
-  0xd2, 0xb8, 0xa7, 0xba, 0x4e, 0x04, 0x84, 0xf9, 0x93, 0x64, 0xd5, 0x4b,
-  0x5e, 0x1f, 0x9d, 0xf3, 0xcd, 0x72, 0xf4, 0xee, 0x5b, 0xf6, 0x39, 0x06,
-  0xb7, 0x35, 0xda, 0xac, 0x06, 0x0a, 0xf8, 0x17, 0x4a, 0xfe, 0xad, 0xe6,
-  0x20, 0xa1, 0x41, 0x6e, 0x63, 0x09, 0x7e, 0xf2, 0x59, 0x13, 0x2c, 0x53,
-  0x51, 0xff, 0x0e, 0x0f, 0xc2, 0xd9, 0x3d, 0xba, 0x5a, 0x71, 0x9d, 0xaf,
-  0xa5, 0xec, 0xe1, 0x29, 0x1a, 0x11, 0x31, 0x87, 0x58, 0x28, 0x00, 0xb2,
-  0xde, 0x06, 0x0d, 0x24, 0x3a, 0x30, 0x63, 0x95, 0x93, 0x7c, 0xfd, 0xb8,
-  0xe6, 0xc0, 0xc4, 0x14, 0xb8, 0x5a, 0x7c, 0xd8, 0xac, 0xb6, 0x1a, 0xea,
-  0x9e, 0xd3, 0xd9, 0xa0, 0x25, 0xa9, 0x33, 0xab, 0x85, 0x45, 0xdd, 0xf1,
-  0x8c, 0xc8, 0x3d, 0x6f, 0x47, 0xc4, 0x50, 0xf4, 0x78, 0xc5, 0x7b, 0x22,
-  0x9a, 0x35, 0x96, 0x9e, 0xf6, 0x54, 0x2d, 0x0a, 0xca, 0xa6, 0x3a, 0x91,
-  0x1e, 0x9c, 0xbe, 0xc0, 0xb1, 0x49, 0x41, 0x9b, 0x9d, 0x4d, 0x75, 0x48,
-  0x31, 0x4c, 0x2b, 0xd5, 0x6a, 0x45, 0x42, 0xf2, 0x3e, 0x92, 0x8d, 0xc3,
-  0xf7, 0xe7, 0x27, 0x1f, 0x0e, 0x0f, 0x3e, 0x7c, 0xf3, 0xfe, 0xdd, 0xeb,
-  0x93, 0xa3, 0x8d, 0x36, 0x45, 0x5e, 0x8a, 0x8f, 0x2d, 0x17, 0x10, 0x33,
-  0x2d, 0x62, 0xdc, 0x82, 0x75, 0x60, 0x7e, 0xcd, 0xf8, 0x9a, 0xfc, 0x1b,
-  0x83, 0xeb, 0xe8, 0x82, 0xb7, 0x8d, 0x5a, 0xcb, 0xf9, 0x84, 0x41, 0xfc,
-  0x82, 0xc9, 0x1b, 0xda, 0x94, 0x32, 0x3a, 0x1b, 0x60, 0x14, 0x6c, 0x10,
-  0x20, 0xa4, 0x30, 0xa0, 0x04, 0xb5, 0x85, 0x82, 0x5a, 0x85, 0x0d, 0xc3,
-  0x0c, 0xe7, 0x08, 0x59, 0xd5, 0xe3, 0x84, 0xc6, 0x13, 0xd9, 0xee, 0xca,
-  0xe7, 0xc2, 0x4e, 0x92, 0x0d, 0xb4, 0x44, 0x94, 0xdc, 0xd7, 0x41, 0x8e,
-  0xcb, 0x7a, 0xa3, 0x67, 0xa2, 0x67, 0x1e, 0xe4, 0x58, 0xb1, 0x94, 0xd6,
-  0x49, 0x3f, 0x43, 0x82, 0x6f, 0x2a, 0x74, 0x3d, 0xc8, 0x3e, 0x66, 0x0a,
-  0xe6, 0xc7, 0x6f, 0x1d, 0xaa, 0x78, 0xf7, 0x63, 0x51, 0xb2, 0x75, 0xfb,
-  0xb5, 0x17, 0xf3, 0xe4, 0x21, 0xd2, 0xff, 0xbb, 0xb1, 0xb6, 0x60, 0xba,
-  0x29, 0xd7, 0xdf, 0xe2, 0x72, 0xcf, 0x67, 0x07, 0x17, 0xdf, 0x45, 0x5d,
-  0xe5, 0xbe, 0xc4, 0xb8, 0x92, 0xa2, 0x13, 0xbe, 0x9d, 0xba, 0x17, 0xea,
-  0xb8, 0x3d, 0xa7, 0xf8, 0x12, 0x59, 0xb7, 0x19, 0x46, 0x57, 0x25, 0x0c,
-  0x54, 0x40, 0xa7, 0x6b, 0x48, 0xfe, 0x93, 0x13, 0x6f, 0x64, 0x8d, 0x57,
-  0x67, 0xf3, 0x5b, 0x7d, 0x6f, 0xe2, 0x80, 0x0b, 0x54, 0xe3, 0xf8, 0xbc,
-  0x8c, 0x88, 0x49, 0xb0, 0xc5, 0x88, 0xbc, 0x60, 0xfd, 0x09, 0x96, 0xa8,
-  0x47, 0x99, 0x92, 0x4f, 0xe8, 0xee, 0x9c, 0x52, 0xe1, 0x53, 0xc2, 0xef,
-  0x99, 0x31, 0xb9, 0x8c, 0x2d, 0x0c, 0xcb, 0xd5, 0x29, 0x0b, 0x2e, 0x03,
-  0xa0, 0xd9, 0xf9, 0x54, 0xba, 0x2e, 0x87, 0x9b, 0xa9, 0xa4, 0xbf, 0xbf,
-  0x9e, 0x6c, 0x66, 0x83, 0x2b, 0x62, 0x75, 0xeb, 0x68, 0x6a, 0x77, 0x1f,
-  0xff, 0xee, 0xf1, 0xbf, 0x4f, 0xd6, 0xad, 0xb8, 0x7a, 0x98, 0xfc, 0x0b,
-  0xfe, 0xd5, 0xcd, 0xfa, 0x6d, 0x70, 0x33, 0x89, 0x47, 0x31, 0x50, 0x81,
-  0x28, 0x09, 0xa9, 0x90, 0xde, 0x8b, 0x89, 0x95, 0x7e, 0x1d, 0x84, 0x59,
-  0xaa, 0x93, 0x9a, 0x2f, 0x5b, 0x9a, 0xe0, 0x58, 0x60, 0x1f, 0x82, 0x24,
-  0xd5, 0x0f, 0x65, 0x46, 0xb7, 0xf1, 0x75, 0xb2, 0xac, 0x73, 0x84, 0xad,
-  0x44, 0x2a, 0x5f, 0x4c, 0x5d, 0xde, 0x88, 0x76, 0xec, 0xb0, 0x9f, 0x6c,
-  0x67, 0xc5, 0x4e, 0xcc, 0x30, 0x0b, 0xfa, 0x48, 0x5f, 0xab, 0x9d, 0xc7,
-  0x18, 0x21, 0x53, 0xab, 0xc4, 0x8e, 0xe2, 0xc9, 0xb0, 0x76, 0xe9, 0x0c,
-  0xb6, 0x70, 0x8e, 0xa5, 0xc9, 0x2e, 0x69, 0xcd, 0xf2, 0x00, 0x9c, 0x24,
-  0x56, 0x99, 0xc7, 0xdd, 0x71, 0x2a, 0x5f, 0xb8, 0xbf, 0x99, 0x83, 0x38,
-  0xbd, 0x9c, 0x8b, 0x9b, 0xb6, 0x2f, 0x9b, 0xc7, 0xe9, 0x9d, 0x59, 0xab,
-  0x60, 0x02, 0xa9, 0x48, 0x25, 0xb3, 0x95, 0xd4, 0x52, 0x23, 0x76, 0x85,
-  0x99, 0x8f, 0x61, 0x7f, 0xd3, 0xa8, 0xc4, 0xd6, 0xf0, 0xbb, 0x4f, 0xce,
-  0x22, 0xa7, 0xb5, 0x99, 0x2c, 0x96, 0x23, 0xa8, 0xcc, 0x2f, 0xe5, 0xaf,
-  0x84, 0xfe, 0x9c, 0xe6, 0x63, 0xd6, 0xa2, 0x37, 0xaf, 0xb9, 0x3a, 0xe2,
-  0xd6, 0x27, 0xda, 0x72, 0x03, 0xb8, 0xd2, 0x00, 0x4f, 0x2a, 0x68, 0x8f,
-  0xd7, 0x6d, 0xb3, 0x13, 0xe5, 0xa2, 0xbd, 0xf8, 0x4b, 0x3f, 0x38, 0x4c,
-  0xce, 0x51, 0xc0, 0x2e, 0x3a, 0x7f, 0xd7, 0xe8, 0xc5, 0x1f, 0x43, 0x1d,
-  0x76, 0x1b, 0xe3, 0x5c, 0x7a, 0xc1, 0x10, 0xf4, 0x30, 0x10, 0xf7, 0x82,
-  0xb0, 0x15, 0x80, 0xb0, 0x62, 0x13, 0x9b, 0x75, 0xb6, 0x3d, 0x70, 0x0f,
-  0x2c, 0x75, 0xcf, 0x9f, 0xba, 0xe8, 0xed, 0xea, 0x3a, 0xdd, 0x7b, 0xf6,
-  0x5c, 0x87, 0xdd, 0xb0, 0x0a, 0x6d, 0xc8, 0x57, 0xdb, 0xdb, 0x52, 0x1d,
-  0x1a, 0x87, 0xbc, 0x7d, 0x69, 0x88, 0x17, 0x0b, 0xcf, 0xfe, 0x79, 0x23,
-  0x9e, 0x97, 0x16, 0xd6, 0xcb, 0xc0, 0x4c, 0xb9, 0xaa, 0x8a, 0x28, 0x2a,
-  0x81, 0x6a, 0xd2, 0x8b, 0x20, 0xa4, 0xac, 0x96, 0x6e, 0x82, 0xba, 0xb1,
-  0x2c, 0xd2, 0xe7, 0x1c, 0x6a, 0x5b, 0xdf, 0x0f, 0x92, 0x83, 0x70, 0x75,
-  0xa4, 0x5a, 0x91, 0x28, 0x83, 0x9d, 0xd3, 0x65, 0x71, 0xd7, 0xd8, 0x90,
-  0x96, 0x29, 0x44, 0x48, 0xd1, 0x25, 0x75, 0x5b, 0x6a, 0x98, 0x64, 0x25,
-  0xf0, 0x66, 0x2e, 0x3b, 0x86, 0x46, 0xeb, 0xd3, 0xf1, 0xc5, 0xba, 0x68,
-  0x06, 0xfa, 0x04, 0xb7, 0xfc, 0xa8, 0xd0, 0x7c, 0xdd, 0x60, 0x01, 0x3a,
-  0x8c, 0x8e, 0x23, 0x87, 0xb0, 0x12, 0x9c, 0x48, 0x52, 0xaa, 0xf0, 0x2f,
-  0xa0, 0xa1, 0xf7, 0xf1, 0x7c, 0x02, 0x22, 0x85, 0x6d, 0xd0, 0x81, 0x6a,
-  0xc6, 0xfb, 0x9d, 0x70, 0xdc, 0x2f, 0x06, 0x4f, 0x5e, 0x0c, 0x76, 0xf6,
-  0x3d, 0x4f, 0x14, 0xd8, 0x22, 0x9e, 0xf4, 0xb7, 0xc3, 0xef, 0xf3, 0x3a,
-  0xf2, 0x06, 0x92, 0x8a, 0xf6, 0xf9, 0xb6, 0xc5, 0x53, 0x77, 0xc5, 0xf4,
-  0x92, 0xde, 0xdc, 0x3e, 0xbc, 0x4f, 0xbb, 0x9a, 0x66, 0xa2, 0xea, 0xc7,
-  0x7e, 0x42, 0x84, 0x37, 0xa9, 0xa7, 0x55, 0xec, 0x7b, 0x1e, 0xc0, 0x59,
-  0x31, 0x4d, 0x4b, 0xae, 0x90, 0x22, 0xc4, 0xf7, 0xc0, 0x88, 0x9f, 0x3e,
-  0x8d, 0x8c, 0xb8, 0xb7, 0x62, 0x40, 0x83, 0x7f, 0x7c, 0x44, 0xa7, 0xe6,
-  0x60, 0x31, 0x6f, 0xa4, 0xd6, 0x86, 0x35, 0x93, 0xcb, 0x67, 0xbd, 0xfb,
-  0xa1, 0xab, 0x55, 0x75, 0x5a, 0x2f, 0xab, 0x87, 0x78, 0x94, 0x5d, 0xf2,
-  0x01, 0x7b, 0x91, 0x97, 0x9c, 0x87, 0x5a, 0xd1, 0xd5, 0x56, 0xaa, 0x69,
-  0x8d, 0xf4, 0xd5, 0x00, 0xb3, 0x23, 0x19, 0x4a, 0x3b, 0x06, 0xae, 0xb4,
-  0x99, 0xde, 0xa4, 0x83, 0xe4, 0xf4, 0x70, 0x78, 0x86, 0x1e, 0x16, 0x88,
-  0xba, 0xda, 0xc2, 0x09, 0xee, 0xe0, 0xa8, 0x58, 0x1d, 0xab, 0x95, 0x81,
-  0xc0, 0x7e, 0x75, 0x42, 0x40, 0xe4, 0x18, 0x2c, 0x52, 0x3e, 0x17, 0x10,
-  0x31, 0x16, 0x16, 0x3a, 0x1d, 0x2d, 0xe8, 0xca, 0x9e, 0x6c, 0x39, 0xe5,
-  0xb8, 0xd7, 0xd1, 0x96, 0xab, 0xe5, 0xd5, 0x15, 0xc7, 0x51, 0xb8, 0xe8,
-  0x0a, 0xbf, 0x1a, 0x1d, 0x91, 0xd7, 0xa6, 0xcd, 0x3a, 0xb6, 0xdc, 0xfb,
-  0x86, 0x25, 0xc2, 0x6c, 0x74, 0x5e, 0xf8, 0x86, 0x53, 0x8e, 0xc9, 0xc7,
-  0x0c, 0x4c, 0x0f, 0x8f, 0x20, 0x53, 0xcb, 0x9e, 0x18, 0x5c, 0x2c, 0xb0,
-  0x21, 0x57, 0xb8, 0xd9, 0xf3, 0xca, 0x6c, 0xa6, 0x56, 0x8f, 0x94, 0x0b,
-  0x6d, 0x42, 0xc3, 0xf1, 0x59, 0x43, 0x81, 0xf0, 0xa2, 0x27, 0x35, 0x52,
-  0xad, 0x01, 0x27, 0xc1, 0x48, 0xb5, 0xe5, 0x16, 0x7f, 0xba, 0xdb, 0xb4,
-  0x05, 0x5c, 0xa6, 0xd3, 0x2a, 0xeb, 0x73, 0x1a, 0xea, 0xda, 0xa7, 0x3b,
-  0x34, 0xf9, 0x2d, 0x4d, 0x5e, 0xd5, 0x22, 0x5e, 0x91, 0x6a, 0x77, 0x2d,
-  0x8c, 0xbf, 0xe0, 0x1d, 0xce, 0x6f, 0xe6, 0xa8, 0x3a, 0x06, 0xe1, 0x73,
-  0x97, 0x80, 0x7a, 0xd2, 0xd4, 0xec, 0xa2, 0xc9, 0xb1, 0xca, 0xf1, 0x56,
-  0x43, 0x80, 0x48, 0x62, 0x8b, 0xf2, 0x47, 0x39, 0x01, 0x36, 0x22, 0xd9,
-  0xe8, 0x8d, 0x2a, 0x79, 0x93, 0xcf, 0x73, 0xba, 0xcd, 0xa4, 0x30, 0x76,
-  0x7a, 0x95, 0x75, 0x37, 0x8a, 0x68, 0xbc, 0x12, 0x73, 0x5f, 0x2a, 0x65,
-  0x3a, 0x12, 0x24, 0xe5, 0x8b, 0x81, 0x49, 0x73, 0x15, 0xd5, 0x15, 0xbb,
-  0xe4, 0xd8, 0xc5, 0x55, 0x45, 0xfd, 0x3e, 0x7d, 0x2f, 0x8d, 0x61, 0x3d,
-  0xea, 0x4f, 0x80, 0x99, 0x16, 0x21, 0x7d, 0xa7, 0x43, 0x70, 0xa7, 0x1d,
-  0x31, 0xee, 0x23, 0xdc, 0xbe, 0x64, 0x92, 0x64, 0xa7, 0xc5, 0xee, 0xce,
-  0xe0, 0x05, 0xfe, 0xe0, 0x8f, 0xb7, 0xfc, 0xf6, 0x3f, 0x64, 0x17, 0xda,
-  0x6b, 0xd0, 0xc2, 0x25, 0xc7, 0x33, 0x12, 0x7d, 0xc6, 0x2d, 0x79, 0x6f,
-  0x80, 0x6a, 0x5a, 0x21, 0xb7, 0x09, 0x73, 0xda, 0x44, 0x8d, 0x5b, 0xa9,
-  0xd9, 0x2d, 0xa7, 0x60, 0x0b, 0xae, 0x58, 0x2b, 0xc8, 0xc8, 0x78, 0x64,
-  0x56, 0x4d, 0x35, 0x52, 0x5b, 0x4e, 0x8b, 0xee, 0x32, 0x12, 0x03, 0xfb,
-  0x79, 0x38, 0xca, 0x5b, 0x83, 0x53, 0x91, 0x95, 0x0b, 0xfb, 0x59, 0x56,
-  0x8f, 0x83, 0x2f, 0x27, 0x59, 0x3a, 0x8d, 0xa5, 0x97, 0x62, 0xc0, 0x60,
-  0x1d, 0x12, 0x6b, 0x4b, 0x7d, 0x1e, 0xcf, 0x35, 0x38, 0x57, 0x93, 0x03,
-  0x05, 0xe7, 0x46, 0x61, 0x01, 0xdc, 0x08, 0x2f, 0x05, 0x4d, 0xb0, 0xa3,
-  0xec, 0xc0, 0x77, 0x75, 0x2b, 0x40, 0xc5, 0x0e, 0xdb, 0x4d, 0x43, 0x72,
-  0x2d, 0xd7, 0x99, 0x53, 0x9f, 0x18, 0x12, 0xc7, 0x1e, 0x60, 0x5e, 0xcb,
-  0x89, 0x9c, 0xed, 0xe6, 0x34, 0xc4, 0xb2, 0xb8, 0x04, 0x94, 0x2c, 0x5b,
-  0x59, 0x2d, 0xeb, 0x18, 0x03, 0x13, 0x17, 0x32, 0xe4, 0xf5, 0x2d, 0x15,
-  0x04, 0x39, 0x16, 0x44, 0xc9, 0x9f, 0xe4, 0xae, 0x7e, 0x47, 0x15, 0x33,
-  0x80, 0x0d, 0x96, 0x55, 0x64, 0x03, 0x6a, 0x07, 0xac, 0x2e, 0x45, 0xdc,
-  0x31, 0x4a, 0x05, 0x9b, 0xdd, 0xdb, 0x5b, 0x11, 0xe0, 0xa5, 0xa8, 0xd5,
-  0xea, 0xc7, 0xc3, 0x62, 0xf4, 0xab, 0xf4, 0xd2, 0x15, 0x51, 0x29, 0x05,
-  0x91, 0xb5, 0x18, 0xd3, 0x12, 0x4a, 0x5e, 0x2f, 0x7f, 0x36, 0xef, 0x42,
-  0xb4, 0x55, 0xcb, 0x31, 0x74, 0x22, 0x98, 0xcf, 0x1d, 0x5b, 0x84, 0x10,
-  0x69, 0x39, 0x6e, 0xd5, 0x94, 0xce, 0x90, 0x85, 0xaf, 0x22, 0xa9, 0x5c,
-  0x21, 0x2a, 0x60, 0xcc, 0x88, 0x44, 0x60, 0xb7, 0xc0, 0xb5, 0xd9, 0x76,
-  0x78, 0x8b, 0x48, 0x22, 0x62, 0xfe, 0xad, 0xf6, 0x9f, 0xee, 0xec, 0xf2,
-  0x70, 0x9f, 0xee, 0x7c, 0x11, 0xd6, 0x9e, 0x72, 0x50, 0x3f, 0x5a, 0x5f,
-  0x45, 0xd3, 0xca, 0x1e, 0xcc, 0xdd, 0x46, 0xb6, 0x7d, 0x65, 0x56, 0xe4,
-  0xe5, 0x94, 0x85, 0x3e, 0x45, 0x40, 0xea, 0xe7, 0x73, 0x01, 0xc0, 0xa1,
-  0x9f, 0xb2, 0x97, 0x02, 0x99, 0xd4, 0x95, 0xf0, 0x13, 0xc3, 0x04, 0x5c,
-  0x85, 0x8b, 0xa4, 0xf0, 0xec, 0x81, 0x3a, 0xc1, 0xe8, 0x4e, 0xcc, 0xbd,
-  0x3a, 0x76, 0x36, 0x8f, 0x10, 0x7d, 0xa8, 0x30, 0x48, 0x17, 0x30, 0xba,
-  0xaa, 0xf1, 0x8f, 0xf8, 0xe2, 0x36, 0x23, 0x1e, 0x49, 0xc2, 0x60, 0x3a,
-  0x06, 0x88, 0xb2, 0xbc, 0x52, 0xa0, 0xde, 0x5b, 0xab, 0xb9, 0xbd, 0x27,
-  0x5f, 0x7e, 0xa9, 0x83, 0xc8, 0x34, 0x01, 0xca, 0xd7, 0xb1, 0x81, 0xf8,
-  0x2f, 0xe0, 0x08, 0xe2, 0xf8, 0xa6, 0x63, 0xc7, 0x98, 0x43, 0x1a, 0x9b,
-  0x1f, 0xd1, 0x91, 0x37, 0x74, 0x4d, 0x37, 0x2c, 0x23, 0xd0, 0x99, 0x4f,
-  0x44, 0x6b, 0xe9, 0x59, 0x0d, 0x6e, 0x57, 0xe2, 0x43, 0xf1, 0x75, 0xa5,
-  0x22, 0xe5, 0xd7, 0x9d, 0x1c, 0x93, 0xab, 0x39, 0xf7, 0xf8, 0x57, 0x28,
-  0xdc, 0x57, 0x59, 0xdd, 0x4d, 0x62, 0x55, 0xa0, 0xef, 0x4e, 0xe3, 0x2b,
-  0xb1, 0x7c, 0x83, 0xfa, 0x24, 0x9a, 0x85, 0xfb, 0x52, 0xcc, 0x09, 0x06,
-  0xda, 0x19, 0x54, 0x6f, 0xff, 0x9a, 0xc9, 0xe8, 0xa5, 0x46, 0x78, 0x44,
-  0x81, 0xe0, 0xbf, 0x56, 0xc8, 0x6a, 0xf5, 0x71, 0x32, 0x96, 0x72, 0x5d,
-  0xa7, 0xe3, 0x6b, 0xcf, 0xcc, 0x19, 0xd0, 0x87, 0xed, 0x85, 0x56, 0xda,
-  0x42, 0x2a, 0xc2, 0x75, 0xc2, 0x7a, 0x72, 0x57, 0xf5, 0xf3, 0xa5, 0x21,
-  0x61, 0xd3, 0x4b, 0x8c, 0xcb, 0x2f, 0x05, 0xc9, 0x30, 0x9a, 0xd8, 0x52,
-  0x54, 0x61, 0x51, 0xfa, 0x46, 0x46, 0xa4, 0x7f, 0x37, 0x58, 0xa8, 0x48,
-  0x49, 0x10, 0x2e, 0x79, 0xb7, 0xef, 0xa2, 0xcd, 0x21, 0x59, 0xcd, 0x80,
-  0xe2, 0x20, 0xc8, 0xe1, 0x0a, 0x20, 0x26, 0x47, 0x3d, 0xd9, 0x20, 0xb5,
-  0x05, 0xcd, 0x6c, 0x24, 0x2b, 0x62, 0x31, 0xc3, 0xe8, 0x10, 0xa6, 0x45,
-  0x19, 0x81, 0xc3, 0x89, 0xc7, 0xc5, 0x55, 0xa6, 0x79, 0x3d, 0xf8, 0xeb,
-  0xe2, 0xca, 0x89, 0xb7, 0x78, 0x98, 0x81, 0x72, 0xf7, 0xa3, 0x36, 0xde,
-  0xfe, 0x9b, 0x44, 0xbb, 0x7d, 0xf5, 0x75, 0xe3, 0x7d, 0x43, 0x2d, 0xd5,
-  0xb2, 0x7d, 0x83, 0x71, 0x31, 0xdb, 0x56, 0xec, 0xbb, 0xf1, 0x55, 0x1e,
-  0x81, 0xe5, 0xd3, 0x8a, 0x32, 0x42, 0x43, 0x1e, 0x6e, 0x28, 0x0c, 0xdc,
-  0x34, 0x7a, 0xe2, 0x60, 0x7e, 0xc9, 0x4d, 0xcf, 0x56, 0x16, 0x0d, 0xd2,
-  0xe3, 0x73, 0x05, 0x0d, 0x10, 0xa6, 0x41, 0xae, 0xbd, 0x61, 0x94, 0xc3,
-  0xc8, 0x29, 0x75, 0xb9, 0x1c, 0xe3, 0xfe, 0x49, 0xde, 0xc3, 0x8d, 0x58,
-  0x2f, 0x11, 0xfb, 0xc3, 0xd5, 0xc0, 0xea, 0x08, 0xbc, 0x46, 0x12, 0x6a,
-  0x10, 0x3c, 0x58, 0x93, 0x58, 0xbc, 0x13, 0x3d, 0x55, 0x1b, 0xee, 0x22,
-  0x5f, 0x20, 0xf7, 0xca, 0xf0, 0x17, 0x7a, 0xdd, 0x34, 0x09, 0x1f, 0x33,
-  0x81, 0x06, 0x20, 0x9e, 0x54, 0xf9, 0xdf, 0x0d, 0xb9, 0xb9, 0x81, 0x62,
-  0x2c, 0x32, 0x55, 0x57, 0x00, 0xb5, 0x4a, 0xa6, 0x52, 0xa8, 0x82, 0x43,
-  0x81, 0xcc, 0x03, 0xc6, 0x0e, 0xe3, 0x26, 0x13, 0x72, 0xa6, 0x10, 0x57,
-  0xb6, 0xa2, 0xcd, 0x21, 0xb8, 0x5a, 0xc5, 0x46, 0x4f, 0x92, 0xb8, 0x14,
-  0x76, 0xc4, 0xe3, 0x47, 0xac, 0xdc, 0xfc, 0xf5, 0xbb, 0x6c, 0xf4, 0xea,
-  0x6b, 0xc4, 0x3e, 0x7d, 0x64, 0x5c, 0x59, 0xa9, 0x7a, 0x01, 0xfa, 0xde,
-  0xc6, 0x9f, 0xeb, 0x49, 0xb0, 0xff, 0xed, 0x36, 0xe8, 0x6c, 0xac, 0x6a,
-  0x35, 0x80, 0xcf, 0x0a, 0x5a, 0xbc, 0x2c, 0x8a, 0x07, 0x1b, 0xfc, 0x8b,
-  0x2b, 0x99, 0xc6, 0xab, 0x12, 0x64, 0xd1, 0x48, 0x6e, 0x89, 0x8f, 0xdb,
-  0x10, 0xca, 0x77, 0x24, 0xa5, 0x47, 0x3f, 0x06, 0x0d, 0x31, 0xba, 0x77,
-  0xc5, 0xdc, 0x2c, 0x4d, 0xfc, 0x55, 0x8f, 0xd1, 0xa3, 0x58, 0x27, 0x5a,
-  0xbd, 0x30, 0x72, 0x26, 0x18, 0x7c, 0x13, 0xbf, 0xfe, 0xd9, 0xbd, 0x8d,
-  0x7f, 0xe8, 0x44, 0x11, 0xf7, 0x79, 0x70, 0x32, 0xa4, 0x75, 0xd9, 0x2b,
-  0xdb, 0x62, 0x73, 0x34, 0x23, 0xd2, 0x46, 0x6f, 0x03, 0xd4, 0xb5, 0xf1,
-  0xe7, 0x0d, 0x0e, 0xbe, 0x31, 0x17, 0x11, 0xd7, 0x24, 0x9c, 0x48, 0x41,
-  0xe7, 0xa2, 0x13, 0x5b, 0x8e, 0x1c, 0x20, 0x7e, 0xa2, 0xe2, 0xc1, 0xc7,
-  0xc7, 0x8d, 0xdb, 0x98, 0xfe, 0xd1, 0xb1, 0xff, 0xb2, 0xee, 0x46, 0xff,
-  0xcb, 0xba, 0x1f, 0xff, 0x2f, 0xeb, 0x7e, 0x06, 0xbf, 0xac, 0xaf, 0x27,
-  0x3c, 0x89, 0x8e, 0x10, 0xfc, 0x5b, 0xb7, 0x7c, 0x43, 0xfa, 0xf4, 0x5d,
-  0x06, 0x3d, 0x06, 0x1d, 0xae, 0x6f, 0x3c, 0xb4, 0x66, 0x3e, 0x78, 0x30,
-  0xb7, 0xad, 0xf5, 0xeb, 0x07, 0xa6, 0xa8, 0x6b, 0x64, 0x8b, 0xe4, 0x17,
-  0x85, 0x5d, 0x4a, 0x9d, 0x38, 0xb6, 0xe0, 0x09, 0xac, 0x38, 0x44, 0xf4,
-  0x6a, 0x0a, 0xdb, 0x71, 0x80, 0x70, 0x6b, 0x9d, 0xb8, 0x7d, 0xb0, 0x00,
-  0xa8, 0x4e, 0x58, 0x9c, 0x7b, 0x3d, 0x8a, 0x4b, 0x7b, 0xb9, 0x2c, 0xd9,
-  0x6a, 0xa1, 0xd3, 0x13, 0xd8, 0x1e, 0x03, 0xd1, 0xd6, 0xbe, 0xde, 0x1e,
-  0xbc, 0x7b, 0x7f, 0x70, 0xf2, 0x60, 0xcc, 0x77, 0x98, 0x49, 0xe6, 0xfc,
-  0x8e, 0x6c, 0xbf, 0x08, 0x8d, 0x14, 0x48, 0x82, 0x82, 0x0c, 0xb2, 0x24,
-  0x5e, 0xfb, 0x33, 0x44, 0x92, 0x5f, 0xa3, 0x79, 0x7a, 0x3f, 0xaa, 0x24,
-  0xfe, 0x26, 0x2c, 0x60, 0x77, 0x23, 0xfc, 0x74, 0xdd, 0xde, 0xc7, 0xeb,
-  0xeb, 0x1a, 0x7e, 0xc1, 0x31, 0x4d, 0x11, 0x28, 0x85, 0x46, 0xe6, 0xb2,
-  0x77, 0x86, 0x9b, 0xa1, 0x4d, 0x53, 0xcd, 0x0c, 0xb8, 0x4d, 0x2a, 0x23,
-  0x5d, 0x5e, 0x7a, 0xfb, 0x46, 0xab, 0xb9, 0x83, 0xc3, 0x43, 0x9f, 0x36,
-  0xda, 0x04, 0xa0, 0x69, 0x04, 0x91, 0xff, 0xf3, 0xad, 0x3b, 0xbc, 0x70,
-  0x70, 0x82, 0x22, 0xaf, 0xfb, 0x36, 0xeb, 0xd7, 0x85, 0xa4, 0x6d, 0xbf,
-  0xd4, 0xd1, 0x7c, 0x15, 0x5d, 0x47, 0x40, 0x29, 0x06, 0x72, 0xb2, 0x55,
-  0x1d, 0xe6, 0xca, 0xa9, 0x43, 0xf5, 0xb0, 0x9f, 0x1d, 0xc0, 0x45, 0x66,
-  0x29, 0xcc, 0xaa, 0xef, 0x74, 0x12, 0x4e, 0x34, 0x16, 0x9f, 0xeb, 0x14,
-  0xd9, 0xfc, 0xcd, 0x4a, 0x6b, 0x86, 0x48, 0x95, 0x2a, 0x93, 0x8b, 0xe5,
-  0x8c, 0xc8, 0x97, 0x24, 0xa6, 0x09, 0xa9, 0xd3, 0x0f, 0x07, 0x05, 0xdb,
-  0xee, 0xc2, 0x0b, 0x2a, 0x81, 0xca, 0x16, 0x13, 0xec, 0x55, 0xfc, 0xc0,
-  0x12, 0xd5, 0x8b, 0x5f, 0x22, 0xeb, 0xc3, 0xe3, 0x8b, 0x23, 0xda, 0x9d,
-  0xf7, 0x17, 0xdf, 0xad, 0xab, 0x4e, 0xd4, 0x46, 0x65, 0x60, 0x38, 0x3e,
-  0x52, 0xd3, 0x69, 0xe9, 0x2d, 0xe1, 0xb3, 0x14, 0x8e, 0xdc, 0x2d, 0xf1,
-  0xd2, 0x8a, 0x62, 0x6d, 0x6d, 0xf4, 0xb3, 0xc1, 0xb3, 0xad, 0xd6, 0xc6,
-  0xac, 0x06, 0x58, 0x6e, 0xd7, 0x01, 0x56, 0x9a, 0x56, 0x80, 0x5f, 0x44,
-  0xcb, 0x6f, 0xfb, 0xaa, 0x20, 0x22, 0xf4, 0xa7, 0x2e, 0xf6, 0xae, 0x0b,
-  0x21, 0xe3, 0x0a, 0xf7, 0x7a, 0x93, 0x01, 0xc3, 0x10, 0x3b, 0x10, 0x4c,
-  0x95, 0xcc, 0xd4, 0xaa, 0x37, 0x9f, 0xa4, 0xe5, 0xc4, 0xe5, 0x32, 0x76,
-  0x31, 0x16, 0xcc, 0x89, 0x8f, 0xaa, 0x03, 0xa8, 0x3e, 0x19, 0xd6, 0x1d,
-  0xec, 0x9a, 0x9e, 0x4d, 0x20, 0xf2, 0xc9, 0xaa, 0x51, 0x50, 0xe2, 0x64,
-  0x96, 0x0b, 0xaa, 0x59, 0x00, 0x70, 0xdc, 0xa6, 0x64, 0x55, 0x2a, 0x7f,
-  0x96, 0x9f, 0x71, 0x1e, 0xc0, 0x92, 0x04, 0x4a, 0x9d, 0xb3, 0x5c, 0xa1,
-  0x6f, 0x48, 0x50, 0x8c, 0xe4, 0xc2, 0xf8, 0xba, 0x8c, 0xac, 0x6b, 0x49,
-  0x1c, 0x12, 0x96, 0xb8, 0x5b, 0x32, 0x62, 0x73, 0xb8, 0xe5, 0xea, 0x69,
-  0x43, 0xb6, 0xd7, 0xd6, 0x90, 0x0b, 0xd5, 0xca, 0x7d, 0x0a, 0x70, 0x83,
-  0x14, 0x76, 0x29, 0x86, 0x25, 0x19, 0x9c, 0xc4, 0xee, 0x4d, 0xcc, 0xdc,
-  0x6f, 0x7c, 0x37, 0x89, 0x03, 0x5a, 0xc8, 0x7d, 0x27, 0x92, 0x5d, 0xea,
-  0x0a, 0xfb, 0x1e, 0xfe, 0xf8, 0x3a, 0x28, 0x0f, 0xc3, 0x65, 0xa7, 0x31,
-  0x2b, 0x26, 0x04, 0x81, 0xd6, 0x99, 0xaf, 0x02, 0x3a, 0xb1, 0x30, 0x04,
-  0xa2, 0x25, 0x29, 0x2a, 0x36, 0xc9, 0xb2, 0x85, 0x03, 0xdb, 0x96, 0x12,
-  0x2c, 0xa8, 0x34, 0x9d, 0xd1, 0x91, 0x83, 0xcd, 0xeb, 0x9e, 0xd1, 0xdd,
-  0xee, 0x57, 0x8c, 0x4e, 0xd9, 0x40, 0xa3, 0xcc, 0x16, 0x0a, 0x5f, 0xa0,
-  0x34, 0xf8, 0xee, 0x17, 0x4f, 0xbe, 0x4c, 0x2a, 0xe4, 0x30, 0xe7, 0xe1,
-  0x92, 0x09, 0x36, 0xdb, 0x6a, 0x08, 0x1b, 0x8d, 0x87, 0x37, 0xdf, 0xde,
-  0xc8, 0x70, 0xcd, 0x80, 0x8d, 0xc2, 0x37, 0x97, 0xa6, 0xda, 0x76, 0x11,
-  0x4d, 0x68, 0x11, 0x75, 0xc1, 0xd4, 0x9f, 0xc2, 0xeb, 0x24, 0x56, 0xa4,
-  0x41, 0x40, 0x99, 0x28, 0x11, 0x8b, 0x2a, 0x20, 0xc4, 0x1e, 0xce, 0x8f,
-  0x2e, 0xce, 0xe9, 0xc7, 0xf0, 0xe2, 0xf4, 0x7c, 0x05, 0xee, 0x50, 0x3d,
-  0x66, 0xb6, 0x87, 0x45, 0x33, 0x13, 0x9d, 0xf9, 0xd2, 0x02, 0x7e, 0xc1,
-  0x91, 0x65, 0xc2, 0x42, 0xd8, 0x8e, 0x30, 0xeb, 0xaf, 0x42, 0x9b, 0xe2,
-  0xd5, 0x0a, 0x27, 0x7a, 0x49, 0xbc, 0xfc, 0xc1, 0x89, 0xc9, 0x9e, 0x3f,
-  0x4c, 0x21, 0x3c, 0x61, 0x10, 0x23, 0x66, 0xec, 0x98, 0x36, 0x8f, 0x56,
-  0x8b, 0x81, 0x7b, 0xff, 0xf3, 0x8a, 0x7a, 0xb6, 0x2e, 0x0c, 0x81, 0xb1,
-  0x64, 0x2b, 0x41, 0x5a, 0xf0, 0x95, 0xa0, 0x48, 0xd8, 0xd5, 0x60, 0x9e,
-  0x75, 0x84, 0x3a, 0xdc, 0xb8, 0x0a, 0x1e, 0x8f, 0xd0, 0x6f, 0x5a, 0x39,
-  0x1b, 0x14, 0xae, 0xcc, 0x62, 0x96, 0x89, 0xe0, 0xcf, 0xce, 0x64, 0xc7,
-  0x75, 0xe4, 0x9e, 0x10, 0xd4, 0xb5, 0x24, 0x86, 0xc8, 0xe0, 0x00, 0x6b,
-  0xb1, 0xcb, 0x1b, 0x1d, 0xd4, 0x3b, 0xd9, 0x17, 0x12, 0x70, 0xa6, 0x35,
-  0x43, 0x01, 0x6f, 0xd8, 0xa8, 0x36, 0x1e, 0xc6, 0xd5, 0x7e, 0x36, 0xd8,
-  0x6d, 0x73, 0x67, 0xa0, 0x04, 0xc4, 0x39, 0x0c, 0xd7, 0x82, 0xb1, 0x94,
-  0x6f, 0x57, 0xea, 0xce, 0x41, 0x2c, 0x86, 0xa5, 0x4c, 0xce, 0xf4, 0xa9,
-  0x68, 0x76, 0x19, 0x27, 0x35, 0x23, 0x29, 0xc5, 0xd1, 0xb8, 0x6e, 0xbd,
-  0x24, 0xee, 0x2f, 0xdb, 0x5c, 0xb5, 0x21, 0x2c, 0x75, 0xf9, 0x68, 0xa4,
-  0x00, 0x5d, 0xd2, 0x3f, 0xdb, 0x0e, 0xc0, 0x11, 0x14, 0x8e, 0xb9, 0x31,
-  0xf3, 0xdd, 0xb8, 0x00, 0xf2, 0x4f, 0x87, 0x52, 0x21, 0xad, 0x55, 0x31,
-  0x4d, 0xe6, 0xbe, 0x2c, 0xa1, 0x2d, 0x22, 0xe0, 0x7a, 0x60, 0xc2, 0x96,
-  0x5b, 0x6a, 0x52, 0x48, 0x84, 0x0c, 0x16, 0x21, 0x12, 0x13, 0xce, 0x82,
-  0x2b, 0x87, 0xbf, 0xdb, 0xd5, 0xa2, 0xed, 0xa9, 0x2d, 0xa3, 0x04, 0x81,
-  0xb7, 0x81, 0x21, 0x38, 0x36, 0xa3, 0xeb, 0xbd, 0x0c, 0x37, 0x51, 0x58,
-  0x1d, 0x8b, 0xe3, 0x9e, 0x47, 0xd4, 0x02, 0x09, 0x20, 0x79, 0xff, 0x06,
-  0xed, 0x20, 0x73, 0xed, 0xba, 0x45, 0x24, 0xc3, 0x83, 0x91, 0x17, 0xb4,
-  0x44, 0x60, 0x13, 0xd0, 0xc0, 0x44, 0xb9, 0xf6, 0xbd, 0x86, 0xda, 0x49,
-  0x4c, 0x6f, 0xfd, 0x7c, 0xf1, 0x38, 0x00, 0x85, 0x41, 0x5f, 0x60, 0x58,
-  0x3e, 0xb3, 0xb2, 0xe1, 0xd7, 0x32, 0x7f, 0x54, 0xde, 0xc5, 0x8c, 0xaa,
-  0x82, 0xe0, 0x56, 0x45, 0x0e, 0x24, 0x71, 0x0b, 0x83, 0x76, 0xd3, 0xf3,
-  0x21, 0xaf, 0x4a, 0xca, 0x1e, 0x4b, 0x7d, 0x65, 0x9c, 0x2f, 0xcc, 0xe2,
-  0xb2, 0x19, 0x61, 0xf9, 0x90, 0x7e, 0x10, 0xcf, 0xc0, 0x56, 0x33, 0x1a,
-  0xaf, 0x2f, 0xf7, 0xd9, 0x31, 0x5c, 0x28, 0xa4, 0x96, 0x48, 0x34, 0x76,
-  0xa6, 0xc6, 0x7a, 0x9f, 0x87, 0x7d, 0x35, 0x28, 0xf8, 0xe9, 0x60, 0x6f,
-  0xeb, 0xc1, 0x2c, 0x63, 0xc8, 0xef, 0x0e, 0xe7, 0x04, 0xaa, 0x96, 0xc0,
-  0xdc, 0x08, 0x5c, 0x49, 0xe9, 0x30, 0x20, 0xc2, 0xbc, 0xdb, 0x6e, 0x04,
-  0x03, 0x56, 0xa8, 0xbd, 0x6f, 0x80, 0xd1, 0x7c, 0x7c, 0xbf, 0xc4, 0x14,
-  0x96, 0x9c, 0xd1, 0x1d, 0xe3, 0x96, 0x38, 0x40, 0xe9, 0xa0, 0x77, 0x58,
-  0xdd, 0xc0, 0x30, 0xb6, 0xda, 0x17, 0x22, 0xfc, 0xa4, 0x5c, 0xee, 0xf4,
-  0x8d, 0xf7, 0x2d, 0x40, 0xf9, 0x43, 0x61, 0x33, 0xf8, 0x37, 0x4a, 0x1a,
-  0x06, 0x83, 0x9f, 0x49, 0xe1, 0x72, 0x3e, 0xb4, 0x30, 0xa2, 0x1b, 0x3f,
-  0x5d, 0x8b, 0xde, 0xd3, 0xbc, 0xb6, 0xfe, 0x22, 0x40, 0xc0, 0x3f, 0x9d,
-  0xcc, 0x2a, 0x2c, 0x6c, 0x88, 0xfa, 0x49, 0x3c, 0xac, 0x49, 0x71, 0x37,
-  0xe7, 0xb2, 0x5a, 0x49, 0x97, 0x9a, 0x78, 0xf8, 0x38, 0x3b, 0x2d, 0x1f,
-  0xe0, 0xde, 0xce, 0xe0, 0x63, 0x9b, 0x9d, 0x56, 0xd5, 0xb4, 0x3f, 0x1e,
-  0x8f, 0x1f, 0xe0, 0xa8, 0x87, 0x87, 0x87, 0xf4, 0xc1, 0x21, 0xa3, 0x53,
-  0x01, 0x5c, 0x9f, 0x47, 0x7a, 0x78, 0x0d, 0xdb, 0xce, 0x74, 0x2b, 0x19,
-  0x5e, 0x2f, 0x11, 0xf2, 0x4c, 0xa3, 0x91, 0x2a, 0x70, 0xc3, 0x93, 0xed,
-  0xae, 0x53, 0x18, 0x45, 0xec, 0x4a, 0xd5, 0xed, 0x9a, 0x1a, 0x8c, 0x08,
-  0x70, 0x0c, 0x73, 0x6b, 0x09, 0x67, 0x46, 0x57, 0xd2, 0x43, 0x34, 0x23,
-  0x7a, 0x39, 0x0f, 0xaa, 0x8c, 0xaa, 0x86, 0x35, 0xcf, 0xe6, 0x9c, 0x7c,
-  0x01, 0x9e, 0xc6, 0x64, 0xc6, 0x81, 0x55, 0x55, 0xf2, 0xee, 0xe0, 0x02,
-  0x6e, 0xbd, 0x5a, 0x13, 0xb9, 0xe3, 0x59, 0xac, 0x0e, 0x24, 0x99, 0xed,
-  0x65, 0x69, 0x50, 0xf0, 0xca, 0xee, 0x00, 0x66, 0x45, 0x79, 0x65, 0xac,
-  0x51, 0xd1, 0x58, 0x63, 0xc5, 0x3c, 0x74, 0x45, 0xfb, 0xee, 0x06, 0x92,
-  0x5c, 0x48, 0xfc, 0xd9, 0x76, 0xca, 0xee, 0x3e, 0xef, 0xde, 0x6f, 0x8d,
-  0xd7, 0x7f, 0x16, 0x20, 0x92, 0x6d, 0xed, 0xf5, 0xd7, 0xdf, 0xbf, 0x4d,
-  0x99, 0x72, 0x0b, 0x3c, 0x26, 0xa4, 0x71, 0x11, 0x49, 0x12, 0x0a, 0xd8,
-  0xae, 0x2b, 0xc1, 0x26, 0xc9, 0xb7, 0x8a, 0xf8, 0x5d, 0xd1, 0x76, 0x4f,
-  0xb8, 0x1c, 0xa6, 0x5c, 0x03, 0xae, 0xf2, 0x00, 0x82, 0xda, 0xbb, 0x18,
-  0x3f, 0x6d, 0xd8, 0xb6, 0x82, 0x98, 0x8b, 0x04, 0xea, 0xb9, 0xe6, 0xcb,
-  0x6c, 0x21, 0x80, 0xb9, 0x61, 0xf3, 0xab, 0xf4, 0xb8, 0x50, 0xea, 0x0f,
-  0x31, 0x5a, 0x6c, 0x8c, 0x55, 0xb3, 0x15, 0xee, 0x28, 0xcd, 0xa3, 0x16,
-  0xf4, 0x54, 0x7b, 0x76, 0x79, 0x4b, 0xd6, 0x76, 0x7b, 0x87, 0xf6, 0xa2,
-  0x3b, 0x24, 0x54, 0x1a, 0xdf, 0x8f, 0x73, 0x3d, 0xf6, 0x76, 0x1a, 0x5c,
-  0x50, 0xa9, 0xd0, 0xd8, 0xb4, 0xb8, 0x42, 0xa6, 0x96, 0xe0, 0xbd, 0xf1,
-  0x22, 0x59, 0xa9, 0xb9, 0xb6, 0x7d, 0x42, 0x28, 0xb8, 0x12, 0x37, 0x71,
-  0xd3, 0x45, 0x26, 0xb2, 0x08, 0x78, 0x8a, 0xa3, 0x7b, 0x83, 0x91, 0x74,
-  0xc0, 0x45, 0x91, 0xfd, 0x70, 0xf1, 0x81, 0xe3, 0xfb, 0x01, 0xfb, 0xe6,
-  0x61, 0x16, 0x6a, 0x18, 0x8a, 0xf3, 0x46, 0xdc, 0x88, 0xa9, 0xa8, 0xd5,
-  0x72, 0x11, 0x75, 0x50, 0xeb, 0x0c, 0xbb, 0xab, 0xb6, 0xb3, 0xa5, 0x57,
-  0x36, 0xc9, 0x15, 0xc4, 0xc6, 0xbc, 0x19, 0x44, 0x65, 0xc3, 0x0e, 0xca,
-  0xd1, 0x48, 0x4a, 0xe9, 0xdc, 0x1a, 0x78, 0xb5, 0x56, 0xb3, 0xd6, 0xe0,
-  0xe8, 0x41, 0x77, 0x0f, 0xe2, 0x1c, 0x9e, 0x0d, 0x40, 0x19, 0x42, 0xd7,
-  0x02, 0x54, 0x3a, 0xf1, 0x77, 0xde, 0x49, 0x25, 0x57, 0xa9, 0xf1, 0x81,
-  0x3a, 0x70, 0x91, 0x7d, 0x25, 0x8e, 0x3d, 0xf9, 0x87, 0x1b, 0xe6, 0x56,
-  0x1a, 0xad, 0xc3, 0x4d, 0xa2, 0x29, 0x80, 0xe2, 0x9d, 0x94, 0x3f, 0x56,
-  0x39, 0x27, 0x87, 0x06, 0xdc, 0x0d, 0xfb, 0x8b, 0x7a, 0x35, 0x15, 0x95,
-  0xdb, 0x85, 0xb2, 0x48, 0x34, 0xa5, 0x36, 0xaa, 0x47, 0x2d, 0xe2, 0xbf,
-  0x80, 0x30, 0x57, 0xd2, 0xcf, 0x5a, 0x90, 0x99, 0x78, 0x07, 0xa6, 0xc8,
-  0xd1, 0x84, 0x64, 0x37, 0x48, 0x4e, 0xd4, 0x03, 0xb1, 0xf1, 0xb5, 0x04,
-  0xf6, 0x25, 0x1b, 0x2f, 0x37, 0x92, 0xd5, 0x45, 0x49, 0xb4, 0x2a, 0x1a,
-  0xfa, 0xdf, 0x10, 0x8b, 0xfa, 0x86, 0x0d, 0x41, 0xd5, 0x0d, 0x19, 0x96,
-  0x61, 0x98, 0x59, 0x5d, 0x02, 0xc8, 0x70, 0x11, 0xcd, 0xbb, 0x09, 0x74,
-  0xb8, 0x90, 0xe4, 0x7e, 0xb8, 0xe8, 0x18, 0xb0, 0x48, 0xdc, 0xaf, 0x97,
-  0xe2, 0x97, 0xde, 0xa8, 0x38, 0xd8, 0x4d, 0xca, 0x97, 0xc6, 0x22, 0x6e,
-  0x25, 0xc1, 0x4d, 0x64, 0x1a, 0x19, 0x91, 0x8e, 0x85, 0xd1, 0x32, 0xc6,
-  0x63, 0x0e, 0x0c, 0x64, 0x71, 0x96, 0xbe, 0x25, 0x39, 0x4c, 0x78, 0x13,
-  0xe6, 0x0d, 0x23, 0xf8, 0xcb, 0x76, 0xae, 0xc0, 0x65, 0x96, 0x82, 0xfe,
-  0x38, 0x8e, 0xaa, 0x5d, 0x42, 0xa6, 0x7f, 0x05, 0x19, 0xf6, 0x6a, 0x5a,
-  0x8c, 0x8a, 0xcb, 0xcb, 0x07, 0x8c, 0xa8, 0x82, 0x27, 0xc5, 0x6d, 0xc8,
-  0xa1, 0x5a, 0x07, 0x9e, 0x02, 0xde, 0x1b, 0x61, 0x7c, 0xb4, 0x31, 0x74,
-  0xca, 0xd6, 0xb5, 0xe0, 0x04, 0x97, 0xef, 0xe8, 0xc8, 0x2d, 0xa1, 0xb8,
-  0xdf, 0x73, 0xa0, 0x0f, 0x96, 0x31, 0x4e, 0xcd, 0x99, 0x64, 0xac, 0x39,
-  0x22, 0x1e, 0x42, 0xbe, 0x4a, 0xfe, 0xe3, 0x3f, 0x7f, 0xfe, 0x75, 0x45,
-  0x11, 0x56, 0xcd, 0x6f, 0xe3, 0x90, 0x6c, 0x01, 0xa9, 0x74, 0xf8, 0xe3,
-  0xbe, 0xd8, 0x26, 0xa4, 0xd2, 0x6c, 0x7a, 0x39, 0x08, 0x32, 0x08, 0xbb,
-  0x2c, 0x19, 0x57, 0x8f, 0x75, 0x68, 0xc5, 0x5c, 0x35, 0x0c, 0x03, 0x10,
-  0x9d, 0x8c, 0x51, 0xec, 0x1d, 0x99, 0x0e, 0xfe, 0x4f, 0xec, 0x0d, 0x5d,
-  0x16, 0xe0, 0x50, 0x5c, 0x9d, 0x67, 0x5b, 0x6f, 0x86, 0xf7, 0xe7, 0xc7,
-  0x4e, 0x1b, 0x0d, 0x76, 0xe2, 0x5b, 0xde, 0x89, 0xce, 0xb2, 0xfd, 0xa8,
-  0xf5, 0x3a, 0x27, 0x11, 0xf4, 0x31, 0x8e, 0xa0, 0xe6, 0x1c, 0x48, 0x61,
-  0x97, 0x41, 0x44, 0xaf, 0x38, 0x8f, 0xfb, 0x93, 0x5e, 0xb4, 0x68, 0x46,
-  0xaf, 0x5d, 0x54, 0xa0, 0x28, 0xbb, 0xc8, 0xea, 0x0d, 0xac, 0x18, 0x0b,
-  0x3f, 0x69, 0x35, 0xf7, 0xed, 0x91, 0xaf, 0xed, 0xd4, 0x02, 0x94, 0x69,
-  0xd4, 0x7d, 0x92, 0xa2, 0xa1, 0x20, 0xff, 0xbb, 0x1c, 0x79, 0xf7, 0x56,
-  0xaf, 0x25, 0xaa, 0xc7, 0x5d, 0xf8, 0x52, 0x02, 0xc2, 0x6c, 0x0d, 0x83,
-  0xd7, 0xaf, 0xe0, 0x89, 0xa5, 0xce, 0x6e, 0xfc, 0xfb, 0x86, 0x47, 0x3c,
-  0x8f, 0xa5, 0x8e, 0x87, 0x35, 0xe4, 0x5a, 0xe8, 0xa3, 0xfd, 0xe3, 0x9e,
-  0x1f, 0xa9, 0xef, 0xd0, 0xe6, 0x31, 0x8a, 0x94, 0x6c, 0x5a, 0x35, 0x8c,
-  0xef, 0x8e, 0x0e, 0x5e, 0xbb, 0x1c, 0xbc, 0xdf, 0x59, 0x0e, 0x40, 0x6a,
-  0x0d, 0xaa, 0x1d, 0xa4, 0xac, 0x2c, 0x5d, 0x6f, 0x85, 0xb2, 0xeb, 0x0c,
-  0x1d, 0xa3, 0x4c, 0x2a, 0x53, 0x2d, 0x4d, 0xfb, 0xe5, 0x4d, 0xb1, 0xdb,
-  0x8e, 0x49, 0x84, 0xf4, 0x03, 0x04, 0x15, 0x82, 0x64, 0xbb, 0xca, 0xae,
-  0xda, 0xcb, 0x56, 0xaa, 0xbb, 0x81, 0x49, 0xd1, 0xcc, 0x93, 0x38, 0xbc,
-  0xc2, 0xe2, 0x02, 0xfa, 0x0d, 0xf1, 0x60, 0x5e, 0xca, 0xcf, 0x15, 0x97,
-  0xc2, 0x11, 0xd7, 0x9d, 0xd0, 0x47, 0x69, 0x2d, 0x15, 0x56, 0xdc, 0xf8,
-  0xae, 0xd1, 0x0c, 0x2b, 0x89, 0x16, 0x2b, 0x1c, 0x23, 0x3e, 0xcd, 0x01,
-  0x37, 0x69, 0xe7, 0x2f, 0x5a, 0xcb, 0xc9, 0x58, 0x8a, 0x8f, 0x16, 0xe7,
-  0xe4, 0xdc, 0xa0, 0xd3, 0x2a, 0x8a, 0xd0, 0x6c, 0x6e, 0x32, 0x66, 0x5f,
-  0xb2, 0x28, 0xa4, 0x48, 0x02, 0x41, 0x7f, 0x59, 0xd5, 0x24, 0x59, 0xd9,
-  0x80, 0xf1, 0xd8, 0x75, 0x1a, 0x54, 0xda, 0x92, 0xf2, 0xcf, 0x9d, 0x2c,
-  0x9b, 0x79, 0x88, 0xdc, 0xe8, 0x2c, 0x31, 0x52, 0xf0, 0x41, 0x54, 0x58,
-  0xb3, 0x16, 0xf7, 0x24, 0x95, 0x08, 0x01, 0xa7, 0xe5, 0xdc, 0xe0, 0x6b,
-  0xe2, 0xe9, 0x9e, 0xa1, 0x1b, 0xa6, 0x7d, 0xe2, 0x5c, 0x1f, 0x0c, 0x25,
-  0x14, 0x6a, 0x0e, 0xdd, 0x5d, 0xf7, 0x09, 0x18, 0x0c, 0x55, 0x83, 0x9b,
-  0x64, 0x7c, 0x83, 0x34, 0x63, 0x62, 0x4d, 0x4b, 0xe6, 0xf1, 0xe9, 0x3c,
-  0x1c, 0xa5, 0x03, 0x8b, 0x9c, 0x14, 0xbc, 0xd2, 0x71, 0x22, 0x32, 0x29,
-  0x18, 0x30, 0x7a, 0x36, 0x1a, 0x05, 0xe3, 0xb1, 0x42, 0x35, 0xc6, 0xb7,
-  0x59, 0xd0, 0x10, 0xac, 0xca, 0x6e, 0x08, 0x2b, 0xd4, 0x68, 0x7a, 0x8f,
-  0x55, 0xc5, 0x3b, 0x4d, 0xb3, 0xdd, 0xe0, 0xa2, 0xb5, 0x7c, 0xd5, 0x9e,
-  0xb3, 0x74, 0xe5, 0x50, 0xfb, 0x30, 0x65, 0x5d, 0x1e, 0xe2, 0xf7, 0x57,
-  0xf9, 0x6d, 0xd4, 0x32, 0x6e, 0x03, 0x63, 0xbb, 0xba, 0x8d, 0xc2, 0xc2,
-  0x2b, 0xbc, 0x09, 0x52, 0x10, 0x66, 0x13, 0x54, 0x91, 0x71, 0xdb, 0xd7,
-  0x05, 0xa2, 0xc1, 0x15, 0x86, 0xa8, 0x85, 0xf9, 0x3e, 0x11, 0x7e, 0xb2,
-  0xfe, 0x5d, 0x51, 0xd5, 0xfb, 0xeb, 0x0e, 0x93, 0xb1, 0xca, 0x0c, 0x56,
-  0xa5, 0x41, 0x39, 0x5a, 0x78, 0xa5, 0x13, 0x11, 0xc7, 0x77, 0xbb, 0x9c,
-  0x3f, 0xba, 0x58, 0xf4, 0x61, 0x73, 0x9e, 0x2a, 0x10, 0x8c, 0x83, 0xd5,
-  0x42, 0x94, 0xcb, 0x2c, 0xd7, 0x21, 0x30, 0x72, 0x54, 0x37, 0x98, 0x02,
-  0x43, 0xfa, 0xa9, 0x7f, 0xc8, 0x9d, 0xf7, 0xbf, 0xe3, 0xf6, 0xfe, 0xbc,
-  0xee, 0x0c, 0x05, 0xed, 0xaf, 0x68, 0xe0, 0x71, 0xdf, 0x77, 0x08, 0xf1,
-  0x5e, 0x71, 0x78, 0x27, 0xd3, 0x3e, 0x3b, 0x00, 0x74, 0x94, 0x9c, 0xfe,
-  0x3c, 0x99, 0x6c, 0xbb, 0x4d, 0x17, 0x5f, 0x65, 0x0c, 0x14, 0x41, 0x93,
-  0x6d, 0x17, 0x1c, 0x25, 0x39, 0xe9, 0x17, 0x97, 0x7d, 0x80, 0xbc, 0x53,
-  0xf3, 0xe5, 0x0d, 0x3c, 0x43, 0xc1, 0xa9, 0xe3, 0x40, 0x56, 0x90, 0x12,
-  0x8e, 0x5f, 0xe4, 0xae, 0xd6, 0x94, 0xc6, 0xd2, 0x29, 0xda, 0x3a, 0x18,
-  0xdd, 0xcc, 0x7d, 0x28, 0x67, 0xf6, 0xba, 0xab, 0xf9, 0x02, 0xe0, 0x02,
-  0x2d, 0xf9, 0xd2, 0xa9, 0x94, 0xcd, 0x41, 0x91, 0x3d, 0xb9, 0xce, 0x79,
-  0xd2, 0xcc, 0x8a, 0x67, 0x62, 0xf3, 0x62, 0xbb, 0xc5, 0x72, 0xc1, 0x82,
-  0x29, 0x8a, 0x30, 0x3d, 0x5c, 0x42, 0xf5, 0xc0, 0x70, 0xab, 0xfb, 0xd4,
-  0x91, 0xd6, 0x5d, 0x68, 0x22, 0x77, 0xad, 0x42, 0x97, 0x1e, 0x22, 0xac,
-  0x45, 0xc5, 0xcf, 0x2f, 0x06, 0x4f, 0xbe, 0x40, 0x45, 0x57, 0x07, 0xd8,
-  0xd9, 0xef, 0xd3, 0xd2, 0x7d, 0xbc, 0xef, 0x7b, 0xa6, 0xc9, 0x5b, 0x19,
-  0xd0, 0x57, 0x9b, 0xaa, 0xb8, 0x14, 0x33, 0xd6, 0x63, 0xa2, 0x30, 0x43,
-  0xb0, 0xd9, 0x52, 0x13, 0x2b, 0x63, 0xaa, 0xda, 0x9f, 0xff, 0x41, 0x23,
-  0x11, 0x98, 0x96, 0xde, 0xe0, 0x42, 0xea, 0xbf, 0x23, 0x46, 0xb7, 0x9f,
-  0xfc, 0xb7, 0x22, 0x5b, 0xe7, 0x68, 0xa6, 0x56, 0x30, 0x53, 0x27, 0x53,
-  0xe6, 0xe0, 0xfc, 0xdd, 0xf1, 0xbb, 0x6f, 0xf7, 0x83, 0x22, 0x55, 0x0c,
-  0xe0, 0xed, 0x81, 0x9f, 0xbd, 0xf5, 0xd7, 0x4a, 0xbe, 0xcb, 0x23, 0xf9,
-  0x3c, 0x02, 0xbc, 0xec, 0xa0, 0x04, 0xfb, 0xc2, 0xb2, 0xc4, 0x06, 0x53,
-  0x66, 0x62, 0x65, 0x12, 0x91, 0xcd, 0xd5, 0x42, 0xe9, 0x49, 0x3d, 0x33,
-  0x4d, 0xae, 0xe7, 0xc2, 0x67, 0x31, 0x9a, 0x64, 0x28, 0xb2, 0x00, 0x8b,
-  0x2c, 0xc8, 0x65, 0x9a, 0x72, 0xa1, 0xb8, 0x22, 0xa4, 0x2f, 0x11, 0x2f,
-  0xd9, 0x17, 0xdf, 0x35, 0x8d, 0xb3, 0x65, 0xe4, 0xba, 0xd0, 0x18, 0xfd,
-  0x79, 0x13, 0x6d, 0x5a, 0xd0, 0x63, 0x2b, 0xde, 0xb5, 0x2a, 0xe7, 0xab,
-  0xd4, 0xaf, 0xc9, 0x0a, 0xf9, 0xd1, 0xe3, 0xa5, 0xd1, 0xfd, 0x2e, 0xc6,
-  0x79, 0x16, 0x60, 0xec, 0x53, 0x5f, 0x7b, 0xc5, 0xad, 0xc1, 0x23, 0x50,
-  0x88, 0x1c, 0x08, 0xe4, 0x80, 0xcb, 0x9a, 0xb1, 0x10, 0x1c, 0x40, 0xe7,
-  0x0f, 0xf2, 0xb6, 0x28, 0xb0, 0x31, 0x07, 0x22, 0x5e, 0xb1, 0x6b, 0x34,
-  0x50, 0x0c, 0x31, 0xc5, 0xc5, 0x72, 0x34, 0x9b, 0x3c, 0x4b, 0x5e, 0xd2,
-  0x3f, 0xdd, 0x74, 0xb4, 0x43, 0xf3, 0x37, 0xc3, 0x24, 0x0e, 0x36, 0xa6,
-  0x38, 0x32, 0x22, 0xee, 0xe3, 0xd7, 0x27, 0x7b, 0xd4, 0xf0, 0xc7, 0xd4,
-  0x40, 0x07, 0x92, 0x09, 0xad, 0x5e, 0x5d, 0x45, 0xcb, 0x8f, 0x9b, 0x5e,
-  0x14, 0x54, 0xfe, 0xc3, 0x82, 0xef, 0xee, 0x7d, 0x99, 0x8c, 0xf2, 0x3a,
-  0x79, 0xfb, 0xfa, 0x19, 0x69, 0x7e, 0xd9, 0xf8, 0xa6, 0x5a, 0xce, 0x8c,
-  0x49, 0x68, 0x75, 0x5b, 0x8c, 0x73, 0xa3, 0x7d, 0x57, 0xfb, 0xf4, 0xaa,
-  0x5e, 0xc3, 0xba, 0x7c, 0x69, 0x56, 0xf0, 0xa0, 0xec, 0xb3, 0x63, 0x66,
-  0x68, 0x49, 0xad, 0xf0, 0x11, 0xfb, 0x0e, 0xad, 0x01, 0x75, 0x5e, 0x49,
-  0x7e, 0x55, 0xcb, 0x9e, 0xfc, 0x45, 0xd3, 0x56, 0x26, 0xf9, 0x83, 0x56,
-  0x3d, 0xa2, 0x4f, 0xf2, 0xf7, 0x55, 0x27, 0x46, 0x1c, 0xfe, 0x53, 0x88,
-  0x40, 0xbd, 0xe4, 0x98, 0x9f, 0x16, 0x0b, 0x98, 0xbe, 0x71, 0xc2, 0x6f,
-  0x04, 0x90, 0x75, 0x22, 0x19, 0x82, 0x45, 0xe6, 0xe3, 0x25, 0xd7, 0x71,
-  0xea, 0xca, 0x90, 0x56, 0x6c, 0xd7, 0xa0, 0x21, 0xcb, 0xe5, 0x9c, 0x77,
-  0xe1, 0x60, 0x81, 0xa0, 0xd0, 0x64, 0x77, 0xf0, 0xb1, 0xa7, 0x61, 0x90,
-  0x61, 0xa5, 0x6e, 0x08, 0x6b, 0x45, 0xe7, 0xbe, 0x66, 0x7f, 0x48, 0x6b,
-  0x34, 0x68, 0x5b, 0xc2, 0x71, 0xa7, 0xf0, 0x0b, 0x96, 0x72, 0x2c, 0xf6,
-  0xe8, 0x7e, 0xbe, 0x4a, 0x47, 0xf7, 0xb1, 0xfc, 0x4b, 0xcc, 0x91, 0xcd,
-  0x4a, 0x9b, 0x15, 0xd7, 0xb7, 0xfe, 0x62, 0xf0, 0x14, 0xd6, 0x97, 0x1e,
-  0x6a, 0x51, 0x2e, 0x78, 0xc2, 0x70, 0xa2, 0x3a, 0x13, 0x33, 0x4c, 0xa0,
-  0xf9, 0x15, 0xee, 0x25, 0xf5, 0xcd, 0x75, 0xbc, 0x99, 0x3e, 0x80, 0xd0,
-  0x6c, 0xcc, 0x1e, 0x89, 0x2e, 0xa0, 0xdd, 0xbc, 0xc7, 0x98, 0xc2, 0x2c,
-  0x84, 0xc6, 0x25, 0xd6, 0x63, 0x95, 0x50, 0x0d, 0x31, 0xb1, 0xef, 0xc1,
-  0x37, 0xa4, 0x88, 0x17, 0x47, 0xb1, 0x1b, 0xde, 0x41, 0xf0, 0x44, 0x47,
-  0x10, 0xe1, 0x76, 0x38, 0x18, 0x95, 0xef, 0x15, 0xe5, 0x52, 0xb2, 0x07,
-  0x7d, 0x08, 0x92, 0x3d, 0x68, 0x22, 0xce, 0xd5, 0xef, 0xe3, 0xf7, 0xb9,
-  0xd1, 0x6e, 0x5a, 0x33, 0xa7, 0xdb, 0x5b, 0x08, 0xfe, 0x60, 0x10, 0xcc,
-  0xea, 0xd8, 0xe4, 0xf1, 0xd8, 0x94, 0x50, 0x00, 0x79, 0xfb, 0xcd, 0xf1,
-  0xc9, 0xd1, 0x56, 0xf2, 0x26, 0xb3, 0x04, 0xc0, 0x70, 0x66, 0xb8, 0x01,
-  0xff, 0x45, 0x3e, 0x31, 0x02, 0x51, 0x3b, 0x42, 0x0c, 0xed, 0xc1, 0x21,
-  0x92, 0xb3, 0x1e, 0x24, 0x54, 0xc3, 0x0c, 0x5e, 0x10, 0x09, 0x0a, 0x8e,
-  0x03, 0xb6, 0x2a, 0xd8, 0xe6, 0x67, 0x8f, 0xae, 0x10, 0x47, 0x20, 0xfa,
-  0x8a, 0xf4, 0x4e, 0xfb, 0x95, 0x00, 0x0a, 0x8b, 0x51, 0xc1, 0xc8, 0x35,
-  0xf4, 0xd5, 0xe2, 0x16, 0xf2, 0x8a, 0x18, 0xd7, 0x7d, 0xec, 0x24, 0xb2,
-  0x53, 0x99, 0x89, 0x01, 0x43, 0xe4, 0x80, 0xa6, 0x59, 0x31, 0xf1, 0xf9,
-  0x4c, 0x52, 0xec, 0x7c, 0x3e, 0x6d, 0x14, 0x5a, 0x09, 0xc0, 0xaf, 0x63,
-  0x88, 0x49, 0x67, 0x92, 0x4d, 0xc3, 0x89, 0x14, 0x61, 0x9c, 0x8c, 0xd0,
-  0x97, 0xd7, 0xc3, 0x5d, 0x33, 0x03, 0x17, 0x9f, 0x8a, 0xfc, 0x99, 0x32,
-  0xe6, 0xa7, 0x75, 0xe0, 0xd3, 0xbd, 0xd0, 0xe9, 0x56, 0xc8, 0xad, 0xa2,
-  0x11, 0xbc, 0x07, 0x73, 0x0b, 0x87, 0xd3, 0x8a, 0x8f, 0x82, 0xa7, 0xd0,
-  0x49, 0xdb, 0x8c, 0xc4, 0x33, 0xea, 0x75, 0x1e, 0xcc, 0x8c, 0x94, 0xb9,
-  0x9d, 0xfd, 0x5d, 0x17, 0x98, 0x7c, 0x77, 0x77, 0x37, 0x78, 0xe8, 0x3e,
-  0xff, 0xe7, 0x05, 0x8d, 0xfd, 0x15, 0xa4, 0xf9, 0xd7, 0xe5, 0xfc, 0x86,
-  0x68, 0xab, 0x02, 0x05, 0x6b, 0xfd, 0xc8, 0x2a, 0x7e, 0xfa, 0x3c, 0xea,
-  0x4c, 0xbb, 0x86, 0xe9, 0x38, 0xac, 0x87, 0x99, 0x6a, 0xbc, 0x89, 0xd0,
-  0xc5, 0x6a, 0xdc, 0x03, 0x6f, 0x3a, 0x41, 0x3e, 0x6c, 0x5e, 0x8d, 0x11,
-  0x8b, 0xc4, 0x56, 0x94, 0x75, 0x1d, 0x4e, 0x62, 0x0d, 0xaf, 0x0f, 0x92,
-  0xd5, 0x05, 0xa1, 0x47, 0x69, 0x65, 0x98, 0x16, 0x92, 0x61, 0xef, 0x14,
-  0x42, 0xf5, 0x03, 0x0a, 0xea, 0x4d, 0x0a, 0x19, 0x34, 0xb1, 0x96, 0x21,
-  0x20, 0x43, 0xd0, 0xcb, 0xba, 0x00, 0x3c, 0x82, 0x34, 0x62, 0x15, 0xae,
-  0x2b, 0x83, 0xe5, 0xb7, 0x11, 0x26, 0xed, 0xc1, 0x39, 0xe1, 0x86, 0xc4,
-  0xd6, 0x8d, 0xce, 0xb9, 0x1c, 0x4f, 0x0b, 0xec, 0x0e, 0x18, 0x5f, 0xb0,
-  0xf2, 0xff, 0x4d, 0x24, 0x51, 0xdc, 0x84, 0x7a, 0xd2, 0xfb, 0x91, 0xe0,
-  0xc4, 0xb0, 0x7c, 0x9e, 0x81, 0x45, 0x70, 0x0a, 0x1d, 0x8b, 0xb8, 0xa7,
-  0x41, 0x1b, 0x12, 0x41, 0xef, 0xf0, 0x24, 0xf4, 0xba, 0x8c, 0x96, 0xcc,
-  0xe8, 0x07, 0xd6, 0x29, 0x77, 0x57, 0xbc, 0xa6, 0x63, 0x5b, 0x54, 0xb9,
-  0xc8, 0x27, 0x3e, 0x72, 0x34, 0xf0, 0xc6, 0x74, 0x83, 0xc3, 0x0c, 0x08,
-  0xcb, 0xb1, 0x72, 0x17, 0x2e, 0x67, 0x56, 0x99, 0x47, 0x4b, 0x57, 0xb8,
-  0x13, 0xea, 0xf2, 0x21, 0x44, 0x87, 0x67, 0x37, 0xaa, 0xc7, 0x29, 0x65,
-  0x75, 0x27, 0x16, 0xbc, 0xa9, 0x5e, 0x64, 0x0e, 0x71, 0x73, 0xb1, 0xa8,
-  0x86, 0x16, 0x77, 0xa7, 0x70, 0x22, 0xde, 0xfd, 0x69, 0xc0, 0x9f, 0x02,
-  0x5a, 0xd6, 0xb1, 0x2b, 0x21, 0xac, 0xe2, 0xae, 0xcc, 0x6b, 0x4e, 0xb0,
-  0x92, 0xa4, 0x06, 0xc9, 0x7d, 0x12, 0x5d, 0x64, 0x4c, 0x0d, 0x0f, 0x5a,
-  0x95, 0x09, 0x9c, 0x33, 0x63, 0xd1, 0x85, 0x3c, 0x61, 0xdb, 0x47, 0x30,
-  0x2b, 0xd6, 0x2c, 0xc3, 0x93, 0xdb, 0xf0, 0x56, 0xc7, 0xf0, 0x5c, 0xd8,
-  0x46, 0x4d, 0x4f, 0x04, 0xd5, 0x1f, 0x48, 0x28, 0x83, 0x4d, 0xf0, 0x8f,
-  0x74, 0x62, 0x49, 0x0c, 0x9f, 0xa3, 0x40, 0xf5, 0xe6, 0x7d, 0x56, 0x6f,
-  0xf9, 0x5a, 0xed, 0x16, 0xba, 0x1a, 0xab, 0xbf, 0x2c, 0x5c, 0xad, 0x85,
-  0xae, 0x03, 0x5b, 0x8d, 0xbe, 0x24, 0x95, 0x0c, 0xb0, 0xe4, 0x25, 0xc3,
-  0x88, 0xc1, 0x07, 0xaa, 0x75, 0xb1, 0x56, 0x35, 0x17, 0xa9, 0x18, 0x6b,
-  0xfa, 0xc6, 0xd1, 0xc7, 0xac, 0x1c, 0xc3, 0xcc, 0xf8, 0xd7, 0xe5, 0x24,
-  0x1f, 0x73, 0x94, 0x8a, 0xab, 0x90, 0x13, 0xda, 0xa0, 0x1b, 0x99, 0x5c,
-  0x9d, 0x64, 0xf5, 0x1f, 0x05, 0xd3, 0x86, 0x38, 0xc0, 0x01, 0x09, 0x38,
-  0xc5, 0xd5, 0x32, 0x20, 0x1f, 0x65, 0xbd, 0xac, 0x83, 0x61, 0xe8, 0x0d,
-  0xf8, 0xc3, 0xe4, 0xf5, 0xc9, 0x49, 0xb7, 0x4c, 0x88, 0x28, 0x08, 0x02,
-  0x9c, 0x24, 0x66, 0x6e, 0x34, 0x21, 0x4e, 0x00, 0x01, 0xbd, 0x16, 0x94,
-  0xce, 0x36, 0x5c, 0x0e, 0x02, 0xb3, 0x69, 0x28, 0xfd, 0x4e, 0xc0, 0xe5,
-  0x1d, 0xdf, 0x0d, 0x08, 0x73, 0xc2, 0xb4, 0x4a, 0xf6, 0x8e, 0xd4, 0xf7,
-  0xf4, 0xc1, 0x65, 0x7d, 0x97, 0x86, 0x85, 0x6c, 0xfb, 0x37, 0x22, 0xdf,
-  0x54, 0xb1, 0x80, 0x57, 0xcb, 0x90, 0x0d, 0x15, 0x85, 0x20, 0x4d, 0x40,
-  0xed, 0x47, 0xae, 0xea, 0xbd, 0x5e, 0x7b, 0xeb, 0xd6, 0xda, 0x7a, 0x5b,
-  0x89, 0x6d, 0xe0, 0x1f, 0x48, 0xc8, 0x76, 0x50, 0x7d, 0xe4, 0x80, 0xe8,
-  0xb9, 0xf3, 0x08, 0x1c, 0x82, 0x42, 0x68, 0x9d, 0xdd, 0xb6, 0xac, 0xac,
-  0x19, 0xad, 0x8c, 0x39, 0x0f, 0x9b, 0x59, 0xde, 0x4d, 0x3c, 0x19, 0x81,
-  0x08, 0x62, 0xe6, 0x91, 0x22, 0xf5, 0xad, 0x9b, 0x20, 0xee, 0x10, 0xcd,
-  0x79, 0xc6, 0x96, 0xbb, 0xc4, 0xb9, 0x22, 0xc1, 0x98, 0x82, 0x3a, 0xc2,
-  0xc9, 0xea, 0xc9, 0x22, 0x34, 0xd5, 0x85, 0xe1, 0x34, 0x16, 0xb9, 0x1b,
-  0x86, 0x13, 0x18, 0x0b, 0xbc, 0x33, 0x84, 0x6d, 0xbe, 0x39, 0x97, 0x47,
-  0x63, 0xb8, 0xf1, 0x25, 0x67, 0xab, 0xa9, 0x7b, 0x33, 0x71, 0x01, 0xf0,
-  0x9c, 0xd3, 0xc9, 0x61, 0xef, 0x6d, 0x28, 0x01, 0xbb, 0xba, 0x19, 0xdd,
-  0xe8, 0x3a, 0xfd, 0xf8, 0x71, 0x50, 0x65, 0xdb, 0x24, 0x3d, 0x55, 0xdb,
-  0x55, 0x35, 0x65, 0x24, 0x25, 0xce, 0x41, 0xf1, 0xa4, 0xf0, 0xbd, 0x14,
-  0x6b, 0x9e, 0x93, 0xe0, 0x8c, 0x08, 0x6d, 0xfe, 0x19, 0x03, 0xff, 0x33,
-  0xd8, 0x3f, 0x11, 0xe5, 0x82, 0x07, 0xfd, 0xd5, 0xcb, 0x98, 0xdb, 0x1a,
-  0xa7, 0x2a, 0x37, 0xb0, 0x02, 0xf9, 0x8f, 0xbb, 0x29, 0x96, 0x78, 0x5b,
-  0x83, 0xfb, 0x38, 0x6f, 0x5a, 0xd3, 0xbd, 0x78, 0xab, 0x5c, 0x1f, 0x22,
-  0x42, 0xf2, 0x7a, 0xf8, 0x76, 0x25, 0x20, 0xad, 0xad, 0xbb, 0x2b, 0xb3,
-  0x34, 0x41, 0x33, 0x9b, 0x37, 0xed, 0xa2, 0x0e, 0x6e, 0x0e, 0x26, 0x44,
-  0xda, 0x0d, 0x7b, 0xde, 0xac, 0x7c, 0x6d, 0x76, 0x3e, 0xae, 0x51, 0x04,
-  0x30, 0x1c, 0x41, 0x67, 0xe3, 0x4e, 0xb5, 0x3a, 0xac, 0x39, 0x0d, 0xf3,
-  0xd2, 0x7b, 0x23, 0x2b, 0x67, 0xac, 0xf3, 0x57, 0x5c, 0x11, 0x00, 0x53,
-  0xad, 0x58, 0x10, 0x9e, 0x3f, 0x3a, 0xeb, 0x05, 0xd0, 0xf9, 0x23, 0x5e,
-  0x73, 0xd2, 0x8e, 0x48, 0x0b, 0x63, 0xe9, 0x56, 0x0d, 0x7d, 0xe6, 0x75,
-  0x97, 0x82, 0x85, 0x55, 0x34, 0xff, 0x30, 0x39, 0x01, 0x2a, 0x95, 0x53,
-  0xf7, 0x05, 0x5e, 0x72, 0xcc, 0x12, 0x6a, 0x17, 0x5c, 0xdf, 0x2e, 0x2d,
-  0xde, 0xda, 0x18, 0x93, 0x0d, 0x83, 0x1e, 0x0d, 0xb5, 0x5c, 0xf2, 0x3f,
-  0x48, 0x43, 0x61, 0x54, 0x15, 0x45, 0x15, 0xa9, 0x8a, 0x9e, 0x69, 0x01,
-  0x53, 0xf4, 0xdb, 0x61, 0x7d, 0x32, 0xe4, 0xc4, 0x03, 0xd8, 0x56, 0xde,
-  0x16, 0x61, 0xfb, 0xe5, 0x7c, 0x38, 0x95, 0xbb, 0xea, 0x9c, 0x9c, 0xd9,
-  0x9e, 0x6c, 0xb3, 0x92, 0x35, 0x07, 0x46, 0x93, 0x76, 0x79, 0x57, 0xe8,
-  0xb8, 0x04, 0x14, 0x09, 0xd6, 0x20, 0x67, 0xf0, 0x40, 0x81, 0x9e, 0x47,
-  0x46, 0xe7, 0x6b, 0xd1, 0x5b, 0x52, 0x65, 0x30, 0x06, 0x9e, 0x69, 0x5d,
-  0xf9, 0x2d, 0x5f, 0x55, 0x38, 0xa8, 0xe1, 0xa1, 0x46, 0xf0, 0x9b, 0x3a,
-  0x33, 0xc3, 0x3d, 0x6d, 0x3e, 0xa7, 0xa4, 0xd3, 0xc1, 0x3c, 0x55, 0xf9,
-  0x4d, 0xf3, 0x6a, 0x24, 0x27, 0x07, 0xc0, 0xfa, 0xf2, 0xb7, 0xed, 0x44,
-  0xe2, 0x92, 0x75, 0x82, 0xc0, 0xf0, 0x6e, 0x1e, 0x82, 0x22, 0x08, 0x27,
-  0xfe, 0xf2, 0x16, 0x73, 0x99, 0x03, 0x0b, 0xdb, 0x4f, 0x92, 0x5f, 0x7e,
-  0xe9, 0x25, 0x40, 0x2f, 0xfe, 0x85, 0x94, 0xcd, 0x5f, 0x88, 0xe4, 0x7e,
-  0x91, 0x02, 0xc2, 0xbf, 0xdc, 0x12, 0xdb, 0x5e, 0x95, 0xb7, 0x13, 0xd4,
-  0x8a, 0x85, 0xb7, 0x45, 0xee, 0x38, 0xad, 0xfb, 0x0d, 0x1b, 0x84, 0x00,
-  0x23, 0x85, 0x18, 0xca, 0xb1, 0x22, 0x53, 0xb4, 0x33, 0xcb, 0xd9, 0x5c,
-  0xee, 0x4e, 0x65, 0x35, 0xcc, 0x05, 0x98, 0x55, 0x6c, 0xfc, 0x61, 0xc3,
-  0xef, 0x4d, 0x50, 0x4a, 0x5c, 0x15, 0x64, 0x3c, 0x18, 0x83, 0x9e, 0x84,
-  0x41, 0x88, 0xa3, 0xfe, 0x05, 0x44, 0x99, 0x0f, 0x37, 0x6b, 0x94, 0xa7,
-  0x30, 0xed, 0x82, 0x21, 0x68, 0x48, 0xbd, 0x6c, 0x30, 0xac, 0xd2, 0x8b,
-  0xeb, 0x7b, 0x16, 0xe8, 0x3b, 0xca, 0xd4, 0x3c, 0x6b, 0x9e, 0x96, 0x78,
-  0x6e, 0xaa, 0xb1, 0x4c, 0x1f, 0xc9, 0xec, 0xa0, 0x52, 0x1b, 0x6c, 0x97,
-  0x86, 0xb3, 0xd1, 0xdf, 0x68, 0xd6, 0x2e, 0x28, 0xbb, 0x6a, 0x7a, 0x33,
-  0x91, 0x92, 0x33, 0x3f, 0x07, 0xab, 0xb3, 0xbb, 0xc4, 0x57, 0x2b, 0x20,
-  0xe0, 0x1e, 0x86, 0x3d, 0x65, 0x17, 0xa5, 0x19, 0x29, 0xb4, 0x7f, 0xd3,
-  0x9b, 0xbb, 0x3e, 0x21, 0xb6, 0x34, 0x4b, 0xa1, 0x45, 0x9b, 0x4b, 0x5e,
-  0x27, 0xc1, 0x6d, 0xdb, 0x87, 0x77, 0xd8, 0x89, 0x4f, 0xa0, 0x0e, 0x08,
-  0xb4, 0x48, 0x08, 0x04, 0x34, 0xc4, 0x7d, 0x84, 0x4b, 0xdb, 0x9b, 0x18,
-  0x47, 0x21, 0xfe, 0x0d, 0x84, 0x97, 0x30, 0x8b, 0x4d, 0x86, 0x45, 0x4f,
-  0x4a, 0x8c, 0x3a, 0x3d, 0x36, 0xf1, 0x85, 0xde, 0xeb, 0x22, 0x12, 0x3f,
-  0xd0, 0x51, 0x6a, 0x31, 0x9e, 0x57, 0xc9, 0xfa, 0xea, 0x7b, 0x70, 0x3d,
-  0x8a, 0xdf, 0x64, 0xca, 0x24, 0x32, 0xf3, 0x6f, 0x14, 0x9a, 0x5f, 0xd5,
-  0xad, 0x4d, 0xbb, 0xd0, 0xff, 0x66, 0x97, 0xf8, 0x96, 0x9a, 0x12, 0xa3,
-  0xa0, 0xae, 0x0e, 0x18, 0x2c, 0xb8, 0x22, 0x1d, 0x14, 0x63, 0xce, 0xfe,
-  0x44, 0x7a, 0x6f, 0x39, 0x9f, 0x98, 0x71, 0xc8, 0x41, 0xc1, 0xaf, 0xe6,
-  0xbc, 0xb0, 0x40, 0xa3, 0x47, 0x35, 0xdc, 0x5b, 0x5a, 0x9d, 0xb3, 0xf7,
-  0xb2, 0x85, 0x56, 0xd5, 0x0e, 0x88, 0xd3, 0x40, 0x97, 0xee, 0xac, 0xcc,
-  0xee, 0x96, 0x4b, 0xd3, 0x2f, 0x59, 0x59, 0x64, 0x73, 0x99, 0xfa, 0xa5,
-  0xd6, 0xaf, 0x0b, 0x01, 0x4c, 0x5c, 0xdf, 0x4f, 0x8e, 0x6b, 0x75, 0x37,
-  0x07, 0xb3, 0xec, 0xde, 0x91, 0x0c, 0x47, 0xf9, 0xdd, 0xe9, 0xdb, 0x23,
-  0x17, 0xd4, 0x2f, 0x26, 0x23, 0x7c, 0x12, 0xc5, 0x3d, 0x1e, 0x70, 0x44,
-  0x96, 0xe1, 0x3a, 0xf4, 0xba, 0x95, 0x65, 0x65, 0x89, 0xae, 0xb2, 0x7a,
-  0x71, 0xb7, 0xcc, 0x27, 0x9b, 0x0c, 0xbe, 0xf1, 0x7e, 0x9e, 0x7f, 0xec,
-  0xb3, 0x49, 0x4c, 0x50, 0xc1, 0x2b, 0x43, 0x9f, 0x30, 0xe0, 0x0a, 0xb1,
-  0xbb, 0xce, 0x22, 0x90, 0x77, 0x7a, 0xad, 0x85, 0x8a, 0x18, 0xe7, 0xa1,
-  0xe5, 0x73, 0x71, 0xae, 0x4a, 0x83, 0x5b, 0x60, 0x00, 0x26, 0xda, 0xf3,
-  0xb6, 0xc7, 0x12, 0x14, 0x9a, 0x2b, 0x91, 0x1c, 0x9c, 0x9d, 0xbd, 0x3e,
-  0xb8, 0x38, 0x70, 0x73, 0x13, 0x2c, 0x32, 0x70, 0x15, 0x36, 0x74, 0x40,
-  0x72, 0x53, 0xe8, 0xab, 0x8d, 0x3f, 0x22, 0x7b, 0xad, 0x7d, 0xd9, 0x9f,
-  0x9d, 0x9f, 0xc2, 0x60, 0xf5, 0xc7, 0x5f, 0x0e, 0x02, 0xc0, 0x97, 0xd7,
-  0x69, 0x9d, 0x76, 0x53, 0x06, 0xf6, 0xb6, 0x30, 0xbe, 0x3b, 0x37, 0x3e,
-  0x0d, 0x19, 0x92, 0xe0, 0xac, 0xe4, 0x03, 0x36, 0xb4, 0x1c, 0x3b, 0xc9,
-  0xc9, 0x56, 0x83, 0x17, 0xa0, 0x17, 0x09, 0x77, 0x0e, 0x26, 0x52, 0x78,
-  0x2e, 0x66, 0x68, 0x99, 0xb6, 0x58, 0x53, 0x92, 0xf8, 0x49, 0x6c, 0xad,
-  0x99, 0x7d, 0xc0, 0x6e, 0x0c, 0xfa, 0x9a, 0x60, 0xa5, 0xda, 0xc0, 0xde,
-  0xed, 0xed, 0xf1, 0x35, 0x2d, 0x84, 0x03, 0x48, 0x30, 0x7b, 0x21, 0xa5,
-  0xa0, 0x07, 0x3a, 0x5a, 0x5f, 0x0c, 0xba, 0x73, 0x76, 0xc4, 0xb9, 0x49,
-  0x74, 0x6e, 0xf4, 0x38, 0xe8, 0x7a, 0xa1, 0xfa, 0xfd, 0xbe, 0xf9, 0xa8,
-  0x64, 0xe2, 0xf4, 0x41, 0xe7, 0xa1, 0xda, 0x0a, 0xde, 0x1a, 0xa3, 0x8f,
-  0xf3, 0x89, 0xc0, 0xbc, 0xd5, 0x16, 0xe6, 0x15, 0x09, 0x86, 0x1e, 0xc2,
-  0xb0, 0xb1, 0xe8, 0x2c, 0x3a, 0xaf, 0x77, 0x0d, 0xe7, 0xe6, 0xda, 0xa3,
-  0x47, 0xab, 0x25, 0x6c, 0x7f, 0xf8, 0x6b, 0x7b, 0x77, 0xb0, 0xb3, 0xde,
-  0x1d, 0x3c, 0x87, 0x42, 0xb3, 0x81, 0xd5, 0x8a, 0x9c, 0x48, 0xdd, 0x9a,
-  0xe2, 0xd1, 0xf1, 0x09, 0xfb, 0x22, 0x81, 0x74, 0x41, 0xed, 0x47, 0x87,
-  0xd2, 0x3f, 0xed, 0x58, 0xe1, 0xc5, 0xc3, 0xa8, 0x0c, 0x91, 0xf8, 0xe1,
-  0xbc, 0x60, 0x28, 0x84, 0x14, 0xda, 0x50, 0xc3, 0xb6, 0xb7, 0x1e, 0x5f,
-  0xe6, 0xf9, 0x44, 0x42, 0x25, 0x5a, 0xab, 0xfd, 0xa8, 0x57, 0x29, 0x9e,
-  0x5f, 0xeb, 0x28, 0xc1, 0x7d, 0xbc, 0x92, 0xe7, 0x35, 0x5c, 0x49, 0x37,
-  0x19, 0x09, 0x83, 0x53, 0x4e, 0x26, 0x85, 0x69, 0x76, 0x15, 0x3c, 0x77,
-  0x23, 0x3e, 0xcd, 0x82, 0x82, 0xf9, 0x8d, 0x34, 0xd4, 0xe6, 0x12, 0x05,
-  0x16, 0xe0, 0x8b, 0xad, 0xcc, 0x66, 0x1c, 0xec, 0x9e, 0x4f, 0x3a, 0xa0,
-  0x1b, 0xea, 0x29, 0x70, 0x11, 0x27, 0x6e, 0x14, 0x30, 0x52, 0x8c, 0x54,
-  0xdc, 0x75, 0x5d, 0x98, 0x90, 0x08, 0xcc, 0xbe, 0xdb, 0x7c, 0xb2, 0xec,
-  0x88, 0x0d, 0xed, 0xd7, 0x07, 0x60, 0xb4, 0x0d, 0x4c, 0x25, 0xb1, 0xbf,
-  0xe0, 0x89, 0xc2, 0x19, 0x91, 0xe1, 0x5f, 0x94, 0xa3, 0xd5, 0xb1, 0x8b,
-  0x5f, 0x2a, 0xba, 0x3a, 0xdf, 0xe5, 0x17, 0x87, 0x67, 0x1f, 0xbe, 0x3f,
-  0x3a, 0x3a, 0x3b, 0x7e, 0x7d, 0x72, 0xa4, 0x61, 0xf4, 0xee, 0xa3, 0x77,
-  0x17, 0x3f, 0x9c, 0x78, 0x84, 0x75, 0x75, 0x37, 0xb7, 0xd5, 0x7e, 0x84,
-  0x31, 0xa2, 0xb9, 0x93, 0x7c, 0xbe, 0xfc, 0xd8, 0x63, 0xf0, 0x2f, 0x22,
-  0xe9, 0x83, 0xe3, 0x9f, 0x7a, 0xc9, 0x77, 0x67, 0xfd, 0xf7, 0x3f, 0x75,
-  0x60, 0x7d, 0x02, 0xdb, 0x11, 0xb1, 0xa2, 0xb6, 0x7c, 0xe9, 0x12, 0x1f,
-  0xb8, 0x0e, 0xa7, 0x9f, 0xbb, 0xe9, 0xc1, 0x4d, 0xff, 0xd7, 0x97, 0x9f,
-  0x23, 0x25, 0xb9, 0xd3, 0xdc, 0x72, 0x1e, 0xd4, 0xde, 0x09, 0x84, 0x79,
-  0xbd, 0x81, 0x99, 0x3c, 0x9f, 0xef, 0x18, 0x9c, 0x7b, 0x93, 0x00, 0xef,
-  0x93, 0x97, 0xf4, 0x4f, 0x0c, 0x53, 0x73, 0x7b, 0x38, 0xfc, 0x6e, 0x2b,
-  0x39, 0x0b, 0xea, 0x58, 0x38, 0x93, 0xd4, 0xc0, 0xc2, 0x9c, 0xd9, 0x24,
-  0x54, 0x84, 0xc6, 0xad, 0x12, 0xd5, 0x0f, 0xba, 0x81, 0x1f, 0x08, 0x46,
-  0x74, 0xa5, 0x30, 0x72, 0xa7, 0x05, 0xc9, 0xd1, 0x93, 0xa4, 0x49, 0xea,
-  0x8e, 0xef, 0x81, 0x26, 0xa2, 0x38, 0xb3, 0xed, 0xb6, 0x80, 0xa4, 0xf7,
-  0x7c, 0x43, 0x11, 0xe0, 0xf3, 0x39, 0xc9, 0x27, 0x5a, 0x47, 0x9d, 0x15,
-  0x20, 0x88, 0x0b, 0xc8, 0x70, 0xfb, 0x5f, 0xdb, 0x83, 0xaa, 0xba, 0xde,
-  0xce, 0x27, 0x1f, 0xca, 0x2a, 0xdd, 0x68, 0x5f, 0xd1, 0xc1, 0xd7, 0x13,
-  0x7c, 0x9d, 0x6c, 0x0c, 0xdc, 0xa3, 0xfa, 0x3b, 0x3e, 0xff, 0x9c, 0xc8,
-  0x81, 0xb4, 0x34, 0x8f, 0x82, 0xbc, 0x77, 0xb7, 0x02, 0xcf, 0x0e, 0x5a,
-  0x16, 0x0c, 0x6e, 0x85, 0xf7, 0x41, 0x76, 0x97, 0xb6, 0xa6, 0xb3, 0x1b,
-  0x0c, 0x70, 0xd9, 0x28, 0x50, 0x42, 0x87, 0xf6, 0xf5, 0xd1, 0x79, 0x4f,
-  0x80, 0xdf, 0x43, 0xd0, 0xf7, 0x00, 0x38, 0x51, 0x74, 0x9b, 0x6e, 0xb1,
-  0xd0, 0x60, 0xaf, 0xfe, 0xeb, 0xf0, 0xde, 0x6f, 0xca, 0x51, 0xf2, 0x72,
-  0x4a, 0x2f, 0x4e, 0xe3, 0x69, 0xf7, 0x5a, 0x3c, 0x3e, 0xf9, 0x3e, 0x2b,
-  0x47, 0x59, 0x59, 0x54, 0x6d, 0xb0, 0x2a, 0x95, 0x5c, 0xc5, 0x90, 0xc3,
-  0xed, 0xac, 0xd4, 0x4f, 0x6b, 0x36, 0x8e, 0x31, 0x82, 0x6a, 0x3b, 0x47,
-  0x79, 0x83, 0xf3, 0x01, 0x40, 0x25, 0x00, 0xe4, 0xc2, 0x4f, 0xe6, 0xfb,
-  0x0c, 0x67, 0x9a, 0x4e, 0x37, 0x7a, 0x5d, 0x1d, 0x7c, 0x43, 0x97, 0x7d,
-  0x03, 0x35, 0xdc, 0xd5, 0xa5, 0x8f, 0x43, 0x24, 0x10, 0x2d, 0xa8, 0x18,
-  0xc2, 0x63, 0xb1, 0x2a, 0x56, 0x38, 0x0b, 0x3e, 0x1f, 0xba, 0xea, 0x20,
-  0xe1, 0xb9, 0xe6, 0xda, 0x01, 0x9d, 0x71, 0xa3, 0x5c, 0xb4, 0x42, 0x60,
-  0xea, 0x8b, 0x4f, 0x35, 0x2a, 0x03, 0xde, 0xe8, 0xd2, 0x3d, 0x75, 0x44,
-  0x10, 0xaf, 0xa4, 0x90, 0x2b, 0x40, 0x0e, 0x27, 0x36, 0x43, 0x28, 0x41,
-  0x74, 0x09, 0x57, 0x46, 0xf9, 0x01, 0xca, 0xa0, 0xb9, 0x6e, 0xa5, 0xee,
-  0x85, 0x86, 0x1d, 0x96, 0xb1, 0x63, 0xed, 0x4a, 0x0c, 0xe6, 0xf5, 0x67,
-  0x26, 0x9d, 0xa7, 0x0f, 0xd2, 0x4e, 0x23, 0x93, 0xb8, 0x28, 0x67, 0x8a,
-  0x6b, 0xa1, 0x55, 0x95, 0xe9, 0x75, 0x3a, 0x2c, 0x2e, 0x75, 0x30, 0x68,
-  0x79, 0xca, 0xc5, 0xfe, 0xf2, 0xaa, 0xee, 0xc3, 0xc7, 0xba, 0x1a, 0x55,
-  0x43, 0x73, 0xc4, 0xcc, 0xcb, 0x1b, 0xd4, 0xdc, 0x11, 0xd6, 0x28, 0x15,
-  0x8d, 0x39, 0x2e, 0x95, 0x21, 0xaa, 0xd0, 0x79, 0x3f, 0x56, 0x4d, 0x91,
-  0x4e, 0x72, 0x76, 0xd7, 0xc8, 0x13, 0x0f, 0xed, 0xfc, 0x1a, 0xf9, 0xc0,
-  0x8a, 0x99, 0xe1, 0x2d, 0x70, 0x11, 0xa0, 0xaa, 0xab, 0x72, 0xce, 0xd2,
-  0xf1, 0x35, 0x89, 0xa7, 0x7d, 0x0e, 0x6f, 0x6f, 0xe2, 0x58, 0xc1, 0x58,
-  0xd1, 0x1a, 0x68, 0x22, 0x51, 0x0b, 0x52, 0x2a, 0x8a, 0xc3, 0x25, 0x57,
-  0x03, 0x73, 0x63, 0x88, 0xce, 0x89, 0x23, 0x25, 0x09, 0x1c, 0x2c, 0x02,
-  0x2b, 0xc2, 0x45, 0xe9, 0x4a, 0x1b, 0x38, 0x1f, 0x78, 0xc4, 0xcb, 0xab,
-  0x75, 0x0b, 0x82, 0xdb, 0x4d, 0x21, 0xda, 0xd2, 0xe4, 0xdd, 0xc9, 0xf0,
-  0x22, 0x8c, 0x95, 0x90, 0xe0, 0xaa, 0x79, 0xed, 0x8a, 0xb7, 0x44, 0xbd,
-  0x74, 0x61, 0x4c, 0xe9, 0xc9, 0xf1, 0xf0, 0x22, 0x6a, 0x73, 0xa0, 0xdb,
-  0x63, 0xc8, 0x6a, 0x47, 0x98, 0x33, 0xe8, 0xca, 0xfa, 0x60, 0x0f, 0x24,
-  0xf0, 0x43, 0xf4, 0x8d, 0xbc, 0x0c, 0xf3, 0x41, 0xdb, 0xcd, 0xd1, 0x28,
-  0xff, 0x2c, 0xa6, 0x5a, 0x8d, 0xda, 0xb3, 0x68, 0xe0, 0x6a, 0x39, 0xea,
-  0x07, 0x48, 0x0d, 0xc2, 0x6a, 0x18, 0x08, 0x2d, 0x1f, 0xc3, 0x80, 0x70,
-  0xd3, 0xf5, 0x00, 0x6d, 0x9e, 0x9d, 0x9e, 0x3d, 0x51, 0x72, 0x52, 0x50,
-  0x8d, 0x86, 0x43, 0x7e, 0x9c, 0x40, 0xfc, 0x53, 0xe4, 0x41, 0x3c, 0xdb,
-  0x33, 0x4b, 0xbc, 0x50, 0x57, 0xac, 0xb2, 0xbb, 0xa0, 0x21, 0x60, 0x29,
-  0x5a, 0x8b, 0xa9, 0xbe, 0x90, 0x66, 0x18, 0x2e, 0x02, 0x54, 0x5c, 0x00,
-  0x4e, 0x04, 0x3d, 0xc9, 0xc2, 0x71, 0x8c, 0x0c, 0x35, 0x45, 0xa9, 0x41,
-  0x84, 0xc6, 0x10, 0x82, 0x61, 0x23, 0x16, 0xb1, 0x93, 0x9c, 0x07, 0xd8,
-  0xb3, 0x7c, 0x62, 0x4e, 0xc8, 0x06, 0xd0, 0x86, 0xa4, 0x8b, 0x71, 0x81,
-  0x52, 0xc4, 0x3d, 0x30, 0x04, 0xf9, 0xaa, 0x9d, 0x34, 0xa8, 0x14, 0x8d,
-  0x2d, 0xd3, 0xd0, 0xf8, 0x9f, 0xc4, 0xc9, 0x2b, 0x91, 0xd8, 0x0e, 0xcb,
-  0xa5, 0x91, 0x83, 0x10, 0xa9, 0xc0, 0x17, 0x54, 0x6c, 0x37, 0x78, 0xb6,
-  0xf7, 0x24, 0xa2, 0xba, 0x95, 0xd3, 0x95, 0x52, 0x57, 0xa0, 0xce, 0x1b,
-  0x7e, 0x40, 0xfa, 0x25, 0x16, 0x57, 0xc2, 0xdb, 0xb5, 0x81, 0xcc, 0xf0,
-  0x79, 0xfe, 0x37, 0x38, 0xe0, 0xe4, 0x12, 0xb9, 0xe4, 0x40, 0x65, 0x75,
-  0x15, 0x72, 0x58, 0x51, 0x5e, 0x6f, 0x54, 0x86, 0x8b, 0x8a, 0x45, 0x89,
-  0x1c, 0xe5, 0x9b, 0x2c, 0x8c, 0x2e, 0x6f, 0x4a, 0xa4, 0x7b, 0xbb, 0x0d,
-  0xec, 0x94, 0x46, 0x7d, 0xd2, 0x68, 0xf8, 0x0c, 0x57, 0xb0, 0xdc, 0x6a,
-  0x39, 0x65, 0x25, 0x44, 0x2a, 0xc0, 0xe8, 0xd5, 0xbe, 0x18, 0x61, 0x1d,
-  0x03, 0x83, 0xf4, 0xdc, 0x1e, 0x17, 0xa7, 0x89, 0x31, 0x7a, 0x9d, 0xe1,
-  0xfa, 0xd5, 0x89, 0x2b, 0x8d, 0xba, 0xa9, 0x90, 0xe0, 0x3e, 0xf8, 0xb7,
-  0x5d, 0xa0, 0x34, 0x02, 0x2b, 0x94, 0x26, 0x4f, 0x7e, 0xfa, 0xa9, 0x09,
-  0x65, 0xb9, 0xb5, 0x2a, 0x79, 0x44, 0x4d, 0x44, 0x74, 0x95, 0x47, 0x79,
-  0x82, 0x11, 0x80, 0x12, 0x17, 0x02, 0x19, 0xd8, 0x38, 0xc0, 0x36, 0x7a,
-  0xdd, 0xe9, 0xab, 0x8c, 0xb7, 0x41, 0xc8, 0x26, 0x0c, 0xa5, 0xea, 0x5e,
-  0xf3, 0x3e, 0x26, 0xa9, 0xe7, 0xe2, 0x1f, 0x25, 0x74, 0x83, 0x03, 0xcc,
-  0x6c, 0xb1, 0xb0, 0x56, 0x95, 0xbb, 0xa8, 0x48, 0xbc, 0xb8, 0x9b, 0x0f,
-  0x62, 0x15, 0x65, 0x5b, 0xc2, 0x8b, 0x83, 0x10, 0xd0, 0x18, 0x3e, 0x29,
-  0xad, 0xcb, 0x00, 0xcc, 0xb0, 0x3b, 0x8e, 0x69, 0x92, 0x22, 0x81, 0x54,
-  0x1a, 0xd7, 0xd9, 0x09, 0xc2, 0x11, 0x27, 0x07, 0xc2, 0x6d, 0x78, 0x82,
-  0xa9, 0x8b, 0xac, 0x4c, 0x6a, 0x76, 0x14, 0x9a, 0x1b, 0x34, 0xdc, 0x2b,
-  0x8d, 0xed, 0x8c, 0x54, 0x40, 0xe2, 0xb2, 0xaf, 0x02, 0x2a, 0xa9, 0x76,
-  0x59, 0x0e, 0xbd, 0xd1, 0xdc, 0x37, 0x21, 0xfe, 0x3f, 0x19, 0x04, 0x54,
-  0x50, 0xc4, 0x4a, 0x48, 0xaf, 0x8b, 0xea, 0x5c, 0xcc, 0xfb, 0x75, 0xb9,
-  0xe4, 0x15, 0x82, 0x22, 0x86, 0x54, 0xdf, 0xc2, 0xe3, 0xb8, 0x41, 0x58,
-  0xb5, 0x10, 0x23, 0xae, 0x5d, 0x28, 0xc9, 0x1b, 0x33, 0x46, 0xa4, 0xea,
-  0x06, 0x51, 0xf8, 0xb8, 0x59, 0xc9, 0x24, 0x46, 0xe6, 0x70, 0xc3, 0xb3,
-  0xda, 0xef, 0xcf, 0xd2, 0x8f, 0x7d, 0x7e, 0xac, 0xea, 0x54, 0xd1, 0x0a,
-  0x6d, 0xa9, 0x0a, 0xe6, 0x5a, 0x4c, 0xb5, 0x84, 0xae, 0x5b, 0x33, 0xd3,
-  0x97, 0x5d, 0x7e, 0x90, 0x06, 0x75, 0x83, 0x84, 0xe8, 0xd4, 0x7d, 0x7b,
-  0x74, 0xd1, 0x3e, 0x5a, 0x0c, 0x2f, 0xa3, 0xc6, 0x07, 0x4e, 0xca, 0x41,
-  0x61, 0xd6, 0xf7, 0x17, 0x5b, 0xde, 0xcc, 0x34, 0x29, 0x5a, 0xb6, 0x50,
-  0x97, 0x2c, 0xd2, 0x85, 0xd5, 0x95, 0x44, 0x18, 0xe5, 0xb0, 0x0c, 0x9d,
-  0xeb, 0xce, 0x04, 0x0a, 0x3e, 0x3f, 0xd9, 0xd9, 0xed, 0xd1, 0x3f, 0x7b,
-  0x6c, 0xcd, 0x7b, 0xb2, 0xf3, 0xc4, 0xf9, 0x9d, 0xec, 0xa9, 0x8e, 0x97,
-  0x62, 0x22, 0x2f, 0x7a, 0x4f, 0xc7, 0x93, 0x8f, 0x1f, 0xf9, 0xe3, 0x5e,
-  0x23, 0x60, 0xbe, 0xcc, 0xfa, 0x86, 0x4a, 0xf5, 0x80, 0x4b, 0xc6, 0x06,
-  0xee, 0x57, 0x9c, 0xcd, 0x72, 0xcb, 0xb9, 0xc4, 0xa6, 0x31, 0xcc, 0x33,
-  0x92, 0x6d, 0x06, 0xab, 0x31, 0xfd, 0x02, 0x8c, 0x43, 0x05, 0x6d, 0x08,
-  0x51, 0xfd, 0x88, 0x5c, 0xc2, 0xec, 0x2c, 0x4d, 0xdd, 0xe9, 0x30, 0x46,
-  0x3c, 0xa3, 0xe9, 0xec, 0xb4, 0x0a, 0x1f, 0xfd, 0x1a, 0x39, 0x60, 0x44,
-  0x9d, 0x08, 0x31, 0x4b, 0x65, 0x45, 0x66, 0x53, 0x48, 0x56, 0xa0, 0x79,
-  0xee, 0x23, 0x5c, 0x9d, 0x4e, 0x05, 0xaf, 0xb0, 0xfd, 0xba, 0xa7, 0x95,
-  0x62, 0xe5, 0xaf, 0x27, 0xa1, 0xe8, 0x69, 0x75, 0xb8, 0xa3, 0x65, 0xe8,
-  0x0e, 0xa4, 0x2a, 0x74, 0x2b, 0x5e, 0x1c, 0x87, 0x10, 0xdb, 0x80, 0xc4,
-  0x3a, 0xc8, 0xe8, 0x8a, 0x25, 0xe1, 0x1d, 0xb8, 0xa2, 0xaf, 0x45, 0xca,
-  0x3d, 0x62, 0x8b, 0x18, 0xfc, 0xd4, 0xca, 0x7f, 0xf7, 0x65, 0x92, 0x87,
-  0x89, 0xfa, 0xdf, 0x65, 0x9f, 0xd5, 0x63, 0xac, 0x01, 0xe0, 0x97, 0x8a,
-  0x78, 0x1a, 0xc5, 0xbd, 0x92, 0x5a, 0x4e, 0xa4, 0x36, 0xdc, 0xa6, 0x53,
-  0xc1, 0x69, 0x73, 0x39, 0x2b, 0xa5, 0x8d, 0x49, 0x72, 0x1d, 0x7c, 0xa4,
-  0x20, 0xde, 0xfb, 0x97, 0x47, 0x41, 0x51, 0x1e, 0x93, 0xe7, 0x7d, 0xbc,
-  0x5b, 0x2c, 0x4a, 0xa9, 0x21, 0xe9, 0x3f, 0x98, 0xac, 0xcf, 0xfc, 0xa2,
-  0xcf, 0x86, 0x87, 0x97, 0x24, 0x73, 0x64, 0x93, 0x55, 0xe1, 0x00, 0x1c,
-  0xd8, 0x6c, 0xe5, 0xf0, 0x2c, 0xcd, 0x9a, 0xdf, 0xe3, 0x00, 0x9e, 0xd4,
-  0xa0, 0x9d, 0x3d, 0xbc, 0x66, 0x3f, 0x46, 0x24, 0x8c, 0x3c, 0xea, 0x61,
-  0x1f, 0x58, 0xeb, 0x64, 0xbc, 0x49, 0x03, 0x2c, 0xd2, 0x50, 0x53, 0x5d,
-  0x00, 0x15, 0x94, 0xd0, 0x05, 0x07, 0xda, 0xa5, 0x1d, 0x41, 0x18, 0xa5,
-  0x5a, 0x15, 0x65, 0x54, 0xb7, 0x7d, 0x63, 0x22, 0xf2, 0x31, 0x6f, 0x82,
-  0x1b, 0x2a, 0xce, 0x88, 0x86, 0xa9, 0x49, 0xc6, 0x15, 0xdd, 0x07, 0x9d,
-  0x90, 0x98, 0x11, 0x35, 0x71, 0x97, 0x4f, 0xea, 0x6b, 0x46, 0xf4, 0xb5,
-  0x40, 0x41, 0x46, 0x85, 0x72, 0xd2, 0x46, 0x27, 0x97, 0x71, 0x14, 0x2f,
-  0x8c, 0xa5, 0x5b, 0xc4, 0x8b, 0x9a, 0x08, 0xd8, 0x15, 0x32, 0x69, 0x78,
-  0x1f, 0x38, 0x08, 0x7a, 0x5b, 0xcc, 0x4f, 0x0e, 0xce, 0x85, 0x84, 0xbe,
-  0xe5, 0x25, 0xb0, 0x81, 0x3b, 0xe2, 0xa3, 0x65, 0x1f, 0x0e, 0xec, 0x4c,
-  0x70, 0xb2, 0xf3, 0x8d, 0x24, 0xfd, 0x7e, 0xbf, 0x61, 0x15, 0xf7, 0xc0,
-  0xee, 0xf9, 0xfc, 0x4b, 0xe6, 0x1b, 0xfc, 0x14, 0xc9, 0x4d, 0x3e, 0xed,
-  0x98, 0x3b, 0xb8, 0x77, 0xba, 0xb7, 0x36, 0x66, 0x1b, 0x1c, 0x5d, 0xf0,
-  0x76, 0x43, 0xa3, 0x61, 0x00, 0xa0, 0x99, 0x69, 0x88, 0x76, 0x4f, 0xc1,
-  0x7e, 0x37, 0xae, 0xa4, 0x9b, 0x6f, 0xfd, 0x43, 0xad, 0xe6, 0x7c, 0x54,
-  0xb7, 0x19, 0xeb, 0xab, 0xfd, 0x64, 0x6f, 0x67, 0xe7, 0x7b, 0xe2, 0xb1,
-  0x33, 0xde, 0x94, 0xdd, 0x6f, 0xa3, 0x2b, 0x24, 0x0b, 0xc4, 0x34, 0xa4,
-  0xca, 0x65, 0x7a, 0xcb, 0x36, 0x75, 0x5d, 0x34, 0x9e, 0x11, 0x23, 0x02,
-  0x2c, 0x03, 0xfb, 0x67, 0x74, 0xe3, 0x1c, 0xf8, 0x00, 0x4c, 0xad, 0x6d,
-  0xac, 0x9d, 0x19, 0xe7, 0x75, 0x61, 0xe7, 0xaf, 0xe9, 0xb7, 0x2c, 0x20,
-  0x0a, 0xee, 0x27, 0x82, 0x64, 0x43, 0x82, 0x07, 0xe0, 0x4e, 0x97, 0x65,
-  0x85, 0x72, 0x9c, 0x88, 0x5a, 0x66, 0x30, 0x40, 0x29, 0x03, 0x59, 0x8b,
-  0xfb, 0x6a, 0x5e, 0x08, 0xbc, 0x94, 0x4b, 0xf9, 0xf0, 0xd3, 0x89, 0x58,
-  0x24, 0xa5, 0x58, 0x64, 0xe5, 0x0b, 0x59, 0xf5, 0xff, 0x02, 0x06, 0xc9,
-  0x03, 0x90, 0x43, 0xe8, 0x9c, 0xab, 0x92, 0x03, 0x1e, 0xa6, 0xc7, 0xb4,
-  0x27, 0x0b, 0xba, 0xd4, 0xba, 0x36, 0x50, 0x3b, 0xd9, 0x5e, 0xcb, 0x73,
-  0x04, 0xf6, 0xfc, 0x62, 0xaa, 0xd2, 0x2e, 0xe0, 0xff, 0xb8, 0x65, 0x36,
-  0x2d, 0x4f, 0xf1, 0xc0, 0x14, 0x2a, 0x75, 0xd1, 0x49, 0x2f, 0x9c, 0x2e,
-  0xd8, 0x66, 0xed, 0x6e, 0xa3, 0x60, 0x50, 0x80, 0x79, 0x18, 0x5b, 0x5c,
-  0xe3, 0xe7, 0x34, 0x42, 0x30, 0xd6, 0xa9, 0xc0, 0x29, 0xbd, 0x24, 0x02,
-  0xfe, 0xea, 0xe7, 0x3e, 0xfd, 0xfb, 0x6b, 0x27, 0x86, 0xaa, 0x16, 0x00,
-  0x2a, 0xda, 0x3c, 0x1c, 0x25, 0xcb, 0xf1, 0x2c, 0x7d, 0x25, 0x56, 0x6e,
-  0x47, 0x60, 0x1d, 0xe4, 0xdb, 0x2a, 0x28, 0x60, 0x1b, 0x0f, 0x60, 0x37,
-  0x77, 0xc1, 0x66, 0x85, 0xaa, 0xdc, 0x8d, 0x52, 0xb3, 0x92, 0xf8, 0x60,
-  0x0d, 0xe1, 0x62, 0x9c, 0x0b, 0x7b, 0xe2, 0xd0, 0xb5, 0x36, 0xd5, 0x8c,
-  0x53, 0xdc, 0x22, 0x2e, 0x9c, 0x8b, 0x9b, 0xb0, 0xf9, 0x8e, 0x96, 0xd5,
-  0x3d, 0x60, 0xe2, 0xc4, 0x3d, 0xc2, 0xf9, 0x40, 0x86, 0x7d, 0x8f, 0x0a,
-  0x1c, 0x18, 0x7e, 0x37, 0x02, 0x0e, 0x21, 0x7e, 0x12, 0x39, 0x5f, 0x17,
-  0x74, 0xcd, 0xa7, 0x65, 0x49, 0xb2, 0x9a, 0x6e, 0xb5, 0x66, 0xfe, 0xd2,
-  0xd8, 0xa1, 0xfb, 0xb0, 0xa5, 0xc9, 0xf9, 0x3d, 0xa8, 0xed, 0xe5, 0x22,
-  0x12, 0xb2, 0x06, 0x2c, 0x80, 0x0e, 0x74, 0x64, 0x03, 0x1a, 0xc4, 0xf4,
-  0x0f, 0x93, 0x37, 0x1f, 0x52, 0x81, 0x4e, 0xc0, 0x65, 0x9b, 0x1a, 0x93,
-  0x1c, 0x16, 0x95, 0x86, 0xb4, 0x28, 0x98, 0xcb, 0xe3, 0x5d, 0x81, 0xc2,
-  0xfd, 0x27, 0x0f, 0x86, 0x2a, 0x85, 0x6f, 0x7d, 0x2e, 0x95, 0xa2, 0xf2,
-  0x21, 0x62, 0x03, 0xaa, 0xa2, 0x97, 0xc9, 0x8b, 0x41, 0xac, 0x38, 0x03,
-  0x9e, 0x29, 0x44, 0xab, 0x14, 0x73, 0x42, 0x5d, 0x16, 0x93, 0xe5, 0x98,
-  0x4d, 0x2c, 0x08, 0xce, 0xcb, 0xeb, 0xfb, 0x64, 0x24, 0xd8, 0x8c, 0x06,
-  0x10, 0x82, 0xa6, 0x9d, 0x40, 0xdc, 0x6a, 0x8e, 0xcd, 0x90, 0x96, 0x69,
-  0x9c, 0xd7, 0x0a, 0x1d, 0x2d, 0x56, 0x65, 0xdc, 0x33, 0xf0, 0x7d, 0x6a,
-  0x18, 0x68, 0xd9, 0xc1, 0xfe, 0x9f, 0x5f, 0xae, 0xa8, 0xa6, 0x20, 0x5e,
-  0x56, 0xe8, 0x03, 0x1f, 0x6b, 0x17, 0x5c, 0x92, 0x4a, 0x90, 0x2a, 0x8b,
-  0xaa, 0xdf, 0x20, 0xb8, 0xbc, 0xd5, 0x5e, 0x58, 0x23, 0x60, 0xd6, 0x53,
-  0x09, 0xfd, 0x41, 0x17, 0xd9, 0x27, 0x96, 0xae, 0xe5, 0x23, 0x70, 0x77,
-  0x5d, 0x40, 0xc8, 0xf1, 0x32, 0x4a, 0x24, 0x04, 0x03, 0xc5, 0x42, 0x02,
-  0xf4, 0xc4, 0x20, 0x8b, 0x08, 0x78, 0x70, 0x18, 0xa9, 0x95, 0x45, 0x1c,
-  0x71, 0x59, 0xa9, 0xbf, 0x16, 0x23, 0xd5, 0xf0, 0x20, 0x98, 0xc6, 0xd2,
-  0x72, 0x2f, 0x39, 0xbf, 0x81, 0x78, 0x2c, 0xf1, 0x77, 0x89, 0x5d, 0xc1,
-  0x80, 0xe6, 0x59, 0x0d, 0x6e, 0xc3, 0x11, 0xae, 0x6c, 0xea, 0x49, 0xae,
-  0x38, 0xb7, 0x5d, 0xc2, 0xd9, 0xc1, 0x03, 0x60, 0x6a, 0x6b, 0x35, 0xf7,
-  0xc5, 0xe0, 0xc9, 0x1e, 0x92, 0x26, 0x43, 0x66, 0x14, 0x2f, 0x64, 0xdb,
-  0x73, 0x39, 0x28, 0x1a, 0xfa, 0x87, 0xf5, 0xe9, 0x77, 0x1d, 0xc2, 0xaa,
-  0x73, 0x64, 0xc0, 0x0f, 0xad, 0x78, 0x01, 0x53, 0x04, 0x63, 0xa7, 0xe3,
-  0x7b, 0xc3, 0x5a, 0xf7, 0xb1, 0x68, 0x56, 0x4c, 0x98, 0x06, 0xc6, 0x4f,
-  0x77, 0x6a, 0x86, 0xcc, 0xdd, 0x20, 0xc0, 0xb5, 0x73, 0x86, 0x82, 0x69,
-  0x67, 0x8f, 0x5a, 0x25, 0x3c, 0x57, 0x9a, 0x78, 0x85, 0xe2, 0xf5, 0x4f,
-  0x65, 0xb9, 0x57, 0xf9, 0xbc, 0x6f, 0x12, 0xfd, 0x4b, 0xfd, 0xe5, 0x21,
-  0x01, 0x90, 0xdf, 0x70, 0x3a, 0x80, 0xf2, 0x55, 0xbd, 0x9d, 0xcd, 0xfc,
-  0xd4, 0xa0, 0xdb, 0x07, 0x54, 0x18, 0x8f, 0xde, 0x26, 0xad, 0x7a, 0xd5,
-  0x22, 0x08, 0x63, 0x5a, 0x94, 0x45, 0x5d, 0x8c, 0x8b, 0xa9, 0xb3, 0x87,
-  0x45, 0xf3, 0x3a, 0x94, 0xaa, 0xa5, 0xe6, 0xb7, 0xac, 0x87, 0x0e, 0xaa,
-  0x35, 0x9a, 0xe4, 0xa0, 0xe6, 0x42, 0x17, 0x9a, 0xf7, 0xdd, 0xb1, 0x49,
-  0x1f, 0xbf, 0x3d, 0x38, 0xeb, 0x25, 0x6c, 0x1f, 0x94, 0xda, 0x36, 0x6f,
-  0x01, 0xf6, 0xac, 0x38, 0xf7, 0x8d, 0xc9, 0x8b, 0x87, 0x8e, 0x05, 0x80,
-  0xa0, 0xf0, 0x76, 0x5b, 0x6e, 0x1b, 0x59, 0x14, 0x65, 0x73, 0xe1, 0xb4,
-  0x92, 0x3c, 0x8c, 0x7d, 0xc0, 0x30, 0xdd, 0x7b, 0xf2, 0xe5, 0xd3, 0x1e,
-  0xff, 0xf6, 0x6c, 0xe7, 0xc5, 0x9e, 0xfa, 0x74, 0x8f, 0x8f, 0x2e, 0xde,
-  0xb4, 0x35, 0x8e, 0x92, 0xb4, 0x35, 0xf9, 0xb7, 0x9f, 0xa5, 0xe5, 0x75,
-  0x5a, 0xd6, 0x88, 0xca, 0xea, 0x57, 0xb3, 0x7a, 0xd1, 0xdf, 0xd9, 0x19,
-  0xd4, 0xc4, 0x50, 0x42, 0xde, 0xfe, 0xe4, 0xe9, 0x60, 0x67, 0xeb, 0x73,
-  0x12, 0x10, 0x4c, 0x74, 0x7d, 0x2c, 0x71, 0xf2, 0x52, 0x73, 0x96, 0xba,
-  0x8e, 0xba, 0xb7, 0x82, 0x05, 0x64, 0x51, 0x65, 0x1e, 0x5e, 0x56, 0xdf,
-  0x50, 0xb1, 0xbf, 0x11, 0xc4, 0xeb, 0x09, 0x20, 0x72, 0x61, 0xb7, 0xfd,
-  0x56, 0x9a, 0x2c, 0xb5, 0x69, 0x35, 0xf3, 0xb6, 0x24, 0x77, 0x1f, 0x1d,
-  0x71, 0x19, 0x13, 0x96, 0x20, 0xd5, 0x3e, 0x18, 0x85, 0x7d, 0xa8, 0x34,
-  0xbb, 0xb7, 0xcc, 0x80, 0xf0, 0x26, 0x97, 0x90, 0x46, 0x6c, 0x28, 0xbe,
-  0xc4, 0x43, 0xe8, 0x9e, 0x7b, 0xcf, 0x9a, 0x25, 0xa9, 0x78, 0x4d, 0x98,
-  0xef, 0xfd, 0x86, 0x35, 0x69, 0x2e, 0x89, 0xbf, 0xf9, 0x44, 0xa4, 0x64,
-  0xc3, 0xb5, 0xba, 0xda, 0xba, 0x28, 0x31, 0x95, 0xd5, 0x88, 0x78, 0x78,
-  0x98, 0x3b, 0xed, 0x61, 0x7e, 0xe4, 0x2a, 0xe9, 0x6c, 0x24, 0x7e, 0xc9,
-  0xe2, 0xfb, 0xa7, 0x68, 0x7e, 0xfc, 0xf8, 0xa6, 0x69, 0x30, 0x5b, 0x41,
-  0xd5, 0x00, 0xbe, 0x1b, 0x4d, 0xb1, 0x63, 0xd7, 0x68, 0x4c, 0xd8, 0xe2,
-  0x47, 0xbd, 0xb9, 0x2f, 0x6f, 0x66, 0x88, 0x32, 0x5d, 0x32, 0x9f, 0xee,
-  0x35, 0xe1, 0xbc, 0x22, 0x42, 0x30, 0x3b, 0xc5, 0xb9, 0xc4, 0x56, 0x3a,
-  0x6f, 0xe2, 0x42, 0x72, 0x05, 0x21, 0xb6, 0x49, 0x66, 0x1f, 0x39, 0xc6,
-  0x90, 0x94, 0xfa, 0xe7, 0x4f, 0xba, 0x36, 0xf0, 0xd3, 0x8b, 0xa3, 0x7d,
-  0xd6, 0x43, 0x7c, 0x96, 0xa0, 0xd9, 0xa9, 0x24, 0x1e, 0x50, 0xf0, 0xb0,
-  0x16, 0x25, 0x70, 0xaa, 0xc3, 0xd9, 0xf5, 0x62, 0x55, 0xcb, 0x38, 0x9f,
-  0x16, 0x05, 0x4c, 0xc5, 0xff, 0xb1, 0x32, 0xe9, 0x46, 0x32, 0xd8, 0x55,
-  0xfc, 0x10, 0xa7, 0x75, 0xac, 0x70, 0xd6, 0xa5, 0x60, 0x25, 0x30, 0xfc,
-  0x80, 0x90, 0x67, 0x67, 0xa1, 0x84, 0x38, 0x44, 0x05, 0x76, 0x3e, 0x2f,
-  0xba, 0x45, 0xc6, 0x59, 0xd9, 0x09, 0xfa, 0x60, 0xb5, 0x1b, 0x2e, 0x1b,
-  0x2c, 0x16, 0x4b, 0x19, 0x3e, 0x35, 0xa3, 0x4d, 0xbc, 0xe5, 0x78, 0x51,
-  0x3f, 0x46, 0xbc, 0x43, 0x17, 0x66, 0xda, 0x24, 0xdd, 0x9e, 0x47, 0xbd,
-  0x17, 0x49, 0x4c, 0xe2, 0x00, 0xd9, 0x3d, 0xc4, 0x71, 0x12, 0xad, 0xe6,
-  0xce, 0xb3, 0x45, 0xc6, 0xb4, 0x1e, 0xc6, 0xf3, 0x04, 0x8c, 0xc8, 0xb9,
-  0x13, 0x10, 0x33, 0x6b, 0xa1, 0x44, 0xb8, 0x43, 0x17, 0xc0, 0x61, 0xef,
-  0xd4, 0x07, 0xfb, 0xb1, 0x53, 0xee, 0x8c, 0xcf, 0x8e, 0xcd, 0xd5, 0x62,
-  0x88, 0xf5, 0x75, 0x3b, 0x53, 0x2e, 0xe4, 0x35, 0xed, 0xc2, 0x73, 0xc0,
-  0xcb, 0xc2, 0x6d, 0xb8, 0xb3, 0x59, 0x78, 0x8c, 0x0f, 0x69, 0xbc, 0x18,
-  0x3c, 0x70, 0xd2, 0x1a, 0xe6, 0xd2, 0x60, 0x64, 0x5c, 0x86, 0xcb, 0x81,
-  0x95, 0x36, 0x8a, 0xec, 0x25, 0x9b, 0x3f, 0x9c, 0xbf, 0xf9, 0x8b, 0x99,
-  0x8f, 0xd8, 0x7e, 0xdf, 0x35, 0xce, 0xb7, 0xa6, 0xd0, 0x48, 0x40, 0x50,
-  0x01, 0xa5, 0xb1, 0x13, 0xfe, 0x8f, 0x08, 0xed, 0x4e, 0x0a, 0x0e, 0x8d,
-  0xda, 0x44, 0x19, 0x28, 0xd4, 0x8a, 0x54, 0x2d, 0xe2, 0xc9, 0xe0, 0x19,
-  0x3b, 0xb6, 0xde, 0x1c, 0x3e, 0x7b, 0xb2, 0xb7, 0xbb, 0x35, 0xe8, 0x5e,
-  0x2e, 0x6b, 0x9f, 0xb4, 0xfe, 0x8e, 0x02, 0xb2, 0x8f, 0x0b, 0xd0, 0xdf,
-  0xe6, 0xd1, 0x4f, 0x67, 0xef, 0x9a, 0xf3, 0x93, 0x19, 0x75, 0xa4, 0xc4,
-  0x55, 0x33, 0xf4, 0x96, 0xd3, 0x46, 0xfb, 0x9a, 0x6c, 0x26, 0xe7, 0xb0,
-  0x0b, 0xcb, 0xb3, 0xfe, 0xa6, 0xcc, 0x71, 0xa6, 0xd6, 0xb1, 0x20, 0xeb,
-  0x27, 0x24, 0x0e, 0x93, 0x9e, 0x73, 0x0a, 0x28, 0xc1, 0x6c, 0xbd, 0x85,
-  0xfd, 0xd7, 0x9c, 0x5d, 0xc3, 0x20, 0xce, 0xda, 0x69, 0x44, 0x2f, 0x75,
-  0x3c, 0xd2, 0xd9, 0x5f, 0x70, 0x0d, 0x99, 0x6e, 0x01, 0x95, 0xca, 0xd9,
-  0x83, 0x15, 0x9c, 0x07, 0x06, 0x1d, 0xba, 0x8d, 0x49, 0x83, 0xea, 0x20,
-  0x75, 0x39, 0x37, 0x90, 0x5e, 0xcf, 0xbd, 0x95, 0x50, 0xcd, 0x1c, 0x6c,
-  0x94, 0x35, 0x4b, 0xab, 0x75, 0x2b, 0x97, 0x5b, 0x44, 0x50, 0x30, 0x9c,
-  0x8a, 0xd3, 0x9b, 0x48, 0x46, 0xa9, 0x96, 0xe5, 0x64, 0x39, 0xa3, 0x15,
-  0xf8, 0xc6, 0xe5, 0x48, 0xe9, 0xfd, 0xcf, 0x16, 0x80, 0x6e, 0x12, 0x46,
-  0xc6, 0x96, 0xb4, 0x67, 0x3b, 0x8d, 0xd6, 0x06, 0xbc, 0x08, 0xe1, 0x28,
-  0x11, 0xfd, 0xbe, 0xeb, 0x82, 0xdd, 0x11, 0x6f, 0x2b, 0xc6, 0xc6, 0xb6,
-  0x09, 0x0f, 0x42, 0xc0, 0xe7, 0x14, 0x52, 0xb2, 0x3a, 0x85, 0x22, 0xf1,
-  0x38, 0x3e, 0x46, 0x1d, 0x02, 0xeb, 0x8a, 0xe3, 0x1f, 0xe4, 0xaa, 0x85,
-  0xb3, 0x5d, 0x92, 0x31, 0x40, 0xdc, 0x3a, 0xb4, 0xf5, 0x56, 0x7b, 0xd1,
-  0x22, 0xca, 0xcc, 0x6f, 0x2d, 0xd0, 0x43, 0x64, 0xc9, 0xa7, 0xc9, 0x26,
-  0x44, 0xbc, 0xe4, 0xd9, 0x97, 0xcf, 0x9e, 0x6e, 0x25, 0xad, 0x58, 0xa2,
-  0xad, 0x58, 0x8d, 0x10, 0x5e, 0x37, 0x97, 0xbe, 0x88, 0x22, 0x06, 0x5c,
-  0x98, 0x90, 0x69, 0xdd, 0xe7, 0x87, 0x30, 0xd8, 0x02, 0x9d, 0x02, 0xb6,
-  0x50, 0x59, 0xd4, 0x70, 0xbb, 0x39, 0xd4, 0xd4, 0x96, 0x97, 0x37, 0xf9,
-  0x70, 0x04, 0xf5, 0xa2, 0x12, 0x07, 0x04, 0x21, 0x21, 0xfd, 0x7c, 0xd9,
-  0xb8, 0xec, 0x10, 0x58, 0x44, 0x8e, 0xeb, 0x98, 0x79, 0x59, 0xab, 0x2d,
-  0x69, 0xcd, 0x56, 0x09, 0x48, 0x46, 0x5e, 0x48, 0x11, 0x5c, 0x6d, 0xe2,
-  0x5d, 0x10, 0x34, 0x03, 0xb9, 0x3b, 0x63, 0x48, 0xb8, 0xc4, 0xd3, 0xd9,
-  0x7a, 0x88, 0xbb, 0xb8, 0xb9, 0x8e, 0x82, 0xdd, 0x87, 0xed, 0xb7, 0xf7,
-  0x35, 0xf0, 0xc8, 0x17, 0x33, 0xef, 0x1a, 0xef, 0x66, 0xd9, 0xcc, 0x10,
-  0xe8, 0x45, 0x48, 0x28, 0x4a, 0x5f, 0xe8, 0x4c, 0xcc, 0x43, 0x72, 0xe3,
-  0x73, 0xb4, 0xe5, 0x2a, 0x50, 0x1c, 0xd3, 0x6e, 0x52, 0x43, 0x0f, 0x69,
-  0x8c, 0x6c, 0x45, 0xa9, 0x23, 0x47, 0x6c, 0x06, 0x92, 0xd3, 0x4e, 0xac,
-  0xb7, 0xdf, 0x1d, 0x51, 0x76, 0x6b, 0x7f, 0x49, 0xa7, 0xad, 0x75, 0x58,
-  0x31, 0x78, 0x29, 0xff, 0xc5, 0x90, 0x08, 0xac, 0x29, 0xf5, 0xbb, 0xe9,
-  0x35, 0xc9, 0x26, 0x8f, 0x77, 0x7b, 0x7b, 0xeb, 0xd1, 0x31, 0xeb, 0x83,
-  0x8f, 0x8d, 0xf1, 0x4c, 0xb4, 0x97, 0x79, 0x58, 0x5f, 0xc8, 0x0f, 0x01,
-  0x5d, 0xe6, 0x9c, 0xba, 0xce, 0x55, 0x71, 0x7b, 0x3e, 0x8a, 0x9d, 0x53,
-  0xb1, 0x48, 0xb0, 0x8a, 0x24, 0x7a, 0x6a, 0xac, 0x97, 0xcc, 0xaf, 0x39,
-  0x75, 0x95, 0x84, 0x05, 0xa9, 0x41, 0xb9, 0x82, 0xa6, 0x97, 0x20, 0xe8,
-  0xb2, 0x53, 0xb3, 0x72, 0x1e, 0x58, 0xef, 0x10, 0xe8, 0x13, 0xcc, 0x4f,
-  0x4e, 0x95, 0x77, 0x52, 0xcb, 0x19, 0x34, 0xc0, 0x7b, 0x71, 0x66, 0x77,
-  0x59, 0xb1, 0x7b, 0xba, 0x55, 0xf3, 0x7d, 0xd0, 0x81, 0xe1, 0x93, 0x27,
-  0x71, 0x7c, 0xcc, 0xc3, 0x9d, 0xcf, 0x23, 0x42, 0xb0, 0x77, 0x45, 0x72,
-  0x83, 0x65, 0x96, 0xde, 0xf8, 0x39, 0x0b, 0x9c, 0xa6, 0xe5, 0xd7, 0xb1,
-  0xcc, 0xec, 0xe0, 0x82, 0xd2, 0x32, 0x8b, 0x83, 0x8a, 0x38, 0xea, 0xe6,
-  0x15, 0xb3, 0x1a, 0x9d, 0xfc, 0x69, 0x63, 0x31, 0x7b, 0x72, 0x42, 0x39,
-  0x35, 0x20, 0x26, 0x53, 0x73, 0xc1, 0x95, 0x07, 0xb5, 0x08, 0x86, 0xa6,
-  0xa2, 0x81, 0x49, 0x5c, 0x1c, 0xe3, 0xde, 0x57, 0xaa, 0xe1, 0xe6, 0x23,
-  0xb7, 0xd0, 0x1a, 0x3e, 0x37, 0x08, 0x6e, 0xd0, 0x39, 0x8c, 0x56, 0xf3,
-  0xac, 0x2e, 0xc7, 0x1d, 0x3b, 0x95, 0x73, 0xaf, 0x57, 0x63, 0xb5, 0xa4,
-  0x0f, 0xf8, 0x41, 0xea, 0xfa, 0x83, 0xfe, 0x02, 0x16, 0xad, 0x99, 0x1b,
-  0x5b, 0x2e, 0x9b, 0x34, 0x9a, 0xd0, 0x09, 0x39, 0x67, 0xa3, 0x72, 0x49,
-  0x05, 0x1a, 0x74, 0x05, 0x1e, 0x29, 0x2a, 0xb8, 0x4b, 0xf6, 0xf7, 0xde,
-  0x77, 0x17, 0xdd, 0x76, 0xbf, 0xe8, 0xc4, 0xe9, 0x4a, 0x26, 0x36, 0x93,
-  0x08, 0xda, 0x60, 0x0c, 0x12, 0xc9, 0x55, 0xf1, 0x71, 0x10, 0xac, 0x6a,
-  0x08, 0x40, 0x8f, 0x57, 0x43, 0xb4, 0x54, 0x65, 0x64, 0x74, 0x1d, 0x9b,
-  0x04, 0xec, 0x40, 0x3c, 0xcf, 0xcd, 0x67, 0x5b, 0xc9, 0x65, 0xbd, 0xd8,
-  0xdc, 0xdd, 0x12, 0x0c, 0x75, 0xad, 0x77, 0x55, 0xf8, 0xbd, 0xed, 0xea,
-  0x1c, 0x1c, 0x26, 0x76, 0xe8, 0xba, 0x65, 0x4f, 0x30, 0x6a, 0x5c, 0x40,
-  0x9e, 0x63, 0x02, 0xc2, 0x39, 0x90, 0x05, 0x73, 0x85, 0x7a, 0x1c, 0x64,
-  0x45, 0x5b, 0xaa, 0x64, 0xc3, 0xf2, 0x02, 0x89, 0x19, 0x95, 0x14, 0x4e,
-  0xdd, 0xf4, 0x45, 0x55, 0xe4, 0x6e, 0x48, 0xb2, 0x5c, 0x42, 0x3e, 0x8a,
-  0x72, 0x3a, 0xe9, 0xe3, 0xea, 0xb8, 0x2a, 0x8b, 0xe5, 0xa2, 0x5f, 0x46,
-  0x60, 0xc8, 0xf4, 0xfa, 0x00, 0x57, 0x8f, 0xa5, 0x09, 0x25, 0xeb, 0xc8,
-  0x20, 0x5a, 0x77, 0x77, 0x7b, 0x98, 0xa4, 0xb4, 0x22, 0xd1, 0x47, 0x76,
-  0xb3, 0x43, 0xa1, 0x07, 0xc8, 0x85, 0xcc, 0xc7, 0x76, 0xc0, 0xa5, 0x9e,
-  0x0c, 0x67, 0xa5, 0x64, 0x89, 0x0b, 0x2a, 0x20, 0xde, 0xa1, 0x71, 0x13,
-  0x6c, 0x1c, 0x27, 0x6e, 0xa3, 0x54, 0xd6, 0x31, 0x75, 0x8a, 0x61, 0xd4,
-  0xe4, 0x00, 0xc6, 0x53, 0x2f, 0x54, 0xd6, 0xe4, 0x98, 0x40, 0x89, 0x12,
-  0x11, 0x99, 0x19, 0x4c, 0x5d, 0x08, 0x80, 0xb7, 0x36, 0xe6, 0x8b, 0xdd,
-  0x98, 0xdd, 0xe3, 0x12, 0xdb, 0x68, 0x50, 0x5d, 0xb2, 0x51, 0xc1, 0xb4,
-  0x58, 0x6f, 0xd8, 0xf2, 0x72, 0xe4, 0xdf, 0x03, 0x35, 0x06, 0x57, 0xf5,
-  0x2d, 0x54, 0x2d, 0x5d, 0xf8, 0xd6, 0xa5, 0x71, 0x7f, 0xfa, 0xde, 0xf5,
-  0x24, 0x3a, 0x7f, 0xb4, 0x44, 0xec, 0x4a, 0xab, 0xe9, 0xd7, 0xc2, 0xaa,
-  0x45, 0x22, 0x90, 0x27, 0xb4, 0xb2, 0x2a, 0xc7, 0x16, 0x4a, 0x72, 0x4c,
-  0x85, 0x94, 0xca, 0x59, 0x58, 0x9f, 0x18, 0x56, 0x5a, 0x98, 0xc5, 0xdb,
-  0xdb, 0xbe, 0x64, 0xb2, 0xae, 0xc2, 0xc3, 0xd0, 0x8a, 0x72, 0x94, 0x3e,
-  0x38, 0x9a, 0x40, 0x1a, 0xd7, 0xd6, 0xa3, 0x6e, 0x76, 0x6e, 0x80, 0x29,
-  0x96, 0x7d, 0xed, 0xa2, 0x43, 0xcb, 0xb5, 0xa3, 0x46, 0x5a, 0x6d, 0xc4,
-  0x95, 0x48, 0xa1, 0xf5, 0x18, 0x5f, 0x2f, 0xe7, 0x37, 0x34, 0x84, 0x6e,
-  0x6c, 0xb6, 0xb9, 0x4b, 0x72, 0x2e, 0x53, 0x95, 0x0a, 0xd6, 0xa4, 0xa5,
-  0xb4, 0xf1, 0xeb, 0x40, 0x0a, 0xbc, 0xe5, 0x84, 0x5b, 0x2d, 0x3d, 0xd5,
-  0x70, 0xcc, 0xc7, 0x46, 0xa7, 0x77, 0x9d, 0x8c, 0xca, 0x2d, 0x60, 0x3c,
-  0x65, 0xd3, 0x21, 0x3c, 0x6b, 0x80, 0xaa, 0xc4, 0x56, 0x5d, 0x85, 0x68,
-  0xdc, 0xcc, 0xa2, 0x0c, 0x07, 0x09, 0xf7, 0x8c, 0xc6, 0xf6, 0xc4, 0x6a,
-  0x7e, 0x73, 0xf5, 0x4f, 0xdd, 0x56, 0x90, 0x69, 0x88, 0xde, 0x1a, 0x19,
-  0x89, 0xb2, 0xe0, 0x7e, 0x84, 0x97, 0x5c, 0x34, 0xc5, 0x6d, 0x4f, 0x8a,
-  0xf6, 0x52, 0xaf, 0x01, 0xde, 0xcd, 0xbe, 0x11, 0xcb, 0x72, 0x88, 0xf0,
-  0x12, 0x29, 0x17, 0xb6, 0x49, 0xda, 0x45, 0x31, 0x5d, 0x62, 0xde, 0xf0,
-  0xd1, 0x65, 0x53, 0xc6, 0x92, 0xdd, 0xb2, 0x03, 0x25, 0x07, 0xd0, 0x03,
-  0x63, 0x1c, 0xfa, 0x4a, 0x5a, 0x5d, 0xc6, 0x39, 0xf0, 0x75, 0x3e, 0x25,
-  0xbc, 0x4b, 0xb5, 0x76, 0xc8, 0xfe, 0x7a, 0x4d, 0x08, 0x9f, 0x83, 0x0a,
-  0xcb, 0xe9, 0x9d, 0xc6, 0x60, 0xbb, 0xb6, 0x28, 0xd3, 0x23, 0x1a, 0x0b,
-  0x12, 0x58, 0xa0, 0x59, 0x30, 0xf0, 0x05, 0xf9, 0x5c, 0x1d, 0x1a, 0x53,
-  0x36, 0x1e, 0x0c, 0xb7, 0x78, 0x20, 0xbc, 0x30, 0xb2, 0xd6, 0x56, 0x58,
-  0x47, 0x82, 0x8b, 0x54, 0xda, 0xd7, 0x61, 0xb1, 0x07, 0x9f, 0x03, 0x64,
-  0x65, 0x44, 0xb3, 0x25, 0x5c, 0x16, 0x1d, 0xab, 0x35, 0xed, 0xcb, 0x74,
-  0x29, 0xf5, 0x1c, 0xe0, 0xfe, 0xe6, 0xd1, 0xb0, 0x70, 0x9e, 0x8e, 0xb0,
-  0x3b, 0xa3, 0x7b, 0x37, 0x4d, 0x43, 0x03, 0xe0, 0xdc, 0x7d, 0xd3, 0xa6,
-  0xbb, 0xe4, 0x61, 0x8f, 0xb5, 0xfa, 0xf9, 0xc1, 0x18, 0x6b, 0x87, 0x32,
-  0xc4, 0xa7, 0x12, 0xe2, 0xbb, 0xdc, 0x28, 0x3f, 0x51, 0x26, 0xbb, 0x8c,
-  0x58, 0x5f, 0xdd, 0x60, 0x4c, 0x52, 0x87, 0x39, 0x20, 0x95, 0xea, 0x51,
-  0x8a, 0x37, 0xa4, 0xcb, 0x60, 0xd9, 0x3b, 0x45, 0x33, 0x59, 0x8c, 0xce,
-  0x4d, 0xc1, 0x05, 0x13, 0x56, 0x60, 0x0d, 0x6b, 0xb1, 0xe8, 0x77, 0xf6,
-  0x58, 0xb2, 0x39, 0x3c, 0x7b, 0x77, 0xf4, 0xed, 0xe9, 0xd6, 0x63, 0x4e,
-  0x0a, 0xf5, 0xd7, 0x73, 0x50, 0x0b, 0x1f, 0x2a, 0x3e, 0xde, 0x91, 0x76,
-  0x18, 0xad, 0x83, 0xb1, 0x35, 0xc3, 0x90, 0xc4, 0x58, 0xfc, 0x5e, 0x4f,
-  0x12, 0x67, 0xe5, 0xbc, 0x0a, 0xa0, 0xa7, 0x1b, 0xfe, 0x23, 0xd8, 0x8d,
-  0x91, 0xbc, 0x04, 0x11, 0xbf, 0xf8, 0xde, 0xf9, 0x76, 0x38, 0xec, 0x1f,
-  0x9c, 0x1d, 0x73, 0xf9, 0xbe, 0x21, 0xfd, 0x5c, 0x51, 0xe3, 0x20, 0x96,
-  0x80, 0x20, 0xf9, 0xde, 0x80, 0x25, 0x81, 0xa0, 0xcc, 0xbe, 0x3b, 0x8d,
-  0xe1, 0x71, 0x89, 0x07, 0xdc, 0x7c, 0xfb, 0xba, 0x3d, 0x3b, 0xde, 0xe6,
-  0xae, 0xd8, 0x43, 0xc2, 0x2b, 0xb1, 0x22, 0x3c, 0x70, 0xd9, 0x2d, 0xdd,
-  0x87, 0x75, 0xe5, 0xbc, 0x12, 0x26, 0x50, 0x63, 0x20, 0x29, 0x89, 0x9e,
-  0xf0, 0x25, 0x2f, 0x0d, 0x42, 0x35, 0x0e, 0xdf, 0x05, 0xcb, 0x3c, 0xd2,
-  0xe6, 0xac, 0x8e, 0x47, 0xcb, 0x15, 0xc0, 0x96, 0x5e, 0xc1, 0x99, 0x45,
-  0x55, 0x00, 0x12, 0xac, 0xd4, 0xf1, 0xdc, 0xb6, 0xeb, 0x6d, 0xf4, 0x89,
-  0x79, 0xed, 0x6b, 0x6d, 0xe8, 0x6c, 0x8e, 0xe2, 0xee, 0x89, 0x9d, 0xb5,
-  0x24, 0x30, 0x95, 0x35, 0x6e, 0x6c, 0x87, 0x32, 0xd5, 0x5f, 0xc6, 0x47,
-  0x47, 0x47, 0x14, 0xe2, 0x95, 0xf8, 0x15, 0x55, 0x6a, 0xfc, 0x2f, 0x01,
-  0x04, 0x0f, 0x8f, 0x44, 0x90, 0x81, 0xf7, 0xd0, 0x35, 0xaf, 0x7c, 0xc6,
-  0x67, 0xeb, 0xa9, 0x83, 0xc4, 0x49, 0x9b, 0x17, 0x87, 0x67, 0x41, 0x40,
-  0x41, 0xaf, 0x6b, 0xf0, 0xf0, 0x80, 0x3a, 0x9a, 0x47, 0x3c, 0x77, 0xad,
-  0xcf, 0x1e, 0x42, 0x2b, 0x08, 0x52, 0x49, 0x62, 0xf7, 0x5e, 0xe3, 0xe2,
-  0x73, 0xde, 0xc2, 0xd5, 0x57, 0x9f, 0x9f, 0x41, 0x70, 0xfb, 0xb9, 0x0f,
-  0x5b, 0x4b, 0xa3, 0x30, 0x6a, 0xf9, 0x24, 0x9e, 0x4e, 0xa6, 0x2b, 0x64,
-  0x65, 0xab, 0x74, 0x8d, 0x00, 0x5a, 0x64, 0x58, 0x75, 0xc7, 0xaf, 0x69,
-  0x34, 0x10, 0xc4, 0x48, 0xf7, 0x0c, 0xcc, 0x65, 0x5d, 0x01, 0xd2, 0x9b,
-  0xd7, 0x99, 0x73, 0xa3, 0x1c, 0x61, 0x60, 0xb4, 0x44, 0x1b, 0xd9, 0x20,
-  0x58, 0x15, 0xad, 0xab, 0xae, 0x30, 0x89, 0x71, 0x80, 0x6d, 0x38, 0x0e,
-  0xe8, 0x80, 0x22, 0x80, 0x31, 0xb9, 0x5e, 0x22, 0x2c, 0x65, 0x74, 0x6f,
-  0xe8, 0x49, 0x5a, 0x62, 0xa0, 0xcc, 0x30, 0xe6, 0xe6, 0x80, 0x3b, 0x65,
-  0x53, 0x45, 0x1f, 0xa7, 0x63, 0x3f, 0xd3, 0x6c, 0x86, 0x51, 0x59, 0xdc,
-  0xd0, 0x69, 0xc5, 0x6b, 0x2c, 0x33, 0x63, 0xf5, 0x45, 0x86, 0x33, 0xb5,
-  0x92, 0x6e, 0x94, 0x89, 0x73, 0xb1, 0x46, 0x82, 0x59, 0xb9, 0x4c, 0x8c,
-  0x66, 0x3e, 0x7a, 0x61, 0x48, 0xea, 0x61, 0x70, 0xce, 0xa1, 0x21, 0x28,
-  0xb3, 0xf8, 0xbd, 0x1c, 0x8f, 0x33, 0x1f, 0x96, 0xd8, 0xf5, 0x95, 0x6b,
-  0xe5, 0x95, 0xff, 0x3a, 0x1a, 0x72, 0x64, 0x11, 0xd2, 0x50, 0x64, 0xcb,
-  0x1b, 0xc4, 0x24, 0x5c, 0xff, 0x25, 0x51, 0x95, 0x70, 0x73, 0x18, 0xe5,
-  0xda, 0x66, 0x61, 0x2e, 0x60, 0xd4, 0xf7, 0x08, 0x3f, 0x96, 0x26, 0x73,
-  0xa9, 0x11, 0x2e, 0x12, 0x10, 0x32, 0xf1, 0x55, 0xd7, 0x14, 0xa8, 0x99,
-  0x55, 0xec, 0xae, 0x98, 0x01, 0xb1, 0xcc, 0x5d, 0xda, 0x12, 0x42, 0xc7,
-  0x7c, 0x02, 0xdb, 0xc3, 0x38, 0x81, 0x9c, 0x05, 0xaf, 0x0e, 0x99, 0x7f,
-  0x0b, 0xa1, 0x53, 0xa4, 0xa7, 0x8e, 0x4a, 0x21, 0x75, 0x3d, 0x5c, 0xc4,
-  0x8d, 0x04, 0xce, 0xba, 0xdc, 0x64, 0x20, 0xbe, 0x87, 0x3c, 0x43, 0x30,
-  0xa4, 0x93, 0x23, 0x84, 0xcf, 0x44, 0xf4, 0x1c, 0x4b, 0x64, 0xe5, 0x39,
-  0xe6, 0x8a, 0x7e, 0x2b, 0xde, 0x08, 0x55, 0x1a, 0x53, 0x73, 0x34, 0xe8,
-  0xc4, 0x7d, 0x15, 0xef, 0x88, 0x00, 0x89, 0x11, 0xa9, 0x39, 0xdf, 0x00,
-  0x90, 0xec, 0x23, 0x57, 0xd2, 0xe3, 0x8d, 0x0f, 0x1a, 0xef, 0x89, 0xf1,
-  0x48, 0xf4, 0xb1, 0x88, 0x00, 0xc9, 0xa3, 0x49, 0xfc, 0x43, 0xbd, 0xe0,
-  0xf7, 0xfd, 0x2f, 0x77, 0x7a, 0xaa, 0x3b, 0xc2, 0x5e, 0x17, 0x3e, 0xc3,
-  0xd1, 0x4c, 0x11, 0x35, 0x02, 0xcf, 0xd1, 0xa7, 0xee, 0xd1, 0x76, 0xe9,
-  0xa0, 0x17, 0x83, 0xa7, 0x61, 0xc8, 0x8e, 0x0f, 0xee, 0x28, 0x92, 0x97,
-  0x98, 0xc6, 0x3e, 0xae, 0xd7, 0x7d, 0xff, 0x29, 0x63, 0x28, 0x87, 0x7f,
-  0xe3, 0xfb, 0xaf, 0x62, 0x20, 0xb9, 0xa9, 0x8f, 0x1f, 0x37, 0x31, 0x5a,
-  0xcc, 0xd2, 0xeb, 0xae, 0xdd, 0x75, 0xba, 0xb4, 0x00, 0x0a, 0xa1, 0xcd,
-  0xe1, 0xb1, 0xf5, 0x08, 0x10, 0xd5, 0x43, 0x5d, 0xaf, 0x3b, 0x18, 0xc6,
-  0x41, 0x23, 0xad, 0xb1, 0x5a, 0xe6, 0x82, 0x15, 0xd1, 0x55, 0x9b, 0x35,
-  0x34, 0x4b, 0xa1, 0xf4, 0x6d, 0x88, 0x50, 0x76, 0x7c, 0x79, 0x92, 0xb1,
-  0xab, 0x06, 0x9c, 0x0d, 0x88, 0x85, 0xa2, 0x6a, 0xea, 0xaa, 0xc8, 0x0e,
-  0x88, 0xb4, 0x35, 0xdb, 0xa4, 0xa5, 0x3c, 0x44, 0xea, 0x3e, 0xa1, 0xe3,
-  0xa3, 0x79, 0x67, 0x83, 0x8e, 0xda, 0x22, 0xf7, 0x66, 0x24, 0x63, 0x0e,
-  0xa2, 0x0e, 0x0d, 0x88, 0xc6, 0x9e, 0x57, 0xd7, 0x3a, 0x48, 0x0d, 0x35,
-  0x6a, 0x56, 0x1a, 0x84, 0x04, 0xcd, 0xa1, 0xdd, 0xef, 0x4e, 0x11, 0x1d,
-  0xaf, 0xea, 0xe6, 0x2a, 0xea, 0xdc, 0x5e, 0x08, 0xfe, 0x87, 0xc4, 0x11,
-  0x38, 0x3b, 0xd1, 0xc5, 0xc9, 0x70, 0x1b, 0xfc, 0x34, 0xd9, 0xe4, 0x79,
-  0x26, 0xc3, 0x77, 0xc7, 0xbd, 0x46, 0xd1, 0xe8, 0x2e, 0x9a, 0xaf, 0xf3,
-  0xff, 0x6d, 0x09, 0xc1, 0xbb, 0x62, 0x5b, 0x88, 0xfe, 0x75, 0xd0, 0x21,
-  0xce, 0xc6, 0x8a, 0xb9, 0xf3, 0x8e, 0xaf, 0x47, 0xfc, 0x79, 0xeb, 0xb2,
-  0x85, 0x1a, 0x0f, 0xc3, 0x7a, 0x33, 0x5d, 0x12, 0xf7, 0x0a, 0x9d, 0xdd,
-  0x4b, 0x0c, 0x01, 0x60, 0x1d, 0x2a, 0x07, 0x1a, 0xe1, 0x69, 0xc0, 0x07,
-  0xf6, 0x28, 0xa1, 0xac, 0xeb, 0x41, 0x59, 0xef, 0x12, 0x0c, 0xba, 0x53,
-  0xa7, 0xc0, 0x28, 0x73, 0x59, 0x5c, 0x8b, 0x4e, 0x8d, 0xa3, 0xce, 0x28,
-  0x2c, 0x24, 0x56, 0x89, 0x06, 0x49, 0x5f, 0x0e, 0x3e, 0xbd, 0x35, 0xbc,
-  0x8b, 0x95, 0xd0, 0xae, 0x0d, 0x2c, 0x0a, 0xcc, 0x2b, 0xc4, 0x36, 0x97,
-  0x4f, 0xec, 0x3c, 0x94, 0xcb, 0x69, 0x50, 0xc4, 0x2e, 0x76, 0x01, 0x3d,
-  0x7d, 0xd1, 0x88, 0x9c, 0x21, 0x7e, 0x5f, 0x4f, 0x67, 0x6d, 0xbd, 0x22,
-  0x79, 0x77, 0x71, 0xf2, 0x36, 0xe9, 0x98, 0xf3, 0x24, 0xf8, 0x3b, 0xf6,
-  0x5d, 0xc7, 0x4f, 0xc1, 0x69, 0x19, 0xc8, 0x2b, 0x21, 0xf5, 0x2f, 0xbf,
-  0x9a, 0x0b, 0x06, 0xdc, 0xdb, 0x7c, 0x5c, 0x16, 0x80, 0x72, 0x14, 0x23,
-  0xb0, 0x52, 0x15, 0x7d, 0x71, 0x7c, 0x3c, 0x4c, 0xee, 0xb2, 0x91, 0x23,
-  0xfe, 0xb6, 0x64, 0x59, 0x0b, 0xff, 0x87, 0x00, 0x5c, 0xe6, 0x59, 0x0d,
-  0x3d, 0xc1, 0xa8, 0x05, 0x28, 0x0f, 0x78, 0x27, 0xeb, 0x67, 0x73, 0x5a,
-  0xd7, 0x8c, 0xad, 0x2f, 0x28, 0x90, 0x34, 0x15, 0xa1, 0x62, 0x91, 0x15,
-  0x11, 0xa7, 0x8c, 0x0c, 0xc0, 0x44, 0x02, 0xe1, 0x6d, 0x2c, 0xeb, 0x8d,
-  0xd2, 0xca, 0xe1, 0xdc, 0xe5, 0x25, 0x6e, 0x0c, 0x28, 0x0b, 0x6a, 0x49,
-  0xbd, 0xc9, 0x19, 0x4a, 0xa4, 0x03, 0xb1, 0xa1, 0x05, 0xbf, 0x5b, 0xe6,
-  0xc4, 0xf9, 0xa4, 0x28, 0xd9, 0xbf, 0x19, 0x14, 0x81, 0xe0, 0xfa, 0x49,
-  0x4b, 0x0e, 0x04, 0x67, 0xa1, 0xe7, 0x3e, 0xa2, 0x71, 0x5f, 0x17, 0x8a,
-  0x22, 0x24, 0x2b, 0x0d, 0xb9, 0x42, 0xb2, 0x84, 0x39, 0x47, 0x4b, 0x41,
-  0xdd, 0x31, 0x7e, 0x2f, 0x0b, 0x3c, 0xa2, 0xa1, 0xd9, 0x7e, 0xf8, 0x44,
-  0x45, 0x75, 0x94, 0xbd, 0xce, 0xaf, 0x56, 0x94, 0xf6, 0x89, 0x29, 0x89,
-  0x18, 0x8d, 0x4a, 0x3b, 0x65, 0x57, 0x35, 0x54, 0xf4, 0xd1, 0x08, 0xf0,
-  0x50, 0x43, 0x33, 0x24, 0x6a, 0xfb, 0x87, 0x94, 0x42, 0x16, 0x01, 0x35,
-  0x45, 0xdd, 0x14, 0xbf, 0x8e, 0x63, 0xe3, 0x81, 0x3c, 0x74, 0xaf, 0x00,
-  0x62, 0x3e, 0xff, 0xe5, 0x4a, 0x0c, 0x4d, 0xbf, 0x7f, 0x37, 0x7a, 0x44,
-  0xab, 0xc7, 0x42, 0xcf, 0xb0, 0x45, 0x06, 0x6d, 0x54, 0xdf, 0x33, 0x66,
-  0x0d, 0x1f, 0x55, 0x70, 0x70, 0x31, 0x4b, 0x5c, 0x83, 0x08, 0x60, 0x64,
-  0x79, 0x3c, 0x94, 0xcc, 0x55, 0xdb, 0x56, 0x24, 0x0e, 0x2d, 0x90, 0x95,
-  0xa0, 0x45, 0x8e, 0x72, 0x0b, 0x59, 0xf1, 0x8a, 0x50, 0x32, 0x81, 0x53,
-  0xca, 0xb4, 0xce, 0x2d, 0xe0, 0x67, 0x1a, 0x73, 0x2b, 0xa0, 0xe0, 0xaa,
-  0xc1, 0x32, 0x9a, 0xf3, 0xf4, 0xa3, 0xc0, 0xd3, 0xa9, 0x49, 0xb3, 0xd0,
-  0x87, 0xc2, 0x3c, 0xe3, 0xaa, 0x9e, 0x14, 0xcb, 0xda, 0x15, 0x9c, 0x81,
-  0x7a, 0x21, 0x9a, 0xc5, 0x7f, 0xfc, 0x67, 0x37, 0xed, 0xf2, 0xe7, 0x5f,
-  0xd9, 0xae, 0xce, 0x30, 0x44, 0x2e, 0x7e, 0xc6, 0x8e, 0x44, 0xe5, 0x6b,
-  0xb1, 0x81, 0xfa, 0x00, 0xb7, 0xe7, 0xaa, 0x68, 0x08, 0xfa, 0x6c, 0x5b,
-  0x71, 0xb6, 0xc8, 0x06, 0x43, 0xfe, 0xd5, 0xd1, 0x99, 0x54, 0xca, 0x05,
-  0x08, 0xd2, 0xc0, 0xc4, 0x6f, 0x86, 0x31, 0x2d, 0x2d, 0x31, 0x59, 0x55,
-  0x1c, 0xc6, 0x60, 0xbb, 0x9a, 0x85, 0x00, 0x19, 0x30, 0x49, 0xfc, 0xd1,
-  0x3c, 0x03, 0x48, 0xbd, 0x27, 0x52, 0x14, 0xbc, 0x0b, 0x71, 0x2e, 0x74,
-  0xab, 0x6e, 0xd7, 0xff, 0x20, 0x42, 0xeb, 0xd1, 0xe5, 0xfe, 0x9f, 0xa1,
-  0xf3, 0x95, 0x56, 0x3f, 0x59, 0xc7, 0x80, 0x3f, 0xfc, 0x61, 0x17, 0xb1,
-  0x92, 0x1d, 0xcc, 0x26, 0x09, 0x93, 0x71, 0x64, 0xec, 0xf0, 0xcc, 0x56,
-  0x80, 0xaa, 0x37, 0x7b, 0x44, 0x80, 0x78, 0x0f, 0x97, 0xd5, 0x7f, 0x0e,
-  0xf0, 0xef, 0xcf, 0xbb, 0xfd, 0x67, 0xbf, 0xba, 0x5e, 0xff, 0xb0, 0xfb,
-  0xe1, 0x0f, 0x7b, 0xeb, 0xb1, 0x58, 0x58, 0xcd, 0x80, 0x6e, 0x46, 0x2e,
-  0x57, 0xe1, 0x0d, 0xa6, 0xb6, 0x30, 0x5f, 0xce, 0x8a, 0xeb, 0xe5, 0x45,
-  0xf2, 0xdb, 0x60, 0x24, 0x8f, 0xa3, 0xce, 0xca, 0xa5, 0xac, 0x61, 0xc6,
-  0x0c, 0x8d, 0xd8, 0x0f, 0x72, 0x3b, 0x39, 0x97, 0x94, 0x3f, 0x0d, 0x9c,
-  0xcc, 0xea, 0x6d, 0xe9, 0x54, 0x7b, 0x40, 0x3a, 0xfe, 0xe4, 0x9e, 0x44,
-  0x1f, 0x01, 0x29, 0x76, 0x60, 0x2b, 0xa6, 0xda, 0x2a, 0xe5, 0x2a, 0xd2,
-  0xe1, 0xa6, 0x0f, 0xf7, 0x64, 0x84, 0xce, 0xad, 0x98, 0xe1, 0xd4, 0x5b,
-  0xac, 0x3d, 0xd9, 0x8f, 0x54, 0x67, 0x06, 0x6f, 0x12, 0x7a, 0xf7, 0x67,
-  0xa8, 0x0d, 0x42, 0x1e, 0x3d, 0x41, 0x41, 0x5b, 0x69, 0xe8, 0x37, 0x97,
-  0x6a, 0x92, 0x8a, 0x9f, 0xe0, 0x2a, 0x83, 0x08, 0xea, 0x69, 0x06, 0xe5,
-  0xba, 0x7d, 0xad, 0x6e, 0x9e, 0xfa, 0x22, 0xe4, 0xd3, 0xac, 0x51, 0x7b,
-  0x28, 0x7c, 0x39, 0x88, 0xd3, 0xc9, 0xc4, 0xf8, 0xcd, 0xd1, 0x78, 0xcb,
-  0xba, 0x0b, 0xe6, 0x34, 0xd8, 0x8a, 0xa6, 0x8b, 0x29, 0xf2, 0xaa, 0x66,
-  0x3e, 0xa7, 0xb7, 0xde, 0xab, 0xbb, 0x12, 0x5d, 0xdc, 0x98, 0x40, 0x7b,
-  0x55, 0x53, 0x4d, 0x04, 0x93, 0x48, 0x81, 0xd4, 0x55, 0x23, 0x0d, 0x73,
-  0x97, 0x03, 0x90, 0x8d, 0x46, 0x9d, 0xa7, 0x6e, 0x73, 0x9a, 0x59, 0xaa,
-  0xd9, 0x32, 0x2b, 0x91, 0xce, 0x15, 0x44, 0x8b, 0x71, 0x15, 0xb9, 0xba,
-  0x8b, 0xb8, 0x7f, 0x3a, 0xb9, 0xb9, 0x01, 0xa5, 0x47, 0xb3, 0xc2, 0xc2,
-  0x55, 0x15, 0x10, 0x73, 0x97, 0xbe, 0x83, 0xb9, 0xb0, 0x41, 0x8f, 0xed,
-  0x76, 0x82, 0x05, 0x0f, 0x56, 0xb5, 0x0a, 0x65, 0x4e, 0x23, 0x24, 0xe9,
-  0xc0, 0xf4, 0x9c, 0x71, 0x85, 0x5e, 0x9c, 0xa2, 0xec, 0x9a, 0xb9, 0xd8,
-  0x19, 0xfe, 0xb1, 0x89, 0xe9, 0xee, 0x92, 0x76, 0x56, 0x83, 0xb5, 0x0f,
-  0x9a, 0xd7, 0x7f, 0xa3, 0x3e, 0xb0, 0x4b, 0xfb, 0x66, 0xa5, 0x63, 0x7c,
-  0x5d, 0x14, 0x55, 0xd4, 0x45, 0xe2, 0x67, 0xc8, 0xf9, 0x4c, 0x6c, 0x50,
-  0x5f, 0x01, 0xd2, 0x6f, 0x40, 0xc9, 0x81, 0x8c, 0xdb, 0x09, 0x2d, 0x20,
-  0x31, 0x37, 0xf7, 0xd7, 0x98, 0x5f, 0xe3, 0x16, 0x52, 0x81, 0x8c, 0xc7,
-  0x81, 0xdf, 0xaf, 0x8c, 0x09, 0x74, 0x00, 0xf8, 0xab, 0x96, 0x47, 0x25,
-  0xb8, 0x70, 0x51, 0xa2, 0x78, 0xf2, 0x0a, 0x60, 0x08, 0x5e, 0xce, 0x48,
-  0xf2, 0x4c, 0x35, 0x0c, 0xe1, 0x13, 0xc4, 0x2c, 0x08, 0x86, 0xd6, 0x31,
-  0x6f, 0x07, 0xc2, 0x65, 0xff, 0xb8, 0xb7, 0xb3, 0x0a, 0x47, 0x1d, 0x0d,
-  0x59, 0x81, 0x4d, 0x9c, 0xc6, 0xca, 0x8e, 0xa3, 0x58, 0x0b, 0x7c, 0x25,
-  0xaf, 0x8c, 0x73, 0x4b, 0x61, 0xd8, 0xed, 0x83, 0x5e, 0x3a, 0x16, 0x4c,
-  0xdf, 0x71, 0x34, 0x49, 0xe1, 0xf7, 0x72, 0xe6, 0xc7, 0x18, 0x33, 0xdd,
-  0xff, 0x10, 0x26, 0xf6, 0xfa, 0xa3, 0x8c, 0xee, 0xee, 0xf6, 0x1c, 0x37,
-  0x25, 0x05, 0x41, 0x10, 0x4a, 0x9a, 0xb1, 0xb6, 0xe8, 0xeb, 0x1b, 0x7e,
-  0x27, 0xb9, 0x60, 0x8b, 0x1d, 0x4e, 0xc4, 0xe9, 0xc1, 0xfb, 0x8b, 0xef,
-  0x92, 0xbd, 0xc1, 0x8e, 0xee, 0xef, 0x83, 0x38, 0x09, 0xe2, 0x8c, 0x6f,
-  0xb4, 0xe1, 0x4b, 0xd3, 0x43, 0x3d, 0xfa, 0xeb, 0x72, 0xde, 0xac, 0x74,
-  0x14, 0x8b, 0x5f, 0xe8, 0x12, 0x64, 0x23, 0xf4, 0xd4, 0x38, 0xa4, 0xf0,
-  0x0b, 0xc1, 0x8d, 0x65, 0x8d, 0xb6, 0xbf, 0xec, 0xca, 0xa0, 0xdc, 0xe0,
-  0xaa, 0xb2, 0x68, 0xcc, 0x16, 0x75, 0xb4, 0x3a, 0x5c, 0x83, 0xa9, 0x32,
-  0x03, 0x7d, 0x99, 0x69, 0x10, 0x44, 0xdd, 0x2e, 0xb7, 0x7a, 0xfe, 0xe6,
-  0xb0, 0xd5, 0xdc, 0xf3, 0x2f, 0x9e, 0xed, 0x7c, 0xce, 0x40, 0xc3, 0x46,
-  0x99, 0xb6, 0xff, 0xb2, 0x32, 0x98, 0x56, 0xdb, 0xed, 0xb7, 0xd5, 0xc0,
-  0x8c, 0xc3, 0xd4, 0xb4, 0xb3, 0xd9, 0x7d, 0x1c, 0x67, 0x58, 0xe1, 0x13,
-  0x52, 0x75, 0x5e, 0x69, 0xea, 0x17, 0xeb, 0x37, 0x08, 0xe5, 0x5d, 0xce,
-  0x23, 0xc1, 0x33, 0xa2, 0xab, 0x88, 0x1e, 0x20, 0xe5, 0x8e, 0x68, 0x86,
-  0x87, 0xa7, 0xef, 0xde, 0x1d, 0x1d, 0x5e, 0xf8, 0xaa, 0x6e, 0x77, 0x56,
-  0x39, 0x98, 0x99, 0x69, 0xea, 0x04, 0xf0, 0x78, 0x19, 0x4c, 0x2d, 0xc2,
-  0xe6, 0x4d, 0x92, 0xf8, 0xe3, 0x4e, 0xc5, 0x6f, 0xfb, 0x52, 0x2d, 0x27,
-  0x92, 0xe2, 0xa5, 0x57, 0x4a, 0xc4, 0x84, 0xf3, 0x7f, 0xab, 0x1f, 0xfe,
-  0x03, 0xd5, 0x0f, 0xbf, 0xd3, 0xb8, 0xb4, 0x16, 0x28, 0x7b, 0xac, 0xba,
-  0x9f, 0x16, 0x3f, 0x09, 0x02, 0xd6, 0xba, 0xf7, 0x97, 0x23, 0x07, 0x9f,
-  0xb8, 0x8d, 0x04, 0x8c, 0xaa, 0x71, 0xdb, 0xd8, 0xfe, 0xae, 0xaa, 0x68,
-  0xf8, 0xd9, 0xab, 0xde, 0xad, 0x8e, 0x8d, 0x43, 0xd9, 0x46, 0x27, 0xdf,
-  0xf6, 0x17, 0x3d, 0xe3, 0x08, 0x35, 0x72, 0x74, 0xa7, 0x31, 0xff, 0xa8,
-  0xd6, 0x55, 0x56, 0x2a, 0x36, 0xd6, 0xb3, 0xd9, 0xff, 0xe8, 0xde, 0x8d,
-  0x81, 0xf7, 0x70, 0xac, 0x61, 0x27, 0xe8, 0x71, 0xde, 0xe7, 0xa6, 0xbc,
-  0x7d, 0x50, 0x33, 0x57, 0xb5, 0x8c, 0x8b, 0x9c, 0x09, 0x1e, 0x09, 0x88,
-  0xb9, 0x14, 0x97, 0xa7, 0x3b, 0x42, 0x1d, 0x1b, 0x98, 0xd3, 0x36, 0x67,
-  0x74, 0x83, 0x4f, 0x0d, 0x1c, 0x26, 0x97, 0x7a, 0x30, 0x85, 0x14, 0x07,
-  0xe3, 0x03, 0xed, 0x72, 0x46, 0x35, 0x7e, 0x17, 0x9d, 0x74, 0xed, 0x87,
-  0x53, 0x56, 0x9d, 0xcb, 0x02, 0x07, 0x88, 0x85, 0x37, 0xae, 0xea, 0xe1,
-  0x8f, 0x47, 0xb0, 0x0c, 0x2d, 0xee, 0x10, 0x91, 0x4c, 0x9c, 0xe9, 0xc3,
-  0xa5, 0x49, 0xc9, 0x9b, 0x5a, 0xb0, 0x44, 0xed, 0xd0, 0x81, 0xf1, 0x3b,
-  0x90, 0xd5, 0x61, 0xd4, 0x88, 0xeb, 0xb4, 0x22, 0xae, 0x1a, 0x0e, 0x97,
-  0x2e, 0x95, 0xad, 0x54, 0x5d, 0x04, 0x8c, 0xfe, 0x0c, 0xdb, 0x73, 0x59,
-  0x2f, 0x34, 0x59, 0x7d, 0x55, 0xa2, 0x8c, 0xa0, 0x2e, 0x9e, 0x8b, 0xdd,
-  0xad, 0x72, 0x48, 0x2a, 0xe2, 0x32, 0x15, 0xc0, 0x21, 0x92, 0x9b, 0xb7,
-  0x39, 0x98, 0x7b, 0x0e, 0x2c, 0x8d, 0x02, 0xaa, 0x26, 0xf3, 0xc2, 0x15,
-  0x36, 0x58, 0x6c, 0x01, 0x2f, 0x19, 0x35, 0xad, 0x2c, 0x5c, 0x8d, 0x5e,
-  0x33, 0x1f, 0x44, 0xa9, 0xb1, 0xb4, 0x82, 0x2e, 0x8b, 0x6a, 0x67, 0x1c,
-  0x15, 0xd2, 0x3e, 0x6c, 0x0b, 0x2e, 0xa3, 0x34, 0xf6, 0x45, 0xd4, 0x6a,
-  0xa9, 0x27, 0xc5, 0xa5, 0x9e, 0x1a, 0xf5, 0x92, 0xa4, 0x92, 0x01, 0x2f,
-  0x25, 0xb0, 0xff, 0xe3, 0xf8, 0x49, 0xe3, 0x29, 0x52, 0x35, 0x36, 0x42,
-  0x5e, 0x60, 0xb9, 0x2d, 0xec, 0x43, 0xa7, 0x85, 0x32, 0x3c, 0x09, 0xf8,
-  0xd3, 0xd9, 0xe1, 0x0c, 0xbb, 0x7e, 0x5a, 0xdd, 0x54, 0xab, 0xf1, 0xe8,
-  0x34, 0x3e, 0xa1, 0x66, 0x21, 0x8e, 0x46, 0x17, 0x94, 0x46, 0xb3, 0x56,
-  0x05, 0x25, 0xbd, 0x0e, 0x47, 0x89, 0xbd, 0x6a, 0x36, 0xe7, 0xb6, 0xa8,
-  0x83, 0x57, 0xd9, 0x51, 0xea, 0x5d, 0x85, 0xb4, 0x8e, 0xb2, 0x2f, 0x5f,
-  0x0f, 0xb2, 0x64, 0x1d, 0xb5, 0xd3, 0xd6, 0xc3, 0x24, 0x55, 0xcd, 0xeb,
-  0xb6, 0x57, 0x61, 0xbf, 0xa6, 0xa1, 0xfa, 0xec, 0x9e, 0xae, 0x44, 0xd8,
-  0x50, 0xd4, 0x44, 0xbd, 0xd9, 0x44, 0x50, 0x29, 0xf3, 0xdf, 0x2e, 0x3e,
-  0xae, 0x9b, 0xf7, 0x03, 0xa3, 0xda, 0x7d, 0xb1, 0x37, 0xd8, 0x7d, 0xfe,
-  0xe5, 0x60, 0x77, 0x67, 0xb0, 0xdb, 0x18, 0x1d, 0x5f, 0xea, 0x88, 0x74,
-  0x0b, 0xdb, 0x89, 0xdc, 0x85, 0x31, 0x9f, 0x5e, 0xd8, 0xc1, 0xec, 0x7e,
-  0x10, 0x04, 0x1f, 0x76, 0xba, 0xd0, 0x00, 0xc5, 0x76, 0xcb, 0xfd, 0x00,
-  0x83, 0x4d, 0x49, 0x6d, 0x81, 0x50, 0x4d, 0x87, 0x7a, 0x14, 0x6c, 0xaa,
-  0xd9, 0xd0, 0x4c, 0xe1, 0x88, 0xb8, 0x71, 0x82, 0x64, 0x3b, 0xc3, 0x64,
-  0xa4, 0x73, 0x13, 0x38, 0x70, 0x3e, 0x33, 0xb6, 0xb0, 0x85, 0x08, 0x84,
-  0x41, 0x14, 0x67, 0xa7, 0xe7, 0x17, 0x8a, 0x81, 0x26, 0x6c, 0x21, 0xad,
-  0x6e, 0x07, 0xee, 0x49, 0xb6, 0x33, 0xba, 0x62, 0x5a, 0x11, 0xa3, 0x2f,
-  0x1e, 0x38, 0x3a, 0x3b, 0xbf, 0x68, 0x23, 0xe5, 0xb9, 0xa6, 0x43, 0x38,
-  0xa6, 0x7e, 0x5f, 0x5d, 0xb2, 0xfd, 0x6c, 0xd1, 0x85, 0x1f, 0xe5, 0x66,
-  0x80, 0x26, 0x91, 0x71, 0x00, 0x0a, 0xde, 0xfe, 0xd3, 0x9f, 0x1e, 0xa9,
-  0x36, 0xbc, 0xfb, 0x62, 0xf0, 0xcc, 0xdb, 0x01, 0x05, 0x69, 0x26, 0x59,
-  0xdf, 0xff, 0x99, 0x73, 0x2b, 0x7f, 0xed, 0xff, 0x4c, 0x7f, 0xfe, 0xba,
-  0xee, 0xb8, 0x28, 0x22, 0x84, 0xbb, 0x65, 0x1b, 0x79, 0x8e, 0x96, 0x00,
-  0x88, 0x47, 0x5d, 0x22, 0x0d, 0xcb, 0x65, 0x88, 0x25, 0xe1, 0xc3, 0x5a,
-  0xaa, 0x21, 0xa1, 0xb0, 0x80, 0xbe, 0x8b, 0xae, 0x8c, 0x23, 0xe0, 0x2d,
-  0x2c, 0x14, 0xb9, 0x1c, 0x43, 0xff, 0x72, 0xcf, 0xea, 0xfd, 0x29, 0x24,
-  0x0f, 0x24, 0x01, 0x05, 0x75, 0x11, 0x3e, 0x3e, 0xe8, 0xc4, 0x06, 0xab,
-  0xfd, 0x49, 0xd9, 0xbc, 0x60, 0x0b, 0x90, 0x20, 0x85, 0x02, 0xe3, 0x62,
-  0x21, 0x16, 0xa1, 0x29, 0x73, 0x41, 0xa5, 0x2e, 0x8d, 0x3f, 0x1a, 0x22,
-  0x5d, 0xdd, 0x60, 0xc6, 0x0a, 0xa6, 0x11, 0xe0, 0x7e, 0xf2, 0x18, 0x0d,
-  0x79, 0x02, 0x05, 0x39, 0x2c, 0x83, 0xa6, 0xa1, 0x22, 0xa0, 0xfe, 0xed,
-  0xcb, 0xc5, 0x75, 0x49, 0xcd, 0x3f, 0x80, 0x30, 0x4d, 0x4f, 0xc9, 0x33,
-  0x8e, 0xd0, 0x03, 0x6c, 0xe2, 0xcf, 0xa9, 0xc1, 0xa4, 0xf5, 0x75, 0x9f,
-  0xd5, 0xe5, 0xb6, 0x58, 0xe5, 0xe1, 0xc6, 0x78, 0xf7, 0x30, 0x47, 0x18,
-  0xd6, 0x61, 0x5e, 0x72, 0x75, 0x65, 0x68, 0x59, 0xb6, 0x07, 0x83, 0x6d,
-  0x08, 0x9c, 0xdb, 0xf4, 0x23, 0x0f, 0x50, 0x71, 0xda, 0xc5, 0x04, 0x48,
-  0x85, 0x47, 0x5f, 0x08, 0x81, 0xd1, 0xda, 0xf2, 0x3e, 0x58, 0xb8, 0xfa,
-  0xdb, 0x92, 0xd3, 0x88, 0x4a, 0xc8, 0x1e, 0x82, 0x68, 0x86, 0x62, 0x9b,
-  0x4e, 0xb7, 0xeb, 0x9e, 0x22, 0x0b, 0x2c, 0xae, 0x78, 0x3b, 0xbd, 0x10,
-  0xea, 0x01, 0xe2, 0x25, 0xf6, 0x04, 0x93, 0xc8, 0x6b, 0x43, 0x82, 0x62,
-  0x3c, 0xb9, 0xb4, 0x7e, 0x30, 0xdf, 0xe1, 0xe9, 0x5e, 0x33, 0x0d, 0x50,
-  0xa1, 0xcd, 0x56, 0xd4, 0x4c, 0xe4, 0xcb, 0xd3, 0xe2, 0xc6, 0x4b, 0x46,
-  0x9e, 0xad, 0x39, 0xad, 0xff, 0x8b, 0xbd, 0x27, 0x3b, 0xdb, 0xcf, 0x07,
-  0x4f, 0x07, 0x7b, 0x2e, 0xd6, 0x91, 0x38, 0x16, 0xed, 0x4f, 0xcd, 0x58,
-  0x77, 0xab, 0x04, 0x61, 0xba, 0x51, 0x8a, 0x24, 0x00, 0x72, 0x53, 0xe9,
-  0xc0, 0xa7, 0xf3, 0x01, 0xb6, 0x6d, 0x37, 0xcc, 0xc2, 0x1b, 0x44, 0xea,
-  0x25, 0x43, 0x36, 0xe4, 0xc4, 0x33, 0x75, 0xc1, 0x21, 0xca, 0x8f, 0xe1,
-  0x12, 0x47, 0x39, 0xc9, 0x51, 0x35, 0x4a, 0xe4, 0xa1, 0x4a, 0x51, 0x36,
-  0x72, 0xe5, 0x27, 0x19, 0xa3, 0x93, 0xe7, 0x01, 0x37, 0x4a, 0x44, 0x47,
-  0x94, 0xc1, 0xb3, 0xf3, 0x28, 0x08, 0x03, 0xe3, 0x4c, 0xbf, 0x5c, 0x8a,
-  0x1e, 0x49, 0x15, 0x35, 0x48, 0x36, 0x63, 0x44, 0xe2, 0x7d, 0x47, 0xa7,
-  0x95, 0xdd, 0xfe, 0x5d, 0xcc, 0x1c, 0xbd, 0xea, 0xd9, 0x79, 0xec, 0x62,
-  0x89, 0x52, 0xc1, 0x00, 0xe4, 0x65, 0xe4, 0x88, 0x11, 0xfd, 0x40, 0xf2,
-  0xc9, 0xc4, 0x31, 0xc7, 0xf3, 0x8e, 0x55, 0x23, 0xf6, 0xc5, 0xbc, 0xfd,
-  0x91, 0x50, 0x5f, 0x33, 0x20, 0x4b, 0x24, 0x64, 0x46, 0x82, 0x31, 0x85,
-  0xa7, 0xfa, 0x42, 0xe0, 0x51, 0xbf, 0xe0, 0x43, 0xf5, 0x9b, 0x15, 0xe0,
-  0xee, 0x77, 0x13, 0xc4, 0x93, 0x7f, 0x3e, 0x41, 0xec, 0xfd, 0x5f, 0x82,
-  0xf8, 0xaf, 0x24, 0x88, 0x17, 0x31, 0x82, 0x78, 0xf2, 0xbb, 0x09, 0xe2,
-  0xe9, 0x3f, 0x9f, 0x20, 0x9e, 0xfc, 0x5f, 0x82, 0xf8, 0x2f, 0x24, 0x88,
-  0xbd, 0xe7, 0xad, 0x2b, 0x03, 0x0a, 0x39, 0xdd, 0xf9, 0xa6, 0x97, 0x7f,
-  0x15, 0xb9, 0x5a, 0xab, 0x24, 0x69, 0x83, 0x27, 0x0a, 0x30, 0x4e, 0xae,
-  0x08, 0xc2, 0x5e, 0xa9, 0xe7, 0xb0, 0x20, 0x60, 0xda, 0x1a, 0x66, 0x6d,
-  0xd7, 0xa6, 0x03, 0xec, 0xeb, 0x74, 0x3a, 0x48, 0xce, 0xdc, 0x5b, 0x9c,
-  0xfe, 0x0b, 0x5c, 0x0d, 0x8e, 0x42, 0x9c, 0x66, 0x97, 0xbc, 0x15, 0x2c,
-  0xcc, 0xf5, 0xf8, 0x4b, 0x16, 0x3d, 0x61, 0x77, 0xeb, 0xe4, 0x70, 0x71,
-  0xe0, 0xa2, 0x45, 0xc7, 0x71, 0x3b, 0x29, 0x2f, 0xad, 0xcb, 0xf5, 0x34,
-  0x80, 0x81, 0x0d, 0xba, 0xc6, 0x81, 0xef, 0xef, 0xeb, 0x0d, 0x2e, 0xca,
-  0xac, 0x5b, 0xfb, 0xf0, 0xa3, 0x04, 0x9e, 0xfc, 0x3d, 0x2b, 0x8b, 0xc4,
-  0x00, 0x74, 0x14, 0xf6, 0x94, 0xab, 0x84, 0x9a, 0xd4, 0xe4, 0x3f, 0x44,
-  0xaf, 0x1d, 0x3d, 0xed, 0x4f, 0x5c, 0x87, 0x5b, 0xa0, 0x6e, 0x01, 0xa8,
-  0xe5, 0x32, 0x4f, 0xe7, 0x0d, 0x3f, 0x88, 0x5f, 0x38, 0xd3, 0x29, 0x38,
-  0xbb, 0xad, 0x93, 0xb3, 0x84, 0x8d, 0x84, 0xe9, 0x25, 0x8c, 0x2c, 0x75,
-  0xaa, 0xfa, 0xa5, 0x40, 0xfd, 0xc9, 0x70, 0x5c, 0x65, 0xb0, 0x41, 0x44,
-  0xd3, 0x79, 0x9d, 0xcd, 0xef, 0x2d, 0xb7, 0xc7, 0x87, 0xde, 0xb0, 0xed,
-  0xe1, 0x56, 0xed, 0x27, 0x2e, 0x8a, 0x9c, 0xc3, 0x24, 0x49, 0x64, 0x72,
-  0x43, 0xec, 0x0e, 0xa9, 0x39, 0xe6, 0x3a, 0x12, 0x4d, 0xfe, 0xca, 0x2d,
-  0x83, 0xa6, 0xa8, 0x84, 0x6b, 0xb1, 0xc9, 0x89, 0xaa, 0xe6, 0x98, 0xe5,
-  0xfe, 0xac, 0xc5, 0x07, 0x97, 0x61, 0x8b, 0x03, 0x54, 0xc4, 0x42, 0x54,
-  0x2d, 0x47, 0x7f, 0x95, 0xa8, 0x3e, 0x22, 0xcc, 0x69, 0x5a, 0xf3, 0x41,
-  0x0c, 0x2b, 0xa8, 0xa3, 0x02, 0xdc, 0x72, 0x24, 0x42, 0x60, 0xdd, 0x6d,
-  0x8e, 0x3e, 0x64, 0x97, 0xb1, 0x2b, 0xa2, 0xa7, 0x74, 0xa6, 0x01, 0xb1,
-  0x18, 0x54, 0x67, 0x52, 0x41, 0x54, 0x67, 0x67, 0xdf, 0xed, 0x3c, 0x41,
-  0xd1, 0xaa, 0x34, 0x02, 0x28, 0xdc, 0x2c, 0xb7, 0x9a, 0x2a, 0xda, 0x5b,
-  0xfc, 0x2a, 0x1e, 0x5f, 0xd9, 0x16, 0x51, 0x6b, 0x8f, 0xcb, 0xc8, 0xf5,
-  0xfe, 0x84, 0x1f, 0x71, 0x95, 0xd3, 0xa9, 0x3b, 0x58, 0x68, 0x0b, 0x76,
-  0xc7, 0xe3, 0x7c, 0x34, 0xf8, 0xf5, 0x55, 0x1d, 0xbc, 0xc2, 0xb7, 0xd2,
-  0xc3, 0xc3, 0x6d, 0xb3, 0x9f, 0xfe, 0x37, 0x74, 0xf0, 0x7e, 0x6e, 0x10,
-  0x35, 0x46, 0xe6, 0x0b, 0x07, 0x78, 0x97, 0xdc, 0xa5, 0xe5, 0x5c, 0x02,
-  0xd5, 0xc5, 0x28, 0xaa, 0xe6, 0xb1, 0x04, 0xc9, 0xc1, 0xc0, 0x45, 0x8b,
-  0xc8, 0xd1, 0xe9, 0x25, 0x6c, 0x7d, 0x09, 0x5b, 0xfc, 0xb0, 0xb7, 0x02,
-  0x05, 0xa0, 0x08, 0xd6, 0x16, 0xd8, 0xbd, 0x28, 0x6a, 0xc1, 0xd2, 0x46,
-  0x7c, 0x30, 0x74, 0xb2, 0x12, 0x17, 0x44, 0xa4, 0xaa, 0x8a, 0x6d, 0x84,
-  0x55, 0x13, 0x45, 0xb3, 0x68, 0x70, 0xb9, 0x80, 0x50, 0xae, 0xa0, 0x5a,
-  0x16, 0xe7, 0xc8, 0x60, 0x8b, 0x46, 0xb9, 0xd2, 0x73, 0x3b, 0x82, 0x8c,
-  0xc3, 0x9b, 0xf8, 0xc6, 0x73, 0x60, 0xdc, 0xb7, 0x45, 0xee, 0x6b, 0x66,
-  0x3f, 0x58, 0xdc, 0x63, 0x75, 0xa9, 0xaa, 0x5e, 0x50, 0x88, 0x36, 0xad,
-  0xc2, 0x34, 0xc3, 0x6e, 0xf8, 0xb5, 0xb3, 0x5a, 0x90, 0x02, 0x09, 0xa4,
-  0x1d, 0x22, 0xe2, 0x79, 0xea, 0x2a, 0x1d, 0xfa, 0x6d, 0xe0, 0x51, 0x4a,
-  0xd9, 0x35, 0x28, 0x27, 0x28, 0xed, 0x5b, 0xc4, 0xf0, 0x90, 0x56, 0xb8,
-  0xc1, 0x5b, 0x70, 0x32, 0x7b, 0x9d, 0xfb, 0xa4, 0x6f, 0xf4, 0xee, 0xee,
-  0x95, 0xf8, 0xb5, 0x62, 0x0b, 0x85, 0x2b, 0xc5, 0xad, 0x2e, 0xd7, 0x32,
-  0x24, 0x46, 0x05, 0x2d, 0x8c, 0x33, 0x7d, 0xa5, 0x4e, 0xc2, 0x98, 0xf4,
-  0xac, 0x15, 0xfe, 0xd0, 0xa3, 0x87, 0x4f, 0xa3, 0x1b, 0x0d, 0x13, 0x29,
-  0xce, 0xda, 0x60, 0x56, 0xfc, 0x9d, 0x74, 0xb9, 0x74, 0x50, 0x94, 0x57,
-  0x71, 0x92, 0xb7, 0xb2, 0x8d, 0xed, 0x87, 0xed, 0xe9, 0x03, 0xa4, 0x0f,
-  0x29, 0x79, 0x23, 0x2e, 0x67, 0xee, 0xa0, 0x32, 0xfc, 0x44, 0xb4, 0xde,
-  0x85, 0x14, 0x4c, 0x47, 0x95, 0xc2, 0xa3, 0x0f, 0xef, 0xdf, 0x0d, 0xdf,
-  0x9f, 0xc1, 0xee, 0x71, 0xf4, 0xfa, 0xc3, 0xd9, 0xf9, 0xa9, 0x23, 0xc9,
-  0x8b, 0xd3, 0xc3, 0xd3, 0xa0, 0x36, 0x7c, 0x48, 0x19, 0x1c, 0xec, 0xdb,
-  0x42, 0xd0, 0x0e, 0xd8, 0xc9, 0xc7, 0x00, 0x84, 0x6e, 0x13, 0xa3, 0x0e,
-  0x38, 0xff, 0x8f, 0xae, 0x4e, 0x6e, 0x40, 0x68, 0xac, 0xc8, 0xb2, 0x99,
-  0x91, 0x8d, 0x5e, 0x69, 0x72, 0xb5, 0x64, 0x2b, 0xa0, 0x04, 0x4d, 0x5a,
-  0x1d, 0x62, 0x07, 0x1e, 0x5f, 0x65, 0x99, 0xdf, 0x5c, 0x81, 0x53, 0x77,
-  0xa9, 0xdf, 0xbe, 0xa7, 0x86, 0x52, 0xfa, 0x2c, 0x22, 0x61, 0x08, 0x3a,
-  0xcd, 0xe3, 0x72, 0x46, 0x48, 0x11, 0x76, 0x2d, 0x04, 0x6b, 0xca, 0xf9,
-  0x3f, 0x26, 0x2e, 0x4a, 0x6a, 0xba, 0x76, 0x10, 0x81, 0xbb, 0x42, 0x3e,
-  0xf5, 0xa2, 0x21, 0x64, 0x94, 0x99, 0xa2, 0xeb, 0x45, 0xee, 0xaa, 0xc7,
-  0x88, 0x48, 0x26, 0xe0, 0x98, 0xf1, 0x43, 0xfc, 0x92, 0x6b, 0x6d, 0x09,
-  0xa3, 0x64, 0xcf, 0x81, 0x81, 0x5a, 0x0d, 0x1b, 0xa3, 0x77, 0x1d, 0x7d,
-  0xd3, 0x4a, 0x55, 0xd2, 0x04, 0x49, 0xb4, 0x81, 0xdc, 0x87, 0x40, 0xba,
-  0x92, 0xc8, 0x4a, 0x8b, 0x64, 0xd7, 0x7c, 0x57, 0x33, 0xa5, 0xac, 0xb9,
-  0x40, 0x77, 0x81, 0xb6, 0x50, 0xcc, 0x2f, 0x03, 0x16, 0x85, 0xcd, 0x88,
-  0x44, 0xda, 0x7d, 0x01, 0xa8, 0xd4, 0x24, 0x00, 0x01, 0xc6, 0xe0, 0x44,
-  0xb9, 0xc3, 0x33, 0x49, 0x05, 0x32, 0x60, 0x8c, 0xb5, 0x00, 0xea, 0xa5,
-  0xd2, 0x57, 0x9e, 0xee, 0x0c, 0x76, 0x92, 0xe1, 0xdb, 0x6f, 0x14, 0x7c,
-  0xf0, 0x9b, 0xa1, 0xe0, 0xcc, 0xe2, 0x5a, 0xb0, 0xf7, 0x1a, 0x11, 0x57,
-  0x18, 0x3e, 0x8d, 0xe1, 0x4f, 0xa9, 0x87, 0x72, 0xb0, 0x9b, 0x43, 0x2a,
-  0x9b, 0x47, 0xf7, 0xb5, 0x17, 0x20, 0x55, 0x10, 0x01, 0x57, 0x7e, 0x50,
-  0x6e, 0x46, 0xee, 0xe0, 0x60, 0x6a, 0x71, 0x32, 0x8c, 0x30, 0xa6, 0x8f,
-  0xf7, 0x7d, 0x62, 0x2c, 0x88, 0x39, 0x78, 0x90, 0x1b, 0xb1, 0x01, 0x38,
-  0xf5, 0xb9, 0x04, 0xad, 0x30, 0x4c, 0x8b, 0x8b, 0xb6, 0xe2, 0x24, 0xb3,
-  0x65, 0xc7, 0x19, 0xc2, 0x8f, 0x42, 0x32, 0x97, 0xc2, 0x4c, 0xb5, 0x87,
-  0xdb, 0x36, 0x6f, 0xb8, 0x5e, 0x7a, 0x82, 0x95, 0xab, 0x60, 0xb9, 0x7c,
-  0x53, 0xc0, 0x0f, 0x1e, 0x57, 0xa7, 0xb6, 0x1d, 0x30, 0x47, 0x89, 0xaa,
-  0xad, 0x7d, 0x92, 0x5c, 0x16, 0x2d, 0xb0, 0xdc, 0x27, 0xb1, 0x29, 0x8f,
-  0x80, 0xd7, 0xfa, 0x28, 0xfb, 0x5d, 0x09, 0xed, 0x9a, 0x84, 0x33, 0xb5,
-  0x99, 0xad, 0xf2, 0x23, 0xcb, 0x24, 0x75, 0x8e, 0xef, 0x25, 0xf9, 0x9b,
-  0xdb, 0xe4, 0xfa, 0x09, 0xd8, 0x7a, 0x2c, 0x4b, 0xd0, 0x97, 0xd4, 0x0e,
-  0xe9, 0x4c, 0x98, 0x9d, 0x61, 0x52, 0xed, 0x42, 0x9e, 0xd3, 0xcb, 0xcd,
-  0xd7, 0xa8, 0x6d, 0x0f, 0x52, 0x77, 0x25, 0x56, 0xa6, 0x8a, 0xb9, 0x30,
-  0x77, 0x84, 0x81, 0xe5, 0xcd, 0x24, 0x5d, 0x59, 0xa3, 0x09, 0xc7, 0x50,
-  0x3f, 0xce, 0x92, 0x78, 0xe4, 0x12, 0x70, 0xdd, 0x1e, 0x81, 0x7a, 0xc6,
-  0x7e, 0xdf, 0x22, 0x49, 0xff, 0x91, 0x55, 0xd2, 0xbe, 0xa2, 0x35, 0x24,
-  0xc2, 0x65, 0xea, 0xcc, 0x68, 0x55, 0xf2, 0x71, 0x38, 0x29, 0xa7, 0xce,
-  0x71, 0x57, 0x8f, 0xe6, 0x21, 0xf3, 0x14, 0x3b, 0x08, 0x3e, 0xc1, 0x84,
-  0x1f, 0x9c, 0xa2, 0x1b, 0x50, 0x63, 0x96, 0x6d, 0x9f, 0xfd, 0x8a, 0x81,
-  0x68, 0x89, 0x99, 0x06, 0x61, 0x3c, 0x68, 0xf7, 0x72, 0x71, 0xea, 0x9f,
-  0x3e, 0x7d, 0x04, 0x6c, 0xff, 0x33, 0xf7, 0x94, 0x03, 0xbd, 0x1b, 0x3b,
-  0xca, 0x5d, 0x34, 0xa6, 0xf2, 0x60, 0xcc, 0x87, 0x4d, 0x03, 0x16, 0x86,
-  0x7c, 0x2c, 0xc1, 0xa4, 0xc0, 0x53, 0xe6, 0xbf, 0xf0, 0xc7, 0x57, 0x0f,
-  0x46, 0x17, 0x98, 0x40, 0xed, 0x60, 0xa2, 0x03, 0x01, 0x42, 0x1b, 0xf1,
-  0x65, 0xd2, 0x62, 0x6e, 0x76, 0xdb, 0xb1, 0x98, 0x08, 0xe8, 0x91, 0xf4,
-  0xbb, 0x14, 0x97, 0x28, 0x97, 0x93, 0x01, 0xc7, 0xe7, 0xd1, 0x16, 0xed,
-  0x8b, 0xf1, 0xcd, 0x44, 0xc5, 0x12, 0x8e, 0x71, 0xc6, 0xdf, 0xdb, 0xbe,
-  0x95, 0x56, 0xfe, 0xda, 0xd3, 0x27, 0xad, 0xfc, 0x17, 0x7e, 0x72, 0x97,
-  0x2e, 0xa7, 0x97, 0xfc, 0x1b, 0x47, 0x38, 0x73, 0xae, 0xd9, 0xaf, 0xed,
-  0x35, 0x7a, 0xef, 0xac, 0x17, 0xde, 0x17, 0x2c, 0x04, 0x90, 0xe0, 0x7d,
-  0xdb, 0x42, 0x0d, 0x4a, 0x0c, 0x70, 0xda, 0x15, 0x7c, 0x73, 0x75, 0x2d,
-  0xc5, 0xbc, 0x0e, 0x4a, 0x29, 0x22, 0x77, 0x8c, 0x5f, 0xde, 0xdd, 0xf9,
-  0x72, 0x27, 0x1a, 0x39, 0xc6, 0xe2, 0x81, 0x05, 0xbc, 0x8e, 0x7d, 0xd9,
-  0x56, 0x16, 0xd6, 0xac, 0x40, 0x4d, 0x10, 0x78, 0x60, 0xdb, 0x8a, 0xf8,
-  0x8b, 0x98, 0x88, 0xc2, 0xd1, 0x18, 0xb9, 0x7a, 0x29, 0xd5, 0xa3, 0xe7,
-  0x30, 0x90, 0x2d, 0x6a, 0xc1, 0x05, 0x0c, 0xb8, 0xa8, 0x84, 0x08, 0xcc,
-  0x92, 0x8f, 0xd0, 0x92, 0xfe, 0xb1, 0x2e, 0x81, 0x05, 0xc3, 0x79, 0xff,
-  0x42, 0x49, 0x54, 0x1f, 0xdc, 0x6d, 0x6c, 0xca, 0x72, 0xf4, 0x40, 0xb9,
-  0x52, 0x38, 0x92, 0x24, 0x0d, 0xe6, 0xc1, 0x4a, 0xa5, 0x1e, 0xc4, 0x43,
-  0x00, 0x00, 0x24, 0x75, 0xa6, 0x53, 0xd1, 0x76, 0x55, 0xa1, 0xd2, 0xcf,
-  0xec, 0x6f, 0xdd, 0x3c, 0x60, 0xbf, 0xd2, 0x17, 0x83, 0x27, 0x2f, 0x80,
-  0x3c, 0xc5, 0x6c, 0x25, 0x5c, 0x7b, 0xe2, 0x27, 0x05, 0xa0, 0x97, 0x05,
-  0xa7, 0x49, 0x43, 0x82, 0x65, 0xf5, 0x57, 0xcd, 0xc3, 0x59, 0x60, 0x16,
-  0xad, 0xea, 0xa1, 0x6c, 0xd4, 0xe4, 0xf0, 0x84, 0x26, 0x68, 0x01, 0xdb,
-  0x42, 0xaf, 0x10, 0xa3, 0xd1, 0xef, 0x26, 0x7a, 0x8b, 0xbf, 0x4f, 0xcd,
-  0x92, 0x93, 0x41, 0x3b, 0x4b, 0x79, 0xe1, 0x77, 0x40, 0x07, 0x17, 0x56,
-  0x9a, 0xec, 0x14, 0x33, 0x19, 0xd9, 0x5d, 0x38, 0xca, 0x18, 0xfc, 0x1c,
-  0x74, 0xae, 0x18, 0x5b, 0x28, 0x6f, 0xbd, 0xb8, 0xe7, 0x0a, 0x07, 0xf9,
-  0xa8, 0xaa, 0xae, 0xf7, 0x88, 0x1a, 0xf6, 0x06, 0x5f, 0x4a, 0x68, 0xa5,
-  0xb8, 0x40, 0x57, 0xa4, 0xa4, 0x28, 0x88, 0x5e, 0xab, 0xbd, 0xd3, 0x45,
-  0x36, 0x1f, 0x0e, 0x4f, 0x42, 0x8c, 0xae, 0xbf, 0xf5, 0xbc, 0x7f, 0x39,
-  0x52, 0x9f, 0x46, 0x80, 0xd2, 0x1c, 0x72, 0x20, 0x12, 0x7a, 0x40, 0x09,
-  0xb3, 0x8c, 0x93, 0x32, 0x03, 0x03, 0x8f, 0xab, 0xc3, 0x63, 0x45, 0xc6,
-  0x3b, 0xa0, 0x5f, 0x52, 0x0c, 0x3a, 0x08, 0x79, 0x57, 0xa7, 0x29, 0xac,
-  0x53, 0x16, 0xe2, 0xa9, 0x75, 0xb1, 0x38, 0x6b, 0xe1, 0xfb, 0x9e, 0xe4,
-  0xd0, 0xe2, 0xa5, 0x48, 0x1d, 0x87, 0x16, 0x52, 0x96, 0x13, 0xf6, 0x83,
-  0x5e, 0xaa, 0x2c, 0x2d, 0x49, 0xc3, 0x67, 0xaf, 0xa3, 0x9f, 0xf1, 0x7f,
-  0x47, 0xbb, 0x7f, 0x5b, 0x62, 0xcf, 0x5c, 0xa1, 0xbb, 0x48, 0x1c, 0xcf,
-  0xf6, 0x50, 0x82, 0x79, 0x86, 0x5c, 0x8e, 0x08, 0x6e, 0xf2, 0x72, 0x94,
-  0xd7, 0x65, 0xaa, 0xe5, 0x3d, 0xb5, 0x30, 0x60, 0x10, 0x66, 0xc4, 0x38,
-  0x61, 0x65, 0x82, 0xd7, 0xa2, 0xd6, 0xec, 0x41, 0xf2, 0xdf, 0xb9, 0x53,
-  0x7d, 0x5b, 0x94, 0x27, 0x8e, 0x6d, 0xfb, 0xe6, 0xe8, 0xcd, 0xe9, 0xf9,
-  0x51, 0x13, 0xfd, 0x58, 0x2a, 0x90, 0x49, 0xf9, 0xb5, 0xf6, 0xe8, 0xfe,
-  0xba, 0xe4, 0x2c, 0x5b, 0xb6, 0x7a, 0x0b, 0xdb, 0xb5, 0x5a, 0x66, 0x67,
-  0x3f, 0xbe, 0x0e, 0x42, 0x0a, 0xac, 0x64, 0x65, 0x00, 0x85, 0x5b, 0x44,
-  0x6a, 0xbb, 0x22, 0x4e, 0x64, 0xcb, 0x17, 0xbf, 0x71, 0xe3, 0x93, 0x92,
-  0x23, 0x1c, 0xe9, 0x68, 0x15, 0xa3, 0x38, 0x8f, 0xbf, 0xaa, 0x60, 0x30,
-  0x77, 0x8d, 0x76, 0xa2, 0x8c, 0x32, 0xd4, 0xb3, 0x51, 0x17, 0xae, 0xc8,
-  0xea, 0xa9, 0x64, 0x82, 0x20, 0x3d, 0x64, 0x90, 0x74, 0x3b, 0xb2, 0x18,
-  0x3f, 0xee, 0x25, 0x16, 0x9c, 0x89, 0xe8, 0x70, 0xb9, 0x68, 0x85, 0x83,
-  0x77, 0x12, 0x11, 0x7a, 0xc9, 0x5f, 0xa5, 0x6e, 0xed, 0xa5, 0x54, 0x67,
-  0xf1, 0x0b, 0x19, 0x11, 0xad, 0xa8, 0xcf, 0xcd, 0x0a, 0x06, 0xcf, 0x60,
-  0xa8, 0xee, 0x9b, 0xc4, 0x64, 0x89, 0x8d, 0x3f, 0x6d, 0x78, 0xdb, 0xb0,
-  0x80, 0x0f, 0xc5, 0x51, 0x56, 0x3c, 0x4c, 0xdc, 0xd6, 0x63, 0x01, 0xb9,
-  0x36, 0xe3, 0x81, 0xd6, 0x7e, 0x5a, 0x11, 0x03, 0xa5, 0x31, 0x9a, 0x2e,
-  0xe0, 0x00, 0xcd, 0xfb, 0xfa, 0xb7, 0xae, 0x15, 0x39, 0x6b, 0x52, 0x1a,
-  0x87, 0x63, 0xf2, 0x3a, 0xac, 0xca, 0x07, 0x10, 0x22, 0x38, 0x61, 0xa4,
-  0x15, 0x8c, 0xff, 0x62, 0x70, 0x2c, 0x8c, 0x69, 0x5c, 0xdd, 0xcf, 0x6b,
-  0x8e, 0x0b, 0x93, 0x7a, 0xa9, 0xe3, 0xa2, 0x14, 0x45, 0xb8, 0x4b, 0xc6,
-  0x6e, 0xbf, 0x18, 0x36, 0x05, 0xce, 0xa3, 0x17, 0xcf, 0x5e, 0xe0, 0xe0,
-  0x71, 0xc8, 0xa9, 0xc2, 0xa6, 0x69, 0xa2, 0x2a, 0x57, 0x59, 0x6b, 0x8e,
-  0xb9, 0xdf, 0xc9, 0xce, 0x47, 0x5b, 0x6a, 0x8b, 0x18, 0x65, 0x53, 0x01,
-  0x6a, 0x1b, 0x06, 0x8d, 0x0c, 0x1e, 0x8c, 0xed, 0x5c, 0x15, 0xb6, 0x29,
-  0xf7, 0x8d, 0xd6, 0x51, 0xa5, 0x7d, 0x48, 0x6f, 0x34, 0x3a, 0x5c, 0x4f,
-  0x83, 0x65, 0xa3, 0xeb, 0xee, 0x3f, 0x30, 0x3a, 0x25, 0x05, 0xa4, 0x00,
-  0x10, 0x61, 0x22, 0x0a, 0x64, 0xf3, 0xdf, 0xb6, 0x1c, 0xb8, 0xad, 0xd6,
-  0x20, 0x43, 0x11, 0x8c, 0x65, 0xd6, 0x40, 0xf8, 0x5e, 0xd5, 0xdc, 0x25,
-  0x33, 0x2c, 0x5a, 0xbc, 0x51, 0xcc, 0x38, 0x51, 0xd5, 0xc5, 0x02, 0x12,
-  0x8e, 0x70, 0x59, 0xdd, 0xfb, 0x6e, 0x20, 0x0f, 0xd7, 0x60, 0xe5, 0xa4,
-  0x5f, 0x4d, 0x55, 0x34, 0x29, 0x82, 0x44, 0xe4, 0x39, 0x87, 0x67, 0x2a,
-  0x35, 0xea, 0xcd, 0xc9, 0x21, 0x6a, 0x34, 0x57, 0xba, 0x3b, 0x23, 0xac,
-  0xe9, 0x6f, 0x4d, 0x96, 0xa4, 0xd7, 0x86, 0x9e, 0x23, 0x8b, 0x42, 0xe7,
-  0xa3, 0xac, 0xcc, 0xce, 0x31, 0x33, 0xa2, 0x90, 0x2e, 0xa0, 0x18, 0x84,
-  0x8d, 0xca, 0x72, 0xd0, 0xb9, 0x6d, 0xd4, 0x8b, 0x26, 0xf5, 0xa0, 0x2f,
-  0x99, 0x9a, 0xc8, 0x99, 0x9d, 0x01, 0xa5, 0xb2, 0x5a, 0xa4, 0x63, 0x89,
-  0x53, 0xd6, 0x5a, 0xbd, 0x8c, 0x5c, 0xd1, 0x21, 0x60, 0x20, 0x59, 0x80,
-  0x0c, 0xde, 0x38, 0xe7, 0xa6, 0xea, 0xac, 0xe6, 0x49, 0x81, 0xc1, 0xc3,
-  0x5b, 0x09, 0x79, 0x71, 0x64, 0x4a, 0x2b, 0x29, 0xae, 0x8b, 0x88, 0x7a,
-  0x7d, 0x55, 0x2e, 0x04, 0xd2, 0x30, 0x86, 0xb7, 0x18, 0xe6, 0x25, 0xc8,
-  0xa3, 0xc6, 0x29, 0xaa, 0xac, 0x96, 0xc1, 0xc8, 0xbb, 0xc7, 0xaf, 0x1b,
-  0x30, 0xb8, 0x92, 0x74, 0x36, 0xba, 0x8f, 0x37, 0xe7, 0x81, 0x78, 0x11,
-  0x4b, 0xeb, 0xef, 0x12, 0xd7, 0x94, 0x17, 0xa4, 0x47, 0x96, 0x4f, 0xcb,
-  0xdf, 0xc5, 0x9b, 0xd3, 0x56, 0x24, 0x1c, 0x57, 0xda, 0xb0, 0x86, 0x99,
-  0x54, 0xac, 0x14, 0x09, 0x88, 0x01, 0x80, 0xf2, 0xd6, 0x4d, 0x37, 0x16,
-  0xfe, 0x7a, 0x46, 0x0a, 0x3f, 0xc7, 0x69, 0x3e, 0xba, 0x16, 0x33, 0x36,
-  0x0d, 0x18, 0xdb, 0x54, 0x67, 0x59, 0x15, 0x82, 0xfe, 0x73, 0x3b, 0xa3,
-  0xdc, 0xa5, 0xeb, 0xc4, 0x9b, 0xf3, 0x53, 0x65, 0xe9, 0x92, 0x9b, 0xe7,
-  0x37, 0xc3, 0x29, 0xcc, 0x93, 0x62, 0x5c, 0x07, 0x33, 0xc0, 0x03, 0xf1,
-  0xe6, 0x2c, 0x26, 0xac, 0x33, 0x33, 0x98, 0x95, 0x39, 0x8d, 0xe4, 0xe1,
-  0x99, 0xc9, 0x83, 0x9d, 0x4d, 0xa6, 0x0f, 0x85, 0x89, 0x77, 0x76, 0x78,
-  0xf5, 0xcc, 0x62, 0x3b, 0xcc, 0x23, 0x68, 0x6f, 0xb0, 0xc7, 0xa0, 0x8a,
-  0x32, 0x72, 0x6f, 0x35, 0x94, 0xd5, 0xd1, 0x0c, 0x9a, 0x07, 0x36, 0x58,
-  0x7b, 0xe9, 0xac, 0xc2, 0x74, 0xae, 0x75, 0x0f, 0x3f, 0x08, 0x02, 0x1f,
-  0xea, 0x0b, 0xd4, 0x1f, 0x1e, 0x5e, 0x90, 0xe9, 0xdc, 0x8a, 0x31, 0x33,
-  0xd0, 0xab, 0x63, 0x16, 0x9a, 0x3f, 0x9a, 0x36, 0xcb, 0x34, 0x2b, 0x78,
-  0xef, 0x0a, 0xb2, 0xf7, 0xfd, 0xf9, 0xaa, 0xb7, 0x8b, 0x22, 0x9f, 0x1b,
-  0x9a, 0x91, 0xf2, 0x98, 0x60, 0x88, 0x49, 0xcc, 0x03, 0x1f, 0x38, 0xe2,
-  0x3b, 0x53, 0x9c, 0xdd, 0xc0, 0xa6, 0xec, 0x44, 0x83, 0x0f, 0xab, 0x43,
-  0x5c, 0x99, 0x8e, 0xe5, 0x71, 0x4f, 0xc7, 0x32, 0x2b, 0x17, 0xbb, 0xed,
-  0x52, 0x1d, 0x1f, 0xdf, 0xed, 0x66, 0x97, 0xee, 0x4c, 0xb6, 0xc7, 0xb7,
-  0xb8, 0x9b, 0x58, 0xe7, 0xf8, 0xd5, 0x3a, 0xb6, 0x4b, 0x9f, 0xe3, 0x2a,
-  0x0d, 0x41, 0x11, 0xa2, 0xab, 0x34, 0x76, 0x69, 0x82, 0xf5, 0x8a, 0xa5,
-  0x58, 0x91, 0x2c, 0xba, 0xd6, 0xb1, 0x02, 0x72, 0x73, 0x56, 0xac, 0x8c,
-  0xb7, 0x63, 0xf5, 0xe2, 0xe8, 0xd3, 0x7e, 0x88, 0xc2, 0xdf, 0x43, 0x14,
-  0xf1, 0xee, 0x02, 0xad, 0x66, 0x78, 0xda, 0x6b, 0xeb, 0x40, 0x4c, 0x32,
-  0x14, 0x82, 0x57, 0x52, 0x40, 0x12, 0xad, 0x34, 0x64, 0x7c, 0xef, 0x21,
-  0x42, 0x5a, 0xb9, 0xc6, 0xe5, 0xec, 0x91, 0x43, 0x4e, 0x0f, 0xf8, 0x59,
-  0x21, 0x09, 0x24, 0x98, 0x55, 0xe7, 0x64, 0xea, 0x31, 0x5e, 0xb1, 0xf2,
-  0xab, 0x46, 0xd0, 0xa0, 0xc2, 0x87, 0x46, 0x82, 0x07, 0x63, 0x83, 0x09,
-  0xea, 0xc7, 0xc3, 0xa5, 0x7e, 0x1f, 0x70, 0xca, 0x78, 0x73, 0x3a, 0x5c,
-  0xff, 0x9e, 0x2e, 0x4f, 0xcf, 0xc1, 0x5a, 0xaa, 0x3d, 0x85, 0x11, 0x5a,
-  0x3a, 0x43, 0xb6, 0x03, 0xfe, 0x9b, 0x18, 0x04, 0xd4, 0xb5, 0x69, 0x70,
-  0x08, 0xfb, 0x25, 0x67, 0xb3, 0xb2, 0x51, 0xec, 0x25, 0xff, 0x88, 0xa6,
-  0xc3, 0x6d, 0x9b, 0x86, 0xb5, 0x0d, 0x67, 0x09, 0xe7, 0x4c, 0x70, 0x0c,
-  0x0b, 0xd8, 0x09, 0xca, 0xcc, 0x68, 0xd8, 0xf0, 0x26, 0xa2, 0xd0, 0x25,
-  0xfd, 0x09, 0x32, 0x02, 0x40, 0x0c, 0x3a, 0x97, 0x3a, 0xad, 0xcd, 0x96,
-  0x45, 0x08, 0x73, 0xd3, 0xbb, 0x83, 0xdd, 0x9e, 0x69, 0x63, 0x2a, 0x2f,
-  0x59, 0x3c, 0x91, 0x82, 0x29, 0x49, 0x6e, 0x38, 0xfb, 0x69, 0x3a, 0xc5,
-  0x49, 0xd0, 0x6f, 0xd5, 0x4d, 0x72, 0xe4, 0x68, 0x23, 0x2f, 0xc9, 0xa3,
-  0x56, 0x4c, 0x67, 0x01, 0x77, 0xfa, 0x4f, 0x5f, 0xbc, 0x68, 0x5c, 0x69,
-  0xa1, 0xde, 0xfc, 0x6c, 0x67, 0x47, 0x2a, 0xe8, 0xb4, 0x5f, 0xa3, 0x2f,
-  0xfa, 0x2f, 0xf8, 0xc5, 0xe6, 0x6b, 0x52, 0xbd, 0x6d, 0xf5, 0x7b, 0x7d,
-  0x7c, 0x13, 0xe9, 0x8e, 0x8d, 0x2c, 0x2b, 0xdf, 0x7a, 0x81, 0xee, 0x22,
-  0x6f, 0xf1, 0xc3, 0xb2, 0x8e, 0xc5, 0xe5, 0x25, 0xe2, 0x67, 0xf1, 0x24,
-  0x73, 0x7e, 0x12, 0x06, 0xef, 0xd2, 0x72, 0xd2, 0x9d, 0xee, 0x4e, 0xaf,
-  0xbf, 0xbb, 0x6a, 0xba, 0x6c, 0x11, 0xc0, 0x48, 0x78, 0x3b, 0xa1, 0x40,
-  0x91, 0xf0, 0x2c, 0x31, 0x71, 0xed, 0x86, 0x76, 0x69, 0x44, 0xbb, 0x2f,
-  0x5e, 0xf4, 0x30, 0xb2, 0x67, 0x2f, 0x5e, 0xac, 0x8c, 0x97, 0x08, 0xba,
-  0xb9, 0x2b, 0xbc, 0x4d, 0x0a, 0xaf, 0x7b, 0x9a, 0xa9, 0x20, 0xa3, 0xc7,
-  0xfb, 0xc1, 0x37, 0xc9, 0x2b, 0x2e, 0x02, 0x14, 0x98, 0x6b, 0x7c, 0x82,
-  0x55, 0x2b, 0xa7, 0x1b, 0x59, 0x62, 0xf7, 0xa6, 0x0e, 0x92, 0x7a, 0xd1,
-  0x0d, 0x03, 0xe3, 0xb4, 0x3c, 0xf3, 0x20, 0x75, 0xea, 0xfb, 0x9e, 0x8a,
-  0x31, 0xf2, 0x2a, 0xaf, 0x3d, 0x2c, 0x5b, 0x95, 0x6c, 0xd2, 0x66, 0x6f,
-  0xb1, 0xee, 0x2f, 0x95, 0x66, 0x34, 0x4a, 0x66, 0x83, 0x63, 0xef, 0x05,
-  0x30, 0x1a, 0x7f, 0x14, 0x8b, 0x8d, 0x4e, 0x1c, 0x55, 0x36, 0x85, 0xf2,
-  0xa5, 0x57, 0x81, 0xbc, 0xd0, 0xe7, 0x27, 0xf5, 0xb4, 0xb0, 0x2a, 0xf7,
-  0x51, 0x6b, 0x99, 0x23, 0xc0, 0x2f, 0xec, 0xbc, 0x33, 0x7a, 0xb1, 0xbe,
-  0x8a, 0x8d, 0xdd, 0x72, 0x50, 0x25, 0xdc, 0xde, 0x2f, 0xc3, 0x46, 0xd5,
-  0x46, 0xae, 0x47, 0xf9, 0x49, 0xec, 0x43, 0xa7, 0x6c, 0x8b, 0xd8, 0x6b,
-  0x27, 0x99, 0x95, 0xaa, 0x55, 0xbb, 0x8c, 0x6b, 0x47, 0x0c, 0x33, 0xcb,
-  0xf2, 0x81, 0x12, 0x71, 0x9a, 0xa9, 0xc3, 0xae, 0x4f, 0x28, 0xac, 0x77,
-  0x69, 0x99, 0x19, 0x04, 0xe1, 0xfc, 0xde, 0x1d, 0x6e, 0x53, 0x0f, 0x2d,
-  0xf3, 0x11, 0xa9, 0xd6, 0x31, 0xbc, 0x01, 0xab, 0x2a, 0x2c, 0xde, 0xd1,
-  0x09, 0x9b, 0xfa, 0x14, 0x79, 0x51, 0x73, 0x4f, 0x7d, 0x8e, 0x86, 0x40,
-  0x2c, 0x02, 0x67, 0x8d, 0x97, 0xa0, 0x5b, 0x14, 0x12, 0x85, 0x1f, 0xcd,
-  0x4c, 0x7b, 0x95, 0x89, 0xb9, 0x51, 0x4a, 0x28, 0x1a, 0xb2, 0x4a, 0x37,
-  0xa6, 0x09, 0x9c, 0x87, 0xf7, 0x53, 0x98, 0x90, 0x66, 0x42, 0xf8, 0x42,
-  0xc8, 0x66, 0x55, 0x50, 0x3c, 0xb1, 0xcc, 0xf0, 0xcb, 0x75, 0x6b, 0x3b,
-  0x11, 0xef, 0xd8, 0x69, 0xd9, 0xe3, 0x64, 0x33, 0x88, 0xb9, 0x63, 0x0a,
-  0x0d, 0x74, 0x6d, 0x57, 0xb9, 0xb4, 0x90, 0x08, 0x32, 0x94, 0xf3, 0xe8,
-  0x6a, 0x7e, 0x5c, 0xc5, 0x8f, 0x77, 0xcb, 0xd9, 0xd0, 0xb2, 0x8f, 0x35,
-  0x97, 0x1c, 0xe6, 0x91, 0xdb, 0x8d, 0x34, 0x3c, 0xfe, 0x1f, 0x47, 0x9f,
-  0x31, 0x83, 0xfa, 0x3c, 0x00, 0x3f, 0xc0, 0x6b, 0x2b, 0x30, 0x65, 0x39,
-  0x1e, 0xd1, 0x1f, 0x57, 0xaf, 0x80, 0x07, 0x5b, 0xc8, 0xe4, 0xc5, 0x80,
-  0x22, 0xae, 0x7a, 0x44, 0x77, 0x0d, 0xd3, 0xd9, 0x22, 0x02, 0xe5, 0xd1,
-  0x33, 0x64, 0x08, 0x2b, 0x22, 0x01, 0x23, 0x87, 0x0b, 0x4b, 0xd4, 0x4c,
-  0xa6, 0xae, 0x30, 0x12, 0x60, 0x8c, 0x08, 0x4d, 0xd0, 0xbb, 0x1c, 0x2a,
-  0xc4, 0x0b, 0x80, 0xbe, 0x42, 0xd3, 0x3d, 0xae, 0x62, 0x52, 0x4a, 0xf9,
-  0xf1, 0x28, 0x0e, 0x90, 0x40, 0x92, 0x86, 0xa9, 0xff, 0x4e, 0x1e, 0x92,
-  0xf9, 0x4d, 0x33, 0x83, 0x4f, 0x64, 0xc7, 0x60, 0x58, 0x6a, 0x36, 0x92,
-  0x3e, 0x58, 0xd1, 0x8d, 0x5f, 0x4a, 0x7e, 0xbe, 0x74, 0xcd, 0x58, 0xe7,
-  0xa2, 0x41, 0x08, 0x68, 0x7a, 0xe5, 0x2b, 0x61, 0x70, 0x50, 0x8a, 0x15,
-  0xb1, 0x97, 0xc7, 0xdb, 0x76, 0x42, 0x46, 0x11, 0x63, 0xeb, 0x02, 0xa0,
-  0xa6, 0x7c, 0xfa, 0x55, 0xd5, 0xad, 0x6b, 0x99, 0x5d, 0x4d, 0xfa, 0x2a,
-  0x35, 0x35, 0x8f, 0x3b, 0x56, 0xe1, 0xce, 0xc5, 0x46, 0xff, 0xa8, 0xf0,
-  0xc8, 0xe2, 0xe8, 0x71, 0x81, 0x7b, 0xe9, 0x54, 0xcd, 0x16, 0x00, 0x83,
-  0x63, 0x27, 0x88, 0x03, 0x91, 0x60, 0x23, 0xda, 0xbc, 0xcb, 0xcb, 0x90,
-  0xb9, 0x1e, 0xd4, 0x78, 0x66, 0xac, 0x08, 0x29, 0xba, 0x34, 0x9f, 0xf8,
-  0xdc, 0x56, 0xcd, 0x99, 0x54, 0xdb, 0x24, 0xcc, 0xfe, 0x12, 0x9d, 0xd3,
-  0x3e, 0x1a, 0xd4, 0x6f, 0x8d, 0xa5, 0xeb, 0xd1, 0x4a, 0xdc, 0x75, 0x6a,
-  0xa9, 0x37, 0xc2, 0x01, 0x02, 0x4c, 0x9a, 0x7e, 0xda, 0xf1, 0xfa, 0x34,
-  0xcc, 0x57, 0x62, 0xc1, 0x6c, 0xc6, 0x2e, 0xaa, 0x73, 0x80, 0xc3, 0xb3,
-  0x50, 0xa9, 0x5e, 0x8b, 0x0d, 0x9d, 0x54, 0x51, 0x53, 0xed, 0x24, 0x4b,
-  0x0d, 0xed, 0x8b, 0x36, 0x95, 0xc8, 0xb5, 0x83, 0x8b, 0x93, 0xdc, 0x65,
-  0x65, 0xe6, 0x31, 0x09, 0x39, 0x70, 0x97, 0x4e, 0xdf, 0x20, 0x19, 0x16,
-  0xf4, 0x7c, 0xa4, 0xd6, 0xad, 0xa5, 0x23, 0x36, 0xf0, 0xec, 0x79, 0x38,
-  0x1e, 0xbf, 0x11, 0x41, 0x63, 0x62, 0x01, 0x6e, 0xce, 0x37, 0x02, 0x81,
-  0x0b, 0x4b, 0xed, 0x28, 0x73, 0xbb, 0xea, 0x90, 0x9f, 0x25, 0xc0, 0x79,
-  0xbd, 0x4f, 0x74, 0xd6, 0x5f, 0x57, 0x68, 0x08, 0xa0, 0xf3, 0x06, 0xcd,
-  0x3d, 0x94, 0x67, 0xbd, 0xfb, 0xa2, 0x19, 0xfe, 0x84, 0x72, 0xcb, 0x53,
-  0x12, 0x16, 0x03, 0x5c, 0xcd, 0x15, 0x29, 0xb9, 0x67, 0xe6, 0xe9, 0x4a,
-  0x61, 0x4b, 0x26, 0x1e, 0x3a, 0x0b, 0x92, 0x34, 0x2f, 0x45, 0x1e, 0x74,
-  0x13, 0xe5, 0x94, 0x48, 0x97, 0x66, 0x0a, 0x40, 0xcd, 0x41, 0xc7, 0xd3,
-  0x69, 0x8e, 0x22, 0x9f, 0x3f, 0xc7, 0xdc, 0xc1, 0xdc, 0x1e, 0x2e, 0x2a,
-  0x7f, 0x13, 0x55, 0x4b, 0xb4, 0xc6, 0xcd, 0x4a, 0xc1, 0xdd, 0x8d, 0x84,
-  0xc9, 0xd4, 0x6a, 0x7a, 0xb1, 0xb9, 0xc1, 0x15, 0x9c, 0x9f, 0x5b, 0xba,
-  0x94, 0x4e, 0x7a, 0x12, 0x94, 0xa5, 0xeb, 0x00, 0xee, 0xa9, 0x13, 0xe5,
-  0x10, 0x71, 0xf6, 0x40, 0x09, 0xc8, 0x19, 0x5b, 0xa1, 0x10, 0xf4, 0x80,
-  0xed, 0xac, 0x1e, 0x6f, 0x0b, 0x0a, 0x6d, 0xc2, 0x14, 0x3e, 0x4f, 0x25,
-  0x63, 0xd8, 0xd4, 0x83, 0x76, 0x96, 0xdf, 0xbc, 0x65, 0x1b, 0x87, 0x87,
-  0x47, 0xf8, 0x47, 0xe8, 0xc3, 0xf5, 0x09, 0xb6, 0x01, 0x32, 0x4a, 0xc4,
-  0x42, 0x6b, 0x79, 0x6d, 0x6e, 0xb9, 0x9d, 0xff, 0xd3, 0x80, 0x5e, 0x9b,
-  0x15, 0x41, 0xf1, 0x82, 0x60, 0x73, 0x4a, 0x82, 0x60, 0xac, 0x52, 0x33,
-  0xc0, 0xd6, 0xdc, 0xb5, 0xe3, 0x02, 0x8f, 0x9b, 0x28, 0x7d, 0x0e, 0x70,
-  0x5c, 0x97, 0x4d, 0xc7, 0xd1, 0x09, 0x84, 0x9d, 0xe9, 0x20, 0x24, 0x88,
-  0xd8, 0x40, 0x93, 0x18, 0x12, 0x2f, 0xea, 0x6c, 0x76, 0x4a, 0x95, 0x35,
-  0x0c, 0xa1, 0x79, 0x74, 0xdf, 0xcd, 0xde, 0xb7, 0x09, 0x99, 0x8d, 0xb8,
-  0xff, 0x34, 0x52, 0x71, 0x68, 0x71, 0xfb, 0x14, 0xc7, 0xa2, 0xff, 0xbc,
-  0x27, 0x7f, 0x3d, 0x17, 0x78, 0x89, 0xba, 0x69, 0x6f, 0x66, 0xc0, 0x60,
-  0x2d, 0x54, 0x7a, 0x7c, 0x66, 0xd5, 0xc6, 0x06, 0xbf, 0x05, 0x11, 0x21,
-  0x8e, 0x93, 0xe9, 0xb2, 0x81, 0x23, 0x64, 0xa5, 0x84, 0xf7, 0x70, 0xc8,
-  0xea, 0xee, 0xe0, 0x49, 0xf3, 0x84, 0x42, 0x63, 0x8d, 0xd5, 0xcd, 0x63,
-  0xe9, 0x94, 0x39, 0x35, 0x97, 0xfa, 0x93, 0x48, 0x4e, 0x4e, 0x60, 0x85,
-  0x01, 0xc4, 0x50, 0xf4, 0xc4, 0x29, 0x5a, 0x8a, 0x41, 0xb1, 0x70, 0x65,
-  0x14, 0xbb, 0xa9, 0x22, 0xde, 0xb9, 0xc5, 0xe5, 0xe6, 0xac, 0x1e, 0x68,
-  0xa9, 0xfb, 0xe0, 0x55, 0x36, 0x99, 0xb3, 0x9a, 0xb6, 0x89, 0xd1, 0x4a,
-  0x58, 0xf2, 0xa0, 0x5b, 0xd5, 0xcf, 0xc5, 0xf6, 0xea, 0xbb, 0xd4, 0xfd,
-  0x4e, 0x98, 0x6d, 0xcf, 0x62, 0xa7, 0x26, 0x5d, 0x54, 0x56, 0xe1, 0x9b,
-  0x2f, 0xd3, 0x2e, 0x55, 0x29, 0x9f, 0x87, 0x08, 0x76, 0xe1, 0xa6, 0xac,
-  0x73, 0xd6, 0xb4, 0x57, 0x01, 0x4a, 0xde, 0xc7, 0xa2, 0x48, 0x15, 0xe8,
-  0x9e, 0x79, 0x2a, 0x9e, 0x7e, 0xfc, 0xd8, 0xdd, 0x09, 0x11, 0xc6, 0x19,
-  0xf6, 0x9e, 0x63, 0x7a, 0xe5, 0x82, 0x7c, 0xf6, 0xf1, 0x63, 0xf3, 0xcb,
-  0x38, 0x3a, 0xbf, 0x78, 0x04, 0x2a, 0x2b, 0x52, 0x5c, 0xe8, 0x4a, 0xa5,
-  0xc1, 0x2a, 0x1a, 0xd4, 0x93, 0xa2, 0x37, 0xde, 0xa5, 0xb9, 0x60, 0x38,
-  0x76, 0x5c, 0x55, 0xac, 0x9c, 0x0a, 0xe3, 0xaa, 0xaf, 0x33, 0x7f, 0x87,
-  0x01, 0x17, 0xf4, 0x9a, 0x38, 0x86, 0x94, 0xd7, 0xd5, 0x13, 0x69, 0xb5,
-  0xb5, 0x8b, 0xa5, 0xe6, 0x47, 0x77, 0xe0, 0xcb, 0x72, 0x59, 0x76, 0x94,
-  0xfc, 0x5a, 0xce, 0xeb, 0x9c, 0xb3, 0x36, 0xb9, 0x6c, 0x3b, 0xbd, 0xbe,
-  0x4b, 0xeb, 0x9f, 0xcf, 0x97, 0x75, 0x66, 0xf0, 0xd9, 0xdc, 0xa1, 0x9d,
-  0xad, 0xe8, 0xb2, 0x4f, 0x91, 0x39, 0x64, 0xe1, 0x1f, 0x56, 0x82, 0x2b,
-  0x40, 0x71, 0xe3, 0x71, 0x09, 0xa0, 0xbb, 0x24, 0xfc, 0x28, 0xc9, 0xf6,
-  0xf9, 0xd5, 0x18, 0xab, 0x99, 0xf8, 0x34, 0x70, 0x81, 0x22, 0xa3, 0xc5,
-  0x96, 0xa0, 0xf8, 0x84, 0x51, 0x12, 0x48, 0x6b, 0x06, 0x5b, 0xbd, 0x2a,
-  0x4a, 0xda, 0xd0, 0x99, 0xca, 0x44, 0x12, 0xdf, 0xdf, 0x39, 0xed, 0xd2,
-  0x95, 0xab, 0xe7, 0x2e, 0x99, 0x16, 0x5c, 0x79, 0x51, 0x44, 0xd7, 0xa2,
-  0x56, 0x29, 0xda, 0x8a, 0x46, 0xf2, 0xea, 0xda, 0xa8, 0x1f, 0xba, 0x28,
-  0xf7, 0xc2, 0x63, 0xf8, 0xcf, 0xcf, 0x16, 0x0e, 0xd6, 0xe8, 0x81, 0x2a,
-  0xf4, 0xc6, 0xad, 0xaa, 0x69, 0x96, 0x2d, 0x34, 0xf8, 0x66, 0x56, 0x2c,
-  0xe7, 0xb5, 0x9d, 0x43, 0x3b, 0x86, 0x22, 0xa0, 0x28, 0x15, 0x6a, 0x4c,
-  0xe4, 0xaa, 0x03, 0x9e, 0xb0, 0x70, 0xc1, 0x8e, 0xb1, 0x6c, 0x12, 0x78,
-  0x96, 0xeb, 0xf6, 0xb9, 0xda, 0xcc, 0xeb, 0x50, 0xd6, 0x8a, 0x9f, 0x48,
-  0xb7, 0x65, 0xba, 0xca, 0xba, 0x6d, 0x8e, 0x64, 0x74, 0xad, 0xb7, 0x9a,
-  0x39, 0x63, 0x5d, 0xf8, 0x24, 0xc1, 0x39, 0x62, 0x69, 0x95, 0xed, 0x98,
-  0x57, 0xcc, 0xe0, 0x95, 0xfd, 0x31, 0xae, 0x41, 0x55, 0xb8, 0xc8, 0x06,
-  0x63, 0x2d, 0xa8, 0x95, 0xc7, 0x4b, 0xd8, 0x61, 0xb5, 0x9c, 0x23, 0xd5,
-  0x52, 0x71, 0xcc, 0x32, 0xe1, 0xc2, 0x34, 0x1d, 0xb5, 0x61, 0xec, 0x03,
-  0x4f, 0x01, 0x5d, 0x7c, 0x9d, 0xff, 0x2a, 0x82, 0x70, 0x94, 0xbc, 0x8a,
-  0x26, 0x2e, 0x04, 0x20, 0x9c, 0xb7, 0x19, 0x0f, 0x6a, 0xb6, 0x21, 0x02,
-  0xc7, 0x19, 0x25, 0xc8, 0xf9, 0xed, 0x85, 0xed, 0xb8, 0x3d, 0x57, 0xf5,
-  0xae, 0x5b, 0x42, 0x58, 0xf8, 0x8a, 0x8d, 0x8a, 0xb1, 0xe5, 0x52, 0x4c,
-  0x03, 0xd8, 0x4f, 0x9b, 0x15, 0x87, 0xb0, 0x73, 0x77, 0x5b, 0xf8, 0x78,
-  0x5a, 0x20, 0x6e, 0xba, 0x72, 0x6a, 0x61, 0xd9, 0x01, 0x6b, 0xe3, 0x22,
-  0x69, 0xc2, 0x6e, 0x26, 0x61, 0xa5, 0x65, 0x2d, 0xb4, 0xfc, 0xae, 0x00,
-  0x70, 0x8a, 0xab, 0x7c, 0xe8, 0xda, 0xd1, 0x37, 0x3b, 0x5c, 0xda, 0xda,
-  0xd1, 0x7a, 0xaa, 0xbd, 0x26, 0xc2, 0x97, 0x0e, 0x9a, 0xf1, 0x70, 0x24,
-  0xe4, 0xe0, 0xda, 0x8a, 0x18, 0xe1, 0x8e, 0xeb, 0x98, 0x56, 0x00, 0x9c,
-  0x0d, 0x76, 0x08, 0xbf, 0x2a, 0x07, 0x65, 0x60, 0x3e, 0x91, 0xb2, 0xd0,
-  0xbc, 0x03, 0xd4, 0x48, 0x5e, 0x4c, 0x38, 0x9c, 0x43, 0x38, 0x4a, 0x27,
-  0xb7, 0x52, 0xb0, 0x11, 0x3c, 0xf0, 0xb6, 0xd5, 0xb0, 0xc5, 0xeb, 0x52,
-  0x5c, 0x32, 0xe9, 0xcf, 0x7a, 0x56, 0x01, 0xd7, 0x68, 0x8c, 0xcb, 0xdd,
-  0xd6, 0x2b, 0xa1, 0xb8, 0x89, 0x83, 0x31, 0xed, 0xd6, 0x62, 0x93, 0xd1,
-  0xab, 0xcc, 0x33, 0xda, 0xff, 0x42, 0x26, 0x55, 0x41, 0x82, 0xaa, 0xf2,
-  0x69, 0x37, 0x39, 0x6d, 0xc8, 0x1f, 0x8a, 0xfa, 0xf1, 0xb7, 0x65, 0xce,
-  0x05, 0x7c, 0x19, 0x2c, 0xe7, 0x75, 0x81, 0xfd, 0xaf, 0x34, 0xb9, 0xe1,
-  0x8a, 0xa5, 0x39, 0x8d, 0x71, 0x2a, 0x95, 0xab, 0x50, 0xf7, 0x1d, 0x05,
-  0x1b, 0xc5, 0x53, 0x06, 0x56, 0xce, 0x90, 0x0b, 0x59, 0xcd, 0xe8, 0x92,
-  0x1a, 0xb8, 0x82, 0x4c, 0xc4, 0x10, 0x22, 0xb5, 0xca, 0xe4, 0x3a, 0x49,
-  0xab, 0x9b, 0xae, 0x7c, 0xdc, 0x6b, 0x64, 0x5a, 0xb1, 0xbc, 0xa8, 0x5e,
-  0x92, 0x1a, 0xc9, 0x7b, 0xa4, 0x97, 0x6e, 0x0b, 0x34, 0x2a, 0xdd, 0x91,
-  0xa8, 0xa1, 0xcb, 0x4d, 0x59, 0x88, 0x7f, 0x9b, 0x6c, 0x1a, 0x51, 0xaf,
-  0x55, 0x5a, 0x4d, 0xfb, 0x79, 0x9b, 0xf0, 0x05, 0x58, 0xd9, 0x85, 0x0f,
-  0x79, 0x11, 0x82, 0xd1, 0x7e, 0x87, 0x07, 0x80, 0xb3, 0xef, 0x60, 0x9d,
-  0x3f, 0xc4, 0x6e, 0x9e, 0xec, 0x36, 0x15, 0xb5, 0xdf, 0x16, 0x66, 0x6b,
-  0x88, 0x8b, 0x8d, 0x60, 0xc5, 0x87, 0x22, 0x6c, 0x57, 0x54, 0x22, 0x0a,
-  0x02, 0x69, 0x1b, 0x35, 0xa3, 0x22, 0x63, 0xb2, 0x30, 0xd9, 0x44, 0x03,
-  0x65, 0x59, 0x4a, 0x8e, 0x05, 0xd2, 0x6e, 0x8b, 0xd5, 0xf1, 0x53, 0x22,
-  0x67, 0x87, 0x4c, 0x80, 0x44, 0x4c, 0x7d, 0x26, 0x9d, 0x98, 0x20, 0xe6,
-  0x8b, 0x48, 0xf6, 0x2b, 0x39, 0xda, 0xbe, 0x22, 0x26, 0xa8, 0x90, 0xb1,
-  0x8f, 0x9c, 0x98, 0xc8, 0x65, 0x7a, 0xa4, 0x62, 0x53, 0x5e, 0x47, 0xea,
-  0x77, 0x36, 0x82, 0xef, 0xab, 0x6a, 0x2a, 0x11, 0x6c, 0x74, 0x84, 0x05,
-  0x52, 0x32, 0x11, 0x7c, 0x49, 0x41, 0x96, 0xbc, 0x28, 0xef, 0x2d, 0x80,
-  0x15, 0xe0, 0x23, 0x17, 0x27, 0xc3, 0x10, 0x59, 0xc7, 0x4a, 0x22, 0x74,
-  0xf8, 0x2d, 0xd2, 0xd2, 0x45, 0x63, 0x60, 0xcb, 0x32, 0x67, 0xc0, 0x84,
-  0x6f, 0x18, 0x5b, 0x54, 0xf3, 0xb9, 0xd5, 0x9d, 0x54, 0xeb, 0x66, 0xfb,
-  0x1c, 0x4a, 0xc7, 0x83, 0x24, 0x30, 0x1c, 0x09, 0x8e, 0x0e, 0x0d, 0xbe,
-  0x6f, 0x00, 0x3f, 0x60, 0x8d, 0x3c, 0x1d, 0xe2, 0xe4, 0x7f, 0x13, 0x09,
-  0x48, 0xd4, 0xb2, 0x7e, 0xc7, 0x32, 0x55, 0x27, 0x00, 0xb5, 0x9f, 0x72,
-  0x9c, 0x41, 0x36, 0x1f, 0x97, 0xf7, 0x8b, 0x30, 0xe6, 0x72, 0xf2, 0x09,
-  0xc5, 0xda, 0x43, 0xfa, 0x03, 0x3a, 0x3f, 0x18, 0x31, 0x4a, 0x4a, 0x25,
-  0x92, 0x8e, 0x46, 0x9f, 0xb8, 0x01, 0x06, 0xf4, 0xcf, 0x37, 0xec, 0x2e,
-  0xef, 0x7e, 0xbb, 0x39, 0x98, 0x11, 0x4d, 0x6a, 0x10, 0x4a, 0x63, 0x3d,
-  0x4c, 0x58, 0x82, 0x53, 0x09, 0x05, 0xbc, 0xc4, 0x00, 0xb3, 0xe1, 0xfb,
-  0x13, 0x57, 0x53, 0x7b, 0x93, 0x97, 0x6c, 0xc9, 0x76, 0xea, 0x5e, 0x63,
-  0xb7, 0x79, 0x79, 0x22, 0x11, 0x8c, 0x86, 0x28, 0x1a, 0xee, 0x3e, 0xed,
-  0xa4, 0x26, 0xd3, 0xdb, 0xe6, 0x07, 0x45, 0x27, 0x56, 0xef, 0xff, 0x85,
-  0x70, 0x9f, 0x5a, 0xad, 0x57, 0x9f, 0xba, 0xed, 0x6e, 0xa3, 0x1f, 0xce,
-  0x75, 0xfc, 0x87, 0x76, 0x83, 0x67, 0xdf, 0x5e, 0x11, 0xe6, 0x20, 0x00,
-  0x5b, 0xed, 0xe4, 0x9f, 0x88, 0x8d, 0x35, 0x6c, 0xbf, 0x6e, 0xa4, 0xed,
-  0xe0, 0xf2, 0xe2, 0x02, 0x21, 0x29, 0x27, 0x04, 0x31, 0x32, 0xa5, 0x26,
-  0x7b, 0x25, 0x97, 0xd3, 0xf4, 0x2e, 0x56, 0x00, 0x87, 0x4f, 0x92, 0xa0,
-  0x7a, 0xd0, 0x64, 0xc3, 0xc8, 0xee, 0xca, 0x0f, 0xf8, 0x9b, 0xa3, 0x83,
-  0xe1, 0xc5, 0xa0, 0x7d, 0xcf, 0x75, 0xd2, 0x4d, 0xb1, 0x7a, 0x1e, 0x54,
-  0x1a, 0x86, 0x56, 0x92, 0x13, 0x11, 0xef, 0xa2, 0xc8, 0xb4, 0x3c, 0x38,
-  0x19, 0x1b, 0xc9, 0x4f, 0xd2, 0xba, 0x24, 0x22, 0x44, 0x20, 0x02, 0x59,
-  0x2c, 0x65, 0x27, 0xf0, 0x28, 0x9f, 0xf2, 0x14, 0x68, 0x60, 0xc4, 0xf0,
-  0x67, 0x95, 0xca, 0xcf, 0x15, 0x4a, 0xe6, 0x16, 0x53, 0x58, 0x8a, 0x22,
-  0xa5, 0xa0, 0xda, 0xdb, 0xf6, 0xe3, 0xc1, 0xf9, 0xbb, 0xe3, 0x77, 0xdf,
-  0xee, 0x37, 0x2e, 0xea, 0x29, 0xa0, 0x85, 0x35, 0x6e, 0x41, 0xaa, 0x50,
-  0xc9, 0x72, 0x89, 0x49, 0x7d, 0x74, 0x1f, 0x14, 0x84, 0x6b, 0x13, 0xf5,
-  0x34, 0xbd, 0x12, 0x37, 0x4c, 0x75, 0x23, 0xd6, 0x4a, 0xad, 0xcd, 0xc9,
-  0x10, 0x3d, 0x2d, 0x2a, 0x69, 0xe5, 0x3f, 0x62, 0x93, 0xd9, 0x7c, 0x78,
-  0x5b, 0xdc, 0x74, 0xe2, 0x63, 0x7f, 0xcc, 0xe7, 0x52, 0xdc, 0xab, 0x61,
-  0x07, 0x69, 0xee, 0xb3, 0x69, 0x73, 0x41, 0x7d, 0x16, 0xd4, 0xcb, 0x58,
-  0x85, 0xf6, 0xc0, 0xe5, 0x93, 0x71, 0xd7, 0xff, 0xf6, 0x35, 0xe8, 0xd6,
-  0x50, 0x0b, 0x4a, 0xe4, 0xfd, 0x96, 0x35, 0x78, 0xfa, 0xb4, 0xb5, 0x06,
-  0x74, 0x2d, 0x55, 0x4f, 0xc5, 0x06, 0xfa, 0x40, 0x62, 0x46, 0x60, 0x72,
-  0x43, 0x88, 0xdc, 0xe9, 0xe1, 0xf7, 0xc3, 0xa7, 0x8f, 0x66, 0x64, 0xc8,
-  0x1b, 0x5d, 0x28, 0x87, 0x47, 0x72, 0x32, 0x9a, 0x62, 0xde, 0xb3, 0xd0,
-  0x54, 0x1e, 0x39, 0xd9, 0xcd, 0x32, 0x98, 0xb0, 0x7e, 0xe6, 0xc5, 0xd2,
-  0xd5, 0x60, 0x0b, 0x20, 0x31, 0x7b, 0xae, 0x52, 0xdf, 0x7d, 0xa4, 0xc8,
-  0xbd, 0x55, 0xc8, 0x0c, 0x6a, 0x62, 0x76, 0xa2, 0x26, 0x35, 0xd7, 0x72,
-  0x6f, 0x77, 0xf0, 0x45, 0xaf, 0x2d, 0x67, 0x12, 0xb3, 0x22, 0xc1, 0x7b,
-  0xba, 0x44, 0xdf, 0x92, 0x94, 0x69, 0x96, 0x5d, 0x17, 0xc5, 0x1b, 0x11,
-  0x08, 0xaa, 0xa7, 0x2e, 0xd9, 0x03, 0xb7, 0xb8, 0x1f, 0xac, 0x6e, 0x6f,
-  0xaa, 0x4f, 0xed, 0x6f, 0x6f, 0x7b, 0x43, 0xa7, 0xc4, 0x9c, 0x0e, 0x3e,
-  0x9f, 0x3a, 0x26, 0x7d, 0xa6, 0xbf, 0x8b, 0x28, 0xd2, 0x4f, 0xa3, 0x8a,
-  0x15, 0x9e, 0xdf, 0x4f, 0xa6, 0x8a, 0x2f, 0x57, 0xf1, 0x7b, 0x77, 0x5d,
-  0xfe, 0x06, 0xba, 0x10, 0xa5, 0xee, 0x7f, 0x27, 0xaa, 0x48, 0x93, 0x4f,
-  0xa3, 0x8b, 0xb4, 0x4d, 0x18, 0x11, 0xdc, 0x94, 0xcf, 0x89, 0x5c, 0xcd,
-  0xa3, 0x78, 0xd6, 0x77, 0xf5, 0xd5, 0x7e, 0x07, 0xc5, 0x3c, 0xd3, 0x99,
-  0x6e, 0xb2, 0x6f, 0x40, 0x9d, 0xe2, 0x86, 0x0f, 0x6d, 0x2e, 0x9a, 0x15,
-  0x85, 0xb4, 0x44, 0x28, 0xda, 0xb2, 0x0b, 0x71, 0x35, 0x0f, 0x8a, 0x50,
-  0x57, 0x27, 0xcc, 0xfd, 0xb7, 0xd3, 0xda, 0xff, 0x11, 0x1c, 0xe8, 0x99,
-  0xaf, 0x8e, 0xf7, 0x29, 0x24, 0xf7, 0xec, 0xda, 0x91, 0x5c, 0x07, 0xb5,
-  0x3b, 0xe0, 0x4d, 0x9f, 0x39, 0xb9, 0xab, 0x2d, 0xda, 0xb9, 0x55, 0x87,
-  0x1d, 0xed, 0xae, 0x2c, 0xe6, 0x57, 0xf8, 0x25, 0xa8, 0xe0, 0x24, 0x26,
-  0x12, 0x4b, 0x44, 0xea, 0x98, 0x52, 0x79, 0x6a, 0x0e, 0x6f, 0x24, 0x30,
-  0xdb, 0x0b, 0xac, 0x25, 0x8d, 0xa0, 0x73, 0x67, 0x3e, 0x7b, 0x94, 0xd8,
-  0x3b, 0xc9, 0x8c, 0x4a, 0xef, 0x46, 0xdc, 0x7d, 0xa9, 0x12, 0x68, 0x34,
-  0xee, 0xfc, 0x57, 0x91, 0x58, 0x53, 0x8e, 0x11, 0x98, 0x3e, 0x7e, 0xd7,
-  0x86, 0x74, 0xee, 0xd8, 0x68, 0xd2, 0x81, 0xca, 0x7c, 0x28, 0xff, 0xf1,
-  0xff, 0x14, 0x1e, 0xfa, 0xec, 0xd3, 0xc8, 0xf9, 0xbf, 0xe2, 0x66, 0xfd,
-  0xdf, 0x88, 0x78, 0x63, 0xdb, 0xbc, 0xa9, 0xa0, 0xa6, 0xa2, 0x11, 0xc9,
-  0xc5, 0xb2, 0xe5, 0xd1, 0x4d, 0x58, 0x91, 0xe1, 0x55, 0x3c, 0x3e, 0xfb,
-  0xe1, 0x39, 0x07, 0x45, 0x0e, 0xbb, 0xf5, 0x8f, 0x4e, 0x5e, 0x1f, 0x9c,
-  0x45, 0x6e, 0x86, 0xab, 0xaa, 0x4a, 0x17, 0xb9, 0x59, 0x4b, 0x1e, 0x31,
-  0xde, 0x78, 0xeb, 0x74, 0xc7, 0x46, 0xa3, 0xdb, 0x65, 0x2a, 0x22, 0x3c,
-  0x7d, 0xe3, 0x99, 0x33, 0xa7, 0x5c, 0xfe, 0x6d, 0x12, 0x77, 0x5f, 0x3e,
-  0x64, 0x0b, 0xca, 0xeb, 0x07, 0x4d, 0x3e, 0xee, 0x98, 0x37, 0x52, 0xa6,
-  0x57, 0x4d, 0x4c, 0xcc, 0x3b, 0x6d, 0x7f, 0xd4, 0xca, 0xac, 0x69, 0xdf,
-  0xfa, 0x43, 0x8d, 0x47, 0x12, 0xbb, 0x7c, 0x5f, 0xdb, 0xc0, 0xea, 0xd5,
-  0x17, 0xd5, 0xea, 0xc4, 0xaa, 0x5d, 0xe7, 0xcb, 0x4b, 0xc6, 0xf1, 0xaf,
-  0x3a, 0x49, 0xa3, 0x77, 0x5c, 0x63, 0xc5, 0xe5, 0x1b, 0xcb, 0xd3, 0x6e,
-  0xd7, 0xa5, 0xec, 0xa9, 0x66, 0xbb, 0xce, 0xc7, 0xf9, 0x22, 0x9d, 0x6a,
-  0x16, 0xf0, 0x43, 0xe5, 0x0f, 0x3b, 0xe5, 0x4b, 0x9b, 0x13, 0x22, 0x7d,
-  0xbf, 0x8d, 0xb2, 0x0b, 0xf2, 0x0f, 0xea, 0x12, 0x58, 0x51, 0xf2, 0x20,
-  0xc3, 0x5d, 0x31, 0xe3, 0xd4, 0x54, 0xc0, 0x39, 0x1d, 0x60, 0x79, 0xfc,
-  0x40, 0x37, 0x59, 0x0d, 0x76, 0x1a, 0x64, 0x95, 0xed, 0xbe, 0x78, 0xbe,
-  0x9b, 0x54, 0xe9, 0x3d, 0x23, 0x88, 0x55, 0xfa, 0xf2, 0xd3, 0xc1, 0x93,
-  0x6d, 0x20, 0x25, 0xe6, 0xb5, 0xab, 0x18, 0x38, 0x12, 0x61, 0x03, 0xcd,
-  0x07, 0xd0, 0x2a, 0x0e, 0x39, 0xca, 0xca, 0x92, 0xbe, 0x3b, 0x3a, 0x4c,
-  0xa4, 0xda, 0x0e, 0xa7, 0x84, 0xb7, 0x94, 0xdc, 0x44, 0xd6, 0x0d, 0x0b,
-  0x67, 0xe5, 0x75, 0x63, 0x8a, 0x79, 0x64, 0x39, 0x8c, 0x34, 0x39, 0xa9,
-  0x63, 0xee, 0x06, 0x02, 0x5e, 0x29, 0x54, 0xaa, 0xeb, 0x12, 0x85, 0xc9,
-  0x0a, 0x97, 0x24, 0x84, 0x04, 0x78, 0xb8, 0xa2, 0x6c, 0x55, 0x93, 0xa6,
-  0x5e, 0xc6, 0x83, 0xc7, 0xce, 0x1d, 0x84, 0x0d, 0x9c, 0xb0, 0xa8, 0xce,
-  0x23, 0x1e, 0x7e, 0x7d, 0xc7, 0xea, 0xdc, 0x35, 0x72, 0x6d, 0x7c, 0xbd,
-  0xd7, 0xe3, 0x18, 0x52, 0x95, 0x2f, 0x56, 0x24, 0x45, 0x26, 0xa7, 0xc0,
-  0x5c, 0xdc, 0xe8, 0x6f, 0xd8, 0x35, 0x65, 0x61, 0x55, 0x5a, 0x0a, 0x28,
-  0x56, 0xb8, 0xeb, 0x9f, 0x2e, 0xb7, 0xd6, 0xb8, 0x0d, 0x48, 0x95, 0x9f,
-  0x67, 0x75, 0x5f, 0x5b, 0x7b, 0x79, 0x7a, 0x76, 0xf1, 0xea, 0x36, 0xed,
-  0xc0, 0x61, 0x01, 0x52, 0xd9, 0xea, 0xcc, 0x78, 0x33, 0x3a, 0xde, 0x0c,
-  0x72, 0xe6, 0x86, 0x2e, 0x79, 0xcc, 0x9e, 0x8c, 0x41, 0x0f, 0x5e, 0x5c,
-  0xfc, 0xe5, 0xec, 0xe8, 0xd5, 0x4b, 0x18, 0xe1, 0xbf, 0x82, 0x27, 0xa4,
-  0x6a, 0xd8, 0xe4, 0x93, 0xfa, 0x7e, 0xd1, 0xbd, 0x19, 0x7f, 0x7a, 0x7d,
-  0x3c, 0x3c, 0x3b, 0x39, 0x3d, 0x7c, 0xf5, 0xf2, 0x27, 0x58, 0x1b, 0x68,
-  0xf5, 0xee, 0x83, 0x77, 0xdd, 0x67, 0x2e, 0x0f, 0xa6, 0x5b, 0x40, 0xfd,
-  0xe8, 0xc7, 0x0f, 0x47, 0xef, 0x7e, 0x78, 0xf5, 0xf2, 0x36, 0x2d, 0x7b,
-  0x98, 0x9f, 0xbc, 0x0d, 0x40, 0x9b, 0xf9, 0x6d, 0x4e, 0x97, 0x0d, 0x88,
-  0xd8, 0x55, 0xac, 0x0b, 0xd6, 0xe8, 0x02, 0x6b, 0xb4, 0x5c, 0x20, 0xc8,
-  0xf4, 0x81, 0x68, 0x43, 0xe6, 0xb2, 0xbe, 0x64, 0x79, 0x93, 0x3a, 0x82,
-  0xc8, 0x46, 0x4b, 0xfc, 0xd3, 0x70, 0x49, 0x44, 0x83, 0xb1, 0xd4, 0x1e,
-  0x2d, 0x31, 0x2e, 0x75, 0x9f, 0x7c, 0xd5, 0x34, 0xab, 0xd3, 0xe8, 0x1a,
-  0xe6, 0xba, 0x5c, 0x87, 0x1e, 0x91, 0x49, 0xb0, 0xc7, 0x1f, 0x0c, 0xad,
-  0x14, 0xde, 0xe5, 0xa3, 0xb6, 0x5d, 0x50, 0x99, 0x54, 0xcf, 0xa6, 0x29,
-  0xe4, 0x8c, 0x04, 0xb2, 0x6d, 0x71, 0xac, 0xd3, 0xae, 0xd9, 0x2f, 0xc8,
-  0xa5, 0xe0, 0xa8, 0x07, 0x05, 0xab, 0x2c, 0xa4, 0x86, 0x3c, 0x8f, 0xc7,
-  0x2a, 0x4b, 0x34, 0x67, 0xa1, 0x50, 0x97, 0xb1, 0xac, 0x64, 0x9e, 0x00,
-  0x4a, 0xa6, 0xdc, 0xb8, 0x71, 0x95, 0x42, 0xbf, 0xcd, 0xa4, 0x18, 0xcb,
-  0x59, 0x0c, 0xe2, 0x4d, 0x23, 0x69, 0x93, 0x6a, 0x94, 0xd7, 0x6a, 0x8a,
-  0xe2, 0x02, 0x86, 0x48, 0x89, 0x94, 0x4e, 0x60, 0x65, 0xbb, 0x00, 0x75,
-  0xd9, 0x58, 0x5f, 0x84, 0xa3, 0xeb, 0x44, 0x86, 0x4b, 0x60, 0xe0, 0xce,
-  0x9c, 0x1d, 0xb6, 0xc2, 0x15, 0x1f, 0xd9, 0x1c, 0x6e, 0xb9, 0x2c, 0x58,
-  0xb4, 0x78, 0xf6, 0xde, 0x03, 0xd1, 0x47, 0xa0, 0x2b, 0x3a, 0x87, 0xb0,
-  0x2d, 0x28, 0xfb, 0x85, 0x5a, 0xef, 0xaf, 0xa3, 0xfe, 0x9f, 0xba, 0x18,
-  0xb9, 0xfa, 0x9f, 0x39, 0x1b, 0x88, 0x33, 0xe4, 0xf3, 0x10, 0xe9, 0x22,
-  0x8d, 0x16, 0x6e, 0x93, 0x14, 0xc0, 0xe4, 0x40, 0xc3, 0xd3, 0x68, 0xea,
-  0xbd, 0x76, 0x1f, 0x83, 0xf5, 0xa4, 0x51, 0x64, 0x50, 0x3c, 0x9e, 0x5b,
-  0x9d, 0x64, 0xcf, 0x7b, 0xb9, 0x22, 0x02, 0x29, 0xde, 0xc5, 0x81, 0x52,
-  0xf7, 0x18, 0x6a, 0x6b, 0x68, 0xec, 0xd9, 0x18, 0x11, 0xe5, 0xdd, 0x74,
-  0x41, 0x69, 0x98, 0x53, 0x73, 0x75, 0x15, 0xc6, 0x10, 0x63, 0xd4, 0x02,
-  0x46, 0xa3, 0x72, 0xa9, 0x25, 0xe2, 0xe5, 0x33, 0x5f, 0xae, 0xb4, 0xc9,
-  0xc2, 0x7c, 0x0c, 0xd8, 0x50, 0x36, 0x31, 0xb2, 0xa8, 0x7f, 0x69, 0x09,
-  0xc8, 0x60, 0x85, 0xfd, 0x0b, 0x1f, 0xcc, 0x89, 0x58, 0xcc, 0x08, 0xee,
-  0x82, 0x96, 0x68, 0xef, 0x5f, 0x74, 0x30, 0x53, 0x05, 0x77, 0x3d, 0x2f,
-  0x83, 0xec, 0x09, 0x0e, 0x1c, 0xc6, 0xdc, 0x85, 0x92, 0x34, 0x17, 0x8b,
-  0x85, 0x8a, 0x81, 0x46, 0x55, 0xc3, 0x23, 0xb3, 0x22, 0xdf, 0xbd, 0x4a,
-  0xd6, 0xaf, 0xa6, 0xc5, 0x68, 0x44, 0x93, 0x5a, 0xb7, 0x3b, 0x8e, 0x46,
-  0x98, 0x96, 0x57, 0x2c, 0xf4, 0xfa, 0x1a, 0xcf, 0xee, 0xb0, 0x72, 0xb1,
-  0x51, 0xee, 0x6b, 0x55, 0xce, 0x36, 0x76, 0x57, 0xbd, 0x4b, 0xba, 0xab,
-  0x5c, 0x06, 0xd4, 0x9b, 0x4a, 0x33, 0x0d, 0xd0, 0xe3, 0xcf, 0x13, 0xeb,
-  0xbf, 0x13, 0xdd, 0x8d, 0x1c, 0x63, 0x9f, 0x0e, 0xac, 0xcc, 0x87, 0x59,
-  0x8e, 0x56, 0x7f, 0xcc, 0x23, 0xf9, 0xbf, 0x98, 0x30, 0x4d, 0x60, 0xfd,
-  0x3f, 0x30, 0x8a, 0xdd, 0x1e, 0xfe, 0xdd, 0xfb, 0xcf, 0x75, 0x2b, 0xf2,
-  0x89, 0xaa, 0xef, 0x41, 0x41, 0xd1, 0x48, 0xfd, 0x50, 0xb8, 0x69, 0x57,
-  0x36, 0x9a, 0xcf, 0xae, 0x7e, 0xde, 0xed, 0xef, 0xee, 0xec, 0xec, 0xfc,
-  0x3a, 0x58, 0x60, 0xc5, 0x2e, 0xb9, 0x55, 0x40, 0x20, 0x06, 0xad, 0x6e,
-  0xcb, 0xf2, 0x6c, 0x07, 0x77, 0x7d, 0x3d, 0x5e, 0xf4, 0x51, 0x07, 0xbd,
-  0x1b, 0x8d, 0x74, 0xb1, 0x2c, 0xb9, 0xc0, 0x16, 0x4f, 0xee, 0xe2, 0xf0,
-  0xec, 0xc3, 0xbb, 0xd3, 0xd7, 0x47, 0x27, 0x07, 0x7f, 0x71, 0xc5, 0xff,
-  0x0c, 0x42, 0x03, 0x83, 0xf8, 0x90, 0xa5, 0xd5, 0xfd, 0x87, 0x2a, 0xab,
-  0xe9, 0xcb, 0xcd, 0x27, 0x5b, 0x08, 0xf6, 0x6b, 0xef, 0x29, 0x7c, 0x8b,
-  0x01, 0x00, 0xa1, 0x05, 0x87, 0x85, 0xe5, 0x04, 0x1b, 0x52, 0xc9, 0x6e,
-  0x33, 0x02, 0x1a, 0x03, 0xbd, 0x4c, 0x91, 0x9d, 0xd0, 0x01, 0xb2, 0x52,
-  0xf7, 0xb2, 0x2a, 0x9d, 0x28, 0x09, 0xf1, 0x26, 0x55, 0x18, 0x92, 0x64,
-  0x93, 0x44, 0xbd, 0x2f, 0x9e, 0xee, 0x3e, 0xd9, 0x6a, 0xb6, 0xfe, 0xb4,
-  0x15, 0xe9, 0x5b, 0xc3, 0xcd, 0x33, 0x9a, 0xde, 0x54, 0xf9, 0xdf, 0xe9,
-  0x1e, 0x03, 0x9e, 0x71, 0x37, 0x6c, 0xfe, 0x82, 0x91, 0x3a, 0x10, 0xa0,
-  0x80, 0xdf, 0x92, 0x6f, 0x4e, 0xbe, 0x47, 0xd2, 0x82, 0xd3, 0x91, 0x66,
-  0x02, 0x0d, 0x91, 0x7c, 0xf5, 0x6c, 0x77, 0x6f, 0xcb, 0x95, 0x41, 0x93,
-  0xa4, 0x27, 0x1c, 0xf6, 0x4e, 0x7c, 0xc4, 0xdf, 0xb3, 0xa0, 0x1e, 0x95,
-  0x70, 0x79, 0xef, 0x34, 0xe5, 0x20, 0x25, 0xbb, 0x36, 0x19, 0x69, 0x97,
-  0x9d, 0xfa, 0x35, 0x43, 0x1b, 0x23, 0x7d, 0xaa, 0x03, 0x29, 0x76, 0xe1,
-  0x51, 0x07, 0x06, 0x21, 0x2e, 0x21, 0x0d, 0x47, 0xb3, 0xae, 0xe2, 0xb2,
-  0xce, 0x3f, 0x5b, 0x76, 0x5a, 0xe9, 0x7c, 0x6b, 0x2e, 0xf6, 0xbc, 0x50,
-  0xc1, 0xaa, 0x8a, 0xaf, 0x73, 0x00, 0x73, 0xa7, 0x55, 0x15, 0x18, 0x47,
-  0x82, 0x67, 0x69, 0x32, 0x94, 0x05, 0x41, 0x3f, 0x08, 0xcf, 0x4a, 0x82,
-  0x78, 0xc9, 0xc9, 0x8e, 0xea, 0xa6, 0x0a, 0x5c, 0x52, 0xd3, 0xec, 0x2a,
-  0x1d, 0xdf, 0x27, 0x2e, 0xd3, 0x47, 0xd3, 0x32, 0x26, 0x45, 0x07, 0xc5,
-  0x1c, 0xf2, 0xee, 0x18, 0x6e, 0xb0, 0x69, 0x36, 0x81, 0x8f, 0x1c, 0xce,
-  0x4c, 0x29, 0xbc, 0x46, 0x97, 0xa6, 0x13, 0xf5, 0x1b, 0xa3, 0x53, 0x68,
-  0x88, 0xd5, 0xb1, 0x2c, 0xb6, 0xc4, 0x2d, 0xea, 0x03, 0xd9, 0x00, 0x5d,
-  0xf9, 0x91, 0x35, 0x7d, 0xfa, 0x65, 0x8b, 0x82, 0xa7, 0x15, 0x42, 0x28,
-  0x20, 0x23, 0x26, 0x2f, 0xed, 0xb7, 0xaf, 0xba, 0x61, 0xa7, 0x09, 0x7b,
-  0x63, 0xdb, 0x10, 0x7c, 0x2c, 0x5a, 0x26, 0x90, 0x50, 0x10, 0x8d, 0x8c,
-  0xdb, 0x50, 0xb8, 0xa1, 0xc4, 0x9d, 0x39, 0x5e, 0x17, 0x9f, 0x08, 0x5f,
-  0x3f, 0xeb, 0xc3, 0xf3, 0xb3, 0xf5, 0x9e, 0xfa, 0x79, 0xa9, 0x8f, 0x3e,
-  0xfd, 0x9d, 0xf0, 0xf1, 0x43, 0xea, 0xe1, 0xb3, 0xa7, 0x6a, 0x83, 0xe5,
-  0x81, 0x72, 0xda, 0x78, 0xd7, 0x67, 0xc5, 0xdf, 0x21, 0x5d, 0xe2, 0xae,
-  0x28, 0x27, 0x82, 0x5b, 0xe3, 0x73, 0x64, 0x89, 0x57, 0x34, 0x27, 0x29,
-  0x56, 0xad, 0x9e, 0x95, 0x97, 0x5a, 0xb9, 0xcc, 0x7a, 0x0e, 0x98, 0xef,
-  0xf3, 0x20, 0x07, 0x9d, 0x90, 0xe2, 0xa7, 0xad, 0x85, 0x74, 0x63, 0x78,
-  0x69, 0xbf, 0xc5, 0x16, 0x32, 0x71, 0x8f, 0xf1, 0xa4, 0xf9, 0xd4, 0x1a,
-  0xa6, 0x1c, 0x16, 0x39, 0x8e, 0x3d, 0xb9, 0xd2, 0xe3, 0x65, 0x75, 0x7e,
-  0x82, 0x39, 0x0e, 0xcc, 0x8f, 0xae, 0xd0, 0x60, 0x7e, 0xf1, 0xb4, 0xee,
-  0x32, 0x0b, 0x1e, 0x91, 0xc2, 0xc2, 0x0f, 0x4f, 0x8f, 0x5b, 0x78, 0x89,
-  0x7f, 0xa3, 0xd3, 0xc2, 0x17, 0xde, 0x30, 0xf0, 0x79, 0xa7, 0xa5, 0x27,
-  0xae, 0xb9, 0xea, 0x6e, 0x72, 0x1d, 0xf3, 0x46, 0xfd, 0xf8, 0xde, 0xdd,
-  0xee, 0x0e, 0x76, 0xa2, 0xce, 0xf8, 0x37, 0xa8, 0x05, 0xdd, 0x04, 0xce,
-  0xc4, 0x74, 0xac, 0x96, 0x00, 0xfc, 0xe9, 0x5a, 0x58, 0x5d, 0xf5, 0x64,
-  0x03, 0x45, 0x5c, 0x01, 0x71, 0x89, 0x97, 0x1d, 0x4a, 0x49, 0xa3, 0x5a,
-  0xdf, 0xd3, 0xce, 0xc9, 0xa4, 0x41, 0xed, 0xfe, 0xbe, 0x41, 0xed, 0x7e,
-  0xd6, 0x41, 0xed, 0xfd, 0xbe, 0x41, 0xed, 0x7d, 0xae, 0x41, 0x95, 0x7d,
-  0x4b, 0xa9, 0x8a, 0x57, 0xb9, 0x38, 0xb7, 0xca, 0x7d, 0x90, 0x4a, 0x81,
-  0x07, 0x0c, 0xfe, 0x79, 0xa1, 0xb7, 0x64, 0xff, 0x48, 0xdf, 0xf5, 0xf1,
-  0x65, 0x22, 0xd7, 0x75, 0xc3, 0xca, 0x5d, 0x0d, 0x59, 0x17, 0x91, 0x6b,
-  0x51, 0x51, 0xc2, 0xe9, 0x2a, 0x09, 0x2b, 0x58, 0xce, 0xad, 0x1b, 0x1f,
-  0x56, 0xc7, 0x82, 0x77, 0xb7, 0xf0, 0x43, 0x96, 0x2b, 0x0c, 0xff, 0x63,
-  0xe9, 0x0b, 0xcf, 0x9b, 0x13, 0x06, 0xec, 0x55, 0x54, 0x6f, 0x3e, 0x52,
-  0xb0, 0xdd, 0x34, 0xb9, 0x5c, 0xb2, 0x68, 0x80, 0x27, 0x27, 0x4b, 0xc9,
-  0x2b, 0x64, 0x00, 0xde, 0x7c, 0xae, 0xe1, 0xef, 0x62, 0xfd, 0x25, 0x69,
-  0xea, 0xaa, 0xe0, 0x3f, 0x31, 0xce, 0x5e, 0xc7, 0xf8, 0x66, 0xb0, 0xbc,
-  0x93, 0x4c, 0x60, 0xda, 0x91, 0x92, 0x93, 0xcf, 0xa5, 0xc4, 0x2d, 0x6d,
-  0x6b, 0xcf, 0x61, 0xc3, 0xb0, 0x82, 0xa4, 0x7a, 0x86, 0xe8, 0x49, 0xef,
-  0x3b, 0x21, 0x1f, 0x50, 0x6b, 0x10, 0x30, 0x83, 0x48, 0x47, 0xd5, 0x2a,
-  0x91, 0x1f, 0x1b, 0x96, 0x5a, 0xb7, 0x7a, 0x9a, 0x2b, 0x6c, 0x35, 0x71,
-  0xff, 0x58, 0xe8, 0x41, 0xe0, 0x30, 0xab, 0xfe, 0x2d, 0xac, 0x0c, 0xf4,
-  0xfd, 0x08, 0x60, 0xc2, 0xc8, 0x5c, 0x91, 0x45, 0xeb, 0xd8, 0xf5, 0xaa,
-  0x71, 0x9e, 0x7f, 0x4e, 0x47, 0xa6, 0xf4, 0xca, 0xdd, 0x3c, 0xbc, 0x61,
-  0x08, 0x16, 0xe7, 0x2d, 0xd3, 0x3d, 0x6b, 0x6c, 0x9a, 0xdb, 0x33, 0x6c,
-  0x99, 0xdb, 0xb1, 0xff, 0xf7, 0x6c, 0x18, 0xfd, 0x3f, 0x2d, 0xdd, 0x3d,
-  0x52, 0x88, 0xf3, 0x69, 0x2a, 0x85, 0xc5, 0x65, 0x69, 0xa4, 0x2a, 0xc2,
-  0x34, 0x4b, 0x21, 0x6a, 0x99, 0x9b, 0xe1, 0x3a, 0xfb, 0x28, 0x06, 0x9a,
-  0xee, 0x65, 0x2f, 0x59, 0xc9, 0xd7, 0x66, 0xda, 0x3c, 0x18, 0x1e, 0x1e,
-  0x1f, 0x37, 0x0c, 0xbd, 0x58, 0x36, 0x8e, 0x71, 0xd5, 0x6c, 0xca, 0x0a,
-  0xe9, 0x69, 0x5e, 0x05, 0x8e, 0x21, 0x12, 0x0a, 0x24, 0xf3, 0x08, 0x95,
-  0x44, 0xaa, 0xdc, 0xb2, 0xeb, 0x53, 0x89, 0xe9, 0x5b, 0xce, 0x61, 0xc1,
-  0x41, 0xe2, 0xcf, 0xf5, 0x92, 0xb4, 0x93, 0xea, 0x9f, 0x4d, 0x90, 0x83,
-  0xcf, 0x4d, 0x7a, 0x91, 0xb4, 0xe5, 0xb3, 0x52, 0x33, 0xab, 0x39, 0x41,
-  0x81, 0x53, 0x3c, 0x24, 0xf5, 0x18, 0x00, 0x58, 0x50, 0xd4, 0x85, 0x02,
-  0x69, 0x90, 0x36, 0x5e, 0x2e, 0x0f, 0xec, 0xb4, 0x8e, 0x8e, 0xf5, 0x8a,
-  0x4d, 0x85, 0x55, 0x8b, 0x4b, 0xef, 0xb6, 0xb8, 0xf4, 0x72, 0x9e, 0x7f,
-  0x64, 0x3b, 0x75, 0x86, 0x22, 0x01, 0x69, 0x7d, 0xbd, 0xa2, 0x12, 0xf5,
-  0xa1, 0x55, 0xcd, 0x74, 0xc0, 0xa5, 0xb4, 0x08, 0x5c, 0x8a, 0x52, 0xea,
-  0x3c, 0x26, 0xd2, 0x46, 0x2f, 0xb4, 0xd6, 0x30, 0xc3, 0x8e, 0xd8, 0x88,
-  0xe7, 0x59, 0x0d, 0x2f, 0x53, 0x4b, 0x89, 0x6b, 0xc4, 0xf4, 0xf5, 0x97,
-  0x3d, 0xab, 0xfa, 0xcd, 0xb2, 0xcd, 0xfe, 0x4a, 0xd9, 0x2d, 0xc8, 0x7c,
-  0x0e, 0xea, 0x7d, 0x23, 0x1f, 0xd3, 0x24, 0x10, 0xbd, 0xf5, 0x04, 0xb2,
-  0x9c, 0x0d, 0x2f, 0x5e, 0xea, 0x89, 0x05, 0x6e, 0x0d, 0x92, 0x53, 0x47,
-  0x31, 0xfd, 0x79, 0x8f, 0x83, 0x81, 0xeb, 0x72, 0xac, 0xb1, 0xa5, 0xfc,
-  0x7b, 0xdf, 0x52, 0xe9, 0x63, 0x4c, 0x8a, 0x6b, 0x12, 0x42, 0x8d, 0xb8,
-  0x6f, 0x14, 0xbe, 0x74, 0xa3, 0xeb, 0x35, 0xcb, 0x47, 0x93, 0xe6, 0xc1,
-  0x95, 0x77, 0x25, 0xb1, 0xb4, 0xa3, 0x68, 0xcb, 0x24, 0xe2, 0x35, 0xcf,
-  0x45, 0x7a, 0x14, 0xf1, 0x4e, 0xb2, 0x41, 0xf5, 0x71, 0x05, 0x8a, 0x5c,
-  0x4c, 0xf3, 0x1a, 0x95, 0x99, 0x55, 0xef, 0x97, 0x3c, 0x89, 0x71, 0x31,
-  0x25, 0x7e, 0xd3, 0xf1, 0x0e, 0xe5, 0xae, 0x3c, 0x2c, 0x0c, 0xf5, 0xb3,
-  0x45, 0x51, 0x55, 0xb9, 0x56, 0xf4, 0x10, 0x9b, 0x29, 0xbf, 0x67, 0xf6,
-  0x91, 0xb0, 0xe7, 0x08, 0x26, 0x76, 0xc3, 0x10, 0xc0, 0x79, 0x8f, 0xb6,
-  0x19, 0xe3, 0x94, 0x56, 0x94, 0x03, 0x5a, 0xe3, 0xd9, 0x66, 0x56, 0x4a,
-  0xe9, 0x7b, 0xa2, 0x71, 0x52, 0xf0, 0xe8, 0x34, 0xfc, 0xf0, 0xcc, 0xf0,
-  0x34, 0x7e, 0xcc, 0xe7, 0x13, 0xb0, 0x18, 0xa9, 0x90, 0xa0, 0x7b, 0xe9,
-  0xcb, 0x62, 0x47, 0x79, 0xae, 0x30, 0x45, 0x7b, 0x53, 0x69, 0x55, 0x2c,
-  0xac, 0xf3, 0xf6, 0xb6, 0xc0, 0xf8, 0x46, 0x63, 0xc4, 0xcc, 0xba, 0xd8,
-  0xa1, 0x61, 0xad, 0x5b, 0xc9, 0x7d, 0x77, 0xb8, 0x96, 0xd0, 0xaa, 0x8a,
-  0x91, 0x54, 0xab, 0x4a, 0xfd, 0xc8, 0x2f, 0x72, 0x9c, 0x88, 0x81, 0x92,
-  0x44, 0xfb, 0x78, 0x72, 0xf6, 0x40, 0x2d, 0x4a, 0xa5, 0x8f, 0xa6, 0x6f,
-  0xc9, 0xe3, 0xa8, 0x9d, 0x58, 0x5d, 0x23, 0x7d, 0x03, 0xa6, 0x49, 0xb6,
-  0xd1, 0xae, 0xc5, 0x43, 0xc3, 0x0d, 0xd6, 0xba, 0xd7, 0x3a, 0x09, 0x1d,
-  0x50, 0x1a, 0x23, 0x4d, 0x8b, 0x4d, 0xe9, 0x42, 0x3c, 0xe8, 0xc6, 0xf6,
-  0x92, 0x86, 0x93, 0x59, 0x96, 0xae, 0xa7, 0xc1, 0xbb, 0xa5, 0xfa, 0x77,
-  0xcc, 0x6a, 0x2b, 0xeb, 0xda, 0xbd, 0x18, 0x90, 0xa3, 0x53, 0xb1, 0x49,
-  0x9f, 0x2d, 0xdd, 0x52, 0xa4, 0xf7, 0xd2, 0x17, 0xee, 0xe9, 0xd2, 0x75,
-  0xb3, 0x5a, 0x6c, 0xb8, 0x61, 0x20, 0x43, 0x49, 0x7c, 0x4c, 0x5e, 0x17,
-  0x77, 0xf3, 0xfe, 0x09, 0xc2, 0xb7, 0x93, 0x93, 0xe2, 0x0a, 0x5a, 0xeb,
-  0x3b, 0x26, 0xc5, 0xce, 0xae, 0xbd, 0x3f, 0x7b, 0x97, 0x6c, 0xbe, 0xc7,
-  0x9c, 0xce, 0x9c, 0x5f, 0x13, 0x8f, 0x6e, 0x25, 0x72, 0xf5, 0x12, 0x7b,
-  0x0c, 0xca, 0x08, 0xf5, 0x92, 0xa3, 0x9f, 0x0e, 0xde, 0x9e, 0x9d, 0x1c,
-  0xfd, 0xb2, 0x42, 0xa9, 0xc5, 0xc7, 0x5f, 0x07, 0x36, 0x38, 0xab, 0xcd,
-  0x46, 0x97, 0xf6, 0xf4, 0x7e, 0x15, 0x2f, 0x90, 0xe3, 0x63, 0x24, 0x38,
-  0x1c, 0x9e, 0x1d, 0xf7, 0x15, 0x5e, 0x44, 0xf8, 0x80, 0x62, 0x32, 0xca,
-  0x01, 0xb6, 0x94, 0xd5, 0xef, 0xbb, 0x21, 0xeb, 0xee, 0x3c, 0xf4, 0x3c,
-  0x32, 0x7b, 0x4f, 0xb0, 0xcc, 0x69, 0x0a, 0x71, 0x30, 0xfc, 0xda, 0x60,
-  0x4b, 0xc6, 0x1d, 0x1b, 0x9e, 0x2f, 0xbe, 0xca, 0xe6, 0x98, 0x69, 0xa6,
-  0x80, 0xc8, 0x2b, 0xb8, 0x28, 0xa3, 0xfc, 0x28, 0xf6, 0x33, 0x7c, 0x49,
-  0x9d, 0x7a, 0x69, 0xea, 0x5b, 0x1a, 0x39, 0xae, 0xa7, 0x71, 0x17, 0x42,
-  0x21, 0xc2, 0x3d, 0xda, 0x35, 0x37, 0xf7, 0x49, 0x94, 0x59, 0x26, 0xfb,
-  0xeb, 0x9f, 0x51, 0xd6, 0x7b, 0xef, 0x42, 0x41, 0x7e, 0xcb, 0x75, 0xf2,
-  0x89, 0xf7, 0x89, 0x16, 0x14, 0x7f, 0xf8, 0x3a, 0xf9, 0xed, 0x64, 0xa1,
-  0xf7, 0x83, 0x12, 0x86, 0x50, 0xc6, 0x84, 0x58, 0x8e, 0x50, 0x7f, 0xdb,
-  0xe5, 0xe7, 0x33, 0x55, 0x70, 0x83, 0x30, 0x3d, 0x74, 0x4d, 0x42, 0xcc,
-  0x5b, 0x39, 0x89, 0x08, 0x1c, 0x21, 0xdc, 0xfb, 0x8e, 0x5e, 0xfe, 0x49,
-  0x94, 0xc0, 0x84, 0x10, 0xfa, 0x14, 0x75, 0xdf, 0xbb, 0x91, 0x9e, 0x9f,
-  0x4a, 0x07, 0xef, 0x3f, 0x2f, 0x1d, 0x70, 0xcd, 0x9c, 0x97, 0xef, 0xcf,
-  0x4f, 0x56, 0x6e, 0x79, 0xaa, 0x9e, 0x02, 0x30, 0xf7, 0xcb, 0xac, 0x1e,
-  0x5f, 0x77, 0x6b, 0xff, 0x15, 0x15, 0xe2, 0xac, 0xc1, 0x95, 0xef, 0x1d,
-  0x22, 0x50, 0x27, 0x2b, 0x59, 0x05, 0x6f, 0x6d, 0x96, 0x9a, 0x04, 0xac,
-  0x03, 0x63, 0x81, 0x05, 0x40, 0xd3, 0xf1, 0x99, 0x66, 0x1e, 0xcd, 0x83,
-  0xfb, 0x8b, 0x55, 0x5d, 0x4a, 0x36, 0xa5, 0x6a, 0x61, 0x95, 0xac, 0xab,
-  0xbb, 0x61, 0x3d, 0xc2, 0xf8, 0xd6, 0x2f, 0xed, 0x2b, 0x9a, 0xc9, 0x96,
-  0xec, 0xbf, 0xb7, 0x4d, 0x37, 0x2a, 0x0e, 0xc9, 0x75, 0xaa, 0x32, 0x82,
-  0x94, 0x74, 0x88, 0xba, 0xf6, 0xe9, 0x26, 0xc8, 0x4a, 0xf6, 0x2f, 0x56,
-  0xcb, 0x51, 0x3f, 0xe4, 0xcc, 0x1c, 0x3d, 0x02, 0xb1, 0xfe, 0xf5, 0xf1,
-  0xe1, 0x45, 0x2f, 0x11, 0x24, 0x59, 0xcd, 0x21, 0xe1, 0x50, 0xa1, 0xb6,
-  0xb8, 0x81, 0x24, 0x13, 0x21, 0x57, 0xa4, 0x98, 0xb8, 0xaa, 0xf2, 0x10,
-  0x65, 0x5d, 0x74, 0x56, 0xb8, 0x8f, 0xbd, 0x00, 0xdb, 0x02, 0xf2, 0x68,
-  0xa7, 0xfa, 0x43, 0xb0, 0xe5, 0x2e, 0xbc, 0x0c, 0xf5, 0x8f, 0x64, 0x8a,
-  0x58, 0x43, 0xbd, 0x08, 0x5d, 0x05, 0x1b, 0xd0, 0xab, 0x26, 0xd7, 0xa6,
-  0x2b, 0xd2, 0x7d, 0x7d, 0x69, 0xbe, 0xca, 0xd7, 0x37, 0x72, 0x45, 0xac,
-  0xa2, 0xf5, 0x97, 0xa2, 0x71, 0x75, 0xe6, 0x56, 0x64, 0xd2, 0x6d, 0xa2,
-  0x3b, 0x2b, 0xee, 0xf0, 0x45, 0xe1, 0x4a, 0x94, 0xb3, 0x4b, 0x2d, 0x26,
-  0x4e, 0x29, 0x4d, 0x68, 0xe0, 0x44, 0xcf, 0xa5, 0xf8, 0xf6, 0x0b, 0x70,
-  0x38, 0x55, 0xfb, 0x34, 0x2b, 0x8b, 0x41, 0x5e, 0x3c, 0xf2, 0x4a, 0xcc,
-  0x75, 0x6c, 0x86, 0x6d, 0x77, 0x40, 0x42, 0x55, 0xa8, 0xf5, 0xc2, 0x37,
-  0xc0, 0x33, 0xe2, 0xdc, 0x6b, 0xfd, 0x7e, 0xbb, 0x4e, 0xa7, 0x37, 0x0a,
-  0x04, 0x32, 0x59, 0x96, 0x52, 0x6e, 0x99, 0x4d, 0xcc, 0xe6, 0x61, 0x1e,
-  0xb0, 0xaf, 0x17, 0xa0, 0xdf, 0x31, 0x18, 0xf6, 0xd1, 0xf2, 0xea, 0xca,
-  0x14, 0x67, 0x5a, 0x5b, 0x43, 0x26, 0xda, 0xa8, 0x12, 0xd1, 0xa1, 0x69,
-  0xd5, 0xd6, 0x97, 0xf3, 0x49, 0x56, 0x5a, 0x09, 0xac, 0x62, 0x02, 0x4b,
-  0xef, 0x41, 0xc2, 0x3a, 0x4f, 0x17, 0xa0, 0xa9, 0x0c, 0xab, 0xfc, 0x6c,
-  0x7c, 0xb5, 0x61, 0x38, 0x09, 0xeb, 0xd7, 0xa4, 0x8a, 0x20, 0xc7, 0x88,
-  0x74, 0xf2, 0x75, 0xd1, 0x89, 0x47, 0x52, 0x43, 0xba, 0x97, 0x6c, 0xbc,
-  0xdc, 0x88, 0x62, 0x84, 0x34, 0xdf, 0x11, 0x6b, 0x90, 0xd0, 0xcb, 0xd8,
-  0xb9, 0xfc, 0x69, 0x1f, 0xae, 0x73, 0xd2, 0x5d, 0x58, 0x1e, 0x56, 0xb4,
-  0x95, 0x44, 0xc2, 0xae, 0xda, 0xa4, 0x2e, 0x05, 0x31, 0x65, 0xe0, 0x7e,
-  0xa8, 0x3c, 0xd2, 0x8d, 0x7f, 0xd3, 0x11, 0xb8, 0x5a, 0x94, 0x8c, 0xc6,
-  0x7a, 0x59, 0x78, 0x98, 0x90, 0x0e, 0x34, 0x26, 0xc6, 0xd0, 0x8d, 0xfa,
-  0xf0, 0x65, 0xc9, 0xe5, 0x6e, 0x91, 0xca, 0xa4, 0xe0, 0x44, 0x5a, 0x52,
-  0x43, 0xe6, 0x54, 0x49, 0xfe, 0x99, 0xec, 0x14, 0x13, 0x0c, 0xa8, 0x24,
-  0x8f, 0x20, 0x8b, 0xa8, 0xec, 0xec, 0x74, 0x70, 0x5f, 0x84, 0x8e, 0x81,
-  0xcd, 0x4a, 0xe4, 0x13, 0x17, 0x8c, 0x1b, 0x7a, 0x19, 0x29, 0xa8, 0x07,
-  0xa4, 0x72, 0x8e, 0xbe, 0xd3, 0x40, 0x87, 0xa0, 0xc6, 0x76, 0x2d, 0x90,
-  0x0e, 0x92, 0xf2, 0x05, 0x66, 0xc7, 0x0f, 0x66, 0x73, 0x56, 0x2a, 0xf5,
-  0x38, 0xf5, 0xba, 0x55, 0x00, 0x04, 0x99, 0xc6, 0x50, 0x17, 0x9c, 0x26,
-  0xdc, 0xb4, 0xe4, 0x58, 0x64, 0xd2, 0xef, 0x35, 0x06, 0x34, 0x1a, 0x0b,
-  0x8d, 0x01, 0x91, 0x20, 0x86, 0x30, 0x63, 0xb8, 0x09, 0xb7, 0xc2, 0x49,
-  0xc2, 0xc1, 0xc5, 0x73, 0x87, 0x07, 0x39, 0xb6, 0x0a, 0x87, 0x34, 0x79,
-  0x29, 0x82, 0xe7, 0x6a, 0x00, 0x04, 0x8b, 0xf1, 0x09, 0xac, 0x43, 0x09,
-  0xaf, 0x1c, 0xe7, 0xf0, 0x1a, 0xaa, 0x3e, 0x6c, 0x99, 0xd3, 0x0c, 0x1e,
-  0x6b, 0xf6, 0x2b, 0x76, 0x8c, 0xf5, 0x6c, 0x9e, 0x65, 0x25, 0x51, 0x5a,
-  0x51, 0xfc, 0xef, 0xaa, 0x2e, 0x9d, 0x9b, 0x1d, 0x6c, 0x49, 0xa1, 0xc1,
-  0x34, 0x4e, 0xab, 0xce, 0x3e, 0xc2, 0xee, 0xf2, 0xb1, 0xe3, 0x1b, 0x52,
-  0x50, 0xf3, 0x90, 0x73, 0x59, 0x0c, 0x51, 0x25, 0x0a, 0x9e, 0xf6, 0xd2,
-  0x55, 0x37, 0xa0, 0x66, 0xa4, 0x9d, 0x02, 0x16, 0x35, 0x5f, 0xdf, 0xc9,
-  0xba, 0x8c, 0x07, 0xae, 0x26, 0x5c, 0x06, 0xe6, 0xf8, 0x67, 0x63, 0x96,
-  0x22, 0x23, 0xa5, 0x92, 0x13, 0xaf, 0xed, 0x0b, 0x66, 0x67, 0xc7, 0x33,
-  0x31, 0x55, 0xb7, 0xc6, 0xfa, 0xd7, 0x66, 0x13, 0x5b, 0xb7, 0x10, 0x85,
-  0x86, 0x98, 0xeb, 0x9a, 0x73, 0xab, 0x12, 0xf1, 0xbe, 0x4a, 0x18, 0x06,
-  0xa3, 0x01, 0x61, 0xd7, 0xa8, 0xd1, 0xfe, 0x7a, 0x5c, 0xff, 0x76, 0x6b,
-  0xc0, 0x41, 0xbd, 0xcc, 0x5e, 0x54, 0xab, 0x34, 0x03, 0x9e, 0xf4, 0x62,
-  0xf7, 0x13, 0x2a, 0xa0, 0xd6, 0x79, 0xbd, 0xec, 0x3a, 0xdf, 0x14, 0x86,
-  0x95, 0x7d, 0xd5, 0xcc, 0xc4, 0xb1, 0x13, 0xde, 0xa1, 0xcc, 0x07, 0x09,
-  0x06, 0xbf, 0x9a, 0x43, 0xaf, 0xd5, 0x8a, 0x38, 0x62, 0xc8, 0x5b, 0xa0,
-  0xe0, 0xb7, 0xed, 0x55, 0x07, 0x30, 0x2c, 0xf8, 0xd1, 0x35, 0xbd, 0x6f,
-  0xd4, 0xc0, 0x1f, 0xff, 0xc3, 0xbe, 0x64, 0xdc, 0xe1, 0xff, 0xb4, 0xc5,
-  0xd2, 0x61, 0xa7, 0x1d, 0x97, 0x29, 0x33, 0xb8, 0x3f, 0xf2, 0xa2, 0x70,
-  0xd5, 0x04, 0x59, 0x19, 0xc6, 0x44, 0x43, 0x73, 0x7f, 0x1c, 0xb8, 0x20,
-  0x14, 0x6b, 0x22, 0x99, 0x67, 0x77, 0xcc, 0xf3, 0xba, 0x3c, 0x4c, 0x8e,
-  0xf1, 0x2f, 0x74, 0x87, 0x11, 0x1d, 0xa7, 0x74, 0x1c, 0x11, 0x4d, 0x20,
-  0x50, 0x3e, 0xb2, 0x8d, 0xbf, 0xb0, 0xee, 0x85, 0x38, 0xad, 0x74, 0x24,
-  0xb0, 0xef, 0xfa, 0x79, 0xd7, 0x90, 0x89, 0x10, 0xaf, 0x7d, 0xde, 0x8d,
-  0x3f, 0xf6, 0x05, 0x53, 0x5a, 0x09, 0x5d, 0x21, 0xe2, 0xed, 0x33, 0xd9,
-  0x96, 0xbb, 0x7c, 0xfe, 0x64, 0xaf, 0x1f, 0x88, 0xad, 0xbd, 0x68, 0x94,
-  0x2c, 0x97, 0xcb, 0x1b, 0x8f, 0xd9, 0x7f, 0x3a, 0x16, 0xe6, 0xf0, 0xc7,
-  0x44, 0x41, 0xc9, 0x46, 0x0c, 0xc7, 0xb8, 0x14, 0x39, 0xfd, 0x2e, 0x34,
-  0x59, 0xac, 0xf4, 0x5a, 0x46, 0x89, 0x27, 0xd8, 0x1d, 0x07, 0x1a, 0x18,
-  0x0b, 0x23, 0xc4, 0x09, 0xa5, 0x81, 0x7e, 0x60, 0x37, 0xa9, 0xd2, 0xdd,
-  0xa1, 0x7c, 0xd6, 0xbf, 0xe0, 0xcf, 0xcc, 0xff, 0xa1, 0x0e, 0x74, 0x1a,
-  0x97, 0x05, 0x93, 0xf7, 0xba, 0xf8, 0x6d, 0x49, 0x2c, 0x02, 0x0f, 0x61,
-  0xe9, 0x74, 0xba, 0x3b, 0xe3, 0xb4, 0xc3, 0xf4, 0x41, 0xea, 0x9c, 0xe6,
-  0xb7, 0xd9, 0xc3, 0xad, 0x31, 0xce, 0xf8, 0x94, 0x64, 0x1a, 0x2b, 0xfb,
-  0x23, 0xd6, 0x69, 0x47, 0xc6, 0x16, 0x62, 0xca, 0x26, 0x65, 0xa2, 0xb7,
-  0xc1, 0x63, 0xcd, 0x41, 0x8a, 0xb2, 0x52, 0x1a, 0x41, 0xe1, 0x6d, 0xba,
-  0xe5, 0x0c, 0x95, 0xa8, 0x2e, 0xa6, 0x12, 0x89, 0x84, 0x96, 0x1f, 0x99,
-  0x2b, 0x42, 0x85, 0x04, 0x1f, 0x3c, 0x28, 0x07, 0xd8, 0x84, 0xc2, 0x53,
-  0x94, 0xb9, 0xa8, 0x55, 0x3a, 0x89, 0xee, 0x2d, 0xc0, 0xc6, 0x36, 0x44,
-  0x35, 0xc0, 0x4d, 0xc2, 0xc3, 0x63, 0x28, 0xf8, 0x91, 0x01, 0x54, 0x9b,
-  0xc3, 0xf5, 0xe1, 0xe6, 0xdc, 0x38, 0xe4, 0xaa, 0xee, 0x07, 0x42, 0xda,
-  0xe0, 0x81, 0xc2, 0xe1, 0xb6, 0x53, 0xf5, 0xe2, 0x03, 0x03, 0x3e, 0x7f,
-  0x60, 0xf8, 0xc7, 0x8b, 0xc0, 0xa4, 0xc4, 0x1f, 0xf0, 0x72, 0x09, 0x50,
-  0xe7, 0x72, 0x21, 0x85, 0x6c, 0x81, 0x54, 0x52, 0x88, 0x18, 0xd6, 0x09,
-  0x5d, 0xee, 0xae, 0x5c, 0xab, 0x68, 0x8d, 0x79, 0x00, 0x5b, 0xb9, 0x9b,
-  0x4f, 0x3b, 0x03, 0x83, 0x8a, 0xf2, 0x81, 0x91, 0xa7, 0x1c, 0x85, 0xd0,
-  0x1d, 0x92, 0x95, 0xa8, 0x1d, 0xd2, 0x82, 0xa6, 0x12, 0x9c, 0x55, 0xce,
-  0xdc, 0x5e, 0xce, 0x2d, 0x12, 0xeb, 0xe1, 0x81, 0xb1, 0xd2, 0xa7, 0xa5,
-  0xcc, 0xb3, 0x89, 0x0b, 0x54, 0xe4, 0x5d, 0xa4, 0x61, 0x32, 0x9e, 0x9e,
-  0xc5, 0xdd, 0x60, 0xa7, 0x1e, 0x99, 0x27, 0x67, 0x7f, 0xed, 0x09, 0x61,
-  0xa4, 0xd3, 0x3c, 0xf5, 0x48, 0xb6, 0x32, 0x05, 0x3e, 0x27, 0x3c, 0x61,
-  0x28, 0x78, 0xd7, 0xc5, 0xdd, 0xa3, 0x87, 0x4b, 0x22, 0xd0, 0x70, 0x95,
-  0x0f, 0x56, 0xac, 0x8c, 0x98, 0xd5, 0xdb, 0x2b, 0xd3, 0x5c, 0x10, 0x5d,
-  0x11, 0x2f, 0xbc, 0x45, 0xa2, 0x55, 0x93, 0x15, 0xa8, 0x5f, 0x49, 0xb2,
-  0x29, 0xa6, 0x1b, 0x4b, 0x32, 0xdc, 0x12, 0x0d, 0x37, 0x35, 0x2b, 0x83,
-  0x96, 0x24, 0x7b, 0xac, 0x39, 0xe6, 0x2d, 0x1d, 0x4c, 0x96, 0xee, 0x86,
-  0x73, 0x10, 0xee, 0x87, 0x7c, 0x11, 0xb0, 0x84, 0xe3, 0x33, 0x07, 0x77,
-  0xe7, 0x7c, 0xb5, 0x0a, 0xa7, 0xcd, 0x85, 0x92, 0xdc, 0x87, 0x38, 0x44,
-  0x8f, 0x8d, 0x63, 0xcc, 0x21, 0x2d, 0x89, 0xc0, 0xf7, 0x04, 0xa0, 0x02,
-  0x7d, 0x93, 0x3d, 0xd4, 0x44, 0x78, 0x7c, 0xc6, 0xe0, 0x78, 0x0f, 0x37,
-  0x47, 0x0f, 0x3d, 0x6f, 0x1e, 0xae, 0x17, 0x91, 0xc3, 0x25, 0x53, 0x92,
-  0x32, 0xd4, 0x3a, 0x25, 0x19, 0x7e, 0x98, 0x97, 0xa5, 0x8e, 0x2e, 0xe6,
-  0x03, 0xad, 0x61, 0x3e, 0x3c, 0x86, 0x60, 0x0e, 0x8f, 0x8e, 0x84, 0xfa,
-  0x32, 0x92, 0xa9, 0x70, 0xf9, 0x49, 0xd7, 0xe8, 0x9b, 0x6e, 0xdb, 0xc4,
-  0x7d, 0xc3, 0x28, 0x41, 0x86, 0xcf, 0xcc, 0x43, 0x89, 0x4b, 0x89, 0x49,
-  0x44, 0x68, 0x7c, 0x14, 0x74, 0x07, 0x63, 0x30, 0xf8, 0x98, 0xca, 0x8d,
-  0x81, 0x86, 0xe0, 0x3f, 0x94, 0x38, 0x10, 0x86, 0x15, 0x25, 0xd2, 0x55,
-  0x34, 0x32, 0xa3, 0xde, 0xdf, 0x47, 0x68, 0xdd, 0x71, 0x58, 0x77, 0x1f,
-  0x98, 0x8a, 0xd5, 0x7b, 0x60, 0xd8, 0x76, 0x0e, 0x37, 0x29, 0xd5, 0xd5,
-  0x30, 0x53, 0x76, 0xff, 0x84, 0x61, 0x71, 0x8b, 0xe9, 0x23, 0x6b, 0x81,
-  0x80, 0x5d, 0x37, 0x21, 0x4d, 0x52, 0xb3, 0x2b, 0x5b, 0x81, 0x7a, 0x80,
-  0xb9, 0xc2, 0x9c, 0x62, 0x8c, 0x8c, 0xb7, 0x87, 0x9b, 0x63, 0xc3, 0x52,
-  0x1a, 0x16, 0x0d, 0xd6, 0x24, 0x1e, 0xc6, 0x66, 0xb2, 0xd2, 0x90, 0xc1,
-  0xac, 0x3f, 0x85, 0x51, 0x45, 0x96, 0x04, 0x0c, 0xda, 0x1d, 0xbe, 0x0b,
-  0xcf, 0xb3, 0x9b, 0x47, 0xf0, 0x1f, 0x26, 0xd4, 0x15, 0x87, 0xad, 0x75,
-  0x9e, 0x1e, 0x9b, 0x43, 0x94, 0xc4, 0x75, 0x0e, 0x76, 0xda, 0x82, 0x39,
-  0xac, 0x3a, 0x6d, 0x9f, 0xeb, 0xb0, 0x21, 0x80, 0xef, 0x83, 0x21, 0x6f,
-  0xcb, 0x48, 0x04, 0x64, 0xcf, 0xe3, 0xd2, 0x49, 0x28, 0xa6, 0xf0, 0x69,
-  0x50, 0xbb, 0x3d, 0x1d, 0x09, 0xf7, 0xe3, 0xd6, 0xd4, 0xb4, 0x90, 0x3c,
-  0xd4, 0x9a, 0x79, 0xcc, 0x5d, 0x53, 0xac, 0xbc, 0x3f, 0x42, 0xae, 0x28,
-  0x79, 0x14, 0xed, 0xd1, 0x0e, 0xc2, 0xa7, 0x8d, 0x9f, 0x55, 0x98, 0x4f,
-  0x3b, 0xa8, 0xe1, 0x31, 0x8b, 0x77, 0xad, 0xa1, 0xe2, 0x9f, 0xd8, 0xf5,
-  0xca, 0xe8, 0x76, 0x92, 0xe4, 0xb3, 0x89, 0xdf, 0x07, 0xb4, 0x95, 0xc2,
-  0xfa, 0x7b, 0xe5, 0xd7, 0x48, 0x9e, 0x09, 0x04, 0x4d, 0x92, 0x15, 0xab,
-  0x65, 0x29, 0x10, 0x88, 0x8f, 0xdf, 0xd1, 0xa6, 0x4b, 0xbb, 0xf6, 0x10,
-  0x72, 0x8b, 0xd1, 0x2d, 0xb2, 0x52, 0x41, 0x2b, 0x57, 0x8c, 0xca, 0x4d,
-  0x31, 0x1c, 0x95, 0x7e, 0xd8, 0x1e, 0x93, 0x1f, 0xd4, 0x6f, 0x1c, 0x95,
-  0xb4, 0xf7, 0x29, 0x63, 0xaa, 0xa6, 0x1f, 0x68, 0x0c, 0xf9, 0xe5, 0x3d,
-  0x6d, 0x7b, 0x45, 0x82, 0xf8, 0xe3, 0xd2, 0x7a, 0x22, 0x0f, 0x1a, 0xd1,
-  0x01, 0x88, 0x84, 0x86, 0x5d, 0x36, 0x20, 0x4e, 0xb8, 0xc9, 0x7c, 0x65,
-  0x41, 0x9d, 0x06, 0xe6, 0x89, 0x13, 0x59, 0x9c, 0x32, 0x32, 0x00, 0x10,
-  0x2a, 0x1b, 0xb9, 0x58, 0xc1, 0xd5, 0xb6, 0x22, 0xe9, 0x72, 0x49, 0xdb,
-  0x8e, 0x5e, 0x05, 0x2e, 0xd6, 0xc1, 0x03, 0xd0, 0xce, 0xae, 0x7f, 0x52,
-  0x54, 0xd2, 0xc5, 0x42, 0x8f, 0xf8, 0x27, 0xcc, 0x5d, 0xc0, 0xeb, 0x98,
-  0xdc, 0x15, 0x82, 0x50, 0x01, 0x61, 0xeb, 0xa2, 0xb8, 0xf1, 0xf5, 0x3f,
-  0xd9, 0x68, 0xf7, 0x70, 0x73, 0x82, 0x3e, 0xaa, 0x2b, 0xb8, 0x3d, 0x1c,
-  0x7e, 0x07, 0xd8, 0x64, 0xc7, 0x6d, 0xb6, 0xbd, 0x1b, 0xd7, 0xea, 0x15,
-  0x3d, 0x76, 0x09, 0xba, 0xf2, 0xca, 0xbc, 0x0e, 0xce, 0xd8, 0xf3, 0xa9,
-  0xcb, 0xd0, 0x14, 0x2b, 0x3f, 0xcb, 0x44, 0x11, 0x99, 0xef, 0xba, 0x71,
-  0x55, 0x98, 0x2c, 0xe1, 0x4b, 0xe0, 0x1a, 0x36, 0x1f, 0xa3, 0x73, 0x15,
-  0x48, 0x9b, 0x73, 0x8c, 0xce, 0x08, 0xea, 0x10, 0x4c, 0x8e, 0xab, 0xaa,
-  0x99, 0x7d, 0xf6, 0x8d, 0x65, 0x7d, 0x4c, 0x92, 0xf7, 0xd9, 0x80, 0xfb,
-  0xf8, 0x90, 0x51, 0x40, 0x2f, 0x5e, 0x51, 0x32, 0x32, 0x66, 0x19, 0xb2,
-  0x24, 0xaf, 0xb6, 0x07, 0xac, 0xbe, 0x57, 0x89, 0x40, 0xf8, 0xd4, 0x31,
-  0xfb, 0x0c, 0x28, 0x07, 0x8c, 0x89, 0x31, 0xb3, 0xf5, 0xc6, 0x41, 0xf9,
-  0x8e, 0x32, 0xd2, 0xff, 0x3e, 0x45, 0x0b, 0x57, 0x83, 0xb0, 0xe0, 0xec,
-  0x03, 0x78, 0xc4, 0x35, 0xea, 0x4b, 0x93, 0x92, 0x28, 0x8f, 0x20, 0xd2,
-  0x47, 0xd9, 0x44, 0xaa, 0xd9, 0x95, 0x5c, 0x1f, 0xb9, 0x0c, 0xb0, 0xbd,
-  0x55, 0xcd, 0xe4, 0xca, 0x3d, 0xe3, 0x25, 0x22, 0xd2, 0x22, 0x69, 0xb0,
-  0x1d, 0xd5, 0x74, 0x5c, 0x4c, 0xc5, 0xc1, 0x76, 0xcb, 0x48, 0xe7, 0xf1,
-  0xbd, 0xf0, 0x72, 0x57, 0x7c, 0xb1, 0xf3, 0x5a, 0x69, 0x43, 0x01, 0x89,
-  0xed, 0xf9, 0x47, 0xd9, 0x14, 0xb1, 0xb8, 0x45, 0xe5, 0x83, 0x4d, 0x84,
-  0x4c, 0x84, 0x50, 0x7b, 0x76, 0x3e, 0xb8, 0x6e, 0xe4, 0xa7, 0x91, 0x02,
-  0xdb, 0xe1, 0x6c, 0x69, 0x0d, 0xf0, 0x56, 0x8b, 0xe3, 0xc1, 0x3b, 0x20,
-  0x5f, 0x6a, 0x05, 0x00, 0x6c, 0xe8, 0x63, 0xa3, 0x4b, 0xa5, 0x7e, 0x67,
-  0x6b, 0x15, 0x7c, 0xa8, 0x9e, 0xbb, 0x65, 0xb2, 0x8f, 0x59, 0xb7, 0x50,
-  0x52, 0x94, 0xc5, 0xe7, 0x9a, 0xa4, 0xef, 0xab, 0x67, 0x06, 0xab, 0x15,
-  0xc4, 0x9b, 0x7d, 0x8a, 0x14, 0x1b, 0x13, 0xec, 0x79, 0xa8, 0x3c, 0xf2,
-  0x4f, 0x3f, 0x3e, 0x9f, 0xe5, 0xc8, 0x4b, 0xbc, 0x14, 0x97, 0x09, 0x8a,
-  0x1d, 0x9d, 0xe4, 0x53, 0x95, 0x2a, 0x46, 0x13, 0x34, 0x6b, 0x96, 0x1d,
-  0xa4, 0x36, 0x8b, 0x10, 0x8b, 0x67, 0x17, 0xf8, 0x39, 0x22, 0x19, 0x28,
-  0xfe, 0x73, 0x18, 0x90, 0x04, 0x4c, 0x7b, 0x2b, 0xca, 0x41, 0x9a, 0x29,
-  0x4e, 0x4f, 0x9d, 0x7d, 0xd2, 0x4d, 0x83, 0xeb, 0x3f, 0x7e, 0x66, 0x44,
-  0x62, 0xf3, 0x2b, 0xec, 0x00, 0xa6, 0x9b, 0x47, 0xc7, 0x72, 0x60, 0x25,
-  0x4e, 0x96, 0x1d, 0x80, 0x9f, 0x42, 0x46, 0x30, 0x61, 0x64, 0x5a, 0x9b,
-  0x90, 0x27, 0xe4, 0x70, 0x79, 0xc5, 0xff, 0x61, 0xc9, 0x06, 0xb3, 0xfc,
-  0x51, 0x55, 0x2d, 0x57, 0x60, 0x71, 0xe6, 0xce, 0xcb, 0xa8, 0xc5, 0x95,
-  0xb3, 0xda, 0xcc, 0x88, 0x29, 0x13, 0x82, 0x4a, 0xe6, 0x4d, 0x4e, 0xf0,
-  0xf7, 0x67, 0x52, 0x7d, 0xca, 0xa7, 0x7b, 0xb1, 0x7a, 0x01, 0xe1, 0xe5,
-  0x91, 0x11, 0x78, 0xb3, 0x24, 0x9c, 0x63, 0x9c, 0x1f, 0x3c, 0xd5, 0xe0,
-  0x1e, 0x89, 0x26, 0x28, 0x24, 0x01, 0xd4, 0xd2, 0xb6, 0xf7, 0x1f, 0x6e,
-  0x4e, 0x9d, 0x75, 0x9f, 0x31, 0x18, 0x22, 0xc0, 0x47, 0x79, 0xf9, 0xb3,
-  0xb9, 0xb9, 0xf7, 0xb7, 0xb7, 0x7f, 0xfd, 0xb9, 0x11, 0x1d, 0xf3, 0xf5,
-  0xaf, 0xfc, 0xcc, 0x6f, 0x42, 0x79, 0x12, 0x3c, 0xb0, 0xa8, 0xbb, 0x44,
-  0x81, 0x70, 0xd4, 0x07, 0xd5, 0x71, 0x15, 0x69, 0x94, 0x5f, 0x30, 0x1c,
-  0x57, 0x6f, 0xb7, 0xe8, 0x4a, 0xdf, 0x02, 0x05, 0x13, 0x54, 0xa4, 0x90,
-  0xd6, 0x1d, 0x8a, 0x22, 0xc7, 0x4d, 0x7b, 0x3c, 0xb5, 0x5e, 0x12, 0x60,
-  0x68, 0xf5, 0xa2, 0x08, 0x32, 0xe8, 0x10, 0x31, 0xa2, 0x1e, 0xf7, 0x88,
-  0x3d, 0x46, 0xa2, 0x3f, 0x35, 0x8a, 0x50, 0x30, 0xb2, 0x8f, 0x4b, 0xa1,
-  0x58, 0x5d, 0x52, 0xe3, 0x5d, 0xe1, 0xc3, 0x19, 0x02, 0xc0, 0x1e, 0x0d,
-  0xdb, 0xd0, 0x13, 0x3f, 0x95, 0xd8, 0x86, 0xca, 0xe2, 0x41, 0x3b, 0x99,
-  0x32, 0x35, 0x57, 0x97, 0x64, 0xbf, 0x0d, 0x2b, 0x5d, 0x98, 0xa8, 0xe0,
-  0x23, 0x6b, 0x45, 0x09, 0xed, 0x40, 0xf1, 0x33, 0xbd, 0x91, 0x32, 0x9f,
-  0xc7, 0x02, 0x83, 0x05, 0x77, 0x67, 0x6b, 0x45, 0xfc, 0xc9, 0x43, 0x50,
-  0x43, 0x66, 0x52, 0x92, 0x95, 0x96, 0x6d, 0x54, 0x2e, 0xdb, 0xf1, 0x7c,
-  0x18, 0x1a, 0x91, 0x70, 0xca, 0xdf, 0x04, 0x3e, 0x44, 0x57, 0x51, 0x2e,
-  0xb0, 0xe8, 0x31, 0xcc, 0x02, 0x15, 0x1c, 0xaa, 0xac, 0x8e, 0x84, 0xa8,
-  0xc8, 0xc8, 0x2c, 0x2b, 0xfe, 0x58, 0x43, 0x15, 0x37, 0x56, 0x02, 0x20,
-  0x24, 0x2e, 0x06, 0xa4, 0x1b, 0x79, 0x2b, 0x40, 0x47, 0x0e, 0x7c, 0x48,
-  0x10, 0x20, 0xa4, 0xf5, 0x75, 0x4e, 0x03, 0xb7, 0x11, 0xc7, 0xf2, 0x44,
-  0x0e, 0x8c, 0x15, 0xb6, 0x64, 0x1d, 0x8d, 0xef, 0x43, 0xbc, 0x0d, 0x07,
-  0x22, 0xcf, 0xfd, 0x96, 0xde, 0x5b, 0xda, 0x68, 0xe4, 0x4e, 0x21, 0x91,
-  0x48, 0x4c, 0x1c, 0x52, 0xb5, 0x09, 0xc0, 0xba, 0xb2, 0xb6, 0x78, 0x5b,
-  0xe2, 0xea, 0x59, 0xc5, 0x52, 0xcb, 0x1b, 0xb4, 0x37, 0x8e, 0x46, 0x35,
-  0xe2, 0x88, 0x1e, 0x1f, 0x22, 0xe4, 0x60, 0x88, 0xe2, 0xea, 0xc7, 0x7e,
-  0xa3, 0x8c, 0x9a, 0xb9, 0xa4, 0x3c, 0x2f, 0xe4, 0xbc, 0x4d, 0x08, 0x0c,
-  0x69, 0x17, 0x32, 0xf4, 0xd2, 0x2d, 0x53, 0xbd, 0x24, 0x89, 0x67, 0x1a,
-  0x44, 0x89, 0x67, 0x89, 0x47, 0x8c, 0x12, 0x86, 0xa4, 0xd9, 0x67, 0xfd,
-  0x85, 0xf1, 0xa0, 0xf6, 0x64, 0xef, 0xb5, 0x91, 0x15, 0xce, 0xb3, 0xf7,
-  0x1a, 0x9a, 0x19, 0x04, 0xe4, 0x35, 0xd2, 0x05, 0x7c, 0xdd, 0xca, 0x2e,
-  0xb5, 0x62, 0x0f, 0xd6, 0xba, 0x96, 0x39, 0x2e, 0x15, 0xe5, 0x63, 0x3c,
-  0x74, 0xd2, 0x4d, 0x18, 0x21, 0xf4, 0xc6, 0xf7, 0x9e, 0x3a, 0x16, 0x57,
-  0x97, 0xc8, 0x63, 0xbd, 0x95, 0x03, 0xb4, 0xbe, 0xf6, 0xe9, 0xe8, 0x7f,
-  0x7c, 0xba, 0x03, 0xe6, 0x62, 0xad, 0xa4, 0x61, 0x20, 0xdc, 0x1f, 0x9f,
-  0xa4, 0x0f, 0x31, 0x4c, 0xd6, 0xa5, 0x3a, 0xdc, 0x52, 0x8a, 0xaf, 0xa5,
-  0x63, 0xad, 0x1e, 0x76, 0x97, 0xde, 0x1b, 0x5a, 0x3d, 0xbf, 0xd5, 0x81,
-  0x3b, 0x8e, 0x9c, 0xa4, 0x5e, 0x90, 0x97, 0x52, 0x87, 0xac, 0xc4, 0x55,
-  0xb9, 0xdf, 0x54, 0x56, 0xb5, 0x15, 0x09, 0x6a, 0xe1, 0x01, 0xa0, 0x30,
-  0x37, 0x3b, 0x95, 0xb0, 0x29, 0x7f, 0x5a, 0x1d, 0xae, 0xfe, 0xcf, 0xbb,
-  0xba, 0x7e, 0x92, 0xea, 0x55, 0xc2, 0x95, 0x5f, 0xaa, 0xf6, 0xb1, 0x22,
-  0x69, 0x61, 0xe8, 0xe0, 0x0b, 0x52, 0x2b, 0xe4, 0x64, 0x6f, 0x6a, 0xa6,
-  0x63, 0x98, 0xa0, 0x8d, 0xb6, 0x96, 0x73, 0x18, 0x27, 0x22, 0x68, 0xfa,
-  0x9e, 0x70, 0xf9, 0xc0, 0xba, 0x0c, 0xb8, 0x8b, 0xc6, 0xe5, 0xd7, 0x6a,
-  0x7d, 0x05, 0x43, 0x17, 0x68, 0xaf, 0x10, 0x58, 0x42, 0xdd, 0x1f, 0xf2,
-  0x96, 0x0f, 0x75, 0xe3, 0x07, 0xb5, 0x58, 0x4c, 0x90, 0xf9, 0xda, 0x6a,
-  0xee, 0xdb, 0xa3, 0x8b, 0x2d, 0x64, 0x61, 0x6a, 0x68, 0x03, 0x8f, 0x8f,
-  0x4b, 0x1e, 0xea, 0x29, 0x4f, 0x5d, 0xb9, 0x30, 0xcb, 0xd6, 0x97, 0xa0,
-  0xa4, 0xec, 0x23, 0xc9, 0x59, 0xf3, 0x68, 0xcc, 0x2a, 0xa4, 0xf8, 0x43,
-  0x5a, 0x0e, 0x30, 0xe6, 0x20, 0x36, 0x29, 0xb4, 0xf9, 0x39, 0x9d, 0x90,
-  0xa1, 0x40, 0xd0, 0xe0, 0xeb, 0xa3, 0x93, 0xa3, 0x8b, 0xa3, 0x18, 0xa8,
-  0x52, 0x99, 0x4d, 0xf9, 0x06, 0xab, 0xb3, 0xf1, 0xf5, 0x9c, 0xe8, 0xfe,
-  0x0a, 0x5b, 0xc2, 0xe8, 0x0a, 0x3f, 0x66, 0xa3, 0xd7, 0x07, 0x3f, 0xa0,
-  0x7a, 0x28, 0xce, 0xcd, 0xd9, 0xf9, 0xe9, 0xd9, 0x9b, 0xe3, 0x77, 0xaf,
-  0x7b, 0xc9, 0xe1, 0xe9, 0xd9, 0x5f, 0x7a, 0xc9, 0xdb, 0xd3, 0x1f, 0x8e,
-  0x22, 0x94, 0x87, 0x50, 0xb4, 0x48, 0x0c, 0x94, 0x96, 0xbc, 0xd2, 0xca,
-  0x2b, 0x1c, 0x5f, 0x2f, 0xb5, 0x9e, 0x9a, 0xe9, 0x08, 0x60, 0xcd, 0x15,
-  0x63, 0x52, 0xd0, 0xc2, 0xd3, 0xda, 0xf5, 0x92, 0xef, 0x8e, 0x0e, 0x5e,
-  0x77, 0x23, 0x14, 0x87, 0x32, 0x2b, 0xcc, 0xce, 0x4d, 0x19, 0x2c, 0x9c,
-  0x18, 0x26, 0x4c, 0xde, 0xd0, 0x37, 0x6f, 0xb2, 0x00, 0xad, 0x98, 0x8e,
-  0x01, 0xdb, 0xcb, 0x26, 0xab, 0xca, 0xc8, 0x4b, 0x08, 0x98, 0x8b, 0xbb,
-  0x7b, 0xf8, 0x36, 0xe4, 0x54, 0x6d, 0xab, 0x48, 0xa2, 0xe9, 0x8d, 0xec,
-  0x67, 0x60, 0x34, 0x67, 0xc3, 0x87, 0x53, 0x16, 0x17, 0x09, 0x89, 0xd4,
-  0x21, 0x4b, 0x91, 0x3c, 0x43, 0xf9, 0x62, 0x71, 0x49, 0x02, 0x21, 0x52,
-  0x0d, 0x67, 0x1b, 0x65, 0x08, 0xb6, 0xa9, 0xb8, 0xd8, 0x1b, 0x67, 0xa0,
-  0x68, 0x74, 0x7b, 0x97, 0xc5, 0xcb, 0xba, 0x4a, 0x50, 0x99, 0x05, 0x3c,
-  0xa5, 0x9a, 0x37, 0xcf, 0x4b, 0xe8, 0xfb, 0xd4, 0x38, 0xad, 0x9f, 0xe4,
-  0xe3, 0x08, 0x3c, 0x0c, 0x8b, 0x15, 0xcb, 0x4b, 0x22, 0xce, 0x4c, 0x22,
-  0x47, 0x78, 0x9f, 0xf4, 0x30, 0xf2, 0xed, 0x70, 0x8c, 0x63, 0x7e, 0xcd,
-  0x89, 0x44, 0xab, 0x63, 0x28, 0x2c, 0x5d, 0x59, 0x78, 0x3b, 0x67, 0x82,
-  0x64, 0x5a, 0xeb, 0x8e, 0x3a, 0x6f, 0xd4, 0xd1, 0xf2, 0x8a, 0xbd, 0x6c,
-  0x65, 0x3c, 0x01, 0x46, 0x6f, 0xb2, 0x20, 0x41, 0x81, 0x47, 0xd4, 0x3f,
-  0xc1, 0x68, 0x5c, 0xf1, 0x71, 0x0e, 0x9c, 0x62, 0x6c, 0x1d, 0x62, 0x17,
-  0x73, 0xa9, 0x7f, 0x19, 0xa9, 0xa3, 0xd8, 0x17, 0x85, 0xa3, 0x0a, 0x8a,
-  0x53, 0x59, 0xe0, 0x9b, 0xa2, 0x7d, 0x39, 0xe3, 0xbc, 0x4e, 0x84, 0xb6,
-  0x78, 0x4c, 0x9b, 0x1b, 0xc9, 0x9a, 0x2a, 0xfc, 0xd1, 0x7e, 0xb2, 0xd3,
-  0x2a, 0xdb, 0x54, 0x25, 0x7d, 0x09, 0xa4, 0x94, 0x34, 0xbe, 0x6e, 0xce,
-  0xea, 0x9b, 0x15, 0xbc, 0x30, 0x2c, 0xd9, 0xa9, 0x6b, 0x1f, 0x64, 0x6f,
-  0x9d, 0x1c, 0xd3, 0x09, 0xc0, 0xd0, 0x3b, 0x99, 0x2b, 0x1c, 0xf6, 0xc7,
-  0xe5, 0xd8, 0x73, 0x1c, 0x0a, 0x5e, 0x6f, 0x6a, 0xab, 0xdb, 0x31, 0xc2,
-  0x7c, 0xa3, 0x3d, 0x73, 0xfc, 0xef, 0x23, 0x5d, 0x77, 0x6c, 0x87, 0xe7,
-  0x47, 0x17, 0xe7, 0x9f, 0x10, 0x0a, 0xb1, 0x89, 0xb8, 0xe3, 0xad, 0x24,
-  0xe8, 0xd6, 0xf7, 0x8b, 0xaf, 0x1e, 0xe9, 0xf7, 0xa1, 0xf4, 0xfb, 0x27,
-  0x31, 0xdc, 0xf9, 0x4d, 0x41, 0xc9, 0x8f, 0xcc, 0x92, 0x63, 0x9b, 0x57,
-  0xf7, 0xf6, 0xdd, 0xd1, 0xc9, 0x59, 0x77, 0x96, 0x3f, 0x9c, 0xbf, 0xf9,
-  0xcb, 0xe0, 0x81, 0xc4, 0xea, 0x7f, 0x7e, 0x60, 0xfc, 0xc7, 0xb4, 0xae,
-  0xa3, 0x05, 0x27, 0x48, 0xb2, 0x60, 0x5b, 0xa7, 0xc3, 0x29, 0x72, 0x11,
-  0x34, 0x4d, 0xd4, 0xce, 0x26, 0x4a, 0x3a, 0x4d, 0xbd, 0x23, 0x64, 0x99,
-  0x40, 0xca, 0x54, 0x43, 0xc4, 0x9e, 0x4a, 0x2d, 0xd1, 0xb9, 0x2f, 0x1f,
-  0xab, 0x81, 0x39, 0x18, 0x4a, 0x3e, 0x42, 0xd5, 0xae, 0x06, 0x80, 0x45,
-  0x44, 0xd4, 0xd7, 0x70, 0x68, 0xee, 0xcd, 0x31, 0xc2, 0x8f, 0x93, 0xab,
-  0x41, 0x51, 0xe6, 0x30, 0x6a, 0x6a, 0xa1, 0x57, 0x69, 0x2d, 0xe1, 0x8a,
-  0xe6, 0x38, 0xd6, 0x38, 0x42, 0xb1, 0xe6, 0x34, 0xcc, 0x2a, 0x31, 0x34,
-  0x8a, 0x66, 0xbb, 0x33, 0xb6, 0x87, 0x70, 0xb4, 0x95, 0x6b, 0x53, 0x20,
-  0x30, 0x22, 0x26, 0x16, 0x99, 0x49, 0x75, 0x4f, 0x1b, 0x3d, 0x4b, 0x3c,
-  0xf3, 0x35, 0xfd, 0xcc, 0x4d, 0xd9, 0xcf, 0x15, 0x81, 0x70, 0x77, 0x69,
-  0xc9, 0x08, 0x48, 0x1d, 0x4d, 0x2a, 0x27, 0x4d, 0xaa, 0xb1, 0x61, 0xf7,
-  0x1c, 0x79, 0x0a, 0xef, 0x92, 0xd6, 0x4f, 0xc2, 0xbf, 0xd1, 0x8a, 0x79,
-  0xce, 0x3f, 0x86, 0x09, 0xc1, 0x0b, 0xaf, 0xf5, 0x7f, 0xe4, 0x65, 0x29,
-  0xf5, 0x33, 0x6a, 0x79, 0x95, 0x34, 0x9e, 0xbb, 0x83, 0x48, 0x13, 0x74,
-  0x28, 0xe0, 0x59, 0xbd, 0x86, 0x9b, 0x12, 0xc5, 0x6c, 0x19, 0x06, 0x48,
-  0xec, 0x8d, 0xd4, 0x7d, 0xf0, 0x42, 0x67, 0x4e, 0xbe, 0x5a, 0x81, 0x83,
-  0x00, 0x0d, 0x86, 0x64, 0x84, 0xba, 0x6b, 0x15, 0x6b, 0x3c, 0x57, 0xff,
-  0xcb, 0x83, 0xc1, 0xbd, 0x1a, 0x43, 0x1f, 0x42, 0xd4, 0x89, 0xa4, 0xba,
-  0x74, 0xda, 0xb5, 0xa0, 0xbf, 0x30, 0x63, 0x4e, 0x78, 0x4d, 0xd6, 0xa2,
-  0x0e, 0xe2, 0x8a, 0xf3, 0x26, 0x82, 0xd2, 0x0b, 0x1c, 0x54, 0x48, 0x5f,
-  0x12, 0x25, 0x8b, 0x2c, 0x45, 0xf7, 0x44, 0x4f, 0x30, 0x7e, 0xb8, 0x7a,
-  0xad, 0xbe, 0xd7, 0x8f, 0x18, 0xd2, 0x60, 0x30, 0x5c, 0x71, 0x89, 0xfd,
-  0xf3, 0x4e, 0xf1, 0x5f, 0x3c, 0x51, 0xc8, 0x22, 0xbe, 0xe4, 0x3f, 0x7e,
-  0x13, 0x59, 0x04, 0x65, 0xa1, 0xc4, 0x79, 0xb9, 0x49, 0xe4, 0xdf, 0xa0,
-  0x8f, 0x7e, 0x27, 0xef, 0x7b, 0xb2, 0xa5, 0x99, 0xab, 0xc1, 0x76, 0xab,
-  0x69, 0x10, 0xa2, 0x47, 0x93, 0x2a, 0x1a, 0x24, 0x11, 0x51, 0xe1, 0x65,
-  0x8f, 0x25, 0x15, 0x8e, 0x1e, 0x78, 0xb2, 0x83, 0x0b, 0x99, 0xcf, 0x4e,
-  0xf6, 0x39, 0xf1, 0x21, 0xff, 0xce, 0xf8, 0x90, 0x28, 0xfd, 0xcc, 0x07,
-  0xe0, 0xe5, 0x24, 0x65, 0x7b, 0x38, 0x63, 0x45, 0x50, 0xd3, 0x5f, 0xfd,
-  0xcf, 0x78, 0xe5, 0x65, 0xae, 0x2d, 0xfe, 0xa6, 0x89, 0x64, 0x21, 0x0e,
-  0x17, 0xe8, 0xa3, 0xae, 0xaa, 0xed, 0xac, 0x98, 0x28, 0x3e, 0x62, 0x5a,
-  0xdb, 0x4a, 0x47, 0xb8, 0x86, 0xac, 0xbb, 0xda, 0x76, 0xb1, 0x00, 0x13,
-  0x4e, 0xef, 0xa3, 0xa5, 0x2d, 0xe6, 0x2b, 0x9b, 0x74, 0x45, 0xd0, 0x3a,
-  0x98, 0xcf, 0x52, 0x82, 0x0b, 0x42, 0x52, 0x67, 0x3a, 0xa6, 0x4b, 0xa6,
-  0xa1, 0x20, 0xcc, 0x0f, 0x89, 0x20, 0x55, 0x45, 0xd2, 0x89, 0x68, 0x1f,
-  0x54, 0x90, 0x84, 0xf8, 0x22, 0x68, 0xb1, 0x88, 0x07, 0x77, 0x25, 0x97,
-  0x69, 0x90, 0x95, 0x61, 0x7c, 0x22, 0xa6, 0x85, 0xeb, 0x97, 0xa4, 0x2e,
-  0x08, 0x34, 0xa6, 0x3f, 0x72, 0x35, 0x36, 0x2b, 0xa3, 0xae, 0xf1, 0x5f,
-  0x13, 0xaf, 0xb0, 0xc8, 0x90, 0x92, 0xcd, 0x19, 0xa6, 0xb2, 0x65, 0x4e,
-  0xb0, 0xe8, 0x56, 0x38, 0x48, 0x52, 0xa9, 0x9f, 0xe8, 0x70, 0xcc, 0xa8,
-  0x65, 0x34, 0xa2, 0x18, 0x66, 0x8c, 0x5a, 0x26, 0xa5, 0x5c, 0x5b, 0x4b,
-  0xd2, 0xc9, 0x4f, 0x89, 0x67, 0xf5, 0x0c, 0xe1, 0x3c, 0x30, 0xf0, 0x90,
-  0xf0, 0x7d, 0x33, 0x5d, 0x02, 0xbc, 0x30, 0xd9, 0xec, 0x6f, 0x39, 0xf9,
-  0x98, 0xeb, 0x51, 0x0a, 0x6d, 0x74, 0x7d, 0xfe, 0xa9, 0x47, 0x7d, 0x76,
-  0x59, 0x25, 0x52, 0x57, 0x45, 0x4f, 0xa3, 0x65, 0x83, 0xa1, 0xb7, 0x6d,
-  0x31, 0xbc, 0x1b, 0xbb, 0x04, 0x3b, 0xea, 0xc8, 0x65, 0xad, 0xb6, 0xe6,
-  0xd9, 0x5d, 0xd8, 0x96, 0xd7, 0x52, 0x5d, 0x7b, 0x9f, 0xf1, 0x4c, 0x5d,
-  0x8b, 0xfc, 0x3e, 0x5d, 0x74, 0xac, 0x37, 0x08, 0x91, 0xc0, 0x17, 0x6a,
-  0x65, 0x11, 0x19, 0x32, 0x95, 0x20, 0x7d, 0xae, 0x9e, 0x1b, 0x62, 0x14,
-  0x3a, 0x74, 0x30, 0xab, 0xdd, 0xd8, 0x96, 0xb3, 0xaf, 0x71, 0xa5, 0x3a,
-  0x50, 0x8d, 0x46, 0x9d, 0xa3, 0xb7, 0x3d, 0x2e, 0x47, 0x37, 0xef, 0x06,
-  0x67, 0xbd, 0xe5, 0x0f, 0x07, 0xc9, 0x6b, 0x4d, 0xb5, 0xe0, 0xc4, 0xb7,
-  0xa5, 0x8e, 0x8b, 0x63, 0xef, 0x83, 0x66, 0x7e, 0xd0, 0xbc, 0xa8, 0x08,
-  0xa1, 0xe8, 0xfb, 0x55, 0x23, 0x57, 0x43, 0x3c, 0x44, 0x02, 0x89, 0x38,
-  0xb7, 0x82, 0x7e, 0x23, 0xfe, 0xdb, 0x2c, 0xc6, 0x39, 0x87, 0x0a, 0x57,
-  0x83, 0x98, 0xcd, 0x47, 0x6b, 0xa8, 0x4a, 0xe8, 0xbc, 0xf7, 0x16, 0x99,
-  0x7f, 0xc5, 0x9a, 0x28, 0x2e, 0x35, 0x8d, 0xc9, 0xda, 0x8e, 0x80, 0x72,
-  0xb0, 0x9e, 0xfa, 0xa4, 0x9c, 0xb0, 0x47, 0xf5, 0x1e, 0x4f, 0x96, 0x69,
-  0x29, 0xaa, 0xf7, 0xfc, 0xc6, 0x0c, 0xee, 0x62, 0x47, 0xca, 0xc6, 0xcb,
-  0xba, 0x89, 0x08, 0x1b, 0x8c, 0x49, 0x05, 0x03, 0x1e, 0xd2, 0x26, 0x7b,
-  0xd0, 0x54, 0xe8, 0x5f, 0x3f, 0x33, 0x6b, 0xfb, 0xfe, 0xfa, 0x96, 0x3a,
-  0x15, 0x05, 0xce, 0xc6, 0x99, 0xe1, 0x63, 0xc8, 0x1e, 0x36, 0xe4, 0x32,
-  0x13, 0x6c, 0xc8, 0xba, 0x30, 0xe1, 0x28, 0xda, 0x3d, 0x51, 0x64, 0x19,
-  0xed, 0xfd, 0x4d, 0x96, 0xa2, 0xc4, 0x55, 0xd0, 0xb9, 0x33, 0x6c, 0x5e,
-  0xea, 0x57, 0x9d, 0xc4, 0x93, 0x4e, 0xcf, 0x6c, 0x7a, 0x18, 0x24, 0x07,
-  0x2e, 0x08, 0xdf, 0x5e, 0xb5, 0xc5, 0xef, 0x44, 0xe4, 0x73, 0x90, 0x9b,
-  0x47, 0xdd, 0x84, 0x54, 0xcf, 0x1f, 0xb9, 0xa4, 0xd6, 0xce, 0x2c, 0x6e,
-  0xca, 0xd1, 0x53, 0xfa, 0xf1, 0x3d, 0x7e, 0x80, 0xfd, 0x40, 0xf1, 0x12,
-  0xa8, 0x7b, 0x41, 0x62, 0xeb, 0x72, 0x1a, 0x14, 0xd1, 0x93, 0x1f, 0xba,
-  0xe1, 0x95, 0xe5, 0xdc, 0x20, 0x63, 0xc9, 0x97, 0x8a, 0x62, 0xff, 0xb9,
-  0x35, 0xd3, 0x13, 0xc3, 0x63, 0xb2, 0xca, 0x2b, 0x8c, 0x0b, 0x6b, 0x28,
-  0x88, 0xee, 0x52, 0xe7, 0x6b, 0x28, 0x7a, 0x23, 0x2d, 0x42, 0x57, 0x34,
-  0xa1, 0xa5, 0xfa, 0x3b, 0x0c, 0xd9, 0x4b, 0xd2, 0x64, 0x88, 0xb0, 0xc7,
-  0x09, 0x5b, 0x49, 0x67, 0x8e, 0xe5, 0x81, 0x00, 0x3d, 0x6c, 0x93, 0x80,
-  0x71, 0xb2, 0x4d, 0x9b, 0x95, 0xd4, 0x7c, 0xc5, 0x10, 0x56, 0x4f, 0x59,
-  0xf2, 0x96, 0xe5, 0x47, 0x2b, 0x7b, 0xf9, 0xc1, 0xa5, 0x7a, 0x8d, 0x64,
-  0x42, 0x15, 0x03, 0xad, 0xf4, 0x29, 0x6e, 0x1e, 0xdb, 0xea, 0xd1, 0x32,
-  0x9f, 0xaa, 0xf4, 0xc8, 0x8f, 0x3a, 0x4f, 0xac, 0x24, 0x5b, 0xaf, 0x18,
-  0xa7, 0x64, 0x3b, 0x72, 0x31, 0x3d, 0x4e, 0x02, 0xbb, 0x71, 0xd0, 0x4c,
-  0xb3, 0x6c, 0x06, 0x90, 0x5e, 0x9f, 0xc3, 0xc8, 0x72, 0x22, 0x40, 0x04,
-  0xd0, 0xdd, 0x0a, 0x47, 0xe1, 0x04, 0x50, 0x05, 0x30, 0x94, 0x48, 0x2e,
-  0xc3, 0xbf, 0x74, 0xdc, 0x05, 0xd5, 0xfd, 0x7c, 0x7c, 0xfd, 0xfa, 0xdd,
-  0x70, 0x6d, 0x75, 0x08, 0x46, 0x30, 0x39, 0x7e, 0xba, 0x2c, 0xe6, 0xa0,
-  0x05, 0x49, 0x5b, 0xd0, 0xaa, 0x12, 0xd0, 0x9a, 0x0e, 0x82, 0x6f, 0xe3,
-  0xcd, 0x35, 0x5f, 0x71, 0x99, 0xb1, 0xe0, 0xe6, 0x62, 0xb9, 0xd1, 0xa8,
-  0x4e, 0xbe, 0x47, 0xfb, 0x29, 0xce, 0x42, 0xb4, 0xfc, 0xb9, 0x3b, 0xd3,
-  0x48, 0xab, 0xca, 0x26, 0xd6, 0x62, 0xc9, 0xc5, 0x66, 0x01, 0x65, 0xd3,
-  0xa5, 0x6b, 0xae, 0xbd, 0x68, 0x3f, 0x7e, 0xcb, 0x36, 0x9f, 0xa4, 0xe5,
-  0x55, 0x16, 0x81, 0x41, 0xee, 0xac, 0x90, 0x81, 0x7e, 0x05, 0x3a, 0x00,
-  0x91, 0xea, 0x14, 0xaf, 0x0b, 0x95, 0xf6, 0x94, 0x58, 0xf9, 0xa3, 0x72,
-  0xd5, 0x94, 0x68, 0x4d, 0xf6, 0xbe, 0xfd, 0xa6, 0x7b, 0x41, 0xbe, 0x7e,
-  0xb7, 0xa2, 0x3b, 0x7c, 0xd3, 0x37, 0x79, 0x48, 0xed, 0xa5, 0x41, 0x8e,
-  0x74, 0x77, 0x2d, 0x14, 0xfb, 0x3e, 0x3e, 0x00, 0x03, 0xc6, 0x7f, 0x84,
-  0x4b, 0xd0, 0x13, 0xfa, 0xe3, 0xc1, 0x07, 0x15, 0xc1, 0x31, 0xde, 0x95,
-  0x40, 0x3b, 0x0e, 0xa5, 0x38, 0xe3, 0xb9, 0xc4, 0x6f, 0x9d, 0xa9, 0x1d,
-  0x7f, 0xeb, 0xa1, 0x3d, 0x8a, 0x37, 0x07, 0xfe, 0xc6, 0xe5, 0xfb, 0xd6,
-  0xba, 0xcc, 0x67, 0x4f, 0x7e, 0x6c, 0xef, 0x39, 0x65, 0xd8, 0x89, 0xb4,
-  0x7c, 0x4c, 0xfb, 0x79, 0x97, 0x0f, 0xbd, 0x25, 0x61, 0x0c, 0xf7, 0xd5,
-  0x27, 0xef, 0xbb, 0xbd, 0x90, 0x6c, 0x8e, 0xe8, 0x06, 0x74, 0x17, 0xe6,
-  0x13, 0xb5, 0x7a, 0x3f, 0x15, 0x1c, 0xcb, 0x78, 0x73, 0xcf, 0xbe, 0x7c,
-  0xf6, 0x74, 0x6b, 0xab, 0x67, 0xe6, 0x40, 0x97, 0x67, 0x47, 0xec, 0x62,
-  0x96, 0x83, 0x19, 0x88, 0x42, 0x49, 0xa3, 0xbe, 0xe6, 0xb3, 0xe6, 0x32,
-  0xea, 0xe3, 0xcd, 0xe1, 0x6a, 0xb0, 0xf7, 0xb0, 0x2e, 0x00, 0x70, 0x61,
-  0x1e, 0xe9, 0x40, 0x54, 0xc0, 0xbf, 0x33, 0x79, 0xc0, 0xa5, 0xf5, 0xaf,
-  0x3c, 0x68, 0xac, 0x5c, 0x78, 0x14, 0x23, 0xf1, 0xd5, 0xb1, 0x57, 0xcb,
-  0x2e, 0x2f, 0x20, 0xff, 0xbf, 0x39, 0x3e, 0x39, 0x72, 0x7c, 0xe4, 0x7f,
-  0x6d, 0x0f, 0x30, 0xc6, 0x72, 0xdc, 0xe1, 0x9a, 0x22, 0x47, 0x06, 0x88,
-  0x04, 0x9a, 0xe5, 0xfe, 0x7d, 0x4f, 0xb4, 0x59, 0xfe, 0xb8, 0x91, 0xe2,
-  0x7e, 0xf4, 0xee, 0x87, 0xe3, 0xf3, 0xd3, 0x77, 0x6f, 0x8f, 0xde, 0xb9,
-  0x64, 0x11, 0x5c, 0xcf, 0x71, 0x27, 0x6d, 0xc7, 0x5f, 0x95, 0x23, 0xdd,
-  0x08, 0x02, 0x29, 0x1c, 0x88, 0x98, 0x05, 0xed, 0x97, 0xfe, 0x35, 0x08,
-  0x9b, 0x0b, 0x1e, 0xb2, 0xad, 0x03, 0x91, 0x2c, 0x10, 0xe5, 0x3d, 0x41,
-  0x3a, 0xde, 0x40, 0x32, 0x67, 0xc4, 0x37, 0x96, 0x8b, 0x6b, 0xf7, 0xe3,
-  0x38, 0xd3, 0xd2, 0x1f, 0x55, 0x50, 0xed, 0xd4, 0x32, 0xc7, 0x7c, 0x82,
-  0x5d, 0x63, 0x10, 0x9e, 0xd4, 0xde, 0x57, 0xca, 0xde, 0xe3, 0x8e, 0x32,
-  0x01, 0x48, 0xa9, 0x03, 0x6f, 0xe2, 0xb5, 0xba, 0xda, 0xd8, 0xf5, 0x26,
-  0x66, 0xde, 0xe0, 0xd6, 0xf5, 0x00, 0xd4, 0x16, 0x64, 0xd1, 0x56, 0xff,
-  0x83, 0x19, 0x34, 0xc2, 0x2f, 0xb8, 0xc6, 0xd0, 0x57, 0x1a, 0x6b, 0xd1,
-  0x85, 0xf3, 0xac, 0x42, 0x87, 0xa6, 0x10, 0x41, 0x00, 0x46, 0xc2, 0xbe,
-  0xe0, 0xb5, 0xf0, 0xae, 0xff, 0x70, 0x76, 0x7e, 0xfa, 0xd3, 0x5f, 0xfe,
-  0xc9, 0x5d, 0x04, 0x47, 0xfb, 0x67, 0xdc, 0x78, 0xd6, 0xf8, 0xaf, 0xff,
-  0xf4, 0xde, 0x9a, 0xcd, 0xf7, 0x82, 0x12, 0x26, 0xd1, 0xfa, 0x18, 0xe2,
-  0xba, 0xcc, 0x2b, 0x4b, 0x75, 0xd2, 0x0f, 0x7c, 0x04, 0xb6, 0x63, 0x11,
-  0x1c, 0x78, 0x51, 0x35, 0x89, 0x33, 0xed, 0xfa, 0x85, 0x07, 0x02, 0x64,
-  0xe1, 0xe5, 0xa5, 0xb0, 0x2e, 0x6a, 0x8f, 0x81, 0x2d, 0xf8, 0xf6, 0x77,
-  0xeb, 0x71, 0x70, 0x72, 0xf2, 0x4f, 0x5d, 0x04, 0xb6, 0x7e, 0xf8, 0xb9,
-  0xf4, 0x9d, 0x78, 0x6b, 0xa1, 0x34, 0x1d, 0x31, 0xab, 0x61, 0x28, 0x79,
-  0x77, 0xaa, 0xa3, 0x11, 0x37, 0x69, 0xbf, 0xca, 0x48, 0x11, 0x60, 0x0f,
-  0x15, 0x94, 0x2e, 0x5c, 0x8b, 0x18, 0x58, 0xa7, 0xee, 0x3a, 0x7f, 0xc9,
-  0x5e, 0x49, 0x57, 0x9f, 0xca, 0x82, 0x2e, 0x18, 0x67, 0x8b, 0x33, 0xf7,
-  0x0b, 0xe7, 0xe3, 0x97, 0x5a, 0x51, 0x56, 0x04, 0x30, 0x12, 0x97, 0x01,
-  0xa3, 0x31, 0x82, 0xbd, 0xca, 0xbc, 0xba, 0x61, 0xcc, 0x03, 0x1c, 0xca,
-  0x9e, 0x54, 0x30, 0x16, 0xdc, 0x10, 0xa8, 0x0c, 0x3c, 0x14, 0x1a, 0xbb,
-  0x8c, 0x98, 0xfe, 0xbd, 0x38, 0x3d, 0x3c, 0x3d, 0xa1, 0x5f, 0x8e, 0xde,
-  0x1c, 0xff, 0xe4, 0x19, 0x9a, 0x80, 0x7b, 0x34, 0xb4, 0x29, 0x5f, 0x48,
-  0xaa, 0xe5, 0xec, 0x8f, 0xc1, 0xf9, 0xb7, 0xd4, 0xc8, 0x68, 0xb0, 0xd1,
-  0x27, 0x85, 0x17, 0xb9, 0x55, 0x86, 0x11, 0x38, 0xdc, 0x25, 0x21, 0xc1,
-  0x46, 0x05, 0x81, 0x24, 0xac, 0x72, 0xa7, 0x83, 0x2b, 0x4a, 0x57, 0x07,
-  0xb7, 0x0e, 0x0d, 0xae, 0x2d, 0x1b, 0x4b, 0x00, 0x4d, 0x4f, 0xf2, 0x59,
-  0x38, 0x49, 0x53, 0xbc, 0x5d, 0x7c, 0x90, 0xa4, 0xda, 0xcf, 0x93, 0x86,
-  0x3b, 0xb0, 0x15, 0x8e, 0xc5, 0xea, 0x9c, 0x6b, 0xb1, 0x39, 0x27, 0x5d,
-  0x00, 0xcd, 0x17, 0xe7, 0x3c, 0x4c, 0x8e, 0x80, 0xf0, 0x0a, 0x90, 0x8b,
-  0xa6, 0x8a, 0x80, 0x17, 0xb0, 0xb9, 0x8f, 0x95, 0xc9, 0xbf, 0x2d, 0xf3,
-  0xdb, 0x94, 0x71, 0x11, 0x18, 0x54, 0x41, 0x5e, 0x6a, 0xb5, 0x91, 0xfe,
-  0xae, 0x46, 0xd2, 0x66, 0x2b, 0xcf, 0x7e, 0x4f, 0x23, 0xcf, 0x5a, 0x6d,
-  0x5c, 0xff, 0xae, 0x46, 0x5c, 0x0d, 0x44, 0xba, 0x16, 0x7f, 0x3a, 0xbe,
-  0x48, 0x0e, 0x4f, 0x5f, 0x7b, 0x1a, 0xbd, 0x60, 0x3e, 0xc5, 0xab, 0x08,
-  0x56, 0x34, 0x5a, 0xce, 0x21, 0x4b, 0xe0, 0x40, 0x49, 0x2d, 0x6a, 0xb4,
-  0x25, 0x75, 0xba, 0xc5, 0x7d, 0xa7, 0x66, 0x82, 0x1c, 0x7f, 0x97, 0xe2,
-  0xda, 0x0b, 0x7d, 0x80, 0xae, 0x96, 0x3c, 0xd7, 0x8e, 0xf7, 0xd8, 0x0d,
-  0xa8, 0x83, 0x92, 0x96, 0x86, 0xbf, 0x32, 0x4a, 0xe1, 0x78, 0x9e, 0x8b,
-  0xaf, 0x9e, 0x64, 0x93, 0x03, 0x33, 0xaa, 0x89, 0x45, 0xb1, 0x70, 0x89,
-  0xe0, 0x6c, 0xe0, 0x41, 0xba, 0x34, 0x47, 0x6f, 0x89, 0xfa, 0x9f, 0xd7,
-  0x36, 0x94, 0x30, 0x03, 0x7d, 0x57, 0x39, 0xe1, 0xbc, 0x41, 0x31, 0x5a,
-  0x04, 0x87, 0x25, 0x2f, 0x48, 0x6d, 0x13, 0xb3, 0x45, 0xf0, 0xad, 0x38,
-  0x77, 0xba, 0xbc, 0x96, 0x08, 0xef, 0xb0, 0x28, 0xd7, 0x84, 0xeb, 0x67,
-  0x4f, 0x7e, 0xbc, 0xa1, 0x5b, 0x5a, 0xbc, 0xc0, 0x9a, 0xba, 0x9c, 0xff,
-  0x3d, 0xb8, 0xa3, 0x9f, 0xf8, 0x70, 0x9d, 0x59, 0x3a, 0x95, 0x20, 0x2a,
-  0x31, 0x70, 0x92, 0xbe, 0x53, 0xa7, 0x1f, 0x39, 0xee, 0x0d, 0x22, 0x11,
-  0xaf, 0xe1, 0x38, 0x60, 0x83, 0x4f, 0x95, 0x39, 0x9b, 0x66, 0xcf, 0x36,
-  0xd5, 0x85, 0x4f, 0x57, 0x91, 0x14, 0xdb, 0x30, 0x82, 0xd6, 0xa1, 0xb0,
-  0xf1, 0x02, 0xd2, 0xba, 0xa0, 0x20, 0x78, 0xdc, 0xc1, 0x6e, 0x6f, 0xc3,
-  0xad, 0xe0, 0xe0, 0xbb, 0x0a, 0x89, 0xb5, 0x47, 0x80, 0x45, 0x3e, 0xce,
-  0x11, 0xb7, 0xe5, 0x60, 0x87, 0xa8, 0x3f, 0x5e, 0xb4, 0x7e, 0xdc, 0x5e,
-  0x1b, 0x02, 0x89, 0x98, 0xe8, 0x31, 0x29, 0x78, 0x19, 0x25, 0x16, 0x8d,
-  0xab, 0x31, 0xd3, 0x37, 0xf7, 0x16, 0xdb, 0x90, 0xce, 0x8b, 0x08, 0x28,
-  0x98, 0xdb, 0x18, 0x55, 0x83, 0xbd, 0xc6, 0xf9, 0x4c, 0x7e, 0x1c, 0x1a,
-  0x27, 0xf7, 0x45, 0x37, 0x95, 0x89, 0x8b, 0x19, 0x4a, 0xcd, 0xd1, 0x7a,
-  0xcf, 0x48, 0x3a, 0xc7, 0x98, 0x53, 0x16, 0x45, 0xec, 0xec, 0xac, 0x46,
-  0xd5, 0x8a, 0xbe, 0x7f, 0xde, 0xea, 0xc7, 0xba, 0x11, 0x80, 0xa9, 0x0b,
-  0x67, 0xdc, 0x6c, 0xe7, 0xba, 0xa0, 0xf9, 0x6e, 0x6b, 0x5f, 0xb4, 0x49,
-  0xc4, 0x52, 0x4f, 0x00, 0x7d, 0x5b, 0x84, 0x19, 0x68, 0x5f, 0xea, 0x93,
-  0x17, 0x67, 0xc9, 0x5d, 0x06, 0xc3, 0x91, 0x5e, 0xa9, 0x65, 0xb6, 0x98,
-  0xba, 0xd9, 0x59, 0xd8, 0xb4, 0xe4, 0xbb, 0xb1, 0x33, 0x52, 0xc3, 0x75,
-  0xc7, 0x3a, 0xde, 0x6e, 0x00, 0x5e, 0x28, 0x30, 0xbe, 0xf0, 0x9d, 0xc0,
-  0x67, 0x0f, 0x1f, 0x15, 0x91, 0xc9, 0x3c, 0x77, 0x24, 0xa9, 0xa5, 0xcd,
-  0xf9, 0x23, 0xa4, 0xd9, 0xd3, 0x1d, 0x50, 0xb8, 0xbf, 0xf5, 0x8d, 0x4e,
-  0x20, 0x4f, 0x2b, 0xf9, 0x01, 0xab, 0xb0, 0x2c, 0x05, 0xe8, 0xc6, 0x57,
-  0x07, 0x62, 0x5c, 0x92, 0x74, 0xae, 0xf1, 0x7f, 0x40, 0x34, 0x01, 0x50,
-  0x59, 0xf2, 0xb6, 0x9b, 0x3a, 0x5d, 0x5c, 0xd6, 0x0e, 0xf4, 0x0d, 0xc6,
-  0xf6, 0x49, 0x50, 0x0d, 0x8f, 0x2f, 0x65, 0xdf, 0x28, 0x9f, 0x03, 0xbb,
-  0x79, 0x38, 0xfc, 0xb2, 0x8b, 0x09, 0xe0, 0x4b, 0xb6, 0xfb, 0x75, 0xd8,
-  0xdd, 0x6d, 0x2d, 0xf6, 0xd9, 0xc1, 0x70, 0x68, 0x4b, 0xcd, 0x15, 0x92,
-  0x6c, 0x3d, 0x65, 0x05, 0x35, 0x23, 0x99, 0xa1, 0x51, 0x15, 0x38, 0x27,
-  0xa2, 0xee, 0x68, 0x23, 0xad, 0xd4, 0xc2, 0xdd, 0x27, 0x7e, 0xcd, 0x5d,
-  0x67, 0x3f, 0x48, 0x6b, 0xbd, 0x4f, 0xec, 0x2c, 0xda, 0xd7, 0x0f, 0x91,
-  0xbe, 0x9e, 0xb6, 0xe6, 0xb5, 0xb7, 0xf7, 0x85, 0x82, 0xb9, 0x88, 0x5f,
-  0x3a, 0xa0, 0x14, 0x25, 0x0e, 0x65, 0x16, 0xf4, 0x60, 0x5f, 0x6c, 0xb7,
-  0xdd, 0xbe, 0x94, 0x2a, 0x30, 0x98, 0xa0, 0xab, 0x67, 0x7e, 0x5a, 0xa4,
-  0x34, 0xa1, 0x3d, 0x38, 0x44, 0xe4, 0x98, 0x74, 0x4e, 0x8f, 0xab, 0x1a,
-  0x7a, 0x8c, 0x91, 0x91, 0x18, 0x56, 0xc7, 0x71, 0x12, 0x6c, 0x18, 0x41,
-  0x3f, 0x5f, 0xb8, 0x7e, 0xdc, 0xc8, 0xa1, 0xd4, 0x08, 0xc8, 0xe0, 0x20,
-  0xe4, 0x08, 0x4a, 0x23, 0x3e, 0x11, 0xc5, 0xc5, 0xa7, 0x74, 0x43, 0x9d,
-  0xe5, 0x6d, 0xdf, 0x8b, 0x1c, 0xbf, 0x33, 0x50, 0xb1, 0xd6, 0xe2, 0x1a,
-  0x24, 0xa7, 0xac, 0x84, 0x35, 0xf0, 0xa0, 0x05, 0xb2, 0x27, 0xf5, 0x56,
-  0x9a, 0x46, 0x85, 0x8c, 0xdd, 0x17, 0xc1, 0x9a, 0xd8, 0xb0, 0xcc, 0x6b,
-  0xb9, 0x6d, 0xc7, 0xc7, 0xb1, 0x10, 0x8b, 0x48, 0xc8, 0x38, 0x44, 0x04,
-  0x59, 0x67, 0x1c, 0x0b, 0xd3, 0x66, 0xb1, 0x74, 0xa6, 0xb6, 0x9c, 0x73,
-  0xe1, 0x92, 0x39, 0x49, 0x70, 0x07, 0x79, 0x4a, 0xfe, 0xdb, 0x12, 0x0c,
-  0x89, 0x6f, 0x5d, 0xba, 0x46, 0xf5, 0x4f, 0x7b, 0x4f, 0x60, 0x6a, 0x50,
-  0xb2, 0x8f, 0x6f, 0x65, 0x9f, 0x58, 0xa2, 0x27, 0xc3, 0xad, 0xbf, 0x4f,
-  0x92, 0xe5, 0x62, 0x39, 0xc2, 0xd6, 0x14, 0xa8, 0x62, 0xa0, 0x69, 0xcd,
-  0x86, 0xd7, 0x92, 0x08, 0x38, 0x8a, 0xbb, 0x48, 0x14, 0xee, 0xa1, 0xe3,
-  0x31, 0x72, 0x9d, 0x1b, 0xd7, 0x37, 0xe1, 0x20, 0x00, 0x34, 0xe1, 0x2e,
-  0xbd, 0x74, 0xa1, 0x16, 0x82, 0xa7, 0x3b, 0x3b, 0xdd, 0xe6, 0xd2, 0x51,
-  0x71, 0x6b, 0x11, 0xbe, 0x0a, 0xbf, 0xc3, 0xaf, 0x88, 0xd2, 0xcc, 0xd2,
-  0x45, 0x05, 0x21, 0xb5, 0x7f, 0x09, 0x9b, 0x00, 0x56, 0xcc, 0x3c, 0x42,
-  0xc1, 0xba, 0xc9, 0xa9, 0xfc, 0x91, 0xf1, 0x80, 0x74, 0xcd, 0x9a, 0x67,
-  0x51, 0xa0, 0x82, 0xac, 0xe0, 0x4d, 0x6a, 0xc8, 0x0f, 0x6c, 0x84, 0xd3,
-  0x18, 0x89, 0xce, 0xc8, 0x3a, 0xa1, 0x4c, 0x7b, 0xcf, 0x22, 0x14, 0x91,
-  0x0c, 0x2f, 0x4e, 0xcf, 0x13, 0x25, 0xb2, 0x2e, 0xdb, 0xe5, 0x74, 0x4c,
-  0x3c, 0xe1, 0xa2, 0x9c, 0x7b, 0xb1, 0x40, 0x4c, 0x33, 0xc8, 0x4b, 0x9a,
-  0x2d, 0x2d, 0x56, 0xd0, 0xab, 0x5c, 0x62, 0x1c, 0x5a, 0xa9, 0x73, 0xfb,
-  0x41, 0x4d, 0xf0, 0x56, 0xcb, 0x0b, 0xd7, 0xf1, 0x34, 0x9b, 0x05, 0xfa,
-  0xc0, 0x9e, 0x1c, 0xb4, 0xd3, 0x25, 0x13, 0xbb, 0x98, 0x8b, 0x41, 0x47,
-  0x6a, 0x38, 0x46, 0x54, 0xb1, 0x1a, 0xd3, 0x9c, 0x6b, 0xb0, 0x4d, 0x8b,
-  0x72, 0x88, 0x4e, 0x7d, 0xb5, 0x36, 0x89, 0x22, 0x18, 0xb4, 0xa2, 0x4d,
-  0xf9, 0x73, 0x06, 0x15, 0xd3, 0x90, 0x0c, 0xa5, 0x21, 0xbe, 0x13, 0xba,
-  0x25, 0xaf, 0x2d, 0xb6, 0xcc, 0xa2, 0xc9, 0x02, 0x69, 0xd1, 0x4b, 0x59,
-  0x3b, 0x7e, 0x9d, 0xcf, 0x4e, 0xcf, 0x2f, 0x12, 0x1b, 0x9c, 0x5c, 0x9c,
-  0xfc, 0x51, 0xeb, 0x08, 0x01, 0x7d, 0x8e, 0x35, 0x38, 0x8f, 0x0b, 0xd3,
-  0xd1, 0x4a, 0x55, 0x22, 0xac, 0xad, 0x09, 0x6b, 0x03, 0x95, 0x69, 0xca,
-  0x7b, 0x8b, 0x29, 0x63, 0xe0, 0x73, 0xc7, 0x73, 0x14, 0x55, 0x09, 0x0c,
-  0x3a, 0xee, 0xee, 0xf5, 0x32, 0xcd, 0x93, 0xdd, 0x08, 0x75, 0x40, 0x81,
-  0x3e, 0x3f, 0x1a, 0x5e, 0xc8, 0xaa, 0xe1, 0xb7, 0xce, 0xc8, 0xc5, 0x7a,
-  0xa8, 0x1f, 0x46, 0x83, 0x54, 0x98, 0x3a, 0x90, 0x24, 0x85, 0x90, 0x7d,
-  0xb4, 0xef, 0xac, 0xca, 0xc1, 0x9a, 0x3d, 0x09, 0x12, 0xe2, 0x99, 0x73,
-  0x2a, 0xad, 0xf0, 0x21, 0xe7, 0x0f, 0xd6, 0xb5, 0x93, 0x75, 0xba, 0x73,
-  0xe5, 0x50, 0x00, 0xff, 0xdc, 0xb7, 0xf0, 0x34, 0xe0, 0x16, 0xe0, 0xee,
-  0xda, 0xc0, 0xb1, 0x79, 0xd7, 0xf1, 0xa1, 0x0b, 0x7a, 0xbe, 0xca, 0xe6,
-  0x46, 0x18, 0xf2, 0x9c, 0x6f, 0xe7, 0x99, 0xf3, 0x1e, 0x99, 0x7c, 0x14,
-  0x0c, 0x05, 0x1f, 0x5b, 0x26, 0x32, 0x87, 0xf0, 0xb5, 0xc8, 0xee, 0xc9,
-  0x73, 0xb7, 0x8a, 0x50, 0x26, 0x5c, 0x94, 0x88, 0x4c, 0x3f, 0xb8, 0x8c,
-  0x10, 0x66, 0x93, 0xcf, 0x97, 0x99, 0x5a, 0xcc, 0xd2, 0x72, 0x9a, 0x73,
-  0x15, 0x9b, 0x51, 0xcc, 0x2c, 0xec, 0x72, 0xea, 0x7d, 0x3f, 0x7a, 0x13,
-  0x1d, 0x9f, 0x1c, 0xf9, 0xdd, 0x12, 0x68, 0x7f, 0x3e, 0xc9, 0x5e, 0xc8,
-  0x43, 0x79, 0x30, 0x77, 0x5d, 0x0c, 0x92, 0x33, 0xd4, 0xce, 0x64, 0xef,
-  0x53, 0xf5, 0xef, 0xbe, 0x35, 0x39, 0x2c, 0x6c, 0x8c, 0xa1, 0xfb, 0x93,
-  0xa5, 0xd3, 0x7c, 0x4e, 0x9b, 0xcb, 0x9f, 0xe0, 0xd7, 0xa0, 0xec, 0x61,
-  0x67, 0xca, 0x2f, 0xfc, 0xcb, 0x15, 0x4d, 0x84, 0xf4, 0xb4, 0xf6, 0x23,
-  0x4f, 0x95, 0xb6, 0x48, 0x89, 0xe3, 0x26, 0xd0, 0x01, 0xf3, 0x67, 0x9c,
-  0xe9, 0x52, 0x4a, 0xdf, 0x4c, 0xa4, 0x85, 0x4b, 0x7b, 0xc6, 0xe4, 0x58,
-  0x79, 0xce, 0x37, 0x25, 0x97, 0xc2, 0x81, 0xac, 0x13, 0x67, 0x1b, 0xd0,
-  0xb9, 0x81, 0xb3, 0x84, 0xda, 0x9a, 0x83, 0xe3, 0x4e, 0x1d, 0x6e, 0xb3,
-  0x4b, 0x20, 0x03, 0xcf, 0x1c, 0xd9, 0xe1, 0xc1, 0x4c, 0xba, 0x45, 0x70,
-  0x1b, 0xa6, 0xc5, 0xa7, 0x42, 0x8d, 0x8e, 0x74, 0xdc, 0x3d, 0xd6, 0x18,
-  0x1d, 0x3a, 0xf6, 0x29, 0x57, 0xd8, 0x6e, 0x98, 0x86, 0xe8, 0x9a, 0x0f,
-  0xa5, 0xbb, 0xa7, 0xcf, 0x7c, 0x53, 0x97, 0x00, 0x61, 0x73, 0x6d, 0x79,
-  0x1e, 0xe4, 0x0b, 0x95, 0xe4, 0xee, 0x31, 0x55, 0x14, 0xe4, 0x2e, 0x8b,
-  0x46, 0xbf, 0x07, 0x7d, 0x08, 0x31, 0x5c, 0x14, 0xd0, 0x7c, 0xe6, 0xf7,
-  0x1e, 0x73, 0x45, 0x2b, 0x6e, 0x89, 0x0d, 0x42, 0xea, 0xc0, 0x38, 0x34,
-  0x16, 0xd1, 0x36, 0x55, 0x41, 0x9f, 0xa5, 0x1f, 0x3b, 0x57, 0xfd, 0x6c,
-  0x39, 0x53, 0xa8, 0x89, 0xa0, 0xa7, 0x2f, 0x55, 0x9b, 0x45, 0xe5, 0xaf,
-  0xb9, 0x03, 0xa4, 0xf4, 0x09, 0x15, 0x85, 0x29, 0x4b, 0x41, 0xb2, 0xa6,
-  0x84, 0x74, 0xbb, 0xc4, 0x9a, 0x2e, 0xdc, 0x2f, 0x32, 0x1e, 0xf8, 0x42,
-  0x56, 0x41, 0xd1, 0x14, 0xcb, 0x22, 0x40, 0x0b, 0xc5, 0x82, 0xeb, 0x73,
-  0xf2, 0xd5, 0x6a, 0x9f, 0x7d, 0x99, 0xfd, 0x95, 0x2b, 0x02, 0x6b, 0x3c,
-  0xbf, 0x60, 0x75, 0xc9, 0x2c, 0x11, 0xb2, 0xe0, 0x59, 0xde, 0xd3, 0x17,
-  0x6a, 0xaa, 0x50, 0x55, 0xd8, 0xaa, 0xd4, 0xb6, 0x2d, 0xcd, 0xcf, 0x76,
-  0x9d, 0xdd, 0x07, 0xc0, 0x0e, 0x1b, 0x95, 0x70, 0x87, 0x00, 0xde, 0x81,
-  0x18, 0xdc, 0x70, 0xf8, 0x5d, 0xf2, 0xf6, 0xf5, 0x33, 0xe4, 0x18, 0x5f,
-  0x65, 0x25, 0x2a, 0x40, 0x7b, 0x5d, 0xec, 0xf4, 0xfb, 0xa0, 0xb1, 0xbd,
-  0x20, 0x26, 0x40, 0xae, 0xda, 0x5c, 0x4f, 0x2f, 0xa4, 0x6c, 0xda, 0x3f,
-  0x00, 0x15, 0x5e, 0xf5, 0xd4, 0x7d, 0x22, 0x66, 0x10, 0x2c, 0xa4, 0x21,
-  0x78, 0x8a, 0xe8, 0xd2, 0xce, 0x4d, 0x69, 0x32, 0xb1, 0x67, 0x4f, 0x3c,
-  0x13, 0x2b, 0xef, 0x17, 0xa8, 0x7e, 0x31, 0xbf, 0x82, 0x44, 0x1d, 0x39,
-  0x51, 0xcf, 0x84, 0x71, 0x1e, 0xca, 0xb9, 0x87, 0x38, 0xdb, 0x7d, 0x8d,
-  0xe6, 0xa1, 0x51, 0x33, 0xc1, 0x7b, 0xcf, 0x42, 0x75, 0x12, 0xb5, 0xe8,
-  0x40, 0x61, 0x5a, 0x97, 0x82, 0x65, 0x95, 0xe0, 0xd9, 0xe7, 0xee, 0x59,
-  0x18, 0x0f, 0xf2, 0x79, 0x50, 0x21, 0x68, 0xc5, 0x1b, 0x2a, 0x04, 0x8b,
-  0x68, 0xe0, 0xc3, 0x2c, 0x44, 0xf2, 0x09, 0xd6, 0x3e, 0x78, 0xe5, 0x45,
-  0x53, 0x5b, 0xe6, 0x12, 0xa3, 0x8e, 0x34, 0x79, 0x52, 0xf9, 0xe2, 0x3a,
-  0x3c, 0x9c, 0xcf, 0xe5, 0xa6, 0x3e, 0x03, 0x5a, 0x47, 0x63, 0x3f, 0x8d,
-  0x09, 0x66, 0xa1, 0xef, 0xce, 0xce, 0xba, 0xd0, 0xfe, 0xe1, 0x81, 0xbd,
-  0xd1, 0x3e, 0x38, 0x4c, 0xed, 0x41, 0x27, 0xbb, 0x7a, 0x66, 0x68, 0xca,
-  0xc5, 0xd5, 0x3c, 0xff, 0x7b, 0x16, 0xa4, 0xa7, 0x5b, 0x75, 0xa7, 0xe0,
-  0xf1, 0x3d, 0x65, 0x18, 0xb7, 0xe9, 0x34, 0x57, 0xa6, 0x08, 0x3b, 0xba,
-  0x7f, 0xe0, 0x89, 0x52, 0xed, 0xc7, 0x1c, 0x47, 0x94, 0xb5, 0x00, 0xae,
-  0x93, 0x07, 0x0f, 0x4e, 0xd6, 0x40, 0x7f, 0x79, 0xfe, 0x54, 0x65, 0x2f,
-  0x13, 0x92, 0x71, 0x2f, 0x61, 0x21, 0xa6, 0x0c, 0xfb, 0xdf, 0x66, 0xd3,
-  0xcf, 0xf5, 0xea, 0xd3, 0xad, 0x74, 0x15, 0x9e, 0x4a, 0x2b, 0x4e, 0x86,
-  0x5f, 0xef, 0xf2, 0xb9, 0x66, 0x8b, 0x75, 0x5e, 0x7f, 0xbe, 0xc2, 0x04,
-  0x55, 0xc9, 0xbd, 0x79, 0xc4, 0xb4, 0x14, 0x3c, 0xff, 0x85, 0x3b, 0x09,
-  0x41, 0x01, 0x09, 0x4b, 0x7f, 0xe2, 0xb0, 0x3d, 0xab, 0xaa, 0x63, 0x07,
-  0x89, 0xd5, 0xfe, 0x85, 0x18, 0x6a, 0xe7, 0x8a, 0xf1, 0x1e, 0x29, 0xc2,
-  0xab, 0x9c, 0xa8, 0xb8, 0x4a, 0x42, 0x67, 0xe8, 0x73, 0x21, 0xa9, 0x37,
-  0x5c, 0xd1, 0xd6, 0xce, 0x01, 0xb8, 0x49, 0x58, 0x28, 0xd2, 0x3f, 0xfd,
-  0x42, 0x69, 0xc3, 0xee, 0x4b, 0x13, 0x53, 0x57, 0xbe, 0xf1, 0xc5, 0x4e,
-  0x28, 0xb4, 0x4e, 0x60, 0xa9, 0x17, 0xdc, 0xcd, 0x95, 0x2f, 0x08, 0x65,
-  0x1c, 0x4f, 0x51, 0x76, 0x71, 0x6a, 0xb5, 0x12, 0x0d, 0xfc, 0xd9, 0x3f,
-  0xb6, 0xd7, 0x60, 0xba, 0x17, 0xa1, 0x08, 0x95, 0x1c, 0xbf, 0x0e, 0x1e,
-  0x7c, 0xe2, 0x27, 0x98, 0x4e, 0x21, 0x0d, 0xdc, 0x8b, 0x21, 0xa2, 0xd2,
-  0x1a, 0x92, 0xc1, 0xa3, 0x4f, 0x35, 0xe1, 0x47, 0xc2, 0x5d, 0x78, 0xfd,
-  0x3b, 0xcf, 0x08, 0x39, 0x1c, 0x72, 0x8e, 0x5e, 0xcd, 0x30, 0x15, 0x73,
-  0xf3, 0x17, 0xb4, 0xf7, 0xfe, 0x8b, 0xe7, 0x0f, 0x3c, 0xab, 0x97, 0x66,
-  0xe5, 0xae, 0xfa, 0xe0, 0xbd, 0x2f, 0xba, 0xc7, 0xdc, 0xd4, 0x02, 0x03,
-  0xd3, 0xd1, 0x93, 0x96, 0x6c, 0x02, 0x85, 0xf1, 0xdf, 0xcd, 0xf2, 0x53,
-  0x22, 0x57, 0xb1, 0xfa, 0xf7, 0x70, 0xbc, 0x5f, 0x06, 0x88, 0x5d, 0x6a,
-  0xf6, 0x71, 0xf5, 0xe7, 0xc3, 0xaa, 0xb4, 0x3e, 0x9e, 0x9c, 0x57, 0x27,
-  0x68, 0x41, 0xf6, 0x9c, 0xe4, 0x88, 0xe5, 0xdc, 0x73, 0x0e, 0x51, 0x04,
-  0x15, 0xcb, 0xd4, 0x62, 0xbb, 0x75, 0x74, 0xdf, 0xd1, 0xa6, 0x32, 0x75,
-  0x04, 0xc6, 0xb3, 0x9d, 0xd6, 0x31, 0xa8, 0xae, 0x97, 0xa2, 0x79, 0xbb,
-  0x19, 0x79, 0x04, 0xad, 0xe0, 0xb5, 0x3d, 0xcf, 0xbd, 0xf4, 0xda, 0x17,
-  0x5c, 0xa4, 0x43, 0xc0, 0x9e, 0x89, 0x7a, 0xee, 0xc0, 0xec, 0xd9, 0x3a,
-  0x5a, 0x16, 0x02, 0x1d, 0x0d, 0x74, 0xdc, 0xcd, 0x34, 0x8e, 0x17, 0xa6,
-  0x00, 0x37, 0x41, 0x37, 0x2a, 0xda, 0x20, 0x20, 0x9e, 0x76, 0xe9, 0x3a,
-  0x1b, 0xdf, 0xd8, 0x91, 0x71, 0x6d, 0x44, 0xde, 0x7a, 0xea, 0x96, 0x16,
-  0xd4, 0x77, 0x76, 0x7e, 0xd4, 0x56, 0x04, 0xfc, 0xa3, 0x42, 0x35, 0xe7,
-  0x17, 0xc3, 0xb3, 0x7d, 0x8c, 0x57, 0x7c, 0x30, 0x74, 0x20, 0x0e, 0x87,
-  0xd9, 0xdf, 0x34, 0x2b, 0xba, 0xf2, 0x4f, 0x3f, 0x5f, 0xf1, 0xf4, 0x50,
-  0x43, 0xa4, 0x8e, 0x27, 0xe0, 0xbe, 0xb4, 0x0f, 0xe1, 0x4b, 0x5f, 0x28,
-  0xc8, 0x84, 0x59, 0x77, 0xc5, 0x78, 0x84, 0x91, 0xb9, 0x94, 0x1a, 0xff,
-  0xf0, 0x97, 0xde, 0x66, 0x73, 0xbd, 0x9c, 0xdf, 0x38, 0x79, 0x51, 0x03,
-  0xd8, 0x6c, 0x83, 0xfd, 0x0b, 0x2f, 0xec, 0x68, 0x04, 0x40, 0x67, 0xce,
-  0xfd, 0xdd, 0x53, 0x4b, 0x85, 0xc5, 0xac, 0x8a, 0xff, 0x88, 0xf8, 0xeb,
-  0x32, 0x58, 0x83, 0x17, 0x3b, 0xee, 0xfa, 0x5d, 0x2c, 0x47, 0x24, 0x90,
-  0x26, 0x37, 0xd9, 0xbd, 0xa7, 0x3a, 0x71, 0xd9, 0x91, 0xb8, 0x98, 0xcf,
-  0x61, 0x88, 0xf0, 0x8f, 0xb8, 0x06, 0x7e, 0xfa, 0x49, 0x78, 0x7c, 0x61,
-  0xa1, 0x0d, 0xea, 0x5a, 0x70, 0xb5, 0xdb, 0x89, 0x27, 0x4a, 0x01, 0x19,
-  0x1c, 0x2f, 0x36, 0xc8, 0x97, 0xd9, 0x34, 0x03, 0x76, 0xba, 0xe8, 0x29,
-  0x4c, 0xd8, 0xb1, 0x14, 0x4c, 0xc4, 0x18, 0xb3, 0x57, 0x05, 0xc9, 0xce,
-  0x6c, 0xcf, 0x9b, 0x23, 0x30, 0x55, 0xed, 0x55, 0xb4, 0xe3, 0x07, 0xef,
-  0x2f, 0xbe, 0x3b, 0x3d, 0x1f, 0x26, 0xdb, 0x00, 0xb5, 0xbc, 0x38, 0x3f,
-  0xfe, 0xe6, 0x3d, 0xa9, 0xff, 0xce, 0x2d, 0xf3, 0x3a, 0x9d, 0xe7, 0x74,
-  0x73, 0x24, 0xc3, 0x3a, 0x9b, 0xd3, 0x46, 0x5e, 0x59, 0x41, 0x5f, 0x29,
-  0x5d, 0x43, 0x77, 0x65, 0x51, 0x4a, 0xdd, 0x33, 0x4e, 0x90, 0xbb, 0x2e,
-  0x74, 0x37, 0x24, 0xd2, 0x6d, 0x2e, 0xb9, 0x1a, 0x85, 0xd7, 0x6d, 0xf3,
-  0x26, 0x50, 0x69, 0x62, 0xde, 0xd5, 0xe4, 0xe2, 0xbb, 0x83, 0x77, 0xdf,
-  0x0f, 0xad, 0xca, 0xc3, 0x8f, 0x3f, 0xfe, 0x18, 0x7a, 0xfd, 0xab, 0xfd,
-  0xed, 0x6d, 0x96, 0x31, 0xaf, 0xd3, 0x8f, 0x1f, 0x07, 0x55, 0xb6, 0xb6,
-  0xf6, 0xc6, 0x3b, 0xeb, 0x7c, 0x9d, 0xe7, 0x6a, 0x49, 0xa2, 0x05, 0x7d,
-  0xbd, 0x4d, 0x0b, 0x8c, 0x72, 0xd2, 0xdb, 0xcb, 0x3a, 0x9f, 0xd2, 0x8d,
-  0x94, 0x55, 0xfc, 0xf6, 0xf6, 0xda, 0xda, 0xf0, 0xe8, 0x28, 0x39, 0x38,
-  0x19, 0x9e, 0x06, 0xef, 0x6e, 0xee, 0x6e, 0x91, 0xe8, 0x75, 0x95, 0xd5,
-  0xf4, 0xcb, 0xda, 0xda, 0xc9, 0xc1, 0x05, 0x74, 0xde, 0x1f, 0x8e, 0xce,
-  0x87, 0xc7, 0xa7, 0xef, 0xb0, 0x3d, 0x88, 0x58, 0x4c, 0xa7, 0x77, 0x08,
-  0x58, 0xbd, 0xcc, 0x19, 0xad, 0xe7, 0xce, 0x2a, 0x37, 0xb7, 0xd1, 0xf7,
-  0xe9, 0xce, 0xba, 0x03, 0x70, 0xb6, 0xc6, 0x39, 0x20, 0x74, 0x9d, 0x56,
-  0xc2, 0x62, 0x11, 0xd7, 0x12, 0x6f, 0xf8, 0x92, 0x10, 0x98, 0x6c, 0x24,
-  0xd1, 0xd5, 0x3d, 0xc1, 0xb8, 0x60, 0x47, 0x47, 0x10, 0x38, 0x19, 0x9f,
-  0xf9, 0xf0, 0x18, 0xb5, 0x76, 0x92, 0xf7, 0xc3, 0x83, 0x6f, 0x8f, 0xf0,
-  0xec, 0xb7, 0x59, 0xed, 0x37, 0x44, 0x4a, 0x4c, 0xa3, 0x97, 0x77, 0x59,
-  0x5d, 0x8d, 0xd3, 0x05, 0xd2, 0xf8, 0xa9, 0x9f, 0xbe, 0xdc, 0x44, 0x41,
-  0xe3, 0xa2, 0x0d, 0xf8, 0xca, 0xdb, 0x73, 0x7d, 0x9e, 0x8b, 0x64, 0x87,
-  0xed, 0x9e, 0x1f, 0x1d, 0xbc, 0x7e, 0x7b, 0x64, 0x31, 0xfa, 0x72, 0x73,
-  0x53, 0xa3, 0xd7, 0xa8, 0x1e, 0xec, 0x6d, 0xe1, 0x90, 0x0e, 0xb0, 0xfa,
-  0xf4, 0x0d, 0x2a, 0xf9, 0xc6, 0xbb, 0xf3, 0x3b, 0xc5, 0xcf, 0x0e, 0x2e,
-  0xf3, 0x6d, 0x69, 0xdd, 0xfa, 0x4b, 0xdd, 0x9a, 0x28, 0x66, 0xb9, 0x49,
-  0xcc, 0x62, 0xd6, 0x60, 0x73, 0xc8, 0x97, 0x3b, 0x3b, 0x3b, 0x0f, 0xcc,
-  0x83, 0x15, 0x0a, 0xbd, 0x77, 0x69, 0x2a, 0xfb, 0x78, 0x7c, 0xdb, 0xb7,
-  0xef, 0x47, 0x3c, 0x55, 0xb8, 0x04, 0x94, 0x25, 0x9c, 0x8b, 0x19, 0x26,
-  0xaf, 0xb3, 0xf8, 0x90, 0xc7, 0x45, 0xe1, 0x76, 0xa0, 0xb1, 0x38, 0x24,
-  0x23, 0xb3, 0xcc, 0xe3, 0x63, 0x8b, 0x6d, 0xe0, 0xa4, 0x03, 0x71, 0x3c,
-  0x5b, 0x79, 0xdf, 0x6e, 0x12, 0xdf, 0x50, 0x9b, 0xf8, 0x31, 0x28, 0xca,
-  0xab, 0xed, 0xd9, 0x3e, 0x0b, 0x35, 0xf4, 0xd0, 0x1b, 0xe0, 0xa9, 0x24,
-  0x24, 0x1c, 0xbb, 0xb0, 0xf4, 0x0a, 0x0b, 0x8b, 0xfc, 0x99, 0x4f, 0x18,
-  0xd7, 0x6f, 0x58, 0x05, 0x89, 0x89, 0xba, 0xb4, 0x99, 0x5b, 0x6d, 0xd2,
-  0x48, 0x27, 0xa0, 0x3f, 0x36, 0x3a, 0x0e, 0x88, 0x85, 0x50, 0x2f, 0x88,
-  0x77, 0x63, 0x12, 0xa1, 0x5f, 0x4b, 0x22, 0x99, 0x41, 0xfd, 0x91, 0x39,
-  0xaf, 0x96, 0xc9, 0x15, 0x78, 0x49, 0x38, 0xc2, 0x17, 0xc8, 0x71, 0x2d,
-  0xb9, 0xc2, 0x0e, 0xf7, 0x80, 0xdc, 0x59, 0x4d, 0x5b, 0x70, 0x31, 0x40,
-  0x68, 0xb8, 0xdd, 0x67, 0xbf, 0xcf, 0xf4, 0x53, 0x39, 0x6a, 0xf9, 0x84,
-  0xce, 0x83, 0x49, 0xc9, 0xea, 0xcf, 0xf5, 0xa2, 0x0e, 0x68, 0x67, 0x48,
-  0xa3, 0xe8, 0xf4, 0xb5, 0xf4, 0x95, 0x7e, 0x2b, 0xe9, 0x2e, 0x2c, 0x15,
-  0x4f, 0xbb, 0xb1, 0xcd, 0x79, 0x64, 0x9f, 0xdc, 0xc7, 0xe1, 0x99, 0xfe,
-  0x86, 0x14, 0xdf, 0xfc, 0x16, 0x93, 0x07, 0x93, 0x4f, 0x92, 0x4d, 0xdc,
-  0x02, 0x26, 0xe8, 0x72, 0x74, 0x0e, 0x2b, 0xac, 0x9c, 0xf3, 0x10, 0x2a,
-  0x1c, 0x0f, 0x8c, 0x70, 0x9f, 0x96, 0x06, 0x97, 0xca, 0xff, 0xda, 0x1e,
-  0x54, 0xd5, 0xf5, 0x76, 0x3e, 0xf9, 0x50, 0x56, 0x69, 0xf2, 0x4b, 0x93,
-  0xe3, 0x57, 0xe3, 0xf6, 0x24, 0xfe, 0x17, 0xaf, 0xe0, 0x6f, 0x5a, 0xa9,
-  0xd5, 0xb3, 0xf8, 0x1c, 0x33, 0xe8, 0xf7, 0x19, 0xde, 0x41, 0x7b, 0xfa,
-  0x40, 0x0f, 0x7c, 0x70, 0x18, 0x15, 0xbf, 0x63, 0x76, 0x11, 0x56, 0x48,
-  0x93, 0x94, 0x50, 0x73, 0xe2, 0x2d, 0x71, 0x42, 0xb7, 0x9a, 0x40, 0x3f,
-  0xef, 0xed, 0xec, 0xec, 0xee, 0xef, 0x7e, 0xf9, 0x62, 0x67, 0x7f, 0x77,
-  0x77, 0x77, 0x6f, 0x7f, 0x77, 0x7f, 0x7f, 0x6f, 0xe7, 0xd7, 0xed, 0xf5,
-  0x55, 0x4b, 0xf7, 0xf6, 0x9b, 0x15, 0x0d, 0xd2, 0xac, 0xd7, 0x25, 0x8e,
-  0xf5, 0x17, 0x37, 0x7b, 0x9e, 0xd5, 0x64, 0x3d, 0xa9, 0x66, 0x23, 0xea,
-  0x4a, 0x0f, 0x67, 0x38, 0x99, 0x8a, 0x64, 0xe9, 0x2c, 0x98, 0xd0, 0xeb,
-  0xd3, 0x1f, 0xdf, 0x9d, 0x9c, 0x1e, 0xbc, 0x4e, 0x2e, 0x4e, 0x93, 0x03,
-  0xb6, 0xfc, 0x45, 0xf8, 0x24, 0xc7, 0xa2, 0x23, 0xed, 0x52, 0x00, 0x32,
-  0x44, 0x5b, 0xf6, 0xb5, 0x1d, 0x52, 0x1f, 0xdd, 0xcf, 0x83, 0x68, 0x8f,
-  0xb3, 0x60, 0xcd, 0x0e, 0x2d, 0x0d, 0xae, 0xeb, 0xd9, 0xe3, 0x37, 0xc2,
-  0xa7, 0xf4, 0xdc, 0x13, 0x77, 0xbc, 0x57, 0xde, 0x79, 0x38, 0x76, 0xf2,
-  0x35, 0xb1, 0x49, 0x5d, 0x5a, 0xea, 0xc8, 0x76, 0x69, 0x38, 0x9b, 0x12,
-  0xbd, 0xc5, 0x6f, 0xf0, 0xb9, 0x64, 0xff, 0x57, 0x5e, 0x75, 0xf1, 0x74,
-  0x48, 0xac, 0xef, 0x59, 0xa4, 0x04, 0x4b, 0x49, 0x10, 0x4b, 0xb7, 0x3a,
-  0x13, 0x3c, 0x5d, 0x39, 0x25, 0xba, 0xcc, 0xb3, 0x8f, 0x3c, 0xeb, 0x26,
-  0xef, 0x95, 0x40, 0x67, 0x3f, 0x3b, 0xae, 0xd7, 0x60, 0xe6, 0x88, 0xbc,
-  0xb4, 0x21, 0x73, 0x84, 0x57, 0xa4, 0x3b, 0xf4, 0x63, 0x2c, 0xd9, 0x77,
-  0x81, 0x6f, 0xc2, 0x7b, 0x7c, 0xdb, 0x59, 0x78, 0x65, 0x00, 0xef, 0x87,
-  0xc7, 0xef, 0xbe, 0x65, 0x1f, 0xee, 0x8f, 0xa7, 0xe7, 0xaf, 0x87, 0xd4,
-  0x2c, 0x24, 0x9c, 0x35, 0x36, 0xf2, 0x81, 0x13, 0xea, 0xa8, 0xe4, 0x5c,
-  0xa2, 0xeb, 0x3f, 0x09, 0x39, 0xf5, 0xc2, 0x8a, 0x8d, 0xb3, 0x50, 0xe5,
-  0x01, 0x52, 0x44, 0xfc, 0xd6, 0x08, 0xa8, 0xf1, 0xeb, 0x59, 0x3a, 0xbe,
-  0x86, 0x8e, 0x2e, 0xc4, 0xca, 0xc1, 0x76, 0xdb, 0x48, 0x99, 0xd9, 0x86,
-  0xea, 0xb5, 0x5d, 0x17, 0x4c, 0x8e, 0xdc, 0x0a, 0x94, 0x73, 0x5f, 0x63,
-  0x30, 0x30, 0xd0, 0x10, 0xad, 0x5f, 0x4e, 0xd3, 0x2b, 0xee, 0xb0, 0x7b,
-  0x0c, 0x82, 0xce, 0xb4, 0xfb, 0x4f, 0xed, 0x12, 0xd7, 0x06, 0xb7, 0x77,
-  0xcc, 0x04, 0xc0, 0x40, 0x72, 0x0c, 0x7f, 0xa1, 0xbe, 0x27, 0x11, 0x3b,
-  0xe1, 0xa8, 0xe7, 0xb8, 0x1e, 0x14, 0x4c, 0x6f, 0x97, 0x11, 0xe3, 0x0a,
-  0xd6, 0x82, 0xbc, 0x43, 0xa2, 0x79, 0x3f, 0x40, 0xf0, 0x11, 0xf5, 0x14,
-  0x2d, 0x05, 0x56, 0xa0, 0xca, 0x07, 0x26, 0xfa, 0xe2, 0x40, 0xb2, 0xe4,
-  0x18, 0x0c, 0xa3, 0x4f, 0x55, 0x16, 0xf1, 0xa6, 0x72, 0xf0, 0x3a, 0x0a,
-  0x43, 0x22, 0x5e, 0x65, 0xdd, 0xd0, 0x64, 0x7c, 0x99, 0x11, 0xef, 0x64,
-  0xae, 0x6a, 0x1a, 0x4a, 0x8a, 0x12, 0xa3, 0x5c, 0x3c, 0xdb, 0x30, 0xc6,
-  0x49, 0xa1, 0x92, 0xac, 0xe6, 0x75, 0x8b, 0x7a, 0x91, 0x56, 0xf2, 0x4a,
-  0x12, 0x0b, 0x1c, 0x4c, 0x06, 0x2e, 0x2f, 0xc1, 0xbe, 0x5a, 0xd3, 0xa0,
-  0x02, 0x7f, 0x4f, 0x7a, 0xe3, 0x25, 0xee, 0x38, 0x12, 0xe3, 0x89, 0x81,
-  0x0b, 0xe5, 0x68, 0x0a, 0x6e, 0x50, 0xa9, 0xb8, 0xb1, 0x6c, 0x96, 0x87,
-  0x23, 0xcd, 0x81, 0x33, 0x7b, 0x3b, 0xac, 0x5b, 0xc1, 0x35, 0x0e, 0x3e,
-  0x72, 0xb7, 0x40, 0x24, 0x23, 0x3f, 0xf5, 0x00, 0x36, 0xc1, 0xb2, 0x49,
-  0xc8, 0x9d, 0x7f, 0x8f, 0xf6, 0x08, 0x4d, 0xe5, 0x75, 0x95, 0x4d, 0x2f,
-  0x15, 0x71, 0x48, 0xae, 0x10, 0xcc, 0x32, 0x6d, 0xe1, 0x12, 0xc1, 0x63,
-  0x3a, 0x77, 0x00, 0x28, 0x85, 0xf2, 0x92, 0x2b, 0x66, 0xeb, 0xf2, 0x1c,
-  0x93, 0x64, 0x83, 0x87, 0x88, 0x5f, 0xf4, 0xcf, 0x12, 0xaa, 0xe5, 0x9a,
-  0x6b, 0xb0, 0x8e, 0x46, 0x8c, 0x31, 0x6e, 0x1d, 0x5b, 0x3b, 0xac, 0xd6,
-  0xfd, 0x02, 0x45, 0x04, 0x10, 0x16, 0xe1, 0x4b, 0xbe, 0xa5, 0x96, 0xc8,
-  0xc3, 0x20, 0x29, 0xd9, 0x47, 0x64, 0xb5, 0xe8, 0xdc, 0xbc, 0x9a, 0xe7,
-  0xa4, 0x7a, 0x9d, 0x2f, 0x5a, 0xe3, 0xcf, 0x99, 0x17, 0x62, 0xb5, 0x81,
-  0x29, 0x06, 0x55, 0x4d, 0x83, 0x71, 0x1d, 0xaa, 0x05, 0x2b, 0x87, 0xae,
-  0x08, 0xb5, 0xa2, 0x82, 0x48, 0xc6, 0xd9, 0xbd, 0xf9, 0xff, 0xd8, 0xfd,
-  0x9a, 0x8a, 0x0a, 0xc9, 0x42, 0x70, 0xd0, 0x31, 0x03, 0x03, 0xe0, 0x5c,
-  0x34, 0x82, 0xc6, 0x1b, 0xb3, 0x5c, 0x8e, 0xfc, 0xc6, 0x82, 0x46, 0x38,
-  0xcc, 0x11, 0x4d, 0xb2, 0xbf, 0x99, 0x4f, 0x8d, 0x8b, 0xf0, 0x5d, 0x76,
-  0x40, 0xa2, 0x72, 0x85, 0xda, 0x22, 0x86, 0xc2, 0x29, 0x8c, 0xcb, 0xca,
-  0x51, 0x0e, 0xad, 0xd6, 0x8d, 0x5e, 0x88, 0x6b, 0x1c, 0xff, 0xda, 0x65,
-  0x37, 0xca, 0x79, 0x57, 0xf3, 0x9b, 0xc7, 0x59, 0x4d, 0x77, 0x48, 0xa6,
-  0x31, 0x4e, 0xef, 0x85, 0x1b, 0xe4, 0xf3, 0x87, 0x99, 0x8e, 0x0e, 0xe2,
-  0x93, 0x3a, 0xe6, 0xb9, 0x2a, 0xac, 0x0e, 0x3b, 0x56, 0x7c, 0xe8, 0xa1,
-  0x04, 0x73, 0x70, 0x5a, 0x4c, 0x2b, 0xbb, 0x03, 0xa3, 0x6b, 0x44, 0x4a,
-  0xf3, 0x81, 0x97, 0xe4, 0xcf, 0xfd, 0xe4, 0x9b, 0xb4, 0xca, 0xc7, 0x3d,
-  0x2d, 0x34, 0xaa, 0x85, 0x47, 0xf1, 0x86, 0x2f, 0x40, 0xb9, 0x29, 0x89,
-  0x3d, 0x5b, 0x83, 0xe4, 0x47, 0xab, 0x1c, 0x4b, 0x4a, 0xa4, 0x54, 0x77,
-  0xcb, 0xc7, 0x5c, 0x24, 0xb8, 0x81, 0xbb, 0xa4, 0xf4, 0x19, 0x40, 0x1b,
-  0x49, 0x27, 0xbe, 0x9a, 0x10, 0xef, 0x6a, 0x5a, 0xdd, 0x38, 0x5f, 0x18,
-  0xef, 0x95, 0xb2, 0x22, 0xa9, 0x45, 0x28, 0x89, 0x2b, 0x6c, 0x1b, 0x28,
-  0x96, 0x2e, 0xc0, 0x84, 0xff, 0x76, 0xc7, 0xd7, 0xea, 0x3e, 0xb3, 0x05,
-  0xb6, 0xd2, 0xc8, 0xc4, 0xa0, 0xd8, 0x22, 0x53, 0xa6, 0x63, 0x51, 0xfd,
-  0x3e, 0x2d, 0x18, 0x96, 0x46, 0x19, 0xe8, 0xe9, 0xc5, 0xd1, 0xbf, 0x24,
-  0x07, 0x6d, 0xf7, 0x39, 0x6e, 0xa6, 0x06, 0xc4, 0x52, 0xcf, 0x13, 0x18,
-  0x8f, 0x5d, 0x82, 0x11, 0xa5, 0xbe, 0x56, 0xca, 0xdb, 0xbf, 0xa6, 0xa9,
-  0xcf, 0xde, 0x4e, 0x5c, 0x15, 0x1a, 0x59, 0x5d, 0xdf, 0x5b, 0x5d, 0x01,
-  0xbc, 0xc6, 0x4e, 0x85, 0x3b, 0x5f, 0xd9, 0x57, 0xe2, 0x9d, 0xf3, 0x54,
-  0x00, 0x77, 0x00, 0xa7, 0x46, 0x9b, 0x32, 0x17, 0x06, 0xca, 0x41, 0xd8,
-  0xe2, 0x4e, 0x12, 0xc0, 0xb2, 0xbc, 0x66, 0x55, 0x4b, 0x52, 0xb8, 0xa4,
-  0xbe, 0x60, 0x50, 0x24, 0x38, 0x0d, 0x91, 0xed, 0x3e, 0xe0, 0xc8, 0x7d,
-  0xb0, 0x8b, 0x45, 0xaf, 0x40, 0x19, 0xcb, 0xa5, 0xe8, 0x41, 0x4d, 0x92,
-  0xb5, 0x63, 0x27, 0xb7, 0xd9, 0x99, 0x85, 0x22, 0xf2, 0x46, 0x8c, 0x19,
-  0x2f, 0x6a, 0x7a, 0x2f, 0x7e, 0x73, 0xbe, 0x53, 0x8d, 0x6b, 0x86, 0x17,
-  0x13, 0x23, 0xc1, 0x31, 0xf4, 0x14, 0xd7, 0x6f, 0xd7, 0xf2, 0x55, 0x12,
-  0xf6, 0x4d, 0xad, 0x36, 0x03, 0xf5, 0x39, 0x83, 0x87, 0x57, 0x15, 0xa3,
-  0x10, 0xd8, 0xc5, 0x30, 0x50, 0x9e, 0x5a, 0xe3, 0x8e, 0xac, 0x1c, 0x77,
-  0x8b, 0xa0, 0x89, 0x1b, 0x1e, 0xd7, 0x2d, 0xf6, 0xe4, 0x0a, 0x43, 0x05,
-  0x51, 0xaa, 0x6f, 0x1c, 0x04, 0x9f, 0x36, 0x8b, 0x6a, 0xa5, 0xe3, 0x2c,
-  0xc8, 0xd1, 0x99, 0x17, 0x6b, 0xc1, 0xcd, 0x27, 0xf4, 0x53, 0x54, 0xc6,
-  0x13, 0x05, 0x9e, 0x4d, 0x6a, 0xdb, 0x8d, 0x32, 0x29, 0x38, 0x81, 0x9a,
-  0x44, 0xbc, 0x8b, 0x0c, 0x62, 0x8a, 0x13, 0x28, 0x94, 0x39, 0x63, 0xe2,
-  0x5e, 0xf3, 0xd4, 0x8d, 0x3b, 0x68, 0xd5, 0x3c, 0x35, 0x43, 0xde, 0x59,
-  0xcc, 0x45, 0x74, 0x82, 0x9e, 0x32, 0xd7, 0x3a, 0xac, 0x6c, 0x3d, 0xd2,
-  0x51, 0x63, 0x77, 0x58, 0xb2, 0x9d, 0x3b, 0x39, 0xcb, 0x36, 0xbd, 0x81,
-  0x33, 0x08, 0x9e, 0x32, 0x49, 0x66, 0xf7, 0x9a, 0x9c, 0xa2, 0xb2, 0x01,
-  0x50, 0x1e, 0xd8, 0x2a, 0xf1, 0xe5, 0x97, 0x1d, 0x59, 0xf0, 0xa3, 0x7b,
-  0x7a, 0x9f, 0xbe, 0x0e, 0xac, 0x1f, 0x53, 0x84, 0x9a, 0xc0, 0xda, 0xc0,
-  0x72, 0xa8, 0x33, 0x81, 0x44, 0x34, 0x8c, 0x00, 0x36, 0x4d, 0x7a, 0x74,
-  0x9e, 0x99, 0x0e, 0x95, 0xf5, 0x3c, 0xdf, 0x5f, 0x13, 0xf5, 0x5a, 0xeb,
-  0xec, 0x56, 0x12, 0xb2, 0xb4, 0x42, 0x31, 0x33, 0x36, 0xd9, 0x1e, 0x6d,
-  0x20, 0x35, 0x93, 0xe4, 0x3e, 0xc0, 0xa5, 0x0a, 0x25, 0x60, 0x58, 0x68,
-  0xc3, 0x58, 0x64, 0x1d, 0x8c, 0xa3, 0x8e, 0x16, 0x1d, 0xb9, 0x22, 0xb1,
-  0x9e, 0x47, 0xbc, 0x5f, 0x3d, 0x9c, 0xf7, 0xbf, 0x67, 0x38, 0x07, 0xc9,
-  0x83, 0x49, 0x1a, 0x02, 0x09, 0xc1, 0x1c, 0xbf, 0x52, 0xf7, 0xea, 0xa4,
-  0x60, 0xaa, 0x36, 0xb9, 0x47, 0xd6, 0x88, 0xeb, 0x3c, 0x8f, 0x9a, 0xe5,
-  0xde, 0xba, 0x86, 0x89, 0x79, 0x21, 0x4f, 0xb3, 0x52, 0x83, 0xf6, 0x7b,
-  0x36, 0x94, 0x4f, 0x1d, 0xae, 0xc1, 0x85, 0x5a, 0x16, 0x56, 0x0b, 0xc6,
-  0x55, 0x13, 0x9f, 0x76, 0x07, 0x3b, 0xa1, 0x7c, 0xe5, 0xd2, 0xa1, 0x4a,
-  0x86, 0xa0, 0xad, 0x19, 0x5c, 0xca, 0x8b, 0x28, 0x4b, 0xad, 0xee, 0xba,
-  0xdd, 0x7a, 0x4d, 0x3f, 0xdb, 0x15, 0x10, 0x2f, 0x3a, 0x49, 0x5a, 0xb2,
-  0x08, 0x08, 0x3a, 0xd9, 0x6c, 0xc1, 0x69, 0x23, 0xc6, 0x01, 0x43, 0x21,
-  0x80, 0xcf, 0xd1, 0x53, 0x7f, 0xa4, 0x9e, 0xb9, 0xed, 0xd6, 0x31, 0x4a,
-  0x56, 0x01, 0x3f, 0x60, 0x81, 0xfd, 0x2c, 0x7c, 0x66, 0x99, 0xb4, 0x54,
-  0xaf, 0x4c, 0x6f, 0x3b, 0x6c, 0xa6, 0x9a, 0x82, 0x9e, 0xf9, 0xb2, 0x4d,
-  0x2e, 0x97, 0x25, 0x33, 0x5e, 0x05, 0x61, 0x54, 0x44, 0x1a, 0xb4, 0x8a,
-  0x08, 0xdd, 0x08, 0xa7, 0xe1, 0x0c, 0x6e, 0x3a, 0x2e, 0xcb, 0x05, 0x9f,
-  0x6b, 0xb1, 0x8f, 0x33, 0x76, 0x86, 0x56, 0xdd, 0xf3, 0xde, 0x37, 0x27,
-  0x9e, 0x51, 0xbb, 0xd3, 0x9c, 0x06, 0xb4, 0xc1, 0xc0, 0x2c, 0x56, 0x81,
-  0x5c, 0x79, 0xa1, 0x91, 0xb0, 0x03, 0x66, 0x6f, 0x96, 0xf7, 0xee, 0x16,
-  0xf1, 0x6a, 0x33, 0x5d, 0xb9, 0x06, 0x7a, 0x49, 0xff, 0xbf, 0xeb, 0xca,
-  0x40, 0x3c, 0x47, 0xf4, 0x18, 0x57, 0xee, 0x58, 0x04, 0x88, 0xa6, 0x9a,
-  0xe4, 0xc7, 0x0c, 0x1f, 0xa1, 0xa1, 0x36, 0x0f, 0x97, 0x79, 0x6b, 0x39,
-  0x42, 0xcc, 0xff, 0xde, 0x84, 0xd8, 0xb5, 0x8d, 0xaa, 0xeb, 0xca, 0x2a,
-  0xa4, 0xb9, 0x35, 0x57, 0x0a, 0x44, 0xe2, 0x05, 0x3b, 0x03, 0x76, 0x17,
-  0xd9, 0x37, 0x28, 0x96, 0x78, 0x58, 0xa4, 0xe1, 0xb2, 0xfa, 0x62, 0x6b,
-  0x3a, 0x52, 0x21, 0x7e, 0x67, 0xca, 0x90, 0x04, 0xd7, 0x3e, 0xbd, 0xd0,
-  0x7f, 0xaf, 0xe6, 0x8c, 0xaf, 0xa5, 0x87, 0x01, 0xdb, 0xdd, 0xa5, 0x87,
-  0x33, 0xae, 0x17, 0x6e, 0x0f, 0xec, 0xeb, 0x4b, 0xc8, 0x8a, 0x5d, 0x57,
-  0x4b, 0x4e, 0x73, 0x55, 0xe4, 0x79, 0xcb, 0x9a, 0x45, 0xb1, 0x69, 0x9e,
-  0x42, 0x5f, 0x5c, 0x3a, 0x38, 0x64, 0xf2, 0xab, 0xbc, 0xab, 0xca, 0xe3,
-  0x3d, 0x9a, 0x18, 0x48, 0xd4, 0xbd, 0xda, 0x5e, 0xf6, 0x76, 0xb7, 0x65,
-  0x30, 0xdb, 0xd2, 0x80, 0xc8, 0x75, 0x4a, 0x92, 0x3e, 0x0c, 0xc4, 0x00,
-  0x88, 0xc2, 0x9b, 0x0b, 0x89, 0x02, 0x08, 0xdf, 0x99, 0xe5, 0xf3, 0xcc,
-  0x55, 0xcc, 0xc4, 0xd5, 0x44, 0x77, 0xad, 0x14, 0x65, 0x2a, 0x74, 0x7f,
-  0xd6, 0xfc, 0x06, 0xf5, 0x9c, 0xc8, 0x47, 0xa4, 0xd4, 0xbf, 0x0d, 0xb5,
-  0xa6, 0x4c, 0xe1, 0x45, 0x51, 0x48, 0xd6, 0x65, 0xd0, 0x31, 0x6a, 0xcf,
-  0x5c, 0x9d, 0xfe, 0xe7, 0x07, 0xef, 0xbe, 0x3d, 0x62, 0x49, 0xc0, 0x41,
-  0x4e, 0xe6, 0xa0, 0xf6, 0xc9, 0x72, 0xcc, 0xaa, 0x10, 0xad, 0x18, 0x47,
-  0xbf, 0x31, 0x14, 0xb3, 0xf0, 0xf3, 0x9c, 0xa1, 0xae, 0x84, 0x78, 0x79,
-  0xbb, 0x35, 0xa6, 0x6d, 0x2d, 0x31, 0x8b, 0x2a, 0x4b, 0x10, 0x50, 0x18,
-  0x91, 0xf2, 0x52, 0x30, 0xba, 0xc1, 0x68, 0x91, 0x2a, 0x48, 0x4d, 0x1a,
-  0x82, 0x98, 0xa8, 0x9d, 0x65, 0xd0, 0x3c, 0x8b, 0x6b, 0x96, 0xe0, 0xe2,
-  0x74, 0xfa, 0x92, 0x75, 0xfa, 0x41, 0x68, 0x55, 0x13, 0x8c, 0x8d, 0xdd,
-  0x9d, 0x1d, 0x5f, 0x72, 0x27, 0x75, 0x0d, 0x76, 0xb8, 0x65, 0x99, 0xec,
-  0xf4, 0x5f, 0xbc, 0x58, 0xc5, 0x08, 0x5d, 0xa3, 0x8c, 0x88, 0xf2, 0xec,
-  0x93, 0xdb, 0xec, 0xe3, 0xd1, 0x55, 0x6d, 0x46, 0x34, 0x9a, 0x2a, 0x67,
-  0x38, 0x42, 0x59, 0x51, 0x27, 0xb5, 0xa8, 0x85, 0x47, 0xbc, 0x35, 0xec,
-  0x3e, 0x9b, 0x3b, 0xb5, 0x06, 0x4b, 0xb9, 0xe6, 0xb1, 0xb2, 0x19, 0x3a,
-  0xc3, 0x8c, 0x41, 0x0b, 0x84, 0x14, 0xe6, 0xce, 0x8b, 0xfb, 0x49, 0x0b,
-  0x13, 0x28, 0xf0, 0x2b, 0x96, 0xe8, 0xb2, 0x3b, 0x1b, 0x13, 0x09, 0xde,
-  0x9f, 0xc1, 0xfe, 0x77, 0xfc, 0xee, 0x5b, 0x31, 0x87, 0x90, 0x6e, 0xcf,
-  0xb6, 0xf4, 0xed, 0x96, 0xa6, 0xff, 0x5e, 0x6a, 0xe7, 0x20, 0x9c, 0x94,
-  0xc3, 0x37, 0xa4, 0xf0, 0x6d, 0x3e, 0x17, 0x56, 0xe0, 0x77, 0x7f, 0x85,
-  0xad, 0xf2, 0x22, 0xe9, 0x07, 0xc2, 0x89, 0x16, 0xce, 0x81, 0x64, 0x32,
-  0xbb, 0x37, 0xcd, 0x48, 0x7b, 0xe0, 0xd6, 0xcd, 0x33, 0xe3, 0x9a, 0x15,
-  0x3d, 0x57, 0xd4, 0x73, 0xa6, 0xa0, 0x8e, 0x6c, 0x12, 0xe9, 0x52, 0xba,
-  0xe1, 0xf3, 0xdd, 0x92, 0x44, 0x3e, 0x6d, 0x28, 0x0d, 0x53, 0x67, 0xb3,
-  0xd4, 0x22, 0x24, 0xab, 0x9e, 0xd9, 0x7e, 0xda, 0x66, 0x48, 0x36, 0x2a,
-  0xa6, 0x21, 0x57, 0xc7, 0x6e, 0x73, 0x5d, 0xd6, 0xa2, 0xf8, 0xc7, 0xc7,
-  0xf9, 0xc0, 0x08, 0x71, 0x50, 0x71, 0x53, 0xcd, 0x27, 0xde, 0xa6, 0xa1,
-  0x23, 0x8e, 0x3a, 0x42, 0x2e, 0xe4, 0x7d, 0xe9, 0x3a, 0x8d, 0x77, 0x27,
-  0xef, 0xdb, 0xd2, 0x44, 0x0e, 0x00, 0x44, 0x5a, 0x2d, 0xad, 0xe4, 0x52,
-  0x4f, 0x4d, 0x97, 0x81, 0x14, 0xce, 0x9c, 0x23, 0x6f, 0x8a, 0x25, 0x6b,
-  0x89, 0x66, 0xb8, 0x73, 0xdd, 0x25, 0xd0, 0x10, 0x03, 0xf1, 0xf3, 0xe5,
-  0x75, 0xc3, 0xa1, 0xa1, 0x97, 0x0a, 0x59, 0x0d, 0x96, 0x06, 0xa1, 0x46,
-  0x51, 0xae, 0x3c, 0xf0, 0x77, 0xb9, 0x54, 0xec, 0x4e, 0x8e, 0x4f, 0xa0,
-  0xc1, 0xa7, 0xd5, 0x35, 0x07, 0x0e, 0x3a, 0x53, 0x54, 0x57, 0xbc, 0xe2,
-  0xee, 0x15, 0xc5, 0x9a, 0xe4, 0x29, 0x11, 0xa6, 0x58, 0xb8, 0x6e, 0x2c,
-  0x45, 0x73, 0x05, 0xd6, 0xd6, 0x60, 0x84, 0xdf, 0x86, 0x29, 0x7e, 0xd8,
-  0x5d, 0x40, 0xb3, 0xa5, 0x3f, 0x68, 0x8f, 0xf7, 0x3e, 0x86, 0x47, 0x2c,
-  0xf3, 0x81, 0xf5, 0xe4, 0x53, 0x4f, 0x9c, 0xc8, 0xef, 0x11, 0xbf, 0x22,
-  0x1f, 0xba, 0x80, 0x91, 0x45, 0x49, 0xbd, 0x69, 0x4d, 0x0b, 0x75, 0x01,
-  0x36, 0xfa, 0xb0, 0x66, 0xc6, 0x38, 0x10, 0xad, 0xed, 0x62, 0x85, 0x9d,
-  0x31, 0x78, 0x05, 0xea, 0xcc, 0xd8, 0x7b, 0x88, 0x59, 0xe2, 0xab, 0x44,
-  0x4d, 0x25, 0x13, 0x05, 0xb2, 0x85, 0xa8, 0xbf, 0xec, 0xeb, 0x96, 0x14,
-  0x3a, 0xee, 0x93, 0x67, 0x28, 0x03, 0x14, 0xb8, 0x03, 0x89, 0x48, 0x1f,
-  0x5e, 0xc0, 0x8c, 0xc0, 0x57, 0x9f, 0xe9, 0xa3, 0x3f, 0x1c, 0x9d, 0x7f,
-  0x73, 0x3a, 0x3c, 0xa2, 0xfd, 0x78, 0x7d, 0xf4, 0xcd, 0x7b, 0x70, 0x2d,
-  0x50, 0x87, 0x98, 0x9e, 0x19, 0x43, 0x59, 0xec, 0x5f, 0x0c, 0x78, 0xc6,
-  0xa9, 0x34, 0x20, 0x53, 0x91, 0x83, 0x7a, 0x2e, 0xb1, 0x57, 0x45, 0x3c,
-  0xc1, 0x22, 0x9e, 0x66, 0x62, 0xab, 0xcc, 0x39, 0x0d, 0xc1, 0x63, 0xa6,
-  0x23, 0xda, 0x0f, 0xa5, 0xee, 0x59, 0xbd, 0xd4, 0xa3, 0x24, 0xe8, 0xae,
-  0xd5, 0xbe, 0x37, 0x6a, 0xde, 0x8a, 0x65, 0x5a, 0x0f, 0x1f, 0x35, 0x3b,
-  0x2a, 0x58, 0x69, 0xe7, 0xc2, 0x15, 0x4c, 0xbc, 0x87, 0x4e, 0x8e, 0x56,
-  0xb8, 0xce, 0x69, 0x21, 0xb7, 0x26, 0x57, 0x94, 0x47, 0xdb, 0x7c, 0x8f,
-  0xe7, 0x35, 0x5f, 0xe1, 0xa2, 0x50, 0x68, 0x75, 0xfb, 0x4a, 0x88, 0x9b,
-  0xd8, 0x9b, 0xe4, 0x9e, 0x4f, 0xf5, 0x3a, 0x60, 0xee, 0x57, 0x65, 0x02,
-  0x15, 0x27, 0xb7, 0xb6, 0xfa, 0xc3, 0x25, 0xda, 0x57, 0xeb, 0xd0, 0x6c,
-  0xaa, 0x12, 0x7c, 0xc7, 0xf3, 0xd4, 0xba, 0xa8, 0x52, 0xff, 0xdd, 0xaa,
-  0x23, 0xf2, 0xca, 0x07, 0x41, 0x39, 0x4a, 0x3a, 0xb7, 0xab, 0x59, 0xcf,
-  0x85, 0xcc, 0x14, 0x76, 0x0e, 0x11, 0x04, 0x0c, 0xbc, 0x9a, 0x63, 0xf5,
-  0x9b, 0xb5, 0xd1, 0xbd, 0x80, 0x22, 0x67, 0x17, 0x39, 0x05, 0x81, 0x0a,
-  0xb9, 0xba, 0x62, 0xbc, 0x49, 0xb3, 0xea, 0x60, 0xf2, 0xe9, 0x44, 0xc2,
-  0x5c, 0x35, 0x10, 0x0f, 0x5b, 0xca, 0x2e, 0x01, 0x21, 0xbe, 0xee, 0x79,
-  0x97, 0xd6, 0xa5, 0x58, 0x3c, 0xce, 0x68, 0xe0, 0x38, 0x59, 0x5b, 0x5b,
-  0x7b, 0x7d, 0x74, 0x71, 0x70, 0x7c, 0x72, 0xf4, 0x3a, 0x39, 0x7e, 0xf7,
-  0xe6, 0xf4, 0xfc, 0xed, 0xc1, 0x85, 0x86, 0x63, 0xbc, 0x76, 0x16, 0x39,
-  0x8f, 0xe7, 0xa4, 0xe0, 0xf5, 0x81, 0xb5, 0x8e, 0x49, 0x98, 0x76, 0xf1,
-  0x4a, 0x0b, 0x15, 0xc8, 0x32, 0x64, 0x8d, 0x35, 0x58, 0x4b, 0x34, 0x8c,
-  0xc3, 0xe3, 0x5f, 0x41, 0x2e, 0xd8, 0x76, 0xbe, 0xf7, 0x81, 0x2d, 0xa7,
-  0x03, 0x69, 0x45, 0xf1, 0xca, 0x07, 0x9b, 0x4a, 0x61, 0x03, 0xb9, 0x9a,
-  0x66, 0x7a, 0x27, 0x32, 0xb8, 0x32, 0xa7, 0xff, 0x0b, 0x22, 0xf2, 0xf1,
-  0x76, 0x13, 0x9e, 0x99, 0x0d, 0x2d, 0x06, 0x87, 0x96, 0x32, 0x20, 0x4a,
-  0x08, 0xbb, 0x71, 0x59, 0x70, 0x54, 0x49, 0xd8, 0xa6, 0x03, 0x94, 0xe0,
-  0x1d, 0x05, 0x7e, 0x30, 0x47, 0xff, 0x08, 0x7c, 0x54, 0xb0, 0xbf, 0x0a,
-  0x75, 0x37, 0x45, 0xf0, 0x11, 0xc7, 0x14, 0x01, 0x3f, 0xb5, 0xa2, 0x9d,
-  0x72, 0x67, 0x9d, 0x31, 0x5d, 0x1d, 0xc3, 0x36, 0xef, 0x9c, 0xd6, 0x5a,
-  0x0c, 0x9b, 0xda, 0x74, 0xfe, 0x7a, 0x92, 0x98, 0xfa, 0xc7, 0x5a, 0x83,
-  0x13, 0x6b, 0x01, 0x80, 0x7b, 0xfc, 0x9c, 0x7b, 0x48, 0x45, 0x0d, 0x20,
-  0xf5, 0x1a, 0x7f, 0x4e, 0x53, 0x56, 0x17, 0x95, 0x9e, 0x36, 0x7f, 0x6e,
-  0x0d, 0xb5, 0xa5, 0xff, 0x9a, 0x1e, 0x9a, 0x2c, 0x67, 0x0b, 0x2d, 0xe3,
-  0x6c, 0x12, 0x35, 0xdb, 0xf2, 0x6c, 0x0b, 0x45, 0x68, 0x63, 0xe1, 0x83,
-  0x0d, 0x3f, 0x6f, 0x74, 0x0d, 0x64, 0x1e, 0x4c, 0xdf, 0xb5, 0xb9, 0x02,
-  0xa1, 0x23, 0x7b, 0xef, 0x9d, 0x95, 0x86, 0x71, 0x31, 0x47, 0x0d, 0xc9,
-  0x85, 0x17, 0x64, 0xe8, 0x9e, 0xe5, 0x95, 0x0c, 0x5e, 0x48, 0x7d, 0x88,
-  0x12, 0xaf, 0xff, 0xa6, 0xd5, 0x99, 0x01, 0xc9, 0x6a, 0x83, 0x7a, 0x55,
-  0x74, 0x9d, 0x8f, 0x8d, 0x49, 0x85, 0x2f, 0x36, 0x43, 0x7a, 0x42, 0x4e,
-  0x6f, 0x5d, 0x7b, 0x28, 0xdd, 0xf6, 0x08, 0x94, 0x8b, 0x13, 0x3f, 0xb9,
-  0xb7, 0xda, 0xd9, 0xa8, 0x93, 0x21, 0x48, 0x99, 0x6b, 0x9a, 0xba, 0xae,
-  0x9c, 0x92, 0x1d, 0x62, 0x46, 0xbe, 0x4b, 0x86, 0xbe, 0x2e, 0x6e, 0xa0,
-  0xcb, 0x73, 0x6e, 0xe7, 0xe8, 0x3e, 0xcc, 0xc2, 0x93, 0xe0, 0x33, 0x2d,
-  0xd5, 0xc4, 0x4c, 0x6f, 0xbe, 0x66, 0x30, 0xbf, 0xf6, 0x92, 0x85, 0x30,
-  0x32, 0xf7, 0x97, 0x7a, 0x01, 0xcc, 0xe4, 0xa1, 0x54, 0x67, 0x69, 0xc5,
-  0x0a, 0x15, 0xe7, 0xe2, 0xc8, 0x9d, 0xe1, 0xcc, 0xb0, 0xbe, 0x22, 0x46,
-  0x00, 0x98, 0xc5, 0x2c, 0x5a, 0x90, 0x43, 0x53, 0xc0, 0x69, 0xb8, 0xda,
-  0xe0, 0x1c, 0x77, 0xef, 0x5a, 0x31, 0x07, 0x07, 0x35, 0xc3, 0xc1, 0xd3,
-  0x1a, 0x4d, 0x7a, 0x56, 0x54, 0x72, 0xde, 0x58, 0xc2, 0x5f, 0x07, 0xeb,
-  0x59, 0x67, 0x32, 0x58, 0x5f, 0x5c, 0x53, 0x1f, 0xeb, 0xc9, 0x15, 0x74,
-  0xa4, 0x11, 0x0d, 0xbd, 0xc3, 0x40, 0x27, 0xf2, 0xf8, 0xab, 0xf3, 0xf4,
-  0x32, 0xcd, 0xa6, 0x7f, 0xdc, 0xdb, 0x19, 0xa6, 0x57, 0xcb, 0x69, 0xfa,
-  0xaf, 0xfc, 0xe2, 0xab, 0x27, 0x4f, 0xf6, 0x76, 0xbe, 0xf8, 0x72, 0x67,
-  0xbd, 0x1d, 0x7d, 0xa0, 0x11, 0x59, 0x16, 0x61, 0x83, 0x9b, 0x8c, 0xf9,
-  0x2e, 0xf7, 0x33, 0x18, 0x5f, 0xe5, 0xac, 0xd4, 0x41, 0x50, 0xd2, 0x35,
-  0x48, 0x45, 0x9b, 0x64, 0x36, 0xa9, 0xb0, 0x83, 0x74, 0xe3, 0x12, 0x5d,
-  0xff, 0x61, 0x77, 0x5f, 0x58, 0xd9, 0x15, 0x1b, 0xdf, 0x53, 0xa1, 0xd8,
-  0xe4, 0x65, 0x3e, 0xa7, 0x1b, 0xe8, 0xab, 0xa4, 0x4e, 0xaf, 0x1c, 0xad,
-  0x72, 0x0b, 0xbc, 0x1b, 0x6e, 0x3b, 0x6b, 0x76, 0x51, 0x43, 0xb4, 0x92,
-  0x62, 0x36, 0x28, 0xd5, 0xc2, 0x42, 0xd6, 0x22, 0x2b, 0x01, 0x47, 0x51,
-  0x5c, 0x95, 0xe9, 0xcc, 0x72, 0x55, 0xf0, 0x3e, 0xc2, 0xd6, 0x06, 0x8b,
-  0x29, 0xa7, 0x51, 0x58, 0xec, 0x99, 0x48, 0xbc, 0x42, 0x70, 0xd3, 0x45,
-  0xe5, 0x61, 0xf8, 0xe4, 0xba, 0x09, 0x8b, 0xc0, 0xd0, 0x62, 0xb1, 0x4d,
-  0x65, 0x9d, 0x67, 0x25, 0x2c, 0x83, 0xb9, 0xd9, 0xc4, 0x66, 0x3a, 0xe0,
-  0xdf, 0x19, 0xff, 0x21, 0x15, 0xc0, 0xc5, 0xf5, 0x85, 0x64, 0x56, 0x0b,
-  0x4a, 0xc7, 0xba, 0xe5, 0x36, 0xe4, 0x8d, 0x79, 0xa5, 0x3e, 0x66, 0x33,
-  0x79, 0x69, 0x56, 0xa2, 0xdd, 0xaf, 0x5e, 0x31, 0x41, 0xec, 0x7e, 0xf5,
-  0xaf, 0xee, 0xb3, 0x3d, 0xfd, 0x6c, 0xef, 0xab, 0x7f, 0x1d, 0x0c, 0x78,
-  0x7c, 0xa0, 0x90, 0x0d, 0xfb, 0x7a, 0x43, 0xd1, 0x56, 0x52, 0x3d, 0xc2,
-  0xf2, 0x97, 0x83, 0x3f, 0x96, 0xbd, 0x5e, 0xb7, 0x9e, 0xc3, 0x55, 0xee,
-  0xa9, 0x47, 0xd5, 0xf1, 0xad, 0xbc, 0x0a, 0x71, 0xad, 0xab, 0xd8, 0xa2,
-  0x3b, 0x3f, 0x08, 0xb7, 0xa3, 0xd1, 0x97, 0xfc, 0xf2, 0xbf, 0x81, 0x52,
-  0xff, 0x6d, 0x2d, 0x51, 0xef, 0x26, 0xb6, 0xe3, 0x9e, 0x1d, 0x1e, 0x46,
-  0xb6, 0xf4, 0x68, 0x6a, 0x45, 0x67, 0xd0, 0x32, 0x12, 0x40, 0x70, 0x07,
-  0x4a, 0xd0, 0x38, 0x0f, 0xf6, 0x4f, 0x8a, 0x6b, 0x21, 0x1b, 0xbe, 0x96,
-  0xb8, 0x67, 0x24, 0x51, 0x86, 0x64, 0x0c, 0xae, 0x95, 0x22, 0x15, 0x50,
-  0x7e, 0xfa, 0x49, 0x05, 0x2a, 0xfa, 0x45, 0x47, 0x7e, 0x4d, 0xbc, 0x68,
-  0x42, 0xec, 0x6d, 0xc6, 0x85, 0xe2, 0x01, 0x34, 0x48, 0xf3, 0xd0, 0x2b,
-  0xff, 0x52, 0x67, 0x2a, 0x8d, 0xd0, 0xd6, 0x1e, 0x0c, 0x0f, 0x8f, 0x8f,
-  0x39, 0xd0, 0x94, 0x17, 0xf5, 0x48, 0xd8, 0x18, 0xd3, 0xe6, 0x26, 0x87,
-  0x78, 0xf8, 0xb0, 0xc4, 0x90, 0xf4, 0xb1, 0x77, 0xbc, 0xed, 0x4c, 0xfd,
-  0xd4, 0x98, 0x29, 0xe0, 0xba, 0x95, 0x4c, 0xb3, 0x22, 0xe5, 0xbc, 0x5a,
-  0x97, 0x07, 0xaf, 0xf2, 0x75, 0x75, 0x62, 0xc9, 0x27, 0xeb, 0x1e, 0x3e,
-  0x47, 0xf6, 0x83, 0x37, 0xed, 0x95, 0x88, 0x4e, 0xf9, 0xdf, 0xb3, 0x57,
-  0xbb, 0x3b, 0xf1, 0x27, 0xd8, 0x6b, 0x0b, 0x4c, 0xf1, 0x57, 0xde, 0x21,
-  0xf8, 0xd0, 0xf3, 0xf9, 0x44, 0x9e, 0xbe, 0xce, 0x27, 0x13, 0xba, 0x13,
-  0x6e, 0xd3, 0xe9, 0x92, 0x68, 0x61, 0x84, 0x1b, 0x16, 0xff, 0xbf, 0x62,
-  0x1c, 0xec, 0xb1, 0xd2, 0x67, 0xab, 0xe5, 0x68, 0x96, 0x37, 0x06, 0xbc,
-  0x8d, 0x09, 0x7e, 0x85, 0x09, 0xff, 0x98, 0x39, 0xea, 0xc8, 0x20, 0xda,
-  0x89, 0xec, 0xb7, 0x71, 0x59, 0x14, 0xa3, 0xb4, 0xdc, 0x50, 0x77, 0x8e,
-  0x8d, 0x73, 0x63, 0x77, 0xef, 0xc9, 0xd3, 0x67, 0x1b, 0x03, 0x95, 0xd3,
-  0x98, 0x45, 0xd4, 0x21, 0x4a, 0x85, 0x34, 0x91, 0xca, 0x01, 0x6d, 0xe0,
-  0xb9, 0xc6, 0x9c, 0xab, 0xe0, 0x62, 0xe8, 0xee, 0x95, 0xf4, 0xf6, 0xaf,
-  0xe8, 0xe7, 0x15, 0x77, 0xf1, 0xaf, 0xf9, 0xe4, 0x95, 0x9b, 0xe1, 0xbf,
-  0x62, 0x2e, 0xaf, 0x74, 0x12, 0xb4, 0xaf, 0x96, 0x86, 0x58, 0x85, 0xd5,
-  0x69, 0x1e, 0xdb, 0x5c, 0xdb, 0xc4, 0x35, 0x9e, 0x34, 0x47, 0x30, 0xf4,
-  0x27, 0xe2, 0xfd, 0x60, 0x69, 0xd5, 0xe7, 0xe0, 0x6d, 0x7f, 0xec, 0x53,
-  0x2b, 0x7d, 0xb4, 0xd2, 0xf7, 0x0c, 0x9b, 0xa1, 0xe0, 0xfb, 0xd8, 0x88,
-  0x9e, 0x26, 0x62, 0x4e, 0xd9, 0xca, 0xa2, 0xa2, 0x40, 0x51, 0x70, 0x10,
-  0xc0, 0xe1, 0xb7, 0xc7, 0x1b, 0x55, 0x58, 0x94, 0xa1, 0x17, 0xb3, 0x4f,
-  0xbb, 0x10, 0xc3, 0x71, 0xba, 0xc0, 0xe9, 0x5f, 0x4b, 0xb4, 0xa6, 0x62,
-  0x8a, 0x38, 0x12, 0xf4, 0x2b, 0x59, 0xd3, 0xd4, 0x99, 0x81, 0xe5, 0xc2,
-  0xe2, 0x5d, 0x0a, 0x48, 0x7d, 0xd0, 0x0c, 0x83, 0x36, 0x4b, 0x40, 0x09,
-  0xfb, 0x7c, 0x16, 0x2e, 0xe1, 0xb2, 0xff, 0xc6, 0x39, 0x3d, 0x5d, 0x82,
-  0x9f, 0x3e, 0x4a, 0x5f, 0x09, 0x3f, 0x31, 0x16, 0xb1, 0xce, 0x0a, 0xb0,
-  0xe7, 0x13, 0x21, 0xf7, 0xe0, 0xc4, 0xff, 0x51, 0xa6, 0x69, 0x9a, 0x62,
-  0x36, 0x11, 0xc1, 0x10, 0xfc, 0xf3, 0xe5, 0xd7, 0x86, 0xf3, 0xfc, 0x55,
-  0xc2, 0x75, 0x51, 0xe5, 0x2d, 0xf5, 0x3b, 0xaa, 0x01, 0x4a, 0x6c, 0xb6,
-  0xfc, 0x92, 0xaa, 0x07, 0xce, 0x05, 0x16, 0x44, 0xe3, 0xa8, 0x60, 0x10,
-  0xa2, 0xf1, 0x8f, 0xee, 0xd5, 0xd8, 0x80, 0x16, 0x36, 0xfe, 0xcc, 0x87,
-  0xe0, 0x25, 0xb6, 0x81, 0xbf, 0xfe, 0x6a, 0x63, 0xcd, 0xd5, 0xc7, 0x70,
-  0x92, 0x7b, 0xcb, 0x81, 0x2c, 0x04, 0x1a, 0xce, 0xa7, 0xb8, 0x74, 0xa0,
-  0xc6, 0x22, 0x8d, 0x01, 0xa0, 0x83, 0x8b, 0x87, 0x93, 0x34, 0x35, 0x45,
-  0xba, 0x73, 0xc3, 0x40, 0x2d, 0x8d, 0x67, 0x40, 0x3f, 0x81, 0xf4, 0xb8,
-  0x81, 0x68, 0x55, 0x7e, 0x6f, 0xc3, 0x61, 0x24, 0xb3, 0xcd, 0x94, 0x19,
-  0x5e, 0x99, 0x19, 0xd2, 0xe4, 0x9a, 0x26, 0xe6, 0x7b, 0x69, 0x3e, 0x9c,
-  0x58, 0x15, 0x08, 0x0f, 0x3e, 0xcd, 0x51, 0xd0, 0x6c, 0x3a, 0x47, 0xe4,
-  0x0d, 0x72, 0x88, 0xb5, 0xd3, 0x57, 0x58, 0xee, 0xdd, 0xc1, 0x55, 0x7e,
-  0x29, 0x8b, 0x41, 0x2c, 0xf2, 0x2a, 0xdb, 0xa6, 0x3f, 0x7b, 0xf4, 0xf9,
-  0x1e, 0xa4, 0x32, 0xfc, 0xf2, 0x84, 0xe3, 0xb1, 0xc2, 0xbb, 0x3f, 0x38,
-  0x1b, 0xee, 0x5c, 0xe0, 0x97, 0xdc, 0xdd, 0xf9, 0xea, 0xd5, 0xd1, 0x51,
-  0xf6, 0xad, 0x18, 0x42, 0xa3, 0x0a, 0x5c, 0x18, 0x54, 0xc2, 0xf8, 0xf7,
-  0x05, 0xcb, 0x27, 0x95, 0x0f, 0x1e, 0xd1, 0x40, 0x0a, 0x15, 0xd4, 0x21,
-  0x77, 0xe7, 0x6a, 0x9e, 0x41, 0x16, 0x10, 0xdf, 0xac, 0xd9, 0xdd, 0x56,
-  0x2f, 0x8c, 0xb4, 0x25, 0xf6, 0x7e, 0x8b, 0xbc, 0x7a, 0x60, 0x75, 0xf8,
-  0x8c, 0x4c, 0x74, 0xbf, 0x89, 0x66, 0xd7, 0x38, 0xd5, 0xd8, 0x32, 0x8d,
-  0x79, 0x9b, 0xf3, 0xf6, 0x0e, 0x06, 0xa5, 0x64, 0x4d, 0xda, 0x84, 0x07,
-  0x6d, 0x0b, 0xdd, 0x64, 0xd3, 0x8a, 0x75, 0x75, 0x85, 0x6a, 0xb4, 0x5e,
-  0x0d, 0x4d, 0x9b, 0x3b, 0xda, 0x08, 0xcf, 0x7e, 0x31, 0xae, 0x33, 0xd2,
-  0x75, 0x01, 0xad, 0x35, 0x13, 0x3e, 0x77, 0x34, 0x93, 0x9a, 0x9a, 0x4c,
-  0xc2, 0xd3, 0xbe, 0xdc, 0x9e, 0x2a, 0x12, 0xf5, 0xdf, 0x0c, 0x92, 0x13,
-  0x8e, 0x18, 0xaf, 0x52, 0x41, 0x68, 0xb1, 0x1b, 0xd6, 0xa8, 0x81, 0x48,
-  0xa7, 0x32, 0x94, 0x39, 0xbc, 0x07, 0x50, 0x0c, 0x23, 0xa9, 0xdc, 0x80,
-  0xd2, 0x85, 0xb8, 0x44, 0xbe, 0x50, 0x79, 0xa4, 0xc7, 0xb6, 0x70, 0xf7,
-  0x1c, 0xdb, 0xfc, 0xc5, 0xee, 0xc7, 0xe9, 0x5f, 0x8e, 0x60, 0x83, 0x46,
-  0x42, 0x30, 0xec, 0x90, 0xad, 0xbb, 0x43, 0x20, 0x21, 0x95, 0x99, 0x18,
-  0x5d, 0x80, 0xce, 0x00, 0x98, 0x18, 0xf6, 0x09, 0x53, 0x6b, 0x4c, 0x65,
-  0x8c, 0x80, 0x4d, 0x64, 0xb4, 0xce, 0x7a, 0xe3, 0x34, 0x73, 0xca, 0xb5,
-  0x96, 0x08, 0x74, 0xe1, 0xe6, 0x6c, 0x8b, 0xd1, 0x5a, 0x1e, 0xce, 0x5d,
-  0x87, 0x41, 0x62, 0x5c, 0xe9, 0x2d, 0xfd, 0x02, 0xe1, 0x6c, 0x54, 0xd2,
-  0xae, 0x67, 0xa5, 0x5c, 0x0d, 0x12, 0x23, 0x54, 0x08, 0x27, 0x11, 0x35,
-  0xe5, 0xed, 0x49, 0x62, 0x48, 0x37, 0x97, 0x5e, 0x54, 0xb4, 0xc8, 0x4c,
-  0x9e, 0xa2, 0x5a, 0x46, 0x44, 0x1e, 0xd2, 0xa7, 0xe4, 0x96, 0x93, 0xb5,
-  0x45, 0xae, 0x7c, 0x82, 0xc5, 0x69, 0x1c, 0xd9, 0xe0, 0x09, 0x79, 0x75,
-  0x4d, 0x50, 0xb9, 0x36, 0xb0, 0x04, 0x1b, 0xbd, 0x64, 0x03, 0x43, 0xc5,
-  0x17, 0x1b, 0xbc, 0x9e, 0xfc, 0x71, 0xb0, 0x7c, 0x1b, 0x83, 0xc8, 0x29,
-  0xc4, 0x33, 0xaf, 0xbe, 0x6e, 0xac, 0x12, 0x7f, 0x6e, 0x4d, 0xbd, 0x92,
-  0x34, 0x93, 0x8e, 0xcc, 0x6d, 0xef, 0x06, 0xed, 0xbf, 0x3a, 0xa4, 0x56,
-  0x18, 0x6e, 0x3c, 0x08, 0x73, 0x1d, 0xbb, 0xcf, 0x72, 0xce, 0x99, 0xed,
-  0x34, 0xf4, 0xf8, 0x29, 0xbe, 0x30, 0x56, 0xe4, 0x42, 0x40, 0x85, 0xbb,
-  0x09, 0x09, 0x18, 0xe7, 0xa5, 0xdd, 0xcc, 0x45, 0xef, 0xbb, 0x2b, 0xd8,
-  0xca, 0xc0, 0x3c, 0x67, 0x77, 0xc0, 0x39, 0x94, 0xbe, 0xb8, 0xaf, 0x6b,
-  0xc0, 0x29, 0xef, 0xeb, 0xbc, 0xa0, 0xeb, 0x2e, 0x2a, 0xd7, 0x54, 0x7a,
-  0x5b, 0xe5, 0x18, 0xef, 0x5a, 0xe4, 0x63, 0x06, 0xd5, 0x7e, 0xf5, 0xf5,
-  0xa4, 0xb8, 0x02, 0xe7, 0xea, 0xd1, 0x41, 0xc3, 0x4f, 0x0e, 0x48, 0xde,
-  0xd3, 0x4e, 0x65, 0xc0, 0x7c, 0x56, 0x44, 0x8a, 0xb7, 0xbf, 0x57, 0x84,
-  0xa8, 0xbe, 0x81, 0x29, 0x74, 0xac, 0x6d, 0xbb, 0xa6, 0x65, 0x3f, 0xa8,
-  0x7d, 0xf7, 0x45, 0xd8, 0x97, 0x2d, 0x4e, 0xaa, 0x2d, 0xb3, 0x6c, 0x44,
-  0x9c, 0xa2, 0x96, 0xab, 0x9c, 0x3b, 0x2e, 0x38, 0xd0, 0xad, 0x46, 0x2a,
-  0x74, 0x56, 0xcb, 0xbd, 0x35, 0xd5, 0xc4, 0xbe, 0x8d, 0xaf, 0x37, 0x24,
-  0x47, 0x60, 0xe3, 0xe5, 0x06, 0x73, 0x30, 0xf0, 0x25, 0xab, 0x82, 0xa7,
-  0x97, 0xd3, 0x86, 0xdc, 0x8a, 0x7d, 0x91, 0x1d, 0x14, 0xef, 0xcf, 0x1f,
-  0x10, 0xbe, 0x96, 0xbd, 0x1a, 0x19, 0x06, 0x4f, 0xb2, 0x99, 0x00, 0x94,
-  0x2b, 0xa3, 0x02, 0x80, 0xe9, 0xa8, 0x96, 0x40, 0x19, 0xbd, 0x74, 0x59,
-  0x2c, 0x63, 0xbc, 0x94, 0x0a, 0xf1, 0x0b, 0x62, 0xe6, 0x5c, 0xce, 0x17,
-  0xc8, 0x8e, 0x1f, 0x33, 0x84, 0xbb, 0x9e, 0xa5, 0x41, 0xf2, 0x7e, 0x2e,
-  0xb5, 0x04, 0x32, 0x28, 0xcb, 0x79, 0x39, 0x5e, 0xce, 0x60, 0xaa, 0x18,
-  0xc3, 0x40, 0xc6, 0x17, 0x8f, 0x88, 0x07, 0x0d, 0xf7, 0x7c, 0x38, 0x60,
-  0x31, 0x8e, 0x88, 0xc1, 0x5c, 0xfb, 0xe5, 0x50, 0x14, 0x04, 0x60, 0xa9,
-  0x41, 0x9c, 0xa5, 0x02, 0x87, 0x9b, 0xa2, 0x0c, 0x08, 0x9e, 0xc1, 0xa3,
-  0x37, 0x47, 0xe7, 0xe7, 0x47, 0xe7, 0x58, 0xef, 0x83, 0x79, 0xa3, 0x6c,
-  0x9c, 0x83, 0x4e, 0xf5, 0xae, 0x46, 0x0b, 0xfb, 0xed, 0x82, 0xe8, 0x0b,
-  0x2b, 0x4c, 0x27, 0x13, 0xa0, 0x8c, 0xb3, 0x06, 0x21, 0x48, 0x41, 0x52,
-  0xae, 0x3b, 0x34, 0x2f, 0x72, 0xd8, 0xb7, 0x73, 0x1b, 0x84, 0x75, 0x1b,
-  0x03, 0xd9, 0xc2, 0xb7, 0x50, 0x6a, 0x5d, 0xd2, 0xa5, 0xe5, 0xe4, 0x5f,
-  0x67, 0x0d, 0x31, 0x75, 0xa0, 0x91, 0xba, 0x99, 0x3a, 0xd3, 0xa7, 0xce,
-  0x3e, 0xc1, 0x53, 0xbe, 0xc4, 0x19, 0x85, 0xee, 0xc4, 0x8b, 0x51, 0xd5,
-  0xcb, 0x45, 0x3e, 0x71, 0xd6, 0x5e, 0xfa, 0x9c, 0xc4, 0xbf, 0x44, 0x4e,
-  0x79, 0x65, 0xb1, 0x2e, 0xec, 0xd5, 0x34, 0x63, 0x44, 0x68, 0x6d, 0x6b,
-  0x21, 0xf8, 0x26, 0x9c, 0x2f, 0x27, 0x41, 0x63, 0x56, 0x35, 0xa9, 0x99,
-  0x5d, 0xae, 0xb4, 0x9f, 0xb1, 0x95, 0x11, 0xdc, 0xc2, 0xc2, 0x6f, 0x42,
-  0xce, 0x00, 0x5b, 0xd6, 0xcc, 0xc7, 0xbb, 0x23, 0x84, 0x6d, 0x5f, 0x70,
-  0x50, 0x38, 0xa9, 0xb4, 0xdc, 0x4f, 0x7e, 0xae, 0xf2, 0xf1, 0xaf, 0xfe,
-  0xf2, 0xe0, 0xf4, 0x9f, 0x66, 0x45, 0x39, 0x5e, 0x3a, 0x5d, 0x28, 0x55,
-  0x86, 0x25, 0x99, 0xfb, 0xfd, 0xf0, 0xe8, 0x3c, 0x39, 0xf8, 0x16, 0x38,
-  0xc0, 0xff, 0xe0, 0x06, 0xe3, 0x39, 0xbd, 0x1d, 0xd6, 0x14, 0x63, 0x41,
-  0xd1, 0x4d, 0x32, 0x33, 0x85, 0x0b, 0x32, 0x57, 0x63, 0x67, 0x73, 0x2b,
-  0xc0, 0x1d, 0xc0, 0x50, 0x34, 0xf6, 0x70, 0x2d, 0x79, 0x74, 0x17, 0x3f,
-  0x65, 0x0f, 0x71, 0xc8, 0xc2, 0x5d, 0x14, 0x5c, 0x24, 0x71, 0x49, 0xd8,
-  0xde, 0xe8, 0xe8, 0xab, 0x8e, 0xda, 0x29, 0xbb, 0x74, 0x90, 0x6c, 0xbc,
-  0x2d, 0xfe, 0x4e, 0xc2, 0x40, 0xba, 0xfd, 0x64, 0xb0, 0x93, 0x6c, 0xfe,
-  0x98, 0xcf, 0x5f, 0x3c, 0xfb, 0x73, 0x72, 0xbc, 0xb5, 0xd1, 0x08, 0xe6,
-  0x97, 0x1a, 0xac, 0xa3, 0x74, 0x7e, 0xe3, 0xb6, 0xec, 0x94, 0x4f, 0xb6,
-  0x04, 0xd5, 0x59, 0x61, 0x16, 0xa9, 0x1b, 0xbd, 0xb2, 0x45, 0x4e, 0xfd,
-  0xd4, 0xbc, 0x80, 0xe4, 0x07, 0x87, 0x7b, 0x0d, 0x2d, 0x9f, 0x9e, 0x9a,
-  0x60, 0xe9, 0x5e, 0x3c, 0xeb, 0x34, 0xf1, 0xd4, 0xb5, 0xf1, 0x5e, 0xda,
-  0xf8, 0x8d, 0x4d, 0xec, 0x0d, 0x76, 0xf6, 0x92, 0xcd, 0xd3, 0xe1, 0xf6,
-  0x9e, 0x6b, 0xa1, 0xdb, 0xc4, 0x1e, 0x37, 0x81, 0x87, 0x9a, 0x2f, 0x3f,
-  0x45, 0xff, 0x3f, 0x67, 0xf3, 0x5f, 0x93, 0xcd, 0x9f, 0x76, 0x77, 0xa9,
-  0x81, 0x3f, 0x27, 0x07, 0xc7, 0x3f, 0x25, 0x4f, 0x07, 0xd4, 0xd8, 0xbb,
-  0xf4, 0x56, 0x9b, 0x53, 0x38, 0xdb, 0x21, 0x37, 0x42, 0xdf, 0x77, 0xda,
-  0x78, 0xd6, 0x6a, 0xe3, 0x84, 0xf4, 0xc2, 0x8f, 0x74, 0xad, 0xec, 0x0c,
-  0x9e, 0xec, 0x25, 0xf9, 0xb3, 0x2f, 0x9f, 0x5b, 0x43, 0xda, 0x06, 0x7f,
-  0xdf, 0xb4, 0x56, 0x0a, 0x60, 0x0a, 0x89, 0x3a, 0x47, 0x1f, 0x89, 0xa1,
-  0x31, 0x8b, 0xe0, 0x5a, 0x19, 0xd7, 0x69, 0x69, 0x55, 0x8c, 0x51, 0xef,
-  0x80, 0x76, 0x4a, 0x81, 0xa4, 0x33, 0x36, 0x5b, 0xd2, 0xc5, 0xb9, 0xdf,
-  0x19, 0x0e, 0x74, 0x53, 0x7b, 0xf4, 0xcf, 0xc9, 0xdb, 0xe1, 0xf1, 0x11,
-  0xcd, 0x68, 0x87, 0x86, 0xe6, 0xd7, 0x50, 0x06, 0xc4, 0x5f, 0xf1, 0xe2,
-  0xbe, 0x60, 0x5c, 0x52, 0x6d, 0x23, 0xac, 0xb7, 0xcb, 0x44, 0x47, 0x17,
-  0x77, 0xc5, 0xfd, 0x22, 0x24, 0xa5, 0x7f, 0x70, 0x05, 0x15, 0x42, 0xae,
-  0x5a, 0xee, 0xfa, 0xfb, 0x62, 0x4e, 0xc7, 0xa4, 0x2c, 0x4a, 0x44, 0x4e,
-  0x6d, 0x34, 0xa4, 0x85, 0xef, 0x5f, 0x1f, 0x49, 0x52, 0xfd, 0xdb, 0x74,
-  0x4e, 0x3c, 0x12, 0xe0, 0x58, 0xd5, 0x0d, 0xfc, 0xff, 0xe2, 0xce, 0x91,
-  0xf7, 0x4f, 0xee, 0xe7, 0x1f, 0x69, 0x1f, 0xbf, 0x18, 0xec, 0x22, 0x64,
-  0x1b, 0x5a, 0xef, 0x9b, 0xb7, 0xf4, 0xf7, 0xee, 0xd3, 0x8d, 0x04, 0x5f,
-  0x35, 0x35, 0x78, 0x3b, 0xaf, 0x6b, 0x87, 0xa7, 0xa7, 0xdf, 0x1f, 0x4b,
-  0x00, 0xc8, 0xa1, 0x9a, 0x55, 0x21, 0x5c, 0x39, 0xad, 0x58, 0xb8, 0x2b,
-  0x69, 0x6f, 0x3e, 0x5b, 0x89, 0x9d, 0x71, 0x37, 0x59, 0xb6, 0x40, 0x34,
-  0x42, 0xdd, 0xe2, 0x08, 0xb5, 0xf2, 0x68, 0x17, 0xdb, 0x04, 0xf1, 0xa7,
-  0x01, 0xec, 0x55, 0x01, 0x2c, 0xd9, 0x4c, 0xb8, 0xa3, 0x7b, 0x07, 0xdc,
-  0x91, 0xfa, 0x82, 0x88, 0x3c, 0x44, 0x97, 0xad, 0x60, 0x26, 0x68, 0x29,
-  0x3b, 0x42, 0x2f, 0xaa, 0xee, 0xbb, 0x31, 0x24, 0xe9, 0x5e, 0x06, 0xbd,
-  0xaf, 0x56, 0xdb, 0x8d, 0x00, 0x5e, 0x9a, 0x25, 0xda, 0x85, 0x16, 0xfb,
-  0x61, 0xd3, 0xb1, 0x45, 0xd4, 0x1b, 0x6f, 0xae, 0xd8, 0x96, 0xcd, 0xe1,
-  0x79, 0xef, 0x0e, 0xde, 0x1e, 0xbd, 0xfa, 0xe1, 0xe0, 0xe4, 0xfd, 0x11,
-  0xbd, 0x92, 0x33, 0x90, 0xbb, 0x0b, 0xe1, 0xe3, 0x31, 0xce, 0x72, 0xae,
-  0xf5, 0x5b, 0x91, 0x78, 0xb0, 0xb1, 0x26, 0xe1, 0xe5, 0xc9, 0x3a, 0xde,
-  0xda, 0x95, 0xd7, 0x88, 0x2e, 0xf0, 0xd7, 0x9e, 0xfc, 0xb5, 0xf7, 0xe7,
-  0xf5, 0xad, 0xc6, 0xa4, 0x3b, 0x5a, 0x32, 0xe8, 0xe5, 0x4e, 0x2a, 0x3e,
-  0x21, 0x3c, 0x48, 0x72, 0x37, 0x64, 0x55, 0xd6, 0xcd, 0x47, 0x13, 0x96,
-  0xbd, 0xdc, 0x1c, 0xdd, 0x87, 0x3a, 0xf8, 0x3a, 0x5e, 0x7a, 0xc5, 0x02,
-  0xc6, 0xfa, 0x56, 0xcf, 0x89, 0x1c, 0xec, 0x2a, 0x47, 0x1b, 0xd6, 0x44,
-  0xf6, 0x71, 0x81, 0x88, 0xc8, 0xcd, 0x75, 0xf9, 0xe5, 0xd5, 0xeb, 0x83,
-  0x8b, 0x23, 0xbc, 0x60, 0xdd, 0x5b, 0x75, 0x03, 0x4b, 0xa3, 0xc0, 0x78,
-  0x36, 0xd5, 0x35, 0xfd, 0x0a, 0x13, 0x5a, 0xdf, 0x12, 0x5f, 0x06, 0x3b,
-  0xd5, 0x5b, 0xe3, 0x02, 0x4f, 0x93, 0xc0, 0x6d, 0x9f, 0xa8, 0x5e, 0x59,
-  0xc4, 0xca, 0xe6, 0xba, 0x7c, 0xb7, 0xee, 0x2c, 0xb8, 0x74, 0x97, 0x6f,
-  0xdc, 0x66, 0xe6, 0xae, 0x9c, 0x70, 0x92, 0x45, 0x27, 0xb3, 0x56, 0x42,
-  0xd2, 0xfc, 0xfe, 0xa8, 0xb3, 0x42, 0x2c, 0x4e, 0x01, 0xde, 0xb6, 0xdb,
-  0x78, 0xcd, 0x84, 0x87, 0x8d, 0xa9, 0x28, 0x76, 0xf7, 0x9e, 0xfc, 0x99,
-  0xd7, 0xf3, 0xd5, 0xfa, 0x36, 0xdd, 0x0d, 0xeb, 0x7f, 0x46, 0xd7, 0xb9,
-  0xd9, 0x38, 0x83, 0x20, 0x72, 0xe8, 0x53, 0x4a, 0x51, 0x12, 0x2e, 0x83,
-  0x5d, 0x0f, 0xf0, 0x7d, 0x78, 0x41, 0xef, 0x24, 0x4b, 0xcc, 0x10, 0x71,
-  0x2c, 0x78, 0x80, 0xf7, 0x6b, 0x94, 0x5d, 0xe5, 0xf3, 0xb9, 0xab, 0x29,
-  0x2c, 0xdd, 0x85, 0xf7, 0x47, 0x4f, 0xde, 0x95, 0x39, 0x2a, 0x82, 0x10,
-  0xfa, 0x9c, 0xdd, 0x5b, 0x22, 0x59, 0x55, 0x99, 0x8a, 0x2b, 0x7b, 0xd6,
-  0x91, 0x8c, 0x47, 0x6a, 0xdb, 0x31, 0x65, 0x84, 0x65, 0x02, 0x62, 0x2d,
-  0xf7, 0x2c, 0x28, 0x71, 0xb4, 0x41, 0x18, 0x64, 0x61, 0x77, 0x76, 0x3a,
-  0x42, 0x96, 0xb9, 0x4b, 0x8d, 0x09, 0xb4, 0x72, 0xb7, 0xf4, 0x76, 0xfc,
-  0xf2, 0x00, 0x9b, 0x09, 0x17, 0xa5, 0xac, 0x65, 0xe5, 0x6c, 0x48, 0xec,
-  0x6d, 0xd4, 0x67, 0x9b, 0xfb, 0xd4, 0xca, 0x47, 0xe3, 0x69, 0x88, 0x4a,
-  0x2f, 0xfa, 0x31, 0xb1, 0x9a, 0x79, 0x56, 0x3e, 0x18, 0x60, 0x11, 0x71,
-  0x46, 0xf1, 0x14, 0x83, 0x48, 0x07, 0xbc, 0x33, 0x18, 0x0c, 0x7c, 0x65,
-  0x72, 0x6c, 0x8b, 0xfa, 0xa0, 0xb8, 0x9c, 0x51, 0x80, 0x20, 0xcb, 0x6b,
-  0xbc, 0xc9, 0xc2, 0x3c, 0x0b, 0xd4, 0x5b, 0x1a, 0x78, 0xa3, 0x76, 0x02,
-  0x77, 0x34, 0x02, 0x1b, 0xc7, 0x86, 0x76, 0xbb, 0x61, 0xb0, 0x0d, 0x37,
-  0xb1, 0x4d, 0x78, 0x60, 0x6c, 0x62, 0x7b, 0xd4, 0x0a, 0x9b, 0x8e, 0x4f,
-  0x15, 0x6e, 0x2d, 0x40, 0xc1, 0x08, 0x20, 0x67, 0x3a, 0x91, 0x8c, 0x63,
-  0x59, 0x34, 0x1d, 0x8a, 0x16, 0x5b, 0x03, 0x93, 0x2b, 0xee, 0x18, 0x06,
-  0x41, 0xaa, 0xd5, 0x2c, 0x4a, 0x68, 0x7a, 0x58, 0x63, 0xbb, 0x41, 0x16,
-  0x4e, 0x6c, 0xd6, 0x76, 0x14, 0x50, 0x18, 0x3a, 0x33, 0xcb, 0xfe, 0x3d,
-  0x0f, 0x3a, 0xbc, 0xc6, 0x45, 0x3f, 0x33, 0xd5, 0x9e, 0x69, 0xa8, 0xec,
-  0xf6, 0xd2, 0xc9, 0x7b, 0x73, 0x15, 0xa2, 0xcd, 0xfa, 0x02, 0xe9, 0x62,
-  0x89, 0x88, 0xc6, 0x3d, 0x14, 0xd4, 0xe3, 0x21, 0x7f, 0xf9, 0xd8, 0x5a,
-  0x74, 0xce, 0xf2, 0xd6, 0xda, 0xf8, 0x5b, 0xb9, 0xc9, 0xba, 0x68, 0x45,
-  0xc5, 0xba, 0x2c, 0xe0, 0x19, 0x9e, 0xef, 0x25, 0xe9, 0x1d, 0x5d, 0x3d,
-  0xf3, 0x0c, 0xf1, 0x99, 0x1c, 0xe9, 0xc0, 0x56, 0x99, 0x93, 0xc0, 0xce,
-  0xe8, 0x61, 0x95, 0x85, 0x6a, 0x35, 0xa6, 0x09, 0x7c, 0x67, 0xdf, 0x4a,
-  0x6c, 0x0b, 0x60, 0xae, 0x19, 0xf4, 0x72, 0xae, 0x08, 0x0e, 0x80, 0x53,
-  0x95, 0xd4, 0x4d, 0x3d, 0xc7, 0xc8, 0xb7, 0xb8, 0x60, 0xb2, 0x88, 0xf3,
-  0x1c, 0x97, 0x08, 0x3b, 0x87, 0xc4, 0x55, 0xd8, 0x6a, 0x71, 0x91, 0x01,
-  0xd7, 0x89, 0xf3, 0x4f, 0xab, 0xf9, 0x09, 0xe1, 0xbd, 0xf3, 0x3e, 0x43,
-  0x5d, 0xb8, 0x72, 0xba, 0xa2, 0x5e, 0x5d, 0x5d, 0x59, 0xe9, 0x9d, 0xd6,
-  0xd4, 0xe2, 0x44, 0x76, 0x82, 0x55, 0x41, 0x14, 0xf4, 0xfd, 0xaa, 0xd5,
-  0xbc, 0x30, 0x9b, 0x8f, 0x59, 0x5d, 0x1a, 0xc4, 0x6c, 0x3e, 0x49, 0xd9,
-  0xb7, 0xda, 0x25, 0x5d, 0x71, 0x82, 0x46, 0xd3, 0x87, 0x7c, 0x7a, 0xbe,
-  0xc6, 0x20, 0xf3, 0x73, 0x0f, 0xc8, 0x60, 0x9b, 0xce, 0xf8, 0x7c, 0x3e,
-  0x02, 0xc5, 0x47, 0xa2, 0xde, 0xb9, 0x50, 0x2b, 0xa9, 0x0d, 0x38, 0x4a,
-  0xbd, 0xca, 0xb5, 0x96, 0x34, 0xac, 0xbd, 0x28, 0xa8, 0x72, 0x3c, 0x57,
-  0x3e, 0x54, 0xdc, 0x66, 0x1e, 0x24, 0xd2, 0x1b, 0x1c, 0x3d, 0xb0, 0xaf,
-  0x9e, 0x7e, 0xc7, 0x4c, 0x5a, 0x0e, 0x5e, 0xc7, 0xaf, 0x78, 0x92, 0xad,
-  0x55, 0x09, 0x2b, 0xb7, 0xa8, 0xa9, 0xa4, 0x08, 0x59, 0xbc, 0x8c, 0x4d,
-  0xfd, 0xd6, 0xd6, 0xa2, 0xd0, 0x88, 0x80, 0xbc, 0x04, 0xaa, 0x89, 0x94,
-  0x1c, 0x31, 0xac, 0x7c, 0x17, 0xa3, 0xe7, 0xfd, 0xbf, 0x36, 0xcb, 0x75,
-  0xb7, 0x49, 0xeb, 0x9c, 0xe6, 0x39, 0x52, 0x22, 0x60, 0x1a, 0x80, 0x40,
-  0xe7, 0x5c, 0xf8, 0x17, 0xba, 0x4f, 0x4c, 0xc9, 0x6c, 0x41, 0x6b, 0x31,
-  0xd2, 0xce, 0x99, 0x73, 0x21, 0x1a, 0x9c, 0x87, 0x02, 0x54, 0x5f, 0xc4,
-  0x15, 0xf4, 0x47, 0x6b, 0x92, 0x6f, 0xd4, 0x1f, 0x87, 0xb5, 0xb5, 0x57,
-  0x03, 0x16, 0x8c, 0x1a, 0x07, 0xf3, 0xb1, 0x73, 0x7a, 0x76, 0x7e, 0xfa,
-  0xed, 0xf9, 0xd1, 0x70, 0x98, 0xbc, 0x3d, 0xba, 0x10, 0x5d, 0xff, 0x42,
-  0x42, 0xef, 0xae, 0xa0, 0xae, 0x27, 0xec, 0x6b, 0x30, 0x0c, 0x27, 0x0b,
-  0x39, 0x31, 0x43, 0x02, 0xe7, 0x3c, 0x15, 0xf0, 0xa3, 0xb1, 0xfc, 0xc6,
-  0x4a, 0xfc, 0x54, 0x23, 0xf6, 0xae, 0xd9, 0xda, 0xcf, 0x31, 0x4d, 0xec,
-  0x90, 0x74, 0xc6, 0x73, 0x6f, 0x46, 0x65, 0xc1, 0x58, 0xa2, 0x9c, 0x5c,
-  0xce, 0xa1, 0x37, 0xa1, 0xe3, 0xca, 0xa6, 0x9f, 0x3c, 0xbd, 0x3f, 0xd2,
-  0x6a, 0xd6, 0xc0, 0x9b, 0xc5, 0xaf, 0xe7, 0x46, 0x14, 0x7f, 0x4c, 0x7e,
-  0xa2, 0x36, 0x27, 0xa4, 0xbc, 0xc2, 0x82, 0x4c, 0xb7, 0xec, 0x90, 0xeb,
-  0x9d, 0xfa, 0xb2, 0x42, 0x8c, 0x99, 0x1f, 0xfc, 0x87, 0x52, 0xc4, 0x83,
-  0x78, 0x55, 0x9e, 0x46, 0x59, 0x1d, 0x81, 0x3d, 0xd2, 0x98, 0x3a, 0xd7,
-  0xb3, 0x16, 0x32, 0x4e, 0x92, 0x93, 0xec, 0xb2, 0x66, 0x29, 0x04, 0xdd,
-  0x51, 0x73, 0x3b, 0xc0, 0x7f, 0xde, 0x45, 0xdd, 0x33, 0xfa, 0xf5, 0xc9,
-  0x97, 0xcf, 0x77, 0xbe, 0x94, 0x5f, 0xed, 0xdf, 0x17, 0x4f, 0x77, 0x14,
-  0x47, 0x9d, 0xfe, 0x7a, 0xba, 0xff, 0x74, 0x77, 0x1f, 0xf0, 0x8e, 0x3b,
-  0xfb, 0x3b, 0xf4, 0xff, 0x4f, 0xf5, 0x13, 0x60, 0x58, 0xbe, 0xd8, 0xfb,
-  0xf2, 0x0b, 0x8e, 0x86, 0x01, 0x7d, 0x4c, 0xa9, 0x93, 0x7e, 0x5d, 0xf4,
-  0x19, 0x65, 0x8a, 0x25, 0x9f, 0x3f, 0x36, 0x2d, 0x91, 0x70, 0xaf, 0x8f,
-  0xe1, 0x4c, 0xbd, 0x12, 0x9d, 0x66, 0x9a, 0x71, 0x79, 0x89, 0xcb, 0x00,
-  0xf8, 0xc6, 0x22, 0xc4, 0x25, 0x6d, 0x5b, 0xa7, 0xa1, 0x6f, 0xd7, 0xfc,
-  0x37, 0xc3, 0xb6, 0x35, 0xde, 0x91, 0x40, 0xf3, 0x00, 0x21, 0xee, 0xb7,
-  0x76, 0x6d, 0x89, 0xe4, 0x6b, 0x8c, 0xfb, 0xa6, 0x5b, 0xa5, 0xef, 0x8d,
-  0xad, 0x16, 0xb4, 0x7b, 0x0a, 0x62, 0xe0, 0x4c, 0x72, 0x12, 0x2e, 0x25,
-  0x5c, 0xf9, 0xb7, 0xf6, 0x27, 0x96, 0x2b, 0xbc, 0xa5, 0xd4, 0x90, 0x74,
-  0x7b, 0x73, 0xb9, 0x08, 0x91, 0xbe, 0x1a, 0xc4, 0xb3, 0xe6, 0xb7, 0xdf,
-  0xaf, 0x14, 0x58, 0x99, 0x3e, 0xe4, 0x72, 0xb8, 0xa4, 0xb4, 0x6e, 0x64,
-  0xca, 0x9d, 0xe6, 0x94, 0x8c, 0x7e, 0x43, 0x73, 0x7e, 0x46, 0x4c, 0xc1,
-  0x6e, 0xe7, 0xfa, 0xc1, 0xe6, 0xe4, 0x12, 0xd8, 0x66, 0xab, 0xe1, 0x70,
-  0x45, 0xed, 0x9a, 0x93, 0x57, 0x1d, 0xc9, 0xf6, 0xe5, 0x0d, 0x95, 0x39,
-  0x5d, 0x5e, 0x1c, 0x9d, 0xc2, 0xdb, 0x82, 0xaf, 0x78, 0x79, 0xde, 0x28,
-  0xbb, 0xd3, 0x15, 0xa8, 0x31, 0xe8, 0x4f, 0xfb, 0xe0, 0xf3, 0xe4, 0x0e,
-  0xdd, 0x83, 0x53, 0xf3, 0xb1, 0xf5, 0xae, 0xb0, 0xf0, 0xa6, 0x8b, 0x55,
-  0x8f, 0x1d, 0x49, 0xff, 0x1c, 0x87, 0xaf, 0xbb, 0xe6, 0xc2, 0xdb, 0x87,
-  0xcb, 0x4a, 0xf3, 0xf8, 0x18, 0xdd, 0x69, 0x09, 0x74, 0xff, 0x2d, 0x63,
-  0x61, 0xfd, 0x3f, 0xb8, 0xb0, 0x2d, 0xbe, 0xcc, 0xb4, 0x4a, 0x68, 0x2a,
-  0x94, 0x3f, 0x0d, 0x73, 0x69, 0x1d, 0xb7, 0x1b, 0xa5, 0x65, 0x03, 0x45,
-  0x7f, 0x4d, 0xeb, 0x33, 0xcc, 0x00, 0x51, 0xc7, 0xe9, 0x8e, 0x22, 0x47,
-  0xfc, 0xcb, 0xda, 0xda, 0xf0, 0xec, 0xe8, 0xe8, 0x75, 0x72, 0x72, 0xfc,
-  0xf6, 0xf8, 0x22, 0x90, 0xc2, 0xdd, 0xed, 0x61, 0x96, 0x56, 0xab, 0x38,
-  0xd5, 0x5a, 0x0e, 0x8f, 0xda, 0xac, 0x95, 0x40, 0xf4, 0xfe, 0x9e, 0x65,
-  0x9a, 0x45, 0x31, 0x6d, 0xbf, 0xc7, 0xfa, 0x36, 0x23, 0x3b, 0x0d, 0x92,
-  0x6f, 0x82, 0xc0, 0xc8, 0xa4, 0x22, 0x89, 0x66, 0xec, 0x0a, 0x2e, 0xf7,
-  0xff, 0xa2, 0x71, 0x1a, 0x4d, 0x71, 0x49, 0xc1, 0x67, 0x5d, 0x4a, 0x8f,
-  0xc6, 0xb6, 0xb6, 0x46, 0x85, 0xb5, 0xcd, 0x24, 0xb4, 0x3a, 0x30, 0xcb,
-  0x71, 0xd8, 0xde, 0x5d, 0xc6, 0x68, 0x07, 0xb3, 0x5c, 0x72, 0x2d, 0xc3,
-  0x98, 0x62, 0x57, 0x83, 0xf6, 0xa2, 0x10, 0x3e, 0x1e, 0xf6, 0x18, 0x16,
-  0x17, 0xb7, 0x80, 0x5a, 0xeb, 0x2b, 0xac, 0x5a, 0xfd, 0x64, 0xc7, 0xa5,
-  0x2b, 0x2c, 0x98, 0xe7, 0xa8, 0x7c, 0x8f, 0xce, 0x76, 0x13, 0x12, 0x42,
-  0x96, 0x10, 0xe5, 0xcb, 0xe5, 0xbc, 0x73, 0xdd, 0xfd, 0x45, 0xde, 0xa5,
-  0xf9, 0x3f, 0xdf, 0xe1, 0xeb, 0xed, 0x32, 0x2d, 0xfb, 0x24, 0x6e, 0xdd,
-  0xf7, 0xcd, 0xa4, 0x2a, 0x14, 0xa1, 0xf1, 0xc6, 0x62, 0xef, 0xc9, 0x7c,
-  0xb9, 0xdb, 0x96, 0x88, 0xe8, 0x73, 0x4e, 0x0a, 0xf6, 0x4b, 0x4e, 0xf5,
-  0x00, 0x60, 0xea, 0xc8, 0xf4, 0x35, 0x0b, 0xa7, 0x17, 0x70, 0x3c, 0x30,
-  0xb1, 0xed, 0xa2, 0xe7, 0x51, 0xc8, 0x40, 0x60, 0xb6, 0x8a, 0x56, 0x73,
-  0x4c, 0x53, 0xe7, 0xd2, 0x95, 0xa7, 0x67, 0xc9, 0xee, 0x97, 0x98, 0xc7,
-  0xa7, 0xcd, 0xe7, 0x4d, 0x51, 0x8e, 0x5d, 0x4e, 0x31, 0xeb, 0x08, 0x41,
-  0x82, 0xa9, 0xa4, 0x45, 0x70, 0xb5, 0x26, 0x59, 0x5d, 0x0b, 0x8a, 0xe5,
-  0xa0, 0x3d, 0x28, 0x25, 0xea, 0x4f, 0x67, 0x73, 0x14, 0x3b, 0xb8, 0x45,
-  0x2c, 0xc2, 0x5d, 0xa3, 0xeb, 0x02, 0x03, 0xab, 0x04, 0xed, 0x6d, 0x94,
-  0x2e, 0x01, 0x55, 0x96, 0x01, 0x26, 0x11, 0xa2, 0xb5, 0xbb, 0x7c, 0xc2,
-  0xa2, 0xb4, 0x87, 0xa8, 0xa3, 0xfd, 0x12, 0xe2, 0x93, 0x58, 0x69, 0xf6,
-  0x59, 0xb2, 0xb3, 0xd3, 0x8d, 0x4c, 0x05, 0x18, 0x2c, 0x6b, 0xc1, 0x16,
-  0x85, 0x4d, 0x96, 0x1f, 0x90, 0xdf, 0xec, 0xfd, 0x02, 0xd0, 0x9f, 0xc0,
-  0x9a, 0xd7, 0x7d, 0x2f, 0xc8, 0x15, 0xa8, 0xeb, 0xa9, 0x19, 0x13, 0xde,
-  0x3a, 0xc2, 0x6e, 0xce, 0x19, 0x48, 0x2d, 0xc1, 0xb4, 0x77, 0x77, 0x48,
-  0x68, 0x9d, 0x16, 0x8d, 0xe2, 0xe7, 0x44, 0x54, 0x5d, 0x4d, 0x94, 0xa7,
-  0xd5, 0xe7, 0xd5, 0xd9, 0xdd, 0xf9, 0x7e, 0xf5, 0xaa, 0x33, 0xc8, 0xfd,
-  0x83, 0x2f, 0xef, 0x3d, 0x7d, 0x60, 0xd3, 0x4e, 0x4b, 0x56, 0xc6, 0x33,
-  0x8b, 0x81, 0x64, 0x41, 0xd0, 0x7b, 0x5e, 0x3a, 0xdb, 0x46, 0x84, 0x9f,
-  0x5d, 0xa5, 0x18, 0xfe, 0x43, 0xa3, 0xb7, 0x9c, 0x90, 0xd6, 0x50, 0xde,
-  0x6a, 0x54, 0xb6, 0x7c, 0x59, 0xc1, 0x2c, 0xb6, 0x60, 0x80, 0x3e, 0xaf,
-  0xbb, 0xba, 0x74, 0x72, 0xc1, 0x66, 0x08, 0xde, 0x16, 0xce, 0xd9, 0x6b,
-  0x32, 0x09, 0xa3, 0x9e, 0x32, 0xbb, 0x5a, 0x0a, 0x12, 0x46, 0x21, 0xba,
-  0x3e, 0xf0, 0xac, 0xf5, 0xbc, 0x12, 0x6f, 0x46, 0xf8, 0x90, 0xd0, 0x13,
-  0x33, 0xde, 0x71, 0x6a, 0x22, 0xab, 0x88, 0x1c, 0xed, 0x8b, 0x01, 0x46,
-  0xd9, 0x31, 0xbc, 0x60, 0xcc, 0x0d, 0xd6, 0x92, 0x76, 0xdd, 0x6c, 0x01,
-  0x6c, 0x1c, 0x70, 0xa6, 0xaf, 0x10, 0x8a, 0x63, 0xf6, 0x48, 0x2b, 0x83,
-  0x37, 0xac, 0x16, 0xb7, 0x00, 0x37, 0xd0, 0x53, 0xaa, 0xe5, 0x96, 0x5c,
-  0x57, 0xe0, 0xf8, 0x95, 0x01, 0x67, 0x0a, 0xcc, 0x3e, 0x8c, 0xfd, 0x87,
-  0xa7, 0xef, 0xde, 0x1c, 0x7f, 0xeb, 0xa0, 0x8c, 0x84, 0x89, 0x37, 0x20,
-  0x36, 0x5c, 0x7d, 0x73, 0xe7, 0xe9, 0xd6, 0x52, 0x8c, 0x1a, 0x7d, 0x4b,
-  0xec, 0xe9, 0x43, 0xf8, 0x01, 0x33, 0x90, 0xf9, 0x13, 0x18, 0xc8, 0x05,
-  0xff, 0xa3, 0xda, 0xf2, 0xe6, 0x86, 0x16, 0x54, 0x9d, 0x64, 0x69, 0xa4,
-  0x65, 0xbd, 0x5c, 0xb8, 0x20, 0xc2, 0xa0, 0x94, 0xa3, 0x02, 0x70, 0x5b,
-  0x2a, 0xfa, 0x72, 0x21, 0xac, 0x49, 0x13, 0x4a, 0x1b, 0xd6, 0x5c, 0xb9,
-  0x03, 0x60, 0x4e, 0x50, 0x2c, 0x15, 0xbd, 0x00, 0x3a, 0x71, 0x39, 0x53,
-  0x20, 0x76, 0x86, 0xf1, 0xf2, 0xe6, 0xbf, 0x99, 0x70, 0x31, 0xcc, 0xb0,
-  0xe4, 0xf9, 0x4c, 0xd4, 0x31, 0xcc, 0x9b, 0x6b, 0x4a, 0xbb, 0x60, 0x1c,
-  0x17, 0xfd, 0xeb, 0xfd, 0x43, 0xae, 0xfa, 0x95, 0x8f, 0x4f, 0xb2, 0x34,
-  0xd6, 0x94, 0x5d, 0x95, 0xec, 0xeb, 0xe4, 0x4f, 0x5e, 0xc1, 0x2d, 0xb3,
-  0x0f, 0x1c, 0xfa, 0x99, 0x00, 0xca, 0x85, 0xe9, 0xa7, 0xca, 0x25, 0x3d,
-  0x58, 0xfc, 0xf1, 0x65, 0x90, 0xd1, 0x26, 0x71, 0x82, 0x46, 0x74, 0x62,
-  0x23, 0x86, 0x81, 0x65, 0xe3, 0x0f, 0x1b, 0xfd, 0xea, 0x7e, 0x36, 0x2a,
-  0xa6, 0x96, 0x78, 0xe1, 0x00, 0x24, 0xec, 0x21, 0xab, 0xae, 0xc6, 0x29,
-  0xb9, 0xe2, 0xa9, 0xad, 0x03, 0xb3, 0xa4, 0x8f, 0x95, 0xf2, 0xe3, 0x97,
-  0xf2, 0x44, 0xec, 0x1e, 0xb2, 0x59, 0x30, 0xb6, 0x0f, 0x78, 0x7c, 0x36,
-  0x1f, 0x4f, 0x0b, 0xa5, 0x6a, 0x24, 0x98, 0xf3, 0x4a, 0x35, 0xa7, 0x0e,
-  0x8f, 0x5f, 0xb1, 0x84, 0x85, 0x83, 0x4b, 0x8f, 0x90, 0xb8, 0xb3, 0xae,
-  0x88, 0x1a, 0x3c, 0x41, 0xbc, 0x2d, 0x5f, 0x68, 0x54, 0x7e, 0x80, 0x6f,
-  0x23, 0xb5, 0x4a, 0x68, 0xa8, 0xbf, 0x88, 0x41, 0x51, 0xfc, 0x7e, 0x7f,
-  0xb1, 0xce, 0xed, 0xd1, 0xd6, 0xd2, 0x13, 0x3d, 0xa5, 0xe5, 0x95, 0xa2,
-  0xf4, 0xa9, 0x27, 0x8d, 0x95, 0x44, 0x57, 0x41, 0xc6, 0x19, 0x26, 0x21,
-  0x94, 0xb8, 0xa8, 0x19, 0x16, 0x9f, 0x96, 0x92, 0x53, 0xa8, 0x19, 0x57,
-  0x62, 0x92, 0x74, 0x84, 0x18, 0x70, 0x9c, 0x3f, 0xb8, 0x58, 0x94, 0xd4,
-  0xdf, 0x65, 0x56, 0xd9, 0xc2, 0xdb, 0x67, 0xf5, 0x32, 0x0b, 0x5e, 0x83,
-  0x11, 0x8f, 0x35, 0xe1, 0x4c, 0x0d, 0x27, 0xd2, 0x15, 0xcb, 0x12, 0xc0,
-  0xb5, 0xe1, 0xe4, 0x9f, 0xac, 0xf2, 0x4d, 0xc8, 0xf7, 0xaf, 0xb4, 0x9e,
-  0x15, 0x9d, 0x67, 0x45, 0x4a, 0x51, 0xf8, 0xc0, 0x2f, 0x77, 0xd4, 0xfc,
-  0x56, 0x6b, 0xb8, 0x6a, 0x95, 0x1c, 0x9c, 0x1f, 0x91, 0x64, 0x7b, 0x35,
-  0x67, 0x8c, 0x8a, 0x79, 0x6d, 0x49, 0x75, 0xd9, 0x5c, 0x4b, 0x68, 0xcd,
-  0xed, 0x7c, 0xa0, 0xc3, 0xbb, 0xe0, 0x4d, 0x10, 0x93, 0x06, 0x06, 0x48,
-  0xfe, 0xb6, 0x27, 0xb9, 0xb1, 0xc1, 0x09, 0x33, 0xd7, 0x01, 0x4c, 0x82,
-  0x90, 0x14, 0x5c, 0x24, 0xd4, 0x55, 0x61, 0x50, 0xc2, 0x67, 0x1d, 0xb6,
-  0x1e, 0x62, 0x08, 0xdb, 0x5a, 0xf3, 0xa9, 0xf6, 0xa9, 0x08, 0x7f, 0x33,
-  0x60, 0x4e, 0xed, 0xab, 0xe1, 0xf6, 0xf4, 0xe4, 0xd4, 0x8b, 0x9b, 0x8c,
-  0xfe, 0xc6, 0xf7, 0x0c, 0x64, 0x91, 0xb6, 0x5c, 0x90, 0xb9, 0x08, 0x7b,
-  0xb1, 0x5e, 0x4f, 0x02, 0xe1, 0x57, 0x52, 0x00, 0x11, 0x63, 0x2d, 0x86,
-  0x69, 0x45, 0x02, 0x52, 0xbb, 0x8e, 0xa8, 0x03, 0x13, 0x3d, 0xab, 0xa0,
-  0x0a, 0x84, 0x0b, 0x8f, 0x80, 0x96, 0x74, 0x23, 0x02, 0x40, 0xc8, 0x9f,
-  0xa2, 0xb6, 0xdd, 0x3f, 0xb8, 0xd9, 0xfa, 0x31, 0xb8, 0x2f, 0xf1, 0xd1,
-  0x2b, 0x87, 0x6e, 0x87, 0x51, 0x0c, 0xd0, 0x11, 0xb3, 0x54, 0xf6, 0x99,
-  0xe2, 0x17, 0xfe, 0x98, 0xa3, 0xde, 0x0c, 0xee, 0x94, 0xb9, 0x8e, 0x83,
-  0xd0, 0x2a, 0xd4, 0xa7, 0xea, 0x07, 0x22, 0x8e, 0x3d, 0xe6, 0xd0, 0xa3,
-  0x50, 0x34, 0xee, 0x7f, 0xbf, 0x6d, 0x55, 0x70, 0x61, 0xbf, 0x41, 0x02,
-  0xb1, 0x1d, 0xf8, 0x2a, 0x6b, 0x94, 0xcd, 0x75, 0x99, 0x42, 0xeb, 0xfd,
-  0x75, 0x5a, 0x8b, 0x8d, 0xe9, 0xd4, 0x33, 0x7c, 0x7b, 0x0c, 0xbb, 0xca,
-  0x49, 0x75, 0x5e, 0x60, 0x52, 0xde, 0x85, 0x7a, 0x1c, 0xf7, 0x8d, 0x14,
-  0x07, 0x14, 0x34, 0x43, 0x06, 0x90, 0x03, 0xf6, 0xe2, 0x34, 0x11, 0x0e,
-  0x12, 0xb8, 0xcd, 0x2b, 0x73, 0x3e, 0x12, 0x6d, 0x8f, 0x25, 0x26, 0xa2,
-  0x16, 0x40, 0x82, 0xac, 0x1e, 0x07, 0x4b, 0x99, 0x8d, 0xaf, 0x0b, 0x89,
-  0xa9, 0xa5, 0x45, 0x0b, 0x32, 0x3d, 0xd7, 0x93, 0xff, 0xa9, 0x34, 0xf0,
-  0xbd, 0x4f, 0xda, 0x03, 0x21, 0x0c, 0x04, 0x87, 0x72, 0xe0, 0x09, 0xe2,
-  0xe8, 0xa7, 0x8b, 0xf3, 0x83, 0xe4, 0xbb, 0xa3, 0x83, 0xd7, 0x47, 0xe7,
-  0xc3, 0xd6, 0xa5, 0xaf, 0xe1, 0x1f, 0x22, 0xa1, 0xc1, 0x08, 0xcc, 0xa2,
-  0xb1, 0x01, 0x0f, 0x68, 0xdc, 0xbe, 0x71, 0x3d, 0x22, 0x1e, 0x1c, 0x24,
-  0x3a, 0x1f, 0x50, 0x88, 0xc4, 0x5b, 0xc0, 0xb8, 0xc7, 0x15, 0x33, 0x1b,
-  0xd7, 0xc6, 0x98, 0x38, 0x14, 0x82, 0x18, 0xcc, 0x64, 0x1e, 0x66, 0xcc,
-  0x78, 0xac, 0x3e, 0x7f, 0x99, 0x4c, 0x0a, 0x4b, 0x06, 0x6c, 0xee, 0xdc,
-  0x77, 0x3e, 0xdf, 0x3b, 0x60, 0x5b, 0x7a, 0xc9, 0xa8, 0xd5, 0x70, 0xfd,
-  0xa7, 0x3e, 0xf5, 0xdb, 0xa7, 0xc5, 0xef, 0x03, 0xcc, 0xf1, 0x3e, 0xab,
-  0xd6, 0x5b, 0x26, 0xc0, 0x66, 0xf7, 0xcc, 0xa3, 0xaf, 0xba, 0x27, 0xe9,
-  0xbb, 0x68, 0x4b, 0x38, 0x5d, 0xa8, 0xf3, 0xdc, 0xd1, 0x20, 0xf8, 0x52,
-  0x0d, 0x84, 0x64, 0x3d, 0x41, 0x9d, 0xf4, 0x16, 0x0d, 0x50, 0xf2, 0x6a,
-  0xa6, 0xc6, 0x83, 0xf1, 0x40, 0x74, 0x0a, 0x2c, 0xeb, 0xd0, 0xd9, 0x93,
-  0x4b, 0x7d, 0x2a, 0x10, 0xcd, 0x62, 0x31, 0xa3, 0x61, 0xe9, 0x43, 0xe1,
-  0xfd, 0xc0, 0x0e, 0x10, 0x8d, 0xc1, 0xaf, 0x1a, 0xfe, 0x51, 0x35, 0x86,
-  0x6a, 0x75, 0x3f, 0x6d, 0x0e, 0x63, 0x70, 0x34, 0x6f, 0xa1, 0xfb, 0xe8,
-  0xd2, 0x0a, 0x8b, 0xe8, 0xbb, 0x12, 0x05, 0x06, 0xa5, 0x9e, 0xed, 0x9b,
-  0x52, 0xa5, 0x14, 0xef, 0x98, 0xbc, 0x1a, 0xe4, 0x02, 0x85, 0xc4, 0xcc,
-  0x55, 0xd0, 0x38, 0x7a, 0xdc, 0x3d, 0x97, 0x25, 0xdf, 0x15, 0x15, 0xdf,
-  0x05, 0xdd, 0xc7, 0x71, 0xc9, 0xc7, 0x96, 0x9f, 0xdf, 0x50, 0xff, 0x96,
-  0x03, 0x89, 0x65, 0x50, 0x65, 0x66, 0x5f, 0x67, 0x07, 0x17, 0xdf, 0xb1,
-  0x77, 0x95, 0x49, 0xf8, 0x35, 0x23, 0xa6, 0x98, 0x4f, 0xad, 0x9b, 0x92,
-  0xe5, 0x14, 0x38, 0x91, 0x7f, 0x0d, 0x98, 0xd1, 0xe4, 0x49, 0xf6, 0xde,
-  0xe5, 0x12, 0x88, 0x34, 0x95, 0xaa, 0xb0, 0xcc, 0xa3, 0x1b, 0xb5, 0xf9,
-  0x38, 0xf4, 0xdd, 0xe5, 0xdb, 0xb9, 0x78, 0xcb, 0x0d, 0x49, 0x84, 0xdf,
-  0x90, 0x39, 0x31, 0xd1, 0x43, 0x98, 0x83, 0xc6, 0x13, 0x22, 0x0f, 0xf3,
-  0x17, 0xc8, 0x74, 0x16, 0x07, 0xd4, 0xa4, 0x88, 0xe3, 0x1e, 0x06, 0x47,
-  0xfa, 0xeb, 0xd9, 0xfd, 0xa0, 0x0b, 0xc0, 0x93, 0x7c, 0xb3, 0xac, 0x9b,
-  0x6c, 0xa5, 0x85, 0x7f, 0xec, 0x24, 0xcb, 0xb2, 0x28, 0xea, 0x60, 0x0c,
-  0x2c, 0xfd, 0xa4, 0xb5, 0x9e, 0x68, 0x01, 0xb8, 0x94, 0xb1, 0xa0, 0xa9,
-  0xb9, 0xca, 0xdd, 0xa1, 0x60, 0x98, 0x8e, 0xaa, 0x62, 0xba, 0xac, 0x83,
-  0xe8, 0xeb, 0xdf, 0x36, 0xe6, 0x60, 0xd0, 0x9b, 0xc7, 0x03, 0x03, 0xfb,
-  0x9c, 0x0b, 0x44, 0x1d, 0x69, 0xfa, 0x24, 0x5e, 0xb2, 0xb3, 0xb1, 0x2c,
-  0xe6, 0xcd, 0xf2, 0x71, 0x1c, 0xe8, 0xbd, 0xb5, 0xb6, 0x36, 0xb4, 0xcd,
-  0x06, 0xdc, 0x6b, 0x77, 0xd3, 0x7f, 0x64, 0x69, 0x12, 0x63, 0x10, 0x67,
-  0xc1, 0x98, 0x7e, 0x31, 0x10, 0xb8, 0x4c, 0xf6, 0x94, 0x59, 0xb8, 0xec,
-  0x71, 0x5e, 0x35, 0x27, 0xc5, 0x5f, 0x39, 0x77, 0x85, 0xe5, 0x97, 0x5d,
-  0x14, 0x06, 0xe5, 0xaf, 0xee, 0x3a, 0x4f, 0x10, 0x8d, 0x6c, 0xf8, 0x28,
-  0xc2, 0x34, 0x2e, 0x01, 0xab, 0x35, 0xec, 0xc2, 0x71, 0x31, 0xc8, 0xed,
-  0xff, 0xb5, 0x9d, 0xf4, 0x12, 0x2d, 0x03, 0x1f, 0x01, 0x39, 0xfa, 0xff,
-  0x71, 0xe0, 0x95, 0xc2, 0xfb, 0xa2, 0xcd, 0x41, 0x13, 0x40, 0x76, 0x40,
-  0x2a, 0xd4, 0x75, 0x39, 0xf6, 0xd4, 0x4f, 0xd2, 0x41, 0x76, 0x07, 0xfd,
-  0xc5, 0x74, 0x04, 0x85, 0x0b, 0x91, 0x72, 0xbf, 0x0e, 0x80, 0x89, 0xe1,
-  0x36, 0x2e, 0x9d, 0x55, 0x0f, 0x95, 0x37, 0xa5, 0x0e, 0xa5, 0x88, 0xf5,
-  0x5c, 0x85, 0xc9, 0xdc, 0xa6, 0x92, 0x51, 0xef, 0xf4, 0xf6, 0x2a, 0xa9,
-  0x0a, 0xf9, 0x69, 0x49, 0x47, 0x1a, 0xd8, 0xa5, 0xe4, 0x1f, 0x54, 0xf7,
-  0xd3, 0xb2, 0xb8, 0x9c, 0xda, 0xa4, 0x11, 0xa7, 0x12, 0x4d, 0x67, 0xee,
-  0x48, 0x1b, 0xa4, 0x49, 0x01, 0xf0, 0x56, 0x32, 0xac, 0xa5, 0x22, 0x8f,
-  0x20, 0x92, 0x0c, 0x18, 0xc6, 0x92, 0xb4, 0x8d, 0xba, 0x8d, 0xa6, 0xc9,
-  0xd8, 0x95, 0x6a, 0x69, 0x1c, 0x6e, 0xa7, 0xfc, 0xf0, 0xf5, 0xee, 0xe7,
-  0x24, 0x7c, 0xf6, 0xcc, 0xdd, 0xa5, 0xc0, 0x49, 0xf3, 0x22, 0x81, 0x4d,
-  0x49, 0x6b, 0xbf, 0x4a, 0xf0, 0x46, 0x18, 0x90, 0xe2, 0x23, 0x36, 0xaf,
-  0x90, 0xe5, 0xa1, 0x26, 0x29, 0xc5, 0x32, 0x61, 0xfb, 0xd7, 0x75, 0xae,
-  0x71, 0xa5, 0xb2, 0xea, 0xcd, 0xaa, 0x9a, 0x6c, 0xe1, 0x43, 0x48, 0x81,
-  0xf7, 0xaa, 0xba, 0xc0, 0x87, 0x41, 0xf7, 0xc0, 0x0c, 0x1c, 0xaa, 0xaa,
-  0x5e, 0x22, 0xc7, 0x61, 0x4e, 0xb9, 0x44, 0x61, 0xb8, 0x58, 0xe7, 0x4f,
-  0xec, 0x3d, 0xec, 0x12, 0x41, 0xac, 0xf3, 0x44, 0x12, 0x48, 0x14, 0x2a,
-  0x0e, 0x17, 0xca, 0xde, 0x2e, 0x2b, 0xa6, 0x12, 0xb3, 0xc1, 0x38, 0xa5,
-  0xd6, 0x42, 0xa3, 0x86, 0x5b, 0xb0, 0xf8, 0x5b, 0x3d, 0x5d, 0x25, 0x97,
-  0x71, 0xaf, 0x2e, 0x66, 0x91, 0x0b, 0x03, 0xbf, 0x53, 0xa3, 0x78, 0x9c,
+  0xfe, 0x56, 0x04, 0x25, 0xfe, 0x3f, 0x4f, 0xfc, 0x69, 0x40, 0xfa, 0xbf,
+  0x5d, 0xf0, 0x99, 0xe6, 0xb2, 0xbf, 0x8c, 0xe1, 0x24, 0x0c, 0xb3, 0x29,
+  0x17, 0x26, 0xe1, 0xbd, 0xb6, 0x14, 0xc0, 0x71, 0x79, 0xbf, 0x80, 0xe5,
+  0x4d, 0xde, 0xd3, 0x15, 0xc2, 0x7d, 0x25, 0x89, 0x7e, 0x41, 0xe1, 0x9e,
+  0x41, 0x24, 0x93, 0xd5, 0x75, 0x28, 0x7a, 0x08, 0xdb, 0x5a, 0x89, 0x6e,
+  0x6a, 0xde, 0x35, 0xaf, 0x9b, 0x80, 0x2c, 0x27, 0x92, 0x6e, 0xe4, 0x6b,
+  0xed, 0x75, 0x20, 0x46, 0xd0, 0x50, 0x65, 0xee, 0x7d, 0x0b, 0xe6, 0x82,
+  0xa1, 0x9e, 0xc1, 0x1a, 0x98, 0xe5, 0xc2, 0xcb, 0xb8, 0x65, 0x9c, 0x5e,
+  0xdf, 0x50, 0x84, 0xa8, 0xb6, 0xd6, 0xe0, 0xd8, 0x25, 0x35, 0x53, 0x2e,
+  0xe7, 0xdc, 0x7b, 0x73, 0xa5, 0x1c, 0x7f, 0x6f, 0x9f, 0xb3, 0xf3, 0xe3,
+  0xe1, 0x21, 0x0e, 0xd8, 0xe9, 0xbb, 0x93, 0x3f, 0x43, 0xd0, 0x66, 0xbc,
+  0x1b, 0xae, 0x6b, 0x87, 0xae, 0x63, 0x17, 0x43, 0xd5, 0x0b, 0xb0, 0x12,
+  0x22, 0xbc, 0x43, 0xae, 0xe4, 0xfe, 0x9d, 0x6d, 0xb1, 0xcf, 0xd9, 0x03,
+  0xb9, 0xb0, 0xbf, 0x90, 0x08, 0x2e, 0x87, 0x9e, 0x83, 0x68, 0xbd, 0xb1,
+  0x85, 0x54, 0x2d, 0xbb, 0x68, 0x7e, 0x88, 0x75, 0x09, 0x25, 0x7c, 0x51,
+  0x8f, 0x60, 0x2e, 0xa4, 0xee, 0x69, 0xa2, 0xad, 0xb4, 0x63, 0x9a, 0xe8,
+  0x95, 0xf8, 0xad, 0x57, 0x64, 0xca, 0x04, 0xb9, 0xb5, 0xf7, 0x6a, 0x83,
+  0x44, 0xe0, 0xa0, 0x83, 0x1f, 0x13, 0x8b, 0x34, 0xb0, 0x78, 0x17, 0x74,
+  0xcf, 0x7c, 0x9d, 0x82, 0x17, 0x88, 0xe1, 0x2f, 0xcd, 0x66, 0x9d, 0x0b,
+  0xba, 0x2a, 0xe0, 0x66, 0x35, 0x01, 0x4e, 0xfe, 0x0a, 0x1c, 0x68, 0x6c,
+  0x3e, 0x94, 0x20, 0x4c, 0x2c, 0xe8, 0x84, 0x4e, 0xa0, 0x12, 0x10, 0x48,
+  0x8e, 0x86, 0xd2, 0x0d, 0x2b, 0xb2, 0xa2, 0x5d, 0x83, 0x56, 0x16, 0x5b,
+  0x5f, 0xde, 0x97, 0xa9, 0xb5, 0x93, 0xd8, 0x68, 0xd6, 0xec, 0x70, 0xdf,
+  0xdd, 0xd9, 0x79, 0x34, 0xb3, 0x50, 0xf5, 0xa9, 0x07, 0x13, 0x0c, 0x21,
+  0xe0, 0xcb, 0x36, 0x39, 0x18, 0x91, 0x34, 0x57, 0xd8, 0xa6, 0x56, 0x73,
+  0xe8, 0xd2, 0x25, 0xfa, 0xf9, 0xe0, 0x55, 0x11, 0x93, 0xf9, 0xed, 0x8c,
+  0xd3, 0x0c, 0x89, 0xb1, 0x1e, 0xf1, 0x18, 0xab, 0xfd, 0xc6, 0x3b, 0x51,
+  0xf0, 0x46, 0x0c, 0x08, 0x2f, 0xa9, 0xa1, 0x65, 0x90, 0x7c, 0xe5, 0x21,
+  0xb6, 0xc3, 0x3a, 0x77, 0x3c, 0x2a, 0x66, 0x10, 0x56, 0xa1, 0xea, 0x21,
+  0xab, 0x49, 0x3c, 0x7b, 0xf0, 0xdf, 0x24, 0x28, 0x57, 0x72, 0x4b, 0xeb,
+  0x62, 0x51, 0x71, 0xab, 0x8c, 0x18, 0x1a, 0xe1, 0x83, 0x61, 0x5a, 0x23,
+  0xc0, 0xc5, 0x2e, 0x9b, 0xd5, 0x92, 0xae, 0x61, 0x7e, 0xc9, 0x18, 0x5d,
+  0x42, 0x40, 0x4d, 0x1e, 0x4c, 0x4b, 0x7a, 0xfa, 0x59, 0x2b, 0xc7, 0x8b,
+  0xf8, 0x3c, 0x67, 0xd5, 0x24, 0x2f, 0xf1, 0x6f, 0x9c, 0x76, 0x03, 0x98,
+  0x1f, 0x8e, 0x7d, 0x68, 0x08, 0x80, 0x78, 0x57, 0x03, 0xbf, 0x91, 0x03,
+  0x36, 0x69, 0xdc, 0x53, 0x5d, 0x27, 0x02, 0xc2, 0xfc, 0x49, 0xb2, 0xea,
+  0x25, 0xaf, 0x8f, 0xce, 0xf9, 0x66, 0x39, 0x7a, 0xf7, 0x35, 0xfb, 0x1c,
+  0x83, 0xdb, 0x1a, 0x6d, 0x56, 0x03, 0x05, 0xfc, 0x0b, 0x25, 0xff, 0x56,
+  0x73, 0x90, 0xd0, 0x20, 0xb7, 0xb1, 0x04, 0x3f, 0xf9, 0x4d, 0x13, 0x2c,
+  0x53, 0x51, 0xff, 0x0e, 0x0f, 0xc2, 0xd9, 0x3d, 0xba, 0x5a, 0x71, 0x9d,
+  0xaf, 0xa5, 0xec, 0xe1, 0x29, 0x1a, 0x11, 0x31, 0x87, 0x58, 0x28, 0x00,
+  0xb2, 0xde, 0x06, 0x0d, 0x24, 0x3a, 0x30, 0x63, 0x95, 0x93, 0x7c, 0x15,
+  0xbc, 0xe6, 0xc0, 0xc4, 0x14, 0xb8, 0x5a, 0x7c, 0xd8, 0xac, 0xb6, 0x1a,
+  0xea, 0x9e, 0xd3, 0xd9, 0xa0, 0x25, 0xa9, 0x33, 0xab, 0x85, 0x45, 0xdd,
+  0xf1, 0x8c, 0xc8, 0x3d, 0x6f, 0x47, 0xc4, 0x50, 0xf4, 0x78, 0xc5, 0x7b,
+  0x22, 0x9a, 0x35, 0x96, 0x9e, 0xf6, 0x54, 0x2d, 0x0a, 0xca, 0xa6, 0x3a,
+  0x91, 0x1e, 0x9c, 0xbe, 0xc0, 0xb1, 0x49, 0x41, 0x9b, 0x9d, 0x4d, 0x75,
+  0x48, 0x31, 0x4c, 0x2b, 0xd5, 0x6a, 0x45, 0x42, 0xf2, 0x3e, 0x92, 0x8d,
+  0xc3, 0xf7, 0xe7, 0x27, 0x1f, 0x0e, 0x0f, 0x3e, 0x7c, 0xf5, 0xfe, 0xdd,
+  0xeb, 0x93, 0xa3, 0x8d, 0x36, 0x45, 0x5e, 0x8a, 0x8f, 0x2d, 0x17, 0x10,
+  0x33, 0x2d, 0xc5, 0xdc, 0x82, 0x75, 0x60, 0x7e, 0xcd, 0xf8, 0x9a, 0xfc,
+  0x1b, 0x83, 0xeb, 0xe8, 0x82, 0xb7, 0x8d, 0x5a, 0xcb, 0xf9, 0x84, 0x41,
+  0xfc, 0x82, 0xc9, 0x1b, 0xda, 0x94, 0x32, 0x3a, 0x1b, 0x60, 0x14, 0x6c,
+  0x10, 0x20, 0xa4, 0x30, 0xa0, 0x04, 0xb5, 0x85, 0x82, 0x8a, 0x8b, 0x0d,
+  0xc3, 0x0c, 0xe7, 0x08, 0x59, 0xed, 0xe6, 0x84, 0xc6, 0x13, 0xd9, 0xee,
+  0xca, 0xe7, 0xc2, 0x4e, 0x92, 0x0d, 0xb4, 0x44, 0x94, 0xdc, 0xd7, 0x41,
+  0x8e, 0xcb, 0x7a, 0xa3, 0x67, 0xa2, 0x67, 0x1e, 0xe4, 0x58, 0xb1, 0x94,
+  0xd6, 0x49, 0x3f, 0x43, 0x82, 0x6f, 0x2a, 0x74, 0x3d, 0xc8, 0x3e, 0x66,
+  0x0a, 0xe6, 0xc7, 0x6f, 0x1d, 0xaa, 0x78, 0xf7, 0x7d, 0x51, 0xb2, 0x75,
+  0xfb, 0xb5, 0x17, 0xf3, 0xe4, 0x21, 0xd2, 0xff, 0xbb, 0xb1, 0xb6, 0x60,
+  0xba, 0x29, 0xd7, 0xdf, 0xe2, 0xa2, 0xd5, 0x67, 0x07, 0x17, 0xdf, 0x44,
+  0x5d, 0xe5, 0xbe, 0x50, 0xba, 0x92, 0xa2, 0x13, 0xbe, 0x9d, 0xba, 0x17,
+  0xea, 0xb8, 0x3d, 0xa7, 0xf8, 0x12, 0x59, 0xb7, 0x19, 0x46, 0x57, 0x25,
+  0x0c, 0x54, 0x40, 0xa7, 0x6b, 0x48, 0xfe, 0x93, 0x13, 0x6f, 0x64, 0x8d,
+  0x57, 0x67, 0xf3, 0x5b, 0x95, 0x72, 0xe2, 0x80, 0x0b, 0x54, 0xe3, 0xf8,
+  0x6d, 0x19, 0x11, 0x93, 0x60, 0x8b, 0x11, 0x79, 0xc1, 0xfa, 0x13, 0x2c,
+  0x51, 0x8f, 0x32, 0x25, 0x9f, 0xd0, 0xdd, 0x39, 0xa5, 0xc2, 0xa7, 0x84,
+  0xdf, 0x33, 0x63, 0x72, 0x19, 0x5b, 0x18, 0x96, 0xab, 0x53, 0x16, 0x5c,
+  0x06, 0x40, 0xb3, 0xf3, 0xa9, 0x74, 0x5d, 0x0e, 0x37, 0x53, 0x49, 0x7f,
+  0x7f, 0x3d, 0xd9, 0xcc, 0x06, 0x57, 0xc4, 0xea, 0xd6, 0xd1, 0xd4, 0xee,
+  0x3e, 0xfe, 0xdd, 0xe3, 0x7f, 0x9f, 0xac, 0x5b, 0x89, 0xf8, 0x30, 0xf9,
+  0x17, 0xfc, 0xab, 0x9b, 0xf5, 0xdb, 0xe0, 0x66, 0x12, 0x8f, 0x62, 0xa0,
+  0x02, 0x51, 0x12, 0x52, 0x21, 0xbd, 0x17, 0x13, 0x2b, 0xfd, 0x3a, 0x08,
+  0xb3, 0x54, 0x27, 0x35, 0x5f, 0xb6, 0x34, 0xc1, 0xb1, 0xc0, 0x3e, 0x04,
+  0x49, 0xaa, 0x1f, 0xca, 0x8c, 0x6e, 0xe3, 0xeb, 0x64, 0x59, 0xe7, 0x08,
+  0x5b, 0x89, 0x54, 0xbe, 0x98, 0xba, 0xbc, 0x11, 0xed, 0xd8, 0x61, 0x3f,
+  0xd9, 0xce, 0x8a, 0x9d, 0x98, 0x61, 0x16, 0xf4, 0x91, 0xbe, 0xd6, 0x6c,
+  0x8f, 0x31, 0x42, 0xa6, 0x56, 0x89, 0x1d, 0xc5, 0x93, 0x61, 0x05, 0xd6,
+  0x19, 0x6c, 0xe1, 0x1c, 0x4b, 0x93, 0x5d, 0xd2, 0x9a, 0xe5, 0x01, 0x38,
+  0x49, 0xac, 0x32, 0x8f, 0xbb, 0xe3, 0x54, 0xbe, 0x70, 0x7f, 0x33, 0x07,
+  0x71, 0x7a, 0x39, 0x97, 0x68, 0x6d, 0x5f, 0x36, 0x8f, 0xd3, 0x3b, 0xb3,
+  0x56, 0xc1, 0x04, 0x52, 0x91, 0x4a, 0x66, 0x2b, 0xa9, 0xa5, 0x46, 0xec,
+  0x0a, 0x33, 0x1f, 0xc3, 0xfe, 0xa6, 0x51, 0x89, 0xad, 0xe1, 0x57, 0x9f,
+  0x9c, 0x45, 0x4e, 0x6b, 0x33, 0x59, 0x2c, 0x47, 0x50, 0x99, 0x5f, 0xca,
+  0x5f, 0x09, 0xfd, 0x39, 0xcd, 0xc7, 0xac, 0x45, 0x6f, 0x5e, 0x73, 0x75,
+  0xc4, 0xad, 0x4f, 0xb4, 0xe5, 0x06, 0x70, 0xa5, 0x01, 0x9e, 0x54, 0xd0,
+  0x1e, 0xaf, 0xdb, 0x66, 0x27, 0xca, 0x45, 0x7b, 0xf1, 0x97, 0x7e, 0x70,
+  0x98, 0x9c, 0xa3, 0x80, 0x5d, 0x74, 0xfe, 0xae, 0xd1, 0x8b, 0x3f, 0x86,
+  0x3a, 0xec, 0x36, 0xc6, 0xb9, 0xf4, 0x82, 0x21, 0xe8, 0x61, 0x20, 0xee,
+  0x05, 0x61, 0x2b, 0x00, 0x61, 0xc5, 0x26, 0x36, 0xab, 0x85, 0x7b, 0xe0,
+  0x1e, 0x58, 0xea, 0x9e, 0x3f, 0x75, 0xd1, 0xdb, 0xd5, 0x75, 0xba, 0xf7,
+  0xec, 0xb9, 0x0e, 0xbb, 0x61, 0x15, 0xda, 0x90, 0xaf, 0xb6, 0xb7, 0xa5,
+  0xc6, 0x35, 0x0e, 0x79, 0xfb, 0xd2, 0x10, 0x2f, 0x16, 0x9e, 0xfd, 0xd3,
+  0x46, 0x3c, 0x2f, 0x2d, 0xac, 0x97, 0x81, 0x99, 0x72, 0x55, 0x15, 0x51,
+  0x54, 0x02, 0xd5, 0xa4, 0x17, 0x41, 0x48, 0x59, 0x2d, 0xdd, 0x04, 0xd5,
+  0x6f, 0x59, 0xa4, 0xcf, 0x39, 0xd4, 0xb6, 0xbe, 0x1f, 0x24, 0x07, 0xe1,
+  0xea, 0x48, 0xb5, 0x22, 0x51, 0x06, 0x3b, 0xa7, 0xcb, 0xe2, 0xae, 0xb1,
+  0x21, 0x2d, 0x53, 0x88, 0x90, 0xa2, 0x4b, 0xea, 0xb6, 0xd4, 0x30, 0xc9,
+  0x4a, 0xe0, 0xcd, 0x5c, 0x76, 0x0c, 0x8d, 0xd6, 0xa7, 0xe3, 0x8b, 0x75,
+  0xd1, 0x0c, 0xf4, 0x09, 0x6e, 0xf9, 0x51, 0xa1, 0xf9, 0xba, 0xc1, 0x02,
+  0x74, 0x18, 0x1d, 0x47, 0x0e, 0x61, 0x25, 0x38, 0x91, 0xa4, 0x54, 0xe1,
+  0x5f, 0x40, 0x43, 0xef, 0xe3, 0xf9, 0x04, 0x44, 0x0a, 0xdb, 0xa0, 0x03,
+  0xd5, 0x8c, 0xf7, 0x3b, 0xe1, 0xb8, 0x9f, 0x0d, 0x9e, 0xbc, 0x18, 0xec,
+  0xec, 0x7b, 0x9e, 0x28, 0xb0, 0x45, 0x3c, 0xe9, 0xaf, 0x87, 0xdf, 0xe6,
+  0x75, 0xe4, 0x0d, 0x24, 0x15, 0xed, 0xf3, 0x6d, 0x8b, 0xa7, 0xee, 0x8a,
+  0xe9, 0x25, 0xbd, 0xb9, 0x7d, 0x78, 0x9f, 0x76, 0x35, 0xcd, 0x44, 0xd5,
+  0x8f, 0xfd, 0x84, 0x08, 0x6f, 0x52, 0x4f, 0xab, 0xd8, 0xf7, 0x3c, 0x80,
+  0xb3, 0x62, 0x9a, 0x96, 0x5c, 0x21, 0x45, 0x88, 0xef, 0x81, 0x11, 0x3f,
+  0x7d, 0x1a, 0x19, 0x71, 0x6f, 0xc5, 0x80, 0x06, 0xff, 0xf8, 0x88, 0x4e,
+  0xcd, 0xc1, 0x62, 0xde, 0x48, 0xad, 0x0d, 0x6b, 0x26, 0x97, 0xdf, 0xf4,
+  0xee, 0x87, 0xae, 0x56, 0xd5, 0x69, 0xbd, 0xac, 0x1e, 0xe2, 0x51, 0x76,
+  0xc9, 0x07, 0xec, 0x45, 0x5e, 0x72, 0x1e, 0x6a, 0x45, 0x57, 0x5b, 0xa9,
+  0xa6, 0x35, 0xd2, 0x57, 0x03, 0xcc, 0x8e, 0x64, 0x28, 0xed, 0x18, 0xb8,
+  0xd2, 0x66, 0x7a, 0x93, 0x0e, 0x92, 0xd3, 0xc3, 0xe1, 0x19, 0x7a, 0x58,
+  0x20, 0xea, 0x6a, 0x0b, 0x27, 0xb8, 0x83, 0xa3, 0x62, 0x75, 0xac, 0x56,
+  0x06, 0x02, 0xfb, 0xd5, 0x09, 0x01, 0x91, 0x63, 0xb0, 0x48, 0xf9, 0x5c,
+  0x40, 0xc4, 0x58, 0x58, 0xe8, 0x74, 0xb4, 0xa0, 0x2b, 0x7b, 0xb2, 0xe5,
+  0x94, 0xe3, 0x5e, 0x47, 0x5b, 0xae, 0x96, 0x57, 0x57, 0x1c, 0x47, 0xe1,
+  0xa2, 0x2b, 0xfc, 0x6a, 0x74, 0x44, 0x5e, 0x9b, 0x36, 0xeb, 0xd8, 0x72,
+  0xef, 0x1b, 0x96, 0x08, 0xb3, 0xd1, 0x79, 0xe1, 0x1b, 0x4e, 0x39, 0x26,
+  0x1f, 0x33, 0x30, 0x3d, 0x3c, 0x82, 0x4c, 0x2d, 0x7b, 0x62, 0x70, 0xb1,
+  0xc0, 0x86, 0x5c, 0xe1, 0x66, 0xcf, 0x2b, 0xb3, 0x99, 0x5a, 0x3d, 0x52,
+  0x2e, 0xb4, 0x09, 0x0d, 0xc7, 0x67, 0x0d, 0x05, 0xc2, 0x8b, 0x9e, 0xd4,
+  0x48, 0xb5, 0x06, 0x9c, 0x04, 0x23, 0xd5, 0x96, 0x5b, 0xfc, 0xe9, 0x6e,
+  0xd3, 0x16, 0x70, 0x99, 0x4e, 0xab, 0xac, 0xcf, 0x69, 0xa8, 0x6b, 0x9f,
+  0xee, 0xd0, 0xe4, 0xb7, 0x34, 0x79, 0x55, 0x8b, 0x78, 0x45, 0xaa, 0xdd,
+  0xb5, 0x30, 0xfe, 0x82, 0x77, 0x38, 0xbf, 0x99, 0xa3, 0xea, 0x18, 0x84,
+  0xcf, 0x5d, 0x02, 0xea, 0x49, 0x53, 0xb3, 0x8b, 0x26, 0xc7, 0x2a, 0xc7,
+  0x5b, 0x0d, 0x01, 0x22, 0x89, 0x2d, 0xca, 0x1f, 0xe5, 0x04, 0xd8, 0x88,
+  0x64, 0xa3, 0x37, 0xaa, 0xe4, 0x4d, 0x3e, 0xcf, 0xe9, 0x36, 0x93, 0xc2,
+  0xd8, 0xe9, 0x55, 0xd6, 0xdd, 0x28, 0xa2, 0xf1, 0x4a, 0xcc, 0x7d, 0xa9,
+  0x94, 0xe9, 0x48, 0x90, 0x94, 0x2f, 0x06, 0x26, 0xcd, 0x55, 0x54, 0x57,
+  0xec, 0x92, 0x63, 0x17, 0x57, 0x15, 0xf5, 0xfb, 0xf4, 0xbd, 0x34, 0x86,
+  0xf5, 0xa8, 0x3f, 0x01, 0x66, 0x5a, 0x84, 0xf4, 0x9d, 0x0e, 0xc1, 0x9d,
+  0x76, 0xc4, 0xb8, 0x8f, 0x70, 0xfb, 0x92, 0x49, 0x92, 0x9d, 0x16, 0xbb,
+  0x3b, 0x83, 0x17, 0xf8, 0x83, 0x3f, 0xde, 0xf2, 0xdb, 0xff, 0x90, 0x5d,
+  0x68, 0xaf, 0x41, 0x0b, 0x97, 0x1c, 0xcf, 0x48, 0xf4, 0x19, 0xb7, 0xe4,
+  0xbd, 0x01, 0xaa, 0x69, 0x85, 0xdc, 0x26, 0xcc, 0x69, 0x13, 0x35, 0x6e,
+  0xa5, 0x66, 0xb7, 0x9c, 0x82, 0x2d, 0xb8, 0x62, 0xad, 0x20, 0x23, 0xe3,
+  0x91, 0x59, 0x35, 0xd5, 0x48, 0x6d, 0x39, 0x2d, 0xba, 0xcb, 0x48, 0x0c,
+  0xec, 0xe7, 0xe1, 0x28, 0x6f, 0x0d, 0x4e, 0x45, 0x56, 0x2e, 0xec, 0x67,
+  0x59, 0x3d, 0x0e, 0xbe, 0x9c, 0x64, 0xe9, 0x34, 0x96, 0x5e, 0x8a, 0x01,
+  0x83, 0x75, 0x48, 0xac, 0x2d, 0xf5, 0x79, 0x3c, 0xd7, 0xe0, 0x5c, 0x4d,
+  0x0e, 0x14, 0x9c, 0x1b, 0x85, 0x05, 0x70, 0x23, 0xbc, 0x14, 0x34, 0xc1,
+  0x8e, 0xb2, 0x03, 0xdf, 0xd5, 0xad, 0x00, 0x15, 0x3b, 0x6c, 0x37, 0x0d,
+  0xc9, 0xb5, 0x5c, 0x67, 0x4e, 0x7d, 0x62, 0x48, 0x1c, 0x7b, 0x80, 0x79,
+  0x2d, 0x27, 0x72, 0xb6, 0x9b, 0xd3, 0x10, 0xcb, 0xe2, 0x12, 0x50, 0xb2,
+  0x6c, 0x65, 0xb5, 0xac, 0x63, 0x0c, 0x4c, 0x5c, 0xc8, 0x90, 0xd7, 0xb7,
+  0x54, 0x10, 0xe4, 0x58, 0x10, 0x25, 0x7f, 0x92, 0xbb, 0xfa, 0x1d, 0x55,
+  0xcc, 0x00, 0x36, 0x58, 0x56, 0x91, 0x0d, 0xa8, 0x1d, 0xb0, 0xba, 0x14,
+  0x71, 0xc7, 0x28, 0x15, 0x6c, 0x76, 0x6f, 0x6f, 0x45, 0x80, 0x97, 0xa2,
+  0x56, 0xab, 0x1f, 0x0f, 0x8b, 0xd1, 0xaf, 0xd2, 0x4b, 0x57, 0x44, 0xa5,
+  0x14, 0x44, 0xd6, 0x62, 0x4c, 0x4b, 0x28, 0x79, 0xbd, 0xfc, 0xd9, 0xbc,
+  0x0b, 0xd1, 0x56, 0x2d, 0xc7, 0xd0, 0x89, 0x60, 0x3e, 0x77, 0x6c, 0x11,
+  0x42, 0xa4, 0xe5, 0xb8, 0x55, 0x53, 0x3a, 0x43, 0x16, 0xbe, 0x8a, 0xa4,
+  0x72, 0x85, 0xa8, 0x80, 0x31, 0x23, 0x12, 0x81, 0xdd, 0x02, 0xd7, 0x66,
+  0xdb, 0xe1, 0x2d, 0x22, 0x89, 0x88, 0xf9, 0xb7, 0xda, 0x7f, 0xba, 0xb3,
+  0xcb, 0xc3, 0x7d, 0xba, 0xf3, 0x59, 0x58, 0x7b, 0xca, 0x41, 0xfd, 0x68,
+  0x7d, 0x15, 0x4d, 0x2b, 0x7b, 0x30, 0x77, 0x1b, 0xd9, 0xf6, 0x95, 0x59,
+  0x91, 0x97, 0x53, 0x16, 0xfa, 0x14, 0x01, 0xa9, 0x9f, 0xcf, 0x05, 0x00,
+  0x87, 0x7e, 0xca, 0x5e, 0x0a, 0x64, 0x52, 0x57, 0xc2, 0x4f, 0x0c, 0x13,
+  0x70, 0x15, 0x2e, 0x92, 0xc2, 0xb3, 0x07, 0xea, 0x04, 0xa3, 0x3b, 0x31,
+  0xf7, 0xea, 0xd8, 0xd9, 0x3c, 0x42, 0xf4, 0xa1, 0xc2, 0x20, 0x5d, 0xc0,
+  0xe8, 0xaa, 0xc6, 0x3f, 0xe2, 0x8b, 0xdb, 0x8c, 0x78, 0x24, 0x09, 0x83,
+  0xe9, 0x18, 0x20, 0xca, 0xf2, 0x4a, 0x81, 0x7a, 0x6f, 0xad, 0xe6, 0xf6,
+  0x9e, 0x7c, 0xfe, 0xb9, 0x0e, 0x22, 0xd3, 0x04, 0x28, 0x5f, 0xc7, 0x06,
+  0xe2, 0xbf, 0x80, 0x23, 0x88, 0xe3, 0x9b, 0x8e, 0x1d, 0x63, 0x0e, 0x69,
+  0x6c, 0x7e, 0x44, 0x47, 0xde, 0xd0, 0x35, 0xdd, 0xb0, 0x8c, 0x40, 0x67,
+  0x3e, 0x11, 0xad, 0xa5, 0x67, 0x35, 0xb8, 0x5d, 0x89, 0x0f, 0xc5, 0xd7,
+  0x95, 0x8a, 0x94, 0x5f, 0x76, 0x72, 0x4c, 0xae, 0xe6, 0xdc, 0xe3, 0x5f,
+  0xa0, 0x70, 0x5f, 0x65, 0x75, 0x37, 0x89, 0x55, 0x81, 0xbe, 0x3b, 0x8d,
+  0xaf, 0xc4, 0xf2, 0x0d, 0xea, 0x93, 0x68, 0x16, 0xee, 0x4b, 0x31, 0x27,
+  0x18, 0x68, 0x67, 0x50, 0xbd, 0xfd, 0x4b, 0x26, 0xa3, 0x97, 0x1a, 0xe1,
+  0x11, 0x05, 0x82, 0xff, 0x52, 0x21, 0xab, 0xd5, 0xc7, 0xc9, 0x58, 0xca,
+  0x75, 0x9d, 0x8e, 0xaf, 0x3d, 0x33, 0x67, 0x40, 0x1f, 0xb6, 0x17, 0x5a,
+  0x69, 0x0b, 0xa9, 0x08, 0xd7, 0x09, 0xeb, 0xc9, 0x5d, 0xd5, 0xcf, 0x97,
+  0x86, 0x84, 0x4d, 0x2f, 0x31, 0x2e, 0xbf, 0x14, 0x24, 0xc3, 0x68, 0x62,
+  0x4b, 0x51, 0x85, 0x45, 0xe9, 0x1b, 0x19, 0x91, 0xfe, 0xdd, 0x60, 0xa1,
+  0x22, 0x25, 0x41, 0xb8, 0xe4, 0xdd, 0xbe, 0x8b, 0x36, 0x87, 0x64, 0x35,
+  0x03, 0x8a, 0x83, 0x20, 0x87, 0x2b, 0x80, 0x98, 0x1c, 0xf5, 0x64, 0x83,
+  0xd4, 0x16, 0x34, 0xb3, 0x91, 0xac, 0x88, 0xc5, 0x0c, 0xa3, 0x43, 0x98,
+  0x16, 0x65, 0x04, 0x0e, 0x27, 0x1e, 0x17, 0x57, 0x99, 0xe6, 0xf5, 0xe0,
+  0x2f, 0x8b, 0x2b, 0x27, 0xde, 0xe2, 0x61, 0x06, 0xca, 0xdd, 0x8f, 0xda,
+  0x78, 0xfb, 0x6f, 0x12, 0xed, 0xf6, 0xd5, 0x97, 0x8d, 0xf7, 0x0d, 0xb5,
+  0x54, 0xcb, 0xf6, 0x0d, 0xc6, 0xc5, 0x6c, 0x5b, 0xb1, 0xef, 0xc6, 0x57,
+  0x79, 0x04, 0x96, 0x4f, 0x2b, 0xca, 0x08, 0x0d, 0x79, 0xb8, 0xa1, 0x30,
+  0x70, 0xd3, 0xe8, 0x89, 0x83, 0xf9, 0x25, 0x37, 0x3d, 0x5b, 0x59, 0x34,
+  0x48, 0x8f, 0xcf, 0x15, 0x34, 0x40, 0x98, 0x06, 0xb9, 0xf6, 0x86, 0x51,
+  0x0e, 0x23, 0xa7, 0xd4, 0xe5, 0x72, 0x8c, 0xfb, 0x27, 0x79, 0x0f, 0x37,
+  0x62, 0xbd, 0x44, 0xec, 0x0f, 0x57, 0x03, 0xab, 0x23, 0xf0, 0x1a, 0x49,
+  0xa8, 0x41, 0xf0, 0x60, 0x4d, 0x62, 0xf1, 0x4e, 0xf4, 0x54, 0x6d, 0xb8,
+  0x8b, 0x7c, 0x81, 0xdc, 0x2b, 0xc3, 0x5f, 0xe8, 0x75, 0xd3, 0x24, 0x7c,
+  0xcc, 0x04, 0x1a, 0x80, 0x78, 0x52, 0xe5, 0x7f, 0x33, 0xe4, 0xe6, 0x06,
+  0x8a, 0xb1, 0xc8, 0x54, 0x5d, 0x01, 0xd4, 0x2a, 0x99, 0x4a, 0xa1, 0x0a,
+  0x0e, 0x05, 0x32, 0x0f, 0x18, 0x3b, 0x8c, 0x9b, 0x4c, 0xc8, 0x99, 0x42,
+  0x5c, 0xd9, 0x8a, 0x36, 0x87, 0xe0, 0x6a, 0x15, 0x1b, 0x3d, 0x49, 0xe2,
+  0x52, 0xd8, 0x11, 0x8f, 0x1f, 0xb1, 0x72, 0xf3, 0xd7, 0xef, 0xb2, 0xd1,
+  0xab, 0x2f, 0x11, 0xfb, 0xf4, 0x91, 0x71, 0x65, 0xa5, 0xea, 0x05, 0xe8,
+  0x7b, 0x1b, 0x7f, 0xae, 0x27, 0xc1, 0xfe, 0xb7, 0xdb, 0xa0, 0xb3, 0xb1,
+  0xaa, 0xd5, 0x00, 0x3e, 0x2b, 0x68, 0xf1, 0xb2, 0x28, 0x1e, 0x6c, 0xf0,
+  0xcf, 0xae, 0x64, 0x1a, 0xaf, 0x4a, 0x90, 0x45, 0x23, 0xb9, 0x25, 0x3e,
+  0x6e, 0x43, 0x28, 0xdf, 0x91, 0x94, 0x1e, 0xfd, 0x18, 0x34, 0xc4, 0xe8,
+  0xde, 0x15, 0x73, 0xb3, 0x34, 0xf1, 0x57, 0x3d, 0x46, 0x8f, 0x62, 0x9d,
+  0x68, 0xf5, 0xc2, 0xc8, 0x99, 0x60, 0xf0, 0x4d, 0xfc, 0xfa, 0x27, 0xf7,
+  0x36, 0xfe, 0xa1, 0x13, 0x45, 0xdc, 0xe7, 0xc1, 0xc9, 0x90, 0xd6, 0x65,
+  0xaf, 0x6c, 0x8b, 0xcd, 0xd1, 0x8c, 0x48, 0x1b, 0xbd, 0x0d, 0x50, 0xd7,
+  0xc6, 0x9f, 0x36, 0x38, 0xf8, 0xc6, 0x5c, 0x44, 0x5c, 0x93, 0x70, 0x22,
+  0x05, 0x9d, 0x8b, 0x4e, 0x6c, 0x39, 0x72, 0x80, 0xf8, 0x89, 0x8a, 0x07,
+  0x1f, 0x1f, 0x37, 0x6e, 0x63, 0xfa, 0x47, 0xc7, 0xfe, 0xd3, 0xba, 0x1b,
+  0xfd, 0x4f, 0xeb, 0x7e, 0xfc, 0x3f, 0xad, 0xfb, 0x19, 0xfc, 0xb4, 0xbe,
+  0x9e, 0xf0, 0x24, 0x3a, 0x42, 0xf0, 0x2f, 0xdd, 0xf2, 0x0d, 0xe9, 0xd3,
+  0x77, 0x19, 0xf4, 0x18, 0x74, 0xb8, 0xbe, 0xf1, 0xd0, 0x9a, 0xf9, 0xe0,
+  0xc1, 0xdc, 0xb6, 0xd6, 0xaf, 0x1f, 0x98, 0xa2, 0xae, 0x91, 0x2d, 0x92,
+  0x5f, 0x14, 0x76, 0x29, 0x75, 0xe2, 0xd8, 0x82, 0x27, 0xb0, 0xe2, 0x10,
+  0xd1, 0xab, 0x29, 0x6c, 0xc7, 0x01, 0xc2, 0xad, 0x75, 0xe2, 0xf6, 0xc1,
+  0x02, 0xa0, 0x3a, 0x61, 0x71, 0xee, 0xf5, 0x28, 0x2e, 0xed, 0xe5, 0xb2,
+  0x64, 0xab, 0x85, 0x4e, 0x4f, 0x60, 0x7b, 0x0c, 0x44, 0x5b, 0xfb, 0x7a,
+  0x7b, 0xf0, 0xee, 0xfd, 0xc1, 0xc9, 0x83, 0x31, 0xdf, 0x61, 0x26, 0x99,
+  0xf3, 0x3b, 0xb2, 0xfd, 0x22, 0x34, 0x52, 0x20, 0x09, 0x0a, 0x32, 0xc8,
+  0x92, 0x78, 0xed, 0x8f, 0x10, 0x49, 0x7e, 0x8e, 0xe6, 0xe9, 0x7d, 0xaf,
+  0x92, 0xf8, 0x9b, 0xb0, 0x80, 0xdd, 0x8d, 0xf0, 0xd3, 0x75, 0x7b, 0x1f,
+  0xaf, 0xaf, 0x6b, 0xf8, 0x05, 0xc7, 0x34, 0x45, 0xa0, 0x14, 0x1a, 0x99,
+  0xcb, 0xde, 0x19, 0x6e, 0x86, 0x36, 0x4d, 0x35, 0x33, 0xe0, 0x36, 0xa9,
+  0x8c, 0x74, 0x79, 0xe9, 0xed, 0x1b, 0xad, 0xe6, 0x0e, 0x0e, 0x0f, 0x7d,
+  0xda, 0x68, 0x13, 0x80, 0xa6, 0x11, 0x44, 0xfe, 0xcf, 0xb7, 0xee, 0xf0,
+  0xc2, 0xc1, 0x09, 0x8a, 0xbc, 0xee, 0xdb, 0xac, 0x5f, 0x17, 0x92, 0xb6,
+  0xfd, 0x52, 0x47, 0xf3, 0x45, 0x74, 0x1d, 0x01, 0xa5, 0x18, 0xc8, 0xc9,
+  0x56, 0x75, 0x98, 0x2b, 0xa7, 0x0e, 0xd5, 0xc3, 0x7e, 0x76, 0x00, 0x17,
+  0x99, 0xa5, 0x30, 0xab, 0xbe, 0xd3, 0x49, 0x38, 0xd1, 0x58, 0x7c, 0xae,
+  0x53, 0x64, 0xf3, 0x37, 0x2b, 0xad, 0x19, 0x22, 0x55, 0xaa, 0x4c, 0x2e,
+  0x96, 0x33, 0x22, 0x5f, 0x92, 0x98, 0x26, 0xa4, 0x4e, 0x3f, 0x1c, 0x14,
+  0x6c, 0xbb, 0x0b, 0x2f, 0xa8, 0x04, 0x2a, 0x5b, 0x4c, 0xb0, 0x57, 0xf1,
+  0x03, 0x4b, 0x54, 0x2f, 0x7e, 0x89, 0xac, 0x0f, 0x8f, 0x2f, 0x8e, 0x68,
+  0x77, 0xde, 0x5f, 0x7c, 0xb3, 0xae, 0x3a, 0x51, 0x1b, 0x95, 0x81, 0xe1,
+  0xf8, 0x48, 0x4d, 0xa7, 0xa5, 0xb7, 0x84, 0xcf, 0x52, 0x38, 0x72, 0xb7,
+  0xc4, 0x4b, 0x2b, 0x8a, 0xb5, 0xb5, 0xd1, 0xcf, 0x06, 0xcf, 0xb6, 0x5a,
+  0x1b, 0xb3, 0x1a, 0x60, 0xb9, 0x5d, 0x07, 0x58, 0x69, 0x5a, 0x01, 0x7e,
+  0x11, 0x2d, 0xbf, 0xed, 0xab, 0x82, 0x88, 0xd0, 0x9f, 0xba, 0xd8, 0xbb,
+  0x2e, 0x84, 0x8c, 0x2b, 0xdc, 0xeb, 0x4d, 0x06, 0x0c, 0x43, 0xec, 0x40,
+  0x30, 0x55, 0x32, 0x53, 0xab, 0xde, 0x7c, 0x92, 0x96, 0x13, 0x97, 0xcb,
+  0xd8, 0xc5, 0x58, 0x30, 0x27, 0x3e, 0xaa, 0x0e, 0xa0, 0xfa, 0x64, 0x58,
+  0x77, 0xb0, 0x6b, 0x7a, 0x36, 0x81, 0xc8, 0x27, 0xab, 0x46, 0x41, 0x89,
+  0x93, 0x59, 0x2e, 0xa8, 0x66, 0x01, 0xc0, 0x71, 0x9b, 0x92, 0x55, 0xa9,
+  0xfc, 0x51, 0x7e, 0xc6, 0x79, 0x00, 0x4b, 0x12, 0x28, 0x75, 0xce, 0x72,
+  0x85, 0xbe, 0x21, 0x41, 0x31, 0x92, 0x0b, 0xe3, 0xeb, 0x32, 0xb2, 0xae,
+  0x25, 0x71, 0x48, 0x58, 0xe2, 0x6e, 0xc9, 0x88, 0xcd, 0xe1, 0x96, 0xab,
+  0xa7, 0x0d, 0xd9, 0x5e, 0x5b, 0x43, 0x2e, 0x54, 0x2b, 0xf7, 0x29, 0xc0,
+  0x0d, 0x52, 0xd8, 0xa5, 0x18, 0x96, 0x64, 0x70, 0x12, 0xbb, 0x37, 0x31,
+  0x73, 0xbf, 0xf1, 0xdd, 0x24, 0x0e, 0x68, 0x21, 0xf7, 0x9d, 0x48, 0x76,
+  0xa9, 0x2b, 0xec, 0x7b, 0xf8, 0xfd, 0xeb, 0xa0, 0x3c, 0x0c, 0x97, 0x9d,
+  0xc6, 0xac, 0x98, 0x10, 0x04, 0x5a, 0x67, 0xbe, 0x0a, 0xe8, 0xc4, 0xc2,
+  0x10, 0x88, 0x96, 0xa4, 0xa8, 0xd8, 0x24, 0xcb, 0x16, 0x0e, 0x6c, 0x5b,
+  0x4a, 0xb0, 0xa0, 0xd2, 0x74, 0x46, 0x47, 0x0e, 0x36, 0xaf, 0x7b, 0x46,
+  0x77, 0xbb, 0x5f, 0x31, 0x3a, 0x65, 0x03, 0x8d, 0x32, 0x5b, 0x28, 0x7c,
+  0x81, 0xd2, 0xe0, 0xbb, 0x9f, 0x3d, 0xf9, 0x3c, 0xa9, 0x90, 0xc3, 0x9c,
+  0x87, 0x4b, 0x26, 0xd8, 0x6c, 0xab, 0x21, 0x6c, 0x34, 0x1e, 0xde, 0x7c,
+  0x7b, 0x23, 0xc3, 0x35, 0x03, 0x36, 0x0a, 0xdf, 0x5c, 0x9a, 0x6a, 0xdb,
+  0x45, 0x34, 0xa1, 0x45, 0xd4, 0x05, 0x53, 0x7f, 0x0a, 0xaf, 0x93, 0x58,
+  0x91, 0x06, 0x01, 0x65, 0xa2, 0x44, 0x2c, 0xaa, 0x80, 0x10, 0x7b, 0x38,
+  0x3f, 0xba, 0x38, 0xa7, 0x1f, 0xc3, 0x8b, 0xd3, 0xf3, 0x15, 0xb8, 0x43,
+  0xf5, 0x98, 0xd9, 0x1e, 0x16, 0xcd, 0x4c, 0x74, 0xe6, 0x4b, 0x0b, 0xf8,
+  0x05, 0x47, 0x96, 0x09, 0x0b, 0x61, 0x3b, 0xc2, 0xac, 0xbf, 0x0a, 0x6d,
+  0x8a, 0x57, 0x2b, 0x9c, 0xe8, 0x25, 0xf1, 0xf2, 0x07, 0x27, 0x26, 0x7b,
+  0xfe, 0x30, 0x85, 0xf0, 0x84, 0x41, 0x8c, 0x98, 0xb1, 0x63, 0xda, 0x3c,
+  0x5a, 0x2d, 0x06, 0xee, 0xfd, 0xcf, 0x2b, 0xea, 0xd9, 0xba, 0x30, 0x04,
+  0xc6, 0x92, 0xad, 0x04, 0x69, 0xc1, 0x57, 0x82, 0x22, 0x61, 0x57, 0x83,
+  0x79, 0xd6, 0x11, 0xea, 0x70, 0xe3, 0x2a, 0x78, 0x3c, 0x42, 0xbf, 0x69,
+  0xe5, 0x6c, 0x50, 0xb8, 0x32, 0x8b, 0x59, 0x26, 0x82, 0x3f, 0x3b, 0x93,
+  0x1d, 0xd7, 0x91, 0x7b, 0x42, 0x50, 0xd7, 0x92, 0x18, 0x22, 0x83, 0x03,
+  0xac, 0xc5, 0x2e, 0x6f, 0x74, 0x50, 0xef, 0x64, 0x5f, 0x48, 0xc0, 0x99,
+  0xd6, 0x0c, 0x05, 0xbc, 0x61, 0xa3, 0xda, 0x78, 0x18, 0x57, 0xfb, 0xd9,
+  0x60, 0xb7, 0xcd, 0x9d, 0x81, 0x12, 0x10, 0xe7, 0x30, 0x5c, 0x0b, 0xc6,
+  0x52, 0xbe, 0x5d, 0xa9, 0x3b, 0x07, 0xb1, 0x18, 0x96, 0x32, 0x39, 0xd3,
+  0xa7, 0xa2, 0xd9, 0x65, 0x9c, 0xd4, 0x8c, 0xa4, 0x14, 0x47, 0xe3, 0xba,
+  0xf5, 0x92, 0xb8, 0xbf, 0x6c, 0x73, 0xd5, 0x86, 0xb0, 0xd4, 0xe5, 0xa3,
+  0x91, 0x02, 0x74, 0x49, 0xff, 0x6c, 0x3b, 0x00, 0x47, 0x50, 0x38, 0xe6,
+  0xc6, 0xcc, 0x77, 0xe3, 0x02, 0xc8, 0x3f, 0x1d, 0x4a, 0x85, 0xb4, 0x56,
+  0xc5, 0x34, 0x99, 0xfb, 0xb2, 0x84, 0xb6, 0x88, 0x80, 0xeb, 0x81, 0x09,
+  0x5b, 0x6e, 0xa9, 0x49, 0x21, 0x11, 0x32, 0x58, 0x84, 0x48, 0x4c, 0x38,
+  0x0b, 0xae, 0x1c, 0xfe, 0x6e, 0x57, 0x8b, 0xb6, 0xa7, 0xb6, 0x8c, 0x12,
+  0x04, 0xde, 0x06, 0x86, 0xe0, 0xd8, 0x8c, 0xae, 0xf7, 0x32, 0xdc, 0x44,
+  0x61, 0x75, 0x2c, 0x8e, 0x7b, 0x1e, 0x51, 0x0b, 0x24, 0x80, 0xe4, 0xfd,
+  0x1b, 0xb4, 0x83, 0xcc, 0xb5, 0xeb, 0x16, 0x91, 0x0c, 0x0f, 0x46, 0x5e,
+  0xd0, 0x12, 0x81, 0x4d, 0x40, 0x03, 0x13, 0xe5, 0xda, 0xf7, 0x1a, 0x6a,
+  0x27, 0x31, 0xbd, 0xf5, 0xf3, 0xc5, 0xe3, 0x00, 0x14, 0x06, 0x7d, 0x81,
+  0x61, 0xf9, 0xcc, 0xca, 0x86, 0x5f, 0xcb, 0xfc, 0x51, 0x79, 0x17, 0x33,
+  0xaa, 0x0a, 0x82, 0x5b, 0x15, 0x39, 0x90, 0xc4, 0x2d, 0x0c, 0xda, 0x4d,
+  0xcf, 0x87, 0xbc, 0x2a, 0x29, 0x7b, 0x2c, 0xf5, 0x95, 0x71, 0xbe, 0x30,
+  0x8b, 0xcb, 0x66, 0x84, 0xe5, 0x43, 0xfa, 0x41, 0x3c, 0x03, 0x5b, 0xcd,
+  0x68, 0xbc, 0xbe, 0xdc, 0x67, 0xc7, 0x70, 0xa1, 0x90, 0x5a, 0x22, 0xd1,
+  0xd8, 0x99, 0x1a, 0xeb, 0x7d, 0x1e, 0xf6, 0xd5, 0xa0, 0xe0, 0xa7, 0x83,
+  0xbd, 0xad, 0x07, 0xb3, 0x8c, 0x21, 0xbf, 0x3b, 0x9c, 0x13, 0xa8, 0x5a,
+  0x02, 0x73, 0x23, 0x70, 0x25, 0xa5, 0xc3, 0x80, 0x08, 0xf3, 0x6e, 0xbb,
+  0x11, 0x0c, 0x58, 0xa1, 0xf6, 0xbe, 0x01, 0x46, 0xf3, 0xf1, 0xfd, 0x12,
+  0x53, 0x58, 0x72, 0x46, 0x77, 0x8c, 0x5b, 0xe2, 0x00, 0xa5, 0x83, 0xde,
+  0x61, 0x75, 0x03, 0xc3, 0xd8, 0x6a, 0x5f, 0x88, 0xf0, 0x93, 0x72, 0xb9,
+  0xd3, 0x37, 0xde, 0xb7, 0x00, 0xe5, 0x0f, 0x85, 0xcd, 0xe0, 0xdf, 0x28,
+  0x69, 0x18, 0x0c, 0x7e, 0x26, 0x85, 0xcb, 0xf9, 0xd0, 0xc2, 0x88, 0x6e,
+  0xfc, 0x74, 0x2d, 0x7a, 0x4f, 0xf3, 0xda, 0xfa, 0x8b, 0x00, 0x01, 0xff,
+  0x74, 0x32, 0xab, 0xb0, 0xb0, 0x21, 0xea, 0x27, 0xf1, 0xb0, 0x26, 0xc5,
+  0xdd, 0x9c, 0xcb, 0x6a, 0x25, 0x5d, 0x6a, 0xe2, 0xe1, 0xe3, 0xec, 0xb4,
+  0x7c, 0x80, 0x7b, 0x3b, 0x83, 0x8f, 0x6d, 0x76, 0x5a, 0x55, 0xd3, 0xfe,
+  0x78, 0x3c, 0x7e, 0x80, 0xa3, 0x1e, 0x1e, 0x1e, 0xd2, 0x07, 0x87, 0x8c,
+  0x4e, 0x05, 0x70, 0x7d, 0x1e, 0xe9, 0xe1, 0x35, 0x6c, 0x3b, 0xd3, 0xad,
+  0x64, 0x78, 0xbd, 0x44, 0xc8, 0x33, 0x8d, 0x46, 0xaa, 0xc0, 0x0d, 0x4f,
+  0xb6, 0xbb, 0x4e, 0x61, 0x14, 0xb1, 0x2b, 0x55, 0xb7, 0x6b, 0x6a, 0x30,
+  0x22, 0xc0, 0x31, 0xcc, 0xad, 0x25, 0x9c, 0x19, 0x5d, 0x49, 0x0f, 0xd1,
+  0x8c, 0xe8, 0xe5, 0x3c, 0xa8, 0x32, 0xaa, 0x1a, 0xd6, 0x3c, 0x9b, 0x73,
+  0xf2, 0x05, 0x78, 0x1a, 0x93, 0x19, 0x07, 0x56, 0x55, 0xc9, 0xbb, 0x83,
+  0x0b, 0xb8, 0xf5, 0x6a, 0x4d, 0xe4, 0x8e, 0x67, 0xb1, 0x3a, 0x90, 0x64,
+  0xb6, 0x97, 0xa5, 0x41, 0xc1, 0x2b, 0xbb, 0x03, 0x98, 0x15, 0xe5, 0x95,
+  0xb1, 0x46, 0x45, 0x63, 0x8d, 0x15, 0xf3, 0xd0, 0x15, 0xed, 0xbb, 0x1b,
+  0x48, 0x72, 0x21, 0xf1, 0x67, 0xdb, 0x29, 0xbb, 0xfb, 0xbc, 0x7b, 0xbf,
+  0x35, 0x5e, 0xff, 0x51, 0x80, 0x48, 0xb6, 0xb5, 0xd7, 0x9f, 0x7f, 0xfd,
+  0x36, 0x65, 0xca, 0x2d, 0xf0, 0x98, 0x90, 0xc6, 0x45, 0x24, 0x49, 0x28,
+  0x60, 0xbb, 0xae, 0x04, 0x9b, 0x24, 0xdf, 0x2a, 0xe2, 0x77, 0x45, 0xdb,
+  0x3d, 0xe1, 0x72, 0x98, 0x72, 0x0d, 0xb8, 0xca, 0x03, 0x08, 0x6a, 0xef,
+  0x62, 0xfc, 0xb4, 0x61, 0xdb, 0x0a, 0x62, 0x2e, 0x12, 0xa8, 0xe7, 0x9a,
+  0x2f, 0xb3, 0x85, 0x00, 0xe6, 0x86, 0xcd, 0xaf, 0xd2, 0xe3, 0x42, 0xa9,
+  0x3f, 0xc4, 0x68, 0xb1, 0x31, 0x56, 0xcd, 0x56, 0xb8, 0xa3, 0x34, 0x8f,
+  0x5a, 0xd0, 0x53, 0xed, 0xd9, 0xe5, 0x2d, 0x59, 0xdb, 0xed, 0x1d, 0xda,
+  0x8b, 0xee, 0x90, 0x50, 0x69, 0x7c, 0x3f, 0xce, 0xf5, 0xd8, 0xdb, 0x69,
+  0x70, 0x41, 0xa5, 0x42, 0x63, 0xd3, 0xe2, 0x0a, 0x99, 0x5a, 0x82, 0xf7,
+  0xc6, 0x8b, 0x64, 0xa5, 0xe6, 0xda, 0xf6, 0x09, 0xa1, 0xe0, 0x4a, 0xdc,
+  0xc4, 0x4d, 0x17, 0x99, 0xc8, 0x22, 0xe0, 0x29, 0x8e, 0xee, 0x0d, 0x46,
+  0xd2, 0x01, 0x17, 0x45, 0xf6, 0xc3, 0xc5, 0x07, 0x8e, 0xef, 0x07, 0xec,
+  0x9b, 0x87, 0x59, 0xa8, 0x61, 0x28, 0xce, 0x1b, 0x71, 0x23, 0xa6, 0xa2,
+  0x56, 0xcb, 0x45, 0xd4, 0x41, 0xad, 0x33, 0xec, 0xae, 0xda, 0xce, 0x96,
+  0x5e, 0xd9, 0x24, 0x57, 0x10, 0x1b, 0xf3, 0x66, 0x10, 0x95, 0x0d, 0x3b,
+  0x28, 0x47, 0x23, 0x29, 0xa5, 0x73, 0x6b, 0xe0, 0xd5, 0x5a, 0xcd, 0x5a,
+  0x83, 0xa3, 0x07, 0xdd, 0x3d, 0x88, 0x73, 0x78, 0x36, 0x00, 0x65, 0x08,
+  0x5d, 0x0b, 0x50, 0xe9, 0xc4, 0xdf, 0x79, 0x27, 0x95, 0x5c, 0xa5, 0xc6,
+  0x07, 0xea, 0xc0, 0x45, 0xf6, 0x95, 0x38, 0xf6, 0xe4, 0x1f, 0x6e, 0x98,
+  0x5b, 0x69, 0xb4, 0x0e, 0x37, 0x89, 0xa6, 0x00, 0x8a, 0x77, 0x52, 0xfe,
+  0x58, 0xe5, 0x9c, 0x1c, 0x1a, 0x70, 0x37, 0xec, 0x2f, 0xea, 0xd5, 0x54,
+  0x54, 0x6e, 0x17, 0xca, 0x22, 0xd1, 0x94, 0xda, 0xa8, 0x1e, 0xb5, 0x88,
+  0xff, 0x02, 0xc2, 0x5c, 0x49, 0x3f, 0x6b, 0x41, 0x66, 0xe2, 0x1d, 0x98,
+  0x22, 0x47, 0x13, 0x92, 0xdd, 0x20, 0x39, 0x51, 0x0f, 0xc4, 0xc6, 0x97,
+  0x12, 0xd8, 0x97, 0x6c, 0xbc, 0xdc, 0x48, 0x56, 0x17, 0x25, 0xd1, 0xaa,
+  0x68, 0xe8, 0x7f, 0x43, 0x2c, 0xea, 0x1b, 0x36, 0x04, 0x55, 0x37, 0x64,
+  0x58, 0x86, 0x61, 0x66, 0x75, 0x09, 0x20, 0xc3, 0x45, 0x34, 0xef, 0x26,
+  0xd0, 0xe1, 0x42, 0x92, 0xfb, 0xe1, 0xa2, 0x63, 0xc0, 0x22, 0x71, 0xbf,
+  0x5e, 0x8a, 0x5f, 0x7a, 0xa3, 0xe2, 0x60, 0x37, 0x29, 0x5f, 0x1a, 0x8b,
+  0xb8, 0x95, 0x04, 0x37, 0x91, 0x69, 0x64, 0x44, 0x3a, 0x16, 0x46, 0xcb,
+  0x18, 0x8f, 0x39, 0x30, 0x90, 0xc5, 0x59, 0xfa, 0x96, 0xe4, 0x30, 0xe1,
+  0x4d, 0x98, 0x37, 0x8c, 0xe0, 0x2f, 0xdb, 0xb9, 0x02, 0x97, 0x59, 0x0a,
+  0xfa, 0xe3, 0x38, 0xaa, 0x76, 0x09, 0x99, 0xfe, 0x15, 0x64, 0xd8, 0xab,
+  0x69, 0x31, 0x2a, 0x2e, 0x2f, 0x1f, 0x30, 0xa2, 0x0a, 0x9e, 0x14, 0xb7,
+  0x21, 0x87, 0x6a, 0x1d, 0x78, 0x0a, 0x78, 0x6f, 0x84, 0xf1, 0xd1, 0xc6,
+  0xd0, 0x29, 0x5b, 0xd7, 0x82, 0x13, 0x5c, 0xbe, 0xa3, 0x23, 0xb7, 0x84,
+  0xe2, 0x7e, 0xcf, 0x81, 0x3e, 0x58, 0xc6, 0x38, 0x35, 0x67, 0x92, 0xb1,
+  0xe6, 0x88, 0x78, 0x08, 0xf9, 0x2a, 0xf9, 0xaf, 0xbf, 0xff, 0xf8, 0xf3,
+  0x8a, 0x22, 0xac, 0x9a, 0xdf, 0xc6, 0x21, 0xd9, 0x02, 0x52, 0xe9, 0xf0,
+  0xc7, 0x7d, 0xb1, 0x4d, 0x48, 0xa5, 0xd9, 0xf4, 0x72, 0x10, 0x64, 0x10,
+  0x76, 0x59, 0x32, 0xae, 0x1e, 0xeb, 0xd0, 0x8a, 0xb9, 0x6a, 0x18, 0x06,
+  0x20, 0x3a, 0x19, 0xa3, 0xd8, 0x3b, 0x32, 0x1d, 0xfc, 0x9f, 0xd8, 0x1b,
+  0xba, 0x2c, 0xc0, 0xa1, 0xb8, 0x3a, 0xcf, 0xb6, 0xde, 0x0c, 0xef, 0xcf,
+  0x8f, 0x9d, 0x36, 0x1a, 0xec, 0xc4, 0xd7, 0xbc, 0x13, 0x9d, 0x65, 0xfb,
+  0x5e, 0xeb, 0x75, 0x4e, 0x22, 0xe8, 0x63, 0x1c, 0x41, 0xcd, 0x39, 0x90,
+  0xc2, 0x2e, 0x83, 0x88, 0x5e, 0x71, 0x1e, 0xf7, 0x27, 0xbd, 0x68, 0xd1,
+  0x8c, 0x5e, 0xbb, 0xa8, 0x40, 0x51, 0x76, 0x91, 0xd5, 0x1b, 0x58, 0x31,
+  0x16, 0x7e, 0xd2, 0x6a, 0xee, 0xeb, 0x23, 0x5f, 0xdb, 0xa9, 0x05, 0x28,
+  0xd3, 0xa8, 0xfb, 0x24, 0x45, 0x43, 0x41, 0xfe, 0x77, 0x39, 0xf2, 0xee,
+  0xad, 0x5e, 0x4b, 0x54, 0x8f, 0xbb, 0xf0, 0xa5, 0x04, 0x84, 0xd9, 0x1a,
+  0x06, 0xaf, 0x5f, 0xc1, 0x13, 0x4b, 0x9d, 0xdd, 0xf8, 0x8f, 0x0d, 0x8f,
+  0x78, 0x1e, 0x4b, 0x1d, 0x0f, 0x6b, 0xc8, 0xb5, 0xd0, 0x47, 0xfb, 0xc7,
+  0x3d, 0x3f, 0x52, 0xdf, 0xa1, 0xcd, 0x63, 0x14, 0x29, 0xd9, 0xb4, 0x6a,
+  0x18, 0xdf, 0x1c, 0x1d, 0xbc, 0x76, 0x39, 0x78, 0xbf, 0xb2, 0x1c, 0x80,
+  0xd4, 0x1a, 0x54, 0x3b, 0x48, 0x59, 0x59, 0xba, 0xde, 0x0a, 0x65, 0xd7,
+  0x19, 0x3a, 0x46, 0x99, 0x54, 0xa6, 0x5a, 0x9a, 0xf6, 0xcb, 0x9b, 0x62,
+  0xb7, 0x1d, 0x93, 0x08, 0xe9, 0x07, 0x08, 0x2a, 0x04, 0xc9, 0x76, 0x95,
+  0x5d, 0xb5, 0x97, 0xad, 0x54, 0x77, 0x03, 0x93, 0xa2, 0x99, 0x27, 0x71,
+  0x78, 0x85, 0xc5, 0x05, 0xf4, 0x1b, 0xe2, 0xc1, 0xbc, 0x94, 0x9f, 0x2b,
+  0x2e, 0x85, 0x23, 0xae, 0x3b, 0xa1, 0x8f, 0xd2, 0x5a, 0x2a, 0xac, 0xb8,
+  0xf1, 0x5d, 0xa3, 0x19, 0x56, 0x12, 0x2d, 0x56, 0x38, 0x46, 0x7c, 0x9a,
+  0x03, 0x6e, 0xd2, 0xce, 0x9f, 0xb5, 0x96, 0x93, 0xb1, 0x14, 0x1f, 0x2d,
+  0xce, 0xc9, 0xb9, 0x41, 0xa7, 0x55, 0x14, 0xa1, 0xd9, 0xdc, 0x64, 0xcc,
+  0xbe, 0x64, 0x51, 0x48, 0x91, 0x04, 0x82, 0xfe, 0xb2, 0xaa, 0x49, 0xb2,
+  0xb2, 0x01, 0xe3, 0xb1, 0xeb, 0x34, 0xa8, 0xb4, 0x25, 0xe5, 0x9f, 0x3b,
+  0x59, 0x36, 0xf3, 0x10, 0xb9, 0xd1, 0x59, 0x62, 0xa4, 0xe0, 0x83, 0xa8,
+  0xb0, 0x66, 0x2d, 0xee, 0x49, 0x2a, 0x11, 0x02, 0x4e, 0xcb, 0xb9, 0xc1,
+  0xd7, 0xc4, 0xd3, 0x3d, 0x43, 0x37, 0x4c, 0xfb, 0xc4, 0xb9, 0x3e, 0x18,
+  0x4a, 0x28, 0xd4, 0x1c, 0xba, 0xbb, 0xee, 0x13, 0x30, 0x18, 0xaa, 0x06,
+  0x37, 0xc9, 0xf8, 0x06, 0x69, 0xc6, 0xc4, 0x9a, 0x96, 0xcc, 0xe3, 0xd3,
+  0x79, 0x38, 0x4a, 0x07, 0x16, 0x39, 0x29, 0x78, 0xa5, 0xe3, 0x44, 0x64,
+  0x52, 0x30, 0x60, 0xf4, 0x6c, 0x34, 0x0a, 0xc6, 0x63, 0x85, 0x6a, 0x8c,
+  0x6f, 0xb3, 0xa0, 0x21, 0x58, 0x95, 0xdd, 0x10, 0x56, 0xa8, 0xd1, 0xf4,
+  0x1e, 0xab, 0x8a, 0x77, 0x9a, 0x66, 0xbb, 0xc1, 0x45, 0x6b, 0xf9, 0xaa,
+  0x3d, 0x67, 0xe9, 0xca, 0xa1, 0xf6, 0x61, 0xca, 0xba, 0x3c, 0xc4, 0xef,
+  0xaf, 0xf2, 0xdb, 0xa8, 0x65, 0xdc, 0x06, 0xc6, 0x76, 0x75, 0x1b, 0x85,
+  0x85, 0x57, 0x78, 0x13, 0xa4, 0x20, 0xcc, 0x26, 0xa8, 0x22, 0xe3, 0xb6,
+  0xaf, 0x0b, 0x44, 0x83, 0x2b, 0x0c, 0x51, 0x0b, 0xf3, 0x7d, 0x22, 0xfc,
+  0x64, 0xfd, 0x9b, 0xa2, 0xaa, 0xf7, 0xd7, 0x1d, 0x26, 0x63, 0x95, 0x19,
+  0xac, 0x4a, 0x83, 0x72, 0xb4, 0xf0, 0x4a, 0x27, 0x22, 0x8e, 0xef, 0x76,
+  0x39, 0x7f, 0x74, 0xb1, 0xe8, 0xc3, 0xe6, 0x3c, 0x55, 0x20, 0x18, 0x07,
+  0xab, 0x85, 0x28, 0x97, 0x59, 0xae, 0x43, 0x60, 0xe4, 0xa8, 0x6e, 0x30,
+  0x05, 0x86, 0xf4, 0x43, 0xff, 0x90, 0x3b, 0xef, 0x7f, 0xc3, 0xed, 0xfd,
+  0x69, 0xdd, 0x19, 0x0a, 0xda, 0x5f, 0xd1, 0xc0, 0xe3, 0xbe, 0xef, 0x10,
+  0xe2, 0xbd, 0xe2, 0xf0, 0x4e, 0xa6, 0x7d, 0x76, 0x00, 0xe8, 0x28, 0x39,
+  0xfd, 0x79, 0x32, 0xd9, 0x76, 0x9b, 0x2e, 0xbe, 0xca, 0x18, 0x28, 0x82,
+  0x26, 0xdb, 0x2e, 0x38, 0x4a, 0x72, 0xd2, 0x2f, 0x2e, 0xfb, 0x00, 0x79,
+  0xa7, 0xe6, 0xcb, 0x1b, 0x78, 0x86, 0x82, 0x53, 0xc7, 0x81, 0xac, 0x20,
+  0x25, 0x1c, 0xbf, 0xc8, 0x5d, 0xad, 0x29, 0x8d, 0xa5, 0x53, 0xb4, 0x75,
+  0x30, 0xba, 0x99, 0xfb, 0x50, 0xce, 0xec, 0x75, 0x57, 0xf3, 0x05, 0xc0,
+  0x05, 0x5a, 0xf2, 0xa5, 0x53, 0x29, 0x9b, 0x83, 0x22, 0x7b, 0x72, 0x9d,
+  0xf3, 0xa4, 0x99, 0x15, 0xcf, 0xc4, 0xe6, 0xc5, 0x76, 0x8b, 0xe5, 0x82,
+  0x05, 0x53, 0x14, 0x61, 0x7a, 0xb8, 0x84, 0xea, 0x81, 0xe1, 0x56, 0xf7,
+  0xa9, 0x23, 0xad, 0xbb, 0xd0, 0x44, 0xee, 0x5a, 0x85, 0x2e, 0x3d, 0x44,
+  0x58, 0x8b, 0x8a, 0x9f, 0x9f, 0x0d, 0x9e, 0x7c, 0x86, 0x8a, 0xae, 0x0e,
+  0xb0, 0xb3, 0xdf, 0xa7, 0xa5, 0xfb, 0x78, 0xdf, 0xf7, 0x4c, 0x93, 0xb7,
+  0x32, 0xa0, 0xaf, 0x36, 0x55, 0x71, 0x29, 0x66, 0xac, 0xc7, 0x44, 0x61,
+  0x86, 0x60, 0xb3, 0xa5, 0x26, 0x56, 0xc6, 0x54, 0xb5, 0x3f, 0xff, 0x9d,
+  0x46, 0x22, 0x30, 0x2d, 0xbd, 0xc1, 0x85, 0xd4, 0x7f, 0x47, 0x8c, 0x6e,
+  0x3f, 0xf9, 0xcf, 0x22, 0x5b, 0xe7, 0x68, 0xa6, 0x56, 0x30, 0x53, 0x27,
+  0x53, 0xe6, 0xe0, 0xfc, 0xdd, 0xf1, 0xbb, 0xaf, 0xf7, 0x83, 0x22, 0x55,
+  0x0c, 0xe0, 0xed, 0x81, 0x9f, 0xbd, 0xf5, 0xd7, 0x4a, 0xbe, 0xcb, 0x23,
+  0xf9, 0x3c, 0x02, 0xbc, 0xec, 0xa0, 0x04, 0xfb, 0xc2, 0xb2, 0xc4, 0x06,
+  0x53, 0x66, 0x62, 0x65, 0x12, 0x91, 0xcd, 0xd5, 0x42, 0xe9, 0x49, 0x3d,
+  0x33, 0x4d, 0xae, 0xe7, 0xc2, 0x67, 0x31, 0x9a, 0x64, 0x28, 0xb2, 0x00,
+  0x8b, 0x2c, 0xc8, 0x65, 0x9a, 0x72, 0xa1, 0xb8, 0x22, 0xa4, 0x2f, 0x11,
+  0x2f, 0xd9, 0x17, 0xdf, 0x35, 0x8d, 0xb3, 0x65, 0xe4, 0xba, 0xd0, 0x18,
+  0xfd, 0x79, 0x13, 0x6d, 0x5a, 0xd0, 0x63, 0x2b, 0xde, 0xb5, 0x2a, 0xe7,
+  0xab, 0xd4, 0xaf, 0xc9, 0x0a, 0xf9, 0xd1, 0xe3, 0xa5, 0xd1, 0xfd, 0x2e,
+  0xc6, 0x79, 0x16, 0x60, 0xec, 0x53, 0x5f, 0x7b, 0xc5, 0xad, 0xc1, 0x23,
+  0x50, 0x88, 0x1c, 0x08, 0xe4, 0x80, 0xcb, 0x9a, 0xb1, 0x10, 0x1c, 0x40,
+  0xe7, 0x0f, 0xf2, 0xb6, 0x28, 0xb0, 0x31, 0x07, 0x22, 0x5e, 0xb1, 0x6b,
+  0x34, 0x50, 0x0c, 0x31, 0xc5, 0xc5, 0x72, 0x34, 0x9b, 0x3c, 0x4b, 0x5e,
+  0xd2, 0x3f, 0xdd, 0x74, 0xb4, 0x43, 0xf3, 0x37, 0xc3, 0x24, 0x0e, 0x36,
+  0xa6, 0x38, 0x32, 0x22, 0xee, 0xe3, 0xd7, 0x27, 0x7b, 0xd4, 0xf0, 0xc7,
+  0xd4, 0x40, 0x07, 0x92, 0x09, 0xad, 0x5e, 0x5d, 0x45, 0xcb, 0x8f, 0x9b,
+  0x5e, 0x14, 0x54, 0xfe, 0xc3, 0x82, 0xef, 0xee, 0x7d, 0x9e, 0x8c, 0xf2,
+  0x3a, 0x79, 0xfb, 0xfa, 0x19, 0x69, 0x7e, 0xd9, 0xf8, 0xa6, 0x5a, 0xce,
+  0x8c, 0x49, 0x68, 0x75, 0x5b, 0x8c, 0x73, 0xa3, 0x7d, 0x57, 0xfb, 0xf4,
+  0xaa, 0x5e, 0xc3, 0xba, 0x7c, 0x69, 0x56, 0xf0, 0xa0, 0xec, 0xb3, 0x63,
+  0x66, 0x68, 0x49, 0xad, 0xf0, 0x11, 0xfb, 0x0e, 0xad, 0x01, 0x75, 0x5e,
+  0x49, 0x7e, 0x55, 0xcb, 0x9e, 0xfc, 0x59, 0xd3, 0x56, 0x26, 0xf9, 0x83,
+  0x56, 0x3d, 0xa2, 0x4f, 0xf2, 0xf7, 0x55, 0x27, 0x46, 0x1c, 0xfe, 0x53,
+  0x88, 0x40, 0xbd, 0xe4, 0x98, 0x9f, 0x16, 0x0b, 0x98, 0xbe, 0x71, 0xc2,
+  0x6f, 0x04, 0x90, 0x75, 0x22, 0x19, 0x82, 0x45, 0xe6, 0xe3, 0x25, 0xd7,
+  0x71, 0xea, 0xca, 0x90, 0x56, 0x6c, 0xd7, 0xa0, 0x21, 0xcb, 0xe5, 0x9c,
+  0x77, 0xe1, 0x60, 0x81, 0xa0, 0xd0, 0x64, 0x77, 0xf0, 0xb1, 0xa7, 0x61,
+  0x90, 0x61, 0xa5, 0x6e, 0x08, 0x6b, 0x45, 0xe7, 0xbe, 0x66, 0x7f, 0x48,
+  0x6b, 0x34, 0x68, 0x5b, 0xc2, 0x71, 0xa7, 0xf0, 0x0b, 0x96, 0x72, 0x2c,
+  0xf6, 0xe8, 0x7e, 0xbe, 0x4a, 0x47, 0xf7, 0xb1, 0xfc, 0x4b, 0xcc, 0x91,
+  0xcd, 0x4a, 0x9b, 0x15, 0xd7, 0xb7, 0xfe, 0x6c, 0xf0, 0x14, 0xd6, 0x97,
+  0x1e, 0x6a, 0x51, 0x2e, 0x78, 0xc2, 0x70, 0xa2, 0x3a, 0x13, 0x33, 0x4c,
+  0xa0, 0xf9, 0x15, 0xee, 0x25, 0xf5, 0xcd, 0x75, 0xbc, 0x99, 0x3e, 0x80,
+  0xd0, 0x6c, 0xcc, 0x1e, 0x89, 0x2e, 0xa0, 0xdd, 0xbc, 0xc7, 0x98, 0xc2,
+  0x2c, 0x84, 0xc6, 0x25, 0xd6, 0x63, 0x95, 0x50, 0x0d, 0x31, 0xb1, 0xef,
+  0xc1, 0x37, 0xa4, 0x88, 0x17, 0x47, 0xb1, 0x1b, 0xde, 0x41, 0xf0, 0x44,
+  0x47, 0x10, 0xe1, 0x76, 0x38, 0x18, 0x95, 0xef, 0x15, 0xe5, 0x52, 0xb2,
+  0x07, 0x7d, 0x08, 0x92, 0x3d, 0x68, 0x22, 0xce, 0xd5, 0xef, 0xe3, 0xf7,
+  0xb9, 0xd1, 0x6e, 0x5a, 0x33, 0xa7, 0xdb, 0x5b, 0x08, 0xfe, 0x60, 0x10,
+  0xcc, 0xea, 0xd8, 0xe4, 0xf1, 0xd8, 0x94, 0x50, 0x00, 0x79, 0xfb, 0xcd,
+  0xf1, 0xc9, 0xd1, 0x56, 0xf2, 0x26, 0xb3, 0x04, 0xc0, 0x70, 0x66, 0xb8,
+  0x01, 0xff, 0x4d, 0x3e, 0x31, 0x02, 0x51, 0x3b, 0x42, 0x0c, 0xed, 0xc1,
+  0x21, 0x92, 0xb3, 0x1e, 0x24, 0x54, 0xc3, 0x0c, 0x5e, 0x10, 0x09, 0x0a,
+  0x8e, 0x03, 0xb6, 0x2a, 0xd8, 0xe6, 0x67, 0x8f, 0xae, 0x10, 0x47, 0x20,
+  0xfa, 0x8a, 0xf4, 0x4e, 0xfb, 0x95, 0x00, 0x0a, 0x8b, 0x51, 0xc1, 0xc8,
+  0x35, 0xf4, 0xd5, 0xe2, 0x16, 0xf2, 0x8a, 0x18, 0xd7, 0x7d, 0xec, 0x24,
+  0xb2, 0x53, 0x99, 0x89, 0x01, 0x43, 0xe4, 0x80, 0xa6, 0x59, 0x31, 0xf1,
+  0xf9, 0x4c, 0x52, 0xec, 0x7c, 0x3e, 0x6d, 0x14, 0x5a, 0x09, 0xc0, 0xaf,
+  0x63, 0x88, 0x49, 0x67, 0x92, 0x4d, 0xc3, 0x89, 0x14, 0x61, 0x9c, 0x8c,
+  0xd0, 0x97, 0xd7, 0xc3, 0x5d, 0x33, 0x03, 0x17, 0x9f, 0x8a, 0xfc, 0x99,
+  0x32, 0xe6, 0xa7, 0x75, 0xe0, 0xd3, 0xbd, 0xd0, 0xe9, 0x56, 0xc8, 0xad,
+  0xa2, 0x11, 0xbc, 0x07, 0x73, 0x0b, 0x87, 0xd3, 0x8a, 0x8f, 0x82, 0xa7,
+  0xd0, 0x49, 0xdb, 0x8c, 0xc4, 0x33, 0xea, 0x75, 0x1e, 0xcc, 0x8c, 0x94,
+  0xb9, 0x9d, 0xfd, 0x5d, 0x17, 0x98, 0x7c, 0x77, 0x77, 0x37, 0x78, 0xe8,
+  0x3e, 0xff, 0xe7, 0x05, 0x8d, 0xfd, 0x05, 0xa4, 0xf9, 0x97, 0xe5, 0xfc,
+  0x86, 0x68, 0xab, 0x02, 0x05, 0x6b, 0xfd, 0xc8, 0x2a, 0x7e, 0xfa, 0x3c,
+  0xea, 0x4c, 0xbb, 0x86, 0xe9, 0x38, 0xac, 0x87, 0x99, 0x6a, 0xbc, 0x89,
+  0xd0, 0xc5, 0x6a, 0xdc, 0x03, 0x6f, 0x3a, 0x41, 0x3e, 0x6c, 0x5e, 0x8d,
+  0x11, 0x8b, 0xc4, 0x56, 0x94, 0x75, 0x1d, 0x4e, 0x62, 0x0d, 0xaf, 0x0f,
+  0x92, 0xd5, 0x05, 0xa1, 0x47, 0x69, 0x65, 0x98, 0x16, 0x92, 0x61, 0xef,
+  0x14, 0x42, 0xf5, 0x03, 0x0a, 0xea, 0x4d, 0x0a, 0x19, 0x34, 0xb1, 0x96,
+  0x21, 0x20, 0x43, 0xd0, 0xcb, 0xba, 0x00, 0x3c, 0x82, 0x34, 0x62, 0x15,
+  0xae, 0x2b, 0x83, 0xe5, 0xb7, 0x11, 0x26, 0xed, 0xc1, 0x39, 0xe1, 0x86,
+  0xc4, 0xd6, 0x8d, 0xce, 0xb9, 0x1c, 0x4f, 0x0b, 0xec, 0x0e, 0x18, 0x5f,
+  0xb0, 0xf2, 0xff, 0x29, 0x92, 0x28, 0x6e, 0x42, 0x3d, 0xe9, 0xfd, 0x48,
+  0x70, 0x62, 0x58, 0x3e, 0xcf, 0xc0, 0x22, 0x38, 0x85, 0x8e, 0x45, 0xdc,
+  0xd3, 0xa0, 0x0d, 0x89, 0xa0, 0x77, 0x78, 0x12, 0x7a, 0x5d, 0x46, 0x4b,
+  0x66, 0xf4, 0x03, 0xeb, 0x94, 0xbb, 0x2b, 0x5e, 0xd3, 0xb1, 0x2d, 0xaa,
+  0x5c, 0xe4, 0x13, 0x1f, 0x39, 0x1a, 0x78, 0x63, 0xba, 0xc1, 0x61, 0x06,
+  0x84, 0xe5, 0x58, 0xb9, 0x0b, 0x97, 0x33, 0xab, 0xcc, 0xa3, 0xa5, 0x2b,
+  0xdc, 0x09, 0x75, 0xf9, 0x10, 0xa2, 0xc3, 0xb3, 0x1b, 0xd5, 0xe3, 0x94,
+  0xb2, 0xba, 0x13, 0x0b, 0xde, 0x54, 0x2f, 0x32, 0x87, 0xb8, 0xb9, 0x58,
+  0x54, 0x43, 0x8b, 0xbb, 0x53, 0x38, 0x11, 0xef, 0xfe, 0x34, 0xe0, 0x4f,
+  0x01, 0x2d, 0xeb, 0xd8, 0x95, 0x10, 0x56, 0x71, 0x57, 0xe6, 0x35, 0x27,
+  0x58, 0x49, 0x52, 0x83, 0xe4, 0x3e, 0x89, 0x2e, 0x32, 0xa6, 0x86, 0x07,
+  0xad, 0xca, 0x04, 0xce, 0x99, 0xb1, 0xe8, 0x42, 0x9e, 0xb0, 0xed, 0x23,
+  0x98, 0x15, 0x6b, 0x96, 0xe1, 0xc9, 0x6d, 0x78, 0xab, 0x63, 0x78, 0x2e,
+  0x6c, 0xa3, 0xa6, 0x27, 0x82, 0xea, 0x0f, 0x24, 0x94, 0xc1, 0x26, 0xf8,
+  0x7b, 0x3a, 0xb1, 0x24, 0x86, 0xcf, 0x51, 0xa0, 0x7a, 0xf3, 0x3e, 0xab,
+  0xb7, 0x7c, 0xad, 0x76, 0x0b, 0x5d, 0x8d, 0xd5, 0x5f, 0x16, 0xae, 0xd6,
+  0x42, 0xd7, 0x81, 0xad, 0x46, 0x5f, 0x92, 0x4a, 0x06, 0x58, 0xf2, 0x92,
+  0x61, 0xc4, 0xe0, 0x03, 0xd5, 0xba, 0x58, 0xab, 0x9a, 0x8b, 0x54, 0x8c,
+  0x35, 0x7d, 0xe3, 0xe8, 0x63, 0x56, 0x8e, 0x61, 0x66, 0xfc, 0xcb, 0x72,
+  0x92, 0x8f, 0x39, 0x4a, 0xc5, 0x55, 0xc8, 0x09, 0x6d, 0xd0, 0x8d, 0x4c,
+  0xae, 0x4e, 0xb2, 0xfa, 0xf7, 0x82, 0x69, 0x43, 0x1c, 0xe0, 0x80, 0x04,
+  0x9c, 0xe2, 0x6a, 0x19, 0x90, 0x8f, 0xb2, 0x5e, 0xd6, 0xc1, 0x30, 0xf4,
+  0x06, 0xfc, 0x61, 0xf2, 0xfa, 0xe4, 0xa4, 0x5b, 0x26, 0x44, 0x14, 0x04,
+  0x01, 0x4e, 0x12, 0x33, 0x37, 0x9a, 0x10, 0x27, 0x80, 0x80, 0x5e, 0x0b,
+  0x4a, 0x67, 0x1b, 0x2e, 0x07, 0x81, 0xd9, 0x34, 0x94, 0x7e, 0x27, 0xe0,
+  0xf2, 0x8e, 0xef, 0x06, 0x84, 0x39, 0x61, 0x5a, 0x25, 0x7b, 0x47, 0xea,
+  0x7b, 0xfa, 0xe0, 0xb2, 0xbe, 0x4b, 0xc3, 0x42, 0xb6, 0xfd, 0x1b, 0x91,
+  0x6f, 0xaa, 0x58, 0xc0, 0xab, 0x65, 0xc8, 0x86, 0x8a, 0x42, 0x90, 0x26,
+  0xa0, 0xf6, 0x23, 0x57, 0xf5, 0x5e, 0xaf, 0xbd, 0x75, 0x6b, 0x6d, 0xbd,
+  0xad, 0xc4, 0x36, 0xf0, 0x0f, 0x24, 0x64, 0x3b, 0xa8, 0x3e, 0x72, 0x40,
+  0xf4, 0xdc, 0x79, 0x04, 0x0e, 0x41, 0x21, 0xb4, 0xce, 0x6e, 0x5b, 0x56,
+  0xd6, 0x8c, 0x56, 0xc6, 0x9c, 0x87, 0xcd, 0x2c, 0xef, 0x26, 0x9e, 0x8c,
+  0x40, 0x04, 0x31, 0xf3, 0x48, 0x91, 0xfa, 0xd6, 0x4d, 0x10, 0x77, 0x88,
+  0xe6, 0x3c, 0x63, 0xcb, 0x5d, 0xe2, 0x5c, 0x91, 0x60, 0x4c, 0x41, 0x1d,
+  0xe1, 0x64, 0xf5, 0x64, 0x11, 0x9a, 0xea, 0xc2, 0x70, 0x1a, 0x8b, 0xdc,
+  0x0d, 0xc3, 0x09, 0x8c, 0x05, 0xde, 0x19, 0xc2, 0x36, 0xdf, 0x9c, 0xcb,
+  0xa3, 0x31, 0xdc, 0xf8, 0x92, 0xb3, 0xd5, 0xd4, 0xbd, 0x99, 0xb8, 0x00,
+  0x78, 0xce, 0xe9, 0xe4, 0xb0, 0xf7, 0x36, 0x94, 0x80, 0x5d, 0xdd, 0x8c,
+  0x6e, 0x74, 0x9d, 0x7e, 0xfc, 0x38, 0xa8, 0xb2, 0x6d, 0x92, 0x9e, 0xaa,
+  0xed, 0xaa, 0x9a, 0x32, 0x92, 0x12, 0xe7, 0xa0, 0x78, 0x52, 0xf8, 0x56,
+  0x8a, 0x35, 0xcf, 0x49, 0x70, 0x46, 0x84, 0x36, 0xff, 0x8c, 0x81, 0xff,
+  0x19, 0xec, 0x9f, 0x88, 0x72, 0xc1, 0x83, 0xfe, 0xea, 0x65, 0xcc, 0x6d,
+  0x8d, 0x53, 0x95, 0x1b, 0x58, 0x81, 0xfc, 0xc7, 0xdd, 0x14, 0x4b, 0xbc,
+  0xad, 0xc1, 0x7d, 0x9c, 0x37, 0xad, 0xe9, 0x5e, 0xbc, 0x55, 0xae, 0x0f,
+  0x11, 0x21, 0x79, 0x3d, 0x7c, 0xbb, 0x12, 0x90, 0xd6, 0xd6, 0xdd, 0x95,
+  0x59, 0x9a, 0xa0, 0x99, 0xcd, 0x9b, 0x76, 0x51, 0x07, 0x37, 0x07, 0x13,
+  0x22, 0xed, 0x86, 0x3d, 0x6f, 0x56, 0xbe, 0x36, 0x3b, 0x1f, 0xd7, 0x28,
+  0x02, 0x18, 0x8e, 0xa0, 0xb3, 0x71, 0xa7, 0x5a, 0x1d, 0xd6, 0x9c, 0x86,
+  0x79, 0xe9, 0xbd, 0x91, 0x95, 0x33, 0xd6, 0xf9, 0x2b, 0xae, 0x08, 0x80,
+  0xa9, 0x56, 0x2c, 0x08, 0xcf, 0x1f, 0x9d, 0xf5, 0x02, 0xe8, 0xfc, 0x11,
+  0xaf, 0x39, 0x69, 0x47, 0xa4, 0x85, 0xb1, 0x74, 0xab, 0x86, 0x3e, 0xf3,
+  0xba, 0x4b, 0xc1, 0xc2, 0x2a, 0x9a, 0x7f, 0x98, 0x9c, 0x00, 0x95, 0xca,
+  0xa9, 0xfb, 0x02, 0x2f, 0x39, 0x66, 0x09, 0xb5, 0x0b, 0xae, 0x6f, 0x97,
+  0x16, 0x6f, 0x6d, 0x8c, 0xc9, 0x86, 0x41, 0x8f, 0x86, 0x5a, 0x2e, 0xf9,
+  0x1f, 0xa4, 0xa1, 0x30, 0xaa, 0x8a, 0xa2, 0x8a, 0x54, 0x45, 0xcf, 0xb4,
+  0x80, 0x29, 0xfa, 0xed, 0xb0, 0x3e, 0x19, 0x72, 0xe2, 0x01, 0x6c, 0x2b,
+  0x6f, 0x8b, 0xb0, 0xfd, 0x72, 0x3e, 0x9c, 0xca, 0x5d, 0x75, 0x4e, 0xce,
+  0x6c, 0x4f, 0xb6, 0x59, 0xc9, 0x9a, 0x03, 0xa3, 0x49, 0xbb, 0xbc, 0x2b,
+  0x74, 0x5c, 0x02, 0x8a, 0x04, 0x6b, 0x90, 0x33, 0x78, 0xa0, 0x40, 0xcf,
+  0x23, 0xa3, 0xf3, 0xb5, 0xe8, 0x2d, 0xa9, 0x32, 0x18, 0x03, 0xcf, 0xb4,
+  0xae, 0xfc, 0x96, 0xaf, 0x2a, 0x1c, 0xd4, 0xf0, 0x50, 0x23, 0xf8, 0x4d,
+  0x9d, 0x99, 0xe1, 0x9e, 0x36, 0x9f, 0x53, 0xd2, 0xe9, 0x60, 0x9e, 0xaa,
+  0xfc, 0xa6, 0x79, 0x35, 0x92, 0x93, 0x03, 0x60, 0x7d, 0xf9, 0xdb, 0x76,
+  0x22, 0x71, 0xc9, 0x3a, 0x41, 0x60, 0x78, 0x37, 0x0f, 0x41, 0x11, 0x84,
+  0x13, 0x7f, 0x79, 0x8b, 0xb9, 0xcc, 0x81, 0x85, 0xed, 0x27, 0xc9, 0x4f,
+  0x3f, 0xf5, 0x12, 0xa0, 0x17, 0xff, 0x44, 0xca, 0xe6, 0x4f, 0x44, 0x72,
+  0x3f, 0x49, 0x01, 0xe1, 0x9f, 0x6e, 0x89, 0x6d, 0xaf, 0xca, 0xdb, 0x09,
+  0x6a, 0xc5, 0xc2, 0xdb, 0x22, 0x77, 0x9c, 0xd6, 0xfd, 0x86, 0x0d, 0x42,
+  0x80, 0x91, 0x42, 0x0c, 0xe5, 0x58, 0x91, 0x29, 0xda, 0x99, 0xe5, 0x6c,
+  0x2e, 0x77, 0xa7, 0xb2, 0x1a, 0xe6, 0x02, 0xcc, 0x2a, 0x36, 0x7e, 0xb7,
+  0xe1, 0xf7, 0x26, 0x28, 0x25, 0xae, 0x0a, 0x32, 0x1e, 0x8c, 0x41, 0x4f,
+  0xc2, 0x20, 0xc4, 0x51, 0xff, 0x02, 0xa2, 0xcc, 0x87, 0x9b, 0x35, 0xca,
+  0x53, 0x98, 0x76, 0xc1, 0x10, 0x34, 0xa4, 0x5e, 0x36, 0x18, 0x56, 0xe9,
+  0xc5, 0xf5, 0x3d, 0x0b, 0xf4, 0x1d, 0x65, 0x6a, 0x9e, 0x35, 0x4f, 0x4b,
+  0x3c, 0x37, 0xd5, 0x58, 0xa6, 0x8f, 0x64, 0x76, 0x50, 0xa9, 0x0d, 0xb6,
+  0x4b, 0xc3, 0xd9, 0xe8, 0x6f, 0x34, 0x6b, 0x17, 0x94, 0x5d, 0x35, 0xbd,
+  0x99, 0x48, 0xc9, 0x99, 0x9f, 0x83, 0xd5, 0xd9, 0x5d, 0xe2, 0xab, 0x15,
+  0x10, 0x70, 0x0f, 0xc3, 0x9e, 0xb2, 0x8b, 0xd2, 0x8c, 0x14, 0xda, 0xbf,
+  0xe9, 0xcd, 0x5d, 0x9f, 0x10, 0x5b, 0x9a, 0xa5, 0xd0, 0xa2, 0xcd, 0x25,
+  0xaf, 0x93, 0xe0, 0xb6, 0xed, 0xc3, 0x3b, 0xec, 0xc4, 0x27, 0x50, 0x07,
+  0x04, 0x5a, 0x24, 0x04, 0x02, 0x1a, 0xe2, 0x3e, 0xc2, 0xa5, 0xed, 0x4d,
+  0x8c, 0xa3, 0x10, 0xff, 0x06, 0xc2, 0x4b, 0x98, 0xc5, 0x26, 0xc3, 0xa2,
+  0x27, 0x25, 0x46, 0x9d, 0x1e, 0x9b, 0xf8, 0x42, 0xef, 0x75, 0x11, 0x89,
+  0x1f, 0xe8, 0x28, 0xb5, 0x18, 0xcf, 0xab, 0x64, 0x7d, 0xf5, 0x3d, 0xb8,
+  0x1e, 0xc5, 0x6f, 0x32, 0x65, 0x12, 0x99, 0xf9, 0x37, 0x0a, 0xcd, 0xaf,
+  0xea, 0xd6, 0xa6, 0x5d, 0xe8, 0x7f, 0xb5, 0x4b, 0x7c, 0x4b, 0x4d, 0x89,
+  0x51, 0x50, 0x57, 0x07, 0x0c, 0x16, 0x5c, 0x91, 0x0e, 0x8a, 0x31, 0x67,
+  0x7f, 0x22, 0xbd, 0xb7, 0x9c, 0x4f, 0xcc, 0x38, 0xe4, 0xa0, 0xe0, 0x57,
+  0x73, 0x5e, 0x58, 0xa0, 0xd1, 0xa3, 0x1a, 0xee, 0x2d, 0xad, 0xce, 0xd9,
+  0x7b, 0xd9, 0x42, 0xab, 0x6a, 0x07, 0xc4, 0x69, 0xa0, 0x4b, 0x77, 0x56,
+  0x66, 0x77, 0xcb, 0xa5, 0xe9, 0x97, 0xac, 0x2c, 0xb2, 0xb9, 0x4c, 0xfd,
+  0x52, 0xeb, 0xd7, 0x85, 0x00, 0x26, 0xae, 0xef, 0x27, 0xc7, 0xb5, 0xba,
+  0x9b, 0x83, 0x59, 0x76, 0xef, 0x48, 0x86, 0xa3, 0xfc, 0xe6, 0xf4, 0xed,
+  0x91, 0x0b, 0xea, 0x17, 0x93, 0x11, 0x3e, 0x89, 0xe2, 0x1e, 0x0f, 0x38,
+  0x22, 0xcb, 0x70, 0x1d, 0x7a, 0xdd, 0xca, 0xb2, 0xb2, 0x44, 0x57, 0x59,
+  0xbd, 0xb8, 0x5b, 0xe6, 0x93, 0x4d, 0x06, 0xdf, 0x78, 0x3f, 0xcf, 0x3f,
+  0xf6, 0xd9, 0x24, 0x26, 0xa8, 0xe0, 0x95, 0xa1, 0x4f, 0x18, 0x70, 0x85,
+  0xd8, 0x5d, 0x67, 0x11, 0xc8, 0x3b, 0xbd, 0xd6, 0x42, 0x45, 0x8c, 0xf3,
+  0xd0, 0xf2, 0xb9, 0x38, 0x57, 0xa5, 0xc1, 0x2d, 0x30, 0x00, 0x13, 0xed,
+  0x79, 0xdb, 0x63, 0x09, 0x0a, 0xcd, 0x95, 0x48, 0x0e, 0xce, 0xce, 0x5e,
+  0x1f, 0x5c, 0x1c, 0xb8, 0xb9, 0x09, 0x16, 0x19, 0xb8, 0x0a, 0x1b, 0x3a,
+  0x20, 0xb9, 0x29, 0xf4, 0xd5, 0xc6, 0xef, 0x91, 0xbd, 0xd6, 0xbe, 0xec,
+  0xcf, 0xce, 0x4f, 0x61, 0xb0, 0xfa, 0xfd, 0x4f, 0x07, 0x01, 0xe0, 0xcb,
+  0xeb, 0xb4, 0x4e, 0xbb, 0x29, 0x03, 0x7b, 0x5b, 0x18, 0xdf, 0x9d, 0x1b,
+  0x9f, 0x86, 0x0c, 0x49, 0x70, 0x56, 0xf2, 0x01, 0x1b, 0x5a, 0x8e, 0x9d,
+  0xe4, 0x64, 0xab, 0xc1, 0x0b, 0xd0, 0x8b, 0x84, 0x3b, 0x07, 0x13, 0x29,
+  0x3c, 0x17, 0x33, 0xb4, 0x4c, 0x5b, 0xac, 0x29, 0x49, 0xfc, 0x24, 0xb6,
+  0xd6, 0xcc, 0x3e, 0x60, 0x37, 0x06, 0x7d, 0x4d, 0xb0, 0x52, 0x6d, 0x60,
+  0xef, 0xf6, 0xf6, 0xf8, 0x9a, 0x16, 0xc2, 0x01, 0x24, 0x98, 0xbd, 0x90,
+  0x52, 0xd0, 0x03, 0x1d, 0xad, 0x2f, 0x06, 0xdd, 0x39, 0x3b, 0xe2, 0xdc,
+  0x24, 0x3a, 0x37, 0x7a, 0x1c, 0x74, 0xbd, 0x50, 0xfd, 0x7e, 0xdf, 0x7c,
+  0x54, 0x32, 0x71, 0xfa, 0xa0, 0xf3, 0x50, 0x6d, 0x05, 0x6f, 0x8d, 0xd1,
+  0xc7, 0xf9, 0x44, 0x60, 0xde, 0x6a, 0x0b, 0xf3, 0x8a, 0x04, 0x43, 0x0f,
+  0x61, 0xd8, 0x58, 0x74, 0x16, 0x9d, 0xd7, 0xbb, 0x86, 0x73, 0x73, 0xed,
+  0xd1, 0xa3, 0xd5, 0x12, 0xb6, 0x3f, 0xfc, 0xb5, 0xbd, 0x3b, 0xd8, 0x59,
+  0xef, 0x0e, 0x9e, 0x43, 0xa1, 0xd9, 0xc0, 0x6a, 0x45, 0x4e, 0xa4, 0x6e,
+  0x4d, 0xf1, 0xe8, 0xf8, 0x84, 0x7d, 0x91, 0x40, 0xba, 0xa0, 0xf6, 0xa3,
+  0x43, 0xe9, 0x9f, 0x76, 0xac, 0xf0, 0xe2, 0x61, 0x54, 0x86, 0x48, 0xfc,
+  0x70, 0x5e, 0x30, 0x14, 0x42, 0x0a, 0x6d, 0xa8, 0x61, 0xdb, 0x5b, 0x8f,
+  0x2f, 0xf3, 0x7c, 0x22, 0xa1, 0x12, 0xad, 0xd5, 0x7e, 0xd4, 0xab, 0x14,
+  0xcf, 0xaf, 0x75, 0x94, 0xe0, 0x3e, 0x5e, 0xc9, 0xf3, 0x1a, 0xae, 0xa4,
+  0x9b, 0x8c, 0x84, 0xc1, 0x29, 0x27, 0x93, 0xc2, 0x34, 0xbb, 0x0a, 0x9e,
+  0xbb, 0x11, 0x9f, 0x66, 0x41, 0xc1, 0xfc, 0x46, 0x1a, 0x6a, 0x73, 0x89,
+  0x02, 0x0b, 0xf0, 0xc5, 0x56, 0x66, 0x33, 0x0e, 0x76, 0xcf, 0x27, 0x1d,
+  0xd0, 0x0d, 0xf5, 0x14, 0xb8, 0x88, 0x13, 0x37, 0x0a, 0x18, 0x29, 0x46,
+  0x2a, 0xee, 0xba, 0x2e, 0x4c, 0x48, 0x04, 0x66, 0xdf, 0x6d, 0x3e, 0x59,
+  0x76, 0xc4, 0x86, 0xf6, 0xeb, 0x03, 0x30, 0xda, 0x06, 0xa6, 0x92, 0xd8,
+  0x5f, 0xf0, 0x44, 0xe1, 0x8c, 0xc8, 0xf0, 0x2f, 0xca, 0xd1, 0xea, 0xd8,
+  0xc5, 0x2f, 0x15, 0x5d, 0x9d, 0xef, 0xf2, 0x8b, 0xc3, 0xb3, 0x0f, 0xdf,
+  0x1e, 0x1d, 0x9d, 0x1d, 0xbf, 0x3e, 0x39, 0xd2, 0x30, 0x7a, 0xf7, 0xd1,
+  0xbb, 0x8b, 0xef, 0x4e, 0x3c, 0xc2, 0xba, 0xba, 0x9b, 0xdb, 0x6a, 0x3f,
+  0xc2, 0x18, 0xd1, 0xdc, 0x49, 0x3e, 0x5f, 0x7e, 0xec, 0x31, 0xf8, 0x17,
+  0x91, 0xf4, 0xc1, 0xf1, 0x0f, 0xbd, 0xe4, 0x9b, 0xb3, 0xfe, 0xfb, 0x1f,
+  0x3a, 0xb0, 0x3e, 0x81, 0xed, 0x88, 0x58, 0x51, 0x5b, 0xbe, 0x74, 0x89,
+  0x0f, 0x5c, 0x87, 0xd3, 0xcf, 0xdd, 0xf4, 0xe0, 0xa6, 0xff, 0xeb, 0xf3,
+  0xdf, 0x22, 0x25, 0xb9, 0xd3, 0xdc, 0x72, 0x1e, 0xd4, 0xde, 0x09, 0x84,
+  0x79, 0xbd, 0x81, 0x99, 0x3c, 0x9f, 0xef, 0x18, 0x9c, 0x7b, 0x93, 0x00,
+  0xef, 0x93, 0x97, 0xf4, 0x4f, 0x0c, 0x53, 0x73, 0x7b, 0x38, 0xfc, 0x66,
+  0x2b, 0x39, 0x0b, 0xea, 0x58, 0x38, 0x93, 0xd4, 0xc0, 0xc2, 0x9c, 0xd9,
+  0x24, 0x54, 0x84, 0xc6, 0xad, 0x12, 0xd5, 0x0f, 0xba, 0x81, 0x1f, 0x08,
+  0x46, 0x74, 0xa5, 0x30, 0x72, 0xa7, 0x05, 0xc9, 0xd1, 0x93, 0xa4, 0x49,
+  0xea, 0x8e, 0xef, 0x81, 0x26, 0xa2, 0x38, 0xb3, 0xed, 0xb6, 0x80, 0xa4,
+  0xf7, 0x7c, 0x43, 0x11, 0xe0, 0xf3, 0x39, 0xc9, 0x27, 0x5a, 0x47, 0x9d,
+  0x15, 0x20, 0x88, 0x0b, 0xc8, 0x70, 0xfb, 0x5f, 0xdb, 0x83, 0xaa, 0xba,
+  0xde, 0xce, 0x27, 0x1f, 0xca, 0x2a, 0xdd, 0x68, 0x5f, 0xd1, 0xc1, 0xd7,
+  0x13, 0x7c, 0x9d, 0x6c, 0x0c, 0xdc, 0xa3, 0xfa, 0x3b, 0x3e, 0xff, 0x2d,
+  0x91, 0x03, 0x69, 0x69, 0x1e, 0x05, 0x79, 0xef, 0x6e, 0x05, 0x9e, 0x1d,
+  0xb4, 0x2c, 0x18, 0xdc, 0x0a, 0xef, 0x83, 0xec, 0x2e, 0x6d, 0x4d, 0x67,
+  0x37, 0x18, 0xe0, 0xb2, 0x51, 0xa0, 0x84, 0x0e, 0xed, 0xeb, 0xa3, 0xf3,
+  0x9e, 0x00, 0xbf, 0x87, 0xa0, 0xef, 0x01, 0x70, 0xa2, 0xe8, 0x36, 0xdd,
+  0x62, 0xa1, 0xc1, 0x5e, 0xfd, 0xeb, 0xf0, 0xde, 0x6f, 0xca, 0x51, 0xf2,
+  0x72, 0x4a, 0x2f, 0x4e, 0xe3, 0x69, 0xf7, 0x5a, 0x3c, 0x3e, 0xf9, 0x36,
+  0x2b, 0x47, 0x59, 0x59, 0x54, 0x6d, 0xb0, 0x2a, 0x95, 0x5c, 0xc5, 0x90,
+  0xc3, 0xed, 0xac, 0xd4, 0x4f, 0x6b, 0x36, 0x8e, 0x31, 0x82, 0x6a, 0x3b,
+  0x47, 0x79, 0x83, 0xf3, 0x01, 0x40, 0x25, 0x00, 0xe4, 0xc2, 0x4f, 0xe6,
+  0xfb, 0x0c, 0x67, 0x9a, 0x4e, 0x37, 0x7a, 0x5d, 0x1d, 0x7c, 0x43, 0x97,
+  0x7d, 0x03, 0x35, 0xdc, 0xd5, 0xa5, 0x8f, 0x43, 0x24, 0x10, 0x2d, 0xa8,
+  0x18, 0xc2, 0x63, 0xb1, 0x2a, 0x56, 0x38, 0x0b, 0x3e, 0x1f, 0xba, 0xea,
+  0x20, 0xe1, 0xb9, 0xe6, 0xda, 0x01, 0x9d, 0x71, 0xa3, 0x5c, 0xb4, 0x42,
+  0x60, 0xea, 0x8b, 0x4f, 0x35, 0x2a, 0x03, 0xde, 0xe8, 0xd2, 0x3d, 0x75,
+  0x44, 0x10, 0xaf, 0xa4, 0x90, 0x2b, 0x40, 0x0e, 0x27, 0x36, 0x43, 0x28,
+  0x41, 0x74, 0x09, 0x57, 0x46, 0xf9, 0x0e, 0xca, 0xa0, 0xb9, 0x6e, 0xa5,
+  0xee, 0x85, 0x86, 0x1d, 0x96, 0xb1, 0x63, 0xed, 0x4a, 0x0c, 0xe6, 0xf5,
+  0x6f, 0x4c, 0x3a, 0x4f, 0x1f, 0xa4, 0x9d, 0x46, 0x26, 0x71, 0x51, 0xce,
+  0x14, 0xd7, 0x42, 0xab, 0x2a, 0xd3, 0xeb, 0x74, 0x58, 0x5c, 0xea, 0x60,
+  0xd0, 0xf2, 0x94, 0x8b, 0xfd, 0xe5, 0x55, 0xdd, 0x87, 0x8f, 0x75, 0x35,
+  0xaa, 0x86, 0xe6, 0x88, 0x99, 0x97, 0x37, 0xa8, 0xb9, 0x23, 0xac, 0x51,
+  0x2a, 0x1a, 0x73, 0x5c, 0x2a, 0x43, 0x54, 0xa1, 0xf3, 0x7e, 0xac, 0x9a,
+  0x22, 0x9d, 0xe4, 0xec, 0xae, 0x91, 0x27, 0x1e, 0xda, 0xf9, 0x35, 0xf2,
+  0x81, 0x15, 0x33, 0xc3, 0x5b, 0xe0, 0x22, 0x40, 0x55, 0x57, 0xe5, 0x9c,
+  0xa5, 0xe3, 0x6b, 0x12, 0x4f, 0xfb, 0x1c, 0xde, 0xde, 0xc4, 0xb1, 0x82,
+  0xb1, 0xa2, 0x35, 0xd0, 0x44, 0xa2, 0x16, 0xa4, 0x54, 0x14, 0x87, 0x4b,
+  0xae, 0x06, 0xe6, 0xc6, 0x10, 0x9d, 0x13, 0x47, 0x4a, 0x12, 0x38, 0x58,
+  0x04, 0x56, 0x84, 0x8b, 0xd2, 0x95, 0x36, 0x70, 0x3e, 0xf0, 0x88, 0x97,
+  0x57, 0xeb, 0x16, 0x04, 0xb7, 0x9b, 0x42, 0xb4, 0xa5, 0xc9, 0xbb, 0x93,
+  0xe1, 0x45, 0x18, 0x2b, 0x21, 0xc1, 0x55, 0xf3, 0xda, 0x15, 0x6f, 0x89,
+  0x7a, 0xe9, 0xc2, 0x98, 0xd2, 0x93, 0xe3, 0xe1, 0x45, 0xd4, 0xe6, 0x40,
+  0xb7, 0xc7, 0x90, 0xd5, 0x8e, 0x30, 0x67, 0xd0, 0x95, 0xf5, 0xc1, 0x1e,
+  0x48, 0xe0, 0x87, 0xe8, 0x1b, 0x79, 0x19, 0xe6, 0x83, 0xb6, 0x9b, 0xa3,
+  0x51, 0xfe, 0x49, 0x4c, 0xb5, 0x1a, 0xb5, 0x67, 0xd1, 0xc0, 0xd5, 0x72,
+  0xd4, 0x0f, 0x90, 0x1a, 0x84, 0xd5, 0x30, 0x10, 0x5a, 0x3e, 0x86, 0x01,
+  0xe1, 0xa6, 0xeb, 0x01, 0xda, 0x3c, 0x3b, 0x3d, 0x7b, 0xa2, 0xe4, 0xa4,
+  0xa0, 0x1a, 0x0d, 0x87, 0xfc, 0x38, 0x81, 0xf8, 0xa7, 0xc8, 0x83, 0x78,
+  0xb6, 0x67, 0x96, 0x78, 0xa1, 0xae, 0x58, 0x65, 0x77, 0x41, 0x43, 0xc0,
+  0x52, 0xb4, 0x16, 0x53, 0x7d, 0x21, 0xcd, 0x30, 0x5c, 0x04, 0xa8, 0xb8,
+  0x00, 0x9c, 0x08, 0x7a, 0x92, 0x85, 0xe3, 0x18, 0x19, 0x6a, 0x8a, 0x52,
+  0x83, 0x08, 0x8d, 0x21, 0x04, 0xc3, 0x46, 0x2c, 0x62, 0x27, 0x39, 0x0f,
+  0xb0, 0x67, 0xf9, 0xc4, 0x9c, 0x90, 0x0d, 0xa0, 0x0d, 0x49, 0x17, 0xe3,
+  0x02, 0xa5, 0x88, 0x7b, 0x60, 0x08, 0xf2, 0x55, 0x3b, 0x69, 0x50, 0x29,
+  0x1a, 0x5b, 0xa6, 0xa1, 0xf1, 0x3f, 0x88, 0x93, 0x57, 0x22, 0xb1, 0x1d,
+  0x96, 0x4b, 0x23, 0x07, 0x21, 0x52, 0x81, 0x2f, 0xa8, 0xd8, 0x6e, 0xf0,
+  0x6c, 0xef, 0x49, 0x44, 0x75, 0x2b, 0xa7, 0x2b, 0xa5, 0xae, 0x40, 0x9d,
+  0x37, 0xfc, 0x80, 0xf4, 0x4b, 0x2c, 0xae, 0x84, 0xb7, 0x6b, 0x03, 0x99,
+  0xe1, 0xf3, 0xfc, 0xaf, 0x70, 0xc0, 0xc9, 0x25, 0x72, 0xc9, 0x81, 0xca,
+  0xea, 0x2a, 0xe4, 0xb0, 0xa2, 0xbc, 0xde, 0xa8, 0x0c, 0x17, 0x15, 0x8b,
+  0x12, 0x39, 0xca, 0x37, 0x59, 0x18, 0x5d, 0xde, 0x94, 0x48, 0xf7, 0x76,
+  0x1b, 0xd8, 0x29, 0x8d, 0xfa, 0xa4, 0xd1, 0xf0, 0x19, 0xae, 0x60, 0xb9,
+  0xd5, 0x72, 0xca, 0x4a, 0x88, 0x54, 0x80, 0xd1, 0xab, 0x7d, 0x31, 0xc2,
+  0x3a, 0x06, 0x06, 0xe9, 0xb9, 0x3d, 0x2e, 0x4e, 0x13, 0x63, 0xf4, 0x3a,
+  0xc3, 0xf5, 0xab, 0x13, 0x57, 0x1a, 0x75, 0x53, 0x21, 0xc1, 0x7d, 0xf0,
+  0x6f, 0xbb, 0x40, 0x69, 0x04, 0x56, 0x28, 0x4d, 0x9e, 0xfc, 0xf0, 0x43,
+  0x13, 0xca, 0x72, 0x6b, 0x55, 0xf2, 0x88, 0x9a, 0x88, 0xe8, 0x2a, 0x8f,
+  0xf2, 0x04, 0x23, 0x00, 0x25, 0x2e, 0x04, 0x32, 0xb0, 0x71, 0x80, 0x6d,
+  0xf4, 0xba, 0xd3, 0x57, 0x19, 0x6f, 0x83, 0x90, 0x4d, 0x18, 0x4a, 0xd5,
+  0xbd, 0xe6, 0x7d, 0x4c, 0x52, 0xcf, 0xc5, 0x3f, 0x4a, 0xe8, 0x06, 0x07,
+  0x98, 0xd9, 0x62, 0x61, 0xad, 0x2a, 0x77, 0x51, 0x91, 0x78, 0x71, 0x37,
+  0x1f, 0xc4, 0x2a, 0xca, 0xb6, 0x84, 0x17, 0x07, 0x21, 0xa0, 0x31, 0x7c,
+  0x52, 0x5a, 0x97, 0x01, 0x98, 0x61, 0x77, 0x1c, 0xd3, 0x24, 0x45, 0x02,
+  0xa9, 0x34, 0xae, 0xb3, 0x13, 0x84, 0x23, 0x4e, 0x0e, 0x84, 0xdb, 0xf0,
+  0x04, 0x53, 0x17, 0x59, 0x99, 0xd4, 0xec, 0x28, 0x34, 0x37, 0x68, 0xb8,
+  0x57, 0x1a, 0xdb, 0x19, 0xa9, 0x80, 0xc4, 0x65, 0x5f, 0x05, 0x54, 0x52,
+  0xed, 0xb2, 0x1c, 0x7a, 0xa3, 0xb9, 0x6f, 0x42, 0xfc, 0x7f, 0x34, 0x08,
+  0xa8, 0xa0, 0x88, 0x95, 0x90, 0x5e, 0x17, 0xd5, 0xb9, 0x98, 0xf7, 0xeb,
+  0x72, 0xc9, 0x2b, 0x04, 0x45, 0x0c, 0xa9, 0xbe, 0x85, 0xc7, 0x71, 0x83,
+  0xb0, 0x6a, 0x21, 0x46, 0x5c, 0xbb, 0x50, 0x92, 0x37, 0x66, 0x8c, 0x48,
+  0xd5, 0x0d, 0xa2, 0xf0, 0x71, 0xb3, 0x92, 0x49, 0x8c, 0xcc, 0xe1, 0x86,
+  0x67, 0xb5, 0xdf, 0x9f, 0xa5, 0x1f, 0xfb, 0xfc, 0x58, 0xd5, 0xa9, 0xa2,
+  0x15, 0xda, 0x52, 0x15, 0xcc, 0xb5, 0x98, 0x6a, 0x09, 0x5d, 0xb7, 0x66,
+  0xa6, 0x2f, 0xbb, 0xfc, 0x20, 0x0d, 0xea, 0x06, 0x09, 0xd1, 0xa9, 0xfb,
+  0xfa, 0xe8, 0xa2, 0x7d, 0xb4, 0x18, 0x5e, 0x46, 0x8d, 0x0f, 0x9c, 0x94,
+  0x83, 0xc2, 0xac, 0xef, 0x2f, 0xb6, 0xbc, 0x99, 0x69, 0x52, 0xb4, 0x6c,
+  0xa1, 0x2e, 0x59, 0xa4, 0x0b, 0xab, 0x2b, 0x89, 0x30, 0xca, 0x61, 0x19,
+  0x3a, 0xd7, 0x9d, 0x09, 0x14, 0x7c, 0x7e, 0xb2, 0xb3, 0xdb, 0xa3, 0x7f,
+  0xf6, 0xd8, 0x9a, 0xf7, 0x64, 0xe7, 0x89, 0xf3, 0x3b, 0xd9, 0x53, 0x1d,
+  0x2f, 0xc5, 0x44, 0x5e, 0xf4, 0x9e, 0x8e, 0x27, 0x1f, 0x3f, 0xf2, 0xc7,
+  0xbd, 0x46, 0xc0, 0x7c, 0x99, 0xf5, 0x0d, 0x95, 0xea, 0x01, 0x97, 0x8c,
+  0x0d, 0xdc, 0xaf, 0x38, 0x9b, 0xe5, 0x96, 0x73, 0x89, 0x4d, 0x63, 0x98,
+  0x67, 0x24, 0xdb, 0x0c, 0x56, 0x63, 0xfa, 0x05, 0x18, 0x87, 0x0a, 0xda,
+  0x10, 0xa2, 0xfa, 0x11, 0xb9, 0x84, 0xd9, 0x59, 0x9a, 0xba, 0xd3, 0x61,
+  0x8c, 0x78, 0x46, 0xd3, 0xd9, 0x69, 0x15, 0x3e, 0xfa, 0x35, 0x72, 0xc0,
+  0x88, 0x3a, 0x11, 0x62, 0x96, 0xca, 0x8a, 0xcc, 0xa6, 0x90, 0xac, 0x40,
+  0xf3, 0xdc, 0x47, 0xb8, 0x3a, 0x9d, 0x0a, 0x5e, 0x61, 0xfb, 0x75, 0x4f,
+  0x2b, 0xc5, 0xca, 0x5f, 0x4f, 0x42, 0xd1, 0xd3, 0xea, 0x70, 0x47, 0xcb,
+  0xd0, 0x1d, 0x48, 0x55, 0xe8, 0x56, 0xbc, 0x38, 0x0e, 0x21, 0xb6, 0x01,
+  0x89, 0x75, 0x90, 0xd1, 0x15, 0x4b, 0xc2, 0x3b, 0x70, 0x45, 0x5f, 0x8b,
+  0x94, 0x7b, 0xc4, 0x16, 0x31, 0xf8, 0xa9, 0x95, 0xff, 0xee, 0xcb, 0x24,
+  0x0f, 0x13, 0xf5, 0xbf, 0xcb, 0x3e, 0xab, 0xc7, 0x58, 0x03, 0xc0, 0x2f,
+  0x15, 0xf1, 0x34, 0x8a, 0x7b, 0x25, 0xb5, 0x9c, 0x48, 0x6d, 0xb8, 0x4d,
+  0xa7, 0x82, 0xd3, 0xe6, 0x72, 0x56, 0x4a, 0x1b, 0x93, 0xe4, 0x3a, 0xf8,
+  0x48, 0x41, 0xbc, 0xf7, 0x6f, 0x8f, 0x82, 0xa2, 0x3c, 0x26, 0xcf, 0xfb,
+  0x78, 0xb7, 0x58, 0x94, 0x52, 0x43, 0xd2, 0x7f, 0x30, 0x59, 0x9f, 0xf9,
+  0x45, 0x9f, 0x0d, 0x0f, 0x2f, 0x49, 0xe6, 0xc8, 0x26, 0xab, 0xc2, 0x01,
+  0x38, 0xb0, 0xd9, 0xca, 0xe1, 0x59, 0x9a, 0x35, 0xbf, 0xc7, 0x01, 0x3c,
+  0xa9, 0x41, 0x3b, 0x7b, 0x78, 0xcd, 0x7e, 0x8c, 0x48, 0x18, 0x79, 0xd4,
+  0xc3, 0x3e, 0xb0, 0xd6, 0xc9, 0x78, 0x93, 0x06, 0x58, 0xa4, 0xa1, 0xa6,
+  0xba, 0x00, 0x2a, 0x28, 0xa1, 0x0b, 0x0e, 0xb4, 0x4b, 0x3b, 0x82, 0x30,
+  0x4a, 0xb5, 0x2a, 0xca, 0xa8, 0x6e, 0xfb, 0xc6, 0x44, 0xe4, 0x63, 0xde,
+  0x04, 0x37, 0x54, 0x9c, 0x11, 0x0d, 0x53, 0x93, 0x8c, 0x2b, 0xba, 0x0f,
+  0x3a, 0x21, 0x31, 0x23, 0x6a, 0xe2, 0x2e, 0x9f, 0xd4, 0xd7, 0x8c, 0xe8,
+  0x6b, 0x81, 0x82, 0x8c, 0x0a, 0xe5, 0xa4, 0x8d, 0x4e, 0x2e, 0xe3, 0x28,
+  0x5e, 0x18, 0x4b, 0xb7, 0x88, 0x17, 0x35, 0x11, 0xb0, 0x2b, 0x64, 0xd2,
+  0xf0, 0x3e, 0x70, 0x10, 0xf4, 0xb6, 0x98, 0x9f, 0x1c, 0x9c, 0x0b, 0x09,
+  0x7d, 0xcb, 0x4b, 0x60, 0x03, 0x77, 0xc4, 0x47, 0xcb, 0x3e, 0x1c, 0xd8,
+  0x99, 0xe0, 0x64, 0xe7, 0x1b, 0x49, 0xfa, 0xfd, 0x76, 0xc3, 0x2a, 0xee,
+  0x81, 0xdd, 0xf3, 0xf9, 0x97, 0xcc, 0x37, 0xf8, 0x29, 0x92, 0x9b, 0x7c,
+  0xda, 0x31, 0x77, 0x70, 0xef, 0x74, 0x6f, 0x6d, 0xcc, 0x36, 0x38, 0xba,
+  0xe0, 0xed, 0x86, 0x46, 0xc3, 0x00, 0x40, 0x33, 0xd3, 0x10, 0xed, 0x9e,
+  0x82, 0xfd, 0x6e, 0x5c, 0x49, 0x37, 0x5f, 0xfb, 0x87, 0x5a, 0xcd, 0xf9,
+  0xa8, 0x6e, 0x33, 0xd6, 0x57, 0xfb, 0xc9, 0xde, 0xce, 0xce, 0xb7, 0xc4,
+  0x63, 0x67, 0xbc, 0x29, 0xbb, 0x5f, 0x47, 0x57, 0x48, 0x16, 0x88, 0x69,
+  0x48, 0x95, 0xcb, 0xf4, 0x96, 0x6d, 0xea, 0xba, 0x68, 0x3c, 0x23, 0x46,
+  0x04, 0x58, 0x06, 0xf6, 0xcf, 0xe8, 0xc6, 0x39, 0xf0, 0x01, 0x98, 0x5a,
+  0xdb, 0x58, 0x3b, 0x33, 0xce, 0xeb, 0xc2, 0xce, 0x5f, 0xd3, 0x6f, 0x59,
+  0x40, 0x14, 0xdc, 0x4f, 0x04, 0xc9, 0x86, 0x04, 0x0f, 0xc0, 0x9d, 0x2e,
+  0xcb, 0x0a, 0xe5, 0x38, 0x11, 0xb5, 0xcc, 0x60, 0x80, 0x52, 0x06, 0xb2,
+  0x16, 0xf7, 0xd5, 0xbc, 0x10, 0x78, 0x29, 0x97, 0xf2, 0xe1, 0xa7, 0x13,
+  0xb1, 0x48, 0x4a, 0xb1, 0xc8, 0xca, 0x17, 0xb2, 0xea, 0xff, 0x19, 0x0c,
+  0x92, 0x07, 0x20, 0x87, 0xd0, 0x39, 0x57, 0x25, 0x07, 0x3c, 0x4c, 0x8f,
+  0x69, 0x4f, 0x16, 0x74, 0xa9, 0x75, 0x6d, 0xa0, 0x76, 0xb2, 0xbd, 0x96,
+  0xe7, 0x08, 0xec, 0xf9, 0xc5, 0x54, 0xa5, 0x5d, 0xc0, 0xff, 0x71, 0xcb,
+  0x6c, 0x5a, 0x9e, 0xe2, 0x81, 0x29, 0x54, 0xea, 0xa2, 0x93, 0x5e, 0x38,
+  0x5d, 0xb0, 0xcd, 0xda, 0xdd, 0x46, 0xc1, 0xa0, 0x00, 0xf3, 0x30, 0xb6,
+  0xb8, 0xc6, 0xdf, 0xd2, 0x08, 0xc1, 0x58, 0xa7, 0x02, 0xa7, 0xf4, 0x92,
+  0x08, 0xf8, 0x8b, 0x1f, 0xfb, 0xf4, 0xef, 0xcf, 0x9d, 0x18, 0xaa, 0x5a,
+  0x00, 0xa8, 0x68, 0xf3, 0x70, 0x94, 0x2c, 0xc7, 0xb3, 0xf4, 0x95, 0x58,
+  0xb9, 0x1d, 0x81, 0x75, 0x90, 0x6f, 0xab, 0xa0, 0x80, 0x6d, 0x3c, 0x80,
+  0xdd, 0xdc, 0x05, 0x9b, 0x15, 0xaa, 0x72, 0x37, 0x4a, 0xcd, 0x4a, 0xe2,
+  0x83, 0x35, 0x84, 0x8b, 0x71, 0x2e, 0xec, 0x89, 0x43, 0xd7, 0xda, 0x54,
+  0x33, 0x4e, 0x71, 0x8b, 0xb8, 0x70, 0x2e, 0x6e, 0xc2, 0xe6, 0x3b, 0x5a,
+  0x56, 0xf7, 0x80, 0x89, 0x13, 0xf7, 0x08, 0xe7, 0x03, 0x19, 0xf6, 0x3d,
+  0x2a, 0x70, 0x60, 0xf8, 0xdd, 0x08, 0x38, 0x84, 0xf8, 0x49, 0xe4, 0x7c,
+  0x5d, 0xd0, 0x35, 0x9f, 0x96, 0x25, 0xc9, 0x6a, 0xba, 0xd5, 0x9a, 0xf9,
+  0x4b, 0x63, 0x87, 0xee, 0xc3, 0x96, 0x26, 0xe7, 0xf7, 0xa0, 0xb6, 0x97,
+  0x8b, 0x48, 0xc8, 0x1a, 0xb0, 0x00, 0x3a, 0xd0, 0x91, 0x0d, 0x68, 0x10,
+  0xd3, 0x3f, 0x4c, 0xde, 0x7c, 0x48, 0x05, 0x3a, 0x01, 0x97, 0x6d, 0x6a,
+  0x4c, 0x72, 0x58, 0x54, 0x1a, 0xd2, 0xa2, 0x60, 0x2e, 0x8f, 0x77, 0x05,
+  0x0a, 0xf7, 0x1f, 0x3d, 0x18, 0xaa, 0x14, 0xbe, 0xf5, 0xb9, 0x54, 0x8a,
+  0xca, 0x87, 0x88, 0x0d, 0xa8, 0x8a, 0x5e, 0x26, 0x2f, 0x06, 0xb1, 0xe2,
+  0x0c, 0x78, 0xa6, 0x10, 0xad, 0x52, 0xcc, 0x09, 0x75, 0x59, 0x4c, 0x96,
+  0x63, 0x36, 0xb1, 0x20, 0x38, 0x2f, 0xaf, 0xef, 0x93, 0x91, 0x60, 0x33,
+  0x1a, 0x40, 0x08, 0x9a, 0x76, 0x02, 0x71, 0xab, 0x39, 0x36, 0x43, 0x5a,
+  0xa6, 0x71, 0x5e, 0x2b, 0x74, 0xb4, 0x58, 0x95, 0x71, 0xcf, 0xc0, 0xf7,
+  0xa9, 0x61, 0xa0, 0x65, 0x07, 0xfb, 0x7f, 0x7e, 0xb9, 0xa2, 0x9a, 0x82,
+  0x78, 0x59, 0xa1, 0x0f, 0x7c, 0xac, 0x5d, 0x70, 0x49, 0x2a, 0x41, 0xaa,
+  0x2c, 0xaa, 0x7e, 0x85, 0xe0, 0xf2, 0x56, 0x7b, 0x61, 0x8d, 0x80, 0x59,
+  0x4f, 0x25, 0xf4, 0x07, 0x5d, 0x64, 0x9f, 0x58, 0xba, 0x96, 0x8f, 0xc0,
+  0xdd, 0x75, 0x01, 0x21, 0xc7, 0xcb, 0x28, 0x91, 0x10, 0x0c, 0x14, 0x0b,
+  0x09, 0xd0, 0x13, 0x83, 0x2c, 0x22, 0xe0, 0xc1, 0x61, 0xa4, 0x56, 0x16,
+  0x71, 0xc4, 0x65, 0xa5, 0xfe, 0x52, 0x8c, 0x54, 0xc3, 0x83, 0x60, 0x1a,
+  0x4b, 0xcb, 0xbd, 0xe4, 0xfc, 0x06, 0xe2, 0xb1, 0xc4, 0xdf, 0x25, 0x76,
+  0x05, 0x03, 0x9a, 0x67, 0x35, 0xb8, 0x0d, 0x47, 0xb8, 0xb2, 0xa9, 0x27,
+  0xb9, 0xe2, 0xdc, 0x76, 0x09, 0x67, 0x07, 0x0f, 0x80, 0xa9, 0xad, 0xd5,
+  0xdc, 0x67, 0x83, 0x27, 0x7b, 0x48, 0x9a, 0x0c, 0x99, 0x51, 0xbc, 0x90,
+  0x6d, 0xcf, 0xe5, 0xa0, 0x68, 0xe8, 0x1f, 0xd6, 0xa7, 0xdf, 0x75, 0x08,
+  0xab, 0xce, 0x91, 0x01, 0x3f, 0xb4, 0xe2, 0x05, 0x4c, 0x11, 0x8c, 0x9d,
+  0x8e, 0xef, 0x0d, 0x6b, 0xdd, 0xc7, 0xa2, 0x59, 0x31, 0x61, 0x1a, 0x18,
+  0x3f, 0xdd, 0xa9, 0x19, 0x32, 0x77, 0x83, 0x00, 0xd7, 0xce, 0x19, 0x0a,
+  0xa6, 0x9d, 0x3d, 0x6a, 0x95, 0xf0, 0x5c, 0x69, 0xe2, 0x15, 0x8a, 0xd7,
+  0x3f, 0x95, 0xe5, 0x5e, 0xe5, 0xf3, 0xbe, 0x49, 0xf4, 0x2f, 0xf5, 0x97,
+  0x87, 0x04, 0x40, 0x7e, 0xc3, 0xe9, 0x00, 0xca, 0x57, 0xf5, 0x76, 0x36,
+  0xf3, 0x53, 0x83, 0x6e, 0x1f, 0x50, 0x61, 0x3c, 0x7a, 0x9b, 0xb4, 0xea,
+  0x55, 0x8b, 0x20, 0x8c, 0x69, 0x51, 0x16, 0x75, 0x31, 0x2e, 0xa6, 0xce,
+  0x1e, 0x16, 0xcd, 0xeb, 0x50, 0xaa, 0x96, 0x9a, 0xdf, 0xb2, 0x1e, 0x3a,
+  0xa8, 0xd6, 0x68, 0x92, 0x83, 0x9a, 0x0b, 0x5d, 0x68, 0xde, 0x77, 0xc7,
+  0x26, 0x7d, 0xfc, 0xf6, 0xe0, 0xac, 0x97, 0xb0, 0x7d, 0x50, 0x6a, 0xdb,
+  0xbc, 0x05, 0xd8, 0xb3, 0xe2, 0xdc, 0x37, 0x26, 0x2f, 0x1e, 0x3a, 0x16,
+  0x00, 0x82, 0xc2, 0xdb, 0x6d, 0xb9, 0x6d, 0x64, 0x51, 0x94, 0xcd, 0x85,
+  0xd3, 0x4a, 0xf2, 0x30, 0xf6, 0x01, 0xc3, 0x74, 0xef, 0xc9, 0xe7, 0x4f,
+  0x7b, 0xfc, 0xdb, 0xb3, 0x9d, 0x17, 0x7b, 0xea, 0xd3, 0x3d, 0x3e, 0xba,
+  0x78, 0xd3, 0xd6, 0x38, 0x4a, 0xd2, 0xd6, 0xe4, 0xdf, 0x7e, 0x96, 0x96,
+  0xd7, 0x69, 0x59, 0x23, 0x2a, 0xab, 0x5f, 0xcd, 0xea, 0x45, 0x7f, 0x67,
+  0x67, 0x50, 0x13, 0x43, 0x09, 0x79, 0xfb, 0x93, 0xa7, 0x83, 0x9d, 0xad,
+  0xdf, 0x92, 0x80, 0x60, 0xa2, 0xeb, 0x63, 0x89, 0x93, 0x97, 0x9a, 0xb3,
+  0xd4, 0x75, 0xd4, 0xbd, 0x15, 0x2c, 0x20, 0x8b, 0x2a, 0xf3, 0xf0, 0xb2,
+  0xfa, 0x86, 0x8a, 0xfd, 0x8d, 0x20, 0x5e, 0x4f, 0x00, 0x91, 0x0b, 0xbb,
+  0xed, 0xb7, 0xd2, 0x64, 0xa9, 0x4d, 0xab, 0x99, 0xb7, 0x25, 0xb9, 0xfb,
+  0xe8, 0x88, 0xcb, 0x98, 0xb0, 0x04, 0xa9, 0xf6, 0xc1, 0x28, 0xec, 0x43,
+  0xa5, 0xd9, 0xbd, 0x65, 0x06, 0x84, 0x37, 0xb9, 0x84, 0x34, 0x62, 0x43,
+  0xf1, 0x25, 0x1e, 0x42, 0xf7, 0xdc, 0x7b, 0xd6, 0x2c, 0x49, 0xc5, 0x6b,
+  0xc2, 0x7c, 0xef, 0x17, 0xac, 0x49, 0x73, 0x49, 0xfc, 0xcd, 0x27, 0x22,
+  0x25, 0x1b, 0xae, 0xd5, 0xd5, 0xd6, 0x45, 0x89, 0xa9, 0xac, 0x46, 0xc4,
+  0xc3, 0xc3, 0xdc, 0x69, 0x0f, 0xf3, 0x23, 0x57, 0x49, 0x67, 0x23, 0xf1,
+  0x4b, 0x16, 0xdf, 0x3f, 0x45, 0xf3, 0xe3, 0xc7, 0x37, 0x4d, 0x83, 0xd9,
+  0x0a, 0xaa, 0x06, 0xf0, 0xdd, 0x68, 0x8a, 0x1d, 0xbb, 0x46, 0x63, 0xc2,
+  0x16, 0x3f, 0xea, 0xcd, 0x7d, 0x79, 0x33, 0x43, 0x94, 0xe9, 0x92, 0xf9,
+  0x74, 0xaf, 0x09, 0xe7, 0x15, 0x11, 0x82, 0xd9, 0x29, 0xce, 0x25, 0xb6,
+  0xd2, 0x79, 0x13, 0x17, 0x92, 0x2b, 0x08, 0xb1, 0x4d, 0x32, 0xfb, 0xc8,
+  0x31, 0x86, 0xa4, 0xd4, 0x3f, 0x7f, 0xd2, 0xb5, 0x81, 0x9f, 0x5e, 0x1c,
+  0xed, 0xb3, 0x1e, 0xe2, 0xb3, 0x04, 0xcd, 0x4e, 0x25, 0xf1, 0x80, 0x82,
+  0x87, 0xb5, 0x28, 0x81, 0x53, 0x1d, 0xce, 0xae, 0x17, 0xab, 0x5a, 0xc6,
+  0xf9, 0xb4, 0x28, 0x60, 0x2a, 0xfe, 0x8f, 0x95, 0x49, 0x37, 0x92, 0xc1,
+  0xae, 0xe2, 0x87, 0x38, 0xad, 0x63, 0x85, 0xb3, 0x2e, 0x05, 0x2b, 0x81,
+  0xe1, 0x07, 0x84, 0x3c, 0x3b, 0x0b, 0x25, 0xc4, 0x21, 0x2a, 0xb0, 0xf3,
+  0x79, 0xd1, 0x2d, 0x32, 0xce, 0xca, 0x4e, 0xd0, 0x07, 0xab, 0xdd, 0x70,
+  0xd9, 0x60, 0xb1, 0x58, 0xca, 0xf0, 0xa9, 0x19, 0x6d, 0xe2, 0x2d, 0xc7,
+  0x8b, 0xfa, 0x31, 0xe2, 0x1d, 0xba, 0x30, 0xd3, 0x26, 0xe9, 0xf6, 0x3c,
+  0xea, 0xbd, 0x48, 0x62, 0x12, 0x07, 0xc8, 0xee, 0x21, 0x8e, 0x93, 0x68,
+  0x35, 0x77, 0x9e, 0x2d, 0x32, 0xa6, 0xf5, 0x30, 0x9e, 0x27, 0x60, 0x44,
+  0xce, 0x9d, 0x80, 0x98, 0x59, 0x0b, 0x25, 0xc2, 0x1d, 0xba, 0x00, 0x0e,
+  0x7b, 0xa7, 0x3e, 0xd8, 0xf7, 0x9d, 0x72, 0x67, 0x7c, 0x76, 0x6c, 0xae,
+  0x16, 0x43, 0xac, 0xaf, 0xdb, 0x99, 0x72, 0x21, 0xaf, 0x69, 0x17, 0x9e,
+  0x03, 0x5e, 0x16, 0x6e, 0xc3, 0x9d, 0xcd, 0xc2, 0x63, 0x7c, 0x48, 0xe3,
+  0xc5, 0xe0, 0x81, 0x93, 0xd6, 0x30, 0x97, 0x06, 0x23, 0xe3, 0x32, 0x5c,
+  0x0e, 0xac, 0xb4, 0x51, 0x64, 0x2f, 0xd9, 0xfc, 0xee, 0xfc, 0xcd, 0x9f,
+  0xcd, 0x7c, 0xc4, 0xf6, 0xfb, 0xae, 0x71, 0xbe, 0x35, 0x85, 0x46, 0x02,
+  0x82, 0x0a, 0x28, 0x8d, 0x9d, 0xf0, 0x7f, 0x44, 0x68, 0x77, 0x52, 0x70,
+  0x68, 0xd4, 0x26, 0xca, 0x40, 0xa1, 0x56, 0xa4, 0x6a, 0x11, 0x4f, 0x06,
+  0xcf, 0xd8, 0xb1, 0xf5, 0xe6, 0xf0, 0xd9, 0x93, 0xbd, 0xdd, 0xad, 0x41,
+  0xf7, 0x72, 0x59, 0xfb, 0xa4, 0xf5, 0x77, 0x14, 0x90, 0x7d, 0x5c, 0x80,
+  0xfe, 0x36, 0x8f, 0x7e, 0x38, 0x7b, 0xd7, 0x9c, 0x9f, 0xcc, 0xa8, 0x23,
+  0x25, 0xae, 0x9a, 0xa1, 0xb7, 0x9c, 0x36, 0xda, 0xd7, 0x64, 0x33, 0x39,
+  0x87, 0x5d, 0x58, 0x9e, 0xf5, 0x37, 0x65, 0x8e, 0x33, 0xb5, 0x8e, 0x05,
+  0x59, 0x3f, 0x21, 0x71, 0x98, 0xf4, 0x9c, 0x53, 0x40, 0x09, 0x66, 0xeb,
+  0x2d, 0xec, 0xbf, 0xe6, 0xec, 0x1a, 0x06, 0x71, 0xd6, 0x4e, 0x23, 0x7a,
+  0xa9, 0xe3, 0x91, 0xce, 0xfe, 0x82, 0x6b, 0xc8, 0x74, 0x0b, 0xa8, 0x54,
+  0xce, 0x1e, 0xac, 0xe0, 0x3c, 0x30, 0xe8, 0xd0, 0x6d, 0x4c, 0x1a, 0x54,
+  0x07, 0xa9, 0xcb, 0xb9, 0x81, 0xf4, 0x7a, 0xee, 0xad, 0x84, 0x6a, 0xe6,
+  0x60, 0xa3, 0xac, 0x59, 0x5a, 0xad, 0x5b, 0xb9, 0xdc, 0x22, 0x82, 0x82,
+  0xe1, 0x54, 0x9c, 0xde, 0x44, 0x32, 0x4a, 0xb5, 0x2c, 0x27, 0xcb, 0x19,
+  0xad, 0xc0, 0x57, 0x2e, 0x47, 0x4a, 0xef, 0x7f, 0xb6, 0x00, 0x74, 0x93,
+  0x30, 0x32, 0xb6, 0xa4, 0x3d, 0xdb, 0x69, 0xb4, 0x36, 0xe0, 0x45, 0x08,
+  0x47, 0x89, 0xe8, 0xf7, 0x5d, 0x17, 0xec, 0x8e, 0x78, 0x5b, 0x31, 0x36,
+  0xb6, 0x4d, 0x78, 0x10, 0x02, 0x7e, 0x4b, 0x21, 0x25, 0xab, 0x53, 0x28,
+  0x12, 0x8f, 0xe3, 0x63, 0xd4, 0x21, 0xb0, 0xae, 0x38, 0xfe, 0x41, 0xae,
+  0x5a, 0x38, 0xdb, 0x25, 0x19, 0x03, 0xc4, 0xad, 0x43, 0x5b, 0x6f, 0xb5,
+  0x17, 0x2d, 0xa2, 0xcc, 0xfc, 0xd6, 0x02, 0x3d, 0x44, 0x96, 0x7c, 0x9a,
+  0x6c, 0x42, 0xc4, 0x4b, 0x9e, 0x7d, 0xfe, 0xec, 0xe9, 0x56, 0xd2, 0x8a,
+  0x25, 0xda, 0x8a, 0xd5, 0x08, 0xe1, 0x75, 0x73, 0xe9, 0x8b, 0x28, 0x62,
+  0xc0, 0x85, 0x09, 0x99, 0xd6, 0x7d, 0x7e, 0x08, 0x83, 0x2d, 0xd0, 0x29,
+  0x60, 0x0b, 0x95, 0x45, 0x0d, 0xb7, 0x9b, 0x43, 0x4d, 0x6d, 0x79, 0x79,
+  0x93, 0x0f, 0x47, 0x50, 0x2f, 0x2a, 0x71, 0x40, 0x10, 0x12, 0xd2, 0xcf,
+  0x97, 0x8d, 0xcb, 0x0e, 0x81, 0x45, 0xe4, 0xb8, 0x8e, 0x99, 0x97, 0xb5,
+  0xda, 0x92, 0xd6, 0x6c, 0x95, 0x80, 0x64, 0xe4, 0x85, 0x14, 0xc1, 0xd5,
+  0x26, 0xde, 0x05, 0x41, 0x33, 0x90, 0xbb, 0x33, 0x86, 0x84, 0x4b, 0x3c,
+  0x9d, 0xad, 0x87, 0xb8, 0x8b, 0x9b, 0xeb, 0x28, 0xd8, 0x7d, 0xd8, 0x7e,
+  0x7b, 0x5f, 0x03, 0x8f, 0x7c, 0x31, 0xf3, 0xae, 0xf1, 0x6e, 0x96, 0xcd,
+  0x0c, 0x81, 0x5e, 0x84, 0x84, 0xa2, 0xf4, 0x85, 0xce, 0xc4, 0x3c, 0x24,
+  0x37, 0x3e, 0x47, 0x5b, 0xae, 0x02, 0xc5, 0x31, 0xed, 0x26, 0x35, 0xf4,
+  0x90, 0xc6, 0xc8, 0x56, 0x94, 0x3a, 0x72, 0xc4, 0x66, 0x20, 0x39, 0xed,
+  0xc4, 0x7a, 0xfb, 0xdd, 0x11, 0x65, 0xb7, 0xf6, 0x97, 0x74, 0xda, 0x5a,
+  0x87, 0x15, 0x83, 0x97, 0xf2, 0x5f, 0x0c, 0x89, 0xc0, 0x9a, 0x52, 0xbf,
+  0x9b, 0x5e, 0x93, 0x6c, 0xf2, 0x78, 0xb7, 0xb7, 0xb7, 0x1e, 0x1d, 0xb3,
+  0x3e, 0xf8, 0xd8, 0x18, 0xcf, 0x44, 0x7b, 0x99, 0x87, 0xf5, 0x85, 0xfc,
+  0x10, 0xd0, 0x65, 0xce, 0xa9, 0xeb, 0x5c, 0x15, 0xb7, 0xe7, 0xa3, 0xd8,
+  0x39, 0x15, 0x8b, 0x04, 0xab, 0x48, 0xa2, 0xa7, 0xc6, 0x7a, 0xc9, 0xfc,
+  0x9a, 0x53, 0x57, 0x49, 0x58, 0x90, 0x1a, 0x94, 0x2b, 0x68, 0x7a, 0x09,
+  0x82, 0x2e, 0x3b, 0x35, 0x2b, 0xe7, 0x81, 0xf5, 0x0e, 0x81, 0x3e, 0xc1,
+  0xfc, 0xe4, 0x54, 0x79, 0x27, 0xb5, 0x9c, 0x41, 0x03, 0xbc, 0x17, 0x67,
+  0x76, 0x97, 0x15, 0xbb, 0xa7, 0x5b, 0x35, 0xdf, 0x07, 0x1d, 0x18, 0x3e,
+  0x79, 0x12, 0xc7, 0xc7, 0x3c, 0xdc, 0xf9, 0x3c, 0x22, 0x04, 0x7b, 0x57,
+  0x24, 0x37, 0x58, 0x66, 0xe9, 0x8d, 0x9f, 0xb3, 0xc0, 0x69, 0x5a, 0x7e,
+  0x1d, 0xcb, 0xcc, 0x0e, 0x2e, 0x28, 0x2d, 0xb3, 0x38, 0xa8, 0x88, 0xa3,
+  0x6e, 0x5e, 0x31, 0xab, 0xd1, 0xc9, 0x9f, 0x36, 0x16, 0xb3, 0x27, 0x27,
+  0x94, 0x53, 0x03, 0x62, 0x32, 0x35, 0x17, 0x5c, 0x79, 0x50, 0x8b, 0x60,
+  0x68, 0x2a, 0x1a, 0x98, 0xc4, 0xc5, 0x31, 0xee, 0x7d, 0xa5, 0x1a, 0x6e,
+  0x3e, 0x72, 0x0b, 0xad, 0xe1, 0x73, 0x83, 0xe0, 0x06, 0x9d, 0xc3, 0x68,
+  0x35, 0xcf, 0xea, 0x72, 0xdc, 0xb1, 0x53, 0x39, 0xf7, 0x7a, 0x35, 0x56,
+  0x4b, 0xfa, 0x80, 0x1f, 0xa4, 0xae, 0x3f, 0xe8, 0x2f, 0x60, 0xd1, 0x9a,
+  0xb9, 0xb1, 0xe5, 0xb2, 0x49, 0xa3, 0x09, 0x9d, 0x90, 0x73, 0x36, 0x2a,
+  0x97, 0x54, 0xa0, 0x41, 0x57, 0xe0, 0x91, 0xa2, 0x82, 0xbb, 0x64, 0x7f,
+  0xef, 0x7d, 0x77, 0xd1, 0x6d, 0xf7, 0x8b, 0x4e, 0x9c, 0xae, 0x64, 0x62,
+  0x33, 0x89, 0xa0, 0x0d, 0xc6, 0x20, 0x91, 0x5c, 0x15, 0x1f, 0x07, 0xc1,
+  0xaa, 0x86, 0x00, 0xf4, 0x78, 0x35, 0x44, 0x4b, 0x55, 0x46, 0x46, 0xd7,
+  0xb1, 0x49, 0xc0, 0x0e, 0xc4, 0xf3, 0xdc, 0x7c, 0xb6, 0x95, 0x5c, 0xd6,
+  0x8b, 0xcd, 0xdd, 0x2d, 0xc1, 0x50, 0xd7, 0x7a, 0x57, 0x85, 0xdf, 0xdb,
+  0xae, 0xce, 0xc1, 0x61, 0x62, 0x87, 0xae, 0x5b, 0xf6, 0x04, 0xa3, 0xc6,
+  0x05, 0xe4, 0x39, 0x26, 0x20, 0x9c, 0x03, 0x59, 0x30, 0x57, 0xa8, 0xc7,
+  0x41, 0x56, 0xb4, 0xa5, 0x4a, 0x36, 0x2c, 0x2f, 0x90, 0x98, 0x51, 0x49,
+  0xe1, 0xd4, 0x4d, 0x5f, 0x54, 0x45, 0xee, 0x86, 0x24, 0xcb, 0x25, 0xe4,
+  0xa3, 0x28, 0xa7, 0x93, 0x3e, 0xae, 0x8e, 0xab, 0xb2, 0x58, 0x2e, 0xfa,
+  0x65, 0x04, 0x86, 0x4c, 0xaf, 0x0f, 0x70, 0xf5, 0x58, 0x9a, 0x50, 0xb2,
+  0x8e, 0x0c, 0xa2, 0x75, 0x77, 0xb7, 0x87, 0x49, 0x4a, 0x2b, 0x12, 0x7d,
+  0x64, 0x37, 0x3b, 0x14, 0x7a, 0x80, 0x5c, 0xc8, 0x7c, 0x6c, 0x07, 0x5c,
+  0xea, 0xc9, 0x70, 0x56, 0x4a, 0x96, 0xb8, 0xa0, 0x02, 0xe2, 0x1d, 0x1a,
+  0x37, 0xc1, 0xc6, 0x71, 0xe2, 0x36, 0x4a, 0x65, 0x1d, 0x53, 0xa7, 0x18,
+  0x46, 0x4d, 0x0e, 0x60, 0x3c, 0xf5, 0x42, 0x65, 0x4d, 0x8e, 0x09, 0x94,
+  0x28, 0x11, 0x91, 0x99, 0xc1, 0xd4, 0x85, 0x00, 0x78, 0x6b, 0x63, 0xbe,
+  0xd8, 0x8d, 0xd9, 0x3d, 0x2e, 0xb1, 0x8d, 0x06, 0xd5, 0x25, 0x1b, 0x15,
+  0x4c, 0x8b, 0xf5, 0x86, 0x2d, 0x2f, 0x47, 0xfe, 0x3d, 0x50, 0x63, 0x70,
+  0x55, 0xdf, 0x42, 0xd5, 0xd2, 0x85, 0x6f, 0x5d, 0x1a, 0xf7, 0xa7, 0xef,
+  0x5d, 0x4f, 0xa2, 0xf3, 0x47, 0x4b, 0xc4, 0xae, 0xb4, 0x9a, 0x7e, 0x2d,
+  0xac, 0x5a, 0x24, 0x02, 0x79, 0x42, 0x2b, 0xab, 0x72, 0x6c, 0xa1, 0x24,
+  0xc7, 0x54, 0x48, 0xa9, 0x9c, 0x85, 0xf5, 0x89, 0x61, 0xa5, 0x85, 0x59,
+  0xbc, 0xbd, 0xed, 0x4b, 0x26, 0xeb, 0x2a, 0x3c, 0x0c, 0xad, 0x28, 0x47,
+  0xe9, 0x83, 0xa3, 0x09, 0xa4, 0x71, 0x6d, 0x3d, 0xea, 0x66, 0xe7, 0x06,
+  0x98, 0x62, 0xd9, 0xd7, 0x2e, 0x3a, 0xb4, 0x5c, 0x3b, 0x6a, 0xa4, 0xd5,
+  0x46, 0x5c, 0x89, 0x14, 0x5a, 0x8f, 0xf1, 0xf5, 0x72, 0x7e, 0x43, 0x43,
+  0xe8, 0xc6, 0x66, 0x9b, 0xbb, 0x24, 0xe7, 0x32, 0x55, 0xa9, 0x60, 0x4d,
+  0x5a, 0x4a, 0x1b, 0xbf, 0x0e, 0xa4, 0xc0, 0x5b, 0x4e, 0xb8, 0xd5, 0xd2,
+  0x53, 0x0d, 0xc7, 0x7c, 0x6c, 0x74, 0x7a, 0xd7, 0xc9, 0xa8, 0xdc, 0x02,
+  0xc6, 0x53, 0x36, 0x1d, 0xc2, 0xb3, 0x06, 0xa8, 0x4a, 0x6c, 0xd5, 0x55,
+  0x88, 0xc6, 0xcd, 0x2c, 0xca, 0x70, 0x90, 0x70, 0xcf, 0x68, 0x6c, 0x4f,
+  0xac, 0xe6, 0x37, 0x57, 0xff, 0xd4, 0x6d, 0x05, 0x99, 0x86, 0xe8, 0xad,
+  0x91, 0x91, 0x28, 0x0b, 0xee, 0x47, 0x78, 0xc9, 0x45, 0x53, 0xdc, 0xf6,
+  0xa4, 0x68, 0x2f, 0xf5, 0x1a, 0xe0, 0xdd, 0xec, 0x1b, 0xb1, 0x2c, 0x87,
+  0x08, 0x2f, 0x91, 0x72, 0x61, 0x9b, 0xa4, 0x5d, 0x14, 0xd3, 0x25, 0xe6,
+  0x0d, 0x1f, 0x5d, 0x36, 0x65, 0x2c, 0xd9, 0x2d, 0x3b, 0x50, 0x72, 0x00,
+  0x3d, 0x30, 0xc6, 0xa1, 0xaf, 0xa4, 0xd5, 0x65, 0x9c, 0x03, 0x5f, 0xe7,
+  0x53, 0xc2, 0xbb, 0x54, 0x6b, 0x87, 0xec, 0xaf, 0xd7, 0x84, 0xf0, 0x39,
+  0xa8, 0xb0, 0x9c, 0xde, 0x69, 0x0c, 0xb6, 0x6b, 0x8b, 0x32, 0x3d, 0xa2,
+  0xb1, 0x20, 0x81, 0x05, 0x9a, 0x05, 0x03, 0x5f, 0x90, 0xcf, 0xd5, 0xa1,
+  0x31, 0x65, 0xe3, 0xc1, 0x70, 0x8b, 0x07, 0xc2, 0x0b, 0x23, 0x6b, 0x6d,
+  0x85, 0x75, 0x24, 0xb8, 0x48, 0xa5, 0x7d, 0x1d, 0x16, 0x7b, 0xf0, 0x39,
+  0x40, 0x56, 0x46, 0x34, 0x5b, 0xc2, 0x65, 0xd1, 0xb1, 0x5a, 0xd3, 0xbe,
+  0x4c, 0x97, 0x52, 0xcf, 0x01, 0xee, 0x6f, 0x1e, 0x0d, 0x0b, 0xe7, 0xe9,
+  0x08, 0xbb, 0x33, 0xba, 0x77, 0xd3, 0x34, 0x34, 0x00, 0xce, 0xdd, 0x37,
+  0x6d, 0xba, 0x4b, 0x1e, 0xf6, 0x58, 0xab, 0x9f, 0xef, 0x8c, 0xb1, 0x76,
+  0x28, 0x43, 0x7c, 0x2a, 0x21, 0xbe, 0xcb, 0x8d, 0xf2, 0x13, 0x65, 0xb2,
+  0xcb, 0x88, 0xf5, 0xd5, 0x0d, 0xc6, 0x24, 0x75, 0x98, 0x03, 0x52, 0xa9,
+  0x1e, 0xa5, 0x78, 0x43, 0xba, 0x0c, 0x96, 0xbd, 0x53, 0x34, 0x93, 0xc5,
+  0xe8, 0xdc, 0x14, 0x5c, 0x30, 0x61, 0x05, 0xd6, 0xb0, 0x16, 0x8b, 0x7e,
+  0x67, 0x8f, 0x25, 0x9b, 0xc3, 0xb3, 0x77, 0x47, 0x5f, 0x9f, 0x6e, 0x3d,
+  0xe6, 0xa4, 0x50, 0x7f, 0x3d, 0x07, 0xb5, 0xf0, 0xa1, 0xe2, 0xe3, 0x1d,
+  0x69, 0x87, 0xd1, 0x3a, 0x18, 0x5b, 0x33, 0x0c, 0x49, 0x8c, 0xc5, 0xef,
+  0xf5, 0x24, 0x71, 0x56, 0xce, 0xab, 0x00, 0x7a, 0xba, 0xe1, 0x3f, 0x82,
+  0xdd, 0x18, 0xc9, 0x4b, 0x10, 0xf1, 0x8b, 0xef, 0x9d, 0xaf, 0x87, 0xc3,
+  0xfe, 0xc1, 0xd9, 0x31, 0x97, 0xef, 0x1b, 0xd2, 0xcf, 0x15, 0x35, 0x0e,
+  0x62, 0x09, 0x08, 0x92, 0xef, 0x0d, 0x58, 0x12, 0x08, 0xca, 0xec, 0xbb,
+  0xd3, 0x18, 0x1e, 0x97, 0x78, 0xc0, 0xcd, 0xb7, 0xaf, 0xdb, 0xb3, 0xe3,
+  0x6d, 0xee, 0x8a, 0x3d, 0x24, 0xbc, 0x12, 0x2b, 0xc2, 0x03, 0x97, 0xdd,
+  0xd2, 0x7d, 0x58, 0x57, 0xce, 0x2b, 0x61, 0x02, 0x35, 0x06, 0x92, 0x92,
+  0xe8, 0x09, 0x5f, 0xf2, 0xd2, 0x20, 0x54, 0xe3, 0xf0, 0x5d, 0xb0, 0xcc,
+  0x23, 0x6d, 0xce, 0xea, 0x78, 0xb4, 0x5c, 0x01, 0x6c, 0xe9, 0x15, 0x9c,
+  0x59, 0x54, 0x05, 0x20, 0xc1, 0x4a, 0x1d, 0xcf, 0x6d, 0xbb, 0xde, 0x46,
+  0x9f, 0x98, 0xd7, 0xbe, 0xd6, 0x86, 0xce, 0xe6, 0x28, 0xee, 0x9e, 0xd8,
+  0x59, 0x4b, 0x02, 0x53, 0x59, 0xe3, 0xc6, 0x76, 0x28, 0x53, 0xfd, 0x65,
+  0x7c, 0x74, 0x74, 0x44, 0x21, 0x5e, 0x89, 0x5f, 0x51, 0xa5, 0xc6, 0x7f,
+  0x09, 0x20, 0x78, 0x78, 0x24, 0x82, 0x0c, 0xbc, 0x87, 0xae, 0x79, 0xe5,
+  0x33, 0x3e, 0x5b, 0x4f, 0x1d, 0x24, 0x4e, 0xda, 0xbc, 0x38, 0x3c, 0x0b,
+  0x02, 0x0a, 0x7a, 0x5d, 0x83, 0x87, 0x07, 0xd4, 0xd1, 0x3c, 0xe2, 0xb9,
+  0x6b, 0x7d, 0xf6, 0x10, 0x5a, 0x41, 0x90, 0x4a, 0x12, 0xbb, 0xf7, 0x1a,
+  0x17, 0x9f, 0xf3, 0x16, 0xae, 0xbe, 0xfa, 0xfc, 0x0c, 0x82, 0xdb, 0xcf,
+  0x7d, 0xd8, 0x5a, 0x1a, 0x85, 0x51, 0xcb, 0x27, 0xf1, 0x74, 0x32, 0x5d,
+  0x21, 0x2b, 0x5b, 0xa5, 0x6b, 0x04, 0xd0, 0x22, 0xc3, 0xaa, 0x3b, 0x7e,
+  0x4d, 0xa3, 0x81, 0x20, 0x46, 0xba, 0x67, 0x60, 0x2e, 0xeb, 0x0a, 0x90,
+  0xde, 0xbc, 0xce, 0x9c, 0x1b, 0xe5, 0x08, 0x03, 0xa3, 0x25, 0xda, 0xc8,
+  0x06, 0xc1, 0xaa, 0x68, 0x5d, 0x75, 0x85, 0x49, 0x8c, 0x03, 0x6c, 0xc3,
+  0x71, 0x40, 0x07, 0x14, 0x01, 0x8c, 0xc9, 0xf5, 0x12, 0x61, 0x29, 0xa3,
+  0x7b, 0x43, 0x4f, 0xd2, 0x12, 0x03, 0x65, 0x86, 0x31, 0x37, 0x07, 0xdc,
+  0x29, 0x9b, 0x2a, 0xfa, 0x38, 0x1d, 0xfb, 0x99, 0x66, 0x33, 0x8c, 0xca,
+  0xe2, 0x86, 0x4e, 0x2b, 0x5e, 0x63, 0x99, 0x19, 0xab, 0x2f, 0x32, 0x9c,
+  0xa9, 0x95, 0x74, 0xa3, 0x4c, 0x9c, 0x8b, 0x35, 0x12, 0xcc, 0xca, 0x65,
+  0x62, 0x34, 0xf3, 0xd1, 0x0b, 0x43, 0x52, 0x0f, 0x83, 0x73, 0x0e, 0x0d,
+  0x41, 0x99, 0xc5, 0xef, 0xe5, 0x78, 0x9c, 0xf9, 0xb0, 0xc4, 0xae, 0xaf,
+  0x5c, 0x2b, 0xaf, 0xfc, 0xeb, 0x68, 0xc8, 0x91, 0x45, 0x48, 0x43, 0x91,
+  0x2d, 0x6f, 0x10, 0x93, 0x70, 0xfd, 0x97, 0x44, 0x55, 0xc2, 0xcd, 0x61,
+  0x94, 0x6b, 0x9b, 0x85, 0xb9, 0x80, 0x51, 0xdf, 0x23, 0xfc, 0x58, 0x9a,
+  0xcc, 0xa5, 0x46, 0xb8, 0x48, 0x40, 0xc8, 0xc4, 0x57, 0x5d, 0x53, 0xa0,
+  0x66, 0x56, 0xb1, 0xbb, 0x62, 0x06, 0xc4, 0x32, 0x77, 0x69, 0x4b, 0x08,
+  0x1d, 0xf3, 0x09, 0x6c, 0x0f, 0xe3, 0x04, 0x72, 0x16, 0xbc, 0x3a, 0x64,
+  0xfe, 0x10, 0x42, 0xa7, 0x48, 0x4f, 0x1d, 0x95, 0x42, 0xea, 0x7a, 0xb8,
+  0x88, 0x1b, 0x09, 0x9c, 0x75, 0xb9, 0xc9, 0x40, 0x7c, 0x0f, 0x79, 0x86,
+  0x60, 0x48, 0x27, 0x47, 0x08, 0x9f, 0x89, 0xe8, 0x39, 0x96, 0xc8, 0xca,
+  0x73, 0xcc, 0x15, 0xfd, 0x56, 0xbc, 0x11, 0xaa, 0x34, 0xa6, 0xe6, 0x68,
+  0xd0, 0x89, 0xfb, 0x2a, 0xde, 0x11, 0x01, 0x12, 0x23, 0x52, 0x73, 0xbe,
+  0x01, 0x20, 0xd9, 0x47, 0xae, 0xa4, 0xc7, 0x1b, 0x1f, 0x34, 0xde, 0x13,
+  0xe3, 0x91, 0xe8, 0x63, 0x11, 0x01, 0x92, 0x47, 0x93, 0xf8, 0x87, 0x7a,
+  0xc1, 0xef, 0xfb, 0x9f, 0xef, 0xf4, 0x54, 0x77, 0x84, 0xbd, 0x2e, 0x7c,
+  0x86, 0xa3, 0x99, 0x22, 0x6a, 0x04, 0x9e, 0xa3, 0x4f, 0xdd, 0xa3, 0xed,
+  0xd2, 0x41, 0x2f, 0x06, 0x4f, 0xc3, 0x90, 0x1d, 0x1f, 0xdc, 0x51, 0x24,
+  0x2f, 0x31, 0x8d, 0x7d, 0x5c, 0xaf, 0xfb, 0xfe, 0x53, 0xc6, 0x50, 0x0e,
+  0xff, 0xc6, 0xf7, 0x5f, 0xc4, 0x40, 0x72, 0x53, 0x1f, 0x3f, 0x6e, 0x62,
+  0xb4, 0x98, 0xa5, 0xd7, 0x5d, 0xbb, 0xeb, 0x74, 0x69, 0x01, 0x14, 0x42,
+  0x9b, 0xc3, 0x63, 0xeb, 0x11, 0x20, 0xaa, 0x87, 0xba, 0x5e, 0x77, 0x30,
+  0x8c, 0x83, 0x46, 0x5a, 0x63, 0xb5, 0xcc, 0x05, 0x2b, 0xa2, 0xab, 0x36,
+  0x6b, 0x68, 0x96, 0x42, 0xe9, 0xdb, 0x10, 0xa1, 0xec, 0xf8, 0xf2, 0x24,
+  0x63, 0x57, 0x0d, 0x38, 0x1b, 0x10, 0x0b, 0x45, 0xd5, 0xd4, 0x55, 0x91,
+  0x1d, 0x10, 0x69, 0x6b, 0xb6, 0x49, 0x4b, 0x79, 0x88, 0xd4, 0x7d, 0x42,
+  0xc7, 0x47, 0xf3, 0xce, 0x06, 0x1d, 0xb5, 0x45, 0xee, 0xcd, 0x48, 0xc6,
+  0x1c, 0x44, 0x1d, 0x1a, 0x10, 0x8d, 0x3d, 0xaf, 0xae, 0x75, 0x90, 0x1a,
+  0x6a, 0xd4, 0xac, 0x34, 0x08, 0x09, 0x9a, 0x43, 0xbb, 0xdf, 0x9d, 0x22,
+  0x3a, 0x5e, 0xd5, 0xcd, 0x55, 0xd4, 0xb9, 0xbd, 0x10, 0xfc, 0x0f, 0x89,
+  0x23, 0x70, 0x76, 0xa2, 0x8b, 0x93, 0xe1, 0x36, 0xf8, 0x69, 0xb2, 0xc9,
+  0xf3, 0x4c, 0x86, 0xef, 0x8e, 0x7b, 0x8d, 0xa2, 0xd1, 0x5d, 0x34, 0x5f,
+  0xe7, 0xff, 0xdb, 0x12, 0x82, 0x77, 0xc5, 0xb6, 0x10, 0xfd, 0xeb, 0xa0,
+  0x43, 0x9c, 0x8d, 0x15, 0x73, 0xe7, 0x1d, 0x5f, 0x8f, 0xf8, 0xf3, 0xd6,
+  0x65, 0x0b, 0x35, 0x1e, 0x86, 0xf5, 0x66, 0xba, 0x24, 0xee, 0x15, 0x3a,
+  0xbb, 0x97, 0x18, 0x02, 0xc0, 0x3a, 0x54, 0x0e, 0x34, 0xc2, 0xd3, 0x80,
+  0x0f, 0xec, 0x51, 0x42, 0x59, 0xd7, 0x83, 0xb2, 0xde, 0x25, 0x18, 0x74,
+  0xa7, 0x4e, 0x81, 0x51, 0xe6, 0xb2, 0xb8, 0x16, 0x9d, 0x1a, 0x47, 0x9d,
+  0x51, 0x58, 0x48, 0xac, 0x12, 0x0d, 0x92, 0xbe, 0x1c, 0x7c, 0x7a, 0x6b,
+  0x78, 0x17, 0x2b, 0xa1, 0x5d, 0x1b, 0x58, 0x14, 0x98, 0x57, 0x88, 0x6d,
+  0x2e, 0x9f, 0xd8, 0x79, 0x28, 0x97, 0xd3, 0xa0, 0x88, 0x5d, 0xec, 0x02,
+  0x7a, 0xfa, 0xa2, 0x11, 0x39, 0x43, 0xfc, 0xbe, 0x9e, 0xce, 0xda, 0x7a,
+  0x45, 0xf2, 0xee, 0xe2, 0xe4, 0x6d, 0xd2, 0x31, 0xe7, 0x49, 0xf0, 0x77,
+  0xec, 0xbb, 0x8e, 0x9f, 0x82, 0xd3, 0x32, 0x90, 0x57, 0x42, 0xea, 0x5f,
+  0x7e, 0x35, 0x17, 0x0c, 0xb8, 0xb7, 0xf9, 0xb8, 0x2c, 0x00, 0xe5, 0x28,
+  0x46, 0x60, 0xa5, 0x2a, 0xfa, 0xe2, 0xf8, 0x78, 0x98, 0xdc, 0x65, 0x23,
+  0x47, 0xfc, 0x6d, 0xc9, 0xb2, 0x16, 0xfe, 0x0f, 0x01, 0xb8, 0xcc, 0xb3,
+  0x1a, 0x7a, 0x82, 0x51, 0x0b, 0x50, 0x1e, 0xf0, 0x4e, 0xd6, 0xcf, 0xe6,
+  0xb4, 0xae, 0x19, 0x5b, 0x5f, 0x50, 0x20, 0x69, 0x2a, 0x42, 0xc5, 0x22,
+  0x2b, 0x22, 0x4e, 0x19, 0x19, 0x80, 0x89, 0x04, 0xc2, 0xdb, 0x58, 0xd6,
+  0x1b, 0xa5, 0x95, 0xc3, 0xb9, 0xcb, 0x4b, 0xdc, 0x18, 0x50, 0x16, 0xd4,
+  0x92, 0x7a, 0x93, 0x33, 0x94, 0x48, 0x07, 0x62, 0x43, 0x0b, 0x7e, 0xb7,
+  0xcc, 0x89, 0xf3, 0x49, 0x51, 0xb2, 0x7f, 0x33, 0x28, 0x02, 0xc1, 0xf5,
+  0x93, 0x96, 0x1c, 0x08, 0xce, 0x42, 0xcf, 0x7d, 0x44, 0xe3, 0xbe, 0x2e,
+  0x14, 0x45, 0x48, 0x56, 0x1a, 0x72, 0x85, 0x64, 0x09, 0x73, 0x8e, 0x96,
+  0x82, 0xba, 0x63, 0xfc, 0x5e, 0x16, 0x78, 0x44, 0x43, 0xb3, 0xfd, 0xf0,
+  0x89, 0x8a, 0xea, 0x28, 0x7b, 0x9d, 0x5f, 0xad, 0x28, 0xed, 0x13, 0x53,
+  0x12, 0x31, 0x1a, 0x95, 0x76, 0xca, 0xae, 0x6a, 0xa8, 0xe8, 0xa3, 0x11,
+  0xe0, 0xa1, 0x86, 0x66, 0x48, 0xd4, 0xf6, 0x0f, 0x29, 0x85, 0x2c, 0x02,
+  0x6a, 0x8a, 0xba, 0x29, 0x7e, 0x1d, 0xc7, 0xc6, 0x03, 0x79, 0xe8, 0x5e,
+  0x01, 0xc4, 0x7c, 0xfe, 0xe5, 0x4a, 0x0c, 0x4d, 0xbf, 0x7f, 0x37, 0x7a,
+  0x44, 0xab, 0xc7, 0x42, 0xcf, 0xb0, 0x45, 0x06, 0x6d, 0x54, 0xdf, 0x33,
+  0x66, 0x0d, 0x1f, 0x55, 0x70, 0x70, 0x31, 0x4b, 0x5c, 0x83, 0x08, 0x60,
+  0x64, 0x79, 0x3c, 0x94, 0xcc, 0x55, 0xdb, 0x56, 0x24, 0x0e, 0x2d, 0x90,
+  0x95, 0xa0, 0x45, 0x8e, 0x72, 0x0b, 0x59, 0xf1, 0x8a, 0x50, 0x32, 0x81,
+  0x53, 0xca, 0xb4, 0xce, 0x2d, 0xe0, 0x67, 0x1a, 0x73, 0x2b, 0xa0, 0xe0,
+  0xaa, 0xc1, 0x32, 0x9a, 0xf3, 0xf4, 0xbd, 0xc0, 0xd3, 0xa9, 0x49, 0xb3,
+  0xd0, 0x87, 0xc2, 0x3c, 0xe3, 0xaa, 0x9e, 0x14, 0xcb, 0xda, 0x15, 0x9c,
+  0x81, 0x7a, 0x21, 0x9a, 0xc5, 0x7f, 0xfd, 0xbd, 0x9b, 0x76, 0xf9, 0xe3,
+  0xcf, 0x6c, 0x57, 0x67, 0x18, 0x22, 0x17, 0x3f, 0x63, 0x47, 0xa2, 0xf2,
+  0xb5, 0xd8, 0x40, 0x7d, 0x80, 0xdb, 0x73, 0x55, 0x34, 0x04, 0x7d, 0xb6,
+  0xad, 0x38, 0x5b, 0x64, 0x83, 0x21, 0xff, 0xea, 0xe8, 0x4c, 0x2a, 0xe5,
+  0x02, 0x04, 0x69, 0x60, 0xe2, 0x37, 0xc3, 0x98, 0x96, 0x96, 0x98, 0xac,
+  0x2a, 0x0e, 0x63, 0xb0, 0x5d, 0xcd, 0x42, 0x80, 0x0c, 0x98, 0x24, 0xfe,
+  0x68, 0x9e, 0x01, 0xa4, 0xde, 0x13, 0x29, 0x0a, 0xde, 0x85, 0x38, 0x17,
+  0xba, 0x55, 0xb7, 0xeb, 0x7f, 0x11, 0xa1, 0xf5, 0xe8, 0x72, 0xff, 0x7b,
+  0xe8, 0x7c, 0xa5, 0xd5, 0x4f, 0xd6, 0x31, 0xe0, 0x0f, 0xbf, 0xdb, 0x45,
+  0xac, 0x64, 0x07, 0xb3, 0x49, 0xc2, 0x64, 0x1c, 0x19, 0x3b, 0x3c, 0xb3,
+  0x15, 0xa0, 0xea, 0xcd, 0x1e, 0x11, 0x20, 0xde, 0xc3, 0x65, 0xf5, 0xf7,
+  0x01, 0xfe, 0xfd, 0x71, 0xb7, 0xff, 0xec, 0x67, 0xd7, 0xeb, 0xef, 0x76,
+  0x3f, 0xfc, 0x6e, 0x6f, 0x3d, 0x16, 0x0b, 0xab, 0x19, 0xd0, 0xcd, 0xc8,
+  0xe5, 0x2a, 0xbc, 0xc1, 0xd4, 0x16, 0xe6, 0xcb, 0x59, 0x71, 0xbd, 0xbc,
+  0x48, 0x7e, 0x1b, 0x8c, 0xe4, 0x71, 0xd4, 0x59, 0xb9, 0x94, 0x35, 0xcc,
+  0x98, 0xa1, 0x11, 0xfb, 0x41, 0x6e, 0x27, 0xe7, 0x92, 0xf2, 0xa7, 0x81,
+  0x93, 0x59, 0xbd, 0x2d, 0x9d, 0x6a, 0x0f, 0x48, 0xc7, 0x9f, 0xdc, 0x93,
+  0xe8, 0x23, 0x20, 0xc5, 0x0e, 0x6c, 0xc5, 0x54, 0x5b, 0xa5, 0x5c, 0x45,
+  0x3a, 0xdc, 0xf4, 0xe1, 0x9e, 0x8c, 0xd0, 0xb9, 0x15, 0x33, 0x9c, 0x7a,
+  0x8b, 0xb5, 0x27, 0xfb, 0x91, 0xea, 0xcc, 0xe0, 0x4d, 0x42, 0xef, 0xfe,
+  0x0c, 0xb5, 0x41, 0xc8, 0xa3, 0x27, 0x28, 0x68, 0x2b, 0x0d, 0xfd, 0xe6,
+  0x52, 0x4d, 0x52, 0xf1, 0x13, 0x5c, 0x65, 0x10, 0x41, 0x3d, 0xcd, 0xa0,
+  0x5c, 0xb7, 0xaf, 0xd5, 0xcd, 0x53, 0x5f, 0x84, 0x7c, 0x9a, 0x35, 0x6a,
+  0x0f, 0x85, 0x2f, 0x07, 0x71, 0x3a, 0x99, 0x18, 0xbf, 0x39, 0x1a, 0x6f,
+  0x59, 0x77, 0xc1, 0x9c, 0x06, 0x5b, 0xd1, 0x74, 0x31, 0x45, 0x5e, 0xd5,
+  0xcc, 0xe7, 0xf4, 0xd6, 0x7b, 0x75, 0x57, 0xa2, 0x8b, 0x1b, 0x13, 0x68,
+  0xaf, 0x6a, 0xaa, 0x89, 0x60, 0x12, 0x29, 0x90, 0xba, 0x6a, 0xa4, 0x61,
+  0xee, 0x72, 0x00, 0xb2, 0xd1, 0xa8, 0xf3, 0xd4, 0x6d, 0x4e, 0x33, 0x4b,
+  0x35, 0x5b, 0x66, 0x25, 0xd2, 0xb9, 0x82, 0x68, 0x31, 0xae, 0x22, 0x57,
+  0x77, 0x11, 0xf7, 0x4f, 0x27, 0x37, 0x37, 0xa0, 0xf4, 0x68, 0x56, 0x58,
+  0xb8, 0xaa, 0x02, 0x62, 0xee, 0xd2, 0x77, 0x30, 0x17, 0x36, 0xe8, 0xb1,
+  0xdd, 0x4e, 0xb0, 0xe0, 0xc1, 0xaa, 0x56, 0xa1, 0xcc, 0x69, 0x84, 0x24,
+  0x1d, 0x98, 0x9e, 0x33, 0xae, 0xd0, 0x8b, 0x53, 0x94, 0x5d, 0x33, 0x17,
+  0x3b, 0xc3, 0x3f, 0x36, 0x31, 0xdd, 0x5d, 0xd2, 0xce, 0x6a, 0xb0, 0xf6,
+  0x41, 0xf3, 0xfa, 0x6f, 0xd4, 0x07, 0x76, 0x69, 0xdf, 0xac, 0x74, 0x8c,
+  0xaf, 0x8b, 0xa2, 0x8a, 0xba, 0x48, 0xfc, 0x0c, 0x39, 0x9f, 0x89, 0x0d,
+  0xea, 0x2b, 0x40, 0xfa, 0x0d, 0x28, 0x39, 0x90, 0x71, 0x3b, 0xa1, 0x05,
+  0x24, 0xe6, 0xe6, 0xfe, 0x1a, 0xf3, 0x6b, 0xdc, 0x42, 0x2a, 0x90, 0xf1,
+  0x38, 0xf0, 0xfb, 0x95, 0x31, 0x81, 0x0e, 0x00, 0x7f, 0xd5, 0xf2, 0xa8,
+  0x04, 0x17, 0x2e, 0x4a, 0x14, 0x4f, 0x5e, 0x01, 0x0c, 0xc1, 0xcb, 0x19,
+  0x49, 0x9e, 0xa9, 0x86, 0x21, 0x7c, 0x82, 0x98, 0x05, 0xc1, 0xd0, 0x3a,
+  0xe6, 0xed, 0x40, 0xb8, 0xec, 0xef, 0xf7, 0x76, 0x56, 0xe1, 0xa8, 0xa3,
+  0x21, 0x2b, 0xb0, 0x89, 0xd3, 0x58, 0xd9, 0x71, 0x14, 0x6b, 0x81, 0xaf,
+  0xe4, 0x95, 0x71, 0x6e, 0x29, 0x0c, 0xbb, 0x7d, 0xd0, 0x4b, 0xc7, 0x82,
+  0xe9, 0x3b, 0x8e, 0x26, 0x29, 0xfc, 0x5a, 0xce, 0xfc, 0x18, 0x63, 0xa6,
+  0xfb, 0x1f, 0xc2, 0xc4, 0x5e, 0x7f, 0x94, 0xd1, 0xdd, 0xdd, 0x9e, 0xe3,
+  0xa6, 0xa4, 0x20, 0x08, 0x42, 0x49, 0x33, 0xd6, 0x16, 0x7d, 0x7d, 0xc5,
+  0xef, 0x24, 0x17, 0x6c, 0xb1, 0xc3, 0x89, 0x38, 0x3d, 0x78, 0x7f, 0xf1,
+  0x4d, 0xb2, 0x37, 0xd8, 0xd1, 0xfd, 0x7d, 0x10, 0x27, 0x41, 0x9c, 0xf1,
+  0x8d, 0x36, 0x7c, 0x69, 0x7a, 0xa8, 0x47, 0x7f, 0x59, 0xce, 0x9b, 0x95,
+  0x8e, 0x62, 0xf1, 0x0b, 0x5d, 0x82, 0x6c, 0x84, 0x9e, 0x1a, 0x87, 0x14,
+  0x7e, 0x21, 0xb8, 0xb1, 0xac, 0xd1, 0xf6, 0x97, 0x5d, 0x19, 0x94, 0x1b,
+  0x5c, 0x55, 0x16, 0x8d, 0xd9, 0xa2, 0x8e, 0x56, 0x87, 0x6b, 0x30, 0x55,
+  0x66, 0xa0, 0x2f, 0x33, 0x0d, 0x82, 0xa8, 0xdb, 0xe5, 0x56, 0xcf, 0xdf,
+  0x1c, 0xb6, 0x9a, 0x7b, 0xfe, 0xd9, 0xb3, 0x9d, 0xdf, 0x32, 0xd0, 0xb0,
+  0x51, 0xa6, 0xed, 0x5f, 0x56, 0x06, 0xd3, 0x6a, 0xbb, 0xfd, 0xb2, 0x1a,
+  0x98, 0x71, 0x98, 0x9a, 0x76, 0x36, 0xbb, 0x8f, 0xe3, 0x0c, 0x2b, 0x7c,
+  0x42, 0xaa, 0xce, 0x2b, 0x4d, 0xfd, 0x62, 0xfd, 0x06, 0xa1, 0xbc, 0xcb,
+  0x79, 0x24, 0x78, 0x46, 0x74, 0x15, 0xd1, 0x03, 0xa4, 0xdc, 0x11, 0xcd,
+  0xf0, 0xf0, 0xf4, 0xdd, 0xbb, 0xa3, 0xc3, 0x0b, 0x5f, 0xd5, 0xed, 0xce,
+  0x2a, 0x07, 0x33, 0x33, 0x4d, 0x9d, 0x00, 0x1e, 0x2f, 0x83, 0xa9, 0x45,
+  0xd8, 0xbc, 0x49, 0x12, 0x7f, 0xdc, 0xa9, 0xf8, 0x6d, 0x5f, 0xaa, 0xe5,
+  0x44, 0x52, 0xbc, 0xf4, 0x4a, 0x89, 0x98, 0x70, 0xfe, 0x6f, 0xf5, 0xc3,
+  0x7f, 0xa0, 0xfa, 0xe1, 0x37, 0x1a, 0x97, 0xd6, 0x02, 0x65, 0x8f, 0x55,
+  0xf7, 0xd3, 0xe2, 0x27, 0x41, 0xc0, 0x5a, 0xf7, 0xfe, 0x72, 0xe4, 0xe0,
+  0x13, 0xb7, 0x91, 0x80, 0x51, 0x35, 0x6e, 0x1b, 0xdb, 0xdf, 0x55, 0x15,
+  0x0d, 0x7f, 0xf3, 0xaa, 0x77, 0xab, 0x63, 0xe3, 0x50, 0xb6, 0xd1, 0xc9,
+  0xb7, 0xfd, 0x45, 0xcf, 0x38, 0x42, 0x8d, 0x1c, 0xdd, 0x69, 0xcc, 0x3f,
+  0xaa, 0x75, 0x95, 0x95, 0x8a, 0x8d, 0xf5, 0x6c, 0xf6, 0x3f, 0xba, 0x77,
+  0x63, 0xe0, 0x3d, 0x1c, 0x6b, 0xd8, 0x09, 0x7a, 0x9c, 0xf7, 0xb9, 0x29,
+  0x6f, 0x1f, 0xd4, 0xcc, 0x55, 0x2d, 0xe3, 0x22, 0x67, 0x82, 0x47, 0x02,
+  0x62, 0x2e, 0xc5, 0xe5, 0xe9, 0x8e, 0x50, 0xc7, 0x06, 0xe6, 0xb4, 0xcd,
+  0x19, 0xdd, 0xe0, 0x53, 0x03, 0x87, 0xc9, 0xa5, 0x1e, 0x4c, 0x21, 0xc5,
+  0xc1, 0xf8, 0x40, 0xbb, 0x9c, 0x51, 0x8d, 0xdf, 0x45, 0x27, 0x5d, 0xfb,
+  0xe1, 0x94, 0x55, 0xe7, 0xb2, 0xc0, 0x01, 0x62, 0xe1, 0x8d, 0xab, 0x7a,
+  0xf8, 0xe3, 0x11, 0x2c, 0x43, 0x8b, 0x3b, 0x44, 0x24, 0x13, 0x67, 0xfa,
+  0x70, 0x69, 0x52, 0xf2, 0xa6, 0x16, 0x2c, 0x51, 0x3b, 0x74, 0x60, 0xfc,
+  0x0e, 0x64, 0x75, 0x18, 0x35, 0xe2, 0x3a, 0xad, 0x88, 0xab, 0x86, 0xc3,
+  0xa5, 0x4b, 0x65, 0x2b, 0x55, 0x17, 0x01, 0xa3, 0x3f, 0xc3, 0xf6, 0x5c,
+  0xd6, 0x0b, 0x4d, 0x56, 0x5f, 0x95, 0x28, 0x23, 0xa8, 0x8b, 0xe7, 0x62,
+  0x77, 0xab, 0x1c, 0x92, 0x8a, 0xb8, 0x4c, 0x05, 0x70, 0x88, 0xe4, 0xe6,
+  0x6d, 0x0e, 0xe6, 0x9e, 0x03, 0x4b, 0xa3, 0x80, 0xaa, 0xc9, 0xbc, 0x70,
+  0x85, 0x0d, 0x16, 0x5b, 0xc0, 0x4b, 0x46, 0x4d, 0x2b, 0x0b, 0x57, 0xa3,
+  0xd7, 0xcc, 0x07, 0x51, 0x6a, 0x2c, 0xad, 0xa0, 0xcb, 0xa2, 0xda, 0x19,
+  0x47, 0x85, 0xb4, 0x0f, 0xdb, 0x82, 0xcb, 0x28, 0x8d, 0x7d, 0x11, 0xb5,
+  0x5a, 0xea, 0x49, 0x71, 0xa9, 0xa7, 0x46, 0xbd, 0x24, 0xa9, 0x64, 0xc0,
+  0x4b, 0x09, 0xec, 0xff, 0x38, 0x7e, 0xd2, 0x78, 0x8a, 0x54, 0x8d, 0x8d,
+  0x90, 0x17, 0x58, 0x6e, 0x0b, 0xfb, 0xd0, 0x69, 0xa1, 0x0c, 0x4f, 0x02,
+  0xfe, 0x74, 0x76, 0x38, 0xc3, 0xae, 0x9f, 0x56, 0x37, 0xd5, 0x6a, 0x3c,
+  0x3a, 0x8d, 0x4f, 0xa8, 0x59, 0x88, 0xa3, 0xd1, 0x05, 0xa5, 0xd1, 0xac,
+  0x55, 0x41, 0x49, 0xaf, 0xc3, 0x51, 0x62, 0xaf, 0x9a, 0xcd, 0xb9, 0x2d,
+  0xea, 0xe0, 0x55, 0x76, 0x94, 0x7a, 0x57, 0x21, 0xad, 0xa3, 0xec, 0xcb,
+  0xd7, 0x83, 0x2c, 0x59, 0x47, 0xed, 0xb4, 0xf5, 0x30, 0x49, 0x55, 0xf3,
+  0xba, 0xed, 0x55, 0xd8, 0xaf, 0x69, 0xa8, 0x3e, 0xbb, 0xa7, 0x2b, 0x11,
+  0x36, 0x14, 0x35, 0x51, 0x6f, 0x36, 0x11, 0x54, 0xca, 0xfc, 0xb7, 0x8b,
+  0x8f, 0xeb, 0xe6, 0xfd, 0xc0, 0xa8, 0x76, 0x5f, 0xec, 0x0d, 0x76, 0x9f,
+  0x7f, 0x3e, 0xd8, 0xdd, 0x19, 0xec, 0x36, 0x46, 0xc7, 0x97, 0x3a, 0x22,
+  0xdd, 0xc2, 0x76, 0x22, 0x77, 0x61, 0xcc, 0xa7, 0x17, 0x76, 0x30, 0xbb,
+  0x1f, 0x04, 0xc1, 0x87, 0x9d, 0x2e, 0x34, 0x40, 0xb1, 0xdd, 0x72, 0x3f,
+  0xc0, 0x60, 0x53, 0x52, 0x5b, 0x20, 0x54, 0xd3, 0xa1, 0x1e, 0x05, 0x9b,
+  0x6a, 0x36, 0x34, 0x53, 0x38, 0x22, 0x6e, 0x9c, 0x20, 0xd9, 0xce, 0x30,
+  0x19, 0xe9, 0xdc, 0x04, 0x0e, 0x9c, 0xdf, 0x18, 0x5b, 0xd8, 0x42, 0x04,
+  0xc2, 0x20, 0x8a, 0xb3, 0xd3, 0xf3, 0x0b, 0xc5, 0x40, 0x13, 0xb6, 0x90,
+  0x56, 0xb7, 0x03, 0xf7, 0x24, 0xdb, 0x19, 0x5d, 0x31, 0xad, 0x88, 0xd1,
+  0x17, 0x0f, 0x1c, 0x9d, 0x9d, 0x5f, 0xb4, 0x91, 0xf2, 0x5c, 0xd3, 0x21,
+  0x1c, 0x53, 0xbf, 0xaf, 0x2e, 0xd9, 0x7e, 0xb6, 0xe8, 0xc2, 0x8f, 0x72,
+  0x33, 0x40, 0x93, 0xc8, 0x38, 0x00, 0x05, 0x6f, 0xff, 0xf1, 0x8f, 0x8f,
+  0x54, 0x1b, 0xde, 0x7d, 0x31, 0x78, 0xe6, 0xed, 0x80, 0x82, 0x34, 0x93,
+  0xac, 0xef, 0xff, 0xc8, 0xb9, 0x95, 0x3f, 0xf7, 0x7f, 0xa4, 0x3f, 0x7f,
+  0x5e, 0x77, 0x5c, 0x14, 0x11, 0xc2, 0xdd, 0xb2, 0x8d, 0x3c, 0x47, 0x4b,
+  0x00, 0xc4, 0xa3, 0x2e, 0x91, 0x86, 0xe5, 0x32, 0xc4, 0x92, 0xf0, 0x61,
+  0x2d, 0xd5, 0x90, 0x50, 0x58, 0x40, 0xdf, 0x45, 0x57, 0xc6, 0x11, 0xf0,
+  0x16, 0x16, 0x8a, 0x5c, 0x8e, 0xa1, 0x7f, 0xb9, 0x67, 0xf5, 0xfe, 0x14,
+  0x92, 0x07, 0x92, 0x80, 0x82, 0xba, 0x08, 0x1f, 0x1f, 0x74, 0x62, 0x83,
+  0xd5, 0xfe, 0xa4, 0x6c, 0x5e, 0xb0, 0x05, 0x48, 0x90, 0x42, 0x81, 0x71,
+  0xb1, 0x10, 0x8b, 0xd0, 0x94, 0xb9, 0xa0, 0x52, 0x97, 0xc6, 0x1f, 0x0d,
+  0x91, 0xae, 0x6e, 0x30, 0x63, 0x05, 0xd3, 0x08, 0x70, 0x3f, 0x79, 0x8c,
+  0x86, 0x3c, 0x81, 0x82, 0x1c, 0x96, 0x41, 0xd3, 0x50, 0x11, 0x50, 0xff,
+  0xf6, 0xe5, 0xe2, 0xba, 0xa4, 0xe6, 0x1f, 0x40, 0x98, 0xa6, 0xa7, 0xe4,
+  0x19, 0x47, 0xe8, 0x01, 0x36, 0xf1, 0x6f, 0xa9, 0xc1, 0xa4, 0xf5, 0x75,
+  0x9f, 0xd5, 0xe5, 0xb6, 0x58, 0xe5, 0xe1, 0xc6, 0x78, 0xf7, 0x30, 0x47,
+  0x18, 0xd6, 0x61, 0x5e, 0x72, 0x75, 0x65, 0x68, 0x59, 0xb6, 0x07, 0x83,
+  0x6d, 0x08, 0x9c, 0xdb, 0xf4, 0x23, 0x0f, 0x50, 0x71, 0xda, 0xc5, 0x04,
+  0x48, 0x85, 0x47, 0x5f, 0x08, 0x81, 0xd1, 0xda, 0xf2, 0x3e, 0x58, 0xb8,
+  0xfa, 0xeb, 0x92, 0xd3, 0x88, 0x4a, 0xc8, 0x1e, 0x82, 0x68, 0x86, 0x62,
+  0x9b, 0x4e, 0xb7, 0xeb, 0x9e, 0x22, 0x0b, 0x2c, 0xae, 0x78, 0x3b, 0xbd,
+  0x10, 0xea, 0x01, 0xe2, 0x25, 0xf6, 0x04, 0x93, 0xc8, 0x6b, 0x43, 0x82,
+  0x62, 0x3c, 0xb9, 0xb4, 0x7e, 0x30, 0xdf, 0xe1, 0xe9, 0x5e, 0x33, 0x0d,
+  0x50, 0xa1, 0xcd, 0x56, 0xd4, 0x4c, 0xe4, 0xcb, 0xd3, 0xe2, 0xc6, 0x4b,
+  0x46, 0x9e, 0xad, 0x39, 0xad, 0xff, 0xb3, 0xbd, 0x27, 0x3b, 0xdb, 0xcf,
+  0x07, 0x4f, 0x07, 0x7b, 0x2e, 0xd6, 0x91, 0x38, 0x16, 0xed, 0x4f, 0xcd,
+  0x58, 0x77, 0xab, 0x04, 0x61, 0xba, 0x51, 0x8a, 0x24, 0x00, 0x72, 0x53,
+  0xe9, 0xc0, 0xa7, 0xf3, 0x01, 0xb6, 0x6d, 0x37, 0xcc, 0xc2, 0x1b, 0x44,
+  0xea, 0x25, 0x43, 0x36, 0xe4, 0xc4, 0x33, 0x75, 0xc1, 0x21, 0xca, 0x8f,
+  0xe1, 0x12, 0x47, 0x39, 0xc9, 0x51, 0x35, 0x4a, 0xe4, 0xa1, 0x4a, 0x51,
+  0x36, 0x72, 0xe5, 0x27, 0x19, 0xa3, 0x93, 0xe7, 0x01, 0x37, 0x4a, 0x44,
+  0x47, 0x94, 0xc1, 0xb3, 0xf3, 0x28, 0x08, 0x03, 0xe3, 0x4c, 0xbf, 0x5c,
+  0x8a, 0x1e, 0x49, 0x15, 0x35, 0x48, 0x36, 0x63, 0x44, 0xe2, 0x7d, 0x43,
+  0xa7, 0x95, 0xdd, 0xfe, 0x5d, 0xcc, 0x1c, 0xbd, 0xea, 0xd9, 0x79, 0xec,
+  0x62, 0x89, 0x52, 0xc1, 0x00, 0xe4, 0x65, 0xe4, 0x88, 0x11, 0xfd, 0x40,
+  0xf2, 0xc9, 0xc4, 0x31, 0xc7, 0xf3, 0x8e, 0x55, 0x23, 0xf6, 0xc5, 0xbc,
+  0xfd, 0x91, 0x50, 0x5f, 0x33, 0x20, 0x4b, 0x24, 0x64, 0x46, 0x82, 0x31,
+  0x85, 0xa7, 0xfa, 0x42, 0xe0, 0x51, 0xbf, 0xe0, 0x43, 0xf5, 0x9b, 0x15,
+  0xe0, 0xee, 0x57, 0x13, 0xc4, 0x93, 0x7f, 0x3e, 0x41, 0xec, 0xfd, 0x5f,
+  0x82, 0xf8, 0x57, 0x12, 0xc4, 0x8b, 0x18, 0x41, 0x3c, 0xf9, 0xd5, 0x04,
+  0xf1, 0xf4, 0x9f, 0x4f, 0x10, 0x4f, 0xfe, 0x2f, 0x41, 0xfc, 0x0b, 0x09,
+  0x62, 0xef, 0x79, 0xeb, 0xca, 0x80, 0x42, 0x4e, 0x77, 0xbe, 0xe9, 0xe5,
+  0x5f, 0x44, 0xae, 0xd6, 0x2a, 0x49, 0xda, 0xe0, 0x89, 0x02, 0x8c, 0x93,
+  0x2b, 0x82, 0xb0, 0x57, 0xea, 0x39, 0x2c, 0x08, 0x98, 0xb6, 0x86, 0x59,
+  0xdb, 0xb5, 0xe9, 0x00, 0xfb, 0x3a, 0x9d, 0x0e, 0x92, 0x33, 0xf7, 0x16,
+  0xa7, 0xff, 0x02, 0x57, 0x83, 0xa3, 0x10, 0xa7, 0xd9, 0x25, 0x6f, 0x05,
+  0x0b, 0x73, 0x3d, 0xfe, 0x92, 0x45, 0x4f, 0xd8, 0xdd, 0x3a, 0x39, 0x5c,
+  0x1c, 0xb8, 0x68, 0xd1, 0x71, 0xdc, 0x4e, 0xca, 0x4b, 0xeb, 0x72, 0x3d,
+  0x0d, 0x60, 0x60, 0x83, 0xae, 0x71, 0xe0, 0xfb, 0xfb, 0x7a, 0x83, 0x8b,
+  0x32, 0xeb, 0xd6, 0x3e, 0xfc, 0x28, 0x81, 0x27, 0x7f, 0xcb, 0xca, 0x22,
+  0x31, 0x00, 0x1d, 0x85, 0x3d, 0xe5, 0x2a, 0xa1, 0x26, 0x35, 0xf9, 0x0f,
+  0xd1, 0x6b, 0x47, 0x4f, 0xfb, 0x23, 0xd7, 0xe1, 0x16, 0xa8, 0x5b, 0x00,
+  0x6a, 0xb9, 0xcc, 0xd3, 0x79, 0xc3, 0x0f, 0xe2, 0x17, 0xce, 0x74, 0x0a,
+  0xce, 0x6e, 0xeb, 0xe4, 0x2c, 0x61, 0x23, 0x61, 0x7a, 0x09, 0x23, 0x4b,
+  0x9d, 0xaa, 0x7e, 0x29, 0x50, 0x7f, 0x32, 0x1c, 0x57, 0x19, 0x6c, 0x10,
+  0xd1, 0x74, 0x5e, 0x67, 0xf3, 0x7b, 0xcb, 0xed, 0xf1, 0xa1, 0x37, 0x6c,
+  0x7b, 0xb8, 0x55, 0xfb, 0x89, 0x8b, 0x22, 0xe7, 0x30, 0x49, 0x12, 0x99,
+  0xdc, 0x10, 0xbb, 0x43, 0x6a, 0x8e, 0xb9, 0x8e, 0x44, 0x93, 0xbf, 0x72,
+  0xcb, 0xa0, 0x29, 0x2a, 0xe1, 0x5a, 0x6c, 0x72, 0xa2, 0xaa, 0x39, 0x66,
+  0xb9, 0x3f, 0x6b, 0xf1, 0xc1, 0x65, 0xd8, 0xe2, 0x00, 0x15, 0xb1, 0x10,
+  0x55, 0xcb, 0xd1, 0x5f, 0x24, 0xaa, 0x8f, 0x08, 0x73, 0x9a, 0xd6, 0x7c,
+  0x10, 0xc3, 0x0a, 0xea, 0xa8, 0x00, 0xb7, 0x1c, 0x89, 0x10, 0x58, 0x77,
+  0x9b, 0xa3, 0x0f, 0xd9, 0x65, 0xec, 0x8a, 0xe8, 0x29, 0x9d, 0x69, 0x40,
+  0x2c, 0x06, 0xd5, 0x99, 0x54, 0x10, 0xd5, 0xd9, 0xd9, 0x77, 0x3b, 0x4f,
+  0x50, 0xb4, 0x2a, 0x8d, 0x00, 0x0a, 0x37, 0xcb, 0xad, 0xa6, 0x8a, 0xf6,
+  0x16, 0xbf, 0x8a, 0xc7, 0x57, 0xb6, 0x45, 0xd4, 0xda, 0xe3, 0x32, 0x72,
+  0xbd, 0x3f, 0xe2, 0x47, 0x5c, 0xe5, 0x74, 0xea, 0x0e, 0x16, 0xda, 0x82,
+  0xdd, 0xf1, 0x38, 0x1f, 0x0d, 0x7e, 0x7d, 0x55, 0x07, 0xaf, 0xf0, 0xad,
+  0xf4, 0xf0, 0x70, 0xdb, 0xec, 0xa7, 0xff, 0x05, 0x1d, 0xbc, 0x9f, 0x1b,
+  0x44, 0x8d, 0x91, 0xf9, 0xc2, 0x01, 0xde, 0x25, 0x77, 0x69, 0x39, 0x97,
+  0x40, 0x75, 0x31, 0x8a, 0xaa, 0x79, 0x2c, 0x41, 0x72, 0x30, 0x70, 0xd1,
+  0x22, 0x72, 0x74, 0x7a, 0x09, 0x5b, 0x5f, 0xc2, 0x16, 0x3f, 0xec, 0xad,
+  0x40, 0x01, 0x28, 0x82, 0xb5, 0x05, 0x76, 0x2f, 0x8a, 0x5a, 0xb0, 0xb4,
+  0x11, 0x1f, 0x0c, 0x9d, 0xac, 0xc4, 0x05, 0x11, 0xa9, 0xaa, 0x62, 0x1b,
+  0x61, 0xd5, 0x44, 0xd1, 0x2c, 0x1a, 0x5c, 0x2e, 0x20, 0x94, 0x2b, 0xa8,
+  0x96, 0xc5, 0x39, 0x32, 0xd8, 0xa2, 0x51, 0xae, 0xf4, 0xdc, 0x8e, 0x20,
+  0xe3, 0xf0, 0x26, 0xbe, 0xf1, 0x1c, 0x18, 0xf7, 0x6d, 0x91, 0xfb, 0x9a,
+  0xd9, 0x0f, 0x16, 0xf7, 0x58, 0x5d, 0xaa, 0xaa, 0x17, 0x14, 0xa2, 0x4d,
+  0xab, 0x30, 0xcd, 0xb0, 0x1b, 0x7e, 0xed, 0xac, 0x16, 0xa4, 0x40, 0x02,
+  0x69, 0x87, 0x88, 0x78, 0x9e, 0xba, 0x4a, 0x87, 0x7e, 0x1b, 0x78, 0x94,
+  0x52, 0x76, 0x0d, 0xca, 0x09, 0x4a, 0xfb, 0x16, 0x31, 0x3c, 0xa4, 0x15,
+  0x6e, 0xf0, 0x16, 0x9c, 0xcc, 0x5e, 0xe7, 0x3e, 0xe9, 0x1b, 0xbd, 0xbb,
+  0x7b, 0x25, 0x7e, 0xad, 0xd8, 0x42, 0xe1, 0x4a, 0x71, 0xab, 0xcb, 0xb5,
+  0x0c, 0x89, 0x51, 0x41, 0x0b, 0xe3, 0x4c, 0x5f, 0xa9, 0x93, 0x30, 0x26,
+  0x3d, 0x6b, 0x85, 0x3f, 0xf4, 0xe8, 0xe1, 0xd3, 0xe8, 0x46, 0xc3, 0x44,
+  0x8a, 0xb3, 0x36, 0x98, 0x15, 0x7f, 0x23, 0x5d, 0x2e, 0x1d, 0x14, 0xe5,
+  0x55, 0x9c, 0xe4, 0xad, 0x6c, 0x63, 0xfb, 0x61, 0x7b, 0xfa, 0x00, 0xe9,
+  0x43, 0x4a, 0xde, 0x88, 0xcb, 0x99, 0x3b, 0xa8, 0x0c, 0x3f, 0x11, 0xad,
+  0x77, 0x21, 0x05, 0xd3, 0x51, 0xa5, 0xf0, 0xe8, 0xc3, 0xfb, 0x77, 0xc3,
+  0xf7, 0x67, 0xb0, 0x7b, 0x1c, 0xbd, 0xfe, 0x70, 0x76, 0x7e, 0xea, 0x48,
+  0xf2, 0xe2, 0xf4, 0xf0, 0x34, 0xa8, 0x0d, 0x1f, 0x52, 0x06, 0x07, 0xfb,
+  0xb6, 0x10, 0xb4, 0x03, 0x76, 0xf2, 0x31, 0x00, 0xa1, 0xdb, 0xc4, 0xa8,
+  0x03, 0xce, 0xff, 0xbd, 0xab, 0x93, 0x1b, 0x10, 0x1a, 0x2b, 0xb2, 0x6c,
+  0x66, 0x64, 0xa3, 0x57, 0x9a, 0x5c, 0x2d, 0xd9, 0x0a, 0x28, 0x41, 0x93,
+  0x56, 0x87, 0xd8, 0x81, 0xc7, 0x57, 0x59, 0xe6, 0x37, 0x57, 0xe0, 0xd4,
+  0x5d, 0xea, 0xb7, 0xef, 0xa9, 0xa1, 0x94, 0x3e, 0x8b, 0x48, 0x18, 0x82,
+  0x4e, 0xf3, 0xb8, 0x9c, 0x11, 0x52, 0x84, 0x5d, 0x0b, 0xc1, 0x9a, 0x72,
+  0xfe, 0x8f, 0x89, 0x8b, 0x92, 0x9a, 0xae, 0x1d, 0x44, 0xe0, 0xae, 0x90,
+  0x4f, 0xbd, 0x68, 0x08, 0x19, 0x65, 0xa6, 0xe8, 0x7a, 0x91, 0xbb, 0xea,
+  0x31, 0x22, 0x92, 0x09, 0x38, 0x66, 0xfc, 0x10, 0xbf, 0xe4, 0x5a, 0x5b,
+  0xc2, 0x28, 0xd9, 0x73, 0x60, 0xa0, 0x56, 0xc3, 0xc6, 0xe8, 0x5d, 0x47,
+  0x5f, 0xb5, 0x52, 0x95, 0x34, 0x41, 0x12, 0x6d, 0x20, 0xf7, 0x21, 0x90,
+  0xae, 0x24, 0xb2, 0xd2, 0x22, 0xd9, 0x35, 0xdf, 0xd5, 0x4c, 0x29, 0x6b,
+  0x2e, 0xd0, 0x5d, 0xa0, 0x2d, 0x14, 0xf3, 0xcb, 0x80, 0x45, 0x61, 0x33,
+  0x22, 0x91, 0x76, 0x5f, 0x00, 0x2a, 0x35, 0x09, 0x40, 0x80, 0x31, 0x38,
+  0x51, 0xee, 0xf0, 0x4c, 0x52, 0x81, 0x0c, 0x18, 0x63, 0x2d, 0x80, 0x7a,
+  0xa9, 0xf4, 0x95, 0xa7, 0x3b, 0x83, 0x9d, 0x64, 0xf8, 0xf6, 0x2b, 0x05,
+  0x1f, 0xfc, 0x6a, 0x28, 0x38, 0xb3, 0xb8, 0x16, 0xec, 0xbd, 0x46, 0xc4,
+  0x15, 0x86, 0x4f, 0x63, 0xf8, 0x63, 0xea, 0xa1, 0x1c, 0xec, 0xe6, 0x90,
+  0xca, 0xe6, 0xd1, 0x7d, 0xed, 0x05, 0x48, 0x15, 0x44, 0xc0, 0x95, 0x1f,
+  0x94, 0x9b, 0x91, 0x3b, 0x38, 0x98, 0x5a, 0x9c, 0x0c, 0x23, 0x8c, 0xe9,
+  0xe3, 0x7d, 0x9f, 0x18, 0x0b, 0x62, 0x0e, 0x1e, 0xe4, 0x46, 0x6c, 0x00,
+  0x4e, 0x7d, 0x2e, 0x41, 0x2b, 0x0c, 0xd3, 0xe2, 0xa2, 0xad, 0x38, 0xc9,
+  0x6c, 0xd9, 0x71, 0x86, 0xf0, 0xa3, 0x90, 0xcc, 0xa5, 0x30, 0x53, 0xed,
+  0xe1, 0xb6, 0xcd, 0x1b, 0xae, 0x97, 0x9e, 0x60, 0xe5, 0x2a, 0x58, 0x2e,
+  0xdf, 0x14, 0xf0, 0x83, 0xc7, 0xd5, 0xa9, 0x6d, 0x07, 0xcc, 0x51, 0xa2,
+  0x6a, 0x6b, 0x9f, 0x24, 0x97, 0x45, 0x0b, 0x2c, 0xf7, 0x49, 0x6c, 0xca,
+  0x23, 0xe0, 0xb5, 0x3e, 0xca, 0x7e, 0x57, 0x42, 0xbb, 0x26, 0xe1, 0x4c,
+  0x6d, 0x66, 0xab, 0xfc, 0xc8, 0x32, 0x49, 0x9d, 0xe3, 0x7b, 0x49, 0xfe,
+  0xe6, 0x36, 0xb9, 0x7e, 0x02, 0xb6, 0x1e, 0xcb, 0x12, 0xf4, 0x25, 0xb5,
+  0x43, 0x3a, 0x13, 0x66, 0x67, 0x98, 0x54, 0xbb, 0x90, 0xe7, 0xf4, 0x72,
+  0xf3, 0x35, 0x6a, 0xdb, 0x83, 0xd4, 0x5d, 0x89, 0x95, 0xa9, 0x62, 0x2e,
+  0xcc, 0x1d, 0x61, 0x60, 0x79, 0x33, 0x49, 0x57, 0xd6, 0x68, 0xc2, 0x31,
+  0xd4, 0x8f, 0xb3, 0x24, 0x1e, 0xb9, 0x04, 0x5c, 0xb7, 0x47, 0xa0, 0x9e,
+  0xb1, 0x5f, 0xb7, 0x48, 0xd2, 0x7f, 0x64, 0x95, 0xb4, 0xaf, 0x68, 0x0d,
+  0x89, 0x70, 0x99, 0x3a, 0x33, 0x5a, 0x95, 0x7c, 0x1c, 0x4e, 0xca, 0xa9,
+  0x73, 0xdc, 0xd5, 0xa3, 0x79, 0xc8, 0x3c, 0xc5, 0x0e, 0x82, 0x4f, 0x30,
+  0xe1, 0x07, 0xa7, 0xe8, 0x06, 0xd4, 0x98, 0x65, 0xdb, 0x67, 0xbf, 0x62,
+  0x20, 0x5a, 0x62, 0xa6, 0x41, 0x18, 0x0f, 0xda, 0xbd, 0x5c, 0x9c, 0xfa,
+  0xa7, 0x4f, 0x1f, 0x01, 0xdb, 0xff, 0xcc, 0x3d, 0xe5, 0x40, 0xef, 0xc6,
+  0x8e, 0x72, 0x17, 0x8d, 0xa9, 0x3c, 0x18, 0xf3, 0x61, 0xd3, 0x80, 0x85,
+  0x21, 0x1f, 0x4b, 0x30, 0x29, 0xf0, 0x94, 0xf9, 0x2f, 0xfc, 0xf1, 0xc5,
+  0x83, 0xd1, 0x05, 0x26, 0x50, 0x3b, 0x98, 0xe8, 0x40, 0x80, 0xd0, 0x46,
+  0x7c, 0x99, 0xb4, 0x98, 0x9b, 0xdd, 0x76, 0x2c, 0x26, 0x02, 0x7a, 0x24,
+  0xfd, 0x2e, 0xc5, 0x25, 0xca, 0xe5, 0x64, 0xc0, 0xf1, 0x79, 0xb4, 0x45,
+  0xfb, 0x62, 0x7c, 0x33, 0x51, 0xb1, 0x84, 0x63, 0x9c, 0xf1, 0xf7, 0xb6,
+  0x6f, 0xa5, 0x95, 0xbf, 0xf6, 0xf4, 0x49, 0x2b, 0xff, 0x85, 0x9f, 0xdc,
+  0xa5, 0xcb, 0xe9, 0x25, 0xff, 0xc6, 0x11, 0xce, 0x9c, 0x6b, 0xf6, 0x73,
+  0x7b, 0x8d, 0xde, 0x3b, 0xeb, 0x85, 0xf7, 0x05, 0x0b, 0x01, 0x24, 0x78,
+  0xdf, 0xb6, 0x50, 0x83, 0x12, 0x03, 0x9c, 0x76, 0x05, 0xdf, 0x5c, 0x5d,
+  0x4b, 0x31, 0xaf, 0x83, 0x52, 0x8a, 0xc8, 0x1d, 0xe3, 0x97, 0x77, 0x77,
+  0x3e, 0xdf, 0x89, 0x46, 0x8e, 0xb1, 0x78, 0x60, 0x01, 0xaf, 0x63, 0x5f,
+  0xb6, 0x95, 0x85, 0x35, 0x2b, 0x50, 0x13, 0x04, 0x1e, 0xd8, 0xb6, 0x22,
+  0xfe, 0x22, 0x26, 0xa2, 0x70, 0x34, 0x46, 0xae, 0x5e, 0x4a, 0xf5, 0xe8,
+  0x39, 0x0c, 0x64, 0x8b, 0x5a, 0x70, 0x01, 0x03, 0x2e, 0x2a, 0x21, 0x02,
+  0xb3, 0xe4, 0x23, 0xb4, 0xa4, 0x7f, 0xac, 0x4b, 0x60, 0xc1, 0x70, 0xde,
+  0xbf, 0x50, 0x12, 0xd5, 0x07, 0x77, 0x1b, 0x9b, 0xb2, 0x1c, 0x3d, 0x50,
+  0xae, 0x14, 0x8e, 0x24, 0x49, 0x83, 0x79, 0xb0, 0x52, 0xa9, 0x07, 0xf1,
+  0x10, 0x00, 0x00, 0x49, 0x9d, 0xe9, 0x54, 0xb4, 0x5d, 0x55, 0xa8, 0xf4,
+  0x37, 0xf6, 0xb7, 0x6e, 0x1e, 0xb0, 0x5f, 0xe9, 0xb3, 0xc1, 0x93, 0x17,
+  0x40, 0x9e, 0x62, 0xb6, 0x12, 0xae, 0x3d, 0xf1, 0x93, 0x02, 0xd0, 0xcb,
+  0x82, 0xd3, 0xa4, 0x21, 0xc1, 0xb2, 0xfa, 0xab, 0xe6, 0xe1, 0x2c, 0x30,
+  0x8b, 0x56, 0xf5, 0x50, 0x36, 0x6a, 0x72, 0x78, 0x42, 0x13, 0xb4, 0x80,
+  0x6d, 0xa1, 0x57, 0x88, 0xd1, 0xe8, 0x77, 0x13, 0xbd, 0xc5, 0xdf, 0xa7,
+  0x66, 0xc9, 0xc9, 0xa0, 0x9d, 0xa5, 0xbc, 0xf0, 0x3b, 0xa0, 0x83, 0x0b,
+  0x2b, 0x4d, 0x76, 0x8a, 0x99, 0x8c, 0xec, 0x2e, 0x1c, 0x65, 0x0c, 0x7e,
+  0x0e, 0x3a, 0x57, 0x8c, 0x2d, 0x94, 0xb7, 0x5e, 0xdc, 0x73, 0x85, 0x83,
+  0x7c, 0x54, 0x55, 0xd7, 0x7b, 0x44, 0x0d, 0x7b, 0x83, 0xcf, 0x25, 0xb4,
+  0x52, 0x5c, 0xa0, 0x2b, 0x52, 0x52, 0x14, 0x44, 0xaf, 0xd5, 0xde, 0xe9,
+  0x22, 0x9b, 0x0f, 0x87, 0x27, 0x21, 0x46, 0xd7, 0x5f, 0x7b, 0xde, 0xbf,
+  0x1c, 0xa9, 0x4f, 0x23, 0x40, 0x69, 0x0e, 0x39, 0x10, 0x09, 0x3d, 0xa0,
+  0x84, 0x59, 0xc6, 0x49, 0x99, 0x81, 0x81, 0xc7, 0xd5, 0xe1, 0xb1, 0x22,
+  0xe3, 0x1d, 0xd0, 0x2f, 0x29, 0x06, 0x1d, 0x84, 0xbc, 0xab, 0xd3, 0x14,
+  0xd6, 0x29, 0x0b, 0xf1, 0xd4, 0xba, 0x58, 0x9c, 0xb5, 0xf0, 0x6d, 0x4f,
+  0x72, 0x68, 0xf1, 0x52, 0xa4, 0x8e, 0x43, 0x0b, 0x29, 0xcb, 0x09, 0xfb,
+  0x41, 0x2f, 0x55, 0x96, 0x96, 0xa4, 0xe1, 0xb3, 0xd7, 0xd1, 0xcf, 0xf8,
+  0x7f, 0xa0, 0xdd, 0xbf, 0x2e, 0xb1, 0x67, 0xae, 0xd0, 0x5d, 0x24, 0x8e,
+  0x67, 0x7b, 0x28, 0xc1, 0x3c, 0x43, 0x2e, 0x47, 0x04, 0x37, 0x79, 0x39,
+  0xca, 0xeb, 0x32, 0xd5, 0xf2, 0x9e, 0x5a, 0x18, 0x30, 0x08, 0x33, 0x62,
+  0x9c, 0xb0, 0x32, 0xc1, 0x6b, 0x51, 0x6b, 0xf6, 0x20, 0xf9, 0x1f, 0xdc,
+  0xa9, 0xbe, 0x2d, 0xca, 0x13, 0xc7, 0xb6, 0x7d, 0x75, 0xf4, 0xe6, 0xf4,
+  0xfc, 0xa8, 0x89, 0x7e, 0x2c, 0x15, 0xc8, 0xa4, 0xfc, 0x5a, 0x7b, 0x74,
+  0x7f, 0x59, 0x72, 0x96, 0x2d, 0x5b, 0xbd, 0x85, 0xed, 0x5a, 0x2d, 0xb3,
+  0xb3, 0xef, 0x5f, 0x07, 0x21, 0x05, 0x56, 0xb2, 0x32, 0x80, 0xc2, 0x2d,
+  0x22, 0xb5, 0x5d, 0x11, 0x27, 0xb2, 0xe5, 0x8b, 0xdf, 0xb8, 0xf1, 0x49,
+  0xc9, 0x11, 0x8e, 0x74, 0xb4, 0x8a, 0x51, 0x9c, 0xc7, 0x5f, 0x55, 0x30,
+  0x98, 0xbb, 0x46, 0x3b, 0x51, 0x46, 0x19, 0xea, 0xd9, 0xa8, 0x0b, 0x57,
+  0x64, 0xf5, 0x54, 0x32, 0x41, 0x90, 0x1e, 0x32, 0x48, 0xba, 0x1d, 0x59,
+  0x8c, 0x1f, 0xf7, 0x12, 0x0b, 0xce, 0x44, 0x74, 0xb8, 0x5c, 0xb4, 0xc2,
+  0xc1, 0x3b, 0x89, 0x08, 0xbd, 0xe4, 0x2f, 0x52, 0xb7, 0xf6, 0x52, 0xaa,
+  0xb3, 0xf8, 0x85, 0x8c, 0x88, 0x56, 0xd4, 0xe7, 0x66, 0x05, 0x83, 0x67,
+  0x30, 0x54, 0xf7, 0x4d, 0x62, 0xb2, 0xc4, 0xc6, 0x1f, 0x37, 0xbc, 0x6d,
+  0x58, 0xc0, 0x87, 0xe2, 0x28, 0x2b, 0x1e, 0x26, 0x6e, 0xeb, 0xb1, 0x80,
+  0x5c, 0x9b, 0xf1, 0x40, 0x6b, 0x3f, 0xad, 0x88, 0x81, 0xd2, 0x18, 0x4d,
+  0x17, 0x70, 0x80, 0xe6, 0x7d, 0xfd, 0x5b, 0xd7, 0x8a, 0x9c, 0x35, 0x29,
+  0x8d, 0xc3, 0x31, 0x79, 0x1d, 0x56, 0xe5, 0x03, 0x08, 0x11, 0x9c, 0x30,
+  0xd2, 0x0a, 0xc6, 0x7f, 0x36, 0x38, 0x16, 0xc6, 0x34, 0xae, 0xee, 0xe7,
+  0x35, 0xc7, 0x85, 0x49, 0xbd, 0xd4, 0x71, 0x51, 0x8a, 0x22, 0xdc, 0x25,
+  0x63, 0xb7, 0x5f, 0x0c, 0x9b, 0x02, 0xe7, 0xd1, 0x8b, 0x67, 0x2f, 0x70,
+  0xf0, 0x38, 0xe4, 0x54, 0x61, 0xd3, 0x34, 0x51, 0x95, 0xab, 0xac, 0x35,
+  0xc7, 0xdc, 0xef, 0x64, 0xe7, 0xa3, 0x2d, 0xb5, 0x45, 0x8c, 0xb2, 0xa9,
+  0x00, 0xb5, 0x0d, 0x83, 0x46, 0x06, 0x0f, 0xc6, 0x76, 0xae, 0x0a, 0xdb,
+  0x94, 0xfb, 0x46, 0xeb, 0xa8, 0xd2, 0x3e, 0xa4, 0x37, 0x1a, 0x1d, 0xae,
+  0xa7, 0xc1, 0xb2, 0xd1, 0x75, 0xf7, 0x1f, 0x18, 0x9d, 0x92, 0x02, 0x52,
+  0x00, 0x88, 0x30, 0x11, 0x05, 0xb2, 0xf9, 0x87, 0x2d, 0x07, 0x6e, 0xab,
+  0x35, 0xc8, 0x50, 0x04, 0x63, 0x99, 0x35, 0x10, 0xbe, 0x57, 0x35, 0x77,
+  0xc9, 0x0c, 0x8b, 0x16, 0x6f, 0x14, 0x33, 0x4e, 0x54, 0x75, 0xb1, 0x80,
+  0x84, 0x23, 0x5c, 0x56, 0xf7, 0xbe, 0x1b, 0xc8, 0xc3, 0x35, 0x58, 0x39,
+  0xe9, 0x57, 0x53, 0x15, 0x4d, 0x8a, 0x20, 0x11, 0x79, 0xce, 0xe1, 0x99,
+  0x4a, 0x8d, 0x7a, 0x73, 0x72, 0x88, 0x1a, 0xcd, 0x95, 0xee, 0xce, 0x08,
+  0x6b, 0xfa, 0x6b, 0x93, 0x25, 0xe9, 0xb5, 0xa1, 0xe7, 0xc8, 0xa2, 0xd0,
+  0xf9, 0x28, 0x2b, 0xb3, 0x73, 0xcc, 0x8c, 0x28, 0xa4, 0x0b, 0x28, 0x06,
+  0x61, 0xa3, 0xb2, 0x1c, 0x74, 0x6e, 0x1b, 0xf5, 0xa2, 0x49, 0x3d, 0xe8,
+  0x4b, 0xa6, 0x26, 0x72, 0x66, 0x67, 0x40, 0xa9, 0xac, 0x16, 0xe9, 0x58,
+  0xe2, 0x94, 0xb5, 0x56, 0x2f, 0x23, 0x57, 0x74, 0x08, 0x18, 0x48, 0x16,
+  0x20, 0x83, 0x37, 0xce, 0xb9, 0xa9, 0x3a, 0xab, 0x79, 0x52, 0x60, 0xf0,
+  0xf0, 0x56, 0x42, 0x5e, 0x1c, 0x99, 0xd2, 0x4a, 0x8a, 0xeb, 0x22, 0xa2,
+  0x5e, 0x5f, 0x95, 0x0b, 0x81, 0x34, 0x8c, 0xe1, 0x2d, 0x86, 0x79, 0x09,
+  0xf2, 0xa8, 0x71, 0x8a, 0x2a, 0xab, 0x65, 0x30, 0xf2, 0xee, 0xf1, 0xeb,
+  0x06, 0x0c, 0xae, 0x24, 0x9d, 0x8d, 0xee, 0xe3, 0xcd, 0x79, 0x20, 0x5e,
+  0xc4, 0xd2, 0xfa, 0xbb, 0xc4, 0x35, 0xe5, 0x05, 0xe9, 0x91, 0xe5, 0xd3,
+  0xf2, 0x77, 0xf1, 0xe6, 0xb4, 0x15, 0x09, 0xc7, 0x95, 0x36, 0xac, 0x61,
+  0x26, 0x15, 0x2b, 0x45, 0x02, 0x62, 0x00, 0xa0, 0xbc, 0x75, 0xd3, 0x8d,
+  0x85, 0xbf, 0x9e, 0x91, 0xc2, 0xcf, 0x71, 0x9a, 0x8f, 0xae, 0xc5, 0x8c,
+  0x4d, 0x03, 0xc6, 0x36, 0xd5, 0x59, 0x56, 0x85, 0xa0, 0xff, 0xdc, 0xce,
+  0x28, 0x77, 0xe9, 0x3a, 0xf1, 0xe6, 0xfc, 0x54, 0x59, 0xba, 0xe4, 0xe6,
+  0xf9, 0xcd, 0x70, 0x0a, 0xf3, 0xa4, 0x18, 0xd7, 0xc1, 0x0c, 0xf0, 0x40,
+  0xbc, 0x39, 0x8b, 0x09, 0xeb, 0xcc, 0x0c, 0x66, 0x65, 0x4e, 0x23, 0x79,
+  0x78, 0x66, 0xf2, 0x60, 0x67, 0x93, 0xe9, 0x43, 0x61, 0xe2, 0x9d, 0x1d,
+  0x5e, 0x3d, 0xb3, 0xd8, 0x0e, 0xf3, 0x08, 0xda, 0x1b, 0xec, 0x31, 0xa8,
+  0xa2, 0x8c, 0xdc, 0x5b, 0x0d, 0x65, 0x75, 0x34, 0x83, 0xe6, 0x81, 0x0d,
+  0xd6, 0x5e, 0x3a, 0xab, 0x30, 0x9d, 0x6b, 0xdd, 0xc3, 0x0f, 0x82, 0xc0,
+  0x87, 0xfa, 0x02, 0xf5, 0x87, 0x87, 0x17, 0x64, 0x3a, 0xb7, 0x62, 0xcc,
+  0x0c, 0xf4, 0xea, 0x98, 0x85, 0xe6, 0x8f, 0xa6, 0xcd, 0x32, 0xcd, 0x0a,
+  0xde, 0xbb, 0x82, 0xec, 0x7d, 0x7f, 0xbe, 0xea, 0xed, 0xa2, 0xc8, 0xe7,
+  0x86, 0x66, 0xa4, 0x3c, 0x26, 0x18, 0x62, 0x12, 0xf3, 0xc0, 0x07, 0x8e,
+  0xf8, 0xce, 0x14, 0x67, 0x37, 0xb0, 0x29, 0x3b, 0xd1, 0xe0, 0xc3, 0xea,
+  0x10, 0x57, 0xa6, 0x63, 0x79, 0xdc, 0xd3, 0xb1, 0xcc, 0xca, 0xc5, 0x6e,
+  0xbb, 0x54, 0xc7, 0xc7, 0x77, 0xbb, 0xd9, 0xa5, 0x3b, 0x93, 0xed, 0xf1,
+  0x2d, 0xee, 0x26, 0xd6, 0x39, 0x7e, 0xb5, 0x8e, 0xed, 0xd2, 0xe7, 0xb8,
+  0x4a, 0x43, 0x50, 0x84, 0xe8, 0x2a, 0x8d, 0x5d, 0x9a, 0x60, 0xbd, 0x62,
+  0x29, 0x56, 0x24, 0x8b, 0xae, 0x75, 0xac, 0x80, 0xdc, 0x9c, 0x15, 0x2b,
+  0xe3, 0xed, 0x58, 0xbd, 0x38, 0xfa, 0xb4, 0x1f, 0xa2, 0xf0, 0xf7, 0x10,
+  0x45, 0xbc, 0xbb, 0x40, 0xab, 0x19, 0x9e, 0xf6, 0xda, 0x3a, 0x10, 0x93,
+  0x0c, 0x85, 0xe0, 0x95, 0x14, 0x90, 0x44, 0x2b, 0x0d, 0x19, 0xdf, 0x7b,
+  0x88, 0x90, 0x56, 0xae, 0x71, 0x39, 0x7b, 0xe4, 0x90, 0xd3, 0x03, 0x7e,
+  0x56, 0x48, 0x02, 0x09, 0x66, 0xd5, 0x39, 0x99, 0x7a, 0x8c, 0x57, 0xac,
+  0xfc, 0xaa, 0x11, 0x34, 0xa8, 0xf0, 0xa1, 0x91, 0xe0, 0xc1, 0xd8, 0x60,
+  0x82, 0xfa, 0xf1, 0x70, 0xa9, 0xdf, 0x07, 0x9c, 0x32, 0xde, 0x9c, 0x0e,
+  0xd7, 0xbf, 0xa7, 0xcb, 0xd3, 0x73, 0xb0, 0x96, 0x6a, 0x4f, 0x61, 0x84,
+  0x96, 0xce, 0x90, 0xed, 0x80, 0xff, 0x22, 0x06, 0x01, 0x75, 0x6d, 0x1a,
+  0x1c, 0xc2, 0x7e, 0xc9, 0xd9, 0xac, 0x6c, 0x14, 0x7b, 0xc9, 0x3f, 0xa2,
+  0xe9, 0x70, 0xdb, 0xa6, 0x61, 0x6d, 0xc3, 0x59, 0xc2, 0x39, 0x13, 0x1c,
+  0xc3, 0x02, 0x76, 0x82, 0x32, 0x33, 0x1a, 0x36, 0xbc, 0x89, 0x28, 0x74,
+  0x49, 0x7f, 0x82, 0x8c, 0x00, 0x10, 0x83, 0xce, 0xa5, 0x4e, 0x6b, 0xb3,
+  0x65, 0x11, 0xc2, 0xdc, 0xf4, 0xee, 0x60, 0xb7, 0x67, 0xda, 0x98, 0xca,
+  0x4b, 0x16, 0x4f, 0xa4, 0x60, 0x4a, 0x92, 0x1b, 0xce, 0x7e, 0x9a, 0x4e,
+  0x71, 0x12, 0xf4, 0x5b, 0x75, 0x93, 0x1c, 0x39, 0xda, 0xc8, 0x4b, 0xf2,
+  0xa8, 0x15, 0xd3, 0x59, 0xc0, 0x9d, 0xfe, 0xd3, 0x17, 0x2f, 0x1a, 0x57,
+  0x5a, 0xa8, 0x37, 0x3f, 0xdb, 0xd9, 0x91, 0x0a, 0x3a, 0xed, 0xd7, 0xe8,
+  0x8b, 0xfe, 0x0b, 0x7e, 0xb1, 0xf9, 0x9a, 0x54, 0x6f, 0x5b, 0xfd, 0x5e,
+  0x1f, 0xdf, 0x44, 0xba, 0x63, 0x23, 0xcb, 0xca, 0xb7, 0x5e, 0xa0, 0xbb,
+  0xc8, 0x5b, 0xfc, 0xb0, 0xac, 0x63, 0x71, 0x79, 0x89, 0xf8, 0x59, 0x3c,
+  0xc9, 0x9c, 0x9f, 0x84, 0xc1, 0xbb, 0xb4, 0x9c, 0x74, 0xa7, 0xbb, 0xd3,
+  0xeb, 0xef, 0xae, 0x9a, 0x2e, 0x5b, 0x04, 0x30, 0x12, 0xde, 0x4e, 0x28,
+  0x50, 0x24, 0x3c, 0x4b, 0x4c, 0x5c, 0xbb, 0xa1, 0x5d, 0x1a, 0xd1, 0xee,
+  0x8b, 0x17, 0x3d, 0x8c, 0xec, 0xd9, 0x8b, 0x17, 0x2b, 0xe3, 0x25, 0x82,
+  0x6e, 0xee, 0x0a, 0x6f, 0x93, 0xc2, 0xeb, 0x9e, 0x66, 0x2a, 0xc8, 0xe8,
+  0xf1, 0x7e, 0xf0, 0x4d, 0xf2, 0x8a, 0x8b, 0x00, 0x05, 0xe6, 0x1a, 0x9f,
+  0x60, 0xd5, 0xca, 0xe9, 0x46, 0x96, 0xd8, 0xbd, 0xa9, 0x83, 0xa4, 0x5e,
+  0x74, 0xc3, 0xc0, 0x38, 0x2d, 0xcf, 0x3c, 0x48, 0x9d, 0xfa, 0xbe, 0xa7,
+  0x62, 0x8c, 0xbc, 0xca, 0x6b, 0x0f, 0xcb, 0x56, 0x25, 0x9b, 0xb4, 0xd9,
+  0x5b, 0xac, 0xfb, 0x4b, 0xa5, 0x19, 0x8d, 0x92, 0xd9, 0xe0, 0xd8, 0x7b,
+  0x01, 0x8c, 0xc6, 0x1f, 0xc5, 0x62, 0xa3, 0x13, 0x47, 0x95, 0x4d, 0xa1,
+  0x7c, 0xe9, 0x55, 0x20, 0x2f, 0xf4, 0xf9, 0x49, 0x3d, 0x2d, 0xac, 0xca,
+  0x7d, 0xd4, 0x5a, 0xe6, 0x08, 0xf0, 0x0b, 0x3b, 0xef, 0x8c, 0x5e, 0xac,
+  0xaf, 0x62, 0x63, 0xb7, 0x1c, 0x54, 0x09, 0xb7, 0xf7, 0xcb, 0xb0, 0x51,
+  0xb5, 0x91, 0xeb, 0x51, 0x7e, 0x12, 0xfb, 0xd0, 0x29, 0xdb, 0x22, 0xf6,
+  0xda, 0x49, 0x66, 0xa5, 0x6a, 0xd5, 0x2e, 0xe3, 0xda, 0x11, 0xc3, 0xcc,
+  0xb2, 0x7c, 0xa0, 0x44, 0x9c, 0x66, 0xea, 0xb0, 0xeb, 0x13, 0x0a, 0xeb,
+  0x5d, 0x5a, 0x66, 0x06, 0x41, 0x38, 0xbf, 0x77, 0x87, 0xdb, 0xd4, 0x43,
+  0xcb, 0x7c, 0x44, 0xaa, 0x75, 0x0c, 0x6f, 0xc0, 0xaa, 0x0a, 0x8b, 0x77,
+  0x74, 0xc2, 0xa6, 0x3e, 0x45, 0x5e, 0xd4, 0xdc, 0x53, 0x9f, 0xa3, 0x21,
+  0x10, 0x8b, 0xc0, 0x59, 0xe3, 0x25, 0xe8, 0x16, 0x85, 0x44, 0xe1, 0x47,
+  0x33, 0xd3, 0x5e, 0x65, 0x62, 0x6e, 0x94, 0x12, 0x8a, 0x86, 0xac, 0xd2,
+  0x8d, 0x69, 0x02, 0xe7, 0xe1, 0xfd, 0x14, 0x26, 0xa4, 0x99, 0x10, 0xbe,
+  0x10, 0xb2, 0x59, 0x15, 0x14, 0x4f, 0x2c, 0x33, 0xfc, 0x72, 0xdd, 0xda,
+  0x4e, 0xc4, 0x3b, 0x76, 0x5a, 0xf6, 0x38, 0xd9, 0x0c, 0x62, 0xee, 0x98,
+  0x42, 0x03, 0x5d, 0xdb, 0x55, 0x2e, 0x2d, 0x24, 0x82, 0x0c, 0xe5, 0x3c,
+  0xba, 0x9a, 0x1f, 0x57, 0xf1, 0xe3, 0xdd, 0x72, 0x36, 0xb4, 0xec, 0x63,
+  0xcd, 0x25, 0x87, 0x79, 0xe4, 0x76, 0x23, 0x0d, 0x8f, 0xff, 0xe7, 0xd1,
+  0x6f, 0x98, 0x41, 0x7d, 0x1e, 0x80, 0x1f, 0xe0, 0xb5, 0x15, 0x98, 0xb2,
+  0x1c, 0x8f, 0xe8, 0x8f, 0xab, 0x57, 0xc0, 0x83, 0x2d, 0x64, 0xf2, 0x62,
+  0x40, 0x11, 0x57, 0x3d, 0xa2, 0xbb, 0x86, 0xe9, 0x6c, 0x11, 0x81, 0xf2,
+  0xe8, 0x19, 0x32, 0x84, 0x15, 0x91, 0x80, 0x91, 0xc3, 0x85, 0x25, 0x6a,
+  0x26, 0x53, 0x57, 0x18, 0x09, 0x30, 0x46, 0x84, 0x26, 0xe8, 0x5d, 0x0e,
+  0x15, 0xe2, 0x05, 0x40, 0x5f, 0xa1, 0xe9, 0x1e, 0x57, 0x31, 0x29, 0xa5,
+  0xfc, 0x78, 0x14, 0x07, 0x48, 0x20, 0x49, 0xc3, 0xd4, 0x7f, 0x27, 0x0f,
+  0xc9, 0xfc, 0xa6, 0x99, 0xc1, 0x27, 0xb2, 0x63, 0x30, 0x2c, 0x35, 0x1b,
+  0x49, 0x1f, 0xac, 0xe8, 0xc6, 0x2f, 0x25, 0x3f, 0x5f, 0xba, 0x66, 0xac,
+  0x73, 0xd1, 0x20, 0x04, 0x34, 0xbd, 0xf2, 0x95, 0x30, 0x38, 0x28, 0xc5,
+  0x8a, 0xd8, 0xcb, 0xe3, 0x6d, 0x3b, 0x21, 0xa3, 0x88, 0xb1, 0x75, 0x01,
+  0x50, 0x53, 0x3e, 0xfd, 0xaa, 0xea, 0xd6, 0xb5, 0xcc, 0xae, 0x26, 0x7d,
+  0x95, 0x9a, 0x9a, 0xc7, 0x1d, 0xab, 0x70, 0xe7, 0x62, 0xa3, 0xbf, 0x57,
+  0x78, 0x64, 0x71, 0xf4, 0xb8, 0xc0, 0xbd, 0x74, 0xaa, 0x66, 0x0b, 0x80,
+  0xc1, 0xb1, 0x13, 0xc4, 0x81, 0x48, 0xb0, 0x11, 0x6d, 0xde, 0xe5, 0x65,
+  0xc8, 0x5c, 0x0f, 0x6a, 0x3c, 0x33, 0x56, 0x84, 0x14, 0x5d, 0x9a, 0x4f,
+  0x7c, 0x6e, 0xab, 0xe6, 0x4c, 0xaa, 0x6d, 0x12, 0x66, 0x7f, 0x89, 0xce,
+  0x69, 0x1f, 0x0d, 0xea, 0xb7, 0xc6, 0xd2, 0xf5, 0x68, 0x25, 0xee, 0x3a,
+  0xb5, 0xd4, 0x1b, 0xe1, 0x00, 0x01, 0x26, 0x4d, 0x3f, 0xed, 0x78, 0x7d,
+  0x1a, 0xe6, 0x2b, 0xb1, 0x60, 0x36, 0x63, 0x17, 0xd5, 0x39, 0xc0, 0xe1,
+  0x59, 0xa8, 0x54, 0xaf, 0xc5, 0x86, 0x4e, 0xaa, 0xa8, 0xa9, 0x76, 0x92,
+  0xa5, 0x86, 0xf6, 0x45, 0x9b, 0x4a, 0xe4, 0xda, 0xc1, 0xc5, 0x49, 0xee,
+  0xb2, 0x32, 0xf3, 0x98, 0x84, 0x1c, 0xb8, 0x4b, 0xa7, 0x6f, 0x90, 0x0c,
+  0x0b, 0x7a, 0x3e, 0x52, 0xeb, 0xd6, 0xd2, 0x11, 0x1b, 0x78, 0xf6, 0x3c,
+  0x1c, 0x8f, 0xdf, 0x88, 0xa0, 0x31, 0xb1, 0x00, 0x37, 0xe7, 0x1b, 0x81,
+  0xc0, 0x85, 0xa5, 0x76, 0x94, 0xb9, 0x5d, 0x75, 0xc8, 0xcf, 0x12, 0xe0,
+  0xbc, 0xde, 0x27, 0x3a, 0xeb, 0xaf, 0x2b, 0x34, 0x04, 0xd0, 0x79, 0x83,
+  0xe6, 0x1e, 0xca, 0xb3, 0xde, 0x7d, 0xd1, 0x0c, 0x7f, 0x42, 0xb9, 0xe5,
+  0x29, 0x09, 0x8b, 0x01, 0xae, 0xe6, 0x8a, 0x94, 0xdc, 0x33, 0xf3, 0x74,
+  0xa5, 0xb0, 0x25, 0x13, 0x0f, 0x9d, 0x05, 0x49, 0x9a, 0x97, 0x22, 0x0f,
+  0xba, 0x89, 0x72, 0x4a, 0xa4, 0x4b, 0x33, 0x05, 0xa0, 0xe6, 0xa0, 0xe3,
+  0xe9, 0x34, 0x47, 0x91, 0xcf, 0x9f, 0x63, 0xee, 0x60, 0x6e, 0x0f, 0x17,
+  0x95, 0xbf, 0x89, 0xaa, 0x25, 0x5a, 0xe3, 0x66, 0xa5, 0xe0, 0xee, 0x46,
+  0xc2, 0x64, 0x6a, 0x35, 0xbd, 0xd8, 0xdc, 0xe0, 0x0a, 0xce, 0xcf, 0x2d,
+  0x5d, 0x4a, 0x27, 0x3d, 0x09, 0xca, 0xd2, 0x75, 0x00, 0xf7, 0xd4, 0x89,
+  0x72, 0x88, 0x38, 0x7b, 0xa0, 0x04, 0xe4, 0x8c, 0xad, 0x50, 0x08, 0x7a,
+  0xc0, 0x76, 0x56, 0x8f, 0xb7, 0x05, 0x85, 0x36, 0x61, 0x0a, 0x9f, 0xa7,
+  0x92, 0x31, 0x6c, 0xea, 0x41, 0x3b, 0xcb, 0x6f, 0xde, 0xb2, 0x8d, 0xc3,
+  0xc3, 0x23, 0xfc, 0x23, 0xf4, 0xe1, 0xfa, 0x04, 0xdb, 0x00, 0x19, 0x25,
+  0x62, 0xa1, 0xb5, 0xbc, 0x36, 0xb7, 0xdc, 0xce, 0xff, 0x69, 0x40, 0xaf,
+  0xcd, 0x8a, 0xa0, 0x78, 0x41, 0xb0, 0x39, 0x25, 0x41, 0x30, 0x56, 0xa9,
+  0x19, 0x60, 0x6b, 0xee, 0xda, 0x71, 0x81, 0xc7, 0x4d, 0x94, 0x3e, 0x07,
+  0x38, 0xae, 0xcb, 0xa6, 0xe3, 0xe8, 0x04, 0xc2, 0xce, 0x74, 0x10, 0x12,
+  0x44, 0x6c, 0xa0, 0x49, 0x0c, 0x89, 0x17, 0x75, 0x36, 0x3b, 0xa5, 0xca,
+  0x1a, 0x86, 0xd0, 0x3c, 0xba, 0xef, 0x66, 0xef, 0xdb, 0x84, 0xcc, 0x46,
+  0xdc, 0x7f, 0x1a, 0xa9, 0x38, 0xb4, 0xb8, 0x7d, 0x8a, 0x63, 0xd1, 0x7f,
+  0xde, 0x93, 0xbf, 0x9e, 0x0b, 0xbc, 0x44, 0xdd, 0xb4, 0x37, 0x33, 0x60,
+  0xb0, 0x16, 0x2a, 0x3d, 0x3e, 0xb3, 0x6a, 0x63, 0x83, 0x5f, 0x82, 0x88,
+  0x10, 0xc7, 0xc9, 0x74, 0xd9, 0xc0, 0x11, 0xb2, 0x52, 0xc2, 0x7b, 0x38,
+  0x64, 0x75, 0x77, 0xf0, 0xa4, 0x79, 0x42, 0xa1, 0xb1, 0xc6, 0xea, 0xe6,
+  0xb1, 0x74, 0xca, 0x9c, 0x9a, 0x4b, 0xfd, 0x49, 0x24, 0x27, 0x27, 0xb0,
+  0xc2, 0x00, 0x62, 0x28, 0x7a, 0xe2, 0x14, 0x2d, 0xc5, 0xa0, 0x58, 0xb8,
+  0x32, 0x8a, 0xdd, 0x54, 0x11, 0xef, 0xdc, 0xe2, 0x72, 0x73, 0x56, 0x0f,
+  0xb4, 0xd4, 0x7d, 0xf0, 0x2a, 0x9b, 0xcc, 0x59, 0x4d, 0xdb, 0xc4, 0x68,
+  0x25, 0x2c, 0x79, 0xd0, 0xad, 0xea, 0xe7, 0x62, 0x7b, 0xf5, 0x5d, 0xea,
+  0x7e, 0x27, 0xcc, 0xb6, 0x67, 0xb1, 0x53, 0x93, 0x2e, 0x2a, 0xab, 0xf0,
+  0xcd, 0x97, 0x69, 0x97, 0xaa, 0x94, 0xcf, 0x43, 0x04, 0xbb, 0x70, 0x53,
+  0xd6, 0x39, 0x6b, 0xda, 0xab, 0x00, 0x25, 0xef, 0x63, 0x51, 0xa4, 0x0a,
+  0x74, 0xcf, 0x3c, 0x15, 0x4f, 0x3f, 0x7e, 0xec, 0xee, 0x84, 0x08, 0xe3,
+  0x0c, 0x7b, 0xcf, 0x31, 0xbd, 0x72, 0x41, 0x3e, 0xfb, 0xf8, 0xb1, 0xf9,
+  0x65, 0x1c, 0x9d, 0x5f, 0x3c, 0x02, 0x95, 0x15, 0x29, 0x2e, 0x74, 0xa5,
+  0xd2, 0x60, 0x15, 0x0d, 0xea, 0x49, 0xd1, 0x1b, 0xef, 0xd2, 0x5c, 0x30,
+  0x1c, 0x3b, 0xae, 0x2a, 0x56, 0x4e, 0x85, 0x71, 0xd5, 0xd7, 0x99, 0xbf,
+  0xc3, 0x80, 0x0b, 0x7a, 0x4d, 0x1c, 0x43, 0xca, 0xeb, 0xea, 0x89, 0xb4,
+  0xda, 0xda, 0xc5, 0x52, 0xf3, 0xa3, 0x3b, 0xf0, 0x65, 0xb9, 0x2c, 0x3b,
+  0x4a, 0x7e, 0x2d, 0xe7, 0x75, 0xce, 0x59, 0x9b, 0x5c, 0xb6, 0x9d, 0x5e,
+  0xdf, 0xa5, 0xf5, 0xcf, 0xe7, 0xcb, 0x3a, 0x33, 0xf8, 0x6c, 0xee, 0xd0,
+  0xce, 0x56, 0x74, 0xd9, 0xa7, 0xc8, 0x1c, 0xb2, 0xf0, 0x0f, 0x2b, 0xc1,
+  0x15, 0xa0, 0xb8, 0xf1, 0xb8, 0x04, 0xd0, 0x5d, 0x12, 0x7e, 0x94, 0x64,
+  0xfb, 0xfc, 0x6a, 0x8c, 0xd5, 0x4c, 0x7c, 0x1a, 0xb8, 0x40, 0x91, 0xd1,
+  0x62, 0x4b, 0x50, 0x7c, 0xc2, 0x28, 0x09, 0xa4, 0x35, 0x83, 0xad, 0x5e,
+  0x15, 0x25, 0x6d, 0xe8, 0x4c, 0x65, 0x22, 0x89, 0xef, 0xef, 0x9c, 0x76,
+  0xe9, 0xca, 0xd5, 0x73, 0x97, 0x4c, 0x0b, 0xae, 0xbc, 0x28, 0xa2, 0x6b,
+  0x51, 0xab, 0x14, 0x6d, 0x45, 0x23, 0x79, 0x75, 0x6d, 0xd4, 0x0f, 0x5d,
+  0x94, 0x7b, 0xe1, 0x31, 0xfc, 0xe7, 0x67, 0x0b, 0x07, 0x6b, 0xf4, 0x40,
+  0x15, 0x7a, 0xe3, 0x56, 0xd5, 0x34, 0xcb, 0x16, 0x1a, 0x7c, 0x33, 0x2b,
+  0x96, 0xf3, 0xda, 0xce, 0xa1, 0x1d, 0x43, 0x11, 0x50, 0x94, 0x0a, 0x35,
+  0x26, 0x72, 0xd5, 0x01, 0x4f, 0x58, 0xb8, 0x60, 0xc7, 0x58, 0x36, 0x09,
+  0x3c, 0xcb, 0x75, 0xfb, 0x5c, 0x6d, 0xe6, 0x75, 0x28, 0x6b, 0xc5, 0x4f,
+  0xa4, 0xdb, 0x32, 0x5d, 0x65, 0xdd, 0x36, 0x47, 0x32, 0xba, 0xd6, 0x5b,
+  0xcd, 0x9c, 0xb1, 0x2e, 0x7c, 0x92, 0xe0, 0x1c, 0xb1, 0xb4, 0xca, 0x76,
+  0xcc, 0x2b, 0x66, 0xf0, 0xca, 0xfe, 0x18, 0xd7, 0xa0, 0x2a, 0x5c, 0x64,
+  0x83, 0xb1, 0x16, 0xd4, 0xca, 0xe3, 0x25, 0xec, 0xb0, 0x5a, 0xce, 0x91,
+  0x6a, 0xa9, 0x38, 0x66, 0x99, 0x70, 0x61, 0x9a, 0x8e, 0xda, 0x30, 0xf6,
+  0x81, 0xa7, 0x80, 0x2e, 0xbe, 0xce, 0xbf, 0x8a, 0x20, 0x1c, 0x25, 0xaf,
+  0xa2, 0x89, 0x0b, 0x01, 0x08, 0xe7, 0x6d, 0xc6, 0x83, 0x9a, 0x6d, 0x88,
+  0xc0, 0x71, 0x46, 0x09, 0x72, 0x7e, 0x7b, 0x61, 0x3b, 0x6e, 0xcf, 0x55,
+  0xbd, 0xeb, 0x96, 0x10, 0x16, 0xbe, 0x62, 0xa3, 0x62, 0x6c, 0xb9, 0x14,
+  0xd3, 0x00, 0xf6, 0xd3, 0x66, 0xc5, 0x21, 0xec, 0xdc, 0xdd, 0x16, 0x3e,
+  0x9e, 0x16, 0x88, 0x9b, 0xae, 0x9c, 0x5a, 0x58, 0x76, 0xc0, 0xda, 0xb8,
+  0x48, 0x9a, 0xb0, 0x9b, 0x49, 0x58, 0x69, 0x59, 0x0b, 0x2d, 0xbf, 0x2b,
+  0x00, 0x9c, 0xe2, 0x2a, 0x1f, 0xba, 0x76, 0xf4, 0xcd, 0x0e, 0x97, 0xb6,
+  0x76, 0xb4, 0x9e, 0x6a, 0xaf, 0x89, 0xf0, 0xa5, 0x83, 0x66, 0x3c, 0x1c,
+  0x09, 0x39, 0xb8, 0xb6, 0x22, 0x46, 0xb8, 0xe3, 0x3a, 0xa6, 0x15, 0x00,
+  0x67, 0x83, 0x1d, 0xc2, 0xaf, 0xca, 0x41, 0x19, 0x98, 0x4f, 0xa4, 0x2c,
+  0x34, 0xef, 0x00, 0x35, 0x92, 0x17, 0x13, 0x0e, 0xe7, 0x10, 0x8e, 0xd2,
+  0xc9, 0xad, 0x14, 0x6c, 0x04, 0x0f, 0xbc, 0x6d, 0x35, 0x6c, 0xf1, 0xba,
+  0x14, 0x97, 0x4c, 0xfa, 0xb3, 0x9e, 0x55, 0xc0, 0x35, 0x1a, 0xe3, 0x72,
+  0xb7, 0xf5, 0x4a, 0x28, 0x6e, 0xe2, 0x60, 0x4c, 0xbb, 0xb5, 0xd8, 0x64,
+  0xf4, 0x2a, 0xf3, 0x8c, 0xf6, 0x5f, 0xc8, 0xa4, 0x2a, 0x48, 0x50, 0x55,
+  0x3e, 0xed, 0x26, 0xa7, 0x0d, 0xf9, 0x43, 0x51, 0x3f, 0xfe, 0xba, 0xcc,
+  0xb9, 0x80, 0x2f, 0x83, 0xe5, 0xbc, 0x2e, 0xb0, 0xff, 0x95, 0x26, 0x37,
+  0x5c, 0xb1, 0x34, 0xa7, 0x31, 0x4e, 0xa5, 0x72, 0x15, 0xea, 0xbe, 0xa3,
+  0x60, 0xa3, 0x78, 0xca, 0xc0, 0xca, 0x19, 0x72, 0x21, 0xab, 0x19, 0x5d,
+  0x52, 0x03, 0x57, 0x90, 0x89, 0x18, 0x42, 0xa4, 0x56, 0x99, 0x5c, 0x27,
+  0x69, 0x75, 0xd3, 0x95, 0x8f, 0x7b, 0x8d, 0x4c, 0x2b, 0x96, 0x17, 0xd5,
+  0x4b, 0x52, 0x23, 0x79, 0x8f, 0xf4, 0xd2, 0x6d, 0x81, 0x46, 0xa5, 0x3b,
+  0x12, 0x35, 0x74, 0xb9, 0x29, 0x0b, 0xf1, 0x6f, 0x93, 0x4d, 0x23, 0xea,
+  0xb5, 0x4a, 0xab, 0x69, 0x3f, 0x6f, 0x13, 0xbe, 0x00, 0x2b, 0xbb, 0xf0,
+  0x21, 0x2f, 0x42, 0x30, 0xda, 0xef, 0xf0, 0x00, 0x70, 0xf6, 0x1d, 0xac,
+  0xf3, 0x87, 0xd8, 0xcd, 0x93, 0xdd, 0xa6, 0xa2, 0xf6, 0xcb, 0xc2, 0x6c,
+  0x0d, 0x71, 0xb1, 0x11, 0xac, 0xf8, 0x50, 0x84, 0xed, 0x8a, 0x4a, 0x44,
+  0x41, 0x20, 0x6d, 0xa3, 0x66, 0x54, 0x64, 0x4c, 0x16, 0x26, 0x9b, 0x68,
+  0xa0, 0x2c, 0x4b, 0xc9, 0xb1, 0x40, 0xda, 0x6d, 0xb1, 0x3a, 0x7e, 0x4a,
+  0xe4, 0xec, 0x90, 0x09, 0x90, 0x88, 0xa9, 0xcf, 0xa4, 0x13, 0x13, 0xc4,
+  0x7c, 0x11, 0xc9, 0x7e, 0x25, 0x47, 0xdb, 0x57, 0xc4, 0x04, 0x15, 0x32,
+  0xf6, 0x91, 0x13, 0x13, 0xb9, 0x4c, 0x8f, 0x54, 0x6c, 0xca, 0xeb, 0x48,
+  0xfd, 0xce, 0x46, 0xf0, 0x7d, 0x55, 0x4d, 0x25, 0x82, 0x8d, 0x8e, 0xb0,
+  0x40, 0x4a, 0x26, 0x82, 0x2f, 0x29, 0xc8, 0x92, 0x17, 0xe5, 0xbd, 0x05,
+  0xb0, 0x02, 0x7c, 0xe4, 0xe2, 0x64, 0x18, 0x22, 0xeb, 0x58, 0x49, 0x84,
+  0x0e, 0xbf, 0x45, 0x5a, 0xba, 0x68, 0x0c, 0x6c, 0x59, 0xe6, 0x0c, 0x98,
+  0xf0, 0x0d, 0x63, 0x8b, 0x6a, 0x3e, 0xb7, 0xba, 0x93, 0x6a, 0xdd, 0x6c,
+  0x9f, 0x43, 0xe9, 0x78, 0x90, 0x04, 0x86, 0x23, 0xc1, 0xd1, 0xa1, 0xc1,
+  0xf7, 0x0d, 0xe0, 0x07, 0xac, 0x91, 0xa7, 0x43, 0x9c, 0xfc, 0xaf, 0x22,
+  0x01, 0x89, 0x5a, 0xd6, 0xef, 0x58, 0xa6, 0xea, 0x04, 0xa0, 0xf6, 0x53,
+  0x8e, 0x33, 0xc8, 0xe6, 0xe3, 0xf2, 0x7e, 0x11, 0xc6, 0x5c, 0x4e, 0x3e,
+  0xa1, 0x58, 0x7b, 0x48, 0x7f, 0x40, 0xe7, 0x07, 0x23, 0x46, 0x49, 0xa9,
+  0x44, 0xd2, 0xd1, 0xe8, 0x13, 0x37, 0xc0, 0x80, 0xfe, 0xf9, 0x86, 0xdd,
+  0xe5, 0xdd, 0x6f, 0x37, 0x07, 0x33, 0xa2, 0x49, 0x0d, 0x42, 0x69, 0xac,
+  0x87, 0x09, 0x4b, 0x70, 0x2a, 0xa1, 0x80, 0x97, 0x18, 0x60, 0x36, 0x7c,
+  0x7f, 0xe2, 0x6a, 0x6a, 0x6f, 0xf2, 0x92, 0x2d, 0xd9, 0x4e, 0xdd, 0x6b,
+  0xec, 0x36, 0x2f, 0x4f, 0x24, 0x82, 0xd1, 0x10, 0x45, 0xc3, 0xdd, 0xa7,
+  0x9d, 0xd4, 0x64, 0x7a, 0xdb, 0xfc, 0xa0, 0xe8, 0xc4, 0xea, 0xfd, 0xbf,
+  0x10, 0xee, 0x53, 0xab, 0xf5, 0xea, 0x53, 0xb7, 0xdd, 0x6d, 0xf4, 0xc3,
+  0xb9, 0x8e, 0xff, 0xd0, 0x6e, 0xf0, 0xec, 0xdb, 0x2b, 0xc2, 0x1c, 0x04,
+  0x60, 0xab, 0x9d, 0xfc, 0x13, 0xb1, 0xb1, 0x86, 0xed, 0xd7, 0x8d, 0xb4,
+  0x1d, 0x5c, 0x5e, 0x5c, 0x20, 0x24, 0xe5, 0x84, 0x20, 0x46, 0xa6, 0xd4,
+  0x64, 0xaf, 0xe4, 0x72, 0x9a, 0xde, 0xc5, 0x0a, 0xe0, 0xf0, 0x49, 0x12,
+  0x54, 0x0f, 0x9a, 0x6c, 0x18, 0xd9, 0x5d, 0xf9, 0x01, 0x7f, 0x75, 0x74,
+  0x30, 0xbc, 0x18, 0xb4, 0xef, 0xb9, 0x4e, 0xba, 0x29, 0x56, 0xcf, 0x83,
+  0x4a, 0xc3, 0xd0, 0x4a, 0x72, 0x22, 0xe2, 0x5d, 0x14, 0x99, 0x96, 0x07,
+  0x27, 0x63, 0x23, 0xf9, 0x49, 0x5a, 0x97, 0x44, 0x84, 0x08, 0x44, 0x20,
+  0x8b, 0xa5, 0xec, 0x04, 0x1e, 0xe5, 0x53, 0x9e, 0x02, 0x0d, 0x8c, 0x18,
+  0xfe, 0xac, 0x52, 0xf9, 0xb9, 0x42, 0xc9, 0xdc, 0x62, 0x0a, 0x4b, 0x51,
+  0xa4, 0x14, 0x54, 0x7b, 0xdb, 0xbe, 0x3f, 0x38, 0x7f, 0x77, 0xfc, 0xee,
+  0xeb, 0xfd, 0xc6, 0x45, 0x3d, 0x05, 0xb4, 0xb0, 0xc6, 0x2d, 0x48, 0x15,
+  0x2a, 0x59, 0x2e, 0x31, 0xa9, 0x8f, 0xee, 0x83, 0x82, 0x70, 0x6d, 0xa2,
+  0x9e, 0xa6, 0x57, 0xe2, 0x86, 0xa9, 0x6e, 0xc4, 0x5a, 0xa9, 0xb5, 0x39,
+  0x19, 0xa2, 0xa7, 0x45, 0x25, 0xad, 0xfc, 0x47, 0x6c, 0x32, 0x9b, 0x0f,
+  0x6f, 0x8b, 0x9b, 0x4e, 0x7c, 0xec, 0xf7, 0xf9, 0x5c, 0x8a, 0x7b, 0x35,
+  0xec, 0x20, 0xcd, 0x7d, 0x36, 0x6d, 0x2e, 0xa8, 0xcf, 0x82, 0x7a, 0x19,
+  0xab, 0xd0, 0x1e, 0xb8, 0x7c, 0x32, 0xee, 0xfa, 0x5f, 0xbe, 0x06, 0xdd,
+  0x1a, 0x6a, 0x41, 0x89, 0xbc, 0x5f, 0xb2, 0x06, 0x4f, 0x9f, 0xb6, 0xd6,
+  0x80, 0xae, 0xa5, 0xea, 0xa9, 0xd8, 0x40, 0x1f, 0x48, 0xcc, 0x08, 0x4c,
+  0x6e, 0x08, 0x91, 0x3b, 0x3d, 0xfc, 0x76, 0xf8, 0xf4, 0xd1, 0x8c, 0x0c,
+  0x79, 0xa3, 0x0b, 0xe5, 0xf0, 0x48, 0x4e, 0x46, 0x53, 0xcc, 0x7b, 0x16,
+  0x9a, 0xca, 0x23, 0x27, 0xbb, 0x59, 0x06, 0x13, 0xd6, 0xcf, 0xbc, 0x58,
+  0xba, 0x1a, 0x6c, 0x01, 0x24, 0x66, 0xcf, 0x55, 0xea, 0xbb, 0x8f, 0x14,
+  0xb9, 0xb7, 0x0a, 0x99, 0x41, 0x4d, 0xcc, 0x4e, 0xd4, 0xa4, 0xe6, 0x5a,
+  0xee, 0xed, 0x0e, 0x3e, 0xeb, 0xb5, 0xe5, 0x4c, 0x62, 0x56, 0x24, 0x78,
+  0x4f, 0x97, 0xe8, 0x5b, 0x92, 0x32, 0xcd, 0xb2, 0xeb, 0xa2, 0x78, 0x23,
+  0x02, 0x41, 0xf5, 0xd4, 0x25, 0x7b, 0xe0, 0x16, 0xf7, 0x83, 0xd5, 0xed,
+  0x4d, 0xf5, 0xa9, 0xfd, 0xed, 0x6d, 0x6f, 0xe8, 0x94, 0x98, 0xd3, 0xc1,
+  0x6f, 0xa7, 0x8e, 0x49, 0x9f, 0xe9, 0xaf, 0x22, 0x8a, 0xf4, 0xd3, 0xa8,
+  0x62, 0x85, 0xe7, 0xf7, 0x93, 0xa9, 0xe2, 0xf3, 0x55, 0xfc, 0xde, 0x5d,
+  0x97, 0xbf, 0x80, 0x2e, 0x44, 0xa9, 0xfb, 0xdf, 0x89, 0x2a, 0xd2, 0xe4,
+  0xd3, 0xe8, 0x22, 0x6d, 0x13, 0x46, 0x04, 0x37, 0xe5, 0xb7, 0x44, 0xae,
+  0xe6, 0x51, 0x3c, 0xeb, 0xbb, 0xfa, 0x6a, 0xbf, 0x82, 0x62, 0x9e, 0xe9,
+  0x4c, 0x37, 0xd9, 0x37, 0xa0, 0x4e, 0x71, 0xc3, 0x87, 0x36, 0x17, 0xcd,
+  0x8a, 0x42, 0x5a, 0x22, 0x14, 0x6d, 0xd9, 0x85, 0xb8, 0x9a, 0x07, 0x45,
+  0xa8, 0xab, 0x13, 0xe6, 0xfe, 0xcb, 0x69, 0xed, 0xff, 0x08, 0x0e, 0xf4,
+  0xcc, 0x57, 0xc7, 0xfb, 0x14, 0x92, 0x7b, 0x76, 0xed, 0x48, 0xae, 0x83,
+  0xda, 0x1d, 0xf0, 0xa6, 0xdf, 0x38, 0xb9, 0xab, 0x2d, 0xda, 0xb9, 0x55,
+  0x87, 0x1d, 0xed, 0xae, 0x2c, 0xe6, 0x57, 0xf8, 0x25, 0xa8, 0xe0, 0x24,
+  0x26, 0x12, 0x4b, 0x44, 0xea, 0x98, 0x52, 0x79, 0x6a, 0x0e, 0x6f, 0x24,
+  0x30, 0xdb, 0x0b, 0xac, 0x25, 0x8d, 0xa0, 0x73, 0x67, 0x3e, 0x7b, 0x94,
+  0xd8, 0x3b, 0xc9, 0x8c, 0x4a, 0xef, 0x46, 0xdc, 0x7d, 0xa9, 0x12, 0x68,
+  0x34, 0xee, 0xfc, 0x57, 0x91, 0x58, 0x53, 0x8e, 0x11, 0x98, 0x3e, 0x7e,
+  0xd7, 0x86, 0x74, 0xee, 0xd8, 0x68, 0xd2, 0x81, 0xca, 0x7c, 0x28, 0xff,
+  0xf1, 0xff, 0x14, 0x1e, 0xfa, 0xec, 0xd3, 0xc8, 0xf9, 0x5f, 0x71, 0xb3,
+  0xfe, 0x6f, 0x44, 0xbc, 0xb1, 0x6d, 0xde, 0x54, 0x50, 0x53, 0xd1, 0x88,
+  0xe4, 0x62, 0xd9, 0xf2, 0xe8, 0x26, 0xac, 0xc8, 0xf0, 0x2a, 0x1e, 0x9f,
+  0x7d, 0xf7, 0x9c, 0x83, 0x22, 0x87, 0xdd, 0xfa, 0x47, 0x27, 0xaf, 0x0f,
+  0xce, 0x22, 0x37, 0xc3, 0x55, 0x55, 0xa5, 0x8b, 0xdc, 0xac, 0x25, 0x8f,
+  0x18, 0x6f, 0xbc, 0x75, 0xba, 0x63, 0xa3, 0xd1, 0xed, 0x32, 0x15, 0x11,
+  0x9e, 0xbe, 0xf1, 0xcc, 0x99, 0x53, 0x2e, 0xff, 0x3a, 0x89, 0xbb, 0x2f,
+  0x1f, 0xb2, 0x05, 0xe5, 0xf5, 0x83, 0x26, 0x1f, 0x77, 0xcc, 0x1b, 0x29,
+  0xd3, 0xab, 0x26, 0x26, 0xe6, 0x9d, 0xb6, 0x3f, 0x6a, 0x65, 0xd6, 0xb4,
+  0x6f, 0xfd, 0xa1, 0xc6, 0x23, 0x89, 0x5d, 0xbe, 0xaf, 0x6d, 0x60, 0xf5,
+  0xea, 0x8b, 0x6a, 0x75, 0x62, 0xd5, 0xae, 0xf3, 0xe5, 0x25, 0xe3, 0xf8,
+  0x57, 0x9d, 0xa4, 0xd1, 0x3b, 0xae, 0xb1, 0xe2, 0xf2, 0x8d, 0xe5, 0x69,
+  0xb7, 0xeb, 0x52, 0xf6, 0x54, 0xb3, 0x5d, 0xe7, 0xe3, 0x7c, 0x91, 0x4e,
+  0x35, 0x0b, 0xf8, 0xa1, 0xf2, 0x87, 0x9d, 0xf2, 0xa5, 0xcd, 0x09, 0x91,
+  0xbe, 0xdf, 0x46, 0xd9, 0x05, 0xf9, 0x07, 0x75, 0x09, 0xac, 0x28, 0x79,
+  0x90, 0xe1, 0xae, 0x98, 0x71, 0x6a, 0x2a, 0xe0, 0x9c, 0x0e, 0xb0, 0x3c,
+  0x7e, 0xa0, 0x9b, 0xac, 0x06, 0x3b, 0x0d, 0xb2, 0xca, 0x76, 0x5f, 0x3c,
+  0xdf, 0x4d, 0xaa, 0xf4, 0x9e, 0x11, 0xc4, 0x2a, 0x7d, 0xf9, 0xe9, 0xe0,
+  0xc9, 0x36, 0x90, 0x12, 0xf3, 0xda, 0x55, 0x0c, 0x1c, 0x89, 0xb0, 0x81,
+  0xe6, 0x03, 0x68, 0x15, 0x87, 0x1c, 0x65, 0x65, 0x49, 0xdf, 0x1d, 0x1d,
+  0x26, 0x52, 0x6d, 0x87, 0x53, 0xc2, 0x5b, 0x4a, 0x6e, 0x22, 0xeb, 0x86,
+  0x85, 0xb3, 0xf2, 0xba, 0x31, 0xc5, 0x3c, 0xb2, 0x1c, 0x46, 0x9a, 0x9c,
+  0xd4, 0x31, 0x77, 0x03, 0x01, 0xaf, 0x14, 0x2a, 0xd5, 0x75, 0x89, 0xc2,
+  0x64, 0x85, 0x4b, 0x12, 0x42, 0x02, 0x3c, 0x5c, 0x51, 0xb6, 0xaa, 0x49,
+  0x53, 0x2f, 0xe3, 0xc1, 0x63, 0xe7, 0x0e, 0xc2, 0x06, 0x4e, 0x58, 0x54,
+  0xe7, 0x11, 0x0f, 0xbf, 0xbe, 0x63, 0x75, 0xee, 0x1a, 0xb9, 0x36, 0xbe,
+  0xde, 0xeb, 0x71, 0x0c, 0xa9, 0xca, 0x17, 0x2b, 0x92, 0x22, 0x93, 0x53,
+  0x60, 0x2e, 0x6e, 0xf4, 0x37, 0xec, 0x9a, 0xb2, 0xb0, 0x2a, 0x2d, 0x05,
+  0x14, 0x2b, 0xdc, 0xf5, 0x4f, 0x97, 0x5b, 0x6b, 0xdc, 0x06, 0xa4, 0xca,
+  0xcf, 0xb3, 0xba, 0xaf, 0xad, 0xbd, 0x3c, 0x3d, 0xbb, 0x78, 0x75, 0x9b,
+  0x76, 0xe0, 0xb0, 0x00, 0xa9, 0x6c, 0x75, 0x66, 0xbc, 0x19, 0x1d, 0x6f,
+  0x06, 0x39, 0x73, 0x43, 0x97, 0x3c, 0x66, 0x4f, 0xc6, 0xa0, 0x07, 0x2f,
+  0x2e, 0xfe, 0x7c, 0x76, 0xf4, 0xea, 0x25, 0x8c, 0xf0, 0x5f, 0xc0, 0x13,
+  0x52, 0x35, 0x6c, 0xf2, 0x49, 0x7d, 0xbf, 0xe8, 0xde, 0x8c, 0x3f, 0xbc,
+  0x3e, 0x1e, 0x9e, 0x9d, 0x9c, 0x1e, 0xbe, 0x7a, 0xf9, 0x03, 0xac, 0x0d,
+  0xb4, 0x7a, 0xf7, 0xc1, 0xbb, 0xee, 0x33, 0x97, 0x07, 0xd3, 0x2d, 0xa0,
+  0x7e, 0xf4, 0xfd, 0x87, 0xa3, 0x77, 0xdf, 0xbd, 0x7a, 0x79, 0x9b, 0x96,
+  0x3d, 0xcc, 0x4f, 0xde, 0x06, 0xa0, 0xcd, 0xfc, 0x36, 0xa7, 0xcb, 0x06,
+  0x44, 0xec, 0x2a, 0xd6, 0x05, 0x6b, 0x74, 0x81, 0x35, 0x5a, 0x2e, 0x10,
+  0x64, 0xfa, 0x40, 0xb4, 0x21, 0x73, 0x59, 0x5f, 0xb2, 0xbc, 0x49, 0x1d,
+  0x41, 0x64, 0xa3, 0x25, 0xfe, 0x69, 0xb8, 0x24, 0xa2, 0xc1, 0x58, 0x6a,
+  0x8f, 0x96, 0x18, 0x97, 0xba, 0x4f, 0xbe, 0x6a, 0x9a, 0xd5, 0x69, 0x74,
+  0x0d, 0x73, 0x5d, 0xae, 0x43, 0x8f, 0xc8, 0x24, 0xd8, 0xe3, 0x0f, 0x86,
+  0x56, 0x0a, 0xef, 0xf2, 0x51, 0xdb, 0x2e, 0xa8, 0x4c, 0xaa, 0x67, 0xd3,
+  0x14, 0x72, 0x46, 0x02, 0xd9, 0xb6, 0x38, 0xd6, 0x69, 0xd7, 0xec, 0x17,
+  0xe4, 0x52, 0x70, 0xd4, 0x83, 0x82, 0x55, 0x16, 0x52, 0x43, 0x9e, 0xc7,
+  0x63, 0x95, 0x25, 0x9a, 0xb3, 0x50, 0xa8, 0xcb, 0x58, 0x56, 0x32, 0x4f,
+  0x00, 0x25, 0x53, 0x6e, 0xdc, 0xb8, 0x4a, 0xa1, 0xdf, 0x66, 0x52, 0x8c,
+  0xe5, 0x2c, 0x06, 0xf1, 0xa6, 0x91, 0xb4, 0x49, 0x35, 0xca, 0x6b, 0x35,
+  0x45, 0x71, 0x01, 0x43, 0xa4, 0x44, 0x4a, 0x27, 0xb0, 0xb2, 0x5d, 0x80,
+  0xba, 0x6c, 0xac, 0x2f, 0xc2, 0xd1, 0x75, 0x22, 0xc3, 0x25, 0x30, 0x70,
+  0x67, 0xce, 0x0e, 0x5b, 0xe1, 0x8a, 0x8f, 0x6c, 0x0e, 0xb7, 0x5c, 0x16,
+  0x2c, 0x5a, 0x3c, 0x7b, 0xef, 0x81, 0xe8, 0x23, 0xd0, 0x15, 0x9d, 0x43,
+  0xd8, 0x16, 0x94, 0xfd, 0x42, 0xad, 0xf7, 0xd7, 0x51, 0xff, 0x4f, 0x5d,
+  0x8c, 0x5c, 0xfd, 0xcf, 0x9c, 0x0d, 0xc4, 0x19, 0xf2, 0x79, 0x88, 0x74,
+  0x91, 0x46, 0x0b, 0xb7, 0x49, 0x0a, 0x60, 0x72, 0xa0, 0xe1, 0x69, 0x34,
+  0xf5, 0x5e, 0xbb, 0x8f, 0xc1, 0x7a, 0xd2, 0x28, 0x32, 0x28, 0x1e, 0xcf,
+  0xad, 0x4e, 0xb2, 0xe7, 0xbd, 0x5c, 0x11, 0x81, 0x14, 0xef, 0xe2, 0x40,
+  0xa9, 0x7b, 0x0c, 0xb5, 0x35, 0x34, 0xf6, 0x6c, 0x8c, 0x88, 0xf2, 0x6e,
+  0xba, 0xa0, 0x34, 0xcc, 0xa9, 0xb9, 0xba, 0x0a, 0x63, 0x88, 0x31, 0x6a,
+  0x01, 0xa3, 0x51, 0xb9, 0xd4, 0x12, 0xf1, 0xf2, 0x99, 0x2f, 0x57, 0xda,
+  0x64, 0x61, 0x3e, 0x06, 0x6c, 0x28, 0x9b, 0x18, 0x59, 0xd4, 0x3f, 0xb7,
+  0x04, 0x64, 0xb0, 0xc2, 0xfe, 0x85, 0x0f, 0xe6, 0x44, 0x2c, 0x66, 0x04,
+  0x77, 0x41, 0x4b, 0xb4, 0xf7, 0x2f, 0x3a, 0x98, 0xa9, 0x82, 0xbb, 0x9e,
+  0x97, 0x41, 0xf6, 0x04, 0x07, 0x0e, 0x63, 0xee, 0x42, 0x49, 0x9a, 0x8b,
+  0xc5, 0x42, 0xc5, 0x40, 0xa3, 0xaa, 0xe1, 0x91, 0x59, 0x91, 0xef, 0x5e,
+  0x25, 0xeb, 0x57, 0xd3, 0x62, 0x34, 0xa2, 0x49, 0xad, 0xdb, 0x1d, 0x47,
+  0x23, 0x4c, 0xcb, 0x2b, 0x16, 0x7a, 0x7d, 0x8d, 0x67, 0x77, 0x58, 0xb9,
+  0xd8, 0x28, 0xf7, 0xb5, 0x2a, 0x67, 0x1b, 0xbb, 0xab, 0xde, 0x25, 0xdd,
+  0x55, 0x2e, 0x03, 0xea, 0x4d, 0xa5, 0x99, 0x06, 0xe8, 0xf1, 0xe7, 0x89,
+  0xf5, 0xdf, 0x89, 0xee, 0x46, 0x8e, 0xb1, 0x4f, 0x07, 0x56, 0xe6, 0xc3,
+  0x2c, 0x47, 0xab, 0x3f, 0xe6, 0x91, 0xfc, 0x5f, 0x4c, 0x98, 0x26, 0xb0,
+  0xfe, 0x5f, 0x18, 0xc5, 0x6e, 0x0f, 0xff, 0xee, 0xfd, 0x7d, 0xdd, 0x8a,
+  0x7c, 0xa2, 0xea, 0x7b, 0x50, 0x50, 0x34, 0x52, 0x3f, 0x14, 0x6e, 0xda,
+  0x95, 0x8d, 0xe6, 0xb3, 0xab, 0x1f, 0x77, 0xfb, 0xbb, 0x3b, 0x3b, 0x3b,
+  0x3f, 0x0f, 0x16, 0x58, 0xb1, 0x4b, 0x6e, 0x15, 0x10, 0x88, 0x41, 0xab,
+  0xdb, 0xb2, 0x3c, 0xdb, 0xc1, 0x5d, 0x5f, 0x8f, 0x17, 0x7d, 0xd4, 0x41,
+  0xef, 0x46, 0x23, 0x5d, 0x2c, 0x4b, 0x2e, 0xb0, 0xc5, 0x93, 0xbb, 0x38,
+  0x3c, 0xfb, 0xf0, 0xee, 0xf4, 0xf5, 0xd1, 0xc9, 0xc1, 0x9f, 0x5d, 0xf1,
+  0x3f, 0x83, 0xd0, 0xc0, 0x20, 0x3e, 0x64, 0x69, 0x75, 0xff, 0xa1, 0xca,
+  0x6a, 0xfa, 0x72, 0xf3, 0xc9, 0x16, 0x82, 0xfd, 0xda, 0x7b, 0x0a, 0xdf,
+  0x62, 0x00, 0x40, 0x68, 0xc1, 0x61, 0x61, 0x39, 0xc1, 0x86, 0x54, 0xb2,
+  0xdb, 0x8c, 0x80, 0xc6, 0x40, 0x2f, 0x53, 0x64, 0x27, 0x74, 0x80, 0xac,
+  0xd4, 0xbd, 0xac, 0x4a, 0x27, 0x4a, 0x42, 0xbc, 0x49, 0x15, 0x86, 0x24,
+  0xd9, 0x24, 0x51, 0xef, 0xb3, 0xa7, 0xbb, 0x4f, 0xb6, 0x9a, 0xad, 0x3f,
+  0x6d, 0x45, 0xfa, 0xd6, 0x70, 0xf3, 0x8c, 0xa6, 0x37, 0x55, 0xfe, 0x37,
+  0xba, 0xc7, 0x80, 0x67, 0xdc, 0x0d, 0x9b, 0xbf, 0x60, 0xa4, 0x0e, 0x04,
+  0x28, 0xe0, 0xb7, 0xe4, 0xab, 0x93, 0x6f, 0x91, 0xb4, 0xe0, 0x74, 0xa4,
+  0x99, 0x40, 0x43, 0x24, 0x5f, 0x3c, 0xdb, 0xdd, 0xdb, 0x72, 0x65, 0xd0,
+  0x24, 0xe9, 0x09, 0x87, 0xbd, 0x13, 0x1f, 0xf1, 0xb7, 0x2c, 0xa8, 0x47,
+  0x25, 0x5c, 0xde, 0x3b, 0x4d, 0x39, 0x48, 0xc9, 0xae, 0x4d, 0x46, 0xda,
+  0x65, 0xa7, 0x7e, 0xcd, 0xd0, 0xc6, 0x48, 0x9f, 0xea, 0x40, 0x8a, 0x5d,
+  0x78, 0xd4, 0x81, 0x41, 0x88, 0x4b, 0x48, 0xc3, 0xd1, 0xac, 0xab, 0xb8,
+  0xac, 0xf3, 0xcf, 0x96, 0x9d, 0x56, 0x3a, 0xdf, 0x9a, 0x8b, 0x3d, 0x2f,
+  0x54, 0xb0, 0xaa, 0xe2, 0xeb, 0x1c, 0xc0, 0xdc, 0x69, 0x55, 0x05, 0xc6,
+  0x91, 0xe0, 0x59, 0x9a, 0x0c, 0x65, 0x41, 0xd0, 0x0f, 0xc2, 0xb3, 0x92,
+  0x20, 0x5e, 0x72, 0xb2, 0xa3, 0xba, 0xa9, 0x02, 0x97, 0xd4, 0x34, 0xbb,
+  0x4a, 0xc7, 0xf7, 0x89, 0xcb, 0xf4, 0xd1, 0xb4, 0x8c, 0x49, 0xd1, 0x41,
+  0x31, 0x87, 0xbc, 0x3b, 0x86, 0x1b, 0x6c, 0x9a, 0x4d, 0xe0, 0x23, 0x87,
+  0x33, 0x53, 0x0a, 0xaf, 0xd1, 0xa5, 0xe9, 0x44, 0xfd, 0xc6, 0xe8, 0x14,
+  0x1a, 0x62, 0x75, 0x2c, 0x8b, 0x2d, 0x71, 0x8b, 0xfa, 0x40, 0x36, 0x40,
+  0x57, 0x7e, 0x64, 0x4d, 0x9f, 0x7e, 0xde, 0xa2, 0xe0, 0x69, 0x85, 0x10,
+  0x0a, 0xc8, 0x88, 0xc9, 0x4b, 0xfb, 0xed, 0x8b, 0x6e, 0xd8, 0x69, 0xc2,
+  0xde, 0xd8, 0x36, 0x04, 0x1f, 0x8b, 0x96, 0x09, 0x24, 0x14, 0x44, 0x23,
+  0xe3, 0x36, 0x14, 0x6e, 0x28, 0x71, 0x67, 0x8e, 0xd7, 0xc5, 0x27, 0xc2,
+  0xd7, 0xcf, 0xfa, 0xf0, 0xfc, 0x6c, 0xbd, 0xa7, 0x7e, 0x5e, 0xea, 0xa3,
+  0x4f, 0x7f, 0x27, 0x7c, 0xfc, 0x90, 0x7a, 0xf8, 0xec, 0xa9, 0xda, 0x60,
+  0x79, 0xa0, 0x9c, 0x36, 0xde, 0xf5, 0x59, 0xf1, 0x77, 0x48, 0x97, 0xb8,
+  0x2b, 0xca, 0x89, 0xe0, 0xd6, 0xf8, 0x1c, 0x59, 0xe2, 0x15, 0xcd, 0x49,
+  0x8a, 0x55, 0xab, 0x67, 0xe5, 0xa5, 0x56, 0x2e, 0xb3, 0x9e, 0x03, 0xe6,
+  0xfb, 0x3c, 0xc8, 0x41, 0x27, 0xa4, 0xf8, 0x69, 0x6b, 0x21, 0xdd, 0x18,
+  0x5e, 0xda, 0x6f, 0xb1, 0x85, 0x4c, 0xdc, 0x63, 0x3c, 0x69, 0x3e, 0xb5,
+  0x86, 0x29, 0x87, 0x45, 0x8e, 0x63, 0x4f, 0xae, 0xf4, 0x78, 0x59, 0x9d,
+  0x9f, 0x60, 0x8e, 0x03, 0xf3, 0xa3, 0x2b, 0x34, 0x98, 0x5f, 0x3c, 0xad,
+  0xbb, 0xcc, 0x82, 0x47, 0xa4, 0xb0, 0xf0, 0xc3, 0xd3, 0xe3, 0x16, 0x5e,
+  0xe2, 0xdf, 0xe8, 0xb4, 0xf0, 0x85, 0x37, 0x0c, 0xfc, 0xb6, 0xd3, 0xd2,
+  0x13, 0xd7, 0x5c, 0x75, 0x37, 0xb9, 0x8e, 0x79, 0xa3, 0x7e, 0x7c, 0xef,
+  0x6e, 0x77, 0x07, 0x3b, 0x51, 0x67, 0xfc, 0x1b, 0xd4, 0x82, 0x6e, 0x02,
+  0x67, 0x62, 0x3a, 0x56, 0x4b, 0x00, 0xfe, 0x74, 0x2d, 0xac, 0xae, 0x7a,
+  0xb2, 0x81, 0x22, 0xae, 0x80, 0xb8, 0xc4, 0xcb, 0x0e, 0xa5, 0xa4, 0x51,
+  0xad, 0xef, 0x69, 0xe7, 0x64, 0xd2, 0xa0, 0x76, 0x7f, 0xdd, 0xa0, 0x76,
+  0x7f, 0xd3, 0x41, 0xed, 0xfd, 0xba, 0x41, 0xed, 0xfd, 0x56, 0x83, 0x2a,
+  0xfb, 0x96, 0x52, 0x15, 0xaf, 0x72, 0x71, 0x6e, 0x95, 0xfb, 0x20, 0x95,
+  0x02, 0x0f, 0x18, 0xfc, 0xf3, 0x42, 0x6f, 0xc9, 0xfe, 0x91, 0xbe, 0xeb,
+  0xe3, 0xcb, 0x44, 0xae, 0xeb, 0x86, 0x95, 0xbb, 0x1a, 0xb2, 0x2e, 0x22,
+  0xd7, 0xa2, 0xa2, 0x84, 0xd3, 0x55, 0x12, 0x56, 0xb0, 0x9c, 0x5b, 0x37,
+  0x3e, 0xac, 0x8e, 0x05, 0xef, 0x6e, 0xe1, 0x87, 0x2c, 0x57, 0x18, 0xfe,
+  0xc7, 0xd2, 0x17, 0x9e, 0x37, 0x27, 0x0c, 0xd8, 0xab, 0xa8, 0xde, 0x7c,
+  0xa4, 0x60, 0xbb, 0x69, 0x72, 0xb9, 0x64, 0xd1, 0x00, 0x4f, 0x4e, 0x96,
+  0x92, 0x57, 0xc8, 0x00, 0xbc, 0xf9, 0x5c, 0xc3, 0xdf, 0xc5, 0xfa, 0x4b,
+  0xd2, 0xd4, 0x55, 0xc1, 0x7f, 0x62, 0x9c, 0xbd, 0x8e, 0xf1, 0xcd, 0x60,
+  0x79, 0x27, 0x99, 0xc0, 0xb4, 0x23, 0x25, 0x27, 0x9f, 0x4b, 0x89, 0x5b,
+  0xda, 0xd6, 0x9e, 0xc3, 0x86, 0x61, 0x05, 0x49, 0xf5, 0x0c, 0xd1, 0x93,
+  0xde, 0x77, 0x42, 0x3e, 0xa0, 0xd6, 0x20, 0x60, 0x06, 0x91, 0x8e, 0xaa,
+  0x55, 0x22, 0x3f, 0x36, 0x2c, 0xb5, 0x6e, 0xf5, 0x34, 0x57, 0xd8, 0x6a,
+  0xe2, 0xfe, 0xb1, 0xd0, 0x83, 0xc0, 0x61, 0x56, 0xfd, 0x5b, 0x58, 0x19,
+  0xe8, 0xfb, 0x11, 0xc0, 0x84, 0x91, 0xb9, 0x22, 0x8b, 0xd6, 0xb1, 0xeb,
+  0x55, 0xe3, 0x3c, 0xff, 0x2d, 0x1d, 0x99, 0xd2, 0x2b, 0x77, 0xf3, 0xf0,
+  0x86, 0x21, 0x58, 0x9c, 0xb7, 0x4c, 0xf7, 0xac, 0xb1, 0x69, 0x6e, 0xcf,
+  0xb0, 0x65, 0x6e, 0xc7, 0xfe, 0xdf, 0xb3, 0x61, 0xf4, 0xff, 0xb4, 0x74,
+  0xf7, 0x48, 0x21, 0xce, 0xa7, 0xa9, 0x14, 0x16, 0x97, 0xa5, 0x91, 0xaa,
+  0x08, 0xd3, 0x2c, 0x85, 0xa8, 0x65, 0x6e, 0x86, 0xeb, 0xec, 0xa3, 0x18,
+  0x68, 0xba, 0x97, 0xbd, 0x64, 0x25, 0x5f, 0x9b, 0x69, 0xf3, 0x60, 0x78,
+  0x78, 0x7c, 0xdc, 0x30, 0xf4, 0x62, 0xd9, 0x38, 0xc6, 0x55, 0xb3, 0x29,
+  0x2b, 0xa4, 0xa7, 0x79, 0x15, 0x38, 0x86, 0x48, 0x28, 0x90, 0xcc, 0x23,
+  0x54, 0x12, 0xa9, 0x72, 0xcb, 0xae, 0x4f, 0x25, 0xa6, 0x6f, 0x39, 0x87,
+  0x05, 0x07, 0x89, 0x3f, 0xd7, 0x4b, 0xd2, 0x4e, 0xaa, 0x7f, 0x36, 0x41,
+  0x0e, 0x7e, 0x6b, 0xd2, 0x8b, 0xa4, 0x2d, 0x9f, 0x95, 0x9a, 0x59, 0xcd,
+  0x09, 0x0a, 0x9c, 0xe2, 0x21, 0xa9, 0xc7, 0x00, 0xc0, 0x82, 0xa2, 0x2e,
+  0x14, 0x48, 0x83, 0xb4, 0xf1, 0x72, 0x79, 0x60, 0xa7, 0x75, 0x74, 0xac,
+  0x57, 0x6c, 0x2a, 0xac, 0x5a, 0x5c, 0x7a, 0xb7, 0xc5, 0xa5, 0x97, 0xf3,
+  0xfc, 0x23, 0xdb, 0xa9, 0x33, 0x14, 0x09, 0x48, 0xeb, 0xeb, 0x15, 0x95,
+  0xa8, 0x0f, 0xad, 0x6a, 0xa6, 0x03, 0x2e, 0xa5, 0x45, 0xe0, 0x52, 0x94,
+  0x52, 0xe7, 0x31, 0x91, 0x36, 0x7a, 0xa1, 0xb5, 0x86, 0x19, 0x76, 0xc4,
+  0x46, 0x3c, 0xcf, 0x6a, 0x78, 0x99, 0x5a, 0x4a, 0x5c, 0x23, 0xa6, 0xaf,
+  0xbf, 0xec, 0x59, 0xd5, 0x6f, 0x96, 0x6d, 0xf6, 0x57, 0xca, 0x6e, 0x41,
+  0xe6, 0x73, 0x50, 0xef, 0x1b, 0xf9, 0x98, 0x26, 0x81, 0xe8, 0xad, 0x27,
+  0x90, 0xe5, 0x6c, 0x78, 0xf1, 0x52, 0x4f, 0x2c, 0x70, 0x6b, 0x90, 0x9c,
+  0x3a, 0x8a, 0xe9, 0xcf, 0x7b, 0x1c, 0x0c, 0x5c, 0x97, 0x63, 0x8d, 0x2d,
+  0xe5, 0xdf, 0xfb, 0x96, 0x4a, 0x1f, 0x63, 0x52, 0x5c, 0x93, 0x10, 0x6a,
+  0xc4, 0x7d, 0xa3, 0xf0, 0xa5, 0x1b, 0x5d, 0xaf, 0x59, 0x3e, 0x9a, 0x34,
+  0x0f, 0xae, 0xbc, 0x2b, 0x89, 0xa5, 0x1d, 0x45, 0x5b, 0x26, 0x11, 0xaf,
+  0x79, 0x2e, 0xd2, 0xa3, 0x88, 0x77, 0x92, 0x0d, 0xaa, 0x8f, 0x2b, 0x50,
+  0xe4, 0x62, 0x9a, 0xd7, 0xa8, 0xcc, 0xac, 0x7a, 0xbf, 0xe4, 0x49, 0x8c,
+  0x8b, 0x29, 0xf1, 0x9b, 0x8e, 0x77, 0x28, 0x77, 0xe5, 0x61, 0x61, 0xa8,
+  0x9f, 0x2d, 0x8a, 0xaa, 0xca, 0xb5, 0xa2, 0x87, 0xd8, 0x4c, 0xf9, 0x3d,
+  0xb3, 0x8f, 0x84, 0x3d, 0x47, 0x30, 0xb1, 0x1b, 0x86, 0x00, 0xce, 0x7b,
+  0xb4, 0xcd, 0x18, 0xa7, 0xb4, 0xa2, 0x1c, 0xd0, 0x1a, 0xcf, 0x36, 0xb3,
+  0x52, 0x4a, 0xdf, 0x12, 0x8d, 0x93, 0x82, 0x47, 0xa7, 0xe1, 0xbb, 0x67,
+  0x86, 0xa7, 0xf1, 0x7d, 0x3e, 0x9f, 0x80, 0xc5, 0x48, 0x85, 0x04, 0xdd,
+  0x4b, 0x5f, 0x16, 0x3b, 0xca, 0x73, 0x85, 0x29, 0xda, 0x9b, 0x4a, 0xab,
+  0x62, 0x61, 0x9d, 0xb7, 0xb7, 0x05, 0xc6, 0x37, 0x1a, 0x23, 0x66, 0xd6,
+  0xc5, 0x0e, 0x0d, 0x6b, 0xdd, 0x4a, 0xee, 0xbb, 0xc3, 0xb5, 0x84, 0x56,
+  0x55, 0x8c, 0xa4, 0x5a, 0x55, 0xea, 0x47, 0x7e, 0x91, 0xe3, 0x44, 0x0c,
+  0x94, 0x24, 0xda, 0xc7, 0x93, 0xb3, 0x07, 0x6a, 0x51, 0x2a, 0x7d, 0x34,
+  0x7d, 0x4b, 0x1e, 0x47, 0xed, 0xc4, 0xea, 0x1a, 0xe9, 0x1b, 0x30, 0x4d,
+  0xb2, 0x8d, 0x76, 0x2d, 0x1e, 0x1a, 0x6e, 0xb0, 0xd6, 0xbd, 0xd6, 0x49,
+  0xe8, 0x80, 0xd2, 0x18, 0x69, 0x5a, 0x6c, 0x4a, 0x17, 0xe2, 0x41, 0x37,
+  0xb6, 0x97, 0x34, 0x9c, 0xcc, 0xb2, 0x74, 0x3d, 0x0d, 0xde, 0x2d, 0xd5,
+  0xbf, 0x63, 0x56, 0x5b, 0x59, 0xd7, 0xee, 0xc5, 0x80, 0x1c, 0x9d, 0x8a,
+  0x4d, 0xfa, 0x6c, 0xe9, 0x96, 0x22, 0xbd, 0x97, 0xbe, 0x70, 0x4f, 0x97,
+  0xae, 0x9b, 0xd5, 0x62, 0xc3, 0x0d, 0x03, 0x19, 0x4a, 0xe2, 0x63, 0xf2,
+  0xba, 0xb8, 0x9b, 0xf7, 0x4f, 0x10, 0xbe, 0x9d, 0x9c, 0x14, 0x57, 0xd0,
+  0x5a, 0xdf, 0x31, 0x29, 0x76, 0x76, 0xed, 0xfd, 0xd9, 0xbb, 0x64, 0xf3,
+  0x3d, 0xe6, 0x74, 0xe6, 0xfc, 0x9a, 0x78, 0x74, 0x2b, 0x91, 0xab, 0x97,
+  0xd8, 0x63, 0x50, 0x46, 0xa8, 0x97, 0x1c, 0xfd, 0x70, 0xf0, 0xf6, 0xec,
+  0xe4, 0xe8, 0xa7, 0x15, 0x4a, 0x2d, 0x3e, 0xfe, 0x32, 0xb0, 0xc1, 0x59,
+  0x6d, 0x36, 0xba, 0xb4, 0xa7, 0xf7, 0xab, 0x78, 0x81, 0x1c, 0x1f, 0x23,
+  0xc1, 0xe1, 0xf0, 0xec, 0xb8, 0xaf, 0xf0, 0x22, 0xc2, 0x07, 0x14, 0x93,
+  0x51, 0x0e, 0xb0, 0xa5, 0xac, 0x7e, 0xdb, 0x0d, 0x59, 0x77, 0xe7, 0xa1,
+  0xe7, 0x91, 0xd9, 0x7b, 0x82, 0x65, 0x4e, 0x53, 0x88, 0x83, 0xe1, 0xd7,
+  0x06, 0x5b, 0x32, 0xee, 0xd8, 0xf0, 0x7c, 0xf1, 0x55, 0x36, 0xc7, 0x4c,
+  0x33, 0x05, 0x44, 0x5e, 0xc1, 0x45, 0x19, 0xe5, 0x47, 0xb1, 0x9f, 0xe1,
+  0x4b, 0xea, 0xd4, 0x4b, 0x53, 0xdf, 0xd2, 0xc8, 0x71, 0x3d, 0x8d, 0xbb,
+  0x10, 0x0a, 0x11, 0xee, 0xd1, 0xae, 0xb9, 0xb9, 0x4f, 0xa2, 0xcc, 0x32,
+  0xd9, 0x5f, 0xff, 0x0d, 0x65, 0xbd, 0xf7, 0x2e, 0x14, 0xe4, 0x97, 0x5c,
+  0x27, 0x9f, 0x78, 0x9f, 0x68, 0x41, 0xf1, 0x87, 0xaf, 0x93, 0x5f, 0x4e,
+  0x16, 0x7a, 0x3f, 0x28, 0x61, 0x08, 0x65, 0x4c, 0x88, 0xe5, 0x08, 0xf5,
+  0xb7, 0x5d, 0x7e, 0x3e, 0x53, 0x05, 0x37, 0x08, 0xd3, 0x43, 0xd7, 0x24,
+  0xc4, 0xbc, 0x95, 0x93, 0x88, 0xc0, 0x11, 0xc2, 0xbd, 0xef, 0xe8, 0xe5,
+  0x9f, 0x44, 0x09, 0x4c, 0x08, 0xa1, 0x4f, 0x51, 0xf7, 0xbd, 0x1b, 0xe9,
+  0xf9, 0xa9, 0x74, 0xf0, 0xfe, 0xb7, 0xa5, 0x03, 0xae, 0x99, 0xf3, 0xf2,
+  0xfd, 0xf9, 0xc9, 0xca, 0x2d, 0x4f, 0xd5, 0x53, 0x00, 0xe6, 0x7e, 0x99,
+  0xd5, 0xe3, 0xeb, 0x6e, 0xed, 0xbf, 0xa2, 0x42, 0x9c, 0x35, 0xb8, 0xf2,
+  0xbd, 0x43, 0x04, 0xea, 0x64, 0x25, 0xab, 0xe0, 0xad, 0xcd, 0x52, 0x93,
+  0x80, 0x75, 0x60, 0x2c, 0xb0, 0x00, 0x68, 0x3a, 0x3e, 0xd3, 0xcc, 0xa3,
+  0x79, 0x70, 0x7f, 0xb1, 0xaa, 0x4b, 0xc9, 0xa6, 0x54, 0x2d, 0xac, 0x92,
+  0x75, 0x75, 0x37, 0xac, 0x47, 0x18, 0xdf, 0xfa, 0xa5, 0x7d, 0x45, 0x33,
+  0xd9, 0x92, 0xfd, 0xf7, 0xb6, 0xe9, 0x46, 0xc5, 0x21, 0xb9, 0x4e, 0x55,
+  0x46, 0x90, 0x92, 0x0e, 0x51, 0xd7, 0x3e, 0xdd, 0x04, 0x59, 0xc9, 0xfe,
+  0xc5, 0x6a, 0x39, 0xea, 0x87, 0x9c, 0x99, 0xa3, 0x47, 0x20, 0xd6, 0xbf,
+  0x3e, 0x3e, 0xbc, 0xe8, 0x25, 0x82, 0x24, 0xab, 0x39, 0x24, 0x1c, 0x2a,
+  0xd4, 0x16, 0x37, 0x90, 0x64, 0x22, 0xe4, 0x8a, 0x14, 0x13, 0x57, 0x55,
+  0x1e, 0xa2, 0xac, 0x8b, 0xce, 0x0a, 0xf7, 0xb1, 0x17, 0x60, 0x5b, 0x40,
+  0x1e, 0xed, 0x54, 0x7f, 0x08, 0xb6, 0xdc, 0x85, 0x97, 0xa1, 0xfe, 0x91,
+  0x4c, 0x11, 0x6b, 0xa8, 0x17, 0xa1, 0xab, 0x60, 0x03, 0x7a, 0xd5, 0xe4,
+  0xda, 0x74, 0x45, 0xba, 0xaf, 0x2f, 0xcd, 0x57, 0xf9, 0xfa, 0x46, 0xae,
+  0x88, 0x55, 0xb4, 0xfe, 0x52, 0x34, 0xae, 0xce, 0xdc, 0x8a, 0x4c, 0xba,
+  0x4d, 0x74, 0x67, 0xc5, 0x1d, 0xbe, 0x28, 0x5c, 0x89, 0x72, 0x76, 0xa9,
+  0xc5, 0xc4, 0x29, 0xa5, 0x09, 0x0d, 0x9c, 0xe8, 0xb9, 0x14, 0xdf, 0x7e,
+  0x01, 0x0e, 0xa7, 0x6a, 0x9f, 0x66, 0x65, 0x31, 0xc8, 0x8b, 0x47, 0x5e,
+  0x89, 0xb9, 0x8e, 0xcd, 0xb0, 0xed, 0x0e, 0x48, 0xa8, 0x0a, 0xb5, 0x5e,
+  0xf8, 0x0a, 0x78, 0x46, 0x9c, 0x7b, 0xad, 0xdf, 0x6f, 0xd7, 0xe9, 0xf4,
+  0x46, 0x81, 0x40, 0x26, 0xcb, 0x52, 0xca, 0x2d, 0xb3, 0x89, 0xd9, 0x3c,
+  0xcc, 0x03, 0xf6, 0xf5, 0x02, 0xf4, 0x3b, 0x06, 0xc3, 0x3e, 0x5a, 0x5e,
+  0x5d, 0x99, 0xe2, 0x4c, 0x6b, 0x6b, 0xc8, 0x44, 0x1b, 0x55, 0x22, 0x3a,
+  0x34, 0xad, 0xda, 0xfa, 0x72, 0x3e, 0xc9, 0x4a, 0x2b, 0x81, 0x55, 0x4c,
+  0x60, 0xe9, 0x3d, 0x48, 0x58, 0xe7, 0xe9, 0x02, 0x34, 0x95, 0x61, 0x95,
+  0x9f, 0x8d, 0x2f, 0x36, 0x0c, 0x27, 0x61, 0xfd, 0x9a, 0x54, 0x11, 0xe4,
+  0x18, 0x91, 0x4e, 0xbe, 0x2e, 0x3a, 0xf1, 0x48, 0x6a, 0x48, 0xf7, 0x92,
+  0x8d, 0x97, 0x1b, 0x51, 0x8c, 0x90, 0xe6, 0x3b, 0x62, 0x0d, 0x12, 0x7a,
+  0x19, 0x3b, 0x97, 0x3f, 0xed, 0xc3, 0x75, 0x4e, 0xba, 0x0b, 0xcb, 0xc3,
+  0x8a, 0xb6, 0x92, 0x48, 0xd8, 0x55, 0x9b, 0xd4, 0xa5, 0x20, 0xa6, 0x0c,
+  0xdc, 0x0f, 0x95, 0x47, 0xba, 0xf1, 0x07, 0x1d, 0x81, 0xab, 0x45, 0xc9,
+  0x68, 0xac, 0x97, 0x85, 0x87, 0x09, 0xe9, 0x40, 0x63, 0x62, 0x0c, 0xdd,
+  0xa8, 0x0f, 0x5f, 0x96, 0x5c, 0xee, 0x16, 0xa9, 0x4c, 0x0a, 0x4e, 0xa4,
+  0x25, 0x35, 0x64, 0x4e, 0x95, 0xe4, 0x9f, 0xc9, 0x4e, 0x31, 0xc1, 0x80,
+  0x4a, 0xf2, 0x08, 0xb2, 0x88, 0xca, 0xce, 0x4e, 0x07, 0xf7, 0x45, 0xe8,
+  0x18, 0xd8, 0xac, 0x44, 0x3e, 0x71, 0xc1, 0xb8, 0xa1, 0x97, 0x91, 0x82,
+  0x7a, 0x40, 0x2a, 0xe7, 0xe8, 0x3b, 0x0d, 0x74, 0x08, 0x6a, 0x6c, 0xd7,
+  0x02, 0xe9, 0x20, 0x29, 0x5f, 0x60, 0x76, 0xfc, 0x60, 0x36, 0x67, 0xa5,
+  0x52, 0x8f, 0x53, 0xaf, 0x5b, 0x05, 0x40, 0x90, 0x69, 0x0c, 0x75, 0xc1,
+  0x69, 0xc2, 0x4d, 0x4b, 0x8e, 0x45, 0x26, 0xfd, 0x5a, 0x63, 0x40, 0xa3,
+  0xb1, 0xd0, 0x18, 0x10, 0x09, 0x62, 0x08, 0x33, 0x86, 0x9b, 0x70, 0x2b,
+  0x9c, 0x24, 0x1c, 0x5c, 0x3c, 0x77, 0x78, 0x90, 0x63, 0xab, 0x70, 0x48,
+  0x93, 0x97, 0x22, 0x78, 0xae, 0x06, 0x40, 0xb0, 0x18, 0x9f, 0xc0, 0x3a,
+  0x94, 0xf0, 0xca, 0x71, 0x0e, 0xaf, 0xa1, 0xea, 0xc3, 0x96, 0x39, 0xcd,
+  0xe0, 0xb1, 0x66, 0xbf, 0x62, 0xc7, 0x58, 0xcf, 0xe6, 0x59, 0x56, 0x12,
+  0xa5, 0x15, 0xc5, 0xff, 0xae, 0xea, 0xd2, 0xb9, 0xd9, 0xc1, 0x96, 0x14,
+  0x1a, 0x4c, 0xe3, 0xb4, 0xea, 0xec, 0x23, 0xec, 0x2e, 0x1f, 0x3b, 0xbe,
+  0x21, 0x05, 0x35, 0x0f, 0x39, 0x97, 0xc5, 0x10, 0x55, 0xa2, 0xe0, 0x69,
+  0x2f, 0x5d, 0x75, 0x03, 0x6a, 0x46, 0xda, 0x29, 0x60, 0x51, 0xf3, 0xf5,
+  0x9d, 0xac, 0xcb, 0x78, 0xe0, 0x6a, 0xc2, 0x65, 0x60, 0x8e, 0x7f, 0x36,
+  0x66, 0x29, 0x32, 0x52, 0x2a, 0x39, 0xf1, 0xda, 0xbe, 0x60, 0x76, 0x76,
+  0x3c, 0x13, 0x53, 0x75, 0x6b, 0xac, 0x7f, 0x69, 0x36, 0xb1, 0x75, 0x0b,
+  0x51, 0x68, 0x88, 0xb9, 0xae, 0x39, 0xb7, 0x2a, 0x11, 0xef, 0xab, 0x84,
+  0x61, 0x30, 0x1a, 0x10, 0x76, 0x8d, 0x1a, 0xed, 0xaf, 0xc7, 0xf5, 0x6f,
+  0xb7, 0x06, 0x1c, 0xd4, 0xcb, 0xec, 0x45, 0xb5, 0x4a, 0x33, 0xe0, 0x49,
+  0x2f, 0x76, 0x3f, 0xa1, 0x02, 0x6a, 0x9d, 0xd7, 0xcb, 0xae, 0xf3, 0x4d,
+  0x61, 0x58, 0xd9, 0x57, 0xcd, 0x4c, 0x1c, 0x3b, 0xe1, 0x1d, 0xca, 0x7c,
+  0x90, 0x60, 0xf0, 0xab, 0x39, 0xf4, 0x5a, 0xad, 0x88, 0x23, 0x86, 0xbc,
+  0x05, 0x0a, 0x7e, 0xdb, 0x5e, 0x75, 0x00, 0xc3, 0x82, 0x1f, 0x5d, 0xd3,
+  0xfb, 0x46, 0x0d, 0xfc, 0xfe, 0xbf, 0xec, 0x4b, 0xc6, 0x1d, 0xfe, 0xbb,
+  0x2d, 0x96, 0x0e, 0x3b, 0xed, 0xb8, 0x4c, 0x99, 0xc1, 0xfd, 0x9e, 0x17,
+  0x85, 0xab, 0x26, 0xc8, 0xca, 0x30, 0x26, 0x1a, 0x9a, 0xfb, 0xfd, 0xc0,
+  0x05, 0xa1, 0x58, 0x13, 0xc9, 0x3c, 0xbb, 0x63, 0x9e, 0xd7, 0xe5, 0x61,
+  0x72, 0x8c, 0x7f, 0xa2, 0x3b, 0x8c, 0xe8, 0x38, 0xa5, 0xe3, 0x88, 0x68,
+  0x02, 0x81, 0xf2, 0x91, 0x6d, 0xfc, 0x89, 0x75, 0x2f, 0xc4, 0x69, 0xa5,
+  0x23, 0x81, 0x7d, 0xd7, 0xcf, 0xbb, 0x86, 0x4c, 0x84, 0x78, 0xed, 0xf3,
+  0x6e, 0xfc, 0xbe, 0x2f, 0x98, 0xd2, 0x4a, 0xe8, 0x0a, 0x11, 0x6f, 0x9f,
+  0xc9, 0xb6, 0xdc, 0xe5, 0xf3, 0x27, 0x7b, 0xfd, 0x40, 0x6c, 0xed, 0x45,
+  0xa3, 0x64, 0xb9, 0x5c, 0xde, 0x78, 0xcc, 0xfe, 0xd3, 0xb1, 0x30, 0x87,
+  0xdf, 0x27, 0x0a, 0x4a, 0x36, 0x62, 0x38, 0xc6, 0xa5, 0xc8, 0xe9, 0x77,
+  0xa1, 0xc9, 0x62, 0xa5, 0xd7, 0x32, 0x4a, 0x3c, 0xc1, 0xee, 0x38, 0xd0,
+  0xc0, 0x58, 0x18, 0x21, 0x4e, 0x28, 0x0d, 0xf4, 0x03, 0xbb, 0x49, 0x95,
+  0xee, 0x0e, 0xe5, 0xb3, 0xfe, 0x05, 0x7f, 0x66, 0xfe, 0x0f, 0x75, 0xa0,
+  0xd3, 0xb8, 0x2c, 0x98, 0xbc, 0xd7, 0xc5, 0x6f, 0x4b, 0x62, 0x11, 0x78,
+  0x08, 0x4b, 0xa7, 0xd3, 0xdd, 0x19, 0xa7, 0x1d, 0xa6, 0x0f, 0x52, 0xe7,
+  0x34, 0xbf, 0xcd, 0x1e, 0x6e, 0x8d, 0x71, 0xc6, 0xa7, 0x24, 0xd3, 0x58,
+  0xd9, 0x1f, 0xb1, 0x4e, 0x3b, 0x32, 0xb6, 0x10, 0x53, 0x36, 0x29, 0x13,
+  0xbd, 0x0d, 0x1e, 0x6b, 0x0e, 0x52, 0x94, 0x95, 0xd2, 0x08, 0x0a, 0x6f,
+  0xd3, 0x2d, 0x67, 0xa8, 0x44, 0x75, 0x31, 0x95, 0x48, 0x24, 0xb4, 0xfc,
+  0xc8, 0x5c, 0x11, 0x2a, 0x24, 0xf8, 0xe0, 0x41, 0x39, 0xc0, 0x26, 0x14,
+  0x9e, 0xa2, 0xcc, 0x45, 0xad, 0xd2, 0x49, 0x74, 0x6f, 0x01, 0x36, 0xb6,
+  0x21, 0xaa, 0x01, 0x6e, 0x12, 0x1e, 0x1e, 0x43, 0xc1, 0x8f, 0x0c, 0xa0,
+  0xda, 0x1c, 0xae, 0x0f, 0x37, 0xe7, 0xc6, 0x21, 0x57, 0x75, 0x3f, 0x10,
+  0xd2, 0x06, 0x0f, 0x14, 0x0e, 0xb7, 0x9d, 0xaa, 0x17, 0x1f, 0x18, 0xf0,
+  0xf9, 0x03, 0xc3, 0x3f, 0x5e, 0x04, 0x26, 0x25, 0xfe, 0x80, 0x97, 0x4b,
+  0x80, 0x3a, 0x97, 0x0b, 0x29, 0x64, 0x0b, 0xa4, 0x92, 0x42, 0xc4, 0xb0,
+  0x4e, 0xe8, 0x72, 0x77, 0xe5, 0x5a, 0x45, 0x6b, 0xcc, 0x03, 0xd8, 0xca,
+  0xdd, 0x7c, 0xda, 0x19, 0x18, 0x54, 0x94, 0x0f, 0x8c, 0x3c, 0xe5, 0x28,
+  0x84, 0xee, 0x90, 0xac, 0x44, 0xed, 0x90, 0x16, 0x34, 0x95, 0xe0, 0xac,
+  0x72, 0xe6, 0xf6, 0x72, 0x6e, 0x91, 0x58, 0x0f, 0x0f, 0x8c, 0x95, 0x3e,
+  0x2d, 0x65, 0x9e, 0x4d, 0x5c, 0xa0, 0x22, 0xef, 0x22, 0x0d, 0x93, 0xf1,
+  0xf4, 0x2c, 0xee, 0x06, 0x3b, 0xf5, 0xc8, 0x3c, 0x39, 0xfb, 0x6b, 0x4f,
+  0x08, 0x23, 0x9d, 0xe6, 0xa9, 0x47, 0xb2, 0x95, 0x29, 0xf0, 0x39, 0xe1,
+  0x09, 0x43, 0xc1, 0xbb, 0x2e, 0xee, 0x1e, 0x3d, 0x5c, 0x12, 0x81, 0x86,
+  0xab, 0x7c, 0xb0, 0x62, 0x65, 0xc4, 0xac, 0xde, 0x5e, 0x99, 0xe6, 0x82,
+  0xe8, 0x8a, 0x78, 0xe1, 0x2d, 0x12, 0xad, 0x9a, 0xac, 0x40, 0xfd, 0x4a,
+  0x92, 0x4d, 0x31, 0xdd, 0x58, 0x92, 0xe1, 0x96, 0x68, 0xb8, 0xa9, 0x59,
+  0x19, 0xb4, 0x24, 0xd9, 0x63, 0xcd, 0x31, 0x6f, 0xe9, 0x60, 0xb2, 0xac,
+  0xd8, 0x70, 0xf3, 0x2e, 0x2b, 0xbf, 0xe2, 0xea, 0xd4, 0xce, 0xe5, 0xac,
+  0x61, 0x02, 0x3c, 0x31, 0xc7, 0x58, 0x60, 0x91, 0x8c, 0xa5, 0xcf, 0x24,
+  0xab, 0xfd, 0xaf, 0xcf, 0x62, 0x28, 0x00, 0x1c, 0x03, 0xfc, 0x21, 0x5f,
+  0x84, 0xd7, 0xf4, 0xf1, 0x59, 0x80, 0x9a, 0xe8, 0xbc, 0xc5, 0x0a, 0xe8,
+  0x8d, 0x38, 0x24, 0x75, 0x52, 0xe1, 0x0c, 0x3f, 0xb6, 0x0c, 0x63, 0x8e,
+  0xa8, 0x11, 0xf0, 0xa0, 0x00, 0xd2, 0xa0, 0x6f, 0x92, 0x8f, 0x1a, 0x28,
+  0x8f, 0xcf, 0x6e, 0x9f, 0x46, 0xb4, 0xf2, 0xd6, 0x7f, 0xf4, 0xd4, 0xf3,
+  0xe6, 0xd9, 0x7e, 0xb1, 0x72, 0x4a, 0x52, 0x05, 0xdb, 0xa6, 0xa4, 0x83,
+  0x0f, 0x13, 0xc3, 0x82, 0x49, 0x34, 0xc7, 0xf9, 0xf0, 0x18, 0x82, 0x49,
+  0x3c, 0x3a, 0x12, 0xea, 0xc9, 0x28, 0xb6, 0xc2, 0xdd, 0xeb, 0x3a, 0xa6,
+  0xbb, 0x3e, 0x71, 0x5f, 0x30, 0x46, 0x91, 0xa1, 0x43, 0xf3, 0x40, 0x92,
+  0xb8, 0x90, 0x9a, 0x44, 0x64, 0xd6, 0x47, 0x31, 0x7f, 0x30, 0x06, 0x43,
+  0xaf, 0xa9, 0xdc, 0x18, 0x78, 0x5b, 0x83, 0x8f, 0x95, 0xc4, 0x32, 0xae,
+  0x84, 0xa4, 0x70, 0x68, 0x9f, 0xc2, 0x50, 0x56, 0xd1, 0x79, 0x77, 0x1c,
+  0xd6, 0xd9, 0x07, 0x3e, 0x44, 0x62, 0x86, 0x37, 0x64, 0x3d, 0x87, 0xda,
+  0x94, 0xea, 0x6a, 0x98, 0x21, 0xbd, 0x7f, 0x22, 0xd6, 0xa5, 0x62, 0xfa,
+  0xc8, 0x5a, 0x20, 0x5e, 0xd8, 0x4d, 0x47, 0x73, 0xe4, 0x4c, 0x62, 0x50,
+  0x9c, 0x20, 0x40, 0xbe, 0x30, 0xa3, 0x1a, 0x23, 0xe1, 0xee, 0xe1, 0xe6,
+  0x18, 0x8d, 0x35, 0xa8, 0x58, 0xac, 0x19, 0x44, 0x0c, 0x0c, 0x65, 0x75,
+  0x29, 0x07, 0x0f, 0x80, 0xf4, 0x44, 0xf9, 0x64, 0x64, 0x49, 0x70, 0x3f,
+  0xb8, 0xc3, 0x77, 0x11, 0x66, 0x00, 0xd0, 0x19, 0xb4, 0x23, 0xf8, 0x8f,
+  0x13, 0x6a, 0xf4, 0xb4, 0x15, 0x65, 0xeb, 0x3c, 0x3d, 0x36, 0x87, 0x28,
+  0x89, 0xeb, 0x1c, 0xec, 0xb4, 0x85, 0x73, 0xf8, 0x17, 0x1f, 0x36, 0xc4,
+  0x0f, 0x7e, 0x30, 0xe0, 0x6f, 0x19, 0x89, 0x60, 0xfc, 0x79, 0x58, 0x3c,
+  0x89, 0x04, 0x95, 0x6b, 0x02, 0xa4, 0x6e, 0x4f, 0x47, 0xa2, 0x0d, 0xb9,
+  0x35, 0xb5, 0x6c, 0x24, 0x0f, 0xb5, 0x66, 0x0e, 0x7b, 0xd7, 0x14, 0xdb,
+  0x0e, 0x1e, 0x21, 0x57, 0x54, 0x5c, 0x8a, 0xf6, 0x68, 0x27, 0x41, 0x57,
+  0x52, 0xba, 0x7c, 0x60, 0x06, 0x81, 0x0e, 0xf5, 0x70, 0x8f, 0xe1, 0x39,
+  0x8b, 0x77, 0xad, 0x91, 0xea, 0xc9, 0xa7, 0x2d, 0xdd, 0xca, 0xe0, 0x7a,
+  0x52, 0x24, 0xb2, 0x89, 0xdf, 0x07, 0xb4, 0x95, 0xc2, 0xf8, 0x7c, 0xe5,
+  0xd7, 0x48, 0x9e, 0x09, 0xe4, 0x5c, 0x12, 0x55, 0xab, 0x65, 0x29, 0x08,
+  0x8c, 0x8f, 0x8b, 0x08, 0xa6, 0xca, 0xbb, 0xf6, 0x10, 0xf1, 0x8b, 0xd1,
+  0x2d, 0xb2, 0x52, 0x31, 0x33, 0x57, 0x8c, 0xca, 0x4d, 0x91, 0x17, 0xd7,
+  0x86, 0x65, 0x31, 0xfa, 0xff, 0xa4, 0x51, 0x49, 0x6b, 0x9f, 0x32, 0xa6,
+  0x6a, 0x8a, 0x8b, 0x3f, 0xbf, 0xbc, 0xa7, 0x6d, 0xaf, 0x48, 0x0f, 0x78,
+  0x5c, 0x59, 0x90, 0xe7, 0x8c, 0xe6, 0x00, 0x83, 0x42, 0x63, 0x2e, 0x1b,
+  0x00, 0x2b, 0x09, 0x37, 0x99, 0xaf, 0xac, 0xe7, 0xd3, 0x80, 0x5c, 0x71,
+  0x12, 0x93, 0xd3, 0x85, 0x06, 0xc0, 0x61, 0x65, 0x1b, 0x1b, 0xeb, 0xd7,
+  0xda, 0x56, 0x24, 0x5b, 0x2f, 0x69, 0x9b, 0xf1, 0xab, 0xc0, 0xc3, 0x3b,
+  0x78, 0x00, 0x59, 0xda, 0xf5, 0x4f, 0x7a, 0x52, 0xba, 0x58, 0xe8, 0x11,
+  0x7f, 0x7c, 0xee, 0x02, 0x9d, 0x27, 0xe9, 0x8a, 0x05, 0x97, 0xe6, 0x63,
+  0x30, 0xda, 0xba, 0x28, 0x6e, 0x12, 0xf5, 0xb6, 0x89, 0xcf, 0x19, 0x36,
+  0xc3, 0x87, 0x9b, 0x13, 0xf0, 0x53, 0x79, 0x1c, 0xf0, 0x49, 0xc3, 0xe1,
+  0x37, 0xc0, 0x6d, 0x76, 0xfc, 0x66, 0xdb, 0xfb, 0x91, 0x45, 0x94, 0x7f,
+  0xec, 0x12, 0x74, 0xd5, 0x9d, 0x79, 0x1d, 0x9c, 0xad, 0xe9, 0x53, 0x97,
+  0xa1, 0x29, 0xd5, 0xfe, 0x46, 0x13, 0x45, 0x6a, 0x40, 0xe2, 0x7a, 0xb2,
+  0x3a, 0x50, 0xe1, 0xd8, 0x37, 0x1f, 0xa3, 0x73, 0x95, 0x87, 0x9b, 0x73,
+  0x8c, 0xce, 0x08, 0xda, 0x18, 0x2c, 0x9e, 0xab, 0x8a, 0xa9, 0xfd, 0xa6,
+  0x1b, 0xcb, 0x31, 0x33, 0xd0, 0x23, 0x04, 0x3b, 0x80, 0xed, 0xc7, 0x8f,
+  0x0f, 0x19, 0xf5, 0xfb, 0xe2, 0x05, 0x2d, 0x23, 0x63, 0xd6, 0x41, 0xb3,
+  0x86, 0x11, 0x19, 0xb6, 0xab, 0x85, 0xfb, 0x8b, 0xc6, 0x2c, 0xa9, 0x80,
+  0x06, 0xcb, 0x89, 0x21, 0xb3, 0xed, 0xc8, 0x01, 0x09, 0xd3, 0x0d, 0x4e,
+  0xea, 0xe7, 0xa7, 0x18, 0x01, 0xd4, 0x1e, 0x2d, 0x30, 0xff, 0xc0, 0x3d,
+  0x71, 0xad, 0xfa, 0xca, 0xa8, 0x24, 0xc7, 0x23, 0x86, 0xf5, 0x51, 0x36,
+  0x91, 0x6a, 0x72, 0x27, 0x97, 0x67, 0x2e, 0x03, 0x68, 0x71, 0xd5, 0x72,
+  0xb9, 0x70, 0xd0, 0x78, 0x89, 0x80, 0xb8, 0x48, 0x16, 0x6e, 0x47, 0x33,
+  0x1e, 0x17, 0x53, 0xf1, 0xef, 0xdd, 0x32, 0xd0, 0x7a, 0x7c, 0x2f, 0xbc,
+  0xe4, 0x15, 0x27, 0x90, 0xbc, 0xd6, 0x75, 0x56, 0x3c, 0x64, 0x7b, 0xfe,
+  0x51, 0x36, 0x45, 0x2c, 0x6e, 0xe1, 0x96, 0x47, 0x88, 0x44, 0xc8, 0xb4,
+  0xe7, 0xce, 0x86, 0x14, 0x2d, 0xfd, 0x34, 0x52, 0x10, 0x64, 0x66, 0x07,
+  0x9e, 0x6b, 0x88, 0xbb, 0x5a, 0x9d, 0x8f, 0xd3, 0x56, 0xf1, 0xa5, 0x56,
+  0x20, 0xb8, 0xeb, 0xa0, 0x13, 0x24, 0x11, 0xcf, 0x0c, 0xd8, 0x46, 0x73,
+  0x11, 0x7c, 0xa0, 0xa0, 0xbb, 0x64, 0x92, 0xec, 0x63, 0xd6, 0xad, 0xd3,
+  0x14, 0x63, 0xf1, 0x1a, 0x1a, 0xc7, 0xd1, 0x52, 0x2e, 0x17, 0x2c, 0x58,
+  0xaf, 0x10, 0x37, 0xf4, 0x51, 0x29, 0x36, 0x26, 0xd8, 0xf3, 0x58, 0x79,
+  0xe4, 0x9f, 0x7e, 0x7c, 0x7e, 0x1b, 0x16, 0x27, 0xf1, 0x5a, 0x5c, 0xa6,
+  0xa8, 0x7b, 0x78, 0x46, 0xd9, 0xa7, 0x2a, 0x55, 0x0c, 0x66, 0xd8, 0x3c,
+  0x46, 0x6d, 0x06, 0x61, 0x6e, 0xaa, 0x2e, 0xee, 0x74, 0x44, 0x32, 0xd0,
+  0x1d, 0x68, 0x04, 0x44, 0x01, 0x53, 0xdf, 0x8a, 0x82, 0x90, 0x66, 0x8a,
+  0xe3, 0x53, 0x67, 0x9f, 0x72, 0xd3, 0xe0, 0xfe, 0x8f, 0x9f, 0x19, 0x95,
+  0x15, 0x1b, 0xf2, 0x5b, 0x77, 0x9d, 0x2d, 0x03, 0x57, 0xa3, 0x74, 0xd9,
+  0xff, 0xf8, 0x29, 0x64, 0x04, 0x0b, 0x4a, 0xa6, 0xa5, 0x11, 0x79, 0x3e,
+  0x0e, 0x16, 0x58, 0xdc, 0x2f, 0x96, 0xeb, 0x30, 0xcb, 0x1f, 0x55, 0xd5,
+  0x72, 0xc5, 0x35, 0x67, 0xee, 0xbc, 0x8c, 0x1a, 0x7c, 0x39, 0xa9, 0xce,
+  0x4c, 0x1d, 0x32, 0x21, 0xa8, 0x64, 0xde, 0xe2, 0x85, 0x70, 0x83, 0x4c,
+  0x8a, 0x5f, 0xf9, 0x6c, 0x33, 0xd6, 0x2e, 0x20, 0xbc, 0x3c, 0x32, 0x02,
+  0xb5, 0x8a, 0x32, 0xd6, 0x27, 0xbc, 0x73, 0x8c, 0xa0, 0x04, 0xbb, 0xa8,
+  0xb9, 0x3d, 0x44, 0x05, 0x76, 0x59, 0xe3, 0xfb, 0x0f, 0x37, 0xa7, 0xbe,
+  0xc2, 0xdf, 0x30, 0x16, 0x23, 0x80, 0x67, 0x79, 0xf9, 0xa3, 0x79, 0xd9,
+  0xf7, 0xb7, 0xb7, 0x7f, 0xfe, 0xb1, 0x11, 0x9c, 0xf3, 0xe5, 0xcf, 0xfc,
+  0xcc, 0x2f, 0x02, 0x99, 0x12, 0x38, 0xb2, 0x15, 0xa5, 0x17, 0xa8, 0x3f,
+  0x75, 0x80, 0x75, 0xfc, 0x54, 0x1a, 0x62, 0x18, 0x0c, 0x26, 0xa8, 0xf5,
+  0x5c, 0x74, 0xa5, 0x6f, 0x0d, 0x19, 0x09, 0x2a, 0x62, 0x48, 0xfb, 0x0e,
+  0xc5, 0x91, 0xe3, 0xb6, 0x3d, 0x9e, 0x5b, 0x2f, 0x80, 0xf0, 0xea, 0x45,
+  0x01, 0x6c, 0xd0, 0x25, 0x42, 0x54, 0x3d, 0xec, 0x12, 0x3b, 0xac, 0x44,
+  0x7f, 0x6a, 0xd4, 0xc0, 0x60, 0x60, 0x21, 0x67, 0x4e, 0x8b, 0x55, 0xf4,
+  0xd0, 0x48, 0x88, 0xe4, 0x5d, 0xe1, 0xe3, 0x29, 0x02, 0xc4, 0x20, 0x8d,
+  0x1b, 0x11, 0x27, 0x0b, 0x7c, 0x1d, 0xd0, 0xa2, 0x5d, 0x4a, 0x61, 0x07,
+  0x4b, 0x1d, 0xc5, 0x2d, 0xd9, 0x6d, 0xc4, 0x4a, 0x17, 0xe6, 0x29, 0xf0,
+  0xcc, 0xba, 0xaa, 0xda, 0xbc, 0xc2, 0x77, 0x7a, 0x1b, 0x69, 0x3e, 0x8f,
+  0xc5, 0x25, 0x0b, 0xec, 0x4f, 0x0c, 0xca, 0x59, 0x91, 0x2f, 0x1e, 0xc0,
+  0x3a, 0x32, 0xab, 0x52, 0xb8, 0x95, 0x0a, 0x2c, 0xd1, 0xc9, 0x20, 0x10,
+  0x30, 0x24, 0x61, 0x94, 0xab, 0xb1, 0x8f, 0x3a, 0x5e, 0xe1, 0xec, 0x63,
+  0x2e, 0x90, 0xec, 0x61, 0x6c, 0x53, 0xe8, 0xe8, 0x13, 0xcb, 0x52, 0x95,
+  0xd5, 0xb1, 0xf8, 0x50, 0x85, 0x7a, 0xb2, 0xb4, 0xfc, 0x63, 0x8d, 0x95,
+  0xdc, 0x58, 0x89, 0xc0, 0xb0, 0x32, 0x06, 0x45, 0x71, 0x96, 0x1c, 0xf6,
+  0x91, 0x00, 0x50, 0x7c, 0xe4, 0x94, 0xd2, 0x75, 0xce, 0x42, 0xb7, 0x31,
+  0xc7, 0xd2, 0x54, 0xe0, 0xff, 0x73, 0xa1, 0x18, 0x81, 0xac, 0xa3, 0xe1,
+  0x85, 0x08, 0xf7, 0xe1, 0x38, 0xe8, 0xb9, 0xdf, 0xd2, 0x7b, 0xcb, 0x5a,
+  0x8d, 0xdc, 0x29, 0x24, 0x12, 0x89, 0x85, 0x83, 0x69, 0x8b, 0x98, 0x1d,
+  0x90, 0x7d, 0x95, 0xdd, 0xa3, 0x01, 0x89, 0xec, 0x57, 0x2d, 0x0b, 0xea,
+  0x26, 0x7d, 0xcd, 0x5e, 0x65, 0x25, 0x8e, 0xe8, 0xf1, 0x21, 0x42, 0x0e,
+  0x86, 0x28, 0x91, 0x06, 0xd8, 0x6d, 0x54, 0x71, 0x33, 0x8f, 0x98, 0xe7,
+  0x85, 0x9c, 0x36, 0x0a, 0x89, 0x21, 0xed, 0x22, 0x96, 0x5e, 0xba, 0x65,
+  0xaa, 0x97, 0x24, 0xf2, 0x4c, 0x83, 0x20, 0xf5, 0x2c, 0xf1, 0x80, 0x55,
+  0xc2, 0x90, 0x34, 0xf9, 0xad, 0xbf, 0x30, 0x1e, 0xd4, 0x9e, 0xec, 0xbd,
+  0x36, 0xb2, 0xc2, 0x77, 0xf7, 0x5e, 0x23, 0x43, 0x83, 0x78, 0xc0, 0x46,
+  0xb6, 0x82, 0x2f, 0x9b, 0xd9, 0xa5, 0x55, 0xec, 0xc1, 0x5a, 0xd7, 0x32,
+  0x27, 0xa5, 0xaa, 0x7c, 0x8c, 0x89, 0xce, 0xba, 0x09, 0x63, 0x84, 0xee,
+  0xf8, 0xe6, 0x0b, 0x6a, 0x5f, 0x47, 0x2b, 0xf4, 0xb1, 0xde, 0xca, 0xf1,
+  0x61, 0x5f, 0xfa, 0x6c, 0xf8, 0xdf, 0x3f, 0xdd, 0x01, 0x73, 0xb1, 0x46,
+  0xd2, 0x30, 0x0e, 0xef, 0xf7, 0x4f, 0xd2, 0x07, 0x18, 0x26, 0x6b, 0x52,
+  0x1d, 0x76, 0x29, 0xa5, 0xdf, 0xd2, 0xb1, 0xd6, 0x2e, 0xbb, 0x4b, 0xef,
+  0x0d, 0x2b, 0x5f, 0x5e, 0xeb, 0xa0, 0x2d, 0xc7, 0x0e, 0x53, 0x2f, 0x4c,
+  0x8c, 0xa9, 0x43, 0x66, 0xa2, 0x9c, 0x77, 0x53, 0x19, 0xd5, 0x56, 0x24,
+  0xa6, 0x86, 0x47, 0x80, 0xba, 0xe0, 0xec, 0xd3, 0xc2, 0xa6, 0xfc, 0x71,
+  0x75, 0xb4, 0xfc, 0x3f, 0xef, 0xea, 0xfa, 0x41, 0x8a, 0x67, 0x09, 0x57,
+  0x7e, 0xa9, 0xda, 0xc7, 0x8a, 0x9c, 0x89, 0xa1, 0x43, 0x4f, 0x48, 0xad,
+  0x8e, 0x94, 0xbd, 0xa9, 0x89, 0x96, 0x61, 0x7e, 0x38, 0xda, 0x5a, 0xce,
+  0x61, 0x9c, 0x88, 0x80, 0xf9, 0x27, 0x9e, 0x72, 0xf9, 0xc4, 0xba, 0x0c,
+  0xbc, 0x8b, 0xc6, 0xed, 0xd7, 0x6a, 0x3e, 0xce, 0xd0, 0x79, 0xea, 0x41,
+  0x9a, 0x06, 0x1b, 0x32, 0xe5, 0x05, 0x1f, 0x65, 0xa7, 0xf8, 0x63, 0x56,
+  0xa9, 0xc6, 0xe5, 0xdd, 0x76, 0xaf, 0x9b, 0xaf, 0x8f, 0x2e, 0x90, 0x0e,
+  0x7c, 0xce, 0x20, 0x19, 0x6e, 0x80, 0x5c, 0x73, 0x51, 0xcf, 0x79, 0xea,
+  0xea, 0x95, 0x39, 0xb8, 0x80, 0x39, 0x30, 0x8f, 0x48, 0xce, 0x9a, 0x47,
+  0x43, 0x66, 0x2b, 0x54, 0xa3, 0x9a, 0xcd, 0x80, 0x3e, 0xe2, 0x03, 0xa3,
+  0x42, 0x8b, 0x9f, 0x57, 0x79, 0x80, 0x43, 0x22, 0xc2, 0xeb, 0xeb, 0xa3,
+  0x93, 0xa3, 0x8b, 0xa3, 0x18, 0xa6, 0x53, 0x99, 0x4d, 0xf9, 0x06, 0xab,
+  0xb3, 0xf1, 0xf5, 0x9c, 0xe8, 0xfe, 0x0a, 0x5b, 0xc2, 0xe0, 0x0e, 0xdf,
+  0x67, 0xa3, 0xd7, 0x07, 0xdf, 0xa1, 0x78, 0x29, 0xce, 0xcd, 0xd9, 0xf9,
+  0xe9, 0xd9, 0x9b, 0xe3, 0x77, 0xaf, 0x7b, 0xc9, 0xe1, 0xe9, 0xd9, 0x9f,
+  0x7b, 0xc9, 0xdb, 0xd3, 0xef, 0x8e, 0x22, 0x94, 0x87, 0x48, 0xb8, 0x48,
+  0x08, 0x96, 0x56, 0xdc, 0xc2, 0x71, 0x95, 0xe0, 0xfe, 0x79, 0x66, 0x75,
+  0x21, 0xcc, 0x8d, 0xcb, 0x61, 0x19, 0x15, 0xe3, 0x61, 0xb0, 0xc3, 0x82,
+  0x96, 0x8e, 0xce, 0xc0, 0x37, 0x47, 0x07, 0xaf, 0xbb, 0x01, 0x92, 0xc3,
+  0x0b, 0xee, 0x0c, 0xf3, 0x73, 0x93, 0x06, 0x0b, 0x27, 0x86, 0x09, 0x93,
+  0x37, 0xf4, 0xcd, 0x9b, 0x2c, 0x00, 0x4b, 0xa6, 0x63, 0xc0, 0x06, 0xb3,
+  0xc9, 0xaa, 0x2a, 0xf6, 0x12, 0x81, 0xe6, 0xc2, 0xfe, 0x1e, 0xba, 0x0d,
+  0xe1, 0x6e, 0xb7, 0x6a, 0x28, 0x9a, 0x5a, 0xc9, 0x4e, 0x06, 0x46, 0x92,
+  0x76, 0xd8, 0x74, 0xce, 0x1b, 0x19, 0x89, 0xc8, 0xd4, 0x21, 0x8b, 0x1e,
+  0xe4, 0x50, 0xc6, 0x58, 0x5c, 0x92, 0x40, 0x8c, 0x54, 0xc3, 0xe9, 0x46,
+  0x19, 0x82, 0x7d, 0x2a, 0x2e, 0x36, 0x17, 0xe4, 0x05, 0xc4, 0x59, 0xbc,
+  0xc5, 0xd6, 0x6a, 0xf8, 0xaa, 0xe4, 0xec, 0xf3, 0xfa, 0xf9, 0x0e, 0x35,
+  0x18, 0xa3, 0xff, 0x83, 0x2c, 0x6c, 0x12, 0x43, 0xa7, 0x61, 0xa1, 0x62,
+  0x79, 0x49, 0xa4, 0x99, 0x49, 0xe0, 0x8a, 0x6c, 0x55, 0xe1, 0x63, 0x2a,
+  0x8f, 0x71, 0xcc, 0xaf, 0xf9, 0x80, 0xac, 0x0e, 0xe1, 0xb0, 0x6c, 0x69,
+  0xe1, 0xed, 0x9c, 0x88, 0x92, 0x69, 0xa9, 0x3d, 0xea, 0xbe, 0x51, 0xc6,
+  0xcb, 0x2b, 0xf6, 0xb2, 0x95, 0xf1, 0xfc, 0x1b, 0x9d, 0x66, 0xb0, 0x0e,
+  0x3c, 0xa2, 0xfe, 0x09, 0x46, 0xe3, 0x6a, 0x9f, 0x73, 0xdc, 0x16, 0x43,
+  0xfb, 0x10, 0xbb, 0x98, 0x4b, 0xf9, 0xcd, 0x48, 0x19, 0xc7, 0xbe, 0x28,
+  0x1c, 0x95, 0x45, 0xa9, 0x68, 0x1d, 0x2a, 0x89, 0xbc, 0x53, 0xb8, 0xb1,
+  0x16, 0xbf, 0x48, 0xc7, 0x63, 0xda, 0xdf, 0x48, 0xd2, 0x56, 0xe1, 0x0f,
+  0xf6, 0x93, 0x9d, 0x56, 0xd5, 0xa8, 0x2a, 0xe9, 0x4b, 0x1c, 0xa7, 0x64,
+  0x11, 0x76, 0x53, 0x66, 0xdf, 0xac, 0xe0, 0x85, 0x61, 0xc5, 0x50, 0x5d,
+  0xfb, 0x80, 0x2b, 0x9d, 0x1c, 0xd3, 0x09, 0xc0, 0xc8, 0x3b, 0x89, 0x33,
+  0x1c, 0x75, 0xc8, 0xd5, 0xe0, 0x73, 0x1c, 0x0a, 0x5e, 0x6f, 0x6a, 0xab,
+  0xdb, 0x31, 0xa2, 0x8c, 0xa3, 0x3d, 0x73, 0xf8, 0xf1, 0x23, 0x5d, 0x77,
+  0x6c, 0x87, 0xe7, 0x47, 0x17, 0xe7, 0x9f, 0x10, 0x89, 0xb1, 0x89, 0xb0,
+  0xe7, 0x68, 0xaf, 0xf8, 0x62, 0x55, 0xaf, 0xcc, 0x0e, 0xd0, 0xef, 0x43,
+  0xd9, 0xff, 0x4f, 0x62, 0x0e, 0xef, 0x4d, 0x01, 0xe9, 0x8f, 0xf4, 0xc7,
+  0xa1, 0xd5, 0xab, 0x67, 0xf9, 0xcd, 0xd1, 0xc9, 0x59, 0x77, 0x96, 0xdf,
+  0x9d, 0xbf, 0xf9, 0xf3, 0xe0, 0x81, 0xbc, 0xee, 0x7f, 0x7e, 0x5c, 0xfe,
+  0xc7, 0xb4, 0xae, 0xa3, 0xf5, 0x2e, 0xaa, 0x94, 0x4d, 0x9d, 0x56, 0x0a,
+  0xc5, 0xa2, 0x77, 0x9a, 0x88, 0xa1, 0x82, 0xd0, 0xae, 0xa1, 0x0c, 0x9c,
+  0x96, 0x55, 0x17, 0x1d, 0x21, 0xcb, 0xe4, 0x51, 0x8d, 0xfe, 0x21, 0x6a,
+  0x4f, 0xa5, 0xaa, 0x0a, 0x7d, 0xe6, 0x0a, 0xd8, 0xf2, 0x77, 0x18, 0x4b,
+  0x3e, 0x42, 0xd5, 0xb0, 0x41, 0x80, 0x9f, 0x11, 0x11, 0xf5, 0x35, 0x1a,
+  0x9b, 0x7b, 0x73, 0xb2, 0xde, 0xc7, 0xc9, 0xd5, 0xa0, 0x28, 0x73, 0x18,
+  0x35, 0xb5, 0xce, 0xac, 0x34, 0x96, 0x70, 0x41, 0x75, 0x1c, 0x6b, 0x1c,
+  0xa1, 0x58, 0x73, 0x16, 0xe6, 0x25, 0xe0, 0x1d, 0x49, 0xb7, 0xe9, 0x19,
+  0x9b, 0x44, 0xf0, 0x9d, 0x6b, 0xd5, 0xf4, 0x8b, 0x58, 0x34, 0x64, 0x75,
+  0x4f, 0xfb, 0x3c, 0xf3, 0x9c, 0xd7, 0xb4, 0x33, 0x37, 0x5b, 0x3f, 0x51,
+  0x44, 0xe1, 0x11, 0x67, 0x2d, 0x19, 0x7f, 0xa9, 0xab, 0x49, 0xe5, 0xa4,
+  0x49, 0x35, 0x36, 0xec, 0x9e, 0x03, 0x5f, 0xe1, 0x5b, 0xd2, 0xf2, 0x4d,
+  0xf8, 0x37, 0x5a, 0xb0, 0xcf, 0xf9, 0xc7, 0x30, 0x1b, 0xf8, 0xe0, 0xb5,
+  0xfc, 0x90, 0xbc, 0x2c, 0x95, 0x86, 0x46, 0x2d, 0xaf, 0x92, 0x86, 0x93,
+  0x77, 0x00, 0x71, 0x82, 0x0e, 0x05, 0xbb, 0xab, 0xd7, 0x70, 0x53, 0xa2,
+  0x96, 0x2e, 0xa3, 0x10, 0x89, 0xbd, 0x91, 0xba, 0x0f, 0x5e, 0xe8, 0xcc,
+  0xc9, 0x17, 0x4b, 0x70, 0x08, 0xa4, 0xc1, 0x90, 0x8c, 0x50, 0x77, 0xad,
+  0x60, 0x8e, 0xe7, 0xea, 0x7f, 0x7e, 0x24, 0xd2, 0x5f, 0x83, 0xf8, 0xab,
+  0x24, 0x00, 0xc9, 0x53, 0x69, 0x75, 0xa9, 0xfa, 0x35, 0xdf, 0x83, 0xcc,
+  0x99, 0x79, 0x4d, 0xd6, 0xa2, 0x0e, 0xe2, 0x0a, 0x59, 0x1b, 0x0d, 0x38,
+  0x36, 0x4e, 0x1e, 0x21, 0x3a, 0x16, 0x39, 0x8a, 0x6e, 0x89, 0x5e, 0x22,
+  0x85, 0xb1, 0x24, 0x86, 0x4d, 0xdf, 0xeb, 0x47, 0x0c, 0x69, 0xb0, 0x17,
+  0xae, 0xb8, 0xc4, 0xfe, 0x79, 0xa7, 0xf8, 0xcf, 0x9e, 0x28, 0x64, 0x11,
+  0x5f, 0xf2, 0x1f, 0xbf, 0x88, 0x2c, 0x82, 0xaa, 0x54, 0xe2, 0xba, 0xdc,
+  0x24, 0xda, 0x6f, 0xd0, 0x47, 0xbf, 0x93, 0x76, 0x3e, 0xd9, 0x92, 0xbc,
+  0x5e, 0xbf, 0xd9, 0x6a, 0x19, 0x84, 0xdc, 0xd1, 0xa4, 0x89, 0xe0, 0x19,
+  0xc6, 0xb8, 0xe9, 0xaa, 0xf0, 0xb2, 0xc7, 0x92, 0x89, 0x47, 0x4f, 0x3c,
+  0xd9, 0xc1, 0x85, 0xcc, 0xa7, 0x27, 0xfb, 0x2d, 0xe1, 0x29, 0xff, 0xc6,
+  0xf0, 0x94, 0xa8, 0x3c, 0xcd, 0x07, 0xe0, 0xe5, 0x04, 0xa6, 0x53, 0x92,
+  0x8e, 0x11, 0x2c, 0x41, 0x4d, 0x7f, 0xf1, 0xdf, 0xf1, 0xc2, 0xcf, 0x5c,
+  0xda, 0xfc, 0x8d, 0x2b, 0xd0, 0x22, 0x48, 0x1a, 0xe2, 0x72, 0x81, 0x42,
+  0xea, 0xaa, 0xea, 0xce, 0x8a, 0x89, 0xe2, 0x33, 0xa6, 0xb5, 0x5f, 0xea,
+  0x2c, 0x8a, 0xa4, 0x27, 0x85, 0xed, 0x70, 0x0a, 0x39, 0xb7, 0x90, 0x56,
+  0xb6, 0x98, 0xaf, 0x6c, 0x2f, 0x70, 0x0f, 0x74, 0x20, 0xa7, 0xb5, 0x02,
+  0x18, 0xa4, 0xa4, 0xce, 0x7c, 0x4c, 0x9b, 0x84, 0x3c, 0x24, 0xc2, 0x30,
+  0xdd, 0x46, 0xfc, 0x90, 0x48, 0x52, 0x55, 0xf7, 0x56, 0xa2, 0x7d, 0x50,
+  0x39, 0x12, 0xc2, 0x8b, 0x80, 0xd5, 0x22, 0x1c, 0xdd, 0x55, 0x7c, 0xa6,
+  0x61, 0x56, 0x06, 0x31, 0x8a, 0xa8, 0x16, 0x2e, 0x9f, 0x92, 0xba, 0x18,
+  0xd4, 0xb5, 0xa8, 0x9b, 0xc3, 0x15, 0x0a, 0xbd, 0xca, 0x0c, 0xf8, 0x55,
+  0x26, 0x67, 0x59, 0x73, 0x3c, 0xa8, 0xcd, 0x19, 0x26, 0xb3, 0x25, 0x66,
+  0xfc, 0xe8, 0x56, 0x38, 0x44, 0xd4, 0x06, 0x88, 0x1a, 0x35, 0x8a, 0xf7,
+  0x15, 0x40, 0x8d, 0x21, 0xd3, 0xa4, 0x8e, 0xac, 0x34, 0x1b, 0xac, 0x48,
+  0x27, 0x3d, 0x26, 0x9e, 0x54, 0x34, 0x84, 0xf3, 0xc0, 0xb0, 0x4b, 0xc2,
+  0x15, 0x35, 0xe3, 0x25, 0xb0, 0x13, 0x93, 0xcd, 0xfe, 0x96, 0x13, 0x91,
+  0xb9, 0x1c, 0xa6, 0x90, 0x46, 0xd7, 0xe7, 0x9f, 0xba, 0x30, 0x61, 0x97,
+  0xd3, 0x22, 0x55, 0x5d, 0x8c, 0x42, 0x94, 0x26, 0xd0, 0xd9, 0xb6, 0x18,
+  0xde, 0x8d, 0x5b, 0xe6, 0x91, 0x98, 0xfe, 0x4e, 0x63, 0xf3, 0xec, 0x2e,
+  0x6c, 0xcc, 0x2b, 0xa9, 0xae, 0xc1, 0xdf, 0xf0, 0x4c, 0x5d, 0x8b, 0xfc,
+  0x3e, 0x5d, 0x74, 0xac, 0x37, 0x1c, 0x21, 0x81, 0x6f, 0x06, 0xca, 0xbc,
+  0x45, 0x8a, 0x4c, 0x25, 0x4b, 0x80, 0xcb, 0xf7, 0x86, 0x20, 0x89, 0x0e,
+  0x9e, 0x2c, 0x8a, 0x89, 0x53, 0x5d, 0xe3, 0x52, 0x75, 0x98, 0x1e, 0x8d,
+  0x32, 0x4b, 0x6f, 0x7b, 0x5c, 0x0d, 0x6f, 0xde, 0x0d, 0xce, 0x7a, 0xcb,
+  0x1f, 0x0e, 0x92, 0xd7, 0x9a, 0xe9, 0xc1, 0x79, 0x77, 0xcb, 0xab, 0x8c,
+  0x87, 0xc5, 0xa1, 0xff, 0x41, 0x33, 0xdf, 0x69, 0x5a, 0x56, 0x84, 0x50,
+  0xf4, 0xfd, 0xaa, 0x91, 0x2a, 0x22, 0x0e, 0x22, 0x41, 0x64, 0x9c, 0x5b,
+  0x3d, 0xc1, 0x11, 0xff, 0x6d, 0x16, 0xe3, 0x9c, 0x23, 0x95, 0xab, 0x41,
+  0x44, 0xa5, 0x11, 0x97, 0x13, 0x4f, 0xdc, 0x3b, 0x8b, 0xcc, 0xbb, 0x62,
+  0xef, 0x43, 0x56, 0x95, 0x1c, 0x2a, 0xd7, 0x74, 0x0c, 0x13, 0x84, 0xf5,
+  0xd4, 0x27, 0xe5, 0x84, 0x3d, 0xaa, 0xf7, 0x78, 0xb4, 0x4c, 0x4b, 0x51,
+  0xbd, 0xe7, 0x37, 0x66, 0x72, 0x17, 0x43, 0x52, 0x36, 0x5e, 0xd6, 0x4d,
+  0x40, 0xda, 0xd0, 0x37, 0x6d, 0x75, 0x63, 0x79, 0x58, 0x9b, 0xec, 0x43,
+  0xd3, 0xfd, 0x58, 0x3f, 0x33, 0x73, 0xfb, 0xfe, 0xfa, 0x96, 0xfa, 0x15,
+  0xc5, 0x45, 0xac, 0x1f, 0xc7, 0x80, 0x45, 0x6c, 0xcc, 0x65, 0x26, 0xd0,
+  0x94, 0x75, 0x61, 0xe2, 0x51, 0xb4, 0x7b, 0xa2, 0xc8, 0x72, 0x12, 0xeb,
+  0xfb, 0x4d, 0x96, 0xa2, 0xc2, 0x56, 0xd0, 0xb5, 0x33, 0x6c, 0x5e, 0xea,
+  0x57, 0x9d, 0xbc, 0x97, 0x4e, 0xcf, 0x6c, 0x7a, 0x18, 0x24, 0x07, 0x2e,
+  0x07, 0xc0, 0x5e, 0xb5, 0xf5, 0xef, 0x24, 0x04, 0x70, 0x90, 0x9b, 0x07,
+  0xfd, 0x84, 0x54, 0xcf, 0x1f, 0xb9, 0x9c, 0xda, 0xce, 0x2c, 0x6e, 0xca,
+  0xd1, 0x53, 0xfa, 0xf1, 0x2d, 0x7e, 0x80, 0x01, 0x41, 0xf1, 0x12, 0xa4,
+  0x7d, 0x01, 0x82, 0xeb, 0x72, 0x1a, 0xd4, 0xf0, 0xd3, 0x1f, 0xba, 0xe9,
+  0x95, 0xe5, 0xfc, 0x20, 0x63, 0xca, 0x97, 0xaa, 0x62, 0x07, 0xba, 0xb5,
+  0xd3, 0x33, 0xcb, 0xe3, 0xda, 0xca, 0x90, 0xad, 0xa1, 0x00, 0xca, 0x4b,
+  0x99, 0xb1, 0xa1, 0xe8, 0x8d, 0xb4, 0x08, 0x5d, 0xd1, 0x84, 0x96, 0xea,
+  0x6f, 0x30, 0x64, 0x2f, 0x49, 0x93, 0x21, 0xc2, 0x1e, 0xb3, 0x8d, 0x74,
+  0xe6, 0x38, 0x1e, 0x0d, 0x26, 0x00, 0x8d, 0x12, 0x28, 0x50, 0x36, 0x69,
+  0x4b, 0xba, 0x5b, 0xbe, 0x62, 0x08, 0xab, 0xa7, 0x2c, 0x69, 0xd3, 0xf2,
+  0xa3, 0x95, 0x3c, 0xfd, 0xe0, 0x52, 0xbd, 0x46, 0x2e, 0xa3, 0x89, 0x81,
+  0x72, 0x14, 0x38, 0x9f, 0x2c, 0x75, 0x9b, 0x3d, 0x5a, 0xe6, 0x53, 0x95,
+  0x1f, 0xf9, 0x61, 0xb5, 0xee, 0x4a, 0xae, 0xf7, 0x8a, 0x71, 0x72, 0xb2,
+  0x25, 0x97, 0xf2, 0xe3, 0x14, 0xb4, 0x1b, 0xcb, 0x95, 0x9c, 0x65, 0x33,
+  0x20, 0x04, 0xfb, 0x04, 0x4a, 0x16, 0x13, 0x19, 0xc2, 0x80, 0x3b, 0x5f,
+  0xe1, 0x28, 0x9c, 0x00, 0x29, 0x01, 0xb6, 0x12, 0x49, 0xa5, 0xf8, 0xb7,
+  0x8e, 0xbb, 0xa0, 0xba, 0x9f, 0x8f, 0xaf, 0x5f, 0xbf, 0x1b, 0xae, 0x3d,
+  0x90, 0x87, 0x11, 0x4e, 0x8e, 0x9f, 0x2f, 0x8b, 0x39, 0x88, 0x21, 0x88,
+  0x4c, 0x81, 0xd6, 0x74, 0x10, 0x7c, 0x17, 0x6f, 0xae, 0xf1, 0x82, 0xcb,
+  0xcb, 0x05, 0x33, 0x17, 0xdb, 0x8d, 0x06, 0x75, 0xf2, 0x45, 0xda, 0x4f,
+  0x71, 0x14, 0xb4, 0xda, 0xdc, 0xda, 0x0a, 0x97, 0x34, 0xb2, 0xba, 0xb2,
+  0x89, 0x35, 0x59, 0x72, 0xad, 0x5b, 0x20, 0xe9, 0x74, 0xe9, 0x9a, 0x4b,
+  0x3f, 0xda, 0x8f, 0x5f, 0xb2, 0xcd, 0x27, 0x69, 0x79, 0x95, 0x45, 0x50,
+  0x98, 0xc3, 0x15, 0x6a, 0x60, 0x8e, 0x05, 0x0a, 0x00, 0xd1, 0xea, 0x14,
+  0xaf, 0x0b, 0x99, 0xf6, 0x94, 0x5a, 0xf9, 0xa3, 0x72, 0xd5, 0x94, 0x68,
+  0x51, 0xf6, 0xbe, 0xfe, 0xaa, 0x7b, 0x41, 0xbe, 0x7e, 0xb7, 0xa2, 0x3b,
+  0x7c, 0xd3, 0x37, 0x79, 0x48, 0x2d, 0xa6, 0x41, 0x8a, 0x76, 0x77, 0x2d,
+  0x14, 0x7a, 0x3f, 0x3e, 0x00, 0xc3, 0xe5, 0x7f, 0x84, 0x4b, 0xd0, 0x13,
+  0xfa, 0xe3, 0xc1, 0x07, 0x15, 0x40, 0x32, 0xde, 0x15, 0x90, 0x25, 0x37,
+  0x87, 0x52, 0x1a, 0xf2, 0x5c, 0x82, 0xb7, 0xce, 0xd4, 0x8c, 0xbf, 0x15,
+  0xd9, 0xa2, 0x95, 0xf0, 0x95, 0x1e, 0x70, 0x24, 0xe1, 0xea, 0x81, 0x6b,
+  0x5d, 0xe6, 0xb3, 0x27, 0x3f, 0xb6, 0xf7, 0x9c, 0x3a, 0xec, 0x84, 0x5a,
+  0x3e, 0xa4, 0xfd, 0xbc, 0xcb, 0x87, 0xde, 0x92, 0x30, 0x86, 0xfb, 0xea,
+  0xf1, 0x93, 0xe1, 0xb6, 0xc2, 0xbd, 0x93, 0x6c, 0x8e, 0xe8, 0x12, 0x74,
+  0xd7, 0xa6, 0x54, 0xfb, 0x7b, 0xca, 0x30, 0x9a, 0xf1, 0xe6, 0x9e, 0x7d,
+  0xfe, 0xec, 0xe9, 0xd6, 0x56, 0x4f, 0xad, 0x81, 0x96, 0xe4, 0x07, 0xe7,
+  0x18, 0x58, 0x81, 0x98, 0xcd, 0x31, 0xe6, 0x6b, 0x2e, 0x21, 0x1b, 0xa0,
+  0x08, 0xc5, 0x9b, 0xc3, 0xd5, 0x60, 0xaf, 0x62, 0x5d, 0x80, 0x1f, 0xc3,
+  0x4c, 0xd2, 0x61, 0xb8, 0xa4, 0xc6, 0x66, 0x2a, 0x8f, 0x2a, 0xb0, 0xf2,
+  0xa0, 0xb1, 0x6e, 0xe1, 0x41, 0x94, 0xc4, 0x57, 0xc7, 0x9c, 0xc9, 0x2e,
+  0x2f, 0x14, 0x1e, 0x78, 0x73, 0x7c, 0x72, 0xe4, 0xf8, 0xc8, 0xff, 0xda,
+  0x1e, 0x60, 0x90, 0xe5, 0xb8, 0xc3, 0x35, 0x45, 0x90, 0x0c, 0x00, 0x11,
+  0x34, 0xc9, 0xfe, 0xdb, 0x9e, 0x68, 0xb3, 0xfc, 0x71, 0x23, 0xc3, 0xfe,
+  0xe8, 0xdd, 0x77, 0xc7, 0xe7, 0xa7, 0xef, 0xde, 0x1e, 0xbd, 0x73, 0xb9,
+  0x2a, 0xb8, 0x9e, 0x63, 0x5e, 0xd5, 0xaa, 0xeb, 0xb0, 0xca, 0x91, 0xed,
+  0x04, 0x81, 0x14, 0x0e, 0x44, 0xcc, 0x82, 0x76, 0x4b, 0xff, 0x1a, 0x84,
+  0xcd, 0x05, 0x0f, 0xd9, 0xbe, 0x81, 0x48, 0x16, 0x08, 0xf2, 0x9e, 0x20,
+  0x1b, 0x70, 0x20, 0x19, 0x2e, 0xe2, 0x1c, 0xcb, 0xc5, 0xb1, 0xfb, 0x71,
+  0x9c, 0x69, 0xe5, 0x91, 0x2a, 0x28, 0xb6, 0x6a, 0x89, 0x6b, 0x3e, 0xbf,
+  0xaf, 0x31, 0x08, 0x4f, 0x6a, 0xef, 0x05, 0xe4, 0x61, 0x85, 0x87, 0x98,
+  0xd1, 0x59, 0xea, 0xc0, 0x97, 0x78, 0xad, 0x9e, 0x36, 0x01, 0xb7, 0x16,
+  0x2b, 0x6f, 0x58, 0x29, 0xc6, 0xe3, 0x5f, 0x5b, 0x90, 0x45, 0x5b, 0xfd,
+  0x0f, 0x66, 0xd0, 0x08, 0xbf, 0xe0, 0x12, 0x47, 0x5f, 0x68, 0xac, 0x45,
+  0x17, 0x4d, 0xb4, 0x0a, 0x1d, 0x9a, 0x42, 0x04, 0x01, 0x16, 0x0a, 0x3b,
+  0x82, 0xd7, 0xc2, 0xbb, 0xfe, 0xc3, 0xd9, 0xf9, 0xe9, 0x0f, 0x7f, 0xfe,
+  0x27, 0x77, 0x11, 0x1c, 0xed, 0x1f, 0x71, 0xe3, 0x59, 0xe3, 0x3f, 0xff,
+  0xaa, 0xde, 0x1e, 0xec, 0xae, 0xd9, 0x7e, 0xaf, 0x59, 0x42, 0xa5, 0x63,
+  0x6a, 0x61, 0xc7, 0xa5, 0x14, 0xbd, 0x30, 0x37, 0xa6, 0x8f, 0xbd, 0x76,
+  0xcc, 0x41, 0xe2, 0xac, 0xaa, 0x16, 0xc4, 0x7c, 0x57, 0x9d, 0xe2, 0x8a,
+  0x09, 0x8c, 0xa3, 0xe1, 0xe5, 0xa5, 0xb0, 0x2c, 0x6b, 0x8f, 0x71, 0x35,
+  0xf8, 0xfe, 0x77, 0xeb, 0x71, 0x70, 0x72, 0xf2, 0xeb, 0x17, 0xc1, 0x62,
+  0x17, 0x9a, 0xcb, 0xc0, 0x06, 0x10, 0x37, 0xa1, 0xbe, 0x13, 0x70, 0x8d,
+  0xfc, 0x23, 0xa0, 0xae, 0x6e, 0x38, 0xef, 0x4e, 0x75, 0x34, 0xe2, 0x26,
+  0xed, 0x57, 0x19, 0x29, 0x02, 0xec, 0xa1, 0x82, 0xca, 0x85, 0x6b, 0x11,
+  0x03, 0xeb, 0x94, 0x7d, 0x0f, 0xbf, 0x94, 0xbb, 0x4b, 0xd6, 0x51, 0x40,
+  0xbe, 0x18, 0x36, 0xa0, 0x70, 0x1e, 0x7e, 0x29, 0x54, 0xc5, 0x15, 0x08,
+  0x39, 0x84, 0x24, 0x12, 0x97, 0x01, 0xbb, 0x31, 0x82, 0xbd, 0xca, 0xbc,
+  0xba, 0x61, 0xc8, 0x05, 0x1c, 0xca, 0x9e, 0x14, 0x50, 0x16, 0xd8, 0x12,
+  0x68, 0x0c, 0x3c, 0x14, 0x1a, 0xbb, 0x8c, 0x98, 0xfe, 0xbd, 0x38, 0x3d,
+  0x3c, 0x3d, 0xa1, 0x5f, 0x8e, 0xde, 0x1c, 0xff, 0xe0, 0x19, 0x9a, 0x60,
+  0x8b, 0x28, 0xe7, 0x75, 0x09, 0x6d, 0x56, 0xca, 0xaa, 0xeb, 0xf0, 0x87,
+  0xaf, 0x26, 0x12, 0x67, 0xb4, 0xe6, 0xa3, 0x3c, 0x5c, 0xb8, 0x91, 0xfa,
+  0xbc, 0x03, 0xe8, 0x98, 0x87, 0xa2, 0x8b, 0xdc, 0x2a, 0x1f, 0x37, 0x76,
+  0x88, 0x2f, 0xe2, 0x90, 0xe9, 0x35, 0xf7, 0x56, 0x06, 0xc5, 0xf2, 0x54,
+  0x7e, 0xe9, 0x62, 0x12, 0x43, 0x83, 0xab, 0xd9, 0x58, 0xd4, 0xc8, 0x02,
+  0xdb, 0xb0, 0x07, 0xc7, 0x87, 0xc6, 0xdd, 0x0b, 0x26, 0x69, 0xca, 0x77,
+  0x10, 0x22, 0xa4, 0x21, 0x25, 0x6b, 0x61, 0x18, 0x8b, 0x1f, 0x2c, 0x7b,
+  0xab, 0x5d, 0x73, 0xcd, 0x39, 0xe9, 0x02, 0x68, 0xba, 0x3a, 0xa7, 0x81,
+  0x72, 0x00, 0x84, 0x57, 0x80, 0x5c, 0x30, 0x55, 0x04, 0x3b, 0x81, 0x0d,
+  0x7e, 0xac, 0x4c, 0xfe, 0x75, 0x99, 0xdf, 0xa6, 0x0c, 0xcb, 0xc0, 0x98,
+  0x0e, 0xf2, 0x52, 0xab, 0x8d, 0xf4, 0x57, 0x35, 0x92, 0x36, 0x5b, 0x79,
+  0xf6, 0x6b, 0x1a, 0x79, 0xd6, 0x6a, 0xe3, 0xfa, 0x57, 0x35, 0xe2, 0x4a,
+  0x30, 0xd2, 0xb5, 0xf8, 0xc3, 0xf1, 0x45, 0x72, 0x78, 0xfa, 0xda, 0xd3,
+  0xe8, 0x85, 0xbb, 0xda, 0x53, 0x92, 0x6b, 0x48, 0x18, 0x67, 0xfb, 0x1a,
+  0x57, 0xc1, 0x66, 0x0f, 0x83, 0x96, 0x08, 0x17, 0xdf, 0x9d, 0xda, 0xc2,
+  0xae, 0xb3, 0x9c, 0x3f, 0x2a, 0xc5, 0xb5, 0x17, 0xfa, 0x00, 0x9b, 0x15,
+  0xc5, 0x5d, 0x04, 0x14, 0x28, 0x1b, 0x95, 0x58, 0xd2, 0xd2, 0x10, 0x60,
+  0x46, 0x29, 0x7c, 0xcf, 0x73, 0x71, 0xd8, 0x43, 0x13, 0x90, 0x19, 0xb0,
+  0x4d, 0xb1, 0x70, 0x79, 0xe8, 0x6c, 0xe0, 0x41, 0xb6, 0x36, 0xc7, 0x6e,
+  0x89, 0xfa, 0x9f, 0xd7, 0x3a, 0x9a, 0x46, 0x02, 0xfc, 0xae, 0x72, 0xc2,
+  0x79, 0x83, 0x62, 0xb4, 0x06, 0x0f, 0x4b, 0x5e, 0x90, 0xda, 0xd8, 0x97,
+  0xc5, 0xe7, 0x11, 0xf7, 0xe2, 0xdc, 0xe9, 0xf2, 0x5a, 0xa1, 0xbc, 0xc3,
+  0xa2, 0x5c, 0x13, 0xae, 0x9f, 0x3d, 0xf9, 0xf1, 0x86, 0x6e, 0x69, 0xf1,
+  0x02, 0x6b, 0xe6, 0x74, 0xfe, 0xb7, 0xe0, 0x8e, 0x7e, 0xe2, 0xc3, 0x75,
+  0x66, 0xe9, 0x54, 0x82, 0xa8, 0x24, 0x7a, 0x94, 0xf4, 0x9d, 0x3a, 0xfd,
+  0xc8, 0x71, 0x6f, 0x10, 0x89, 0x78, 0x0d, 0xc7, 0x01, 0x1b, 0x7c, 0xaa,
+  0xcc, 0x39, 0x31, 0xd5, 0x5e, 0xce, 0x9f, 0xb9, 0x0c, 0x82, 0x64, 0x58,
+  0x0d, 0xa2, 0x45, 0xb0, 0x8f, 0xc2, 0xc0, 0x89, 0x8b, 0xa2, 0x42, 0x3d,
+  0xf2, 0xb8, 0x83, 0xdd, 0x75, 0x6b, 0xd0, 0x61, 0x45, 0xa9, 0x89, 0xb5,
+  0x1f, 0x17, 0xd3, 0x7c, 0x9c, 0x73, 0xd0, 0x96, 0xc3, 0x3c, 0x42, 0xd9,
+  0x4b, 0x59, 0xb4, 0xfe, 0x0a, 0x7b, 0x6d, 0x91, 0x88, 0xe5, 0x50, 0x0d,
+  0x48, 0x2a, 0x7f, 0x4c, 0x0a, 0x5e, 0x49, 0x09, 0x47, 0x43, 0x39, 0x68,
+  0xfa, 0xe2, 0x5e, 0x9c, 0xe6, 0xe9, 0xbc, 0x88, 0x60, 0x92, 0xb9, 0x8d,
+  0x51, 0x25, 0xd8, 0x6b, 0x9c, 0xcf, 0xe4, 0xc7, 0xa1, 0xf1, 0x72, 0x2b,
+  0x87, 0x68, 0x4c, 0x9c, 0x0d, 0x3e, 0x62, 0x78, 0x34, 0xae, 0x25, 0xa5,
+  0x3f, 0xc7, 0x92, 0xb2, 0xc8, 0xe8, 0xfd, 0xa3, 0x2e, 0x66, 0x73, 0xd5,
+  0x8a, 0xbe, 0x7f, 0xbe, 0xa2, 0x1f, 0xc1, 0xb7, 0xba, 0x70, 0xd6, 0xcd,
+  0x76, 0xae, 0x0b, 0xda, 0xef, 0xb6, 0xf6, 0x59, 0x9b, 0x44, 0x2c, 0xef,
+  0x04, 0xc8, 0xbb, 0x45, 0x98, 0x81, 0xf6, 0xb9, 0x3e, 0x09, 0x2b, 0xc4,
+  0x5d, 0x06, 0xcb, 0x91, 0x8b, 0x91, 0x2e, 0xb3, 0xc5, 0xd4, 0x4d, 0xd1,
+  0x3e, 0xe4, 0x84, 0x37, 0x76, 0x46, 0xf2, 0x8a, 0x8f, 0x75, 0xbc, 0xdd,
+  0x00, 0xbc, 0x50, 0x60, 0x7c, 0xe1, 0x3b, 0x49, 0x39, 0x45, 0x89, 0x88,
+  0x64, 0x9e, 0x3b, 0x82, 0xd4, 0xba, 0xea, 0xfc, 0x11, 0x72, 0xfc, 0xe9,
+  0x1a, 0x28, 0xdc, 0xdf, 0xf6, 0x46, 0x37, 0x90, 0x47, 0x6e, 0x0a, 0x9f,
+  0xfd, 0xc0, 0xeb, 0xb0, 0x2c, 0x05, 0x69, 0xc7, 0x97, 0x27, 0xb2, 0x40,
+  0x0c, 0x59, 0x88, 0x12, 0xd0, 0xb4, 0x83, 0xe4, 0x6d, 0x37, 0x75, 0xba,
+  0xb8, 0xac, 0x15, 0x7b, 0x10, 0x96, 0xf6, 0x49, 0x50, 0x8a, 0x8f, 0xaf,
+  0x64, 0xdf, 0x20, 0x9f, 0x00, 0x77, 0xef, 0x70, 0x00, 0x66, 0xd2, 0x85,
+  0x24, 0xf0, 0x15, 0xe3, 0xfd, 0x3a, 0xec, 0xee, 0xb6, 0x17, 0xfb, 0xec,
+  0x60, 0x38, 0xb4, 0x85, 0x3e, 0x0c, 0x17, 0x54, 0x96, 0x50, 0x53, 0x84,
+  0x18, 0x9a, 0x55, 0x81, 0x7b, 0xba, 0xea, 0x8e, 0xb6, 0xd1, 0x4a, 0x2d,
+  0xdc, 0x7d, 0xe2, 0xfa, 0x72, 0x5d, 0x7d, 0x27, 0x6d, 0xf5, 0x3e, 0xb1,
+  0xab, 0x78, 0x5f, 0xdf, 0x45, 0xfa, 0x7a, 0xda, 0x21, 0xa2, 0xbd, 0xbd,
+  0xcf, 0x0c, 0xb4, 0x46, 0x4a, 0x3b, 0x4c, 0x13, 0xdf, 0x61, 0xd0, 0x23,
+  0x3d, 0xd7, 0x57, 0x5c, 0xe0, 0x2c, 0x52, 0x50, 0x90, 0xfd, 0x68, 0xf3,
+  0xb0, 0xab, 0x67, 0xae, 0x2b, 0xd2, 0x99, 0x36, 0xd8, 0x69, 0xa6, 0x87,
+  0xa4, 0x73, 0x76, 0x5c, 0xc9, 0xd2, 0x63, 0xac, 0x01, 0x89, 0x61, 0xb5,
+  0x0b, 0x02, 0x6a, 0x75, 0x65, 0xa3, 0x08, 0xfa, 0xf9, 0xcc, 0x4f, 0xc9,
+  0x8f, 0x1b, 0x8a, 0x8d, 0xc2, 0x1c, 0x0e, 0x82, 0xc3, 0xea, 0x08, 0xc5,
+  0xd2, 0x13, 0x5c, 0xb8, 0x5c, 0x9b, 0xcf, 0xc8, 0xab, 0xbe, 0x17, 0x39,
+  0x7e, 0x67, 0x20, 0x62, 0x2d, 0x05, 0x36, 0x48, 0x4e, 0x59, 0x09, 0x6b,
+  0xc0, 0x51, 0x0b, 0x62, 0x50, 0xea, 0xad, 0x34, 0x8d, 0x02, 0x1d, 0xbb,
+  0x2f, 0xfc, 0x9a, 0xd8, 0x90, 0xcc, 0x69, 0xb9, 0xad, 0xc7, 0xc7, 0xfb,
+  0x47, 0x2c, 0x26, 0x21, 0xe3, 0x08, 0x11, 0x24, 0x9d, 0x31, 0xc6, 0x6a,
+  0x07, 0x20, 0x93, 0x8e, 0xd4, 0x96, 0x73, 0x2d, 0x5c, 0x32, 0x27, 0x09,
+  0xee, 0x20, 0x4f, 0xc9, 0x7f, 0x5d, 0x82, 0x21, 0xf1, 0xad, 0x4b, 0x77,
+  0xa8, 0xfe, 0x69, 0xef, 0x09, 0x4a, 0x0e, 0x2a, 0x06, 0xf2, 0xad, 0xec,
+  0xf3, 0xb2, 0xf4, 0x64, 0xb8, 0xf5, 0xf7, 0x49, 0xb2, 0x52, 0xac, 0x47,
+  0x18, 0xa7, 0x83, 0xca, 0x18, 0xb8, 0xd4, 0x66, 0xc3, 0x8c, 0x61, 0x6c,
+  0x40, 0x65, 0x80, 0x02, 0x37, 0xd1, 0xf1, 0x18, 0xb9, 0xce, 0x95, 0xe9,
+  0xeb, 0x20, 0x9a, 0x91, 0x89, 0x81, 0x74, 0xa1, 0x65, 0xac, 0xe8, 0x0a,
+  0xdc, 0xd9, 0x89, 0x80, 0x21, 0xa4, 0xa3, 0xe2, 0xd6, 0x22, 0x7c, 0x15,
+  0xfd, 0x87, 0xdf, 0x12, 0xa5, 0x99, 0x45, 0x8b, 0x0a, 0x62, 0x6a, 0xff,
+  0x12, 0x36, 0x01, 0xac, 0x98, 0x79, 0x84, 0x82, 0x75, 0x93, 0x53, 0xf9,
+  0x3d, 0xc3, 0x11, 0xd9, 0xa2, 0xb5, 0x8e, 0xa3, 0x60, 0x15, 0x59, 0xc5,
+  0x9d, 0x34, 0x28, 0x13, 0xa7, 0x51, 0x12, 0x9d, 0x91, 0x75, 0x42, 0x99,
+  0xf6, 0x9e, 0x75, 0x29, 0x62, 0x78, 0x71, 0x7a, 0xae, 0x14, 0xd6, 0xe5,
+  0xba, 0x9a, 0x8b, 0x89, 0x47, 0x7c, 0x94, 0x73, 0x2f, 0x16, 0x88, 0x69,
+  0x06, 0x79, 0x49, 0xb3, 0xa5, 0xe5, 0x0a, 0x7a, 0x95, 0x4b, 0x8c, 0x23,
+  0x2b, 0x75, 0x6a, 0xdf, 0xa9, 0x05, 0xde, 0x4a, 0x89, 0xe1, 0x32, 0x9e,
+  0x66, 0xb3, 0x40, 0x1f, 0xd8, 0x93, 0x83, 0x76, 0xba, 0x64, 0x62, 0x17,
+  0x83, 0x31, 0xe8, 0x48, 0x4d, 0xc7, 0x08, 0x2a, 0x56, 0x6b, 0x9a, 0x73,
+  0x0d, 0xb6, 0x69, 0x51, 0x0e, 0xd1, 0xa9, 0x2b, 0x16, 0x67, 0x61, 0x04,
+  0xee, 0xee, 0xf2, 0xaa, 0x2b, 0xbb, 0xad, 0xe1, 0x70, 0x92, 0xa0, 0x0c,
+  0xcd, 0xbd, 0x4d, 0x91, 0xcc, 0xd2, 0xde, 0x6d, 0x8b, 0x2d, 0xb3, 0x68,
+  0xb2, 0x40, 0x54, 0xf4, 0x52, 0xd6, 0x8e, 0x5b, 0xe7, 0xb3, 0xd3, 0xf3,
+  0x0b, 0x1b, 0x1a, 0x77, 0xcb, 0x1f, 0xb4, 0xce, 0x0f, 0x90, 0xef, 0xa4,
+  0x78, 0xa5, 0x70, 0x16, 0xad, 0xfd, 0xb3, 0x16, 0xb5, 0xfa, 0xeb, 0xa6,
+  0x70, 0x3b, 0xd6, 0x10, 0x74, 0xb6, 0xf2, 0xde, 0xa2, 0xca, 0x18, 0x79,
+  0xdd, 0x78, 0x8e, 0x98, 0x51, 0xc0, 0xa0, 0xe3, 0xee, 0x5e, 0x2f, 0xd3,
+  0x3c, 0xd9, 0xed, 0x52, 0x07, 0x94, 0xe7, 0xf3, 0xa3, 0xe1, 0x85, 0x8c,
+  0x1d, 0xbf, 0x75, 0xc6, 0x2e, 0x56, 0x5c, 0xfd, 0x30, 0x1e, 0xa4, 0xc2,
+  0xd4, 0x81, 0x24, 0x29, 0x84, 0xec, 0xa3, 0x7d, 0x67, 0x55, 0x0e, 0xd6,
+  0xec, 0x49, 0x90, 0x10, 0xcf, 0x6c, 0x53, 0x69, 0x85, 0x13, 0xac, 0xf9,
+  0x83, 0x75, 0xed, 0x65, 0x9d, 0x6e, 0x5d, 0x39, 0x12, 0x80, 0x5f, 0xf7,
+  0x2d, 0x3c, 0xf5, 0x2d, 0x2c, 0xc0, 0xdf, 0xb5, 0x81, 0x63, 0xf3, 0xae,
+  0xe3, 0x43, 0x17, 0xf4, 0x7c, 0x95, 0xcd, 0x8d, 0x30, 0xe4, 0x39, 0xdf,
+  0xce, 0x33, 0xe7, 0x3d, 0x32, 0xf9, 0x28, 0x18, 0x0a, 0x3e, 0xb6, 0x3c,
+  0x64, 0x0e, 0xe1, 0x6b, 0x91, 0xdd, 0x93, 0xe7, 0xfe, 0x86, 0x80, 0x2a,
+  0xe1, 0xe3, 0x44, 0x74, 0x05, 0x82, 0x1b, 0x09, 0x71, 0x36, 0xf9, 0x7c,
+  0x99, 0xb1, 0xd1, 0x2c, 0x2d, 0xa7, 0xa8, 0x0f, 0xa0, 0x81, 0x1e, 0x1d,
+  0xb7, 0xb4, 0xe6, 0xd4, 0xfb, 0x7e, 0xf4, 0x26, 0x3a, 0x3e, 0x39, 0xf2,
+  0xdb, 0x25, 0x95, 0x05, 0xf8, 0x30, 0x7b, 0x21, 0x0f, 0xd5, 0xc9, 0xdc,
+  0x75, 0x31, 0x48, 0xce, 0x50, 0xba, 0x93, 0xdd, 0x4f, 0xd5, 0x7f, 0xf8,
+  0xd6, 0xe4, 0xb0, 0xb0, 0x31, 0x86, 0x2e, 0x50, 0x36, 0x8a, 0xe6, 0x73,
+  0xda, 0x5d, 0xfe, 0x04, 0xbf, 0x06, 0x55, 0x17, 0x3b, 0x53, 0x7e, 0xe1,
+  0x5f, 0xae, 0x68, 0x1e, 0xa4, 0xaa, 0xb5, 0x1f, 0x79, 0xaa, 0xb4, 0x45,
+  0x7a, 0x1c, 0x37, 0xe1, 0xd8, 0x33, 0xce, 0x74, 0x29, 0x95, 0x77, 0x26,
+  0xd2, 0xc2, 0xa5, 0x3d, 0xd3, 0x60, 0xe3, 0x41, 0x53, 0x72, 0x29, 0x1c,
+  0xc8, 0x3a, 0x71, 0xb2, 0x01, 0x9d, 0x1c, 0x38, 0x4b, 0xa8, 0xad, 0x39,
+  0x38, 0xee, 0xd4, 0xc1, 0x46, 0x87, 0xd9, 0x63, 0xbc, 0xb0, 0x8a, 0x00,
+  0xd9, 0x45, 0xa5, 0x6e, 0xd5, 0x21, 0x7d, 0x2a, 0xd4, 0xe8, 0x48, 0xc7,
+  0xdd, 0x63, 0x8d, 0xd1, 0xa1, 0x63, 0x9f, 0x74, 0x85, 0xdd, 0x86, 0x69,
+  0x88, 0x6e, 0xf9, 0x50, 0xba, 0x7b, 0xfa, 0xcc, 0x37, 0x75, 0xc9, 0xc5,
+  0x37, 0x8c, 0xbf, 0x1f, 0x34, 0x78, 0x90, 0xab, 0xbc, 0x91, 0xbb, 0x27,
+  0x45, 0x59, 0x10, 0x0b, 0x75, 0xe4, 0x58, 0x05, 0x7d, 0x08, 0x31, 0x5c,
+  0x14, 0x88, 0x98, 0x98, 0xdf, 0x7b, 0xcc, 0x15, 0x2d, 0xf8, 0x25, 0x36,
+  0x08, 0x29, 0x43, 0xe3, 0xd0, 0x58, 0x44, 0xdb, 0x54, 0x05, 0x7d, 0x96,
+  0x7e, 0xec, 0x5c, 0xf5, 0xb3, 0xe5, 0x4c, 0xa1, 0x26, 0x82, 0x9e, 0x3e,
+  0x57, 0x6d, 0x16, 0x85, 0xc7, 0xe6, 0x5e, 0xff, 0x0b, 0x99, 0x69, 0xe1,
+  0x5c, 0xc4, 0x2e, 0x61, 0x53, 0x82, 0xba, 0x2b, 0x57, 0x18, 0x31, 0x52,
+  0x1f, 0x00, 0x17, 0xb2, 0x8a, 0x89, 0x16, 0x14, 0x59, 0x04, 0x58, 0xa5,
+  0x58, 0x6f, 0x7d, 0x4c, 0xbe, 0x7a, 0xc0, 0x67, 0x5f, 0x66, 0x7f, 0xe1,
+  0x82, 0xc4, 0x03, 0xb9, 0x74, 0x04, 0x2a, 0x4c, 0x66, 0x89, 0x90, 0x05,
+  0xcf, 0xf2, 0x9e, 0xbe, 0x50, 0x53, 0x85, 0xaa, 0xc2, 0x56, 0x24, 0xb7,
+  0x6d, 0x69, 0x7e, 0xb6, 0xeb, 0xd3, 0x49, 0xb2, 0xac, 0xdc, 0xa8, 0x84,
+  0x3b, 0x04, 0xf8, 0x0e, 0xc4, 0xe0, 0x86, 0xc3, 0x6f, 0x92, 0xb7, 0xaf,
+  0x9f, 0x21, 0xc3, 0xf8, 0x2a, 0x2b, 0x51, 0x80, 0xda, 0xeb, 0x62, 0xa7,
+  0xdf, 0x06, 0x8d, 0xed, 0x85, 0x31, 0x01, 0xa2, 0x3f, 0x29, 0x43, 0x53,
+  0x49, 0x9b, 0xb6, 0x10, 0x50, 0x89, 0x57, 0xe6, 0x42, 0x31, 0xa0, 0x7a,
+  0x43, 0x10, 0x65, 0xd9, 0xa5, 0x9d, 0x9b, 0xd2, 0x64, 0x62, 0xcf, 0x9e,
+  0x78, 0x26, 0x56, 0xde, 0x2f, 0x50, 0x7c, 0x63, 0x7e, 0x05, 0x81, 0x3a,
+  0x72, 0xa2, 0x9e, 0x09, 0xe3, 0x3c, 0x94, 0x73, 0x0f, 0x61, 0xb6, 0xfb,
+  0x5a, 0x5a, 0x59, 0xd8, 0x4c, 0xf0, 0xde, 0xb3, 0x50, 0x9d, 0x44, 0x29,
+  0x3c, 0x50, 0x98, 0x96, 0xc5, 0x60, 0x49, 0x25, 0x78, 0xf6, 0xb9, 0x7b,
+  0x16, 0xb6, 0x83, 0x7c, 0x1e, 0x14, 0x28, 0x5a, 0xf1, 0x86, 0x0a, 0xc1,
+  0x22, 0x1a, 0x78, 0xf1, 0x4c, 0xe4, 0x9e, 0x60, 0xed, 0x83, 0x57, 0x5e,
+  0x34, 0xb5, 0x65, 0xae, 0x70, 0xea, 0x08, 0x93, 0x27, 0x95, 0x2f, 0xae,
+  0xc3, 0xc3, 0xf9, 0x5c, 0x6e, 0xea, 0xb3, 0x36, 0x5c, 0x87, 0xf1, 0xc0,
+  0x2c, 0xf4, 0xdd, 0xd9, 0x51, 0x17, 0xd2, 0x3f, 0x3c, 0x48, 0xec, 0x95,
+  0xf6, 0xc1, 0x61, 0x5a, 0x0f, 0x3a, 0xd9, 0xd5, 0x33, 0x43, 0x53, 0x2e,
+  0xae, 0xe6, 0xf9, 0xdf, 0x0c, 0xee, 0x14, 0xf7, 0xb3, 0x15, 0x97, 0x0a,
+  0x1e, 0xdf, 0x53, 0x86, 0x71, 0x9b, 0x4e, 0x73, 0x65, 0x8a, 0xb0, 0xa3,
+  0xfb, 0x07, 0x9e, 0x28, 0xd5, 0x7e, 0xcc, 0x71, 0x44, 0x25, 0x52, 0x16,
+  0x65, 0xfa, 0xe0, 0xc1, 0xc9, 0x1a, 0xe8, 0x2f, 0xcf, 0x9f, 0xaa, 0xec,
+  0x65, 0xf2, 0x31, 0xee, 0x25, 0x2c, 0xc4, 0x94, 0xab, 0x0e, 0xb4, 0xd9,
+  0xf4, 0x73, 0xbd, 0xfa, 0x74, 0x2b, 0x5d, 0x81, 0xa9, 0xd2, 0x6a, 0xa3,
+  0xe1, 0xd7, 0xbb, 0x7c, 0xae, 0xd9, 0x62, 0x9d, 0xd7, 0x9f, 0xaf, 0x30,
+  0x41, 0x55, 0x72, 0x6f, 0x1e, 0x31, 0x2d, 0x05, 0xcf, 0x7f, 0xe6, 0x4f,
+  0x42, 0xa3, 0x62, 0x83, 0x65, 0x40, 0x71, 0xec, 0x9e, 0xd5, 0xf5, 0xb1,
+  0xb3, 0x04, 0xd5, 0x65, 0xc1, 0x76, 0xda, 0xf9, 0x24, 0x96, 0x9a, 0x79,
+  0xe9, 0xba, 0x9f, 0x16, 0xe0, 0xa6, 0x41, 0x7f, 0x42, 0x52, 0x6f, 0xb8,
+  0xa0, 0xae, 0x57, 0x10, 0xe6, 0x8d, 0x3a, 0x95, 0xfe, 0xe9, 0x17, 0x4a,
+  0x1b, 0x76, 0x5f, 0x9a, 0x98, 0xba, 0xf2, 0x8d, 0xcf, 0x76, 0x42, 0xa1,
+  0x75, 0x02, 0x4b, 0xbd, 0xc0, 0x7e, 0xae, 0x7c, 0x41, 0x28, 0xe3, 0x78,
+  0x8a, 0xaa, 0x8f, 0x53, 0x2b, 0xd5, 0x68, 0xd8, 0xd3, 0xfe, 0xb1, 0xbd,
+  0x06, 0xd3, 0xbd, 0x08, 0x45, 0xa8, 0xe4, 0xf8, 0x75, 0xf0, 0xe0, 0x13,
+  0x3f, 0xc1, 0x74, 0x0a, 0x69, 0xe0, 0x5e, 0x2c, 0x11, 0x95, 0x96, 0xb0,
+  0x0c, 0x1e, 0x7d, 0xaa, 0x09, 0x3f, 0x12, 0xed, 0xc2, 0xcb, 0xdf, 0x79,
+  0x46, 0xc8, 0xe1, 0x90, 0x73, 0xf4, 0x6a, 0x86, 0xa9, 0x98, 0x9b, 0xb7,
+  0xa0, 0xbd, 0xf7, 0x9f, 0x3d, 0x7f, 0xe0, 0x59, 0xbd, 0x34, 0x2b, 0x77,
+  0xd5, 0x07, 0xef, 0x7d, 0xd6, 0x3d, 0xe6, 0xa6, 0x16, 0x18, 0x9a, 0x0e,
+  0x1d, 0x35, 0x9c, 0xb4, 0x64, 0x13, 0x20, 0x90, 0xff, 0x61, 0xa6, 0x9f,
+  0x12, 0xb9, 0x8a, 0xd5, 0x7f, 0x84, 0xe3, 0xfd, 0x3c, 0x84, 0xe4, 0x11,
+  0xa3, 0x4f, 0x99, 0xb1, 0xc1, 0x78, 0xdc, 0x28, 0x8a, 0xeb, 0x23, 0xca,
+  0x79, 0x75, 0x82, 0x16, 0x64, 0xcf, 0x49, 0x8e, 0x58, 0xce, 0x3d, 0xe7,
+  0x10, 0x65, 0x50, 0xa1, 0x54, 0x2d, 0xb6, 0x5b, 0x47, 0xf7, 0x0d, 0x6d,
+  0x2a, 0x53, 0x47, 0x60, 0x3c, 0xdb, 0x69, 0x1d, 0x83, 0xea, 0x7a, 0x29,
+  0xaa, 0xb7, 0x9b, 0x91, 0x47, 0xd0, 0x0a, 0x5e, 0xdb, 0xf3, 0xdc, 0x8b,
+  0xc7, 0xc6, 0x52, 0xe3, 0x21, 0x8d, 0x56, 0x74, 0x73, 0x87, 0xa3, 0xcf,
+  0x86, 0xd7, 0xbb, 0xb2, 0xc0, 0xaf, 0x06, 0x00, 0xbc, 0x99, 0xae, 0xc0,
+  0x3c, 0x53, 0x80, 0x9b, 0xa0, 0x1b, 0x15, 0x6d, 0x10, 0x10, 0x4f, 0xbb,
+  0x74, 0x9d, 0x8d, 0x6f, 0xec, 0xc8, 0x6c, 0xa6, 0x2d, 0x58, 0x9c, 0xe0,
+  0xad, 0xa7, 0x6e, 0x69, 0x59, 0xad, 0x39, 0x3f, 0x6a, 0x6b, 0x02, 0xfe,
+  0x51, 0xa1, 0x9a, 0xf3, 0x8b, 0xe1, 0xd9, 0x3e, 0xc6, 0x2c, 0x2e, 0x18,
+  0x3a, 0x10, 0x87, 0xc3, 0xec, 0xaf, 0x9a, 0x13, 0x5d, 0xf9, 0xa7, 0x9f,
+  0xaf, 0x78, 0x7a, 0xa8, 0x31, 0x52, 0xc7, 0x13, 0xb0, 0x5f, 0xda, 0x87,
+  0xf0, 0xa5, 0xcf, 0x14, 0x64, 0xc2, 0x4c, 0xbb, 0x62, 0x39, 0xc2, 0xc8,
+  0x5c, 0x4a, 0x8d, 0x7f, 0xf8, 0x73, 0xaf, 0xd7, 0x5c, 0x2f, 0xe7, 0x37,
+  0x4e, 0x5e, 0xd4, 0x00, 0x36, 0xdb, 0x60, 0xff, 0xc2, 0x0b, 0x3b, 0x1a,
+  0x01, 0xd0, 0x99, 0x73, 0x7f, 0xf7, 0xd4, 0x52, 0x61, 0x31, 0xab, 0xe2,
+  0x3b, 0x22, 0xfe, 0xba, 0x0c, 0xd6, 0xe0, 0xc5, 0x8e, 0xbb, 0x7e, 0x17,
+  0xcb, 0x11, 0x09, 0xa4, 0xc9, 0x4d, 0x76, 0xef, 0xa9, 0x4e, 0x5c, 0x76,
+  0x24, 0x2e, 0xe6, 0x73, 0x18, 0x22, 0xfc, 0x23, 0xae, 0x81, 0x1f, 0x7e,
+  0x10, 0x1e, 0xef, 0x22, 0xa8, 0xd4, 0xb5, 0xe0, 0x4a, 0xc7, 0x13, 0x43,
+  0x14, 0xb1, 0x00, 0xc7, 0x8b, 0xed, 0xf1, 0x65, 0x36, 0xcd, 0x00, 0xdd,
+  0x2e, 0x7a, 0x0a, 0x13, 0x76, 0x2c, 0x05, 0x13, 0x31, 0xc6, 0xec, 0x56,
+  0x41, 0xa6, 0x33, 0x1b, 0xf4, 0xe6, 0x08, 0x4c, 0x55, 0x63, 0x15, 0xed,
+  0xf8, 0xc1, 0xfb, 0x8b, 0x6f, 0x4e, 0xcf, 0x87, 0xc9, 0x36, 0x30, 0x35,
+  0x2f, 0xce, 0x8f, 0xbf, 0x7a, 0x4f, 0xfa, 0xbf, 0x73, 0xcb, 0xbc, 0x4e,
+  0xe7, 0x39, 0xdd, 0x1c, 0xc3, 0x3a, 0x9b, 0xd3, 0x3e, 0x5e, 0x59, 0x39,
+  0x61, 0x29, 0x9c, 0x43, 0x77, 0x65, 0x51, 0x4a, 0xd5, 0x35, 0x4e, 0x8f,
+  0xbb, 0x2e, 0x74, 0x33, 0x24, 0xd8, 0x12, 0x69, 0x05, 0xc8, 0xd6, 0x28,
+  0xbc, 0x6e, 0x9b, 0x37, 0x71, 0x52, 0x13, 0xf3, 0xae, 0x26, 0x17, 0xdf,
+  0x1c, 0xbc, 0xfb, 0x76, 0x68, 0x45, 0x26, 0xbe, 0xff, 0xfe, 0xfb, 0xd0,
+  0xeb, 0x5f, 0xed, 0x6f, 0x6f, 0xb3, 0x7c, 0x79, 0x9d, 0x7e, 0xfc, 0x38,
+  0xa8, 0xb2, 0xb5, 0xb5, 0x37, 0xde, 0x59, 0xe7, 0xcb, 0x4c, 0x57, 0x4b,
+  0x12, 0x2d, 0xe8, 0xeb, 0x6d, 0x5a, 0x60, 0x54, 0xb3, 0xde, 0x5e, 0xd6,
+  0xf9, 0x94, 0x6e, 0xa4, 0xac, 0xe2, 0xb7, 0xb7, 0xd7, 0xd6, 0x86, 0x47,
+  0x47, 0xc9, 0xc1, 0xc9, 0xf0, 0x34, 0x78, 0x77, 0x73, 0x17, 0xa1, 0x2b,
+  0x57, 0x59, 0x4d, 0xbf, 0xac, 0xad, 0x9d, 0x1c, 0x5c, 0x40, 0xe9, 0xfd,
+  0xee, 0xe8, 0x7c, 0x78, 0x7c, 0xfa, 0x0e, 0xdb, 0x83, 0x88, 0xc5, 0x74,
+  0x7a, 0x87, 0x80, 0xd5, 0xcb, 0x9c, 0xd1, 0x7a, 0xee, 0xac, 0x70, 0x74,
+  0x1b, 0xfc, 0x9f, 0x2e, 0xac, 0x3b, 0xe0, 0x76, 0x6b, 0xa4, 0x03, 0x22,
+  0xd7, 0x69, 0x29, 0x2c, 0x14, 0x71, 0x2d, 0xf1, 0x86, 0x2f, 0xa9, 0x69,
+  0x91, 0x8d, 0x24, 0xbe, 0xba, 0x27, 0x18, 0x17, 0x9c, 0xdf, 0x12, 0x04,
+  0x4e, 0xc6, 0x67, 0x3e, 0x3c, 0x46, 0xa9, 0x9f, 0xe4, 0xfd, 0xf0, 0xe0,
+  0xeb, 0x23, 0x3c, 0xfb, 0x75, 0x56, 0xfb, 0x1d, 0x91, 0x0a, 0xd7, 0xe8,
+  0xe5, 0x5d, 0x56, 0x57, 0xe3, 0x74, 0x81, 0x24, 0x7e, 0xea, 0xa7, 0x2f,
+  0x37, 0x51, 0xd0, 0xb8, 0x68, 0x03, 0xbe, 0xf0, 0xf7, 0x5c, 0x9f, 0xe7,
+  0x1a, 0xdd, 0x61, 0xbb, 0xe7, 0x47, 0x07, 0xaf, 0xdf, 0x1e, 0x59, 0x88,
+  0xbe, 0x94, 0x57, 0xa1, 0x46, 0xaf, 0x51, 0xbc, 0xd8, 0x5b, 0xc3, 0x21,
+  0x1d, 0x60, 0xf5, 0xe9, 0x1b, 0x14, 0x12, 0x8e, 0x77, 0xe7, 0x77, 0x8a,
+  0x9f, 0x1d, 0x5c, 0xe6, 0xdb, 0xd2, 0xba, 0xf5, 0x97, 0xba, 0x35, 0x51,
+  0xc8, 0x74, 0x13, 0x98, 0xc5, 0xaa, 0xc1, 0xe6, 0x90, 0xcf, 0x77, 0x76,
+  0x76, 0x1e, 0x98, 0x07, 0x6b, 0x14, 0x7a, 0xef, 0xd2, 0x54, 0xf6, 0xf1,
+  0xf8, 0xb6, 0x6f, 0xdf, 0x8f, 0x78, 0xaa, 0x88, 0x09, 0xa8, 0x8a, 0x38,
+  0x17, 0x74, 0xe0, 0xbc, 0xce, 0xe2, 0x43, 0x1e, 0x17, 0x85, 0xdb, 0x81,
+  0xc6, 0xe2, 0x90, 0x8c, 0xcc, 0x32, 0x8f, 0xc6, 0x76, 0xf2, 0x1b, 0x32,
+  0x70, 0xd2, 0x80, 0x38, 0x9e, 0xad, 0xbc, 0x6f, 0x37, 0x89, 0x6f, 0xa8,
+  0x4d, 0xfc, 0x18, 0x14, 0xe5, 0xd5, 0xf6, 0x6c, 0x9f, 0x85, 0x1a, 0x7a,
+  0xe8, 0x0d, 0xf0, 0x54, 0x12, 0x12, 0x8e, 0x5d, 0x58, 0x7a, 0x85, 0x85,
+  0x45, 0x06, 0xcd, 0x27, 0x8c, 0xeb, 0x17, 0xac, 0x82, 0xc4, 0x44, 0x5d,
+  0xda, 0xcc, 0xad, 0x34, 0x6a, 0xa4, 0x13, 0xd0, 0x1f, 0xdb, 0x1c, 0x07,
+  0xc4, 0x42, 0xa8, 0x17, 0x04, 0xbc, 0x31, 0x89, 0xd0, 0xaf, 0x25, 0x91,
+  0xcc, 0xa0, 0xfe, 0xc8, 0x9c, 0x57, 0xab, 0xf4, 0x0a, 0xba, 0x24, 0x7c,
+  0xb8, 0x0b, 0xa4, 0xb9, 0x96, 0x5c, 0xe0, 0x87, 0x7b, 0x40, 0xea, 0x2c,
+  0xf1, 0x9e, 0x2b, 0x5d, 0x38, 0x8e, 0x02, 0x42, 0xc3, 0xed, 0x3e, 0xfb,
+  0x7d, 0xa6, 0x9f, 0xca, 0x51, 0xcb, 0x27, 0x74, 0x1e, 0x4c, 0x4a, 0x56,
+  0x7f, 0xae, 0x17, 0x75, 0x40, 0x3b, 0x43, 0x1a, 0x45, 0xa7, 0xaf, 0xa5,
+  0x2f, 0x34, 0x5c, 0x49, 0x77, 0x61, 0xa5, 0x7a, 0xda, 0x8d, 0x6d, 0xce,
+  0x23, 0xfb, 0xe4, 0x3e, 0x0e, 0xcf, 0xf4, 0x37, 0x44, 0xd3, 0xe4, 0xb7,
+  0x98, 0x3c, 0x98, 0x3c, 0x5d, 0xd7, 0xb8, 0x05, 0x4c, 0xca, 0xe5, 0xe0,
+  0x1c, 0x56, 0x58, 0x39, 0xe7, 0x21, 0xd4, 0x38, 0x1e, 0x18, 0xe1, 0x3e,
+  0x2d, 0x0d, 0x2e, 0x95, 0xff, 0xb5, 0x3d, 0xa8, 0xaa, 0xeb, 0xed, 0x7c,
+  0xf2, 0xa1, 0xac, 0xd2, 0xe4, 0xa7, 0x26, 0xc7, 0xaf, 0xc6, 0xed, 0x49,
+  0xfc, 0x2f, 0x5e, 0xc1, 0x5f, 0xb4, 0x52, 0xab, 0x67, 0xf1, 0x5b, 0xcc,
+  0xa0, 0xdf, 0x67, 0x78, 0x07, 0xed, 0xe9, 0x03, 0x3d, 0xf0, 0xc1, 0x61,
+  0x54, 0xfc, 0x8a, 0xd9, 0x45, 0x58, 0x21, 0x4d, 0x52, 0x42, 0xcd, 0x89,
+  0xb7, 0xc4, 0x09, 0xdd, 0x4a, 0x12, 0xfd, 0xb8, 0xb7, 0xb3, 0xb3, 0xbb,
+  0xbf, 0xfb, 0xf9, 0x8b, 0x9d, 0xfd, 0xdd, 0xdd, 0xdd, 0xbd, 0xfd, 0xdd,
+  0xfd, 0xfd, 0xbd, 0x9d, 0x9f, 0xb7, 0xd7, 0x57, 0x2d, 0xdd, 0xdb, 0xaf,
+  0x56, 0x34, 0x48, 0xb3, 0x5e, 0x97, 0x38, 0xd6, 0x9f, 0xdc, 0xec, 0x79,
+  0x56, 0x93, 0xf5, 0xa4, 0x9a, 0x8d, 0xa8, 0x2b, 0x3d, 0x9c, 0xe1, 0x64,
+  0x2a, 0x92, 0xa5, 0xb3, 0x60, 0x42, 0xaf, 0x4f, 0xbf, 0x7f, 0x77, 0x72,
+  0x7a, 0xf0, 0x3a, 0xb9, 0x38, 0x4d, 0x0e, 0xd8, 0xf2, 0x17, 0xe1, 0x93,
+  0x1c, 0x8b, 0x8e, 0x9c, 0x4b, 0x01, 0xc8, 0xf0, 0x5e, 0x02, 0x33, 0x53,
+  0xb9, 0xe0, 0x27, 0x1e, 0x44, 0x7b, 0x9c, 0x05, 0x6b, 0x76, 0x68, 0x69,
+  0x70, 0x5d, 0xcf, 0x1e, 0xbf, 0x11, 0x3e, 0xa5, 0xe7, 0x9e, 0x38, 0xe3,
+  0xbd, 0xf2, 0xce, 0xc3, 0xb1, 0x93, 0xaf, 0x89, 0x4d, 0xea, 0xd2, 0x52,
+  0x47, 0xb6, 0x4b, 0xc3, 0xd9, 0x94, 0xd0, 0x2d, 0x7e, 0x83, 0xcf, 0x25,
+  0xfb, 0xbf, 0xda, 0xe1, 0x41, 0x2a, 0xd6, 0xf7, 0x2c, 0x52, 0x82, 0xa5,
+  0x24, 0x88, 0xa5, 0x5b, 0x9d, 0x09, 0x9e, 0xae, 0x9c, 0x12, 0x5d, 0xe6,
+  0xd9, 0x47, 0x9e, 0x75, 0x93, 0xf7, 0x4a, 0xa0, 0xb3, 0x9f, 0x1d, 0x97,
+  0x8b, 0x30, 0x73, 0x44, 0x5e, 0xda, 0x90, 0x39, 0xc6, 0x2b, 0xd2, 0x1d,
+  0xfa, 0x31, 0x96, 0xec, 0xbb, 0xc0, 0x37, 0xe1, 0x3d, 0xbe, 0xed, 0x2c,
+  0xbc, 0x32, 0x80, 0xf7, 0xc3, 0xe3, 0x77, 0x5f, 0xb3, 0x0f, 0xf7, 0xfb,
+  0xd3, 0xf3, 0xd7, 0x43, 0x6a, 0x16, 0x12, 0xce, 0x1a, 0x1b, 0xf9, 0xc0,
+  0x09, 0x75, 0x54, 0x72, 0x2e, 0xd1, 0xf5, 0x1f, 0x85, 0x9c, 0x7a, 0x61,
+  0xc1, 0xc8, 0x59, 0xa8, 0xf2, 0x00, 0x29, 0x22, 0x7e, 0x6b, 0x04, 0xd4,
+  0xf8, 0xe5, 0x2c, 0x1d, 0x5f, 0x43, 0x47, 0x17, 0x62, 0xe5, 0x60, 0xbb,
+  0x6d, 0x64, 0xcd, 0x6c, 0x43, 0xf5, 0xda, 0xae, 0x0b, 0x26, 0x47, 0x6e,
+  0x45, 0xf2, 0x15, 0xad, 0xc4, 0x61, 0x60, 0xa0, 0x21, 0x5a, 0xbf, 0x9c,
+  0xa6, 0x57, 0xdc, 0x61, 0xf7, 0x18, 0x04, 0x9d, 0x69, 0xf7, 0x9f, 0xda,
+  0x25, 0xae, 0x0d, 0x6e, 0xef, 0x98, 0x09, 0x80, 0x71, 0xe4, 0x18, 0xfe,
+  0x42, 0x7d, 0x4f, 0x22, 0x77, 0xc2, 0x53, 0xcf, 0x41, 0x3d, 0xa8, 0xd7,
+  0xde, 0xae, 0x62, 0xc6, 0x05, 0xb4, 0x05, 0x79, 0x87, 0x44, 0xf3, 0x7e,
+  0x80, 0xe0, 0x23, 0xea, 0x29, 0x5a, 0x0a, 0xcc, 0x40, 0x95, 0x0f, 0x4c,
+  0xf4, 0xb5, 0x89, 0x64, 0xc9, 0x31, 0x18, 0xc6, 0x9e, 0xaa, 0x2c, 0xe2,
+  0x4d, 0x05, 0xe1, 0x75, 0xd4, 0xa5, 0x44, 0xc8, 0xca, 0xba, 0xc1, 0xc9,
+  0xf8, 0x2a, 0x27, 0x1e, 0x11, 0xb8, 0xaa, 0x69, 0x28, 0x29, 0x2a, 0x9c,
+  0x72, 0xed, 0x6e, 0x03, 0x19, 0x27, 0x85, 0x4a, 0xf2, 0x9a, 0xd7, 0x2d,
+  0xf0, 0x45, 0x5a, 0xc9, 0x2b, 0xc9, 0x2c, 0x70, 0x30, 0x19, 0xb8, 0xbc,
+  0x04, 0xf9, 0x6a, 0x4d, 0x83, 0x0a, 0xfc, 0x3d, 0xe9, 0x8d, 0x97, 0xb8,
+  0xe3, 0x48, 0x8c, 0x27, 0x06, 0x2e, 0x94, 0xa3, 0x49, 0xb8, 0x41, 0xa1,
+  0xe4, 0xc6, 0xb2, 0x59, 0x1e, 0x8e, 0x34, 0x07, 0xce, 0xec, 0x0d, 0xb1,
+  0x6e, 0x05, 0xd7, 0x38, 0xf8, 0xc8, 0xdd, 0x02, 0x91, 0x8c, 0xfc, 0xd4,
+  0x03, 0xd8, 0x04, 0xcb, 0x26, 0xe1, 0x76, 0xfe, 0x3d, 0xda, 0x23, 0x34,
+  0x95, 0xd7, 0x55, 0x36, 0xbd, 0x54, 0xc4, 0x21, 0xb9, 0x42, 0x30, 0xcb,
+  0xb4, 0x85, 0x4b, 0x04, 0x8f, 0xe9, 0xdc, 0x01, 0xa0, 0x14, 0xca, 0x4b,
+  0xae, 0x98, 0xad, 0xcb, 0x73, 0x4c, 0x92, 0x0d, 0x1e, 0x22, 0x6e, 0xd1,
+  0x3f, 0x49, 0xa8, 0x96, 0x6b, 0xae, 0xc1, 0x3a, 0x1a, 0x31, 0xc6, 0xb8,
+  0x75, 0x6c, 0xed, 0xb0, 0x5a, 0xf7, 0x0b, 0xd4, 0x30, 0x40, 0x5c, 0x84,
+  0xaf, 0x38, 0x97, 0x5a, 0x22, 0x0f, 0x83, 0xa4, 0x64, 0x1f, 0x91, 0xd6,
+  0xa2, 0x73, 0xf3, 0x6a, 0x9e, 0x93, 0xea, 0x75, 0xbe, 0x68, 0x8d, 0x3f,
+  0x67, 0x5e, 0x88, 0xd5, 0x06, 0xa6, 0x18, 0x54, 0x35, 0x8d, 0xc5, 0x75,
+  0x98, 0x16, 0xac, 0x1c, 0xba, 0x1a, 0xd8, 0x0a, 0x0c, 0x22, 0x19, 0x67,
+  0xf7, 0xe6, 0xff, 0x63, 0xf7, 0x6b, 0x2a, 0x2a, 0x24, 0x0b, 0xc1, 0x41,
+  0xc7, 0x20, 0x25, 0xae, 0xef, 0xd2, 0x08, 0xd6, 0x6c, 0xcc, 0x72, 0x39,
+  0xf2, 0x1b, 0x0b, 0x1a, 0xe1, 0x30, 0x47, 0x34, 0xc9, 0xde, 0x66, 0x3e,
+  0x35, 0x2e, 0xca, 0x77, 0xd9, 0x01, 0x89, 0xca, 0x15, 0x6a, 0x8b, 0x18,
+  0x0a, 0xa7, 0x30, 0x2e, 0x2b, 0x47, 0x39, 0xb4, 0x5a, 0x37, 0x7a, 0x21,
+  0xae, 0x71, 0xfc, 0x6b, 0x97, 0xdd, 0x28, 0xe7, 0x5d, 0xcd, 0x6f, 0x1e,
+  0x67, 0x35, 0xdd, 0x21, 0x99, 0xc6, 0x38, 0xbd, 0x17, 0x6e, 0x90, 0xcf,
+  0x1f, 0x66, 0x3a, 0x3a, 0x88, 0x4f, 0xea, 0x98, 0xe7, 0xaa, 0xb0, 0x3a,
+  0xec, 0x58, 0xf1, 0xf1, 0x87, 0x12, 0xcb, 0xc1, 0x69, 0x31, 0xad, 0xf4,
+  0x0e, 0x33, 0x4b, 0xba, 0x75, 0xe4, 0x03, 0x2f, 0xc9, 0x9f, 0xfb, 0xc9,
+  0x57, 0x69, 0x95, 0x8f, 0x7b, 0x5a, 0xe7, 0x54, 0xeb, 0x9e, 0xe2, 0x0d,
+  0x5f, 0xff, 0x72, 0x53, 0x12, 0x7b, 0xb6, 0x06, 0xc9, 0xf7, 0x56, 0xb8,
+  0x96, 0x94, 0x48, 0x29, 0x2e, 0x97, 0x8f, 0xb9, 0x46, 0x71, 0x03, 0x77,
+  0x49, 0xe9, 0xd3, 0x61, 0x1b, 0xd1, 0xa7, 0xdc, 0x89, 0x2f, 0x66, 0xc4,
+  0xbb, 0x9a, 0x56, 0x37, 0xce, 0x17, 0xc6, 0x7b, 0xa5, 0xac, 0x48, 0x4a,
+  0x21, 0x4a, 0xe6, 0x0a, 0xdb, 0x06, 0x8a, 0xa5, 0x0b, 0x30, 0xe1, 0xbf,
+  0xdd, 0xf1, 0xb5, 0xb2, 0xd3, 0x6c, 0x7f, 0xad, 0x34, 0x32, 0x31, 0xa8,
+  0xf5, 0xc8, 0x94, 0xe9, 0x58, 0x54, 0xbf, 0x4f, 0x0b, 0x86, 0xa5, 0x51,
+  0x06, 0x7a, 0x7a, 0x71, 0xf4, 0x6f, 0xc9, 0x41, 0xdb, 0x7d, 0x8e, 0x9b,
+  0xa9, 0x01, 0xb0, 0xd4, 0xf3, 0x04, 0xc6, 0x63, 0x97, 0x60, 0x44, 0x29,
+  0xef, 0x95, 0xf2, 0xf6, 0xaf, 0x69, 0xea, 0xb3, 0x37, 0x12, 0x57, 0x85,
+  0xc6, 0x56, 0xd7, 0xf7, 0x56, 0x57, 0x00, 0xaf, 0xb1, 0x53, 0xe1, 0xce,
+  0x17, 0x16, 0x96, 0xec, 0xd1, 0x3c, 0x95, 0xd8, 0x76, 0xc0, 0xa9, 0xd1,
+  0xa6, 0xcc, 0x85, 0x81, 0x72, 0x18, 0xb6, 0x44, 0x0b, 0x0a, 0x5e, 0x59,
+  0x5e, 0xb3, 0xaa, 0x25, 0x39, 0x5c, 0x52, 0xde, 0x30, 0xa8, 0x51, 0x9c,
+  0x86, 0xc8, 0x76, 0x1f, 0x70, 0xe4, 0x3e, 0xd8, 0xc5, 0xa2, 0x57, 0xa0,
+  0x8c, 0xe5, 0x52, 0xf4, 0xa0, 0x26, 0xc9, 0xda, 0xb1, 0x93, 0xdb, 0xec,
+  0xcc, 0x02, 0x11, 0x79, 0x23, 0xc6, 0x0c, 0x18, 0x35, 0xbd, 0x17, 0xbf,
+  0x39, 0xdf, 0xa9, 0xc6, 0x35, 0xc3, 0x8b, 0x89, 0x91, 0xe0, 0x18, 0x7a,
+  0x8a, 0xcb, 0xc7, 0x6b, 0xf5, 0x2c, 0x09, 0xfb, 0xa6, 0x56, 0x9b, 0xc1,
+  0xfa, 0x9c, 0xbe, 0xc3, 0xab, 0x8a, 0x51, 0x08, 0xec, 0x62, 0x98, 0x2c,
+  0x40, 0xad, 0x71, 0x47, 0x56, 0x0d, 0xbc, 0x45, 0xd0, 0xc4, 0x0d, 0x8f,
+  0xeb, 0x16, 0x7b, 0x72, 0x75, 0xa9, 0x82, 0x28, 0xd5, 0x37, 0x0e, 0x82,
+  0x4f, 0x9b, 0x45, 0xb1, 0xd4, 0x71, 0x16, 0xe4, 0xe8, 0xcc, 0x8b, 0xb5,
+  0xe0, 0xe6, 0x13, 0xfa, 0x29, 0x2a, 0xe3, 0x89, 0x82, 0xcf, 0x26, 0xa5,
+  0xf5, 0x46, 0x99, 0x54, 0x9c, 0x40, 0x49, 0x24, 0xde, 0x45, 0x06, 0x31,
+  0xc5, 0x09, 0x14, 0xca, 0x9c, 0x31, 0x71, 0xaf, 0x79, 0xea, 0xc6, 0x1d,
+  0xb4, 0x6a, 0x9e, 0x48, 0xd6, 0x05, 0xb9, 0x99, 0xc5, 0x5c, 0x44, 0x27,
+  0xe8, 0x29, 0x73, 0x2d, 0x03, 0xcb, 0xd6, 0x23, 0x1d, 0x35, 0x76, 0x87,
+  0x25, 0xdb, 0xb9, 0x93, 0xb3, 0x6c, 0xd3, 0x1b, 0x38, 0x83, 0xe0, 0x29,
+  0x93, 0x64, 0x76, 0xaf, 0xc9, 0x29, 0x2a, 0x1b, 0x00, 0xe5, 0x81, 0xad,
+  0x12, 0x9f, 0x7f, 0xde, 0x91, 0x05, 0x3f, 0xba, 0xa7, 0xf7, 0xe9, 0xeb,
+  0xc0, 0xfa, 0x31, 0x45, 0xa8, 0x09, 0xac, 0x0d, 0x2c, 0x87, 0x3a, 0x13,
+  0x48, 0x44, 0xc3, 0x08, 0x50, 0xd3, 0xa4, 0x47, 0xe7, 0x99, 0xe9, 0x50,
+  0x59, 0xcf, 0xf3, 0xfd, 0x35, 0x51, 0xaf, 0xb5, 0xcc, 0x6f, 0x25, 0x21,
+  0x4b, 0x2b, 0x14, 0x33, 0x63, 0x93, 0xed, 0xd1, 0x06, 0x52, 0x33, 0x49,
+  0xee, 0x03, 0x5c, 0xaa, 0x50, 0x02, 0x86, 0x85, 0x36, 0x8c, 0x45, 0xd6,
+  0xc1, 0x38, 0xea, 0x68, 0xd1, 0x91, 0xab, 0x51, 0xeb, 0x79, 0xc4, 0xfb,
+  0xd5, 0xc3, 0x79, 0xff, 0x6b, 0x86, 0x73, 0x90, 0x3c, 0x98, 0xa4, 0x21,
+  0xa0, 0x10, 0xcc, 0xf1, 0x2b, 0x4b, 0x4f, 0x2b, 0x98, 0xaa, 0x4d, 0xee,
+  0x91, 0x35, 0xe2, 0x32, 0xd3, 0xa3, 0x66, 0xb5, 0xb9, 0xae, 0x61, 0x62,
+  0x5e, 0xc8, 0xd3, 0xac, 0xd4, 0xa0, 0xfd, 0x9e, 0x0d, 0xe5, 0x53, 0x87,
+  0xab, 0xd5, 0x72, 0x5d, 0x16, 0x56, 0x2b, 0xc1, 0x42, 0x13, 0x9f, 0x76,
+  0x07, 0x3b, 0xa1, 0x7c, 0xe5, 0xd2, 0xa1, 0x4a, 0x86, 0xa0, 0xad, 0x19,
+  0x5c, 0xca, 0x8b, 0x28, 0x4b, 0x2d, 0x2e, 0xbb, 0xdd, 0x7a, 0x4d, 0x3f,
+  0xdb, 0x15, 0x10, 0x2f, 0x3a, 0x49, 0x5a, 0x31, 0x09, 0x18, 0x3a, 0xd9,
+  0x6c, 0xc1, 0x69, 0x23, 0xc6, 0x01, 0x43, 0x21, 0x80, 0xcf, 0xd1, 0x53,
+  0x7f, 0xa4, 0x9e, 0xb9, 0xed, 0xd6, 0x31, 0x4a, 0x56, 0x01, 0x3f, 0x60,
+  0x81, 0xfd, 0x2c, 0x7c, 0x66, 0x99, 0xb4, 0x54, 0xaf, 0x4c, 0x6f, 0x3b,
+  0x6c, 0xa6, 0x9a, 0x82, 0x9e, 0xf9, 0xb2, 0x4d, 0x2e, 0x97, 0x25, 0x33,
+  0x5e, 0x05, 0x61, 0x54, 0x3c, 0x1a, 0xb4, 0x8a, 0x08, 0xdd, 0x08, 0xa7,
+  0xe1, 0x04, 0x6e, 0x3a, 0x2e, 0xcb, 0x05, 0x9f, 0x6b, 0xb1, 0x8f, 0x33,
+  0x76, 0x86, 0x16, 0xfd, 0xf3, 0xde, 0x37, 0x27, 0x9e, 0x51, 0xbb, 0xd3,
+  0x9c, 0x06, 0xb4, 0xc1, 0xc0, 0x2c, 0x56, 0x00, 0x5d, 0x79, 0xa1, 0xc3,
+  0xa7, 0x34, 0x60, 0xf6, 0x66, 0x75, 0xf1, 0x6e, 0x0d, 0xb1, 0x36, 0xd3,
+  0x95, 0x6b, 0xa0, 0x97, 0xf4, 0xff, 0x87, 0xae, 0x0c, 0xc4, 0x73, 0x44,
+  0x8f, 0x71, 0xe5, 0x8e, 0x45, 0x80, 0x68, 0xaa, 0x49, 0x7e, 0xcc, 0xf0,
+  0x11, 0x1a, 0x6a, 0xf3, 0x70, 0x99, 0xb7, 0x96, 0x25, 0xc4, 0xfc, 0xef,
+  0x4d, 0x88, 0x5d, 0xdb, 0x28, 0xfa, 0xae, 0xac, 0x42, 0x9a, 0x5b, 0x73,
+  0xa5, 0x40, 0x24, 0x5a, 0xb0, 0x33, 0x60, 0x77, 0x91, 0x7d, 0x85, 0x5a,
+  0x8d, 0x87, 0x45, 0x1a, 0x2e, 0xab, 0xaf, 0xf5, 0xa6, 0x23, 0x15, 0xe2,
+  0x77, 0xa6, 0x0c, 0xc9, 0x70, 0xed, 0xd3, 0x0b, 0xfd, 0xf7, 0x6a, 0xce,
+  0xf8, 0x52, 0x7a, 0x18, 0xb0, 0xdd, 0x5d, 0x7a, 0x38, 0xe3, 0x72, 0xe5,
+  0xf6, 0xc0, 0xbe, 0xbe, 0x84, 0xb4, 0xd8, 0x75, 0xb5, 0xe4, 0x34, 0x57,
+  0x45, 0x9e, 0xb7, 0xb4, 0x59, 0xd4, 0xba, 0xe6, 0x29, 0xf4, 0xc5, 0xa5,
+  0x83, 0x43, 0x26, 0xbf, 0xca, 0xbb, 0xaa, 0x3c, 0xde, 0xa3, 0x89, 0x81,
+  0xc4, 0xdd, 0xab, 0xed, 0x65, 0x6f, 0x77, 0x5b, 0x06, 0xb3, 0x2d, 0x0d,
+  0x88, 0x5c, 0xa7, 0x24, 0xe9, 0xc3, 0x40, 0x0c, 0x82, 0x28, 0xbc, 0xb9,
+  0x90, 0x25, 0x80, 0xf0, 0x9d, 0x99, 0xc6, 0x1e, 0xb3, 0x7f, 0x0d, 0x57,
+  0x13, 0xdd, 0xb5, 0x0c, 0x68, 0xa4, 0x69, 0x8c, 0x28, 0xa0, 0xe0, 0x36,
+  0xa8, 0xe7, 0x44, 0x3e, 0x22, 0xa5, 0xfe, 0x6d, 0xa8, 0x35, 0x65, 0x8a,
+  0x2f, 0x8a, 0x3a, 0xb6, 0x2e, 0x8b, 0x0e, 0x07, 0x5d, 0x3c, 0xec, 0x44,
+  0xd1, 0xe7, 0x07, 0xef, 0xbe, 0x3e, 0x62, 0x49, 0xc0, 0x01, 0x4e, 0xe6,
+  0xa0, 0xf6, 0xc9, 0x72, 0xcc, 0xaa, 0x10, 0xad, 0x18, 0x47, 0xbf, 0x31,
+  0x12, 0xb3, 0xf0, 0xf3, 0x9c, 0xc1, 0xae, 0x84, 0x78, 0x79, 0xbb, 0x35,
+  0xa6, 0x6d, 0x2d, 0x31, 0x8b, 0x2a, 0x4b, 0x10, 0x50, 0x18, 0x69, 0x86,
+  0x6c, 0x7e, 0xad, 0x96, 0xa3, 0x45, 0xaa, 0x18, 0x35, 0x69, 0x08, 0x62,
+  0xa2, 0x76, 0x96, 0x41, 0xf3, 0x2c, 0xae, 0x59, 0x82, 0x8b, 0xd3, 0xe9,
+  0x4b, 0xd6, 0xe9, 0x07, 0xa1, 0x55, 0x4d, 0x40, 0x36, 0x76, 0x77, 0x76,
+  0x7c, 0xc9, 0x1d, 0x0f, 0xc6, 0xd2, 0xe1, 0x96, 0x65, 0xb2, 0xd3, 0x7f,
+  0xf1, 0x62, 0x15, 0x23, 0x74, 0x8d, 0x32, 0x22, 0xca, 0xb3, 0x4f, 0x6e,
+  0xb3, 0x8f, 0x47, 0x57, 0xb5, 0x19, 0xd1, 0x68, 0xaa, 0x9c, 0xe1, 0x08,
+  0x65, 0x45, 0x9d, 0xd4, 0xa2, 0x16, 0x1e, 0xf1, 0xd6, 0xb0, 0xfb, 0x6c,
+  0xee, 0xd4, 0x1a, 0x2c, 0xe5, 0x9a, 0xc7, 0xca, 0x66, 0xe8, 0x0c, 0x33,
+  0x06, 0x2d, 0x10, 0x52, 0x98, 0x3b, 0x2f, 0xee, 0x27, 0x2d, 0x4c, 0xa0,
+  0xc0, 0xaf, 0x58, 0xa2, 0xcb, 0xee, 0x6c, 0x4c, 0x24, 0x78, 0x7f, 0x06,
+  0xfb, 0xdf, 0xf1, 0xbb, 0xaf, 0xc5, 0x1c, 0x42, 0xba, 0x3d, 0xdb, 0xd2,
+  0xb7, 0x5b, 0x9a, 0xfe, 0x7b, 0xa9, 0x9c, 0x83, 0x80, 0x52, 0x0e, 0xdf,
+  0x90, 0xba, 0xbb, 0xf9, 0x5c, 0x58, 0x81, 0xdf, 0xfd, 0x15, 0xb6, 0xca,
+  0x8b, 0xa4, 0x1f, 0x08, 0x27, 0x5a, 0x38, 0x07, 0x92, 0xc9, 0xec, 0xde,
+  0x34, 0x23, 0xed, 0x81, 0x5b, 0x37, 0xcf, 0x8c, 0x6b, 0x56, 0xf4, 0x5c,
+  0x51, 0xcf, 0x99, 0x82, 0x3a, 0xb2, 0x49, 0xa4, 0x4b, 0xe9, 0x86, 0xcf,
+  0x77, 0x4b, 0x12, 0xf9, 0xb4, 0xa1, 0x34, 0x4c, 0x9d, 0xcd, 0x4a, 0x8f,
+  0x90, 0xac, 0x7a, 0x66, 0xfb, 0x69, 0x9b, 0x21, 0xd9, 0xa8, 0x98, 0x86,
+  0x5c, 0x1d, 0xbb, 0xcd, 0x65, 0x61, 0x8b, 0xe2, 0x1f, 0x1f, 0xe7, 0x03,
+  0x23, 0xc4, 0x41, 0xc5, 0x4d, 0x35, 0x9f, 0x78, 0x9b, 0x86, 0x8e, 0x38,
+  0xea, 0x08, 0xb9, 0x90, 0xf7, 0xa5, 0xeb, 0x34, 0xde, 0x9d, 0xbc, 0x6f,
+  0x4b, 0x13, 0x39, 0x00, 0x10, 0x69, 0xb5, 0xb0, 0x92, 0x4b, 0x3e, 0x35,
+  0x5d, 0x06, 0x52, 0x38, 0x73, 0x8e, 0xbc, 0x29, 0x96, 0xac, 0x25, 0x9a,
+  0xe1, 0xce, 0x65, 0x97, 0x40, 0x43, 0x8c, 0xc3, 0xcf, 0x97, 0xd7, 0x4d,
+  0xae, 0x85, 0x07, 0x19, 0x6d, 0x1a, 0x2c, 0x0d, 0x42, 0x8d, 0xa2, 0x5c,
+  0x79, 0xe0, 0xef, 0x72, 0x39, 0x57, 0xde, 0x07, 0x7d, 0x8b, 0x06, 0x9f,
+  0x56, 0xd7, 0x5c, 0x48, 0xdb, 0x99, 0xa2, 0xba, 0xe2, 0x15, 0x77, 0xaf,
+  0x28, 0xd6, 0x24, 0x4f, 0x89, 0x30, 0xc5, 0xc2, 0x75, 0x63, 0x29, 0x9a,
+  0x2b, 0xb0, 0xb6, 0x06, 0x23, 0xfc, 0x36, 0x4c, 0xf1, 0xc3, 0xee, 0x02,
+  0x9a, 0x2d, 0xfd, 0x41, 0x7b, 0xbc, 0xf7, 0x31, 0x3c, 0x62, 0x99, 0x0f,
+  0xac, 0x27, 0x9f, 0x7a, 0xe2, 0x44, 0x7e, 0x8f, 0xf8, 0x15, 0xf9, 0xd0,
+  0x05, 0x8c, 0x2c, 0x4a, 0xea, 0x4d, 0x6b, 0x5a, 0xa8, 0x0b, 0xb0, 0xd1,
+  0x87, 0x35, 0x33, 0xc6, 0x81, 0x68, 0x6d, 0x17, 0x2b, 0xec, 0x8c, 0xc1,
+  0x2b, 0x58, 0x67, 0xc6, 0xde, 0x43, 0xd0, 0x12, 0x5f, 0x25, 0x6a, 0x2a,
+  0x99, 0x28, 0x90, 0x2d, 0x44, 0xfd, 0x65, 0x5f, 0xb7, 0xe4, 0xcf, 0x71,
+  0x9f, 0x3c, 0x43, 0x19, 0xa0, 0xc0, 0x1d, 0xd4, 0x1c, 0xd7, 0x3e, 0xbc,
+  0x80, 0x19, 0x81, 0xaf, 0x3e, 0xd3, 0x47, 0xbf, 0x3b, 0x3a, 0xff, 0xea,
+  0x74, 0x78, 0x44, 0xfb, 0xf1, 0xfa, 0xe8, 0xab, 0xf7, 0xe0, 0x5a, 0xa0,
+  0x0e, 0x31, 0x3d, 0x33, 0x82, 0xb2, 0xd8, 0xbf, 0x18, 0xf0, 0x0c, 0x01,
+  0x7b, 0x4c, 0xa6, 0x22, 0x07, 0xf5, 0x8c, 0x0a, 0x4d, 0xc4, 0x13, 0x34,
+  0xe2, 0x69, 0x26, 0xb6, 0xca, 0x9c, 0xd3, 0x10, 0x3c, 0x66, 0x3a, 0xa2,
+  0xfd, 0xe6, 0xa8, 0xf7, 0x50, 0x1b, 0x5c, 0x94, 0xa1, 0xbb, 0x56, 0xfb,
+  0xde, 0xa8, 0x79, 0x2b, 0x96, 0x69, 0x3d, 0x7c, 0xd4, 0xec, 0xa8, 0x60,
+  0xa5, 0x9d, 0x0b, 0x57, 0x30, 0xf1, 0x1e, 0x3a, 0x39, 0x5a, 0x01, 0x3b,
+  0xa7, 0x85, 0xdc, 0x9a, 0x5c, 0xd0, 0x1e, 0x6d, 0xf3, 0x3d, 0x9e, 0xd7,
+  0x7c, 0x85, 0x8b, 0x42, 0x21, 0x91, 0x8c, 0x8c, 0x75, 0xc4, 0x9e, 0xcf,
+  0x89, 0x24, 0x9e, 0x4f, 0xf5, 0x3a, 0x60, 0xee, 0x57, 0x65, 0x82, 0x14,
+  0x27, 0xb7, 0xb6, 0xfa, 0xc3, 0x25, 0xd4, 0x57, 0xcb, 0xd0, 0x6c, 0xaa,
+  0x12, 0x7c, 0xc7, 0xf3, 0xd4, 0xb2, 0xac, 0x52, 0x7e, 0xde, 0xaa, 0x23,
+  0xf2, 0xca, 0x07, 0x41, 0x39, 0x4a, 0x3a, 0xb7, 0xab, 0x59, 0xcf, 0x85,
+  0xcc, 0x14, 0x76, 0x0e, 0x11, 0x04, 0x42, 0xe8, 0xea, 0x56, 0x69, 0x76,
+  0x2f, 0xa0, 0xc8, 0xd9, 0x45, 0x46, 0x41, 0xa0, 0x42, 0xae, 0x2e, 0x58,
+  0xdf, 0xc4, 0x16, 0x0b, 0xf2, 0x89, 0x84, 0xb9, 0x6a, 0x20, 0x1e, 0xb6,
+  0x94, 0x5d, 0x02, 0x42, 0x7c, 0xdd, 0xf3, 0x2e, 0xad, 0x4b, 0xad, 0x7a,
+  0x9c, 0xd1, 0xc0, 0x71, 0xb2, 0xb6, 0xb6, 0xf6, 0xfa, 0xe8, 0xe2, 0xe0,
+  0xf8, 0xe4, 0xe8, 0x75, 0x72, 0xfc, 0xee, 0xcd, 0xe9, 0xf9, 0xdb, 0x83,
+  0x0b, 0x0d, 0xc7, 0x78, 0xed, 0x2c, 0x72, 0x1e, 0xce, 0x49, 0xc1, 0xeb,
+  0x03, 0x6b, 0x1d, 0x93, 0x30, 0xed, 0xe2, 0x95, 0xd6, 0x29, 0x90, 0x65,
+  0xc8, 0x1a, 0x6b, 0xb0, 0x96, 0x68, 0x18, 0x87, 0xc7, 0xbf, 0x82, 0x5c,
+  0xb0, 0xed, 0x7c, 0xef, 0x03, 0x5b, 0x4e, 0x33, 0xa3, 0x71, 0xf1, 0xca,
+  0x07, 0x9b, 0x4a, 0x61, 0x03, 0xb9, 0x9a, 0x66, 0x7a, 0x27, 0x32, 0xb8,
+  0x32, 0x03, 0x00, 0x08, 0x22, 0xf2, 0xf1, 0x76, 0x13, 0x9e, 0x99, 0x0d,
+  0x2d, 0x06, 0x87, 0x96, 0x32, 0x20, 0x4a, 0x08, 0xbb, 0x71, 0x59, 0x70,
+  0x54, 0x49, 0xd8, 0xa6, 0x03, 0x94, 0xe0, 0x1d, 0x05, 0x7e, 0x30, 0x47,
+  0xff, 0xf0, 0x27, 0xe1, 0xfe, 0x02, 0xd1, 0x61, 0x0d, 0x05, 0x39, 0x6b,
+  0x45, 0x65, 0x02, 0x82, 0x6a, 0x45, 0x3b, 0xe5, 0xce, 0x3a, 0x63, 0xba,
+  0x3a, 0x86, 0x6d, 0xde, 0x39, 0xad, 0xb5, 0x18, 0x36, 0xb5, 0xe9, 0xfc,
+  0xf5, 0x24, 0x31, 0xf5, 0x8f, 0xb5, 0x0a, 0x27, 0xd6, 0x02, 0x00, 0xf7,
+  0xf8, 0x39, 0x37, 0x4c, 0x45, 0x17, 0x40, 0xea, 0x35, 0xfe, 0x9c, 0xa6,
+  0xac, 0x2e, 0x2a, 0x3d, 0x6d, 0xfe, 0xdc, 0x1a, 0x6a, 0x4b, 0xff, 0x35,
+  0x3d, 0x34, 0x59, 0xce, 0x16, 0x5a, 0x45, 0xda, 0x24, 0x6a, 0xb6, 0xe5,
+  0xd9, 0x16, 0x8a, 0xd0, 0xc6, 0xc2, 0x07, 0x1b, 0x7e, 0xde, 0xe8, 0x1a,
+  0xc8, 0x3c, 0x98, 0xbe, 0x6b, 0x73, 0x05, 0xd6, 0x0c, 0xc4, 0x6b, 0xde,
+  0x3b, 0x2b, 0x0d, 0xe3, 0x62, 0x8e, 0x1a, 0x92, 0x0b, 0x2f, 0xc8, 0xd0,
+  0x3d, 0xcb, 0x2b, 0x19, 0xbc, 0x90, 0xfa, 0x10, 0x25, 0x5e, 0xff, 0x4d,
+  0xab, 0x33, 0x03, 0x92, 0xd5, 0x06, 0xf5, 0xaa, 0xe8, 0x3a, 0x1f, 0x1b,
+  0x93, 0x0a, 0x5f, 0x6c, 0x86, 0xf4, 0x84, 0x9c, 0xde, 0xba, 0xf6, 0x38,
+  0xba, 0xed, 0x11, 0x28, 0x17, 0x27, 0x7e, 0x72, 0x6f, 0xa5, 0xbb, 0x51,
+  0x27, 0x43, 0x80, 0x32, 0xd7, 0xb4, 0xce, 0x51, 0x08, 0x3d, 0x6e, 0xe4,
+  0xbb, 0x64, 0xe8, 0xeb, 0xe2, 0x06, 0xba, 0x3c, 0x27, 0x77, 0x8e, 0xee,
+  0xc3, 0x2c, 0x3c, 0x09, 0x3e, 0xd3, 0x4a, 0x4d, 0xcc, 0xf4, 0xe6, 0x6b,
+  0x56, 0x54, 0xd1, 0x5e, 0xb2, 0x10, 0x46, 0xe6, 0xfe, 0x52, 0x2f, 0x80,
+  0x99, 0x3c, 0x94, 0xea, 0x2c, 0xad, 0x58, 0xa1, 0xe2, 0x5c, 0x1c, 0xb9,
+  0x33, 0x9c, 0x19, 0xd6, 0x57, 0xc4, 0x08, 0x10, 0xb3, 0x98, 0x45, 0x0b,
+  0x72, 0x68, 0x0a, 0x38, 0x0d, 0x57, 0x9a, 0x9c, 0xe3, 0xee, 0x5d, 0x2b,
+  0xe6, 0xe0, 0xa0, 0x66, 0x38, 0x78, 0x5a, 0xa3, 0x49, 0xcf, 0x8a, 0x4a,
+  0xce, 0x1b, 0x4b, 0xf8, 0xeb, 0x60, 0x3d, 0xeb, 0x4c, 0x06, 0xeb, 0x8b,
+  0x6b, 0xea, 0x63, 0x3d, 0xb9, 0x82, 0x8e, 0x34, 0xa2, 0xa1, 0x77, 0x18,
+  0xe8, 0x44, 0x1e, 0x7f, 0x75, 0x9e, 0x5e, 0xa6, 0xd9, 0xf4, 0xf7, 0x7b,
+  0x3b, 0xc3, 0xf4, 0x6a, 0x39, 0x4d, 0xff, 0x9d, 0x5f, 0x7c, 0xf5, 0xe4,
+  0xc9, 0xde, 0xce, 0x67, 0x9f, 0xef, 0xac, 0xb7, 0xa3, 0x0f, 0x34, 0x22,
+  0xcb, 0x22, 0x6c, 0x70, 0x93, 0x31, 0xdf, 0xe5, 0x7e, 0x06, 0xe3, 0xab,
+  0x9c, 0x95, 0x3a, 0x08, 0x4a, 0xba, 0x06, 0xa9, 0x68, 0x93, 0xcc, 0x26,
+  0x05, 0x78, 0x10, 0xb8, 0xbc, 0x44, 0xd7, 0xbf, 0xdb, 0xdd, 0x17, 0x56,
+  0xc6, 0x30, 0xd1, 0x7c, 0x4f, 0x60, 0x2d, 0x5e, 0xe6, 0x73, 0xba, 0x81,
+  0xbe, 0x48, 0xea, 0xf4, 0xca, 0xd1, 0xaa, 0xe6, 0xd3, 0x4b, 0x16, 0x85,
+  0xf3, 0x6f, 0x5e, 0x82, 0xc8, 0xf3, 0xb9, 0x14, 0xb3, 0x41, 0xa1, 0x16,
+  0x16, 0xb2, 0x16, 0x59, 0xc9, 0x18, 0x82, 0x57, 0x65, 0x3a, 0xb3, 0x5c,
+  0x15, 0xbc, 0x8f, 0xb0, 0xb5, 0xc1, 0x62, 0xca, 0x79, 0x14, 0x16, 0x7b,
+  0x26, 0x12, 0xaf, 0x10, 0xdc, 0x74, 0x51, 0x79, 0x18, 0x3e, 0xb9, 0x6e,
+  0xc2, 0x12, 0x30, 0xb4, 0x58, 0x6c, 0x53, 0x59, 0xe7, 0x59, 0x09, 0xcb,
+  0x60, 0x6e, 0x36, 0xb1, 0x99, 0x0e, 0xf8, 0x77, 0xc6, 0x7f, 0x48, 0x05,
+  0x73, 0x71, 0x7d, 0x21, 0x99, 0xd5, 0x82, 0xd2, 0xb1, 0x6e, 0x89, 0x0d,
+  0x79, 0x63, 0x5e, 0xa9, 0x8f, 0xd9, 0x4c, 0x5e, 0x9a, 0x95, 0x68, 0xf7,
+  0x8b, 0x57, 0x4c, 0x10, 0xbb, 0x5f, 0xfc, 0xbb, 0xfb, 0x6c, 0x4f, 0x3f,
+  0xdb, 0xfb, 0xe2, 0xdf, 0x07, 0x03, 0x1e, 0x1f, 0x28, 0x64, 0xc3, 0xbe,
+  0xde, 0x50, 0xbc, 0x95, 0x54, 0x8f, 0xb0, 0xfc, 0xe5, 0xe0, 0x8f, 0x65,
+  0xaf, 0xd7, 0xad, 0xe7, 0x70, 0x95, 0x7b, 0xea, 0x51, 0x75, 0x7c, 0x2b,
+  0xb7, 0x02, 0x6f, 0x0c, 0x6b, 0x5d, 0xc5, 0x16, 0xdd, 0xf9, 0x41, 0xb8,
+  0x1d, 0x8d, 0xbe, 0xe4, 0x97, 0xff, 0x00, 0x4a, 0xfd, 0xc3, 0x5a, 0xa2,
+  0xde, 0x4d, 0x6c, 0xc7, 0x3d, 0x3b, 0x3c, 0x8c, 0x6c, 0xe9, 0xd1, 0xd4,
+  0x2a, 0xce, 0xa0, 0x65, 0x64, 0x7f, 0xe0, 0x0e, 0x94, 0xa0, 0x71, 0x1e,
+  0xec, 0x1f, 0x15, 0xfe, 0xd2, 0xa5, 0xcd, 0xd8, 0x33, 0x92, 0x29, 0x43,
+  0x32, 0x46, 0x2d, 0x35, 0x8f, 0x50, 0x01, 0xe5, 0x87, 0x1f, 0x54, 0xa0,
+  0xa2, 0x5f, 0x74, 0xe4, 0xd7, 0xc4, 0x8b, 0x26, 0xc4, 0xde, 0x66, 0x5c,
+  0xa7, 0x1e, 0x48, 0x83, 0x34, 0x0f, 0xbd, 0xf2, 0x2f, 0x75, 0xa6, 0xd2,
+  0x08, 0x6d, 0xed, 0xc1, 0xf0, 0xf0, 0xf8, 0x98, 0x03, 0x4d, 0x79, 0x51,
+  0x8f, 0x84, 0x8d, 0x31, 0x6d, 0x6e, 0x72, 0x88, 0x87, 0x0f, 0x4b, 0x0c,
+  0x49, 0x1f, 0x7b, 0xc7, 0xdb, 0xce, 0xd4, 0x4f, 0x8d, 0x99, 0x02, 0xae,
+  0x5b, 0xc9, 0x34, 0x2b, 0x52, 0xce, 0xab, 0x75, 0x79, 0xf0, 0x2a, 0x5f,
+  0x57, 0x27, 0x96, 0x7c, 0xb2, 0xee, 0xe1, 0x73, 0x64, 0x3f, 0x78, 0xd3,
+  0x5e, 0x89, 0xe8, 0x94, 0xff, 0x2d, 0x7b, 0xb5, 0xbb, 0x13, 0x7f, 0x82,
+  0xbd, 0xb6, 0x00, 0x14, 0x7f, 0xe5, 0x1d, 0x82, 0x0f, 0x3d, 0x9f, 0x4f,
+  0xe4, 0xe9, 0xeb, 0x7c, 0x32, 0xa1, 0x3b, 0xe1, 0x36, 0x9d, 0x2e, 0x89,
+  0x16, 0x46, 0xb8, 0x61, 0xf1, 0xff, 0x2b, 0xc6, 0xc1, 0x1e, 0x2b, 0x7d,
+  0xb6, 0x5a, 0x8e, 0x66, 0x79, 0x63, 0xc0, 0xdb, 0x98, 0xe0, 0x17, 0x98,
+  0xf0, 0xf7, 0x99, 0xa3, 0x8e, 0x0c, 0xa2, 0x9d, 0xc8, 0x7e, 0x1b, 0x97,
+  0x45, 0x31, 0x4a, 0xcb, 0x0d, 0x75, 0xe7, 0xd8, 0x38, 0x37, 0x76, 0xf7,
+  0x9e, 0x3c, 0x7d, 0xb6, 0x31, 0x50, 0x39, 0x8d, 0x59, 0x44, 0x1d, 0x42,
+  0x54, 0x48, 0x13, 0x0e, 0x52, 0x21, 0x40, 0x73, 0x8d, 0x39, 0x57, 0xc1,
+  0xc5, 0xd0, 0xdd, 0x2b, 0xe9, 0xed, 0xdf, 0xd1, 0xcf, 0x2b, 0xee, 0xe2,
+  0xdf, 0xf3, 0xc9, 0x2b, 0x37, 0xc3, 0x7f, 0xc7, 0x5c, 0x5e, 0xe9, 0x24,
+  0x68, 0x5f, 0x2d, 0x07, 0xb1, 0x0a, 0xab, 0xd3, 0x3c, 0xb6, 0xb9, 0xb6,
+  0x89, 0x6b, 0x3c, 0x69, 0x8e, 0x60, 0xe8, 0x4f, 0xc4, 0xfb, 0xc1, 0xd2,
+  0xaa, 0xcf, 0xc1, 0xdb, 0xfe, 0xd8, 0xa7, 0x56, 0xfa, 0x68, 0xa5, 0xef,
+  0x19, 0x36, 0xe3, 0xc0, 0xf7, 0xb1, 0x11, 0x3d, 0x4d, 0xc4, 0x9c, 0xb2,
+  0x95, 0x45, 0x45, 0x81, 0xa2, 0xe0, 0x20, 0x80, 0xc3, 0xaf, 0x8f, 0x37,
+  0xaa, 0xb0, 0x28, 0x43, 0x2f, 0x66, 0x9f, 0x76, 0x21, 0x86, 0xe3, 0x74,
+  0x81, 0xd3, 0xbf, 0x66, 0x05, 0x15, 0x53, 0xc4, 0x91, 0xa0, 0x5f, 0xc9,
+  0x99, 0xa6, 0xce, 0xf4, 0xd6, 0x99, 0xc2, 0xe2, 0x5d, 0x0a, 0x44, 0x7d,
+  0xd0, 0x0c, 0x63, 0x36, 0x4b, 0x40, 0x09, 0xfb, 0x7c, 0x16, 0x2e, 0xe1,
+  0xb2, 0xff, 0xc6, 0x39, 0x3d, 0x5d, 0x82, 0x9f, 0x3e, 0x4a, 0x5f, 0x09,
+  0x3f, 0x31, 0x16, 0xb1, 0xce, 0x0a, 0xb0, 0xe7, 0x13, 0x21, 0xf7, 0xe0,
+  0xc4, 0xff, 0x51, 0xa6, 0x69, 0x9a, 0x62, 0x36, 0x11, 0xc1, 0x10, 0xfc,
+  0xf3, 0xe5, 0x97, 0x86, 0xf3, 0xfc, 0x45, 0xc2, 0x75, 0x51, 0xe5, 0x2d,
+  0xf5, 0x3b, 0xaa, 0x01, 0x4a, 0x6c, 0xb6, 0xfc, 0x92, 0xaa, 0x07, 0xce,
+  0x05, 0x16, 0x44, 0xe3, 0xa8, 0x60, 0xa0, 0x60, 0xfc, 0x3c, 0xd1, 0xd1,
+  0xbd, 0x1a, 0x1b, 0xd0, 0xc2, 0xc6, 0x9f, 0xf8, 0x10, 0xbc, 0xc4, 0x36,
+  0xf0, 0xd7, 0x5f, 0x6c, 0xac, 0xb9, 0xfa, 0x18, 0x4e, 0x72, 0x6f, 0x39,
+  0x90, 0x85, 0x40, 0xc3, 0xf9, 0x90, 0x40, 0x6d, 0xa0, 0xc6, 0x22, 0x8d,
+  0x01, 0xa2, 0x83, 0x8b, 0x87, 0x93, 0x34, 0x35, 0x9d, 0x28, 0xa4, 0xa7,
+  0x33, 0x50, 0x4b, 0xe3, 0x19, 0xb2, 0x1b, 0x20, 0x3d, 0x6e, 0x20, 0x5a,
+  0x95, 0xdf, 0xdb, 0x70, 0x18, 0xc9, 0x6c, 0x33, 0x65, 0x86, 0x57, 0x66,
+  0x86, 0x34, 0xb9, 0xa6, 0x90, 0xe6, 0x5e, 0x9a, 0x0f, 0x27, 0x56, 0x05,
+  0xc2, 0x83, 0x4f, 0x73, 0x14, 0x34, 0x9b, 0xce, 0x11, 0x79, 0x83, 0x1c,
+  0x62, 0xed, 0xf4, 0x15, 0x96, 0x7b, 0x77, 0x70, 0x95, 0x5f, 0xca, 0x62,
+  0x10, 0x8b, 0xbc, 0xca, 0xb6, 0xe9, 0xcf, 0x1e, 0x7d, 0xbe, 0x07, 0xa9,
+  0x0c, 0xbf, 0x3c, 0xe1, 0x78, 0xac, 0xf0, 0xee, 0x0f, 0xce, 0x86, 0x3b,
+  0x17, 0xf8, 0x25, 0x77, 0x77, 0xbe, 0x7a, 0x75, 0x74, 0x94, 0x4c, 0xe6,
+  0x9d, 0x1a, 0x70, 0x61, 0x50, 0x09, 0x14, 0x2d, 0xa8, 0xa4, 0x4b, 0x64,
+  0xb5, 0xb8, 0xe0, 0x11, 0x0d, 0xa4, 0x50, 0x41, 0x1d, 0x72, 0x77, 0xae,
+  0xe6, 0x19, 0x64, 0x01, 0xf1, 0xcd, 0x9a, 0xdd, 0x6d, 0xf5, 0xc2, 0x48,
+  0x5b, 0x62, 0xef, 0xb7, 0xc8, 0xab, 0x07, 0x58, 0x87, 0xaf, 0x71, 0x85,
+  0xee, 0x37, 0xd1, 0x2c, 0x84, 0x02, 0x9f, 0x68, 0xcc, 0xdb, 0x9c, 0xb7,
+  0x77, 0x30, 0x28, 0x25, 0x6b, 0xd2, 0x26, 0x3c, 0x68, 0x5b, 0xe8, 0x26,
+  0x9b, 0x56, 0xac, 0xab, 0x2b, 0x54, 0xa3, 0xf5, 0x6a, 0x70, 0xda, 0xdc,
+  0xd1, 0x46, 0x78, 0xf6, 0x8b, 0x71, 0x9d, 0x91, 0xae, 0x0b, 0x5c, 0xad,
+  0x99, 0xf0, 0xb9, 0xa3, 0x99, 0x94, 0xd4, 0x64, 0x12, 0x9e, 0xf6, 0xe5,
+  0xf6, 0x54, 0x91, 0xa8, 0xff, 0x66, 0x90, 0x9c, 0x70, 0xc4, 0x78, 0x95,
+  0x0a, 0x3e, 0x8b, 0xdd, 0xb0, 0x46, 0x0d, 0x44, 0x3a, 0x22, 0x83, 0xaf,
+  0x49, 0xe2, 0x0b, 0x40, 0x31, 0x8c, 0xa4, 0x72, 0x03, 0x4a, 0x17, 0xe2,
+  0x12, 0xf9, 0x42, 0xe5, 0x91, 0x1e, 0xdb, 0xc2, 0xdd, 0x73, 0x6c, 0xf3,
+  0x17, 0xbb, 0x1f, 0xa7, 0x7f, 0x39, 0x82, 0x0d, 0x1a, 0x09, 0xc1, 0xb0,
+  0x43, 0xb6, 0xee, 0x0e, 0x81, 0x84, 0x54, 0x66, 0x62, 0x74, 0x01, 0x36,
+  0x03, 0x60, 0x62, 0xd8, 0x27, 0x4c, 0xad, 0x31, 0x95, 0x31, 0x02, 0x36,
+  0x91, 0xd1, 0x3a, 0xeb, 0x8d, 0xd3, 0xcc, 0x29, 0xd7, 0xb2, 0x57, 0x85,
+  0x0b, 0x37, 0x67, 0x5b, 0x8c, 0x88, 0x1b, 0xde, 0x5d, 0x87, 0x41, 0x62,
+  0x5c, 0xe9, 0x2d, 0xfd, 0x02, 0xe1, 0x6c, 0x54, 0xd2, 0xae, 0x67, 0xa5,
+  0x5c, 0x0d, 0x12, 0x23, 0x54, 0x08, 0x27, 0x11, 0x35, 0xe5, 0xed, 0x49,
+  0x62, 0x38, 0x37, 0x97, 0x5e, 0x54, 0xb4, 0xc8, 0x4c, 0x9e, 0xa2, 0x5a,
+  0x46, 0x44, 0x1e, 0xd2, 0xa7, 0xe4, 0x96, 0x93, 0xb5, 0x45, 0xae, 0x7c,
+  0x82, 0xc5, 0x69, 0x1c, 0xd9, 0xe0, 0x09, 0x79, 0x15, 0x74, 0x44, 0x64,
+  0xb2, 0x81, 0x25, 0xd8, 0xe8, 0x25, 0x1b, 0x18, 0x2a, 0xbe, 0xd8, 0xe0,
+  0xf5, 0xe4, 0x8f, 0x83, 0xe5, 0xdb, 0x18, 0x44, 0x4e, 0x21, 0x9e, 0x79,
+  0xf5, 0x65, 0x63, 0x95, 0xf8, 0x73, 0x6b, 0xea, 0x95, 0xa4, 0x99, 0x74,
+  0x64, 0x6e, 0x7b, 0x37, 0x68, 0xff, 0xd5, 0x61, 0x01, 0x8c, 0x42, 0x6a,
+  0x26, 0x08, 0x73, 0x1d, 0xbb, 0xcf, 0x72, 0x4e, 0x99, 0xed, 0x34, 0xf4,
+  0xf8, 0x29, 0xbe, 0x30, 0x56, 0xe4, 0x42, 0x40, 0x85, 0xbb, 0x09, 0x09,
+  0x18, 0xe7, 0xa5, 0xdd, 0xcc, 0x45, 0xef, 0xbb, 0x2b, 0xd8, 0xca, 0xc0,
+  0x3c, 0x67, 0x77, 0xc0, 0x39, 0x94, 0xbe, 0xb2, 0xaf, 0x6b, 0xc0, 0x29,
+  0xef, 0xeb, 0xbc, 0xa0, 0xeb, 0x2e, 0x2a, 0xd7, 0x54, 0x7a, 0x5b, 0xe5,
+  0x18, 0xef, 0x5a, 0xe4, 0x63, 0x06, 0xd5, 0x7e, 0xf5, 0xe5, 0xa4, 0xb8,
+  0x02, 0xe7, 0xea, 0xd1, 0x41, 0xc3, 0x4f, 0x0e, 0x48, 0xde, 0xd3, 0x4e,
+  0x65, 0xc0, 0x7c, 0x56, 0x44, 0x8a, 0xb7, 0xbf, 0x57, 0x84, 0xa8, 0xbe,
+  0x81, 0x29, 0x74, 0xac, 0x6d, 0xbb, 0xa6, 0x65, 0x3f, 0xa8, 0x7d, 0xf7,
+  0x45, 0xd8, 0x97, 0x2d, 0x4e, 0xaa, 0x2d, 0xb3, 0x6c, 0x44, 0x9c, 0xa2,
+  0x96, 0xab, 0x9c, 0x3b, 0x2e, 0x38, 0xd0, 0xad, 0x46, 0x2a, 0x74, 0x26,
+  0xc5, 0x21, 0xe9, 0x10, 0x48, 0x62, 0xdf, 0xc6, 0x97, 0x1b, 0x92, 0x23,
+  0xb0, 0xf1, 0x72, 0x83, 0x39, 0x18, 0xf8, 0x92, 0x55, 0xc1, 0xd3, 0xcb,
+  0x69, 0x43, 0x6e, 0xc5, 0xbe, 0xc8, 0x0e, 0x8a, 0xf9, 0xe7, 0x0f, 0x08,
+  0x5f, 0xcb, 0x5e, 0x8d, 0x0c, 0x83, 0x27, 0xd9, 0x4c, 0x00, 0xca, 0x95,
+  0x51, 0x01, 0xc0, 0x74, 0x54, 0x4b, 0xa0, 0x8c, 0x5e, 0xba, 0x2c, 0x96,
+  0x31, 0x5e, 0x4a, 0x85, 0xf8, 0x05, 0x31, 0x73, 0x2e, 0xe7, 0x0b, 0x64,
+  0xc7, 0x8f, 0x6b, 0xa9, 0x68, 0xc9, 0x67, 0x69, 0x90, 0xbc, 0x9f, 0x4b,
+  0x31, 0x81, 0x0c, 0xca, 0x72, 0x5e, 0x8e, 0x97, 0x33, 0x98, 0x2a, 0xc6,
+  0x30, 0x90, 0xf1, 0xc5, 0x23, 0xe2, 0x41, 0xc3, 0x3d, 0x1f, 0x0e, 0x58,
+  0x8c, 0x23, 0x62, 0x30, 0xd7, 0x7e, 0x39, 0x14, 0x05, 0x01, 0x58, 0x6a,
+  0x10, 0x67, 0xa9, 0xc0, 0xe1, 0xa6, 0x28, 0x03, 0x82, 0x67, 0xf0, 0xe8,
+  0xcd, 0xd1, 0xf9, 0xf9, 0xd1, 0x39, 0xd6, 0xfb, 0x60, 0xde, 0x28, 0x1c,
+  0xe7, 0xc0, 0x53, 0xbd, 0xab, 0xd1, 0xc2, 0x7e, 0xbb, 0x20, 0xfa, 0xc2,
+  0x0a, 0xd3, 0xc9, 0x04, 0x30, 0xe3, 0xac, 0x41, 0x08, 0x52, 0x90, 0x94,
+  0xeb, 0x0e, 0xcd, 0x8b, 0x1c, 0xf6, 0xed, 0xdc, 0x06, 0x61, 0xd9, 0xc6,
+  0x40, 0xb6, 0xf0, 0x2d, 0x94, 0x5a, 0x97, 0x74, 0x69, 0x49, 0xf9, 0xd7,
+  0x59, 0x43, 0x4c, 0x1d, 0x68, 0xa4, 0x6e, 0xa6, 0xce, 0xf4, 0xa9, 0xb3,
+  0x4f, 0xf0, 0x94, 0x2f, 0x71, 0x46, 0xa1, 0x3b, 0xf1, 0x62, 0x54, 0xf5,
+  0x72, 0x91, 0x4f, 0x9c, 0xb5, 0x97, 0x3e, 0x27, 0xf1, 0x2f, 0x91, 0x53,
+  0x5e, 0x59, 0xac, 0x0b, 0x7b, 0x35, 0xcd, 0x18, 0x11, 0x5a, 0xdb, 0x5a,
+  0x08, 0xbe, 0x09, 0xe7, 0xcb, 0x49, 0xd0, 0x98, 0x55, 0x4d, 0x6a, 0x66,
+  0x97, 0x2b, 0xed, 0x67, 0x6c, 0x65, 0x04, 0xb7, 0xb0, 0xf0, 0x9b, 0x90,
+  0x33, 0xc0, 0x96, 0x35, 0xf3, 0xf1, 0xee, 0x08, 0x61, 0xdb, 0x17, 0x20,
+  0x14, 0x4e, 0x2a, 0x2d, 0xf7, 0x93, 0x1f, 0xab, 0x7c, 0xfc, 0xb3, 0xbf,
+  0x3c, 0x38, 0xfd, 0xc7, 0x87, 0xa4, 0x8b, 0x85, 0x9e, 0x26, 0xaf, 0x0b,
+  0xa5, 0xca, 0xb0, 0x24, 0x73, 0xbf, 0x1f, 0x1e, 0x9d, 0x27, 0x07, 0x5f,
+  0x03, 0x07, 0xf8, 0x1f, 0xdc, 0x60, 0x3c, 0xa7, 0xb7, 0xc3, 0x9a, 0x22,
+  0xf1, 0x29, 0xba, 0x49, 0x66, 0xa6, 0x70, 0x41, 0xe6, 0x6a, 0xec, 0x6c,
+  0x6e, 0xf5, 0xb7, 0xfd, 0x75, 0xdf, 0xdc, 0xc3, 0xb5, 0xe4, 0xd1, 0x5d,
+  0xfc, 0x94, 0x3d, 0xc4, 0x21, 0x0b, 0x77, 0x51, 0x70, 0x91, 0xc4, 0x25,
+  0x61, 0x7b, 0xa3, 0xa3, 0xaf, 0x3a, 0x6a, 0xa7, 0xec, 0xd2, 0x41, 0xb2,
+  0xf1, 0xb6, 0xf8, 0x1b, 0x09, 0x03, 0xe9, 0xf6, 0x93, 0xc1, 0x4e, 0xb2,
+  0xf9, 0x7d, 0x3e, 0x7f, 0xf1, 0xec, 0x4f, 0xc9, 0xf1, 0xd6, 0x46, 0x23,
+  0x98, 0x5f, 0x6a, 0xb0, 0x8e, 0xd2, 0xf9, 0x8d, 0xdb, 0xb2, 0x53, 0x3e,
+  0xd9, 0x12, 0x54, 0x67, 0x75, 0x59, 0xa4, 0x6e, 0xf4, 0xca, 0x16, 0x39,
+  0xf5, 0x53, 0xf3, 0x02, 0x92, 0xef, 0x1c, 0xe8, 0x35, 0xb4, 0x7c, 0x7a,
+  0x6a, 0x82, 0xa5, 0x7b, 0xf1, 0xac, 0xd3, 0xc4, 0x53, 0xd7, 0xc6, 0x7b,
+  0x69, 0xe3, 0x17, 0x36, 0xb1, 0x37, 0xd8, 0xd9, 0x4b, 0x36, 0x4f, 0x87,
+  0xdb, 0x7b, 0xae, 0x85, 0x6e, 0x13, 0x7b, 0xdc, 0x04, 0x1e, 0x6a, 0xbe,
+  0xfc, 0x14, 0xfd, 0xff, 0x98, 0xcd, 0x7f, 0x4e, 0x36, 0x7f, 0xd8, 0xdd,
+  0xa5, 0x06, 0xfe, 0x94, 0x1c, 0x1c, 0xff, 0x90, 0x3c, 0x1d, 0x50, 0x63,
+  0xef, 0xd2, 0x5b, 0x6d, 0x4e, 0xe1, 0x6c, 0x87, 0xdc, 0x08, 0x7d, 0xdf,
+  0x69, 0xe3, 0x59, 0xab, 0x8d, 0x13, 0xd2, 0x0b, 0x3f, 0xd2, 0xb5, 0xb2,
+  0x33, 0x78, 0xb2, 0x97, 0xe4, 0xcf, 0x3e, 0x7f, 0x6e, 0x0d, 0x69, 0x1b,
+  0xfc, 0x7d, 0xd3, 0x5a, 0x29, 0x80, 0x29, 0x24, 0xea, 0x1c, 0x7d, 0x24,
+  0x86, 0xc6, 0x2c, 0x82, 0x6b, 0x65, 0x5c, 0xa7, 0xa5, 0x55, 0x31, 0x46,
+  0xc1, 0x03, 0xda, 0x29, 0x05, 0x92, 0xce, 0xd8, 0x6c, 0x49, 0x17, 0xe7,
+  0x7e, 0x67, 0x38, 0xd0, 0x4d, 0xed, 0xd1, 0x3f, 0x25, 0x6f, 0x87, 0xc7,
+  0x47, 0x34, 0xa3, 0x1d, 0x1a, 0x9a, 0x5f, 0x43, 0x19, 0x10, 0x7f, 0xc5,
+  0x8b, 0xfb, 0x82, 0x71, 0x49, 0xb5, 0x8d, 0xb0, 0xde, 0x2e, 0x13, 0x1d,
+  0x5d, 0xdc, 0x15, 0xf7, 0x8b, 0x90, 0x94, 0xfe, 0xc1, 0x15, 0x54, 0x08,
+  0xb9, 0x6a, 0xb9, 0xeb, 0x6f, 0x8b, 0x39, 0x1d, 0x93, 0xb2, 0x28, 0x11,
+  0x39, 0xb5, 0xd1, 0x90, 0x16, 0xbe, 0x7d, 0x7d, 0x24, 0x49, 0xf5, 0x6f,
+  0xd3, 0x39, 0xf1, 0x48, 0xe0, 0x63, 0x55, 0x37, 0xf0, 0xff, 0x8b, 0x3b,
+  0x47, 0xde, 0x3f, 0xb9, 0x9f, 0x7f, 0xa4, 0x7d, 0xfc, 0x6c, 0xb0, 0x8b,
+  0x90, 0x6d, 0x68, 0xbd, 0x6f, 0xde, 0xd2, 0xdf, 0xbb, 0x4f, 0x37, 0x12,
+  0x7c, 0xd5, 0xd4, 0xe0, 0xed, 0xbc, 0xae, 0x1d, 0x9e, 0x9e, 0x7e, 0x7b,
+  0x2c, 0x01, 0x20, 0x87, 0x6a, 0x56, 0x85, 0x70, 0xe5, 0xb4, 0x62, 0xe1,
+  0xae, 0xa4, 0xbd, 0xf9, 0x6c, 0x25, 0x76, 0xc6, 0xdd, 0x64, 0xd9, 0x02,
+  0xd1, 0x08, 0x75, 0x8b, 0x23, 0xd4, 0xca, 0xa3, 0x5d, 0x6c, 0x13, 0xc4,
+  0x9f, 0x06, 0xb6, 0x57, 0x05, 0xb0, 0x64, 0x33, 0xe1, 0x8e, 0xee, 0x1d,
+  0x70, 0x47, 0xea, 0x0b, 0x22, 0x6a, 0xe5, 0x14, 0x6d, 0xca, 0x4c, 0xd0,
+  0x52, 0x76, 0x84, 0x5e, 0x54, 0xdd, 0x77, 0x63, 0x48, 0xd2, 0xbd, 0x0c,
+  0x7a, 0x5f, 0xad, 0xb6, 0x1b, 0x01, 0xba, 0x34, 0x4b, 0xb4, 0x0b, 0x2d,
+  0xf6, 0xc3, 0xa6, 0x63, 0x8b, 0xa8, 0x37, 0xde, 0x5c, 0xb1, 0x2d, 0x9b,
+  0xc3, 0xf3, 0xde, 0x1d, 0xbc, 0x3d, 0x7a, 0xf5, 0xdd, 0xc1, 0xc9, 0xfb,
+  0x23, 0x7a, 0x25, 0x67, 0x20, 0x77, 0x17, 0xc2, 0xc7, 0x63, 0x9c, 0xe5,
+  0x5c, 0xeb, 0xb7, 0x22, 0xf1, 0x60, 0x63, 0x4d, 0xc2, 0xcb, 0x93, 0x75,
+  0xbc, 0xb5, 0x2b, 0xaf, 0x11, 0x5d, 0xe0, 0xaf, 0x3d, 0xf9, 0x6b, 0xef,
+  0x4f, 0xeb, 0x5b, 0x8d, 0x49, 0x77, 0xb4, 0x64, 0xd0, 0xcb, 0x9d, 0x54,
+  0x7c, 0x42, 0x78, 0x90, 0xe4, 0x6e, 0xc8, 0xaa, 0xac, 0x9b, 0x8f, 0x26,
+  0x2c, 0x7b, 0xb9, 0x39, 0xba, 0x0f, 0x75, 0xf0, 0x75, 0xbc, 0xf4, 0x8a,
+  0x05, 0x8c, 0x75, 0x86, 0xba, 0xcf, 0x6c, 0xb5, 0xa4, 0x0d, 0x6b, 0x22,
+  0xfb, 0xb8, 0x40, 0x44, 0xe4, 0xe6, 0xba, 0xfc, 0xf2, 0xea, 0xf5, 0xc1,
+  0xc5, 0x11, 0x5e, 0xb0, 0xee, 0xad, 0xba, 0x81, 0xa5, 0x51, 0x60, 0x3c,
+  0x9b, 0xea, 0x9a, 0x7e, 0x85, 0x09, 0xad, 0x6f, 0x89, 0x2f, 0x83, 0x9d,
+  0xea, 0xad, 0x71, 0x81, 0xa7, 0x49, 0xe0, 0xb6, 0x4f, 0x54, 0xaf, 0x2c,
+  0x62, 0x65, 0x73, 0x5d, 0xbe, 0x5b, 0x77, 0x16, 0x5c, 0xba, 0xcb, 0x37,
+  0x6e, 0x33, 0x73, 0x57, 0x4e, 0x38, 0xc9, 0xa2, 0x93, 0x59, 0x2b, 0x21,
+  0x69, 0x7e, 0x7f, 0xd4, 0x59, 0x21, 0x16, 0xa7, 0x00, 0x6f, 0xdb, 0x6d,
+  0xbc, 0x66, 0xc2, 0xc3, 0xc6, 0x54, 0x14, 0xbb, 0x7b, 0x4f, 0xfe, 0xc4,
+  0xeb, 0xf9, 0x6a, 0x7d, 0x9b, 0xee, 0x86, 0xf5, 0x3f, 0xa1, 0xeb, 0xdc,
+  0x57, 0xd5, 0x76, 0xfb, 0x01, 0x7d, 0x4a, 0x29, 0x4a, 0xc2, 0x65, 0xb0,
+  0xeb, 0x01, 0xc0, 0x0f, 0x2f, 0xe8, 0x9d, 0x64, 0x89, 0x19, 0x1c, 0x8e,
+  0x05, 0x0f, 0xf0, 0x7e, 0x8d, 0xb2, 0xab, 0x7c, 0xce, 0xc5, 0xfe, 0xc4,
+  0xa8, 0xcb, 0xdd, 0x85, 0xf7, 0x47, 0x4f, 0xde, 0x95, 0x39, 0x2a, 0x84,
+  0x10, 0xfa, 0x9c, 0xdd, 0x5b, 0x22, 0x59, 0x55, 0x99, 0x8a, 0x2b, 0x7b,
+  0xd6, 0x91, 0x8c, 0x47, 0x6a, 0xdb, 0x31, 0x65, 0x84, 0x65, 0x02, 0x62,
+  0x2d, 0xf7, 0x2c, 0x28, 0x71, 0xb4, 0x41, 0x18, 0x64, 0x61, 0x77, 0x76,
+  0x3a, 0x42, 0x96, 0xb9, 0x4b, 0x8d, 0x09, 0xb4, 0x72, 0xb7, 0xf4, 0x76,
+  0xfc, 0xf2, 0x00, 0x9b, 0x09, 0x17, 0xa5, 0xac, 0x65, 0xe5, 0x6c, 0x48,
+  0xec, 0x6d, 0xd4, 0x67, 0x9b, 0xfb, 0xd4, 0xca, 0x47, 0xe3, 0x69, 0x88,
+  0x4a, 0x2f, 0xfa, 0x31, 0xb1, 0x9a, 0x79, 0x56, 0x3e, 0x18, 0x60, 0x11,
+  0x71, 0x46, 0xf1, 0x14, 0x83, 0x48, 0x07, 0xbc, 0x33, 0x18, 0x0c, 0x7c,
+  0x65, 0x72, 0x6c, 0x8b, 0xfa, 0xa0, 0xb8, 0x9a, 0x51, 0x80, 0x20, 0xcb,
+  0x6b, 0xbc, 0xc9, 0xc2, 0x3c, 0x0b, 0xd4, 0x5b, 0x1a, 0x78, 0xa3, 0x76,
+  0x02, 0x77, 0x34, 0x02, 0x1b, 0xc7, 0x86, 0x76, 0xbb, 0x61, 0xb0, 0x0d,
+  0x37, 0xb1, 0x4d, 0x78, 0x60, 0x6c, 0x62, 0x7b, 0xd4, 0x12, 0x9b, 0x8e,
+  0x4f, 0x15, 0x6e, 0x2d, 0x40, 0xc1, 0x08, 0x20, 0x67, 0x3a, 0x91, 0x8c,
+  0x63, 0x59, 0x34, 0x1d, 0x8a, 0x16, 0x5b, 0x03, 0x93, 0x2b, 0xee, 0x18,
+  0x06, 0x41, 0xca, 0xd5, 0x2c, 0x4a, 0x68, 0x7a, 0x58, 0x63, 0xbb, 0x41,
+  0x16, 0x4e, 0x6c, 0xd6, 0x76, 0x14, 0x4d, 0x18, 0x3a, 0x33, 0xcb, 0xfe,
+  0x9a, 0xe5, 0xa8, 0x80, 0x34, 0x95, 0x25, 0xf1, 0x90, 0xd8, 0x56, 0xcc,
+  0xd8, 0xed, 0xa5, 0x93, 0xf7, 0xe6, 0x2a, 0x44, 0x9b, 0xf5, 0x05, 0xd2,
+  0xc5, 0x12, 0x11, 0x8d, 0x7b, 0x28, 0xac, 0xc7, 0x43, 0xfe, 0xf2, 0xb1,
+  0xb5, 0xe8, 0x9c, 0xe5, 0xad, 0xb5, 0xf1, 0xb7, 0x72, 0x93, 0x75, 0xd1,
+  0x8a, 0x8a, 0x75, 0x59, 0xc0, 0x33, 0x3c, 0xdf, 0x4b, 0xd2, 0x3b, 0xba,
+  0x7a, 0xe6, 0x19, 0xe2, 0x33, 0x39, 0xd2, 0x81, 0xad, 0x32, 0x27, 0x81,
+  0x9d, 0xd1, 0xcd, 0x50, 0xa9, 0x56, 0x63, 0x9a, 0xc0, 0x77, 0xf6, 0xad,
+  0xc8, 0xb6, 0x00, 0xe6, 0x9a, 0x41, 0x2f, 0xe7, 0x8a, 0xe0, 0x00, 0x38,
+  0x55, 0x49, 0xdd, 0xd4, 0x73, 0x8c, 0x7c, 0x8b, 0xeb, 0x25, 0x8b, 0x38,
+  0xcf, 0x71, 0x89, 0xb0, 0x73, 0x48, 0x5c, 0x85, 0xad, 0x56, 0x3a, 0x9f,
+  0x04, 0x9d, 0x38, 0xff, 0xb4, 0x9a, 0x9f, 0x10, 0xde, 0x3b, 0xef, 0x33,
+  0xd4, 0x85, 0x2b, 0xa7, 0x2b, 0xea, 0xd5, 0xd5, 0x95, 0xd5, 0xde, 0x69,
+  0x4d, 0x2d, 0x4e, 0x64, 0x27, 0x58, 0x15, 0x44, 0x41, 0xdf, 0xaf, 0x5a,
+  0xcd, 0x0b, 0xb3, 0xf9, 0x98, 0xd5, 0xa5, 0x41, 0xcc, 0xe6, 0x93, 0x94,
+  0x7d, 0xab, 0x5d, 0xd2, 0x15, 0x27, 0x68, 0x34, 0x7d, 0xc8, 0xa7, 0xe7,
+  0x6b, 0x5c, 0x3a, 0x61, 0xee, 0x01, 0x19, 0x6c, 0xd3, 0x19, 0x9f, 0xcf,
+  0x47, 0xa0, 0xf8, 0x48, 0xd4, 0x3b, 0x17, 0x6a, 0x25, 0xb5, 0x01, 0x47,
+  0xa9, 0x57, 0xb9, 0xd6, 0x92, 0x86, 0xb5, 0x17, 0x25, 0x55, 0x8e, 0xe7,
+  0xca, 0x87, 0x8a, 0xdb, 0xcc, 0x43, 0x44, 0x7a, 0x83, 0xa3, 0xc7, 0xd9,
+  0xd5, 0xd3, 0xef, 0x98, 0x49, 0xcb, 0xc1, 0xeb, 0xf8, 0x15, 0x4f, 0xb2,
+  0xb5, 0x2a, 0x83, 0x24, 0x68, 0x52, 0x4c, 0x25, 0x45, 0xc8, 0xe2, 0x65,
+  0x6c, 0xea, 0xb7, 0xb6, 0x16, 0x85, 0x46, 0x04, 0xe4, 0x25, 0x50, 0x4d,
+  0xa4, 0xe4, 0x88, 0x61, 0xe5, 0xbb, 0x18, 0x3d, 0xef, 0xff, 0xb5, 0x59,
+  0xae, 0xbb, 0x4d, 0x5a, 0xb7, 0xaa, 0x04, 0x4c, 0x04, 0x4c, 0x03, 0x10,
+  0xe8, 0x9c, 0x0b, 0xff, 0x42, 0xf7, 0x89, 0x29, 0x99, 0x2d, 0x68, 0x2d,
+  0x46, 0xda, 0x39, 0x73, 0x2e, 0x44, 0x83, 0xf3, 0x50, 0x88, 0xf3, 0x72,
+  0x5c, 0x41, 0x7f, 0xb4, 0x26, 0xf9, 0x46, 0xfd, 0x71, 0x58, 0x5b, 0x7b,
+  0x35, 0x60, 0xc1, 0xa8, 0x71, 0x30, 0x1f, 0x3b, 0xa7, 0x67, 0xe7, 0xa7,
+  0x5f, 0x9f, 0x1f, 0x0d, 0x87, 0xc9, 0xdb, 0xa3, 0x0b, 0xd1, 0xf5, 0x2f,
+  0x24, 0xf4, 0xee, 0x0a, 0xea, 0x7a, 0xc2, 0xbe, 0x06, 0xc3, 0x70, 0xb2,
+  0x90, 0x13, 0x33, 0x24, 0x70, 0xce, 0x53, 0x01, 0x3f, 0x1a, 0xcb, 0x6f,
+  0xac, 0xc4, 0x4f, 0x35, 0x62, 0xef, 0x9a, 0xad, 0xfd, 0x1c, 0xd3, 0xc4,
+  0x0e, 0x49, 0x67, 0x3c, 0xf7, 0x66, 0x54, 0x16, 0x8c, 0x25, 0xca, 0xc9,
+  0xe5, 0x1c, 0x7a, 0x13, 0x3a, 0xae, 0x6c, 0xfa, 0xc9, 0xd3, 0xfb, 0x3d,
+  0xad, 0x66, 0x8d, 0xc2, 0xe9, 0xf8, 0xf5, 0xdc, 0x88, 0xe2, 0xf7, 0xc9,
+  0x0f, 0xd4, 0xe6, 0x84, 0x94, 0x57, 0x58, 0x90, 0xe9, 0x96, 0x1d, 0x72,
+  0xbd, 0x53, 0x5f, 0x56, 0x88, 0x8b, 0x94, 0x06, 0xff, 0xa1, 0x14, 0xf1,
+  0x20, 0x5e, 0x95, 0xa7, 0x51, 0x56, 0x47, 0xe0, 0x32, 0x35, 0xa6, 0xce,
+  0xf5, 0xac, 0x85, 0x8c, 0x93, 0xe4, 0x24, 0xbb, 0xac, 0x59, 0x0a, 0x41,
+  0x77, 0xd4, 0xdc, 0x0e, 0xf0, 0x9f, 0x77, 0x51, 0xf7, 0x8c, 0x7e, 0x7d,
+  0xf2, 0xf9, 0xf3, 0x9d, 0xcf, 0xe5, 0x57, 0xfb, 0xf7, 0xc5, 0xd3, 0x1d,
+  0xc5, 0x51, 0xa7, 0xbf, 0x9e, 0xee, 0x3f, 0xdd, 0xdd, 0x07, 0xbc, 0xe3,
+  0xce, 0xfe, 0x0e, 0xfd, 0xff, 0x53, 0xfd, 0x04, 0x18, 0x96, 0x2f, 0xf6,
+  0x3e, 0xff, 0x8c, 0xa3, 0x61, 0x40, 0x1f, 0x53, 0xea, 0xa4, 0x5f, 0x17,
+  0x7d, 0x46, 0x99, 0x62, 0xc9, 0xe7, 0xf7, 0x4d, 0x4b, 0x24, 0xdc, 0xeb,
+  0x63, 0x38, 0x53, 0xaf, 0x44, 0xa7, 0x99, 0x66, 0x38, 0xf6, 0x6a, 0x55,
+  0x15, 0xe4, 0x1b, 0x8b, 0x10, 0x97, 0xb4, 0x6d, 0x9d, 0x86, 0xbe, 0x5d,
+  0xf3, 0xdf, 0x0c, 0xdb, 0xd6, 0x78, 0x47, 0x02, 0xcd, 0x03, 0x84, 0xb8,
+  0x5f, 0xda, 0xb5, 0x25, 0x92, 0xaf, 0x31, 0xee, 0x9b, 0x6e, 0x95, 0xbe,
+  0x37, 0xb6, 0x5a, 0xd0, 0xee, 0x29, 0x88, 0x81, 0x33, 0xc9, 0x49, 0xb8,
+  0x94, 0x70, 0xe5, 0x5f, 0xda, 0x9f, 0x58, 0xae, 0xf0, 0x96, 0x52, 0x43,
+  0xd2, 0xed, 0xcd, 0xe5, 0x22, 0x44, 0xfa, 0x6a, 0x10, 0xcf, 0x9a, 0xdf,
+  0x7e, 0xbf, 0x52, 0x60, 0x65, 0xfa, 0x90, 0xcb, 0xe1, 0x92, 0xd2, 0xba,
+  0x91, 0x29, 0x77, 0x9a, 0x53, 0x32, 0xfa, 0x05, 0xcd, 0xf9, 0x19, 0x31,
+  0x05, 0xbb, 0x9d, 0xeb, 0x07, 0x9b, 0x93, 0x4b, 0x60, 0x9b, 0xad, 0x86,
+  0xc3, 0x15, 0xb5, 0x6b, 0x4e, 0x5e, 0x75, 0x24, 0xdb, 0x97, 0x37, 0x54,
+  0xe6, 0x74, 0x79, 0x71, 0x74, 0x0a, 0x6f, 0x0b, 0xbe, 0xe2, 0xe5, 0x79,
+  0xa3, 0xec, 0x4e, 0x57, 0xa0, 0xc6, 0xa0, 0x3f, 0xed, 0x83, 0xcf, 0x93,
+  0x3b, 0x74, 0x0f, 0x4e, 0xcd, 0xc7, 0xd6, 0xbb, 0xd2, 0xc2, 0x9b, 0x2e,
+  0x56, 0x3d, 0x76, 0x24, 0xfd, 0x73, 0x1c, 0xbe, 0xee, 0x9a, 0x0b, 0x6f,
+  0x1f, 0x2e, 0x2b, 0xad, 0x85, 0x31, 0x00, 0x56, 0x0a, 0x74, 0xff, 0x2d,
+  0x63, 0x61, 0xfd, 0xdf, 0xb9, 0xb0, 0x2d, 0xbe, 0xcc, 0xb4, 0x4a, 0x68,
+  0x2a, 0x94, 0x3f, 0x0d, 0x73, 0x69, 0x1d, 0xb7, 0x1b, 0xa5, 0x65, 0x03,
+  0x47, 0x7f, 0x4d, 0xaa, 0x49, 0xd0, 0xf5, 0x4a, 0xd7, 0x05, 0xa7, 0x3b,
+  0x8a, 0x1c, 0xf1, 0x6f, 0x6b, 0x6b, 0xc3, 0xb3, 0xa3, 0xa3, 0xd7, 0xc9,
+  0xc9, 0xf1, 0xdb, 0xe3, 0x8b, 0x40, 0x0a, 0x77, 0xb7, 0x87, 0x59, 0x5a,
+  0xad, 0xe6, 0x54, 0x6b, 0x39, 0x3c, 0x6a, 0xb3, 0xf4, 0x67, 0xf7, 0xf7,
+  0x2c, 0xd3, 0x2c, 0x8a, 0x69, 0xfb, 0x3d, 0xd6, 0xb7, 0x19, 0xd9, 0x69,
+  0x90, 0x7c, 0x15, 0x04, 0x46, 0x26, 0x15, 0x49, 0x34, 0x63, 0x57, 0x70,
+  0xb9, 0xff, 0x67, 0x8d, 0xd3, 0x68, 0x8a, 0x4b, 0x0a, 0x3e, 0xeb, 0x52,
+  0x7a, 0x34, 0xb6, 0xb5, 0x35, 0x2a, 0xac, 0x6d, 0x26, 0xa1, 0xd5, 0x81,
+  0x59, 0x8e, 0xc3, 0xf6, 0xee, 0x32, 0x46, 0x3b, 0x98, 0xe5, 0x92, 0x6b,
+  0x19, 0xc6, 0x14, 0xbb, 0x1a, 0xb4, 0x17, 0x85, 0xf0, 0xf1, 0xb0, 0xc7,
+  0xb0, 0xb8, 0xb8, 0x05, 0xd4, 0x5a, 0x5f, 0x61, 0xd5, 0xea, 0x27, 0x3b,
+  0x2e, 0x5d, 0x61, 0xc1, 0x3c, 0x47, 0xe5, 0x7b, 0x74, 0xb6, 0x9b, 0x90,
+  0x10, 0xb2, 0x84, 0x28, 0x5f, 0x2e, 0xe7, 0x9d, 0xeb, 0xee, 0xcf, 0xf2,
+  0x2e, 0xcd, 0xff, 0xf9, 0x0e, 0x5f, 0x6f, 0x97, 0x69, 0xd9, 0x27, 0x71,
+  0xeb, 0xbe, 0x6f, 0x26, 0x55, 0xa1, 0x08, 0x8d, 0x37, 0x16, 0x7b, 0x4f,
+  0xe6, 0xcb, 0xdd, 0xb6, 0x44, 0x44, 0x9f, 0x73, 0x52, 0xb0, 0x5f, 0x72,
+  0xaa, 0x07, 0x00, 0x53, 0x47, 0xa6, 0xaf, 0x59, 0x38, 0xbd, 0x80, 0xe3,
+  0x81, 0x89, 0x6d, 0x17, 0x3d, 0x8f, 0x42, 0x06, 0x02, 0xb3, 0x55, 0xb4,
+  0x9a, 0x63, 0x9a, 0x3a, 0x97, 0xae, 0x3c, 0x3d, 0x4b, 0x76, 0x3f, 0xc7,
+  0x3c, 0x3e, 0x6d, 0x3e, 0x6f, 0x8a, 0x72, 0xec, 0x72, 0x8a, 0x59, 0x47,
+  0x08, 0x12, 0x4c, 0x25, 0x2d, 0x82, 0xab, 0x35, 0xc9, 0xea, 0x5a, 0x50,
+  0x2c, 0x07, 0xed, 0x41, 0x29, 0x51, 0x7f, 0x3a, 0x9b, 0xa3, 0xd8, 0xc1,
+  0x2d, 0x62, 0x11, 0xee, 0x1a, 0x5d, 0x17, 0x18, 0x58, 0x25, 0x68, 0x6f,
+  0xa3, 0x74, 0x09, 0xa8, 0xb2, 0x0c, 0x30, 0x89, 0x10, 0xad, 0xdd, 0xe5,
+  0x13, 0x16, 0xa5, 0x3d, 0x44, 0x1d, 0xed, 0x97, 0x10, 0x9f, 0xc4, 0x4a,
+  0xb3, 0xcf, 0x92, 0x9d, 0x9d, 0x6e, 0x64, 0x2a, 0xc0, 0x60, 0x59, 0x0b,
+  0xb6, 0x28, 0x6c, 0xb2, 0xfc, 0x80, 0xfc, 0x66, 0xef, 0x17, 0x80, 0xfe,
+  0x04, 0xd6, 0xbc, 0xee, 0x7b, 0x41, 0xae, 0x40, 0x5d, 0x4f, 0xcd, 0x98,
+  0xf0, 0xd6, 0x11, 0x76, 0x73, 0xce, 0x40, 0x6a, 0x09, 0xa6, 0xbd, 0xbb,
+  0x43, 0x42, 0xeb, 0xb4, 0x68, 0x14, 0x3f, 0x27, 0xa2, 0xea, 0x6a, 0xa2,
+  0x3c, 0xad, 0x3e, 0xaf, 0xce, 0xee, 0xce, 0xb7, 0xab, 0x57, 0x9d, 0xe1,
+  0xf7, 0x1f, 0x7c, 0x79, 0xef, 0xe9, 0x03, 0x9b, 0x76, 0x5a, 0xb2, 0x32,
+  0x9e, 0x59, 0x0c, 0x24, 0x0b, 0x82, 0xde, 0xf3, 0xd2, 0xd9, 0x36, 0x22,
+  0xfc, 0xec, 0x2a, 0xc5, 0xf0, 0x1f, 0x1a, 0xbd, 0xe5, 0x84, 0xb4, 0x86,
+  0xf2, 0x56, 0xa3, 0xb2, 0xe5, 0xcb, 0x0a, 0x66, 0xb1, 0x05, 0x03, 0xf4,
+  0x79, 0xdd, 0xd5, 0xa5, 0x93, 0x0b, 0x36, 0x43, 0xf0, 0xb6, 0x70, 0xce,
+  0x5e, 0x93, 0x49, 0x18, 0xf5, 0x94, 0xd9, 0xd5, 0x52, 0x90, 0x30, 0x0a,
+  0xd1, 0xf5, 0x81, 0x67, 0xad, 0xe7, 0x95, 0x78, 0x33, 0xc2, 0x87, 0x84,
+  0x9e, 0x98, 0xf1, 0x8e, 0x53, 0x13, 0x59, 0x45, 0xe4, 0x68, 0x5f, 0x0c,
+  0x30, 0xca, 0x8e, 0xe1, 0x05, 0x63, 0x6e, 0xb0, 0x96, 0xb4, 0x0b, 0x67,
+  0x0b, 0x60, 0xe3, 0x80, 0x33, 0x7d, 0x85, 0x50, 0x1c, 0xb3, 0x47, 0x5a,
+  0x19, 0xbc, 0x61, 0xb5, 0xb8, 0x05, 0xb8, 0x81, 0x9e, 0x52, 0x2d, 0xb7,
+  0xe4, 0xba, 0x02, 0xc7, 0xaf, 0x0c, 0x38, 0x53, 0x40, 0xf6, 0x61, 0xec,
+  0x3f, 0x3c, 0x7d, 0xf7, 0xe6, 0xf8, 0x6b, 0x07, 0x65, 0x24, 0x4c, 0xbc,
+  0x01, 0xb1, 0x21, 0xe6, 0xe3, 0xd0, 0xd3, 0xad, 0xa5, 0x18, 0x35, 0xfa,
+  0x96, 0xd8, 0xd3, 0x87, 0xf0, 0x03, 0x66, 0x20, 0xf3, 0x27, 0x30, 0x90,
+  0x0b, 0xfe, 0x47, 0xb5, 0xe5, 0xcd, 0x0d, 0x2d, 0xa8, 0x3a, 0xc9, 0xd2,
+  0x48, 0xcb, 0x7a, 0xb9, 0x70, 0x41, 0x84, 0x41, 0x29, 0x47, 0x85, 0xdf,
+  0xb6, 0x54, 0xf4, 0xe5, 0x42, 0x58, 0x93, 0x26, 0x94, 0x36, 0xac, 0xb9,
+  0x72, 0x07, 0xc0, 0x9c, 0xa0, 0x58, 0x2a, 0x7a, 0x01, 0x74, 0xe2, 0x72,
+  0xa6, 0x00, 0xed, 0x0c, 0xe3, 0xe5, 0xcd, 0x7f, 0x33, 0xe1, 0x72, 0x98,
+  0x61, 0xc9, 0xf3, 0x99, 0xa8, 0x63, 0x98, 0x37, 0xd7, 0x94, 0x76, 0xc1,
+  0x38, 0x2e, 0xfa, 0xd7, 0xfb, 0x87, 0x2a, 0x57, 0x24, 0xdb, 0xc5, 0x27,
+  0x59, 0x1a, 0x6b, 0xca, 0xae, 0x4a, 0xf6, 0x75, 0xf2, 0x27, 0xaf, 0xe0,
+  0x96, 0xd9, 0x07, 0x08, 0xfd, 0x4c, 0x00, 0xe5, 0xc2, 0xf4, 0x53, 0xe5,
+  0x92, 0x1e, 0x2c, 0xfe, 0xf8, 0x32, 0xc8, 0x68, 0x93, 0x38, 0x41, 0x23,
+  0x3a, 0xb1, 0x11, 0xc3, 0xc0, 0xb2, 0xf1, 0xbb, 0x8d, 0x7e, 0x75, 0x3f,
+  0x1b, 0x15, 0x53, 0x4b, 0xbc, 0x70, 0x00, 0x12, 0xf6, 0x50, 0x58, 0x5a,
+  0x2d, 0x11, 0x4f, 0x6d, 0x1d, 0x98, 0x25, 0x7d, 0xac, 0x94, 0x1f, 0xbf,
+  0x94, 0x27, 0x62, 0xf7, 0x90, 0xcd, 0x82, 0xb1, 0x7d, 0xc0, 0xe3, 0xb3,
+  0xf9, 0x78, 0x5a, 0x28, 0x55, 0x23, 0xc1, 0x9c, 0x57, 0xaa, 0x39, 0x75,
+  0x78, 0xfc, 0x8a, 0x25, 0x2c, 0x1c, 0x5c, 0x7a, 0x84, 0xc4, 0x9d, 0x75,
+  0x45, 0xd4, 0xe0, 0x09, 0xe2, 0x6d, 0xf9, 0x42, 0xa3, 0xf2, 0x03, 0x7c,
+  0x1b, 0xa9, 0x55, 0x42, 0x43, 0xfd, 0x49, 0x0c, 0x8a, 0xe2, 0xf7, 0xfb,
+  0xb3, 0x75, 0x6e, 0x8f, 0xb6, 0x96, 0x9e, 0xe8, 0x29, 0x2d, 0xaf, 0x14,
+  0xa5, 0x4f, 0x3d, 0x69, 0xac, 0x24, 0xba, 0x0a, 0x32, 0xce, 0x30, 0x09,
+  0xa1, 0xc4, 0x45, 0xcd, 0xb0, 0xf8, 0xb4, 0x94, 0x9c, 0x42, 0xcd, 0xb8,
+  0x12, 0x93, 0xa4, 0x23, 0xc4, 0x80, 0xe3, 0xfc, 0xce, 0xc5, 0xa2, 0xa4,
+  0xfe, 0x2e, 0xb3, 0xc2, 0x16, 0xde, 0x3e, 0xab, 0x97, 0x59, 0xf0, 0x1a,
+  0x8c, 0x78, 0xac, 0x09, 0x67, 0x6a, 0x38, 0x91, 0xae, 0x58, 0x96, 0x00,
+  0xae, 0x0d, 0x27, 0xff, 0x64, 0x95, 0x6f, 0x42, 0xbe, 0x7f, 0xa5, 0x15,
+  0xad, 0xe8, 0x3c, 0x2b, 0x52, 0x8a, 0xc2, 0x07, 0x7e, 0xbe, 0xa3, 0xe6,
+  0xb7, 0x5a, 0xc3, 0x55, 0xab, 0xe4, 0xe0, 0xfc, 0x88, 0x24, 0xdb, 0xab,
+  0x39, 0x63, 0x54, 0xcc, 0x6b, 0x4b, 0xaa, 0xcb, 0xe6, 0x5a, 0x42, 0x6b,
+  0x6e, 0xe7, 0x03, 0x1d, 0xde, 0x05, 0x6f, 0x82, 0x98, 0x34, 0x30, 0x40,
+  0xf2, 0xb7, 0x3d, 0xc9, 0x8d, 0x0d, 0x4e, 0x98, 0xb9, 0x0e, 0x60, 0x12,
+  0x84, 0xa4, 0xe0, 0x22, 0xa1, 0xae, 0x0a, 0x83, 0x12, 0x3e, 0xeb, 0xb0,
+  0xf5, 0x10, 0x43, 0xd8, 0xd6, 0x9a, 0x4f, 0xb5, 0x4f, 0x45, 0xf8, 0xab,
+  0x01, 0x73, 0x6a, 0x5f, 0x0d, 0xb7, 0xa7, 0x27, 0xa7, 0x5e, 0xdc, 0x64,
+  0xf4, 0x57, 0xbe, 0x67, 0x20, 0x8b, 0xb4, 0xe5, 0x82, 0xcc, 0x45, 0xd8,
+  0x8b, 0xf5, 0x7a, 0x12, 0x08, 0xbf, 0x92, 0x02, 0x88, 0x18, 0x6b, 0x31,
+  0x4c, 0x2b, 0x12, 0x90, 0xda, 0x75, 0x44, 0x1d, 0x98, 0xe8, 0x59, 0x05,
+  0x55, 0x20, 0x5c, 0x78, 0x04, 0xb4, 0x24, 0x29, 0x9e, 0xdd, 0xe0, 0x4f,
+  0x51, 0xdb, 0xee, 0xef, 0xdc, 0x6c, 0xfd, 0x18, 0xdc, 0x97, 0xf8, 0xe8,
+  0x95, 0x43, 0xb7, 0xc3, 0x28, 0x06, 0xe8, 0x88, 0x59, 0x2a, 0xfb, 0x4c,
+  0xf1, 0x0b, 0x7f, 0xcc, 0x51, 0x6f, 0x06, 0x77, 0xca, 0x5c, 0xc7, 0x41,
+  0x68, 0x15, 0xea, 0x53, 0xf5, 0x03, 0x11, 0xc7, 0x1e, 0x73, 0xe8, 0x51,
+  0x28, 0x1a, 0xf7, 0xbf, 0xdd, 0xb6, 0x2a, 0xb8, 0xb0, 0xdf, 0x20, 0x81,
+  0xd8, 0x0e, 0x7c, 0x95, 0x35, 0xca, 0xe6, 0xba, 0x4c, 0xa1, 0xf5, 0xfe,
+  0x3a, 0xad, 0xc5, 0xc6, 0x74, 0xea, 0x19, 0xbe, 0x3d, 0x86, 0x5d, 0xe5,
+  0xa4, 0x3a, 0x2f, 0x30, 0x29, 0xef, 0x42, 0x3d, 0x8e, 0xfb, 0x46, 0x8a,
+  0x03, 0x0a, 0x9a, 0x21, 0x03, 0xc8, 0x01, 0x7b, 0x71, 0x9a, 0x08, 0x07,
+  0x09, 0xdc, 0xe6, 0x95, 0x39, 0x1f, 0x89, 0xb6, 0xc7, 0x12, 0x13, 0x51,
+  0x0b, 0x20, 0x41, 0x56, 0x8f, 0x83, 0xa5, 0xcc, 0xc6, 0xd7, 0x85, 0xc4,
+  0xd4, 0xd2, 0xa2, 0x05, 0x99, 0x9e, 0xeb, 0xc9, 0x7f, 0x2b, 0x0d, 0x7c,
+  0xeb, 0x93, 0xf6, 0x40, 0x08, 0x03, 0xc1, 0xa1, 0x1c, 0x78, 0x82, 0x38,
+  0xfa, 0xe1, 0xe2, 0xfc, 0x20, 0xf9, 0xe6, 0xe8, 0xe0, 0xf5, 0xd1, 0xf9,
+  0xb0, 0x75, 0xe9, 0x6b, 0xf8, 0x87, 0x48, 0x68, 0x30, 0x02, 0xb3, 0x68,
+  0x6c, 0xc0, 0x03, 0x1a, 0xb7, 0x6f, 0x5c, 0x8f, 0x88, 0x07, 0x07, 0x89,
+  0xce, 0x07, 0x14, 0x22, 0xf1, 0x16, 0x30, 0xee, 0x71, 0xc5, 0xcc, 0xc6,
+  0xb5, 0x31, 0x26, 0x0e, 0x85, 0x20, 0x06, 0x33, 0x99, 0x87, 0x19, 0x33,
+  0x1e, 0xab, 0xcf, 0x5f, 0x26, 0x93, 0xc2, 0x92, 0x01, 0x9b, 0x3b, 0xf7,
+  0x8d, 0xcf, 0xf7, 0x0e, 0xd8, 0x96, 0x5e, 0x32, 0x6a, 0x35, 0x5c, 0xff,
+  0xa1, 0x4f, 0xfd, 0xf6, 0x69, 0xf1, 0xfb, 0x00, 0x73, 0xbc, 0xcf, 0xaa,
+  0xf5, 0x96, 0x09, 0xb0, 0xd9, 0xfd, 0x9a, 0x14, 0x71, 0xea, 0x9c, 0xa4,
+  0x6f, 0xa2, 0x2d, 0xe1, 0x74, 0xa1, 0xce, 0x73, 0x47, 0x83, 0xe0, 0x4b,
+  0x35, 0x10, 0x92, 0xf5, 0x04, 0x75, 0xd2, 0x5b, 0x34, 0x40, 0xc9, 0xab,
+  0x99, 0x1a, 0x0f, 0xc6, 0x03, 0xd1, 0x29, 0xb0, 0xac, 0x43, 0x67, 0x4f,
+  0x2e, 0xf5, 0xa9, 0x40, 0x34, 0x8b, 0xc5, 0x8c, 0x86, 0xa5, 0x0f, 0x85,
+  0xf7, 0x03, 0x3b, 0x40, 0x34, 0x06, 0xbf, 0x6a, 0xf8, 0x47, 0xd5, 0x18,
+  0xaa, 0xe8, 0xdd, 0xda, 0x1c, 0xc6, 0xe0, 0x68, 0xde, 0x42, 0xf7, 0xd1,
+  0xa5, 0x15, 0x16, 0xd1, 0x77, 0x25, 0x0a, 0x0c, 0x4a, 0x3d, 0xdb, 0x37,
+  0xa5, 0x42, 0xa9, 0x94, 0x29, 0x14, 0xc6, 0x16, 0xe4, 0x02, 0x85, 0xc4,
+  0xcc, 0x55, 0xd0, 0x38, 0x7a, 0xdc, 0x3d, 0x97, 0x25, 0xdf, 0x14, 0x15,
+  0xdf, 0x05, 0xdd, 0xc7, 0x71, 0xc9, 0xc7, 0x96, 0x9f, 0xdf, 0x50, 0xff,
+  0x96, 0x03, 0x89, 0x65, 0x50, 0x65, 0x66, 0x5f, 0x67, 0x07, 0x17, 0xdf,
+  0xb0, 0x77, 0x95, 0x49, 0xf8, 0x35, 0x23, 0xa6, 0x98, 0x4f, 0xad, 0x9b,
+  0x92, 0xe5, 0x14, 0x38, 0x91, 0x7f, 0x0d, 0x98, 0xd1, 0xe4, 0x49, 0xf6,
+  0xde, 0xe5, 0x12, 0x88, 0x34, 0x95, 0xaa, 0xb0, 0xcc, 0xa3, 0x1b, 0x95,
+  0xf9, 0x38, 0xf4, 0xdd, 0xe5, 0xdb, 0xb9, 0x78, 0xcb, 0x0d, 0x49, 0x84,
+  0xdf, 0x90, 0x39, 0x31, 0xd1, 0x43, 0x98, 0x83, 0xc6, 0x13, 0x22, 0x0f,
+  0xf3, 0x17, 0xc8, 0x74, 0x16, 0x07, 0xd4, 0xa4, 0x88, 0xe3, 0x1e, 0x06,
+  0x47, 0xfa, 0xcb, 0xd9, 0xfd, 0xa0, 0x0b, 0xc0, 0x93, 0x7c, 0xb5, 0xac,
+  0x9b, 0x6c, 0xa5, 0x85, 0x7f, 0xec, 0x24, 0xcb, 0xb2, 0x28, 0xea, 0x60,
+  0x0c, 0x2c, 0xfd, 0xa4, 0xb5, 0x9e, 0x68, 0x01, 0xb8, 0x94, 0xb1, 0xa0,
+  0xa9, 0xb9, 0xca, 0xdd, 0xa1, 0x60, 0x98, 0x8e, 0xaa, 0x62, 0xba, 0xac,
+  0x83, 0xe8, 0xeb, 0x5f, 0x36, 0xe6, 0x60, 0xd0, 0x9b, 0xc7, 0x03, 0x03,
+  0xfb, 0x9c, 0x0b, 0x44, 0x1d, 0x69, 0xfa, 0x24, 0x5e, 0xb2, 0xb3, 0xb1,
+  0x2c, 0xe6, 0xcd, 0xf2, 0x71, 0x1c, 0xe8, 0xbd, 0xb5, 0xb6, 0x36, 0xb4,
+  0xcd, 0x06, 0xdc, 0x6b, 0x77, 0xd3, 0xbf, 0x67, 0x69, 0x12, 0x63, 0x10,
+  0x67, 0xc1, 0x98, 0x7e, 0x31, 0x10, 0xb8, 0x4c, 0xf6, 0x94, 0x59, 0xb8,
+  0xec, 0x71, 0x5e, 0x35, 0x27, 0xc5, 0x5f, 0x39, 0x77, 0x85, 0xe5, 0x97,
+  0x5d, 0x14, 0x06, 0xe5, 0xaf, 0xee, 0x3a, 0x4f, 0x10, 0x8d, 0x6c, 0xf8,
+  0x28, 0xc2, 0x34, 0x2e, 0x01, 0xab, 0x35, 0xec, 0xc2, 0x71, 0x31, 0xc8,
+  0xed, 0xff, 0xb5, 0x9d, 0xf4, 0x12, 0x2d, 0x03, 0x1f, 0x01, 0x39, 0xfa,
+  0xff, 0x71, 0xe0, 0x95, 0xc2, 0xfb, 0xa2, 0xcd, 0x41, 0x13, 0x40, 0x76,
+  0x40, 0x2a, 0xd4, 0x75, 0x39, 0xf6, 0xd4, 0x4f, 0xd2, 0x41, 0x76, 0x07,
+  0xfd, 0xc5, 0x74, 0x04, 0x85, 0x0b, 0x91, 0x72, 0xbf, 0x0e, 0x80, 0x89,
+  0xe1, 0x36, 0x2e, 0x9d, 0x55, 0x0f, 0x95, 0x37, 0xa5, 0x0c, 0xa5, 0x88,
+  0xf5, 0x5c, 0x85, 0xc9, 0xdc, 0xa6, 0x92, 0x51, 0xef, 0xf4, 0xf6, 0x2a,
+  0xa9, 0x0a, 0xf9, 0x69, 0x49, 0x47, 0x1a, 0xd8, 0xa5, 0xe4, 0x1f, 0x54,
+  0xf7, 0x0b, 0xca, 0xe2, 0x5a, 0xc4, 0xa9, 0x44, 0xd3, 0x99, 0x3b, 0xd2,
+  0x06, 0x69, 0x52, 0x00, 0xbc, 0x95, 0x0c, 0x6b, 0xa9, 0xc8, 0x23, 0x88,
+  0x24, 0x03, 0x86, 0xb1, 0x24, 0x6d, 0xa3, 0x6e, 0xa3, 0x69, 0x32, 0x76,
+  0xa5, 0x5a, 0x1a, 0xc7, 0x5a, 0x58, 0x45, 0x5b, 0x86, 0xaf, 0x77, 0x3f,
+  0x27, 0xe1, 0xb3, 0x67, 0xee, 0x2e, 0x05, 0x4e, 0x9a, 0x17, 0x09, 0x6c,
+  0x4a, 0x5a, 0xf9, 0x55, 0x82, 0x37, 0xc2, 0x80, 0x14, 0x1f, 0xb1, 0x79,
+  0x85, 0x2c, 0x0f, 0x35, 0x49, 0x29, 0x96, 0x09, 0xdb, 0xbf, 0xae, 0x73,
+  0x8d, 0x2b, 0x95, 0x55, 0x6f, 0xd6, 0xd5, 0x64, 0x0b, 0x1f, 0x42, 0x0a,
+  0xbc, 0x57, 0xd5, 0x05, 0x3e, 0x0c, 0xba, 0x07, 0x66, 0xe0, 0x50, 0x55,
+  0xf5, 0x12, 0x39, 0x0e, 0x73, 0xca, 0x25, 0x0a, 0xc3, 0xc5, 0x3a, 0x7f,
+  0x62, 0xef, 0x61, 0x97, 0x08, 0x62, 0x9d, 0x27, 0x92, 0x40, 0xa2, 0x50,
+  0x71, 0xb8, 0x50, 0xf6, 0x76, 0x59, 0x31, 0x95, 0x98, 0x0d, 0xc6, 0x29,
+  0xb5, 0x16, 0x0c, 0x2f, 0xad, 0xbd, 0xf8, 0x5b, 0x3d, 0x5d, 0x25, 0x97,
+  0x71, 0xaf, 0x2e, 0x66, 0x91, 0x0b, 0x03, 0xbf, 0x53, 0xa3, 0x7e, 0x9c,
   0x64, 0x71, 0x57, 0x75, 0xb9, 0x1c, 0x37, 0x20, 0xfa, 0x98, 0x22, 0x1a,
   0xae, 0x79, 0xb7, 0xc6, 0x45, 0xa8, 0xdb, 0x1f, 0x9f, 0xa9, 0x7a, 0x2f,
-  0xda, 0x07, 0x46, 0xb6, 0x99, 0x36, 0x92, 0x5c, 0x5c, 0xb9, 0xcf, 0xb0,
-  0xdf, 0x2d, 0x47, 0x65, 0xfd, 0x33, 0x97, 0x51, 0xdf, 0x2a, 0x0e, 0x8f,
+  0xda, 0x07, 0x46, 0xb6, 0x99, 0x36, 0x92, 0x5c, 0x5c, 0x69, 0xd1, 0xb0,
+  0xdf, 0x2d, 0x47, 0x65, 0xfd, 0x33, 0x97, 0x51, 0xdf, 0x2a, 0x10, 0x8f,
   0xec, 0x84, 0xe0, 0xee, 0x55, 0x41, 0x8c, 0x05, 0x8f, 0x32, 0x51, 0xf0,
   0x45, 0x16, 0x6b, 0x60, 0xb2, 0x5c, 0x73, 0x00, 0x89, 0x34, 0xa4, 0xbe,
-  0x86, 0xaa, 0x8a, 0xf7, 0x77, 0x9b, 0x16, 0xd2, 0x0a, 0x04, 0xb9, 0xe2,
+  0x86, 0xaa, 0x8a, 0xf7, 0x77, 0x9b, 0x16, 0xd2, 0x0a, 0x04, 0xb9, 0xca,
   0x58, 0x95, 0x07, 0x59, 0x6c, 0xc5, 0xa9, 0x32, 0x44, 0x93, 0x93, 0x0f,
   0x15, 0x2c, 0x4e, 0xd7, 0x6f, 0x90, 0xbc, 0xd6, 0x43, 0xa1, 0x3d, 0xb4,
   0xc5, 0x89, 0xee, 0xdd, 0x78, 0x26, 0x50, 0x28, 0x1d, 0x3a, 0x7a, 0x6d,
   0x36, 0x55, 0x66, 0x39, 0xbc, 0x36, 0xd0, 0x6c, 0x6c, 0x93, 0x68, 0x5d,
-  0xad, 0x0b, 0x1a, 0x02, 0x66, 0xbc, 0x31, 0xcd, 0x76, 0x36, 0x82, 0xea,
+  0xad, 0x0b, 0x1a, 0x02, 0x66, 0xbc, 0x31, 0xcd, 0x76, 0x36, 0x82, 0xd2,
   0x5e, 0x9b, 0x12, 0xf4, 0x5f, 0xb0, 0xf6, 0xe3, 0xc0, 0x0a, 0xc5, 0x7a,
-  0x81, 0xe0, 0xb6, 0xad, 0xc8, 0x50, 0xa8, 0x89, 0xdf, 0x3a, 0x98, 0xdd,
-  0x17, 0x7b, 0x83, 0xdd, 0xe7, 0x5f, 0x0e, 0x76, 0x06, 0xbb, 0x3b, 0xe0,
+  0x81, 0xe0, 0xb6, 0xad, 0xc8, 0x50, 0xa8, 0x89, 0x5f, 0x3a, 0x98, 0xdd,
+  0x17, 0x7b, 0x83, 0xdd, 0xe7, 0x9f, 0x0f, 0x76, 0x06, 0xbb, 0x3b, 0xe0,
   0x2f, 0x18, 0x4a, 0x30, 0x38, 0x59, 0x97, 0x48, 0x57, 0x8d, 0xf7, 0xba,
-  0x7d, 0xbe, 0x3b, 0xba, 0xf8, 0xf1, 0xf4, 0xfc, 0xfb, 0xe4, 0xf8, 0xdd,
+  0x7d, 0xbe, 0x3b, 0xba, 0xf8, 0xfe, 0xf4, 0xfc, 0xdb, 0xe4, 0xf8, 0xdd,
   0xc5, 0xd1, 0xf9, 0x9b, 0x83, 0xc3, 0x4f, 0x05, 0xec, 0x0f, 0xcd, 0xd6,
   0x41, 0x75, 0xeb, 0xcc, 0x2f, 0x4c, 0xd7, 0x36, 0xe8, 0xd7, 0x2c, 0xab,
   0xaf, 0x77, 0xf6, 0x77, 0x1f, 0x84, 0xa4, 0x8e, 0x98, 0x07, 0xfd, 0xfb,
   0x36, 0xa9, 0x5d, 0x4c, 0x6a, 0x75, 0x2b, 0x0e, 0x9a, 0x71, 0x28, 0xb1,
   0x55, 0x2e, 0x2e, 0x97, 0xd9, 0x3c, 0x17, 0x4f, 0x62, 0x44, 0x56, 0x65,
   0xec, 0x23, 0x01, 0xbf, 0x95, 0xf4, 0x5a, 0x05, 0x99, 0xd1, 0x18, 0x74,
   0xe5, 0xb9, 0x6b, 0x52, 0x49, 0xba, 0x56, 0x73, 0x8a, 0xc0, 0xd9, 0x4e,
-  0x58, 0xc4, 0x33, 0xae, 0xac, 0xb9, 0x6b, 0xa0, 0x16, 0xad, 0x6f, 0x2a,
-  0x80, 0x83, 0x13, 0x97, 0x27, 0xe2, 0x50, 0x08, 0xd6, 0x92, 0x40, 0x4e,
-  0xe7, 0xb1, 0x36, 0x8b, 0x81, 0x87, 0xe1, 0xb3, 0x2d, 0xec, 0xd5, 0xca,
-  0xe2, 0x9a, 0x79, 0x62, 0x0d, 0xd3, 0xe8, 0xa1, 0x0e, 0x84, 0x4f, 0x43,
-  0x30, 0x1a, 0xe9, 0x8a, 0x05, 0x2a, 0x80, 0xa4, 0x31, 0x3c, 0x64, 0x03,
-  0x21, 0x59, 0xee, 0x28, 0xce, 0x9d, 0x10, 0xf9, 0xcf, 0xca, 0x5a, 0xa0,
-  0xf5, 0xaa, 0x01, 0x52, 0x98, 0x48, 0x41, 0xab, 0xf0, 0x75, 0x11, 0xb5,
-  0x39, 0x3a, 0x73, 0x52, 0xa6, 0x77, 0x5c, 0x95, 0x25, 0xf7, 0x90, 0xa3,
-  0x6b, 0xcd, 0xa2, 0x5c, 0x10, 0x9c, 0xfc, 0x9a, 0x27, 0x67, 0x47, 0x6f,
-  0xfb, 0x56, 0x4e, 0x98, 0x7e, 0x17, 0x63, 0x94, 0xe1, 0x4b, 0x4a, 0x6e,
-  0xcf, 0x22, 0x9b, 0x5b, 0x2c, 0x0d, 0xf3, 0x44, 0x0d, 0xfe, 0x09, 0x27,
-  0x80, 0x43, 0xe3, 0x10, 0x28, 0x35, 0x64, 0xd4, 0x62, 0x2e, 0x25, 0xb7,
-  0xb0, 0x0d, 0xcb, 0x89, 0xfd, 0xd4, 0x80, 0xe5, 0x64, 0xd3, 0x05, 0xe9,
-  0xa2, 0x3f, 0x8e, 0x44, 0xe5, 0xa8, 0x01, 0x17, 0x26, 0x50, 0x58, 0xe6,
-  0xf5, 0xd9, 0xf7, 0x87, 0xc3, 0x3f, 0xec, 0xee, 0xe9, 0x70, 0xb6, 0x4c,
-  0x2b, 0x00, 0xaf, 0x6a, 0x27, 0xe5, 0x33, 0xbb, 0x0e, 0xc7, 0x68, 0x29,
-  0xd6, 0x7c, 0xc0, 0x79, 0x33, 0x36, 0x5d, 0x62, 0xd0, 0x56, 0x23, 0x33,
-  0x88, 0x23, 0xbf, 0xee, 0x9d, 0x88, 0xe9, 0xca, 0xfd, 0xc2, 0x25, 0xc2,
-  0x55, 0xa1, 0xb4, 0x2e, 0x53, 0xed, 0x42, 0xfd, 0xd2, 0xb9, 0x7d, 0x24,
-  0x2d, 0x6b, 0x6b, 0x9c, 0x43, 0xee, 0xc3, 0x59, 0xda, 0x7b, 0x8e, 0xf5,
-  0xf6, 0xdf, 0x02, 0x27, 0x56, 0x6f, 0x76, 0x03, 0x04, 0xf2, 0xdd, 0xf0,
-  0x01, 0xd0, 0xe8, 0xf5, 0x89, 0x55, 0x7e, 0x9b, 0xfb, 0x3a, 0x28, 0x78,
-  0xfa, 0x94, 0x36, 0x8a, 0x4e, 0x96, 0xe0, 0x36, 0x80, 0x29, 0x14, 0x53,
-  0xa8, 0x2e, 0xee, 0x91, 0xd7, 0x25, 0x0a, 0xce, 0x2c, 0x24, 0x8e, 0xf4,
-  0xdd, 0x20, 0xf9, 0x2e, 0x9b, 0x23, 0x71, 0x1e, 0x11, 0x77, 0x96, 0x7b,
-  0xc5, 0x71, 0x81, 0x28, 0x3d, 0xc9, 0xa5, 0xf8, 0x4e, 0xb2, 0x54, 0x31,
-  0x39, 0x89, 0xd7, 0x55, 0xa2, 0xe1, 0x5a, 0x19, 0xaa, 0x14, 0xd1, 0x79,
-  0x0a, 0x20, 0xea, 0xc0, 0x2e, 0x04, 0x24, 0x1a, 0x0d, 0x6c, 0x36, 0x81,
-  0x35, 0xb9, 0x24, 0x02, 0x37, 0xa7, 0xc7, 0x9c, 0x7d, 0x4d, 0x6a, 0x55,
-  0xbe, 0x66, 0x38, 0x6d, 0x58, 0x0b, 0x45, 0xe3, 0xf2, 0x4c, 0x65, 0x52,
-  0x5e, 0xc3, 0xf4, 0x51, 0xd1, 0x75, 0x93, 0xce, 0xc7, 0xf7, 0x83, 0x09,
-  0xc9, 0xb2, 0x30, 0x9e, 0x0d, 0x96, 0x37, 0xdb, 0xc1, 0x31, 0x05, 0xcb,
-  0xbf, 0x16, 0x8c, 0x80, 0xa6, 0xe1, 0xdb, 0xca, 0x1c, 0x77, 0xa1, 0xc3,
-  0xd2, 0xc6, 0x99, 0x00, 0x49, 0x58, 0xb6, 0xbf, 0x1c, 0xcf, 0x95, 0x20,
-  0x5b, 0x47, 0x89, 0x43, 0x38, 0x46, 0x0b, 0x83, 0x45, 0x36, 0xdb, 0x77,
-  0xd9, 0xc8, 0xc6, 0x1f, 0xb4, 0xaa, 0x86, 0x53, 0x2c, 0x02, 0x23, 0xed,
-  0x3c, 0xbb, 0x9a, 0xaa, 0x40, 0x11, 0xaa, 0x2e, 0xae, 0x89, 0x48, 0x0a,
-  0x88, 0x28, 0x3c, 0x5a, 0x24, 0x89, 0x25, 0x76, 0xa2, 0xc3, 0x5a, 0x43,
-  0x6a, 0xe5, 0xe1, 0x12, 0x02, 0xbd, 0x6f, 0x44, 0x91, 0x43, 0x18, 0x6c,
-  0x19, 0xc2, 0xb0, 0x9a, 0x78, 0x2c, 0x12, 0x49, 0xdd, 0x4f, 0x00, 0x82,
-  0x65, 0x0a, 0x61, 0x18, 0x77, 0x8d, 0x8a, 0x66, 0xe7, 0xa7, 0x95, 0x12,
-  0x96, 0xb3, 0x42, 0x5f, 0xdf, 0x3e, 0x81, 0xc5, 0xfb, 0xe2, 0x64, 0x68,
-  0x5e, 0x91, 0x79, 0x76, 0x17, 0x90, 0x96, 0x94, 0x1e, 0x50, 0xfa, 0x83,
-  0x01, 0x48, 0x20, 0x95, 0x19, 0xed, 0x80, 0x47, 0x22, 0x5c, 0xc1, 0xbb,
-  0xc9, 0x7c, 0xf2, 0x83, 0x2d, 0x82, 0x86, 0x11, 0x63, 0x28, 0x56, 0xf1,
-  0x4c, 0x84, 0x21, 0x87, 0xf4, 0x02, 0xec, 0x3e, 0x12, 0x96, 0x9e, 0xf4,
-  0x92, 0xfe, 0x1e, 0xe3, 0xe7, 0xec, 0x36, 0x17, 0x31, 0xad, 0x05, 0x26,
-  0x10, 0x6d, 0x50, 0x4b, 0xd6, 0x8a, 0xb2, 0x83, 0x4d, 0x25, 0xe9, 0x5b,
-  0x7a, 0x1f, 0x3f, 0xf6, 0x74, 0x42, 0xb7, 0xbb, 0x1c, 0xb1, 0x2d, 0xb8,
-  0x95, 0xd3, 0xfb, 0xae, 0xc8, 0xb0, 0xf7, 0xe0, 0xae, 0x72, 0x6e, 0xc4,
-  0x5d, 0xee, 0x00, 0xa4, 0xa5, 0x68, 0x02, 0x9b, 0x42, 0x15, 0x12, 0xd4,
-  0x06, 0x40, 0x4b, 0xa8, 0x46, 0xee, 0x79, 0x72, 0xbb, 0x67, 0xbe, 0x66,
-  0x7c, 0x63, 0xeb, 0x26, 0xc6, 0x7a, 0xcf, 0x44, 0x3a, 0x69, 0x8b, 0x88,
-  0x72, 0x0b, 0xa8, 0x16, 0x59, 0x4f, 0x44, 0xb3, 0xc4, 0x45, 0x1a, 0x5c,
-  0xa6, 0x98, 0xab, 0x59, 0x41, 0x52, 0xde, 0x05, 0x8f, 0x1e, 0x0a, 0x7c,
-  0x10, 0xe6, 0xc4, 0x91, 0xdf, 0x41, 0x44, 0xe4, 0xf1, 0xdc, 0x25, 0x4a,
-  0xa8, 0x29, 0x9f, 0x21, 0xfa, 0x78, 0xfb, 0xaf, 0x73, 0x31, 0x4c, 0x70,
-  0xac, 0x29, 0x5f, 0xe7, 0x74, 0xf2, 0x37, 0x12, 0x3a, 0x4c, 0x4b, 0x70,
-  0xfc, 0xda, 0x95, 0x5f, 0x1b, 0x0a, 0xb4, 0xe7, 0x46, 0xc8, 0xe6, 0xfa,
-  0x5f, 0x61, 0x2a, 0xd5, 0x86, 0x9f, 0xbb, 0x42, 0x9c, 0x37, 0x27, 0xa2,
-  0x7e, 0x0e, 0x2b, 0x38, 0x76, 0x56, 0x5a, 0x59, 0xf5, 0x8d, 0xa3, 0x8f,
-  0x90, 0x71, 0x36, 0xb4, 0x27, 0xf9, 0x5a, 0x72, 0xfa, 0x79, 0x8d, 0xce,
-  0x8e, 0xdf, 0x49, 0xa5, 0x70, 0x77, 0x16, 0x32, 0x40, 0x2f, 0xae, 0x49,
-  0x91, 0x7b, 0x1e, 0x4f, 0x6a, 0x18, 0xf0, 0x62, 0x38, 0x02, 0xcd, 0x80,
-  0xc6, 0x73, 0xed, 0xeb, 0x7c, 0x29, 0xbd, 0x6f, 0xe0, 0x9e, 0xab, 0xaa,
-  0xe9, 0x46, 0xab, 0xfa, 0xad, 0xdb, 0x93, 0xd6, 0x85, 0xe2, 0x2c, 0x52,
-  0xe3, 0x89, 0x17, 0xf0, 0x93, 0x44, 0x5b, 0x69, 0xf0, 0xb9, 0x5e, 0x2b,
-  0xd3, 0x31, 0x34, 0x85, 0xff, 0x21, 0x19, 0x6c, 0x53, 0x87, 0xd5, 0xb6,
-  0xbd, 0xb8, 0xb8, 0x19, 0x57, 0x74, 0xc3, 0x21, 0xad, 0xf7, 0x67, 0x56,
-  0xc8, 0x79, 0x3b, 0x68, 0xc4, 0x93, 0x5f, 0x93, 0xfe, 0x78, 0xca, 0xf3,
-  0x4b, 0xb8, 0xd4, 0xf6, 0xcf, 0xb4, 0xf3, 0x78, 0xe2, 0x57, 0xb7, 0x87,
-  0x6f, 0x72, 0x9c, 0xb7, 0x8f, 0x3d, 0x9b, 0xfa, 0xa9, 0x28, 0x0c, 0x82,
-  0x6f, 0x9b, 0x1c, 0x4c, 0x6e, 0x91, 0x74, 0x37, 0xd1, 0x3f, 0x31, 0x9f,
-  0xa3, 0x39, 0x57, 0x28, 0xe5, 0x99, 0xa6, 0x23, 0x29, 0x4a, 0xfe, 0x43,
-  0x4e, 0x4a, 0xc7, 0x61, 0x4b, 0xbe, 0x40, 0xfe, 0x1f, 0x06, 0xc8, 0x6f,
-  0x05, 0x5f, 0x5a, 0x32, 0x47, 0x4f, 0x73, 0x16, 0x7c, 0x68, 0x29, 0xb8,
-  0x33, 0xb6, 0x6e, 0x90, 0x7c, 0x03, 0x1f, 0x67, 0x99, 0x05, 0xe8, 0xaf,
-  0x7a, 0xf1, 0x49, 0x25, 0x3f, 0x6c, 0x46, 0x2a, 0xf8, 0x13, 0x03, 0x37,
-  0x93, 0x4e, 0x0e, 0x8c, 0x9b, 0x93, 0xfb, 0xa6, 0x39, 0x39, 0x1e, 0x97,
-  0xa5, 0xb4, 0xd3, 0x54, 0x2c, 0x5f, 0x22, 0xe9, 0x4c, 0x25, 0xc0, 0xa5,
-  0x94, 0x11, 0xca, 0x85, 0x39, 0xc9, 0x2c, 0xb1, 0xbf, 0x08, 0xd1, 0x54,
-  0xcc, 0x72, 0xcc, 0x4d, 0x99, 0x44, 0xe0, 0x48, 0x82, 0xef, 0x70, 0x3f,
-  0xea, 0xc3, 0x6b, 0x62, 0xcd, 0x99, 0x1b, 0xea, 0x50, 0x4c, 0x7a, 0x36,
-  0xc4, 0x21, 0xee, 0x28, 0xdb, 0x04, 0xf7, 0xa5, 0x65, 0x47, 0xb2, 0x14,
-  0xba, 0x2d, 0xbc, 0xcb, 0xd1, 0xae, 0xac, 0x6e, 0x73, 0x0a, 0x48, 0x6a,
-  0x1c, 0xbe, 0x7f, 0x8b, 0xd2, 0x26, 0x5c, 0xb8, 0xfa, 0xe2, 0xfc, 0xe0,
-  0xdd, 0xf0, 0x8d, 0x98, 0xc6, 0x2f, 0x0a, 0x5f, 0x12, 0x5b, 0xed, 0x41,
-  0xce, 0x7f, 0xec, 0x60, 0xe2, 0xee, 0xa4, 0xde, 0x86, 0xc5, 0xd3, 0x6b,
-  0xb1, 0xec, 0x5e, 0x1b, 0x6f, 0x5f, 0x8a, 0x6d, 0x63, 0x35, 0x30, 0xb4,
-  0xcd, 0xe1, 0x96, 0x13, 0x84, 0xaa, 0xb0, 0x28, 0x9b, 0x2f, 0x58, 0x6f,
-  0xc8, 0xd0, 0xfa, 0x10, 0x96, 0xe5, 0xd0, 0x06, 0x63, 0x9f, 0xca, 0xdd,
-  0xbb, 0x12, 0x8c, 0xf4, 0x90, 0x54, 0xc5, 0xbe, 0x56, 0xaa, 0x09, 0x4a,
-  0xd0, 0x39, 0x73, 0xaa, 0xdc, 0xbd, 0x0a, 0xe5, 0xe7, 0x1a, 0x0f, 0xf3,
-  0x3e, 0xad, 0xe9, 0xcd, 0x7f, 0xdb, 0xdd, 0x8a, 0x37, 0x7f, 0xf1, 0x5b,
-  0x9b, 0x8f, 0x8f, 0xdd, 0x74, 0x33, 0x9f, 0x52, 0xb4, 0xf9, 0x6f, 0x7b,
-  0x5b, 0x0f, 0xce, 0x28, 0xcc, 0x8a, 0xf4, 0x7d, 0xd2, 0x1b, 0x18, 0x6c,
-  0xf2, 0x4a, 0x8e, 0x99, 0x93, 0x99, 0x5c, 0x84, 0x4e, 0x80, 0x37, 0xdc,
-  0x00, 0xec, 0x40, 0xd8, 0xb6, 0x93, 0xd4, 0xbd, 0xe3, 0x4d, 0xb3, 0x4b,
-  0x8e, 0xff, 0xc7, 0x51, 0x08, 0x23, 0x39, 0xdf, 0xa8, 0xc3, 0x2b, 0x0a,
-  0xe8, 0x00, 0x55, 0x31, 0xe0, 0xbe, 0xf7, 0x1e, 0xe8, 0xdb, 0xcf, 0x2e,
-  0x30, 0x4b, 0xc0, 0x8b, 0x8d, 0x30, 0x38, 0x43, 0xc3, 0xd6, 0x7e, 0xd6,
-  0x7c, 0xa1, 0xf5, 0xd5, 0xfd, 0x5d, 0x1c, 0xbf, 0x3d, 0x02, 0x6a, 0xf6,
-  0xeb, 0x63, 0x80, 0xcf, 0x0d, 0x15, 0xfe, 0xd1, 0x2c, 0x10, 0x0e, 0x91,
-  0x37, 0xac, 0x96, 0x22, 0xee, 0x5d, 0x17, 0x6d, 0xe6, 0x38, 0x87, 0xdb,
-  0x09, 0x74, 0xad, 0x31, 0xd0, 0x95, 0x65, 0x5a, 0x1e, 0x5f, 0xf6, 0xdf,
-  0x16, 0x13, 0xd6, 0x92, 0xfb, 0x43, 0x0e, 0x15, 0xa4, 0xb7, 0xe8, 0xc3,
-  0xf7, 0xf3, 0x59, 0xe3, 0xe3, 0x41, 0x24, 0x53, 0x77, 0x6d, 0x55, 0x51,
-  0x9e, 0xbf, 0x6f, 0xf7, 0xfb, 0x18, 0x4c, 0x5f, 0xc2, 0xba, 0xd4, 0xb9,
-  0xd3, 0xc0, 0xe7, 0x30, 0xd6, 0x42, 0x0b, 0x94, 0x4f, 0xef, 0x25, 0x10,
-  0x21, 0xf5, 0xe1, 0x63, 0x3e, 0x7b, 0xf3, 0x0a, 0x19, 0x64, 0xde, 0xc4,
-  0x27, 0x46, 0xbc, 0xb5, 0x10, 0xbc, 0x94, 0x15, 0xa9, 0xec, 0xce, 0xc7,
-  0x3f, 0x69, 0xd5, 0xe6, 0x62, 0x71, 0xcf, 0xb3, 0xbc, 0x6b, 0x84, 0x56,
-  0x44, 0xfd, 0xab, 0x7f, 0x97, 0x77, 0x1a, 0x65, 0xa8, 0x14, 0x63, 0x3a,
-  0xa0, 0x40, 0xfd, 0x44, 0xab, 0x36, 0x9d, 0x96, 0xc1, 0x75, 0xa5, 0xc3,
-  0xb6, 0xea, 0x76, 0x01, 0xb0, 0x69, 0x80, 0xc3, 0xda, 0x1c, 0x67, 0x08,
-  0x02, 0x5b, 0x20, 0xf5, 0xf5, 0x75, 0xe1, 0x9c, 0x63, 0xc4, 0x76, 0x16,
-  0xcd, 0xba, 0xc8, 0x59, 0x62, 0x49, 0xde, 0x92, 0xc3, 0xbf, 0xd1, 0xdf,
-  0xe0, 0xba, 0x0c, 0xf9, 0x3c, 0x32, 0x99, 0xfe, 0x6f, 0x9f, 0x4d, 0xc7,
-  0xf5, 0x9a, 0xac, 0x5f, 0x02, 0x08, 0x03, 0x7e, 0xac, 0x75, 0x19, 0x80,
-  0xe0, 0xc4, 0x08, 0x71, 0xd1, 0x05, 0x01, 0xbe, 0x66, 0x8a, 0xa4, 0x28,
-  0xd5, 0x2e, 0x32, 0xd6, 0x19, 0xc9, 0xc5, 0x2a, 0x09, 0x46, 0xba, 0x5c,
-  0x4c, 0x38, 0x28, 0x43, 0xc2, 0x51, 0xff, 0x1b, 0x40, 0xb1, 0xcb, 0xfb,
-  0x64, 0x77, 0xaf, 0x97, 0xec, 0xed, 0xec, 0xee, 0x45, 0xe6, 0xb0, 0xfe,
-  0xdf, 0x10, 0x14, 0xb5, 0xc7, 0x5f, 0xaf, 0x7f, 0xea, 0x2c, 0x7c, 0x3e,
-  0x03, 0xdf, 0x24, 0x9a, 0xf9, 0x4b, 0xcc, 0x07, 0xfe, 0x59, 0x06, 0x62,
-  0xe6, 0x62, 0xc9, 0x0c, 0x67, 0xc7, 0xd7, 0x96, 0x18, 0x09, 0xad, 0xc6,
-  0xa6, 0x2b, 0x1d, 0x36, 0xe1, 0x4a, 0x3a, 0x52, 0xaf, 0x96, 0x23, 0x5f,
-  0x9c, 0xa5, 0x34, 0x2d, 0xb9, 0x82, 0x68, 0x73, 0x8f, 0xf2, 0xda, 0xb6,
-  0x05, 0xa1, 0x35, 0xd8, 0x1b, 0xa2, 0xf7, 0xd7, 0xc7, 0x87, 0x17, 0x86,
-  0x77, 0x78, 0x09, 0xe1, 0xa9, 0xbc, 0xff, 0xb4, 0x62, 0x8c, 0x0f, 0x3e,
-  0x33, 0xd9, 0xbf, 0xce, 0x48, 0x8c, 0x9e, 0x8f, 0x96, 0x57, 0xfb, 0x7f,
-  0x4d, 0xcb, 0xab, 0x62, 0xfe, 0xd8, 0xf3, 0x13, 0x4e, 0x28, 0xdb, 0x27,
-  0x0e, 0xb5, 0xfb, 0x62, 0xf7, 0x09, 0xe7, 0x7f, 0x4f, 0x73, 0x2e, 0x08,
-  0x04, 0x06, 0xb1, 0x31, 0xdb, 0x10, 0x80, 0x0d, 0x4e, 0x93, 0x70, 0xa8,
-  0x1a, 0xf3, 0xc9, 0x86, 0x5c, 0xf7, 0x69, 0xf8, 0xec, 0x44, 0x9f, 0x95,
-  0xd4, 0xf3, 0x0d, 0xcd, 0x55, 0xd8, 0x40, 0x9a, 0xe6, 0x72, 0xb1, 0xd1,
-  0x84, 0x88, 0x7f, 0x64, 0xae, 0xe8, 0xc2, 0xd5, 0x9e, 0x3c, 0x74, 0xc0,
-  0xf7, 0x9c, 0x41, 0x54, 0x66, 0xe9, 0x8d, 0xaf, 0x9e, 0xec, 0xd1, 0x37,
-  0xcc, 0xe5, 0x71, 0xfe, 0xe6, 0x50, 0x10, 0x4c, 0x2d, 0x5f, 0x8a, 0x97,
-  0x3a, 0x71, 0xa6, 0xa9, 0x2d, 0x8c, 0xf2, 0x91, 0xfe, 0x91, 0xdb, 0xb0,
-  0x3f, 0x19, 0x7d, 0xc2, 0x43, 0x74, 0xee, 0x04, 0x2c, 0xee, 0xa0, 0x59,
-  0x7a, 0x07, 0x8a, 0x1a, 0xd7, 0x0f, 0xb1, 0x32, 0xc9, 0x9b, 0x52, 0x89,
-  0x56, 0x3c, 0x0e, 0x18, 0x9a, 0x15, 0xa0, 0x36, 0xeb, 0x0e, 0x8d, 0x1b,
-  0x55, 0x5e, 0x5f, 0x1f, 0x9c, 0x05, 0x8a, 0x2e, 0x2b, 0x92, 0xde, 0xa8,
-  0x87, 0xe7, 0xa0, 0xe8, 0x70, 0x25, 0x76, 0xad, 0xc6, 0xd4, 0xf3, 0x2a,
-  0x4a, 0xcd, 0x7c, 0x12, 0xb2, 0x11, 0x07, 0xc8, 0x17, 0x7a, 0x9f, 0xb0,
-  0xfd, 0x89, 0xab, 0x19, 0x4c, 0x27, 0x29, 0x3b, 0x42, 0xf5, 0x16, 0x62,
-  0x99, 0x8b, 0xdb, 0xca, 0x35, 0x1a, 0x8a, 0xf6, 0xe6, 0x63, 0xa2, 0x49,
-  0x1c, 0x9a, 0xad, 0xa2, 0xf5, 0x46, 0xf8, 0x31, 0x64, 0x25, 0xdf, 0xdb,
-  0x04, 0x84, 0x3f, 0xd3, 0xe0, 0xd3, 0xea, 0x86, 0x58, 0xa9, 0x38, 0xf0,
-  0xa9, 0xf7, 0x5c, 0x5d, 0xe0, 0x30, 0xfa, 0xe4, 0x12, 0x48, 0x03, 0xf3,
-  0x13, 0xe3, 0x20, 0x35, 0x36, 0x4c, 0xae, 0x20, 0x68, 0x9c, 0xd3, 0x2a,
-  0x13, 0xd4, 0xc2, 0xe4, 0xe2, 0xae, 0x10, 0x15, 0xa3, 0xb2, 0xf0, 0x5a,
-  0x09, 0x45, 0xad, 0x96, 0xb9, 0x48, 0x91, 0xb4, 0x79, 0xcc, 0x0f, 0x82,
-  0x2a, 0xb2, 0xeb, 0xce, 0xf2, 0xf5, 0xda, 0xf9, 0x3d, 0x87, 0xaf, 0xbf,
-  0x4f, 0x90, 0x4f, 0x8f, 0x3e, 0x0e, 0x81, 0xe7, 0x8f, 0x10, 0x86, 0x19,
-  0x6b, 0x7f, 0xdf, 0x2e, 0x71, 0xde, 0x0f, 0xaf, 0xd3, 0x05, 0x14, 0xa0,
-  0xdd, 0x1d, 0x98, 0x4b, 0x7e, 0xb4, 0xcc, 0x3c, 0x1c, 0x54, 0xab, 0x73,
-  0x5f, 0xad, 0x07, 0x96, 0x94, 0x09, 0xca, 0xd4, 0x43, 0x03, 0x6a, 0x1a,
-  0x69, 0xe9, 0xfa, 0xac, 0xb6, 0x05, 0xc5, 0xbf, 0x22, 0xd2, 0x28, 0xab,
-  0xc9, 0xcd, 0xf6, 0x98, 0xfe, 0x79, 0xb2, 0xb3, 0xcd, 0x40, 0x9a, 0x35,
-  0xdb, 0x34, 0x41, 0x93, 0x7b, 0x7b, 0xcf, 0x9e, 0xf5, 0x92, 0x75, 0x58,
-  0x19, 0xad, 0x03, 0x1c, 0x09, 0x3a, 0x59, 0xeb, 0xd1, 0x7a, 0xba, 0xdb,
-  0xe5, 0xe5, 0x18, 0xff, 0xc3, 0x7b, 0x56, 0x46, 0xf2, 0x42, 0xd3, 0x6e,
-  0x78, 0x21, 0xe6, 0x21, 0x38, 0x8e, 0xd0, 0x15, 0xbe, 0x3b, 0x76, 0x86,
-  0x24, 0x78, 0x8d, 0x16, 0x59, 0xb1, 0x30, 0xf7, 0xf0, 0x4c, 0x0b, 0x84,
-  0x70, 0xff, 0x81, 0x4f, 0x8d, 0x1d, 0xfa, 0x12, 0x0f, 0xa7, 0x28, 0x08,
-  0xd5, 0x72, 0xd4, 0xd7, 0x74, 0x60, 0x51, 0x2b, 0x73, 0x3a, 0xba, 0xf4,
-  0xe7, 0xd4, 0xec, 0xf5, 0x1d, 0x96, 0xfc, 0x4d, 0xb2, 0xae, 0xc4, 0x85,
-  0x1f, 0x03, 0xf6, 0xee, 0x66, 0x63, 0x4c, 0xa3, 0x78, 0xa5, 0x7f, 0xfc,
-  0xfb, 0xbf, 0x53, 0xb3, 0xff, 0x8e, 0x56, 0x5e, 0xfd, 0x5b, 0x55, 0x5f,
-  0x07, 0xcf, 0xac, 0x2b, 0xc5, 0x1f, 0x7b, 0xdf, 0x36, 0xc7, 0xab, 0x31,
-  0xce, 0x2c, 0x67, 0xad, 0xbd, 0x3d, 0x51, 0x96, 0xdc, 0x0b, 0xe6, 0x97,
-  0x73, 0x3e, 0xa1, 0x58, 0x49, 0x5d, 0xb8, 0xc8, 0x37, 0xf0, 0x3b, 0x67,
-  0xc8, 0x43, 0xa7, 0x9b, 0x84, 0x61, 0x04, 0xb7, 0x4c, 0xc6, 0x38, 0x7a,
-  0xf7, 0xc3, 0xf1, 0xf9, 0xe9, 0xbb, 0xb7, 0x47, 0xef, 0x2e, 0x92, 0x1f,
-  0x0e, 0xce, 0x8f, 0x0f, 0xbe, 0x39, 0xd1, 0x74, 0x77, 0x4c, 0x01, 0x51,
-  0x3e, 0x22, 0x7c, 0xb7, 0x60, 0x60, 0x83, 0x4c, 0xa4, 0x68, 0xf1, 0x90,
-  0x56, 0x5d, 0xe4, 0x0f, 0x8a, 0x61, 0xce, 0xaa, 0xc8, 0x07, 0xae, 0x83,
-  0xd4, 0x83, 0xf4, 0xf9, 0xc1, 0x4a, 0x22, 0x41, 0x7b, 0xba, 0x0f, 0x12,
-  0xa8, 0x11, 0x80, 0x04, 0x32, 0x35, 0x06, 0xe5, 0x8b, 0x01, 0xba, 0xea,
-  0x1a, 0xdf, 0x4a, 0x0e, 0xbe, 0x95, 0x1a, 0xb1, 0x57, 0x79, 0x0f, 0xe5,
-  0x76, 0xf1, 0x63, 0x38, 0x38, 0x39, 0xf1, 0x5d, 0x3d, 0x5c, 0x85, 0x46,
-  0xf1, 0x97, 0x24, 0x7b, 0x8b, 0x1b, 0x85, 0x67, 0xf0, 0xaa, 0xf0, 0x80,
-  0xec, 0xf3, 0xfb, 0x10, 0x7b, 0x1d, 0x9d, 0xd1, 0x76, 0x6c, 0x0a, 0x70,
-  0x06, 0xdc, 0xc4, 0x74, 0x82, 0xf2, 0xea, 0xa6, 0x97, 0x6c, 0xfc, 0xdb,
-  0x86, 0x96, 0x12, 0x67, 0xb4, 0x60, 0xa9, 0x71, 0xb3, 0xe5, 0x07, 0xf5,
-  0xee, 0xd4, 0x8f, 0x49, 0x3d, 0x9f, 0x6e, 0x00, 0xee, 0x45, 0xef, 0xb7,
-  0xae, 0x4c, 0xa0, 0xe1, 0x80, 0x51, 0xff, 0xb8, 0x16, 0x82, 0x70, 0x78,
-  0x00, 0x4a, 0xa3, 0xf0, 0x6c, 0x45, 0xdf, 0x65, 0xb5, 0x2d, 0x1d, 0x07,
-  0xa0, 0xd0, 0x3c, 0xd7, 0x39, 0x6c, 0x1d, 0xae, 0x38, 0x97, 0x99, 0x03,
-  0x69, 0xa9, 0x61, 0xd4, 0x53, 0x7f, 0xe2, 0xb2, 0x52, 0x16, 0xca, 0x54,
-  0xf5, 0x71, 0xdb, 0x6a, 0xdd, 0xb0, 0x93, 0x11, 0x09, 0x01, 0x65, 0x3e,
-  0x51, 0x90, 0xc1, 0x28, 0x55, 0x0c, 0xd8, 0x37, 0x75, 0x7e, 0xc8, 0x98,
-  0xec, 0x73, 0x54, 0x65, 0xf4, 0xb5, 0x34, 0x38, 0x78, 0x98, 0xd8, 0x48,
-  0x89, 0x8c, 0xbc, 0xb9, 0x4a, 0x21, 0x1c, 0x90, 0xcb, 0x42, 0x7a, 0x7a,
-  0x55, 0x98, 0x00, 0x9e, 0x3a, 0xaf, 0xb9, 0xab, 0x38, 0x16, 0x08, 0xf5,
-  0x0e, 0x39, 0xcc, 0xd9, 0x2c, 0xd9, 0xbf, 0x6e, 0x1e, 0x02, 0xc4, 0x97,
-  0x61, 0xcb, 0xad, 0x82, 0x74, 0x15, 0xe4, 0x66, 0xfb, 0xf4, 0x05, 0xf0,
-  0x12, 0x89, 0xd2, 0x37, 0x28, 0x2f, 0x86, 0x4f, 0xb3, 0x5c, 0x6e, 0x8e,
-  0x74, 0xe4, 0x61, 0xe1, 0x41, 0x6e, 0x52, 0x83, 0x56, 0xb9, 0x49, 0x33,
-  0x5e, 0xd3, 0xe9, 0x99, 0x22, 0x83, 0xcc, 0x38, 0x51, 0x9a, 0x8c, 0xf2,
-  0x2b, 0xc1, 0x04, 0x40, 0x02, 0x3a, 0xa8, 0x84, 0x21, 0xde, 0x48, 0xb3,
-  0xc7, 0x56, 0x31, 0x80, 0x1b, 0x0b, 0xef, 0xd7, 0xc5, 0x34, 0x44, 0x19,
-  0xb3, 0x99, 0x54, 0x5a, 0x4b, 0xcd, 0x6c, 0x9f, 0xec, 0xfb, 0x58, 0x62,
-  0x1d, 0x2d, 0x1c, 0x4d, 0xe1, 0xc9, 0x35, 0x38, 0x0f, 0x46, 0x75, 0xc6,
-  0x4a, 0x9c, 0x73, 0x2a, 0x90, 0xe5, 0x52, 0xf3, 0x3a, 0x58, 0xe0, 0x32,
-  0xb8, 0x05, 0x1b, 0xd2, 0x50, 0xe7, 0x71, 0xd3, 0xe1, 0x8b, 0xa3, 0x95,
-  0xb1, 0x20, 0xb4, 0x82, 0xe8, 0xc5, 0xa5, 0xdc, 0x2c, 0x08, 0xa4, 0x9b,
-  0xa5, 0xd8, 0x59, 0x44, 0x13, 0x18, 0x34, 0xad, 0xd4, 0x66, 0xc0, 0x78,
-  0xe6, 0x44, 0x22, 0xf2, 0x98, 0x68, 0x90, 0xfa, 0x57, 0xdf, 0xd5, 0x32,
-  0x53, 0xc7, 0xf3, 0x96, 0x0f, 0x3c, 0x10, 0x31, 0x00, 0xd4, 0x3a, 0xd6,
-  0x6a, 0x92, 0xec, 0xa2, 0x47, 0x29, 0x4c, 0x06, 0x84, 0x6a, 0x18, 0x1f,
-  0x13, 0x4b, 0xb8, 0x99, 0x4e, 0x03, 0x80, 0x71, 0xb1, 0x47, 0xa4, 0x1d,
-  0xe1, 0x03, 0xde, 0xa1, 0x81, 0x70, 0x00, 0x09, 0xfd, 0x11, 0x30, 0xe2,
-  0x60, 0x22, 0x1a, 0x54, 0x0e, 0xf1, 0xac, 0x65, 0xd3, 0x0c, 0x18, 0x9a,
-  0xb9, 0xc7, 0xc3, 0x8b, 0x49, 0xeb, 0x69, 0xe4, 0xe9, 0x4c, 0x84, 0x47,
-  0x4f, 0x7d, 0xb3, 0x7b, 0x09, 0x3b, 0x5c, 0x5b, 0x3b, 0x7c, 0x3f, 0xbc,
-  0x38, 0x7d, 0x9b, 0x9c, 0xbe, 0xbf, 0x38, 0x7b, 0x7f, 0xa1, 0x37, 0xd7,
-  0x48, 0x82, 0xb6, 0x25, 0x74, 0x41, 0xa4, 0x00, 0xdb, 0xcc, 0x99, 0x3a,
-  0xf8, 0x39, 0xc6, 0xa4, 0x60, 0x58, 0xc1, 0x00, 0x51, 0xc8, 0x25, 0x65,
-  0x31, 0xd6, 0x96, 0xe0, 0x15, 0xf3, 0x92, 0xdf, 0xd1, 0x92, 0x73, 0x42,
-  0x2d, 0x5b, 0xf2, 0x2c, 0xc7, 0x8b, 0xf5, 0x1e, 0x3b, 0x6b, 0xcd, 0x5a,
-  0x35, 0xf7, 0x4d, 0x3d, 0x86, 0xbd, 0xf3, 0x4d, 0x04, 0xa7, 0xb0, 0x64,
-  0xa6, 0x18, 0x77, 0xbc, 0xed, 0x27, 0x8c, 0xe9, 0xd4, 0x82, 0x9b, 0x66,
-  0x81, 0xb6, 0xb0, 0x5a, 0x8e, 0x35, 0x6a, 0x66, 0x16, 0x86, 0x09, 0x8e,
-  0x75, 0x41, 0x33, 0xbc, 0x76, 0x21, 0xf1, 0x08, 0x23, 0xe2, 0x50, 0x40,
-  0x89, 0xa0, 0x40, 0xcc, 0x9d, 0xa8, 0x0c, 0xa4, 0x08, 0xc2, 0x67, 0xd1,
-  0xb9, 0x65, 0xef, 0x92, 0x8d, 0x1f, 0xb3, 0xb0, 0xc1, 0x3f, 0xfe, 0x07,
-  0xf2, 0x36, 0x3f, 0xd8, 0x27, 0xff, 0x29, 0x5d, 0xfe, 0x32, 0xdf, 0xe0,
-  0x08, 0xba, 0xa6, 0xab, 0xfc, 0xfb, 0xa3, 0xf3, 0x6f, 0x8e, 0xce, 0x4f,
-  0x87, 0xcc, 0x0f, 0xcc, 0xde, 0xd5, 0xa5, 0xf5, 0x9b, 0xac, 0x1c, 0x65,
-  0x65, 0xa1, 0x75, 0xb4, 0xec, 0xaf, 0x67, 0xdb, 0xdf, 0x0e, 0x87, 0x07,
-  0x67, 0xc7, 0xae, 0x52, 0x8d, 0xcb, 0x20, 0x13, 0x1d, 0x69, 0x2e, 0x39,
-  0x8e, 0x98, 0xbf, 0xbd, 0x42, 0x74, 0x31, 0xbe, 0x91, 0xc8, 0xe2, 0x8e,
-  0x53, 0xda, 0x0c, 0xeb, 0xf0, 0x46, 0x6b, 0x62, 0x21, 0x1a, 0x36, 0x24,
-  0xa8, 0x10, 0x6d, 0x5e, 0x60, 0xe1, 0xe1, 0x0c, 0xe8, 0xb9, 0x10, 0xbc,
-  0x9b, 0x72, 0xd4, 0x27, 0x6a, 0xbf, 0xb1, 0xc2, 0xcd, 0x92, 0x08, 0x41,
-  0xac, 0x52, 0x22, 0xa4, 0xbd, 0xb1, 0x81, 0x84, 0xba, 0xbc, 0xde, 0xbe,
-  0xc1, 0xf9, 0x40, 0x15, 0x95, 0xe9, 0x40, 0xb8, 0xbb, 0x1c, 0x28, 0x0b,
-  0x7b, 0x05, 0x8b, 0x7d, 0x08, 0x9d, 0x82, 0x7a, 0x73, 0xa5, 0x0f, 0xc5,
-  0xe0, 0x45, 0x9f, 0x3c, 0x75, 0x30, 0x5d, 0x61, 0x1d, 0xf1, 0x4b, 0x92,
-  0xc0, 0x17, 0x77, 0x13, 0xbd, 0x44, 0x18, 0xa5, 0x7a, 0x2e, 0xfe, 0x09,
-  0xe1, 0xe1, 0x6d, 0x0f, 0x15, 0xca, 0x33, 0x72, 0xc6, 0x86, 0xc6, 0xa3,
-  0x27, 0xa3, 0x69, 0x3a, 0xbf, 0xe1, 0xdb, 0x8c, 0xef, 0x27, 0xe8, 0x9c,
-  0x06, 0x3e, 0x85, 0xb2, 0x99, 0xec, 0x90, 0x54, 0x3c, 0x08, 0x16, 0x02,
-  0xa7, 0x60, 0x6e, 0xf7, 0x62, 0xcc, 0x77, 0x18, 0x5b, 0x81, 0xeb, 0x8d,
-  0x8f, 0x93, 0x5f, 0x04, 0xd8, 0x8e, 0x8e, 0x4e, 0xe8, 0x62, 0x72, 0x59,
-  0x26, 0xac, 0xa3, 0x67, 0x53, 0xd8, 0x82, 0x2d, 0x24, 0x48, 0x12, 0x2b,
-  0x73, 0x66, 0x64, 0xc2, 0x3d, 0x0c, 0x40, 0x9d, 0x1d, 0x48, 0x4c, 0x2e,
-  0x9c, 0x3f, 0x5a, 0xb9, 0x32, 0x23, 0xca, 0xb9, 0x85, 0x89, 0x31, 0x3a,
-  0xa8, 0xaf, 0x3a, 0x12, 0xd6, 0xbf, 0xd1, 0x78, 0xbb, 0x43, 0x1f, 0x10,
-  0xe4, 0x0a, 0x82, 0xc9, 0x20, 0xbc, 0x58, 0xea, 0x5c, 0x8c, 0x8d, 0xf4,
-  0x96, 0x95, 0xdb, 0x24, 0xaf, 0xc7, 0xac, 0x00, 0x02, 0x6a, 0x36, 0x51,
-  0x87, 0x87, 0xc3, 0x03, 0xb2, 0x98, 0xe5, 0x66, 0x9c, 0xb0, 0x0d, 0x5c,
-  0xc2, 0x01, 0x60, 0xbd, 0x9d, 0xd6, 0xe6, 0x35, 0xe4, 0x18, 0x57, 0xbd,
-  0x81, 0xeb, 0x09, 0xb3, 0x9c, 0xb2, 0x01, 0x55, 0x1b, 0x86, 0xe7, 0x0a,
-  0x64, 0x05, 0x1b, 0x07, 0x25, 0x61, 0x83, 0xd5, 0x18, 0x27, 0xdf, 0xf6,
-  0xdf, 0xe1, 0xba, 0x28, 0xfa, 0xa3, 0x25, 0x2b, 0x66, 0x41, 0xa1, 0x2e,
-  0x49, 0xe2, 0x24, 0x7d, 0x4d, 0xd0, 0xd4, 0xf8, 0x7b, 0x38, 0xa4, 0x38,
-  0x3d, 0x5e, 0x7c, 0x54, 0x9c, 0x2f, 0xd9, 0x44, 0xda, 0x71, 0xf8, 0x2a,
-  0x92, 0x84, 0xe0, 0x2b, 0x08, 0xbb, 0x09, 0xea, 0x26, 0xbb, 0x70, 0xc1,
-  0xb9, 0x96, 0x79, 0x65, 0xd7, 0x4a, 0x33, 0xe4, 0xba, 0x76, 0x80, 0xf7,
-  0x17, 0x2c, 0x26, 0x64, 0x0a, 0x03, 0x6f, 0xb1, 0xd4, 0x96, 0xb9, 0x71,
-  0x5b, 0xa3, 0xb4, 0x94, 0x40, 0x43, 0xa4, 0x53, 0xa9, 0xd3, 0xb1, 0xf2,
-  0x2a, 0x91, 0xc3, 0x54, 0x5f, 0x5c, 0xfc, 0xe5, 0xec, 0xe8, 0x95, 0xbd,
-  0xf9, 0xd0, 0x9e, 0x09, 0x62, 0x1a, 0x07, 0xcd, 0x64, 0x8a, 0x50, 0x1a,
-  0x14, 0xc7, 0x26, 0x22, 0xeb, 0xd7, 0xe6, 0xcc, 0x97, 0x6e, 0xfa, 0xc9,
-  0x4f, 0xaf, 0x8f, 0x87, 0x67, 0x27, 0xa7, 0x87, 0xaf, 0x5e, 0xfe, 0x64,
-  0x2c, 0xf9, 0x2b, 0xf8, 0x08, 0x44, 0x4e, 0x73, 0x9f, 0x79, 0x44, 0x07,
-  0x7d, 0xef, 0xdd, 0xd1, 0x8f, 0x1f, 0x48, 0x3b, 0x78, 0x05, 0x5c, 0xf7,
-  0xde, 0x6d, 0x3a, 0xd5, 0x97, 0xa0, 0x62, 0x45, 0x64, 0xbb, 0x41, 0x13,
-  0x82, 0xaf, 0xbd, 0xb0, 0xae, 0x3e, 0xa9, 0x4f, 0x54, 0xb8, 0xb7, 0x38,
-  0xba, 0xa0, 0x14, 0x55, 0xda, 0xc8, 0xab, 0x8d, 0x54, 0x13, 0xf6, 0xd7,
-  0xff, 0x46, 0x2d, 0x41, 0x95, 0x88, 0x21, 0x08, 0x5d, 0xf3, 0x1c, 0xb8,
-  0xaa, 0xdf, 0xf8, 0x80, 0x5e, 0xc5, 0x4f, 0x2e, 0x11, 0xc1, 0xe2, 0x00,
-  0x28, 0xb5, 0x44, 0x35, 0x3b, 0xbd, 0x15, 0xa5, 0x52, 0xa1, 0x97, 0x10,
-  0x43, 0x6b, 0xe1, 0xf4, 0xc6, 0xc7, 0x54, 0x84, 0x71, 0x63, 0x49, 0xad,
-  0x58, 0x2e, 0x57, 0xe4, 0x39, 0x3b, 0x3a, 0x1f, 0x1e, 0x0f, 0x2f, 0xa0,
-  0x46, 0x69, 0xe5, 0x46, 0x35, 0x42, 0x5b, 0x59, 0x4d, 0x06, 0x6d, 0x68,
-  0x02, 0x8e, 0x86, 0xd5, 0x42, 0x1a, 0x27, 0xda, 0xb1, 0xb9, 0x66, 0x16,
-  0x27, 0x6e, 0x00, 0x49, 0x0d, 0x85, 0x20, 0x2a, 0xb0, 0xb9, 0xe9, 0xa5,
-  0x1d, 0xe0, 0x42, 0x49, 0xa3, 0x55, 0x34, 0x83, 0x0b, 0xde, 0xf0, 0xee,
-  0x4c, 0xf3, 0x51, 0x50, 0x2a, 0xbb, 0xe9, 0x43, 0x46, 0x78, 0x82, 0x42,
-  0x74, 0x84, 0x47, 0xc8, 0x0c, 0xe2, 0x3e, 0x35, 0x5a, 0x8b, 0xf9, 0xea,
-  0xb5, 0xa6, 0x69, 0x8d, 0x61, 0x02, 0xab, 0x53, 0x54, 0x59, 0x39, 0x09,
-  0x8b, 0x96, 0xf3, 0xa7, 0x41, 0x14, 0xaa, 0xa2, 0x3e, 0x31, 0x60, 0xad,
-  0xb2, 0x6c, 0x30, 0xe5, 0x5c, 0x52, 0xd1, 0x60, 0x69, 0x21, 0xa9, 0x85,
-  0x53, 0xeb, 0x39, 0x50, 0x48, 0x67, 0xd6, 0x11, 0x41, 0x54, 0x74, 0xbc,
-  0x42, 0x0e, 0x1b, 0x43, 0x6b, 0x4d, 0x20, 0x6f, 0xb1, 0x09, 0x2e, 0xec,
-  0xcc, 0xae, 0x53, 0xac, 0xe0, 0x68, 0x19, 0x96, 0x82, 0x73, 0xa3, 0x97,
-  0xaa, 0x24, 0xbc, 0xf0, 0x1c, 0x22, 0x99, 0x96, 0x8c, 0x5d, 0x59, 0x2b,
-  0x54, 0xbc, 0x29, 0x3e, 0x1a, 0xef, 0x38, 0x68, 0xa2, 0xf8, 0x18, 0x5d,
-  0x5a, 0xb9, 0xd2, 0x87, 0x56, 0x34, 0xa8, 0x1d, 0x09, 0xf2, 0x2d, 0x33,
-  0x0b, 0x5c, 0x12, 0x33, 0x43, 0x05, 0x8f, 0xc3, 0x7c, 0xec, 0x2e, 0x63,
-  0x64, 0x1d, 0xc1, 0xc1, 0x58, 0x2a, 0x42, 0x12, 0xb1, 0x3f, 0x98, 0x96,
-  0xb9, 0xe0, 0x24, 0x57, 0x62, 0x86, 0xdb, 0xcd, 0xd0, 0xf3, 0x7c, 0x1c,
-  0xb7, 0x2c, 0x77, 0x40, 0x56, 0x62, 0x5f, 0xbf, 0xd7, 0x0e, 0x5d, 0x86,
-  0xbc, 0x6d, 0x56, 0x4f, 0x12, 0xae, 0x52, 0xce, 0xef, 0x31, 0xc3, 0x6e,
-  0x90, 0x27, 0x5a, 0x69, 0xf6, 0xad, 0xf3, 0x4f, 0x33, 0xc3, 0x6b, 0x54,
-  0xdd, 0xc5, 0xec, 0x1a, 0xbe, 0x41, 0x92, 0x2f, 0x17, 0x5c, 0x42, 0x69,
-  0xac, 0x18, 0xf2, 0x1c, 0xb5, 0xeb, 0x1a, 0xb4, 0x4b, 0xc4, 0x2f, 0x16,
-  0xad, 0xea, 0xdb, 0xf7, 0x27, 0x17, 0xc7, 0x67, 0xa1, 0xff, 0x31, 0xf9,
-  0xf1, 0xf8, 0xe2, 0x3b, 0x92, 0xda, 0x87, 0xc7, 0xef, 0xbe, 0x3d, 0x81,
-  0x93, 0xe7, 0xed, 0xdb, 0x83, 0x77, 0x80, 0x17, 0x78, 0xc7, 0xa1, 0x8d,
-  0x07, 0xac, 0x38, 0x80, 0x1d, 0xd1, 0x12, 0x83, 0x76, 0x90, 0x78, 0xde,
-  0xeb, 0xfa, 0x1a, 0x5a, 0xc7, 0x4f, 0xaa, 0x2a, 0xcf, 0x9b, 0x8b, 0xb4,
-  0xc6, 0x35, 0xb2, 0x59, 0x33, 0xb8, 0x87, 0x61, 0x87, 0x8f, 0x2d, 0x94,
-  0x2d, 0x2c, 0x74, 0x1b, 0x3c, 0x9e, 0x93, 0x1c, 0x45, 0x42, 0x67, 0x3f,
-  0xba, 0xdc, 0xdd, 0xde, 0x7f, 0xc1, 0x3b, 0xea, 0xa0, 0x67, 0x59, 0x8f,
-  0x21, 0x99, 0x69, 0xae, 0x7a, 0x8d, 0xdc, 0x97, 0xcd, 0xa4, 0x03, 0xea,
-  0x91, 0x87, 0xc4, 0x81, 0x04, 0x85, 0x37, 0x09, 0x42, 0xe3, 0x84, 0xd2,
-  0x7c, 0x7e, 0x12, 0x5e, 0xa8, 0x83, 0x46, 0xcd, 0x31, 0x8b, 0x0f, 0xbc,
-  0x2a, 0x32, 0x7f, 0x72, 0xfb, 0xa7, 0xd6, 0x8c, 0xd9, 0x7f, 0x59, 0x0d,
-  0x93, 0xcb, 0xa5, 0x0f, 0xbe, 0xd6, 0xa7, 0x2d, 0xd9, 0x72, 0x75, 0x86,
-  0xd4, 0x7c, 0xb6, 0x2f, 0x62, 0xa5, 0x03, 0x57, 0xb6, 0xf2, 0x7c, 0xd4,
-  0x9c, 0xb5, 0xac, 0xb1, 0x28, 0x1c, 0x90, 0xad, 0x79, 0x4d, 0x3a, 0x67,
-  0xe6, 0x96, 0xf6, 0x58, 0x23, 0x2d, 0x5b, 0xee, 0xbb, 0x53, 0xb3, 0x1f,
-  0x5a, 0x5e, 0x9b, 0x2b, 0xfc, 0xe6, 0x5d, 0xa7, 0x5c, 0x5a, 0xad, 0x28,
-  0x06, 0xd9, 0xc7, 0x0c, 0x5e, 0x4e, 0xfc, 0xfa, 0xd7, 0xc5, 0x55, 0x98,
-  0xf2, 0x26, 0x85, 0xa5, 0x17, 0xb1, 0x9d, 0x55, 0x24, 0x67, 0x11, 0x8b,
-  0xb4, 0x98, 0x5d, 0x63, 0x04, 0x5a, 0xa1, 0x6e, 0x77, 0x55, 0x87, 0xfa,
-  0xfd, 0x5e, 0xf7, 0xfb, 0x3d, 0x31, 0x3b, 0x1e, 0x9f, 0xdd, 0x3e, 0x77,
-  0x08, 0xa8, 0x92, 0xc8, 0x1d, 0x8a, 0x6f, 0x26, 0x14, 0x80, 0xc2, 0xf0,
-  0xa8, 0xdc, 0x39, 0xa9, 0xf0, 0x44, 0x31, 0xfe, 0x23, 0x84, 0x6c, 0x59,
-  0x72, 0x82, 0x2a, 0x3f, 0xc2, 0x76, 0x62, 0x89, 0xfb, 0xe5, 0x28, 0x3b,
-  0xe6, 0x53, 0xb8, 0xae, 0xa8, 0x41, 0xfa, 0xfe, 0xa9, 0x0b, 0xc6, 0xf7,
-  0x3c, 0x8d, 0x8b, 0xb4, 0x69, 0x3a, 0x54, 0x3f, 0x5f, 0xdc, 0x5a, 0x95,
-  0x5f, 0xfa, 0xf5, 0xb9, 0x2b, 0xd0, 0x53, 0x35, 0x9c, 0x54, 0x0d, 0xb4,
-  0x61, 0x63, 0xfe, 0x3c, 0x38, 0x8e, 0x8b, 0x04, 0x67, 0xf0, 0x4a, 0x46,
-  0x6b, 0x5c, 0x59, 0x33, 0x22, 0x3b, 0x28, 0x53, 0xca, 0x16, 0xe6, 0x29,
-  0xa7, 0xc6, 0x32, 0x3f, 0x0a, 0x98, 0x4b, 0x88, 0xf4, 0xaf, 0xbb, 0xfe,
-  0xf3, 0xde, 0xce, 0xce, 0xee, 0xfe, 0xee, 0x97, 0x2f, 0x76, 0xf6, 0x77,
-  0x77, 0x77, 0xf7, 0xf6, 0x77, 0xf7, 0xf7, 0xf7, 0x76, 0x7e, 0xdd, 0x86,
-  0xfd, 0xe8, 0x36, 0xcf, 0xee, 0xcc, 0x33, 0x25, 0xc9, 0x78, 0x4c, 0xd6,
-  0x52, 0xad, 0x5d, 0x35, 0x78, 0xd5, 0x73, 0x4d, 0xf2, 0x71, 0xb0, 0x12,
-  0x12, 0x33, 0x2f, 0x10, 0x72, 0x0b, 0x9f, 0x6a, 0xca, 0x67, 0x30, 0x80,
-  0xb9, 0xe6, 0x51, 0xfd, 0x6d, 0x89, 0x99, 0x8e, 0x20, 0x0e, 0xb0, 0x4c,
-  0x53, 0xb9, 0xc4, 0xbe, 0xab, 0x69, 0x31, 0x1a, 0x71, 0xea, 0x82, 0xcb,
-  0x6d, 0x1d, 0x24, 0xc0, 0x52, 0xbd, 0x11, 0x92, 0x50, 0xd7, 0x01, 0x47,
-  0x15, 0xca, 0x41, 0xf7, 0xab, 0x23, 0x82, 0x97, 0x46, 0x52, 0x8f, 0x0b,
-  0xd4, 0x15, 0x98, 0x80, 0x29, 0xd1, 0x22, 0x95, 0x2e, 0xe7, 0x25, 0xb9,
-  0xcc, 0xbe, 0xdc, 0xd9, 0xdf, 0x47, 0xe9, 0x8f, 0x3f, 0xee, 0xf6, 0x34,
-  0x20, 0x34, 0x8c, 0x72, 0xef, 0xb9, 0xeb, 0x49, 0xda, 0x80, 0xfa, 0x11,
-  0xce, 0x73, 0xbe, 0x9c, 0x65, 0x25, 0x29, 0x22, 0x28, 0x1e, 0xcb, 0x11,
-  0x91, 0x6c, 0xf4, 0x16, 0x8c, 0x35, 0x46, 0x64, 0x69, 0x45, 0xe3, 0xe3,
-  0x46, 0x10, 0xac, 0x58, 0x97, 0x85, 0x2e, 0x78, 0x41, 0x7e, 0x8a, 0xae,
-  0x6d, 0x2e, 0x7f, 0xc3, 0x86, 0x7c, 0xc9, 0x65, 0x91, 0x2c, 0x1e, 0xb9,
-  0x6f, 0x95, 0x33, 0xf0, 0xe1, 0x9a, 0x4b, 0x49, 0x53, 0x3c, 0x2e, 0x32,
-  0x3c, 0x5b, 0x4c, 0x02, 0xe1, 0x56, 0x13, 0x78, 0x7e, 0x0e, 0x26, 0xbb,
-  0xf7, 0x6c, 0xf7, 0x57, 0x89, 0x57, 0xc4, 0x81, 0xf0, 0xab, 0xa6, 0xe5,
-  0xe0, 0x26, 0x61, 0x8a, 0x86, 0x11, 0xd2, 0x66, 0x36, 0xb8, 0x1a, 0x98,
-  0x54, 0xa1, 0xd6, 0xc6, 0x5e, 0x18, 0x35, 0x2e, 0x38, 0xe5, 0x52, 0xa8,
-  0x98, 0xf5, 0x34, 0x33, 0x28, 0x99, 0x41, 0x58, 0x8c, 0x99, 0x8d, 0xba,
-  0x3e, 0x74, 0xc3, 0x1c, 0x5d, 0x1c, 0xd0, 0xe5, 0xf1, 0x7d, 0x57, 0xd1,
-  0x7f, 0x9b, 0x91, 0x56, 0x8e, 0xcd, 0xde, 0xe4, 0xf3, 0x70, 0xeb, 0xd0,
-  0x81, 0xb1, 0x76, 0x4f, 0x93, 0x4d, 0x38, 0x2d, 0x9e, 0x7d, 0xf9, 0xec,
-  0xe9, 0x96, 0x94, 0x62, 0x90, 0xd7, 0x32, 0x24, 0x88, 0xb0, 0x55, 0x52,
-  0xd1, 0x69, 0x60, 0x4e, 0x76, 0x2c, 0xe9, 0xfd, 0xf9, 0xb1, 0x1c, 0xe9,
-  0x6b, 0x01, 0x11, 0x10, 0xa5, 0xb7, 0x8d, 0x26, 0xc7, 0xf7, 0x6d, 0x20,
-  0x64, 0xcc, 0x72, 0x20, 0x1d, 0x72, 0xf2, 0x35, 0x2e, 0x46, 0x97, 0xfc,
-  0xcf, 0x37, 0x2c, 0x1d, 0xd0, 0x82, 0x0b, 0x14, 0x6a, 0xdd, 0x27, 0x1e,
-  0x0c, 0x43, 0x23, 0x02, 0x99, 0x55, 0xe9, 0xcc, 0x69, 0x60, 0xd0, 0x83,
-  0x84, 0x1f, 0x09, 0xf7, 0x6f, 0xa1, 0x71, 0x6f, 0x89, 0xcb, 0x9f, 0x85,
-  0x42, 0x90, 0x21, 0x3d, 0x68, 0xb1, 0xa3, 0x18, 0x71, 0x23, 0x1d, 0xcd,
-  0x4b, 0x9b, 0x01, 0xa8, 0x93, 0xe1, 0xb9, 0x28, 0x2b, 0x72, 0x4b, 0x28,
-  0xfe, 0xec, 0x9a, 0x2d, 0x8b, 0x79, 0xc3, 0xe4, 0xa3, 0xc9, 0xf4, 0x9c,
-  0xd4, 0xce, 0x31, 0xc7, 0x33, 0xba, 0x8e, 0xca, 0x7b, 0x95, 0xb0, 0x59,
-  0x4d, 0x70, 0xf5, 0xd4, 0x5a, 0x11, 0x01, 0x02, 0x1b, 0x11, 0x86, 0xd2,
-  0x3b, 0xd4, 0x14, 0x53, 0x9a, 0x1b, 0x03, 0x68, 0xb0, 0xfd, 0xfe, 0xcc,
-  0xbe, 0x0a, 0x02, 0x66, 0xc2, 0xfc, 0x32, 0xfb, 0xdd, 0x9e, 0x0b, 0x62,
-  0x29, 0xd3, 0xf6, 0xc4, 0x56, 0x0c, 0x4d, 0x10, 0x35, 0x39, 0x7e, 0xca,
-  0x69, 0x3f, 0x9b, 0x3c, 0x92, 0xed, 0xed, 0xad, 0x15, 0xa3, 0xd1, 0xaf,
-  0x63, 0xbd, 0x9f, 0x31, 0x28, 0x49, 0x90, 0xd2, 0x49, 0x7b, 0xde, 0x6c,
-  0x1c, 0x4b, 0x9b, 0x57, 0xd8, 0xc9, 0x89, 0x06, 0xc6, 0x8a, 0x19, 0xd5,
-  0xd4, 0x2b, 0x19, 0xbc, 0x31, 0xaf, 0xe6, 0x24, 0x34, 0x16, 0xc7, 0x40,
-  0xa2, 0xa4, 0xaa, 0xb4, 0xf8, 0x37, 0x07, 0xc9, 0x01, 0xa8, 0xa1, 0xd1,
-  0x71, 0x30, 0x64, 0xb3, 0xe7, 0x1a, 0xee, 0xb9, 0x09, 0xb1, 0xce, 0x9c,
-  0xd7, 0x0b, 0xbe, 0x34, 0x31, 0xcf, 0x30, 0x01, 0x9c, 0xb1, 0x77, 0x94,
-  0x09, 0xfe, 0x89, 0xe3, 0x9c, 0x01, 0x9e, 0x71, 0x3e, 0x6f, 0x14, 0x0a,
-  0xd5, 0x46, 0xd8, 0xd3, 0xed, 0x26, 0xc1, 0x50, 0x89, 0xa5, 0x41, 0xf0,
-  0x86, 0xc5, 0x03, 0x19, 0x82, 0x40, 0xa3, 0xda, 0x45, 0xb0, 0x76, 0x44,
-  0x2c, 0xee, 0xd6, 0x91, 0x90, 0x57, 0x63, 0x3d, 0x7a, 0x42, 0xf1, 0x12,
-  0xc5, 0x20, 0x01, 0xb7, 0x74, 0x48, 0xc0, 0x30, 0x0e, 0x8e, 0x4f, 0x10,
-  0x16, 0x77, 0x42, 0x2a, 0xde, 0xd0, 0x44, 0x25, 0x0e, 0x13, 0xe5, 0x80,
-  0xbd, 0x79, 0x0e, 0x71, 0xbd, 0xe7, 0x0a, 0x8e, 0x58, 0xb6, 0x14, 0xeb,
-  0x2d, 0x70, 0xee, 0x89, 0xea, 0xaf, 0x20, 0x81, 0xb4, 0x5b, 0x24, 0x2f,
-  0x55, 0x62, 0xb4, 0x65, 0x00, 0x5e, 0x40, 0xd3, 0xb3, 0x27, 0x95, 0x55,
-  0x6a, 0x61, 0xd3, 0x5c, 0xef, 0xa8, 0xcc, 0xa6, 0xd9, 0xad, 0x5a, 0x57,
-  0x05, 0xce, 0xf4, 0x5b, 0xf5, 0x61, 0x4a, 0xc1, 0xd3, 0x5a, 0x7d, 0xb1,
-  0x1d, 0x3f, 0x29, 0x3a, 0xdd, 0x16, 0x54, 0x18, 0x0f, 0xf6, 0x81, 0xfe,
-  0x3d, 0x08, 0xbf, 0x39, 0x8d, 0xf1, 0x5e, 0x1f, 0x4a, 0xae, 0x06, 0xb7,
-  0xbe, 0xaf, 0x14, 0xcf, 0xa1, 0x1d, 0x2d, 0x2e, 0xc6, 0x42, 0xab, 0x99,
-  0x27, 0xd6, 0xf7, 0x9e, 0xc1, 0x24, 0x8b, 0xcb, 0x00, 0x37, 0x4f, 0x0f,
-  0x96, 0x5a, 0xa9, 0x01, 0x4f, 0x1a, 0x19, 0x0a, 0x62, 0xf4, 0x24, 0x75,
-  0x94, 0x89, 0xa3, 0x98, 0xd2, 0x9f, 0x1c, 0x50, 0x25, 0x21, 0x96, 0xf4,
-  0x2c, 0x60, 0x5e, 0x83, 0x98, 0x56, 0xfa, 0x53, 0xd2, 0x21, 0xf4, 0x2f,
-  0x6e, 0xaa, 0x5c, 0x32, 0x9a, 0x70, 0x4f, 0x6e, 0x43, 0x78, 0x1d, 0xeb,
-  0xf1, 0xc0, 0x8d, 0x5e, 0xbd, 0xfe, 0x32, 0xfe, 0xd7, 0xe6, 0x94, 0x36,
-  0x39, 0xa4, 0x28, 0x6d, 0x79, 0x65, 0x1b, 0x46, 0x52, 0xe2, 0xf0, 0x9b,
-  0x25, 0xbc, 0x61, 0xae, 0x80, 0x0f, 0x46, 0x31, 0xc3, 0x5d, 0x94, 0x49,
-  0x35, 0x51, 0xd7, 0x38, 0x54, 0xba, 0x25, 0x6d, 0xaf, 0xb4, 0x7e, 0x52,
-  0xdc, 0xa1, 0x14, 0xea, 0xe5, 0x65, 0x3e, 0x46, 0x7d, 0x1b, 0x8f, 0x1a,
-  0x0c, 0x1e, 0x2f, 0x0f, 0xce, 0xac, 0xfa, 0x12, 0xcd, 0x2d, 0x59, 0x2c,
-  0x47, 0x53, 0xba, 0xac, 0x2d, 0x9e, 0x9d, 0x4e, 0x15, 0xaf, 0x12, 0x69,
-  0x5b, 0xdc, 0x9c, 0x78, 0xf3, 0x59, 0xe1, 0x6c, 0xc5, 0x50, 0x6b, 0x7d,
-  0x78, 0x88, 0xe0, 0x33, 0xae, 0x09, 0x8b, 0x40, 0xe3, 0x59, 0x31, 0xb7,
-  0x74, 0x98, 0x65, 0x25, 0x70, 0x92, 0x56, 0x4c, 0x7e, 0x4d, 0x5c, 0x13,
-  0xf9, 0x54, 0x41, 0xdb, 0x55, 0x35, 0xe7, 0x37, 0xc2, 0xc9, 0x4c, 0xfa,
-  0x8b, 0xeb, 0x85, 0xed, 0xb4, 0x09, 0x44, 0x22, 0x2d, 0x69, 0x02, 0x06,
-  0x1f, 0xbd, 0xb3, 0xef, 0xce, 0x06, 0xc9, 0x11, 0x5a, 0x92, 0x31, 0xa9,
-  0xa0, 0xcb, 0x36, 0x1a, 0xfa, 0x8e, 0x26, 0x7b, 0x85, 0x0b, 0xec, 0xb4,
-  0xc4, 0x5f, 0xdc, 0x9a, 0x7e, 0x29, 0x66, 0x59, 0xfe, 0xb6, 0xd9, 0x2b,
-  0x35, 0x64, 0x61, 0xd6, 0x67, 0xfc, 0x3b, 0x9d, 0x15, 0x12, 0xbf, 0xdc,
-  0x36, 0xf9, 0x1e, 0x8a, 0xb2, 0x01, 0xbe, 0x23, 0x6f, 0x26, 0x24, 0x95,
-  0xb1, 0x6c, 0xb5, 0xb8, 0xe7, 0xfd, 0x0b, 0x98, 0xa3, 0xc8, 0x9f, 0xd2,
-  0x40, 0x40, 0x5a, 0x4a, 0x7e, 0x2e, 0x80, 0x4f, 0x0e, 0x56, 0x29, 0xb0,
-  0x33, 0x65, 0xa6, 0xe1, 0x8e, 0x85, 0xba, 0x49, 0xc5, 0xa2, 0x51, 0x65,
-  0xad, 0xf3, 0x1a, 0xe8, 0x6f, 0xf6, 0x05, 0xd4, 0x6e, 0x8c, 0x85, 0xa4,
-  0x16, 0xda, 0x82, 0xc1, 0xda, 0xff, 0x1f, 0x95, 0xd6, 0x6d, 0x9a, 0xa0,
-  0xa2, 0x02, 0x00,
+  0x58, 0xc4, 0x33, 0xae, 0xac, 0xb9, 0x6b, 0xa0, 0x16, 0x2d, 0x6e, 0x2a,
+  0x80, 0x83, 0x13, 0x97, 0x27, 0xe2, 0x50, 0x08, 0x38, 0xf4, 0xc1, 0xe4,
+  0x74, 0x1e, 0x6b, 0xb3, 0x18, 0x78, 0x18, 0x3e, 0xdb, 0xc2, 0x5e, 0xad,
+  0x2c, 0xae, 0x99, 0x27, 0xd6, 0x30, 0x8d, 0x1e, 0xea, 0x40, 0xf8, 0x34,
+  0x04, 0xa3, 0x91, 0xae, 0x58, 0xa0, 0x02, 0x48, 0x1a, 0xc3, 0x43, 0x36,
+  0x10, 0x92, 0xe5, 0x8e, 0xe2, 0xdc, 0x09, 0x91, 0xff, 0xac, 0xac, 0x05,
+  0x5a, 0xaf, 0x1a, 0x20, 0x85, 0x89, 0x14, 0xb4, 0x0a, 0x5f, 0x17, 0x51,
+  0x9b, 0xa3, 0x33, 0x27, 0x65, 0x7a, 0xc7, 0x55, 0x59, 0x72, 0x0f, 0x39,
+  0xba, 0x96, 0x34, 0xaa, 0x72, 0x41, 0x70, 0xf2, 0x6b, 0x9e, 0x9c, 0x1d,
+  0xbd, 0xed, 0x5b, 0x2d, 0x61, 0xfa, 0x5d, 0x8c, 0x51, 0x86, 0x2f, 0x29,
+  0xb9, 0x3d, 0x8b, 0x6c, 0x6e, 0xb1, 0x34, 0xcc, 0x13, 0x35, 0xf8, 0x27,
+  0x9c, 0x00, 0x0e, 0x8d, 0x43, 0xa0, 0xd4, 0x90, 0x51, 0x8b, 0xb9, 0x94,
+  0xdc, 0xc2, 0x36, 0x2c, 0x27, 0xf6, 0x53, 0x03, 0x96, 0x93, 0x4d, 0x17,
+  0xa4, 0x8b, 0xfe, 0x38, 0x12, 0x95, 0xa3, 0x06, 0x5c, 0x98, 0x40, 0x61,
+  0x99, 0xd7, 0x67, 0xdf, 0x1e, 0x0e, 0x7f, 0xb7, 0xbb, 0xa7, 0xc3, 0xd9,
+  0x32, 0xad, 0x00, 0xbc, 0xaa, 0x9d, 0x94, 0xcf, 0xec, 0x3a, 0x1c, 0xa3,
+  0xa5, 0x58, 0xf3, 0x01, 0xe7, 0xcd, 0xd8, 0x74, 0x89, 0x41, 0x5b, 0x8d,
+  0xcc, 0xa0, 0x35, 0x29, 0x69, 0x6f, 0x22, 0xa6, 0xab, 0xf7, 0x0b, 0x97,
+  0x08, 0x57, 0x85, 0xd2, 0xba, 0x4c, 0xb5, 0x0b, 0xf5, 0x4b, 0xe7, 0xf6,
+  0x91, 0xb4, 0xac, 0xad, 0x71, 0x0e, 0xb9, 0x0f, 0x67, 0x69, 0xef, 0x39,
+  0xd6, 0xdb, 0x7f, 0x0b, 0x9c, 0x58, 0xbd, 0xd9, 0x0d, 0x10, 0xc8, 0x77,
+  0xc3, 0x07, 0x40, 0xa3, 0xd7, 0x27, 0x56, 0xf9, 0x6d, 0xee, 0xeb, 0xa0,
+  0xe0, 0xe9, 0x53, 0xda, 0x28, 0x3a, 0x59, 0x82, 0xdb, 0x00, 0xa6, 0x50,
+  0x4c, 0xa1, 0xba, 0xb8, 0x47, 0x5e, 0x97, 0xa8, 0x38, 0xb3, 0x90, 0x38,
+  0xd2, 0x77, 0x83, 0xe4, 0x9b, 0x6c, 0x8e, 0xc4, 0x79, 0x44, 0xdc, 0x59,
+  0xee, 0x15, 0xc7, 0x05, 0xa2, 0xf4, 0x24, 0x97, 0xe2, 0x3b, 0xc9, 0x52,
+  0xc5, 0xe4, 0x24, 0x5e, 0x57, 0x89, 0x86, 0x6b, 0x65, 0xa8, 0x52, 0x44,
+  0xe7, 0x29, 0x80, 0xa8, 0x03, 0xbb, 0x10, 0x90, 0x68, 0x34, 0xb0, 0xd9,
+  0x04, 0xd6, 0xe4, 0x92, 0x08, 0xdc, 0x9c, 0x1e, 0x73, 0xf6, 0x35, 0xa9,
+  0x55, 0xf9, 0x9a, 0xe1, 0xb4, 0x61, 0x2d, 0x14, 0x8d, 0xcb, 0x33, 0x95,
+  0x49, 0x79, 0x0d, 0xd3, 0x47, 0x45, 0xd7, 0x4d, 0x3a, 0x1f, 0xdf, 0x0f,
+  0x26, 0x24, 0xcb, 0xc2, 0x78, 0x36, 0x58, 0xde, 0x6c, 0x07, 0xc7, 0x14,
+  0x2c, 0xff, 0x5a, 0x30, 0x02, 0x9a, 0x86, 0x6f, 0xab, 0x71, 0xdc, 0x85,
+  0x0e, 0x4b, 0x1b, 0x67, 0x02, 0x24, 0x61, 0xd9, 0xfe, 0x72, 0x3c, 0x57,
+  0x82, 0x6c, 0x1d, 0x25, 0x0e, 0xe1, 0x18, 0x2d, 0x0c, 0x16, 0xd9, 0x6c,
+  0xdf, 0x65, 0x23, 0x1b, 0x7f, 0xd0, 0xaa, 0x1a, 0x4e, 0xb1, 0x08, 0x8c,
+  0xb4, 0xf3, 0xec, 0x6a, 0xaa, 0x02, 0x45, 0xa8, 0xba, 0xb8, 0x26, 0x22,
+  0x29, 0x20, 0xa2, 0xf0, 0x68, 0x91, 0x24, 0x96, 0xd8, 0x89, 0x0e, 0x6b,
+  0x0d, 0xa9, 0x95, 0x87, 0x4b, 0x08, 0xf4, 0xbe, 0x11, 0x45, 0x0e, 0x61,
+  0xb0, 0x65, 0xae, 0x27, 0x2f, 0x26, 0x1e, 0x8b, 0x44, 0x52, 0xf7, 0x13,
+  0x80, 0x60, 0x99, 0x42, 0x18, 0xc6, 0x5d, 0xa3, 0xa2, 0xd9, 0xf9, 0x69,
+  0xa5, 0x84, 0xe5, 0xac, 0xd0, 0xd7, 0xb7, 0x4f, 0x60, 0xf1, 0xbe, 0x38,
+  0x19, 0x9a, 0x57, 0x64, 0x9e, 0xdd, 0x05, 0xa4, 0x25, 0xa5, 0x07, 0x94,
+  0xfe, 0x60, 0x00, 0x12, 0x48, 0x65, 0x46, 0x3b, 0xe0, 0x91, 0x08, 0x57,
+  0xf0, 0x6e, 0x32, 0x9f, 0xfc, 0x60, 0x8b, 0xa0, 0x61, 0xc4, 0x18, 0x8a,
+  0x55, 0x3c, 0x13, 0x61, 0xc8, 0x21, 0xbd, 0x00, 0xbb, 0x8f, 0x84, 0xa5,
+  0x27, 0xbd, 0xa4, 0xbf, 0xc7, 0xf8, 0x39, 0xbb, 0xcd, 0x45, 0x4c, 0x6b,
+  0x81, 0x09, 0x44, 0x1b, 0xd4, 0x92, 0xb5, 0xa2, 0xec, 0x60, 0x53, 0x49,
+  0xfa, 0x96, 0xde, 0xc7, 0x8f, 0x3d, 0x9d, 0xd0, 0xed, 0x2e, 0x47, 0x6c,
+  0x0b, 0x6e, 0xe5, 0xf4, 0xbe, 0x2b, 0x32, 0xec, 0x3d, 0xb8, 0xab, 0x9c,
+  0x1b, 0x71, 0x97, 0x3b, 0x00, 0x69, 0x29, 0x9a, 0xc0, 0xa6, 0x50, 0x85,
+  0x04, 0xb5, 0x01, 0xd0, 0x12, 0xaa, 0x91, 0x7b, 0x9e, 0xdc, 0xee, 0x99,
+  0xaf, 0x19, 0xdf, 0xd8, 0xba, 0x89, 0xb1, 0xde, 0x33, 0x91, 0x4e, 0xda,
+  0x22, 0xa2, 0xdc, 0x02, 0xaa, 0x45, 0xd6, 0x13, 0xd1, 0x2c, 0x71, 0x91,
+  0x06, 0x97, 0x29, 0xe6, 0x6a, 0x56, 0x90, 0x94, 0x77, 0xc1, 0xa3, 0x87,
+  0x02, 0x1f, 0x84, 0x39, 0x71, 0xe4, 0x77, 0x10, 0x11, 0x79, 0x3c, 0x77,
+  0x89, 0x12, 0x6a, 0xca, 0x67, 0x88, 0x3e, 0xde, 0xfe, 0xeb, 0x5c, 0x0c,
+  0x13, 0x1c, 0x6b, 0xca, 0xd7, 0x39, 0x9d, 0xfc, 0x8d, 0x84, 0x0e, 0xd3,
+  0x12, 0x1c, 0xbf, 0x76, 0xe5, 0xd7, 0x86, 0x02, 0xed, 0xb9, 0x11, 0xb2,
+  0xb9, 0xfe, 0x17, 0x98, 0x4a, 0xb5, 0xe1, 0xe7, 0xae, 0x10, 0xe7, 0xcd,
+  0x89, 0xa8, 0x9f, 0xc3, 0x0a, 0x8e, 0x9d, 0x95, 0x56, 0x57, 0x7d, 0xe3,
+  0xe8, 0x23, 0x64, 0x9c, 0x0d, 0xed, 0x49, 0xbe, 0x96, 0x9c, 0x7e, 0x5e,
+  0xa3, 0xb3, 0xe3, 0x77, 0x52, 0x29, 0xdc, 0x9d, 0x85, 0x0c, 0xd0, 0x8b,
+  0x6b, 0x52, 0xe4, 0x9e, 0xc7, 0x93, 0x1a, 0x06, 0xbc, 0x18, 0x8e, 0x40,
+  0x33, 0xa0, 0xf1, 0x5c, 0xfb, 0x3a, 0x5f, 0x4a, 0xef, 0x1b, 0xb8, 0xe7,
+  0xaa, 0x6a, 0xba, 0xd1, 0xaa, 0x7e, 0xeb, 0xf6, 0xa4, 0x75, 0xa1, 0x38,
+  0x8b, 0xd4, 0x78, 0xe2, 0x05, 0x7c, 0xae, 0xf0, 0x8d, 0x56, 0x1a, 0x7c,
+  0xae, 0xd7, 0xca, 0x74, 0x0c, 0x4d, 0xe1, 0xbf, 0x4b, 0x06, 0xdb, 0xd4,
+  0x61, 0xb5, 0x6d, 0x2f, 0x2e, 0x6e, 0xc6, 0x15, 0xdd, 0x70, 0x48, 0xeb,
+  0xfd, 0x91, 0x15, 0x72, 0xde, 0x0e, 0x1a, 0xf1, 0xe4, 0xe7, 0xa4, 0x3f,
+  0x9e, 0xf2, 0xfc, 0x12, 0xae, 0xb3, 0xfd, 0x23, 0xed, 0x3c, 0x9e, 0xf8,
+  0xd9, 0xed, 0xe1, 0x9b, 0x1c, 0xe7, 0xed, 0x63, 0xcf, 0xa6, 0x7e, 0x2a,
+  0x0a, 0x83, 0xe0, 0xdb, 0x26, 0x07, 0x93, 0x5b, 0x24, 0xdd, 0x4d, 0xf4,
+  0x4f, 0xcc, 0xe7, 0x68, 0xce, 0x15, 0x4a, 0x79, 0xa6, 0xe9, 0x48, 0x8a,
+  0x92, 0x7f, 0x97, 0x93, 0xd2, 0x71, 0xd8, 0x92, 0x2f, 0x90, 0xff, 0x87,
+  0x01, 0xf2, 0x5b, 0xc1, 0x97, 0x96, 0xcc, 0xd1, 0xd3, 0x9c, 0x05, 0x1f,
+  0x5a, 0x0a, 0xee, 0x8c, 0xad, 0x1b, 0x24, 0x5f, 0xc1, 0xc7, 0x59, 0x66,
+  0x01, 0xfa, 0xab, 0x5e, 0x7c, 0x52, 0xc9, 0x0f, 0x9b, 0x91, 0x0a, 0xfe,
+  0xc4, 0xc0, 0xcd, 0xa4, 0x93, 0x03, 0xe3, 0xe6, 0xe4, 0xbe, 0x69, 0x4e,
+  0x8e, 0xc7, 0x65, 0x29, 0xed, 0x34, 0x15, 0xcb, 0x97, 0x48, 0x3a, 0x53,
+  0x09, 0x70, 0x29, 0x65, 0x84, 0x72, 0x61, 0x4e, 0x32, 0x4b, 0xec, 0x2f,
+  0x42, 0x34, 0x15, 0xb3, 0x1c, 0x73, 0x53, 0x26, 0x11, 0x38, 0x92, 0xe0,
+  0x3b, 0xdc, 0x8f, 0xfa, 0xf0, 0x9a, 0x58, 0x73, 0xe6, 0x86, 0x3a, 0x14,
+  0x93, 0x9e, 0x0d, 0x71, 0x88, 0x3b, 0xca, 0x36, 0xc1, 0x7d, 0x69, 0xd9,
+  0x91, 0x2c, 0x85, 0x6e, 0x0b, 0xef, 0x72, 0xb4, 0x2b, 0xab, 0xdb, 0x9c,
+  0x02, 0x92, 0x1a, 0x87, 0xef, 0xdf, 0xa2, 0xb4, 0x09, 0x17, 0xae, 0xbe,
+  0x38, 0x3f, 0x78, 0x37, 0x7c, 0x23, 0xa6, 0xf1, 0x8b, 0x22, 0xa8, 0x87,
+  0xad, 0x7e, 0x05, 0xf3, 0x1f, 0x3b, 0x98, 0xb8, 0x3b, 0xa9, 0xb7, 0x61,
+  0xf1, 0xf4, 0x5a, 0x2c, 0xbb, 0xd7, 0xc6, 0xdb, 0x97, 0x4a, 0xdb, 0x58,
+  0x0d, 0x0c, 0x6d, 0x73, 0xb8, 0xe5, 0x04, 0xa1, 0x2a, 0x2c, 0xca, 0xe6,
+  0x0b, 0xd6, 0x1b, 0x32, 0xb4, 0x3e, 0x84, 0x65, 0x39, 0xb4, 0xc1, 0xd8,
+  0xa7, 0x72, 0xf7, 0xae, 0x04, 0x23, 0x3d, 0x24, 0x55, 0xb1, 0xaf, 0x95,
+  0x6a, 0x82, 0x12, 0x74, 0xce, 0x9c, 0x2a, 0x77, 0xaf, 0x42, 0xf9, 0xb9,
+  0xc6, 0xc3, 0xbc, 0x4f, 0x6b, 0x7a, 0xf3, 0x0f, 0xbb, 0x5b, 0xf1, 0xe6,
+  0x2f, 0x7e, 0x69, 0xf3, 0xf1, 0xb1, 0x9b, 0x6e, 0xe6, 0x53, 0x8a, 0x36,
+  0xff, 0xb0, 0xb7, 0xf5, 0xe0, 0x8c, 0xc2, 0xac, 0x48, 0xdf, 0x27, 0xbd,
+  0x81, 0xc1, 0x26, 0xaf, 0xe4, 0x98, 0x39, 0x99, 0xc9, 0x45, 0xe8, 0x04,
+  0x78, 0xc3, 0x0d, 0xc0, 0x0e, 0x84, 0x6d, 0x3b, 0x49, 0xdd, 0x3b, 0xde,
+  0x34, 0xbb, 0xe4, 0xf8, 0x7f, 0x1e, 0x85, 0x30, 0x92, 0xf3, 0x8d, 0x3a,
+  0xbc, 0xa2, 0x80, 0x0e, 0x50, 0x15, 0x03, 0xee, 0x7b, 0xef, 0x81, 0xbe,
+  0xfd, 0xec, 0x02, 0xb3, 0x04, 0xbc, 0xd8, 0x08, 0x83, 0x33, 0x34, 0x6c,
+  0xed, 0x67, 0xcd, 0x17, 0x5a, 0x5f, 0xdd, 0xdf, 0xc5, 0xf1, 0xdb, 0x23,
+  0xa0, 0x66, 0xbf, 0x3e, 0x06, 0xf8, 0xdc, 0x50, 0xe1, 0x1f, 0xcd, 0x02,
+  0xe1, 0x10, 0x79, 0xc3, 0x6a, 0x29, 0xe2, 0xde, 0x75, 0xd1, 0x66, 0x8e,
+  0x73, 0xb8, 0x9d, 0x40, 0xd7, 0x1a, 0x03, 0x5d, 0x59, 0xa6, 0xe5, 0xf1,
+  0x65, 0xff, 0x6d, 0x31, 0x61, 0x2d, 0xb9, 0x3f, 0xe4, 0x50, 0x41, 0x7a,
+  0x8b, 0x3e, 0x7c, 0x3f, 0x9f, 0x35, 0x3e, 0x1e, 0x44, 0x32, 0x75, 0xd7,
+  0x56, 0x15, 0xe5, 0xf9, 0xdb, 0x76, 0xbf, 0x8f, 0xc1, 0xf4, 0x25, 0xac,
+  0x4b, 0x9d, 0x3b, 0x0d, 0x7c, 0x0e, 0x63, 0x2d, 0xb4, 0x40, 0xf9, 0xf4,
+  0x5e, 0x02, 0x11, 0x52, 0x1f, 0x3e, 0xe6, 0xb3, 0x37, 0xaf, 0x90, 0x41,
+  0xe6, 0x4d, 0x7c, 0x62, 0xc4, 0x5b, 0x0b, 0xc1, 0x4b, 0x59, 0x91, 0xca,
+  0xee, 0x7c, 0xfc, 0x93, 0x56, 0x6d, 0x2e, 0x16, 0xf7, 0x3c, 0xcb, 0xbb,
+  0x46, 0x68, 0x45, 0xd4, 0xbf, 0xfa, 0x37, 0x79, 0xa7, 0x51, 0x86, 0x4a,
+  0x31, 0xa6, 0x03, 0x0a, 0xd4, 0x4f, 0xb4, 0x6a, 0xd3, 0x69, 0x19, 0x5c,
+  0x57, 0x3a, 0x6c, 0xab, 0x6e, 0x17, 0x00, 0x9b, 0x06, 0x38, 0xac, 0xcd,
+  0x71, 0x86, 0x20, 0xb0, 0x05, 0x52, 0x5f, 0x5f, 0x17, 0xce, 0x39, 0x46,
+  0x6c, 0x67, 0xd1, 0xac, 0x8b, 0x9c, 0x25, 0x96, 0xe4, 0x2d, 0x39, 0xfc,
+  0x1b, 0xfd, 0x0d, 0xae, 0xcb, 0x90, 0xcf, 0x23, 0x93, 0xe9, 0xff, 0xf2,
+  0xd9, 0x74, 0x5c, 0xaf, 0xc9, 0xfa, 0x25, 0x80, 0x30, 0xe0, 0xc7, 0x5a,
+  0x97, 0x01, 0x08, 0x4e, 0x8c, 0x10, 0x17, 0x5d, 0x10, 0xe0, 0x6b, 0xa6,
+  0x48, 0x8a, 0x52, 0xed, 0x22, 0x63, 0x9d, 0x91, 0x5c, 0xac, 0x92, 0x60,
+  0xa4, 0xcb, 0xc5, 0x84, 0x83, 0x32, 0x24, 0x1c, 0xf5, 0x3f, 0x01, 0x8a,
+  0x5d, 0xde, 0x27, 0xbb, 0x7b, 0xbd, 0x64, 0x6f, 0x67, 0x77, 0x2f, 0x32,
+  0x87, 0xf5, 0xff, 0x44, 0x50, 0xd4, 0x1e, 0x7f, 0xbd, 0xfe, 0xa9, 0xb3,
+  0xf0, 0xf9, 0x0c, 0x7c, 0x93, 0x68, 0xe6, 0x2f, 0x31, 0x1f, 0xf8, 0x67,
+  0x19, 0x88, 0x99, 0x8b, 0x25, 0x33, 0x9c, 0x1d, 0x5f, 0x5b, 0x62, 0x24,
+  0xb4, 0x1a, 0x9b, 0xae, 0x74, 0xd8, 0x84, 0x2b, 0xe9, 0x48, 0xbd, 0x5a,
+  0x8e, 0x7c, 0x71, 0x96, 0xd2, 0xb4, 0xe4, 0x0a, 0xa2, 0xcd, 0x3d, 0xca,
+  0x6b, 0xdb, 0x16, 0x84, 0xd6, 0x60, 0x6f, 0x88, 0xde, 0x5f, 0x1f, 0x1f,
+  0x5e, 0x18, 0xde, 0xe1, 0x25, 0x84, 0xa7, 0xf2, 0xfe, 0xd3, 0x8a, 0x31,
+  0x3e, 0xf8, 0xcc, 0x64, 0xff, 0x3a, 0x23, 0x31, 0x7a, 0x3e, 0x5a, 0x5e,
+  0xed, 0xff, 0x25, 0x2d, 0xaf, 0x8a, 0xf9, 0x63, 0xcf, 0x4f, 0x38, 0xa1,
+  0x6c, 0x9f, 0x38, 0xd4, 0xee, 0x8b, 0xdd, 0x27, 0x9c, 0xff, 0x3d, 0xcd,
+  0xb9, 0x20, 0x10, 0x18, 0xc4, 0xc6, 0x6c, 0x43, 0x00, 0x36, 0x38, 0x4d,
+  0xc2, 0xa1, 0x6a, 0xcc, 0x27, 0x1b, 0x72, 0xdd, 0xa7, 0xe1, 0xb3, 0x13,
+  0x7d, 0x56, 0x52, 0xcf, 0x37, 0x34, 0x57, 0x61, 0x03, 0x69, 0x9a, 0xcb,
+  0xc5, 0x46, 0x13, 0x22, 0xfe, 0x91, 0xb9, 0xa2, 0x0b, 0x57, 0x7b, 0xf2,
+  0xd0, 0x01, 0xdf, 0x73, 0x06, 0x51, 0x99, 0xa5, 0x37, 0xbe, 0x7a, 0xb2,
+  0x47, 0xdf, 0x30, 0x97, 0xc7, 0xf9, 0x9b, 0x43, 0x41, 0x30, 0xb5, 0x7c,
+  0x29, 0x5e, 0xea, 0xc4, 0x99, 0xa6, 0xb6, 0x30, 0xca, 0x47, 0xfa, 0x47,
+  0x6e, 0xc3, 0xfe, 0x64, 0xf4, 0x09, 0x0f, 0xd1, 0xb9, 0x13, 0xb0, 0xb8,
+  0x83, 0x66, 0xe9, 0x1d, 0x28, 0x6a, 0x5c, 0x3f, 0xc4, 0x4a, 0x25, 0x6f,
+  0x4a, 0x29, 0x5a, 0xf1, 0x38, 0x60, 0x68, 0x56, 0x80, 0xda, 0xac, 0x3b,
+  0x34, 0x6e, 0x54, 0x79, 0x7d, 0x7d, 0x70, 0x16, 0x28, 0xba, 0xac, 0x48,
+  0x7a, 0xa3, 0x1e, 0x9e, 0x83, 0xa2, 0xc3, 0x95, 0xd8, 0xb5, 0x1a, 0x53,
+  0xcf, 0xab, 0x28, 0x35, 0xf3, 0x49, 0xc8, 0x46, 0x1c, 0x20, 0x5f, 0xe8,
+  0x7d, 0xc2, 0xf6, 0x27, 0xae, 0x66, 0x30, 0x9d, 0xa4, 0xec, 0x08, 0xd5,
+  0x5b, 0x88, 0x65, 0x2e, 0x6e, 0x2b, 0xd7, 0x68, 0x28, 0xda, 0x9b, 0x8f,
+  0x89, 0x26, 0x71, 0x68, 0xb6, 0x8a, 0xd6, 0x1b, 0xe1, 0xc7, 0x90, 0x95,
+  0x7c, 0x6f, 0x13, 0x10, 0xfe, 0x4c, 0x83, 0x4f, 0xab, 0x1b, 0x62, 0xa5,
+  0xe2, 0xc0, 0xa7, 0xde, 0x73, 0x75, 0x81, 0xc3, 0xe8, 0x93, 0x4b, 0x20,
+  0x0d, 0xcc, 0x4f, 0x8c, 0x83, 0xd4, 0xd8, 0x30, 0xb9, 0x82, 0xa0, 0x71,
+  0x4e, 0xab, 0x4c, 0x50, 0x0b, 0x93, 0x8b, 0xbb, 0x42, 0x54, 0x8c, 0xca,
+  0xc2, 0x6b, 0x25, 0x14, 0xb5, 0x5a, 0xe6, 0x22, 0x45, 0xd2, 0xe6, 0x31,
+  0x3f, 0x08, 0xaa, 0xc8, 0xae, 0x3b, 0xcb, 0xd7, 0x6b, 0xe7, 0xf7, 0x1c,
+  0xbe, 0xfe, 0x36, 0x41, 0x3e, 0x3d, 0xfa, 0x38, 0x04, 0x9e, 0x3f, 0x42,
+  0x18, 0x66, 0xac, 0xfd, 0x7d, 0xbd, 0xc4, 0x79, 0x3f, 0xbc, 0x4e, 0x17,
+  0x50, 0x80, 0x76, 0x77, 0x60, 0x2e, 0xf9, 0xde, 0x32, 0xf3, 0x70, 0x50,
+  0xad, 0xce, 0x7d, 0xb5, 0x1e, 0x58, 0x52, 0x26, 0x28, 0x53, 0x0f, 0x0d,
+  0xa8, 0x69, 0xa4, 0xa5, 0xeb, 0xb3, 0xda, 0x16, 0x14, 0xff, 0x8a, 0x48,
+  0xa3, 0xac, 0x26, 0x37, 0xdb, 0x63, 0xfa, 0xe7, 0xc9, 0xce, 0x36, 0x03,
+  0x69, 0xd6, 0x6c, 0xd3, 0x04, 0x4d, 0xee, 0xed, 0x3d, 0x7b, 0xd6, 0x4b,
+  0xd6, 0x61, 0x65, 0xb4, 0x0e, 0x70, 0x24, 0xe8, 0x64, 0xad, 0x47, 0xeb,
+  0xe9, 0x6e, 0x97, 0x97, 0x63, 0xfc, 0x0f, 0xef, 0x59, 0x19, 0xc9, 0x0b,
+  0x4d, 0xbb, 0xe1, 0x85, 0x98, 0x87, 0xe0, 0x38, 0x42, 0x57, 0xf8, 0xee,
+  0xd8, 0x19, 0x92, 0xe0, 0x35, 0x5a, 0x64, 0xc5, 0xc2, 0xdc, 0xc3, 0x33,
+  0x2d, 0x10, 0xc2, 0xfd, 0x07, 0x3e, 0x35, 0x76, 0xe8, 0x4b, 0x3c, 0x9c,
+  0xa2, 0x20, 0x54, 0xcb, 0x51, 0x5f, 0xd3, 0x81, 0x45, 0xad, 0xcc, 0xe9,
+  0xe8, 0xd2, 0x9f, 0x53, 0xb3, 0xd7, 0x77, 0x58, 0xf2, 0x57, 0xc9, 0xba,
+  0x12, 0x17, 0x7e, 0x0c, 0xd8, 0xbb, 0x9b, 0x8d, 0x31, 0x8d, 0xe2, 0x95,
+  0xfe, 0xf1, 0x1f, 0xff, 0x41, 0xcd, 0xfe, 0x07, 0x5a, 0x79, 0xf5, 0x87,
+  0xaa, 0xbe, 0x0e, 0x9e, 0x59, 0x57, 0x8a, 0x3f, 0xf6, 0xbe, 0x6d, 0x8e,
+  0x57, 0x63, 0x9c, 0x59, 0xce, 0x5a, 0x7b, 0x7b, 0xa2, 0x2c, 0xb9, 0x17,
+  0xcc, 0x2f, 0xe7, 0x7c, 0x42, 0xb1, 0x92, 0xba, 0x70, 0x91, 0xaf, 0xe0,
+  0x77, 0xce, 0x90, 0x87, 0x4e, 0x37, 0x09, 0xc3, 0x08, 0x6e, 0x99, 0x8c,
+  0x71, 0xf4, 0xee, 0xbb, 0xe3, 0xf3, 0xd3, 0x77, 0x6f, 0x8f, 0xde, 0x5d,
+  0x24, 0xdf, 0x1d, 0x9c, 0x1f, 0x1f, 0x7c, 0x75, 0xa2, 0xe9, 0xee, 0x98,
+  0x02, 0xa2, 0x7c, 0x44, 0xf8, 0x6e, 0xc1, 0xc0, 0x06, 0x99, 0x48, 0xd1,
+  0xe2, 0x21, 0xad, 0xba, 0xc8, 0x1f, 0x14, 0xc3, 0x9c, 0x55, 0x91, 0x0f,
+  0x5c, 0x07, 0xa9, 0x07, 0xe9, 0xf3, 0x83, 0x95, 0x44, 0x82, 0xf6, 0x74,
+  0x1f, 0x24, 0x50, 0x23, 0x00, 0x09, 0x64, 0x6a, 0x0c, 0xca, 0x17, 0x03,
+  0x74, 0xd5, 0x35, 0xbe, 0x96, 0x1c, 0x7c, 0x2b, 0x35, 0x62, 0xaf, 0xf2,
+  0x1e, 0xca, 0xed, 0xe2, 0xc7, 0x70, 0x70, 0x72, 0xe2, 0xbb, 0x7a, 0xb8,
+  0x0a, 0x8d, 0xe2, 0x2f, 0x49, 0xf6, 0x16, 0x37, 0x0a, 0xcf, 0xe0, 0x55,
+  0xe1, 0x01, 0xd9, 0xe7, 0xf7, 0x21, 0xf6, 0x3a, 0x3a, 0xa3, 0xed, 0xd8,
+  0x14, 0xe0, 0x0c, 0xb8, 0x89, 0xe9, 0x04, 0xe5, 0xd5, 0x4d, 0x2f, 0xd9,
+  0xf8, 0xc3, 0x86, 0x96, 0x12, 0x67, 0xb4, 0x60, 0xa9, 0x71, 0xb3, 0xe5,
+  0x07, 0xf5, 0xee, 0xd4, 0x8f, 0x49, 0x3d, 0x9f, 0x6e, 0x00, 0xee, 0x45,
+  0xef, 0xb7, 0xae, 0x4c, 0xa0, 0xe1, 0x80, 0x51, 0xff, 0xb8, 0x16, 0x82,
+  0x70, 0x78, 0x00, 0x4a, 0xa3, 0xf0, 0x6c, 0x45, 0xdf, 0x65, 0xb5, 0x2d,
+  0x1d, 0x07, 0xa0, 0xd0, 0x3c, 0xd7, 0x39, 0x6c, 0x1d, 0xae, 0x38, 0x97,
+  0x99, 0x03, 0x69, 0xa9, 0x61, 0xd4, 0x53, 0x7f, 0xe2, 0xb2, 0x52, 0x16,
+  0xca, 0x54, 0xf5, 0x71, 0xdb, 0x6a, 0xdd, 0xb0, 0x93, 0x11, 0x09, 0x01,
+  0x65, 0x3e, 0x51, 0x90, 0xc1, 0x28, 0x55, 0x0c, 0xd8, 0x37, 0x75, 0x7e,
+  0xc8, 0x98, 0xec, 0x73, 0x54, 0x65, 0xf4, 0xb5, 0x34, 0x38, 0x78, 0x98,
+  0xd8, 0x48, 0x89, 0x8c, 0xbc, 0xb9, 0x4a, 0x21, 0x1c, 0x90, 0xcb, 0x42,
+  0x7a, 0x7a, 0x55, 0x98, 0x00, 0x9e, 0x3a, 0xaf, 0xb9, 0xab, 0x38, 0x16,
+  0x08, 0xf5, 0x0e, 0x39, 0xcc, 0xd9, 0x2c, 0xd9, 0xbf, 0x6e, 0x1e, 0x02,
+  0xc4, 0x97, 0x61, 0xcb, 0xad, 0x82, 0x74, 0x15, 0xe4, 0x66, 0xfb, 0xf4,
+  0x05, 0xf0, 0x12, 0x89, 0xd2, 0x37, 0x28, 0x2f, 0x86, 0x4f, 0xb3, 0x5c,
+  0x6e, 0x8e, 0x74, 0xe4, 0x61, 0xe1, 0x41, 0x6e, 0x52, 0x83, 0x56, 0xb9,
+  0x49, 0x33, 0x5e, 0xd3, 0xe9, 0x99, 0x22, 0x83, 0xcc, 0x38, 0x51, 0x9a,
+  0x8c, 0xf2, 0x2b, 0xc1, 0x04, 0x40, 0x02, 0x3a, 0xa8, 0x84, 0x21, 0xde,
+  0x48, 0xb3, 0xc7, 0x56, 0x31, 0x80, 0x1b, 0x0b, 0xef, 0xd7, 0xc5, 0x34,
+  0x44, 0x19, 0xb3, 0x99, 0x54, 0x5a, 0x4b, 0xcd, 0x6c, 0x9f, 0xec, 0xfb,
+  0x58, 0x62, 0x1d, 0x2d, 0x1c, 0x4d, 0xe1, 0xc9, 0x35, 0x38, 0x0f, 0x46,
+  0x75, 0xc6, 0x4a, 0x9c, 0x73, 0x2a, 0x90, 0xe5, 0x52, 0xf3, 0x3a, 0x58,
+  0xe0, 0x32, 0xb8, 0x05, 0x1b, 0xd2, 0x50, 0xe7, 0x71, 0xd3, 0xe1, 0x8b,
+  0xa3, 0x95, 0xb1, 0x20, 0xb4, 0x82, 0xe8, 0xc5, 0xa5, 0xdc, 0x2c, 0x08,
+  0xa4, 0x9b, 0xa5, 0xd8, 0x59, 0x44, 0x13, 0x18, 0x34, 0xad, 0xd4, 0x66,
+  0xc0, 0x78, 0xe6, 0x44, 0x22, 0xf2, 0x98, 0x68, 0x90, 0xfa, 0x57, 0xdf,
+  0xd5, 0x32, 0x53, 0xc7, 0xf3, 0x96, 0x0f, 0x3c, 0x10, 0x31, 0x00, 0xd4,
+  0x3a, 0xd6, 0x6a, 0x92, 0xec, 0xa2, 0x47, 0x29, 0x4c, 0x06, 0x84, 0x6a,
+  0x18, 0x1f, 0x13, 0x4b, 0xb8, 0x99, 0x4e, 0x03, 0x80, 0x71, 0xb1, 0x47,
+  0xa4, 0x1d, 0xe1, 0x03, 0xde, 0xa1, 0x81, 0x70, 0x00, 0x09, 0xfd, 0x11,
+  0x30, 0xe2, 0x60, 0x22, 0x1a, 0x54, 0x0e, 0xf1, 0xac, 0x65, 0xd3, 0x0c,
+  0x18, 0x9a, 0xb9, 0xc7, 0xc3, 0x8b, 0x49, 0xeb, 0x69, 0xe4, 0xe9, 0x4c,
+  0x84, 0x47, 0x4f, 0x7d, 0xb3, 0x7b, 0x09, 0x3b, 0x5c, 0x5b, 0x3b, 0x7c,
+  0x3f, 0xbc, 0x38, 0x7d, 0x9b, 0x9c, 0xbe, 0xbf, 0x38, 0x7b, 0x7f, 0xa1,
+  0x37, 0xd7, 0x48, 0x82, 0xb6, 0x25, 0x74, 0x41, 0xa4, 0x00, 0xdb, 0xcc,
+  0x99, 0x3a, 0xf8, 0x39, 0xc6, 0xa4, 0x60, 0x58, 0xc1, 0x00, 0x51, 0xc8,
+  0x25, 0x65, 0x31, 0xd6, 0x96, 0xe0, 0x15, 0xf3, 0x92, 0xdf, 0xd1, 0x92,
+  0x73, 0x42, 0x2d, 0x5b, 0xf2, 0x2c, 0xc7, 0x8b, 0xf5, 0x1e, 0x3b, 0x6b,
+  0xcd, 0x5a, 0x35, 0xf7, 0x4d, 0x3d, 0x86, 0xbd, 0xf3, 0x4d, 0x04, 0xa7,
+  0xb0, 0x64, 0xa6, 0x18, 0x77, 0xbc, 0xed, 0x27, 0x8c, 0xe9, 0xd4, 0x82,
+  0x9b, 0x66, 0x81, 0xb6, 0xb0, 0x5a, 0x8e, 0x35, 0x6a, 0x66, 0x16, 0x86,
+  0x09, 0x8e, 0x75, 0x41, 0x33, 0xbc, 0x76, 0x21, 0xf1, 0x08, 0x23, 0xe2,
+  0x50, 0x40, 0x89, 0xa0, 0x40, 0xcc, 0x9d, 0xa8, 0x0c, 0xa4, 0x08, 0xc2,
+  0x67, 0xd1, 0xb9, 0x65, 0xef, 0x92, 0x8d, 0xef, 0xb3, 0xb0, 0xc1, 0xdf,
+  0xff, 0x17, 0xf2, 0x36, 0x3f, 0xd8, 0x27, 0x7f, 0x97, 0x2e, 0x7f, 0x9a,
+  0x6f, 0x70, 0x04, 0x5d, 0xd3, 0x55, 0xfe, 0xed, 0xd1, 0xf9, 0x57, 0x47,
+  0xe7, 0xa7, 0x43, 0xe6, 0x07, 0x66, 0xef, 0xea, 0xd2, 0xfa, 0x4d, 0x56,
+  0x8e, 0xb2, 0xb2, 0xd0, 0x3a, 0x5a, 0xf6, 0xd7, 0xb3, 0xed, 0xaf, 0x87,
+  0xc3, 0x83, 0xb3, 0x63, 0x57, 0xa9, 0xc6, 0x65, 0x90, 0x89, 0x8e, 0x34,
+  0x97, 0x1c, 0x47, 0xcc, 0xdf, 0x5e, 0x21, 0xba, 0x18, 0xdf, 0x48, 0x64,
+  0x71, 0xc7, 0x29, 0x6d, 0x86, 0x75, 0x78, 0xa3, 0x35, 0xb1, 0x10, 0x0d,
+  0x1b, 0x12, 0x54, 0x88, 0x36, 0x2f, 0xb0, 0xf0, 0x70, 0x06, 0xf4, 0x5c,
+  0x08, 0xde, 0x4d, 0x39, 0xea, 0x13, 0xb5, 0xdf, 0x58, 0xe1, 0x66, 0x49,
+  0x84, 0x20, 0x56, 0x29, 0x11, 0xd2, 0xde, 0xd8, 0x40, 0x42, 0x5d, 0x5e,
+  0x6f, 0xdf, 0xe0, 0x7c, 0xa0, 0x8a, 0xca, 0x74, 0x20, 0xdc, 0x5d, 0x0e,
+  0x94, 0x85, 0xbd, 0x82, 0xc5, 0x3e, 0x84, 0x4e, 0x41, 0xbd, 0xb9, 0xd2,
+  0x87, 0x62, 0xf0, 0xa2, 0x4f, 0x9e, 0x3a, 0x98, 0xae, 0xb0, 0x8e, 0xf8,
+  0x25, 0x49, 0xe0, 0x8b, 0xbb, 0x89, 0x5e, 0x22, 0x8c, 0x52, 0x3d, 0x17,
+  0xff, 0x84, 0xf0, 0xf0, 0xb6, 0x87, 0x0a, 0xe5, 0x19, 0x39, 0x63, 0x43,
+  0xe3, 0xd1, 0x93, 0xd1, 0x34, 0x9d, 0xdf, 0xf0, 0x6d, 0xc6, 0xf7, 0x13,
+  0x74, 0x4e, 0x03, 0x9f, 0x42, 0xd9, 0x4c, 0x76, 0x48, 0x2a, 0x1e, 0x04,
+  0x0b, 0x81, 0x53, 0x30, 0xb7, 0x7b, 0x31, 0xe6, 0x3b, 0x8c, 0xad, 0xc0,
+  0xf5, 0xc6, 0xc7, 0xc9, 0x2f, 0x02, 0x6c, 0x47, 0x47, 0x27, 0x74, 0x31,
+  0xb9, 0x2c, 0x13, 0xd6, 0xd1, 0xb3, 0x29, 0x6c, 0xc1, 0x16, 0x12, 0x24,
+  0x89, 0x95, 0x39, 0x33, 0x32, 0xe1, 0x1e, 0x06, 0xa0, 0xce, 0x0e, 0x24,
+  0x26, 0x17, 0xce, 0x1f, 0xad, 0x5c, 0x99, 0x11, 0xe5, 0xdc, 0xc2, 0xc4,
+  0x18, 0x1d, 0xd4, 0x57, 0x1d, 0x09, 0xeb, 0xdf, 0x68, 0xbc, 0xdd, 0xa1,
+  0x0f, 0x08, 0x72, 0x05, 0xc1, 0x64, 0x10, 0x5e, 0x2c, 0x75, 0x2e, 0xc6,
+  0x46, 0x7a, 0xcb, 0xca, 0x6d, 0x92, 0xd7, 0x63, 0x56, 0x00, 0x01, 0x35,
+  0x9b, 0xa8, 0xc3, 0xc3, 0xe1, 0x01, 0x59, 0xcc, 0x72, 0x33, 0x4e, 0xd8,
+  0x06, 0x2e, 0xe1, 0x00, 0xb0, 0xde, 0x4e, 0x6b, 0xf3, 0x1a, 0x72, 0x8c,
+  0xab, 0xde, 0xc0, 0xf5, 0x84, 0x59, 0x4e, 0xd9, 0x80, 0xaa, 0x0d, 0xc3,
+  0x73, 0x05, 0xb2, 0x82, 0x8d, 0x83, 0x92, 0xb0, 0xc1, 0x6a, 0x8c, 0x93,
+  0x6f, 0xfb, 0xef, 0x70, 0x5d, 0x14, 0xfd, 0xd1, 0x92, 0x15, 0xb3, 0xa0,
+  0x50, 0x97, 0x24, 0x71, 0x92, 0xbe, 0x26, 0x68, 0x6a, 0xfc, 0x3d, 0x1c,
+  0x52, 0x9c, 0x1e, 0x2f, 0x3e, 0x2a, 0xce, 0x97, 0x6c, 0x22, 0xed, 0x38,
+  0x7c, 0x15, 0x49, 0x42, 0xf0, 0x15, 0x84, 0xdd, 0x04, 0x75, 0x93, 0x5d,
+  0xb8, 0xe0, 0x5c, 0xcb, 0xbc, 0xb2, 0x6b, 0xa5, 0x19, 0x72, 0x5d, 0x3b,
+  0xc0, 0xfb, 0x0b, 0x16, 0x13, 0x32, 0x85, 0x81, 0xb7, 0x58, 0x6a, 0xcb,
+  0xdc, 0xb8, 0xad, 0x51, 0x5a, 0x4a, 0xa0, 0x21, 0xd2, 0xa9, 0xd4, 0xe9,
+  0x58, 0x79, 0x95, 0xc8, 0x61, 0xaa, 0x2f, 0x2e, 0xfe, 0x7c, 0x76, 0xf4,
+  0xca, 0xde, 0x7c, 0x68, 0xcf, 0x04, 0x31, 0x8d, 0x83, 0x66, 0x32, 0x45,
+  0x28, 0x0d, 0x8a, 0x63, 0x13, 0x91, 0xf5, 0x6b, 0x73, 0xe6, 0x4b, 0x37,
+  0xfd, 0xe4, 0x87, 0xd7, 0xc7, 0xc3, 0xb3, 0x93, 0xd3, 0xc3, 0x57, 0x2f,
+  0x7f, 0x30, 0x96, 0xfc, 0x05, 0x7c, 0x04, 0x22, 0xa7, 0xb9, 0xcf, 0x3c,
+  0xa2, 0x83, 0xbe, 0xf7, 0xee, 0xe8, 0xfb, 0x0f, 0xa4, 0x1d, 0xbc, 0x02,
+  0xae, 0x7b, 0xef, 0x36, 0x9d, 0xea, 0x4b, 0x50, 0xb1, 0x22, 0xb2, 0xdd,
+  0xa0, 0x09, 0xc1, 0xd7, 0x5e, 0x58, 0x57, 0x9f, 0xd4, 0x27, 0x2a, 0xdc,
+  0x5b, 0x1c, 0x5d, 0x50, 0x8a, 0x2a, 0x6d, 0xe4, 0xd5, 0x46, 0xaa, 0x09,
+  0xfb, 0xeb, 0x7f, 0xa3, 0x96, 0xa0, 0x4a, 0xc4, 0x10, 0x84, 0xae, 0x79,
+  0x0e, 0x5c, 0xd5, 0x6f, 0x7c, 0x40, 0xaf, 0xe2, 0x27, 0x97, 0x88, 0x60,
+  0x71, 0x00, 0x94, 0x5a, 0xa2, 0x9a, 0x9d, 0xde, 0x8a, 0x52, 0xa9, 0xd0,
+  0x4b, 0x88, 0xa1, 0xb5, 0x70, 0x7a, 0xe3, 0x63, 0x2a, 0xc2, 0xb8, 0xb1,
+  0xa4, 0x56, 0x2c, 0x97, 0x2b, 0xf2, 0x9c, 0x1d, 0x9d, 0x0f, 0x8f, 0x87,
+  0x17, 0x50, 0xa3, 0xb4, 0x72, 0xa3, 0x1a, 0xa1, 0xad, 0xac, 0x26, 0x83,
+  0x36, 0x34, 0x01, 0x47, 0xc3, 0x6a, 0x21, 0x8d, 0x13, 0xed, 0xd8, 0x5c,
+  0x33, 0x8b, 0x13, 0x37, 0x80, 0xa4, 0x86, 0x42, 0x10, 0x15, 0xd8, 0xdc,
+  0xf4, 0xd2, 0x0e, 0x70, 0xa1, 0xa4, 0xd1, 0x2a, 0x9a, 0xc1, 0x05, 0x6f,
+  0x78, 0x77, 0xa6, 0xf9, 0x28, 0x28, 0x95, 0xdd, 0xf4, 0x21, 0x23, 0x3c,
+  0x41, 0x21, 0x3a, 0xc2, 0x23, 0x64, 0x06, 0x71, 0x9f, 0x1a, 0xad, 0xc5,
+  0x7c, 0xf5, 0x5a, 0xd3, 0xb4, 0xc6, 0x30, 0x81, 0xd5, 0x29, 0xaa, 0xac,
+  0x9c, 0x84, 0x45, 0xcb, 0xf9, 0xd3, 0x20, 0x0a, 0x55, 0x51, 0x9f, 0x18,
+  0xb0, 0x56, 0x59, 0x36, 0x98, 0x72, 0x2e, 0xa9, 0x68, 0xb0, 0xb4, 0x90,
+  0xd4, 0xc2, 0xa9, 0xf5, 0x1c, 0x28, 0xa4, 0x33, 0xeb, 0x88, 0x20, 0x2a,
+  0x3a, 0x5e, 0x21, 0x87, 0x8d, 0xa1, 0xb5, 0x26, 0x90, 0xb7, 0xd8, 0x04,
+  0x17, 0x76, 0x66, 0xd7, 0x29, 0x56, 0x70, 0xb4, 0x0c, 0x4b, 0xc1, 0xb9,
+  0xd1, 0x4b, 0x55, 0x12, 0x5e, 0x78, 0x0e, 0x91, 0x4c, 0x4b, 0xc6, 0xae,
+  0xac, 0x15, 0x2a, 0xde, 0x14, 0x1f, 0x8d, 0x77, 0x1c, 0x34, 0x51, 0x7c,
+  0x8c, 0x2e, 0xad, 0x5c, 0xe9, 0x43, 0x2b, 0x1a, 0xd4, 0x8e, 0x04, 0xf9,
+  0x96, 0x99, 0x05, 0x2e, 0x89, 0x99, 0xa1, 0x82, 0xc7, 0x61, 0x3e, 0x76,
+  0x97, 0x31, 0xb2, 0x8e, 0xe0, 0x60, 0x2c, 0x15, 0x21, 0x89, 0xd8, 0x1f,
+  0x4c, 0xcb, 0x5c, 0x70, 0x92, 0x2b, 0x31, 0xc3, 0xed, 0x66, 0xe8, 0x79,
+  0x3e, 0x8e, 0x5b, 0x96, 0x3b, 0x20, 0x2b, 0xb1, 0xaf, 0xdf, 0x6b, 0x87,
+  0x2e, 0x43, 0xde, 0x36, 0xab, 0x27, 0x09, 0x57, 0x29, 0xe7, 0xf7, 0x98,
+  0x61, 0x37, 0xc8, 0x13, 0xad, 0x34, 0xfb, 0xd6, 0xf9, 0xa7, 0x99, 0xe1,
+  0x35, 0xaa, 0xee, 0x62, 0x76, 0x0d, 0xdf, 0x20, 0xc9, 0x97, 0x0b, 0x2e,
+  0xa1, 0x34, 0x56, 0x0c, 0x79, 0x8e, 0xda, 0x75, 0x0d, 0xda, 0x25, 0xe2,
+  0x17, 0x8b, 0x56, 0xf5, 0xed, 0xfb, 0x93, 0x8b, 0xe3, 0xb3, 0xd0, 0xff,
+  0x98, 0x7c, 0x7f, 0x7c, 0xf1, 0x0d, 0x49, 0xed, 0xc3, 0xe3, 0x77, 0x5f,
+  0x9f, 0xc0, 0xc9, 0xf3, 0xf6, 0xed, 0xc1, 0x3b, 0xc0, 0x0b, 0xbc, 0xe3,
+  0xd0, 0xc6, 0x03, 0x56, 0x1c, 0xc0, 0x8e, 0x68, 0x89, 0x41, 0x3b, 0x48,
+  0x3c, 0xef, 0x75, 0x7d, 0x0d, 0xad, 0xe3, 0x27, 0x55, 0x95, 0xe7, 0xcd,
+  0x45, 0x5a, 0xe3, 0x1a, 0xd9, 0xac, 0x19, 0xdc, 0xc3, 0xb0, 0xc3, 0xc7,
+  0x16, 0xca, 0x16, 0x16, 0xba, 0x0d, 0x1e, 0xcf, 0x49, 0x8e, 0x22, 0xa1,
+  0xb3, 0x1f, 0x5d, 0xee, 0x6e, 0xef, 0xbf, 0xe0, 0x1d, 0x75, 0xd0, 0xb3,
+  0xac, 0xc7, 0x90, 0xcc, 0x34, 0x57, 0xbd, 0x46, 0xee, 0xcb, 0x66, 0xd2,
+  0x01, 0xf5, 0xc8, 0x43, 0xe2, 0x40, 0x82, 0xc2, 0x9b, 0x04, 0xa1, 0x71,
+  0x42, 0x69, 0x3e, 0x3f, 0x09, 0x2f, 0xd4, 0x41, 0xa3, 0xe6, 0x98, 0xc5,
+  0x07, 0x5e, 0x15, 0x99, 0x3f, 0xb9, 0xfd, 0x53, 0x6b, 0xc6, 0xec, 0xbf,
+  0xac, 0x86, 0xc9, 0xe5, 0xd2, 0x07, 0x5f, 0xeb, 0xd3, 0x96, 0x6c, 0xb9,
+  0x3a, 0x43, 0x6a, 0x3e, 0xdb, 0x17, 0xb1, 0xd2, 0x81, 0x2b, 0x5b, 0x79,
+  0x3e, 0x6a, 0xce, 0x5a, 0xd6, 0x58, 0x14, 0x0e, 0xc8, 0xd6, 0xbc, 0x26,
+  0x9d, 0x33, 0x73, 0x4b, 0x7b, 0xac, 0x91, 0x96, 0x2d, 0xf7, 0xdd, 0xa9,
+  0xd9, 0x0f, 0x2d, 0xaf, 0xcd, 0x15, 0x7e, 0xf3, 0xae, 0x53, 0x2e, 0xad,
+  0x56, 0x14, 0x83, 0xec, 0x63, 0x06, 0x2f, 0x27, 0x7e, 0xfd, 0xcb, 0xe2,
+  0x2a, 0x4c, 0x79, 0x93, 0xc2, 0xd2, 0x8b, 0xd8, 0xce, 0x2a, 0x92, 0xb3,
+  0x88, 0x45, 0x5a, 0xcc, 0xae, 0x31, 0x02, 0xad, 0x50, 0xb7, 0xbb, 0xaa,
+  0x43, 0xfd, 0x7e, 0xaf, 0xfb, 0xfd, 0x9e, 0x98, 0x1d, 0x8f, 0xcf, 0x6e,
+  0x9f, 0x3b, 0x04, 0x54, 0x49, 0xe4, 0x0e, 0xc5, 0x37, 0x13, 0x0a, 0x40,
+  0x61, 0x78, 0x54, 0xee, 0x9c, 0x54, 0x78, 0xa2, 0x18, 0xff, 0x11, 0x42,
+  0xb6, 0x2c, 0x39, 0x41, 0x95, 0x1f, 0x61, 0x3b, 0xb1, 0xc4, 0xfd, 0x72,
+  0x94, 0x1d, 0xf3, 0x29, 0x5c, 0x57, 0xd4, 0x20, 0x7d, 0xff, 0xd4, 0x05,
+  0xe3, 0x7b, 0x9e, 0xc6, 0x45, 0xda, 0x34, 0x1d, 0xaa, 0x9f, 0x2f, 0x6e,
+  0xad, 0xca, 0x2f, 0xfd, 0xfa, 0xdc, 0x15, 0xe8, 0xa9, 0x1a, 0x4e, 0xaa,
+  0x06, 0xda, 0xb0, 0x31, 0x7f, 0x1e, 0x1c, 0xc7, 0x45, 0x82, 0x33, 0x78,
+  0x25, 0xa3, 0x35, 0xae, 0xac, 0x19, 0x91, 0x1d, 0x94, 0x29, 0x65, 0x0b,
+  0xf3, 0x94, 0x53, 0x63, 0x99, 0x1f, 0x05, 0xcc, 0x25, 0x44, 0xfa, 0xd7,
+  0x5d, 0xff, 0x71, 0x6f, 0x67, 0x67, 0x77, 0x7f, 0xf7, 0xf3, 0x17, 0x3b,
+  0xfb, 0xbb, 0xbb, 0xbb, 0x7b, 0xfb, 0xbb, 0xfb, 0xfb, 0x7b, 0x3b, 0x3f,
+  0x6f, 0xc3, 0x7e, 0x74, 0x9b, 0x67, 0x77, 0xe6, 0x99, 0x92, 0x64, 0x3c,
+  0x26, 0x6b, 0xa9, 0xd6, 0xae, 0x1a, 0xbc, 0xea, 0xb9, 0x26, 0xf9, 0x38,
+  0x58, 0x09, 0x89, 0x99, 0x17, 0x08, 0xb9, 0x85, 0x4f, 0x35, 0xe5, 0x33,
+  0x18, 0xc0, 0x5c, 0xf3, 0xa8, 0xfe, 0xba, 0xc4, 0x4c, 0x47, 0x10, 0x07,
+  0x58, 0xa6, 0xa9, 0x5c, 0x62, 0xdf, 0xd5, 0xb4, 0x18, 0x8d, 0x38, 0x75,
+  0xc1, 0xe5, 0xb6, 0x0e, 0x12, 0x60, 0xa9, 0xde, 0x08, 0x49, 0xa8, 0xeb,
+  0x80, 0xa3, 0x0a, 0xe5, 0xa0, 0xfb, 0xd5, 0x11, 0xc1, 0x4b, 0x23, 0xa9,
+  0xc7, 0x05, 0xea, 0x0a, 0x4c, 0xc0, 0x94, 0x68, 0x91, 0x4a, 0x97, 0xf3,
+  0x92, 0x5c, 0x66, 0x9f, 0xef, 0xec, 0xef, 0xa3, 0xf4, 0xc7, 0xef, 0x77,
+  0x7b, 0x1a, 0x10, 0x1a, 0x46, 0xb9, 0xf7, 0xdc, 0xf5, 0x24, 0x6d, 0x40,
+  0xfd, 0x08, 0xe7, 0x39, 0x5f, 0xce, 0xb2, 0x92, 0x14, 0x11, 0x14, 0x8f,
+  0xe5, 0x88, 0x48, 0x36, 0x7a, 0x0b, 0xc6, 0x1a, 0x23, 0xb2, 0xb4, 0xa2,
+  0xf1, 0x71, 0x23, 0x08, 0x56, 0xac, 0xcb, 0x42, 0x17, 0xbc, 0x20, 0x3f,
+  0x45, 0xd7, 0x36, 0x97, 0xbf, 0x61, 0x43, 0xbe, 0xe4, 0xb2, 0x48, 0x16,
+  0x8f, 0xdc, 0xb7, 0xca, 0x19, 0xf8, 0x70, 0xcd, 0xa5, 0xa4, 0x29, 0x1e,
+  0x17, 0x19, 0x9e, 0x2d, 0x26, 0x81, 0x70, 0xab, 0x09, 0x3c, 0x3f, 0x06,
+  0x93, 0xdd, 0x7b, 0xb6, 0xfb, 0xb3, 0xc4, 0x2b, 0xe2, 0x40, 0xf8, 0x55,
+  0xd3, 0x72, 0x70, 0x93, 0x30, 0x45, 0xc3, 0x08, 0x69, 0x33, 0x1b, 0x5c,
+  0x0d, 0x4c, 0xaa, 0x50, 0x6b, 0x63, 0x2f, 0x8c, 0x1a, 0x17, 0x9c, 0x72,
+  0x29, 0x54, 0xcc, 0x7a, 0x9a, 0x19, 0x94, 0xcc, 0x20, 0x2c, 0xc6, 0xcc,
+  0x46, 0x5d, 0x1f, 0xba, 0x61, 0x8e, 0x2e, 0x0e, 0xe8, 0xf2, 0xf8, 0xb6,
+  0xab, 0xe8, 0xbf, 0xcd, 0x48, 0x2b, 0xc7, 0x66, 0x6f, 0xf2, 0x79, 0xb8,
+  0x75, 0xe8, 0xc0, 0x58, 0xbb, 0xa7, 0xc9, 0x26, 0x9c, 0x16, 0xcf, 0x3e,
+  0x7f, 0xf6, 0x74, 0x4b, 0x4a, 0x31, 0xc8, 0x6b, 0x19, 0x12, 0x44, 0xd8,
+  0x2a, 0xa9, 0xe8, 0x34, 0x30, 0x27, 0x3b, 0x96, 0xf4, 0xfe, 0xfc, 0x58,
+  0x8e, 0xf4, 0xb5, 0x80, 0x08, 0x88, 0xd2, 0xdb, 0x46, 0x93, 0xe3, 0xfb,
+  0x36, 0x10, 0x32, 0x66, 0x39, 0x90, 0x0e, 0x39, 0xf9, 0x1a, 0x17, 0xa3,
+  0x4b, 0xfe, 0xe7, 0x1b, 0x96, 0x0e, 0x68, 0xc1, 0x05, 0x0a, 0xb5, 0xee,
+  0x13, 0x0f, 0x86, 0xa1, 0x11, 0x81, 0xcc, 0xaa, 0x74, 0xe6, 0x34, 0x30,
+  0xe8, 0x41, 0xc2, 0x8f, 0x84, 0xfb, 0xb7, 0xd0, 0xb8, 0xb7, 0xc4, 0xe5,
+  0xcf, 0x42, 0x21, 0xc8, 0x90, 0x1e, 0xb4, 0xd8, 0x51, 0x8c, 0xb8, 0x91,
+  0x8e, 0xe6, 0xa5, 0xcd, 0x00, 0xd4, 0xc9, 0xf0, 0x5c, 0x94, 0x15, 0xb9,
+  0x25, 0x14, 0x7f, 0x76, 0xcd, 0x96, 0xc5, 0xbc, 0x61, 0xf2, 0xd1, 0x64,
+  0x7a, 0x4e, 0x6a, 0xe7, 0x98, 0xe3, 0x19, 0x5d, 0x47, 0xe5, 0xbd, 0x4a,
+  0xd8, 0xac, 0x26, 0xb8, 0x7a, 0x6a, 0xad, 0x88, 0x00, 0x81, 0x8d, 0x08,
+  0x43, 0xe9, 0x1d, 0x6a, 0x8a, 0x29, 0xcd, 0x8d, 0x01, 0x34, 0xd8, 0x7e,
+  0x7f, 0x66, 0x5f, 0x05, 0x01, 0x33, 0x61, 0x7e, 0x99, 0xfd, 0x6e, 0xcf,
+  0x05, 0xb1, 0x94, 0x69, 0x7b, 0x62, 0x2b, 0x86, 0x26, 0x88, 0x9a, 0x1c,
+  0x3f, 0xe5, 0xb4, 0x9f, 0x4d, 0x1e, 0xc9, 0xf6, 0xf6, 0xd6, 0x8a, 0xd1,
+  0xe8, 0xd7, 0xb1, 0xde, 0xcf, 0x18, 0x94, 0x24, 0x48, 0xe9, 0xa4, 0x3d,
+  0x6f, 0x36, 0x8e, 0xa5, 0xcd, 0x2b, 0xec, 0xe4, 0x44, 0x03, 0x63, 0xc5,
+  0x8c, 0x6a, 0xea, 0x95, 0x0c, 0xde, 0x98, 0x57, 0x73, 0x12, 0x1a, 0x8b,
+  0x63, 0x20, 0x51, 0x52, 0x55, 0x5a, 0xfc, 0x9b, 0x83, 0xe4, 0x00, 0xd4,
+  0xd0, 0xe8, 0x38, 0x18, 0xb2, 0xd9, 0x73, 0x0d, 0xf7, 0xdc, 0x84, 0x58,
+  0x67, 0xce, 0xeb, 0x05, 0x5f, 0x9a, 0x98, 0x67, 0x98, 0x00, 0xce, 0xd8,
+  0x3b, 0xca, 0x04, 0xff, 0xc4, 0x71, 0xce, 0x00, 0xcf, 0x38, 0x9f, 0x37,
+  0x0a, 0x85, 0x6a, 0x23, 0xec, 0xe9, 0x76, 0x93, 0x60, 0xa8, 0xc4, 0xd2,
+  0x20, 0x78, 0xc3, 0xe2, 0x81, 0x0c, 0x41, 0xa0, 0x51, 0xed, 0x22, 0x58,
+  0x3b, 0x22, 0x16, 0x77, 0xeb, 0x48, 0xc8, 0xab, 0xb1, 0x1e, 0x3d, 0xa1,
+  0x78, 0x89, 0x62, 0x90, 0x80, 0x5b, 0x3a, 0x24, 0x60, 0x18, 0x07, 0xc7,
+  0x27, 0x08, 0x8b, 0x3b, 0x21, 0x15, 0x6f, 0x68, 0xa2, 0x12, 0x87, 0x89,
+  0x72, 0xc0, 0xde, 0x3c, 0x87, 0xb8, 0xde, 0x73, 0x05, 0x47, 0x2c, 0x5b,
+  0x8a, 0xf5, 0x16, 0x38, 0xf7, 0x44, 0xf5, 0x57, 0x90, 0x40, 0xda, 0x2d,
+  0x92, 0x97, 0x2a, 0x31, 0xda, 0x32, 0x00, 0x2f, 0xa0, 0xe9, 0xd9, 0x93,
+  0xca, 0x2a, 0xb5, 0xb0, 0x69, 0xae, 0x77, 0x54, 0x66, 0xd3, 0xec, 0x56,
+  0xad, 0xab, 0x02, 0x67, 0xfa, 0xb5, 0xfa, 0x30, 0xa5, 0xe0, 0x69, 0xad,
+  0xbe, 0xd8, 0x8e, 0x9f, 0x14, 0x9d, 0x6e, 0x0b, 0x2a, 0x8c, 0x07, 0xfb,
+  0x40, 0xff, 0x1e, 0x84, 0xdf, 0x9c, 0xc6, 0x78, 0xaf, 0x0f, 0x25, 0x57,
+  0x83, 0x5b, 0xdf, 0x57, 0x8a, 0xe7, 0xd0, 0x8e, 0x16, 0x17, 0x63, 0xa1,
+  0xd5, 0xcc, 0x13, 0xeb, 0x7b, 0xcf, 0x60, 0x92, 0xc5, 0x65, 0x80, 0x9b,
+  0xa7, 0x07, 0x4b, 0xad, 0xd4, 0x80, 0x27, 0x8d, 0x0c, 0x05, 0x31, 0x7a,
+  0x92, 0x3a, 0xca, 0xc4, 0x51, 0x4c, 0xe9, 0x4f, 0x0e, 0xa8, 0x92, 0x10,
+  0x4b, 0x7a, 0x16, 0x30, 0xaf, 0x41, 0x4c, 0x2b, 0xfd, 0x29, 0xe9, 0x10,
+  0xfa, 0x17, 0x37, 0x55, 0x2e, 0x19, 0x4d, 0xb8, 0x27, 0xb7, 0x21, 0xbc,
+  0x8e, 0xf5, 0x78, 0xe0, 0x46, 0xaf, 0x5e, 0x7f, 0x19, 0xff, 0x6b, 0x73,
+  0x4a, 0x9b, 0x1c, 0x52, 0x94, 0xb6, 0xbc, 0xb2, 0x0d, 0x23, 0x29, 0x71,
+  0xf8, 0xd5, 0x12, 0xde, 0x30, 0x57, 0xc0, 0x07, 0xa3, 0x98, 0xe1, 0x2e,
+  0xca, 0xa4, 0x9a, 0xa8, 0x6b, 0x1c, 0x2a, 0xdd, 0x92, 0xb6, 0x57, 0x5a,
+  0x3f, 0x29, 0xee, 0x50, 0x0a, 0xf5, 0xf2, 0x32, 0x1f, 0xa3, 0xbe, 0x8d,
+  0x47, 0x0d, 0x06, 0x8f, 0x97, 0x07, 0x67, 0x56, 0x7d, 0x89, 0xe6, 0x96,
+  0x2c, 0x96, 0xa3, 0x29, 0x5d, 0xd6, 0x16, 0xcf, 0x4e, 0xa7, 0x8a, 0x57,
+  0x89, 0xb4, 0x2d, 0x6e, 0x4e, 0xbc, 0xf9, 0xac, 0x70, 0xb6, 0x62, 0xa8,
+  0xb5, 0x3e, 0x3c, 0x44, 0xf0, 0x19, 0xd7, 0x84, 0x45, 0xa0, 0xf1, 0xac,
+  0x98, 0x5b, 0x3a, 0xcc, 0xb2, 0x12, 0x38, 0x49, 0x2b, 0x26, 0xbf, 0x26,
+  0xae, 0x89, 0x7c, 0xaa, 0xa0, 0xed, 0xaa, 0x9a, 0xf3, 0x1b, 0xe1, 0x64,
+  0x26, 0xfd, 0xc5, 0xf5, 0xc2, 0x76, 0xda, 0x04, 0x22, 0x91, 0x96, 0x34,
+  0x01, 0x83, 0x8f, 0xde, 0xd9, 0x37, 0x67, 0x83, 0xe4, 0x08, 0x2d, 0xc9,
+  0x98, 0x54, 0xd0, 0x65, 0x1b, 0x0d, 0x7d, 0x47, 0x93, 0xbd, 0xc2, 0x05,
+  0x76, 0x5a, 0xe2, 0x2f, 0x6e, 0x4d, 0xbf, 0x14, 0xb3, 0x2c, 0x7f, 0xdb,
+  0xec, 0x95, 0x1a, 0xb2, 0x30, 0xeb, 0x33, 0xfe, 0x9d, 0xce, 0x0a, 0x89,
+  0x5f, 0x6e, 0x9b, 0x7c, 0x0f, 0x45, 0xd9, 0x00, 0xdf, 0x91, 0x37, 0x13,
+  0x92, 0xca, 0x58, 0xb6, 0x5a, 0xdc, 0xf3, 0xfe, 0x05, 0xcc, 0x51, 0xe4,
+  0x4f, 0x69, 0x20, 0x20, 0x2d, 0x25, 0x3f, 0x17, 0xc0, 0x27, 0x07, 0xab,
+  0x14, 0xd8, 0x99, 0x32, 0xd3, 0x70, 0xc7, 0x42, 0xdd, 0xa4, 0x62, 0xd1,
+  0xa8, 0xb2, 0xd6, 0x79, 0x0d, 0xf4, 0x37, 0xfb, 0x02, 0x6a, 0x37, 0xc6,
+  0x42, 0x52, 0x0b, 0x6d, 0xc1, 0x60, 0xed, 0xff, 0x0f, 0x1d, 0xc0, 0x21,
+  0x97, 0xe5, 0xa3, 0x02, 0x00,
 };
 #define BUF_SIZE 0x10000
 static voidpf zalloc_func(voidpf opaque, unsigned int items, unsigned int size)
 {
   (void) opaque;
   /* not a typo, keep it calloc() */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_operate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_operate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_operate.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_operate.c	2016-07-21 06:31:36.000000000 +0800
@@ -1839,13 +1839,13 @@
 #ifdef HAVE_SETLOCALE
   setlocale(LC_ALL, "");
 #endif
 
   /* Parse .curlrc if necessary */
   if((argc == 1) ||
-     (!curlx_strequal(argv[1], "-q") ||
+     (!curlx_strequal(argv[1], "-q") &&
       !curlx_strequal(argv[1], "--disable"))) {
     parseconfig(NULL, config); /* ignore possible failure */
 
     /* If we had no arguments then make sure a url was specified in .curlrc */
     if((argc < 2) && (!config->first->url_list)) {
       helpf(config->errors, NULL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_urlglob.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_urlglob.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_urlglob.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_urlglob.c	2016-07-21 06:31:36.000000000 +0800
@@ -398,13 +398,13 @@
         pos++;
         res = glob_range(glob, &pattern, &pos, amount, globindex++);
         break;
       }
     }
 
-    if(++glob->size > GLOB_PATTERN_NUM)
+    if(++glob->size >= GLOB_PATTERN_NUM)
       return GLOBERROR("too many globs", pos, CURLE_URL_MALFORMAT);
   }
   return res;
 }
 
 CURLcode glob_url(URLGlob** glob, char* url, unsigned long *urlnum,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_version.h	2016-05-30 14:16:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_version.h	2016-07-21 16:56:49.000000000 +0800
@@ -22,13 +22,13 @@
  *
  ***************************************************************************/
 #include <curl/curlver.h>
 
 #define CURL_NAME "curl"
 #define CURL_COPYRIGHT LIBCURL_COPYRIGHT
-#define CURL_VERSION "7.49.1"
+#define CURL_VERSION "7.50.0"
 #define CURL_VERSION_MAJOR LIBCURL_VERSION_MAJOR
 #define CURL_VERSION_MINOR LIBCURL_VERSION_MINOR
 #define CURL_VERSION_PATCH LIBCURL_VERSION_PATCH
 #define CURL_ID CURL_NAME " " CURL_VERSION " (" OS ") "
 
 #endif /* HEADER_CURL_TOOL_VERSION_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_writeout.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_writeout.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/src/tool_writeout.c	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/src/tool_writeout.c	2016-07-21 06:31:36.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -54,12 +54,13 @@
   VAR_SSL_VERIFY_RESULT,
   VAR_EFFECTIVE_FILENAME,
   VAR_PRIMARY_IP,
   VAR_PRIMARY_PORT,
   VAR_LOCAL_IP,
   VAR_LOCAL_PORT,
+  VAR_HTTP_VERSION,
   VAR_NUM_OF_VARS /* must be the last */
 } replaceid;
 
 struct variable {
   const char *name;
   replaceid id;
@@ -92,12 +93,13 @@
   {"ssl_verify_result", VAR_SSL_VERIFY_RESULT},
   {"filename_effective", VAR_EFFECTIVE_FILENAME},
   {"remote_ip", VAR_PRIMARY_IP},
   {"remote_port", VAR_PRIMARY_PORT},
   {"local_ip", VAR_LOCAL_IP},
   {"local_port", VAR_LOCAL_PORT},
+  {"http_version", VAR_HTTP_VERSION},
   {NULL, VAR_NONE}
 };
 
 void ourWriteOut(CURL *curl, struct OutStruct *outs, const char *writeinfo)
 {
   FILE *stream = stdout;
@@ -275,12 +277,32 @@
               case VAR_LOCAL_PORT:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_LOCAL_PORT,
                                      &longinfo))
                   fprintf(stream, "%ld", longinfo);
                 break;
+              case VAR_HTTP_VERSION:
+                if(CURLE_OK ==
+                   curl_easy_getinfo(curl, CURLINFO_HTTP_VERSION,
+                                     &longinfo)) {
+                  const char *version = "0";
+                  switch (longinfo) {
+                  case CURL_HTTP_VERSION_1_0:
+                    version = "1.0";
+                    break;
+                  case CURL_HTTP_VERSION_1_1:
+                    version = "1.1";
+                    break;
+                  case CURL_HTTP_VERSION_2_0:
+                    version = "2";
+                    break;
+                  }
+
+                  fprintf(stream, version);
+                }
+                break;
               default:
                 break;
               }
               break;
             }
           }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/CMakeLists.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/CMakeLists.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/CMakeLists.txt	2016-03-17 23:58:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/CMakeLists.txt	2016-07-21 06:31:36.000000000 +0800
@@ -1,3 +1,4 @@
 add_subdirectory(data)
 add_subdirectory(libtest)
 add_subdirectory(server)
+add_subdirectory(unit)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/data/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/data/Makefile.in	2016-05-22 01:52:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -445,20 +445,21 @@
 test1088 test1089 test1090 test1091 test1092 test1093 test1094 test1095 \
 test1096 test1097 test1098 test1099 test1100 test1101 test1102 test1103 \
 test1104 test1105 test1106 test1107 test1108 test1109 test1110 test1111 \
 test1112 test1113 test1114 test1115 test1116 test1117 test1118 test1119 \
 test1120 test1121 test1122 test1123 test1124 test1125 test1126 test1127 \
 test1128 test1129 test1130 test1131 test1132 test1133 test1134 test1135 \
-test1136 test1137 test1138 test1139 test1140 \
+test1136 test1137 test1138 test1139 test1140 test1141 test1142 test1143 \
 \
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
 test1220 test1221 test1222 test1223 test1224 test1225 test1226 test1227 \
 test1228 test1229 test1230 test1231 test1232 test1233 test1234 test1235 \
 test1236 test1237 test1238 test1239 test1240 test1241 test1242 test1243 \
+test1244 \
 \
 test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
 test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
 test1316 test1317 test1318 test1319 test1320 test1321 test1322          \
          test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
 test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
@@ -485,12 +486,14 @@
 test1520 \
 \
 test1525 test1526 test1527 test1528 test1529 test1530 test1531 \
 \
 test1600 test1601 test1602 test1603 test1604 \
 \
+test1700 test1701 test1702 \
+\
 test1800 test1801 \
 \
 test1900 test1901 test1902 test1903 \
 \
 test2000 test2001 test2002 test2003 test2004 test2005 test2006 test2007 \
 test2008 test2009 test2010 test2011 test2012 test2013 test2014 test2015 \
@@ -512,15 +515,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/data/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/data/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu tests/data/Makefile
+	  $(AUTOMAKE) --foreign tests/data/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/data/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/data/Makefile.inc	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data/Makefile.inc	2016-07-21 06:31:36.000000000 +0800
@@ -116,20 +116,21 @@
 test1088 test1089 test1090 test1091 test1092 test1093 test1094 test1095 \
 test1096 test1097 test1098 test1099 test1100 test1101 test1102 test1103 \
 test1104 test1105 test1106 test1107 test1108 test1109 test1110 test1111 \
 test1112 test1113 test1114 test1115 test1116 test1117 test1118 test1119 \
 test1120 test1121 test1122 test1123 test1124 test1125 test1126 test1127 \
 test1128 test1129 test1130 test1131 test1132 test1133 test1134 test1135 \
-test1136 test1137 test1138 test1139 test1140 \
+test1136 test1137 test1138 test1139 test1140 test1141 test1142 test1143 \
 \
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
 test1220 test1221 test1222 test1223 test1224 test1225 test1226 test1227 \
 test1228 test1229 test1230 test1231 test1232 test1233 test1234 test1235 \
 test1236 test1237 test1238 test1239 test1240 test1241 test1242 test1243 \
+test1244 \
 \
 test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
 test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
 test1316 test1317 test1318 test1319 test1320 test1321 test1322          \
          test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
 test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
@@ -156,12 +157,14 @@
 test1520 \
 \
 test1525 test1526 test1527 test1528 test1529 test1530 test1531 \
 \
 test1600 test1601 test1602 test1603 test1604 \
 \
+test1700 test1701 test1702 \
+\
 test1800 test1801 \
 \
 test1900 test1901 test1902 test1903 \
 \
 test2000 test2001 test2002 test2003 test2004 test2005 test2006 test2007 \
 test2008 test2009 test2010 test2011 test2012 test2013 test2014 test2015 \
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1141
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1142
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1143
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1244
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1700
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1701
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data: test1702
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/data/test558 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data/test558
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/data/test558	2016-02-03 07:04:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/data/test558	2016-07-21 06:31:36.000000000 +0800
@@ -14,12 +14,13 @@
 <client>
 <server>
 none
 </server>
 <features>
 TrackMemory
+ipv6
 </features>
 # tool is what to use instead of 'curl'
 <tool>
 lib558
 </tool>
 
@@ -32,12 +33,14 @@
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <file name="log/memdump">
+FD hostip6.c: socket()
+FD connect.c: sclose()
 MEM lib558.c: malloc()
 MEM lib558.c: free()
 MEM escape.c: malloc()
 MEM escape.c: realloc()
 MEM escape.c: realloc()
 MEM escape.c: free()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/FILEFORMAT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/FILEFORMAT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/FILEFORMAT	2016-03-17 23:58:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/FILEFORMAT	2016-07-21 06:31:36.000000000 +0800
@@ -178,12 +178,13 @@
 http-ipv6
 http-proxy
 http-unix
 https
 httptls+srp
 httptls+srp-ipv6
+http/2
 imap
 none
 pop3
 rtsp
 rtsp-ipv6
 scp
@@ -423,14 +424,15 @@
 The file's contents must be identical to this after the test is complete.
 Use the mode="text" attribute if the output is in text mode on platforms that
 have a text/binary difference.
 Variables are substituted as in the <command> section.
 </file>
 <stripfile>
-One perl op per line that operates on the file before being compared. This is
-pretty advanced. Example: "s/^EPRT .*/EPRT stripped/"
+One perl op per line that operates on the output file or stdout before being
+compared with what is stored in the test file. This is pretty
+advanced. Example: "s/^EPRT .*/EPRT stripped/"
 </stripfile>
 <upload>
 the contents of the upload data curl should have sent
 </upload>
 <valgrind>
 disable - disables the valgrind log check for this test
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/Makefile.in	2016-05-30 14:11:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/Makefile.in	2016-07-21 07:54:05.000000000 +0800
@@ -447,15 +447,15 @@
 	    *$$dep*) \
 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
 	        && { if test -f $@; then exit 0; else break; fi; }; \
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu tests/Makefile
+	  $(AUTOMAKE) --foreign tests/Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
 	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/runtests.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/runtests.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/runtests.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/runtests.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/runtests.pl	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/runtests.pl	2016-07-21 06:31:36.000000000 +0800
@@ -3,13 +3,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at https://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -141,12 +141,13 @@
 my $GOPHER6PORT;         # Gopher IPv6 server port
 my $HTTPTLSPORT;         # HTTP TLS (non-stunnel) server port
 my $HTTPTLS6PORT;        # HTTP TLS (non-stunnel) IPv6 server port
 my $HTTPPROXYPORT;       # HTTP proxy port, when using CONNECT
 my $HTTPPIPEPORT;        # HTTP pipelining port
 my $HTTPUNIXPATH;        # HTTP server Unix domain socket path
+my $HTTP2PORT;           # HTTP/2 server port
 
 my $srcdir = $ENV{'srcdir'} || '.';
 my $CURL="../src/curl".exe_ext(); # what curl executable to run on the tests
 my $VCURL=$CURL;   # what curl binary to use to verify the servers with
                    # VCURL is handy to set to the system one when the one you
                    # just built hangs or crashes and thus prevent verification
@@ -363,13 +364,13 @@
 delete $ENV{'CURL_CA_BUNDLE'} if($ENV{'CURL_CA_BUNDLE'});
 
 #######################################################################
 # Load serverpidfile hash with pidfile names for all possible servers.
 #
 sub init_serverpidfile_hash {
-  for my $proto (('ftp', 'http', 'imap', 'pop3', 'smtp')) {
+  for my $proto (('ftp', 'http', 'imap', 'pop3', 'smtp', 'http/2')) {
     for my $ssl (('', 's')) {
       for my $ipvnum ((4, 6)) {
         for my $idnum ((1, 2, 3)) {
           my $serv = servername_id("$proto$ssl", $ipvnum, $idnum);
           my $pidf = server_pidfilename("$proto$ssl", $ipvnum, $idnum);
           $serverpidfile{$serv} = $pidf;
@@ -383,13 +384,13 @@
         my $serv = servername_id($proto, $ipvnum, $idnum);
         my $pidf = server_pidfilename($proto, $ipvnum, $idnum);
         $serverpidfile{$serv} = $pidf;
       }
     }
   }
-  for my $proto (('http', 'imap', 'pop3', 'smtp')) {
+  for my $proto (('http', 'imap', 'pop3', 'smtp', 'http/2')) {
     for my $ssl (('', 's')) {
       my $serv = servername_id("$proto$ssl", "unix", 1);
       my $pidf = server_pidfilename("$proto$ssl", "unix", 1);
       $serverpidfile{$serv} = $pidf;
     }
   }
@@ -1187,12 +1188,69 @@
     my $srvrname = servername_str($proto, $ipvnum, $idnum);
     logmsg " server precheck FAILED (unresponsive $srvrname server)\n";
     return 0;
 }
 
 #######################################################################
+# start the http2 server
+#
+sub runhttp2server {
+    my ($verbose, $port) = @_;
+    my $server;
+    my $srvrname;
+    my $pidfile;
+    my $logfile;
+    my $flags = "";
+    my $proto="http/2";
+    my $ipvnum = 4;
+    my $idnum = 0;
+    my $exe = "$perl $srcdir/http2-server.pl";
+    my $verbose_flag = "--verbose ";
+
+    $server = servername_id($proto, $ipvnum, $idnum);
+
+    $pidfile = $serverpidfile{$server};
+
+    # don't retry if the server doesn't work
+    if ($doesntrun{$pidfile}) {
+        return (0,0);
+    }
+
+    my $pid = processexists($pidfile);
+    if($pid > 0) {
+        stopserver($server, "$pid");
+    }
+    unlink($pidfile) if(-f $pidfile);
+
+    $srvrname = servername_str($proto, $ipvnum, $idnum);
+
+    $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);
+
+    $flags .= "--pidfile \"$pidfile\" --logfile \"$logfile\" ";
+    $flags .= "--port $HTTP2PORT ";
+    $flags .= $verbose_flag if($debugprotocol);
+
+    my $cmd = "$exe $flags";
+    my ($http2pid, $pid2) = startnew($cmd, $pidfile, 15, 0);
+
+    if($http2pid <= 0 || !pidexists($http2pid)) {
+        # it is NOT alive
+        logmsg "RUN: failed to start the $srvrname server\n";
+        stopserver($server, "$pid2");
+        $doesntrun{$pidfile} = 1;
+        return (0,0);
+    }
+
+    if($verbose) {
+        logmsg "RUN: $srvrname server is now running PID $http2pid\n";
+    }
+
+    return ($http2pid, $pid2);
+}
+
+#######################################################################
 # start the http server
 #
 sub runhttpserver {
     my ($proto, $verbose, $alt, $port_or_path) = @_;
     my $ip = $HOSTIP;
     my $ipvnum = 4;
@@ -2481,12 +2539,14 @@
                     $resolver="threaded";
                 }
             }
             if($feat =~ /HTTP2/) {
                 # http2 enabled
                 $has_http2=1;
+
+                push @protocols, 'http/2';
             }
         }
         #
         # Test harness currently uses a non-stunnel server in order to
         # run HTTP TLS-SRP tests required when curl is built with https
         # protocol support and TLS-SRP feature enabled. For convenience
@@ -2674,12 +2734,13 @@
   $$thing =~ s/%GOPHERPORT/$GOPHERPORT/g;
 
   $$thing =~ s/%HTTPTLS6PORT/$HTTPTLS6PORT/g;
   $$thing =~ s/%HTTPTLSPORT/$HTTPTLSPORT/g;
   $$thing =~ s/%HTTP6PORT/$HTTP6PORT/g;
   $$thing =~ s/%HTTPSPORT/$HTTPSPORT/g;
+  $$thing =~ s/%HTTP2PORT/$HTTP2PORT/g;
   $$thing =~ s/%HTTPPORT/$HTTPPORT/g;
   $$thing =~ s/%HTTPPIPEPORT/$HTTPPIPEPORT/g;
   $$thing =~ s/%PROXYPORT/$HTTPPROXYPORT/g;
 
   $$thing =~ s/%IMAP6PORT/$IMAP6PORT/g;
   $$thing =~ s/%IMAPPORT/$IMAPPORT/g;
@@ -2968,13 +3029,13 @@
             }
             elsif($1 eq "Metalink") {
                 if($has_metalink) {
                     next;
                 }
             }
-            elsif($1 eq "http2") {
+            elsif($1 eq "http/2") {
                 if($has_http2) {
                     next;
                 }
             }
             elsif($1 eq "PSL") {
                 if($has_psl) {
@@ -3776,12 +3837,29 @@
     my $res;
     chomp $errorcode;
     if (@validstdout) {
         # verify redirected stdout
         my @actual = loadarray($STDOUT);
 
+        # what parts to cut off from stdout
+        my @stripfile = getpart("verify", "stripfile");
+
+        foreach my $strip (@stripfile) {
+            chomp $strip;
+            my @newgen;
+            for(@actual) {
+                eval $strip;
+                if($_) {
+                    push @newgen, $_;
+                }
+            }
+            # this is to get rid of array entries that vanished (zero
+            # length) because of replacements
+            @actual = @newgen;
+        }
+
         # variable-replace in the stdout we have from the test case file
         @validstdout = fixarray(@validstdout);
 
         # get all attributes
         my %hash = getpartattr("verify", "stdout");
 
@@ -4174,13 +4252,13 @@
 sub startservers {
     my @what = @_;
     my ($pid, $pid2);
     for(@what) {
         my (@whatlist) = split(/\s+/,$_);
         my $what = lc($whatlist[0]);
-        $what =~ s/[^a-z0-9-]//g;
+        $what =~ s/[^a-z0-9\/-]//g;
 
         my $certfile;
         if($what =~ /^(ftp|http|imap|pop3|smtp)s((\d*)(-ipv6|-unix|))$/) {
             $certfile = ($whatlist[1]) ? $whatlist[1] : 'stunnel.pem';
         }
 
@@ -4260,12 +4338,23 @@
                 }
                 logmsg sprintf("* pid gopher-ipv6 => %d %d\n", $pid,
                                $pid2) if($verbose);
                 $run{'gopher-ipv6'}="$pid $pid2";
             }
         }
+        elsif($what eq "http/2") {
+            if(!$run{'http/2'}) {
+                ($pid, $pid2) = runhttp2server($verbose, $HTTP2PORT);
+                if($pid <= 0) {
+                    return "failed starting HTTP/2 server";
+                }
+                logmsg sprintf ("* pid http/2 => %d %d\n", $pid, $pid2)
+                    if($verbose);
+                $run{'http/2'}="$pid $pid2";
+            }
+        }
         elsif($what eq "http") {
             if($torture && $run{'http'} &&
                !responsive_http_server("http", $verbose, 0, $HTTPPORT)) {
                 stopserver('http');
             }
             if(!$run{'http'}) {
@@ -5000,12 +5089,13 @@
 $GOPHERPORT      = $base++; # Gopher IPv4 server port
 $GOPHER6PORT     = $base++; # Gopher IPv6 server port
 $HTTPTLSPORT     = $base++; # HTTP TLS (non-stunnel) server port
 $HTTPTLS6PORT    = $base++; # HTTP TLS (non-stunnel) IPv6 server port
 $HTTPPROXYPORT   = $base++; # HTTP proxy port, when using CONNECT
 $HTTPPIPEPORT    = $base++; # HTTP pipelining port
+$HTTP2PORT       = $base++; # HTTP/2 port
 $HTTPUNIXPATH    = 'http.sock'; # HTTP server Unix domain socket path
 
 #######################################################################
 # clear and create logging directory:
 #
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/server/getpart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/server/getpart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/server/getpart.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/server/getpart.c	2016-07-21 06:31:36.000000000 +0800
@@ -26,13 +26,13 @@
 #define ENABLE_CURLX_PRINTF
 /* make the curlx header define all printf() functions to use the curlx_*
    versions instead */
 #include "curlx.h" /* from the private lib dir */
 
 /* just to please curl_base64.h we create a fake struct */
-struct SessionHandle {
+struct Curl_easy {
   int fake;
 };
 
 #include "curl_base64.h"
 #include "curl_memory.h"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/serverhelp.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/serverhelp.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/serverhelp.pm	2016-03-22 15:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/serverhelp.pm	2016-07-21 06:31:36.000000000 +0800
@@ -2,13 +2,13 @@
 #                                  _   _ ____  _
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at https://curl.haxx.se/docs/copyright.html.
 #
 # You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -102,13 +102,13 @@
 #
 sub servername_str {
     my ($proto, $ipver, $idnum) = @_;
 
     $proto = uc($proto) if($proto);
     die "unsupported protocol: '$proto'" unless($proto &&
-        ($proto =~ /^(((FTP|HTTP|IMAP|POP3|SMTP|HTTP-PIPE)S?)|(TFTP|SFTP|SOCKS|SSH|RTSP|GOPHER|HTTPTLS))$/));
+        ($proto =~ /^(((FTP|HTTP|HTTP\/2|IMAP|POP3|SMTP|HTTP-PIPE)S?)|(TFTP|SFTP|SOCKS|SSH|RTSP|GOPHER|HTTPTLS))$/));
 
     $ipver = (not $ipver) ? 'ipv4' : lc($ipver);
     die "unsupported IP version: '$ipver'" unless($ipver &&
         ($ipver =~ /^(4|6|ipv4|ipv6|-ipv4|-ipv6|unix)$/));
     $ipver = ($ipver =~ /6$/) ? '-IPv6' : (($ipver =~ /unix$/) ? '-unix' : '');
 
@@ -134,12 +134,13 @@
 # Return server name string formatted for file name purposes
 #
 sub servername_canon {
     my ($proto, $ipver, $idnum) = @_;
     my $string = lc(servername_str($proto, $ipver, $idnum));
     $string =~ tr/-/_/;
+    $string =~ s/\//_v/;
     return $string;
 }
 
 
 #***************************************************************************
 # Return file name for server pid file.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/testcurl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/testcurl.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/unit/unit1302.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/unit/unit1302.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/unit/unit1302.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/unit/unit1302.c	2016-07-21 06:31:36.000000000 +0800
@@ -23,13 +23,13 @@
 
 #include "urldata.h"
 #include "url.h" /* for Curl_safefree */
 #include "curl_base64.h"
 #include "memdebug.h" /* LAST include file */
 
-static struct SessionHandle *data;
+static struct Curl_easy *data;
 
 static CURLcode unit_setup(void)
 {
   data = curl_easy_init();
   if(!data)
     return CURLE_OUT_OF_MEMORY;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/unit/unit1303.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/unit/unit1303.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/unit/unit1303.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/unit/unit1303.c	2016-07-21 06:31:36.000000000 +0800
@@ -22,13 +22,13 @@
 #include "curlcheck.h"
 
 #include "urldata.h"
 #include "connect.h"
 #include "memdebug.h" /* LAST include file */
 
-static struct SessionHandle *data;
+static struct Curl_easy *data;
 
 static CURLcode unit_setup(void)
 {
   data = curl_easy_init();
   if(!data)
     return CURLE_OUT_OF_MEMORY;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/unit/unit1305.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/unit/unit1305.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/tests/unit/unit1305.c	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/tests/unit/unit1305.c	2016-07-21 06:31:36.000000000 +0800
@@ -36,13 +36,13 @@
 
 #include "hash.h"
 #include "hostip.h"
 
 #include "memdebug.h" /* LAST include file */
 
-static struct SessionHandle *data;
+static struct Curl_easy *data;
 static struct curl_hash hp;
 static char *data_key;
 static struct Curl_dns_entry *data_node;
 
 static CURLcode unit_setup(void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/winbuild/MakefileBuild.vc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/winbuild/MakefileBuild.vc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.49.1/winbuild/MakefileBuild.vc	2016-05-16 15:23:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.50.0/winbuild/MakefileBuild.vc	2016-07-21 16:51:46.000000000 +0800
@@ -229,21 +229,22 @@
 
 !IF "$(USE_WINSSL)"=="true"
 !IF "$(USE_SSPI)"!="true"
 !ERROR cannot build with WinSSL without SSPI
 !ENDIF
 SSPI_CFLAGS = $(SSPI_CFLAGS) /DUSE_SCHANNEL
+WIN_LIBS    = $(WIN_LIBS) Crypt32.lib
 !ENDIF
 
 
 !IF "$(GEN_PDB)"=="yes"
 GEN_PDB = true
 !ENDIF
 
 
-!IFDEF EMBEND_MANIFEST
+!IFDEF EMBED_MANIFEST
 MANIFESTTOOL = mt -manifest $(DIRDIST)\$(PROGRAM_NAME).manifest -outputresource:$(DIRDIST)\$(PROGRAM_NAME);1
 !ENDIF
 
 # Runtime library configuration
 !IF "$(RTLIBCFG)"=="static"
 RTLIB = /MT

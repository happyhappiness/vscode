diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/CHANGES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/CHANGES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/CHANGES	2013-10-14 22:43:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/CHANGES	2013-12-17 15:51:32.000000000 +0800
@@ -3,5573 +3,5423 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                                   Changelog
 
-Version 7.33.0 (13 Oct 2013)
-
-Daniel Stenberg (13 Oct 2013)
-- RELEASE-NOTES: synced with 92cf6141ed0de
+Version 7.34.0 (16 Dec 2013)
 
-- curl: fix --oauth2-bearer in the --help output
+Daniel Stenberg (16 Dec 2013)
+- RELEASE-NOTES: synced with c0ef05e67
   
-  After the option rename in 5df04bfafd1
-
-- OpenSSL: improve the grammar of the language in 39beaa5ffbcc
+  ... for the pending 7.34.0 release
   
-  Reported-by: Petr Pisar
+  Upped the contributor count
 
-- [Andrej E Baranov brought this change]
+- THANKS: add contributors from 7.34.0 release
+  
+  24 new great friends
 
-  OpenSSL: use failf() when subjectAltName mismatches
+- gtls: respect *VERIFYHOST independently of *VERIFYPEER
   
-  Write to CURLOPT_ERRORBUFFER information about mismatch alternative
-  certificate subject names.
+  Security flaw CVE-2013-6422
   
-  Signed-off-by: Andrej E Baranov <admin@andrej-andb.ru>
+  This is conceptually the same problem and fix that 3c3622b6 brought to the
+  OpenSSL backend and that resulted in CVE-2013-4545.
+  
+  This version of the problem was independently introduced to the GnuTLS
+  backend with commit 59cf93cc, present in the code since the libcurl
+  7.21.4 release.
+  
+  Advisory: http://curl.haxx.se/docs/adv_20131217.html
+  Bug: http://curl.haxx.se/mail/lib-2013-11/0214.html
+  Reported-by: Marc Deslauriers
 
-- curl: rename --bearer to --oauth2-bearer
+- curl.1 document -J doesn't %-decode
   
-  The option '--bearer' might be slightly ambiguous in name. It doesn't
-  create any conflict that I am aware of at the moment, however, OAUTH v2
-  is not the only authentication mechanism which uses "bearer" tokens.
+  ...also added as KNOWN_BUG #87 with reference to bug #1294
+
+- multi: add timer inaccuracy margin to timeout/connecttimeout
   
-  Reported-by: Kyle L. Huff
-  URL: http://curl.haxx.se/mail/lib-2013-10/0064.html
+  Since all systems have inaccuracy in the timeout handling it is
+  imperative that we add an inaccuracy margin to the general timeout and
+  connecttimeout handling with the multi interface. This way, when the
+  timeout fires we should be fairly sure that it has passed the timeout
+  value and will be suitably detected.
+  
+  For cases where the timeout fire before the actual timeout, we would
+  otherwise consume the timeout action and still not run the timeout code
+  since the condition wasn't met.
+  
+  Reported-by: He Qin
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1298
 
-- [Kamil Dudka brought this change]
+- RELEASE-NOTES: synced with dd4d9ea542
 
-  ssh: improve the logic for detecting blocking direction
+- curl_easy_setopt: clarify some USERPWD and PROXYUSERPWD details
+
+- login options: remove the ;[options] support from CURLOPT_USERPWD
   
-  This fixes a regression introduced by commit 0feeab78 limiting the speed
-  of SCP upload to 16384 B/s on a fast connection (such as localhost).
+  To avoid the regression when users pass in passwords containing semi-
+  colons, we now drop the ability to set the login options with the same
+  options. Support for login options in CURLOPT_USERPWD was added in
+  7.31.0.
+  
+  Test case 83 was modified to verify that colons and semi-colons can be
+  used as part of the password when using -u (CURLOPT_USERPWD).
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1311
+  Reported-by: Petr Bahula
+  Assisted-by: Steve Holme
+  Signed-off-by: Daniel Stenberg <daniel@haxx.se>
 
-Dan Fandrich (12 Oct 2013)
-- Fixed typo in Makefile.inc that left http2.h out of the tar ball
+Steve Holme (14 Dec 2013)
+- imap: Fixed exclude of clear text when using auth=* in commit 75cd7fd66762bb
+  
+  It is not 100% clear whether * should include clear text LOGIN or not
+  from RFC-5092, however, including it is then consistent with current
+  POP3 behaviour where clear text, APOP or SASL may be chosen.
 
-Daniel Stenberg (11 Oct 2013)
-- [Heinrich Schaefer brought this change]
+- imap: Fixed incorrect fallback to clear text authentication
+  
+  If a specific SASL authentication mechanism was requested by the user
+  as part of the login options but wasn't supported by the server then
+  curl would fallback to clear text, when it shouldn't, rather than
+  reporting "No known authentication mechanisms supported" as the POP3
+  and SMTP protocols do.
 
-  minor fix in doc
+Daniel Stenberg (11 Dec 2013)
+- [Eric Lubin brought this change]
 
-- [Gisle Vanem brought this change]
+  parsedate: avoid integer overflow
+  
+  In C, signed integer overflow is undefined behavior. Thus, the compiler
+  is allowed to assume that it will not occur. In the check for an
+  overflow, the developer assumes that the signed integer of type time_t
+  will wrap around if it overflows. However, this behavior is undefined in
+  the C standard. Thus, when the compiler sees this, it simplifies t +
+  delta < t to delta < 0. Since delta > 0 and delta < 0 can't both be
+  true, the entire if statement is optimized out under certain
+  optimization levels. Thus, the parsedate function would return
+  PARSEDATE_OK with an undefined value in the time, instead of return -1 =
+  PARSEDATE_FAIL.
 
-  curl_setup_once: fix errno access for lwip on Windows
+- parseconfig: warn if unquoted white spaces are detected
   
-  lib/curl_setup_once.h assumed lwIP on Windows uses 'SetLastError()' to
-  set network errors. It doesn't; it uses 'errno'.
+  Commit 0db811b6 made some existing config files pass on unexpected
+  values to libcurl that made it somewhat hard to track down what was
+  really going on.
+  
+  This code detects unquoted white spaces in the parameter when parsing a
+  config file as that would be one symptom and it is generally a bad
+  syntax anyway.
 
-- test1239: verify 4cd444e01ad and the simulated 304 response
+- RELEASE-NOTES: recount contributors and libcurl options
 
-- [Derek Higgins brought this change]
+- RELEASE-NOTES: synced with c4f46e97ca6c
 
-  HTTP: Output http response 304 when modified time is too old
+- [James Dury brought this change]
+
+  TFTP: let tftp_multi_statemach()'s return codes through
   
-  When using the -w '%{http_code}' flag and simulating a Not Modified then
-  304 should be output.
+  It would otherwise always clobber the return code with new function
+  calls and it couldn't return timeout etc.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1310
 
-- contributors: helper script to dig out contributors from git
+Nick Zitzmann (7 Dec 2013)
+- [Melissa Mears brought this change]
 
-- RELEASE-NOTES: add twos refs to bug reports
+  darwinssl: Fix #if 10.6.0 for SecKeychainSearch
+  
+  The comment here says that SecKeychainSearch causes a deprecation
+  warning when used with a minimum Mac OS X SDK version of 10.7.0, which
+  is correct.  However, the #if guard did not match.  It was intended to
+  only use the code if 10.6.0 support was enabled, but it had 10.7.0
+  instead.  This caused a warning if the minimum was exactly 10.7.0.
 
-- RELEASE-NOTES: synced with 173160c0d068
+Daniel Stenberg (6 Dec 2013)
+- [Christian Weisgerber brought this change]
 
-Nick Zitzmann (2 Oct 2013)
-- darwinssl: block TLS_RSA_WITH_NULL_SHA256 cipher
+  curl.h: <sys/select.h> for OpenBSD
   
-  Credit (for catching a cipher I forgot to add to the blocked ciphers list):
-  https://www.ssllabs.com/ssltest/viewMyClient.html
+  curl.h should also include <sys/select.h> on OpenBSD to reliably
+  pull in select().  Typically, including <sys/time.h> will be enough,
+  but not if strict standards-compliance is requested (e.g. by defining
+  _XOPEN_SOURCE).
 
-Daniel Stenberg (2 Oct 2013)
-- OpenSSL: acknowledge CURLOPT_SSL_VERIFYHOST without VERIFYPEER
+- digest: fix CURLAUTH_DIGEST_IE
   
-  Setting only CURLOPT_SSL_VERIFYHOST without CURLOPT_SSL_VERIFYPEER set
-  should still verify that the host name fields in the server certificate
-  is fine or return failure.
+  The URI that is passed in as part of the Authorization: header needs to
+  be cut off at '?' if CURLAUTH_DIGEST_IE is set. Previously the code only
+  did when calculating the MD5sum.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-10/0002.html
-  Reported-by: Ishan SinghLevett
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1308
+  Patched-by: Sergey Tatarincev
 
-- KNOWN_BUGS: #84: CURLINFO_SSL_VERIFYRESULT
+- Curl_is_connected: use proxy name in error message when proxy is used
   
-  CURLINFO_SSL_VERIFYRESULT is only implemented for the OpenSSL and NSS
-  backends and not for any other!
+  (bug introduced in 255826c4, never present in a release)
+  
+  Reported-by: Dima Tisnek
+  Bug: http://curl.haxx.se/mail/lib-2013-12/0006.html
 
-- [FranÃ§ois Charlier brought this change]
+Steve Holme (4 Dec 2013)
+- imap/pop3: Post graceful cancellation consistency changes
 
-  xattr: add support for FreeBSD xattr API
+- [Melissa Mears brought this change]
 
-- curl_easy_setopt.3: slight clarification of SEEKFUNCTION
+  pop3: Fix POP3_TYPE_ANY signed compilation warning
+  
+  POP3_TYPE_ANY, or ~0, is written to pop3c->preftype in lib/pop3c.c, an
+  unsigned int variable.  The result of ~0 is -1, which caused a warning
+  due to writing a negative number to an unsigned variable.  To fix this,
+  make the expression ~0U so that its value is considered the unsigned
+  number UINT_MAX which is what SASL_AUTH_ANY does in curl_sasl.h.
 
-Steve Holme (29 Sep 2013)
-- tests: Fixed typos from commit 25a0c96a494297
+Kamil Dudka (2 Dec 2013)
+- tool_metalink: do not use HAVE_NSS_INITCONTEXT
+  
+  ... no longer provided by the configure script
 
-- tests: Updated email addresses in SMTP tests following recent changes
+- nss: make sure that 'sslver' is always initialized
 
-- test909: Removed custom EHLO response after recent changes
+- nss: unconditionally require NSS_InitContext()
   
-  ...as it is no longer required following capability and authentication
-  changes and is now causing problems following commit 49341628b50007 as
-  the test number is obtained from the client address in the EHLO.
+  ... since we depend on NSS 3.14+ because of SSL_VersionRangeSet() anyway
 
-- ftpserver.pl: Fixed compilation error from commit 49341628b50007
+- nss: allow to use TLS > 1.0 if built against recent NSS
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-11/0162.html
 
-- ftpserver.pl: Moved specifying the test number from the RCPT address
+- nss: put SSL version selection into separate fnc
+
+- nss: use a better API for controlling SSL version
   
-  ...to the client address as this frees the RCPT strings to contain
-  just an email address and by passing the test number into curl as the
-  client address remains consistent with POP3 and IMAP tests as they are
-  specified in the URL.
+  This change introduces a dependency on NSS 3.14+.
 
-- ftpserver.pl: Added unwanted argument check to SMTP DATA command handler
+Patrick Monnerat (2 Dec 2013)
+- OS400: sync wrappers and RPG binding.
 
-Daniel Stenberg (29 Sep 2013)
-- getinmemory: remove a comment
+Steve Holme (1 Dec 2013)
+- multi.c: Fixed compilation warning
   
-  The comment mentioned the need to free the data, but the example already
-  does that free
+  warning: declaration of 'pipe' shadows a global declaration
 
-- postinmemory: new example
+- RELEASE-NOTES: Synced with ad3836448efbb7
+
+- base64: Corrected typo from commit f3ee587775c88a
+
+- base64: Post extended extended validation tidy up
   
-  This is similar to getinmemory.c but with an initial POST.
+  Reduced the separate processing of the last quantum to be performed in
+  the main decoding loop and renamed some variables for consistency.
+
+- base64: Extended validation to look for invalid characters
   
-  Combined-by: Ulf Samuelsson
+  Extended the basic validation in commit e17c1b25bc33eb to return a
+  failure when invalid base64 characters are included.
 
-- win32: fix Visual Studio 2010 build with WINVER >= 0x600
+- base64: Post basic validation tidy up
   
-  If no WINVER and/or _WIN32_IWNNT define was set, the Windows platform
-  SDK often defaults to high value, e.g. 0x601 (whoch may probably depend
-  on the Windows version being used, in my case Windows 7).
+  Due to the length checks introduced in commit e17c1b25bc33eb there is no
+  need to allow for extra space in the output buffer for a non-padded last
+  quantum.
+
+- curl_easy_getinfo: Post CURLINFO_TLS_SESSION tidy up
   
-  If WINVER >= 0x600 then winsock2.h includes some defines for WSAPoll(),
-  e.g. POLLIN, POLLPRI, POLLOUT etc. These defines clash with cURL's
-  lib/select.h.
+  1) Renamed curl_tlsinfo to curl_tlssessioninfo as discussed on the
+  mailing list.
+  2) Renamed curl_ssl_backend to curl_sslbackend so it doesn't follow our
+  function naming convention.
+  3) Updated sessioninfo.c example accordingly.
+
+Daniel Stenberg (29 Nov 2013)
+- parseconfig: dash options can't specified with colon or equals
   
-  Make sure HAVE_STRUCT_POLLFD is defined then.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1297
+  Reported-by: Michael Osipov
+
+- curl.1: -G also takes --data-urlencode data
+
+- globbing: curl glob counter mismatch with {} list use
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1282
-  Reported-by: "kdekker"
-  Patch-by: Marcel Raad
+  The "fixed string" function wrongly bumped the "urlnum" counter which
+  made curl output the total number of URLs wrong when using
+  {one,two,three} lists in globs.
+  
+  Reported-by: Michael-O
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1305
 
-Steve Holme (28 Sep 2013)
-- ssluse.c: Fixed compilation warnings when ENGINE not supported
+Steve Holme (28 Nov 2013)
+- [Christian Grothoff brought this change]
+
+  sessioninfo.c: Added sample code for CURLINFO_TLS_SESSION
   
-  The function "ssl_ui_reader" was declared but never referenced
-  The function "ssl_ui_writer" was declared but never referenced
+  Added a simple example to show how one can use CURLINFO_TLS_SESSION for
+  obtaining extensive TLS certificate information.
 
-Daniel Stenberg (27 Sep 2013)
-- configure: use icc options without space
+- multi.c: Fixed compilation error introduced in commit a900d45489fc14
   
-  The latest version(s) of the icc compiler no longer accept the extra
-  space in the -we (warning enable), -wd (warning disable), etc.
+  Systems that define SIGPIPE_VARIABLE as a noop would not compile as
+  restore_pipe was defined afterwards.
+
+- [Christian Grothoff brought this change]
+
+  curl_easy_getopt: Handle API violation gracefully
   
-  Reported-by: Elmira A Semenova
-  Bug: http://curl.haxx.se/mail/lib-2013-09/0182.html
+  This fixes a NULL dereference in the case where the client asks for
+  CURLINFO_TLS_SESSION data after the (TLS) session has already been
+  destroyed (i.e. curl_easy_perform has already completed for this
+  handle). Instead of crashing, we now return a CURLSSLBACKEND_NONE
+  error.
 
-Steve Holme (25 Sep 2013)
-- imap: Added clarification to the code about odd continuation responses
+- KNOWN_BUGS: #86: Disconnect commands may not be sent by IMAP, POP3 and SMTP
 
-- ftp.c: Fixed compilation warning
+Daniel Stenberg (27 Nov 2013)
+- [Jeff King brought this change]
+
+  curl_multi_cleanup: ignore SIGPIPE
   
-  There is an implicit conversion from "unsigned long" to "long"
+  This is an extension to the fix in 7d80ed64e43515. We may
+  call Curl_disconnect() while cleaning up the multi handle,
+  which could lead to openssl sending packets, which could get
+  a SIGPIPE.
+  
+  Signed-off-by: Jeff King <peff@peff.net>
 
-- sasl: Centralised the authentication mechanism strings
+- [Jeff King brought this change]
+
+  sigpipe: factor out sigpipe_reset from easy.c
   
-  Moved the standard SASL mechanism strings into curl_sasl.h rather than
-  hard coding the same values over and over again in the protocols that
-  use SASL authentication.
+  Commit 7d80ed64e43515 introduced some helpers to handle
+  sigpipe in easy.c. However, that fix was incomplete, and we
+  need to add more callers in other files. The first step is
+  making the helpers globally accessible.
   
-  For more information about the mechanism strings see:
+  Since the functions are small and should generally end up
+  inlined anyway, we simply define them in the header as
+  static functions.
   
-  http://www.iana.org/assignments/sasl-mechanisms
+  Signed-off-by: Jeff King <peff@peff.net>
 
-Daniel Stenberg (23 Sep 2013)
-- RELEASE-NOTES: added recent contributors missing
+- [BjÃ¶rn Stenberg brought this change]
 
-Steve Holme (23 Sep 2013)
-- test906: Fixed type-2 response
+  connect: Try next ip directly after immediate connect fail
+  
+  This fixes a rare Happy Eyeballs bug where if the first IP family runs
+  out of addresses before the second-family-timer fires, and the second
+  IP family's first connect fails immediately, no further IPs of the
+  second family are attempted.
 
-- test915: Corrected test number from commit 22bccb0edaf041
+- hostip: don't prune DNS cache entries that are in use
+  
+  When adding entries to the DNS cache with CURLOPT_RESOLVE, they are
+  marked 'inuse' forever to prevent them from ever being removed in normal
+  operations. Still, the code that pruned out-of-date DNS entries didn't
+  care for the 'inuse' struct field and pruned it anyway!
+  
+  Reported-by: Romulo A. Ceccon
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1303
 
-- test906: Fixed type-1 message not handled error
+Steve Holme (24 Nov 2013)
+- RELEASE-NOTES: Synced with 35e476a3f6cdd5
+
+- tests: Re-ordered test arguments to match other IMAP tests
+
+- tests: Corrected login "username" authentication responses
+
+- tests: Added error code explanation comments
+
+- tests: Removed expected QUIT response from graceful cancellation tests
   
-  ...from commit f81d1e16664976 due to copy paste error.
+  A failure during authentication, which is performed as part of the
+  CONNECT phrase (for IMAP, POP3 and SMTP) is considered by the multi-
+  interface as being closed prematurely (aka a dead connection). As such
+  these protocols cannot issue the relevant QUIT or LOGOUT command.
+  
+  Temporarily fixed the test cases until we can fix this properly.
 
-- tests: Added SMTP AUTH NTLM test
+- tests: Added SMTP graceful authentication cancellation tests
 
-- tests: Added SMTP multiple and invalid --mail-rcpt test
+- tests: Added POP3 graceful authentication cancellation tests
 
-- tests: Added SMTP multiple --mail-rcpt test
+- ftpserver.pl: Reworked fix from commit 7a36b2abc06862
 
-- tests: Added SMTP invalid --mail-rcpt test
+- ftpserver.pl: Fixed unknown IMAP command "*"
 
-- tests: Regrouping of SMTP tests
+- ftpserver.pl: Fixed servercmd REPLY with * detection
 
-Daniel Stenberg (22 Sep 2013)
-- [Benoit Sigoure brought this change]
+- tests: Added IMAP graceful authentication cancellation tests
 
-  test1112: Increase the timeout from 7s to 16s
+- tests: Moved CR LF in URL tests to their respective protocol groups
+
+- smtp: Post SMTP command expansion tidy up
   
-  As someone reported on the mailing list a while back, the hard-coded
-  arbitrary timeout of 7s in test 1112 is not sufficient in some build
-  environments. At Arista Networks we build and test curl as part of our
-  automated build system, and we've run into this timeout 170 times so
-  far. Our build servers are typically quite busy building and testing a
-  lot of code in parallel, so despite being beefy machines with 32 cores
-  and 128GB of RAM we still hit this 7s timeout regularly.
+  Removed unnecessary SMTP_STOP state changes on failure.
   
-  URL: http://curl.haxx.se/mail/lib-2010-02/0200.html
+  Removed hard return on failure in smtp_state_data_resp().
 
-Steve Holme (22 Sep 2013)
-- tests: Fixed smtp rcpt to addresses
+- symbols-in-versions: Added missing CURLSSLBACKEND_* symbols
 
-- ftpserver.pl: Expanded the SMTP RCPT handler to validate TO addresses
-  
-  RCPT_smtp() will now check for a correctly formatted TO address which
-  allows for invalid recipient addresses to be added.
+- symbols-in-versions: Fixed missing CURLINFO_TLS_SESSION
 
-- ftpserver.pl: Added cURL SMTP server detection to HELO command handler
+- [Christian Grothoff brought this change]
+
+  curl_easy_getinfo: Added CURLINFO_TLS_SESSION for accessing TLS internals
   
-  As curl will send a HELO command after an negative EHLO response, added
-  the same detection from commit b07709f7417c3e to the HELO handler to
-  ensure the test server is identified correctly and an upload isn't
-  performed.
+  Added new API for returning a SSL backend type and pointer, in order to
+  allow access to the TLS internals, that may then be used to obtain X509
+  certificate information for example.
 
-- ftpserver.pl: Corrected response code for successful RCPT command
+- RELEASE-NOTES: Synced with 8191800a0c8ff7
 
-- ftpserver.pl: Moved invalid RCPT TO: address detection to RCPT handler
+- smtp: Fixed space being sent in non --mail-rcpt based requests
   
-  Rather than detecting the TO address as missing in the DATA handler,
-  moved the detection to the RCPT command handler where an error response
-  can be generated.
+  Commands such as NOOP, RSET and HELP would be sent with a space at the
+  end of the command, for example: "NOOP ".
 
-- RELEASE-NOTES: Corrected missed addition
-  
-  Somehow commit 60a20461629fda missed the last item in the sync list
-  even though I'm sure I added it during editing.
+- tests: Added SMTP NOOP and RSET tests
 
-- RELEASE-NOTES: Synced with 6dd8bd8d2f9729
+- test928: Corrected typo in expected data from commit df58084695ce9b
 
-- curl.1: Added information about optional login options to --user in manpage
-  
-  Added missing information, from curl 7.31.0, regarding the use of the
-  optional login options that may be specified as part of --user.
-  
-  For example:
+- tests: Added SMTP HELP test
+
+- smtp: Changed the default command to HELP when no options are specified
   
-  --user 'user:password;auth=NTLM' in IMAP, POP3 and SMTP protocols.
+  Otherwise a NOOP operation would be performed which a) only returns a
+  single line response and not a multiline response where -I needs to be
+  used, and b) provides an inconsistent user experience compared to that
+  of the POP3 and IMAP protocols.
 
-- ftpserver.pl: Moved cURL SMTP server detection into EHLO command handler
+- smtp:Fixed memory leak from commit dac01ff6d788b2
   
-  Moved the special SMTP server detection code from the DATA command
-  handler, which happens further down the operation chain after EHLO,
-  MAIL and RCPT commands, to the EHLO command as it is the first command
-  to be generated by a SMTP operation as well as containing the special
-  "verifiedserver" string from the URL.
+  The buffer allocated by smtp_parse_custom_request() was not freed.
+
+- connect: Close open but unconnected socket in singleipconnect()
   
-  This not only makes it easier and quicker to detect but also means that
-  cURL doesn't need to specify "verifiedserver" as --mail-from and
-  --mail-rcpt arguments.
+  singleipconnect() could return the file descriptor of an open socket
+  even though the function returned a CURLE_COULDNT_CONNECT error code
+  from commit ed1662c374361a and 02fbc26d59c591.
   
-  More importantly, this also makes the upcoming verification changes to
-  the RCPT handler easier to implement.
+  This could cause tests 19, 704 and 1233 to fail on FreeBSD, AIX and
+  Solaris.
 
-Daniel Stenberg (21 Sep 2013)
-- openssl: use correct port number in error message
+- tests: Added SMTP EXPN command test
+
+- test926: Corrected unknown user reply from commit 0d735c29f92748
   
-  In ossl_connect_step2() when the "Unknown SSL protocol error" occurs, it
-  would output the local port number instead of the remote one which
-  showed when doing SSL over a proxy (but with the correct remote host
-  name). As libcurl only speaks SSL to the remote we know it is the remote
-  port.
+  The error code should not be sent as data as it isn't passed onto the
+  client as body data, so cannot be compared in the test suite against
+  expected data.
+
+- tests: Corrected missing data reply sections from 3d50e91aeef8cc
+
+- tests: Added SMTP VRFY command tests
+
+- ftpserver.pl: Added support for new SMTP commands
+
+- smtp: Fixed broken RCPT TO from commit 0ea4a80bb23666
+
+Daniel Stenberg (15 Nov 2013)
+- smtp_state_mail_resp: removed unused variable 'smtp'
+
+Steve Holme (15 Nov 2013)
+- DOCS: Updated curl_easy_setopt.3 following recent SMTP changes
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1281
-  Reported-by: Gordon Marler
+  * Added information about the verify and expand commands to
+    CURLOPT_MAIL_RCPT.
+  * Reworked CURLOPT_CUSTOMREQUEST section, adding information about IMAP
+    and SMTP custom commands.
 
-- test1415: adjusted to work for 32bit time_t
+- DOCS: Updated manpage following recent SMTP modifications
   
-  The libcurl date parser returns INT_MAX for all dates > 2037 so this
-  test is now made to use 2037 instead of 2038 to work the same for both
-  32bit and 64bit time_t systems.
+  * Added SMTP section to --request
+  * Expanded --mail-rcpt to describe the usage when using the verify and
+    expand commands.
 
-Steve Holme (21 Sep 2013)
-- tests: Reworked existing SMTP tests to be single recipient based
+- smtp: Simplified the next RCPT TO logic
+
+- lib1507.c: Added missing set of CURLOPT_UPLOAD option
   
-  ...in preparation of upcoming multiple recipient tests.
+  Although this option should have already been set, the SMTP module can
+  now download information from and send instructional commands to, an
+  SMTP server, requiring the option to be set in order to perform a mail
+  transfer.
 
-- ftpserver.pl: Corrected SMTP QUIT response to be more realistic
+- smtp.c: Fixed trailing whitespace
 
-Daniel Stenberg (20 Sep 2013)
-- curl_easy_setopt.3: clarify that TIMEOUT and TIMEOUT_MS set the same value
+- smtp: Added support for VRFY and EXPN commands
 
-- [Kim Vandry brought this change]
+- smtp: Added support for NOOP and RSET commands
 
-  Documented --dns-* options in curl manpage
+- smtp: Fixed handling of multiline server greeting responses
+  
+  Incorrectly processed multiline server greeting responses as "wanted"
+  continue responses in smtp_endofresp(), from commit f16c0de4e9bbe3,
+  which in turn broke the SMTP server detection in the test suite,
+  because the EHLO command would not be sent.
 
-Steve Holme (20 Sep 2013)
-- pop3: Added basic SASL XOAUTH2 support
+- smtp.c: Fixed compilation error from commit f16c0de4e9bbe3
   
-  Added the ability to use an XOAUTH2 bearer token [RFC6750] with POP3 for
-  authentication using RFC6749 "OAuth 2.0 Authorization Framework".
+  warning: unused variable 'smtpc'
+
+- smtp: Fixed processing of more than one response when sent in same packet
   
-  The bearer token is expected to be valid for the user specified in
-  conn->user. If CURLOPT_XOAUTH2_BEARER is defined and the connection has
-  an advertised auth mechanism of "XOAUTH2", the user and access token are
-  formatted as a base64 encoded string and sent to the server as
-  "AUTH XOAUTH2 <bearer token>".
+  Added a loop to smtp_statemach_act() in which Curl_pp_readresp() is
+  called until the cache is drained. Without this multiple responses
+  received in a single packet could result in a hang or delay.
 
-- curl: Added clarification to the --mail options in the --help output
+- smtp: Moved EHLO response handling to smtp_state_ehlo_resp()
   
-  ... that these options apply to SMTP only.
+  Similar to the processing of untagged CAPABILITY responses in IMAP moved
+  the processing of multiline EHLO responses to smtp_state_ehlo_resp() and
+  introduced an internal response code of one to differentiate a multiline
+  continuation from the end of command. This also allows for the separate
+  processing of multiline responses from commands such as VRFY and EXPN.
 
-- ftpserver.pl: Moved SMTP RCPT response text into command handler
+- connect: Forgot to correct line endings before push in commit ed1662c374361a
 
-- tests: Added SMTP invalid --mail-from test
+- [BjÃ¶rn Stenberg brought this change]
 
-Nick Zitzmann (19 Sep 2013)
-- darwinssl: enable BEAST workaround on iOS 7 & later
-  
-  iOS 7 finally added the option to enable 1/n-1 when using TLS 1.0
-  and a CBC cipher, so we now always turn that on unless the user
-  manually turns it off using CURLSSLOPT_ALLOW_BEAST.
+  connect: Return the socket descriptor even on fail
   
-  It appears Apple also added some new PSK ciphers, but no interface to
-  use them yet, so we at least support printing them if we find them.
+  singleipconnect() did not return the open socket descriptor on some
+  errors, thereby sometimes causing a socket leak. This patch ensures
+  the socket is always returned.
 
-Steve Holme (19 Sep 2013)
-- tests: Updated SMTP AUTH tests to use the new AUTH directive
+Daniel Stenberg (13 Nov 2013)
+- configure: Fix test with -Werror=implicit-function-declaration
   
-  ...rather than specify a customised EHLO response.
+  The ipv6 auto-detect test in configure returns a false negative when
+  CFLAGS contains -Werror=implicit-function-declaration. (I have been
+  using this flag to detect code issues that would result in SEGVs on
+  x86_64-cygwin.)
+  
+  Patch-by: Yaakov Selkowitz
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1304
 
-- tests: Corrected test913 as the QUIT response is received
+Steve Holme (13 Nov 2013)
+- test825: Corrected typo from commit b29217d0d682d4
 
-- tests: Added SMTP large message SIZE test
+- RELEASE-NOTES: Synced with bde901ad89a6f1
 
-- ftpserver.pl: Updated email regex from commit 98f7ca7e971006
-  
-  ...to not be as strict as it was rejecting valid numeric email
-  addresses.
+- test922: Corrected title to match other OAuth 2.0 tests
 
-- tests: Fixed smtp mail from addresses
+- tests: Added IMAP OAuth 2.0 authentication with initial response test
 
-- ftpserver.pl: Standardised CAPA and AUTH responses
+- tests: Added IMAP NTLM authentication with initial response test
 
-- ftpserver.pl: Corrected POP3 QUIT reply to be more realistic
+- tests: Added IMAP login authentication with initial response test
 
-- runtests.pl: Fixed syntax error in commit c873375123343e
-  
-  Possible unintended interpolation in string at line 796
+- tests: Added IMAP plain authentication with initial response test
 
-- runtests.pl: Fixed smtp mail from address
+- test873: Use proper padding in NTLM responses
+
+Nick Zitzmann (12 Nov 2013)
+- darwinssl: check for SSLSetSessionOption() presence when toggling BEAST
   
-  Following changes to ftpserver.pl fixed the mail from address to be a
-  correctly formatted address otherwise the server response will be 501
-  Invalid address.
+  Even though this is only a formality (since not many people build on
+  Mavericks while targeting Leopard), since we still support Leopard
+  at the earliest, we might as well be pedantic.
 
-- ftpserver.pl: Fixed syntax error in commit 98f7ca7e971006
+- darwinssl: PKCS#12 import feature now requires Lion or later
   
-  Can't modify constant item in scalar assignment line 779, near "0;"
+  It turns out that some of the constants necessary to make this feature
+  work are missing from Snow Leopard's Security framework even though
+  they are defined in the headers.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-11/0076.html
+  Reported by: myriachan
 
-- ftpserver.pl: Expanded the SMTP MAIL handler to validate messages
+Steve Holme (13 Nov 2013)
+- tests: Added POP3 OAuth 2.0 authentication with initial response test
+
+- tests: Added POP3 NTLM authentication with initial response test
+
+- tests: Added POP3 login authentication with initial response test
+
+- tests: Added POP3 plain authentication with initial response test
+
+- TODO: Added auth= in URLs to the wish list for HTTP
+
+- curl_easy_setopt: Added the ability to set the login options separately
   
-  MAIl_smtp() will now check for a correctly formatted FROM address as
-  well as the optional SIZE parameter comparing it against the server
-  capability when specified.
+  Rather than set the authentication options as part of the login details
+  specified in the URL, or via the older CURLOPT_USERPWD option, added a
+  new libcurl option to allow the login options to be set separately.
 
-Daniel Stenberg (17 Sep 2013)
-- [YAMADA Yasuharu brought this change]
+Daniel Stenberg (12 Nov 2013)
+- curl.1: mention that -O does no URL decoding
 
-  cookies: add expiration
+Kamil Dudka (12 Nov 2013)
+- [Tomas Hoger brought this change]
+
+  curl_easy_setopt.3: clarify CURLOPT_SSL_VERIFYHOST documentation
   
-  Implement: Expired Cookies These following situation, curl removes
-  cookie(s) from struct CookieInfo if the cookie expired.
-   - Curl_cookie_add()
-   - Curl_cookie_getlist()
-   - cookie_output()
+  - better describe what happens when 1 is specified as parameter
+  - clarify what "is ignored" means for NSS builds
 
-Steve Holme (17 Sep 2013)
-- ftpserver.pl: Corrected response code for successful MAIL command
+Steve Holme (12 Nov 2013)
+- runtests.pl: Added SSPI detection
 
-- ftpserver.pl: Moved SMTP MAIL handler into own function
+- multi: Small code tidy up to avoid hard return
 
-- dns: fix compilation with MinGW from commit df69440d05f113
+- tests: Updated CRAM-MD5 tests to use test user details
+
+- [BjÃ¶rn Stenberg brought this change]
+
+  multi: Set read socket when returning READSOCK(0)
   
-  Avoid 'interface' literal that some MinGW versions define as a macro
+  This patch fixes and issue introduced in commit 7d7df831981fee, if the
+  tunnel state was TUNNEL_CONNECT, waitconnect_getsock() would return a
+  bitmask indicating a readable socket but never stored the socket in the
+  return array.
+
+Daniel Stenberg (11 Nov 2013)
+- bump: next release will be 7.34.0
   
-  Additionally, corrected some very, very minor coding style errors.
+  Due to all the news and changes.
 
-- tests: Fixed test 1406 following recent changes in ftpserver.pl
+Steve Holme (10 Nov 2013)
+- [BjÃ¶rn Stenberg brought this change]
+
+  connect: Close temporary sockets in conn_free()
   
-  By default the mail server doesn't send the SIZE capability but instead
-  it has to be specified as a supported capability.
+  The temporary sockets used for Happy Eyeballs were not closed properly,
+  if curl exited prematurely, which this patch fixes.
 
-- tests: Added test for SMTP SIZE capability
+- tests: Corrected titles of POP3 and SMTP OAuth 2.0 tests
 
-- ftpserver.pl: Added the ability to include spaces in capabilities
+- test823: Fixed expected authentication text from commit e10a26a9d6d6de
   
-  For example:
+  Fixed authentication text due to incorrect digest-uri property.
+
+- test821: Fixed expected authentication text from commit 2d5455feac9984
+
+- RELEASE-NOTES: Synced with 0f81fbe5da6643
+
+- [Kim Vandry brought this change]
+
+  ares: Fixed compilation under Visual Studio 2012
+
+- tests: Added IMAP OAuth 2.0 authentication test
+
+- tests: Added IMAP DIGEST-MD5 authentication test
+
+- tests: Added IMAP NTLM authentication test
+
+- tests: Added IMAP CRAM-MD5 authentication test
+
+- test819: Fixed expected authentication text from commit 76f924131c9fd3
+
+- ftpserver.pl: Reworked custom reply handling code
   
-  CAPA "SIZE 1048576" 8BITMIME BINARYMIME
+  1) To fix issues with IMAP custom replies
+  2) So initial space is not required in IMAP display text
+  3) To be more readable and understandable
+
+- ftpserver.pl: Reworked unrecognised command responses
   
-  will populate the capabilities list with the following in:
+  As the IMAP regex could fail and $1 would not contain the command id
+  updated the unrecognised command response to be more generic and
+  realistic (like those used in the command handlers).
   
-  SIZE 1048576
-  8BITMIME
-  BINARYMIME
+  Additionally updated the POP3, SMTP and FTP responses.
 
-- ftpserver.pl: Corrected response code for successful SMTP QUIT command
+- ftpserver.pl: Fixed processing of IMAP authentication strings
 
-- ftpserver.pl: Fixed syntax error in commit 33c1f2876b9029
+Daniel Stenberg (9 Nov 2013)
+- cmake: fix Windows build with IPv6 support
   
-  Can't modify constant item in postincrement line 727, near "i++"
+  Patch-by: "Z98"
 
-- ftpserver.pl: Added CAPA & AUTH directive support to the SMTP EHLO handler
+Steve Holme (6 Nov 2013)
+- Revert "ftpserver.pl: Corrected logic from commit 27b7b1062f9d97"
+  
+  This reverts commit 558034ab7002d1 as it appears to break the auto
+  builds. More thought is required for this!
 
-- ftpserver.pl: Fixed SMTP QUIT handler from dadc495540946e
+- ftpserver.pl: Corrected logic from commit 27b7b1062f9d97
 
-- ftpserver.pl: Moved SMTP EHLO and QUIT handlers in own functions
+- ftpserver.pl: Fixed IMAP cmdid being sent on custom responses
 
-- ftpserver.pl: Added support for SMTP HELO command
+- tests: Added IMAP login authentication test
+
+- tests: Added IMAP plain authentication test
+
+- url.c: Very small amount of policing
+
+- [BjÃ¶rn Stenberg brought this change]
+
+  url.c: Remove superfluous for loop
   
-  ...and updated test902 as explicit HELO response is no longer required.
+  The reason for this loop's existence was removed in commit
+  02fbc26d59c591.
 
-- ftpserver.pl: Added mailbox check to IMAP SELECT handler
+Daniel Stenberg (5 Nov 2013)
+- KNOWN_BUGS: STARTTRANSFER for POST requests
+  
+  added 85. Wrong STARTTRANSFER timer accounting for POST requests
 
-- ftpserver.pl: Corrected invalid user details check
+- Curl_ssl_push_certinfo_len: don't %.*s non-zero-terminated string
   
-  ...in both the IMAP LOGIN and POP3 PASS handlers introduced in commit
-  187ac693744949 and 84ad1569e5fc93 respectively.
+  Our own printf() replacement clearly can't properly handle %.*s with a
+  string that isn't zero terminated. Instead of fixing the printf code or
+  even figuring out what the proper posix behavior is, I reverted this
+  piece of the code back to the previous version where it does malloc +
+  memcpy instead.
+  
+  Regression added in e839446c2a5, released in curl 7.32.0.
+  
+  Reported-by: Felix Yan
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1295
 
-- ftpserver.pl: Moved IMAP LOGIN handler into own function
+Steve Holme (5 Nov 2013)
+- RELEASE-NOTES: Synced with 7fc3b2ce382ed6
 
-- ftpserver.pl: Moved POP3 USER and PASS handlers into own functions
+- connect.h: Updated copyright year for last edit
 
-- ftpserver.pl: Corrected invalid argument check in POP3 TOP handler
+Daniel Stenberg (4 Nov 2013)
+- [BjÃ¶rn Stenberg brought this change]
+
+  connect: Add connection delay to Happy Eyeballs.
   
-  ...which was accidentally introduced in commit 4d6ef6297ae9b6.
+  This patch adds a 200ms delay between the first and second address
+  family socket connection attempts.
+  
+  It also iterates over IP addresses in the order returned by the
+  system, meaning most dual-stack systems will try IPv6 first.
+  
+  Additionally, it refactors the connect code, removing most code that
+  handled synchronous connects. Since all sockets are now non-blocking,
+  the logic can be made simpler.
 
-- ftpserver.pl: Added capability prerequisite for extended POP3 commands
+Steve Holme (4 Nov 2013)
+- winbind: Fixed ntlm_auth expecting eol following commit e17c1b25bc33eb
 
-- tests: Updated descriptions to be more meaningful
+- nss.c: Fixed compilation warnings (Take Two)
+  
+  nss.c:702: warning: pointer targets in passing argument 3 of
+  'Curl_extract_certinfo' differ in signedness
+  
+  nss.c:702: warning: pointer targets in passing argument 4 of
+  'Curl_extract_certinfo' differ in signedness
+  
+  Made sure the cast was correctly "unsigned char *" to "char *" and not
+  "unsigned char *" to "unsigned char *".
 
-- ftpserver.pl: Added support for IMAP NOOP command
+- nss.c: Fixed compilation warnings
+  
+  nss.c:700: warning: pointer targets in passing argument 3 of
+  'Curl_extract_certinfo' differ in signedness
+  
+  nss.c:700: warning: pointer targets in passing argument 4 of
+  'Curl_extract_certinfo' differ in signedness
 
-- imap: Fixed response check for NOOP command
+- tests: Added test for IMAP NOOP command
 
-- tests: Updated descriptions to be more meaningful
+- tests: Added test for IMAP COPY command
 
-Daniel Stenberg (13 Sep 2013)
-- curl.1: detail how short/long options work
+- tests: Disable IMAP CLOSE and EXPUNGE command tests
   
-  URL: http://curl.haxx.se/bug/view.cgi?id=1279
-  Suggested-by: Jerry Krinock
+  This is temporary until curl supports either multiple custom commands
+  or post-quote commands in IMAP.
 
-Steve Holme (13 Sep 2013)
-- curl: Fixed usage of DNS options when not using c-ares resolver
+- tests: Added tests for IMAP CLOSE and EXPUNGE commands
+
+- connect.c: Code policing on commit 5094bb53f4a027
   
-  Commit 32352ed6adddcb introduced various DNS options, however, these
-  would cause curl to exit with CURLE_NOT_BUILT_IN when c-ares wasn't
-  being used as the backend resolver even if the options weren't set
-  by the user.
+  No need for a rhs condition on a bitwise compare.
+
+- nss.c: Fixed compilation warnings
   
-  Additionally corrected some minor coding style errors from the same
-  commit.
+  warning: implicit declaration of function 'Curl_extract_certinfo'
 
-Daniel Stenberg (13 Sep 2013)
-- curl_easy_setopt.3: mention RTMP URL quirks
+- x509asn1.c: Fixed compilation warnings
   
-  URL: http://curl.haxx.se/bug/view.cgi?id=1278
-  Reported-by: Gorilla Maguila
+  warning: declaration of 'chsize' shadows a global declaration
 
-- [Ben Greear brought this change]
+- DOCS: Expanded --request description to include POP3 and IMAP details
 
-  curl: Add support for various DNS binding options.
+- tool_help: Updated --list-only description to include POP3
+
+- DOCS: Updated --list-only description to include POP3
   
-  (Passed on to c-ares.)
+  Additionally corrected typos in --oauth2-bearer protocol list.
+
+- base64: Fixed compilation warnings when using Curl_base64_decode()
   
-  Allows something like this:
+  curl_sasl.c:294: warning: dereferencing type-punned pointer will break
+  strict-aliasing rules
   
-  curl --dns-interface sta8 --dns-ipv4-addr 8.8.1.111 --interface sta8 \
-  --localaddr 8.8.1.111 --dns-servers 8.8.8.1 www.google.com
+  getpart.c:201: warning: dereferencing type-punned pointer will break
+  strict-aliasing rules
+
+- connect: Fixed "Whut?" no server connection failures
   
-  Signed-off-by: Ben Greear <greearb@candelatech.com>
+  Introduced in commit 7d7df831981fee curl would loop displaying "Whut?"
+  if it was trying to connect to an address and port that didn't have
+  anything listening on it.
 
-- [Kim Vandry brought this change]
+- http: Post base64 decoding tidy up
+  
+  Renamed copy_header_value() to Curl_copy_header_value() as this
+  function is now non static.
+  
+  Simplified proxy flag in Curl_http_input_auth() when calling
+  sub-functions.
+  
+  Removed unnecessary white space removal when using negotiate as it had
+  been missed in commit cdccb422671aeb.
 
-  libcurl: New options to bind DNS to local interfaces or IP addresses
+Daniel Stenberg (3 Nov 2013)
+- glob_range: pass the closing bracket for a-z ranges
+  
+  Regression since commit 5ca96cb844102 (release in 7.33.0)
+  
+  Reported-by: Marcin Gryszkalis
 
-- libcurl.3: for multi interface connections are held in the multi handle
+Steve Holme (2 Nov 2013)
+- getpart: Fixed base64 encoded parts following commit e17c1b25bc33eb
+
+- http: Added proxy tunnel authentication message header value extraction
   
-  ... and a few more cleanups/clarifications
+  ...following recent changes to Curl_base64_decode() rather than trying
+  to parse a header line for the authentication mechanisms which is CRLF
+  terminated and inline zero terminate it.
 
-Steve Holme (12 Sep 2013)
-- ftpserver.pl: Fixed missing comma from 7fd84b14d219b1
+- http: Added authentication message header value extraction
+  
+  ...following recent changes to Curl_base64_decode() rather than trying
+  to parse a header line for the authentication mechanisms which is CRLF
+  terminated and inline zero terminate it.
 
-- ftpserver.pl: Fixed variable error introduced in 7fd84b14d219b1
+Daniel Stenberg (30 Oct 2013)
+- curl_multi_wait: accept 0 from multi_timeout() as valid timeout
   
-  Global symbol "$mailbox" requires explicit package name
+  The code rejected 0 as a valid timeout while in fact the function could
+  indeed legitimately return that and it should be respected.
+  
+  Reported-by: Bjorn Stenberg
 
-- ftpserver.pl: Added support for UID command
+Steve Holme (30 Oct 2013)
+- email: Corrected a couple of typos from commit aa0eaef4838ccd
 
-- ftpserver.pl: Added support for LSUB command
+- TODO: Removed the 'Graceful base64 decoding failure' sections
+  
+  Updated following the recent changes to support graceful failures
+  during the authentication phrase.
 
-- imap: Fixed response check for LSUB and UID commands
+- email: Post graceful SASL authentication cancellation tidy up
 
-- ftpserver.pl: Added support for IMAP COPY command
+- [Kamil Dudka brought this change]
 
-- ftpserver.pl: Added support for IMAP CLOSE and EXPUNGE commands
+  tests: use proper padding in NTLM responses
 
-- ftpserver.pl: Added support for POP3 RSET command
+Patrick Monnerat (30 Oct 2013)
+- NSS: support for CERTINFO feature
 
-- ftpserver.pl: Added the ability to remember what messages are deleted
+Daniel Stenberg (30 Oct 2013)
+- base64: removed trailing white space
   
-  ...as this will be required for IMAP CLOSE and EXPUNGE commands as well
-  as the POP3 RSET command.
+  and updated copyright year
 
-Daniel Stenberg (10 Sep 2013)
-- NI_MAXSERV: remove all use of it
+Steve Holme (30 Oct 2013)
+- base64: Added basic validation to base64 input string when decoding
   
-  Solaris with the SunStudio Compiler is reportedly missing this define,
-  but as we're using it without any good reason on all the places it was
-  used I've now instead switched to just use sensible buffer sizes that
-  fit a 32 bit decimal number. Which also happens to be smaller than the
-  common NI_MAXSERV value which is 32 on most machines.
+  A base64 string should be a multiple of 4 characters in length, not
+  contain any more than 2 padding characters and only contain padding
+  characters at the end of string. For example: Y3VybA==
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1277
-  Reported-by: D.Flinkmann
-
-- http2: use the support HTTP2 draft version in the upgrade header
+  Strings such as the following are considered invalid:
   
-  ... instead of HTTP/2.0 to work fine with the nghttpx proxy/server.
+  Y=   - Invalid length
+  Y==  - Invalid length
+  Y=== - More than two padding characters
+  Y=x= - Padding character contained within string
 
-Steve Holme (10 Sep 2013)
-- ldap.c: Fix compilation warning
+Daniel Stenberg (29 Oct 2013)
+- RELEASE-NOTES: synced with 255826c40f9316
+
+- [BjÃ¶rn Stenberg brought this change]
+
+  bugfix: Don't block waiting for socket1 connect.
   
-  warning: comparison between signed and unsigned integer expressions
+  This patch fixes a bug in Happy Eyeballs where curl would wait for a
+  connect response from socket1 before checking socket2.
+  
+  Also, it updates error messages for failed connections, showing the ip
+  addresses that failed rather than just the host name repeatedly.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-10/0236.html
+  Reported-by: Paul Marks
 
-- [Jiri Hruska brought this change]
+Steve Holme (28 Oct 2013)
+- sasl: Updated create_digest_md5_message() to use a dynamic buffer
 
-  imap/pop3/smtp: Speed up SSL connection initialization
+Daniel Stenberg (28 Oct 2013)
+- SECURITY: "curl security for developers"
   
-  Don't wait for the next callback call (usually 1 second) before
-  continuing with protocol specific connection initialization.
+  Describes our security process from a project and curl developer's
+  perspective.
 
-- ldap.c: Corrected build error from commit 857f999353f333
+Patrick Monnerat (28 Oct 2013)
+- OS400: coding style standards
 
-- RELEASE-NOTES: Corrected duplicate in bfefe2400a16b8
+Steve Holme (27 Oct 2013)
+- email: Added support for cancelling NTLM authentication
 
-- RELEASE-NOTES: Corrected typo from bfefe2400a16b8
+- sasl: Removed unused variables from commit b87ba2c94217c0
 
-- RELEASE-NOTES: synced with 25c68903756d6b
+- email: Added support for cancelling DIGEST-MD5 authentication
 
-Daniel Stenberg (10 Sep 2013)
-- README.http2: explain nghttp2 a little
+- email: Corrected a couple of typos from 1e39b95682781f
 
-Steve Holme (9 Sep 2013)
-- tests: Added test for POP3 TOP command
+Daniel Stenberg (27 Oct 2013)
+- [Gisle Vanem brought this change]
 
-- ftpserver.pl: Added support for POP3 TOP command
+  docs/examples/httpput.c: fix build for MSVC
+  
+  "Dan Fandrich" <dan@coneharvesters.com> wrote:
+  
+  >> But I'm not sure <unistd.h> is needed at all.
+  >
+  > It's needed for close(2). But the only reason that's needed is because fstat
+  > is used instead of stat(2); if you fix that, then you could remove that
+  > include altogether.
+  
+  Okay. I've tested the following with MSVC and MingW. htttput.c now
+  simply uses stat():
 
-- tests: Added test for POP3 UIDL command
+Steve Holme (27 Oct 2013)
+- email: Added support for canceling CRAM-MD5 authentication
 
-- ftpserver.pl: Added support for POP3 UIDL command
+Daniel Stenberg (27 Oct 2013)
+- [BjÃ¶rn Stenberg brought this change]
 
-Daniel Stenberg (9 Sep 2013)
-- http2: adjust to new nghttp2_pack_settings_payload proto
+  Typo fix in trynextip().
+
+- TODO: remove "Happy Eyeball dual stack connect"
   
-  This function was modified in nghttp2 git commit a1c3f89c72e51
+  ... as it was just merged in commit 7d7df
 
-Kamil Dudka (9 Sep 2013)
-- url: handle abortion by read/write callbacks, too
+- [BjÃ¶rn Stenberg brought this change]
+
+  Add "Happy Eyeballs" for IPv4/IPv6.
   
-  Otherwise, the FTP protocol would unnecessarily hang 60 seconds if
-  aborted in the CURLOPT_HEADERFUNCTION callback.
+  This patch invokes two socket connect()s nearly simultaneously, and
+  the socket that is first connected "wins" and is subsequently used for
+  the connection. The other is terminated.
   
-  Reported by: Tomas Mlcoch
-  Bug: https://bugzilla.redhat.com/1005686
+  There is a very slight IPv4 preference, in that if both sockets connect
+  simultaneously IPv4 is checked first and thus will win.
 
-Daniel Stenberg (9 Sep 2013)
-- ldap: fix the build for systems with ldap_url_parse()
+Steve Holme (27 Oct 2013)
+- email: Added initial support for cancelling authentication
   
-  Make sure that the custom struct fields are only used by code that
-  doesn't use a struct defintion from the outside.
+  Should a client application fail to decode an authentication message
+  received from a server, or not support any of the parameters given by
+  the server in the message, then the authentication phrase should be
+  cancelled gracefully by the client rather than simply terminating the
+  connection.
   
-  Attempts to fix the problem introduced in 3dc6fc42bfc61b
+  The authentication phrase should be cancelled by simply sending a '*'
+  to the server, in response to erroneous data being received, as per
+  RFC-3501, RFC-4954 and RFC-5034.
+  
+  This patch adds the necessary state machine constants and appropriate
+  response handlers in order to add this functionality for the CRAM-MD5,
+  DIGEST-MD5 and NTLM authentication mechanisms.
 
-Steve Holme (9 Sep 2013)
-- [Jiri Hruska brought this change]
+- email: Moved authentication message parsing into a separate function
+  
+  ...in preparation for upcoming modifications.
 
-  pingpong: Check SSL library buffers for already read data
+- ftp: Fixed compiler warning
   
-  Otherwise the connection can get stuck during various phases, waiting
-  for new data on the socket using select() etc., but it will never be
-  received as the data has already been read into SSL library.
+  warning: 'result' may be used uninitialized in this function
 
-- imap: Fixed calculation of transfer when partial FETCH received
+Daniel Stenberg (26 Oct 2013)
+- FTP: make the data connection work when going through proxy
   
-  The transfer size would be calculated incorrectly if the email contained
-  within the FETCH response, had been partially received by the pingpong
-  layer. As such the following, example output, would be seen if the
-  amount remaining was smaller than the amount received:
+  This is a regression since the switch to always-multi internally
+  c43127414d89c.
   
-  * Excess found in a non pipelined read: excess = 1394, size = 262,
-    maxdownload = 262, bytecount = 1374
-  * transfer closed with -1112 bytes remaining to read
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-08/0170.html
-  Reported-by: John Dunn
+  Test 1316 was modified since we now clearly call the Curl_client_write()
+  function when doing the LIST transfer part and then the
+  handler->protocol says FTP and ftpc.transfertype is 'A' which implies
+  text converting even though that the response is initially a HTTP
+  CONNECT response in this case.
 
-- ftpserver.pl: Fixed empty array checks
-  
-  ...from commits 28427b408326a1 and e8313697b6554b.
+Steve Holme (26 Oct 2013)
+- tool_help: Added login options to --user description
 
-- ftpserver: Reworked AUTH support to allow for specifying the mechanisms
-  
-  Renamed SUPPORTAUTH to AUTH and added support for specifying a list of
-  supported SASL mechanisms to return to the client.
+- email: Added references to SASL LOGIN authentication draft proposal
+
+- tests: Tidy up of SMTP and POP3 tests
   
-  Additionally added the directive to the FILEFORMAT document.
+  Corrected line endings, RFC references and standardised on user names
+  and passwords used in the tests.
 
-- ftpserver: Reworked CAPA support to allow for specifying the capabilities
+- tool_help: Added clarity to the --oauth2-bearer option
   
-  Renamed SUPPORTCAPA to CAPA and added support for specifying a list of
-  supported capabilities to return to the client.
+  ...as XOAUTH2 is the extended (or non-standard) SASL identifier and
+  OAuth 2 is the protocol name (and version).
+
+- smtp: Fixed response code parsing for bad AUTH continuation responses
   
-  Additionally added the directive to the FILEFORMAT document.
+  This workaround had been previously been implemented for IMAP and POP3
+  but not SMTP. Some of the recent test case additions implemented this
+  behaviour to emulate a bad server and the SMTP code didn't cope with it.
 
-- ftpserver.pl: Corrected POP3 LIST as message numbers should be contiguous
+- gskit.c: Code policing following commit 2cc9246477285d
   
-  The message numbers given in the LIST response are an index into the
-  list, which are only valid for the current session, rather than being a
-  unique message identifier. An index would only be missing from the LIST
-  response if a DELE command had been issued within the same session and
-  had not been committed by the end of session QUIT command. Once
-  committed the POP3 server will regenerate the message numbers in the
-  next session to be contiguous again. As such our LIST response should
-  list message numbers contiguously until we support a DELE command in the
-  same session.
+  Corrected 80 character line length error and pointer declarations (some
+  of which were previously incorrect)
+
+- test907: Corrected DIGEST-MD5 response given in commit 820ed48a0088cd
   
-  Should a POP3 user require the unique message ID for any or all
-  messages then they should use the extended UIDL command. This command
-  will be supported by the test ftpserver in an upcoming commit.
+  As the URI, which is contained within the DIGEST-MD5 response, is
+  constructed from the service and realm, the encoded message differs
+  from that generated under POP3.
 
-Daniel Stenberg (8 Sep 2013)
-- [Clemens Gruber brought this change]
+- RELEASE-NOTES: Synced with d24b7953c2132a
 
-  curl_easy_pause: suggest one way to unpause
+- tests: Added SMTP OAUTH2 authentication with initial response test
 
-Steve Holme (8 Sep 2013)
-- tests: Updated descriptions to be more meaningful
+- tests: Added SMTP NTLM authentication with initial response test
 
-- tests: Added test for POP3 NOOP command
+- tests: Added SMTP OAUTH2 authentication test
 
-- ftpserver.pl: Added support for POP3 NOOP command
+- tests: Added SMTP DIGEST-MD5 authentication test
 
-- ftpserver.pl: Fixed 'Use of uninitialized value $args in string ne'
+- tests: Regrouped SMTP authentication tests
 
-- tests: Added test for POP3 STAT command
+Patrick Monnerat (25 Oct 2013)
+- OS400: sync RPG wrapper, zlib support, fix header file names, ...
+  IFS compilation support, SSL GSKit backend by default, TLSv1.[12] support in
+    GSKit for OS400 >= V7R1, no more tabs in make scripts.
 
-- ftpserver.pl: Added support for POP STAT command
+Steve Holme (24 Oct 2013)
+- sasl: Fixed memory leak in OAUTH2 message creation
 
-- ftpserver.pl: Moved POP3 QUIT handler into own function
+- ftpserver.pl: Added support for empty pop3 authentication data
 
-- ftpserver.pl: Reordered the POP3 handlers to be alphabetical
+Daniel Stenberg (23 Oct 2013)
+- CURLOPT_RESOLVE: mention they don't time-out
   
-  In preparation for additional POP3 tests, re-ordered the command
-  function defintions to be sorted alphabetically.
-
-- ftpserver.pl: Corrected misaligned indentation in POP3 handlers
+  Clarify in the documentation that DNS entries added with CURLOPT_RESOLVE
+  won't time-out.
   
-  Fixed incorrect indentation used in both the RETR_pop3 and LIST_pop3
-  functions which was 5 and 9 characters rather than 4 and 8.
-
-- tests: Added test for POP3 DELE command
-
-unknown (7 Sep 2013)
-- [Steve Holme brought this change]
+  Bug: http://curl.haxx.se/mail/lib-2013-10/0062.html
+  Reported-by: Romulo Ceccon
 
-  ftpserver.pl: Added support for POP3 DELE command
+Steve Holme (23 Oct 2013)
+- tests: Added POP3 OAUTH2 authentication test
 
-Daniel Stenberg (7 Sep 2013)
-- http2: include curl_memory.h
+- tests: Added empty response support to custom replies
   
-  Detected by test 1132
-
-Nick Zitzmann (7 Sep 2013)
-- http: fix build warning under LLVM
+  ...and fixed up test869 as DIGEST-MD transcript is as follows:
   
-  When building the code using LLVM Clang without NGHTTP2, I was getting
-  this warning:
-  ../lib/http.h:155:1: warning: empty struct is a GNU extension [-Wgnu]
-  Placing a dummy variable into the data structure silenced the warning.
-
-Daniel Stenberg (7 Sep 2013)
-- http2: actually init nghttp2 and send HTTP2-Settings properly
+  S: Challenge
+  C: Authentication String
+  S: Continue Response
+  C: Empty String
 
-- README.http2: how to use it best with the multi API?
+Daniel Stenberg (23 Oct 2013)
+- sasl: fix compiler warning
+  
+  error: unused variable 'table16'
 
-- http2: first embryo toward Upgrade:
+Steve Holme (23 Oct 2013)
+- tests: Added POP3 DIGEST-MD5 authentication test
 
-- http: rename use_http_1_1 to use_http_1_1plus
+Daniel Stenberg (22 Oct 2013)
+- configure: check for long long when building with cyassl
   
-  Since it now actually says if 1.1 or a later version should be used.
-
-- configure: improve CURL_CHECK_COMPILER_PROTOTYPE_MISMATCH
+  cyassl/ctaocrypt/types.h needs SIZEOF_LONG_LONG
   
-  The compiler test used a variable before it was assigned when it tried
-  to see how it acts on a mismatching prototype, which could cause a false
-  positive.
+  Reported-by: Chris Conlon
 
-- [Petr PÃ­saÅ brought this change]
+- test1240: verify 867b52a7ac52 (glob ranges with text to the right)
 
-  Pass password to OpenSSL engine by user interface
+- glob: fix regression from commit 5ca96cb844
   
-  Recent OpenSSL uses user interface abstraction to negotiate access to
-  private keys in the cryprographical engines. An OpenSSL application is
-  expected to implement the user interface. Otherwise a default one
-  provided by OpenSSL (interactive standard I/O) will be used and the
-  aplication will have no way how to pass a password to the engine.
+  Plain strings after glob ranges/lists weren't treated correctly but
+  caused broken URLs to get used.
   
-  Longer-desc: http://curl.haxx.se/mail/lib-2013-08/0265.html
+  Reported-by: Javier Barroso
 
-- urlglob: improved error messages and column number on bad use
+- [RÃ©my LÃ©one brought this change]
+
+  Adding a .travis.yml file to use the travis-ci.org
   
-  Introduce a convenience macro and keep of the column better so that it
-  can point out the offending column better.
+  From wikipedia:
   
-  Updated test 75 accordingly.
-
-- urlglob: avoid error code translation
+  Travis CI is a hosted, distributed continuous integration service used
+  to build and test projects hosted at GitHub.
   
-  By using the correct values from the start we don't have to translate
-  them!
+  Travis CI is configured by adding a file named .travis.yml, which is a
+  YAML format text file, to the root directory of the GitHub repository.
+  
+  Travis CI automatically detects when a commit has been made and pushed
+  to a GitHub repository that is using Travis CI, and each time this
+  happens, it will try to build the project and run tests. This includes
+  commits to all branches, not just to the master branch. When that
+  process has completed, it will notify a developer in the way it has been
+  configured to do so â for example, by sending an email containing the
+  test results (showing success or failure), or by posting a message on an
+  IRC channel. It can be configured to run the tests on a range of
+  different machines, with different software installed (such as older
+  versions of a programming language, to test for compatibility).
 
-- urlglob: avoid NULL pointer dereference
+Kamil Dudka (21 Oct 2013)
+- ssh: initialize per-handle data in ssh_connect()
   
-  Thanks to clang-analyzer
+  ... if not already initialized.  This fixes a regression introduced by
+  commit 4ad8e142da463ab208d5b5565e53291c8e5ef038, which caused test619
+  to intermittently fail on certain machines (namely Fedora build hosts).
 
+Daniel Stenberg (20 Oct 2013)
 - [Gisle Vanem brought this change]
 
-  http2: use correct include for snprintf
+  curl.1: add missing exit-code
   
-  Using the first little merge of nghttp2 into libcurl, I stumbeled on the
-  missing 'snprintf' in MSVCRT. Isn't this how we do it for other libcurl
-  files?  I.e. use 'curl_msnprintf' and not 'snprintf' directly:
+  I noted a missing text for exit-code 89 in docs/curl.1
 
-- --data: mention CRLF treatment when reading from file
+- cmake: unbreak for non-Windows platforms
+  
+  Patch-by: Oliver Kuckertz
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1292
 
-- [Geoff Beier brought this change]
+Steve Holme (20 Oct 2013)
+- ftpserver.pl: Fixed syntax error from commit 5b31b38c27bb7a
 
-  LDAP: fix bad free() when URL parsing failed
-  
-  When an error occurs parsing an LDAP URL, The ludp->lud_attrs[i] entries
-  could be freed even though they sometimes point to data within an
-  allocated area.
-  
-  This change introduces a lud_attrs_dup[] array for the duplicated string
-  pointers, and it removes the unused lud_exts array.
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-08/0209.html
+- test866: Fixed user response from commit 7f7fbe7fbdb449
 
-Nick Zitzmann (5 Sep 2013)
-- darwinssl: add support for PKCS#12 files for client authentication
+- ftpserver.pl: Fixed processing of POP3 authentication strings
   
-  I also documented the fact that the OpenSSL engine also supports them.
+  ...and corrected response when check fails from 500 to -ERR.
 
-Daniel Stenberg (5 Sep 2013)
-- symbols: added HTTP2 symbols and sorted list
-  
-  CURL_HTTP_VERSION_2_0 and CURL_VERSION_HTTP2 are new
+- tests: Added POP3 NTLM authentication test
 
-- configure: add HTTP2 as a curl-config --feature output
-  
-  Fixes the test 1014 failure
+- tests: Added POP3 CRAM-MD5 authentication test
 
-- curl: unbreak --http1.0 again
-  
-  I broke it in 2eabb7d590
+- tests: Added POP3 login authentication test
 
-- SASL: fix compiler warnings
-  
-  comparison between signed and unsigned integer expressions
-  
-  suggest parentheses around '&&' within '||' (twice)
+- tests: Added POP3 plain authentication test
 
-- curl: add --http1.1 and --http2.0 options
+- tests: Added POP3 APOP authentication test
 
-- Curl_setopt: refuse CURL_HTTP_VERSION_2_0 if built without support
+- ftpserver.pl: Added support for APOP POP3 authentication
 
-- http2: add http2.[ch] and add nghttp2 version output
+- tests: Added POP3 RSET test
 
-- curl -V: output HTTP2 as a feature if present
+- RELEASE-NOTES: Synced with ce61510127ea60
 
-- curl.h: add CURL_VERSION_HTTP2 as a feature
-  
-  It isn't added as a separate protocol as HTTP2 will be done over HTTP://
-  URLs that can be upgraded to HTTP2 if the server supports it as well.
+- email: Fixed QUIT / LOGOUT being sent when SSL connect fails
 
-Steve Holme (4 Sep 2013)
-- imap/smtp: Fixed incorrect SASL mechanism selection with XOAUTH2 servers
-  
-  XOAUTH2 would be selected in preference to LOGIN and PLAIN if the IMAP
-  or SMTP server advertised support for it even though a user's password
-  was supplied but bearer token wasn't.
+Kamil Dudka (18 Oct 2013)
+- curl_sasl: initialize NSS before using crypto
+
+Steve Holme (17 Oct 2013)
+- SSL: Follow up work to commits 6a1363128f1107 and 87861c9b0e8155
   
-  Modified the selection logic so that XOAUTH2 will only be selected if
-  the server supports it and A) The curl user/libcurl programmer has
-  specifically asked for XOAUTH via the ;AUTH=XOAUTH login option or 2)
-  The bearer token is specified. Obviously if XOAUTH is asked for via
-  the login option but no token is specified the user will receive a
-  authentication failure which makes more sense than no known
-  authentication mechanisms supported!
+  Changed the failure code when TLS v1.1 and v1.2 is requested but not
+  supported by older OpenSSL versions, following review from libcurl
+  peers, and reduced the number of required preprocessor if statements.
 
-Daniel Stenberg (4 Sep 2013)
-- curl.h: added CURL_HTTP_VERSION_2_0
+- SSL: Added unsupported cipher version check for OpenSSL
   
-  Initial library considerations documented in lib/README.http2
+  ...with the use of CURL_SSLVERSION_TLSv1_1 and CURL_SSLVERSION_TLSv1_2
+  being conditional on OpenSSL v1.0.1 as the appropriate flags are not
+  supported under earlier versions.
 
-- configure: added --with-nghttp2
+- DOCS: Added libcurl version number to CURLOPT_SSLVERSION
 
-- acinclude: fix --without-ca-path when cross-compiling
+- SSL: Corrected version number for new symbols from commit ad34a2d5c87c7f
+
+- SSL: Corrected typo from commit 87861c9b0e8155
+
+- SSL: Fixed OpenSSL builds prior to v1.0.1
   
-  The commit 7b074a460b64811 to CURL_CHECK_CA_BUNDLE in 7.31 (don't check
-  for paths when cross-compiling) causes --without-ca-path to no longer
-  works when cross-compiling, since ca and capath only ever get set to
-  "no" when not cross-compiling, I attach a patch that works for me. Also
-  in the cross-compilation case, no ca-path seems to be a better default
-  (IMVHO) than empty ca-path.
+  Commit ad34a2d5c87c7f relies on definitions that are only present in
+  OpenSSL v1.0.1 and up. This quick fix allows the builds that use
+  older versions of OpenSSL to continue building.
+
+- test906: Fixed failing test on some platforms
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1273
-  Patch-by: Stefan Neis
+  Bug: http://sourceforge.net/p/curl/bugs/1291
+  Reported-by: David Walser
 
-Steve Holme (2 Sep 2013)
-- lib1512.c: Fixed compilation warning
+Daniel Stenberg (15 Oct 2013)
+- [Paul Donohue brought this change]
+
+  NSS: acknowledge the --no-sessionid/CURLOPT_SSL_SESSIONID_CACHE option
+
+- [Tyler Hall brought this change]
+
+  ssh: Handle successful SSH_USERAUTH_NONE
   
-  An enumerated type is mixed with another type.
+  According to the documentation for libssh2_userauth_list(), a NULL
+  return value is not necessarily an error. You must call
+  libssh2_userauth_authenticated() to determine if the SSH_USERAUTH_NONE
+  request was successful.
   
-  ...as well as a small coding style error.
+  This fixes a segv when using sftp on a server that allows logins with an
+  empty password. When NULL was interpreted as an error, it would
+  free the session but not flag an error since the libssh2 errno would be
+  clear. This resulted in dereferencing a NULL session pointer.
+  
+  Signed-off-by: Tyler Hall <tylerwhall@gmail.com>
 
-Guenter Knauf (1 Sep 2013)
-- Killed warning 'res' might be used uninitialized.
+- [Ishan SinghLevett brought this change]
 
-Steve Holme (1 Sep 2013)
-- url.c: Fixed compilation warning
-  
-  An enumerated type is mixed with another type
+  usercertinmem: fix memory leaks
 
-- easy.c: Fixed compilation warning
-  
-  warning: `code' might be used uninitialized in this function
+- [Dave Reisner brought this change]
 
-Daniel Stenberg (31 Aug 2013)
-- -x: rephrased the --proxy section somewhat
+  build: distribute and install libcurl.m4 by default
 
-Steve Holme (31 Aug 2013)
-- tests: Added test for IMAP CHECK command
+- [Dave Reisner brought this change]
 
-- ftpserver.pl: Added support for the IMAP CHECK command
+  tool: use XFERFUNCTION to save some casts
 
-Guenter Knauf (31 Aug 2013)
-- Removed reference to krb4.c.
+- [Alessandro Ghedini brought this change]
 
-Steve Holme (31 Aug 2013)
-- ftpserver.pl: Corrected flawed logic in commit 1ca6ed7b75cad0
+  curl.1: fix typo conjuction -> conjunction
 
-- imap: Fixed response check for EXPUNGE command
+- curl: document the new --tlsv1.[012] options
 
-- ftpserver.pl: Added argument check to IMAP command handlers
+- [Gergely Nagy brought this change]
+
+  SSL: protocol version can be specified more precisely
   
-  Added BAD argument check to the following IMAP command handlers:
+  CURL_SSLVERSION_TLSv1_0, CURL_SSLVERSION_TLSv1_1,
+  CURL_SSLVERSION_TLSv1_2 enum values are added to force exact TLS version
+  (CURL_SSLVERSION_TLSv1 means TLS 1.x).
   
-  APPEND, STORE, LIST, EXAMINE, STATUS and SEARCH
-
-- ftpserver.pl: More whitespace corrections
+  axTLS:
+  axTLS only supports TLS 1.0 and 1.1 but it cannot be set that only one
+  of these should be used, so we don't allow the new enum values.
   
-  LIST_imap() had a second level of indentation at 9 characters and not 8.
+  darwinssl:
+  Added support for the new enum values.
+  
+  SChannel:
+  Added support for the new enum values.
+  
+  CyaSSL:
+  Added support for the new enum values.
+  Bug: The original CURL_SSLVERSION_TLSv1 value enables only TLS 1.0 (it
+  did the same before this commit), because CyaSSL cannot be configured to
+  use TLS 1.0-1.2.
+  
+  GSKit:
+  GSKit doesn't seem to support TLS 1.1 and TLS 1.2, so we do not allow
+  those values.
+  Bugfix: There was a typo that caused wrong SSL versions to be passed to
+  GSKit.
+  
+  NSS:
+  TLS minor version cannot be set, so we don't allow the new enum values.
+  
+  QsoSSL:
+  TLS minor version cannot be set, so we don't allow the new enum values.
+  
+  OpenSSL:
+  Added support for the new enum values.
+  Bugfix: The original CURL_SSLVERSION_TLSv1 value enabled only TLS 1.0,
+  now it enables 1.0-1.2.
+  
+  Command-line tool:
+  Added command line options for the new values.
 
-- ftpserver.pl: Small correction tidy up
+Nick Zitzmann (14 Oct 2013)
+- darwinssl: un-break iOS build after PKCS#12 feature added
   
-  Corrected some IMAP variable names and whitespace issues.
+  SecPKCS12Import() returns a few errors that are enumerated in OS X's
+  headers but not in iOS' headers for some reason.
 
-- [Kyle L. Huff brought this change]
+Daniel Stenberg (14 Oct 2013)
+- bump: start working on 7.33.1
 
-  docs: Added documentation for CURLOPT_BEARER
+- THANKS: added contributors from the 7.33.0 announcement
 
-- [Kyle L. Huff brought this change]
+Version 7.33.0 (13 Oct 2013)
 
-  curl.1: Add usage of '--bearer' option
+Daniel Stenberg (13 Oct 2013)
+- RELEASE-NOTES: synced with 92cf6141ed0de
 
-- tests: Added tests for IMAP CREATE, DELETE and RENAME commands
+- curl: fix --oauth2-bearer in the --help output
+  
+  After the option rename in 5df04bfafd1
 
-Daniel Stenberg (30 Aug 2013)
-- ftpserver: Bareword "to_mailbox" not allowed
+- OpenSSL: improve the grammar of the language in 39beaa5ffbcc
   
-  Added missing $
+  Reported-by: Petr Pisar
 
-Steve Holme (30 Aug 2013)
-- ftpserver.pl: Added support for IMAP CREATE, DELETE and RENAME commands
+- [Andrej E Baranov brought this change]
 
-Daniel Stenberg (29 Aug 2013)
-- FTP: fix getsock during DO_MORE state
+  OpenSSL: use failf() when subjectAltName mismatches
   
-  ... when doing upload it would return the wrong values at times. This
-  commit attempts to cleanup the mess.
+  Write to CURLOPT_ERRORBUFFER information about mismatch alternative
+  certificate subject names.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-08/0109.html
-  Reported-by: Mike Mio
+  Signed-off-by: Andrej E Baranov <admin@andrej-andb.ru>
 
-- curl_multi_remove_handle: allow multiple removes
+- curl: rename --bearer to --oauth2-bearer
   
-  When removing an already removed handle, avoid that to ruin the
-  internals and just return OK instead.
-
-Steve Holme (29 Aug 2013)
-- ftpserver.pl: Updated IMAP EXAMINE handler to use dynamic test data
-
-Daniel Stenberg (29 Aug 2013)
-- unit1304: include memdebug and free everything correctly
-
-- Curl_parsenetrc: document that the arguments must be allocated
-
-- easy: rename struct monitor to socketmonitor
-  
-  'struct monitor', introduced in 6cf8413e, already exists in an IRIX
-  header file (sys/mon.h) which gets included via various standard headers
-  by lib/easy.c
-  
-  cc-1101 cc: ERROR File = ../../curl/lib/easy.c, Line = 458
-  "monitor" has already been declared in the current scope.
+  The option '--bearer' might be slightly ambiguous in name. It doesn't
+  create any conflict that I am aware of at the moment, however, OAUTH v2
+  is not the only authentication mechanism which uses "bearer" tokens.
   
-  Reported-by: Tor Arntsen
+  Reported-by: Kyle L. Huff
+  URL: http://curl.haxx.se/mail/lib-2013-10/0064.html
 
-Steve Holme (29 Aug 2013)
-- ftpserver.pl: Added SELECT check to IMAP FETCH and STORE handlers
+- [Kamil Dudka brought this change]
 
-- ftpserver.pl: Corrected accidental move of logmsg() call
+  ssh: improve the logic for detecting blocking direction
   
-  Corrected the call to logmsg() in the IMAP SEARCH handler from commit
-  4ae7b7ea691497 as it should have been outputting the what argument and
-  not the test number.
+  This fixes a regression introduced by commit 0feeab78 limiting the speed
+  of SCP upload to 16384 B/s on a fast connection (such as localhost).
 
-Daniel Stenberg (28 Aug 2013)
-- ftpserver: add missing '}' from 4ae7b7ea69149
+Dan Fandrich (12 Oct 2013)
+- Fixed typo in Makefile.inc that left http2.h out of the tar ball
 
-Steve Holme (28 Aug 2013)
-- ftpserver.pl: Added SELECT check to IMAP SEARCH command
+Daniel Stenberg (11 Oct 2013)
+- [Heinrich Schaefer brought this change]
 
-- ftpserver.pl: Fixed IMAP SEARCH command
+  minor fix in doc
 
-Daniel Stenberg (28 Aug 2013)
-- bump: next release is 7.33.0 due to added features
+- [Gisle Vanem brought this change]
 
-- symbols-in-versions: add CURLOPT_XOAUTH2_BEARER
+  curl_setup_once: fix errno access for lwip on Windows
+  
+  lib/curl_setup_once.h assumed lwIP on Windows uses 'SetLastError()' to
+  set network errors. It doesn't; it uses 'errno'.
 
-Steve Holme (28 Aug 2013)
-- tests: Added test for IMAP SEARCH command
+- test1239: verify 4cd444e01ad and the simulated 304 response
 
-Daniel Stenberg (28 Aug 2013)
-- valgrind.supp: fix for regular curl_easy_perform too
+- [Derek Higgins brought this change]
+
+  HTTP: Output http response 304 when modified time is too old
   
-  When we introduced curl_easy_perform_ev, this got a slightly modified
-  call trace. Without this, test 165 causes a false positive valgrind
-  error.
+  When using the -w '%{http_code}' flag and simulating a Not Modified then
+  304 should be output.
 
-- valgrind.supp: add the event-based call stack-trace too
+- contributors: helper script to dig out contributors from git
+
+- RELEASE-NOTES: add twos refs to bug reports
+
+- RELEASE-NOTES: synced with 173160c0d068
+
+Nick Zitzmann (2 Oct 2013)
+- darwinssl: block TLS_RSA_WITH_NULL_SHA256 cipher
   
-  Without this, test 165 triggers a valgrind error when ran with
-  curl_easy_perform_ev
+  Credit (for catching a cipher I forgot to add to the blocked ciphers list):
+  https://www.ssllabs.com/ssltest/viewMyClient.html
 
-- multi_socket: improved 100-continue timeout handling
+Daniel Stenberg (2 Oct 2013)
+- OpenSSL: acknowledge CURLOPT_SSL_VERIFYHOST without VERIFYPEER
   
-  When waiting for a 100-continue response from the server, the
-  Curl_readwrite() will refuse to run if called until the timeout has been
-  reached.
+  Setting only CURLOPT_SSL_VERIFYHOST without CURLOPT_SSL_VERIFYPEER set
+  should still verify that the host name fields in the server certificate
+  is fine or return failure.
   
-  We timeout code in multi_socket() allows code to run slightly before the
-  actual timeout time, so for test 154 it could lead to the function being
-  executed but refused in Curl_readwrite() and then the application would
-  just sit idling forever.
+  Bug: http://curl.haxx.se/mail/lib-2013-10/0002.html
+  Reported-by: Ishan SinghLevett
+
+- KNOWN_BUGS: #84: CURLINFO_SSL_VERIFYRESULT
   
-  This was detected with runtests.pl -e on test 154.
+  CURLINFO_SSL_VERIFYRESULT is only implemented for the OpenSSL and NSS
+  backends and not for any other!
 
-Steve Holme (27 Aug 2013)
-- ftpserver.pl: Added support for IMAP SEARCH command
+- [FranÃ§ois Charlier brought this change]
 
-- tool_operate.c: Fixed compilation warning
-  
-  warning: implicit declaration of function 'checkpasswd'
+  xattr: add support for FreeBSD xattr API
 
-- curl: Moved check for password out of get parameter loop
-  
-  Moved the calls to checkpasswd() out of the getparameter() function
-  which allows for any related arguments to be specified on the command
-  line before or after --user (and --proxy-user).
-  
-  For example: --bearer doesn't need to be specified before --user to
-  prevent curl from asking for an unnecessary password as is the case
-  with commit e7dcc454c67a2f.
+- curl_easy_setopt.3: slight clarification of SEEKFUNCTION
 
-- RELEASE-NOTES: synced with acf59be7f09a7
+Steve Holme (29 Sep 2013)
+- tests: Fixed typos from commit 25a0c96a494297
 
-- [Kyle L. Huff brought this change]
+- tests: Updated email addresses in SMTP tests following recent changes
 
-  curl: added --bearer option to help
+- test909: Removed custom EHLO response after recent changes
   
-  Added the --bearer option to the help output
+  ...as it is no longer required following capability and authentication
+  changes and is now causing problems following commit 49341628b50007 as
+  the test number is obtained from the client address in the EHLO.
 
-- [Kyle L. Huff brought this change]
+- ftpserver.pl: Fixed compilation error from commit 49341628b50007
 
-  curl: added basic SASL XOAUTH2 support
-  
-  Added the ability to specify an XOAUTH2 bearer token [RFC6750] via the
-  --bearer option.
+- ftpserver.pl: Moved specifying the test number from the RCPT address
   
-  Example usage:
-    curl --url "imaps://imap.gmail.com:993/INBOX/;UID=1" --ssl-reqd
-    --bearer ya29.AHES6Z...OMfsHYI --user username@example.com
+  ...to the client address as this frees the RCPT strings to contain
+  just an email address and by passing the test number into curl as the
+  client address remains consistent with POP3 and IMAP tests as they are
+  specified in the URL.
 
-- tool_urlglob.c: Fixed compiler warnings
-  
-  warning: 'variable' may be used uninitialized in this function
+- ftpserver.pl: Added unwanted argument check to SMTP DATA command handler
 
-Daniel Stenberg (26 Aug 2013)
-- security.h: rename to curl_sec.h to avoid name collision
+Daniel Stenberg (29 Sep 2013)
+- getinmemory: remove a comment
   
-  I brought back security.h in commit bb5529331334e. As we actually
-  already found out back in 2005 in commit 62970da675249, the file name
-  security.h causes problems so I renamed it curl_sec.h instead.
+  The comment mentioned the need to free the data, but the example already
+  does that free
 
-- runtests.pl: allow -vc point to a separate curl binary to verify with
+- postinmemory: new example
   
-  The specified curl binary will then be used to verify the running
-  server(s) instead of the development version. This is very useful in
-  some cases when the development version fails to verify correctly as
-  then the test case may not run at all.
+  This is similar to getinmemory.c but with an initial POST.
   
-  The actual test will still be run with the "normal" curl executable
-  (unless the test case specifies something differently).
-
-Steve Holme (26 Aug 2013)
-- [Kyle L. Huff brought this change]
+  Combined-by: Ulf Samuelsson
 
-  smtp: added basic SASL XOAUTH2 support
+- win32: fix Visual Studio 2010 build with WINVER >= 0x600
   
-  Added the ability to use an XOAUTH2 bearer token [RFC6750] with SMTP for
-  authentication using RFC6749 "OAuth 2.0 Authorization Framework".
+  If no WINVER and/or _WIN32_IWNNT define was set, the Windows platform
+  SDK often defaults to high value, e.g. 0x601 (whoch may probably depend
+  on the Windows version being used, in my case Windows 7).
   
-  The bearer token is expected to be valid for the user specified in
-  conn->user. If CURLOPT_XOAUTH2_BEARER is defined and the connection has
-  an advertised auth mechanism of "XOAUTH2", the user and access token are
-  formatted as a base64 encoded string and sent to the server as
-  "AUTH XOAUTH2 <bearer token>".
-
-- [Kyle L. Huff brought this change]
-
-  imap: added basic SASL XOAUTH2 support
+  If WINVER >= 0x600 then winsock2.h includes some defines for WSAPoll(),
+  e.g. POLLIN, POLLPRI, POLLOUT etc. These defines clash with cURL's
+  lib/select.h.
   
-  Added the ability to use an XOAUTH2 bearer token [RFC6750] with IMAP for
-  authentication using RFC6749 "OAuth 2.0 Authorization Framework".
+  Make sure HAVE_STRUCT_POLLFD is defined then.
   
-  The bearer token is expected to be valid for the user specified in
-  conn->user. If CURLOPT_XOAUTH2_BEARER is defined and the connection has
-  an advertised auth mechanism of "XOAUTH2", the user and access token are
-  formatted as a base64 encoded string and sent to the server as
-  "A001 AUTHENTICATE XOAUTH2 <bearer token>".
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1282
+  Reported-by: "kdekker"
+  Patch-by: Marcel Raad
 
-- security.h: Fixed compilation warning
+Steve Holme (28 Sep 2013)
+- ssluse.c: Fixed compilation warnings when ENGINE not supported
   
-  ISO C forbids forward references to 'enum' types
+  The function "ssl_ui_reader" was declared but never referenced
+  The function "ssl_ui_writer" was declared but never referenced
 
-Daniel Stenberg (26 Aug 2013)
-- KNOWN_BUGS: refer to bug numbers with the existing number series
+Daniel Stenberg (27 Sep 2013)
+- configure: use icc options without space
   
-  The old numbers would still redirect but who knows for how long...
-
-Steve Holme (25 Aug 2013)
-- [Kyle L. Huff brought this change]
-
-  options: added basic SASL XOAUTH2 support
+  The latest version(s) of the icc compiler no longer accept the extra
+  space in the -we (warning enable), -wd (warning disable), etc.
   
-  Added the ability to specify an XOAUTH2 bearer token [RFC6750] via the
-  option CURLOPT_XOAUTH2_BEARER for authentication using RFC6749 "OAuth
-  2.0 Authorization Framework".
+  Reported-by: Elmira A Semenova
+  Bug: http://curl.haxx.se/mail/lib-2013-09/0182.html
 
-- [Kyle L. Huff brought this change]
+Steve Holme (25 Sep 2013)
+- imap: Added clarification to the code about odd continuation responses
 
-  sasl: added basic SASL XOAUTH2 support
+- ftp.c: Fixed compilation warning
   
-  Added the ability to generated a base64 encoded XOAUTH2 token
-  containing: "user=<username>^Aauth=Bearer <bearer token>^A^A"
-  as per RFC6749 "OAuth 2.0 Authorization Framework".
+  There is an implicit conversion from "unsigned long" to "long"
 
-Daniel Stenberg (25 Aug 2013)
-- FTP: remove krb4 support
+- sasl: Centralised the authentication mechanism strings
   
-  We've announced this pending removal for a long time and we've
-  repeatedly asked if anyone would care or if anyone objects. Nobody has
-  objected. It has probably not even been working for a good while since
-  nobody has tested/used this code recently.
+  Moved the standard SASL mechanism strings into curl_sasl.h rather than
+  hard coding the same values over and over again in the protocols that
+  use SASL authentication.
   
-  The stuff in krb4.h that was generic enough to be used by other sources
-  is now present in security.h
+  For more information about the mechanism strings see:
+  
+  http://www.iana.org/assignments/sasl-mechanisms
 
-- easy: define away easy_events() for non-debug builds
+Daniel Stenberg (23 Sep 2013)
+- RELEASE-NOTES: added recent contributors missing
 
-- FAQ: editorial updates
-  
-  Several language fixes. Several reformats that should make the HTML
-  generation of this document look better.
-  
-  Reported-by: Dave Thompson
+Steve Holme (23 Sep 2013)
+- test906: Fixed type-2 response
 
-- RELEASE-NOTES: synced with 22adb46a32bee
+- test915: Corrected test number from commit 22bccb0edaf041
 
-- multi: move on from STATE_DONE faster
-  
-  Make sure we always return CURLM_CALL_MULTI_PERFORM when we reach
-  CURLM_STATE_DONE since the state is transient and it can very well
-  continue executing as there is nothing to wait for.
+- test906: Fixed type-1 message not handled error
   
-  Bug: http://curl.haxx.se/mail/lib-2013-08/0211.html
-  Reported-by: Yi Huang
+  ...from commit f81d1e16664976 due to copy paste error.
 
-- curl.h: name space pollution by "enum type"
-  
-  Renamed to "enum curl_khtype" now. Will break compilation for programs
-  that rely on the enum name.
-  
-  Bug: https://github.com/bagder/curl/pull/76
-  Reported-by: Shawn Landden
+- tests: Added SMTP AUTH NTLM test
 
-- TFTP: make the CURLOPT_LOW_SPEED* options work
-  
-  ... this also makes sure that the progess callback gets called more
-  often during TFTP transfers.
-  
-  Added test 1238 to verify.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1269
-  Reported-by: Jo3
+- tests: Added SMTP multiple and invalid --mail-rcpt test
 
-- tftpd: support "writedelay" within <servercmd>
+- tests: Added SMTP multiple --mail-rcpt test
 
-- tftpd: convert 6 global variables into local ones
+- tests: Added SMTP invalid --mail-rcpt test
 
-- [Gisle Vanem brought this change]
+- tests: Regrouping of SMTP tests
 
-  curl_easy_perform_ev: make it CURL_EXTERN
-  
-  I build curl.exe (using MingW) with '-DCURLDEBUG' and by importing from
-  libcurl.dll.  Which means the new curl_easy_perform_ev() must be
-  exported from libcurl.dll.
+Daniel Stenberg (22 Sep 2013)
+- [Benoit Sigoure brought this change]
 
-- CURLM_ADDED_ALREADY: new error code
+  test1112: Increase the timeout from 7s to 16s
   
-  Doing curl_multi_add_handle() on an easy handle that is already added to
-  a multi handle now returns this error code. It previously returned
-  CURLM_BAD_EASY_HANDLE for this condition.
-
-- multi_init: moved init code here from add_handle
+  As someone reported on the mailing list a while back, the hard-coded
+  arbitrary timeout of 7s in test 1112 is not sufficient in some build
+  environments. At Arista Networks we build and test curl as part of our
+  automated build system, and we've run into this timeout 170 times so
+  far. Our build servers are typically quite busy building and testing a
+  lot of code in parallel, so despite being beefy machines with 32 cores
+  and 128GB of RAM we still hit this 7s timeout regularly.
   
-  The closure_handle is "owned" by the multi handle and it is
-  unconditional so the setting up of it should be in the Curl_multi_handle
-  function rather than curl_multi_add_handle.
+  URL: http://curl.haxx.se/mail/lib-2010-02/0200.html
 
-- multi: remove dns cache creation code from *add_handle
-  
-  As it is done unconditionally in multi_init() this code will never run!
+Steve Holme (22 Sep 2013)
+- tests: Fixed smtp rcpt to addresses
 
-- curl_easy_perform_ev: debug/test function
-  
-  This function is meant to work *exactly* as curl_easy_perform() but will
-  use the event-based libcurl API internally instead of
-  curl_multi_perform(). To avoid relying on an actual event-based library
-  and to not use non-portable functions (like epoll or similar), there's a
-  rather inefficient emulation layer implemented on top of Curl_poll()
-  instead.
-  
-  There's currently some convenience logging done in curl_easy_perform_ev
-  which helps when tracking down problems. They may be suitable to remove
-  or change once things seem to be fine enough.
-  
-  curl has a new --test-event option when built with debug enabled that
-  then uses curl_easy_perform_ev() instead of curl_easy_perform(). If
-  built without debug, using --test-event will only output a warning
-  message.
-  
-  NOTE: curl_easy_perform_ev() is not part if the public API on purpose.
-  It is only present in debug builds of libcurl and MUST NOT be considered
-  stable even then. Use it for libcurl-testing purposes only.
+- ftpserver.pl: Expanded the SMTP RCPT handler to validate TO addresses
   
-  runtests.pl now features an -e command line option that makes it use
-  --test-event for all curl command line tests. The man page is updated.
-
-- [Gisle Vanem brought this change]
-
-  transfer: the recent sessionhandle change broke CURL_DOES_CONVERSIONS
-
-- test1237: verify 1000+ letter user name + passwords
-
-- [Jonathan Nieder brought this change]
+  RCPT_smtp() will now check for a correctly formatted TO address which
+  allows for invalid recipient addresses to be added.
 
-  url: handle arbitrary-length username and password before '@'
-  
-  libcurl quietly truncates usernames, passwords, and options from
-  before an '@' sign in a URL to 255 (= MAX_CURL_PASSWORD_LENGTH - 1)
-  characters to fit in fixed-size buffers on the stack.  Allocate a
-  buffer large enough to fit the parsed fields on the fly instead to
-  support longer passwords.
-  
-  After this change, there are no more uses of MAX_CURL_OPTIONS_LENGTH
-  left, so stop defining that constant while at it.  The hardcoded max
-  username and password length constants, on the other hand, are still
-  used in HTTP proxy credential handling (which this patch doesn't
-  touch).
+- ftpserver.pl: Added cURL SMTP server detection to HELO command handler
   
-  Reported-by: Colby Ranger
+  As curl will send a HELO command after an negative EHLO response, added
+  the same detection from commit b07709f7417c3e to the HELO handler to
+  ensure the test server is identified correctly and an upload isn't
+  performed.
 
-- [Jonathan Nieder brought this change]
+- ftpserver.pl: Corrected response code for successful RCPT command
 
-  url: handle exceptional cases first in parse_url_login()
-  
-  Instead of nesting "if(success)" blocks and leaving the reader in
-  suspense about what happens in the !success case, deal with failure
-  cases early, usually with a simple goto to clean up and return from
-  the function.
+- ftpserver.pl: Moved invalid RCPT TO: address detection to RCPT handler
   
-  No functional change intended.  The main effect is to decrease the
-  indentation of this function slightly.
-
-- [Jonathan Nieder brought this change]
+  Rather than detecting the TO address as missing in the DATA handler,
+  moved the detection to the RCPT command handler where an error response
+  can be generated.
 
-  Curl_setopt: handle arbitrary-length username and password
-  
-  libcurl truncates usernames, passwords, and options set with
-  curl_easy_setopt to 255 (= MAX_CURL_PASSWORD_LENGTH - 1) characters.
-  This doesn't affect the return value from curl_easy_setopt(), so from
-  the caller's point of view, there is no sign anything strange has
-  happened, except that authentication fails.
-  
-  For example:
-  
-    # Prepare a long (300-char) password.
-    s=0123456789; s=$s$s$s$s$s$s$s$s$s$s; s=$s$s$s;
-    # Start a server.
-    nc -l -p 8888 | tee out & pid=$!
-    # Tell curl to pass the password to the server.
-    curl --user me:$s http://localhost:8888 & sleep 1; kill $pid
-    # Extract the password.
-    userpass=$(
-  	awk '/Authorization: Basic/ {print $3}' <out |
-  	tr -d '\r' |
-  	base64 -d
-    )
-    password=${userpass#me:}
-    echo ${#password}
-  
-  Expected result: 300
-  Actual result: 255
-  
-  The fix is simple: allocate appropriately sized buffers on the heap
-  instead of trying to squeeze the provided values into fixed-size
-  on-stack buffers.
+- RELEASE-NOTES: Corrected missed addition
   
-  Bug: http://bugs.debian.org/719856
-  Reported-by: Colby Ranger
+  Somehow commit 60a20461629fda missed the last item in the sync list
+  even though I'm sure I added it during editing.
 
-- [Jonathan Nieder brought this change]
+- RELEASE-NOTES: Synced with 6dd8bd8d2f9729
 
-  netrc: handle longer username and password
-  
-  libcurl truncates usernames and passwords it reads from .netrc to
-  LOGINSIZE and PASSWORDSIZE (64) characters without any indication to
-  the user, to ensure the values returned from Curl_parsenetrc fit in a
-  caller-provided buffer.
+- curl.1: Added information about optional login options to --user in manpage
   
-  Fix the interface by passing back dynamically allocated buffers
-  allocated to fit the user's input.  The parser still relies on a
-  256-character buffer to read each line, though.
+  Added missing information, from curl 7.31.0, regarding the use of the
+  optional login options that may be specified as part of --user.
   
-  So now you can include an ~246-character password in your .netrc,
-  instead of the previous limit of 63 characters.
+  For example:
   
-  Reported-by: Colby Ranger
-
-- [Jonathan Nieder brought this change]
+  --user 'user:password;auth=NTLM' in IMAP, POP3 and SMTP protocols.
 
-  url: allocate username, password, and options on the heap
+- ftpserver.pl: Moved cURL SMTP server detection into EHLO command handler
   
-  This makes it possible to increase the size of the buffers when needed
-  in later patches.  No functional change yet.
-
-- [Jonathan Nieder brought this change]
-
-  url: use goto in create_conn() for exception handling
+  Moved the special SMTP server detection code from the DATA command
+  handler, which happens further down the operation chain after EHLO,
+  MAIL and RCPT commands, to the EHLO command as it is the first command
+  to be generated by a SMTP operation as well as containing the special
+  "verifiedserver" string from the URL.
   
-  Instead of remembering before each "return" statement which temporary
-  allocations, if any, need to be freed, take care to set pointers to
-  NULL when no longer needed and use a goto to a common block to exit
-  the function and free all temporaries.
+  This not only makes it easier and quicker to detect but also means that
+  cURL doesn't need to specify "verifiedserver" as --mail-from and
+  --mail-rcpt arguments.
   
-  No functional change intended.  Currently the only temporary buffer in
-  this function is "proxy" which is already correctly freed when
-  appropriate, but there will be more soon.
-
-- [Jonathan Nieder brought this change]
+  More importantly, this also makes the upcoming verification changes to
+  the RCPT handler easier to implement.
 
-  sasl: allow arbitrarily long username and password
+Daniel Stenberg (21 Sep 2013)
+- openssl: use correct port number in error message
   
-  Use appropriately sized buffers on the heap instead of fixed-size
-  buffers on the stack, to allow for longer usernames and passwords.
+  In ossl_connect_step2() when the "Unknown SSL protocol error" occurs, it
+  would output the local port number instead of the remote one which
+  showed when doing SSL over a proxy (but with the correct remote host
+  name). As libcurl only speaks SSL to the remote we know it is the remote
+  port.
   
-  Callers never pass anything longer than MAX_CURL_USER_LENGTH (resp.
-  MAX_CURL_PASSWORD_LENGTH), so no functional change inteded yet.
-
-Steve Holme (19 Aug 2013)
-- [Alex McLellan brought this change]
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1281
+  Reported-by: Gordon Marler
 
-  imap: Fixed response check for SEARCH command
+- test1415: adjusted to work for 32bit time_t
   
-  Adding this line allows libcurl to return the server response when
-  performing a search command via a custom request.
+  The libcurl date parser returns INT_MAX for all dates > 2037 so this
+  test is now made to use 2037 instead of 2038 to work the same for both
+  32bit and 64bit time_t systems.
 
-Daniel Stenberg (16 Aug 2013)
-- glob: error out on range overflow
-  
-  The new multiply() function detects range value overflows. 32bit
-  machines will overflow on a 32bit boundary while 64bit hosts support
-  ranges up to the full 64 bit range.
-  
-  Added test 1236 to verify.
+Steve Holme (21 Sep 2013)
+- tests: Reworked existing SMTP tests to be single recipient based
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1267
-  Reported-by: Will Dietz
+  ...in preparation of upcoming multiple recipient tests.
 
-- urlglob: better detect unclosed braces, empty lists and overflows
-  
-  A rather big overhaul and cleanup.
-  
-  1 - curl wouldn't properly detect and reject globbing that ended with an
-  open brace if there were brackets or braces before it. Like "{}{" or
-  "[0-1]{"
-  
-  2 - curl wouldn't properly reject empty lists so that "{}{}" would
-  result in curl getting (nil) strings in the output.
-  
-  3 - By using strtoul() instead of sscanf() the code will now detected
-  over and underflows. It now also better parses the step argument to only
-  accept positive numbers and only step counters that is smaller than the
-  delta between the maximum and minimum numbers.
-  
-  4 - By switching to unsigned longs instead of signed ints for the
-  counters, the max values for []-ranges are now very large (on 64bit
-  machines).
-  
-  5 - Bumped the maximum number of globs in a single URL to 100 (from 10)
-  
-  6 - Simplified the code somewhat and now it stores fixed strings as
-  single- entry lists. That's also one of the reasons why I did (5) as now
-  all strings between "globs" will take a slot in the array.
-  
-  Added test 1234 and 1235 to verify. Updated test 87.
-  
-  This commit fixes three separate bug reports.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1264
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1265
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1266
-  Reported-by: Will Dietz
-
-- [John Malmberg brought this change]
-
-  VMS: Add RELEASE-NOTES to vms document
-  
-  Add the curl release notes to the release note document generated for
-  VMS packages.
-  
-  Add the different filenames generated by a daily build to the
-  cleanup procedures.
-
-- [Tor Arntsen brought this change]
-
-  tests 2032, 2033: Don't hardcode port in expected output
-
-- ftp: convert state names to a global array
-  
-  ... just to make them easier to print in debug ouputs while debugging.
-  They are still within #ifdef [debugbuild].
-
-- --help: fix the --sasl-ir in the help output
-
-- ftp_domore_getsock: when passive mode, the second conn is already there
-  
-  This makes the socket callback get called with the proper bitmask as
-  otherwise the application could be left hanging waiting for reading on
-  an upload connection!
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-08/0043.html
-  Reported-by: Bill Doyle
-
-- curl: make --no-[option] work properly for several options
-  
-  --create-dirs, --crlf, --socks5-gssapi-nec and --sasl-ir
-
-Kamil Dudka (12 Aug 2013)
-- nss: make sure that NSS is initialized
-  
-  ... prior to calling PK11_GenerateRandom()
-
-Daniel Stenberg (12 Aug 2013)
-- multi: s/easy/data
-  
-  With everything being struct SessionHandle pointers now, this rename
-  makes multi.c use the library-wide practise of calling that pointer
-  'data' instead of the previously used 'easy'.
-
-- cleanup: removed one function, made one static
-  
-  Moved Curl_easy_addmulti() from easy.c to multi.c, renamed it to
-  easy_addmulti and made it static.
-  
-  Removed Curl_easy_initHandleData() and uses of it since it was emptied
-  in commit cdda92ab67b47d74a.
-
-- SessionHandle: the protocol specific pointer is now a void *
-  
-  All protocol handler structs are now opaque (void *) in the
-  SessionHandle struct and moved in the request-specific sub-struct
-  'SingleRequest'. The intension is to keep the protocol specific
-  knowledge in their own dedicated source files [protocol].c etc.
-  
-  There's some "leakage" where this policy is violated, to be addressed at
-  a later point in time.
-
-- urldata: clean up the use of the protocol specific structs
-  
-  1 - always allocate the struct in protocol->setup_connection. Some
-  protocol handlers had to get this function added.
-  
-  2 - always free at the end of a request. This is also an attempt to keep
-  less memory in the handle after it is completed.
-
-- version number: bump to 7.32.1 for now
-  
-  Start working on the next version and up some counters.
-
-Version 7.32.0 (11 Aug 2013)
-
-Daniel Stenberg (11 Aug 2013)
-- THANKS: added contributors from the 7.32.0 release notes
-
-- [Fabian Keil brought this change]
-
-  test1228: add 'HTTP proxy' to the keywords
-
-- [Fabian Keil brought this change]
-
-  tests: add keywords for a couple of FILE tests
-
-- [Fabian Keil brought this change]
-
-  tests: add 'FAILURE' keywords to tests 1409 and 1410
-
-- [Fabian Keil brought this change]
-
-  tests: add keywords for a couple of HTTP tests
-
-- [Fabian Keil brought this change]
-
-  tests: add keywords for a couple of FTP tests
-
-- [Fabian Keil brought this change]
-
-  test1511: consistently terminate headers with CRLF
-
-- DISABLED: shut of test 1512 for now
-  
-  It shows intermittent failures and I haven't been able to track them
-  down yet. Disable this test for now.
-
-- curl_multi_add_handle.3: ... that timer callback is for event-based
-
-- comments: remove old and wrong multi/easy interface statements
-
-- curl_multi_add_handle.3: mention the CURLMOPT_TIMERFUNCTION use
-
-- [John E. Malmberg brought this change]
-
-  KNOWN_BUGS: 22 and 57 have been fixed and committed
-
-- RELEASE-NOTES: synced with d20def20462e7
-
-- global dns cache: fix memory leak
-  
-  The take down of the global dns cache didn't take CURLOPT_RESOLVE names
-  into account.
-
-- global dns cache: didn't work [regression]
-  
-  CURLOPT_DNS_USE_GLOBAL_CACHE broke in commit c43127414d89ccb (been
-  broken since the libcurl 7.29.0 release). While this option has been
-  documented as deprecated for almost a decade and nobody even reported
-  this bug, it should remain functional.
-  
-  Added test case 1512 to verify
-
-Yang Tse (8 Aug 2013)
-- [John Malmberg brought this change]
-
-  packages/vms: update VMS build files
-  
-  VMS modified files either missing from a previous commit and changes
-  to remove references to CVS repositories.
-
-Daniel Stenberg (8 Aug 2013)
-- FTP: renamed several local functions
-  
-  The previous naming scheme ftp_state_post_XXXX() wasn't really helpful
-  as it wasn't always immediately after 'xxxx' and it wasn't easy to
-  understand what it does based on such a name.
-  
-  This new one is instead ftp_state_yyyy() where yyyy describes what it
-  does or sends.
-
-- mk-ca-bundle.1: don't install on make install
-  
-  Since the mk-ca-bundle tool itself isn't installed with make install,
-  there's no point in installing its documentation.
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-08/0057.html
-  Reported-by: Guenter Knauf
-
-Yang Tse (7 Aug 2013)
-- packages/vms/Makefile.am: add latest file additions to EXTRA_DIST
-
-- [John Malmberg brought this change]
-
-  Building_vms_pcsi_kit
-  
-  These are the files needed to build VMS distribution packages known as
-  PCSI kits.
-  
-  Also minor update to the existing files, mainly to the documentation and
-  file clean up code.
-
-Daniel Stenberg (6 Aug 2013)
-- LIBCURL-STRUCTS: new document
-  
-  This is the first version of this new document, detailing the seven
-  perhaps most important internal structs in libcurl source code:
-  
-    1.1 SessionHandle
-    1.2 connectdata
-    1.3 Curl_multi
-    1.4 Curl_handler
-    1.5 conncache
-    1.6 Curl_share
-    1.7 CookieInfo
-
-- CONTRIBUTE: minor language polish
-
-- FTP: when EPSV gets a 229 but fails to connect, retry with PASV
-  
-  This is a regression as this logic used to work. It isn't clear when it
-  broke, but I'm assuming in 7.28.0 when we went all-multi internally.
-  
-  This likely never worked with the multi interface. As the failed
-  connection is detected once the multi state has reached DO_MORE, the
-  Curl_do_more() function was now expanded somewhat so that the
-  ftp_do_more() function can request to go "back" to the previous state
-  when it makes another attempt - using PASV.
-  
-  Added test case 1233 to verify this fix. It has the little issue that it
-  assumes no service is listening/accepting connections on port 1...
-  
-  Reported-by: byte_bucket in the #curl IRC channel
-
-Nick Zitzmann (5 Aug 2013)
-- md5: remove use of CommonCrypto-to-OpenSSL macros for the benefit of Leopard
-  
-  For some reason, OS X 10.5's GCC suddenly stopped working correctly with
-  macros that change MD5_Init etc. in the code to CC_MD5_Init etc., so I
-  worked around this by removing use of the macros and inserting static
-  functions that just call CommonCrypto's implementations of the functions
-  instead.
-
-Guenter Knauf (5 Aug 2013)
-- Simplify check for trusted certificates.
-  
-  This changes the previous check for untrusted certs to a check for
-  certs explicitely marked as trusted.
-  The change is backward-compatible (tested with certdata.txt v1.80).
-
-Daniel Stenberg (5 Aug 2013)
-- configure: warn on bad env variable use, don't error
-  
-  Use XC_CHECK_BUILD_FLAGS instead XC_CHECK_USER_FLAGS.
-
-- Revert "configure: don't error out on variable confusions, just warn"
-  
-  This reverts commit 6b27703b5f525eccdc0a8409f51de8595c75132a.
-
-- formadd: wrong pointer for file name when CURLFORM_BUFFERPTR used
-  
-  The internal function that's used to detect known file extensions for
-  the default Content-Type got the the wrong pointer passed in when
-  CURLFORM_BUFFER + CURLFORM_BUFFERPTR were used. This had the effect that
-  strlen() would be used which could lead to an out-of-bounds read (and
-  thus segfault). In most cases it would only lead to it not finding or
-  using the correct default content-type.
-  
-  It also showed that test 554 and test 587 were testing for the
-  previous/wrong behavior and now they're updated as well.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1262
-  Reported-by: Konstantin Isakov
-
-Guenter Knauf (4 Aug 2013)
-- Skip more untrusted certificates.
-  
-  Christian Heimes brought to our attention that the certdata.txt
-  format has recently changed [1], causing ca-bundle.crt created
-  with mk-ca-bundle.[pl|vbs] to include untrusted certs.
-  
-  [1] http://lists.debian.org/debian-release/2012/11/msg00411.html
-
-Daniel Stenberg (4 Aug 2013)
-- configure: don't error out on variable confusions, just warn
-
-- configure: rephrase the notice in _XC_CHECK_VAR_*
-  
-  Instead of claiming it is an error, we call it a "note" to reduce the
-  severity level. But the following text now says the [variable] "*should*
-  only be used to specify"... instead of previously having said "may".
-
-- multi: remove data->state.current_conn struct field
-  
-  Not needed
-
-- multi: remove the one_easy struct field
-  
-  Since the merge of SessionHandle with Curl_one_easy, this indirection
-  isn't used anymore.
-
-- multi: rename all Curl_one_easy to SessionHandle
-
-- multi: remove the multi_pos struct field
-  
-  Since Curl_one_easy is really a SessionHandle now, this indirection
-  doesn't exist anymore.
-
-- multi: remove easy_handle struct field
-  
-  It isn't needed anymore
-
-- multi: remove 'Curl_one_easy' struct, phase 1
-  
-  The motivation for having a separate struct that keep track of an easy
-  handle when using the multi handle was removed when we switched to
-  always using the multi interface internally. Now they were just two
-  separate struct that was always allocated for each easy handle.
-  
-  This first step just moves the Curl_one_easy struct members into the
-  SessionHandle struct and hides this somehow (== keeps the source code
-  changes to a minimum) by defining Curl_one_easy to SessionHandle
-  
-  The biggest changes in this commit are:
-  
-   1 - the linked list of easy handles had to be changed somewhat due
-       to the new struct layout. This made the main linked list pointer
-       get renamed to 'easyp' and there's also a new pointer to the last
-       node, called easylp. It is no longer circular but ends with ->next
-       pointing to NULL. New nodes are still added last.
-  
-   2 - easy->state is now called easy->mstate to avoid name collision
-
-Steve Holme (2 Aug 2013)
-- Revert "DOCS: Added IMAP URL example for listing new messages"
-  
-  This reverts commit 82ab5f1b0c7c3f as this was the wrong place to
-  document the complexity of IMAP URLs and Custom Requests.
-
-- DOCS: Added IMAP URL example for listing new messages
-  
-  In addition to listing the folder contents, in the URL examples, added
-  an example to list the new messages waiting in the user's inbox.
-
-Yang Tse (1 Aug 2013)
-- packages/vms/Makefile.am: add latest file additions to EXTRA_DIST
-
-- [John Malmberg brought this change]
-
-  Add in the files needed to build libcurl shared images on VMS.
-  
-  Update the packages/vms/readme file to be current.
-  
-  Also some files for the GNV based build were either missing or needed an
-  update.
-  
-  curl_crtl_init.c is a special file that is run before main() to
-  set up the proper C runtime behavior.
-  
-  generate_vax_transfer.com generates the VAX transfer vector modules from
-  the gnv_libcurl_symbols.opt file.
-  
-  gnv_conftest.c_first is a helper file needed for configure scripts to
-  come up with the expected answers on VMS.
-  
-  gnv_libcurl_symbols.opt is the public symbols for the libcurl shared
-  image.
-  
-  gnv_link_curl.com builds the shared libcurl image and rebuilds other
-  programs to use it.
-  
-  macro32_exactcase.patch is a hack to make a local copy of the VMS Macro32
-  assembler case sensitive, which is needed to build the VAX transfer modules.
-  
-  report_openssl_version.c is a tool for help verify that the libcurl
-  shared image is being built for a minium version of openssl.
-
-- curl: second follow-up for commit 5af2bfb9
-  
-  Display progress-bar unconditionally on first call
-
-- curl: follow-up for commit 5af2bfb9
-  
-  Use tvnow() and tvdiff() to avoid introducing new linkage issues
-
-Daniel Stenberg (31 Jul 2013)
-- curl: --progress-bar max update frequency now at 5Hz
-
-- curl: make --progress-bar update the line less frequently
-  
-  Also, use memset() instead of a lame loop.
-  
-  The previous logic that tried to avoid too many updates were very
-  ineffective for really fast transfers, as then it could easily end up
-  doing hundreds of updates per second that would make a significant
-  impact in transfer performance!
-  
-  Bug: http://curl.haxx.se/mail/archive-2013-07/0031.html
-  Reported-by: Marc Doughty
-
-Nick Zitzmann (30 Jul 2013)
-- darwinssl: added LFs to some strings passed into infof()
-  
-  (This doesn't need to appear in the release notes.) I noticed a few places
-  where infof() was called, and there should've been an LF at the end of the
-  string, but there wasn't.
-
-- darwinssl: fix build error in crypto authentication under Snow Leopard
-  
-  It turns out Snow Leopard not only has SecItemCopyMatching() defined in
-  a header not included by the omnibus header, but it won't work for our
-  purposes, because searching for SecIdentityRef objects wasn't added
-  to that API until Lion. So we now use the old SecKeychainSearch API
-  instead if the user is building under, or running under, Snow Leopard.
-  
-  Bug: http://sourceforge.net/p/curl/bugs/1255/
-  Reported by: Edward Rudd
-
-- md5 & metalink: use better build macros on Apple operating systems
-  
-  Previously we used __MAC_10_X and __IPHONE_X to mark digest-generating
-  code that was specific to OS X and iOS. Now we use
-  __MAC_OS_X_VERSION_MAX_ALLOWED and __IPHONE_OS_VERSION_MAX_ALLOWED
-  instead of those macros.
-  
-  Bug: http://sourceforge.net/p/curl/bugs/1255/
-  Reported by: Edward Rudd
-
-Yang Tse (29 Jul 2013)
-- tool_operhlp.c: fix add_file_name_to_url() OOM handling
-
-- tool_operate.c: fix brace placement for vi/emacs delimiter matching
-
-- tool_operate.c: move <fabdef.h> header inclusion location
+- ftpserver.pl: Corrected SMTP QUIT response to be more realistic
 
-Daniel Stenberg (29 Jul 2013)
-- RELEASE-NOTES: synced with b5478a0e033e7
+Daniel Stenberg (20 Sep 2013)
+- curl_easy_setopt.3: clarify that TIMEOUT and TIMEOUT_MS set the same value
 
-- curl_easy_pause: on unpause, trigger mulit-socket handling
-  
-  When the multi-socket API is used, we need the handle to be checked
-  again when it gets unpaused.
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-07/0239.html
-  Reported-by: Justin Karneges
+- [Kim Vandry brought this change]
 
-- [John E. Malmberg brought this change]
+  Documented --dns-* options in curl manpage
 
-  curl_formadd: fix file upload on VMS
-  
-  For the standard VMS text file formats, VMS needs to read the file to
-  get the actual file size.
-  
-  For the standard VMS binary file formats, VMS needs a special format of
-  fopen() call so that it stops reading at the logical end of file instead
-  of at the end of the blocks allocated to the file.
+Steve Holme (20 Sep 2013)
+- pop3: Added basic SASL XOAUTH2 support
   
-  I structured the patch this way as I was not sure about changing the
-  structures or parameters to the routines, but would prefer to only call
-  the stat() function once and pass the information to where the fopen()
-  call is made.
+  Added the ability to use an XOAUTH2 bearer token [RFC6750] with POP3 for
+  authentication using RFC6749 "OAuth 2.0 Authorization Framework".
   
-  Bug: https://sourceforge.net/p/curl/bugs/758/
+  The bearer token is expected to be valid for the user specified in
+  conn->user. If CURLOPT_XOAUTH2_BEARER is defined and the connection has
+  an advertised auth mechanism of "XOAUTH2", the user and access token are
+  formatted as a base64 encoded string and sent to the server as
+  "AUTH XOAUTH2 <bearer token>".
 
-- formadd: CURLFORM_FILECONTENT wrongly rejected some option combos
-  
-  The code for CURLFORM_FILECONTENT had its check for duplicate options
-  wrong so that it would reject CURLFORM_PTRNAME if used in combination
-  with it (but not CURLFORM_COPYNAME)! The flags field used for this
-  purpose cannot be interpreted that broadly.
+- curl: Added clarification to the --mail options in the --help output
   
-  Bug: http://curl.haxx.se/mail/lib-2013-07/0258.html
-  Reported-by: Byrial Jensen
+  ... that these options apply to SMTP only.
 
-Yang Tse (25 Jul 2013)
-- packages/vms/Makefile.am: add latest file additions to EXTRA_DIST
+- ftpserver.pl: Moved SMTP RCPT response text into command handler
 
-- [John E. Malmberg brought this change]
+- tests: Added SMTP invalid --mail-from test
 
-  VMS: intial set of files to allow building using GNV toolkit.
+Nick Zitzmann (19 Sep 2013)
+- darwinssl: enable BEAST workaround on iOS 7 & later
+  
+  iOS 7 finally added the option to enable 1/n-1 when using TLS 1.0
+  and a CBC cipher, so we now always turn that on unless the user
+  manually turns it off using CURLSSLOPT_ALLOW_BEAST.
+  
+  It appears Apple also added some new PSK ciphers, but no interface to
+  use them yet, so we at least support printing them if we find them.
 
-- string formatting: fix too many arguments for format
+Steve Holme (19 Sep 2013)
+- tests: Updated SMTP AUTH tests to use the new AUTH directive
+  
+  ...rather than specify a customised EHLO response.
 
-- string formatting: fix zero-length printf format string
+- tests: Corrected test913 as the QUIT response is received
 
-- easy.c: curl_easy_getinfo() fix va_start/va_end matching
+- tests: Added SMTP large message SIZE test
 
-- imap.c: imap_sendf() fix va_start/va_end matching
+- ftpserver.pl: Updated email regex from commit 98f7ca7e971006
+  
+  ...to not be as strict as it was rejecting valid numeric email
+  addresses.
 
-- string formatting: fix 15+ printf-style format strings
+- tests: Fixed smtp mail from addresses
 
-Patrick Monnerat (24 Jul 2013)
-- OS400: sync ILE/RPG binding with current curl.h
+- ftpserver.pl: Standardised CAPA and AUTH responses
 
-Yang Tse (24 Jul 2013)
-- string formatting: fix 25+ printf-style format strings
+- ftpserver.pl: Corrected POP3 QUIT reply to be more realistic
 
-Daniel Stenberg (23 Jul 2013)
-- Makefile.am: use LDFLAGS as well when linking libcurl
+- runtests.pl: Fixed syntax error in commit c873375123343e
   
-  Linking on Solaris 10 x86 with Sun Studio 12 failed when we upgraded
-  automake for the release builds.
+  Possible unintended interpolation in string at line 796
+
+- runtests.pl: Fixed smtp mail from address
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1217
-  Reported-by: Dagobert Michelsen
+  Following changes to ftpserver.pl fixed the mail from address to be a
+  correctly formatted address otherwise the server response will be 501
+  Invalid address.
 
-- [Fabian Keil brought this change]
+- ftpserver.pl: Fixed syntax error in commit 98f7ca7e971006
+  
+  Can't modify constant item in scalar assignment line 779, near "0;"
 
-  url.c: Fix dot file path cleanup when using an HTTP proxy
+- ftpserver.pl: Expanded the SMTP MAIL handler to validate messages
   
-  Previously the path was cleaned, but the URL wasn't properly updated.
+  MAIl_smtp() will now check for a correctly formatted FROM address as
+  well as the optional SIZE parameter comparing it against the server
+  capability when specified.
 
-- [Fabian Keil brought this change]
+Daniel Stenberg (17 Sep 2013)
+- [YAMADA Yasuharu brought this change]
 
-  tests: test1232 verifies dotdot removal from path with proxy
+  cookies: add expiration
+  
+  Implement: Expired Cookies These following situation, curl removes
+  cookie(s) from struct CookieInfo if the cookie expired.
+   - Curl_cookie_add()
+   - Curl_cookie_getlist()
+   - cookie_output()
 
-- [Fabian Keil brought this change]
+Steve Holme (17 Sep 2013)
+- ftpserver.pl: Corrected response code for successful MAIL command
 
-  dotdot.c: Fix a RFC section number in a comment for Curl_dedotdotify()
+- ftpserver.pl: Moved SMTP MAIL handler into own function
 
-- [John E. Malmberg brought this change]
+- dns: fix compilation with MinGW from commit df69440d05f113
+  
+  Avoid 'interface' literal that some MinGW versions define as a macro
+  
+  Additionally, corrected some very, very minor coding style errors.
 
-  build_vms.com: fix debug and float options
+- tests: Fixed test 1406 following recent changes in ftpserver.pl
   
-  In the reorganization of the build_vms.com the debug and float options
-  were not fixed up correctly.
+  By default the mail server doesn't send the SIZE capability but instead
+  it has to be specified as a supported capability.
 
-- [John E. Malmberg brought this change]
+- tests: Added test for SMTP SIZE capability
 
-  curl: fix upload of a zip file in OpenVMS
-  
-  Two fixes:
-  
-  1. Force output file format to be stream-lf so that partial downloads
-  can be continued.
-  
-  This should have minor impact as if the file does not exist, it was
-  created with stream-lf format.  The only time this was an issue is if
-  there was already an existing file with a different format.
+- ftpserver.pl: Added the ability to include spaces in capabilities
   
-  2. Fix file uploads are now fixed.
+  For example:
   
-     a. VMS binary files such as ZIP archives are now uploaded
-        correctly.
+  CAPA "SIZE 1048576" 8BITMIME BINARYMIME
   
-     b. VMS text files are read once to get the correct size
-        and then converted to line-feed terminated records as
-        they are read into curl.
+  will populate the capabilities list with the following in:
   
-  The default VMS text formats do not contain either line-feed or
-  carriage-return terminated records.  Those delimiters are added by the
-  operating system file read calls if the application requests them.
+  SIZE 1048576
+  8BITMIME
+  BINARYMIME
+
+- ftpserver.pl: Corrected response code for successful SMTP QUIT command
+
+- ftpserver.pl: Fixed syntax error in commit 33c1f2876b9029
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=496
+  Can't modify constant item in postincrement line 727, near "i++"
 
-Yang Tse (22 Jul 2013)
-- libtest: fix data type of some *_setopt() 'long' arguments
+- ftpserver.pl: Added CAPA & AUTH directive support to the SMTP EHLO handler
 
-- curl: fix symbolic names for CURL_NETRC_* enum in --libcurl output
+- ftpserver.pl: Fixed SMTP QUIT handler from dadc495540946e
 
-- curl: fix symbolic names for CURLUSESSL_* enum in --libcurl output
+- ftpserver.pl: Moved SMTP EHLO and QUIT handlers in own functions
 
-- tool_operate.c: fix passing curl_easy_setopt long arg on some x64 ABIs
-  
-  We no longer pass our 'bool' data type variables nor constants as
-  an argument to my_setopt(), instead we use proper 1L or 0L values.
-  
-  This also fixes macro used to pass string argument for CURLOPT_SSLCERT,
-  CURLOPT_SSLKEY and CURLOPT_EGDSOCKET using my_setopt_str() instead of
-  my_setopt().
+- ftpserver.pl: Added support for SMTP HELO command
   
-  This also casts enum or int argument data types to long when passed to
-  my_setopt_enum().
+  ...and updated test902 as explicit HELO response is no longer required.
 
-Daniel Stenberg (21 Jul 2013)
-- curl_multi_wait: fix revents
-  
-  Commit 6d30f8ebed34e7276 didn't work properly. First, it used the wrong
-  array index, but this fix also:
-  
-  1 - only does the copying if indeed there was any activity
-  
-  2 - makes sure to properly translate between internal and external
-  bitfields, which are not guaranteed to match
+- ftpserver.pl: Added mailbox check to IMAP SELECT handler
+
+- ftpserver.pl: Corrected invalid user details check
   
-  Reported-by: Evgeny Turnaev
+  ...in both the IMAP LOGIN and POP3 PASS handlers introduced in commit
+  187ac693744949 and 84ad1569e5fc93 respectively.
 
-- RELEASE-NOTES: synced with d529f3882b9bca
+- ftpserver.pl: Moved IMAP LOGIN handler into own function
 
-- curl_easy_perform: gradually increase the delay time
-  
-  Instead of going 50,100,150 etc millisecond delay time when nothing has
-  been found to do or wait for, we now start lower and double each loop as
-  in 4,8,16,32 etc.
-  
-  This lowers the minimum wait without sacrifizing the longer wait too
-  much with unnecessary CPU cycles burnt.
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-07/0103.html
-  Reported-by: Andreas Malzahn
+- ftpserver.pl: Moved POP3 USER and PASS handlers into own functions
 
-- ftp_do_more: consider DO_MORE complete when server connects back
-  
-  In the case of an active connection when ftp_do_more() detects that the
-  server has connected back, it must make sure to mark it as complete so
-  that the multi_runsingle() function will detect this and move on to the
-  next state.
+- ftpserver.pl: Corrected invalid argument check in POP3 TOP handler
   
-  Bug: http://curl.haxx.se/mail/lib-2013-07/0115.html
-  Reported-by: Clemens Gruber
+  ...which was accidentally introduced in commit 4d6ef6297ae9b6.
 
-Yang Tse (19 Jul 2013)
-- Makefile.b32: Borland makefile adjustments. Tested with BCC 5.5.1
+- ftpserver.pl: Added capability prerequisite for extended POP3 commands
 
-- WIN32 MemoryTracking: require UNICODE for wide strdup code support
+- tests: Updated descriptions to be more meaningful
 
-Daniel Stenberg (18 Jul 2013)
-- CURLOPT_XFERINFOFUNCTION: introducing a new progress callback
+- ftpserver.pl: Added support for IMAP NOOP command
+
+- imap: Fixed response check for NOOP command
+
+- tests: Updated descriptions to be more meaningful
+
+Daniel Stenberg (13 Sep 2013)
+- curl.1: detail how short/long options work
   
-  CURLOPT_XFERINFOFUNCTION is now the preferred progress callback function
-  and CURLOPT_PROGRESSFUNCTION is considered deprecated.
+  URL: http://curl.haxx.se/bug/view.cgi?id=1279
+  Suggested-by: Jerry Krinock
+
+Steve Holme (13 Sep 2013)
+- curl: Fixed usage of DNS options when not using c-ares resolver
   
-  This new callback uses pure 'curl_off_t' arguments to pass on full
-  resolution sizes. It otherwise retains the same characteristics: the
-  same call rate, the same meanings for the arguments and the return code
-  is used the same way.
+  Commit 32352ed6adddcb introduced various DNS options, however, these
+  would cause curl to exit with CURLE_NOT_BUILT_IN when c-ares wasn't
+  being used as the backend resolver even if the options weren't set
+  by the user.
   
-  The progressfunc.c example is updated to show how to use the new
-  callback for newer libcurls while supporting the older one if built with
-  an older libcurl or even built with a newer libcurl while running with
-  an older.
+  Additionally corrected some minor coding style errors from the same
+  commit.
 
-Yang Tse (18 Jul 2013)
-- Reinstate "WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage".
-  
-  This reverts commit 7ed25cc, reinstating commit 8ec2cb5.
+Daniel Stenberg (13 Sep 2013)
+- curl_easy_setopt.3: mention RTMP URL quirks
   
-  As of 18-jul-2013 we still do have code in libcurl that makes use of these
-  memory functions. Commit 8ec2cb5 comment still applies and is yet valid.
+  URL: http://curl.haxx.se/bug/view.cgi?id=1278
+  Reported-by: Gorilla Maguila
+
+- [Ben Greear brought this change]
+
+  curl: Add support for various DNS binding options.
   
-  These memory functions are solely used in Windows builds, so all related
-  code is protected with '#ifdef WIN32' preprocessor conditional compilation
-  directives.
+  (Passed on to c-ares.)
   
-  Specifically, wcsdup() _wcsdup() are used when building a Windows target with
-  UNICODE and USE_WINDOWS_SSPI preprocessor symbols defined. This is the case
-  when building a Windows UNICODE target with Windows native SSL/TLS support
-  enabled.
+  Allows something like this:
   
-  Realizing that wcsdup() _wcsdup() are used is a bit tricky given that usage
-  of these is hidden behind _tcsdup() which is MS way of dealing with code
-  that must tolerate UNICODE and non-UNICODE compilation. Additionally, MS
-  header files and those compatible from other compilers use this preprocessor
-  conditional compilation directive in order to select at compilation time
-  whether 'wide' or 'ansi' MS API functions are used.
+  curl --dns-interface sta8 --dns-ipv4-addr 8.8.1.111 --interface sta8 \
+  --localaddr 8.8.1.111 --dns-servers 8.8.8.1 www.google.com
   
-  Without this code, Windows build targets with Windows native SSL/TLS support
-  enabled and MemoryTracking support enabled misbehave in tracking memory usage,
-  regardless of being a UNICODE enabled build or not.
+  Signed-off-by: Ben Greear <greearb@candelatech.com>
 
-- xc-am-iface.m4: comments refinement
+- [Kim Vandry brought this change]
 
-- configure: fix 'subdir-objects' distclean related issue
+  libcurl: New options to bind DNS to local interfaces or IP addresses
+
+- libcurl.3: for multi interface connections are held in the multi handle
   
-  See XC_AMEND_DISTCLEAN comments for details.
+  ... and a few more cleanups/clarifications
 
-Daniel Stenberg (18 Jul 2013)
-- [Evgeny Turnaev brought this change]
+Steve Holme (12 Sep 2013)
+- ftpserver.pl: Fixed missing comma from 7fd84b14d219b1
 
-  curl_multi_wait: set revents for extra fds
+- ftpserver.pl: Fixed variable error introduced in 7fd84b14d219b1
   
-  Pass back the revents that happened for the user-provided file
-  descriptors.
+  Global symbol "$mailbox" requires explicit package name
 
-- [Ben Greear brought this change]
+- ftpserver.pl: Added support for UID command
 
-  asyn-ares: Don't blank ares servers if none configured.
-  
-  Best to just let c-ares use it's defaults if none are configured
-  in (lib)curl.
-  
-  Signed-off-by: Ben Greear <greearb@candelatech.com>
+- ftpserver.pl: Added support for LSUB command
 
-- [Sergei Nikulov brought this change]
+- imap: Fixed response check for LSUB and UID commands
 
-  cmake: Fix for MSVC2010 project generation
-  
-  Fixed issue with static build for MSVC2010.
+- ftpserver.pl: Added support for IMAP COPY command
+
+- ftpserver.pl: Added support for IMAP CLOSE and EXPUNGE commands
+
+- ftpserver.pl: Added support for POP3 RSET command
+
+- ftpserver.pl: Added the ability to remember what messages are deleted
   
-  After some investigation I've discovered known issue
-  http://public.kitware.com/Bug/view.php?id=11240 When .rc file is linked
-  to static lib it fails with following linker error
+  ...as this will be required for IMAP CLOSE and EXPUNGE commands as well
+  as the POP3 RSET command.
+
+Daniel Stenberg (10 Sep 2013)
+- NI_MAXSERV: remove all use of it
   
-  LINK : warning LNK4068: /MACHINE not specified; defaulting to X86
-  file.obj : fatal error LNK1112: module machine type 'x64' conflicts with
-  target machine type 'X86'
+  Solaris with the SunStudio Compiler is reportedly missing this define,
+  but as we're using it without any good reason on all the places it was
+  used I've now instead switched to just use sensible buffer sizes that
+  fit a 32 bit decimal number. Which also happens to be smaller than the
+  common NI_MAXSERV value which is 32 on most machines.
   
-  Fix add target property /MACHINE: for MSVC generation.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1277
+  Reported-by: D.Flinkmann
+
+- http2: use the support HTTP2 draft version in the upgrade header
   
-  Also removed old workarounds - it caused errors during msvc build.
+  ... instead of HTTP/2.0 to work fine with the nghttpx proxy/server.
+
+Steve Holme (10 Sep 2013)
+- ldap.c: Fix compilation warning
   
-  Bug: http://curl.haxx.se/mail/lib-2013-07/0046.html
+  warning: comparison between signed and unsigned integer expressions
 
-- mk-ca-bundle.1: point out certdata.txt format docs
+- [Jiri Hruska brought this change]
 
-Yang Tse (16 Jul 2013)
-- slist.c: Curl_slist_append_nodup() OOM handling fix
+  imap/pop3/smtp: Speed up SSL connection initialization
+  
+  Don't wait for the next callback call (usually 1 second) before
+  continuing with protocol specific connection initialization.
 
-Daniel Stenberg (16 Jul 2013)
-- test1414: FTP PORT download without SIZE support
+- ldap.c: Corrected build error from commit 857f999353f333
 
-Yang Tse (16 Jul 2013)
-- tests/Makefile.am: add configurehelp.pm to DISTCLEANFILES
+- RELEASE-NOTES: Corrected duplicate in bfefe2400a16b8
 
-Patrick Monnerat (15 Jul 2013)
-- curl_slist_append(): fix error detection
+- RELEASE-NOTES: Corrected typo from bfefe2400a16b8
 
-- slist.c: fix indentation
+- RELEASE-NOTES: synced with 25c68903756d6b
 
-- OS400: new SSL backend GSKit
+Daniel Stenberg (10 Sep 2013)
+- README.http2: explain nghttp2 a little
 
-- OS400: add slist and certinfo EBCDIC support
+Steve Holme (9 Sep 2013)
+- tests: Added test for POP3 TOP command
 
-- config-os400.h: enable system strdup(), strcmpi(), etc.
+- ftpserver.pl: Added support for POP3 TOP command
 
-- x509asn1.c,x509asn1.h: new module to support ASN.1/X509 parsing & info extract
-  Use from qssl backend
+- tests: Added test for POP3 UIDL command
 
-- ssluse.c,sslgen.c,sslgen.h: move certinfo support to generic SSL
+- ftpserver.pl: Added support for POP3 UIDL command
 
-- Merge branch 'master' of github.com:bagder/curl
+Daniel Stenberg (9 Sep 2013)
+- http2: adjust to new nghttp2_pack_settings_payload proto
   
-  Merge for resync
-
-- slist.c, slist.h, cookie.c: new internal procedure Curl_slist_append_nodup()
+  This function was modified in nghttp2 git commit a1c3f89c72e51
 
-Yang Tse (15 Jul 2013)
-- sslgen.c: fix Curl_rand() compiler warning
+Kamil Dudka (9 Sep 2013)
+- url: handle abortion by read/write callbacks, too
   
-  Use simple seeding method upon RANDOM_FILE seeding method failure.
-
-- sslgen.c: fix unreleased Curl_rand() infinite recursion
-
-Daniel Stenberg (14 Jul 2013)
-- [Dave Reisner brought this change]
+  Otherwise, the FTP protocol would unnecessarily hang 60 seconds if
+  aborted in the CURLOPT_HEADERFUNCTION callback.
+  
+  Reported by: Tomas Mlcoch
+  Bug: https://bugzilla.redhat.com/1005686
 
-  src/tool: allow timeouts to accept decimal values
+Daniel Stenberg (9 Sep 2013)
+- ldap: fix the build for systems with ldap_url_parse()
   
-  Implement wrappers around strtod to convert the user argument to a
-  double with sane error checking. Use this to allow --max-time and
-  --connect-timeout to accept decimal values instead of strictly integers.
+  Make sure that the custom struct fields are only used by code that
+  doesn't use a struct defintion from the outside.
   
-  The manpage is updated to make mention of this feature and,
-  additionally, forewarn that the actual timeout of the operation can
-  vary in its precision (particularly as the value increases in its
-  decimal precision).
+  Attempts to fix the problem introduced in 3dc6fc42bfc61b
 
-- [Dave Reisner brought this change]
+Steve Holme (9 Sep 2013)
+- [Jiri Hruska brought this change]
 
-  curl.1: fix long line, found by checksrc.pl
+  pingpong: Check SSL library buffers for already read data
+  
+  Otherwise the connection can get stuck during various phases, waiting
+  for new data on the socket using select() etc., but it will never be
+  received as the data has already been read into SSL library.
 
-- [Dave Reisner brought this change]
+- imap: Fixed calculation of transfer when partial FETCH received
+  
+  The transfer size would be calculated incorrectly if the email contained
+  within the FETCH response, had been partially received by the pingpong
+  layer. As such the following, example output, would be seen if the
+  amount remaining was smaller than the amount received:
+  
+  * Excess found in a non pipelined read: excess = 1394, size = 262,
+    maxdownload = 262, bytecount = 1374
+  * transfer closed with -1112 bytes remaining to read
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-08/0170.html
+  Reported-by: John Dunn
 
-  src/tool_paramhlp: try harder to catch negatives
+- ftpserver.pl: Fixed empty array checks
   
-  strto* functions happily chomp off leading whitespace, so simply
-  checking for str[0] can lead to false negatives. Do the full parse and
-  check the out value instead.
+  ...from commits 28427b408326a1 and e8313697b6554b.
 
-- [John E. Malmberg brought this change]
+- ftpserver: Reworked AUTH support to allow for specifying the mechanisms
+  
+  Renamed SUPPORTAUTH to AUTH and added support for specifying a list of
+  supported SASL mechanisms to return to the client.
+  
+  Additionally added the directive to the FILEFORMAT document.
 
-  build_vms.com: detect and use zlib shared image
+- ftpserver: Reworked CAPA support to allow for specifying the capabilities
   
-  Update the build_vms.com to detect and use zlib shared image installed
-  by the ZLIB kit produced by Jean-Francois Pieronne, and the also the
-  future ZLIB 1.2.8 kit in addition to the older ZLIB kits.
+  Renamed SUPPORTCAPA to CAPA and added support for specifying a list of
+  supported capabilities to return to the client.
   
-  Also fix the indentation to match one of the common standards used for
-  VMS DCL command files and removed the hard tab characters.
+  Additionally added the directive to the FILEFORMAT document.
+
+- ftpserver.pl: Corrected POP3 LIST as message numbers should be contiguous
   
-  Tested on OpenVMS 8.4 Alpha and IA64, and OpenVMS 7.3 VAX.
+  The message numbers given in the LIST response are an index into the
+  list, which are only valid for the current session, rather than being a
+  unique message identifier. An index would only be missing from the LIST
+  response if a DELE command had been issued within the same session and
+  had not been committed by the end of session QUIT command. Once
+  committed the POP3 server will regenerate the message numbers in the
+  next session to be contiguous again. As such our LIST response should
+  list message numbers contiguously until we support a DELE command in the
+  same session.
+  
+  Should a POP3 user require the unique message ID for any or all
+  messages then they should use the extended UIDL command. This command
+  will be supported by the test ftpserver in an upcoming commit.
 
-Yang Tse (14 Jul 2013)
-- url.c: fix parse_url_login() OOM handling
+Daniel Stenberg (8 Sep 2013)
+- [Clemens Gruber brought this change]
 
-- http_digest.c: SIGSEGV and OOM handling fixes
+  curl_easy_pause: suggest one way to unpause
 
-- url.c: fix parse_login_details() OOM handling
+Steve Holme (8 Sep 2013)
+- tests: Updated descriptions to be more meaningful
+
+- tests: Added test for POP3 NOOP command
+
+- ftpserver.pl: Added support for POP3 NOOP command
+
+- ftpserver.pl: Fixed 'Use of uninitialized value $args in string ne'
+
+- tests: Added test for POP3 STAT command
+
+- ftpserver.pl: Added support for POP STAT command
 
-- [John E. Malmberg brought this change]
+- ftpserver.pl: Moved POP3 QUIT handler into own function
 
-  setup-vms.h: sk_pop symbol tweak
+- ftpserver.pl: Reordered the POP3 handlers to be alphabetical
   
-  Newer versions of curl are referencing a sk_pop symbol while the HP
-  OpenSSL library has the symbol in uppercase only.
-
-- getinfo.c: fix enumerated type mixed with another type
+  In preparation for additional POP3 tests, re-ordered the command
+  function defintions to be sorted alphabetically.
 
-- test 1511: fix enumerated type mixed with another type
+- ftpserver.pl: Corrected misaligned indentation in POP3 handlers
+  
+  Fixed incorrect indentation used in both the RETR_pop3 and LIST_pop3
+  functions which was 5 and 9 characters rather than 4 and 8.
 
-- url.c: fix SIGSEGV
+- tests: Added test for POP3 DELE command
 
-- dotdot.c: fix global declaration shadowing
+unknown (7 Sep 2013)
+- [Steve Holme brought this change]
 
-- easy.c: fix global declaration shadowing
+  ftpserver.pl: Added support for POP3 DELE command
 
-Kamil Dudka (9 Jul 2013)
-- Revert "curl.1: document the --time-cond option in the man page"
+Daniel Stenberg (7 Sep 2013)
+- http2: include curl_memory.h
   
-  This reverts commit 3a0e931fc715a80004958794a96b12cf90503f99 because
-  the documentation of --time-cond was duplicated by mistake.
+  Detected by test 1132
+
+Nick Zitzmann (7 Sep 2013)
+- http: fix build warning under LLVM
   
-  Reported by: Dave Reisner
+  When building the code using LLVM Clang without NGHTTP2, I was getting
+  this warning:
+  ../lib/http.h:155:1: warning: empty struct is a GNU extension [-Wgnu]
+  Placing a dummy variable into the data structure silenced the warning.
 
-- curl.1: document the --sasl-ir option in the man page
+Daniel Stenberg (7 Sep 2013)
+- http2: actually init nghttp2 and send HTTP2-Settings properly
 
-- curl.1: document the --post303 option in the man page
+- README.http2: how to use it best with the multi API?
 
-- curl.1: document the --time-cond option in the man page
+- http2: first embryo toward Upgrade:
 
-Yang Tse (9 Jul 2013)
-- configure: automake 1.14 compatibility tweak (use XC_AUTOMAKE)
+- http: rename use_http_1_1 to use_http_1_1plus
+  
+  Since it now actually says if 1.1 or a later version should be used.
 
-- xc-am-iface.m4: provide XC_AUTOMAKE macro
+- configure: improve CURL_CHECK_COMPILER_PROTOTYPE_MISMATCH
+  
+  The compiler test used a variable before it was assigned when it tried
+  to see how it acts on a mismatching prototype, which could cause a false
+  positive.
 
-Guenter Knauf (8 Jul 2013)
-- Added winssl-zlib target to VC builds.
+- [Petr PÃ­saÅ brought this change]
 
-- Synced Makefile.vc6 with recent changes.
+  Pass password to OpenSSL engine by user interface
   
-  Issue posted to the list by malinowsky AT FTW DOT at.
+  Recent OpenSSL uses user interface abstraction to negotiate access to
+  private keys in the cryprographical engines. An OpenSSL application is
+  expected to implement the user interface. Otherwise a default one
+  provided by OpenSSL (interactive standard I/O) will be used and the
+  aplication will have no way how to pass a password to the engine.
+  
+  Longer-desc: http://curl.haxx.se/mail/lib-2013-08/0265.html
 
-- Added libmetalink URL; added Android versions.
+- urlglob: improved error messages and column number on bad use
+  
+  Introduce a convenience macro and keep of the column better so that it
+  can point out the offending column better.
+  
+  Updated test 75 accordingly.
 
-Dan Fandrich (3 Jul 2013)
-- examples: Moved usercertinmem.c to COMPLICATED_EXAMPLES
+- urlglob: avoid error code translation
   
-  This prevents it from being built during a "make check" since it
-  depends on OpenSSL.
+  By using the correct values from the start we don't have to translate
+  them!
 
-Nick Zitzmann (2 Jul 2013)
-- Merge branch 'master' of https://github.com/bagder/curl
+- urlglob: avoid NULL pointer dereference
+  
+  Thanks to clang-analyzer
 
-- darwinssl: SSLv2 connections are aborted if unsupported by the OS
+- [Gisle Vanem brought this change]
+
+  http2: use correct include for snprintf
   
-  I just noticed that OS X no longer supports SSLv2. Other TLS engines return
-  an error if the requested protocol isn't supported by the underlying
-  engine, so we do that now for SSLv2 if the framework returns an error
-  when trying to turn on SSLv2 support. (Note: As always, SSLv2 support is
-  only enabled in curl when starting the app with the -2 argument; it's off
-  by default. SSLv2 is really old and insecure.)
+  Using the first little merge of nghttp2 into libcurl, I stumbeled on the
+  missing 'snprintf' in MSVCRT. Isn't this how we do it for other libcurl
+  files?  I.e. use 'curl_msnprintf' and not 'snprintf' directly:
 
-Marc Hoersken (1 Jul 2013)
-- lib506.c: Fixed possible use of uninitialized variables
+- --data: mention CRLF treatment when reading from file
 
-Kamil Dudka (30 Jun 2013)
-- url: restore the functionality of 'curl -u :'
+- [Geoff Beier brought this change]
+
+  LDAP: fix bad free() when URL parsing failed
   
-  This commit fixes a regression introduced in
-  fddb7b44a79d78e05043e1c97e069308b6b85f79.
+  When an error occurs parsing an LDAP URL, The ludp->lud_attrs[i] entries
+  could be freed even though they sometimes point to data within an
+  allocated area.
   
-  Reported by: Markus Moeller
-  Bug: http://curl.haxx.se/mail/archive-2013-06/0052.html
+  This change introduces a lud_attrs_dup[] array for the duplicated string
+  pointers, and it removes the unused lud_exts array.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-08/0209.html
 
-Daniel Stenberg (25 Jun 2013)
-- digest: append the timer to the random for the nonce
+Nick Zitzmann (5 Sep 2013)
+- darwinssl: add support for PKCS#12 files for client authentication
+  
+  I also documented the fact that the OpenSSL engine also supports them.
 
-- digest: improve nonce generation
+Daniel Stenberg (5 Sep 2013)
+- symbols: added HTTP2 symbols and sorted list
   
-  Use the new improved Curl_rand() to generate better random nonce for
-  Digest auth.
+  CURL_HTTP_VERSION_2_0 and CURL_VERSION_HTTP2 are new
 
-- curl.1: fix typo in --xattr description
+- configure: add HTTP2 as a curl-config --feature output
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1252
-  Reported-by: Jean-NoÃ«l Rouvignac
+  Fixes the test 1014 failure
 
-- RELEASE-NOTES: synced with 365c5ba39591
+- curl: unbreak --http1.0 again
   
-  The 10 first bug fixes for the pending release...
+  I broke it in 2eabb7d590
 
-- formpost: better random boundaries
+- SASL: fix compiler warnings
   
-  When doing multi-part formposts, libcurl used a pseudo-random value that
-  was seeded with time(). This turns out to be bad for users who formpost
-  data that is provided with users who then can guess how the boundary
-  string will look like and then they can forge a different formpost part
-  and trick the receiver.
+  comparison between signed and unsigned integer expressions
   
-  My advice to such implementors is (still even after this change) to not
-  rely on the boundary strings being cryptographically strong. Fix your
-  code and logic to not depend on them that much!
+  suggest parentheses around '&&' within '||' (twice)
+
+- curl: add --http1.1 and --http2.0 options
+
+- Curl_setopt: refuse CURL_HTTP_VERSION_2_0 if built without support
+
+- http2: add http2.[ch] and add nghttp2 version output
+
+- curl -V: output HTTP2 as a feature if present
+
+- curl.h: add CURL_VERSION_HTTP2 as a feature
   
-  I moved the Curl_rand() function into the sslgen.c source file now to be
-  able to take advantage of the SSL library's random function if it
-  provides one. If not, try to use the RANDOM_FILE for seeding and as a
-  last resort keep the old logic, just modified to also add microseconds
-  which makes it harder to properly guess the exact seed.
+  It isn't added as a separate protocol as HTTP2 will be done over HTTP://
+  URLs that can be upgraded to HTTP2 if the server supports it as well.
+
+Steve Holme (4 Sep 2013)
+- imap/smtp: Fixed incorrect SASL mechanism selection with XOAUTH2 servers
   
-  The formboundary() function in formdata.c is now using 64 bit entropy
-  for the boundary and therefore the string of dashes was reduced by 4
-  letters and there are 16 hex digits following it. The total length is
-  thus still the same.
+  XOAUTH2 would be selected in preference to LOGIN and PLAIN if the IMAP
+  or SMTP server advertised support for it even though a user's password
+  was supplied but bearer token wasn't.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1251
-  Reported-by: "Floris"
+  Modified the selection logic so that XOAUTH2 will only be selected if
+  the server supports it and A) The curl user/libcurl programmer has
+  specifically asked for XOAUTH via the ;AUTH=XOAUTH login option or 2)
+  The bearer token is specified. Obviously if XOAUTH is asked for via
+  the login option but no token is specified the user will receive a
+  authentication failure which makes more sense than no known
+  authentication mechanisms supported!
 
-- printf: make sure %x are treated unsigned
+Daniel Stenberg (4 Sep 2013)
+- curl.h: added CURL_HTTP_VERSION_2_0
   
-  When using %x, the number must be treated as unsigned as otherwise it
-  would get sign-extended on for example 64bit machines and do wrong
-  output. This problem showed when doing printf("%08x", 0xffeeddcc) on a
-  64bit host.
+  Initial library considerations documented in lib/README.http2
 
-- tests: add test1395 to the tarball
+- configure: added --with-nghttp2
 
-- SIGPIPE: don't use 'data' in sigpipe restore
+- acinclude: fix --without-ca-path when cross-compiling
   
-  Follow-up fix from 7d80ed64e43515.
+  The commit 7b074a460b64811 to CURL_CHECK_CA_BUNDLE in 7.31 (don't check
+  for paths when cross-compiling) causes --without-ca-path to no longer
+  works when cross-compiling, since ca and capath only ever get set to
+  "no" when not cross-compiling, I attach a patch that works for me. Also
+  in the cross-compilation case, no ca-path seems to be a better default
+  (IMVHO) than empty ca-path.
   
-  The SessionHandle may not be around to use when we restore the sigpipe
-  sighandler so we store the no_signal boolean in the local struct to know
-  if/how to restore.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1273
+  Patch-by: Stefan Neis
 
-- TODO: 1.8 Modified buffer size approach
+Steve Holme (2 Sep 2013)
+- lib1512.c: Fixed compilation warning
   
-  Thoughts around buffer sizes and what might be possible to do...
-
-- c-ares: improve error message on failed resolve
+  An enumerated type is mixed with another type.
   
-  When the c-ares based resolver backend failed to resolve a name, it
-  tried to show the name that failed from existing structs. This caused
-  the wrong output and shown hostname when for example --interface
-  [hostname] was used and that name resolving failed.
+  ...as well as a small coding style error.
+
+Guenter Knauf (1 Sep 2013)
+- Killed warning 'res' might be used uninitialized.
+
+Steve Holme (1 Sep 2013)
+- url.c: Fixed compilation warning
   
-  Now we use the hostname used in the actual resolve attempt in the error
-  message as well.
+  An enumerated type is mixed with another type
+
+- easy.c: Fixed compilation warning
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1191
-  Reported-by: Kim Vandry
+  warning: `code' might be used uninitialized in this function
 
-- ossl_recv: check for an OpenSSL error, don't assume
+Daniel Stenberg (31 Aug 2013)
+- -x: rephrased the --proxy section somewhat
+
+Steve Holme (31 Aug 2013)
+- tests: Added test for IMAP CHECK command
+
+- ftpserver.pl: Added support for the IMAP CHECK command
+
+Guenter Knauf (31 Aug 2013)
+- Removed reference to krb4.c.
+
+Steve Holme (31 Aug 2013)
+- ftpserver.pl: Corrected flawed logic in commit 1ca6ed7b75cad0
+
+- imap: Fixed response check for EXPUNGE command
+
+- ftpserver.pl: Added argument check to IMAP command handlers
   
-  When we recently started to treat a zero return code from SSL_read() as
-  an error we also got false positives - which primarily looks to be
-  because the OpenSSL documentation is wrong and a zero return code is not
-  at all an error case in many situations.
+  Added BAD argument check to the following IMAP command handlers:
   
-  Now ossl_recv() will check with ERR_get_error() to see if there is a
-  stored error and only then consider it to be a true error if SSL_read()
-  returned zero.
+  APPEND, STORE, LIST, EXAMINE, STATUS and SEARCH
+
+- ftpserver.pl: More whitespace corrections
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1249
-  Reported-by: Nach M. S.
-  Patch-by: Nach M. S.
+  LIST_imap() had a second level of indentation at 9 characters and not 8.
 
-Nick Zitzmann (22 Jun 2013)
-- Merge branch 'master' of https://github.com/bagder/curl
+- ftpserver.pl: Small correction tidy up
+  
+  Corrected some IMAP variable names and whitespace issues.
 
-- darwinssl: fix crash that started happening in Lion
+- [Kyle L. Huff brought this change]
+
+  docs: Added documentation for CURLOPT_BEARER
+
+- [Kyle L. Huff brought this change]
+
+  curl.1: Add usage of '--bearer' option
+
+- tests: Added tests for IMAP CREATE, DELETE and RENAME commands
+
+Daniel Stenberg (30 Aug 2013)
+- ftpserver: Bareword "to_mailbox" not allowed
   
-  Something (a recent security update maybe?) changed in Lion, and now it
-  has changed SSLCopyPeerTrust such that it may return noErr but also give
-  us a null trust, which caught us off guard and caused an eventual crash.
+  Added missing $
 
-Daniel Stenberg (22 Jun 2013)
-- SIGPIPE: ignored while inside the library
+Steve Holme (30 Aug 2013)
+- ftpserver.pl: Added support for IMAP CREATE, DELETE and RENAME commands
+
+Daniel Stenberg (29 Aug 2013)
+- FTP: fix getsock during DO_MORE state
   
-  ... and restore the ordinary handling again when it returns. This is
-  done for curl_easy_perform() and curl_easy_cleanup() only for now - and
-  only when built to use OpenSSL as backend as this is the known culprit
-  for the spurious SIGPIPEs people have received.
+  ... when doing upload it would return the wrong values at times. This
+  commit attempts to cleanup the mess.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1180
-  Reported by: LluÃ­s Batlle i Rossell
-
-- KNOWN_BUGS: #83 unable to load non-default openssl engines
+  Bug: http://curl.haxx.se/mail/lib-2013-08/0109.html
+  Reported-by: Mike Mio
 
-- test1396: invoke the correct test tool!
+- curl_multi_remove_handle: allow multiple removes
   
-  This erroneously run unit test 1310 instead of 1396!
+  When removing an already removed handle, avoid that to ruin the
+  internals and just return OK instead.
 
-Kamil Dudka (22 Jun 2013)
-- test1230: avoid using hard-wired port number
+Steve Holme (29 Aug 2013)
+- ftpserver.pl: Updated IMAP EXAMINE handler to use dynamic test data
+
+Daniel Stenberg (29 Aug 2013)
+- unit1304: include memdebug and free everything correctly
+
+- Curl_parsenetrc: document that the arguments must be allocated
+
+- easy: rename struct monitor to socketmonitor
   
-  ... to prevent failure when a non-default -b option is given
+  'struct monitor', introduced in 6cf8413e, already exists in an IRIX
+  header file (sys/mon.h) which gets included via various standard headers
+  by lib/easy.c
+  
+  cc-1101 cc: ERROR File = ../../curl/lib/easy.c, Line = 458
+  "monitor" has already been declared in the current scope.
+  
+  Reported-by: Tor Arntsen
 
-- curl-config.in: replace tabs by spaces
+Steve Holme (29 Aug 2013)
+- ftpserver.pl: Added SELECT check to IMAP FETCH and STORE handlers
 
-Nick Zitzmann (22 Jun 2013)
-- darwinssl: reform OS-specific #defines
+- ftpserver.pl: Corrected accidental move of logmsg() call
   
-  This doesn't need to be in the release notes. I cleaned up a lot of the #if
-  lines in the code to use MAC_OS_X_VERSION_MIN_REQUIRED and
-  MAC_OS_X_VERSION_MAX_ALLOWED instead of checking for whether things like
-  __MAC_10_6 or whatever were defined, because for some SDKs Apple has released
-  they were defined out of place.
+  Corrected the call to logmsg() in the IMAP SEARCH handler from commit
+  4ae7b7ea691497 as it should have been outputting the what argument and
+  not the test number.
 
-Daniel Stenberg (22 Jun 2013)
-- [Alessandro Ghedini brought this change]
+Daniel Stenberg (28 Aug 2013)
+- ftpserver: add missing '}' from 4ae7b7ea69149
 
-  docs: fix typo in curl_easy_getinfo manpage
+Steve Holme (28 Aug 2013)
+- ftpserver.pl: Added SELECT check to IMAP SEARCH command
 
-- dotdot: introducing dot file path cleanup
-  
-  RFC3986 details how a path part passed in as part of a URI should be
-  "cleaned" from dot sequences before getting used. The described
-  algorithm is now implemented in lib/dotdot.c with the accompanied test
-  case in test 1395.
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1200
-  Reported-by: Alex Vinnik
+- ftpserver.pl: Fixed IMAP SEARCH command
 
-- bump: start working towards what most likely will become 7.32.0
+Daniel Stenberg (28 Aug 2013)
+- bump: next release is 7.33.0 due to added features
 
-- THANKS: added 24 new contributors from the 7.31.0 release
+- symbols-in-versions: add CURLOPT_XOAUTH2_BEARER
 
-Version 7.31.0 (22 Jun 2013)
+Steve Holme (28 Aug 2013)
+- tests: Added test for IMAP SEARCH command
 
-Daniel Stenberg (22 Jun 2013)
-- RELEASE-NOTES: synced with 0de7249bb39a2 - 7.31.0
+Daniel Stenberg (28 Aug 2013)
+- valgrind.supp: fix for regular curl_easy_perform too
+  
+  When we introduced curl_easy_perform_ev, this got a slightly modified
+  call trace. Without this, test 165 causes a false positive valgrind
+  error.
 
-- unit1396: unit tests to verify curl_easy_(un)escape
+- valgrind.supp: add the event-based call stack-trace too
+  
+  Without this, test 165 triggers a valgrind error when ran with
+  curl_easy_perform_ev
 
-- Curl_urldecode: no peeking beyond end of input buffer
+- multi_socket: improved 100-continue timeout handling
   
-  Security problem: CVE-2013-2174
+  When waiting for a 100-continue response from the server, the
+  Curl_readwrite() will refuse to run if called until the timeout has been
+  reached.
   
-  If a program would give a string like "%FF" to curl_easy_unescape() but
-  ask for it to decode only the first byte, it would still parse and
-  decode the full hex sequence. The function then not only read beyond the
-  allowed buffer but it would also deduct the *unsigned* counter variable
-  for how many more bytes there's left to read in the buffer by two,
-  making the counter wrap. Continuing this, the function would go on
-  reading beyond the buffer and soon writing beyond the allocated target
-  buffer...
+  We timeout code in multi_socket() allows code to run slightly before the
+  actual timeout time, so for test 154 it could lead to the function being
+  executed but refused in Curl_readwrite() and then the application would
+  just sit idling forever.
   
-  Bug: http://curl.haxx.se/docs/adv_20130622.html
-  Reported-by: Timo Sirainen
+  This was detected with runtests.pl -e on test 154.
 
-Guenter Knauf (20 Jun 2013)
-- Use opened body.out file and write content to it.
+Steve Holme (27 Aug 2013)
+- ftpserver.pl: Added support for IMAP SEARCH command
 
-Daniel Stenberg (20 Jun 2013)
-- multi_socket: react on socket close immediately
+- tool_operate.c: Fixed compilation warning
   
-  As a remedy to the problem when a socket gets closed and a new one is
-  opened with the same file descriptor number and as a result
-  multi.c:singlesocket() doesn't detect the difference, the new function
-  Curl_multi_closed() gets told when a socket is closed so that it can be
-  removed from the socket hash. When the old one has been removed, a new
-  socket should be detected fine by the singlesocket() on next invoke.
+  warning: implicit declaration of function 'checkpasswd'
+
+- curl: Moved check for password out of get parameter loop
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1248
-  Reported-by: Erik Johansson
+  Moved the calls to checkpasswd() out of the getparameter() function
+  which allows for any related arguments to be specified on the command
+  line before or after --user (and --proxy-user).
+  
+  For example: --bearer doesn't need to be specified before --user to
+  prevent curl from asking for an unnecessary password as is the case
+  with commit e7dcc454c67a2f.
 
-- RELEASE-NOTES: synced with e305f5ec715f
+- RELEASE-NOTES: synced with acf59be7f09a7
 
-- TODO: mention the DANE patch from March
+- [Kyle L. Huff brought this change]
 
-- CURLOPT_COOKIELIST: take cookie share lock
+  curl: added --bearer option to help
   
-  When performing COOKIELIST operations the cookie lock needs to be taken
-  for the cases where the cookies are shared among multiple handles!
+  Added the --bearer option to the help output
+
+- [Kyle L. Huff brought this change]
+
+  curl: added basic SASL XOAUTH2 support
   
-  Verified by Benjamin Gilbert's updated test 506
+  Added the ability to specify an XOAUTH2 bearer token [RFC6750] via the
+  --bearer option.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1215
-  Reported-by: Benjamin Gilbert
-
-- [Benjamin Gilbert brought this change]
+  Example usage:
+    curl --url "imaps://imap.gmail.com:993/INBOX/;UID=1" --ssl-reqd
+    --bearer ya29.AHES6Z...OMfsHYI --user username@example.com
 
-  test506: verify that CURLOPT_COOKIELIST takes share lock
+- tool_urlglob.c: Fixed compiler warnings
   
-  It doesn't right now: http://curl.haxx.se/bug/view.cgi?id=1215
+  warning: 'variable' may be used uninitialized in this function
 
-- TODO: HTTP2/SPDY support
+Daniel Stenberg (26 Aug 2013)
+- security.h: rename to curl_sec.h to avoid name collision
+  
+  I brought back security.h in commit bb5529331334e. As we actually
+  already found out back in 2005 in commit 62970da675249, the file name
+  security.h causes problems so I renamed it curl_sec.h instead.
 
-- curl_easy_setopt.3: clarify CURLOPT_PROGRESSFUNCTION frequency
+- runtests.pl: allow -vc point to a separate curl binary to verify with
   
-  Make it clearer that the CURLOPT_PROGRESSFUNCTION callback will be
-  called more frequently than once per second when things are happening.
+  The specified curl binary will then be used to verify the running
+  server(s) instead of the development version. This is very useful in
+  some cases when the development version fails to verify correctly as
+  then the test case may not run at all.
+  
+  The actual test will still be run with the "normal" curl executable
+  (unless the test case specifies something differently).
 
-- RELEASE-NOTES: synced with 9c3e098259b82
+Steve Holme (26 Aug 2013)
+- [Kyle L. Huff brought this change]
+
+  smtp: added basic SASL XOAUTH2 support
   
-  Mention 7 recent bug fixes and their associated contributors
+  Added the ability to use an XOAUTH2 bearer token [RFC6750] with SMTP for
+  authentication using RFC6749 "OAuth 2.0 Authorization Framework".
+  
+  The bearer token is expected to be valid for the user specified in
+  conn->user. If CURLOPT_XOAUTH2_BEARER is defined and the connection has
+  an advertised auth mechanism of "XOAUTH2", the user and access token are
+  formatted as a base64 encoded string and sent to the server as
+  "AUTH XOAUTH2 <bearer token>".
 
-- curl_multi_wait.3: clarify the numfds counter
+- [Kyle L. Huff brought this change]
 
-- curl_easy_perform: avoid busy-looping
+  imap: added basic SASL XOAUTH2 support
   
-  When curl_multi_wait() finds no file descriptor to wait for, it returns
-  instantly and this must be handled gracefully within curl_easy_perform()
-  or cause a busy-loop. Starting now, repeated fast returns without any
-  file descriptors is detected and a gradually increasing sleep will be
-  used (up to a max of 1000 milliseconds) before continuing the loop.
+  Added the ability to use an XOAUTH2 bearer token [RFC6750] with IMAP for
+  authentication using RFC6749 "OAuth 2.0 Authorization Framework".
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1238
-  Reported-by: Miguel Angel
+  The bearer token is expected to be valid for the user specified in
+  conn->user. If CURLOPT_XOAUTH2_BEARER is defined and the connection has
+  an advertised auth mechanism of "XOAUTH2", the user and access token are
+  formatted as a base64 encoded string and sent to the server as
+  "A001 AUTHENTICATE XOAUTH2 <bearer token>".
 
-- [YAMADA Yasuharu brought this change]
+- security.h: Fixed compilation warning
+  
+  ISO C forbids forward references to 'enum' types
 
-  cookies: follow-up fix for path checking
+Daniel Stenberg (26 Aug 2013)
+- KNOWN_BUGS: refer to bug numbers with the existing number series
   
-  The initial fix to only compare full path names were done in commit
-  04f52e9b4db0 but found out to be incomplete. This takes should make the
-  change more complete and there's now two additional tests to verify
-  (test 31 and 62).
+  The old numbers would still redirect but who knows for how long...
 
-- [Sergei Nikulov brought this change]
+Steve Holme (25 Aug 2013)
+- [Kyle L. Huff brought this change]
 
-  lib1900: use tutil_tvnow instead of gettimeofday
+  options: added basic SASL XOAUTH2 support
   
-  Makes it build on windows
+  Added the ability to specify an XOAUTH2 bearer token [RFC6750] via the
+  option CURLOPT_XOAUTH2_BEARER for authentication using RFC6749 "OAuth
+  2.0 Authorization Framework".
 
-- [Eric Hu brought this change]
+- [Kyle L. Huff brought this change]
 
-  axtls: now done non-blocking
+  sasl: added basic SASL XOAUTH2 support
+  
+  Added the ability to generated a base64 encoded XOAUTH2 token
+  containing: "user=<username>^Aauth=Bearer <bearer token>^A^A"
+  as per RFC6749 "OAuth 2.0 Authorization Framework".
 
-- [Eric Hu brought this change]
+Daniel Stenberg (25 Aug 2013)
+- FTP: remove krb4 support
+  
+  We've announced this pending removal for a long time and we've
+  repeatedly asked if anyone would care or if anyone objects. Nobody has
+  objected. It has probably not even been working for a good while since
+  nobody has tested/used this code recently.
+  
+  The stuff in krb4.h that was generic enough to be used by other sources
+  is now present in security.h
 
-  test2033: requires NTLM support
+- easy: define away easy_events() for non-debug builds
 
-- KNOWN_BUGS: #82 failed build with Borland compiler
+- FAQ: editorial updates
+  
+  Several language fixes. Several reformats that should make the HTML
+  generation of this document look better.
+  
+  Reported-by: Dave Thompson
 
-- Curl_output_digest: support auth-int for empty entity body
+- RELEASE-NOTES: synced with 22adb46a32bee
+
+- multi: move on from STATE_DONE faster
   
-  By always returning the md5 for an empty body when auth-int is asked
-  for, libcurl now at least sometimes does the right thing.
+  Make sure we always return CURLM_CALL_MULTI_PERFORM when we reach
+  CURLM_STATE_DONE since the state is transient and it can very well
+  continue executing as there is nothing to wait for.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1235
-  Patched-by: Nach M. S.
+  Bug: http://curl.haxx.se/mail/lib-2013-08/0211.html
+  Reported-by: Yi Huang
 
-- multi_socket: reduce timeout inaccuracy margin
+- curl.h: name space pollution by "enum type"
   
-  Allow less room for "triggered too early" mistakes by applications /
-  timers on non-windows platforms. Starting now, we assume that a timeout
-  call is never made earlier than 3 milliseconds before the actual
-  timeout. This greatly improves timeout accuracy on Linux.
+  Renamed to "enum curl_khtype" now. Will break compilation for programs
+  that rely on the enum name.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1228
-  Reported-by: Hang Su
+  Bug: https://github.com/bagder/curl/pull/76
+  Reported-by: Shawn Landden
 
-- cert_stuff: avoid double free in the PKCS12 code
+- TFTP: make the CURLOPT_LOW_SPEED* options work
   
-  In the pkcs12 code, we get a list of x509 records returned from
-  PKCS12_parse but when iterating over the list and passing each to
-  SSL_CTX_add_extra_chain_cert() we didn't also properly remove them from
-  the "stack", which made them get freed twice (both in sk_X509_pop_free()
-  and then later in SSL_CTX_free).
+  ... this also makes sure that the progess callback gets called more
+  often during TFTP transfers.
   
-  This isn't really documented anywhere...
+  Added test 1238 to verify.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1236
-  Reported-by: Nikaiw
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1269
+  Reported-by: Jo3
 
-- cert_stuff: remove code duplication in the pkcs12 logic
+- tftpd: support "writedelay" within <servercmd>
 
-- [Aleksey Tulinov brought this change]
+- tftpd: convert 6 global variables into local ones
 
-  axtls: honor disabled VERIFYHOST
+- [Gisle Vanem brought this change]
+
+  curl_easy_perform_ev: make it CURL_EXTERN
   
-  When VERIFYHOST == 0, libcurl should let invalid certificates to pass.
+  I build curl.exe (using MingW) with '-DCURLDEBUG' and by importing from
+  libcurl.dll.  Which means the new curl_easy_perform_ev() must be
+  exported from libcurl.dll.
 
-- [Peter Gal brought this change]
+- CURLM_ADDED_ALREADY: new error code
+  
+  Doing curl_multi_add_handle() on an easy handle that is already added to
+  a multi handle now returns this error code. It previously returned
+  CURLM_BAD_EASY_HANDLE for this condition.
 
-  curl_easy_setopt.3: HTTP header with no content
+- multi_init: moved init code here from add_handle
   
-  Update the documentation on how to specify a HTTP header with no
-  content.
+  The closure_handle is "owned" by the multi handle and it is
+  unconditional so the setting up of it should be in the Curl_multi_handle
+  function rather than curl_multi_add_handle.
 
-- RELEASE-NOTES: synced with 87cf677eca55
+- multi: remove dns cache creation code from *add_handle
   
-  Added 11 bugs and 7 contributors
+  As it is done unconditionally in multi_init() this code will never run!
 
-- lib1500: remove bad check
+- curl_easy_perform_ev: debug/test function
   
-  After curl_multi_wait() returns, this test checked that we got exactly
-  one file descriptor told to read from, but we cannot be sure that is
-  true. curl_multi_wait() will sometimes return earlier without any file
-  descriptor to handle, just just because it is a suitable time to call
-  *perform().
+  This function is meant to work *exactly* as curl_easy_perform() but will
+  use the event-based libcurl API internally instead of
+  curl_multi_perform(). To avoid relying on an actual event-based library
+  and to not use non-portable functions (like epoll or similar), there's a
+  rather inefficient emulation layer implemented on top of Curl_poll()
+  instead.
   
-  This problem showed up with commit 29bf0598.
+  There's currently some convenience logging done in curl_easy_perform_ev
+  which helps when tracking down problems. They may be suitable to remove
+  or change once things seem to be fine enough.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-06/0029.html
-  Reported-by: Fabian Keil
-
-- tests/Makefile: typo in the perlcheck target
+  curl has a new --test-event option when built with debug enabled that
+  then uses curl_easy_perform_ev() instead of curl_easy_perform(). If
+  built without debug, using --test-event will only output a warning
+  message.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1239
-  Reported-by: Christian Weisgerber
+  NOTE: curl_easy_perform_ev() is not part if the public API on purpose.
+  It is only present in debug builds of libcurl and MUST NOT be considered
+  stable even then. Use it for libcurl-testing purposes only.
+  
+  runtests.pl now features an -e command line option that makes it use
+  --test-event for all curl command line tests. The man page is updated.
 
-- test1230: verify CONNECT to a numerical ipv6-address
+- [Gisle Vanem brought this change]
 
-- sws: support extracting test number from CONNECT ipv6-address!
-  
-  If an ipv6-address is provided to CONNECT, the last hexadecimal group in
-  the address will be used as the test number! For example the address
-  "[1234::ff]" would be treated as test case 255.
+  transfer: the recent sessionhandle change broke CURL_DOES_CONVERSIONS
 
-- curl_multi_wait: only use internal timer if not -1
+- test1237: verify 1000+ letter user name + passwords
+
+- [Jonathan Nieder brought this change]
+
+  url: handle arbitrary-length username and password before '@'
   
-  commit 29bf0598aad5 introduced a problem when the "internal" timeout is
-  prefered to the given if shorter, as it didn't consider the case where
-  -1 was returned. Now the internal timeout is only considered if not -1.
+  libcurl quietly truncates usernames, passwords, and options from
+  before an '@' sign in a URL to 255 (= MAX_CURL_PASSWORD_LENGTH - 1)
+  characters to fit in fixed-size buffers on the stack.  Allocate a
+  buffer large enough to fit the parsed fields on the fly instead to
+  support longer passwords.
   
-  Reported-by: Tor Arntsen
-  Bug: http://curl.haxx.se/mail/lib-2013-06/0015.html
+  After this change, there are no more uses of MAX_CURL_OPTIONS_LENGTH
+  left, so stop defining that constant while at it.  The hardcoded max
+  username and password length constants, on the other hand, are still
+  used in HTTP proxy credential handling (which this patch doesn't
+  touch).
+  
+  Reported-by: Colby Ranger
 
-Dan Fandrich (3 Jun 2013)
-- libcurl-tutorial.3: added a section on IPv6
+- [Jonathan Nieder brought this change]
+
+  url: handle exceptional cases first in parse_url_login()
   
-  Also added a (correctly-escaped) backslash to the autoexec.bat
-  example file and a new Windows character device name with
-  a colon as examples of other characters that are special
-  and potentially dangerous (this reverts and reworks commit
-  7d8d2a54).
+  Instead of nesting "if(success)" blocks and leaving the reader in
+  suspense about what happens in the !success case, deal with failure
+  cases early, usually with a simple goto to clean up and return from
+  the function.
+  
+  No functional change intended.  The main effect is to decrease the
+  indentation of this function slightly.
 
-Daniel Stenberg (3 Jun 2013)
-- curl_multi_wait: reduce timeout if the multi handle wants to
+- [Jonathan Nieder brought this change]
+
+  Curl_setopt: handle arbitrary-length username and password
   
-  If the multi handle's pending timeout is less than what is passed into
-  this function, it will now opt to use the shorter time anyway since it
-  is a very good hint that the handle wants to process something in a
-  shorter time than what otherwise would happen.
+  libcurl truncates usernames, passwords, and options set with
+  curl_easy_setopt to 255 (= MAX_CURL_PASSWORD_LENGTH - 1) characters.
+  This doesn't affect the return value from curl_easy_setopt(), so from
+  the caller's point of view, there is no sign anything strange has
+  happened, except that authentication fails.
   
-  curl_multi_wait.3 was updated accordingly to clarify
+  For example:
   
-  This is the reason for bug #1224
+    # Prepare a long (300-char) password.
+    s=0123456789; s=$s$s$s$s$s$s$s$s$s$s; s=$s$s$s;
+    # Start a server.
+    nc -l -p 8888 | tee out & pid=$!
+    # Tell curl to pass the password to the server.
+    curl --user me:$s http://localhost:8888 & sleep 1; kill $pid
+    # Extract the password.
+    userpass=$(
+  	awk '/Authorization: Basic/ {print $3}' <out |
+  	tr -d '\r' |
+  	base64 -d
+    )
+    password=${userpass#me:}
+    echo ${#password}
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1224
-  Reported-by: Andrii Moiseiev
+  Expected result: 300
+  Actual result: 255
+  
+  The fix is simple: allocate appropriately sized buffers on the heap
+  instead of trying to squeeze the provided values into fixed-size
+  on-stack buffers.
+  
+  Bug: http://bugs.debian.org/719856
+  Reported-by: Colby Ranger
 
-- multi_runsingle: switch an if() condition for readability
+- [Jonathan Nieder brought this change]
+
+  netrc: handle longer username and password
+  
+  libcurl truncates usernames and passwords it reads from .netrc to
+  LOGINSIZE and PASSWORDSIZE (64) characters without any indication to
+  the user, to ensure the values returned from Curl_parsenetrc fit in a
+  caller-provided buffer.
+  
+  Fix the interface by passing back dynamically allocated buffers
+  allocated to fit the user's input.  The parser still relies on a
+  256-character buffer to read each line, though.
+  
+  So now you can include an ~246-character password in your .netrc,
+  instead of the previous limit of 63 characters.
   
-  ... because there's an identical check right next to it so using the
-  operators in the check in the same order increases readability.
+  Reported-by: Colby Ranger
 
-Marc Hoersken (2 Jun 2013)
-- curl_schannel.c: Removed variable unused since 35874298e4
+- [Jonathan Nieder brought this change]
 
-- curl_setup.h: Fixed redefinition warning using mingw-w64
+  url: allocate username, password, and options on the heap
+  
+  This makes it possible to increase the size of the buffers when needed
+  in later patches.  No functional change yet.
 
-Daniel Stenberg (30 May 2013)
-- multi_runsingle: add braces to clarify the code
+- [Jonathan Nieder brought this change]
 
-- libcurl-tutorial.3: remove incorrect backslash
-  
-  A single backslash in the content is not legal nroff syntax.
+  url: use goto in create_conn() for exception handling
   
-  Reported and fixed by: Eric S. Raymond
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1234
-
-- curl_formadd.3: fixed wrong "end-marker" syntax
+  Instead of remembering before each "return" statement which temporary
+  allocations, if any, need to be freed, take care to set pointers to
+  NULL when no longer needed and use a goto to a common block to exit
+  the function and free all temporaries.
   
-  Reported and fixed by: Eric S. Raymond
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1233
+  No functional change intended.  Currently the only temporary buffer in
+  this function is "proxy" which is already correctly freed when
+  appropriate, but there will be more soon.
 
-- curl.1: clarify that --silent still outputs data
+- [Jonathan Nieder brought this change]
 
-- Digest auth: escape user names with \ or " in them
-  
-  When sending the HTTP Authorization: header for digest, the user name
-  needs to be escaped if it contains a double-quote or backslash.
+  sasl: allow arbitrarily long username and password
   
-  Test 1229 was added to verify
+  Use appropriately sized buffers on the heap instead of fixed-size
+  buffers on the stack, to allow for longer usernames and passwords.
   
-  Reported and fixed by: Nach M. S
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1230
+  Callers never pass anything longer than MAX_CURL_USER_LENGTH (resp.
+  MAX_CURL_PASSWORD_LENGTH), so no functional change inteded yet.
 
-- [Mike Giancola brought this change]
+Steve Holme (19 Aug 2013)
+- [Alex McLellan brought this change]
 
-  ossl_recv: SSL_read() returning 0 is an error too
+  imap: Fixed response check for SEARCH command
   
-  SSL_read can return 0 for "not successful", according to the open SSL
-  documentation: http://www.openssl.org/docs/ssl/SSL_read.html
-
-- [Mike Giancola brought this change]
+  Adding this line allows libcurl to return the server response when
+  performing a search command via a custom request.
 
-  ossl_send: SSL_write() returning 0 is an error too
+Daniel Stenberg (16 Aug 2013)
+- glob: error out on range overflow
   
-  We found that in specific cases if the connection is abruptly closed,
-  the underlying socket is listed in a close_wait state. We continue to
-  call the curl_multi_perform, curl_mutli_fdset etc. None of these APIs
-  report the socket closed / connection finished.  Since we have cases
-  where the multi connection is only used once, this can pose a problem
-  for us. I've read that if another connection was to come in, curl would
-  see the socket as bad and attempt to close it at that time -
-  unfortunately, this does not work for us.
+  The new multiply() function detects range value overflows. 32bit
+  machines will overflow on a 32bit boundary while 64bit hosts support
+  ranges up to the full 64 bit range.
   
-  I found that in specific situations, if SSL_write returns 0, curl did
-  not recognize the socket as closed (or errored out) and did not report
-  it to the application. I believe we need to change the code slightly, to
-  check if ssl_write returns 0. If so, treat it as an error - the same as
-  a negative return code.
+  Added test 1236 to verify.
   
-  For OpenSSL - the ssl_write documentation is here:
-  http://www.openssl.org/docs/ssl/SSL_write.html
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1267
+  Reported-by: Will Dietz
 
-- KNOWN_BUGS: curl -OJC- fails to resume
+- urlglob: better detect unclosed braces, empty lists and overflows
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1169
-
-- Curl_cookie_add: handle IPv6 hosts
+  A rather big overhaul and cleanup.
   
-  1 - don't skip host names with a colon in them in an attempt to bail out
-  on HTTP headers in the cookie file parser. It was only a shortcut anyway
-  and trying to parse a file with HTTP headers will still be handled, only
-  slightly slower.
+  1 - curl wouldn't properly detect and reject globbing that ended with an
+  open brace if there were brackets or braces before it. Like "{}{" or
+  "[0-1]{"
   
-  2 - don't skip domain names based on number of dots. The original
-  netscape cookie spec had this oddity mentioned and while our code
-  decreased the check to only check for two, the existing cookie spec has
-  no such dot counting required.
+  2 - curl wouldn't properly reject empty lists so that "{}{}" would
+  result in curl getting (nil) strings in the output.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1221
-  Reported-by: Stefan Neis
-
-- curl_easy_setopt.3: expand the PROGRESSFUNCTION section
+  3 - By using strtoul() instead of sscanf() the code will now detected
+  over and underflows. It now also better parses the step argument to only
+  accept positive numbers and only step counters that is smaller than the
+  delta between the maximum and minimum numbers.
   
-  Explain the callback and its arguments better and with more descriptive
-  text.
+  4 - By switching to unsigned longs instead of signed ints for the
+  counters, the max values for []-ranges are now very large (on 64bit
+  machines).
+  
+  5 - Bumped the maximum number of globs in a single URL to 100 (from 10)
+  
+  6 - Simplified the code somewhat and now it stores fixed strings as
+  single- entry lists. That's also one of the reasons why I did (5) as now
+  all strings between "globs" will take a slot in the array.
+  
+  Added test 1234 and 1235 to verify. Updated test 87.
+  
+  This commit fixes three separate bug reports.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1264
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1265
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1266
+  Reported-by: Will Dietz
 
-- tests: add test1394 file to the tarball
+- [John Malmberg brought this change]
 
-- tarball: include the xmlstream example
+  VMS: Add RELEASE-NOTES to vms document
+  
+  Add the curl release notes to the release note document generated for
+  VMS packages.
+  
+  Add the different filenames generated by a daily build to the
+  cleanup procedures.
 
-- [David Strauss brought this change]
+- [Tor Arntsen brought this change]
 
-  xmlstream: XML stream parsing example source code
+  tests 2032, 2033: Don't hardcode port in expected output
+
+- ftp: convert state names to a global array
   
-  Add an XML stream parsing example using Expat. Add missing ignore for
-  the binary from an unrelated example.
+  ... just to make them easier to print in debug ouputs while debugging.
+  They are still within #ifdef [debugbuild].
 
-- [YAMADA Yasuharu brought this change]
+- --help: fix the --sasl-ir in the help output
 
-  cookies: only consider full path matches
-  
-  I found a bug which cURL sends cookies to the path not to aim at.
-  For example:
-  - cURL sends a request to http://example.fake/hoge/
-  - server returns cookie which with path=/hoge;
-    the point is there is NOT the '/' end of path string.
-  - cURL sends a request to http://example.fake/hogege/ with the cookie.
+- ftp_domore_getsock: when passive mode, the second conn is already there
   
-  The reason for this old "feature" is because that behavior is what is
-  described in the original netscape cookie spec:
-  http://curl.haxx.se/rfc/cookie_spec.html
+  This makes the socket callback get called with the proper bitmask as
+  otherwise the application could be left hanging waiting for reading on
+  an upload connection!
   
-  The current cookie spec (RFC6265) clarifies the situation:
-  http://tools.ietf.org/html/rfc6265#section-5.2.4
+  Bug: http://curl.haxx.se/mail/lib-2013-08/0043.html
+  Reported-by: Bill Doyle
 
-- [Eric Hu brought this change]
+- curl: make --no-[option] work properly for several options
+  
+  --create-dirs, --crlf, --socks5-gssapi-nec and --sasl-ir
 
-  axtls: prevent memleaks on SSL handshake failures
+Kamil Dudka (12 Aug 2013)
+- nss: make sure that NSS is initialized
+  
+  ... prior to calling PK11_GenerateRandom()
 
-- Revert "WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage"
+Daniel Stenberg (12 Aug 2013)
+- multi: s/easy/data
   
-  This reverts commit 8ec2cb5544b86306b702484ea785b6b9596562ab.
+  With everything being struct SessionHandle pointers now, this rename
+  makes multi.c use the library-wide practise of calling that pointer
+  'data' instead of the previously used 'easy'.
+
+- cleanup: removed one function, made one static
   
-  We don't have any code anywhere in libcurl (or the curl tool) that use
-  wcsdup so there's no such memory use to track. It seems to cause mild
-  problems with the Borland compiler though that we may avoid by reverting
-  this change again.
+  Moved Curl_easy_addmulti() from easy.c to multi.c, renamed it to
+  easy_addmulti and made it static.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-05/0070.html
-
-- RELEASE-NOTES: synced with ae26ee3489588f0
+  Removed Curl_easy_initHandleData() and uses of it since it was emptied
+  in commit cdda92ab67b47d74a.
 
-Guenter Knauf (11 May 2013)
-- Updated zlib version in build files.
+- SessionHandle: the protocol specific pointer is now a void *
+  
+  All protocol handler structs are now opaque (void *) in the
+  SessionHandle struct and moved in the request-specific sub-struct
+  'SingleRequest'. The intension is to keep the protocol specific
+  knowledge in their own dedicated source files [protocol].c etc.
+  
+  There's some "leakage" where this policy is violated, to be addressed at
+  a later point in time.
 
-Daniel Stenberg (9 May 2013)
-- [Renaud Guillard brought this change]
+- urldata: clean up the use of the protocol specific structs
+  
+  1 - always allocate the struct in protocol->setup_connection. Some
+  protocol handlers had to get this function added.
+  
+  2 - always free at the end of a request. This is also an attempt to keep
+  less memory in the handle after it is completed.
 
-  OS X framework: fix invalid symbolic link
+- version number: bump to 7.32.1 for now
+  
+  Start working on the next version and up some counters.
 
-Kamil Dudka (9 May 2013)
-- [Daniel Stenberg brought this change]
+Version 7.32.0 (11 Aug 2013)
 
-  nss: give PR_INTERVAL_NO_WAIT instead of -1 to PR_Recv/PR_Send
-  
-  Reported by: David Strauss
-  Bug: http://curl.haxx.se/mail/lib-2013-05/0088.html
+Daniel Stenberg (11 Aug 2013)
+- THANKS: added contributors from the 7.32.0 release notes
 
-Daniel Stenberg (8 May 2013)
-- libtest: gitignore more binary files
+- [Fabian Keil brought this change]
 
-- servercert: allow empty subject
-  
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1220
-  Patch by: John Gardiner Myers
+  test1228: add 'HTTP proxy' to the keywords
 
-- [Steve Holme brought this change]
+- [Fabian Keil brought this change]
 
-  tests: Added new SMTP tests to verify commit 99b40451836d
+  tests: add keywords for a couple of FILE tests
 
-- runtests.pl: support nonewline="yes" in client/stdin sections
+- [Fabian Keil brought this change]
 
-- build: fixed unit1394 for debug and metlink builds
+  tests: add 'FAILURE' keywords to tests 1409 and 1410
 
-Kamil Dudka (6 May 2013)
-- unit1394.c: plug the curl tool unit test in
+- [Fabian Keil brought this change]
 
-- [Jared Jennings brought this change]
+  tests: add keywords for a couple of HTTP tests
 
-  unit1394.c: basis of a unit test for parse_cert_parameter()
+- [Fabian Keil brought this change]
 
-- src/Makefile.am: build static lib for unit tests if enabled
+  tests: add keywords for a couple of FTP tests
 
-- tool_getparam: ensure string termination in parse_cert_parameter()
+- [Fabian Keil brought this change]
 
-- tool_getparam: fix memleak in handling the -E option
+  test1511: consistently terminate headers with CRLF
 
-- tool_getparam: describe what parse_cert_parameter() does
+- DISABLED: shut of test 1512 for now
   
-  ... and de-duplicate the code initializing *passphrase
+  It shows intermittent failures and I haven't been able to track them
+  down yet. Disable this test for now.
 
-- curl.1: document escape sequences recognized by -E
+- curl_multi_add_handle.3: ... that timer callback is for event-based
 
-- [Jared Jennings brought this change]
+- comments: remove old and wrong multi/easy interface statements
 
-  curl -E: allow to escape ':' in cert nickname
+- curl_multi_add_handle.3: mention the CURLMOPT_TIMERFUNCTION use
 
-Marc Hoersken (5 May 2013)
-- curl_schannel.c: Fixed invalid memory access during SSL shutdown
+- [John E. Malmberg brought this change]
 
-Steve Holme (4 May 2013)
-- smtp: Fix trailing whitespace warning
+  KNOWN_BUGS: 22 and 57 have been fixed and committed
 
-- smtp: Fix compilation warning
+- RELEASE-NOTES: synced with d20def20462e7
+
+- global dns cache: fix memory leak
   
-  comparison between signed and unsigned integer expressions
+  The take down of the global dns cache didn't take CURLOPT_RESOLVE names
+  into account.
 
-- RELEASE-NOTES: synced with 92ef5f19c801
+- global dns cache: didn't work [regression]
+  
+  CURLOPT_DNS_USE_GLOBAL_CACHE broke in commit c43127414d89ccb (been
+  broken since the libcurl 7.29.0 release). While this option has been
+  documented as deprecated for almost a decade and nobody even reported
+  this bug, it should remain functional.
+  
+  Added test case 1512 to verify
 
-- smtp: Updated RFC-2821 references to RFC-5321
+Yang Tse (8 Aug 2013)
+- [John Malmberg brought this change]
 
-- smtp: Fixed sending of double CRLF caused by first in EOB
-  
-  If the mail sent during the transfer contains a terminating <CRLF> then
-  we should not send the first <CRLF> of the EOB as specified in RFC-5321.
+  packages/vms: update VMS build files
   
-  Additionally don't send the <CRLF> if there is "no mail data" as the
-  DATA command already includes it.
+  VMS modified files either missing from a previous commit and changes
+  to remove references to CVS repositories.
 
-- tests: Corrected MAIL SIZE for CRLF line endings
+Daniel Stenberg (8 Aug 2013)
+- FTP: renamed several local functions
   
-  ... which was missed in commit: f5c3d9538452
+  The previous naming scheme ftp_state_post_XXXX() wasn't really helpful
+  as it wasn't always immediately after 'xxxx' and it wasn't easy to
+  understand what it does based on such a name.
+  
+  This new one is instead ftp_state_yyyy() where yyyy describes what it
+  does or sends.
 
-- tests: Corrected infilesize for CRLF line endings
+- mk-ca-bundle.1: don't install on make install
   
-  ... which was missed in commit: f5c3d9538452
+  Since the mk-ca-bundle tool itself isn't installed with make install,
+  there's no point in installing its documentation.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-08/0057.html
+  Reported-by: Guenter Knauf
 
-- tests: Corrected test1406 to be RFC2821 compliant
+Yang Tse (7 Aug 2013)
+- packages/vms/Makefile.am: add latest file additions to EXTRA_DIST
 
-- tests: Corrected test1320 to be RFC2821 compliant
+- [John Malmberg brought this change]
 
-- tests: Corrected typo in test909
+  Building_vms_pcsi_kit
   
-  Introduced in commit: 514817669e9e
-
-- tests: Corrected test909 to be RFC2821 compliant
-
-- tests: Updated test references to 909 from 1411
+  These are the files needed to build VMS distribution packages known as
+  PCSI kits.
   
-  ...and removed references to libcurl and test1406.
+  Also minor update to the existing files, mainly to the documentation and
+  file clean up code.
 
-- tests: Renamed test1411 to test909 as this is a main SMTP test
+Daniel Stenberg (6 Aug 2013)
+- LIBCURL-STRUCTS: new document
+  
+  This is the first version of this new document, detailing the seven
+  perhaps most important internal structs in libcurl source code:
+  
+    1.1 SessionHandle
+    1.2 connectdata
+    1.3 Curl_multi
+    1.4 Curl_handler
+    1.5 conncache
+    1.6 Curl_share
+    1.7 CookieInfo
 
-Daniel Stenberg (1 May 2013)
-- [Lars Johannesen brought this change]
+- CONTRIBUTE: minor language polish
 
-  bindlocal: move brace out of #ifdef
+- FTP: when EPSV gets a 229 but fails to connect, retry with PASV
   
-  The code within #ifdef HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID wrongly had two
-  closing braces when it should only have one, so builds without that
-  define would fail.
+  This is a regression as this logic used to work. It isn't clear when it
+  broke, but I'm assuming in 7.28.0 when we went all-multi internally.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-05/0000.html
-
-Steve Holme (30 Apr 2013)
-- smtp: Tidy up to move the eob counter to the per-request structure
+  This likely never worked with the multi interface. As the failed
+  connection is detected once the multi state has reached DO_MORE, the
+  Curl_do_more() function was now expanded somewhat so that the
+  ftp_do_more() function can request to go "back" to the previous state
+  when it makes another attempt - using PASV.
   
-  Move the eob counter from the smtp_conn structure to the SMTP structure
-  as it is associated with a SMTP payload on a per-request basis.
+  Added test case 1233 to verify this fix. It has the little issue that it
+  assumes no service is listening/accepting connections on port 1...
+  
+  Reported-by: byte_bucket in the #curl IRC channel
 
-- TODO: Updated following the addition of CURLOPT_SASL_IR
+Nick Zitzmann (5 Aug 2013)
+- md5: remove use of CommonCrypto-to-OpenSSL macros for the benefit of Leopard
+  
+  For some reason, OS X 10.5's GCC suddenly stopped working correctly with
+  macros that change MD5_Init etc. in the code to CC_MD5_Init etc., so I
+  worked around this by removing use of the macros and inserting static
+  functions that just call CommonCrypto's implementations of the functions
+  instead.
 
-- smtp: Fixed unknown percentage complete in progress bar
+Guenter Knauf (5 Aug 2013)
+- Simplify check for trusted certificates.
   
-  The curl command line utility would display the the completed progress
-  bar with a percentage of zero as the progress routines didn't know the
-  size of the transfer.
+  This changes the previous check for untrusted certs to a check for
+  certs explicitely marked as trusted.
+  The change is backward-compatible (tested with certdata.txt v1.80).
 
-Daniel Stenberg (29 Apr 2013)
-- ftpserver: silence warnings
+Daniel Stenberg (5 Aug 2013)
+- configure: warn on bad env variable use, don't error
   
-  Fix regressions in commit b56e3d43e5d. Make @data local and filter off
-  non-numerical digits from $testno in STATUS_imap.
+  Use XC_CHECK_BUILD_FLAGS instead XC_CHECK_USER_FLAGS.
 
-Steve Holme (29 Apr 2013)
-- ftpserver.pl: Corrected the imap LOGIN response
+- Revert "configure: don't error out on variable confusions, just warn"
   
-  ...to be more realistic and consistent with the other imap responses.
+  This reverts commit 6b27703b5f525eccdc0a8409f51de8595c75132a.
 
-- tests: Added imap STATUS command test
+- formadd: wrong pointer for file name when CURLFORM_BUFFERPTR used
+  
+  The internal function that's used to detect known file extensions for
+  the default Content-Type got the the wrong pointer passed in when
+  CURLFORM_BUFFER + CURLFORM_BUFFERPTR were used. This had the effect that
+  strlen() would be used which could lead to an out-of-bounds read (and
+  thus segfault). In most cases it would only lead to it not finding or
+  using the correct default content-type.
+  
+  It also showed that test 554 and test 587 were testing for the
+  previous/wrong behavior and now they're updated as well.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1262
+  Reported-by: Konstantin Isakov
 
-- tests: Corrected the SMTP tests to be RFC2821 compliant
+Guenter Knauf (4 Aug 2013)
+- Skip more untrusted certificates.
   
-  The emails that are sent to the server during these tests were
-  incorrectly formatted as they contained one or more LF terminated lines
-  rather than being CRLF terminated as per Section 2.3.7 of RFC-2821.
+  Christian Heimes brought to our attention that the certdata.txt
+  format has recently changed [1], causing ca-bundle.crt created
+  with mk-ca-bundle.[pl|vbs] to include untrusted certs.
   
-  This wasn't a problem for the test suite as the <stdin> data matched the
-  <upload> data but anyone using these tests as reference would be sending
-  incorrect data to a server.
+  [1] http://lists.debian.org/debian-release/2012/11/msg00411.html
 
-- email: Tidy up of *_perform_authenticate()
+Daniel Stenberg (4 Aug 2013)
+- configure: don't error out on variable confusions, just warn
+
+- configure: rephrase the notice in _XC_CHECK_VAR_*
   
-  Removed the hard returns from imap and pop3 by using the same style for
-  sending the authentication string as smtp. Moved the "Other mechanisms
-  not supported" check in smtp to match that of imap and pop3 to provide
-  consistency between the three email protocols.
+  Instead of claiming it is an error, we call it a "note" to reduce the
+  severity level. But the following text now says the [variable] "*should*
+  only be used to specify"... instead of previously having said "may".
 
-- smtp: Updated limit check to be more readable like the check in pop3
+- multi: remove data->state.current_conn struct field
+  
+  Not needed
 
-- pop3: Added 255 octet limit check when sending initial response
+- multi: remove the one_easy struct field
   
-  Added 255 octet limit check as per Section 4. Paragraph 8 of RFC-5034.
+  Since the merge of SessionHandle with Curl_one_easy, this indirection
+  isn't used anymore.
 
-- DOCS: Corrected line length of recent Secure Transport changes
+- multi: rename all Curl_one_easy to SessionHandle
 
-Nick Zitzmann (27 Apr 2013)
-- darwinssl: add TLS crypto authentication
+- multi: remove the multi_pos struct field
   
-  Users using the Secure Transport (darwinssl) back-end can now use a
-  certificate and private key to authenticate with a site using TLS. Because
-  Apple's security system is based around the keychain and does not have any
-  non-public function to create a SecIdentityRef data structure from data
-  loaded outside of the Keychain, the certificate and private key have to be
-  loaded into the Keychain first (using the certtool command line tool or
-  the Security framework's C API) before we can find it and use it.
+  Since Curl_one_easy is really a SessionHandle now, this indirection
+  doesn't exist anymore.
 
-Steve Holme (27 Apr 2013)
-- Corrected version numbers after bump
+- multi: remove easy_handle struct field
+  
+  It isn't needed anymore
 
-Daniel Stenberg (27 Apr 2013)
-- bump version
+- multi: remove 'Curl_one_easy' struct, phase 1
   
-  Since we're adding new stuff, the next release will bump the minor
-  version and we're looking forward to 7.31.0
+  The motivation for having a separate struct that keep track of an easy
+  handle when using the multi handle was removed when we switched to
+  always using the multi interface internally. Now they were just two
+  separate struct that was always allocated for each easy handle.
+  
+  This first step just moves the Curl_one_easy struct members into the
+  SessionHandle struct and hides this somehow (== keeps the source code
+  changes to a minimum) by defining Curl_one_easy to SessionHandle
+  
+  The biggest changes in this commit are:
+  
+   1 - the linked list of easy handles had to be changed somewhat due
+       to the new struct layout. This made the main linked list pointer
+       get renamed to 'easyp' and there's also a new pointer to the last
+       node, called easylp. It is no longer circular but ends with ->next
+       pointing to NULL. New nodes are still added last.
+  
+   2 - easy->state is now called easy->mstate to avoid name collision
 
-Steve Holme (27 Apr 2013)
-- RELEASE-NOTES: synced with f4e6e201b146
+Steve Holme (2 Aug 2013)
+- Revert "DOCS: Added IMAP URL example for listing new messages"
+  
+  This reverts commit 82ab5f1b0c7c3f as this was the wrong place to
+  document the complexity of IMAP URLs and Custom Requests.
 
-- DOCS: Updated following the addition of CURLOPT_SASL_IR
+- DOCS: Added IMAP URL example for listing new messages
   
-  Documented the the option in curl_easy_setopt() and added it to
-  symbols-in-versions.
+  In addition to listing the folder contents, in the URL examples, added
+  an example to list the new messages waiting in the user's inbox.
 
-- tests: Corrected command line arguments in test907 and test908
+Yang Tse (1 Aug 2013)
+- packages/vms/Makefile.am: add latest file additions to EXTRA_DIST
 
-- tests: Added SMTP AUTH with initial response tests
+- [John Malmberg brought this change]
 
-- tests: Updated SMTP tests to decouple client initial response
+  Add in the files needed to build libcurl shared images on VMS.
   
-  Updated test903 and test904 following the addition of CURLOPT_SASL_IR
-  as the default behaviour of SMTP AUTH responses is now to not include
-  the initial response. New tests with --sasl-ir support to follow.
-
-- imap: Added support for overriding the SASL initial response
+  Update the packages/vms/readme file to be current.
   
-  In addition to checking for the SASL-IR capability the user can override
-  the sending of the client's initial response in the AUTHENTICATION
-  command with the use of CURLOPT_SASL_IR should the server erroneously
-  not report SASL-IR when it does support it.
-
-- smtp: Added support for disabling the SASL initial response
+  Also some files for the GNV based build were either missing or needed an
+  update.
   
-  Updated the default behaviour of sending the client's initial response in the AUTH
-  command to not send it and added support for CURLOPT_SASL_IR to allow the user to
-  specify including the response.
+  curl_crtl_init.c is a special file that is run before main() to
+  set up the proper C runtime behavior.
   
-  Related Bug: http://curl.haxx.se/mail/lib-2012-03/0114.html
-  Reported-by: Gokhan Sengun
+  generate_vax_transfer.com generates the VAX transfer vector modules from
+  the gnv_libcurl_symbols.opt file.
+  
+  gnv_conftest.c_first is a helper file needed for configure scripts to
+  come up with the expected answers on VMS.
+  
+  gnv_libcurl_symbols.opt is the public symbols for the libcurl shared
+  image.
+  
+  gnv_link_curl.com builds the shared libcurl image and rebuilds other
+  programs to use it.
+  
+  macro32_exactcase.patch is a hack to make a local copy of the VMS Macro32
+  assembler case sensitive, which is needed to build the VAX transfer modules.
+  
+  report_openssl_version.c is a tool for help verify that the libcurl
+  shared image is being built for a minium version of openssl.
 
-- pop3: Added support for enabling the SASL initial response
+- curl: second follow-up for commit 5af2bfb9
   
-  Allowed the user to specify whether to send the client's intial response
-  in the AUTH command via CURLOPT_SASL_IR.
+  Display progress-bar unconditionally on first call
 
-- sasl-ir: Added --sasl-ir option to curl command line tool
+- curl: follow-up for commit 5af2bfb9
+  
+  Use tvnow() and tvdiff() to avoid introducing new linkage issues
 
-- sasl-ir: Added CURLOPT_SASL_IR to enable/disable the SASL initial response
+Daniel Stenberg (31 Jul 2013)
+- curl: --progress-bar max update frequency now at 5Hz
 
-Daniel Stenberg (26 Apr 2013)
-- curl_easy_init: use less mallocs
+- curl: make --progress-bar update the line less frequently
   
-  By introducing an internal alternative to curl_multi_init() that accepts
-  parameters to set the hash sizes, easy handles will now use tiny socket
-  and connection hash tables since it will only ever add a single easy
-  handle to that multi handle.
+  Also, use memset() instead of a lame loop.
   
-  This decreased the number mallocs in test 40 (which is a rather simple
-  and typical easy interface use case) from 1142 to 138. The maximum
-  amount of memory allocated used went down from 118969 to 78805.
+  The previous logic that tried to avoid too many updates were very
+  ineffective for really fast transfers, as then it could easily end up
+  doing hundreds of updates per second that would make a significant
+  impact in transfer performance!
+  
+  Bug: http://curl.haxx.se/mail/archive-2013-07/0031.html
+  Reported-by: Marc Doughty
 
-Steve Holme (26 Apr 2013)
-- ftpserver.pl: Fixed imap logout confirmation data
+Nick Zitzmann (30 Jul 2013)
+- darwinssl: added LFs to some strings passed into infof()
   
-  An IMAP server should response with the BYE continuation response before
-  confirming the LOGOUT command was successful.
+  (This doesn't need to appear in the release notes.) I noticed a few places
+  where infof() was called, and there should've been an LF at the end of the
+  string, but there wasn't.
 
-Daniel Stenberg (26 Apr 2013)
-- ftp_state_pasv_resp: connect through proxy also when set by env
+- darwinssl: fix build error in crypto authentication under Snow Leopard
   
-  When connecting back to an FTP server after having sent PASV/EPSV,
-  libcurl sometimes didn't use the proxy properly even though the proxy
-  was used for the initial connect.
+  It turns out Snow Leopard not only has SecItemCopyMatching() defined in
+  a header not included by the omnibus header, but it won't work for our
+  purposes, because searching for SecIdentityRef objects wasn't added
+  to that API until Lion. So we now use the old SecKeychainSearch API
+  instead if the user is building under, or running under, Snow Leopard.
   
-  The function wrongly checked for the CURLOPT_PROXY variable to be set,
-  which made it act wrongly if the proxy information was set with an
-  environment variable.
+  Bug: http://sourceforge.net/p/curl/bugs/1255/
+  Reported by: Edward Rudd
+
+- md5 & metalink: use better build macros on Apple operating systems
   
-  Added test case 711 to verify (based on 707 which uses --socks5). Also
-  added test712 to verify another variation of setting the proxy: with
-  --proxy socks5://
+  Previously we used __MAC_10_X and __IPHONE_X to mark digest-generating
+  code that was specific to OS X and iOS. Now we use
+  __MAC_OS_X_VERSION_MAX_ALLOWED and __IPHONE_OS_VERSION_MAX_ALLOWED
+  instead of those macros.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1218
-  Reported-by: Zekun Ni
+  Bug: http://sourceforge.net/p/curl/bugs/1255/
+  Reported by: Edward Rudd
 
-Kamil Dudka (26 Apr 2013)
-- [Zdenek Pavlas brought this change]
+Yang Tse (29 Jul 2013)
+- tool_operhlp.c: fix add_file_name_to_url() OOM handling
 
-  url: initialize speed-check data for file:// protocol
+- tool_operate.c: fix brace placement for vi/emacs delimiter matching
+
+- tool_operate.c: move <fabdef.h> header inclusion location
+
+Daniel Stenberg (29 Jul 2013)
+- RELEASE-NOTES: synced with b5478a0e033e7
+
+- curl_easy_pause: on unpause, trigger mulit-socket handling
   
-  ... in order to prevent an artificial timeout event based on stale
-  speed-check data from a previous network transfer.  This commit fixes
-  a regression caused by 9dd85bced56f6951107f69e581c872c1e7e3e58e.
+  When the multi-socket API is used, we need the handle to be checked
+  again when it gets unpaused.
   
-  Bug: https://bugzilla.redhat.com/906031
+  Bug: http://curl.haxx.se/mail/lib-2013-07/0239.html
+  Reported-by: Justin Karneges
 
-Daniel Stenberg (25 Apr 2013)
-- test709: clarify the test in the name
+- [John E. Malmberg brought this change]
 
-- sshserver: disable StrictHostKeyChecking
+  curl_formadd: fix file upload on VMS
   
-  I couldn't figure out why the host key logic isn't working, but having
-  it set to yes prevents my SSH-based test cases to run. I also don't see
-  a strong need to use strict host key checking on this test server.
+  For the standard VMS text file formats, VMS needs to read the file to
+  get the actual file size.
   
-  So I disabled it.
+  For the standard VMS binary file formats, VMS needs a special format of
+  fopen() call so that it stops reading at the logical end of file instead
+  of at the end of the blocks allocated to the file.
+  
+  I structured the patch this way as I was not sure about changing the
+  structures or parameters to the routines, but would prefer to only call
+  the stat() function once and pass the information to where the fopen()
+  call is made.
+  
+  Bug: https://sourceforge.net/p/curl/bugs/758/
 
-- runtests: log more commands in verbose mode
+- formadd: CURLFORM_FILECONTENT wrongly rejected some option combos
   
-  ... to aid tracking down failures
+  The code for CURLFORM_FILECONTENT had its check for duplicate options
+  wrong so that it would reject CURLFORM_PTRNAME if used in combination
+  with it (but not CURLFORM_COPYNAME)! The flags field used for this
+  purpose cannot be interpreted that broadly.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-07/0258.html
+  Reported-by: Byrial Jensen
 
-Steve Holme (25 Apr 2013)
-- TODO: Corrected copy/paste typo
+Yang Tse (25 Jul 2013)
+- packages/vms/Makefile.am: add latest file additions to EXTRA_DIST
 
-- TODO: Added new ideas for future SMTP, POP3 and IMAP features
+- [John E. Malmberg brought this change]
 
-- TODO: Updated following the addition of ;auth=<MECH> support
+  VMS: intial set of files to allow building using GNV toolkit.
 
-- DOCS: Minor rewording / clarification of host name protocol detection
+- string formatting: fix too many arguments for format
 
-- RELEASE-NOTES: synced with a8c92cb60890
+- string formatting: fix zero-length printf format string
 
-- DOCS: Added reference to IETF draft for SMTP URL Interface
-  
-  ...when mentioning login options. Additional minor clarification of
-  "Windows builds" to be "Windows builds with SSPI"as a way of enabling
-  NTLM as Windows builds may be built with OpenSSL to enable NTLM or
-  without NTLM support altogether.
+- easy.c: curl_easy_getinfo() fix va_start/va_end matching
 
-Linus Nielsen Feltzing (23 Apr 2013)
-- HISTORY: Fix spelling error.
+- imap.c: imap_sendf() fix va_start/va_end matching
 
-Steve Holme (23 Apr 2013)
-- DOCS: Reworked the scheme calculation explanation under CURLOPT_URL
+- string formatting: fix 15+ printf-style format strings
 
-- url: Added smtp and pop3 hostnames to the protocol detection list
+Patrick Monnerat (24 Jul 2013)
+- OS400: sync ILE/RPG binding with current curl.h
 
-Daniel Stenberg (23 Apr 2013)
-- HISTORY: correct some years/dates
+Yang Tse (24 Jul 2013)
+- string formatting: fix 25+ printf-style format strings
+
+Daniel Stenberg (23 Jul 2013)
+- Makefile.am: use LDFLAGS as well when linking libcurl
   
-  Thanks to archive.org's wayback machine I updated this document with
-  some facts from the early httpget/urlget web page:
+  Linking on Solaris 10 x86 with Sun Studio 12 failed when we upgraded
+  automake for the release builds.
   
-  http://web.archive.org/web/19980216125115/http://www.inf.ufrgs.br/~sagula/urlget.html
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1217
+  Reported-by: Dagobert Michelsen
 
-- [Alessandro Ghedini brought this change]
+- [Fabian Keil brought this change]
 
-  tests: add test1511 to check timecond clean-up
+  url.c: Fix dot file path cleanup when using an HTTP proxy
   
-  Verifies the timecond fix in commit c49ed0b6c0f
+  Previously the path was cleaned, but the URL wasn't properly updated.
 
-- [Alessandro Ghedini brought this change]
+- [Fabian Keil brought this change]
 
-  getinfo.c: reset timecond when clearing session-info variables
-  
-  Bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=705783
-  Reported-by: Ludovico Cavedon <cavedon@debian.org>
+  tests: test1232 verifies dotdot removal from path with proxy
 
-Steve Holme (22 Apr 2013)
-- DOCS: Added information about login options to CURLOPT_USERPWD
+- [Fabian Keil brought this change]
 
-- DOCS: Added information about login options in the URL
+  dotdot.c: Fix a RFC section number in a comment for Curl_dedotdotify()
 
-- url: Fixed missing length check in parse_proxy()
-  
-  Commit 11332577b3cb removed the length check that was performed by the
-  old scanf() code.
+- [John E. Malmberg brought this change]
 
-- url: Fixed crash when no username or password supplied for proxy
+  build_vms.com: fix debug and float options
   
-  Fixed an issue in parse_proxy(), introduced in commit 11332577b3cb,
-  where an empty username or password (For example: http://:@example.com)
-  would cause a crash.
-
-- url: Removed unused text length constants
+  In the reorganization of the build_vms.com the debug and float options
+  were not fixed up correctly.
 
-- url: Updated proxy URL parsing to use parse_login_details()
+- [John E. Malmberg brought this change]
 
-- url: Tidy up of setstropt_userpwd() parameters
+  curl: fix upload of a zip file in OpenVMS
+  
+  Two fixes:
+  
+  1. Force output file format to be stream-lf so that partial downloads
+  can be continued.
+  
+  This should have minor impact as if the file does not exist, it was
+  created with stream-lf format.  The only time this was an issue is if
+  there was already an existing file with a different format.
+  
+  2. Fix file uploads are now fixed.
+  
+     a. VMS binary files such as ZIP archives are now uploaded
+        correctly.
   
-  Updated the naming convention of the login parameters to match those of
-  other functions.
-
-- url: Tidy up of code and comments following recent changes
+     b. VMS text files are read once to get the correct size
+        and then converted to line-feed terminated records as
+        they are read into curl.
   
-  Tidy up of variable names and comments in setstropt_userpwd() and
-  parse_login_details().
-
-- url: Simplified setstropt_userpwd() following recent changes
+  The default VMS text formats do not contain either line-feed or
+  carriage-return terminated records.  Those delimiters are added by the
+  operating system file read calls if the application requests them.
   
-  There is no need to perform separate clearing of data if a NULL option
-  pointer is passed in. Instead this operation can be performed by simply
-  not calling parse_login_details() and letting the rest of the code do
-  the work.
-
-- url: Correction to scope of if statements when setting data
+  Bug: http://curl.haxx.se/bug/view.cgi?id=496
 
-- url: Fixed memory leak in setstropt_userpwd()
-  
-  setstropt_userpwd() was calling setstropt() in commit fddb7b44a79d to
-  set each of the login details which would duplicate the strings and
-  subsequently cause a memory leak.
+Yang Tse (22 Jul 2013)
+- libtest: fix data type of some *_setopt() 'long' arguments
 
-- RELEASE-NOTES: synced with d535c4a2e1f7
+- curl: fix symbolic names for CURL_NETRC_* enum in --libcurl output
 
-- url: Added overriding of URL login options from CURLOPT_USERPWD
+- curl: fix symbolic names for CURLUSESSL_* enum in --libcurl output
 
-- tool_paramhlp: Fixed options being included in username
+- tool_operate.c: fix passing curl_easy_setopt long arg on some x64 ABIs
   
-  Fix to prevent the options from being displayed when curl requests the
-  user's password if the following command line is specified:
+  We no longer pass our 'bool' data type variables nor constants as
+  an argument to my_setopt(), instead we use proper 1L or 0L values.
   
-  --user username;options
+  This also fixes macro used to pass string argument for CURLOPT_SSLCERT,
+  CURLOPT_SSLKEY and CURLOPT_EGDSOCKET using my_setopt_str() instead of
+  my_setopt().
+  
+  This also casts enum or int argument data types to long when passed to
+  my_setopt_enum().
 
-- url: Added support for parsing login options from the CURLOPT_USERPWD
+Daniel Stenberg (21 Jul 2013)
+- curl_multi_wait: fix revents
   
-  In addition to parsing the optional login options from the URL, added
-  support for parsing them from CURLOPT_USERPWD, to allow the following
-  supported command line:
+  Commit 6d30f8ebed34e7276 didn't work properly. First, it used the wrong
+  array index, but this fix also:
   
-  --user username:password;options
-
-- url: Added bounds checking to parse_login_details()
+  1 - only does the copying if indeed there was any activity
   
-  Added bounds checking when searching for the separator characters within
-  the login string as this string may not be NULL terminated (For example
-  it is the login part of a URL). We do this in preference to allocating a
-  new string to copy the login details into which could then be passed to
-  parse_login_details() for performance reasons.
-
-- url: Added size_t cast to pointer based length calculations
+  2 - makes sure to properly translate between internal and external
+  bitfields, which are not guaranteed to match
+  
+  Reported-by: Evgeny Turnaev
 
-- url: Corrected minor typo in comment
+- RELEASE-NOTES: synced with d529f3882b9bca
 
-Daniel Stenberg (18 Apr 2013)
-- CURL_CHECK_CA_BUNDLE: don't check for paths when cross-compiling
+- curl_easy_perform: gradually increase the delay time
   
-  When cross-compiling we can't scan and detect existing files or paths.
+  Instead of going 50,100,150 etc millisecond delay time when nothing has
+  been found to do or wait for, we now start lower and double each loop as
+  in 4,8,16,32 etc.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-04/0294.html
-
-- [Ishan SinghLevett brought this change]
+  This lowers the minimum wait without sacrifizing the longer wait too
+  much with unnecessary CPU cycles burnt.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-07/0103.html
+  Reported-by: Andreas Malzahn
 
-  usercertinmem.c: add example showing user cert in memory
+- ftp_do_more: consider DO_MORE complete when server connects back
   
-  Relies on CURLOPT_SSL_CTX_FUNCTION, which is OpenSSL specific
+  In the case of an active connection when ftp_do_more() detects that the
+  server has connected back, it must make sure to mark it as complete so
+  that the multi_runsingle() function will detect this and move on to the
+  next state.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-07/0115.html
+  Reported-by: Clemens Gruber
 
-Steve Holme (18 Apr 2013)
-- url: Fix chksrc longer than 79 columns warning
+Yang Tse (19 Jul 2013)
+- Makefile.b32: Borland makefile adjustments. Tested with BCC 5.5.1
 
-- url: Fix incorrect variable type for result code
+- WIN32 MemoryTracking: require UNICODE for wide strdup code support
 
-- url: Fix compiler warning
+Daniel Stenberg (18 Jul 2013)
+- CURLOPT_XFERINFOFUNCTION: introducing a new progress callback
   
-  signed and unsigned type in conditional expression
-
-- url: Moved parsing of login details out of parse_url_login()
+  CURLOPT_XFERINFOFUNCTION is now the preferred progress callback function
+  and CURLOPT_PROGRESSFUNCTION is considered deprecated.
   
-  Separated the parsing of login details from the processing of them in
-  parse_url_login() ready for use by setstropt_userpwd().
-
-- url: Re-factored set_userpass() and parse_url_userpass()
+  This new callback uses pure 'curl_off_t' arguments to pass on full
+  resolution sizes. It otherwise retains the same characteristics: the
+  same call rate, the same meanings for the arguments and the return code
+  is used the same way.
   
-  Re-factored these functions to reflect their new behaviour following the
-  addition of login options.
-
-- url: Reworked URL parsing to allow overriding by CURLOPT_USERPWD
+  The progressfunc.c example is updated to show how to use the new
+  callback for newer libcurls while supporting the older one if built with
+  an older libcurl or even built with a newer libcurl while running with
+  an older.
 
-Daniel Stenberg (18 Apr 2013)
-- maketgz: make bzip2 creation work with Parallel BZIP2 too
+Yang Tse (18 Jul 2013)
+- Reinstate "WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage".
   
-  Apparently the previous usage didn't work with that implementation,
-  while this updated version works with at least both Parallel BZIP2
-  v1.1.8 and regular bzip "Version 1.0.6, 6-Sept-2010".
-
-Linus Nielsen Feltzing (18 Apr 2013)
-- Add tests/http_pipe.py to the tarball build
-
-Steve Holme (16 Apr 2013)
-- smtp: Re-factored all perform based functions
+  This reverts commit 7ed25cc, reinstating commit 8ec2cb5.
   
-  Standardised the naming of all perform based functions to be in the form
-  smtp_perform_something().
+  As of 18-jul-2013 we still do have code in libcurl that makes use of these
+  memory functions. Commit 8ec2cb5 comment still applies and is yet valid.
+  
+  These memory functions are solely used in Windows builds, so all related
+  code is protected with '#ifdef WIN32' preprocessor conditional compilation
+  directives.
+  
+  Specifically, wcsdup() _wcsdup() are used when building a Windows target with
+  UNICODE and USE_WINDOWS_SSPI preprocessor symbols defined. This is the case
+  when building a Windows UNICODE target with Windows native SSL/TLS support
+  enabled.
+  
+  Realizing that wcsdup() _wcsdup() are used is a bit tricky given that usage
+  of these is hidden behind _tcsdup() which is MS way of dealing with code
+  that must tolerate UNICODE and non-UNICODE compilation. Additionally, MS
+  header files and those compatible from other compilers use this preprocessor
+  conditional compilation directive in order to select at compilation time
+  whether 'wide' or 'ansi' MS API functions are used.
+  
+  Without this code, Windows build targets with Windows native SSL/TLS support
+  enabled and MemoryTracking support enabled misbehave in tracking memory usage,
+  regardless of being a UNICODE enabled build or not.
 
-- smtp: Added description comments to all perform based functions
+- xc-am-iface.m4: comments refinement
 
-- smtp: Moved smtp_quit() to be with the other perform functions
+- configure: fix 'subdir-objects' distclean related issue
+  
+  See XC_AMEND_DISTCLEAN comments for details.
 
-- smtp: Moved smtp_rcpt_to() to be with the other perform functions
+Daniel Stenberg (18 Jul 2013)
+- [Evgeny Turnaev brought this change]
 
-- smtp: Moved smtp_mail() to be with the other perform functions
+  curl_multi_wait: set revents for extra fds
+  
+  Pass back the revents that happened for the user-provided file
+  descriptors.
 
-Daniel Stenberg (16 Apr 2013)
-- [Wouter Van Rooy brought this change]
+- [Ben Greear brought this change]
 
-  curl-config: don't output static libs when they are disabled
+  asyn-ares: Don't blank ares servers if none configured.
   
-  Curl-config outputs static libraries even when they are disabled in
-  configure.
+  Best to just let c-ares use it's defaults if none are configured
+  in (lib)curl.
   
-  This causes problems with the build of pycurl.
+  Signed-off-by: Ben Greear <greearb@candelatech.com>
 
-- [Dave Reisner brought this change]
+- [Sergei Nikulov brought this change]
 
-  docs/libcurl: fix formatting in manpage
+  cmake: Fix for MSVC2010 project generation
   
-  Commit c3ea3eb6 introduced some minor cosmetic errors in
-  curl_mutli_socket_action(3).
-
-- [Paul Howarth brought this change]
-
-  Add extra libs for lib1900 and lib2033 test programs
+  Fixed issue with static build for MSVC2010.
   
-  These are needed in cases where clock_gettime is used, from librt.
-
-Dan Fandrich (15 Apr 2013)
-- FAQ: mention that the network connection can be monitored
+  After some investigation I've discovered known issue
+  http://public.kitware.com/Bug/view.php?id=11240 When .rc file is linked
+  to static lib it fails with following linker error
   
-  Also note the prohibition on sharing handles across threads.
+  LINK : warning LNK4068: /MACHINE not specified; defaulting to X86
+  file.obj : fatal error LNK1112: module machine type 'x64' conflicts with
+  target machine type 'X86'
+  
+  Fix add target property /MACHINE: for MSVC generation.
+  
+  Also removed old workarounds - it caused errors during msvc build.
+  
+  Bug: http://curl.haxx.se/mail/lib-2013-07/0046.html
 
-Steve Holme (15 Apr 2013)
-- pop3: Added missing comment for pop3_state_apop_resp()
+- mk-ca-bundle.1: point out certdata.txt format docs
 
-- smtp: Updated the coding style of smtp_state_servergreet_resp()
-  
-  Updated the coding style, in this function, to be consistant with other
-  response functions rather then performing a hard return on failure.
+Yang Tse (16 Jul 2013)
+- slist.c: Curl_slist_append_nodup() OOM handling fix
 
-- pop3: Updated the coding style of pop3_state_servergreet_resp()
-  
-  Updated the coding style, in this function, to be consistent with other
-  response functions rather then performing a hard return on failure.
+Daniel Stenberg (16 Jul 2013)
+- test1414: FTP PORT download without SIZE support
 
-- pop3: Re-factored all perform based functions
-  
-  Standardised the naming of all perform based functions to be in the form
-  pop3_perform_something() following the changes made to IMAP.
+Yang Tse (16 Jul 2013)
+- tests/Makefile.am: add configurehelp.pm to DISTCLEANFILES
 
-- pop3: Added description comments to all perform based functions
+Patrick Monnerat (15 Jul 2013)
+- curl_slist_append(): fix error detection
 
-- pop3: Moved pop3_quit() to be with the other perform functions
+- slist.c: fix indentation
 
-- pop3: Moved pop3_command() to be with the other perform functions
-  
-  Started to apply the same tidy up to the POP3 code as applied to the
-  IMAP code in the 7.30.0 release.
+- OS400: new SSL backend GSKit
 
-- RELEASE-NOTES: Removed erroneous spaces
+- OS400: add slist and certinfo EBCDIC support
+
+- config-os400.h: enable system strdup(), strcmpi(), etc.
+
+- x509asn1.c,x509asn1.h: new module to support ASN.1/X509 parsing & info extract
+  Use from qssl backend
 
-- RELEASE-NOTES: synced with 8723cade21fb
+- ssluse.c,sslgen.c,sslgen.h: move certinfo support to generic SSL
 
-- smtp: Added support for ;auth=<mech> in the URL
+- Merge branch 'master' of github.com:bagder/curl
   
-  Added support for specifying the preferred authentication mechanism in
-  the URL as per Internet-Draft 'draft-earhart-url-smtp-00'.
+  Merge for resync
 
-- pop3: Reworked authentication type constants
+- slist.c, slist.h, cookie.c: new internal procedure Curl_slist_append_nodup()
+
+Yang Tse (15 Jul 2013)
+- sslgen.c: fix Curl_rand() compiler warning
   
-  ... to use left-shifted values, like those defined in curl.h, rather
-  than 16-bit hexadecimal values.
+  Use simple seeding method upon RANDOM_FILE seeding method failure.
 
-- pop3: Small consistency tidy up
+- sslgen.c: fix unreleased Curl_rand() infinite recursion
 
-- pop3: Added support for ;auth=<mech> in the URL
-  
-  Added support for specifying the preferred authentication type and SASL
-  mechanism in the URL as per RFC-2384.
+Daniel Stenberg (14 Jul 2013)
+- [Dave Reisner brought this change]
 
-- imap: Added support for ;auth=<mech> in the URL
+  src/tool: allow timeouts to accept decimal values
   
-  Added support for specifying the preferred authentication mechanism in
-  the URL as per RFC-5092.
-
-- sasl: Reworked SASL mechanism constants
+  Implement wrappers around strtod to convert the user argument to a
+  double with sane error checking. Use this to allow --max-time and
+  --connect-timeout to accept decimal values instead of strictly integers.
   
-  ... to use left-shifted values, like those defined in curl.h, rather
-  than 16-bit hexadecimal values.
+  The manpage is updated to make mention of this feature and,
+  additionally, forewarn that the actual timeout of the operation can
+  vary in its precision (particularly as the value increases in its
+  decimal precision).
 
-- sasl: Added predefined preferred mechanism values
-  
-  In preparation for the upcoming changes to IMAP, POP3 and SMTP added
-  preferred mechanism values.
+- [Dave Reisner brought this change]
 
-- url: Added support for parsing login options from the URL
-  
-  As well as parsing the username and password from the URL, added support
-  for parsing the optional options part from the login details, to allow
-  the following supported URL format:
-  
-  schema://username:password;options@example.com/path?q=foobar
-  
-  This will only be used by IMAP, POP3 and SMTP at present but any
-  protocol that may be given login options in the URL will be able to
-  add support for them.
+  curl.1: fix long line, found by checksrc.pl
 
-- smtp: Fix compiler warning
+- [Dave Reisner brought this change]
+
+  src/tool_paramhlp: try harder to catch negatives
   
-  warning: unused variable 'smtp' introduced in commit 73cbd21b5ee6.
+  strto* functions happily chomp off leading whitespace, so simply
+  checking for str[0] can lead to false negatives. Do the full parse and
+  check the out value instead.
 
-- smtp: Moved parsing of url path into separate function
+- [John E. Malmberg brought this change]
 
-Daniel Stenberg (12 Apr 2013)
-- FTP: handle a 230 welcome response
-  
-  ...instead of the 220 we otherwise expect.
-  
-  Made the ftpserver.pl support sending a custom "welcome" and then
-  created test 1219 to verify this fix with such a 230 welcome.
+  build_vms.com: detect and use zlib shared image
   
-  Bug: http://curl.haxx.se/mail/lib-2013-02/0102.html
-  Reported by: Anders Havn
-
-- configure: try pthread_create without -lpthread
+  Update the build_vms.com to detect and use zlib shared image installed
+  by the ZLIB kit produced by Jean-Francois Pieronne, and the also the
+  future ZLIB 1.2.8 kit in addition to the older ZLIB kits.
   
-  For libc variants without a spearate pthread lib (like bionic), try
-  using pthreads without the pthreads lib first and only if that fails try
-  the -lpthread linker flag.
+  Also fix the indentation to match one of the common standards used for
+  VMS DCL command files and removed the hard tab characters.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1216
-  Reported by: Duncan
+  Tested on OpenVMS 8.4 Alpha and IA64, and OpenVMS 7.3 VAX.
 
-- FTP: access files in root dir correctly
-  
-  Accessing a file with an absolute path in the root dir but with no
-  directory specified was not handled correctly. This fix comes with four
-  new test cases that verify it.
-  
-  Bug: http://curl.haxx.se/mail/lib-2013-04/0142.html
-  Reported by: Sam Deane
+Yang Tse (14 Jul 2013)
+- url.c: fix parse_url_login() OOM handling
 
-Steve Holme (12 Apr 2013)
-- pop3: Reworked the function description for Curl_pop3_write()
+- http_digest.c: SIGSEGV and OOM handling fixes
 
-- pop3: Added function description to pop3_parse_custom_request()
+- url.c: fix parse_login_details() OOM handling
 
-- pop3: Moved utility functions to end of pop3.c
+- [John E. Malmberg brought this change]
 
-Nick Zitzmann (12 Apr 2013)
-- darwinssl: add TLS session resumption
+  setup-vms.h: sk_pop symbol tweak
   
-  This ought to speed up additional TLS handshakes, at least in theory.
+  Newer versions of curl are referencing a sk_pop symbol while the HP
+  OpenSSL library has the symbol in uppercase only.
 
-Steve Holme (12 Apr 2013)
-- imap: Added function description to imap_parse_custom_request()
+- getinfo.c: fix enumerated type mixed with another type
 
-- imap: Moved utility functions to end of imap.c (Part 3/3)
-  
-  Moved imap_is_bchar() be with the other utility based functions.
+- test 1511: fix enumerated type mixed with another type
 
-- imap: Moved utility functions to end of imap.c (Part 2/3)
-  
-  Moved imap_parse_url_path() and imap_parse_custom_request() to the end of the
-  file allowing all utility functions to be grouped together.
+- url.c: fix SIGSEGV
 
-- imap: Moved utility functions to end of imap.c (Part 1/3)
-  
-  Moved imap_atom() and imap_sendf() to the end of the file allowing all
-  utility functions to be grouped together.
+- dotdot.c: fix global declaration shadowing
 
-- imap: Corrected function description for imap_connect()
+- easy.c: fix global declaration shadowing
 
-Kamil Dudka (12 Apr 2013)
-- tests: prevent test206, test1060, and test1061 from failing
+Kamil Dudka (9 Jul 2013)
+- Revert "curl.1: document the --time-cond option in the man page"
   
-  ... in case runtests.pl is invoked with non-default -b option
+  This reverts commit 3a0e931fc715a80004958794a96b12cf90503f99 because
+  the documentation of --time-cond was duplicated by mistake.
   
-  Fixes a regression caused by 1e29d275c643ef6aab7948f0f55a7a9397e56b42.
+  Reported by: Dave Reisner
 
-Daniel Stenberg (12 Apr 2013)
-- [David Strauss brought this change]
+- curl.1: document the --sasl-ir option in the man page
 
-  libcurl-share.3: update what it does and does not share.
-  
-  Update sharing interface documentation to provide exhaustive list of
-  what it does and does not share.
+- curl.1: document the --post303 option in the man page
 
-- THANKS: remove duplicated names
+- curl.1: document the --time-cond option in the man page
 
-- bump: start working towards next release
+Yang Tse (9 Jul 2013)
+- configure: automake 1.14 compatibility tweak (use XC_AUTOMAKE)
 
-- THANKS: added people from the 7.30.0 RELEASE-NOTES
+- xc-am-iface.m4: provide XC_AUTOMAKE macro
 
-Version 7.30.0 (12 Apr 2013)
+Guenter Knauf (8 Jul 2013)
+- Added winssl-zlib target to VC builds.
 
-Daniel Stenberg (12 Apr 2013)
-- RELEASE-NOTES: cleaned up for 7.30 (synced with 5c5e1a1cd20)
+- Synced Makefile.vc6 with recent changes.
   
-  Most notable the security advisory:
-  http://curl.haxx.se/docs/adv_20130412.html
+  Issue posted to the list by malinowsky AT FTW DOT at.
 
-- test1218: another cookie tailmatch test
+- Added libmetalink URL; added Android versions.
+
+Dan Fandrich (3 Jul 2013)
+- examples: Moved usercertinmem.c to COMPLICATED_EXAMPLES
   
-  ... and make 1216 also verify it with a file input
+  This prevents it from being built during a "make check" since it
+  depends on OpenSSL.
+
+Nick Zitzmann (2 Jul 2013)
+- Merge branch 'master' of https://github.com/bagder/curl
+
+- darwinssl: SSLv2 connections are aborted if unsupported by the OS
   
-  These tests verify commit 3604fde3d3c9b0d, the fix for the "cookie
-  domain tailmatch" vulnerability. See
-  http://curl.haxx.se/docs/adv_20130412.html
+  I just noticed that OS X no longer supports SSLv2. Other TLS engines return
+  an error if the requested protocol isn't supported by the underlying
+  engine, so we do that now for SSLv2 if the framework returns an error
+  when trying to turn on SSLv2 support. (Note: As always, SSLv2 support is
+  only enabled in curl when starting the app with the -2 argument; it's off
+  by default. SSLv2 is really old and insecure.)
 
-- [YAMADA Yasuharu brought this change]
+Marc Hoersken (1 Jul 2013)
+- lib506.c: Fixed possible use of uninitialized variables
 
-  cookie: fix tailmatching to prevent cross-domain leakage
+Kamil Dudka (30 Jun 2013)
+- url: restore the functionality of 'curl -u :'
   
-  Cookies set for 'example.com' could accidentaly also be sent by libcurl
-  to the 'bexample.com' (ie with a prefix to the first domain name).
+  This commit fixes a regression introduced in
+  fddb7b44a79d78e05043e1c97e069308b6b85f79.
   
-  This is a security vulnerabilty, CVE-2013-1944.
+  Reported by: Markus Moeller
+  Bug: http://curl.haxx.se/mail/archive-2013-06/0052.html
+
+Daniel Stenberg (25 Jun 2013)
+- digest: append the timer to the random for the nonce
+
+- digest: improve nonce generation
   
-  Bug: http://curl.haxx.se/docs/adv_20130412.html
+  Use the new improved Curl_rand() to generate better random nonce for
+  Digest auth.
 
-Guenter Knauf (11 Apr 2013)
-- Enabled MinGW sync resolver builds.
+- curl.1: fix typo in --xattr description
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1252
+  Reported-by: Jean-NoÃ«l Rouvignac
 
-Yang Tse (10 Apr 2013)
-- if2ip.c: fix compiler warning
+- RELEASE-NOTES: synced with 365c5ba39591
+  
+  The 10 first bug fixes for the pending release...
 
-Guenter Knauf (10 Apr 2013)
-- Fixed lost OpenSSL output with "-t" - followup.
+- formpost: better random boundaries
   
-  The previously applied patch didnt work on Windows; we cant rely
-  on shell commands like 'echo' since they act diffently on each
-  platform and each shell.
-  In order to keep this script platform-independent the code must
-  only use pure Perl.
+  When doing multi-part formposts, libcurl used a pseudo-random value that
+  was seeded with time(). This turns out to be bad for users who formpost
+  data that is provided with users who then can guess how the boundary
+  string will look like and then they can forge a different formpost part
+  and trick the receiver.
+  
+  My advice to such implementors is (still even after this change) to not
+  rely on the boundary strings being cryptographically strong. Fix your
+  code and logic to not depend on them that much!
+  
+  I moved the Curl_rand() function into the sslgen.c source file now to be
+  able to take advantage of the SSL library's random function if it
+  provides one. If not, try to use the RANDOM_FILE for seeding and as a
+  last resort keep the old logic, just modified to also add microseconds
+  which makes it harder to properly guess the exact seed.
+  
+  The formboundary() function in formdata.c is now using 64 bit entropy
+  for the boundary and therefore the string of dashes was reduced by 4
+  letters and there are 16 hex digits following it. The total length is
+  thus still the same.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1251
+  Reported-by: "Floris"
 
-Daniel Stenberg (9 Apr 2013)
-- test1217: verify parsing 257 responses with "rubbish" before path
+- printf: make sure %x are treated unsigned
   
-  Test 1217 verifies commit e0fb2d86c9f78, and without that change this
-  test fails.
+  When using %x, the number must be treated as unsigned as otherwise it
+  would get sign-extended on for example 64bit machines and do wrong
+  output. This problem showed when doing printf("%08x", 0xffeeddcc) on a
+  64bit host.
 
-- [Bill Middlecamp brought this change]
+- tests: add test1395 to the tarball
 
-  FTP: handle "rubbish" in front of directory name in 257 responses
-  
-  When doing PWD, there's a 257 response which apparently some servers
-  prefix with a comment before the path instead of after it as is
-  otherwise the norm.
+- SIGPIPE: don't use 'data' in sigpipe restore
   
-  Failing to parse this, several otherwise legitimate use cases break.
+  Follow-up fix from 7d80ed64e43515.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-04/0113.html
-
-Guenter Knauf (9 Apr 2013)
-- Fixed ares-enabled builds with static makefiles.
+  The SessionHandle may not be around to use when we restore the sigpipe
+  sighandler so we store the no_signal boolean in the local struct to know
+  if/how to restore.
 
-- Fixed lost OpenSSL output with "-t".
+- TODO: 1.8 Modified buffer size approach
   
-  The OpenSSL pipe wrote to the final CA bundle file, but the encoded PEM
-  output wrote to a temporary file.  Consequently, the OpenSSL output was
-  lost when the temp file was renamed to the final file at script finish
-  (overwriting the final file written earlier by openssl).
-  Patch posted to the list by Richard Michael (rmichael edgeofthenet org).
+  Thoughts around buffer sizes and what might be possible to do...
 
-Daniel Stenberg (9 Apr 2013)
-- test1216: test tailmatching cookie domains
+- c-ares: improve error message on failed resolve
   
-  This test is an attempt to repeat the problem YAMADA Yasuharu reported
-  at http://curl.haxx.se/mail/lib-2013-04/0108.html
-
-- RELEASe-NOTES: synced with 29fdb2700f797
+  When the c-ares based resolver backend failed to resolve a name, it
+  tried to show the name that failed from existing structs. This caused
+  the wrong output and shown hostname when for example --interface
+  [hostname] was used and that name resolving failed.
   
-  added "tcpkeepalive on Mac OS X"
-
-Nick Zitzmann (8 Apr 2013)
-- darwinssl: disable insecure ciphers by default
+  Now we use the hostname used in the actual resolve attempt in the error
+  message as well.
   
-  I noticed that aria2's SecureTransport code disables insecure ciphers such
-  as NULL, anonymous, IDEA, and weak-key ciphers used by SSLv3 and later.
-  That's a good idea, and now we do the same thing in order to prevent curl
-  from accessing a "secure" site that only negotiates insecure ciphersuites.
-
-Daniel Stenberg (8 Apr 2013)
-- [Robert Wruck brought this change]
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1191
+  Reported-by: Kim Vandry
 
-  tcpkeepalive: Support CURLOPT_TCP_KEEPIDLE on OSX
+- ossl_recv: check for an OpenSSL error, don't assume
   
-  MacOS X doesn't have TCP_KEEPIDLE/TCP_KEEPINTVL but only a single
-  TCP_KEEPALIVE (see
-  http://developer.apple.com/library/mac/#DOCUMENTATION/Darwin/Reference/ManPages/man4/tcp.4.html).
-  Here is a patch for CURLOPT_TCP_KEEPIDLE on OSX platforms.
-
-- configure: remove CURL_CHECK_FUNC_RECVFROM
+  When we recently started to treat a zero return code from SSL_read() as
+  an error we also got false positives - which primarily looks to be
+  because the OpenSSL documentation is wrong and a zero return code is not
+  at all an error case in many situations.
   
-  1 - We don't use the results from the test and we never did. recvfrom()
-  is only used by the TFTP code and it has not caused any problems.
+  Now ossl_recv() will check with ERR_get_error() to see if there is a
+  stored error and only then consider it to be a true error if SSL_read()
+  returned zero.
   
-  2 - the CURL_CHECK_FUNC_RECVFROM function is extremely slow
-
-Steve Holme (8 Apr 2013)
-- RELEASE-NOTES: Corrected duplicate NTLM memory leaks
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1249
+  Reported-by: Nach M. S.
+  Patch-by: Nach M. S.
 
-- RELEASE-NOTES: Removed trailing full stop
+Nick Zitzmann (22 Jun 2013)
+- Merge branch 'master' of https://github.com/bagder/curl
 
-Daniel Stenberg (8 Apr 2013)
-- [Fabian Keil brought this change]
+- darwinssl: fix crash that started happening in Lion
+  
+  Something (a recent security update maybe?) changed in Lion, and now it
+  has changed SSLCopyPeerTrust such that it may return noErr but also give
+  us a null trust, which caught us off guard and caused an eventual crash.
 
-  proxy: make ConnectionExists() check credential of proxyconnections too
+Daniel Stenberg (22 Jun 2013)
+- SIGPIPE: ignored while inside the library
   
-  Previously it only compared credentials if the requested needle
-  connection wasn't using a proxy. This caused NTLM authentication
-  failures when using proxies as the authentication code wasn't send on
-  the connection where the challenge arrived.
+  ... and restore the ordinary handling again when it returns. This is
+  done for curl_easy_perform() and curl_easy_cleanup() only for now - and
+  only when built to use OpenSSL as backend as this is the known culprit
+  for the spurious SIGPIPEs people have received.
   
-  Added test 1215 to verify: NTLM server authentication through a proxy
-  (This is a modified copy of test 67)
-
-- RELEASE-NOTES: sync with 704a5dfca9
-
-- TODO-RELEASE: cleaned up, not really maintained lately
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1180
+  Reported by: LluÃ­s Batlle i Rossell
 
-Marc Hoersken (7 Apr 2013)
-- if2ip.c: Fixed another warning: unused parameter 'remote_scope'
+- KNOWN_BUGS: #83 unable to load non-default openssl engines
 
-Daniel Stenberg (7 Apr 2013)
-- [Marc Hoersken brought this change]
+- test1396: invoke the correct test tool!
+  
+  This erroneously run unit test 1310 instead of 1396!
 
-  cookie.c: Made cookie sort function more deterministic
+Kamil Dudka (22 Jun 2013)
+- test1230: avoid using hard-wired port number
   
-  Since qsort implementations vary with regards to handling the order
-  of similiar elements, this change makes the internal sort function
-  more deterministic by comparing path length first, then domain length
-  and finally the cookie name. Spotted with testcase 62 on Windows.
+  ... to prevent failure when a non-default -b option is given
 
-Marc Hoersken (7 Apr 2013)
-- curl_schannel.c: Follow up on memory leak fix ae4558d
+- curl-config.in: replace tabs by spaces
 
-- Revert "getpart.pm: Strip carriage returns to fix Windows support"
+Nick Zitzmann (22 Jun 2013)
+- darwinssl: reform OS-specific #defines
   
-  This reverts commit e51b23c925a2721cf7c29b2b376d3d8903cfb067.
-  As discussed on the mailinglist, this was not the correct approach.
+  This doesn't need to be in the release notes. I cleaned up a lot of the #if
+  lines in the code to use MAC_OS_X_VERSION_MIN_REQUIRED and
+  MAC_OS_X_VERSION_MAX_ALLOWED instead of checking for whether things like
+  __MAC_10_6 or whatever were defined, because for some SDKs Apple has released
+  they were defined out of place.
 
-- http_negotiate.c: Fixed passing argument from incompatible pointer type
+Daniel Stenberg (22 Jun 2013)
+- [Alessandro Ghedini brought this change]
 
-- ftp.c: Added missing brackets around ABOR command logic
+  docs: fix typo in curl_easy_getinfo manpage
 
-- sockfilt.c: Fixed detection of client-side connection close
+- dotdot: introducing dot file path cleanup
   
-  WINSOCK only:
-  Since FD_CLOSE is only signaled once, it may trigger at the same
-  time as FD_READ. Data actually being available makes it impossible
-  to detect that the connection was closed by checking that recv returns
-  zero. Another recv attempt could block the connection if it was
-  not closed. This workaround abuses exceptfds in conjunction with
-  readfds to signal that the connection has actually closed.
-
-- curl_schannel.c: Fixed memory leak if connection was not successful
-
-- if2ip.c: Fixed warning: unused parameter 'remote_scope'
+  RFC3986 details how a path part passed in as part of a URI should be
+  "cleaned" from dot sequences before getting used. The described
+  algorithm is now implemented in lib/dotdot.c with the accompanied test
+  case in test 1395.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1200
+  Reported-by: Alex Vinnik
 
-- runtests.pl: Fixed --verbose parameter passed to http_pipe.py
+- bump: start working towards what most likely will become 7.32.0
 
-- sockfilt.c: Reduce CPU load while running under a Windows PIPE
+- THANKS: added 24 new contributors from the 7.31.0 release
 
-- tftpd.c: Apply sread timeout to the whole data transfer session
+Version 7.31.0 (22 Jun 2013)
 
-- getpart.pm: Strip carriage returns to fix Windows support
+Daniel Stenberg (22 Jun 2013)
+- RELEASE-NOTES: synced with 0de7249bb39a2 - 7.31.0
 
-Daniel Stenberg (6 Apr 2013)
-- ftp tests: libcurl returns CURLE_FTP_ACCEPT_FAILED better now
-  
-  Since commit 57aeabcc1a20f, it handles errors on the control connection
-  while waiting for the data connection better.
-  
-  Test 591 and 592 are updated accordingly.
+- unit1396: unit tests to verify curl_easy_(un)escape
 
-- FTP: wait on both connections during active STOR state
+- Curl_urldecode: no peeking beyond end of input buffer
   
-  When doing PORT and upload (STOR), this function needs to extract the
-  file descriptor for both connections so that it will respond immediately
-  when the server eventually connects back.
+  Security problem: CVE-2013-2174
   
-  This flaw caused active connections to become unnecessary slow but they
-  would still often work due to the normal polling on a timeout. The bug
-  also would not occur if the server connected back very fast, like when
-  testing on local networks.
+  If a program would give a string like "%FF" to curl_easy_unescape() but
+  ask for it to decode only the first byte, it would still parse and
+  decode the full hex sequence. The function then not only read beyond the
+  allowed buffer but it would also deduct the *unsigned* counter variable
+  for how many more bytes there's left to read in the buffer by two,
+  making the counter wrap. Continuing this, the function would go on
+  reading beyond the buffer and soon writing beyond the allocated target
+  buffer...
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1183
-  Reported by: Daniel Theron
-
-Marc Hoersken (6 Apr 2013)
-- tftpd.c: Follow up cleanup and restore of previous sockopt
+  Bug: http://curl.haxx.se/docs/adv_20130622.html
+  Reported-by: Timo Sirainen
 
-Daniel Stenberg (6 Apr 2013)
-- [Kim Vandry brought this change]
+Guenter Knauf (20 Jun 2013)
+- Use opened body.out file and write content to it.
 
-  connect: treat an interface bindlocal() problem as a non-fatal error
-  
-  I am using curl_easy_setopt(CURLOPT_INTERFACE, "if!something") to force
-  transfers to use a particular interface but the transfer fails with
-  CURLE_INTERFACE_FAILED, "Failed binding local connection end" if the
-  interface I specify has no IPv6 address. The cause is as follows:
-  
-  The remote hostname resolves successfully and has an IPv6 address and an
-  IPv4 address.
-  
-  cURL attempts to connect to the IPv6 address first.
-  
-  bindlocal (in lib/connect.c) fails because Curl_if2ip cannot find an
-  IPv6 address on the interface.
-  
-  This is a fatal error in singleipconnect()
-  
-  This change will make cURL try the next IP address in the list.
-  
-  Also included are two changes related to IPv6 address scope:
-  
-  - Filter the choice of address in Curl_if2ip to only consider addresses
-  with the same scope ID as the connection address (mismatched scope for
-  local and remote address does not result in a working connection).
+Daniel Stenberg (20 Jun 2013)
+- multi_socket: react on socket close immediately
   
-  - bindlocal was ignoring the scope ID of addresses returned by
-  Curl_if2ip . Now it uses them.
+  As a remedy to the problem when a socket gets closed and a new one is
+  opened with the same file descriptor number and as a result
+  multi.c:singlesocket() doesn't detect the difference, the new function
+  Curl_multi_closed() gets told when a socket is closed so that it can be
+  removed from the socket hash. When the old one has been removed, a new
+  socket should be detected fine by the singlesocket() on next invoke.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1189
-
-Marc Hoersken (6 Apr 2013)
-- tftpd.c: Fixed sread timeout on Windows by setting it manually
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1248
+  Reported-by: Erik Johansson
 
-- ftp.pm: Added tskill to support Windows XP Home
+- RELEASE-NOTES: synced with e305f5ec715f
 
-- runtests.pl: Modularization of MinGW/Msys compatibility functions
+- TODO: mention the DANE patch from March
 
-- ftp.pm: Made Perl testsuite able to handle Windows processes
+- CURLOPT_COOKIELIST: take cookie share lock
+  
+  When performing COOKIELIST operations the cookie lock needs to be taken
+  for the cases where the cookies are shared among multiple handles!
+  
+  Verified by Benjamin Gilbert's updated test 506
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1215
+  Reported-by: Benjamin Gilbert
 
-- util.c: Revert workaround eeefcdf, 6eb56e7 and e3787e8
+- [Benjamin Gilbert brought this change]
 
-- ftp.pm: Made Perl testsuite able to kill Windows processes
+  test506: verify that CURLOPT_COOKIELIST takes share lock
+  
+  It doesn't right now: http://curl.haxx.se/bug/view.cgi?id=1215
 
-- util.c: Follow up cleanup on eeefcdf
+- TODO: HTTP2/SPDY support
 
-Daniel Stenberg (6 Apr 2013)
-- cpp: use #ifdef __MINGW32__ to avoid compiler complaints
+- curl_easy_setopt.3: clarify CURLOPT_PROGRESSFUNCTION frequency
   
-  ... instead of just #if
+  Make it clearer that the CURLOPT_PROGRESSFUNCTION callback will be
+  called more frequently than once per second when things are happening.
 
-Marc Hoersken (6 Apr 2013)
-- util.c: Made write_pidfile write the correct PID on MinGW/Msys
+- RELEASE-NOTES: synced with 9c3e098259b82
   
-  This workaround fixes an issue on MinGW/Msys regarding the Perl
-  testsuite scripts not being able to signal or control the server
-  processes. The MinGW Perl runtime only sees the Msys processes and
-  their corresponding PIDs, but sockfilt (and other servers) wrote the
-  Windows PID into their PID-files. Since this PID is useless to the
-  testsuite, the write_pidfile function was changed to search for the
-  Msys PID and write that into the PID-file.
+  Mention 7 recent bug fixes and their associated contributors
 
-Daniel Stenberg (5 Apr 2013)
-- RELEASE-NOTES: synced with 5e722b2d09087
+- curl_multi_wait.3: clarify the numfds counter
+
+- curl_easy_perform: avoid busy-looping
   
-  3 more bug fixes, 6 more contributors
+  When curl_multi_wait() finds no file descriptor to wait for, it returns
+  instantly and this must be handled gracefully within curl_easy_perform()
+  or cause a busy-loop. Starting now, repeated fast returns without any
+  file descriptors is detected and a gradually increasing sleep will be
+  used (up to a max of 1000 milliseconds) before continuing the loop.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1238
+  Reported-by: Miguel Angel
 
-Marc Hoersken (5 Apr 2013)
-- sockfilt.c: Fixed handling of multiple fds being signaled
+- [YAMADA Yasuharu brought this change]
 
-Kamil Dudka (5 Apr 2013)
-- curl_global_init.3: improve description of CURL_GLOBAL_ALL
+  cookies: follow-up fix for path checking
   
-  Reported by: Tomas Mlcoch
+  The initial fix to only compare full path names were done in commit
+  04f52e9b4db0 but found out to be incomplete. This takes should make the
+  change more complete and there's now two additional tests to verify
+  (test 31 and 62).
 
-- examples/multi-single.c: fix the order of destructions
-  
-  ... so that it adheres to the API documentation.
-  
-  Reported by: Tomas Mlcoch
+- [Sergei Nikulov brought this change]
 
-Daniel Stenberg (5 Apr 2013)
-- Curl_open: restore default MAXCONNECTS to 5
+  lib1900: use tutil_tvnow instead of gettimeofday
   
-  At some point recently we lost the default value for the easy handle's
-  connection cache, and this change puts it back to 5 - which is the
-  former default value and it is documented in the curl_easy_setopt.3 man
-  page.
+  Makes it build on windows
 
-Marc Hoersken (4 Apr 2013)
-- sockfilt.c: Added wrapper functions to fix Windows console issues
-  
-  The new read and write wrapper functions support reading from stdin
-  and writing to stdout/stderr on Windows by using the appropriate
-  Windows API functions and data types.
+- [Eric Hu brought this change]
 
-Yang Tse (4 Apr 2013)
-- lib1509.c: fix compiler warnings
+  axtls: now done non-blocking
 
-- easy.c: fix compiler warning
+- [Eric Hu brought this change]
 
-Daniel Stenberg (4 Apr 2013)
-- --engine: spellfix the help message
-  
-  Reported by: Fredrik Thulin
+  test2033: requires NTLM support
 
-Yang Tse (4 Apr 2013)
-- http_negotiate.c: follow-up for commit 3dcc1a9c
+- KNOWN_BUGS: #82 failed build with Borland compiler
 
-Linus Nielsen Feltzing (4 Apr 2013)
-- easy: Fix the broken CURLOPT_MAXCONNECTS option
+- Curl_output_digest: support auth-int for empty entity body
   
-  Copy the CURLOPT_MAXCONNECTS option to CURLMOPT_MAXCONNECTS in
-  curl_easy_perform().
+  By always returning the md5 for an empty body when auth-int is asked
+  for, libcurl now at least sometimes does the right thing.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1212
-  Reported-by: Steven Gu
-
-Guenter Knauf (4 Apr 2013)
-- Updated copyright date.
-
-- Another small output fix for --help and --version.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1235
+  Patched-by: Nach M. S.
 
-Yang Tse (4 Apr 2013)
-- http_negotiate.c: fix several SPNEGO memory handling issues
+- multi_socket: reduce timeout inaccuracy margin
+  
+  Allow less room for "triggered too early" mistakes by applications /
+  timers on non-windows platforms. Starting now, we assume that a timeout
+  call is never made earlier than 3 milliseconds before the actual
+  timeout. This greatly improves timeout accuracy on Linux.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1228
+  Reported-by: Hang Su
 
-Guenter Knauf (4 Apr 2013)
-- Added a cont to specify base64 line wrap.
+- cert_stuff: avoid double free in the PKCS12 code
+  
+  In the pkcs12 code, we get a list of x509 records returned from
+  PKCS12_parse but when iterating over the list and passing each to
+  SSL_CTX_add_extra_chain_cert() we didn't also properly remove them from
+  the "stack", which made them get freed twice (both in sk_X509_pop_free()
+  and then later in SSL_CTX_free).
+  
+  This isn't really documented anywhere...
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1236
+  Reported-by: Nikaiw
 
-- Fixed version output.
+- cert_stuff: remove code duplication in the pkcs12 logic
 
-- Added support for --help and --version options.
+- [Aleksey Tulinov brought this change]
 
-- Added option to specify length of base64 output.
+  axtls: honor disabled VERIFYHOST
   
-  Based on a patch posted to the list by Richard Michael.
+  When VERIFYHOST == 0, libcurl should let invalid certificates to pass.
 
-Daniel Stenberg (3 Apr 2013)
-- curl_easy_setopt.3: CURLOPT_HTTPGET disables CURLOPT_UPLOAD
+- [Peter Gal brought this change]
 
-- [Yasuharu Yamada brought this change]
+  curl_easy_setopt.3: HTTP header with no content
+  
+  Update the documentation on how to specify a HTTP header with no
+  content.
 
-  Curl_cookie_add: only increase numcookies for new cookies
+- RELEASE-NOTES: synced with 87cf677eca55
   
-  Count up numcookies in Curl_cookie_add() only when cookie is new one
+  Added 11 bugs and 7 contributors
 
-- SO_SNDBUF: don't set SNDBUF for win32 versions vista or later
+- lib1500: remove bad check
   
-  The Microsoft knowledge-base article
-  http://support.microsoft.com/kb/823764 describes how to use SNDBUF to
-  overcome a performance shortcoming in winsock, but it doesn't apply to
-  Windows Vista and later versions. If the described SNDBUF magic is
-  applied when running on those more recent Windows versions, it seems to
-  instead have the reversed effect in many cases and thus make libcurl
-  perform less good on those systems.
+  After curl_multi_wait() returns, this test checked that we got exactly
+  one file descriptor told to read from, but we cannot be sure that is
+  true. curl_multi_wait() will sometimes return earlier without any file
+  descriptor to handle, just just because it is a suitable time to call
+  *perform().
   
-  This fix thus adds a run-time version-check that does the SNDBUF magic
-  conditionally depending if it is deemed necessary or not.
+  This problem showed up with commit 29bf0598.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1188
-  Reported by: Andrew Kurushin
-  Tested by: Christian HÃ¤gele
+  Bug: http://curl.haxx.se/mail/lib-2013-06/0029.html
+  Reported-by: Fabian Keil
 
-Nick Zitzmann (1 Apr 2013)
-- darwinssl: additional descriptive messages of SSL handshake errors
+- tests/Makefile: typo in the perlcheck target
   
-  (This doesn't need to appear in the release notes.)
-
-Guenter Knauf (1 Apr 2013)
-- Added dns and connect time to output.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1239
+  Reported-by: Christian Weisgerber
 
-Daniel Stenberg (1 Apr 2013)
-- RELEASE-NOTES: synced with 0614b902136
+- test1230: verify CONNECT to a numerical ipv6-address
 
-- code-policed
+- sws: support extracting test number from CONNECT ipv6-address!
+  
+  If an ipv6-address is provided to CONNECT, the last hexadecimal group in
+  the address will be used as the test number! For example the address
+  "[1234::ff]" would be treated as test case 255.
 
-- tcpkeepalive: support TCP_KEEPIDLE/TCP_KEEPINTVL on win32
+- curl_multi_wait: only use internal timer if not -1
   
-  Patch by: Robert Wruck
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1209
+  commit 29bf0598aad5 introduced a problem when the "internal" timeout is
+  prefered to the given if shorter, as it didn't consider the case where
+  -1 was returned. Now the internal timeout is only considered if not -1.
+  
+  Reported-by: Tor Arntsen
+  Bug: http://curl.haxx.se/mail/lib-2013-06/0015.html
 
-- BINDINGS: BBHTTP is a cocoa binding, Julia has a binding
+Dan Fandrich (3 Jun 2013)
+- libcurl-tutorial.3: added a section on IPv6
+  
+  Also added a (correctly-escaped) backslash to the autoexec.bat
+  example file and a new Windows character device name with
+  a colon as examples of other characters that are special
+  and potentially dangerous (this reverts and reworks commit
+  7d8d2a54).
 
-- ftp_sendquote: use PPSENDF, not FTPSENDF
+Daniel Stenberg (3 Jun 2013)
+- curl_multi_wait: reduce timeout if the multi handle wants to
   
-  The last remaining code piece that still used FTPSENDF now uses PPSENDF.
-  In the problematic case, a PREQUOTE series was done on a re-used
-  connection when Curl_pp_init() hadn't been called so it had messed up
-  pointers. The init call is done properly from Curl_pp_sendf() so this
-  change fixes this particular crash.
+  If the multi handle's pending timeout is less than what is passed into
+  this function, it will now opt to use the shorter time anyway since it
+  is a very good hint that the handle wants to process something in a
+  shorter time than what otherwise would happen.
   
-  Bug: http://curl.haxx.se/mail/lib-2013-03/0319.html
-  Reported by: Sam Deane
+  curl_multi_wait.3 was updated accordingly to clarify
+  
+  This is the reason for bug #1224
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1224
+  Reported-by: Andrii Moiseiev
 
-Steve Holme (27 Mar 2013)
-- RELEASE-NOTES: Corrected typo
+- multi_runsingle: switch an if() condition for readability
+  
+  ... because there's an identical check right next to it so using the
+  operators in the check in the same order increases readability.
 
-Daniel Stenberg (27 Mar 2013)
-- [Clemens Gruber brought this change]
+Marc Hoersken (2 Jun 2013)
+- curl_schannel.c: Removed variable unused since 35874298e4
 
-  multi-uv.c: remove unused variable
+- curl_setup.h: Fixed redefinition warning using mingw-w64
 
-- RELEASE-NOTES: add two references
+Daniel Stenberg (30 May 2013)
+- multi_runsingle: add braces to clarify the code
 
-- test1509: verify proxy header response headers count
-  
-  Modified sws to support and use custom CONNECT responses instead of the
-  previously naive hard-coded version. Made the HTTP test server able to
-  extract test case number from the host name in a CONNECT request by
-  finding the number after the last dot. It makes 'machine.moo.123' use
-  test case 123.
+- libcurl-tutorial.3: remove incorrect backslash
   
-  Adapted a larger amount of tests to the new <connect> style.
+  A single backslash in the content is not legal nroff syntax.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1204
-  Reported by: Martin Jansen
-
-- [Clemens Gruber brought this change]
+  Reported and fixed by: Eric S. Raymond
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1234
 
-  Added libuv example multi-uv.c
+- curl_formadd.3: fixed wrong "end-marker" syntax
+  
+  Reported and fixed by: Eric S. Raymond
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1233
 
-Yang Tse (25 Mar 2013)
-- NTLM: fix several NTLM code paths memory leaks
+- curl.1: clarify that --silent still outputs data
 
-- WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage
+- Digest auth: escape user names with \ or " in them
   
-  As of 25-mar-2013 wcsdup() _wcsdup() and _tcsdup() are only used in
-  WIN32 specific code, so tracking of these has not been extended for
-  other build targets. Without this fix, memory tracking system on
-  WIN32 builds, when using these functions, would provide misleading
-  results.
+  When sending the HTTP Authorization: header for digest, the user name
+  needs to be escaped if it contains a double-quote or backslash.
   
-  In order to properly extend this support for all targets curl.h
-  would have to define curl_wcsdup_callback prototype and consequently
-  wchar_t should be visible before that in curl.h.  IOW curl_wchar_t
-  defined in curlbuild.h and this pulling whatever system header is
-  required to get wchar_t definition.
+  Test 1229 was added to verify
   
-  Additionally a new curl_global_init_mem() function that also receives
-  user defined wcsdup() callback would be required.
+  Reported and fixed by: Nach M. S
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1230
 
-- curl_ntlm_msgs.c: revert commit 463082bea4
-  
-  reverts unreleased invalid memory leak fix
+- [Mike Giancola brought this change]
 
-Daniel Stenberg (23 Mar 2013)
-- RELEASE-NOTES: synced with bc6037ed3ec02
+  ossl_recv: SSL_read() returning 0 is an error too
   
-  More changes, bugfixes and contributors!
+  SSL_read can return 0 for "not successful", according to the open SSL
+  documentation: http://www.openssl.org/docs/ssl/SSL_read.html
 
-- [Martin Jansen brought this change]
+- [Mike Giancola brought this change]
 
-  Curl_proxyCONNECT: count received headers
+  ossl_send: SSL_write() returning 0 is an error too
   
-  Proxy servers tend to add their own headers at the beginning of
-  responses. The size of these headers was not taken into account by
-  CURLINFO_HEADER_SIZE before this change.
+  We found that in specific cases if the connection is abruptly closed,
+  the underlying socket is listed in a close_wait state. We continue to
+  call the curl_multi_perform, curl_mutli_fdset etc. None of these APIs
+  report the socket closed / connection finished.  Since we have cases
+  where the multi connection is only used once, this can pose a problem
+  for us. I've read that if another connection was to come in, curl would
+  see the socket as bad and attempt to close it at that time -
+  unfortunately, this does not work for us.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1204
-
-Steve Holme (21 Mar 2013)
-- sasl: Corrected a few violations of the curl coding standards
+  I found that in specific situations, if SSL_write returns 0, curl did
+  not recognize the socket as closed (or errored out) and did not report
+  it to the application. I believe we need to change the code slightly, to
+  check if ssl_write returns 0. If so, treat it as an error - the same as
+  a negative return code.
   
-  Corrected some incorrectly positioned pointer variable declarations to
-  be "char *" rather than "char* ".
+  For OpenSSL - the ssl_write documentation is here:
+  http://www.openssl.org/docs/ssl/SSL_write.html
 
-- multi.c: Corrected a couple of violations of the curl coding standards
+- KNOWN_BUGS: curl -OJC- fails to resume
   
-  Corrected some incorrectly positioned pointer variable declarations to
-  be "type *" rather than "type* ".
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1169
 
-- imap-tests: Added CRLF to reply data to be compliant with RFC-822
+- Curl_cookie_add: handle IPv6 hosts
   
-  Updated the reply data in tests: 800, 801, 802, 804 and 1321 to possess
-  the CRLF as per RFC-822.
-
-- multi.c: Fix compilation warning
+  1 - don't skip host names with a colon in them in an attempt to bail out
+  on HTTP headers in the cookie file parser. It was only a shortcut anyway
+  and trying to parse a file with HTTP headers will still be handled, only
+  slightly slower.
   
-  warning: an enumerated type is mixed with another type
-
-- multi.c: fix compilation error
+  2 - don't skip domain names based on number of dots. The original
+  netscape cookie spec had this oddity mentioned and while our code
+  decreased the check to only check for two, the existing cookie spec has
+  no such dot counting required.
   
-  warning: conversion from enumeration type to different enumeration type
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1221
+  Reported-by: Stefan Neis
 
-- lib1900.c: fix compilation warning
+- curl_easy_setopt.3: expand the PROGRESSFUNCTION section
   
-  warning: declaration of 'time' shadows a global declaration
+  Explain the callback and its arguments better and with more descriptive
+  text.
 
-Yang Tse (20 Mar 2013)
-- [John E. Malmberg brought this change]
+- tests: add test1394 file to the tarball
 
-  build_vms.com: use existing curlbuild.h and parsing fix
-  
-  This patch removes building curlbuild.h from the build_vms.com procedure
-  and uses the one in the daily or release tarball instead.
+- tarball: include the xmlstream example
+
+- [David Strauss brought this change]
+
+  xmlstream: XML stream parsing example source code
   
-  packages/vms/build_curlbuild_h.com is obsolete with this change.
+  Add an XML stream parsing example using Expat. Add missing ignore for
+  the binary from an unrelated example.
+
+- [YAMADA Yasuharu brought this change]
+
+  cookies: only consider full path matches
   
-  Accessing the library module name "tool_main" needs different handling
-  when the optional extended parsing is enabled.
+  I found a bug which cURL sends cookies to the path not to aim at.
+  For example:
+  - cURL sends a request to http://example.fake/hoge/
+  - server returns cookie which with path=/hoge;
+    the point is there is NOT the '/' end of path string.
+  - cURL sends a request to http://example.fake/hogege/ with the cookie.
   
-  Tested on IA64/VMS 8.4 and VAX/VMS 7.3
-
-Nick Zitzmann (19 Mar 2013)
-- darwinssl: disable ECC ciphers under Mountain Lion by default
+  The reason for this old "feature" is because that behavior is what is
+  described in the original netscape cookie spec:
+  http://curl.haxx.se/rfc/cookie_spec.html
   
-  I found out that ECC doesn't work as of OS X 10.8.3, so those ciphers are
-  turned off until the next point release of OS X.
+  The current cookie spec (RFC6265) clarifies the situation:
+  http://tools.ietf.org/html/rfc6265#section-5.2.4
 
-Steve Holme (18 Mar 2013)
-- FEATURES: Small tidy up for constancy and grammar
+- [Eric Hu brought this change]
 
-Daniel Stenberg (18 Mar 2013)
-- [Oliver Schindler brought this change]
+  axtls: prevent memleaks on SSL handshake failures
 
-  Curl_proxyCONNECT: clear 'rewindaftersend' on success
+- Revert "WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage"
   
-  After having done a POST over a CONNECT request, the 'rewindaftersend'
-  boolean could be holding the previous value which could lead to badness.
+  This reverts commit 8ec2cb5544b86306b702484ea785b6b9596562ab.
   
-  This should be tested for in a new test case!
+  We don't have any code anywhere in libcurl (or the curl tool) that use
+  wcsdup so there's no such memory use to track. It seems to cause mild
+  problems with the Borland compiler though that we may avoid by reverting
+  this change again.
   
-  Bug: https://groups.google.com/d/msg/msysgit/B31LNftR4BI/KhRTz0iuGmUJ
+  Bug: http://curl.haxx.se/mail/lib-2013-05/0070.html
 
-Steve Holme (18 Mar 2013)
-- TODO: Reordered the protocol and security sections
-  
-  Moved SMTP, POP3, IMAP and New Protocol sections to be listed after the
-  other protocols (FTP, HTTP and TELNET) and SASL to be after SSL and
-  GnuTLS as these are all security related.
-  
-  Additionally fixed numbering of the SSL and GnuTLS sections as they
-  weren't consecutive.
+- RELEASE-NOTES: synced with ae26ee3489588f0
 
-Yang Tse (18 Mar 2013)
-- tests: specify 'text' mode for some output files in verify section
+Guenter Knauf (11 May 2013)
+- Updated zlib version in build files.
 
-Steve Holme (17 Mar 2013)
-- imap: Fixed incorrect initial response generation for SASL AUTHENTICATE
+Daniel Stenberg (9 May 2013)
+- [Renaud Guillard brought this change]
+
+  OS X framework: fix invalid symbolic link
+
+Kamil Dudka (9 May 2013)
+- [Daniel Stenberg brought this change]
+
+  nss: give PR_INTERVAL_NO_WAIT instead of -1 to PR_Recv/PR_Send
   
-  Fixed incorrect initial response generation for the NTLM and LOGIN SASL
-  authentication mechanisms when the SASL-IR was detected.
+  Reported by: David Strauss
+  Bug: http://curl.haxx.se/mail/lib-2013-05/0088.html
+
+Daniel Stenberg (8 May 2013)
+- libtest: gitignore more binary files
+
+- servercert: allow empty subject
   
-  Introduced in commit: 6da7dc026c14.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1220
+  Patch by: John Gardiner Myers
 
-- FEATURES: Expanded the supported enhanced IMAP command list
+- [Steve Holme brought this change]
 
-- TODO: Corrected typo in TOC
+  tests: Added new SMTP tests to verify commit 99b40451836d
 
-- TODO: Added IMAP section and removed unused Other protocols section
+- runtests.pl: support nonewline="yes" in client/stdin sections
 
-- TODO: Added graceful base64 decoding failure to SMTP and POP3
+- build: fixed unit1394 for debug and metlink builds
 
-- TODO: Corrected typo on section 10.2 heading
+Kamil Dudka (6 May 2013)
+- unit1394.c: plug the curl tool unit test in
 
-Yang Tse (16 Mar 2013)
-- tests: 96, 558, 1330: strip build subdirectory dependent leading path
+- [Jared Jennings brought this change]
 
-Steve Holme (15 Mar 2013)
-- TODO: Added section 10.2 Initial response to POP3 to do list
+  unit1394.c: basis of a unit test for parse_cert_parameter()
 
-- imap-tests: Corrected copy/paste error in test808 reply data
+- src/Makefile.am: build static lib for unit tests if enabled
 
-Yang Tse (15 Mar 2013)
-- unit1330.c: fix date
+- tool_getparam: ensure string termination in parse_cert_parameter()
 
-- tests: add #96 #558 and #1330
+- tool_getparam: fix memleak in handling the -E option
+
+- tool_getparam: describe what parse_cert_parameter() does
   
-  These verfy that the 'memory tracking' subsystem is actually doing its
-  job when using curl tool (#96), a test in libtest (#558) and also a unit
-  test (#1330), in order to prevent regressions in this functionallity.
+  ... and de-duplicate the code initializing *passphrase
 
-Steve Holme (15 Mar 2013)
-- imap-tests: Added test808 for custom EXAMINE command
+- curl.1: document escape sequences recognized by -E
 
-Daniel Stenberg (15 Mar 2013)
-- HTTP proxy: insert slash in URL if missing
-  
-  curl has been accepting URLs using slightly wrong syntax for a long
-  time, such as when completely missing as slash "http://example.org" or
-  missing a slash when a query part is given
-  "http://example.org?q=foobar".
-  
-  curl would translate these into a legitimate HTTP request to servers,
-  although as was shown in bug #1206 it was not adjusted properly in the
-  cases where a HTTP proxy was used.
-  
-  Test 1213 and 1214 were added to the test suite to verify this fix.
+- [Jared Jennings brought this change]
+
+  curl -E: allow to escape ':' in cert nickname
+
+Marc Hoersken (5 May 2013)
+- curl_schannel.c: Fixed invalid memory access during SSL shutdown
+
+Steve Holme (4 May 2013)
+- smtp: Fix trailing whitespace warning
+
+- smtp: Fix compilation warning
   
-  The test HTTP server was adjusted to allow us to specify test number in
-  the host name only without using any slashes in a given URL.
+  comparison between signed and unsigned integer expressions
+
+- RELEASE-NOTES: synced with 92ef5f19c801
+
+- smtp: Updated RFC-2821 references to RFC-5321
+
+- smtp: Fixed sending of double CRLF caused by first in EOB
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1206
-  Reported by: ScottJi
+  If the mail sent during the transfer contains a terminating <CRLF> then
+  we should not send the first <CRLF> of the EOB as specified in RFC-5321.
+  
+  Additionally don't send the <CRLF> if there is "no mail data" as the
+  DATA command already includes it.
 
-Steve Holme (14 Mar 2013)
-- ftpserver.pl: Added EXAMINE_imap() for IMAP EXAMINE commands
+- tests: Corrected MAIL SIZE for CRLF line endings
   
-  Used hard coded data from RFC-3501 section 6.3.2.
+  ... which was missed in commit: f5c3d9538452
 
-Yang Tse (14 Mar 2013)
-- curl_memory.h: introduce CURLX_NO_MEMORY_CALLBACKS usage possibility
+- tests: Corrected infilesize for CRLF line endings
   
-  This commit alone does not fix anything nor modifies existing
-  interfaces or behaviors, although it is a prerequisite for other
-  fixes.
+  ... which was missed in commit: f5c3d9538452
 
-- Makefile.vc6: add missing files
+- tests: Corrected test1406 to be RFC2821 compliant
 
-Linus Nielsen Feltzing (14 Mar 2013)
-- pipelining: Remove dead code.
+- tests: Corrected test1320 to be RFC2821 compliant
 
-- Multiple pipelines and limiting the number of connections.
+- tests: Corrected typo in test909
   
-  Introducing a number of options to the multi interface that
-  allows for multiple pipelines to the same host, in order to
-  optimize the balance between the penalty for opening new
-  connections and the potential pipelining latency.
+  Introduced in commit: 514817669e9e
+
+- tests: Corrected test909 to be RFC2821 compliant
+
+- tests: Updated test references to 909 from 1411
   
-  Two new options for limiting the number of connections:
+  ...and removed references to libcurl and test1406.
+
+- tests: Renamed test1411 to test909 as this is a main SMTP test
+
+Daniel Stenberg (1 May 2013)
+- [Lars Johannesen brought this change]
+
+  bindlocal: move brace out of #ifdef
   
-  CURLMOPT_MAX_HOST_CONNECTIONS - Limits the number of running connections
-  to the same host. When adding a handle that exceeds this limit,
-  that handle will be put in a pending state until another handle is
-  finished, so we can reuse the connection.
+  The code within #ifdef HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID wrongly had two
+  closing braces when it should only have one, so builds without that
+  define would fail.
   
-  CURLMOPT_MAX_TOTAL_CONNECTIONS - Limits the number of connections in total.
-  When adding a handle that exceeds this limit,
-  that handle will be put in a pending state until another handle is
-  finished. The free connection will then be reused, if possible, or
-  closed if the pending handle can't reuse it.
+  Bug: http://curl.haxx.se/mail/lib-2013-05/0000.html
+
+Steve Holme (30 Apr 2013)
+- smtp: Tidy up to move the eob counter to the per-request structure
   
-  Several new options for pipelining:
+  Move the eob counter from the smtp_conn structure to the SMTP structure
+  as it is associated with a SMTP payload on a per-request basis.
+
+- TODO: Updated following the addition of CURLOPT_SASL_IR
+
+- smtp: Fixed unknown percentage complete in progress bar
   
-  CURLMOPT_MAX_PIPELINE_LENGTH - Limits the pipeling length. If a
-  pipeline is "full" when a connection is to be reused, a new connection
-  will be opened if the CURLMOPT_MAX_xxx_CONNECTIONS limits allow it.
-  If not, the handle will be put in a pending state until a connection is
-  ready (either free or a pipe got shorter).
+  The curl command line utility would display the the completed progress
+  bar with a percentage of zero as the progress routines didn't know the
+  size of the transfer.
+
+Daniel Stenberg (29 Apr 2013)
+- ftpserver: silence warnings
   
-  CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE - A pipelined connection will not
-  be reused if it is currently processing a transfer with a content
-  length that is larger than this.
+  Fix regressions in commit b56e3d43e5d. Make @data local and filter off
+  non-numerical digits from $testno in STATUS_imap.
+
+Steve Holme (29 Apr 2013)
+- ftpserver.pl: Corrected the imap LOGIN response
   
-  CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE - A pipelined connection will not
-  be reused if it is currently processing a chunk larger than this.
+  ...to be more realistic and consistent with the other imap responses.
+
+- tests: Added imap STATUS command test
+
+- tests: Corrected the SMTP tests to be RFC2821 compliant
   
-  CURLMOPT_PIPELINING_SITE_BL - A blacklist of hosts that don't allow
-  pipelining.
+  The emails that are sent to the server during these tests were
+  incorrectly formatted as they contained one or more LF terminated lines
+  rather than being CRLF terminated as per Section 2.3.7 of RFC-2821.
   
-  CURLMOPT_PIPELINING_SERVER_BL - A blacklist of server types that don't allow
-  pipelining.
+  This wasn't a problem for the test suite as the <stdin> data matched the
+  <upload> data but anyone using these tests as reference would be sending
+  incorrect data to a server.
+
+- email: Tidy up of *_perform_authenticate()
   
-  See the curl_multi_setopt() man page for details.
+  Removed the hard returns from imap and pop3 by using the same style for
+  sending the authentication string as smtp. Moved the "Other mechanisms
+  not supported" check in smtp to match that of imap and pop3 to provide
+  consistency between the three email protocols.
 
-Yang Tse (13 Mar 2013)
-- tool_main.c: remove redundant vms_show storage-class specifier
+- smtp: Updated limit check to be more readable like the check in pop3
+
+- pop3: Added 255 octet limit check when sending initial response
   
-  vms_show 'extern' storage-class specifier removed from tool_main.c due to...
+  Added 255 octet limit check as per Section 4. Paragraph 8 of RFC-5034.
+
+- DOCS: Corrected line length of recent Secure Transport changes
+
+Nick Zitzmann (27 Apr 2013)
+- darwinssl: add TLS crypto authentication
   
-  - Advice from Tor Arntsen: http://curl.haxx.se/mail/lib-2013-03/0164.html
+  Users using the Secure Transport (darwinssl) back-end can now use a
+  certificate and private key to authenticate with a site using TLS. Because
+  Apple's security system is based around the keychain and does not have any
+  non-public function to create a SecIdentityRef data structure from data
+  loaded outside of the Keychain, the certificate and private key have to be
+  loaded into the Keychain first (using the certtool command line tool or
+  the Security framework's C API) before we can find it and use it.
+
+Steve Holme (27 Apr 2013)
+- Corrected version numbers after bump
+
+Daniel Stenberg (27 Apr 2013)
+- bump version
   
-  - HP OpenVMS docs stating that 'Extern is the default storage class for
-    variables declared outside a function.'
-    http://h71000.www7.hp.com/commercial/c/docs/dec_c_help_5.html
-    (Storage_Classes section)
+  Since we're adding new stuff, the next release will bump the minor
+  version and we're looking forward to 7.31.0
 
-- test509: libcurl initialization with memory callbacks and actual usage
+Steve Holme (27 Apr 2013)
+- RELEASE-NOTES: synced with f4e6e201b146
 
-Steve Holme (13 Mar 2013)
-- pop3: Removed unnecessary transfer cancellation
+- DOCS: Updated following the addition of CURLOPT_SASL_IR
   
-  Following commit e450f66a02d8 and the changes in the multi interface
-  being used internally, from 7.29.0, the transfer cancellation in
-  pop3_dophase_done() is no longer required.
+  Documented the the option in curl_easy_setopt() and added it to
+  symbols-in-versions.
 
-Yang Tse (13 Mar 2013)
-- Makefile.am: add VMS files not being included in tarball
+- tests: Corrected command line arguments in test907 and test908
 
-- [Tom Grace brought this change]
+- tests: Added SMTP AUTH with initial response tests
 
-  build_vms.com: VMS build fixes
+- tests: Updated SMTP tests to decouple client initial response
   
-  Added missing slash in cc_full_list.
-  Removed unwanted extra quotes inside symbol tool_main
-  for non-VAX architectures that triggered link failure.
-  Replaced curl_sys_inc with sys_inc.
+  Updated test903 and test904 following the addition of CURLOPT_SASL_IR
+  as the default behaviour of SMTP AUTH responses is now to not include
+  the initial response. New tests with --sasl-ir support to follow.
 
-- [Tom Grace brought this change]
+- imap: Added support for overriding the SASL initial response
+  
+  In addition to checking for the SASL-IR capability the user can override
+  the sending of the client's initial response in the AUTHENTICATION
+  command with the use of CURLOPT_SASL_IR should the server erroneously
+  not report SASL-IR when it does support it.
 
-  tool_main.c: fix VMS global variable storage-class specifier
+- smtp: Added support for disabling the SASL initial response
   
-  An extern submits a psect and a global reference to the linker to point
-  to it. Using "extern int vms_show = 0" also creates a globaldef.
+  Updated the default behaviour of sending the client's initial response in the AUTH
+  command to not send it and added support for CURLOPT_SASL_IR to allow the user to
+  specify including the response.
   
-  The use of the extern by itself does declare a psect but does not declare
-  a globalsymbol. It does declare a globalref. But the linker needs one and
-  only one globaldef or there is an error.
-
-Patrick Monnerat (12 Mar 2013)
-- OS400: synchronize RPG binding
+  Related Bug: http://curl.haxx.se/mail/lib-2012-03/0114.html
+  Reported-by: Gokhan Sengun
 
-Steve Holme (12 Mar 2013)
-- pop3: Fixed continuous wait when using --ftp-list
+- pop3: Added support for enabling the SASL initial response
   
-  Don't initiate a transfer when using --ftp-list.
+  Allowed the user to specify whether to send the client's intial response
+  in the AUTH command via CURLOPT_SASL_IR.
 
-Kamil Dudka (12 Mar 2013)
-- [Zdenek Pavlas brought this change]
+- sasl-ir: Added --sasl-ir option to curl command line tool
 
-  curl_global_init: accept the CURL_GLOBAL_ACK_EINTR flag
+- sasl-ir: Added CURLOPT_SASL_IR to enable/disable the SASL initial response
+
+Daniel Stenberg (26 Apr 2013)
+- curl_easy_init: use less mallocs
   
-  The flag can be used in pycurl-based applications where using the multi
-  interface would not be acceptable because of the performance lost caused
-  by implementing the select() loop in python.
+  By introducing an internal alternative to curl_multi_init() that accepts
+  parameters to set the hash sizes, easy handles will now use tiny socket
+  and connection hash tables since it will only ever add a single easy
+  handle to that multi handle.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1168
-  Downstream Bug: https://bugzilla.redhat.com/919127
+  This decreased the number mallocs in test 40 (which is a rather simple
+  and typical easy interface use case) from 1142 to 138. The maximum
+  amount of memory allocated used went down from 118969 to 78805.
 
-- easy: do not ignore poll() failures other than EINTR
+Steve Holme (26 Apr 2013)
+- ftpserver.pl: Fixed imap logout confirmation data
+  
+  An IMAP server should response with the BYE continuation response before
+  confirming the LOGOUT command was successful.
 
-Yang Tse (12 Mar 2013)
-- curl.h: stricter CURL_EXTERN linkage decorations logic
+Daniel Stenberg (26 Apr 2013)
+- ftp_state_pasv_resp: connect through proxy also when set by env
   
-  No API change involved.
+  When connecting back to an FTP server after having sent PASV/EPSV,
+  libcurl sometimes didn't use the proxy properly even though the proxy
+  was used for the initial connect.
   
-  Info: http://curl.haxx.se/mail/lib-2013-02/0234.html
-
-Daniel Stenberg (11 Mar 2013)
-- THANKS: Latin-1'ified Jiri's name
+  The function wrongly checked for the CURLOPT_PROXY variable to be set,
+  which made it act wrongly if the proxy information was set with an
+  environment variable.
+  
+  Added test case 711 to verify (based on 707 which uses --socks5). Also
+  added test712 to verify another variation of setting the proxy: with
+  --proxy socks5://
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1218
+  Reported-by: Zekun Ni
 
-Steve Holme (11 Mar 2013)
-- test806: Added CRLF to reply data to be compliant with RFC-822
+Kamil Dudka (26 Apr 2013)
+- [Zdenek Pavlas brought this change]
 
-Daniel Stenberg (11 Mar 2013)
-- test805: added crlf newlines to make data size match
+  url: initialize speed-check data for file:// protocol
   
-  since mails sent are supposed to have CRLF line endings I added them and
-  now the data size after (\Seen) matches again properly
+  ... in order to prevent an artificial timeout event based on stale
+  speed-check data from a previous network transfer.  This commit fixes
+  a regression caused by 9dd85bced56f6951107f69e581c872c1e7e3e58e.
+  
+  Bug: https://bugzilla.redhat.com/906031
 
-- test: fix newline for the data check of 807
+Daniel Stenberg (25 Apr 2013)
+- test709: clarify the test in the name
 
-Yang Tse (11 Mar 2013)
-- test801 to test807: fix protocol section line endings
+- sshserver: disable StrictHostKeyChecking
+  
+  I couldn't figure out why the host key logic isn't working, but having
+  it set to yes prevents my SSH-based test cases to run. I also don't see
+  a strong need to use strict host key checking on this test server.
+  
+  So I disabled it.
 
-Steve Holme (10 Mar 2013)
-- Makefile.am: Corrected a couple of spurious tab characters
+- runtests: log more commands in verbose mode
   
-  Corrected a couple of tab characters between test702 and test703, and
-  between test900 and test901 which should be spaces.
+  ... to aid tracking down failures
 
-- [Jiri Hruska brought this change]
+Steve Holme (25 Apr 2013)
+- TODO: Corrected copy/paste typo
 
-  imap: Added test807 for custom request functionality (STORE)
+- TODO: Added new ideas for future SMTP, POP3 and IMAP features
 
-- [Jiri Hruska brought this change]
+- TODO: Updated following the addition of ;auth=<MECH> support
 
-  imap: Added test806 for IMAP (folder) LIST command
+- DOCS: Minor rewording / clarification of host name protocol detection
 
-- [Jiri Hruska brought this change]
+- RELEASE-NOTES: synced with a8c92cb60890
 
-  imap: Added test805 for APPEND functionality
+- DOCS: Added reference to IETF draft for SMTP URL Interface
+  
+  ...when mentioning login options. Additional minor clarification of
+  "Windows builds" to be "Windows builds with SSPI"as a way of enabling
+  NTLM as Windows builds may be built with OpenSSL to enable NTLM or
+  without NTLM support altogether.
 
-- [Jiri Hruska brought this change]
+Linus Nielsen Feltzing (23 Apr 2013)
+- HISTORY: Fix spelling error.
 
-  imap: Added test804 for skipping SELECT if in the same mailbox
+Steve Holme (23 Apr 2013)
+- DOCS: Reworked the scheme calculation explanation under CURLOPT_URL
 
-- [Jiri Hruska brought this change]
+- url: Added smtp and pop3 hostnames to the protocol detection list
 
-  imap: Added test802 and test803 for UIDVALIDITY verification
+Daniel Stenberg (23 Apr 2013)
+- HISTORY: correct some years/dates
   
-  Added one test for a request with matching UIDVALIDITY and one which is
-  a mismatched request that will fail.
+  Thanks to archive.org's wayback machine I updated this document with
+  some facts from the early httpget/urlget web page:
+  
+  http://web.archive.org/web/19980216125115/http://www.inf.ufrgs.br/~sagula/urlget.html
 
-- [Jiri Hruska brought this change]
+- [Alessandro Ghedini brought this change]
 
-  imap: Added test801 for UID and SECTION URL parameters
+  tests: add test1511 to check timecond clean-up
+  
+  Verifies the timecond fix in commit c49ed0b6c0f
 
-- [Jiri Hruska brought this change]
+- [Alessandro Ghedini brought this change]
 
-  imap-tests: Accept quoted parameters in ftpserver.pl
+  getinfo.c: reset timecond when clearing session-info variables
   
-  Any IMAP parameter can come in escaped and in double quotes. Added a
-  simple function to unquote the command parameters and applied it to
-  the IMAP command handlers.
+  Bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=705783
+  Reported-by: Ludovico Cavedon <cavedon@debian.org>
 
-- [Jiri Hruska brought this change]
+Steve Holme (22 Apr 2013)
+- DOCS: Added information about login options to CURLOPT_USERPWD
 
-  tests: Fix ftpserver.pl indentation
-  
-  The whole of FETCH_imap() had one extra space of indentation, whilst
-  APPEND_imap() used indentation of 2 instead of 4 in places.
+- DOCS: Added information about login options in the URL
 
-- Makefile.am: Corrected end of line filler character
+- url: Fixed missing length check in parse_proxy()
   
-  The majority of lines, that specify a test file for inclusion, end with
-  a tab character before the slash whilst some end with a space. Corrected
-  those that end with a space to end with a tab character as well.
+  Commit 11332577b3cb removed the length check that was performed by the
+  old scanf() code.
 
-- email-tests: Updated the test data that corresponds to the test number
+- url: Fixed crash when no username or password supplied for proxy
   
-  Finished segregating the email protocol tests, into their own protocol
-  based ranges, in preparation of adding more e-mail related tests to the
-  test suite.
+  Fixed an issue in parse_proxy(), introduced in commit 11332577b3cb,
+  where an empty username or password (For example: http://:@example.com)
+  would cause a crash.
 
-- email-tests: Renamed the IMAP test to be 800
-  
-  Continued segregating the email protocol tests, into their own protocol
-  based ranges, in preparation of adding more e-mail related tests to the
-  test suite.
+- url: Removed unused text length constants
+
+- url: Updated proxy URL parsing to use parse_login_details()
 
-- email-tests: Renamed the SMTP tests to be in the range 900-906
+- url: Tidy up of setstropt_userpwd() parameters
   
-  Continued segregating the email protocol tests, into their own protocol
-  based ranges, in preparation of adding more e-mail related tests to the
-  test suite.
+  Updated the naming convention of the login parameters to match those of
+  other functions.
 
-- email-tests: Renamed the POP3 tests to be in the range 850-857
+- url: Tidy up of code and comments following recent changes
   
-  Started segregating the email protocol tests, into their own protocol
-  based ranges, in preparation of adding more e-mail related tests to the
-  test suite.
+  Tidy up of variable names and comments in setstropt_userpwd() and
+  parse_login_details().
 
-Daniel Stenberg (10 Mar 2013)
-- hiperfifo: updated to use current libevent API
+- url: Simplified setstropt_userpwd() following recent changes
   
-  Patch by: Myk Taylor
+  There is no need to perform separate clearing of data if a NULL option
+  pointer is passed in. Instead this operation can be performed by simply
+  not calling parse_login_details() and letting the rest of the code do
+  the work.
 
-Steve Holme (10 Mar 2013)
-- imap: Reworked some function descriptions
+- url: Correction to scope of if statements when setting data
 
-- imap: Added some missing comments to imap_sendf()
+- url: Fixed memory leak in setstropt_userpwd()
+  
+  setstropt_userpwd() was calling setstropt() in commit fddb7b44a79d to
+  set each of the login details which would duplicate the strings and
+  subsequently cause a memory leak.
 
-- email: Removed hard returns from init functions
+- RELEASE-NOTES: synced with d535c4a2e1f7
 
-Daniel Stenberg (9 Mar 2013)
-- curl_multi_wait: avoid second loop if nothing to do
-  
-  ... hopefully this will also make clang-analyzer stop warning on
-  potentional NULL dereferences (which were false positives anyway).
+- url: Added overriding of URL login options from CURLOPT_USERPWD
 
-- multi_runsingle: avoid NULL dereference
+- tool_paramhlp: Fixed options being included in username
   
-  When Curl_do() returns failure, the connection pointer could be NULL so
-  the code path following needs to that that into account.
+  Fix to prevent the options from being displayed when curl requests the
+  user's password if the following command line is specified:
   
-  Bug: http://curl.haxx.se/mail/lib-2013-03/0062.html
-  Reported by: Eric Hu
+  --user username;options
 
-Steve Holme (9 Mar 2013)
-- imap: Re-factored all perform based functions
+- url: Added support for parsing login options from the CURLOPT_USERPWD
   
-  Standardised the naming of all perform based functions to be in the form
-  imap_perform_something().
-
-Daniel Stenberg (9 Mar 2013)
-- [CÃ©dric Deltheil brought this change]
-
-  examples/getinmemory.c: abort the transfer if not enough memory
+  In addition to parsing the optional login options from the URL, added
+  support for parsing them from CURLOPT_USERPWD, to allow the following
+  supported command line:
   
-  No more use exit(3) but instead tell libcurl that no byte has been
-  written to let it return a `CURLE_WRITE_ERROR`. In addition, check
-  curl easy handle return code.
+  --user username:password;options
 
-- RELEASE-NOTES: synced with ca3c0ed3a9c
+- url: Added bounds checking to parse_login_details()
   
-  8 more bugfixes, one change and a bunch of contributors
+  Added bounds checking when searching for the separator characters within
+  the login string as this string may not be NULL terminated (For example
+  it is the login part of a URL). We do this in preference to allocating a
+  new string to copy the login details into which could then be passed to
+  parse_login_details() for performance reasons.
 
-Yang Tse (9 Mar 2013)
-- Makefile.am: empty AM_LDFLAGS definition for automake 1.7 compatibility
+- url: Added size_t cast to pointer based length calculations
 
-Steve Holme (9 Mar 2013)
-- imap: Added description comments to all perform based functions
+- url: Corrected minor typo in comment
 
-- imap: Removed the need for separate custom request functions
+Daniel Stenberg (18 Apr 2013)
+- CURL_CHECK_CA_BUNDLE: don't check for paths when cross-compiling
   
-  Moved the custom request processing into the LIST command as the logic
-  is the same.
-
-- imap: Corrected typo in comment
-
-Yang Tse (9 Mar 2013)
-- Makefile.am: empty AM_LDFLAGS definition for automake 1.7 compatibility
-
-Steve Holme (9 Mar 2013)
-- imap: Moved imap_logout() to be grouped with the other perform functions
-
-- email: Updated the function descriptions for the logout / quit functions
+  When cross-compiling we can't scan and detect existing files or paths.
   
-  Updated the function description comments following commit 4838d196fdbf.
+  Bug: http://curl.haxx.se/mail/lib-2013-04/0294.html
 
-- email: Simplified the logout / quit functions
-  
-  Moved the blocking state machine to the disconnect functions so that the
-  logout / quit functions are only responsible for sending the actual
-  command needed to logout or quit.
-  
-  Additionally removed the hard return on failure.
+- [Ishan SinghLevett brought this change]
 
-- email: Tidied up the *_regular_transfer() functions
+  usercertinmem.c: add example showing user cert in memory
   
-  Added comments and simplified convoluted dophase_done comparison.
+  Relies on CURLOPT_SSL_CTX_FUNCTION, which is OpenSSL specific
 
-- email: Simplified nesting of if statements in *_doing() functions
+Steve Holme (18 Apr 2013)
+- url: Fix chksrc longer than 79 columns warning
 
-Daniel Stenberg (8 Mar 2013)
-- RELEASE-NOTES: mention that krb4 is up for consideration
+- url: Fix incorrect variable type for result code
 
-Steve Holme (8 Mar 2013)
-- imap: Fixed handling of untagged responses for the STORE custom command
+- url: Fix compiler warning
   
-  Added an exception, for the STORE command, to the untagged response
-  processor in imap_endofresp() as servers will back respones containing
-  the FETCH keyword instead.
+  signed and unsigned type in conditional expression
 
-Yang Tse (8 Mar 2013)
-- curlbuild.h.dist: enhance non-configure GCC ABI detection logic
-  
-  GCC specific adjustments:
-  
-  - check __ILP32__ before 32 and 64bit processor architectures in
-    order to detect ILP32 programming model on 64 bit processors
-    which, of course, also support LP64 programming model, when using
-    gcc 4.7 or newer.
-  
-  - keep 32bit processor architecture checks in order to support gcc
-    versions older than 4.7 which don't define __ILP32__
+- url: Moved parsing of login details out of parse_url_login()
   
-  - check __LP64__ for gcc 3.3 and newer, while keeping 64bit processor
-    architecture checks for older versions which don't define __LP64__
+  Separated the parsing of login details from the processing of them in
+  parse_url_login() ready for use by setstropt_userpwd().
 
-- curlbuild.h.dist: fix GCC build on ARM systems without configure script
+- url: Re-factored set_userpass() and parse_url_userpass()
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1205
-  Reported by: technion
-
-- [Gisle Vanem brought this change]
-
-  polarssl.c: fix header filename typo
+  Re-factored these functions to reflect their new behaviour following the
+  addition of login options.
 
-- configure: use XC_LIBTOOL for portability across libtool versions
+- url: Reworked URL parsing to allow overriding by CURLOPT_USERPWD
 
-- xc-lt-iface.m4: provide XC_LIBTOOL macro
+Daniel Stenberg (18 Apr 2013)
+- maketgz: make bzip2 creation work with Parallel BZIP2 too
+  
+  Apparently the previous usage didn't work with that implementation,
+  while this updated version works with at least both Parallel BZIP2
+  v1.1.8 and regular bzip "Version 1.0.6, 6-Sept-2010".
 
-Steve Holme (7 Mar 2013)
-- imap: Fixed SELECT not being performed for custom requests
+Linus Nielsen Feltzing (18 Apr 2013)
+- Add tests/http_pipe.py to the tarball build
 
-- email: Minor code tidy up following recent changes
+Steve Holme (16 Apr 2013)
+- smtp: Re-factored all perform based functions
   
-  Removed unwanted braces and added variable initialisation.
-
-- DOCS: Corrected the IMAP URL grammar of the UIDVALIDITY parameter
+  Standardised the naming of all perform based functions to be in the form
+  smtp_perform_something().
 
-- FEATURES: Provided a little clarity in some IMAP features
+- smtp: Added description comments to all perform based functions
 
-- email: Optimised block_statemach() functions
-  
-  Optimised the result test in each of the block_statemach() functions.
+- smtp: Moved smtp_quit() to be with the other perform functions
 
-- DOCS: Added the list command to the IMAP URL section
-  
-  Added examples of the list command and clarified existing example URLs
-  following recent changes.
+- smtp: Moved smtp_rcpt_to() to be with the other perform functions
 
-- FEATURES: Updated for recent imap additions
-  
-  Updated the imap features list, corrected a typo in the smtp features
-  and clarified a pop3 feature.
+- smtp: Moved smtp_mail() to be with the other perform functions
 
-Daniel Stenberg (7 Mar 2013)
-- version bump: the next release will be 7.30.0
+Daniel Stenberg (16 Apr 2013)
+- [Wouter Van Rooy brought this change]
 
-- checksrc: ban unsafe functions
-  
-  The list of unsafe functions currently consists of sprintf, vsprintf,
-  strcat, strncat and gets.
+  curl-config: don't output static libs when they are disabled
   
-  Subsequently, some existing code needed updating to avoid warnings on
-  this.
-
-Steve Holme (7 Mar 2013)
-- RELEASE-NOTES: Added missing imap fixes and additions
+  Curl-config outputs static libraries even when they are disabled in
+  configure.
   
-  With all the recent imap changes it wasn't clear what new features and
-  fixes should be included in the release notes.
-
-Nick Zitzmann (6 Mar 2013)
-- RELEASE-NOTES: brought this up-to-date with the latest changes
+  This causes problems with the build of pycurl.
 
-Steve Holme (6 Mar 2013)
-- [Jiri Hruska brought this change]
+- [Dave Reisner brought this change]
 
-  imap: Fixed test801 and test1321 to specify a message UID
+  docs/libcurl: fix formatting in manpage
   
-  Just a folder list would be retrieved if UID was not specified now.
+  Commit c3ea3eb6 introduced some minor cosmetic errors in
+  curl_mutli_socket_action(3).
 
-- [Jiri Hruska brought this change]
+- [Paul Howarth brought this change]
 
-  imap: Fixed ftpserver.pl to allow verification even through LIST command
+  Add extra libs for lib1900 and lib2033 test programs
   
-  Commit 198012ee inadvertently broke LIST_imap().
+  These are needed in cases where clock_gettime is used, from librt.
 
-- imap: Tidied up the APPEND and final APPEND response functions
+Dan Fandrich (15 Apr 2013)
+- FAQ: mention that the network connection can be monitored
   
-  Removed unnecessary state changes on failure and setting of result codes
-  on success.
+  Also note the prohibition on sharing handles across threads.
 
-- imap: Tidied up the final FETCH response function
-  
-  Removed unnecessary state change on failure and setting of result code on
-  success.
+Steve Holme (15 Apr 2013)
+- pop3: Added missing comment for pop3_state_apop_resp()
 
-- imap: Tidied up the LIST response function
+- smtp: Updated the coding style of smtp_state_servergreet_resp()
   
-  Reworked comments as they referenced custom commands, removed
-  unnecessary state change on failure and setting of result code on
-  success.
+  Updated the coding style, in this function, to be consistant with other
+  response functions rather then performing a hard return on failure.
 
-- imap: Removed the custom request response function
+- pop3: Updated the coding style of pop3_state_servergreet_resp()
   
-  Removed imap_state_custom_resp() as imap_state_list_resp() provides the
-  same functionality.
-
-- [Jiri Hruska brought this change]
+  Updated the coding style, in this function, to be consistent with other
+  response functions rather then performing a hard return on failure.
 
-  imap: Updated ftpserver.pl to be more compliant, added new commands
-  
-  Enriched IMAP capabilities of ftpserver.pl in order to be able to
-  add tests for the new IMAP features.
+- pop3: Re-factored all perform based functions
   
-  * Added support for APPEND - Saves uploaded data to log/upload.$testno
-  * Added support for LIST - Returns the contents of <reply/> section in
-    the current test, like e.g FETCH.
-  * Added support for STORE - Returns hardcoded updated flags
-  * Changed handling of SELECT - Returns much more information in the
-    usual set of untagged responses; uses hardcoded data from an example
-    in the IMAP RFC
-  * Changed handling of FETCH - Fixed response format
+  Standardised the naming of all perform based functions to be in the form
+  pop3_perform_something() following the changes made to IMAP.
 
-- imap: Added check for empty UID in FETCH command
-  
-  As the UID has to be specified by the user for the FETCH command to work
-  correctly, added a check to imap_fetch(), although strictly speaking it
-  is protected by the call from imap_perform().
+- pop3: Added description comments to all perform based functions
 
-Kamil Dudka (6 Mar 2013)
-- nss: fix misplaced code enabling non-blocking socket mode
-  
-  The option needs to be set on the SSL socket.  Setting it on the model
-  takes no effect.  Note that the non-blocking mode is still not enabled
-  for the handshake because the code is not yet ready for that.
+- pop3: Moved pop3_quit() to be with the other perform functions
 
-Daniel Stenberg (6 Mar 2013)
-- imap: fix compiler warning
+- pop3: Moved pop3_command() to be with the other perform functions
   
-  imap.c:694:21: error: unused variable 'imapc' [-Werror=unused-variable]
-
-Steve Holme (5 Mar 2013)
-- imap: Added support for list command
+  Started to apply the same tidy up to the POP3 code as applied to the
+  IMAP code in the 7.30.0 release.
 
-- imap: Added list perform and response handler functions
+- RELEASE-NOTES: Removed erroneous spaces
 
-- imap: Introduced IMAP_LIST state
+- RELEASE-NOTES: synced with 8723cade21fb
 
-- imap: Small tidy up of imap_select() to match imap_append()
+- smtp: Added support for ;auth=<mech> in the URL
   
-  Updated the style of imap_select() before adding the LIST command.
+  Added support for specifying the preferred authentication mechanism in
+  the URL as per Internet-Draft 'draft-earhart-url-smtp-00'.
 
-- imap: Moved mailbox check from the imap_do() function
+- pop3: Reworked authentication type constants
   
-  In preparation for the addition of the LIST command, moved the mailbox
-  check from imap_do() to imap_select() and imap_append().
+  ... to use left-shifted values, like those defined in curl.h, rather
+  than 16-bit hexadecimal values.
 
-- curl_setup.h: Added S_IRDIR() macro for compilers that don't support it
-  
-  Commit 26eaa8383001 introduces the use of S_ISDIR() yet some compilers,
-  such as MSVC don't support it, so we must define a substitute using
-  file flags and mask.
+- pop3: Small consistency tidy up
 
-Daniel Stenberg (4 Mar 2013)
-- AddFormData: prevent only directories from being posted
-  
-  Commit f4cc54cb4746ae5a6d (shipped as part of the 7.29.0 release) was a
-  bug fix that introduced a regression in that while trying to avoid
-  allowing directory names, it also forbade "special" files like character
-  devices and more. like "/dev/null" as was used by Oliver who reported
-  this regression.
+- pop3: Added support for ;auth=<mech> in the URL
   
-  Reported by: Oliver GondÅ¾a
-  Bug: http://curl.haxx.se/mail/archive-2013-02/0040.html
+  Added support for specifying the preferred authentication type and SASL
+  mechanism in the URL as per RFC-2384.
 
-Nick Zitzmann (3 Mar 2013)
-- darwinssl: fix infinite loop if server disconnected abruptly
-  
-  If the server hung up the connection without sending a closure alert,
-  then we'd keep probing the socket for data even though it's dead. Now
-  we're ready for this situation.
+- imap: Added support for ;auth=<mech> in the URL
   
-  Bug: http://curl.haxx.se/mail/lib-2013-03/0014.html
-  Reported by: Aki Koskinen
-
-Steve Holme (3 Mar 2013)
-- imap: Added comments to imap_append()
-
-- [Jiri Hruska brought this change]
+  Added support for specifying the preferred authentication mechanism in
+  the URL as per RFC-5092.
 
-  imap: Added required mailbox check for FETCH and APPEND commands
+- sasl: Reworked SASL mechanism constants
+  
+  ... to use left-shifted values, like those defined in curl.h, rather
+  than 16-bit hexadecimal values.
 
-- pingpong.c: Fix enumerated type mixed with another type
+- sasl: Added predefined preferred mechanism values
+  
+  In preparation for the upcoming changes to IMAP, POP3 and SMTP added
+  preferred mechanism values.
 
-- smtp: Updated the coding style for state changes after a send operation
+- url: Added support for parsing login options from the URL
   
-  Some state changes would be performed after a failure test that
-  performed a hard return, whilst others would be performed within a test
-  for success. Updated the code, for consistency, so all instances are
-  performed within a success test.
-
-- pop3: Updated the coding style for state changes after a send operation
+  As well as parsing the username and password from the URL, added support
+  for parsing the optional options part from the login details, to allow
+  the following supported URL format:
   
-  Some state changes would be performed after a failure test that
-  performed a hard return, whilst others would be performed within a test
-  for success. Updated the code, for consistency, so all instances are
-  performed within a success test.
-
-- imap: Fixed typo in variable assignment
-
-- [Jiri Hruska brought this change]
-
-  imap: Fixed custom request handling in imap_done()
+  schema://username:password;options@example.com/path?q=foobar
   
-  Fixed imap_done() so that neither the FINAL states are not entered when
-  a custom command has been performed.
-
-- [Jiri Hruska brought this change]
+  This will only be used by IMAP, POP3 and SMTP at present but any
+  protocol that may be given login options in the URL will be able to
+  add support for them.
 
-  imap: Enabled custom requests in imap_select_resp()
+- smtp: Fix compiler warning
   
-  Changed imap_select_resp() to invoke imap_custom() instead of
-  imap_fetch() after the mailbox has been selected if a custom
-  command has been set.
+  warning: unused variable 'smtp' introduced in commit 73cbd21b5ee6.
 
-- [Jiri Hruska brought this change]
+- smtp: Moved parsing of url path into separate function
 
-  imap: Enabled custom requests in imap_perform()
+Daniel Stenberg (12 Apr 2013)
+- FTP: handle a 230 welcome response
   
-  Modified imap_perform() to start with the custom command instead of
-  SELECT when a custom command is to be performed and no mailbox has
-  been given.
-
-- [Jiri Hruska brought this change]
-
-  imap: Added custom request perform and response handler functions
+  ...instead of the 220 we otherwise expect.
   
-  Added imap_custom(), which initiates the custom command processing,
-  and an associated response handler imap_state_custom_resp(), which
-  handles any responses by sending them to the client as body data.
+  Made the ftpserver.pl support sending a custom "welcome" and then
+  created test 1219 to verify this fix with such a 230 welcome.
   
-  All untagged responses with the same name as the first word of the
-  custom request string are accepted, with the exception of SELECT and
-  EXAMINE which have responses that cannot be easily identified. An
-  extra check has been provided for them so that any untagged responses
-  are accepted for them.
+  Bug: http://curl.haxx.se/mail/lib-2013-02/0102.html
+  Reported by: Anders Havn
 
-- pop3: Fixed unnecessary parent structure reference
+- configure: try pthread_create without -lpthread
   
-  Updated pop3 code following recent imap changes.
-
-- [Jiri Hruska brought this change]
-
-  imap: Added custom request parsing
+  For libc variants without a spearate pthread lib (like bionic), try
+  using pthreads without the pthreads lib first and only if that fails try
+  the -lpthread linker flag.
   
-  Added imap_parse_custom_request() for parsing the CURLOPT_CUSTOMREQUEST
-  parameter which URL decodes the value and separates the request from
-  any parameters - This makes it easier to filter untagged responses
-  by the request command.
-
-- [Jiri Hruska brought this change]
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1216
+  Reported by: Duncan
 
-  imap: Introduced custom request parameters
+- FTP: access files in root dir correctly
+  
+  Accessing a file with an absolute path in the root dir but with no
+  directory specified was not handled correctly. This fix comes with four
+  new test cases that verify it.
   
-  Added custom request parameters to the per-request structure.
+  Bug: http://curl.haxx.se/mail/lib-2013-04/0142.html
+  Reported by: Sam Deane
 
-- [Jiri Hruska brought this change]
+Steve Holme (12 Apr 2013)
+- pop3: Reworked the function description for Curl_pop3_write()
 
-  imap: Introduced IMAP_CUSTOM state
+- pop3: Added function description to pop3_parse_custom_request()
 
-- imap: Minor code tidy up
-  
-  Minor tidy up of code layout and comments following recent changes.
+- pop3: Moved utility functions to end of pop3.c
 
-- imap: Simplified the imap_state_append_resp() function
+Nick Zitzmann (12 Apr 2013)
+- darwinssl: add TLS session resumption
   
-  Introduced the result code variable to simplify the state changes and
-  remove the hard returns.
+  This ought to speed up additional TLS handshakes, at least in theory.
 
-- imap: Changed successful response logic in imap_state_append_resp()
-  
-  For consistency changed the logic of the imap_state_append_resp()
-  function to test for an unsucessful continuation response rather than a
-  succesful one.
+Steve Holme (12 Apr 2013)
+- imap: Added function description to imap_parse_custom_request()
 
-- imap: Standardised imapcode condition tests
+- imap: Moved utility functions to end of imap.c (Part 3/3)
   
-  For consistency changed two if(constant != imapcode) tests to be
-  if(imapcode != constant).
-
-- imap: Moved imap_append() to be with the other perform functions
+  Moved imap_is_bchar() be with the other utility based functions.
 
-- [Jiri Hruska brought this change]
+- imap: Moved utility functions to end of imap.c (Part 2/3)
+  
+  Moved imap_parse_url_path() and imap_parse_custom_request() to the end of the
+  file allowing all utility functions to be grouped together.
 
-  imap: Enabled APPEND support in imap_perform()
+- imap: Moved utility functions to end of imap.c (Part 1/3)
   
-  Added logic in imap_perform() to perform an APPEND rather than SELECT
-  and FETCH if an upload has been specified.
+  Moved imap_atom() and imap_sendf() to the end of the file allowing all
+  utility functions to be grouped together.
 
-- [Jiri Hruska brought this change]
+- imap: Corrected function description for imap_connect()
 
-  imap: Implemented APPEND final processing
+Kamil Dudka (12 Apr 2013)
+- tests: prevent test206, test1060, and test1061 from failing
   
-  The APPEND operation needs to be performed in several steps:
-    1) We send "<tag> APPEND <mailbox> <flags> {<size>}\r\n"
-    2) Server responds with continuation respose "+ ...\r\n"
-    3) We start the transfer and send <size> bytes of data
-    4) Only now we end the request command line by sending "\r\n"
-    5) Server responds with "<tag> OK ...\r\n"
+  ... in case runtests.pl is invoked with non-default -b option
   
-  This commit performs steps 4 and 5, in the DONE phase, as more
-  processing is required after the transfer.
+  Fixes a regression caused by 1e29d275c643ef6aab7948f0f55a7a9397e56b42.
 
-- [Jiri Hruska brought this change]
+Daniel Stenberg (12 Apr 2013)
+- [David Strauss brought this change]
 
-  imap: Added APPEND perform and response handler functions
+  libcurl-share.3: update what it does and does not share.
   
-  Added imap_append() function to initiate upload and imap_append_resp()
-  to handle the continuation response and start the transfer.
-
-- [Jiri Hruska brought this change]
-
-  imap: Introduced IMAP_APPEND and IMAP_APPEND_FINAL states
+  Update sharing interface documentation to provide exhaustive list of
+  what it does and does not share.
 
-- [Jiri Hruska brought this change]
+- THANKS: remove duplicated names
 
-  imap: Updated setting of transfer variables in imap_state_fetch_resp()
-  
-  Add number of bytes retrieved from the PP cache to req.bytecount and set
-  req.maxdownload only when starting a proper download.
+- bump: start working towards next release
 
-- [Jiri Hruska brought this change]
+- THANKS: added people from the 7.30.0 RELEASE-NOTES
 
-  imap: Improved FETCH response parsing
-  
-  Added safer parsing of the untagged FETCH response line and the size of
-  continuation data.
+Version 7.30.0 (12 Apr 2013)
 
-- imap: Fixed accidentally lossing the result code
+Daniel Stenberg (12 Apr 2013)
+- RELEASE-NOTES: cleaned up for 7.30 (synced with 5c5e1a1cd20)
   
-  Accidentally lost the result code in imap_state_capability() and
-  imap_state_login() with commit b06a78622609.
-
-- imap: Another minor comment addition / tidy up
+  Most notable the security advisory:
+  http://curl.haxx.se/docs/adv_20130412.html
 
-- imap: Updated the coding style for state changes after a send operation
+- test1218: another cookie tailmatch test
   
-  Some state changes would be performed after a failure test that
-  performed a hard return, whilst others would be performed within a test
-  for success. Updated the code, for consistency, so all instances are
-  performed within a success test.
-
-- pop3 / smtp: Small comment tidy up
+  ... and make 1216 also verify it with a file input
   
-  Small tidy up to keep some comments consistant across each of the email
-  protocols.
+  These tests verify commit 3604fde3d3c9b0d, the fix for the "cookie
+  domain tailmatch" vulnerability. See
+  http://curl.haxx.se/docs/adv_20130412.html
 
-- [Jiri Hruska brought this change]
+- [YAMADA Yasuharu brought this change]
 
-  imap: FETCH response handler cleanup before further changes
+  cookie: fix tailmatching to prevent cross-domain leakage
   
-  Removed superfluous NULL assignment after Curl_safefree() and rewrote
-  some comments and logging messages.
-
-- pop3: Small tidy up of function arguments
-
-- imap: Small tidy up of function arguments
-
-- smtp: Corrected debug message for POP3_AUTH_FINAL constant
+  Cookies set for 'example.com' could accidentaly also be sent by libcurl
+  to the 'bexample.com' (ie with a prefix to the first domain name).
   
-  Following commit ad3177da24b8 corrected the debug message in state()
-  from AUTH to AUTH_FINAL.
-
-- pop3: Corrected debug message for POP3_AUTH_FINAL constant
+  This is a security vulnerabilty, CVE-2013-1944.
   
-  Following commit afad1ce753a1 corrected the debug message in state()
-  from AUTH to AUTH_FINAL.
+  Bug: http://curl.haxx.se/docs/adv_20130412.html
 
-- imap: Corrected debug message for IMAP_AUTHENTICATE_FINAL constant
-  
-  Following commit 13006f3de9ec corrected the debug message in state()
-  from AUTHENTICATE to AUTHENTICATE_FINAL.
+Guenter Knauf (11 Apr 2013)
+- Enabled MinGW sync resolver builds.
 
-- [Jiri Hruska brought this change]
+Yang Tse (10 Apr 2013)
+- if2ip.c: fix compiler warning
 
-  imap: Fixed error code returned for invalid FETCH response
+Guenter Knauf (10 Apr 2013)
+- Fixed lost OpenSSL output with "-t" - followup.
   
-  If the FETCH command does not result in an untagged response the the
-  UID is probably invalid. As such do not return CURLE_OK.
-
-- [Jiri Hruska brought this change]
+  The previously applied patch didnt work on Windows; we cant rely
+  on shell commands like 'echo' since they act diffently on each
+  platform and each shell.
+  In order to keep this script platform-independent the code must
+  only use pure Perl.
 
-  imap: Added processing of the final FETCH responses
+Daniel Stenberg (9 Apr 2013)
+- test1217: verify parsing 257 responses with "rubbish" before path
   
-  Not processing the final FETCH responses was not optimal, not only
-  because the response code would be ignored but it would also leave data
-  unread on the socket which would prohibit connection reuse.
+  Test 1217 verifies commit e0fb2d86c9f78, and without that change this
+  test fails.
 
-- [Jiri Hruska brought this change]
+- [Bill Middlecamp brought this change]
 
-  imap: Introduced FETCH_FINAL state for processing final fetch responses
+  FTP: handle "rubbish" in front of directory name in 257 responses
   
-  A typical FETCH response can be broken down into four parts:
+  When doing PWD, there's a 257 response which apparently some servers
+  prefix with a comment before the path instead of after it as is
+  otherwise the norm.
   
-    1) "* <uid> FETCH (<what> {<size>}\r\n", using continuation syntax
-    2) <size> bytes of the actual message
-    3) ")\r\n", finishing the untagged response
-    4) "<tag> OK ...", finishing the command
+  Failing to parse this, several otherwise legitimate use cases break.
   
-  Part 1 is read in imap_fetch_resp(), part 2 is consumed in the PERFORM
-  phase by the transfer subsystem, parts 3 and 4 are currently ignored.
+  Bug: http://curl.haxx.se/mail/lib-2013-04/0113.html
 
-- imap: fix autobuild warning
-  
-  Removed whitespace from imap_perform()
+Guenter Knauf (9 Apr 2013)
+- Fixed ares-enabled builds with static makefiles.
 
-- imap: fix compiler warning
+- Fixed lost OpenSSL output with "-t".
   
-  error: declaration of 'imap' shadows a previous local
+  The OpenSSL pipe wrote to the final CA bundle file, but the encoded PEM
+  output wrote to a temporary file.  Consequently, the OpenSSL output was
+  lost when the temp file was renamed to the final file at script finish
+  (overwriting the final file written earlier by openssl).
+  Patch posted to the list by Richard Michael (rmichael edgeofthenet org).
 
-- smtp: Re-factored the final SMTP_AUTH constant
+Daniel Stenberg (9 Apr 2013)
+- test1216: test tailmatching cookie domains
   
-  Changed the final SMTP_AUTH constant to SMTP_AUTH_FINAL for consistency
-  with the response function.
+  This test is an attempt to repeat the problem YAMADA Yasuharu reported
+  at http://curl.haxx.se/mail/lib-2013-04/0108.html
 
-- pop3: Re-factored the final POP3_AUTH constant
+- RELEASe-NOTES: synced with 29fdb2700f797
   
-  Changed the final POP3_AUTH constant to POP3_AUTH_FINAL for consistency
-  with the response function.
+  added "tcpkeepalive on Mac OS X"
 
-- imap: Re-factored final IMAP_AUTHENTICATE constant
+Nick Zitzmann (8 Apr 2013)
+- darwinssl: disable insecure ciphers by default
   
-  Changed the final IMAP_AUTHENTICATE constant to IMAP_AUTHENTICATE_FINAL
-  for consistency with the response function.
+  I noticed that aria2's SecureTransport code disables insecure ciphers such
+  as NULL, anonymous, IDEA, and weak-key ciphers used by SSLv3 and later.
+  That's a good idea, and now we do the same thing in order to prevent curl
+  from accessing a "secure" site that only negotiates insecure ciphersuites.
 
-- imap: Updated the coding style of imap_state_servergreet_resp()
-  
-  Updated the coding style, in this function, to be consistant with other
-  response functions rather then performing a hard return on failure.
+Daniel Stenberg (8 Apr 2013)
+- [Robert Wruck brought this change]
 
-- imap: Reversed the logic of the (un)successful tagged SELECT response
+  tcpkeepalive: Support CURLOPT_TCP_KEEPIDLE on OSX
   
-  Reversed the logic of the unsuccessful vs successful tagged SELECT
-  response in imap_state_select_resp() to be more logical to read.
+  MacOS X doesn't have TCP_KEEPIDLE/TCP_KEEPINTVL but only a single
+  TCP_KEEPALIVE (see
+  http://developer.apple.com/library/mac/#DOCUMENTATION/Darwin/Reference/ManPages/man4/tcp.4.html).
+  Here is a patch for CURLOPT_TCP_KEEPIDLE on OSX platforms.
 
-- imap: Reversed the logic of the (un)successful tagged CAPABILITY response
+- configure: remove CURL_CHECK_FUNC_RECVFROM
   
-  Reversed the logic of the unsuccessful vs successful tagged CAPABILITY
-  response in imap_state_capability_resp() to be more logical to read.
-
-- imap: Corrected char* references with char *
+  1 - We don't use the results from the test and we never did. recvfrom()
+  is only used by the TFTP code and it has not caused any problems.
   
-  Corrected char* references made in commit: 709b3506cd9b.
+  2 - the CURL_CHECK_FUNC_RECVFROM function is extremely slow
 
-- [Jiri Hruska brought this change]
+Steve Holme (8 Apr 2013)
+- RELEASE-NOTES: Corrected duplicate NTLM memory leaks
 
-  imap: Added processing of more than one response when sent in same packet
-  
-  Added a loop to imap_statemach_act() in which Curl_pp_readresp() is
-  called until the cache is drained. Without this multiple responses
-  received in a single packet could result in a hang or delay.
+- RELEASE-NOTES: Removed trailing full stop
 
-- [Jiri Hruska brought this change]
+Daniel Stenberg (8 Apr 2013)
+- [Fabian Keil brought this change]
 
-  imap: Added skipping of SELECT command if already in the same mailbox
+  proxy: make ConnectionExists() check credential of proxyconnections too
   
-  Added storage and checking of the last mailbox userd to prevent
-  unnecessary switching.
-
-- [Jiri Hruska brought this change]
-
-  imap: Introduced the mailbox variable
+  Previously it only compared credentials if the requested needle
+  connection wasn't using a proxy. This caused NTLM authentication
+  failures when using proxies as the authentication code wasn't send on
+  the connection where the challenge arrived.
   
-  Added the mailbox variable to the per-connection structure in
-  preparation for checking for an already selected mailbox.
+  Added test 1215 to verify: NTLM server authentication through a proxy
+  (This is a modified copy of test 67)
 
-- email: Slight reordering of connection based variables
-  
-  Reordered the state and ssl_done variables in order to provide more
-  consistency between the email protocols as well as for for an upcoming
-  change.
+- RELEASE-NOTES: sync with 704a5dfca9
 
-- imap: Tidied up comments for connection based variables
+- TODO-RELEASE: cleaned up, not really maintained lately
 
-- DOCS: Added the IMAP UIDVALIDITY property to the CURLOPT_URL section
+Marc Hoersken (7 Apr 2013)
+- if2ip.c: Fixed another warning: unused parameter 'remote_scope'
 
-- [Jiri Hruska brought this change]
+Daniel Stenberg (7 Apr 2013)
+- [Marc Hoersken brought this change]
 
-  imap: Added verification of UIDVALIDITY mailbox attribute
+  cookie.c: Made cookie sort function more deterministic
   
-  Added support for checking the UIDVALIDITY, and aborting the request, if
-  it has been specified in the URL and the server response is different.
+  Since qsort implementations vary with regards to handling the order
+  of similiar elements, this change makes the internal sort function
+  more deterministic by comparing path length first, then domain length
+  and finally the cookie name. Spotted with testcase 62 on Windows.
 
-- [Jiri Hruska brought this change]
+Marc Hoersken (7 Apr 2013)
+- curl_schannel.c: Follow up on memory leak fix ae4558d
 
-  imap: Added support for parsing the UIDVALIDITY property
+- Revert "getpart.pm: Strip carriage returns to fix Windows support"
   
-  Added support for parsing the UIDVALIDITY property from the SELECT
-  response and storing it in the per-connection structure.
+  This reverts commit e51b23c925a2721cf7c29b2b376d3d8903cfb067.
+  As discussed on the mailinglist, this was not the correct approach.
 
-- [Jiri Hruska brought this change]
+- http_negotiate.c: Fixed passing argument from incompatible pointer type
 
-  imap: Introduced the mailbox_uidvalidity variable
-  
-  Added the mailbox_uidvalidity variable to the per-connection structure
-  in preparation for checking the UIDVALIDITY mailbox attribute.
+- ftp.c: Added missing brackets around ABOR command logic
 
-- imap: Corrected comment in imap_endofresp()
+- sockfilt.c: Fixed detection of client-side connection close
+  
+  WINSOCK only:
+  Since FD_CLOSE is only signaled once, it may trigger at the same
+  time as FD_READ. Data actually being available makes it impossible
+  to detect that the connection was closed by checking that recv returns
+  zero. Another recv attempt could block the connection if it was
+  not closed. This workaround abuses exceptfds in conjunction with
+  readfds to signal that the connection has actually closed.
 
-- imap: Corrected whitespace
+- curl_schannel.c: Fixed memory leak if connection was not successful
 
-- [Jiri Hruska brought this change]
+- if2ip.c: Fixed warning: unused parameter 'remote_scope'
 
-  imap: Added filtering of CAPABILITY and FETCH untagged responses
-  
-  Only responses that contain "CAPABILITY" and "FETCH", respectively,
-  will be sent to their response handler.
+- runtests.pl: Fixed --verbose parameter passed to http_pipe.py
 
-- [Jiri Hruska brought this change]
+- sockfilt.c: Reduce CPU load while running under a Windows PIPE
 
-  imap: Added a helper function for upcoming untagged response filtering
-  
-  RFC 3501 states that "the client MUST be prepared to accept any response
-  at all times" yet we assume anything received with "* " at the beginning
-  is the untagged response we want.
-  
-  Introduced a helper function that checks whether the input looks like a
-  response to specified command, so that we may filter the ones we are
-  interested in according to the current state.
+- tftpd.c: Apply sread timeout to the whole data transfer session
 
-- [Jiri Hruska brought this change]
+- getpart.pm: Strip carriage returns to fix Windows support
 
-  imap: Moved CAPABILITY response handling to imap_state_capability_resp()
+Daniel Stenberg (6 Apr 2013)
+- ftp tests: libcurl returns CURLE_FTP_ACCEPT_FAILED better now
   
-  Introduced similar handling to the FETCH responses, where even the
-  untagged data responses are handled by the response handler of the
-  individual state.
-
-Linus Nielsen Feltzing (26 Feb 2013)
-- Remove unused variable in smtp_state_data_resp()
-
-Steve Holme (25 Feb 2013)
-- email: Small tidy up following recent changes
+  Since commit 57aeabcc1a20f, it handles errors on the control connection
+  while waiting for the data connection better.
+  
+  Test 591 and 592 are updated accordingly.
 
-- smtp: Removed bytecountp from the per-request structure
+- FTP: wait on both connections during active STOR state
+  
+  When doing PORT and upload (STOR), this function needs to extract the
+  file descriptor for both connections so that it will respond immediately
+  when the server eventually connects back.
+  
+  This flaw caused active connections to become unnecessary slow but they
+  would still often work due to the normal polling on a timeout. The bug
+  also would not occur if the server connected back very fast, like when
+  testing on local networks.
   
-  Removed this pointer to a downloaded bytes counter because it was set in
-  smtp_init() to point to the same variable the transfer functions keep
-  the count in (k->bytecount), effectively making the code in transfer.c
-  "*k->bytecountp = k->bytecount" a no-op.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1183
+  Reported by: Daniel Theron
 
-- pop3: Removed bytecountp from the per-request structure
-  
-  Removed this pointer to a downloaded bytes counter because it was set in
-  pop3_init() to point to the same variable the transfer functions keep
-  the count in (k->bytecount), effectively making the code in transfer.c
-  "*k->bytecountp = k->bytecount" a no-op.
+Marc Hoersken (6 Apr 2013)
+- tftpd.c: Follow up cleanup and restore of previous sockopt
 
-- [Jiri Hruska brought this change]
+Daniel Stenberg (6 Apr 2013)
+- [Kim Vandry brought this change]
 
-  imap: Removed bytecountp from the per-request structure
+  connect: treat an interface bindlocal() problem as a non-fatal error
   
-  Removed this pointer to a downloaded bytes counter because it was set in
-  imap_init() to point to the same variable the transfer functions keep
-  the count in (k->bytecount), effectively making the code in transfer.c
-  "*k->bytecountp = k->bytecount" a no-op.
-
-- [Jiri Hruska brought this change]
-
-  imap: Adjusted SELECT and FETCH function order
+  I am using curl_easy_setopt(CURLOPT_INTERFACE, "if!something") to force
+  transfers to use a particular interface but the transfer fails with
+  CURLE_INTERFACE_FAILED, "Failed binding local connection end" if the
+  interface I specify has no IPv6 address. The cause is as follows:
   
-  Moved imap_select() and imap_fetch() to be grouped with the other
-  perform functions.
-
-- [Jiri Hruska brought this change]
-
-  imap: Adjusted SELECT and FETCH state order in imap_statemach_act()
+  The remote hostname resolves successfully and has an IPv6 address and an
+  IPv4 address.
   
-  Exchanged the position of these states in the switch statements to
-  match the state enum, execution and function order.
-
-- imap: Minor tidy up of comments in imap_parse_url_path()
+  cURL attempts to connect to the IPv6 address first.
   
-  Tidy up of comments before next round of imap changes.
-
-- imap: Fixed incorrect comparison for STARTTLS in imap_endofresp()
+  bindlocal (in lib/connect.c) fails because Curl_if2ip cannot find an
+  IPv6 address on the interface.
   
-  Corrected the comparison type in addition to commit 1dac29fa83a9.
-
-- DOCS: Corrected IMAP URL examples according to RFC5092
+  This is a fatal error in singleipconnect()
   
-  URL examples that included the UID weren't technically correct although
-  would pass the curl parser.
-
-Nick Zitzmann (24 Feb 2013)
-- darwinssl: fix undefined $ssllib warning in runtests.pl
+  This change will make cURL try the next IP address in the list.
   
-  I also added --with-darwinssl to the list of SSL options in configure.
-
-Steve Holme (24 Feb 2013)
-- imap: Added check for new internal imap response code
-
-- imap: Changed the order of the response types in imap_endofresp()
+  Also included are two changes related to IPv6 address scope:
   
-  From a maintenance point of view the code reads better to view tagged
-  responses, then untagged followed by continuation responses.
+  - Filter the choice of address in Curl_if2ip to only consider addresses
+  with the same scope ID as the connection address (mismatched scope for
+  local and remote address does not result in a working connection).
   
-  Additionally, this matches the order of responses in POP3.
-
-- [Jiri Hruska brought this change]
-
-  imap: Added stricter parsing of continuation responses
+  - bindlocal was ignoring the scope ID of addresses returned by
+  Curl_if2ip . Now it uses them.
   
-  Enhanced the parsing to only allow continuation responses in some
-  states.
-
-- imap: Simplified memcmp() in tagged response parsing
-
-- [Jiri Hruska brought this change]
-
-  imap: Reworked the logic of untagged command responses
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1189
 
-- imap: Corrected spacing of trailing brace
+Marc Hoersken (6 Apr 2013)
+- tftpd.c: Fixed sread timeout on Windows by setting it manually
 
-- [Jiri Hruska brought this change]
+- ftp.pm: Added tskill to support Windows XP Home
 
-  imap: Added stricter parsing of tagged command responses
-  
-  Enhanced the parsing of tagged responses which must start with "OK",
-  "NO" or "BAD"
+- runtests.pl: Modularization of MinGW/Msys compatibility functions
 
-- [Jiri Hruska brought this change]
+- ftp.pm: Made Perl testsuite able to handle Windows processes
 
-  imap: Simplified command response test in imap_endofresp()
+- util.c: Revert workaround eeefcdf, 6eb56e7 and e3787e8
 
-- [Jiri Hruska brought this change]
+- ftp.pm: Made Perl testsuite able to kill Windows processes
 
-  imap: Corrected comment in imap_endofresp()
+- util.c: Follow up cleanup on eeefcdf
 
-- DOCS: Corrected layout of POP3 and IMAP URL examples
+Daniel Stenberg (6 Apr 2013)
+- cpp: use #ifdef __MINGW32__ to avoid compiler complaints
   
-  Corrected layout issues with the POP3 and IMAP URL examples introduced
-  in commit cb3ae6894fb2.
+  ... instead of just #if
 
-- DOCS: Updated CURLOPT_URL section following recent POP3 and IMAP changes
-  
-  Updated the POP3 sub-section to refer to message ID rather than mailbox.
+Marc Hoersken (6 Apr 2013)
+- util.c: Made write_pidfile write the correct PID on MinGW/Msys
   
-  Added an IMAP sub-section with example URLs depicting the specification
-  of mailbox, uid and section.
+  This workaround fixes an issue on MinGW/Msys regarding the Perl
+  testsuite scripts not being able to signal or control the server
+  processes. The MinGW Perl runtime only sees the Msys processes and
+  their corresponding PIDs, but sockfilt (and other servers) wrote the
+  Windows PID into their PID-files. Since this PID is useless to the
+  testsuite, the write_pidfile function was changed to search for the
+  Msys PID and write that into the PID-file.
 
-- pop3: Refactored the mailbox variable as it didn't reflect it's purpose
+Daniel Stenberg (5 Apr 2013)
+- RELEASE-NOTES: synced with 5e722b2d09087
   
-  Updated the mailbox variable to correctly reflect it's purpose. The
-  name mailbox was a leftover from when IMAP and POP3 support was
-  initially added to curl.
-
-- FEATURES: Updated following recent IMAP changes
+  3 more bug fixes, 6 more contributors
 
-- [Jiri Hruska brought this change]
+Marc Hoersken (5 Apr 2013)
+- sockfilt.c: Fixed handling of multiple fds being signaled
 
-  imap: Added the ability to FETCH a specific UID and SECTION
-  
-  Updated the FETCH command to send the UID and SECTION parsed from the
-  URL. By default the BODY specifier doesn't include a section, BODY[] is
-  now sent whereas BODY[TEXT] was previously sent. In my opinion
-  retrieving just the message text is rarely useful when dealing with
-  emails, as the headers are required for example, so that functionality
-  is not retained. In can however be simulated by adding SECTION=TEXT to
-  the URL.
+Kamil Dudka (5 Apr 2013)
+- curl_global_init.3: improve description of CURL_GLOBAL_ALL
   
-  Also updated test801 and test1321 due to the BODY change.
-
-- email: Additional tidy up of comments following recent changes
+  Reported by: Tomas Mlcoch
 
-- smtp: Removed some FTP heritage leftovers
+- examples/multi-single.c: fix the order of destructions
   
-  Removed user and passwd from the SMTP struct as these cannot be set on
-  a per-request basis and are leftover from legacy FTP code.
+  ... so that it adheres to the API documentation.
   
-  Changed some comments still using FTP terminology.
+  Reported by: Tomas Mlcoch
 
-- smtp: Moved the per-request variables to the per-request data structure
+Daniel Stenberg (5 Apr 2013)
+- Curl_open: restore default MAXCONNECTS to 5
   
-  Moved the rcpt variable from the per-connection struct smtp_conn to the
-  new per-request struct and fixed references accordingly.
+  At some point recently we lost the default value for the easy handle's
+  connection cache, and this change puts it back to 5 - which is the
+  former default value and it is documented in the curl_easy_setopt.3 man
+  page.
 
-- pop3: Introduced a custom SMTP structure for per-request data
+Marc Hoersken (4 Apr 2013)
+- sockfilt.c: Added wrapper functions to fix Windows console issues
   
-  Created a new SMTP structure and changed the type of the smtp proto
-  variable in connectdata from FTP* to SMTP*.
-
-unknown (23 Feb 2013)
-- [Steve Holme brought this change]
-
-  imap: Minor correction of comments for max line length
-
-Daniel Stenberg (23 Feb 2013)
-- strcasestr: remove check for this unused function
+  The new read and write wrapper functions support reading from stdin
+  and writing to stdout/stderr on Windows by using the appropriate
+  Windows API functions and data types.
 
-- pop3: fix compiler warning
-  
-  error: declaration of 'pop3' shadows a previous local
+Yang Tse (4 Apr 2013)
+- lib1509.c: fix compiler warnings
 
-Steve Holme (23 Feb 2013)
-- [Jiri Hruska brought this change]
+- easy.c: fix compiler warning
 
-  imap: Added URL parsing of new variables
+Daniel Stenberg (4 Apr 2013)
+- --engine: spellfix the help message
   
-  Updated the imap_parse_url_path() function to parse uidvalidity, uid and
-  section parameters based on RFC-5092.
+  Reported by: Fredrik Thulin
 
-- [Jiri Hruska brought this change]
+Yang Tse (4 Apr 2013)
+- http_negotiate.c: follow-up for commit 3dcc1a9c
 
-  imap: Introduced imap_is_bchar() function
+Linus Nielsen Feltzing (4 Apr 2013)
+- easy: Fix the broken CURLOPT_MAXCONNECTS option
   
-  Added imap_is_bchar() for testing if a given character is a valid bchar
-  or not.
-
-- [Jiri Hruska brought this change]
-
-  imap: Introduced new per-request veriables
+  Copy the CURLOPT_MAXCONNECTS option to CURLMOPT_MAXCONNECTS in
+  curl_easy_perform().
   
-  Added uidvalidity, uid and section variables to the per-request IMAP
-  structure in preparation for upcoming URL parsing.
-
-- pingpong: Renamed curl_ftptransfer to curl_pp_transfer
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1212
+  Reported-by: Steven Gu
 
-- pop3: Removed some FTP heritage leftovers
-  
-  Removed user and passwd from the POP3 struct as these cannot be set on
-  a per-request basis and are leftover from legacy FTP code.
-  
-  Changed some comments still using FTP terminology.
+Guenter Knauf (4 Apr 2013)
+- Updated copyright date.
 
-- pop3: Moved the per-request variables to the per-request data structure
-  
-  Moved the mailbox and custom request variables from the per-connection
-  struct pop3_conn to the new per-request struct and fixed references
-  accordingly.
+- Another small output fix for --help and --version.
 
-- pop3: Introduced a custom POP3 structure for per-request data
-  
-  Created a new POP3 structure and changed the type of the pop3 proto
-  variable in connectdata from FTP* to POP*.
+Yang Tse (4 Apr 2013)
+- http_negotiate.c: fix several SPNEGO memory handling issues
 
-- [Jiri Hruska brought this change]
+Guenter Knauf (4 Apr 2013)
+- Added a cont to specify base64 line wrap.
 
-  imap: Fixed escaping of mailbox names
-  
-  Used imap_atom() to escape mailbox names in imap_select().
+- Fixed version output.
 
-- pingpong: Moved curl_ftptransfer definition to pingpong.h
-  
-  Moved the ftp transfer structure into pingpong.h so other protocols that
-  require it don't have to include ftp.h.
+- Added support for --help and --version options.
 
-- urldata.h: Fixed comment for opt_no_body variable
+- Added option to specify length of base64 output.
   
-  Corrected comment for opt_no_body variable to CURLOPT_NOBODY.
-
-- email: Minor tidy up following IMAP changes
-
-- [Jiri Hruska brought this change]
+  Based on a patch posted to the list by Richard Michael.
 
-  imap: Removed more FTP leftovers
-  
-  Changed some variables and comments still using FTP terminology.
+Daniel Stenberg (3 Apr 2013)
+- curl_easy_setopt.3: CURLOPT_HTTPGET disables CURLOPT_UPLOAD
 
-- [Jiri Hruska brought this change]
+- [Yasuharu Yamada brought this change]
 
-  imap: Removed some FTP heritage leftovers
+  Curl_cookie_add: only increase numcookies for new cookies
   
-  Removed user and passwd from the IMAP struct as these cannot be set on
-  a per-request basis and are leftover from legacy FTP code.
-
-- [Jiri Hruska brought this change]
+  Count up numcookies in Curl_cookie_add() only when cookie is new one
 
-  imap: Introduced a custom IMAP structure for per-request data
+- SO_SNDBUF: don't set SNDBUF for win32 versions vista or later
   
-  Created a new IMAP structure and changed the type of the imap proto
-  variable in connectdata from FTP* to the new IMAP*.
+  The Microsoft knowledge-base article
+  http://support.microsoft.com/kb/823764 describes how to use SNDBUF to
+  overcome a performance shortcoming in winsock, but it doesn't apply to
+  Windows Vista and later versions. If the described SNDBUF magic is
+  applied when running on those more recent Windows versions, it seems to
+  instead have the reversed effect in many cases and thus make libcurl
+  perform less good on those systems.
   
-  Moved the mailbox variable from the per-connection struct imap_conn to
-  the new per-request struct and fixed references accordingly.
-
-- pop3: Updated do phrase clean-up comment
+  This fix thus adds a run-time version-check that does the SNDBUF magic
+  conditionally depending if it is deemed necessary or not.
   
-  Following commit 65644b833532 for the IMAP module updated the clean-up
-  comment in POP3.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1188
+  Reported by: Andrew Kurushin
+  Tested by: Christian HÃ¤gele
 
-- imap: Fixed memory leak when performing multiple selects
+Nick Zitzmann (1 Apr 2013)
+- darwinssl: additional descriptive messages of SSL handshake errors
   
-  Moved the clean-up of the mailbox variable from imap_disconnect() to
-  imap_done() as this variable is allocated in the do phase, yet would
-  have only been freed only once if multiple selects where preformed
-  on a single connection.
+  (This doesn't need to appear in the release notes.)
 
-Daniel Stenberg (22 Feb 2013)
-- [Alexander Klauer brought this change]
+Guenter Knauf (1 Apr 2013)
+- Added dns and connect time to output.
 
-  Documentation: Typo in docs/CONTRIBUTE
-  
-  Fixes a typo get â git in docs/CONTRIBUTE.
+Daniel Stenberg (1 Apr 2013)
+- RELEASE-NOTES: synced with 0614b902136
 
-- [Alexander Klauer brought this change]
+- code-policed
 
-  repository: ignore patch files generated by git
+- tcpkeepalive: support TCP_KEEPIDLE/TCP_KEEPINTVL on win32
   
-  Ignores the patch files generated by the 'git format-patch' command.
+  Patch by: Robert Wruck
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1209
 
-- [Alexander Klauer brought this change]
+- BINDINGS: BBHTTP is a cocoa binding, Julia has a binding
 
-  libcurl documentation: clarifications and typos
+- ftp_sendquote: use PPSENDF, not FTPSENDF
   
-  * Elaborates on default values of some curl_easy_setopt() options.
-  * Reminds the user to cast variadic arguments to curl_easy_setopt() to
-    'void *' where curl internally interprets them as such.
-  * Clarifies the working of the CURLOPT_SEEKFUNCTION option for
-    curl_easy_setopt().
-  * Fixes typo 'forth' â 'fourth'.
-  * Elaborates on CURL_SOCKET_TIMEOUT.
-  * Adds some missing periods.
-  * Notes that the return value of curl_version() must not be passed to
-    free().
-
-- [Alexander Klauer brought this change]
-
-  lib/url.c: Generic read/write data pointers
+  The last remaining code piece that still used FTPSENDF now uses PPSENDF.
+  In the problematic case, a PREQUOTE series was done on a re-used
+  connection when Curl_pp_init() hadn't been called so it had messed up
+  pointers. The init call is done properly from Curl_pp_sendf() so this
+  change fixes this particular crash.
   
-  Always interprets the pointer passed with the CURLOPT_WRITEDATA or
-  CURLOPT_READDATA options of curl_easy_setopt() as a void pointer in
-  order to avoid problems in environments where FILE and void pointers
-  have non-trivial conversion.
+  Bug: http://curl.haxx.se/mail/lib-2013-03/0319.html
+  Reported by: Sam Deane
 
-- [Alexander Klauer brought this change]
+Steve Holme (27 Mar 2013)
+- RELEASE-NOTES: Corrected typo
 
-  libcurl documentation: updates HTML index
-  
-  * Adds several links to documentation of library functions which were
-    missing.
-  * Marks documentation of deprecated library functions "(deprecated)".
-  * Removes spurious .html suffixes.
+Daniel Stenberg (27 Mar 2013)
+- [Clemens Gruber brought this change]
 
-- ossl_seed: avoid recursive seeding!
+  multi-uv.c: remove unused variable
 
-Steve Holme (22 Feb 2013)
-- [Jiri Hruska brought this change]
+- RELEASE-NOTES: add two references
 
-  Fixed checking the socket if there is data waiting in the cache
+- test1509: verify proxy header response headers count
   
-  Use Curl_pp_moredata() in Curl_pp_multi_statemach() to check if there is
-  more data to be received, rather than the socket state, as a task could
-  hang waiting for more data from the socket itself.
-
-- imap.c: Fixed an incorrect variable reference
+  Modified sws to support and use custom CONNECT responses instead of the
+  previously naive hard-coded version. Made the HTTP test server able to
+  extract test case number from the host name in a CONNECT request by
+  finding the number after the last dot. It makes 'machine.moo.123' use
+  test case 123.
   
-  Fixed an incorrect variable reference which was introduced in commit
-  a1701eea289f as a result of a copy and paste from SMTP/POP3.
+  Adapted a larger amount of tests to the new <connect> style.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1204
+  Reported by: Martin Jansen
 
-- [Jiri Hruska brought this change]
+- [Clemens Gruber brought this change]
+
+  Added libuv example multi-uv.c
 
-  pingpong: Introduce Curl_pp_moredata()
+Yang Tse (25 Mar 2013)
+- NTLM: fix several NTLM code paths memory leaks
+
+- WIN32 MemoryTracking: track wcsdup() _wcsdup() and _tcsdup() usage
   
-  A simple function to test whether the PP is not sending and there are
-  still more data in its receiver cache. This will be later utilized to:
+  As of 25-mar-2013 wcsdup() _wcsdup() and _tcsdup() are only used in
+  WIN32 specific code, so tracking of these has not been extended for
+  other build targets. Without this fix, memory tracking system on
+  WIN32 builds, when using these functions, would provide misleading
+  results.
   
-  1) Change Curl_pp_multi_statemach() and Curl_pp_easy_statemach() to
-     not test socket state and just call user's statemach_act() function
-     when there are more data to process, because otherwise the task would
-     just hang, waiting for more data from the socket.
+  In order to properly extend this support for all targets curl.h
+  would have to define curl_wcsdup_callback prototype and consequently
+  wchar_t should be visible before that in curl.h.  IOW curl_wchar_t
+  defined in curlbuild.h and this pulling whatever system header is
+  required to get wchar_t definition.
   
-  2) Allow PP users to read multiple responses by looping as long as there
-     are more data available and current phase is not finished.
-     (Currently needed for correct processing of IMAP SELECT responses.)
+  Additionally a new curl_global_init_mem() function that also receives
+  user defined wcsdup() callback would be required.
 
-Nick Zitzmann (19 Feb 2013)
-- FEATURES: why yes, we do support metalink
+- curl_ntlm_msgs.c: revert commit 463082bea4
   
-  I just noticed Metalink support wasn't listed as a feature of the tool.
+  reverts unreleased invalid memory leak fix
 
-- metalink: fix improbable crash parsing metalink filename
+Daniel Stenberg (23 Mar 2013)
+- RELEASE-NOTES: synced with bc6037ed3ec02
   
-  The this_url pointer wasn't being initialized, so if strdup() would return
-  null when copying the filename in a metalink file, then hilarity would
-  ensue during the cleanup phase. This change was brought to you by clang,
-  which noticed this and raised a warning.
-
-Yang Tse (19 Feb 2013)
-- smtp.c: fix enumerated type mixed with another type
+  More changes, bugfixes and contributors!
 
-- polarssl threadlock cleanup
+- [Martin Jansen brought this change]
 
-Nick Zitzmann (18 Feb 2013)
-- docs: schannel and darwinssl documentation improvements
+  Curl_proxyCONNECT: count received headers
   
-  Schannel and darwinssl use the certificates built into the
-  OS to do vert verification instead of bundles. darwinssl
-  is thread-safe. Corrected typos in the NSS docs.
-
-Daniel Stenberg (18 Feb 2013)
-- resolver_error: remove wrong error message output
+  Proxy servers tend to add their own headers at the beginning of
+  responses. The size of these headers was not taken into account by
+  CURLINFO_HEADER_SIZE before this change.
   
-  The attempt to use gai_strerror() or alternative function didn't work as
-  the 'sock_error' field didn't contain the proper error code. But since
-  this hasn't been reported and thus isn't really a big deal I decided to
-  just scrap the whole attempt to output the detailed resolver error and
-  instead remain with just stating that the resolving of the name failed.
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1204
 
-- [Kim Vandry brought this change]
+Steve Holme (21 Mar 2013)
+- sasl: Corrected a few violations of the curl coding standards
+  
+  Corrected some incorrectly positioned pointer variable declarations to
+  be "char *" rather than "char* ".
 
-  Curl_resolver_is_resolved: show proper host name on failed resolve
+- multi.c: Corrected a couple of violations of the curl coding standards
+  
+  Corrected some incorrectly positioned pointer variable declarations to
+  be "type *" rather than "type* ".
 
-- Curl_resolver_is_resolved: fix compiler warning
+- imap-tests: Added CRLF to reply data to be compliant with RFC-822
   
-  conversion to 'int' from 'long int' may alter its value
+  Updated the reply data in tests: 800, 801, 802, 804 and 1321 to possess
+  the CRLF as per RFC-822.
 
-- compiler warning fix
+- multi.c: Fix compilation warning
   
-  follow-up to commit ed7174c6f66, rename 'wait' to 'block'
+  warning: an enumerated type is mixed with another type
 
-- compiler warning fix: declaration of 'wait' shadows a global declaration
-  
-  It seems older gcc installations (at least) will cause warnings if we
-  name a variable 'wait'. Now changed to 'block' instead.
+- multi.c: fix compilation error
   
-  Reported by: JiÅÃ­ HruÅ¡ka
-  Bug: http://curl.haxx.se/mail/lib-2013-02/0247.html
+  warning: conversion from enumeration type to different enumeration type
 
-Nick Zitzmann (17 Feb 2013)
-- MacOSX-Framework: Make script work in Xcode 4.0 and later
+- lib1900.c: fix compilation warning
   
-  Apple made a number of changes to Xcode 4. The SDKs were moved, the entire
-  Developer folder was moved, and PowerPC support was removed. The script
-  will now adapt to those changes and should be future-proofed against
-  additional changes in case Apple moves the Developer folder ever again.
-  Also, the minimum OS X version compiler option was removed, so that the
-  framework can be built against the latest SDK but still run in older cats.
+  warning: declaration of 'time' shadows a global declaration
 
-Daniel Stenberg (17 Feb 2013)
-- docs: refer to CURLOPT_ACCEPT_ENCODING instead of the old name
+Yang Tse (20 Mar 2013)
+- [John E. Malmberg brought this change]
 
-Steve Holme (16 Feb 2013)
-- email: Tidied up result code variables
+  build_vms.com: use existing curlbuild.h and parsing fix
   
-  Tidied up result variables to be consistent in name, declaration order
-  and default values.
-
-Nick Zitzmann (16 Feb 2013)
-- ntlm_core: fix compiler warning when building with clang
+  This patch removes building curlbuild.h from the build_vms.com procedure
+  and uses the one in the daily or release tarball instead.
   
-  Fixed a 64-to-32 compiler warning raised when building with
-  clang and the --with-darwinssl option.
-
-Daniel Stenberg (16 Feb 2013)
-- Guile-curl: a new libcurl binding
-
-- polarsslthreadlock: #include the proper memory and debug includes
+  packages/vms/build_curlbuild_h.com is obsolete with this change.
+  
+  Accessing the library module name "tool_main" needs different handling
+  when the optional extended parsing is enabled.
   
-  Pointed out by Steve Holme
+  Tested on IA64/VMS 8.4 and VAX/VMS 7.3
 
-Steve Holme (16 Feb 2013)
-- email: Removed unnecessary forward declaration
+Nick Zitzmann (19 Mar 2013)
+- darwinssl: disable ECC ciphers under Mountain Lion by default
   
-  Due to the reordering of functions in commit 586f5d361474 the forward
-  declaration to state_upgrade_tls() are no longer required.
+  I found out that ECC doesn't work as of OS X 10.8.3, so those ciphers are
+  turned off until the next point release of OS X.
 
-- pop3.c: Added reference to RFC-5034
+Steve Holme (18 Mar 2013)
+- FEATURES: Small tidy up for constancy and grammar
 
-Daniel Stenberg (15 Feb 2013)
-- [Willem Sparreboom brought this change]
+Daniel Stenberg (18 Mar 2013)
+- [Oliver Schindler brought this change]
 
-  PolarSSL: Change to cURL coding style
+  Curl_proxyCONNECT: clear 'rewindaftersend' on success
   
-  Repaired all curl/lib/checksrc.pl warnings in the previous four patches
-
-- [Willem Sparreboom brought this change]
-
-  PolarSSL: WIN32 threading support for entropy
+  After having done a POST over a CONNECT request, the 'rewindaftersend'
+  boolean could be holding the previous value which could lead to badness.
   
-  Added WIN32 threading support for PolarSSL entropy if
-  --enable-threaded-resolver config flag is set and process.h can be found.
-
-- [Willem Sparreboom brought this change]
-
-  PolarSSL: pthread support for entropy
+  This should be tested for in a new test case!
   
-  Added pthread support for polarssl entropy if --enable-threaded-resolver
-  config flag is set and pthread.h can be found.
-
-- [Willem Sparreboom brought this change]
+  Bug: https://groups.google.com/d/msg/msysgit/B31LNftR4BI/KhRTz0iuGmUJ
 
-  PolarSSL: changes to entropy/ctr_drbg/HAVEGE_RANDOM
+Steve Holme (18 Mar 2013)
+- TODO: Reordered the protocol and security sections
   
-  Add non-threaded entropy and ctr_drbg and removed HAVEGE_RANDOM define
-
-- [Willem Sparreboom brought this change]
-
-  PolarSSL: added human readable error strings
+  Moved SMTP, POP3, IMAP and New Protocol sections to be listed after the
+  other protocols (FTP, HTTP and TELNET) and SASL to be after SSL and
+  GnuTLS as these are all security related.
   
-  Print out human readable error strings for PolarSSL related errors
-
-Steve Holme (15 Feb 2013)
-- pop3: Removed unnecessary state changes on failure
-
-- imap: Removed unnecessary state change on failure
+  Additionally fixed numbering of the SSL and GnuTLS sections as they
+  weren't consecutive.
 
-Daniel Stenberg (15 Feb 2013)
-- metalink_cleanup: yet another follow-up fix
+Yang Tse (18 Mar 2013)
+- tests: specify 'text' mode for some output files in verify section
 
-- metalink_cleanup: define it without argument
+Steve Holme (17 Mar 2013)
+- imap: Fixed incorrect initial response generation for SASL AUTHENTICATE
   
-  Since the function takes no argument, the macro shouldn't take one as
-  some compilers will error out on that.
-
-- rename "easy" statemachines: call them block instead
+  Fixed incorrect initial response generation for the NTLM and LOGIN SASL
+  authentication mechanisms when the SASL-IR was detected.
   
-  ... since they're not used by the easy interface really, I wanted to
-  remove the association. Also, I unified the pingpong statemachine driver
-  into a single function with a 'wait' argument: Curl_pp_statemach.
+  Introduced in commit: 6da7dc026c14.
 
-Yang Tse (15 Feb 2013)
-- [Gisle Vanem brought this change]
+- FEATURES: Expanded the supported enhanced IMAP command list
 
-  curl_setup_once.h: definition of HAVE_CLOSE_S defines sclose() to close_s()
+- TODO: Corrected typo in TOC
 
-- [Gisle Vanem brought this change]
+- TODO: Added IMAP section and removed unused Other protocols section
 
-  config-dos.h: define HAVE_CLOSE_S for MSDOS/Watt-32
+- TODO: Added graceful base64 decoding failure to SMTP and POP3
 
-- [Gisle Vanem brought this change]
+- TODO: Corrected typo on section 10.2 heading
 
-  config-dos.h: define strerror() to strerror_s_() for High-C
+Yang Tse (16 Mar 2013)
+- tests: 96, 558, 1330: strip build subdirectory dependent leading path
 
-- [Gisle Vanem brought this change]
+Steve Holme (15 Mar 2013)
+- TODO: Added section 10.2 Initial response to POP3 to do list
 
-  config-dos.h: define HAVE_TERMIOS_H only for djgpp
+- imap-tests: Corrected copy/paste error in test808 reply data
+
+Yang Tse (15 Mar 2013)
+- unit1330.c: fix date
 
-Steve Holme (14 Feb 2013)
-- smtp.c: Fixed a trailing whitespace
+- tests: add #96 #558 and #1330
   
-  Remove tailing whitespace introduced in commit 7ed689d24a4e.
+  These verfy that the 'memory tracking' subsystem is actually doing its
+  job when using curl tool (#96), a test in libtest (#558) and also a unit
+  test (#1330), in order to prevent regressions in this functionallity.
 
-- pop3: Fixed blocking SSL connect when connecting via POP3S
+Steve Holme (15 Mar 2013)
+- imap-tests: Added test808 for custom EXAMINE command
+
+Daniel Stenberg (15 Mar 2013)
+- HTTP proxy: insert slash in URL if missing
+  
+  curl has been accepting URLs using slightly wrong syntax for a long
+  time, such as when completely missing as slash "http://example.org" or
+  missing a slash when a query part is given
+  "http://example.org?q=foobar".
+  
+  curl would translate these into a legitimate HTTP request to servers,
+  although as was shown in bug #1206 it was not adjusted properly in the
+  cases where a HTTP proxy was used.
+  
+  Test 1213 and 1214 were added to the test suite to verify this fix.
   
-  A call to Curl_ssl_connect() was accidentally left in when the SSL/TLS
-  connection layer was reworked in 7.29. Not only would this cause the
-  connection to block but had the additional overhead of calling the
-  non-blocking connect a little bit later.
+  The test HTTP server was adjusted to allow us to specify test number in
+  the host name only without using any slashes in a given URL.
+  
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1206
+  Reported by: ScottJi
 
-- smtp: Refactored the smtp_state_auth_resp() function
+Steve Holme (14 Mar 2013)
+- ftpserver.pl: Added EXAMINE_imap() for IMAP EXAMINE commands
   
-  Renamed smtp_state_auth_resp() function to match the implementations in
-  IMAP and POP3.
+  Used hard coded data from RFC-3501 section 6.3.2.
 
-Daniel Stenberg (14 Feb 2013)
-- remove ifdefs
+Yang Tse (14 Mar 2013)
+- curl_memory.h: introduce CURLX_NO_MEMORY_CALLBACKS usage possibility
   
-  Clarify the code by reducing ifdefs
+  This commit alone does not fix anything nor modifies existing
+  interfaces or behaviors, although it is a prerequisite for other
+  fixes.
+
+- Makefile.vc6: add missing files
+
+Linus Nielsen Feltzing (14 Mar 2013)
+- pipelining: Remove dead code.
 
-- strlcat: remove function
+- Multiple pipelines and limiting the number of connections.
   
-  This function was only used twice, both in places where performance
-  isn't crucial (socks + if2ip). Removing the use of this function removes
-  the need to have our private version for systems without it == reduced
-  amount of code.
+  Introducing a number of options to the multi interface that
+  allows for multiple pipelines to the same host, in order to
+  optimize the balance between the penalty for opening new
+  connections and the potential pipelining latency.
   
-  Also, in the SOCKS case it is clearly better to fail gracefully rather
-  than to truncate the results.
+  Two new options for limiting the number of connections:
   
-  This work was triggered by a bug report on the strcal prototype in
-  strequal.h.
+  CURLMOPT_MAX_HOST_CONNECTIONS - Limits the number of running connections
+  to the same host. When adding a handle that exceeds this limit,
+  that handle will be put in a pending state until another handle is
+  finished, so we can reuse the connection.
   
-  strlcat was added in commit db70cd28 in February 2001!
+  CURLMOPT_MAX_TOTAL_CONNECTIONS - Limits the number of connections in total.
+  When adding a handle that exceeds this limit,
+  that handle will be put in a pending state until another handle is
+  finished. The free connection will then be reused, if possible, or
+  closed if the pending handle can't reuse it.
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1192
-  Reported by: Jeremy Huddleston
-
-- Curl_FormBoundary: made static
+  Several new options for pipelining:
   
-  As Curl_FormBoundary() is no longer used outside of this file (since
-  commit ad7291c1a9d), it is now renamed to formboundary() and is made
-  static.
-
-- ossl_seed: fix the last resort PRNG seeding
+  CURLMOPT_MAX_PIPELINE_LENGTH - Limits the pipeling length. If a
+  pipeline is "full" when a connection is to be reused, a new connection
+  will be opened if the CURLMOPT_MAX_xxx_CONNECTIONS limits allow it.
+  If not, the handle will be put in a pending state until a connection is
+  ready (either free or a pipe got shorter).
   
-  Instead of just abusing the pseudo-randomizer from Curl_FormBoundary(),
-  this now uses Curl_ossl_random() to get entropy.
-
-Steve Holme (13 Feb 2013)
-- email: Tidy up before additional IMAP work
+  CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE - A pipelined connection will not
+  be reused if it is currently processing a transfer with a content
+  length that is larger than this.
   
-  Replaced two explicit comparisons of CURLE_OK with boolean alternatives.
+  CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE - A pipelined connection will not
+  be reused if it is currently processing a chunk larger than this.
   
-  General tidy up of comments.
-
-- smtp: Removed duplicate pingpong structure initialisation
+  CURLMOPT_PIPELINING_SITE_BL - A blacklist of hosts that don't allow
+  pipelining.
   
-  The smtp_connect() function was setting the member variables of the
-  pingpong structure twice, once before calling Curl_pp_init() and once
-  after!
-
-Yang Tse (13 Feb 2013)
-- move msvc IDE related files to 'vs' directory tree
+  CURLMOPT_PIPELINING_SERVER_BL - A blacklist of server types that don't allow
+  pipelining.
   
-  Use 'vs' directory tree given that 'vc' intended one clashes
-  with an already existing build target in file Makefile.dist.
+  See the curl_multi_setopt() man page for details.
 
-Daniel Stenberg (13 Feb 2013)
-- install-sh: updated to support multiple source files as arguments
+Yang Tse (13 Mar 2013)
+- tool_main.c: remove redundant vms_show storage-class specifier
   
-  Version 7.29.0 uses Makefiles generated with a newer version of the
-  autotools than the previous 7.28.1. These Makefiles try to install
-  e.g. header files by calling install-sh with multiple source files as
-  arguments. The bundled install-sh is to old and does not support this.
+  vms_show 'extern' storage-class specifier removed from tool_main.c due to...
   
-  The problem only occurs, if install-sh is actually being used, ie. the
-  platform install executable is to old or not usable. Example: Solaris
-  10.
+  - Advice from Tor Arntsen: http://curl.haxx.se/mail/lib-2013-03/0164.html
   
-  The files install-sh and mkinstalldirs are now updated with the automake
-  1.11.3 versions. A better fix might be to completely remove them from
-  git and force the files to be added/created during buildconf.
+  - HP OpenVMS docs stating that 'Extern is the default storage class for
+    variables declared outside a function.'
+    http://h71000.www7.hp.com/commercial/c/docs/dec_c_help_5.html
+    (Storage_Classes section)
+
+- test509: libcurl initialization with memory callbacks and actual usage
+
+Steve Holme (13 Mar 2013)
+- pop3: Removed unnecessary transfer cancellation
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1195
-  Reported by: Rainer Jung
+  Following commit e450f66a02d8 and the changes in the multi interface
+  being used internally, from 7.29.0, the transfer cancellation in
+  pop3_dophase_done() is no longer required.
 
-Yang Tse (13 Feb 2013)
-- move msvc IDE related files to 'vc' directory tree
+Yang Tse (13 Mar 2013)
+- Makefile.am: add VMS files not being included in tarball
 
-- msvc IDE 'vc' directory tree preparation
+- [Tom Grace brought this change]
 
-Steve Holme (12 Feb 2013)
-- imap: Corrected a whitespace issue from previous commit
+  build_vms.com: VMS build fixes
   
-  Fixed a small whitespace issue that crept in there in commit
-  508cdf4da4d7.
+  Added missing slash in cc_full_list.
+  Removed unwanted extra quotes inside symbol tool_main
+  for non-VAX architectures that triggered link failure.
+  Replaced curl_sys_inc with sys_inc.
 
-- email: Another post optimisation of endofresp() tidy up
+- [Tom Grace brought this change]
 
-- sasl: Fixed null pointer reference when decoding empty digest challenge
+  tool_main.c: fix VMS global variable storage-class specifier
   
-  Fixed a null pointer reference when an empty challenge is passed to the
-  Curl_sasl_create_digest_md5_message() function.
+  An extern submits a psect and a global reference to the linker to point
+  to it. Using "extern int vms_show = 0" also creates a globaldef.
   
-  Bug: http://sourceforge.net/p/curl/bugs/1193/
-  Reported by: Saran Neti
+  The use of the extern by itself does declare a psect but does not declare
+  a globalsymbol. It does declare a globalref. But the linker needs one and
+  only one globaldef or there is an error.
+
+Patrick Monnerat (12 Mar 2013)
+- OS400: synchronize RPG binding
 
-- email: Post optimisation of endofresp() tidy up
+Steve Holme (12 Mar 2013)
+- pop3: Fixed continuous wait when using --ftp-list
   
-  Removed unnecessary end of line check and return.
+  Don't initiate a transfer when using --ftp-list.
+
+Kamil Dudka (12 Mar 2013)
+- [Zdenek Pavlas brought this change]
 
-Nick Zitzmann (12 Feb 2013)
-- darwinssl: Fix send glitchiness with data > 32 or so KB
+  curl_global_init: accept the CURL_GLOBAL_ACK_EINTR flag
   
-  An ambiguity in the SSLWrite() documentation lead to a bad inference in the
-  code where we assumed SSLWrite() returned the amount of bytes written to
-  the socket, when that is not actually true; it returns the amount of data
-  that is buffered for writing to the socket if it returns errSSLWouldBlock.
-  Now darwinssl_send() returns CURLE_AGAIN if data is buffered but not written.
+  The flag can be used in pycurl-based applications where using the multi
+  interface would not be acceptable because of the performance lost caused
+  by implementing the select() loop in python.
   
-  Reference URL: http://curl.haxx.se/mail/lib-2013-02/0145.html
+  Bug: http://curl.haxx.se/bug/view.cgi?id=1168
+  Downstream Bug: https://bugzilla.redhat.com/919127
 
-Steve Holme (12 Feb 2013)
-- pingpong.h: Fixed line length over 78 characters from b56c9eb48e3c
+- easy: do not ignore poll() failures other than EINTR
 
-- pingpong: Optimised the endofresp() function
+Yang Tse (12 Mar 2013)
+- curl.h: stricter CURL_EXTERN linkage decorations logic
   
-  Reworked the pp->endofresp() function so that the conndata, line and
-  line length are passed down to it just as with Curl_client_write()
-  rather than each implementation of the function having to query
-  these values.
+  No API change involved.
   
-  Additionally changed the int return type to bool as this is more
-  representative of the function's usage.
+  Info: http://curl.haxx.se/mail/lib-2013-02/0234.html
 
-- email: Post STARTLS capability code tidy up (Part Three)
-  
-  Corrected the order of the upgrade_tls() functions and moved the handler
-  upgrade and getsock() functions out from the middle of the state related
-  functions.
+Daniel Stenberg (11 Mar 2013)
+- THANKS: Latin-1'ified Jiri's name
 
-- email: Post STARTLS capability code tidy up (Part Two)
+Steve Holme (11 Mar 2013)
+- test806: Added CRLF to reply data to be compliant with RFC-822
+
+Daniel Stenberg (11 Mar 2013)
+- test805: added crlf newlines to make data size match
   
-  Corrected the order of the pop3_state_capa() / imap_state_capability()
-  and the pop3_state_capa_resp() / imap_state_capability_resp() functions
-  to match the execution order.
+  since mails sent are supposed to have CRLF line endings I added them and
+  now the data size after (\Seen) matches again properly
+
+- test: fix newline for the data check of 807
 
-Daniel Stenberg (11 Feb 2013)
-- [ulion brought this change]
+Yang Tse (11 Mar 2013)
+- test801 to test807: fix protocol section line endings
 
-  SOCKS: fix socks proxy when noproxy matched
-  
-  Test 1212 added to verify
+Steve Holme (10 Mar 2013)
+- Makefile.am: Corrected a couple of spurious tab characters
   
-  Bug: http://curl.haxx.se/bug/view.cgi?id=1190
+  Corrected a couple of tab characters between test702 and test703, and
+  between test900 and test901 which should be spaces.
 
-Steve Holme (11 Feb 2013)
-- ntlm: Updated comments for the addition of SASL support to IMAP in v7.29
+- [Jiri Hruska brought this change]
 
-- RELEASE-NOTES: Updated following the recent imap/pop3/smtp changes
+  imap: Added test807 for custom request functionality (STORE)
 
-Linus Nielsen Feltzing (10 Feb 2013)
-- Fix NULL pointer reference when closing an unused multi handle.
+- [Jiri Hruska brought this change]
 
-Steve Holme (10 Feb 2013)
-- email: Post STARTLS capability code tidy up (Part One)
-  
-  Corrected the order of the CAPA / CAPABILITY state machine constants to
-  match the execution order.
+  imap: Added test806 for IMAP (folder) LIST command
 
-- imap: Fixed memory leak following commit f6010d9a0359
+- [Jiri Hruska brought this change]
 
-- smtp: Added support for the STARTTLS capability (Part Two)
-  
-  Added honoring of the tls_supported flag when starting a TLS upgrade
-  rather than unconditionally attempting it. If the use_ssl flag is set
-  to CURLUSESSL_TRY and the server doesn't support TLS upgrades then the
-  connection will continue to authenticate. If this flag is set to
-  CURLUSESSL_ALL then the connection will complete with a failure as it
-  did previously.
+  imap: Added test805 for APPEND functionality
 
-- pop3: Added support for the STLS capability (Part Three)
-  
-  Added honoring of the tls_supported flag when starting a TLS upgrade
-  rather than unconditionally attempting it. If the use_ssl flag is set
-  to CURLUSESSL_TRY and the server doesn't support TLS upgrades then the
-  connection will continue to authenticate. If this flag is set to
-  CURLUSESSL_ALL then the connection will complete with a failure as it
-  did previously.
+- [Jiri Hruska brought this change]
+
+  imap: Added test804 for skipping SELECT if in the same mailbox
 
-- imap: Added support for the STARTTLS capability (Part Three)
+- [Jiri Hruska brought this change]
+
+  imap: Added test802 and test803 for UIDVALIDITY verification
   
-  Added honoring of the tls_supported flag when starting a TLS upgrade
-  rather than unconditionally attempting it. If the use_ssl flag is set
-  to CURLUSESSL_TRY and the server doesn't support TLS upgrades then the
-  connection will continue to authenticate. If this flag is set to
-  CURLUSESSL_ALL then the connection will complete with a failure as it
-  did previously.
+  Added one test for a request with matching UIDVALIDITY and one which is
+  a mismatched request that will fail.
 
-Daniel Stenberg (10 Feb 2013)
-- [Alessandro Ghedini brought this change]
+- [Jiri Hruska brought this change]
 
-  htmltitle: fix suggested build command
+  imap: Added test801 for UID and SECTION URL parameters
 
-Steve Holme (10 Feb 2013)
-- pop3: Added support for the STLS capability (Part Two)
-  
-  Added sending of initial CAPA command before STLS is sent. This allows
-  for the detection of the capability before trying to upgrade the
-  connection.
+- [Jiri Hruska brought this change]
 
-- imap: Added support for the STARTTLS capability (Part Two)
+  imap-tests: Accept quoted parameters in ftpserver.pl
   
-  Added sending of initial CAPABILITY command before STARTTLS is sent.
-  This allows for the detection of the capability before trying to
-  upgrade the connection.
+  Any IMAP parameter can come in escaped and in double quotes. Added a
+  simple function to unquote the command parameters and applied it to
+  the IMAP command handlers.
 
-- smtp: Added support for the STLS capability (Part One)
-  
-  Introduced detection of the STARTTLS capability, in order to add support
-  for TLS upgrades without unconditionally sending the STARTTLS command.
+- [Jiri Hruska brought this change]
 
-- pop3: Added support for the STLS capability (Part One)
+  tests: Fix ftpserver.pl indentation
   
-  Introduced detection of the STLS capability, in order to add support
-  for TLS upgrades without unconditionally sending the STLS command.
+  The whole of FETCH_imap() had one extra space of indentation, whilst
+  APPEND_imap() used indentation of 2 instead of 4 in places.
 
-- imap: Added support for the STARTTLS capability (Part One)
+- Makefile.am: Corrected end of line filler character
   
-  Introduced detection of the STARTTLS capability, in order to add support
-  for TLS upgrades without unconditionally sending the STARTTLS command.
+  The majority of lines, that specify a test file for inclusion, end with
+  a tab character before the slash whilst some end with a space. Corrected
+  those that end with a space to end with a tab character as well.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/CMake/Platforms/WindowsCache.cmake /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/CMake/Platforms/WindowsCache.cmake
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/CMake/Platforms/WindowsCache.cmake	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/CMake/Platforms/WindowsCache.cmake	2013-12-17 06:02:35.000000000 +0800
@@ -105,13 +105,17 @@
 
     set(TIME_WITH_SYS_TIME 0)
     set(HAVE_O_NONBLOCK 0)
     set(HAVE_IN_ADDR_T 0)
     set(HAVE_INET_NTOA_R_DECL 0)
     set(HAVE_INET_NTOA_R_DECL_REENTRANT 0)
-    set(HAVE_GETADDRINFO 0)
+    if(ENABLE_IPV6)
+      set(HAVE_GETADDRINFO 1)
+    else()
+      set(HAVE_GETADDRINFO 0)
+    endif()
     set(STDC_HEADERS 1)
     set(RETSIGTYPE_TEST 1)
 
     set(HAVE_SIGACTION 0)
     set(HAVE_MACRO_SIGSETJMP 0)
   else(WIN32)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/CMakeLists.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/CMakeLists.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/CMakeLists.txt	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/CMakeLists.txt	2013-12-17 06:02:35.000000000 +0800
@@ -780,12 +780,23 @@
   endif()
 else()
   set(CURL_TYPEOF_CURL_SOCKLEN_T int)
   set(CURL_SIZEOF_CURL_SOCKLEN_T ${SIZEOF_INT})
 endif()
 
+# TODO test which of these headers are required for the typedefs used in curlbuild.h
+if(WIN32)
+  set(CURL_PULL_WS2TCPIP_H ${HAVE_WS2TCPIP_H})
+else()
+  set(CURL_PULL_SYS_TYPES_H ${HAVE_SYS_TYPES_H})
+  set(CURL_PULL_SYS_SOCKET_H ${HAVE_SYS_SOCKET_H})
+  set(CURL_PULL_SYS_POLL_H ${HAVE_SYS_POLL_H})
+endif()
+set(CURL_PULL_STDINT_H ${HAVE_STDINT_H})
+set(CURL_PULL_INTTYPES_H ${HAVE_INTTYPES_H})
+
 include(CMake/OtherTests.cmake)
 
 add_definitions(-DHAVE_CONFIG_H)
 
 # For windows, do not allow the compiler to use default target (Vista).
 if(WIN32)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/configure	2013-10-13 04:24:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/configure	2013-12-17 06:11:27.000000000 +0800
@@ -912,13 +912,12 @@
 LIBMETALINK_CPPFLAGS
 LIBMETALINK_LDFLAGS
 LIBMETALINK_LIBS
 CURL_CA_BUNDLE
 SSL_ENABLED
 USE_AXTLS
-HAVE_NSS_INITCONTEXT
 USE_NSS
 USE_CYASSL
 USE_POLARSSL
 HAVE_GNUTLS_SRP
 USE_GNUTLS_NETTLE
 USE_GNUTLS
@@ -20871,12 +20870,13 @@
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
  /* is AF_INET6 available? */
 #include <sys/types.h>
 #include <sys/socket.h>
+#include <stdlib.h> /* for exit() */
 main()
 {
  if (socket(AF_INET6, SOCK_STREAM, 0) < 0)
    exit(1);
  else
    exit(0);
@@ -23394,12 +23394,46 @@
     fi
 
     if test "x$USE_CYASSL" = "xyes"; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: detected CyaSSL" >&5
 $as_echo "$as_me: detected CyaSSL" >&6;}
 
+            # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long long" >&5
+$as_echo_n "checking size of long long... " >&6; }
+if ${ac_cv_sizeof_long_long+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long long))" "ac_cv_sizeof_long_long"        "$ac_includes_default"; then :
+
+else
+  if test "$ac_cv_type_long_long" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error 77 "cannot compute sizeof (long long)
+See \`config.log' for more details" "$LINENO" 5; }
+   else
+     ac_cv_sizeof_long_long=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long_long" >&5
+$as_echo "$ac_cv_sizeof_long_long" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+#define SIZEOF_LONG_LONG $ac_cv_sizeof_long_long
+_ACEOF
+
+
+
       LIBS="-lcyassl -lm $LIBS"
 
       if test -n "$cyassllib"; then
                                         if test "x$cross_compiling" != "xyes"; then
           LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$cyassllib"
           export LD_LIBRARY_PATH
@@ -23595,46 +23629,46 @@
 
       LIBS="$addlib $LIBS"
       if test "$addcflags" != "-I/usr/include"; then
          CPPFLAGS="$CPPFLAGS $addcflags"
       fi
 
-            { $as_echo "$as_me:${as_lineno-$LINENO}: checking for PK11_CreateGenericObject in -lnss3" >&5
-$as_echo_n "checking for PK11_CreateGenericObject in -lnss3... " >&6; }
-if ${ac_cv_lib_nss3_PK11_CreateGenericObject+:} false; then :
+            { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSL_VersionRangeSet in -lnss3" >&5
+$as_echo_n "checking for SSL_VersionRangeSet in -lnss3... " >&6; }
+if ${ac_cv_lib_nss3_SSL_VersionRangeSet+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
 LIBS="-lnss3  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 
 #ifdef __cplusplus
 extern "C"
 #endif
-char PK11_CreateGenericObject ();
+char SSL_VersionRangeSet ();
 int main (void)
 {
-return PK11_CreateGenericObject ();
+return SSL_VersionRangeSet ();
  ;
  return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ac_cv_lib_nss3_PK11_CreateGenericObject=yes
+  ac_cv_lib_nss3_SSL_VersionRangeSet=yes
 else
-  ac_cv_lib_nss3_PK11_CreateGenericObject=no
+  ac_cv_lib_nss3_SSL_VersionRangeSet=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
 LIBS=$ac_check_lib_save_LIBS
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_nss3_PK11_CreateGenericObject" >&5
-$as_echo "$ac_cv_lib_nss3_PK11_CreateGenericObject" >&6; }
-if test "x$ac_cv_lib_nss3_PK11_CreateGenericObject" = xyes; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_nss3_SSL_VersionRangeSet" >&5
+$as_echo "$ac_cv_lib_nss3_SSL_VersionRangeSet" >&6; }
+if test "x$ac_cv_lib_nss3_SSL_VersionRangeSet" = xyes; then :
 
 
 $as_echo "#define USE_NSS 1" >>confdefs.h
 
        USE_NSS=1
 
@@ -23651,24 +23685,12 @@
 
 
       if test "x$USE_NSS" = "xyes"; then
         { $as_echo "$as_me:${as_lineno-$LINENO}: detected NSS version $version" >&5
 $as_echo "$as_me: detected NSS version $version" >&6;}
 
-                        ac_fn_c_check_func "$LINENO" "NSS_InitContext" "ac_cv_func_NSS_InitContext"
-if test "x$ac_cv_func_NSS_InitContext" = xyes; then :
-
-
-$as_echo "#define HAVE_NSS_INITCONTEXT 1" >>confdefs.h
-
-          HAVE_NSS_INITCONTEXT=1
-
-
-fi
-
-
                                         if test "x$cross_compiling" != "xyes"; then
           LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$nssprefix/lib$libsuff"
           export LD_LIBRARY_PATH
           { $as_echo "$as_me:${as_lineno-$LINENO}: Added $nssprefix/lib$libsuff to LD_LIBRARY_PATH" >&5
 $as_echo "$as_me: Added $nssprefix/lib$libsuff to LD_LIBRARY_PATH" >&6;}
         fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/configure.ac	2013-09-09 06:21:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/configure.ac	2013-12-17 06:02:35.000000000 +0800
@@ -1062,12 +1062,13 @@
        ;;
   esac ],
 
   AC_TRY_RUN([ /* is AF_INET6 available? */
 #include <sys/types.h>
 #include <sys/socket.h>
+#include <stdlib.h> /* for exit() */
 main()
 {
  if (socket(AF_INET6, SOCK_STREAM, 0) < 0)
    exit(1);
  else
    exit(0);
@@ -1980,12 +1981,15 @@
        ])
     fi
 
     if test "x$USE_CYASSL" = "xyes"; then
       AC_MSG_NOTICE([detected CyaSSL])
 
+      dnl cyassl/ctaocrypt/types.h needs SIZEOF_LONG_LONG defined!
+      AC_CHECK_SIZEOF(long long)
+
       LIBS="-lcyassl -lm $LIBS"
 
       if test -n "$cyassllib"; then
         dnl when shared libs were found in a path that the run-time
         dnl linker doesn't search through, we need to add it to
         dnl LD_LIBRARY_PATH to prevent further configure tests to fail
@@ -2064,14 +2068,14 @@
 
       LIBS="$addlib $LIBS"
       if test "$addcflags" != "-I/usr/include"; then
          CPPFLAGS="$CPPFLAGS $addcflags"
       fi
 
-      dnl The function PK11_CreateGenericObject is needed to load libnsspem.so
-      AC_CHECK_LIB(nss3, PK11_CreateGenericObject,
+      dnl The function SSL_VersionRangeSet() is needed to enable TLS > 1.0
+      AC_CHECK_LIB(nss3, SSL_VersionRangeSet,
        [
        AC_DEFINE(USE_NSS, 1, [if NSS is enabled])
        AC_SUBST(USE_NSS, [1])
        USE_NSS="yes"
        NSS_ENABLED=1
        curl_ssl_msg="enabled (NSS)"
@@ -2081,20 +2085,12 @@
          CPPFLAGS="$CLEANCPPFLAGS"
        ])
 
       if test "x$USE_NSS" = "xyes"; then
         AC_MSG_NOTICE([detected NSS version $version])
 
-        dnl NSS_InitContext() was introduced in NSS 3.12.5 and helps to prevent
-        dnl collisions on NSS initialization/shutdown with other libraries
-        AC_CHECK_FUNC(NSS_InitContext,
-        [
-          AC_DEFINE(HAVE_NSS_INITCONTEXT, 1, [if you have the NSS_InitContext function])
-          AC_SUBST(HAVE_NSS_INITCONTEXT, [1])
-        ])
-
         dnl when shared libs were found in a path that the run-time
         dnl linker doesn't search through, we need to add it to
         dnl LD_LIBRARY_PATH to prevent further configure tests to fail
         dnl due to this
         if test "x$cross_compiling" != "xyes"; then
           LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$nssprefix/lib$libsuff"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/curl.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/curl.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/curl.1	2013-10-13 05:26:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/curl.1	2013-12-17 06:02:35.000000000 +0800
@@ -643,16 +643,16 @@
 .IP "-g, --globoff"
 This option switches off the "URL globbing parser". When you set this option,
 you can specify URLs that contain the letters {}[] without having them being
 interpreted by curl itself. Note that these letters are not normal legal URL
 contents but they should be encoded according to the URI standard.
 .IP "-G, --get"
-When used, this option will make all data specified with \fI-d, --data\fP or
-\fI--data-binary\fP to be used in an HTTP GET request instead of the POST
-request that otherwise would be used. The data will be appended to the URL
-with a '?' separator.
+When used, this option will make all data specified with \fI-d, --data\fP,
+\fI--data-binary\fP or \fI--data-urlencode\fP to be used in an HTTP GET
+request instead of the POST request that otherwise would be used. The data
+will be appended to the URL with a '?' separator.
 
 If used in combination with -I, the POST data will instead be appended to the
 URL with a HEAD request.
 
 If this option is used several times, only the first one is used. This is
 because undoing a GET doesn't make sense, but you should then instead enforce
@@ -708,46 +708,51 @@
 as if a new session is started. Typical browsers always discard session
 cookies when they're closed down.
 .IP "-J, --remote-header-name"
 (HTTP) This option tells the \fI-O, --remote-name\fP option to use the
 server-specified Content-Disposition filename instead of extracting a filename
 from the URL.
+
+There's no attempt to decode %-sequences (yet) in the provided file name, so
+this option may provide you with rather unexpected file names.
 .IP "-k, --insecure"
 (SSL) This option explicitly allows curl to perform "insecure" SSL connections
 and transfers. All SSL connections are attempted to be made secure by using
 the CA certificate bundle installed by default. This makes all connections
 considered "insecure" fail unless \fI-k, --insecure\fP is used.
 
 See this online resource for further details:
 \fBhttp://curl.haxx.se/docs/sslcerts.html\fP
 .IP "-K, --config <config file>"
 Specify which config file to read curl arguments from. The config file is a
 text file in which command line arguments can be written which then will be
-used as if they were written on the actual command line. Options and their
-parameters must be specified on the same config file line, separated by
-whitespace, colon, the equals sign or any combination thereof (however,
-the preferred separator is the equals sign). If the parameter is to contain
-whitespace, the parameter must be enclosed within quotes. Within double
-quotes, the following escape sequences are available: \\\\, \\", \\t, \\n,
-\\r and \\v. A backslash preceding any other letter is ignored. If the
-first column of a config line is a '#' character, the rest of the line will be
-treated as a comment. Only write one option per physical line in the config
-file.
+used as if they were written on the actual command line.
+
+Options and their parameters must be specified on the same config file line,
+separated by whitespace, colon, or the equals sign. Long option names can
+optionally be given in the config file without the initial double dashes and
+if so, the colon or equals characters can be used as separators. If the option
+is specified with one or two dashes, there can be no colon or equals character
+between the option and its parameter.
+
+If the parameter is to contain whitespace, the parameter must be enclosed
+within quotes. Within double quotes, the following escape sequences are
+available: \\\\, \\", \\t, \\n, \\r and \\v. A backslash preceding any other
+letter is ignored. If the first column of a config line is a '#' character,
+the rest of the line will be treated as a comment. Only write one option per
+physical line in the config file.
 
 Specify the filename to -K, --config as '-' to make curl read the file from
 stdin.
 
 Note that to be able to specify a URL in the config file, you need to specify
 it using the \fI--url\fP option, and not by simply writing the URL on its own
 line. So, it could look similar to this:
 
 url = "http://curl.haxx.se/docs/"
 
-Long option names can optionally be given in the config file without the
-initial double dashes.
-
 When curl is invoked, it always (unless \fI-q\fP is used) checks for a default
 config file and uses it if found. The default config file is checked for in
 the following places in this order:
 
 1) curl tries to find the "home dir": It first checks for the CURL_HOME and
 then the HOME environment variables. Failing that, it uses getpwuid() on
@@ -803,21 +808,29 @@
 (GSS-Negotiate) support. This is not very common. Use \fI-V, --version\fP to
 see if your curl supports it.
 
 If this option is used several times, the last one will be used.
 .IP "-l, --list-only"
 (FTP)
-When listing an FTP directory, this switch forces a name-only view.
-Especially useful if you want to machine-parse the contents of an FTP
-directory since the normal directory view doesn't use a standard look
-or format.
-
-This option causes an FTP NLST command to be sent.  Some FTP servers
-list only files in their response to NLST; they do not include
-subdirectories and symbolic links.
-
+When listing an FTP directory, this switch forces a name-only view. This is
+especially useful if the user wants to machine-parse the contents of an FTP
+directory since the normal directory view doesn't use a standard look or
+format. When used like this, the option causes a NLST command to be sent to
+the server instead of LIST.
+
+Note: Some FTP servers list only files in their response to NLST; they do not
+include sub-directories and symbolic links.
+
+(POP3)
+When retrieving a specific email from POP3, this switch forces a LIST command
+to be performed instead of RETR. This is particularly useful if the user wants
+to see if a specific message id exists on the server and what size it is.
+
+Note: When combined with \fI-X, --request <command>\fP, this option can be used
+to send an UIDL command instead, so the user may use the email's unique
+identifier rather than it's message id to make the request. (Added in 7.21.5)
 .IP "-L, --location"
 (HTTP/HTTPS) If the server reports that the requested page has moved to a
 different location (indicated with a Location: header and a 3XX response code),
 this option will make curl redo the request on the new place. If used together
 with \fI-i, --include\fP or \fI-I, --head\fP, headers from all requested pages
 will be shown. When authentication is used, curl only sends its credentials to
@@ -891,16 +904,24 @@
 return with exit code 63.
 
 \fBNOTE:\fP The file size is not always known prior to download, and for such
 files this option has no effect even if the file transfer ends up being larger
 than this given limit. This concerns both FTP and HTTP transfers.
 .IP "--mail-rcpt <address>"
-(SMTP) Specify a single address that the given mail should get sent to. This
-option can be used multiple times to specify many recipients.
+(SMTP) Specify a single address, user name or mailing list name.
 
-(Added in 7.20.0)
+When performing a mail transfer, the recipient should specify a valid email
+address to send the mail to. (Added in 7.20.0)
+
+When performing an address verification (VRFY command), the recipient should be
+specified as the user name or user name and domain (as per Section 3.5 of
+RFC5321). (Added in 7.34.0)
+
+When performing a mailing list expand (EXPN command), the recipient should be
+specified using the mailing list name, such as "Friends" or "London-Office".
+(Added in 7.34.0)
 .IP "--max-redirs <num>"
 Set maximum number of redirection-followings allowed. If \fI-L, --location\fP
 is used, this option can be used to prevent curl from following redirections
 \&"in absurdum". By default, the limit is set to 50 redirections. Set this
 option to -1 to make it limitless.
 
@@ -1050,17 +1071,21 @@
 nothing else.
 
 Consequentially, the file will be saved in the current working directory. If
 you want the file saved in a different directory, make sure you change current
 working directory before you invoke curl with the \fB-O, --remote-name\fP flag!
 
+There is no URL decoding done on the file name. If it has %20 or other URL
+encoded parts of the name, they will end up as-is as file name.
+
 You may use this option as many times as the number of URLs you have.
 .IP "--oauth2-bearer"
-(IMAP/POP3/SMTP) Specify the Bearer Token for OAUTH 2.0 server authentication.
-The Bearer Token is used in conjuction with the user name which can be
-specified as part of the \fI--url\fP or \fI-u, --user\fP options.
+(IMAP, POP3, SMTP)
+Specify the Bearer Token for OAUTH 2.0 server authentication. The Bearer Token
+is used in conjunction with the user name which can be specified as part of the
+\fI--url\fP or \fI-u, --user\fP options.
 
 The Bearer Token and user name are formatted according to RFC 6750.
 
 If this option is used several times, the last one will be used.
 .IP "-p, --proxytunnel"
 When an HTTP proxy is used (\fI-x, --proxy\fP), this option will cause non-HTTP
@@ -1495,20 +1520,32 @@
 (Added in 7.20.0)
 .IP "--tlsauthtype <authtype>"
 Set TLS authentication type. Currently, the only supported option is "SRP",
 for TLS-SRP (RFC 5054). If \fI--tlsuser\fP and \fI--tlspassword\fP are
 specified but \fI--tlsauthtype\fP is not, then this option defaults to "SRP".
 (Added in 7.21.4)
-.IP "--tlsuser <user>"
-Set username for use with the TLS authentication method specified with
-\fI--tlsauthtype\fP. Requires that \fI--tlspassword\fP also be set.  (Added in
-7.21.4)
 .IP "--tlspassword <password>"
 Set password for use with the TLS authentication method specified with
 \fI--tlsauthtype\fP. Requires that \fI--tlsuser\fP also be set.  (Added in
 7.21.4)
+.IP "--tlsuser <user>"
+Set username for use with the TLS authentication method specified with
+\fI--tlsauthtype\fP. Requires that \fI--tlspassword\fP also be set.  (Added in
+7.21.4)
+.IP "--tlsv1.0"
+(SSL)
+Forces curl to use TLS version 1.0 when negotiating with a remote TLS server.
+(Added in 7.34.0)
+.IP "--tlsv1.1"
+(SSL)
+Forces curl to use TLS version 1.1 when negotiating with a remote TLS server.
+(Added in 7.34.0)
+.IP "--tlsv1.2"
+(SSL)
+Forces curl to use TLS version 1.2 when negotiating with a remote TLS server.
+(Added in 7.34.0)
 .IP "--tr-encoding"
 (HTTP) Request a compressed Transfer-Encoding response using one of the
 algorithms curl supports, and uncompress the data while receiving it.
 
 (Added in 7.21.6)
 .IP "--trace <file>"
@@ -1758,14 +1795,23 @@
 option.
 
 (FTP)
 Specifies a custom FTP command to use instead of LIST when doing file lists
 with FTP.
 
-If this option is used several times, the last one will be used.
+(POP3)
+Specifies a custom POP3 command to use instead of LIST or RETR. (Added in
+7.26.0)
+
+(IMAP)
+Specifies a custom IMAP command to use insead of LIST. (Added in 7.30.0)
 
+(SMTP)
+Specifies a custom SMTP command to use instead of HELP or VRFY. (Added in 7.34.0)
+
+If this option is used several times, the last one will be used.
 .IP "--xattr"
 When saving output to a file, this option tells curl to store certain file
 metadata in extended file attributes. Currently, the URL is stored in the
 xdg.origin.url attribute and, for HTTP, the content type is stored in
 the mime_type attribute. If the file system does not support extended
 attributes, a warning is issued.
@@ -2052,12 +2098,14 @@
 .IP 86
 RTSP: mismatch of Session Identifiers
 .IP 87
 unable to parse FTP file list
 .IP 88
 FTP chunk callback reported error
+.IP 89
+No connection available, the session will be queued
 .IP XX
 More error codes will appear here in future releases. The existing ones
 are meant to never change.
 .SH AUTHORS / CONTRIBUTORS
 Daniel Stenberg is the main author, but the whole list of contributors is
 found in the separate THANKS file.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/curl-config.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/curl-config.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/curl.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/curl.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/curl.html	2013-10-14 22:43:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/curl.html	2013-12-17 15:51:23.000000000 +0800
@@ -281,13 +281,13 @@
 <p class="level1">(FTP) Require SSL/TLS for the FTP login, clear for transfer.  Allows secure authentication, but non-encrypted data transfers for efficiency.  Fails the transfer if the server doesn't support SSL/TLS.  (Added in 7.16.0) that can still be used but will be removed in a future version. 
 <p class="level0"><a name="--form-string"></a><span class="nroffip">--form-string &lt;name=string&gt;</span> 
 <p class="level1">(HTTP) Similar to <span Class="emphasis">--form</span> except that the value string for the named parameter is used literally. Leading '@' and '&lt;' characters, and the ';type=' string in the value have no special meaning. Use this in preference to <span Class="emphasis">--form</span> if there's any possibility that the string value may accidentally trigger the '@' or '&lt;' features of <span Class="emphasis">--form</span>. 
 <p class="level0"><a name="-g"></a><span class="nroffip">-g, --globoff</span> 
 <p class="level1">This option switches off the "URL globbing parser". When you set this option, you can specify URLs that contain the letters {}[] without having them being interpreted by curl itself. Note that these letters are not normal legal URL contents but they should be encoded according to the URI standard. 
 <p class="level0"><a name="-G"></a><span class="nroffip">-G, --get</span> 
-<p class="level1">When used, this option will make all data specified with <a class="emphasis" href="#-d">-d, --data</a> or <a class="emphasis" href="#--data-binary">--data-binary</a> to be used in an HTTP GET request instead of the POST request that otherwise would be used. The data will be appended to the URL with a '?' separator. 
+<p class="level1">When used, this option will make all data specified with <a class="emphasis" href="#-d">-d, --data</a>, <a class="emphasis" href="#--data-binary">--data-binary</a> or <a class="emphasis" href="#--data-urlencode">--data-urlencode</a> to be used in an HTTP GET request instead of the POST request that otherwise would be used. The data will be appended to the URL with a '?' separator. 
 <p class="level1">If used in combination with -I, the POST data will instead be appended to the URL with a HEAD request. 
 <p class="level1">If this option is used several times, only the first one is used. This is because undoing a GET doesn't make sense, but you should then instead enforce the alternative method you prefer. 
 <p class="level0"><a name="-H"></a><span class="nroffip">-H, --header &lt;header&gt;</span> 
 <p class="level1">(HTTP) Extra header to use when getting a web page. You may specify any number of extra headers. Note that if you should add a custom header that has the same name as one of the internal ones curl would use, your externally set header will be used instead of the internal one. This allows you to make even trickier stuff than curl would normally do. You should not replace internally set headers without knowing perfectly well what you're doing. Remove an internal header by giving a replacement without content on the right side of the colon, as in: -H "Host:". If you send the custom header with no-value then its header must be terminated with a semicolon, such as -H "X-Custom-Header;" to send "X-Custom-Header:". 
 <p class="level1">curl will make sure that each header you add/replace is sent with the proper end-of-line marker, you should thus <span Class="bold">not</span> add that as a part of the header content: do not add newlines or carriage returns, they will only mess things up for you. 
 <p class="level1">See also the <a class="emphasis" href="#-A">-A, --user-agent</a> and <a class="emphasis" href="#-e">-e, --referer</a> options. 
@@ -305,21 +305,23 @@
 <p class="level1">&nbsp;curl --interface eth0:1 <a href="http://www.netscape.com/">http://www.netscape.com/</a> 
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="-j"></a><span class="nroffip">-j, --junk-session-cookies</span> 
 <p class="level1">(HTTP) When curl is told to read cookies from a given file, this option will make it discard all "session cookies". This will basically have the same effect as if a new session is started. Typical browsers always discard session cookies when they're closed down. 
 <p class="level0"><a name="-J"></a><span class="nroffip">-J, --remote-header-name</span> 
 <p class="level1">(HTTP) This option tells the <a class="emphasis" href="#-O">-O, --remote-name</a> option to use the server-specified Content-Disposition filename instead of extracting a filename from the URL. 
+<p class="level1">There's no attempt to decode %-sequences (yet) in the provided file name, so this option may provide you with rather unexpected file names. 
 <p class="level0"><a name="-k"></a><span class="nroffip">-k, --insecure</span> 
 <p class="level1">(SSL) This option explicitly allows curl to perform "insecure" SSL connections and transfers. All SSL connections are attempted to be made secure by using the CA certificate bundle installed by default. This makes all connections considered "insecure" fail unless <a class="emphasis" href="#-k">-k, --insecure</a> is used. 
 <p class="level1">See this online resource for further details: <span Class="bold"><a href="http://curl.haxx.se/docs/sslcerts.html">http://curl.haxx.se/docs/sslcerts.html</a></span> 
 <p class="level0"><a name="-K"></a><span class="nroffip">-K, --config &lt;config file&gt;</span> 
-<p class="level1">Specify which config file to read curl arguments from. The config file is a text file in which command line arguments can be written which then will be used as if they were written on the actual command line. Options and their parameters must be specified on the same config file line, separated by whitespace, colon, the equals sign or any combination thereof (however, the preferred separator is the equals sign). If the parameter is to contain whitespace, the parameter must be enclosed within quotes. Within double quotes, the following escape sequences are available: \\, \", \t, \n, \r and \v. A backslash preceding any other letter is ignored. If the first column of a config line is a '#' character, the rest of the line will be treated as a comment. Only write one option per physical line in the config file. 
+<p class="level1">Specify which config file to read curl arguments from. The config file is a text file in which command line arguments can be written which then will be used as if they were written on the actual command line. 
+<p class="level1">Options and their parameters must be specified on the same config file line, separated by whitespace, colon, or the equals sign. Long option names can optionally be given in the config file without the initial double dashes and if so, the colon or equals characters can be used as separators. If the option is specified with one or two dashes, there can be no colon or equals character between the option and its parameter. 
+<p class="level1">If the parameter is to contain whitespace, the parameter must be enclosed within quotes. Within double quotes, the following escape sequences are available: \\, \", \t, \n, \r and \v. A backslash preceding any other letter is ignored. If the first column of a config line is a '#' character, the rest of the line will be treated as a comment. Only write one option per physical line in the config file. 
 <p class="level1">Specify the filename to -K, --config as '-' to make curl read the file from stdin. 
 <p class="level1">Note that to be able to specify a URL in the config file, you need to specify it using the <a class="emphasis" href="#--url">--url</a> option, and not by simply writing the URL on its own line. So, it could look similar to this: 
 <p class="level1">url = "<a href="http://curl.haxx.se/docs/">http://curl.haxx.se/docs/</a>" 
-<p class="level1">Long option names can optionally be given in the config file without the initial double dashes. 
 <p class="level1">When curl is invoked, it always (unless <a class="emphasis" href="#-q">-q</a> is used) checks for a default config file and uses it if found. The default config file is checked for in the following places in this order: 
 <p class="level1">1) curl tries to find the "home dir": It first checks for the CURL_HOME and then the HOME environment variables. Failing that, it uses getpwuid() on UNIX-like systems (which returns the home dir given the current user in your system). On Windows, it then checks for the APPDATA variable, or as a last resort the '%USERPROFILE%\Application Data'. 
 <p class="level1">2) On windows, if there is no _curlrc file in the home dir, it checks for one in the same dir the curl executable is placed. On UNIX-like systems, it will simply try to load .curlrc from the determined home dir. 
 <p class="level1"><pre>
 <p class="level1"># --- Example file ---
  # this is a comment
@@ -346,15 +348,16 @@
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="--krb"></a><span class="nroffip">--krb &lt;level&gt;</span> 
 <p class="level1">(FTP) Enable Kerberos authentication and use. The level must be entered and should be one of 'clear', 'safe', 'confidential', or 'private'. Should you use a level that is not one of these, 'private' will instead be used. 
 <p class="level1">This option requires a library built with kerberos4 or GSSAPI (GSS-Negotiate) support. This is not very common. Use <a class="emphasis" href="#-V">-V, --version</a> to see if your curl supports it. 
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="-l"></a><span class="nroffip">-l, --list-only</span> 
-<p class="level1">(FTP) When listing an FTP directory, this switch forces a name-only view. Especially useful if you want to machine-parse the contents of an FTP directory since the normal directory view doesn't use a standard look or format. 
-<p class="level1">This option causes an FTP NLST command to be sent.  Some FTP servers list only files in their response to NLST; they do not include subdirectories and symbolic links. 
-<p class="level1">
+<p class="level1">(FTP) When listing an FTP directory, this switch forces a name-only view. This is especially useful if the user wants to machine-parse the contents of an FTP directory since the normal directory view doesn't use a standard look or format. When used like this, the option causes a NLST command to be sent to the server instead of LIST. 
+<p class="level1">Note: Some FTP servers list only files in their response to NLST; they do not include sub-directories and symbolic links. 
+<p class="level1">(POP3) When retrieving a specific email from POP3, this switch forces a LIST command to be performed instead of RETR. This is particularly useful if the user wants to see if a specific message id exists on the server and what size it is. 
+<p class="level1">Note: When combined with <a class="emphasis" href="#-X">-X, --request &lt;command&gt;</a>, this option can be used to send an UIDL command instead, so the user may use the email's unique identifier rather than it's message id to make the request. (Added in 7.21.5) 
 <p class="level0"><a name="-L"></a><span class="nroffip">-L, --location</span> 
 <p class="level1">(HTTP/HTTPS) If the server reports that the requested page has moved to a different location (indicated with a Location: header and a 3XX response code), this option will make curl redo the request on the new place. If used together with <a class="emphasis" href="#-i">-i, --include</a> or <a class="emphasis" href="#-I">-I, --head</a>, headers from all requested pages will be shown. When authentication is used, curl only sends its credentials to the initial host. If a redirect takes curl to a different host, it won't be able to intercept the user+password. See also <a class="emphasis" href="#--location-trusted">--location-trusted</a> on how to change this. You can limit the amount of redirects to follow by using the <a class="emphasis" href="#--max-redirs">--max-redirs</a> option. 
 <p class="level1">When curl follows a redirect and the request is not a plain GET (for example POST or PUT), it will do the following request with a GET if the HTTP response was 301, 302, or 303. If the response code was any other 3xx code, curl will re-send the following request using the same unmodified method. 
 <p class="level0"><a name="--libcurl"></a><span class="nroffip">--libcurl &lt;file&gt;</span> 
 <p class="level1">Append this option to any ordinary curl command line, and you will get a libcurl-using C source code written to the file that does the equivalent of what your command-line operation does! 
 <p class="level1">If this option is used several times, the last given file name will be used. (Added in 7.16.1) 
@@ -378,14 +381,16 @@
 <p class="level1">(SMTP) Specify a single address that the given mail should get sent from. 
 <p class="level1">(Added in 7.20.0) 
 <p class="level0"><a name="--max-filesize"></a><span class="nroffip">--max-filesize &lt;bytes&gt;</span> 
 <p class="level1">Specify the maximum size (in bytes) of a file to download. If the file requested is larger than this value, the transfer will not start and curl will return with exit code 63. 
 <p class="level1"><span Class="bold">NOTE:</span> The file size is not always known prior to download, and for such files this option has no effect even if the file transfer ends up being larger than this given limit. This concerns both FTP and HTTP transfers. 
 <p class="level0"><a name="--mail-rcpt"></a><span class="nroffip">--mail-rcpt &lt;address&gt;</span> 
-<p class="level1">(SMTP) Specify a single address that the given mail should get sent to. This option can be used multiple times to specify many recipients. 
-<p class="level1">(Added in 7.20.0) 
+<p class="level1">(SMTP) Specify a single address, user name or mailing list name. 
+<p class="level1">When performing a mail transfer, the recipient should specify a valid email address to send the mail to. (Added in 7.20.0) 
+<p class="level1">When performing an address verification (VRFY command), the recipient should be specified as the user name or user name and domain (as per Section 3.5 of <a href="http://www.ietf.org/rfc/rfc5321.txt">RFC 5321</a>). (Added in 7.34.0) 
+<p class="level1">When performing a mailing list expand (EXPN command), the recipient should be specified using the mailing list name, such as "Friends" or "London-Office". (Added in 7.34.0) 
 <p class="level0"><a name="--max-redirs"></a><span class="nroffip">--max-redirs &lt;num&gt;</span> 
 <p class="level1">Set maximum number of redirection-followings allowed. If <a class="emphasis" href="#-L">-L, --location</a> is used, this option can be used to prevent curl from following redirections "in absurdum". By default, the limit is set to 50 redirections. Set this option to -1 to make it limitless. 
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="--metalink"></a><span class="nroffip">--metalink</span> 
 <p class="level1">This option can tell curl to parse and process a given URI as Metalink file (both version 3 and 4 (<a href="http://www.ietf.org/rfc/rfc5854.txt">RFC 5854</a>) are supported) and make use of the mirrors listed within for failover if there are errors (such as the file or server not being available). It will also verify the hash of the file after the download completes. The Metalink file itself is downloaded and processed in memory and not stored in the local file system. 
 <p class="level1">Example to use a remote Metalink file: 
@@ -435,15 +440,16 @@
 <p class="level1">You may use this option as many times as the number of URLs you have. 
 <p class="level1">See also the <a class="emphasis" href="#--create-dirs">--create-dirs</a> option to create the local directories dynamically. Specifying the output as '-' (a single dash) will force the output to be done to stdout. 
 <p class="level0"><a name="-O"></a><span class="nroffip">-O, --remote-name</span> 
 <p class="level1">Write output to a local file named like the remote file we get. (Only the file part of the remote file is used, the path is cut off.) 
 <p class="level1">The remote file name to use for saving is extracted from the given URL, nothing else. 
 <p class="level1">Consequentially, the file will be saved in the current working directory. If you want the file saved in a different directory, make sure you change current working directory before you invoke curl with the <a class="bold" href="#-O">-O, --remote-name</a> flag! 
+<p class="level1">There is no URL decoding done on the file name. If it has %20 or other URL encoded parts of the name, they will end up as-is as file name. 
 <p class="level1">You may use this option as many times as the number of URLs you have. 
 <p class="level0"><a name="--oauth2-bearer"></a><span class="nroffip">--oauth2-bearer</span> 
-<p class="level1">(IMAP/POP3/SMTP) Specify the Bearer Token for OAUTH 2.0 server authentication. The Bearer Token is used in conjuction with the user name which can be specified as part of the <a class="emphasis" href="#--url">--url</a> or <a class="emphasis" href="#-u">-u, --user</a> options. 
+<p class="level1">(IMAP, POP3, SMTP) Specify the Bearer Token for OAUTH 2.0 server authentication. The Bearer Token is used in conjunction with the user name which can be specified as part of the <a class="emphasis" href="#--url">--url</a> or <a class="emphasis" href="#-u">-u, --user</a> options. 
 <p class="level1">The Bearer Token and user name are formatted according to <a href="http://www.ietf.org/rfc/rfc6750.txt">RFC 6750</a>. 
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="-p"></a><span class="nroffip">-p, --proxytunnel</span> 
 <p class="level1">When an HTTP proxy is used (<a class="emphasis" href="#-x">-x, --proxy</a>), this option will cause non-HTTP protocols to attempt to tunnel through the proxy instead of merely using it to do HTTP-like operations. The tunnel approach is made with the HTTP proxy CONNECT request and requires that the proxy allows direct connect to the remote port number curl wants to tunnel through to. 
 <p class="level0"><a name="-P"></a><span class="nroffip">-P, --ftp-port &lt;address&gt;</span> 
 <p class="level1">(FTP) Reverses the default initiator/listener roles when connecting with FTP. This switch makes curl use active mode. In practice, curl then tells the server to connect back to the client's specified address and port, while passive mode asks the server to setup an IP address and port for it to connect to. &lt;address&gt; should be one of: 
@@ -630,16 +636,22 @@
 <p class="level0"><a name="--tftp-blksize"></a><span class="nroffip">--tftp-blksize &lt;value&gt;</span> 
 <p class="level1">(TFTP) Set TFTP BLKSIZE option (must be &gt;512). This is the block size that curl will try to use when transferring data to or from a TFTP server. By default 512 bytes will be used. 
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level1">(Added in 7.20.0) 
 <p class="level0"><a name="--tlsauthtype"></a><span class="nroffip">--tlsauthtype &lt;authtype&gt;</span> 
 <p class="level1">Set TLS authentication type. Currently, the only supported option is "SRP", for TLS-SRP (<a href="http://www.ietf.org/rfc/rfc5054.txt">RFC 5054</a>). If <a class="emphasis" href="#--tlsuser">--tlsuser</a> and <a class="emphasis" href="#--tlspassword">--tlspassword</a> are specified but <a class="emphasis" href="#--tlsauthtype">--tlsauthtype</a> is not, then this option defaults to "SRP". (Added in 7.21.4) 
-<p class="level0"><a name="--tlsuser"></a><span class="nroffip">--tlsuser &lt;user&gt;</span> 
-<p class="level1">Set username for use with the TLS authentication method specified with <a class="emphasis" href="#--tlsauthtype">--tlsauthtype</a>. Requires that <a class="emphasis" href="#--tlspassword">--tlspassword</a> also be set.  (Added in 7.21.4) 
 <p class="level0"><a name="--tlspassword"></a><span class="nroffip">--tlspassword &lt;password&gt;</span> 
 <p class="level1">Set password for use with the TLS authentication method specified with <a class="emphasis" href="#--tlsauthtype">--tlsauthtype</a>. Requires that <a class="emphasis" href="#--tlsuser">--tlsuser</a> also be set.  (Added in 7.21.4) 
+<p class="level0"><a name="--tlsuser"></a><span class="nroffip">--tlsuser &lt;user&gt;</span> 
+<p class="level1">Set username for use with the TLS authentication method specified with <a class="emphasis" href="#--tlsauthtype">--tlsauthtype</a>. Requires that <a class="emphasis" href="#--tlspassword">--tlspassword</a> also be set.  (Added in 7.21.4) 
+<p class="level0"><a name="--tlsv10"></a><span class="nroffip">--tlsv1.0</span> 
+<p class="level1">(SSL) Forces curl to use TLS version 1.0 when negotiating with a remote TLS server. (Added in 7.34.0) 
+<p class="level0"><a name="--tlsv11"></a><span class="nroffip">--tlsv1.1</span> 
+<p class="level1">(SSL) Forces curl to use TLS version 1.1 when negotiating with a remote TLS server. (Added in 7.34.0) 
+<p class="level0"><a name="--tlsv12"></a><span class="nroffip">--tlsv1.2</span> 
+<p class="level1">(SSL) Forces curl to use TLS version 1.2 when negotiating with a remote TLS server. (Added in 7.34.0) 
 <p class="level0"><a name="--tr-encoding"></a><span class="nroffip">--tr-encoding</span> 
 <p class="level1">(HTTP) Request a compressed Transfer-Encoding response using one of the algorithms curl supports, and uncompress the data while receiving it. 
 <p class="level1">(Added in 7.21.6) 
 <p class="level0"><a name="--trace"></a><span class="nroffip">--trace &lt;file&gt;</span> 
 <p class="level1">Enables a full trace dump of all incoming and outgoing data, including descriptive information, to the given output file. Use "-" as filename to have the output sent to stdout. 
 <p class="level1">This option overrides previous uses of <a class="emphasis" href="#-v">-v, --verbose</a> or <a class="emphasis" href="#--trace-ascii">--trace-ascii</a>. 
@@ -716,14 +728,16 @@
 <p class="level1">If this option is used several times, the last one will be used. 
 <p class="level0"><a name="-X"></a><span class="nroffip">-X, --request &lt;command&gt;</span> 
 <p class="level1">(HTTP) Specifies a custom request method to use when communicating with the HTTP server.  The specified request will be used instead of the method otherwise used (which defaults to GET). Read the HTTP 1.1 specification for details and explanations. Common additional HTTP requests include PUT and DELETE, but related technologies like WebDAV offers PROPFIND, COPY, MOVE and more. 
 <p class="level1">Normally you don't need this option. All sorts of GET, HEAD, POST and PUT requests are rather invoked by using dedicated command line options. 
 <p class="level1">This option only changes the actual word used in the HTTP request, it does not alter the way curl behaves. So for example if you want to make a proper HEAD request, using -X HEAD will not suffice. You need to use the <a class="emphasis" href="#-I">-I, --head</a> option. 
 <p class="level1">(FTP) Specifies a custom FTP command to use instead of LIST when doing file lists with FTP. 
+<p class="level1">(POP3) Specifies a custom POP3 command to use instead of LIST or RETR. (Added in 7.26.0) 
+<p class="level1">(IMAP) Specifies a custom IMAP command to use insead of LIST. (Added in 7.30.0) 
+<p class="level1">(SMTP) Specifies a custom SMTP command to use instead of HELP or VRFY. (Added in 7.34.0) 
 <p class="level1">If this option is used several times, the last one will be used. 
-<p class="level1">
 <p class="level0"><a name="--xattr"></a><span class="nroffip">--xattr</span> 
 <p class="level1">When saving output to a file, this option tells curl to store certain file metadata in extended file attributes. Currently, the URL is stored in the xdg.origin.url attribute and, for HTTP, the content type is stored in the mime_type attribute. If the file system does not support extended attributes, a warning is issued. 
 <p class="level1">
 <p class="level0"><a name="-y"></a><span class="nroffip">-y, --speed-time &lt;time&gt;</span> 
 <p class="level1">If a download is slower than speed-limit bytes per second during a speed-time period, the download gets aborted. If speed-time is used, the default speed-limit will be 1 unless set with <a class="emphasis" href="#-Y">-Y</a>. 
 <p class="level1">This option controls transfers and thus will not affect slow connects etc. If this is a concern for you, try the <a class="emphasis" href="#--connect-timeout">--connect-timeout</a> option. 
@@ -948,12 +962,14 @@
 <p class="level0"><a name="86"></a><span class="nroffip">86</span> 
 <p class="level1">RTSP: mismatch of Session Identifiers 
 <p class="level0"><a name="87"></a><span class="nroffip">87</span> 
 <p class="level1">unable to parse FTP file list 
 <p class="level0"><a name="88"></a><span class="nroffip">88</span> 
 <p class="level1">FTP chunk callback reported error 
+<p class="level0"><a name="89"></a><span class="nroffip">89</span> 
+<p class="level1">No connection available, the session will be queued 
 <p class="level0"><a name="XX"></a><span class="nroffip">XX</span> 
 <p class="level1">More error codes will appear here in future releases. The existing ones are meant to never change. <a name="AUTHORS"></a><h2 class="nroffsh">AUTHORS / CONTRIBUTORS</h2>
 <p class="level0">Daniel Stenberg is the main author, but the whole list of contributors is found in the separate THANKS file. <a name="WWW"></a><h2 class="nroffsh">WWW</h2>
 <p class="level0"><a href="http://curl.haxx.se">http://curl.haxx.se</a> <a name="FTP"></a><h2 class="nroffsh">FTP</h2>
 <p class="level0"><a href="ftp://ftp.sunet.se/pub/www/utilities/curl/">ftp://ftp.sunet.se/pub/www/utilities/curl/</a> <a name="SEE"></a><h2 class="nroffsh">SEE ALSO</h2>
 <p class="level0"><span Class="manpage">ftp (1)</span> <span Class="manpage">wget (1)</span> <p class="roffit">
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/curl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/curl.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/httpput.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/httpput.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/httpput.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/httpput.c	2013-12-17 06:02:35.000000000 +0800
@@ -19,14 +19,12 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 #include <stdio.h>
 #include <fcntl.h>
 #include <sys/stat.h>
-#include <unistd.h>
-
 #include <curl/curl.h>
 
 /*
  * This example shows a HTTP PUT operation. PUTs a file given as a command
  * line argument to the URL also given on the command line.
  *
@@ -56,28 +54,25 @@
 
 int main(int argc, char **argv)
 {
   CURL *curl;
   CURLcode res;
   FILE * hd_src ;
-  int hd ;
   struct stat file_info;
 
   char *file;
   char *url;
 
   if(argc < 3)
     return 1;
 
   file= argv[1];
   url = argv[2];
 
   /* get the file size of the local file */
-  hd = open(file, O_RDONLY) ;
-  fstat(hd, &file_info);
-  close(hd) ;
+  stat(file, &file_info);
 
   /* get a FILE * of the same file, could also be made with
      fdopen() from the previous descriptor, but hey this is just
      an example! */
   hd_src = fopen(file, "rb");
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -598,13 +598,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
@@ -757,13 +756,13 @@
 # These examples require external dependencies that may not be commonly
 # available on POSIX systems, so don't bother attempting to compile them here.
 COMPLICATED_EXAMPLES = curlgtk.c curlx.c htmltitle.cpp cacertinmem.c	   \
   ftpuploadresume.c ghiper.c hiperfifo.c htmltidy.c multithread.c	   \
   opensslthreadlock.c sampleconv.c synctime.c threaded-ssl.c evhiperfifo.c \
   smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp \
-  multi-uv.c xmlstream.c usercertinmem.c
+  multi-uv.c xmlstream.c usercertinmem.c sessioninfo.c
 
 all: all-am
 
 .SUFFIXES:
 .SUFFIXES: .c .lo .o .obj
 $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/Makefile.inc	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/Makefile.inc	2013-12-17 06:02:35.000000000 +0800
@@ -10,7 +10,7 @@
 # These examples require external dependencies that may not be commonly
 # available on POSIX systems, so don't bother attempting to compile them here.
 COMPLICATED_EXAMPLES = curlgtk.c curlx.c htmltitle.cpp cacertinmem.c	   \
   ftpuploadresume.c ghiper.c hiperfifo.c htmltidy.c multithread.c	   \
   opensslthreadlock.c sampleconv.c synctime.c threaded-ssl.c evhiperfifo.c \
   smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp \
-  multi-uv.c xmlstream.c usercertinmem.c
+  multi-uv.c xmlstream.c usercertinmem.c sessioninfo.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples: sessioninfo.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/usercertinmem.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/usercertinmem.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/examples/usercertinmem.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/examples/usercertinmem.c	2013-12-17 06:02:35.000000000 +0800
@@ -19,14 +19,15 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 /* Example using an in memory PEM user certificate and RSA key to retrieve an
  * https page.
  * Written by Ishan SinghLevett, based on Theo Borm's cacertinmem.c.
- * Note this example does not use a CA certificate, however one should be used
- * if you want a properly secure connection
+ * Note that to maintain simplicity this example does not use a CA certificate 
+ * for peer verification.  However, some form of peer verification
+ * must be used in real circumstances when a secure connection is required.
  */
 
 #include <openssl/ssl.h>
 #include <openssl/x509.h>
 #include <openssl/pem.h>
 #include <curl/curl.h>
@@ -149,12 +150,24 @@
   /*tell SSL to use the RSA key from memory*/
   ret = SSL_CTX_use_RSAPrivateKey((SSL_CTX*)sslctx, rsa);
   if (ret != 1) {
     printf("Use Key failed\n");
   }
 
+  /* free resources that have been allocated by openssl functions */
+  if (bio)
+    BIO_free(bio);
+
+  if (kbio)
+    BIO_free(kbio);
+
+  if (rsa)
+    RSA_free(rsa);
+
+  if (cert)
+    X509_free(cert);
 
   /* all set to go */
   return CURLE_OK ;
 }
 
 int main(void)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/INTERNALS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/INTERNALS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/INTERNALS	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/INTERNALS	2013-12-17 06:02:35.000000000 +0800
@@ -40,13 +40,13 @@
  c-ares       1.6.0
  libidn       0.4.1
  cyassl       2.0.0
  openldap     2.0
  MIT krb5 lib 1.2.4
  qsossl       V5R3M0
- NSS          3.12.x
+ NSS          3.14.x
  axTLS        1.2.7
  Heimdal      ?
 
  On systems where configure runs, we aim at working on them all - if they have
  a suitable C compiler. On systems that don't run configure, we strive to keep
  curl running fine on:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/KNOWN_BUGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/KNOWN_BUGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/KNOWN_BUGS	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/KNOWN_BUGS	2013-12-17 06:02:35.000000000 +0800
@@ -1,11 +1,30 @@
 These are problems known to exist at the time of this release. Feel free to
 join in and help us correct one or more of these! Also be sure to check the
 changelog of the current development status, as one or more of these problems
 may have been fixed since this was written!
 
+87. -J/--remote-header-name doesn't decode %-encoded file names. RFC6266
+  details how it should be done. The can of worm is basically that we have no
+  charset handling in curl and ascii >=128 is a challenge for us. Not to
+  mention that decoding also means that we need to check for nastyness that is
+  attempted, like "../" sequences and the like. Probably everything to the left
+  of any embedded slashes should be cut off.
+  http://curl.haxx.se/bug/view.cgi?id=1294
+
+86. The disconnect commands (LOGOUT and QUIT) may not be sent by IMAP, POP3
+  and SMTP if a failure occures during the authentication phase of a
+  connection.
+
+85. Wrong STARTTRANSFER timer accounting for POST requests
+  Timer works fine with GET requests, but while using POST the time for
+  CURLINFO_STARTTRANSFER_TIME is wrong. While using POST
+  CURLINFO_STARTTRANSFER_TIME minus CURLINFO_PRETRANSFER_TIME is near to zero
+  every time.
+  http://curl.haxx.se/bug/view.cgi?id=1213
+
 84. CURLINFO_SSL_VERIFYRESULT is only implemented for the OpenSSL and NSS
   backends, so relying on this information in a generic app is flaky.
 
 83. curl is unable to load non-default openssl engines, because openssl isn't
   initialized properly. This seems to require OpenSSL_config() or
   CONF_modules_load_file() to be used by libcurl but the first seems to not
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_duphandle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_duphandle.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_escape.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_escape.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_escape.pdf	2013-10-14 22:43:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_escape.pdf	2013-12-17 15:51:29.000000000 +0800
@@ -66,29 +66,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:8417f491-6cfb-11ee-0000-e20d2ea3735f' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:8417f491-6cfb-11ee-0000-e20d2ea3735f' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-10-14T16:43:19+02:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-10-14T16:43:19+02:00</xmp:CreateDate>
+<rdf:Description rdf:about='uuid:963a049a-9f0c-11ee-0000-e20d2ea3735f' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:963a049a-9f0c-11ee-0000-e20d2ea3735f' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-12-17T08:51:29+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-12-17T08:51:29+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:8417f491-6cfb-11ee-0000-e20d2ea3735f' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:8417f491-6cfb-11ee-0000-e20d2ea3735f'/>
-<rdf:Description rdf:about='uuid:8417f491-6cfb-11ee-0000-e20d2ea3735f' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:963a049a-9f0c-11ee-0000-e20d2ea3735f' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:963a049a-9f0c-11ee-0000-e20d2ea3735f'/>
+<rdf:Description rdf:about='uuid:963a049a-9f0c-11ee-0000-e20d2ea3735f' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20131014164319+02'00')
-/ModDate(D:20131014164319+02'00')
+/CreationDate(D:20131217085129+01'00')
+/ModDate(D:20131217085129+01'00')
 /Creator(groff version 1.22.2)>>endobj
 xref
 0 15
 0000000000 65535 f 
 0000001546 00000 n 
 0000003436 00000 n 
@@ -103,11 +103,11 @@
 0000001652 00000 n 
 0000001682 00000 n 
 0000001947 00000 n 
 0000002013 00000 n 
 trailer
 << /Size 15 /Root 1 0 R /Info 2 0 R
-/ID [<B7534C554541ED13BC678DFC66656D0B><B7534C554541ED13BC678DFC66656D0B>]
+/ID [<93699FC01B707A4A2B003439105A82E3><93699FC01B707A4A2B003439105A82E3>]
 >>
 startxref
 3590
 %%EOF
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_getinfo.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_getinfo.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_getinfo.3	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_getinfo.3	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at http://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -216,14 +216,26 @@
 struct that holds a number of linked lists with info about the certificate
 chain, assuming you had CURLOPT_CERTINFO enabled when the previous request was
 done. The struct reports how many certs it found and then you can extract info
 for each of those certs by following the linked lists. The info chain is
 provided in a series of data in the format "name:content" where the content is
 for the specific named data. See also the certinfo.c example. NOTE: this
-option is only available in libcurl built with OpenSSL support. (Added in
-7.19.1)
+option is only available in libcurl built with OpenSSL, NSS, GSKit or QsoSSL
+support. (Added in 7.19.1)
+.IP CURLINFO_TLS_SESSION
+Pass a pointer to a 'struct curl_tlsinfo *'.  The pointer will be initialized
+to refer to a 'struct curl_tlsinfo *' that will contain an enum indicating the
+SSL library used for the handshake and the respective internal TLS session
+structure of this underlying SSL library.
+
+This may then be used to extract certificate information in a format
+convenient for further processing, such as manual validation. NOTE: this
+option may not be available for all SSL backends; unsupported SSL backends
+will return 'CURLSSLBACKEND_NONE' to indicate that they are not supported;
+this does not mean that no SSL backend was used. (Added in 7.34.0)
+
 .IP CURLINFO_CONDITION_UNMET
 Pass a pointer to a long to receive the number 1 if the condition provided in
 the previous request didn't match (see \fICURLOPT_TIMECONDITION\fP). Alas, if
 this returns a 1 you know that the reason you didn't get data in return is
 because it didn't fulfill the condition. The long ths argument points to will
 get a zero stored if the condition instead was met. (Added in 7.19.4)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_getinfo.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_getinfo.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_getinfo.html	2013-10-14 22:43:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_getinfo.html	2013-12-17 15:51:23.000000000 +0800
@@ -126,13 +126,17 @@
 <p class="level1">Pass a pointer to a long to receive the last socket used by this curl session. If the socket is no longer valid, -1 is returned. When you finish working with the socket, you must call curl_easy_cleanup() as usual and let libcurl close the socket and cleanup other resources associated with the handle. This is typically used in combination with <span Class="emphasis">CURLOPT_CONNECT_ONLY</span>. (Added in 7.15.2) 
 <p class="level1">NOTE: this API is not really working on win64, since the SOCKET type on win64 is 64 bit large while its 'long' is only 32 bits. 
 <p class="level0"><a name="CURLINFOFTPENTRYPATH"></a><span class="nroffip">CURLINFO_FTP_ENTRY_PATH</span> 
 <p class="level1">Pass a pointer to a char pointer to receive a pointer to a string holding the path of the entry path. That is the initial path libcurl ended up in when logging on to the remote FTP server. This stores a NULL as pointer if something is wrong. (Added in 7.15.4) 
 <p class="level1">Also works for SFTP since 7.21.4 
 <p class="level0"><a name="CURLINFOCERTINFO"></a><span class="nroffip">CURLINFO_CERTINFO</span> 
-<p class="level1">Pass a pointer to a 'struct curl_certinfo *' and you'll get it set to point to struct that holds a number of linked lists with info about the certificate chain, assuming you had CURLOPT_CERTINFO enabled when the previous request was done. The struct reports how many certs it found and then you can extract info for each of those certs by following the linked lists. The info chain is provided in a series of data in the format "name:content" where the content is for the specific named data. See also the certinfo.c example. NOTE: this option is only available in libcurl built with OpenSSL support. (Added in 7.19.1) 
+<p class="level1">Pass a pointer to a 'struct curl_certinfo *' and you'll get it set to point to struct that holds a number of linked lists with info about the certificate chain, assuming you had CURLOPT_CERTINFO enabled when the previous request was done. The struct reports how many certs it found and then you can extract info for each of those certs by following the linked lists. The info chain is provided in a series of data in the format "name:content" where the content is for the specific named data. See also the certinfo.c example. NOTE: this option is only available in libcurl built with OpenSSL, NSS, GSKit or QsoSSL support. (Added in 7.19.1) 
+<p class="level0"><a name="CURLINFOTLSSESSION"></a><span class="nroffip">CURLINFO_TLS_SESSION</span> 
+<p class="level1">Pass a pointer to a 'struct curl_tlsinfo *'.  The pointer will be initialized to refer to a 'struct curl_tlsinfo *' that will contain an enum indicating the SSL library used for the handshake and the respective internal TLS session structure of this underlying SSL library. 
+<p class="level1">This may then be used to extract certificate information in a format convenient for further processing, such as manual validation. NOTE: this option may not be available for all SSL backends; unsupported SSL backends will return 'CURLSSLBACKEND_NONE' to indicate that they are not supported; this does not mean that no SSL backend was used. (Added in 7.34.0) 
+<p class="level1">
 <p class="level0"><a name="CURLINFOCONDITIONUNMET"></a><span class="nroffip">CURLINFO_CONDITION_UNMET</span> 
 <p class="level1">Pass a pointer to a long to receive the number 1 if the condition provided in the previous request didn't match (see <span Class="emphasis">CURLOPT_TIMECONDITION</span>). Alas, if this returns a 1 you know that the reason you didn't get data in return is because it didn't fulfill the condition. The long ths argument points to will get a zero stored if the condition instead was met. (Added in 7.19.4) 
 <p class="level0"><a name="CURLINFORTSPSESSIONID"></a><span class="nroffip">CURLINFO_RTSP_SESSION_ID</span> 
 <p class="level1">Pass a pointer to a char pointer to receive a pointer to a string holding the most recent RTSP Session ID. 
 <p class="level1">Applications wishing to resume an RTSP session on another connection should retrieve this info before closing the active connection. 
 <p class="level0"><a name="CURLINFORTSPCLIENTCSEQ"></a><span class="nroffip">CURLINFO_RTSP_CLIENT_CSEQ</span> 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_getinfo.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_getinfo.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_pause.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_pause.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_recv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_recv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_reset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_reset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_send.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_send.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_setopt.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_setopt.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_setopt.3	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_setopt.3	2013-12-17 06:02:35.000000000 +0800
@@ -1128,13 +1128,13 @@
 Pass a char * as parameter, pointing to a zero terminated string containing
 the full path name to the file you want libcurl to use as .netrc file. If this
 option is omitted, and \fICURLOPT_NETRC\fP is set, libcurl will attempt to
 find a .netrc file in the current user's home directory. (Added in 7.10.9)
 .IP CURLOPT_USERPWD
 Pass a char * as parameter, pointing to a zero terminated login details string
-for the connection. The format of which is: [user name]:[password];[options].
+for the connection. The format of which is: [user name]:[password].
 
 When using NTLM, you can set the domain by prepending it to the user name and
 separating the domain and name with a forward (/) or backward slash (\\). Like
 this: "domain/user:password" or "domain\\user:password". Some HTTP servers (on
 Windows) support this style even for Basic authentication.
 
@@ -1142,39 +1142,54 @@
 several requests to possibly different hosts. libcurl will only send this user
 and password information to hosts using the initial host name (unless
 \fICURLOPT_UNRESTRICTED_AUTH\fP is set), so if libcurl follows locations to
 other hosts it will not send the user and password to those. This is enforced
 to prevent accidental information leakage.
 
-At present only IMAP, POP3 and SMTP support login options as part of the
-details string. For more information about the login options please see
-RFC2384, RFC5092 and IETF draft draft-earhart-url-smtp-00.txt (Added in 7.31.0).
-
 Use \fICURLOPT_HTTPAUTH\fP to specify the authentication method for HTTP based
-connections.
+connections or \fICURLOPT_LOGIN_OPTIONS\fP to control IMAP, POP3 and SMTP
+options.
+
+The user and password strings are not URL decoded, so there's no way to send
+in a user name containing a colon using this option. Use \fCURLOPT_USERNAME\fP
+for that, or include it in the URL.
 .IP CURLOPT_PROXYUSERPWD
 Pass a char * as parameter, which should be [user name]:[password] to use for
-the connection to the HTTP proxy.
+the connection to the HTTP proxy. Both the name and the password will be URL
+decoded before use, so to include for example a colon in the user name you
+should encode it as %3A.
 
 Use \fICURLOPT_PROXYAUTH\fP to specify the authentication method.
 .IP CURLOPT_USERNAME
 Pass a char * as parameter, which should be pointing to the zero terminated
 user name to use for the transfer.
 
 \fBCURLOPT_USERNAME\fP sets the user name to be used in protocol
 authentication. You should not use this option together with the (older)
 CURLOPT_USERPWD option.
 
-In order to specify the password to be used in conjunction with the user name
-use the \fICURLOPT_PASSWORD\fP option.  (Added in 7.19.1)
+To specify the password and login options, along with the user name, use the
+\fICURLOPT_PASSWORD\fP and \fICURLOPT_LOGIN_OPTIONS\fP options. (Added in
+7.19.1)
 .IP CURLOPT_PASSWORD
 Pass a char * as parameter, which should be pointing to the zero terminated
 password to use for the transfer.
 
-The CURLOPT_PASSWORD option should be used in conjunction with
-the \fICURLOPT_USERNAME\fP option. (Added in 7.19.1)
+The CURLOPT_PASSWORD option should be used in conjunction with the
+\fICURLOPT_USERNAME\fP option. (Added in 7.19.1)
+.IP CURLOPT_LOGIN_OPTIONS
+(Added in 7.34.0) Pass a char * as parameter, which should be pointing to the
+zero terminated options string to use for the transfer.
+
+At present only IMAP, POP3 and SMTP support login options. For more
+information about the login options please see RFC2384, RFC5092 and IETF draft
+draft-earhart-url-smtp-00.txt
+
+\CURLOPT_LOGIN_OPTIONS\fP can be used to set protocol specific login options,
+such as the preferred authentication mechanism via "AUTH=NTLM" or "AUTH=*",
+and should be used in conjunction with the \fICURLOPT_USERNAME\fP option.
 .IP CURLOPT_PROXYUSERNAME
 Pass a char * as parameter, which should be pointing to the zero terminated
 user name to use for the transfer while connecting to Proxy.
 
 The CURLOPT_PROXYUSERNAME option should be used in same way as the
 \fICURLOPT_PROXYUSERPWD\fP is used.  In comparison to
@@ -1648,18 +1663,24 @@
 .IP CURLOPT_MAIL_RCPT
 Pass a pointer to a linked list of recipients to pass to the server in your
 SMTP mail request. The linked list should be a fully valid list of \fBstruct
 curl_slist\fP structs properly filled in. Use \fIcurl_slist_append(3)\fP to
 create the list and \fIcurl_slist_free_all(3)\fP to clean up an entire list.
 
-Each recipient should be specified within a pair of angled brackets (<>),
-however, should you not use an angled bracket as the first character libcurl
-will assume you provided a single email address and enclose that address
-within brackets for you.
-
-(Added in 7.20.0)
+When performing a mail transfer, each recipient should be specified within a
+pair of angled brackets (<>), however, should you not use an angled bracket as
+the first character libcurl will assume you provided a single email address and
+enclose that address within brackets for you. (Added in 7.20.0)
+
+When performing an address verification (VRFY command), each recipient should
+be specified as the user name or user name and domain (as per Section 3.5 of
+RFC5321). (Added in 7.34.0)
+
+When performing a mailing list expand (EXPN command), each recipient should be
+specified using the mailing list name, such as "Friends" or "London-Office".
+(Added in 7.34.0)
 .IP CURLOPT_MAIL_AUTH
 Pass a pointer to a zero terminated string as parameter. This will be used
 to specify the authentication address (identity) of a submitted message that
 is being relayed to another server.
 
 This optional parameter allows co-operating agents in a trusted environment to
@@ -2025,51 +2046,76 @@
 file libcurl should try to resume the upload from and it will then append the
 source file to the remote target file.
 .IP CURLOPT_RESUME_FROM_LARGE
 Pass a curl_off_t as parameter. It contains the offset in number of bytes that
 you want the transfer to start from. (Added in 7.11.0)
 .IP CURLOPT_CUSTOMREQUEST
-Pass a pointer to a zero terminated string as parameter. It can be used to
-specify the request instead of GET or HEAD when performing HTTP based
-requests, instead of LIST and NLST when performing FTP directory listings and
-instead of LIST and RETR when issuing POP3 based commands. This is
-particularly useful, for example, for performing a HTTP DELETE request or a
-POP3 DELE command.
+Pass a pointer to a zero terminated string as parameter.
 
-Please don't perform this at will, on HTTP based requests, by making sure
-your server supports the command you are sending first.
- 
 When you change the request method by setting \fBCURLOPT_CUSTOMREQUEST\fP to
 something, you don't actually change how libcurl behaves or acts in regards
 to the particular request method, it will only change the actual string sent
 in the request.
 
+Restore to the internal default by setting this to NULL.
+
+This option can be used to specify the request:
+
+.B HTTP
+
+Instead of GET or HEAD when performing HTTP based requests. This is
+particularly useful, for example, for performing a HTTP DELETE request.
+
 For example:
 
-With the HTTP protocol when you tell libcurl to do a HEAD request, but then
-specify a GET though a custom request libcurl will still act as if it sent a
-HEAD. To switch to a proper HEAD use \fICURLOPT_NOBODY\fP, to switch to a
-proper POST use \fICURLOPT_POST\fP or \fICURLOPT_POSTFIELDS\fP and to switch
-to a proper GET use CURLOPT_HTTPGET.
-
-With the POP3 protocol when you tell libcurl to use a custom request it will
-behave like a LIST or RETR command was sent where it expects data to be
-returned by the server. As such \fICURLOPT_NOBODY\fP should be used when
-specifying commands such as DELE and NOOP for example.
+When you tell libcurl to do a HEAD request, but then specify a GET though a
+custom request libcurl will still act as if it sent a HEAD. To switch to a
+proper HEAD use \fICURLOPT_NOBODY\fP, to switch to a proper POST use
+\fICURLOPT_POST\fP or \fICURLOPT_POSTFIELDS\fP and to switch to a proper GET
+use CURLOPT_HTTPGET.
 
-Restore to the internal default by setting this to NULL.
+Please don't perform this at will, on HTTP based requests, by making sure
+your server supports the command you are sending first.
 
 Many people have wrongly used this option to replace the entire request with
 their own, including multiple headers and POST contents. While that might
 work in many cases, it will cause libcurl to send invalid requests and it
 could possibly confuse the remote server badly. Use \fICURLOPT_POST\fP and
 \fICURLOPT_POSTFIELDS\fP to set POST data. Use \fICURLOPT_HTTPHEADER\fP to
 replace or extend the set of headers sent by libcurl. Use
 \fICURLOPT_HTTP_VERSION\fP to change HTTP version.
 
-(Support for POP3 added in 7.26.0)
+.B FTP
+
+Instead of LIST and NLST when performing FTP directory listings.
+
+.B IMAP
+
+Instead of LIST when issuing IMAP based requests. (Added in 7.30.0)
+
+.B POP3
+
+Instead of LIST and RETR when issuing POP3 based requests. (Added in 7.26.0)
+
+For example:
+
+When you tell libcurl to use a custom request it will behave like a LIST or
+RETR command was sent where it expects data to be returned by the server. As
+such \fICURLOPT_NOBODY\fP should be used when specifying commands such as
+DELE and NOOP for example.
+
+.B SMTP
+
+Instead of a HELP or VRFY when issuing SMTP based requests. (Added in 7.34.0)
+
+For example:
+
+Normally a multiline response is returned which can be used, in conjuection with
+\fICURLOPT_MAIL_RCPT\fP, to specify an EXPN request. If the \fICURLOPT_NOBODY\fP
+option is specified then the request can be used to issue NOOP and RSET
+commands.
 .IP CURLOPT_FILETIME
 Pass a long. If it is 1, libcurl will attempt to get the modification date of
 the remote document in this operation. This requires that the remote server
 sends the time or replies to a time querying command. The
 \fIcurl_easy_getinfo(3)\fP function with the \fICURLINFO_FILETIME\fP argument
 can be used after a transfer to extract the received time (if any).
@@ -2290,13 +2336,15 @@
 the port number of the service where libcurl wants to connect to the HOST and
 ADDRESS is the numerical IP address. If libcurl is built to support IPv6,
 ADDRESS can of course be either IPv4 or IPv6 style addressing.
 
 This option effectively pre-populates the DNS cache with entries for the
 host+port pair so redirects and everything that operations against the
-HOST+PORT will instead use your provided ADDRESS.
+HOST+PORT will instead use your provided ADDRESS. Addresses to set with
+\fICURL_RESOLVE\fP will not time-out from the DNS cache like ordindary
+entries.
 
 You can remove names from the DNS cache again, to stop providing these fake
 resolves, by including a string in the linked list that uses the format
 \&"-HOST:PORT". The host name must be prefixed with a dash, and the host name
 and port number must exactly match what was already added previously.
 
@@ -2361,13 +2409,13 @@
 want to use a file from the current directory, please precede it with "./"
 prefix, in order to avoid confusion with a nickname.
 .IP CURLOPT_SSLCERTTYPE
 Pass a pointer to a zero terminated string as parameter. The string should be
 the format of your certificate. Supported formats are "PEM" and "DER", except
 with Secure Transport. OpenSSL (versions 0.9.3 and later) and Secure Transport
-(on iOS 5 or later, or OS X 10.6 or later) also support "P12" for
+(on iOS 5 or later, or OS X 10.7 or later) also support "P12" for
 PKCS#12-encoded files. (Added in 7.9.3)
 .IP CURLOPT_SSLKEY
 Pass a pointer to a zero terminated string as parameter. The string should be
 the file name of your private key. The default format is "PEM" and can be
 changed with \fICURLOPT_SSLKEYTYPE\fP.
 
@@ -2407,24 +2455,32 @@
 
 Even though this option doesn't need any parameter, in some configurations
 \fIcurl_easy_setopt\fP might be defined as a macro taking exactly three
 arguments. Therefore, it's recommended to pass 1 as parameter to this option.
 .IP CURLOPT_SSLVERSION
 Pass a long as parameter to control what version of SSL/TLS to attempt to use.
+(Added in 7.9.2)
+
 The available options are:
 .RS
 .IP CURL_SSLVERSION_DEFAULT
 The default action. This will attempt to figure out the remote SSL protocol
 version, i.e. either SSLv3 or TLSv1 (but not SSLv2, which became disabled
 by default with 7.18.1).
 .IP CURL_SSLVERSION_TLSv1
-Force TLSv1
+Force TLSv1.x
 .IP CURL_SSLVERSION_SSLv2
 Force SSLv2
 .IP CURL_SSLVERSION_SSLv3
 Force SSLv3
+.IP CURL_SSLVERSION_TLSv1_0
+Force TLSv1.0 (Added in 7.34.0)
+.IP CURL_SSLVERSION_TLSv1_1
+Force TLSv1.1 (Added in 7.34.0)
+.IP CURL_SSLVERSION_TLSv1_2
+Force TLSv1.2 (Added in 7.34.0)
 .RE
 .IP CURLOPT_SSL_VERIFYPEER
 Pass a long as parameter. By default, curl assumes a value of 1.
 
 This option determines whether curl verifies the authenticity of the peer's
 certificate. A value of 1 means curl verifies; 0 (zero) means it doesn't.
@@ -2519,32 +2575,33 @@
 fails.
 
 Curl considers the server the intended one when the Common Name field or a
 Subject Alternate Name field in the certificate matches the host name in the
 URL to which you told Curl to connect.
 
-When the value is 1, libcurl will return a failure. It was previously (in
-7.28.0 and earlier) a debug option of some sorts, but it is no longer
-supported due to frequently leading to programmer mistakes.
+When the value is 1, \fIcurl_easy_setopt\fP will return an error and the option
+value will not be changed.  It was previously (in 7.28.0 and earlier) a debug
+option of some sorts, but it is no longer supported due to frequently leading
+to programmer mistakes.
 
 When the value is 0, the connection succeeds regardless of the names in the
 certificate.
 
 The default value for this option is 2.
 
 This option controls checking the server's certificate's claimed identity.
 The server could be lying.  To control lying, see
 \fICURLOPT_SSL_VERIFYPEER\fP.  If libcurl is built against NSS and
-\fICURLOPT_SSL_VERIFYPEER\fP is zero, \fICURLOPT_SSL_VERIFYHOST\fP
-is ignored.
-
+\fICURLOPT_SSL_VERIFYPEER\fP is zero, \fICURLOPT_SSL_VERIFYHOST\fP is also set
+to zero and cannot be overridden.
 .IP CURLOPT_CERTINFO
 Pass a long set to 1 to enable libcurl's certificate chain info gatherer. With
-this enabled, libcurl (if built with OpenSSL) will extract lots of information
+this enabled, libcurl (if built with OpenSSL, NSS, GSKit or QsoSSL) will
+extract lots of information
 and data about the certificates in the certificate chain used in the SSL
-connection. This data is then possible to extract after a transfer using
+connection. This data may then be retrieved after a transfer using
 \fIcurl_easy_getinfo(3)\fP and its option \fICURLINFO_CERTINFO\fP. (Added in
 7.19.1)
 .IP CURLOPT_RANDOM_FILE
 Pass a char * to a zero terminated file name. The file will be used to read
 from to seed the random engine for SSL. The more random the specified file is,
 the more secure the SSL connection will become.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_setopt.html /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_setopt.html
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_setopt.html	2013-10-14 22:43:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_setopt.html	2013-12-17 15:51:23.000000000 +0800
@@ -405,27 +405,31 @@
 <p class="level2">This value tells the library that use of the file is required, to ignore the information in the URL, and to search the file for the host only. 
 <p class="level1">Only machine name, user name and password are taken into account (init macros and similar things aren't supported). 
 <p class="level1">libcurl does not verify that the file has the correct properties set (as the standard Unix ftp client does). It should only be readable by user. 
 <p class="level0"><a name="CURLOPTNETRCFILE"></a><span class="nroffip">CURLOPT_NETRC_FILE</span> 
 <p class="level1">Pass a char * as parameter, pointing to a zero terminated string containing the full path name to the file you want libcurl to use as .netrc file. If this option is omitted, and <a class="emphasis" href="#CURLOPTNETRC">CURLOPT_NETRC</a> is set, libcurl will attempt to find a .netrc file in the current user's home directory. (Added in 7.10.9) 
 <p class="level0"><a name="CURLOPTUSERPWD"></a><span class="nroffip">CURLOPT_USERPWD</span> 
-<p class="level1">Pass a char * as parameter, pointing to a zero terminated login details string for the connection. The format of which is: [user name]:[password];[options]. 
+<p class="level1">Pass a char * as parameter, pointing to a zero terminated login details string for the connection. The format of which is: [user name]:[password]. 
 <p class="level1">When using NTLM, you can set the domain by prepending it to the user name and separating the domain and name with a forward (/) or backward slash (\). Like this: "domain/user:password" or "domain\user:password". Some HTTP servers (on Windows) support this style even for Basic authentication. 
 <p class="level1">When using HTTP and <a class="emphasis" href="#CURLOPTFOLLOWLOCATION">CURLOPT_FOLLOWLOCATION</a>, libcurl might perform several requests to possibly different hosts. libcurl will only send this user and password information to hosts using the initial host name (unless <a class="emphasis" href="#CURLOPTUNRESTRICTEDAUTH">CURLOPT_UNRESTRICTED_AUTH</a> is set), so if libcurl follows locations to other hosts it will not send the user and password to those. This is enforced to prevent accidental information leakage. 
-<p class="level1">At present only IMAP, POP3 and SMTP support login options as part of the details string. For more information about the login options please see <a href="http://www.ietf.org/rfc/rfc2384.txt">RFC 2384</a>, RFC5092 and IETF draft draft-earhart-url-smtp-00.txt (Added in 7.31.0). 
-<p class="level1">Use <a class="emphasis" href="#CURLOPTHTTPAUTH">CURLOPT_HTTPAUTH</a> to specify the authentication method for HTTP based connections. 
+<p class="level1">Use <a class="emphasis" href="#CURLOPTHTTPAUTH">CURLOPT_HTTPAUTH</a> to specify the authentication method for HTTP based connections or <a class="emphasis" href="#CURLOPTLOGINOPTIONS">CURLOPT_LOGIN_OPTIONS</a> to control IMAP, POP3 and SMTP options. 
+<p class="level1">The user and password strings are not URL decoded, so there's no way to send in a user name containing a colon using this option. Use fCURLOPT_USERNAME</span> for that, or include it in the URL. 
 <p class="level0"><a name="CURLOPTPROXYUSERPWD"></a><span class="nroffip">CURLOPT_PROXYUSERPWD</span> 
-<p class="level1">Pass a char * as parameter, which should be [user name]:[password] to use for the connection to the HTTP proxy. 
+<p class="level1">Pass a char * as parameter, which should be [user name]:[password] to use for the connection to the HTTP proxy. Both the name and the password will be URL decoded before use, so to include for example a colon in the user name you should encode it as %3A. 
 <p class="level1">Use <a class="emphasis" href="#CURLOPTPROXYAUTH">CURLOPT_PROXYAUTH</a> to specify the authentication method. 
 <p class="level0"><a name="CURLOPTUSERNAME"></a><span class="nroffip">CURLOPT_USERNAME</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated user name to use for the transfer. 
 <p class="level1"><a class="bold" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> sets the user name to be used in protocol authentication. You should not use this option together with the (older) CURLOPT_USERPWD option. 
-<p class="level1">In order to specify the password to be used in conjunction with the user name use the <a class="emphasis" href="#CURLOPTPASSWORD">CURLOPT_PASSWORD</a> option.  (Added in 7.19.1) 
+<p class="level1">To specify the password and login options, along with the user name, use the <a class="emphasis" href="#CURLOPTPASSWORD">CURLOPT_PASSWORD</a> and <a class="emphasis" href="#CURLOPTLOGINOPTIONS">CURLOPT_LOGIN_OPTIONS</a> options. (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTPASSWORD"></a><span class="nroffip">CURLOPT_PASSWORD</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated password to use for the transfer. 
 <p class="level1">The CURLOPT_PASSWORD option should be used in conjunction with the <a class="emphasis" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> option. (Added in 7.19.1) 
+<p class="level0"><a name="CURLOPTLOGINOPTIONS"></a><span class="nroffip">CURLOPT_LOGIN_OPTIONS</span> 
+<p class="level1">(Added in 7.34.0) Pass a char * as parameter, which should be pointing to the zero terminated options string to use for the transfer. 
+<p class="level1">At present only IMAP, POP3 and SMTP support login options. For more information about the login options please see <a href="http://www.ietf.org/rfc/rfc2384.txt">RFC 2384</a>, RFC5092 and IETF draft draft-earhart-url-smtp-00.txt 
+<p class="level1">CURLOPT_LOGIN_OPTIONS</span> can be used to set protocol specific login options, such as the preferred authentication mechanism via "AUTH=NTLM" or "AUTH=*", and should be used in conjunction with the <a class="emphasis" href="#CURLOPTUSERNAME">CURLOPT_USERNAME</a> option. 
 <p class="level0"><a name="CURLOPTPROXYUSERNAME"></a><span class="nroffip">CURLOPT_PROXYUSERNAME</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated user name to use for the transfer while connecting to Proxy. 
 <p class="level1">The CURLOPT_PROXYUSERNAME option should be used in same way as the <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> is used.  In comparison to <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> the CURLOPT_PROXYUSERNAME allows the username to contain a colon, like in the following example: "sip:user@example.com". The CURLOPT_PROXYUSERNAME option is an alternative way to set the user name while connecting to Proxy.  There is no meaning to use it together with the <a class="emphasis" href="#CURLOPTPROXYUSERPWD">CURLOPT_PROXYUSERPWD</a> option. 
 <p class="level1">In order to specify the password to be used in conjunction with the user name use the <a class="emphasis" href="#CURLOPTPROXYPASSWORD">CURLOPT_PROXYPASSWORD</a> option.  (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTPROXYPASSWORD"></a><span class="nroffip">CURLOPT_PROXYPASSWORD</span> 
 <p class="level1">Pass a char * as parameter, which should be pointing to the zero terminated password to use for the transfer while connecting to Proxy. 
@@ -580,14 +584,15 @@
 <p class="level1">Pass a pointer to a zero terminated string as parameter. This should be used to specify the sender's email address when sending SMTP mail with libcurl. 
 <p class="level1">An originator email address should be specified with angled brackets (&lt;&gt;) around it, which if not specified, will be added by libcurl from version 7.21.4 onwards. Failing to provide such brackets may cause the server to reject the email. 
 <p class="level1">If this parameter is not specified then an empty address will be sent to the mail server which may or may not cause the email to be rejected. 
 <p class="level1">(Added in 7.20.0) 
 <p class="level0"><a name="CURLOPTMAILRCPT"></a><span class="nroffip">CURLOPT_MAIL_RCPT</span> 
 <p class="level1">Pass a pointer to a linked list of recipients to pass to the server in your SMTP mail request. The linked list should be a fully valid list of <span class="bold">struct curl_slist</span> structs properly filled in. Use <a class="emphasis" href="./curl_slist_append.html">curl_slist_append(3)</a> to create the list and <a class="emphasis" href="./curl_slist_free_all.html">curl_slist_free_all(3)</a> to clean up an entire list. 
-<p class="level1">Each recipient should be specified within a pair of angled brackets (&lt;&gt;), however, should you not use an angled bracket as the first character libcurl will assume you provided a single email address and enclose that address within brackets for you. 
-<p class="level1">(Added in 7.20.0) 
+<p class="level1">When performing a mail transfer, each recipient should be specified within a pair of angled brackets (&lt;&gt;), however, should you not use an angled bracket as the first character libcurl will assume you provided a single email address and enclose that address within brackets for you. (Added in 7.20.0) 
+<p class="level1">When performing an address verification (VRFY command), each recipient should be specified as the user name or user name and domain (as per Section 3.5 of <a href="http://www.ietf.org/rfc/rfc5321.txt">RFC 5321</a>). (Added in 7.34.0) 
+<p class="level1">When performing a mailing list expand (EXPN command), each recipient should be specified using the mailing list name, such as "Friends" or "London-Office". (Added in 7.34.0) 
 <p class="level0"><a name="CURLOPTMAILAUTH"></a><span class="nroffip">CURLOPT_MAIL_AUTH</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. This will be used to specify the authentication address (identity) of a submitted message that is being relayed to another server. 
 <p class="level1">This optional parameter allows co-operating agents in a trusted environment to communicate the authentication of individual messages and should only be used by the application program, using libcurl, if the application is itself a mail server acting in such an environment. If the application is operating as such and the AUTH address is not known or is invalid, then an empty string should be used for this parameter. 
 <p class="level1">Unlike CURLOPT_MAIL_FROM and CURLOPT_MAIL_RCPT, the address should not be specified within a pair of angled brackets (&lt;&gt;). However, if an empty string is used then a pair of brackets will be sent by libcurl as required by <a href="http://www.ietf.org/rfc/rfc2554.txt">RFC 2554</a>. 
 <p class="level1">(Added in 7.25.0) <a name="TFTP"></a><h2 class="nroffsh">TFTP OPTIONS</h2>
 <p class="level0">
@@ -730,21 +735,34 @@
 <p class="level0"><a name="CURLOPTRESUMEFROM"></a><span class="nroffip">CURLOPT_RESUME_FROM</span> 
 <p class="level1">Pass a long as parameter. It contains the offset in number of bytes that you want the transfer to start from. Set this option to 0 to make the transfer start from the beginning (effectively disabling resume). For FTP, set this option to -1 to make the transfer start from the end of the target file (useful to continue an interrupted upload). 
 <p class="level1">When doing uploads with FTP, the resume position is where in the local/source file libcurl should try to resume the upload from and it will then append the source file to the remote target file. 
 <p class="level0"><a name="CURLOPTRESUMEFROMLARGE"></a><span class="nroffip">CURLOPT_RESUME_FROM_LARGE</span> 
 <p class="level1">Pass a curl_off_t as parameter. It contains the offset in number of bytes that you want the transfer to start from. (Added in 7.11.0) 
 <p class="level0"><a name="CURLOPTCUSTOMREQUEST"></a><span class="nroffip">CURLOPT_CUSTOMREQUEST</span> 
-<p class="level1">Pass a pointer to a zero terminated string as parameter. It can be used to specify the request instead of GET or HEAD when performing HTTP based requests, instead of LIST and NLST when performing FTP directory listings and instead of LIST and RETR when issuing POP3 based commands. This is particularly useful, for example, for performing a HTTP DELETE request or a POP3 DELE command. 
-<p class="level1">Please don't perform this at will, on HTTP based requests, by making sure your server supports the command you are sending first. 
+<p class="level1">Pass a pointer to a zero terminated string as parameter. 
 <p class="level1">When you change the request method by setting <a class="bold" href="#CURLOPTCUSTOMREQUEST">CURLOPT_CUSTOMREQUEST</a> to something, you don't actually change how libcurl behaves or acts in regards to the particular request method, it will only change the actual string sent in the request. 
-<p class="level1">For example: 
-<p class="level1">With the HTTP protocol when you tell libcurl to do a HEAD request, but then specify a GET though a custom request libcurl will still act as if it sent a HEAD. To switch to a proper HEAD use <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a>, to switch to a proper POST use <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a> or <a class="emphasis" href="#CURLOPTPOSTFIELDS">CURLOPT_POSTFIELDS</a> and to switch to a proper GET use CURLOPT_HTTPGET. 
-<p class="level1">With the POP3 protocol when you tell libcurl to use a custom request it will behave like a LIST or RETR command was sent where it expects data to be returned by the server. As such <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> should be used when specifying commands such as DELE and NOOP for example. 
 <p class="level1">Restore to the internal default by setting this to NULL. 
+<p class="level1">This option can be used to specify the request: 
+<p class="level1"><a class="bold" href="#HTTP">HTTP</a> 
+<p class="level1">Instead of GET or HEAD when performing HTTP based requests. This is particularly useful, for example, for performing a HTTP DELETE request. 
+<p class="level1">For example: 
+<p class="level1">When you tell libcurl to do a HEAD request, but then specify a GET though a custom request libcurl will still act as if it sent a HEAD. To switch to a proper HEAD use <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a>, to switch to a proper POST use <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a> or <a class="emphasis" href="#CURLOPTPOSTFIELDS">CURLOPT_POSTFIELDS</a> and to switch to a proper GET use CURLOPT_HTTPGET. 
+<p class="level1">Please don't perform this at will, on HTTP based requests, by making sure your server supports the command you are sending first. 
 <p class="level1">Many people have wrongly used this option to replace the entire request with their own, including multiple headers and POST contents. While that might work in many cases, it will cause libcurl to send invalid requests and it could possibly confuse the remote server badly. Use <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a> and <a class="emphasis" href="#CURLOPTPOSTFIELDS">CURLOPT_POSTFIELDS</a> to set POST data. Use <a class="emphasis" href="#CURLOPTHTTPHEADER">CURLOPT_HTTPHEADER</a> to replace or extend the set of headers sent by libcurl. Use <a class="emphasis" href="#CURLOPTHTTPVERSION">CURLOPT_HTTP_VERSION</a> to change HTTP version. 
-<p class="level1">(Support for POP3 added in 7.26.0) 
+<p class="level1"><a class="bold" href="#FTP">FTP</a> 
+<p class="level1">Instead of LIST and NLST when performing FTP directory listings. 
+<p class="level1"><span Class="bold">IMAP</span> 
+<p class="level1">Instead of LIST when issuing IMAP based requests. (Added in 7.30.0) 
+<p class="level1"><span Class="bold">POP3</span> 
+<p class="level1">Instead of LIST and RETR when issuing POP3 based requests. (Added in 7.26.0) 
+<p class="level1">For example: 
+<p class="level1">When you tell libcurl to use a custom request it will behave like a LIST or RETR command was sent where it expects data to be returned by the server. As such <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> should be used when specifying commands such as DELE and NOOP for example. 
+<p class="level1"><a class="bold" href="#SMTP">SMTP</a> 
+<p class="level1">Instead of a HELP or VRFY when issuing SMTP based requests. (Added in 7.34.0) 
+<p class="level1">For example: 
+<p class="level1">Normally a multiline response is returned which can be used, in conjuection with <a class="emphasis" href="#CURLOPTMAILRCPT">CURLOPT_MAIL_RCPT</a>, to specify an EXPN request. If the <a class="emphasis" href="#CURLOPTNOBODY">CURLOPT_NOBODY</a> option is specified then the request can be used to issue NOOP and RSET commands. 
 <p class="level0"><a name="CURLOPTFILETIME"></a><span class="nroffip">CURLOPT_FILETIME</span> 
 <p class="level1">Pass a long. If it is 1, libcurl will attempt to get the modification date of the remote document in this operation. This requires that the remote server sends the time or replies to a time querying command. The <a class="emphasis" href="./curl_easy_getinfo.html">curl_easy_getinfo(3)</a> function with the <span Class="emphasis">CURLINFO_FILETIME</span> argument can be used after a transfer to extract the received time (if any). 
 <p class="level0"><a name="CURLOPTNOBODY"></a><span class="nroffip">CURLOPT_NOBODY</span> 
 <p class="level1">A parameter set to 1 tells the library to not include the body-part in the output. This is only relevant for protocols that have separate header and body parts. On HTTP(S) servers, this will make libcurl do a HEAD request. 
 <p class="level1">To change request to GET, you should use <a class="emphasis" href="#CURLOPTHTTPGET">CURLOPT_HTTPGET</a>. Change request to POST with <a class="emphasis" href="#CURLOPTPOST">CURLOPT_POST</a> etc. 
 <p class="level0"><a name="CURLOPTINFILESIZE"></a><span class="nroffip">CURLOPT_INFILESIZE</span> 
@@ -831,13 +849,13 @@
 <p class="level1"><a name="CURLUSESSLALL"></a><span class="nroffip">CURLUSESSL_ALL</span> 
 <p class="level2">Require SSL for all communication or fail with <span Class="emphasis">CURLE_USE_SSL_FAILED</span>. 
 <p class="level1">
 <p class="level0"><a name="CURLOPTRESOLVE"></a><span class="nroffip">CURLOPT_RESOLVE</span> 
 <p class="level1">Pass a pointer to a linked list of strings with host name resolve information to use for requests with this handle. The linked list should be a fully valid list of <span Class="bold">struct curl_slist</span> structs properly filled in. Use <a class="emphasis" href="./curl_slist_append.html">curl_slist_append(3)</a> to create the list and <a class="emphasis" href="./curl_slist_free_all.html">curl_slist_free_all(3)</a> to clean up an entire list. 
 <p class="level1">Each single name resolve string should be written using the format HOST:PORT:ADDRESS where HOST is the name libcurl will try to resolve, PORT is the port number of the service where libcurl wants to connect to the HOST and ADDRESS is the numerical IP address. If libcurl is built to support IPv6, ADDRESS can of course be either IPv4 or IPv6 style addressing. 
-<p class="level1">This option effectively pre-populates the DNS cache with entries for the host+port pair so redirects and everything that operations against the HOST+PORT will instead use your provided ADDRESS. 
+<p class="level1">This option effectively pre-populates the DNS cache with entries for the host+port pair so redirects and everything that operations against the HOST+PORT will instead use your provided ADDRESS. Addresses to set with <span Class="emphasis">CURL_RESOLVE</span> will not time-out from the DNS cache like ordindary entries. 
 <p class="level1">You can remove names from the DNS cache again, to stop providing these fake resolves, by including a string in the linked list that uses the format "-HOST:PORT". The host name must be prefixed with a dash, and the host name and port number must exactly match what was already added previously. 
 <p class="level1">(Added in 7.21.3) 
 <p class="level0"><a name="CURLOPTDNSSERVERS"></a><span class="nroffip">CURLOPT_DNS_SERVERS</span> 
 <p class="level1">Set the list of DNS servers to be used instead of the system default. The format of the dns servers option is: 
 <p class="level1">host[:port][,host[:port]]... 
 <p class="level1">For example: 
@@ -860,13 +878,13 @@
 <p class="level1">Pass a long telling libcurl the maximum number of milliseconds to wait for a server to connect back to libcurl when an active FTP connection is used. If no timeout is set, the internal default of 60000 will be used. (Added in 7.24.0) <a name="SSL"></a><h2 class="nroffsh">SSL and SECURITY OPTIONS</h2>
 <p class="level0">
 <p class="level0"><a name="CURLOPTSSLCERT"></a><span class="nroffip">CURLOPT_SSLCERT</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. The string should be the file name of your certificate. The default format is "P12" on Secure Transport and "PEM" on other engines, and can be changed with <a class="emphasis" href="#CURLOPTSSLCERTTYPE">CURLOPT_SSLCERTTYPE</a>. 
 <p class="level1">With NSS or Secure Transport, this can also be the nickname of the certificate you wish to authenticate with as it is named in the security database. If you want to use a file from the current directory, please precede it with "./" prefix, in order to avoid confusion with a nickname. 
 <p class="level0"><a name="CURLOPTSSLCERTTYPE"></a><span class="nroffip">CURLOPT_SSLCERTTYPE</span> 
-<p class="level1">Pass a pointer to a zero terminated string as parameter. The string should be the format of your certificate. Supported formats are "PEM" and "DER", except with Secure Transport. OpenSSL (versions 0.9.3 and later) and Secure Transport (on iOS 5 or later, or OS X 10.6 or later) also support "P12" for PKCS#12-encoded files. (Added in 7.9.3) 
+<p class="level1">Pass a pointer to a zero terminated string as parameter. The string should be the format of your certificate. Supported formats are "PEM" and "DER", except with Secure Transport. OpenSSL (versions 0.9.3 and later) and Secure Transport (on iOS 5 or later, or OS X 10.7 or later) also support "P12" for PKCS#12-encoded files. (Added in 7.9.3) 
 <p class="level0"><a name="CURLOPTSSLKEY"></a><span class="nroffip">CURLOPT_SSLKEY</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. The string should be the file name of your private key. The default format is "PEM" and can be changed with <a class="emphasis" href="#CURLOPTSSLKEYTYPE">CURLOPT_SSLKEYTYPE</a>. 
 <p class="level1">(iOS and Mac OS X only) This option is ignored if curl was built against Secure Transport. Secure Transport expects the private key to be already present in the keychain or PKCS#12 file containing the certificate. 
 <p class="level0"><a name="CURLOPTSSLKEYTYPE"></a><span class="nroffip">CURLOPT_SSLKEYTYPE</span> 
 <p class="level1">Pass a pointer to a zero terminated string as parameter. The string should be the format of your private key. Supported formats are "PEM", "DER" and "ENG". 
 <p class="level1">The format "ENG" enables you to load the private key from a crypto engine. In this case <a class="emphasis" href="#CURLOPTSSLKEY">CURLOPT_SSLKEY</a> is used as an identifier passed to the engine. You have to set the crypto engine with <a class="emphasis" href="#CURLOPTSSLENGINE">CURLOPT_SSLENGINE</a>. "DER" format key file currently does not work because of a bug in OpenSSL. 
@@ -878,22 +896,29 @@
 <p class="level1">If the crypto device cannot be loaded, <span Class="emphasis">CURLE_SSL_ENGINE_NOTFOUND</span> is returned. 
 <p class="level0"><a name="CURLOPTSSLENGINEDEFAULT"></a><span class="nroffip">CURLOPT_SSLENGINE_DEFAULT</span> 
 <p class="level1">Sets the actual crypto engine as the default for (asymmetric) crypto operations. 
 <p class="level1">If the crypto device cannot be set, <span Class="emphasis">CURLE_SSL_ENGINE_SETFAILED</span> is returned. 
 <p class="level1">Even though this option doesn't need any parameter, in some configurations <span Class="emphasis">curl_easy_setopt</span> might be defined as a macro taking exactly three arguments. Therefore, it's recommended to pass 1 as parameter to this option. 
 <p class="level0"><a name="CURLOPTSSLVERSION"></a><span class="nroffip">CURLOPT_SSLVERSION</span> 
-<p class="level1">Pass a long as parameter to control what version of SSL/TLS to attempt to use. The available options are: 
+<p class="level1">Pass a long as parameter to control what version of SSL/TLS to attempt to use. (Added in 7.9.2) 
+<p class="level1">The available options are: 
 <p class="level2">
 <p class="level1"><a name="CURLSSLVERSIONDEFAULT"></a><span class="nroffip">CURL_SSLVERSION_DEFAULT</span> 
 <p class="level2">The default action. This will attempt to figure out the remote SSL protocol version, i.e. either SSLv3 or TLSv1 (but not SSLv2, which became disabled by default with 7.18.1). 
 <p class="level1"><a name="CURLSSLVERSIONTLSv1"></a><span class="nroffip">CURL_SSLVERSION_TLSv1</span> 
-<p class="level2">Force TLSv1 
+<p class="level2">Force TLSv1.x 
 <p class="level1"><a name="CURLSSLVERSIONSSLv2"></a><span class="nroffip">CURL_SSLVERSION_SSLv2</span> 
 <p class="level2">Force SSLv2 
 <p class="level1"><a name="CURLSSLVERSIONSSLv3"></a><span class="nroffip">CURL_SSLVERSION_SSLv3</span> 
 <p class="level2">Force SSLv3 
+<p class="level1"><a name="CURLSSLVERSIONTLSv10"></a><span class="nroffip">CURL_SSLVERSION_TLSv1_0</span> 
+<p class="level2">Force TLSv1.0 (Added in 7.34.0) 
+<p class="level1"><a name="CURLSSLVERSIONTLSv11"></a><span class="nroffip">CURL_SSLVERSION_TLSv1_1</span> 
+<p class="level2">Force TLSv1.1 (Added in 7.34.0) 
+<p class="level1"><a name="CURLSSLVERSIONTLSv12"></a><span class="nroffip">CURL_SSLVERSION_TLSv1_2</span> 
+<p class="level2">Force TLSv1.2 (Added in 7.34.0) 
 <p class="level1">
 <p class="level0"><a name="CURLOPTSSLVERIFYPEER"></a><span class="nroffip">CURLOPT_SSL_VERIFYPEER</span> 
 <p class="level1">Pass a long as parameter. By default, curl assumes a value of 1. 
 <p class="level1">This option determines whether curl verifies the authenticity of the peer's certificate. A value of 1 means curl verifies; 0 (zero) means it doesn't. 
 <p class="level1">When negotiating a SSL connection, the server sends a certificate indicating its identity.  Curl verifies whether the certificate is authentic, i.e. that you can trust that the server is who the certificate says it is.  This trust is based on a chain of digital signatures, rooted in certification authority (CA) certificates you supply.  curl uses a default bundle of CA certificates (the path for that is determined at build time) and you can specify alternate certificates with the <a class="emphasis" href="#CURLOPTCAINFO">CURLOPT_CAINFO</a> option or the <a class="emphasis" href="#CURLOPTCAPATH">CURLOPT_CAPATH</a> option. 
 <p class="level1">When <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> is nonzero, and the verification fails to prove that the certificate is authentic, the connection fails.  When the option is zero, the peer certificate verification succeeds regardless. 
@@ -916,19 +941,18 @@
 <p class="level0"><a name="CURLOPTSSLVERIFYHOST"></a><span class="nroffip">CURLOPT_SSL_VERIFYHOST</span> 
 <p class="level1">Pass a long as parameter. 
 <p class="level1">This option determines whether libcurl verifies that the server cert is for the server it is known as. 
 <p class="level1">When negotiating a SSL connection, the server sends a certificate indicating its identity. 
 <p class="level1">When <a class="emphasis" href="#CURLOPTSSLVERIFYHOST">CURLOPT_SSL_VERIFYHOST</a> is 2, that certificate must indicate that the server is the server to which you meant to connect, or the connection fails. 
 <p class="level1">Curl considers the server the intended one when the Common Name field or a Subject Alternate Name field in the certificate matches the host name in the URL to which you told Curl to connect. 
-<p class="level1">When the value is 1, libcurl will return a failure. It was previously (in 7.28.0 and earlier) a debug option of some sorts, but it is no longer supported due to frequently leading to programmer mistakes. 
+<p class="level1">When the value is 1, <span Class="emphasis">curl_easy_setopt</span> will return an error and the option value will not be changed.  It was previously (in 7.28.0 and earlier) a debug option of some sorts, but it is no longer supported due to frequently leading to programmer mistakes. 
 <p class="level1">When the value is 0, the connection succeeds regardless of the names in the certificate. 
 <p class="level1">The default value for this option is 2. 
-<p class="level1">This option controls checking the server's certificate's claimed identity. The server could be lying.  To control lying, see <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a>.  If libcurl is built against NSS and <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> is zero, <a class="emphasis" href="#CURLOPTSSLVERIFYHOST">CURLOPT_SSL_VERIFYHOST</a> is ignored. 
-<p class="level1">
+<p class="level1">This option controls checking the server's certificate's claimed identity. The server could be lying.  To control lying, see <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a>.  If libcurl is built against NSS and <a class="emphasis" href="#CURLOPTSSLVERIFYPEER">CURLOPT_SSL_VERIFYPEER</a> is zero, <a class="emphasis" href="#CURLOPTSSLVERIFYHOST">CURLOPT_SSL_VERIFYHOST</a> is also set to zero and cannot be overridden. 
 <p class="level0"><a name="CURLOPTCERTINFO"></a><span class="nroffip">CURLOPT_CERTINFO</span> 
-<p class="level1">Pass a long set to 1 to enable libcurl's certificate chain info gatherer. With this enabled, libcurl (if built with OpenSSL) will extract lots of information and data about the certificates in the certificate chain used in the SSL connection. This data is then possible to extract after a transfer using <a class="emphasis" href="./curl_easy_getinfo.html">curl_easy_getinfo(3)</a> and its option <span Class="emphasis">CURLINFO_CERTINFO</span>. (Added in 7.19.1) 
+<p class="level1">Pass a long set to 1 to enable libcurl's certificate chain info gatherer. With this enabled, libcurl (if built with OpenSSL, NSS, GSKit or QsoSSL) will extract lots of information and data about the certificates in the certificate chain used in the SSL connection. This data may then be retrieved after a transfer using <a class="emphasis" href="./curl_easy_getinfo.html">curl_easy_getinfo(3)</a> and its option <span Class="emphasis">CURLINFO_CERTINFO</span>. (Added in 7.19.1) 
 <p class="level0"><a name="CURLOPTRANDOMFILE"></a><span class="nroffip">CURLOPT_RANDOM_FILE</span> 
 <p class="level1">Pass a char * to a zero terminated file name. The file will be used to read from to seed the random engine for SSL. The more random the specified file is, the more secure the SSL connection will become. 
 <p class="level0"><a name="CURLOPTEGDSOCKET"></a><span class="nroffip">CURLOPT_EGDSOCKET</span> 
 <p class="level1">Pass a char * to the zero terminated path name to the Entropy Gathering Daemon socket. It will be used to seed the random engine for SSL. 
 <p class="level0"><a name="CURLOPTSSLCIPHERLIST"></a><span class="nroffip">CURLOPT_SSL_CIPHER_LIST</span> 
 <p class="level1">Pass a char *, pointing to a zero terminated string holding the list of ciphers to use for the SSL connection. The list must be syntactically correct, it consists of one or more cipher strings separated by colons. Commas or spaces are also acceptable separators but colons are normally used, !, - and + can be used as operators. 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_easy_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_easy_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_escape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_escape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_formadd.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_formadd.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_formfree.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_formfree.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_formget.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_formget.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_free.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_free.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_free.pdf	2013-10-14 22:43:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_free.pdf	2013-12-17 15:51:26.000000000 +0800
@@ -60,29 +60,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:82e6c791-6cfb-11ee-0000-156c038b2dc2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:82e6c791-6cfb-11ee-0000-156c038b2dc2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-10-14T16:43:17+02:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-10-14T16:43:17+02:00</xmp:CreateDate>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-156c038b2dc2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-156c038b2dc2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-12-17T08:51:26+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-12-17T08:51:26+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:82e6c791-6cfb-11ee-0000-156c038b2dc2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:82e6c791-6cfb-11ee-0000-156c038b2dc2'/>
-<rdf:Description rdf:about='uuid:82e6c791-6cfb-11ee-0000-156c038b2dc2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-156c038b2dc2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:9470411a-9f0c-11ee-0000-156c038b2dc2'/>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-156c038b2dc2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20131014164317+02'00')
-/ModDate(D:20131014164317+02'00')
+/CreationDate(D:20131217085126+01'00')
+/ModDate(D:20131217085126+01'00')
 /Creator(groff version 1.22.2)>>endobj
 xref
 0 14
 0000000000 65535 f 
 0000000888 00000 n 
 0000002696 00000 n 
@@ -96,11 +96,11 @@
 0000001074 00000 n 
 0000000994 00000 n 
 0000001024 00000 n 
 0000001273 00000 n 
 trailer
 << /Size 14 /Root 1 0 R /Info 2 0 R
-/ID [<EE88CEC5AE0A58792090BED9E713F72F><EE88CEC5AE0A58792090BED9E713F72F>]
+/ID [<6F2A51BBEF735CD195DBA074822EFD97><6F2A51BBEF735CD195DBA074822EFD97>]
 >>
 startxref
 2850
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_getdate.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_getdate.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_getenv.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_getenv.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_global_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_global_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_global_init_mem.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_global_init_mem.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_global_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_global_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_mprintf.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_mprintf.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_add_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_add_handle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_assign.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_assign.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_fdset.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_fdset.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_info_read.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_info_read.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_perform.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_perform.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_remove_handle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_remove_handle.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_socket_action.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_socket_action.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_socket.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_socket.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_strerror.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_timeout.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_timeout.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_multi_wait.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_multi_wait.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_share_cleanup.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_share_cleanup.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_share_init.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_share_init.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_share_setopt.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_share_setopt.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_share_strerror.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_share_strerror.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_slist_append.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_slist_append.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_slist_append.pdf	2013-10-14 22:43:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_slist_append.pdf	2013-12-17 15:51:26.000000000 +0800
@@ -69,29 +69,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-b52b3dcd9ad6' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-b52b3dcd9ad6' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-10-14T16:43:16+02:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-10-14T16:43:16+02:00</xmp:CreateDate>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-b52b3dcd9ad6' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-b52b3dcd9ad6' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-12-17T08:51:26+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-12-17T08:51:26+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-b52b3dcd9ad6' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:824e3111-6cfb-11ee-0000-b52b3dcd9ad6'/>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-b52b3dcd9ad6' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-b52b3dcd9ad6' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:9470411a-9f0c-11ee-0000-b52b3dcd9ad6'/>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-b52b3dcd9ad6' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20131014164316+02'00')
-/ModDate(D:20131014164316+02'00')
+/CreationDate(D:20131217085126+01'00')
+/ModDate(D:20131217085126+01'00')
 /Creator(groff version 1.22.2)>>endobj
 xref
 0 15
 0000000000 65535 f 
 0000001330 00000 n 
 0000003210 00000 n 
@@ -106,11 +106,11 @@
 0000001436 00000 n 
 0000001466 00000 n 
 0000001731 00000 n 
 0000001787 00000 n 
 trailer
 << /Size 15 /Root 1 0 R /Info 2 0 R
-/ID [<52C60FF15D76628AF13FC8756ED09715><52C60FF15D76628AF13FC8756ED09715>]
+/ID [<036C0C77B22DBABDC0F249083DE1362D><036C0C77B22DBABDC0F249083DE1362D>]
 >>
 startxref
 3364
 %%EOF
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_slist_free_all.pdf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_slist_free_all.pdf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_slist_free_all.pdf	2013-10-14 22:43:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_slist_free_all.pdf	2013-12-17 15:51:26.000000000 +0800
@@ -59,29 +59,29 @@
 <</Type/Metadata
 /Subtype/XML/Length 1346>>stream
 <?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
 <?adobe-xap-filters esc="CRLF"?>
 <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
 <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-224f381b10d2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-224f381b10d2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-10-14T16:43:16+02:00</xmp:ModifyDate>
-<xmp:CreateDate>2013-10-14T16:43:16+02:00</xmp:CreateDate>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-224f381b10d2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-224f381b10d2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-12-17T08:51:26+01:00</xmp:ModifyDate>
+<xmp:CreateDate>2013-12-17T08:51:26+01:00</xmp:CreateDate>
 <xmp:CreatorTool>groff version 1.22.2</xmp:CreatorTool></rdf:Description>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-224f381b10d2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:824e3111-6cfb-11ee-0000-224f381b10d2'/>
-<rdf:Description rdf:about='uuid:824e3111-6cfb-11ee-0000-224f381b10d2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-224f381b10d2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:9470411a-9f0c-11ee-0000-224f381b10d2'/>
+<rdf:Description rdf:about='uuid:9470411a-9f0c-11ee-0000-224f381b10d2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Untitled</rdf:li></rdf:Alt></dc:title></rdf:Description>
 </rdf:RDF>
 </x:xmpmeta>
                                                                         
                                                                         
 <?xpacket end='w'?>
 endstream
 endobj
 2 0 obj
 <</Producer(GPL Ghostscript 9.05)
-/CreationDate(D:20131014164316+02'00')
-/ModDate(D:20131014164316+02'00')
+/CreationDate(D:20131217085126+01'00')
+/ModDate(D:20131217085126+01'00')
 /Creator(groff version 1.22.2)>>endobj
 xref
 0 14
 0000000000 65535 f 
 0000000869 00000 n 
 0000002677 00000 n 
@@ -95,11 +95,11 @@
 0000001055 00000 n 
 0000000975 00000 n 
 0000001005 00000 n 
 0000001254 00000 n 
 trailer
 << /Size 14 /Root 1 0 R /Info 2 0 R
-/ID [<D0C3136ED6BECCB8DBDF681E16EB3927><D0C3136ED6BECCB8DBDF681E16EB3927>]
+/ID [<CD1064C5F643DADC95910BA85872BA1A><CD1064C5F643DADC95910BA85872BA1A>]
 >>
 startxref
 2831
 %%EOF
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_strequal.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_strequal.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_unescape.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_unescape.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_version_info.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_version_info.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/curl_version.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/curl_version.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/libcurl-easy.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/libcurl-easy.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/libcurl-errors.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/libcurl-errors.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/libcurl-multi.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/libcurl-multi.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/libcurl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/libcurl.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/libcurl-share.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/libcurl-share.pdf differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/libcurl-tutorial.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/libcurl-tutorial.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/Makefile.am	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/Makefile.am	2013-12-17 06:02:35.000000000 +0800
@@ -76,15 +76,18 @@
  curl_global_init_mem.pdf libcurl-tutorial.pdf curl_easy_reset.pdf	 \
  curl_easy_escape.pdf curl_easy_unescape.pdf curl_multi_setopt.pdf	 \
  curl_multi_socket.pdf curl_multi_timeout.pdf curl_formget.pdf		 \
  curl_multi_assign.pdf curl_easy_pause.pdf curl_easy_recv.pdf		 \
  curl_easy_send.pdf curl_multi_socket_action.pdf curl_multi_wait.pdf
 
+m4macrodir = $(datadir)/aclocal
+dist_m4macro_DATA = libcurl.m4
+
 CLEANFILES = $(HTMLPAGES) $(PDFPAGES)
 
-EXTRA_DIST = $(man_MANS) $(HTMLPAGES) index.html $(PDFPAGES) libcurl.m4 ABI \
+EXTRA_DIST = $(man_MANS) $(HTMLPAGES) index.html $(PDFPAGES) ABI \
   symbols-in-versions symbols.pl
 MAN2HTML= roffit --mandir=. < $< >$@
 
 SUFFIXES = .3 .html
 
 html: $(HTMLPAGES)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -98,13 +99,13 @@
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 subdir = docs/libcurl
 DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
-	$(top_srcdir)/mkinstalldirs
+	$(top_srcdir)/mkinstalldirs $(dist_m4macro_DATA)
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
 	$(top_srcdir)/m4/curl-confopts.m4 \
 	$(top_srcdir)/m4/curl-functions.m4 \
 	$(top_srcdir)/m4/curl-openssl.m4 \
 	$(top_srcdir)/m4/curl-override.m4 \
@@ -173,14 +174,15 @@
   test -z "$$files" \
     || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
     || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
          $(am__cd) "$$dir" && rm -f $$files; }; \
   }
 man3dir = $(mandir)/man3
-am__installdirs = "$(DESTDIR)$(man3dir)"
+am__installdirs = "$(DESTDIR)$(man3dir)" "$(DESTDIR)$(m4macrodir)"
 MANS = $(man_MANS)
+DATA = $(dist_m4macro_DATA)
 am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMTAR = @AMTAR@
 AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
 AR = @AR@
@@ -233,13 +235,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
@@ -419,14 +420,16 @@
  curl_global_init_mem.pdf libcurl-tutorial.pdf curl_easy_reset.pdf	 \
  curl_easy_escape.pdf curl_easy_unescape.pdf curl_multi_setopt.pdf	 \
  curl_multi_socket.pdf curl_multi_timeout.pdf curl_formget.pdf		 \
  curl_multi_assign.pdf curl_easy_pause.pdf curl_easy_recv.pdf		 \
  curl_easy_send.pdf curl_multi_socket_action.pdf curl_multi_wait.pdf
 
+m4macrodir = $(datadir)/aclocal
+dist_m4macro_DATA = libcurl.m4
 CLEANFILES = $(HTMLPAGES) $(PDFPAGES)
-EXTRA_DIST = $(man_MANS) $(HTMLPAGES) index.html $(PDFPAGES) libcurl.m4 ABI \
+EXTRA_DIST = $(man_MANS) $(HTMLPAGES) index.html $(PDFPAGES) ABI \
   symbols-in-versions symbols.pl
 
 MAN2HTML = roffit --mandir=. < $< >$@
 SUFFIXES = .3 .html
 all: all-am
 
@@ -508,12 +511,33 @@
 	files=`{ for i in $$list; do echo "$$i"; done; \
 	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
 	  sed -n '/\.3[a-z]*$$/p'; \
 	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^3][0-9a-z]*$$,3,;x' \
 	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
 	dir='$(DESTDIR)$(man3dir)'; $(am__uninstall_files_from_dir)
+install-dist_m4macroDATA: $(dist_m4macro_DATA)
+	@$(NORMAL_INSTALL)
+	@list='$(dist_m4macro_DATA)'; test -n "$(m4macrodir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(m4macrodir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(m4macrodir)" || exit 1; \
+	fi; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(m4macrodir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(m4macrodir)" || exit $$?; \
+	done
+
+uninstall-dist_m4macroDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(dist_m4macro_DATA)'; test -n "$(m4macrodir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
+	dir='$(DESTDIR)$(m4macrodir)'; $(am__uninstall_files_from_dir)
 tags TAGS:
 
 ctags CTAGS:
 
 cscope cscopelist:
 
@@ -547,15 +571,15 @@
 	    || cp -p $$d/$$file "$(distdir)/$$file" \
 	    || exit 1; \
 	  fi; \
 	done
 check-am: all-am
 check: check-am
-all-am: Makefile $(MANS)
+all-am: Makefile $(MANS) $(DATA)
 installdirs:
-	for dir in "$(DESTDIR)$(man3dir)"; do \
+	for dir in "$(DESTDIR)$(man3dir)" "$(DESTDIR)$(m4macrodir)"; do \
 	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
 	done
 install: install-am
 install-exec: install-exec-am
 install-data: install-data-am
 uninstall: uninstall-am
@@ -601,13 +625,13 @@
 html-am:
 
 info: info-am
 
 info-am:
 
-install-data-am: install-man
+install-data-am: install-dist_m4macroDATA install-man
 
 install-dvi: install-dvi-am
 
 install-dvi-am:
 
 install-exec-am:
@@ -643,30 +667,31 @@
 pdf-am:
 
 ps: ps-am
 
 ps-am:
 
-uninstall-am: uninstall-man
+uninstall-am: uninstall-dist_m4macroDATA uninstall-man
 
 uninstall-man: uninstall-man3
 
 .MAKE: install-am install-strip
 
 .PHONY: all all-am check check-am clean clean-generic clean-libtool \
 	cscopelist-am ctags-am distclean distclean-generic \
 	distclean-libtool distdir dvi dvi-am html html-am info info-am \
-	install install-am install-data install-data-am install-dvi \
-	install-dvi-am install-exec install-exec-am install-html \
-	install-html-am install-info install-info-am install-man \
-	install-man3 install-pdf install-pdf-am install-ps \
-	install-ps-am install-strip installcheck installcheck-am \
-	installdirs maintainer-clean maintainer-clean-generic \
-	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
-	ps ps-am tags-am uninstall uninstall-am uninstall-man \
-	uninstall-man3
+	install install-am install-data install-data-am \
+	install-dist_m4macroDATA install-dvi install-dvi-am \
+	install-exec install-exec-am install-html install-html-am \
+	install-info install-info-am install-man install-man3 \
+	install-pdf install-pdf-am install-ps install-ps-am \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags-am uninstall uninstall-am uninstall-dist_m4macroDATA \
+	uninstall-man uninstall-man3
 
 
 html: $(HTMLPAGES)
 
 .3.html:
 	$(MAN2HTML)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/symbols-in-versions /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/symbols-in-versions
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/libcurl/symbols-in-versions	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/libcurl/symbols-in-versions	2013-12-17 06:02:35.000000000 +0800
@@ -247,12 +247,13 @@
 CURLINFO_SSL_DATA_OUT           7.12.1
 CURLINFO_SSL_ENGINES            7.12.3
 CURLINFO_SSL_VERIFYRESULT       7.5
 CURLINFO_STARTTRANSFER_TIME     7.9.2
 CURLINFO_STRING                 7.4.1
 CURLINFO_TEXT                   7.9.6
+CURLINFO_TLS_SESSION            7.34.0
 CURLINFO_TOTAL_TIME             7.4.1
 CURLINFO_TYPEMASK               7.4.1
 CURLIOCMD_NOP                   7.12.3
 CURLIOCMD_RESTARTREAD           7.12.3
 CURLIOE_FAILRESTART             7.12.3
 CURLIOE_OK                      7.12.3
@@ -391,12 +392,13 @@
 CURLOPT_ISSUERCERT              7.19.0
 CURLOPT_KEYPASSWD               7.17.0
 CURLOPT_KRB4LEVEL               7.3           7.17.0
 CURLOPT_KRBLEVEL                7.16.4
 CURLOPT_LOCALPORT               7.15.2
 CURLOPT_LOCALPORTRANGE          7.15.2
+CURLOPT_LOGIN_OPTIONS           7.34.0
 CURLOPT_LOW_SPEED_LIMIT         7.1
 CURLOPT_LOW_SPEED_TIME          7.1
 CURLOPT_MAIL_AUTH               7.25.0
 CURLOPT_MAIL_FROM               7.20.0
 CURLOPT_MAIL_RCPT               7.20.0
 CURLOPT_MAXCONNECTS             7.7
@@ -590,12 +592,22 @@
 CURLSSH_AUTH_DEFAULT            7.16.1
 CURLSSH_AUTH_HOST               7.16.1
 CURLSSH_AUTH_KEYBOARD           7.16.1
 CURLSSH_AUTH_NONE               7.16.1
 CURLSSH_AUTH_PASSWORD           7.16.1
 CURLSSH_AUTH_PUBLICKEY          7.16.1
+CURLSSLBACKEND_CYASSL           7.34.0
+CURLSSLBACKEND_DARWINSSL        7.34.0
+CURLSSLBACKEND_GNUTLS           7.34.0
+CURLSSLBACKEND_GSKIT            7.34.0
+CURLSSLBACKEND_NONE             7.34.0
+CURLSSLBACKEND_NSS              7.34.0
+CURLSSLBACKEND_OPENSSL          7.34.0
+CURLSSLBACKEND_POLARSSL         7.34.0
+CURLSSLBACKEND_QSOSSL           7.34.0
+CURLSSLBACKEND_SCHANNEL         7.34.0
 CURLSSLOPT_ALLOW_BEAST          7.25.0
 CURLUSESSL_ALL                  7.17.0
 CURLUSESSL_CONTROL              7.17.0
 CURLUSESSL_NONE                 7.17.0
 CURLUSESSL_TRY                  7.17.0
 CURLVERSION_FIRST               7.10
@@ -692,12 +704,15 @@
 CURL_SOCKOPT_ERROR              7.21.5
 CURL_SOCKOPT_OK                 7.21.5
 CURL_SSLVERSION_DEFAULT         7.9.2
 CURL_SSLVERSION_SSLv2           7.9.2
 CURL_SSLVERSION_SSLv3           7.9.2
 CURL_SSLVERSION_TLSv1           7.9.2
+CURL_SSLVERSION_TLSv1_0         7.34.0
+CURL_SSLVERSION_TLSv1_1         7.34.0
+CURL_SSLVERSION_TLSv1_2         7.34.0
 CURL_TIMECOND_IFMODSINCE        7.9.7
 CURL_TIMECOND_IFUNMODSINCE      7.9.7
 CURL_TIMECOND_LASTMOD           7.9.7
 CURL_TIMECOND_NONE              7.9.7
 CURL_TLSAUTH_NONE               7.21.4
 CURL_TLSAUTH_SRP                7.21.4
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/Makefile.am	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/Makefile.am	2013-12-17 06:02:35.000000000 +0800
@@ -34,13 +34,13 @@
 CLEANFILES = $(GENHTMLPAGES) $(PDFPAGES)
 
 EXTRA_DIST = MANUAL BUGS CONTRIBUTE FAQ FEATURES INTERNALS SSLCERTS	 \
  README.win32 RESOURCES TODO TheArtOfHttpScripting THANKS VERSIONS	 \
  KNOWN_BUGS BINDINGS $(man_MANS) $(HTMLPAGES) HISTORY INSTALL		 \
  $(PDFPAGES) LICENSE-MIXING README.netware DISTRO-DILEMMA INSTALL.devcpp \
- MAIL-ETIQUETTE HTTP-COOKIES LIBCURL-STRUCTS
+ MAIL-ETIQUETTE HTTP-COOKIES LIBCURL-STRUCTS SECURITY
 
 MAN2HTML= roffit < $< >$@
 
 SUFFIXES = .1 .html .pdf
 
 html: $(HTMLPAGES)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/Makefile.in	2013-12-17 06:11:27.000000000 +0800
@@ -293,13 +293,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
@@ -433,13 +432,13 @@
 SUBDIRS = examples libcurl
 CLEANFILES = $(GENHTMLPAGES) $(PDFPAGES)
 EXTRA_DIST = MANUAL BUGS CONTRIBUTE FAQ FEATURES INTERNALS SSLCERTS	 \
  README.win32 RESOURCES TODO TheArtOfHttpScripting THANKS VERSIONS	 \
  KNOWN_BUGS BINDINGS $(man_MANS) $(HTMLPAGES) HISTORY INSTALL		 \
  $(PDFPAGES) LICENSE-MIXING README.netware DISTRO-DILEMMA INSTALL.devcpp \
- MAIL-ETIQUETTE HTTP-COOKIES LIBCURL-STRUCTS
+ MAIL-ETIQUETTE HTTP-COOKIES LIBCURL-STRUCTS SECURITY
 
 MAN2HTML = roffit < $< >$@
 SUFFIXES = .1 .html .pdf
 all: all-recursive
 
 .SUFFIXES:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/mk-ca-bundle.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/mk-ca-bundle.pdf differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs: SECURITY
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/THANKS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/THANKS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/THANKS	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/THANKS	2013-12-17 06:02:35.000000000 +0800
@@ -24,12 +24,13 @@
 Aleksey Tulinov
 Alessandro Ghedini
 Alessandro Vesely
 Alex Bligh
 Alex Fishman
 Alex Gruz
+Alex McLellan
 Alex Neblett
 Alex Suykov
 Alex Vinnik
 Alex aka WindEagle
 Alexander Beedie
 Alexander Klauer
@@ -59,12 +60,13 @@
 Andreas Olsson
 Andreas Rieke
 Andreas Schuldei
 Andreas Wurf
 Andrei Benea
 Andrei Cipu
+Andrej E Baranov
 Andres Garcia
 Andrew Benham
 Andrew Biggs
 Andrew Bushnell
 Andrew Francis
 Andrew Fuller
@@ -106,15 +108,17 @@
 Ben Van Hof
 Ben Winslow
 Benbuck Nason
 Benjamin Gerard
 Benjamin Gilbert
 Benjamin Johnson
+Benoit Sigoure
 Bernard Leak
 Bernhard Reutner-Fischer
 Bertrand Demiddelaer
+Bill Doyle
 Bill Egert
 Bill Hoffman
 Bill Middlecamp
 Bjoern Sikora
 Bjorn Augustsson
 Bjorn Reese
@@ -151,12 +155,13 @@
 Chad Monroe
 Chandrakant Bagul
 Charles Kerr
 Chih-Chung Chang
 Chris "Bob Bob"
 Chris Combes
+Chris Conlon
 Chris Conroy
 Chris Deidun
 Chris Flerackers
 Chris Gaukroger
 Chris Maltby
 Chris Mumford
@@ -178,12 +183,13 @@
 Ciprian Badescu
 Claes Jakobsson
 Clarence Gardner
 Clemens Gruber
 Clifford Wolf
 Cody Jones
+Colby Ranger
 Colin Hogben
 Colin Watson
 Colm Buckley
 Constantine Sapuntzakis
 Cory Nelson
 Craig A West
@@ -191,12 +197,13 @@
 Craig Markwardt
 Cris Bailiff
 Cristian RodrÃ­guez
 Curt Bogmine
 Cyrill Osterwalder
 CÃ©dric Deltheil
+D. Flinkmann
 Dag Ekengren
 Dagobert Michelsen
 Damien Adant
 Dan Becker
 Dan C
 Dan Fandrich
@@ -218,12 +225,13 @@
 Darshan Mody
 Dave Dribin
 Dave Halbakken
 Dave Hamilton
 Dave May
 Dave Reisner
+Dave Thompson
 Dave Vasilevsky
 David Bau
 David Binderman
 David Blaikie
 David Byron
 David Cohen
@@ -241,19 +249,22 @@
 David Phillips
 David Rosenstrauch
 David Shaw
 David Strauss
 David Tarendash
 David Thiel
+David Walser
 David Wright
 David Yan
 Dengminwen
+Derek Higgins
 Detlef Schmier
 Didier Brisebourg
 Diego Casorran
 Dima Barsky
+Dima Tisnek
 Dimitre Dimitrov
 Dimitris Sarris
 Dinar
 Dirk Eddelbuettel
 Dirk Manske
 Dmitri Shubin
@@ -286,21 +297,23 @@
 Edward Rudd
 Edward Sheldrake
 Eelco Dolstra
 Eetu Ojanen
 Eldar Zaitov
 Ellis Pritchard
+Elmira A Semenova
 Emanuele Bovisio
 Emil Romanus
 Emiliano Ida
 Enrico Scholz
 Enrik Berkhan
 Eric Cooper
 Eric Hu
 Eric Landes
 Eric Lavigne
+Eric Lubin
 Eric Melville
 Eric Mertens
 Eric Rautman
 Eric S. Raymond
 Eric Thelin
 Eric Vergnaud
@@ -315,16 +328,18 @@
 Evgeny Turnaev
 Eygene Ryabinkin
 Fabian Hiernaux
 Fabian Keil
 Fabrizio Ammollo
 Fedor Karpelevitch
+Felix Yan
 Felix von Leitner
 Feng Tu
 Florian Schoppmann
 Forrest Cahoon
+Francois Charlier
 Frank Hempel
 Frank Keeney
 Frank McGeough
 Frank Meier
 Frank Ticheler
 Frank Van Uffelen
@@ -339,17 +354,19 @@
 Garrett Holmstrom
 Gary Maxwell
 Gautam Kachroo
 Gautam Mani
 Gavrie Philipson
 Gaz Iqbal
+Geoff Beier
 Georg Horn
 Georg Huettenegger
 Georg Lippitsch
 Georg Wicherski
 Gerd v. Egidy
+Gergely Nagy
 Gerhard Herre
 Gerrit BruchhÃ¤user
 Ghennadi Procopciuc
 Giancarlo Formicuccia
 Giaslas Georgios
 Gil Weber
@@ -359,12 +376,14 @@
 Gisle Vanem
 Giuseppe Attardi
 Giuseppe D'Ambrosio
 Glen Nakamura
 Glen Scott
 Gokhan Sengun
+Gordon Marler
+Gorilla Maguila
 Grant Erickson
 Greg Hewgill
 Greg Morse
 Greg Onufer
 Greg Zavertnik
 Grigory Entin
@@ -381,14 +400,16 @@
 Hanno Kranzhoff
 Hans Steegers
 Hans-Jurgen May
 Hardeep Singh
 Harshal Pradhan
 Hauke Duden
+He Qin
 Heikki Korpela
 Heinrich Ko
+Heinrich Schaefer
 Hendrik Visage
 Henrik Storner
 Henry Ludemann
 Herve Amblard
 Hidemoto Nakada
 Ho-chi Chen
@@ -419,12 +440,13 @@
 Jacob Moshenko
 Jad Chamcham
 James Bursa
 James Cheng
 James Clancy
 James Cone
+James Dury
 James Gallagher
 James Griffiths
 James Housley
 James MacMillan
 Jamie Lokier
 Jamie Newton
@@ -438,33 +460,36 @@
 Jared Lundell
 Jari Sundell
 Jason Glasgow
 Jason Liu
 Jason McDonald
 Jason S. Priebe
+Javier Barroso
 Jay Austin
 Jayesh A Shah
 Jaz Fresh
 Jean Jacques Drouin
 Jean-Claude Chauve
 Jean-Francois Bertrand
 Jean-Louis Lemaire
 Jean-Marc Ranger
 Jean-Noel Rouvignac
 Jean-Philippe Barrette-LaPierre
 Jeff Connelly
 Jeff Johnson
+Jeff King
 Jeff Lawson
 Jeff Phillips
 Jeff Pohlmeyer
 Jeff Weber
 Jeffrey Pohlmeyer
 Jeremy Friesner
 Jeremy Huddleston
 Jerome Muffat-Meridol
 Jerome Vouillon
+Jerry Krinock
 Jerry Wu
 Jes Badwal
 Jesper Jensen
 Jesse Noller
 Jie He
 Jim Drash
@@ -483,12 +508,13 @@
 Johan Nilsson
 Johan van Selst
 Johannes Bauer
 John Bradshaw
 John Crow
 John Dennis
+John Dunn
 John E. Malmberg
 John Gardiner Myers
 John Janssen
 John Joseph Bachir
 John Kelly
 John Lask
@@ -566,12 +592,13 @@
 Konstantin Isakov
 Kris Kennaway
 Krishnendu Majumdar
 Krister Johansen
 Kristian Gunstone
 Kristian KÃ¶hntopp
+Kyle L. Huff
 Kyle Sallee
 Lachlan O'Dea
 Larry Campbell
 Larry Fahnoe
 Lars Buitinck
 Lars Gustafsson
@@ -608,19 +635,21 @@
 Maciej W. Rozycki
 Mamoru Tasaka
 Mandy Wu
 Manfred Schwarb
 Manuel Massing
 Marc Boucher
+Marc Deslauriers
 Marc Doughty
 Marc Hoersken
 Marc Kleine-Budde
 Marcel Raad
 Marcel Roelofs
 Marcelo Juchem
 Marcin Adamski
+Marcin Gryszkalis
 Marcin Konicki
 Marco G. Salvagno
 Marco Maggi
 Marcus Sundberg
 Marcus Webster
 Mario Schroeder
@@ -669,23 +698,25 @@
 Maxim Ivanov
 Maxim Perenesenko
 Maxim Prohorov
 Maxime Larocque
 Mehmet Bozkurt
 Mekonikum
+Melissa Mears
 Mettgut Jamalla
 Michael Benedict
 Michael Calmer
 Michael Cronenworth
 Michael Curtis
 Michael Day
 Michael Goffioul
 Michael Jahn
 Michael Jerris
 Michael Mealling
 Michael Mueller
+Michael Osipov
 Michael Smith
 Michael Stillwell
 Michael Wallner
 Michal Bonino
 Michal Gorny
 Michal Kowalczyk
@@ -697,12 +728,13 @@
 Mikael Sennerholm
 Mike Bytnar
 Mike Crowe
 Mike Dobbs
 Mike Giancola
 Mike Hommey
+Mike Mio
 Mike Power
 Mike Protts
 Mike Revi
 Miklos Nemeth
 Mitz Wark
 Mohamed Lrhazi
@@ -741,12 +773,13 @@
 Norbert Novotny
 Ofer
 Olaf Flebbe
 Olaf Stueben
 Olaf StÃ¼ben
 Oliver GondÅ¾a
+Oliver Kuckertz
 Olivier Berger
 Oren Tirosh
 Ori Avtalion
 Oscar Koeroo
 Oscar Norlander
 P R Schaffner
@@ -759,14 +792,16 @@
 Patrick Bihan-Faou
 Patrick Monnerat
 Patrick Scott
 Patrick Smith
 Patrik Thunstrom
 Pau Garcia i Quiles
+Paul Donohue
 Paul Harrington
 Paul Howarth
+Paul Marks
 Paul Marquis
 Paul Moore
 Paul Nolan
 Paul Querna
 Pavel Cenek
 Pavel Orehov
@@ -789,12 +824,14 @@
 Peter Su
 Peter Sylvester
 Peter Todd
 Peter Verhas
 Peter Wullinger
 Peteris Krumins
+Petr Bahula
+Petr Pisar
 Phil Blundell
 Phil Karn
 Phil Lisiecki
 Phil Pellouchoud
 Philip Craig
 Philip Gladstone
@@ -872,21 +909,23 @@
 Roland Blom
 Roland Krikava
 Roland Zimmermann
 Rolland Dudemaine
 Roman Koifman
 Roman Mamedov
+Romulo A. Ceccon
 Ron Zapp
 Rosimildo da Silva
 Roy Shan
 Rune Kleveland
 Ruslan Gazizov
 Rutger Hofman
 Ryan Chan
 Ryan Nelson
 Ryan Schmidt
+RÃ©my LÃ©one
 S. Moonesamy
 Salvador DÃ¡vila
 Salvatore Sorrentino
 Sam Deane
 Sam Listopad
 Sampo Kellomaki
@@ -906,17 +945,19 @@
 Scott Davis
 Scott McCreary
 Sebastian Rasmussen
 Sebastien Willemijns
 Senthil Raja Velu
 Sergei Nikulov
+Sergey Tatarincev
 Sergio Ballestrero
 Seshubabu Pasam
 Sh Diao
 Sharad Gupta
 Shard
+Shawn Landden
 Shawn Poulson
 Shmulik Regev
 Siddhartha Prakash Jain
 Sidney San Martin
 Siegfried Gyuricsko
 Simon Dick
@@ -994,12 +1035,13 @@
 Tom Mattison
 Tom Moers
 Tom Mueller
 Tom Regner
 Tom Wright
 Tom Zerucha
+Tomas Hoger
 Tomas Mlcoch
 Tomas Pospisek
 Tomas Szepe
 Tomasz Lacki
 Tommie Gannert
 Tommy Tam
@@ -1011,13 +1053,15 @@
 Toshio Kuratomi
 Toshiyuki Maezawa
 Traian Nicolescu
 Troels Walsted Hansen
 Troy Engel
 Tupone Alfredo
+Tyler Hall
 Ulf HÃ¤rnhammar
+Ulf Samuelsson
 Ulrich Doehner
 Ulrich Zadow
 Venkat Akella
 Victor Snezhko
 Vikram Saxena
 Vilmos Nebehaj
@@ -1038,21 +1082,24 @@
 Wayne Haigh
 Werner Koch
 Wesley Laxton
 Wesley Miaw
 Wez Furlong
 Wilfredo Sanchez
+Will Dietz
 Willem Sparreboom
 Wojciech Zwiefka
 Wouter Van Rooy
 Wu Yongzheng
 Xavier Bouchoux
+Yaakov Selkowitz
 Yamada Yasuharu
 Yang Tse
 Yarram Sunil
 Yehoshua Hershberg
+Yi Huang
 Yukihiro Kawada
 Yuriy Sosov
 Yves Arrouye
 Yves Lejeune
 Zdenek Pavlas
 Zekun Ni
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/docs/TODO	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/docs/TODO	2013-12-17 06:02:35.000000000 +0800
@@ -13,14 +13,13 @@
 
  1. libcurl
  1.2 More data sharing
  1.3 struct lifreq
  1.4 signal-based resolver timeouts
  1.5 get rid of PATH_MAX
- 1.6 Happy Eyeball dual stack connect
- 1.7 Modified buffer size approach
+ 1.6 Modified buffer size approach
 
  2. libcurl - multi interface
  2.1 More non-blocking
  2.2 Fix HTTP Pipelining for PUT
 
  3. Documentation
@@ -36,32 +35,30 @@
 
  5. HTTP
  5.1 Better persistency for HTTP 1.0
  5.2 support FF3 sqlite cookie files
  5.3 Rearrange request header order
  5.4 HTTP2/SPDY
+ 5.5 auth= in URLs
 
  6. TELNET
  6.1 ditch stdin
  6.2 ditch telnet-specific select
  6.3 feature negotiation debug data
  6.4 send data in chunks
 
  7. SMTP
  7.1 Pipelining
- 7.2 Graceful base64 decoding failure
- 7.3 Enhanced capability support
+ 7.2 Enhanced capability support
  
  8. POP3
  8.1 Pipelining
- 8.2 Graceful base64 decoding failure
- 8.3 Enhanced capability support
+ 8.2 Enhanced capability support
  
  9. IMAP
- 9.1 Graceful base64 decoding failure
- 9.2 Enhanced capability support
+ 9.1 Enhanced capability support
  
  10. LDAP
  10.1 SASL based authentication mechanisms
  
  11. New protocols
  11.1 RSYNC
@@ -154,25 +151,13 @@
  http://insanecoding.blogspot.com/2007/11/pathmax-simply-isnt.html
 
  Currently the SSH based code uses it a bit, but to remove PATH_MAX from there
  we need libssh2 to properly tell us when we pass in a too small buffer and
  its current API (as of libssh2 1.2.7) doesn't.
 
-1.6 Happy Eyeball dual stack connect
-
- In order to make alternative technologies not suffer when transitioning, like
- when introducing IPv6 as an alternative to IPv4 and there are more than one
- option existing simultaneously there are reasons to reconsider internal
- choices.
-
- To make libcurl do blazing fast IPv6 in a dual-stack configuration, this needs
- to be addressed:
-
-    http://tools.ietf.org/html/rfc6555
-
-1.7 Modified buffer size approach
+1.6 Modified buffer size approach
 
  Current libcurl allocates a fixed 16K size buffer for download and an
  additional 16K for upload. They are always unconditionally part of the easy
  handle. If CRLF translations are requested, an additional 32K "scratch
  buffer" is allocated. A total of 64K transfer buffers in the worst case.
 
@@ -297,12 +282,23 @@
  fiddling. The Spindy library (http://spindly.haxx.se/) was an attempt to make
  such a library with an API suitable for use by libcurl but that effort has
  more or less stalled.  spdylay (https://github.com/tatsuhiro-t/spdylay) may
  be a better option, either used directly or wrapped with a more spindly-like
  API.
 
+5.5 auth= in URLs
+
+ Add the ability to specify the preferred authentication mechanism to use by
+ using ;auth=<mech> in the login part of the URL.
+
+ For example:
+
+ http://test:pass;auth=NTLM@example.com would be equivalent to specifing --user
+ test:pass;auth=NTLM or --user test:pass --ntlm from the command line. 
+
+ Additionally this should be implemented for proxy base URLs as well.
 
 6. TELNET
 
 6.1 ditch stdin
 
 Reading input (to send to the remote server) on stdin is a crappy solution for
@@ -328,52 +324,31 @@
 7. SMTP
 
 7.1 Pipelining
 
  Add support for pipelining emails.
 
-7.2 Graceful base64 decoding failure
-
- Rather than shutting down the session and returning an error when the
- decoding of a base64 encoded authentication response fails, we should
- gracefully shutdown the authentication process by sending a * response to the
- server as per RFC4954.
-
-7.3 Enhanced capability support
+7.2 Enhanced capability support
 
  Add the ability, for an application that uses libcurl, to obtain the list of
  capabilities returned from the EHLO command.
 
 8. POP3
 
 8.1 Pipelining
 
  Add support for pipelining commands.
 
-8.2 Graceful base64 decoding failure
-
- Rather than shutting down the session and returning an error when the
- decoding of a base64 encoded authentication response fails, we should
- gracefully shutdown the authentication process by sending a * response to the
- server as per RFC5034.
- 
-8.3 Enhanced capability support
+8.2 Enhanced capability support
 
  Add the ability, for an application that uses libcurl, to obtain the list of
  capabilities returned from the CAPA command.
 
 9. IMAP
 
-9.1 Graceful base64 decoding failure
-
- Rather than shutting down the session and returning an error when the
- decoding of a base64 encoded authentication response fails, we should
- gracefully shutdown the authentication process by sending a * response to the
- server as per RFC3501.
-
-9.2 Enhanced capability support
+9.1 Enhanced capability support
 
  Add the ability, for an application that uses libcurl, to obtain the list of
  capabilities returned from the CAPABILITY command.
 
 10. LDAP
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/curlbuild.h.cmake /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/curlbuild.h.cmake
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/curlbuild.h.cmake	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/curlbuild.h.cmake	2013-12-17 06:02:35.000000000 +0800
@@ -55,126 +55,143 @@
 
 /* ================================================================ */
 /*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */
 /* ================================================================ */
 
 #ifdef CURL_SIZEOF_LONG
-#  error "CURL_SIZEOF_LONG shall not be defined except in curlbuild.h"
+#error "CURL_SIZEOF_LONG shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_SIZEOF_LONG_already_defined
 #endif
 
 #ifdef CURL_TYPEOF_CURL_SOCKLEN_T
-#  error "CURL_TYPEOF_CURL_SOCKLEN_T shall not be defined except in curlbuild.h"
+#error "CURL_TYPEOF_CURL_SOCKLEN_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_TYPEOF_CURL_SOCKLEN_T_already_defined
 #endif
 
 #ifdef CURL_SIZEOF_CURL_SOCKLEN_T
-#  error "CURL_SIZEOF_CURL_SOCKLEN_T shall not be defined except in curlbuild.h"
+#error "CURL_SIZEOF_CURL_SOCKLEN_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_SIZEOF_CURL_SOCKLEN_T_already_defined
 #endif
+
 #ifdef CURL_TYPEOF_CURL_OFF_T
-#  error "CURL_TYPEOF_CURL_OFF_T shall not be defined except in curlbuild.h"
+#error "CURL_TYPEOF_CURL_OFF_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_TYPEOF_CURL_OFF_T_already_defined
 #endif
 
 #ifdef CURL_FORMAT_CURL_OFF_T
-#  error "CURL_FORMAT_CURL_OFF_T shall not be defined except in curlbuild.h"
+#error "CURL_FORMAT_CURL_OFF_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_FORMAT_CURL_OFF_T_already_defined
 #endif
 
 #ifdef CURL_FORMAT_CURL_OFF_TU
-#  error "CURL_FORMAT_CURL_OFF_TU shall not be defined except in curlbuild.h"
+#error "CURL_FORMAT_CURL_OFF_TU shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_FORMAT_CURL_OFF_TU_already_defined
 #endif
 
 #ifdef CURL_FORMAT_OFF_T
-#  error "CURL_FORMAT_OFF_T shall not be defined except in curlbuild.h"
+#error "CURL_FORMAT_OFF_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_FORMAT_OFF_T_already_defined
 #endif
 
 #ifdef CURL_SIZEOF_CURL_OFF_T
-#  error "CURL_SIZEOF_CURL_OFF_T shall not be defined except in curlbuild.h"
+#error "CURL_SIZEOF_CURL_OFF_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_SIZEOF_CURL_OFF_T_already_defined
 #endif
 
 #ifdef CURL_SUFFIX_CURL_OFF_T
-#  error "CURL_SUFFIX_CURL_OFF_T shall not be defined except in curlbuild.h"
+#error "CURL_SUFFIX_CURL_OFF_T shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_SUFFIX_CURL_OFF_T_already_defined
 #endif
 
 #ifdef CURL_SUFFIX_CURL_OFF_TU
-#  error "CURL_SUFFIX_CURL_OFF_TU shall not be defined except in curlbuild.h"
+#error "CURL_SUFFIX_CURL_OFF_TU shall not be defined except in curlbuild.h"
    Error Compilation_aborted_CURL_SUFFIX_CURL_OFF_TU_already_defined
 #endif
 
 /* ================================================================ */
 /*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */
 /* ================================================================ */
 
+/* Configure process defines this to 1 when it finds out that system  */
+/* header file ws2tcpip.h must be included by the external interface. */
+#cmakedefine CURL_PULL_WS2TCPIP_H
+#ifdef CURL_PULL_WS2TCPIP_H
+#  ifndef WIN32_LEAN_AND_MEAN
+#    define WIN32_LEAN_AND_MEAN
+#  endif
+#  include <windows.h>
+#  include <winsock2.h>
+#  include <ws2tcpip.h>
+#endif
+
 /* Configure process defines this to 1 when it finds out that system   */
 /* header file sys/types.h must be included by the external interface. */
-#cmakedefine CURL_PULL_SYS_TYPES_H ${CURL_PULL_SYS_TYPES_H}
+#cmakedefine CURL_PULL_SYS_TYPES_H
 #ifdef CURL_PULL_SYS_TYPES_H
 #  include <sys/types.h>
 #endif
 
 /* Configure process defines this to 1 when it finds out that system */
 /* header file stdint.h must be included by the external interface.  */
-#cmakedefine CURL_PULL_STDINT_H ${CURL_PULL_STDINT_H}
+#cmakedefine CURL_PULL_STDINT_H
 #ifdef CURL_PULL_STDINT_H
 #  include <stdint.h>
 #endif
 
 /* Configure process defines this to 1 when it finds out that system  */
 /* header file inttypes.h must be included by the external interface. */
-#cmakedefine CURL_PULL_INTTYPES_H ${CURL_PULL_INTTYPES_H}
+#cmakedefine CURL_PULL_INTTYPES_H
 #ifdef CURL_PULL_INTTYPES_H
 #  include <inttypes.h>
 #endif
 
+/* Configure process defines this to 1 when it finds out that system    */
+/* header file sys/socket.h must be included by the external interface. */
+#cmakedefine CURL_PULL_SYS_SOCKET_H
+#ifdef CURL_PULL_SYS_SOCKET_H
+#  include <sys/socket.h>
+#endif
+
+/* Configure process defines this to 1 when it finds out that system  */
+/* header file sys/poll.h must be included by the external interface. */
+#cmakedefine CURL_PULL_SYS_POLL_H
+#ifdef CURL_PULL_SYS_POLL_H
+#  include <sys/poll.h>
+#endif
+
 /* The size of `long', as computed by sizeof. */
-#cmakedefine CURL_SIZEOF_LONG ${CURL_SIZEOF_LONG}
+#define CURL_SIZEOF_LONG ${CURL_SIZEOF_LONG}
 
 /* Integral data type used for curl_socklen_t. */
-#cmakedefine CURL_TYPEOF_CURL_SOCKLEN_T ${CURL_TYPEOF_CURL_SOCKLEN_T}
-
-/* on windows socklen_t is in here */
-#ifdef _WIN32
-#  include <winsock2.h>
-#  include <ws2tcpip.h>
-#endif
+#define CURL_TYPEOF_CURL_SOCKLEN_T ${CURL_TYPEOF_CURL_SOCKLEN_T}
 
-#ifdef HAVE_SYS_SOCKET_H
-#  include <sys/socket.h>
-#endif
+/* The size of `curl_socklen_t', as computed by sizeof. */
+#define CURL_SIZEOF_CURL_SOCKLEN_T ${CURL_SIZEOF_CURL_SOCKLEN_T}
 
 /* Data type definition of curl_socklen_t. */
 typedef CURL_TYPEOF_CURL_SOCKLEN_T curl_socklen_t;
 
-/* The size of `curl_socklen_t', as computed by sizeof. */
-#cmakedefine CURL_SIZEOF_CURL_SOCKLEN_T ${CURL_SIZEOF_CURL_SOCKLEN_T}
-
 /* Signed integral data type used for curl_off_t. */
-#cmakedefine CURL_TYPEOF_CURL_OFF_T ${CURL_TYPEOF_CURL_OFF_T}
+#define CURL_TYPEOF_CURL_OFF_T ${CURL_TYPEOF_CURL_OFF_T}
 
 /* Data type definition of curl_off_t. */
 typedef CURL_TYPEOF_CURL_OFF_T curl_off_t;
 
 /* curl_off_t formatting string directive without "%" conversion specifier. */
-#cmakedefine CURL_FORMAT_CURL_OFF_T "${CURL_FORMAT_CURL_OFF_T}"
+#define CURL_FORMAT_CURL_OFF_T "${CURL_FORMAT_CURL_OFF_T}"
 
 /* unsigned curl_off_t formatting string without "%" conversion specifier. */
-#cmakedefine CURL_FORMAT_CURL_OFF_TU "${CURL_FORMAT_CURL_OFF_TU}"
+#define CURL_FORMAT_CURL_OFF_TU "${CURL_FORMAT_CURL_OFF_TU}"
 
 /* curl_off_t formatting string directive with "%" conversion specifier. */
-#cmakedefine CURL_FORMAT_OFF_T "${CURL_FORMAT_OFF_T}"
+#define CURL_FORMAT_OFF_T "${CURL_FORMAT_OFF_T}"
 
 /* The size of `curl_off_t', as computed by sizeof. */
-#cmakedefine CURL_SIZEOF_CURL_OFF_T ${CURL_SIZEOF_CURL_OFF_T}
+#define CURL_SIZEOF_CURL_OFF_T ${CURL_SIZEOF_CURL_OFF_T}
 
 /* curl_off_t constant suffix. */
-#cmakedefine CURL_SUFFIX_CURL_OFF_T ${CURL_SUFFIX_CURL_OFF_T}
+#define CURL_SUFFIX_CURL_OFF_T ${CURL_SUFFIX_CURL_OFF_T}
 
 /* unsigned curl_off_t constant suffix. */
-#cmakedefine CURL_SUFFIX_CURL_OFF_TU ${CURL_SUFFIX_CURL_OFF_TU}
+#define CURL_SUFFIX_CURL_OFF_TU ${CURL_SUFFIX_CURL_OFF_TU}
 
 #endif /* __CURL_CURLBUILD_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/curl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/curl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/curl.h	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/curl.h	2013-12-17 06:02:35.000000000 +0800
@@ -66,13 +66,13 @@
 
 /* HP-UX systems version 9, 10 and 11 lack sys/select.h and so does oldish
    libc5-based Linux systems. Only include it on systems that are known to
    require it! */
 #if defined(_AIX) || defined(__NOVELL_LIBC__) || defined(__NetBSD__) || \
     defined(__minix) || defined(__SYMBIAN32__) || defined(__INTEGRITY) || \
-    defined(ANDROID) || defined(__ANDROID__) || \
+    defined(ANDROID) || defined(__ANDROID__) || defined(__OpenBSD__) || \
    (defined(__FreeBSD_version) && (__FreeBSD_version < 800000))
 #include <sys/select.h>
 #endif
 
 #if !defined(WIN32) && !defined(_WIN32_WCE)
 #include <sys/socket.h>
@@ -824,16 +824,16 @@
   /* Port number to connect to, if other than default. */
   CINIT(PORT, LONG, 3),
 
   /* Name of proxy to use. */
   CINIT(PROXY, OBJECTPOINT, 4),
 
-  /* "name:password" to use when fetching. */
+  /* "user:password;options" to use when fetching. */
   CINIT(USERPWD, OBJECTPOINT, 5),
 
-  /* "name:password" to use with proxy. */
+  /* "user:password" to use with proxy. */
   CINIT(PROXYUSERPWD, OBJECTPOINT, 6),
 
   /* Range to get, specified as an ASCII string. */
   CINIT(RANGE, OBJECTPOINT, 7),
 
   /* not used */
@@ -1385,14 +1385,13 @@
   CINIT(ISSUERCERT, OBJECTPOINT, 170),
 
   /* (IPv6) Address scope */
   CINIT(ADDRESS_SCOPE, LONG, 171),
 
   /* Collect certificate chain info and allow it to get retrievable with
-     CURLINFO_CERTINFO after the transfer is complete. (Unfortunately) only
-     working with OpenSSL-powered builds. */
+     CURLINFO_CERTINFO after the transfer is complete. */
   CINIT(CERTINFO, LONG, 172),
 
   /* "name" and "pwd" to use when fetching. */
   CINIT(USERNAME, OBJECTPOINT, 173),
   CINIT(PASSWORD, OBJECTPOINT, 174),
 
@@ -1566,12 +1565,15 @@
   CINIT(DNS_LOCAL_IP4, OBJECTPOINT, 222),
 
   /* Set the local IPv4 address to use for outgoing DNS requests.
    * Only supported by the c-ares DNS backend */
   CINIT(DNS_LOCAL_IP6, OBJECTPOINT, 223),
 
+  /* Set authentication options directly */
+  CINIT(LOGIN_OPTIONS, OBJECTPOINT, 224),
+
   CURLOPT_LASTENTRY /* the last unused */
 } CURLoption;
 
 #ifndef CURL_NO_OLDIES /* define this to test if your app builds with all
                           the obsolete stuff removed! */
 
@@ -1656,15 +1658,18 @@
                            * will be queried. */
   CURL_NETRC_LAST
 };
 
 enum {
   CURL_SSLVERSION_DEFAULT,
-  CURL_SSLVERSION_TLSv1,
+  CURL_SSLVERSION_TLSv1, /* TLS 1.x */
   CURL_SSLVERSION_SSLv2,
   CURL_SSLVERSION_SSLv3,
+  CURL_SSLVERSION_TLSv1_0,
+  CURL_SSLVERSION_TLSv1_1,
+  CURL_SSLVERSION_TLSv1_2,
 
   CURL_SSLVERSION_LAST /* never use, keep last */
 };
 
 enum CURL_TLSAUTH {
   CURL_TLSAUTH_NONE,
@@ -1977,12 +1982,34 @@
   int num_of_certs;             /* number of certificates with information */
   struct curl_slist **certinfo; /* for each index in this array, there's a
                                    linked list with textual information in the
                                    format "name: value" */
 };
 
+/* enum for the different supported SSL backends */
+typedef enum {
+  CURLSSLBACKEND_NONE = 0,
+  CURLSSLBACKEND_OPENSSL = 1,
+  CURLSSLBACKEND_GNUTLS = 2,
+  CURLSSLBACKEND_NSS = 3,
+  CURLSSLBACKEND_QSOSSL = 4,
+  CURLSSLBACKEND_GSKIT = 5,
+  CURLSSLBACKEND_POLARSSL = 6,
+  CURLSSLBACKEND_CYASSL = 7,
+  CURLSSLBACKEND_SCHANNEL = 8,
+  CURLSSLBACKEND_DARWINSSL = 9
+} curl_sslbackend;
+
+/* Information about the SSL library used and the respective internal SSL
+   handle, which can be used to obtain further information regarding the
+   connection. Asked for with CURLINFO_TLS_SESSION. */
+struct curl_tlssessioninfo {
+  curl_sslbackend backend;
+  void *internals;
+};
+
 #define CURLINFO_STRING   0x100000
 #define CURLINFO_LONG     0x200000
 #define CURLINFO_DOUBLE   0x300000
 #define CURLINFO_SLIST    0x400000
 #define CURLINFO_MASK     0x0fffff
 #define CURLINFO_TYPEMASK 0xf00000
@@ -2028,15 +2055,16 @@
   CURLINFO_RTSP_CLIENT_CSEQ = CURLINFO_LONG   + 37,
   CURLINFO_RTSP_SERVER_CSEQ = CURLINFO_LONG   + 38,
   CURLINFO_RTSP_CSEQ_RECV   = CURLINFO_LONG   + 39,
   CURLINFO_PRIMARY_PORT     = CURLINFO_LONG   + 40,
   CURLINFO_LOCAL_IP         = CURLINFO_STRING + 41,
   CURLINFO_LOCAL_PORT       = CURLINFO_LONG   + 42,
+  CURLINFO_TLS_SESSION      = CURLINFO_SLIST  + 43,
   /* Fill in new entries below here! */
 
-  CURLINFO_LASTONE          = 42
+  CURLINFO_LASTONE          = 43
 } CURLINFO;
 
 /* CURLINFO_RESPONSE_CODE is the new name for the option previously known as
    CURLINFO_HTTP_CODE */
 #define CURLINFO_HTTP_CODE CURLINFO_RESPONSE_CODE
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/curlver.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/curlver.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/curlver.h	2013-10-14 22:43:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/curlver.h	2013-12-17 15:51:32.000000000 +0800
@@ -27,18 +27,18 @@
 
 /* This is the global package copyright */
 #define LIBCURL_COPYRIGHT "1996 - 2013 Daniel Stenberg, <daniel@haxx.se>."
 
 /* This is the version number of the libcurl package from which this header
    file origins: */
-#define LIBCURL_VERSION "7.33.0"
+#define LIBCURL_VERSION "7.34.0"
 
 /* The numeric version number is also available "in parts" by using these
    defines: */
 #define LIBCURL_VERSION_MAJOR 7
-#define LIBCURL_VERSION_MINOR 33
+#define LIBCURL_VERSION_MINOR 34
 #define LIBCURL_VERSION_PATCH 0
 
 /* This is the numeric version of the libcurl version number, meant for easier
    parsing and comparions by programs. The LIBCURL_VERSION_NUM define will
    always follow this syntax:
 
@@ -50,20 +50,20 @@
    appears as "0x090b07".
 
    This 6-digit (24 bits) hexadecimal number does not show pre-release number,
    and it is always a greater number in a more recent release. It makes
    comparisons with greater than and less than work.
 */
-#define LIBCURL_VERSION_NUM 0x072100
+#define LIBCURL_VERSION_NUM 0x072200
 
 /*
  * This is the date and time when the full source package was created. The
  * timestamp is not stored in git, as the timestamp is properly set in the
  * tarballs by the maketgz script.
  *
  * The format of the date should follow this template:
  *
  * "Mon Feb 12 11:35:33 UTC 2007"
  */
-#define LIBCURL_TIMESTAMP "Mon Oct 14 14:42:58 UTC 2013"
+#define LIBCURL_TIMESTAMP "Tue Dec 17 07:51:08 UTC 2013"
 
 #endif /* __CURL_CURLVER_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -228,13 +228,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/typecheck-gcc.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/typecheck-gcc.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/curl/typecheck-gcc.h	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/curl/typecheck-gcc.h	2013-12-17 06:02:35.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -266,12 +266,13 @@
    (option) == CURLOPT_RTSP_TRANSPORT ||                                      \
    (option) == CURLOPT_XOAUTH2_BEARER ||                                      \
    (option) == CURLOPT_DNS_SERVERS ||                                         \
    (option) == CURLOPT_DNS_INTERFACE ||                                       \
    (option) == CURLOPT_DNS_LOCAL_IP4 ||                                       \
    (option) == CURLOPT_DNS_LOCAL_IP6 ||                                       \
+   (option) == CURLOPT_LOGIN_OPTIONS ||                                       \
    0)
 
 /* evaluates to true if option takes a curl_write_callback argument */
 #define _curl_is_write_cb_option(option)                                      \
   ((option) == CURLOPT_HEADERFUNCTION ||                                      \
    (option) == CURLOPT_WRITEFUNCTION)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/include/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/include/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -241,13 +241,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/asyn-ares.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/asyn-ares.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/asyn-ares.c	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/asyn-ares.c	2013-12-17 06:02:35.000000000 +0800
@@ -642,24 +642,24 @@
 }
 
 CURLcode Curl_set_dns_local_ip4(struct SessionHandle *data,
                                 const char *local_ip4)
 {
 #if (ARES_VERSION >= 0x010704)
-  uint32_t a4;
+  struct in_addr a4;
 
   if((!local_ip4) || (local_ip4[0] == 0)) {
-    a4 = 0; /* disabled: do not bind to a specific address */
+    a4.s_addr = 0; /* disabled: do not bind to a specific address */
   }
   else {
     if(Curl_inet_pton(AF_INET, local_ip4, &a4) != 1) {
       return CURLE_BAD_FUNCTION_ARGUMENT;
     }
   }
 
-  ares_set_local_ip4((ares_channel)data->state.resolver, ntohl(a4));
+  ares_set_local_ip4((ares_channel)data->state.resolver, ntohl(a4.s_addr));
 
   return CURLE_OK;
 #else /* c-ares version too old! */
   (void)data;
   (void)local_ip4;
   return CURLE_NOT_BUILT_IN;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/axtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/axtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/axtls.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/axtls.c	2013-12-17 06:02:35.000000000 +0800
@@ -161,13 +161,14 @@
   /* check to see if we've been told to use an explicit SSL/TLS version */
   switch(data->set.ssl.version) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     break;
   default:
-    failf(data, "axTLS only supports TLSv1");
+    failf(data, "axTLS only supports TLS 1.0 and 1.1, "
+          "and it cannot be specified which one to use");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #ifdef  AXTLSDEBUG
   client_option |= SSL_DISPLAY_STATES | SSL_DISPLAY_RSA | SSL_DISPLAY_CERTS;
 #endif /* AXTLSDEBUG */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/base64.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/base64.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/base64.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/base64.c	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -37,35 +37,51 @@
 #include "memdebug.h"
 
 /* ---- Base64 Encoding/Decoding Table --- */
 static const char table64[]=
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
 
-static void decodeQuantum(unsigned char *dest, const char *src)
+static size_t decodeQuantum(unsigned char *dest, const char *src)
 {
+  size_t padding = 0;
   const char *s, *p;
   unsigned long i, v, x = 0;
 
   for(i = 0, s = src; i < 4; i++, s++) {
     v = 0;
-    p = table64;
-    while(*p && (*p != *s)) {
-      v++;
-      p++;
-    }
-    if(*p == *s)
-      x = (x << 6) + v;
-    else if(*s == '=')
+
+    if(*s == '=') {
       x = (x << 6);
+      padding++;
+    }
+    else {
+      p = table64;
+
+      while(*p && (*p != *s)) {
+        v++;
+        p++;
+      }
+
+      if(*p == *s)
+        x = (x << 6) + v;
+      else
+        return 0;
+    }
   }
 
-  dest[2] = curlx_ultouc(x & 0xFFUL);
+  if(padding < 1)
+    dest[2] = curlx_ultouc(x & 0xFFUL);
+
   x >>= 8;
-  dest[1] = curlx_ultouc(x & 0xFFUL);
+  if(padding < 2)
+    dest[1] = curlx_ultouc(x & 0xFFUL);
+
   x >>= 8;
   dest[0] = curlx_ultouc(x & 0xFFUL);
+
+  return 3 - padding;
 }
 
 /*
  * Curl_base64_decode()
  *
  * Given a base64 NUL-terminated string at src, decode it and return a
@@ -79,64 +95,77 @@
  *
  * @unittest: 1302
  */
 CURLcode Curl_base64_decode(const char *src,
                             unsigned char **outptr, size_t *outlen)
 {
+  size_t srclen = 0;
   size_t length = 0;
-  size_t equalsTerm = 0;
+  size_t padding = 0;
   size_t i;
+  size_t result;
   size_t numQuantums;
-  unsigned char lastQuantum[3];
   size_t rawlen = 0;
+  unsigned char *pos;
   unsigned char *newstr;
 
   *outptr = NULL;
   *outlen = 0;
+  srclen = strlen(src);
+
+  /* Check the length of the input string is valid */
+  if(!srclen || srclen % 4)
+    return CURLE_BAD_CONTENT_ENCODING;
 
+  /* Find the position of any = padding characters */
   while((src[length] != '=') && src[length])
     length++;
+
   /* A maximum of two = padding characters is allowed */
   if(src[length] == '=') {
-    equalsTerm++;
-    if(src[length+equalsTerm] == '=')
-      equalsTerm++;
+    padding++;
+    if(src[length + 1] == '=')
+      padding++;
   }
-  numQuantums = (length + equalsTerm) / 4;
 
-  /* Don't allocate a buffer if the decoded length is 0 */
-  if(numQuantums == 0)
-    return CURLE_OK;
+  /* Check the = padding characters weren't part way through the input */
+  if(length + padding != srclen)
+    return CURLE_BAD_CONTENT_ENCODING;
+
+  /* Calculate the number of quantums */
+  numQuantums = srclen / 4;
 
-  rawlen = (numQuantums * 3) - equalsTerm;
+  /* Calculate the size of the decoded string */
+  rawlen = (numQuantums * 3) - padding;
 
-  /* The buffer must be large enough to make room for the last quantum
-  (which may be partially thrown out) and the zero terminator. */
-  newstr = malloc(rawlen+4);
+  /* Allocate our buffer including room for a zero terminator */
+  newstr = malloc(rawlen + 1);
   if(!newstr)
     return CURLE_OUT_OF_MEMORY;
 
-  *outptr = newstr;
+  pos = newstr;
 
-  /* Decode all but the last quantum (which may not decode to a
-  multiple of 3 bytes) */
-  for(i = 0; i < numQuantums - 1; i++) {
-    decodeQuantum(newstr, src);
-    newstr += 3; src += 4;
-  }
+  /* Decode the quantums */
+  for(i = 0; i < numQuantums; i++) {
+    result = decodeQuantum(pos, src);
+    if(!result) {
+      Curl_safefree(newstr);
 
-  /* This final decode may actually read slightly past the end of the buffer
-  if the input string is missing pad bytes.  This will almost always be
-  harmless. */
-  decodeQuantum(lastQuantum, src);
-  for(i = 0; i < 3 - equalsTerm; i++)
-    newstr[i] = lastQuantum[i];
+      return CURLE_BAD_CONTENT_ENCODING;
+    }
+
+    pos += result;
+    src += 4;
+  }
 
-  newstr[i] = '\0'; /* zero terminate */
+  /* Zero terminate */
+  *pos = '\0';
 
-  *outlen = rawlen; /* return size of decoded data */
+  /* Return the decoded data */
+  *outptr = newstr;
+  *outlen = rawlen;
 
   return CURLE_OK;
 }
 
 /*
  * Curl_base64_encode()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/config-os400.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/config-os400.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/config-os400.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/config-os400.h	2013-12-17 06:02:35.000000000 +0800
@@ -526,16 +526,16 @@
 #define SEND_TYPE_ARG4 int
 
 /* Define to the function return type for send. */
 #define SEND_TYPE_RETV int
 
 /* Define to use the QsoSSL package. */
-#define USE_QSOSSL
+#undef USE_QSOSSL
 
 /* Define to use the GSKit package. */
-#undef USE_GSKIT
+#define USE_GSKIT
 
 /* Use the system keyring as the default CA bundle. */
 #define CURL_CA_BUNDLE  "/QIBM/UserData/ICSS/Cert/Server/DEFAULT.KDB"
 
 /* ---------------------------------------------------------------- */
 /*                       ADDITIONAL DEFINITIONS                     */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/connect.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/connect.c	2013-12-17 06:02:35.000000000 +0800
@@ -161,14 +161,13 @@
   }
 }
 
 static CURLcode
 singleipconnect(struct connectdata *conn,
                 const Curl_addrinfo *ai, /* start connecting to this */
-                curl_socket_t *sock,
-                bool *connected);
+                curl_socket_t *sock);
 
 /*
  * Curl_timeleft() returns the amount of milliseconds left allowed for the
  * transfer/connection. If the value is negative, the timeout time has already
  * elapsed.
  *
@@ -230,51 +229,12 @@
     /* avoid returning 0 as that means no timeout! */
     return -1;
 
   return timeout_ms;
 }
 
-/*
- * checkconnect() checks for a TCP connect on the given socket.
- * It returns:
- */
-
-enum chkconn_t {
-  CHKCONN_SELECT_ERROR = -1,
-  CHKCONN_CONNECTED    = 0,
-  CHKCONN_IDLE         = 1,
-  CHKCONN_FDSET_ERROR  = 2
-};
-
-static enum chkconn_t
-checkconnect(curl_socket_t sockfd)
-{
-  int rc;
-#ifdef mpeix
-  /* Call this function once now, and ignore the results. We do this to
-     "clear" the error state on the socket so that we can later read it
-     reliably. This is reported necessary on the MPE/iX operating system. */
-  (void)verifyconnect(sockfd, NULL);
-#endif
-
-  rc = Curl_socket_ready(CURL_SOCKET_BAD, sockfd, 0);
-
-  if(-1 == rc)
-    /* error, no connect here, try next */
-    return CHKCONN_SELECT_ERROR;
-
-  else if(rc & CURL_CSELECT_ERR)
-    /* error condition caught */
-    return CHKCONN_FDSET_ERROR;
-
-  else if(rc)
-    return CHKCONN_CONNECTED;
-
-  return CHKCONN_IDLE;
-}
-
 static CURLcode bindlocal(struct connectdata *conn,
                           curl_socket_t sockfd, int af)
 {
   struct SessionHandle *data = conn->data;
 
   struct Curl_sockaddr_storage sa;
@@ -570,48 +530,59 @@
 }
 
 /* Used within the multi interface. Try next IP address, return TRUE if no
    more address exists or error */
 static CURLcode trynextip(struct connectdata *conn,
                           int sockindex,
-                          bool *connected)
+                          int tempindex)
 {
-  curl_socket_t sockfd;
-  Curl_addrinfo *ai;
+  CURLcode rc = CURLE_COULDNT_CONNECT;
 
   /* First clean up after the failed socket.
      Don't close it yet to ensure that the next IP's socket gets a different
      file descriptor, which can prevent bugs when the curl_multi_socket_action
      interface is used with certain select() replacements such as kqueue. */
-  curl_socket_t fd_to_close = conn->sock[sockindex];
-  conn->sock[sockindex] = CURL_SOCKET_BAD;
-  *connected = FALSE;
+  curl_socket_t fd_to_close = conn->tempsock[tempindex];
+  conn->tempsock[tempindex] = CURL_SOCKET_BAD;
 
-  if(sockindex != FIRSTSOCKET) {
-    Curl_closesocket(conn, fd_to_close);
-    return CURLE_COULDNT_CONNECT; /* no next */
+  if(sockindex == FIRSTSOCKET) {
+    Curl_addrinfo *ai;
+    int family;
+
+    if(conn->tempaddr[tempindex]) {
+      /* find next address in the same protocol family */
+      family = conn->tempaddr[tempindex]->ai_family;
+      ai = conn->tempaddr[tempindex]->ai_next;
+    }
+    else {
+      /* happy eyeballs - try the other protocol family */
+      int firstfamily = conn->tempaddr[0]->ai_family;
+      family = (firstfamily == AF_INET) ? AF_INET6 : AF_INET;
+      ai = conn->tempaddr[0]->ai_next;
+    }
+
+    while(ai) {
+      while(ai && ai->ai_family != family)
+        ai = ai->ai_next;
+
+      if(ai) {
+        rc = singleipconnect(conn, ai, &conn->tempsock[tempindex]);
+        conn->tempaddr[tempindex] = ai;
+        if(rc == CURLE_COULDNT_CONNECT) {
+          ai = ai->ai_next;
+          continue;
+        }
+      }
+      break;
+    }
   }
 
-  /* try the next address */
-  ai = conn->ip_addr->ai_next;
+  if(fd_to_close != CURL_SOCKET_BAD)
+    Curl_closesocket(conn, fd_to_close);
 
-  while(ai) {
-    CURLcode res = singleipconnect(conn, ai, &sockfd, connected);
-    if(res)
-      return res;
-    if(sockfd != CURL_SOCKET_BAD) {
-      /* store the new socket descriptor */
-      conn->sock[sockindex] = sockfd;
-      conn->ip_addr = ai;
-      Curl_closesocket(conn, fd_to_close);
-      return CURLE_OK;
-    }
-    ai = ai->ai_next;
-  }
-  Curl_closesocket(conn, fd_to_close);
-  return CURLE_COULDNT_CONNECT;
+  return rc;
 }
 
 /* Copies connection info into the session handle to make it available
    when the session handle is no longer associated with a connection. */
 void Curl_persistconninfo(struct connectdata *conn)
 {
@@ -704,12 +675,13 @@
                         conn->primary_ip, &conn->primary_port)) {
       error = ERRNO;
       failf(data, "ssrem inet_ntop() failed with errno %d: %s",
             error, Curl_strerror(conn, error));
       return;
     }
+    memcpy(conn->ip_addr_str, conn->primary_ip, MAX_IPADR_LEN);
 
     if(!getaddressinfo((struct sockaddr*)&ssloc,
                        conn->local_ip, &conn->local_port)) {
       error = ERRNO;
       failf(data, "ssloc inet_ntop() failed with errno %d: %s",
             error, Curl_strerror(conn, error));
@@ -729,17 +701,17 @@
 CURLcode Curl_is_connected(struct connectdata *conn,
                            int sockindex,
                            bool *connected)
 {
   struct SessionHandle *data = conn->data;
   CURLcode code = CURLE_OK;
-  curl_socket_t sockfd = conn->sock[sockindex];
-  long allow = DEFAULT_CONNECT_TIMEOUT;
+  long allow;
   int error = 0;
   struct timeval now;
-  enum chkconn_t chk;
+  int result;
+  int i;
 
   DEBUGASSERT(sockindex >= FIRSTSOCKET && sockindex <= SECONDARYSOCKET);
 
   *connected = FALSE; /* a very negative world view is best */
 
   if(conn->bits.tcpconnect[sockindex]) {
@@ -756,75 +728,110 @@
   if(allow < 0) {
     /* time-out, bail out, go home */
     failf(data, "Connection time-out");
     return CURLE_OPERATION_TIMEDOUT;
   }
 
-  /* check socket for connect */
-  chk = checkconnect(sockfd);
-  if(CHKCONN_IDLE == chk) {
-    if(curlx_tvdiff(now, conn->connecttime) >= conn->timeoutms_per_addr) {
-      infof(data, "After %ldms connect time, move on!\n",
-            conn->timeoutms_per_addr);
-      goto next;
-    }
-
-    /* not an error, but also no connection yet */
-    return code;
-  }
-
-  if(CHKCONN_CONNECTED == chk) {
-    if(verifyconnect(sockfd, &error)) {
-      /* we are connected with TCP, awesome! */
-
-      /* see if we need to do any proxy magic first once we connected */
-      code = Curl_connected_proxy(conn);
-      if(code)
-        return code;
-
-      conn->bits.tcpconnect[sockindex] = TRUE;
-
-      *connected = TRUE;
-      if(sockindex == FIRSTSOCKET)
-        Curl_pgrsTime(data, TIMER_CONNECT); /* connect done */
-      Curl_verboseconnect(conn);
-      Curl_updateconninfo(conn, sockfd);
+  for(i=0; i<2; i++) {
+    if(conn->tempsock[i] == CURL_SOCKET_BAD)
+      continue;
 
-      return CURLE_OK;
+#ifdef mpeix
+    /* Call this function once now, and ignore the results. We do this to
+       "clear" the error state on the socket so that we can later read it
+       reliably. This is reported necessary on the MPE/iX operating system. */
+    (void)verifyconnect(conn->tempsock[i], NULL);
+#endif
+
+    /* check socket for connect */
+    result = Curl_socket_ready(CURL_SOCKET_BAD, conn->tempsock[i], 0);
+
+    if(result == 0) { /* no connection yet */
+      if(curlx_tvdiff(now, conn->connecttime) >= conn->timeoutms_per_addr) {
+        infof(data, "After %ldms connect time, move on!\n",
+              conn->timeoutms_per_addr);
+        error = ETIMEDOUT;
+      }
+
+      /* should we try another protocol family? */
+      if(i == 0 && conn->tempaddr[1] == NULL &&
+         curlx_tvdiff(now, conn->connecttime) >= HAPPY_EYEBALLS_TIMEOUT) {
+        trynextip(conn, sockindex, 1);
+      }
     }
-    /* nope, not connected for real */
-  }
-  else {
-    /* nope, not connected  */
-    if(CHKCONN_FDSET_ERROR == chk) {
-      (void)verifyconnect(sockfd, &error);
-      infof(data, "%s\n",Curl_strerror(conn, error));
+    else if(result == CURL_CSELECT_OUT) {
+      if(verifyconnect(conn->tempsock[i], &error)) {
+        /* we are connected with TCP, awesome! */
+        int other = i ^ 1;
+
+        /* use this socket from now on */
+        conn->sock[sockindex] = conn->tempsock[i];
+        conn->ip_addr = conn->tempaddr[i];
+        conn->tempsock[i] = CURL_SOCKET_BAD;
+
+        /* close the other socket, if open */
+        if(conn->tempsock[other] != CURL_SOCKET_BAD) {
+          Curl_closesocket(conn, conn->tempsock[other]);
+          conn->tempsock[other] = CURL_SOCKET_BAD;
+        }
+
+        /* see if we need to do any proxy magic first once we connected */
+        code = Curl_connected_proxy(conn, sockindex);
+        if(code)
+          return code;
+
+        conn->bits.tcpconnect[sockindex] = TRUE;
+
+        *connected = TRUE;
+        if(sockindex == FIRSTSOCKET)
+          Curl_pgrsTime(data, TIMER_CONNECT); /* connect done */
+        Curl_updateconninfo(conn, conn->sock[sockindex]);
+        Curl_verboseconnect(conn);
+
+        return CURLE_OK;
+      }
+      else
+        infof(data, "Connection failed\n");
     }
-    else
-      infof(data, "Connection failed\n");
-  }
+    else if(result & CURL_CSELECT_ERR)
+      (void)verifyconnect(conn->tempsock[i], &error);
 
-  /*
-   * The connection failed here, we should attempt to connect to the "next
-   * address" for the given host. But first remember the latest error.
-   */
-  if(error) {
-    data->state.os_errno = error;
-    SET_SOCKERRNO(error);
-  }
-  next:
-
-  conn->timeoutms_per_addr = conn->ip_addr->ai_next == NULL ?
-                             allow : allow / 2;
-  code = trynextip(conn, sockindex, connected);
+    /*
+     * The connection failed here, we should attempt to connect to the "next
+     * address" for the given host. But first remember the latest error.
+     */
+    if(error) {
+      char ipaddress[MAX_IPADR_LEN];
+      data->state.os_errno = error;
+      SET_SOCKERRNO(error);
+      Curl_printable_address(conn->tempaddr[i], ipaddress, MAX_IPADR_LEN);
+      infof(data, "connect to %s port %ld failed: %s\n",
+            ipaddress, conn->port, Curl_strerror(conn, error));
+
+      conn->timeoutms_per_addr = conn->tempaddr[i]->ai_next == NULL ?
+                                 allow : allow / 2;
+
+      code = trynextip(conn, sockindex, i);
+    }
+  }
 
   if(code) {
-    error = SOCKERRNO;
-    data->state.os_errno = error;
-    failf(data, "Failed connect to %s:%ld; %s",
-          conn->host.name, conn->port, Curl_strerror(conn, error));
+    /* no more addresses to try */
+
+    /* if the first address family runs out of addresses to try before
+       the happy eyeball timeout, go ahead and try the next family now */
+    if(conn->tempaddr[1] == NULL) {
+      int rc;
+      rc = trynextip(conn, sockindex, 1);
+      if(rc == CURLE_OK)
+        return CURLE_OK;
+    }
+
+    failf(data, "Failed to connect to %s port %ld: %s",
+          conn->bits.proxy?conn->proxy.name:conn->host.name,
+          conn->port, Curl_strerror(conn, error));
   }
 
   return code;
 }
 
 static void tcpnodelay(struct connectdata *conn,
@@ -935,47 +942,44 @@
  * singleipconnect() connects to the given IP only, and it may return without
  * having connected.
  */
 static CURLcode
 singleipconnect(struct connectdata *conn,
                 const Curl_addrinfo *ai,
-                curl_socket_t *sockp,
-                bool *connected)
+                curl_socket_t *sockp)
 {
   struct Curl_sockaddr_ex addr;
   int rc;
   int error = 0;
   bool isconnected = FALSE;
   struct SessionHandle *data = conn->data;
   curl_socket_t sockfd;
   CURLcode res = CURLE_OK;
+  char ipaddress[MAX_IPADR_LEN];
+  long port;
 
   *sockp = CURL_SOCKET_BAD;
-  *connected = FALSE; /* default is not connected */
 
   res = Curl_socket(conn, ai, &addr, &sockfd);
   if(res)
     /* Failed to create the socket, but still return OK since we signal the
        lack of socket as well. This allows the parent function to keep looping
        over alternative addresses/socket families etc. */
     return CURLE_OK;
 
   /* store remote address and port used in this connection attempt */
   if(!getaddressinfo((struct sockaddr*)&addr.sa_addr,
-                     conn->primary_ip, &conn->primary_port)) {
+                     ipaddress, &port)) {
     /* malformed address or bug in inet_ntop, try next address */
     error = ERRNO;
     failf(data, "sa_addr inet_ntop() failed with errno %d: %s",
           error, Curl_strerror(conn, error));
     Curl_closesocket(conn, sockfd);
     return CURLE_OK;
   }
-  memcpy(conn->ip_addr_str, conn->primary_ip, MAX_IPADR_LEN);
-  infof(data, "  Trying %s...\n", conn->ip_addr_str);
-
-  Curl_persistconninfo(conn);
+  infof(data, "  Trying %s...\n", ipaddress);
 
   if(data->set.tcp_nodelay)
     tcpnodelay(conn, sockfd);
 
   nosigpipe(conn, sockfd);
 
@@ -1030,134 +1034,88 @@
 
 #ifdef ENABLE_IPV6
   conn->bits.ipv6 = (addr.family == AF_INET6)?TRUE:FALSE;
 #endif
 
   if(-1 == rc) {
-    switch (error) {
+    switch(error) {
     case EINPROGRESS:
     case EWOULDBLOCK:
 #if defined(EAGAIN)
 #if (EAGAIN) != (EWOULDBLOCK)
       /* On some platforms EAGAIN and EWOULDBLOCK are the
        * same value, and on others they are different, hence
        * the odd #if
        */
     case EAGAIN:
 #endif
 #endif
-      *sockp = sockfd;
-      return CURLE_OK;
+      res = CURLE_OK;
+      break;
 
     default:
       /* unknown error, fallthrough and try another address! */
-      failf(data, "Failed to connect to %s: %s",
-            conn->ip_addr_str, Curl_strerror(conn,error));
+      infof(data, "Immediate connect fail for %s: %s\n",
+            ipaddress, Curl_strerror(conn,error));
       data->state.os_errno = error;
 
       /* connect failed */
       Curl_closesocket(conn, sockfd);
-
-      break;
+      res = CURLE_COULDNT_CONNECT;
     }
   }
-  else
+
+  if(!res)
     *sockp = sockfd;
 
-  return CURLE_OK;
+  return res;
 }
 
 /*
  * TCP connect to the given host with timeout, proxy or remote doesn't matter.
  * There might be more than one IP address to try out. Fill in the passed
  * pointer with the connected socket.
  */
 
 CURLcode Curl_connecthost(struct connectdata *conn,  /* context */
-                          const struct Curl_dns_entry *remotehost,
-                          curl_socket_t *sockconn,   /* the connected socket */
-                          Curl_addrinfo **addr,      /* the one we used */
-                          bool *connected)           /* really connected? */
+                          const struct Curl_dns_entry *remotehost)
 {
   struct SessionHandle *data = conn->data;
-  curl_socket_t sockfd = CURL_SOCKET_BAD;
-  Curl_addrinfo *ai;
-  Curl_addrinfo *curr_addr;
-
-  struct timeval after;
   struct timeval before = Curl_tvnow();
+  CURLcode res;
 
-  /*************************************************************
-   * Figure out what maximum time we have left
-   *************************************************************/
-  long timeout_ms;
-
-  DEBUGASSERT(sockconn);
-  *connected = FALSE; /* default to not connected */
-
-  /* get the timeout left */
-  timeout_ms = Curl_timeleft(data, &before, TRUE);
+  long timeout_ms = Curl_timeleft(data, &before, TRUE);
 
   if(timeout_ms < 0) {
     /* a precaution, no need to continue if time already is up */
     failf(data, "Connection time-out");
     return CURLE_OPERATION_TIMEDOUT;
   }
 
   conn->num_addr = Curl_num_addresses(remotehost->addr);
+  conn->tempaddr[0] = remotehost->addr;
+  conn->tempaddr[1] = NULL;
+  conn->tempsock[0] = CURL_SOCKET_BAD;
+  conn->tempsock[1] = CURL_SOCKET_BAD;
+  Curl_expire(conn->data,
+              HAPPY_EYEBALLS_TIMEOUT + (MULTI_TIMEOUT_INACCURACY/1000));
+
+  /* Max time for the next connection attempt */
+  conn->timeoutms_per_addr =
+    conn->tempaddr[0]->ai_next == NULL ? timeout_ms : timeout_ms / 2;
+
+  /* start connecting to first IP */
+  res = singleipconnect(conn, conn->tempaddr[0], &(conn->tempsock[0]));
+  while(res != CURLE_OK &&
+        conn->tempaddr[0] &&
+        conn->tempaddr[0]->ai_next &&
+        conn->tempsock[0] == CURL_SOCKET_BAD)
+    res = trynextip(conn, FIRSTSOCKET, 0);
 
-  ai = remotehost->addr;
-
-  /* Below is the loop that attempts to connect to all IP-addresses we
-   * know for the given host. One by one until one IP succeeds.
-   */
-
-  /*
-   * Connecting with a Curl_addrinfo chain
-   */
-  for(curr_addr = ai; curr_addr; curr_addr = curr_addr->ai_next) {
-    CURLcode res;
-
-    /* Max time for the next address */
-    conn->timeoutms_per_addr = curr_addr->ai_next == NULL ?
-                               timeout_ms : timeout_ms / 2;
-
-    /* start connecting to the IP curr_addr points to */
-    res = singleipconnect(conn, curr_addr,
-                          &sockfd, connected);
-    if(res)
-      return res;
-
-    if(sockfd != CURL_SOCKET_BAD)
-      break;
-
-    /* get a new timeout for next attempt */
-    after = Curl_tvnow();
-    timeout_ms -= Curl_tvdiff(after, before);
-    if(timeout_ms < 0) {
-      failf(data, "connect() timed out!");
-      return CURLE_OPERATION_TIMEDOUT;
-    }
-    before = after;
-  }  /* end of connect-to-each-address loop */
-
-  *sockconn = sockfd;    /* the socket descriptor we've connected */
-
-  if(sockfd == CURL_SOCKET_BAD) {
-    /* no good connect was made */
-    failf(data, "couldn't connect to %s at %s:%ld",
-          conn->bits.proxy?"proxy":"host",
-          conn->bits.proxy?conn->proxy.name:conn->host.name, conn->port);
-    return CURLE_COULDNT_CONNECT;
-  }
-
-  /* leave the socket in non-blocking mode */
-
-  /* store the address we use */
-  if(addr)
-    *addr = curr_addr;
+  if(conn->tempsock[0] == CURL_SOCKET_BAD)
+    return res;
 
   data->info.numconnects++; /* to track the number of connections made */
 
   return CURLE_OK;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/connect.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/connect.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/connect.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/connect.h	2013-12-17 06:02:35.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -28,25 +28,23 @@
 
 CURLcode Curl_is_connected(struct connectdata *conn,
                            int sockindex,
                            bool *connected);
 
 CURLcode Curl_connecthost(struct connectdata *conn,
-                          const struct Curl_dns_entry *host, /* connect to
-                                                                this */
-                          curl_socket_t *sockconn, /* not set if error */
-                          Curl_addrinfo **addr, /* the one we used */
-                          bool *connected); /* truly connected? */
+                          const struct Curl_dns_entry *host);
 
 /* generic function that returns how much time there's left to run, according
    to the timeouts set */
 long Curl_timeleft(struct SessionHandle *data,
                    struct timeval *nowp,
                    bool duringconnect);
 
 #define DEFAULT_CONNECT_TIMEOUT 300000 /* milliseconds == five minutes */
+#define HAPPY_EYEBALLS_TIMEOUT     200 /* milliseconds to wait between
+                                          ipv4/ipv6 connection attempts */
 
 /*
  * Used to extract socket and connectdata struct for the most recent
  * transfer on the given SessionHandle.
  *
  * The returned socket will be CURL_SOCKET_BAD in case of failure!
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_config.h.in	2013-10-13 04:25:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_config.h.in	2013-12-17 06:11:43.000000000 +0800
@@ -448,15 +448,12 @@
 /* Define to 1 if you have the <nghttp2/nghttp2.h> header file. */
 #undef HAVE_NGHTTP2_NGHTTP2_H
 
 /* Define to 1 if NI_WITHSCOPEID exists and works. */
 #undef HAVE_NI_WITHSCOPEID
 
-/* if you have the NSS_InitContext function */
-#undef HAVE_NSS_INITCONTEXT
-
 /* if you have an old MIT gssapi library, lacking GSS_C_NT_HOSTBASED_SERVICE
    */
 #undef HAVE_OLD_GSSMIT
 
 /* Define to 1 if you have the <openssl/crypto.h> header file. */
 #undef HAVE_OPENSSL_CRYPTO_H
@@ -876,12 +873,15 @@
 /* The size of `int', as computed by sizeof. */
 #undef SIZEOF_INT
 
 /* The size of `long', as computed by sizeof. */
 #undef SIZEOF_LONG
 
+/* The size of `long long', as computed by sizeof. */
+#undef SIZEOF_LONG_LONG
+
 /* The size of `off_t', as computed by sizeof. */
 #undef SIZEOF_OFF_T
 
 /* The size of `short', as computed by sizeof. */
 #undef SIZEOF_SHORT
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_darwinssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_darwinssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_darwinssl.c	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_darwinssl.c	2013-12-17 06:02:35.000000000 +0800
@@ -831,13 +831,13 @@
   /* Leopard is as far back as we go... */
   (void)SecCertificateCopyCommonName(cert, &server_cert_summary);
 #endif /* CURL_BUILD_IOS */
   return server_cert_summary;
 }
 
-#if CURL_SUPPORT_MAC_10_7
+#if CURL_SUPPORT_MAC_10_6
 /* The SecKeychainSearch API was deprecated in Lion, and using it will raise
    deprecation warnings, so let's not compile this unless it's necessary: */
 static OSStatus CopyIdentityWithLabelOldSchool(char *label,
                                                SecIdentityRef *out_c_a_k)
 {
   OSStatus status = errSecItemNotFound;
@@ -871,13 +871,13 @@
   }
 
   if(search)
     CFRelease(search);
   return status;
 }
-#endif /* CURL_SUPPORT_MAC_10_7 */
+#endif /* CURL_SUPPORT_MAC_10_6 */
 
 static OSStatus CopyIdentityWithLabel(char *label,
                                       SecIdentityRef *out_cert_and_key)
 {
   OSStatus status = errSecItemNotFound;
 
@@ -911,18 +911,18 @@
 
     /* Do we have a match? */
     status = SecItemCopyMatching(query_dict, (CFTypeRef *)out_cert_and_key);
     CFRelease(query_dict);
   }
   else {
-#if CURL_SUPPORT_MAC_10_7
+#if CURL_SUPPORT_MAC_10_6
     /* On Leopard and Snow Leopard, fall back to SecKeychainSearch. */
     status = CopyIdentityWithLabelOldSchool(label, out_cert_and_key);
 #endif /* CURL_SUPPORT_MAC_10_7 */
   }
-#elif CURL_SUPPORT_MAC_10_7
+#elif CURL_SUPPORT_MAC_10_6
   /* For developers building on older cats, we have no choice but to fall back
      to SecKeychainSearch. */
   status = CopyIdentityWithLabelOldSchool(label, out_cert_and_key);
 #endif /* CURL_BUILD_MAC_10_7 || CURL_BUILD_IOS */
   return status;
 }
@@ -935,14 +935,16 @@
   CFURLRef pkcs_url = CFURLCreateFromFileSystemRepresentation(NULL,
     (const UInt8 *)cPath, strlen(cPath), false);
   CFStringRef password = cPassword ? CFStringCreateWithCString(NULL,
     cPassword, kCFStringEncodingUTF8) : NULL;
   CFDataRef pkcs_data = NULL;
 
-  /* We can import P12 files on iOS or OS X 10.6 or later: */
-#if CURL_BUILD_MAC_10_6 || CURL_BUILD_IOS
+  /* We can import P12 files on iOS or OS X 10.7 or later: */
+  /* These constants are documented as having first appeared in 10.6 but they
+     raise linker errors when used on that cat for some reason. */
+#if CURL_BUILD_MAC_10_7 || CURL_BUILD_IOS
   if(CFURLCreateDataAndPropertiesFromResource(NULL, pkcs_url, &pkcs_data,
     NULL, NULL, &status)) {
     const void *cKeys[] = {kSecImportExportPassphrase};
     const void *cValues[] = {password};
     CFDictionaryRef options = CFDictionaryCreate(NULL, cKeys, cValues,
       password ? 1L : 0L, NULL, NULL);
@@ -960,13 +962,13 @@
       *out_cert_and_key = (SecIdentityRef)temp_identity;
       CFRelease(items);
     }
     CFRelease(options);
     CFRelease(pkcs_data);
   }
-#endif /* CURL_BUILD_MAC_10_6 || CURL_BUILD_IOS */
+#endif /* CURL_BUILD_MAC_10_7 || CURL_BUILD_IOS */
   if(password)
     CFRelease(password);
   CFRelease(pkcs_url);
   return status;
 }
 
@@ -1053,12 +1055,24 @@
         (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
         break;
       case CURL_SSLVERSION_TLSv1:
         (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol1);
         (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
         break;
+      case CURL_SSLVERSION_TLSv1_0:
+        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol1);
+        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol1);
+        break;
+      case CURL_SSLVERSION_TLSv1_1:
+        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol11);
+        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol11);
+        break;
+      case CURL_SSLVERSION_TLSv1_2:
+        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol12);
+        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
+        break;
       case CURL_SSLVERSION_SSLv3:
         (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kSSLProtocol3);
         (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kSSLProtocol3);
         break;
       case CURL_SSLVERSION_SSLv2:
         err = SSLSetProtocolVersionMin(connssl->ssl_ctx, kSSLProtocol2);
@@ -1097,12 +1111,27 @@
                                            kTLSProtocol11,
                                            true);
         (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                            kTLSProtocol12,
                                            true);
         break;
+      case CURL_SSLVERSION_TLSv1_0:
+        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                           kTLSProtocol1,
+                                           true);
+        break;
+      case CURL_SSLVERSION_TLSv1_1:
+        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                           kTLSProtocol11,
+                                           true);
+        break;
+      case CURL_SSLVERSION_TLSv1_2:
+        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                           kTLSProtocol12,
+                                           true);
+        break;
       case CURL_SSLVERSION_SSLv3:
         (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                            kSSLProtocol3,
                                            true);
         break;
       case CURL_SSLVERSION_SSLv2:
@@ -1127,16 +1156,23 @@
                                          true);
       (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                          kTLSProtocol1,
                                          true);
       break;
     case CURL_SSLVERSION_TLSv1:
+    case CURL_SSLVERSION_TLSv1_0:
       (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                          kTLSProtocol1,
                                          true);
       break;
+    case CURL_SSLVERSION_TLSv1_1:
+      failf(data, "Your version of the OS does not support TLSv1.1");
+      return CURLE_SSL_CONNECT_ERROR;
+    case CURL_SSLVERSION_TLSv1_2:
+      failf(data, "Your version of the OS does not support TLSv1.2");
+      return CURLE_SSL_CONNECT_ERROR;
     case CURL_SSLVERSION_SSLv2:
       err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                          kSSLProtocol2,
                                          true);
       if(err != noErr) {
         failf(data, "Your version of the OS does not support SSLv2");
@@ -1213,22 +1249,22 @@
         return CURLE_SSL_CERTPROBLEM;
       }
       CFRelease(cert_and_key);
     }
     else {
       switch(err) {
-        case errSecPkcs12VerifyFailure: case errSecAuthFailed:
+        case errSecAuthFailed: case -25264: /* errSecPkcs12VerifyFailure */
           failf(data, "SSL: Incorrect password for the certificate \"%s\" "
                       "and its private key.", data->set.str[STRING_CERT]);
           break;
-        case errSecDecode: case errSecUnknownFormat:
+        case errSecDecode: case -25257: /* errSecUnknownFormat */
           failf(data, "SSL: Couldn't make sense of the data in the "
                       "certificate \"%s\" and its private key.",
                       data->set.str[STRING_CERT]);
           break;
-        case errSecPassphraseRequired:
+        case -25260: /* errSecPassphraseRequired */
           failf(data, "SSL The certificate \"%s\" requires a password.",
                       data->set.str[STRING_CERT]);
           break;
         case errSecItemNotFound:
           failf(data, "SSL: Can't find the certificate \"%s\" and its private "
                       "key in the Keychain.", data->set.str[STRING_CERT]);
@@ -1400,13 +1436,14 @@
   Curl_safefree(all_ciphers);
   Curl_safefree(allowed_ciphers);
 
 #if CURL_BUILD_MAC_10_9 || CURL_BUILD_IOS_7
   /* We want to enable 1/n-1 when using a CBC cipher unless the user
      specifically doesn't want us doing that: */
-  SSLSetSessionOption(connssl->ssl_ctx, kSSLSessionOptionSendOneByteRecord,
+  if(SSLSetSessionOption != NULL)
+    SSLSetSessionOption(connssl->ssl_ctx, kSSLSessionOptionSendOneByteRecord,
                       !data->set.ssl_enable_beast);
 #endif /* CURL_BUILD_MAC_10_9 || CURL_BUILD_IOS_7 */
 
   /* Check if there's a cached ID we can/should use here! */
   if(!Curl_ssl_getsessionid(conn, (void **)&ssl_sessionid,
     &ssl_sessionid_len)) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_ntlm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_ntlm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_ntlm.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_ntlm.c	2013-12-17 06:02:35.000000000 +0800
@@ -74,16 +74,12 @@
   if(result)
     return result;
 #endif
 
   ntlm = proxy ? &conn->proxyntlm : &conn->ntlm;
 
-  /* skip initial whitespaces */
-  while(*header && ISSPACE(*header))
-    header++;
-
   if(checkprefix("NTLM", header)) {
     header += strlen("NTLM");
 
     while(*header && ISSPACE(*header))
       header++;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_ntlm_wb.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_ntlm_wb.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_ntlm_wb.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_ntlm_wb.c	2013-12-17 06:02:35.000000000 +0800
@@ -353,13 +353,13 @@
                             conn->response_header);
     DEBUG_OUT(fprintf(stderr, "**** Header %s\n ", *allocuserpwd));
     Curl_safefree(conn->response_header);
     conn->response_header = NULL;
     break;
   case NTLMSTATE_TYPE2:
-    input = aprintf("TT %s", conn->challenge_header);
+    input = aprintf("TT %s\n", conn->challenge_header);
     if(!input)
       return CURLE_OUT_OF_MEMORY;
     res = ntlm_wb_response(conn, input, ntlm->state);
     free(input);
     input = NULL;
     if(res)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_sasl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_sasl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_sasl.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_sasl.c	2013-12-17 06:02:35.000000000 +0800
@@ -20,12 +20,13 @@
  *
  * RFC2195 CRAM-MD5 authentication
  * RFC2831 DIGEST-MD5 authentication
  * RFC4422 Simple Authentication and Security Layer (SASL)
  * RFC4616 PLAIN authentication
  * RFC6749 OAuth 2.0 Authorization Framework
+ * Draft   LOGIN SASL Mechanism <draft-murchison-sasl-login-00.txt>
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #include <curl/curl.h>
@@ -37,32 +38,36 @@
 #include "curl_hmac.h"
 #include "curl_ntlm_msgs.h"
 #include "curl_sasl.h"
 #include "warnless.h"
 #include "curl_memory.h"
 
+#ifdef USE_NSS
+#include "nssg.h" /* for Curl_nss_force_init() */
+#endif
+
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 /* The last #include file should be: */
 #include "memdebug.h"
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 /* Retrieves the value for a corresponding key from the challenge string
  * returns TRUE if the key could be found, FALSE if it does not exists
  */
-static bool sasl_digest_get_key_value(const unsigned char *chlg,
+static bool sasl_digest_get_key_value(const char *chlg,
                                       const char *key,
                                       char *value,
                                       size_t max_val_len,
                                       char end_char)
 {
   char *find_pos;
   size_t i;
 
-  find_pos = strstr((const char *) chlg, key);
+  find_pos = strstr(chlg, key);
   if(!find_pos)
     return FALSE;
 
   find_pos += strlen(key);
 
   for(i = 0; *find_pos && *find_pos != end_char && i < max_val_len - 1; ++i)
@@ -160,172 +165,218 @@
 
   /* Base64 encode the value */
   return Curl_base64_encode(data, valuep, vlen, outptr, outlen);
 }
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
-/*
+ /*
+ * Curl_sasl_decode_cram_md5_message()
+ *
+ * This is used to decode an already encoded CRAM-MD5 challenge message.
+ *
+ * Parameters:
+ *
+ * chlg64  [in]     - Pointer to the base64 encoded challenge message.
+ * outptr  [in/out] - The address where a pointer to newly allocated memory
+ *                    holding the result will be stored upon completion.
+ * outlen  [out]    - The length of the output message.
+ *
+ * Returns CURLE_OK on success.
+ */
+CURLcode Curl_sasl_decode_cram_md5_message(const char *chlg64, char **outptr,
+                                           size_t *outlen)
+{
+  CURLcode result = CURLE_OK;
+  size_t chlg64len = strlen(chlg64);
+
+  *outptr = NULL;
+  *outlen = 0;
+
+  /* Decode the challenge if necessary */
+  if(chlg64len && *chlg64 != '=')
+    result = Curl_base64_decode(chlg64, (unsigned char **) outptr, outlen);
+
+    return result;
+ }
+
+ /*
  * Curl_sasl_create_cram_md5_message()
  *
  * This is used to generate an already encoded CRAM-MD5 response message ready
  * for sending to the recipient.
  *
  * Parameters:
  *
  * data    [in]     - The session handle.
- * chlg64  [in]     - Pointer to the base64 encoded challenge buffer.
+ * chlg    [in]     - The challenge.
  * userp   [in]     - The user name.
  * passdwp [in]     - The user's password.
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_cram_md5_message(struct SessionHandle *data,
-                                           const char *chlg64,
+                                           const char *chlg,
                                            const char *userp,
                                            const char *passwdp,
                                            char **outptr, size_t *outlen)
 {
   CURLcode result = CURLE_OK;
-  size_t chlg64len = strlen(chlg64);
-  unsigned char *chlg = (unsigned char *) NULL;
   size_t chlglen = 0;
   HMAC_context *ctxt;
   unsigned char digest[MD5_DIGEST_LEN];
   char *response;
 
-  /* Decode the challenge if necessary */
-  if(chlg64len && *chlg64 != '=') {
-    result = Curl_base64_decode(chlg64, &chlg, &chlglen);
-
-    if(result)
-      return result;
-  }
+  if(chlg)
+    chlglen = strlen(chlg);
 
   /* Compute the digest using the password as the key */
   ctxt = Curl_HMAC_init(Curl_HMAC_MD5,
                         (const unsigned char *) passwdp,
                         curlx_uztoui(strlen(passwdp)));
-
-  if(!ctxt) {
-    Curl_safefree(chlg);
+  if(!ctxt)
     return CURLE_OUT_OF_MEMORY;
-  }
 
   /* Update the digest with the given challenge */
   if(chlglen > 0)
-    Curl_HMAC_update(ctxt, chlg, curlx_uztoui(chlglen));
-
-  Curl_safefree(chlg);
+    Curl_HMAC_update(ctxt, (const unsigned char *) chlg,
+                     curlx_uztoui(chlglen));
 
   /* Finalise the digest */
   Curl_HMAC_final(ctxt, digest);
 
-  /* Prepare the response */
+  /* Generate the response */
   response = aprintf(
       "%s %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x",
            userp, digest[0], digest[1], digest[2], digest[3], digest[4],
            digest[5], digest[6], digest[7], digest[8], digest[9], digest[10],
            digest[11], digest[12], digest[13], digest[14], digest[15]);
   if(!response)
     return CURLE_OUT_OF_MEMORY;
 
-  /* Base64 encode the reply */
+  /* Base64 encode the response */
   result = Curl_base64_encode(data, response, 0, outptr, outlen);
 
   Curl_safefree(response);
+
   return result;
 }
 
 /*
+ * Curl_sasl_decode_digest_md5_message()
+ *
+ * This is used to decode an already encoded DIGEST-MD5 challenge message.
+ *
+ * Parameters:
+ *
+ * chlg64  [in]     - Pointer to the base64 encoded challenge message.
+ * nonce   [in/out] - The buffer where the nonce will be stored.
+ * nlen    [in]     - The length of the nonce buffer.
+ * realm   [in/out] - The buffer where the realm will be stored.
+ * rlen    [in]     - The length of the realm buffer.
+ * alg     [in/out] - The buffer where the algorithm will be stored.
+ * alen    [in]     - The length of the algorithm buffer.
+ *
+ * Returns CURLE_OK on success.
+ */
+CURLcode Curl_sasl_decode_digest_md5_message(const char *chlg64,
+                                             char *nonce, size_t nlen,
+                                             char *realm, size_t rlen,
+                                             char *alg, size_t alen)
+{
+  CURLcode result = CURLE_OK;
+  unsigned char *chlg = NULL;
+  size_t chlglen = 0;
+  size_t chlg64len = strlen(chlg64);
+
+  if(chlg64len && *chlg64 != '=') {
+    result = Curl_base64_decode(chlg64, &chlg, &chlglen);
+    if(result)
+      return result;
+  }
+
+  /* Ensure we have a valid challenge message */
+  if(!chlg)
+    return CURLE_BAD_CONTENT_ENCODING;
+
+  /* Retrieve nonce string from the challenge */
+  if(!sasl_digest_get_key_value((char *)chlg, "nonce=\"", nonce, nlen, '\"')) {
+    Curl_safefree(chlg);
+    return CURLE_BAD_CONTENT_ENCODING;
+  }
+
+  /* Retrieve realm string from the challenge */
+  if(!sasl_digest_get_key_value((char *)chlg, "realm=\"", realm, rlen, '\"')) {
+    /* Challenge does not have a realm, set empty string [RFC2831] page 6 */
+    strcpy(realm, "");
+  }
+
+  /* Retrieve algorithm string from the challenge */
+  if(!sasl_digest_get_key_value((char *)chlg, "algorithm=", alg, alen, ',')) {
+    Curl_safefree(chlg);
+    return CURLE_BAD_CONTENT_ENCODING;
+  }
+
+  Curl_safefree(chlg);
+
+  return CURLE_OK;
+}
+
+/*
  * Curl_sasl_create_digest_md5_message()
  *
  * This is used to generate an already encoded DIGEST-MD5 response message
  * ready for sending to the recipient.
  *
  * Parameters:
  *
  * data    [in]     - The session handle.
- * chlg64  [in]     - Pointer to the base64 encoded challenge buffer.
+ * nonce   [in]     - The nonce.
+ * realm   [in]     - The realm.
  * userp   [in]     - The user name.
  * passdwp [in]     - The user's password.
- * service [in]     - The service type such as www, smtp or pop
+ * service [in]     - The service type such as www, smtp, pop or imap.
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_digest_md5_message(struct SessionHandle *data,
-                                             const char *chlg64,
+                                             const char *nonce,
+                                             const char *realm,
                                              const char *userp,
                                              const char *passwdp,
                                              const char *service,
                                              char **outptr, size_t *outlen)
 {
+#ifndef DEBUGBUILD
   static const char table16[] = "0123456789abcdef";
-
+#endif
   CURLcode result = CURLE_OK;
-  unsigned char *chlg = (unsigned char *) NULL;
-  size_t chlglen = 0;
   size_t i;
   MD5_context *ctxt;
+  char *response = NULL;
   unsigned char digest[MD5_DIGEST_LEN];
   char HA1_hex[2 * MD5_DIGEST_LEN + 1];
   char HA2_hex[2 * MD5_DIGEST_LEN + 1];
   char resp_hash_hex[2 * MD5_DIGEST_LEN + 1];
 
-  char nonce[64];
-  char realm[128];
-  char alg[64];
   char nonceCount[] = "00000001";
   char cnonce[]     = "12345678"; /* will be changed */
   char method[]     = "AUTHENTICATE";
   char qop[]        = "auth";
   char uri[128];
-  char response[512];
-
-  result = Curl_base64_decode(chlg64, &chlg, &chlglen);
-
-  if(result)
-    return result;
-
-  if(!chlg)
-    return CURLE_LOGIN_DENIED;
-
-  /* Retrieve nonce string from the challenge */
-  if(!sasl_digest_get_key_value(chlg, "nonce=\"", nonce,
-                                sizeof(nonce), '\"')) {
-    Curl_safefree(chlg);
-    return CURLE_LOGIN_DENIED;
-  }
-
-  /* Retrieve realm string from the challenge */
-  if(!sasl_digest_get_key_value(chlg, "realm=\"", realm,
-                                sizeof(realm), '\"')) {
-    /* Challenge does not have a realm, set empty string [RFC2831] page 6 */
-    strcpy(realm, "");
-  }
-
-  /* Retrieve algorithm string from the challenge */
-  if(!sasl_digest_get_key_value(chlg, "algorithm=", alg, sizeof(alg), ',')) {
-    Curl_safefree(chlg);
-    return CURLE_LOGIN_DENIED;
-  }
-
-  Curl_safefree(chlg);
-
-  /* We do not support other algorithms */
-  if(strcmp(alg, "md5-sess") != 0)
-    return CURLE_LOGIN_DENIED;
 
+#ifndef DEBUGBUILD
   /* Generate 64 bits of random data */
   for(i = 0; i < 8; i++)
     cnonce[i] = table16[Curl_rand(data)%16];
+#endif
 
   /* So far so good, now calculate A1 and H(A1) according to RFC 2831 */
   ctxt = Curl_MD5_init(Curl_DIGEST_MD5);
   if(!ctxt)
     return CURLE_OUT_OF_MEMORY;
 
@@ -398,20 +449,26 @@
   Curl_MD5_update(ctxt, (const unsigned char *) HA2_hex, 2 * MD5_DIGEST_LEN);
   Curl_MD5_final(ctxt, digest);
 
   for(i = 0; i < MD5_DIGEST_LEN; i++)
     snprintf(&resp_hash_hex[2 * i], 3, "%02x", digest[i]);
 
-  snprintf(response, sizeof(response),
-           "username=\"%s\",realm=\"%s\",nonce=\"%s\","
-           "cnonce=\"%s\",nc=\"%s\",digest-uri=\"%s\",response=%s",
-           userp, realm, nonce,
-           cnonce, nonceCount, uri, resp_hash_hex);
+  /* Generate the response */
+  response = aprintf("username=\"%s\",realm=\"%s\",nonce=\"%s\","
+                     "cnonce=\"%s\",nc=\"%s\",digest-uri=\"%s\",response=%s",
+                     userp, realm, nonce,
+                     cnonce, nonceCount, uri, resp_hash_hex);
+  if(!response)
+    return CURLE_OUT_OF_MEMORY;
 
-  /* Base64 encode the reply */
-  return Curl_base64_encode(data, response, 0, outptr, outlen);
+  /* Base64 encode the response */
+  result = Curl_base64_encode(data, response, 0, outptr, outlen);
+
+  Curl_safefree(response);
+
+  return result;
 }
 #endif
 
 #ifdef USE_NTLM
 /*
  * Curl_sasl_create_ntlm_type1_message()
@@ -435,84 +492,109 @@
  */
 CURLcode Curl_sasl_create_ntlm_type1_message(const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr, size_t *outlen)
 {
-  return Curl_ntlm_create_type1_message(userp, passwdp, ntlm, outptr,
-                                        outlen);
+  return Curl_ntlm_create_type1_message(userp, passwdp, ntlm, outptr, outlen);
+}
+
+/*
+ * Curl_sasl_decode_ntlm_type2_message()
+ *
+ * This is used to decode an already encoded NTLM type-2 message.
+ *
+ * Parameters:
+ *
+ * data     [in]     - Pointer to session handle.
+ * type2msg [in]     - Pointer to the base64 encoded type-2 message.
+ * ntlm     [in/out] - The ntlm data struct being used and modified.
+ *
+ * Returns CURLE_OK on success.
+ */
+CURLcode Curl_sasl_decode_ntlm_type2_message(struct SessionHandle *data,
+                                             const char *type2msg,
+                                             struct ntlmdata *ntlm)
+{
+#ifdef USE_NSS
+  CURLcode result;
+
+  /* make sure the crypto backend is initialized */
+  result = Curl_nss_force_init(data);
+  if(result)
+    return result;
+#endif
+
+  return Curl_ntlm_decode_type2_message(data, type2msg, ntlm);
 }
 
 /*
  * Curl_sasl_create_ntlm_type3_message()
  *
  * This is used to generate an already encoded NTLM type-3 message ready for
  * sending to the recipient.
  *
  * Parameters:
  *
  * data    [in]     - Pointer to session handle.
- * header  [in]     - Pointer to the base64 encoded type-2 message buffer.
  * userp   [in]     - The user name in the format User or Domain\User.
  * passdwp [in]     - The user's password.
  * ntlm    [in/out] - The ntlm data struct being used and modified.
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_ntlm_type3_message(struct SessionHandle *data,
-                                             const char *header,
                                              const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr, size_t *outlen)
 {
-  CURLcode result = Curl_ntlm_decode_type2_message(data, header, ntlm);
-
-  if(!result)
-    result = Curl_ntlm_create_type3_message(data, userp, passwdp, ntlm,
-                                            outptr, outlen);
-
-  return result;
+  return Curl_ntlm_create_type3_message(data, userp, passwdp, ntlm, outptr,
+                                        outlen);
 }
 #endif /* USE_NTLM */
 
 /*
  * Curl_sasl_create_xoauth2_message()
  *
- * This is used to generate an already encoded XOAUTH2 message ready
- * for sending to the recipient.
+ * This is used to generate an already encoded OAuth 2.0 message ready for
+ * sending to the recipient.
  *
  * Parameters:
  *
  * data    [in]     - The session handle.
  * user    [in]     - The user name.
- * bearer  [in]     - The XOAUTH Bearer token.
+ * bearer  [in]     - The bearer token.
  * outptr  [in/out] - The address where a pointer to newly allocated memory
  *                    holding the result will be stored upon completion.
  * outlen  [out]    - The length of the output message.
  *
  * Returns CURLE_OK on success.
  */
 CURLcode Curl_sasl_create_xoauth2_message(struct SessionHandle *data,
                                           const char *user,
                                           const char *bearer,
                                           char **outptr, size_t *outlen)
 {
-  char *xoauth;
+  CURLcode result = CURLE_OK;
+  char *xoauth = NULL;
 
+  /* Generate the message */
   xoauth = aprintf("user=%s\1auth=Bearer %s\1\1", user, bearer);
-
   if(!xoauth)
     return CURLE_OUT_OF_MEMORY;
 
   /* Base64 encode the reply */
-  return Curl_base64_encode(data, xoauth, strlen(xoauth), outptr,
-                            outlen);
+  result = Curl_base64_encode(data, xoauth, strlen(xoauth), outptr, outlen);
+
+  Curl_safefree(xoauth);
+
+  return result;
 }
 
 /*
  * Curl_sasl_cleanup()
  *
  * This is used to cleanup any libraries or curl modules used by the sasl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_sasl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_sasl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_sasl.h	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_sasl.h	2013-12-17 06:02:35.000000000 +0800
@@ -63,22 +63,33 @@
    containing either the user name or password details */
 CURLcode Curl_sasl_create_login_message(struct SessionHandle *data,
                                         const char *valuep, char **outptr,
                                         size_t *outlen);
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
+/* This is used to decode a base64 encoded CRAM-MD5 challange message */
+CURLcode Curl_sasl_decode_cram_md5_message(const char *chlg64, char **outptr,
+                                           size_t *outlen);
+
 /* This is used to generate a base64 encoded CRAM-MD5 response message */
 CURLcode Curl_sasl_create_cram_md5_message(struct SessionHandle *data,
-                                           const char *chlg64,
+                                           const char *chlg,
                                            const char *user,
                                            const char *passwdp,
                                            char **outptr, size_t *outlen);
 
+/* This is used to decode a base64 encoded DIGEST-MD5 challange message */
+CURLcode Curl_sasl_decode_digest_md5_message(const char *chlg64,
+                                             char *nonce, size_t nlen,
+                                             char *realm, size_t rlen,
+                                             char *alg, size_t alen);
+
 /* This is used to generate a base64 encoded DIGEST-MD5 response message */
 CURLcode Curl_sasl_create_digest_md5_message(struct SessionHandle *data,
-                                             const char *chlg64,
+                                             const char *nonce,
+                                             const char *realm,
                                              const char *user,
                                              const char *passwdp,
                                              const char *service,
                                              char **outptr, size_t *outlen);
 #endif
 
@@ -87,16 +98,19 @@
 CURLcode Curl_sasl_create_ntlm_type1_message(const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr,
                                              size_t *outlen);
 
-/* This is used to decode an incoming NTLM type-2 message and generate a
-   base64 encoded type-3 response */
+/* This is used to decode a base64 encoded NTLM type-2 message */
+CURLcode Curl_sasl_decode_ntlm_type2_message(struct SessionHandle *data,
+                                             const char *type2msg,
+                                             struct ntlmdata *ntlm);
+
+/* This is used to generate a base64 encoded NTLM type-3 message */
 CURLcode Curl_sasl_create_ntlm_type3_message(struct SessionHandle *data,
-                                             const char *header,
                                              const char *userp,
                                              const char *passwdp,
                                              struct ntlmdata *ntlm,
                                              char **outptr, size_t *outlen);
 
 #endif /* USE_NTLM */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_schannel.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_schannel.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/curl_schannel.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/curl_schannel.c	2013-12-17 06:02:35.000000000 +0800
@@ -177,12 +177,21 @@
     switch(data->set.ssl.version) {
       case CURL_SSLVERSION_TLSv1:
         schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_0_CLIENT |
                                               SP_PROT_TLS1_1_CLIENT |
                                               SP_PROT_TLS1_2_CLIENT;
         break;
+      case CURL_SSLVERSION_TLSv1_0:
+        schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_0_CLIENT;
+        break;
+      case CURL_SSLVERSION_TLSv1_1:
+        schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_1_CLIENT;
+        break;
+      case CURL_SSLVERSION_TLSv1_2:
+        schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_2_CLIENT;
+        break;
       case CURL_SSLVERSION_SSLv3:
         schannel_cred.grbitEnabledProtocols = SP_PROT_SSL3_CLIENT;
         break;
       case CURL_SSLVERSION_SSLv2:
         schannel_cred.grbitEnabledProtocols = SP_PROT_SSL2_CLIENT;
         break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/cyassl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/cyassl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/cyassl.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/cyassl.c	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -95,14 +95,25 @@
   switch(data->set.ssl.version) {
   case CURL_SSLVERSION_DEFAULT:
     /* we try to figure out version */
     req_method = SSLv23_client_method();
     break;
   case CURL_SSLVERSION_TLSv1:
+    infof(data, "CyaSSL cannot be configured to use TLS 1.0-1.2, "
+          "TLS 1.0 is used exclusively\n");
     req_method = TLSv1_client_method();
     break;
+  case CURL_SSLVERSION_TLSv1_0:
+    req_method = TLSv1_client_method();
+    break;
+  case CURL_SSLVERSION_TLSv1_1:
+    req_method = TLSv1_1_client_method();
+    break;
+  case CURL_SSLVERSION_TLSv1_2:
+    req_method = TLSv1_2_client_method();
+    break;
   case CURL_SSLVERSION_SSLv3:
     req_method = SSLv3_client_method();
     break;
   default:
     req_method = TLSv1_client_method();
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/easy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/easy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/easy.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/easy.c	2013-12-17 06:02:35.000000000 +0800
@@ -47,17 +47,12 @@
 #endif
 
 #ifdef HAVE_SYS_PARAM_H
 #include <sys/param.h>
 #endif
 
-#if defined(HAVE_SIGNAL_H) && defined(HAVE_SIGACTION) && defined(USE_OPENSSL)
-#define SIGPIPE_IGNORE 1
-#include <signal.h>
-#endif
-
 #include "strequal.h"
 #include "urldata.h"
 #include <curl/curl.h>
 #include "transfer.h"
 #include "sslgen.h"
 #include "url.h"
@@ -75,69 +70,20 @@
 #include "slist.h"
 #include "amigaos.h"
 #include "non-ascii.h"
 #include "warnless.h"
 #include "conncache.h"
 #include "multiif.h"
+#include "sigpipe.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 /* The last #include file should be: */
 #include "memdebug.h"
 
-#ifdef SIGPIPE_IGNORE
-struct sigpipe_ignore {
-  struct sigaction old_pipe_act;
-  bool no_signal;
-};
-
-#define SIGPIPE_VARIABLE(x) struct sigpipe_ignore x
-
-/*
- * sigpipe_ignore() makes sure we ignore SIGPIPE while running libcurl
- * internals, and then sigpipe_restore() will restore the situation when we
- * return from libcurl again.
- */
-static void sigpipe_ignore(struct SessionHandle *data,
-                           struct sigpipe_ignore *ig)
-{
-  /* get a local copy of no_signal because the SessionHandle might not be
-     around when we restore */
-  ig->no_signal = data->set.no_signal;
-  if(!data->set.no_signal) {
-    struct sigaction action;
-    /* first, extract the existing situation */
-    memset(&ig->old_pipe_act, 0, sizeof(struct sigaction));
-    sigaction(SIGPIPE, NULL, &ig->old_pipe_act);
-    action = ig->old_pipe_act;
-    /* ignore this signal */
-    action.sa_handler = SIG_IGN;
-    sigaction(SIGPIPE, &action, NULL);
-  }
-}
-
-/*
- * sigpipe_restore() puts back the outside world's opinion of signal handler
- * and SIGPIPE handling. It MUST only be called after a corresponding
- * sigpipe_ignore() was used.
- */
-static void sigpipe_restore(struct sigpipe_ignore *ig)
-{
-  if(!ig->no_signal)
-    /* restore the outside state */
-    sigaction(SIGPIPE, &ig->old_pipe_act, NULL);
-}
-
-#else
-/* for systems without sigaction */
-#define sigpipe_ignore(x,y) Curl_nop_stmt
-#define sigpipe_restore(x)  Curl_nop_stmt
-#define SIGPIPE_VARIABLE(x)
-#endif
-
 /* win32_cleanup() is for win32 socket cleanup functionality, the opposite
    of win32_init() */
 static void win32_cleanup(void)
 {
 #ifdef USE_WINSOCK
   WSACleanup();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ftp.c	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ftp.c	2013-12-17 06:02:35.000000000 +0800
@@ -1799,29 +1799,93 @@
   conn->proto.ftpc.count1++;
   /* remain in/go to the FTP_PASV state */
   state(conn, FTP_PASV);
   return result;
 }
 
+/*
+ * Perform the necessary magic that needs to be done once the TCP connection
+ * to the proxy has completed.
+ */
+static CURLcode proxy_magic(struct connectdata *conn,
+                            char *newhost, unsigned short newport,
+                            bool *magicdone)
+{
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data=conn->data;
+
+  *magicdone = FALSE;
+  switch(conn->proxytype) {
+  case CURLPROXY_SOCKS5:
+  case CURLPROXY_SOCKS5_HOSTNAME:
+    result = Curl_SOCKS5(conn->proxyuser, conn->proxypasswd, newhost,
+                         newport, SECONDARYSOCKET, conn);
+    *magicdone = TRUE;
+    break;
+  case CURLPROXY_SOCKS4:
+    result = Curl_SOCKS4(conn->proxyuser, newhost, newport,
+                         SECONDARYSOCKET, conn, FALSE);
+    *magicdone = TRUE;
+    break;
+  case CURLPROXY_SOCKS4A:
+    result = Curl_SOCKS4(conn->proxyuser, newhost, newport,
+                         SECONDARYSOCKET, conn, TRUE);
+    *magicdone = TRUE;
+    break;
+  case CURLPROXY_HTTP:
+  case CURLPROXY_HTTP_1_0:
+    /* do nothing here. handled later. */
+    break;
+  default:
+    failf(data, "unknown proxytype option given");
+    result = CURLE_COULDNT_CONNECT;
+    break;
+  }
+
+  if(conn->bits.tunnel_proxy && conn->bits.httpproxy) {
+    /* BLOCKING */
+    /* We want "seamless" FTP operations through HTTP proxy tunnel */
+
+    /* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the
+     * member conn->proto.http; we want FTP through HTTP and we have to
+     * change the member temporarily for connecting to the HTTP proxy. After
+     * Curl_proxyCONNECT we have to set back the member to the original
+     * struct FTP pointer
+     */
+    struct HTTP http_proxy;
+    struct FTP *ftp_save = data->req.protop;
+    memset(&http_proxy, 0, sizeof(http_proxy));
+    data->req.protop = &http_proxy;
+
+    result = Curl_proxyCONNECT(conn, SECONDARYSOCKET, newhost, newport);
+
+    data->req.protop = ftp_save;
+
+    if(result)
+      return result;
+
+    if(conn->tunnel_state[SECONDARYSOCKET] != TUNNEL_COMPLETE) {
+      /* the CONNECT procedure is not complete, the tunnel is not yet up */
+      state(conn, FTP_STOP); /* this phase is completed */
+      return result;
+    }
+    else
+      *magicdone = TRUE;
+  }
+  return result;
+}
+
 static CURLcode ftp_state_pasv_resp(struct connectdata *conn,
                                     int ftpcode)
 {
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   CURLcode result;
   struct SessionHandle *data=conn->data;
-  Curl_addrinfo *conninfo;
   struct Curl_dns_entry *addr=NULL;
   int rc;
   unsigned short connectport; /* the local port connect() should use! */
-  unsigned short newport=0; /* remote port */
-  bool connected;
-
-  /* newhost must be able to hold a full IP-style address in ASCII, which
-     in the IPv6 case means 5*8-1 = 39 letters */
-#define NEWHOST_BUFSIZE 48
-  char newhost[NEWHOST_BUFSIZE];
   char *str=&data->state.buffer[4];  /* start on the first letter */
 
   if((ftpc->count1 == 0) &&
      (ftpcode == 229)) {
     /* positive EPSV response */
     char *ptr = strchr(str, '(');
@@ -1848,25 +1912,26 @@
         }
         if(num > 0xffff) {
           failf(data, "Illegal port number in EPSV reply");
           return CURLE_FTP_WEIRD_PASV_REPLY;
         }
         if(ptr) {
-          newport = (unsigned short)(num & 0xffff);
+          ftpc->newport = (unsigned short)(num & 0xffff);
 
           if(conn->bits.tunnel_proxy ||
              conn->proxytype == CURLPROXY_SOCKS5 ||
              conn->proxytype == CURLPROXY_SOCKS5_HOSTNAME ||
              conn->proxytype == CURLPROXY_SOCKS4 ||
              conn->proxytype == CURLPROXY_SOCKS4A)
             /* proxy tunnel -> use other host info because ip_addr_str is the
                proxy address not the ftp host */
-            snprintf(newhost, sizeof(newhost), "%s", conn->host.name);
+            snprintf(ftpc->newhost, sizeof(ftpc->newhost), "%s",
+                     conn->host.name);
           else
             /* use the same IP we are already connected to */
-            snprintf(newhost, NEWHOST_BUFSIZE, "%s", conn->ip_addr_str);
+            snprintf(ftpc->newhost, NEWHOST_BUFSIZE, "%s", conn->ip_addr_str);
         }
       }
       else
         ptr=NULL;
     }
     if(!ptr) {
@@ -1913,20 +1978,21 @@
          conn->proxytype == CURLPROXY_SOCKS5 ||
          conn->proxytype == CURLPROXY_SOCKS5_HOSTNAME ||
          conn->proxytype == CURLPROXY_SOCKS4 ||
          conn->proxytype == CURLPROXY_SOCKS4A)
         /* proxy tunnel -> use other host info because ip_addr_str is the
            proxy address not the ftp host */
-        snprintf(newhost, sizeof(newhost), "%s", conn->host.name);
+        snprintf(ftpc->newhost, sizeof(ftpc->newhost), "%s", conn->host.name);
       else
-        snprintf(newhost, sizeof(newhost), "%s", conn->ip_addr_str);
+        snprintf(ftpc->newhost, sizeof(ftpc->newhost), "%s",
+                 conn->ip_addr_str);
     }
     else
-      snprintf(newhost, sizeof(newhost),
+      snprintf(ftpc->newhost, sizeof(ftpc->newhost),
                "%d.%d.%d.%d", ip[0], ip[1], ip[2], ip[3]);
-    newport = (unsigned short)(((port[0]<<8) + port[1]) & 0xffff);
+    ftpc->newport = (unsigned short)(((port[0]<<8) + port[1]) & 0xffff);
   }
   else if(ftpc->count1 == 0) {
     /* EPSV failed, move on to PASV */
     return ftp_epsv_disable(conn);
   }
   else {
@@ -1954,122 +2020,48 @@
             conn->proxy.name, connectport);
       return CURLE_FTP_CANT_GET_HOST;
     }
   }
   else {
     /* normal, direct, ftp connection */
-    rc = Curl_resolv(conn, newhost, newport, &addr);
+    rc = Curl_resolv(conn, ftpc->newhost, ftpc->newport, &addr);
     if(rc == CURLRESOLV_PENDING)
       /* BLOCKING */
       (void)Curl_resolver_wait_resolv(conn, &addr);
 
-    connectport = newport; /* we connect to the remote port */
+    connectport = ftpc->newport; /* we connect to the remote port */
 
     if(!addr) {
-      failf(data, "Can't resolve new host %s:%hu", newhost, connectport);
+      failf(data, "Can't resolve new host %s:%hu", ftpc->newhost, connectport);
       return CURLE_FTP_CANT_GET_HOST;
     }
   }
 
-  result = Curl_connecthost(conn,
-                            addr,
-                            &conn->sock[SECONDARYSOCKET],
-                            &conninfo,
-                            &connected);
+  conn->bits.tcpconnect[SECONDARYSOCKET] = FALSE;
+  result = Curl_connecthost(conn, addr);
 
   Curl_resolv_unlock(data, addr); /* we're done using this address */
 
   if(result) {
     if(ftpc->count1 == 0 && ftpcode == 229)
       return ftp_epsv_disable(conn);
 
     return result;
   }
 
-  conn->bits.tcpconnect[SECONDARYSOCKET] = connected;
 
   /*
    * When this is used from the multi interface, this might've returned with
    * the 'connected' set to FALSE and thus we are now awaiting a non-blocking
-   * connect to connect and we should not be "hanging" here waiting.
+   * connect to connect.
    */
 
   if(data->set.verbose)
     /* this just dumps information about this second connection */
-    ftp_pasv_verbose(conn, conninfo, newhost, connectport);
+    ftp_pasv_verbose(conn, conn->ip_addr, ftpc->newhost, connectport);
 
-  switch(conn->proxytype) {
-    /* FIX: this MUST wait for a proper connect first if 'connected' is
-     * FALSE */
-  case CURLPROXY_SOCKS5:
-  case CURLPROXY_SOCKS5_HOSTNAME:
-    result = Curl_SOCKS5(conn->proxyuser, conn->proxypasswd, newhost, newport,
-                         SECONDARYSOCKET, conn);
-    connected = TRUE;
-    break;
-  case CURLPROXY_SOCKS4:
-    result = Curl_SOCKS4(conn->proxyuser, newhost, newport,
-                         SECONDARYSOCKET, conn, FALSE);
-    connected = TRUE;
-    break;
-  case CURLPROXY_SOCKS4A:
-    result = Curl_SOCKS4(conn->proxyuser, newhost, newport,
-                         SECONDARYSOCKET, conn, TRUE);
-    connected = TRUE;
-    break;
-  case CURLPROXY_HTTP:
-  case CURLPROXY_HTTP_1_0:
-    /* do nothing here. handled later. */
-    break;
-  default:
-    failf(data, "unknown proxytype option given");
-    result = CURLE_COULDNT_CONNECT;
-    break;
-  }
-
-  if(result) {
-    if(ftpc->count1 == 0 && ftpcode == 229)
-      return ftp_epsv_disable(conn);
-    return result;
-  }
-
-  if(conn->bits.tunnel_proxy && conn->bits.httpproxy) {
-    /* FIX: this MUST wait for a proper connect first if 'connected' is
-     * FALSE */
-
-    /* BLOCKING */
-    /* We want "seamless" FTP operations through HTTP proxy tunnel */
-
-    /* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the member
-     * conn->proto.http; we want FTP through HTTP and we have to change the
-     * member temporarily for connecting to the HTTP proxy. After
-     * Curl_proxyCONNECT we have to set back the member to the original struct
-     * FTP pointer
-     */
-    struct HTTP http_proxy;
-    struct FTP *ftp_save = data->req.protop;
-    memset(&http_proxy, 0, sizeof(http_proxy));
-    data->req.protop = &http_proxy;
-
-    result = Curl_proxyCONNECT(conn, SECONDARYSOCKET, newhost, newport);
-
-    data->req.protop = ftp_save;
-
-    if(result)
-      return result;
-
-    if(conn->tunnel_state[SECONDARYSOCKET] != TUNNEL_COMPLETE) {
-      /* the CONNECT procedure is not complete, the tunnel is not yet up */
-      state(conn, FTP_STOP); /* this phase is completed */
-      conn->bits.tcpconnect[SECONDARYSOCKET] = FALSE;
-
-      return result;
-    }
-  }
-
-  conn->bits.tcpconnect[SECONDARYSOCKET] = connected;
   conn->bits.do_more = TRUE;
   state(conn, FTP_STOP); /* this phase is completed */
 
   return result;
 }
 
@@ -3622,12 +3614,16 @@
 
     result = Curl_is_connected(conn, SECONDARYSOCKET, &connected);
 
     /* Ready to do more? */
     if(connected) {
       DEBUGF(infof(data, "DO-MORE connected phase starts\n"));
+      if(conn->bits.proxy) {
+        infof(data, "Connection to proxy confirmed\n");
+        result = proxy_magic(conn, ftpc->newhost, ftpc->newport, &connected);
+      }
     }
     else {
       if(result && (ftpc->count1 == 0)) {
         *completep = -1; /* go back to DOING please */
         /* this is a EPSV connect failing, try PASV instead */
         return ftp_epsv_disable(conn);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ftp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ftp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ftp.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ftp.h	2013-12-17 06:02:35.000000000 +0800
@@ -144,11 +144,17 @@
                            data connection is established */
   curl_off_t retr_size_saved; /* Size of retrieved file saved */
   char * server_os;     /* The target server operating system. */
   curl_off_t known_filesize; /* file size is different from -1, if wildcard
                                 LIST parsing was done and wc_statemach set
                                 it */
+  /* newhost must be able to hold a full IP-style address in ASCII, which
+     in the IPv6 case means 5*8-1 = 39 letters */
+#define NEWHOST_BUFSIZE 48
+  char newhost[NEWHOST_BUFSIZE]; /* this is the pair to connect the DATA... */
+  unsigned short newport;        /* connection to */
+
 };
 
 #define DEFAULT_ACCEPT_TIMEOUT   60000 /* milliseconds == one minute */
 
 #endif /* HEADER_CURL_FTP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/getinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/getinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/getinfo.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/getinfo.c	2013-12-17 06:02:35.000000000 +0800
@@ -274,13 +274,63 @@
   case CURLINFO_CERTINFO:
     /* Return the a pointer to the certinfo struct. Not really an slist
        pointer but we can pretend it is here */
     ptr.to_certinfo = &data->info.certs;
     *param_slistp = ptr.to_slist;
     break;
+  case CURLINFO_TLS_SESSION:
+    {
+      struct curl_tlssessioninfo **tsip = (struct curl_tlssessioninfo **)
+                                          param_slistp;
+      struct curl_tlssessioninfo *tsi = &data->tsi;
+      struct connectdata *conn = data->easy_conn;
+      unsigned int sockindex = 0;
 
+      *tsip = tsi;
+      tsi->backend = CURLSSLBACKEND_NONE;
+      tsi->internals = NULL;
+
+      if(!conn)
+        break;
+
+      /* Find the active ("in use") SSL connection, if any */
+      while((sockindex < sizeof(conn->ssl) / sizeof(conn->ssl[0])) &&
+            (!conn->ssl[sockindex].use))
+        sockindex++;
+
+      if(sockindex == sizeof(conn->ssl) / sizeof(conn->ssl[0]))
+        break; /* no SSL session found */
+
+      /* Return the TLS session information from the relevant backend */
+#ifdef USE_SSLEAY
+      tsi->backend = CURLSSLBACKEND_OPENSSL;
+      tsi->internals = conn->ssl[sockindex].ctx;
+#endif
+#ifdef USE_GNUTLS
+      tsi->backend = CURLSSLBACKEND_GNUTLS;
+      tsi->internals = conn->ssl[sockindex].session;
+#endif
+#ifdef USE_NSS
+      tsi->backend = CURLSSLBACKEND_NSS;
+      tsi->internals = conn->ssl[sockindex].handle;
+#endif
+#ifdef USE_QSOSSL
+      tsi->backend = CURLSSLBACKEND_QSOSSL;
+      tsi->internals = conn->ssl[sockindex].handle;
+#endif
+#ifdef USE_GSKIT
+      tsi->backend = CURLSSLBACKEND_GSKIT;
+      tsi->internals = conn->ssl[sockindex].handle;
+#endif
+      /* NOTE: For other SSL backends, it is not immediately clear what data
+         to return from 'struct ssl_connect_data'; thus, for now we keep the
+         backend as CURLSSLBACKEND_NONE in those cases, which should be
+         interpreted as "not supported" */
+      break;
+    }
+    break;
   default:
     return CURLE_BAD_FUNCTION_ARGUMENT;
   }
   return CURLE_OK;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/gskit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/gskit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/gskit.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/gskit.c	2013-12-17 06:02:35.000000000 +0800
@@ -26,15 +26,44 @@
 
 #include <gskssl.h>
 #include <qsoasync.h>
 
 /* Some symbols are undefined/unsupported on OS400 versions < V7R1. */
 #ifndef GSK_SSL_EXTN_SERVERNAME_REQUEST
-#define GSK_SSL_EXTN_SERVERNAME_REQUEST                 230
+#define GSK_SSL_EXTN_SERVERNAME_REQUEST         230
 #endif
 
+#ifndef GSK_TLSV10_CIPHER_SPECS
+#define GSK_TLSV10_CIPHER_SPECS                 236
+#endif
+
+#ifndef GSK_TLSV11_CIPHER_SPECS
+#define GSK_TLSV11_CIPHER_SPECS                 237
+#endif
+
+#ifndef GSK_TLSV12_CIPHER_SPECS
+#define GSK_TLSV12_CIPHER_SPECS                 238
+#endif
+
+#ifndef GSK_PROTOCOL_TLSV11
+#define GSK_PROTOCOL_TLSV11                     437
+#endif
+
+#ifndef GSK_PROTOCOL_TLSV12
+#define GSK_PROTOCOL_TLSV12                     438
+#endif
+
+#ifndef GSK_FALSE
+#define GSK_FALSE                               0
+#endif
+
+#ifndef GSK_TRUE
+#define GSK_TRUE                                1
+#endif
+
+
 #ifdef HAVE_LIMITS_H
 #  include <limits.h>
 #endif
 
 #include <curl/curl.h>
 #include "urldata.h"
@@ -51,36 +80,71 @@
 
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 
+/* SSL version flags. */
+#define CURL_GSKPROTO_SSLV2     0
+#define CURL_GSKPROTO_SSLV2_MASK        (1 << CURL_GSKPROTO_SSLV2)
+#define CURL_GSKPROTO_SSLV3     1
+#define CURL_GSKPROTO_SSLV3_MASK        (1 << CURL_GSKPROTO_SSLV3)
+#define CURL_GSKPROTO_TLSV10    2
+#define CURL_GSKPROTO_TLSV10_MASK        (1 << CURL_GSKPROTO_TLSV10)
+#define CURL_GSKPROTO_TLSV11    3
+#define CURL_GSKPROTO_TLSV11_MASK        (1 << CURL_GSKPROTO_TLSV11)
+#define CURL_GSKPROTO_TLSV12    4
+#define CURL_GSKPROTO_TLSV12_MASK        (1 << CURL_GSKPROTO_TLSV12)
+#define CURL_GSKPROTO_LAST      5
+
+
 /* Supported ciphers. */
 typedef struct {
-  const char *  name;           /* Cipher name. */
-  const char *  gsktoken;       /* Corresponding token for GSKit String. */
-  int           sslver;         /* SSL version. */
+  const char *name;            /* Cipher name. */
+  const char *gsktoken;        /* Corresponding token for GSKit String. */
+  unsigned int versions;       /* SSL version flags. */
 }  gskit_cipher;
 
 static const gskit_cipher  ciphertable[] = {
-  { "null-md5",         "01",   CURL_SSLVERSION_SSLv3 },
-  { "null-sha",         "02",   CURL_SSLVERSION_SSLv3 },
-  { "exp-rc4-md5",      "03",   CURL_SSLVERSION_SSLv3 },
-  { "rc4-md5",          "04",   CURL_SSLVERSION_SSLv3 },
-  { "rc4-sha",          "05",   CURL_SSLVERSION_SSLv3 },
-  { "exp-rc2-cbc-md5",  "06",   CURL_SSLVERSION_SSLv3 },
-  { "exp-des-cbc-sha",  "09",   CURL_SSLVERSION_SSLv3 },
-  { "des-cbc3-sha",     "0A",   CURL_SSLVERSION_SSLv3 },
-  { "aes128-sha",       "2F",   CURL_SSLVERSION_TLSv1 },
-  { "aes256-sha",       "35",   CURL_SSLVERSION_TLSv1 },
-  { "rc4-md5",          "1",    CURL_SSLVERSION_SSLv2 },
-  { "exp-rc4-md5",      "2",    CURL_SSLVERSION_SSLv2 },
-  { "rc2-md5",          "3",    CURL_SSLVERSION_SSLv2 },
-  { "exp-rc2-md5",      "4",    CURL_SSLVERSION_SSLv2 },
-  { "des-cbc-md5",      "6",    CURL_SSLVERSION_SSLv2 },
-  { "des-cbc3-md5",     "7",    CURL_SSLVERSION_SSLv2 },
+  { "null-md5",         "01",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+      CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK },
+  { "null-sha",         "02",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+      CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK },
+  { "exp-rc4-md5",      "03",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK },
+  { "rc4-md5",          "04",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+      CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK },
+  { "rc4-sha",          "05",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+      CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK },
+  { "exp-rc2-cbc-md5",  "06",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK },
+  { "exp-des-cbc-sha",  "09",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+      CURL_GSKPROTO_TLSV11_MASK },
+  { "des-cbc3-sha",     "0A",
+      CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+      CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK },
+  { "aes128-sha",       "2F",
+      CURL_GSKPROTO_TLSV10_MASK | CURL_GSKPROTO_TLSV11_MASK |
+      CURL_GSKPROTO_TLSV12_MASK },
+  { "aes256-sha",       "35",
+      CURL_GSKPROTO_TLSV10_MASK | CURL_GSKPROTO_TLSV11_MASK |
+      CURL_GSKPROTO_TLSV12_MASK },
+  { "null-sha256",      "3B",   CURL_GSKPROTO_TLSV12_MASK },
+  { "aes128-sha256",    "3D",   CURL_GSKPROTO_TLSV12_MASK },
+  { "aes256-sha256",    "3D",   CURL_GSKPROTO_TLSV12_MASK },
+  { "rc4-md5",          "1",    CURL_GSKPROTO_SSLV2_MASK },
+  { "exp-rc4-md5",      "2",    CURL_GSKPROTO_SSLV2_MASK },
+  { "rc2-md5",          "3",    CURL_GSKPROTO_SSLV2_MASK },
+  { "exp-rc2-md5",      "4",    CURL_GSKPROTO_SSLV2_MASK },
+  { "des-cbc-md5",      "6",    CURL_GSKPROTO_SSLV2_MASK },
+  { "des-cbc3-md5",     "7",    CURL_GSKPROTO_SSLV2_MASK },
   { (const char *) NULL, (const char *) NULL, 0       }
 };
 
 
 static bool is_separator(char c)
 {
@@ -94,14 +158,14 @@
     return true;
   }
   return false;
 }
 
 
-static CURLcode gskit_status(struct SessionHandle * data, int rc,
-                             const char * procname, CURLcode defcode)
+static CURLcode gskit_status(struct SessionHandle *data, int rc,
+                             const char *procname, CURLcode defcode)
 {
   CURLcode cc;
 
   /* Process GSKit status and map it to a CURLcode. */
   switch (rc) {
   case GSK_OK:
@@ -134,56 +198,62 @@
       break;
     }
     break;
   default:
     failf(data, "%s: %s", procname, gsk_strerror(rc));
     break;
-    }
+  }
   return defcode;
 }
 
 
-static CURLcode set_enum(struct SessionHandle * data,
-                         gsk_handle h, GSK_ENUM_ID id, GSK_ENUM_VALUE value)
+static CURLcode set_enum(struct SessionHandle *data, gsk_handle h,
+                GSK_ENUM_ID id, GSK_ENUM_VALUE value, bool unsupported_ok)
 {
   int rc = gsk_attribute_set_enum(h, id, value);
 
   switch (rc) {
   case GSK_OK:
     return CURLE_OK;
   case GSK_ERROR_IO:
     failf(data, "gsk_attribute_set_enum() I/O error: %s", strerror(errno));
     break;
+  case GSK_ATTRIBUTE_INVALID_ID:
+    if(unsupported_ok)
+      return CURLE_UNSUPPORTED_PROTOCOL;
   default:
     failf(data, "gsk_attribute_set_enum(): %s", gsk_strerror(rc));
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_buffer(struct SessionHandle * data,
-                           gsk_handle h, GSK_BUF_ID id, const char * buffer)
+static CURLcode set_buffer(struct SessionHandle *data, gsk_handle h,
+                        GSK_BUF_ID id, const char *buffer, bool unsupported_ok)
 {
   int rc = gsk_attribute_set_buffer(h, id, buffer, 0);
 
   switch (rc) {
   case GSK_OK:
     return CURLE_OK;
   case GSK_ERROR_IO:
     failf(data, "gsk_attribute_set_buffer() I/O error: %s", strerror(errno));
     break;
+  case GSK_ATTRIBUTE_INVALID_ID:
+    if(unsupported_ok)
+      return CURLE_UNSUPPORTED_PROTOCOL;
   default:
     failf(data, "gsk_attribute_set_buffer(): %s", gsk_strerror(rc));
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_numeric(struct SessionHandle * data,
+static CURLcode set_numeric(struct SessionHandle *data,
                             gsk_handle h, GSK_NUM_ID id, int value)
 {
   int rc = gsk_attribute_set_numeric_value(h, id, value);
 
   switch (rc) {
   case GSK_OK:
@@ -197,14 +267,14 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_callback(struct SessionHandle * data,
-                             gsk_handle h, GSK_CALLBACK_ID id, void * info)
+static CURLcode set_callback(struct SessionHandle *data,
+                             gsk_handle h, GSK_CALLBACK_ID id, void *info)
 {
   int rc = gsk_attribute_set_callback(h, id, info);
 
   switch (rc) {
   case GSK_OK:
     return CURLE_OK;
@@ -216,23 +286,26 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_ciphers(struct SessionHandle * data, gsk_handle h)
+static CURLcode set_ciphers(struct SessionHandle *data,
+                                        gsk_handle h, unsigned int *protoflags)
 {
-  const char * cipherlist = data->set.str[STRING_SSL_CIPHER_LIST];
-  char * sslv2ciphers;
-  char * sslv3ciphers;
-  const char * clp;
-  const gskit_cipher * ctp;
-  char * v2p;
-  char * v3p;
+  const char *cipherlist = data->set.str[STRING_SSL_CIPHER_LIST];
+  const char *clp;
+  const gskit_cipher *ctp;
   int i;
+  int l;
+  bool unsupported;
   CURLcode cc;
+  struct {
+    char *buf;
+    char *ptr;
+  } ciphers[CURL_GSKPROTO_LAST];
 
   /* Compile cipher list into GSKit-compatible cipher lists. */
 
   if(!cipherlist)
     return CURLE_OK;
   while(is_separator(*cipherlist))     /* Skip initial separators. */
@@ -240,62 +313,114 @@
   if(!*cipherlist)
     return CURLE_OK;
 
   /* We allocate GSKit buffers of the same size as the input string: since
      GSKit tokens are always shorter than their cipher names, allocated buffers
      will always be large enough to accomodate the result. */
-  i = strlen(cipherlist) + 1;
-  v2p = malloc(i);
-  if(!v2p)
-    return CURLE_OUT_OF_MEMORY;
-  v3p = malloc(i);
-  if(!v3p) {
-    free(v2p);
-    return CURLE_OUT_OF_MEMORY;
+  l = strlen(cipherlist) + 1;
+  memset((char *) ciphers, 0, sizeof ciphers);
+  for(i = 0; i < CURL_GSKPROTO_LAST; i++) {
+    ciphers[i].buf = malloc(l);
+    if(!ciphers[i].buf) {
+      while(i--)
+        free(ciphers[i].buf);
+      return CURLE_OUT_OF_MEMORY;
+    }
+    ciphers[i].ptr = ciphers[i].buf;
+    *ciphers[i].ptr = '\0';
   }
-  sslv2ciphers = v2p;
-  sslv3ciphers = v3p;
 
   /* Process each cipher in input string. */
+  unsupported = FALSE;
+  cc = CURLE_OK;
   for(;;) {
     for(clp = cipherlist; *cipherlist && !is_separator(*cipherlist);)
       cipherlist++;
-    i = cipherlist - clp;
-    if(!i)
+    l = cipherlist - clp;
+    if(!l)
       break;
     /* Search the cipher in our table. */
     for(ctp = ciphertable; ctp->name; ctp++)
-      if(strnequal(ctp->name, clp, i) && !ctp->name[i])
+      if(strnequal(ctp->name, clp, l) && !ctp->name[l])
         break;
-    if(!ctp->name)
-      failf(data, "Unknown cipher %.*s: ignored", i, clp);
+    if(!ctp->name) {
+      failf(data, "Unknown cipher %.*s", l, clp);
+      cc = CURLE_SSL_CIPHER;
+    }
     else {
-      switch (ctp->sslver) {
-      case CURL_SSLVERSION_SSLv2:
-        strcpy(v2p, ctp->gsktoken);
-        v2p += strlen(v2p);
-        break;
-      default:
-        /* GSKit wants TLSv1 ciphers with SSLv3 ciphers. */
-        strcpy(v3p, ctp->gsktoken);
-        v3p += strlen(v3p);
-        break;
+      unsupported |= !(ctp->versions & (CURL_GSKPROTO_SSLV2_MASK |
+                        CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK));
+      for(i = 0; i < CURL_GSKPROTO_LAST; i++) {
+        if(ctp->versions & (1 << i)) {
+          strcpy(ciphers[i].ptr, ctp->gsktoken);
+          ciphers[i].ptr += strlen(ctp->gsktoken);
+        }
       }
     }
 
    /* Advance to next cipher name or end of string. */
     while(is_separator(*cipherlist))
       cipherlist++;
   }
-  *v2p = '\0';
-  *v3p = '\0';
-  cc = set_buffer(data, h, GSK_V2_CIPHER_SPECS, sslv2ciphers);
-  if(cc == CURLE_OK)
-    cc = set_buffer(data, h, GSK_V3_CIPHER_SPECS, sslv3ciphers);
-  free(sslv2ciphers);
-  free(sslv3ciphers);
+
+  /* Disable protocols with empty cipher lists. */
+  for(i = 0; i < CURL_GSKPROTO_LAST; i++) {
+    if(!(*protoflags & (1 << i)) || !ciphers[i].buf[0]) {
+      *protoflags &= ~(1 << i);
+      ciphers[i].buf[0] = '\0';
+    }
+  }
+
+  /* Try to set-up TLSv1.1 and TLSv2.1 ciphers. */
+  if(*protoflags & CURL_GSKPROTO_TLSV11_MASK) {
+    cc = set_buffer(data, h, GSK_TLSV11_CIPHER_SPECS,
+                    ciphers[CURL_GSKPROTO_TLSV11].buf, TRUE);
+    if(cc == CURLE_UNSUPPORTED_PROTOCOL) {
+      cc = CURLE_OK;
+      if(unsupported) {
+        failf(data, "TLSv1.1-only ciphers are not yet supported");
+        cc = CURLE_SSL_CIPHER;
+      }
+    }
+  }
+  if(cc == CURLE_OK && (*protoflags & CURL_GSKPROTO_TLSV12_MASK)) {
+    cc = set_buffer(data, h, GSK_TLSV12_CIPHER_SPECS,
+                    ciphers[CURL_GSKPROTO_TLSV12].buf, TRUE);
+    if(cc == CURLE_UNSUPPORTED_PROTOCOL) {
+      cc = CURLE_OK;
+      if(unsupported) {
+        failf(data, "TLSv1.2-only ciphers are not yet supported");
+        cc = CURLE_SSL_CIPHER;
+      }
+    }
+  }
+
+  /* Try to set-up TLSv1.0 ciphers. If not successful, concatenate them to
+     the SSLv3 ciphers. OS/400 prior to version 7.1 will understand it. */
+  if(cc == CURLE_OK && (*protoflags & CURL_GSKPROTO_TLSV10_MASK)) {
+    cc = set_buffer(data, h, GSK_TLSV10_CIPHER_SPECS,
+                    ciphers[CURL_GSKPROTO_TLSV10].buf, TRUE);
+    if(cc == CURLE_UNSUPPORTED_PROTOCOL) {
+      cc = CURLE_OK;
+      strcpy(ciphers[CURL_GSKPROTO_SSLV3].ptr,
+             ciphers[CURL_GSKPROTO_TLSV10].ptr);
+    }
+  }
+
+  /* Set-up other ciphers. */
+  if(cc == CURLE_OK &&  (*protoflags & CURL_GSKPROTO_SSLV3_MASK))
+    cc = set_buffer(data, h, GSK_V3_CIPHER_SPECS,
+                    ciphers[CURL_GSKPROTO_SSLV3].buf, FALSE);
+  if(cc == CURLE_OK && (*protoflags & CURL_GSKPROTO_SSLV2_MASK))
+    cc = set_buffer(data, h, GSK_V2_CIPHER_SPECS,
+                    ciphers[CURL_GSKPROTO_SSLV2].buf, FALSE);
+
+  /* Clean-up. */
+  for(i = 0; i < CURL_GSKPROTO_LAST; i++)
+    free(ciphers[i].buf);
+
   return cc;
 }
 
 
 int Curl_gskit_init(void)
 {
@@ -308,16 +433,16 @@
 void Curl_gskit_cleanup(void)
 {
   /* Nothing to do. */
 }
 
 
-static CURLcode init_environment(struct SessionHandle * data,
-                                 gsk_handle * envir, const char * appid,
-                                 const char * file, const char * label,
-                                 const char * password)
+static CURLcode init_environment(struct SessionHandle *data,
+                                 gsk_handle *envir, const char *appid,
+                                 const char *file, const char *label,
+                                 const char *password)
 {
   int rc;
   CURLcode c;
   gsk_handle h;
 
   /* Creates the GSKit environment. */
@@ -330,21 +455,21 @@
     return CURLE_OUT_OF_MEMORY;
   default:
     failf(data, "gsk_environment_open(): %s", gsk_strerror(rc));
     return CURLE_SSL_CONNECT_ERROR;
   }
 
-  c = set_enum(data, h, GSK_SESSION_TYPE, GSK_CLIENT_SESSION);
+  c = set_enum(data, h, GSK_SESSION_TYPE, GSK_CLIENT_SESSION, FALSE);
   if(c == CURLE_OK && appid)
-    c = set_buffer(data, h, GSK_OS400_APPLICATION_ID, appid);
+    c = set_buffer(data, h, GSK_OS400_APPLICATION_ID, appid, FALSE);
   if(c == CURLE_OK && file)
-    c = set_buffer(data, h, GSK_KEYRING_FILE, file);
+    c = set_buffer(data, h, GSK_KEYRING_FILE, file, FALSE);
   if(c == CURLE_OK && label)
-    c = set_buffer(data, h, GSK_KEYRING_LABEL, label);
+    c = set_buffer(data, h, GSK_KEYRING_LABEL, label, FALSE);
   if(c == CURLE_OK && password)
-    c = set_buffer(data, h, GSK_KEYRING_PW, password);
+    c = set_buffer(data, h, GSK_KEYRING_PW, password, FALSE);
 
   if(c == CURLE_OK) {
     /* Locate CAs, Client certificate and key according to our settings.
        Note: this call may be blocking for some tenths of seconds. */
     c = gskit_status(data, gsk_environment_init(h),
                      "gsk_environment_init()", CURLE_SSL_CERTPROBLEM);
@@ -356,46 +481,46 @@
   /* Error: rollback. */
   gsk_environment_close(&h);
   return c;
 }
 
 
-static void cancel_async_handshake(struct connectdata * conn, int sockindex)
+static void cancel_async_handshake(struct connectdata *conn, int sockindex)
 {
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   Qso_OverlappedIO_t cstat;
 
   if(QsoCancelOperation(conn->sock[sockindex], 0) > 0)
     QsoWaitForIOCompletion(connssl->iocport, &cstat, (struct timeval *) NULL);
 }
 
 
-static void close_async_handshake(struct ssl_connect_data * connssl)
+static void close_async_handshake(struct ssl_connect_data *connssl)
 {
   QsoDestroyIOCompletionPort(connssl->iocport);
   connssl->iocport = -1;
 }
 
 
-static void close_one(struct ssl_connect_data * conn,
-                      struct SessionHandle * data)
+static void close_one(struct ssl_connect_data *conn,
+                      struct SessionHandle *data)
 {
   if(conn->handle) {
     gskit_status(data, gsk_secure_soc_close(&conn->handle),
               "gsk_secure_soc_close()", 0);
     conn->handle = (gsk_handle) NULL;
   }
   if(conn->iocport >= 0)
     close_async_handshake(conn);
 }
 
 
-static ssize_t gskit_send(struct connectdata * conn, int sockindex,
-                           const void * mem, size_t len, CURLcode * curlcode)
+static ssize_t gskit_send(struct connectdata *conn, int sockindex,
+                           const void *mem, size_t len, CURLcode *curlcode)
 {
-  struct SessionHandle * data = conn->data;
+  struct SessionHandle *data = conn->data;
   CURLcode cc;
   int written;
 
   cc = gskit_status(data,
                     gsk_secure_soc_write(conn->ssl[sockindex].handle,
                                          (char *) mem, (int) len, &written),
@@ -405,16 +530,16 @@
     written = -1;
   }
   return (ssize_t) written; /* number of bytes */
 }
 
 
-static ssize_t gskit_recv(struct connectdata * conn, int num, char * buf,
-                           size_t buffersize, CURLcode * curlcode)
+static ssize_t gskit_recv(struct connectdata *conn, int num, char *buf,
+                           size_t buffersize, CURLcode *curlcode)
 {
-  struct SessionHandle * data = conn->data;
+  struct SessionHandle *data = conn->data;
   int buffsize;
   int nread;
   CURLcode cc;
 
   buffsize = buffersize > (size_t) INT_MAX? INT_MAX: (int) buffersize;
   cc = gskit_status(data, gsk_secure_soc_read(conn->ssl[num].handle,
@@ -425,26 +550,24 @@
     nread = -1;
   }
   return (ssize_t) nread;
 }
 
 
-static CURLcode gskit_connect_step1(struct connectdata * conn, int sockindex)
+static CURLcode gskit_connect_step1(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle * data = conn->data;
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
+  struct SessionHandle *data = conn->data;
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   gsk_handle envir;
   CURLcode cc;
   int rc;
-  char * keyringfile;
-  char * keyringpwd;
-  char * keyringlabel;
-  char * v2ciphers;
-  char * v3ciphers;
-  char * sni;
-  bool sslv2enable, sslv3enable, tlsv1enable;
+  char *keyringfile;
+  char *keyringpwd;
+  char *keyringlabel;
+  char *sni;
+  unsigned int protoflags;
   long timeout;
   Qso_OverlappedIO_t commarea;
 
   /* Create SSL environment, start (preferably asynchronous) handshake. */
 
   connssl->handle = (gsk_handle) NULL;
@@ -488,49 +611,45 @@
                     "gsk_secure_soc_open()", CURLE_SSL_CONNECT_ERROR);
   gsk_environment_close(&envir);
   if(cc != CURLE_OK)
     return cc;
 
   /* Determine which SSL/TLS version should be enabled. */
-  sslv2enable = sslv3enable = tlsv1enable = false;
+  protoflags = CURL_GSKPROTO_SSLV3_MASK | CURL_GSKPROTO_TLSV10_MASK |
+               CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK;
   sni = conn->host.name;
   switch (data->set.ssl.version) {
   case CURL_SSLVERSION_SSLv2:
-    sslv2enable = true;
+    protoflags = CURL_GSKPROTO_SSLV2_MASK;
     sni = (char *) NULL;
     break;
   case CURL_SSLVERSION_SSLv3:
-    sslv3enable = true;
+    protoflags = CURL_GSKPROTO_SSLV2_MASK;
     sni = (char *) NULL;
     break;
   case CURL_SSLVERSION_TLSv1:
-    tlsv1enable = true;
+    protoflags = CURL_GSKPROTO_TLSV10_MASK |
+                 CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK;
+    break;
+  case CURL_SSLVERSION_TLSv1_0:
+    protoflags = CURL_GSKPROTO_TLSV10_MASK;
+    break;
+  case CURL_SSLVERSION_TLSv1_1:
+    protoflags = CURL_GSKPROTO_TLSV11_MASK;
     break;
-  default:              /* CURL_SSLVERSION_DEFAULT. */
-    sslv3enable = true;
-    tlsv1enable = true;
+  case CURL_SSLVERSION_TLSv1_2:
+    protoflags = CURL_GSKPROTO_TLSV12_MASK;
     break;
   }
 
   /* Process SNI. Ignore if not supported (on OS400 < V7R1). */
   if(sni) {
-    rc = gsk_attribute_set_buffer(connssl->handle,
-                                  GSK_SSL_EXTN_SERVERNAME_REQUEST, sni, 0);
-    switch (rc) {
-    case GSK_OK:
-    case GSK_ATTRIBUTE_INVALID_ID:
-      break;
-    case GSK_ERROR_IO:
-      failf(data, "gsk_attribute_set_buffer() I/O error: %s", strerror(errno));
-      cc = CURLE_SSL_CONNECT_ERROR;
-      break;
-    default:
-      failf(data, "gsk_attribute_set_buffer(): %s", gsk_strerror(rc));
-      cc = CURLE_SSL_CONNECT_ERROR;
-      break;
-    }
+    cc = set_buffer(data, connssl->handle,
+                    GSK_SSL_EXTN_SERVERNAME_REQUEST, sni, TRUE);
+    if(cc == CURLE_UNSUPPORTED_PROTOCOL)
+      cc = CURLE_OK;
   }
 
   /* Set session parameters. */
   if(cc == CURLE_OK) {
     /* Compute the handshake timeout. Since GSKit granularity is 1 second,
        we round up the required value. */
@@ -541,29 +660,57 @@
       cc = set_numeric(data, connssl->handle, GSK_HANDSHAKE_TIMEOUT,
                        (timeout + 999) / 1000);
   }
   if(cc == CURLE_OK)
     cc = set_numeric(data, connssl->handle, GSK_FD, conn->sock[sockindex]);
   if(cc == CURLE_OK)
-    cc = set_ciphers(data, connssl->handle);
+    cc = set_ciphers(data, connssl->handle, &protoflags);
+  if(!protoflags) {
+    failf(data, "No SSL protocol/cipher combination enabled");
+    cc = CURLE_SSL_CIPHER;
+  }
   if(cc == CURLE_OK)
       cc = set_enum(data, connssl->handle, GSK_PROTOCOL_SSLV2,
-                    sslv2enable? GSK_PROTOCOL_SSLV2_ON:
-                    GSK_PROTOCOL_SSLV2_OFF);
+                    (protoflags & CURL_GSKPROTO_SSLV2_MASK)?
+                    GSK_PROTOCOL_SSLV2_ON: GSK_PROTOCOL_SSLV2_OFF, FALSE);
   if(cc == CURLE_OK)
     cc = set_enum(data, connssl->handle, GSK_PROTOCOL_SSLV3,
-                  sslv3enable? GSK_PROTOCOL_SSLV3_ON:
-                  GSK_PROTOCOL_SSLV3_OFF);
+                  (protoflags & CURL_GSKPROTO_SSLV3_MASK)?
+                  GSK_PROTOCOL_SSLV3_ON: GSK_PROTOCOL_SSLV3_OFF, FALSE);
   if(cc == CURLE_OK)
     cc = set_enum(data, connssl->handle, GSK_PROTOCOL_TLSV1,
-                  sslv3enable?  GSK_PROTOCOL_TLSV1_ON:
-                  GSK_PROTOCOL_TLSV1_OFF);
+                  (protoflags & CURL_GSKPROTO_TLSV10_MASK)?
+                  GSK_PROTOCOL_TLSV1_ON: GSK_PROTOCOL_TLSV1_OFF, FALSE);
+  if(cc == CURLE_OK) {
+    cc = set_enum(data, connssl->handle, GSK_PROTOCOL_TLSV11,
+                   (protoflags & CURL_GSKPROTO_TLSV11_MASK)?
+                   GSK_TRUE: GSK_FALSE, TRUE);
+    if(cc == CURLE_UNSUPPORTED_PROTOCOL) {
+      cc = CURLE_OK;
+      if(protoflags == CURL_GSKPROTO_TLSV11_MASK) {
+        failf(data, "TLS 1.1 not yet supported");
+        cc = CURLE_SSL_CIPHER;
+      }
+    }
+  }
+  if(cc == CURLE_OK) {
+    cc = set_enum(data, connssl->handle, GSK_PROTOCOL_TLSV12,
+                  (protoflags & CURL_GSKPROTO_TLSV12_MASK)?
+                  GSK_TRUE: GSK_FALSE, TRUE);
+    if(cc == CURLE_UNSUPPORTED_PROTOCOL) {
+      cc = CURLE_OK;
+      if(protoflags == CURL_GSKPROTO_TLSV12_MASK) {
+        failf(data, "TLS 1.2 not yet supported");
+        cc = CURLE_SSL_CIPHER;
+      }
+    }
+  }
   if(cc == CURLE_OK)
     cc = set_enum(data, connssl->handle, GSK_SERVER_AUTH_TYPE,
                   data->set.ssl.verifypeer? GSK_SERVER_AUTH_FULL:
-                  GSK_SERVER_AUTH_PASSTHRU);
+                  GSK_SERVER_AUTH_PASSTHRU, FALSE);
 
   if(cc == CURLE_OK) {
     /* Start handshake. Try asynchronous first. */
     memset(&commarea, 0, sizeof commarea);
     connssl->iocport = QsoCreateIOCompletionPort();
     if(connssl->iocport != -1) {
@@ -593,17 +740,17 @@
   /* Error: rollback. */
   close_one(connssl, data);
   return cc;
 }
 
 
-static CURLcode gskit_connect_step2(struct connectdata * conn, int sockindex,
+static CURLcode gskit_connect_step2(struct connectdata *conn, int sockindex,
                                     bool nonblocking)
 {
-  struct SessionHandle * data = conn->data;
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
+  struct SessionHandle *data = conn->data;
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   Qso_OverlappedIO_t cstat;
   long timeout_ms;
   struct timeval stmv;
   CURLcode cc;
 
   /* Poll or wait for end of SSL asynchronous handshake. */
@@ -645,21 +792,21 @@
     connssl->connecting_state = ssl_connect_3;
   close_async_handshake(connssl);
   return cc;
 }
 
 
-static CURLcode gskit_connect_step3(struct connectdata * conn, int sockindex)
+static CURLcode gskit_connect_step3(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle * data = conn->data;
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
-  const gsk_cert_data_elem * cdev;
+  struct SessionHandle *data = conn->data;
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  const gsk_cert_data_elem *cdev;
   int cdec;
-  const gsk_cert_data_elem * p;
-  const char * cert = (const char *) NULL;
-  const char * certend;
+  const gsk_cert_data_elem *p;
+  const char *cert = (const char *) NULL;
+  const char *certend;
   int i;
   CURLcode cc;
 
   /* SSL handshake done: gather certificate info and verify host. */
 
   if(gskit_status(data, gsk_attribute_get_cert_info(connssl->handle,
@@ -712,17 +859,17 @@
 
   connssl->connecting_state = ssl_connect_done;
   return CURLE_OK;
 }
 
 
-static CURLcode gskit_connect_common(struct connectdata * conn, int sockindex,
-                                     bool nonblocking, bool * done)
+static CURLcode gskit_connect_common(struct connectdata *conn, int sockindex,
+                                     bool nonblocking, bool *done)
 {
-  struct SessionHandle * data = conn->data;
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
+  struct SessionHandle *data = conn->data;
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   long timeout_ms;
   Qso_OverlappedIO_t cstat;
   CURLcode cc = CURLE_OK;
 
   *done = connssl->state == ssl_connection_complete;
   if(*done)
@@ -771,26 +918,26 @@
   }
 
   return cc;
 }
 
 
-CURLcode Curl_gskit_connect_nonblocking(struct connectdata * conn,
+CURLcode Curl_gskit_connect_nonblocking(struct connectdata *conn,
                                         int sockindex,
-                                        bool * done)
+                                        bool *done)
 {
   CURLcode cc;
 
   cc = gskit_connect_common(conn, sockindex, TRUE, done);
   if(*done || cc != CURLE_OK)
     conn->ssl[sockindex].connecting_state = ssl_connect_1;
   return cc;
 }
 
 
-CURLcode Curl_gskit_connect(struct connectdata * conn, int sockindex)
+CURLcode Curl_gskit_connect(struct connectdata *conn, int sockindex)
 {
   CURLcode retcode;
   bool done;
 
   conn->ssl[sockindex].connecting_state = ssl_connect_1;
   retcode = gskit_connect_common(conn, sockindex, FALSE, &done);
@@ -800,34 +947,34 @@
   DEBUGASSERT(done);
 
   return CURLE_OK;
 }
 
 
-void Curl_gskit_close(struct connectdata * conn, int sockindex)
+void Curl_gskit_close(struct connectdata *conn, int sockindex)
 {
-  struct SessionHandle * data = conn->data;
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
+  struct SessionHandle *data = conn->data;
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   if(connssl->use)
     close_one(connssl, data);
 }
 
 
-int Curl_gskit_close_all(struct SessionHandle * data)
+int Curl_gskit_close_all(struct SessionHandle *data)
 {
   /* Unimplemented. */
   (void) data;
   return 0;
 }
 
 
-int Curl_gskit_shutdown(struct connectdata * conn, int sockindex)
+int Curl_gskit_shutdown(struct connectdata *conn, int sockindex)
 {
-  struct ssl_connect_data * connssl = &conn->ssl[sockindex];
-  struct SessionHandle * data = conn->data;
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  struct SessionHandle *data = conn->data;
   ssize_t nread;
   int what;
   int rc;
   char buf[120];
 
   if(!connssl->handle)
@@ -872,20 +1019,20 @@
   }
 
   return rc;
 }
 
 
-size_t Curl_gskit_version(char * buffer, size_t size)
+size_t Curl_gskit_version(char *buffer, size_t size)
 {
   strncpy(buffer, "GSKit", size);
   return strlen(buffer);
 }
 
 
-int Curl_gskit_check_cxn(struct connectdata * cxn)
+int Curl_gskit_check_cxn(struct connectdata *cxn)
 {
   int err;
   int errlen;
 
   /* The only thing that can be tested here is at the socket level. */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/gtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/gtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/gtls.c	2013-10-13 06:05:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/gtls.c	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -630,16 +630,14 @@
       else
         infof(data, "\t server certificate verification FAILED\n");
     }
     else
       infof(data, "\t server certificate verification OK\n");
   }
-  else {
+  else
     infof(data, "\t server certificate verification SKIPPED\n");
-    goto after_server_cert_verification;
-  }
 
   /* initialize an X.509 certificate structure. */
   gnutls_x509_crt_init(&x509_cert);
 
   /* convert the given DER or PEM encoded Certificate to the native
      gnutls_x509_crt_t format */
@@ -763,14 +761,12 @@
   size = sizeof(certbuf);
   gnutls_x509_crt_get_issuer_dn(x509_cert, certbuf, &size);
   infof(data, "\t issuer: %s\n", certbuf);
 
   gnutls_x509_crt_deinit(x509_cert);
 
-after_server_cert_verification:
-
   /* compression algorithm (if any) */
   ptr = gnutls_compression_get_name(gnutls_compression_get(session));
   /* the *_get_name() says "NULL" if GNUTLS_COMP_NULL is returned */
   infof(data, "\t compression: %s\n", ptr);
 
   /* the name of the cipher used. ie 3DES. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/hostcheck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/hostcheck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/hostcheck.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/hostcheck.c	2013-12-17 06:02:35.000000000 +0800
@@ -20,13 +20,13 @@
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #if defined(USE_SSLEAY) || defined(USE_AXTLS) || defined(USE_QSOSSL) || \
-    defined(USE_GSKIT)
+    defined(USE_GSKIT) || defined(USE_NSS)
 /* these backends use functions from this file */
 
 #include "hostcheck.h"
 #include "rawstr.h"
 
 /*
@@ -91,7 +91,7 @@
 
   if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)
     return 1;
   return 0;
 }
 
-#endif /* SSLEAY or AXTLS or QSOSSL or GSKIT */
+#endif /* SSLEAY or AXTLS or QSOSSL or GSKIT or NSS */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/hostip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/hostip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/hostip.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/hostip.c	2013-12-17 06:02:35.000000000 +0800
@@ -288,15 +288,16 @@
  */
 static int
 remove_entry_if_stale(struct SessionHandle *data, struct Curl_dns_entry *dns)
 {
   struct hostcache_prune_data user;
 
-  if(!dns || (data->set.dns_cache_timeout == -1) || !data->dns.hostcache)
-    /* cache forever means never prune, and NULL hostcache means
-       we can't do it */
+  if(!dns || (data->set.dns_cache_timeout == -1) || !data->dns.hostcache ||
+     dns->inuse)
+    /* cache forever means never prune, and NULL hostcache means we can't do
+       it, if it still is in use then we leave it */
     return 0;
 
   time(&user.now);
   user.cache_timeout = data->set.dns_cache_timeout;
 
   if(!hostcache_timestamp_remove(&user,dns) )
@@ -425,15 +426,19 @@
   /* See if its already in our dns cache */
   dns = Curl_hash_pick(data->dns.hostcache, entry_id, entry_len+1);
 
   /* free the allocated entry_id again */
   free(entry_id);
 
+  infof(data, "Hostname was %sfound in DNS cache\n", dns?"":"NOT ");
+
   /* See whether the returned entry is stale. Done before we release lock */
-  if(remove_entry_if_stale(data, dns))
+  if(remove_entry_if_stale(data, dns)) {
+    infof(data, "Hostname in DNS cache was stale, zapped\n");
     dns = NULL; /* the memory deallocation is being handled by the hash */
+  }
 
   if(dns) {
     dns->inuse++; /* we use it! */
     rc = CURLRESOLV_RESOLVED;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http.c	2013-10-13 04:24:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http.c	2013-12-17 06:02:35.000000000 +0800
@@ -184,31 +184,31 @@
 /*
  * Strip off leading and trailing whitespace from the value in the
  * given HTTP header line and return a strdupped copy. Returns NULL in
  * case of allocation failure. Returns an empty string if the header value
  * consists entirely of whitespace.
  */
-static char *copy_header_value(const char *h)
+char *Curl_copy_header_value(const char *header)
 {
   const char *start;
   const char *end;
   char *value;
   size_t len;
 
-  DEBUGASSERT(h);
+  DEBUGASSERT(header);
 
   /* Find the end of the header name */
-  while(*h && (*h != ':'))
-    ++h;
+  while(*header && (*header != ':'))
+    ++header;
 
-  if(*h)
+  if(*header)
     /* Skip over colon */
-    ++h;
+    ++header;
 
   /* Find the first non-space letter */
-  start = h;
+  start = header;
   while(*start && ISSPACE(*start))
     start++;
 
   /* data is in the host encoding so
      use '\r' and '\n' instead of 0x0d and 0x0a */
   end = strchr(start, '\r');
@@ -221,13 +221,13 @@
 
   /* skip all trailing space letters */
   while((end > start) && ISSPACE(*end))
     end--;
 
   /* get length of the type */
-  len = end-start+1;
+  len = end - start + 1;
 
   value = malloc(len + 1);
   if(!value)
     return NULL;
 
   memcpy(value, start, len);
@@ -696,40 +696,32 @@
 /*
  * Curl_http_input_auth() deals with Proxy-Authenticate: and WWW-Authenticate:
  * headers. They are dealt with both in the transfer.c main loop and in the
  * proxy CONNECT loop.
  */
 
-CURLcode Curl_http_input_auth(struct connectdata *conn,
-                              int httpcode,
-                              const char *header) /* the first non-space */
+CURLcode Curl_http_input_auth(struct connectdata *conn, bool proxy,
+                              const char *auth) /* the first non-space */
 {
   /*
    * This resource requires authentication
    */
   struct SessionHandle *data = conn->data;
 
   unsigned long *availp;
-  const char *start;
   struct auth *authp;
 
-  if(httpcode == 407) {
-    start = header+strlen("Proxy-authenticate:");
+  if(proxy) {
     availp = &data->info.proxyauthavail;
     authp = &data->state.authproxy;
   }
   else {
-    start = header+strlen("WWW-Authenticate:");
     availp = &data->info.httpauthavail;
     authp = &data->state.authhost;
   }
 
-  /* pass all white spaces */
-  while(*start && ISSPACE(*start))
-    start++;
-
   /*
    * Here we check if we want the specific single authentication (using ==) and
    * if we do, we initiate usage of it.
    *
    * If the provided authentication is wanted as one out of several accepted
    * types (using &), we OR this authentication type to the authavail
@@ -741,29 +733,29 @@
    * request is sent, and then it is again set _after_ all response 401/407
    * headers have been received but then only to a single preferred method
    * (bit).
    *
    */
 
-  while(*start) {
+  while(*auth) {
 #ifdef USE_HTTP_NEGOTIATE
-    if(checkprefix("GSS-Negotiate", start) ||
-       checkprefix("Negotiate", start)) {
+    if(checkprefix("GSS-Negotiate", auth) ||
+       checkprefix("Negotiate", auth)) {
       int neg;
       *availp |= CURLAUTH_GSSNEGOTIATE;
       authp->avail |= CURLAUTH_GSSNEGOTIATE;
 
       if(authp->picked == CURLAUTH_GSSNEGOTIATE) {
         if(data->state.negotiate.state == GSS_AUTHSENT) {
           /* if we sent GSS authentication in the outgoing request and we get
              this back, we're in trouble */
           infof(data, "Authentication problem. Ignoring this.\n");
           data->state.authproblem = TRUE;
         }
         else {
-          neg = Curl_input_negotiate(conn, (bool)(httpcode == 407), start);
+          neg = Curl_input_negotiate(conn, proxy, auth);
           if(neg == 0) {
             DEBUGASSERT(!data->req.newurl);
             data->req.newurl = strdup(data->change.url);
             if(!data->req.newurl)
               return CURLE_OUT_OF_MEMORY;
             data->state.authproblem = FALSE;
@@ -776,39 +768,39 @@
       }
     }
     else
 #endif
 #ifdef USE_NTLM
       /* NTLM support requires the SSL crypto libs */
-      if(checkprefix("NTLM", start)) {
+      if(checkprefix("NTLM", auth)) {
         *availp |= CURLAUTH_NTLM;
         authp->avail |= CURLAUTH_NTLM;
         if(authp->picked == CURLAUTH_NTLM ||
            authp->picked == CURLAUTH_NTLM_WB) {
           /* NTLM authentication is picked and activated */
           CURLcode ntlm =
-            Curl_input_ntlm(conn, (httpcode == 407)?TRUE:FALSE, start);
+            Curl_input_ntlm(conn, proxy, auth);
           if(CURLE_OK == ntlm) {
             data->state.authproblem = FALSE;
 #ifdef NTLM_WB_ENABLED
             if(authp->picked == CURLAUTH_NTLM_WB) {
               *availp &= ~CURLAUTH_NTLM;
               authp->avail &= ~CURLAUTH_NTLM;
               *availp |= CURLAUTH_NTLM_WB;
               authp->avail |= CURLAUTH_NTLM_WB;
 
               /* Get the challenge-message which will be passed to
                * ntlm_auth for generating the type 3 message later */
-              while(*start && ISSPACE(*start))
-                start++;
-              if(checkprefix("NTLM", start)) {
-                start += strlen("NTLM");
-                while(*start && ISSPACE(*start))
-                  start++;
-                if(*start)
-                  if((conn->challenge_header = strdup(start)) == NULL)
+              while(*auth && ISSPACE(*auth))
+                auth++;
+              if(checkprefix("NTLM", auth)) {
+                auth += strlen("NTLM");
+                while(*auth && ISSPACE(*auth))
+                  auth++;
+                if(*auth)
+                  if((conn->challenge_header = strdup(auth)) == NULL)
                     return CURLE_OUT_OF_MEMORY;
               }
             }
 #endif
           }
           else {
@@ -817,36 +809,36 @@
           }
         }
       }
       else
 #endif
 #ifndef CURL_DISABLE_CRYPTO_AUTH
-        if(checkprefix("Digest", start)) {
+        if(checkprefix("Digest", auth)) {
           if((authp->avail & CURLAUTH_DIGEST) != 0) {
             infof(data, "Ignoring duplicate digest auth header.\n");
           }
           else {
             CURLdigest dig;
             *availp |= CURLAUTH_DIGEST;
             authp->avail |= CURLAUTH_DIGEST;
 
             /* We call this function on input Digest headers even if Digest
              * authentication isn't activated yet, as we need to store the
              * incoming data from this header in case we are gonna use
              * Digest. */
-            dig = Curl_input_digest(conn, (httpcode == 407)?TRUE:FALSE, start);
+            dig = Curl_input_digest(conn, proxy, auth);
 
             if(CURLDIGEST_FINE != dig) {
               infof(data, "Authentication problem. Ignoring this.\n");
               data->state.authproblem = TRUE;
             }
           }
         }
         else
 #endif
-          if(checkprefix("Basic", start)) {
+          if(checkprefix("Basic", auth)) {
             *availp |= CURLAUTH_BASIC;
             authp->avail |= CURLAUTH_BASIC;
             if(authp->picked == CURLAUTH_BASIC) {
               /* We asked for Basic authentication but got a 40X back
                  anyway, which basically means our name+password isn't
                  valid. */
@@ -854,18 +846,18 @@
               infof(data, "Authentication problem. Ignoring this.\n");
               data->state.authproblem = TRUE;
             }
           }
 
     /* there may be multiple methods on one line, so keep reading */
-    while(*start && *start != ',') /* read up to the next comma */
-      start++;
-    if(*start == ',') /* if we're on a comma, skip it */
-      start++;
-    while(*start && ISSPACE(*start))
-      start++;
+    while(*auth && *auth != ',') /* read up to the next comma */
+      auth++;
+    if(*auth == ',') /* if we're on a comma, skip it */
+      auth++;
+    while(*auth && ISSPACE(*auth))
+      auth++;
   }
   return CURLE_OK;
 }
 
 /**
  * http_should_fail() determines whether an HTTP response has gotten us
@@ -1828,13 +1820,13 @@
 #if !defined(CURL_DISABLE_COOKIES)
     /* If we have a given custom Host: header, we extract the host name in
        order to possibly use it for cookie reasons later on. We only allow the
        custom Host: header if this is NOT a redirect, as setting Host: in the
        redirected request is being out on thin ice. Except if the host name
        is the same as the first one! */
-    char *cookiehost = copy_header_value(ptr);
+    char *cookiehost = Curl_copy_header_value(ptr);
     if(!cookiehost)
       return CURLE_OUT_OF_MEMORY;
     if(!*cookiehost)
       /* ignore empty data */
       free(cookiehost);
     else {
@@ -3244,25 +3236,25 @@
         infof(data, "Negative content-length: %" FORMAT_OFF_T
               ", closing after transfer\n", contentlength);
       }
     }
     /* check for Content-Type: header lines to get the MIME-type */
     else if(checkprefix("Content-Type:", k->p)) {
-      char *contenttype = copy_header_value(k->p);
+      char *contenttype = Curl_copy_header_value(k->p);
       if(!contenttype)
         return CURLE_OUT_OF_MEMORY;
       if(!*contenttype)
         /* ignore empty data */
         free(contenttype);
       else {
         Curl_safefree(data->info.contenttype);
         data->info.contenttype = contenttype;
       }
     }
     else if(checkprefix("Server:", k->p)) {
-      char *server_name = copy_header_value(k->p);
+      char *server_name = Curl_copy_header_value(k->p);
 
       /* Turn off pipelining if the server version is blacklisted */
       if(conn->bundle && conn->bundle->server_supports_pipelining) {
         if(Curl_pipeline_server_blacklisted(data, server_name))
           conn->bundle->server_supports_pipelining = FALSE;
       }
@@ -3452,21 +3444,30 @@
         data->info.filetime = (long)k->timeofdoc;
     }
     else if((checkprefix("WWW-Authenticate:", k->p) &&
              (401 == k->httpcode)) ||
             (checkprefix("Proxy-authenticate:", k->p) &&
              (407 == k->httpcode))) {
-      result = Curl_http_input_auth(conn, k->httpcode, k->p);
+
+      bool proxy = (k->httpcode == 407) ? TRUE : FALSE;
+      char *auth = Curl_copy_header_value(k->p);
+      if(!auth)
+        return CURLE_OUT_OF_MEMORY;
+
+      result = Curl_http_input_auth(conn, proxy, auth);
+
+      Curl_safefree(auth);
+
       if(result)
         return result;
     }
     else if((k->httpcode >= 300 && k->httpcode < 400) &&
             checkprefix("Location:", k->p) &&
             !data->req.location) {
       /* this is the URL that the server advises us to use instead */
-      char *location = copy_header_value(k->p);
+      char *location = Curl_copy_header_value(k->p);
       if(!location)
         return CURLE_OUT_OF_MEMORY;
       if(!*location)
         /* ignore empty data */
         free(location);
       else {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_digest.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_digest.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_digest.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_digest.c	2013-12-17 06:02:35.000000000 +0800
@@ -138,16 +138,12 @@
     d = &data->state.proxydigest;
   }
   else {
     d = &data->state.digest;
   }
 
-  /* skip initial whitespaces */
-  while(*header && ISSPACE(*header))
-    header++;
-
   if(checkprefix("Digest", header)) {
     header += strlen("Digest");
 
     /* If we already have received a nonce, keep that in mind */
     if(d->nonce)
       before = TRUE;
@@ -303,12 +299,13 @@
                             const unsigned char *request,
                             const unsigned char *uripath)
 {
   /* We have a Digest setup for this, use it!  Now, to get all the details for
      this sorted out, I must urge you dear friend to read up on the RFC2617
      section 3.2.2, */
+  size_t urilen;
   unsigned char md5buf[16]; /* 16 bytes/128 bits */
   unsigned char request_digest[33];
   unsigned char *md5this;
   unsigned char ha1[33];/* 32 digits and 1 zero byte */
   unsigned char ha2[33];/* 32 digits and 1 zero byte */
   char cnoncebuf[33];
@@ -437,19 +434,19 @@
      the BrowserMatch feature:
      http://httpd.apache.org/docs/2.2/mod/mod_auth_digest.html#msie
 
      Further details on Digest implementation differences:
      http://www.fngtps.com/2006/09/http-authentication
   */
-  if(authp->iestyle && ((tmp = strchr((char *)uripath, '?')) != NULL)) {
-    md5this = (unsigned char *)aprintf("%s:%.*s", request,
-                                       curlx_sztosi(tmp - (char *)uripath),
-                                       uripath);
-  }
+
+  if(authp->iestyle && ((tmp = strchr((char *)uripath, '?')) != NULL))
+    urilen = tmp - (char *)uripath;
   else
-    md5this = (unsigned char *)aprintf("%s:%s", request, uripath);
+    urilen = strlen((char *)uripath);
+
+  md5this = (unsigned char *)aprintf("%s:%.*s", request, urilen, uripath);
 
   if(d->qop && Curl_raw_equal(d->qop, "auth-int")) {
     /* We don't support auth-int for PUT or POST at the moment.
        TODO: replace md5 of empty string with entity-body for PUT/POST */
     unsigned char *md5this2 = (unsigned char *)
       aprintf("%s:%s", md5this, "d41d8cd98f00b204e9800998ecf8427e");
@@ -508,22 +505,22 @@
   if(d->qop) {
     *allocuserpwd =
       aprintf( "%sAuthorization: Digest "
                "username=\"%s\", "
                "realm=\"%s\", "
                "nonce=\"%s\", "
-               "uri=\"%s\", "
+               "uri=\"%.*s\", "
                "cnonce=\"%s\", "
                "nc=%08x, "
                "qop=%s, "
                "response=\"%s\"",
                proxy?"Proxy-":"",
                userp_quoted,
                d->realm,
                d->nonce,
-               uripath, /* this is the PATH part of the URL */
+               urilen, uripath, /* this is the PATH part of the URL */
                d->cnonce,
                d->nc,
                d->qop,
                request_digest);
 
     if(Curl_raw_equal(d->qop, "auth"))
@@ -534,19 +531,19 @@
   else {
     *allocuserpwd =
       aprintf( "%sAuthorization: Digest "
                "username=\"%s\", "
                "realm=\"%s\", "
                "nonce=\"%s\", "
-               "uri=\"%s\", "
+               "uri=\"%.*s\", "
                "response=\"%s\"",
                proxy?"Proxy-":"",
                userp_quoted,
                d->realm,
                d->nonce,
-               uripath, /* this is the PATH part of the URL */
+               urilen, uripath, /* this is the PATH part of the URL */
                request_digest);
   }
   Curl_safefree(userp_quoted);
   if(!*allocuserpwd)
     return CURLE_OUT_OF_MEMORY;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http.h	2013-10-13 04:24:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http.h	2013-12-17 06:02:35.000000000 +0800
@@ -32,17 +32,18 @@
 extern const struct Curl_handler Curl_handler_http;
 
 #ifdef USE_SSL
 extern const struct Curl_handler Curl_handler_https;
 #endif
 
+/* Header specific functions */
 bool Curl_compareheader(const char *headerline,  /* line to check */
                         const char *header,   /* header keyword _with_ colon */
                         const char *content); /* content string to find */
-
 char *Curl_checkheaders(struct SessionHandle *data, const char *thisheader);
+char *Curl_copy_header_value(const char *header);
 
 /* ------------------------------------------------------------------------- */
 /*
  * The add_buffer series of functions are used to build one large memory chunk
  * from repeated function invokes. Used so that the entire HTTP request can
  * be sent in one go.
@@ -78,14 +79,14 @@
 void Curl_httpchunk_init(struct connectdata *conn);
 CHUNKcode Curl_httpchunk_read(struct connectdata *conn, char *datap,
                               ssize_t length, ssize_t *wrote);
 
 /* These functions are in http.c */
 void Curl_http_auth_stage(struct SessionHandle *data, int stage);
-CURLcode Curl_http_input_auth(struct connectdata *conn,
-                              int httpcode, const char *header);
+CURLcode Curl_http_input_auth(struct connectdata *conn, bool proxy,
+                              const char *auth);
 CURLcode Curl_http_auth_act(struct connectdata *conn);
 CURLcode Curl_http_perhapsrewind(struct connectdata *conn);
 
 /* If only the PICKNONE bit is set, there has been a round-trip and we
    selected to use no auth at all. Ie, we actively select no auth, as opposed
    to not having one selected. The other CURLAUTH_* defines are present in the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_negotiate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_negotiate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_negotiate.c	2013-09-18 06:31:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_negotiate.c	2013-12-17 06:02:35.000000000 +0800
@@ -142,14 +142,12 @@
   size_t len;
   size_t rawlen = 0;
   bool gss;
   const char* protocol;
   CURLcode error;
 
-  while(*header && ISSPACE(*header))
-    header++;
   if(checkprefix("GSS-Negotiate", header)) {
     protocol = "GSS-Negotiate";
     gss = TRUE;
   }
   else if(checkprefix("Negotiate", header)) {
     protocol = "Negotiate";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_negotiate_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_negotiate_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_negotiate_sspi.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_negotiate_sspi.c	2013-12-17 06:02:35.000000000 +0800
@@ -95,15 +95,12 @@
   int ret;
   size_t len = 0, input_token_len = 0;
   bool gss = FALSE;
   const char* protocol;
   CURLcode error;
 
-  while(*header && ISSPACE(*header))
-    header++;
-
   if(checkprefix("GSS-Negotiate", header)) {
     protocol = "GSS-Negotiate";
     gss = TRUE;
   }
   else if(checkprefix("Negotiate", header)) {
     protocol = "Negotiate";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_proxy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_proxy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/http_proxy.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/http_proxy.c	2013-12-17 06:02:35.000000000 +0800
@@ -449,14 +449,22 @@
                   letter = line_start[perline];
                   line_start[perline]=0; /* zero terminate the buffer */
                   if((checkprefix("WWW-Authenticate:", line_start) &&
                       (401 == k->httpcode)) ||
                      (checkprefix("Proxy-authenticate:", line_start) &&
                       (407 == k->httpcode))) {
-                    result = Curl_http_input_auth(conn, k->httpcode,
-                                                  line_start);
+
+                    bool proxy = (k->httpcode == 407) ? TRUE : FALSE;
+                    char *auth = Curl_copy_header_value(line_start);
+                    if(!auth)
+                      return CURLE_OUT_OF_MEMORY;
+
+                    result = Curl_http_input_auth(conn, proxy, auth);
+
+                    Curl_safefree(auth);
+
                     if(result)
                       return result;
                   }
                   else if(checkprefix("Content-Length:", line_start)) {
                     cl = curlx_strtoofft(line_start +
                                          strlen("Content-Length:"), NULL, 10);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/imap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/imap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/imap.c	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/imap.c	2013-12-17 06:02:35.000000000 +0800
@@ -24,12 +24,13 @@
  * RFC3501 IMAPv4 protocol
  * RFC4422 Simple Authentication and Security Layer (SASL)
  * RFC4616 PLAIN authentication
  * RFC4959 IMAP Extension for SASL Initial Client Response
  * RFC5092 IMAP URL Scheme
  * RFC6749 OAuth 2.0 Authorization Framework
+ * Draft   LOGIN SASL Mechanism <draft-murchison-sasl-login-00.txt>
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #ifndef CURL_DISABLE_IMAP
@@ -369,12 +370,41 @@
 
   return FALSE; /* Nothing for us */
 }
 
 /***********************************************************************
  *
+ * imap_get_message()
+ *
+ * Gets the authentication message from the response buffer.
+ */
+static void imap_get_message(char *buffer, char** outptr)
+{
+  size_t len = 0;
+  char* message = NULL;
+
+  /* Find the start of the message */
+  for(message = buffer + 2; *message == ' ' || *message == '\t'; message++)
+    ;
+
+  /* Find the end of the message */
+  for(len = strlen(message); len--;)
+    if(message[len] != '\r' && message[len] != '\n' && message[len] != ' ' &&
+        message[len] != '\t')
+      break;
+
+  /* Terminate the message */
+  if(++len) {
+    message[len] = '\0';
+  }
+
+  *outptr = message;
+}
+
+/***********************************************************************
+ *
  * state()
  *
  * This is the ONLY way to change IMAP state!
  */
 static void state(struct connectdata *conn, imapstate newstate)
 {
@@ -393,12 +423,13 @@
     "AUTHENTICATE_CRAMMD5",
     "AUTHENTICATE_DIGESTMD5",
     "AUTHENTICATE_DIGESTMD5_RESP",
     "AUTHENTICATE_NTLM",
     "AUTHENTICATE_NTLM_TYPE2MSG",
     "AUTHENTICATE_XOAUTH2",
+    "AUTHENTICATE_CANCEL",
     "AUTHENTICATE_FINAL",
     "LOGIN",
     "LIST",
     "SELECT",
     "FETCH",
     "FETCH_FINAL",
@@ -550,14 +581,14 @@
   if(!conn->bits.user_passwd) {
     state(conn, IMAP_STOP);
 
     return result;
   }
 
-  /* Calculate the supported authentication mechanism by decreasing order of
-     security */
+  /* Calculate the supported authentication mechanism, by decreasing order of
+     security, as well as the initial response where appropriate */
 #ifndef CURL_DISABLE_CRYPTO_AUTH
   if((imapc->authmechs & SASL_MECH_DIGEST_MD5) &&
      (imapc->prefmech & SASL_MECH_DIGEST_MD5)) {
     mech = SASL_MECH_STRING_DIGEST_MD5;
     state1 = IMAP_AUTHENTICATE_DIGESTMD5;
     imapc->authused = SASL_MECH_DIGEST_MD5;
@@ -619,13 +650,13 @@
     if(imapc->ir_supported || data->set.sasl_ir)
       result = Curl_sasl_create_plain_message(conn->data, conn->user,
                                               conn->passwd, &initresp, &len);
   }
 
   if(!result) {
-    if(mech) {
+    if(mech && (imapc->preftype & IMAP_TYPE_SASL)) {
       /* Perform SASL based authentication */
       if(initresp) {
         result = imap_sendf(conn, "AUTHENTICATE %s %s", mech, initresp);
 
         if(!result)
           state(conn, state2);
@@ -636,13 +667,14 @@
         if(!result)
           state(conn, state1);
       }
 
       Curl_safefree(initresp);
     }
-    else if(!imapc->login_disabled)
+    else if((!imapc->login_disabled) &&
+            (imapc->preftype & IMAP_TYPE_CLEARTEXT))
       /* Perform clear text authentication */
       result = imap_perform_login(conn);
     else {
       /* Other mechanisms not supported */
       infof(conn->data, "No known authentication mechanisms supported!\n");
       result = CURLE_LOGIN_DENIED;
@@ -973,26 +1005,23 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the authorisation message */
     result = Curl_sasl_create_plain_message(data, conn->user, conn->passwd,
                                             &plainauth, &len);
+    if(!result && plainauth) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", plainauth);
 
-    /* Send the message */
-    if(!result) {
-      if(plainauth) {
-        result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", plainauth);
-
-        if(!result)
-          state(conn, IMAP_AUTHENTICATE_FINAL);
-      }
-
-      Curl_safefree(plainauth);
+      if(!result)
+        state(conn, IMAP_AUTHENTICATE_FINAL);
     }
   }
 
+  Curl_safefree(plainauth);
+
   return result;
 }
 
 /* For AUTHENTICATE LOGIN (without initial response) responses */
 static CURLcode imap_state_auth_login_resp(struct connectdata *conn,
                                            int imapcode,
@@ -1010,26 +1039,23 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the user message */
     result = Curl_sasl_create_login_message(data, conn->user,
                                             &authuser, &len);
+    if(!result && authuser) {
+      /* Send the user */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", authuser);
 
-    /* Send the user */
-    if(!result) {
-      if(authuser) {
-        result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", authuser);
-
-        if(!result)
-          state(conn, IMAP_AUTHENTICATE_LOGIN_PASSWD);
-      }
-
-      Curl_safefree(authuser);
+      if(!result)
+        state(conn, IMAP_AUTHENTICATE_LOGIN_PASSWD);
     }
   }
 
+  Curl_safefree(authuser);
+
   return result;
 }
 
 /* For AUTHENTICATE LOGIN user entry responses */
 static CURLcode imap_state_auth_login_password_resp(struct connectdata *conn,
                                                     int imapcode,
@@ -1047,122 +1073,129 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the password message */
     result = Curl_sasl_create_login_message(data, conn->passwd,
                                             &authpasswd, &len);
+    if(!result && authpasswd) {
+      /* Send the password */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", authpasswd);
 
-    /* Send the password */
-    if(!result) {
-      if(authpasswd) {
-        result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", authpasswd);
-
-        if(!result)
-          state(conn, IMAP_AUTHENTICATE_FINAL);
-      }
-
-      Curl_safefree(authpasswd);
+      if(!result)
+        state(conn, IMAP_AUTHENTICATE_FINAL);
     }
   }
 
+  Curl_safefree(authpasswd);
+
   return result;
 }
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 /* For AUTHENTICATE CRAM-MD5 responses */
 static CURLcode imap_state_auth_cram_resp(struct connectdata *conn,
                                           int imapcode,
                                           imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  char *chlg64 = data->state.buffer;
-  size_t len = 0;
+  char *chlg = NULL;
+  char *chlg64 = NULL;
   char *rplyb64 = NULL;
+  size_t len = 0;
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != '+') {
     failf(data, "Access denied: %d", imapcode);
     return CURLE_LOGIN_DENIED;
   }
 
-  /* Get the challenge */
-  for(chlg64 += 2; *chlg64 == ' ' || *chlg64 == '\t'; chlg64++)
-    ;
+  /* Get the challenge message */
+  imap_get_message(data->state.buffer, &chlg64);
 
-  /* Terminate the challenge */
-  if(*chlg64 != '=') {
-    for(len = strlen(chlg64); len--;)
-      if(chlg64[len] != '\r' && chlg64[len] != '\n' && chlg64[len] != ' ' &&
-         chlg64[len] != '\t')
-        break;
+  /* Decode the challenge message */
+  result = Curl_sasl_decode_cram_md5_message(chlg64, &chlg, &len);
+  if(result) {
+    /* Send the cancellation */
+    result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", "*");
 
-    if(++len) {
-      chlg64[len] = '\0';
-    }
+    if(!result)
+      state(conn, IMAP_AUTHENTICATE_CANCEL);
   }
-
-  /* Create the response message */
-  result = Curl_sasl_create_cram_md5_message(data, chlg64, conn->user,
-                                             conn->passwd, &rplyb64, &len);
-
-  /* Send the response */
-  if(!result) {
-    if(rplyb64) {
+  else {
+    /* Create the response message */
+    result = Curl_sasl_create_cram_md5_message(data, chlg, conn->user,
+                                               conn->passwd, &rplyb64, &len);
+    if(!result && rplyb64) {
+      /* Send the response */
       result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", rplyb64);
 
       if(!result)
         state(conn, IMAP_AUTHENTICATE_FINAL);
     }
-
-    Curl_safefree(rplyb64);
   }
 
+  Curl_safefree(chlg);
+  Curl_safefree(rplyb64);
+
   return result;
 }
 
 /* For AUTHENTICATE DIGEST-MD5 challenge responses */
 static CURLcode imap_state_auth_digest_resp(struct connectdata *conn,
                                             int imapcode,
                                             imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  char *chlg64 = data->state.buffer;
-  size_t len = 0;
+  char *chlg64 = NULL;
   char *rplyb64 = NULL;
+  size_t len = 0;
+
+  char nonce[64];
+  char realm[128];
+  char algorithm[64];
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != '+') {
     failf(data, "Access denied: %d", imapcode);
     return CURLE_LOGIN_DENIED;
   }
 
-  /* Get the challenge */
-  for(chlg64 += 2; *chlg64 == ' ' || *chlg64 == '\t'; chlg64++)
-    ;
+  /* Get the challenge message */
+  imap_get_message(data->state.buffer, &chlg64);
 
-  /* Create the response message */
-  result = Curl_sasl_create_digest_md5_message(data, chlg64, conn->user,
-                                               conn->passwd, "imap",
-                                               &rplyb64, &len);
+  /* Decode the challange message */
+  result = Curl_sasl_decode_digest_md5_message(chlg64, nonce, sizeof(nonce),
+                                               realm, sizeof(realm),
+                                               algorithm, sizeof(algorithm));
+  if(result || strcmp(algorithm, "md5-sess") != 0) {
+    /* Send the cancellation */
+    result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", "*");
 
-  /* Send the response */
-  if(!result) {
-    if(rplyb64) {
+    if(!result)
+      state(conn, IMAP_AUTHENTICATE_CANCEL);
+  }
+  else {
+    /* Create the response message */
+    result = Curl_sasl_create_digest_md5_message(data, nonce, realm,
+                                                 conn->user, conn->passwd,
+                                                 "imap", &rplyb64, &len);
+    if(!result && rplyb64) {
+      /* Send the response */
       result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", rplyb64);
 
       if(!result)
         state(conn, IMAP_AUTHENTICATE_DIGESTMD5_RESP);
     }
-
-    Curl_safefree(rplyb64);
   }
 
+  Curl_safefree(rplyb64);
+
   return result;
 }
 
 /* For AUTHENTICATE DIGEST-MD5 challenge-response responses */
 static CURLcode imap_state_auth_digest_resp_resp(struct connectdata *conn,
                                                  int imapcode,
@@ -1208,71 +1241,78 @@
   }
   else {
     /* Create the type-1 message */
     result = Curl_sasl_create_ntlm_type1_message(conn->user, conn->passwd,
                                                  &conn->ntlm,
                                                  &type1msg, &len);
+    if(!result && type1msg) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", type1msg);
 
-    /* Send the message */
-    if(!result) {
-      if(type1msg) {
-        result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", type1msg);
-
-        if(!result)
-          state(conn, IMAP_AUTHENTICATE_NTLM_TYPE2MSG);
-      }
-
-      Curl_safefree(type1msg);
+      if(!result)
+        state(conn, IMAP_AUTHENTICATE_NTLM_TYPE2MSG);
     }
   }
 
+  Curl_safefree(type1msg);
+
   return result;
 }
 
 /* For NTLM type-2 responses (sent in reponse to our type-1 message) */
 static CURLcode imap_state_auth_ntlm_type2msg_resp(struct connectdata *conn,
                                                    int imapcode,
                                                    imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  size_t len = 0;
+  char *type2msg = NULL;
   char *type3msg = NULL;
+  size_t len = 0;
 
   (void)instate; /* no use for this yet */
 
   if(imapcode != '+') {
     failf(data, "Access denied: %d", imapcode);
     result = CURLE_LOGIN_DENIED;
   }
   else {
-    /* Create the type-3 message */
-    result = Curl_sasl_create_ntlm_type3_message(data,
-                                                 data->state.buffer + 2,
-                                                 conn->user, conn->passwd,
-                                                 &conn->ntlm,
-                                                 &type3msg, &len);
+    /* Get the challenge message */
+    imap_get_message(data->state.buffer, &type2msg);
 
-    /* Send the message */
-    if(!result) {
-      if(type3msg) {
+    /* Decode the type-2 message */
+    result = Curl_sasl_decode_ntlm_type2_message(data, type2msg, &conn->ntlm);
+    if(result) {
+      /* Send the cancellation */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", "*");
+
+      if(!result)
+        state(conn, IMAP_AUTHENTICATE_CANCEL);
+    }
+    else {
+      /* Create the type-3 message */
+      result = Curl_sasl_create_ntlm_type3_message(data, conn->user,
+                                                   conn->passwd, &conn->ntlm,
+                                                   &type3msg, &len);
+      if(!result && type3msg) {
+        /* Send the message */
         result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", type3msg);
 
         if(!result)
           state(conn, IMAP_AUTHENTICATE_FINAL);
       }
-
-      Curl_safefree(type3msg);
     }
   }
 
+  Curl_safefree(type3msg);
+
   return result;
 }
 #endif
 
-/* For AUTH XOAUTH2 (without initial response) responses */
+/* For AUTHENTICATE XOAUTH2 (without initial response) responses */
 static CURLcode imap_state_auth_xoauth2_resp(struct connectdata *conn,
                                              int imapcode,
                                              imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -1287,30 +1327,42 @@
   }
   else {
     /* Create the authorisation message */
     result = Curl_sasl_create_xoauth2_message(conn->data, conn->user,
                                               conn->xoauth2_bearer,
                                               &xoauth, &len);
+    if(!result && xoauth) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", xoauth);
 
-    /* Send the message */
-    if(!result) {
-      if(xoauth) {
-        result = Curl_pp_sendf(&conn->proto.imapc.pp, "%s", xoauth);
-
-        if(!result)
-          state(conn, IMAP_AUTHENTICATE_FINAL);
-      }
-
-      Curl_safefree(xoauth);
+      if(!result)
+        state(conn, IMAP_AUTHENTICATE_FINAL);
     }
   }
 
+  Curl_safefree(xoauth);
+
   return result;
 }
 
-/* For final responses to the AUTHENTICATE sequence */
+/* For AUTHENTICATE cancellation responses */
+static CURLcode imap_state_auth_cancel_resp(struct connectdata *conn,
+                                            int imapcode,
+                                            imapstate instate)
+{
+  struct SessionHandle *data = conn->data;
+
+  (void)imapcode;
+  (void)instate; /* no use for this yet */
+
+  failf(data, "Authentication cancelled");
+
+  return CURLE_LOGIN_DENIED;
+}
+
+/* For final responses in the AUTHENTICATE sequence */
 static CURLcode imap_state_auth_final_resp(struct connectdata *conn,
                                            int imapcode,
                                            imapstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -1657,12 +1709,16 @@
 #endif
 
     case IMAP_AUTHENTICATE_XOAUTH2:
       result = imap_state_auth_xoauth2_resp(conn, imapcode, imapc->state);
       break;
 
+    case IMAP_AUTHENTICATE_CANCEL:
+      result = imap_state_auth_cancel_resp(conn, imapcode, imapc->state);
+      break;
+
     case IMAP_AUTHENTICATE_FINAL:
       result = imap_state_auth_final_resp(conn, imapcode, imapc->state);
       break;
 
     case IMAP_LOGIN:
       result = imap_state_login_resp(conn, imapcode, imapc->state);
@@ -1779,13 +1835,14 @@
   /* Set the default response time-out */
   pp->response_time = RESP_TIMEOUT;
   pp->statemach_act = imap_statemach_act;
   pp->endofresp = imap_endofresp;
   pp->conn = conn;
 
-  /* Set the default preferred authentication mechanism */
+  /* Set the default preferred authentication type and mechanism */
+  imapc->preftype = IMAP_TYPE_ANY;
   imapc->prefmech = SASL_AUTH_ANY;
 
   /* Initialise the pingpong layer */
   Curl_pp_init(pp);
 
   /* Parse the URL options */
@@ -1979,13 +2036,13 @@
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
      disconnect wait in vain and cause more problems than we need to. */
 
   /* The IMAP session may or may not have been allocated/setup at this
      point! */
-  if(!dead_connection && imapc->pp.conn)
+  if(!dead_connection && imapc->pp.conn && imapc->pp.conn->bits.protoconnstart)
     if(!imap_perform_logout(conn))
       (void)imap_block_statemach(conn); /* ignore errors on LOGOUT */
 
   /* Disconnect from the server */
   Curl_pp_disconnect(&imapc->pp);
 
@@ -2273,30 +2330,48 @@
     while(*ptr && *ptr != '=')
         ptr++;
 
     if(strnequal(key, "AUTH", 4)) {
       const char *value = ptr + 1;
 
-      if(strequal(value, "*"))
+      if(strequal(value, "*")) {
+        imapc->preftype = IMAP_TYPE_ANY;
         imapc->prefmech = SASL_AUTH_ANY;
-      else if(strequal(value, SASL_MECH_STRING_LOGIN))
+      }
+      else if(strequal(value, SASL_MECH_STRING_LOGIN)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_LOGIN;
-      else if(strequal(value, SASL_MECH_STRING_PLAIN))
+      }
+      else if(strequal(value, SASL_MECH_STRING_PLAIN)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_PLAIN;
-      else if(strequal(value, SASL_MECH_STRING_CRAM_MD5))
+      }
+      else if(strequal(value, SASL_MECH_STRING_CRAM_MD5)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_CRAM_MD5;
-      else if(strequal(value, SASL_MECH_STRING_DIGEST_MD5))
+      }
+      else if(strequal(value, SASL_MECH_STRING_DIGEST_MD5)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_DIGEST_MD5;
-      else if(strequal(value, SASL_MECH_STRING_GSSAPI))
+      }
+      else if(strequal(value, SASL_MECH_STRING_GSSAPI)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_GSSAPI;
-      else if(strequal(value, SASL_MECH_STRING_NTLM))
+      }
+      else if(strequal(value, SASL_MECH_STRING_NTLM)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_NTLM;
-      else if(strequal(value, SASL_MECH_STRING_XOAUTH2))
+      }
+      else if(strequal(value, SASL_MECH_STRING_XOAUTH2)) {
+        imapc->preftype = IMAP_TYPE_SASL;
         imapc->prefmech = SASL_MECH_XOAUTH2;
-      else
+      }
+      else {
+        imapc->preftype = IMAP_TYPE_NONE;
         imapc->prefmech = SASL_AUTH_NONE;
+      }
     }
     else
       result = CURLE_URL_MALFORMAT;
   }
 
   return result;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/imap.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/imap.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/imap.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/imap.h	2013-12-17 06:02:35.000000000 +0800
@@ -41,12 +41,13 @@
   IMAP_AUTHENTICATE_CRAMMD5,
   IMAP_AUTHENTICATE_DIGESTMD5,
   IMAP_AUTHENTICATE_DIGESTMD5_RESP,
   IMAP_AUTHENTICATE_NTLM,
   IMAP_AUTHENTICATE_NTLM_TYPE2MSG,
   IMAP_AUTHENTICATE_XOAUTH2,
+  IMAP_AUTHENTICATE_CANCEL,
   IMAP_AUTHENTICATE_FINAL,
   IMAP_LOGIN,
   IMAP_LIST,
   IMAP_SELECT,
   IMAP_FETCH,
   IMAP_FETCH_FINAL,
@@ -74,12 +75,13 @@
    struct */
 struct imap_conn {
   struct pingpong pp;
   imapstate state;            /* Always use imap.c:state() to change state! */
   bool ssldone;               /* Is connect() over SSL done? */
   unsigned int authmechs;     /* Accepted authentication mechanisms */
+  unsigned int preftype;      /* Preferred authentication type */
   unsigned int prefmech;      /* Preferred authentication mechanism */
   unsigned int authused;      /* Auth mechanism used for the connection */
   int cmdid;                  /* Last used command ID */
   char resptag[5];            /* Response tag to wait for */
   bool tls_supported;         /* StartTLS capability supported by server */
   bool login_disabled;        /* LOGIN command disabled by server */
@@ -88,7 +90,15 @@
   char *mailbox_uidvalidity;  /* UIDVALIDITY parsed from select response */
 };
 
 extern const struct Curl_handler Curl_handler_imap;
 extern const struct Curl_handler Curl_handler_imaps;
 
+/* Authentication type flags */
+#define IMAP_TYPE_CLEARTEXT (1 << 0)
+#define IMAP_TYPE_SASL      (1 << 1)
+
+/* Authentication type values */
+#define IMAP_TYPE_NONE      0
+#define IMAP_TYPE_ANY       ~0U
+
 #endif /* HEADER_CURL_IMAP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/libcurl.plist /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/libcurl.plist
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/libcurl.plist	2013-10-14 22:43:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/libcurl.plist	2013-12-17 15:51:32.000000000 +0800
@@ -12,24 +12,24 @@
 	<string>curl</string>
 
 	<key>CFBundleIdentifier</key>
 	<string>se.haxx.curl.libcurl</string>
 
 	<key>CFBundleVersion</key>
-	<string>7.33.0</string>
+	<string>7.34.0</string>
 
 	<key>CFBundleName</key>
 	<string>libcurl</string>
 
 	<key>CFBundlePackageType</key>
 	<string>FMWK</string>
 
 	<key>CFBundleSignature</key>
 	<string>????</string>
 
 	<key>CFBundleShortVersionString</key>
-	<string>libcurl 7.33.0</string>
+	<string>libcurl 7.34.0</string>
 
 	<key>CFBundleGetInfoString</key>
-	<string>libcurl.plist 7.33.0</string>
+	<string>libcurl.plist 7.34.0</string>
 </dict>
 </plist>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -391,13 +391,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
@@ -677,13 +676,13 @@
   warnless.h curl_hmac.h polarssl.h polarssl_threadlock.h curl_rtmp.h	\
   curl_gethostname.h gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h	\
   asyn.h curl_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h	\
   curl_ntlm_msgs.h curl_sasl.h curl_schannel.h curl_multibyte.h		\
   curl_darwinssl.h hostcheck.h bundles.h conncache.h curl_setup_once.h	\
   multihandle.h setup-vms.h pipeline.h dotdot.h x509asn1.h gskit.h	\
-  http2.h
+  http2.h sigpipe.h
 
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
 libcurl_la_SOURCES = $(CSOURCES) $(HHEADERS)
 libcurlu_la_SOURCES = $(CSOURCES) $(HHEADERS)
 all: curl_config.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/Makefile.inc	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/Makefile.inc	2013-12-17 06:02:35.000000000 +0800
@@ -43,7 +43,7 @@
   warnless.h curl_hmac.h polarssl.h polarssl_threadlock.h curl_rtmp.h	\
   curl_gethostname.h gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h	\
   asyn.h curl_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h	\
   curl_ntlm_msgs.h curl_sasl.h curl_schannel.h curl_multibyte.h		\
   curl_darwinssl.h hostcheck.h bundles.h conncache.h curl_setup_once.h	\
   multihandle.h setup-vms.h pipeline.h dotdot.h x509asn1.h gskit.h	\
-  http2.h
+  http2.h sigpipe.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/multi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/multi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/multi.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/multi.c	2013-12-17 06:02:35.000000000 +0800
@@ -38,12 +38,13 @@
 #include "warnless.h"
 #include "speedcheck.h"
 #include "conncache.h"
 #include "bundles.h"
 #include "multihandle.h"
 #include "pipeline.h"
+#include "sigpipe.h"
 
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
 #include "curl_memory.h"
 /* The last #include file should be: */
@@ -618,23 +619,34 @@
 }
 
 static int waitconnect_getsock(struct connectdata *conn,
                                curl_socket_t *sock,
                                int numsocks)
 {
+  int i;
+  int s=0;
+  int rc=0;
+
   if(!numsocks)
     return GETSOCK_BLANK;
 
-  sock[0] = conn->sock[FIRSTSOCKET];
+  for(i=0; i<2; i++) {
+    if(conn->tempsock[i] != CURL_SOCKET_BAD) {
+      sock[s] = conn->tempsock[i];
+      rc |= GETSOCK_WRITESOCK(s++);
+    }
+  }
 
   /* when we've sent a CONNECT to a proxy, we should rather wait for the
      socket to become readable to be able to get the response headers */
-  if(conn->tunnel_state[FIRSTSOCKET] == TUNNEL_CONNECT)
-    return GETSOCK_READSOCK(0);
+  if(conn->tunnel_state[FIRSTSOCKET] == TUNNEL_CONNECT) {
+    sock[0] = conn->sock[FIRSTSOCKET];
+    rc = GETSOCK_READSOCK(0);
+  }
 
-  return GETSOCK_WRITESOCK(0);
+  return rc;
 }
 
 static int domore_getsock(struct connectdata *conn,
                           curl_socket_t *socks,
                           int numsocks)
 {
@@ -775,15 +787,15 @@
 
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   /* If the internally desired timeout is actually shorter than requested from
      the outside, then use the shorter time! But only if the internal timer
-     is actually larger than 0! */
+     is actually larger than -1! */
   (void)multi_timeout(multi, &timeout_internal);
-  if((timeout_internal > 0) && (timeout_internal < (long)timeout_ms))
+  if((timeout_internal >= 0) && (timeout_internal < (long)timeout_ms))
     timeout_ms = (int)timeout_internal;
 
   /* Count up how many fds we have from the multi handle */
   data=multi->easyp;
   while(data) {
     bitmap = multi_getsock(data, sockbunch, MAX_SOCKSPEREASYHANDLE);
@@ -862,12 +874,13 @@
       ufds[nfds].events |= POLLOUT;
     ++nfds;
   }
 
   if(nfds) {
     /* wait... */
+    infof(data, "Curl_poll(%d ds, %d ms)\n", nfds, timeout_ms);
     i = Curl_poll(ufds, nfds, timeout_ms);
 
     if(i) {
       unsigned int j;
       /* copy revents results from the poll to the curl_multi_wait poll
          struct, the bit values of the actual underlying poll() implementation
@@ -1771,18 +1784,24 @@
 {
   struct Curl_multi *multi=(struct Curl_multi *)multi_handle;
   struct SessionHandle *data;
   struct SessionHandle *nextdata;
 
   if(GOOD_MULTI_HANDLE(multi)) {
+    bool restore_pipe = FALSE;
+    SIGPIPE_VARIABLE(pipe_st);
+
     multi->type = 0; /* not good anymore */
 
     /* Close all the connections in the connection cache */
     close_all_connections(multi);
 
     if(multi->closure_handle) {
+      sigpipe_ignore(multi->closure_handle, &pipe_st);
+      restore_pipe = TRUE;
+
       multi->closure_handle->dns.hostcache = multi->hostcache;
       Curl_hostcache_clean(multi->closure_handle,
                            multi->closure_handle->dns.hostcache);
 
       Curl_close(multi->closure_handle);
       multi->closure_handle = NULL;
@@ -1821,12 +1840,14 @@
 
     /* Free the blacklists by setting them to NULL */
     Curl_pipeline_set_site_blacklist(NULL, &multi->pipelining_site_bl);
     Curl_pipeline_set_server_blacklist(NULL, &multi->pipelining_server_bl);
 
     free(multi);
+    if(restore_pipe)
+      sigpipe_restore(&pipe_st);
 
     return CURLM_OK;
   }
   else
     return CURLM_BAD_HANDLE;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/multiif.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/multiif.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/multiif.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/multiif.h	2013-12-17 06:02:35.000000000 +0800
@@ -27,12 +27,14 @@
 #ifdef WIN32
 #define MULTI_TIMEOUT_INACCURACY 40000
 #else
 #define MULTI_TIMEOUT_INACCURACY 3000
 #endif
 
+#define MULTI_TIMEOUT_INACCURACY_MS (MULTI_TIMEOUT_INACCURACY / 1000)
+
 /*
  * Prototypes for library-wide functions provided by multi.c
  */
 void Curl_expire(struct SessionHandle *data, long milli);
 
 bool Curl_multi_pipeline_enabled(const struct Curl_multi* multi);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/nss.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/nss.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/nss.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/nss.c	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -60,12 +60,13 @@
 #include <cert.h>
 #include <prerror.h>
 
 #include "curl_memory.h"
 #include "rawstr.h"
 #include "warnless.h"
+#include "x509asn1.h"
 
 /* The last #include file should be: */
 #include "memdebug.h"
 
 #define SSL_DIR "/etc/pki/nssdb"
 
@@ -73,15 +74,13 @@
 #define SLOTSIZE 13
 
 PRFileDesc *PR_ImportTCPSocket(PRInt32 osfd);
 
 PRLock * nss_initlock = NULL;
 PRLock * nss_crllock = NULL;
-#ifdef HAVE_NSS_INITCONTEXT
 NSSInitContext * nss_context = NULL;
-#endif
 
 volatile int initialized = 0;
 
 typedef struct {
   const char *name;
   int num;
@@ -650,27 +649,65 @@
 
 static void display_conn_info(struct connectdata *conn, PRFileDesc *sock)
 {
   SSLChannelInfo channel;
   SSLCipherSuiteInfo suite;
   CERTCertificate *cert;
+  CERTCertificate *cert2;
+  CERTCertificate *cert3;
+  PRTime now;
+  int i;
 
   if(SSL_GetChannelInfo(sock, &channel, sizeof channel) ==
      SECSuccess && channel.length == sizeof channel &&
      channel.cipherSuite) {
     if(SSL_GetCipherSuiteInfo(channel.cipherSuite,
                               &suite, sizeof suite) == SECSuccess) {
       infof(conn->data, "SSL connection using %s\n", suite.cipherSuiteName);
     }
   }
 
-  infof(conn->data, "Server certificate:\n");
-
   cert = SSL_PeerCertificate(sock);
-  display_cert_info(conn->data, cert);
-  CERT_DestroyCertificate(cert);
+
+  if(cert) {
+    infof(conn->data, "Server certificate:\n");
+
+    if(!conn->data->set.ssl.certinfo) {
+      display_cert_info(conn->data, cert);
+      CERT_DestroyCertificate(cert);
+    }
+    else {
+      /* Count certificates in chain. */
+      now = PR_Now();
+      i = 1;
+      if(!cert->isRoot) {
+        cert2 = CERT_FindCertIssuer(cert, now, certUsageSSLCA);
+        while(cert2) {
+          i++;
+          if(cert2->isRoot) {
+            CERT_DestroyCertificate(cert2);
+            break;
+          }
+          cert3 = CERT_FindCertIssuer(cert2, now, certUsageSSLCA);
+          CERT_DestroyCertificate(cert2);
+          cert2 = cert3;
+        }
+      }
+      Curl_ssl_init_certinfo(conn->data, i);
+      for(i = 0; cert; cert = cert2) {
+        Curl_extract_certinfo(conn, i++, (char *)cert->derCert.data,
+                              (char *)cert->derCert.data + cert->derCert.len);
+        if(cert->isRoot) {
+          CERT_DestroyCertificate(cert);
+          break;
+        }
+        cert2 = CERT_FindCertIssuer(cert, now, certUsageSSLCA);
+        CERT_DestroyCertificate(cert);
+      }
+    }
+  }
 
   return;
 }
 
 static SECStatus BadCertHandler(void *arg, PRFileDesc *sock)
 {
@@ -851,63 +888,43 @@
     return PR_FALSE;
   }
 }
 
 static CURLcode nss_init_core(struct SessionHandle *data, const char *cert_dir)
 {
-#ifdef HAVE_NSS_INITCONTEXT
   NSSInitParameters initparams;
 
   if(nss_context != NULL)
     return CURLE_OK;
 
   memset((void *) &initparams, '\0', sizeof(initparams));
   initparams.length = sizeof(initparams);
-#else /* HAVE_NSS_INITCONTEXT */
-  SECStatus rv;
-
-  if(NSS_IsInitialized())
-    return CURLE_OK;
-#endif
 
   if(cert_dir) {
     const bool use_sql = NSS_VersionCheck("3.12.0");
     char *certpath = aprintf("%s%s", use_sql ? "sql:" : "", cert_dir);
     if(!certpath)
       return CURLE_OUT_OF_MEMORY;
 
     infof(data, "Initializing NSS with certpath: %s\n", certpath);
-#ifdef HAVE_NSS_INITCONTEXT
     nss_context = NSS_InitContext(certpath, "", "", "", &initparams,
             NSS_INIT_READONLY | NSS_INIT_PK11RELOAD);
     free(certpath);
 
     if(nss_context != NULL)
       return CURLE_OK;
-#else /* HAVE_NSS_INITCONTEXT */
-    rv = NSS_Initialize(certpath, "", "", "", NSS_INIT_READONLY);
-    free(certpath);
-
-    if(rv == SECSuccess)
-      return CURLE_OK;
-#endif
 
     infof(data, "Unable to initialize NSS database\n");
   }
 
   infof(data, "Initializing NSS with certpath: none\n");
-#ifdef HAVE_NSS_INITCONTEXT
   nss_context = NSS_InitContext("", "", "", "", &initparams, NSS_INIT_READONLY
          | NSS_INIT_NOCERTDB   | NSS_INIT_NOMODDB       | NSS_INIT_FORCEOPEN
          | NSS_INIT_NOROOTINIT | NSS_INIT_OPTIMIZESPACE | NSS_INIT_PK11RELOAD);
   if(nss_context != NULL)
     return CURLE_OK;
-#else /* HAVE_NSS_INITCONTEXT */
-  if(NSS_NoDB_Init(NULL) == SECSuccess)
-    return CURLE_OK;
-#endif
 
   infof(data, "Unable to initialize NSS\n");
   return CURLE_SSL_CACERT_BADFILE;
 }
 
 static CURLcode nss_init(struct SessionHandle *data)
@@ -997,18 +1014,14 @@
     SSL_ClearSessionCache();
 
     if(mod && SECSuccess == SECMOD_UnloadUserModule(mod)) {
       SECMOD_DestroyModule(mod);
       mod = NULL;
     }
-#ifdef HAVE_NSS_INITCONTEXT
     NSS_ShutdownContext(nss_context);
     nss_context = NULL;
-#else /* HAVE_NSS_INITCONTEXT */
-    NSS_Shutdown();
-#endif
   }
   PR_Unlock(nss_initlock);
 
   PR_DestroyLock(nss_initlock);
   PR_DestroyLock(nss_crllock);
   nss_initlock = NULL;
@@ -1169,30 +1182,91 @@
       cafile ? cafile : "none",
       capath ? capath : "none");
 
   return CURLE_OK;
 }
 
+static CURLcode nss_init_sslver(SSLVersionRange *sslver,
+                                struct SessionHandle *data)
+{
+  switch (data->set.ssl.version) {
+  default:
+  case CURL_SSLVERSION_DEFAULT:
+    if(data->state.ssl_connect_retry) {
+      infof(data, "TLS disabled due to previous handshake failure\n");
+      sslver->max = SSL_LIBRARY_VERSION_3_0;
+    }
+    return CURLE_OK;
+
+  case CURL_SSLVERSION_TLSv1:
+    sslver->min = SSL_LIBRARY_VERSION_TLS_1_0;
+#ifdef SSL_LIBRARY_VERSION_TLS_1_2
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_2;
+#elif defined SSL_LIBRARY_VERSION_TLS_1_1
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_1;
+#else
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_0;
+#endif
+    return CURLE_OK;
+
+  case CURL_SSLVERSION_SSLv2:
+    sslver->min = SSL_LIBRARY_VERSION_2;
+    sslver->max = SSL_LIBRARY_VERSION_2;
+    return CURLE_OK;
+
+  case CURL_SSLVERSION_SSLv3:
+    sslver->min = SSL_LIBRARY_VERSION_3_0;
+    sslver->max = SSL_LIBRARY_VERSION_3_0;
+    return CURLE_OK;
+
+  case CURL_SSLVERSION_TLSv1_0:
+    sslver->min = SSL_LIBRARY_VERSION_TLS_1_0;
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_0;
+    return CURLE_OK;
+
+  case CURL_SSLVERSION_TLSv1_1:
+#ifdef SSL_LIBRARY_VERSION_TLS_1_1
+    sslver->min = SSL_LIBRARY_VERSION_TLS_1_1;
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_1;
+    return CURLE_OK;
+#endif
+    break;
+
+  case CURL_SSLVERSION_TLSv1_2:
+#ifdef SSL_LIBRARY_VERSION_TLS_1_2
+    sslver->min = SSL_LIBRARY_VERSION_TLS_1_2;
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_2;
+    return CURLE_OK;
+#endif
+    break;
+  }
+
+  failf(data, "TLS minor version cannot be set");
+  return CURLE_SSL_CONNECT_ERROR;
+}
+
 CURLcode Curl_nss_connect(struct connectdata *conn, int sockindex)
 {
   PRErrorCode err = 0;
   PRFileDesc *model = NULL;
-  PRBool ssl2 = PR_FALSE;
-  PRBool ssl3 = PR_FALSE;
-  PRBool tlsv1 = PR_FALSE;
   PRBool ssl_no_cache;
   PRBool ssl_cbc_random_iv;
   struct SessionHandle *data = conn->data;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   CURLcode curlerr;
   const int *cipher_to_enable;
   PRSocketOptionData sock_opt;
   long time_left;
   PRUint32 timeout;
 
+  SSLVersionRange sslver = {
+    SSL_LIBRARY_VERSION_3_0,      /* min */
+    SSL_LIBRARY_VERSION_TLS_1_0   /* max */
+  };
+
   if(connssl->state == ssl_connection_complete)
     return CURLE_OK;
 
   connssl->data = data;
 
   /* list of all NSS objects we need to destroy in Curl_nss_close() */
@@ -1241,45 +1315,22 @@
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_SERVER, PR_FALSE) != SECSuccess)
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_CLIENT, PR_TRUE) != SECSuccess)
     goto error;
 
-  /* do not use SSL cache if we are not going to verify peer */
-  ssl_no_cache = (data->set.ssl.verifypeer) ? PR_FALSE : PR_TRUE;
+  /* do not use SSL cache if disabled or we are not going to verify peer */
+  ssl_no_cache = (conn->ssl_config.sessionid && data->set.ssl.verifypeer) ?
+    PR_FALSE : PR_TRUE;
   if(SSL_OptionSet(model, SSL_NO_CACHE, ssl_no_cache) != SECSuccess)
     goto error;
 
-  switch (data->set.ssl.version) {
-  default:
-  case CURL_SSLVERSION_DEFAULT:
-    ssl3 = PR_TRUE;
-    if(data->state.ssl_connect_retry)
-      infof(data, "TLS disabled due to previous handshake failure\n");
-    else
-      tlsv1 = PR_TRUE;
-    break;
-  case CURL_SSLVERSION_TLSv1:
-    tlsv1 = PR_TRUE;
-    break;
-  case CURL_SSLVERSION_SSLv2:
-    ssl2 = PR_TRUE;
-    break;
-  case CURL_SSLVERSION_SSLv3:
-    ssl3 = PR_TRUE;
-    break;
-  }
-
-  if(SSL_OptionSet(model, SSL_ENABLE_SSL2, ssl2) != SECSuccess)
-    goto error;
-  if(SSL_OptionSet(model, SSL_ENABLE_SSL3, ssl3) != SECSuccess)
+  /* enable/disable the requested SSL version(s) */
+  if(nss_init_sslver(&sslver, data) != CURLE_OK)
     goto error;
-  if(SSL_OptionSet(model, SSL_ENABLE_TLS, tlsv1) != SECSuccess)
-    goto error;
-
-  if(SSL_OptionSet(model, SSL_V2_COMPATIBLE_HELLO, ssl2) != SECSuccess)
+  if(SSL_VersionRangeSet(model, &sslver) != SECSuccess)
     goto error;
 
   ssl_cbc_random_iv = !data->set.ssl_enable_beast;
 #ifdef SSL_CBC_RANDOM_IV
   /* unless the user explicitly asks to allow the protocol vulnerability, we
      use the work-around */
@@ -1459,17 +1510,19 @@
     nss_print_error_message(data, err);
   }
 
   if(model)
     PR_Close(model);
 
-    /* cleanup on connection failure */
-    Curl_llist_destroy(connssl->obj_list, NULL);
-    connssl->obj_list = NULL;
-
-  if(ssl3 && tlsv1 && isTLSIntoleranceError(err)) {
+  /* cleanup on connection failure */
+  Curl_llist_destroy(connssl->obj_list, NULL);
+  connssl->obj_list = NULL;
+
+  if((sslver.min == SSL_LIBRARY_VERSION_3_0)
+      && (sslver.max == SSL_LIBRARY_VERSION_TLS_1_0)
+      && isTLSIntoleranceError(err)) {
     /* schedule reconnect through Curl_retry_request() */
     data->state.ssl_connect_retry = TRUE;
     infof(data, "Error in TLS handshake, trying SSLv3...\n");
     return CURLE_OK;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/parsedate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/parsedate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/parsedate.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/parsedate.c	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -523,13 +523,13 @@
   /* time zone adjust (cast t to int to compare to negative one) */
   if(-1 != (int)t) {
 
     /* Add the time zone diff between local time zone and GMT. */
     long delta = (long)(tzoff!=-1?tzoff:0);
 
-    if((delta>0) && (t + delta < t))
+    if((delta>0) && (t > LONG_MAX  - delta))
       return -1; /* time_t overflow */
 
     t += delta;
   }
 
   *output = t;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/pop3.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/pop3.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/pop3.c	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/pop3.c	2013-12-17 06:02:35.000000000 +0800
@@ -26,12 +26,13 @@
  * RFC2595 Using TLS with IMAP, POP3 and ACAP
  * RFC2831 DIGEST-MD5 authentication
  * RFC4422 Simple Authentication and Security Layer (SASL)
  * RFC4616 PLAIN authentication
  * RFC5034 POP3 SASL Authentication Mechanism
  * RFC6749 OAuth 2.0 Authorization Framework
+ * Draft   LOGIN SASL Mechanism <draft-murchison-sasl-login-00.txt>
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #ifndef CURL_DISABLE_POP3
@@ -348,12 +349,41 @@
 
   return FALSE; /* Nothing for us */
 }
 
 /***********************************************************************
  *
+ * pop3_get_message()
+ *
+ * Gets the authentication message from the response buffer.
+ */
+static void pop3_get_message(char *buffer, char** outptr)
+{
+  size_t len = 0;
+  char* message = NULL;
+
+  /* Find the start of the message */
+  for(message = buffer + 2; *message == ' ' || *message == '\t'; message++)
+    ;
+
+  /* Find the end of the message */
+  for(len = strlen(message); len--;)
+    if(message[len] != '\r' && message[len] != '\n' && message[len] != ' ' &&
+        message[len] != '\t')
+      break;
+
+  /* Terminate the message */
+  if(++len) {
+    message[len] = '\0';
+  }
+
+  *outptr = message;
+}
+
+/***********************************************************************
+ *
  * state()
  *
  * This is the ONLY way to change POP3 state!
  */
 static void state(struct connectdata *conn, pop3state newstate)
 {
@@ -372,12 +402,13 @@
     "AUTH_CRAMMD5",
     "AUTH_DIGESTMD5",
     "AUTH_DIGESTMD5_RESP",
     "AUTH_NTLM",
     "AUTH_NTLM_TYPE2MSG",
     "AUTH_XOAUTH2",
+    "AUTH_CANCEL",
     "AUTH_FINAL",
     "APOP",
     "USER",
     "PASS",
     "COMMAND",
     "QUIT",
@@ -567,14 +598,14 @@
   if(!conn->bits.user_passwd) {
     state(conn, POP3_STOP);
 
     return result;
   }
 
-  /* Calculate the supported authentication mechanism by decreasing order of
-     security */
+  /* Calculate the supported authentication mechanism, by decreasing order of
+     security, as well as the initial response where appropriate */
   if(pop3c->authtypes & POP3_TYPE_SASL) {
 #ifndef CURL_DISABLE_CRYPTO_AUTH
     if((pop3c->authmechs & SASL_MECH_DIGEST_MD5) &&
        (pop3c->prefmech & SASL_MECH_DIGEST_MD5)) {
       mech = SASL_MECH_STRING_DIGEST_MD5;
       state1 = POP3_AUTH_DIGESTMD5;
@@ -831,26 +862,23 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the authorisation message */
     result = Curl_sasl_create_plain_message(data, conn->user, conn->passwd,
                                             &plainauth, &len);
+    if(!result && plainauth) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", plainauth);
 
-    /* Send the message */
-    if(!result) {
-      if(plainauth) {
-        result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", plainauth);
-
-        if(!result)
-          state(conn, POP3_AUTH_FINAL);
-      }
-
-      Curl_safefree(plainauth);
+      if(!result)
+        state(conn, POP3_AUTH_FINAL);
     }
   }
 
+  Curl_safefree(plainauth);
+
   return result;
 }
 
 /* For AUTH LOGIN (without initial response) responses */
 static CURLcode pop3_state_auth_login_resp(struct connectdata *conn,
                                            int pop3code,
@@ -868,26 +896,23 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the user message */
     result = Curl_sasl_create_login_message(data, conn->user,
                                             &authuser, &len);
+    if(!result && authuser) {
+      /* Send the user */
+      result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", authuser);
 
-    /* Send the user */
-    if(!result) {
-      if(authuser) {
-        result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", authuser);
-
-        if(!result)
-          state(conn, POP3_AUTH_LOGIN_PASSWD);
-      }
-
-      Curl_safefree(authuser);
+      if(!result)
+        state(conn, POP3_AUTH_LOGIN_PASSWD);
     }
   }
 
+  Curl_safefree(authuser);
+
   return result;
 }
 
 /* For AUTH LOGIN user entry responses */
 static CURLcode pop3_state_auth_login_password_resp(struct connectdata *conn,
                                                     int pop3code,
@@ -905,122 +930,129 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the password message */
     result = Curl_sasl_create_login_message(data, conn->passwd,
                                             &authpasswd, &len);
+    if(!result && authpasswd) {
+      /* Send the password */
+      result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", authpasswd);
 
-    /* Send the password */
-    if(!result) {
-      if(authpasswd) {
-        result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", authpasswd);
-
-        if(!result)
-          state(conn, POP3_AUTH_FINAL);
-      }
-
-      Curl_safefree(authpasswd);
+      if(!result)
+        state(conn, POP3_AUTH_FINAL);
     }
   }
 
+  Curl_safefree(authpasswd);
+
   return result;
 }
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 /* For AUTH CRAM-MD5 responses */
 static CURLcode pop3_state_auth_cram_resp(struct connectdata *conn,
                                           int pop3code,
                                           pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  char *chlg64 = data->state.buffer;
-  size_t len = 0;
+  char *chlg = NULL;
+  char *chlg64 = NULL;
   char *rplyb64 = NULL;
+  size_t len = 0;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied: %d", pop3code);
     return CURLE_LOGIN_DENIED;
   }
 
-  /* Get the challenge */
-  for(chlg64 += 2; *chlg64 == ' ' || *chlg64 == '\t'; chlg64++)
-    ;
+  /* Get the challenge message */
+  pop3_get_message(data->state.buffer, &chlg64);
 
-  /* Terminate the challenge */
-  if(*chlg64 != '=') {
-    for(len = strlen(chlg64); len--;)
-      if(chlg64[len] != '\r' && chlg64[len] != '\n' && chlg64[len] != ' ' &&
-         chlg64[len] != '\t')
-        break;
+  /* Decode the challenge message */
+  result = Curl_sasl_decode_cram_md5_message(chlg64, &chlg, &len);
+  if(result) {
+    /* Send the cancellation */
+    result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", "*");
 
-    if(++len) {
-      chlg64[len] = '\0';
-    }
+    if(!result)
+      state(conn, POP3_AUTH_CANCEL);
   }
-
-  /* Create the response message */
-  result = Curl_sasl_create_cram_md5_message(data, chlg64, conn->user,
-                                             conn->passwd, &rplyb64, &len);
-
-  /* Send the response */
-  if(!result) {
-    if(rplyb64) {
+  else {
+    /* Create the response message */
+    result = Curl_sasl_create_cram_md5_message(data, chlg, conn->user,
+                                               conn->passwd, &rplyb64, &len);
+    if(!result && rplyb64) {
+      /* Send the response */
       result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", rplyb64);
 
       if(!result)
         state(conn, POP3_AUTH_FINAL);
     }
-
-    Curl_safefree(rplyb64);
   }
 
+  Curl_safefree(chlg);
+  Curl_safefree(rplyb64);
+
   return result;
 }
 
 /* For AUTH DIGEST-MD5 challenge responses */
 static CURLcode pop3_state_auth_digest_resp(struct connectdata *conn,
                                             int pop3code,
                                             pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  char *chlg64 = data->state.buffer;
-  size_t len = 0;
+  char *chlg64 = NULL;
   char *rplyb64 = NULL;
+  size_t len = 0;
+
+  char nonce[64];
+  char realm[128];
+  char algorithm[64];
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied: %d", pop3code);
     return CURLE_LOGIN_DENIED;
   }
 
-  /* Get the challenge */
-  for(chlg64 += 2; *chlg64 == ' ' || *chlg64 == '\t'; chlg64++)
-    ;
+  /* Get the challenge message */
+  pop3_get_message(data->state.buffer, &chlg64);
 
-  /* Create the response message */
-  result = Curl_sasl_create_digest_md5_message(data, chlg64, conn->user,
-                                               conn->passwd, "pop",
-                                               &rplyb64, &len);
+  /* Decode the challange message */
+  result = Curl_sasl_decode_digest_md5_message(chlg64, nonce, sizeof(nonce),
+                                               realm, sizeof(realm),
+                                               algorithm, sizeof(algorithm));
+  if(result || strcmp(algorithm, "md5-sess") != 0) {
+    /* Send the cancellation */
+    result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", "*");
 
-  /* Send the response */
-  if(!result) {
-    if(rplyb64) {
+    if(!result)
+      state(conn, POP3_AUTH_CANCEL);
+  }
+  else {
+    /* Create the response message */
+    result = Curl_sasl_create_digest_md5_message(data, nonce, realm,
+                                                 conn->user, conn->passwd,
+                                                 "pop", &rplyb64, &len);
+    if(!result && rplyb64) {
+      /* Send the response */
       result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", rplyb64);
 
       if(!result)
         state(conn, POP3_AUTH_DIGESTMD5_RESP);
     }
-
-    Curl_safefree(rplyb64);
   }
 
+  Curl_safefree(rplyb64);
+
   return result;
 }
 
 /* For AUTH DIGEST-MD5 challenge-response responses */
 static CURLcode pop3_state_auth_digest_resp_resp(struct connectdata *conn,
                                                  int pop3code,
@@ -1066,66 +1098,73 @@
   }
   else {
     /* Create the type-1 message */
     result = Curl_sasl_create_ntlm_type1_message(conn->user, conn->passwd,
                                                  &conn->ntlm,
                                                  &type1msg, &len);
+    if(!result && type1msg) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", type1msg);
 
-    /* Send the message */
-    if(!result) {
-      if(type1msg) {
-        result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", type1msg);
-
-        if(!result)
-          state(conn, POP3_AUTH_NTLM_TYPE2MSG);
-      }
-
-      Curl_safefree(type1msg);
+      if(!result)
+        state(conn, POP3_AUTH_NTLM_TYPE2MSG);
     }
   }
 
+  Curl_safefree(type1msg);
+
   return result;
 }
 
 /* For NTLM type-2 responses (sent in reponse to our type-1 message) */
 static CURLcode pop3_state_auth_ntlm_type2msg_resp(struct connectdata *conn,
                                                    int pop3code,
                                                    pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  size_t len = 0;
+  char *type2msg = NULL;
   char *type3msg = NULL;
+  size_t len = 0;
 
   (void)instate; /* no use for this yet */
 
   if(pop3code != '+') {
     failf(data, "Access denied: %d", pop3code);
     result = CURLE_LOGIN_DENIED;
   }
   else {
-    /* Create the type-3 message */
-    result = Curl_sasl_create_ntlm_type3_message(data,
-                                                 data->state.buffer + 2,
-                                                 conn->user, conn->passwd,
-                                                 &conn->ntlm,
-                                                 &type3msg, &len);
+    /* Get the type-2 message */
+    pop3_get_message(data->state.buffer, &type2msg);
 
-    /* Send the message */
-    if(!result) {
-      if(type3msg) {
+    /* Decode the type-2 message */
+    result = Curl_sasl_decode_ntlm_type2_message(data, type2msg, &conn->ntlm);
+    if(result) {
+      /* Send the cancellation */
+      result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", "*");
+
+      if(!result)
+        state(conn, POP3_AUTH_CANCEL);
+    }
+    else {
+      /* Create the type-3 message */
+      result = Curl_sasl_create_ntlm_type3_message(data, conn->user,
+                                                   conn->passwd, &conn->ntlm,
+                                                   &type3msg, &len);
+      if(!result && type3msg) {
+        /* Send the message */
         result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", type3msg);
 
         if(!result)
           state(conn, POP3_AUTH_FINAL);
       }
-
-      Curl_safefree(type3msg);
     }
   }
 
+  Curl_safefree(type3msg);
+
   return result;
 }
 #endif
 
 /* For AUTH XOAUTH2 (without initial response) responses */
 static CURLcode pop3_state_auth_xoauth2_resp(struct connectdata *conn,
@@ -1144,30 +1183,42 @@
   }
   else {
     /* Create the authorisation message */
     result = Curl_sasl_create_xoauth2_message(conn->data, conn->user,
                                               conn->xoauth2_bearer,
                                               &xoauth, &len);
+    if(!result && xoauth) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", xoauth);
 
-    /* Send the message */
-    if(!result) {
-      if(xoauth) {
-        result = Curl_pp_sendf(&conn->proto.pop3c.pp, "%s", xoauth);
-
-        if(!result)
-          state(conn, POP3_AUTH_FINAL);
-      }
-
-      Curl_safefree(xoauth);
+      if(!result)
+        state(conn, POP3_AUTH_FINAL);
     }
   }
 
+  Curl_safefree(xoauth);
+
   return result;
 }
 
-/* For final responses to the AUTH sequence */
+/* For AUTH cancellation responses */
+static CURLcode pop3_state_auth_cancel_resp(struct connectdata *conn,
+                                            int pop3code,
+                                            pop3state instate)
+{
+  struct SessionHandle *data = conn->data;
+
+  (void)pop3code;
+  (void)instate; /* no use for this yet */
+
+  failf(data, "Authentication cancelled");
+
+  return CURLE_LOGIN_DENIED;
+}
+
+/* For final responses in the AUTH sequence */
 static CURLcode pop3_state_auth_final_resp(struct connectdata *conn,
                                            int pop3code,
                                            pop3state instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -1383,12 +1434,16 @@
 #endif
 
     case POP3_AUTH_XOAUTH2:
       result = pop3_state_auth_xoauth2_resp(conn, pop3code, pop3c->state);
       break;
 
+    case POP3_AUTH_CANCEL:
+      result = pop3_state_auth_cancel_resp(conn, pop3code, pop3c->state);
+      break;
+
     case POP3_AUTH_FINAL:
       result = pop3_state_auth_final_resp(conn, pop3code, pop3c->state);
       break;
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
     case POP3_APOP:
@@ -1567,18 +1622,18 @@
  */
 static CURLcode pop3_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is POP3 and no proxy */
   CURLcode result = CURLE_OK;
+  struct POP3 *pop3 = conn->data->req.protop;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
   if(conn->data->set.opt_no_body) {
     /* Requested no body means no transfer */
-    struct POP3 *pop3 = conn->data->req.protop;
     pop3->transfer = FTPTRANSFER_INFO;
   }
 
   *dophase_done = FALSE; /* not done yet */
 
   /* Start the first command in the DO phase */
@@ -1631,24 +1686,23 @@
  *
  * pop3_disconnect()
  *
  * Disconnect from an POP3 server. Cleanup protocol-specific per-connection
  * resources. BLOCKING.
  */
-static CURLcode pop3_disconnect(struct connectdata *conn,
-                                bool dead_connection)
+static CURLcode pop3_disconnect(struct connectdata *conn, bool dead_connection)
 {
   struct pop3_conn *pop3c = &conn->proto.pop3c;
 
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
      disconnect wait in vain and cause more problems than we need to. */
 
   /* The POP3 session may or may not have been allocated/setup at this
      point! */
-  if(!dead_connection && pop3c->pp.conn)
+  if(!dead_connection && pop3c->pp.conn && pop3c->pp.conn->bits.protoconnstart)
     if(!pop3_perform_quit(conn))
       (void)pop3_block_statemach(conn); /* ignore errors on QUIT */
 
   /* Disconnect from the server */
   Curl_pp_disconnect(&pop3c->pp);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/pop3.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/pop3.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/pop3.h	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/pop3.h	2013-12-17 06:02:35.000000000 +0800
@@ -41,12 +41,13 @@
   POP3_AUTH_CRAMMD5,
   POP3_AUTH_DIGESTMD5,
   POP3_AUTH_DIGESTMD5_RESP,
   POP3_AUTH_NTLM,
   POP3_AUTH_NTLM_TYPE2MSG,
   POP3_AUTH_XOAUTH2,
+  POP3_AUTH_CANCEL,
   POP3_AUTH_FINAL,
   POP3_APOP,
   POP3_USER,
   POP3_PASS,
   POP3_COMMAND,
   POP3_QUIT,
@@ -89,13 +90,13 @@
 #define POP3_TYPE_CLEARTEXT (1 << 0)
 #define POP3_TYPE_APOP      (1 << 1)
 #define POP3_TYPE_SASL      (1 << 2)
 
 /* Authentication type values */
 #define POP3_TYPE_NONE      0
-#define POP3_TYPE_ANY       ~0
+#define POP3_TYPE_ANY       ~0U
 
 /* This is the 5-bytes End-Of-Body marker for POP3 */
 #define POP3_EOB "\x0d\x0a\x2e\x0d\x0a"
 #define POP3_EOB_LEN 5
 
 /* This function scans the body after the end-of-body and writes everything
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/qssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/qssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/qssl.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/qssl.c	2013-12-17 06:02:35.000000000 +0800
@@ -201,12 +201,18 @@
     h->protocol = SSL_VERSION_2;
     break;
 
   case CURL_SSLVERSION_SSLv3:
     h->protocol = SSL_VERSION_3;
     break;
+
+  case CURL_SSLVERSION_TLSv1_0:
+  case CURL_SSLVERSION_TLSv1_1:
+  case CURL_SSLVERSION_TLSv1_2:
+    failf(data, "TLS minor version cannot be set");
+    return CURLE_SSL_CONNECT_ERROR;
   }
 
   h->peerCert = NULL;
   h->peerCertLen = 0;
   rc = SSL_Handshake(h, SSL_HANDSHAKE_AS_CLIENT);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/setup-os400.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/setup-os400.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/setup-os400.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/setup-os400.h	2013-12-17 06:02:35.000000000 +0800
@@ -30,22 +30,23 @@
 #define NI_MAXSERV      32
 
 /* No OS/400 header file defines u_int32_t. */
 typedef unsigned long   u_int32_t;
 
 
-/* System API wrapper prototypes and definitions to support ASCII parameters. */
+/* System API wrapper prototypes & definitions to support ASCII parameters. */
 
 #include <sys/socket.h>
 #include <netdb.h>
 #include <qsossl.h>
 #include <gskssl.h>
 #include <qsoasync.h>
 #include <gssapi.h>
 
-extern int      Curl_getaddrinfo_a(const char * nodename, const char * servname,
+extern int      Curl_getaddrinfo_a(const char * nodename,
+                                   const char * servname,
                                    const struct addrinfo * hints,
                                    struct addrinfo * * res);
 #define getaddrinfo             Curl_getaddrinfo_a
 
 
 extern int      Curl_getnameinfo_a(const struct sockaddr * sa,
@@ -63,13 +64,14 @@
 
 
 extern int      Curl_SSL_Init_a(SSLInit * init);
 #define SSL_Init                Curl_SSL_Init_a
 
 
-extern char *   Curl_SSL_Strerror_a(int sslreturnvalue, SSLErrorMsg * serrmsgp);
+extern char *   Curl_SSL_Strerror_a(int sslreturnvalue,
+                                    SSLErrorMsg * serrmsgp);
 #define SSL_Strerror            Curl_SSL_Strerror_a
 
 
 /* GSKit wrappers. */
 
 extern int      Curl_gsk_environment_open(gsk_handle * my_env_handle);
@@ -223,8 +225,15 @@
 
 #define connect                 Curl_os400_connect
 #define bind                    Curl_os400_bind
 #define sendto                  Curl_os400_sendto
 #define recvfrom                Curl_os400_recvfrom
 
+#ifdef HAVE_LIBZ
+#define zlibVersion             Curl_os400_zlibVersion
+#define inflateInit_            Curl_os400_inflateInit_
+#define inflateInit2_           Curl_os400_inflateInit2_
+#define inflate                 Curl_os400_inflate
+#define inflateEnd              Curl_os400_inflateEnd
+#endif
 
 #endif /* HEADER_CURL_SETUP_OS400_H */
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib: sigpipe.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/smtp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/smtp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/smtp.c	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/smtp.c	2013-12-17 06:02:35.000000000 +0800
@@ -24,13 +24,14 @@
  * RFC3207 SMTP over TLS
  * RFC4422 Simple Authentication and Security Layer (SASL)
  * RFC4616 PLAIN authentication
  * RFC4954 SMTP Authentication
  * RFC5321 SMTP protocol
  * RFC6749 OAuth 2.0 Authorization Framework
- * Draft   SMTP URL Interface
+ * Draft   SMTP URL Interface   <draft-earhart-url-smtp-00.txt>
+ * Draft   LOGIN SASL Mechanism <draft-murchison-sasl-login-00.txt>
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #ifndef CURL_DISABLE_SMTP
@@ -100,12 +101,13 @@
 static int smtp_getsock(struct connectdata *conn, curl_socket_t *socks,
                         int numsocks);
 static CURLcode smtp_doing(struct connectdata *conn, bool *dophase_done);
 static CURLcode smtp_setup_connection(struct connectdata *conn);
 static CURLcode smtp_parse_url_options(struct connectdata *conn);
 static CURLcode smtp_parse_url_path(struct connectdata *conn);
+static CURLcode smtp_parse_custom_request(struct connectdata *conn);
 
 /*
  * SMTP protocol handler.
  */
 
 const struct Curl_handler Curl_handler_smtp = {
@@ -215,95 +217,77 @@
 #else
 #define smtp_to_smtps(x) Curl_nop_stmt
 #endif
 
 /***********************************************************************
  *
- * pop3_endofresp()
+ * smtp_endofresp()
  *
  * Checks for an ending SMTP status code at the start of the given string, but
  * also detects various capabilities from the EHLO response including the
  * supported authentication mechanisms.
  */
 static bool smtp_endofresp(struct connectdata *conn, char *line, size_t len,
                            int *resp)
 {
   struct smtp_conn *smtpc = &conn->proto.smtpc;
   bool result = FALSE;
-  size_t wordlen;
 
+  /* Nothing for us */
   if(len < 4 || !ISDIGIT(line[0]) || !ISDIGIT(line[1]) || !ISDIGIT(line[2]))
-    return FALSE;       /* Nothing for us */
+    return FALSE;
 
-  /* Do we have a command response? */
-  result = (line[3] == ' ') ? TRUE : FALSE;
-  if(result)
+  /* Do we have a command response? This should be the response code followed
+     by a space and optionally some text as per RFC-5321 and as outlined in
+     Section 4. Examples of RFC-4954 but some e-mail servers ignore this and
+     only send the response code instead as per Section 4.2. */
+  if(line[3] == ' ' || len == 5) {
+    result = TRUE;
     *resp = curlx_sltosi(strtol(line, NULL, 10));
 
-  /* Are we processing EHLO command data? */
-  if(smtpc->state == SMTP_EHLO && (!result || (result && *resp/100 == 2))) {
-    line += 4;
-    len -= 4;
-
-    /* Does the server support the STARTTLS capability? */
-    if(len >= 8 && !memcmp(line, "STARTTLS", 8))
-      smtpc->tls_supported = TRUE;
-
-    /* Does the server support the SIZE capability? */
-    else if(len >= 4 && !memcmp(line, "SIZE", 4))
-      smtpc->size_supported = TRUE;
-
-    /* Do we have the authentication mechanism list? */
-    else if(len >= 5 && !memcmp(line, "AUTH ", 5)) {
-      line += 5;
-      len -= 5;
-
-      /* Loop through the data line */
-      for(;;) {
-        while(len &&
-              (*line == ' ' || *line == '\t' ||
-               *line == '\r' || *line == '\n')) {
+    /* Make sure real server never sends internal value */
+    if(*resp == 1)
+      *resp = 0;
+  }
+  /* Do we have a multiline (continuation) response? */
+  else if(line[3] == '-' &&
+          (smtpc->state == SMTP_EHLO || smtpc->state == SMTP_COMMAND)) {
+    result = TRUE;
+    *resp = 1;  /* Internal response code */
+  }
 
-          line++;
-          len--;
-        }
+  return result;
+}
 
-        if(!len)
-          break;
+/***********************************************************************
+ *
+ * smtp_get_message()
+ *
+ * Gets the authentication message from the response buffer.
+ */
+static void smtp_get_message(char *buffer, char** outptr)
+{
+  size_t len = 0;
+  char* message = NULL;
 
-        /* Extract the word */
-        for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
-              line[wordlen] != '\t' && line[wordlen] != '\r' &&
-              line[wordlen] != '\n';)
-          wordlen++;
+  /* Find the start of the message */
+  for(message = buffer + 4; *message == ' ' || *message == '\t'; message++)
+    ;
 
-        /* Test the word for a matching authentication mechanism */
-        if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_LOGIN))
-          smtpc->authmechs |= SASL_MECH_LOGIN;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_PLAIN))
-          smtpc->authmechs |= SASL_MECH_PLAIN;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_CRAM_MD5))
-          smtpc->authmechs |= SASL_MECH_CRAM_MD5;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_DIGEST_MD5))
-          smtpc->authmechs |= SASL_MECH_DIGEST_MD5;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_GSSAPI))
-          smtpc->authmechs |= SASL_MECH_GSSAPI;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_EXTERNAL))
-          smtpc->authmechs |= SASL_MECH_EXTERNAL;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_NTLM))
-          smtpc->authmechs |= SASL_MECH_NTLM;
-        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_XOAUTH2))
-          smtpc->authmechs |= SASL_MECH_XOAUTH2;
+  /* Find the end of the message */
+  for(len = strlen(message); len--;)
+    if(message[len] != '\r' && message[len] != '\n' && message[len] != ' ' &&
+        message[len] != '\t')
+      break;
 
-        line += wordlen;
-        len -= wordlen;
-      }
-    }
+  /* Terminate the message */
+  if(++len) {
+    message[len] = '\0';
   }
 
-  return result;
+  *outptr = message;
 }
 
 /***********************************************************************
  *
  * state()
  *
@@ -327,13 +311,15 @@
     "AUTH_CRAMMD5",
     "AUTH_DIGESTMD5",
     "AUTH_DIGESTMD5_RESP",
     "AUTH_NTLM",
     "AUTH_NTLM_TYPE2MSG",
     "AUTH_XOAUTH2",
+    "AUTH_CANCEL",
     "AUTH_FINAL",
+    "COMMAND",
     "MAIL",
     "RCPT",
     "DATA",
     "POSTDATA",
     "QUIT",
     /* LAST */
@@ -564,12 +550,41 @@
 
   return result;
 }
 
 /***********************************************************************
  *
+ * smtp_perform_command()
+ *
+ * Sends a SMTP based command.
+ */
+static CURLcode smtp_perform_command(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->req.protop;
+
+  /* Send the command */
+  if(smtp->rcpt)
+    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s %s",
+                            smtp->custom && smtp->custom[0] != '\0' ?
+                            smtp->custom : "VRFY",
+                            smtp->rcpt->data);
+  else
+    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s",
+                           smtp->custom && smtp->custom[0] != '\0' ?
+                           smtp->custom : "HELP");
+
+  if(!result)
+    state(conn, SMTP_COMMAND);
+
+  return result;
+}
+
+/***********************************************************************
+ *
  * smtp_perform_mail()
  *
  * Sends an MAIL command to initiate the upload of a message.
  */
 static CURLcode smtp_perform_mail(struct connectdata *conn)
 {
@@ -653,22 +668,20 @@
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
   struct SMTP *smtp = data->req.protop;
 
   /* Send the RCPT TO command */
-  if(smtp->rcpt) {
-    if(smtp->rcpt->data[0] == '<')
-      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:%s",
-                             smtp->rcpt->data);
-    else
-      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:<%s>",
-                             smtp->rcpt->data);
-    if(!result)
-      state(conn, SMTP_RCPT);
-  }
+  if(smtp->rcpt->data[0] == '<')
+    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:%s",
+                            smtp->rcpt->data);
+  else
+    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "RCPT TO:<%s>",
+                            smtp->rcpt->data);
+  if(!result)
+    state(conn, SMTP_RCPT);
 
   return result;
 }
 
 /***********************************************************************
  *
@@ -737,39 +750,104 @@
 static CURLcode smtp_state_ehlo_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
   struct smtp_conn *smtpc = &conn->proto.smtpc;
+  const char *line = data->state.buffer;
+  size_t len = strlen(line);
+  size_t wordlen;
 
   (void)instate; /* no use for this yet */
 
-  if(smtpcode/100 != 2) {
+  if(smtpcode/100 != 2 && smtpcode != 1) {
     if((data->set.use_ssl <= CURLUSESSL_TRY || conn->ssl[FIRSTSOCKET].use) &&
      !conn->bits.user_passwd)
       result = smtp_perform_helo(conn);
     else {
       failf(data, "Remote access denied: %d", smtpcode);
       result = CURLE_REMOTE_ACCESS_DENIED;
     }
   }
-  else if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
-    /* We don't have a SSL/TLS connection yet, but SSL is requested */
-    if(smtpc->tls_supported)
-      /* Switch to TLS connection now */
-      result = smtp_perform_starttls(conn);
-    else if(data->set.use_ssl == CURLUSESSL_TRY)
-      /* Fallback and carry on with authentication */
-      result = smtp_perform_authenticate(conn);
-    else {
-      failf(data, "STARTTLS not supported.");
-      result = CURLE_USE_SSL_FAILED;
+  else {
+    line += 4;
+    len -= 4;
+
+    /* Does the server support the STARTTLS capability? */
+    if(len >= 8 && !memcmp(line, "STARTTLS", 8))
+      smtpc->tls_supported = TRUE;
+
+    /* Does the server support the SIZE capability? */
+    else if(len >= 4 && !memcmp(line, "SIZE", 4))
+      smtpc->size_supported = TRUE;
+
+    /* Do we have the authentication mechanism list? */
+    else if(len >= 5 && !memcmp(line, "AUTH ", 5)) {
+      line += 5;
+      len -= 5;
+
+      /* Loop through the data line */
+      for(;;) {
+        while(len &&
+              (*line == ' ' || *line == '\t' ||
+               *line == '\r' || *line == '\n')) {
+
+          line++;
+          len--;
+        }
+
+        if(!len)
+          break;
+
+        /* Extract the word */
+        for(wordlen = 0; wordlen < len && line[wordlen] != ' ' &&
+              line[wordlen] != '\t' && line[wordlen] != '\r' &&
+              line[wordlen] != '\n';)
+          wordlen++;
+
+        /* Test the word for a matching authentication mechanism */
+        if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_LOGIN))
+          smtpc->authmechs |= SASL_MECH_LOGIN;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_PLAIN))
+          smtpc->authmechs |= SASL_MECH_PLAIN;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_CRAM_MD5))
+          smtpc->authmechs |= SASL_MECH_CRAM_MD5;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_DIGEST_MD5))
+          smtpc->authmechs |= SASL_MECH_DIGEST_MD5;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_GSSAPI))
+          smtpc->authmechs |= SASL_MECH_GSSAPI;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_EXTERNAL))
+          smtpc->authmechs |= SASL_MECH_EXTERNAL;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_NTLM))
+          smtpc->authmechs |= SASL_MECH_NTLM;
+        else if(sasl_mech_equal(line, wordlen, SASL_MECH_STRING_XOAUTH2))
+          smtpc->authmechs |= SASL_MECH_XOAUTH2;
+
+        line += wordlen;
+        len -= wordlen;
+      }
+    }
+
+    if(smtpcode != 1) {
+      if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
+        /* We don't have a SSL/TLS connection yet, but SSL is requested */
+        if(smtpc->tls_supported)
+          /* Switch to TLS connection now */
+          result = smtp_perform_starttls(conn);
+        else if(data->set.use_ssl == CURLUSESSL_TRY)
+          /* Fallback and carry on with authentication */
+          result = smtp_perform_authenticate(conn);
+        else {
+          failf(data, "STARTTLS not supported.");
+          result = CURLE_USE_SSL_FAILED;
+        }
+      }
+      else
+        result = smtp_perform_authenticate(conn);
     }
   }
-  else
-    result = smtp_perform_authenticate(conn);
 
   return result;
 }
 
 /* For HELO responses */
 static CURLcode smtp_state_helo_resp(struct connectdata *conn, int smtpcode,
@@ -808,26 +886,23 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the authorisation message */
     result = Curl_sasl_create_plain_message(conn->data, conn->user,
                                             conn->passwd, &plainauth, &len);
+    if(!result && plainauth) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", plainauth);
 
-    /* Send the message */
-    if(!result) {
-      if(plainauth) {
-        result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", plainauth);
-
-        if(!result)
-          state(conn, SMTP_AUTH_FINAL);
-      }
-
-      Curl_safefree(plainauth);
+      if(!result)
+        state(conn, SMTP_AUTH_FINAL);
     }
   }
 
+  Curl_safefree(plainauth);
+
   return result;
 }
 
 /* For AUTH LOGIN (without initial response) responses */
 static CURLcode smtp_state_auth_login_resp(struct connectdata *conn,
                                            int smtpcode,
@@ -845,26 +920,23 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the user message */
     result = Curl_sasl_create_login_message(conn->data, conn->user,
                                             &authuser, &len);
+    if(!result && authuser) {
+      /* Send the user */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", authuser);
 
-    /* Send the user */
-    if(!result) {
-      if(authuser) {
-        result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", authuser);
-
-        if(!result)
-          state(conn, SMTP_AUTH_LOGIN_PASSWD);
-      }
-
-      Curl_safefree(authuser);
+      if(!result)
+        state(conn, SMTP_AUTH_LOGIN_PASSWD);
     }
   }
 
+  Curl_safefree(authuser);
+
   return result;
 }
 
 /* For AUTH LOGIN user entry responses */
 static CURLcode smtp_state_auth_login_password_resp(struct connectdata *conn,
                                                     int smtpcode,
@@ -882,122 +954,129 @@
     result = CURLE_LOGIN_DENIED;
   }
   else {
     /* Create the password message */
     result = Curl_sasl_create_login_message(conn->data, conn->passwd,
                                             &authpasswd, &len);
+    if(!result && authpasswd) {
+      /* Send the password */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", authpasswd);
 
-    /* Send the password */
-    if(!result) {
-      if(authpasswd) {
-        result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", authpasswd);
-
-        if(!result)
-          state(conn, SMTP_AUTH_FINAL);
-      }
-
-      Curl_safefree(authpasswd);
+      if(!result)
+        state(conn, SMTP_AUTH_FINAL);
     }
   }
 
+  Curl_safefree(authpasswd);
+
   return result;
 }
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 /* For AUTH CRAM-MD5 responses */
 static CURLcode smtp_state_auth_cram_resp(struct connectdata *conn,
                                           int smtpcode,
                                           smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  char *chlg64 = data->state.buffer;
-  size_t len = 0;
+  char *chlg = NULL;
+  char *chlg64 = NULL;
   char *rplyb64 = NULL;
+  size_t len = 0;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 334) {
     failf(data, "Access denied: %d", smtpcode);
     return CURLE_LOGIN_DENIED;
   }
 
-  /* Get the challenge */
-  for(chlg64 += 4; *chlg64 == ' ' || *chlg64 == '\t'; chlg64++)
-    ;
+  /* Get the challenge message */
+  smtp_get_message(data->state.buffer, &chlg64);
 
-  /* Terminate the challenge */
-  if(*chlg64 != '=') {
-    for(len = strlen(chlg64); len--;)
-      if(chlg64[len] != '\r' && chlg64[len] != '\n' && chlg64[len] != ' ' &&
-         chlg64[len] != '\t')
-        break;
+  /* Decode the challenge message */
+  result = Curl_sasl_decode_cram_md5_message(chlg64, &chlg, &len);
+  if(result) {
+    /* Send the cancellation */
+    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", "*");
 
-    if(++len) {
-      chlg64[len] = '\0';
-    }
+    if(!result)
+      state(conn, SMTP_AUTH_CANCEL);
   }
-
-  /* Create the response message */
-  result = Curl_sasl_create_cram_md5_message(data, chlg64, conn->user,
-                                             conn->passwd, &rplyb64, &len);
-
-  /* Send the response */
-  if(!result) {
-    if(rplyb64) {
+  else {
+    /* Create the response message */
+    result = Curl_sasl_create_cram_md5_message(data, chlg, conn->user,
+                                               conn->passwd, &rplyb64, &len);
+    if(!result && rplyb64) {
+      /* Send the response */
       result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", rplyb64);
 
       if(!result)
         state(conn, SMTP_AUTH_FINAL);
     }
-
-    Curl_safefree(rplyb64);
   }
 
+  Curl_safefree(chlg);
+  Curl_safefree(rplyb64);
+
   return result;
 }
 
 /* For AUTH DIGEST-MD5 challenge responses */
 static CURLcode smtp_state_auth_digest_resp(struct connectdata *conn,
                                             int smtpcode,
                                             smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  char *chlg64 = data->state.buffer;
-  size_t len = 0;
+  char *chlg64 = NULL;
   char *rplyb64 = NULL;
+  size_t len = 0;
+
+  char nonce[64];
+  char realm[128];
+  char algorithm[64];
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 334) {
     failf(data, "Access denied: %d", smtpcode);
     return CURLE_LOGIN_DENIED;
   }
 
-  /* Get the challenge */
-  for(chlg64 += 4; *chlg64 == ' ' || *chlg64 == '\t'; chlg64++)
-    ;
+  /* Get the challenge message */
+  smtp_get_message(data->state.buffer, &chlg64);
 
-  /* Create the response message */
-  result = Curl_sasl_create_digest_md5_message(data, chlg64, conn->user,
-                                               conn->passwd, "smtp",
-                                               &rplyb64, &len);
+  /* Decode the challange message */
+  result = Curl_sasl_decode_digest_md5_message(chlg64, nonce, sizeof(nonce),
+                                               realm, sizeof(realm),
+                                               algorithm, sizeof(algorithm));
+  if(result || strcmp(algorithm, "md5-sess") != 0) {
+    /* Send the cancellation */
+    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", "*");
 
-  /* Send the response */
-  if(!result) {
-    if(rplyb64) {
+    if(!result)
+      state(conn, SMTP_AUTH_CANCEL);
+  }
+  else {
+    /* Create the response message */
+    result = Curl_sasl_create_digest_md5_message(data, nonce, realm,
+                                                 conn->user, conn->passwd,
+                                                 "smtp", &rplyb64, &len);
+    if(!result && rplyb64) {
+      /* Send the response */
       result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", rplyb64);
 
       if(!result)
         state(conn, SMTP_AUTH_DIGESTMD5_RESP);
     }
-
-    Curl_safefree(rplyb64);
   }
 
+  Curl_safefree(rplyb64);
+
   return result;
 }
 
 /* For AUTH DIGEST-MD5 challenge-response responses */
 static CURLcode smtp_state_auth_digest_resp_resp(struct connectdata *conn,
                                                  int smtpcode,
@@ -1044,66 +1123,73 @@
   }
   else {
     /* Create the type-1 message */
     result = Curl_sasl_create_ntlm_type1_message(conn->user, conn->passwd,
                                                  &conn->ntlm,
                                                  &type1msg, &len);
+    if(!result && type1msg) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", type1msg);
 
-    /* Send the message */
-    if(!result) {
-      if(type1msg) {
-        result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", type1msg);
-
-        if(!result)
-          state(conn, SMTP_AUTH_NTLM_TYPE2MSG);
-      }
-
-      Curl_safefree(type1msg);
+      if(!result)
+        state(conn, SMTP_AUTH_NTLM_TYPE2MSG);
     }
   }
 
+  Curl_safefree(type1msg);
+
   return result;
 }
 
 /* For NTLM type-2 responses (sent in reponse to our type-1 message) */
 static CURLcode smtp_state_auth_ntlm_type2msg_resp(struct connectdata *conn,
                                                    int smtpcode,
                                                    smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
+  char *type2msg = NULL;
   char *type3msg = NULL;
   size_t len = 0;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 334) {
     failf(data, "Access denied: %d", smtpcode);
     result = CURLE_LOGIN_DENIED;
   }
   else {
-    /* Create the type-3 message */
-    result = Curl_sasl_create_ntlm_type3_message(data,
-                                                 data->state.buffer + 4,
-                                                 conn->user, conn->passwd,
-                                                 &conn->ntlm,
-                                                 &type3msg, &len);
+    /* Get the type-2 message */
+    smtp_get_message(data->state.buffer, &type2msg);
+
+    /* Decode the type-2 message */
+    result = Curl_sasl_decode_ntlm_type2_message(data, type2msg, &conn->ntlm);
+    if(result) {
+      /* Send the cancellation */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", "*");
 
-    /* Send the message */
-    if(!result) {
-      if(type3msg) {
+      if(!result)
+        state(conn, SMTP_AUTH_CANCEL);
+    }
+    else {
+      /* Create the type-3 message */
+      result = Curl_sasl_create_ntlm_type3_message(data, conn->user,
+                                                   conn->passwd, &conn->ntlm,
+                                                   &type3msg, &len);
+      if(!result && type3msg) {
+        /* Send the message */
         result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", type3msg);
 
         if(!result)
           state(conn, SMTP_AUTH_FINAL);
       }
-
-      Curl_safefree(type3msg);
     }
   }
 
+  Curl_safefree(type3msg);
+
   return result;
 }
 #endif
 
 /* For AUTH XOAUTH2 (without initial response) responses */
 static CURLcode smtp_state_auth_xoauth2_resp(struct connectdata *conn,
@@ -1122,30 +1208,42 @@
   }
   else {
     /* Create the authorisation message */
     result = Curl_sasl_create_xoauth2_message(conn->data, conn->user,
                                               conn->xoauth2_bearer,
                                               &xoauth, &len);
+    if(!result && xoauth) {
+      /* Send the message */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", xoauth);
 
-    /* Send the message */
-    if(!result) {
-      if(xoauth) {
-        result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", xoauth);
-
-        if(!result)
-          state(conn, SMTP_AUTH_FINAL);
-      }
-
-      Curl_safefree(xoauth);
+      if(!result)
+        state(conn, SMTP_AUTH_FINAL);
     }
   }
 
+  Curl_safefree(xoauth);
+
   return result;
 }
 
-/* For the final responses to the AUTH sequence */
+/* For AUTH cancellation responses */
+static CURLcode smtp_state_auth_cancel_resp(struct connectdata *conn,
+                                            int smtpcode,
+                                            smtpstate instate)
+{
+  struct SessionHandle *data = conn->data;
+
+  (void)smtpcode;
+  (void)instate; /* no use for this yet */
+
+  failf(data, "Authentication cancelled");
+
+  return CURLE_LOGIN_DENIED;
+}
+
+/* For final responses in the AUTH sequence */
 static CURLcode smtp_state_auth_final_resp(struct connectdata *conn,
                                            int smtpcode,
                                            smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
@@ -1160,32 +1258,74 @@
     /* End of connect phase */
     state(conn, SMTP_STOP);
 
   return result;
 }
 
+/* For command responses */
+static CURLcode smtp_state_command_resp(struct connectdata *conn, int smtpcode,
+                                        smtpstate instate)
+{
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->req.protop;
+  char *line = data->state.buffer;
+  size_t len = strlen(line);
+
+  (void)instate; /* no use for this yet */
+
+  if((smtp->rcpt && smtpcode/100 != 2 && smtpcode != 553 && smtpcode != 1) ||
+     (!smtp->rcpt && smtpcode/100 != 2 && smtpcode != 1)) {
+    failf(data, "Command failed: %d", smtpcode);
+    result = CURLE_RECV_ERROR;
+  }
+  else {
+    /* Temporarily add the LF character back and send as body to the client */
+    if(!data->set.opt_no_body) {
+      line[len] = '\n';
+      result = Curl_client_write(conn, CLIENTWRITE_BODY, line, len + 1);
+      line[len] = '\0';
+    }
+
+    if(smtpcode != 1) {
+      if(smtp->rcpt) {
+        smtp->rcpt = smtp->rcpt->next;
+
+        if(smtp->rcpt) {
+          /* Send the next command */
+          result = smtp_perform_command(conn);
+        }
+        else
+          /* End of DO phase */
+          state(conn, SMTP_STOP);
+      }
+      else
+        /* End of DO phase */
+        state(conn, SMTP_STOP);
+    }
+  }
+
+  return result;
+}
+
 /* For MAIL responses */
 static CURLcode smtp_state_mail_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
   CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
-  struct SMTP *smtp = data->req.protop;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "MAIL failed: %d", smtpcode);
     result = CURLE_SEND_ERROR;
-    state(conn, SMTP_STOP);
   }
-  else {
-    smtp->rcpt = data->set.mail_rcpt;
-
+  else
+    /* Start the RCPT TO command */
     result = smtp_perform_rcpt_to(conn);
-  }
 
   return result;
 }
 
 /* For RCPT responses */
 static CURLcode smtp_state_rcpt_resp(struct connectdata *conn, int smtpcode,
@@ -1197,57 +1337,56 @@
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode/100 != 2) {
     failf(data, "RCPT failed: %d", smtpcode);
     result = CURLE_SEND_ERROR;
-    state(conn, SMTP_STOP);
   }
   else {
-    if(smtp->rcpt) {
-      smtp->rcpt = smtp->rcpt->next;
+    smtp->rcpt = smtp->rcpt->next;
+
+    if(smtp->rcpt)
+      /* Send the next RCPT TO command */
       result = smtp_perform_rcpt_to(conn);
+    else {
+      /* Send the DATA command */
+      result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", "DATA");
 
-      /* If we failed or still are sending RCPT data then return */
-      if(result || smtp->rcpt)
-        return result;
+      if(!result)
+        state(conn, SMTP_DATA);
     }
-
-    /* Send the DATA command */
-    result = Curl_pp_sendf(&conn->proto.smtpc.pp, "%s", "DATA");
-
-    if(!result)
-      state(conn, SMTP_DATA);
   }
 
   return result;
 }
 
 /* For DATA response */
 static CURLcode smtp_state_data_resp(struct connectdata *conn, int smtpcode,
                                      smtpstate instate)
 {
+  CURLcode result = CURLE_OK;
   struct SessionHandle *data = conn->data;
 
   (void)instate; /* no use for this yet */
 
   if(smtpcode != 354) {
-    state(conn, SMTP_STOP);
-    return CURLE_SEND_ERROR;
+    failf(data, "DATA failed: %d", smtpcode);
+    result = CURLE_SEND_ERROR;
   }
+  else {
+    /* Set the progress upload size */
+    Curl_pgrsSetUploadSize(data, data->set.infilesize);
 
-  /* Set the progress upload size */
-  Curl_pgrsSetUploadSize(data, data->set.infilesize);
-
-  /* SMTP upload */
-  Curl_setup_transfer(conn, -1, -1, FALSE, NULL, FIRSTSOCKET, NULL);
+    /* SMTP upload */
+    Curl_setup_transfer(conn, -1, -1, FALSE, NULL, FIRSTSOCKET, NULL);
 
-  /* End of DO phase */
-  state(conn, SMTP_STOP);
+    /* End of DO phase */
+    state(conn, SMTP_STOP);
+  }
 
-  return CURLE_OK;
+  return result;
 }
 
 /* For POSTDATA responses, which are received after the entire DATA
    part has been sent to the server */
 static CURLcode smtp_state_postdata_resp(struct connectdata *conn,
                                          int smtpcode,
@@ -1281,22 +1420,25 @@
     return smtp_perform_upgrade_tls(conn);
 
   /* Flush any data that needs to be sent */
   if(pp->sendleft)
     return Curl_pp_flushsend(pp);
 
-  /* Read the response from the server */
-  result = Curl_pp_readresp(sock, pp, &smtpcode, &nread);
-  if(result)
-    return result;
+  do {
+    /* Read the response from the server */
+    result = Curl_pp_readresp(sock, pp, &smtpcode, &nread);
+    if(result)
+      return result;
 
-  /* Store the latest response for later retrieval */
-  if(smtpc->state != SMTP_QUIT)
-    data->info.httpcode = smtpcode;
+    /* Store the latest response for later retrieval if necessary */
+    if(smtpc->state != SMTP_QUIT && smtpcode != 1)
+      data->info.httpcode = smtpcode;
+
+    if(!smtpcode)
+      break;
 
-  if(smtpcode) {
     /* We have now received a full SMTP server response */
     switch(smtpc->state) {
     case SMTP_SERVERGREET:
       result = smtp_state_servergreet_resp(conn, smtpcode, smtpc->state);
       break;
 
@@ -1351,16 +1493,24 @@
 #endif
 
     case SMTP_AUTH_XOAUTH2:
       result = smtp_state_auth_xoauth2_resp(conn, smtpcode, smtpc->state);
       break;
 
+    case SMTP_AUTH_CANCEL:
+      result = smtp_state_auth_cancel_resp(conn, smtpcode, smtpc->state);
+      break;
+
     case SMTP_AUTH_FINAL:
       result = smtp_state_auth_final_resp(conn, smtpcode, smtpc->state);
       break;
 
+    case SMTP_COMMAND:
+      result = smtp_state_command_resp(conn, smtpcode, smtpc->state);
+      break;
+
     case SMTP_MAIL:
       result = smtp_state_mail_resp(conn, smtpcode, smtpc->state);
       break;
 
     case SMTP_RCPT:
       result = smtp_state_rcpt_resp(conn, smtpcode, smtpc->state);
@@ -1378,13 +1528,13 @@
       /* fallthrough, just stop! */
     default:
       /* internal error */
       state(conn, SMTP_STOP);
       break;
     }
-  }
+  } while(!result && smtpc->state != SMTP_STOP && Curl_pp_moredata(pp));
 
   return result;
 }
 
 /* Called repeatedly until done from multi.c */
 static CURLcode smtp_multi_statemach(struct connectdata *conn, bool *done)
@@ -1518,13 +1668,13 @@
     return CURLE_OK;
 
   if(status) {
     conn->bits.close = TRUE; /* marked for closure */
     result = status;         /* use the already set error code */
   }
-  else if(!data->set.connect_only) {
+  else if(!data->set.connect_only && data->set.upload && data->set.mail_rcpt) {
     /* Calculate the EOB taking into account any terminating CRLF from the
        previous line of the email or the CRLF of the DATA command when there
        is "no mail data". RFC-5321, sect. 4.1.1.4. */
     eob = SMTP_EOB;
     len = SMTP_EOB_LEN;
     if(smtp->trailing_crlf || !conn->data->set.infilesize) {
@@ -1557,47 +1707,60 @@
        non-blocking DONE operations, not in the multi state machine and with
        Curl_done() invokes on several places in the code!
     */
     result = smtp_block_statemach(conn);
   }
 
+  /* Cleanup our per-request based variables */
+  Curl_safefree(smtp->custom);
+
   /* Clear the transfer mode for the next request */
   smtp->transfer = FTPTRANSFER_BODY;
 
   return result;
 }
 
 /***********************************************************************
  *
  * smtp_perform()
  *
- * This is the actual DO function for SMTP. Send a mail according to the
- * options previously setup.
+ * This is the actual DO function for SMTP. Transfer a mail, send a command
+ * or get some data according to the options previously setup.
  */
 static CURLcode smtp_perform(struct connectdata *conn, bool *connected,
                              bool *dophase_done)
 {
   /* This is SMTP and no proxy */
   CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->req.protop;
 
   DEBUGF(infof(conn->data, "DO phase starts\n"));
 
-  if(conn->data->set.opt_no_body) {
+  if(data->set.opt_no_body) {
     /* Requested no body means no transfer */
-    struct SMTP *smtp = conn->data->req.protop;
     smtp->transfer = FTPTRANSFER_INFO;
   }
 
   *dophase_done = FALSE; /* not done yet */
 
+  /* Store the first recipient (or NULL if not specified) */
+  smtp->rcpt = data->set.mail_rcpt;
+
   /* Start the first command in the DO phase */
-  result = smtp_perform_mail(conn);
+  if(data->set.upload && data->set.mail_rcpt)
+    /* MAIL transfer */
+    result = smtp_perform_mail(conn);
+  else
+    /* SMTP based command (VRFY, EXPN, NOOP, RSET or HELP) */
+    result = smtp_perform_command(conn);
+
   if(result)
     return result;
 
-  /* run the state-machine */
+  /* Run the state-machine */
   result = smtp_multi_statemach(conn, dophase_done);
 
   *connected = conn->bits.tcpconnect[FIRSTSOCKET];
 
   if(*dophase_done)
     DEBUGF(infof(conn->data, "DO phase is complete\n"));
@@ -1617,36 +1780,40 @@
 static CURLcode smtp_do(struct connectdata *conn, bool *done)
 {
   CURLcode result = CURLE_OK;
 
   *done = FALSE; /* default to false */
 
+  /* Parse the custom request */
+  result = smtp_parse_custom_request(conn);
+  if(result)
+    return result;
+
   result = smtp_regular_transfer(conn, done);
 
   return result;
 }
 
 /***********************************************************************
  *
  * smtp_disconnect()
  *
  * Disconnect from an SMTP server. Cleanup protocol-specific per-connection
  * resources. BLOCKING.
  */
-static CURLcode smtp_disconnect(struct connectdata *conn,
-                                bool dead_connection)
+static CURLcode smtp_disconnect(struct connectdata *conn, bool dead_connection)
 {
   struct smtp_conn *smtpc = &conn->proto.smtpc;
 
   /* We cannot send quit unconditionally. If this connection is stale or
      bad in any way, sending quit and waiting around here will make the
      disconnect wait in vain and cause more problems than we need to. */
 
   /* The SMTP session may or may not have been allocated/setup at this
      point! */
-  if(!dead_connection && smtpc->pp.conn)
+  if(!dead_connection && smtpc->pp.conn && smtpc->pp.conn->bits.protoconnstart)
     if(!smtp_perform_quit(conn))
       (void)smtp_block_statemach(conn); /* ignore errors on QUIT */
 
   /* Disconnect from the server */
   Curl_pp_disconnect(&smtpc->pp);
 
@@ -1833,12 +2000,32 @@
   }
 
   /* URL decode the path and use it as the domain in our EHLO */
   return Curl_urldecode(conn->data, path, 0, &smtpc->domain, NULL, TRUE);
 }
 
+/***********************************************************************
+ *
+ * smtp_parse_custom_request()
+ *
+ * Parse the custom request.
+ */
+static CURLcode smtp_parse_custom_request(struct connectdata *conn)
+{
+  CURLcode result = CURLE_OK;
+  struct SessionHandle *data = conn->data;
+  struct SMTP *smtp = data->req.protop;
+  const char *custom = data->set.str[STRING_CUSTOMREQUEST];
+
+  /* URL decode the custom request */
+  if(custom)
+    result = Curl_urldecode(data, custom, 0, &smtp->custom, NULL, TRUE);
+
+  return result;
+}
+
 CURLcode Curl_smtp_escape_eob(struct connectdata *conn, ssize_t nread)
 {
   /* When sending a SMTP payload we must detect CRLF. sequences making sure
      they are sent as CRLF.. instead, as a . on the beginning of a line will
      be deleted by the server when not part of an EOB terminator and a
      genuine CRLF.CRLF which isn't escaped will wrongly be detected as end of
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/smtp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/smtp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/smtp.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/smtp.h	2013-12-17 06:02:35.000000000 +0800
@@ -42,13 +42,15 @@
   SMTP_AUTH_CRAMMD5,
   SMTP_AUTH_DIGESTMD5,
   SMTP_AUTH_DIGESTMD5_RESP,
   SMTP_AUTH_NTLM,
   SMTP_AUTH_NTLM_TYPE2MSG,
   SMTP_AUTH_XOAUTH2,
+  SMTP_AUTH_CANCEL,
   SMTP_AUTH_FINAL,
+  SMTP_COMMAND,     /* VRFY, EXPN, NOOP, RSET and HELP */
   SMTP_MAIL,        /* MAIL FROM */
   SMTP_RCPT,        /* RCPT TO */
   SMTP_DATA,
   SMTP_POSTDATA,
   SMTP_QUIT,
   SMTP_LAST         /* never used */
@@ -57,12 +59,13 @@
 /* This SMTP struct is used in the SessionHandle. All SMTP data that is
    connection-oriented must be in smtp_conn to properly deal with the fact that
    perhaps the SessionHandle is changed between the times the connection is
    used. */
 struct SMTP {
   curl_pp_transfer transfer;
+  char *custom;            /* Custom Request */
   struct curl_slist *rcpt; /* Recipient list */
   size_t eob;              /* Number of bytes of the EOB (End Of Body) that
                               have been received so far */
   bool trailing_crlf;      /* Specifies if the tailing CRLF is present */
 };
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/socks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/socks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/socks.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/socks.c	2013-12-17 06:02:35.000000000 +0800
@@ -126,12 +126,14 @@
     failf(data, "Connection time-out");
     return CURLE_OPERATION_TIMEDOUT;
   }
 
   curlx_nonblock(sock, FALSE);
 
+  infof(data, "SOCKS4 communication to %s:%d\n", hostname, remote_port);
+
   /*
    * Compose socks4 request
    *
    * Request format
    *
    *     +----+----+----+----+----+----+----+----+----+----+....+----+
@@ -179,12 +181,14 @@
         socksreq[6] = (unsigned char)ip[2];
         socksreq[7] = (unsigned char)ip[3];
       }
       else
         hp = NULL; /* fail! */
 
+      infof(data, "SOCKS4 connect to %s (locally resolved)\n", buf);
+
       Curl_resolv_unlock(data, dns); /* not used anymore from now on */
 
     }
     if(!hp) {
       failf(data, "Failed to resolve \"%s\" for SOCKS4 connect.",
             hostname);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ssh.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ssh.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ssh.c	2013-10-13 05:03:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ssh.c	2013-12-17 06:02:35.000000000 +0800
@@ -751,13 +751,19 @@
        */
       sshc->authlist = libssh2_userauth_list(sshc->ssh_session,
                                              conn->user,
                                              curlx_uztoui(strlen(conn->user)));
 
       if(!sshc->authlist) {
-        if((err = libssh2_session_last_errno(sshc->ssh_session)) ==
+        if(libssh2_userauth_authenticated(sshc->ssh_session)) {
+          sshc->authed = TRUE;
+          infof(data, "SSH user accepted with no authentication\n");
+          state(conn, SSH_AUTH_DONE);
+          break;
+        }
+        else if((err = libssh2_session_last_errno(sshc->ssh_session)) ==
            LIBSSH2_ERROR_EAGAIN) {
           rc = LIBSSH2_ERROR_EAGAIN;
           break;
         }
         else {
           state(conn, SSH_SESSION_FREE);
@@ -2716,12 +2722,16 @@
   curl_socket_t sock;
 #endif
   struct ssh_conn *ssh;
   CURLcode result;
   struct SessionHandle *data = conn->data;
 
+  /* initialize per-handle data if not already */
+  if(!data->req.protop)
+    ssh_setup_connection(conn);
+
   /* We default to persistent connections. We set this already in this connect
      function to make the re-use checks properly be able to check this bit. */
   conn->bits.close = FALSE;
 
   if(conn->handler->protocol & CURLPROTO_SCP) {
     conn->recv[FIRSTSOCKET] = scp_recv;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/sslgen.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/sslgen.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/sslgen.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/sslgen.c	2013-12-17 06:02:35.000000000 +0800
@@ -608,28 +608,41 @@
     return 1;
 
   ci->certinfo = table;
   return 0;
 }
 
+/*
+ * 'value' is NOT a zero terminated string
+ */
 CURLcode Curl_ssl_push_certinfo_len(struct SessionHandle *data,
                                     int certnum,
                                     const char *label,
                                     const char *value,
                                     size_t valuelen)
 {
   struct curl_certinfo * ci = &data->info.certs;
   char * output;
   struct curl_slist * nl;
   CURLcode res = CURLE_OK;
+  size_t labellen = strlen(label);
+  size_t outlen = labellen + 1 + valuelen + 1; /* label:value\0 */
 
-  /* Add an information record for a particular certificate. */
-  output = curl_maprintf("%s:%.*s", label, valuelen, value);
+  output = malloc(outlen);
   if(!output)
     return CURLE_OUT_OF_MEMORY;
 
+  /* sprintf the label and colon */
+  snprintf(output, outlen, "%s:", label);
+
+  /* memcpy the value (it might not be zero terminated) */
+  memcpy(&output[labellen+1], value, valuelen);
+
+  /* zero terminate the output */
+  output[labellen + 1 + valuelen] = 0;
+
   nl = Curl_slist_append_nodup(ci->certinfo[certnum], output);
   if(!nl) {
     free(output);
     curl_slist_free_all(ci->certinfo[certnum]);
     res = CURLE_OUT_OF_MEMORY;
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ssluse.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ssluse.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/ssluse.c	2013-10-14 05:07:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/ssluse.c	2013-12-17 06:02:35.000000000 +0800
@@ -1428,25 +1428,18 @@
 
   /* check to see if we've been told to use an explicit SSL/TLS version */
 
   switch(data->set.ssl.version) {
   default:
   case CURL_SSLVERSION_DEFAULT:
-#ifdef USE_TLS_SRP
-    if(data->set.ssl.authtype == CURL_TLSAUTH_SRP) {
-      infof(data, "Set version TLSv1 for SRP authorisation\n");
-      req_method = TLSv1_client_method() ;
-    }
-    else
-#endif
-    /* we try to figure out version */
-    req_method = SSLv23_client_method();
-    use_sni(TRUE);
-    break;
   case CURL_SSLVERSION_TLSv1:
-    req_method = TLSv1_client_method();
+  case CURL_SSLVERSION_TLSv1_0:
+  case CURL_SSLVERSION_TLSv1_1:
+  case CURL_SSLVERSION_TLSv1_2:
+    /* it will be handled later with the context options */
+    req_method = SSLv23_client_method();
     use_sni(TRUE);
     break;
   case CURL_SSLVERSION_SSLv2:
 #ifdef OPENSSL_NO_SSL2
     failf(data, "OpenSSL was built without SSLv2 support");
     return CURLE_NOT_BUILT_IN;
@@ -1553,15 +1546,57 @@
   /* unless the user explicitly ask to allow the protocol vulnerability we
      use the work-around */
   if(!conn->data->set.ssl_enable_beast)
     ctx_options &= ~SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS;
 #endif
 
-  /* disable SSLv2 in the default case (i.e. allow SSLv3 and TLSv1) */
-  if(data->set.ssl.version == CURL_SSLVERSION_DEFAULT)
+  switch(data->set.ssl.version) {
+  case CURL_SSLVERSION_DEFAULT:
     ctx_options |= SSL_OP_NO_SSLv2;
+#ifdef USE_TLS_SRP
+    if(data->set.ssl.authtype == CURL_TLSAUTH_SRP) {
+      infof(data, "Set version TLSv1.x for SRP authorisation\n");
+      ctx_options |= SSL_OP_NO_SSLv3;
+    }
+#endif
+    break;
+
+  case CURL_SSLVERSION_TLSv1:
+    ctx_options |= SSL_OP_NO_SSLv2;
+    ctx_options |= SSL_OP_NO_SSLv3;
+    break;
+
+  case CURL_SSLVERSION_TLSv1_0:
+    ctx_options |= SSL_OP_NO_SSLv2;
+    ctx_options |= SSL_OP_NO_SSLv3;
+#if OPENSSL_VERSION_NUMBER >= 0x1000100FL
+    ctx_options |= SSL_OP_NO_TLSv1_1;
+    ctx_options |= SSL_OP_NO_TLSv1_2;
+#endif
+    break;
+
+#if OPENSSL_VERSION_NUMBER >= 0x1000100FL
+  case CURL_SSLVERSION_TLSv1_1:
+    ctx_options |= SSL_OP_NO_SSLv2;
+    ctx_options |= SSL_OP_NO_SSLv3;
+    ctx_options |= SSL_OP_NO_TLSv1;
+    ctx_options |= SSL_OP_NO_TLSv1_2;
+    break;
+
+  case CURL_SSLVERSION_TLSv1_2:
+    ctx_options |= SSL_OP_NO_SSLv2;
+    ctx_options |= SSL_OP_NO_SSLv3;
+    ctx_options |= SSL_OP_NO_TLSv1;
+    ctx_options |= SSL_OP_NO_TLSv1_1;
+    break;
+#endif
+
+  default:
+    failf(data, "Unsupported SSL protocol version");
+    return CURLE_SSL_CONNECT_ERROR;
+  }
 
   SSL_CTX_set_options(connssl->ctx, ctx_options);
 
   if(data->set.str[STRING_CERT] || data->set.str[STRING_CERT_TYPE]) {
     if(!cert_stuff(conn,
                    connssl->ctx,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/tftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/tftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/tftp.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/tftp.c	2013-12-17 06:02:35.000000000 +0800
@@ -1253,13 +1253,13 @@
   CURLcode result;
   result = tftp_multi_statemach(conn, dophase_done);
 
   if(*dophase_done) {
     DEBUGF(infof(conn->data, "DO phase is complete\n"));
   }
-  else {
+  else if(!result) {
     /* The multi code doesn't have this logic for the DOING state so we
        provide it for TFTP since it may do the entire transfer in this
        state. */
     if(Curl_pgrsUpdate(conn))
       result = CURLE_ABORTED_BY_CALLBACK;
     else
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/transfer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/transfer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/transfer.c	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/transfer.c	2013-12-17 06:02:35.000000000 +0800
@@ -1306,16 +1306,17 @@
 #endif
 
     Curl_initinfo(data); /* reset session-specific information "variables" */
     Curl_pgrsStartNow(data);
 
     if(data->set.timeout)
-      Curl_expire(data, data->set.timeout);
+      Curl_expire(data, data->set.timeout + MULTI_TIMEOUT_INACCURACY_MS);
 
     if(data->set.connecttimeout)
-      Curl_expire(data, data->set.connecttimeout);
+      Curl_expire(data, data->set.connecttimeout +
+                  MULTI_TIMEOUT_INACCURACY_MS);
 
     /* In case the handle is re-used and an authentication method was picked
        in the session we need to make sure we only use the one(s) we now
        consider to be fine */
     data->state.authhost.picked &= data->state.authhost.want;
     data->state.authproxy.picked &= data->state.authproxy.want;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/url.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/url.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/url.c	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/url.c	2013-12-17 06:02:35.000000000 +0800
@@ -296,27 +296,25 @@
     *charp = s;
   }
 
   return CURLE_OK;
 }
 
-static CURLcode setstropt_userpwd(char *option, char **userp, char **passwdp,
-                                  char **optionsp)
+static CURLcode setstropt_userpwd(char *option, char **userp, char **passwdp)
 {
   CURLcode result = CURLE_OK;
   char *user = NULL;
   char *passwd = NULL;
-  char *options = NULL;
 
   /* Parse the login details if specified. It not then we treat NULL as a hint
      to clear the existing data */
   if(option) {
     result = parse_login_details(option, strlen(option),
                                  (userp ? &user : NULL),
                                  (passwdp ? &passwd : NULL),
-                                 (optionsp ? &options : NULL));
+                                 NULL);
   }
 
   if(!result) {
     /* Store the username part of option if required */
     if(userp) {
       if(!user && option && option[0] == ':') {
@@ -332,18 +330,12 @@
 
     /* Store the password part of option if required */
     if(passwdp) {
       Curl_safefree(*passwdp);
       *passwdp = passwd;
     }
-
-    /* Store the options part of option if required */
-    if(optionsp) {
-      Curl_safefree(*optionsp);
-      *optionsp = options;
-    }
   }
 
   return result;
 }
 
 CURLcode Curl_dupset(struct SessionHandle *dst, struct SessionHandle *src)
@@ -1550,19 +1542,19 @@
      */
     data->set.accepttimeout = va_arg(param, long);
     break;
 
   case CURLOPT_USERPWD:
     /*
-     * user:password;options to use in the operation
+     * user:password to use in the operation
      */
     result = setstropt_userpwd(va_arg(param, char *),
                                &data->set.str[STRING_USERNAME],
-                               &data->set.str[STRING_PASSWORD],
-                               &data->set.str[STRING_OPTIONS]);
+                               &data->set.str[STRING_PASSWORD]);
     break;
+
   case CURLOPT_USERNAME:
     /*
      * authentication user name to use in the operation
      */
     result = setstropt(&data->set.str[STRING_USERNAME],
                        va_arg(param, char *));
@@ -1571,12 +1564,21 @@
     /*
      * authentication password to use in the operation
      */
     result = setstropt(&data->set.str[STRING_PASSWORD],
                        va_arg(param, char *));
     break;
+
+  case CURLOPT_LOGIN_OPTIONS:
+    /*
+     * authentication options to use in the operation
+     */
+    result = setstropt(&data->set.str[STRING_OPTIONS],
+                       va_arg(param, char *));
+    break;
+
   case CURLOPT_XOAUTH2_BEARER:
     /*
      * XOAUTH2 bearer token to use in the operation
      */
     result = setstropt(&data->set.str[STRING_BEARER],
                        va_arg(param, char *));
@@ -1647,13 +1650,13 @@
   case CURLOPT_PROXYUSERPWD:
     /*
      * user:password needed to use the proxy
      */
     result = setstropt_userpwd(va_arg(param, char *),
                                &data->set.str[STRING_PROXYUSERNAME],
-                               &data->set.str[STRING_PROXYPASSWORD], NULL);
+                               &data->set.str[STRING_PROXYPASSWORD]);
     break;
   case CURLOPT_PROXYUSERNAME:
     /*
      * authentication user name to use in the operation
      */
     result = setstropt(&data->set.str[STRING_PROXYUSERNAME],
@@ -1923,13 +1926,14 @@
     /*
      * Set a SSL_CTX callback parameter pointer
      */
     data->set.ssl.fsslctxp = va_arg(param, void *);
     break;
 #endif
-#if defined(USE_SSLEAY) || defined(USE_QSOSSL) || defined(USE_GSKIT)
+#if defined(USE_SSLEAY) || defined(USE_QSOSSL) || defined(USE_GSKIT) || \
+    defined(USE_NSS)
   case CURLOPT_CERTINFO:
     data->set.ssl.certinfo = (0 != va_arg(param, long))?TRUE:FALSE;
     break;
 #endif
   case CURLOPT_CAINFO:
     /*
@@ -2499,12 +2503,16 @@
 
   /* close possibly still open sockets */
   if(CURL_SOCKET_BAD != conn->sock[SECONDARYSOCKET])
     Curl_closesocket(conn, conn->sock[SECONDARYSOCKET]);
   if(CURL_SOCKET_BAD != conn->sock[FIRSTSOCKET])
     Curl_closesocket(conn, conn->sock[FIRSTSOCKET]);
+  if(CURL_SOCKET_BAD != conn->tempsock[0])
+    Curl_closesocket(conn, conn->tempsock[0]);
+  if(CURL_SOCKET_BAD != conn->tempsock[1])
+    Curl_closesocket(conn, conn->tempsock[1]);
 
 #if defined(USE_NTLM) && defined(NTLM_WB_ENABLED)
   Curl_ntlm_wb_cleanup(conn);
 #endif
 
   Curl_safefree(conn->user);
@@ -3216,15 +3224,18 @@
 /* after a TCP connection to the proxy has been verified, this function does
    the next magic step.
 
    Note: this function's sub-functions call failf()
 
 */
-CURLcode Curl_connected_proxy(struct connectdata *conn)
+CURLcode Curl_connected_proxy(struct connectdata *conn,
+                              int sockindex)
 {
-  if(!conn->bits.proxy)
+  if(!conn->bits.proxy || sockindex)
+    /* this magic only works for the primary socket as the secondary is used
+       for FTP only and it has FTP specific magic in ftp.c */
     return CURLE_OK;
 
   switch(conn->proxytype) {
 #ifndef CURL_DISABLE_PROXY
   case CURLPROXY_SOCKS5:
   case CURLPROXY_SOCKS5_HOSTNAME:
@@ -3249,55 +3260,12 @@
     break;
   } /* switch proxytype */
 
   return CURLE_OK;
 }
 
-static CURLcode ConnectPlease(struct SessionHandle *data,
-                              struct connectdata *conn,
-                              bool *connected)
-{
-  CURLcode result;
-  Curl_addrinfo *addr;
-#ifndef CURL_DISABLE_VERBOSE_STRINGS
-  char *hostname = conn->bits.proxy?conn->proxy.name:conn->host.name;
-
-  infof(data, "About to connect() to %s%s port %ld (#%ld)\n",
-        conn->bits.proxy?"proxy ":"",
-        hostname, conn->port, conn->connection_id);
-#else
-  (void)data;
-#endif
-
-  /*************************************************************
-   * Connect to server/proxy
-   *************************************************************/
-  result= Curl_connecthost(conn,
-                           conn->dns_entry,
-                           &conn->sock[FIRSTSOCKET],
-                           &addr,
-                           connected);
-  if(CURLE_OK == result) {
-    /* All is cool, we store the current information */
-    conn->ip_addr = addr;
-
-    if(*connected) {
-      result = Curl_connected_proxy(conn);
-      if(!result) {
-        conn->bits.tcpconnect[FIRSTSOCKET] = TRUE;
-        Curl_pgrsTime(data, TIMER_CONNECT); /* connect done */
-      }
-    }
-  }
-
-  if(result)
-    *connected = FALSE; /* mark it as not connected */
-
-  return result;
-}
-
 /*
  * verboseconnect() displays verbose information after a connect
  */
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
 void Curl_verboseconnect(struct connectdata *conn)
 {
@@ -3558,12 +3526,14 @@
                                            situations and checks */
 
   /* and we setup a few fields in case we end up actually using this struct */
 
   conn->sock[FIRSTSOCKET] = CURL_SOCKET_BAD;     /* no file descriptor */
   conn->sock[SECONDARYSOCKET] = CURL_SOCKET_BAD; /* no file descriptor */
+  conn->tempsock[0] = CURL_SOCKET_BAD; /* no file descriptor */
+  conn->tempsock[1] = CURL_SOCKET_BAD; /* no file descriptor */
   conn->connection_id = -1;    /* no ID */
   conn->port = -1; /* unknown at this point */
 
   /* Default protocol-independent behavior doesn't support persistent
      connections, so we set this to force-close. Protocols that support
      this need to set this to FALSE in their "curl_do" functions. */
@@ -4854,13 +4824,13 @@
   }
 
   return CURLE_OK;
 }
 
 /*
- * Set password so it's available in the connection.
+ * Set the login details so they're available in the connection
  */
 static CURLcode set_login(struct connectdata *conn,
                           const char *user, const char *passwd,
                           const char *options)
 {
   CURLcode result = CURLE_OK;
@@ -5595,59 +5565,25 @@
 #endif /* CURL_DO_LINEEND_CONV */
 
   /* set start time here for timeout purposes in the connect procedure, it
      is later set again for the progress meter purpose */
   conn->now = Curl_tvnow();
 
-  for(;;) {
-    /* loop for CURL_SERVER_CLOSED_CONNECTION */
-
-    if(CURL_SOCKET_BAD == conn->sock[FIRSTSOCKET]) {
-      /* Try to connect only if not already connected */
-      bool connected = FALSE;
-
-      result = ConnectPlease(data, conn, &connected);
-
-      if(result && !conn->ip_addr) {
-        /* transport connection failure not related with authentication */
-        conn->bits.tcpconnect[FIRSTSOCKET] = FALSE;
-        return result;
-      }
-
-      if(connected) {
-        result = Curl_protocol_connect(conn, protocol_done);
-        if(CURLE_OK == result)
-          conn->bits.tcpconnect[FIRSTSOCKET] = TRUE;
-      }
-      else
-        conn->bits.tcpconnect[FIRSTSOCKET] = FALSE;
-
-      /* if the connection was closed by the server while exchanging
-         authentication informations, retry with the new set
-         authentication information */
-      if(conn->bits.proxy_connect_closed) {
-        /* reset the error buffer */
-        if(data->set.errorbuffer)
-          data->set.errorbuffer[0] = '\0';
-        data->state.errorbuf = FALSE;
-        continue;
-      }
-
-      if(CURLE_OK != result)
-        return result;
-    }
-    else {
-      Curl_pgrsTime(data, TIMER_CONNECT); /* we're connected already */
-      Curl_pgrsTime(data, TIMER_APPCONNECT); /* we're connected already */
-      conn->bits.tcpconnect[FIRSTSOCKET] = TRUE;
-      *protocol_done = TRUE;
-      Curl_verboseconnect(conn);
-      Curl_updateconninfo(conn, conn->sock[FIRSTSOCKET]);
-    }
-    /* Stop the loop now */
-    break;
+  if(CURL_SOCKET_BAD == conn->sock[FIRSTSOCKET]) {
+    conn->bits.tcpconnect[FIRSTSOCKET] = FALSE;
+    result = Curl_connecthost(conn, conn->dns_entry);
+    if(result)
+      return result;
+  }
+  else {
+    Curl_pgrsTime(data, TIMER_CONNECT);    /* we're connected already */
+    Curl_pgrsTime(data, TIMER_APPCONNECT); /* we're connected already */
+    conn->bits.tcpconnect[FIRSTSOCKET] = TRUE;
+    *protocol_done = TRUE;
+    Curl_updateconninfo(conn, conn->sock[FIRSTSOCKET]);
+    Curl_verboseconnect(conn);
   }
 
   conn->now = Curl_tvnow(); /* time this *after* the connect is done, we
                                set this here perhaps a second time */
 
 #ifdef __EMX__
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/urldata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/urldata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/urldata.h	2013-10-13 04:24:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/urldata.h	2013-12-17 06:02:35.000000000 +0800
@@ -835,12 +835,13 @@
   struct Curl_dns_entry *dns_entry;
 
   /* 'ip_addr' is the particular IP we connected to. It points to a struct
      within the DNS cache, so this pointer is only valid as long as the DNS
      cache entry remains locked. It gets unlocked in Curl_done() */
   Curl_addrinfo *ip_addr;
+  Curl_addrinfo *tempaddr[2]; /* for happy eyeballs */
 
   /* 'ip_addr_str' is the ip_addr data as a human readable string.
      It remains available as long as the connection does, which is longer than
      the ip_addr itself. */
   char ip_addr_str[MAX_IPADR_LEN];
 
@@ -886,12 +887,13 @@
   int rtspversion;        /* the RTSP version*10 reported by the server */
 
   struct timeval now;     /* "current" time */
   struct timeval created; /* creation time */
   curl_socket_t sock[2]; /* two sockets, the second is used for the data
                             transfer when doing FTP */
+  curl_socket_t tempsock[2]; /* temporary sockets for happy eyeballs */
   bool sock_accepted[2]; /* TRUE if the socket on this index was created with
                             accept() */
   Curl_recv *recv[2];
   Curl_send *send[2];
 
   struct ssl_connect_data ssl[2]; /* this is for ssl-stuff */
@@ -1632,12 +1634,14 @@
                                   is to be used or not. */
   struct Progress progress;    /* for all the progress meter data */
   struct UrlState state;       /* struct for fields used for state info and
                                   other dynamic purposes */
   struct WildcardData wildcard; /* wildcard download state info */
   struct PureInfo info;        /* stats, reports and info data */
+  struct curl_tlssessioninfo tsi; /* Information about the TLS session, only
+                                     valid after a client has asked for it */
 #if defined(CURL_DOES_CONVERSIONS) && defined(HAVE_ICONV)
   iconv_t outbound_cd;         /* for translating to the network encoding */
   iconv_t inbound_cd;          /* for translating from the network encoding */
   iconv_t utf8_cd;             /* for translating to UTF8 */
 #endif /* CURL_DOES_CONVERSIONS && HAVE_ICONV */
   unsigned int magic;          /* set to a CURLEASY_MAGIC_NUMBER */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/url.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/url.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/url.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/url.h	2013-12-17 06:02:35.000000000 +0800
@@ -67,13 +67,13 @@
 void Curl_close_connections(struct SessionHandle *data);
 
 #define CURL_DEFAULT_PROXY_PORT 1080 /* default proxy port unless specified */
 #define CURL_DEFAULT_SOCKS5_GSSAPI_SERVICE "rcmd" /* default socks5 gssapi
                                                      service */
 
-CURLcode Curl_connected_proxy(struct connectdata *conn);
+CURLcode Curl_connected_proxy(struct connectdata *conn, int sockindex);
 
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
 #define Curl_verboseconnect(x)  Curl_nop_stmt
 #else
 void Curl_verboseconnect(struct connectdata *conn);
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/x509asn1.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/x509asn1.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/x509asn1.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/x509asn1.c	2013-12-17 06:02:35.000000000 +0800
@@ -19,13 +19,13 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
-#if defined(USE_QSOSSL) || defined(USE_GSKIT)
+#if defined(USE_QSOSSL) || defined(USE_GSKIT) || defined(USE_NSS)
 
 #include <curl/curl.h>
 #include "urldata.h"
 #include "strequal.h"
 #include "hostcheck.h"
 #include "sslgen.h"
@@ -249,13 +249,13 @@
 static ssize_t
 utf8asn1str(char * * to, int type, const char * from, const char * end)
 {
   size_t inlength = end - from;
   int size = 1;
   size_t outlength;
-  int chsize;
+  int charsize;
   unsigned int wc;
   char * buf;
 
   /* Perform a lazy conversion from an ASN.1 typed string to UTF8. Allocate the
      destination buffer dynamically. The allocation size will normally be too
      large: this is to avoid buffer overflows.
@@ -302,34 +302,34 @@
         wc = (wc << 8) | *(const unsigned char *) from++;
       case 2:
         wc = (wc << 8) | *(const unsigned char *) from++;
       default: /* case 1: */
         wc = (wc << 8) | *(const unsigned char *) from++;
       }
-      chsize = 1;
+      charsize = 1;
       if(wc >= 0x00000080) {
         if(wc >= 0x00000800) {
           if(wc >= 0x00010000) {
             if(wc >= 0x00200000) {
               free(buf);
               return -1;        /* Invalid char. size for target encoding. */
             }
             buf[outlength + 3] = (char) (0x80 | (wc & 0x3F));
             wc = (wc >> 6) | 0x00010000;
-            chsize++;
+            charsize++;
           }
           buf[outlength + 2] = (char) (0x80 | (wc & 0x3F));
           wc = (wc >> 6) | 0x00000800;
-          chsize++;
+          charsize++;
         }
         buf[outlength + 1] = (char) (0x80 | (wc & 0x3F));
         wc = (wc >> 6) | 0x000000C0;
-        chsize++;
+        charsize++;
       }
       buf[outlength] = (char) wc;
-      outlength += chsize;
+      outlength += charsize;
     }
   }
   buf[outlength] = '\0';
   *to = buf;
   return outlength;
 }
@@ -800,23 +800,25 @@
   param->beg = param->end = end;
   if(beg < end)
     Curl_getASN1Element(param, beg, end);
   return OID2str(oid.beg, oid.end, TRUE);
 }
 
-static void do_pubkey_field(struct SessionHandle *data, int certnum,
+static void do_pubkey_field(struct SessionHandle * data, int certnum,
                             const char * label, curl_asn1Element * elem)
 {
   const char * output;
 
   /* Generate a certificate information record for the public key. */
 
   output = Curl_ASN1tostr(elem, 0);
   if(output) {
-    Curl_ssl_push_certinfo(data, certnum, label, output);
-    infof(data, "   %s: %s\n", label, output);
+    if(data->set.ssl.certinfo)
+      Curl_ssl_push_certinfo(data, certnum, label, output);
+    if(!certnum)
+      infof(data, "   %s: %s\n", label, output);
     free((char *) output);
   }
 }
 
 static void do_pubkey(struct SessionHandle * data, int certnum,
                       const char * algo, curl_asn1Element * param,
@@ -842,17 +844,20 @@
     len = (elem.end - q) * 8;
     if(len)
       for(i = *(unsigned char *) q; !(i & 0x80); i <<= 1)
         len--;
     if(len > 32)
       elem.beg = q;     /* Strip leading zero bytes. */
-    infof(data, "   RSA Public Key (%lu bits)\n", len);
-    q = curl_maprintf("%lu", len);
-    if(q) {
-      Curl_ssl_push_certinfo(data, certnum, "RSA Public Key", q);
-      free((char *) q);
+    if(!certnum)
+      infof(data, "   RSA Public Key (%lu bits)\n", len);
+    if(data->set.ssl.certinfo) {
+      q = curl_maprintf("%lu", len);
+      if(q) {
+        Curl_ssl_push_certinfo(data, certnum, "RSA Public Key", q);
+        free((char *) q);
+      }
     }
     /* Generate coefficients. */
     do_pubkey_field(data, certnum, "rsa(n)", &elem);
     Curl_getASN1Element(&elem, p, pk.end);
     do_pubkey_field(data, certnum, "rsa(e)", &elem);
   }
@@ -893,104 +898,127 @@
   char * cp2;
   CURLcode cc;
   unsigned long version;
   size_t i;
   size_t j;
 
+  if(!data->set.ssl.certinfo)
+    if(certnum)
+      return CURLE_OK;
+
   /* Prepare the certificate information for curl_easy_getinfo(). */
 
   /* Extract the certificate ASN.1 elements. */
   Curl_parseX509(&cert, beg, end);
 
   /* Subject. */
   ccp = Curl_DNtostr(&cert.subject);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Subject", ccp);
-  infof(data, "%2d Subject: %s\n", certnum, ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Subject", ccp);
+  if(!certnum)
+    infof(data, "%2d Subject: %s\n", certnum, ccp);
   free((char *) ccp);
 
   /* Issuer. */
   ccp = Curl_DNtostr(&cert.issuer);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Issuer", ccp);
-  infof(data, "   Issuer: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Issuer", ccp);
+  if(!certnum)
+    infof(data, "   Issuer: %s\n", ccp);
   free((char *) ccp);
 
   /* Version (always fits in less than 32 bits). */
   version = 0;
   for(ccp = cert.version.beg; ccp < cert.version.end; ccp++)
     version = (version << 8) | *(const unsigned char *) ccp;
-  ccp = curl_maprintf("%lx", version);
-  if(!ccp)
-    return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Version", ccp);
-  free((char *) ccp);
-  infof(data, "   Version: %lu (0x%lx)\n", version + 1, version);
+  if(data->set.ssl.certinfo) {
+    ccp = curl_maprintf("%lx", version);
+    if(!ccp)
+      return CURLE_OUT_OF_MEMORY;
+    Curl_ssl_push_certinfo(data, certnum, "Version", ccp);
+    free((char *) ccp);
+  }
+  if(!certnum)
+    infof(data, "   Version: %lu (0x%lx)\n", version + 1, version);
 
   /* Serial number. */
   ccp = Curl_ASN1tostr(&cert.serialNumber, 0);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Serial Number", ccp);
-  infof(data, "   Serial Number: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Serial Number", ccp);
+  if(!certnum)
+    infof(data, "   Serial Number: %s\n", ccp);
   free((char *) ccp);
 
   /* Signature algorithm .*/
   ccp = dumpAlgo(&param, cert.signatureAlgorithm.beg,
                  cert.signatureAlgorithm.end);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Signature Algorithm", ccp);
-  infof(data, "   Signature Algorithm: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Signature Algorithm", ccp);
+  if(!certnum)
+    infof(data, "   Signature Algorithm: %s\n", ccp);
   free((char *) ccp);
 
   /* Start Date. */
   ccp = Curl_ASN1tostr(&cert.notBefore, 0);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Start Date", ccp);
-  infof(data, "   Start Date: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Start Date", ccp);
+  if(!certnum)
+    infof(data, "   Start Date: %s\n", ccp);
   free((char *) ccp);
 
   /* Expire Date. */
   ccp = Curl_ASN1tostr(&cert.notAfter, 0);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Expire Date", ccp);
-  infof(data, "   Expire Date: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Expire Date", ccp);
+  if(!certnum)
+    infof(data, "   Expire Date: %s\n", ccp);
   free((char *) ccp);
 
   /* Public Key Algorithm. */
   ccp = dumpAlgo(&param, cert.subjectPublicKeyAlgorithm.beg,
                  cert.subjectPublicKeyAlgorithm.end);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Public Key Algorithm", ccp);
-  infof(data, "   Public Key Algorithm: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Public Key Algorithm", ccp);
+  if(!certnum)
+    infof(data, "   Public Key Algorithm: %s\n", ccp);
   do_pubkey(data, certnum, ccp, &param, &cert.subjectPublicKey);
   free((char *) ccp);
 
 /* TODO: extensions. */
 
   /* Signature. */
   ccp = Curl_ASN1tostr(&cert.signature, 0);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
-  Curl_ssl_push_certinfo(data, certnum, "Signature", ccp);
-  infof(data, "   Signature: %s\n", ccp);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Signature", ccp);
+  if(!certnum)
+    infof(data, "   Signature: %s\n", ccp);
   free((char *) ccp);
 
   /* Generate PEM certificate. */
   cc = Curl_base64_encode(data, cert.certificate.beg,
                           cert.certificate.end - cert.certificate.beg,
                           &cp1, &cl1);
   if(cc != CURLE_OK)
     return cc;
-  /* Compute the number of charaters in final certificate string. Format is:
+  /* Compute the number of characters in final certificate string. Format is:
      -----BEGIN CERTIFICATE-----\n
      <max 64 base64 characters>\n
      .
      .
      .
      -----END CERTIFICATE-----\n
@@ -1005,14 +1033,16 @@
   i = copySubstring(cp2, "-----BEGIN CERTIFICATE-----");
   for(j = 0; j < cl1; j += 64)
     i += copySubstring(cp2 + i, cp1 + j);
   i += copySubstring(cp2 + i, "-----END CERTIFICATE-----");
   cp2[i] = '\0';
   free(cp1);
-  Curl_ssl_push_certinfo(data, certnum, "Cert", cp2);
-  infof(data, "%s\n", cp2);
+  if(data->set.ssl.certinfo)
+    Curl_ssl_push_certinfo(data, certnum, "Cert", cp2);
+  if(!certnum)
+    infof(data, "%s\n", cp2);
   free(cp2);
   return CURLE_OK;
 }
 
 
 CURLcode Curl_verifyhost(struct connectdata * conn,
@@ -1145,7 +1175,7 @@
     free(dnsname);
   }
 
   return CURLE_PEER_FAILED_VERIFICATION;
 }
 
-#endif /* USE_QSOSSL or USE_GSKIT */
+#endif /* USE_QSOSSL or USE_GSKIT or USE_NSS */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/x509asn1.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/x509asn1.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/lib/x509asn1.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/lib/x509asn1.h	2013-12-17 06:02:35.000000000 +0800
@@ -22,13 +22,13 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
-#if defined(USE_QSOSSL) || defined(USE_GSKIT)
+#if defined(USE_QSOSSL) || defined(USE_GSKIT) || defined(USE_NSS)
 
 #include "urldata.h"
 
 /*
  * Constants.
  */
@@ -122,8 +122,8 @@
                     const char * beg, const char * end);
 CURLcode Curl_extract_certinfo(struct connectdata * conn, int certnum,
                                const char * beg, const char * end);
 CURLcode Curl_verifyhost(struct connectdata * conn,
                          const char * beg, const char * end);
 
-#endif /* USE_QSOSSL or USE_GSKIT */
+#endif /* USE_QSOSSL or USE_GSKIT or USE_NSS */
 #endif /* HEADER_CURL_X509ASN1_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/Makefile.in	2013-10-14 22:43:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/Makefile.in	2013-12-17 15:51:23.000000000 +0800
@@ -323,13 +323,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
@@ -533,13 +532,13 @@
   warnless.h curl_hmac.h polarssl.h polarssl_threadlock.h curl_rtmp.h	\
   curl_gethostname.h gopher.h axtls.h cyassl.h http_proxy.h non-ascii.h	\
   asyn.h curl_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h	\
   curl_ntlm_msgs.h curl_sasl.h curl_schannel.h curl_multibyte.h		\
   curl_darwinssl.h hostcheck.h bundles.h conncache.h curl_setup_once.h	\
   multihandle.h setup-vms.h pipeline.h dotdot.h x509asn1.h gskit.h	\
-  http2.h
+  http2.h sigpipe.h
 
 
 # List of libcurl source files required to generate VC IDE dsp and prj files
 WIN32SOURCES = $(CSOURCES)
 WIN32HEADERS = $(HHEADERS) config-win32.h
 all: all-recursive
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/AIX/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/AIX/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/AIX/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/AIX/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -239,13 +239,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/AIX/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/AIX/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/AIX/RPM/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/AIX/RPM/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -179,13 +179,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/EPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/EPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/EPM/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/EPM/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -179,13 +179,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Linux/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Linux/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Linux/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Linux/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -239,13 +239,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Linux/RPM/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Linux/RPM/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Linux/RPM/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Linux/RPM/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -180,13 +180,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -239,13 +239,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/ccsidcurl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/ccsidcurl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/ccsidcurl.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/ccsidcurl.c	2013-12-17 06:02:35.000000000 +0800
@@ -74,13 +74,14 @@
   memset(buf, 0, ICONV_ID_SIZE);
   curl_msprintf(buf, "IBMCCSID%05u0000000", ccsid);
 }
 
 
 static iconv_t
-iconv_open_CCSID(unsigned int ccsidout, unsigned int ccsidin, unsigned int cstr)
+iconv_open_CCSID(unsigned int ccsidout, unsigned int ccsidin,
+                                                        unsigned int cstr)
 
 {
   char fromcode[ICONV_ID_SIZE];
   char tocode[ICONV_ID_SIZE];
 
   /**
@@ -215,13 +216,13 @@
 slist_convert(int dccsid, struct curl_slist * from, int sccsid)
 
 {
   struct curl_slist * to = (struct curl_slist *) NULL;
   char * cp;
 
-  for (; from; from = from->next) {
+  for(; from; from = from->next) {
     if(!(cp = dynconvert(dccsid, from->data, -1, sccsid))) {
       curl_slist_free_all(to);
       return (struct curl_slist *) NULL;
     }
     to = Curl_slist_append_nodup(to, cp);
   }
@@ -404,13 +405,13 @@
 
   /* The assertion below is possible, because although the second operand
      is an enum member, the first is a #define. In that case, the OS/400 C
      compiler seems to compare string values after substitution. */
 
 #if CURLVERSION_NOW != CURLVERSION_FOURTH
-#error curl_version_info_data structure has changed: upgrade this procedure too.
+#error curl_version_info_data structure has changed: upgrade this procedure.
 #endif
 
   /* If caller has been compiled with a new version, error. */
 
   if(stamp > CURLVERSION_NOW)
     return (curl_version_info_data *) NULL;
@@ -423,13 +424,13 @@
   /* Measure thread space needed. */
 
   n = 0;
   nproto = 0;
 
   if(p->protocols) {
-    while (p->protocols[nproto])
+    while(p->protocols[nproto])
       n += strlen(p->protocols[nproto++]);
 
     n += nproto++;
     }
 
   if(p->version)
@@ -475,13 +476,13 @@
     id->protocols = (const char * const *) cp;
     i = nproto * sizeof id->protocols[0];
     memcpy(cp, (char *) p->protocols, i);
     cp += i;
     n -= i;
 
-    for (i = 0; id->protocols[i]; i++)
+    for(i = 0; id->protocols[i]; i++)
       if(convert_version_info_string(((const char * *) id->protocols) + i,
                                       &cp, &n, ccsid))
         return (curl_version_info_data *) NULL;
     }
 
   if(convert_version_info_string(&id->version, &cp, &n, ccsid))
@@ -590,13 +591,13 @@
 {
   int i;
 
   /* Free all memory used by certificate info. */
   if(info) {
     if(info->certinfo) {
-      for (i = 0; i < info->num_of_certs; i++)
+      for(i = 0; i < info->num_of_certs; i++)
         curl_slist_free_all(info->certinfo[i]);
       free((char *) info->certinfo);
     }
     free((char *) info);
   }
 }
@@ -644,25 +645,27 @@
       }
 
       break;
 
     case CURLINFO_SLIST:
       ccsid = va_arg(arg, unsigned int);
-      if(info == CURLINFO_CERTINFO) {
+      switch (info) {
+      case CURLINFO_CERTINFO:
         cipf = *(struct curl_certinfo * *) paramp;
         if(cipf) {
           if(!(cipt = (struct curl_certinfo *) malloc(sizeof *cipt)))
             ret = CURLE_OUT_OF_MEMORY;
           else {
-            cipt->certinfo = (struct curl_slist * *) calloc(cipf->num_of_certs +
-                             1, sizeof(struct curl_slist *));
+            cipt->certinfo = (struct curl_slist * *)
+                             calloc(cipf->num_of_certs +
+                                    1, sizeof(struct curl_slist *));
             if(!cipt->certinfo)
               ret = CURLE_OUT_OF_MEMORY;
             else {
               cipt->num_of_certs = cipf->num_of_certs;
-              for (i = 0; i < cipf->num_of_certs; i++)
+              for(i = 0; i < cipf->num_of_certs; i++)
                 if(cipf->certinfo[i])
                   if(!(cipt->certinfo[i] = slist_convert(ccsid,
                                                           cipf->certinfo[i],
                                                           ASCII_CCSID))) {
                     ret = CURLE_OUT_OF_MEMORY;
                     break;
@@ -674,18 +677,24 @@
             curl_certinfo_free_all(cipt);
             cipt = (struct curl_certinfo *) NULL;
           }
 
           *(struct curl_certinfo * *) paramp = cipt;
         }
-      }
-      else {
+
+        break;
+
+      case CURLINFO_TLS_SESSION:
+        break;
+
+      default:
         slp = (struct curl_slist * *) paramp;
         if(*slp)
           if(!(*slp = slist_convert(ccsid, *slp, ASCII_CCSID)))
             ret = CURLE_OUT_OF_MEMORY;
+        break;
       }
     }
 
   va_end(arg);
   return ret;
 }
@@ -712,13 +721,13 @@
 
 
 static void
 Curl_formadd_release_local(struct curl_forms * forms, int nargs, int skip)
 
 {
-  while (nargs--)
+  while(nargs--)
     if(nargs != skip)
       if(Curl_is_formadd_string(forms[nargs].option))
         if(forms[nargs].value)
           free((char *) forms[nargs].value);
 
   free((char *) forms);
@@ -752,21 +761,21 @@
 
   if(l < 0) {
     free(cp);
     return -1;
     }
 
-  cp2 = realloc(cp, l);                 /* Shorten buffer to the string size. */
+  cp2 = realloc(cp, l);         /* Shorten buffer to the string size. */
 
   if(cp2)
     cp = cp2;
 
   forms[formx].value = cp;
 
   if(lengthx >= 0)
-    forms[lengthx].value = (char *) l;  /* Update to length after conversion. */
+    forms[lengthx].value = (char *) l;  /* Update length after conversion. */
 
   return l;
 }
 
 
 CURLFORMcode
@@ -823,13 +832,13 @@
   lengthx = -1;
   namex = -1;
   namelengthx = -1;
   forms = (struct curl_forms *) NULL;
   va_start(arg, last_post);
 
-  for (;;) {
+  for(;;) {
     /* Make sure there is still room for an item in local array. */
 
     if(nargs >= lformlen) {
       lformlen += ALLOC_GRANULE;
       tforms = realloc(lforms, lformlen * sizeof *lforms);
 
@@ -1108,17 +1117,13 @@
      the same message; but since threadsafeness is not handled here,
      this may occur (and we don't care!). */
 
   if(testwarn) {
     testwarn = 0;
 
-#ifdef USE_TLS_SRP
-    if((int) STRING_LAST != (int) STRING_TLSAUTH_PASSWORD + 1)
-#else
-    if((int) STRING_LAST != (int) STRING_MAIL_AUTH + 1)
-#endif
+    if((int) STRING_LAST != (int) STRING_BEARER + 1)
       curl_mfprintf(stderr,
        "*** WARNING: curl_easy_setopt_ccsid() should be reworked ***\n");
     }
 
   data = (struct SessionHandle *) curl;
   va_start(arg, tag);
@@ -1140,12 +1145,13 @@
   case CURLOPT_FTP_ALTERNATIVE_TO_USER:
   case CURLOPT_FTPPORT:
   case CURLOPT_INTERFACE:
   case CURLOPT_ISSUERCERT:
   case CURLOPT_KEYPASSWD:
   case CURLOPT_KRBLEVEL:
+  case CURLOPT_LOGIN_OPTIONS:
   case CURLOPT_MAIL_FROM:
   case CURLOPT_MAIL_AUTH:
   case CURLOPT_NETRC_FILE:
   case CURLOPT_NOPROXY:
   case CURLOPT_PASSWORD:
   case CURLOPT_PROXY:
@@ -1173,12 +1179,13 @@
   case CURLOPT_TLSAUTH_TYPE:
   case CURLOPT_TLSAUTH_USERNAME:
   case CURLOPT_URL:
   case CURLOPT_USERAGENT:
   case CURLOPT_USERNAME:
   case CURLOPT_USERPWD:
+  case CURLOPT_XOAUTH2_BEARER:
     s = va_arg(arg, char *);
     ccsid = va_arg(arg, unsigned int);
 
     if(s) {
       s = dynconvert(ASCII_CCSID, s, -1, ccsid);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/ccsidcurl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/ccsidcurl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/ccsidcurl.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/ccsidcurl.h	2013-12-17 06:02:35.000000000 +0800
@@ -35,19 +35,19 @@
                                           unsigned int sccsid,
                                           unsigned int dccsid);
 CURL_EXTERN char * curl_easy_unescape_ccsid(CURL * handle, const char * string,
                                             int length, int * outlength,
                                             unsigned int sccsid,
                                             unsigned int dccsid);
-CURL_EXTERN struct curl_slist * curl_slist_append_ccsid(struct curl_slist * lst,
+CURL_EXTERN struct curl_slist * curl_slist_append_ccsid(struct curl_slist * l,
                                                         const char * data,
                                                         unsigned int ccsid);
 CURL_EXTERN time_t curl_getdate_ccsid(const char * p, const time_t * unused,
                                       unsigned int ccsid);
 CURL_EXTERN curl_version_info_data * curl_version_info_ccsid(CURLversion stamp,
-                                                             unsigned int csid);
+                                                             unsigned int cid);
 CURL_EXTERN const char * curl_easy_strerror_ccsid(CURLcode error,
                                                   unsigned int ccsid);
 CURL_EXTERN const char * curl_share_strerror_ccsid(CURLSHcode error,
                                                    unsigned int ccsid);
 CURL_EXTERN const char * curl_multi_strerror_ccsid(CURLMcode error,
                                                    unsigned int ccsid);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/curl.inc.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/curl.inc.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/curl.inc.in	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/curl.inc.in	2013-12-17 06:02:35.000000000 +0800
@@ -112,12 +112,14 @@
      d CURL_VERSION_CURLDEBUG...
      d                 c                   X'00002000'
      d CURL_VERSION_TLSAUTH_SRP...
      d                 c                   X'00004000'
      d CURL_VERSION_NTLM_WB...
      d                 c                   X'00008000'
+     d CURL_VERSION_HTTP2...
+     d                 c                   X'00010000'
       *
      d HTTPPOST_FILENAME...
      d                 c                   X'00000001'
      d HTTPPOST_READFILE...
      d                 c                   X'00000002'
      d HTTPPOST_PTRNAME...
@@ -209,12 +211,14 @@
      d CURL_HTTP_VERSION_NONE...
      d                 c                   0
      d CURL_HTTP_VERSION_1_0...
      d                 c                   1
      d CURL_HTTP_VERSION_1_1...
      d                 c                   2
+     d CURL_HTTP_VERSION_2_0...
+     d                 c                   3
       *
      d CURL_NETRC_IGNORED...
      d                 c                   0
      d CURL_NETRC_OPTIONAL...
      d                 c                   1
      d CURL_NETRC_REQUIRED...
@@ -225,12 +229,18 @@
      d CURL_SSLVERSION_TLSv1...
      d                 c                   1
      d CURL_SSLVERSION_SSLv2...
      d                 c                   2
      d CURL_SSLVERSION_SSLv3...
      d                 c                   3
+     d CURL_SSLVERSION_TLSv1_0...
+     d                 c                   4
+     d CURL_SSLVERSION_TLSv1_1...
+     d                 c                   5
+     d CURL_SSLVERSION_TLSv1_2...
+     d                 c                   6
       *
      d CURL_TLSAUTH_NONE...
      d                 c                   0
      d CURL_TLSAUTH_SRP...
      d                 c                   1
       *
@@ -1159,12 +1169,22 @@
      d  CURLOPT_MAIL_AUTH...
      d                 c                   10217
      d  CURLOPT_SASL_IR...
      d                 c                   00218
      d  CURLOPT_XFERINFOFUNCTION...
      d                 c                   20219
+     d  CURLOPT_XOAUTH2_BEARER...
+     d                 c                   10220
+     d  CURLOPT_DNS_INTERFACE...
+     d                 c                   10221
+     d  CURLOPT_DNS_LOCAL_IP4...
+     d                 c                   10222
+     d  CURLOPT_DNS_LOCAL_IP6...
+     d                 c                   10223
+     d  CURLOPT_LOGIN_OPTIONS...
+     d                 c                   10224
       *
       /if not defined(CURL_NO_OLDIES)
      d  CURLOPT_SSLKEYPASSWD...
      d                 c                   10026
      d  CURLOPT_SSLCERTPASSWD...
      d                 c                   10026
@@ -1326,16 +1346,41 @@
      d  CURLINFO_PRIMARY_PORT...                                                CURLINFO_LONG + 40
      d                 c                   X'00200028'
      d  CURLINFO_LOCAL_IP...                                                    CURLINFO_STRING + 41
      d                 c                   X'00100029'
      d  CURLINFO_LOCAL_PORT...                                                  CURLINFO_LONG + 42
      d                 c                   X'0020002A'
+     d  CURLINFO_TLS_SESSION...                                                 CURLINFO_SLIST + 43
+     d                 c                   X'0040002B'
       *
      d  CURLINFO_HTTP_CODE...                                                   Old ...RESPONSE_CODE
      d                 c                   X'00200002'
       *
+     d curl_sslbackend...
+     d                 s             10i 0 based(######ptr######)               Enum
+     d  CURLSSLBACKEND_NONE...
+     d                 c                   0
+     d  CURLSSLBACKEND_OPENSSL...
+     d                 c                   1
+     d  CURLSSLBACKEND_GNUTLS...
+     d                 c                   2
+     d  CURLSSLBACKEND_NSS...
+     d                 c                   3
+     d  CURLSSLBACKEND_QSOSSL...
+     d                 c                   4
+     d  CURLSSLBACKEND_GSKIT...
+     d                 c                   5
+     d  CURLSSLBACKEND_POLARSSL...
+     d                 c                   6
+     d  CURLSSLBACKEND_CYASSL...
+     d                 c                   7
+     d  CURLSSLBACKEND_SCHANNEL...
+     d                 c                   8
+     d  CURLSSLBACKEND_DARWINSSL...
+     d                 c                   9
+      *
      d curl_closepolicy...
      d                 s             10i 0 based(######ptr######)               Enum
      d  CURLCLOSEPOLICY_OLDEST...
      d                 c                   1
      d  CURLCLOSEPOLICY_LEAST_RECENTLY_USED...
      d                 c                   2
@@ -1448,13 +1493,15 @@
      d  CURLM_INTERNAL_ERROR...
      d                 c                   4
      d  CURLM_BAD_SOCKET...
      d                 c                   5
      d  CURLM_UNKNOWN_OPTION...
      d                 c                   6
-     d  CURLM_LAST     c                   7
+     d  CURLM_ADDED_ALREADY...
+     d                 c                   7
+     d  CURLM_LAST     c                   8
       *
      d CURLMSG         s             10i 0 based(######ptr######)               Enum
      d  CURLMSG_NONE   c                   0
      d  CURLMSG_DONE   c                   1
       *
      d CURLMoption     s             10i 0 based(######ptr######)               Enum
@@ -1557,27 +1604,28 @@
      d  family                       10i 0
      d  socktype                     10i 0
      d  protocol                     10i 0
      d  addrlen                      10u 0
      d  addr                         16                                         struct sockaddr
       *
-     d curl_khkey      ds                  based(######ptr######)
-     d                                     qualified
-     d  key                            *                                        const char *
-     d  len                          10u 0
-     d  keytype                      10i 0
-      *
+     d curl_khtype     s             10i 0 based(######ptr######)               enum
      d CURLKHTYPE_UNKNOWN...
      d                 c                   0
      d CURLKHTYPE_RSA1...
      d                 c                   1
      d CURLKHTYPE_RSA...
      d                 c                   2
      d CURLKHTYPE_DSS...
      d                 c                   3
       *
+     d curl_khkey      ds                  based(######ptr######)
+     d                                     qualified
+     d  key                            *                                        const char *
+     d  len                          10u 0
+     d  keytype                            like(curl_khtype)
+      *
      d curl_forms      ds                  based(######ptr######)
      d                                     qualified
      d  option                             like(CURLformoption)
      d  value                          *                                        const char *
      d   value_ptr                     *   overlay(value)
      d   value_procptr...
@@ -1619,12 +1667,18 @@
      d  time                           *                                        char *
      d  perm                           *                                        char *
      d  user                           *                                        char *
      d  group                          *                                        char *
      d  target                         *                                        char *
       *
+     d curl_tlssessioninfo...
+     d                 ds                  based(######ptr######)
+     d                                     qualified
+     d  backend                            like(curl_sslbackend)
+     d  internals                      *                                        void *
+      *
      d curl_fileinfo   ds                  based(######ptr######)
      d                                     qualified
      d  filename                       *                                        char *
      d  filetype                           like(curlfiletype)
      d  time                         10i 0                                      time_t
      d  perm                         10u 0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/initscript.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/initscript.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/initscript.sh	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/initscript.sh	2013-12-17 06:02:35.000000000 +0800
@@ -1,9 +1,19 @@
 #!/bin/sh
 
 
+setenv()
+
+{
+        #       Define and export.
+
+        eval ${1}="${2}"
+        export ${1}
+}
+
+
 case "${SCRIPTDIR}" in
 /*)     ;;
 *)      SCRIPTDIR="`pwd`/${SCRIPTDIR}"
 esac
 
 while true
@@ -29,24 +39,29 @@
 ################################################################################
 #
 #                       Tunable configuration parameters.
 #
 ################################################################################
 
-TARGETLIB='CURL'                # Target OS/400 program library
-STATBNDDIR='CURL_A'             # Static binding directory.
-DYNBNDDIR='CURL'                # Dynamic binding directory.
-SRVPGM="CURL.${SONAME}"         # Service program.
-TGTCCSID='500'                  # Target CCSID of objects
-DEBUG='*ALL'                    # Debug level
-OPTIMIZE='10'                   # Optimisation level
-OUTPUT='*NONE'                  # Compilation output option.
-TGTRLS='V5R3M0'                 # Target OS release
-
-export TARGETLIB STATBNDDIR DYNBNDDIR SRVPGM TGTCCSID DEBUG OPTIMIZE OUTPUT
-export TGTRLS
+setenv TARGETLIB        'CURL'                  # Target OS/400 program library.
+setenv STATBNDDIR       'CURL_A'                # Static binding directory.
+setenv DYNBNDDIR        'CURL'                  # Dynamic binding directory.
+setenv SRVPGM           "CURL.${SONAME}"        # Service program.
+setenv TGTCCSID         '500'                   # Target CCSID of objects.
+setenv DEBUG            '*ALL'                  # Debug level.
+setenv OPTIMIZE         '10'                    # Optimisation level
+setenv OUTPUT           '*NONE'                 # Compilation output option.
+setenv TGTRLS           'V5R3M0'                # Target OS release.
+setenv IFSDIR           '/curl'                 # Installation IFS directory.
+
+#       Define ZLIB availability and locations.
+
+setenv WITH_ZLIB        0                       # Define to 1 to enable.
+setenv ZLIB_INCLUDE     '/zlib/include'         # ZLIB include IFS directory.
+setenv ZLIB_LIB         'ZLIB'                  # ZLIB library.
+setenv ZLIB_BNDDIR      'ZLIB_A'                # ZLIB binding directory.
 
 
 ################################################################################
 
 #       Need to get the version definitions.
 
@@ -130,20 +145,32 @@
         CMD="CRTCMOD MODULE(${TARGETLIB}/${1}) SRCSTMF('__tmpsrcf.c')"
 #       CMD="${CMD} SYSIFCOPT(*IFS64IO) OPTION(*INCDIRFIRST *SHOWINC *SHOWSYS)"
         CMD="${CMD} SYSIFCOPT(*IFS64IO) OPTION(*INCDIRFIRST)"
         CMD="${CMD} LOCALETYPE(*LOCALE)"
         CMD="${CMD} INCDIR('/qibm/proddata/qadrt/include'"
         CMD="${CMD} '${TOPDIR}/include/curl' '${TOPDIR}/include'"
-        CMD="${CMD} '${TOPDIR}/packages/OS400' ${INCLUDES})"
+        CMD="${CMD} '${TOPDIR}/packages/OS400'"
+
+        if [ "${WITH_ZLIB}" != "0" ]
+        then    CMD="${CMD} '${ZLIB_INCLUDE}'"
+        fi
+
+        CMD="${CMD} ${INCLUDES})"
         CMD="${CMD} TGTCCSID(${TGTCCSID}) TGTRLS(${TGTRLS})"
         CMD="${CMD} OUTPUT(${OUTPUT})"
         CMD="${CMD} OPTIMIZE(${OPTIMIZE})"
         CMD="${CMD} DBGVIEW(${DEBUG})"
 
-        if [ "${3}" ]
-        then    CMD="${CMD} DEFINE(${3})"
+        DEFINES="${3}"
+
+        if [ "${WITH_ZLIB}" != "0" ]
+        then    DEFINES="${DEFINES} HAVE_LIBZ HAVE_ZLIB_H"
+        fi
+
+        if [ "${DEFINES}" ]
+        then    CMD="${CMD} DEFINE(${DEFINES})"
         fi
 
         system "${CMD}"
         rm -f __tmpsrcf.c
         LINK=YES
 }
@@ -151,17 +178,23 @@
 
 #       Determine DB2 object name from IFS name.
 
 db2_name()
 
 {
-        basename "${1}"                                                 |
-        tr 'a-z-' 'A-Z_'                                                |
-        sed -e 's/\..*//'                                               \
-            -e 's/^CURL_*/C/'                                           \
-            -e 's/^\(.\).*\(.........\)$/\1\2/'
+        if [ "${2}" = 'nomangle' ]
+        then    basename "${1}"                                         |
+                tr 'a-z-' 'A-Z_'                                        |
+                sed -e 's/\..*//'                                       \
+                    -e 's/^\(.\).*\(.........\)$/\1\2/'
+        else    basename "${1}"                                         |
+                tr 'a-z-' 'A-Z_'                                        |
+                sed -e 's/\..*//'                                       \
+                    -e 's/^CURL_*/C/'                                   \
+                    -e 's/^\(.\).*\(.........\)$/\1\2/'
+        fi
 }
 
 
 #       Copy IFS file replacing version info.
 
 versioned_copy()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/make-include.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/make-include.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/make-include.sh	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/make-include.sh	2013-12-17 06:02:35.000000000 +0800
@@ -1,36 +1,45 @@
 #!/bin/sh
 #
-#       Installation of the include files in the OS/400 library.
+#       Installation of the header files in the OS/400 library.
 #
 
 SCRIPTDIR=`dirname "${0}"`
 . "${SCRIPTDIR}/initscript.sh"
 cd "${TOPDIR}/include"
 
 
-#	Produce the curlbuild.h include file if not yet in distribution (CVS).
+#       Produce the curlbuild.h header file if not yet in distribution (CVS).
 
 if action_needed curl/curlbuild.h
 then	if action_needed curl/curlbuild.h curl/curlbuild.h.dist
 	then	cp -p curl/curlbuild.h.dist curl/curlbuild.h
 	fi
 fi
 
 
-#       Create the OS/400 source program file for the include files.
+#       Create the OS/400 source program file for the header files.
 
 SRCPF="${LIBIFSNAME}/H.FILE"
 
 if action_needed "${SRCPF}"
 then    CMD="CRTSRCPF FILE(${TARGETLIB}/H) RCDLEN(112)"
         CMD="${CMD} CCSID(${TGTCCSID}) TEXT('curl: Header files')"
         system "${CMD}"
 fi
 
 
+#       Create the IFS directory for the header files.
+
+IFSINCLUDE="${IFSDIR}/include/curl"
+
+if action_needed "${IFSINCLUDE}"
+then    mkdir -p "${IFSINCLUDE}"
+fi
+
+
 #       Enumeration values are used as va_arg tagfields, so they MUST be
 #               integers.
 
 copy_hfile()
 
 {
@@ -45,22 +54,33 @@
 ' < "${srcfile}" > "${destfile}"
 }
 
 #       Copy the header files.
 
 for HFILE in curl/*.h ${SCRIPTDIR}/ccsidcurl.h
-do      DEST="${SRCPF}/`db2_name \"${HFILE}\"`.MBR"
+do      case "`basename \"${HFILE}\" .h`" in
+        stdcheaders|typecheck-gcc)
+                continue;;
+        esac
+
+        DEST="${SRCPF}/`db2_name \"${HFILE}\" nomangle`.MBR"
+
         if action_needed "${DEST}" "${HFILE}"
         then    copy_hfile "${DEST}" "${HFILE}"
+                IFSDEST="${IFSINCLUDE}/`basename \"${HFILE}\"`"
+                rm -f "${IFSDEST}"
+                ln -s "${DEST}" "${IFSDEST}"
         fi
 done
 
 
-#       Copy the ILE/RPG include file, setting-up version number.
+#       Copy the ILE/RPG header file, setting-up version number.
 
-        versioned_copy "${SCRIPTDIR}/curl.inc.in" "${SRCPF}/CURL.INC.MBR"
+versioned_copy "${SCRIPTDIR}/curl.inc.in" "${SRCPF}/CURL.INC.MBR"
+rm -f "${IFSINCLUDE}/curl.inc.rpgle"
+ln -s "${SRCPF}/CURL.INC.MBR" "${IFSINCLUDE}/curl.inc.rpgle"
 
 
 #	Duplicate file H as CURL to support more include path forms.
 
 if action_needed "${LIBIFSNAME}/CURL.FILE"
 then	:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/make-lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/make-lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/make-lib.sh	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/make-lib.sh	2013-12-17 06:02:35.000000000 +0800
@@ -80,18 +80,18 @@
         system "${CMD}"
 fi
 
 
 #       Gather the list of symbols to export.
 
-EXPORTS=`grep '^CURL_EXTERN[ 	]'                                      \
+EXPORTS=`grep '^CURL_EXTERN[[:space:]]'                                 \
               "${TOPDIR}"/include/curl/*.h                              \
               "${SCRIPTDIR}/ccsidcurl.h"                                |
-         sed -e 's/^.*CURL_EXTERN[ 	]\(.*\)(.*$/\1/'                \
-             -e 's/[ 	]*$//'                                          \
-             -e 's/^.*[ 	][ 	]*//'                           \
+         sed -e 's/^.*CURL_EXTERN[[:space:]]\(.*\)(.*$/\1/'             \
+             -e 's/[[:space:]]*$//'                                     \
+             -e 's/^.*[[:space:]][[:space:]]*//'                        \
              -e 's/^\*//'                                               \
              -e 's/(\(.*\))/\1/'`
 
 #       Create the service program exportation file in DB2 member if needed.
 
 BSF="${LIBIFSNAME}/TOOLS.FILE/BNDSRC.MBR"
@@ -118,13 +118,17 @@
 fi
 
 if [ "${LINK}" ]
 then    CMD="CRTSRVPGM SRVPGM(${TARGETLIB}/${SRVPGM})"
         CMD="${CMD} SRCFILE(${TARGETLIB}/TOOLS) SRCMBR(BNDSRC)"
         CMD="${CMD} MODULE(${TARGETLIB}/OS400)"
-        CMD="${CMD} BNDDIR(${TARGETLIB}/${STATBNDDIR})"
+        CMD="${CMD} BNDDIR(${TARGETLIB}/${STATBNDDIR}"
+        if [ "${WITH_ZLIB}" != 0 ]
+        then    CMD="${CMD} ${ZLIB_LIB}/${ZLIB_BNDDIR}"
+        fi
+        CMD="${CMD})"
         CMD="${CMD} BNDSRVPGM(QADRTTS QGLDCLNT QGLDBRDR)"
         CMD="${CMD} TEXT('curl API library')"
         CMD="${CMD} TGTRLS(${TGTRLS})"
         system "${CMD}"
         LINK=YES
 fi
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/make-tests.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/make-tests.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/make-tests.sh	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/make-tests.sh	2013-12-17 06:02:35.000000000 +0800
@@ -25,17 +25,17 @@
 eval "`sed -e ': begin'                                                 \
         -e '/\\\\$/{'                                                   \
         -e 'N'                                                          \
         -e 's/\\\\\\n/ /'                                               \
         -e 'b begin'                                                    \
         -e '}'                                                          \
-        -e '/^[A-Za-z_][A-Za-z0-9_]*[ 	]*[=]/b keep'                   \
+        -e '/^[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[=]/b keep'             \
         -e 'd'                                                          \
         -e ': keep'                                                     \
-        -e 's/[ 	]*=[ 	]*/=/'                                  \
-        -e 's/=\\(.*[^ 	]\\)[ 	]*$/=\\"\\1\\"/'                        \
+        -e 's/[[:space:]]*=[[:space:]]*/=/'                             \
+        -e 's/=\\(.*[^[:space:]]\\)[[:space:]]*$/=\\"\\1\\"/'           \
         -e 's/\\$(\\([^)]*\\))/${\\1}/g'                                \
         < Makefile.inc`"
 
 #       Special case: redefine chkhostname compilation parameters.
 
 chkhostname_SOURCES=chkhostname.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/os400sys.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/os400sys.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/os400sys.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/os400sys.c	2013-12-17 06:02:35.000000000 +0800
@@ -35,12 +35,16 @@
 #include <string.h>
 #include <pthread.h>
 #include <netdb.h>
 #include <qadrt.h>
 #include <errno.h>
 
+#ifdef HAVE_ZLIB_H
+#include <zlib.h>
+#endif
+
 #ifdef USE_QSOSSL
 #include <qsossl.h>
 #endif
 
 #ifdef USE_GSKIT
 #include <gskssl.h>
@@ -94,17 +98,17 @@
 thdbufdestroy(void * private)
 
 {
   localkey_t i;
   buffer_t * p;
 
-  if (private) {
+  if(private) {
     p = (buffer_t *) private;
 
-    for (i = (localkey_t) 0; i < LK_LAST; i++) {
-      if (p->buf)
+    for(i = (localkey_t) 0; i < LK_LAST; i++) {
+      if(p->buf)
         free(p->buf);
 
       p++;
       }
 
     free(private);
@@ -113,19 +117,19 @@
 
 
 static void
 terminate(void)
 
 {
-  if (Curl_thread_buffer == buffer_threaded) {
+  if(Curl_thread_buffer == buffer_threaded) {
     locbufs = pthread_getspecific(thdkey);
     pthread_setspecific(thdkey, (void *) NULL);
     pthread_key_delete(thdkey);
     }
 
-  if (Curl_thread_buffer != buffer_undef) {
+  if(Curl_thread_buffer != buffer_undef) {
     thdbufdestroy((void *) locbufs);
     locbufs = (buffer_t *) NULL;
     }
 
   Curl_thread_buffer = buffer_undef;
 }
@@ -137,37 +141,37 @@
 {
   char * cp;
 
   /* If `size' >= 0, make sure buffer at `buf' is at least `size'-byte long.
      Return the buffer address. */
 
-  if (size < 0)
+  if(size < 0)
     return buf->buf;
 
-  if (!buf->buf) {
-    if ((buf->buf = malloc(size)))
+  if(!buf->buf) {
+    if((buf->buf = malloc(size)))
       buf->size = size;
 
     return buf->buf;
     }
 
-  if ((unsigned long) size <= buf->size) {
+  if((unsigned long) size <= buf->size) {
     /* Shorten the buffer only if it frees a significant byte count. This
        avoids some realloc() overhead. */
 
-    if (buf->size - size < MIN_BYTE_GAIN)
+    if(buf->size - size < MIN_BYTE_GAIN)
       return buf->buf;
     }
 
   /* Resize the buffer. */
 
-  if ((cp = realloc(buf->buf, size))) {
+  if((cp = realloc(buf->buf, size))) {
     buf->buf = cp;
     buf->size = size;
     }
-  else if (size <= buf->size)
+  else if(size <= buf->size)
     cp = buf->buf;
 
   return cp;
 }
 
 
@@ -188,22 +192,22 @@
   /* Get the buffer for the given local key in the current thread, and
      make sure it is at least `size'-byte long. Set `size' to < 0 to get
      its address only. */
 
   bufs = (buffer_t *) pthread_getspecific(thdkey);
 
-  if (!bufs) {
-    if (size < 0)
+  if(!bufs) {
+    if(size < 0)
       return (char *) NULL;             /* No buffer yet. */
 
     /* Allocate buffer descriptors for the current thread. */
 
-    if (!(bufs = calloc((size_t) LK_LAST, sizeof *bufs)))
+    if(!(bufs = calloc((size_t) LK_LAST, sizeof *bufs)))
       return (char *) NULL;
 
-    if (pthread_setspecific(thdkey, (void *) bufs)) {
+    if(pthread_setspecific(thdkey, (void *) bufs)) {
       free(bufs);
       return (char *) NULL;
       }
     }
 
   return get_buffer(bufs + key, size);
@@ -219,17 +223,16 @@
      Set `size' to < 0 to get its address only. */
 
   pthread_mutex_lock(&mutex);
 
   /* Determine if we can use pthread-specific data. */
 
-  if (Curl_thread_buffer == buffer_undef) {     /* If unchanged during lock. */
-    if (!pthread_key_create(&thdkey, thdbufdestroy))
+  if(Curl_thread_buffer == buffer_undef) {      /* If unchanged during lock. */
+    if(!pthread_key_create(&thdkey, thdbufdestroy))
       Curl_thread_buffer = buffer_threaded;
-    else if (!(locbufs = calloc((size_t) LK_LAST,
-                                             sizeof *locbufs))) {
+    else if(!(locbufs = calloc((size_t) LK_LAST, sizeof *locbufs))) {
       pthread_mutex_unlock(&mutex);
       return (char *) NULL;
       }
     else
         Curl_thread_buffer = buffer_unthreaded;
 
@@ -238,12 +241,34 @@
 
   pthread_mutex_unlock(&mutex);
   return Curl_thread_buffer(key, size);
 }
 
 
+static char *
+set_thread_string(localkey_t key, const char * s)
+
+{
+  int i;
+  char * cp;
+
+  if(!s)
+    return (char *) NULL;
+
+  i = strlen(s) + 1;
+  cp = Curl_thread_buffer(key, MAX_CONV_EXPANSION * i + 1);
+
+  if(cp) {
+    i = QadrtConvertE2A(cp, s, MAX_CONV_EXPANSION * i, i);
+    cp[i] = '\0';
+  }
+
+  return cp;
+}
+
+
 int
 Curl_getnameinfo_a(const struct sockaddr * sa, curl_socklen_t salen,
               char * nodename, curl_socklen_t nodenamelen,
               char * servname, curl_socklen_t servnamelen,
               int flags)
 
@@ -253,45 +278,45 @@
   int status;
   int i;
 
   enodename = (char *) NULL;
   eservname = (char *) NULL;
 
-  if (nodename && nodenamelen)
-    if (!(enodename = malloc(nodenamelen)))
+  if(nodename && nodenamelen)
+    if(!(enodename = malloc(nodenamelen)))
       return EAI_MEMORY;
 
-  if (servname && servnamelen)
-    if (!(eservname = malloc(servnamelen))) {
-      if (enodename)
+  if(servname && servnamelen)
+    if(!(eservname = malloc(servnamelen))) {
+      if(enodename)
         free(enodename);
 
       return EAI_MEMORY;
       }
 
   status = getnameinfo(sa, salen, enodename, nodenamelen,
                        eservname, servnamelen, flags);
 
-  if (!status) {
-    if (enodename) {
+  if(!status) {
+    if(enodename) {
       i = QadrtConvertE2A(nodename, enodename,
         nodenamelen - 1, strlen(enodename));
       nodename[i] = '\0';
       }
 
-    if (eservname) {
+    if(eservname) {
       i = QadrtConvertE2A(servname, eservname,
         servnamelen - 1, strlen(eservname));
       servname[i] = '\0';
       }
     }
 
-  if (enodename)
+  if(enodename)
     free(enodename);
 
-  if (eservname)
+  if(eservname)
     free(eservname);
 
   return status;
 }
 
 
@@ -306,42 +331,42 @@
   int status;
   int i;
 
   enodename = (char *) NULL;
   eservname = (char *) NULL;
 
-  if (nodename) {
+  if(nodename) {
     i = strlen(nodename);
 
-    if (!(enodename = malloc(i + 1)))
+    if(!(enodename = malloc(i + 1)))
       return EAI_MEMORY;
 
     i = QadrtConvertA2E(enodename, nodename, i, i);
     enodename[i] = '\0';
     }
 
-  if (servname) {
+  if(servname) {
     i = strlen(servname);
 
-    if (!(eservname = malloc(i + 1))) {
-      if (enodename)
+    if(!(eservname = malloc(i + 1))) {
+      if(enodename)
         free(enodename);
 
       return EAI_MEMORY;
       }
 
     QadrtConvertA2E(eservname, servname, i, i);
     eservname[i] = '\0';
     }
 
   status = getaddrinfo(enodename, eservname, hints, res);
 
-  if (enodename)
+  if(enodename)
     free(enodename);
 
-  if (eservname)
+  if(eservname)
     free(eservname);
 
   return status;
 }
 
 
@@ -354,19 +379,19 @@
 
 {
   int rc;
   unsigned int i;
   SSLInitApp ia;
 
-  if (!init_app || !init_app->applicationID || !init_app->applicationIDLen)
+  if(!init_app || !init_app->applicationID || !init_app->applicationIDLen)
     return SSL_Init_Application(init_app);
 
   memcpy((char *) &ia, (char *) init_app, sizeof ia);
   i = ia.applicationIDLen;
 
-  if (!(ia.applicationID = malloc(i + 1))) {
+  if(!(ia.applicationID = malloc(i + 1))) {
     errno = ENOMEM;
     return SSL_ERROR_IO;
     }
 
   QadrtConvertA2E(ia.applicationID, init_app->applicationID, i, i);
   ia.applicationID[i] = '\0';
@@ -383,77 +408,62 @@
 
 {
   int rc;
   unsigned int i;
   SSLInit ia;
 
-  if (!init || (!init->keyringFileName && !init->keyringPassword))
+  if(!init || (!init->keyringFileName && !init->keyringPassword))
     return SSL_Init(init);
 
   memcpy((char *) &ia, (char *) init, sizeof ia);
 
-  if (ia.keyringFileName) {
+  if(ia.keyringFileName) {
     i = strlen(ia.keyringFileName);
 
-    if (!(ia.keyringFileName = malloc(i + 1))) {
+    if(!(ia.keyringFileName = malloc(i + 1))) {
       errno = ENOMEM;
       return SSL_ERROR_IO;
       }
 
     QadrtConvertA2E(ia.keyringFileName, init->keyringFileName, i, i);
     ia.keyringFileName[i] = '\0';
     }
 
-  if (ia.keyringPassword) {
+  if(ia.keyringPassword) {
     i = strlen(ia.keyringPassword);
 
-    if (!(ia.keyringPassword = malloc(i + 1))) {
-      if (ia.keyringFileName)
+    if(!(ia.keyringPassword = malloc(i + 1))) {
+      if(ia.keyringFileName)
         free(ia.keyringFileName);
 
       errno = ENOMEM;
       return SSL_ERROR_IO;
       }
 
     QadrtConvertA2E(ia.keyringPassword, init->keyringPassword, i, i);
     ia.keyringPassword[i] = '\0';
     }
 
   rc = SSL_Init(&ia);
 
-  if (ia.keyringFileName)
+  if(ia.keyringFileName)
     free(ia.keyringFileName);
 
-  if (ia.keyringPassword)
+  if(ia.keyringPassword)
     free(ia.keyringPassword);
 
   return rc;
 }
 
 
 char *
 Curl_SSL_Strerror_a(int sslreturnvalue, SSLErrorMsg * serrmsgp)
 
 {
-  int i;
-  char * cp;
-  char * cp2;
-
-  cp = SSL_Strerror(sslreturnvalue, serrmsgp);
-
-  if (!cp)
-    return cp;
-
-  i = strlen(cp);
-
-  if (!(cp2 = Curl_thread_buffer(LK_SSL_ERROR, MAX_CONV_EXPANSION * i + 1)))
-    return cp2;
-
-  i = QadrtConvertE2A(cp2, cp, MAX_CONV_EXPANSION * i, i);
-  cp2[i] = '\0';
-  return cp2;
+  return set_thread_string(LK_SSL_ERROR,
+                           SSL_Strerror(sslreturnvalue, serrmsgp));
 }
 
 #endif /* USE_QSOSSL */
 
 
 #ifdef USE_GSKIT
@@ -531,13 +541,13 @@
 static void
 gsk_free_handle(struct Curl_gsk_descriptor * p)
 
 {
   struct gskstrlist * q;
 
-  while ((q = p->strlist)) {
+  while((q = p->strlist)) {
     p->strlist = q;
     free((void *) q->asciistr);
     free(q);
   }
   free(p);
 }
@@ -552,13 +562,13 @@
 
   if(!my_env_handle)
     return GSK_OS400_ERROR_INVALID_POINTER;
   if(!*my_env_handle)
     return GSK_INVALID_HANDLE;
   p = (struct Curl_gsk_descriptor *) *my_env_handle;
-  if ((rc = gsk_environment_close(&p->h)) == GSK_OK) {
+  if((rc = gsk_environment_close(&p->h)) == GSK_OK) {
     gsk_free_handle(p);
     *my_env_handle = (gsk_handle) NULL;
   }
   return rc;
 }
 
@@ -572,13 +582,13 @@
 
   if(!my_session_handle)
     return GSK_OS400_ERROR_INVALID_POINTER;
   if(!*my_session_handle)
     return GSK_INVALID_HANDLE;
   p = (struct Curl_gsk_descriptor *) *my_session_handle;
-  if ((rc = gsk_secure_soc_close(&p->h)) == GSK_OK) {
+  if((rc = gsk_secure_soc_close(&p->h)) == GSK_OK) {
     gsk_free_handle(p);
     *my_session_handle = (gsk_handle) NULL;
   }
   return rc;
 }
 
@@ -624,13 +634,13 @@
     return GSK_OS400_ERROR_INVALID_POINTER;
   if(bufSize < 0)
     return GSK_ATTRIBUTE_INVALID_LENGTH;
   p = (struct Curl_gsk_descriptor *) my_gsk_handle;
   if(!bufSize)
     bufSize = strlen(buffer);
-  if (!(ebcdicbuf = malloc(bufSize + 1)))
+  if(!(ebcdicbuf = malloc(bufSize + 1)))
       return GSK_INSUFFICIENT_STORAGE;
   QadrtConvertA2E(ebcdicbuf, buffer, bufSize, bufSize);
   ebcdicbuf[bufSize] = '\0';
   rc = gsk_attribute_set_buffer(p->h, bufID, ebcdicbuf, bufSize);
   free(ebcdicbuf);
   return rc;
@@ -686,13 +696,13 @@
 
 {
   int rc;
   char * asciibuf;
   struct gskstrlist * sp;
 
-  for (sp = p->strlist; sp; sp = sp->next)
+  for(sp = p->strlist; sp; sp = sp->next)
     if(sp->ebcdicstr == ebcdicbuf)
       break;
   if(!sp) {
     if(!(sp = (struct gskstrlist *) malloc(sizeof *sp)))
       return GSK_INSUFFICIENT_STORAGE;
     if(!(asciibuf = malloc(bufsize + 1))) {
@@ -723,13 +733,13 @@
 
   if(!my_gsk_handle)
     return GSK_INVALID_HANDLE;
   if(!buffer || !bufSize)
     return GSK_OS400_ERROR_INVALID_POINTER;
   p = (struct Curl_gsk_descriptor *) my_gsk_handle;
-  if ((rc = gsk_attribute_get_buffer(p->h, bufID, &mybuf, &mylen)) != GSK_OK)
+  if((rc = gsk_attribute_get_buffer(p->h, bufID, &mybuf, &mylen)) != GSK_OK)
     return rc;
   if((rc = cachestring(p, mybuf, mylen, buffer)) == GSK_OK)
     *bufSize = mylen;
   return rc;
 }
 
@@ -822,29 +832,13 @@
 
 
 const char *
 Curl_gsk_strerror_a(int gsk_return_value)
 
 {
-  int i;
-  const char * cp;
-  char * cp2;
-
-  cp = gsk_strerror(gsk_return_value);
-
-  if (!cp)
-    return cp;
-
-  i = strlen(cp);
-
-  if (!(cp2 = Curl_thread_buffer(LK_GSK_ERROR, MAX_CONV_EXPANSION * i + 1)))
-    return cp2;
-
-  i = QadrtConvertE2A(cp2, cp, MAX_CONV_EXPANSION * i, i);
-  cp2[i] = '\0';
-  return cp2;
+  return set_thread_string(LK_GSK_ERROR, gsk_strerror(gsk_return_value));
 }
 
 int
 Curl_gsk_secure_soc_startInit(gsk_handle my_session_handle,
                               int IOCompletionPort,
                               Qso_OverlappedIO_t * communicationsArea)
@@ -875,17 +869,17 @@
 
   /* Convert `buf' in place, from EBCDIC to ASCII.
      If error, release the buffer and return -1. Else return 0. */
 
   i = buf->length;
 
-  if (i) {
-    if (!(t = malloc(i))) {
+  if(i) {
+    if(!(t = malloc(i))) {
       gss_release_buffer(minor_status, buf);
 
-      if (minor_status)
+      if(minor_status)
         *minor_status = ENOMEM;
 
       return -1;
       }
 
     QadrtConvertE2A(t, buf->value, i, i);
@@ -903,20 +897,20 @@
 
 {
   int rc;
   unsigned int i;
   gss_buffer_desc in;
 
-  if (!in_name || !in_name->value || !in_name->length)
+  if(!in_name || !in_name->value || !in_name->length)
     return gss_import_name(minor_status, in_name, in_name_type, out_name);
 
   memcpy((char *) &in, (char *) in_name, sizeof in);
   i = in.length;
 
-  if (!(in.value = malloc(i + 1))) {
-    if (minor_status)
+  if(!(in.value = malloc(i + 1))) {
+    if(minor_status)
       *minor_status = ENOMEM;
 
     return GSS_S_FAILURE;
     }
 
   QadrtConvertA2E(in.value, in_name->value, i, i);
@@ -935,29 +929,30 @@
 {
   int rc;
 
   rc = gss_display_status(minor_status, status_value, status_type,
                               mech_type, message_context, status_string);
 
-  if (rc != GSS_S_COMPLETE || !status_string ||
-      !status_string->length || !status_string->value)
+  if(rc != GSS_S_COMPLETE || !status_string ||
+     !status_string->length || !status_string->value)
     return rc;
 
   /* No way to allocate a buffer here, because it will be released by
      gss_release_buffer(). The solution is to overwrite the EBCDIC buffer
      with ASCII to return it. */
 
-  if (Curl_gss_convert_in_place(minor_status, status_string))
+  if(Curl_gss_convert_in_place(minor_status, status_string))
     return GSS_S_FAILURE;
 
   return rc;
 }
 
 
 OM_uint32
-Curl_gss_init_sec_context_a(OM_uint32 * minor_status, gss_cred_id_t cred_handle,
+Curl_gss_init_sec_context_a(OM_uint32 * minor_status,
+                            gss_cred_id_t cred_handle,
                             gss_ctx_id_t * context_handle,
                             gss_name_t target_name, gss_OID mech_type,
                             gss_flags_t req_flags, OM_uint32 time_req,
                             gss_channel_bindings_t input_chan_bindings,
                             gss_buffer_t input_token,
                             gss_OID * actual_mech_type,
@@ -969,18 +964,18 @@
   unsigned int i;
   gss_buffer_desc in;
   gss_buffer_t inp;
 
   in.value = NULL;
 
-  if ((inp = input_token))
-    if (inp->length && inp->value) {
+  if((inp = input_token))
+    if(inp->length && inp->value) {
       i = inp->length;
 
-      if (!(in.value = malloc(i + 1))) {
-        if (minor_status)
+      if(!(in.value = malloc(i + 1))) {
+        if(minor_status)
           *minor_status = ENOMEM;
 
         return GSS_S_FAILURE;
         }
 
       QadrtConvertA2E(in.value, input_token->value, i, i);
@@ -991,24 +986,24 @@
 
   rc = gss_init_sec_context(minor_status, cred_handle, context_handle,
                              target_name, mech_type, req_flags, time_req,
                              input_chan_bindings, inp, actual_mech_type,
                              output_token, ret_flags, time_rec);
 
-  if (in.value)
+  if(in.value)
     free(in.value);
 
-  if (rc != GSS_S_COMPLETE || !output_token ||
+  if(rc != GSS_S_COMPLETE || !output_token ||
       !output_token->length || !output_token->value)
     return rc;
 
   /* No way to allocate a buffer here, because it will be released by
      gss_release_buffer(). The solution is to overwrite the EBCDIC buffer
      with ASCII to return it. */
 
-  if (Curl_gss_convert_in_place(minor_status, output_token))
+  if(Curl_gss_convert_in_place(minor_status, output_token))
     return GSS_S_FAILURE;
 
   return rc;
 }
 
 
@@ -1019,21 +1014,21 @@
 
 {
   int rc;
 
   rc = gss_delete_sec_context(minor_status, context_handle, output_token);
 
-  if (rc != GSS_S_COMPLETE || !output_token ||
+  if(rc != GSS_S_COMPLETE || !output_token ||
       !output_token->length || !output_token->value)
     return rc;
 
   /* No way to allocate a buffer here, because it will be released by
      gss_release_buffer(). The solution is to overwrite the EBCDIC buffer
      with ASCII to return it. */
 
-  if (Curl_gss_convert_in_place(minor_status, output_token))
+  if(Curl_gss_convert_in_place(minor_status, output_token))
     return GSS_S_FAILURE;
 
   return rc;
 }
 
 #endif /* HAVE_GSSAPI */
@@ -1048,18 +1043,18 @@
 
 {
   unsigned int i;
   char * ehost;
   void * result;
 
-  if (!host)
+  if(!host)
     return (void *) ldap_init(host, port);
 
   i = strlen(host);
 
-  if (!(ehost = malloc(i + 1)))
+  if(!(ehost = malloc(i + 1)))
     return (void *) NULL;
 
   QadrtConvertA2E(ehost, host, i, i);
   ehost[i] = '\0';
   result = (void *) ldap_init(ehost, port);
   free(ehost);
@@ -1075,42 +1070,42 @@
   char * edn;
   char * epasswd;
 
   edn = (char *) NULL;
   epasswd = (char *) NULL;
 
-  if (dn) {
+  if(dn) {
     i = strlen(dn);
 
-    if (!(edn = malloc(i + 1)))
+    if(!(edn = malloc(i + 1)))
       return LDAP_NO_MEMORY;
 
     QadrtConvertA2E(edn, dn, i, i);
     edn[i] = '\0';
     }
 
-  if (passwd) {
+  if(passwd) {
     i = strlen(passwd);
 
-    if (!(epasswd = malloc(i + 1))) {
-      if (edn)
+    if(!(epasswd = malloc(i + 1))) {
+      if(edn)
         free(edn);
 
       return LDAP_NO_MEMORY;
       }
 
     QadrtConvertA2E(epasswd, passwd, i, i);
     epasswd[i] = '\0';
     }
 
   i = ldap_simple_bind_s(ld, edn, epasswd);
 
-  if (epasswd)
+  if(epasswd)
     free(epasswd);
 
-  if (edn)
+  if(edn)
     free(edn);
 
   return i;
 }
 
 
@@ -1128,71 +1123,71 @@
 
   ebase = (char *) NULL;
   efilter = (char *) NULL;
   eattrs = (char * *) NULL;
   status = LDAP_SUCCESS;
 
-  if (base) {
+  if(base) {
     i = strlen(base);
 
-    if (!(ebase = malloc(i + 1)))
+    if(!(ebase = malloc(i + 1)))
       status = LDAP_NO_MEMORY;
     else {
       QadrtConvertA2E(ebase, base, i, i);
       ebase[i] = '\0';
       }
     }
 
-  if (filter && status == LDAP_SUCCESS) {
+  if(filter && status == LDAP_SUCCESS) {
     i = strlen(filter);
 
-    if (!(efilter = malloc(i + 1)))
+    if(!(efilter = malloc(i + 1)))
       status = LDAP_NO_MEMORY;
     else {
       QadrtConvertA2E(efilter, filter, i, i);
       efilter[i] = '\0';
       }
     }
 
-  if (attrs && status == LDAP_SUCCESS) {
-    for (i = 0; attrs[i++];)
+  if(attrs && status == LDAP_SUCCESS) {
+    for(i = 0; attrs[i++];)
       ;
 
-    if (!(eattrs = calloc(i, sizeof *eattrs)))
+    if(!(eattrs = calloc(i, sizeof *eattrs)))
       status = LDAP_NO_MEMORY;
     else {
-      for (j = 0; attrs[j]; j++) {
+      for(j = 0; attrs[j]; j++) {
         i = strlen(attrs[j]);
 
-        if (!(eattrs[j] = malloc(i + 1))) {
+        if(!(eattrs[j] = malloc(i + 1))) {
           status = LDAP_NO_MEMORY;
           break;
           }
 
         QadrtConvertA2E(eattrs[j], attrs[j], i, i);
         eattrs[j][i] = '\0';
         }
       }
     }
 
-  if (status == LDAP_SUCCESS)
+  if(status == LDAP_SUCCESS)
     status = ldap_search_s(ld, ebase? ebase: "", scope,
                            efilter? efilter: "(objectclass=*)",
                            eattrs, attrsonly, res);
 
-  if (eattrs) {
-    for (j = 0; eattrs[j]; j++)
+  if(eattrs) {
+    for(j = 0; eattrs[j]; j++)
       free(eattrs[j]);
 
     free(eattrs);
     }
 
-  if (efilter)
+  if(efilter)
     free(efilter);
 
-  if (ebase)
+  if(ebase)
     free(ebase);
 
   return status;
 }
 
 
@@ -1203,58 +1198,42 @@
   int i;
   char * cp;
   struct berval * * result;
 
   cp = (char *) NULL;
 
-  if (attr) {
+  if(attr) {
     i = strlen(attr);
 
-    if (!(cp = malloc(i + 1))) {
+    if(!(cp = malloc(i + 1))) {
       ldap_set_lderrno(ld, LDAP_NO_MEMORY, NULL,
                        ldap_err2string(LDAP_NO_MEMORY));
       return (struct berval * *) NULL;
       }
 
     QadrtConvertA2E(cp, attr, i, i);
     cp[i] = '\0';
     }
 
   result = ldap_get_values_len(ld, entry, cp);
 
-  if (cp)
+  if(cp)
     free(cp);
 
-  /* Result data are binary in nature, so they haven't been converted to EBCDIC.
-     Therefore do not convert. */
+  /* Result data are binary in nature, so they haven't been
+     converted to EBCDIC. Therefore do not convert. */
 
   return result;
 }
 
 
 char *
 Curl_ldap_err2string_a(int error)
 
 {
-  int i;
-  char * cp;
-  char * cp2;
-
-  cp = ldap_err2string(error);
-
-  if (!cp)
-    return cp;
-
-  i = strlen(cp);
-
-  if (!(cp2 = Curl_thread_buffer(LK_LDAP_ERROR, MAX_CONV_EXPANSION * i + 1)))
-    return cp2;
-
-  i = QadrtConvertE2A(cp2, cp, MAX_CONV_EXPANSION * i, i);
-  cp2[i] = '\0';
-  return cp2;
+  return set_thread_string(LK_LDAP_ERROR, ldap_err2string(error));
 }
 
 
 char *
 Curl_ldap_get_dn_a(void * ld, LDAPMessage * entry)
 
@@ -1262,18 +1241,18 @@
   int i;
   char * cp;
   char * cp2;
 
   cp = ldap_get_dn(ld, entry);
 
-  if (!cp)
+  if(!cp)
     return cp;
 
   i = strlen(cp);
 
-  if (!(cp2 = malloc(i + 1)))
+  if(!(cp2 = malloc(i + 1)))
     return cp2;
 
   QadrtConvertE2A(cp2, cp, i, i);
   cp2[i] = '\0';
 
   /* No way to allocate a buffer here, because it will be released by
@@ -1294,18 +1273,18 @@
   int i;
   char * cp;
   char * cp2;
 
   cp = ldap_first_attribute(ld, entry, berptr);
 
-  if (!cp)
+  if(!cp)
     return cp;
 
   i = strlen(cp);
 
-  if (!(cp2 = malloc(i + 1)))
+  if(!(cp2 = malloc(i + 1)))
     return cp2;
 
   QadrtConvertE2A(cp2, cp, i, i);
   cp2[i] = '\0';
 
   /* No way to allocate a buffer here, because it will be released by
@@ -1326,18 +1305,18 @@
   int i;
   char * cp;
   char * cp2;
 
   cp = ldap_next_attribute(ld, entry, berptr);
 
-  if (!cp)
+  if(!cp)
     return cp;
 
   i = strlen(cp);
 
-  if (!(cp2 = malloc(i + 1)))
+  if(!(cp2 = malloc(i + 1)))
     return cp2;
 
   QadrtConvertE2A(cp2, cp, i, i);
   cp2[i] = '\0';
 
   /* No way to allocate a buffer here, because it will be released by
@@ -1361,14 +1340,14 @@
   struct sockaddr_un * dstu;
   unsigned int i;
   unsigned int dstsize;
 
   /* Convert a socket address into job CCSID, if needed. */
 
-  if (!srcaddr || srclen < offsetof(struct sockaddr, sa_family) +
-      sizeof srcaddr->sa_family || srclen > sizeof *dstaddr) {
+  if(!srcaddr || srclen < offsetof(struct sockaddr, sa_family) +
+     sizeof srcaddr->sa_family || srclen > sizeof *dstaddr) {
     errno = EINVAL;
     return -1;
     }
 
   memcpy((char *) dstaddr, (char *) srcaddr, srclen);
 
@@ -1395,13 +1374,13 @@
 {
   int i;
   struct sockaddr_storage laddr;
 
   i = convert_sockaddr(&laddr, destaddr, addrlen);
 
-  if (i < 0)
+  if(i < 0)
     return -1;
 
   return connect(sd, (struct sockaddr *) &laddr, i);
 }
 
 
@@ -1411,13 +1390,13 @@
 {
   int i;
   struct sockaddr_storage laddr;
 
   i = convert_sockaddr(&laddr, localaddr, addrlen);
 
-  if (i < 0)
+  if(i < 0)
     return -1;
 
   return bind(sd, (struct sockaddr *) &laddr, i);
 }
 
 
@@ -1428,13 +1407,13 @@
 {
   int i;
   struct sockaddr_storage laddr;
 
   i = convert_sockaddr(&laddr, dstaddr, addrlen);
 
-  if (i < 0)
+  if(i < 0)
     return -1;
 
   return sendto(sd, buffer, buflen, flags, (struct sockaddr *) &laddr, i);
 }
 
 
@@ -1447,48 +1426,124 @@
   int rcvlen;
   int laddrlen;
   const struct sockaddr_un * srcu;
   struct sockaddr_un * dstu;
   struct sockaddr_storage laddr;
 
-  if (!fromaddr || !addrlen || *addrlen <= 0)
+  if(!fromaddr || !addrlen || *addrlen <= 0)
     return recvfrom(sd, buffer, buflen, flags, fromaddr, addrlen);
 
   laddrlen = sizeof laddr;
   laddr.ss_family = AF_UNSPEC;          /* To detect if unused. */
   rcvlen = recvfrom(sd, buffer, buflen, flags,
                     (struct sockaddr *) &laddr, &laddrlen);
 
-  if (rcvlen < 0)
+  if(rcvlen < 0)
     return rcvlen;
 
   switch (laddr.ss_family) {
 
   case AF_UNIX:
     srcu = (const struct sockaddr_un *) &laddr;
     dstu = (struct sockaddr_un *) fromaddr;
     i = *addrlen - offsetof(struct sockaddr_un, sun_path);
     laddrlen -= offsetof(struct sockaddr_un, sun_path);
     i = QadrtConvertE2A(dstu->sun_path, srcu->sun_path, i, laddrlen);
     laddrlen = i + offsetof(struct sockaddr_un, sun_path);
 
-    if (laddrlen < *addrlen)
+    if(laddrlen < *addrlen)
       dstu->sun_path[i] = '\0';
 
     break;
 
   case AF_UNSPEC:
     break;
 
   default:
-    if (laddrlen > *addrlen)
+    if(laddrlen > *addrlen)
       laddrlen = *addrlen;
 
-    if (laddrlen)
+    if(laddrlen)
       memcpy((char *) fromaddr, (char *) &laddr, laddrlen);
 
     break;
     }
 
   *addrlen = laddrlen;
   return rcvlen;
 }
+
+
+#ifdef HAVE_LIBZ
+const char *
+Curl_os400_zlibVersion(void)
+
+{
+  return set_thread_string(LK_ZLIB_VERSION, zlibVersion());
+}
+
+
+int
+Curl_os400_inflateInit_(z_streamp strm, const char * version, int stream_size)
+
+{
+  z_const char * msgb4 = strm->msg;
+  int ret;
+
+  ret = inflateInit(strm);
+
+  if(strm->msg != msgb4)
+    strm->msg = set_thread_string(LK_ZLIB_MSG, strm->msg);
+
+  return ret;
+}
+
+
+int
+Curl_os400_inflateInit2_(z_streamp strm, int windowBits,
+                                        const char * version, int stream_size)
+
+{
+  z_const char * msgb4 = strm->msg;
+  int ret;
+
+  ret = inflateInit2(strm, windowBits);
+
+  if(strm->msg != msgb4)
+    strm->msg = set_thread_string(LK_ZLIB_MSG, strm->msg);
+
+  return ret;
+}
+
+
+int
+Curl_os400_inflate(z_streamp strm, int flush)
+
+{
+  z_const char * msgb4 = strm->msg;
+  int ret;
+
+  ret = inflate(strm, flush);
+
+  if(strm->msg != msgb4)
+    strm->msg = set_thread_string(LK_ZLIB_MSG, strm->msg);
+
+  return ret;
+}
+
+
+int
+Curl_os400_inflateEnd(z_streamp strm)
+
+{
+  z_const char * msgb4 = strm->msg;
+  int ret;
+
+  ret = inflateEnd(strm);
+
+  if(strm->msg != msgb4)
+    strm->msg = set_thread_string(LK_ZLIB_MSG, strm->msg);
+
+  return ret;
+}
+
+#endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/os400sys.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/os400sys.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/os400sys.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/os400sys.h	2013-12-17 06:02:35.000000000 +0800
@@ -36,12 +36,14 @@
         LK_CURL_VERSION,
         LK_VERSION_INFO,
         LK_VERSION_INFO_DATA,
         LK_EASY_STRERROR,
         LK_SHARE_STRERROR,
         LK_MULTI_STRERROR,
+        LK_ZLIB_VERSION,
+        LK_ZLIB_MSG,
         LK_LAST
 }               localkey_t;
 
 
 extern char *   (* Curl_thread_buffer)(localkey_t key, long size);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/README.OS400 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/README.OS400
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/OS400/README.OS400	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/OS400/README.OS400	2013-12-17 06:02:35.000000000 +0800
@@ -82,12 +82,13 @@
         CURLOPT_FTP_ALTERNATIVE_TO_USER
         CURLOPT_FTPPORT
         CURLOPT_INTERFACE
         CURLOPT_ISSUERCERT
         CURLOPT_KEYPASSWD
         CURLOPT_KRBLEVEL
+        CURLOPT_LOGIN_OPTIONS
         CURLOPT_MAIL_FROM
         CURLOPT_MAIL_AUTH
         CURLOPT_NETRC_FILE
         CURLOPT_NOPROXY
         CURLOPT_PASSWORD
         CURLOPT_PROXY
@@ -115,12 +116,13 @@
         CURLOPT_TLSAUTH_TYPE
         CURLOPT_TLSAUTH_USERNAME
         CURLOPT_URL
         CURLOPT_USERAGENT
         CURLOPT_USERNAME
         CURLOPT_USERPWD
+        CURLOPT_XOAUTH2_BEARER
   Else it is the same as for curl_easy_setopt().
   Note that CURLOPT_ERRORBUFFER is not in the list above, since it gives the
 address of an (empty) character buffer, not the address of a string.
 CURLOPT_POSTFIELDS stores the address of static binary data (of type void *) and
 thus is not converted. If CURLOPT_COPYPOSTFIELDS is issued after
 CURLOPT_POSTFIELDSIZE != -1, the data size is adjusted according to the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Solaris/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Solaris/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Solaris/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Solaris/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -182,13 +182,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/vms/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/vms/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/vms/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/vms/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -179,13 +179,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Win32/cygwin/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Win32/cygwin/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Win32/cygwin/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Win32/cygwin/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -179,13 +179,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Win32/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Win32/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/packages/Win32/Makefile.in	2013-10-13 04:24:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/packages/Win32/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -239,13 +239,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/RELEASE-NOTES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/RELEASE-NOTES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/RELEASE-NOTES	2013-10-14 05:24:04.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/RELEASE-NOTES	2013-12-17 06:02:35.000000000 +0800
@@ -1,111 +1,115 @@
-Curl and libcurl 7.33.0
+Curl and libcurl 7.34.0
 
- Public curl releases:         135
+ Public curl releases:         136
  Command line options:         161
- curl_easy_setopt() options:   205
+ curl_easy_setopt() options:   206
  Public functions in libcurl:  58
  Known libcurl bindings:       42
- Contributors:                 1057
+ Contributors:                 1104
+
+This release includes the following security fix:
+ o gtls: respect *VERIFYHOST independently of *VERIFYPEER [26]
 
 This release includes the following changes:
 
- o test code for testing the event based API [3]
- o CURLM_ADDED_ALREADY: new error code
- o test TFTP server: support "writedelay" within <servercmd>
- o krb4 support has been removed
- o imap/pop3/smtp: added basic SASL XOAUTH2 support [9]
- o darwinssl: add support for PKCS#12 files for client authentication
- o darwinssl: enable BEAST workaround on iOS 7 & later
- o Pass password to OpenSSL engine by user interface [15]
- o c-ares: Add support for various DNS binding options
- o cookies: add expiration
- o curl: added --oauth2-bearer option
+ o SSL: protocol version can be specified more precisely [1]
+ o imap/pop3/smtp: Added graceful cancellation of SASL authentication
+ o Add "Happy Eyeballs" for IPv4/IPv6 dual connect attempts
+ o base64: Added validation of base64 input strings when decoding [8]
+ o curl_easy_setopt: Added the ability to set the login options separately
+ o smtp: Added support for additional SMTP commands
+ o curl_easy_getinfo: Added CURLINFO_TLS_SESSION for accessing TLS internals
+ o nss: allow to use TLS > 1.0 if built against recent NSS [18]
+ o SECURITY: added this document to describe our security processes [22]
+ o parseconfig: warn if unquoted white spaces are detected
 
 This release includes the following bugfixes:
 
- o nss: make sure that NSS is initialized
- o curl: make --no-[option] work properly for several options
- o FTP: with socket_action send better socket updates in active mode [1]
- o curl: fix the --sasl-ir in the --help output
- o tests 2032, 2033: Don't hardcode port in expected output
- o urlglob: better detect unclosed braces, empty lists and overflows [7]
- o urlglob: error out on range overflow [8]
- o imap: Fixed response check for SEARCH, EXPUNGE, LSUB, UID and NOOP commands [10]
- o handle arbitrary-length username and password [2]
- o TFTP: make the CURLOPT_LOW_SPEED* options work [4]
- o curl.h: name space pollution by "enum type" [5]
- o multi: move on from STATE_DONE faster [6]
- o FTP: 60 secs delay if aborted in the CURLOPT_HEADERFUNCTION callback [11]
- o multi_socket: improved 100-continue timeout handling
- o curl_multi_remove_handle: allow multiple removes
- o FTP: fix getsock during DO_MORE state [12]
- o -x: rephrased the --proxy section somewhat
- o acinclude: fix --without-ca-path when cross-compiling [13]
- o LDAP: fix bad free() when URL parsing failed [14]
- o --data: mention CRLF treatment when reading from file
- o curl_easy_pause: suggest one way to unpause
- o imap: Fixed calculation of transfer when partial FETCH received [16]
- o pingpong: Check SSL library buffers for already read data [16]
- o imap/pop3/smtp: Speed up SSL connection initialization
- o libcurl.3: for multi interface connections are held in the multi handle
- o curl_easy_setopt.3: mention RTMP URL quirks [17]
- o curl.1: detail how short/long options work [18]
- o curl.1: Added information about optional login options to --user option
- o curl: Added clarification to the --mail options in the --help output
- o curl_easy_setopt.3: clarify that TIMEOUT and TIMEOUT_MS set the same value
- o openssl: use correct port number in error message [19]
- o darwinssl: block TLS_RSA_WITH_NULL_SHA256 cipher
- o OpenSSL: acknowledge CURLOPT_SSL_VERIFYHOST without VERIFYPEER
- o xattr: add support for FreeBSD xattr API
- o win32: fix Visual Studio 2010 build with WINVER >= 0x600 [22]
- o configure: use icc options without space [21]
- o test1112: Increase the timeout from 7s to 16s [20]
- o SCP: upload speed on a fast connection limited to 16384 B/s
- o curl_setup_once: fix errno access for lwip on Windows [24]
- o HTTP: Output http response 304 when modified time is too old [23]
+ o darwinssl: un-break iOS build after PKCS#12 feature added
+ o tool: use XFERFUNCTION to save some casts [2]
+ o usercertinmem: fix memory leaks
+ o ssh: Handle successful SSH_USERAUTH_NONE [3]
+ o NSS: acknowledge the --no-sessionid/CURLOPT_SSL_SESSIONID_CACHE option [4]
+ o test906: Fixed failing test on some platforms [5]
+ o sasl: initialize NSS before using NTLM crypto
+ o sasl: Fixed memory leak in OAUTH2 message creation
+ o imap/pop3/smtp: Fixed QUIT / LOGOUT being sent when SSL connect fails
+ o cmake: unbreak for non-Windows platforms [6]
+ o ssh: initialize per-handle data in ssh_connect()
+ o glob: fix broken URLs
+ o configure: check for long long when building with cyassl
+ o CURLOPT_RESOLVE: mention they don't time-out [7]
+ o docs/examples/httpput.c: fix build for MSVC
+ o FTP: make the data connection work when going through proxy
+ o NSS: support for CERTINFO feature
+ o curl_multi_wait: accept 0 from multi_timeout() as valid timeout
+ o glob_range: pass the closing bracket for a-z ranges
+ o tool_help: Updated --list-only description to include POP3
+ o Curl_ssl_push_certinfo_len: don't %.*s non-zero-terminated string [9]
+ o cmake: fix Windows build with IPv6 support [10]
+ o ares: Fixed compilation under Visual Studio 2012 [11]
+ o curl_easy_setopt.3: clarify CURLOPT_SSL_VERIFYHOST documentation [12]
+ o curl.1: mention that -O does no URL decoding [13]
+ o darwinssl: PKCS#12 import feature now requires Lion or later [14]
+ o darwinssl: check for SSLSetSessionOption() presence when toggling BEAST
+ o configure: Fix test with -Werror=implicit-function-declaration [15]
+ o sigpipe: factor out sigpipe_reset from easy.c
+ o curl_multi_cleanup: ignore SIGPIPE
+ o globbing: curl glob counter mismatch with {} list use [16]
+ o parseconfig: dash options can't specified with colon or equals [17]
+ o digest: fix CURLAUTH_DIGEST_IE [19]
+ o curl.h: <sys/select.h> for OpenBSD [20]
+ o darwinssl: Fix #if 10.6.0 for SecKeychainSearch
+ o TFTP: fix return codes for connect timeout [21]
+ o login options: remove the ;[options] support from CURLOPT_USERPWD [23]
+ o imap: Fixed incorrect fallback to clear text authentication
+ o parsedate: avoid integer overflow
+ o curl.1: document -J doesn't %-decode [25]
+ o multi: add timer inaccuracy margin to timeout/connecttimeout [24]
 
 This release includes the following known bugs:
 
  o see docs/KNOWN_BUGS (http://curl.haxx.se/docs/knownbugs.html)
 
 This release would not have looked like this without help, code, reports and
 advice from friends like these:
 
- Alex McLellan, Bill Doyle, Colby Ranger, Fabian Keil, Gisle Vanem,
- John E. Malmberg, Jonathan Nieder, Kamil Dudka, Shawn Landden,
- Tor Arntsen, Will Dietz, Yi Huang, Kyle L. Huff, Steve Holme, Mike Mio,
- Stefan Neis, Nick Zitzmann, Geoff Beier, John Dunn, Jiri Hruska,
- Tomas Mlcoch, Kim Vandry, Ben Greear, Gorilla Maguila, Jerry Krinock,
- Yamada Yasuharu, Gordon Marler, Dave Thompson, D. Flinkmann,
- Benoit Sigoure, Clemens Gruber, Guenter Knauf, Petr Pisar, Elmira A Semenova,
- Francois Charlier, Ishan SinghLevett, Marcel Raad, Ulf Samuelsson,
- Andrej E Baranov, Derek Higgins, Heinrich Schaefer
+ Alessandro Ghedini, Andreas Rieke, BjÃ¶rn Stenberg, Chris Conlon,
+ Christian Grothoff, Christian Weisgerber, Dave Reisner, David Walser,
+ Dima Tisnek, Fabian Keil, Felix Yan, Gergely Nagy, Gisle Vanem,
+ Ishan SinghLevett, James Dury, Javier Barroso, Jeff King, Kamil Dudka,
+ Kim Vandry, Marcin Gryszkalis, Melissa Mears, Michael Osipov, Nick Zitzmann,
+ Oliver Kuckertz, Patrick Monnerat, Paul Donohue, Paul Marks, Romulo A. Ceccon,
+ RÃ©my LÃ©one, Sergey Tatarincev, Steve Holme, Tomas Hoger, Tyler Hall,
+ Yaakov Selkowitz, Eric Lubin, Petr Bahula, He Qin, Marc Deslauriers
 
         Thanks! (and sorry if I forgot to mention someone)
 
 References to bug reports and discussions on issues:
 
- [1] = http://curl.haxx.se/mail/lib-2013-08/0043.html
- [2] = http://bugs.debian.org/719856
- [3] = http://daniel.haxx.se/blog/2013/08/20/testing-curl_multi_socket_action/
- [4] = http://curl.haxx.se/bug/view.cgi?id=1269
- [5] = https://github.com/bagder/curl/pull/76
- [6] = http://curl.haxx.se/mail/lib-2013-08/0211.html
- [7] = http://curl.haxx.se/bug/view.cgi?id=1264
- [8] = http://curl.haxx.se/bug/view.cgi?id=1267
- [9] = http://curl.haxx.se/mail/lib-2013-08/0234.html
- [10] = http://curl.haxx.se/mail/lib-2013-08/0136.html
- [11] = https://bugzilla.redhat.com/1005686
- [12] = http://curl.haxx.se/mail/lib-2013-08/0109.html
- [13] = http://curl.haxx.se/bug/view.cgi?id=1273
- [14] = http://curl.haxx.se/mail/lib-2013-08/0209.html
- [15] = http://curl.haxx.se/mail/lib-2013-08/0265.html
- [16] = http://curl.haxx.se/mail/lib-2013-08/0170.html
- [17] = http://curl.haxx.se/bug/view.cgi?id=1278
- [18] = http://curl.haxx.se/bug/view.cgi?id=1279
- [19] = http://curl.haxx.se/bug/view.cgi?id=1281
- [20] = http://curl.haxx.se/mail/lib-2010-02/0200.html
- [21] = http://curl.haxx.se/mail/lib-2013-09/0182.html
- [22] = http://curl.haxx.se/bug/view.cgi?id=1282
- [23] = http://curl.haxx.se/bug/view.cgi?id=1288
- [24] = http://curl.haxx.se/mail/lib-2013-10/0048.html
+ [1] = https://github.com/bagder/curl/pull/79
+ [2] = http://curl.haxx.se/mail/lib-2013-10/0089.html
+ [3] = http://curl.haxx.se/mail/lib-2013-10/0096.html
+ [4] = http://curl.haxx.se/mail/lib-2013-10/0113.html
+ [5] = http://sourceforge.net/p/curl/bugs/1291
+ [6] = http://sourceforge.net/p/curl/bugs/1292
+ [7] = http://curl.haxx.se/mail/lib-2013-10/0062.html
+ [8] = http://curl.haxx.se/mail/lib-2013-10/0242.html
+ [9] = http://curl.haxx.se/bug/view.cgi?id=1295
+ [10] = http://sourceforge.net/p/curl/bugs/1064
+ [11] = http://curl.haxx.se/mail/lib-2013-11/0057.html
+ [12] = https://github.com/bagder/curl/pull/83
+ [13] = http://sourceforge.net/p/curl/bugs/1299
+ [14] = http://curl.haxx.se/mail/lib-2013-11/0076.html
+ [15] = http://curl.haxx.se/bug/view.cgi?id=1304
+ [16] = http://curl.haxx.se/bug/view.cgi?id=1305
+ [17] = http://curl.haxx.se/bug/view.cgi?id=1297
+ [18] = http://curl.haxx.se/mail/lib-2013-11/0162.html
+ [19] = http://curl.haxx.se/bug/view.cgi?id=1308
+ [20] = http://curl.haxx.se/mail/lib-2013-12/0017.html
+ [21] = http://curl.haxx.se/bug/view.cgi?id=1310
+ [22] = http://curl.haxx.se/dev/security.html
+ [23] = http://curl.haxx.se/bug/view.cgi?id=1311
+ [24] = http://curl.haxx.se/bug/view.cgi?id=1298
+ [25] = http://curl.haxx.se/bug/view.cgi?id=1294
+ [26] = http://curl.haxx.se/docs/adv_20131217.html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/Makefile.in	2013-12-17 06:11:28.000000000 +0800
@@ -327,13 +327,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_cb_prg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_cb_prg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_cb_prg.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_cb_prg.c	2013-12-17 06:02:35.000000000 +0800
@@ -29,20 +29,20 @@
 #include "tool_cb_prg.h"
 #include "tool_util.h"
 
 #include "memdebug.h" /* keep this as LAST include */
 
 /*
-** callback for CURLOPT_PROGRESSFUNCTION
+** callback for CURLOPT_XFERINFOFUNCTION
 */
 
 #define MAX_BARLENGTH 256
 
 int tool_progress_cb(void *clientp,
-                     double dltotal, double dlnow,
-                     double ultotal, double ulnow)
+                     curl_off_t dltotal, curl_off_t dlnow,
+                     curl_off_t ultotal, curl_off_t ulnow)
 {
   /* The original progress-bar source code was written for curl by Lars Aas,
      and this new edition inherits some of his concepts. */
 
   char line[MAX_BARLENGTH+1];
   char format[40];
@@ -57,16 +57,16 @@
 
   if(bar->calls && (tvdiff(now, bar->prevtime) < 200L))
     /* after first call, limit progress-bar updating to 5 Hz */
     return 0;
 
   /* expected transfer size */
-  total = (curl_off_t)dltotal + (curl_off_t)ultotal + bar->initial_size;
+  total = dltotal + ultotal + bar->initial_size;
 
   /* we've come this far */
-  point = (curl_off_t)dlnow + (curl_off_t)ulnow + bar->initial_size;
+  point = dlnow + ulnow + bar->initial_size;
 
   if(point > total)
     /* we have got more than the expected total! */
     total = point;
 
   /* simply count invokes */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_cb_prg.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_cb_prg.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_cb_prg.h	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_cb_prg.h	2013-12-17 06:02:35.000000000 +0800
@@ -40,11 +40,11 @@
 
 /*
 ** callback for CURLOPT_PROGRESSFUNCTION
 */
 
 int tool_progress_cb(void *clientp,
-                     double dltotal, double dlnow,
-                     double ultotal, double ulnow);
+                     curl_off_t dltotal, curl_off_t dlnow,
+                     curl_off_t ultotal, curl_off_t ulnow);
 
 #endif /* HEADER_CURL_TOOL_CB_PRG_H */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_cfgable.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_cfgable.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_cfgable.h	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_cfgable.h	2013-12-17 06:02:35.000000000 +0800
@@ -71,12 +71,13 @@
   char *dns_ipv4_addr; /* dot notation */
   char *dns_ipv6_addr; /* dot notation */
   int showerror; /* -1 == unset, default => show errors
                     0 => -s is used to NOT show errors
                     1 => -S has been used to show errors */
   char *userpwd;
+  char *login_options;
   char *tls_username;
   char *tls_password;
   char *tls_authtype;
   char *proxyuserpwd;
   char *proxy;
   int proxyver;             /* set to CURLPROXY_HTTP* define */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_getparam.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_getparam.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_getparam.c	2013-10-13 05:25:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_getparam.c	2013-12-17 06:02:35.000000000 +0800
@@ -181,12 +181,15 @@
   {"$K", "sasl-ir",                  FALSE},
   {"$L", "test-event",               FALSE},
   {"0",   "http1.0",                 FALSE},
   {"01",  "http1.1",                 FALSE},
   {"02",  "http2.0",                 FALSE},
   {"1",  "tlsv1",                    FALSE},
+  {"10",  "tlsv1.0",                 FALSE},
+  {"11",  "tlsv1.1",                 FALSE},
+  {"12",  "tlsv1.2",                 FALSE},
   {"2",  "sslv2",                    FALSE},
   {"3",  "sslv3",                    FALSE},
   {"4",  "ipv4",                     FALSE},
   {"6",  "ipv6",                     FALSE},
   {"a",  "append",                   FALSE},
   {"A",  "user-agent",               TRUE},
@@ -212,12 +215,13 @@
   {"Ei", "hostpubmd5",               TRUE},
   {"Ej", "crlfile",                  TRUE},
   {"Ek", "tlsuser",                  TRUE},
   {"El", "tlspassword",              TRUE},
   {"Em", "tlsauthtype",              TRUE},
   {"En", "ssl-allow-beast",          FALSE},
+  {"Eo", "login-options",            TRUE},
   {"f",  "fail",                     FALSE},
   {"F",  "form",                     TRUE},
   {"Fs", "form-string",              TRUE},
   {"g",  "globoff",                  FALSE},
   {"G",  "get",                      FALSE},
   {"h",  "help",                     FALSE},
@@ -1020,15 +1024,31 @@
       case '2':
         /* HTTP version 2.0 */
         config->httpversion = CURL_HTTP_VERSION_2_0;
         break;
       }
       break;
-    case '1':
-      /* TLS version 1 */
-      config->ssl_version = CURL_SSLVERSION_TLSv1;
+    case '1': /* --tlsv1* options */
+      switch(subletter) {
+      case '\0':
+        /* TLS version 1.x */
+        config->ssl_version = CURL_SSLVERSION_TLSv1;
+        break;
+      case '0':
+        /* TLS version 1.0 */
+        config->ssl_version = CURL_SSLVERSION_TLSv1_0;
+        break;
+      case '1':
+        /* TLS version 1.1 */
+        config->ssl_version = CURL_SSLVERSION_TLSv1_1;
+        break;
+      case '2':
+        /* TLS version 1.2 */
+        config->ssl_version = CURL_SSLVERSION_TLSv1_2;
+        break;
+      }
       break;
     case '2':
       /* SSL version 2 */
       config->ssl_version = CURL_SSLVERSION_SSLv2;
       break;
     case '3':
@@ -1344,16 +1364,21 @@
           if(!strequal(config->tls_authtype, "SRP"))
             return PARAM_LIBCURL_DOESNT_SUPPORT; /* only support TLS-SRP */
         }
         else
           return PARAM_LIBCURL_DOESNT_SUPPORT;
         break;
-      case 'n': /* no empty SSL fragments */
+      case 'n': /* no empty SSL fragments, --ssl-allow-beast */
         if(curlinfo->features & CURL_VERSION_SSL)
           config->ssl_allow_beast = toggle;
         break;
+
+      case 'o': /* --login-options */
+        GetStr(&config->login_options, nextarg);
+        break;
+
       default: /* certificate file */
       {
         char *certname, *passphrase;
         parse_cert_parameter(nextarg, &certname, &passphrase);
         Curl_safefree(config->cert);
         config->cert = certname;
@@ -1665,13 +1690,13 @@
           GetStr(&url->infile, nextarg);
         }
       }
     }
     break;
     case 'u':
-      /* user:password;options  */
+      /* user:password  */
       GetStr(&config->userpwd, nextarg);
       cleanarg(nextarg);
       break;
     case 'U':
       /* Proxy user:password  */
       GetStr(&config->proxyuserpwd, nextarg);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_help.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_help.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_help.c	2013-10-14 05:21:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_help.c	2013-12-17 06:02:35.000000000 +0800
@@ -117,13 +117,13 @@
   "     --key-type TYPE Private key file type (DER/PEM/ENG) (SSL)",
   "     --krb LEVEL     Enable Kerberos with specified security level (F)",
 #ifndef CURL_DISABLE_LIBCURL_OPTION
   "     --libcurl FILE  Dump libcurl equivalent code of this command line",
 #endif
   "     --limit-rate RATE  Limit transfer speed to this rate",
-  " -l, --list-only     List only names of an FTP directory (F)",
+  " -l, --list-only     List only mode (F/POP3)",
   "     --local-port RANGE  Force use of these local port numbers",
   " -L, --location      Follow redirects (H)",
   "     --location-trusted like --location and send auth to other hosts (H)",
   " -M, --manual        Display the full manual",
   "     --mail-from FROM  Mail from this address (SMTP)",
   "     --mail-rcpt TO  Mail to this/these addresses (SMTP)",
@@ -138,13 +138,13 @@
   "     --netrc-file FILE  Set up the netrc filename to use",
   " -N, --no-buffer     Disable buffering of the output stream",
   "     --no-keepalive  Disable keepalive use on the connection",
   "     --no-sessionid  Disable SSL session-ID reusing (SSL)",
   "     --noproxy       List of hosts which do not use proxy",
   "     --ntlm          Use HTTP NTLM authentication (H)",
-  "     --oauth2-bearer BEARER XOAUTH2 Bearer Token (IMAP, POP3, SMTP)",
+  "     --oauth2-bearer TOKEN  OAuth 2 Bearer Token (IMAP, POP3, SMTP)",
   " -o, --output FILE   Write output to <file> instead of stdout",
   "     --pass PASS     Pass phrase for the private key (SSL/SSH)",
   "     --post301       "
   "Do not switch to GET after following a 301 redirect (H)",
   "     --post302       "
   "Do not switch to GET after following a 302 redirect (H)",
@@ -212,13 +212,14 @@
   "     --trace-ascii FILE  Like --trace but without the hex output",
   "     --trace-time    Add time stamps to trace/verbose output",
   "     --tr-encoding   Request compressed transfer encoding (H)",
   " -T, --upload-file FILE  Transfer FILE to destination",
   "     --url URL       URL to work with",
   " -B, --use-ascii     Use ASCII/text transfer",
-  " -u, --user USER[:PASSWORD]  Server user and password",
+  " -u, --user USER[:PASSWORD][;OPTIONS]  Server user, password and login"
+  " options",
   "     --tlsuser USER  TLS username",
   "     --tlspassword STRING TLS password",
   "     --tlsauthtype STRING  TLS authentication type (default SRP)",
   " -A, --user-agent STRING  User-Agent to send to server (H)",
   " -v, --verbose       Make the operation more talkative",
   " -V, --version       Show version number and quit",
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_hugehelp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_hugehelp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_hugehelp.c	2013-10-13 05:29:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_hugehelp.c	2013-12-17 06:11:48.000000000 +0800
@@ -1,11 +1,11 @@
 #include "tool_setup.h"
 #ifndef HAVE_LIBZ
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Sat Oct 12 23:29:08 2013
+ * Generation time: Mon Dec 16 23:11:48 2013
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 void hugehelp(void)
 {
    fputs(
@@ -908,18 +908,17 @@
 "              without having them being interpreted by curl itself. Note  that\n"
 "              these  letters are not normal legal URL contents but they should\n"
 "              be encoded according to the URI standard.\n"
 "\n"
 "       -G, --get\n"
 "              When used, this option will make all  data  specified  with  -d,\n"
-"              --data  or  --data-binary  to  be  used  in  an HTTP GET request\n"
-"              instead of the POST request that otherwise would  be  used.  The\n"
+"              --data,  --data-binary or --data-urlencode to be used in an HTTP\n"
+"              GET request instead of the POST request that otherwise would  be\n"
 , stdout);
  fputs(
-"              data will be appended to the URL with a '?' separator.\n"
-"\n"
+"              used. The data will be appended to the URL with a '?' separator.\n"
 "              If  used  in  combination with -I, the POST data will instead be\n"
 "              appended to the URL with a HEAD request.\n"
 "\n"
 "              If this option is used several times,  only  the  first  one  is\n"
 "              used.  This is because undoing a GET doesn't make sense, but you\n"
 "              should then instead enforce the alternative method you prefer.\n"
@@ -1004,77 +1003,86 @@
 , stdout);
  fputs(
 "              (HTTP) This option tells the -O, --remote-name option to use the\n"
 "              server-specified   Content-Disposition   filename   instead   of\n"
 "              extracting a filename from the URL.\n"
 "\n"
+"              There's  no  attempt to decode %-sequences (yet) in the provided\n"
+"              file name, so this option may provide you with rather unexpected\n"
+"              file names.\n"
+"\n"
 "       -k, --insecure\n"
 "              (SSL)  This  option explicitly allows curl to perform \"insecure\"\n"
-"              SSL connections and transfers. All SSL connections are attempted\n"
-"              to  be  made secure by using the CA certificate bundle installed\n"
 , stdout);
  fputs(
+"              SSL connections and transfers. All SSL connections are attempted\n"
+"              to  be  made secure by using the CA certificate bundle installed\n"
 "              by default. This makes  all  connections  considered  \"insecure\"\n"
 "              fail unless -k, --insecure is used.\n"
 "\n"
 "              See     this    online    resource    for    further    details:\n"
 "              http://curl.haxx.se/docs/sslcerts.html\n"
 "\n"
 "       -K, --config <config file>\n"
+, stdout);
+ fputs(
 "              Specify which config file to read curl arguments from. The  con-\n"
 "              fig  file  is a text file in which command line arguments can be\n"
+"              written which then will be used as if they were written  on  the\n"
+"              actual command line.\n"
+"\n"
+"              Options  and their parameters must be specified on the same con-\n"
+"              fig file line, separated by whitespace,  colon,  or  the  equals\n"
 , stdout);
  fputs(
-"              written which then will be used as if they were written  on  the\n"
-"              actual command line. Options and their parameters must be speci-\n"
-"              fied on the same config  file  line,  separated  by  whitespace,\n"
-"              colon,  the equals sign or any combination thereof (however, the\n"
-"              preferred separator is the equals sign). If the parameter is  to\n"
-"              contain  whitespace,  the  parameter  must  be  enclosed  within\n"
+"              sign.  Long  option  names can optionally be given in the config\n"
+"              file without the initial double dashes and if so, the  colon  or\n"
+"              equals  characters  can  be used as separators. If the option is\n"
+"              specified with one or two dashes,  there  can  be  no  colon  or\n"
+"              equals character between the option and its parameter.\n"
+"\n"
+"              If the parameter is to contain whitespace, the parameter must be\n"
 , stdout);
  fputs(
-"              quotes. Within double quotes, the following escape sequences are\n"
-"              available:  \\\\, \\\", \\t, \\n, \\r and \\v. A backslash preceding any\n"
-"              other letter is ignored. If the first column of a config line is\n"
-"              a  '#' character, the rest of the line will be treated as a com-\n"
-"              ment. Only write one option per  physical  line  in  the  config\n"
-"              file.\n"
+"              enclosed within quotes.  Within  double  quotes,  the  following\n"
+"              escape  sequences  are  available:  \\\\, \\\", \\t, \\n, \\r and \\v. A\n"
+"              backslash preceding any other letter is ignored.  If  the  first\n"
+"              column of a config line is a '#' character, the rest of the line\n"
+"              will be treated as a comment. Only write one option per physical\n"
+"              line in the config file.\n"
 "\n"
-"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
 , stdout);
  fputs(
+"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
 "              the file from stdin.\n"
 "\n"
 "              Note that to be able to specify a URL in the  config  file,  you\n"
 "              need  to  specify  it  using the --url option, and not by simply\n"
 "              writing the URL on its own line. So, it could  look  similar  to\n"
 "              this:\n"
 "\n"
 "              url = \"http://curl.haxx.se/docs/\"\n"
 "\n"
-"              Long  option  names  can  optionally be given in the config file\n"
-"              without the initial double dashes.\n"
-"\n"
 , stdout);
  fputs(
 "              When curl is invoked, it always (unless -q is used) checks for a\n"
-"              default  config  file  and  uses it if found. The default config\n"
+"              default config file and uses it if  found.  The  default  config\n"
 "              file is checked for in the following places in this order:\n"
 "\n"
-"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
+"              1)  curl  tries  to find the \"home dir\": It first checks for the\n"
 "              CURL_HOME and then the HOME environment variables. Failing that,\n"
-"              it uses getpwuid() on UNIX-like systems (which returns the  home\n"
+"              it  uses getpwuid() on UNIX-like systems (which returns the home\n"
 , stdout);
  fputs(
-"              dir  given the current user in your system). On Windows, it then\n"
+"              dir given the current user in your system). On Windows, it  then\n"
 "              checks for the APPDATA variable, or as a last resort the '%USER-\n"
 "              PROFILE%\\Application Data'.\n"
 "\n"
-"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
+"              2) On windows, if there is no _curlrc file in the home  dir,  it\n"
 "              checks for one in the same dir the curl executable is placed. On\n"
-"              UNIX-like  systems,  it will simply try to load .curlrc from the\n"
+"              UNIX-like systems, it will simply try to load .curlrc  from  the\n"
 "              determined home dir.\n"
 "\n"
 , stdout);
  fputs(
 "              # --- Example file ---\n"
 "              # this is a comment\n"
@@ -1085,23 +1093,23 @@
 "              # and fetch another URL too\n"
 "              url = \"curl.haxx.se/docs/manpage.html\"\n"
 "              -O\n"
 "              referer = \"http://nowhereatall.com/\"\n"
 "              # --- End of example file ---\n"
 "\n"
-"              This option can be used multiple times to load  multiple  config\n"
+"              This  option  can be used multiple times to load multiple config\n"
 "              files.\n"
 "\n"
 , stdout);
  fputs(
 "       --keepalive-time <seconds>\n"
-"              This  option  sets  the  time  a connection needs to remain idle\n"
-"              before sending keepalive probes and the time between  individual\n"
+"              This option sets the time a  connection  needs  to  remain  idle\n"
+"              before  sending keepalive probes and the time between individual\n"
 "              keepalive probes. It is currently effective on operating systems\n"
 "              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
-"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
+"              (meaning Linux, recent AIX, HP-UX and more). This option has  no\n"
 "              effect if --no-keepalive is used. (Added in 7.18.0)\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "              If unspecified, the option defaults to 60 seconds.\n"
@@ -1110,1120 +1118,1161 @@
 "              (SSL/SSH) Private key file name. Allows you to provide your pri-\n"
 "              vate key in this separate file.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --key-type <type>\n"
-"              (SSL) Private key file type. Specify which type your --key  pro-\n"
+"              (SSL)  Private key file type. Specify which type your --key pro-\n"
 , stdout);
  fputs(
-"              vided  private  key  is. DER, PEM, and ENG are supported. If not\n"
+"              vided private key is. DER, PEM, and ENG are  supported.  If  not\n"
 "              specified, PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --krb <level>\n"
-"              (FTP) Enable Kerberos authentication and use. The level must  be\n"
+"              (FTP)  Enable Kerberos authentication and use. The level must be\n"
 "              entered and should be one of 'clear', 'safe', 'confidential', or\n"
-"              'private'. Should you use a level that  is  not  one  of  these,\n"
+"              'private'.  Should  you  use  a  level that is not one of these,\n"
 , stdout);
  fputs(
 "              'private' will instead be used.\n"
 "\n"
-"              This  option  requires  a library built with kerberos4 or GSSAPI\n"
+"              This option requires a library built with  kerberos4  or  GSSAPI\n"
 "              (GSS-Negotiate) support. This is not very common. Use -V, --ver-\n"
 "              sion to see if your curl supports it.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -l, --list-only\n"
-"              (FTP)  When listing an FTP directory, this switch forces a name-\n"
+"              (FTP) When listing an FTP directory, this switch forces a  name-\n"
 , stdout);
  fputs(
-"              only view.  Especially useful if you want to  machine-parse  the\n"
-"              contents  of  an  FTP  directory since the normal directory view\n"
-"              doesn't use a standard look or format.\n"
+"              only  view.  This  is  especially  useful  if  the user wants to\n"
+"              machine-parse the contents of an FTP directory since the  normal\n"
+"              directory  view doesn't use a standard look or format. When used\n"
+"              like this, the option causes a NLST command to be  sent  to  the\n"
+"              server instead of LIST.\n"
 "\n"
-"              This option causes an FTP NLST command to  be  sent.   Some  FTP\n"
-"              servers  list  only files in their response to NLST; they do not\n"
-"              include subdirectories and symbolic links.\n"
+"              Note:  Some  FTP  servers  list  only files in their response to\n"
+, stdout);
+ fputs(
+"              NLST; they do not include sub-directories and symbolic links.\n"
 "\n"
-"       -L, --location\n"
+"              (POP3) When retrieving a specific email from POP3,  this  switch\n"
+"              forces  a  LIST command to be performed instead of RETR. This is\n"
+"              particularly useful if the user wants to see if a specific  mes-\n"
+"              sage id exists on the server and what size it is.\n"
+"\n"
+"              Note:  When  combined  with -X, --request <command>, this option\n"
 , stdout);
  fputs(
+"              can be used to send an UIDL command instead, so the user may use\n"
+"              the  email's  unique  identifier  rather than it's message id to\n"
+"              make the request. (Added in 7.21.5)\n"
+"\n"
+"       -L, --location\n"
 "              (HTTP/HTTPS) If the server reports that the requested  page  has\n"
 "              moved to a different location (indicated with a Location: header\n"
 "              and a 3XX response code), this option will make  curl  redo  the\n"
+, stdout);
+ fputs(
 "              request on the new place. If used together with -i, --include or\n"
 "              -I, --head, headers from all requested pages will be shown. When\n"
 "              authentication  is  used, curl only sends its credentials to the\n"
-, stdout);
- fputs(
 "              initial host. If a redirect takes curl to a different  host,  it\n"
 "              won't  be  able to intercept the user+password. See also --loca-\n"
 "              tion-trusted on how to change this. You can limit the amount  of\n"
+, stdout);
+ fputs(
 "              redirects to follow by using the --max-redirs option.\n"
 "\n"
 "              When  curl follows a redirect and the request is not a plain GET\n"
 "              (for example POST or PUT), it will do the following request with\n"
-, stdout);
- fputs(
 "              a GET if the HTTP response was 301, 302, or 303. If the response\n"
 "              code was any other 3xx code, curl  will  re-send  the  following\n"
 "              request using the same unmodified method.\n"
 "\n"
 "       --libcurl <file>\n"
+, stdout);
+ fputs(
 "              Append  this  option  to any ordinary curl command line, and you\n"
 "              will get a libcurl-using C source code written to the file  that\n"
 "              does the equivalent of what your command-line operation does!\n"
 "\n"
-, stdout);
- fputs(
 "              If  this  option is used several times, the last given file name\n"
 "              will be used. (Added in 7.16.1)\n"
 "\n"
 "       --limit-rate <speed>\n"
 "              Specify the maximum transfer rate you want  curl  to  use.  This\n"
+, stdout);
+ fputs(
 "              feature is useful if you have a limited pipe and you'd like your\n"
 "              transfer not to use your entire bandwidth.\n"
 "\n"
 "              The given speed is measured in bytes/second, unless a suffix  is\n"
-, stdout);
- fputs(
 "              appended.   Appending  'k' or 'K' will count the number as kilo-\n"
 "              bytes, 'm' or M' makes it megabytes, while 'g' or 'G'  makes  it\n"
 "              gigabytes. Examples: 200K, 3m and 1G.\n"
 "\n"
+, stdout);
+ fputs(
 "              The  given  rate  is the average speed counted during the entire\n"
 "              transfer. It means that curl might use higher transfer speeds in\n"
 "              short bursts, but over time it uses no more than the given rate.\n"
-, stdout);
- fputs(
 "              If  you  also use the -Y, --speed-limit option, that option will\n"
 "              take precedence and might cripple the rate-limiting slightly, to\n"
 "              help keeping the speed-limit logic working.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --local-port <num>[-num]\n"
 "              Set a preferred number or range of local port numbers to use for\n"
 "              the connection(s).  Note that  port  numbers  by  nature  are  a\n"
-, stdout);
- fputs(
 "              scarce resource that will be busy at times so setting this range\n"
 "              to something too narrow might cause unnecessary connection setup\n"
 "              failures. (Added in 7.15.2)\n"
 "\n"
 "       --location-trusted\n"
+, stdout);
+ fputs(
 "              (HTTP/HTTPS)  Like  -L,  --location,  but will allow sending the\n"
 "              name + password to all hosts that the site may redirect to. This\n"
 "              may or may not introduce a security breach if the site redirects\n"
-, stdout);
- fputs(
 "              you to a site to which  you'll  send  your  authentication  info\n"
 "              (which is plaintext in the case of HTTP Basic authentication).\n"
 "\n"
 "       -m, --max-time <seconds>\n"
+, stdout);
+ fputs(
 "              Maximum  time  in  seconds that you allow the whole operation to\n"
 "              take.  This is useful for preventing your batch jobs from  hang-\n"
 "              ing  for  hours due to slow networks or links going down.  Since\n"
-, stdout);
- fputs(
 "              7.32.0, this option accepts decimal values, but the actual time-\n"
 "              out will decrease in accuracy as the specified timeout increases\n"
 "              in decimal precision.  See also the --connect-timeout option.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --mail-auth <address>\n"
 "              (SMTP) Specify a single address. This will be  used  to  specify\n"
-, stdout);
- fputs(
 "              the  authentication  address  (identity)  of a submitted message\n"
 "              that is being relayed to another server.\n"
 "\n"
 "              (Added in 7.25.0)\n"
 "\n"
 "       --mail-from <address>\n"
 "              (SMTP) Specify a single address that the given mail  should  get\n"
 "              sent from.\n"
 "\n"
+, stdout);
+ fputs(
 "              (Added in 7.20.0)\n"
 "\n"
 "       --max-filesize <bytes>\n"
 "              Specify  the  maximum  size (in bytes) of a file to download. If\n"
-, stdout);
- fputs(
 "              the file requested is larger than this value, the transfer  will\n"
 "              not start and curl will return with exit code 63.\n"
 "\n"
 "              NOTE:  The  file size is not always known prior to download, and\n"
 "              for such files this option has no effect even if the file trans-\n"
+, stdout);
+ fputs(
 "              fer  ends  up  being larger than this given limit. This concerns\n"
 "              both FTP and HTTP transfers.\n"
 "\n"
 "       --mail-rcpt <address>\n"
+"              (SMTP) Specify a single address, user name or mailing list name.\n"
+"              When performing a mail transfer, the recipient should specify  a\n"
+"              valid email address to send the mail to. (Added in 7.20.0)\n"
+"\n"
+"              When  performing  an  address  verification  (VRFY command), the\n"
 , stdout);
  fputs(
-"              (SMTP) Specify a single address that the given mail  should  get\n"
-"              sent  to. This option can be used multiple times to specify many\n"
-"              recipients.\n"
+"              recipient should be specified as the user name or user name  and\n"
+"              domain (as per Section 3.5 of RFC5321). (Added in 7.34.0)\n"
 "\n"
-"              (Added in 7.20.0)\n"
+"              When performing a mailing list expand (EXPN command), the recip-\n"
+"              ient should be specified using the mailing list  name,  such  as\n"
+"              \"Friends\" or \"London-Office\".  (Added in 7.34.0)\n"
 "\n"
 "       --max-redirs <num>\n"
-"              Set maximum number of  redirection-followings  allowed.  If  -L,\n"
-"              --location is used, this option can be used to prevent curl from\n"
-"              following redirections \"in absurdum\". By default, the  limit  is\n"
+"              Set  maximum  number  of  redirection-followings allowed. If -L,\n"
 , stdout);
  fputs(
-"              set  to 50 redirections. Set this option to -1 to make it limit-\n"
+"              --location is used, this option can be used to prevent curl from\n"
+"              following  redirections  \"in absurdum\". By default, the limit is\n"
+"              set to 50 redirections. Set this option to -1 to make it  limit-\n"
 "              less.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --metalink\n"
-"              This option can tell curl to parse and process a  given  URI  as\n"
-"              Metalink  file  (both  version 3 and 4 (RFC 5854) are supported)\n"
-"              and make use of the mirrors listed within for failover if  there\n"
+"              This  option  can  tell curl to parse and process a given URI as\n"
 , stdout);
  fputs(
-"              are  errors (such as the file or server not being available). It\n"
-"              will also verify the hash of the file after  the  download  com-\n"
-"              pletes.  The Metalink file itself is downloaded and processed in\n"
+"              Metalink file (both version 3 and 4 (RFC  5854)  are  supported)\n"
+"              and  make use of the mirrors listed within for failover if there\n"
+"              are errors (such as the file or server not being available).  It\n"
+"              will  also  verify  the hash of the file after the download com-\n"
+"              pletes. The Metalink file itself is downloaded and processed  in\n"
 "              memory and not stored in the local file system.\n"
 "\n"
+, stdout);
+ fputs(
 "              Example to use a remote Metalink file:\n"
 "\n"
 "              curl --metalink http://www.example.com/example.metalink\n"
 "\n"
-, stdout);
- fputs(
 "              To use a Metalink file in the local file system, use FILE proto-\n"
 "              col (file://):\n"
 "\n"
 "              curl --metalink file://example.metalink\n"
 "\n"
-"              Please  note  that if FILE protocol is disabled, there is no way\n"
-"              to use a local Metalink file at the time of this  writing.  Also\n"
-"              note  that  if  --metalink  and  --include  are  used  together,\n"
-"              --include will be ignored. This is because including headers  in\n"
+"              Please note that if FILE protocol is disabled, there is  no  way\n"
+"              to  use  a local Metalink file at the time of this writing. Also\n"
 , stdout);
  fputs(
-"              the  response  will break Metalink parser and if the headers are\n"
+"              note  that  if  --metalink  and  --include  are  used  together,\n"
+"              --include  will be ignored. This is because including headers in\n"
+"              the response will break Metalink parser and if the  headers  are\n"
 "              included in the file described in Metalink file, hash check will\n"
 "              fail.\n"
 "\n"
 "              (Added in 7.27.0, if built against the libmetalink library.)\n"
 "\n"
 "       -n, --netrc\n"
-"              Makes  curl  scan  the  .netrc  (_netrc  on Windows) file in the\n"
+, stdout);
+ fputs(
+"              Makes curl scan the .netrc  (_netrc  on  Windows)  file  in  the\n"
 "              user's home directory for login name and password. This is typi-\n"
+"              cally used for FTP on UNIX. If used with HTTP, curl will  enable\n"
+"              user  authentication.  See netrc(4) or ftp(1) for details on the\n"
+"              file format. Curl will not complain if that  file  doesn't  have\n"
+"              the  right permissions (it should not be either world- or group-\n"
 , stdout);
  fputs(
-"              cally  used for FTP on UNIX. If used with HTTP, curl will enable\n"
-"              user authentication. See netrc(4) or ftp(1) for details  on  the\n"
-"              file  format.  Curl  will not complain if that file doesn't have\n"
-"              the right permissions (it should not be either world- or  group-\n"
-"              readable).  The  environment variable \"HOME\" is used to find the\n"
+"              readable). The environment variable \"HOME\" is used to  find  the\n"
 "              home directory.\n"
 "\n"
-, stdout);
- fputs(
-"              A quick and very simple example of how  to  setup  a  .netrc  to\n"
-"              allow  curl to FTP to the machine host.domain.com with user name\n"
+"              A  quick  and  very  simple  example of how to setup a .netrc to\n"
+"              allow curl to FTP to the machine host.domain.com with user  name\n"
 "              'myself' and password 'secret' should look similar to:\n"
 "\n"
 "              machine host.domain.com login myself password secret\n"
 "\n"
 "       -N, --no-buffer\n"
-"              Disables the buffering of the output stream. In normal work sit-\n"
-"              uations,  curl  will  use a standard buffered output stream that\n"
 , stdout);
  fputs(
+"              Disables the buffering of the output stream. In normal work sit-\n"
+"              uations, curl will use a standard buffered  output  stream  that\n"
 "              will have the effect that it will output the data in chunks, not\n"
-"              necessarily  exactly  when  the data arrives.  Using this option\n"
+"              necessarily exactly when the data arrives.   Using  this  option\n"
 "              will disable that buffering.\n"
 "\n"
-"              Note that this is the negated option name  documented.  You  can\n"
+"              Note  that  this  is the negated option name documented. You can\n"
 "              thus use --buffer to enforce the buffering.\n"
 "\n"
-"       --netrc-file\n"
-"              This  option  is similar to --netrc, except that you provide the\n"
 , stdout);
  fputs(
-"              path (absolute or relative) to the netrc file that  Curl  should\n"
-"              use.   You  can  only  specify one netrc file per invocation. If\n"
-"              several --netrc-file options are provided,  only  the  last  one\n"
+"       --netrc-file\n"
+"              This option is similar to --netrc, except that you  provide  the\n"
+"              path  (absolute  or relative) to the netrc file that Curl should\n"
+"              use.  You can only specify one netrc  file  per  invocation.  If\n"
+"              several  --netrc-file  options  are  provided, only the last one\n"
 "              will be used.  (Added in 7.21.5)\n"
 "\n"
-"              This  option  overrides  any use of --netrc as they are mutually\n"
+"              This option overrides any use of --netrc as  they  are  mutually\n"
+, stdout);
+ fputs(
 "              exclusive.  It will also abide by --netrc-optional if specified.\n"
 "\n"
 "       --netrc-optional\n"
-, stdout);
- fputs(
-"              Very similar to --netrc, but this option makes the .netrc  usage\n"
+"              Very  similar to --netrc, but this option makes the .netrc usage\n"
 "              optional and not mandatory as the --netrc option does.\n"
 "\n"
 "       --negotiate\n"
-"              (HTTP)  Enables  GSS-Negotiate authentication. The GSS-Negotiate\n"
+"              (HTTP) Enables GSS-Negotiate authentication.  The  GSS-Negotiate\n"
 "              method was designed by Microsoft and is used in their web appli-\n"
-"              cations.  It  is  primarily  meant  as  a  support for Kerberos5\n"
-"              authentication but may be also used along with another authenti-\n"
 , stdout);
  fputs(
+"              cations. It is  primarily  meant  as  a  support  for  Kerberos5\n"
+"              authentication but may be also used along with another authenti-\n"
 "              cation method. For more information see IETF draft draft-brezak-\n"
 "              spnego-http-04.txt.\n"
 "\n"
-"              If you want to enable Negotiate for your  proxy  authentication,\n"
+"              If  you  want to enable Negotiate for your proxy authentication,\n"
 "              then use --proxy-negotiate.\n"
 "\n"
-"              This  option  requires a library built with GSSAPI support. This\n"
-"              is not very common. Use -V, --version to  see  if  your  version\n"
-"              supports GSS-Negotiate.\n"
-"\n"
+"              This option requires a library built with GSSAPI  support.  This\n"
 , stdout);
  fputs(
-"              When  using this option, you must also provide a fake -u, --user\n"
-"              option to activate the authentication code properly.  Sending  a\n"
-"              '-u  :'  is  enough  as  the  user name and password from the -u\n"
+"              is  not  very  common.  Use -V, --version to see if your version\n"
+"              supports GSS-Negotiate.\n"
+"\n"
+"              When using this option, you must also provide a fake -u,  --user\n"
+"              option  to  activate the authentication code properly. Sending a\n"
+"              '-u :' is enough as the user  name  and  password  from  the  -u\n"
 "              option aren't actually used.\n"
 "\n"
-"              If this option is used several times,  only  the  first  one  is\n"
+"              If  this  option  is  used  several times, only the first one is\n"
 "              used.\n"
 "\n"
-"       --no-keepalive\n"
-"              Disables the use of keepalive messages on the TCP connection, as\n"
 , stdout);
  fputs(
+"       --no-keepalive\n"
+"              Disables the use of keepalive messages on the TCP connection, as\n"
 "              by default curl enables them.\n"
 "\n"
-"              Note that this is the negated option name  documented.  You  can\n"
+"              Note  that  this  is the negated option name documented. You can\n"
 "              thus use --keepalive to enforce keepalive.\n"
 "\n"
 "       --no-sessionid\n"
-"              (SSL)  Disable curl's use of SSL session-ID caching.  By default\n"
-"              all transfers are done using the cache. Note that while  nothing\n"
-"              should  ever  get  hurt  by attempting to reuse SSL session-IDs,\n"
+"              (SSL) Disable curl's use of SSL session-ID caching.  By  default\n"
+"              all  transfers are done using the cache. Note that while nothing\n"
 , stdout);
  fputs(
+"              should ever get hurt by attempting  to  reuse  SSL  session-IDs,\n"
 "              there seem to be broken SSL implementations in the wild that may\n"
-"              require  you to disable this in order for you to succeed. (Added\n"
+"              require you to disable this in order for you to succeed.  (Added\n"
 "              in 7.16.0)\n"
 "\n"
-"              Note that this is the negated option name  documented.  You  can\n"
+"              Note  that  this  is the negated option name documented. You can\n"
 "              thus use --sessionid to enforce session-ID caching.\n"
 "\n"
 "       --noproxy <no-proxy-list>\n"
-"              Comma-separated  list  of hosts which do not use a proxy, if one\n"
 , stdout);
  fputs(
-"              is specified.  The only wildcard is a single * character,  which\n"
+"              Comma-separated list of hosts which do not use a proxy,  if  one\n"
+"              is  specified.  The only wildcard is a single * character, which\n"
 "              matches all hosts, and effectively disables the proxy. Each name\n"
-"              in this list is matched as either a domain  which  contains  the\n"
-"              hostname,  or  the hostname itself. For example, local.com would\n"
-"              match  local.com,  local.com:80,  and  www.local.com,  but   not\n"
-"              www.notlocal.com.  (Added in 7.19.4).\n"
-"\n"
+"              in  this  list  is matched as either a domain which contains the\n"
+"              hostname, or the hostname itself. For example,  local.com  would\n"
+"              match   local.com,  local.com:80,  and  www.local.com,  but  not\n"
 , stdout);
  fputs(
-"       --ntlm (HTTP)  Enables  NTLM  authentication.  The  NTLM authentication\n"
+"              www.notlocal.com.  (Added in 7.19.4).\n"
+"\n"
+"       --ntlm (HTTP) Enables  NTLM  authentication.  The  NTLM  authentication\n"
 "              method was designed by Microsoft and is used by IIS web servers.\n"
-"              It  is a proprietary protocol, reverse-engineered by clever peo-\n"
+"              It is a proprietary protocol, reverse-engineered by clever  peo-\n"
 "              ple and implemented in curl based on their efforts. This kind of\n"
-"              behavior  should  not be endorsed, you should encourage everyone\n"
-"              who uses NTLM to switch to a public and  documented  authentica-\n"
+"              behavior should not be endorsed, you should  encourage  everyone\n"
 , stdout);
  fputs(
+"              who  uses  NTLM to switch to a public and documented authentica-\n"
 "              tion method instead, such as Digest.\n"
 "\n"
-"              If  you  want to enable NTLM for your proxy authentication, then\n"
+"              If you want to enable NTLM for your proxy  authentication,  then\n"
 "              use --proxy-ntlm.\n"
 "\n"
-"              This option requires a library built with SSL support.  Use  -V,\n"
+"              This  option  requires a library built with SSL support. Use -V,\n"
 "              --version to see if your curl supports NTLM.\n"
 "\n"
-"              If  this  option  is  used  several times, only the first one is\n"
+"              If this option is used several times,  only  the  first  one  is\n"
 "              used.\n"
 "\n"
-"       -o, --output <file>\n"
 , stdout);
  fputs(
+"       -o, --output <file>\n"
 "              Write output to <file> instead of stdout. If you are using {} or\n"
-"              []  to  fetch  multiple documents, you can use '#' followed by a\n"
-"              number in the <file> specifier. That variable will  be  replaced\n"
+"              [] to fetch multiple documents, you can use '#'  followed  by  a\n"
+"              number  in  the <file> specifier. That variable will be replaced\n"
 "              with the current string for the URL being fetched. Like in:\n"
 "\n"
 "                curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
 "\n"
 "              or use several variables like:\n"
 "\n"
-"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
-"\n"
 , stdout);
  fputs(
-"              You  may use this option as many times as the number of URLs you\n"
+"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
+"\n"
+"              You may use this option as many times as the number of URLs  you\n"
 "              have.\n"
 "\n"
-"              See also the --create-dirs option to create the  local  directo-\n"
-"              ries  dynamically.  Specifying the output as '-' (a single dash)\n"
+"              See  also  the --create-dirs option to create the local directo-\n"
+"              ries dynamically. Specifying the output as '-' (a  single  dash)\n"
 "              will force the output to be done to stdout.\n"
 "\n"
 "       -O, --remote-name\n"
-"              Write output to a local file named like the remote file we  get.\n"
-"              (Only  the file part of the remote file is used, the path is cut\n"
+"              Write  output to a local file named like the remote file we get.\n"
 , stdout);
  fputs(
+"              (Only the file part of the remote file is used, the path is  cut\n"
 "              off.)\n"
 "\n"
-"              The remote file name to use for saving  is  extracted  from  the\n"
+"              The  remote  file  name  to use for saving is extracted from the\n"
 "              given URL, nothing else.\n"
 "\n"
-"              Consequentially,  the  file will be saved in the current working\n"
-"              directory. If you want the file saved in a different  directory,\n"
+"              Consequentially, the file will be saved in the  current  working\n"
+"              directory.  If you want the file saved in a different directory,\n"
 "              make sure you change current working directory before you invoke\n"
-"              curl with the -O, --remote-name flag!\n"
-"\n"
 , stdout);
  fputs(
-"              You may use this option as many times as the number of URLs  you\n"
+"              curl with the -O, --remote-name flag!\n"
+"\n"
+"              There is no URL decoding done on the file name. If it has %20 or\n"
+"              other URL encoded parts of the name, they will end up  as-is  as\n"
+"              file name.\n"
+"\n"
+"              You  may use this option as many times as the number of URLs you\n"
 "              have.\n"
 "\n"
 "       --oauth2-bearer\n"
-"              (IMAP/POP3/SMTP)  Specify  the Bearer Token for OAUTH 2.0 server\n"
-"              authentication.  The Bearer Token is used in conjuction with the\n"
-"              user  name  which  can  be specified as part of the --url or -u,\n"
+"              (IMAP, POP3, SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
+, stdout);
+ fputs(
+"              authentication. The Bearer Token is used in conjunction with the\n"
+"              user name which can be specified as part of  the  --url  or  -u,\n"
 "              --user options.\n"
 "\n"
-"              The Bearer Token and user name are formatted  according  to  RFC\n"
+"              The  Bearer  Token  and user name are formatted according to RFC\n"
 "              6750.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -p, --proxytunnel\n"
 "              When an HTTP proxy is used (-x, --proxy), this option will cause\n"
-"              non-HTTP protocols  to  attempt  to  tunnel  through  the  proxy\n"
-"              instead  of merely using it to do HTTP-like operations. The tun-\n"
-"              nel approach is made with the HTTP  proxy  CONNECT  request  and\n"
-"              requires that the proxy allows direct connect to the remote port\n"
 , stdout);
  fputs(
+"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
+"              instead of merely using it to do HTTP-like operations. The  tun-\n"
+"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
+"              requires that the proxy allows direct connect to the remote port\n"
 "              number curl wants to tunnel through to.\n"
 "\n"
 "       -P, --ftp-port <address>\n"
-"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
-"              necting  with  FTP.  This  switch makes curl use active mode. In\n"
-"              practice, curl then tells the server  to  connect  back  to  the\n"
-"              client's specified address and port, while passive mode asks the\n"
-"              server to setup an IP address and port for  it  to  connect  to.\n"
+"              (FTP)  Reverses  the  default initiator/listener roles when con-\n"
 , stdout);
  fputs(
+"              necting with FTP. This switch makes curl  use  active  mode.  In\n"
+"              practice,  curl  then  tells  the  server to connect back to the\n"
+"              client's specified address and port, while passive mode asks the\n"
+"              server  to  setup  an  IP address and port for it to connect to.\n"
 "              <address> should be one of:\n"
 "\n"
 "              interface\n"
-"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
+"                     i.e \"eth0\" to specify which interface's  IP  address  you\n"
+, stdout);
+ fputs(
 "                     want to use (Unix only)\n"
 "\n"
 "              IP address\n"
 "                     i.e \"192.168.10.1\" to specify the exact IP address\n"
 "\n"
 "              host name\n"
 "                     i.e \"my.host.domain\" to specify the machine\n"
 "\n"
-"              -      make curl pick the same IP address that is  already  used\n"
-, stdout);
- fputs(
+"              -      make  curl  pick the same IP address that is already used\n"
 "                     for the control connection\n"
 "\n"
-"       If  this  option is used several times, the last one will be used. Dis-\n"
-"       able the use of PORT with --ftp-pasv. Disable the attempt  to  use  the\n"
-"       EPRT  command  instead  of PORT by using --disable-eprt. EPRT is really\n"
+"       If this option is used several times, the last one will be  used.  Dis-\n"
+, stdout);
+ fputs(
+"       able  the  use  of PORT with --ftp-pasv. Disable the attempt to use the\n"
+"       EPRT command instead of PORT by using --disable-eprt.  EPRT  is  really\n"
 "       PORT++.\n"
 "\n"
 "       Starting in 7.19.5, you can append \":[start]-[end]\" to the right of the\n"
-"       address,  to tell curl what TCP port range to use. That means you spec-\n"
+"       address, to tell curl what TCP port range to use. That means you  spec-\n"
+"       ify  a  port  range,  from  a lower to a higher number. A single number\n"
+"       works as well, but do note that it increases the risk of failure  since\n"
 , stdout);
  fputs(
-"       ify a port range, from a lower to a  higher  number.  A  single  number\n"
-"       works  as well, but do note that it increases the risk of failure since\n"
 "       the port may not be available.\n"
 "\n"
 "       --pass <phrase>\n"
 "              (SSL/SSH) Passphrase for the private key\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --post301\n"
-"              (HTTP) Tells curl to respect RFC  2616/10.3.2  and  not  convert\n"
+"              (HTTP)  Tells  curl  to  respect RFC 2616/10.3.2 and not convert\n"
+"              POST requests into GET requests when following a  301  redirect-\n"
+"              ion.  The  non-RFC  behaviour  is ubiquitous in web browsers, so\n"
 , stdout);
  fputs(
-"              POST  requests  into GET requests when following a 301 redirect-\n"
-"              ion. The non-RFC behaviour is ubiquitous  in  web  browsers,  so\n"
-"              curl  does  the  conversion  by default to maintain consistency.\n"
+"              curl does the conversion by  default  to  maintain  consistency.\n"
 "              However, a server may require a POST to remain a POST after such\n"
-"              a  redirection.  This  option  is meaningful only when using -L,\n"
+"              a redirection. This option is meaningful  only  when  using  -L,\n"
 "              --location (Added in 7.17.1)\n"
 "\n"
 "       --post302\n"
+"              (HTTP)  Tells  curl  to  respect RFC 2616/10.3.2 and not convert\n"
+"              POST requests into GET requests when following a  302  redirect-\n"
 , stdout);
  fputs(
-"              (HTTP) Tells curl to respect RFC  2616/10.3.2  and  not  convert\n"
-"              POST  requests  into GET requests when following a 302 redirect-\n"
-"              ion. The non-RFC behaviour is ubiquitous  in  web  browsers,  so\n"
-"              curl  does  the  conversion  by default to maintain consistency.\n"
+"              ion.  The  non-RFC  behaviour  is ubiquitous in web browsers, so\n"
+"              curl does the conversion by  default  to  maintain  consistency.\n"
 "              However, a server may require a POST to remain a POST after such\n"
-"              a  redirection.  This  option  is meaningful only when using -L,\n"
-, stdout);
- fputs(
+"              a redirection. This option is meaningful  only  when  using  -L,\n"
 "              --location (Added in 7.19.1)\n"
 "\n"
 "       --post303\n"
-"              (HTTP) Tells curl to respect RFC  2616/10.3.2  and  not  convert\n"
-"              POST  requests  into GET requests when following a 303 redirect-\n"
-"              ion. The non-RFC behaviour is ubiquitous  in  web  browsers,  so\n"
-"              curl  does  the  conversion  by default to maintain consistency.\n"
-"              However, a server may require a POST to remain a POST after such\n"
+"              (HTTP)  Tells  curl  to  respect RFC 2616/10.3.2 and not convert\n"
 , stdout);
  fputs(
-"              a  redirection.  This  option  is meaningful only when using -L,\n"
+"              POST requests into GET requests when following a  303  redirect-\n"
+"              ion.  The  non-RFC  behaviour  is ubiquitous in web browsers, so\n"
+"              curl does the conversion by  default  to  maintain  consistency.\n"
+"              However, a server may require a POST to remain a POST after such\n"
+"              a redirection. This option is meaningful  only  when  using  -L,\n"
 "              --location (Added in 7.26.0)\n"
 "\n"
 "       --proto <protocols>\n"
-"              Tells  curl  to  use  the  listed  protocols  for  its   initial\n"
+, stdout);
+ fputs(
+"              Tells   curl  to  use  the  listed  protocols  for  its  initial\n"
 "              retrieval. Protocols are evaluated left to right, are comma sep-\n"
-"              arated, and are each a protocol name or 'all',  optionally  pre-\n"
+"              arated,  and  are each a protocol name or 'all', optionally pre-\n"
 "              fixed by zero or more modifiers. Available modifiers are:\n"
 "\n"
-, stdout);
- fputs(
 "              +  Permit this protocol in addition to protocols already permit-\n"
 "                 ted (this is the default if no modifier is used).\n"
 "\n"
-"              -  Deny this protocol, removing it from the  list  of  protocols\n"
+, stdout);
+ fputs(
+"              -  Deny  this  protocol,  removing it from the list of protocols\n"
 "                 already permitted.\n"
 "\n"
-"              =  Permit  only this protocol (ignoring the list already permit-\n"
-"                 ted), though subject  to  later  modification  by  subsequent\n"
+"              =  Permit only this protocol (ignoring the list already  permit-\n"
+"                 ted),  though  subject  to  later  modification by subsequent\n"
 "                 entries in the comma separated list.\n"
 "\n"
-, stdout);
- fputs(
 "              For example:\n"
 "\n"
 "              --proto -ftps  uses the default protocols, but disables ftps\n"
 "\n"
 "              --proto -all,https,+http\n"
+, stdout);
+ fputs(
 "                             only enables http and https\n"
 "\n"
 "              --proto =http,https\n"
 "                             also only enables http and https\n"
 "\n"
-"              Unknown  protocols  produce  a  warning.  This allows scripts to\n"
-"              safely rely on being able to disable potentially dangerous  pro-\n"
-, stdout);
- fputs(
-"              tocols,  without  relying  upon  support for that protocol being\n"
+"              Unknown protocols produce a  warning.  This  allows  scripts  to\n"
+"              safely  rely on being able to disable potentially dangerous pro-\n"
+"              tocols, without relying upon support  for  that  protocol  being\n"
 "              built into curl to avoid an error.\n"
 "\n"
+, stdout);
+ fputs(
 "              This option can be used multiple times, in which case the effect\n"
-"              is  the same as concatenating the protocols into one instance of\n"
+"              is the same as concatenating the protocols into one instance  of\n"
 "              the option.\n"
 "\n"
 "              (Added in 7.20.2)\n"
 "\n"
 "       --proto-redir <protocols>\n"
-"              Tells curl to use the listed protocols  after  a  redirect.  See\n"
-, stdout);
- fputs(
+"              Tells  curl  to  use  the listed protocols after a redirect. See\n"
 "              --proto for how protocols are represented.\n"
 "\n"
 "              (Added in 7.20.2)\n"
 "\n"
 "       --proxy-anyauth\n"
-"              Tells  curl to pick a suitable authentication method when commu-\n"
-"              nicating with  the  given  proxy.  This  might  cause  an  extra\n"
+, stdout);
+ fputs(
+"              Tells curl to pick a suitable authentication method when  commu-\n"
+"              nicating  with  the  given  proxy.  This  might  cause  an extra\n"
 "              request/response round-trip. (Added in 7.13.2)\n"
 "\n"
 "       --proxy-basic\n"
-"              Tells  curl  to use HTTP Basic authentication when communicating\n"
+"              Tells curl to use HTTP Basic authentication  when  communicating\n"
+"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
+"              remote host. Basic is the  default  authentication  method  curl\n"
 , stdout);
  fputs(
-"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
-"              remote  host.  Basic  is  the default authentication method curl\n"
 "              uses with proxies.\n"
 "\n"
 "       --proxy-digest\n"
-"              Tells curl to use HTTP Digest authentication when  communicating\n"
+"              Tells  curl to use HTTP Digest authentication when communicating\n"
 "              with the given proxy. Use --digest for enabling HTTP Digest with\n"
 "              a remote host.\n"
 "\n"
 "       --proxy-negotiate\n"
-, stdout);
- fputs(
 "              Tells curl to use HTTP Negotiate authentication when communicat-\n"
-"              ing  with  the  given  proxy.  Use --negotiate for enabling HTTP\n"
+"              ing with the given proxy.  Use  --negotiate  for  enabling  HTTP\n"
 "              Negotiate with a remote host. (Added in 7.17.1)\n"
 "\n"
+, stdout);
+ fputs(
 "       --proxy-ntlm\n"
-"              Tells curl to use HTTP NTLM  authentication  when  communicating\n"
+"              Tells  curl  to  use HTTP NTLM authentication when communicating\n"
 "              with the given proxy. Use --ntlm for enabling NTLM with a remote\n"
 "              host.\n"
 "\n"
 "       --proxy1.0 <proxyhost[:port]>\n"
-, stdout);
- fputs(
-"              Use the specified HTTP 1.0 proxy. If  the  port  number  is  not\n"
+"              Use  the  specified  HTTP  1.0  proxy. If the port number is not\n"
 "              specified, it is assumed at port 1080.\n"
 "\n"
-"              The  only difference between this and the HTTP proxy option (-x,\n"
+"              The only difference between this and the HTTP proxy option  (-x,\n"
+, stdout);
+ fputs(
 "              --proxy), is that attempts to use CONNECT through the proxy will\n"
 "              specify an HTTP 1.0 protocol instead of the default HTTP 1.1.\n"
 "\n"
 "       --pubkey <key>\n"
-"              (SSH)  Public  key  file name. Allows you to provide your public\n"
-, stdout);
- fputs(
+"              (SSH) Public key file name. Allows you to  provide  your  public\n"
 "              key in this separate file.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -q     If used as the first parameter on the command line,  the  curlrc\n"
-"              config  file will not be read and used. See the -K, --config for\n"
+"       -q     If  used  as the first parameter on the command line, the curlrc\n"
+, stdout);
+ fputs(
+"              config file will not be read and used. See the -K, --config  for\n"
 "              details on the default config file search path.\n"
 "\n"
 "       -Q, --quote <command>\n"
-"              (FTP/SFTP) Send an arbitrary command to the remote FTP  or  SFTP\n"
-, stdout);
- fputs(
-"              server.  Quote commands are sent BEFORE the transfer takes place\n"
-"              (just after the initial PWD command in an FTP  transfer,  to  be\n"
+"              (FTP/SFTP)  Send  an arbitrary command to the remote FTP or SFTP\n"
+"              server. Quote commands are sent BEFORE the transfer takes  place\n"
+"              (just  after  the  initial PWD command in an FTP transfer, to be\n"
 "              exact). To make commands take place after a successful transfer,\n"
-"              prefix them with a dash '-'.  To make  commands  be  sent  after\n"
-"              curl has changed the working directory, just before the transfer\n"
-"              command(s), prefix the command with a '+'  (this  is  only  sup-\n"
 , stdout);
  fputs(
-"              ported  for FTP). You may specify any number of commands. If the\n"
+"              prefix  them  with  a  dash '-'.  To make commands be sent after\n"
+"              curl has changed the working directory, just before the transfer\n"
+"              command(s),  prefix  the  command  with a '+' (this is only sup-\n"
+"              ported for FTP). You may specify any number of commands. If  the\n"
 "              server returns failure for one of the commands, the entire oper-\n"
-"              ation  will  be aborted. You must send syntactically correct FTP\n"
-"              commands as RFC 959 defines to FTP servers, or one of  the  com-\n"
-"              mands  listed  below  to  SFTP servers.  This option can be used\n"
-"              multiple times. When speaking to an FTP server, prefix the  com-\n"
+"              ation will be aborted. You must send syntactically  correct  FTP\n"
 , stdout);
  fputs(
+"              commands  as  RFC 959 defines to FTP servers, or one of the com-\n"
+"              mands listed below to SFTP servers.  This  option  can  be  used\n"
+"              multiple  times. When speaking to an FTP server, prefix the com-\n"
 "              mand with an asterisk (*) to make curl continue even if the com-\n"
 "              mand fails as by default curl will stop at first failure.\n"
 "\n"
-"              SFTP is a binary protocol. Unlike for FTP, curl interprets  SFTP\n"
-"              quote  commands  itself before sending them to the server.  File\n"
+"              SFTP  is a binary protocol. Unlike for FTP, curl interprets SFTP\n"
+, stdout);
+ fputs(
+"              quote commands itself before sending them to the  server.   File\n"
 "              names may be quoted shell-style to embed spaces or special char-\n"
-"              acters.   Following is the list of all supported SFTP quote com-\n"
+"              acters.  Following is the list of all supported SFTP quote  com-\n"
 "              mands:\n"
 "\n"
+"              chgrp group file\n"
+"                     The  chgrp command sets the group ID of the file named by\n"
+"                     the file operand to the group ID specified by  the  group\n"
 , stdout);
  fputs(
-"              chgrp group file\n"
-"                     The chgrp command sets the group ID of the file named  by\n"
-"                     the  file  operand to the group ID specified by the group\n"
 "                     operand. The group operand is a decimal integer group ID.\n"
 "\n"
 "              chmod mode file\n"
-"                     The chmod command modifies the  file  mode  bits  of  the\n"
+"                     The  chmod  command  modifies  the  file mode bits of the\n"
 "                     specified file. The mode operand is an octal integer mode\n"
 "                     number.\n"
 "\n"
-, stdout);
- fputs(
 "              chown user file\n"
 "                     The chown command sets the owner of the file named by the\n"
-"                     file  operand  to the user ID specified by the user oper-\n"
+"                     file operand to the user ID specified by the  user  oper-\n"
+, stdout);
+ fputs(
 "                     and. The user operand is a decimal integer user ID.\n"
 "\n"
 "              ln source_file target_file\n"
 "                     The ln and symlink commands create a symbolic link at the\n"
-"                     target_file  location  pointing  to the source_file loca-\n"
+"                     target_file location pointing to  the  source_file  loca-\n"
 "                     tion.\n"
 "\n"
-, stdout);
- fputs(
 "              mkdir directory_name\n"
-"                     The mkdir command creates  the  directory  named  by  the\n"
+"                     The  mkdir  command  creates  the  directory named by the\n"
 "                     directory_name operand.\n"
 "\n"
+, stdout);
+ fputs(
 "              pwd    The pwd command returns the absolute pathname of the cur-\n"
 "                     rent working directory.\n"
 "\n"
 "              rename source target\n"
 "                     The rename command renames the file or directory named by\n"
-"                     the  source  operand to the destination path named by the\n"
-, stdout);
- fputs(
+"                     the source operand to the destination path named  by  the\n"
 "                     target operand.\n"
 "\n"
 "              rm file\n"
 "                     The rm command removes the file specified by the file op-\n"
 "                     erand.\n"
 "\n"
+, stdout);
+ fputs(
 "              rmdir directory\n"
-"                     The  rmdir  command removes the directory entry specified\n"
+"                     The rmdir command removes the directory  entry  specified\n"
 "                     by the directory operand, provided it is empty.\n"
 "\n"
 "              symlink source_file target_file\n"
 "                     See ln.\n"
 "\n"
 "       -r, --range <range>\n"
-, stdout);
- fputs(
-"              (HTTP/FTP/SFTP/FILE) Retrieve a byte range (i.e a partial  docu-\n"
-"              ment)  from  a  HTTP/1.1,  FTP  or  SFTP server or a local FILE.\n"
+"              (HTTP/FTP/SFTP/FILE)  Retrieve a byte range (i.e a partial docu-\n"
+"              ment) from a HTTP/1.1, FTP or  SFTP  server  or  a  local  FILE.\n"
 "              Ranges can be specified in a number of ways.\n"
 "\n"
+, stdout);
+ fputs(
 "              0-499     specifies the first 500 bytes\n"
 "\n"
 "              500-999   specifies the second 500 bytes\n"
 "\n"
 "              -500      specifies the last 500 bytes\n"
 "\n"
 "              9500-     specifies the bytes from offset 9500 and forward\n"
 "\n"
-, stdout);
- fputs(
 "              0-0,-1    specifies the first and last byte only(*)(H)\n"
 "\n"
 "              500-700,600-799\n"
 "                        specifies 300 bytes from offset 500(H)\n"
 "\n"
 "              100-199,500-599\n"
+, stdout);
+ fputs(
 "                        specifies two separate 100-byte ranges(*)(H)\n"
 "\n"
-"       (*) = NOTE that this will cause the server to reply  with  a  multipart\n"
+"       (*)  =  NOTE  that this will cause the server to reply with a multipart\n"
 "       response!\n"
 "\n"
-"       Only  digit characters (0-9) are valid in the 'start' and 'stop' fields\n"
-, stdout);
- fputs(
-"       of the 'start-stop' range syntax. If a non-digit character is given  in\n"
-"       the  range, the server's response will be unspecified, depending on the\n"
+"       Only digit characters (0-9) are valid in the 'start' and 'stop'  fields\n"
+"       of  the 'start-stop' range syntax. If a non-digit character is given in\n"
+"       the range, the server's response will be unspecified, depending on  the\n"
 "       server's configuration.\n"
 "\n"
-"       You should also be aware that many HTTP/1.1 servers do  not  have  this\n"
-"       feature  enabled,  so  that  when  you  attempt  to get a range, you'll\n"
-"       instead get the whole document.\n"
-"\n"
-"       FTP and SFTP range downloads only support the simple 'start-stop'  syn-\n"
 , stdout);
  fputs(
-"       tax  (optionally  with  one of the numbers omitted). FTP use depends on\n"
+"       You  should  also  be aware that many HTTP/1.1 servers do not have this\n"
+"       feature enabled, so that when  you  attempt  to  get  a  range,  you'll\n"
+"       instead get the whole document.\n"
+"\n"
+"       FTP  and SFTP range downloads only support the simple 'start-stop' syn-\n"
+"       tax (optionally with one of the numbers omitted). FTP  use  depends  on\n"
 "       the extended FTP command SIZE.\n"
 "\n"
 "       If this option is used several times, the last one will be used.\n"
 "\n"
 "       -R, --remote-time\n"
-"              When used, this will make curl attempt to figure out  the  time-\n"
-"              stamp  of  the  remote  file,  and if that is available make the\n"
+, stdout);
+ fputs(
+"              When  used,  this will make curl attempt to figure out the time-\n"
+"              stamp of the remote file, and if  that  is  available  make  the\n"
 "              local file get that same timestamp.\n"
 "\n"
 "       --random-file <file>\n"
-, stdout);
- fputs(
 "              (SSL) Specify the path name to file containing what will be con-\n"
-"              sidered  as  random  data.  The  data is used to seed the random\n"
+"              sidered as random data. The data is  used  to  seed  the  random\n"
 "              engine for SSL connections.  See also the --egd-file option.\n"
 "\n"
+, stdout);
+ fputs(
 "       --raw  (HTTP) When used, it disables all internal HTTP decoding of con-\n"
-"              tent  or  transfer  encodings  and  instead makes them passed on\n"
+"              tent or transfer encodings and  instead  makes  them  passed  on\n"
 "              unaltered, raw. (Added in 7.16.2)\n"
 "\n"
 "       --remote-name-all\n"
-, stdout);
- fputs(
-"              This option changes the default action for all given URLs to  be\n"
+"              This  option changes the default action for all given URLs to be\n"
 "              dealt with as if -O, --remote-name were used for each one. So if\n"
 "              you want to disable that for a specific URL after --remote-name-\n"
-"              all  has  been  used,  you  must use \"-o -\" or --no-remote-name.\n"
+, stdout);
+ fputs(
+"              all has been used, you must  use  \"-o  -\"  or  --no-remote-name.\n"
 "              (Added in 7.19.0)\n"
 "\n"
 "       --resolve <host:port:address>\n"
-"              Provide a custom address for a  specific  host  and  port  pair.\n"
-, stdout);
- fputs(
-"              Using  this,  you  can make the curl requests(s) use a specified\n"
-"              address and prevent the otherwise normally resolved  address  to\n"
-"              be  used.  Consider it a sort of /etc/hosts alternative provided\n"
-"              on the command line. The port number should be the  number  used\n"
-"              for  the  specific  protocol the host will be used for. It means\n"
-"              you need several entries if you want to provide address for  the\n"
+"              Provide  a  custom  address  for  a specific host and port pair.\n"
+"              Using this, you can make the curl requests(s)  use  a  specified\n"
+"              address  and  prevent the otherwise normally resolved address to\n"
+"              be used. Consider it a sort of /etc/hosts  alternative  provided\n"
 , stdout);
  fputs(
+"              on  the  command line. The port number should be the number used\n"
+"              for the specific protocol the host will be used  for.  It  means\n"
+"              you  need several entries if you want to provide address for the\n"
 "              same host but different ports.\n"
 "\n"
-"              This  option  can  be  used many times to add many host names to\n"
+"              This option can be used many times to add  many  host  names  to\n"
 "              resolve.\n"
 "\n"
 "              (Added in 7.21.3)\n"
 "\n"
 "       --retry <num>\n"
-"              If a transient error is returned when curl tries  to  perform  a\n"
-"              transfer,  it  will retry this number of times before giving up.\n"
-"              Setting the number to 0 makes curl do no retries (which  is  the\n"
 , stdout);
  fputs(
-"              default).  Transient  error  means either: a timeout, an FTP 4xx\n"
+"              If  a  transient  error is returned when curl tries to perform a\n"
+"              transfer, it will retry this number of times before  giving  up.\n"
+"              Setting  the  number to 0 makes curl do no retries (which is the\n"
+"              default). Transient error means either: a timeout,  an  FTP  4xx\n"
 "              response code or an HTTP 5xx response code.\n"
 "\n"
-"              When curl is about to retry a transfer, it will first  wait  one\n"
-"              second  and  then for all forthcoming retries it will double the\n"
-"              waiting time until it reaches 10 minutes which then will be  the\n"
-"              delay  between  the rest of the retries.  By using --retry-delay\n"
+"              When  curl  is about to retry a transfer, it will first wait one\n"
 , stdout);
  fputs(
-"              you  disable  this  exponential  backoff  algorithm.  See   also\n"
-"              --retry-max-time  to  limit  the total time allowed for retries.\n"
+"              second and then for all forthcoming retries it will  double  the\n"
+"              waiting  time until it reaches 10 minutes which then will be the\n"
+"              delay between the rest of the retries.  By  using  --retry-delay\n"
+"              you   disable  this  exponential  backoff  algorithm.  See  also\n"
+"              --retry-max-time to limit the total time  allowed  for  retries.\n"
 "              (Added in 7.12.3)\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --retry-delay <seconds>\n"
-"              Make curl sleep this amount of time before  each  retry  when  a\n"
-"              transfer  has  failed  with  a  transient  error (it changes the\n"
+"              Make  curl  sleep  this  amount of time before each retry when a\n"
+"              transfer has failed with  a  transient  error  (it  changes  the\n"
+"              default  backoff time algorithm between retries). This option is\n"
+"              only interesting if --retry is also used. Setting this delay  to\n"
 , stdout);
  fputs(
-"              default backoff time algorithm between retries). This option  is\n"
-"              only  interesting if --retry is also used. Setting this delay to\n"
-"              zero will make curl use the default  backoff  time.   (Added  in\n"
+"              zero  will  make  curl  use the default backoff time.  (Added in\n"
 "              7.12.3)\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --retry-max-time <seconds>\n"
-"              The  retry  timer  is  reset  before the first transfer attempt.\n"
-, stdout);
- fputs(
+"              The retry timer is reset  before  the  first  transfer  attempt.\n"
 "              Retries will be done as usual (see --retry) as long as the timer\n"
 "              hasn't reached this given limit. Notice that if the timer hasn't\n"
-"              reached the limit, the request will be made and  while  perform-\n"
-"              ing,  it may take longer than this given time period. To limit a\n"
-"              single request's maximum time, use  -m,  --max-time.   Set  this\n"
-"              option to zero to not timeout retries. (Added in 7.12.3)\n"
-"\n"
 , stdout);
  fputs(
+"              reached  the  limit, the request will be made and while perform-\n"
+"              ing, it may take longer than this given time period. To limit  a\n"
+"              single  request's  maximum  time,  use -m, --max-time.  Set this\n"
+"              option to zero to not timeout retries. (Added in 7.12.3)\n"
+"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -s, --silent\n"
-"              Silent  or  quiet  mode. Don't show progress meter or error mes-\n"
-"              sages.  Makes Curl mute. It will still output the data  you  ask\n"
+"              Silent or quiet mode. Don't show progress meter  or  error  mes-\n"
+, stdout);
+ fputs(
+"              sages.   Makes  Curl mute. It will still output the data you ask\n"
 "              for, potentially even to the terminal/stdout unless you redirect\n"
 "              it.\n"
 "\n"
 "       --sasl-ir\n"
-"              Enable initial  response  in  SASL  authentication.   (Added  in\n"
+"              Enable  initial  response  in  SASL  authentication.   (Added in\n"
 "              7.31.0)\n"
 "\n"
 "       -S, --show-error\n"
-, stdout);
- fputs(
-"              When  used  with  -s  it  makes curl show an error message if it\n"
+"              When used with -s it makes curl show  an  error  message  if  it\n"
 "              fails.\n"
 "\n"
-"       --ssl  (FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for  the  connection.\n"
+"       --ssl  (FTP,  POP3,  IMAP, SMTP) Try to use SSL/TLS for the connection.\n"
+, stdout);
+ fputs(
 "              Reverts to a non-secure connection if the server doesn't support\n"
-"              SSL/TLS.  See also --ftp-ssl-control and --ssl-reqd for  differ-\n"
+"              SSL/TLS.   See also --ftp-ssl-control and --ssl-reqd for differ-\n"
 "              ent levels of encryption required. (Added in 7.20.0)\n"
 "\n"
-"              This  option  was formerly known as --ftp-ssl (Added in 7.11.0).\n"
-, stdout);
- fputs(
-"              That option name can still be used but  will  be  removed  in  a\n"
+"              This option was formerly known as --ftp-ssl (Added  in  7.11.0).\n"
+"              That  option  name  can  still  be used but will be removed in a\n"
 "              future version.\n"
 "\n"
 "       --ssl-reqd\n"
-"              (FTP,  POP3,  IMAP,  SMTP)  Require  SSL/TLS for the connection.\n"
+, stdout);
+ fputs(
+"              (FTP, POP3, IMAP, SMTP)  Require  SSL/TLS  for  the  connection.\n"
 "              Terminates the connection if the server doesn't support SSL/TLS.\n"
 "              (Added in 7.20.0)\n"
 "\n"
-"              This  option  was  formerly  known  as  --ftp-ssl-reqd (added in\n"
-"              7.15.5). That option name can still be used but will be  removed\n"
-, stdout);
- fputs(
+"              This option was  formerly  known  as  --ftp-ssl-reqd  (added  in\n"
+"              7.15.5).  That option name can still be used but will be removed\n"
 "              in a future version.\n"
 "\n"
 "       --ssl-allow-beast\n"
-"              (SSL)  This option tells curl to not work around a security flaw\n"
-"              in the SSL3 and TLS1.0 protocols known as BEAST.  If this option\n"
-"              isn't  used,  the  SSL layer may use work-arounds known to cause\n"
-"              interoperability problems with some older  SSL  implementations.\n"
-"              WARNING: this option loosens the SSL security, and by using this\n"
+"              (SSL) This option tells curl to not work around a security  flaw\n"
 , stdout);
  fputs(
+"              in the SSL3 and TLS1.0 protocols known as BEAST.  If this option\n"
+"              isn't used, the SSL layer may use work-arounds  known  to  cause\n"
+"              interoperability  problems  with some older SSL implementations.\n"
+"              WARNING: this option loosens the SSL security, and by using this\n"
 "              flag you ask for exactly that.  (Added in 7.25.0)\n"
 "\n"
 "       --socks4 <host[:port]>\n"
 "              Use the specified SOCKS4 proxy. If the port number is not speci-\n"
+, stdout);
+ fputs(
 "              fied, it is assumed at port 1080. (Added in 7.15.2)\n"
 "\n"
-"              This  option  overrides any previous use of -x, --proxy, as they\n"
+"              This option overrides any previous use of -x, --proxy,  as  they\n"
 "              are mutually exclusive.\n"
 "\n"
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
-, stdout);
- fputs(
 "              socks4 proxy with -x, --proxy using a socks4:// protocol prefix.\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --socks4a <host[:port]>\n"
+, stdout);
+ fputs(
 "              Use the specified SOCKS4a proxy. If the port number is not spec-\n"
 "              ified, it is assumed at port 1080. (Added in 7.18.0)\n"
 "\n"
-"              This option overrides any previous use of -x, --proxy,  as  they\n"
+"              This  option  overrides any previous use of -x, --proxy, as they\n"
 "              are mutually exclusive.\n"
 "\n"
-, stdout);
- fputs(
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
-"              socks4a proxy with -x, --proxy using a socks4a:// protocol  pre-\n"
+"              socks4a  proxy with -x, --proxy using a socks4a:// protocol pre-\n"
 "              fix.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --socks5-hostname <host[:port]>\n"
-"              Use  the  specified  SOCKS5 proxy (and let the proxy resolve the\n"
-"              host name). If the port number is not specified, it  is  assumed\n"
-, stdout);
- fputs(
+"              Use the specified SOCKS5 proxy (and let the  proxy  resolve  the\n"
+"              host  name).  If the port number is not specified, it is assumed\n"
 "              at port 1080. (Added in 7.18.0)\n"
 "\n"
-"              This  option  overrides any previous use of -x, --proxy, as they\n"
+"              This option overrides any previous use of -x, --proxy,  as  they\n"
 "              are mutually exclusive.\n"
 "\n"
+, stdout);
+ fputs(
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
 "              socks5 hostname proxy with -x, --proxy using a socks5h:// proto-\n"
 "              col prefix.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
-, stdout);
- fputs(
-"              (This  option  was  previously  wrongly  documented  and used as\n"
+"              (This option was  previously  wrongly  documented  and  used  as\n"
 "              --socks without the number appended.)\n"
 "\n"
 "       --socks5 <host[:port]>\n"
-"              Use the specified SOCKS5 proxy  -  but  resolve  the  host  name\n"
-"              locally.  If  the port number is not specified, it is assumed at\n"
+, stdout);
+ fputs(
+"              Use  the  specified  SOCKS5  proxy  -  but resolve the host name\n"
+"              locally. If the port number is not specified, it is  assumed  at\n"
 "              port 1080.\n"
 "\n"
-"              This option overrides any previous use of -x, --proxy,  as  they\n"
+"              This  option  overrides any previous use of -x, --proxy, as they\n"
 "              are mutually exclusive.\n"
 "\n"
-, stdout);
- fputs(
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
 "              socks5 proxy with -x, --proxy using a socks5:// protocol prefix.\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
-"              (This  option  was  previously  wrongly  documented  and used as\n"
+"              (This option was  previously  wrongly  documented  and  used  as\n"
 "              --socks without the number appended.)\n"
 "\n"
-"              This option (as well as --socks4) does not work with IPV6,  FTPS\n"
+"              This  option (as well as --socks4) does not work with IPV6, FTPS\n"
 "              or LDAP.\n"
 "\n"
-, stdout);
- fputs(
 "       --socks5-gssapi-service <servicename>\n"
 "              The default service name for a socks server is rcmd/server-fqdn.\n"
 "              This option allows you to change it.\n"
 "\n"
-"              Examples:  --socks5  proxy-name  --socks5-gssapi-service   sockd\n"
-"              would  use sockd/proxy-name --socks5 proxy-name --socks5-gssapi-\n"
-"              service sockd/real-name  would  use  sockd/real-name  for  cases\n"
-"              where  the proxy-name does not match the principal name.  (Added\n"
 , stdout);
  fputs(
+"              Examples:   --socks5  proxy-name  --socks5-gssapi-service  sockd\n"
+"              would use sockd/proxy-name --socks5 proxy-name  --socks5-gssapi-\n"
+"              service  sockd/real-name  would  use  sockd/real-name  for cases\n"
+"              where the proxy-name does not match the principal name.   (Added\n"
 "              in 7.19.4).\n"
 "\n"
 "       --socks5-gssapi-nec\n"
-"              As part of the gssapi negotiation a protection mode  is  negoti-\n"
-"              ated.  RFC  1961 says in section 4.3/4.4 it should be protected,\n"
-"              but the NEC  reference  implementation  does  not.   The  option\n"
-"              --socks5-gssapi-nec  allows the unprotected exchange of the pro-\n"
+"              As  part  of the gssapi negotiation a protection mode is negoti-\n"
+, stdout);
+ fputs(
+"              ated. RFC 1961 says in section 4.3/4.4 it should  be  protected,\n"
+"              but  the  NEC  reference  implementation  does  not.  The option\n"
+"              --socks5-gssapi-nec allows the unprotected exchange of the  pro-\n"
 "              tection mode negotiation. (Added in 7.19.4).\n"
 "\n"
 "       --stderr <file>\n"
-, stdout);
- fputs(
-"              Redirect all writes to stderr to the specified file instead.  If\n"
+"              Redirect  all writes to stderr to the specified file instead. If\n"
 "              the file name is a plain '-', it is instead written to stdout.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -t, --telnet-option <OPT=val>\n"
 "              Pass options to the telnet protocol. Supported options are:\n"
 "\n"
 "              TTYPE=<term> Sets the terminal type.\n"
 "\n"
 "              XDISPLOC=<X display> Sets the X display location.\n"
 "\n"
-, stdout);
- fputs(
 "              NEW_ENV=<var,val> Sets an environment variable.\n"
 "\n"
 "       -T, --upload-file <file>\n"
-"              This  transfers  the  specified local file to the remote URL. If\n"
+"              This transfers the specified local file to the  remote  URL.  If\n"
+, stdout);
+ fputs(
 "              there is no file part in the specified URL, Curl will append the\n"
 "              local file name. NOTE that you must use a trailing / on the last\n"
-"              directory to really prove to Curl that there is no file name  or\n"
+"              directory  to really prove to Curl that there is no file name or\n"
 "              curl will think that your last directory name is the remote file\n"
-, stdout);
- fputs(
 "              name to use. That will most likely cause the upload operation to\n"
 "              fail. If this is used on an HTTP(S) server, the PUT command will\n"
 "              be used.\n"
 "\n"
-"              Use the file name \"-\" (a single dash) to use stdin instead of  a\n"
-"              given  file.   Alternately,  the file name \".\" (a single period)\n"
-"              may be specified instead of \"-\" to  use  stdin  in  non-blocking\n"
-"              mode  to  allow  reading  server  output  while  stdin  is being\n"
 , stdout);
  fputs(
+"              Use  the file name \"-\" (a single dash) to use stdin instead of a\n"
+"              given file.  Alternately, the file name \".\"  (a  single  period)\n"
+"              may  be  specified  instead  of \"-\" to use stdin in non-blocking\n"
+"              mode to  allow  reading  server  output  while  stdin  is  being\n"
 "              uploaded.\n"
 "\n"
 "              You can specify one -T for each URL on the command line. Each -T\n"
+, stdout);
+ fputs(
 "              + URL pair specifies what to upload and to where. curl also sup-\n"
 "              ports \"globbing\" of the -T argument, meaning that you can upload\n"
-"              multiple  files  to  a single URL by using the same URL globbing\n"
+"              multiple files to a single URL by using the  same  URL  globbing\n"
 "              style supported in the URL, like this:\n"
 "\n"
 "              curl -T \"{file1,file2}\" http://www.uploadtothissite.com\n"
 "\n"
 "              or even\n"
 "\n"
-, stdout);
- fputs(
 "              curl -T \"img[1-1000].png\" ftp://ftp.picturemania.com/upload/\n"
 "\n"
 "       --tcp-nodelay\n"
-"              Turn on the TCP_NODELAY option. See the curl_easy_setopt(3)  man\n"
+, stdout);
+ fputs(
+"              Turn  on the TCP_NODELAY option. See the curl_easy_setopt(3) man\n"
 "              page for details about this option. (Added in 7.11.2)\n"
 "\n"
 "       --tftp-blksize <value>\n"
 "              (TFTP) Set TFTP BLKSIZE option (must be >512). This is the block\n"
 "              size that curl will try to use when transferring data to or from\n"
 "              a TFTP server. By default 512 bytes will be used.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+, stdout);
+ fputs(
 "              (Added in 7.20.0)\n"
 "\n"
 "       --tlsauthtype <authtype>\n"
-"              Set  TLS  authentication  type.  Currently,  the  only supported\n"
-"              option is \"SRP\",  for  TLS-SRP  (RFC  5054).  If  --tlsuser  and\n"
-"              --tlspassword  are specified but --tlsauthtype is not, then this\n"
+"              Set TLS  authentication  type.  Currently,  the  only  supported\n"
+"              option  is  \"SRP\",  for  TLS-SRP  (RFC  5054).  If --tlsuser and\n"
+"              --tlspassword are specified but --tlsauthtype is not, then  this\n"
 "              option defaults to \"SRP\".  (Added in 7.21.4)\n"
 "\n"
-"       --tlsuser <user>\n"
+"       --tlspassword <password>\n"
+"              Set  password  for use with the TLS authentication method speci-\n"
 , stdout);
  fputs(
-"              Set username for use with the TLS authentication  method  speci-\n"
-"              fied  with  --tlsauthtype.  Requires  that --tlspassword also be\n"
+"              fied with --tlsauthtype. Requires that --tlsuser  also  be  set.\n"
+"              (Added in 7.21.4)\n"
+"\n"
+"       --tlsuser <user>\n"
+"              Set  username  for use with the TLS authentication method speci-\n"
+"              fied with --tlsauthtype. Requires  that  --tlspassword  also  be\n"
 "              set.  (Added in 7.21.4)\n"
 "\n"
-"       --tlspassword <password>\n"
-"              Set password for use with the TLS authentication  method  speci-\n"
-"              fied  with  --tlsauthtype.  Requires that --tlsuser also be set.\n"
-"              (Added in 7.21.4)\n"
+"       --tlsv1.0\n"
+"              (SSL) Forces curl to use TLS version 1.0 when negotiating with a\n"
+"              remote TLS server.  (Added in 7.34.0)\n"
 "\n"
-"       --tr-encoding\n"
+"       --tlsv1.1\n"
 , stdout);
  fputs(
+"              (SSL) Forces curl to use TLS version 1.1 when negotiating with a\n"
+"              remote TLS server.  (Added in 7.34.0)\n"
+"\n"
+"       --tlsv1.2\n"
+"              (SSL) Forces curl to use TLS version 1.2 when negotiating with a\n"
+"              remote TLS server.  (Added in 7.34.0)\n"
+"\n"
+"       --tr-encoding\n"
 "              (HTTP) Request a compressed Transfer-Encoding response using one\n"
 "              of  the  algorithms curl supports, and uncompress the data while\n"
 "              receiving it.\n"
 "\n"
+, stdout);
+ fputs(
 "              (Added in 7.21.6)\n"
 "\n"
 "       --trace <file>\n"
 "              Enables a full trace dump of all  incoming  and  outgoing  data,\n"
 "              including descriptive information, to the given output file. Use\n"
 "              \"-\" as filename to have the output sent to stdout.\n"
 "\n"
-, stdout);
- fputs(
 "              This option overrides previous uses of -v, --verbose or --trace-\n"
 "              ascii.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --trace-ascii <file>\n"
+, stdout);
+ fputs(
 "              Enables  a  full  trace  dump of all incoming and outgoing data,\n"
 "              including descriptive information, to the given output file. Use\n"
 "              \"-\" as filename to have the output sent to stdout.\n"
 "\n"
-, stdout);
- fputs(
 "              This is very similar to --trace, but leaves out the hex part and\n"
 "              only shows the ASCII part of the dump. It makes  smaller  output\n"
 "              that might be easier to read for untrained humans.\n"
 "\n"
+, stdout);
+ fputs(
 "              This option overrides previous uses of -v, --verbose or --trace.\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --trace-time\n"
 "              Prepends  a  time  stamp to each trace or verbose line that curl\n"
-, stdout);
- fputs(
 "              displays.  (Added in 7.14.0)\n"
 "\n"
 "       -u, --user <user:password;options>\n"
 "              Specify the user name, password and optional  login  options  to\n"
+, stdout);
+ fputs(
 "              use   for  server  authentication.  Overrides  -n,  --netrc  and\n"
 "              --netrc-optional.\n"
 "\n"
 "              If you simply specify the user name, with or without  the  login\n"
 "              options, curl will prompt for a password.\n"
 "\n"
 "              If  you use an SSPI-enabled curl binary and perform NTLM authen-\n"
-, stdout);
- fputs(
 "              tication, you can force curl to select the user name  and  pass-\n"
 "              word  from  your environment by simply specifying a single colon\n"
+, stdout);
+ fputs(
 "              with this option: \"-u :\" or by specfying the  login  options  on\n"
 "              their own, for example \"-u ;auth=NTLM\".\n"
 "\n"
 "              You  can use the optional login options part to specify protocol\n"
 "              specific options that may  be  used  during  authentication.  At\n"
-, stdout);
- fputs(
 "              present  only  IMAP, POP3 and SMTP support login options as part\n"
 "              of the user login information. For more  information  about  the\n"
+, stdout);
+ fputs(
 "              login  options  please  see  RFC  2384,  RFC 5092 and IETF draft\n"
 "              draft-earhart-url-smtp-00.txt (Added in 7.31.0).\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -U, --proxy-user <user:password>\n"
 "              Specify the user name and password to use for proxy  authentica-\n"
-, stdout);
- fputs(
 "              tion.\n"
 "\n"
 "              If  you  use an SSPI-enabled curl binary and do NTLM authentica-\n"
+, stdout);
+ fputs(
 "              tion, you can force curl to pick up the user name  and  password\n"
 "              from  your  environment by simply specifying a single colon with\n"
 "              this option: \"-U :\".\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --url <URL>\n"
 "              Specify a URL to fetch. This option is  mostly  handy  when  you\n"
-, stdout);
- fputs(
 "              want to specify URL(s) in a config file.\n"
 "\n"
+, stdout);
+ fputs(
 "              This  option  may  be used any number of times. To control where\n"
 "              this URL is written, use the -o, --output or the  -O,  --remote-\n"
 "              name options.\n"
 "       -v, --verbose\n"
 "              Makes  the  fetching  more  verbose/talkative. Mostly useful for\n"
 "              debugging. A line starting with '>' means \"header data\" sent  by\n"
@@ -2468,176 +2517,187 @@
 "              if you want to make a proper HEAD request, using  -X  HEAD  will\n"
 "              not suffice. You need to use the -I, --head option.\n"
 "\n"
 "              (FTP) Specifies a custom FTP command to use instead of LIST when\n"
 "              doing file lists with FTP.\n"
 "\n"
+"              (POP3) Specifies a custom POP3 command to use instead of LIST or\n"
+"              RETR. (Added in 7.26.0)\n"
+"\n"
+, stdout);
+ fputs(
+"              (IMAP)  Specifies  a  custom IMAP command to use insead of LIST.\n"
+"              (Added in 7.30.0)\n"
+"\n"
+"              (SMTP) Specifies a custom SMTP command to use instead of HELP or\n"
+"              VRFY. (Added in 7.34.0)\n"
+"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --xattr\n"
+"              When  saving  output  to a file, this option tells curl to store\n"
+"              certain file metadata in extended  file  attributes.  Currently,\n"
 , stdout);
  fputs(
-"              When saving output to a file, this option tells  curl  to  store\n"
-"              certain  file  metadata  in extended file attributes. Currently,\n"
 "              the URL is stored in the xdg.origin.url attribute and, for HTTP,\n"
-"              the  content  type  is stored in the mime_type attribute. If the\n"
-"              file system does not support extended attributes, a  warning  is\n"
+"              the content type is stored in the mime_type  attribute.  If  the\n"
+"              file  system  does not support extended attributes, a warning is\n"
 "              issued.\n"
 "\n"
 "       -y, --speed-time <time>\n"
-, stdout);
- fputs(
 "              If a download is slower than speed-limit bytes per second during\n"
 "              a speed-time period, the download gets aborted. If speed-time is\n"
+, stdout);
+ fputs(
 "              used, the default speed-limit will be 1 unless set with -Y.\n"
 "\n"
-"              This  option  controls  transfers  and thus will not affect slow\n"
-"              connects etc. If this is a concern for you, try  the  --connect-\n"
+"              This option controls transfers and thus  will  not  affect  slow\n"
+"              connects  etc.  If this is a concern for you, try the --connect-\n"
 "              timeout option.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -Y, --speed-limit <speed>\n"
 "              If a download is slower than this given speed (in bytes per sec-\n"
-"              ond) for speed-time seconds it gets aborted. speed-time  is  set\n"
+, stdout);
+ fputs(
+"              ond)  for  speed-time seconds it gets aborted. speed-time is set\n"
 "              with -y and is 30 if not set.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -z, --time-cond <date expression>|<file>\n"
+"              (HTTP/FTP) Request a file that has been modified later than  the\n"
+"              given  time  and date, or one that has been modified before that\n"
+"              time. The <date expression> can be all sorts of date strings  or\n"
 , stdout);
  fputs(
-"              (HTTP/FTP)  Request a file that has been modified later than the\n"
-"              given time and date, or one that has been modified  before  that\n"
-"              time.  The <date expression> can be all sorts of date strings or\n"
 "              if it doesn't match any internal ones, it is taken as a filename\n"
-"              and  tries  to  get  the  modification  date (mtime) from <file>\n"
-"              instead. See the curl_getdate(3) man pages for  date  expression\n"
+"              and tries to get  the  modification  date  (mtime)  from  <file>\n"
+"              instead.  See  the curl_getdate(3) man pages for date expression\n"
 "              details.\n"
 "\n"
-, stdout);
- fputs(
 "              Start the date expression with a dash (-) to make it request for\n"
-"              a document that is older than the given date/time, default is  a\n"
+"              a  document that is older than the given date/time, default is a\n"
 "              document that is newer than the specified date/time.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -h, --help\n"
 "              Usage help.\n"
 "\n"
 "       -M, --manual\n"
 "              Manual. Display the huge help text.\n"
 "\n"
 "       -V, --version\n"
-, stdout);
- fputs(
 "              Displays information about curl and the libcurl version it uses.\n"
-"              The  first  line  includes the full version of curl, libcurl and\n"
+"              The first line includes the full version of  curl,  libcurl  and\n"
 "              other 3rd party libraries linked with the executable.\n"
 "\n"
-"              The second line (starts with \"Protocols:\") shows  all  protocols\n"
+, stdout);
+ fputs(
+"              The  second  line (starts with \"Protocols:\") shows all protocols\n"
 "              that libcurl reports to support.\n"
 "\n"
 "              The third line (starts with \"Features:\") shows specific features\n"
-, stdout);
- fputs(
 "              libcurl reports to offer. Available features include:\n"
 "\n"
 "              IPv6   You can use IPv6 with this.\n"
 "\n"
 "              krb4   Krb4 for FTP is supported.\n"
 "\n"
 "              SSL    HTTPS and FTPS are supported.\n"
 "\n"
-"              libz   Automatic decompression of compressed files over HTTP  is\n"
+, stdout);
+ fputs(
+"              libz   Automatic  decompression of compressed files over HTTP is\n"
 "                     supported.\n"
 "\n"
 "              NTLM   NTLM authentication is supported.\n"
 "\n"
 "              GSS-Negotiate\n"
 "                     Negotiate authentication and krb5 for FTP is supported.\n"
 "\n"
-, stdout);
- fputs(
-"              Debug  This  curl  uses a libcurl built with Debug. This enables\n"
-"                     more error-tracking and memory debugging etc.  For  curl-\n"
+"              Debug  This curl uses a libcurl built with Debug.  This  enables\n"
+"                     more  error-tracking  and memory debugging etc. For curl-\n"
 "                     developers only!\n"
 "\n"
 "              AsynchDNS\n"
+, stdout);
+ fputs(
 "                     This curl uses asynchronous name resolves.\n"
 "\n"
 "              SPNEGO SPNEGO Negotiate authentication is supported.\n"
 "\n"
 "              Largefile\n"
 "                     This curl supports transfers of large files, files larger\n"
 "                     than 2GB.\n"
 "\n"
-, stdout);
- fputs(
 "              IDN    This curl supports IDN - international domain names.\n"
 "\n"
-"              SSPI   SSPI is supported. If you use NTLM and set a  blank  user\n"
-"                     name,  curl  will authenticate with your current user and\n"
+"              SSPI   SSPI  is  supported. If you use NTLM and set a blank user\n"
+, stdout);
+ fputs(
+"                     name, curl will authenticate with your current  user  and\n"
 "                     password.\n"
 "\n"
 "              TLS-SRP\n"
-"                     SRP (Secure Remote Password) authentication is  supported\n"
+"                     SRP  (Secure Remote Password) authentication is supported\n"
 "                     for TLS.\n"
 "              Metalink\n"
-"                     This  curl  supports  Metalink (both version 3 and 4 (RFC\n"
+"                     This curl supports Metalink (both version 3  and  4  (RFC\n"
+"                     5854)),  which  describes  mirrors and hashes.  curl will\n"
 , stdout);
  fputs(
-"                     5854)), which describes mirrors and  hashes.   curl  will\n"
 "                     use mirrors for failover if there are errors (such as the\n"
 "                     file or server not being available).\n"
 "\n"
 "FILES\n"
 "       ~/.curlrc\n"
 "              Default config file, see -K, --config for details.\n"
 "\n"
 "ENVIRONMENT\n"
 "       The environment variables can be specified in lower case or upper case.\n"
 "       The lower case version has precedence. http_proxy is an exception as it\n"
-, stdout);
- fputs(
 "       is only available in lower case.\n"
 "\n"
-"       Using an environment variable to set the proxy has the same  effect  as\n"
+, stdout);
+ fputs(
+"       Using  an  environment variable to set the proxy has the same effect as\n"
 "       using the --proxy option.\n"
 "\n"
 "       http_proxy [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for HTTP.\n"
 "       HTTPS_PROXY [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for HTTPS.\n"
 "\n"
 "       [url-protocol]_PROXY [protocol://]<host>[:port]\n"
-"              Sets  the proxy server to use for [url-protocol], where the pro-\n"
+"              Sets the proxy server to use for [url-protocol], where the  pro-\n"
 , stdout);
  fputs(
-"              tocol is a protocol that curl supports and  as  specified  in  a\n"
+"              tocol  is  a  protocol  that curl supports and as specified in a\n"
 "              URL. FTP, FTPS, POP3, IMAP, SMTP, LDAP etc.\n"
 "\n"
 "       ALL_PROXY [protocol://]<host>[:port]\n"
-"              Sets  the  proxy  server to use if no protocol-specific proxy is\n"
+"              Sets the proxy server to use if no  protocol-specific  proxy  is\n"
 "              set.\n"
 "\n"
 "       NO_PROXY <comma-separated list of hosts>\n"
-"              list of host names that shouldn't go through any proxy.  If  set\n"
+"              list  of  host names that shouldn't go through any proxy. If set\n"
 "              to a asterisk '*' only, it matches all hosts.\n"
 "\n"
 "PROXY PROTOCOL PREFIXES\n"
 , stdout);
  fputs(
-"       Since  curl  version  7.21.7,  the proxy string may be specified with a\n"
+"       Since curl version 7.21.7, the proxy string may  be  specified  with  a\n"
 "       protocol:// prefix to specify alternative proxy protocols.\n"
 "\n"
-"       If no protocol is specified in  the  proxy  string  or  if  the  string\n"
-"       doesn't  match  a  supported  one, the proxy will be treated as an HTTP\n"
+"       If  no  protocol  is  specified  in  the  proxy string or if the string\n"
+"       doesn't match a supported one, the proxy will be  treated  as  an  HTTP\n"
 "       proxy.\n"
 "\n"
 "       The supported proxy protocol prefixes are as follows:\n"
 "\n"
 "       socks4://\n"
 "              Makes it the equivalent of --socks4\n"
@@ -2651,109 +2711,109 @@
 "              Makes it the equivalent of --socks5\n"
 "\n"
 "       socks5h://\n"
 "              Makes it the equivalent of --socks5-hostname\n"
 "\n"
 "EXIT CODES\n"
-"       There are a bunch of different  error  codes  and  their  corresponding\n"
-"       error  messages  that  may appear during bad conditions. At the time of\n"
+"       There  are  a  bunch  of  different error codes and their corresponding\n"
+"       error messages that may appear during bad conditions. At  the  time  of\n"
 "       this writing, the exit codes are:\n"
 "\n"
 "       1      Unsupported protocol. This build of curl has no support for this\n"
 , stdout);
  fputs(
 "              protocol.\n"
 "\n"
 "       2      Failed to initialize.\n"
 "\n"
 "       3      URL malformed. The syntax was not correct.\n"
 "\n"
-"       4      A  feature  or  option  that  was  needed to perform the desired\n"
-"              request was not enabled or was  explicitly  disabled  at  build-\n"
-"              time.  To  make  curl able to do this, you probably need another\n"
+"       4      A feature or option that  was  needed  to  perform  the  desired\n"
+"              request  was  not  enabled  or was explicitly disabled at build-\n"
+"              time. To make curl able to do this, you  probably  need  another\n"
 "              build of libcurl!\n"
 "\n"
-"       5      Couldn't resolve proxy.  The  given  proxy  host  could  not  be\n"
+"       5      Couldn't  resolve  proxy.  The  given  proxy  host  could not be\n"
 "              resolved.\n"
 "\n"
 , stdout);
  fputs(
 "       6      Couldn't resolve host. The given remote host was not resolved.\n"
 "\n"
 "       7      Failed to connect to host.\n"
 "\n"
-"       8      FTP  weird  server  reply.  The  server  sent data curl couldn't\n"
+"       8      FTP weird server reply.  The  server  sent  data  curl  couldn't\n"
 "              parse.\n"
 "\n"
-"       9      FTP access denied. The server denied login or denied  access  to\n"
-"              the  particular  resource or directory you wanted to reach. Most\n"
-"              often you tried to change to a directory that doesn't  exist  on\n"
+"       9      FTP  access  denied. The server denied login or denied access to\n"
+"              the particular resource or directory you wanted to  reach.  Most\n"
+"              often  you  tried to change to a directory that doesn't exist on\n"
 "              the server.\n"
 "\n"
 , stdout);
  fputs(
-"       11     FTP  weird PASS reply. Curl couldn't parse the reply sent to the\n"
+"       11     FTP weird PASS reply. Curl couldn't parse the reply sent to  the\n"
 "              PASS request.\n"
 "\n"
-"       13     FTP weird PASV reply, Curl couldn't parse the reply sent to  the\n"
+"       13     FTP  weird PASV reply, Curl couldn't parse the reply sent to the\n"
 "              PASV request.\n"
 "\n"
-"       14     FTP  weird  227  format.  Curl  couldn't  parse the 227-line the\n"
+"       14     FTP weird 227 format.  Curl  couldn't  parse  the  227-line  the\n"
 "              server sent.\n"
 "\n"
-"       15     FTP can't get host. Couldn't resolve the host IP we got  in  the\n"
+"       15     FTP  can't  get host. Couldn't resolve the host IP we got in the\n"
 "              227-line.\n"
 "\n"
 , stdout);
  fputs(
-"       17     FTP  couldn't  set  binary.  Couldn't  change transfer method to\n"
+"       17     FTP couldn't set binary.  Couldn't  change  transfer  method  to\n"
 "              binary.\n"
 "\n"
 "       18     Partial file. Only a part of the file was transferred.\n"
 "\n"
-"       19     FTP couldn't download/access the given file, the RETR (or  simi-\n"
+"       19     FTP  couldn't download/access the given file, the RETR (or simi-\n"
 "              lar) command failed.\n"
 "\n"
 "       21     FTP quote error. A quote command returned error from the server.\n"
-"       22     HTTP  page  not  retrieved.  The  requested url was not found or\n"
+"       22     HTTP page not retrieved. The requested  url  was  not  found  or\n"
 , stdout);
  fputs(
-"              returned another error with the HTTP error  code  being  400  or\n"
+"              returned  another  error  with  the HTTP error code being 400 or\n"
 "              above. This return code only appears if -f, --fail is used.\n"
 "\n"
-"       23     Write  error.  Curl couldn't write data to a local filesystem or\n"
+"       23     Write error. Curl couldn't write data to a local  filesystem  or\n"
 "              similar.\n"
 "\n"
-"       25     FTP couldn't STOR file. The server denied  the  STOR  operation,\n"
+"       25     FTP  couldn't  STOR  file. The server denied the STOR operation,\n"
 "              used for FTP uploading.\n"
 "\n"
 "       26     Read error. Various reading problems.\n"
 "\n"
 "       27     Out of memory. A memory allocation request failed.\n"
 "\n"
 , stdout);
  fputs(
-"       28     Operation  timeout.  The  specified  time-out period was reached\n"
+"       28     Operation timeout. The specified  time-out  period  was  reached\n"
 "              according to the conditions.\n"
 "\n"
-"       30     FTP PORT failed. The PORT command failed. Not  all  FTP  servers\n"
-"              support  the  PORT  command,  try  doing  a  transfer using PASV\n"
+"       30     FTP  PORT  failed.  The PORT command failed. Not all FTP servers\n"
+"              support the PORT  command,  try  doing  a  transfer  using  PASV\n"
 "              instead!\n"
 "\n"
-"       31     FTP couldn't use REST. The REST command failed. This command  is\n"
+"       31     FTP  couldn't use REST. The REST command failed. This command is\n"
 "              used for resumed FTP transfers.\n"
 "\n"
 "       33     HTTP range error. The range \"command\" didn't work.\n"
 "\n"
 , stdout);
  fputs(
 "       34     HTTP post error. Internal post-request generation error.\n"
 "\n"
 "       35     SSL connect error. The SSL handshaking failed.\n"
 "\n"
-"       36     FTP  bad  download  resume. Couldn't continue an earlier aborted\n"
+"       36     FTP bad download resume. Couldn't continue  an  earlier  aborted\n"
 "              download.\n"
 "\n"
 "       37     FILE couldn't read file. Failed to open the file. Permissions?\n"
 "\n"
 "       38     LDAP cannot bind. LDAP bind operation failed.\n"
 "\n"
@@ -2765,29 +2825,29 @@
  fputs(
 "       42     Aborted by callback. An application told curl to abort the oper-\n"
 "              ation.\n"
 "\n"
 "       43     Internal error. A function was called with a bad parameter.\n"
 "\n"
-"       45     Interface  error.  A  specified  outgoing interface could not be\n"
+"       45     Interface error. A specified outgoing  interface  could  not  be\n"
 "              used.\n"
 "\n"
 "       47     Too many redirects. When following redirects, curl hit the maxi-\n"
 "              mum amount.\n"
 "\n"
-"       48     Unknown  option  specified  to  libcurl. This indicates that you\n"
+"       48     Unknown option specified to libcurl.  This  indicates  that  you\n"
 , stdout);
  fputs(
-"              passed a weird option to curl that was passed on to libcurl  and\n"
+"              passed  a weird option to curl that was passed on to libcurl and\n"
 "              rejected. Read up in the manual!\n"
 "\n"
 "       49     Malformed telnet option.\n"
 "\n"
 "       51     The peer's SSL certificate or SSH MD5 fingerprint was not OK.\n"
 "\n"
-"       52     The  server  didn't  reply anything, which here is considered an\n"
+"       52     The server didn't reply anything, which here  is  considered  an\n"
 "              error.\n"
 "\n"
 "       53     SSL crypto engine not found.\n"
 "\n"
 "       54     Cannot set SSL crypto engine as default.\n"
 "\n"
@@ -2798,13 +2858,13 @@
 "       56     Failure in receiving network data.\n"
 "\n"
 "       58     Problem with the local certificate.\n"
 "\n"
 "       59     Couldn't use specified SSL cipher.\n"
 "\n"
-"       60     Peer certificate cannot be authenticated with known CA  certifi-\n"
+"       60     Peer  certificate cannot be authenticated with known CA certifi-\n"
 "              cates.\n"
 "\n"
 "       61     Unrecognized transfer encoding.\n"
 "\n"
 "       62     Invalid LDAP URL.\n"
 "\n"
@@ -2815,13 +2875,13 @@
 "       65     Sending the data requires a rewind that failed.\n"
 "\n"
 , stdout);
  fputs(
 "       66     Failed to initialise SSL Engine.\n"
 "\n"
-"       67     The  user  name,  password, or similar was not accepted and curl\n"
+"       67     The user name, password, or similar was not  accepted  and  curl\n"
 "              failed to log in.\n"
 "\n"
 "       68     File not found on TFTP server.\n"
 "\n"
 "       69     Permission problem on TFTP server.\n"
 "\n"
@@ -2846,13 +2906,13 @@
 "       78     The resource referenced in the URL does not exist.\n"
 "\n"
 "       79     An unspecified error occurred during the SSH session.\n"
 "\n"
 "       80     Failed to shut down the SSL connection.\n"
 "\n"
-"       82     Could not load CRL file,  missing  or  wrong  format  (added  in\n"
+"       82     Could  not  load  CRL  file,  missing  or wrong format (added in\n"
 "              7.19.0).\n"
 "\n"
 , stdout);
  fputs(
 "       83     Issuer check failed (added in 7.19.0).\n"
 "\n"
@@ -2863,19 +2923,21 @@
 "       86     RTSP: mismatch of Session Identifiers\n"
 "\n"
 "       87     unable to parse FTP file list\n"
 "\n"
 "       88     FTP chunk callback reported error\n"
 "\n"
+"       89     No connection available, the session will be queued\n"
+"\n"
 "       XX     More error codes will appear here in future releases. The exist-\n"
 "              ing ones are meant to never change.\n"
 "\n"
-"AUTHORS / CONTRIBUTORS\n"
 , stdout);
  fputs(
-"       Daniel Stenberg is the main author, but the whole list of  contributors\n"
+"AUTHORS / CONTRIBUTORS\n"
+"       Daniel  Stenberg is the main author, but the whole list of contributors\n"
 "       is found in the separate THANKS file.\n"
 "\n"
 "WWW\n"
 "       http://curl.haxx.se\n"
 "\n"
 "FTP\n"
@@ -4076,22 +4138,22 @@
 , stdout) ;
 }
 #endif /* USE_MANUAL */
 #else
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Sat Oct 12 23:29:08 2013
+ * Generation time: Mon Dec 16 23:11:48 2013
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 #include <zlib.h>
 #include "memdebug.h" /* keep this as LAST include */
 static const unsigned char hugehelpgz[] = {
   /* This mumbo-jumbo is the huge help text compressed with gzip.
-     Thanks to this operation, the size of this data shrunk from 153257
-     to 46560 bytes. You can disable the use of compressed help
+     Thanks to this operation, the size of this data shrunk from 155791
+     to 47231 bytes. You can disable the use of compressed help
      texts by NOT passing -c to the mkhelp.pl tool. */
   0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xed, 0xfd,
   0x6b, 0x7b, 0x1b, 0x47, 0x92, 0x26, 0x0c, 0x7f, 0xe7, 0xaf, 0xa8, 0x46,
   0xbf, 0x3d, 0x24, 0xa7, 0x01, 0xf0, 0xa0, 0x83, 0x2d, 0xb6, 0xe4, 0x31,
   0x4d, 0x51, 0x36, 0xd7, 0x94, 0xc8, 0x25, 0x28, 0xdb, 0xbd, 0xb6, 0x2f,
   0x5d, 0x05, 0xa0, 0x48, 0x56, 0x13, 0x40, 0xa1, 0xab, 0x0a, 0xa2, 0xd8,
@@ -5084,2896 +5146,2951 @@
   0x41, 0x92, 0x4b, 0xcc, 0xe0, 0x98, 0x91, 0x5b, 0x87, 0x80, 0xed, 0x2b,
   0x6a, 0x8b, 0x05, 0x60, 0x24, 0x19, 0x20, 0x69, 0x79, 0x6f, 0x9a, 0x43,
   0xa9, 0x10, 0xad, 0x3d, 0x3e, 0x50, 0x0e, 0x6c, 0xc8, 0xb9, 0x57, 0x95,
   0xcf, 0xbe, 0xbd, 0x38, 0x71, 0x3a, 0x5d, 0xb0, 0x13, 0x5f, 0x63, 0x27,
   0xa2, 0x65, 0x73, 0xe8, 0x96, 0xcd, 0x0a, 0xcf, 0x1e, 0xe4, 0x8b, 0x55,
   0x6a, 0x65, 0x3e, 0x41, 0xf2, 0x94, 0x56, 0x36, 0x9d, 0xc6, 0x00, 0x9d,
-  0xf2, 0xa8, 0x94, 0x0f, 0x0b, 0xd1, 0x22, 0x9d, 0x1f, 0xd6, 0xa3, 0xcf,
-  0x5b, 0xdc, 0xc3, 0xd7, 0xc7, 0x0e, 0xe9, 0x3a, 0xa2, 0x7c, 0xe7, 0x01,
-  0x33, 0xe0, 0x2b, 0x87, 0x89, 0x2d, 0xf0, 0x61, 0x4c, 0xf2, 0x77, 0xa8,
-  0x1f, 0xea, 0x21, 0x1d, 0x45, 0xf9, 0xe9, 0xb8, 0x04, 0x15, 0x19, 0x52,
-  0x18, 0x96, 0x01, 0x44, 0xf9, 0x75, 0x3b, 0xb5, 0x10, 0xf6, 0xcd, 0x7f,
-  0xdb, 0xf4, 0x78, 0x7c, 0x9d, 0xc9, 0x3e, 0x21, 0x84, 0x7e, 0x0b, 0x1c,
-  0x67, 0x70, 0xd2, 0xf7, 0x83, 0xf5, 0x3d, 0xda, 0x54, 0xc6, 0x1d, 0x88,
-  0xd6, 0xeb, 0xc6, 0xf1, 0xcd, 0xf1, 0xe1, 0x4b, 0x9b, 0xef, 0x3f, 0x05,
-  0xd5, 0xc6, 0xdb, 0x7f, 0xc6, 0x99, 0x00, 0x77, 0xaf, 0x4c, 0x85, 0xc4,
-  0x2e, 0xd9, 0x95, 0x01, 0xca, 0x20, 0x21, 0x9b, 0x4b, 0x3f, 0x30, 0xa5,
-  0xc6, 0x1a, 0xa3, 0x1a, 0x9b, 0xd6, 0xea, 0x8c, 0x81, 0x3d, 0xce, 0x6c,
-  0x7b, 0x7c, 0x66, 0x85, 0xb3, 0x05, 0x64, 0x1b, 0xe6, 0x67, 0x3e, 0x97,
-  0x7f, 0xd7, 0xdc, 0x05, 0xc7, 0xc0, 0x10, 0xd5, 0x47, 0x43, 0x00, 0xdc,
-  0xeb, 0xa0, 0xa0, 0xef, 0x5d, 0x36, 0x66, 0x59, 0xe8, 0x9a, 0xc5, 0x67,
-  0xb8, 0x3b, 0x89, 0xe7, 0xb5, 0x47, 0xae, 0x2c, 0x03, 0x98, 0x66, 0x52,
-  0xa7, 0x89, 0xa3, 0xe1, 0x83, 0xd6, 0x1b, 0xd1, 0xfb, 0x9a, 0x1e, 0x69,
-  0xb5, 0x6c, 0xa7, 0x11, 0x62, 0x27, 0x71, 0x88, 0xaa, 0x26, 0x39, 0xc4,
-  0x46, 0xc6, 0x2f, 0xdd, 0xa4, 0x01, 0xe2, 0xf8, 0x42, 0x61, 0xc7, 0xb1,
-  0x2f, 0x2e, 0xf0, 0xdf, 0x2c, 0x15, 0x51, 0xa6, 0xad, 0x8f, 0xd2, 0x50,
-  0x92, 0x5f, 0xf1, 0x2e, 0x88, 0xbf, 0x9c, 0x81, 0x74, 0xca, 0x85, 0x4b,
-  0x1d, 0xd5, 0x2e, 0x43, 0x0f, 0xc5, 0xc3, 0x07, 0xcc, 0x99, 0x47, 0x90,
-  0xc6, 0x1b, 0x8a, 0xda, 0x3c, 0x47, 0x8b, 0x56, 0x43, 0x5a, 0x28, 0xdd,
-  0x0d, 0x71, 0x02, 0x11, 0x87, 0xf6, 0x13, 0xf3, 0x59, 0x5d, 0x5d, 0x59,
-  0xac, 0x9a, 0xa8, 0xa6, 0x18, 0xa8, 0x03, 0x4c, 0x99, 0x16, 0x43, 0x2c,
-  0xbe, 0xae, 0x99, 0x49, 0x8a, 0xe9, 0x64, 0x9d, 0xb5, 0x46, 0xa7, 0xe3,
-  0x90, 0x86, 0x1d, 0x77, 0x46, 0x01, 0x3d, 0x41, 0x6c, 0xc9, 0x4a, 0x56,
-  0x35, 0x11, 0xb9, 0x03, 0xb7, 0xf5, 0x5d, 0xcc, 0x84, 0xb5, 0xee, 0xaa,
-  0x80, 0xbc, 0x70, 0x2d, 0x23, 0x16, 0x49, 0x1c, 0x68, 0x06, 0x4f, 0x5b,
-  0x17, 0x8c, 0xd8, 0xfa, 0x75, 0xfe, 0xde, 0x6a, 0x55, 0x63, 0x64, 0x1d,
-  0x09, 0x14, 0x36, 0x08, 0xf3, 0xdc, 0xab, 0x45, 0x5f, 0xd0, 0x8e, 0x92,
-  0x0a, 0xa5, 0x1b, 0xdd, 0x76, 0x4e, 0x8a, 0x19, 0x90, 0x5d, 0x52, 0x28,
-  0x75, 0x07, 0x4c, 0xd9, 0x6d, 0x97, 0xc8, 0x37, 0x45, 0x55, 0x1f, 0xf4,
-  0x7c, 0x6e, 0x8f, 0xfa, 0x70, 0x24, 0x77, 0x27, 0x24, 0x21, 0x45, 0xcd,
-  0x1d, 0xc8, 0xad, 0x2d, 0x47, 0xac, 0xae, 0x3a, 0xcb, 0x8f, 0x3a, 0x57,
-  0xa3, 0x66, 0x62, 0xba, 0xbc, 0x76, 0x06, 0x1c, 0x9d, 0xe7, 0x3a, 0x2a,
-  0x2b, 0x04, 0x49, 0x83, 0xa2, 0x71, 0xfc, 0x30, 0x38, 0x5a, 0x55, 0x71,
-  0xfc, 0xf0, 0x7c, 0xf0, 0x0d, 0x9a, 0xfc, 0x4b, 0xcf, 0x69, 0xd8, 0xf2,
-  0xa8, 0xff, 0xea, 0xa0, 0xb7, 0x26, 0xde, 0x3b, 0xc4, 0x1c, 0xac, 0x56,
-  0xa5, 0x25, 0x82, 0xc2, 0x62, 0xae, 0x03, 0x45, 0xbd, 0x9a, 0xe9, 0x74,
-  0x47, 0xd7, 0xdb, 0x9c, 0x7b, 0x5d, 0x19, 0x49, 0x9a, 0xad, 0xb0, 0x44,
-  0x54, 0xde, 0x74, 0x50, 0x5c, 0x0d, 0x50, 0x3d, 0x90, 0xcb, 0xba, 0xb3,
-  0x2b, 0x25, 0x38, 0x8e, 0x00, 0x56, 0x46, 0x7e, 0xcd, 0x74, 0xda, 0x75,
-  0x2d, 0x6b, 0x60, 0x78, 0xe9, 0x34, 0x54, 0x1d, 0x8c, 0x6e, 0xe9, 0x01,
-  0x6b, 0x35, 0xf6, 0xba, 0xc3, 0xed, 0xe5, 0x9a, 0x7b, 0x0f, 0xc2, 0x84,
-  0xf7, 0xe5, 0xe6, 0xc6, 0xa4, 0xc1, 0x7e, 0xe7, 0x62, 0x2c, 0x82, 0xc2,
-  0x4f, 0x5a, 0xfe, 0x95, 0x54, 0x92, 0xed, 0xf4, 0xed, 0xfa, 0xcc, 0x8f,
-  0x43, 0xad, 0xdd, 0x5a, 0x0e, 0xa8, 0x23, 0x85, 0x02, 0x6d, 0x66, 0xcf,
-  0xaf, 0xc3, 0x3b, 0x5b, 0xe7, 0xe4, 0x0d, 0x32, 0x0e, 0x70, 0x3b, 0x68,
-  0x34, 0xbc, 0x5f, 0xf4, 0x1d, 0x91, 0xd2, 0xbb, 0xbc, 0x23, 0xfc, 0x96,
-  0x71, 0xbf, 0x40, 0x5e, 0xe7, 0x72, 0x53, 0xcb, 0xd5, 0x78, 0x3e, 0x7d,
-  0x92, 0x3c, 0xa7, 0x1f, 0x71, 0xf8, 0xf2, 0x91, 0x39, 0xd3, 0xa4, 0xc2,
-  0x36, 0xd3, 0x9d, 0x66, 0xdd, 0x89, 0x1c, 0xc6, 0xbf, 0x3e, 0xda, 0xa7,
-  0xa6, 0x3f, 0xa4, 0x56, 0xcc, 0x67, 0x9a, 0x5f, 0xe7, 0x75, 0xd5, 0xa5,
-  0xc4, 0xea, 0xab, 0xde, 0x91, 0xc1, 0x0b, 0xb5, 0xb7, 0xff, 0x79, 0x32,
-  0xce, 0xeb, 0xe4, 0xf5, 0xcb, 0x27, 0x52, 0x4c, 0xbe, 0x5a, 0xcd, 0x9d,
-  0x43, 0x48, 0x6b, 0xaf, 0xa0, 0x2c, 0xd6, 0x66, 0xfb, 0x88, 0xd0, 0xc0,
-  0x67, 0xf9, 0x84, 0x13, 0xea, 0xfa, 0x0d, 0x13, 0xda, 0x95, 0x99, 0xfa,
-  0x82, 0x3a, 0x47, 0x8e, 0xf0, 0xb8, 0x25, 0x35, 0x35, 0x76, 0x28, 0xb1,
-  0xb4, 0x06, 0xd4, 0x7d, 0x65, 0x45, 0xa8, 0x1b, 0x8a, 0xd3, 0x67, 0x4d,
-  0x83, 0x80, 0x44, 0xcb, 0x1a, 0xf6, 0xe4, 0x60, 0x96, 0x2d, 0xae, 0xa3,
-  0xf8, 0x51, 0xbd, 0xda, 0x4e, 0xf0, 0xa8, 0xe8, 0xf8, 0xfa, 0xf8, 0x29,
-  0x1e, 0x77, 0xd9, 0xfd, 0x81, 0xef, 0x87, 0xc9, 0x39, 0x9f, 0xac, 0x66,
-  0x5c, 0x14, 0x32, 0xbe, 0xe3, 0x39, 0x16, 0x12, 0x04, 0x68, 0x78, 0x1a,
-  0xe5, 0x4a, 0x6a, 0x07, 0x1e, 0x2e, 0x39, 0x62, 0x2c, 0xd9, 0x1b, 0x7e,
-  0xe8, 0x87, 0x85, 0xaf, 0xb5, 0x4c, 0x15, 0x97, 0xb7, 0x2e, 0x07, 0x11,
-  0xb9, 0x4f, 0xea, 0xf6, 0x80, 0xb8, 0x69, 0x09, 0xd5, 0x9b, 0xb1, 0xd3,
-  0xa3, 0x94, 0x6b, 0x60, 0x9f, 0xf8, 0xe9, 0x75, 0x8a, 0x4a, 0x87, 0x01,
-  0xf5, 0xe4, 0x7d, 0x00, 0x21, 0x01, 0x9b, 0x76, 0xcd, 0xc4, 0xe5, 0x4b,
-  0x87, 0xf1, 0x60, 0x92, 0x80, 0xca, 0xef, 0x1a, 0x63, 0x6a, 0x20, 0xa1,
-  0xc1, 0x13, 0x71, 0x75, 0x6e, 0x6e, 0x07, 0xd8, 0x15, 0x38, 0x85, 0x12,
-  0x75, 0xa3, 0x8b, 0x30, 0xe0, 0x1b, 0xb8, 0xcf, 0xb2, 0x9a, 0xf3, 0x24,
-  0xfa, 0xe8, 0x5a, 0x34, 0x1a, 0x87, 0xd1, 0x23, 0xb9, 0xc3, 0x02, 0x64,
-  0x87, 0xc3, 0x60, 0x56, 0x27, 0x26, 0xb1, 0x74, 0x4d, 0x89, 0x2b, 0xe8,
-  0xec, 0xbc, 0x3a, 0x39, 0x3d, 0xde, 0x4e, 0x5e, 0x65, 0xc0, 0xb6, 0x6a,
-  0xcd, 0x8c, 0xf9, 0xc5, 0x1f, 0xe4, 0x13, 0xdb, 0x21, 0x55, 0xb0, 0xba,
-  0x4a, 0x7a, 0x3b, 0x28, 0x33, 0x48, 0x8a, 0xb2, 0x6d, 0x10, 0x0a, 0x25,
-  0x0b, 0xa6, 0x40, 0x94, 0x9e, 0x95, 0x49, 0x32, 0x37, 0x5e, 0xe7, 0x0a,
-  0x21, 0x82, 0xc9, 0xd7, 0x43, 0xf3, 0xa0, 0xf7, 0x45, 0xe8, 0x02, 0xe7,
-  0x91, 0x6b, 0x24, 0x9a, 0xb9, 0x45, 0xa5, 0x90, 0x68, 0xd7, 0x59, 0x90,
-  0xfa, 0xde, 0xf9, 0x3f, 0x24, 0x70, 0x17, 0xf1, 0x12, 0xf3, 0x62, 0xea,
-  0xb0, 0xac, 0xa5, 0x6c, 0x19, 0xcf, 0x37, 0x64, 0x28, 0x01, 0x5c, 0x57,
-  0x57, 0x72, 0xe7, 0xb9, 0x20, 0x77, 0x43, 0x77, 0x08, 0xdd, 0xf0, 0x72,
-  0x57, 0x7b, 0x05, 0xc5, 0x35, 0x33, 0x74, 0x91, 0x5c, 0xd9, 0xa2, 0xee,
-  0xa0, 0x8b, 0x10, 0x2d, 0xab, 0x1f, 0xda, 0xf6, 0x69, 0xb6, 0x38, 0xea,
-  0x12, 0x50, 0x77, 0xb8, 0xb0, 0x68, 0x9b, 0x44, 0x0b, 0x80, 0x23, 0x79,
-  0x27, 0xaa, 0x7a, 0xd8, 0x11, 0x11, 0xa5, 0x31, 0x4b, 0xc1, 0xcc, 0x48,
-  0xdc, 0xdd, 0x3d, 0xd8, 0x0b, 0x8b, 0x1a, 0x2e, 0xb4, 0x60, 0x2f, 0x47,
-  0x2a, 0xed, 0xfc, 0x7e, 0x31, 0x29, 0x7f, 0x63, 0xd2, 0xfc, 0xdb, 0x6a,
-  0x71, 0x4b, 0xb4, 0x55, 0x31, 0x05, 0x0f, 0xba, 0x0b, 0x2b, 0xeb, 0xe9,
-  0xfb, 0xde, 0x39, 0x25, 0xda, 0xd5, 0x33, 0x1a, 0xb5, 0xe3, 0xd3, 0x00,
-  0x29, 0xb8, 0xff, 0x40, 0x9e, 0x8d, 0xd7, 0x29, 0x73, 0xf6, 0x85, 0xd2,
-  0x84, 0xb9, 0x4a, 0x2f, 0x0b, 0x06, 0x3d, 0x1d, 0x8e, 0xab, 0x23, 0xec,
-  0x6b, 0x83, 0x77, 0x59, 0x93, 0xb8, 0x36, 0xb7, 0x04, 0x69, 0xdf, 0xb8,
-  0xca, 0x7e, 0x90, 0xa4, 0xd5, 0xdd, 0x90, 0x0a, 0xf2, 0x2c, 0xdf, 0xd8,
-  0x89, 0xb5, 0xcc, 0xe2, 0x04, 0x57, 0x08, 0xe0, 0xf5, 0x68, 0xdd, 0x96,
-  0x92, 0xd9, 0x66, 0x25, 0x92, 0x2a, 0xc3, 0xf3, 0xb3, 0x11, 0x26, 0xed,
-  0xc1, 0x29, 0x24, 0x08, 0x2e, 0xf9, 0xcd, 0xe8, 0x5c, 0x4e, 0x66, 0x05,
-  0xef, 0x0e, 0xdb, 0x28, 0x83, 0x95, 0xff, 0x1f, 0x72, 0x6f, 0xf3, 0x65,
-  0xa4, 0x27, 0x7d, 0xd0, 0x11, 0xfb, 0x14, 0xc2, 0xdf, 0x5b, 0x72, 0x12,
-  0x52, 0x7f, 0x20, 0x10, 0x9c, 0x05, 0x6d, 0x48, 0x48, 0xab, 0xcb, 0x5f,
-  0xd2, 0x0b, 0xab, 0x13, 0xf2, 0x72, 0x10, 0xa8, 0xed, 0x8e, 0x5b, 0xbf,
-  0xa4, 0x63, 0x5b, 0x54, 0xb9, 0xd8, 0xd9, 0x7d, 0x60, 0x5a, 0x60, 0xf4,
-  0x8d, 0x63, 0x4f, 0x2c, 0x67, 0xd7, 0xc1, 0xa0, 0xb8, 0x68, 0x1c, 0xd3,
-  0x5b, 0x83, 0x09, 0xdf, 0x0a, 0x6f, 0xaf, 0xba, 0x62, 0x89, 0x2c, 0x2b,
-  0x35, 0x74, 0x18, 0x05, 0x21, 0x96, 0xaa, 0x71, 0xb8, 0x92, 0x51, 0x7a,
-  0xe4, 0x7b, 0xd6, 0x5a, 0xaf, 0x2d, 0x36, 0x8d, 0x4e, 0xc3, 0x0c, 0x5a,
-  0xb1, 0xbb, 0x79, 0xc8, 0xc6, 0x43, 0xa2, 0xb0, 0xe8, 0x11, 0xb6, 0xb9,
-  0x4a, 0x50, 0x4c, 0xa4, 0x12, 0x99, 0x9d, 0x62, 0x4e, 0xbb, 0x64, 0xf6,
-  0x59, 0x57, 0xd2, 0x1e, 0x57, 0x70, 0x33, 0x77, 0x4b, 0xd2, 0xf1, 0xb0,
-  0x70, 0x29, 0x07, 0xe5, 0xb7, 0xa9, 0xf5, 0xde, 0xe3, 0x4f, 0x61, 0xc6,
-  0x16, 0x55, 0x8d, 0xd8, 0xda, 0x60, 0x4c, 0x61, 0x09, 0xb3, 0xf5, 0x93,
-  0x45, 0x29, 0x68, 0xf3, 0x74, 0x36, 0x16, 0x39, 0xf6, 0x74, 0x06, 0x62,
-  0xa5, 0xb7, 0x90, 0xc1, 0x22, 0x80, 0x64, 0x64, 0xc1, 0x0a, 0x43, 0xa9,
-  0x60, 0xb3, 0x20, 0x27, 0x2e, 0xb6, 0x30, 0x71, 0x45, 0x5b, 0xd7, 0xd4,
-  0x62, 0x45, 0x22, 0xe1, 0x4d, 0xfa, 0xe1, 0xc3, 0xb0, 0xca, 0xa4, 0xa6,
-  0x68, 0x55, 0xcd, 0x90, 0xb4, 0xd8, 0x2c, 0xc2, 0x3a, 0xf8, 0x56, 0x2b,
-  0x30, 0x5f, 0xe5, 0xd7, 0x1c, 0xfb, 0x86, 0x7f, 0xbb, 0x52, 0xb4, 0x2d,
-  0x37, 0x5b, 0x0b, 0xd9, 0xfa, 0x07, 0x3d, 0xd7, 0x01, 0x40, 0x92, 0x46,
-  0x00, 0x09, 0xf3, 0xd1, 0x82, 0x08, 0x93, 0x38, 0xf7, 0x83, 0xdf, 0xd6,
-  0xb0, 0x09, 0x60, 0x30, 0x6a, 0x1c, 0x3a, 0x76, 0xca, 0xf5, 0x21, 0xb7,
-  0x27, 0x96, 0xc3, 0xb7, 0x2b, 0x22, 0x73, 0x5b, 0xf1, 0xd0, 0xda, 0xdd,
-  0x76, 0xc7, 0x66, 0x8b, 0x06, 0x93, 0x55, 0x9e, 0x23, 0x72, 0x3f, 0x87,
-  0xa5, 0xdb, 0xf3, 0x16, 0xc2, 0xd1, 0x56, 0x3c, 0xa4, 0x40, 0x65, 0x38,
-  0x82, 0x61, 0x72, 0xb6, 0x0c, 0x08, 0xf8, 0x26, 0xcb, 0x4b, 0x6f, 0x91,
-  0xae, 0x9c, 0x22, 0x87, 0xd3, 0x1c, 0x4f, 0x56, 0x6e, 0x6a, 0xc7, 0x09,
-  0x75, 0xf9, 0x74, 0x01, 0xb4, 0x52, 0x97, 0x87, 0x36, 0x43, 0x54, 0x2b,
-  0x4d, 0x85, 0xe4, 0x31, 0x12, 0xfb, 0x22, 0xdc, 0x27, 0x53, 0x56, 0x91,
-  0x9b, 0xcb, 0x38, 0xeb, 0x15, 0xf2, 0x20, 0x04, 0xe5, 0xe8, 0xbe, 0x61,
-  0xf2, 0x82, 0xc9, 0x99, 0x84, 0x87, 0x2d, 0x2d, 0xb5, 0xd3, 0x95, 0x88,
-  0x27, 0x46, 0x9d, 0x12, 0x77, 0x96, 0x15, 0xb9, 0xb0, 0x7a, 0xd8, 0xbe,
-  0x75, 0x0f, 0x20, 0xd3, 0xb0, 0xc3, 0x77, 0x04, 0xad, 0x59, 0x02, 0x75,
-  0x30, 0x01, 0x97, 0xd1, 0x6f, 0x6f, 0x6a, 0xfd, 0xaa, 0x31, 0x20, 0x14,
-  0x94, 0x27, 0x6b, 0x2c, 0x6e, 0xab, 0x39, 0x89, 0xea, 0x25, 0x91, 0x47,
-  0x02, 0x75, 0x25, 0x92, 0x37, 0xb1, 0x58, 0xdf, 0x66, 0xb5, 0x0c, 0x05,
-  0x2f, 0xa9, 0xd8, 0x24, 0xb7, 0xe0, 0x52, 0x67, 0x69, 0xb9, 0x16, 0x91,
-  0x81, 0x74, 0xfc, 0x9f, 0x7e, 0xea, 0x27, 0x0c, 0xa2, 0xf2, 0x13, 0xc9,
-  0x91, 0x3f, 0xd1, 0x82, 0xfe, 0x24, 0xc5, 0x3d, 0x7e, 0x7a, 0x4f, 0x5c,
-  0x29, 0x08, 0x11, 0xf6, 0x85, 0x1b, 0xe2, 0x28, 0x2f, 0x71, 0x30, 0x6a,
-  0x11, 0x1b, 0x36, 0xcd, 0x49, 0x8e, 0x9d, 0x5b, 0x2b, 0xb1, 0xe9, 0xd1,
-  0x86, 0xad, 0xe6, 0x0b, 0x11, 0xe2, 0x74, 0xeb, 0x41, 0xd4, 0xd1, 0x55,
-  0x9c, 0x26, 0xc9, 0xe6, 0x1f, 0x37, 0x3d, 0xfa, 0x4a, 0x50, 0x15, 0x47,
-  0x25, 0x5f, 0xbc, 0x67, 0xa4, 0x5d, 0x6b, 0xf1, 0xfa, 0x54, 0x50, 0x4c,
-  0xe7, 0x5d, 0xc8, 0x86, 0x44, 0xb7, 0xac, 0xe3, 0xde, 0xa1, 0x90, 0x15,
-  0x82, 0xf1, 0x84, 0xa3, 0xb3, 0x7a, 0x9e, 0x2c, 0x6f, 0xee, 0x71, 0x59,
-  0x0b, 0x0d, 0x06, 0x60, 0xee, 0x32, 0xca, 0x8e, 0xda, 0x3b, 0x31, 0xfb,
-  0x6a, 0x60, 0x36, 0xf8, 0xab, 0x8a, 0x3d, 0x1f, 0x21, 0x6f, 0xa1, 0x31,
-  0x6e, 0x0e, 0x36, 0x9b, 0x68, 0x6a, 0x6b, 0xca, 0xa0, 0x79, 0x60, 0x14,
-  0x29, 0x83, 0xb6, 0x3e, 0x38, 0x5c, 0x33, 0x89, 0xc7, 0xc2, 0x85, 0x9c,
-  0x69, 0x10, 0x46, 0x5a, 0x53, 0x42, 0xc2, 0xb3, 0xd6, 0xef, 0x8a, 0x9e,
-  0x01, 0x58, 0xad, 0x00, 0xcb, 0xda, 0x5c, 0xf2, 0x3a, 0x09, 0x6e, 0x94,
-  0x01, 0xd7, 0xc5, 0x71, 0xbe, 0x0b, 0x14, 0x19, 0x2b, 0x24, 0x5d, 0x20,
-  0x27, 0x91, 0xf3, 0xbe, 0x83, 0x15, 0xd9, 0x9b, 0x3c, 0x8e, 0x02, 0xe6,
-  0x9f, 0x84, 0x9d, 0xa2, 0xc2, 0x47, 0x46, 0x45, 0x5f, 0x4a, 0x00, 0x38,
-  0x39, 0x35, 0x71, 0x79, 0x17, 0xf1, 0x71, 0xea, 0x4c, 0x3d, 0xe0, 0xf1,
-  0xbc, 0x48, 0x7a, 0x6b, 0x79, 0x7d, 0xaf, 0xfd, 0xc2, 0x29, 0x27, 0x82,
-  0xbb, 0xd8, 0x25, 0x01, 0x03, 0x91, 0x5c, 0x92, 0x2e, 0x4c, 0x44, 0x5f,
-  0x97, 0xdc, 0x98, 0xfc, 0x1a, 0xdb, 0x9a, 0x18, 0x25, 0x05, 0x6c, 0x4e,
-  0x4f, 0xe6, 0x94, 0x8e, 0xcc, 0xba, 0x32, 0x5d, 0x26, 0xac, 0x72, 0x5e,
-  0xde, 0xad, 0x82, 0x95, 0xa9, 0x38, 0xb7, 0x65, 0x97, 0xe6, 0xdf, 0xed,
-  0xa2, 0xdc, 0x56, 0x73, 0x81, 0x44, 0x0e, 0xae, 0x01, 0xb9, 0x6a, 0x71,
-  0x52, 0x28, 0x5b, 0x50, 0xae, 0x72, 0x98, 0x7e, 0xaf, 0x8a, 0xd5, 0x62,
-  0xda, 0x8c, 0x26, 0x58, 0x4b, 0xd9, 0xdc, 0x2f, 0x7a, 0x54, 0xc4, 0x34,
-  0xcb, 0x0a, 0x70, 0xdc, 0x05, 0x36, 0x18, 0x8d, 0xe0, 0x67, 0x09, 0x90,
-  0x81, 0x76, 0xa2, 0x9d, 0xd9, 0xdb, 0x56, 0xc9, 0x08, 0x85, 0x64, 0x51,
-  0x9b, 0x5e, 0x8d, 0x84, 0xbd, 0x9b, 0x42, 0xb2, 0xff, 0x7b, 0x07, 0x5c,
-  0xed, 0x5e, 0xad, 0xfd, 0x3a, 0x47, 0xe7, 0xa6, 0x6e, 0x47, 0xbb, 0x30,
-  0xbc, 0xc2, 0x37, 0x67, 0xaf, 0x8f, 0x5d, 0x4c, 0xa2, 0xa8, 0xa4, 0xfc,
-  0x49, 0x27, 0x02, 0xcc, 0x10, 0x8e, 0x65, 0xcb, 0xea, 0xec, 0xc7, 0x95,
-  0x27, 0xb0, 0x3a, 0xa4, 0x77, 0x2e, 0xef, 0x56, 0xf9, 0x74, 0x0b, 0x99,
-  0xb7, 0x6f, 0xdf, 0x9c, 0xfc, 0x30, 0x80, 0xc6, 0x2d, 0xe8, 0x48, 0x95,
-  0xa5, 0x9e, 0x5a, 0xd6, 0xaa, 0x14, 0xa4, 0x2b, 0xe6, 0x1d, 0x29, 0xdc,
-  0x56, 0x87, 0x24, 0x84, 0x30, 0x42, 0x1c, 0x7d, 0xbe, 0x10, 0x9b, 0xb7,
-  0x34, 0xb9, 0xcd, 0x6c, 0x88, 0x78, 0x38, 0xe0, 0x17, 0xb0, 0xef, 0x1d,
-  0xf1, 0x95, 0xc1, 0x7e, 0x73, 0x73, 0x87, 0xe7, 0xe7, 0x2f, 0x0f, 0x2f,
-  0x0f, 0xdd, 0xdc, 0x00, 0x77, 0x00, 0x56, 0x07, 0x45, 0x8a, 0xa5, 0x23,
-  0x2d, 0x29, 0xb6, 0xf9, 0x27, 0x0e, 0xbe, 0x6f, 0x73, 0xbf, 0xf3, 0x8b,
-  0x33, 0x56, 0x88, 0xff, 0xf4, 0xd3, 0xa1, 0x2f, 0x4a, 0x8a, 0x9a, 0x61,
-  0x71, 0x69, 0xc8, 0x7d, 0x92, 0x77, 0xcf, 0x16, 0x0e, 0x1f, 0xa2, 0xef,
-  0xbc, 0xb5, 0x92, 0xe5, 0x9a, 0xbc, 0xe3, 0x3d, 0x2d, 0x27, 0x4e, 0x40,
-  0x11, 0x4b, 0x93, 0x6c, 0x67, 0x3f, 0x8e, 0xda, 0x0a, 0x26, 0x82, 0xf0,
-  0xbf, 0x26, 0xfa, 0x83, 0xad, 0xd5, 0x8c, 0xa4, 0x6a, 0x12, 0x0d, 0x6b,
-  0xb0, 0x2f, 0x8e, 0x6f, 0x61, 0xfa, 0x9a, 0xf2, 0x42, 0xb5, 0x31, 0x8e,
-  0xdc, 0xfe, 0xd8, 0x06, 0x49, 0x56, 0x31, 0xae, 0x01, 0xe1, 0x41, 0x12,
-  0x95, 0x57, 0x48, 0xad, 0x98, 0xa1, 0x8d, 0x56, 0x65, 0xff, 0xe8, 0xec,
-  0x88, 0xb5, 0x99, 0xe8, 0xdc, 0xe6, 0x10, 0x2d, 0xc8, 0x1f, 0x89, 0xe9,
-  0x0d, 0x2c, 0xeb, 0x4f, 0xa6, 0x4d, 0x1f, 0x44, 0x0f, 0xd5, 0x56, 0x11,
-  0x03, 0xa2, 0x52, 0x6c, 0x0f, 0x56, 0x3e, 0x15, 0x32, 0xa8, 0xb6, 0xc4,
-  0xac, 0x89, 0xe0, 0xfa, 0x14, 0x4a, 0xeb, 0x21, 0x8d, 0x2c, 0xb6, 0x8d,
-  0x99, 0xa5, 0x95, 0x1e, 0xad, 0x56, 0x6c, 0x5c, 0xe0, 0xbf, 0x76, 0xf6,
-  0x86, 0xbb, 0xbd, 0x78, 0xf4, 0x08, 0xe9, 0x82, 0x05, 0xc7, 0x70, 0x1f,
-  0x05, 0xca, 0xb3, 0xf8, 0xf8, 0x00, 0x85, 0x83, 0x92, 0xdc, 0x07, 0x3f,
-  0x54, 0xd7, 0x58, 0x06, 0x67, 0x91, 0xa5, 0x4d, 0x2c, 0xbe, 0x9e, 0x25,
-  0x2f, 0x0a, 0xa4, 0x3f, 0xa6, 0xac, 0x73, 0xc0, 0x6a, 0xd0, 0xeb, 0x5e,
-  0xe0, 0xc5, 0x54, 0xbc, 0x57, 0xad, 0x75, 0xfe, 0x55, 0x69, 0x41, 0x6e,
-  0xff, 0x03, 0x43, 0xf2, 0x5a, 0x6e, 0xd7, 0x30, 0x13, 0xdf, 0x66, 0x24,
-  0xf8, 0xcd, 0x90, 0x05, 0xc3, 0x46, 0x9f, 0x75, 0x05, 0xed, 0x9b, 0x20,
-  0xb7, 0x15, 0xc7, 0x35, 0x09, 0x6b, 0xc0, 0x5b, 0x49, 0x18, 0xe7, 0xeb,
-  0x51, 0xe9, 0x48, 0x23, 0x66, 0x69, 0x30, 0x9f, 0x46, 0x97, 0x88, 0x46,
-  0xfc, 0xb1, 0xab, 0x82, 0xf9, 0x95, 0x1b, 0x04, 0x3b, 0x0f, 0xc6, 0x99,
-  0x93, 0xb3, 0xa5, 0x75, 0x4b, 0xb8, 0x65, 0xa4, 0xc7, 0xfc, 0x7d, 0x3e,
-  0x5d, 0x45, 0xae, 0xb7, 0xf6, 0xfb, 0x43, 0xe6, 0xb2, 0x79, 0x15, 0x66,
-  0x76, 0xc0, 0xfe, 0xc0, 0x4f, 0x14, 0xce, 0x3c, 0x85, 0x1a, 0x6b, 0x38,
-  0x53, 0x91, 0xc5, 0xed, 0x4a, 0x10, 0xa6, 0x64, 0x8a, 0x97, 0x47, 0xe7,
-  0xef, 0xbe, 0x3d, 0x3e, 0x3e, 0x3f, 0x79, 0x79, 0x7a, 0xac, 0xf7, 0x8c,
-  0xfb, 0xe8, 0xcd, 0xe5, 0x77, 0xa7, 0x06, 0x3a, 0x65, 0xeb, 0x13, 0xd9,
-  0x6c, 0x38, 0x72, 0x04, 0xcd, 0x9d, 0xe6, 0x8b, 0xd5, 0x07, 0x0e, 0x50,
-  0x9c, 0x30, 0x31, 0x1f, 0x9e, 0xfc, 0xd0, 0x4f, 0xbe, 0x39, 0x1f, 0xbc,
-  0xfd, 0x21, 0xca, 0xe7, 0x6f, 0xc4, 0x6a, 0xb6, 0x95, 0x7d, 0x17, 0xb9,
-  0x89, 0xd2, 0x00, 0x7e, 0xee, 0xa6, 0x65, 0x76, 0x54, 0xcb, 0xfb, 0xad,
-  0xed, 0x56, 0x51, 0x73, 0xab, 0x45, 0x80, 0x43, 0x8a, 0x4a, 0x6c, 0xd2,
-  0xb4, 0x5e, 0xbd, 0x20, 0x87, 0xa7, 0xbb, 0x5a, 0x61, 0xb4, 0x45, 0x80,
-  0xf7, 0xc9, 0x73, 0xfa, 0xd1, 0x85, 0xaf, 0xb2, 0x33, 0x1a, 0x7d, 0xc3,
-  0x45, 0xcd, 0x3d, 0x9e, 0xa8, 0x4b, 0x0b, 0x1f, 0x5a, 0x9c, 0x96, 0xba,
-  0x3f, 0x35, 0x0b, 0x4d, 0x93, 0x93, 0xcb, 0x48, 0x0f, 0x73, 0x2d, 0xd8,
-  0x1d, 0x6e, 0x2a, 0x57, 0xb7, 0x68, 0xfb, 0x1b, 0x66, 0x9b, 0x51, 0xa7,
-  0x1f, 0xc5, 0x01, 0x8b, 0xa6, 0xc8, 0x8f, 0x0e, 0x5b, 0x8a, 0x37, 0x1a,
-  0xc1, 0xfc, 0x64, 0xd5, 0xba, 0xaa, 0x72, 0x0a, 0x32, 0x4c, 0xd2, 0xc2,
-  0x3f, 0xa4, 0x03, 0xf1, 0xf2, 0xf8, 0xa2, 0x2f, 0xf0, 0x60, 0x21, 0x34,
-  0x98, 0xc3, 0xc2, 0x1b, 0x2a, 0x24, 0x58, 0xa7, 0xc7, 0x1d, 0x9b, 0xfa,
-  0xcf, 0x83, 0x04, 0xbb, 0x2d, 0xc7, 0xc9, 0xf3, 0x19, 0xbd, 0x38, 0xeb,
-  0x4e, 0xc4, 0x93, 0x7a, 0x4d, 0xbe, 0xe8, 0x54, 0x0b, 0xfc, 0x41, 0xa1,
-  0xa6, 0x44, 0xf4, 0x43, 0x33, 0x4e, 0xe3, 0x8c, 0x10, 0xff, 0x6a, 0xd8,
-  0x74, 0xf8, 0x8d, 0x28, 0x6b, 0x69, 0x13, 0x91, 0x82, 0x9b, 0xfd, 0x64,
-  0x93, 0x11, 0x2e, 0xf8, 0x5f, 0x30, 0x54, 0x2d, 0xd6, 0xb5, 0xd9, 0x8f,
-  0xeb, 0xa5, 0x6c, 0xea, 0xaa, 0x6f, 0xd2, 0xc6, 0x49, 0x6b, 0x4c, 0x9b,
-  0x82, 0xe6, 0x25, 0xe3, 0x50, 0x50, 0x50, 0xa9, 0x25, 0x91, 0x34, 0xc2,
-  0x0a, 0xaa, 0x48, 0xd5, 0x77, 0xcd, 0xb5, 0xa3, 0x54, 0xba, 0x6d, 0x49,
-  0xeb, 0x60, 0xc8, 0x53, 0x07, 0x6d, 0x1b, 0xa0, 0x8f, 0x5b, 0x69, 0xb1,
-  0xc7, 0x2c, 0x57, 0x7d, 0x3d, 0x1a, 0x1d, 0x9e, 0x9f, 0xb4, 0x97, 0x9a,
-  0x3e, 0x1d, 0xbc, 0xb1, 0xd2, 0x4e, 0xdb, 0x46, 0x29, 0x3e, 0x59, 0x85,
-  0x67, 0x80, 0x0c, 0x28, 0xbe, 0xfe, 0x39, 0x6e, 0x97, 0xc3, 0xe0, 0x06,
-  0xdf, 0xb1, 0xda, 0xc7, 0xa6, 0xcd, 0x8e, 0x92, 0x41, 0x0a, 0xc0, 0xa7,
-  0x71, 0x19, 0xa5, 0xe6, 0x9f, 0x19, 0xc2, 0x79, 0x5e, 0xff, 0x8e, 0x34,
-  0x35, 0x03, 0x20, 0x78, 0x5e, 0xd5, 0x03, 0xf6, 0x6a, 0x74, 0xc7, 0x8f,
-  0x42, 0x4d, 0xd1, 0xe8, 0x6f, 0x73, 0xac, 0x04, 0x88, 0x9c, 0xc2, 0x34,
-  0xa4, 0xec, 0x09, 0x82, 0x65, 0x2a, 0xad, 0x1d, 0x3a, 0xe8, 0x42, 0x5c,
-  0x7f, 0x9f, 0x67, 0x77, 0xc3, 0x24, 0x39, 0xf6, 0xb0, 0x25, 0xea, 0xe1,
-  0xcb, 0x1b, 0x55, 0x55, 0xd8, 0x96, 0x39, 0xb9, 0x21, 0x79, 0x6c, 0x80,
-  0x40, 0xba, 0x2e, 0x35, 0xc0, 0xc5, 0x9d, 0x09, 0xe8, 0xa9, 0x45, 0xbf,
-  0xfb, 0x80, 0x75, 0xd2, 0x55, 0x35, 0x72, 0x47, 0x63, 0xd6, 0xfc, 0x57,
-  0x3c, 0x8a, 0x35, 0x59, 0x8f, 0x42, 0x96, 0x2e, 0xaf, 0x11, 0xaa, 0x68,
-  0x51, 0x1a, 0x56, 0xdd, 0xc3, 0x52, 0x08, 0xf4, 0x08, 0x5d, 0xa1, 0x37,
-  0xa7, 0x23, 0x1f, 0xc8, 0x6f, 0x06, 0xda, 0x0a, 0xc6, 0x87, 0x84, 0xd4,
-  0xdd, 0xb9, 0x54, 0xea, 0xe9, 0xae, 0xf8, 0xe4, 0xf0, 0x39, 0x79, 0xc5,
-  0xc4, 0x35, 0x29, 0xf2, 0x72, 0x5e, 0x36, 0xd2, 0x32, 0xb8, 0x8f, 0xbf,
-  0x88, 0x05, 0x4f, 0xbc, 0xfe, 0xdd, 0x3e, 0x44, 0x46, 0x4f, 0x09, 0xf2,
-  0x24, 0xe5, 0x58, 0x03, 0xc5, 0x23, 0x9f, 0xb0, 0xfe, 0x7d, 0x1b, 0xde,
-  0x3b, 0x0d, 0x88, 0xf8, 0x4e, 0x7f, 0x20, 0x40, 0xc4, 0xb7, 0xcd, 0x9a,
-  0xe3, 0x2a, 0x4a, 0x1b, 0x1e, 0xbf, 0x86, 0xb0, 0x6a, 0x0c, 0x18, 0x98,
-  0x2e, 0xaa, 0x05, 0xd3, 0x9d, 0xdd, 0x36, 0xc5, 0x20, 0xbc, 0x16, 0x50,
-  0xb2, 0x06, 0x23, 0x52, 0x27, 0x0e, 0x9d, 0x7e, 0x8b, 0xa5, 0x9a, 0x49,
-  0x18, 0xfe, 0xd1, 0x46, 0x88, 0xef, 0x48, 0xc3, 0x4e, 0x93, 0x47, 0x3f,
-  0xfc, 0xd0, 0x44, 0xce, 0xd9, 0x5e, 0x17, 0x26, 0xe8, 0x80, 0xfd, 0xa6,
-  0x45, 0x17, 0x7d, 0x59, 0xd0, 0x9e, 0xda, 0x28, 0xd9, 0x33, 0x03, 0x6d,
-  0x04, 0x37, 0x82, 0x22, 0x0a, 0x92, 0xce, 0x78, 0x63, 0xd1, 0x2d, 0x0d,
-  0xdf, 0x70, 0xcc, 0x04, 0xbd, 0x93, 0xb5, 0xef, 0x82, 0x82, 0xc4, 0x17,
-  0x05, 0x97, 0xb5, 0x2d, 0x16, 0xaf, 0x55, 0x50, 0xa7, 0xfd, 0x86, 0x7d,
-  0x32, 0x5d, 0xa0, 0xfe, 0x2d, 0xde, 0xee, 0x52, 0xaf, 0x34, 0x2c, 0x40,
-  0xaa, 0x1b, 0xa0, 0x1c, 0x01, 0x1b, 0x5a, 0x82, 0x62, 0x8a, 0x1a, 0xb3,
-  0x17, 0x51, 0x8a, 0x18, 0x2c, 0xd8, 0x7f, 0x88, 0x09, 0x72, 0x14, 0x91,
-  0xd0, 0x4c, 0x52, 0xc3, 0xfa, 0x6f, 0xbe, 0x8d, 0x70, 0xaf, 0xf0, 0x78,
-  0xbf, 0x23, 0x45, 0xe7, 0x0e, 0xc8, 0xfb, 0x82, 0x61, 0xa3, 0x86, 0x28,
-  0xf8, 0x12, 0x35, 0xca, 0x59, 0x32, 0xa3, 0xff, 0x1c, 0xd7, 0xd2, 0x53,
-  0xd2, 0x8b, 0x22, 0x79, 0xd8, 0xef, 0x57, 0x97, 0x2b, 0xac, 0x10, 0x8b,
-  0x7f, 0x9c, 0x22, 0x51, 0x78, 0x60, 0x0b, 0xbe, 0xc7, 0xcd, 0x67, 0x0a,
-  0xd4, 0x68, 0x89, 0xd7, 0x9b, 0x23, 0x83, 0x3f, 0xf6, 0x0a, 0xd9, 0xcc,
-  0x2c, 0x03, 0x83, 0x33, 0x2e, 0x1a, 0xee, 0x92, 0xc1, 0x60, 0x9e, 0x7e,
-  0x18, 0xe0, 0xb1, 0x2a, 0x42, 0x30, 0x0d, 0x8d, 0x37, 0x8a, 0x1d, 0x55,
-  0x88, 0xc4, 0x15, 0xac, 0x99, 0xc9, 0xe9, 0x46, 0x44, 0x7a, 0x2f, 0xa4,
-  0x4c, 0x42, 0x74, 0x94, 0xbf, 0x3e, 0xbe, 0x6c, 0x1f, 0x2d, 0xa4, 0xe3,
-  0xaa, 0xce, 0x83, 0x38, 0x4c, 0xfa, 0xfb, 0xfc, 0xed, 0xe5, 0xb6, 0x47,
-  0xaf, 0x9f, 0x16, 0x2d, 0xe3, 0x8b, 0x35, 0xde, 0x81, 0xe2, 0x25, 0xb1,
-  0x8f, 0x1a, 0x3c, 0x8f, 0x88, 0x55, 0x77, 0x26, 0xb8, 0xde, 0xc6, 0xa3,
-  0xdd, 0xbd, 0x3e, 0xfd, 0xd8, 0x87, 0xf9, 0xe0, 0xd1, 0xee, 0x23, 0x67,
-  0x9b, 0xb5, 0xa7, 0x22, 0x5e, 0x3b, 0x95, 0x17, 0x3d, 0x28, 0xff, 0xa3,
-  0x0f, 0x1f, 0xf0, 0x71, 0xbf, 0x11, 0x2f, 0x55, 0x66, 0x03, 0xcb, 0xe2,
-  0x77, 0xb9, 0xcd, 0x71, 0x2a, 0xbd, 0x0d, 0xdc, 0xaf, 0x38, 0xec, 0x00,
-  0xab, 0x85, 0x38, 0xdb, 0x59, 0x8b, 0x43, 0x7c, 0x65, 0x28, 0xfc, 0x58,
-  0xbd, 0x90, 0x4e, 0xac, 0xdc, 0x43, 0xa9, 0x60, 0xd1, 0x4a, 0x47, 0x64,
-  0x6a, 0xe5, 0xf1, 0x72, 0xac, 0x31, 0xdf, 0xf3, 0x9a, 0xac, 0xe6, 0xfd,
-  0x17, 0x22, 0xf3, 0x75, 0x60, 0x52, 0xf3, 0x5c, 0x00, 0x4a, 0x64, 0x65,
-  0x4a, 0x06, 0x32, 0xd4, 0xa3, 0x44, 0xbd, 0x4f, 0xb2, 0x20, 0xea, 0x30,
-  0xd1, 0x28, 0xd8, 0x2b, 0x45, 0x22, 0xea, 0x4c, 0xa8, 0x37, 0xd7, 0x01,
-  0x49, 0x2e, 0x33, 0x01, 0x80, 0x90, 0x94, 0x73, 0xb9, 0xf0, 0x65, 0x4c,
-  0x12, 0x13, 0xe6, 0x63, 0x04, 0xf8, 0xbd, 0x3f, 0x7c, 0x34, 0xeb, 0xf2,
-  0x63, 0xb7, 0xbf, 0xf7, 0x74, 0x77, 0x61, 0x57, 0x34, 0xe4, 0x82, 0x07,
-  0xb3, 0x81, 0x70, 0xb0, 0x06, 0xd0, 0x0c, 0x9e, 0xd3, 0xed, 0x9d, 0x4d,
-  0xd7, 0x79, 0xc3, 0x10, 0x54, 0x94, 0x7e, 0xc8, 0xe7, 0xab, 0xb9, 0xcf,
-  0xe3, 0xc0, 0x7b, 0xbe, 0x44, 0x9f, 0xc7, 0xec, 0x82, 0x44, 0xda, 0x85,
-  0x6b, 0xa7, 0x31, 0x24, 0x3a, 0xbf, 0x40, 0x44, 0x80, 0x07, 0x3d, 0x95,
-  0x83, 0xce, 0x1c, 0x33, 0x5f, 0x66, 0xb6, 0x8f, 0x9b, 0x53, 0x89, 0x92,
-  0xe1, 0x55, 0x6d, 0xf3, 0x10, 0x1b, 0x09, 0x2a, 0xd2, 0x89, 0xff, 0x59,
-  0x02, 0x50, 0x89, 0x2f, 0xb2, 0xbf, 0x94, 0x9a, 0xb8, 0xcb, 0xa7, 0xf5,
-  0x4d, 0x27, 0x4a, 0xaa, 0x2c, 0x22, 0xa6, 0x9d, 0x48, 0x9e, 0x3b, 0xc7,
-  0x04, 0x62, 0xa5, 0x10, 0x22, 0xb4, 0x23, 0x0a, 0x9c, 0xcb, 0xe8, 0x24,
-  0x09, 0x62, 0x75, 0xc5, 0xa8, 0x5a, 0x1d, 0xfe, 0x0c, 0x0d, 0x9e, 0x1e,
-  0x3a, 0xba, 0x85, 0x0a, 0xbc, 0x79, 0x2b, 0xc9, 0x0a, 0xdf, 0xaa, 0x58,
-  0x2b, 0xf0, 0x23, 0xb8, 0x79, 0x24, 0xa2, 0x97, 0x4e, 0xdf, 0x6d, 0x3e,
-  0x8b, 0x14, 0x1b, 0x74, 0x4f, 0x42, 0xf8, 0x1c, 0xaf, 0xbf, 0xde, 0x54,
-  0x67, 0x2d, 0x83, 0xe3, 0x64, 0x1a, 0xbf, 0xd4, 0x57, 0x94, 0xac, 0xcd,
-  0x6b, 0xe9, 0xe2, 0xeb, 0x4d, 0x07, 0x94, 0x15, 0x71, 0x6e, 0x1f, 0xf4,
-  0x64, 0x96, 0xae, 0xea, 0x20, 0xd9, 0xdf, 0xdd, 0xfd, 0x96, 0xf8, 0xc5,
-  0x1c, 0xcb, 0xbc, 0xf7, 0x75, 0x37, 0x8e, 0xac, 0x2c, 0x91, 0x6c, 0xb4,
-  0xf9, 0xca, 0xd2, 0xf7, 0x30, 0x49, 0xe9, 0xc2, 0x49, 0x4d, 0xb9, 0x69,
-  0x32, 0x5d, 0x95, 0x76, 0xee, 0x65, 0xf1, 0xd7, 0x6c, 0x15, 0xac, 0x15,
-  0xed, 0x7c, 0xdb, 0x39, 0x62, 0x55, 0x79, 0xf7, 0x6e, 0xe8, 0xb7, 0xcc,
-  0xa7, 0x2b, 0x49, 0x27, 0x1d, 0xd9, 0xac, 0x74, 0x89, 0x32, 0x92, 0xd1,
-  0xaa, 0xe4, 0xb2, 0x59, 0x08, 0x29, 0x02, 0x10, 0x08, 0x4c, 0x28, 0x66,
-  0xfc, 0x5d, 0x14, 0x92, 0x5a, 0x8e, 0xd0, 0x2f, 0x0f, 0x77, 0x50, 0xa2,
-  0x5a, 0x6e, 0x7c, 0x00, 0x11, 0xea, 0x8a, 0x0b, 0xcb, 0xe2, 0xee, 0x06,
-  0x7f, 0xe5, 0xeb, 0x1d, 0x43, 0x90, 0x93, 0xe2, 0x7c, 0x23, 0x12, 0xf4,
-  0xef, 0x85, 0x8f, 0xf6, 0x64, 0x59, 0x14, 0x51, 0x38, 0x7b, 0x96, 0x57,
-  0x61, 0xf1, 0xc0, 0x1c, 0x19, 0xb6, 0x71, 0xa9, 0x45, 0x21, 0x79, 0x20,
-  0xd2, 0x2e, 0xac, 0x33, 0x33, 0x7e, 0x60, 0xc6, 0xc2, 0x77, 0x11, 0xc5,
-  0xd0, 0xce, 0x96, 0x30, 0xfb, 0x38, 0xce, 0x1a, 0x0c, 0x89, 0x53, 0xbd,
-  0x26, 0x40, 0x8e, 0xe5, 0x68, 0xe2, 0xdf, 0x51, 0x53, 0x05, 0xc6, 0x91,
-  0xa4, 0x54, 0x3f, 0x27, 0xf2, 0xfd, 0xe2, 0x47, 0x2e, 0x24, 0xf5, 0x73,
-  0x47, 0xc9, 0xac, 0x34, 0xf0, 0xb4, 0x5a, 0xe4, 0x7a, 0xe9, 0x01, 0xdd,
-  0xd1, 0x8e, 0xa4, 0x76, 0x59, 0xe1, 0x2a, 0x0f, 0x85, 0xdf, 0x05, 0xa8,
-  0xe2, 0x8c, 0x6d, 0x5b, 0xd5, 0xf6, 0x30, 0xf4, 0x8a, 0x49, 0x23, 0xae,
-  0x15, 0x78, 0x93, 0x17, 0xc2, 0x60, 0xa4, 0xa0, 0x6b, 0xdb, 0x9b, 0xc2,
-  0x91, 0x34, 0x93, 0xcc, 0xc7, 0x1b, 0xa0, 0x15, 0x9b, 0xef, 0x78, 0x55,
-  0xdd, 0x33, 0x44, 0x84, 0xd8, 0x18, 0xab, 0xc2, 0x81, 0x64, 0x61, 0x01,
-  0x31, 0xfc, 0x38, 0x44, 0x83, 0x51, 0x0c, 0x24, 0xac, 0xad, 0x2e, 0x48,
-  0x5a, 0x4f, 0xcb, 0x92, 0xe4, 0x0e, 0xdd, 0x6a, 0x4d, 0x5c, 0xa0, 0xc1,
-  0x13, 0xf7, 0xc0, 0x5d, 0xe5, 0xcd, 0x86, 0xd4, 0xf6, 0x6a, 0xd9, 0x11,
-  0x53, 0xc1, 0x19, 0x4c, 0x11, 0x6c, 0x4c, 0x23, 0x3d, 0xd0, 0x64, 0x69,
-  0x93, 0x9d, 0x1e, 0x12, 0xe7, 0x93, 0x53, 0x18, 0xd3, 0x59, 0xfe, 0x0f,
-  0xde, 0xd4, 0xc4, 0x4a, 0x01, 0x82, 0x86, 0xa0, 0x64, 0xa6, 0xc9, 0xee,
-  0x8c, 0xb4, 0xe4, 0xcf, 0x1e, 0x08, 0x49, 0x00, 0xf4, 0x21, 0x23, 0x06,
-  0x7a, 0x41, 0xc5, 0x3e, 0x57, 0x4e, 0xdb, 0xf2, 0xf2, 0x65, 0x31, 0xec,
-  0xe2, 0xff, 0xfc, 0x0c, 0xd1, 0x82, 0x95, 0xc9, 0xcd, 0x39, 0xc3, 0x71,
-  0xba, 0x9a, 0x40, 0x3b, 0xe3, 0xe8, 0x11, 0xae, 0x7a, 0x3b, 0x16, 0x5c,
-  0x16, 0x4b, 0x12, 0xe4, 0xa6, 0x9d, 0x70, 0x17, 0x47, 0xd2, 0x8b, 0xf8,
-  0x8a, 0xa7, 0x1c, 0x90, 0x1e, 0x6e, 0x0d, 0x00, 0x6b, 0x42, 0x80, 0xc0,
-  0x8d, 0x10, 0x0b, 0xd7, 0x8b, 0xab, 0x35, 0x40, 0xa4, 0xe2, 0xa2, 0x60,
-  0xd9, 0xf6, 0x43, 0xed, 0x5c, 0x84, 0xa9, 0xd4, 0x48, 0x86, 0xd8, 0xf5,
-  0x15, 0x47, 0x7e, 0xb5, 0x1a, 0x0c, 0xe1, 0x35, 0x51, 0x29, 0x9a, 0xa5,
-  0xcd, 0x07, 0xad, 0xcc, 0xaf, 0xf5, 0x3a, 0x55, 0xab, 0x72, 0x0e, 0x53,
-  0x33, 0x9e, 0x94, 0x85, 0x45, 0x24, 0xba, 0xab, 0xf8, 0x7d, 0x77, 0x53,
-  0xcc, 0x42, 0x39, 0x22, 0xf6, 0x9f, 0x12, 0xcf, 0x09, 0x12, 0x67, 0xf4,
-  0x7a, 0x65, 0x09, 0x54, 0x8b, 0x72, 0xe7, 0x06, 0x91, 0x3d, 0xe6, 0xa0,
-  0xe0, 0xe4, 0x6f, 0xc5, 0x58, 0x95, 0x95, 0x84, 0x45, 0xee, 0x2e, 0xb0,
-  0x1a, 0x71, 0xd6, 0xdd, 0x70, 0x19, 0x32, 0xe2, 0xef, 0xe2, 0x7a, 0xe6,
-  0xf1, 0x2c, 0xb2, 0x9a, 0xf9, 0x0d, 0x82, 0x13, 0xa1, 0x6a, 0x26, 0x52,
-  0xa0, 0x14, 0xc1, 0x66, 0x9c, 0x0c, 0xb9, 0x88, 0x52, 0x28, 0x3e, 0x1b,
-  0x3e, 0xda, 0x1f, 0xee, 0x36, 0xb5, 0xb6, 0x74, 0xc2, 0xaa, 0x03, 0x35,
-  0xad, 0x01, 0xd7, 0xc8, 0x23, 0xf0, 0x95, 0x91, 0x2d, 0x38, 0x85, 0x97,
-  0x67, 0x10, 0x3b, 0x53, 0x54, 0x7e, 0xce, 0x18, 0x3b, 0xa8, 0x82, 0xef,
-  0x89, 0xda, 0x5b, 0x95, 0xe9, 0xe4, 0xde, 0x70, 0x09, 0x7d, 0xc0, 0x19,
-  0x37, 0xc1, 0xaf, 0xd0, 0xc0, 0xf0, 0x74, 0x04, 0xb7, 0xbb, 0x70, 0x83,
-  0x60, 0xae, 0x9d, 0x23, 0x1d, 0xb4, 0x1d, 0x08, 0x6f, 0xc8, 0xc8, 0x03,
-  0x6b, 0x6d, 0x8d, 0x12, 0xf1, 0x1b, 0xb2, 0xdc, 0x39, 0x63, 0xce, 0xa2,
-  0xbe, 0xf8, 0xf3, 0x35, 0x25, 0x0a, 0xb7, 0x46, 0xaf, 0xd9, 0x9e, 0x33,
-  0x72, 0x11, 0x01, 0x0a, 0x0b, 0x14, 0x14, 0x83, 0xcc, 0xbd, 0xea, 0xe9,
-  0xf0, 0x43, 0x5c, 0x08, 0x40, 0x57, 0x34, 0x6f, 0xfb, 0xa4, 0x38, 0xd4,
-  0x86, 0x2d, 0x31, 0x08, 0xd6, 0xf7, 0xdb, 0x1a, 0xa8, 0x2b, 0x08, 0xae,
-  0x35, 0x64, 0x7b, 0x62, 0x71, 0xd7, 0xeb, 0x0a, 0x65, 0x49, 0xc6, 0x22,
-  0xd7, 0x47, 0xbf, 0x57, 0xe3, 0x80, 0x3a, 0xab, 0xac, 0x56, 0x5e, 0x7b,
-  0x56, 0x21, 0xa2, 0xc0, 0x93, 0x66, 0x19, 0x47, 0xac, 0x09, 0xe8, 0xf6,
-  0x57, 0xae, 0x89, 0x67, 0x5b, 0x22, 0x0f, 0x70, 0x83, 0x2e, 0x51, 0x2c,
-  0x89, 0x53, 0x13, 0x2b, 0x83, 0xc3, 0x7c, 0x78, 0x98, 0xbb, 0xed, 0x61,
-  0x7e, 0x40, 0xb1, 0x0c, 0x04, 0x1e, 0x3f, 0x87, 0xf4, 0xf5, 0xc5, 0x83,
-  0x11, 0x25, 0x26, 0x5d, 0x4b, 0xa8, 0xf2, 0x96, 0x09, 0xa1, 0xdb, 0x1e,
-  0x76, 0x53, 0xd2, 0xdb, 0x05, 0x93, 0x81, 0x95, 0xbb, 0x75, 0x11, 0x25,
-  0xde, 0xf0, 0x90, 0x37, 0xc3, 0xdf, 0x41, 0x96, 0x38, 0x65, 0xfd, 0x66,
-  0x42, 0xf6, 0xba, 0x22, 0xcf, 0x08, 0x55, 0x85, 0xf4, 0x12, 0xe6, 0x25,
-  0x00, 0x3b, 0x19, 0xe6, 0x91, 0xec, 0x03, 0xe2, 0x3b, 0x48, 0x6d, 0x7a,
-  0xfa, 0x28, 0x8e, 0x5e, 0x39, 0xbb, 0x3c, 0x3e, 0x50, 0x39, 0xd2, 0xc7,
-  0x60, 0x9b, 0xd2, 0x2c, 0xd1, 0x10, 0x9c, 0x37, 0xc5, 0x79, 0xc4, 0x0c,
-  0x32, 0x16, 0xcc, 0xae, 0xdf, 0x81, 0xb0, 0x82, 0x64, 0x01, 0x4e, 0x10,
-  0x12, 0xdb, 0x59, 0x1d, 0x79, 0x8e, 0xcc, 0x57, 0x64, 0xd5, 0x02, 0xdd,
-  0x7a, 0xd4, 0x5d, 0xf5, 0x98, 0x30, 0x6d, 0xd8, 0x52, 0x00, 0x78, 0x21,
-  0x14, 0x1a, 0x2d, 0x96, 0x50, 0x08, 0x04, 0x2d, 0x03, 0x28, 0x2e, 0x88,
-  0xb9, 0x95, 0x91, 0xdb, 0x0b, 0xd8, 0xa6, 0x6c, 0x22, 0xe4, 0xc5, 0xc2,
-  0x25, 0xe1, 0x43, 0x3f, 0xdb, 0xc4, 0x5b, 0x4e, 0x96, 0xf5, 0x3f, 0x95,
-  0x78, 0xdd, 0x6d, 0xfc, 0x69, 0xbe, 0x55, 0x8b, 0x0e, 0xea, 0x00, 0xfb,
-  0x62, 0xe6, 0xb8, 0x64, 0x70, 0xbd, 0xea, 0x17, 0x1f, 0x06, 0xb5, 0xbc,
-  0x40, 0x74, 0xec, 0x10, 0x1a, 0x8d, 0xfc, 0x7d, 0xaa, 0xa3, 0xbb, 0xf5,
-  0x59, 0xd8, 0x71, 0x56, 0x07, 0x09, 0x59, 0x2d, 0xee, 0xa0, 0x6b, 0xb1,
-  0xd8, 0x4e, 0xc2, 0x4d, 0x94, 0xfc, 0xeb, 0xec, 0x8d, 0xca, 0x7c, 0xfb,
-  0x6b, 0xb1, 0x94, 0xe0, 0x4c, 0xcb, 0x9a, 0x90, 0xe1, 0x71, 0x8d, 0x09,
-  0x67, 0x9b, 0x71, 0x03, 0xaa, 0x38, 0x34, 0x36, 0x49, 0xc7, 0xa4, 0x31,
-  0x4e, 0x57, 0xf3, 0xde, 0x30, 0xf9, 0xca, 0xc5, 0xd7, 0xca, 0xd9, 0x52,
-  0x9b, 0x55, 0xac, 0x2a, 0x22, 0x83, 0x90, 0xba, 0x7d, 0xb2, 0xdb, 0x68,
-  0x6f, 0xa8, 0xd5, 0x66, 0x83, 0x90, 0xeb, 0x22, 0x19, 0xec, 0xb9, 0x38,
-  0x32, 0x96, 0xf4, 0xa1, 0xac, 0xb7, 0x63, 0xfd, 0xbb, 0xaa, 0xb4, 0xfe,
-  0x96, 0x57, 0x50, 0x56, 0xa7, 0x7c, 0xc7, 0x7f, 0xc4, 0x53, 0x5f, 0x87,
-  0xb0, 0x37, 0x62, 0xde, 0x97, 0x6a, 0x61, 0x28, 0x71, 0xc0, 0xf1, 0x7e,
-  0xaa, 0x4a, 0x72, 0x5a, 0x78, 0x12, 0x59, 0x8d, 0x5f, 0x6b, 0x2f, 0x16,
-  0xdf, 0xb4, 0x85, 0xf3, 0xe4, 0x12, 0x5c, 0x1e, 0x09, 0x88, 0x79, 0xb2,
-  0xc5, 0x60, 0x72, 0x4f, 0x3e, 0x7f, 0xf2, 0x78, 0xbb, 0xe9, 0xd0, 0xdb,
-  0xee, 0xb0, 0x1a, 0x63, 0xd5, 0x56, 0x95, 0x4b, 0xa5, 0x99, 0xe7, 0xc0,
-  0xdb, 0x87, 0x15, 0x5e, 0xcd, 0xcf, 0x02, 0x5b, 0x0e, 0xb9, 0x1b, 0xda,
-  0x63, 0x2e, 0xde, 0xa9, 0x38, 0x96, 0x12, 0x05, 0x10, 0xe4, 0xf5, 0x2d,
-  0x4b, 0x52, 0x74, 0xec, 0xc5, 0x25, 0x31, 0x49, 0xb4, 0x1c, 0x18, 0x89,
-  0x8b, 0xbe, 0xe4, 0x68, 0xd2, 0xba, 0xcb, 0x3c, 0x03, 0xb9, 0x42, 0xeb,
-  0x60, 0x20, 0xca, 0x86, 0x23, 0x30, 0x8b, 0x80, 0x6b, 0x09, 0x94, 0x8d,
-  0xd0, 0x92, 0xf1, 0xc5, 0xa4, 0x2b, 0xf8, 0x91, 0xce, 0xae, 0xab, 0xd5,
-  0xe3, 0x17, 0x52, 0x22, 0x78, 0x80, 0x07, 0xc0, 0xfb, 0x6f, 0x2d, 0xa8,
-  0x03, 0xd0, 0x97, 0x9e, 0x88, 0x34, 0xeb, 0x79, 0x36, 0x37, 0x68, 0x38,
-  0xb9, 0x02, 0x8a, 0xd2, 0x03, 0x78, 0x8b, 0xee, 0x26, 0xdc, 0x1c, 0xd1,
-  0x04, 0xeb, 0x00, 0xb4, 0x7d, 0xf5, 0x37, 0x4d, 0x7d, 0x6b, 0x0c, 0x6c,
-  0x0d, 0x5c, 0xaf, 0x23, 0xb6, 0x30, 0x27, 0x45, 0xed, 0xa7, 0x08, 0x2e,
-  0xb1, 0xdf, 0x1d, 0x51, 0xc6, 0x20, 0xd6, 0xd2, 0x69, 0x6b, 0x19, 0xd6,
-  0x0c, 0x5e, 0x70, 0xac, 0x91, 0x4c, 0xb4, 0xae, 0x46, 0x6a, 0xb2, 0x85,
-  0xf1, 0xee, 0xec, 0x6c, 0x7f, 0x74, 0xcc, 0xfa, 0xe0, 0xc7, 0xc6, 0x78,
-  0x2e, 0xc5, 0xee, 0x78, 0x71, 0x2d, 0xff, 0x94, 0xe8, 0xce, 0x0f, 0x82,
-  0x3b, 0xcd, 0x91, 0xf6, 0xc1, 0xf4, 0x23, 0x01, 0x06, 0x2e, 0x3e, 0xeb,
-  0x2e, 0x4a, 0x13, 0x77, 0xeb, 0x2c, 0xb3, 0x6b, 0x4e, 0x5c, 0xaf, 0x0a,
-  0xc9, 0x70, 0x52, 0x9e, 0x60, 0x71, 0x9b, 0x43, 0x06, 0x7f, 0x89, 0x6a,
-  0x31, 0x04, 0xa3, 0xc2, 0x71, 0x08, 0xe6, 0x27, 0xc1, 0x20, 0xde, 0x1b,
-  0x22, 0xc7, 0xc2, 0x24, 0x4a, 0xf1, 0x9a, 0xc4, 0xac, 0xd8, 0x9e, 0x6e,
-  0x15, 0xe7, 0x18, 0x46, 0x19, 0xfe, 0xf2, 0x20, 0x1f, 0x1e, 0x97, 0x5e,
-  0x9d, 0x2f, 0xba, 0xc4, 0x53, 0x67, 0xf4, 0xd6, 0x36, 0x49, 0xa2, 0xbf,
-  0xf5, 0xf3, 0x16, 0x8c, 0x0e, 0x2b, 0xf6, 0xe1, 0xf3, 0xcc, 0xba, 0x62,
-  0xa4, 0x75, 0x6c, 0x8e, 0xba, 0xb1, 0x66, 0x56, 0x7b, 0x02, 0x9f, 0x36,
-  0x96, 0xb3, 0x2f, 0x87, 0x14, 0x41, 0x6f, 0x5d, 0x12, 0x13, 0x90, 0x50,
-  0x1f, 0xbc, 0x16, 0x3f, 0x63, 0x15, 0x28, 0xbf, 0xea, 0xa8, 0xcc, 0x3a,
-  0xcb, 0xc7, 0x6e, 0xa1, 0xd5, 0x85, 0x3d, 0x0c, 0x6e, 0xd0, 0x05, 0x6b,
-  0x94, 0xa4, 0x76, 0x95, 0x93, 0x48, 0x89, 0xbc, 0xf5, 0x89, 0xf8, 0x15,
-  0x02, 0x5d, 0xb1, 0x48, 0x43, 0x3c, 0x4c, 0xdd, 0xbf, 0xd3, 0x5f, 0x0a,
-  0x17, 0x95, 0xb8, 0x1d, 0x1e, 0x8a, 0x8e, 0xe8, 0xb3, 0xcd, 0xca, 0x85,
-  0xcb, 0xa9, 0x67, 0x95, 0x99, 0x24, 0x10, 0x85, 0x14, 0x23, 0x60, 0x31,
-  0x4d, 0xbc, 0x9b, 0xc7, 0x01, 0x58, 0xde, 0x2f, 0xa3, 0x38, 0x14, 0x4d,
-  0x8f, 0x02, 0x8d, 0x70, 0x23, 0x48, 0xdf, 0x93, 0x38, 0x4c, 0xef, 0x71,
-  0x73, 0x45, 0x8c, 0xc3, 0xec, 0x57, 0x29, 0xc1, 0xd0, 0x31, 0xba, 0x96,
-  0x76, 0x22, 0x6e, 0x26, 0xcc, 0x71, 0x8b, 0x6e, 0x05, 0xe6, 0xe6, 0xf5,
-  0x72, 0x6b, 0x6f, 0x5b, 0x70, 0xce, 0x14, 0x8b, 0x7a, 0x4d, 0xf2, 0x83,
-  0x5c, 0x35, 0x56, 0xb0, 0x8c, 0xcb, 0x4f, 0x99, 0xcb, 0x83, 0x19, 0x1f,
-  0x40, 0x28, 0x11, 0xd1, 0x75, 0x25, 0xe7, 0x41, 0xa8, 0x43, 0x3d, 0xca,
-  0x6c, 0xaf, 0xee, 0x20, 0x4e, 0x49, 0xba, 0x5f, 0x72, 0xd8, 0x61, 0x25,
-  0x45, 0x41, 0xb6, 0x3c, 0xe2, 0xa9, 0x5c, 0x0f, 0x56, 0x2a, 0x8b, 0x56,
-  0x6f, 0x36, 0x1d, 0x00, 0xa1, 0xe4, 0xba, 0x2c, 0x62, 0xec, 0x23, 0x8e,
-  0x19, 0xd7, 0x1b, 0x44, 0x64, 0xe8, 0xce, 0xea, 0x64, 0x3d, 0x8e, 0x90,
-  0xed, 0x85, 0x55, 0xff, 0x2c, 0x0e, 0xb7, 0x6d, 0x43, 0x6c, 0x6c, 0x69,
-  0x44, 0xa6, 0x87, 0xc9, 0xdf, 0x57, 0x39, 0x91, 0x35, 0xef, 0x2d, 0x02,
-  0x1d, 0x10, 0x6e, 0x99, 0x39, 0xef, 0x15, 0x71, 0x0f, 0x76, 0xd0, 0x89,
-  0xea, 0xc8, 0xb6, 0x2b, 0xc4, 0xf0, 0x1b, 0x95, 0x75, 0x94, 0x61, 0x63,
-  0x3b, 0x81, 0x13, 0x08, 0x00, 0x7b, 0x56, 0xa8, 0x13, 0x01, 0x21, 0x00,
-  0xe2, 0x94, 0x9c, 0x16, 0x1c, 0x33, 0xc7, 0xac, 0x5d, 0xa8, 0x60, 0x1d,
-  0x18, 0xf7, 0xe6, 0xfc, 0x9e, 0x2f, 0xb2, 0xcd, 0x06, 0xe9, 0x25, 0x9b,
-  0x15, 0x2b, 0xff, 0xf5, 0xa6, 0xad, 0x2f, 0xdc, 0xfa, 0x0f, 0x00, 0xfb,
-  0xaf, 0xeb, 0x5a, 0x48, 0x5b, 0xba, 0xf0, 0xad, 0x4b, 0xe3, 0xfe, 0x08,
-  0xbe, 0xe9, 0x4b, 0x08, 0xda, 0x78, 0xc5, 0x9e, 0xd2, 0x56, 0xd3, 0x2f,
-  0x85, 0x5b, 0x8b, 0x54, 0x20, 0x4f, 0x68, 0xd9, 0x10, 0x84, 0x87, 0x49,
-  0xe8, 0x67, 0xc5, 0x69, 0x0c, 0xf3, 0xb0, 0xf8, 0x0e, 0xea, 0x7d, 0x55,
-  0xb1, 0x50, 0xb7, 0x92, 0x1a, 0xa0, 0xfd, 0x26, 0x6e, 0x41, 0x2b, 0x8a,
-  0x41, 0xba, 0x61, 0xe7, 0x69, 0xd8, 0x7c, 0x97, 0xaf, 0x0a, 0xaf, 0xc3,
-  0xc3, 0x02, 0xf3, 0xbc, 0xa8, 0x49, 0x56, 0x2f, 0x57, 0xe0, 0x01, 0xa4,
-  0x09, 0x07, 0x64, 0x4a, 0xeb, 0x31, 0xb9, 0x59, 0x2d, 0x6e, 0x69, 0x08,
-  0x71, 0x04, 0x82, 0x19, 0x34, 0x73, 0x3e, 0xdb, 0x44, 0x20, 0x0a, 0x77,
-  0x61, 0xc9, 0x88, 0xd2, 0x02, 0x23, 0x13, 0xbc, 0x87, 0x58, 0x12, 0x41,
-  0x43, 0x77, 0x8d, 0x4e, 0xaf, 0x3b, 0x19, 0x95, 0x5b, 0xc0, 0x87, 0x32,
-  0x22, 0x02, 0xdc, 0xdc, 0x45, 0x76, 0x8d, 0x90, 0x02, 0x95, 0x47, 0x25,
-  0x2f, 0xc3, 0x92, 0x88, 0xa1, 0x28, 0x58, 0x49, 0x89, 0xe8, 0xc8, 0xae,
-  0x2a, 0xa9, 0x65, 0xa1, 0xdb, 0x9a, 0xa0, 0x3c, 0xab, 0x87, 0x87, 0xe9,
-  0x18, 0x89, 0xf2, 0xe1, 0x41, 0x47, 0xb6, 0xc0, 0x65, 0x1b, 0x38, 0xd5,
-  0x13, 0xa3, 0xbd, 0xd6, 0x6f, 0xc0, 0x82, 0x09, 0xd4, 0x8c, 0xc4, 0xf2,
-  0xad, 0x29, 0xca, 0xbb, 0x45, 0x3a, 0x46, 0x31, 0x5b, 0x09, 0x9c, 0x3f,
-  0x5b, 0x50, 0x38, 0xae, 0x73, 0xdb, 0x4e, 0x93, 0x9c, 0x3f, 0xd1, 0x72,
-  0xa5, 0x32, 0x86, 0x5c, 0x04, 0x5d, 0x60, 0x4d, 0xe2, 0x94, 0x0b, 0xaa,
-  0x6b, 0x08, 0x24, 0x8f, 0x69, 0x7b, 0xac, 0x04, 0x04, 0xcd, 0x2d, 0x11,
-  0xda, 0xfe, 0xbe, 0x30, 0x36, 0x1b, 0x99, 0x1b, 0x4c, 0x99, 0x08, 0xd7,
-  0xc3, 0x62, 0x42, 0x21, 0x1a, 0x78, 0xa8, 0xfc, 0x10, 0xfc, 0x07, 0x0a,
-  0x07, 0x77, 0xf6, 0xa0, 0xcf, 0xb2, 0x79, 0x6d, 0xee, 0x85, 0xc0, 0xe9,
-  0x9d, 0x6b, 0xed, 0x8b, 0x23, 0xc2, 0x3b, 0xac, 0x62, 0xbf, 0x0e, 0x4d,
-  0xa5, 0xf5, 0x7b, 0x8c, 0x6a, 0xbe, 0x62, 0xa3, 0x62, 0x14, 0x16, 0x45,
-  0xbb, 0x32, 0x5b, 0x09, 0xea, 0x22, 0x3b, 0xa8, 0xbc, 0x88, 0x9e, 0x8e,
-  0x79, 0x73, 0xc6, 0xf7, 0x6e, 0x9e, 0xae, 0x34, 0x3d, 0xdd, 0x0b, 0xce,
-  0xc2, 0x18, 0x93, 0x87, 0x3d, 0xd6, 0xea, 0xe7, 0x3b, 0xe5, 0xad, 0x11,
-  0x59, 0x88, 0xd1, 0xd3, 0x2b, 0x55, 0xe2, 0xcb, 0xe3, 0x25, 0x33, 0x26,
-  0xbb, 0xea, 0x30, 0xb0, 0xb9, 0xc1, 0x98, 0xb8, 0xce, 0x2e, 0xe7, 0xd4,
-  0x8a, 0x2c, 0x8a, 0xd9, 0x52, 0x5e, 0xb7, 0x10, 0xd5, 0xa2, 0x19, 0x11,
-  0xbd, 0xb0, 0xa0, 0xb7, 0x35, 0xc0, 0x76, 0xc7, 0x5a, 0x0a, 0x29, 0x69,
-  0x44, 0xc8, 0x45, 0x97, 0x30, 0x5f, 0x50, 0x8d, 0x27, 0x22, 0xa5, 0x02,
-  0xd0, 0x4a, 0x1c, 0x6d, 0x40, 0x9b, 0x44, 0x32, 0xa0, 0x80, 0x96, 0xbd,
-  0xce, 0x27, 0x65, 0x51, 0x15, 0x57, 0x62, 0x63, 0xf2, 0x40, 0xac, 0x1a,
-  0x16, 0xc5, 0x28, 0x49, 0x29, 0xe7, 0x34, 0xc4, 0x72, 0x85, 0xea, 0xcc,
-  0xbc, 0x57, 0x82, 0x36, 0x51, 0xe6, 0x73, 0xe5, 0x48, 0xec, 0x5c, 0xac,
-  0x05, 0xe1, 0x26, 0x4d, 0x4c, 0x47, 0x84, 0x3c, 0x60, 0x41, 0x94, 0x4f,
-  0x1e, 0x8e, 0xbb, 0xe1, 0xad, 0xd0, 0x12, 0xef, 0xe6, 0x0e, 0x9c, 0x6a,
-  0x89, 0x49, 0x2d, 0xcf, 0x24, 0xc6, 0x4b, 0x7b, 0xad, 0x7b, 0x74, 0x16,
-  0xee, 0x00, 0x64, 0x75, 0xf8, 0x21, 0xc3, 0x3a, 0xc2, 0x1c, 0x1a, 0x78,
-  0x72, 0x7c, 0xf9, 0x2a, 0x99, 0x96, 0xa4, 0xe8, 0xc9, 0xcf, 0x01, 0x89,
-  0xb2, 0xff, 0x48, 0x23, 0x30, 0xa3, 0x6a, 0xc9, 0x9b, 0x34, 0x60, 0x95,
-  0x68, 0xb0, 0xfb, 0x78, 0x58, 0x7f, 0xe8, 0x8c, 0x1d, 0x0c, 0xe3, 0xec,
-  0xb4, 0x46, 0x9c, 0xdf, 0x2e, 0x45, 0x7a, 0x29, 0x11, 0x45, 0xfb, 0xe1,
-  0xbe, 0x3d, 0xe3, 0x7e, 0x17, 0x98, 0xb1, 0xb0, 0x45, 0x3c, 0xef, 0xa9,
-  0xe4, 0x53, 0x03, 0x31, 0x3b, 0xe3, 0x30, 0x25, 0xf4, 0xb2, 0x19, 0x5c,
-  0x19, 0xd7, 0xbd, 0x7b, 0x38, 0xd4, 0xd2, 0x42, 0x2b, 0xb1, 0x80, 0xd0,
-  0x50, 0x64, 0x5e, 0xfa, 0x55, 0x47, 0xad, 0x44, 0x44, 0xb0, 0x35, 0x68,
-  0x73, 0x4d, 0xd8, 0xcf, 0x2a, 0x2e, 0x61, 0xc0, 0x8b, 0x8a, 0x70, 0x5a,
-  0xd0, 0x81, 0x71, 0xea, 0x94, 0x24, 0xfd, 0x5b, 0x1a, 0xd3, 0xca, 0x90,
-  0x71, 0xd6, 0xd6, 0xf3, 0x04, 0x7e, 0xa8, 0xe1, 0x9a, 0xb6, 0xa8, 0x0c,
-  0x66, 0x53, 0x57, 0xeb, 0x93, 0x8d, 0x60, 0x1a, 0x34, 0xd0, 0x76, 0x5a,
-  0x6e, 0x0e, 0x88, 0x61, 0x1f, 0x6c, 0x0a, 0x9d, 0x67, 0x0b, 0xae, 0x11,
-  0x27, 0xd4, 0x0d, 0x7e, 0xea, 0x44, 0xa6, 0xa6, 0x6c, 0xe4, 0xd2, 0xe1,
-  0x07, 0xab, 0xee, 0xd1, 0x11, 0x2f, 0x64, 0x39, 0x56, 0x7c, 0x2c, 0x5a,
-  0x4e, 0xf7, 0x9f, 0x82, 0xed, 0x16, 0x32, 0x9f, 0x20, 0xa0, 0xff, 0x21,
-  0x81, 0x4a, 0xd9, 0xb9, 0x0f, 0xfe, 0x57, 0x6f, 0x43, 0x65, 0x71, 0x7c,
-  0x97, 0x47, 0xe7, 0x81, 0x73, 0xb5, 0x1f, 0xdb, 0x97, 0x7c, 0xf6, 0xbb,
-  0x26, 0x24, 0x2d, 0x5c, 0xeb, 0xf3, 0x7f, 0xa2, 0x90, 0xe1, 0x67, 0x10,
-  0xc8, 0x19, 0xee, 0xc3, 0xd6, 0xd2, 0x28, 0xde, 0x43, 0x3e, 0xed, 0x86,
-  0x2d, 0xd0, 0x15, 0x32, 0x18, 0x6f, 0x5d, 0x23, 0x46, 0x18, 0x30, 0x50,
-  0x8d, 0x93, 0x97, 0x34, 0x1a, 0x16, 0x79, 0x59, 0xd7, 0xf7, 0xf6, 0xc9,
-  0x58, 0x54, 0xf7, 0xb6, 0x6a, 0x5c, 0x91, 0xa8, 0x38, 0xe9, 0xc3, 0xb8,
-  0xb8, 0x8d, 0x2c, 0x84, 0x9a, 0xd3, 0xf2, 0x6c, 0x8a, 0xe7, 0xd2, 0x0d,
-  0xb8, 0xc7, 0x56, 0xf8, 0x12, 0x06, 0x69, 0x52, 0x3d, 0x56, 0xec, 0xa5,
-  0x1f, 0xdf, 0x1b, 0xd4, 0x81, 0x82, 0x44, 0x96, 0x19, 0x8f, 0xb9, 0x39,
-  0xe0, 0xaa, 0x83, 0x15, 0x21, 0x75, 0x26, 0x9b, 0x6b, 0x0e, 0xec, 0xb8,
-  0x2c, 0x6e, 0xe9, 0xb4, 0xf2, 0x6b, 0xd0, 0x50, 0x78, 0xf5, 0xe5, 0x36,
-  0x30, 0x2d, 0x9e, 0xee, 0x6e, 0x01, 0xd9, 0xea, 0x00, 0xd5, 0x33, 0xb4,
-  0x6c, 0xf3, 0x1c, 0x7b, 0xb1, 0x53, 0x10, 0x4d, 0x91, 0xeb, 0x68, 0xec,
-  0x12, 0xb6, 0x70, 0x2e, 0xdd, 0xe8, 0xa3, 0xa8, 0x62, 0xbf, 0xa1, 0x22,
-  0xd1, 0xfe, 0xf3, 0x68, 0xc8, 0x91, 0x45, 0x48, 0x43, 0x1d, 0x5b, 0xde,
-  0x20, 0x26, 0x61, 0xfb, 0xcf, 0x89, 0xaa, 0x84, 0xa1, 0xb3, 0x11, 0xb4,
-  0x6d, 0x85, 0x07, 0xa0, 0xf3, 0x20, 0x48, 0xce, 0xd7, 0x78, 0xe5, 0x2b,
-  0xf5, 0xf6, 0x8b, 0x73, 0x7c, 0xea, 0x51, 0xe8, 0x53, 0xb9, 0x4d, 0x60,
-  0xd1, 0x88, 0x05, 0x3a, 0x16, 0x7f, 0x9d, 0x78, 0x24, 0x2a, 0x2c, 0xf8,
-  0x04, 0x6f, 0x0f, 0x00, 0x4d, 0x90, 0x4e, 0xa7, 0xde, 0x8d, 0x7f, 0x0d,
-  0x53, 0xc1, 0xa5, 0xa7, 0x48, 0x79, 0x13, 0x64, 0x56, 0x17, 0x7d, 0x20,
-  0x71, 0x7e, 0x2e, 0xd5, 0x89, 0xf1, 0xfc, 0x42, 0x9e, 0x81, 0xa1, 0x0d,
-  0x93, 0x63, 0x0e, 0x25, 0xe8, 0xd0, 0x28, 0x2d, 0x31, 0x06, 0x73, 0xcc,
-  0x15, 0x28, 0x4b, 0x32, 0xcc, 0x55, 0x3f, 0x67, 0x18, 0xa2, 0xb9, 0xe5,
-  0xf7, 0x73, 0x50, 0x81, 0xab, 0x57, 0xd6, 0xa9, 0x5d, 0x57, 0xb5, 0x40,
-  0xf7, 0x24, 0x06, 0xc3, 0x6c, 0x1f, 0x39, 0x50, 0xd6, 0x57, 0x3e, 0x18,
-  0xb4, 0x2f, 0xd6, 0x3a, 0x51, 0x7c, 0x3b, 0x44, 0x75, 0x8c, 0x26, 0xf1,
-  0x0f, 0xf5, 0x83, 0xdf, 0x0f, 0x3e, 0xdf, 0xb5, 0x6a, 0xc4, 0x6c, 0x1e,
-  0x0d, 0x9f, 0x01, 0x5c, 0x76, 0x87, 0xc2, 0x06, 0x68, 0x9f, 0xa2, 0x76,
-  0x8f, 0xb6, 0xa1, 0x94, 0x9f, 0x0d, 0x1f, 0x6f, 0x37, 0xe8, 0xa5, 0x9e,
-  0xcd, 0x63, 0x09, 0xf0, 0xcd, 0xe5, 0xe9, 0xeb, 0x24, 0x92, 0xfc, 0xc4,
-  0x36, 0x81, 0xef, 0x9a, 0x5f, 0xfd, 0x57, 0x24, 0x40, 0xfa, 0xe2, 0xe4,
-  0x64, 0x04, 0xf9, 0x4f, 0xa3, 0xe7, 0xa3, 0x80, 0xad, 0x5a, 0xf1, 0x34,
-  0xf8, 0x06, 0x2d, 0xf3, 0xac, 0x66, 0x59, 0xc3, 0xec, 0xa7, 0x9c, 0x74,
-  0xc6, 0x2f, 0x65, 0x83, 0x6c, 0x41, 0xaa, 0x7d, 0x06, 0x2d, 0x99, 0x31,
-  0x72, 0x67, 0xe0, 0x4a, 0xcb, 0xac, 0xe8, 0xb0, 0xa1, 0xcb, 0x00, 0x8c,
-  0xa5, 0xc8, 0xda, 0xe0, 0xae, 0x18, 0xa7, 0x95, 0x43, 0xb5, 0x20, 0xa1,
-  0x94, 0x28, 0x8e, 0x45, 0x0a, 0x35, 0x7c, 0xdd, 0xe6, 0xc8, 0x6c, 0x8c,
-  0x32, 0xfe, 0xb4, 0x70, 0x92, 0x63, 0x87, 0x66, 0xfb, 0x59, 0x4c, 0x8b,
-  0x12, 0x0e, 0xa9, 0x00, 0x1d, 0x90, 0x21, 0x74, 0x57, 0x08, 0xa9, 0xe3,
-  0xe1, 0xdd, 0x77, 0xe8, 0x46, 0x37, 0x85, 0x44, 0xb4, 0x61, 0x99, 0x99,
-  0x2b, 0x49, 0x66, 0x06, 0x42, 0x5f, 0x14, 0x3d, 0x4e, 0x11, 0xfb, 0x8d,
-  0x95, 0x84, 0x1b, 0xd5, 0x15, 0x79, 0xed, 0x8a, 0xdb, 0x4a, 0xa2, 0x8d,
-  0xc7, 0x5e, 0x7c, 0x99, 0x5f, 0xaf, 0x41, 0x79, 0x95, 0x00, 0xb9, 0xb6,
-  0x8c, 0xc9, 0x23, 0x72, 0xe2, 0xa5, 0xb0, 0x99, 0x36, 0x8a, 0x78, 0x47,
-  0x06, 0x74, 0x43, 0xb8, 0x24, 0x6a, 0x7b, 0x30, 0x07, 0xe3, 0x61, 0xa9,
-  0x12, 0x17, 0x88, 0x89, 0x94, 0x82, 0x53, 0x4f, 0xd2, 0x62, 0x64, 0x87,
-  0x0e, 0x64, 0xc7, 0xf5, 0x69, 0x39, 0x3c, 0x9b, 0xe1, 0x3f, 0xa3, 0x24,
-  0x8a, 0x3f, 0x6c, 0x05, 0x0b, 0x91, 0x6a, 0x7e, 0xe9, 0x0c, 0x83, 0xfe,
-  0x5e, 0x00, 0x2d, 0xd4, 0x40, 0x53, 0xe8, 0x43, 0x21, 0x62, 0x6a, 0x55,
-  0x4f, 0x8b, 0x95, 0x44, 0xf8, 0x23, 0x66, 0xa8, 0xb4, 0xdb, 0xfb, 0xdf,
-  0xff, 0x33, 0x4e, 0x59, 0xf8, 0xf1, 0x67, 0x31, 0xe2, 0x49, 0xd2, 0xb0,
-  0xf7, 0xfe, 0x1a, 0xe9, 0x54, 0x1e, 0xb4, 0x9a, 0x37, 0x89, 0x51, 0x3a,
-  0xc4, 0x01, 0x2a, 0x47, 0xa8, 0x2d, 0x9c, 0xaa, 0xbb, 0x56, 0xaf, 0x5e,
-  0x1d, 0x9b, 0xf1, 0x7d, 0xa0, 0xe8, 0xa7, 0x81, 0xb5, 0x52, 0xec, 0x58,
-  0x63, 0x18, 0xf1, 0x25, 0x0b, 0x7c, 0x1d, 0xae, 0xa6, 0xa5, 0xd8, 0x37,
-  0xe1, 0xd2, 0x91, 0xdc, 0x2c, 0x1e, 0x36, 0x8c, 0x9f, 0x6f, 0x96, 0x53,
-  0x29, 0x40, 0x14, 0xe3, 0x9d, 0xc9, 0xde, 0xaa, 0x27, 0xe9, 0xdf, 0x69,
-  0x2f, 0xfa, 0xf5, 0x5d, 0xf1, 0x9f, 0x43, 0x0e, 0x15, 0x03, 0xe3, 0x1d,
-  0x14, 0x52, 0x1d, 0xf2, 0xdd, 0x1f, 0xf7, 0x58, 0xa9, 0xea, 0xc5, 0x55,
-  0x1f, 0xb1, 0x02, 0xb6, 0xc5, 0x0e, 0x79, 0x60, 0x0d, 0xbc, 0x5a, 0xb3,
-  0x3b, 0xee, 0xa5, 0xcf, 0x57, 0xc0, 0x7f, 0x0e, 0xf9, 0xe7, 0x8f, 0x7b,
-  0x83, 0x27, 0x3f, 0xbb, 0x5e, 0xff, 0xb8, 0xf7, 0xee, 0x8f, 0xfb, 0xbd,
-  0xce, 0xb2, 0xa7, 0xac, 0x77, 0xae, 0x0c, 0x62, 0xdd, 0x44, 0x75, 0xad,
-  0x97, 0x2e, 0x0e, 0x7a, 0xd5, 0xeb, 0xbd, 0x9f, 0x1c, 0x98, 0xe2, 0x71,
-  0xbc, 0x3b, 0xdb, 0xfb, 0x3e, 0x02, 0xed, 0x19, 0x96, 0x9f, 0x0b, 0xb4,
-  0x16, 0xad, 0xc6, 0x26, 0xe6, 0x1a, 0x78, 0x95, 0xcc, 0x70, 0x1c, 0xd9,
-  0xa8, 0x01, 0x43, 0x36, 0xbd, 0xa7, 0x7b, 0x4e, 0xa0, 0xd0, 0x86, 0x2e,
-  0xaa, 0xc5, 0xa4, 0x47, 0xab, 0x7f, 0x2e, 0xa8, 0x28, 0x5b, 0xee, 0xc6,
-  0x67, 0xf8, 0x8c, 0xed, 0x2e, 0x1b, 0x90, 0x37, 0xbe, 0x79, 0x9a, 0xd7,
-  0x5a, 0x61, 0x38, 0xbc, 0x42, 0xec, 0xfe, 0x00, 0xb5, 0xe1, 0xc8, 0x3e,
-  0x72, 0x7c, 0xd2, 0xd0, 0x0d, 0x28, 0x78, 0xfb, 0x5a, 0xf9, 0x34, 0x33,
-  0x57, 0x25, 0xbe, 0xba, 0xcb, 0x20, 0xbd, 0xb6, 0xef, 0x9d, 0xad, 0x33,
-  0xa7, 0xeb, 0x88, 0x99, 0x2c, 0x00, 0x6d, 0x0d, 0x5f, 0x0f, 0x02, 0x0f,
-  0xb2, 0xc4, 0x8a, 0x79, 0x4e, 0x56, 0x75, 0x9c, 0x7c, 0x3d, 0xdc, 0xee,
-  0x8a, 0xbc, 0x0e, 0xdb, 0x82, 0x14, 0xe1, 0x43, 0x64, 0x93, 0x4a, 0xb0,
-  0xe0, 0x45, 0x1f, 0x14, 0x30, 0x34, 0xe6, 0x45, 0x12, 0xcb, 0x17, 0xcb,
-  0x26, 0xae, 0xc8, 0x5b, 0xdf, 0x41, 0x30, 0x66, 0xb3, 0x2a, 0xa6, 0x8d,
-  0x23, 0x76, 0xaa, 0x31, 0xa0, 0x50, 0x8d, 0x1c, 0xbe, 0x7e, 0x58, 0xf2,
-  0xcb, 0xe5, 0x2e, 0xa5, 0xef, 0xbd, 0xbb, 0xcc, 0xce, 0xa8, 0xc6, 0x1e,
-  0xc7, 0x98, 0x19, 0xea, 0x6b, 0x68, 0x9a, 0x27, 0x1c, 0x22, 0x63, 0xea,
-  0xea, 0x30, 0x04, 0xc9, 0x47, 0x3e, 0x07, 0x31, 0x12, 0x89, 0x18, 0xb6,
-  0x83, 0x43, 0x7b, 0xc1, 0x9e, 0x24, 0x4b, 0xa8, 0x35, 0x82, 0xc0, 0x65,
-  0xa5, 0x39, 0xf7, 0xfc, 0xac, 0x80, 0xb0, 0x74, 0x39, 0x6f, 0x1d, 0xb7,
-  0x89, 0x31, 0xed, 0xb8, 0xc6, 0xfc, 0x1f, 0xba, 0x4e, 0xe8, 0xaf, 0x3d,
-  0xa0, 0x1f, 0x3d, 0xa1, 0x74, 0x0b, 0xf0, 0xc5, 0xb9, 0x3f, 0x18, 0x67,
-  0xc4, 0xc1, 0xdb, 0x6c, 0x7b, 0xeb, 0xe4, 0xf5, 0xe1, 0xf9, 0xce, 0xf9,
-  0xd9, 0xf9, 0xa3, 0x1d, 0x09, 0x10, 0x6a, 0x46, 0x8f, 0x7d, 0x85, 0x77,
-  0x92, 0x4b, 0xe8, 0x46, 0x4c, 0x23, 0x67, 0x5c, 0xd2, 0x32, 0xd9, 0x1f,
-  0xee, 0xaa, 0x00, 0xf5, 0xa0, 0xc5, 0x4b, 0xa5, 0xb8, 0x46, 0x23, 0x81,
-  0x31, 0x8e, 0x04, 0xdf, 0xbf, 0xad, 0x9a, 0xf0, 0xb3, 0x5d, 0x8e, 0x39,
-  0x2b, 0x2a, 0xae, 0xd2, 0x32, 0x5b, 0x98, 0xc7, 0x61, 0x10, 0x26, 0x57,
-  0x7f, 0x0f, 0x4e, 0x8b, 0x82, 0x0d, 0x95, 0x6c, 0x47, 0x89, 0x6e, 0x6b,
-  0x34, 0xb8, 0x1e, 0x57, 0xb8, 0x35, 0x56, 0x4d, 0x82, 0x36, 0x3b, 0x48,
-  0x99, 0xa9, 0x53, 0x4f, 0xe4, 0xa0, 0x46, 0xdd, 0xf7, 0x8e, 0xc2, 0xef,
-  0x4f, 0x3f, 0x7b, 0xb2, 0xfb, 0x3b, 0x46, 0xd0, 0x2c, 0xfb, 0x26, 0xe9,
-  0xd4, 0x1c, 0x0b, 0x3e, 0xeb, 0xb2, 0x3d, 0x59, 0x05, 0x02, 0x91, 0x9f,
-  0xac, 0xb3, 0xad, 0xc1, 0x07, 0xf7, 0x6e, 0x57, 0xc2, 0x23, 0xfc, 0xe6,
-  0x91, 0xff, 0x7e, 0x31, 0xb0, 0xa6, 0x20, 0x0b, 0x1b, 0xba, 0xb2, 0x96,
-  0xde, 0xc4, 0x1f, 0x32, 0x10, 0xa6, 0x9c, 0x52, 0xac, 0x49, 0x02, 0x5a,
-  0xc6, 0xfd, 0xac, 0xc1, 0x65, 0xe7, 0x4d, 0x9b, 0xd3, 0x11, 0x9d, 0x59,
-  0x46, 0x5d, 0x5e, 0x6b, 0xb1, 0x1d, 0x40, 0xc4, 0x82, 0x83, 0xba, 0xd8,
-  0x64, 0xc1, 0x4c, 0xe6, 0x5e, 0xa2, 0xaa, 0xe0, 0xd4, 0x6b, 0xba, 0xa4,
-  0x8e, 0x52, 0x09, 0xb3, 0x06, 0xb6, 0xa1, 0x3b, 0x85, 0x18, 0xb7, 0x59,
-  0x28, 0x8f, 0xce, 0xde, 0xbc, 0x39, 0x3e, 0xba, 0xf4, 0x79, 0x65, 0x1d,
-  0x21, 0x81, 0x4e, 0x30, 0x74, 0x41, 0x71, 0x2a, 0x80, 0x4a, 0xea, 0x9e,
-  0x86, 0xa2, 0xab, 0x61, 0xc8, 0x5c, 0x26, 0xca, 0x59, 0x59, 0xe0, 0xeb,
-  0x96, 0x65, 0x84, 0x35, 0xa4, 0x0b, 0x49, 0x25, 0xd4, 0xb5, 0xb2, 0xa5,
-  0xaa, 0x8b, 0x60, 0x6b, 0x9b, 0x75, 0xe6, 0xd6, 0x46, 0xf4, 0x21, 0xe3,
-  0xfa, 0x42, 0x34, 0x92, 0x66, 0x45, 0x4b, 0xad, 0x29, 0x54, 0x94, 0x3b,
-  0x88, 0x4a, 0xe2, 0xc2, 0xe4, 0x49, 0x59, 0xcc, 0x3c, 0xb6, 0x67, 0x07,
-  0xa0, 0xa0, 0x2b, 0x98, 0x2b, 0xb5, 0x2f, 0xa8, 0x71, 0x07, 0x52, 0xaa,
-  0x6a, 0xc1, 0xdc, 0xe7, 0x76, 0x42, 0x4d, 0xf7, 0x45, 0x8c, 0xd8, 0xf7,
-  0x18, 0x81, 0xe2, 0xf1, 0xf7, 0x13, 0x4b, 0xf9, 0x13, 0xe4, 0x25, 0x07,
-  0xf6, 0xa9, 0x81, 0x4d, 0xa0, 0x1a, 0x5b, 0x47, 0x20, 0xc6, 0x29, 0x21,
-  0xc5, 0x09, 0xdc, 0x28, 0xbd, 0xbb, 0x59, 0x85, 0xe7, 0x5e, 0x23, 0x17,
-  0x61, 0x9f, 0xa4, 0x85, 0xb2, 0xcc, 0xa5, 0x46, 0x29, 0x28, 0x14, 0x69,
-  0x5e, 0x07, 0x1d, 0x2a, 0x42, 0x3b, 0x3b, 0x9d, 0xe9, 0xa0, 0x04, 0xd8,
-  0xb8, 0xd6, 0xa2, 0xc4, 0xa9, 0xe7, 0x75, 0x6b, 0x9c, 0xbc, 0x57, 0xcd,
-  0xe6, 0xdc, 0x16, 0x45, 0x08, 0x08, 0x91, 0x3c, 0xe7, 0x60, 0x72, 0xbb,
-  0xab, 0x4f, 0xe6, 0x43, 0xae, 0x83, 0xc9, 0x08, 0xba, 0xbd, 0x26, 0xa4,
-  0x9a, 0xa6, 0x10, 0xd8, 0xdb, 0xb4, 0x12, 0xc1, 0x80, 0xe3, 0x3b, 0xc0,
-  0x24, 0x1f, 0xd5, 0xaa, 0x78, 0xbf, 0xb6, 0xde, 0x2e, 0xf2, 0x0f, 0x50,
-  0x25, 0x62, 0x28, 0x13, 0xd7, 0xd4, 0xfa, 0x51, 0xf5, 0xf6, 0x9e, 0xed,
-  0x0f, 0xf7, 0x9e, 0x7e, 0x3e, 0xdc, 0xdb, 0x1d, 0xee, 0xf5, 0xc2, 0x78,
-  0x4e, 0x38, 0x7f, 0xd9, 0x5d, 0x1b, 0xb6, 0xd3, 0x61, 0xc8, 0xe8, 0xb2,
-  0x97, 0x84, 0x1d, 0xcc, 0xef, 0x87, 0x81, 0x0b, 0x3d, 0xea, 0x42, 0xdd,
-  0xec, 0xed, 0x96, 0x07, 0xc1, 0x3d, 0x0e, 0x52, 0x5b, 0x72, 0xbc, 0x81,
-  0xcb, 0x13, 0x6d, 0x94, 0x33, 0x94, 0xa8, 0x71, 0x57, 0x14, 0xb0, 0xab,
-  0x62, 0x44, 0x10, 0x15, 0xdc, 0x5d, 0x2a, 0xd0, 0xf5, 0xff, 0x8b, 0x93,
-  0x2b, 0x23, 0x66, 0xce, 0xb6, 0x56, 0x77, 0x0c, 0xd5, 0x5e, 0xe8, 0xac,
-  0xd2, 0x5c, 0x51, 0x50, 0x93, 0xc5, 0x5d, 0xf1, 0xd0, 0xa1, 0xb3, 0xce,
-  0xc2, 0xf0, 0x1f, 0xf2, 0xde, 0x55, 0x0b, 0xf8, 0x00, 0xa5, 0x08, 0x3d,
-  0x80, 0x76, 0xc8, 0x70, 0xd1, 0xb2, 0xcb, 0x61, 0x0e, 0xeb, 0x49, 0xb2,
-  0xaa, 0x8b, 0x17, 0x39, 0x31, 0x29, 0x0b, 0xdd, 0x99, 0xfc, 0xce, 0x9f,
-  0xff, 0xec, 0x79, 0xd4, 0x88, 0x23, 0xb8, 0xb5, 0xda, 0x13, 0x2c, 0x3d,
-  0x4f, 0xbc, 0x7e, 0x27, 0x49, 0x8b, 0x49, 0xef, 0xe0, 0x47, 0xc4, 0x79,
-  0xff, 0x3c, 0xf8, 0x91, 0xfe, 0xfc, 0xb9, 0xe7, 0x18, 0x25, 0x62, 0x59,
-  0xe4, 0xb6, 0x76, 0x93, 0x97, 0x2d, 0xea, 0x63, 0x2e, 0x3e, 0xe6, 0x13,
-  0x59, 0xaf, 0x6c, 0x84, 0xc7, 0x69, 0x94, 0x4c, 0x2f, 0xa1, 0x66, 0xd5,
-  0x00, 0x25, 0xe1, 0x0f, 0x36, 0x0f, 0xa2, 0x14, 0xb7, 0x96, 0x12, 0xe1,
-  0xec, 0x5f, 0xea, 0x1b, 0x92, 0x33, 0xeb, 0x9b, 0xa5, 0x88, 0xeb, 0x96,
-  0x12, 0xa8, 0xec, 0x99, 0xc3, 0xd6, 0x5c, 0xf1, 0x63, 0xfd, 0x6c, 0xc3,
-  0x65, 0xa8, 0x73, 0x52, 0x8a, 0xd5, 0x32, 0x14, 0x9f, 0xaa, 0xd8, 0x2b,
-  0x33, 0x17, 0xee, 0xe0, 0x52, 0x40, 0x74, 0x8e, 0xd5, 0x2d, 0x4f, 0x51,
-  0x53, 0xaf, 0x04, 0x5e, 0x62, 0x23, 0x08, 0xe8, 0xc1, 0xd8, 0x2c, 0x5d,
-  0x89, 0x1d, 0x82, 0x16, 0xd8, 0x19, 0x0a, 0x6e, 0xcc, 0xc9, 0x92, 0xe7,
-  0xcb, 0x9b, 0x92, 0xda, 0x7d, 0x00, 0xd9, 0x87, 0x9e, 0x92, 0x67, 0x1c,
-  0xd5, 0x2e, 0x3d, 0x12, 0xce, 0xef, 0x18, 0xc2, 0xbb, 0xa4, 0xc3, 0xfa,
-  0x68, 0x77, 0x6f, 0x0d, 0xc8, 0x33, 0x78, 0xbd, 0x05, 0xea, 0x70, 0x6c,
-  0x1d, 0xf3, 0x4e, 0x8e, 0xb3, 0x4d, 0xf6, 0x9f, 0xee, 0x3d, 0xdd, 0x21,
-  0x2e, 0xf2, 0x68, 0xb8, 0xaf, 0x06, 0x47, 0x00, 0xb9, 0xd0, 0x11, 0xa3,
-  0x31, 0xb4, 0x2f, 0x4f, 0xa4, 0xb7, 0xdb, 0x65, 0x8d, 0xd8, 0x3d, 0x6a,
-  0x2e, 0xa8, 0xa8, 0x54, 0xc9, 0x8d, 0xe6, 0x83, 0xa9, 0x53, 0x4e, 0x58,
-  0x77, 0x21, 0xd0, 0x51, 0xfa, 0x91, 0x79, 0x95, 0x59, 0xa0, 0xe1, 0xd1,
-  0xa8, 0x49, 0x6d, 0x25, 0x45, 0xd1, 0xc6, 0x39, 0xdd, 0xfc, 0x35, 0x97,
-  0xb9, 0x45, 0xde, 0x14, 0xca, 0xe9, 0x18, 0x70, 0x36, 0x23, 0xcc, 0x16,
-  0x9d, 0xe5, 0x3f, 0xa4, 0x76, 0xb6, 0x81, 0x65, 0x9a, 0x45, 0x28, 0x74,
-  0x0e, 0x21, 0xda, 0x3a, 0x17, 0x5c, 0x57, 0xe0, 0x20, 0xf3, 0xad, 0x3c,
-  0xb9, 0x6f, 0xdf, 0x23, 0xdf, 0x18, 0xc8, 0x6c, 0x6a, 0x37, 0x94, 0x24,
-  0xbf, 0x89, 0x73, 0x21, 0x95, 0xc5, 0xf0, 0x98, 0x60, 0xfa, 0x81, 0x44,
-  0xf4, 0xb2, 0xa1, 0x2d, 0x46, 0x43, 0x0d, 0x42, 0xc1, 0x87, 0x1d, 0x81,
-  0x24, 0x0a, 0xaa, 0xc5, 0x19, 0x5d, 0x62, 0x44, 0x17, 0x0f, 0x2d, 0xf8,
-  0xc2, 0x43, 0xf1, 0xef, 0x0f, 0x15, 0x7e, 0x10, 0xb2, 0xd8, 0xff, 0x6f,
-  0x48, 0x16, 0xfb, 0xff, 0x1f, 0x59, 0xfc, 0x13, 0xc9, 0xe2, 0x59, 0x17,
-  0x59, 0x3c, 0xfa, 0x6f, 0x48, 0x16, 0x8f, 0xfe, 0x3f, 0xb2, 0xf8, 0xe7,
-  0x91, 0xc5, 0xfe, 0xd3, 0x66, 0x0a, 0x0f, 0xf4, 0x49, 0xba, 0xe4, 0x4c,
-  0xad, 0x8c, 0x30, 0x13, 0x41, 0x19, 0x4d, 0x0c, 0x08, 0x0b, 0xf9, 0xca,
-  0x15, 0x32, 0xc8, 0xab, 0xa4, 0x2a, 0xb0, 0x57, 0x1e, 0xa5, 0x26, 0x2e,
-  0x61, 0x54, 0xe6, 0xd9, 0xfb, 0x74, 0x36, 0x4c, 0xce, 0xdd, 0x6b, 0xac,
-  0xd9, 0xf3, 0x67, 0x2b, 0xf8, 0x27, 0x67, 0xd9, 0x15, 0xb6, 0x00, 0x72,
-  0x4a, 0x1f, 0x5f, 0x42, 0x8c, 0x62, 0xb0, 0xbb, 0x41, 0x94, 0xc1, 0xc1,
-  0xaf, 0x88, 0xcb, 0x10, 0xad, 0xb0, 0x02, 0x9a, 0xfa, 0x80, 0x7b, 0xa9,
-  0x63, 0x50, 0x26, 0x9b, 0x24, 0x4b, 0x6d, 0xf6, 0x1b, 0x60, 0xc1, 0x9c,
-  0x1f, 0x14, 0xe3, 0x9c, 0x7f, 0x10, 0x73, 0xf8, 0x3f, 0xb2, 0xb2, 0x48,
-  0x2c, 0xbe, 0x47, 0x81, 0x4e, 0x00, 0xf6, 0x6f, 0x62, 0x82, 0xff, 0x90,
-  0xfb, 0x8d, 0xb4, 0x8c, 0x3f, 0xa3, 0x94, 0x88, 0x80, 0xdb, 0x70, 0xda,
-  0xb1, 0x4b, 0x00, 0x58, 0xb0, 0xa8, 0x95, 0x9b, 0x45, 0xd6, 0xaf, 0x9c,
-  0x89, 0xc4, 0x08, 0x31, 0x8e, 0xce, 0x01, 0x0b, 0x2d, 0x6c, 0x38, 0x08,
-  0x7d, 0xce, 0x4e, 0xd7, 0xbc, 0x12, 0x40, 0x04, 0x19, 0x8e, 0x03, 0x1f,
-  0x1e, 0x76, 0xc8, 0xe9, 0x2f, 0x33, 0x36, 0x66, 0x85, 0x03, 0xea, 0x4b,
-  0xe1, 0x54, 0xd5, 0xfc, 0x5d, 0x70, 0x89, 0x77, 0x11, 0xfb, 0x21, 0xc6,
-  0x43, 0x6a, 0x8e, 0xb9, 0xee, 0x88, 0x33, 0x79, 0xe1, 0x96, 0xc1, 0x5c,
-  0x28, 0xe1, 0x62, 0x6c, 0x21, 0x67, 0xc0, 0x0c, 0xca, 0xe8, 0xf2, 0x53,
-  0x96, 0x01, 0x26, 0x13, 0x28, 0xed, 0xd5, 0x6a, 0xfc, 0x37, 0xd5, 0x08,
-  0x39, 0x00, 0x51, 0x70, 0xd9, 0xc3, 0x12, 0x30, 0x40, 0x0e, 0xa0, 0xa7,
-  0xd4, 0xfe, 0x19, 0x37, 0x47, 0x1f, 0xc2, 0xd6, 0xed, 0x00, 0xa3, 0x95,
-  0xce, 0xd4, 0x55, 0xce, 0x63, 0x8a, 0x26, 0x15, 0xf8, 0x7b, 0xa3, 0x7d,
-  0xb7, 0xf3, 0xc4, 0x1a, 0x43, 0xa5, 0x48, 0xce, 0xe1, 0x66, 0xb9, 0xd5,
-  0x54, 0x21, 0xd6, 0x3c, 0xdb, 0xfc, 0xf8, 0xda, 0xb6, 0x88, 0x5c, 0xfb,
-  0xec, 0x7f, 0xa8, 0xfa, 0x7f, 0xe6, 0x7f, 0xba, 0x15, 0xa6, 0x06, 0x70,
-  0x9b, 0x85, 0xc1, 0xf0, 0xe3, 0x38, 0x1b, 0x78, 0x7d, 0x5d, 0x07, 0x2f,
-  0xf8, 0x5b, 0xe9, 0xe1, 0xe1, 0xb6, 0xe1, 0x61, 0xf8, 0x05, 0x1d, 0xbc,
-  0x5d, 0x48, 0x1e, 0x68, 0xc8, 0x21, 0x96, 0x0a, 0x0c, 0x80, 0x6a, 0x89,
-  0x69, 0xb9, 0x90, 0x28, 0x96, 0xb0, 0x14, 0x20, 0xa7, 0x69, 0x2c, 0x61,
-  0xa4, 0x69, 0x1b, 0x0d, 0xd2, 0x2b, 0x36, 0x54, 0xc1, 0x5a, 0xc5, 0xe1,
-  0x7c, 0x92, 0x91, 0xa5, 0x90, 0x55, 0x16, 0xf1, 0xb1, 0x2c, 0x6a, 0xb3,
-  0x74, 0x27, 0x53, 0xd6, 0x3d, 0x4a, 0xdc, 0x0f, 0x1d, 0x28, 0x93, 0xb6,
-  0x11, 0xbe, 0xda, 0x1f, 0xb7, 0x0c, 0x13, 0xcc, 0x6a, 0x09, 0x80, 0xd8,
-  0x20, 0xc4, 0x10, 0x6a, 0x86, 0xa3, 0x5c, 0x74, 0xdd, 0xf6, 0x0d, 0xc3,
-  0x75, 0x89, 0x0b, 0xcf, 0xc1, 0x6f, 0xbd, 0x2f, 0x72, 0xce, 0xcb, 0x92,
-  0x1c, 0xb3, 0xe1, 0xaf, 0x43, 0xc5, 0xed, 0x07, 0x05, 0x25, 0xd2, 0x2a,
-  0x0c, 0xf5, 0x8e, 0x03, 0x33, 0xbc, 0xda, 0x9d, 0x4a, 0x46, 0x2b, 0x51,
-  0xf1, 0x22, 0x75, 0x68, 0xee, 0x7e, 0x1b, 0x30, 0x4c, 0x81, 0x76, 0xe6,
-  0xb8, 0xf3, 0x49, 0x16, 0xfb, 0xba, 0x3d, 0xfe, 0xe9, 0xc7, 0x52, 0x42,
-  0xf7, 0xa3, 0xfb, 0x44, 0x92, 0x42, 0x3f, 0x7a, 0xab, 0xd8, 0x3a, 0x19,
-  0x2e, 0x8b, 0x5e, 0x28, 0x01, 0xb5, 0x68, 0xb2, 0x5c, 0x70, 0x35, 0x4a,
-  0xfa, 0xfe, 0x1a, 0x4a, 0xbe, 0x42, 0x55, 0xa5, 0xbb, 0x90, 0xaf, 0x96,
-  0x6c, 0x19, 0x24, 0x56, 0x5f, 0x49, 0x24, 0xce, 0x2f, 0x9c, 0xca, 0x87,
-  0xfb, 0x41, 0xba, 0xb8, 0x67, 0xab, 0xfa, 0x03, 0xd7, 0x22, 0x33, 0x72,
-  0xe4, 0x58, 0x10, 0xc5, 0xe4, 0x82, 0x86, 0xdd, 0x8a, 0x09, 0xb4, 0x20,
-  0x09, 0x60, 0xc8, 0x13, 0x8f, 0x59, 0x45, 0xc6, 0x3f, 0xad, 0x69, 0xaf,
-  0xc6, 0xbf, 0x3a, 0xc0, 0xe8, 0xd1, 0x80, 0x17, 0x95, 0x06, 0x04, 0x82,
-  0x44, 0x31, 0x48, 0x00, 0xa4, 0x08, 0x4f, 0x51, 0x37, 0x66, 0xd7, 0x8e,
-  0x4b, 0xa9, 0x2a, 0x19, 0x47, 0x7e, 0x40, 0xbc, 0x6e, 0xd9, 0x02, 0x21,
-  0x79, 0xd4, 0x35, 0x65, 0x54, 0x40, 0xfa, 0x88, 0x1c, 0xc0, 0xfd, 0xaf,
-  0x05, 0xcd, 0x08, 0x66, 0x6a, 0x33, 0x5b, 0xe7, 0x10, 0x96, 0x59, 0xea,
-  0x24, 0xdf, 0x4a, 0xc8, 0x3e, 0x5a, 0x04, 0xc6, 0x1a, 0xb3, 0x19, 0x5e,
-  0x96, 0xa0, 0x27, 0x09, 0xd5, 0x8d, 0x26, 0xec, 0xeb, 0xf0, 0x71, 0x50,
-  0x1c, 0x9e, 0x74, 0x27, 0xc2, 0xb8, 0x6f, 0xf7, 0xae, 0xf0, 0x94, 0x62,
-  0xbf, 0x47, 0x25, 0x1d, 0xf1, 0xc0, 0xf2, 0x66, 0x68, 0xb5, 0xac, 0xd1,
-  0x14, 0xf1, 0x14, 0x1f, 0x25, 0x6b, 0x0c, 0x5c, 0x62, 0x2f, 0x3a, 0xd7,
-  0xe8, 0x57, 0x2f, 0x92, 0xf4, 0xdf, 0xb1, 0x4a, 0xda, 0x59, 0x27, 0xce,
-  0x9c, 0x2e, 0x13, 0x56, 0x29, 0x9a, 0xd1, 0xba, 0x90, 0xf1, 0x35, 0x93,
-  0x5a, 0x17, 0x34, 0xde, 0xde, 0xfb, 0x4e, 0x00, 0x92, 0xf5, 0x64, 0x2e,
-  0xb3, 0x5b, 0x34, 0x42, 0x9c, 0x1b, 0x13, 0x6c, 0x07, 0xe4, 0xb9, 0x27,
-  0x15, 0x78, 0x32, 0x9c, 0xe3, 0xc3, 0x7a, 0xb2, 0x8b, 0x52, 0xf9, 0xc4,
-  0x09, 0x77, 0xc4, 0x49, 0x25, 0xff, 0xc5, 0x5d, 0x44, 0x44, 0x56, 0x63,
-  0x8a, 0xe8, 0xa5, 0x31, 0x95, 0x0e, 0x4b, 0x6e, 0xb4, 0x79, 0x7b, 0xc3,
-  0x5d, 0x70, 0xdb, 0x0f, 0xf7, 0x88, 0x4a, 0x38, 0xe0, 0x7b, 0xeb, 0xe7,
-  0x36, 0xd3, 0x7d, 0xab, 0x6c, 0xd6, 0x9b, 0xf0, 0x31, 0x2f, 0x7e, 0x57,
-  0x07, 0x75, 0x62, 0xe5, 0x64, 0x43, 0x00, 0x26, 0x87, 0xf5, 0xbb, 0x1e,
-  0x56, 0x39, 0xaf, 0x03, 0x54, 0x65, 0xce, 0x4e, 0xc5, 0xfb, 0x7b, 0xbb,
-  0x9f, 0xef, 0x76, 0xc3, 0x8f, 0x41, 0x86, 0x30, 0xef, 0xf0, 0xc4, 0x83,
-  0xa3, 0x43, 0x3e, 0x34, 0x38, 0xc6, 0xc0, 0x73, 0xa6, 0x97, 0x24, 0x3b,
-  0xce, 0xba, 0x38, 0x3f, 0xdc, 0x68, 0xb9, 0x1a, 0x98, 0xd5, 0x2a, 0xeb,
-  0xc0, 0xa7, 0xcc, 0xe1, 0xe4, 0x3c, 0x3d, 0xce, 0x9d, 0xd4, 0x91, 0xea,
-  0xe9, 0x8b, 0x33, 0x37, 0xd6, 0xc6, 0x84, 0xf7, 0x46, 0x31, 0x63, 0xe3,
-  0x2a, 0xfa, 0xe0, 0x5e, 0x63, 0x53, 0x56, 0xe3, 0x07, 0x20, 0xc1, 0xbf,
-  0xe1, 0x72, 0xa5, 0x12, 0xde, 0x25, 0xd8, 0xd6, 0x9f, 0x08, 0x08, 0x8e,
-  0x57, 0x22, 0xd4, 0xf8, 0x7f, 0x3e, 0x1a, 0xf8, 0xdf, 0xad, 0x3d, 0x2b,
-  0x4d, 0xe5, 0x43, 0xa3, 0x7c, 0x85, 0xa4, 0x22, 0x10, 0xa9, 0x1d, 0x84,
-  0xa3, 0xaa, 0xdd, 0x28, 0xef, 0x10, 0x43, 0x04, 0xfb, 0x42, 0x28, 0x2e,
-  0x5b, 0x73, 0x9c, 0x49, 0x6d, 0x2e, 0x75, 0x05, 0x2b, 0xfc, 0x28, 0xfc,
-  0xcc, 0x61, 0x71, 0x9e, 0x18, 0x61, 0xcc, 0x72, 0x44, 0x75, 0x18, 0xcd,
-  0xea, 0x29, 0x1a, 0xa9, 0x90, 0xa5, 0x25, 0x49, 0x55, 0x1c, 0xc5, 0x11,
-  0x4c, 0xee, 0x7f, 0x72, 0xb3, 0x28, 0xcf, 0xc4, 0xe5, 0xc4, 0x30, 0xf8,
-  0x2e, 0xcf, 0x9f, 0x96, 0x9d, 0xe5, 0xe8, 0x7e, 0xa6, 0x96, 0xb4, 0x1c,
-  0xe7, 0x75, 0x99, 0x6a, 0x7a, 0x83, 0xc2, 0x08, 0x07, 0x6e, 0x49, 0xc0,
-  0x1d, 0xb3, 0x72, 0x3c, 0x5a, 0x07, 0x24, 0x4c, 0xbc, 0xef, 0x7f, 0xa2,
-  0x57, 0x6d, 0x40, 0x64, 0x17, 0xe0, 0x7c, 0x7c, 0x75, 0xfc, 0xea, 0xec,
-  0xe2, 0xb8, 0x09, 0xed, 0x22, 0x40, 0xaf, 0x5d, 0x55, 0xad, 0xb7, 0xfe,
-  0x86, 0xcc, 0x06, 0x48, 0x4e, 0x61, 0x7d, 0x9b, 0xf3, 0xef, 0x5f, 0xba,
-  0xc1, 0xe5, 0xae, 0xea, 0xa6, 0x6b, 0xb1, 0x6f, 0xa5, 0xe9, 0xa2, 0x0c,
-  0xaa, 0x74, 0x52, 0x33, 0xa4, 0xbf, 0x15, 0x3e, 0xb2, 0xe1, 0x09, 0x18,
-  0x1e, 0x8a, 0x29, 0x4b, 0x67, 0xa9, 0x44, 0x55, 0x57, 0x15, 0x1b, 0x28,
-  0x5c, 0xb3, 0x1d, 0xc5, 0xba, 0xf2, 0x0f, 0x08, 0xd0, 0x37, 0x36, 0xc7,
-  0x21, 0x43, 0x1c, 0x45, 0x34, 0x4c, 0x5c, 0x27, 0xbe, 0x17, 0x07, 0xc5,
-  0xac, 0xc2, 0x60, 0x97, 0x49, 0x87, 0x71, 0x62, 0x24, 0x72, 0x44, 0x38,
-  0x47, 0x14, 0x36, 0xd2, 0x4f, 0xfe, 0x26, 0xe5, 0xcd, 0xae, 0xac, 0xce,
-  0xad, 0x0d, 0x2f, 0x22, 0x42, 0x74, 0xbb, 0x55, 0x11, 0x43, 0xf1, 0x23,
-  0x75, 0xcb, 0xa6, 0x03, 0xde, 0xfc, 0xf3, 0x66, 0xa2, 0xca, 0x38, 0x78,
-  0xa3, 0x26, 0xdc, 0xc5, 0xb9, 0xbe, 0x82, 0x62, 0x91, 0x58, 0x8e, 0xf4,
-  0xf6, 0xd0, 0x85, 0x9a, 0x74, 0x57, 0x81, 0xb7, 0x59, 0x1b, 0xc4, 0x6b,
-  0xb7, 0xd7, 0xd4, 0xaa, 0xda, 0x98, 0x73, 0xc3, 0xca, 0xb4, 0x28, 0x5f,
-  0xb2, 0x46, 0xfa, 0x01, 0x68, 0x23, 0x9c, 0xf8, 0x91, 0xf1, 0x44, 0x6f,
-  0x30, 0x0b, 0xde, 0x4b, 0xc7, 0x8a, 0xa2, 0xff, 0x57, 0x4b, 0x8f, 0x01,
-  0xce, 0x5a, 0x75, 0xbf, 0xa8, 0xe1, 0x4b, 0x86, 0x4e, 0x35, 0x29, 0x4a,
-  0x78, 0xdf, 0x63, 0x32, 0xf6, 0x74, 0x5b, 0xc1, 0x72, 0xf8, 0xec, 0xc9,
-  0x33, 0x3e, 0x76, 0xa8, 0x69, 0xad, 0xb9, 0xc2, 0x1a, 0xf4, 0x0b, 0x24,
-  0x5b, 0x1d, 0xb1, 0x2b, 0x34, 0x1b, 0xd5, 0xfe, 0x92, 0xed, 0x37, 0x23,
-  0xd3, 0x38, 0x9b, 0x59, 0x9e, 0xf2, 0x28, 0x68, 0x6a, 0xb8, 0x56, 0x8d,
-  0x5a, 0x57, 0x65, 0x1a, 0x7c, 0x4e, 0x2b, 0xd0, 0xd2, 0x2e, 0xa4, 0xb7,
-  0x9a, 0xb6, 0xa0, 0xe7, 0x41, 0xda, 0x6d, 0xec, 0xfe, 0xba, 0xd1, 0x59,
-  0xd6, 0x18, 0x4d, 0x98, 0x08, 0x93, 0x3d, 0x4e, 0x5b, 0xff, 0xba, 0xdd,
-  0x2c, 0x10, 0xc6, 0xee, 0xcb, 0x7c, 0xb1, 0xca, 0x1a, 0xe0, 0x45, 0xeb,
-  0x9a, 0xbb, 0x02, 0xc3, 0xa2, 0xd5, 0x6b, 0x67, 0xb5, 0x48, 0x9d, 0x9c,
-  0xba, 0x58, 0x26, 0xa9, 0xd5, 0x5d, 0xd2, 0xbd, 0x8f, 0x03, 0x01, 0x79,
-  0x0e, 0x08, 0xa0, 0x1e, 0x0b, 0x8e, 0xae, 0xdd, 0x5e, 0x24, 0x71, 0x2c,
-  0x10, 0xce, 0xa1, 0xb4, 0xa8, 0x71, 0x01, 0x70, 0x68, 0xd3, 0x5c, 0xd9,
-  0x64, 0xd7, 0xc1, 0x9a, 0x84, 0x0f, 0x06, 0xa7, 0x51, 0x91, 0x47, 0x5a,
-  0xa5, 0x4f, 0x70, 0x9a, 0x95, 0xe1, 0x39, 0x6e, 0xf6, 0x2a, 0x4e, 0xa4,
-  0x95, 0xba, 0x5d, 0x9a, 0x83, 0x87, 0xb6, 0xb9, 0x66, 0x01, 0x89, 0x5b,
-  0x83, 0xaa, 0xbe, 0x17, 0x3d, 0x3e, 0x9b, 0x33, 0x44, 0x03, 0xaa, 0xee,
-  0x01, 0x87, 0x4e, 0xb1, 0xe7, 0x91, 0x47, 0x30, 0x88, 0xab, 0x1c, 0x0a,
-  0x09, 0x24, 0xaf, 0x9c, 0x41, 0x59, 0xad, 0x63, 0xb0, 0x26, 0x31, 0xc2,
-  0xd6, 0x6c, 0xe6, 0xe1, 0x64, 0x64, 0x75, 0xfe, 0x6e, 0x5c, 0xb6, 0x93,
-  0xe2, 0x62, 0x38, 0x90, 0x9b, 0xeb, 0x72, 0x29, 0xa9, 0xfc, 0x5d, 0x95,
-  0xc4, 0x02, 0xb1, 0x46, 0x9e, 0x34, 0x5e, 0x81, 0xf2, 0x32, 0x10, 0xfb,
-  0xf0, 0xea, 0xc9, 0xcb, 0x06, 0x0a, 0x8c, 0x44, 0x28, 0xd2, 0x4e, 0x77,
-  0x37, 0xe7, 0x23, 0xf4, 0x24, 0xfc, 0xc6, 0xdf, 0x27, 0xae, 0x35, 0x2f,
-  0xc5, 0x8d, 0xef, 0xfd, 0x37, 0xdd, 0xcd, 0x69, 0x1b, 0x62, 0x4b, 0x97,
-  0x16, 0xac, 0x59, 0xd0, 0x8a, 0x81, 0xe4, 0x31, 0x35, 0x30, 0x50, 0x96,
-  0x75, 0x32, 0x8c, 0x17, 0x63, 0x5e, 0x4c, 0x25, 0xb2, 0xe3, 0x63, 0x6b,
-  0xc1, 0x0f, 0xda, 0x5a, 0xa8, 0x75, 0xb2, 0x0a, 0xe7, 0x85, 0x46, 0xb8,
-  0xb2, 0x7a, 0xe5, 0xca, 0x47, 0x74, 0x37, 0xe7, 0x27, 0x0a, 0xb1, 0x06,
-  0xcd, 0xe3, 0xe5, 0x70, 0x0a, 0x8b, 0xa4, 0x98, 0xd4, 0xc1, 0x0c, 0xf8,
-  0x81, 0xee, 0xe6, 0xd4, 0xdd, 0x1c, 0xcf, 0x8c, 0x2d, 0x55, 0x88, 0x36,
-  0xfb, 0xd8, 0xcc, 0xf8, 0xc1, 0x68, 0x97, 0xe9, 0x43, 0xe1, 0xe1, 0xad,
-  0x2d, 0x96, 0xcd, 0x59, 0x13, 0xe4, 0xd0, 0xd8, 0x60, 0xdb, 0x61, 0x8c,
-  0xa1, 0x6b, 0x83, 0x35, 0x78, 0x2e, 0x66, 0xe4, 0x1e, 0x1d, 0x49, 0x56,
-  0xc7, 0x3d, 0xb8, 0x76, 0x83, 0xb5, 0x8f, 0x68, 0x15, 0x66, 0x0b, 0x05,
-  0xcd, 0x7e, 0x27, 0xb9, 0xe7, 0x8c, 0x9b, 0x56, 0xbf, 0x7b, 0x78, 0x41,
-  0x66, 0x0b, 0x2b, 0x52, 0x00, 0x94, 0x13, 0xc7, 0x2b, 0x34, 0xdc, 0x38,
-  0x6d, 0x96, 0x2f, 0x50, 0xec, 0x9a, 0x35, 0x64, 0xef, 0xfb, 0x4b, 0x7c,
-  0x71, 0x01, 0xba, 0x46, 0x73, 0x81, 0xb9, 0x74, 0x3c, 0x26, 0x18, 0x63,
-  0x17, 0x06, 0x7d, 0x90, 0x10, 0x11, 0x4d, 0x71, 0x7e, 0xcb, 0xa6, 0x29,
-  0x27, 0x1a, 0xbc, 0x5b, 0x1f, 0x14, 0x03, 0x42, 0xc3, 0xd3, 0xb6, 0xdb,
-  0x32, 0x25, 0xf3, 0x1e, 0xf9, 0xa8, 0x54, 0x7f, 0x9c, 0x1f, 0xa0, 0xe3,
-  0x66, 0x97, 0xee, 0x4c, 0xb6, 0xc7, 0xb7, 0xbc, 0x9b, 0x5a, 0xe7, 0xfc,
-  0xab, 0x75, 0x1d, 0x96, 0xb2, 0x73, 0xd0, 0x01, 0x2c, 0xba, 0x4a, 0x63,
-  0x57, 0x16, 0xb9, 0xbb, 0x66, 0x29, 0xba, 0xc3, 0x69, 0xa3, 0xce, 0x4b,
-  0x29, 0x7e, 0x69, 0x30, 0xba, 0xd8, 0x8e, 0xf5, 0x8b, 0xa3, 0x4f, 0xfb,
-  0x21, 0x0a, 0x7f, 0x0f, 0x11, 0xb4, 0xfc, 0x1a, 0xd9, 0x71, 0x78, 0x80,
-  0xe1, 0x59, 0xb5, 0xe0, 0x16, 0xcb, 0x9b, 0x66, 0x5c, 0xce, 0x44, 0x68,
-  0x01, 0x21, 0xd7, 0x1f, 0x3f, 0x59, 0x32, 0xf2, 0xb5, 0x6b, 0x5c, 0xce,
-  0x3f, 0x72, 0xc8, 0xe9, 0x01, 0x3f, 0x2b, 0x2e, 0x7d, 0x11, 0xcc, 0x2a,
-  0x3a, 0x97, 0x8a, 0x90, 0xb0, 0x66, 0xe5, 0xd7, 0x8d, 0xa0, 0x41, 0x85,
-  0xeb, 0x47, 0xa2, 0x4f, 0x76, 0x0e, 0xc7, 0x2f, 0x2e, 0xfb, 0x31, 0xee,
-  0xfd, 0xc8, 0xba, 0x9b, 0xd3, 0xe1, 0xfa, 0xb7, 0x74, 0x79, 0xfa, 0x0e,
-  0xd2, 0x41, 0x15, 0x79, 0xd6, 0x9f, 0x63, 0xda, 0xb0, 0x03, 0xfe, 0x8b,
-  0x18, 0x04, 0x6b, 0x6b, 0xb3, 0xb0, 0x52, 0x79, 0x89, 0x88, 0x6c, 0x44,
-  0x12, 0x3d, 0xc7, 0x3f, 0x5f, 0x74, 0x02, 0x1d, 0x9b, 0x86, 0xb5, 0xc3,
-  0x00, 0x5a, 0x1c, 0x65, 0x09, 0xb7, 0x21, 0x73, 0x13, 0x46, 0xcf, 0xd4,
-  0x50, 0xa4, 0x2d, 0x0e, 0x5b, 0x4b, 0x11, 0x7d, 0x9c, 0x23, 0x9b, 0xa1,
-  0x98, 0xac, 0xba, 0x4a, 0xc8, 0x6e, 0x5b, 0x10, 0x7d, 0x9a, 0x40, 0x5b,
-  0xdf, 0x21, 0x6d, 0xbd, 0x9f, 0x34, 0x75, 0x32, 0x13, 0xae, 0xb9, 0x44,
-  0xa3, 0xa6, 0x12, 0x70, 0xd7, 0x6d, 0x9f, 0xef, 0x05, 0x77, 0x6c, 0x35,
-  0x9c, 0x03, 0x52, 0x80, 0x7f, 0xd7, 0x0b, 0xf2, 0x0c, 0x82, 0x19, 0x2d,
-  0xe0, 0xee, 0xe0, 0xf1, 0xb3, 0x67, 0x8d, 0x2b, 0x2d, 0xd4, 0x9c, 0x9f,
-  0xec, 0xee, 0x0a, 0x32, 0x68, 0xfb, 0x35, 0xfa, 0x62, 0xf0, 0x0c, 0x2f,
-  0x36, 0x5f, 0x13, 0x50, 0xe1, 0xf5, 0xef, 0x0d, 0xf8, 0x9b, 0x8e, 0xee,
-  0xa0, 0xdd, 0xaf, 0x7d, 0xeb, 0x19, 0x77, 0xd7, 0xf1, 0x16, 0x1e, 0x96,
-  0x65, 0x2c, 0xae, 0xae, 0x18, 0xec, 0x90, 0x9f, 0x94, 0x3a, 0x85, 0x45,
-  0x79, 0x97, 0x96, 0xd3, 0x78, 0xba, 0xbb, 0xfd, 0xc1, 0xde, 0xba, 0xe9,
-  0xc2, 0x26, 0xc0, 0x23, 0xc1, 0x7e, 0xb2, 0x06, 0x45, 0xc2, 0xf3, 0xd6,
-  0x37, 0xdb, 0x5d, 0xb3, 0xff, 0x6c, 0x77, 0xb7, 0xff, 0x94, 0xff, 0x7d,
-  0xf6, 0x6c, 0xad, 0x83, 0xca, 0xf7, 0xf1, 0xc8, 0xa6, 0xd6, 0x18, 0x2d,
-  0xb5, 0xd3, 0xd1, 0xfa, 0x1e, 0xb5, 0xba, 0xf7, 0xec, 0x59, 0x9f, 0x7b,
-  0x79, 0xf2, 0x49, 0xad, 0xd7, 0x77, 0x85, 0xb7, 0xb3, 0xf0, 0xeb, 0x9e,
-  0x1e, 0xab, 0xd6, 0x0c, 0x58, 0x1b, 0x78, 0x01, 0xb8, 0xd4, 0x20, 0x63,
-  0xd8, 0x47, 0x78, 0x87, 0x81, 0xb8, 0x88, 0x12, 0x58, 0x02, 0x6e, 0x07,
-  0x96, 0xd1, 0xd4, 0x14, 0x96, 0xd4, 0x87, 0x58, 0x98, 0x31, 0xdf, 0xa7,
-  0x2f, 0x48, 0xce, 0xca, 0x34, 0xbf, 0x66, 0xb4, 0x56, 0xcb, 0xb3, 0xad,
-  0x92, 0x2d, 0xa2, 0x17, 0x01, 0x52, 0x7c, 0x9f, 0xce, 0x72, 0x97, 0xd6,
-  0xb1, 0x89, 0x68, 0x40, 0xc1, 0x5a, 0xda, 0x64, 0x6d, 0x62, 0x93, 0xeb,
-  0x7a, 0xcf, 0xa6, 0xce, 0xe9, 0xa7, 0x97, 0x88, 0x3c, 0x37, 0x90, 0x27,
-  0xe4, 0xa0, 0x41, 0x05, 0xfc, 0xa0, 0xb5, 0x66, 0x38, 0x16, 0xa3, 0xd5,
-  0x67, 0xe2, 0x20, 0x55, 0x03, 0x6c, 0x37, 0x01, 0x75, 0x93, 0xf0, 0x3f,
-  0x3f, 0xd5, 0xcd, 0x2a, 0xa8, 0x6e, 0x62, 0xe6, 0xa5, 0xb0, 0xee, 0xde,
-  0x34, 0xb3, 0x32, 0x0b, 0x45, 0x03, 0xc9, 0xcc, 0xbd, 0x2e, 0x26, 0x9c,
-  0x95, 0xc4, 0xa4, 0xfb, 0x43, 0xf6, 0x57, 0x9f, 0x78, 0x09, 0x3f, 0x25,
-  0x2b, 0xb4, 0x77, 0x69, 0x99, 0x59, 0xca, 0x38, 0x29, 0xda, 0x76, 0xf6,
-  0x5d, 0xe9, 0x26, 0x2e, 0x26, 0x84, 0x68, 0x16, 0x80, 0x28, 0x61, 0x83,
-  0xac, 0x39, 0xab, 0x68, 0xa1, 0xae, 0xce, 0x29, 0xe2, 0x49, 0x0c, 0x41,
-  0x4f, 0x8c, 0xbe, 0x52, 0x58, 0x20, 0x08, 0x02, 0x95, 0x2a, 0x24, 0x3a,
-  0x65, 0xc1, 0x2a, 0xdf, 0x68, 0x05, 0xdc, 0x5f, 0x67, 0x75, 0x00, 0xfb,
-  0x6d, 0xc9, 0x79, 0x7e, 0x16, 0x06, 0x35, 0x0b, 0x96, 0x24, 0x8b, 0x6f,
-  0x10, 0x8f, 0x95, 0x16, 0x0a, 0x52, 0xaf, 0xa4, 0x80, 0xa8, 0x03, 0xc4,
-  0xab, 0xb1, 0x63, 0xbc, 0x59, 0x8e, 0x09, 0xd2, 0xae, 0x11, 0x1d, 0x86,
-  0x51, 0x0f, 0x42, 0x5f, 0x81, 0xb9, 0xc0, 0x50, 0xf6, 0x0b, 0xf1, 0xe1,
-  0x6f, 0x0f, 0x31, 0x06, 0xa6, 0x4f, 0xd9, 0x09, 0xee, 0x36, 0xdc, 0xd2,
-  0xec, 0x43, 0x8d, 0x92, 0x18, 0x78, 0xcc, 0x6e, 0xa5, 0xd1, 0xc9, 0xff,
-  0x3a, 0x1e, 0x86, 0x91, 0xb9, 0xbf, 0x91, 0xa5, 0xf1, 0x22, 0xc8, 0xdf,
-  0xe1, 0xd7, 0xba, 0x92, 0x2c, 0x02, 0x20, 0x58, 0x5f, 0x2f, 0x0a, 0xca,
-  0xad, 0xed, 0x0d, 0xd0, 0xd3, 0xae, 0x79, 0x37, 0xe1, 0xe6, 0x75, 0x25,
-  0x3f, 0x23, 0x44, 0x96, 0x3a, 0x9d, 0x2f, 0x13, 0x6f, 0x95, 0x30, 0xaf,
-  0x92, 0x56, 0xde, 0x76, 0xd8, 0x83, 0x12, 0xc6, 0x9c, 0xfa, 0x58, 0x90,
-  0xf4, 0xb6, 0x0b, 0xe7, 0x29, 0x48, 0x48, 0x93, 0x6d, 0xa7, 0xf7, 0xe0,
-  0x9c, 0xc5, 0x02, 0x70, 0x5f, 0xa1, 0xc9, 0x98, 0x6f, 0x62, 0xd2, 0x49,
-  0xf1, 0x78, 0x67, 0xc2, 0xa8, 0xe0, 0x43, 0x84, 0x85, 0x5b, 0x9c, 0x30,
-  0x24, 0x33, 0x9c, 0x65, 0x96, 0xcb, 0x0e, 0x4f, 0x62, 0x58, 0x03, 0xa1,
-  0x23, 0xdf, 0xa0, 0xa2, 0x0b, 0xbf, 0x44, 0x22, 0x4d, 0x85, 0x63, 0x3a,
-  0xe5, 0x0b, 0x92, 0x21, 0xbe, 0x2c, 0xf7, 0x5b, 0x00, 0xc3, 0x3c, 0x00,
-  0x5d, 0x95, 0xa9, 0x79, 0x4d, 0x1e, 0x8e, 0xca, 0x10, 0x72, 0x46, 0x36,
-  0xac, 0x0b, 0x9c, 0xb9, 0xeb, 0xe3, 0xb5, 0xab, 0x18, 0x70, 0x3d, 0xbb,
-  0x9e, 0x86, 0xb0, 0x52, 0xcd, 0x55, 0xb8, 0x73, 0x41, 0x69, 0xc1, 0xee,
-  0xe6, 0x41, 0xac, 0x44, 0x3a, 0x53, 0xb3, 0x05, 0xe3, 0x23, 0xc1, 0xf8,
-  0x4e, 0xda, 0x4d, 0x31, 0x55, 0x5c, 0xb6, 0x8e, 0x99, 0xd6, 0xb0, 0x1e,
-  0x22, 0x7f, 0xdf, 0x01, 0x63, 0x73, 0x6e, 0xf6, 0x54, 0x61, 0x87, 0xc3,
-  0xf8, 0x6c, 0x07, 0xcf, 0x34, 0x47, 0x1e, 0x03, 0x12, 0xc4, 0xdb, 0xce,
-  0x41, 0xea, 0x17, 0x25, 0x17, 0xfb, 0xb4, 0x12, 0x77, 0x51, 0x1d, 0x9e,
-  0x86, 0x3f, 0x35, 0x48, 0x3d, 0xe3, 0x30, 0x8e, 0x87, 0x02, 0x00, 0x6e,
-  0x44, 0xb2, 0x68, 0xf8, 0x2b, 0x25, 0x39, 0x0b, 0xf5, 0xc3, 0xb9, 0xc8,
-  0x91, 0x25, 0xfc, 0x55, 0xdd, 0x96, 0xda, 0x69, 0x96, 0x5a, 0xf2, 0x34,
-  0xed, 0x29, 0x97, 0x56, 0x8d, 0xd2, 0xdf, 0xee, 0xb2, 0x32, 0xf3, 0xb0,
-  0x8d, 0x88, 0x96, 0x2a, 0xa4, 0xa4, 0x3b, 0x3d, 0xdf, 0x51, 0x84, 0xc1,
-  0xf2, 0x17, 0x1a, 0x30, 0x6e, 0x18, 0x8f, 0x5d, 0x89, 0x13, 0xe4, 0xee,
-  0x8a, 0x01, 0xb8, 0x39, 0xdf, 0x0e, 0x3c, 0x12, 0x58, 0x6a, 0x69, 0xe0,
-  0x02, 0xcb, 0x03, 0xa6, 0x0a, 0x26, 0x0a, 0x63, 0x23, 0xb3, 0x9c, 0xde,
-  0xa0, 0x48, 0x06, 0x3d, 0x64, 0x8f, 0x31, 0x54, 0x4a, 0xd0, 0xdc, 0xf0,
-  0x01, 0xc7, 0xfd, 0xde, 0xb3, 0x66, 0x4c, 0x1b, 0xd7, 0x01, 0x99, 0x11,
-  0x43, 0x7f, 0xce, 0xce, 0x30, 0xf8, 0xc2, 0x0e, 0xd6, 0xe4, 0xf0, 0x9c,
-  0x3b, 0xe8, 0x9f, 0x09, 0x0d, 0x81, 0x43, 0xd4, 0x35, 0x57, 0x41, 0xe6,
-  0xe8, 0x27, 0x29, 0x09, 0x14, 0x42, 0x2b, 0xe2, 0x1c, 0x5b, 0xa6, 0x5c,
-  0x76, 0xba, 0xed, 0x61, 0xd3, 0x82, 0xbb, 0x79, 0x65, 0x53, 0x63, 0x49,
-  0xd1, 0xf8, 0x83, 0x70, 0x25, 0x0b, 0x85, 0xdc, 0xaa, 0xb6, 0x0d, 0xfa,
-  0x6f, 0x8d, 0xdc, 0xde, 0xc8, 0x87, 0x51, 0x34, 0x6b, 0xd8, 0x1a, 0x18,
-  0xc8, 0xe2, 0x2e, 0xaf, 0xac, 0x58, 0x22, 0x82, 0x62, 0x30, 0xe5, 0x69,
-  0x80, 0xea, 0x1f, 0xc5, 0xcf, 0x58, 0xa1, 0x80, 0xa1, 0xe4, 0x84, 0xf2,
-  0xf9, 0x47, 0x01, 0xfb, 0x04, 0x75, 0xc8, 0xe9, 0xec, 0xec, 0x64, 0xf5,
-  0x64, 0x47, 0x40, 0x41, 0x40, 0xe2, 0x0b, 0x80, 0xd2, 0x39, 0xed, 0x20,
-  0x2a, 0x11, 0x19, 0x39, 0x78, 0xc4, 0xfc, 0x10, 0x94, 0x80, 0x09, 0xf2,
-  0x71, 0xc0, 0x51, 0xcd, 0xa3, 0xd8, 0x61, 0xa0, 0xb5, 0x02, 0xf2, 0xe1,
-  0xa2, 0x3b, 0xd7, 0x9b, 0x01, 0x6f, 0x34, 0xee, 0x09, 0x7e, 0xc5, 0x97,
-  0x1d, 0xea, 0xa0, 0x5e, 0xae, 0xe1, 0xec, 0x6e, 0x1d, 0x17, 0xea, 0xd5,
-  0xc4, 0xd4, 0x72, 0xe0, 0x4f, 0xc1, 0xc6, 0x77, 0x99, 0xde, 0xf9, 0xf4,
-  0x60, 0x04, 0x12, 0xb7, 0x65, 0x89, 0xad, 0xc0, 0x17, 0xf8, 0x08, 0x7a,
-  0x96, 0xa5, 0x4c, 0x6a, 0x74, 0x8f, 0xcf, 0x28, 0x65, 0xab, 0xf3, 0x54,
-  0x3f, 0x71, 0x09, 0x3a, 0x1d, 0x81, 0x4f, 0xba, 0xb9, 0x0f, 0x07, 0xaf,
-  0xec, 0x0d, 0x1f, 0x35, 0xcf, 0x00, 0x6b, 0x84, 0x5d, 0xa8, 0xec, 0x10,
-  0xe2, 0xc0, 0x09, 0x39, 0xa5, 0x4b, 0x62, 0x93, 0x24, 0xe1, 0x84, 0x2d,
-  0x0c, 0x99, 0x85, 0xa9, 0xc0, 0xfd, 0x2d, 0x89, 0xe0, 0xcc, 0x6d, 0x48,
-  0x55, 0xe4, 0xe4, 0xcb, 0x18, 0xc6, 0x2a, 0xf0, 0x1f, 0x71, 0x9c, 0x9f,
-  0xd5, 0x12, 0x28, 0x35, 0xda, 0xcf, 0xeb, 0x44, 0x32, 0x67, 0xb5, 0x1c,
-  0x13, 0x2f, 0xe3, 0xa3, 0xb2, 0x5a, 0x0e, 0x63, 0xcc, 0x78, 0x17, 0xaf,
-  0xa4, 0xef, 0x52, 0xf7, 0xbb, 0x61, 0xf2, 0x1b, 0x52, 0x3f, 0x34, 0x92,
-  0xb4, 0xb2, 0xe2, 0x2e, 0x16, 0xec, 0x11, 0xf1, 0x44, 0xb0, 0x52, 0x80,
-  0xad, 0xba, 0x29, 0xeb, 0x9c, 0x35, 0x7b, 0x45, 0x70, 0x61, 0x0e, 0x78,
-  0x51, 0xa4, 0x00, 0x48, 0xdf, 0x7c, 0x01, 0x8f, 0x3f, 0x7c, 0x88, 0x77,
-  0xc2, 0x17, 0xab, 0x84, 0xae, 0xa8, 0x8e, 0xe2, 0x27, 0x1f, 0x3e, 0x34,
-  0xbf, 0xec, 0x06, 0x23, 0x13, 0x9b, 0x7b, 0xc5, 0xae, 0x16, 0x49, 0x5b,
-  0x97, 0x95, 0x4a, 0x83, 0x55, 0x34, 0xe8, 0x4e, 0x45, 0xdc, 0xba, 0x4b,
-  0xf3, 0x4e, 0x5c, 0x45, 0xd5, 0xfe, 0x84, 0x23, 0xd5, 0x37, 0x99, 0xbf,
-  0x26, 0x18, 0xc6, 0xe4, 0x86, 0x4e, 0xa5, 0x20, 0xdb, 0x2b, 0xd1, 0xbb,
-  0xb2, 0x84, 0x2b, 0xcd, 0x5e, 0x6a, 0x07, 0x29, 0xa4, 0x52, 0xad, 0x0a,
-  0x90, 0xd2, 0xab, 0x45, 0x9d, 0xcf, 0xf8, 0x1d, 0x54, 0xec, 0xa1, 0xd7,
-  0xf7, 0x68, 0xfd, 0xf3, 0xc5, 0x8a, 0x75, 0x2a, 0xad, 0xe2, 0xcc, 0x1d,
-  0xba, 0xea, 0x23, 0x5d, 0xcb, 0x3e, 0x4b, 0xef, 0x13, 0x5f, 0xf4, 0x5c,
-  0xcb, 0x15, 0x06, 0x29, 0xf5, 0x18, 0x97, 0xe0, 0x57, 0x59, 0x1e, 0x14,
-  0xd6, 0x62, 0x80, 0x57, 0x3b, 0x0e, 0xb3, 0xbb, 0x83, 0x34, 0xe9, 0x2b,
-  0xfb, 0x40, 0x8b, 0x2d, 0xa1, 0x7e, 0x92, 0xba, 0x48, 0x8a, 0x1e, 0xdf,
-  0x32, 0xd7, 0x45, 0x49, 0x1b, 0x3a, 0x57, 0xa9, 0x43, 0x82, 0x16, 0xa3,
-  0xa0, 0x01, 0xe9, 0xca, 0x95, 0xf2, 0x91, 0x00, 0x52, 0x01, 0xf6, 0x87,
-  0x77, 0xb0, 0xa8, 0x55, 0x4e, 0xb5, 0xa2, 0x04, 0x58, 0x5d, 0x1b, 0xf5,
-  0x43, 0x57, 0xd1, 0x7e, 0x78, 0x0c, 0x7f, 0xfb, 0x9c, 0x9f, 0x60, 0x8d,
-  0x1e, 0x28, 0x40, 0x64, 0x02, 0x70, 0x35, 0xcb, 0xb2, 0xa5, 0x46, 0x55,
-  0x48, 0x81, 0x4d, 0x3d, 0x87, 0x76, 0x0c, 0x45, 0x04, 0x50, 0x2a, 0x54,
-  0xb5, 0x66, 0xdd, 0x01, 0xd7, 0xdb, 0x9b, 0x3d, 0x4f, 0x7c, 0xcf, 0x38,
-  0x45, 0xb5, 0x6e, 0x9f, 0xab, 0x2d, 0x51, 0x0d, 0x4d, 0x9c, 0xe9, 0x3e,
-  0x91, 0x6e, 0xcb, 0x74, 0x95, 0x75, 0xdb, 0x1c, 0xc9, 0xe8, 0x5a, 0xb7,
-  0x6a, 0xc9, 0xc7, 0xb0, 0x2b, 0xe2, 0x7b, 0x85, 0x3c, 0x98, 0x49, 0xd5,
-  0x63, 0xd4, 0x94, 0x97, 0x19, 0x21, 0xa8, 0x54, 0x91, 0x1e, 0x87, 0x01,
-  0x6b, 0x61, 0x1c, 0x76, 0x2c, 0x61, 0xc4, 0x6a, 0x11, 0xf8, 0xdd, 0x52,
-  0x23, 0x4c, 0x57, 0xb7, 0x91, 0x7b, 0x6a, 0xe3, 0xb1, 0x0f, 0x3d, 0x05,
-  0xc4, 0xc0, 0xe6, 0xff, 0x2c, 0x82, 0xf8, 0x68, 0x51, 0x2a, 0x31, 0x25,
-  0xca, 0x36, 0xf3, 0x83, 0x1a, 0xd5, 0xc3, 0x71, 0x91, 0xa8, 0xfd, 0xea,
-  0x1c, 0xe3, 0xc2, 0x76, 0xdc, 0x9e, 0xab, 0x0a, 0x15, 0x99, 0xc1, 0x94,
-  0xaf, 0xd8, 0xa8, 0x80, 0xe2, 0x91, 0xf2, 0x34, 0xb8, 0xb2, 0xd3, 0x16,
-  0x23, 0xf1, 0xe8, 0xd0, 0xb6, 0xf9, 0x63, 0x60, 0x6c, 0x6a, 0x9c, 0x08,
-  0x7a, 0x8f, 0x10, 0x13, 0x00, 0xbe, 0x2d, 0xec, 0x66, 0xda, 0x51, 0xa2,
-  0xe5, 0x4d, 0xc1, 0xb9, 0xcc, 0x0e, 0x55, 0xdf, 0xb5, 0xa3, 0x6f, 0xc6,
-  0x10, 0xdb, 0xda, 0x4e, 0x26, 0x0d, 0xf4, 0x1b, 0xf5, 0x5d, 0x6d, 0xd0,
-  0xc8, 0x52, 0x17, 0xc0, 0x2d, 0x41, 0xbe, 0xd3, 0x3b, 0xae, 0x23, 0x62,
-  0x4d, 0x2e, 0x37, 0x76, 0x5c, 0x22, 0xea, 0x81, 0xe7, 0xd3, 0x51, 0x4f,
-  0x06, 0x3b, 0x40, 0x8d, 0xe4, 0x0c, 0x0f, 0x7a, 0x59, 0x28, 0x47, 0x89,
-  0x8a, 0xd5, 0x49, 0x8e, 0xa3, 0x8e, 0x66, 0xb3, 0xf2, 0xf5, 0x37, 0x73,
-  0x06, 0x1a, 0x43, 0x60, 0x27, 0x97, 0x1a, 0x0b, 0x6a, 0x8d, 0x0d, 0xe5,
-  0x62, 0x6c, 0x5a, 0x28, 0x22, 0x54, 0x4a, 0xd0, 0x6e, 0x2d, 0x38, 0x6e,
-  0x56, 0xcb, 0xca, 0x31, 0xda, 0x7f, 0x22, 0x93, 0xaa, 0x50, 0x5d, 0x31,
-  0x9f, 0xc5, 0x11, 0xf7, 0x23, 0x7c, 0x28, 0xba, 0xd8, 0xdf, 0x57, 0x39,
-  0xcf, 0x48, 0xd2, 0xd7, 0x5f, 0xa2, 0x06, 0x71, 0xa5, 0xb1, 0xbb, 0xd7,
-  0x90, 0xc4, 0x34, 0x8c, 0xa8, 0x54, 0xae, 0x42, 0xdd, 0x47, 0x2a, 0x2c,
-  0x63, 0x45, 0x0e, 0x0d, 0x2c, 0x1f, 0x10, 0xc9, 0x73, 0xba, 0xa4, 0x86,
-  0x0e, 0xe9, 0x97, 0x18, 0x42, 0x07, 0x08, 0xb6, 0x1a, 0x6e, 0xaa, 0xdb,
-  0x58, 0x02, 0xed, 0x37, 0xe2, 0xc7, 0xe1, 0xb4, 0x57, 0x27, 0x44, 0xcd,
-  0x19, 0x09, 0xa4, 0xf9, 0xed, 0x08, 0x50, 0x8d, 0xd5, 0x0e, 0xe5, 0xa6,
-  0x2c, 0x34, 0xb9, 0x4d, 0x36, 0x8d, 0x30, 0xbd, 0x2a, 0xad, 0x66, 0x83,
-  0xbc, 0x4d, 0xf8, 0x02, 0xc2, 0xe6, 0x42, 0x74, 0x82, 0x1a, 0x08, 0x9c,
-  0xd0, 0x34, 0x3a, 0x24, 0x4d, 0x3a, 0xc6, 0xf4, 0x78, 0x88, 0xdd, 0x3c,
-  0xda, 0x6b, 0xa8, 0x42, 0x23, 0x6c, 0x05, 0x2d, 0xeb, 0x00, 0x8b, 0xb8,
-  0x06, 0x1f, 0xd5, 0xb3, 0xf3, 0x41, 0x25, 0x52, 0x5c, 0x20, 0x6d, 0x61,
-  0x53, 0x2c, 0x86, 0xdd, 0x10, 0x3a, 0xf9, 0x10, 0x46, 0xe5, 0x48, 0x11,
-  0xbf, 0xd0, 0x98, 0x73, 0x35, 0x93, 0x60, 0xa9, 0x7e, 0xc2, 0x08, 0x27,
-  0xfd, 0x84, 0xc1, 0x4e, 0xfa, 0x89, 0x00, 0x9d, 0x5c, 0xb2, 0x84, 0x28,
-  0x21, 0x7a, 0x9c, 0x4a, 0x7b, 0x79, 0x3a, 0x0a, 0x54, 0x00, 0x6f, 0x3e,
-  0x88, 0x39, 0x0f, 0xa7, 0x9d, 0x89, 0xec, 0x0c, 0x53, 0x24, 0xea, 0x0b,
-  0x86, 0xd5, 0x24, 0x5d, 0x85, 0x41, 0x31, 0xad, 0x1a, 0xb2, 0xbf, 0xda,
-  0xcd, 0xda, 0x14, 0x29, 0x5d, 0x87, 0x36, 0x0a, 0x49, 0xf7, 0xa6, 0xb1,
-  0x0f, 0x2c, 0xf9, 0x9c, 0x79, 0x04, 0x66, 0x43, 0x2c, 0xed, 0xef, 0x22,
-  0x0a, 0xa8, 0x0a, 0x30, 0x88, 0xac, 0x20, 0x75, 0xc2, 0x60, 0x74, 0x1c,
-  0x78, 0x76, 0xc5, 0x46, 0x86, 0xf2, 0xbe, 0x81, 0x75, 0xd6, 0x2a, 0xdb,
-  0xdb, 0xac, 0xa7, 0xd4, 0xa9, 0x3c, 0x30, 0xb0, 0x1e, 0x33, 0x25, 0x46,
-  0x93, 0xd5, 0xb2, 0x5a, 0xf4, 0x89, 0x1b, 0x63, 0xf3, 0x5c, 0xf3, 0xe6,
-  0x0f, 0xa3, 0xe6, 0x7c, 0x49, 0x53, 0x71, 0xd7, 0xd1, 0x66, 0xca, 0xc1,
-  0x30, 0x3d, 0x0a, 0xf8, 0x82, 0x21, 0x86, 0x97, 0x14, 0x7b, 0x07, 0x0d,
-  0xb6, 0xb9, 0xd7, 0xd5, 0x0a, 0x66, 0x51, 0x4d, 0x9b, 0x6b, 0xed, 0x36,
-  0xd6, 0xa7, 0x23, 0x58, 0xae, 0x9f, 0x28, 0x01, 0x28, 0x05, 0x28, 0x09,
-  0xd0, 0x66, 0x2a, 0x6c, 0x67, 0x48, 0x01, 0xcd, 0xda, 0xa0, 0xd1, 0x74,
-  0xe4, 0x1c, 0xd6, 0x6a, 0x2a, 0xf9, 0xd4, 0x6d, 0x77, 0x1b, 0xfd, 0xc9,
-  0xd5, 0xad, 0xd6, 0xee, 0x86, 0xdf, 0x0e, 0xdd, 0x0f, 0x58, 0xd0, 0x3c,
-  0xd5, 0x80, 0x46, 0xb6, 0x52, 0x6d, 0x37, 0x16, 0x08, 0x9e, 0x0c, 0x9f,
-  0x6c, 0x0f, 0x3f, 0x75, 0x5b, 0x9c, 0x8c, 0xad, 0x9b, 0x12, 0xc3, 0x5d,
-  0xa6, 0x1f, 0xd9, 0x12, 0x08, 0xb0, 0x0c, 0x3e, 0x14, 0x45, 0xab, 0x2b,
-  0xe0, 0x6c, 0x28, 0x5f, 0xd5, 0x8d, 0xd0, 0x67, 0xbe, 0x48, 0x50, 0xca,
-  0x20, 0x45, 0xfe, 0x40, 0x58, 0xcc, 0xf3, 0x6a, 0x96, 0xde, 0x75, 0x41,
-  0x6f, 0xe2, 0x30, 0x4b, 0x59, 0x27, 0x5a, 0xed, 0x30, 0x7c, 0xb6, 0xf2,
-  0xd4, 0xfb, 0xd5, 0xf1, 0xe1, 0xe8, 0x72, 0xd8, 0xbe, 0x72, 0xa2, 0x74,
-  0x16, 0x94, 0xa5, 0x57, 0x33, 0x11, 0xb8, 0x02, 0x1b, 0x16, 0xb9, 0xd4,
-  0x60, 0xe9, 0xd0, 0x9a, 0x78, 0x74, 0x03, 0x19, 0x9d, 0xb5, 0xcf, 0xf9,
-  0x37, 0x1d, 0x00, 0x3a, 0x90, 0x10, 0xe1, 0xf0, 0x1c, 0xe7, 0x33, 0x9e,
-  0x01, 0x8d, 0x8b, 0x58, 0xef, 0x5c, 0xe3, 0xfc, 0xb9, 0xde, 0x6b, 0x52,
-  0xcc, 0xd8, 0x24, 0x82, 0x6e, 0xda, 0x20, 0xb4, 0x6d, 0xba, 0xf9, 0xfe,
-  0xf0, 0xe2, 0xcd, 0xc9, 0x9b, 0xaf, 0x0f, 0x1a, 0x77, 0xe6, 0xac, 0x28,
-  0xaa, 0x4c, 0x7d, 0xf4, 0x82, 0x7f, 0x2b, 0xab, 0x25, 0xf9, 0x89, 0x41,
-  0xd5, 0xfa, 0xb8, 0x7e, 0xf6, 0x2c, 0xbd, 0x16, 0x90, 0xbf, 0xea, 0x36,
-  0xd1, 0xea, 0xf2, 0x28, 0xbf, 0xc0, 0x12, 0xcf, 0xf0, 0xe1, 0xc2, 0x89,
-  0x55, 0x31, 0xb9, 0xad, 0x1e, 0x8b, 0xb1, 0xeb, 0x93, 0x23, 0xbf, 0x47,
-  0x67, 0x47, 0xdf, 0x8e, 0x1e, 0x07, 0x71, 0xdf, 0x75, 0xcb, 0x70, 0xa3,
-  0x88, 0xdd, 0x78, 0x23, 0x4e, 0x93, 0xfc, 0x48, 0xd0, 0xf7, 0x03, 0x85,
-  0x6e, 0x3b, 0x8f, 0x95, 0x87, 0xf9, 0x67, 0x53, 0x08, 0x9b, 0xba, 0xf2,
-  0x62, 0xe5, 0xb0, 0x8f, 0x03, 0xb8, 0xa4, 0xbe, 0x61, 0xfe, 0x77, 0x54,
-  0xf2, 0xb2, 0x0a, 0x00, 0x01, 0xe6, 0x7f, 0x14, 0x1d, 0xc7, 0x30, 0x10,
-  0x62, 0x2c, 0xf9, 0xac, 0xdf, 0x16, 0x77, 0x88, 0x53, 0x90, 0xfc, 0x37,
-  0x5b, 0x71, 0xcf, 0xc0, 0x8b, 0x70, 0x80, 0x1a, 0x2e, 0x58, 0xb3, 0x2d,
-  0x7f, 0xc8, 0xca, 0x5b, 0x34, 0x39, 0x43, 0x85, 0xf8, 0xa1, 0xea, 0x66,
-  0xa7, 0xfa, 0xd4, 0xc1, 0xce, 0x8e, 0x37, 0x67, 0x49, 0x70, 0xe1, 0xf0,
-  0xf7, 0xd3, 0x0a, 0xa4, 0xcf, 0xf4, 0x57, 0x11, 0x45, 0xfa, 0x69, 0x54,
-  0x11, 0x49, 0xc9, 0xbf, 0x90, 0x2a, 0x3e, 0x5f, 0xc7, 0x6c, 0x75, 0xfa,
-  0xbf, 0x80, 0x26, 0x0c, 0x35, 0xfd, 0xbf, 0x13, 0x55, 0xa4, 0x9f, 0x46,
-  0x16, 0x69, 0x83, 0x2e, 0xd6, 0xe4, 0x24, 0xff, 0x9e, 0x75, 0x00, 0x31,
-  0x8c, 0x27, 0x03, 0x87, 0x6a, 0xfc, 0x31, 0x8a, 0x69, 0x98, 0x68, 0x59,
-  0x48, 0x00, 0xd1, 0x3c, 0xd1, 0xd9, 0x6e, 0xc1, 0x12, 0x9c, 0x85, 0xa0,
-  0x5d, 0x66, 0x8c, 0xef, 0x06, 0x57, 0xc6, 0xdd, 0xb7, 0xfd, 0x51, 0x0e,
-  0xe4, 0x68, 0x4b, 0xf0, 0x83, 0x84, 0xba, 0xa2, 0x70, 0xe6, 0x5f, 0x4e,
-  0x6b, 0xff, 0x57, 0x70, 0xa0, 0x27, 0x1e, 0x93, 0xfa, 0x53, 0x68, 0xee,
-  0xc9, 0x8d, 0xa3, 0xb9, 0xae, 0xc2, 0x78, 0xc6, 0x9b, 0x7e, 0x6b, 0x92,
-  0x6b, 0xc9, 0x1e, 0x1d, 0x72, 0x95, 0xad, 0x3a, 0xdc, 0xd4, 0x25, 0xa9,
-  0xd8, 0x88, 0x6e, 0x08, 0xa1, 0x8f, 0x35, 0x09, 0x24, 0xae, 0x03, 0xa0,
-  0x74, 0xec, 0x52, 0x79, 0x03, 0xeb, 0xb1, 0xa0, 0x21, 0xd1, 0x08, 0xa2,
-  0x3b, 0xf3, 0xc9, 0xaf, 0x61, 0x8f, 0x46, 0xe9, 0x9c, 0x4f, 0x3f, 0x96,
-  0xa4, 0x61, 0xa1, 0x6f, 0x39, 0x18, 0xe2, 0x26, 0xea, 0x88, 0x29, 0x84,
-  0x33, 0x18, 0x40, 0xaa, 0x96, 0x64, 0xf5, 0x51, 0x5a, 0x6f, 0xf0, 0xd1,
-  0x8e, 0xcc, 0x82, 0x75, 0x09, 0x56, 0xff, 0xb7, 0xf0, 0xd0, 0x27, 0x9f,
-  0x46, 0xce, 0xff, 0x8c, 0x9b, 0xf5, 0xbf, 0x11, 0xf1, 0x76, 0x6c, 0xf3,
-  0x96, 0x22, 0x63, 0x89, 0x66, 0x28, 0x17, 0xcb, 0xb6, 0xe0, 0x9c, 0x38,
-  0x11, 0x1e, 0x8b, 0x78, 0x72, 0xfe, 0xdd, 0x53, 0x09, 0x7c, 0x1b, 0xc5,
-  0xa0, 0xc8, 0xa7, 0x2f, 0x0f, 0xcf, 0x3b, 0x6e, 0x86, 0x6b, 0x52, 0xf8,
-  0x97, 0xf9, 0x80, 0xd5, 0x2a, 0x36, 0xc1, 0x3d, 0xd7, 0x5f, 0x98, 0xc4,
-  0xbb, 0x8c, 0x8c, 0x66, 0x24, 0xb5, 0xe7, 0x05, 0x75, 0x55, 0x3c, 0xc6,
-  0x98, 0xa5, 0xea, 0x67, 0xec, 0x70, 0x9a, 0xcc, 0xa7, 0x3b, 0xf2, 0xe7,
-  0xe0, 0xea, 0xef, 0xd3, 0x58, 0xd5, 0x0b, 0xa1, 0x58, 0x1b, 0x69, 0x71,
-  0x0a, 0x13, 0x9b, 0xd7, 0xeb, 0xca, 0x94, 0x56, 0x07, 0xc1, 0x29, 0x4f,
-  0x34, 0xd3, 0x13, 0x30, 0xa6, 0xeb, 0xe6, 0x25, 0x34, 0x17, 0xe1, 0x56,
-  0x0b, 0xca, 0x3b, 0xf0, 0xa2, 0xf9, 0xeb, 0x9d, 0xa0, 0x29, 0xd7, 0x7e,
-  0xc7, 0x67, 0xd6, 0x7a, 0x47, 0x02, 0x0f, 0x77, 0x26, 0x6d, 0x31, 0xc2,
-  0x9b, 0x8e, 0x2a, 0xe8, 0x27, 0xfe, 0x12, 0xf6, 0x86, 0x49, 0x47, 0x79,
-  0xfb, 0x3b, 0x14, 0xd1, 0xf0, 0x77, 0xad, 0x3c, 0xef, 0xf6, 0x5d, 0xaa,
-  0x0d, 0x28, 0x1e, 0xd9, 0x62, 0x92, 0x2f, 0xd3, 0x99, 0x26, 0x19, 0x3e,
-  0x54, 0xf5, 0xa2, 0x5d, 0x34, 0xa0, 0x39, 0x21, 0x52, 0xb6, 0xdb, 0x15,
-  0x06, 0x9b, 0xf0, 0xaf, 0xf2, 0x5c, 0x62, 0x09, 0xbc, 0xd8, 0x3b, 0x1c,
-  0x4f, 0xd5, 0xd2, 0x25, 0xec, 0x1f, 0x19, 0xa5, 0x78, 0x24, 0x4e, 0x4a,
-  0x82, 0x83, 0x1a, 0xd0, 0x43, 0x7b, 0xcf, 0x9e, 0xee, 0x25, 0x15, 0xd7,
-  0x13, 0xcf, 0xb9, 0xb2, 0x92, 0x34, 0xf0, 0x78, 0xf8, 0x68, 0xe7, 0xf1,
-  0xf0, 0x71, 0xe2, 0xeb, 0x2f, 0x8e, 0x33, 0xeb, 0x80, 0x18, 0x67, 0x84,
-  0xca, 0x20, 0xe7, 0xe9, 0xcd, 0xf1, 0x11, 0xb3, 0x6a, 0x4b, 0x38, 0x6d,
-  0xa9, 0x77, 0x06, 0x0a, 0x44, 0xab, 0x36, 0x74, 0x39, 0xaa, 0x5d, 0x4a,
-  0x69, 0xc7, 0x72, 0x24, 0x46, 0x9b, 0x08, 0xd1, 0x5f, 0xb8, 0x91, 0x30,
-  0xb3, 0x14, 0x32, 0xd5, 0x95, 0xe9, 0x82, 0xa0, 0x08, 0x17, 0x25, 0x58,
-  0xb2, 0xe1, 0xc3, 0x75, 0x1c, 0xaa, 0x9a, 0xf4, 0xd4, 0xb2, 0x3b, 0x4a,
-  0xe8, 0x42, 0x8d, 0x91, 0x70, 0x05, 0x72, 0x49, 0x58, 0xad, 0xfd, 0x2d,
-  0xaf, 0x58, 0xfc, 0x7c, 0x23, 0xa5, 0xc2, 0x82, 0x5f, 0x70, 0x37, 0xad,
-  0x2b, 0x3e, 0x2f, 0x25, 0x2f, 0x50, 0x99, 0x01, 0xd5, 0x33, 0x37, 0x07,
-  0x9b, 0x76, 0x49, 0x59, 0xec, 0x0c, 0xf7, 0x56, 0x8b, 0xc5, 0xb4, 0x8d,
-  0xe6, 0xfd, 0x9b, 0xcb, 0xad, 0x35, 0xdf, 0x06, 0x75, 0x36, 0x5b, 0x64,
-  0xb5, 0x96, 0x64, 0x4b, 0x9e, 0x9f, 0x9d, 0x5f, 0xbe, 0x78, 0x9f, 0xce,
-  0xa2, 0x18, 0x0f, 0x46, 0xf1, 0xb3, 0x02, 0x76, 0xce, 0x9a, 0xcb, 0x6f,
-  0x06, 0xc9, 0x51, 0x23, 0x97, 0x23, 0x14, 0x94, 0xba, 0x8b, 0x72, 0x81,
-  0x2e, 0x2f, 0xff, 0x7a, 0x7e, 0xfc, 0xe2, 0x39, 0xdb, 0x82, 0xbf, 0x60,
-  0x83, 0x7c, 0xd5, 0x30, 0x0d, 0x73, 0xa9, 0xd4, 0xf8, 0x66, 0xfc, 0xe1,
-  0xe5, 0xc9, 0xe8, 0xfc, 0xf4, 0xec, 0xe8, 0xc5, 0xf3, 0x1f, 0xd8, 0x85,
-  0x49, 0xab, 0x77, 0x1f, 0xbc, 0xeb, 0x3e, 0x73, 0xe9, 0x0e, 0x71, 0xd9,
-  0xa2, 0xe3, 0xef, 0xdf, 0x1d, 0xbf, 0xf9, 0xee, 0xc5, 0xf3, 0xf7, 0x69,
-  0xd9, 0xe7, 0xf9, 0xc9, 0xdb, 0x6c, 0x92, 0xed, 0xa8, 0x1c, 0x1a, 0xac,
-  0xd1, 0x25, 0xea, 0x58, 0x2d, 0x39, 0x76, 0xf0, 0x81, 0xb0, 0x32, 0xb9,
-  0xcb, 0x7c, 0xa5, 0xa0, 0xb6, 0x80, 0x1f, 0x44, 0xb1, 0x35, 0x53, 0x5a,
-  0xdf, 0x5e, 0x9c, 0x0e, 0x3b, 0x09, 0xc6, 0x55, 0x35, 0xf6, 0x48, 0xea,
-  0x6a, 0x1b, 0xf2, 0xad, 0x02, 0xb6, 0xfc, 0xc8, 0x25, 0xb7, 0x29, 0x64,
-  0xe5, 0x83, 0x31, 0x74, 0xc2, 0xba, 0x7c, 0x38, 0xad, 0x2b, 0xe2, 0x25,
-  0x41, 0x34, 0x34, 0x83, 0x1c, 0x19, 0xf4, 0x3b, 0x16, 0x99, 0x32, 0x8b,
-  0x4d, 0x5e, 0x3e, 0xf6, 0x1d, 0xbe, 0x77, 0x08, 0x35, 0x1c, 0x01, 0x82,
-  0xb9, 0x1d, 0x09, 0x50, 0xae, 0x24, 0xa8, 0x34, 0x27, 0x21, 0x8c, 0xb8,
-  0x28, 0xbb, 0xd1, 0xc6, 0xb9, 0xd2, 0xd2, 0x0d, 0x87, 0xc6, 0xdb, 0xb8,
-  0x4a, 0xa1, 0xdf, 0x66, 0xf2, 0x83, 0xa5, 0xa6, 0x05, 0x10, 0xf0, 0x1d,
-  0xe9, 0x71, 0x4d, 0x7c, 0x4d, 0xf1, 0x44, 0xb2, 0x4c, 0xc9, 0xb9, 0x7b,
-  0x9c, 0x7e, 0xe9, 0x22, 0x87, 0x65, 0x63, 0x3d, 0x3a, 0x73, 0xec, 0xcb,
-  0x44, 0xdd, 0x62, 0x77, 0xe6, 0xec, 0xb0, 0x15, 0x0e, 0x96, 0x7a, 0x6b,
-  0xb4, 0xed, 0xd2, 0x1d, 0xb9, 0xc5, 0xf3, 0xb7, 0x97, 0x41, 0xa6, 0x6b,
-  0x14, 0xad, 0x16, 0x1d, 0xc2, 0x96, 0xa0, 0xec, 0x17, 0xaa, 0x37, 0xe8,
-  0xb5, 0x2b, 0x02, 0x98, 0xa9, 0x9f, 0x18, 0x03, 0x97, 0xde, 0xf5, 0x99,
-  0xf4, 0x91, 0xe8, 0xa7, 0x71, 0xc4, 0x92, 0xeb, 0xc5, 0xb5, 0xac, 0x25,
-  0x10, 0x29, 0x73, 0xc8, 0xf5, 0x41, 0x3f, 0xc3, 0xb0, 0x1f, 0x71, 0xbc,
-  0x6d, 0x47, 0x49, 0x7d, 0xf7, 0xed, 0x48, 0x7d, 0xd7, 0x37, 0x8f, 0xd3,
-  0x41, 0x9a, 0xc9, 0xc8, 0x60, 0xf3, 0x66, 0xb7, 0xc2, 0x98, 0x28, 0xaf,
-  0x03, 0xfd, 0x5e, 0xae, 0x2f, 0x20, 0x6f, 0x4b, 0x29, 0x5c, 0xce, 0x4e,
-  0x47, 0xd0, 0x97, 0x41, 0x2a, 0xab, 0xb7, 0xc9, 0x7c, 0x8a, 0xd6, 0x6c,
-  0xd5, 0x09, 0x1a, 0x24, 0x9b, 0xd8, 0xb1, 0xa8, 0x7f, 0x6d, 0x09, 0xc8,
-  0xcc, 0x0a, 0x07, 0x97, 0x3e, 0x6a, 0x8f, 0x83, 0xee, 0x3a, 0x03, 0xb0,
-  0x50, 0x18, 0x69, 0x70, 0x19, 0xe1, 0x91, 0xf1, 0x0b, 0x1c, 0xb2, 0x16,
-  0x84, 0xb2, 0x23, 0x42, 0x94, 0xf7, 0x45, 0x28, 0x49, 0x33, 0x6e, 0x20,
-  0x54, 0x0c, 0x35, 0x80, 0x96, 0xfd, 0x21, 0x6b, 0xf2, 0x9a, 0xab, 0xa4,
-  0x77, 0x3d, 0x2b, 0xc6, 0x63, 0x9a, 0x54, 0xcf, 0x61, 0xbf, 0x5f, 0x12,
-  0xdb, 0xbc, 0x86, 0xc8, 0xdb, 0x37, 0xb4, 0x3a, 0x7f, 0x58, 0x51, 0x7b,
-  0x04, 0x7d, 0xad, 0xcb, 0xcd, 0xc5, 0xde, 0x1a, 0xb2, 0xb9, 0xed, 0x2b,
-  0x6a, 0x83, 0xdc, 0x07, 0x85, 0xcb, 0x10, 0x8b, 0xc5, 0x9f, 0x5a, 0xff,
-  0x51, 0x18, 0x2f, 0xe7, 0x92, 0xfa, 0xac, 0x4f, 0x65, 0x3e, 0x60, 0x39,
-  0x5a, 0x13, 0x22, 0xaf, 0xd6, 0x94, 0x7d, 0xbf, 0x4c, 0x7a, 0xff, 0xce,
-  0x83, 0xd8, 0xeb, 0xf3, 0xcf, 0xfd, 0xff, 0xec, 0x85, 0x25, 0xeb, 0x65,
-  0xf0, 0x35, 0x17, 0x5b, 0xa8, 0xac, 0xdc, 0x48, 0x47, 0x75, 0x11, 0x76,
-  0x1b, 0xae, 0x6d, 0x3d, 0x9f, 0x5f, 0xff, 0xb8, 0x37, 0xd8, 0xdb, 0xdd,
-  0xdd, 0xfd, 0x79, 0xb8, 0xe4, 0xa5, 0xbb, 0x42, 0xf3, 0xf4, 0x73, 0xb8,
-  0xcc, 0x27, 0x6c, 0xc8, 0xa7, 0xcd, 0xcc, 0x53, 0x6e, 0x7a, 0x47, 0xfa,
-  0xdb, 0x09, 0x6e, 0xfe, 0x7a, 0xb2, 0x1c, 0x2c, 0x8a, 0xae, 0x10, 0x99,
-  0xcb, 0x55, 0xb9, 0x08, 0xca, 0xe6, 0xbd, 0x7b, 0x73, 0xf6, 0xf2, 0xf8,
-  0xf4, 0xf0, 0xaf, 0x16, 0x62, 0xeb, 0x60, 0x13, 0x78, 0x20, 0xef, 0xb2,
-  0xb4, 0xba, 0x7f, 0x57, 0x65, 0x35, 0x7d, 0xb9, 0xf5, 0x68, 0x1b, 0x99,
-  0xaf, 0x51, 0x8d, 0xda, 0xeb, 0xac, 0x51, 0x6b, 0x5b, 0x23, 0x96, 0xfc,
-  0xed, 0x3d, 0x6c, 0xbb, 0x9e, 0x1a, 0x81, 0xaf, 0x35, 0x7b, 0x43, 0xc6,
-  0xb3, 0xdb, 0x2a, 0xff, 0x07, 0xdd, 0x3b, 0x8c, 0xed, 0x17, 0xc7, 0x33,
-  0x5f, 0x2a, 0x82, 0x42, 0x9d, 0xf0, 0x6f, 0xc9, 0x57, 0xa7, 0xdf, 0x72,
-  0x18, 0xb9, 0x53, 0x6a, 0xe6, 0x92, 0xb2, 0x9f, 0x7c, 0xf1, 0x64, 0x6f,
-  0x7f, 0x3b, 0xa8, 0x47, 0xce, 0xc9, 0x28, 0x7c, 0x38, 0x23, 0xb7, 0xfa,
-  0x3f, 0x34, 0x40, 0x20, 0xe0, 0xca, 0xde, 0xc7, 0x88, 0xd8, 0x16, 0xbb,
-  0xe5, 0x00, 0x3a, 0x07, 0x5f, 0x70, 0x0d, 0x98, 0x3f, 0x4e, 0x14, 0x89,
-  0xc0, 0x72, 0x2e, 0x7d, 0x56, 0xd0, 0x30, 0x28, 0xb3, 0x97, 0xd0, 0x70,
-  0x34, 0xbf, 0xa4, 0x5b, 0x36, 0xf9, 0xad, 0x65, 0x9d, 0x8f, 0x7a, 0xaa,
-  0x68, 0xb5, 0x67, 0x15, 0x7b, 0x89, 0x59, 0xfe, 0x48, 0x9e, 0xdb, 0x6f,
-  0x5f, 0xc4, 0x91, 0x75, 0x09, 0x3b, 0x65, 0x62, 0x0c, 0x1b, 0xc8, 0x2d,
-  0xa8, 0x31, 0xcc, 0x31, 0x8d, 0xbe, 0x44, 0x48, 0x98, 0x6f, 0x10, 0x87,
-  0x7f, 0xba, 0x79, 0xf5, 0x46, 0x17, 0xe7, 0xbd, 0xbe, 0xea, 0x29, 0xd4,
-  0xc1, 0x80, 0xfe, 0xa6, 0xf1, 0x42, 0x84, 0x7f, 0xb2, 0xfb, 0xe4, 0xf1,
-  0xb6, 0x1a, 0x3d, 0x30, 0x4e, 0x29, 0x29, 0x11, 0x63, 0xfe, 0xe3, 0x4b,
-  0x57, 0xe6, 0x52, 0xb0, 0x2f, 0x7c, 0xa2, 0x1d, 0x91, 0x5e, 0x73, 0x96,
-  0x62, 0x30, 0xe9, 0x2b, 0xae, 0xfd, 0xda, 0xa8, 0x08, 0xdd, 0x33, 0xc8,
-  0x7d, 0x18, 0x66, 0x5c, 0x82, 0xf8, 0x71, 0x6b, 0x21, 0x31, 0xc0, 0xe7,
-  0xfc, 0xb3, 0x6b, 0x01, 0xf9, 0x73, 0xa7, 0xd2, 0x82, 0xae, 0x0c, 0xdd,
-  0x87, 0x57, 0xb6, 0xbd, 0xb0, 0x8a, 0x30, 0xb5, 0xde, 0x8b, 0xe2, 0xfc,
-  0xee, 0xe1, 0xe4, 0x86, 0xce, 0x31, 0x5a, 0x69, 0xc2, 0x49, 0x73, 0x71,
-  0x34, 0xbd, 0x25, 0xd2, 0x2d, 0xeb, 0x8f, 0x4f, 0xce, 0xb5, 0xf1, 0xdc,
-  0x7e, 0xeb, 0x9a, 0xa4, 0xaf, 0x36, 0xfa, 0xcf, 0x99, 0xa4, 0x9f, 0x23,
-  0x16, 0xdf, 0xd2, 0x77, 0xaa, 0x8e, 0x32, 0x3d, 0x0f, 0x4d, 0xaf, 0x1c,
-  0x58, 0x54, 0x7f, 0x37, 0xc8, 0xed, 0x85, 0xc6, 0xff, 0xa4, 0x7c, 0x65,
-  0x32, 0x24, 0x1c, 0x9f, 0xc7, 0x4b, 0x65, 0x09, 0x83, 0x63, 0x7d, 0xd7,
-  0xc7, 0x60, 0xc8, 0x8d, 0x13, 0x87, 0x5e, 0xba, 0xfc, 0x10, 0x17, 0xb5,
-  0x56, 0x35, 0xeb, 0x8d, 0x89, 0xbf, 0x6f, 0xb5, 0xb0, 0x6e, 0x7c, 0xe8,
-  0x09, 0x84, 0x82, 0x28, 0x5a, 0x69, 0x92, 0xe5, 0x0a, 0xc1, 0xf9, 0xb1,
-  0x10, 0xdf, 0xa7, 0xcd, 0x09, 0x33, 0xf6, 0x4a, 0xa7, 0x50, 0x6f, 0xc5,
-  0xfd, 0xd8, 0x39, 0x2c, 0x75, 0x40, 0xe9, 0xc9, 0xe9, 0x6a, 0xbe, 0x34,
-  0x4c, 0x04, 0xc6, 0x4b, 0x97, 0x10, 0x51, 0x89, 0x80, 0x22, 0xe6, 0x7e,
-  0x5d, 0xe0, 0x4f, 0x1e, 0x67, 0x3f, 0xb2, 0x0c, 0x4c, 0x66, 0x2b, 0x2c,
-  0xce, 0x34, 0x13, 0x78, 0x46, 0x8e, 0x0b, 0x0f, 0xea, 0x1e, 0xf7, 0x1d,
-  0x3c, 0x01, 0xa4, 0x37, 0x95, 0x81, 0x44, 0x86, 0x7b, 0x1b, 0xf9, 0x62,
-  0x59, 0xee, 0xe2, 0xb0, 0x06, 0x8e, 0x06, 0x52, 0x91, 0xd7, 0x55, 0xb1,
-  0xb7, 0xa2, 0xf7, 0x99, 0x84, 0x67, 0xaf, 0x51, 0x24, 0xbb, 0x8d, 0x9c,
-  0xa1, 0x81, 0x13, 0x01, 0x18, 0x83, 0xf7, 0x5a, 0x5e, 0x78, 0x5c, 0x54,
-  0x99, 0x64, 0x15, 0x60, 0x29, 0x22, 0xa3, 0x43, 0x35, 0xc9, 0xf3, 0xdf,
-  0xd3, 0xcb, 0x22, 0xbd, 0xa2, 0x9b, 0x87, 0x37, 0x8c, 0x03, 0x2a, 0xb1,
-  0x65, 0xba, 0x67, 0x8d, 0x4d, 0x73, 0x7b, 0xc6, 0x5b, 0xe6, 0x76, 0xec,
-  0xff, 0x9c, 0x0d, 0xa3, 0xff, 0x7f, 0x1f, 0xd5, 0x49, 0xc7, 0x3c, 0x05,
-  0x0e, 0x75, 0x96, 0xa5, 0x9c, 0xda, 0x6c, 0x36, 0xd0, 0x9b, 0xec, 0x83,
-  0x68, 0x8f, 0xf1, 0x6d, 0x21, 0x37, 0xd3, 0x8d, 0x99, 0x5d, 0x0e, 0x47,
-  0x47, 0x27, 0x27, 0x0d, 0x33, 0x14, 0x2f, 0x9b, 0xe4, 0x06, 0x20, 0x92,
-  0x29, 0xa9, 0x38, 0x4d, 0xc2, 0x8b, 0xe7, 0x91, 0xd2, 0xca, 0x29, 0x82,
-  0x80, 0x56, 0xe4, 0x62, 0x8e, 0x69, 0x95, 0x5b, 0x4e, 0x66, 0xaa, 0x4c,
-  0x70, 0xc1, 0xea, 0x25, 0x07, 0xc7, 0xdf, 0xac, 0x48, 0x58, 0xaa, 0x7e,
-  0x6b, 0x82, 0x1c, 0xfe, 0xde, 0xa4, 0xd7, 0x91, 0x3c, 0x77, 0x5e, 0x6a,
-  0x7e, 0x1f, 0x82, 0x78, 0x11, 0x06, 0x2d, 0x09, 0x70, 0x8c, 0xc2, 0xc2,
-  0x5a, 0x84, 0x50, 0x20, 0x0d, 0xd2, 0xc6, 0xcb, 0x1a, 0x86, 0x17, 0xb1,
-  0x22, 0xd5, 0x1a, 0x76, 0x8c, 0xaa, 0x5d, 0x84, 0xf4, 0x71, 0x43, 0x54,
-  0x71, 0xb5, 0xb5, 0xe5, 0x8a, 0x3d, 0xb0, 0xab, 0xe6, 0x2f, 0x6a, 0x76,
-  0x89, 0xae, 0xa3, 0x20, 0xdd, 0xcd, 0x95, 0x82, 0xea, 0xfb, 0x1b, 0x0a,
-  0x27, 0x41, 0xd3, 0x1b, 0xd9, 0x5a, 0x70, 0xcd, 0xca, 0x96, 0x99, 0x70,
-  0x62, 0x95, 0x18, 0x9a, 0x9e, 0x08, 0x2a, 0xa6, 0xaf, 0x45, 0xe1, 0x75,
-  0x67, 0x6e, 0xfb, 0x92, 0xc1, 0x02, 0x61, 0x98, 0x8b, 0xac, 0x2e, 0x27,
-  0xdd, 0x42, 0x0b, 0xbe, 0x1a, 0xd8, 0x08, 0xd6, 0x15, 0x70, 0x47, 0x9e,
-  0xe6, 0x7d, 0xa3, 0x9a, 0x4a, 0x30, 0x19, 0xdc, 0x8e, 0x34, 0x24, 0x87,
-  0x43, 0xab, 0x15, 0xfa, 0xae, 0xa3, 0xe8, 0x21, 0x9d, 0x58, 0x3f, 0x10,
-  0x71, 0x97, 0x24, 0xba, 0x2e, 0x2d, 0x27, 0xcb, 0x96, 0x65, 0x6d, 0x99,
-  0x4f, 0x98, 0x4a, 0xb8, 0xca, 0xf2, 0xf9, 0xc9, 0x40, 0x13, 0x5b, 0xb5,
-  0x18, 0xaa, 0xa0, 0x05, 0x21, 0xd3, 0x48, 0x33, 0x3d, 0x82, 0xda, 0xaf,
-  0x71, 0xa5, 0x51, 0xab, 0x01, 0x6a, 0x7a, 0x9d, 0x54, 0xf7, 0xb3, 0xc0,
-  0xa1, 0x2a, 0x9b, 0xa1, 0x32, 0x53, 0x38, 0x4f, 0x4b, 0x9e, 0xa2, 0x21,
-  0x0e, 0x22, 0x2b, 0x7b, 0xe9, 0xea, 0xdc, 0xc1, 0x7a, 0x12, 0x1a, 0xb6,
-  0xc6, 0xf7, 0xad, 0xe5, 0x53, 0xdf, 0x8f, 0x28, 0x87, 0x93, 0x62, 0x16,
-  0x19, 0x69, 0x55, 0x5a, 0x71, 0xc7, 0xe7, 0x80, 0xf8, 0xd7, 0x2a, 0x39,
-  0x40, 0x5a, 0xd9, 0x58, 0x9a, 0xf1, 0x75, 0x0c, 0x23, 0x9a, 0x29, 0xe2,
-  0x1a, 0xcd, 0x5c, 0x1e, 0xb6, 0xb8, 0xa3, 0xd9, 0x5e, 0x79, 0xe8, 0x67,
-  0xb4, 0xf9, 0x17, 0x5e, 0x9e, 0x17, 0xbc, 0x50, 0xbd, 0x4e, 0x0d, 0xde,
-  0x95, 0xdb, 0xf4, 0x60, 0xba, 0x44, 0xa6, 0xd2, 0xa3, 0x75, 0x08, 0xae,
-  0x15, 0x94, 0xda, 0x31, 0x9b, 0x64, 0x37, 0xda, 0xe2, 0xc4, 0x5b, 0x32,
-  0xb5, 0x12, 0x76, 0x90, 0x5a, 0x44, 0x5c, 0xaf, 0x94, 0x2b, 0xbd, 0x4d,
-  0xd3, 0x87, 0x75, 0x0c, 0xc3, 0x26, 0xa0, 0x6a, 0x12, 0x3f, 0x2f, 0x61,
-  0x79, 0x1c, 0xa3, 0x27, 0xd9, 0xc7, 0xaf, 0x59, 0xf5, 0xd1, 0xc8, 0xb9,
-  0xe6, 0x70, 0xb5, 0xda, 0x5b, 0x2c, 0x12, 0xb9, 0xcd, 0x96, 0xe7, 0x83,
-  0xbb, 0x46, 0x4a, 0x24, 0x03, 0x4a, 0x3d, 0xfc, 0x38, 0x51, 0x9d, 0xb2,
-  0xd3, 0xea, 0xd7, 0xdc, 0x13, 0x5a, 0xef, 0x14, 0x36, 0x1a, 0xce, 0xe8,
-  0x90, 0xaa, 0x04, 0x8f, 0x3e, 0x7f, 0xdc, 0x97, 0xdf, 0x9f, 0xec, 0x3e,
-  0xdb, 0xc7, 0xa8, 0x4f, 0x8e, 0x2f, 0x5f, 0x25, 0xd3, 0x32, 0xbd, 0x8a,
-  0xac, 0x7e, 0xfc, 0xd9, 0x20, 0x4b, 0xcb, 0x1b, 0x4e, 0x93, 0x26, 0x1a,
-  0x1d, 0x54, 0x73, 0x52, 0x4f, 0x77, 0x77, 0xb9, 0x3e, 0x68, 0x83, 0x5b,
-  0x3d, 0x92, 0x08, 0xca, 0xdf, 0x8d, 0x1b, 0xbf, 0x75, 0x4e, 0xcc, 0x2e,
-  0x26, 0xf8, 0x49, 0xcc, 0x4f, 0xce, 0xa8, 0xf1, 0xbf, 0xa0, 0x7c, 0xa4,
-  0xfa, 0xa5, 0x1f, 0xae, 0x0f, 0xbc, 0xbe, 0x00, 0xf0, 0xa7, 0xb0, 0x86,
-  0x69, 0xd1, 0xae, 0x08, 0xdd, 0xd5, 0xc7, 0x3a, 0xae, 0x00, 0x90, 0xe4,
-  0xd5, 0x72, 0x2d, 0x5b, 0xe0, 0x09, 0xb5, 0xd5, 0x07, 0xcf, 0x13, 0x7e,
-  0x29, 0x53, 0xe8, 0x42, 0xc0, 0x6d, 0x31, 0x85, 0xb7, 0xc4, 0x14, 0x7e,
-  0x4f, 0xa9, 0x8f, 0xe7, 0xfd, 0xfc, 0xed, 0xc5, 0xe9, 0xba, 0x7d, 0x4d,
-  0x61, 0xc5, 0xe2, 0xdc, 0x6d, 0x2e, 0x7a, 0xdb, 0xcc, 0x74, 0x01, 0xd8,
-  0x73, 0x51, 0x71, 0x0c, 0x20, 0xc9, 0x5a, 0x8b, 0xe9, 0x7d, 0x80, 0x3a,
-  0x10, 0xe5, 0x6e, 0x2d, 0x1a, 0x1c, 0x84, 0x1a, 0xe5, 0xdc, 0x52, 0xc4,
-  0x86, 0x06, 0x78, 0x97, 0x1f, 0xc9, 0x52, 0x34, 0x56, 0x22, 0x3e, 0xea,
-  0x06, 0x2c, 0xa1, 0x42, 0xe6, 0x5d, 0x16, 0xae, 0x1c, 0x17, 0x8c, 0x84,
-  0x5d, 0x8b, 0xcb, 0x13, 0xe2, 0x44, 0x7c, 0x71, 0x05, 0xf5, 0x1d, 0xf3,
-  0x6b, 0xd4, 0x43, 0xd6, 0x20, 0x5f, 0xe4, 0x27, 0xfb, 0xa4, 0xe1, 0x2e,
-  0x63, 0xb8, 0x2b, 0x15, 0x69, 0x6b, 0x1a, 0xca, 0x4f, 0x1d, 0x69, 0x4f,
-  0xe6, 0xbe, 0xc0, 0x82, 0x82, 0x15, 0x0a, 0xdb, 0xd1, 0x37, 0x76, 0xea,
-  0x74, 0x76, 0x8b, 0xa4, 0xd6, 0x61, 0xf2, 0x5a, 0x16, 0x97, 0x06, 0xc8,
-  0x70, 0x95, 0x5d, 0x00, 0xa2, 0xe3, 0xd5, 0xf5, 0x35, 0xe0, 0xe9, 0x0f,
-  0x45, 0xf2, 0xa9, 0xac, 0xe6, 0x16, 0x2e, 0x98, 0xcd, 0x2f, 0x36, 0x35,
-  0x81, 0xb0, 0x77, 0x43, 0x62, 0x22, 0x87, 0x1c, 0x93, 0x20, 0xde, 0x53,
-  0xac, 0xca, 0x08, 0xe7, 0x88, 0x0f, 0x41, 0x3f, 0xd9, 0x7c, 0xde, 0xfd,
-  0x92, 0xe8, 0x80, 0x5a, 0xcd, 0xdc, 0xb9, 0x21, 0x68, 0x21, 0x6f, 0x72,
-  0x62, 0x4e, 0x8b, 0x38, 0x8e, 0x58, 0x12, 0x7f, 0xc5, 0x2b, 0xac, 0xe5,
-  0x2f, 0x3a, 0x07, 0xf9, 0xaf, 0xd6, 0x9f, 0x95, 0x9d, 0x00, 0x08, 0xd8,
-  0x55, 0x11, 0x5d, 0x07, 0x0a, 0x00, 0xa4, 0xfd, 0xc7, 0x4e, 0x28, 0x00,
-  0x21, 0x08, 0xfa, 0x45, 0x6e, 0x2c, 0x43, 0xee, 0x0e, 0x90, 0x9f, 0x64,
-  0x41, 0xca, 0x9c, 0x5c, 0x39, 0x05, 0xd9, 0x6e, 0xda, 0xb1, 0x3c, 0x86,
-  0xed, 0x15, 0x0d, 0x25, 0xf3, 0x52, 0xb7, 0xbf, 0x22, 0x01, 0x9d, 0x51,
-  0x72, 0x96, 0x4d, 0x71, 0xab, 0x45, 0xa2, 0xd7, 0x09, 0x56, 0xe6, 0x76,
-  0xf1, 0xe7, 0x46, 0x42, 0xa8, 0x2d, 0xfa, 0x9b, 0xb5, 0x1b, 0x3c, 0x98,
-  0x2d, 0xa4, 0x22, 0xa6, 0x9a, 0x33, 0xfb, 0x31, 0xf8, 0xac, 0xe4, 0x43,
-  0x5b, 0x2e, 0xa2, 0x93, 0x7d, 0x9b, 0xba, 0x9b, 0x79, 0x4a, 0x7f, 0xad,
-  0xf8, 0xdf, 0x68, 0x2c, 0x14, 0xff, 0x3b, 0x7c, 0x2a, 0x61, 0x1e, 0x4d,
-  0x13, 0x55, 0x12, 0xa9, 0x33, 0x01, 0xa3, 0xb9, 0xe3, 0x07, 0xe1, 0xeb,
-  0xe5, 0x13, 0x46, 0x0a, 0x26, 0xae, 0xd8, 0x36, 0xd7, 0x79, 0xa9, 0x58,
-  0x9c, 0x66, 0xf6, 0x37, 0xc7, 0x23, 0x16, 0x0d, 0x39, 0x2d, 0x06, 0xe3,
-  0xca, 0x76, 0x8b, 0x59, 0x56, 0x67, 0x22, 0x5e, 0x2b, 0xa8, 0x6b, 0x64,
-  0xd9, 0xe1, 0x2a, 0x34, 0xe6, 0x7c, 0x92, 0xc4, 0x6f, 0xe9, 0x57, 0xbc,
-  0xc4, 0x5a, 0xe0, 0x5b, 0x49, 0x06, 0xcc, 0x45, 0xc1, 0x29, 0x12, 0xf1,
-  0x20, 0x47, 0xae, 0xf0, 0x0f, 0xac, 0x82, 0x71, 0xfd, 0x15, 0x85, 0xd5,
-  0x0c, 0x39, 0x90, 0x2b, 0xd2, 0x2d, 0x1d, 0x69, 0xe3, 0x01, 0x0a, 0x53,
-  0x67, 0x34, 0x2a, 0x0b, 0x2b, 0x3d, 0x79, 0xb6, 0xd7, 0x37, 0x80, 0x16,
-  0xd1, 0xe9, 0xa4, 0x1c, 0x1d, 0x90, 0xa3, 0x26, 0x2b, 0xd6, 0x45, 0xe1,
-  0x55, 0x02, 0x55, 0x77, 0x37, 0x77, 0x2f, 0x89, 0x31, 0xbd, 0x2f, 0x4d,
-  0x09, 0xee, 0x59, 0xee, 0x2d, 0xa3, 0xc2, 0xb8, 0x8a, 0x79, 0xa6, 0x34,
-  0xd6, 0x7e, 0x39, 0x3a, 0x8c, 0xcb, 0xe2, 0x14, 0x42, 0x1a, 0x3a, 0xca,
-  0x58, 0xf7, 0xbe, 0x1c, 0xf4, 0x3a, 0x91, 0xb2, 0x7d, 0x71, 0x72, 0x13,
-  0xd8, 0x1a, 0x47, 0xcb, 0xba, 0xf0, 0xb9, 0x1b, 0x5c, 0xec, 0xa4, 0xce,
-  0xeb, 0x55, 0x6c, 0xaf, 0x55, 0x6c, 0xba, 0x24, 0x81, 0x31, 0x1e, 0x3c,
-  0x98, 0x97, 0xdc, 0x5b, 0xcc, 0x71, 0x96, 0x58, 0xc9, 0xaf, 0x11, 0xe3,
-  0x28, 0x86, 0x03, 0x06, 0xe3, 0x04, 0xf4, 0x6a, 0x5b, 0x43, 0x3d, 0x9c,
-  0x85, 0xa5, 0xd3, 0x9b, 0xe6, 0x5a, 0x7a, 0xfb, 0x4f, 0xff, 0x6e, 0x5f,
-  0x02, 0xed, 0xee, 0x3f, 0xcd, 0xbb, 0x64, 0xde, 0xb1, 0xb4, 0x9b, 0x9f,
-  0x25, 0x7f, 0xc2, 0xaa, 0x00, 0xad, 0x57, 0x96, 0x06, 0x50, 0x1c, 0xdc,
-  0xe0, 0x9f, 0x86, 0xce, 0x29, 0x66, 0xb5, 0xc7, 0x93, 0x45, 0x76, 0x07,
-  0xa6, 0x17, 0x71, 0x5b, 0x39, 0xc6, 0x3f, 0x2d, 0xb8, 0x36, 0xd3, 0x24,
-  0xa5, 0xe3, 0xc8, 0xee, 0x0c, 0x49, 0x70, 0x17, 0xf2, 0xfa, 0xa9, 0x54,
-  0xa6, 0x59, 0xa7, 0x63, 0x41, 0x1b, 0xd5, 0xcf, 0x63, 0xd3, 0x05, 0x7b,
-  0x9c, 0x0f, 0xb0, 0x1b, 0x7f, 0x1a, 0x08, 0x94, 0xa1, 0x52, 0xb8, 0x22,
-  0x93, 0xda, 0x67, 0xb2, 0x31, 0x77, 0xf9, 0xe2, 0xd1, 0xfe, 0x20, 0x90,
-  0x55, 0xfa, 0xdd, 0x41, 0x3b, 0x30, 0xc2, 0x15, 0x13, 0xa9, 0x74, 0xcd,
-  0x58, 0xa7, 0x30, 0x2b, 0xfe, 0x49, 0xb1, 0x30, 0x24, 0xa7, 0x72, 0x05,
-  0x21, 0x2c, 0xa8, 0xf2, 0xb4, 0xd6, 0xd0, 0xfd, 0x11, 0xe2, 0xf1, 0x50,
-  0x35, 0x5d, 0x51, 0x0d, 0x7c, 0x2e, 0x69, 0xa0, 0xef, 0x60, 0x58, 0x97,
-  0x57, 0x8f, 0xe4, 0xa3, 0xc1, 0x25, 0x7f, 0xa4, 0xc2, 0xbd, 0x65, 0x2c,
-  0x42, 0xd1, 0xd0, 0xc0, 0x36, 0xce, 0x8b, 0xbc, 0x7a, 0xb8, 0x68, 0x8c,
-  0xf8, 0xd2, 0x39, 0x46, 0x8e, 0x8e, 0x74, 0x34, 0x4e, 0x3b, 0x4d, 0xef,
-  0xa4, 0xa4, 0x09, 0xb1, 0xeb, 0x87, 0x5b, 0x43, 0x68, 0x0e, 0xbb, 0x0b,
-  0xe7, 0xa9, 0x21, 0xf3, 0x88, 0x14, 0x19, 0x78, 0x7e, 0x24, 0xe8, 0x45,
-  0x12, 0xec, 0x87, 0x1f, 0x6b, 0x4e, 0xcc, 0x52, 0xb8, 0xc9, 0x82, 0xf2,
-  0x5a, 0x74, 0xc5, 0x59, 0xaa, 0x7e, 0x5d, 0xcc, 0x40, 0xb9, 0xd2, 0xee,
-  0x47, 0xe6, 0x5a, 0x88, 0x01, 0x0f, 0x9e, 0xdf, 0xa0, 0xc6, 0x41, 0x13,
-  0x84, 0x05, 0x7c, 0xbf, 0xd3, 0x0e, 0x95, 0x74, 0xee, 0x6d, 0x72, 0x82,
-  0x2c, 0xd1, 0x42, 0x42, 0x1d, 0x30, 0x3c, 0x00, 0x90, 0x8e, 0x0d, 0x14,
-  0xd1, 0xf5, 0xf4, 0x70, 0x73, 0x6e, 0x14, 0x72, 0x4d, 0x0f, 0x02, 0x09,
-  0x6b, 0xd8, 0xce, 0x30, 0xd9, 0x8b, 0x02, 0x0e, 0xaf, 0xea, 0xe5, 0x3b,
-  0xc0, 0x0c, 0xbe, 0x03, 0xec, 0xd0, 0x65, 0x80, 0x2c, 0x8e, 0x0f, 0xb0,
-  0x5e, 0x82, 0x0c, 0x45, 0x32, 0x7e, 0xae, 0x75, 0x20, 0x48, 0x93, 0xbb,
-  0x16, 0x2b, 0xfa, 0x47, 0x57, 0xae, 0x85, 0x96, 0x6e, 0x9e, 0xb7, 0x56,
-  0x2a, 0xc9, 0xe3, 0x68, 0x60, 0xec, 0xa0, 0x7d, 0x07, 0x3c, 0x06, 0x47,
-  0x21, 0x74, 0x71, 0x64, 0x25, 0x03, 0x56, 0xb7, 0x00, 0x1b, 0x40, 0x24,
-  0x92, 0x51, 0xb7, 0x5a, 0x98, 0x63, 0xf8, 0xe1, 0x81, 0x41, 0xc8, 0xb7,
-  0xb2, 0x65, 0x4c, 0xfa, 0x16, 0x39, 0x81, 0x24, 0x56, 0x1a, 0x28, 0x8b,
-  0xda, 0xe6, 0x57, 0xec, 0xa8, 0xc3, 0x9c, 0x44, 0xf9, 0x5f, 0x9f, 0x0f,
-  0xf7, 0x05, 0xc5, 0x73, 0x96, 0xa7, 0x1e, 0x0c, 0x4d, 0x66, 0x80, 0x63,
-  0x82, 0xf9, 0xa2, 0xf6, 0xf0, 0x4d, 0x71, 0xf7, 0xd1, 0xc3, 0x25, 0xee,
-  0x70, 0x96, 0xe9, 0x86, 0x6b, 0x56, 0x46, 0xcb, 0x26, 0xcb, 0xd9, 0xf1,
-  0x4b, 0x23, 0x4b, 0x62, 0x88, 0x66, 0xad, 0x45, 0xe9, 0x0a, 0x9e, 0x49,
-  0xd6, 0x60, 0x61, 0x24, 0x5b, 0x0e, 0x5d, 0x51, 0x8a, 0x31, 0xb8, 0x83,
-  0x20, 0xd5, 0x62, 0xac, 0x04, 0xc3, 0xc7, 0x9a, 0x03, 0x77, 0x89, 0x32,
-  0x95, 0xe3, 0x0d, 0x47, 0x4c, 0xd0, 0xbb, 0x7c, 0x19, 0xb2, 0x84, 0x93,
-  0xf3, 0x00, 0xf9, 0xc6, 0x39, 0x68, 0x24, 0x7a, 0x88, 0xa9, 0xd2, 0x98,
-  0x18, 0x9f, 0xa2, 0x8f, 0x8d, 0x63, 0x02, 0x27, 0xa8, 0xe4, 0xb4, 0x07,
-  0xf9, 0x85, 0x03, 0x93, 0x37, 0x04, 0x30, 0x84, 0xba, 0x7c, 0xff, 0xb8,
-  0x23, 0x26, 0xa8, 0xf5, 0x1f, 0x3d, 0xf5, 0xb4, 0x79, 0xb8, 0x9e, 0x75,
-  0x24, 0x23, 0xc8, 0x94, 0x04, 0x58, 0xc8, 0xa6, 0xa4, 0x83, 0x0f, 0xc3,
-  0xc4, 0x83, 0x49, 0x34, 0xc7, 0xf9, 0xf0, 0x18, 0x82, 0x49, 0x7c, 0x74,
-  0x24, 0xd4, 0x93, 0x91, 0x0c, 0x57, 0xf1, 0x7b, 0xe3, 0x3a, 0xa6, 0xbb,
-  0x36, 0x71, 0x5f, 0x20, 0x75, 0x5e, 0x29, 0x45, 0x06, 0xa2, 0x21, 0x64,
-  0x83, 0x87, 0x47, 0x72, 0x15, 0x9d, 0xe8, 0xae, 0x54, 0x74, 0x1e, 0x83,
-  0x25, 0x55, 0x57, 0x6e, 0x0c, 0xd8, 0xd6, 0xe0, 0x63, 0x25, 0xdc, 0x0c,
-  0x08, 0xf8, 0x8a, 0xd2, 0xf1, 0x29, 0x27, 0x7a, 0x1d, 0xa1, 0xc5, 0xe3,
-  0xb0, 0xce, 0xde, 0x09, 0x19, 0x23, 0x5d, 0xda, 0x00, 0x5f, 0x1c, 0x98,
-  0x40, 0x1a, 0x94, 0xbb, 0xe7, 0x3b, 0x67, 0x00, 0x8d, 0x9e, 0x87, 0xf4,
-  0x91, 0xb5, 0xe0, 0xf0, 0x21, 0x37, 0x1d, 0x8d, 0x99, 0xb7, 0x2b, 0x5b,
-  0xd3, 0xd7, 0x39, 0xf5, 0x1a, 0xac, 0x62, 0xc2, 0x01, 0xf8, 0x0f, 0x37,
-  0x07, 0x18, 0x2e, 0xd7, 0xa0, 0x0b, 0x29, 0x06, 0x5e, 0x81, 0x08, 0xb6,
-  0x74, 0x1b, 0x3e, 0x90, 0x3b, 0xde, 0xc9, 0xa8, 0x3a, 0x96, 0x84, 0x19,
-  0xb4, 0x3b, 0x7c, 0x97, 0x21, 0x4c, 0x5e, 0x50, 0xea, 0xfb, 0xbf, 0x4e,
-  0xa8, 0x9d, 0xa7, 0xad, 0x28, 0x5b, 0xe7, 0xe9, 0x63, 0x73, 0xe8, 0x24,
-  0x71, 0x9d, 0x83, 0x9d, 0xb6, 0x70, 0x0e, 0xff, 0xe4, 0xc3, 0xc6, 0x31,
-  0x2b, 0xef, 0x0c, 0xdf, 0x51, 0x46, 0x22, 0xd0, 0x33, 0x1e, 0xad, 0x45,
-  0x22, 0x4d, 0xe4, 0xe2, 0x62, 0x52, 0xb7, 0xa7, 0x3b, 0x22, 0x44, 0xd0,
-  0x9a, 0x9a, 0x15, 0x92, 0x87, 0x5a, 0x33, 0x1f, 0x99, 0x6b, 0x0a, 0x8a,
-  0xfb, 0x47, 0xc8, 0x95, 0x91, 0xf6, 0x3b, 0x7b, 0xb4, 0x93, 0xa0, 0x2b,
-  0x29, 0x5d, 0x3e, 0x30, 0x83, 0x40, 0x8d, 0x79, 0xb8, 0xc7, 0xf0, 0x9c,
-  0x75, 0x77, 0xad, 0x91, 0x6b, 0xc9, 0xa7, 0x2d, 0xdd, 0xda, 0x60, 0x3b,
-  0x92, 0xe4, 0xb3, 0xa9, 0xdf, 0x07, 0x6e, 0x2b, 0x65, 0x6b, 0x5f, 0x00,
-  0xbe, 0x29, 0xcf, 0x04, 0x52, 0x26, 0x09, 0x8b, 0xd5, 0xaa, 0x14, 0x60,
-  0xa0, 0x8f, 0xdf, 0xd1, 0xa6, 0x51, 0xbb, 0xf6, 0x38, 0xa2, 0x88, 0x47,
-  0xb7, 0x64, 0x8c, 0x34, 0x40, 0xb6, 0xac, 0x19, 0x95, 0x9b, 0x22, 0x16,
-  0xd7, 0x86, 0x65, 0x31, 0x7b, 0xbf, 0xd1, 0xa8, 0xa4, 0xb5, 0x4f, 0x19,
-  0x53, 0x35, 0x7b, 0x47, 0x43, 0x20, 0x75, 0x98, 0xb6, 0xbd, 0x22, 0x39,
-  0xfc, 0xe3, 0xd2, 0xba, 0x3c, 0x67, 0x34, 0xc7, 0x69, 0xd1, 0x34, 0xe6,
-  0x32, 0x99, 0x64, 0xa4, 0x7a, 0xa3, 0x50, 0xa7, 0x98, 0xe7, 0xf0, 0xfb,
-  0x47, 0x48, 0x50, 0xc2, 0x5c, 0x4d, 0x86, 0x73, 0xea, 0xc8, 0x90, 0xe1,
-  0xc1, 0x60, 0xe4, 0xe2, 0x1e, 0xac, 0xad, 0x8e, 0xe8, 0xfd, 0xa4, 0x6d,
-  0x37, 0xad, 0x82, 0x8a, 0x35, 0xc3, 0x07, 0x20, 0x05, 0x5d, 0xff, 0xa4,
-  0xa8, 0xa4, 0xcb, 0xa5, 0x1e, 0xf1, 0x8f, 0xcf, 0x5d, 0x10, 0x5d, 0x24,
-  0x79, 0xa1, 0x40, 0x49, 0x16, 0x18, 0x11, 0xea, 0xa2, 0xb8, 0x35, 0xdb,
-  0xb6, 0x44, 0x5b, 0xd7, 0xb1, 0x4b, 0xa5, 0xf5, 0x9f, 0x60, 0x72, 0xb9,
-  0x3c, 0x78, 0x2e, 0x3d, 0xcf, 0x70, 0x7d, 0x8e, 0xdf, 0xec, 0xb0, 0x91,
-  0xb8, 0xba, 0x01, 0xd2, 0x60, 0xf1, 0x29, 0x97, 0xa0, 0xab, 0x92, 0x86,
-  0x75, 0x70, 0x26, 0x9f, 0x4f, 0x5d, 0x86, 0xa6, 0x58, 0xf9, 0x3b, 0x4d,
-  0xf4, 0xf2, 0xe8, 0xdc, 0x4d, 0x50, 0x2d, 0x2d, 0x5e, 0x49, 0xc0, 0xd8,
-  0xb7, 0x3e, 0x46, 0xe7, 0x2a, 0x91, 0x36, 0xe7, 0xd8, 0x39, 0x23, 0x56,
-  0x87, 0xd8, 0xe4, 0xb8, 0x5a, 0xfe, 0x3f, 0xb0, 0xb1, 0xc8, 0xf9, 0x62,
-  0x41, 0x5e, 0xd2, 0x09, 0x61, 0xc0, 0xfd, 0xf8, 0x90, 0xb9, 0x70, 0x4b,
-  0x77, 0x21, 0xa3, 0x2e, 0xb5, 0x59, 0x06, 0x8d, 0x08, 0xe7, 0x8e, 0x61,
-  0xbb, 0xe2, 0xbf, 0xbf, 0x68, 0xcc, 0x92, 0x17, 0x60, 0x68, 0x51, 0x3c,
-  0x64, 0xa9, 0x3e, 0x65, 0xf8, 0x76, 0x74, 0x83, 0x93, 0xfe, 0xf7, 0x49,
-  0x5a, 0xb8, 0x18, 0x84, 0x05, 0xdf, 0x95, 0xf3, 0xa0, 0x5d, 0xab, 0xbe,
-  0xb0, 0x10, 0xc9, 0xf1, 0x9c, 0x25, 0xf3, 0x51, 0x36, 0x91, 0x06, 0x2e,
-  0xd2, 0xc0, 0x34, 0x35, 0x31, 0x35, 0x33, 0xb0, 0xfb, 0x75, 0x64, 0xe5,
-  0x44, 0xaa, 0xe9, 0xa4, 0x98, 0x89, 0x43, 0xe5, 0x3d, 0x30, 0x36, 0xbb,
-  0xf7, 0xc2, 0x4b, 0x5e, 0xdd, 0x04, 0xc2, 0xb5, 0xa0, 0xb1, 0xce, 0x0a,
-  0xd3, 0x17, 0xd4, 0xfa, 0x7e, 0xb8, 0x7f, 0x62, 0x71, 0x4b, 0xb7, 0x3c,
-  0x42, 0x24, 0x42, 0xa6, 0x7d, 0x77, 0x36, 0xfa, 0x70, 0xe8, 0x7e, 0x1a,
-  0x29, 0x88, 0xd1, 0xd2, 0x61, 0xba, 0x19, 0x10, 0x9c, 0x56, 0x66, 0x41,
-  0x1a, 0x0b, 0x7f, 0xa9, 0xd8, 0xb3, 0x77, 0x69, 0xf5, 0xb1, 0xd1, 0xa5,
-  0x52, 0x34, 0xaa, 0xb9, 0x08, 0x3e, 0x36, 0xc7, 0x5d, 0x32, 0x49, 0xf6,
-  0x21, 0x8b, 0xf1, 0xf9, 0xbb, 0x58, 0xbc, 0x46, 0xa3, 0x20, 0x4c, 0xc3,
-  0xc5, 0x86, 0x07, 0xeb, 0x15, 0xc2, 0x59, 0x7d, 0x54, 0x8a, 0xed, 0x12,
-  0xec, 0x31, 0x56, 0x8c, 0xfc, 0xd3, 0x8f, 0xcf, 0xef, 0xc3, 0xe2, 0x04,
-  0x6e, 0x0d, 0x18, 0xf2, 0xf1, 0xe1, 0x19, 0x67, 0x9f, 0xaa, 0x54, 0x01,
-  0x59, 0xa8, 0x79, 0x8c, 0xda, 0x0c, 0x42, 0x77, 0xbe, 0x03, 0x0e, 0xb1,
-  0x43, 0x32, 0xd0, 0x1d, 0x90, 0x09, 0x69, 0xa0, 0x0c, 0xa3, 0xa9, 0x66,
-  0x6a, 0xf0, 0x26, 0xcd, 0x94, 0x8f, 0x4f, 0x9d, 0x7d, 0xca, 0x4d, 0xc3,
-  0xf7, 0x7f, 0xf7, 0x99, 0x51, 0x59, 0xb1, 0x21, 0xbf, 0xc5, 0xeb, 0x6c,
-  0x29, 0x39, 0x1a, 0x18, 0x07, 0xa7, 0xc3, 0xa7, 0x90, 0x11, 0x9b, 0x30,
-  0x32, 0x2d, 0x89, 0x83, 0xf9, 0x38, 0xb4, 0x3a, 0xf1, 0x7c, 0x98, 0xab,
-  0x61, 0x9e, 0x7f, 0x54, 0x55, 0xcb, 0x15, 0x6e, 0x13, 0xdc, 0x79, 0xd5,
-  0x69, 0x71, 0x45, 0x5c, 0xbd, 0x19, 0x31, 0x65, 0x42, 0xf0, 0xee, 0x3a,
-  0x93, 0x13, 0xbb, 0x24, 0x33, 0x29, 0x7a, 0xe0, 0xa3, 0xd9, 0xa1, 0x5d,
-  0xb0, 0xf0, 0xf2, 0x91, 0x11, 0xa8, 0x5d, 0xd2, 0x7c, 0x6f, 0x9b, 0x48,
-  0x38, 0x67, 0xcb, 0xa4, 0x79, 0x1d, 0x44, 0x05, 0x76, 0x59, 0x64, 0x07,
-  0x0f, 0x37, 0xa7, 0x8e, 0xba, 0xdf, 0x03, 0xb2, 0x3d, 0xc8, 0xd3, 0x7e,
-  0xfe, 0xa3, 0x05, 0xb3, 0x1c, 0xec, 0xec, 0xfc, 0xfc, 0x63, 0x23, 0xd6,
-  0xe1, 0xcb, 0x9f, 0x7f, 0x79, 0xb9, 0x52, 0xc1, 0x25, 0xe9, 0x32, 0x75,
-  0x4b, 0x7f, 0xb1, 0x5b, 0x48, 0xde, 0xd3, 0xb2, 0x7d, 0xc1, 0x60, 0x5c,
-  0x1d, 0xc2, 0x8e, 0x2a, 0xe3, 0xea, 0x45, 0x6f, 0x43, 0x20, 0x7f, 0xf0,
-  0xa1, 0x39, 0x95, 0x94, 0x6f, 0x75, 0xc0, 0x2e, 0xfd, 0x00, 0xcc, 0xa3,
-  0xdf, 0x99, 0xc9, 0xce, 0x5d, 0x72, 0x31, 0x33, 0x8f, 0xbf, 0x00, 0x47,
-  0x91, 0x28, 0x4e, 0xc1, 0x24, 0x27, 0x02, 0x32, 0x60, 0x58, 0x4e, 0x0f,
-  0x62, 0x38, 0xbf, 0x29, 0x7c, 0xda, 0x7b, 0x00, 0x1c, 0xa0, 0xf9, 0x2a,
-  0xe2, 0xde, 0x60, 0xf4, 0x3b, 0x56, 0x9f, 0x5d, 0xae, 0x42, 0x84, 0xed,
-  0x99, 0xa1, 0xd0, 0x3d, 0xd1, 0xa7, 0x2b, 0xb7, 0x2a, 0x70, 0x81, 0x97,
-  0x41, 0xbd, 0x70, 0x17, 0x0a, 0xe4, 0xcd, 0x93, 0xf9, 0xa2, 0x2b, 0x06,
-  0x50, 0xf2, 0xff, 0xbb, 0xa0, 0x05, 0x83, 0xb2, 0xb2, 0x6b, 0x20, 0x0f,
-  0xcc, 0x9c, 0x14, 0x6e, 0xa5, 0x66, 0x98, 0x46, 0xd1, 0xba, 0x02, 0x8a,
-  0x20, 0x1c, 0xf2, 0x17, 0x80, 0x20, 0x64, 0x1f, 0x72, 0x81, 0x08, 0x0d,
-  0x43, 0x49, 0x02, 0x37, 0x89, 0x9a, 0x94, 0xaa, 0xac, 0xee, 0xc8, 0x82,
-  0xb5, 0xf8, 0x1a, 0xcb, 0xcf, 0x13, 0xc4, 0x92, 0x32, 0xdb, 0x5c, 0x9b,
-  0x8a, 0xc9, 0x0d, 0xa1, 0xbb, 0x74, 0xa3, 0x43, 0x26, 0xf5, 0x51, 0x32,
-  0x95, 0x64, 0xa2, 0x7e, 0x40, 0xae, 0x4a, 0x0f, 0x29, 0x69, 0x36, 0xe6,
-  0xae, 0x90, 0x70, 0xf6, 0xbc, 0x39, 0xc7, 0x6b, 0x20, 0xe4, 0x68, 0xdc,
-  0x1e, 0xa7, 0xf8, 0x31, 0xbf, 0x36, 0x43, 0x95, 0xaf, 0x75, 0xdb, 0x7d,
-  0x99, 0x90, 0x2c, 0x24, 0xa6, 0x0d, 0xd0, 0x16, 0x71, 0x39, 0xc6, 0xd7,
-  0x53, 0x3e, 0xcf, 0x0d, 0x78, 0x84, 0x6d, 0xd5, 0x33, 0xe9, 0x6b, 0xf6,
-  0xe2, 0x7e, 0x3c, 0x4e, 0xcd, 0x0d, 0x51, 0x7c, 0xfc, 0x5a, 0xce, 0xd5,
-  0xf9, 0xa2, 0x3c, 0x13, 0x04, 0x60, 0x25, 0x8b, 0x0a, 0x69, 0x0c, 0xdb,
-  0x75, 0xe5, 0x96, 0xa9, 0x5e, 0x91, 0xac, 0x33, 0x8b, 0xeb, 0xf8, 0xc2,
-  0x5b, 0x29, 0x0c, 0x49, 0xb3, 0x14, 0x06, 0x4b, 0xe3, 0x41, 0xed, 0xc9,
-  0xde, 0x6b, 0x23, 0x6b, 0xbc, 0x66, 0x6f, 0x91, 0x7e, 0xd0, 0x88, 0xaf,
-  0x6a, 0x44, 0x06, 0xfb, 0x3a, 0x49, 0x31, 0xad, 0xf2, 0x1e, 0x6c, 0xc4,
-  0x26, 0x39, 0x29, 0x4e, 0x10, 0x44, 0x56, 0xc8, 0xac, 0x9b, 0x78, 0x06,
-  0xdc, 0x1d, 0xae, 0xbc, 0xa0, 0xd8, 0x61, 0x3a, 0x89, 0xb3, 0xc5, 0x4b,
-  0x28, 0xac, 0x80, 0xf7, 0xff, 0xd2, 0xe7, 0xc4, 0xfd, 0xe9, 0xf1, 0x2e,
-  0x33, 0x17, 0x6b, 0x24, 0x0d, 0xe2, 0x9f, 0x92, 0x3f, 0x3d, 0x4a, 0x1f,
-  0x60, 0x98, 0x50, 0xa1, 0x22, 0x76, 0x29, 0x55, 0x3e, 0xd2, 0x89, 0x56,
-  0xab, 0xb8, 0x4b, 0xef, 0x0d, 0xbb, 0x55, 0x5e, 0x8b, 0x30, 0x0f, 0xbb,
-  0x0e, 0x53, 0x3f, 0x0c, 0x42, 0xaf, 0x43, 0x66, 0xa2, 0x9c, 0x77, 0x4b,
-  0x19, 0x55, 0x3b, 0x61, 0xd3, 0xca, 0x3f, 0xa3, 0x10, 0x24, 0xbc, 0x49,
-  0xbc, 0x29, 0x7f, 0x7e, 0x30, 0xb6, 0xf5, 0x37, 0xba, 0xba, 0x7e, 0x90,
-  0x72, 0x09, 0xc2, 0x95, 0xd7, 0x16, 0xff, 0x95, 0x64, 0x92, 0x91, 0x4b,
-  0xa3, 0x74, 0xb5, 0x03, 0xec, 0x4d, 0x4d, 0x88, 0x09, 0x13, 0xcf, 0x3e,
-  0xbd, 0x1c, 0x3a, 0xce, 0xac, 0xab, 0xa1, 0x79, 0xd9, 0xb8, 0xff, 0xda,
-  0x00, 0xb6, 0x1d, 0x28, 0xfa, 0xad, 0x1a, 0xd5, 0x3a, 0x14, 0x5f, 0x30,
-  0x00, 0x4b, 0x63, 0x90, 0xe9, 0x2e, 0x3b, 0x0a, 0x32, 0xdd, 0xd7, 0xc7,
-  0x97, 0xdb, 0x31, 0xda, 0x66, 0x3a, 0x0d, 0x07, 0x96, 0xa0, 0x7a, 0x8e,
-  0x1e, 0xf1, 0xd4, 0x55, 0xa7, 0x70, 0x49, 0x82, 0x0b, 0x86, 0x3d, 0x20,
-  0xd9, 0x6a, 0xd1, 0x8d, 0x9a, 0x77, 0x44, 0xcb, 0xc0, 0xf9, 0xc7, 0x3e,
-  0x16, 0x29, 0xb4, 0xf1, 0x55, 0x89, 0xd3, 0x72, 0x90, 0x8b, 0x2c, 0x02,
-  0xeb, 0xcb, 0xe3, 0xd3, 0xe3, 0xcb, 0xe3, 0x3e, 0xa0, 0x1c, 0x22, 0x43,
-  0xee, 0x0c, 0xb7, 0x57, 0x9d, 0x4d, 0x6e, 0x16, 0x05, 0x07, 0x8d, 0xd2,
-  0x76, 0x20, 0xc3, 0xf3, 0xfb, 0x6c, 0xfc, 0xf2, 0xf0, 0x3b, 0xae, 0xfd,
-  0xc4, 0x67, 0xe6, 0xfc, 0xe2, 0xec, 0xfc, 0xd5, 0xc9, 0x9b, 0x97, 0xfd,
-  0xe4, 0xe8, 0xec, 0xfc, 0xaf, 0xfd, 0xe4, 0xf5, 0xd9, 0x77, 0xc7, 0x1d,
-  0xd1, 0xdc, 0x1c, 0x2a, 0xd6, 0x11, 0xf8, 0xa4, 0x15, 0x16, 0xf8, 0xa8,
-  0x4e, 0x01, 0x53, 0xbb, 0xc8, 0x0c, 0xa3, 0xd8, 0x9c, 0xa7, 0xcc, 0x92,
-  0x51, 0x45, 0x41, 0x9d, 0x4f, 0xb4, 0x94, 0x34, 0xe0, 0x6f, 0x8e, 0x0f,
-  0x5f, 0xb6, 0xc5, 0x81, 0xf3, 0xb3, 0xd1, 0x25, 0xe6, 0xc5, 0x13, 0x74,
-  0xf3, 0x66, 0xf6, 0x4d, 0xcc, 0x92, 0xed, 0xdc, 0xac, 0x64, 0xde, 0x66,
-  0x01, 0x5a, 0x20, 0x1d, 0x01, 0x58, 0xc9, 0xa6, 0x6b, 0xeb, 0xc6, 0x22,
-  0x04, 0xc2, 0x45, 0xca, 0x3d, 0x74, 0x13, 0xb2, 0x97, 0xdb, 0x90, 0xb9,
-  0x35, 0x85, 0x09, 0x9e, 0x05, 0x0b, 0xc1, 0x96, 0x28, 0xe2, 0x7c, 0x11,
-  0x6c, 0xf9, 0x46, 0xa7, 0xf3, 0x44, 0x94, 0x1f, 0x87, 0x34, 0x02, 0x51,
-  0x49, 0xc2, 0x1f, 0x52, 0x0d, 0x60, 0x1b, 0x67, 0x9c, 0x21, 0x52, 0xa1,
-  0xb4, 0x48, 0x10, 0x36, 0xdd, 0xcd, 0xde, 0x2d, 0x82, 0x11, 0x21, 0x4e,
-  0x10, 0xd4, 0xd8, 0x06, 0xc9, 0xeb, 0xe7, 0x3b, 0x94, 0xd5, 0xa0, 0x43,
-  0x2a, 0x0b, 0x9b, 0x74, 0xa5, 0xa8, 0x43, 0xa0, 0x58, 0x5d, 0x11, 0x6d,
-  0x66, 0x12, 0x2d, 0x22, 0x5b, 0x55, 0xf8, 0x30, 0xc4, 0x13, 0x3e, 0xe2,
-  0x37, 0x38, 0x21, 0xdd, 0x57, 0xc0, 0xd6, 0xab, 0x35, 0xa7, 0x3b, 0x2c,
-  0x77, 0xa4, 0x2d, 0x06, 0x87, 0xed, 0xf4, 0x84, 0xf6, 0x95, 0x8f, 0x7a,
-  0x3b, 0x8a, 0x10, 0x29, 0x3a, 0x52, 0xa8, 0x32, 0xe7, 0xad, 0xc6, 0x51,
-  0xa7, 0xb6, 0x7e, 0xcf, 0xb8, 0xd3, 0x0f, 0x29, 0xe9, 0xb5, 0x5d, 0x58,
-  0xbf, 0x55, 0x0a, 0xcb, 0x92, 0x01, 0x22, 0x33, 0x84, 0xae, 0xd4, 0x36,
-  0xaa, 0x23, 0x0c, 0x50, 0xf5, 0xdd, 0xc2, 0x0d, 0x5d, 0x17, 0xd1, 0xd5,
-  0x66, 0x52, 0x80, 0x15, 0x73, 0x25, 0x06, 0x20, 0xd8, 0xca, 0xf4, 0x99,
-  0xab, 0x10, 0x85, 0xef, 0x78, 0x2c, 0xf9, 0x98, 0x6b, 0x07, 0x0c, 0x83,
-  0x0c, 0xd3, 0x0e, 0x01, 0x4b, 0x43, 0x47, 0xd1, 0x9b, 0xbb, 0x61, 0x3f,
-  0x4c, 0xaf, 0x87, 0x45, 0x99, 0xb3, 0x0d, 0x49, 0x2b, 0x3a, 0x49, 0x63,
-  0x09, 0xea, 0x16, 0x32, 0x61, 0x31, 0x91, 0x76, 0x35, 0x67, 0x61, 0x2d,
-  0x92, 0xde, 0x9a, 0xc4, 0x4d, 0xcf, 0xa1, 0x81, 0xf2, 0x77, 0xae, 0xd5,
-  0x35, 0x75, 0xb7, 0xa5, 0xec, 0xe3, 0x3d, 0x6d, 0xf6, 0xdc, 0xd3, 0xbc,
-  0xc9, 0xc4, 0x6e, 0xb6, 0x7e, 0xa2, 0x1c, 0x75, 0x44, 0x34, 0x5d, 0x22,
-  0xfd, 0x3d, 0x96, 0x5f, 0x73, 0x92, 0x5f, 0x1b, 0x1b, 0x76, 0x8f, 0x40,
-  0x3f, 0x36, 0xe5, 0x2b, 0x88, 0x3b, 0xff, 0xec, 0x2c, 0xdb, 0xe1, 0xdc,
-  0x11, 0x3c, 0x1b, 0x76, 0x79, 0x2a, 0x08, 0xb9, 0xbc, 0x2c, 0x78, 0xe3,
-  0xe3, 0x96, 0x11, 0x5f, 0xb3, 0x02, 0xa2, 0xfc, 0xe6, 0xa0, 0x43, 0x81,
-  0x4e, 0xe8, 0x37, 0xbc, 0x42, 0x1c, 0x2c, 0x57, 0xf9, 0x9a, 0xe0, 0xd4,
-  0x7d, 0xf0, 0x42, 0x34, 0x27, 0x2b, 0xc2, 0x15, 0x00, 0x40, 0x05, 0x43,
-  0x32, 0x42, 0xdd, 0x33, 0xd8, 0x6c, 0x16, 0x79, 0x05, 0xd6, 0xeb, 0xaf,
-  0x1f, 0x2b, 0x9e, 0x22, 0x11, 0xc7, 0x4d, 0x88, 0x12, 0x91, 0x11, 0x56,
-  0xaa, 0xd5, 0x80, 0x03, 0x41, 0xf3, 0xc6, 0x9a, 0x6c, 0x74, 0xfa, 0xe3,
-  0x48, 0xfa, 0xaf, 0x27, 0x0d, 0x34, 0x0c, 0x04, 0x47, 0x13, 0x1d, 0xcb,
-  0x15, 0x46, 0x6c, 0xa8, 0x9f, 0x08, 0x3c, 0xbe, 0x44, 0xec, 0xe8, 0x7b,
-  0x83, 0x0e, 0xbb, 0x05, 0x9b, 0x67, 0xd6, 0xb0, 0x8f, 0xdf, 0xee, 0x14,
-  0xff, 0xd5, 0x13, 0x85, 0x2c, 0xe2, 0x73, 0xfc, 0xf1, 0x8b, 0xc8, 0x22,
-  0xc0, 0xa6, 0x17, 0x4f, 0xd1, 0x16, 0xd1, 0x7e, 0x83, 0x3e, 0x06, 0x51,
-  0x62, 0xdd, 0x74, 0x1b, 0xeb, 0x11, 0x6c, 0xb6, 0x1a, 0x62, 0x98, 0xe3,
-  0x37, 0x69, 0x22, 0x78, 0x06, 0xf1, 0xea, 0xb1, 0xe2, 0x24, 0x7b, 0x2c,
-  0xc9, 0x03, 0x39, 0x97, 0x66, 0x64, 0x8e, 0x8f, 0xd3, 0x93, 0xfd, 0x9e,
-  0xe8, 0x40, 0xff, 0x00, 0x3a, 0x10, 0x57, 0x78, 0xc3, 0x01, 0x78, 0x3e,
-  0x65, 0x4b, 0x15, 0x09, 0x26, 0xec, 0x9b, 0xa6, 0xa6, 0xbf, 0xf8, 0x8f,
-  0xee, 0x02, 0x6b, 0x56, 0x79, 0x54, 0x91, 0xa9, 0x25, 0x57, 0x58, 0x2c,
-  0xdc, 0xac, 0x06, 0x70, 0xf9, 0x0b, 0xd4, 0xae, 0xd2, 0x72, 0xd6, 0x6c,
-  0xcb, 0xa9, 0xfd, 0x52, 0x67, 0x9d, 0x40, 0x26, 0x52, 0xde, 0x82, 0x4f,
-  0x21, 0x3d, 0xeb, 0x0a, 0xdf, 0xaf, 0x69, 0x2f, 0xb0, 0xc6, 0x46, 0x88,
-  0x7f, 0x5a, 0x07, 0x80, 0x25, 0xc2, 0x68, 0x3e, 0x26, 0xc3, 0xa3, 0xda,
-  0x39, 0xc4, 0x10, 0xba, 0x92, 0xf0, 0x90, 0xe8, 0x26, 0x55, 0x1c, 0xa6,
-  0x02, 0x00, 0x77, 0x17, 0x27, 0x2d, 0x50, 0x61, 0x1c, 0x73, 0xeb, 0x2a,
-  0xab, 0xd1, 0x30, 0x2b, 0x43, 0x78, 0xe2, 0x20, 0x02, 0x20, 0x37, 0xa7,
-  0x2e, 0xe2, 0x6e, 0xa3, 0xd3, 0xaa, 0xec, 0xca, 0x05, 0x5d, 0x67, 0x96,
-  0xc7, 0x26, 0x93, 0xb3, 0x64, 0x71, 0x0c, 0x6a, 0x6b, 0xce, 0x93, 0xd9,
-  0x16, 0xab, 0x69, 0xe7, 0x56, 0x38, 0x44, 0xaa, 0x06, 0x6c, 0x05, 0x35,
-  0xca, 0xef, 0x33, 0x64, 0x05, 0x5d, 0xc3, 0xc0, 0xa8, 0xd0, 0x82, 0x4d,
-  0x68, 0x36, 0x58, 0x91, 0x28, 0x96, 0xbf, 0x6e, 0x62, 0xd3, 0x5b, 0x22,
-  0x46, 0x9d, 0x96, 0xae, 0x30, 0x40, 0xb8, 0xa2, 0x66, 0x32, 0x62, 0xec,
-  0x9a, 0x64, 0x6b, 0xb0, 0xed, 0x84, 0x13, 0x14, 0xc5, 0x11, 0xd2, 0x88,
-  0x5d, 0xac, 0xa9, 0x8b, 0x8b, 0x74, 0xf1, 0xfb, 0x02, 0x29, 0x6d, 0x14,
-  0xa2, 0x34, 0xc1, 0x9d, 0xed, 0x88, 0x9d, 0xd3, 0xb8, 0x25, 0x60, 0x4d,
-  0x23, 0xd9, 0xa1, 0xd5, 0xd8, 0x22, 0xbb, 0x0b, 0x1b, 0xf3, 0x8a, 0x81,
-  0x6b, 0xf0, 0x77, 0x3c, 0x53, 0x37, 0x22, 0x39, 0xcd, 0x96, 0x91, 0xce,
-  0xcc, 0x0e, 0x69, 0xfe, 0x22, 0x78, 0xf8, 0x75, 0x1f, 0xd5, 0x2b, 0x16,
-  0x71, 0xd4, 0xca, 0x6b, 0x7c, 0x38, 0x4c, 0x5e, 0x6a, 0xf4, 0x39, 0x12,
-  0x7d, 0x57, 0xda, 0x02, 0x42, 0x92, 0x83, 0x66, 0xbe, 0xd3, 0x6c, 0x8f,
-  0x8e, 0x2d, 0xd5, 0xf7, 0xab, 0x46, 0x46, 0x99, 0x58, 0xce, 0x05, 0xba,
-  0x66, 0x61, 0xf5, 0x3f, 0xc6, 0xf8, 0xdb, 0x2c, 0x6a, 0x39, 0x82, 0x28,
-  0xab, 0x61, 0x57, 0x7d, 0x14, 0x2d, 0xb9, 0x04, 0x79, 0x3a, 0x30, 0xa4,
-  0x9b, 0xe5, 0xd9, 0x9a, 0x28, 0xae, 0x34, 0x9b, 0xc3, 0xda, 0xee, 0xc8,
-  0x4f, 0x86, 0x2c, 0xff, 0xa8, 0x9c, 0xc2, 0xd5, 0x74, 0xcf, 0x4f, 0x96,
-  0x69, 0x29, 0xea, 0xc9, 0xe2, 0xd6, 0x4c, 0x92, 0xa2, 0x68, 0x67, 0x93,
-  0x55, 0xdd, 0x44, 0xee, 0x0a, 0xc6, 0xa4, 0x57, 0x38, 0x86, 0xb4, 0x05,
-  0xd7, 0x82, 0x8a, 0x90, 0xbd, 0x73, 0x33, 0x46, 0x1e, 0xf4, 0xb6, 0xd5,
-  0xdd, 0x22, 0x41, 0xc5, 0xce, 0x4a, 0xd9, 0x95, 0xe4, 0x6c, 0x43, 0x2e,
-  0x33, 0xc1, 0xf0, 0xa9, 0x0b, 0x13, 0x64, 0x3a, 0xbb, 0x27, 0xda, 0x29,
-  0x3b, 0x7b, 0x7f, 0x25, 0xe5, 0x51, 0x83, 0xce, 0x9d, 0xe1, 0x47, 0x2b,
-  0xa7, 0xb6, 0xbb, 0xef, 0xe8, 0x19, 0xea, 0x19, 0x69, 0x4f, 0x2e, 0x3a,
-  0xd9, 0x5e, 0xb5, 0xc5, 0x8f, 0x42, 0x95, 0x11, 0xfd, 0xe3, 0xd1, 0x91,
-  0x58, 0x08, 0xc7, 0x47, 0x2e, 0xe5, 0x33, 0x9a, 0xc5, 0x6d, 0x39, 0x7e,
-  0x4c, 0xff, 0x7c, 0xcb, 0xff, 0x30, 0xab, 0x60, 0x31, 0x5e, 0x20, 0x49,
-  0x05, 0xd5, 0x24, 0xe6, 0x09, 0x8c, 0xfe, 0x2e, 0xba, 0xcf, 0x08, 0x54,
-  0xf4, 0x0a, 0xbf, 0x94, 0xd9, 0x03, 0xef, 0xd0, 0xdc, 0xfe, 0xc1, 0x96,
-  0xb9, 0x15, 0x29, 0x0a, 0x44, 0x89, 0x13, 0x18, 0x7d, 0xe6, 0x8e, 0x99,
-  0xa0, 0x2c, 0xa5, 0x43, 0x9c, 0x10, 0x8c, 0x23, 0xd8, 0xe8, 0x44, 0xa7,
-  0xce, 0xd7, 0xb8, 0xd8, 0xd6, 0xf7, 0x87, 0x24, 0xbc, 0xa4, 0x9d, 0x8b,
-  0x17, 0xc0, 0xad, 0xae, 0x79, 0xef, 0xeb, 0xd1, 0x68, 0xf0, 0x46, 0x61,
-  0x06, 0xd7, 0xb8, 0x6d, 0xdc, 0xd7, 0xed, 0x86, 0x79, 0x29, 0x68, 0x31,
-  0x9f, 0x7c, 0xda, 0x2a, 0xbe, 0xe4, 0xec, 0x29, 0x93, 0xe5, 0x44, 0x95,
-  0x40, 0x12, 0x4c, 0xea, 0xe8, 0x60, 0xbc, 0xca, 0xad, 0x5a, 0x25, 0x1e,
-  0x56, 0xc3, 0x98, 0xa4, 0x1e, 0xae, 0x59, 0x11, 0x24, 0x73, 0xa1, 0x10,
-  0x09, 0xf2, 0x66, 0x6e, 0x0d, 0x0b, 0x61, 0x9e, 0xcd, 0x19, 0x65, 0xcd,
-  0xa5, 0x6c, 0x89, 0xac, 0x87, 0xb4, 0x53, 0x74, 0xbe, 0xc6, 0xb9, 0x32,
-  0xe5, 0x4a, 0x1d, 0xac, 0x6a, 0x4a, 0x00, 0xf8, 0x1f, 0x22, 0x4b, 0x6b,
-  0x75, 0xbf, 0x98, 0xdc, 0xbc, 0x7c, 0x33, 0xda, 0x58, 0xef, 0xb6, 0xb6,
-  0x0a, 0x51, 0x9c, 0x19, 0xcb, 0x4f, 0x97, 0xc5, 0x82, 0x33, 0x7e, 0x02,
-  0x5f, 0x7e, 0xd6, 0x71, 0xef, 0x9c, 0xbf, 0x39, 0xfe, 0xfa, 0xcc, 0xfe,
-  0x59, 0xbb, 0xe4, 0x0f, 0xae, 0xf0, 0x29, 0x97, 0x5e, 0x7f, 0xa8, 0x8a,
-  0x7d, 0xde, 0x42, 0x25, 0x09, 0x04, 0x68, 0x22, 0xc8, 0x19, 0xbf, 0x2e,
-  0xb4, 0xd8, 0x57, 0x92, 0xc4, 0x47, 0x6b, 0x3c, 0xa1, 0xb8, 0x74, 0xf6,
-  0xbf, 0xfe, 0x2a, 0xbe, 0x60, 0x5e, 0xbe, 0x59, 0xd3, 0x1d, 0x7f, 0x33,
-  0x30, 0x79, 0x42, 0xcd, 0x3d, 0x53, 0x3a, 0x1f, 0xb9, 0x14, 0xbc, 0xe8,
-  0x58, 0x95, 0xd1, 0xf9, 0x89, 0xfd, 0xd3, 0x98, 0xba, 0x65, 0x7b, 0xf1,
-  0x71, 0x17, 0x9a, 0xe7, 0xb4, 0x24, 0x14, 0x5b, 0x4e, 0xc6, 0xb3, 0x74,
-  0x71, 0x0b, 0xe2, 0x5a, 0x33, 0x72, 0xc9, 0xb1, 0x57, 0x1a, 0x14, 0xb0,
-  0x41, 0xbf, 0xca, 0x6a, 0x34, 0x46, 0x82, 0xa9, 0xa4, 0x62, 0x08, 0xc4,
-  0x4f, 0x07, 0x4b, 0x77, 0xe6, 0xf2, 0x35, 0x66, 0x48, 0x05, 0x3e, 0xea,
-  0x7e, 0x8b, 0x11, 0x91, 0xb6, 0x46, 0x52, 0xa9, 0xe6, 0x42, 0xc2, 0x57,
-  0xce, 0xb5, 0xa1, 0xed, 0x8e, 0x5d, 0x5f, 0x0b, 0xba, 0x64, 0x0a, 0x29,
-  0x11, 0x76, 0x47, 0x31, 0x93, 0xd7, 0x24, 0xe6, 0xf0, 0xfd, 0xf2, 0x00,
-  0x45, 0xe8, 0x3a, 0xb8, 0x4d, 0x72, 0xef, 0x24, 0x5b, 0x63, 0xba, 0xb4,
-  0xdc, 0x1d, 0x27, 0x79, 0xe0, 0x8f, 0x81, 0xe2, 0xd4, 0xdd, 0xdc, 0x93,
-  0xcf, 0x9f, 0x3c, 0xde, 0xde, 0xee, 0x6b, 0x41, 0x40, 0xcb, 0x16, 0x62,
-  0x63, 0x3f, 0x9f, 0x4f, 0xb1, 0x05, 0xb2, 0x88, 0x7b, 0x83, 0x12, 0x4d,
-  0xc1, 0xfa, 0x77, 0x37, 0xc7, 0x7b, 0x6b, 0xaf, 0xf2, 0xf4, 0x18, 0xbc,
-  0x10, 0x3c, 0x32, 0x57, 0x3f, 0x0b, 0x58, 0x70, 0x26, 0x0f, 0x6c, 0x99,
-  0x15, 0x7c, 0xad, 0xf7, 0x59, 0xca, 0x0b, 0x97, 0xe6, 0xbc, 0x16, 0xdf,
-  0x03, 0xd8, 0x85, 0x5d, 0x36, 0x9c, 0xe6, 0xfd, 0xea, 0xe4, 0xf4, 0xd8,
-  0x1d, 0xee, 0xff, 0xbd, 0x33, 0xe4, 0x41, 0x96, 0x93, 0x38, 0x6f, 0x0e,
-  0x22, 0x5a, 0x90, 0x4a, 0xdb, 0x47, 0x26, 0xfa, 0xe0, 0xdb, 0xbe, 0xe8,
-  0x89, 0xf8, 0xd8, 0x9b, 0x41, 0xa9, 0xe1, 0xe3, 0x37, 0xdf, 0x9d, 0x5c,
-  0x9c, 0xbd, 0x79, 0x7d, 0xfc, 0xc6, 0x45, 0xbd, 0xf3, 0x75, 0xda, 0xe5,
-  0x25, 0xaa, 0x62, 0x03, 0x7c, 0xce, 0x79, 0x13, 0x2c, 0xea, 0xb1, 0x43,
-  0x84, 0x67, 0x41, 0xbb, 0xa5, 0x7f, 0x0d, 0xc3, 0xe6, 0x82, 0x87, 0x6c,
-  0xdf, 0x58, 0xa7, 0x58, 0x72, 0xb4, 0xea, 0x94, 0xb3, 0x8a, 0x86, 0x92,
-  0x02, 0x20, 0xc6, 0xfe, 0x5c, 0x1c, 0x55, 0x1f, 0x26, 0x99, 0x42, 0x2a,
-  0x57, 0x41, 0x09, 0x27, 0xcb, 0x81, 0xf1, 0x99, 0x42, 0x8d, 0x41, 0x78,
-  0x6a, 0x97, 0x12, 0xb7, 0xeb, 0x3c, 0x5e, 0xc0, 0x7e, 0x08, 0xd1, 0xff,
-  0x6f, 0xd4, 0x73, 0x00, 0x4f, 0x42, 0x22, 0xfe, 0xf1, 0x24, 0x80, 0xc0,
-  0xf6, 0xa8, 0x7e, 0xe6, 0x34, 0x6e, 0x2b, 0xd6, 0xc1, 0x0c, 0x1a, 0xee,
-  0x64, 0x60, 0xb7, 0x7f, 0xa1, 0xbe, 0xe3, 0x18, 0xc4, 0xaa, 0x0a, 0x1d,
-  0x34, 0x42, 0x04, 0x41, 0xae, 0x3c, 0x1c, 0x5b, 0x1b, 0x41, 0x9c, 0xe9,
-  0xe8, 0xdd, 0xf9, 0xc5, 0xd9, 0x0f, 0x7f, 0xfd, 0x8d, 0xbb, 0x18, 0xf9,
-  0x69, 0xfc, 0xc8, 0xd7, 0x90, 0x35, 0xfe, 0xf3, 0xaf, 0xea, 0xed, 0xc1,
-  0xee, 0x9a, 0xed, 0xf7, 0x35, 0xcd, 0x6c, 0x1d, 0xee, 0x30, 0x1c, 0x31,
-  0x82, 0xe6, 0xeb, 0x4b, 0xec, 0x5a, 0x10, 0xa9, 0x63, 0x0e, 0x12, 0x30,
-  0x52, 0x35, 0xca, 0x3d, 0x74, 0xd5, 0x84, 0x02, 0x12, 0x2c, 0xca, 0x3c,
-  0xb1, 0xac, 0x14, 0x17, 0xfb, 0xea, 0x03, 0x5b, 0x1c, 0x97, 0xb2, 0x5b,
-  0x8f, 0xc3, 0xd3, 0xd3, 0x5f, 0xbf, 0x08, 0xe6, 0x8b, 0x6d, 0x2e, 0x03,
-  0x4c, 0x0b, 0x6e, 0x42, 0x03, 0x27, 0x90, 0x1a, 0xf9, 0x77, 0x00, 0xa6,
-  0xb9, 0xe1, 0xbc, 0x39, 0xd3, 0xd1, 0x88, 0xdb, 0x67, 0x50, 0x65, 0x24,
-  0xb8, 0xc3, 0xea, 0xce, 0x66, 0x5b, 0xbe, 0x30, 0x51, 0x17, 0xf9, 0x8b,
-  0x48, 0xf0, 0xf3, 0x5f, 0x5a, 0xf5, 0x5e, 0x94, 0x79, 0x07, 0x32, 0x35,
-  0x32, 0x90, 0x0b, 0xe7, 0xb1, 0x14, 0x0c, 0x7e, 0x94, 0x56, 0x81, 0x4b,
-  0xbc, 0xc3, 0xcf, 0xcc, 0x16, 0x59, 0x8e, 0x5a, 0x29, 0xf3, 0xea, 0x16,
-  0xc9, 0xdb, 0x7c, 0x28, 0xfb, 0x52, 0x7b, 0xb0, 0x46, 0x29, 0x56, 0x16,
-  0xf1, 0x31, 0x14, 0x1a, 0xbb, 0x8c, 0x98, 0x7e, 0x5e, 0x9e, 0x1d, 0x9d,
-  0x9d, 0xd2, 0x2f, 0xc7, 0xaf, 0x4e, 0x7e, 0xf0, 0x0c, 0x4d, 0x30, 0xf9,
-  0x95, 0xf3, 0x1a, 0x83, 0x70, 0x18, 0xfd, 0xb1, 0x03, 0x33, 0x82, 0x4a,
-  0x15, 0x25, 0x78, 0xc3, 0x7b, 0xad, 0x5d, 0xf8, 0x84, 0xfa, 0xf0, 0x02,
-  0xd0, 0x81, 0x87, 0xa2, 0x25, 0xc2, 0x28, 0x93, 0x60, 0x87, 0x70, 0xc9,
-  0x87, 0x4c, 0xaf, 0xb9, 0xb7, 0x9a, 0x40, 0xcc, 0x32, 0x5c, 0x7e, 0xe5,
-  0x82, 0xab, 0x42, 0x53, 0xa6, 0x59, 0x2f, 0xd4, 0x7c, 0x81, 0x82, 0xdd,
-  0x0e, 0xf5, 0x93, 0x75, 0xd9, 0x7e, 0x30, 0x49, 0x53, 0x6b, 0x83, 0x90,
-  0x07, 0x75, 0x91, 0x6f, 0x84, 0x6e, 0x79, 0x3f, 0x58, 0xa8, 0x5f, 0xae,
-  0xb9, 0xe6, 0x9c, 0x74, 0x01, 0x34, 0xf3, 0x15, 0xb9, 0x53, 0x70, 0xe8,
-  0x7a, 0x85, 0xc5, 0x05, 0x87, 0x74, 0xa2, 0x14, 0xe4, 0xc2, 0x23, 0x19,
-  0x00, 0xef, 0x7d, 0x8a, 0x04, 0x6f, 0x64, 0x87, 0xcb, 0x4b, 0xad, 0x36,
-  0xd2, 0x5f, 0xd5, 0x48, 0xda, 0x6c, 0xe5, 0xc9, 0xaf, 0x69, 0xe4, 0x49,
-  0xab, 0x8d, 0x9b, 0x5f, 0xd5, 0x88, 0xab, 0x2d, 0x43, 0xd7, 0xe2, 0x0f,
-  0x27, 0x97, 0xc9, 0xd1, 0xd9, 0x4b, 0x4f, 0xa3, 0x97, 0xee, 0x6a, 0x4f,
-  0x49, 0x23, 0x58, 0x70, 0x3d, 0xfa, 0xab, 0xa0, 0xbc, 0xb6, 0x55, 0x6a,
-  0x66, 0x17, 0x7a, 0xe5, 0x8b, 0x1d, 0xe7, 0xf8, 0xa8, 0x94, 0x0c, 0xb4,
-  0x10, 0xf0, 0xcf, 0x15, 0x76, 0x46, 0x95, 0xc2, 0x2a, 0x4c, 0x3f, 0x67,
-  0x88, 0xe9, 0xb4, 0x34, 0x88, 0x9c, 0x71, 0xca, 0xfe, 0xb4, 0x85, 0xf8,
-  0x21, 0x49, 0x40, 0x39, 0xac, 0x5d, 0x51, 0x51, 0x1a, 0xc1, 0x46, 0x08,
-  0x69, 0xc1, 0x79, 0x9f, 0x88, 0x45, 0x11, 0x75, 0x9d, 0x8b, 0xdb, 0x62,
-  0x34, 0x8d, 0x54, 0xda, 0x3d, 0xe5, 0x84, 0x8b, 0x06, 0xc5, 0x28, 0xb8,
-  0x38, 0x24, 0x2f, 0xd6, 0x77, 0xa6, 0x66, 0x3b, 0xc0, 0xbd, 0xb8, 0x70,
-  0xba, 0xb7, 0xd6, 0xbd, 0x8b, 0x58, 0x94, 0x6b, 0xc2, 0xf5, 0xb3, 0x2f,
-  0xff, 0xbc, 0x92, 0x22, 0xbc, 0x74, 0xfe, 0x34, 0x07, 0x33, 0xff, 0x47,
-  0x70, 0x47, 0x3f, 0xf2, 0xe1, 0x07, 0xf3, 0x74, 0x26, 0x41, 0x21, 0x9a,
-  0x38, 0x7f, 0xbf, 0xa8, 0xd3, 0x0f, 0x88, 0xe3, 0x61, 0x91, 0x08, 0x6b,
-  0x38, 0x09, 0xd8, 0xe0, 0x63, 0x65, 0xce, 0x89, 0xa9, 0xe2, 0x72, 0xfe,
-  0xcc, 0x18, 0xef, 0x73, 0x05, 0x2d, 0x1a, 0x90, 0x83, 0x17, 0x14, 0x2f,
-  0x4a, 0x8c, 0xff, 0x15, 0x57, 0x39, 0xec, 0x76, 0x1a, 0xba, 0x6e, 0x0d,
-  0x5e, 0xa6, 0x90, 0x88, 0x61, 0xb8, 0x8c, 0xf3, 0x49, 0x8e, 0x20, 0x14,
-  0xad, 0xf2, 0x3c, 0x45, 0x3d, 0x1f, 0x59, 0xb4, 0xc1, 0x1a, 0x4b, 0x68,
-  0x21, 0x75, 0x2a, 0x95, 0xc3, 0x99, 0xfc, 0x31, 0x2d, 0xb0, 0x92, 0x12,
-  0x5e, 0xc3, 0x45, 0xde, 0xe8, 0x8b, 0x7b, 0x71, 0x04, 0xa6, 0x0b, 0xd8,
-  0x65, 0xa2, 0x12, 0x01, 0xba, 0x31, 0xaa, 0x99, 0x7a, 0x35, 0xf0, 0x89,
-  0x79, 0xad, 0x95, 0x97, 0x5b, 0xa9, 0x17, 0x63, 0xe2, 0x30, 0x1a, 0x29,
-  0x5e, 0xb5, 0x72, 0x2d, 0xa9, 0xff, 0x32, 0x91, 0xdc, 0x2b, 0x9e, 0x6b,
-  0x1c, 0x73, 0xa5, 0xad, 0x04, 0x1a, 0xc4, 0xd3, 0x35, 0xfd, 0x70, 0x63,
-  0xb2, 0x6f, 0xd2, 0x49, 0x3b, 0x68, 0x9f, 0xdb, 0x8f, 0x5b, 0xfb, 0xac,
-  0x4d, 0x22, 0x16, 0x40, 0xcf, 0xa8, 0x7d, 0x45, 0x98, 0x4a, 0xf3, 0xb9,
-  0x3e, 0xc9, 0x46, 0x88, 0xbb, 0x8c, 0x2d, 0x3d, 0x2e, 0xd8, 0xb3, 0xcc,
-  0x96, 0x33, 0x37, 0x45, 0xfb, 0x10, 0x99, 0x3b, 0x70, 0xf3, 0x61, 0xc5,
-  0x27, 0x3a, 0xde, 0x38, 0xa0, 0x28, 0x14, 0x18, 0x9f, 0xf9, 0x4e, 0x52,
-  0xe4, 0x5a, 0x10, 0x91, 0x2c, 0x72, 0x47, 0x90, 0x5a, 0xad, 0x11, 0x1f,
-  0x19, 0xd4, 0x94, 0xfb, 0xdb, 0xde, 0x88, 0xe3, 0xe0, 0xe4, 0xa6, 0xf0,
-  0x61, 0xdc, 0x58, 0x87, 0x55, 0x29, 0x98, 0x1d, 0x1e, 0x77, 0xdd, 0x9c,
-  0xcb, 0xb2, 0x10, 0xa8, 0x0b, 0x2c, 0xc8, 0x2f, 0x11, 0x7e, 0x15, 0x17,
-  0x2e, 0x40, 0x34, 0x4e, 0x99, 0xeb, 0xaa, 0x49, 0xf1, 0x06, 0x5c, 0xc9,
-  0x01, 0x6c, 0x3c, 0x9f, 0x00, 0x77, 0xef, 0x20, 0xa0, 0xac, 0x1b, 0x32,
-  0xcc, 0x62, 0x38, 0x3c, 0x87, 0xd8, 0x6b, 0x2f, 0xf6, 0xf9, 0xe1, 0x68,
-  0x64, 0x0b, 0x7d, 0x14, 0x2e, 0xa8, 0x2c, 0xa1, 0xe6, 0x3a, 0x00, 0xe4,
-  0x48, 0x21, 0x40, 0x62, 0x75, 0x47, 0xdb, 0x68, 0xe5, 0x48, 0xed, 0x3d,
-  0x72, 0x7d, 0xb9, 0xae, 0xbe, 0x93, 0xb6, 0xfa, 0x9f, 0xd8, 0x55, 0x77,
-  0x5f, 0xdf, 0x75, 0xf4, 0xf5, 0x38, 0x22, 0xa2, 0xfd, 0xfd, 0xcf, 0x12,
-  0x85, 0xa6, 0x10, 0x58, 0xe1, 0x59, 0xe2, 0x3b, 0x0c, 0x7a, 0xa4, 0xe7,
-  0x06, 0x8a, 0x29, 0x98, 0x75, 0x54, 0x4a, 0x81, 0x87, 0x6a, 0x11, 0x76,
-  0xf5, 0xc4, 0x75, 0x45, 0x3a, 0xd3, 0x26, 0xdc, 0x51, 0x7a, 0x48, 0xa2,
-  0xb3, 0x03, 0xbb, 0x32, 0x1f, 0x94, 0x13, 0x5e, 0x03, 0x12, 0xc3, 0x6a,
-  0x17, 0xd8, 0xd0, 0xea, 0xca, 0x46, 0x11, 0xf4, 0xf3, 0x99, 0x9f, 0x92,
-  0x1f, 0xb7, 0x54, 0xca, 0x06, 0x18, 0xd6, 0x30, 0x38, 0xac, 0x8e, 0x50,
-  0x2c, 0xce, 0xda, 0x85, 0xff, 0xb4, 0xf9, 0x8c, 0xbc, 0xea, 0x7b, 0x91,
-  0xe3, 0x77, 0xce, 0x44, 0xac, 0x35, 0x0e, 0x86, 0xc9, 0x19, 0x94, 0xb0,
-  0x06, 0x94, 0x25, 0x54, 0x59, 0x3e, 0xee, 0x0e, 0xbd, 0x3a, 0x3c, 0xed,
-  0x7b, 0xcf, 0xfc, 0x9a, 0xd8, 0x90, 0xcc, 0x1d, 0xb8, 0xa3, 0xc7, 0xc7,
-  0x7b, 0x1e, 0xcc, 0xdb, 0x9f, 0x25, 0x17, 0xc7, 0x97, 0x17, 0x9c, 0x3d,
-  0x93, 0x00, 0x8d, 0xb3, 0xcd, 0x62, 0xe9, 0x48, 0x6d, 0xbb, 0x68, 0x07,
-  0xa9, 0xf8, 0x1e, 0xdc, 0x41, 0x9e, 0x92, 0xff, 0xbe, 0x62, 0x86, 0x84,
-  0x5b, 0x97, 0x61, 0x92, 0xe4, 0x4f, 0x7b, 0x4f, 0xf0, 0x36, 0xb8, 0x12,
-  0x0a, 0x6e, 0x65, 0x9f, 0x60, 0xa2, 0x27, 0xc3, 0xad, 0xbf, 0xcf, 0xf6,
-  0x13, 0xdc, 0x71, 0x61, 0x9c, 0x2e, 0xe7, 0x7e, 0xe8, 0x72, 0x34, 0x0d,
-  0x7f, 0x02, 0x30, 0x0f, 0xca, 0x00, 0x25, 0x6b, 0x3d, 0xf2, 0xc5, 0xb8,
-  0xce, 0x95, 0xe9, 0xeb, 0x20, 0x9c, 0xdd, 0x1d, 0xdd, 0x05, 0xd2, 0x45,
-  0xa2, 0xf6, 0x81, 0xe4, 0xf1, 0xee, 0x6e, 0x47, 0x56, 0x77, 0x3a, 0x2e,
-  0xde, 0x5b, 0xc4, 0xa2, 0xe2, 0x88, 0xe0, 0x2d, 0x51, 0x9a, 0x21, 0x5a,
-  0x54, 0xa8, 0x3c, 0x7f, 0xc5, 0x36, 0x01, 0x5e, 0x31, 0xf3, 0xb5, 0x04,
-  0xeb, 0x26, 0xa7, 0xf2, 0x7b, 0xe0, 0x9a, 0xd8, 0xa2, 0xb5, 0x8e, 0xa3,
-  0x80, 0x9e, 0x18, 0x34, 0x79, 0x1a, 0xd4, 0xbf, 0xd0, 0xf8, 0x83, 0x68,
-  0x64, 0x0a, 0xa6, 0x1a, 0x74, 0xf3, 0x24, 0xa6, 0x88, 0xd1, 0xe5, 0xd9,
-  0x85, 0x52, 0x58, 0xcc, 0x75, 0x35, 0xa9, 0x8c, 0x1f, 0xf1, 0x51, 0x9b,
-  0xfd, 0x0e, 0x07, 0xbf, 0x33, 0xfd, 0x4a, 0xbe, 0x20, 0x63, 0x63, 0xf9,
-  0x5e, 0x9f, 0xfa, 0x80, 0x31, 0x9d, 0xda, 0x77, 0x69, 0x09, 0xf4, 0x23,
-  0x2b, 0x91, 0x60, 0x15, 0x57, 0x83, 0x97, 0xe4, 0xa0, 0x9d, 0xad, 0x40,
-  0xec, 0x62, 0xc5, 0x65, 0x3a, 0x52, 0x7b, 0x2e, 0x07, 0x49, 0xaa, 0x51,
-  0xcc, 0x39, 0xdd, 0xda, 0xb4, 0x28, 0x87, 0xe8, 0xcc, 0x55, 0xc1, 0x30,
-  0x07, 0xbd, 0xbb, 0xbb, 0xbc, 0xea, 0x0a, 0x87, 0x30, 0x3b, 0x88, 0x24,
-  0xdc, 0x41, 0x93, 0x08, 0x51, 0x2a, 0xbe, 0xbd, 0xdb, 0x13, 0x92, 0x8c,
-  0x24, 0x72, 0xb1, 0xb0, 0x32, 0xc3, 0x26, 0x2a, 0x7a, 0x29, 0x6b, 0xd7,
-  0xad, 0xf3, 0xf9, 0xd9, 0xc5, 0xa5, 0x0d, 0x0d, 0xdd, 0xe2, 0x83, 0xd6,
-  0xf9, 0x61, 0x0c, 0x2d, 0x75, 0xd1, 0x80, 0xb3, 0xc8, 0x26, 0x44, 0x5a,
-  0xa9, 0x4a, 0x84, 0xb2, 0x29, 0x68, 0xc7, 0x1a, 0x62, 0x9d, 0xad, 0xbc,
-  0xb7, 0x98, 0x22, 0xa0, 0xb6, 0x1a, 0xcf, 0x11, 0x33, 0x0a, 0x33, 0xe8,
-  0x6e, 0x47, 0xaa, 0x97, 0x69, 0x1e, 0xed, 0xc5, 0xd4, 0xc1, 0xca, 0xf3,
-  0xc5, 0x31, 0x97, 0xe4, 0xbd, 0xbc, 0x91, 0xdf, 0xa2, 0xb1, 0x8b, 0x7d,
-  0x57, 0x3f, 0xec, 0x0e, 0xff, 0x00, 0x75, 0x70, 0xb6, 0x07, 0x87, 0x20,
-  0x73, 0xfb, 0xce, 0xde, 0x1c, 0xac, 0xd9, 0xa3, 0x20, 0xb3, 0x17, 0x6c,
-  0x53, 0x69, 0x05, 0x99, 0xa2, 0xf8, 0xa0, 0xa7, 0xbd, 0xf4, 0xe8, 0xd6,
-  0x95, 0x23, 0x51, 0x94, 0xb7, 0x41, 0x0b, 0x8f, 0x7d, 0x0b, 0x4b, 0xe6,
-  0xef, 0xda, 0xc0, 0x89, 0xf9, 0xad, 0xf9, 0x43, 0x17, 0xc4, 0x79, 0x9d,
-  0x2d, 0x8c, 0x30, 0xe4, 0x39, 0xdf, 0xce, 0x13, 0xe7, 0xed, 0x31, 0xf9,
-  0x28, 0x18, 0x0a, 0x7f, 0x6c, 0x09, 0x95, 0x08, 0xe0, 0x6a, 0x91, 0xdd,
-  0xa3, 0xa7, 0xfe, 0x86, 0x60, 0x55, 0xc2, 0x47, 0x60, 0xe8, 0x0a, 0x04,
-  0x37, 0x12, 0x47, 0xb0, 0xe4, 0x8b, 0x15, 0xd0, 0x15, 0x89, 0x4d, 0xcc,
-  0x18, 0x5b, 0x58, 0x43, 0x28, 0x22, 0x87, 0xaf, 0x26, 0x07, 0xfb, 0x7e,
-  0xf4, 0x26, 0x3a, 0x39, 0x3d, 0xf6, 0xdb, 0x25, 0x08, 0x56, 0x38, 0xcc,
-  0x5e, 0xc8, 0xa3, 0x83, 0xbb, 0x70, 0xd7, 0xc5, 0x30, 0x39, 0xe7, 0x9a,
-  0x44, 0xf0, 0x3e, 0x55, 0xff, 0xe6, 0x5b, 0x93, 0xc3, 0x02, 0x63, 0x0c,
-  0x5d, 0xa0, 0x30, 0x8a, 0xe6, 0x0b, 0xda, 0x5d, 0x7c, 0xc2, 0xbf, 0x06,
-  0xe5, 0x64, 0xa2, 0x29, 0x3f, 0xf3, 0x2f, 0x57, 0x34, 0x0f, 0x52, 0xd5,
-  0xda, 0x8f, 0x3c, 0x56, 0xda, 0x22, 0x3d, 0x4e, 0xea, 0x5a, 0x1b, 0x7b,
-  0xe6, 0x33, 0x6d, 0x15, 0xd0, 0xa5, 0x85, 0x2b, 0x7b, 0xa6, 0xc1, 0xc6,
-  0x83, 0xa6, 0xe4, 0x52, 0x38, 0x94, 0x75, 0x42, 0xf0, 0x34, 0x9d, 0x9c,
-  0x71, 0x3a, 0xb9, 0xa5, 0xb6, 0x16, 0xcc, 0x71, 0x67, 0x66, 0x2f, 0x6f,
-  0xa4, 0xc1, 0x60, 0x61, 0x15, 0x4b, 0x2e, 0x2e, 0xcf, 0xde, 0x2a, 0xb0,
-  0xf4, 0x58, 0xa8, 0xd1, 0x91, 0x8e, 0xbb, 0xc7, 0x1a, 0xa3, 0xe3, 0x8e,
-  0x7d, 0x12, 0x09, 0xef, 0x36, 0x9b, 0x86, 0xe8, 0x96, 0x0f, 0xa5, 0xbb,
-  0xc7, 0x4f, 0x7c, 0x53, 0x57, 0x00, 0xee, 0x36, 0xfe, 0x7e, 0xd8, 0xe0,
-  0x41, 0x0e, 0xb5, 0x3b, 0x77, 0x4f, 0x8a, 0xb2, 0x20, 0x16, 0xea, 0x8e,
-  0x63, 0x15, 0xf4, 0x21, 0xc4, 0x70, 0x59, 0x70, 0x2c, 0xc2, 0xe2, 0xde,
-  0x83, 0x47, 0x0c, 0x25, 0xba, 0x4f, 0x6c, 0x10, 0x02, 0x61, 0xef, 0x60,
-  0x25, 0x44, 0xdb, 0x54, 0x05, 0x7d, 0x9e, 0x7e, 0x88, 0xae, 0xfa, 0xf9,
-  0x6a, 0xae, 0x39, 0xf3, 0x41, 0x4f, 0x9f, 0xab, 0x36, 0xab, 0x05, 0xce,
-  0x4d, 0xff, 0x0b, 0x99, 0x69, 0xe1, 0x5c, 0xba, 0x2e, 0xf3, 0x4c, 0x02,
-  0x55, 0x2b, 0x57, 0xf1, 0x65, 0x23, 0x76, 0x9d, 0xf0, 0x85, 0xac, 0x62,
-  0xa2, 0x85, 0x1b, 0x16, 0x01, 0xe2, 0xe1, 0x1d, 0xe0, 0x65, 0x2b, 0xad,
-  0x53, 0x44, 0x5f, 0x99, 0xb7, 0xb0, 0xc3, 0x21, 0x53, 0x66, 0x7f, 0x43,
-  0xa1, 0xb5, 0xa1, 0x5c, 0x3a, 0x02, 0x3a, 0x24, 0xb3, 0xe4, 0x10, 0x03,
-  0xcf, 0xf2, 0x1e, 0x3f, 0x53, 0x53, 0x85, 0xaa, 0xc2, 0x56, 0xfd, 0xab,
-  0x6d, 0x69, 0x7e, 0xb2, 0xe7, 0xc3, 0xe3, 0xb3, 0xac, 0xdc, 0xac, 0x84,
-  0x3b, 0x04, 0x89, 0xea, 0xc4, 0xe0, 0x46, 0xa3, 0x6f, 0x92, 0xd7, 0x2f,
-  0x9f, 0x70, 0xaa, 0xe4, 0x75, 0x56, 0x72, 0x61, 0x3d, 0xaf, 0x8b, 0x9d,
-  0x7d, 0x1b, 0x34, 0xb6, 0xef, 0xe3, 0x0a, 0x4c, 0x7f, 0x52, 0x86, 0xa6,
-  0x92, 0x36, 0x6d, 0x21, 0x43, 0xae, 0x5d, 0x9b, 0x0b, 0xc5, 0x6a, 0x4e,
-  0x19, 0x16, 0x21, 0x64, 0x97, 0x76, 0xac, 0x7d, 0x93, 0x89, 0x3d, 0x79,
-  0xe4, 0x99, 0x58, 0x79, 0xbf, 0x64, 0xe0, 0xee, 0xc5, 0x35, 0x0b, 0xd4,
-  0x1d, 0x27, 0xea, 0x89, 0x30, 0xce, 0x23, 0x39, 0xf7, 0x2c, 0xcc, 0xc6,
-  0xaf, 0x01, 0xf6, 0x0d, 0xde, 0x8e, 0xe0, 0xbd, 0x27, 0xa1, 0x3a, 0x49,
-  0x02, 0x39, 0xee, 0x45, 0x5a, 0x3f, 0x94, 0x95, 0x64, 0x49, 0x25, 0x78,
-  0xf6, 0xa9, 0x7b, 0x96, 0x6d, 0x07, 0xf9, 0x22, 0x28, 0x6e, 0xb0, 0xe6,
-  0x0d, 0x15, 0x82, 0x45, 0x34, 0xf0, 0xe2, 0x99, 0xc8, 0x3d, 0xc1, 0xda,
-  0x07, 0xaf, 0x3c, 0x6b, 0x6a, 0xcb, 0x28, 0x2b, 0xe5, 0x8b, 0xb4, 0xf2,
-  0xa4, 0xf2, 0xe5, 0x4d, 0x78, 0x38, 0x9f, 0xca, 0x4d, 0x7d, 0xde, 0xc6,
-  0x1d, 0x30, 0x1e, 0xd8, 0x70, 0xbc, 0xda, 0x51, 0x17, 0xd2, 0x3f, 0x3a,
-  0x4c, 0xec, 0x95, 0xa8, 0x58, 0x2e, 0xd3, 0x7a, 0xd0, 0xc9, 0x9e, 0x9e,
-  0x19, 0x9a, 0x72, 0x71, 0xbd, 0xc8, 0xff, 0xc1, 0x84, 0x66, 0xf7, 0xb3,
-  0x15, 0xa6, 0x08, 0x1e, 0xdf, 0x57, 0x86, 0xf1, 0x3e, 0x9d, 0xe5, 0xca,
-  0x14, 0xd9, 0x8e, 0xee, 0x1f, 0x78, 0xa4, 0x54, 0xfb, 0x21, 0xe7, 0x23,
-  0x2a, 0x31, 0xa8, 0x5c, 0xe3, 0x86, 0x3d, 0x38, 0x59, 0x03, 0xc6, 0xe2,
-  0xe9, 0x63, 0x95, 0xbd, 0x4c, 0x3e, 0xe6, 0x7b, 0x89, 0x17, 0x62, 0xc6,
-  0x0e, 0xee, 0x88, 0x4d, 0x3f, 0xd5, 0xab, 0x4f, 0xb7, 0xd2, 0x15, 0xa7,
-  0x28, 0xad, 0x1e, 0x07, 0xff, 0x7a, 0x97, 0x2f, 0x34, 0xfb, 0x25, 0x7a,
-  0xfd, 0xe9, 0x1a, 0x13, 0x54, 0x25, 0xf7, 0xe6, 0x31, 0x68, 0x29, 0x78,
-  0xfe, 0x33, 0x7f, 0x12, 0xa4, 0xfa, 0x8b, 0xba, 0x64, 0xcd, 0x95, 0x8a,
-  0xa8, 0x38, 0xab, 0x09, 0x60, 0x67, 0x89, 0x55, 0x97, 0xa5, 0x41, 0x50,
-  0x76, 0xa4, 0x9a, 0x5d, 0xb9, 0xee, 0x67, 0x05, 0x73, 0xd3, 0xa0, 0x3f,
-  0x21, 0xa9, 0x57, 0x28, 0x13, 0xe6, 0x15, 0x84, 0x45, 0xa3, 0xa0, 0x8f,
-  0x7f, 0xfa, 0x99, 0xd2, 0x86, 0xdd, 0x97, 0x26, 0xa6, 0xae, 0x7d, 0xe3,
-  0xb3, 0xdd, 0x50, 0x68, 0x9d, 0xb2, 0xa5, 0x5e, 0x00, 0x04, 0xd7, 0xbe,
-  0x20, 0x94, 0x71, 0x42, 0xd7, 0xc8, 0x35, 0x11, 0x35, 0x9e, 0xf1, 0xc8,
-  0x99, 0xfe, 0xb1, 0xfd, 0x06, 0xd3, 0xbd, 0x0c, 0x45, 0xa8, 0xe4, 0xe4,
-  0x65, 0xf0, 0xe0, 0x23, 0x3f, 0xc1, 0x74, 0xc6, 0xd2, 0xc0, 0xbd, 0x58,
-  0x22, 0x2a, 0xad, 0xa9, 0x14, 0x3c, 0xfa, 0x58, 0x93, 0x18, 0x24, 0x6f,
-  0x08, 0xcb, 0x1f, 0x3d, 0x23, 0xe4, 0x70, 0x84, 0x9c, 0xa3, 0x1a, 0xf9,
-  0xf6, 0x0b, 0xf3, 0x16, 0xb4, 0xf7, 0xfe, 0xb3, 0xa7, 0x0f, 0x3c, 0xab,
-  0x97, 0x66, 0xe5, 0xae, 0xfa, 0xe0, 0xbd, 0xcf, 0xe2, 0x63, 0x6e, 0x6a,
-  0x81, 0xc1, 0x82, 0xd0, 0x51, 0xe3, 0x93, 0x96, 0x6c, 0x31, 0x9c, 0xdc,
-  0xbf, 0x99, 0xe9, 0xa7, 0xe4, 0xdc, 0xab, 0xea, 0xdf, 0xc2, 0xf1, 0x7e,
-  0x1e, 0x62, 0x8b, 0x88, 0xd1, 0xc7, 0x55, 0xf6, 0x0c, 0xab, 0x7d, 0xf9,
-  0x58, 0x6d, 0xac, 0x4e, 0xd0, 0x82, 0xec, 0x39, 0xc9, 0x11, 0xab, 0x85,
-  0xe7, 0x1c, 0xa2, 0x0c, 0x2a, 0x24, 0xa3, 0x45, 0x4d, 0xeb, 0xe8, 0xbe,
-  0xa1, 0x4d, 0x05, 0x75, 0x04, 0xc6, 0xb3, 0xdd, 0xd6, 0x31, 0xa8, 0x6e,
-  0x56, 0xa2, 0x7a, 0xbb, 0x19, 0x79, 0x28, 0xa0, 0xe0, 0xb5, 0x7d, 0xcf,
-  0xbd, 0x30, 0x36, 0x48, 0x8d, 0x47, 0x34, 0x5a, 0xd1, 0xcd, 0x13, 0x90,
-  0xa1, 0x39, 0x3e, 0x50, 0x49, 0xd8, 0x6c, 0x29, 0x49, 0xb2, 0x95, 0xae,
-  0x01, 0x6f, 0x52, 0xa4, 0x8e, 0xa0, 0x1b, 0x15, 0x6d, 0x38, 0xd4, 0x9c,
-  0x76, 0xe9, 0x26, 0x9b, 0xdc, 0xda, 0x91, 0xd9, 0x4a, 0x5b, 0xf8, 0x1e,
-  0xc1, 0x5b, 0x8f, 0xdd, 0xd2, 0x42, 0xad, 0xb9, 0x38, 0x6e, 0x6b, 0x02,
-  0xfe, 0x51, 0xa1, 0x9a, 0x8b, 0xcb, 0xd1, 0xf9, 0x01, 0x8f, 0x59, 0x5c,
-  0x30, 0x74, 0x20, 0x8e, 0x46, 0xd9, 0xdf, 0x35, 0xc7, 0xb3, 0xf2, 0x4f,
-  0x3f, 0x5d, 0xf3, 0xf4, 0x48, 0x43, 0xa4, 0x4e, 0xa6, 0xcc, 0x7e, 0x69,
-  0x1f, 0xc2, 0x97, 0x3e, 0xd3, 0x6c, 0x79, 0x33, 0xed, 0x8a, 0xe5, 0x88,
-  0x47, 0xe6, 0x12, 0x2a, 0xfc, 0xc3, 0x9f, 0x7b, 0xbd, 0xe6, 0x66, 0xb5,
-  0xb8, 0x75, 0xf2, 0xa2, 0x06, 0x9c, 0xd9, 0x06, 0xbb, 0x17, 0x7e, 0xf8,
-  0x41, 0xf8, 0xab, 0x0b, 0x29, 0x52, 0xb3, 0xbe, 0xab, 0x47, 0x49, 0xcc,
-  0x48, 0xae, 0x64, 0x26, 0x6d, 0xd8, 0xc2, 0xcb, 0x0c, 0x38, 0xf4, 0x0a,
-  0x42, 0x0b, 0xa2, 0xea, 0x4a, 0xe7, 0xe2, 0xc8, 0x59, 0xa9, 0x9b, 0x9d,
-  0x69, 0x5e, 0xcb, 0x82, 0xc3, 0x2d, 0xd5, 0x50, 0x44, 0xab, 0x7d, 0xf8,
-  0xf6, 0xf2, 0x9b, 0xb3, 0x8b, 0x51, 0xb2, 0xc3, 0xc8, 0x78, 0x97, 0x17,
-  0x27, 0x5f, 0xbd, 0x25, 0xdd, 0xdb, 0xb9, 0x44, 0x5e, 0xa6, 0xa4, 0x95,
-  0xcf, 0x92, 0x51, 0x9d, 0x2d, 0x68, 0x0d, 0xaf, 0xad, 0xe6, 0x19, 0x02,
-  0x67, 0xf8, 0x9e, 0x2a, 0xca, 0xbe, 0x2b, 0x6b, 0x7b, 0x77, 0x53, 0xe8,
-  0x42, 0x20, 0xef, 0x08, 0xc1, 0xf2, 0x9c, 0x83, 0x50, 0x78, 0xbd, 0x32,
-  0x6f, 0x01, 0xfb, 0x99, 0x67, 0x33, 0xb9, 0xfc, 0xe6, 0xf0, 0xcd, 0xb7,
-  0x23, 0x83, 0x06, 0xff, 0xfe, 0xfb, 0xef, 0x43, 0x8f, 0xfb, 0xc1, 0xce,
-  0x0e, 0x44, 0xbb, 0x9b, 0xf4, 0xc3, 0x87, 0x61, 0x95, 0x6d, 0x6c, 0xbc,
-  0xf2, 0x7e, 0x32, 0x5f, 0xb1, 0xae, 0x5a, 0xd1, 0xad, 0x4e, 0x5f, 0xef,
-  0x2c, 0x57, 0x63, 0xae, 0x90, 0xb7, 0xb3, 0xaa, 0xf3, 0x19, 0x5d, 0x06,
-  0x59, 0x85, 0xb7, 0x77, 0x36, 0x36, 0x46, 0xc7, 0xc7, 0xc9, 0xe1, 0xe9,
-  0xe8, 0x2c, 0x78, 0x77, 0x6b, 0x8f, 0xa3, 0x46, 0xae, 0xb3, 0x7a, 0x8b,
-  0x41, 0x26, 0x4f, 0x0f, 0x2f, 0x59, 0xdf, 0xfc, 0xee, 0xf8, 0x62, 0x74,
-  0x72, 0xf6, 0x86, 0x77, 0x87, 0x83, 0xfb, 0xd2, 0xd9, 0x1d, 0xc7, 0x76,
-  0x5e, 0xe5, 0x40, 0xfc, 0xb8, 0xb3, 0xf2, 0x73, 0x0c, 0x5d, 0x4c, 0x62,
-  0x99, 0x48, 0xd0, 0x12, 0xc2, 0x60, 0x75, 0xaf, 0x25, 0x84, 0xb5, 0x66,
-  0xa5, 0x4f, 0x19, 0x12, 0xaf, 0x80, 0xb3, 0x39, 0x09, 0x32, 0x68, 0x36,
-  0x96, 0xa0, 0xe1, 0xbe, 0xe4, 0xc9, 0x23, 0x69, 0x23, 0x88, 0x31, 0xec,
-  0x9c, 0xf8, 0xe8, 0xe4, 0xf5, 0x39, 0x69, 0x5f, 0x6f, 0x47, 0x87, 0x5f,
-  0x1f, 0xf3, 0xa3, 0x5f, 0x67, 0xb5, 0xdf, 0x0f, 0x29, 0x93, 0xc7, 0x9d,
-  0xbc, 0xc9, 0xea, 0x6a, 0x92, 0x2e, 0x39, 0x1d, 0x98, 0xba, 0x19, 0xc8,
-  0x1d, 0x10, 0xb4, 0x2d, 0x72, 0xb8, 0xaf, 0x25, 0xb8, 0xd0, 0xe7, 0x51,
-  0xe8, 0x2f, 0x6c, 0xf7, 0xe2, 0xf8, 0xf0, 0xe5, 0xeb, 0x63, 0x0b, 0x3b,
-  0x17, 0xa4, 0x7c, 0x6a, 0xf4, 0xa6, 0xe0, 0xd2, 0xce, 0xce, 0x0e, 0xcd,
-  0xf7, 0x32, 0x2f, 0x3e, 0x7d, 0xc3, 0x95, 0xf6, 0xba, 0xbb, 0xf3, 0x1b,
-  0x85, 0x67, 0x87, 0x57, 0xf9, 0x8e, 0xb4, 0x6e, 0xfd, 0xa5, 0x6e, 0x49,
-  0x0c, 0x11, 0x59, 0x45, 0x55, 0xb1, 0x27, 0xc0, 0x10, 0xf1, 0xf9, 0xee,
-  0xee, 0xee, 0x03, 0xf3, 0x80, 0x2c, 0xaf, 0x37, 0x1e, 0x4d, 0xe5, 0x80,
-  0x1f, 0xdf, 0xf1, 0xed, 0xfb, 0x11, 0xcf, 0x34, 0xf7, 0x9a, 0x6b, 0x19,
-  0x2d, 0x04, 0xe1, 0x33, 0xaf, 0xb3, 0xee, 0x21, 0x4f, 0x8a, 0xc2, 0xed,
-  0x40, 0x63, 0x71, 0xa6, 0x8c, 0x61, 0x9d, 0xd7, 0x41, 0x14, 0xae, 0x0d,
-  0x9c, 0x74, 0x0f, 0xc4, 0x98, 0x95, 0xf7, 0xed, 0x26, 0xf9, 0x1b, 0x6a,
-  0x93, 0xff, 0x19, 0x16, 0xe5, 0xf5, 0xce, 0xfc, 0x00, 0xe2, 0x04, 0x3d,
-  0xf4, 0x2a, 0x43, 0x81, 0xec, 0xbb, 0xc2, 0x85, 0x5a, 0x57, 0xbc, 0xb0,
-  0x9c, 0x15, 0xf2, 0x09, 0xe3, 0xfa, 0x05, 0xab, 0x20, 0xd1, 0x48, 0x57,
-  0x36, 0xf3, 0x51, 0xb2, 0x76, 0xbf, 0x2a, 0xde, 0x30, 0xb6, 0xf6, 0x0d,
-  0x89, 0x81, 0x50, 0x2f, 0x1c, 0x31, 0x06, 0x12, 0xa1, 0x5f, 0x4b, 0x22,
-  0x19, 0xae, 0x58, 0xc1, 0x6f, 0x69, 0x61, 0x36, 0x01, 0xa8, 0x63, 0xef,
-  0xe9, 0x92, 0x93, 0xe6, 0x4a, 0x44, 0x11, 0xa2, 0x07, 0x4e, 0xc4, 0x53,
-  0xc4, 0x6b, 0x17, 0x7f, 0xc3, 0x0d, 0xb7, 0xfb, 0x1c, 0x0c, 0x40, 0x3f,
-  0x95, 0xa3, 0x96, 0x4f, 0xe8, 0x3c, 0x98, 0x94, 0xac, 0xfe, 0x42, 0xaf,
-  0xc8, 0x80, 0x76, 0x46, 0x34, 0x8a, 0xa8, 0xaf, 0x95, 0xaf, 0x9f, 0x57,
-  0x49, 0x77, 0xd5, 0x0d, 0x9d, 0xdf, 0xa1, 0x26, 0x07, 0xa2, 0x2f, 0xda,
-  0x93, 0x1d, 0x64, 0x48, 0x7d, 0x72, 0x4f, 0x47, 0xe7, 0xfa, 0x1b, 0x47,
-  0xb3, 0xe4, 0xef, 0x79, 0x09, 0x6e, 0x33, 0xcc, 0x3e, 0x14, 0xeb, 0x1f,
-  0x18, 0xcc, 0x01, 0xad, 0x02, 0xbf, 0xf1, 0xbf, 0x77, 0x86, 0x55, 0x75,
-  0xb3, 0x93, 0x4f, 0xdf, 0x4d, 0xab, 0x94, 0x03, 0x92, 0x56, 0xe3, 0xe8,
-  0xe3, 0x21, 0x7d, 0x98, 0xfc, 0xd4, 0xe0, 0xfa, 0xd5, 0xa4, 0x7b, 0x26,
-  0xff, 0x7b, 0x87, 0x43, 0x4b, 0x51, 0x17, 0x28, 0x58, 0xb8, 0x0e, 0xde,
-  0x41, 0xb3, 0x92, 0x28, 0x66, 0x3a, 0x8c, 0xdd, 0x94, 0x31, 0xb8, 0x4e,
-  0x7a, 0x4a, 0x6e, 0x3f, 0xee, 0xef, 0xee, 0xee, 0x1d, 0xec, 0x7d, 0xfe,
-  0x6c, 0xf7, 0x60, 0x6f, 0x6f, 0x6f, 0xff, 0x60, 0xef, 0xe0, 0x60, 0x7f,
-  0xf7, 0xe7, 0x9d, 0xde, 0xc6, 0xc6, 0xcb, 0xb3, 0xef, 0xdf, 0x9c, 0x9e,
-  0x1d, 0xbe, 0x4c, 0x2e, 0xcf, 0x92, 0x43, 0xd8, 0x8c, 0x3a, 0xce, 0x39,
-  0x42, 0x27, 0x39, 0x0f, 0x4e, 0x52, 0xc5, 0x83, 0xfa, 0xca, 0x6a, 0xe0,
-  0x70, 0x61, 0x33, 0x58, 0x99, 0xf6, 0x38, 0x0a, 0xe8, 0x04, 0xdc, 0xd2,
-  0xf0, 0xa6, 0x9e, 0x7f, 0x9c, 0xa3, 0x7d, 0x4a, 0xcf, 0x7d, 0x71, 0xe3,
-  0x7a, 0xb5, 0x0f, 0xc3, 0x31, 0xca, 0xd5, 0x64, 0x13, 0x75, 0x86, 0xa8,
-  0x0b, 0xd4, 0xa5, 0x46, 0x6c, 0x49, 0xd0, 0x8f, 0xaf, 0x09, 0x2c, 0xe5,
-  0xa6, 0xab, 0x18, 0x57, 0x02, 0xe5, 0x5f, 0xd5, 0xc7, 0x8e, 0x3b, 0x9e,
-  0x05, 0x9a, 0xed, 0x68, 0x82, 0x67, 0x6b, 0xa7, 0x44, 0x77, 0x51, 0xf6,
-  0x01, 0xb3, 0x6e, 0xf2, 0x0e, 0x09, 0x9e, 0xf5, 0xb3, 0x03, 0x62, 0xb9,
-  0x29, 0xb2, 0x79, 0x69, 0x43, 0x46, 0x74, 0x50, 0x47, 0x77, 0xdc, 0x8f,
-  0xb1, 0x14, 0xdf, 0x05, 0x7f, 0x13, 0xde, 0x43, 0x3b, 0xce, 0x36, 0x28,
-  0x03, 0x78, 0x3b, 0x3a, 0x79, 0xf3, 0x35, 0xbc, 0x7f, 0xdf, 0x9f, 0x5d,
-  0xbc, 0x1c, 0x51, 0xb3, 0x7c, 0x41, 0x6f, 0xc0, 0x3c, 0xc4, 0x27, 0x59,
-  0x47, 0x25, 0xe7, 0x82, 0xbb, 0xfe, 0x33, 0xb4, 0xad, 0x69, 0xdf, 0xa5,
-  0x58, 0x63, 0x98, 0x81, 0xb0, 0xcc, 0x79, 0xd3, 0xdd, 0x5c, 0x0f, 0x84,
-  0x20, 0xaf, 0x7f, 0x39, 0x4f, 0xb9, 0xae, 0x46, 0x36, 0x94, 0x40, 0x5e,
-  0x84, 0x69, 0xed, 0x70, 0x72, 0xc4, 0x0e, 0x0b, 0xed, 0x3b, 0x75, 0x01,
-  0xfe, 0x81, 0x56, 0x8a, 0x32, 0xac, 0x77, 0x15, 0xa8, 0xf6, 0x74, 0xf0,
-  0xae, 0x66, 0xe9, 0x35, 0x3a, 0x8c, 0xcf, 0x64, 0xd0, 0x99, 0x76, 0xff,
-  0xa9, 0x5d, 0x32, 0xdb, 0x43, 0x7b, 0x27, 0x20, 0x00, 0x40, 0x29, 0x21,
-  0x19, 0x5c, 0xbd, 0x16, 0x22, 0x35, 0xa1, 0x6a, 0x38, 0x87, 0x83, 0x70,
-  0x91, 0xc9, 0x76, 0xe5, 0x14, 0x94, 0x6d, 0x14, 0x0c, 0x0a, 0x92, 0xdf,
-  0x07, 0x51, 0xcd, 0x25, 0x6e, 0x29, 0x30, 0x20, 0x54, 0x3e, 0xa4, 0x0d,
-  0xf5, 0x31, 0xa0, 0x2e, 0xcb, 0x92, 0xf3, 0x60, 0x80, 0xc2, 0x52, 0x59,
-  0xac, 0x94, 0x8a, 0x71, 0x3d, 0x2e, 0x5b, 0xc3, 0xc1, 0x0e, 0x3d, 0x03,
-  0x56, 0xf0, 0x40, 0xfb, 0x1e, 0x14, 0xb3, 0xaa, 0x69, 0x28, 0x29, 0x5d,
-  0x29, 0x5a, 0x46, 0x5a, 0x71, 0x76, 0x49, 0x14, 0x97, 0x5c, 0xd3, 0x9e,
-  0x85, 0x4c, 0x48, 0x2b, 0xd4, 0x36, 0xd0, 0x8a, 0x5d, 0xd2, 0x38, 0x33,
-  0x5f, 0xc1, 0x80, 0xd9, 0x50, 0x77, 0xb4, 0xe7, 0xf3, 0xde, 0xec, 0xc5,
-  0x3c, 0x9a, 0x84, 0x50, 0x62, 0xa0, 0x42, 0x39, 0x9a, 0x18, 0x19, 0x94,
-  0xe7, 0x6b, 0x2c, 0x5b, 0x58, 0x8f, 0x3a, 0x62, 0xb5, 0xcd, 0x7c, 0xe8,
-  0x0d, 0x64, 0x43, 0xb9, 0x58, 0xe9, 0x60, 0x79, 0x24, 0x20, 0xcb, 0xbf,
-  0xca, 0x7b, 0x91, 0xd7, 0x55, 0x36, 0xbb, 0x52, 0x80, 0x8d, 0x1a, 0x46,
-  0x3d, 0x9e, 0x4a, 0xda, 0xa8, 0x0a, 0x64, 0x49, 0x50, 0xab, 0x85, 0x4b,
-  0xfb, 0x2f, 0x94, 0x67, 0x5c, 0x83, 0x9b, 0x2a, 0x62, 0x47, 0x93, 0x51,
-  0x88, 0xd7, 0x6c, 0x68, 0x05, 0x43, 0x36, 0x12, 0x57, 0xeb, 0xa4, 0x35,
-  0x05, 0x57, 0xff, 0x01, 0xf8, 0xfb, 0xa0, 0x8e, 0xe0, 0xc1, 0xd5, 0x98,
-  0x56, 0xdb, 0x3d, 0xc7, 0x6b, 0x87, 0xc0, 0x31, 0x6e, 0xee, 0x28, 0x2c,
-  0x94, 0x2d, 0x71, 0x93, 0xab, 0x08, 0x46, 0x24, 0x57, 0x30, 0x16, 0x3a,
-  0x68, 0x48, 0xb7, 0x5a, 0x55, 0x6e, 0x45, 0x51, 0x15, 0x29, 0x75, 0xe5,
-  0xe0, 0xbb, 0x8e, 0xa1, 0x72, 0xa4, 0xf5, 0xe7, 0xf0, 0xe3, 0x47, 0x30,
-  0x1e, 0x92, 0xe9, 0x01, 0xb3, 0x7b, 0x39, 0x25, 0xf9, 0xe2, 0xe1, 0xc3,
-  0xa8, 0x83, 0xf8, 0xa4, 0x8e, 0x31, 0x57, 0x05, 0x5f, 0x80, 0xa9, 0xda,
-  0x47, 0x74, 0x89, 0x77, 0x1c, 0x29, 0x08, 0x1d, 0x09, 0x26, 0x8d, 0xf8,
-  0x53, 0x1c, 0x04, 0x49, 0x54, 0x3b, 0x48, 0xbe, 0x4a, 0xab, 0x7c, 0xd2,
-  0x4f, 0x5e, 0xe6, 0xd7, 0x40, 0x03, 0x70, 0x69, 0x00, 0x2e, 0x79, 0x62,
-  0x98, 0x7c, 0xaf, 0x08, 0xcc, 0x9c, 0xc0, 0x0e, 0x00, 0x45, 0x98, 0x55,
-  0x1b, 0xee, 0x78, 0x5a, 0x06, 0x35, 0x89, 0x87, 0x95, 0x81, 0xd1, 0xb6,
-  0x2f, 0x2f, 0x81, 0xcd, 0x4c, 0xab, 0xdb, 0x66, 0xe1, 0x2a, 0x87, 0x05,
-  0x2c, 0x72, 0x11, 0xd6, 0x77, 0xa1, 0x75, 0x06, 0x94, 0xe6, 0xf0, 0xb7,
-  0xa3, 0x72, 0x15, 0x52, 0xc4, 0x90, 0x55, 0x69, 0x88, 0x97, 0x39, 0xe2,
-  0x71, 0x1b, 0xd9, 0x71, 0xdd, 0x40, 0xd6, 0x3e, 0xad, 0x13, 0xaf, 0x88,
-  0xf2, 0x93, 0xb3, 0xcb, 0xe3, 0x3f, 0x24, 0x87, 0x6d, 0x3f, 0x24, 0x33,
-  0xea, 0x06, 0xfc, 0x46, 0xdf, 0xd3, 0x15, 0xc6, 0x2e, 0x51, 0x5d, 0x52,
-  0x67, 0x25, 0x75, 0x59, 0x11, 0xe1, 0xc6, 0x33, 0x58, 0x95, 0x06, 0xa9,
-  0xa2, 0x4e, 0xba, 0x4b, 0xa1, 0x86, 0x75, 0x36, 0x28, 0x36, 0x21, 0x69,
-  0x73, 0x79, 0x2a, 0x41, 0xc2, 0x8c, 0xb3, 0x83, 0xc2, 0xe6, 0x38, 0x8a,
-  0x88, 0x67, 0xd5, 0x12, 0xf1, 0x00, 0xb2, 0xc9, 0x6b, 0x48, 0xce, 0xf0,
-  0xb4, 0x6b, 0xb9, 0xa8, 0xef, 0x7d, 0x53, 0x69, 0x08, 0x79, 0xf4, 0x8e,
-  0x4f, 0xd8, 0x3b, 0xe3, 0xb3, 0x7a, 0x23, 0xc8, 0x58, 0xb4, 0xde, 0x70,
-  0x93, 0x52, 0xed, 0xb4, 0x09, 0x73, 0x3f, 0xb7, 0x88, 0x2e, 0xec, 0xc5,
-  0x04, 0x80, 0x22, 0x52, 0xc6, 0x49, 0xed, 0xb6, 0x76, 0xa8, 0x43, 0x3e,
-  0x0d, 0x88, 0x20, 0x00, 0x93, 0xa0, 0x86, 0xa7, 0x16, 0x34, 0x91, 0xf8,
-  0x59, 0x6a, 0xb5, 0x19, 0xf5, 0x8c, 0x3c, 0x08, 0xac, 0x2a, 0x4a, 0xe1,
-  0x01, 0x8f, 0x2b, 0x8c, 0xba, 0xae, 0xac, 0x62, 0xa3, 0xd5, 0xf3, 0x6b,
-  0x55, 0xdb, 0xdb, 0xe0, 0x0b, 0xc8, 0x99, 0x9e, 0x50, 0x27, 0xd5, 0x95,
-  0x0a, 0x09, 0xc2, 0xfd, 0x5e, 0x39, 0x6c, 0x26, 0x6d, 0x96, 0xab, 0x97,
-  0x4d, 0xb2, 0x20, 0xd9, 0x61, 0x41, 0x24, 0xeb, 0x2f, 0x02, 0xa1, 0x9f,
-  0xa2, 0xd2, 0x5a, 0xa9, 0xb9, 0x00, 0xf7, 0x48, 0xb9, 0xa3, 0x71, 0x26,
-  0x18, 0xe4, 0x44, 0x25, 0xb2, 0x8b, 0x80, 0xb5, 0xe3, 0x83, 0x27, 0x94,
-  0x39, 0x07, 0x71, 0x6f, 0x78, 0xea, 0x66, 0x6e, 0xbd, 0x6e, 0x9e, 0x9c,
-  0xa5, 0xc8, 0xe4, 0x66, 0xa6, 0x47, 0x91, 0x24, 0x58, 0x9a, 0x5e, 0x68,
-  0xe1, 0x1c, 0xd8, 0x02, 0x74, 0xd4, 0xbc, 0x3b, 0x10, 0xf4, 0x16, 0x4e,
-  0xec, 0xb0, 0x4d, 0x6f, 0x00, 0x50, 0x31, 0x2b, 0x99, 0x26, 0xf3, 0x7b,
-  0x8d, 0xf2, 0xd7, 0xab, 0x92, 0x13, 0xd1, 0xa1, 0x64, 0x7e, 0xfe, 0x79,
-  0x24, 0x1a, 0x7d, 0x70, 0x4f, 0x1f, 0xd0, 0xd7, 0x81, 0x32, 0x3b, 0x63,
-  0x9f, 0x3d, 0x2b, 0x8f, 0x10, 0xcb, 0x9c, 0x46, 0xdb, 0xa1, 0x2b, 0x04,
-  0x60, 0x3a, 0xd2, 0xa3, 0x33, 0x71, 0x47, 0x54, 0xd6, 0xf7, 0xa9, 0x08,
-  0x1b, 0xa2, 0x2d, 0xc9, 0x40, 0xd3, 0x4a, 0x62, 0x3f, 0xd6, 0xa8, 0x0f,
-  0xc6, 0x1d, 0xdb, 0xa3, 0x0d, 0x84, 0x48, 0x12, 0x64, 0x87, 0x2c, 0x77,
-  0xb2, 0x4c, 0x3c, 0x2a, 0xb4, 0x61, 0x5e, 0x64, 0x1d, 0x8c, 0xa3, 0x8e,
-  0x76, 0xd5, 0x46, 0x2b, 0x13, 0xe7, 0x6e, 0xf5, 0xc1, 0xdb, 0xf5, 0xc3,
-  0x79, 0xfb, 0x6b, 0x86, 0x73, 0x98, 0x3c, 0x18, 0xed, 0xae, 0x35, 0xff,
-  0x98, 0xd1, 0x57, 0x96, 0xe7, 0x53, 0x80, 0xaa, 0x4d, 0xf7, 0x94, 0x35,
-  0x9a, 0xb0, 0x9f, 0x6a, 0xdc, 0xac, 0x00, 0x14, 0xeb, 0x99, 0x8b, 0x42,
-  0x9e, 0x86, 0x8c, 0xcf, 0xed, 0xf7, 0x6d, 0x28, 0x9f, 0x3a, 0x5c, 0x01,
-  0xe7, 0x70, 0xf1, 0xfc, 0xed, 0x48, 0x75, 0xcd, 0x20, 0xd9, 0x1b, 0xee,
-  0x86, 0xc8, 0x2c, 0x2e, 0xaf, 0xa4, 0x04, 0x36, 0x61, 0x0d, 0x8c, 0x16,
-  0x5f, 0x3f, 0x95, 0x67, 0x82, 0xbc, 0xff, 0xd6, 0x6b, 0xfa, 0xd9, 0x9e,
-  0xe0, 0xb5, 0xd2, 0x49, 0xd2, 0x22, 0x16, 0x0c, 0xf3, 0x91, 0xcd, 0x97,
-  0x88, 0xbf, 0x37, 0x0e, 0x18, 0xde, 0xfd, 0x38, 0x47, 0x8f, 0xfd, 0x91,
-  0x7a, 0xe2, 0xb6, 0x5b, 0xc7, 0x28, 0xe1, 0xd9, 0x78, 0xc0, 0x22, 0xa4,
-  0x21, 0x8b, 0x65, 0x99, 0xb4, 0x54, 0xaf, 0xcd, 0x13, 0x3a, 0x6a, 0x66,
-  0xf3, 0x31, 0x3d, 0xe3, 0x8e, 0x4d, 0xae, 0x56, 0x25, 0x18, 0xaf, 0xa2,
-  0x73, 0x29, 0x64, 0x06, 0xb7, 0xca, 0xa1, 0x8e, 0x1d, 0x9c, 0x06, 0xd9,
-  0xac, 0x5c, 0xcd, 0x1e, 0xc5, 0x7e, 0xd5, 0xd8, 0x89, 0xf4, 0x7e, 0xad,
-  0xc3, 0xe4, 0xdd, 0x18, 0xce, 0x84, 0x46, 0xed, 0xce, 0x72, 0x1a, 0xd0,
-  0x26, 0xb0, 0x23, 0x78, 0xe9, 0x39, 0xd6, 0x5f, 0x79, 0xa1, 0x03, 0x2e,
-  0x33, 0xa8, 0xde, 0x66, 0x11, 0xd8, 0xb8, 0xac, 0x4b, 0x9b, 0xe9, 0xca,
-  0x35, 0xd0, 0x4f, 0x06, 0xff, 0x53, 0x57, 0x86, 0xa5, 0x55, 0x0e, 0xc3,
-  0x01, 0x96, 0x7b, 0x58, 0xf2, 0x54, 0xb3, 0xa5, 0xc0, 0xf0, 0xf9, 0x52,
-  0xb7, 0x79, 0xb8, 0xe4, 0x46, 0x4b, 0xb7, 0x00, 0xff, 0x7b, 0x15, 0x82,
-  0x1a, 0xbe, 0xf2, 0x38, 0x44, 0x7d, 0x63, 0x15, 0xd2, 0xdc, 0x86, 0x03,
-  0x87, 0x97, 0xb0, 0xab, 0x68, 0xc0, 0xee, 0x22, 0xfb, 0x8a, 0x8b, 0x67,
-  0x1d, 0x15, 0x69, 0xb8, 0xac, 0xa6, 0xda, 0x6c, 0xd8, 0x48, 0x85, 0xf8,
-  0x8d, 0x4f, 0xf4, 0x24, 0xe3, 0x6f, 0x40, 0x2f, 0x0c, 0xde, 0xaa, 0xc9,
-  0xe1, 0x4b, 0xe9, 0x61, 0x08, 0x2b, 0xaa, 0xf4, 0x70, 0x8e, 0xb2, 0xa0,
-  0xf6, 0xc0, 0x81, 0xbe, 0xc4, 0x69, 0x82, 0x3d, 0x35, 0x38, 0x34, 0x57,
-  0x45, 0x9e, 0xb7, 0x34, 0x42, 0x2e, 0x37, 0x89, 0x29, 0x0c, 0xc4, 0x36,
-  0xce, 0x87, 0x4c, 0x7e, 0x95, 0x77, 0x55, 0x97, 0xba, 0xe7, 0x26, 0x86,
-  0x12, 0xc0, 0xac, 0xa6, 0x86, 0xfd, 0xbd, 0x1d, 0x19, 0xcc, 0x8e, 0x34,
-  0x20, 0xe2, 0x9c, 0x92, 0xa4, 0xf7, 0xa7, 0x1b, 0x4a, 0x4a, 0x78, 0x73,
-  0x71, 0xb8, 0x35, 0xc7, 0x41, 0xcc, 0x35, 0x88, 0x13, 0x8e, 0x0a, 0xbe,
-  0x9a, 0xe8, 0xae, 0x05, 0xe6, 0x8a, 0xe6, 0x83, 0x31, 0xa4, 0xb6, 0xdb,
-  0xa0, 0xbe, 0x93, 0xf4, 0x88, 0x94, 0x06, 0xef, 0x83, 0x38, 0x00, 0x4e,
-  0xaa, 0x03, 0xf0, 0x1c, 0x5d, 0xe8, 0x77, 0x2e, 0x1d, 0x89, 0x0f, 0xba,
-  0xb8, 0x2a, 0x89, 0xa2, 0x2f, 0x0e, 0xdf, 0x7c, 0x7d, 0x0c, 0x49, 0x00,
-  0xbc, 0x9d, 0x0f, 0x68, 0xce, 0xd4, 0x3e, 0x5d, 0x4d, 0xa0, 0x34, 0xd0,
-  0x8a, 0x21, 0x8c, 0x08, 0x10, 0x9d, 0x56, 0x32, 0x0b, 0x55, 0xc0, 0x40,
-  0xbc, 0xd8, 0x6e, 0x0d, 0x0e, 0xda, 0x48, 0xcc, 0x40, 0x06, 0x09, 0x82,
-  0xf5, 0x27, 0x2b, 0x53, 0x5b, 0xad, 0xc6, 0xcb, 0x54, 0x61, 0x34, 0xd2,
-  0x10, 0x67, 0x41, 0xcd, 0x0e, 0xc3, 0xe6, 0x59, 0xdc, 0xb0, 0x4c, 0x01,
-  0xa7, 0xe2, 0x96, 0x50, 0x71, 0x87, 0xa1, 0xcd, 0x47, 0xc0, 0x05, 0xf6,
-  0x76, 0x77, 0x7d, 0x11, 0x06, 0x8f, 0x17, 0x11, 0x71, 0xcb, 0x32, 0xd9,
-  0x1d, 0x3c, 0x7b, 0xb6, 0x8e, 0x11, 0xba, 0x46, 0x01, 0xda, 0xf0, 0xe4,
-  0x93, 0xdb, 0x1c, 0xf0, 0xa3, 0xeb, 0xda, 0xec, 0x50, 0x64, 0x50, 0x63,
-  0x55, 0x03, 0xb3, 0x2a, 0x27, 0xb5, 0xa8, 0xc1, 0x43, 0x6c, 0xef, 0xf0,
-  0x85, 0x2c, 0x9c, 0x36, 0xc3, 0x4b, 0xb9, 0xe1, 0x41, 0x54, 0x81, 0x19,
-  0x60, 0xb6, 0x91, 0x25, 0xc7, 0x66, 0xe5, 0xce, 0x1d, 0xf6, 0x49, 0x0b,
-  0x13, 0xe8, 0xb3, 0x6b, 0x96, 0xe8, 0x2a, 0x9e, 0x8d, 0x89, 0x04, 0x6f,
-  0xcf, 0xd9, 0x1c, 0x76, 0xf2, 0xe6, 0x6b, 0xb1, 0x0e, 0x90, 0xaa, 0x0b,
-  0xd3, 0xe8, 0x4e, 0x4b, 0xf1, 0x7d, 0x2b, 0xb5, 0x14, 0x38, 0x32, 0x0f,
-  0x7e, 0x70, 0x29, 0x88, 0x98, 0x2f, 0x84, 0x15, 0xf8, 0xdd, 0x5f, 0x63,
-  0x9a, 0xbb, 0x4c, 0x06, 0x81, 0x70, 0xa2, 0xa5, 0x14, 0x58, 0x32, 0x99,
-  0xdf, 0x9b, 0x42, 0xa4, 0x3d, 0xa0, 0x75, 0x33, 0xb4, 0xbb, 0x66, 0xc5,
-  0x04, 0x26, 0x5a, 0x2c, 0x28, 0x28, 0x92, 0x4d, 0x3a, 0xba, 0x94, 0x6e,
-  0x70, 0xbe, 0x5b, 0x92, 0xc8, 0xa7, 0x0d, 0xa5, 0x61, 0xf9, 0x6b, 0x16,
-  0xdf, 0x62, 0xc9, 0xaa, 0x6f, 0xa6, 0x90, 0xb6, 0x55, 0x4e, 0x2a, 0x10,
-  0x87, 0x5c, 0x9d, 0x77, 0x1b, 0x85, 0xfa, 0x8a, 0xe2, 0xbf, 0x3e, 0xce,
-  0x07, 0x46, 0xc8, 0x07, 0x95, 0x6f, 0xaa, 0xc5, 0xd4, 0xab, 0xfe, 0x3a,
-  0xe2, 0x4e, 0xbb, 0xf6, 0xa5, 0xbc, 0x2f, 0x5d, 0xa7, 0xdd, 0xdd, 0xc9,
-  0xfb, 0xb6, 0x34, 0x1d, 0x07, 0x80, 0x45, 0x5a, 0x2d, 0xb5, 0xe1, 0xb2,
-  0xf8, 0x4c, 0x97, 0x61, 0x29, 0x1c, 0x9c, 0x23, 0x6f, 0x8a, 0x25, 0x1b,
-  0x89, 0xa6, 0x0a, 0xa3, 0x10, 0x07, 0xd3, 0x10, 0x90, 0x99, 0x71, 0x79,
-  0xdd, 0xe6, 0x5a, 0x8a, 0x0a, 0x30, 0xa4, 0x28, 0x2e, 0x7b, 0xe2, 0x80,
-  0x78, 0x3c, 0x22, 0x6c, 0xb9, 0x5a, 0x28, 0xef, 0x63, 0x7d, 0x8b, 0x06,
-  0x9f, 0x56, 0x37, 0x28, 0x6e, 0xea, 0x2c, 0x33, 0xb1, 0x78, 0x85, 0xee,
-  0x15, 0xde, 0x94, 0xe4, 0x29, 0x11, 0xa6, 0x20, 0x5c, 0x37, 0x96, 0xa2,
-  0xb9, 0x02, 0x81, 0x21, 0xe3, 0x53, 0x4f, 0x81, 0xc8, 0xd4, 0x1d, 0xae,
-  0x1b, 0x1c, 0x84, 0x80, 0xb9, 0x74, 0x92, 0x5f, 0xd3, 0x10, 0x14, 0xca,
-  0xe7, 0xb0, 0xbb, 0x40, 0x5b, 0x02, 0x26, 0x52, 0x6b, 0x09, 0xa1, 0x44,
-  0x03, 0x34, 0x51, 0x20, 0x92, 0x8c, 0xe5, 0xaa, 0x34, 0x00, 0xeb, 0x97,
-  0xaf, 0xe5, 0x31, 0x93, 0x30, 0x7b, 0xbe, 0xef, 0x45, 0x25, 0x85, 0x37,
-  0x51, 0x92, 0x83, 0xd0, 0x27, 0x66, 0x28, 0x03, 0x94, 0x5c, 0xee, 0x1a,
-  0x41, 0xbb, 0xa3, 0x4b, 0xd6, 0xee, 0x71, 0x1d, 0x99, 0x8e, 0xf8, 0xdd,
+  0x02, 0xd8, 0xd7, 0xc6, 0x3a, 0x2e, 0x63, 0x00, 0xc0, 0x20, 0x91, 0x33,
+  0x77, 0x31, 0x10, 0xad, 0xe6, 0xbe, 0x3e, 0xf6, 0x18, 0xd8, 0x81, 0x37,
+  0xcc, 0x40, 0xb0, 0xdc, 0x77, 0x02, 0x25, 0xc6, 0xe4, 0x7f, 0x87, 0x5a,
+  0xa2, 0x06, 0xef, 0xd8, 0xa9, 0x15, 0x5d, 0x7a, 0x8c, 0x48, 0x61, 0x5d,
+  0x06, 0x15, 0xe5, 0x57, 0xf0, 0xd4, 0x82, 0xd9, 0x37, 0xff, 0x6d, 0xd3,
+  0x23, 0xf3, 0x75, 0x24, 0x73, 0x34, 0xb0, 0xf4, 0x5b, 0x28, 0x39, 0x83,
+  0x93, 0xbe, 0x1f, 0xa9, 0xef, 0xd0, 0xe6, 0x31, 0xee, 0x80, 0xb6, 0x5e,
+  0x37, 0x8c, 0x6f, 0x8e, 0x0f, 0x5f, 0xda, 0x64, 0xff, 0x29, 0xf0, 0x36,
+  0xde, 0x10, 0x34, 0xce, 0x04, 0xc1, 0x7b, 0x65, 0xba, 0x24, 0x36, 0xc5,
+  0xee, 0x0e, 0x90, 0x08, 0x49, 0xdb, 0x5c, 0x03, 0x82, 0x49, 0x36, 0x56,
+  0x1d, 0xd5, 0xea, 0xb4, 0x56, 0x79, 0x0c, 0x0c, 0x73, 0x66, 0xe4, 0xe3,
+  0xc3, 0x2b, 0x2c, 0x2e, 0xa0, 0xdf, 0x30, 0x51, 0xf3, 0xb9, 0xfc, 0xbb,
+  0xe6, 0x52, 0x38, 0x06, 0x98, 0xa8, 0x3e, 0x1a, 0x22, 0xe1, 0x5e, 0x07,
+  0x95, 0x7d, 0xef, 0xb2, 0x31, 0x0b, 0x45, 0xd7, 0x2c, 0x47, 0xc3, 0xef,
+  0x49, 0xcc, 0xaf, 0x3d, 0x72, 0xe5, 0x1d, 0x00, 0x37, 0x93, 0x82, 0x4d,
+  0x1c, 0x16, 0x1f, 0xb4, 0xde, 0x08, 0xe3, 0xd7, 0x3c, 0x49, 0x2b, 0x6a,
+  0x3b, 0x8d, 0xa0, 0x3b, 0x89, 0x55, 0x54, 0x35, 0x09, 0x24, 0x36, 0x32,
+  0x7e, 0xe9, 0x26, 0x0d, 0xa0, 0xc7, 0x17, 0x8a, 0x3f, 0x8e, 0x7d, 0x71,
+  0x19, 0x00, 0x66, 0xb2, 0x88, 0x52, 0x6e, 0x7d, 0xb8, 0x86, 0xd2, 0xfb,
+  0x8a, 0x77, 0x41, 0x1c, 0xe7, 0x8c, 0xa8, 0x53, 0x2e, 0x5c, 0x0e, 0xa9,
+  0x76, 0x19, 0xba, 0x2a, 0xa2, 0x3b, 0xa6, 0x71, 0xba, 0x9c, 0x9d, 0x04,
+  0xf9, 0xbc, 0xa1, 0xcc, 0xcd, 0x73, 0xb4, 0xb0, 0x35, 0xe4, 0x87, 0xd2,
+  0x25, 0x11, 0x67, 0x12, 0x71, 0x8c, 0x3f, 0x71, 0xa1, 0xd5, 0xd5, 0x95,
+  0x05, 0xad, 0x89, 0x8e, 0x8a, 0x81, 0x3a, 0xe4, 0x94, 0x69, 0x31, 0xc4,
+  0xe2, 0xeb, 0x9a, 0x99, 0xc8, 0x98, 0x4e, 0xd6, 0x99, 0x6d, 0x74, 0x3a,
+  0x0e, 0x72, 0xd8, 0xb1, 0x69, 0x54, 0xd2, 0x13, 0xe8, 0x96, 0xac, 0x64,
+  0x9d, 0x13, 0x21, 0x3c, 0xf0, 0x5f, 0xdf, 0xc5, 0xdc, 0x58, 0x0b, 0xb0,
+  0x0a, 0xda, 0x0b, 0x17, 0x35, 0x62, 0xd9, 0xc4, 0xa1, 0x67, 0xf0, 0xb4,
+  0x75, 0xc1, 0x88, 0xbf, 0x5f, 0xe7, 0xef, 0xad, 0x68, 0x35, 0x46, 0xd6,
+  0x91, 0x49, 0x61, 0x83, 0x30, 0x17, 0xbe, 0x9a, 0xf6, 0x05, 0xf6, 0x28,
+  0xa9, 0x50, 0xc3, 0xd1, 0x6d, 0xe7, 0xa4, 0x98, 0x01, 0xe2, 0x25, 0x85,
+  0x76, 0x77, 0xc0, 0x94, 0xdd, 0xf6, 0x8d, 0x7c, 0x53, 0x54, 0xf5, 0x41,
+  0xcf, 0x27, 0xf9, 0xa8, 0x33, 0x47, 0x92, 0x78, 0x42, 0x12, 0x52, 0xf8,
+  0xdc, 0x81, 0x5c, 0xdf, 0x72, 0xc4, 0xea, 0xaa, 0xb3, 0x0e, 0xa9, 0xf3,
+  0x39, 0x6a, 0x4a, 0xa6, 0x4b, 0x70, 0x67, 0xe4, 0xd1, 0x79, 0xae, 0xa3,
+  0xb2, 0x8a, 0x90, 0x34, 0x28, 0x1a, 0xc7, 0x0f, 0x83, 0xa3, 0x55, 0x15,
+  0x07, 0x12, 0xcf, 0x07, 0xdf, 0xa0, 0xc9, 0xbf, 0xf4, 0x9c, 0xaa, 0x2d,
+  0x8f, 0xfa, 0xaf, 0x0e, 0x7a, 0x6b, 0x02, 0xbf, 0x43, 0xf0, 0xc1, 0x6a,
+  0x55, 0x5a, 0x46, 0x28, 0x4c, 0xe7, 0x3a, 0x50, 0x14, 0xae, 0x99, 0x4e,
+  0x77, 0x74, 0xbd, 0xcd, 0xcb, 0xd7, 0x95, 0x9a, 0xa4, 0x69, 0x0b, 0x4b,
+  0x84, 0xe7, 0x4d, 0x07, 0xc5, 0xd5, 0x00, 0x65, 0x04, 0xb9, 0xbe, 0x3b,
+  0xfb, 0x54, 0x82, 0xe3, 0x08, 0x84, 0x65, 0x24, 0xda, 0x4c, 0xa7, 0x5d,
+  0xf7, 0xb3, 0x46, 0x88, 0x97, 0x4e, 0x55, 0xd5, 0xc1, 0xe8, 0x96, 0x1e,
+  0xb0, 0x7a, 0x63, 0xaf, 0x3b, 0x00, 0x5f, 0x2e, 0xbe, 0xf7, 0x20, 0x5e,
+  0x78, 0x5f, 0xae, 0x70, 0x4c, 0x1a, 0xec, 0x77, 0x2e, 0x56, 0x23, 0x68,
+  0xfe, 0xa4, 0xee, 0x5f, 0x49, 0x49, 0xd9, 0x4e, 0x27, 0xaf, 0x4f, 0x01,
+  0x39, 0xd4, 0x22, 0xae, 0xe5, 0x80, 0x3a, 0x52, 0x4c, 0xd0, 0x66, 0x1a,
+  0xfd, 0x3a, 0xe0, 0xb3, 0x75, 0xde, 0xde, 0x20, 0xf5, 0x00, 0xb7, 0x83,
+  0x86, 0xc5, 0xfb, 0x45, 0xdf, 0x11, 0x71, 0xbd, 0xcb, 0x4d, 0xc2, 0x6f,
+  0x19, 0xf7, 0x0b, 0x04, 0x77, 0xae, 0x3b, 0xb5, 0x5c, 0x8d, 0xe7, 0xd3,
+  0x27, 0xc9, 0x73, 0xfa, 0x11, 0xc7, 0x31, 0x1f, 0x99, 0x57, 0x4d, 0x4a,
+  0x6d, 0x33, 0xdd, 0x69, 0xfa, 0x9d, 0x08, 0x64, 0xfc, 0xeb, 0xa3, 0x7d,
+  0x6a, 0xfa, 0x43, 0x6a, 0x55, 0x7d, 0xa6, 0xf9, 0x75, 0x5e, 0x57, 0x5d,
+  0xda, 0xac, 0xbe, 0xea, 0x3d, 0x1a, 0xbc, 0x50, 0x7b, 0xfb, 0x9f, 0x27,
+  0xe3, 0xbc, 0x4e, 0x5e, 0xbf, 0x7c, 0x22, 0x55, 0xe5, 0xab, 0xd5, 0xdc,
+  0x79, 0x86, 0xb4, 0x08, 0x0b, 0xea, 0x63, 0x6d, 0xb6, 0x8f, 0x08, 0x0d,
+  0x7c, 0x96, 0x4f, 0x38, 0xb3, 0xae, 0xdf, 0xb0, 0xa5, 0x5d, 0x99, 0xcd,
+  0x2f, 0x28, 0x78, 0xe4, 0x08, 0x8f, 0x5b, 0x52, 0x9b, 0x63, 0x87, 0x36,
+  0x4b, 0x6b, 0x40, 0xdd, 0x57, 0x56, 0x8d, 0xba, 0xa1, 0x41, 0x7d, 0xd6,
+  0xb4, 0x0c, 0x48, 0xd8, 0xac, 0x81, 0x50, 0x0e, 0x48, 0x3e, 0xba, 0x8e,
+  0x02, 0x49, 0xf5, 0x6a, 0x3b, 0xc1, 0xa3, 0xa2, 0xec, 0xeb, 0xe3, 0xa7,
+  0x78, 0xdc, 0xa5, 0xf9, 0x07, 0x4e, 0x20, 0x26, 0xe7, 0x7c, 0xb2, 0x9a,
+  0x71, 0x75, 0xc8, 0xf8, 0x8e, 0xe7, 0xa0, 0x48, 0x10, 0xa0, 0x01, 0x6b,
+  0x94, 0x2b, 0x29, 0x22, 0x78, 0xb8, 0xe4, 0xd0, 0xb1, 0x64, 0x6f, 0xf8,
+  0xa1, 0x1f, 0x56, 0xc0, 0xd6, 0x7a, 0x55, 0x5c, 0xe7, 0xba, 0x1c, 0x44,
+  0xe4, 0x3e, 0xa9, 0xdb, 0x03, 0xe2, 0xa6, 0x25, 0x66, 0x6f, 0xc6, 0xde,
+  0x8f, 0x52, 0xae, 0x81, 0x7d, 0xe2, 0xa7, 0xd7, 0x29, 0x4a, 0x1e, 0x06,
+  0xd4, 0x93, 0xf7, 0x81, 0x88, 0x04, 0x90, 0xda, 0x35, 0x13, 0x97, 0x2f,
+  0x1d, 0xd8, 0x83, 0x49, 0x02, 0x2a, 0xc8, 0x6b, 0xb0, 0xa9, 0xa1, 0x85,
+  0x06, 0x4f, 0xc4, 0x65, 0xba, 0xb9, 0x1d, 0x80, 0x58, 0xe0, 0x14, 0x4a,
+  0xf8, 0x8d, 0x2e, 0xc2, 0x80, 0x6f, 0xe0, 0x3e, 0xcb, 0x6a, 0xce, 0xa5,
+  0xe8, 0xc3, 0x6c, 0xd1, 0x68, 0x1c, 0x4f, 0x8f, 0x2c, 0x0f, 0x8b, 0x94,
+  0x1d, 0x0e, 0x83, 0x59, 0x9d, 0x98, 0xc4, 0xd2, 0x35, 0x25, 0x2e, 0xa5,
+  0xb3, 0xf3, 0xea, 0xe4, 0xf4, 0x78, 0x3b, 0x79, 0x95, 0x01, 0xe4, 0xaa,
+  0x35, 0x33, 0xe6, 0x17, 0x7f, 0x90, 0x4f, 0x6c, 0x87, 0x54, 0xd3, 0xea,
+  0xaa, 0xed, 0xed, 0x30, 0xcd, 0x20, 0x29, 0xca, 0xb6, 0x41, 0x28, 0x94,
+  0x74, 0x98, 0x02, 0xe1, 0x7a, 0x56, 0x2f, 0xc9, 0xfc, 0x79, 0x9d, 0x2b,
+  0x84, 0x50, 0x26, 0x5f, 0x18, 0xcd, 0xa3, 0xdf, 0x17, 0xa1, 0x2f, 0x9c,
+  0x47, 0xae, 0x21, 0x69, 0xe6, 0x1f, 0x95, 0x8a, 0xa2, 0x5d, 0x67, 0x41,
+  0x0a, 0x7d, 0xe7, 0xff, 0x90, 0x08, 0x5e, 0x04, 0x4e, 0xcc, 0x8b, 0xa9,
+  0x03, 0xb5, 0x96, 0xfa, 0x65, 0x3c, 0xdf, 0x90, 0xa1, 0x04, 0xb8, 0x5d,
+  0x5d, 0x59, 0x9e, 0xe7, 0x02, 0xe1, 0x8d, 0x78, 0xe7, 0xd0, 0x1f, 0x2f,
+  0x77, 0xb5, 0xd7, 0x54, 0x5c, 0x33, 0x43, 0x17, 0xd2, 0x95, 0x2d, 0xea,
+  0x0e, 0xba, 0x08, 0x61, 0xb3, 0xfa, 0xa1, 0x91, 0x9f, 0x66, 0x8b, 0xa3,
+  0x2e, 0x91, 0x75, 0x87, 0x0b, 0x0b, 0xbb, 0x49, 0xb4, 0x12, 0x38, 0xb2,
+  0x78, 0xa2, 0xf2, 0x87, 0x1d, 0xa1, 0x51, 0x1a, 0xbc, 0x14, 0xcc, 0x8c,
+  0xc4, 0xdd, 0xdd, 0x83, 0xbd, 0xb0, 0xba, 0xe1, 0x42, 0x2b, 0xf7, 0x72,
+  0xc8, 0xd2, 0xce, 0xef, 0x17, 0x9c, 0xf2, 0x37, 0x26, 0xcd, 0xbf, 0xad,
+  0x16, 0xb7, 0x44, 0x5b, 0x15, 0x53, 0xf0, 0xa0, 0xbb, 0xc2, 0xb2, 0x9e,
+  0xbe, 0xef, 0x9d, 0x77, 0xa2, 0x5d, 0x46, 0xa3, 0x51, 0x44, 0x3e, 0x0d,
+  0x20, 0x83, 0xfb, 0x0f, 0x24, 0xdc, 0x78, 0xe5, 0x32, 0x67, 0xa7, 0x28,
+  0x4d, 0x98, 0xcb, 0xf5, 0xb2, 0x60, 0xd0, 0xd3, 0xe1, 0xb8, 0x82, 0xc2,
+  0xbe, 0x48, 0x78, 0x97, 0x59, 0x89, 0x8b, 0x74, 0x4b, 0xb4, 0xf6, 0x8d,
+  0x2b, 0xf1, 0x07, 0x49, 0x5a, 0xfd, 0x0e, 0xa9, 0x40, 0xd0, 0xf2, 0x8d,
+  0x9d, 0x58, 0xcb, 0x2c, 0x4e, 0x70, 0xa9, 0x00, 0x5e, 0x8f, 0xd6, 0x6d,
+  0x29, 0x29, 0x6e, 0x56, 0x2b, 0xa9, 0x32, 0x60, 0x3f, 0x1b, 0x61, 0xd2,
+  0x1e, 0x9c, 0x62, 0x83, 0xe0, 0x92, 0xdf, 0x8c, 0xce, 0xe5, 0x64, 0x56,
+  0xf0, 0xee, 0xb0, 0xb1, 0x32, 0x58, 0xf9, 0xff, 0x21, 0xf7, 0x36, 0x5f,
+  0x46, 0x7a, 0xd2, 0x07, 0x1d, 0x41, 0x50, 0x21, 0x0e, 0xbe, 0x65, 0x29,
+  0x21, 0x07, 0x08, 0x02, 0xc1, 0x59, 0xd0, 0x86, 0xc4, 0xb6, 0xba, 0x44,
+  0x26, 0xbd, 0xb0, 0x3a, 0xb1, 0x2f, 0x07, 0x81, 0xfe, 0xee, 0xb8, 0xf5,
+  0x4b, 0x3a, 0xb6, 0x45, 0x95, 0x8b, 0xc1, 0xdd, 0x47, 0xa8, 0x05, 0xd6,
+  0xdf, 0x38, 0x08, 0xc5, 0x92, 0x77, 0x1d, 0x1e, 0x8a, 0x0b, 0xcb, 0x31,
+  0xbd, 0xb5, 0x2b, 0x39, 0x0e, 0x96, 0x29, 0x36, 0x75, 0x85, 0xa8, 0x88,
+  0x74, 0xd5, 0xb3, 0x2d, 0xe0, 0x4f, 0x44, 0x87, 0xa4, 0xdc, 0x2e, 0xb8,
+  0x7a, 0xd0, 0xd6, 0x7d, 0x56, 0x6f, 0xbb, 0xc0, 0x65, 0x0d, 0xfb, 0xea,
+  0x2a, 0x8d, 0x23, 0x27, 0xb5, 0x95, 0xaa, 0xc8, 0x36, 0x2c, 0x7d, 0x49,
+  0x80, 0x05, 0xf9, 0xba, 0x2e, 0x91, 0xcd, 0xcb, 0x7e, 0x04, 0x05, 0x6d,
+  0x5e, 0xd7, 0x5c, 0x78, 0x29, 0xdd, 0xca, 0xa5, 0x54, 0x75, 0x45, 0x43,
+  0x59, 0x5e, 0x6d, 0xe8, 0xf2, 0x0a, 0x82, 0x44, 0x55, 0x55, 0x72, 0x45,
+  0xaf, 0x94, 0x57, 0xf5, 0xac, 0xb5, 0x5e, 0x5b, 0xde, 0x1b, 0x9d, 0x86,
+  0x39, 0xc0, 0x62, 0x39, 0xf4, 0xa0, 0x93, 0x87, 0x74, 0x34, 0xa2, 0x47,
+  0xd8, 0x6a, 0x2c, 0xeb, 0x18, 0x4d, 0xc7, 0x22, 0xde, 0xe7, 0x44, 0x5e,
+  0x66, 0x61, 0xb6, 0x18, 0x5d, 0x91, 0x1d, 0x9a, 0xd9, 0x67, 0x92, 0x50,
+  0x88, 0x1d, 0x4f, 0x39, 0xad, 0xa0, 0x7d, 0xcc, 0xee, 0x3d, 0x82, 0x16,
+  0x66, 0x6c, 0x71, 0xe1, 0x88, 0x0e, 0x0e, 0xc6, 0x14, 0x16, 0x61, 0x5b,
+  0x3f, 0x59, 0x14, 0xb3, 0x36, 0x5f, 0x6d, 0x63, 0x91, 0x63, 0x5f, 0x6d,
+  0x20, 0x0f, 0x7b, 0x1b, 0x1f, 0x4c, 0x19, 0x48, 0xa7, 0x16, 0xb4, 0x33,
+  0x14, 0x3b, 0x36, 0x1b, 0x78, 0xe2, 0xa2, 0x23, 0x13, 0x57, 0x76, 0x76,
+  0x4d, 0x35, 0x59, 0xa4, 0x42, 0xde, 0xa4, 0x1f, 0x3e, 0x0c, 0xab, 0x4c,
+  0xaa, 0xa2, 0x56, 0xd5, 0x0c, 0x69, 0x97, 0xcd, 0x32, 0xb2, 0x83, 0x6f,
+  0xb5, 0x86, 0xf4, 0x55, 0x7e, 0xcd, 0xd1, 0x7b, 0xf8, 0xb7, 0x2b, 0xc9,
+  0xdc, 0xb2, 0xcb, 0xb5, 0x14, 0xaf, 0x7f, 0xd0, 0xb3, 0x4b, 0x40, 0x3c,
+  0x69, 0x0c, 0x93, 0x70, 0x4d, 0x2d, 0xe9, 0x30, 0x89, 0xb3, 0x57, 0xf8,
+  0x6d, 0x0d, 0xfc, 0x00, 0x8a, 0xa4, 0x46, 0xd2, 0x63, 0xa7, 0x5c, 0x1f,
+  0x72, 0xed, 0x63, 0x39, 0x7c, 0xbb, 0x22, 0xeb, 0xb7, 0x35, 0x26, 0xad,
+  0x3e, 0x6e, 0xc2, 0x41, 0xb6, 0x68, 0xdc, 0x0e, 0xca, 0x2c, 0x45, 0x61,
+  0xe1, 0xc0, 0x7a, 0x7b, 0xde, 0x82, 0x50, 0xda, 0x1a, 0x93, 0x94, 0xd8,
+  0x0c, 0x47, 0x10, 0xed, 0xdb, 0xd9, 0xd2, 0x2a, 0x2a, 0x8a, 0xfa, 0x9a,
+  0x97, 0xde, 0xc6, 0x5e, 0x39, 0x8d, 0xd4, 0xb3, 0xa5, 0xb0, 0xee, 0xd8,
+  0x9a, 0x05, 0xd1, 0x82, 0x4d, 0x5c, 0x79, 0xcc, 0x23, 0xb5, 0x8d, 0xb1,
+  0xe6, 0x24, 0x53, 0x92, 0xe8, 0x0a, 0x89, 0x44, 0x75, 0x6c, 0xf3, 0xcc,
+  0x08, 0x58, 0x7c, 0xd5, 0x99, 0xda, 0x91, 0x9c, 0x72, 0x0a, 0xab, 0x8b,
+  0xba, 0x10, 0x18, 0x83, 0x09, 0xa4, 0x8a, 0x18, 0xcb, 0xcd, 0xd7, 0x53,
+  0xa6, 0xb1, 0x74, 0x31, 0x91, 0x30, 0x20, 0xc6, 0x40, 0xb2, 0x24, 0x36,
+  0x98, 0xa4, 0xca, 0xea, 0x46, 0x63, 0x75, 0x69, 0x9d, 0x2b, 0xad, 0x01,
+  0x2f, 0x63, 0x4d, 0x62, 0x5c, 0x5c, 0x19, 0x72, 0xe2, 0x81, 0x52, 0x2a,
+  0x8d, 0xcd, 0x0f, 0xf6, 0xcb, 0x59, 0x26, 0x2b, 0x07, 0xbe, 0xe3, 0x64,
+  0x83, 0x4e, 0x63, 0x96, 0xab, 0xb9, 0x83, 0xa0, 0x39, 0x92, 0xc9, 0xef,
+  0x0a, 0x1d, 0x97, 0x64, 0xde, 0xa2, 0x72, 0x91, 0x76, 0x02, 0x56, 0xfd,
+  0x91, 0xd1, 0xb9, 0xc1, 0xb9, 0x7c, 0x95, 0x60, 0x0c, 0x98, 0x69, 0x5d,
+  0xf9, 0x2d, 0xef, 0xb6, 0x5c, 0x66, 0x4d, 0xbf, 0x0b, 0x07, 0x48, 0xa8,
+  0x89, 0x3e, 0xdc, 0xd3, 0xe6, 0x73, 0x4a, 0x3a, 0x71, 0xcd, 0x3c, 0xb9,
+  0x73, 0x35, 0xe6, 0x5a, 0xe2, 0xb5, 0x19, 0xc7, 0x4d, 0xa1, 0x91, 0x74,
+  0x27, 0x12, 0x17, 0xc8, 0x1d, 0x04, 0x0d, 0xc6, 0x31, 0xaa, 0x8a, 0x54,
+  0x93, 0xf8, 0xab, 0x49, 0xd0, 0xaa, 0x5d, 0x5e, 0xf1, 0x41, 0x92, 0xfc,
+  0xf4, 0x53, 0x3f, 0x61, 0x98, 0x9c, 0x9f, 0x48, 0x41, 0xf8, 0x89, 0x48,
+  0xee, 0x27, 0x29, 0xdf, 0xf2, 0xd3, 0x7b, 0xe2, 0xda, 0xeb, 0x62, 0xba,
+  0x83, 0x42, 0x1d, 0x1e, 0x96, 0x4b, 0xcb, 0x14, 0xb1, 0xcd, 0x55, 0xb2,
+  0x28, 0x87, 0x16, 0x13, 0x64, 0xf6, 0xda, 0x18, 0x47, 0x6c, 0x35, 0x5f,
+  0x88, 0xb8, 0xae, 0xac, 0x06, 0x5c, 0x00, 0xac, 0x62, 0xf3, 0x8f, 0x9b,
+  0x7e, 0x6f, 0x82, 0xca, 0x47, 0xaa, 0xd4, 0xf0, 0x83, 0x91, 0x3d, 0x45,
+  0x58, 0x41, 0x2d, 0xf5, 0x4c, 0xc5, 0x20, 0xc2, 0x87, 0x1b, 0x5a, 0xc0,
+  0x19, 0x1b, 0x2f, 0xee, 0x50, 0xaa, 0x0c, 0x94, 0x23, 0x1b, 0xcc, 0x76,
+  0x97, 0xe5, 0xcd, 0x3d, 0x84, 0xb0, 0x48, 0x00, 0x5e, 0x64, 0xcd, 0xd3,
+  0xd2, 0x9d, 0xf6, 0xd3, 0x04, 0xe4, 0xf0, 0xe2, 0x07, 0xbb, 0xb5, 0x42,
+  0xb6, 0x4b, 0xc3, 0xd9, 0x1c, 0x6c, 0x36, 0xa1, 0xf2, 0xd6, 0xd4, 0xb8,
+  0xf3, 0xa8, 0x37, 0x52, 0xe3, 0x6e, 0x7d, 0xe4, 0xbf, 0xa6, 0x89, 0x8f,
+  0x85, 0x41, 0x3b, 0x73, 0x2f, 0x0c, 0xef, 0xa6, 0x58, 0x6a, 0xff, 0xa6,
+  0xeb, 0xc4, 0xf6, 0x6d, 0x20, 0x11, 0x0b, 0x6a, 0xb0, 0xcd, 0x25, 0xaf,
+  0x93, 0xe0, 0xb2, 0x1d, 0xb0, 0xcf, 0xc3, 0x39, 0xa6, 0x50, 0x41, 0xae,
+  0x90, 0x5c, 0x90, 0x9c, 0xd4, 0x88, 0xfb, 0x0e, 0x2e, 0x6d, 0x6f, 0xf2,
+  0x38, 0x0a, 0x98, 0xf4, 0x12, 0xf6, 0x78, 0x83, 0xc5, 0x26, 0xa3, 0xa2,
+  0x2f, 0xf5, 0x1d, 0x9c, 0xee, 0x91, 0xb8, 0xa4, 0x9a, 0x38, 0x40, 0xad,
+  0x33, 0xaf, 0x84, 0xc7, 0xf3, 0x22, 0xe9, 0xad, 0xbd, 0x06, 0x7b, 0x9d,
+  0x25, 0xd0, 0x4c, 0xfe, 0xe7, 0x9c, 0xc7, 0x5b, 0x05, 0x82, 0x53, 0x09,
+  0x79, 0xcb, 0xae, 0xf3, 0xbf, 0xdb, 0x15, 0xbe, 0xad, 0x16, 0x18, 0x89,
+  0xca, 0x5c, 0x03, 0x20, 0x16, 0xde, 0x90, 0x0e, 0xba, 0x21, 0x17, 0xcc,
+  0xbb, 0xab, 0x62, 0xb5, 0x98, 0x9a, 0x3e, 0x6f, 0x2f, 0x3c, 0xc0, 0x78,
+  0x39, 0x85, 0x91, 0x7b, 0x54, 0x34, 0x3a, 0xcb, 0xb8, 0x70, 0x75, 0x8e,
+  0x60, 0xd6, 0xd2, 0xec, 0x08, 0x96, 0x16, 0x19, 0xc4, 0x28, 0x5a, 0x98,
+  0xbd, 0x6d, 0x97, 0x00, 0x89, 0x32, 0xbd, 0x08, 0x2a, 0xc9, 0xd5, 0xf4,
+  0xda, 0xbb, 0x29, 0x04, 0x5c, 0xa1, 0x77, 0x90, 0x9c, 0xd4, 0xea, 0x43,
+  0x09, 0x66, 0x19, 0x5f, 0x91, 0x80, 0xae, 0xf8, 0xe6, 0xec, 0xf5, 0xb1,
+  0x8b, 0xf7, 0x14, 0x2d, 0x9f, 0x3f, 0xe9, 0x44, 0xd7, 0x19, 0xc2, 0x69,
+  0x6f, 0x19, 0xb3, 0xfd, 0xb8, 0xaa, 0x87, 0x2c, 0x11, 0xe9, 0xf2, 0xcb,
+  0xbb, 0x55, 0x3e, 0xdd, 0x42, 0x5a, 0xf3, 0xdb, 0x37, 0x27, 0x3f, 0x0c,
+  0x60, 0xc5, 0x10, 0xe8, 0xa9, 0xca, 0xf2, 0x7a, 0x2d, 0x25, 0x58, 0x8c,
+  0x55, 0xf3, 0x8e, 0xf4, 0x78, 0xbd, 0xd5, 0x42, 0x74, 0x28, 0xa4, 0x28,
+  0xe4, 0x0b, 0xf1, 0x22, 0x48, 0x83, 0xdb, 0x7c, 0xfe, 0x89, 0x87, 0x02,
+  0xd9, 0x02, 0xdb, 0xde, 0x15, 0xbb, 0xda, 0x5c, 0x89, 0xe4, 0xf0, 0xfc,
+  0xfc, 0xe5, 0xe1, 0xe5, 0xa1, 0x9b, 0x1b, 0xa0, 0x24, 0xc0, 0x54, 0xa0,
+  0x9b, 0xb2, 0xdc, 0xa6, 0xe5, 0xda, 0x36, 0xff, 0xc4, 0x89, 0x0d, 0xed,
+  0xbb, 0xfe, 0xfc, 0xe2, 0x8c, 0x6d, 0x0c, 0x7f, 0xfa, 0xe9, 0xd0, 0x17,
+  0x7c, 0x45, 0x3d, 0xb6, 0xb8, 0xec, 0xe6, 0xfe, 0x36, 0x8f, 0xef, 0xce,
+  0x8d, 0x4f, 0xfd, 0xe0, 0x92, 0x3f, 0x9c, 0xbc, 0xe3, 0x0d, 0x2d, 0x27,
+  0x4e, 0x70, 0xb2, 0xd5, 0xc0, 0x02, 0xf4, 0x3b, 0x22, 0xe2, 0x82, 0x89,
+  0x14, 0x9e, 0x89, 0x19, 0xb2, 0x86, 0x2d, 0xd6, 0x8c, 0xe4, 0x7d, 0x12,
+  0x5a, 0x6b, 0x70, 0x0f, 0x8e, 0x1d, 0x62, 0xfa, 0x9a, 0xf2, 0x4a, 0xb5,
+  0xf1, 0xa3, 0xda, 0xdb, 0xe3, 0x11, 0x14, 0x85, 0x01, 0x48, 0xbc, 0x63,
+  0x21, 0x55, 0x78, 0x86, 0x3a, 0x5a, 0x5f, 0x87, 0x27, 0x3a, 0x3b, 0x62,
+  0xc0, 0x27, 0x3a, 0x37, 0x7a, 0x8c, 0x16, 0xe4, 0x8f, 0xc4, 0x73, 0x06,
+  0x96, 0x51, 0x29, 0x13, 0xa7, 0x0f, 0xa2, 0x87, 0x6a, 0xab, 0x36, 0x62,
+  0x7c, 0xbe, 0x9b, 0x4d, 0x84, 0xfc, 0xa1, 0x2d, 0xcb, 0x6b, 0x92, 0xbd,
+  0x3e, 0x85, 0xb2, 0x85, 0x48, 0xd1, 0x8b, 0xcd, 0x8d, 0x66, 0xbc, 0xa6,
+  0x47, 0xab, 0x15, 0xdb, 0x6b, 0xf8, 0xaf, 0x9d, 0xbd, 0xe1, 0x6e, 0x2f,
+  0x1e, 0x3d, 0xc2, 0xe5, 0x60, 0x14, 0x33, 0x4c, 0x4d, 0x81, 0x49, 0x2d,
+  0x3e, 0x3e, 0x40, 0x61, 0x60, 0x24, 0x91, 0xc2, 0xb5, 0xd7, 0x35, 0x96,
+  0xc1, 0x59, 0x64, 0xbc, 0x14, 0x23, 0xba, 0xe7, 0x88, 0x8b, 0x02, 0xa9,
+  0xa5, 0x29, 0x6b, 0x43, 0x30, 0xc4, 0xf4, 0xba, 0x17, 0x78, 0x31, 0x15,
+  0x87, 0x60, 0x6b, 0x9d, 0x1f, 0x44, 0xee, 0x5d, 0x9f, 0x74, 0xe5, 0x68,
+  0xc0, 0x7d, 0xbc, 0x96, 0xdb, 0x35, 0x2c, 0xef, 0xb7, 0x19, 0x49, 0x81,
+  0x33, 0x64, 0x18, 0xb1, 0x1d, 0xed, 0xb9, 0xd4, 0xd7, 0x8c, 0x21, 0xb2,
+  0xc3, 0x70, 0x0b, 0x8b, 0x18, 0xc3, 0x1b, 0x69, 0xa8, 0xc5, 0x85, 0x18,
+  0x2a, 0x6c, 0x34, 0x47, 0x24, 0x64, 0x3e, 0x8d, 0x12, 0x99, 0x35, 0x9a,
+  0x12, 0xee, 0x1f, 0x66, 0x58, 0x6e, 0x14, 0xac, 0x7d, 0x8f, 0x55, 0xce,
+  0x75, 0x5d, 0x98, 0x74, 0x48, 0x67, 0x34, 0x27, 0xd5, 0x7c, 0x15, 0xc9,
+  0x0b, 0xed, 0xd7, 0x87, 0xcc, 0x62, 0xf3, 0x2a, 0xcc, 0x9a, 0x81, 0x49,
+  0x87, 0x9f, 0x28, 0x9c, 0xc5, 0x0f, 0xf5, 0xeb, 0x70, 0xa8, 0x22, 0x23,
+  0xe6, 0x95, 0xa0, 0x77, 0xc9, 0x25, 0x7e, 0x79, 0x74, 0xfe, 0xee, 0xdb,
+  0xe3, 0xe3, 0xf3, 0x93, 0x97, 0xa7, 0xc7, 0x1a, 0x63, 0xe9, 0x3e, 0x7a,
+  0x73, 0xf9, 0xdd, 0xa9, 0x01, 0x7a, 0xd9, 0x36, 0x45, 0x66, 0x30, 0x8e,
+  0xca, 0xe1, 0xe6, 0x4e, 0xf3, 0xc5, 0xea, 0x03, 0xc7, 0x7e, 0x4e, 0x98,
+  0x96, 0x0f, 0x4f, 0x7e, 0xe8, 0x27, 0xdf, 0x9c, 0x0f, 0xde, 0xfe, 0x10,
+  0x41, 0x25, 0x04, 0x61, 0xb0, 0xc4, 0x84, 0xda, 0x82, 0xa5, 0x8b, 0x8a,
+  0x45, 0xd9, 0x05, 0x3f, 0x77, 0xd3, 0x7f, 0x3b, 0x2a, 0x11, 0xfe, 0xd6,
+  0xa6, 0xc0, 0xa8, 0xb9, 0xd5, 0x22, 0xc0, 0x78, 0x0d, 0xa4, 0x78, 0xbd,
+  0x7b, 0x41, 0x9e, 0x4f, 0x77, 0xb5, 0x7a, 0x6b, 0x8b, 0x00, 0xef, 0x93,
+  0xe7, 0xf4, 0xa3, 0x0b, 0xbb, 0x66, 0x67, 0x34, 0xfa, 0x86, 0x0b, 0xc6,
+  0x7b, 0xac, 0x56, 0x67, 0x6b, 0x19, 0x5a, 0x0c, 0x9c, 0x7a, 0x94, 0x03,
+  0xab, 0x4d, 0xc9, 0xe0, 0x7a, 0x91, 0xad, 0xdd, 0x5a, 0xb0, 0x3b, 0xdc,
+  0xf4, 0xbf, 0x6e, 0xc9, 0xf2, 0x37, 0xcc, 0xe4, 0xa3, 0x4e, 0x3f, 0x8e,
+  0xb1, 0x16, 0xcd, 0x91, 0x9f, 0x1d, 0xb6, 0x6c, 0x02, 0x68, 0x05, 0x13,
+  0x94, 0x65, 0xeb, 0xa8, 0x78, 0x2a, 0xa8, 0x3b, 0x21, 0xba, 0x6d, 0x4e,
+  0xa7, 0xe1, 0xe5, 0xf1, 0x45, 0x5f, 0x70, 0xd7, 0x42, 0xcc, 0x35, 0x8f,
+  0x32, 0xa8, 0xda, 0x42, 0x5c, 0xed, 0x21, 0xd8, 0xd4, 0x7f, 0x1e, 0xdc,
+  0xda, 0x6d, 0x39, 0x4e, 0x9e, 0xcf, 0xe8, 0xc5, 0x59, 0x77, 0x92, 0xa3,
+  0x16, 0xc3, 0xf2, 0x15, 0xbd, 0x5a, 0xc8, 0x1a, 0x2a, 0x0c, 0x8a, 0x69,
+  0x04, 0xed, 0xac, 0xd5, 0xf8, 0x6a, 0x58, 0x9b, 0xf8, 0x85, 0x28, 0x23,
+  0x6c, 0x13, 0x51, 0x98, 0x9b, 0xfd, 0x64, 0x93, 0xd1, 0x43, 0xf8, 0x5f,
+  0x30, 0x54, 0x2d, 0x84, 0xb6, 0xd9, 0x8f, 0xb5, 0xda, 0x4d, 0x5d, 0xf6,
+  0x4d, 0x5a, 0xce, 0x91, 0xd6, 0x88, 0x85, 0xff, 0x1d, 0x31, 0xf5, 0x8c,
+  0xf4, 0x88, 0xb1, 0x18, 0x0c, 0x31, 0xcb, 0xf1, 0x3e, 0xfb, 0xac, 0x8a,
+  0xe0, 0xb3, 0x5d, 0x73, 0xed, 0xc0, 0x9f, 0x6e, 0x2b, 0x57, 0x27, 0xe2,
+  0x7f, 0xea, 0x30, 0x83, 0x03, 0x58, 0xf7, 0xc4, 0x8a, 0xb6, 0x3d, 0x16,
+  0x1b, 0xc7, 0xd7, 0xa3, 0xd1, 0xe1, 0xf9, 0x49, 0x7b, 0xa9, 0xe9, 0xd3,
+  0xc1, 0x1b, 0x2b, 0x9b, 0xb5, 0x6d, 0xb4, 0xe2, 0x13, 0x81, 0x78, 0xf8,
+  0xc8, 0x2e, 0xe3, 0xeb, 0x9f, 0x63, 0xa2, 0x39, 0xc4, 0x70, 0xf0, 0x1d,
+  0x6b, 0x5d, 0x6c, 0x2d, 0xee, 0x28, 0xc7, 0xa4, 0xe0, 0x86, 0x1a, 0xea,
+  0x52, 0x6a, 0x6e, 0x9f, 0xa1, 0xc7, 0xe7, 0xf5, 0xef, 0x48, 0x53, 0x33,
+  0x80, 0xad, 0xe7, 0x55, 0x3d, 0x60, 0x47, 0xd1, 0xfa, 0x14, 0x64, 0x0d,
+  0xac, 0x37, 0x57, 0x55, 0x00, 0x76, 0x2a, 0x3c, 0x43, 0x2a, 0xca, 0x20,
+  0xfc, 0x08, 0x70, 0x18, 0xcc, 0x89, 0x06, 0x5d, 0x68, 0xf6, 0x74, 0x10,
+  0xb3, 0xbb, 0x86, 0x3f, 0x35, 0x44, 0x87, 0x31, 0x07, 0x6a, 0xae, 0x2a,
+  0x3a, 0xc4, 0x66, 0x46, 0x5f, 0xad, 0x62, 0x1d, 0x6c, 0x9e, 0x4e, 0x6e,
+  0x48, 0x60, 0x1b, 0x20, 0x8a, 0xb1, 0x89, 0x99, 0xc1, 0xda, 0x7b, 0x6b,
+  0xa0, 0x9c, 0x6b, 0x36, 0xc9, 0x1e, 0x28, 0xb1, 0x16, 0xe0, 0x7b, 0xf1,
+  0x10, 0x5d, 0x28, 0x96, 0x00, 0xfa, 0xb9, 0x1c, 0x52, 0x68, 0x86, 0x45,
+  0xe9, 0x70, 0x01, 0x9d, 0x23, 0xaf, 0xc3, 0x55, 0xa5, 0xa8, 0x7f, 0x01,
+  0xd7, 0x57, 0x38, 0x98, 0x34, 0x79, 0x73, 0x3a, 0xf2, 0x29, 0x14, 0xa2,
+  0x30, 0x4b, 0xd2, 0xb5, 0x15, 0xe6, 0xea, 0x74, 0x35, 0x84, 0xe1, 0x44,
+  0xa7, 0x27, 0x1d, 0xd5, 0x2a, 0x59, 0x09, 0x3f, 0xa0, 0x43, 0x06, 0x41,
+  0x3c, 0x4c, 0xb4, 0x70, 0x68, 0xaa, 0xbc, 0x07, 0xe2, 0x3f, 0x16, 0x09,
+  0x3c, 0x2f, 0xc3, 0x24, 0x9a, 0x76, 0x73, 0x34, 0xca, 0xbf, 0x88, 0xed,
+  0x52, 0x03, 0x35, 0xd4, 0xd1, 0xcb, 0x58, 0x37, 0x83, 0x20, 0xad, 0x55,
+  0x38, 0x05, 0x40, 0x57, 0xf2, 0x09, 0x6b, 0xd4, 0xb7, 0x71, 0xd4, 0xc4,
+  0xd6, 0xf9, 0xd9, 0xf9, 0x23, 0x25, 0x27, 0xcd, 0x40, 0x6e, 0x78, 0x15,
+  0x27, 0x09, 0x8b, 0x45, 0x8a, 0x72, 0xc4, 0xcf, 0xf6, 0xcd, 0x32, 0x2d,
+  0xd4, 0xd5, 0x55, 0xe0, 0x4a, 0x51, 0xf9, 0x4f, 0xa2, 0xc5, 0x54, 0xdf,
+  0x80, 0x4f, 0x83, 0xe1, 0x25, 0xe3, 0x94, 0x48, 0x77, 0x4e, 0x3b, 0x90,
+  0x24, 0xcc, 0xab, 0x6f, 0x64, 0xa8, 0x71, 0xdd, 0x0d, 0x22, 0xb4, 0x83,
+  0x1a, 0x0c, 0x9b, 0xc3, 0x4f, 0xa2, 0x63, 0xcd, 0xc5, 0xa7, 0xf3, 0xa9,
+  0x24, 0x25, 0x57, 0xcd, 0xac, 0x64, 0x89, 0xb1, 0x47, 0x85, 0x08, 0x76,
+  0xde, 0x02, 0xc0, 0x6b, 0xdd, 0x4e, 0x5a, 0x5e, 0x39, 0xc7, 0x40, 0xba,
+  0x00, 0xd1, 0xc1, 0x0f, 0xe2, 0xa9, 0x92, 0x20, 0x4d, 0x97, 0xf8, 0xde,
+  0xff, 0x08, 0xf4, 0x79, 0x50, 0xb8, 0x4a, 0x12, 0x79, 0x48, 0xc9, 0x25,
+  0xd1, 0xcd, 0xad, 0x9c, 0xae, 0x94, 0xfa, 0x7e, 0x74, 0xde, 0xec, 0xf8,
+  0xa1, 0x5f, 0xba, 0x9c, 0xe3, 0xd8, 0x2e, 0x76, 0x3e, 0xad, 0x16, 0x39,
+  0x0d, 0x85, 0xe5, 0x59, 0xbe, 0x03, 0xae, 0x10, 0xa4, 0xa6, 0xbe, 0x21,
+  0x44, 0x27, 0xe4, 0xf5, 0x66, 0x85, 0x18, 0x1d, 0x5d, 0x94, 0x8e, 0xa3,
+  0xac, 0xf5, 0x82, 0x2d, 0x16, 0xb3, 0x99, 0x83, 0xb3, 0xd7, 0x48, 0x34,
+  0x6f, 0xd4, 0x87, 0xe8, 0x8c, 0x01, 0x40, 0x05, 0x81, 0x6d, 0x33, 0x83,
+  0xba, 0x72, 0xf2, 0x56, 0x8c, 0x43, 0xe3, 0xd7, 0xb5, 0xaf, 0x6c, 0x2a,
+  0x01, 0x8b, 0xc0, 0x73, 0x6a, 0x8f, 0x0b, 0xb1, 0xf5, 0xc0, 0x91, 0x36,
+  0x0c, 0xa1, 0x3a, 0x71, 0xa5, 0x29, 0xb6, 0x58, 0xec, 0x9e, 0x84, 0x21,
+  0x5f, 0xed, 0xf2, 0x10, 0x1d, 0x18, 0x0c, 0x69, 0xf2, 0xe8, 0x87, 0x1f,
+  0x9a, 0xb0, 0x59, 0xdb, 0xeb, 0x62, 0x84, 0x1d, 0xaa, 0xe7, 0xb4, 0x93,
+  0x27, 0x18, 0x01, 0x28, 0x71, 0xb1, 0x37, 0x16, 0xea, 0x32, 0x8c, 0xd6,
+  0xba, 0xd3, 0xd7, 0x19, 0xb6, 0x41, 0xc8, 0x26, 0x8c, 0x07, 0x89, 0x6f,
+  0x69, 0x1f, 0x58, 0xd1, 0x77, 0x81, 0x80, 0xe2, 0x7f, 0x46, 0x98, 0x8a,
+  0x2d, 0x16, 0xaf, 0x55, 0xe5, 0xae, 0x13, 0x92, 0x0e, 0xee, 0x16, 0xc3,
+  0xae, 0x8a, 0x1e, 0x2d, 0xd9, 0xc3, 0xe5, 0x5d, 0x6a, 0x28, 0x90, 0x94,
+  0x36, 0x41, 0x2d, 0x12, 0x36, 0xc4, 0x05, 0x95, 0x54, 0x35, 0x4e, 0x37,
+  0x8a, 0x24, 0x10, 0xab, 0x3f, 0xc7, 0x0c, 0x60, 0x82, 0x1c, 0x39, 0x28,
+  0x1c, 0x28, 0xa9, 0xe1, 0x38, 0x33, 0xb7, 0x60, 0xb8, 0x57, 0x78, 0xbc,
+  0xcb, 0x1a, 0x71, 0x87, 0xb2, 0x1b, 0x02, 0x60, 0xa5, 0x86, 0x4a, 0xc4,
+  0x0f, 0x68, 0x8a, 0x83, 0x10, 0xff, 0x9f, 0xe3, 0x42, 0x9a, 0x4a, 0x7a,
+  0x51, 0xf4, 0x1e, 0xfb, 0xfa, 0xeb, 0x72, 0x85, 0x15, 0x62, 0x05, 0x85,
+  0xf3, 0xa3, 0x0a, 0x8f, 0x6a, 0xc3, 0xb2, 0xa6, 0xc5, 0x49, 0x00, 0x32,
+  0x5e, 0x62, 0x74, 0xe7, 0x80, 0xef, 0x88, 0x3d, 0xc1, 0x36, 0x33, 0x4b,
+  0xbf, 0xe2, 0x74, 0xab, 0x86, 0xa7, 0x71, 0x30, 0x98, 0xa7, 0x1f, 0x06,
+  0x78, 0xac, 0x8a, 0xe0, 0x8b, 0x43, 0xeb, 0xa2, 0x02, 0xc7, 0x15, 0xa2,
+  0x12, 0x04, 0x6b, 0x66, 0x7a, 0xa4, 0x0b, 0x03, 0xd7, 0x38, 0x3e, 0x26,
+  0x21, 0x3a, 0x75, 0x5f, 0x1f, 0x5f, 0xb6, 0x8f, 0x16, 0x72, 0xf1, 0x55,
+  0x29, 0x47, 0xec, 0x35, 0xfd, 0x7d, 0xfe, 0xf6, 0x72, 0xdb, 0x1b, 0x5e,
+  0xa6, 0x45, 0xcb, 0x3a, 0x68, 0x8d, 0x77, 0x40, 0xf8, 0x49, 0xbc, 0xb3,
+  0x72, 0x58, 0xc0, 0xf4, 0xb9, 0x33, 0xc1, 0xc5, 0x76, 0x1e, 0xed, 0xee,
+  0xf5, 0xe9, 0xc7, 0x3e, 0xec, 0x5b, 0x8f, 0x76, 0x1f, 0x39, 0x47, 0x8c,
+  0x3d, 0x15, 0x99, 0xed, 0xa7, 0xf2, 0xa2, 0x37, 0xfd, 0x3f, 0xfa, 0xf0,
+  0x01, 0x1f, 0xf7, 0x1b, 0x31, 0x92, 0x65, 0x36, 0x30, 0x08, 0x8f, 0x07,
+  0x7c, 0x14, 0x36, 0x70, 0xbf, 0xe2, 0x30, 0x54, 0xad, 0x16, 0x12, 0x60,
+  0xc3, 0x46, 0x06, 0xc4, 0x54, 0x87, 0xd2, 0xb9, 0x15, 0x0b, 0xea, 0x04,
+  0xca, 0x3e, 0x94, 0xf2, 0x35, 0xad, 0x5c, 0x64, 0xa6, 0x56, 0x1e, 0x2f,
+  0x27, 0x1a, 0xb0, 0x2c, 0xaa, 0x99, 0xaa, 0xde, 0xf5, 0x27, 0x7a, 0x49,
+  0x07, 0x20, 0x3d, 0xcf, 0x05, 0x88, 0x64, 0x56, 0xa3, 0x68, 0x20, 0x43,
+  0x3d, 0x4a, 0xd4, 0x71, 0x2b, 0x0b, 0xa2, 0xbe, 0x46, 0x8d, 0x7c, 0xbf,
+  0x52, 0x18, 0xb2, 0x4e, 0x34, 0x0d, 0x41, 0x0c, 0x26, 0xf1, 0xf8, 0x7d,
+  0x3a, 0x13, 0xf4, 0x17, 0xb9, 0xa3, 0x44, 0x22, 0x95, 0x31, 0x49, 0x1c,
+  0xa8, 0x8f, 0x0b, 0xe2, 0xf7, 0xfe, 0xf0, 0xd1, 0x94, 0xeb, 0x8f, 0x89,
+  0xa7, 0x3e, 0xba, 0xa5, 0x0b, 0xb8, 0xa6, 0x21, 0xb8, 0x3e, 0x98, 0x0a,
+  0x88, 0x83, 0x35, 0x80, 0xea, 0xfa, 0x9c, 0x2e, 0xe7, 0x6c, 0xba, 0xce,
+  0x91, 0x8c, 0x40, 0xc2, 0xf4, 0x43, 0x3e, 0x5f, 0xcd, 0x7d, 0x12, 0x17,
+  0xde, 0xf3, 0xf5, 0x39, 0x3d, 0x60, 0x1f, 0x34, 0xa6, 0x2e, 0x50, 0x4b,
+  0x8d, 0x1b, 0xd3, 0xf9, 0xa9, 0xc0, 0xc0, 0x2d, 0x20, 0x6a, 0x26, 0x95,
+  0x83, 0xce, 0x1c, 0x33, 0x5f, 0x66, 0xb6, 0x8f, 0x9b, 0x53, 0x91, 0x0c,
+  0x79, 0x55, 0xdb, 0x3c, 0xc4, 0x46, 0x82, 0x72, 0x94, 0x12, 0x73, 0x22,
+  0x41, 0xe7, 0xc4, 0x17, 0x39, 0xd4, 0x80, 0x9a, 0xb8, 0xcb, 0xa7, 0xf5,
+  0x4d, 0x27, 0x44, 0xb2, 0x2c, 0x22, 0xa6, 0x9d, 0x08, 0xc8, 0x05, 0xc7,
+  0x01, 0x63, 0xa5, 0x10, 0x16, 0xb8, 0x23, 0x16, 0x06, 0x97, 0xce, 0x4d,
+  0xf2, 0xcb, 0xea, 0x8a, 0x21, 0xf5, 0x62, 0x51, 0xc8, 0x12, 0x26, 0x86,
+  0x8e, 0x6e, 0x61, 0xf2, 0xd9, 0xbc, 0x95, 0x4c, 0xa5, 0x6f, 0x55, 0xef,
+  0x12, 0xec, 0x21, 0xdc, 0x3c, 0x12, 0xc5, 0x4f, 0xa7, 0xef, 0x36, 0x9f,
+  0x45, 0x9a, 0x37, 0xba, 0x27, 0x2d, 0x71, 0x8e, 0xd7, 0x5f, 0x6f, 0x6a,
+  0x9c, 0x03, 0x23, 0x63, 0x65, 0x1a, 0xb3, 0xd8, 0x57, 0x88, 0xbc, 0xcd,
+  0x6b, 0xe9, 0xe2, 0xeb, 0x4d, 0x87, 0x92, 0x17, 0x71, 0x6e, 0x1f, 0xe8,
+  0x68, 0xa6, 0xd8, 0xea, 0x20, 0xd9, 0xdf, 0xdd, 0xfd, 0x96, 0xf8, 0xc5,
+  0x1c, 0xcb, 0xbc, 0xf7, 0x75, 0x37, 0x88, 0xb4, 0x2c, 0x91, 0x6c, 0xb4,
+  0x41, 0x54, 0xa4, 0xef, 0x61, 0x33, 0xd5, 0x85, 0x93, 0x82, 0x92, 0xd3,
+  0x64, 0xba, 0x2a, 0xed, 0xdc, 0xcb, 0xe2, 0xaf, 0xd9, 0x2a, 0x98, 0xd3,
+  0xda, 0xc9, 0xf6, 0x73, 0xc4, 0xa7, 0xf3, 0xee, 0xdd, 0xd0, 0x6f, 0x99,
+  0xcf, 0x55, 0x94, 0x4e, 0x3a, 0x52, 0xd9, 0xe9, 0x12, 0x65, 0x18, 0xb3,
+  0x55, 0xc9, 0x35, 0xf3, 0x10, 0x46, 0x08, 0x14, 0x20, 0x98, 0xf8, 0xf2,
+  0x5a, 0x9c, 0x13, 0x8b, 0x42, 0x70, 0x25, 0x20, 0x50, 0x79, 0xac, 0x93,
+  0x12, 0xa5, 0xb2, 0xe3, 0x03, 0x08, 0xf5, 0x1a, 0x17, 0x96, 0xc5, 0xda,
+  0x0e, 0xfe, 0xca, 0xd7, 0x3b, 0x86, 0x20, 0x27, 0xc5, 0xf9, 0xce, 0x24,
+  0xcb, 0xc7, 0x0b, 0x1f, 0xed, 0xc9, 0xb2, 0x28, 0xa2, 0xb5, 0x2c, 0x58,
+  0x85, 0x82, 0x4d, 0x0e, 0x73, 0x64, 0xcc, 0xd6, 0xa5, 0x56, 0x84, 0xe5,
+  0x81, 0x48, 0xbb, 0x30, 0x1f, 0xce, 0xf8, 0x81, 0x19, 0xab, 0x87, 0x45,
+  0x14, 0x37, 0x3f, 0x5b, 0xc2, 0x2e, 0xe9, 0x38, 0x6b, 0x30, 0x24, 0xce,
+  0xf3, 0x9c, 0x00, 0x36, 0x9a, 0x33, 0x08, 0x7e, 0x47, 0x53, 0x0a, 0x00,
+  0xce, 0x04, 0x4f, 0xe1, 0x39, 0x91, 0xef, 0x17, 0x3f, 0x72, 0x15, 0xb9,
+  0x9f, 0x3b, 0xea, 0xe5, 0xa5, 0x9a, 0x32, 0xc3, 0x67, 0xc9, 0xb2, 0x55,
+  0x4a, 0x5f, 0xcd, 0x01, 0xed, 0x48, 0x5e, 0xa7, 0x55, 0xad, 0xf3, 0x75,
+  0x30, 0xba, 0xd0, 0x94, 0x9c, 0x45, 0x78, 0xab, 0xda, 0x1e, 0x86, 0x5e,
+  0x53, 0x69, 0xc4, 0xb5, 0x02, 0x80, 0xb4, 0x85, 0x30, 0x18, 0xf5, 0x8f,
+  0xb7, 0xa9, 0x66, 0x92, 0x32, 0xa3, 0x77, 0xa1, 0x3a, 0x68, 0xc5, 0xe6,
+  0x3b, 0x5e, 0x55, 0xf7, 0x8c, 0x0f, 0x23, 0x26, 0xf0, 0xaa, 0x70, 0x08,
+  0x79, 0x58, 0x40, 0x0c, 0x3f, 0x8e, 0x6e, 0x62, 0x08, 0x13, 0x09, 0x65,
+  0xad, 0x0b, 0x52, 0xf7, 0xd2, 0xb2, 0x24, 0xb9, 0x43, 0xb7, 0x5a, 0x93,
+  0x95, 0x68, 0xf0, 0x2c, 0xc7, 0xc3, 0xba, 0xe1, 0x6c, 0xdb, 0xd4, 0xf6,
+  0x6a, 0xd9, 0x11, 0x8e, 0xc4, 0xe9, 0x8b, 0x11, 0x66, 0x54, 0x23, 0x37,
+  0xd8, 0x64, 0x69, 0x93, 0x9d, 0x1e, 0x12, 0xe7, 0x93, 0x53, 0x84, 0x14,
+  0xb3, 0xfc, 0x1f, 0xbc, 0xa9, 0x59, 0xd5, 0x82, 0x02, 0x0f, 0x41, 0xc9,
+  0x4c, 0xe7, 0xdd, 0xe9, 0xa8, 0xc9, 0x9f, 0x3d, 0x0a, 0x9a, 0x54, 0xcf,
+  0x80, 0x8c, 0x18, 0xe8, 0x05, 0x15, 0xbb, 0xe3, 0x59, 0xed, 0xf1, 0xf2,
+  0x65, 0x31, 0xec, 0xe2, 0xff, 0xfc, 0x4c, 0x51, 0xba, 0x1a, 0xd9, 0x39,
+  0xa7, 0x37, 0x4f, 0x57, 0x13, 0x98, 0x0b, 0x38, 0xf0, 0x8a, 0x4b, 0x5e,
+  0x8f, 0x05, 0x94, 0xc9, 0x32, 0x84, 0xb9, 0x69, 0x27, 0xdc, 0xc5, 0xd9,
+  0x33, 0x22, 0xbe, 0xe2, 0x29, 0x87, 0xa2, 0x89, 0x5b, 0x03, 0xa8, 0xba,
+  0x10, 0x20, 0x70, 0x23, 0xc4, 0xc2, 0xf5, 0xe2, 0x6a, 0x0d, 0x0a, 0xb1,
+  0xf8, 0xd0, 0x58, 0xb6, 0xfd, 0x50, 0xbb, 0xc8, 0x81, 0x54, 0x0a, 0xa4,
+  0x43, 0xec, 0xfa, 0x8a, 0xa3, 0x3d, 0x5b, 0x0d, 0x86, 0xd8, 0xba, 0x28,
+  0x13, 0xcf, 0xd2, 0xe6, 0x83, 0x6e, 0x90, 0xd7, 0x7a, 0x9d, 0x0a, 0xd3,
+  0x42, 0xe2, 0x9e, 0x3e, 0x29, 0x0b, 0x8b, 0xec, 0x93, 0x99, 0xc1, 0x06,
+  0xdc, 0xdd, 0x14, 0xb3, 0x50, 0x8e, 0x88, 0xfd, 0xeb, 0xc4, 0x73, 0x82,
+  0x64, 0x39, 0xbd, 0x5e, 0x59, 0x02, 0x65, 0x3c, 0x18, 0x1e, 0xa8, 0xe1,
+  0xe3, 0x8f, 0x39, 0x11, 0x20, 0xf9, 0x5b, 0x31, 0x56, 0x65, 0x25, 0x61,
+  0x91, 0xbb, 0x0b, 0xa9, 0x4a, 0xe2, 0xd8, 0x6e, 0xb8, 0x06, 0x21, 0xf1,
+  0x77, 0x09, 0x4d, 0xe0, 0xf1, 0x2c, 0xb2, 0x9a, 0xf9, 0x0d, 0x02, 0x92,
+  0x61, 0xb8, 0x48, 0xa4, 0x3a, 0x31, 0x02, 0x4c, 0x39, 0x13, 0x7a, 0x11,
+  0xa5, 0x4d, 0x7d, 0x36, 0x7c, 0xb4, 0x3f, 0xdc, 0x6d, 0x6a, 0x6d, 0xe9,
+  0x84, 0x55, 0x87, 0x2a, 0xb1, 0x24, 0x0b, 0xe4, 0x0e, 0xf9, 0xb2, 0xe8,
+  0x16, 0xd7, 0xc5, 0xcb, 0x33, 0x88, 0xbd, 0x7d, 0x2a, 0x3f, 0x67, 0x0c,
+  0x1c, 0x56, 0xc1, 0x39, 0x4a, 0xed, 0xad, 0xca, 0x74, 0x72, 0x6f, 0xa0,
+  0xa4, 0x3e, 0xd0, 0x88, 0x9b, 0xe0, 0x57, 0x68, 0x60, 0x78, 0x3a, 0xc2,
+  0xda, 0x5e, 0xb8, 0x41, 0x30, 0xd7, 0xce, 0x91, 0x0b, 0xde, 0x4e, 0x7e,
+  0x31, 0x58, 0xf4, 0x81, 0xb5, 0xb6, 0x46, 0x89, 0xf8, 0x0d, 0x59, 0x2e,
+  0x5b, 0x0b, 0x06, 0x4c, 0x67, 0xc9, 0xf3, 0x35, 0xf5, 0x49, 0xb7, 0x46,
+  0xaf, 0xd9, 0xe0, 0x38, 0x72, 0x11, 0x23, 0x8a, 0x09, 0x16, 0x54, 0x82,
+  0xcd, 0xbd, 0xea, 0xe9, 0xc0, 0x83, 0x5c, 0x88, 0x48, 0x97, 0x91, 0xa2,
+  0x7d, 0x52, 0x1c, 0x64, 0xcb, 0x96, 0x58, 0x2b, 0xea, 0xfb, 0x6d, 0x0d,
+  0xce, 0x17, 0xf8, 0xe6, 0x1a, 0xb2, 0x3d, 0x4c, 0x15, 0x6b, 0xaa, 0xe4,
+  0x49, 0xba, 0x72, 0x99, 0x31, 0x42, 0x87, 0xf0, 0x10, 0xf5, 0xa6, 0x5a,
+  0xa1, 0xcc, 0xf6, 0xac, 0x42, 0x53, 0xc6, 0x93, 0x66, 0x0d, 0x57, 0xac,
+  0x09, 0xe8, 0xf6, 0x57, 0xae, 0x89, 0x67, 0x5b, 0x22, 0x0f, 0xc0, 0x82,
+  0x66, 0x36, 0xfb, 0x24, 0xce, 0x4b, 0xae, 0x0c, 0x0b, 0xf7, 0xe1, 0x61,
+  0xee, 0xb6, 0x87, 0xf9, 0x01, 0x95, 0x72, 0x60, 0xaf, 0x7a, 0x0e, 0xe9,
+  0xeb, 0x8b, 0x07, 0x23, 0x8e, 0x4c, 0xba, 0x16, 0x0b, 0xd7, 0x96, 0x09,
+  0xa1, 0xdb, 0x1e, 0x73, 0x57, 0xb0, 0x2d, 0x04, 0x90, 0x85, 0x95, 0xbb,
+  0x75, 0x11, 0x47, 0xde, 0xf0, 0x90, 0x37, 0x53, 0x5e, 0x40, 0x96, 0x38,
+  0x65, 0xfd, 0x26, 0x1a, 0xc3, 0xba, 0x0a, 0xef, 0x08, 0x4f, 0x87, 0xf4,
+  0x12, 0xe6, 0x22, 0x01, 0x38, 0x1d, 0xe6, 0x91, 0xec, 0x03, 0xe2, 0x7f,
+  0x48, 0x6d, 0x7a, 0xfa, 0x28, 0x36, 0xc7, 0x9d, 0x5d, 0x1e, 0x1f, 0xa8,
+  0x1c, 0xe9, 0xf3, 0x2e, 0x4c, 0x69, 0x96, 0x70, 0x1d, 0xce, 0x95, 0x64,
+  0x10, 0x01, 0x46, 0x18, 0x0c, 0x66, 0xd7, 0xef, 0x80, 0x57, 0x42, 0x82,
+  0x10, 0x27, 0x05, 0x8a, 0x29, 0xb6, 0x6e, 0xf9, 0x36, 0x3d, 0xc4, 0x8f,
+  0x95, 0x0a, 0x75, 0xeb, 0x51, 0x77, 0x15, 0x63, 0xc3, 0xb4, 0x61, 0x4b,
+  0x01, 0xda, 0x8d, 0x50, 0x68, 0xb4, 0x58, 0x42, 0x21, 0x10, 0xb4, 0x0c,
+  0x9d, 0xbc, 0x20, 0xe6, 0x56, 0x46, 0x7e, 0x59, 0x00, 0x1b, 0xb3, 0xf5,
+  0x98, 0x17, 0x0b, 0x97, 0x84, 0x8f, 0x9a, 0x6e, 0x13, 0x6f, 0x39, 0x59,
+  0xd6, 0xbf, 0x96, 0x78, 0xfb, 0x1e, 0xad, 0x54, 0x2e, 0x52, 0x09, 0xd2,
+  0x81, 0xa5, 0xba, 0xab, 0xca, 0x1f, 0x2c, 0x1a, 0x6a, 0xd9, 0x15, 0xd3,
+  0x31, 0xc8, 0xdd, 0x06, 0x67, 0x01, 0x79, 0x93, 0x7c, 0x99, 0x07, 0x58,
+  0x86, 0x2e, 0x7e, 0x2c, 0x8d, 0x3c, 0x9f, 0x33, 0xb6, 0xd0, 0xa2, 0x0d,
+  0x77, 0x9c, 0x0a, 0x9f, 0x14, 0x2a, 0x8d, 0x17, 0xc3, 0x07, 0x8e, 0x46,
+  0xc3, 0xd4, 0x12, 0x8c, 0x0c, 0xe5, 0x02, 0x1c, 0xab, 0x41, 0x79, 0x10,
+  0xc7, 0x81, 0xb6, 0xbe, 0xbb, 0x78, 0xf5, 0x57, 0xd3, 0xa8, 0xb7, 0xfb,
+  0x9d, 0x86, 0xbd, 0xd6, 0x14, 0x1a, 0xd1, 0xbc, 0x7a, 0x21, 0x34, 0x96,
+  0xce, 0xff, 0xd1, 0x41, 0x6c, 0xd3, 0x02, 0xe1, 0x06, 0x5b, 0x0c, 0x57,
+  0xcf, 0x85, 0x54, 0x55, 0x6a, 0x7b, 0x34, 0x7c, 0x02, 0xa3, 0xf8, 0xab,
+  0xa3, 0x27, 0x8f, 0xf6, 0xf7, 0xb6, 0x5b, 0x85, 0xdf, 0x1f, 0xaf, 0x9b,
+  0x66, 0xb4, 0xfe, 0x6e, 0xcb, 0xb2, 0x0f, 0x4b, 0x26, 0x98, 0xad, 0xe3,
+  0x1f, 0xce, 0xdf, 0x34, 0xe7, 0x27, 0x33, 0x8a, 0x93, 0x99, 0xd7, 0xcc,
+  0xd0, 0x5b, 0x5d, 0x1a, 0xed, 0x6b, 0x66, 0x82, 0x1c, 0x9c, 0x24, 0x32,
+  0xd6, 0xf6, 0x5e, 0x95, 0x39, 0x9f, 0x81, 0x1e, 0x2f, 0x48, 0xef, 0x94,
+  0x64, 0x0f, 0x92, 0x2b, 0xcf, 0x18, 0xbb, 0x25, 0xeb, 0xb5, 0x6b, 0x27,
+  0x3f, 0x8e, 0xf9, 0x9b, 0x1a, 0xd3, 0xa0, 0x0d, 0x74, 0xe8, 0x01, 0x9e,
+  0xa5, 0xa9, 0x16, 0x80, 0xd4, 0x63, 0x93, 0xe5, 0x58, 0x84, 0x75, 0xb6,
+  0x24, 0xcd, 0xe9, 0xd6, 0x52, 0x9a, 0x24, 0xaf, 0x46, 0x60, 0x0e, 0xce,
+  0x84, 0xac, 0xf7, 0x69, 0x7f, 0x2d, 0x36, 0x1e, 0x1c, 0xf8, 0x59, 0xb3,
+  0x04, 0x44, 0x5c, 0x33, 0x48, 0xcd, 0x6d, 0xe1, 0x70, 0x2a, 0xa4, 0x0a,
+  0x24, 0xe9, 0xb8, 0x5a, 0x95, 0xd3, 0xd5, 0x9c, 0x56, 0xe0, 0x2b, 0x97,
+  0x6f, 0xa0, 0x17, 0x36, 0x34, 0xae, 0x38, 0xa2, 0x39, 0x83, 0xf5, 0xe1,
+  0xc9, 0x6e, 0xa3, 0xb5, 0xa1, 0x16, 0x0f, 0x0f, 0x12, 0x67, 0x8a, 0x64,
+  0xb0, 0xe7, 0x22, 0x47, 0x73, 0x54, 0xcb, 0x66, 0xfb, 0x4b, 0xdb, 0x0f,
+  0xd6, 0x55, 0x75, 0xfb, 0xb7, 0x94, 0x2a, 0xb2, 0x3a, 0x65, 0xb1, 0xed,
+  0xa3, 0xd1, 0x41, 0x61, 0xe5, 0xd7, 0x42, 0xa0, 0x4f, 0xb4, 0x00, 0x24,
+  0xaa, 0xd6, 0xb8, 0x2c, 0x2b, 0xc6, 0xf9, 0x88, 0x68, 0xeb, 0xb5, 0xf6,
+  0x22, 0x3c, 0x78, 0x0b, 0x0c, 0xd2, 0x92, 0x14, 0x1f, 0x49, 0x45, 0x8a,
+  0x64, 0x8b, 0x91, 0x41, 0x93, 0x27, 0x9f, 0x3f, 0x79, 0xbc, 0x9d, 0xb4,
+  0xc2, 0x08, 0xb6, 0xbb, 0xc0, 0x98, 0xb1, 0x6e, 0xab, 0xca, 0xa5, 0x44,
+  0xce, 0x73, 0x14, 0x50, 0x01, 0xad, 0xfb, 0x60, 0x6b, 0xe4, 0x7b, 0xd2,
+  0x29, 0x80, 0x45, 0xc0, 0x62, 0xf0, 0xda, 0xcd, 0x51, 0x67, 0x52, 0x7d,
+  0x25, 0xd9, 0xb2, 0x54, 0x73, 0x77, 0x61, 0xb8, 0x54, 0x54, 0x89, 0x8f,
+  0xc5, 0xd5, 0xe0, 0x42, 0xad, 0x59, 0x05, 0x3d, 0xa9, 0xbb, 0x2c, 0x6e,
+  0x8a, 0x55, 0x1f, 0x56, 0x36, 0x42, 0x15, 0x9f, 0x22, 0xb8, 0x8b, 0x04,
+  0x9d, 0x4c, 0xd2, 0x39, 0xe5, 0xae, 0xeb, 0x82, 0x1e, 0x5b, 0xce, 0x32,
+  0x58, 0x6b, 0xf8, 0xee, 0x6c, 0xae, 0xa3, 0xc0, 0xbb, 0xf0, 0xf6, 0xdb,
+  0xfb, 0x1a, 0x73, 0xe0, 0x2b, 0x09, 0xc5, 0xc6, 0x92, 0x79, 0x36, 0x37,
+  0xa8, 0x4f, 0xb9, 0xd5, 0x8b, 0xd2, 0x17, 0x64, 0x10, 0x75, 0x5c, 0x2e,
+  0x68, 0x44, 0x30, 0xad, 0x2b, 0x88, 0xe0, 0xab, 0x79, 0x6a, 0x06, 0x73,
+  0x63, 0x64, 0x6b, 0xe0, 0xd7, 0x1d, 0xb1, 0x85, 0xa9, 0x85, 0x6a, 0x12,
+  0x47, 0x40, 0x9b, 0xfd, 0xee, 0x88, 0x32, 0x2e, 0x4a, 0x20, 0x9d, 0xb6,
+  0xd6, 0x61, 0xcd, 0xe0, 0xa5, 0x2e, 0x01, 0x72, 0x42, 0xd7, 0xd5, 0xbc,
+  0x4e, 0xb6, 0x30, 0xde, 0x9d, 0x9d, 0xed, 0x8f, 0x8e, 0x59, 0x1f, 0xfc,
+  0xd8, 0x18, 0xcf, 0xa5, 0x78, 0xe9, 0x22, 0x04, 0xe0, 0xf0, 0x43, 0xe0,
+  0x2e, 0x73, 0xe4, 0xee, 0x31, 0xf9, 0x48, 0x48, 0x93, 0x98, 0x40, 0x91,
+  0xd7, 0x70, 0x17, 0xa1, 0x7d, 0x58, 0x31, 0x03, 0xb6, 0x87, 0x62, 0x7e,
+  0xcd, 0xa9, 0xab, 0xf0, 0x2a, 0xa9, 0xaa, 0xca, 0x15, 0x34, 0x56, 0x9b,
+  0x03, 0x99, 0xa2, 0xda, 0x3a, 0x8b, 0xa0, 0xdc, 0x35, 0x07, 0x09, 0x04,
+  0xf3, 0x93, 0x53, 0xe5, 0x1d, 0x5c, 0x72, 0x06, 0x4d, 0x49, 0x10, 0x47,
+  0x58, 0xcc, 0x8a, 0xdd, 0xd3, 0xad, 0x6a, 0x4b, 0xc3, 0x08, 0xa9, 0x45,
+  0x9e, 0xe4, 0xe3, 0x63, 0xde, 0xb1, 0x7c, 0xd1, 0x21, 0xb5, 0x7a, 0x37,
+  0x06, 0x1a, 0x24, 0x15, 0xed, 0xd6, 0xcf, 0x59, 0x10, 0x97, 0x2c, 0x59,
+  0x05, 0xa2, 0xb2, 0xc3, 0xdc, 0x48, 0xcb, 0xac, 0x3b, 0xab, 0xda, 0x51,
+  0x37, 0x56, 0xcc, 0x6a, 0x09, 0xe1, 0xd3, 0xc6, 0x62, 0xf6, 0xe5, 0x84,
+  0x22, 0xd0, 0xb6, 0x4b, 0x08, 0x06, 0xb2, 0xf5, 0x83, 0x62, 0xff, 0x67,
+  0xac, 0xd5, 0xe6, 0x57, 0x1d, 0x95, 0xb6, 0x67, 0xf9, 0xd8, 0x2d, 0xb4,
+  0x46, 0xce, 0x0c, 0x83, 0x1b, 0x74, 0xc1, 0x46, 0x02, 0xd2, 0xa4, 0xcb,
+  0x49, 0x64, 0x17, 0x70, 0xae, 0xb9, 0x6a, 0xa2, 0x96, 0xcb, 0x21, 0x1e,
+  0xa4, 0xae, 0xdf, 0xe9, 0x2f, 0xcc, 0xa2, 0x35, 0x0e, 0x7a, 0xdb, 0xa5,
+  0x66, 0x75, 0x66, 0x47, 0xb1, 0x9c, 0xb3, 0x59, 0xb9, 0x10, 0x5d, 0x0d,
+  0xd8, 0x60, 0x1e, 0x09, 0x84, 0x38, 0x85, 0x7a, 0x59, 0x4c, 0x13, 0xef,
+  0xb9, 0x73, 0x80, 0xc4, 0xf7, 0xcb, 0x28, 0xf6, 0x2d, 0xa8, 0xbc, 0xc8,
+  0x6d, 0x20, 0x09, 0x5b, 0x22, 0xbf, 0xbd, 0x0f, 0xd5, 0xd5, 0xa4, 0x0f,
+  0x31, 0x0c, 0xb4, 0xa4, 0x4e, 0xc7, 0xe8, 0xda, 0x1a, 0xa7, 0x6a, 0xde,
+  0x98, 0xe9, 0x16, 0xdd, 0x0c, 0xcc, 0xce, 0xeb, 0xe5, 0xd6, 0xde, 0xb6,
+  0x20, 0x57, 0x6a, 0x75, 0x81, 0xce, 0x2a, 0xef, 0x56, 0x3c, 0x12, 0x71,
+  0x26, 0x47, 0xae, 0x6f, 0xe6, 0x7a, 0x40, 0x14, 0x66, 0xa1, 0x0e, 0x54,
+  0xc4, 0x87, 0x41, 0x56, 0xcd, 0xc1, 0xa2, 0xb3, 0x0b, 0xa2, 0x4b, 0x1d,
+  0x16, 0xf0, 0x94, 0x25, 0xc7, 0x3a, 0x57, 0x52, 0xe5, 0x69, 0xcb, 0x43,
+  0x58, 0xcb, 0x05, 0x61, 0xb5, 0x0f, 0x69, 0xf9, 0x66, 0xd3, 0x01, 0x0f,
+  0xf8, 0xba, 0x2c, 0x62, 0x2c, 0x3b, 0x4e, 0x13, 0xd1, 0x2b, 0xe4, 0x72,
+  0x5d, 0xad, 0xc9, 0x1e, 0xc7, 0xe4, 0xf7, 0xc2, 0x1a, 0xae, 0x12, 0xf7,
+  0xdf, 0x31, 0xd9, 0xe6, 0x96, 0x46, 0x64, 0x7a, 0xc8, 0xd9, 0x45, 0xf9,
+  0xc4, 0x4e, 0xb9, 0xa0, 0x77, 0x23, 0xd0, 0x9b, 0x03, 0x11, 0x94, 0xa7,
+  0x13, 0x03, 0x51, 0xc7, 0x2b, 0x2c, 0x92, 0xc4, 0x72, 0x94, 0xd4, 0x3a,
+  0xca, 0x6a, 0xb2, 0xe9, 0xc7, 0x84, 0x01, 0xa0, 0x58, 0x16, 0x2a, 0x70,
+  0x22, 0xa8, 0x48, 0xdc, 0xcc, 0x22, 0x38, 0x33, 0x67, 0x17, 0x2a, 0x90,
+  0xfd, 0xed, 0xf0, 0x51, 0x6d, 0xce, 0xef, 0xf9, 0x26, 0xdb, 0x6c, 0x90,
+  0x5e, 0xb2, 0x59, 0xb1, 0x3d, 0xa7, 0xde, 0xb4, 0xe5, 0x45, 0xe8, 0xd0,
+  0x03, 0x85, 0x5a, 0xd6, 0xf5, 0x2d, 0xa4, 0x2d, 0x5d, 0xf8, 0xd6, 0xa5,
+  0x71, 0x7f, 0x04, 0xdf, 0xf4, 0x25, 0xec, 0x75, 0xbc, 0x62, 0xe7, 0x77,
+  0xab, 0xe9, 0x97, 0xc2, 0xaf, 0x45, 0x2c, 0x90, 0x27, 0xb4, 0x0c, 0x14,
+  0x82, 0x93, 0x24, 0xdc, 0xbc, 0xe2, 0x24, 0xa5, 0x79, 0x58, 0x4c, 0x0d,
+  0xf5, 0x1b, 0xab, 0x58, 0xa8, 0x5b, 0x49, 0x4d, 0xe7, 0xf0, 0x44, 0xb4,
+  0xc2, 0xa4, 0xa4, 0x0f, 0x66, 0xbd, 0xda, 0xb8, 0xb6, 0xde, 0xe9, 0x7e,
+  0x44, 0x03, 0x70, 0x9a, 0xc1, 0xe3, 0x22, 0x9a, 0xaf, 0xd5, 0x3f, 0x17,
+  0x94, 0x17, 0x69, 0xc4, 0x01, 0x53, 0xd3, 0x7a, 0x4c, 0x6e, 0x56, 0x8b,
+  0x5b, 0x1a, 0x42, 0x1c, 0x9b, 0x69, 0x36, 0xea, 0x1c, 0x45, 0x01, 0x52,
+  0x80, 0x16, 0xdd, 0x59, 0x96, 0x08, 0x5e, 0x67, 0x74, 0x99, 0xf7, 0x48,
+  0x61, 0x53, 0xa0, 0xff, 0x86, 0xc3, 0xb2, 0x6b, 0x74, 0x7a, 0xe1, 0xc9,
+  0xa8, 0xdc, 0x02, 0x76, 0x27, 0x41, 0x39, 0x24, 0x40, 0x8d, 0x70, 0x93,
+  0xe0, 0x8c, 0x6b, 0x04, 0x8a, 0xa8, 0x44, 0x0a, 0x3e, 0x65, 0x68, 0x10,
+  0x7c, 0xd9, 0x68, 0x70, 0x40, 0x74, 0x64, 0x57, 0x95, 0xd4, 0x26, 0xd2,
+  0x6d, 0x4d, 0x50, 0x6e, 0xdb, 0xa3, 0x7c, 0x75, 0x8c, 0x44, 0xf9, 0xf0,
+  0xa0, 0xa3, 0x4a, 0xd6, 0x65, 0xab, 0xfa, 0xa0, 0x23, 0x45, 0x7b, 0xa9,
+  0xdf, 0x00, 0x79, 0x84, 0x0f, 0xc9, 0xc2, 0x87, 0xd7, 0x15, 0x59, 0x27,
+  0xb5, 0x72, 0x5c, 0x15, 0xb3, 0x15, 0xcf, 0x9b, 0x1d, 0x23, 0xd9, 0x0c,
+  0x98, 0x63, 0xdb, 0x76, 0xa0, 0xe4, 0x00, 0x8a, 0xe9, 0x82, 0x1b, 0x3d,
+  0xf2, 0x75, 0x0b, 0x62, 0xee, 0x39, 0xf4, 0x05, 0x82, 0x24, 0x3e, 0x44,
+  0x55, 0x77, 0x56, 0x00, 0xf4, 0xae, 0x10, 0x3e, 0xc7, 0x7a, 0x2c, 0x32,
+  0xa6, 0x1c, 0x93, 0x8d, 0x2c, 0x48, 0xa6, 0x4c, 0x34, 0x16, 0xc4, 0x45,
+  0xa2, 0xab, 0x74, 0xe0, 0xcb, 0x9f, 0x38, 0xf4, 0x6f, 0xd3, 0x38, 0x1e,
+  0x74, 0x43, 0x3f, 0x10, 0x9f, 0xd4, 0xb1, 0xd6, 0xbe, 0xd4, 0x2d, 0x7b,
+  0xfb, 0x55, 0xe4, 0xd7, 0x61, 0x01, 0x16, 0x0a, 0x11, 0x76, 0x32, 0xa2,
+  0xf9, 0x8a, 0xed, 0xc4, 0x51, 0x28, 0x26, 0xed, 0xcb, 0x6c, 0x25, 0x28,
+  0xba, 0xec, 0x73, 0x54, 0x77, 0x07, 0x49, 0xe8, 0xe9, 0x98, 0x77, 0x67,
+  0x7c, 0xef, 0xa6, 0x69, 0xf9, 0xb5, 0xc8, 0x86, 0x35, 0x95, 0x3a, 0x26,
+  0x0f, 0x7b, 0xac, 0xd5, 0xcf, 0x77, 0xc6, 0x58, 0x23, 0xca, 0x10, 0x43,
+  0x76, 0x88, 0x08, 0x70, 0xab, 0xfc, 0x44, 0x99, 0xec, 0xaa, 0xc3, 0x66,
+  0xea, 0x06, 0x63, 0xe2, 0x3a, 0xdb, 0x04, 0x52, 0x2b, 0x9a, 0x2b, 0x96,
+  0x68, 0x79, 0xdb, 0xc2, 0xe2, 0x8b, 0x66, 0x16, 0xc6, 0xc2, 0x02, 0x6d,
+  0xd7, 0x60, 0xd2, 0x69, 0x65, 0xbb, 0x46, 0x4c, 0x6e, 0x7c, 0x03, 0xc3,
+  0x6c, 0xd7, 0x78, 0x26, 0x52, 0x2a, 0x80, 0x90, 0xc7, 0x01, 0x24, 0xb4,
+  0x4d, 0x24, 0x02, 0x4a, 0xf6, 0xf3, 0xeb, 0x7c, 0x52, 0x16, 0x55, 0x71,
+  0x25, 0x66, 0x43, 0x0f, 0xac, 0xad, 0x81, 0x93, 0x0c, 0x76, 0x97, 0x72,
+  0x1e, 0x55, 0x2c, 0x57, 0xa8, 0xd2, 0x2c, 0xd9, 0x16, 0x6c, 0x13, 0x9c,
+  0x0b, 0x3f, 0x82, 0xb7, 0xb8, 0x16, 0x98, 0xb2, 0xd4, 0x69, 0x88, 0xea,
+  0x9c, 0xb0, 0xb8, 0xed, 0x27, 0x0f, 0x87, 0x52, 0xf1, 0x4e, 0xb0, 0xd3,
+  0x69, 0x9c, 0x39, 0x0f, 0xef, 0x54, 0x4b, 0x06, 0x6b, 0xb9, 0x3d, 0xb1,
+  0x47, 0xdb, 0x6b, 0xdd, 0xa3, 0xb3, 0x08, 0x16, 0x54, 0xca, 0x80, 0x6b,
+  0x39, 0xac, 0x0b, 0xcf, 0x51, 0x8e, 0x27, 0xc7, 0x97, 0xaf, 0x92, 0x69,
+  0x49, 0x5a, 0x9e, 0xfc, 0x1c, 0x90, 0x30, 0xfb, 0x8f, 0x34, 0xc2, 0xa4,
+  0xab, 0x96, 0xbc, 0x49, 0x03, 0x56, 0x89, 0x06, 0xbb, 0x8f, 0x87, 0xf5,
+  0x87, 0xce, 0x78, 0x65, 0xe1, 0x26, 0x88, 0xad, 0x00, 0x0f, 0x03, 0x37,
+  0xf5, 0x5b, 0xa6, 0x90, 0x5d, 0xec, 0xdf, 0x29, 0x3e, 0xdc, 0xb7, 0x81,
+  0x7b, 0xbb, 0xc0, 0xe9, 0x85, 0x2d, 0xe2, 0x71, 0x4f, 0x25, 0xff, 0x85,
+  0xe0, 0x6f, 0x09, 0xf6, 0x4e, 0x7c, 0x3c, 0xf7, 0xba, 0x3a, 0xa6, 0x4c,
+  0xc6, 0x2a, 0x80, 0x58, 0x84, 0x77, 0x33, 0xc4, 0xbb, 0x2b, 0xa4, 0x5b,
+  0x3f, 0xee, 0xa8, 0x7d, 0x8b, 0xa0, 0xc4, 0x06, 0x6d, 0x76, 0x47, 0x72,
+  0xad, 0xe2, 0x8a, 0x34, 0xbc, 0xa4, 0x08, 0xe0, 0x07, 0x19, 0x18, 0xa7,
+  0x4e, 0x49, 0xd0, 0xbf, 0xa5, 0xe1, 0xac, 0xe0, 0x27, 0xed, 0xa8, 0x5b,
+  0x19, 0x44, 0x1f, 0x09, 0x22, 0xb4, 0x21, 0x55, 0xb7, 0xe8, 0x0c, 0xb6,
+  0x70, 0x57, 0xbd, 0x99, 0xc4, 0x58, 0xf1, 0xab, 0xb6, 0xcd, 0xa8, 0x9b,
+  0x83, 0x55, 0x72, 0x80, 0xa2, 0x80, 0xd9, 0x82, 0x0b, 0x7e, 0x36, 0x0c,
+  0x94, 0xde, 0x28, 0x19, 0x54, 0x9f, 0xf2, 0x59, 0x78, 0x34, 0xc2, 0x55,
+  0xf7, 0xe8, 0x88, 0x19, 0xb2, 0x20, 0x2b, 0x6e, 0x33, 0x15, 0xd2, 0x87,
+  0xff, 0x8c, 0xea, 0x0e, 0x21, 0xf3, 0x09, 0x92, 0x88, 0x1e, 0x12, 0xa8,
+  0x94, 0xa3, 0xfb, 0x84, 0x23, 0x75, 0x20, 0xb9, 0xb8, 0xdf, 0xcb, 0xa3,
+  0xf3, 0xc0, 0x5f, 0xde, 0x8f, 0xed, 0x4b, 0x1e, 0x0b, 0x44, 0x93, 0x20,
+  0x17, 0xae, 0xf5, 0xf9, 0x3f, 0x51, 0xc8, 0xf0, 0x33, 0x08, 0xe4, 0x0c,
+  0xf7, 0x61, 0x6b, 0x69, 0x14, 0xb6, 0x27, 0x9f, 0x76, 0x26, 0xee, 0xe8,
+  0x02, 0x59, 0x55, 0x06, 0x5d, 0x22, 0x86, 0x5b, 0x31, 0x68, 0xa4, 0x93,
+  0x97, 0x34, 0x18, 0x96, 0x78, 0xb9, 0xba, 0xf5, 0x57, 0xf7, 0x2e, 0x1d,
+  0x39, 0x16, 0xd5, 0x03, 0x7c, 0x6e, 0x5c, 0x92, 0x28, 0x21, 0xec, 0x8d,
+  0xc4, 0xdc, 0x4a, 0x16, 0x42, 0x86, 0x4a, 0x30, 0x91, 0xc2, 0x72, 0x75,
+  0xe3, 0xa6, 0x32, 0x71, 0x20, 0x80, 0xee, 0x66, 0x25, 0x15, 0x04, 0x15,
+  0xf4, 0xc5, 0x95, 0xee, 0x2a, 0x33, 0x58, 0x2d, 0x50, 0x45, 0xdd, 0x8f,
+  0xb8, 0xea, 0x60, 0x45, 0x25, 0x87, 0x18, 0x67, 0x73, 0x0d, 0x3c, 0x1f,
+  0x97, 0xc5, 0x2d, 0x9d, 0x56, 0x7e, 0x0f, 0xda, 0x09, 0xaf, 0xbd, 0xdc,
+  0x06, 0xa6, 0xc5, 0xd3, 0xdd, 0x2d, 0x58, 0x89, 0x1d, 0xd8, 0xa8, 0x56,
+  0xfd, 0x40, 0x63, 0x01, 0xbc, 0xd4, 0x29, 0x00, 0xd5, 0x48, 0xaf, 0x36,
+  0x5e, 0x09, 0x16, 0xc3, 0x95, 0x78, 0x03, 0x81, 0x24, 0x76, 0x05, 0x2b,
+  0xb2, 0xf8, 0x3f, 0x8f, 0x86, 0x1c, 0x59, 0x84, 0x34, 0xd4, 0xb1, 0xe7,
+  0x0d, 0x62, 0x12, 0xae, 0xff, 0x9c, 0xa8, 0x4a, 0x18, 0x3a, 0xdb, 0x40,
+  0xdb, 0x56, 0x78, 0x00, 0xf4, 0x0f, 0x3c, 0x3a, 0x09, 0x7c, 0x02, 0x50,
+  0xf9, 0x38, 0x7c, 0x43, 0xa2, 0x1d, 0xa6, 0xbe, 0xa6, 0x48, 0x2a, 0x57,
+  0x49, 0x5f, 0xec, 0x44, 0xb1, 0x40, 0x87, 0xc4, 0x02, 0x27, 0x1f, 0x89,
+  0x8c, 0x00, 0x26, 0xc1, 0xfb, 0x03, 0x60, 0x2a, 0xe4, 0xf0, 0xaa, 0xc7,
+  0xea, 0x5f, 0x43, 0xdc, 0x07, 0xf4, 0x15, 0x29, 0x6f, 0x82, 0xb4, 0xed,
+  0x02, 0x4a, 0x24, 0x74, 0xd3, 0xa5, 0x57, 0x32, 0x2c, 0x6b, 0xc8, 0x33,
+  0x30, 0xb8, 0x61, 0x72, 0xcc, 0xd1, 0x21, 0x1d, 0x1a, 0xa5, 0x98, 0x3f,
+  0x72, 0x97, 0xb7, 0x91, 0x2b, 0xe4, 0xa1, 0xf8, 0x7f, 0x54, 0x43, 0x4f,
+  0xcd, 0xb5, 0xe3, 0x90, 0x71, 0xa4, 0x00, 0x65, 0x97, 0x76, 0x5d, 0xd5,
+  0xe2, 0x3d, 0xd1, 0x3c, 0x72, 0xfb, 0xc0, 0x41, 0x6c, 0xbf, 0xf2, 0xd1,
+  0xbd, 0xfd, 0x44, 0x4c, 0x75, 0x50, 0x3e, 0x05, 0x5b, 0xb6, 0x6b, 0xb2,
+  0x49, 0xf0, 0x58, 0xf8, 0xca, 0xc1, 0xe7, 0xbb, 0x56, 0x5e, 0x9e, 0xed,
+  0xa3, 0xe1, 0x33, 0xa8, 0x7f, 0x10, 0x2b, 0x6c, 0x40, 0x68, 0x2b, 0x6a,
+  0xf7, 0x64, 0x1b, 0x1a, 0xff, 0xd9, 0xf0, 0xf1, 0x76, 0x83, 0x5e, 0xea,
+  0xd9, 0xbc, 0x2d, 0x01, 0x26, 0x6f, 0x2e, 0x4f, 0x5f, 0x27, 0x6b, 0x44,
+  0xbf, 0xae, 0xef, 0xfe, 0x2b, 0x12, 0x20, 0x7d, 0x71, 0x72, 0x32, 0x82,
+  0xfc, 0xa7, 0xf9, 0x35, 0x51, 0x0c, 0x5e, 0x2d, 0xe4, 0xc3, 0xd7, 0x67,
+  0x99, 0x67, 0x35, 0x0b, 0x1b, 0x66, 0x40, 0xe5, 0x44, 0x57, 0x7e, 0x27,
+  0x1b, 0x64, 0x0b, 0xd2, 0xec, 0x33, 0xe8, 0xc9, 0x0c, 0x79, 0x3e, 0x03,
+  0x57, 0x22, 0xe5, 0xa6, 0xe8, 0xb0, 0xa1, 0xcb, 0x00, 0x8c, 0xa5, 0xc8,
+  0xda, 0xe0, 0xae, 0x18, 0xa7, 0x95, 0xc3, 0xf8, 0x21, 0xa1, 0x94, 0x28,
+  0x8e, 0x45, 0x0a, 0x35, 0x7c, 0xdd, 0xe6, 0xc8, 0xa6, 0x8e, 0xb2, 0x8c,
+  0xb5, 0x10, 0x5e, 0xcb, 0xf0, 0xb3, 0x98, 0x16, 0x25, 0xdc, 0x51, 0x01,
+  0xc4, 0x2b, 0x10, 0xd1, 0x57, 0x08, 0x92, 0x04, 0xd7, 0xbc, 0xef, 0xd0,
+  0x8d, 0x6e, 0x0a, 0x85, 0x50, 0x90, 0x95, 0x66, 0xc6, 0x24, 0x09, 0x61,
+  0x88, 0x67, 0x52, 0x18, 0x50, 0x54, 0xd3, 0x74, 0x9c, 0x24, 0xd8, 0x8d,
+  0xae, 0x60, 0x7a, 0x57, 0xac, 0xdc, 0xe5, 0xa4, 0xa8, 0x5f, 0xe3, 0x65,
+  0x7e, 0xbd, 0x06, 0xac, 0xdb, 0xc5, 0xee, 0x06, 0xf2, 0x25, 0x8f, 0xa6,
+  0x25, 0x5a, 0x46, 0x45, 0x21, 0xba, 0x50, 0x17, 0x1a, 0xc2, 0x25, 0x51,
+  0xdb, 0xf0, 0xe1, 0xec, 0xf3, 0x87, 0x25, 0x4b, 0x5c, 0x7a, 0x26, 0x55,
+  0xaa, 0xa4, 0x18, 0xd9, 0xa1, 0xd7, 0xc8, 0x8d, 0xcd, 0x54, 0x40, 0x9e,
+  0xcf, 0x3f, 0x05, 0xa7, 0xdc, 0x1f, 0xb6, 0x82, 0x85, 0x5a, 0x35, 0xbf,
+  0x74, 0x46, 0xb6, 0x7f, 0x2f, 0xf0, 0x35, 0x6a, 0xa0, 0x29, 0xf4, 0xa1,
+  0x30, 0xed, 0xaa, 0xaa, 0xa7, 0xc5, 0x4a, 0x92, 0x36, 0x10, 0x06, 0x56,
+  0xda, 0xe5, 0xfd, 0xef, 0xff, 0x19, 0x67, 0xa1, 0xfc, 0xf8, 0x33, 0x72,
+  0x1e, 0x00, 0x53, 0xe0, 0x32, 0xf6, 0x8d, 0x6c, 0x2a, 0x5f, 0x81, 0x80,
+  0x77, 0x88, 0xe1, 0x78, 0xd4, 0xfd, 0x69, 0x25, 0x65, 0xdb, 0xc2, 0xa9,
+  0x39, 0x6b, 0xd5, 0x9c, 0x6c, 0xa3, 0x33, 0xc6, 0x8f, 0xba, 0x28, 0x69,
+  0x60, 0xb1, 0x34, 0x35, 0x5f, 0x01, 0x7b, 0xa7, 0xeb, 0xe0, 0x91, 0x0d,
+  0xd7, 0xa3, 0x59, 0xfe, 0x02, 0x80, 0x0a, 0xe2, 0x62, 0xc3, 0x0c, 0xf8,
+  0x62, 0x39, 0x95, 0x82, 0x72, 0x31, 0x6c, 0xa5, 0xec, 0xad, 0x7a, 0x92,
+  0xfe, 0x9d, 0x36, 0xa3, 0x5f, 0xdf, 0x15, 0xff, 0x39, 0xe4, 0xe8, 0x3f,
+  0x70, 0xde, 0x41, 0x21, 0xd5, 0x7e, 0xdf, 0xfd, 0x71, 0x8f, 0x95, 0xaa,
+  0x5e, 0x5c, 0xc5, 0x17, 0x8b, 0x60, 0xfb, 0xec, 0xd0, 0x4e, 0xd6, 0xa0,
+  0x64, 0x36, 0xbb, 0xe3, 0x5e, 0xfa, 0x7c, 0x09, 0xfc, 0xe7, 0x90, 0x7f,
+  0xfe, 0xb8, 0x37, 0x78, 0xf2, 0xb3, 0xeb, 0xf5, 0x8f, 0x7b, 0xef, 0xfe,
+  0xb8, 0xdf, 0xeb, 0x2a, 0xdd, 0xac, 0xd9, 0x60, 0xcd, 0xc8, 0xb7, 0x0a,
+  0x65, 0x14, 0x35, 0xd4, 0x54, 0x85, 0x7f, 0x0f, 0xec, 0x8e, 0x12, 0x11,
+  0x1d, 0x29, 0x0c, 0x6c, 0xef, 0xeb, 0x46, 0xa4, 0xd3, 0x2a, 0xd9, 0x12,
+  0xa6, 0xe6, 0x0b, 0x8a, 0x06, 0x8e, 0x67, 0xad, 0xaf, 0xe9, 0x9d, 0x66,
+  0x6a, 0x38, 0x8e, 0x6c, 0xd4, 0x9c, 0x9a, 0x38, 0xbd, 0xa7, 0x8b, 0x4e,
+  0x00, 0x2d, 0x5d, 0xde, 0xb8, 0x89, 0x8e, 0x4a, 0xb6, 0x0a, 0x83, 0xb4,
+  0xe5, 0xcb, 0x50, 0x02, 0xbe, 0x6b, 0xbb, 0xcb, 0x06, 0xe4, 0x8d, 0x6f,
+  0x9e, 0xe6, 0xb5, 0xf6, 0x23, 0x0e, 0xaf, 0x10, 0xbb, 0x3f, 0x40, 0x6d,
+  0x54, 0xc9, 0xce, 0xe3, 0x13, 0xb4, 0x95, 0x86, 0x7e, 0x40, 0x29, 0xa0,
+  0xa2, 0xb9, 0xa4, 0x99, 0xf9, 0x2a, 0x05, 0x12, 0x0d, 0x25, 0xe9, 0xdb,
+  0xf7, 0xce, 0xd6, 0x99, 0xd7, 0x73, 0x66, 0x59, 0x03, 0x7a, 0x3b, 0x7c,
+  0x39, 0x88, 0x3b, 0xc8, 0x12, 0x57, 0x9b, 0x79, 0xb2, 0xaa, 0x63, 0xc0,
+  0x87, 0xe1, 0x76, 0x67, 0x30, 0xbd, 0x01, 0x3f, 0x8b, 0x55, 0xcd, 0xa1,
+  0x4b, 0x69, 0xe4, 0x73, 0x52, 0x49, 0x7d, 0x0f, 0x56, 0x0a, 0x05, 0xd5,
+  0x32, 0x9b, 0x3a, 0x24, 0xcb, 0x28, 0xa0, 0x5f, 0x8b, 0x76, 0xf6, 0x1d,
+  0x92, 0x6e, 0x36, 0xab, 0x62, 0xda, 0x38, 0x62, 0xaf, 0x1a, 0x43, 0x86,
+  0xd5, 0x48, 0x16, 0xee, 0xfb, 0x59, 0xba, 0x64, 0xb4, 0xf4, 0xbd, 0x77,
+  0x96, 0xb9, 0x23, 0x6a, 0xe1, 0xe4, 0xeb, 0xf2, 0x7d, 0x87, 0xad, 0xdb,
+  0xc3, 0x21, 0xeb, 0xa6, 0xae, 0xb0, 0x8e, 0x4f, 0x28, 0xf3, 0x89, 0xcf,
+  0x5d, 0x29, 0x8c, 0x80, 0x5e, 0x07, 0x87, 0x92, 0xc4, 0x2f, 0x1b, 0x82,
+  0x8e, 0x20, 0x70, 0x59, 0x29, 0xce, 0x07, 0x3f, 0x2b, 0xc0, 0x4f, 0x5d,
+  0xce, 0x5b, 0xc7, 0x6d, 0x62, 0x68, 0xd2, 0xab, 0x59, 0x7a, 0xfd, 0x87,
+  0x4e, 0x34, 0x50, 0xc5, 0xe7, 0x61, 0x4e, 0x04, 0x14, 0x50, 0x89, 0x65,
+  0x5d, 0x64, 0xa6, 0x8b, 0x06, 0x40, 0x11, 0x34, 0xed, 0x5c, 0x6a, 0x25,
+  0xfc, 0x69, 0x7f, 0x37, 0x66, 0xc5, 0x1e, 0x23, 0xc6, 0x8a, 0xa2, 0x30,
+  0x39, 0x55, 0x46, 0x4f, 0x22, 0x4f, 0x7a, 0x24, 0x76, 0x0e, 0x9b, 0x42,
+  0xad, 0xb5, 0x6a, 0xc0, 0xc4, 0x14, 0xe9, 0xb8, 0xbe, 0xe3, 0x2e, 0xce,
+  0xf2, 0xab, 0x59, 0xcb, 0xc7, 0x38, 0x0b, 0xdd, 0x5e, 0x7c, 0xe3, 0xef,
+  0x0f, 0xc6, 0x19, 0xdd, 0x3c, 0xed, 0x39, 0x6e, 0x9d, 0xbc, 0x3e, 0x3c,
+  0xef, 0x6b, 0xba, 0x71, 0x33, 0x5a, 0x8d, 0xfb, 0xfa, 0x0a, 0xef, 0x24,
+  0x97, 0xd0, 0xe9, 0x98, 0xae, 0xcf, 0xb8, 0xb4, 0x72, 0xb2, 0x3f, 0xdc,
+  0x55, 0xc1, 0xef, 0x41, 0x4b, 0x9d, 0x78, 0xc6, 0x1a, 0x6d, 0x04, 0x36,
+  0x44, 0x12, 0xd7, 0xff, 0xb6, 0x5a, 0x34, 0xd1, 0xcf, 0xbb, 0x1c, 0x8a,
+  0xd8, 0x6f, 0x95, 0xf0, 0x25, 0x32, 0xa8, 0x11, 0x0b, 0x66, 0x47, 0x5c,
+  0xcd, 0x29, 0x40, 0x45, 0x03, 0x7a, 0xc1, 0x60, 0x15, 0x4b, 0x19, 0x68,
+  0x70, 0x3d, 0xac, 0x3d, 0x35, 0xa0, 0xa3, 0xd5, 0xe1, 0x1a, 0x64, 0x84,
+  0x8e, 0x82, 0xaf, 0x6e, 0xb1, 0x11, 0xd6, 0xed, 0x12, 0x39, 0x17, 0xaf,
+  0x8e, 0x5a, 0xcd, 0x3d, 0xfd, 0xec, 0xc9, 0xee, 0xef, 0x18, 0xf9, 0xb3,
+  0xec, 0x9b, 0x84, 0x56, 0x73, 0x5a, 0xc2, 0xac, 0xcb, 0x66, 0xa6, 0xd5,
+  0x6f, 0x54, 0xf2, 0xb3, 0xce, 0xb6, 0x06, 0x1f, 0xdc, 0xbb, 0x5d, 0xb9,
+  0xb7, 0x70, 0xf7, 0x47, 0x71, 0x07, 0x8b, 0x01, 0x9a, 0x72, 0x52, 0xbc,
+  0xa1, 0xfb, 0x2b, 0xe8, 0xae, 0xe4, 0xed, 0x63, 0x24, 0xbc, 0x15, 0x25,
+  0x2c, 0x61, 0x5e, 0xd3, 0x5b, 0x5f, 0x16, 0x64, 0x4e, 0x67, 0x76, 0x66,
+  0xb9, 0x9d, 0x79, 0xad, 0x35, 0xdf, 0x00, 0x50, 0x0e, 0xbe, 0xef, 0xa2,
+  0xe4, 0x35, 0x84, 0x86, 0x3b, 0x19, 0x44, 0x1e, 0xaf, 0x19, 0xd2, 0xb6,
+  0xca, 0x82, 0xd5, 0x49, 0xf0, 0x72, 0x80, 0xd4, 0x7a, 0x0e, 0x12, 0x2c,
+  0xc3, 0xd1, 0xd9, 0x9b, 0x37, 0xc7, 0x47, 0xbe, 0xc8, 0x4f, 0x1c, 0x30,
+  0xe8, 0xc4, 0x59, 0x17, 0x5c, 0xac, 0x56, 0x59, 0xc9, 0x22, 0xd5, 0xac,
+  0x08, 0x35, 0x68, 0x99, 0xa3, 0x47, 0x2f, 0x04, 0x16, 0x54, 0xbb, 0x65,
+  0x30, 0x61, 0x69, 0x96, 0x46, 0xaf, 0x4b, 0x65, 0x2b, 0x55, 0x17, 0xc1,
+  0xd6, 0x36, 0xeb, 0x9d, 0xae, 0x0d, 0x2e, 0xb5, 0xca, 0x71, 0xd0, 0xa5,
+  0x2a, 0x3d, 0x00, 0x66, 0x46, 0xd3, 0xf2, 0x76, 0x45, 0xb9, 0x83, 0x78,
+  0xaa, 0x05, 0x67, 0xf8, 0x15, 0x2c, 0x1d, 0x49, 0x49, 0xd0, 0xa2, 0x63,
+  0x0d, 0x27, 0xbe, 0x2e, 0x3c, 0x35, 0xad, 0x0a, 0x94, 0x2a, 0x32, 0x73,
+  0x1f, 0xc7, 0xa0, 0xe1, 0x2c, 0x02, 0x9a, 0x64, 0x35, 0x23, 0x4f, 0xda,
+  0x1a, 0xc4, 0x12, 0x50, 0xce, 0x13, 0x0f, 0xe4, 0x5e, 0x0b, 0xa6, 0x35,
+  0xe0, 0xa6, 0xb5, 0x4a, 0x98, 0x2b, 0xf2, 0x67, 0x4b, 0xc9, 0x58, 0x96,
+  0xdd, 0xe9, 0xcf, 0x52, 0x02, 0x7e, 0xb3, 0x0a, 0xcf, 0xbe, 0x86, 0x97,
+  0xc2, 0xe7, 0x4c, 0x0b, 0x65, 0x49, 0x74, 0x8d, 0x92, 0x84, 0x69, 0x75,
+  0x5b, 0xad, 0x87, 0x93, 0x90, 0xe0, 0x79, 0xf8, 0xca, 0x11, 0xb1, 0x1a,
+  0xc0, 0xb3, 0x5b, 0xab, 0x02, 0xfb, 0x57, 0x87, 0xa3, 0xe4, 0xbd, 0x6a,
+  0x36, 0xe7, 0xb6, 0x28, 0x42, 0x8b, 0x89, 0xe4, 0x50, 0x87, 0xd2, 0xde,
+  0x5d, 0x05, 0x39, 0x1f, 0x66, 0x49, 0x8f, 0xf1, 0xdb, 0x7b, 0x21, 0x76,
+  0xa4, 0xa6, 0xb2, 0xd8, 0xab, 0x8c, 0x39, 0xd0, 0x28, 0xbf, 0x1a, 0xdf,
+  0x01, 0x26, 0xb1, 0xa9, 0x3e, 0xc8, 0x5b, 0xb6, 0xf5, 0x76, 0x91, 0x7f,
+  0x80, 0x1a, 0x14, 0xc3, 0x3e, 0xb9, 0x79, 0x3f, 0x30, 0xaa, 0xbd, 0x67,
+  0xfb, 0xc3, 0xbd, 0xa7, 0x9f, 0x0f, 0xf7, 0x76, 0x87, 0x7b, 0x8d, 0xd1,
+  0xc1, 0x69, 0xcd, 0x7e, 0xe6, 0xb0, 0x9d, 0x0e, 0x03, 0x4c, 0x97, 0x9d,
+  0x27, 0xec, 0x60, 0x7e, 0x3f, 0x0c, 0x5c, 0xff, 0x51, 0x17, 0x1a, 0x1e,
+  0xd0, 0x6e, 0x79, 0x10, 0xc8, 0x1f, 0x4a, 0x6a, 0x4b, 0x0e, 0x94, 0x70,
+  0x49, 0xcb, 0x8d, 0xc2, 0xba, 0x92, 0xc2, 0x10, 0x54, 0xa7, 0x5d, 0x53,
+  0xdc, 0x7a, 0x7d, 0xc9, 0x5a, 0xd7, 0xff, 0x7f, 0x81, 0x95, 0x9b, 0x17,
+  0xf5, 0x65, 0xee, 0x43, 0xd9, 0xa5, 0x50, 0x32, 0x0e, 0x06, 0x0e, 0x58,
+  0x21, 0xc5, 0x6d, 0x15, 0xba, 0xc0, 0xd5, 0xb1, 0x1e, 0x3a, 0xcb, 0x32,
+  0x3c, 0x16, 0x1e, 0xf2, 0xbc, 0x05, 0xd1, 0x8e, 0x92, 0xb8, 0x2d, 0x64,
+  0x0b, 0xd7, 0xa6, 0xcb, 0xa5, 0x0f, 0x8b, 0x1a, 0xc3, 0xe7, 0x83, 0xd7,
+  0xc0, 0x40, 0xa5, 0x90, 0xb3, 0x35, 0xc7, 0xaf, 0xfd, 0xf9, 0xcf, 0x9e,
+  0x47, 0x8d, 0x38, 0x99, 0x40, 0xab, 0x0e, 0xc2, 0x42, 0xf5, 0xc4, 0xab,
+  0xa6, 0x92, 0x3f, 0x9b, 0xf4, 0x0e, 0x7e, 0x44, 0xca, 0xc1, 0xcf, 0x83,
+  0x1f, 0xe9, 0xcf, 0x9f, 0x7b, 0x8e, 0x51, 0x22, 0x04, 0x47, 0x84, 0x28,
+  0x37, 0x79, 0x0b, 0x88, 0xe7, 0x67, 0x5c, 0x9c, 0x2a, 0xf2, 0xaf, 0xd9,
+  0x77, 0x80, 0x83, 0x28, 0x39, 0x87, 0x32, 0x53, 0x55, 0x5b, 0x25, 0xf5,
+  0x54, 0x4a, 0x19, 0x11, 0xa5, 0xb8, 0xb5, 0x94, 0x70, 0x77, 0x4b, 0x29,
+  0xc4, 0x8b, 0x7d, 0xf3, 0xba, 0xb0, 0x7e, 0x71, 0x27, 0x6c, 0x27, 0xb5,
+  0x0c, 0x55, 0xe1, 0xd0, 0xc3, 0xe4, 0xd0, 0xd4, 0x1f, 0xf9, 0x60, 0xc3,
+  0x81, 0x25, 0x70, 0x7e, 0x94, 0x96, 0xd4, 0x15, 0x4f, 0xb0, 0x18, 0x5a,
+  0x33, 0x17, 0xa5, 0xe1, 0x92, 0x91, 0x74, 0x8a, 0xd5, 0x2d, 0xcf, 0x50,
+  0x93, 0x00, 0x13, 0x01, 0xdf, 0xd9, 0x08, 0x02, 0x91, 0x30, 0x32, 0xcb,
+  0x9c, 0x63, 0x47, 0xa6, 0x45, 0xa4, 0x86, 0x82, 0x1b, 0x73, 0xb2, 0xe4,
+  0xf9, 0xf2, 0xa6, 0xa4, 0x86, 0x1f, 0x40, 0x41, 0xa3, 0xa7, 0xe4, 0x19,
+  0x47, 0xb5, 0x01, 0xcc, 0xd7, 0xef, 0x18, 0x7a, 0xbc, 0xa4, 0xc3, 0xfa,
+  0x68, 0x77, 0x6f, 0x4d, 0x09, 0xcd, 0x4b, 0xe1, 0xf4, 0x3e, 0x8f, 0xbc,
+  0x04, 0xd0, 0x51, 0xcd, 0x92, 0x52, 0xb2, 0xff, 0x74, 0xef, 0xe9, 0x0e,
+  0x31, 0x92, 0x47, 0xc3, 0x7d, 0xe7, 0x1a, 0xa7, 0x23, 0x46, 0x63, 0x68,
+  0x5f, 0x9e, 0x61, 0x3d, 0x3e, 0xf6, 0x01, 0x50, 0x4b, 0x41, 0xf5, 0x3e,
+  0xbd, 0xce, 0x7c, 0x08, 0x38, 0x6d, 0x3a, 0x0d, 0xc9, 0x47, 0x82, 0x47,
+  0x31, 0xf7, 0xde, 0x28, 0xca, 0x22, 0x0d, 0x42, 0x96, 0xd5, 0x1a, 0xc8,
+  0x79, 0x85, 0xbc, 0x1c, 0xe3, 0x9c, 0x6e, 0xff, 0x9a, 0x4b, 0xae, 0xb3,
+  0x65, 0x39, 0x1b, 0xbb, 0xc2, 0x0d, 0x0c, 0x0c, 0xd3, 0xa5, 0xa6, 0x38,
+  0xf4, 0x00, 0x99, 0x01, 0xcc, 0x58, 0xe3, 0xfb, 0x00, 0x5e, 0x96, 0x67,
+  0xcf, 0x2c, 0x4d, 0xea, 0x3f, 0x03, 0xcd, 0x9e, 0xaf, 0xe4, 0xc9, 0x7d,
+  0xfb, 0x1e, 0xf9, 0x86, 0x28, 0xf3, 0x3d, 0x5b, 0xd8, 0x53, 0xbb, 0xa1,
+  0x24, 0x0f, 0x53, 0x9c, 0x22, 0xa9, 0x2c, 0x06, 0x40, 0xdf, 0x61, 0xf6,
+  0xd6, 0x0f, 0x24, 0x0c, 0x99, 0x0d, 0x84, 0x1d, 0xf5, 0x6a, 0x5d, 0x08,
+  0xfb, 0xb0, 0x1d, 0xfe, 0xa2, 0xe0, 0x83, 0xc0, 0x9b, 0x12, 0xe3, 0x98,
+  0x94, 0x9d, 0x10, 0xce, 0xf0, 0x70, 0xdc, 0xfe, 0x43, 0x75, 0x87, 0x84,
+  0x2c, 0xf6, 0xff, 0xfb, 0x91, 0xc5, 0xfe, 0xff, 0x47, 0x16, 0xff, 0x4c,
+  0xb2, 0x78, 0xd6, 0x45, 0x16, 0x8f, 0xfe, 0xfb, 0x91, 0xc5, 0xa3, 0xff,
+  0x8f, 0x2c, 0xfe, 0x89, 0x64, 0xb1, 0xff, 0xb4, 0x99, 0x7a, 0x04, 0x75,
+  0x92, 0x2e, 0x39, 0xd3, 0x2a, 0x23, 0x7c, 0x59, 0x21, 0x8c, 0x26, 0x1e,
+  0x89, 0xca, 0x49, 0x9a, 0x29, 0x12, 0xaa, 0xa4, 0x88, 0x23, 0x62, 0x40,
+  0x25, 0x03, 0x4c, 0x8a, 0x2b, 0xe8, 0x31, 0xf0, 0x5a, 0x3a, 0x1b, 0x26,
+  0xe7, 0xee, 0x2d, 0xe4, 0x8f, 0x70, 0x2a, 0xa5, 0xf8, 0x55, 0xb3, 0x2b,
+  0x08, 0x54, 0x90, 0x53, 0xfa, 0xf8, 0x12, 0x72, 0x14, 0x03, 0x83, 0x0e,
+  0xa2, 0xcc, 0x13, 0x7e, 0xc5, 0xdc, 0x7d, 0x68, 0x87, 0x35, 0xd0, 0xd4,
+  0x27, 0x0b, 0x58, 0x86, 0xda, 0x26, 0x49, 0x53, 0x8c, 0x0d, 0xe9, 0xab,
+  0x3f, 0x2c, 0xcb, 0x2c, 0xae, 0x44, 0xf1, 0x41, 0x5c, 0x61, 0xff, 0xc8,
+  0xca, 0x22, 0xb1, 0xb8, 0x24, 0xc5, 0xdc, 0x41, 0xc9, 0x16, 0x13, 0x13,
+  0xfc, 0x87, 0xdc, 0x6b, 0xa4, 0x65, 0xfc, 0x19, 0x95, 0xac, 0x04, 0x67,
+  0x89, 0x33, 0xe0, 0x5d, 0xea, 0xc2, 0x82, 0x45, 0xad, 0xdc, 0xec, 0xc8,
+  0x7e, 0xe1, 0x4c, 0x22, 0x46, 0x64, 0x74, 0x74, 0x0e, 0x58, 0x68, 0x61,
+  0xc3, 0x81, 0x41, 0x3b, 0xd7, 0x41, 0x95, 0xfb, 0xfc, 0x4a, 0xb0, 0x39,
+  0x64, 0x38, 0x0e, 0xa8, 0x7d, 0xd8, 0x21, 0xa7, 0xbf, 0xcc, 0x16, 0xf7,
+  0xe6, 0xd6, 0xf5, 0xce, 0x40, 0xa9, 0xe1, 0xad, 0xda, 0xbf, 0xab, 0xf6,
+  0x63, 0xde, 0x6d, 0x37, 0xc4, 0x78, 0x48, 0xcd, 0x31, 0xd7, 0x1d, 0xf1,
+  0x31, 0x2f, 0xdc, 0x32, 0x68, 0xf8, 0x4b, 0xb8, 0x16, 0x5b, 0xc8, 0x74,
+  0x30, 0x4b, 0x38, 0xfa, 0xb3, 0x16, 0x1f, 0x5c, 0x86, 0x6d, 0xb8, 0xcc,
+  0xc4, 0xbe, 0x51, 0xad, 0xc6, 0x7f, 0x63, 0x2e, 0x05, 0xc2, 0x9c, 0xa5,
+  0x7c, 0xb2, 0x9a, 0x35, 0xc8, 0x18, 0x8f, 0x7f, 0x35, 0x56, 0xbb, 0x6d,
+  0xdc, 0x1c, 0x7d, 0x08, 0x1b, 0xbd, 0x2b, 0x69, 0xa0, 0x74, 0x16, 0xb8,
+  0xf8, 0xa3, 0x49, 0x05, 0x9e, 0xea, 0x68, 0xdf, 0xed, 0x3c, 0xb1, 0xba,
+  0x50, 0xa9, 0x4f, 0x32, 0xdc, 0x2c, 0xb7, 0x9a, 0x2a, 0xc5, 0x9a, 0x47,
+  0x9e, 0x1f, 0x5f, 0xdb, 0x16, 0x51, 0x6b, 0x9f, 0xfd, 0x26, 0x55, 0xff,
+  0xcf, 0xfc, 0x4f, 0xb7, 0xc2, 0xd4, 0x00, 0xb9, 0xb4, 0xf0, 0x1d, 0x7e,
+  0x1c, 0x47, 0x03, 0xaf, 0xaf, 0xeb, 0xe0, 0x05, 0x7f, 0x2b, 0x3d, 0x3c,
+  0xdc, 0x36, 0x1c, 0x23, 0xbf, 0xa0, 0x83, 0xb7, 0x0b, 0x4b, 0x49, 0x36,
+  0x32, 0x5f, 0x3a, 0x84, 0x0a, 0x52, 0x8d, 0xcb, 0x85, 0xc4, 0xde, 0x88,
+  0x2f, 0x53, 0x8d, 0x3b, 0x09, 0x67, 0x97, 0x30, 0x90, 0x41, 0x1c, 0x34,
+  0xcf, 0x70, 0xaf, 0xcc, 0xf8, 0x60, 0xaf, 0xe2, 0xbd, 0x95, 0x5c, 0x32,
+  0x85, 0x4f, 0xb3, 0x58, 0x95, 0x65, 0x51, 0x9b, 0x89, 0x3e, 0x99, 0xb2,
+  0xe6, 0x51, 0xf2, 0xe5, 0xd0, 0x81, 0xc8, 0x6b, 0x1b, 0x61, 0xb5, 0x5d,
+  0xb8, 0x59, 0x6e, 0x70, 0xb5, 0xe4, 0xf8, 0xc3, 0x46, 0x60, 0xa4, 0x02,
+  0xa4, 0x18, 0xe5, 0x4a, 0xcf, 0x6d, 0x9f, 0x36, 0x1c, 0xae, 0xb8, 0xf2,
+  0x1c, 0x12, 0xdc, 0xfb, 0x22, 0x07, 0xcc, 0x21, 0x92, 0xe3, 0x3e, 0xb9,
+  0x8c, 0x67, 0x13, 0x3f, 0xbc, 0x1f, 0x94, 0x05, 0x4a, 0xab, 0x30, 0x44,
+  0x3d, 0x0e, 0x28, 0x71, 0x3a, 0x77, 0x2a, 0xb9, 0xd5, 0x44, 0xc4, 0x8b,
+  0xd4, 0xd5, 0x9d, 0xf0, 0xdb, 0x80, 0x51, 0x0a, 0x0a, 0x3e, 0x47, 0xcc,
+  0x4f, 0xb2, 0x0e, 0x0c, 0x38, 0x8f, 0x1a, 0xfa, 0xb1, 0x54, 0xfd, 0xfd,
+  0xe8, 0x3e, 0x91, 0x64, 0xd6, 0x8f, 0xdf, 0x2a, 0x1d, 0x97, 0x8a, 0xde,
+  0x29, 0x01, 0x67, 0xc4, 0x7d, 0xe9, 0x2f, 0x47, 0x60, 0xe1, 0xad, 0xa1,
+  0xe4, 0x2b, 0x14, 0xf5, 0xbb, 0x0b, 0xdf, 0x2e, 0xe1, 0x4b, 0x25, 0x69,
+  0x46, 0xe2, 0x87, 0x7e, 0xe1, 0x54, 0x3e, 0xdc, 0x0f, 0xd2, 0xc5, 0x3d,
+  0x5b, 0xd5, 0x3b, 0x27, 0xe0, 0xb2, 0x39, 0xd9, 0xe0, 0xc1, 0x08, 0x0e,
+  0xb9, 0x14, 0x0e, 0x68, 0x05, 0x32, 0x5a, 0x6c, 0x87, 0x61, 0x69, 0xce,
+  0x57, 0x91, 0xf1, 0x0f, 0x8f, 0xf2, 0x45, 0x2e, 0x40, 0xc0, 0x75, 0x80,
+  0x17, 0xa5, 0x91, 0x3a, 0x7a, 0x4c, 0x04, 0x0e, 0x47, 0xf1, 0x70, 0x40,
+  0x5b, 0xec, 0xdf, 0xea, 0x86, 0x8f, 0xdb, 0x71, 0xb9, 0x60, 0x25, 0x97,
+  0xdd, 0x18, 0x10, 0xaf, 0x5b, 0xb6, 0xf0, 0x70, 0x1e, 0x75, 0x4d, 0x19,
+  0x05, 0xf8, 0x1e, 0x9c, 0x30, 0x77, 0xbe, 0x16, 0xbd, 0x25, 0x09, 0x67,
+  0x6a, 0x33, 0x5b, 0xe7, 0xc8, 0x96, 0x49, 0xea, 0x1c, 0xdf, 0x4a, 0xaa,
+  0x01, 0xda, 0x04, 0xdc, 0x1f, 0xb3, 0x19, 0x5e, 0x96, 0xa0, 0x2f, 0x09,
+  0x31, 0x8e, 0x26, 0x0c, 0xe3, 0xaf, 0x80, 0x33, 0xca, 0x73, 0x7a, 0x1c,
+  0xbc, 0x5c, 0xd7, 0x1e, 0xa4, 0xee, 0x0a, 0xe6, 0x14, 0xfb, 0x3d, 0x2a,
+  0xe9, 0x88, 0x07, 0x96, 0x37, 0x43, 0xc2, 0x65, 0x8d, 0xa6, 0x88, 0x03,
+  0x79, 0x80, 0xac, 0xc3, 0x55, 0x92, 0xa0, 0x91, 0xf6, 0x08, 0xd4, 0x12,
+  0xfc, 0xeb, 0x16, 0x49, 0xfa, 0xef, 0x58, 0x25, 0xed, 0xab, 0x13, 0xf2,
+  0x30, 0x5c, 0xa6, 0x68, 0x46, 0xeb, 0x42, 0xdd, 0xd7, 0xec, 0xfc, 0xba,
+  0x70, 0xf7, 0xf6, 0xb4, 0xba, 0xb0, 0x70, 0xba, 0x27, 0x86, 0x99, 0x85,
+  0x31, 0xf7, 0xca, 0x7d, 0xdd, 0xfc, 0xd0, 0x71, 0x3b, 0x90, 0xd0, 0x3d,
+  0xac, 0x18, 0xa8, 0x0d, 0x52, 0x78, 0x50, 0x4f, 0x76, 0xd1, 0x35, 0x9f,
+  0xc2, 0x9c, 0x64, 0xce, 0x1c, 0xcf, 0xf3, 0x5b, 0xee, 0x22, 0x22, 0xc9,
+  0x1a, 0x7b, 0x88, 0x2e, 0x1a, 0x53, 0xe9, 0xb0, 0xe4, 0x46, 0x9b, 0xb7,
+  0x37, 0xdc, 0x05, 0xb7, 0xfd, 0x70, 0x8f, 0x68, 0x8a, 0x03, 0xbe, 0xbb,
+  0x7e, 0x6e, 0x33, 0xdd, 0xb7, 0x4e, 0x70, 0x0f, 0x2a, 0x46, 0x8a, 0x53,
+  0x89, 0xdf, 0xb7, 0x91, 0x59, 0xf5, 0x2e, 0x8f, 0x29, 0xa6, 0x38, 0x23,
+  0xeb, 0x21, 0xe8, 0xf3, 0x3a, 0x40, 0xa0, 0xe7, 0x9c, 0x5a, 0xbc, 0xbc,
+  0xb7, 0xfb, 0xf9, 0x6e, 0xa7, 0x93, 0x0f, 0x22, 0x84, 0xf9, 0xb4, 0x27,
+  0x59, 0x50, 0x64, 0x2c, 0xf7, 0x05, 0x26, 0x02, 0x8f, 0x91, 0x85, 0x39,
+  0xb1, 0xe3, 0xac, 0x8b, 0xf3, 0xc3, 0x8d, 0x96, 0xab, 0x79, 0x59, 0x4d,
+  0xb2, 0x0e, 0x07, 0xcd, 0xdc, 0x4d, 0xce, 0xd3, 0xe3, 0xdc, 0x49, 0x1d,
+  0x29, 0xaa, 0xae, 0x58, 0x94, 0x3a, 0xee, 0x78, 0x5d, 0x02, 0xe1, 0xdd,
+  0x59, 0x71, 0x43, 0x99, 0x4e, 0x1f, 0xdc, 0x6b, 0x6c, 0xca, 0x6a, 0xfc,
+  0x40, 0xf9, 0x04, 0x36, 0x1a, 0xba, 0xd2, 0xd4, 0xeb, 0x2b, 0x27, 0xf8,
+  0xdc, 0x27, 0x01, 0xdd, 0x92, 0x38, 0xb6, 0xa8, 0xc2, 0xc6, 0x3f, 0xbf,
+  0x72, 0xc2, 0xdf, 0x5d, 0xf0, 0xbb, 0x84, 0xba, 0xbb, 0x74, 0x7f, 0x0e,
+  0xeb, 0xf2, 0xd5, 0xdc, 0x8a, 0x40, 0xa8, 0x76, 0x78, 0xa2, 0x56, 0x67,
+  0x27, 0xca, 0xd4, 0x0d, 0xab, 0x46, 0xb9, 0x3c, 0x53, 0x44, 0x42, 0xa5,
+  0x53, 0x73, 0x03, 0x2b, 0x10, 0x2e, 0x42, 0x12, 0xc2, 0x32, 0x62, 0x1d,
+  0x60, 0x77, 0xcd, 0xcc, 0xd6, 0xce, 0xda, 0x54, 0x55, 0x96, 0x96, 0x24,
+  0x55, 0x71, 0xf8, 0x49, 0x30, 0xb9, 0xff, 0xc9, 0xed, 0xa2, 0x92, 0x9c,
+  0x47, 0xb6, 0xee, 0xf0, 0xfc, 0x59, 0xd5, 0xf3, 0x11, 0x50, 0xd1, 0xd8,
+  0xea, 0x5e, 0x8e, 0xf3, 0xba, 0x4c, 0x15, 0x77, 0x5f, 0x91, 0xc0, 0x03,
+  0xc7, 0xa4, 0x56, 0x58, 0xe6, 0xd7, 0x3a, 0x9d, 0x61, 0xc3, 0xe4, 0x7f,
+  0xa2, 0x53, 0x7d, 0x5b, 0x44, 0x17, 0xc0, 0x25, 0x7d, 0x75, 0xfc, 0xea,
+  0xec, 0xe2, 0xb8, 0x09, 0x32, 0x24, 0x90, 0xc3, 0x82, 0xb7, 0xdc, 0x1e,
+  0xdd, 0xdf, 0x38, 0x25, 0x43, 0xe5, 0x26, 0x39, 0xef, 0x06, 0x5e, 0x7c,
+  0xfe, 0xfd, 0xcb, 0xc0, 0x27, 0x61, 0x18, 0xf5, 0x01, 0x7e, 0x4d, 0xd1,
+  0x51, 0x8b, 0x81, 0x3d, 0x4b, 0x9c, 0x64, 0x6b, 0x35, 0xda, 0x6c, 0x7c,
+  0x82, 0xcb, 0xc8, 0x03, 0x70, 0x32, 0x1a, 0xc2, 0xc1, 0xab, 0x8a, 0x8d,
+  0x14, 0xae, 0xd1, 0xc8, 0x2f, 0x99, 0x01, 0xf5, 0x93, 0x33, 0x0b, 0x4c,
+  0xda, 0x49, 0x25, 0xdc, 0x89, 0x63, 0xa0, 0x86, 0x49, 0xdc, 0xd1, 0x58,
+  0xd7, 0x01, 0xbd, 0x74, 0x99, 0x74, 0x38, 0x82, 0x44, 0x22, 0x5e, 0x84,
+  0x75, 0x44, 0xe1, 0x2e, 0xfd, 0xe4, 0x6f, 0x52, 0x67, 0xe2, 0xca, 0xca,
+  0xac, 0xdb, 0xf0, 0x22, 0x22, 0x44, 0x9f, 0x5b, 0x15, 0x2b, 0x99, 0xc1,
+  0x50, 0x83, 0x4a, 0xdc, 0xca, 0x9b, 0x37, 0xff, 0xbc, 0xe9, 0xf5, 0x71,
+  0x49, 0x16, 0x8c, 0x73, 0x94, 0x05, 0x7d, 0xc3, 0x72, 0xbb, 0xb7, 0x87,
+  0x2e, 0x86, 0xcd, 0xf3, 0x99, 0xfb, 0x20, 0x9e, 0xc4, 0x66, 0x3c, 0xb4,
+  0x12, 0x81, 0xdd, 0x5e, 0x53, 0x2b, 0x00, 0x66, 0xde, 0x0d, 0x2b, 0x69,
+  0xa5, 0x7c, 0xc9, 0x5a, 0xe9, 0x07, 0xf8, 0xa1, 0xf0, 0xe2, 0x47, 0xc6,
+  0x13, 0x1f, 0x72, 0x80, 0x7a, 0x79, 0x5a, 0x71, 0xe4, 0xaf, 0x96, 0xd5,
+  0x03, 0x20, 0xa2, 0xea, 0x7e, 0x51, 0xc3, 0x93, 0x2c, 0x05, 0x12, 0x26,
+  0x45, 0x09, 0xe7, 0x7b, 0x12, 0x93, 0xb1, 0xdb, 0x2f, 0x24, 0x97, 0xb1,
+  0xad, 0xee, 0xd9, 0x93, 0x67, 0x7c, 0xf0, 0xe8, 0xdc, 0x57, 0x96, 0xe6,
+  0xac, 0xe1, 0xca, 0x88, 0x03, 0x6f, 0x8e, 0x79, 0x10, 0x05, 0x34, 0x71,
+  0x5b, 0xaa, 0x0e, 0x8c, 0xb3, 0x99, 0x24, 0x56, 0x8f, 0x82, 0x46, 0x86,
+  0x9d, 0x30, 0x2b, 0xe6, 0xde, 0x6b, 0x37, 0x67, 0x4a, 0x95, 0x30, 0x3a,
+  0x2d, 0x9c, 0x40, 0xfb, 0x90, 0xde, 0x6a, 0x04, 0x89, 0x9e, 0x06, 0x69,
+  0xbc, 0x6f, 0xbb, 0xff, 0xc0, 0xe8, 0x2c, 0xdb, 0x8d, 0xe6, 0x4b, 0x84,
+  0xc9, 0x2e, 0xa7, 0xad, 0x7f, 0xdd, 0x6e, 0xd6, 0x32, 0x64, 0xf7, 0x65,
+  0xbe, 0x58, 0x65, 0x0d, 0x1c, 0xad, 0x75, 0xcd, 0x5d, 0x81, 0x61, 0xd1,
+  0xe2, 0xb5, 0xb3, 0x71, 0xa4, 0xaa, 0x58, 0x5d, 0x2c, 0xf9, 0x6a, 0x15,
+  0x2e, 0xab, 0x7b, 0x1f, 0x07, 0x30, 0xa2, 0xe8, 0x02, 0x42, 0xbf, 0xc7,
+  0x82, 0xe9, 0x6c, 0xd7, 0x17, 0x89, 0x1c, 0x0b, 0x04, 0x74, 0x28, 0x35,
+  0x6a, 0xf2, 0x34, 0x9c, 0xda, 0x34, 0x57, 0xba, 0x30, 0x3b, 0x58, 0xd3,
+  0xdf, 0x9b, 0x2c, 0x49, 0x01, 0x53, 0xf4, 0x1c, 0x05, 0x40, 0x97, 0x73,
+  0x63, 0x76, 0x8e, 0x99, 0x11, 0x85, 0xc4, 0x09, 0xc0, 0x52, 0x85, 0x55,
+  0x73, 0x07, 0xd1, 0x36, 0xd7, 0x77, 0x21, 0x71, 0x6b, 0x50, 0xd5, 0xf7,
+  0xa2, 0xc6, 0x67, 0x73, 0x86, 0x96, 0x40, 0x75, 0x50, 0x40, 0x22, 0x6a,
+  0x71, 0x0e, 0xa4, 0x3f, 0x0c, 0xe2, 0x5a, 0xb5, 0x42, 0x06, 0xaf, 0x9c,
+  0x45, 0x59, 0xa5, 0x7e, 0xb3, 0x5e, 0x71, 0x36, 0x84, 0x43, 0xc1, 0x91,
+  0xc5, 0x91, 0x29, 0xad, 0xa5, 0xb8, 0x18, 0xc6, 0xe4, 0xe6, 0xba, 0x5c,
+  0x0a, 0x04, 0x41, 0xd2, 0x91, 0xd3, 0x1c, 0xc6, 0x2e, 0xc9, 0xa3, 0xc6,
+  0x29, 0x5c, 0x35, 0x2e, 0x79, 0xf7, 0xe4, 0x65, 0x03, 0xbb, 0x46, 0x22,
+  0x2b, 0xc7, 0xf7, 0xdd, 0xcd, 0x79, 0xf4, 0x1c, 0x8e, 0xbe, 0xf1, 0x77,
+  0x89, 0x6b, 0xca, 0x4b, 0x70, 0x63, 0x8b, 0xaa, 0xc6, 0x77, 0xdd, 0xcd,
+  0x69, 0x2b, 0x12, 0xc0, 0x23, 0x6d, 0x58, 0xc3, 0x20, 0x15, 0xc3, 0x6b,
+  0x64, 0x62, 0x60, 0xcc, 0x36, 0xeb, 0x66, 0x18, 0x2f, 0xc6, 0xbc, 0x98,
+  0x4a, 0x64, 0xc7, 0x47, 0xd7, 0x62, 0x0e, 0xe5, 0xca, 0xd8, 0xa6, 0x1a,
+  0x28, 0xab, 0xa0, 0x24, 0xa8, 0xb4, 0x33, 0xce, 0x5d, 0x48, 0x5f, 0x77,
+  0x73, 0x7e, 0xaa, 0x10, 0x6b, 0xd0, 0x3c, 0xde, 0x0c, 0xa7, 0xb0, 0x48,
+  0x8a, 0x49, 0x1d, 0xcc, 0x80, 0x1f, 0xe8, 0x6e, 0x4e, 0x7d, 0xcd, 0xf1,
+  0xcc, 0xd8, 0x52, 0x85, 0x50, 0xb3, 0x87, 0x67, 0x26, 0x0f, 0x46, 0x9b,
+  0x4c, 0x1f, 0x0a, 0x13, 0x8f, 0x76, 0x78, 0xfd, 0xcc, 0xba, 0x76, 0x18,
+  0x23, 0x68, 0x6f, 0xb0, 0x45, 0x25, 0x94, 0x49, 0x27, 0x23, 0xf7, 0xa8,
+  0x4e, 0xb2, 0x3a, 0x1a, 0x65, 0xf7, 0xc0, 0x06, 0x6b, 0x2f, 0xd1, 0x2a,
+  0xcc, 0x16, 0x8a, 0xdf, 0xfe, 0x4e, 0x32, 0xe6, 0x19, 0xc2, 0xaf, 0x7e,
+  0xf7, 0xf0, 0x82, 0xcc, 0x16, 0x56, 0x7d, 0x05, 0xe8, 0x2c, 0x8e, 0x59,
+  0x68, 0x90, 0x74, 0xda, 0xac, 0xcb, 0xa2, 0x88, 0x3b, 0x6b, 0xc8, 0xde,
+  0xf7, 0xe7, 0xcb, 0x5c, 0x2c, 0x8b, 0x5c, 0xf0, 0x56, 0xb5, 0x32, 0x4d,
+  0xd2, 0x18, 0x62, 0xd2, 0x55, 0x0e, 0x21, 0x48, 0xe4, 0x88, 0xa6, 0x38,
+  0xbf, 0x65, 0xd3, 0x94, 0x13, 0x0d, 0xde, 0xad, 0x0f, 0x8a, 0x01, 0x1d,
+  0xcb, 0xe3, 0x9e, 0x8e, 0x65, 0x56, 0x2e, 0xda, 0xcb, 0x05, 0xd4, 0x7e,
+  0x7c, 0xb7, 0x9b, 0x5d, 0xba, 0x33, 0xd9, 0x1e, 0xdf, 0xf2, 0x6e, 0x6a,
+  0x9d, 0xf3, 0xaf, 0xd6, 0x71, 0x58, 0xf5, 0xd3, 0x21, 0x1e, 0xb0, 0xe8,
+  0x2a, 0x8d, 0x5d, 0x99, 0x60, 0xbd, 0x66, 0x29, 0xba, 0xc3, 0x80, 0xa3,
+  0xce, 0x4b, 0xa9, 0xd3, 0x6b, 0x88, 0xce, 0xd8, 0x8e, 0xf5, 0x8b, 0xa3,
+  0x4f, 0xfb, 0x21, 0x0a, 0x7f, 0x0f, 0xa1, 0xbf, 0xe2, 0x05, 0x5a, 0xcf,
+  0xf0, 0xb4, 0xd7, 0xd6, 0x81, 0x98, 0x66, 0x5c, 0xf9, 0x49, 0x49, 0x81,
+  0x23, 0xc5, 0xa5, 0x21, 0xe3, 0x7b, 0x0f, 0x11, 0xd2, 0xda, 0x35, 0x2e,
+  0xe7, 0x1f, 0x39, 0xe4, 0xf4, 0x80, 0x9f, 0x15, 0x57, 0x61, 0x09, 0x66,
+  0x15, 0x9d, 0x4c, 0x3d, 0xc6, 0x6b, 0x56, 0x7e, 0xdd, 0x08, 0x1a, 0x54,
+  0xf8, 0xd0, 0x48, 0xf8, 0xc1, 0xae, 0xc1, 0x04, 0x05, 0xa3, 0xd8, 0x8d,
+  0x71, 0x1f, 0x70, 0xca, 0xee, 0xe6, 0x74, 0xb8, 0xfe, 0x3d, 0x5d, 0x9e,
+  0xbe, 0x83, 0xa1, 0x50, 0x45, 0x9e, 0xf5, 0xe7, 0x98, 0x36, 0xec, 0x80,
+  0xff, 0x22, 0x06, 0xc1, 0xea, 0xda, 0x2c, 0x38, 0x84, 0x83, 0x12, 0x91,
+  0xe4, 0x08, 0x25, 0x7a, 0x8e, 0x7f, 0xbe, 0xe8, 0xc4, 0xdc, 0x36, 0x0d,
+  0x6b, 0x87, 0xa1, 0xbf, 0x10, 0x65, 0x09, 0xbf, 0x21, 0xb3, 0x13, 0x46,
+  0x72, 0xd5, 0x60, 0xa4, 0x2d, 0x8e, 0x5b, 0x4b, 0xa5, 0x76, 0x12, 0x2a,
+  0xb2, 0x4f, 0x22, 0xcb, 0x2a, 0xa7, 0xed, 0x6c, 0x6b, 0x1d, 0x19, 0xa8,
+  0xea, 0x3b, 0xa4, 0xaa, 0xf7, 0x4d, 0x1b, 0x53, 0x79, 0xc9, 0xc2, 0x11,
+  0xf9, 0x93, 0x54, 0x53, 0x09, 0x13, 0xa0, 0x8e, 0xb5, 0x7d, 0xbe, 0x17,
+  0xdc, 0x6f, 0x15, 0x07, 0x42, 0xc3, 0xbf, 0xeb, 0x25, 0x79, 0xc6, 0x63,
+  0x8d, 0x16, 0x70, 0x77, 0xf0, 0xf8, 0xd9, 0xb3, 0xc6, 0x95, 0x16, 0xea,
+  0xcd, 0x4f, 0x76, 0x77, 0x05, 0xa4, 0xb6, 0xfd, 0x1a, 0x7d, 0x31, 0x78,
+  0x86, 0x17, 0x9b, 0xaf, 0x09, 0xbe, 0xf5, 0xfa, 0xf7, 0x06, 0xfc, 0x4d,
+  0x47, 0x77, 0xd0, 0xee, 0xd7, 0xbe, 0xf5, 0x8c, 0xbb, 0xeb, 0x78, 0x0b,
+  0x0f, 0xcb, 0x3a, 0x16, 0x57, 0x57, 0x0c, 0xd2, 0xc8, 0x4f, 0x4a, 0x4d,
+  0xd7, 0xa2, 0xbc, 0x4b, 0xcb, 0x69, 0x3c, 0xdd, 0xdd, 0xfe, 0x60, 0x6f,
+  0xdd, 0x74, 0x61, 0x11, 0xe0, 0x91, 0x60, 0x3b, 0x59, 0x81, 0x22, 0xe1,
+  0x79, 0xeb, 0x9b, 0xed, 0xae, 0xd9, 0x7f, 0xb6, 0xbb, 0xdb, 0x7f, 0xca,
+  0xff, 0x3e, 0x7b, 0xb6, 0xd6, 0x41, 0xe5, 0xfb, 0x78, 0x64, 0x53, 0x6b,
+  0x8c, 0x96, 0xda, 0xe9, 0x68, 0x7d, 0x8f, 0x5a, 0xdd, 0x7b, 0xf6, 0xac,
+  0xcf, 0xbd, 0x3c, 0xf9, 0xa4, 0xd6, 0xeb, 0xbb, 0xc2, 0xdb, 0x59, 0xf8,
+  0x75, 0x4f, 0x8e, 0x55, 0x6b, 0x06, 0xac, 0x0d, 0xb0, 0x0b, 0x94, 0xb1,
+  0x7b, 0x13, 0x8b, 0x65, 0x36, 0x00, 0x69, 0x31, 0xe0, 0x07, 0xf5, 0xa1,
+  0x10, 0x28, 0xb0, 0x44, 0xfe, 0x2f, 0x14, 0x4c, 0x51, 0x58, 0x52, 0x1f,
+  0x62, 0x61, 0xc6, 0x7c, 0x9f, 0x76, 0x71, 0x26, 0x76, 0xb4, 0x6b, 0xc6,
+  0x0d, 0xb6, 0xec, 0xe0, 0x2a, 0xd9, 0x22, 0x72, 0xd9, 0x86, 0xf5, 0x40,
+  0x00, 0x66, 0xd5, 0xb7, 0xb9, 0x89, 0x60, 0x40, 0x81, 0x88, 0xda, 0x64,
+  0x65, 0x82, 0x73, 0xd7, 0xf2, 0x6c, 0x36, 0x75, 0x4e, 0x3f, 0x0b, 0xe2,
+  0x97, 0x27, 0x07, 0xf2, 0x8c, 0x1c, 0x34, 0x68, 0x81, 0x1f, 0xb4, 0xee,
+  0x11, 0x87, 0x62, 0xb4, 0x7a, 0x4d, 0x1c, 0xbc, 0xaf, 0xc7, 0xa4, 0x93,
+  0xaa, 0x0c, 0x08, 0xfd, 0xf3, 0xd3, 0xdc, 0xac, 0xda, 0x00, 0x75, 0x59,
+  0xb3, 0x44, 0xe9, 0x34, 0xb3, 0x82, 0x1f, 0x45, 0x13, 0x81, 0xcd, 0xbd,
+  0x2f, 0x26, 0x9c, 0x95, 0x04, 0xa5, 0xfb, 0x43, 0x86, 0x24, 0x0e, 0xcb,
+  0x19, 0x95, 0x14, 0x2e, 0xd6, 0x6a, 0xef, 0xd2, 0x32, 0xb3, 0x6c, 0x77,
+  0x52, 0xb6, 0x8d, 0x03, 0xb8, 0xba, 0x74, 0x9a, 0xb1, 0xad, 0xe8, 0x4f,
+  0x3e, 0x1b, 0xd1, 0x8a, 0xab, 0x88, 0xa7, 0xd3, 0x8a, 0x92, 0x21, 0xb9,
+  0x9f, 0x7d, 0x1b, 0x52, 0xdf, 0x22, 0x8c, 0xbd, 0xe7, 0xfb, 0x86, 0x99,
+  0x87, 0x45, 0x3b, 0x0a, 0x6c, 0xfe, 0x46, 0x2b, 0xe0, 0xfe, 0x3a, 0xab,
+  0x03, 0x04, 0x7a, 0xcb, 0x2b, 0xf4, 0xb3, 0x00, 0x3b, 0xe2, 0x2d, 0x02,
+  0x63, 0x92, 0xc5, 0x37, 0x70, 0x4a, 0x6f, 0x67, 0x58, 0x5a, 0x91, 0x6d,
+  0x45, 0x20, 0x6b, 0xec, 0x18, 0xed, 0x95, 0x63, 0x82, 0xb4, 0x69, 0xc9,
+  0x56, 0x10, 0xf3, 0x00, 0xda, 0x0a, 0xf4, 0x6e, 0xab, 0xf6, 0x50, 0x88,
+  0x03, 0x7f, 0x7b, 0x28, 0x03, 0x80, 0x6f, 0x49, 0x76, 0x82, 0xd5, 0xeb,
+  0xc6, 0x96, 0x66, 0x1f, 0x6a, 0x54, 0x67, 0xc1, 0x93, 0x76, 0x2f, 0x8d,
+  0x4e, 0xfe, 0xd7, 0xf1, 0xf0, 0xb7, 0x88, 0xcc, 0x6d, 0x59, 0x1a, 0x2f,
+  0x82, 0xbc, 0x23, 0x7e, 0xad, 0x13, 0xf7, 0x58, 0x32, 0xc9, 0x82, 0xb3,
+  0xe5, 0xf5, 0xef, 0x20, 0x3e, 0x17, 0x34, 0x83, 0xa4, 0x39, 0x87, 0xf8,
+  0x18, 0x21, 0xc9, 0xd4, 0xe9, 0x7c, 0xd9, 0x91, 0xae, 0xd6, 0x37, 0xc0,
+  0x44, 0x03, 0x7e, 0x64, 0x1b, 0x87, 0x8b, 0x04, 0xd1, 0xd0, 0xe7, 0x58,
+  0x16, 0x09, 0xf2, 0xe8, 0x64, 0xdb, 0xb9, 0xe2, 0x1e, 0x0b, 0x4c, 0x58,
+  0x00, 0xee, 0x2b, 0x34, 0x19, 0xf3, 0x4d, 0x4c, 0x3a, 0x29, 0x1e, 0xef,
+  0x4c, 0x74, 0x15, 0x5c, 0x8b, 0x30, 0x3b, 0xc8, 0x89, 0x43, 0x32, 0x3f,
+  0x29, 0x2d, 0xcd, 0x61, 0x4b, 0xf0, 0xb1, 0x84, 0xe5, 0x38, 0x3a, 0xf2,
+  0x0d, 0x2a, 0xba, 0xf0, 0x4b, 0x49, 0xe1, 0x91, 0xae, 0x01, 0x4d, 0x26,
+  0x0a, 0x84, 0x60, 0x9c, 0x55, 0x0d, 0x88, 0xfb, 0x2c, 0xb3, 0xa2, 0x55,
+  0xf2, 0x78, 0x54, 0xb2, 0x95, 0x53, 0xc9, 0x61, 0x5c, 0xe0, 0x7c, 0x63,
+  0x1f, 0xaf, 0x5d, 0xc5, 0xd8, 0xff, 0xd9, 0xf5, 0x74, 0xa0, 0x42, 0x53,
+  0xf3, 0x0c, 0xf3, 0x2a, 0xdc, 0xb9, 0xa0, 0x34, 0x57, 0xda, 0x12, 0x0e,
+  0x06, 0x17, 0x2b, 0x91, 0xce, 0xd4, 0x6a, 0xc1, 0xb8, 0x4e, 0x30, 0xbe,
+  0xbb, 0x3c, 0x33, 0xd8, 0xd0, 0xa2, 0x99, 0xd6, 0x28, 0x27, 0x15, 0xd4,
+  0xc1, 0x41, 0x3a, 0x99, 0x00, 0x25, 0x2f, 0xa6, 0xfe, 0x6c, 0x5a, 0xc9,
+  0x1f, 0x31, 0x4d, 0x72, 0xf0, 0x2f, 0xf0, 0xe3, 0xa2, 0xdc, 0x6c, 0xea,
+  0x17, 0xe5, 0x69, 0xfb, 0xb4, 0x12, 0x77, 0x51, 0x49, 0xa8, 0x86, 0x3f,
+  0x35, 0x48, 0x99, 0xe3, 0x30, 0x8e, 0x87, 0x92, 0xb8, 0xc5, 0x80, 0xd9,
+  0x0c, 0x17, 0x49, 0x25, 0x3b, 0x8b, 0x17, 0x95, 0x67, 0xed, 0x32, 0x15,
+  0xab, 0x4e, 0x4b, 0xed, 0x34, 0x4b, 0x2d, 0xe5, 0x9b, 0x36, 0x95, 0xcb,
+  0x50, 0x47, 0x69, 0x7b, 0x77, 0x59, 0x99, 0x79, 0xbc, 0x49, 0xc4, 0x4a,
+  0xd1, 0xe9, 0x1b, 0x26, 0xa3, 0x82, 0x9e, 0xef, 0xa8, 0x07, 0x62, 0xf9,
+  0x0b, 0x0d, 0xf8, 0x39, 0x0c, 0xc7, 0x97, 0x9f, 0xe4, 0x04, 0x3d, 0x31,
+  0x00, 0x37, 0xe7, 0xdb, 0x81, 0xa3, 0xc2, 0x86, 0xda, 0x71, 0xe6, 0x76,
+  0xd5, 0xe1, 0x07, 0x09, 0xc3, 0xe9, 0x0d, 0x88, 0xce, 0x06, 0x3d, 0xcd,
+  0x1e, 0x63, 0x88, 0x97, 0xa0, 0xb9, 0xe1, 0x03, 0x8e, 0xfb, 0xbd, 0x67,
+  0xcd, 0x98, 0x36, 0x2e, 0x49, 0x33, 0x23, 0x7e, 0xfe, 0x9c, 0x9d, 0x61,
+  0xf0, 0x85, 0x1d, 0xac, 0xc9, 0xe1, 0x39, 0x37, 0x0f, 0x0b, 0x17, 0x4b,
+  0xa7, 0x91, 0x20, 0x40, 0xdd, 0xb2, 0x3a, 0xae, 0x44, 0x1c, 0x74, 0x13,
+  0x45, 0x0e, 0x85, 0xcb, 0x4b, 0x59, 0xa6, 0x79, 0x39, 0x8c, 0x3c, 0x6c,
+  0x86, 0x91, 0xe4, 0xa3, 0xf1, 0x5d, 0x6d, 0x49, 0x30, 0x24, 0x8b, 0x84,
+  0xdc, 0x62, 0xa4, 0x51, 0x2b, 0x3f, 0xbc, 0x4e, 0x6e, 0x77, 0x23, 0x11,
+  0xf8, 0x22, 0xc5, 0xe1, 0x86, 0xb5, 0x81, 0x53, 0x23, 0xef, 0x72, 0xe0,
+  0xe4, 0x32, 0x52, 0xe2, 0xec, 0x3e, 0xd1, 0x49, 0x4f, 0x03, 0x28, 0xf9,
+  0x08, 0x75, 0x41, 0x7d, 0x28, 0x9c, 0xc9, 0xca, 0xa7, 0x9f, 0x8f, 0x15,
+  0xcd, 0xaf, 0x90, 0x04, 0xbe, 0x9d, 0xac, 0x9e, 0xec, 0x08, 0x98, 0x49,
+  0x02, 0x0a, 0x5f, 0xa4, 0x92, 0x62, 0x64, 0xda, 0x41, 0x54, 0x4e, 0xb7,
+  0x65, 0x1a, 0x67, 0x07, 0x8f, 0xf0, 0x8f, 0xd0, 0x77, 0xe8, 0x33, 0x72,
+  0x82, 0xe4, 0xc9, 0x0e, 0x03, 0xad, 0xc5, 0xce, 0xbb, 0xe5, 0x76, 0x7e,
+  0x37, 0xc3, 0x0b, 0x69, 0x5c, 0x12, 0x78, 0x41, 0xc0, 0xe8, 0x24, 0x0d,
+  0xa1, 0x83, 0x7a, 0x51, 0xf3, 0xde, 0x5d, 0x3b, 0x2e, 0xd6, 0xab, 0x09,
+  0xd5, 0xe0, 0x60, 0xab, 0x74, 0xd9, 0x74, 0x1c, 0x51, 0xec, 0xd1, 0x5c,
+  0x07, 0x21, 0x71, 0x5b, 0x96, 0x8f, 0x0b, 0x5c, 0x84, 0x4f, 0x8f, 0xec,
+  0xf1, 0xc9, 0xa4, 0x6c, 0x70, 0x9e, 0x82, 0xe7, 0x70, 0x4c, 0x1e, 0x5a,
+  0x56, 0xf3, 0x68, 0xbc, 0x71, 0xba, 0xb5, 0x0f, 0x07, 0xaf, 0xec, 0x0d,
+  0x1f, 0x35, 0xcf, 0x00, 0xab, 0x84, 0x5d, 0x68, 0xf2, 0xec, 0x5b, 0x48,
+  0x15, 0xd2, 0x08, 0x10, 0xf8, 0x12, 0x9e, 0xc4, 0xfc, 0x5e, 0x8c, 0x0c,
+  0x99, 0x86, 0xaa, 0x88, 0xcb, 0x1f, 0x6b, 0xc6, 0xeb, 0x24, 0xb8, 0xfb,
+  0x51, 0xe8, 0x85, 0xf7, 0x1e, 0x19, 0x58, 0xa6, 0x74, 0x8d, 0xeb, 0xd8,
+  0x6b, 0x44, 0x32, 0x6b, 0xb5, 0x1c, 0x33, 0x27, 0x83, 0x43, 0x7f, 0xb5,
+  0x1c, 0xc6, 0x58, 0xf7, 0x0a, 0x82, 0x84, 0xa8, 0x5f, 0x79, 0x9f, 0xba,
+  0xdf, 0x0d, 0x53, 0xe0, 0x20, 0xb4, 0x69, 0x2c, 0x69, 0x15, 0x54, 0x1a,
+  0x8a, 0xf7, 0x4d, 0x39, 0x29, 0xfb, 0xaf, 0xdc, 0x7c, 0x65, 0xba, 0x92,
+  0xbb, 0x22, 0x48, 0x36, 0x07, 0xb4, 0x20, 0x5a, 0x88, 0xa6, 0x2f, 0x99,
+  0x68, 0x10, 0x83, 0x1e, 0x7f, 0xf8, 0x10, 0xef, 0x84, 0xaf, 0x9b, 0xca,
+  0x7c, 0xca, 0x1c, 0xc5, 0x4f, 0x3e, 0x7c, 0x68, 0x7e, 0xf9, 0x50, 0x39,
+  0x4c, 0xd8, 0xe4, 0xc6, 0x85, 0xe4, 0xdb, 0xcb, 0x6a, 0xa5, 0x1d, 0xeb,
+  0x28, 0x8a, 0xd2, 0x5d, 0x9a, 0x77, 0xe1, 0x41, 0xaa, 0xf6, 0xa7, 0xde,
+  0x72, 0x7f, 0x47, 0x30, 0xf8, 0xca, 0x0d, 0x9d, 0x48, 0xa9, 0x11, 0xa3,
+  0x14, 0xaf, 0x0d, 0xd2, 0xba, 0xad, 0x2c, 0xcb, 0xa9, 0x1d, 0xa4, 0x90,
+  0xe6, 0xba, 0xec, 0x39, 0xea, 0x4c, 0xd6, 0xf9, 0x8c, 0x5f, 0x43, 0xf5,
+  0x28, 0x6a, 0x61, 0x8f, 0x96, 0x3f, 0x5f, 0xac, 0xea, 0xcc, 0x80, 0x8e,
+  0xd0, 0xa7, 0x9d, 0xc7, 0xae, 0x65, 0x9f, 0xc1, 0xc8, 0x6f, 0x7e, 0x7d,
+  0xc0, 0x52, 0x07, 0x48, 0x00, 0x18, 0x97, 0xc2, 0x6e, 0x59, 0x04, 0xb3,
+  0x90, 0xec, 0x00, 0xaf, 0x76, 0x1d, 0x66, 0x77, 0x09, 0x69, 0x04, 0x6b,
+  0xf6, 0x81, 0x56, 0x5b, 0x42, 0xfd, 0x12, 0x64, 0x2e, 0x92, 0xa6, 0xc7,
+  0x9c, 0xeb, 0xba, 0x28, 0x69, 0x53, 0xe7, 0xc3, 0x00, 0xcd, 0x21, 0x0a,
+  0x1a, 0x90, 0xae, 0x5c, 0x55, 0x29, 0xda, 0x06, 0x5f, 0x15, 0xb5, 0x2e,
+  0x6a, 0x15, 0x52, 0x13, 0x2b, 0xa4, 0xa0, 0x77, 0x81, 0x8d, 0xfb, 0xa1,
+  0xab, 0x68, 0x3f, 0x3c, 0x86, 0xbf, 0x7d, 0xce, 0x4f, 0xb0, 0x46, 0x0f,
+  0xd4, 0xc2, 0xf2, 0xa9, 0x78, 0xd5, 0x2c, 0xcb, 0x96, 0xb6, 0x62, 0x5a,
+  0xef, 0x55, 0x4f, 0xa3, 0x1d, 0x46, 0x48, 0x01, 0x42, 0x85, 0x38, 0xf6,
+  0xeb, 0x0e, 0x38, 0x6e, 0x6f, 0xf6, 0x3b, 0x19, 0x28, 0x75, 0x27, 0x17,
+  0x01, 0x9e, 0xb3, 0x13, 0x66, 0xd6, 0x9f, 0x48, 0xbf, 0x65, 0x18, 0x8b,
+  0xdb, 0x36, 0x47, 0x34, 0xba, 0xd8, 0xdb, 0xed, 0x48, 0xf8, 0xae, 0xa2,
+  0xee, 0x10, 0x07, 0x33, 0xa9, 0x10, 0xcf, 0x72, 0x8f, 0x72, 0x3f, 0x64,
+  0x1a, 0x2a, 0x40, 0xe5, 0xd0, 0x71, 0x16, 0xac, 0x85, 0xac, 0x60, 0xcc,
+  0x6a, 0x11, 0xf8, 0xad, 0xa7, 0x25, 0x4c, 0x69, 0x34, 0x65, 0xdd, 0x46,
+  0x1f, 0x0e, 0x3e, 0x84, 0x8b, 0x8a, 0x2a, 0x75, 0xfd, 0x73, 0x08, 0xe2,
+  0xa3, 0xf5, 0xd1, 0x2e, 0xf5, 0xd8, 0xc9, 0xf5, 0xa3, 0xcc, 0x9e, 0xed,
+  0x22, 0x8e, 0x25, 0x87, 0xc8, 0x3c, 0xbe, 0x96, 0x91, 0x2a, 0x50, 0x91,
+  0x19, 0x4c, 0x39, 0x8b, 0x8d, 0x0a, 0x00, 0x0f, 0x29, 0x4f, 0x83, 0x8b,
+  0x8c, 0x6d, 0x31, 0x82, 0x90, 0x0e, 0x6d, 0x9b, 0x3f, 0x06, 0x36, 0xa8,
+  0x46, 0x89, 0xa0, 0xff, 0x08, 0x31, 0x01, 0xa8, 0xe1, 0xc2, 0x6d, 0xa6,
+  0x1d, 0xd5, 0x82, 0xde, 0x14, 0x9c, 0xcb, 0xec, 0xea, 0x01, 0xb8, 0x76,
+  0xf4, 0xcd, 0x18, 0x1a, 0x1c, 0xed, 0x58, 0x96, 0x02, 0x35, 0xd1, 0x6f,
+  0x14, 0x1b, 0xb6, 0x61, 0x23, 0x49, 0x5d, 0xaa, 0xa1, 0x23, 0x73, 0x59,
+  0xae, 0xb8, 0x8e, 0x88, 0x35, 0x30, 0x65, 0xf6, 0x5b, 0x22, 0xe8, 0x81,
+  0xa7, 0xd3, 0x51, 0xd9, 0x08, 0x1b, 0x40, 0x6d, 0xe4, 0x8c, 0x6a, 0x7a,
+  0x69, 0x2c, 0x25, 0xae, 0x9b, 0xa8, 0x08, 0x2f, 0x3a, 0x98, 0xcd, 0x2a,
+  0xa8, 0xed, 0xc2, 0x4d, 0xf4, 0x15, 0xfe, 0xa9, 0x51, 0xf8, 0x6e, 0x98,
+  0xb8, 0x02, 0x28, 0xdd, 0x78, 0x95, 0xc4, 0xc2, 0x40, 0xbb, 0xb5, 0xd8,
+  0x33, 0xac, 0xac, 0x9a, 0x63, 0xb5, 0xff, 0x44, 0x26, 0x55, 0xa1, 0xd0,
+  0x67, 0x3e, 0x8b, 0x23, 0xee, 0x47, 0xf9, 0x4c, 0x75, 0xb1, 0xbf, 0xaf,
+  0x72, 0x9a, 0x8e, 0x24, 0xaf, 0xbf, 0x44, 0x2d, 0xec, 0x4a, 0x03, 0x77,
+  0xaf, 0x21, 0x85, 0x49, 0x04, 0x11, 0x34, 0x01, 0xe5, 0x2b, 0x6b, 0x8a,
+  0xdc, 0x03, 0x44, 0x5b, 0x50, 0xfe, 0x05, 0xdb, 0x79, 0x4e, 0xb7, 0xd4,
+  0xd0, 0x61, 0x14, 0x13, 0x4f, 0xe8, 0x80, 0xef, 0x06, 0x0c, 0x54, 0x75,
+  0x1b, 0x4b, 0xa0, 0xfd, 0x46, 0xf8, 0x38, 0x9c, 0xf6, 0xea, 0x86, 0xa8,
+  0x39, 0x23, 0x81, 0x34, 0xbf, 0x1d, 0x01, 0xd8, 0xb1, 0x32, 0xb6, 0xdc,
+  0x92, 0x45, 0x26, 0xb7, 0xc9, 0xa6, 0x11, 0xa6, 0x57, 0xa5, 0xd5, 0x6c,
+  0x90, 0xb7, 0x09, 0x5f, 0xd0, 0xe3, 0x7c, 0x80, 0x8e, 0x97, 0x21, 0x80,
+  0x18, 0x35, 0x3a, 0x64, 0xf8, 0xc7, 0x08, 0x53, 0xee, 0x01, 0x76, 0xf3,
+  0x68, 0xaf, 0xa1, 0x0a, 0x8d, 0xb0, 0x15, 0xb4, 0xb2, 0x03, 0xac, 0x62,
+  0x37, 0xae, 0xab, 0xf1, 0xf3, 0x81, 0x14, 0xc5, 0x0d, 0x2a, 0x26, 0xf0,
+  0x96, 0x40, 0x1c, 0xf2, 0x7b, 0x50, 0x01, 0x88, 0x8d, 0x6d, 0x21, 0x51,
+  0x65, 0x5c, 0xc4, 0x2f, 0x34, 0xe6, 0x5c, 0xcd, 0x24, 0x58, 0xaa, 0x9f,
+  0x28, 0xc2, 0x49, 0x22, 0x70, 0x27, 0x02, 0x74, 0x72, 0xc9, 0xdc, 0x48,
+  0x82, 0xf4, 0x38, 0x99, 0xf6, 0xf2, 0x74, 0x14, 0xa6, 0x7d, 0xab, 0xf9,
+  0x20, 0xe6, 0x3c, 0x9c, 0x76, 0x26, 0xf2, 0x33, 0x2c, 0x91, 0x28, 0x75,
+  0x19, 0xbe, 0xe1, 0x8a, 0x5d, 0x8a, 0x5d, 0xd5, 0x4a, 0x12, 0xa8, 0xd9,
+  0xac, 0x4d, 0x91, 0xd2, 0xf1, 0x30, 0x49, 0xc2, 0x12, 0xeb, 0x9c, 0xec,
+  0x4d, 0x83, 0x1f, 0x58, 0xf6, 0x39, 0xb3, 0x08, 0x4c, 0x87, 0x78, 0xda,
+  0xdf, 0x45, 0x77, 0x16, 0x15, 0x60, 0x10, 0x59, 0x41, 0xea, 0x84, 0x51,
+  0xf4, 0x66, 0x70, 0x69, 0x67, 0x8b, 0x49, 0x79, 0xdf, 0xc0, 0xfe, 0x9d,
+  0x7e, 0x42, 0x31, 0xaf, 0xf0, 0xba, 0x63, 0x38, 0x40, 0x66, 0x49, 0x8c,
+  0x80, 0xab, 0xf5, 0xdd, 0xe8, 0x13, 0x37, 0x40, 0x6b, 0x0c, 0xc4, 0x42,
+  0xe7, 0x9a, 0x37, 0x7f, 0x18, 0x35, 0xc7, 0x26, 0x2b, 0x0b, 0x91, 0x11,
+  0xa0, 0x24, 0x04, 0xca, 0xc8, 0xd1, 0x70, 0xba, 0x89, 0xab, 0x62, 0x3a,
+  0xce, 0xd4, 0xcd, 0x24, 0x5e, 0x8d, 0xf6, 0x26, 0xaf, 0x60, 0x16, 0xd5,
+  0xcc, 0xb9, 0xd6, 0x6e, 0x63, 0x79, 0x3a, 0x82, 0xe5, 0x0c, 0xe0, 0x26,
+  0xdc, 0x7d, 0xda, 0x49, 0x49, 0x94, 0x73, 0x9b, 0x6f, 0xb9, 0x16, 0x50,
+  0x29, 0xd7, 0xed, 0xff, 0xa5, 0x9c, 0xc3, 0xda, 0x27, 0xf1, 0x7d, 0xd2,
+  0xb6, 0xbb, 0x8d, 0xfe, 0xe4, 0xaa, 0x83, 0x6b, 0x76, 0xc3, 0x6f, 0x87,
+  0xee, 0x07, 0xa2, 0x9d, 0x3c, 0xc9, 0x80, 0x40, 0x92, 0xad, 0xd4, 0xf6,
+  0x25, 0x16, 0x08, 0x9e, 0x0c, 0x9f, 0x6c, 0x0f, 0x75, 0x5f, 0x42, 0x94,
+  0x53, 0xde, 0x14, 0xd9, 0x93, 0x07, 0xb6, 0x24, 0x86, 0xe9, 0x4c, 0x3f,
+  0xb2, 0x25, 0x10, 0x61, 0x19, 0x7c, 0x28, 0x8a, 0x56, 0x17, 0x83, 0x62,
+  0x38, 0xc1, 0xba, 0x11, 0xea, 0xcd, 0xf7, 0x08, 0x2a, 0x30, 0xa4, 0x48,
+  0x1f, 0x08, 0xcb, 0xca, 0x32, 0xfe, 0xd3, 0x5d, 0x3c, 0x16, 0x5e, 0x7f,
+  0x6a, 0x54, 0x2a, 0x52, 0xd1, 0x6a, 0x87, 0xe1, 0xb3, 0x95, 0xa7, 0xdf,
+  0xaf, 0x8e, 0x0f, 0x47, 0x97, 0xc3, 0xf6, 0x95, 0x13, 0xa5, 0xb3, 0xf0,
+  0xf6, 0x79, 0x94, 0x30, 0xb6, 0x2a, 0x72, 0xc9, 0xcb, 0xd2, 0x21, 0x35,
+  0xf1, 0xd8, 0x06, 0x32, 0xb6, 0xca, 0xed, 0x06, 0xdb, 0x2a, 0xbb, 0x00,
+  0x74, 0x20, 0x22, 0xc2, 0xe1, 0x39, 0xce, 0x67, 0x98, 0x02, 0x0d, 0x8c,
+  0x78, 0xef, 0xbc, 0xd2, 0x90, 0x3e, 0x2e, 0x3e, 0x9c, 0x14, 0x33, 0x36,
+  0x8b, 0x74, 0x80, 0xe7, 0x46, 0xa5, 0x00, 0x0f, 0x2f, 0xde, 0x9c, 0xbc,
+  0xf9, 0xfa, 0xa0, 0x71, 0x67, 0xce, 0x8a, 0xa2, 0xca, 0xd4, 0x47, 0x2f,
+  0x48, 0xc3, 0xb2, 0x5c, 0x62, 0x3f, 0x76, 0xa0, 0x0f, 0x1d, 0x97, 0x38,
+  0xc3, 0x69, 0xd9, 0xad, 0x24, 0xa6, 0x39, 0xad, 0x1b, 0xc1, 0x12, 0xcf,
+  0xf0, 0xe1, 0x1a, 0x9e, 0x55, 0x31, 0xb9, 0xad, 0x1e, 0x8b, 0xb1, 0xeb,
+  0x81, 0xc8, 0xef, 0x66, 0x11, 0xd7, 0xd1, 0xd9, 0xd1, 0xb7, 0xa3, 0xc7,
+  0x1f, 0x0d, 0xf9, 0x96, 0x37, 0xe2, 0x34, 0xc9, 0x8f, 0x04, 0x7d, 0x3f,
+  0x50, 0x73, 0xb9, 0xe3, 0x58, 0x35, 0xcb, 0x13, 0xb0, 0x99, 0x2b, 0x2f,
+  0x56, 0x0e, 0xb2, 0x39, 0x00, 0x4b, 0xea, 0x27, 0xae, 0x5a, 0x41, 0x47,
+  0x05, 0x32, 0xab, 0x5c, 0x10, 0xd4, 0x2a, 0x88, 0xa2, 0xe3, 0x18, 0x06,
+  0x42, 0x8c, 0x25, 0x9f, 0xf5, 0xdb, 0xe2, 0x0e, 0x71, 0x0a, 0x92, 0xff,
+  0x66, 0x2b, 0xee, 0x1b, 0x78, 0x11, 0xce, 0x84, 0xe7, 0xa2, 0x35, 0xdb,
+  0xf2, 0x87, 0xac, 0xbc, 0x45, 0x93, 0xf3, 0x15, 0xea, 0x07, 0xab, 0x9b,
+  0x9d, 0xea, 0x53, 0x07, 0x3b, 0x3b, 0xde, 0xa2, 0x25, 0xb1, 0x85, 0xc3,
+  0xdf, 0x4f, 0x2b, 0x90, 0x3e, 0xd3, 0x5f, 0x45, 0x14, 0xe9, 0xa7, 0x51,
+  0x45, 0x24, 0x25, 0xff, 0x42, 0xaa, 0xf8, 0x7c, 0x1d, 0xb3, 0x75, 0x77,
+  0xd5, 0x2f, 0xa0, 0x0b, 0xd1, 0x2d, 0xfe, 0x3b, 0x51, 0x45, 0x9a, 0x7c,
+  0x1a, 0x5d, 0xa4, 0x6d, 0xc2, 0xe8, 0xc8, 0x49, 0xfe, 0x3d, 0xeb, 0x17,
+  0x62, 0x14, 0x4f, 0x06, 0x0e, 0x8f, 0xf9, 0x57, 0x50, 0xcc, 0x13, 0x9d,
+  0xe9, 0x16, 0x8c, 0xc0, 0xea, 0xe0, 0x34, 0xb4, 0x5b, 0xb3, 0xc5, 0xaf,
+  0x01, 0x85, 0x16, 0x89, 0x64, 0xdb, 0x2e, 0x83, 0xf5, 0x3c, 0xa8, 0x83,
+  0xba, 0xa2, 0x70, 0xe6, 0x5f, 0x4e, 0x6b, 0xff, 0x57, 0x70, 0xa0, 0x27,
+  0x1e, 0x4d, 0xfb, 0x53, 0x48, 0xee, 0xc9, 0x8d, 0x23, 0xb9, 0xae, 0x82,
+  0x7e, 0xc6, 0x9b, 0x7e, 0x6b, 0x92, 0x6b, 0xc9, 0x1e, 0x91, 0x5c, 0x65,
+  0xab, 0x0e, 0x68, 0x83, 0x92, 0x34, 0x6c, 0xfe, 0x25, 0xc0, 0x6b, 0x16,
+  0x27, 0x88, 0x25, 0x9c, 0x44, 0x16, 0x3d, 0x4c, 0xcd, 0xe5, 0xf2, 0x06,
+  0xae, 0x06, 0x41, 0x43, 0xa2, 0x11, 0x44, 0x77, 0xe6, 0x93, 0x8f, 0x12,
+  0x7b, 0x94, 0x2d, 0xa5, 0xf4, 0x6e, 0xc4, 0x3d, 0x10, 0x48, 0x71, 0xa3,
+  0x71, 0xe7, 0xa8, 0xe8, 0x88, 0x29, 0x84, 0x33, 0x78, 0xf6, 0xf1, 0xbb,
+  0x36, 0xa4, 0x73, 0xc7, 0x46, 0x93, 0xa8, 0x64, 0xd5, 0x43, 0x09, 0x56,
+  0xff, 0xb7, 0xf0, 0xd0, 0x27, 0x9f, 0x46, 0xce, 0xff, 0x8c, 0x9b, 0xf5,
+  0xbf, 0x11, 0xf1, 0x76, 0x6d, 0xf3, 0x96, 0x62, 0x63, 0x89, 0x72, 0x28,
+  0x17, 0xcb, 0xb6, 0x20, 0x9d, 0x38, 0x21, 0x1e, 0xab, 0x78, 0x72, 0xfe,
+  0xdd, 0x53, 0x04, 0xbf, 0x8d, 0x62, 0x30, 0xe7, 0xd3, 0x97, 0x87, 0xe7,
+  0x1d, 0x37, 0xc3, 0x35, 0xa9, 0xfc, 0xcb, 0x7c, 0xc0, 0x6a, 0x15, 0x9b,
+  0xe0, 0x9e, 0xeb, 0x2f, 0x4c, 0xe2, 0x5d, 0x46, 0x46, 0x33, 0x90, 0xda,
+  0xf3, 0x82, 0x16, 0x2b, 0x1e, 0x63, 0xcc, 0x52, 0xf5, 0x33, 0x36, 0x40,
+  0x4e, 0xe6, 0xd3, 0x1d, 0xf9, 0x73, 0x70, 0xf5, 0xf7, 0x69, 0xac, 0xea,
+  0x85, 0x48, 0xac, 0x8d, 0xcc, 0x38, 0x85, 0xb7, 0xcd, 0xeb, 0x75, 0xe5,
+  0x55, 0xab, 0x83, 0xf0, 0x98, 0x27, 0x9a, 0xea, 0x09, 0xdd, 0x77, 0xdd,
+  0xc4, 0x30, 0xbc, 0x08, 0x6f, 0x1b, 0xbe, 0x4b, 0xc0, 0x5c, 0xf3, 0xb7,
+  0x3b, 0x41, 0x43, 0xae, 0xf5, 0x87, 0x1a, 0xef, 0x48, 0xe0, 0xf1, 0x7d,
+  0xed, 0x30, 0xc4, 0x9b, 0xbe, 0x28, 0x1d, 0x89, 0x47, 0x38, 0xfa, 0x92,
+  0x97, 0x8f, 0x73, 0xff, 0xab, 0x08, 0xf7, 0x3e, 0xd3, 0x74, 0xa6, 0x60,
+  0x0c, 0x6e, 0xd7, 0xa5, 0x48, 0x82, 0xc2, 0x91, 0x2d, 0x26, 0xf9, 0x32,
+  0x9d, 0x69, 0x9a, 0xe1, 0x83, 0xd5, 0x3a, 0xda, 0xc5, 0x0e, 0x9a, 0x13,
+  0x22, 0x65, 0xbb, 0x5d, 0x19, 0x91, 0xc9, 0x9f, 0x31, 0x60, 0xcd, 0xbb,
+  0x23, 0x4f, 0x26, 0x96, 0xc5, 0x8b, 0xdd, 0xc3, 0x01, 0x55, 0x3d, 0x1d,
+  0xb1, 0xfb, 0xcc, 0xf2, 0xf0, 0x40, 0x9c, 0x94, 0xc4, 0x46, 0x12, 0xce,
+  0x1e, 0xda, 0x7b, 0xf6, 0x74, 0x2f, 0xa9, 0xb8, 0xb0, 0x7d, 0xce, 0xf5,
+  0xa0, 0xe4, 0xe5, 0xc7, 0xc3, 0x47, 0x3b, 0x8f, 0x87, 0x8f, 0x13, 0x5f,
+  0x34, 0x12, 0x09, 0x3f, 0xda, 0x3c, 0xb1, 0xce, 0x08, 0x95, 0xa1, 0x56,
+  0x2e, 0xfe, 0xe6, 0xf8, 0x88, 0xa5, 0x11, 0xcb, 0x39, 0x6d, 0x29, 0x78,
+  0x52, 0xba, 0x12, 0xc5, 0x21, 0xac, 0x16, 0x47, 0x97, 0x52, 0xda, 0xb1,
+  0x1c, 0x46, 0x9a, 0x08, 0xde, 0x5f, 0xb8, 0x81, 0x30, 0xaf, 0x14, 0x2a,
+  0xd5, 0x65, 0xe9, 0x84, 0xa0, 0x08, 0x97, 0x24, 0x58, 0xb0, 0xe1, 0xc3,
+  0xf5, 0x27, 0xaa, 0x9a, 0xb4, 0xd4, 0xb2, 0x3b, 0x4a, 0xe8, 0x42, 0x8d,
+  0x91, 0x12, 0x70, 0xc1, 0xa5, 0x6c, 0xc5, 0x7d, 0xab, 0xef, 0xa8, 0x35,
+  0xb3, 0x99, 0x53, 0x61, 0x11, 0x30, 0xc3, 0xb8, 0x8a, 0x5d, 0x23, 0x9b,
+  0x41, 0x4b, 0x4a, 0xa0, 0xf0, 0xe7, 0xe6, 0x60, 0xd3, 0xae, 0x29, 0x8b,
+  0x9f, 0xe1, 0xce, 0x6a, 0xb1, 0x98, 0xb6, 0x51, 0xc8, 0x7f, 0x73, 0xb9,
+  0xb5, 0xe6, 0xdb, 0xa0, 0xce, 0x66, 0x8b, 0xac, 0xd6, 0x52, 0x72, 0xc9,
+  0xf3, 0xb3, 0xf3, 0xcb, 0x17, 0xef, 0xd3, 0x59, 0x14, 0xe3, 0xc1, 0x28,
+  0x7e, 0x56, 0x76, 0xcf, 0x59, 0x73, 0xf9, 0xcd, 0x20, 0x37, 0x6a, 0xe4,
+  0x92, 0x84, 0xec, 0xc9, 0x2e, 0x58, 0x9f, 0xcb, 0xcb, 0xbf, 0x9e, 0x1f,
+  0xbf, 0x78, 0xce, 0xb6, 0xe0, 0x2f, 0xd8, 0x1e, 0x5f, 0x35, 0x4c, 0xc3,
+  0x5c, 0xe2, 0x35, 0xbe, 0x19, 0x7f, 0x78, 0x79, 0x32, 0x3a, 0x3f, 0x3d,
+  0x3b, 0x7a, 0xf1, 0xfc, 0x07, 0xf6, 0x60, 0xd2, 0xea, 0xdd, 0x07, 0xef,
+  0xba, 0xcf, 0x5c, 0xbe, 0x43, 0x5c, 0x6e, 0xe9, 0xf8, 0xfb, 0x77, 0xc7,
+  0x6f, 0xbe, 0x7b, 0xf1, 0xfc, 0x7d, 0x5a, 0xf6, 0x79, 0x7e, 0xf2, 0x36,
+  0x43, 0x3f, 0x74, 0xd4, 0x3c, 0x0d, 0xd6, 0xe8, 0x92, 0xd7, 0x68, 0xb5,
+  0xe4, 0xd0, 0xc1, 0x07, 0xc2, 0xca, 0xc0, 0x65, 0x7d, 0x7d, 0xa3, 0x26,
+  0x75, 0x04, 0x21, 0x6c, 0x96, 0xe0, 0x65, 0xc0, 0xeb, 0x6f, 0x2f, 0x4e,
+  0xbb, 0xca, 0x1e, 0xd6, 0x01, 0x06, 0xb8, 0x87, 0x80, 0x57, 0xdb, 0x90,
+  0x6f, 0x18, 0x70, 0xeb, 0xbe, 0xa6, 0xac, 0x42, 0x56, 0x3e, 0x18, 0x43,
+  0x27, 0xbc, 0x0b, 0xc1, 0xb4, 0xae, 0x3c, 0x24, 0xa2, 0x87, 0xa4, 0xda,
+  0x0e, 0x4d, 0x21, 0x47, 0x06, 0xfd, 0x8e, 0xe5, 0xfc, 0xce, 0x62, 0x93,
+  0x57, 0x10, 0x33, 0x0f, 0xd7, 0xbb, 0x02, 0x41, 0x15, 0x52, 0x71, 0x0a,
+  0xe3, 0x31, 0xcc, 0xe1, 0xe6, 0x2c, 0x14, 0x46, 0xaa, 0x1b, 0x25, 0x7d,
+  0xc6, 0x6f, 0x71, 0x68, 0xbc, 0x8d, 0xab, 0x14, 0xfa, 0x6d, 0x26, 0x3f,
+  0x58, 0x6e, 0x5a, 0x10, 0x58, 0xd8, 0x91, 0x1e, 0xd7, 0x04, 0xd8, 0x94,
+  0x70, 0x46, 0x16, 0x29, 0x39, 0x75, 0x8f, 0xc6, 0xea, 0xc3, 0x86, 0x65,
+  0x63, 0x3d, 0x3c, 0x73, 0xec, 0xcb, 0x44, 0xbd, 0x65, 0x77, 0xe6, 0xec,
+  0xb0, 0x15, 0x0e, 0x96, 0x7a, 0x6b, 0xb4, 0xed, 0xb2, 0x1d, 0xb9, 0xc5,
+  0xf3, 0xb7, 0x1e, 0xb1, 0xb4, 0x23, 0x37, 0x3e, 0x3a, 0x84, 0x6d, 0x41,
+  0xd9, 0x2f, 0x54, 0x6f, 0xd0, 0xe3, 0x62, 0x06, 0xea, 0xe9, 0x42, 0x29,
+  0x03, 0xb3, 0xf4, 0x13, 0x67, 0xe0, 0xb2, 0xc1, 0x3e, 0x95, 0x3e, 0xed,
+  0x84, 0xe3, 0x97, 0x54, 0xaf, 0xe4, 0x50, 0xe3, 0x90, 0xb2, 0x06, 0xde,
+  0xbe, 0xf4, 0x31, 0xec, 0x25, 0x8d, 0x8a, 0x09, 0xe2, 0x79, 0xdb, 0x8e,
+  0x92, 0xfa, 0xee, 0xe5, 0x8a, 0x08, 0xa4, 0x78, 0x17, 0xf0, 0x47, 0xdd,
+  0xf3, 0x50, 0x5b, 0x43, 0x83, 0x5b, 0x61, 0x4c, 0x94, 0xd7, 0x81, 0xda,
+  0x0f, 0x4e, 0x0d, 0xdc, 0x6d, 0x54, 0xf0, 0x45, 0x76, 0x3a, 0xc2, 0x17,
+  0x5c, 0x0a, 0x81, 0x96, 0x9b, 0x15, 0x8f, 0xa2, 0xb6, 0x09, 0x61, 0xbe,
+  0x0b, 0x34, 0x48, 0x36, 0xb1, 0x63, 0x51, 0xff, 0xda, 0x12, 0x90, 0x99,
+  0x15, 0x0e, 0x2e, 0x7d, 0xd4, 0x1e, 0x07, 0xdd, 0x75, 0xe4, 0xd7, 0x6b,
+  0x41, 0xa7, 0xc1, 0x65, 0x84, 0x47, 0xc6, 0x2f, 0x70, 0xc8, 0x5a, 0x10,
+  0xca, 0x8e, 0x08, 0x51, 0x9e, 0xbb, 0x50, 0x92, 0xe6, 0xdc, 0x40, 0xa8,
+  0x18, 0x6a, 0xf8, 0x2c, 0xbb, 0x43, 0xd6, 0xe4, 0x35, 0x57, 0x49, 0xef,
+  0x7a, 0x56, 0x8c, 0xc7, 0x34, 0xa9, 0x9e, 0xdd, 0x71, 0x34, 0xc2, 0xb4,
+  0xbc, 0x86, 0xd0, 0xdb, 0x37, 0xc4, 0x3a, 0x7f, 0x58, 0x51, 0x36, 0x05,
+  0x7d, 0xad, 0xcb, 0xcd, 0xe5, 0xdd, 0x55, 0xd7, 0x8e, 0xee, 0x2a, 0x0a,
+  0x9a, 0xdc, 0x07, 0xc5, 0xd6, 0x24, 0x12, 0x0b, 0x9f, 0x27, 0xd6, 0x7f,
+  0x14, 0xc6, 0xcb, 0xb9, 0xa4, 0x3e, 0xed, 0x53, 0x99, 0x0f, 0x58, 0x8e,
+  0x96, 0xb2, 0xc8, 0xab, 0x35, 0xe5, 0xea, 0x2f, 0x93, 0xde, 0xbf, 0xf3,
+  0x28, 0xf6, 0xfa, 0xfc, 0x73, 0xff, 0x3f, 0x7b, 0x56, 0xb1, 0x84, 0x6b,
+  0x44, 0xc9, 0xe0, 0x6b, 0x2e, 0x12, 0x51, 0x59, 0x99, 0x94, 0x8e, 0xaa,
+  0x28, 0xec, 0x36, 0x5c, 0xdb, 0x7a, 0x3e, 0xbf, 0xfe, 0x71, 0x6f, 0xb0,
+  0xb7, 0xbb, 0xbb, 0xfb, 0xf3, 0x70, 0xc9, 0x4b, 0x77, 0x85, 0xe6, 0xe9,
+  0xe7, 0x70, 0x99, 0x4f, 0xd8, 0x90, 0x4f, 0x9b, 0x99, 0xa7, 0xdc, 0xf4,
+  0x8e, 0xf4, 0xb7, 0x13, 0xdc, 0xfc, 0xf5, 0x64, 0x39, 0x58, 0x14, 0x5d,
+  0x21, 0x32, 0x97, 0xab, 0x72, 0x91, 0x04, 0xf5, 0xfe, 0xde, 0xbd, 0x39,
+  0x7b, 0x79, 0x7c, 0x7a, 0xf8, 0x57, 0x8b, 0xb1, 0x75, 0xc0, 0x09, 0x3c,
+  0x92, 0x77, 0x59, 0x5a, 0xdd, 0xbf, 0xab, 0xb2, 0x9a, 0xbe, 0xdc, 0x7a,
+  0xb4, 0xcd, 0x41, 0x68, 0x51, 0x6d, 0xdd, 0xeb, 0xac, 0x51, 0x21, 0x5c,
+  0xe3, 0x95, 0xfc, 0xed, 0xdd, 0x92, 0x51, 0xf6, 0x9a, 0x81, 0xaf, 0x35,
+  0xfb, 0x43, 0xc6, 0xb3, 0xdb, 0x2a, 0xff, 0x07, 0xdd, 0x3b, 0x8c, 0xed,
+  0x17, 0xc7, 0x33, 0x5f, 0x02, 0x41, 0x81, 0xdd, 0xda, 0xfc, 0x5b, 0xf2,
+  0xd5, 0xe9, 0xb7, 0x1c, 0x46, 0xee, 0x74, 0x9a, 0xb9, 0xa4, 0xec, 0x27,
+  0x5f, 0x3c, 0xd9, 0xdb, 0xdf, 0x0e, 0xea, 0xa8, 0x73, 0x32, 0x0a, 0x1f,
+  0xce, 0xc8, 0xad, 0xfe, 0x0f, 0x0d, 0x10, 0x08, 0xb8, 0xb2, 0xf7, 0x30,
+  0x4a, 0x01, 0x66, 0xbd, 0xe6, 0x80, 0x3a, 0x07, 0x4f, 0x70, 0x0d, 0x98,
+  0x3f, 0x4e, 0x14, 0x89, 0xc0, 0x72, 0x2e, 0x7d, 0x36, 0xf8, 0x90, 0x03,
+  0x95, 0x4c, 0xb3, 0xa1, 0xe1, 0x68, 0x7e, 0x49, 0xb7, 0x6c, 0xf2, 0x5b,
+  0xcb, 0x3a, 0x1f, 0xf5, 0x54, 0xd1, 0x6a, 0xcf, 0x2a, 0x76, 0x12, 0xb3,
+  0xfc, 0x91, 0x3c, 0xb7, 0xdf, 0xbe, 0x88, 0x23, 0xeb, 0x12, 0xb8, 0xd9,
+  0xda, 0x40, 0x48, 0x10, 0x5b, 0xe0, 0x3d, 0xe7, 0x90, 0x46, 0xe6, 0xb4,
+  0x72, 0xd2, 0x04, 0x66, 0xd2, 0x9d, 0xa3, 0x35, 0x55, 0x3c, 0x99, 0xb5,
+  0xf5, 0x46, 0x17, 0xe7, 0xbd, 0xbe, 0x3a, 0xf0, 0xa8, 0x8f, 0x01, 0xfd,
+  0x4d, 0x23, 0x06, 0x5e, 0xe7, 0x93, 0xdd, 0x27, 0x8f, 0xd5, 0xbe, 0x87,
+  0x81, 0x22, 0xf5, 0x34, 0xc6, 0xfc, 0xc7, 0x77, 0xae, 0x42, 0x27, 0xb0,
+  0x2f, 0x7c, 0x9e, 0x1d, 0x51, 0x5e, 0x73, 0x92, 0x62, 0x31, 0xe9, 0x1b,
+  0xa8, 0xfd, 0xda, 0xa8, 0x08, 0xdd, 0x33, 0xf0, 0x14, 0x0c, 0x32, 0x2e,
+  0x9d, 0xfc, 0xb8, 0xb5, 0x90, 0x6e, 0x0c, 0xcf, 0xed, 0xb7, 0xae, 0x85,
+  0x0c, 0x8b, 0x89, 0x6a, 0x21, 0x24, 0x87, 0xf3, 0xc3, 0x8b, 0xdc, 0x8d,
+  0x00, 0xb6, 0xd6, 0x9b, 0x62, 0x28, 0xe3, 0xc1, 0x1c, 0x87, 0xe6, 0x20,
+  0x55, 0x5c, 0x1b, 0xbf, 0x78, 0x3e, 0xbb, 0x85, 0xd3, 0x8f, 0x87, 0x0f,
+  0x07, 0x85, 0xb6, 0xa7, 0x87, 0x16, 0x9e, 0xf3, 0xcf, 0xce, 0x69, 0xf1,
+  0x17, 0x5e, 0xe9, 0xfc, 0x7d, 0xa7, 0xa5, 0xd9, 0x14, 0xcd, 0x55, 0x77,
+  0x93, 0x8b, 0x54, 0xe7, 0xfa, 0xe3, 0x7b, 0xf7, 0x7e, 0x6f, 0xb8, 0xdb,
+  0xe9, 0xe4, 0x7c, 0xc5, 0x45, 0x93, 0x9a, 0x20, 0x56, 0x3c, 0x1d, 0xc3,
+  0x7f, 0x65, 0x3f, 0x25, 0x18, 0x84, 0xd3, 0xc1, 0x5c, 0x2d, 0xe3, 0x6e,
+  0xa0, 0x31, 0x7e, 0xd9, 0x21, 0x1d, 0x84, 0x83, 0x7a, 0xf4, 0x38, 0x3a,
+  0x99, 0x34, 0xa8, 0xbd, 0x5f, 0x37, 0xa8, 0xbd, 0xdf, 0x75, 0x50, 0xfb,
+  0xbf, 0x6e, 0x50, 0xfb, 0xbf, 0xd7, 0xa0, 0xca, 0x81, 0xe5, 0x65, 0x74,
+  0x63, 0x14, 0x5f, 0x58, 0xbd, 0x10, 0x96, 0x78, 0x18, 0xd1, 0x8f, 0xd9,
+  0xe9, 0xa5, 0x72, 0xf4, 0xc1, 0xb1, 0xbe, 0xeb, 0x23, 0x68, 0x44, 0x66,
+  0x88, 0x23, 0x67, 0x5d, 0xad, 0x1a, 0x17, 0x73, 0x58, 0x35, 0xcb, 0xdc,
+  0x89, 0xbb, 0x76, 0xb5, 0xb0, 0x6e, 0x7c, 0xdc, 0x10, 0x84, 0xba, 0x68,
+  0x9e, 0x93, 0x2c, 0x57, 0xf8, 0xd4, 0x8f, 0x45, 0x68, 0x3f, 0x6d, 0x4e,
+  0x98, 0xa1, 0x73, 0x3a, 0x75, 0x32, 0x2b, 0x2a, 0xc9, 0xbe, 0x7d, 0x5c,
+  0x63, 0xfc, 0xe4, 0x74, 0x25, 0xc9, 0x49, 0x28, 0x48, 0x9b, 0x2f, 0x34,
+  0xc6, 0x57, 0x2c, 0x8b, 0x74, 0x37, 0x5f, 0x17, 0xf8, 0x93, 0xc7, 0xd9,
+  0x8f, 0x0c, 0x3b, 0x93, 0xd9, 0x4a, 0x0a, 0x31, 0x65, 0x02, 0xaf, 0xc9,
+  0x71, 0xfd, 0x41, 0xb9, 0xed, 0xbe, 0xc3, 0x97, 0x80, 0xf0, 0xad, 0x32,
+  0xac, 0xc8, 0xe0, 0x6f, 0x23, 0x57, 0x3a, 0x8b, 0xcc, 0x1c, 0x97, 0xc2,
+  0xc1, 0x5c, 0xaa, 0xb1, 0x68, 0xfa, 0x9c, 0xab, 0x49, 0x06, 0xbc, 0x9e,
+  0xf5, 0x76, 0x80, 0x6e, 0xdf, 0x4b, 0x68, 0x9d, 0x46, 0xfc, 0xcc, 0xe0,
+  0xbd, 0x56, 0xb4, 0x1e, 0x17, 0x15, 0xa2, 0xad, 0x75, 0xd1, 0x22, 0x9b,
+  0x51, 0x35, 0xc9, 0xf3, 0xdf, 0xd3, 0x49, 0x26, 0xbd, 0xa2, 0x9b, 0x87,
+  0x37, 0x8c, 0x43, 0x62, 0xb1, 0x65, 0xba, 0x67, 0x8d, 0x4d, 0x73, 0x7b,
+  0xc6, 0x5b, 0xe6, 0x76, 0xec, 0xff, 0x9c, 0x0d, 0xa3, 0xff, 0x47, 0xd9,
+  0xf1, 0x2a, 0x9f, 0xe7, 0xb3, 0x14, 0xb6, 0x24, 0x5d, 0x1a, 0x41, 0xb3,
+  0x9d, 0x65, 0x29, 0xe7, 0xa6, 0x9b, 0x09, 0xfb, 0x26, 0xfb, 0x20, 0xca,
+  0x7f, 0x7c, 0xd9, 0x4b, 0x1e, 0xe3, 0x8d, 0x99, 0xcd, 0x0e, 0x47, 0x47,
+  0x27, 0x27, 0x8d, 0x5a, 0x71, 0xbc, 0x6c, 0x08, 0xe2, 0xd3, 0x94, 0xac,
+  0x8a, 0x73, 0x5c, 0xbc, 0x7a, 0x15, 0xd9, 0x1c, 0x38, 0xbd, 0x13, 0xc0,
+  0x98, 0x5c, 0x45, 0x34, 0xad, 0x72, 0xcb, 0xa7, 0x4d, 0x25, 0x58, 0x6b,
+  0xb5, 0x60, 0xeb, 0x00, 0x27, 0x36, 0xdc, 0xac, 0x48, 0xd6, 0xad, 0x7e,
+  0x6b, 0x82, 0x1c, 0xfe, 0xde, 0xa4, 0xd7, 0x91, 0xfb, 0x78, 0x5e, 0x5a,
+  0x7e, 0x66, 0xaa, 0x51, 0xfb, 0x9a, 0xbf, 0xc8, 0x20, 0x3a, 0xac, 0x04,
+  0x0a, 0x05, 0x16, 0xa8, 0xfd, 0x8e, 0xf1, 0xb2, 0x82, 0xe8, 0x25, 0xe4,
+  0xc8, 0x32, 0x02, 0x33, 0x54, 0xd5, 0xae, 0x7d, 0xdb, 0xe4, 0xd2, 0xab,
+  0xbe, 0x15, 0xf1, 0x82, 0x08, 0x71, 0x60, 0xd7, 0xf6, 0x5f, 0xd4, 0x6a,
+  0x16, 0xc9, 0x14, 0x41, 0xb6, 0xa2, 0x2b, 0xe3, 0xd5, 0xf7, 0xc2, 0x13,
+  0x4e, 0x82, 0xa6, 0xa7, 0xb2, 0xb1, 0xe7, 0x9a, 0x95, 0x65, 0xb3, 0xc0,
+  0xc5, 0x16, 0x0d, 0x98, 0xc7, 0x45, 0xca, 0x34, 0x7d, 0x3b, 0x0a, 0x8e,
+  0x3c, 0x73, 0xdb, 0x97, 0x0c, 0x16, 0x7d, 0xc1, 0x93, 0xac, 0xcb, 0x49,
+  0xd2, 0x29, 0x73, 0xe2, 0xab, 0x81, 0x8d, 0x60, 0x5d, 0x55, 0x57, 0x64,
+  0xd9, 0xde, 0x37, 0x8a, 0xe1, 0x04, 0x93, 0x91, 0x9c, 0xda, 0xd2, 0xb9,
+  0x6f, 0x34, 0xea, 0x98, 0xe7, 0xd2, 0x29, 0x94, 0x56, 0xfd, 0x40, 0x43,
+  0x59, 0x92, 0xe6, 0xb1, 0xb4, 0x94, 0x3a, 0x5b, 0x96, 0xce, 0x3a, 0xf3,
+  0x3c, 0x10, 0x58, 0xba, 0xb8, 0xb8, 0xf7, 0xf9, 0xc9, 0x40, 0x13, 0x93,
+  0xb5, 0x06, 0xaf, 0x60, 0x3d, 0x21, 0x39, 0x4d, 0xf3, 0x74, 0x02, 0xac,
+  0xca, 0xb8, 0xc0, 0xad, 0xd5, 0x9e, 0x35, 0xb5, 0x5c, 0x8a, 0x4a, 0xda,
+  0xa5, 0x5f, 0x65, 0x33, 0xd4, 0x59, 0x0a, 0xe7, 0x69, 0x49, 0x68, 0x34,
+  0xc4, 0x41, 0xe4, 0x24, 0x81, 0x18, 0x8c, 0xea, 0x2e, 0x30, 0x7e, 0x85,
+  0x76, 0xc9, 0xf1, 0x7d, 0x6b, 0xf9, 0xd4, 0x75, 0x27, 0xea, 0xfd, 0xa4,
+  0x98, 0x45, 0x36, 0x76, 0x15, 0x38, 0xdd, 0xf1, 0x39, 0x20, 0xfe, 0xb5,
+  0x4a, 0x0e, 0x7a, 0xbc, 0xc6, 0x63, 0x69, 0xc6, 0x17, 0xd0, 0x8c, 0x68,
+  0xa6, 0x88, 0x4b, 0x83, 0x73, 0x55, 0xe2, 0xe2, 0x8e, 0x66, 0x7b, 0xe5,
+  0x91, 0xbb, 0xd1, 0xe6, 0x5f, 0x78, 0x79, 0x5e, 0xf0, 0x42, 0xf5, 0xba,
+  0x6b, 0x02, 0x5a, 0xa1, 0x57, 0x8f, 0x85, 0x4c, 0x64, 0x2a, 0x3d, 0x5a,
+  0x87, 0xe0, 0x5a, 0x41, 0xa5, 0x24, 0x33, 0x29, 0x77, 0x83, 0x65, 0x4e,
+  0xbc, 0x21, 0x5a, 0x0b, 0xb0, 0x7b, 0xc0, 0x32, 0xbe, 0x2c, 0x4a, 0xb9,
+  0xd2, 0xdb, 0x34, 0x7d, 0x58, 0xc7, 0x28, 0x7a, 0xe0, 0xd8, 0xaa, 0xa3,
+  0xf9, 0x22, 0x82, 0x92, 0x3b, 0xfe, 0x9a, 0x35, 0x57, 0x0d, 0x7c, 0x6c,
+  0x0e, 0x57, 0x0b, 0xf6, 0xc5, 0x22, 0x91, 0xdb, 0x6c, 0x79, 0x3e, 0xb8,
+  0x6b, 0xa4, 0x36, 0x37, 0x90, 0xf0, 0xc3, 0x8f, 0x13, 0x35, 0x09, 0x74,
+  0x1a, 0x6d, 0x9b, 0x7b, 0x42, 0xeb, 0x9d, 0xc2, 0xb1, 0xc5, 0xf9, 0x38,
+  0x50, 0x0a, 0xf7, 0x1f, 0x7d, 0xfe, 0xb8, 0x2f, 0xbf, 0x3f, 0xd9, 0x7d,
+  0x26, 0x55, 0x25, 0x4e, 0x8e, 0x2f, 0x5f, 0x25, 0xd3, 0x32, 0xbd, 0x8a,
+  0x8c, 0xb6, 0xfc, 0xd9, 0x20, 0x4b, 0xcb, 0x1b, 0x4e, 0x72, 0x27, 0x1a,
+  0x1d, 0x54, 0xf3, 0x7a, 0x39, 0xd8, 0xdd, 0xe5, 0xb2, 0xb4, 0x4d, 0x99,
+  0x52, 0x02, 0x60, 0x7f, 0x37, 0x6e, 0xfc, 0xd6, 0xf9, 0xa0, 0xbb, 0x98,
+  0xe0, 0x27, 0x31, 0x3f, 0x39, 0xa3, 0xc6, 0xff, 0x82, 0x8a, 0xa5, 0x51,
+  0x75, 0xe8, 0xae, 0xb2, 0xd4, 0x6b, 0x39, 0xc3, 0x27, 0xb1, 0x86, 0x69,
+  0xd1, 0x46, 0xb0, 0xed, 0xea, 0x63, 0x1d, 0x57, 0x00, 0xc8, 0xf5, 0x6a,
+  0xb9, 0x96, 0x2d, 0xf0, 0x84, 0xda, 0x3a, 0xa0, 0xe7, 0x09, 0xbf, 0x94,
+  0x29, 0x74, 0x01, 0x18, 0xb7, 0x98, 0xc2, 0x5b, 0x62, 0x0a, 0xbf, 0xa7,
+  0xd4, 0xc7, 0xf3, 0x7e, 0xfe, 0xf6, 0xe2, 0x74, 0xdd, 0xbe, 0xa6, 0xb0,
+  0x42, 0x5a, 0xb5, 0xe8, 0xa8, 0x62, 0x07, 0xec, 0xf6, 0x7c, 0x3a, 0x6f,
+  0x68, 0x89, 0x5c, 0xbd, 0x8e, 0xb8, 0x54, 0x9c, 0x25, 0xa2, 0x1a, 0x07,
+  0xa1, 0x46, 0x39, 0x3b, 0x18, 0xa1, 0xbd, 0x01, 0x5c, 0xe9, 0x47, 0x02,
+  0x3d, 0x8c, 0x95, 0x60, 0xb6, 0x4d, 0x58, 0x49, 0x05, 0x3c, 0xbc, 0x2c,
+  0x5c, 0x35, 0x35, 0xd8, 0x78, 0xbb, 0x16, 0x97, 0x27, 0xc4, 0x28, 0x0a,
+  0xe2, 0xc9, 0xeb, 0x3b, 0xe6, 0xd7, 0x28, 0xc3, 0xad, 0x31, 0xfa, 0x48,
+  0x2f, 0xf7, 0x39, 0xdf, 0x5d, 0xbe, 0x0c, 0x57, 0xe9, 0xd3, 0xd6, 0x34,
+  0x94, 0x9f, 0x3a, 0xb2, 0xd6, 0x1c, 0x3a, 0x1c, 0x2f, 0x28, 0x58, 0xa1,
+  0xb0, 0x1d, 0x7d, 0x63, 0xa7, 0x4e, 0x67, 0xb7, 0x48, 0x4a, 0x1e, 0x26,
+  0xaf, 0x65, 0x71, 0x69, 0x80, 0x8c, 0x36, 0xda, 0x85, 0xff, 0x3a, 0x5e,
+  0x5d, 0x5f, 0xa3, 0xc0, 0xc0, 0xa1, 0x48, 0x3e, 0x95, 0x95, 0x4c, 0xc3,
+  0x05, 0xb3, 0xf9, 0xc5, 0xa6, 0xa6, 0x80, 0xf6, 0x6e, 0x48, 0x4c, 0xe4,
+  0x88, 0x71, 0x12, 0xc4, 0x7b, 0x22, 0x08, 0xc7, 0x30, 0x55, 0x7c, 0x08,
+  0xfa, 0xc9, 0xe6, 0xf3, 0xee, 0x97, 0x44, 0x07, 0x14, 0x44, 0xa8, 0x89,
+  0x73, 0x22, 0xd1, 0x42, 0xde, 0xe4, 0xc4, 0x9c, 0x16, 0x71, 0x18, 0xb8,
+  0x64, 0x6d, 0x8b, 0x53, 0x5f, 0xd4, 0xcd, 0xb4, 0x73, 0x90, 0xff, 0x6a,
+  0xfd, 0x59, 0xd5, 0x10, 0x60, 0xb8, 0x5d, 0x15, 0xd1, 0x75, 0xa0, 0xf8,
+  0x4d, 0xda, 0x7f, 0xec, 0x43, 0x84, 0xcb, 0x4e, 0xd1, 0x2b, 0x8c, 0x65,
+  0x68, 0x19, 0x19, 0x26, 0x3f, 0x49, 0x62, 0x95, 0x39, 0xb9, 0x6a, 0x18,
+  0xb2, 0xdd, 0xb4, 0x63, 0x79, 0x8c, 0xba, 0x2c, 0x1a, 0x4a, 0xe6, 0xa5,
+  0x6e, 0x7f, 0x45, 0x02, 0xf9, 0xa4, 0xe4, 0x2c, 0xa9, 0xe2, 0x56, 0x6b,
+  0x93, 0xaf, 0x13, 0xac, 0xcc, 0x6b, 0xe6, 0xcf, 0x8d, 0x04, 0xc0, 0x5b,
+  0xf0, 0x3e, 0x6b, 0x37, 0x78, 0x30, 0x5b, 0x48, 0xbd, 0x0f, 0xb5, 0x46,
+  0xf7, 0x63, 0xec, 0x60, 0x49, 0x68, 0xb7, 0xaa, 0x7a, 0x4e, 0xf6, 0x6d,
+  0xea, 0x6e, 0xe6, 0xe7, 0xfe, 0xb5, 0xe2, 0x7f, 0xa3, 0xb1, 0x50, 0xfc,
+  0xef, 0x70, 0x89, 0x85, 0x69, 0x50, 0x4d, 0x50, 0x50, 0xe4, 0x3e, 0x05,
+  0x8c, 0xe6, 0x8e, 0x1f, 0x84, 0xa7, 0x9e, 0x4f, 0x18, 0x29, 0x98, 0xb8,
+  0x62, 0xdb, 0x5c, 0xe7, 0xa5, 0x02, 0xa9, 0x9a, 0xd7, 0xc6, 0xfc, 0xc6,
+  0x58, 0x34, 0xa4, 0x24, 0x19, 0x0a, 0x2f, 0xdb, 0x2d, 0x66, 0x19, 0x2a,
+  0xe4, 0x32, 0x2e, 0x9f, 0x60, 0xf2, 0x46, 0xe6, 0x39, 0x3a, 0x35, 0xce,
+  0x77, 0x28, 0x59, 0xfb, 0xd2, 0xaf, 0x38, 0xf9, 0xb5, 0xae, 0xbc, 0x92,
+  0x0c, 0x98, 0x8b, 0x62, 0x8b, 0x24, 0x12, 0x00, 0x10, 0x45, 0x32, 0x7c,
+  0x60, 0x15, 0xec, 0x43, 0xe6, 0x50, 0x51, 0x43, 0x0e, 0xe4, 0x6a, 0xc3,
+  0x4b, 0x47, 0xda, 0x78, 0x00, 0xa2, 0xd5, 0x19, 0x4c, 0xcc, 0xc2, 0x4a,
+  0x4f, 0x9e, 0xed, 0x41, 0xe1, 0x65, 0x14, 0x15, 0xd1, 0xe9, 0x04, 0xce,
+  0x0b, 0xb8, 0x5f, 0x93, 0x15, 0xeb, 0xa2, 0xf0, 0x0b, 0xc6, 0x85, 0x08,
+  0x5d, 0x73, 0xf7, 0x9c, 0xaf, 0x44, 0x9a, 0xf0, 0x97, 0xa6, 0x04, 0xf7,
+  0xf4, 0xe6, 0x02, 0xa8, 0xa0, 0xab, 0x78, 0x68, 0x4a, 0x63, 0xed, 0x97,
+  0xa3, 0xc3, 0x37, 0x20, 0x4e, 0x3d, 0x80, 0x08, 0xa0, 0x7a, 0x7a, 0xef,
+  0xcb, 0x41, 0xaf, 0x13, 0xe8, 0xdc, 0xcd, 0xdb, 0x09, 0x6c, 0x8d, 0xa3,
+  0x65, 0x5d, 0xdc, 0x59, 0x22, 0x0e, 0x6a, 0xd5, 0xd4, 0x79, 0xbd, 0x8a,
+  0xcd, 0xed, 0x0e, 0xe6, 0x13, 0xbe, 0x14, 0xf0, 0x60, 0x5e, 0x72, 0xef,
+  0xf0, 0xc0, 0x59, 0x62, 0x25, 0xbf, 0x46, 0x28, 0x9f, 0x18, 0x0e, 0xc6,
+  0x86, 0x9d, 0xdb, 0xd6, 0x50, 0x0f, 0xa9, 0x47, 0x3f, 0xba, 0xa6, 0xb9,
+  0x9d, 0xeb, 0x71, 0xff, 0xbb, 0x7d, 0x09, 0xb0, 0xc2, 0xff, 0x34, 0xe7,
+  0xa0, 0x79, 0x37, 0xd3, 0x6e, 0x7e, 0x96, 0xfc, 0x09, 0xab, 0x02, 0xb0,
+  0x65, 0x59, 0x1a, 0x60, 0xa9, 0x70, 0x83, 0x7f, 0x1a, 0x3a, 0x9f, 0xa6,
+  0x15, 0xbd, 0x4f, 0x16, 0xd9, 0x1d, 0x98, 0x5e, 0xc4, 0x6d, 0xe5, 0x18,
+  0xff, 0xb4, 0xe0, 0xd2, 0x5a, 0x93, 0x94, 0x8e, 0x23, 0x7b, 0xa3, 0x04,
+  0x9c, 0x40, 0xc8, 0xeb, 0xa7, 0x52, 0x99, 0x66, 0x9d, 0x8e, 0x05, 0x2c,
+  0x56, 0x3f, 0x8f, 0x4d, 0x17, 0x1c, 0x30, 0x70, 0x80, 0xdd, 0xf8, 0xd3,
+  0x40, 0x90, 0x28, 0x95, 0xc2, 0x15, 0x58, 0xd6, 0x3e, 0x93, 0x8d, 0xb9,
+  0xcb, 0x17, 0x8f, 0xf6, 0x07, 0x81, 0xac, 0xd2, 0xef, 0x8c, 0xb9, 0x12,
+  0x23, 0x5c, 0x31, 0x91, 0x02, 0xeb, 0x6c, 0x30, 0x85, 0x59, 0xf1, 0x4f,
+  0x89, 0xe2, 0x99, 0x20, 0x25, 0x76, 0x05, 0x21, 0xec, 0x4e, 0x92, 0xec,
+  0xd6, 0x24, 0x7e, 0xac, 0xa9, 0xb0, 0xd2, 0x24, 0x1e, 0x8f, 0x35, 0xd4,
+  0x15, 0x94, 0xc2, 0xe7, 0x92, 0x06, 0xfa, 0x0e, 0x8e, 0x11, 0x79, 0xf5,
+  0x48, 0x3e, 0x1a, 0x5c, 0xf2, 0x47, 0x16, 0x7f, 0xa4, 0xf9, 0xa6, 0x50,
+  0x34, 0x34, 0x32, 0xb1, 0x9f, 0xc4, 0xb0, 0x2f, 0x49, 0x57, 0x3c, 0x07,
+  0x07, 0x39, 0xd2, 0x91, 0x8e, 0xc6, 0x69, 0xa7, 0xe9, 0x9d, 0x54, 0xa4,
+  0x21, 0x76, 0xfd, 0x70, 0x6b, 0x80, 0xd4, 0x64, 0x6f, 0xef, 0x5c, 0xca,
+  0x3b, 0x98, 0x45, 0x2a, 0x74, 0xdc, 0x49, 0xc8, 0x92, 0xa0, 0x23, 0x0c,
+  0x3f, 0xd6, 0x5c, 0x80, 0xbf, 0x1d, 0x54, 0x48, 0xa3, 0x2b, 0x4e, 0xc0,
+  0x8d, 0xd9, 0xf1, 0x33, 0x03, 0xe5, 0x4a, 0xbb, 0x1f, 0x99, 0x6b, 0x21,
+  0x06, 0x3c, 0x78, 0xee, 0x83, 0x42, 0x2c, 0x4d, 0x0c, 0x1d, 0xf0, 0xfd,
+  0x4e, 0x3b, 0x54, 0xd2, 0xb9, 0xb7, 0xc9, 0x09, 0xe7, 0xf8, 0x22, 0x88,
+  0x43, 0xa5, 0x15, 0x14, 0x5f, 0x9f, 0x8f, 0x0d, 0xd5, 0xd2, 0xf5, 0xf4,
+  0x70, 0x73, 0x6e, 0x14, 0x72, 0x4d, 0x0f, 0x02, 0x09, 0x6b, 0xd8, 0x4e,
+  0x10, 0xda, 0x8b, 0xe2, 0x45, 0xaf, 0xea, 0xe5, 0x3b, 0xc0, 0x44, 0xbe,
+  0x03, 0x6a, 0x14, 0x6f, 0x84, 0x25, 0x9d, 0xe2, 0x03, 0xac, 0x97, 0x00,
+  0x7b, 0x91, 0x8c, 0x9f, 0x6b, 0x5d, 0x0b, 0xd2, 0xe4, 0xae, 0xc5, 0x8a,
+  0xfe, 0xd1, 0x95, 0x6b, 0x41, 0xdd, 0x9b, 0xcd, 0xbf, 0x95, 0x09, 0xf4,
+  0x38, 0x1a, 0x18, 0xfb, 0xd7, 0xdf, 0x01, 0x4e, 0xc3, 0x51, 0x08, 0x5d,
+  0x1c, 0x59, 0xc9, 0x88, 0xe3, 0x2d, 0xbc, 0x0d, 0xc1, 0x5f, 0x43, 0x4a,
+  0xe4, 0x6a, 0x61, 0x7e, 0xfd, 0x87, 0x07, 0x06, 0x21, 0xdf, 0xaa, 0xce,
+  0x59, 0xbd, 0x0b, 0x0e, 0x7c, 0x41, 0x6a, 0x31, 0x0d, 0x94, 0x45, 0x6d,
+  0x73, 0x0b, 0x0f, 0xe3, 0x32, 0xda, 0x49, 0x94, 0xbe, 0xf7, 0xf9, 0x70,
+  0x5f, 0x40, 0x58, 0x67, 0x79, 0xea, 0xc1, 0xec, 0x64, 0x06, 0x38, 0x26,
+  0x98, 0x2f, 0x20, 0xb3, 0x6e, 0x8a, 0xbb, 0x8f, 0x1e, 0x2e, 0x89, 0x67,
+  0x60, 0x99, 0x6e, 0xb8, 0x66, 0x65, 0xa4, 0xe8, 0xb5, 0x95, 0x41, 0x74,
+  0x4b, 0x23, 0x4b, 0xa2, 0x17, 0x74, 0x7b, 0x51, 0xba, 0x62, 0x9f, 0x92,
+  0x35, 0x50, 0x26, 0xc9, 0x96, 0x15, 0xe6, 0x15, 0x1d, 0x74, 0xdb, 0x1d,
+  0x04, 0x81, 0x3e, 0xb0, 0x0a, 0x1a, 0x1f, 0x6b, 0x0e, 0xdc, 0x25, 0x4a,
+  0x34, 0x8f, 0x37, 0x1c, 0x21, 0x5d, 0xef, 0xf2, 0x65, 0xc8, 0x12, 0x1a,
+  0xd5, 0xb4, 0x9d, 0x83, 0x46, 0x71, 0x38, 0x39, 0x32, 0x4c, 0x99, 0x18,
+  0x9f, 0xa2, 0x8f, 0x8d, 0x63, 0x02, 0x27, 0xb6, 0x40, 0x12, 0x04, 0xe9,
+  0xa1, 0x03, 0x93, 0x37, 0x04, 0xf2, 0x85, 0xba, 0x7c, 0xff, 0x38, 0x89,
+  0x43, 0xba, 0x5a, 0xff, 0xd1, 0x53, 0x4f, 0x9b, 0x87, 0xeb, 0x59, 0x47,
+  0x2e, 0x89, 0x4c, 0x49, 0x0a, 0x86, 0xd9, 0x94, 0x74, 0xf0, 0x61, 0x9c,
+  0x7f, 0x30, 0x89, 0xe6, 0x38, 0x1f, 0x1e, 0x43, 0x30, 0x89, 0x8f, 0x8e,
+  0x84, 0x7a, 0x32, 0x92, 0xe1, 0xaa, 0x8d, 0x6f, 0x5c, 0xc7, 0x74, 0xd7,
+  0x26, 0xee, 0x0b, 0xe0, 0x1e, 0xe4, 0x06, 0xcc, 0x32, 0x81, 0xca, 0x83,
+  0x43, 0x30, 0x78, 0x78, 0x24, 0x57, 0xd1, 0x89, 0xee, 0x42, 0x12, 0xe0,
+  0x31, 0x58, 0x4e, 0x7c, 0xe5, 0xc6, 0x80, 0x6d, 0x0d, 0x3e, 0x56, 0xc2,
+  0xcd, 0x50, 0xc0, 0x40, 0x61, 0x56, 0x3e, 0xe5, 0x44, 0xaf, 0x23, 0xb4,
+  0x78, 0x1c, 0xd6, 0xd9, 0x3b, 0x21, 0x63, 0x64, 0xbb, 0x1b, 0x5e, 0x8f,
+  0x43, 0x82, 0x48, 0x75, 0x35, 0xcc, 0x7a, 0x3b, 0x80, 0x46, 0xcf, 0x43,
+  0xfa, 0xc8, 0x5a, 0x70, 0xf8, 0x97, 0x9b, 0x8e, 0xa6, 0x3c, 0xd8, 0x95,
+  0xad, 0xd8, 0x03, 0x9c, 0x3e, 0x0f, 0x56, 0x31, 0xe1, 0xfc, 0x89, 0x87,
+  0x9b, 0x03, 0x8a, 0x9a, 0x6b, 0xd0, 0x05, 0x84, 0x03, 0x6f, 0x42, 0x04,
+  0x5b, 0xba, 0x0d, 0x93, 0x20, 0xe1, 0xfb, 0x53, 0x18, 0x55, 0xc7, 0x92,
+  0x30, 0x83, 0x76, 0x87, 0xef, 0x32, 0x0c, 0xe8, 0x0c, 0xea, 0xb4, 0xff,
+  0xd7, 0x09, 0xb5, 0xf3, 0xb4, 0x15, 0x65, 0xeb, 0x3c, 0x7d, 0x6c, 0x0e,
+  0x9d, 0x24, 0xae, 0x73, 0xb0, 0xd3, 0x16, 0xce, 0xe1, 0x9f, 0x7c, 0xd8,
+  0x38, 0xe4, 0xe8, 0x9d, 0xa1, 0x73, 0xca, 0x48, 0x04, 0x3c, 0xc8, 0x03,
+  0xed, 0x48, 0xa0, 0x90, 0x5c, 0x5c, 0x4c, 0xea, 0xf6, 0x74, 0x47, 0x80,
+  0x0f, 0x5a, 0x53, 0xb3, 0x42, 0xf2, 0x50, 0x6b, 0xe6, 0x23, 0x73, 0x4d,
+  0x41, 0x71, 0xff, 0x08, 0xb9, 0x72, 0xa1, 0x84, 0xce, 0x1e, 0xed, 0x24,
+  0xe8, 0x4a, 0x4a, 0x97, 0x0f, 0xcc, 0x20, 0x50, 0x63, 0x1e, 0xee, 0x31,
+  0x3c, 0x67, 0xdd, 0x5d, 0x6b, 0xe0, 0x61, 0xf2, 0x69, 0x4b, 0xb7, 0x36,
+  0x56, 0x92, 0x24, 0xf9, 0x6c, 0xea, 0xf7, 0x81, 0xdb, 0x4a, 0xd9, 0xda,
+  0x17, 0x40, 0xa7, 0xca, 0x33, 0x81, 0x94, 0x49, 0xc2, 0x62, 0xb5, 0x2a,
+  0x05, 0x07, 0xf1, 0xe3, 0x77, 0xb4, 0x69, 0xd4, 0xae, 0x3d, 0x0e, 0x08,
+  0xe3, 0xd1, 0x2d, 0x19, 0xe0, 0x0e, 0x88, 0x3b, 0x6b, 0x46, 0xe5, 0xa6,
+  0x88, 0xc5, 0xb5, 0x61, 0x59, 0xc8, 0xe5, 0x6f, 0x34, 0x2a, 0x69, 0xed,
+  0x53, 0xc6, 0x54, 0xcd, 0xde, 0xd1, 0x10, 0x48, 0x1d, 0xa6, 0x6d, 0xaf,
+  0x48, 0x0e, 0xff, 0xb8, 0xb4, 0x2e, 0xcf, 0x19, 0xcd, 0x71, 0x56, 0x3b,
+  0x8d, 0xb9, 0x4c, 0x26, 0x19, 0xa9, 0xde, 0xa8, 0xb2, 0x2a, 0xe6, 0x39,
+  0xfc, 0xfe, 0x11, 0x12, 0x94, 0x28, 0x65, 0x93, 0xe1, 0x9c, 0x3a, 0x32,
+  0x64, 0x6c, 0x37, 0x18, 0xb9, 0xb8, 0x07, 0x6b, 0xab, 0x23, 0xf9, 0x22,
+  0x69, 0xdb, 0x4d, 0xab, 0xa0, 0xe0, 0xd0, 0xf0, 0x01, 0x44, 0x48, 0xd7,
+  0x3f, 0x29, 0x2a, 0xe9, 0x72, 0xa9, 0x47, 0xfc, 0xe3, 0x73, 0x17, 0x34,
+  0x1e, 0xc9, 0x3e, 0x29, 0x50, 0x51, 0x07, 0x46, 0x84, 0xba, 0x28, 0x6e,
+  0xcd, 0xb6, 0x2d, 0x21, 0xa9, 0x75, 0xec, 0x52, 0x69, 0xfd, 0x27, 0x88,
+  0x6a, 0xf2, 0x38, 0x43, 0x51, 0x8c, 0x46, 0xdf, 0x30, 0xde, 0xa2, 0xe3,
+  0x37, 0x3b, 0x6c, 0x24, 0xae, 0x6e, 0x80, 0x15, 0x59, 0x7c, 0xca, 0x25,
+  0xe8, 0x8a, 0xdc, 0x61, 0x1d, 0x9c, 0xc9, 0xe7, 0x53, 0x97, 0xa1, 0x29,
+  0x56, 0xfe, 0x4e, 0x13, 0xbd, 0x3c, 0x3a, 0x77, 0x13, 0x4c, 0x5c, 0xf9,
+  0x86, 0x70, 0xec, 0x5b, 0x1f, 0xa3, 0x73, 0x95, 0x48, 0x9b, 0x73, 0xec,
+  0x9c, 0x11, 0xab, 0x43, 0x6c, 0x72, 0x5c, 0x2d, 0xff, 0x1f, 0xd8, 0x58,
+  0xa4, 0xec, 0xb1, 0x20, 0x2f, 0xa9, 0xa0, 0x30, 0xe0, 0x7e, 0x7c, 0xc8,
+  0x5c, 0x76, 0xa7, 0xbb, 0x0e, 0x55, 0x97, 0xda, 0xac, 0xd8, 0x50, 0x6c,
+  0x81, 0xeb, 0x18, 0xb6, 0x2b, 0xdc, 0xfc, 0x8b, 0xc6, 0x2c, 0x99, 0x1d,
+  0x86, 0xf6, 0xc5, 0x43, 0x86, 0xed, 0xc6, 0x81, 0x13, 0xd2, 0x0d, 0x4e,
+  0xfa, 0xdf, 0x27, 0x69, 0xe1, 0x62, 0x10, 0x16, 0x78, 0x5e, 0x4e, 0x63,
+  0x77, 0xad, 0xfa, 0x82, 0x66, 0x5c, 0x3a, 0x3e, 0xbb, 0x2e, 0x3e, 0xca,
+  0x26, 0xd2, 0xc0, 0x45, 0x1a, 0x98, 0xa6, 0x26, 0xa6, 0x66, 0x06, 0x76,
+  0xbf, 0x8e, 0xa4, 0xaa, 0x48, 0x35, 0x9d, 0x14, 0x33, 0x71, 0xa8, 0xbc,
+  0x07, 0x40, 0x6a, 0xf7, 0x5e, 0x78, 0xc9, 0xab, 0x9b, 0x40, 0x18, 0x1c,
+  0x10, 0xeb, 0xac, 0x38, 0x8b, 0x41, 0xad, 0xf6, 0x87, 0xfb, 0x27, 0x16,
+  0xb7, 0x74, 0xcb, 0x23, 0x44, 0x22, 0x64, 0xda, 0x77, 0x67, 0x43, 0x6a,
+  0x8d, 0x7d, 0x1a, 0x29, 0x88, 0xd1, 0xd2, 0xe1, 0xb3, 0xb5, 0xd0, 0xdb,
+  0x90, 0x85, 0xc4, 0x5f, 0x2a, 0x72, 0xf0, 0x5d, 0x5a, 0x7d, 0x6c, 0x74,
+  0xa9, 0x54, 0xfd, 0x6a, 0x2e, 0x82, 0x8f, 0xcd, 0x71, 0x97, 0x4c, 0x92,
+  0x7d, 0xc8, 0xe2, 0xf2, 0x0a, 0x5d, 0x2c, 0x5e, 0xa3, 0x51, 0x10, 0xa6,
+  0xe1, 0x42, 0xfb, 0x83, 0xf5, 0x0a, 0xd1, 0xc8, 0x3e, 0x2a, 0xc5, 0x76,
+  0x09, 0xf6, 0x18, 0x2b, 0x46, 0xfe, 0xe9, 0xc7, 0xe7, 0xf7, 0x61, 0x71,
+  0x82, 0x97, 0x87, 0x12, 0x00, 0xf1, 0xe1, 0x19, 0x67, 0x9f, 0xaa, 0x54,
+  0x01, 0x18, 0xaa, 0x79, 0x8c, 0xda, 0x0c, 0xc2, 0x4a, 0xdc, 0xc7, 0x68,
+  0x96, 0x1d, 0x92, 0x81, 0xee, 0x40, 0x50, 0x90, 0x4b, 0xb0, 0x70, 0x0d,
+  0xcc, 0x9b, 0x34, 0x53, 0x3e, 0x3e, 0x75, 0xf6, 0x29, 0x37, 0x0d, 0xdf,
+  0xff, 0xdd, 0x67, 0x46, 0x65, 0xc5, 0x86, 0xfc, 0x16, 0xaf, 0xb3, 0x25,
+  0x54, 0x69, 0x60, 0x1c, 0x9c, 0x0e, 0x9f, 0x42, 0x46, 0x6c, 0xc2, 0xc8,
+  0xb4, 0xa2, 0x11, 0xe6, 0xe3, 0xc0, 0x06, 0xc5, 0xf3, 0x61, 0xae, 0x86,
+  0x79, 0xfe, 0x51, 0x55, 0x2d, 0x57, 0xb4, 0x54, 0x70, 0xe7, 0x55, 0xa7,
+  0xc5, 0x15, 0x59, 0x11, 0x66, 0xc4, 0x94, 0x09, 0xc1, 0xbb, 0xeb, 0x4c,
+  0x4e, 0xec, 0x92, 0xcc, 0xa4, 0x66, 0x85, 0x4f, 0x46, 0x80, 0x76, 0xc1,
+  0xc2, 0xcb, 0x47, 0x46, 0xa0, 0x76, 0x49, 0xf3, 0xbd, 0x6d, 0x02, 0x10,
+  0x83, 0x2d, 0x93, 0xe6, 0x75, 0x10, 0x15, 0xd8, 0x25, 0x01, 0x1e, 0x3c,
+  0xdc, 0x9c, 0x3a, 0xea, 0x7e, 0x0f, 0xc4, 0xfd, 0x20, 0xcd, 0xfe, 0xf9,
+  0x8f, 0x16, 0xcc, 0x72, 0xb0, 0xb3, 0xf3, 0xf3, 0x8f, 0x8d, 0x58, 0x87,
+  0x2f, 0x7f, 0xfe, 0x94, 0x6a, 0xb3, 0xcd, 0x9c, 0x3f, 0x81, 0x95, 0xe9,
+  0x32, 0x75, 0x4b, 0x7f, 0xb1, 0x5b, 0x28, 0xf7, 0x41, 0xe4, 0x69, 0x12,
+  0x0c, 0x26, 0xa8, 0xcd, 0x58, 0xac, 0xa9, 0xe0, 0xda, 0x80, 0xb0, 0x96,
+  0xf6, 0x1d, 0x12, 0x95, 0x54, 0xdf, 0x75, 0xb8, 0x3c, 0xfd, 0x00, 0x8a,
+  0xa5, 0xdf, 0x09, 0x44, 0xc0, 0x5d, 0x72, 0x2d, 0x3a, 0x0f, 0x9f, 0x01,
+  0x47, 0x91, 0x28, 0x4e, 0x0d, 0xd0, 0x6a, 0x00, 0x44, 0xb8, 0x68, 0xe9,
+  0x2e, 0x08, 0x6e, 0x45, 0x23, 0x4d, 0xde, 0x14, 0x1e, 0xb5, 0x20, 0x40,
+  0x7e, 0xd0, 0x74, 0x23, 0x71, 0x6f, 0x30, 0x74, 0x21, 0xab, 0xcf, 0x2e,
+  0xd5, 0x24, 0x82, 0x66, 0xe5, 0x62, 0x54, 0xf0, 0xd8, 0xb8, 0x72, 0xb9,
+  0x82, 0xf6, 0x78, 0x19, 0xd4, 0x7b, 0x77, 0xa1, 0x40, 0xde, 0x3c, 0x99,
+  0x2f, 0xba, 0x62, 0x00, 0x05, 0xbe, 0xa1, 0x0b, 0x19, 0x52, 0x33, 0x98,
+  0x1f, 0xc0, 0xac, 0x30, 0x73, 0x52, 0xb8, 0x95, 0x9a, 0x20, 0x1c, 0x45,
+  0xeb, 0x0a, 0xa8, 0x85, 0x70, 0xc8, 0xf5, 0x18, 0x16, 0x91, 0x3f, 0x36,
+  0xfb, 0x90, 0x0b, 0xc4, 0x6b, 0x18, 0x4a, 0x12, 0xb8, 0x49, 0xd4, 0xa4,
+  0x54, 0x65, 0x75, 0x47, 0x12, 0xb3, 0xc5, 0xd7, 0x58, 0x7a, 0xa5, 0xc0,
+  0x70, 0x94, 0xd9, 0xe6, 0xda, 0x4c, 0x5a, 0x6e, 0x08, 0xdd, 0xa5, 0x1b,
+  0x1d, 0x32, 0xa9, 0x8f, 0x92, 0xa9, 0x24, 0x91, 0xf8, 0x03, 0x52, 0x8d,
+  0x7a, 0xc8, 0x26, 0xb4, 0x31, 0x77, 0x85, 0x84, 0xb3, 0xe7, 0xcd, 0x39,
+  0x5e, 0x03, 0x21, 0x47, 0xe3, 0xf6, 0x38, 0x43, 0xf3, 0x7d, 0xe6, 0x81,
+  0xa5, 0x7d, 0xa9, 0xe2, 0xee, 0xcb, 0x84, 0x64, 0x21, 0x31, 0x6d, 0x80,
+  0xb6, 0x88, 0xcb, 0x31, 0x3c, 0xa2, 0xf2, 0x79, 0x6e, 0x40, 0xa2, 0x68,
+  0x55, 0xbd, 0x62, 0x3d, 0x93, 0xbe, 0x66, 0x2f, 0xee, 0xc7, 0xe3, 0xd4,
+  0xdc, 0x10, 0xc5, 0xc7, 0xaf, 0xe5, 0x78, 0x9d, 0x2f, 0xca, 0x33, 0x41,
+  0xe0, 0x8d, 0xb2, 0xa8, 0x90, 0xc6, 0xa8, 0x6b, 0x57, 0x6e, 0x99, 0xea,
+  0x15, 0xc9, 0x3a, 0xb3, 0xb8, 0x0c, 0x33, 0xbc, 0x95, 0xc2, 0x90, 0x34,
+  0xd1, 0x64, 0xb0, 0x34, 0x1e, 0xd4, 0x9e, 0xec, 0xbd, 0x36, 0xb2, 0xc6,
+  0x6b, 0xf6, 0x56, 0x53, 0x8b, 0x82, 0xf8, 0xaa, 0x46, 0x64, 0xb0, 0x2f,
+  0x73, 0x15, 0xd3, 0x2a, 0xef, 0xc1, 0x46, 0x6c, 0x92, 0x93, 0xda, 0x12,
+  0x41, 0x64, 0x85, 0xcc, 0xba, 0x09, 0x47, 0xc1, 0xdd, 0xe1, 0xca, 0x0b,
+  0x6a, 0x55, 0xa6, 0x93, 0x38, 0xd9, 0xbf, 0x84, 0xc2, 0x8a, 0xea, 0x0c,
+  0x5f, 0xfa, 0xac, 0xc6, 0x3f, 0x3d, 0xde, 0x65, 0xe6, 0x62, 0x8d, 0xa4,
+  0x41, 0xfc, 0x53, 0xf2, 0xa7, 0x47, 0xe9, 0x03, 0x0c, 0x13, 0x2a, 0x54,
+  0xc4, 0x2e, 0xa5, 0x48, 0x4b, 0x3a, 0xd1, 0x62, 0x23, 0x77, 0xe9, 0xbd,
+  0x41, 0xef, 0xca, 0x6b, 0x11, 0x64, 0x65, 0xd7, 0x61, 0xea, 0x87, 0x41,
+  0xe8, 0x75, 0xc8, 0x4c, 0x94, 0xf3, 0x6e, 0x29, 0xa3, 0x6a, 0xe7, 0xdb,
+  0x5a, 0xf9, 0x6e, 0xd4, 0xf1, 0x84, 0x37, 0x89, 0x37, 0xe5, 0xcf, 0x0f,
+  0xc6, 0xb6, 0xfe, 0x46, 0x57, 0xd7, 0x0f, 0x52, 0xed, 0x42, 0xb8, 0xf2,
+  0xda, 0xda, 0xcd, 0x92, 0x4c, 0x32, 0x72, 0x59, 0xb0, 0xa9, 0x15, 0x7e,
+  0xb0, 0x37, 0x35, 0xa9, 0x29, 0xcc, 0x1b, 0x7c, 0xb8, 0x9a, 0x7d, 0xe8,
+  0x2a, 0xc4, 0x99, 0x75, 0xf9, 0x2e, 0x97, 0x8d, 0xfb, 0xaf, 0x8d, 0x3e,
+  0xdc, 0x51, 0x04, 0xa1, 0x55, 0x62, 0x5c, 0x87, 0xe2, 0xab, 0x3d, 0x60,
+  0x69, 0x14, 0xef, 0xde, 0x27, 0xb7, 0x41, 0xa6, 0xfb, 0xfa, 0xf8, 0x72,
+  0x3b, 0x06, 0x4b, 0x4d, 0xa7, 0xe1, 0xc0, 0x90, 0x53, 0x64, 0x47, 0x3c,
+  0x75, 0xb5, 0x45, 0x5c, 0x8e, 0xe7, 0x82, 0x61, 0x2b, 0x48, 0xb6, 0x5a,
+  0x74, 0x83, 0x1e, 0x1e, 0xd1, 0x32, 0x70, 0xfa, 0xb8, 0x8f, 0x45, 0x0a,
+  0x6d, 0x7c, 0x55, 0xe2, 0xb4, 0x1c, 0xa4, 0x92, 0x8b, 0xc0, 0xfa, 0xf2,
+  0xf8, 0xf4, 0xf8, 0xf2, 0xb8, 0x0f, 0x24, 0x8e, 0xc8, 0x90, 0x3b, 0xc3,
+  0xed, 0x55, 0x67, 0x93, 0x9b, 0x45, 0xc1, 0x41, 0xa3, 0x59, 0x25, 0x09,
+  0xba, 0xdf, 0x67, 0xe3, 0x97, 0x87, 0xdf, 0x71, 0xe9, 0x2e, 0x3e, 0x33,
+  0xe7, 0x17, 0x67, 0xe7, 0xaf, 0x4e, 0xde, 0xbc, 0xec, 0x27, 0x47, 0x67,
+  0xe7, 0x7f, 0xed, 0x27, 0xaf, 0xcf, 0xbe, 0x3b, 0xee, 0x88, 0xe6, 0xe6,
+  0x50, 0xb1, 0x8e, 0xc0, 0x27, 0x2d, 0x8f, 0xc1, 0x47, 0x75, 0x0a, 0xa0,
+  0xe1, 0x45, 0x66, 0x10, 0xd3, 0xe6, 0x3c, 0x65, 0x96, 0x8c, 0x32, 0x18,
+  0xea, 0x7c, 0xa2, 0xa5, 0xa4, 0x01, 0x7f, 0x73, 0x7c, 0xf8, 0xb2, 0x2d,
+  0x0e, 0x9c, 0x9f, 0x8d, 0x2e, 0x31, 0x2f, 0x9e, 0xa0, 0x9b, 0x37, 0xb3,
+  0x6f, 0x62, 0x96, 0x6c, 0xe7, 0x66, 0x25, 0xf3, 0x36, 0x0b, 0xc0, 0x1e,
+  0xe9, 0x08, 0xc0, 0x4a, 0x36, 0x5d, 0x5b, 0xf6, 0x17, 0x21, 0x10, 0x2e,
+  0x52, 0xee, 0xa1, 0x9b, 0x90, 0xbd, 0xdc, 0x21, 0xb2, 0x7a, 0xa2, 0x9e,
+  0x05, 0x0b, 0xc1, 0x96, 0x28, 0xe2, 0x7c, 0x11, 0x6c, 0xf9, 0x46, 0xa7,
+  0xf3, 0x44, 0x94, 0x1f, 0x87, 0x14, 0x03, 0x51, 0x49, 0xc2, 0x1f, 0x52,
+  0x0d, 0x60, 0x1b, 0x67, 0x9c, 0x21, 0x52, 0xa1, 0x32, 0x4c, 0x10, 0x36,
+  0xdd, 0xcd, 0xde, 0x2d, 0x82, 0x11, 0x21, 0x4e, 0x10, 0xd4, 0xd8, 0x06,
+  0xc9, 0xeb, 0xe7, 0x3b, 0x34, 0x94, 0xff, 0x1f, 0x64, 0x61, 0x93, 0x2e,
+  0x84, 0x01, 0x08, 0x14, 0xab, 0x2b, 0xa2, 0xcd, 0x4c, 0xa2, 0x45, 0x64,
+  0xab, 0x0a, 0x1f, 0x86, 0x78, 0xc2, 0x47, 0xfc, 0x06, 0x27, 0xa4, 0xfb,
+  0x0a, 0xd8, 0x7a, 0xb5, 0xe6, 0x74, 0x87, 0xd5, 0xaa, 0xb4, 0xc5, 0xe0,
+  0xb0, 0x9d, 0x9e, 0xd0, 0xbe, 0xf2, 0x51, 0x6f, 0x47, 0x11, 0x22, 0x45,
+  0x47, 0xea, 0x91, 0xe6, 0xbc, 0xd5, 0x38, 0xea, 0xd4, 0x56, 0xdc, 0x31,
+  0x47, 0x5f, 0x77, 0xf6, 0x8c, 0xb0, 0xec, 0x8f, 0x74, 0x1d, 0x99, 0xc1,
+  0x2e, 0x8e, 0x2f, 0x2f, 0x5a, 0x5e, 0xfd, 0xa7, 0x1d, 0xb6, 0xbc, 0x2d,
+  0x8e, 0xfc, 0xde, 0x4e, 0x82, 0x6e, 0x83, 0x4a, 0x36, 0xfc, 0x5d, 0x47,
+  0xc7, 0x41, 0xbf, 0x0f, 0xe5, 0x8e, 0x3e, 0xea, 0x42, 0xc3, 0xdd, 0x12,
+  0xec, 0xde, 0x8e, 0x59, 0x22, 0xe6, 0x7c, 0xfd, 0x2c, 0xbf, 0x39, 0x3e,
+  0x3d, 0x8f, 0x67, 0xf9, 0xdd, 0xc5, 0xab, 0xbf, 0x0e, 0x1f, 0xc8, 0x0a,
+  0xfc, 0xed, 0x63, 0x7a, 0x3f, 0xa4, 0x75, 0xdd, 0x09, 0x83, 0x4d, 0x97,
+  0xa5, 0x94, 0x24, 0xb1, 0x10, 0x27, 0xa0, 0x10, 0x48, 0xf5, 0xaf, 0x7a,
+  0x2d, 0x44, 0x2e, 0x4d, 0x3d, 0x12, 0x1b, 0x4c, 0xc2, 0x92, 0x12, 0xc7,
+  0xc4, 0x5a, 0xa5, 0x9a, 0xd6, 0xc2, 0x57, 0x4e, 0xd3, 0x08, 0x13, 0x1e,
+  0x4a, 0x3e, 0xe6, 0xa2, 0x1a, 0x8d, 0xec, 0xeb, 0x0e, 0xe1, 0x55, 0xc3,
+  0x72, 0xd1, 0x9b, 0x93, 0x5e, 0x3e, 0x4c, 0xaf, 0x87, 0x45, 0x99, 0xb3,
+  0x7d, 0x4e, 0x4b, 0x9d, 0x49, 0x6b, 0x09, 0x4a, 0x7a, 0xf2, 0xa1, 0x65,
+  0x06, 0xd0, 0xd5, 0x9c, 0x46, 0x0c, 0x25, 0x96, 0x4a, 0xdd, 0x6c, 0x77,
+  0x0e, 0xd5, 0x1e, 0xc1, 0x44, 0xae, 0xcd, 0x61, 0xb2, 0xa6, 0x24, 0xbd,
+  0xcc, 0xa4, 0xba, 0xa7, 0x8d, 0x9e, 0x27, 0x9e, 0xa3, 0x98, 0xc6, 0xe1,
+  0xa6, 0xec, 0xe7, 0xca, 0x31, 0x5d, 0x77, 0x69, 0xb9, 0x90, 0x6a, 0xdd,
+  0x11, 0xe8, 0x6f, 0xb5, 0x6a, 0x6c, 0xd8, 0x3d, 0x82, 0x28, 0xd9, 0x4d,
+  0xa2, 0xf5, 0x0d, 0xf8, 0x67, 0x47, 0x45, 0x9b, 0xd4, 0xbb, 0x7a, 0x78,
+  0x42, 0xec, 0x4e, 0x56, 0x80, 0x7e, 0x79, 0x59, 0xb0, 0xf8, 0xc7, 0x2d,
+  0x07, 0x89, 0x66, 0x5c, 0x44, 0xa9, 0xff, 0x41, 0x87, 0x82, 0x2a, 0xd2,
+  0x6f, 0x78, 0xdc, 0x38, 0x10, 0x11, 0x88, 0x08, 0x62, 0x3a, 0xa3, 0xee,
+  0x83, 0x17, 0xa2, 0x39, 0x79, 0x08, 0x63, 0x87, 0x8d, 0x16, 0x0c, 0xc9,
+  0x08, 0x75, 0xcf, 0x10, 0xe5, 0x59, 0x9d, 0x90, 0xb4, 0xe9, 0xbf, 0x3e,
+  0x5c, 0x57, 0x48, 0x62, 0xb9, 0x43, 0xec, 0x1e, 0x91, 0xbd, 0x56, 0x95,
+  0x15, 0xb0, 0xe0, 0x9d, 0x48, 0x52, 0x18, 0x35, 0x12, 0xac, 0xc9, 0x46,
+  0xa7, 0xaf, 0x93, 0x6b, 0xa9, 0xd4, 0x93, 0x00, 0x8f, 0x19, 0xf1, 0x71,
+  0xf4, 0x25, 0x51, 0xb2, 0x08, 0x08, 0xc4, 0xe4, 0xfb, 0x02, 0xa6, 0x80,
+  0xfa, 0x6d, 0xfa, 0xde, 0xa0, 0xc3, 0x26, 0xc4, 0xa6, 0xaf, 0x35, 0xac,
+  0xf9, 0xb7, 0x3b, 0xc5, 0x7f, 0xf5, 0x44, 0x21, 0x8b, 0xf8, 0x1c, 0x7f,
+  0xfc, 0x22, 0xb2, 0x08, 0xea, 0x36, 0x88, 0x17, 0x6e, 0x8b, 0xc8, 0xbf,
+  0x41, 0x1f, 0x83, 0x28, 0x69, 0x71, 0xba, 0x6d, 0xc9, 0x67, 0x7e, 0xbb,
+  0xd5, 0xcc, 0xc5, 0xf7, 0x69, 0x93, 0x2a, 0x1a, 0x24, 0xd1, 0xa1, 0x94,
+  0xca, 0x1e, 0x4b, 0x62, 0x46, 0xce, 0x55, 0x4b, 0xf9, 0x36, 0xc5, 0xd9,
+  0xc9, 0x7e, 0x4f, 0xe0, 0xac, 0x7f, 0x00, 0x38, 0x8b, 0x8b, 0x1f, 0xe2,
+  0x00, 0x3c, 0x9f, 0xb2, 0x15, 0x90, 0x84, 0x3e, 0xf6, 0xfb, 0x53, 0xd3,
+  0x5f, 0xfc, 0x47, 0x77, 0xed, 0x41, 0x2b, 0xca, 0x1b, 0xa6, 0x61, 0x8b,
+  0xf3, 0x80, 0x35, 0x2c, 0x57, 0xd7, 0x4d, 0xab, 0xbc, 0xb3, 0x99, 0xac,
+  0xb6, 0x95, 0xee, 0xe0, 0x1a, 0xb2, 0xee, 0x56, 0x63, 0x87, 0xcf, 0x21,
+  0x3d, 0xde, 0x67, 0x2d, 0xa8, 0x58, 0xac, 0x6d, 0x52, 0x4d, 0xdd, 0xfc,
+  0x6d, 0x07, 0xe1, 0x89, 0x9d, 0x30, 0x9a, 0x8e, 0xa9, 0x47, 0x6c, 0x4a,
+  0x11, 0x09, 0x8f, 0x2e, 0x23, 0x3c, 0x24, 0x6a, 0x5f, 0xd5, 0x11, 0x02,
+  0x44, 0xfb, 0xa0, 0xd2, 0x11, 0x8b, 0x8b, 0x02, 0xa3, 0xc7, 0xf1, 0xcc,
+  0xae, 0xe8, 0x20, 0x0d, 0xb2, 0x32, 0xf0, 0x33, 0x0e, 0xd0, 0x00, 0xa8,
+  0x79, 0xea, 0xa2, 0x19, 0xbb, 0x34, 0x22, 0xab, 0xa2, 0x85, 0x2a, 0xa1,
+  0x90, 0xce, 0x64, 0x5e, 0x86, 0xc1, 0x81, 0x21, 0x25, 0x5b, 0x73, 0x9e,
+  0xca, 0xb6, 0x19, 0xa4, 0x3b, 0xb7, 0xc2, 0x61, 0xb5, 0x49, 0x79, 0x23,
+  0x07, 0xe9, 0x42, 0x2d, 0x73, 0x23, 0x0a, 0xe7, 0x02, 0x00, 0x17, 0x29,
+  0x66, 0xd6, 0x5a, 0x92, 0x28, 0x4f, 0xa2, 0x6e, 0x96, 0x6d, 0xb0, 0x24,
+  0x97, 0x3a, 0x2d, 0x5d, 0xc5, 0x8c, 0xf0, 0x7d, 0x33, 0xc7, 0x31, 0xaa,
+  0x53, 0xb2, 0x35, 0xd8, 0x76, 0x82, 0x1f, 0xca, 0x45, 0x09, 0x6d, 0xc4,
+  0xee, 0xeb, 0xd4, 0x07, 0x9d, 0xba, 0xe4, 0x08, 0x01, 0x5b, 0xd7, 0xd3,
+  0x68, 0xa9, 0xcc, 0xdc, 0xdb, 0x8e, 0x18, 0x91, 0x8d, 0x5d, 0x32, 0x3b,
+  0x8a, 0xe4, 0xb2, 0x56, 0x5b, 0x8b, 0xec, 0x2e, 0x6c, 0xcb, 0x2b, 0x5d,
+  0xae, 0xbd, 0xdf, 0xf1, 0x4c, 0xdd, 0x88, 0x54, 0x3a, 0x5b, 0x46, 0xf6,
+  0x08, 0x76, 0xf6, 0xf3, 0x17, 0xc1, 0xc3, 0xaf, 0xa5, 0xac, 0xcb, 0x22,
+  0x8e, 0x08, 0x7a, 0x8d, 0x0f, 0x87, 0xc9, 0x4b, 0x8d, 0xec, 0x47, 0x12,
+  0xf5, 0x4a, 0x5b, 0x40, 0xb8, 0x77, 0xd0, 0xcc, 0x77, 0x9a, 0x49, 0xd3,
+  0xb1, 0xa5, 0xfa, 0x7e, 0xd5, 0xc8, 0xd6, 0x13, 0xaf, 0x84, 0xa0, 0x3a,
+  0xa9, 0x8a, 0x3e, 0xcb, 0xc7, 0xf8, 0xdb, 0xac, 0x95, 0x39, 0x02, 0x54,
+  0xab, 0x61, 0x87, 0xbd, 0x41, 0xfc, 0x1c, 0xd0, 0x54, 0xbc, 0x87, 0xc2,
+  0x4c, 0xfa, 0xf6, 0x3e, 0xab, 0x4e, 0x92, 0x27, 0xe3, 0x9a, 0xee, 0xca,
+  0xfd, 0x86, 0x9e, 0xf4, 0xa8, 0x9c, 0xc2, 0x8d, 0x77, 0xcf, 0x8f, 0x96,
+  0x69, 0x29, 0xaa, 0xdf, 0xe2, 0xd6, 0xcc, 0xbd, 0x62, 0xc4, 0xc8, 0x26,
+  0xab, 0xba, 0x09, 0x6a, 0x17, 0x3a, 0x44, 0xf5, 0x0e, 0x97, 0x61, 0x6d,
+  0xc1, 0x71, 0xa3, 0x02, 0x7a, 0xef, 0xdc, 0x4c, 0xbd, 0x07, 0xbd, 0x6d,
+  0x75, 0x66, 0x89, 0x5f, 0x52, 0x3f, 0xee, 0x4a, 0x20, 0xb7, 0x31, 0x97,
+  0x99, 0xc0, 0x5b, 0xd5, 0x85, 0x89, 0x31, 0x9d, 0xdd, 0x13, 0xed, 0x94,
+  0xd3, 0xae, 0xbe, 0x5f, 0x49, 0xe5, 0xe0, 0xa0, 0x6b, 0x67, 0x54, 0xd3,
+  0xa2, 0xc2, 0xed, 0xee, 0x3b, 0x7a, 0x86, 0xea, 0x4b, 0x9a, 0xa9, 0x8b,
+  0xfc, 0xb6, 0x57, 0x6d, 0xfd, 0xa3, 0x30, 0x70, 0x44, 0x56, 0x79, 0xe0,
+  0x30, 0x96, 0xbf, 0xf1, 0x91, 0x4b, 0xa7, 0x8d, 0x66, 0x71, 0x5b, 0x8e,
+  0x1f, 0xd3, 0x3f, 0xdf, 0xf2, 0x3f, 0xcc, 0x28, 0x58, 0x45, 0x12, 0xb4,
+  0x5e, 0x01, 0xfc, 0x89, 0x79, 0x02, 0x57, 0xa3, 0x11, 0xbd, 0x72, 0x04,
+  0x2a, 0x7a, 0x85, 0x5f, 0xca, 0xec, 0x81, 0x77, 0x68, 0x6e, 0xff, 0x60,
+  0xab, 0xe7, 0x8a, 0x94, 0x04, 0xa2, 0xc4, 0x89, 0x58, 0xd4, 0xe6, 0x8e,
+  0x9b, 0xa0, 0x64, 0xab, 0x83, 0xf3, 0x10, 0x00, 0x30, 0x18, 0x40, 0x61,
+  0x5a, 0xc8, 0xd7, 0xb8, 0x2f, 0xd7, 0xf7, 0x87, 0x04, 0xc7, 0xa4, 0x9d,
+  0xe7, 0x18, 0x20, 0x11, 0xaf, 0x79, 0xef, 0xeb, 0xd1, 0x68, 0xf0, 0x46,
+  0x31, 0x4d, 0xd6, 0xb8, 0xc4, 0xdc, 0xd7, 0xed, 0x86, 0x79, 0x29, 0x68,
+  0x31, 0x9f, 0x7c, 0xda, 0x2a, 0xbe, 0xe4, 0xcc, 0x34, 0x95, 0xe5, 0xb0,
+  0xed, 0x48, 0x2f, 0x4a, 0x1d, 0x15, 0x8c, 0x57, 0xb9, 0x95, 0x71, 0xc5,
+  0xa3, 0x43, 0x4b, 0xf5, 0x93, 0xb4, 0xce, 0x35, 0x2b, 0x22, 0x89, 0x72,
+  0xa8, 0xd3, 0x83, 0xa4, 0xa4, 0x5b, 0x07, 0x0e, 0x32, 0xcf, 0xe6, 0x0c,
+  0x41, 0xe8, 0x12, 0xe2, 0x44, 0xd8, 0xe3, 0x9c, 0x5e, 0xee, 0x6e, 0x8d,
+  0xe3, 0x6a, 0xca, 0x45, 0x6c, 0x58, 0x8d, 0x97, 0xe0, 0xfa, 0x3f, 0x44,
+  0x56, 0xec, 0xea, 0x7e, 0x31, 0xb9, 0x79, 0xf9, 0x66, 0xb4, 0xb1, 0x3e,
+  0x24, 0x20, 0x98, 0x1c, 0x9e, 0x2e, 0x8b, 0x05, 0x67, 0x53, 0x05, 0x71,
+  0x12, 0x59, 0xc7, 0xbd, 0x73, 0xfe, 0xe6, 0xf8, 0xeb, 0x33, 0xfb, 0x67,
+  0xed, 0x92, 0x3f, 0xb8, 0xc2, 0xa7, 0x69, 0x79, 0x9d, 0x75, 0xe0, 0x2b,
+  0x46, 0x83, 0x33, 0xc4, 0x97, 0x40, 0x86, 0x26, 0x7a, 0x9c, 0xf1, 0xeb,
+  0x42, 0x8a, 0x7d, 0xa5, 0x48, 0x7c, 0xb4, 0xc6, 0xcb, 0x8c, 0x4b, 0x67,
+  0xff, 0xeb, 0xaf, 0xe2, 0x0b, 0xe6, 0xe5, 0x9b, 0x35, 0xdd, 0xf1, 0x37,
+  0x03, 0x93, 0x27, 0xd4, 0x94, 0x36, 0xa5, 0xf3, 0x91, 0x4b, 0x29, 0x98,
+  0x8e, 0x55, 0x19, 0x9d, 0x9f, 0xb8, 0x7f, 0x98, 0x16, 0xfc, 0xe4, 0x2d,
+  0x97, 0x8e, 0x0f, 0xbc, 0x50, 0x3d, 0x27, 0x7d, 0x65, 0x2c, 0xa0, 0x8d,
+  0x67, 0xe9, 0xe2, 0x16, 0x06, 0xd8, 0xee, 0x91, 0x0b, 0x7e, 0x81, 0x07,
+  0x23, 0x08, 0xd6, 0x58, 0xcd, 0xf1, 0x48, 0xdd, 0x95, 0x24, 0x17, 0x05,
+  0x87, 0xea, 0x62, 0xe9, 0xce, 0x15, 0xb1, 0xc6, 0xc4, 0xab, 0x88, 0x60,
+  0xdd, 0x6f, 0x09, 0x54, 0xd8, 0x48, 0xaa, 0x38, 0x5d, 0x48, 0x6c, 0xd0,
+  0xb9, 0xb6, 0xb4, 0xfd, 0xd0, 0xb6, 0x77, 0x37, 0xc7, 0x47, 0xb0, 0xa3,
+  0xce, 0xcf, 0x6b, 0x12, 0x73, 0xf8, 0x7e, 0xf9, 0x64, 0x8a, 0xb0, 0x17,
+  0x92, 0xad, 0x31, 0xdd, 0x58, 0xee, 0x8e, 0x7b, 0xa4, 0x66, 0xcd, 0xc7,
+  0x02, 0x6f, 0xd6, 0xdd, 0xdc, 0x93, 0xcf, 0x9f, 0x3c, 0xde, 0xde, 0xee,
+  0x27, 0x89, 0x33, 0xd4, 0x4a, 0x2e, 0x16, 0xe7, 0x04, 0xe7, 0x7c, 0x42,
+  0x45, 0x55, 0x23, 0x11, 0xf7, 0x06, 0xba, 0xbf, 0xdb, 0x81, 0xee, 0xe6,
+  0x78, 0x67, 0xed, 0x3d, 0x9e, 0x1e, 0xe3, 0x7a, 0x82, 0x45, 0xe6, 0xea,
+  0xc3, 0x02, 0x0b, 0xce, 0xe4, 0x81, 0x2d, 0xf3, 0x30, 0xac, 0xf5, 0xec,
+  0x4b, 0xe5, 0xed, 0xd2, 0x02, 0x03, 0xc4, 0xaf, 0x03, 0x0f, 0x88, 0x5d,
+  0x36, 0x9c, 0x42, 0xff, 0xea, 0xe4, 0xf4, 0xd8, 0x1d, 0xee, 0xff, 0xbd,
+  0x33, 0xe4, 0x31, 0x96, 0x93, 0x38, 0x27, 0x11, 0x12, 0x5a, 0x90, 0xa6,
+  0xdc, 0x47, 0x96, 0xff, 0xe0, 0xdb, 0xbe, 0xe8, 0x89, 0xf8, 0xd8, 0x9b,
+  0x98, 0xa9, 0xe1, 0xe3, 0x37, 0xdf, 0x9d, 0x5c, 0x9c, 0xbd, 0x79, 0x7d,
+  0xfc, 0xc6, 0x65, 0x14, 0xf0, 0x75, 0xda, 0xe5, 0x81, 0xab, 0x62, 0xe7,
+  0x46, 0xce, 0x39, 0x29, 0x2c, 0xea, 0xb1, 0xb3, 0x89, 0x67, 0x41, 0xfb,
+  0xa5, 0x7f, 0x0d, 0xc3, 0xe6, 0x82, 0x87, 0x6c, 0xeb, 0x58, 0xa3, 0x58,
+  0x72, 0x24, 0xf0, 0x94, 0x33, 0xb6, 0x86, 0x92, 0x5e, 0x21, 0x8e, 0x94,
+  0x5c, 0x9c, 0x80, 0x1f, 0x26, 0x99, 0xa2, 0x8d, 0x57, 0x41, 0x75, 0x33,
+  0xcb, 0x2f, 0xf2, 0x59, 0x58, 0x8d, 0x41, 0x78, 0x6a, 0x97, 0xea, 0xcf,
+  0x52, 0x2f, 0xad, 0xcb, 0x9f, 0x08, 0x64, 0x8d, 0x3a, 0xf0, 0x3c, 0xdd,
+  0xa8, 0x5f, 0x06, 0x7e, 0x1a, 0x09, 0x3e, 0x08, 0xd0, 0xe1, 0x3d, 0xe6,
+  0xa5, 0x39, 0xe4, 0xdb, 0x8a, 0x75, 0x30, 0x83, 0x86, 0xab, 0x1e, 0x65,
+  0x0d, 0xbe, 0x50, 0xbf, 0x7c, 0x8c, 0xf2, 0x56, 0x85, 0xce, 0x2f, 0x21,
+  0x82, 0x00, 0x87, 0x00, 0x4e, 0xc3, 0x8d, 0x20, 0x86, 0x77, 0xf4, 0xee,
+  0xfc, 0xe2, 0xec, 0x87, 0xbf, 0xfe, 0xc6, 0x5d, 0x8c, 0xfc, 0x34, 0x7e,
+  0xe4, 0x6b, 0xc8, 0x1a, 0xff, 0xf9, 0x37, 0xef, 0xad, 0xd9, 0x7c, 0x3f,
+  0x40, 0x4d, 0xef, 0x84, 0xe4, 0x86, 0x93, 0x4b, 0xaa, 0x2f, 0x24, 0xde,
+  0xeb, 0x15, 0x04, 0xe9, 0x3a, 0x16, 0x01, 0x17, 0x7d, 0xd5, 0x24, 0xce,
+  0x34, 0xf6, 0x21, 0x0e, 0x13, 0x54, 0x40, 0x63, 0x59, 0x29, 0xae, 0x83,
+  0xd6, 0x07, 0xec, 0x3e, 0xae, 0x64, 0xb7, 0x1e, 0x87, 0xa7, 0xa7, 0xbf,
+  0xe9, 0x22, 0xc0, 0xae, 0xe0, 0xe7, 0x32, 0x70, 0xe2, 0xa8, 0xf9, 0xc4,
+  0x23, 0x29, 0xab, 0x61, 0x82, 0x78, 0x73, 0xa6, 0xa3, 0x11, 0x97, 0xda,
+  0xa0, 0xca, 0x48, 0x70, 0x87, 0x47, 0x83, 0x4d, 0xe2, 0x7c, 0x61, 0xa2,
+  0x68, 0xf8, 0x17, 0x91, 0xe0, 0x57, 0x09, 0x26, 0xbc, 0x2f, 0x89, 0xa1,
+  0x2e, 0x68, 0x01, 0x6e, 0x47, 0x7e, 0x77, 0xe1, 0xfc, 0xc1, 0x52, 0x9e,
+  0xc2, 0xea, 0x0e, 0x75, 0xf8, 0xf0, 0xd9, 0x1c, 0xcb, 0x11, 0x41, 0x65,
+  0x5e, 0xdd, 0x22, 0x31, 0x9e, 0x0f, 0xa5, 0xd6, 0xe5, 0xac, 0x51, 0xa4,
+  0x18, 0x15, 0xe6, 0x79, 0x28, 0x34, 0x76, 0x19, 0x31, 0xfd, 0xbc, 0x3c,
+  0x3b, 0x3a, 0x3b, 0xa5, 0x5f, 0x8e, 0x5f, 0x9d, 0xfc, 0xe0, 0x19, 0x9a,
+  0x94, 0xab, 0x68, 0x68, 0x3f, 0xbe, 0x76, 0x45, 0xcb, 0x31, 0xdc, 0x85,
+  0x20, 0xac, 0xf5, 0x6f, 0x37, 0x7c, 0x44, 0x80, 0x0b, 0x4d, 0x51, 0xff,
+  0x68, 0x00, 0xe8, 0xf0, 0x50, 0x24, 0x4a, 0x18, 0xc1, 0xd3, 0xd8, 0x25,
+  0xbd, 0xe6, 0x43, 0xd0, 0xe2, 0x46, 0x20, 0x83, 0x0e, 0xae, 0x28, 0x5d,
+  0xdd, 0xbb, 0x3a, 0x34, 0x65, 0xb6, 0xac, 0x17, 0x01, 0x1a, 0x2e, 0xe9,
+  0xb1, 0xe1, 0x24, 0x4d, 0xa5, 0x75, 0xb1, 0x24, 0x28, 0x70, 0xc3, 0x3c,
+  0x2c, 0x74, 0x1f, 0xb5, 0x42, 0x77, 0xe0, 0xd7, 0x74, 0x2d, 0x36, 0xe7,
+  0xa4, 0x0b, 0xa0, 0x59, 0xc5, 0xc8, 0x4b, 0x83, 0xb3, 0xdc, 0x2b, 0x2c,
+  0x2e, 0xf0, 0xa6, 0x13, 0x01, 0x42, 0xab, 0x30, 0x33, 0x48, 0xe4, 0xfb,
+  0x54, 0xca, 0x85, 0x5e, 0xb9, 0xa2, 0x16, 0xad, 0x36, 0xd2, 0x5f, 0xd5,
+  0x48, 0xda, 0x6c, 0xe5, 0xc9, 0xaf, 0x69, 0xe4, 0x49, 0xab, 0x8d, 0x9b,
+  0x5f, 0xd5, 0x88, 0x2b, 0xbb, 0x44, 0xd7, 0xe2, 0x0f, 0x27, 0x97, 0xc9,
+  0xd1, 0xd9, 0x4b, 0x4f, 0xa3, 0x97, 0x9a, 0x69, 0x8c, 0x1f, 0xec, 0x3f,
+  0x5d, 0xb0, 0x2c, 0xc1, 0x07, 0xca, 0x97, 0x9f, 0x97, 0xba, 0x9c, 0x1c,
+  0xa1, 0x60, 0xd6, 0x5f, 0x06, 0x3b, 0x9a, 0x14, 0xa5, 0x64, 0xf7, 0x85,
+  0x60, 0x8a, 0x56, 0xf5, 0x1c, 0x15, 0x3c, 0x03, 0xfc, 0x21, 0x86, 0x5e,
+  0x4f, 0x4b, 0xc3, 0x1e, 0x1a, 0xa7, 0xec, 0xa8, 0x5c, 0x88, 0x83, 0x97,
+  0x64, 0x93, 0xc3, 0xba, 0x11, 0x51, 0x58, 0xb8, 0x6c, 0x61, 0x98, 0x4e,
+  0x38, 0xa7, 0x16, 0x71, 0x3e, 0xa2, 0xae, 0xe7, 0xb5, 0x0d, 0x25, 0x4c,
+  0x53, 0xde, 0x53, 0x4e, 0xb8, 0x68, 0x50, 0x8c, 0xe2, 0xee, 0x43, 0xf2,
+  0x62, 0x8d, 0x07, 0x5e, 0x22, 0x1c, 0x48, 0xbe, 0x15, 0x17, 0x4e, 0xf7,
+  0xd6, 0x92, 0xa0, 0x11, 0x8b, 0x72, 0x4d, 0xb8, 0x7e, 0xf6, 0xe5, 0x9f,
+  0x57, 0x52, 0xa1, 0x9a, 0xce, 0x9f, 0xe6, 0xb7, 0xe6, 0xff, 0x08, 0xee,
+  0xe8, 0x47, 0x3e, 0xb4, 0x63, 0x9e, 0xce, 0x24, 0xe0, 0x46, 0x41, 0x09,
+  0xee, 0x17, 0x75, 0xfa, 0x01, 0x31, 0x52, 0x2c, 0x12, 0x61, 0x0d, 0x27,
+  0x01, 0x1b, 0x7c, 0xac, 0xcc, 0xd9, 0x34, 0x71, 0x58, 0x2b, 0x97, 0x3e,
+  0xa7, 0x41, 0x0a, 0xc1, 0x84, 0x51, 0x96, 0x86, 0xc4, 0x25, 0x0b, 0x48,
+  0xeb, 0xc2, 0x05, 0x40, 0xbb, 0x1d, 0xb2, 0xf6, 0x36, 0x1b, 0xec, 0x0d,
+  0xbd, 0x07, 0x98, 0x62, 0x69, 0x05, 0x8f, 0x7c, 0x3e, 0xc9, 0x91, 0xbe,
+  0x24, 0x15, 0xd0, 0x51, 0x57, 0x0d, 0x8b, 0x36, 0xe8, 0xb6, 0x84, 0x86,
+  0x68, 0x13, 0x26, 0x7a, 0x4c, 0x0b, 0x2c, 0xa3, 0xc4, 0x2d, 0xa1, 0xf8,
+  0x21, 0x7d, 0x73, 0x2f, 0x23, 0xe6, 0x03, 0x0f, 0xbb, 0x4c, 0x54, 0x3d,
+  0x43, 0x37, 0x46, 0x75, 0x53, 0xaf, 0x06, 0x3e, 0xb1, 0x88, 0x00, 0xe5,
+  0xe4, 0xbe, 0xce, 0x97, 0x32, 0x71, 0x31, 0xd1, 0xa8, 0xa1, 0x57, 0xef,
+  0x19, 0x29, 0xf8, 0x35, 0x41, 0x66, 0x9b, 0x88, 0x9d, 0xd1, 0x6a, 0x54,
+  0xad, 0x10, 0xed, 0xa7, 0xad, 0x7e, 0xac, 0x1b, 0x6e, 0x4a, 0xf6, 0x4d,
+  0xba, 0x68, 0x27, 0x44, 0x70, 0xf3, 0x71, 0x6b, 0x9f, 0xb5, 0x49, 0xc4,
+  0x92, 0x13, 0x18, 0x11, 0xb1, 0x08, 0xd3, 0x94, 0x3e, 0xd7, 0x27, 0x49,
+  0x99, 0xbf, 0xcb, 0xd8, 0xd0, 0xa3, 0x57, 0x6a, 0x99, 0x2d, 0x67, 0x6e,
+  0x76, 0x16, 0x5a, 0x2b, 0x98, 0x31, 0x70, 0xf3, 0x69, 0xce, 0xec, 0x44,
+  0xc7, 0x1b, 0x07, 0x6b, 0x85, 0x02, 0xe3, 0x33, 0xdf, 0x49, 0x92, 0x22,
+  0x91, 0x85, 0xc9, 0x64, 0x91, 0x3b, 0x92, 0xd4, 0x52, 0xa6, 0xf8, 0xc8,
+  0x80, 0xbc, 0xdc, 0xdf, 0xfa, 0x46, 0x14, 0x63, 0xd8, 0x8a, 0x90, 0xe7,
+  0x55, 0x58, 0x95, 0x82, 0x86, 0xe2, 0x0b, 0x12, 0x98, 0xdb, 0x5e, 0x53,
+  0x95, 0x51, 0x31, 0x9b, 0xa6, 0xf5, 0x3a, 0xce, 0xaf, 0x2d, 0xae, 0x6a,
+  0xc5, 0x2d, 0x4a, 0x60, 0xc6, 0x9e, 0x06, 0x05, 0x78, 0x70, 0x29, 0xfb,
+  0x46, 0x71, 0x0e, 0xec, 0xe6, 0x41, 0xb4, 0x5e, 0x27, 0x1c, 0x9b, 0xc5,
+  0xc7, 0x78, 0x0e, 0xb1, 0xd7, 0x5a, 0xec, 0xf3, 0xc3, 0xd1, 0xc8, 0x96,
+  0x1a, 0x45, 0x19, 0x6c, 0x3d, 0x65, 0x05, 0x35, 0x8d, 0x04, 0xf8, 0x51,
+  0x8a, 0xae, 0xd2, 0xa1, 0xee, 0x68, 0x23, 0xad, 0xfc, 0xb3, 0xbd, 0x47,
+  0x7e, 0xcd, 0x5d, 0x67, 0xdf, 0x49, 0x6b, 0xfd, 0x4f, 0xec, 0xac, 0xb3,
+  0xaf, 0xef, 0x3a, 0xfa, 0x7a, 0xdc, 0x9a, 0xd7, 0xfe, 0xfe, 0x67, 0x8a,
+  0xf9, 0x31, 0xd4, 0x6a, 0xd5, 0xbe, 0x33, 0xed, 0x4d, 0x98, 0x05, 0x3d,
+  0x38, 0x80, 0x69, 0xb1, 0xa3, 0x2f, 0xa5, 0x0a, 0x1e, 0x4c, 0xd0, 0xd5,
+  0x13, 0x3f, 0x2d, 0x52, 0x9a, 0xb8, 0x3d, 0x76, 0x35, 0xc8, 0x31, 0x89,
+  0x4e, 0x8f, 0x2b, 0x54, 0x76, 0xc2, 0x23, 0x23, 0x31, 0x6c, 0x4d, 0x46,
+  0x9f, 0x0d, 0x23, 0xe8, 0xe7, 0x33, 0xd7, 0x8f, 0x1b, 0x39, 0x2b, 0x35,
+  0x82, 0x32, 0x36, 0x0c, 0x39, 0x82, 0xd2, 0x48, 0x90, 0xac, 0xa0, 0xe1,
+  0x4c, 0x1d, 0x61, 0xb1, 0xf2, 0xb6, 0xef, 0x45, 0x8e, 0xdf, 0x39, 0x53,
+  0xb1, 0x96, 0xff, 0x18, 0x26, 0x67, 0x50, 0xc2, 0x1a, 0x30, 0xa1, 0x50,
+  0x65, 0xf9, 0xb8, 0x3b, 0x60, 0xf7, 0xf0, 0xb4, 0xef, 0x3d, 0x0b, 0xd6,
+  0xc4, 0x86, 0x65, 0xfe, 0xc0, 0x1d, 0x3b, 0x3e, 0x8e, 0x85, 0x98, 0xaf,
+  0x3f, 0x43, 0xf0, 0x05, 0xa7, 0x26, 0x01, 0xe9, 0xb4, 0xcd, 0x62, 0xe9,
+  0x4c, 0x6d, 0xbb, 0x40, 0x87, 0x2b, 0x70, 0x92, 0xe0, 0x0e, 0xf2, 0x94,
+  0xfc, 0xf7, 0x15, 0x33, 0x24, 0xdc, 0xba, 0x0c, 0x41, 0x25, 0x7f, 0xda,
+  0x7b, 0x82, 0x65, 0xc2, 0x55, 0x82, 0x70, 0x2b, 0xfb, 0xe4, 0x1d, 0x3d,
+  0x19, 0x6e, 0xfd, 0x7d, 0x26, 0x25, 0x10, 0xf9, 0x85, 0xad, 0x29, 0x98,
+  0xc1, 0x50, 0x13, 0xf4, 0x1c, 0xac, 0x07, 0x08, 0xca, 0x5f, 0x24, 0x02,
+  0x08, 0x10, 0xfb, 0xb7, 0x5c, 0xe7, 0xc6, 0xf5, 0x5d, 0x7d, 0x6f, 0x1f,
+  0xc8, 0x86, 0x2e, 0xbd, 0x74, 0xa1, 0x16, 0x82, 0xc7, 0xbb, 0xbb, 0x71,
+  0x73, 0xe9, 0xb8, 0x78, 0x6f, 0xd1, 0xa0, 0x8a, 0xd1, 0x82, 0x57, 0x44,
+  0x69, 0x86, 0x74, 0x51, 0xb1, 0x90, 0x3a, 0xb8, 0x62, 0x9b, 0x00, 0xaf,
+  0x98, 0xf9, 0x5a, 0x82, 0x75, 0x93, 0x53, 0xf9, 0x3d, 0x30, 0x63, 0x74,
+  0xcd, 0x9a, 0x67, 0x51, 0xe0, 0x64, 0x0c, 0xb3, 0x3f, 0xb5, 0xf4, 0x7a,
+  0x98, 0xe7, 0x34, 0xfa, 0x20, 0x1a, 0x99, 0x02, 0xd5, 0x06, 0xdd, 0x3c,
+  0xe9, 0xa0, 0x88, 0x64, 0x74, 0x79, 0x76, 0x91, 0x28, 0x91, 0xc5, 0x6c,
+  0x17, 0x69, 0x8f, 0xfc, 0x84, 0x8b, 0x88, 0xed, 0x77, 0x38, 0xf8, 0x9d,
+  0xe9, 0x57, 0x72, 0x31, 0x19, 0x77, 0xcc, 0xf7, 0xfa, 0xd4, 0x07, 0xe3,
+  0xe9, 0xdc, 0xbe, 0x4b, 0x4b, 0x20, 0x4b, 0x59, 0xf9, 0x10, 0xab, 0x45,
+  0x1c, 0xbc, 0x24, 0x07, 0xed, 0x6c, 0x05, 0x62, 0x17, 0x1b, 0x2e, 0xd3,
+  0x91, 0x5a, 0x73, 0x39, 0x00, 0x55, 0x6d, 0x62, 0xce, 0xe9, 0xd6, 0xa6,
+  0x45, 0x39, 0x44, 0x67, 0xbe, 0x40, 0x8c, 0xf8, 0xe7, 0x87, 0xad, 0xb0,
+  0x44, 0x7c, 0x0e, 0xe4, 0x29, 0x0d, 0x76, 0x50, 0x1a, 0xc2, 0x9d, 0x10,
+  0x57, 0xd9, 0x9c, 0x90, 0x64, 0x24, 0x51, 0xa1, 0x85, 0x05, 0x93, 0x98,
+  0xb4, 0xe8, 0xa5, 0xac, 0x5d, 0xbf, 0xce, 0xe7, 0x67, 0x17, 0x97, 0x89,
+  0x0d, 0x4e, 0x2e, 0x4e, 0x7c, 0xd4, 0x3a, 0x42, 0x0c, 0x51, 0x06, 0x0d,
+  0xce, 0x83, 0x87, 0x44, 0x5a, 0xa9, 0x4a, 0x84, 0xb5, 0x35, 0x61, 0x6d,
+  0x70, 0xc1, 0x82, 0xf2, 0xde, 0xa2, 0xb5, 0x80, 0x87, 0xeb, 0x78, 0x8e,
+  0xc6, 0x9d, 0x31, 0x83, 0xee, 0x76, 0xa4, 0x7a, 0x99, 0xe6, 0xd1, 0x5e,
+  0x07, 0x75, 0xb0, 0x02, 0x7d, 0x71, 0xcc, 0xe5, 0xaa, 0x2f, 0x6f, 0xe4,
+  0xb7, 0x68, 0xe4, 0x62, 0x3d, 0xd4, 0x0f, 0x3b, 0xc3, 0x3f, 0x40, 0x1d,
+  0x9c, 0x49, 0xc3, 0xe1, 0xdd, 0xdc, 0xbe, 0xb3, 0x37, 0x07, 0x6b, 0xf6,
+  0x28, 0xc8, 0x9a, 0x06, 0xe7, 0x54, 0x5a, 0xc1, 0x21, 0xc7, 0x07, 0x3d,
+  0xed, 0xa4, 0x47, 0x77, 0xae, 0x1c, 0x8a, 0xa2, 0xbc, 0x0d, 0x5a, 0x78,
+  0x1c, 0x70, 0x0b, 0xe6, 0xee, 0xda, 0xc0, 0x89, 0xf9, 0xad, 0xf9, 0x43,
+  0x17, 0x20, 0x7b, 0x9d, 0x2d, 0x8c, 0x30, 0xe4, 0x39, 0xdf, 0xce, 0x13,
+  0xe7, 0xed, 0x31, 0xf9, 0x28, 0x18, 0x0a, 0x7f, 0x6c, 0xc9, 0xaa, 0x08,
+  0x8e, 0x6b, 0x91, 0xdd, 0xa3, 0xa7, 0x6e, 0x15, 0x59, 0x99, 0x70, 0xf1,
+  0x17, 0x32, 0xfd, 0xe0, 0x32, 0xe2, 0x00, 0x96, 0x7c, 0xb1, 0xca, 0xd4,
+  0x62, 0x96, 0x96, 0xb3, 0x1c, 0xe6, 0xe5, 0x71, 0x97, 0x75, 0xd7, 0x25,
+  0x5e, 0xfb, 0x7e, 0xf4, 0x26, 0x3a, 0x39, 0x3d, 0xf6, 0xbb, 0x25, 0xe8,
+  0x60, 0x38, 0xc9, 0x5e, 0xc8, 0xa3, 0x83, 0xbb, 0x70, 0xd7, 0xc5, 0x30,
+  0x39, 0xe7, 0x72, 0x5d, 0x70, 0x3e, 0x55, 0xff, 0xe6, 0x5b, 0x93, 0xc3,
+  0x02, 0x63, 0x0c, 0xdd, 0x9f, 0x90, 0x4e, 0xf3, 0x05, 0x6d, 0x2e, 0x3e,
+  0xe1, 0x5f, 0x83, 0x4a, 0x4b, 0xd1, 0x94, 0x9f, 0xf9, 0x97, 0x2b, 0x9a,
+  0x08, 0xe9, 0x69, 0xed, 0x47, 0x1e, 0x2b, 0x6d, 0x91, 0x12, 0x27, 0x15,
+  0xdf, 0x8b, 0x5a, 0xf8, 0x33, 0x9f, 0xe9, 0x52, 0x2a, 0x22, 0x4c, 0xa5,
+  0x85, 0x2b, 0x7b, 0xc6, 0xe4, 0x58, 0x79, 0xce, 0x37, 0x25, 0x97, 0xc2,
+  0xa1, 0xac, 0x13, 0x02, 0xd3, 0xe9, 0xdc, 0x8c, 0xd3, 0xc9, 0x2d, 0xb5,
+  0xb5, 0x60, 0x8e, 0x3b, 0x33, 0x73, 0x79, 0x23, 0xc5, 0x08, 0x0b, 0xab,
+  0x38, 0x7d, 0x59, 0x19, 0xd7, 0xdd, 0x6b, 0x98, 0x16, 0x1f, 0x0b, 0x35,
+  0x3a, 0xd2, 0x71, 0xf7, 0x58, 0x63, 0x74, 0xdc, 0xb1, 0x4f, 0xd0, 0xe1,
+  0xed, 0x66, 0xd3, 0x10, 0x5d, 0xf3, 0xa1, 0x74, 0xf7, 0xf8, 0x89, 0x6f,
+  0xea, 0x8a, 0x91, 0xba, 0x5c, 0x5b, 0x9e, 0x07, 0x79, 0xfc, 0xfa, 0xdc,
+  0x3d, 0xa6, 0x8a, 0x82, 0xdc, 0x65, 0x91, 0xaa, 0xd0, 0xbc, 0x3f, 0x1e,
+  0x0b, 0x31, 0x5c, 0x16, 0xac, 0xf9, 0x2c, 0xee, 0x3d, 0x30, 0xc7, 0x50,
+  0xa2, 0xfb, 0xc4, 0x06, 0x21, 0xe5, 0x01, 0x1c, 0x64, 0x87, 0x68, 0x9b,
+  0xaa, 0xa0, 0xcf, 0xd3, 0x0f, 0xd1, 0x55, 0x3f, 0x5f, 0xcd, 0x15, 0x8f,
+  0x20, 0xe8, 0xe9, 0x73, 0xd5, 0x66, 0xa5, 0xde, 0xbc, 0xc1, 0x16, 0xfa,
+  0xe8, 0xfb, 0xc2, 0x94, 0x25, 0xe7, 0xb7, 0x23, 0xe2, 0x81, 0x4b, 0xc5,
+  0x65, 0xa8, 0xc4, 0x18, 0xa0, 0xec, 0x3a, 0xc1, 0x85, 0xac, 0x82, 0xa2,
+  0x29, 0x96, 0x45, 0x00, 0x27, 0x79, 0x07, 0xec, 0xde, 0x4a, 0x6b, 0x78,
+  0xf9, 0x7e, 0x3a, 0x1c, 0x32, 0x65, 0xf6, 0x37, 0x14, 0x21, 0x1c, 0xca,
+  0xa5, 0x23, 0x80, 0x4e, 0x32, 0x4b, 0x0e, 0x31, 0xf0, 0x2c, 0xef, 0xf1,
+  0x33, 0x35, 0x55, 0xa8, 0x2a, 0x6c, 0x85, 0xf1, 0xda, 0x96, 0xe6, 0x27,
+  0x7b, 0x3e, 0xf5, 0x20, 0xcb, 0xca, 0xcd, 0x4a, 0xb8, 0x43, 0x00, 0x02,
+  0x40, 0x0c, 0x6e, 0x34, 0xfa, 0x26, 0x79, 0xfd, 0xf2, 0x09, 0xa7, 0xa1,
+  0x5e, 0x67, 0x25, 0x17, 0x9d, 0xf4, 0xba, 0xd8, 0xd9, 0xb7, 0x41, 0x63,
+  0xfb, 0xde, 0x88, 0xa4, 0x57, 0x6d, 0xae, 0xa7, 0x97, 0xa5, 0x6c, 0xda,
+  0x3f, 0xc6, 0xb2, 0xbb, 0xee, 0xab, 0xfb, 0x44, 0xcc, 0x20, 0xbc, 0x90,
+  0x06, 0xf3, 0x28, 0xa2, 0x4b, 0x3b, 0x8f, 0xa1, 0xc9, 0xc4, 0x9e, 0x3c,
+  0xf2, 0x4c, 0xac, 0xbc, 0x5f, 0x32, 0x28, 0xfa, 0xe2, 0x9a, 0x25, 0xea,
+  0x8e, 0x13, 0xf5, 0x44, 0x18, 0xe7, 0x91, 0x9c, 0x7b, 0x16, 0x67, 0xe3,
+  0xd7, 0x00, 0xa9, 0x07, 0x6f, 0x47, 0xf0, 0xde, 0x93, 0x50, 0x9d, 0x24,
+  0x81, 0x1c, 0xf7, 0x22, 0xad, 0x1f, 0x0a, 0xae, 0xb2, 0xac, 0x12, 0x3c,
+  0xfb, 0xd4, 0x3d, 0xcb, 0xc6, 0x83, 0x7c, 0x11, 0x14, 0x8e, 0x58, 0xf3,
+  0x86, 0x0a, 0xc1, 0x22, 0x1a, 0xf8, 0xb0, 0x08, 0x91, 0x7c, 0x82, 0xb5,
+  0x0f, 0x5e, 0x79, 0xd6, 0xd4, 0x96, 0x51, 0xd5, 0xcc, 0x17, 0xeb, 0xe6,
+  0x49, 0xe5, 0xcb, 0x9b, 0xf0, 0x70, 0x3e, 0x95, 0x9b, 0xfa, 0x9c, 0x31,
+  0x1d, 0x1a, 0xfb, 0x69, 0x4c, 0xb0, 0xe1, 0x79, 0xb5, 0xb3, 0x2e, 0xb4,
+  0x7f, 0x74, 0x68, 0x6f, 0x44, 0x75, 0xa4, 0x99, 0xda, 0x83, 0x4e, 0xf6,
+  0xf4, 0xcc, 0xd0, 0x94, 0x8b, 0xeb, 0x45, 0xfe, 0x0f, 0x26, 0x34, 0xbb,
+  0xa1, 0xad, 0xe8, 0x47, 0xf0, 0xf8, 0xbe, 0x32, 0x8c, 0xf7, 0xe9, 0x2c,
+  0x57, 0xa6, 0xc8, 0x76, 0x74, 0xff, 0xc0, 0x23, 0xa5, 0xda, 0x0f, 0x39,
+  0x1f, 0x51, 0x68, 0x01, 0x28, 0xff, 0xc4, 0x1e, 0x9c, 0xac, 0x01, 0x11,
+  0xf2, 0xf4, 0xb1, 0xca, 0x5e, 0x26, 0x24, 0xf3, 0xbd, 0xc4, 0x0b, 0x31,
+  0x63, 0x07, 0x77, 0xc4, 0xa6, 0x9f, 0xea, 0xd5, 0xa7, 0x5b, 0xe9, 0x0a,
+  0x7f, 0x94, 0x56, 0xb3, 0x86, 0x7f, 0xbd, 0xcb, 0x17, 0x9a, 0x59, 0x14,
+  0xbd, 0xfe, 0x74, 0x8d, 0x09, 0xaa, 0x92, 0x7b, 0xf3, 0x18, 0xb4, 0x14,
+  0x3c, 0xff, 0x99, 0x3b, 0x09, 0x1d, 0xe8, 0xf8, 0x08, 0x88, 0xb3, 0x62,
+  0x0b, 0x76, 0x90, 0xa0, 0xf6, 0x2f, 0x7d, 0x4d, 0xe1, 0x8e, 0x34, 0xbe,
+  0x2b, 0xd7, 0xfd, 0xac, 0xb8, 0x4e, 0xf2, 0xe0, 0x18, 0x3f, 0x15, 0x92,
+  0x7a, 0x85, 0x22, 0x7a, 0x76, 0x0e, 0x98, 0x9b, 0x84, 0xb5, 0xae, 0xfc,
+  0xd3, 0xcf, 0x94, 0x36, 0xec, 0xbe, 0x34, 0x31, 0x75, 0xed, 0x1b, 0x9f,
+  0xed, 0x86, 0x42, 0xeb, 0x94, 0x2d, 0xf5, 0x02, 0xce, 0xb8, 0xf6, 0x05,
+  0xa1, 0x8c, 0x13, 0xba, 0x46, 0xae, 0x89, 0xa8, 0xf1, 0x8c, 0x47, 0x25,
+  0xf5, 0x8f, 0xed, 0x37, 0x98, 0xee, 0x65, 0x28, 0x42, 0x25, 0x27, 0x2f,
+  0x83, 0x07, 0x1f, 0xf9, 0x09, 0xa6, 0x33, 0x96, 0x06, 0xee, 0xc5, 0x10,
+  0x51, 0x69, 0xb9, 0xb1, 0xe0, 0xd1, 0xc7, 0x9a, 0x20, 0x22, 0x39, 0x59,
+  0x58, 0xff, 0xe8, 0x19, 0x21, 0x87, 0x23, 0xe4, 0x73, 0xd5, 0xc0, 0x32,
+  0x58, 0x98, 0xbf, 0xa0, 0xbd, 0xf7, 0x9f, 0x3d, 0x7d, 0xe0, 0x59, 0xbd,
+  0x34, 0x2b, 0x77, 0xd5, 0x07, 0xef, 0x7d, 0x16, 0x1f, 0x73, 0x53, 0x0b,
+  0x0c, 0x72, 0x45, 0x4f, 0x5a, 0xb2, 0xc5, 0x50, 0x7d, 0xff, 0x66, 0x96,
+  0x9f, 0x92, 0xf3, 0xda, 0xaa, 0x7f, 0x0b, 0xc7, 0xfb, 0x79, 0x88, 0xdb,
+  0x22, 0x66, 0x1f, 0x57, 0xf2, 0x36, 0x2c, 0x84, 0xe7, 0x23, 0xb5, 0xb1,
+  0x3a, 0x41, 0x0b, 0xb2, 0xe7, 0x24, 0x47, 0xac, 0x16, 0x9e, 0x73, 0x88,
+  0x22, 0xa8, 0x70, 0x97, 0x16, 0x35, 0xad, 0xa3, 0xfb, 0x86, 0x36, 0x15,
+  0xd4, 0x11, 0x18, 0xcf, 0x76, 0x5b, 0xc7, 0xa0, 0xba, 0x59, 0x89, 0xe6,
+  0xed, 0x66, 0xe4, 0x61, 0x96, 0x82, 0xd7, 0xf6, 0x3d, 0xf7, 0xd2, 0x6b,
+  0x5f, 0xc0, 0x73, 0x8e, 0x38, 0x11, 0x4f, 0xd4, 0xf3, 0x04, 0xa4, 0x88,
+  0x38, 0xfd, 0x52, 0x2a, 0x6d, 0x1b, 0x88, 0xea, 0x56, 0xda, 0x0d, 0x29,
+  0xa0, 0x28, 0x28, 0x41, 0x37, 0x2a, 0xda, 0x70, 0xa8, 0x39, 0xed, 0xd2,
+  0x4d, 0x36, 0xb9, 0xb5, 0x23, 0xe3, 0xda, 0xe8, 0x78, 0xeb, 0xb1, 0x5b,
+  0x5a, 0xa6, 0xbe, 0xf3, 0x8b, 0xe3, 0xb6, 0x22, 0xe0, 0x1f, 0x15, 0xaa,
+  0xb9, 0xb8, 0x1c, 0x9d, 0x1f, 0xf0, 0x78, 0xc5, 0x07, 0x43, 0x07, 0xe2,
+  0x68, 0x94, 0xfd, 0x5d, 0xf3, 0x67, 0x2b, 0xff, 0xf4, 0xd3, 0x35, 0x4f,
+  0x8f, 0x34, 0x42, 0xea, 0x64, 0xca, 0xdc, 0x97, 0xf6, 0x21, 0x7c, 0xe9,
+  0x33, 0x45, 0x22, 0x30, 0xeb, 0xae, 0x18, 0x8f, 0x78, 0x64, 0x2e, 0x59,
+  0xc5, 0x3f, 0xfc, 0xb9, 0xb7, 0xd9, 0xdc, 0xac, 0x16, 0xb7, 0x4e, 0x5e,
+  0xd4, 0x80, 0x33, 0xdb, 0x60, 0xff, 0xc2, 0x33, 0x3b, 0x1a, 0x01, 0x1a,
+  0x96, 0x73, 0x7f, 0xf7, 0xd5, 0x52, 0x61, 0xd1, 0xa0, 0xe2, 0x3f, 0x22,
+  0xfe, 0xba, 0x0a, 0xd6, 0xe0, 0x87, 0x1f, 0x84, 0x45, 0x17, 0x16, 0x99,
+  0xa0, 0x9e, 0x01, 0x57, 0xed, 0x95, 0x58, 0x9a, 0xd4, 0x58, 0xe5, 0xd3,
+  0x01, 0x7b, 0x7a, 0x99, 0xa1, 0x4c, 0x80, 0x62, 0x04, 0x83, 0x2e, 0xbb,
+  0xb2, 0xed, 0x38, 0xf8, 0x56, 0xaa, 0xd2, 0x67, 0x9a, 0x76, 0xb4, 0xe0,
+  0x88, 0x4d, 0x35, 0x37, 0xd1, 0x86, 0x1d, 0xbe, 0xbd, 0xfc, 0xe6, 0xec,
+  0x62, 0x94, 0xec, 0x30, 0x70, 0xe1, 0xe5, 0xc5, 0xc9, 0x57, 0x6f, 0x49,
+  0x7b, 0x77, 0x5e, 0x95, 0x97, 0x29, 0x69, 0xf5, 0x33, 0x8e, 0x6f, 0xcd,
+  0x16, 0xb4, 0x0f, 0xd7, 0x56, 0x52, 0x10, 0xc1, 0x37, 0x7c, 0xd5, 0x15,
+  0xa5, 0x54, 0xb3, 0x41, 0x3a, 0xd4, 0x4d, 0xa1, 0x8b, 0x29, 0x71, 0x6a,
+  0x0b, 0x49, 0x62, 0x28, 0xbc, 0x6a, 0x9a, 0xb7, 0x70, 0x17, 0xcd, 0x39,
+  0x9a, 0x5c, 0x7e, 0x73, 0xf8, 0xe6, 0xdb, 0x91, 0x21, 0xb7, 0x7f, 0xff,
+  0xfd, 0xf7, 0xa1, 0xd3, 0xfe, 0x60, 0x67, 0x07, 0x12, 0xe2, 0x4d, 0xfa,
+  0xe1, 0xc3, 0xb0, 0xca, 0x36, 0x36, 0x5e, 0x79, 0x57, 0x9b, 0xaf, 0x07,
+  0x59, 0xad, 0x48, 0x30, 0xa0, 0xaf, 0x77, 0x96, 0xab, 0x31, 0xd7, 0x9f,
+  0xdc, 0x59, 0xd5, 0xf9, 0x8c, 0xee, 0x93, 0xac, 0xc2, 0xdb, 0x3b, 0x1b,
+  0x1b, 0xa3, 0xe3, 0xe3, 0xe4, 0xf0, 0x74, 0x74, 0x16, 0xbc, 0xbb, 0xb5,
+  0xb7, 0x4d, 0x82, 0xd3, 0x75, 0x56, 0x6f, 0x31, 0x06, 0xe8, 0xe9, 0xe1,
+  0x25, 0x6b, 0xac, 0xdf, 0x1d, 0x5f, 0x8c, 0x4e, 0xce, 0xde, 0xf0, 0xee,
+  0x70, 0x7c, 0x60, 0x3a, 0xbb, 0xe3, 0xf0, 0xd0, 0xab, 0x1c, 0x80, 0x2c,
+  0x77, 0x56, 0xdc, 0x91, 0x91, 0xa5, 0x49, 0xb2, 0x13, 0x41, 0x5c, 0xa2,
+  0x20, 0xac, 0xa8, 0xbc, 0x44, 0xc1, 0xd6, 0xac, 0x37, 0x2a, 0x4f, 0xe3,
+  0x15, 0x70, 0x66, 0x2b, 0x09, 0x60, 0xc9, 0xc6, 0x12, 0x75, 0xdc, 0x17,
+  0x18, 0x03, 0xb8, 0x29, 0x82, 0x30, 0xc5, 0xce, 0x89, 0x8f, 0x4e, 0x5e,
+  0x9f, 0x93, 0x02, 0xf7, 0x76, 0x74, 0xf8, 0xf5, 0x31, 0x3f, 0xfa, 0x75,
+  0x56, 0xfb, 0xed, 0x90, 0x22, 0x94, 0xdc, 0xc9, 0x9b, 0xac, 0xae, 0x26,
+  0xe9, 0x92, 0xb3, 0xb5, 0xa9, 0x9b, 0x81, 0x5c, 0x23, 0x41, 0xdb, 0x22,
+  0xca, 0xfb, 0x4a, 0x9d, 0x0b, 0x7d, 0x1e, 0x65, 0x34, 0xc3, 0x76, 0x2f,
+  0x8e, 0x0f, 0x5f, 0xbe, 0x3e, 0xb6, 0xd0, 0x75, 0xb9, 0x76, 0xa9, 0xd1,
+  0x9b, 0x82, 0x2b, 0xa7, 0x3b, 0x43, 0x36, 0x5f, 0xed, 0xbc, 0xf8, 0xf4,
+  0x0d, 0xd7, 0xb1, 0xec, 0xee, 0xce, 0x6f, 0x14, 0x9e, 0x1d, 0x5e, 0xe5,
+  0x3b, 0xd2, 0xba, 0xf5, 0x97, 0xba, 0x25, 0x31, 0xc0, 0x6a, 0x15, 0x77,
+  0xc5, 0x26, 0x01, 0x5b, 0xc6, 0xe7, 0xbb, 0xbb, 0xbb, 0x0f, 0xcc, 0x03,
+  0xda, 0x80, 0x5e, 0x9a, 0x34, 0x95, 0x03, 0x7e, 0x7c, 0xc7, 0xb7, 0xef,
+  0x47, 0x3c, 0xd3, 0xd4, 0x78, 0x2e, 0x35, 0xb5, 0x10, 0x1b, 0x4a, 0x5e,
+  0x67, 0xdd, 0x43, 0x9e, 0x14, 0x85, 0xdb, 0x81, 0xc6, 0xe2, 0x4c, 0x19,
+  0x62, 0x3c, 0xaf, 0x2d, 0x2c, 0x13, 0x6f, 0xc8, 0xc0, 0x49, 0x81, 0x41,
+  0x98, 0x5a, 0x79, 0xdf, 0x6e, 0x92, 0xbf, 0xa1, 0x36, 0xf9, 0x9f, 0x61,
+  0x51, 0x5e, 0xef, 0xcc, 0x0f, 0x20, 0x91, 0xd0, 0x43, 0xaf, 0x32, 0xd4,
+  0x9f, 0xbf, 0x2b, 0x5c, 0xb4, 0x76, 0xc5, 0x0b, 0xcb, 0x69, 0x25, 0x9f,
+  0x30, 0xae, 0x5f, 0xb0, 0x0a, 0x12, 0xd0, 0x74, 0x65, 0x33, 0xb7, 0x7a,
+  0x73, 0x1d, 0x9d, 0x54, 0xbc, 0x61, 0x6c, 0x31, 0x1c, 0x12, 0x03, 0xa1,
+  0x5e, 0x38, 0xe6, 0x0c, 0x24, 0x42, 0xbf, 0x96, 0x44, 0x32, 0x5c, 0x50,
+  0x84, 0xdf, 0xd2, 0xd2, 0x87, 0x82, 0x1f, 0xc8, 0x5e, 0xec, 0x25, 0xe7,
+  0x34, 0x96, 0x08, 0x44, 0x44, 0x0f, 0x9c, 0x27, 0xa9, 0xd1, 0xfc, 0x2e,
+  0x80, 0x87, 0x1b, 0x6e, 0xf7, 0x39, 0x18, 0x80, 0x7e, 0x2a, 0x47, 0x2d,
+  0x9f, 0xd0, 0x79, 0x30, 0x29, 0x59, 0xfd, 0x85, 0xde, 0xb2, 0x01, 0xed,
+  0x8c, 0x68, 0x14, 0x51, 0x5f, 0x2b, 0x5f, 0xbd, 0xb1, 0x92, 0xee, 0xaa,
+  0x1b, 0x3a, 0xbf, 0x43, 0xcd, 0xdd, 0x44, 0x5f, 0xb4, 0x27, 0x3b, 0x48,
+  0xb2, 0xfa, 0xe4, 0x9e, 0x8e, 0xce, 0xf5, 0x37, 0x4e, 0xec, 0xcc, 0xdf,
+  0xf3, 0x12, 0xdc, 0x66, 0x98, 0x7d, 0xa8, 0x18, 0x3c, 0x30, 0x98, 0x03,
+  0x5a, 0x05, 0x7e, 0xe3, 0x7f, 0xef, 0x0c, 0xab, 0xea, 0x66, 0x27, 0x9f,
+  0xbe, 0x9b, 0x56, 0x29, 0xc7, 0x34, 0xad, 0xc6, 0xd1, 0xc7, 0x43, 0xfa,
+  0x30, 0xf9, 0xa9, 0xc1, 0xf5, 0xab, 0x49, 0xf7, 0x4c, 0xfe, 0xf7, 0x0e,
+  0x47, 0xa7, 0xa2, 0x6c, 0x53, 0xb0, 0x70, 0x1d, 0xbc, 0x83, 0x66, 0x25,
+  0x81, 0xd0, 0x74, 0x18, 0xbb, 0x29, 0x63, 0x70, 0x9d, 0xf4, 0x94, 0xdc,
+  0x7e, 0xdc, 0xdf, 0xdd, 0xdd, 0x3b, 0xd8, 0xfb, 0xfc, 0xd9, 0xee, 0xc1,
+  0xde, 0xde, 0xde, 0xfe, 0xc1, 0xde, 0xc1, 0xc1, 0xfe, 0xee, 0xcf, 0x3b,
+  0xbd, 0x8d, 0x8d, 0x97, 0x67, 0xdf, 0xbf, 0x39, 0x3d, 0x3b, 0x7c, 0x99,
+  0x5c, 0x9e, 0x25, 0x87, 0x30, 0x3b, 0x75, 0x9c, 0x73, 0xc4, 0x5e, 0x72,
+  0x36, 0x9d, 0x64, 0xf2, 0x07, 0xd5, 0xcb, 0xd5, 0x46, 0xe2, 0x62, 0x6f,
+  0xb0, 0x32, 0xed, 0x71, 0x14, 0x50, 0x2b, 0xb8, 0xa5, 0xe1, 0x4d, 0x3d,
+  0xff, 0x38, 0x47, 0xfb, 0x94, 0x9e, 0xfb, 0xe2, 0x0b, 0xf6, 0x9a, 0x23,
+  0x86, 0x63, 0x94, 0xab, 0xf9, 0x2a, 0xea, 0x4f, 0x51, 0x2f, 0xaa, 0xcb,
+  0xae, 0xd8, 0x92, 0xd0, 0x21, 0x5f, 0x74, 0x5b, 0x8a, 0xb9, 0x57, 0x31,
+  0xec, 0x07, 0x8a, 0x2b, 0xab, 0x9b, 0x1e, 0x77, 0x3c, 0xcb, 0x44, 0xdb,
+  0xd1, 0x04, 0xcf, 0xd6, 0x4e, 0x89, 0xee, 0xa2, 0xec, 0x03, 0x66, 0xdd,
+  0xe4, 0x1d, 0x12, 0x7f, 0xeb, 0x67, 0x07, 0x40, 0x79, 0xd3, 0x85, 0xf3,
+  0xd2, 0x86, 0x8c, 0xf0, 0xa2, 0x8e, 0xee, 0xb8, 0x1f, 0x63, 0x29, 0xbe,
+  0x0b, 0xfe, 0x26, 0xbc, 0x87, 0x76, 0x9c, 0x79, 0x51, 0x06, 0xf0, 0x76,
+  0x74, 0xf2, 0xe6, 0x6b, 0x38, 0x10, 0xbf, 0x3f, 0xbb, 0x78, 0x39, 0xa2,
+  0x66, 0xf9, 0x82, 0xde, 0x80, 0x85, 0x89, 0x4f, 0xb2, 0x8e, 0x4a, 0xce,
+  0x05, 0x77, 0xfd, 0x67, 0xe8, 0x6c, 0xd3, 0xbe, 0xcb, 0x80, 0xc7, 0x30,
+  0x03, 0x79, 0x9b, 0xd3, 0xda, 0xbb, 0xb9, 0x1e, 0x08, 0x41, 0x5e, 0xff,
+  0x72, 0x9e, 0x72, 0xd9, 0x93, 0x6c, 0x28, 0xb1, 0xc0, 0x88, 0xf4, 0xda,
+  0xe1, 0x14, 0x8b, 0x1d, 0x96, 0xfb, 0x77, 0xea, 0x02, 0xfc, 0x03, 0xad,
+  0x14, 0x65, 0x58, 0x8e, 0x2c, 0xb0, 0x0e, 0xd0, 0xc1, 0xbb, 0x9a, 0xa5,
+  0xd7, 0xe8, 0x30, 0x3e, 0x93, 0x41, 0x67, 0xda, 0xfd, 0xa7, 0x76, 0xc9,
+  0x6c, 0x0f, 0xed, 0x9d, 0x80, 0x00, 0x80, 0x74, 0x85, 0x5c, 0x7d, 0x75,
+  0x7c, 0x88, 0xd0, 0xc4, 0x5e, 0x62, 0x04, 0x95, 0x70, 0x11, 0xd7, 0x76,
+  0x61, 0x1b, 0x54, 0xd5, 0x14, 0x88, 0x10, 0x52, 0x01, 0x06, 0x51, 0x49,
+  0x2c, 0x6e, 0x29, 0x30, 0x41, 0x54, 0x3e, 0x2a, 0x0e, 0xe5, 0x4b, 0xa0,
+  0x71, 0xcb, 0x92, 0xf3, 0x60, 0x00, 0x92, 0x53, 0x59, 0xb8, 0x95, 0x4a,
+  0x71, 0x3d, 0xae, 0x2a, 0xc4, 0xc1, 0x12, 0x3d, 0xc3, 0xbd, 0xf0, 0x75,
+  0x10, 0xbc, 0x87, 0xb3, 0xaa, 0x69, 0x28, 0x29, 0x5d, 0x29, 0x5a, 0xa5,
+  0x5d, 0x61, 0x90, 0x49, 0x9a, 0x97, 0x64, 0xd5, 0x9e, 0x85, 0x5c, 0x48,
+  0x2b, 0xd4, 0x36, 0xc0, 0xa4, 0x5d, 0x4e, 0x3f, 0x33, 0x5f, 0x81, 0xe8,
+  0xd9, 0x50, 0x8f, 0xb6, 0xe7, 0xf3, 0xde, 0x72, 0xc6, 0x3c, 0x9a, 0x84,
+  0x50, 0x62, 0xa0, 0x42, 0x39, 0x9a, 0x59, 0x19, 0x54, 0x4f, 0x6c, 0x2c,
+  0x5b, 0x58, 0xed, 0x3d, 0x62, 0xb5, 0xcd, 0x6c, 0xea, 0x0d, 0x24, 0x54,
+  0xb9, 0x70, 0xeb, 0x60, 0x79, 0x24, 0xae, 0xcb, 0xbf, 0xca, 0x7b, 0x91,
+  0xd7, 0x55, 0x36, 0xbb, 0x52, 0xfc, 0x93, 0x1a, 0x76, 0x41, 0x9e, 0x4a,
+  0xda, 0x28, 0xda, 0x64, 0x79, 0x54, 0xab, 0x85, 0x43, 0x65, 0x28, 0x94,
+  0x67, 0x5c, 0x83, 0x9b, 0x2a, 0xa0, 0x4a, 0x93, 0x51, 0x88, 0xe7, 0x6d,
+  0x68, 0xf5, 0x5c, 0x36, 0x12, 0x57, 0x8a, 0xa6, 0x35, 0x05, 0x57, 0x9e,
+  0x03, 0xe5, 0x11, 0x40, 0x1d, 0xc1, 0x83, 0xab, 0x31, 0xad, 0xb6, 0x7b,
+  0x8e, 0xd7, 0x0e, 0xb1, 0x67, 0xdc, 0xdc, 0x51, 0x58, 0x86, 0x5e, 0xc2,
+  0x2e, 0x57, 0x11, 0xca, 0x4b, 0xae, 0x58, 0x39, 0x74, 0xd0, 0x90, 0xb1,
+  0xb5, 0xaa, 0xdc, 0x8a, 0xa2, 0x68, 0x95, 0xdc, 0x71, 0x1b, 0x08, 0x4a,
+  0x8c, 0x8f, 0xa1, 0x72, 0xa4, 0xf5, 0xe7, 0xf0, 0xe3, 0x47, 0x30, 0x1e,
+  0x92, 0xe9, 0x01, 0xb3, 0x7b, 0x39, 0x25, 0xf9, 0xe2, 0xe1, 0xc3, 0xa8,
+  0x83, 0xf8, 0xa4, 0x8e, 0x31, 0x57, 0xc5, 0xc6, 0x80, 0xb5, 0xdb, 0xc7,
+  0x83, 0x89, 0x87, 0x1d, 0x59, 0x0c, 0x1d, 0x39, 0x2a, 0x8d, 0xf0, 0x55,
+  0x1c, 0x04, 0xc9, 0x75, 0x3b, 0x48, 0xbe, 0x4a, 0xab, 0x7c, 0xd2, 0x4f,
+  0x5e, 0xe6, 0xd7, 0x00, 0x6b, 0x70, 0x79, 0x04, 0x2e, 0xff, 0x62, 0x98,
+  0x7c, 0xaf, 0x00, 0xd9, 0x9c, 0x00, 0x0f, 0x7c, 0x4b, 0x18, 0x67, 0x1d,
+  0x58, 0xca, 0x86, 0xd8, 0xe4, 0xd5, 0xaa, 0x1e, 0xd6, 0xdd, 0x46, 0xdb,
+  0xbe, 0xfa, 0x07, 0x36, 0x33, 0xad, 0x6e, 0x9b, 0x75, 0xc5, 0x1c, 0x54,
+  0xb3, 0xc8, 0x45, 0x58, 0xdf, 0x85, 0x96, 0x81, 0x50, 0x9a, 0xc3, 0xdf,
+  0x8e, 0xca, 0x55, 0x48, 0x11, 0x6b, 0x58, 0xa5, 0x51, 0x62, 0xe6, 0xca,
+  0xc7, 0x6d, 0x64, 0xc7, 0x75, 0x03, 0x89, 0xff, 0xb4, 0x4e, 0xbc, 0x22,
+  0xca, 0x4f, 0xce, 0x2e, 0x8f, 0xff, 0x90, 0x1c, 0xb6, 0x5d, 0x99, 0xcc,
+  0xa8, 0x1b, 0xe8, 0x28, 0x7d, 0x4f, 0x57, 0x18, 0xbb, 0x04, 0x86, 0x49,
+  0x19, 0x9c, 0xd4, 0x25, 0x56, 0x84, 0x1b, 0xcf, 0x58, 0x62, 0x1a, 0xe5,
+  0x5a, 0xdf, 0x1b, 0x10, 0x38, 0xbf, 0x06, 0x03, 0x6f, 0x50, 0x0b, 0x44,
+  0x62, 0x4f, 0xf3, 0x54, 0xf0, 0x32, 0x18, 0x06, 0x89, 0xf6, 0x62, 0x21,
+  0x47, 0x11, 0x01, 0xb1, 0x62, 0xda, 0x17, 0x9c, 0xa1, 0xbc, 0x86, 0xe4,
+  0x0c, 0x5f, 0xbd, 0x56, 0xf3, 0xfa, 0xde, 0x37, 0x95, 0x86, 0x88, 0x54,
+  0xef, 0xf8, 0x84, 0xbd, 0x33, 0x3e, 0xab, 0x37, 0x82, 0x8c, 0x45, 0x2b,
+  0x7a, 0x37, 0x29, 0xd5, 0x4e, 0x9b, 0x30, 0xf7, 0x73, 0x0b, 0x0b, 0xc3,
+  0x5e, 0x4c, 0x80, 0xf7, 0x22, 0x55, 0xb6, 0xd4, 0xf2, 0x6b, 0x87, 0x3a,
+  0xe4, 0xd3, 0x40, 0x70, 0x02, 0x6e, 0x0c, 0x4a, 0xac, 0x6a, 0xbd, 0x19,
+  0x09, 0xc1, 0xa5, 0x56, 0x9b, 0x41, 0xd3, 0xc8, 0xa6, 0xc0, 0xaa, 0xa2,
+  0x52, 0x21, 0xe0, 0xd2, 0xc2, 0xa0, 0xe5, 0xca, 0x0a, 0x6a, 0x5a, 0xb9,
+  0xc5, 0x56, 0x31, 0xc4, 0x0d, 0xbe, 0x80, 0x9c, 0xf5, 0x0a, 0x65, 0x6c,
+  0x5d, 0x25, 0x97, 0x20, 0x62, 0xf0, 0x95, 0x83, 0xce, 0xd2, 0x66, 0xb9,
+  0xb8, 0xdc, 0x24, 0x0b, 0xf2, 0x25, 0x16, 0x44, 0xb2, 0xfe, 0x22, 0x10,
+  0xfa, 0x29, 0x2a, 0x2d, 0x65, 0x9b, 0x0b, 0xae, 0x92, 0x54, 0xa3, 0x1a,
+  0x67, 0x02, 0x11, 0x4f, 0x54, 0x22, 0xbb, 0x08, 0xd4, 0x41, 0x3e, 0x78,
+  0x42, 0x99, 0x73, 0x10, 0xf7, 0x86, 0xa7, 0x6e, 0xe6, 0xd6, 0xeb, 0xe6,
+  0xa9, 0x79, 0xc0, 0xce, 0x7a, 0x29, 0x92, 0x04, 0x4b, 0xd3, 0x0b, 0xad,
+  0x6b, 0x04, 0x5b, 0x80, 0x8e, 0x9a, 0x77, 0x07, 0x82, 0xde, 0xc2, 0x89,
+  0x1d, 0xb6, 0xe9, 0x0d, 0x7c, 0x30, 0x66, 0x25, 0xd3, 0x64, 0x7e, 0xaf,
+  0x89, 0x02, 0x7a, 0x55, 0x72, 0x2e, 0x3b, 0x94, 0xcc, 0xcf, 0x3f, 0x8f,
+  0x44, 0xa3, 0x0f, 0xee, 0xe9, 0x03, 0xfa, 0x3a, 0x50, 0x66, 0x67, 0xec,
+  0xf6, 0x67, 0xe5, 0x11, 0x62, 0x99, 0xd3, 0x68, 0x3b, 0x74, 0x85, 0x00,
+  0xeb, 0x48, 0x7a, 0x74, 0x56, 0xf2, 0x88, 0xca, 0xfa, 0x3e, 0x9b, 0x61,
+  0x43, 0xb4, 0x25, 0x19, 0x68, 0x5a, 0x49, 0xf8, 0xc8, 0x1a, 0xf5, 0xc1,
+  0xb8, 0x63, 0x7b, 0xb4, 0x81, 0x10, 0x49, 0x82, 0xec, 0x90, 0xe5, 0x4e,
+  0x96, 0x89, 0x47, 0x85, 0x36, 0xcc, 0x8b, 0xac, 0x83, 0x71, 0xd4, 0xd1,
+  0x2e, 0xaa, 0x69, 0x55, 0xfc, 0xdc, 0xad, 0x3e, 0x78, 0xbb, 0x7e, 0x38,
+  0x6f, 0x7f, 0xcd, 0x70, 0x0e, 0x93, 0x07, 0x03, 0xe6, 0xb5, 0x24, 0x23,
+  0x33, 0xfa, 0x4a, 0xb9, 0xe9, 0xb4, 0x00, 0x55, 0x9b, 0xee, 0x29, 0x6b,
+  0x34, 0x61, 0x57, 0xd7, 0xb8, 0x59, 0xa0, 0x29, 0xd6, 0x33, 0x17, 0x85,
+  0x3c, 0x0d, 0x19, 0x9f, 0xdb, 0xef, 0xdb, 0x50, 0x3e, 0x75, 0xb8, 0x82,
+  0x88, 0x97, 0xb8, 0x8c, 0x98, 0x16, 0x00, 0xa3, 0x26, 0xa1, 0xec, 0x0d,
+  0x77, 0x43, 0x5c, 0x17, 0x97, 0x9a, 0x52, 0x02, 0x3a, 0xb2, 0x06, 0x84,
+  0x8e, 0xcf, 0x28, 0xe3, 0x99, 0x00, 0x3a, 0xa0, 0xf5, 0x9a, 0x7e, 0xb6,
+  0x27, 0x70, 0xba, 0x74, 0x92, 0xb4, 0xc6, 0x08, 0xe3, 0x84, 0x64, 0xf3,
+  0x25, 0x42, 0xf8, 0x8d, 0x03, 0x86, 0x77, 0x3f, 0xce, 0xd1, 0x63, 0x7f,
+  0xa4, 0x9e, 0xb8, 0xed, 0xd6, 0x31, 0x4a, 0x84, 0x37, 0x1e, 0xb0, 0x20,
+  0x6b, 0xc8, 0x62, 0x59, 0x26, 0x2d, 0xd5, 0x6b, 0x53, 0x8d, 0x8e, 0x9a,
+  0x09, 0x81, 0x4c, 0xcf, 0xb8, 0x63, 0x93, 0xab, 0x55, 0x09, 0xc6, 0xab,
+  0xe0, 0x69, 0x8a, 0xbb, 0xc1, 0xad, 0x72, 0xb4, 0x64, 0x07, 0xa7, 0x41,
+  0x42, 0x2c, 0x1d, 0x97, 0x15, 0x6a, 0x31, 0xab, 0xb1, 0x13, 0x08, 0x01,
+  0x5a, 0x26, 0xcb, 0x7b, 0x42, 0x9c, 0x09, 0x8d, 0xda, 0x9d, 0xe5, 0x34,
+  0xa0, 0x4d, 0xc0, 0x4f, 0xf0, 0xd2, 0x73, 0xba, 0x80, 0xf2, 0x42, 0x87,
+  0x2b, 0x67, 0x48, 0xca, 0xcd, 0x1a, 0xbd, 0x71, 0xd5, 0x9d, 0x36, 0xd3,
+  0x95, 0x6b, 0xa0, 0x9f, 0x0c, 0xfe, 0xa7, 0xae, 0x0c, 0x4b, 0xab, 0x1c,
+  0xc9, 0x03, 0xa8, 0xfd, 0xb0, 0x22, 0xad, 0x26, 0x5c, 0x81, 0xe1, 0xf3,
+  0xa5, 0x6e, 0xf3, 0x70, 0xf9, 0x91, 0x96, 0xaf, 0x01, 0xfe, 0xf7, 0x2a,
+  0xc4, 0x9c, 0x7c, 0xe5, 0x61, 0xa2, 0xfa, 0xc6, 0x2a, 0xa4, 0xb9, 0x0d,
+  0x87, 0xdd, 0x2f, 0xb1, 0x5b, 0xd1, 0x80, 0xdd, 0x45, 0xf6, 0x15, 0xd7,
+  0x36, 0x3b, 0x2a, 0xd2, 0x70, 0x59, 0x4d, 0xb5, 0xd9, 0xb0, 0x91, 0x0a,
+  0xf1, 0x1b, 0x9f, 0xe8, 0x49, 0xce, 0xe0, 0x80, 0x5e, 0x18, 0xbc, 0x55,
+  0x93, 0xc3, 0x97, 0xd2, 0xc3, 0x10, 0x56, 0x54, 0xe9, 0xe1, 0x1c, 0x55,
+  0x5b, 0xed, 0x81, 0x03, 0x7d, 0x89, 0x13, 0x0d, 0x7b, 0x6a, 0x70, 0x68,
+  0xae, 0x8a, 0x3c, 0x6f, 0x89, 0x88, 0x5c, 0x0d, 0x14, 0x53, 0x18, 0x88,
+  0x79, 0x9d, 0x0f, 0x99, 0xfc, 0x2a, 0xef, 0xaa, 0x2e, 0x75, 0xcf, 0x4d,
+  0x0c, 0x25, 0x02, 0x5a, 0x4d, 0x0d, 0xfb, 0x7b, 0x3b, 0x32, 0x98, 0x1d,
+  0x69, 0x40, 0xc4, 0x39, 0x25, 0x49, 0xef, 0x92, 0x37, 0x98, 0x95, 0xf0,
+  0xe6, 0xe2, 0xa0, 0x6d, 0x0e, 0xa5, 0x98, 0x4b, 0xdd, 0x6e, 0xa9, 0x48,
+  0xc7, 0x57, 0x13, 0xdd, 0xb5, 0x80, 0x6d, 0xd1, 0x84, 0x32, 0x46, 0x3c,
+  0x77, 0x1b, 0xd4, 0x77, 0x92, 0x1e, 0x91, 0xd2, 0xe0, 0x7d, 0x10, 0x49,
+  0xc0, 0x79, 0x79, 0xc0, 0x05, 0xa4, 0x0b, 0xfd, 0xce, 0x65, 0x33, 0x01,
+  0x9b, 0x64, 0xa1, 0x0e, 0xd8, 0x8b, 0xc3, 0x37, 0x5f, 0x1f, 0x43, 0x12,
+  0x00, 0x6f, 0xe7, 0x03, 0x9a, 0x33, 0xb5, 0x4f, 0x57, 0x13, 0x28, 0x0d,
+  0xb4, 0x62, 0x88, 0x44, 0x02, 0x82, 0xaa, 0x55, 0x34, 0x43, 0x91, 0x36,
+  0x10, 0x2f, 0xb6, 0x5b, 0xe3, 0x8b, 0x36, 0x12, 0x33, 0x90, 0x41, 0x82,
+  0x60, 0xfd, 0xc9, 0xaa, 0x08, 0x57, 0xab, 0xf1, 0x32, 0x55, 0x28, 0x8e,
+  0x34, 0x84, 0x6a, 0x50, 0xb3, 0xc3, 0xb0, 0x79, 0x16, 0x37, 0x2c, 0xd9,
+  0xc0, 0xa9, 0xb8, 0x25, 0x54, 0xdc, 0x61, 0x68, 0xf3, 0x11, 0x80, 0x82,
+  0xbd, 0xdd, 0x5d, 0x5f, 0x23, 0x23, 0x75, 0x0d, 0x46, 0xdc, 0xb2, 0x4c,
+  0x76, 0x07, 0xcf, 0x9e, 0xad, 0x63, 0x84, 0xae, 0x51, 0xe0, 0x3e, 0x3c,
+  0xf9, 0xe4, 0x36, 0x07, 0xfc, 0xe8, 0xba, 0x36, 0x3b, 0x14, 0x19, 0x94,
+  0xc0, 0xd5, 0xd8, 0xae, 0xca, 0x49, 0x2d, 0x6a, 0xf0, 0x10, 0xdb, 0x3b,
+  0x7c, 0x21, 0x0b, 0xa7, 0xcd, 0xf0, 0x52, 0x6e, 0x78, 0x8c, 0x5b, 0xc0,
+  0x0e, 0x98, 0x6d, 0x64, 0xc9, 0xe1, 0x5d, 0xb9, 0xf3, 0xa8, 0x7d, 0xd2,
+  0xc2, 0x04, 0xfa, 0xec, 0x9a, 0x25, 0xba, 0x8a, 0x67, 0x63, 0x22, 0xc1,
+  0xdb, 0x73, 0x36, 0x87, 0x9d, 0xbc, 0xf9, 0x5a, 0xac, 0x03, 0xa4, 0xea,
+  0xc2, 0x34, 0xba, 0xd3, 0x52, 0x7c, 0xdf, 0x4a, 0xa9, 0x0b, 0x0e, 0xed,
+  0x83, 0x2b, 0x5d, 0xea, 0x55, 0xe6, 0x0b, 0x61, 0x05, 0x7e, 0xf7, 0xd7,
+  0x98, 0xe6, 0x2e, 0x93, 0x41, 0x20, 0x9c, 0x68, 0xa5, 0x0b, 0x96, 0x4c,
+  0xe6, 0xf7, 0xa6, 0x10, 0x69, 0x0f, 0x68, 0xdd, 0x0c, 0xed, 0xae, 0x59,
+  0x31, 0x81, 0x89, 0x16, 0x0b, 0x0a, 0x8a, 0x64, 0x93, 0x8e, 0x2e, 0xa5,
+  0x1b, 0x9c, 0xef, 0x96, 0x24, 0xf2, 0x69, 0x43, 0x69, 0x58, 0xfe, 0x9a,
+  0xb5, 0xd1, 0x58, 0xb2, 0xea, 0x9b, 0x29, 0xa4, 0x6d, 0x95, 0x93, 0x02,
+  0xd1, 0x21, 0x57, 0xe7, 0xdd, 0x46, 0x1d, 0xc5, 0xa2, 0xf8, 0xaf, 0x8f,
+  0xf3, 0x81, 0x11, 0xf2, 0x41, 0xe5, 0x9b, 0x6a, 0x31, 0xf5, 0xaa, 0xbf,
+  0x8e, 0xb8, 0xd3, 0xae, 0x7d, 0x29, 0xef, 0x4b, 0xd7, 0x69, 0x77, 0x77,
+  0xf2, 0xbe, 0x2d, 0x4d, 0xc7, 0x01, 0x60, 0x91, 0x56, 0x2b, 0xa1, 0xb8,
+  0x34, 0x40, 0xd3, 0x65, 0x58, 0x0a, 0x07, 0xe7, 0xc8, 0x9b, 0x62, 0xc9,
+  0x46, 0xa2, 0xd9, 0xc6, 0xa8, 0x93, 0xc2, 0x34, 0x04, 0xe0, 0x6c, 0x5c,
+  0x5e, 0xb7, 0xb9, 0x56, 0x0a, 0x03, 0x4a, 0x2c, 0x6a, 0xff, 0x9e, 0x38,
+  0x2c, 0x1f, 0x0f, 0xd8, 0x5b, 0xae, 0x16, 0xca, 0xfb, 0x58, 0xdf, 0xa2,
+  0xc1, 0xa7, 0xd5, 0x0d, 0x82, 0xb8, 0x9c, 0x65, 0x26, 0x16, 0xaf, 0xd0,
+  0xbd, 0xa2, 0xcf, 0x92, 0x3c, 0x25, 0xc2, 0x14, 0x84, 0xeb, 0xc6, 0x52,
+  0x34, 0x57, 0x20, 0x30, 0x64, 0x7c, 0xea, 0x29, 0x10, 0x99, 0xba, 0xc3,
+  0x75, 0x83, 0x83, 0x10, 0x30, 0x97, 0x4e, 0xf2, 0x6b, 0x1a, 0x82, 0x42,
+  0xf9, 0x1c, 0x76, 0x17, 0x68, 0x4b, 0x00, 0x55, 0x6a, 0x2d, 0x21, 0x94,
+  0x68, 0x60, 0x5a, 0x0a, 0xc8, 0x92, 0xb1, 0x5c, 0x95, 0x06, 0x60, 0xfd,
+  0xf2, 0xa5, 0x56, 0x66, 0x12, 0xa9, 0xcf, 0xf7, 0xbd, 0xa8, 0xa4, 0xf0,
+  0x26, 0x4a, 0x8a, 0x11, 0xfa, 0xc4, 0x0c, 0x65, 0x80, 0x92, 0x0e, 0x2e,
+  0x11, 0xbb, 0xa3, 0x4b, 0xd6, 0xee, 0x71, 0x1d, 0x99, 0x8e, 0xf8, 0xdd,
   0xf1, 0xc5, 0x57, 0x67, 0xa3, 0x63, 0xe2, 0x16, 0x2f, 0x8f, 0xbf, 0x7a,
-  0xcb, 0x9c, 0x84, 0x77, 0x4c, 0xac, 0xa3, 0xc0, 0xbc, 0x94, 0x44, 0x5b,
-  0xe0, 0x24, 0x71, 0x34, 0x12, 0x48, 0x47, 0x64, 0x93, 0xbe, 0x51, 0x86,
-  0x89, 0x5d, 0x02, 0x1f, 0x39, 0xcb, 0xc4, 0x9c, 0x96, 0x23, 0xc6, 0xda,
-  0x03, 0xdc, 0x72, 0x28, 0xd3, 0x82, 0x51, 0xb9, 0x6b, 0xc3, 0xae, 0xb1,
-  0x0a, 0x6b, 0xd5, 0x81, 0x07, 0x30, 0x7c, 0x2f, 0xc6, 0x53, 0x3d, 0x10,
-  0xbe, 0x12, 0xb2, 0x55, 0x3c, 0xd6, 0xab, 0x09, 0xb2, 0xad, 0xe2, 0xfc,
-  0xcd, 0x0a, 0xb9, 0xc9, 0x18, 0x29, 0x07, 0xe7, 0x1a, 0x77, 0x6b, 0x5e,
-  0xe3, 0x5a, 0x15, 0x21, 0x5f, 0xeb, 0x0f, 0x57, 0x42, 0x70, 0xc4, 0x72,
-  0x24, 0xab, 0x76, 0xa6, 0x2c, 0x1a, 0x1c, 0xa9, 0xca, 0x04, 0x60, 0x4a,
-  0x6e, 0x52, 0x75, 0x39, 0x4a, 0x1c, 0xa3, 0x16, 0x0b, 0xd8, 0x52, 0xc5,
-  0xf4, 0x0e, 0xf3, 0xd4, 0xea, 0x75, 0x52, 0xa6, 0xd7, 0x6a, 0x58, 0x61,
-  0xe5, 0xc3, 0x0a, 0xeb, 0x42, 0x3a, 0xef, 0xd7, 0xb3, 0x83, 0x4b, 0x99,
-  0x29, 0xdb, 0x1e, 0xe4, 0x72, 0x0e, 0xc1, 0x46, 0x43, 0xf0, 0x1f, 0x0e,
-  0xd7, 0x74, 0x42, 0x83, 0x9c, 0x27, 0x0e, 0x97, 0x0e, 0xd4, 0xba, 0xf5,
-  0x75, 0x7d, 0x4d, 0xc2, 0x54, 0x1f, 0x88, 0x4f, 0x96, 0x10, 0x86, 0xa7,
-  0x51, 0x46, 0xbc, 0xa5, 0xb0, 0x5a, 0x0b, 0xf1, 0xc5, 0x67, 0x50, 0x5a,
-  0x97, 0x92, 0xbe, 0x5c, 0x5a, 0x3e, 0xb0, 0xed, 0x6f, 0x6c, 0x6c, 0xbc,
-  0x3c, 0xbe, 0x3c, 0x3c, 0x39, 0x3d, 0x7e, 0x99, 0x9c, 0xbc, 0x79, 0x75,
-  0x76, 0xf1, 0xfa, 0xf0, 0x52, 0x1d, 0xde, 0x2f, 0x9d, 0x71, 0xcc, 0xa5,
-  0xcc, 0x3a, 0xdb, 0xa3, 0x37, 0x9c, 0x81, 0x84, 0x69, 0x17, 0xaf, 0x15,
-  0x54, 0x5a, 0x96, 0x21, 0x6b, 0xac, 0xc1, 0x46, 0xa2, 0x8e, 0x72, 0x0f,
-  0xc6, 0xc3, 0x77, 0xf5, 0x8e, 0x73, 0x6f, 0x0e, 0x6d, 0x39, 0xcd, 0xb4,
-  0x85, 0x12, 0x63, 0x0f, 0x36, 0xe5, 0xaa, 0xaa, 0xcb, 0x3d, 0xc5, 0xdb,
-  0x29, 0xd9, 0xcd, 0xa0, 0xc9, 0xc1, 0xc9, 0x4e, 0x13, 0x4f, 0x13, 0xc6,
-  0x0f, 0xc3, 0x66, 0x4a, 0x81, 0xf6, 0x10, 0x62, 0x0a, 0x10, 0x05, 0xb2,
-  0xa9, 0x2f, 0x6c, 0xd3, 0x65, 0xcb, 0x1b, 0xda, 0x8e, 0x84, 0x57, 0xe0,
-  0x93, 0x70, 0x7f, 0x39, 0x5d, 0x7d, 0x83, 0xcb, 0xa6, 0xd5, 0x8a, 0x03,
-  0xc3, 0xc0, 0x8b, 0x15, 0xd7, 0xf2, 0xb6, 0xb3, 0x0e, 0x28, 0x48, 0xc7,
-  0x44, 0xcd, 0x81, 0xa4, 0x15, 0xb1, 0xc2, 0xa6, 0xb6, 0x9c, 0x4b, 0x94,
-  0xa4, 0x98, 0xc1, 0x89, 0xd6, 0x4a, 0xe3, 0xb5, 0x60, 0x34, 0x62, 0xfe,
-  0x77, 0x61, 0x50, 0x6c, 0x2e, 0x3a, 0xce, 0x6b, 0xe1, 0xf9, 0x8e, 0x2b,
-  0x5f, 0xad, 0xa7, 0xcd, 0x9f, 0x5b, 0x83, 0xa4, 0x18, 0xbc, 0xa4, 0x87,
-  0xa6, 0xab, 0xf9, 0x52, 0x8b, 0x6d, 0x9a, 0x94, 0x0b, 0xfb, 0x9a, 0x6d,
-  0xa1, 0x08, 0x52, 0x10, 0x08, 0x60, 0x8c, 0x79, 0xa5, 0x6b, 0x20, 0xf3,
-  0x00, 0x7d, 0xd7, 0xe6, 0xad, 0xaa, 0x81, 0xdf, 0x69, 0x0e, 0xa6, 0x76,
-  0xa5, 0xed, 0xa6, 0x34, 0x81, 0x05, 0x19, 0xb9, 0x67, 0xdb, 0xa5, 0xb9,
-  0x53, 0x1f, 0x03, 0x82, 0xf5, 0xdf, 0xb2, 0x6a, 0x00, 0x4c, 0xb2, 0xda,
-  0xa0, 0xaa, 0x49, 0xb1, 0x7f, 0xac, 0x31, 0xa9, 0xf0, 0xc5, 0x66, 0xd4,
-  0x44, 0xc8, 0xe9, 0xad, 0x6b, 0x0f, 0xbf, 0xd9, 0x1e, 0x81, 0x72, 0x71,
-  0xe2, 0x27, 0xae, 0x20, 0x3b, 0x83, 0x9a, 0x0b, 0xbe, 0xde, 0x86, 0x56,
-  0xa3, 0x08, 0xb1, 0x62, 0x8d, 0x7c, 0x57, 0xa8, 0xec, 0x59, 0xdc, 0xb2,
-  0x7e, 0x8d, 0xcc, 0xb5, 0xf1, 0x7d, 0x98, 0x62, 0x24, 0xd1, 0x3d, 0x5a,
-  0x4f, 0x03, 0x4c, 0x6f, 0xb1, 0x61, 0xa5, 0xaf, 0xec, 0x25, 0x8b, 0xcf,
-  0x02, 0xf7, 0x17, 0x70, 0x67, 0x30, 0x79, 0x56, 0x74, 0xb3, 0xb4, 0x82,
-  0x92, 0x83, 0x44, 0x03, 0xb9, 0x33, 0x9c, 0x69, 0xd4, 0xc3, 0x97, 0xe3,
-  0xf2, 0x09, 0x80, 0x2c, 0x04, 0x70, 0x30, 0x65, 0xac, 0x00, 0x3b, 0x14,
-  0x12, 0x54, 0xec, 0x5a, 0xc1, 0x5d, 0xc7, 0x4a, 0x6c, 0x39, 0x43, 0x64,
-  0xa8, 0x86, 0xca, 0x9d, 0x17, 0x95, 0x9c, 0x37, 0x48, 0xdd, 0x3d, 0xa9,
-  0x32, 0xcd, 0x64, 0xd0, 0x5b, 0xde, 0x50, 0x1f, 0xbd, 0xe4, 0x9a, 0xf5,
-  0x96, 0x31, 0x0d, 0x3d, 0x62, 0xa0, 0x53, 0x79, 0xfc, 0xc5, 0x45, 0x7a,
-  0x95, 0x66, 0xb3, 0x3f, 0xed, 0xef, 0x8e, 0xd2, 0xeb, 0xd5, 0x2c, 0xfd,
-  0x17, 0xbc, 0xf8, 0xe2, 0xd1, 0xa3, 0xfd, 0xdd, 0xcf, 0x3e, 0xdf, 0xed,
-  0xb5, 0x1c, 0xd7, 0x41, 0xcc, 0x0b, 0x82, 0x18, 0xf8, 0x26, 0x03, 0xdf,
-  0x45, 0x3f, 0xc3, 0xc9, 0x75, 0x0e, 0x45, 0x8b, 0x85, 0x17, 0x5d, 0x83,
-  0x54, 0x34, 0x3c, 0xb0, 0x49, 0xc5, 0x40, 0xa3, 0x1b, 0x97, 0xe8, 0xfa,
-  0x8f, 0x7b, 0x07, 0xc2, 0xca, 0x80, 0x2e, 0x8b, 0x7b, 0x82, 0xd7, 0xe2,
-  0x79, 0xbe, 0xa0, 0x1b, 0xe8, 0x8b, 0xa4, 0x4e, 0xaf, 0x1d, 0xad, 0x6a,
-  0xb2, 0xb0, 0x84, 0x88, 0x3b, 0x17, 0xdc, 0x15, 0x13, 0x79, 0xbe, 0x90,
-  0xca, 0x03, 0x8c, 0xaa, 0x0f, 0xc1, 0x67, 0x99, 0x95, 0x9c, 0x6b, 0x5f,
-  0x5c, 0x97, 0xe9, 0xdc, 0x02, 0xf1, 0xf9, 0x7d, 0x0e, 0x0c, 0x1a, 0x2e,
-  0x67, 0x08, 0x12, 0xb7, 0xe8, 0x1e, 0x91, 0x42, 0x85, 0xe0, 0x66, 0xcb,
-  0xca, 0x63, 0x82, 0xc9, 0x75, 0x13, 0xe2, 0xf5, 0xd3, 0x62, 0xc1, 0xce,
-  0xd1, 0xc3, 0xac, 0xfa, 0x0e, 0x5c, 0x68, 0x30, 0xb5, 0x99, 0x0e, 0xf1,
-  0x3b, 0x92, 0xdb, 0x53, 0x41, 0x7f, 0xeb, 0x2d, 0x25, 0x6d, 0xd4, 0xd5,
-  0x13, 0x17, 0x83, 0x58, 0xde, 0x98, 0x57, 0xea, 0x03, 0xd2, 0x92, 0xe7,
-  0x66, 0xb9, 0xd9, 0xfb, 0xe2, 0x05, 0x08, 0x62, 0xef, 0x8b, 0x7f, 0x71,
-  0x9f, 0xed, 0xeb, 0x67, 0xfb, 0x5f, 0xfc, 0xcb, 0x70, 0x88, 0xf1, 0x31,
-  0x85, 0x6c, 0xda, 0xd7, 0x9b, 0x0a, 0x26, 0x91, 0xea, 0x11, 0x96, 0xbf,
-  0x1c, 0x6a, 0xaa, 0xec, 0x75, 0xcf, 0x7a, 0x0e, 0x57, 0xb9, 0xaf, 0x4e,
-  0x3f, 0xc7, 0xb7, 0x72, 0x2b, 0xc3, 0x03, 0x34, 0xdc, 0xaa, 0x6b, 0xd1,
-  0x9d, 0x6f, 0x02, 0xed, 0x68, 0x78, 0x1b, 0x5e, 0xfe, 0x57, 0xa6, 0xd4,
-  0x7f, 0xdd, 0x48, 0xd4, 0x37, 0xc7, 0xdb, 0x71, 0x0f, 0x27, 0x84, 0x91,
-  0x2d, 0x3d, 0x9a, 0x5a, 0x79, 0x00, 0x6e, 0x99, 0x43, 0xdb, 0xf9, 0x0e,
-  0x0c, 0x4a, 0x6a, 0xff, 0x59, 0xb1, 0xf8, 0x5c, 0x4e, 0x80, 0x3d, 0x23,
-  0x69, 0x00, 0x24, 0x63, 0xd4, 0x52, 0xa0, 0x82, 0xe1, 0xea, 0x7f, 0xf8,
-  0x41, 0x05, 0x2a, 0xfa, 0x45, 0x47, 0x7e, 0x43, 0xbc, 0x68, 0x4a, 0xec,
-  0x6d, 0x8e, 0x72, 0xbe, 0x5a, 0x07, 0x5d, 0xaf, 0xfc, 0x2b, 0x9d, 0xa9,
-  0x34, 0x42, 0x5b, 0x7b, 0x38, 0x3a, 0x3a, 0x39, 0x41, 0x24, 0x1f, 0x16,
-  0xf5, 0x58, 0xd8, 0x18, 0x68, 0x73, 0x0b, 0x51, 0x08, 0x3e, 0xf0, 0x2b,
-  0x24, 0x7d, 0xde, 0x3b, 0x6c, 0x3b, 0xa8, 0x9f, 0x1a, 0x33, 0xa5, 0x58,
-  0xb7, 0x12, 0x34, 0x2b, 0x52, 0xce, 0x8b, 0x9e, 0x3c, 0x78, 0x9d, 0xf7,
-  0xd4, 0xb7, 0x24, 0x9f, 0xf4, 0x3c, 0x36, 0x88, 0xec, 0x07, 0x36, 0xed,
-  0x85, 0x88, 0x4e, 0xf9, 0x3f, 0xb2, 0x17, 0x7b, 0xbb, 0xdd, 0x4f, 0x00,
-  0xb7, 0x9f, 0x71, 0x88, 0x5f, 0x78, 0xdf, 0xdc, 0x43, 0xcf, 0xe7, 0x53,
-  0x79, 0xfa, 0x26, 0x9f, 0x4e, 0xe9, 0x4e, 0x40, 0x39, 0xf7, 0x17, 0xbd,
-  0x31, 0xdf, 0xb0, 0xfc, 0xff, 0x6b, 0xc6, 0x01, 0x2f, 0x92, 0x3e, 0x5b,
-  0xad, 0xc6, 0xf3, 0xbc, 0x31, 0xe0, 0x1d, 0x9e, 0xe0, 0x17, 0x3c, 0xe1,
-  0xef, 0x33, 0x47, 0x1d, 0x19, 0x8b, 0x76, 0x22, 0xfb, 0x6d, 0x5e, 0x15,
-  0xc5, 0x38, 0x2d, 0x37, 0xd5, 0xc5, 0x62, 0xe3, 0xdc, 0xdc, 0xdb, 0x7f,
-  0xf4, 0xf8, 0xc9, 0xe6, 0x50, 0xe5, 0x34, 0xb0, 0x88, 0x3a, 0xcc, 0xbf,
-  0x97, 0x26, 0x5c, 0xbe, 0xf8, 0xdc, 0xe3, 0x95, 0x77, 0xf9, 0x39, 0x99,
-  0x8b, 0x71, 0x77, 0x2f, 0xa4, 0xb7, 0x7f, 0xe1, 0x7e, 0x5e, 0xa0, 0x8b,
-  0x7f, 0xc9, 0xa7, 0x2f, 0xdc, 0x0c, 0xff, 0x85, 0xe7, 0xf2, 0x42, 0x27,
-  0x41, 0xfb, 0x6a, 0x09, 0x56, 0x55, 0x58, 0x4a, 0xe0, 0x63, 0x9b, 0x6b,
-  0x9b, 0xb8, 0x81, 0x49, 0xc3, 0xc9, 0x3e, 0x98, 0x8a, 0x47, 0x02, 0xd2,
-  0xaa, 0x4f, 0x30, 0xda, 0xf9, 0x30, 0xa0, 0x56, 0x06, 0xdc, 0xca, 0xc0,
-  0x33, 0x6c, 0xc0, 0x47, 0x0f, 0x78, 0x23, 0xfa, 0x9a, 0x65, 0x36, 0x83,
-  0xe5, 0x43, 0x45, 0x81, 0xa2, 0x80, 0x0b, 0xfb, 0xe8, 0xeb, 0x93, 0x4d,
-  0x8d, 0x0d, 0x11, 0xd5, 0xad, 0xdf, 0x65, 0x33, 0x76, 0x51, 0x5c, 0x93,
-  0x74, 0xc9, 0xa7, 0x7f, 0xc3, 0xca, 0x5e, 0xa5, 0x1c, 0xea, 0xc0, 0xfd,
-  0x4a, 0x42, 0x28, 0x75, 0xa6, 0xb7, 0xce, 0x8c, 0xad, 0xd0, 0xa5, 0x20,
-  0x5b, 0x07, 0xcd, 0x00, 0xea, 0x55, 0x62, 0x1e, 0xe0, 0x87, 0x59, 0xba,
-  0x6c, 0xb2, 0xc1, 0x2b, 0xe7, 0x88, 0x74, 0xd9, 0x4b, 0xfa, 0x28, 0x7d,
-  0x25, 0xfc, 0xc4, 0x58, 0x44, 0xcf, 0x01, 0xae, 0x09, 0x25, 0x84, 0xdc,
-  0x03, 0x6e, 0xd4, 0x71, 0xa6, 0x39, 0x68, 0x62, 0xca, 0x10, 0xc1, 0x90,
-  0xf9, 0xe7, 0xf3, 0x2f, 0x0d, 0x1e, 0xf6, 0x8b, 0x04, 0xd5, 0xeb, 0xe4,
-  0x2d, 0xf5, 0x05, 0xaa, 0x51, 0x48, 0xec, 0xa8, 0x78, 0x49, 0xd5, 0x03,
-  0xe7, 0x96, 0x0a, 0x02, 0x46, 0x54, 0x30, 0x50, 0x0c, 0x6f, 0x4c, 0x74,
-  0x7c, 0xaf, 0x06, 0x00, 0x6e, 0x61, 0xf3, 0x2f, 0x38, 0x04, 0xcf, 0x79,
-  0x1b, 0xf0, 0xf5, 0x17, 0x9b, 0x1b, 0xae, 0x8c, 0xb8, 0x93, 0xdc, 0x5b,
-  0x4e, 0x5d, 0x21, 0xd0, 0x70, 0x3e, 0x24, 0x50, 0x1b, 0x16, 0xaa, 0x48,
-  0x63, 0x8c, 0x3f, 0x80, 0x12, 0xaf, 0x24, 0x4d, 0xcd, 0xa6, 0x0a, 0x22,
-  0xe8, 0x8c, 0xc6, 0xd2, 0x78, 0xc6, 0xa1, 0xdb, 0x2c, 0x3d, 0x6e, 0x72,
-  0x40, 0x20, 0xde, 0xdb, 0x74, 0xd0, 0xaa, 0xb0, 0x63, 0x82, 0xe1, 0x95,
-  0x99, 0x01, 0xec, 0x6d, 0x28, 0x12, 0xb2, 0x97, 0xe6, 0xc3, 0x89, 0x55,
-  0x81, 0xf0, 0xe0, 0x73, 0xb8, 0x04, 0xaa, 0x23, 0x3a, 0x22, 0xaf, 0x38,
-  0x41, 0x52, 0x3b, 0x7d, 0xc1, 0xcb, 0xbd, 0x37, 0xbc, 0xce, 0xaf, 0x64,
-  0x31, 0x88, 0x45, 0x5e, 0x67, 0x3b, 0xf4, 0x67, 0x9f, 0x3e, 0xdf, 0x67,
-  0xa9, 0x8c, 0x7f, 0x79, 0x84, 0x90, 0xa1, 0xf0, 0xee, 0x0f, 0xce, 0x86,
-  0x3b, 0x17, 0xfc, 0x4b, 0xee, 0xee, 0x7c, 0xf5, 0xb4, 0xe8, 0x28, 0x41,
-  0xe6, 0x51, 0xc1, 0x9e, 0x7e, 0xe0, 0x45, 0x61, 0x45, 0x8b, 0x55, 0xd2,
-  0x15, 0x87, 0xec, 0xbb, 0xa0, 0x5b, 0x8d, 0x69, 0x50, 0x41, 0x9d, 0xe5,
-  0xee, 0x5c, 0x4d, 0x26, 0x9c, 0xe2, 0x80, 0x9b, 0x35, 0xbb, 0xdb, 0xee,
-  0x87, 0xc1, 0x8c, 0xc4, 0xde, 0xdf, 0x73, 0xd2, 0x30, 0x23, 0x11, 0xf8,
-  0x82, 0x24, 0xdc, 0x3d, 0x8a, 0x8c, 0xb3, 0x50, 0xe0, 0xb3, 0x28, 0xb1,
-  0xcd, 0x79, 0x7b, 0x07, 0x83, 0x82, 0x7f, 0x26, 0x6d, 0xb2, 0x57, 0x6b,
-  0x9b, 0xbb, 0xc9, 0x66, 0x15, 0x74, 0x75, 0xc5, 0xa1, 0xb3, 0x5e, 0x0d,
-  0x85, 0x17, 0x1d, 0x6d, 0x86, 0x67, 0xbf, 0x98, 0xd4, 0x19, 0xe9, 0xba,
-  0x0c, 0x1a, 0x34, 0x17, 0x3e, 0x77, 0x3c, 0x97, 0xc2, 0x67, 0x20, 0xe1,
-  0xd9, 0x40, 0x6e, 0x4f, 0x15, 0x89, 0x06, 0xaf, 0x86, 0xc9, 0x29, 0x82,
-  0x72, 0xab, 0x54, 0xc0, 0x27, 0xec, 0x86, 0x35, 0x6a, 0x20, 0xd2, 0x11,
-  0x19, 0x7c, 0x43, 0xa2, 0xfa, 0x39, 0xe3, 0xdf, 0x48, 0x2a, 0x37, 0x7c,
-  0x65, 0x21, 0x2e, 0x91, 0x2f, 0x54, 0x1e, 0xe9, 0xc3, 0x3e, 0xed, 0x9e,
-  0x83, 0x1d, 0x5e, 0x6c, 0x71, 0xc8, 0x6d, 0x71, 0x04, 0x1b, 0x34, 0x22,
-  0x71, 0x45, 0x2a, 0x80, 0x06, 0x6c, 0xdd, 0x1d, 0x02, 0x89, 0xfa, 0xcb,
-  0xc4, 0xe8, 0xc2, 0x89, 0xe7, 0x8c, 0x81, 0x01, 0x3f, 0x2d, 0xb5, 0x06,
-  0x2a, 0x03, 0x1c, 0x2f, 0x91, 0x51, 0x0f, 0x7a, 0xe3, 0x2c, 0x73, 0xca,
-  0xb5, 0xec, 0x55, 0xe1, 0x22, 0x7a, 0x61, 0x8b, 0x11, 0x71, 0xc3, 0xbb,
-  0xd0, 0x78, 0x90, 0x3c, 0xae, 0xf4, 0x3d, 0xfd, 0xc2, 0xc2, 0xd9, 0xb8,
-  0xa4, 0x5d, 0xcf, 0x4a, 0xb9, 0x1a, 0xd0, 0xab, 0x80, 0x72, 0x4c, 0x55,
-  0x4d, 0x79, 0x7d, 0x9a, 0x18, 0x88, 0xc7, 0x95, 0x17, 0x15, 0x2d, 0x78,
-  0x10, 0x53, 0x54, 0xcb, 0x88, 0xc8, 0x43, 0xfa, 0x94, 0xdc, 0x72, 0xb2,
-  0xb6, 0x9c, 0x08, 0x9c, 0xf0, 0xe2, 0x34, 0x8e, 0x6c, 0xf0, 0x84, 0xbc,
-  0xca, 0x74, 0x44, 0x64, 0xb2, 0xc9, 0x4b, 0xb0, 0xd9, 0x4f, 0x36, 0x79,
-  0xa8, 0xfc, 0xc5, 0x26, 0xd6, 0x13, 0x1f, 0x07, 0xcb, 0xb7, 0x39, 0xec,
-  0x38, 0x85, 0xfc, 0xcc, 0x8b, 0x2f, 0x1b, 0xab, 0x84, 0xcf, 0xad, 0xa9,
-  0x17, 0x12, 0xc7, 0x1f, 0xc9, 0xdc, 0xf6, 0x6e, 0xd0, 0xfe, 0x8b, 0xa3,
-  0x82, 0x01, 0xd8, 0xa8, 0x99, 0x20, 0x12, 0x73, 0xe2, 0x3e, 0xcb, 0x91,
-  0x0f, 0x18, 0x35, 0xf4, 0xf1, 0x53, 0x7c, 0x69, 0xac, 0xc8, 0x45, 0x29,
-  0x0a, 0x77, 0x13, 0x12, 0x30, 0xce, 0x4b, 0xbb, 0x99, 0x8b, 0xde, 0x77,
-  0x57, 0xc0, 0xca, 0x00, 0x9e, 0xb3, 0x37, 0x44, 0x82, 0x98, 0xaf, 0xbf,
-  0xe8, 0x1a, 0x70, 0xca, 0x7b, 0x0f, 0x0b, 0xda, 0x73, 0x81, 0xa3, 0xa6,
-  0xd2, 0xdb, 0x2a, 0x77, 0xf1, 0xae, 0x65, 0x3e, 0x01, 0xc2, 0xef, 0x8b,
-  0x2f, 0xa7, 0xc5, 0x35, 0x73, 0xae, 0x3e, 0x1d, 0x34, 0xfe, 0xb7, 0xc7,
-  0x0f, 0xef, 0x6b, 0xa7, 0x32, 0x60, 0x9c, 0x15, 0x91, 0xe2, 0xed, 0xef,
-  0x35, 0x51, 0x94, 0xd4, 0xf0, 0xb4, 0x98, 0x68, 0xdb, 0xae, 0x69, 0xd9,
-  0x0f, 0x6a, 0xdf, 0x7d, 0x11, 0xf6, 0x65, 0x8b, 0x93, 0x6a, 0xcb, 0x90,
-  0x8d, 0x88, 0x53, 0xd4, 0x72, 0x95, 0xbb, 0x7a, 0xee, 0x30, 0x70, 0x71,
-  0x1d, 0x45, 0xb9, 0xb7, 0x66, 0x9a, 0xb5, 0xb4, 0xf9, 0xe5, 0xa6, 0x84,
-  0x61, 0x6f, 0x3e, 0xdf, 0x04, 0x07, 0x63, 0xbe, 0x64, 0x25, 0x8b, 0xf4,
-  0x72, 0xda, 0x94, 0x5b, 0x71, 0x20, 0xb2, 0x83, 0x02, 0x9a, 0x35, 0x82,
-  0xe4, 0x98, 0x61, 0x98, 0x1a, 0x19, 0xc6, 0xf7, 0xc1, 0x4c, 0x80, 0x6a,
-  0xc6, 0x18, 0x15, 0xa3, 0x33, 0x8e, 0x6b, 0x09, 0x5e, 0xd1, 0x4b, 0x17,
-  0x62, 0x19, 0xc0, 0x20, 0x2a, 0x8e, 0x29, 0x10, 0x33, 0xe7, 0x6a, 0xb1,
-  0xe4, 0xd4, 0xdf, 0x49, 0x2d, 0xe5, 0xc7, 0x70, 0x96, 0x86, 0xc9, 0xdb,
-  0x85, 0x60, 0x90, 0x67, 0xac, 0x2c, 0xe7, 0xe5, 0x64, 0x35, 0x67, 0x53,
-  0xc5, 0x84, 0x0d, 0x64, 0x16, 0x7e, 0x44, 0x0b, 0xd5, 0x70, 0x99, 0x87,
-  0x03, 0x16, 0xe3, 0x88, 0x18, 0xb1, 0xb5, 0x5f, 0x84, 0x87, 0x70, 0x50,
-  0x94, 0x1a, 0xa9, 0x21, 0x15, 0x38, 0x50, 0x08, 0x65, 0x40, 0xec, 0xad,
-  0x3b, 0x7e, 0x75, 0x7c, 0x71, 0x71, 0x7c, 0xc1, 0xeb, 0x7d, 0xb8, 0x68,
-  0x14, 0xfb, 0x71, 0xc8, 0x90, 0xde, 0xfd, 0x67, 0x91, 0xa9, 0x31, 0xa2,
-  0xb7, 0xb0, 0x42, 0x2d, 0x2e, 0x0f, 0x0d, 0x42, 0x60, 0x50, 0xa4, 0xa8,
-  0x6a, 0x68, 0x5e, 0x44, 0x64, 0xb2, 0x33, 0xe5, 0x87, 0x35, 0xb6, 0x02,
-  0xd9, 0xc2, 0xb7, 0x50, 0x6a, 0x11, 0xb9, 0x95, 0x65, 0x1c, 0xdf, 0x64,
-  0x0d, 0x31, 0x75, 0xa8, 0xc1, 0xa4, 0x99, 0x3a, 0xb8, 0x67, 0xce, 0x3e,
-  0x81, 0x29, 0x5f, 0xf1, 0x19, 0x65, 0xdd, 0x09, 0x8b, 0x51, 0xd5, 0xab,
-  0x65, 0x3e, 0x75, 0xd6, 0x5e, 0xfa, 0x9c, 0xc4, 0xbf, 0x44, 0x4e, 0x79,
-  0x65, 0xf1, 0x27, 0xf0, 0x34, 0x9a, 0x31, 0x22, 0xb4, 0xb6, 0xb5, 0xe0,
-  0x49, 0x13, 0x24, 0x24, 0x49, 0x20, 0x97, 0x15, 0x5b, 0x69, 0xa6, 0xce,
-  0x2a, 0xed, 0x67, 0xb0, 0x32, 0x32, 0xb7, 0xb0, 0x90, 0x98, 0x90, 0x33,
-  0xb0, 0x2d, 0x6b, 0xee, 0x43, 0xb2, 0x39, 0xac, 0xec, 0x40, 0x50, 0x1e,
-  0x90, 0x31, 0x57, 0x1e, 0x24, 0x3f, 0x56, 0xf9, 0xe4, 0x67, 0x7f, 0x79,
-  0x20, 0xc3, 0xc2, 0x47, 0x4d, 0x8b, 0x85, 0x9e, 0x26, 0xaf, 0x0b, 0xa5,
-  0xca, 0xb0, 0x64, 0xaa, 0xbe, 0x1d, 0x1d, 0x5f, 0x24, 0x87, 0x5f, 0x33,
-  0xc8, 0xe9, 0x7f, 0x71, 0x83, 0xf9, 0x39, 0xbd, 0x1d, 0x36, 0x34, 0xd4,
-  0x53, 0xa1, 0x1b, 0x32, 0x33, 0x85, 0x0b, 0xec, 0x50, 0x63, 0x67, 0x73,
-  0xab, 0x92, 0xea, 0xaf, 0xfb, 0xe6, 0x1e, 0x6e, 0x24, 0x1f, 0xdd, 0xc5,
-  0x4f, 0xd9, 0x43, 0x3e, 0x64, 0xe1, 0x2e, 0x0a, 0xe8, 0x8b, 0xb8, 0x24,
-  0x6c, 0x6f, 0x74, 0xf4, 0x55, 0xa4, 0x76, 0xca, 0x2e, 0x1d, 0x26, 0x9b,
-  0xaf, 0x8b, 0x7f, 0x90, 0x30, 0x90, 0xee, 0x3c, 0x1a, 0xee, 0x26, 0x5b,
-  0xdf, 0xe7, 0x8b, 0x67, 0x4f, 0xfe, 0x92, 0x9c, 0x6c, 0x6f, 0x36, 0xe2,
-  0xcd, 0xa5, 0x6c, 0xd6, 0x38, 0x5d, 0xdc, 0xba, 0x2d, 0x3b, 0xc3, 0xc9,
-  0x96, 0x40, 0x37, 0x2b, 0xe7, 0x20, 0xd5, 0x3d, 0xd7, 0xb6, 0x28, 0x38,
-  0xde, 0x12, 0xba, 0x9e, 0x7c, 0xe7, 0x10, 0x7d, 0x59, 0xcb, 0xa7, 0xa7,
-  0xa6, 0xbc, 0x74, 0xcf, 0x9e, 0x44, 0x4d, 0x3c, 0x76, 0x6d, 0xbc, 0x95,
-  0x36, 0x7e, 0x61, 0x13, 0xfb, 0xc3, 0xdd, 0xfd, 0x64, 0xeb, 0x6c, 0xb4,
-  0xb3, 0xef, 0x5a, 0x88, 0x9b, 0xd8, 0x47, 0x13, 0xfc, 0x50, 0xf3, 0xe5,
-  0xc7, 0xdc, 0xff, 0x8f, 0xd9, 0xe2, 0xe7, 0x64, 0xeb, 0x87, 0xbd, 0x3d,
-  0x6a, 0xe0, 0x2f, 0xc9, 0xe1, 0xc9, 0x0f, 0xc9, 0xe3, 0x21, 0x35, 0xf6,
-  0x26, 0x7d, 0xaf, 0xcd, 0x29, 0x56, 0xe7, 0x08, 0x8d, 0xd0, 0xf7, 0x51,
-  0x1b, 0x4f, 0x5a, 0x6d, 0x9c, 0x92, 0x5e, 0xf8, 0x81, 0xae, 0x95, 0xdd,
-  0xe1, 0xa3, 0xfd, 0x24, 0x7f, 0xf2, 0xf9, 0x53, 0x6b, 0x48, 0xdb, 0xc0,
-  0xf7, 0x4d, 0x6b, 0xa5, 0xa0, 0x41, 0x90, 0xa8, 0x73, 0xfc, 0x81, 0x18,
-  0x1a, 0x58, 0x04, 0x80, 0xfb, 0x6f, 0xd2, 0xd2, 0x4a, 0x4e, 0x32, 0x98,
-  0x3b, 0xed, 0x94, 0xa2, 0xe4, 0x66, 0x30, 0x5b, 0xd2, 0xc5, 0x79, 0x10,
-  0x0d, 0x87, 0x75, 0x53, 0x7b, 0xf4, 0x2f, 0xc9, 0xeb, 0xd1, 0xc9, 0x31,
-  0xcd, 0x68, 0x97, 0x86, 0xe6, 0xd7, 0x50, 0x06, 0x84, 0xaf, 0xb0, 0xb8,
-  0xcf, 0x00, 0xba, 0xa8, 0x6d, 0x84, 0xc5, 0x11, 0x41, 0x74, 0x74, 0x71,
-  0x57, 0xe8, 0x97, 0xc3, 0x44, 0x06, 0x87, 0xd7, 0xac, 0x42, 0xc8, 0x55,
-  0x8b, 0xae, 0xbf, 0x2d, 0x16, 0x74, 0x4c, 0xca, 0xa2, 0xe4, 0x68, 0xa6,
-  0xcd, 0x86, 0xb4, 0xf0, 0xed, 0xcb, 0x63, 0xc9, 0x18, 0x7e, 0x9d, 0x2e,
-  0x88, 0x47, 0x32, 0xf8, 0x4f, 0x75, 0xcb, 0x3e, 0x79, 0x71, 0xe7, 0xc8,
-  0xfb, 0xa7, 0xf7, 0x8b, 0x0f, 0xb4, 0x8f, 0x9f, 0x0d, 0xf7, 0x18, 0x78,
-  0x81, 0xb5, 0xde, 0x57, 0xaf, 0xe9, 0xef, 0xbd, 0xc7, 0x9b, 0x09, 0x7f,
-  0xd5, 0xd4, 0xe0, 0xed, 0xbc, 0x6e, 0x1c, 0x9d, 0x9d, 0x7d, 0x7b, 0x22,
-  0x41, 0x19, 0x47, 0x6a, 0x56, 0x65, 0xe1, 0xca, 0x69, 0xc5, 0xc2, 0x5d,
-  0x49, 0x7b, 0xf3, 0xf9, 0x2d, 0x70, 0xc6, 0xdd, 0x66, 0xd9, 0x92, 0x23,
-  0x04, 0xea, 0x16, 0x47, 0xa8, 0x95, 0x47, 0xbb, 0x78, 0x23, 0x16, 0x7f,
-  0x1a, 0xc0, 0x45, 0x15, 0x23, 0xc1, 0x9a, 0x09, 0x77, 0x7c, 0xef, 0x50,
-  0x09, 0x52, 0xe7, 0x32, 0x93, 0x21, 0xba, 0x80, 0x7a, 0x33, 0x41, 0x4b,
-  0x0d, 0x04, 0x7a, 0x51, 0x75, 0xdf, 0xcd, 0x11, 0x49, 0xf7, 0x32, 0xe8,
-  0x03, 0xb5, 0xda, 0x6e, 0x06, 0xd0, 0xb9, 0x90, 0x68, 0x97, 0x5a, 0x23,
+  0xcb, 0x9c, 0x84, 0x77, 0x4c, 0xac, 0xa3, 0x80, 0x24, 0x95, 0x64, 0x5d,
+  0x40, 0x2d, 0x21, 0xd5, 0x80, 0x49, 0x47, 0x64, 0x93, 0xbe, 0x4b, 0x7c,
+  0x54, 0xb1, 0x4b, 0xd0, 0x3d, 0x67, 0x99, 0x98, 0xd3, 0x72, 0x84, 0x69,
+  0x7b, 0xfc, 0x61, 0x8e, 0x86, 0x5a, 0x30, 0x68, 0x7a, 0x6d, 0xf0, 0x37,
+  0x56, 0x00, 0xaf, 0x3a, 0xf0, 0xf8, 0x92, 0xef, 0xc5, 0x78, 0xaa, 0x07,
+  0xc2, 0x17, 0xaa, 0xb6, 0x82, 0xd4, 0x7a, 0x35, 0x41, 0xb6, 0x55, 0xa0,
+  0xc0, 0x59, 0x21, 0x37, 0x19, 0x83, 0xed, 0xe0, 0x5c, 0xe3, 0x6e, 0xcd,
+  0x6b, 0x5c, 0xab, 0x22, 0xe4, 0x6b, 0x79, 0xe8, 0x4a, 0x08, 0x8e, 0x58,
+  0x8e, 0xe4, 0xe6, 0xce, 0x94, 0x45, 0x83, 0x23, 0x55, 0x99, 0x80, 0x54,
+  0xc9, 0x4d, 0xaa, 0x2e, 0x47, 0x89, 0x86, 0xd4, 0x5a, 0x0e, 0x5b, 0xaa,
+  0x98, 0xde, 0x61, 0x9e, 0x5a, 0x5c, 0x50, 0xaa, 0x28, 0x5b, 0x89, 0x31,
+  0xac, 0x7c, 0x10, 0xb4, 0xa0, 0xa4, 0xf3, 0x7e, 0x3d, 0x3b, 0xb8, 0x94,
+  0x99, 0xb2, 0xed, 0x41, 0x2e, 0xe7, 0x10, 0x0b, 0x36, 0xc4, 0x0f, 0x62,
+  0x57, 0xbf, 0x13, 0x1a, 0xe4, 0x3c, 0x71, 0xcc, 0x75, 0xa0, 0xd6, 0xad,
+  0x2f, 0xbb, 0x6c, 0x12, 0xa6, 0xfa, 0x40, 0x7c, 0xba, 0x85, 0x30, 0x3c,
+  0x0d, 0x54, 0xe2, 0x2d, 0x85, 0xd5, 0x5a, 0x88, 0x2f, 0x3e, 0x83, 0xd2,
+  0xba, 0x54, 0x5c, 0xae, 0x3f, 0xd4, 0xa1, 0x6d, 0x7f, 0x63, 0x63, 0xe3,
+  0xe5, 0xf1, 0xe5, 0xe1, 0xc9, 0xe9, 0xf1, 0xcb, 0xe4, 0xe4, 0xcd, 0xab,
+  0xb3, 0x8b, 0xd7, 0x87, 0x97, 0xea, 0xf0, 0x7e, 0xe9, 0x8c, 0x63, 0x2e,
+  0xeb, 0xd6, 0xd9, 0x1e, 0xbd, 0xe1, 0x0c, 0x24, 0x4c, 0xbb, 0x78, 0xad,
+  0x98, 0xdf, 0xb2, 0x0c, 0x59, 0x63, 0x0d, 0x36, 0x12, 0x75, 0x94, 0x7b,
+  0x3c, 0x1f, 0xbe, 0xab, 0x77, 0x9c, 0x7b, 0x73, 0x68, 0xcb, 0xe9, 0xe0,
+  0x21, 0xb9, 0x02, 0xdc, 0x83, 0x4d, 0xb9, 0xa2, 0xf7, 0x72, 0x4f, 0xf1,
+  0x76, 0x4a, 0x7a, 0x34, 0x68, 0x72, 0x70, 0xb2, 0xd3, 0x84, 0x3b, 0x85,
+  0xf1, 0xc3, 0xe0, 0x9d, 0x52, 0x00, 0x46, 0x84, 0xb0, 0x04, 0x44, 0x81,
+  0x6c, 0xea, 0x0b, 0xdb, 0x74, 0x09, 0xf7, 0x06, 0xd8, 0x23, 0xe1, 0x15,
+  0x82, 0xae, 0x13, 0xec, 0xaf, 0x82, 0x6c, 0x11, 0x35, 0x0b, 0x1d, 0x00,
+  0xb9, 0xb1, 0xe2, 0x52, 0xeb, 0x76, 0xd6, 0x81, 0x26, 0xe9, 0x98, 0xa8,
+  0x39, 0x90, 0xb4, 0x60, 0x59, 0xd8, 0xd4, 0x96, 0x73, 0x89, 0x92, 0x14,
+  0x33, 0x38, 0xd1, 0x52, 0x76, 0xbc, 0x16, 0x0c, 0x16, 0xcd, 0xff, 0x2e,
+  0x3c, 0x98, 0x9b, 0x06, 0xd8, 0x79, 0x2d, 0x3c, 0xdf, 0x71, 0xd5, 0xc5,
+  0xf5, 0xb4, 0xf9, 0x73, 0x6b, 0xa8, 0x16, 0x83, 0x97, 0xf4, 0xd0, 0x74,
+  0x35, 0x5f, 0x6a, 0x2d, 0x54, 0x93, 0x72, 0x61, 0x5f, 0xb3, 0x2d, 0x14,
+  0x41, 0x0a, 0x02, 0x01, 0x8c, 0x31, 0xaf, 0x74, 0x0d, 0x64, 0x1e, 0xa0,
+  0xef, 0xda, 0xbc, 0x55, 0xac, 0xb7, 0x7a, 0x07, 0x53, 0xbb, 0x10, 0x7a,
+  0x53, 0x9a, 0xc0, 0x82, 0x8c, 0xdc, 0xb3, 0xed, 0xca, 0xe9, 0xa9, 0x8f,
+  0x01, 0xc1, 0xfa, 0x6f, 0x59, 0xb1, 0x06, 0x26, 0x59, 0x6d, 0x50, 0xd5,
+  0xa4, 0xd8, 0x3f, 0xd6, 0x98, 0x54, 0xf8, 0x62, 0x33, 0x6a, 0x22, 0xe4,
+  0xf4, 0xd6, 0xb5, 0x07, 0xf1, 0x6c, 0x8f, 0x40, 0xb9, 0x38, 0xf1, 0x93,
+  0x7b, 0xab, 0x40, 0xcb, 0x98, 0xf3, 0x82, 0xd1, 0xb7, 0xa1, 0xa9, 0xbd,
+  0x21, 0x94, 0xaf, 0x91, 0xef, 0x0a, 0x85, 0x57, 0x8b, 0x5b, 0xd6, 0xaf,
+  0x91, 0xfb, 0x36, 0xbe, 0x0f, 0xb3, 0x94, 0x24, 0xba, 0x47, 0xcb, 0x9d,
+  0x80, 0xe9, 0x2d, 0x36, 0x0c, 0x60, 0xd4, 0x5e, 0xb2, 0x10, 0x2f, 0x70,
+  0x7f, 0xc1, 0xde, 0x06, 0x93, 0x67, 0x45, 0x37, 0x4b, 0x2b, 0x28, 0x39,
+  0xc8, 0x55, 0x90, 0x3b, 0xc3, 0x99, 0x46, 0x3d, 0xba, 0x3c, 0x2e, 0x9f,
+  0x00, 0x0b, 0x43, 0x30, 0x0b, 0x53, 0x86, 0x1b, 0xb0, 0x43, 0x21, 0x71,
+  0xc9, 0xae, 0x15, 0xdc, 0x75, 0xac, 0xc4, 0x96, 0x33, 0x04, 0x97, 0x6a,
+  0xb4, 0xdd, 0x79, 0x51, 0xc9, 0x79, 0x83, 0xd4, 0xdd, 0x93, 0x22, 0xe0,
+  0x4c, 0x06, 0xbd, 0xe5, 0x0d, 0xf5, 0xd1, 0x4b, 0xae, 0x59, 0x6f, 0x19,
+  0xd3, 0xd0, 0x23, 0x06, 0x3a, 0x95, 0xc7, 0x5f, 0x5c, 0xa4, 0x57, 0x69,
+  0x36, 0xfb, 0xd3, 0xfe, 0xee, 0x28, 0xbd, 0x5e, 0xcd, 0xd2, 0x7f, 0xc1,
+  0x8b, 0x2f, 0x1e, 0x3d, 0xda, 0xdf, 0xfd, 0xec, 0xf3, 0xdd, 0x5e, 0xcb,
+  0x71, 0x1d, 0xc4, 0xbc, 0x20, 0x88, 0x81, 0x6f, 0x32, 0xf0, 0x5d, 0xf4,
+  0x33, 0x9c, 0x5c, 0xe7, 0x50, 0xb4, 0x58, 0x78, 0xd1, 0x35, 0x48, 0x45,
+  0xc3, 0x03, 0x9b, 0x14, 0x20, 0x35, 0x46, 0x04, 0x25, 0xba, 0xfe, 0xe3,
+  0xde, 0x81, 0xb0, 0xb2, 0x6b, 0x18, 0xc4, 0x53, 0xa1, 0xd8, 0xe4, 0x79,
+  0xbe, 0xa0, 0x1b, 0xe8, 0x8b, 0xa4, 0x4e, 0xaf, 0x1d, 0xad, 0xa2, 0x05,
+  0xec, 0x46, 0x88, 0xcc, 0x7c, 0xc5, 0x44, 0x9e, 0x2f, 0xa4, 0x30, 0x04,
+  0x17, 0x3d, 0x80, 0xe0, 0xb3, 0xcc, 0x4a, 0x60, 0xa2, 0x5d, 0x97, 0xe9,
+  0xdc, 0x62, 0xf9, 0xf9, 0x7d, 0x0e, 0x0c, 0x1a, 0x2e, 0x67, 0x08, 0x33,
+  0xb7, 0xe8, 0x1e, 0x91, 0x42, 0x85, 0xe0, 0x66, 0xcb, 0xca, 0xc3, 0x8a,
+  0xc9, 0x75, 0x13, 0x96, 0x53, 0xa0, 0xc5, 0x82, 0x9d, 0xa3, 0x87, 0x59,
+  0xf5, 0x1d, 0x3a, 0xd1, 0x60, 0x6a, 0x33, 0x1d, 0xe2, 0x77, 0xe4, 0xc7,
+  0xa7, 0x82, 0x21, 0xd7, 0x5b, 0x4a, 0xe6, 0xa9, 0x2b, 0xf7, 0x2e, 0x06,
+  0xb1, 0xbc, 0x31, 0xaf, 0xd4, 0xc7, 0xb4, 0x25, 0xcf, 0xcd, 0x72, 0xb3,
+  0xf7, 0xc5, 0x0b, 0x10, 0xc4, 0xde, 0x17, 0xff, 0xe2, 0x3e, 0xdb, 0xd7,
+  0xcf, 0xf6, 0xbf, 0xf8, 0x97, 0xe1, 0x10, 0xe3, 0x63, 0x0a, 0xd9, 0xb4,
+  0xaf, 0x37, 0x15, 0x8d, 0x22, 0xd5, 0x23, 0x2c, 0x7f, 0x39, 0xe0, 0x55,
+  0xd9, 0xeb, 0x9e, 0xf5, 0x1c, 0xae, 0x72, 0x5f, 0x9d, 0x7e, 0x8e, 0x6f,
+  0xe5, 0x55, 0x88, 0xa8, 0x5b, 0x75, 0x2d, 0xba, 0xf3, 0x4d, 0xa0, 0x1d,
+  0x0d, 0x6f, 0xc3, 0xcb, 0xff, 0xca, 0x94, 0xfa, 0xaf, 0x1b, 0x89, 0xfa,
+  0xe6, 0x78, 0x3b, 0xee, 0xe1, 0x84, 0x30, 0xb2, 0xa5, 0x47, 0x53, 0xab,
+  0xde, 0xc0, 0x2d, 0x73, 0x80, 0x3c, 0xdf, 0x81, 0x41, 0xc5, 0xf3, 0x3f,
+  0x6b, 0xde, 0xbf, 0x6c, 0xf8, 0x46, 0xe2, 0x9e, 0x91, 0x44, 0x02, 0x92,
+  0x31, 0x6a, 0xa9, 0x1f, 0xc2, 0xd5, 0x04, 0x7e, 0xf8, 0x41, 0x05, 0x2a,
+  0xfa, 0x45, 0x47, 0x7e, 0x43, 0xbc, 0x68, 0x4a, 0xec, 0x6d, 0x8e, 0x6a,
+  0xcb, 0x5a, 0xa6, 0x5e, 0xaf, 0xfc, 0x2b, 0x9d, 0xa9, 0x34, 0x42, 0x5b,
+  0x7b, 0x38, 0x3a, 0x3a, 0x39, 0x41, 0x24, 0x1f, 0x16, 0xf5, 0x58, 0xd8,
+  0x18, 0x68, 0x73, 0x0b, 0x51, 0x08, 0x3e, 0xf0, 0x2b, 0x24, 0x7d, 0xde,
+  0x3b, 0x6c, 0x3b, 0xa8, 0x9f, 0x1a, 0x33, 0xa5, 0x58, 0xb7, 0x12, 0x34,
+  0x2b, 0x52, 0xce, 0x8b, 0x9e, 0x3c, 0x78, 0x9d, 0xf7, 0xd4, 0xb7, 0x24,
+  0x9f, 0xf4, 0x3c, 0xbc, 0x88, 0xec, 0x07, 0x36, 0xed, 0x85, 0x88, 0x4e,
+  0xf9, 0x3f, 0xb2, 0x17, 0x7b, 0xbb, 0xdd, 0x4f, 0xa0, 0xac, 0x02, 0xa3,
+  0x19, 0xbf, 0xf0, 0xbe, 0xb9, 0x87, 0x9e, 0xcf, 0xa7, 0xf2, 0xf4, 0x4d,
+  0x3e, 0x9d, 0xd2, 0x9d, 0xf0, 0x3e, 0x9d, 0xad, 0x88, 0x16, 0xc6, 0x7c,
+  0xc3, 0xf2, 0xff, 0xaf, 0x19, 0x07, 0xbc, 0x48, 0xfa, 0x6c, 0xb5, 0x1a,
+  0xcf, 0xf3, 0xc6, 0x80, 0x77, 0x78, 0x82, 0x5f, 0xf0, 0x84, 0xbf, 0xcf,
+  0x1c, 0x75, 0x64, 0x2c, 0xda, 0x89, 0xec, 0xb7, 0x79, 0x55, 0x14, 0xe3,
+  0xb4, 0xdc, 0x54, 0x17, 0x8b, 0x8d, 0x73, 0x73, 0x6f, 0xff, 0xd1, 0xe3,
+  0x27, 0x9b, 0x43, 0x95, 0xd3, 0xc0, 0x22, 0xea, 0x30, 0x8b, 0x5f, 0x9a,
+  0x48, 0xe5, 0x80, 0x5a, 0x30, 0x2a, 0xd2, 0x86, 0xbb, 0xfc, 0x9c, 0xcc,
+  0xc5, 0xb8, 0xbb, 0x17, 0xd2, 0xdb, 0xbf, 0x70, 0x3f, 0x2f, 0xd0, 0xc5,
+  0xbf, 0xe4, 0xd3, 0x17, 0x6e, 0x86, 0xff, 0xc2, 0x73, 0x79, 0xa1, 0x93,
+  0xa0, 0x7d, 0xb5, 0x34, 0xad, 0x2a, 0xac, 0xf4, 0xf0, 0xb1, 0xcd, 0xb5,
+  0x4d, 0xdc, 0xc0, 0xa4, 0xe1, 0x64, 0x1f, 0x4c, 0xc5, 0x23, 0x01, 0x69,
+  0xd5, 0xe7, 0x28, 0xed, 0x7c, 0x18, 0x50, 0x2b, 0x03, 0x6e, 0x65, 0xe0,
+  0x19, 0x36, 0x40, 0xa8, 0x07, 0xbc, 0x11, 0x7d, 0x4d, 0x54, 0x9b, 0xc1,
+  0xf2, 0xa1, 0xa2, 0x40, 0x51, 0xc0, 0x85, 0x7d, 0xf4, 0xf5, 0xc9, 0xa6,
+  0xc6, 0x86, 0x88, 0xea, 0xd6, 0xef, 0xb2, 0x19, 0xbb, 0x28, 0xae, 0x49,
+  0xba, 0xe4, 0xd3, 0xbf, 0x61, 0x55, 0xc9, 0x52, 0x0e, 0x75, 0xe0, 0x7e,
+  0x25, 0xab, 0x94, 0x3a, 0xd3, 0x5b, 0x67, 0xc6, 0x56, 0xe8, 0x52, 0xe0,
+  0xb1, 0x83, 0x66, 0x00, 0x17, 0x2b, 0x31, 0x0f, 0xf0, 0xc3, 0x2c, 0x5d,
+  0x42, 0xda, 0xe0, 0x95, 0x73, 0x44, 0xba, 0x04, 0x28, 0x7d, 0x94, 0xbe,
+  0x12, 0x7e, 0x62, 0x2c, 0xa2, 0xe7, 0x10, 0xdb, 0x84, 0x12, 0x42, 0xee,
+  0x01, 0x37, 0xea, 0x38, 0xd3, 0x34, 0x36, 0x31, 0x65, 0x88, 0x60, 0xc8,
+  0xfc, 0xf3, 0xf9, 0x97, 0x86, 0x30, 0xfb, 0x45, 0x82, 0xe2, 0x82, 0xf2,
+  0x96, 0xfa, 0x02, 0xd5, 0x28, 0x24, 0x76, 0x54, 0xbc, 0xa4, 0xea, 0x81,
+  0x73, 0x4b, 0x05, 0x01, 0x23, 0x2a, 0x18, 0x84, 0x38, 0xe0, 0xe3, 0x7b,
+  0x35, 0x00, 0x70, 0x0b, 0x9b, 0x7f, 0xc1, 0x21, 0x78, 0xce, 0xdb, 0x80,
+  0xaf, 0xbf, 0xd8, 0xdc, 0x70, 0x55, 0xde, 0x9d, 0xe4, 0xde, 0x72, 0xea,
+  0x0a, 0x81, 0x86, 0xf3, 0x29, 0xae, 0x1c, 0x9c, 0xaa, 0x48, 0x63, 0x0c,
+  0x60, 0x80, 0x0a, 0xbc, 0x24, 0x4d, 0xcd, 0x38, 0x1d, 0xb4, 0x61, 0x34,
+  0x96, 0xc6, 0x33, 0x46, 0x87, 0x60, 0xe9, 0x71, 0x93, 0x03, 0x02, 0xf1,
+  0xde, 0xa6, 0x43, 0x67, 0x85, 0x1d, 0x13, 0x0c, 0xaf, 0xcc, 0x0c, 0xa3,
+  0x6f, 0x43, 0x13, 0x97, 0xbd, 0x34, 0x1f, 0x4e, 0xac, 0x0a, 0x84, 0x07,
+  0x9f, 0x06, 0x26, 0x68, 0x1f, 0xd1, 0x11, 0x79, 0xc5, 0x39, 0x96, 0xda,
+  0xe9, 0x0b, 0x5e, 0xee, 0xbd, 0xe1, 0x75, 0x7e, 0x25, 0x8b, 0x41, 0x2c,
+  0xf2, 0x3a, 0xdb, 0xa1, 0x3f, 0xfb, 0xf4, 0xf9, 0x3e, 0x4b, 0x65, 0xfc,
+  0xcb, 0x23, 0x84, 0x0c, 0x85, 0x77, 0x7f, 0x70, 0x36, 0xdc, 0xb9, 0xe0,
+  0x5f, 0x72, 0x77, 0xe7, 0xab, 0xa7, 0x45, 0x47, 0x39, 0x30, 0x18, 0xf6,
+  0x46, 0x3d, 0xa5, 0x10, 0x97, 0x0f, 0xc8, 0xdb, 0x05, 0xe4, 0x93, 0xca,
+  0x07, 0xdd, 0x6a, 0x4c, 0x83, 0x0a, 0xea, 0x2c, 0x77, 0xe7, 0x6a, 0x32,
+  0xe1, 0x2c, 0x09, 0xdc, 0xac, 0xd9, 0xdd, 0x76, 0x3f, 0x0c, 0x66, 0x24,
+  0xf6, 0xfe, 0x9e, 0xf3, 0x8e, 0x19, 0xcb, 0xc0, 0x67, 0xac, 0x71, 0xf7,
+  0xa8, 0x01, 0xbf, 0x81, 0x54, 0x4c, 0xcb, 0xc4, 0xc4, 0x36, 0xe7, 0xed,
+  0x1d, 0x0c, 0xea, 0x31, 0x9a, 0xb4, 0xc9, 0x5e, 0xad, 0x6d, 0xee, 0x26,
+  0x9b, 0x55, 0xd0, 0xd5, 0x15, 0xca, 0xce, 0x7a, 0x35, 0x1c, 0x5f, 0x74,
+  0xb4, 0x19, 0x9e, 0xfd, 0x62, 0x52, 0x67, 0xa4, 0xeb, 0x32, 0xf4, 0xd0,
+  0x5c, 0xf8, 0xdc, 0xf1, 0x5c, 0xea, 0xd2, 0x81, 0x84, 0x67, 0x03, 0xb9,
+  0x3d, 0x55, 0x24, 0x1a, 0xbc, 0x1a, 0x26, 0xa7, 0x08, 0xca, 0xad, 0x52,
+  0x41, 0xb0, 0xb0, 0x1b, 0xd6, 0xa8, 0x81, 0x48, 0xa7, 0x32, 0x14, 0x2e,
+  0x7e, 0x8f, 0x41, 0x03, 0x8c, 0xa4, 0x72, 0x83, 0x68, 0x16, 0xe2, 0x12,
+  0xf9, 0x42, 0xe5, 0x91, 0x3e, 0xec, 0xd3, 0xee, 0x39, 0xd8, 0xe1, 0xc5,
+  0x16, 0x87, 0xf4, 0x18, 0x47, 0xb0, 0x41, 0x23, 0x12, 0x57, 0xa4, 0x02,
+  0x68, 0xc0, 0xd6, 0xdd, 0x21, 0x90, 0xa8, 0xbf, 0x4c, 0x8c, 0x2e, 0x9c,
+  0xbd, 0xce, 0x30, 0x1a, 0xf0, 0xd3, 0x52, 0x6b, 0xa0, 0x32, 0x20, 0xfa,
+  0x12, 0x19, 0xf5, 0xa0, 0x37, 0xce, 0x32, 0xa7, 0x5c, 0xcb, 0x5e, 0x15,
+  0x2e, 0xa2, 0x17, 0xb6, 0x18, 0xad, 0x22, 0xe0, 0x5c, 0x68, 0x3c, 0x48,
+  0x1e, 0x57, 0xfa, 0x9e, 0x7e, 0x61, 0xe1, 0x6c, 0x5c, 0xd2, 0xae, 0x67,
+  0xa5, 0x5c, 0x0d, 0xe8, 0x15, 0x45, 0xca, 0xd2, 0xa9, 0xaa, 0x29, 0xaf,
+  0x4f, 0x13, 0x43, 0x02, 0xb9, 0xf2, 0xa2, 0xa2, 0x05, 0x0f, 0x62, 0x8a,
+  0x6a, 0x19, 0x11, 0x79, 0x48, 0x9f, 0x92, 0x5b, 0x4e, 0xd6, 0x96, 0x73,
+  0x89, 0x13, 0x5e, 0x9c, 0xc6, 0x91, 0x0d, 0x9e, 0x90, 0x57, 0x37, 0x04,
+  0xb5, 0x68, 0x93, 0x97, 0x60, 0xb3, 0x9f, 0x6c, 0xf2, 0x50, 0xf9, 0x8b,
+  0x4d, 0xac, 0x27, 0x3e, 0x0e, 0x96, 0x6f, 0x73, 0xd8, 0x71, 0x0a, 0xf9,
+  0x99, 0x17, 0x5f, 0x36, 0x56, 0x09, 0x9f, 0x5b, 0x53, 0x2f, 0x24, 0x8e,
+  0x3f, 0x92, 0xb9, 0xed, 0xdd, 0xa0, 0xfd, 0x17, 0x47, 0xd4, 0x0a, 0xe0,
+  0x93, 0x83, 0x48, 0xcc, 0x89, 0xfb, 0x2c, 0x47, 0x4e, 0x61, 0xd4, 0xd0,
+  0xc7, 0x4f, 0xf1, 0xa5, 0xb1, 0x22, 0x17, 0xa5, 0x28, 0xdc, 0x4d, 0x48,
+  0xc0, 0x38, 0x2f, 0xed, 0x66, 0x2e, 0x7a, 0xdf, 0x5d, 0x01, 0x2b, 0x03,
+  0x78, 0xce, 0xde, 0x10, 0x39, 0x66, 0xbe, 0x3c, 0xa6, 0x6b, 0xc0, 0x29,
+  0xef, 0x3d, 0x2c, 0x68, 0xcf, 0x05, 0x8e, 0x9a, 0x4a, 0x6f, 0xab, 0xdc,
+  0xc5, 0xbb, 0x96, 0xf9, 0x04, 0x20, 0xc1, 0x2f, 0xbe, 0x9c, 0x16, 0xd7,
+  0xcc, 0xb9, 0xfa, 0x74, 0xd0, 0xf8, 0xdf, 0x1e, 0x3f, 0xbc, 0xaf, 0x9d,
+  0xca, 0x80, 0x71, 0x56, 0x44, 0x8a, 0xb7, 0xbf, 0xd7, 0x44, 0x51, 0x52,
+  0xc3, 0xd3, 0x62, 0xa2, 0x6d, 0xbb, 0xa6, 0x65, 0x3f, 0xa8, 0x7d, 0xf7,
+  0x45, 0xd8, 0x97, 0x2d, 0x4e, 0xaa, 0x2d, 0x43, 0x36, 0x22, 0x4e, 0x51,
+  0xcb, 0x55, 0x8e, 0x8e, 0x59, 0x95, 0x81, 0x81, 0x8b, 0xcb, 0x5c, 0xca,
+  0xbd, 0x35, 0xd3, 0xc4, 0xa7, 0xcd, 0x2f, 0x37, 0x25, 0x0c, 0x7b, 0xf3,
+  0xf9, 0x26, 0x38, 0x18, 0xf3, 0x25, 0xab, 0x28, 0xa5, 0x97, 0xd3, 0xa6,
+  0xdc, 0x8a, 0x03, 0x91, 0x1d, 0x14, 0x0f, 0xad, 0x11, 0x24, 0xc7, 0x0c,
+  0xc3, 0xd4, 0xc8, 0x30, 0xbe, 0x0f, 0x66, 0x02, 0x14, 0x9b, 0xc6, 0xa8,
+  0x18, 0xe0, 0x71, 0x5c, 0x4b, 0xf0, 0x8a, 0x5e, 0xba, 0x10, 0xcb, 0x80,
+  0x27, 0x51, 0x71, 0x4c, 0x81, 0x98, 0x39, 0x57, 0x8b, 0x25, 0x67, 0x0f,
+  0x4f, 0x6a, 0xa9, 0x0e, 0x87, 0xb3, 0x34, 0x4c, 0xde, 0x2e, 0x04, 0xc5,
+  0x3c, 0x63, 0x65, 0x39, 0x2f, 0x27, 0xab, 0x39, 0x9b, 0x2a, 0x26, 0x6c,
+  0x20, 0xb3, 0xf0, 0x23, 0x5a, 0xa8, 0x86, 0xcb, 0x3c, 0x1c, 0xb0, 0x18,
+  0x47, 0xc4, 0x88, 0xad, 0xfd, 0x22, 0x3c, 0x84, 0x83, 0xa2, 0xd4, 0x48,
+  0x0d, 0xa9, 0xc0, 0xe1, 0x4a, 0x28, 0x03, 0x62, 0x6f, 0xdd, 0xf1, 0xab,
+  0xe3, 0x8b, 0x8b, 0xe3, 0x0b, 0x5e, 0xef, 0xc3, 0x45, 0xa3, 0x16, 0x93,
+  0x83, 0x96, 0xf4, 0xee, 0x3f, 0x8b, 0x4c, 0x8d, 0x41, 0xc1, 0x85, 0x15,
+  0xa6, 0xd3, 0x29, 0x83, 0x30, 0x43, 0x83, 0x10, 0x24, 0x15, 0xa9, 0x79,
+  0x1b, 0x9a, 0x17, 0x11, 0x99, 0xec, 0x4c, 0xf9, 0x61, 0x09, 0xb4, 0x40,
+  0xb6, 0xf0, 0x2d, 0x94, 0x5a, 0xe3, 0x6f, 0x65, 0x39, 0xcb, 0x37, 0x59,
+  0x43, 0x4c, 0x1d, 0x6a, 0x30, 0x69, 0xa6, 0x0e, 0xee, 0x99, 0xb3, 0x4f,
+  0x60, 0xca, 0x57, 0x7c, 0x46, 0x59, 0x77, 0xc2, 0x62, 0x54, 0xf5, 0x6a,
+  0x99, 0x4f, 0x9d, 0xb5, 0x97, 0x3e, 0x27, 0xf1, 0x2f, 0x91, 0x53, 0x5e,
+  0x59, 0xfc, 0x09, 0x3c, 0x8d, 0x66, 0x8c, 0x08, 0xad, 0x6d, 0x2d, 0x84,
+  0xd3, 0x04, 0x09, 0x49, 0x12, 0xc8, 0x65, 0xf5, 0x5a, 0x9a, 0xd9, 0xb7,
+  0x4a, 0xfb, 0x19, 0xac, 0x8c, 0xcc, 0x2d, 0x2c, 0x24, 0x26, 0xe4, 0x0c,
+  0x6c, 0xcb, 0x9a, 0xfb, 0x90, 0x6c, 0x0e, 0x2b, 0x3b, 0x10, 0x9c, 0x08,
+  0x24, 0xdd, 0x95, 0x07, 0xc9, 0x8f, 0x55, 0x3e, 0xf9, 0xd9, 0x5f, 0x1e,
+  0xc8, 0xb0, 0xf0, 0x51, 0xd3, 0x62, 0xa1, 0xa7, 0xc9, 0xeb, 0x42, 0xa9,
+  0x32, 0x2c, 0xc9, 0xae, 0x6f, 0x47, 0xc7, 0x17, 0xc9, 0xe1, 0xd7, 0x8c,
+  0x93, 0xfa, 0x5f, 0xdc, 0x60, 0x7e, 0x4e, 0x6f, 0x87, 0x0d, 0x0d, 0xf5,
+  0x54, 0xf4, 0x87, 0xcc, 0x4c, 0xe1, 0x82, 0x5c, 0xd4, 0xd8, 0xd9, 0xdc,
+  0x8a, 0xd8, 0x06, 0x69, 0xfa, 0x8d, 0x3d, 0xdc, 0x48, 0x3e, 0xba, 0x8b,
+  0x9f, 0xb2, 0x87, 0x7c, 0xc8, 0xc2, 0x5d, 0x14, 0xdc, 0x18, 0x71, 0x49,
+  0xd8, 0xde, 0xe8, 0xe8, 0xab, 0x48, 0xed, 0x94, 0x5d, 0x3a, 0x4c, 0x36,
+  0x5f, 0x17, 0xff, 0x20, 0x61, 0x20, 0xdd, 0x79, 0x34, 0xdc, 0x4d, 0xb6,
+  0xbe, 0xcf, 0x17, 0xcf, 0x9e, 0xfc, 0x25, 0x39, 0xd9, 0xde, 0x6c, 0xc4,
+  0x9b, 0x4b, 0x55, 0xb3, 0x71, 0xba, 0xb8, 0x75, 0x5b, 0x76, 0x86, 0x93,
+  0x2d, 0x81, 0x6e, 0x56, 0x12, 0x42, 0x8a, 0xaf, 0xae, 0x6d, 0x51, 0xa0,
+  0xc0, 0x25, 0x74, 0x3d, 0xf9, 0xce, 0xe1, 0x02, 0xb3, 0x96, 0x4f, 0x4f,
+  0x4d, 0x79, 0xe9, 0x9e, 0x3d, 0x89, 0x9a, 0x78, 0xec, 0xda, 0x78, 0x2b,
+  0x6d, 0xfc, 0xc2, 0x26, 0xf6, 0x87, 0xbb, 0xfb, 0xc9, 0xd6, 0xd9, 0x68,
+  0x67, 0xdf, 0xb5, 0x10, 0x37, 0xb1, 0x8f, 0x26, 0xf8, 0xa1, 0xe6, 0xcb,
+  0x8f, 0xb9, 0xff, 0x1f, 0xb3, 0xc5, 0xcf, 0xc9, 0xd6, 0x0f, 0x7b, 0x7b,
+  0xd4, 0xc0, 0x5f, 0x92, 0xc3, 0x93, 0x1f, 0x92, 0xc7, 0x43, 0x6a, 0xec,
+  0x4d, 0xfa, 0x5e, 0x9b, 0x53, 0xb8, 0xcf, 0x11, 0x1a, 0xa1, 0xef, 0xa3,
+  0x36, 0x9e, 0xb4, 0xda, 0x38, 0x25, 0xbd, 0xf0, 0x03, 0x5d, 0x2b, 0xbb,
+  0xc3, 0x47, 0xfb, 0x49, 0xfe, 0xe4, 0xf3, 0xa7, 0xd6, 0x90, 0xb6, 0x81,
+  0xef, 0x9b, 0xd6, 0x4a, 0x01, 0x94, 0x20, 0x51, 0xe7, 0xf8, 0x03, 0x31,
+  0x34, 0xb0, 0x08, 0x60, 0xff, 0xdf, 0xa4, 0xa5, 0x55, 0x04, 0x65, 0x38,
+  0x78, 0xda, 0x29, 0x05, 0xda, 0xcd, 0x60, 0xb6, 0xa4, 0x8b, 0xf3, 0x20,
+  0x1a, 0x0e, 0xeb, 0xa6, 0xf6, 0xe8, 0x5f, 0x92, 0xd7, 0xa3, 0x93, 0x63,
+  0x9a, 0xd1, 0x2e, 0x0d, 0xcd, 0xaf, 0xa1, 0x0c, 0x08, 0x5f, 0x61, 0x71,
+  0x9f, 0x01, 0xb7, 0x51, 0xdb, 0x08, 0x6b, 0x57, 0x82, 0xe8, 0xe8, 0xe2,
+  0xae, 0xd0, 0x2f, 0x87, 0x89, 0x0c, 0x0e, 0xaf, 0x59, 0x85, 0x90, 0xab,
+  0x16, 0x5d, 0x7f, 0x5b, 0x2c, 0xe8, 0x98, 0x94, 0x45, 0xc9, 0xd1, 0x4c,
+  0x9b, 0x0d, 0x69, 0xe1, 0xdb, 0x97, 0xc7, 0x92, 0x74, 0xfc, 0x3a, 0x5d,
+  0x10, 0x8f, 0x64, 0xf0, 0xa0, 0xea, 0x96, 0x7d, 0xf2, 0xe2, 0xce, 0x91,
+  0xf7, 0x4f, 0xef, 0x17, 0x1f, 0x68, 0x1f, 0x3f, 0x1b, 0xee, 0x31, 0x74,
+  0x03, 0x6b, 0xbd, 0xaf, 0x5e, 0xd3, 0xdf, 0x7b, 0x8f, 0x37, 0x13, 0xfe,
+  0xaa, 0xa9, 0xc1, 0xdb, 0x79, 0xdd, 0x38, 0x3a, 0x3b, 0xfb, 0xf6, 0x44,
+  0x82, 0x32, 0x8e, 0xd4, 0xac, 0xca, 0xc2, 0x95, 0xd3, 0x8a, 0x85, 0xbb,
+  0x92, 0xf6, 0xe6, 0xf3, 0x5b, 0xe0, 0x8c, 0xbb, 0xcd, 0xb2, 0x25, 0x47,
+  0x08, 0xd4, 0x2d, 0x8e, 0x50, 0x2b, 0x8f, 0x76, 0xf1, 0x46, 0x2c, 0xfe,
+  0x34, 0x80, 0x8f, 0x2a, 0x06, 0x93, 0x35, 0x13, 0xee, 0xf8, 0xde, 0x01,
+  0x1b, 0xa4, 0xce, 0x65, 0x66, 0x95, 0x20, 0xb4, 0x29, 0x33, 0x41, 0x4b,
+  0x19, 0x05, 0x7a, 0x51, 0x75, 0xdf, 0xcd, 0x11, 0x49, 0xf7, 0x32, 0xe8,
+  0x03, 0xb5, 0xda, 0x6e, 0x06, 0xf0, 0xbb, 0x90, 0x68, 0x97, 0x5a, 0x66,
   0x04, 0xa6, 0xe3, 0x7b, 0x92, 0x25, 0x30, 0x27, 0xe5, 0xcd, 0x15, 0x6c,
   0xd9, 0x08, 0x99, 0x7b, 0x73, 0xf8, 0xfa, 0xf8, 0xc5, 0x77, 0x87, 0xa7,
-  0x6f, 0x8f, 0xe9, 0x95, 0x1c, 0x28, 0xd5, 0x2e, 0xac, 0x0e, 0x63, 0x9c,
-  0xe7, 0x28, 0xcc, 0x58, 0x91, 0x78, 0xb0, 0xb9, 0x21, 0x91, 0xde, 0x49,
+  0x6f, 0x8f, 0xe9, 0x95, 0x1c, 0x40, 0xd7, 0x2e, 0xac, 0x0e, 0x63, 0x9c,
+  0xe7, 0xa8, 0x9b, 0x59, 0x91, 0x78, 0xb0, 0xb9, 0x21, 0x91, 0xde, 0x49,
   0x8f, 0xdf, 0xda, 0x93, 0xd7, 0x88, 0x2e, 0xf8, 0xaf, 0x7d, 0xf9, 0x6b,
   0xff, 0x2f, 0xbd, 0xed, 0xc6, 0xa4, 0x23, 0x2d, 0x99, 0xe9, 0xe5, 0x4e,
-  0x0a, 0xc5, 0x70, 0xc8, 0x8e, 0xa4, 0x17, 0xc8, 0xaa, 0xf4, 0xcc, 0x47,
+  0x6a, 0xcd, 0x70, 0xc8, 0x8e, 0xa4, 0x17, 0xc8, 0xaa, 0xf4, 0xcc, 0x47,
   0x63, 0x77, 0x1b, 0x3f, 0xbb, 0x35, 0xbe, 0x0f, 0x75, 0xf0, 0x1e, 0xbf,
-  0xf4, 0x02, 0x02, 0x46, 0x0f, 0x38, 0xde, 0x99, 0xad, 0x96, 0xb4, 0x61,
-  0x4d, 0x64, 0x1f, 0x96, 0x1c, 0xa5, 0xb8, 0xd5, 0x93, 0x5f, 0x5e, 0xbc,
-  0x3c, 0xbc, 0x3c, 0xe6, 0x17, 0xac, 0x7b, 0x03, 0x75, 0xb7, 0x24, 0x00,
-  0x1e, 0xcf, 0x56, 0x4f, 0x3e, 0x7c, 0xc1, 0x13, 0xea, 0x6d, 0x8b, 0x2f,
-  0x03, 0x8e, 0xee, 0xd6, 0xb8, 0x8a, 0x85, 0xc6, 0x53, 0x07, 0xc9, 0xd2,
-  0x95, 0x45, 0x91, 0x6c, 0xf5, 0xe4, 0xbb, 0x9e, 0xb3, 0xe0, 0x6a, 0xe9,
-  0x63, 0x75, 0x57, 0x4e, 0x91, 0x22, 0x10, 0x25, 0x2f, 0x4a, 0x98, 0x98,
-  0xdf, 0x1f, 0x75, 0x56, 0x88, 0xc5, 0x29, 0x00, 0x13, 0x76, 0x1b, 0xaf,
-  0xb9, 0xdd, 0x6c, 0x63, 0x2a, 0x8a, 0xbd, 0xfd, 0x47, 0x7f, 0xc1, 0x7a,
-  0xbe, 0xe8, 0xed, 0xd0, 0xdd, 0xd0, 0xfb, 0x0b, 0x77, 0x9d, 0xfb, 0x12,
-  0xa8, 0x6e, 0x3f, 0x58, 0x9f, 0x52, 0x8a, 0x92, 0x10, 0x16, 0xde, 0xf5,
-  0x00, 0xbd, 0x04, 0x0b, 0x7a, 0x27, 0x89, 0x4c, 0x86, 0xf5, 0x61, 0x0e,
-  0x7d, 0xec, 0xd7, 0x38, 0xbb, 0xce, 0x17, 0xa8, 0x11, 0x26, 0x46, 0x5d,
-  0x74, 0x17, 0xde, 0x1f, 0x7d, 0x79, 0x57, 0xe6, 0xa8, 0xf8, 0x28, 0xdc,
-  0xe7, 0xfc, 0xde, 0x72, 0x9d, 0xd0, 0x97, 0xd6, 0xfc, 0xc4, 0x5c, 0xda,
-  0xd2, 0xc1, 0x58, 0x6d, 0x3b, 0xa6, 0x8c, 0x40, 0x26, 0x20, 0xd6, 0x72,
-  0x0f, 0x41, 0x49, 0x22, 0x00, 0x82, 0xc0, 0x07, 0xbb, 0xb3, 0xd3, 0x31,
-  0xe7, 0xf1, 0xba, 0xc4, 0x8e, 0x40, 0x2b, 0x77, 0x4b, 0x6f, 0xc7, 0x2f,
-  0x0f, 0x80, 0x67, 0xf8, 0xa2, 0x94, 0xb5, 0xac, 0x9c, 0x0d, 0x09, 0xde,
-  0x46, 0x7d, 0xb6, 0xb9, 0x4f, 0xad, 0x94, 0x29, 0x4c, 0x43, 0x54, 0x7a,
-  0xd1, 0x8f, 0x89, 0xd5, 0x2c, 0xb2, 0xf2, 0xc1, 0xa0, 0x87, 0x0e, 0x67,
-  0x14, 0xa6, 0x18, 0xa4, 0xe1, 0xf1, 0x3b, 0xc3, 0xe1, 0xd0, 0x97, 0x91,
-  0xe5, 0x6d, 0x51, 0x1f, 0x14, 0x6a, 0xab, 0x04, 0xf0, 0x98, 0x58, 0xe3,
-  0x2d, 0x08, 0xf3, 0x10, 0xa8, 0xb7, 0x35, 0x18, 0x46, 0xed, 0x04, 0xee,
-  0x68, 0x04, 0x36, 0x8e, 0x4d, 0xed, 0x76, 0xd3, 0x72, 0xd2, 0x6f, 0xbb,
-  0x36, 0xe1, 0x81, 0xb1, 0x89, 0xed, 0x51, 0x2b, 0xf3, 0x39, 0x3e, 0x55,
-  0xb8, 0xb5, 0x60, 0x0a, 0xe6, 0xa0, 0x6e, 0xd0, 0x89, 0x24, 0x75, 0xca,
-  0xa2, 0xe9, 0x50, 0x7c, 0x8d, 0x64, 0x12, 0xf5, 0x90, 0x67, 0x2e, 0x05,
-  0x32, 0x96, 0x25, 0x6b, 0x7a, 0xbc, 0xc6, 0x76, 0x83, 0x2c, 0x9d, 0xd8,
-  0xac, 0xed, 0x28, 0x54, 0x2a, 0xeb, 0xcc, 0x90, 0xfd, 0x35, 0x11, 0x4f,
-  0xd1, 0x36, 0xaa, 0x54, 0x61, 0x14, 0x49, 0x6c, 0x2b, 0xe6, 0x70, 0x7b,
-  0xe9, 0xe4, 0xbd, 0xb9, 0x8a, 0x23, 0xc0, 0x06, 0x82, 0x57, 0x61, 0xb9,
-  0x72, 0xc6, 0x3d, 0x14, 0xb3, 0xe0, 0x21, 0x7f, 0xf9, 0xc4, 0x5a, 0x74,
-  0xce, 0xf2, 0xd6, 0xda, 0xf8, 0x5b, 0xb9, 0xc9, 0xba, 0x68, 0x45, 0xc5,
-  0xba, 0x2c, 0xc8, 0x00, 0x9e, 0xef, 0x25, 0xe9, 0x1d, 0x97, 0x33, 0xce,
-  0x38, 0x66, 0x12, 0x91, 0x0e, 0xb0, 0xca, 0x9c, 0x06, 0x76, 0x46, 0x37,
-  0x43, 0xab, 0x98, 0x9e, 0xfa, 0x9a, 0xe9, 0x56, 0x18, 0x55, 0xd0, 0x40,
-  0xcd, 0xa0, 0x97, 0xa3, 0x7c, 0x2b, 0xa3, 0x37, 0xaa, 0xa4, 0x6e, 0xea,
-  0x39, 0x8f, 0x7c, 0x1b, 0x05, 0x2e, 0x45, 0x9c, 0x47, 0xac, 0x20, 0xdb,
-  0x39, 0x24, 0xae, 0xc2, 0x56, 0x0b, 0x85, 0xb8, 0x5d, 0x27, 0xce, 0x3f,
-  0xad, 0xe6, 0x27, 0x0e, 0xb9, 0x5d, 0x0c, 0x5c, 0x65, 0x6a, 0x17, 0x8f,
-  0x55, 0xe6, 0xd7, 0xd7, 0x5a, 0x53, 0xb3, 0x3d, 0xb5, 0x6e, 0x22, 0x3b,
-  0xe5, 0x55, 0xe1, 0xc8, 0xe4, 0xfb, 0x75, 0xab, 0x79, 0x69, 0x36, 0x1f,
-  0xb3, 0xba, 0x34, 0x88, 0xd9, 0x7c, 0x92, 0xb2, 0x6f, 0x40, 0x59, 0x94,
-  0x24, 0x70, 0x4e, 0x9a, 0x68, 0xfa, 0x90, 0xcf, 0x2e, 0x36, 0x80, 0x0b,
-  0xbf, 0xf0, 0x39, 0xef, 0xb6, 0xe9, 0x00, 0x1f, 0xf3, 0x11, 0x28, 0x3e,
-  0x3a, 0xf4, 0xce, 0x85, 0x3f, 0x49, 0x49, 0xb1, 0x71, 0xea, 0x55, 0xae,
-  0x8d, 0xa4, 0x61, 0xed, 0xe5, 0x7a, 0x11, 0x27, 0x0b, 0xe5, 0x43, 0xc5,
-  0xfb, 0xcc, 0xe3, 0xdf, 0x79, 0x83, 0xa3, 0x07, 0x11, 0xd5, 0xd3, 0xef,
-  0x98, 0x49, 0xcb, 0xc1, 0xeb, 0xf8, 0x15, 0x26, 0xd9, 0x5a, 0x95, 0x61,
-  0x12, 0x34, 0x29, 0xa6, 0x92, 0x22, 0x64, 0xf1, 0x32, 0x36, 0xf5, 0x5b,
-  0x5b, 0x8b, 0x9a, 0x56, 0x04, 0x04, 0x8b, 0x40, 0x35, 0x91, 0x7a, 0x0a,
-  0x06, 0x04, 0xee, 0xe2, 0xe6, 0xbc, 0xff, 0xd7, 0x66, 0xd9, 0x73, 0x9b,
-  0xd4, 0x33, 0xc8, 0x75, 0x10, 0x01, 0x68, 0x80, 0x05, 0x3a, 0xe7, 0xc2,
-  0x3f, 0x9c, 0xa5, 0x1c, 0xc4, 0x52, 0x48, 0x74, 0x00, 0xb6, 0x0c, 0x44,
-  0x0d, 0x63, 0x5a, 0x8b, 0xa7, 0x46, 0xc7, 0xcf, 0x45, 0x6b, 0x08, 0xad,
-  0xb1, 0x90, 0x82, 0x66, 0x88, 0x4a, 0x10, 0x61, 0x3d, 0x09, 0xeb, 0xa2,
-  0xae, 0x4f, 0x0f, 0x1f, 0x37, 0xce, 0xe8, 0xc7, 0x8e, 0xec, 0xf9, 0xc5,
-  0xd9, 0xd7, 0x17, 0xc7, 0xa3, 0x51, 0xf2, 0xfa, 0xf8, 0x52, 0xd4, 0x7e,
-  0x2d, 0x36, 0x7d, 0xcd, 0x9a, 0x7b, 0x02, 0xb7, 0x83, 0x61, 0xd5, 0x58,
-  0xf4, 0x89, 0xd9, 0x14, 0x90, 0x92, 0x54, 0xb0, 0x4b, 0x0d, 0xa2, 0x1c,
-  0xf4, 0xf9, 0x99, 0x06, 0xd4, 0xdd, 0xc0, 0xf0, 0x8f, 0xf0, 0x26, 0xf8,
-  0x26, 0x9d, 0x1d, 0xdd, 0x5b, 0x54, 0x21, 0x23, 0x4b, 0xc0, 0xd3, 0x8d,
-  0x71, 0x2e, 0x6f, 0x4d, 0xe7, 0xdb, 0x9b, 0xfe, 0xc5, 0xf4, 0xfe, 0x94,
-  0x5c, 0x16, 0x35, 0x17, 0xbd, 0xe5, 0x5f, 0x2f, 0x8c, 0x3e, 0xfe, 0x94,
-  0xfc, 0x40, 0x6d, 0x4e, 0x69, 0xd5, 0xd9, 0x98, 0x4c, 0x17, 0xee, 0x08,
-  0x15, 0x13, 0x7d, 0xf9, 0x14, 0x94, 0x39, 0x0c, 0x8b, 0x19, 0xaf, 0xca,
-  0x72, 0xd8, 0x5d, 0x7d, 0xa4, 0x51, 0x3e, 0x44, 0x60, 0x01, 0x35, 0xbc,
-  0xce, 0xf5, 0xac, 0xa5, 0x50, 0x93, 0xe4, 0x34, 0xbb, 0xaa, 0x21, 0x90,
-  0x70, 0x77, 0xd4, 0xdc, 0x2e, 0xe3, 0xdc, 0xee, 0x71, 0x79, 0x27, 0xfa,
-  0xf5, 0xd1, 0xe7, 0x4f, 0x77, 0x3f, 0x97, 0x5f, 0xed, 0xe7, 0xb3, 0xc7,
-  0xbb, 0x8a, 0x17, 0x4d, 0x7f, 0x3d, 0x3e, 0x78, 0xbc, 0x77, 0xc0, 0x30,
-  0x76, 0xbb, 0x07, 0xbb, 0xf4, 0xff, 0x8f, 0xf5, 0x13, 0xc6, 0xea, 0x7b,
-  0xb6, 0xff, 0xf9, 0x67, 0x08, 0x8c, 0x61, 0xfa, 0x98, 0x51, 0x27, 0x83,
-  0xba, 0x18, 0x00, 0x4d, 0x07, 0x42, 0xd0, 0x9f, 0x9a, 0x46, 0x49, 0xf6,
-  0xb4, 0x4f, 0xd8, 0xaf, 0x7a, 0x2d, 0xea, 0xcd, 0x2c, 0x63, 0x0e, 0xa0,
-  0x06, 0x56, 0x41, 0x19, 0xb1, 0x00, 0x6e, 0x49, 0x32, 0xd6, 0x69, 0xe8,
-  0xdb, 0x35, 0xfe, 0x06, 0x3c, 0x55, 0xe3, 0x1d, 0x89, 0x03, 0x0f, 0x90,
-  0xb0, 0x7e, 0x69, 0xd7, 0x96, 0xf6, 0xbc, 0x01, 0x7c, 0x2b, 0xdd, 0x2a,
-  0x7d, 0x6f, 0x62, 0xd5, 0x64, 0xdd, 0x53, 0x2c, 0x11, 0xce, 0x25, 0x65,
-  0xe0, 0x4a, 0xa2, 0x89, 0x7f, 0x69, 0x7f, 0x62, 0xc4, 0xe2, 0xb7, 0x94,
-  0x1a, 0x92, 0xb8, 0x37, 0x97, 0x2a, 0xd0, 0xd1, 0x57, 0x83, 0x78, 0x36,
-  0xfc, 0xf6, 0xfb, 0x95, 0x62, 0xae, 0xa6, 0x0f, 0xb9, 0x14, 0x2b, 0x29,
-  0xce, 0xd9, 0x31, 0xe5, 0xa8, 0x39, 0x25, 0xa3, 0x5f, 0xd0, 0x9c, 0x9f,
-  0x11, 0x28, 0xd8, 0xed, 0xdc, 0x20, 0xd8, 0x9c, 0x5c, 0x62, 0xdc, 0x6c,
-  0x35, 0x1c, 0x7e, 0xa2, 0xdd, 0x78, 0xf2, 0xaa, 0x23, 0xd9, 0x81, 0xbc,
-  0xa1, 0xe2, 0xa7, 0x4b, 0x5b, 0xd3, 0xda, 0xd5, 0xee, 0x79, 0xa3, 0xec,
-  0xa8, 0x2b, 0xa6, 0xc6, 0xa0, 0x3f, 0xed, 0x03, 0xe7, 0xc9, 0x1d, 0xba,
-  0x07, 0xa7, 0xe6, 0x43, 0xdf, 0x5d, 0x71, 0xd2, 0x2d, 0x17, 0x4a, 0xde,
-  0x75, 0x24, 0xfd, 0x73, 0x88, 0x2e, 0x77, 0xcd, 0x85, 0x17, 0x11, 0x0a,
-  0xd3, 0x6a, 0x01, 0x00, 0x06, 0x65, 0x64, 0x14, 0xf3, 0x6d, 0x63, 0x61,
-  0x83, 0x3f, 0xba, 0x08, 0x2e, 0xdc, 0x6b, 0x5a, 0xbd, 0x30, 0x15, 0xca,
-  0x9f, 0x85, 0x19, 0xae, 0x8e, 0xdb, 0x8d, 0xd3, 0xb2, 0x81, 0x17, 0xbe,
-  0x21, 0xa8, 0xf9, 0x74, 0xd3, 0xd2, 0xcd, 0x11, 0x94, 0x49, 0xff, 0xc3,
-  0xc6, 0xc6, 0xe8, 0xfc, 0xf8, 0xf8, 0x65, 0x72, 0x7a, 0xf2, 0xfa, 0xe4,
-  0x32, 0x10, 0xc8, 0xdd, 0x45, 0x62, 0x46, 0x57, 0xab, 0xad, 0xd3, 0x5a,
-  0x0e, 0x8f, 0x4e, 0x2b, 0xfd, 0xd9, 0x55, 0x3e, 0xcf, 0x34, 0xc9, 0x61,
+  0xf4, 0x02, 0x02, 0x46, 0x6f, 0xbb, 0xef, 0x44, 0x0e, 0xb8, 0xaf, 0xb9,
+  0x0d, 0x6b, 0x22, 0xfb, 0xb0, 0xe4, 0x28, 0xc5, 0xad, 0x9e, 0xfc, 0xf2,
+  0xe2, 0xe5, 0xe1, 0xe5, 0x31, 0xbf, 0x60, 0xdd, 0x1b, 0x2e, 0xbc, 0x25,
+  0x01, 0xf0, 0x78, 0xb6, 0x7a, 0xf2, 0xe1, 0x0b, 0x9e, 0x50, 0x6f, 0x5b,
+  0x7c, 0x19, 0x70, 0x74, 0xb7, 0xc6, 0x55, 0x2c, 0x34, 0x9e, 0x3a, 0x48,
+  0xe4, 0xad, 0x2c, 0x8a, 0x64, 0xab, 0x27, 0xdf, 0xf5, 0x9c, 0x05, 0x57,
+  0x2b, 0x53, 0xab, 0xbb, 0x72, 0x8a, 0x14, 0x81, 0x28, 0x79, 0x51, 0xc2,
+  0xc4, 0xfc, 0xfe, 0xa8, 0xb3, 0x42, 0x2c, 0x4e, 0x01, 0x1e, 0xb1, 0xdb,
+  0x78, 0xcd, 0x14, 0x66, 0x1b, 0x53, 0x51, 0xec, 0xed, 0x3f, 0xfa, 0x0b,
+  0xd6, 0xf3, 0x45, 0x6f, 0x87, 0xee, 0x86, 0xde, 0x5f, 0xb8, 0xeb, 0xdc,
+  0x57, 0xa8, 0x75, 0xfb, 0xc1, 0xfa, 0x94, 0x52, 0x94, 0x84, 0xb0, 0xf0,
+  0xae, 0x07, 0xf8, 0x27, 0x58, 0xd0, 0x3b, 0x49, 0x64, 0x32, 0xc4, 0x10,
+  0x73, 0xe8, 0x63, 0xbf, 0xc6, 0xd9, 0x75, 0xbe, 0x40, 0x95, 0x31, 0x31,
+  0xea, 0xa2, 0xbb, 0xf0, 0xfe, 0xe8, 0xcb, 0xbb, 0x32, 0x47, 0x45, 0x58,
+  0xe1, 0x3e, 0xe7, 0xf7, 0x96, 0xeb, 0x84, 0xbe, 0xb4, 0x24, 0x2b, 0xe6,
+  0xd2, 0x96, 0x0e, 0xc6, 0x6a, 0xdb, 0x31, 0x65, 0x04, 0x32, 0x01, 0xb1,
+  0x96, 0x7b, 0x08, 0x4a, 0x12, 0x01, 0x10, 0x04, 0x3e, 0xd8, 0x9d, 0x9d,
+  0x8e, 0x39, 0x8f, 0xd7, 0x25, 0x76, 0x04, 0x5a, 0xb9, 0x5b, 0x7a, 0x3b,
+  0x7e, 0x79, 0x80, 0x5d, 0xc3, 0x17, 0xa5, 0xac, 0x65, 0xe5, 0x6c, 0x48,
+  0xf0, 0x36, 0xea, 0xb3, 0xcd, 0x7d, 0x6a, 0xa5, 0x4c, 0x61, 0x1a, 0xa2,
+  0xd2, 0x8b, 0x7e, 0x4c, 0xac, 0x66, 0x91, 0x95, 0x0f, 0x06, 0x3d, 0x74,
+  0x38, 0xa3, 0x30, 0xc5, 0x20, 0x0d, 0x8f, 0xdf, 0x19, 0x0e, 0x87, 0xbe,
+  0xca, 0x2f, 0x6f, 0x8b, 0xfa, 0xa0, 0x50, 0x9d, 0x25, 0x40, 0xd8, 0xc4,
+  0x1a, 0x6f, 0x41, 0x98, 0x87, 0x40, 0xbd, 0xad, 0xc1, 0x30, 0x6a, 0x27,
+  0x70, 0x47, 0x23, 0xb0, 0x71, 0x6c, 0x6a, 0xb7, 0x9b, 0x96, 0xd6, 0x7e,
+  0xdb, 0xb5, 0x09, 0x0f, 0x8c, 0x4d, 0x6c, 0x8f, 0x5a, 0xdb, 0xcf, 0xf1,
+  0xa9, 0xc2, 0xad, 0x05, 0x53, 0x30, 0x07, 0x75, 0x83, 0x4e, 0x24, 0xa9,
+  0x53, 0x16, 0x4d, 0x87, 0xe2, 0x4b, 0x58, 0x93, 0xa8, 0x87, 0x3c, 0x73,
+  0x29, 0xb1, 0xb1, 0x2c, 0x59, 0xd3, 0xe3, 0x35, 0xb6, 0x1b, 0x64, 0xe9,
+  0xc4, 0x66, 0x6d, 0x47, 0x01, 0x57, 0x59, 0x67, 0x86, 0xec, 0xdf, 0xf7,
+  0xa0, 0xac, 0x1b, 0x28, 0x37, 0x98, 0xa9, 0xf6, 0x4c, 0x43, 0x85, 0xdb,
+  0x4b, 0x27, 0xef, 0xcd, 0x55, 0x1c, 0x01, 0x36, 0x10, 0xc8, 0x0b, 0xcb,
+  0x95, 0x33, 0xee, 0xa1, 0xa0, 0x07, 0x0f, 0xf9, 0xcb, 0x27, 0xd6, 0xa2,
+  0x73, 0x96, 0xb7, 0xd6, 0xc6, 0xdf, 0xca, 0x4d, 0xd6, 0x45, 0x2b, 0x2a,
+  0xd6, 0x65, 0x01, 0x17, 0xf0, 0x7c, 0x2f, 0x49, 0xef, 0xb8, 0xda, 0x74,
+  0xc6, 0x31, 0x93, 0x88, 0x74, 0x80, 0x55, 0xe6, 0x34, 0xb0, 0x33, 0x7a,
+  0xd8, 0x59, 0x2d, 0x68, 0x9f, 0xfa, 0x92, 0xf6, 0x56, 0xb7, 0x56, 0x00,
+  0x45, 0xcd, 0xa0, 0x97, 0xa3, 0xba, 0x2e, 0x03, 0x40, 0xaa, 0xa4, 0x6e,
+  0xea, 0x39, 0x8f, 0x7c, 0x1b, 0xf5, 0x47, 0x45, 0x9c, 0x47, 0xac, 0x20,
+  0xdb, 0x39, 0x24, 0xae, 0xc2, 0x56, 0x0b, 0x20, 0xec, 0xae, 0x13, 0xe7,
+  0x9f, 0x56, 0xf3, 0x13, 0x87, 0xdc, 0x2e, 0x06, 0xae, 0x70, 0xb8, 0x8b,
+  0xc7, 0x2a, 0xf3, 0xeb, 0x6b, 0x2d, 0x79, 0xda, 0x9e, 0x5a, 0x37, 0x91,
+  0x9d, 0xf2, 0xaa, 0x70, 0x64, 0xf2, 0xfd, 0xba, 0xd5, 0xbc, 0x34, 0x9b,
+  0x8f, 0x59, 0x5d, 0x1a, 0xc4, 0x6c, 0x3e, 0x49, 0xd9, 0xb7, 0x1a, 0x75,
+  0x91, 0x91, 0x04, 0xce, 0x49, 0x13, 0x4d, 0x1f, 0xf2, 0xd9, 0xc5, 0x06,
+  0x40, 0xb8, 0x17, 0x3e, 0xe7, 0xdd, 0x36, 0x1d, 0xf8, 0x65, 0x3e, 0x02,
+  0xc5, 0x47, 0x87, 0xde, 0xb9, 0xf0, 0x27, 0xa9, 0x4a, 0x36, 0x4e, 0xbd,
+  0xca, 0xb5, 0x91, 0x34, 0xac, 0xbd, 0x5c, 0x70, 0xe2, 0x64, 0xa1, 0x7c,
+  0xa8, 0x78, 0x9f, 0x79, 0x10, 0x3d, 0x6f, 0x70, 0xf4, 0xc0, 0xa7, 0x7a,
+  0xfa, 0x1d, 0x33, 0x69, 0x39, 0x78, 0x1d, 0xbf, 0xc2, 0x24, 0x5b, 0xab,
+  0x12, 0x56, 0xb6, 0x50, 0x53, 0x49, 0x11, 0xb2, 0x78, 0x19, 0x9b, 0xfa,
+  0xad, 0xad, 0x45, 0x4d, 0x2b, 0x02, 0x08, 0x46, 0xa0, 0x9a, 0x48, 0x49,
+  0x06, 0xc3, 0x12, 0x77, 0x71, 0x73, 0xde, 0xff, 0x6b, 0xb3, 0xec, 0xb9,
+  0x4d, 0xea, 0x21, 0xfb, 0x6d, 0xac, 0x44, 0x00, 0x1a, 0x60, 0x81, 0xce,
+  0xb9, 0xf0, 0x0f, 0x67, 0x29, 0x07, 0xb1, 0x14, 0x12, 0x1d, 0x80, 0x2d,
+  0x03, 0x51, 0xc3, 0x98, 0xd6, 0xe2, 0xa9, 0xd1, 0xf1, 0x73, 0xd1, 0x1a,
+  0x42, 0x6b, 0x80, 0x40, 0xe5, 0x66, 0x88, 0x4a, 0x10, 0x61, 0x3d, 0x09,
+  0xcb, 0xd6, 0xae, 0x4f, 0x0f, 0x1f, 0x37, 0xce, 0xe8, 0xc7, 0x8e, 0xec,
+  0xf9, 0xc5, 0xd9, 0xd7, 0x17, 0xc7, 0xa3, 0x51, 0xf2, 0xfa, 0xf8, 0x52,
+  0xd4, 0x7e, 0xad, 0x05, 0x7e, 0xcd, 0x9a, 0x7b, 0x02, 0xb7, 0x83, 0xc1,
+  0xdd, 0x58, 0xf4, 0x89, 0xd9, 0x14, 0x90, 0x92, 0x54, 0xb0, 0x4b, 0x0d,
+  0xa2, 0x1c, 0xf4, 0xf9, 0x99, 0x06, 0xd4, 0xdd, 0xc0, 0xf0, 0x8f, 0xf0,
+  0x26, 0xf8, 0x26, 0x9d, 0x1d, 0xdd, 0x5b, 0x54, 0x21, 0x23, 0x4b, 0xc0,
+  0xd3, 0x8d, 0x71, 0x2e, 0x6f, 0x4d, 0xe7, 0xdb, 0x9b, 0xfe, 0xc5, 0xf4,
+  0xfe, 0x94, 0x5c, 0x16, 0x35, 0x43, 0x73, 0xf2, 0xaf, 0x17, 0x46, 0x1f,
+  0x7f, 0x4a, 0x7e, 0xa0, 0x36, 0xa7, 0xb4, 0xea, 0x6c, 0x4c, 0xa6, 0x0b,
+  0x77, 0x84, 0xa2, 0x8b, 0xbe, 0x02, 0x0b, 0xe0, 0xc5, 0xc3, 0x5a, 0xd3,
+  0xab, 0xb2, 0x1c, 0x76, 0x17, 0x30, 0x69, 0x54, 0x20, 0x11, 0x84, 0x18,
+  0x0d, 0xaf, 0x73, 0x3d, 0x1f, 0x59, 0xc9, 0x9a, 0xd3, 0xec, 0xaa, 0x86,
+  0x40, 0xc2, 0xdd, 0x51, 0x73, 0xbb, 0x0c, 0x95, 0xbb, 0xc7, 0x15, 0xa2,
+  0xe8, 0xd7, 0x47, 0x9f, 0x3f, 0xdd, 0xfd, 0x5c, 0x7e, 0xb5, 0x9f, 0xcf,
+  0x1e, 0xef, 0x2a, 0xe4, 0x34, 0xfd, 0xf5, 0xf8, 0xe0, 0xf1, 0xde, 0x01,
+  0x23, 0xe1, 0xed, 0x1e, 0xec, 0xd2, 0xff, 0x3f, 0xd6, 0x4f, 0x18, 0xee,
+  0xef, 0xd9, 0xfe, 0xe7, 0x9f, 0x21, 0x30, 0x86, 0xe9, 0x63, 0x46, 0x9d,
+  0x0c, 0xea, 0x62, 0x00, 0x40, 0x1e, 0x08, 0x41, 0x7f, 0x6a, 0x1a, 0x25,
+  0xd9, 0xd3, 0x3e, 0x61, 0xbf, 0xea, 0xb5, 0xa8, 0x37, 0xb3, 0x0c, 0x48,
+  0xfc, 0x57, 0x01, 0xc8, 0x88, 0x05, 0x70, 0x4b, 0x92, 0xb1, 0x4e, 0x43,
+  0xdf, 0xae, 0xf1, 0x37, 0x10, 0xae, 0x1a, 0xef, 0x48, 0x1c, 0x78, 0x00,
+  0xa6, 0xf5, 0x4b, 0xbb, 0xb6, 0xb4, 0xe7, 0x0d, 0x40, 0x64, 0xe9, 0x56,
+  0xe9, 0x7b, 0x13, 0x2b, 0x48, 0xeb, 0x9e, 0x62, 0x89, 0x70, 0x2e, 0x29,
+  0x03, 0x57, 0x12, 0x4d, 0xfc, 0x4b, 0xfb, 0x13, 0x23, 0x16, 0xbf, 0xa5,
+  0xd4, 0x90, 0xc4, 0xbd, 0xb9, 0x54, 0x81, 0x8e, 0xbe, 0x1a, 0xc4, 0xb3,
+  0xe1, 0xb7, 0xdf, 0xaf, 0x14, 0x73, 0x35, 0x7d, 0xc8, 0xa5, 0x58, 0x49,
+  0x7d, 0xcf, 0x8e, 0x29, 0x47, 0xcd, 0x29, 0x19, 0xfd, 0x82, 0xe6, 0xfc,
+  0x8c, 0x40, 0xc1, 0x6e, 0xe7, 0x06, 0xc1, 0xe6, 0xe4, 0x12, 0xe3, 0x66,
+  0xab, 0xe1, 0x20, 0x18, 0xed, 0xc6, 0x93, 0x57, 0x1d, 0xc9, 0x0e, 0xe4,
+  0x0d, 0x15, 0x3f, 0x5d, 0xda, 0x9a, 0x96, 0x16, 0x77, 0xcf, 0x1b, 0x65,
+  0x47, 0x5d, 0x31, 0x35, 0x06, 0xfd, 0x69, 0x1f, 0x38, 0x4f, 0xee, 0xd0,
+  0x3d, 0x38, 0x35, 0x1f, 0xfa, 0xee, 0xaa, 0x9b, 0x6e, 0xb9, 0x50, 0xf2,
+  0xae, 0x23, 0xe9, 0x9f, 0x43, 0x74, 0xb9, 0x6b, 0x2e, 0xbc, 0x88, 0x50,
+  0xdb, 0x16, 0xe3, 0x03, 0x92, 0xce, 0x8a, 0x81, 0xd0, 0xb7, 0x8d, 0x85,
+  0x0d, 0xfe, 0xe8, 0x22, 0xb8, 0x70, 0xaf, 0x69, 0x01, 0xc4, 0x54, 0x28,
+  0x7f, 0x16, 0x66, 0xb8, 0x3a, 0x6e, 0x37, 0x4e, 0xcb, 0x06, 0xe0, 0xf8,
+  0x86, 0x42, 0xd9, 0xcf, 0x19, 0xcd, 0x2b, 0xa8, 0x62, 0xff, 0x87, 0x8d,
+  0x8d, 0xd1, 0xf9, 0xf1, 0xf1, 0xcb, 0xe4, 0xf4, 0xe4, 0xf5, 0xc9, 0x65,
+  0x20, 0x90, 0xbb, 0x8b, 0xc4, 0x8c, 0xae, 0x56, 0x9c, 0xa7, 0xb5, 0x1c,
+  0x1e, 0xe0, 0x56, 0x8b, 0x26, 0xe8, 0x55, 0x3e, 0xcf, 0x34, 0xc9, 0x61,
   0xd6, 0x7e, 0x0f, 0xaa, 0x37, 0x60, 0x74, 0x86, 0xc9, 0x57, 0x41, 0x8c,
-  0x64, 0x52, 0x91, 0x70, 0x33, 0x71, 0x25, 0x5b, 0x07, 0x7f, 0xd5, 0x90,
-  0x8d, 0xa6, 0xe4, 0xa4, 0x20, 0x9b, 0x2e, 0xe3, 0x46, 0xc3, 0x5c, 0x5b,
+  0x64, 0x52, 0x91, 0x70, 0x33, 0x71, 0x55, 0x5f, 0x07, 0x7f, 0xd5, 0x90,
+  0x8d, 0xa6, 0xe4, 0xa4, 0x38, 0x9d, 0x2e, 0xe3, 0x46, 0xc3, 0x5c, 0x5b,
   0xa3, 0xe2, 0xb5, 0xcd, 0x24, 0xf2, 0x39, 0xb0, 0xd0, 0x21, 0x82, 0xef,
-  0x2e, 0x43, 0x6e, 0xfe, 0x3c, 0x97, 0x54, 0xc8, 0x30, 0xbc, 0xd8, 0x55,
-  0xb1, 0xbc, 0x2c, 0x84, 0x8f, 0x87, 0x3d, 0x86, 0xe5, 0x89, 0x2d, 0xb6,
-  0xd6, 0xfa, 0x0a, 0xeb, 0xde, 0x3e, 0xda, 0x75, 0xd9, 0x04, 0x4b, 0xf0,
+  0x2e, 0x43, 0x6e, 0xfe, 0x3c, 0x97, 0x54, 0xc8, 0x30, 0xbc, 0xd8, 0x15,
+  0xc2, 0xbc, 0x2c, 0x84, 0x8f, 0x87, 0x3d, 0x86, 0x15, 0x8e, 0x2d, 0xb6,
+  0xd6, 0xfa, 0x0a, 0x4b, 0xe7, 0x3e, 0xda, 0x75, 0xd9, 0x04, 0x4b, 0xf0,
   0x1c, 0x15, 0xf5, 0xb9, 0xb3, 0xbd, 0x84, 0xe4, 0x91, 0x15, 0x4b, 0xf5,
   0xe5, 0x6a, 0x11, 0x5d, 0x77, 0x7f, 0x95, 0x77, 0x69, 0xfe, 0x4f, 0x77,
   0x71, 0xbd, 0x5d, 0xa5, 0xe5, 0x80, 0x24, 0xaf, 0xfb, 0x81, 0x59, 0x57,
-  0x85, 0x22, 0x34, 0xf4, 0x58, 0x4c, 0x3f, 0x99, 0x2f, 0x98, 0xd9, 0x92,
+  0x85, 0x22, 0x34, 0xf4, 0x58, 0x4c, 0x3f, 0x99, 0xaf, 0xb9, 0xd9, 0x92,
   0x16, 0x7d, 0x4a, 0x48, 0x01, 0x17, 0xe5, 0x4c, 0x0f, 0x00, 0x4f, 0x9d,
-  0x13, 0x71, 0xcd, 0xd8, 0xe9, 0x65, 0x1d, 0x0f, 0xc0, 0x6a, 0xbb, 0xe8,
+  0x13, 0x71, 0xcd, 0xd8, 0xe9, 0x65, 0x1d, 0x8f, 0xe1, 0x6a, 0xbb, 0xe8,
   0x79, 0x14, 0x27, 0x08, 0x80, 0xad, 0x72, 0xab, 0x39, 0x4f, 0x53, 0xe7,
   0x12, 0x8b, 0xd6, 0xf3, 0x64, 0xef, 0x73, 0x9e, 0xc7, 0xa7, 0xcd, 0xe7,
   0x55, 0x51, 0x4e, 0x5c, 0xca, 0x2f, 0xd4, 0x85, 0x20, 0xff, 0x53, 0xb2,
-  0x16, 0x50, 0x95, 0x46, 0x56, 0xd7, 0xe2, 0x63, 0x11, 0xbf, 0xc7, 0xfa,
+  0x16, 0x50, 0xd8, 0x46, 0x56, 0xd7, 0xe2, 0x63, 0x11, 0xbf, 0xc7, 0xfa,
   0x89, 0xba, 0xd6, 0x61, 0x99, 0x82, 0xaf, 0x5b, 0x24, 0x24, 0xbe, 0x6b,
   0x74, 0x5d, 0xd8, 0xd6, 0x2a, 0xf1, 0x7b, 0x9b, 0xa5, 0xcb, 0x0f, 0x95,
-  0x65, 0x60, 0xeb, 0x08, 0xd1, 0xda, 0x5d, 0x3e, 0x85, 0x54, 0x6d, 0x46,
-  0x00, 0xd0, 0x9f, 0x10, 0x9f, 0x84, 0x4d, 0xc3, 0x7d, 0x09, 0xbf, 0xa7,
-  0x1b, 0x99, 0x0a, 0x30, 0xbc, 0xac, 0x05, 0x8c, 0x0b, 0x5b, 0x90, 0x1f,
-  0x38, 0xfd, 0xd8, 0xbb, 0x08, 0x58, 0x95, 0x62, 0xd6, 0xdc, 0xf3, 0xbd,
-  0x70, 0x28, 0x7f, 0x5d, 0xcf, 0xcc, 0xae, 0xf0, 0xda, 0x11, 0x76, 0x73,
-  0xce, 0x8c, 0x2b, 0x12, 0x4c, 0x7b, 0x6f, 0x97, 0xe4, 0xd7, 0x59, 0xd1,
-  0x2e, 0xaf, 0x1d, 0x2b, 0xa5, 0x98, 0xd6, 0x00, 0xab, 0xb3, 0xb7, 0xfb,
-  0xed, 0xfa, 0x55, 0x07, 0xcc, 0xf8, 0x83, 0x2f, 0xef, 0x3f, 0x7e, 0x60,
-  0xd3, 0xce, 0x4a, 0xe8, 0xe5, 0x99, 0x85, 0x43, 0x42, 0x10, 0xf4, 0x4e,
-  0x98, 0x68, 0xdb, 0x88, 0xf0, 0xb3, 0xeb, 0x94, 0x87, 0xff, 0xd0, 0xe8,
-  0x2d, 0x65, 0xa3, 0x35, 0x94, 0xd7, 0x1a, 0xa0, 0x2d, 0x5f, 0x56, 0x6c,
-  0x21, 0x5b, 0x02, 0x0c, 0xcd, 0xab, 0xb1, 0x2e, 0xdb, 0x5b, 0xe0, 0x26,
-  0x82, 0xb7, 0x85, 0x73, 0xf6, 0x9b, 0x4c, 0xc2, 0xa8, 0xa7, 0xcc, 0xae,
-  0x57, 0x82, 0xe7, 0x50, 0x88, 0xda, 0xcf, 0xb8, 0xbd, 0x7a, 0x5e, 0x89,
-  0x37, 0x73, 0x24, 0x91, 0xd0, 0x13, 0x18, 0xef, 0x24, 0x35, 0x91, 0x55,
-  0x44, 0x8e, 0xf6, 0xc5, 0xc0, 0xf6, 0xd9, 0x09, 0x3b, 0xc4, 0xc0, 0x0d,
-  0x36, 0x92, 0x76, 0xe9, 0x5d, 0x01, 0xa6, 0x1b, 0x22, 0x11, 0x57, 0x08,
-  0xc5, 0x31, 0x7b, 0xce, 0xfa, 0x62, 0xc7, 0x58, 0x2d, 0x1e, 0x02, 0x34,
-  0xd0, 0x57, 0xaa, 0x45, 0x4b, 0xae, 0x2b, 0xe6, 0xf8, 0x95, 0x01, 0x04,
-  0x0a, 0x98, 0x38, 0xdb, 0xfd, 0x8f, 0xce, 0xde, 0xbc, 0x3a, 0xf9, 0xda,
-  0x01, 0xef, 0x08, 0x13, 0xb7, 0x92, 0xa0, 0x68, 0x53, 0x2c, 0xc9, 0xa1,
-  0xd3, 0x5b, 0x4b, 0xce, 0x69, 0x20, 0x2e, 0xb1, 0xa7, 0x77, 0xe1, 0x07,
-  0x60, 0x20, 0x8b, 0x47, 0x6c, 0x2b, 0x17, 0x20, 0x8b, 0x6a, 0xdb, 0x5b,
-  0x1e, 0x5a, 0xc0, 0x60, 0x92, 0xb0, 0x91, 0x96, 0xf5, 0x6a, 0xe9, 0xe2,
-  0x09, 0x83, 0x92, 0x75, 0x0a, 0x33, 0x6c, 0x99, 0xe2, 0xab, 0xa5, 0xb0,
-  0x26, 0xcd, 0xf7, 0x6c, 0x18, 0x76, 0xe5, 0x0e, 0x60, 0xcb, 0x82, 0x22,
-  0x7f, 0xe8, 0x05, 0x10, 0x85, 0xe8, 0xcc, 0x18, 0x9c, 0x30, 0x0c, 0x9d,
-  0x37, 0x57, 0xce, 0x14, 0x65, 0xff, 0xc2, 0xa2, 0xc9, 0x73, 0xd1, 0xcc,
-  0x78, 0xde, 0xa8, 0x75, 0xeb, 0xe2, 0x72, 0x5c, 0x20, 0xb0, 0x77, 0x15,
-  0x55, 0xae, 0x78, 0xaf, 0x0b, 0x55, 0xb2, 0x2c, 0xd3, 0x14, 0x5e, 0x4b,
-  0xb8, 0x3d, 0xf1, 0xc9, 0x0b, 0xf6, 0xd0, 0x1c, 0x30, 0xd8, 0xf6, 0x5c,
-  0xe0, 0xbb, 0xc2, 0xec, 0x50, 0xe5, 0x92, 0x1e, 0x14, 0xfb, 0xe4, 0x2a,
-  0x48, 0x38, 0x93, 0x90, 0x41, 0x23, 0x3a, 0x31, 0x17, 0xb3, 0xad, 0x65,
-  0xf3, 0x8f, 0x9b, 0x83, 0xea, 0x7e, 0x3e, 0x2e, 0x66, 0x96, 0x83, 0xe1,
-  0xf0, 0x1d, 0xec, 0xa1, 0xb0, 0x84, 0x54, 0x22, 0x4e, 0xdb, 0x3a, 0xb0,
-  0x50, 0xfa, 0xb0, 0x29, 0x3f, 0x7e, 0x29, 0xc3, 0x02, 0x4f, 0x91, 0xcd,
-  0xc2, 0x81, 0x8d, 0x64, 0x8b, 0xc9, 0xac, 0x50, 0xaa, 0xe6, 0xfc, 0x6f,
-  0xac, 0x54, 0x73, 0xea, 0xec, 0xfc, 0x2b, 0x56, 0x6c, 0xec, 0x40, 0x89,
-  0x05, 0x12, 0x77, 0xd8, 0x38, 0xfc, 0xbd, 0x4d, 0x90, 0xdf, 0x96, 0x2f,
-  0x34, 0x40, 0xdf, 0x50, 0x5a, 0xa8, 0x21, 0xa9, 0xc9, 0x40, 0x43, 0xfd,
-  0x49, 0x6c, 0x8b, 0xe2, 0x02, 0xfc, 0xab, 0x75, 0x6e, 0x8f, 0xb6, 0x96,
-  0x9e, 0xe8, 0x29, 0x2d, 0xaf, 0x15, 0x13, 0x4d, 0x9d, 0x6a, 0x50, 0x12,
-  0x5d, 0xa5, 0x0c, 0x67, 0xa3, 0x64, 0xa1, 0xc4, 0x05, 0xd0, 0x40, 0x7c,
-  0x5a, 0x49, 0xca, 0x9f, 0x26, 0x44, 0x89, 0x75, 0xd2, 0x11, 0x62, 0xc0,
-  0x71, 0xfe, 0xe8, 0xc2, 0x52, 0x52, 0x7f, 0x97, 0x19, 0x80, 0xbf, 0x37,
-  0xd5, 0xea, 0x65, 0x16, 0xbc, 0xc6, 0xf6, 0x3c, 0x68, 0xc2, 0x99, 0xda,
-  0x50, 0xa4, 0x2b, 0xc8, 0x12, 0x0c, 0x07, 0x88, 0x3c, 0xa0, 0xac, 0xf2,
-  0x4d, 0xc8, 0xf7, 0x2f, 0xb4, 0x72, 0x0f, 0x9d, 0x67, 0xc5, 0x2f, 0x51,
-  0xb0, 0xb6, 0xcf, 0x77, 0xd5, 0x12, 0x57, 0x6b, 0xe4, 0x6a, 0x95, 0x1c,
-  0x5e, 0x1c, 0x93, 0x64, 0x7b, 0xbd, 0x00, 0x84, 0xc4, 0xa2, 0xb6, 0x9c,
-  0xb7, 0x6c, 0xa1, 0xa5, 0x82, 0x16, 0x76, 0x3e, 0xb8, 0xc3, 0xbb, 0xe0,
-  0x4d, 0x26, 0x26, 0x8d, 0x11, 0x90, 0xf4, 0x6a, 0x4f, 0x72, 0x13, 0x83,
-  0x4d, 0x05, 0xd7, 0x61, 0x14, 0x03, 0x21, 0x29, 0xf6, 0x96, 0x50, 0x57,
-  0x85, 0x41, 0xa6, 0x9e, 0x47, 0x6c, 0x3d, 0xc4, 0x4a, 0xb5, 0xb5, 0xc6,
-  0xa9, 0xf6, 0x59, 0x09, 0x7f, 0x37, 0x14, 0x44, 0xed, 0xab, 0xe1, 0x01,
-  0xf5, 0xe4, 0xd4, 0xef, 0xb6, 0x1e, 0xfd, 0x1d, 0xf7, 0x0c, 0xcb, 0x22,
-  0x6d, 0xb9, 0x20, 0x73, 0xc1, 0xf6, 0x62, 0xc8, 0x9e, 0x06, 0xc2, 0xaf,
-  0x64, 0xe8, 0xa1, 0x72, 0x37, 0x6c, 0xd4, 0x2c, 0xfc, 0xa4, 0x95, 0x66,
-  0x43, 0xa9, 0x3a, 0x30, 0xd5, 0xb3, 0xca, 0x54, 0xc1, 0x91, 0xc3, 0x63,
-  0xc6, 0xfc, 0x91, 0xca, 0xbd, 0x0d, 0xfe, 0xd4, 0x69, 0xe6, 0xfd, 0xa3,
-  0x9b, 0xad, 0x1f, 0x83, 0xfb, 0x92, 0x3f, 0x7a, 0xe1, 0x70, 0xd1, 0x50,
-  0x81, 0x9c, 0x3b, 0x02, 0x4b, 0x85, 0xfb, 0x94, 0x7f, 0xc1, 0xc7, 0x08,
-  0x80, 0x33, 0x6c, 0xc9, 0x06, 0x8c, 0x91, 0x16, 0x07, 0x09, 0x07, 0x22,
-  0x3e, 0x3e, 0x70, 0xe8, 0x71, 0x28, 0x1a, 0x0f, 0xbe, 0xdd, 0xb1, 0x6a,
-  0x9f, 0x6c, 0xca, 0xe1, 0xfc, 0x5e, 0x3b, 0xf0, 0x55, 0xd6, 0x28, 0x0f,
-  0xea, 0x92, 0x86, 0x7a, 0x83, 0x1e, 0xad, 0xc5, 0xe6, 0x6c, 0xe6, 0x19,
-  0xbe, 0x3d, 0xc6, 0xbb, 0x8a, 0xfc, 0x3a, 0x2f, 0x30, 0x29, 0xef, 0xe2,
-  0xba, 0x03, 0xf7, 0x8d, 0x6c, 0x07, 0x2e, 0xdc, 0xc4, 0xc9, 0x40, 0x0e,
-  0x86, 0x0a, 0x19, 0x23, 0x88, 0x17, 0x78, 0x9f, 0x57, 0xe6, 0x87, 0x24,
-  0xda, 0x9e, 0x48, 0x78, 0x44, 0x2d, 0x78, 0x01, 0x59, 0x3d, 0x09, 0x96,
-  0x32, 0x9b, 0xdc, 0x14, 0x12, 0x5e, 0x4b, 0x8b, 0x16, 0x24, 0x62, 0xf6,
-  0x92, 0xff, 0x50, 0x1a, 0xf8, 0xd6, 0xe7, 0xef, 0x31, 0x21, 0x0c, 0x05,
-  0xf5, 0x6f, 0xe8, 0x09, 0xe2, 0xf8, 0x87, 0xcb, 0x8b, 0xc3, 0xe4, 0x9b,
-  0xe3, 0xc3, 0x97, 0xc7, 0x17, 0xa3, 0xd6, 0xa5, 0xaf, 0x91, 0x20, 0x22,
-  0xa1, 0xb1, 0x3d, 0x18, 0xa2, 0xb1, 0xe1, 0x02, 0x68, 0x08, 0xbf, 0x71,
-  0x3d, 0x22, 0x1e, 0x3e, 0x48, 0x74, 0x3e, 0x58, 0x21, 0x12, 0xc7, 0x01,
-  0xf0, 0x5d, 0x2b, 0x30, 0x1b, 0xd7, 0xc6, 0x84, 0x38, 0x14, 0xc7, 0x33,
-  0x98, 0xf5, 0x3c, 0x4c, 0x9e, 0xf1, 0xc8, 0x72, 0xfe, 0x32, 0x99, 0x16,
-  0x96, 0x17, 0xd8, 0xdc, 0xb9, 0x6f, 0x7c, 0x3a, 0x76, 0xc0, 0xb6, 0xf4,
-  0x92, 0x51, 0x03, 0x62, 0xef, 0x87, 0x01, 0xf5, 0x3b, 0xa0, 0xc5, 0x1f,
-  0x30, 0x22, 0xe0, 0x7d, 0x56, 0xf5, 0x5a, 0xd6, 0xc0, 0x66, 0xf7, 0x1b,
-  0x52, 0xac, 0x26, 0x3a, 0x49, 0xdf, 0x74, 0xb6, 0xc4, 0xa7, 0x8b, 0xeb,
-  0xd9, 0x46, 0x1a, 0x04, 0x2e, 0xd5, 0x40, 0x48, 0xd6, 0x13, 0x14, 0x65,
-  0xba, 0x68, 0xac, 0x92, 0x57, 0x33, 0x35, 0x34, 0x0c, 0x03, 0xd1, 0x29,
-  0x40, 0xd6, 0xa1, 0xb3, 0x27, 0x97, 0x3a, 0xec, 0x22, 0x06, 0x56, 0x4b,
-  0xc3, 0xd2, 0x87, 0xc2, 0xfb, 0x01, 0xbe, 0x10, 0x0d, 0xc7, 0xaf, 0x1a,
-  0xae, 0x52, 0xb5, 0x8b, 0x2a, 0x4a, 0xb1, 0x36, 0xc7, 0x63, 0x70, 0x34,
-  0x6f, 0x51, 0xfc, 0xdc, 0xa5, 0x15, 0x50, 0xd0, 0x77, 0x25, 0x20, 0x8c,
-  0x95, 0x7a, 0x98, 0x3a, 0xa5, 0x12, 0xa3, 0x94, 0x63, 0x13, 0xc6, 0x16,
-  0xa4, 0x05, 0x85, 0xc4, 0x8c, 0x6a, 0x4f, 0x08, 0x24, 0x77, 0xcf, 0x65,
-  0xc9, 0x37, 0x45, 0x85, 0xbb, 0x20, 0x7e, 0x9c, 0x2f, 0xf9, 0xae, 0xe5,
-  0xc7, 0x1b, 0xea, 0xea, 0x72, 0x90, 0x9c, 0x40, 0xb0, 0x05, 0xfb, 0x3a,
-  0x3f, 0xbc, 0xfc, 0x06, 0x8e, 0x56, 0x90, 0xf0, 0x4b, 0x00, 0x9a, 0x98,
-  0x7b, 0x2d, 0xce, 0xce, 0x72, 0x0a, 0x9c, 0xc8, 0xbf, 0x06, 0x23, 0x68,
-  0xf2, 0x24, 0x1c, 0x79, 0xb9, 0xc4, 0x24, 0xcd, 0xa4, 0xfa, 0x25, 0x78,
-  0x74, 0xa3, 0x02, 0x19, 0xa2, 0xe0, 0x5d, 0xea, 0x9d, 0x0b, 0xbd, 0xdc,
-  0x94, 0x3c, 0xf5, 0x4d, 0x99, 0x13, 0x88, 0x9e, 0x85, 0x39, 0xd6, 0x78,
-  0x42, 0x9c, 0x57, 0x7c, 0xc1, 0x89, 0xc8, 0xe2, 0x8b, 0x9a, 0x16, 0xdd,
-  0x28, 0x7d, 0xc1, 0x91, 0xfe, 0x72, 0x7e, 0x3f, 0x8c, 0xf1, 0x71, 0x92,
-  0xaf, 0x56, 0x75, 0x93, 0xad, 0xb4, 0xd0, 0x66, 0x9d, 0x64, 0x59, 0x16,
-  0x45, 0x1d, 0x8c, 0x01, 0xd2, 0x4f, 0x5a, 0xeb, 0x89, 0x16, 0x38, 0x46,
-  0x19, 0x0b, 0x37, 0xb5, 0x50, 0xb9, 0x3b, 0x14, 0x0c, 0xd3, 0x71, 0x55,
-  0xcc, 0x56, 0x75, 0x10, 0x88, 0xfd, 0xcb, 0xc6, 0x1c, 0x0c, 0x7a, 0xeb,
-  0x64, 0x68, 0xd0, 0x94, 0x5c, 0xbc, 0x98, 0x84, 0x70, 0xd2, 0xf4, 0x49,
-  0xbc, 0x84, 0xdf, 0xb1, 0x2c, 0x16, 0xcd, 0x32, 0x59, 0x88, 0xf9, 0xde,
-  0xde, 0xd8, 0x18, 0xd9, 0x66, 0x33, 0x38, 0x68, 0xbc, 0xe9, 0xdf, 0x43,
-  0x9a, 0xe4, 0x31, 0x88, 0xdf, 0x60, 0x42, 0xbf, 0x18, 0x34, 0x5b, 0x26,
-  0x7b, 0x0a, 0x16, 0x2e, 0x7b, 0x9c, 0x57, 0xcd, 0x49, 0xe1, 0x2b, 0xe7,
-  0xb9, 0xb0, 0x54, 0xb3, 0xcb, 0xc2, 0x20, 0xcb, 0xd5, 0x73, 0xe7, 0x09,
-  0xa2, 0x91, 0xac, 0xde, 0x89, 0xe7, 0xcb, 0x97, 0x80, 0xd5, 0x54, 0x75,
-  0x91, 0xb9, 0x3c, 0xc8, 0x9d, 0xff, 0xbd, 0x93, 0xf4, 0x13, 0x2d, 0x77,
-  0xdd, 0x81, 0x41, 0xf4, 0xff, 0x43, 0x0c, 0x96, 0x82, 0xa9, 0x72, 0x9b,
-  0x2d, 0x04, 0xd2, 0x21, 0xa9, 0x50, 0x37, 0xe5, 0xc4, 0x53, 0x3f, 0x49,
-  0x07, 0xd9, 0x1d, 0xeb, 0x2f, 0xa6, 0x23, 0x28, 0x9a, 0x87, 0x94, 0x35,
-  0x75, 0xf8, 0x48, 0x40, 0xc3, 0xb8, 0x72, 0x56, 0x3d, 0xae, 0x30, 0x28,
-  0xe5, 0xf6, 0x44, 0xac, 0x47, 0xb5, 0x19, 0xf3, 0xa0, 0x4a, 0xc2, 0xbb,
-  0xd3, 0xdb, 0xab, 0xa4, 0x2a, 0xe4, 0x5f, 0xcb, 0x3f, 0xd2, 0x18, 0x2f,
-  0x25, 0xff, 0xa0, 0x8a, 0x59, 0x50, 0xfe, 0xd3, 0x82, 0x4f, 0x25, 0xb0,
-  0xce, 0x3c, 0x93, 0x36, 0x48, 0x93, 0x02, 0xd8, 0x71, 0x09, 0x10, 0x46,
-  0x05, 0x06, 0xe1, 0xa0, 0x32, 0xc6, 0x8a, 0x95, 0xfc, 0x6d, 0xae, 0x4f,
-  0x67, 0x9a, 0x8c, 0x5d, 0xa9, 0x96, 0xd1, 0xb1, 0x11, 0x56, 0x0b, 0x96,
-  0xe1, 0xeb, 0xdd, 0x8f, 0x1c, 0x79, 0x38, 0xe9, 0xee, 0x52, 0x86, 0x31,
-  0xf3, 0x22, 0x81, 0x4d, 0x49, 0x2b, 0x5c, 0x4a, 0x1c, 0x47, 0x18, 0x9b,
-  0xe2, 0x83, 0x37, 0xaf, 0x39, 0xe1, 0x43, 0x4d, 0x52, 0x0a, 0x35, 0x02,
-  0xfb, 0xd7, 0x4d, 0xae, 0x21, 0xa6, 0xb2, 0xea, 0xcd, 0xfa, 0x81, 0xb0,
-  0xf0, 0x71, 0x74, 0x81, 0x77, 0xb0, 0xba, 0x18, 0x88, 0x61, 0x7c, 0x60,
-  0x86, 0x0e, 0x03, 0x54, 0x2f, 0x91, 0x93, 0x30, 0xbd, 0x5c, 0x02, 0x32,
-  0x5c, 0xd8, 0xf3, 0x27, 0xf6, 0x1e, 0x76, 0xc9, 0xf1, 0xac, 0x8b, 0x44,
-  0x72, 0x49, 0x14, 0xc9, 0x8d, 0x2f, 0x94, 0xfd, 0x3d, 0x28, 0xa6, 0x12,
-  0xbe, 0x01, 0x54, 0x4d, 0x6b, 0xc1, 0xe0, 0xcc, 0xda, 0x8b, 0xbf, 0xdd,
-  0xd7, 0x55, 0x72, 0xc9, 0xf7, 0xea, 0x6d, 0x16, 0xb9, 0x30, 0xf0, 0x3b,
-  0x35, 0xea, 0x64, 0x49, 0x42, 0x77, 0x55, 0x97, 0xab, 0x49, 0x03, 0x41,
-  0x0f, 0x14, 0xd1, 0xf0, 0xd2, 0xbb, 0x35, 0x2e, 0x42, 0xdd, 0xfe, 0xe4,
-  0x5c, 0xd5, 0x7b, 0xd1, 0x3e, 0x78, 0x64, 0x5b, 0x69, 0x23, 0xdf, 0xc5,
-  0x95, 0x50, 0x0c, 0xfb, 0xdd, 0x76, 0x54, 0x36, 0x38, 0x77, 0xc9, 0xf5,
-  0xad, 0x42, 0xd8, 0x9c, 0xa8, 0x10, 0xdc, 0xbd, 0x2a, 0x88, 0x41, 0xf0,
-  0x28, 0x13, 0x85, 0x44, 0x84, 0x58, 0xc3, 0x26, 0xcb, 0x0d, 0x07, 0x5b,
-  0x48, 0x43, 0x1a, 0x68, 0xd4, 0xaa, 0x38, 0x82, 0x77, 0x68, 0x21, 0xad,
-  0x10, 0x8a, 0xab, 0x00, 0x54, 0x79, 0xe8, 0xc3, 0x56, 0xc8, 0x2a, 0x10,
-  0x94, 0x9c, 0x7c, 0xa8, 0x58, 0x6e, 0xba, 0x7e, 0x43, 0x57, 0x98, 0x5e,
-  0x7b, 0x68, 0x8b, 0x13, 0xf1, 0xdd, 0x78, 0x2e, 0x48, 0x25, 0x11, 0x1d,
-  0xbd, 0x34, 0x9b, 0x2a, 0x58, 0x0e, 0xd6, 0x86, 0x35, 0x1b, 0xdb, 0x24,
-  0x5a, 0x57, 0xeb, 0x82, 0x86, 0xc0, 0x33, 0xde, 0x9c, 0x65, 0xbb, 0x9b,
-  0x41, 0x09, 0xa3, 0x2d, 0x89, 0xff, 0x2f, 0xa0, 0xfd, 0x38, 0x2c, 0x41,
-  0xb1, 0x5e, 0x70, 0x9c, 0xdb, 0x76, 0xc7, 0x50, 0xa8, 0x89, 0x5f, 0x3a,
-  0x98, 0xbd, 0x67, 0xfb, 0xc3, 0xbd, 0xa7, 0x9f, 0x0f, 0x77, 0x87, 0x7b,
-  0xbb, 0xcc, 0x5f, 0x78, 0x28, 0xc1, 0xe0, 0x64, 0x5d, 0x3a, 0xba, 0x6a,
-  0xbc, 0x17, 0xf7, 0xf9, 0xe6, 0xf8, 0xf2, 0xfb, 0xb3, 0x8b, 0x6f, 0x93,
-  0x93, 0x37, 0x97, 0xc7, 0x17, 0xaf, 0x0e, 0x8f, 0x3e, 0x15, 0x1e, 0x3d,
-  0x34, 0x5b, 0x07, 0x55, 0x7c, 0x33, 0xbf, 0x30, 0xb1, 0x6d, 0xd0, 0xaf,
-  0x59, 0x56, 0xdf, 0xec, 0x1e, 0xec, 0x3d, 0x08, 0xa0, 0xdc, 0x61, 0x1e,
-  0xf4, 0xef, 0xdb, 0xa4, 0xf6, 0x78, 0x52, 0xeb, 0x5b, 0x71, 0xc8, 0x89,
-  0x23, 0x09, 0xb3, 0x72, 0x21, 0xba, 0x60, 0xf3, 0x28, 0x12, 0x93, 0x8f,
-  0xcb, 0xd4, 0x0c, 0x53, 0x63, 0x41, 0x71, 0x95, 0x4c, 0x5b, 0xc5, 0x80,
-  0xd1, 0x70, 0x74, 0xe5, 0xb9, 0x1b, 0x52, 0x31, 0xb7, 0x56, 0x73, 0x8a,
-  0x80, 0xb2, 0x4e, 0x21, 0xe2, 0x19, 0x57, 0xd6, 0x34, 0x36, 0xa6, 0x16,
-  0x2d, 0xe2, 0x28, 0x78, 0x80, 0x53, 0x97, 0x32, 0xe2, 0x00, 0x09, 0x10,
-  0x05, 0x61, 0x72, 0x3a, 0xc6, 0xda, 0x2c, 0x7a, 0x1c, 0x46, 0xd2, 0xb6,
-  0x10, 0x51, 0x2b, 0x0b, 0x71, 0xc6, 0xc4, 0x1a, 0xa6, 0xd1, 0x23, 0x1d,
-  0x08, 0x4e, 0x43, 0x30, 0x1a, 0xe9, 0x0a, 0x02, 0x95, 0x41, 0x73, 0x37,
-  0xf1, 0x7c, 0xe5, 0x8e, 0x42, 0x1a, 0x85, 0xc8, 0x7f, 0x56, 0x43, 0x80,
-  0x5b, 0xaf, 0x1a, 0x18, 0x82, 0x89, 0x14, 0xee, 0x09, 0x5f, 0x17, 0x51,
-  0x1b, 0x81, 0x9a, 0xd3, 0x32, 0xbd, 0x43, 0xf5, 0x89, 0xdc, 0x23, 0x82,
-  0x6e, 0x24, 0x8d, 0xea, 0x43, 0x2c, 0x38, 0xf9, 0x35, 0x4f, 0xce, 0x8f,
-  0x5f, 0x0f, 0xac, 0x66, 0x2a, 0xfd, 0x2e, 0xc6, 0x28, 0x83, 0x7f, 0x94,
-  0x34, 0x9f, 0x65, 0xb6, 0xb0, 0xb0, 0x1a, 0xf0, 0x44, 0x8d, 0x03, 0x0a,
-  0x27, 0xc0, 0x87, 0xc6, 0x01, 0x44, 0x6a, 0xf4, 0xa8, 0x85, 0x5f, 0x3a,
-  0x04, 0xd3, 0x06, 0x6a, 0x26, 0xef, 0xa7, 0xc6, 0x2e, 0x27, 0x5b, 0x2e,
-  0x5e, 0x97, 0xfb, 0x43, 0x50, 0x2a, 0x62, 0x06, 0x5c, 0x98, 0x40, 0x61,
-  0x49, 0xd8, 0xe7, 0xdf, 0x1e, 0x8d, 0xfe, 0xb8, 0xb7, 0xaf, 0xc3, 0xd9,
-  0x1e, 0x7a, 0x7c, 0xdd, 0x28, 0x3f, 0x1f, 0xec, 0x3a, 0x1c, 0xa3, 0x65,
-  0x5b, 0xe3, 0x80, 0x63, 0x33, 0xb6, 0x5c, 0x8e, 0xd0, 0x76, 0x23, 0x49,
-  0x68, 0x43, 0x4a, 0x77, 0x9b, 0x88, 0xe9, 0xea, 0x9a, 0xb2, 0x4b, 0x04,
-  0xd5, 0x6f, 0xb4, 0xfe, 0x4c, 0xed, 0xa2, 0xfe, 0xd2, 0x85, 0x7d, 0x24,
-  0x2d, 0x6b, 0x6b, 0x48, 0x27, 0xf7, 0x91, 0x2d, 0xed, 0x3d, 0xe7, 0xf5,
-  0xf6, 0xdf, 0x32, 0x8c, 0xab, 0xde, 0xec, 0x86, 0xd7, 0xe3, 0xbb, 0xc1,
-  0x01, 0xd0, 0x40, 0xf6, 0xa9, 0x55, 0xb8, 0x5a, 0xf8, 0xa2, 0x13, 0xfc,
-  0xf4, 0x19, 0x6d, 0x14, 0x9d, 0x2c, 0x81, 0x70, 0x60, 0xa6, 0x50, 0xcc,
-  0x58, 0x75, 0x71, 0x8f, 0xbc, 0x2c, 0xb9, 0xba, 0xc7, 0x52, 0x42, 0x4a,
-  0xdf, 0x0c, 0x93, 0x6f, 0xb2, 0x05, 0xe7, 0xd0, 0x73, 0xf0, 0x9d, 0xa5,
-  0x61, 0x21, 0x44, 0x90, 0x4b, 0xec, 0xa1, 0xe4, 0xd8, 0x69, 0x96, 0x2a,
-  0x64, 0x26, 0xf1, 0xba, 0x4a, 0x34, 0x5c, 0x2b, 0xb7, 0x93, 0x72, 0xa0,
-  0x9e, 0xe2, 0x7b, 0x3a, 0xdc, 0x0b, 0x7e, 0x40, 0x1a, 0xd8, 0x6a, 0xe2,
-  0x5e, 0x02, 0x40, 0x1f, 0xcd, 0xe9, 0x31, 0x87, 0xaf, 0x49, 0xad, 0xca,
-  0x37, 0x00, 0x7f, 0x66, 0x6b, 0xa1, 0x68, 0x5c, 0x9e, 0xa9, 0x4c, 0xcb,
-  0x1b, 0x36, 0x7d, 0x54, 0x74, 0xdd, 0xa4, 0x8b, 0xc9, 0xfd, 0x70, 0x4a,
-  0xb2, 0x2c, 0x1b, 0xcf, 0x86, 0xab, 0xdb, 0x9d, 0xe0, 0x98, 0x32, 0xcb,
-  0xbf, 0x11, 0xb8, 0x80, 0xa6, 0xe1, 0xdb, 0x6a, 0xb9, 0xc6, 0xc8, 0x5e,
-  0x69, 0xe3, 0x4c, 0x30, 0x49, 0x58, 0xe2, 0xbf, 0x1c, 0xcf, 0xb5, 0x18,
-  0x58, 0xc7, 0x89, 0xc3, 0x1d, 0xe6, 0x16, 0x86, 0xcb, 0x6c, 0x7e, 0xe0,
-  0x12, 0x93, 0x8d, 0x3f, 0x68, 0x0d, 0x03, 0xa7, 0x58, 0x04, 0x46, 0xda,
-  0x45, 0x76, 0x3d, 0x53, 0x81, 0x22, 0x54, 0x5d, 0x3c, 0x8e, 0x74, 0x9c,
-  0x0d, 0x22, 0x0a, 0xcf, 0x9d, 0x20, 0xae, 0x42, 0x62, 0x27, 0x3a, 0xac,
-  0x35, 0xba, 0x56, 0x1e, 0x46, 0x3d, 0x75, 0xdf, 0x88, 0x82, 0x88, 0x00,
-  0x02, 0x19, 0x75, 0xb3, 0xc5, 0xc4, 0x63, 0x41, 0x49, 0xea, 0x7e, 0x62,
-  0x9c, 0x56, 0x50, 0x08, 0x40, 0xc7, 0x35, 0x40, 0x1a, 0xce, 0x4f, 0x2b,
-  0x99, 0x2a, 0x67, 0x85, 0xbe, 0x7e, 0xff, 0x88, 0x2d, 0xde, 0x97, 0xa7,
-  0x23, 0xf3, 0x8a, 0x2c, 0xb2, 0xbb, 0x80, 0xb4, 0x04, 0x28, 0x5f, 0xe9,
-  0x8f, 0x0d, 0x40, 0x82, 0x78, 0x0c, 0xe0, 0x03, 0x8c, 0x44, 0xb8, 0x82,
-  0x77, 0x93, 0xf9, 0x3c, 0x08, 0x5b, 0x04, 0x8d, 0x28, 0xe6, 0xa1, 0x58,
-  0x65, 0x27, 0x11, 0x86, 0x1c, 0xe8, 0x0b, 0x43, 0xeb, 0x91, 0xb0, 0xf4,
-  0xa8, 0x9f, 0x0c, 0xf6, 0x01, 0xa5, 0xb3, 0xd7, 0x5c, 0xc4, 0xb4, 0x16,
-  0x14, 0x3f, 0x6e, 0x83, 0x5a, 0xb2, 0x56, 0x94, 0x1d, 0x6c, 0x29, 0x49,
-  0xbf, 0xa7, 0xf7, 0xf9, 0x9f, 0x7d, 0x9d, 0xd0, 0xfb, 0x3d, 0x04, 0x6f,
-  0x0b, 0xac, 0xe4, 0xec, 0x3e, 0x16, 0x19, 0xf6, 0x1f, 0xdc, 0x55, 0xa4,
-  0x49, 0xdc, 0xe5, 0x0e, 0xdf, 0x59, 0x20, 0xfe, 0x61, 0x0a, 0x55, 0xc4,
-  0x4e, 0x1b, 0x00, 0x2d, 0xa1, 0x1a, 0xb9, 0x17, 0xc9, 0xfb, 0x7d, 0xf3,
-  0x35, 0xf3, 0x37, 0xb6, 0x6e, 0x62, 0xac, 0xf7, 0x4c, 0x24, 0xca, 0x60,
-  0xe4, 0x80, 0xb7, 0x80, 0x6a, 0x39, 0x01, 0x8a, 0x68, 0x96, 0xb8, 0x48,
-  0x83, 0xcb, 0x14, 0x0b, 0x35, 0x2b, 0x48, 0xf6, 0x7b, 0xba, 0x90, 0xcd,
-  0x20, 0x39, 0xd8, 0x87, 0x39, 0x21, 0x08, 0x3c, 0x08, 0x8e, 0x3c, 0x59,
-  0xb8, 0x9c, 0x09, 0x35, 0xe5, 0x03, 0x41, 0x0f, 0xdb, 0x7f, 0x93, 0x8b,
-  0x61, 0x02, 0x61, 0xa7, 0xb8, 0xce, 0xe9, 0xe4, 0x6f, 0x26, 0x74, 0x98,
-  0x56, 0xcc, 0xf1, 0x6b, 0x57, 0x66, 0x6a, 0x24, 0xc8, 0x9b, 0x9b, 0x21,
-  0x9b, 0x1b, 0x7c, 0xc1, 0x53, 0xa9, 0x36, 0xfd, 0xdc, 0x15, 0x78, 0xbc,
-  0x39, 0x11, 0xf5, 0x73, 0x58, 0x61, 0xa5, 0xf3, 0xd2, 0xea, 0x47, 0x6f,
-  0x1e, 0x7f, 0x60, 0x19, 0x67, 0x53, 0x7b, 0x92, 0xaf, 0x25, 0xbd, 0x1f,
-  0x6b, 0x74, 0x7e, 0xf2, 0x46, 0x2a, 0x22, 0xbb, 0xb3, 0x90, 0x31, 0x32,
-  0xe2, 0x86, 0x14, 0xf3, 0xc6, 0x78, 0x52, 0x85, 0x90, 0x48, 0xc4, 0x70,
-  0xc4, 0x34, 0xc3, 0x34, 0x9e, 0x6b, 0x5f, 0x17, 0x2b, 0xe9, 0x7d, 0x93,
-  0xef, 0xb9, 0xaa, 0x9a, 0x6d, 0xb6, 0xaa, 0x7c, 0xba, 0x3d, 0x69, 0x5d,
-  0x28, 0xce, 0x22, 0x35, 0x99, 0x86, 0x35, 0xd2, 0xb5, 0x95, 0x06, 0x9f,
-  0xeb, 0xb7, 0x92, 0x1e, 0x43, 0x53, 0xf8, 0x1f, 0x93, 0xe1, 0x0e, 0x75,
-  0x58, 0xed, 0xd8, 0x8b, 0xcb, 0xdb, 0x49, 0x45, 0x37, 0x1c, 0x67, 0xf8,
-  0xfe, 0xe8, 0xd0, 0xe1, 0x79, 0xc4, 0xd3, 0x9f, 0x93, 0xc1, 0x64, 0x86,
-  0xf9, 0x25, 0xa8, 0x27, 0xfc, 0x23, 0xed, 0x3c, 0x3f, 0xf1, 0xb3, 0xdb,
-  0xc3, 0x57, 0x39, 0x9f, 0xb7, 0x0f, 0x7d, 0x9b, 0xfa, 0x99, 0x28, 0x0c,
-  0x02, 0x3f, 0x9b, 0x1c, 0x4e, 0xdf, 0x73, 0xfe, 0xdd, 0x54, 0xff, 0xe4,
-  0xf9, 0x1c, 0x2f, 0x50, 0x89, 0x11, 0x33, 0x4d, 0xc7, 0x52, 0x7c, 0xf9,
-  0xbb, 0x9c, 0x94, 0x8e, 0xa3, 0x96, 0x7c, 0xc1, 0xa9, 0x80, 0x3c, 0x40,
-  0xbc, 0x15, 0x7c, 0x69, 0x79, 0x1d, 0x7d, 0x4d, 0x5f, 0xf0, 0x91, 0x7f,
-  0xcc, 0x9d, 0x79, 0xeb, 0x86, 0xc9, 0x57, 0xec, 0xe3, 0x2c, 0xb3, 0x00,
-  0x9c, 0x55, 0x2f, 0x3e, 0xa9, 0x58, 0xc6, 0x9b, 0x91, 0x0a, 0x14, 0xc5,
-  0xd0, 0xcd, 0x24, 0x4a, 0x87, 0x71, 0x73, 0x72, 0xdf, 0x34, 0x27, 0x87,
-  0x71, 0x59, 0x76, 0x3b, 0x4d, 0xc5, 0x52, 0x27, 0x92, 0x68, 0x2a, 0x01,
-  0x6c, 0xa4, 0x8c, 0x50, 0x2e, 0xcc, 0x69, 0x66, 0x39, 0xfe, 0x45, 0x08,
-  0xac, 0x62, 0x96, 0x63, 0x34, 0x65, 0x12, 0x81, 0x23, 0x09, 0xdc, 0xe1,
-  0x7e, 0xd4, 0x47, 0x37, 0xc4, 0x9a, 0x33, 0x37, 0xd4, 0x91, 0x98, 0xf4,
-  0x6c, 0x88, 0x23, 0xbe, 0xa3, 0x6c, 0x13, 0xdc, 0x97, 0x96, 0x28, 0x09,
-  0x29, 0x74, 0x47, 0x78, 0x97, 0xa3, 0x5d, 0x59, 0xdd, 0xe6, 0x14, 0x38,
-  0xbf, 0x71, 0xf4, 0xf6, 0x35, 0x17, 0xe2, 0x40, 0x81, 0xde, 0xcb, 0x8b,
-  0xc3, 0x37, 0xa3, 0x57, 0x62, 0x1a, 0xbf, 0x2c, 0x82, 0xba, 0xbf, 0xea,
-  0x57, 0x30, 0xff, 0xb1, 0x43, 0x8c, 0xbb, 0x93, 0xea, 0x10, 0x16, 0x5a,
-  0xaf, 0x45, 0x81, 0xfb, 0x6d, 0x14, 0x7c, 0xa9, 0x28, 0xcc, 0xab, 0xc1,
-  0x43, 0xdb, 0x1a, 0x6d, 0x3b, 0x41, 0xa8, 0x0a, 0x2b, 0x60, 0xf9, 0xc2,
-  0xdc, 0x06, 0xdc, 0xac, 0x0f, 0xf1, 0xb2, 0x1c, 0xd9, 0x60, 0xec, 0x53,
-  0xb9, 0x7b, 0xd7, 0x62, 0x85, 0x1e, 0x91, 0xaa, 0x38, 0xd0, 0xba, 0x2a,
-  0x41, 0xbd, 0x2f, 0x67, 0x4e, 0x95, 0xbb, 0x57, 0x51, 0xfd, 0x5c, 0xe3,
-  0x61, 0x0a, 0xa8, 0x35, 0xbd, 0xf5, 0xaf, 0x7b, 0xdb, 0xdd, 0xcd, 0x5f,
-  0xfe, 0xd2, 0xe6, 0xbb, 0xc7, 0x6e, 0xba, 0x99, 0xcf, 0x2e, 0xda, 0xfa,
-  0xd7, 0xfd, 0xed, 0x07, 0x67, 0x14, 0x26, 0x48, 0xfa, 0x3e, 0xe9, 0x0d,
-  0x1e, 0x6c, 0xf2, 0xc2, 0xca, 0xbc, 0xab, 0xcc, 0xe4, 0x22, 0x74, 0x02,
-  0x38, 0xe0, 0x06, 0x76, 0x07, 0x47, 0x70, 0x3b, 0x49, 0xdd, 0x3b, 0xde,
-  0x34, 0xd1, 0xe4, 0xe4, 0x7f, 0x1d, 0x87, 0x28, 0x8f, 0x8b, 0xcd, 0x3a,
-  0xbc, 0xa2, 0x18, 0x28, 0xa0, 0x2a, 0x86, 0xe8, 0x7b, 0xff, 0x81, 0xbe,
-  0xfd, 0xec, 0x02, 0xb3, 0x04, 0x7b, 0xb1, 0x39, 0x0c, 0xce, 0xc0, 0xaa,
-  0xb5, 0x9f, 0x0d, 0x5f, 0x50, 0x7a, 0x7d, 0x7f, 0x97, 0x27, 0xaf, 0x8f,
-  0x19, 0xd4, 0xfa, 0xe5, 0x09, 0xe3, 0xd0, 0x8d, 0x14, 0x09, 0xd2, 0x2c,
-  0x10, 0x0e, 0x30, 0x37, 0xac, 0x8e, 0x22, 0xee, 0x5d, 0x17, 0x6d, 0xe6,
-  0x38, 0x87, 0xdb, 0x09, 0xee, 0x5a, 0xc3, 0xa1, 0x2b, 0x4b, 0xba, 0x3c,
-  0xb9, 0x1a, 0xbc, 0x2e, 0xa6, 0xd0, 0x92, 0x07, 0x23, 0x84, 0x0a, 0xd2,
-  0x5b, 0xf4, 0xe1, 0xdb, 0xc5, 0xbc, 0xf1, 0xf1, 0xb0, 0x23, 0x69, 0x77,
-  0x63, 0x5d, 0x09, 0x99, 0x7f, 0xec, 0x0c, 0x06, 0x28, 0xe7, 0x2e, 0x61,
-  0x5d, 0xea, 0xdc, 0x69, 0x40, 0x75, 0x18, 0x6b, 0xa1, 0x05, 0xca, 0x67,
-  0xf7, 0x12, 0x88, 0x90, 0xfa, 0xf0, 0x31, 0x9f, 0xc8, 0x79, 0xcd, 0xc9,
-  0x64, 0xde, 0xc4, 0x27, 0x46, 0xbc, 0x8d, 0x10, 0x5b, 0x14, 0x8a, 0x54,
-  0x76, 0xe7, 0xe3, 0x9f, 0xb4, 0x3a, 0x6d, 0xb1, 0xbc, 0xc7, 0x2c, 0xef,
-  0x1a, 0xa1, 0x15, 0x9d, 0xfe, 0xd5, 0x7f, 0xc8, 0x3b, 0x8d, 0xa2, 0x49,
-  0x0a, 0x01, 0x1d, 0x50, 0xa0, 0x7e, 0xa2, 0x35, 0x86, 0xce, 0xca, 0xe0,
-  0xba, 0xd2, 0x61, 0x5b, 0x2d, 0xb1, 0x00, 0x77, 0x34, 0x80, 0x49, 0x6d,
-  0x8e, 0x33, 0xc4, 0x68, 0x2d, 0x38, 0x0b, 0xf6, 0x65, 0xe1, 0x9c, 0x63,
-  0xc4, 0x76, 0x96, 0xcd, 0xfa, 0xaf, 0x59, 0x62, 0xf9, 0xde, 0x92, 0xce,
-  0xbf, 0x39, 0xd8, 0x44, 0xd9, 0x84, 0x7c, 0xd1, 0x31, 0x99, 0xc1, 0x2f,
-  0x9f, 0x4d, 0xe4, 0x7a, 0x4d, 0x7a, 0x57, 0x8c, 0x89, 0xc1, 0x7e, 0xac,
-  0x9e, 0x0c, 0x40, 0x20, 0x63, 0x84, 0xb8, 0xe8, 0x82, 0x60, 0xbe, 0x66,
-  0x8a, 0xa4, 0x28, 0xd5, 0x2e, 0x32, 0xd6, 0x19, 0xc9, 0xc5, 0x2a, 0xc9,
-  0x8c, 0x74, 0xb5, 0x9c, 0x22, 0x28, 0x43, 0xc2, 0x51, 0xff, 0x07, 0x63,
-  0x56, 0x97, 0xf7, 0xc9, 0xde, 0x7e, 0x3f, 0xd9, 0xdf, 0xdd, 0xdb, 0xef,
-  0x98, 0x43, 0xef, 0x7f, 0x70, 0x50, 0xd4, 0x3e, 0xbe, 0xee, 0x7d, 0xea,
-  0x2c, 0x7c, 0x6a, 0x03, 0x6e, 0x12, 0x4d, 0x02, 0x26, 0xe6, 0xc3, 0xfe,
-  0x59, 0x29, 0x60, 0xcf, 0x45, 0x61, 0x81, 0x6c, 0x87, 0x6b, 0x4b, 0x8c,
-  0x84, 0x56, 0xd0, 0xd0, 0x15, 0xba, 0xe2, 0x27, 0x36, 0xb4, 0x2e, 0x27,
-  0x22, 0x5f, 0x9c, 0xa5, 0x34, 0x2d, 0x51, 0xad, 0xb1, 0xb9, 0x47, 0x79,
-  0x6d, 0xdb, 0xc2, 0xa1, 0x35, 0xbc, 0x37, 0x44, 0xef, 0x2f, 0x4f, 0x8e,
-  0x2e, 0x0d, 0xfa, 0xf0, 0x8a, 0x85, 0xa7, 0xf2, 0xfe, 0xd3, 0x4a, 0xdf,
-  0x3d, 0xf8, 0xcc, 0xf4, 0xe0, 0x26, 0x23, 0x31, 0x7a, 0x31, 0x5e, 0x5d,
-  0x1f, 0xfc, 0x2d, 0x2d, 0xaf, 0x8b, 0xc5, 0xc7, 0x9e, 0x9f, 0x22, 0xb7,
-  0xec, 0x80, 0x38, 0xd4, 0xde, 0xb3, 0xbd, 0x47, 0x92, 0xb8, 0x90, 0x73,
-  0x9d, 0x4c, 0x30, 0x88, 0xcd, 0xf9, 0xa6, 0x60, 0x6d, 0x20, 0x63, 0xc2,
-  0x01, 0x6c, 0x2c, 0xa6, 0x9b, 0x72, 0xdd, 0xa7, 0xe1, 0xb3, 0x53, 0x7d,
-  0x56, 0xb2, 0xd0, 0x37, 0x37, 0xa4, 0x74, 0xc9, 0x26, 0x67, 0x6c, 0xae,
-  0x96, 0x9b, 0x4d, 0x04, 0xf7, 0x8f, 0xcc, 0x95, 0xbb, 0x70, 0x95, 0xfe,
-  0x8e, 0x1c, 0x2e, 0x3d, 0x92, 0x89, 0xca, 0x2c, 0xbd, 0xf5, 0x55, 0x62,
-  0x3d, 0x10, 0x87, 0xb9, 0x3c, 0x2e, 0x5e, 0x1d, 0x09, 0x98, 0xa9, 0xa5,
-  0x4e, 0x61, 0xa9, 0x13, 0x67, 0x9a, 0xda, 0xe6, 0x51, 0x7e, 0xa4, 0x7f,
-  0xce, 0x6d, 0x38, 0x98, 0x8e, 0x3f, 0xe1, 0x21, 0x3a, 0x77, 0x82, 0x1b,
-  0x77, 0xd8, 0x2c, 0x88, 0xc3, 0x8a, 0x1a, 0xca, 0x7b, 0x58, 0x49, 0xd8,
-  0x2d, 0x29, 0xfb, 0x29, 0x1e, 0x07, 0x1e, 0x9a, 0x15, 0xda, 0x35, 0xeb,
-  0x0e, 0x8d, 0x9b, 0x4b, 0x6a, 0xbe, 0x3c, 0x3c, 0x0f, 0x14, 0x5d, 0x28,
-  0x92, 0xde, 0xa8, 0xc7, 0xcf, 0xb1, 0xa2, 0x83, 0x8a, 0xd3, 0x62, 0xfb,
-  0xbb, 0xef, 0x7b, 0x15, 0xa5, 0x06, 0x9f, 0x64, 0xd9, 0x08, 0x01, 0xf2,
-  0x85, 0xde, 0x27, 0xb0, 0x3f, 0xa1, 0xd8, 0xc0, 0x6c, 0x9a, 0xc2, 0x11,
-  0xaa, 0xb7, 0x10, 0x64, 0x2e, 0xb4, 0x95, 0x6b, 0x34, 0x14, 0xed, 0xcd,
-  0x87, 0x44, 0x93, 0x38, 0x34, 0x5b, 0x45, 0xcb, 0x81, 0xe0, 0x31, 0x4e,
-  0x50, 0xbe, 0xb7, 0x09, 0x08, 0x7f, 0xa6, 0xc1, 0xa7, 0xd5, 0x2d, 0xb1,
-  0x52, 0x71, 0xe0, 0x53, 0xef, 0xb9, 0xba, 0xc0, 0xd9, 0xe8, 0x93, 0x4b,
-  0x20, 0x0d, 0x9b, 0x9f, 0x00, 0x89, 0xd4, 0xd8, 0x30, 0xb9, 0x82, 0x58,
-  0xe3, 0x9c, 0x55, 0x99, 0x00, 0x18, 0x26, 0x97, 0x77, 0x85, 0xa8, 0x18,
-  0x95, 0x85, 0xd7, 0x4a, 0x28, 0x6a, 0xb5, 0xca, 0x45, 0x8a, 0xa4, 0xcd,
-  0x03, 0x3f, 0x08, 0x6a, 0x76, 0xf6, 0x9c, 0xe5, 0xeb, 0xa5, 0xf3, 0x7b,
-  0x8e, 0x5e, 0x7e, 0x9b, 0x70, 0x6a, 0x3d, 0xf7, 0x71, 0xc4, 0x70, 0xfb,
-  0x1c, 0xc2, 0x30, 0x87, 0xf6, 0xf7, 0xf5, 0x8a, 0xcf, 0xfb, 0xd1, 0x4d,
-  0xba, 0x64, 0x05, 0x68, 0x6f, 0x97, 0xcd, 0x25, 0xdf, 0x5b, 0x92, 0x1e,
-  0x1f, 0x54, 0xab, 0xe7, 0x5d, 0xf5, 0x02, 0x4b, 0xca, 0x94, 0xcb, 0x71,
-  0xb3, 0x06, 0xd4, 0x34, 0xd2, 0xd2, 0xf5, 0x59, 0xed, 0x08, 0xc8, 0x7e,
-  0x45, 0xa4, 0x51, 0x56, 0xd3, 0xdb, 0x9d, 0x09, 0xfd, 0x78, 0xb4, 0xbb,
-  0x03, 0x4c, 0xcd, 0x1a, 0x36, 0x4d, 0xa6, 0xc9, 0xfd, 0xfd, 0x27, 0x4f,
-  0xfa, 0x49, 0x8f, 0xad, 0x8c, 0xd6, 0x01, 0x1f, 0x09, 0x3a, 0x59, 0xbd,
-  0xae, 0xe2, 0xa5, 0x3b, 0xe5, 0xd5, 0x84, 0xff, 0xc7, 0xaf, 0x59, 0x09,
-  0xc2, 0x4b, 0xcd, 0xba, 0xc1, 0x3a, 0x2c, 0x42, 0x98, 0x1c, 0x21, 0x2b,
-  0xfe, 0xee, 0xc4, 0xd9, 0x91, 0xd8, 0x69, 0xb4, 0xcc, 0x8a, 0xa5, 0x79,
-  0x87, 0xe7, 0x5a, 0xbe, 0x03, 0xdd, 0x07, 0x2e, 0x35, 0xf8, 0xf3, 0x25,
-  0x1c, 0x4e, 0xf1, 0x10, 0xaa, 0xd5, 0x78, 0xa0, 0x89, 0xc1, 0xa2, 0x55,
-  0xe6, 0x74, 0x72, 0xe9, 0xcf, 0x99, 0x99, 0xeb, 0x23, 0x8e, 0xfc, 0x55,
-  0xd2, 0x53, 0xda, 0xe2, 0x7f, 0x86, 0x70, 0xee, 0x66, 0x13, 0x9e, 0x46,
-  0xf1, 0x42, 0xff, 0xf8, 0xb7, 0x7f, 0xa3, 0x66, 0xff, 0x8d, 0x5b, 0x79,
-  0xf1, 0xaf, 0x55, 0x7d, 0x13, 0x3c, 0xd3, 0x53, 0x82, 0x3f, 0xf1, 0xae,
-  0x6d, 0x84, 0xab, 0x01, 0x71, 0x16, 0xf9, 0x6b, 0xaf, 0x4f, 0x95, 0x23,
-  0xf7, 0x83, 0xf9, 0xe5, 0xc8, 0x2c, 0x14, 0x23, 0xa9, 0x8b, 0x16, 0xf9,
-  0x8a, 0xdd, 0xce, 0x19, 0x67, 0xa4, 0xd3, 0x45, 0x02, 0x40, 0xc1, 0x6d,
-  0x13, 0x31, 0x8e, 0xdf, 0x7c, 0x77, 0x72, 0x71, 0xf6, 0xe6, 0xf5, 0xf1,
-  0x9b, 0xcb, 0xe4, 0xbb, 0xc3, 0x8b, 0x93, 0xc3, 0xaf, 0x4e, 0x35, 0xf1,
-  0x9d, 0xa7, 0xc0, 0x41, 0x3e, 0x22, 0x7b, 0xb7, 0x00, 0x61, 0x83, 0x44,
-  0xa4, 0xce, 0xd2, 0x1e, 0xad, 0x1a, 0xb4, 0xef, 0x14, 0x61, 0x1c, 0x9a,
-  0xc8, 0x3b, 0x54, 0x29, 0xea, 0xb3, 0xf0, 0xf9, 0xce, 0x0a, 0x16, 0xb1,
-  0xf2, 0x74, 0x1f, 0xa4, 0x52, 0x73, 0xfc, 0x11, 0x53, 0xa9, 0xf1, 0x27,
-  0x5f, 0xb9, 0xce, 0xd5, 0xbe, 0xf8, 0x5a, 0xb2, 0xf1, 0xad, 0x10, 0x88,
-  0xbd, 0xaa, 0x99, 0x61, 0xb0, 0xbb, 0xb9, 0x31, 0x1c, 0x9e, 0x9e, 0xfa,
-  0xae, 0x1e, 0xae, 0x11, 0xa3, 0x48, 0x4c, 0x92, 0xbc, 0x85, 0x46, 0xd9,
-  0x31, 0x78, 0x5d, 0x78, 0xb8, 0xf4, 0xc5, 0x7d, 0x88, 0x8c, 0xce, 0x9d,
-  0xd1, 0x76, 0x6c, 0x09, 0x84, 0x06, 0x7b, 0x89, 0xe9, 0x00, 0xe5, 0xd5,
-  0x6d, 0x3f, 0xd9, 0xfc, 0xd7, 0x4d, 0x49, 0xaa, 0xcb, 0x80, 0x1b, 0x2c,
-  0x15, 0x68, 0xb6, 0xfd, 0xa0, 0xde, 0x9c, 0xf9, 0x31, 0xa9, 0xe3, 0xd3,
-  0x0d, 0xc0, 0xbd, 0xe8, 0xdd, 0xd6, 0x95, 0xc9, 0x33, 0x88, 0x17, 0xf5,
-  0x8f, 0x6b, 0x99, 0x06, 0x87, 0x0c, 0xa0, 0x34, 0xca, 0x8e, 0xad, 0xce,
-  0x77, 0xa1, 0xb5, 0xa5, 0x93, 0x00, 0x1e, 0x1a, 0x73, 0x5d, 0xb0, 0xa9,
-  0xc3, 0x95, 0xce, 0x32, 0x6b, 0x20, 0x2d, 0x35, 0xdb, 0xf4, 0xd4, 0x9d,
-  0xb8, 0xaa, 0x94, 0x83, 0x82, 0xaa, 0x3e, 0xec, 0x58, 0x25, 0x1a, 0xf8,
-  0x18, 0x39, 0x1f, 0xa0, 0xcc, 0xa7, 0x0a, 0x37, 0xd8, 0x49, 0x15, 0x43,
-  0xb8, 0xa6, 0x2e, 0x8e, 0x80, 0xce, 0xbe, 0xe0, 0x12, 0x82, 0xbe, 0xd2,
-  0x05, 0x62, 0x87, 0x89, 0x8b, 0x94, 0x9c, 0x90, 0xb7, 0x50, 0x21, 0x04,
-  0xf1, 0xb8, 0x90, 0xd1, 0xd3, 0xeb, 0xc2, 0xe4, 0xef, 0xd4, 0x39, 0xcd,
-  0x5d, 0x3d, 0xb0, 0x40, 0xa6, 0x77, 0x18, 0x62, 0xce, 0x64, 0x09, 0xf7,
-  0xba, 0x39, 0x08, 0x38, 0xbc, 0x8c, 0xb7, 0xdc, 0xca, 0xf5, 0x56, 0x41,
-  0x96, 0xb6, 0xcf, 0x5e, 0x60, 0x5e, 0x22, 0x41, 0xfa, 0x06, 0xea, 0x05,
-  0x20, 0x35, 0xcb, 0xea, 0x46, 0xa0, 0x23, 0x86, 0xc5, 0x0f, 0xa2, 0x49,
-  0x8d, 0x59, 0x45, 0x93, 0x66, 0xbb, 0xa6, 0xd3, 0x33, 0xe3, 0x04, 0x32,
-  0xe3, 0x44, 0x69, 0x32, 0xce, 0xaf, 0x05, 0x1d, 0x80, 0x53, 0xd1, 0x99,
-  0x4a, 0x00, 0xf6, 0x46, 0x8a, 0x3d, 0x6f, 0x15, 0xa0, 0xdc, 0x20, 0xbb,
-  0xdf, 0x14, 0xb3, 0x10, 0x6f, 0xcc, 0x66, 0x52, 0x69, 0xa5, 0x33, 0x33,
-  0x7d, 0xc2, 0xf5, 0xb1, 0xe2, 0x75, 0xb4, 0x68, 0x34, 0x05, 0x2a, 0xd7,
-  0xd8, 0x3c, 0xb6, 0xa9, 0x03, 0x35, 0x71, 0x81, 0x4c, 0x20, 0xcb, 0xaa,
-  0xc6, 0x3a, 0x58, 0xdc, 0x32, 0x73, 0x0b, 0xd8, 0xd1, 0xb8, 0x5e, 0xe1,
-  0x96, 0x43, 0x1a, 0xe7, 0x56, 0x26, 0x82, 0xd5, 0xca, 0x44, 0x2f, 0x1e,
-  0xe5, 0x66, 0xb9, 0x1e, 0xdd, 0x2c, 0x45, 0xd1, 0x22, 0x9a, 0xe0, 0x41,
-  0xd3, 0x4a, 0x6d, 0x05, 0x8c, 0x67, 0x41, 0x24, 0x22, 0x8f, 0x89, 0x02,
-  0xa9, 0x7f, 0x0d, 0x5c, 0xa5, 0x31, 0xf5, 0x3b, 0x6f, 0xfb, 0xb8, 0x03,
-  0x91, 0x02, 0x98, 0x5a, 0x27, 0x5a, 0x12, 0x11, 0x1e, 0x7a, 0xae, 0xdb,
-  0x08, 0x68, 0xa8, 0x86, 0xed, 0x31, 0xb1, 0x7c, 0x9b, 0xd9, 0x2c, 0x80,
-  0x1a, 0x17, 0x73, 0x44, 0x1a, 0xc9, 0x1e, 0xec, 0x1c, 0x92, 0x34, 0x54,
-  0x8d, 0xfc, 0x11, 0x58, 0xe2, 0x60, 0x22, 0x1a, 0x53, 0xce, 0xd2, 0x59,
-  0xcb, 0xa4, 0x19, 0x30, 0x34, 0xf3, 0x8e, 0x87, 0x17, 0x93, 0x56, 0xbb,
-  0xc8, 0xd3, 0xb9, 0xc8, 0x8e, 0x9e, 0xfa, 0xe6, 0xf7, 0x12, 0x75, 0xb8,
-  0xb1, 0x71, 0xf4, 0x76, 0x74, 0x79, 0xf6, 0x3a, 0x39, 0x7b, 0x7b, 0x79,
-  0xfe, 0xf6, 0x52, 0x6f, 0xae, 0xb1, 0xc4, 0x6c, 0x4b, 0xe4, 0x82, 0x08,
-  0x01, 0xb6, 0x99, 0x73, 0xf5, 0xef, 0x23, 0xc4, 0xa4, 0x00, 0xc0, 0x60,
-  0x80, 0x2d, 0xe4, 0x72, 0xb2, 0x80, 0xba, 0x25, 0xc8, 0xc5, 0x58, 0xf2,
-  0x3b, 0x5a, 0x72, 0xe4, 0xd3, 0xc2, 0x90, 0x67, 0x29, 0x5e, 0x50, 0x7b,
-  0xec, 0xac, 0x35, 0x2b, 0xc9, 0xb4, 0x0a, 0x61, 0xc2, 0x39, 0xdf, 0xc4,
-  0x72, 0xf2, 0x71, 0x54, 0x66, 0xdb, 0xf1, 0xa6, 0x9f, 0x30, 0xa4, 0x13,
-  0xc1, 0x4c, 0x93, 0xda, 0x0c, 0xd0, 0x16, 0x55, 0x8b, 0x50, 0xa3, 0x66,
-  0x62, 0x61, 0x98, 0xdf, 0x58, 0x17, 0x34, 0xc3, 0x1b, 0x17, 0x11, 0xcf,
-  0x51, 0x44, 0x88, 0x04, 0x94, 0x00, 0x0a, 0x0e, 0xb9, 0x13, 0x8d, 0x81,
-  0xf4, 0x40, 0x76, 0x59, 0x44, 0xb7, 0xec, 0x5d, 0xb2, 0xf9, 0x7d, 0x16,
-  0x36, 0xf8, 0xa7, 0x7f, 0xe7, 0xb4, 0xcd, 0x77, 0xf6, 0xc9, 0x7f, 0x4a,
-  0x97, 0x3f, 0x2d, 0x36, 0x11, 0x40, 0xd7, 0xf4, 0x94, 0x7f, 0x7b, 0x7c,
-  0xf1, 0xd5, 0xf1, 0xc5, 0xd9, 0x08, 0xfc, 0xc0, 0xcc, 0x5d, 0x31, 0xad,
-  0xdf, 0x66, 0xe5, 0x38, 0x2b, 0x0b, 0xad, 0x72, 0x65, 0x7f, 0x3d, 0xd9,
-  0xf9, 0x7a, 0x34, 0x3a, 0x3c, 0x3f, 0x71, 0x75, 0x64, 0x5c, 0x02, 0x99,
-  0xa8, 0x48, 0x0b, 0x49, 0x71, 0xe4, 0xf9, 0xdb, 0x2b, 0x44, 0x17, 0x93,
-  0x5b, 0x09, 0x2c, 0x8e, 0x7c, 0xd2, 0x66, 0x57, 0x67, 0x67, 0xb4, 0xe6,
-  0x15, 0x72, 0xc3, 0x86, 0x09, 0x15, 0xe2, 0xce, 0x0b, 0x40, 0x3c, 0xfb,
-  0x02, 0xfa, 0x2e, 0x02, 0xef, 0xb6, 0x1c, 0x0f, 0x88, 0xda, 0x6f, 0xad,
-  0xca, 0xb0, 0xe4, 0x41, 0x10, 0xab, 0x94, 0x00, 0x69, 0x6f, 0x6b, 0xb8,
-  0xe5, 0x82, 0xe3, 0x3b, 0xb7, 0x7c, 0x3e, 0xb8, 0xc6, 0xc9, 0x6c, 0x28,
-  0xdc, 0x5d, 0x0e, 0x94, 0x45, 0xbd, 0x32, 0x8b, 0x7d, 0x08, 0xa7, 0x82,
-  0x7a, 0x73, 0x85, 0x09, 0xc5, 0xde, 0x45, 0x9f, 0x3c, 0x76, 0x80, 0x5d,
-  0x61, 0x2d, 0xea, 0x2b, 0x12, 0xc0, 0x97, 0x77, 0x53, 0xbd, 0x44, 0x80,
-  0x57, 0xbd, 0x10, 0xf7, 0x84, 0xf0, 0xf0, 0xb6, 0x83, 0x8a, 0x8b, 0x27,
-  0x22, 0x61, 0x43, 0xc3, 0xd1, 0x93, 0xf1, 0x2c, 0x5d, 0xdc, 0xe2, 0x36,
-  0xc3, 0xfd, 0xc4, 0x2a, 0xa7, 0xc1, 0x50, 0x71, 0x51, 0x4b, 0xf8, 0x23,
-  0x15, 0x19, 0x02, 0x42, 0xe0, 0x8c, 0x99, 0xdb, 0xbd, 0xd8, 0xf2, 0x1d,
-  0xda, 0x56, 0xe0, 0x79, 0xc3, 0x71, 0xf2, 0x8b, 0xc0, 0xa6, 0xa3, 0xe3,
-  0x53, 0xba, 0x98, 0x5c, 0x92, 0x09, 0x54, 0xf4, 0x6c, 0xc6, 0xa6, 0x60,
-  0x8b, 0x08, 0x92, 0xbc, 0xca, 0x1c, 0x8c, 0x4c, 0xb8, 0x87, 0x41, 0xa9,
-  0xc3, 0x7f, 0x04, 0x72, 0x41, 0xfa, 0x68, 0xe5, 0x0a, 0x8e, 0x28, 0xe7,
-  0x16, 0x26, 0x06, 0x9c, 0x50, 0x5f, 0x7f, 0x24, 0xac, 0x4e, 0xa3, 0xe1,
-  0x76, 0x47, 0x3e, 0x1e, 0xc8, 0x95, 0xeb, 0x92, 0x41, 0x78, 0xb1, 0xd4,
-  0x79, 0x18, 0x1b, 0xd9, 0x2d, 0x6b, 0xb7, 0x49, 0x5e, 0xef, 0x32, 0x02,
-  0x08, 0xbc, 0xd9, 0x54, 0xfd, 0x1d, 0x0e, 0x19, 0xc8, 0x42, 0x96, 0x9b,
-  0x61, 0xc2, 0x36, 0x70, 0x89, 0x06, 0x60, 0xe3, 0xed, 0xac, 0x36, 0xa7,
-  0x21, 0x42, 0x5c, 0xf5, 0x06, 0xae, 0xa7, 0x60, 0x39, 0x65, 0x03, 0xb4,
-  0x36, 0x8c, 0xce, 0x15, 0xf0, 0x0a, 0xd8, 0x06, 0x25, 0x5f, 0x03, 0x5a,
-  0x8c, 0x93, 0x6f, 0x07, 0x6f, 0xf8, 0xba, 0x28, 0x06, 0xe3, 0x15, 0xf4,
-  0xb2, 0xa0, 0x8c, 0x96, 0xe4, 0x70, 0x72, 0xbd, 0x79, 0xe0, 0xaa, 0xe1,
-  0x7b, 0xf6, 0x47, 0x21, 0x3b, 0x5e, 0x5c, 0x54, 0x48, 0x97, 0x6c, 0x62,
-  0xee, 0x38, 0xa4, 0x15, 0xc9, 0x41, 0x40, 0x2c, 0xb6, 0x15, 0x5e, 0x93,
-  0x11, 0xea, 0x26, 0xbb, 0x68, 0xc1, 0x85, 0xd6, 0x5e, 0x85, 0x67, 0xa5,
-  0x19, 0x71, 0x5d, 0x3b, 0xe8, 0xfb, 0x4b, 0x88, 0x09, 0x99, 0x02, 0xc2,
-  0x5b, 0x28, 0xb5, 0x25, 0x6e, 0xbc, 0xaf, 0xb9, 0xf0, 0x93, 0x80, 0x44,
-  0xa4, 0x33, 0xa9, 0xd8, 0xb1, 0xf6, 0x2a, 0x91, 0xc3, 0x54, 0x5f, 0x5e,
-  0xfe, 0xf5, 0xfc, 0xf8, 0x85, 0xbd, 0xf9, 0xd0, 0x9e, 0x09, 0x76, 0x1a,
-  0x62, 0x66, 0x32, 0xc5, 0x2a, 0x0d, 0x2a, 0x39, 0x13, 0x91, 0x0d, 0x6a,
-  0xf3, 0xe5, 0x4b, 0x37, 0x83, 0xe4, 0x87, 0x97, 0x27, 0xa3, 0xf3, 0xd3,
-  0xb3, 0xa3, 0x17, 0xcf, 0x7f, 0x30, 0x96, 0xfc, 0x05, 0xbb, 0x08, 0x44,
-  0x4e, 0x73, 0x9f, 0x79, 0x6c, 0x07, 0x7d, 0xef, 0xcd, 0xf1, 0xf7, 0xef,
-  0x48, 0x3b, 0x78, 0xc1, 0x08, 0xef, 0xfd, 0xf7, 0xe9, 0x4c, 0x5f, 0x62,
-  0x15, 0xab, 0x43, 0xb6, 0x1b, 0x36, 0xc1, 0xf8, 0xda, 0x0b, 0xeb, 0xaa,
-  0x87, 0xfa, 0x3c, 0x85, 0x7b, 0x0b, 0xa3, 0x0b, 0x0a, 0x45, 0xa5, 0x8d,
-  0xb4, 0xda, 0x8e, 0x12, 0xbf, 0xfe, 0xfa, 0xdf, 0xac, 0x25, 0xa6, 0x92,
-  0x43, 0x08, 0x42, 0xcf, 0x3c, 0xe2, 0x56, 0xf5, 0x1b, 0x1f, 0xcf, 0xab,
-  0x48, 0xca, 0x25, 0x07, 0xb0, 0x38, 0x28, 0x4a, 0xad, 0xb3, 0x0c, 0x9f,
-  0xb7, 0xe2, 0x55, 0x2a, 0x08, 0x13, 0x87, 0xd0, 0x5a, 0x34, 0xbd, 0xf1,
-  0x31, 0x15, 0x61, 0xdc, 0x58, 0x52, 0x2b, 0x65, 0x8b, 0xda, 0x3c, 0xe7,
-  0xc7, 0x17, 0xa3, 0x93, 0xd1, 0x25, 0xab, 0x51, 0x5a, 0x57, 0x51, 0x6d,
-  0xd0, 0x56, 0xf4, 0x12, 0x98, 0x0d, 0x4d, 0xe8, 0xd1, 0xb0, 0x6e, 0x48,
-  0xe3, 0x44, 0x3b, 0x36, 0xd7, 0x4c, 0xe2, 0xe4, 0x1b, 0x40, 0x32, 0x43,
-  0x59, 0x10, 0x15, 0x00, 0xdd, 0xf4, 0xca, 0x0e, 0x70, 0xa1, 0xa4, 0xd1,
-  0x2a, 0x9f, 0x81, 0xd2, 0x37, 0xd8, 0x9d, 0x59, 0x3e, 0xf6, 0x56, 0xf3,
-  0x96, 0x0b, 0x99, 0xa3, 0x13, 0x14, 0xac, 0x23, 0x3c, 0x42, 0x66, 0x0f,
-  0xf7, 0x99, 0xd1, 0x5a, 0x6a, 0x57, 0xaf, 0x35, 0xcd, 0x6a, 0x0c, 0xf3,
-  0x57, 0x9d, 0xa2, 0x0a, 0xe5, 0xc4, 0xe4, 0x34, 0xf7, 0x69, 0x10, 0x84,
-  0xaa, 0xf8, 0x4f, 0x80, 0xae, 0x55, 0x96, 0xcd, 0x4c, 0x39, 0x97, 0x4c,
-  0x34, 0x36, 0xb4, 0x90, 0xd4, 0x82, 0xcc, 0x7a, 0xc4, 0x09, 0xe9, 0xcc,
-  0x22, 0x11, 0x44, 0x45, 0xc7, 0x6b, 0x4e, 0x61, 0x03, 0xc8, 0xd6, 0x94,
-  0xe5, 0x2d, 0x58, 0xe0, 0xc2, 0xce, 0xec, 0x3a, 0xe5, 0x15, 0x1c, 0xaf,
-  0xc2, 0x42, 0x6d, 0x6e, 0xf4, 0x52, 0x9f, 0x04, 0x0b, 0x8f, 0x08, 0xc9,
-  0xb4, 0x04, 0x8a, 0x65, 0xad, 0xa0, 0xf1, 0xa6, 0xf8, 0x68, 0xb8, 0xe3,
-  0xb0, 0x89, 0xe7, 0x63, 0x74, 0x69, 0xc5, 0x44, 0x1f, 0x5a, 0xd1, 0xa0,
-  0xb2, 0x23, 0x93, 0x6f, 0x99, 0x59, 0xdc, 0x92, 0x98, 0x19, 0x2a, 0x76,
-  0x38, 0x2c, 0x26, 0xee, 0x32, 0xe6, 0xa4, 0x23, 0xf6, 0x2f, 0x96, 0x8a,
-  0x95, 0x44, 0xec, 0x8f, 0x2d, 0xcb, 0x28, 0x07, 0x89, 0x3a, 0xc9, 0xec,
-  0x75, 0x33, 0x1c, 0x3d, 0x1f, 0xc6, 0x2d, 0xcb, 0x1d, 0x90, 0x95, 0x98,
-  0xd7, 0xef, 0xb5, 0x43, 0x97, 0x20, 0x6f, 0x9b, 0xd5, 0x97, 0x7c, 0xab,
-  0x14, 0xe9, 0x3d, 0x66, 0xd7, 0x0d, 0xd2, 0x44, 0x2b, 0x4d, 0xbe, 0x75,
-  0xee, 0x69, 0x30, 0xbc, 0x46, 0x4d, 0x5c, 0x9e, 0x5d, 0xc3, 0x35, 0x48,
-  0xf2, 0xe5, 0x12, 0xc5, 0x94, 0x26, 0x8a, 0x26, 0x8f, 0xa0, 0x5d, 0xd7,
-  0xa0, 0x5d, 0x22, 0x7e, 0xb1, 0x68, 0x55, 0x5f, 0xbf, 0x3d, 0xbd, 0x3c,
-  0x39, 0x0f, 0xdd, 0x8f, 0xc9, 0xf7, 0x27, 0x97, 0xdf, 0x90, 0xd4, 0x3e,
-  0x3a, 0x79, 0xf3, 0xf5, 0x29, 0xfb, 0x78, 0x5e, 0xbf, 0x3e, 0x7c, 0xc3,
-  0xe8, 0x02, 0x6f, 0x10, 0xd9, 0x78, 0x08, 0xc5, 0x81, 0xd9, 0x11, 0x2d,
-  0x31, 0xd3, 0x0e, 0xe7, 0x9d, 0xf7, 0x63, 0x57, 0x43, 0xeb, 0xf8, 0x49,
-  0xcd, 0xe3, 0x45, 0x73, 0x91, 0x78, 0xc7, 0x55, 0x33, 0xb8, 0x67, 0xc3,
-  0x0e, 0x8e, 0x2d, 0x2b, 0x5b, 0xbc, 0xd0, 0x6d, 0x18, 0x79, 0xe4, 0x38,
-  0x8a, 0x84, 0x0e, 0x37, 0xba, 0xdc, 0xdd, 0xde, 0x7d, 0x81, 0x1d, 0x75,
-  0x20, 0xb4, 0xd0, 0x63, 0x48, 0x66, 0x5a, 0xa8, 0x5e, 0x23, 0xf7, 0x65,
-  0x33, 0xe7, 0x80, 0x7a, 0xc4, 0x90, 0x10, 0x47, 0x50, 0x78, 0x8b, 0x20,
-  0x6b, 0x9c, 0xac, 0x34, 0x5f, 0x9c, 0x86, 0x17, 0x6a, 0xb3, 0x0c, 0xbd,
-  0x85, 0x07, 0x5e, 0x17, 0x99, 0x3f, 0xb9, 0x83, 0x33, 0x6b, 0xc6, 0xcc,
-  0xbf, 0x50, 0xc3, 0xe4, 0x72, 0x19, 0x30, 0x5f, 0x1b, 0xd0, 0x96, 0x6c,
-  0xbb, 0x8a, 0x43, 0x6a, 0x3e, 0x3b, 0x10, 0xb1, 0xd2, 0xc1, 0x2c, 0x5b,
-  0xf1, 0x3c, 0x6a, 0xce, 0x5a, 0xd6, 0x50, 0x14, 0xc4, 0x63, 0x6b, 0x5a,
-  0x93, 0xce, 0x19, 0xdc, 0xd2, 0x1e, 0x6b, 0x64, 0x65, 0xcb, 0x7d, 0x77,
-  0x66, 0xa6, 0x3d, 0x4b, 0x6b, 0x43, 0x32, 0x2b, 0xc3, 0xef, 0x78, 0xcf,
-  0x29, 0x8a, 0xac, 0x15, 0xc5, 0x30, 0xfb, 0x90, 0xb1, 0x93, 0x93, 0x7f,
-  0xfd, 0xdb, 0xf2, 0x3a, 0xcc, 0x78, 0x93, 0xb2, 0xcf, 0xcb, 0xae, 0x9d,
-  0x55, 0x4c, 0x67, 0x11, 0x8b, 0xb4, 0xd4, 0x5c, 0x63, 0x04, 0x5a, 0x3f,
-  0x6e, 0x6f, 0x5d, 0x87, 0xfa, 0xfd, 0x7e, 0xfc, 0xfd, 0xbe, 0x98, 0x1d,
-  0x4f, 0xce, 0xdf, 0x3f, 0x75, 0x58, 0xa8, 0x92, 0xc7, 0x1d, 0x8a, 0x6f,
-  0x26, 0x14, 0x30, 0x85, 0xf1, 0xa3, 0x72, 0xe7, 0xa4, 0xc2, 0x13, 0xc5,
-  0xf6, 0xcf, 0x11, 0x64, 0xab, 0x12, 0xf9, 0xa9, 0x78, 0x04, 0x66, 0x62,
-  0x09, 0xfb, 0x45, 0x90, 0x1d, 0xf8, 0x14, 0x5f, 0x57, 0xd4, 0x20, 0x7d,
-  0xff, 0xd8, 0xc5, 0xe2, 0x7b, 0x9e, 0x86, 0x72, 0x6d, 0x9a, 0x0d, 0x35,
-  0xc8, 0x97, 0xef, 0xad, 0x06, 0x2f, 0xfd, 0xfa, 0xd4, 0x95, 0xea, 0xa9,
-  0x1a, 0x3e, 0xaa, 0x06, 0xee, 0xb0, 0x31, 0x7f, 0x0c, 0x0e, 0x61, 0x91,
-  0xcc, 0x19, 0xbc, 0x92, 0xd1, 0x1a, 0x57, 0xd6, 0x0c, 0xc8, 0x0e, 0x8a,
-  0x88, 0xc2, 0xc0, 0x3c, 0x43, 0x66, 0x2c, 0xf8, 0x51, 0xc0, 0x5c, 0x42,
-  0xcc, 0x7f, 0xdd, 0xf5, 0x1f, 0xf7, 0x77, 0x77, 0xf7, 0x0e, 0xf6, 0x3e,
-  0x7f, 0xb6, 0x7b, 0xb0, 0xb7, 0xb7, 0xb7, 0x7f, 0xb0, 0x77, 0x70, 0xb0,
-  0xbf, 0xfb, 0xf3, 0x0e, 0xdb, 0x8f, 0xde, 0xe7, 0xd9, 0x9d, 0x39, 0xa6,
-  0x24, 0x17, 0x0f, 0x64, 0x2d, 0xb5, 0xd4, 0x55, 0x83, 0x57, 0x3d, 0xd7,
-  0x24, 0x1f, 0x87, 0x2a, 0x21, 0x21, 0xf3, 0x02, 0x26, 0xb7, 0xf4, 0x99,
-  0xa6, 0x38, 0x83, 0x01, 0xe0, 0x35, 0x46, 0xf5, 0xf7, 0x15, 0xcf, 0x74,
-  0xcc, 0xe2, 0x00, 0x64, 0x9a, 0xca, 0xe5, 0xf5, 0x5d, 0xcf, 0x8a, 0xf1,
-  0x18, 0x99, 0x0b, 0x2e, 0xb5, 0x75, 0x98, 0x30, 0xaa, 0xea, 0xad, 0x90,
-  0x84, 0x7a, 0x0e, 0x10, 0x54, 0x28, 0x07, 0xdd, 0xaf, 0x8e, 0x08, 0x5e,
-  0x1a, 0x48, 0x3d, 0x29, 0xb8, 0xc2, 0xc0, 0x94, 0x99, 0x12, 0x2d, 0x52,
-  0xe9, 0x52, 0x5e, 0x92, 0xab, 0xec, 0xf3, 0xdd, 0x83, 0x03, 0x2e, 0x02,
-  0xf2, 0xa7, 0xbd, 0xbe, 0xc6, 0x83, 0x86, 0x41, 0xee, 0x7d, 0x77, 0x3d,
-  0x49, 0x1b, 0xac, 0x7e, 0x84, 0xf3, 0x5c, 0xac, 0xe6, 0x59, 0xa9, 0x8a,
-  0x08, 0x2e, 0x44, 0x01, 0xff, 0x61, 0x62, 0xb4, 0x21, 0xbb, 0x67, 0x51,
-  0xd8, 0x06, 0x76, 0x79, 0x49, 0x4d, 0xf1, 0xb7, 0xa7, 0x9e, 0x73, 0x1c,
-  0x95, 0x85, 0x94, 0x0f, 0xe5, 0x87, 0x21, 0x91, 0x03, 0xd1, 0xa4, 0xb8,
-  0x0d, 0x85, 0x55, 0xcd, 0xc7, 0xf9, 0x31, 0x18, 0xfc, 0xfe, 0x93, 0xbd,
-  0x9f, 0x25, 0xfc, 0x90, 0x09, 0xdc, 0xaf, 0x82, 0x16, 0x7a, 0x9b, 0x86,
-  0x19, 0x17, 0x46, 0x18, 0x5b, 0xd9, 0xf0, 0x7a, 0x68, 0x52, 0x82, 0x5a,
-  0x0f, 0xfb, 0x61, 0x10, 0xb8, 0x20, 0x90, 0x4b, 0x59, 0x60, 0xe8, 0x5d,
-  0x66, 0x20, 0x32, 0x03, 0xaf, 0x18, 0x27, 0x1b, 0x15, 0x7b, 0xe8, 0xc6,
-  0x38, 0xbe, 0x3c, 0xa4, 0xcb, 0xe0, 0xdb, 0x58, 0x71, 0x7f, 0x9d, 0x91,
-  0x96, 0xcd, 0x9b, 0xb7, 0x05, 0xfa, 0x7e, 0xef, 0x70, 0x7f, 0x79, 0xf5,
-  0x1e, 0x27, 0x5b, 0xec, 0x83, 0x78, 0xf2, 0xf9, 0x93, 0xc7, 0xdb, 0x52,
-  0x64, 0x41, 0x5e, 0xcb, 0x38, 0xdf, 0x03, 0x56, 0x46, 0x05, 0x9b, 0x61,
-  0xf3, 0xb0, 0x63, 0x31, 0x6f, 0x2f, 0x4e, 0xe4, 0x88, 0xde, 0x08, 0x26,
-  0x80, 0x28, 0xb1, 0x6d, 0x9c, 0x38, 0xdc, 0x9f, 0x81, 0xd0, 0x30, 0xcf,
-  0x19, 0xc3, 0x10, 0xb9, 0xd4, 0x7c, 0xd1, 0xb9, 0x5c, 0x7e, 0xdc, 0x98,
-  0x74, 0xe0, 0x0a, 0x94, 0x1e, 0xd4, 0x8a, 0x4e, 0x18, 0x0c, 0x40, 0x0f,
-  0x19, 0x73, 0x55, 0xe9, 0xc6, 0x69, 0x54, 0xac, 0xd7, 0x08, 0x7f, 0x11,
-  0x6e, 0xde, 0xc2, 0xd9, 0xde, 0x16, 0x0f, 0x3e, 0x84, 0x3c, 0x26, 0x2b,
-  0x7a, 0xd0, 0x42, 0x41, 0x79, 0xc4, 0x8d, 0xec, 0x32, 0x2f, 0x3d, 0x06,
-  0x18, 0x4d, 0x06, 0xcf, 0xa2, 0xac, 0xc5, 0x2d, 0xa1, 0xb8, 0xa7, 0x6b,
-  0x58, 0x0a, 0xf3, 0x86, 0x09, 0x47, 0x73, 0xe3, 0x91, 0xa3, 0x8e, 0x10,
-  0xe2, 0x39, 0x5d, 0x2f, 0xe5, 0xbd, 0x4a, 0xcc, 0x10, 0xfb, 0x5d, 0xa5,
-  0xb4, 0x96, 0x83, 0x5f, 0x50, 0x20, 0xc2, 0xc8, 0x78, 0x07, 0x82, 0x62,
-  0x4a, 0x70, 0x63, 0x00, 0x0d, 0x36, 0x3e, 0x98, 0xdb, 0x57, 0x41, 0xfc,
-  0x4b, 0x98, 0x2e, 0x66, 0xbf, 0xdb, 0x73, 0x41, 0x68, 0x64, 0xda, 0x9e,
-  0xd8, 0x9a, 0xa1, 0x09, 0x56, 0x26, 0xc2, 0xa1, 0x9c, 0x36, 0xb3, 0x85,
-  0x91, 0xec, 0xec, 0x6c, 0xaf, 0x19, 0x8d, 0x7e, 0xdd, 0xd5, 0xfb, 0x39,
-  0x30, 0x46, 0x82, 0x0c, 0x4d, 0xda, 0xf3, 0x66, 0xe3, 0xbc, 0xb4, 0x79,
-  0xc5, 0x3b, 0x39, 0xd5, 0x38, 0x57, 0x31, 0x8b, 0x9a, 0xba, 0x24, 0x83,
-  0x37, 0x66, 0xd4, 0x9c, 0x84, 0x86, 0xd6, 0x18, 0xe6, 0x93, 0xd4, 0x70,
-  0x16, 0x77, 0xe5, 0x30, 0x39, 0x64, 0x6a, 0x68, 0x74, 0x1c, 0x0c, 0xd9,
-  0xec, 0xb3, 0x86, 0x68, 0x6e, 0x42, 0xa9, 0x33, 0xcf, 0xf5, 0x83, 0x2f,
-  0x4d, 0x6c, 0xb3, 0x14, 0x7f, 0x67, 0xbc, 0x1d, 0x67, 0x02, 0x67, 0xe2,
-  0x38, 0x61, 0x80, 0x54, 0x9c, 0x2f, 0x1a, 0x25, 0x40, 0xb5, 0x11, 0x38,
-  0xae, 0xdd, 0x24, 0x00, 0x82, 0x58, 0x1a, 0xb8, 0x6e, 0x58, 0x16, 0x10,
-  0x88, 0x02, 0x1a, 0xa4, 0x2e, 0x82, 0xb2, 0x23, 0x62, 0xf1, 0x9e, 0x8e,
-  0x85, 0xbc, 0x1a, 0xeb, 0xd1, 0x17, 0x8a, 0x97, 0xa0, 0x04, 0x89, 0x9f,
-  0xa5, 0x43, 0xc2, 0x0c, 0xe3, 0xf0, 0xe4, 0x94, 0xa3, 0xdc, 0x4e, 0x49,
-  0x65, 0x1b, 0x99, 0xe8, 0x83, 0xa8, 0x4f, 0xc4, 0xdf, 0x2d, 0x72, 0x16,
-  0xbf, 0xfb, 0xae, 0x94, 0x88, 0x25, 0x3f, 0x41, 0x0f, 0x61, 0x67, 0x9d,
-  0xa8, 0xf2, 0x8a, 0xf9, 0x47, 0xbb, 0x45, 0xf2, 0x4f, 0x25, 0x46, 0x58,
-  0x40, 0xeb, 0x32, 0xe8, 0x3c, 0x1c, 0xa3, 0x50, 0x91, 0x85, 0x51, 0xa3,
-  0x92, 0x51, 0x99, 0xcd, 0xb2, 0xf7, 0x6a, 0x2d, 0x15, 0xa0, 0xd2, 0xaf,
-  0xd5, 0x27, 0x29, 0xa5, 0x4c, 0x6b, 0xef, 0x5a, 0x6d, 0xb8, 0x3d, 0xb9,
-  0xcf, 0x1d, 0xc1, 0x78, 0xf1, 0xd0, 0x1d, 0xdc, 0xbd, 0x47, 0xd7, 0x37,
-  0x17, 0x30, 0xbf, 0x37, 0x60, 0x9d, 0x55, 0x43, 0x55, 0xdf, 0x56, 0x8a,
-  0xce, 0xd0, 0x8e, 0xfd, 0x16, 0xdb, 0x9f, 0x15, 0xc3, 0x13, 0x63, 0x7a,
-  0xdf, 0xf0, 0x8f, 0xc5, 0x03, 0xc0, 0x6a, 0x4e, 0x9f, 0x0d, 0xaf, 0x52,
-  0x70, 0x9d, 0x14, 0x2c, 0xae, 0x74, 0xd1, 0x97, 0x44, 0x50, 0xd0, 0x46,
-  0x31, 0xa3, 0x3f, 0x11, 0x1e, 0x25, 0x01, 0x93, 0xf4, 0x2c, 0xe3, 0xb7,
-  0x06, 0x11, 0xaa, 0xf4, 0xa7, 0x24, 0x37, 0xe8, 0x5f, 0x68, 0xaa, 0x5c,
-  0x01, 0x26, 0xb8, 0x2f, 0x97, 0x1b, 0x3b, 0x11, 0xeb, 0xc9, 0xd0, 0x8d,
-  0x5e, 0x7d, 0xf8, 0x32, 0xfe, 0x97, 0xe6, 0x62, 0x36, 0xb1, 0xa2, 0x28,
-  0x6d, 0x75, 0x65, 0x17, 0xc6, 0x52, 0xbb, 0xf0, 0xab, 0x15, 0x3b, 0xb7,
-  0x5c, 0x65, 0x1e, 0x1e, 0xc5, 0x9c, 0xaf, 0xa2, 0x4c, 0xca, 0x84, 0xba,
-  0xc6, 0x59, 0x43, 0x5b, 0xd1, 0xee, 0x4a, 0xeb, 0xa7, 0xc5, 0x1d, 0xd7,
-  0x38, 0xbd, 0xba, 0xca, 0x27, 0x5c, 0xb8, 0xc6, 0xc3, 0x01, 0x33, 0x8b,
-  0x97, 0x07, 0xe7, 0x56, 0x56, 0x89, 0xe6, 0x96, 0x2c, 0x57, 0xe3, 0x19,
-  0xdd, 0xbd, 0x16, 0x9d, 0x4e, 0x87, 0x0a, 0xab, 0x44, 0xca, 0x13, 0x9a,
-  0x13, 0xdf, 0x3c, 0xf4, 0xc7, 0x56, 0x44, 0xb4, 0x16, 0x63, 0x67, 0x89,
-  0x7a, 0x8e, 0x62, 0xaf, 0x1c, 0x36, 0x3c, 0x2f, 0x16, 0x96, 0xdc, 0xb2,
-  0xaa, 0x04, 0x1c, 0xd2, 0x2a, 0xb7, 0x6f, 0x88, 0xa7, 0x21, 0x9f, 0x29,
-  0x1a, 0xbb, 0x6a, 0xda, 0x78, 0x23, 0x9c, 0xcc, 0x74, 0xb0, 0xbc, 0x59,
-  0xda, 0x4e, 0x9b, 0x7c, 0x23, 0xc2, 0x8f, 0xa6, 0x53, 0xe0, 0xe4, 0x9d,
-  0x7f, 0x73, 0x3e, 0x4c, 0x8e, 0xb9, 0x25, 0x19, 0x93, 0xca, 0xad, 0x30,
-  0xb9, 0xd0, 0x77, 0x34, 0xd9, 0x6b, 0xbe, 0xbf, 0xce, 0x4a, 0xfe, 0x0b,
-  0xad, 0xe9, 0x97, 0x62, 0x65, 0xc5, 0xb7, 0xcd, 0x5e, 0xa9, 0x21, 0x0b,
-  0x9a, 0x3e, 0xc7, 0xef, 0x74, 0x54, 0x48, 0x9a, 0x72, 0xdb, 0xe4, 0x7b,
-  0x28, 0xca, 0x06, 0x94, 0x8e, 0xbc, 0x99, 0x90, 0x90, 0x05, 0x51, 0x69,
-  0x79, 0x8f, 0xfd, 0x0b, 0x78, 0xa3, 0x88, 0x93, 0xd2, 0x40, 0x40, 0x5a,
-  0x4a, 0x7e, 0x2e, 0x1c, 0x4f, 0xce, 0x55, 0x29, 0x20, 0x32, 0x65, 0xa6,
-  0xc1, 0x8b, 0x85, 0x7a, 0x3d, 0xc5, 0x40, 0x51, 0x65, 0xad, 0xe3, 0x1a,
-  0xa8, 0x63, 0xf6, 0x05, 0x6b, 0xd1, 0x3c, 0x16, 0x12, 0x5a, 0x68, 0x0b,
-  0x86, 0x1b, 0xff, 0x7f, 0x82, 0x03, 0xf9, 0x8d, 0xa9, 0x56, 0x02, 0x00,
- 
+  0x65, 0x60, 0xeb, 0x08, 0xd1, 0xda, 0x5d, 0x3e, 0x85, 0x54, 0xed, 0xd1,
+  0xbc, 0x68, 0xbf, 0x84, 0xf8, 0x24, 0x6c, 0x1a, 0xee, 0x4b, 0xf8, 0x3d,
+  0xdd, 0xc8, 0x54, 0x80, 0xe1, 0x65, 0x2d, 0x60, 0x5c, 0xd8, 0x82, 0xfc,
+  0xc0, 0xe9, 0xc7, 0xde, 0x45, 0xc0, 0xaa, 0x14, 0xb3, 0xe6, 0x9e, 0xef,
+  0x85, 0x43, 0xf9, 0xeb, 0x7a, 0x66, 0x76, 0x85, 0xd7, 0x8e, 0xb0, 0x9b,
+  0x73, 0x66, 0x5c, 0x91, 0x60, 0xda, 0x7b, 0xbb, 0x24, 0xbf, 0xce, 0x8a,
+  0x76, 0x85, 0xee, 0x58, 0x29, 0xc5, 0xb4, 0x06, 0x58, 0x9d, 0xbd, 0xdd,
+  0x6f, 0xd7, 0xaf, 0x3a, 0xf0, 0xc0, 0x1f, 0x7c, 0x79, 0xff, 0xf1, 0x03,
+  0x9b, 0x76, 0x56, 0x42, 0x2f, 0xcf, 0x2c, 0x1c, 0x12, 0x82, 0xa0, 0x77,
+  0xc2, 0x44, 0xdb, 0x46, 0x84, 0x9f, 0x5d, 0xa7, 0x3c, 0xfc, 0x87, 0x46,
+  0x6f, 0x29, 0x1b, 0xad, 0xa1, 0xbc, 0xd6, 0x00, 0x6d, 0xf9, 0xb2, 0x62,
+  0x0b, 0xd9, 0x12, 0x60, 0x68, 0x5e, 0x8d, 0x75, 0xd9, 0xde, 0x02, 0x37,
+  0x11, 0xbc, 0x2d, 0x9c, 0xb3, 0xdf, 0x64, 0x12, 0x46, 0x3d, 0x65, 0x76,
+  0xbd, 0x12, 0x3c, 0x87, 0x42, 0xd4, 0x7e, 0x86, 0xfe, 0xd5, 0xf3, 0x4a,
+  0xbc, 0x99, 0x23, 0x89, 0x84, 0x9e, 0xc0, 0x78, 0x27, 0xa9, 0x89, 0xac,
+  0x22, 0x72, 0xb4, 0x2f, 0x06, 0xb6, 0xcf, 0x4e, 0xd8, 0x21, 0x06, 0x6e,
+  0xb0, 0x91, 0xb4, 0x8b, 0xf7, 0x0a, 0xb6, 0xdd, 0x10, 0x89, 0xb8, 0x42,
+  0x28, 0x8e, 0xd9, 0x73, 0xd6, 0x17, 0x3b, 0xc6, 0x6a, 0xf1, 0x10, 0xa0,
+  0x81, 0xbe, 0x52, 0x2d, 0x5a, 0x72, 0x5d, 0x31, 0xc7, 0xaf, 0x0c, 0x63,
+  0x50, 0x10, 0xc9, 0xd9, 0xee, 0x7f, 0x74, 0xf6, 0xe6, 0xd5, 0xc9, 0xd7,
+  0x0e, 0x78, 0x47, 0x98, 0xb8, 0x55, 0x15, 0x45, 0x9b, 0xae, 0xc8, 0xb2,
+  0x73, 0x7a, 0x6b, 0xd5, 0x3a, 0x0d, 0xc4, 0x25, 0xf6, 0xf4, 0x2e, 0xfc,
+  0x00, 0x0c, 0x64, 0xf1, 0x88, 0x6d, 0xe5, 0x02, 0x64, 0x51, 0x6d, 0x7b,
+  0xcb, 0x43, 0x0b, 0x18, 0x4c, 0x12, 0x36, 0xd2, 0xb2, 0x5e, 0x2d, 0x5d,
+  0x3c, 0x61, 0x50, 0xf5, 0x4e, 0xb1, 0x8a, 0x2d, 0x53, 0x7c, 0xb5, 0x14,
+  0xd6, 0xa4, 0xf9, 0x9e, 0x0d, 0xc3, 0xae, 0xdc, 0x01, 0x6c, 0x59, 0x50,
+  0xe4, 0x0f, 0xbd, 0x00, 0xa2, 0x10, 0x9d, 0x19, 0x83, 0x1b, 0x86, 0xa1,
+  0xf3, 0xe6, 0xca, 0x99, 0xa2, 0x6e, 0x60, 0x58, 0x77, 0x79, 0x2e, 0x9a,
+  0x19, 0xcf, 0x1b, 0xe5, 0x72, 0x5d, 0x5c, 0x8e, 0x0b, 0x04, 0xf6, 0xae,
+  0x22, 0x57, 0x28, 0xc8, 0x87, 0x2a, 0x59, 0x96, 0x69, 0x0a, 0xaf, 0x25,
+  0xdc, 0x9e, 0xf8, 0xe4, 0x05, 0x7b, 0x68, 0x0e, 0x18, 0xb2, 0x7b, 0x2e,
+  0xf0, 0x5d, 0x61, 0x76, 0xa8, 0x72, 0x49, 0x8f, 0xab, 0x7d, 0x72, 0x15,
+  0x24, 0x9c, 0x49, 0xc8, 0xa0, 0x11, 0x9d, 0x98, 0x8b, 0xd9, 0xd6, 0xb2,
+  0xf9, 0xc7, 0xcd, 0x41, 0x75, 0x3f, 0x1f, 0x17, 0x33, 0xcb, 0xc1, 0x70,
+  0xf8, 0x0e, 0xf6, 0x90, 0x15, 0xa2, 0x4a, 0xa5, 0x0a, 0x3d, 0xba, 0x0e,
+  0x2c, 0x94, 0x3e, 0x6c, 0xca, 0x8f, 0x5f, 0x2a, 0xb9, 0xc0, 0x53, 0x64,
+  0xb3, 0x70, 0x60, 0x23, 0xd9, 0x62, 0x32, 0x2b, 0x94, 0xaa, 0x39, 0xff,
+  0x1b, 0x2b, 0xd5, 0x9c, 0x3a, 0x3b, 0xff, 0x8a, 0x15, 0x1b, 0x3b, 0x50,
+  0xa5, 0x81, 0xc4, 0x1d, 0x36, 0x0e, 0x7f, 0x6f, 0x13, 0xe4, 0xb7, 0xe5,
+  0x0b, 0x0d, 0xd0, 0x37, 0x94, 0x16, 0x6a, 0x48, 0xca, 0x3a, 0xd0, 0x50,
+  0x7f, 0x12, 0xdb, 0xa2, 0xb8, 0x00, 0xff, 0x6a, 0x9d, 0xdb, 0xa3, 0xad,
+  0xa5, 0x27, 0x7a, 0x4a, 0xcb, 0x6b, 0xc5, 0x44, 0x53, 0xa7, 0x1a, 0x94,
+  0x44, 0x57, 0x6c, 0xc3, 0xd9, 0x28, 0x59, 0x28, 0x71, 0x01, 0x34, 0x10,
+  0x9f, 0x56, 0x92, 0xf2, 0xa7, 0x09, 0x51, 0x62, 0x9d, 0x74, 0x84, 0x18,
+  0x70, 0x9c, 0x3f, 0xba, 0xb0, 0x94, 0xd4, 0xdf, 0x65, 0x56, 0x04, 0xc0,
+  0x9b, 0x6a, 0xf5, 0x32, 0x0b, 0x5e, 0x63, 0x7b, 0x1e, 0x34, 0xe1, 0x4c,
+  0x6d, 0x28, 0xd2, 0x15, 0x64, 0x09, 0x86, 0x03, 0x44, 0x1e, 0x50, 0x56,
+  0xf9, 0x26, 0xe4, 0xfb, 0x17, 0x5a, 0xfa, 0x87, 0xce, 0xb3, 0xe2, 0x97,
+  0x28, 0x58, 0xdb, 0xe7, 0xbb, 0x6a, 0x89, 0xab, 0x35, 0x72, 0xb5, 0x4a,
+  0x0e, 0x2f, 0x8e, 0x49, 0xb2, 0xbd, 0x5e, 0x00, 0x42, 0x62, 0x51, 0x5b,
+  0xce, 0x5b, 0xb6, 0xd0, 0x6a, 0x43, 0x0b, 0x3b, 0x1f, 0xdc, 0xe1, 0x5d,
+  0xf0, 0x26, 0x13, 0x93, 0xc6, 0x08, 0x48, 0x7a, 0xb5, 0x27, 0xb9, 0x89,
+  0x21, 0xaf, 0x82, 0xeb, 0x30, 0x8a, 0x81, 0x90, 0x14, 0x7b, 0x4b, 0xa8,
+  0xab, 0xc2, 0x50, 0x57, 0xcf, 0x23, 0xb6, 0x1e, 0xc2, 0xad, 0xda, 0x5a,
+  0xe3, 0x54, 0xfb, 0xac, 0x84, 0xbf, 0x1b, 0x0a, 0xa2, 0xf6, 0xd5, 0xf0,
+  0x80, 0x7a, 0x72, 0xea, 0x77, 0x5b, 0x8f, 0xfe, 0x8e, 0x7b, 0x86, 0x65,
+  0x91, 0xb6, 0x5c, 0x90, 0xb9, 0x60, 0x7b, 0x31, 0x64, 0x4f, 0x03, 0xe1,
+  0x57, 0x32, 0xf4, 0x50, 0xfc, 0x1b, 0x36, 0x6a, 0x16, 0x7e, 0xd2, 0x4a,
+  0xb3, 0xa1, 0x54, 0x1d, 0x98, 0xea, 0x59, 0x65, 0xaa, 0xe0, 0xc8, 0xe1,
+  0x31, 0x63, 0xfe, 0xdc, 0x8a, 0x00, 0x10, 0xf2, 0xa7, 0x4e, 0x33, 0xef,
+  0x1f, 0xdd, 0x6c, 0xfd, 0x18, 0xdc, 0x97, 0xfc, 0xd1, 0x0b, 0x87, 0x8b,
+  0x86, 0x22, 0xe6, 0xdc, 0x11, 0x58, 0x2a, 0xdc, 0xa7, 0xfc, 0x0b, 0x3e,
+  0x46, 0x00, 0x9c, 0x61, 0x4b, 0x36, 0x60, 0x8c, 0xb4, 0xbc, 0x48, 0x38,
+  0x10, 0xf1, 0xf1, 0x81, 0x43, 0x8f, 0x43, 0xd1, 0x78, 0xf0, 0xed, 0x8e,
+  0x15, 0x0c, 0x65, 0x53, 0x0e, 0xe7, 0xf7, 0xda, 0x81, 0xaf, 0xb2, 0x46,
+  0x85, 0x51, 0x97, 0x34, 0xd4, 0x1b, 0xf4, 0x68, 0x2d, 0x36, 0x67, 0x33,
+  0xcf, 0xf0, 0xed, 0x31, 0xde, 0x55, 0xe4, 0xd7, 0x79, 0x81, 0x49, 0x79,
+  0x17, 0x97, 0x2e, 0xb8, 0x6f, 0x64, 0x3b, 0x70, 0xed, 0x27, 0x4e, 0x06,
+  0x72, 0x30, 0x54, 0xc8, 0x18, 0x41, 0xbc, 0xc0, 0xfb, 0xbc, 0x32, 0x3f,
+  0x24, 0xd1, 0xf6, 0x44, 0xc2, 0x23, 0x6a, 0xc1, 0x0b, 0xc8, 0xea, 0x49,
+  0xb0, 0x94, 0xd9, 0xe4, 0xa6, 0x90, 0xf0, 0x5a, 0x5a, 0xb4, 0x20, 0x11,
+  0xb3, 0x97, 0xfc, 0x87, 0xd2, 0xc0, 0xb7, 0x3e, 0x7f, 0x8f, 0x09, 0x61,
+  0x28, 0xa8, 0x7f, 0x43, 0x4f, 0x10, 0xc7, 0x3f, 0x5c, 0x5e, 0x1c, 0x26,
+  0xdf, 0x1c, 0x1f, 0xbe, 0x3c, 0xbe, 0x18, 0xb5, 0x2e, 0x7d, 0x8d, 0x04,
+  0x11, 0x09, 0x8d, 0xed, 0xc1, 0x10, 0x8d, 0x0d, 0x17, 0x40, 0x43, 0xf8,
+  0x8d, 0xeb, 0x11, 0xf1, 0xf0, 0x41, 0xa2, 0xf3, 0xc1, 0x0a, 0x91, 0x38,
+  0x0e, 0x00, 0x11, 0x5b, 0x81, 0xd9, 0xb8, 0x36, 0x26, 0xc4, 0xa1, 0x38,
+  0x9e, 0xc1, 0xac, 0xe7, 0x61, 0xf2, 0x8c, 0x47, 0x96, 0xf3, 0x97, 0xc9,
+  0xb4, 0xb0, 0xbc, 0xc0, 0xe6, 0xce, 0x7d, 0xe3, 0xd3, 0xb1, 0x03, 0xb6,
+  0xa5, 0x97, 0x8c, 0x1a, 0x10, 0x7b, 0x3f, 0x0c, 0xa8, 0xdf, 0x01, 0x2d,
+  0xfe, 0x80, 0x11, 0x01, 0xef, 0xb3, 0xaa, 0xd7, 0xb2, 0x06, 0x36, 0xbb,
+  0x07, 0x8f, 0xbe, 0x8e, 0x4f, 0xd2, 0x37, 0x9d, 0x2d, 0xf1, 0xe9, 0xe2,
+  0x92, 0xb8, 0x91, 0x06, 0x81, 0x4b, 0x35, 0x10, 0x92, 0xf5, 0x04, 0x45,
+  0x99, 0x2e, 0x1a, 0xab, 0xe4, 0xd5, 0x4c, 0x0d, 0x0d, 0xc3, 0x40, 0x74,
+  0x0a, 0x90, 0x75, 0xe8, 0xec, 0xc9, 0xa5, 0x0e, 0xbb, 0x88, 0x81, 0xd5,
+  0xd2, 0xb0, 0xf4, 0xa1, 0xf0, 0x7e, 0x80, 0x2f, 0x44, 0xc3, 0xf1, 0xab,
+  0x86, 0xab, 0x54, 0xed, 0xa2, 0x5a, 0x08, 0x4d, 0x9b, 0xe3, 0x31, 0x38,
+  0x9a, 0xb7, 0x28, 0x7e, 0xee, 0xd2, 0x6a, 0x30, 0xe8, 0xbb, 0x12, 0x10,
+  0xc6, 0x4a, 0x3d, 0x4c, 0x9d, 0x52, 0xd0, 0x91, 0xdf, 0x31, 0x79, 0x35,
+  0x48, 0x0b, 0x0a, 0x89, 0x19, 0x05, 0xa3, 0x10, 0x48, 0xee, 0x9e, 0xcb,
+  0x92, 0x6f, 0x8a, 0x0a, 0x77, 0x41, 0xfc, 0x38, 0x5f, 0xf2, 0x5d, 0xcb,
+  0x8f, 0x37, 0xd4, 0xd5, 0xe5, 0x20, 0x39, 0x81, 0x60, 0x0b, 0xf6, 0x75,
+  0x7e, 0x78, 0xf9, 0x0d, 0x1c, 0xad, 0x20, 0xe1, 0x97, 0x00, 0x34, 0x31,
+  0xf7, 0x5a, 0x9c, 0x9d, 0xe5, 0x14, 0x38, 0x91, 0x7f, 0x0d, 0x46, 0xd0,
+  0xe4, 0x49, 0x38, 0xf2, 0x72, 0x89, 0x49, 0x9a, 0x49, 0x01, 0x4d, 0xf0,
+  0xe8, 0x46, 0x19, 0x33, 0x44, 0xc1, 0xbb, 0xd4, 0x3b, 0x17, 0x7a, 0xb9,
+  0x29, 0x79, 0xea, 0x9b, 0x32, 0x27, 0x10, 0x3d, 0x0b, 0x73, 0xac, 0xf1,
+  0x84, 0x38, 0xaf, 0xf8, 0x82, 0x13, 0x91, 0xc5, 0x17, 0x35, 0x2d, 0xba,
+  0x51, 0xfa, 0x82, 0x23, 0xfd, 0xe5, 0xfc, 0x7e, 0x18, 0xe3, 0xe3, 0x24,
+  0x5f, 0xad, 0xea, 0x26, 0x5b, 0x69, 0xa1, 0xcd, 0x3a, 0xc9, 0xb2, 0x2c,
+  0x8a, 0x3a, 0x18, 0x03, 0xa4, 0x9f, 0xb4, 0xd6, 0x13, 0x2d, 0x70, 0x8c,
+  0x32, 0x16, 0x6e, 0x6a, 0xa1, 0x72, 0x77, 0x28, 0x18, 0xa6, 0xe3, 0xaa,
+  0x98, 0xad, 0xea, 0x20, 0x10, 0xfb, 0x97, 0x8d, 0x39, 0x18, 0xf4, 0xd6,
+  0xc9, 0xd0, 0xa0, 0x29, 0xb9, 0xfe, 0x31, 0x09, 0xe1, 0xa4, 0xe9, 0x93,
+  0x78, 0x09, 0xbf, 0x63, 0x59, 0x2c, 0x9a, 0x95, 0xb6, 0x10, 0xf3, 0xbd,
+  0xbd, 0xb1, 0x31, 0xb2, 0xcd, 0x66, 0x70, 0xd0, 0x78, 0xd3, 0xbf, 0x87,
+  0x34, 0xc9, 0x63, 0x10, 0xbf, 0xc1, 0x84, 0x7e, 0x31, 0x68, 0xb6, 0x4c,
+  0xf6, 0x14, 0x2c, 0x5c, 0xf6, 0x38, 0xaf, 0x9a, 0x93, 0xc2, 0x57, 0xce,
+  0x73, 0x61, 0xa9, 0x66, 0x97, 0x85, 0xa1, 0x9e, 0xab, 0xe7, 0xce, 0x13,
+  0x44, 0x23, 0x59, 0xbd, 0x13, 0xcf, 0x97, 0x2f, 0x01, 0x2b, 0xcb, 0xea,
+  0x22, 0x73, 0x79, 0x90, 0x3b, 0xff, 0x7b, 0x27, 0xe9, 0x27, 0x5a, 0x31,
+  0xbb, 0x03, 0x83, 0xe8, 0xff, 0x87, 0x18, 0x2c, 0x05, 0x53, 0xe5, 0x36,
+  0x5b, 0x08, 0xa4, 0x43, 0x52, 0xa1, 0x6e, 0xca, 0x89, 0xa7, 0x7e, 0x92,
+  0x0e, 0xb2, 0x3b, 0xd6, 0x5f, 0x4c, 0x47, 0x50, 0x34, 0x0f, 0xa9, 0x8c,
+  0xea, 0xf0, 0x91, 0x80, 0x86, 0x71, 0xe5, 0xac, 0x7a, 0x5c, 0xa4, 0x50,
+  0x4a, 0xf6, 0x89, 0x58, 0x8f, 0x82, 0x35, 0xe6, 0x41, 0x95, 0x84, 0x77,
+  0xa7, 0xb7, 0x57, 0x49, 0x55, 0xc8, 0xbf, 0x96, 0x7f, 0xa4, 0x31, 0x5e,
+  0x4a, 0xfe, 0x41, 0x21, 0x34, 0xad, 0x20, 0x8a, 0x2c, 0x27, 0x0d, 0x3e,
+  0x95, 0xc0, 0x3a, 0xf3, 0x4c, 0xda, 0x20, 0x4d, 0x0a, 0x60, 0xc7, 0x25,
+  0x40, 0x18, 0x15, 0x18, 0x84, 0x83, 0xca, 0x18, 0x2b, 0x56, 0xf2, 0xb7,
+  0xb9, 0xc4, 0x9d, 0x69, 0x32, 0x76, 0xa5, 0x5a, 0x46, 0x87, 0xdb, 0x29,
+  0x3f, 0x7c, 0xbd, 0xfb, 0x91, 0x23, 0x0f, 0x27, 0xdd, 0x5d, 0xca, 0x30,
+  0x66, 0x5e, 0x24, 0xb0, 0x29, 0x69, 0x99, 0x4c, 0x89, 0xe3, 0x08, 0x63,
+  0x53, 0x7c, 0xf0, 0xe6, 0x35, 0x27, 0x7c, 0xa8, 0x49, 0x4a, 0xa1, 0x46,
+  0x60, 0xff, 0xba, 0xc9, 0x35, 0xc4, 0x54, 0x56, 0xbd, 0x59, 0x80, 0x10,
+  0x16, 0x3e, 0x8e, 0x2e, 0xf0, 0x0e, 0x56, 0x17, 0x03, 0x31, 0x8c, 0x0f,
+  0xcc, 0xd0, 0x61, 0x80, 0xea, 0x25, 0x72, 0x12, 0xa6, 0x97, 0x4b, 0x40,
+  0x86, 0x0b, 0x7b, 0xfe, 0xc4, 0xde, 0xc3, 0x2e, 0x39, 0x9e, 0x75, 0x91,
+  0x48, 0x2e, 0x89, 0x22, 0xb9, 0xf1, 0x85, 0xb2, 0xbf, 0x07, 0xc5, 0x54,
+  0xc2, 0x37, 0x80, 0xaa, 0x69, 0x2d, 0x34, 0xca, 0x5d, 0x05, 0x8b, 0xbf,
+  0xdd, 0xd7, 0x55, 0x72, 0xc9, 0xf7, 0xea, 0x6d, 0x16, 0xb9, 0x30, 0xf0,
+  0x3b, 0x35, 0xea, 0x6c, 0x49, 0x42, 0x77, 0x55, 0x97, 0xab, 0x49, 0x03,
+  0x41, 0x0f, 0x14, 0xd1, 0xf0, 0xd2, 0xbb, 0x35, 0x2e, 0x42, 0xdd, 0xfe,
+  0xe4, 0x5c, 0xd5, 0x7b, 0xd1, 0x3e, 0x78, 0x64, 0x5b, 0x69, 0x23, 0xdf,
+  0xc5, 0x55, 0x46, 0x0c, 0xfb, 0xdd, 0x76, 0x54, 0x36, 0x38, 0x77, 0xc9,
+  0xf5, 0xad, 0x3a, 0xda, 0x9c, 0xa8, 0x10, 0xdc, 0xbd, 0x2a, 0x88, 0x41,
+  0xf0, 0x28, 0x13, 0x85, 0x44, 0x84, 0x58, 0xc3, 0x26, 0xcb, 0x0d, 0x07,
+  0x5b, 0x48, 0x43, 0x1a, 0x68, 0xd4, 0xaa, 0x38, 0x82, 0x77, 0x68, 0x21,
+  0xad, 0x96, 0x8a, 0xab, 0x23, 0x54, 0x79, 0xe8, 0xc3, 0x56, 0xc8, 0x2a,
+  0x10, 0x94, 0x9c, 0x7c, 0xa8, 0x58, 0x6e, 0xba, 0x7e, 0x43, 0x57, 0xdb,
+  0x5e, 0x7b, 0x68, 0x8b, 0x13, 0xf1, 0xdd, 0x78, 0x2e, 0x48, 0x25, 0x11,
+  0x1d, 0xbd, 0x34, 0x9b, 0x2a, 0x58, 0x0e, 0xd6, 0x86, 0x35, 0x1b, 0xdb,
+  0x24, 0x5a, 0x57, 0xeb, 0x82, 0x86, 0xc0, 0x33, 0xde, 0x9c, 0x65, 0xbb,
+  0x9b, 0x41, 0x21, 0xa4, 0x2d, 0x89, 0xff, 0x2f, 0xa0, 0xfd, 0x38, 0x2c,
+  0x41, 0xb1, 0x5e, 0x70, 0x9c, 0xdb, 0x76, 0xc7, 0x50, 0xa8, 0x89, 0x5f,
+  0x3a, 0x98, 0xbd, 0x67, 0xfb, 0xc3, 0xbd, 0xa7, 0x9f, 0x0f, 0x77, 0x87,
+  0x7b, 0xbb, 0xcc, 0x5f, 0x78, 0x28, 0xc1, 0xe0, 0x64, 0x5d, 0x3a, 0xba,
+  0x6a, 0xbc, 0x17, 0xf7, 0xf9, 0xe6, 0xf8, 0xf2, 0xfb, 0xb3, 0x8b, 0x6f,
+  0x93, 0x93, 0x37, 0x97, 0xc7, 0x17, 0xaf, 0x0e, 0x8f, 0x3e, 0x15, 0x1e,
+  0x3d, 0x34, 0x5b, 0x07, 0x85, 0x80, 0x33, 0xbf, 0x30, 0xb1, 0x6d, 0xd0,
+  0xaf, 0x59, 0x56, 0xdf, 0xec, 0x1e, 0xec, 0x3d, 0x08, 0xa0, 0xdc, 0x61,
+  0x1e, 0xf4, 0xef, 0xdb, 0xa4, 0xf6, 0x78, 0x52, 0xeb, 0x5b, 0x71, 0xc8,
+  0x89, 0x23, 0x09, 0xb3, 0x72, 0x21, 0xba, 0x60, 0xf3, 0xa8, 0x33, 0x93,
+  0x8f, 0xcb, 0xd4, 0x0c, 0x53, 0x63, 0x41, 0x71, 0x95, 0x4c, 0x5b, 0xc5,
+  0x80, 0xd1, 0x70, 0x74, 0xe5, 0xb9, 0x1b, 0x52, 0x74, 0xb7, 0x56, 0x73,
+  0x8a, 0x80, 0xb2, 0x4e, 0x21, 0xe2, 0x19, 0x57, 0xd6, 0x34, 0x36, 0xa6,
+  0x16, 0x2d, 0x05, 0x29, 0x78, 0x80, 0x53, 0x97, 0x32, 0xe2, 0x00, 0x09,
+  0x36, 0x92, 0x40, 0x4e, 0xc7, 0x58, 0x9b, 0x75, 0x93, 0xc3, 0x48, 0xda,
+  0x16, 0x22, 0x6a, 0x65, 0x21, 0xce, 0x98, 0x58, 0xc3, 0x34, 0x7a, 0xa4,
+  0x03, 0xc1, 0x69, 0x08, 0x46, 0x23, 0x5d, 0x41, 0xa0, 0x32, 0x68, 0xee,
+  0x26, 0x9e, 0xaf, 0xdc, 0x51, 0x48, 0xa3, 0x10, 0xf9, 0xcf, 0x6a, 0x08,
+  0x70, 0xeb, 0x55, 0x03, 0x43, 0x30, 0x91, 0xda, 0x3f, 0xe1, 0xeb, 0x22,
+  0x6a, 0x23, 0x50, 0x73, 0x5a, 0xa6, 0x77, 0x28, 0x60, 0x91, 0x7b, 0x44,
+  0xd0, 0x8d, 0x66, 0xfd, 0x22, 0x16, 0x9c, 0xfc, 0x9a, 0x27, 0xe7, 0xc7,
+  0xaf, 0x07, 0x56, 0x79, 0x95, 0x7e, 0x17, 0x63, 0x94, 0xc1, 0x3f, 0x4a,
+  0x9a, 0xcf, 0x32, 0x5b, 0x58, 0x58, 0x0d, 0x78, 0xa2, 0xc6, 0x01, 0x85,
+  0x13, 0xe0, 0x43, 0xe3, 0x00, 0x22, 0x35, 0x7a, 0xd4, 0xc2, 0x2f, 0x1d,
+  0x82, 0x69, 0x03, 0x35, 0x93, 0xf7, 0x53, 0x63, 0x97, 0x93, 0x2d, 0x17,
+  0xaf, 0xcb, 0xfd, 0x21, 0x28, 0x15, 0x31, 0x03, 0x2e, 0x4c, 0xa0, 0xb0,
+  0x24, 0xec, 0xf3, 0x6f, 0x8f, 0x46, 0x7f, 0xdc, 0xdb, 0xd7, 0xe1, 0x6c,
+  0x0f, 0x3d, 0xbe, 0x6e, 0x94, 0x9f, 0x0f, 0x76, 0x1d, 0x8e, 0xd1, 0xb2,
+  0xad, 0x71, 0xc0, 0xb1, 0x19, 0x5b, 0x2e, 0x47, 0x68, 0xbb, 0x91, 0x24,
+  0x84, 0x20, 0xb0, 0x7b, 0x27, 0x62, 0xba, 0xca, 0xa8, 0xec, 0x12, 0x41,
+  0x01, 0x1d, 0x2d, 0x61, 0x53, 0xbb, 0xa8, 0xbf, 0x74, 0x61, 0x1f, 0x49,
+  0xcb, 0xda, 0x1a, 0xd2, 0xc9, 0x7d, 0x64, 0x4b, 0x7b, 0xcf, 0x79, 0xbd,
+  0xfd, 0xb7, 0x0c, 0xe3, 0xaa, 0x37, 0xbb, 0xe1, 0xf5, 0xf8, 0x6e, 0x70,
+  0x00, 0x34, 0x90, 0x7d, 0x6a, 0x45, 0xb2, 0x16, 0xbe, 0xe8, 0x04, 0x3f,
+  0x7d, 0x46, 0x1b, 0x45, 0x27, 0x4b, 0x20, 0x1c, 0x98, 0x29, 0x14, 0x33,
+  0x56, 0x5d, 0xdc, 0x23, 0x2f, 0x4b, 0x2e, 0xee, 0xb1, 0x94, 0x90, 0xd2,
+  0x37, 0xc3, 0xe4, 0x9b, 0x6c, 0xc1, 0x39, 0xf4, 0x1c, 0x7c, 0x67, 0x69,
+  0x58, 0x08, 0x11, 0xe4, 0x2a, 0x7d, 0xa8, 0x5a, 0x76, 0x9a, 0xa5, 0x0a,
+  0x99, 0x49, 0xbc, 0xae, 0x12, 0x0d, 0xd7, 0x2a, 0xf6, 0xa4, 0x1c, 0xa8,
+  0xa7, 0xf8, 0x9e, 0x0e, 0xf7, 0x82, 0x1f, 0x90, 0x06, 0xb6, 0x9a, 0xb8,
+  0x97, 0x00, 0xd0, 0x47, 0x73, 0x7a, 0xcc, 0xe1, 0x6b, 0x52, 0xab, 0xf2,
+  0x0d, 0xc0, 0x9f, 0xd9, 0x5a, 0x28, 0x1a, 0x97, 0x67, 0x2a, 0xd3, 0xf2,
+  0x86, 0x4d, 0x1f, 0x15, 0x5d, 0x37, 0xe9, 0x62, 0x72, 0x3f, 0x9c, 0x92,
+  0x2c, 0xcb, 0xc6, 0xb3, 0xe1, 0xea, 0x76, 0x27, 0x38, 0xa6, 0xcc, 0xf2,
+  0x6f, 0x04, 0x2e, 0xa0, 0x69, 0xf8, 0xb6, 0x8a, 0xb0, 0x31, 0xb2, 0x57,
+  0xda, 0x38, 0x13, 0x4c, 0x12, 0x96, 0xf8, 0x2f, 0xc7, 0x73, 0x2d, 0x06,
+  0xd6, 0x71, 0xe2, 0x70, 0x87, 0xb9, 0x85, 0xe1, 0x32, 0x9b, 0x1f, 0xb8,
+  0xc4, 0x64, 0xe3, 0x0f, 0x5a, 0xc3, 0xc0, 0x29, 0x16, 0x81, 0x91, 0x76,
+  0x91, 0x5d, 0xcf, 0x54, 0xa0, 0x08, 0x55, 0x17, 0x8f, 0x23, 0x1d, 0x67,
+  0x83, 0x88, 0xc2, 0xa3, 0xf5, 0x64, 0x20, 0xb1, 0x13, 0x1d, 0xd6, 0x1a,
+  0x5d, 0x2b, 0x0f, 0xa3, 0x24, 0xbb, 0x6f, 0x44, 0x41, 0x44, 0x00, 0x81,
+  0xcc, 0xc2, 0xb0, 0x9a, 0x78, 0x2c, 0x28, 0x49, 0xdd, 0x4f, 0x8c, 0xd3,
+  0x0a, 0x0a, 0x01, 0xe8, 0xb8, 0x06, 0x48, 0xc3, 0xf9, 0x69, 0x55, 0x57,
+  0xe5, 0xac, 0xd0, 0xd7, 0xef, 0x1f, 0xb1, 0xc5, 0xfb, 0xf2, 0x74, 0x64,
+  0x5e, 0x91, 0x45, 0x76, 0x17, 0x90, 0x96, 0x00, 0xe5, 0x2b, 0xfd, 0xb1,
+  0x01, 0x48, 0x10, 0x8f, 0x01, 0x7c, 0x80, 0x91, 0x08, 0x57, 0xf0, 0x6e,
+  0x32, 0x9f, 0x07, 0x61, 0x8b, 0xa0, 0x11, 0xc5, 0x3c, 0x14, 0x2b, 0x0e,
+  0x25, 0xc2, 0x90, 0x03, 0x7d, 0x61, 0x68, 0x3d, 0x12, 0x96, 0x1e, 0xf5,
+  0x93, 0xc1, 0x3e, 0xa0, 0x74, 0xf6, 0x9a, 0x8b, 0x98, 0xd6, 0x82, 0xe2,
+  0xc7, 0x6d, 0x50, 0x4b, 0xd6, 0x8a, 0xb2, 0x83, 0x2d, 0x25, 0xe9, 0xf7,
+  0xf4, 0x3e, 0xff, 0xb3, 0xaf, 0x13, 0x7a, 0xbf, 0x87, 0xe0, 0x6d, 0x81,
+  0x95, 0x9c, 0xdd, 0xc7, 0x22, 0xc3, 0xfe, 0x83, 0xbb, 0x8a, 0x34, 0x89,
+  0xbb, 0xdc, 0xe1, 0x3b, 0x0b, 0xc4, 0x3f, 0x4c, 0xa1, 0x8a, 0xd8, 0x69,
+  0x03, 0xa0, 0x25, 0x54, 0x23, 0xf7, 0x22, 0x79, 0xbf, 0x6f, 0xbe, 0x66,
+  0xfe, 0xc6, 0xd6, 0x4d, 0x8c, 0xf5, 0x9e, 0x89, 0x44, 0x19, 0x8c, 0x1c,
+  0xf0, 0x16, 0x50, 0x2d, 0x27, 0x40, 0x11, 0xcd, 0x12, 0x17, 0x69, 0x70,
+  0x99, 0x62, 0xa1, 0x66, 0x05, 0xc9, 0x7e, 0x4f, 0x17, 0xb2, 0x19, 0x24,
+  0x07, 0xfb, 0x30, 0x27, 0x04, 0x81, 0x07, 0xc1, 0x91, 0x27, 0x0b, 0x97,
+  0x33, 0xa1, 0xa6, 0x7c, 0x20, 0xe8, 0x61, 0xfb, 0x6f, 0x72, 0x31, 0x4c,
+  0x20, 0xec, 0x14, 0xd7, 0x39, 0x9d, 0xfc, 0xcd, 0x84, 0x0e, 0xd3, 0x8a,
+  0x39, 0x7e, 0xed, 0x2a, 0x55, 0x8d, 0x04, 0x79, 0x73, 0x33, 0x64, 0x73,
+  0x83, 0x2f, 0x78, 0x2a, 0xd5, 0xa6, 0x9f, 0xbb, 0x02, 0x8f, 0x37, 0x27,
+  0xa2, 0x7e, 0x0e, 0xab, 0xcd, 0x74, 0x5e, 0x5a, 0x05, 0xea, 0xcd, 0xe3,
+  0x0f, 0x2c, 0xe3, 0x6c, 0x6a, 0x4f, 0xf2, 0xb5, 0xa4, 0xf7, 0x63, 0x8d,
+  0xce, 0x4f, 0xde, 0x48, 0x51, 0x65, 0x77, 0x16, 0x32, 0x46, 0x46, 0xdc,
+  0x90, 0x7a, 0xe0, 0x18, 0x4f, 0xaa, 0x10, 0x12, 0x89, 0x18, 0x8e, 0x98,
+  0x66, 0x98, 0xc6, 0x73, 0xed, 0xeb, 0x62, 0x25, 0xbd, 0x6f, 0xf2, 0x3d,
+  0x57, 0x55, 0xb3, 0xcd, 0x56, 0xa1, 0x50, 0xb7, 0x27, 0xad, 0x0b, 0xc5,
+  0x59, 0xa4, 0x26, 0xd3, 0xb0, 0xf4, 0xb9, 0xb6, 0xd2, 0xe0, 0x73, 0xfd,
+  0x56, 0xd2, 0x63, 0x68, 0x0a, 0xff, 0x63, 0x32, 0xdc, 0xa1, 0x0e, 0xab,
+  0x1d, 0x7b, 0x71, 0x79, 0x3b, 0xa9, 0xe8, 0x86, 0xe3, 0x0c, 0xdf, 0x1f,
+  0x1d, 0x3a, 0x3c, 0x8f, 0x78, 0xfa, 0x73, 0x32, 0x98, 0xcc, 0x30, 0xbf,
+  0x04, 0x55, 0x89, 0x7f, 0xa4, 0x9d, 0xe7, 0x27, 0x7e, 0x76, 0x7b, 0xf8,
+  0x2a, 0xe7, 0xf3, 0xf6, 0xa1, 0x6f, 0x53, 0x3f, 0x13, 0x85, 0x41, 0xe0,
+  0x67, 0x93, 0xc3, 0xe9, 0x7b, 0xce, 0xbf, 0x9b, 0xea, 0x9f, 0x3c, 0x9f,
+  0xe3, 0x05, 0x8a, 0x39, 0x62, 0xa6, 0xe9, 0x58, 0xea, 0x37, 0x7f, 0x97,
+  0x93, 0xd2, 0x71, 0xd4, 0x92, 0x2f, 0x38, 0x15, 0x90, 0x07, 0x88, 0xb7,
+  0x82, 0x2f, 0x2d, 0xaf, 0xa3, 0xaf, 0xe9, 0x0b, 0x3e, 0xf2, 0x8f, 0xb9,
+  0x33, 0x6f, 0xdd, 0x30, 0xf9, 0x8a, 0x7d, 0x9c, 0x65, 0x16, 0x80, 0xb3,
+  0xea, 0xc5, 0x27, 0x45, 0xcf, 0x78, 0x33, 0x52, 0x81, 0xa2, 0x18, 0xba,
+  0x99, 0x44, 0xe9, 0x30, 0x6e, 0x4e, 0xee, 0x9b, 0xe6, 0xe4, 0x30, 0x2e,
+  0xcb, 0x6e, 0xa7, 0xa9, 0x58, 0xea, 0x44, 0x12, 0x4d, 0x25, 0x80, 0x8d,
+  0x94, 0x11, 0xca, 0x85, 0x39, 0xcd, 0x2c, 0xc7, 0xbf, 0x08, 0x81, 0x55,
+  0xcc, 0x72, 0x8c, 0xa6, 0x4c, 0x22, 0x70, 0x24, 0x81, 0x3b, 0xdc, 0x8f,
+  0xfa, 0xe8, 0x86, 0x58, 0x73, 0xe6, 0x86, 0x3a, 0x12, 0x93, 0x9e, 0x0d,
+  0x71, 0xc4, 0x77, 0x94, 0x6d, 0x82, 0xfb, 0xd2, 0x12, 0x25, 0x21, 0x85,
+  0xee, 0x08, 0xef, 0x72, 0xb4, 0x2b, 0xab, 0xdb, 0x9c, 0x02, 0xe7, 0x37,
+  0x8e, 0xde, 0xbe, 0xe6, 0x42, 0x1c, 0xa8, 0xf1, 0x7b, 0x79, 0x71, 0xf8,
+  0x66, 0xf4, 0x4a, 0x4c, 0xe3, 0x97, 0x85, 0xaf, 0x1e, 0xac, 0xf6, 0x20,
+  0xe7, 0x3f, 0x76, 0x88, 0x71, 0x77, 0x52, 0x1d, 0xc2, 0x42, 0xeb, 0xb5,
+  0xae, 0x70, 0xbf, 0x8d, 0x82, 0x2f, 0x75, 0x89, 0x79, 0x35, 0x78, 0x68,
+  0x5b, 0xa3, 0x6d, 0x27, 0x08, 0x55, 0x61, 0x05, 0x2c, 0x5f, 0xdb, 0xdb,
+  0x80, 0x9b, 0xf5, 0x21, 0x5e, 0x96, 0x23, 0x1b, 0x8c, 0x7d, 0x2a, 0x77,
+  0xef, 0x5a, 0xac, 0xd0, 0x23, 0x52, 0x15, 0x07, 0x5a, 0x57, 0x25, 0xa8,
+  0xf7, 0xe5, 0xcc, 0xa9, 0x72, 0xf7, 0x2a, 0xaa, 0x9f, 0x6b, 0x3c, 0x4c,
+  0x01, 0xb5, 0xa6, 0xb7, 0xfe, 0x75, 0x6f, 0xbb, 0xbb, 0xf9, 0xcb, 0x5f,
+  0xda, 0x7c, 0xf7, 0xd8, 0x4d, 0x37, 0xf3, 0xd9, 0x45, 0x5b, 0xff, 0xba,
+  0xbf, 0xfd, 0xe0, 0x8c, 0xc2, 0x04, 0x49, 0xdf, 0x27, 0xbd, 0xc1, 0x83,
+  0x4d, 0x5e, 0x58, 0xa5, 0x78, 0x95, 0x99, 0x5c, 0x84, 0x4e, 0x00, 0x07,
+  0xdc, 0xc0, 0xee, 0xe0, 0x08, 0x6e, 0x27, 0xa9, 0x7b, 0xc7, 0x9b, 0x26,
+  0x9a, 0x9c, 0xfc, 0xaf, 0xe3, 0x10, 0xe5, 0x71, 0xb1, 0x59, 0x87, 0x57,
+  0x14, 0x03, 0x05, 0x54, 0xc5, 0x10, 0x7d, 0xef, 0x3f, 0xd0, 0xb7, 0x9f,
+  0x5d, 0x60, 0x96, 0x60, 0x2f, 0x36, 0x87, 0xc1, 0x19, 0x58, 0xb5, 0xf6,
+  0xb3, 0xe1, 0x6b, 0x52, 0xaf, 0xef, 0xef, 0xf2, 0xe4, 0xf5, 0x31, 0x83,
+  0x5a, 0xbf, 0x3c, 0x61, 0x1c, 0xba, 0x91, 0x22, 0x41, 0x9a, 0x05, 0xc2,
+  0x01, 0xe6, 0x86, 0xd5, 0x51, 0xc4, 0xbd, 0xeb, 0xa2, 0xcd, 0x1c, 0xe7,
+  0x70, 0x3b, 0xc1, 0x5d, 0x6b, 0x38, 0x74, 0x65, 0x49, 0x97, 0x27, 0x57,
+  0x83, 0xd7, 0xc5, 0x14, 0x5a, 0xf2, 0x60, 0x84, 0x50, 0x41, 0x7a, 0x8b,
+  0x3e, 0x7c, 0xbb, 0x98, 0x37, 0x3e, 0x1e, 0x76, 0x24, 0xed, 0x6e, 0xac,
+  0x2b, 0x21, 0xf3, 0x8f, 0x9d, 0xc1, 0x00, 0x45, 0xe1, 0x25, 0xac, 0x4b,
+  0x9d, 0x3b, 0x0d, 0xa8, 0x0e, 0x63, 0x2d, 0xb4, 0x40, 0xf9, 0xec, 0x5e,
+  0x02, 0x11, 0x52, 0x1f, 0x3e, 0xe6, 0x13, 0x39, 0xaf, 0x39, 0x99, 0xcc,
+  0x9b, 0xf8, 0xc4, 0x88, 0xb7, 0x11, 0x62, 0x8b, 0x42, 0x91, 0xca, 0xee,
+  0x7c, 0xfc, 0x93, 0x16, 0xb8, 0x2d, 0x96, 0xf7, 0x98, 0xe5, 0x5d, 0x23,
+  0xb4, 0xa2, 0xd3, 0xbf, 0xfa, 0x0f, 0x79, 0xa7, 0x51, 0x34, 0x49, 0x21,
+  0xa0, 0x03, 0x0a, 0xd4, 0x4f, 0xb4, 0xc6, 0xd0, 0x59, 0x19, 0x5c, 0x57,
+  0x3a, 0x6c, 0xab, 0x25, 0x16, 0xe0, 0x8e, 0x06, 0x30, 0xa9, 0xcd, 0x71,
+  0x86, 0x18, 0xad, 0x05, 0x67, 0xc1, 0xbe, 0x2c, 0x9c, 0x73, 0x8c, 0xd8,
+  0xce, 0xb2, 0x59, 0x42, 0x36, 0x4b, 0x2c, 0xdf, 0x5b, 0xd2, 0xf9, 0x37,
+  0x07, 0x9b, 0x28, 0x9b, 0x90, 0x2f, 0x3a, 0x26, 0x33, 0xf8, 0xe5, 0xb3,
+  0x89, 0x5c, 0xaf, 0x49, 0xef, 0x8a, 0x31, 0x31, 0xd8, 0x8f, 0xd5, 0x93,
+  0x01, 0x08, 0x64, 0x8c, 0x10, 0x17, 0x5d, 0x10, 0xcc, 0xd7, 0x4c, 0x91,
+  0x14, 0xa5, 0xda, 0x45, 0xc6, 0x3a, 0x23, 0xb9, 0x58, 0x25, 0x99, 0x91,
+  0xae, 0x96, 0x53, 0x04, 0x65, 0x48, 0x38, 0xea, 0xff, 0x60, 0xcc, 0xea,
+  0xf2, 0x3e, 0xd9, 0xdb, 0xef, 0x27, 0xfb, 0xbb, 0x7b, 0xfb, 0x1d, 0x73,
+  0xe8, 0xfd, 0x0f, 0x0e, 0x8a, 0xda, 0xc7, 0xd7, 0xbd, 0x4f, 0x9d, 0x85,
+  0x4f, 0x6d, 0xc0, 0x4d, 0xa2, 0x49, 0xc0, 0xc4, 0x7c, 0xd8, 0x3f, 0x0b,
+  0x9c, 0x64, 0xd4, 0x95, 0x05, 0xb2, 0x1d, 0xae, 0x2d, 0x31, 0x12, 0x5a,
+  0x41, 0x43, 0x57, 0xe8, 0x8a, 0x9f, 0xd8, 0xd0, 0xd2, 0x9e, 0x88, 0x7c,
+  0x71, 0x96, 0xd2, 0xb4, 0x44, 0xb5, 0xc6, 0xe6, 0x1e, 0xe5, 0xb5, 0x6d,
+  0x0b, 0x87, 0xd6, 0xf0, 0xde, 0x10, 0xbd, 0xbf, 0x3c, 0x39, 0xba, 0x34,
+  0xe8, 0xc3, 0x2b, 0x16, 0x9e, 0xca, 0xfb, 0x4f, 0x2b, 0x7d, 0xf7, 0xe0,
+  0x33, 0xd3, 0x83, 0x9b, 0x8c, 0xc4, 0xe8, 0xc5, 0x78, 0x75, 0x7d, 0xf0,
+  0xb7, 0xb4, 0xbc, 0x2e, 0x16, 0x1f, 0x7b, 0x7e, 0x8a, 0xdc, 0xb2, 0x03,
+  0xe2, 0x50, 0x7b, 0xcf, 0xf6, 0x1e, 0x49, 0xe2, 0x42, 0xce, 0x75, 0x32,
+  0xc1, 0x20, 0x36, 0xe7, 0x9b, 0x82, 0xb5, 0x81, 0x8c, 0x09, 0x07, 0xb0,
+  0xb1, 0x98, 0x6e, 0xca, 0x75, 0x9f, 0x86, 0xcf, 0x4e, 0xf5, 0x59, 0xc9,
+  0x42, 0xdf, 0xdc, 0x90, 0xd2, 0x25, 0x9b, 0x9c, 0xb1, 0xb9, 0x5a, 0x6e,
+  0x36, 0x11, 0xdc, 0x3f, 0x32, 0x57, 0xee, 0xc2, 0x55, 0xfa, 0x3b, 0x72,
+  0xb8, 0xf4, 0x48, 0x26, 0x2a, 0xb3, 0xf4, 0xd6, 0x17, 0x9a, 0xf5, 0x40,
+  0x1c, 0xe6, 0xf2, 0xb8, 0x78, 0x75, 0x24, 0x60, 0xa6, 0x96, 0x3a, 0x85,
+  0xa5, 0x4e, 0x9c, 0x69, 0x6a, 0x9b, 0x47, 0xf9, 0x91, 0xfe, 0x39, 0xb7,
+  0xe1, 0x60, 0x3a, 0xfe, 0x84, 0x87, 0xe8, 0xdc, 0x09, 0x6e, 0xdc, 0x61,
+  0xb3, 0x20, 0x0e, 0x2b, 0x6a, 0x28, 0xef, 0x61, 0x15, 0x65, 0xb7, 0xa4,
+  0xea, 0xa7, 0x78, 0x1c, 0x78, 0x68, 0x56, 0xab, 0xd7, 0xac, 0x3b, 0x34,
+  0x6e, 0x2e, 0xa9, 0xf9, 0xf2, 0xf0, 0x3c, 0x50, 0x74, 0xa1, 0x48, 0x7a,
+  0xa3, 0x1e, 0x3f, 0xc7, 0x8a, 0x0e, 0x8a, 0x56, 0x8b, 0xed, 0xef, 0xbe,
+  0xef, 0x55, 0x94, 0x1a, 0x7c, 0x92, 0x65, 0x23, 0x04, 0xc8, 0x17, 0x7a,
+  0x9f, 0xc0, 0xfe, 0x84, 0x62, 0x03, 0xb3, 0x69, 0x0a, 0x47, 0xa8, 0xde,
+  0x42, 0x90, 0xb9, 0xd0, 0x56, 0xae, 0xd1, 0x50, 0xb4, 0x37, 0x1f, 0x12,
+  0x4d, 0xe2, 0xd0, 0x6c, 0x15, 0x2d, 0x07, 0x82, 0xc7, 0x38, 0x41, 0xf9,
+  0xde, 0x26, 0x20, 0xfc, 0x99, 0x06, 0x9f, 0x56, 0xb7, 0xc4, 0x4a, 0xc5,
+  0x81, 0x4f, 0xbd, 0xe7, 0xea, 0x02, 0x67, 0xa3, 0x4f, 0x2e, 0x81, 0x34,
+  0x6c, 0x7e, 0x02, 0x24, 0x52, 0x63, 0xc3, 0xe4, 0x0a, 0x62, 0x8d, 0x73,
+  0x56, 0x65, 0x02, 0x60, 0x98, 0x5c, 0xde, 0x15, 0xa2, 0x62, 0x54, 0x16,
+  0x5e, 0x2b, 0xa1, 0xa8, 0xd5, 0x2a, 0x17, 0x29, 0x92, 0x36, 0x0f, 0xfc,
+  0x20, 0xa8, 0xd9, 0xd9, 0x73, 0x96, 0xaf, 0x97, 0xce, 0xef, 0x39, 0x7a,
+  0xf9, 0x6d, 0xc2, 0xa9, 0xf5, 0xdc, 0xc7, 0x11, 0xc3, 0xed, 0x73, 0x08,
+  0xc3, 0x1c, 0xda, 0xdf, 0xd7, 0x2b, 0x3e, 0xef, 0x47, 0x37, 0xe9, 0x92,
+  0x15, 0xa0, 0xbd, 0x5d, 0x36, 0x97, 0x7c, 0x6f, 0x49, 0x7a, 0x7c, 0x50,
+  0xad, 0x24, 0x78, 0xd5, 0x0b, 0x2c, 0x29, 0x53, 0xae, 0xe8, 0xcd, 0x1a,
+  0x50, 0xd3, 0x48, 0x4b, 0xd7, 0x67, 0xb5, 0x23, 0x20, 0xfb, 0x15, 0x91,
+  0x46, 0x59, 0x4d, 0x6f, 0x77, 0x26, 0xf4, 0xe3, 0xd1, 0xee, 0x0e, 0x30,
+  0x35, 0x6b, 0xd8, 0x34, 0x99, 0x26, 0xf7, 0xf7, 0x9f, 0x3c, 0xe9, 0x27,
+  0x3d, 0xb6, 0x32, 0x5a, 0x07, 0x7c, 0x24, 0xe8, 0x64, 0xf5, 0xba, 0x8a,
+  0x97, 0xee, 0x94, 0x57, 0x13, 0xfe, 0x1f, 0xbf, 0x66, 0x25, 0x08, 0x2f,
+  0x35, 0xeb, 0x06, 0xeb, 0xb0, 0x08, 0x61, 0x72, 0x84, 0xac, 0xf8, 0xbb,
+  0x13, 0x67, 0x47, 0x62, 0xa7, 0xd1, 0x32, 0x2b, 0x96, 0xe6, 0x1d, 0x9e,
+  0x6b, 0xf9, 0x0e, 0x74, 0x1f, 0xb8, 0xd4, 0xe0, 0xcf, 0x97, 0x70, 0x38,
+  0xc5, 0x43, 0xa8, 0x56, 0xe3, 0x81, 0x26, 0x06, 0x8b, 0x56, 0x99, 0xd3,
+  0xc9, 0xa5, 0x3f, 0x67, 0x66, 0xae, 0x8f, 0x38, 0xf2, 0x57, 0x49, 0x4f,
+  0x69, 0x8b, 0xff, 0x19, 0xc2, 0xb9, 0x9b, 0x4d, 0x78, 0x1a, 0xc5, 0x0b,
+  0xfd, 0xe3, 0xdf, 0xfe, 0x8d, 0x9a, 0xfd, 0x37, 0x6e, 0xe5, 0xc5, 0xbf,
+  0x56, 0xf5, 0x4d, 0xf0, 0x4c, 0x4f, 0x09, 0xfe, 0xc4, 0xbb, 0xb6, 0x11,
+  0xae, 0x06, 0xc4, 0x59, 0xe4, 0xaf, 0xbd, 0x3e, 0x55, 0x8e, 0xdc, 0x0f,
+  0xe6, 0x97, 0x23, 0xb3, 0x50, 0x8c, 0xa4, 0x2e, 0x5a, 0xe4, 0x2b, 0x76,
+  0x3b, 0x67, 0x9c, 0x91, 0x4e, 0x17, 0x09, 0x00, 0x05, 0xb7, 0x4d, 0xc4,
+  0x38, 0x7e, 0xf3, 0xdd, 0xc9, 0xc5, 0xd9, 0x9b, 0xd7, 0xc7, 0x6f, 0x2e,
+  0x93, 0xef, 0x0e, 0x2f, 0x4e, 0x0e, 0xbf, 0x3a, 0xd5, 0xc4, 0x77, 0x9e,
+  0x02, 0x07, 0xf9, 0x88, 0xec, 0xdd, 0x02, 0x84, 0x0d, 0x12, 0x91, 0x3a,
+  0x4b, 0x7b, 0xb4, 0x6a, 0xd0, 0xbe, 0x53, 0x84, 0x71, 0x68, 0x22, 0xef,
+  0x50, 0xa5, 0xa8, 0xcf, 0xc2, 0xe7, 0x3b, 0x2b, 0x58, 0xc4, 0xca, 0xd3,
+  0x7d, 0x90, 0x4a, 0xcd, 0xf1, 0x47, 0x4c, 0xa5, 0xc6, 0x9f, 0x7c, 0xe5,
+  0x3a, 0x57, 0xfb, 0xe2, 0x6b, 0xc9, 0xc6, 0xb7, 0x42, 0x20, 0xf6, 0xaa,
+  0x66, 0x86, 0xc1, 0xee, 0xe6, 0xc6, 0x70, 0x78, 0x7a, 0xea, 0xbb, 0x7a,
+  0xb8, 0x46, 0x8c, 0x22, 0x31, 0x49, 0xf2, 0x16, 0x1a, 0x65, 0xc7, 0xe0,
+  0x75, 0xe1, 0xe1, 0xd2, 0x17, 0xf7, 0x21, 0x32, 0x3a, 0x77, 0x46, 0xdb,
+  0xb1, 0x25, 0x10, 0x1a, 0xec, 0x25, 0xa6, 0x03, 0x94, 0x57, 0xb7, 0xfd,
+  0x64, 0xf3, 0x5f, 0x37, 0x25, 0xa9, 0x2e, 0x03, 0x6e, 0xb0, 0x54, 0xa0,
+  0xd9, 0xf6, 0x83, 0x7a, 0x73, 0xe6, 0xc7, 0xa4, 0x8e, 0x4f, 0x37, 0x00,
+  0xf7, 0xa2, 0x77, 0x5b, 0x57, 0x26, 0xcf, 0x20, 0x5e, 0xd4, 0x3f, 0xae,
+  0x65, 0x1a, 0x1c, 0x32, 0x80, 0xd2, 0x28, 0x3b, 0xb6, 0x3a, 0xdf, 0x85,
+  0xd6, 0x96, 0x4e, 0x02, 0x78, 0x68, 0xcc, 0x75, 0xc1, 0xa6, 0x0e, 0x57,
+  0x3a, 0xcb, 0xac, 0x81, 0xb4, 0xd4, 0x6c, 0xd3, 0x53, 0x77, 0xe2, 0xaa,
+  0x52, 0x0e, 0x0a, 0xaa, 0xfa, 0xb0, 0x63, 0x95, 0x68, 0xe0, 0x63, 0xe4,
+  0x7c, 0x80, 0x32, 0x9f, 0x2a, 0xdc, 0x60, 0x27, 0x55, 0x0c, 0xe1, 0x9a,
+  0xba, 0x38, 0x02, 0x3a, 0xfb, 0x82, 0x4b, 0x08, 0xfa, 0x4a, 0x17, 0x88,
+  0x1d, 0x26, 0x2e, 0x52, 0x72, 0x42, 0xde, 0x42, 0x85, 0x10, 0xc4, 0xe3,
+  0x42, 0x46, 0x4f, 0xaf, 0x0b, 0x93, 0xbf, 0x53, 0xe7, 0x34, 0x77, 0xf5,
+  0xc0, 0x02, 0x99, 0xde, 0x61, 0x88, 0x39, 0x93, 0x25, 0xdc, 0xeb, 0xe6,
+  0x20, 0xe0, 0xf0, 0x32, 0xde, 0x72, 0x2b, 0xd7, 0x5b, 0x05, 0x59, 0xda,
+  0x3e, 0x7b, 0x81, 0x79, 0x89, 0x04, 0xe9, 0x1b, 0xa8, 0x17, 0x80, 0xd4,
+  0x2c, 0xab, 0x1b, 0x81, 0x8e, 0x18, 0x16, 0x3f, 0x88, 0x26, 0x35, 0x66,
+  0x15, 0x4d, 0x9a, 0xed, 0x9a, 0x4e, 0xcf, 0x8c, 0x13, 0xc8, 0x8c, 0x13,
+  0xa5, 0xc9, 0x38, 0xbf, 0x16, 0x74, 0x00, 0x4e, 0x45, 0x67, 0x2a, 0x01,
+  0xd8, 0x1b, 0x29, 0xf6, 0xbc, 0x55, 0x80, 0x72, 0x83, 0xec, 0x7e, 0x53,
+  0xcc, 0x42, 0xbc, 0x31, 0x9b, 0x49, 0xa5, 0x95, 0xce, 0xcc, 0xf4, 0x09,
+  0xd7, 0xc7, 0x8a, 0xd7, 0xd1, 0xa2, 0xd1, 0x14, 0xa8, 0x5c, 0x63, 0xf3,
+  0xd8, 0xa6, 0x0e, 0xd4, 0xc4, 0x05, 0x32, 0x81, 0x2c, 0xab, 0x1a, 0xeb,
+  0x60, 0x71, 0xcb, 0xcc, 0x2d, 0x60, 0x47, 0xe3, 0x7a, 0x85, 0x5b, 0x0e,
+  0x69, 0x9c, 0x5b, 0x99, 0x08, 0x56, 0x2b, 0x13, 0xbd, 0x78, 0x94, 0x9b,
+  0xe5, 0x7a, 0x74, 0xb3, 0x14, 0x45, 0x8b, 0x68, 0x82, 0x07, 0x4d, 0x2b,
+  0xb5, 0x15, 0x30, 0x9e, 0x05, 0x91, 0x88, 0x3c, 0x26, 0x0a, 0xa4, 0xfe,
+  0x35, 0x70, 0x95, 0xc6, 0xd4, 0xef, 0xbc, 0xed, 0xe3, 0x0e, 0x44, 0x0a,
+  0x60, 0x6a, 0x9d, 0x68, 0x49, 0x44, 0x78, 0xe8, 0xb9, 0x6e, 0x23, 0xa0,
+  0xa1, 0x1a, 0xb6, 0xc7, 0xc4, 0xf2, 0x6d, 0x66, 0xb3, 0x00, 0x6a, 0x5c,
+  0xcc, 0x11, 0x69, 0x24, 0x7b, 0xb0, 0x73, 0x48, 0xd2, 0x50, 0x35, 0xf2,
+  0x47, 0x60, 0x89, 0x83, 0x89, 0x68, 0x4c, 0x39, 0x4b, 0x67, 0x2d, 0x93,
+  0x66, 0xc0, 0xd0, 0xcc, 0x3b, 0x1e, 0x5e, 0x4c, 0x5a, 0xed, 0x22, 0x4f,
+  0xe7, 0x22, 0x3b, 0x7a, 0xea, 0x9b, 0xdf, 0x4b, 0xd4, 0xe1, 0xc6, 0xc6,
+  0xd1, 0xdb, 0xd1, 0xe5, 0xd9, 0xeb, 0xe4, 0xec, 0xed, 0xe5, 0xf9, 0xdb,
+  0x4b, 0xbd, 0xb9, 0xc6, 0x12, 0xb3, 0x2d, 0x91, 0x0b, 0x22, 0x04, 0xd8,
+  0x66, 0xce, 0xd5, 0xbf, 0x8f, 0x10, 0x93, 0x02, 0x00, 0x83, 0x01, 0xb6,
+  0x90, 0xcb, 0xc9, 0x02, 0xea, 0x96, 0x20, 0x17, 0x63, 0xc9, 0xef, 0x68,
+  0xc9, 0x91, 0x4f, 0x0b, 0x43, 0x9e, 0xa5, 0x78, 0x41, 0xed, 0xb1, 0xb3,
+  0xd6, 0xac, 0x24, 0xd3, 0x2a, 0x84, 0x09, 0xe7, 0x7c, 0x13, 0xcb, 0xc9,
+  0xc7, 0x51, 0x99, 0x6d, 0xc7, 0x9b, 0x7e, 0xc2, 0x90, 0x4e, 0x04, 0x33,
+  0x4d, 0x6a, 0x33, 0x40, 0x5b, 0x54, 0x2d, 0x42, 0x8d, 0x9a, 0x89, 0x85,
+  0x61, 0x7e, 0x63, 0x5d, 0xd0, 0x0c, 0x6f, 0x5c, 0x44, 0x3c, 0x47, 0x11,
+  0x21, 0x12, 0x50, 0x02, 0x28, 0x38, 0xe4, 0x4e, 0x34, 0x06, 0xd2, 0x03,
+  0xd9, 0x65, 0x11, 0xdd, 0xb2, 0x77, 0xc9, 0xe6, 0xf7, 0x59, 0xd8, 0xe0,
+  0x9f, 0xfe, 0x9d, 0xd3, 0x36, 0xdf, 0xd9, 0x27, 0xff, 0x29, 0x5d, 0xfe,
+  0xb4, 0xd8, 0x44, 0x00, 0x5d, 0xd3, 0x53, 0xfe, 0xed, 0xf1, 0xc5, 0x57,
+  0xc7, 0x17, 0x67, 0x23, 0xf0, 0x03, 0x33, 0x77, 0xc5, 0xb4, 0x7e, 0x9b,
+  0x95, 0xe3, 0xac, 0x2c, 0xb4, 0xca, 0x95, 0xfd, 0xf5, 0x64, 0xe7, 0xeb,
+  0xd1, 0xe8, 0xf0, 0xfc, 0xc4, 0xd5, 0x91, 0x71, 0x09, 0x64, 0xa2, 0x22,
+  0x2d, 0x24, 0xc5, 0x91, 0xe7, 0x6f, 0xaf, 0x10, 0x5d, 0x4c, 0x6e, 0x25,
+  0xb0, 0x38, 0xf2, 0x49, 0x9b, 0x5d, 0x9d, 0x9d, 0xd1, 0x9a, 0x57, 0xc8,
+  0x0d, 0x1b, 0x26, 0x54, 0x88, 0x3b, 0x2f, 0x00, 0xf1, 0xec, 0x0b, 0xe8,
+  0xbb, 0x08, 0xbc, 0xdb, 0x72, 0x3c, 0x20, 0x6a, 0xbf, 0xb5, 0x2a, 0xc3,
+  0x92, 0x07, 0x41, 0xac, 0x52, 0x02, 0xa4, 0xbd, 0xad, 0xe1, 0x96, 0x0b,
+  0x8e, 0xef, 0xdc, 0xf2, 0xf9, 0xe0, 0x1a, 0x27, 0xb3, 0xa1, 0x70, 0x77,
+  0x39, 0x50, 0x16, 0xf5, 0xca, 0x2c, 0xf6, 0x21, 0x9c, 0x0a, 0xea, 0xcd,
+  0x15, 0x26, 0x14, 0x7b, 0x17, 0x7d, 0xf2, 0xd8, 0x01, 0x76, 0x85, 0xb5,
+  0xa8, 0xaf, 0x48, 0x00, 0x5f, 0xde, 0x4d, 0xf5, 0x12, 0x01, 0x5e, 0xf5,
+  0x42, 0xdc, 0x13, 0xc2, 0xc3, 0xdb, 0x0e, 0x2a, 0x2e, 0x9e, 0x88, 0x84,
+  0x0d, 0x0d, 0x47, 0x4f, 0xc6, 0xb3, 0x74, 0x71, 0x8b, 0xdb, 0x0c, 0xf7,
+  0x13, 0xab, 0x9c, 0x06, 0x43, 0xc5, 0x45, 0x2d, 0xe1, 0x8f, 0x54, 0x64,
+  0x08, 0x08, 0x81, 0x33, 0x66, 0x6e, 0xf7, 0x62, 0xcb, 0x77, 0x68, 0x5b,
+  0x81, 0xe7, 0x0d, 0xc7, 0xc9, 0x2f, 0x02, 0x9b, 0x8e, 0x8e, 0x4f, 0xe9,
+  0x62, 0x72, 0x49, 0x26, 0x50, 0xd1, 0xb3, 0x19, 0x9b, 0x82, 0x2d, 0x22,
+  0x48, 0xf2, 0x2a, 0x73, 0x30, 0x32, 0xe1, 0x1e, 0x06, 0xa5, 0x0e, 0xff,
+  0x11, 0xc8, 0x05, 0xe9, 0xa3, 0x95, 0x2b, 0x38, 0xa2, 0x9c, 0x5b, 0x98,
+  0x18, 0x70, 0x42, 0x7d, 0xfd, 0x91, 0xb0, 0x3a, 0x8d, 0x86, 0xdb, 0x1d,
+  0xf9, 0x78, 0x20, 0x57, 0xae, 0x4b, 0x06, 0xe1, 0xc5, 0x52, 0xe7, 0x61,
+  0x6c, 0x64, 0xb7, 0xac, 0xdd, 0x26, 0x79, 0xbd, 0xcb, 0x08, 0x20, 0xf0,
+  0x66, 0x53, 0xf5, 0x77, 0x38, 0x64, 0x20, 0x0b, 0x59, 0x6e, 0x86, 0x09,
+  0xdb, 0xc0, 0x25, 0x1a, 0x80, 0x8d, 0xb7, 0xb3, 0xda, 0x9c, 0x86, 0x08,
+  0x71, 0xd5, 0x1b, 0xb8, 0x9e, 0x82, 0xe5, 0x94, 0x0d, 0xd0, 0xda, 0x30,
+  0x3a, 0x57, 0xc0, 0x2b, 0x60, 0x1b, 0x94, 0x7c, 0x0d, 0x68, 0x31, 0x4e,
+  0xbe, 0x1d, 0xbc, 0xe1, 0xeb, 0xa2, 0x18, 0x8c, 0x57, 0xd0, 0xcb, 0x82,
+  0x32, 0x5a, 0x92, 0xc3, 0xc9, 0xf5, 0xe6, 0x81, 0xab, 0x86, 0xef, 0xd9,
+  0x1f, 0x85, 0xec, 0x78, 0x71, 0x51, 0x21, 0x5d, 0xb2, 0x89, 0xb9, 0xe3,
+  0x90, 0x56, 0x24, 0x07, 0x01, 0xb1, 0xd8, 0x56, 0x78, 0x4d, 0x46, 0xa8,
+  0x9b, 0xec, 0xa2, 0x05, 0x17, 0x5a, 0x7b, 0x15, 0x9e, 0x95, 0x66, 0xc4,
+  0x75, 0xed, 0xa0, 0xef, 0x2f, 0x21, 0x26, 0x64, 0x0a, 0x08, 0x6f, 0xa1,
+  0xd4, 0x96, 0xb8, 0xf1, 0xbe, 0xe6, 0xc2, 0x4f, 0x02, 0x12, 0x91, 0xce,
+  0xa4, 0x62, 0xc7, 0xda, 0xab, 0x44, 0x0e, 0x53, 0x7d, 0x79, 0xf9, 0xd7,
+  0xf3, 0xe3, 0x17, 0xf6, 0xe6, 0x43, 0x7b, 0x26, 0xd8, 0x69, 0x88, 0x99,
+  0xc9, 0x14, 0xab, 0x34, 0xa8, 0xe4, 0x4c, 0x44, 0x36, 0xa8, 0xcd, 0x97,
+  0x2f, 0xdd, 0x0c, 0x92, 0x1f, 0x5e, 0x9e, 0x8c, 0xce, 0x4f, 0xcf, 0x8e,
+  0x5e, 0x3c, 0xff, 0xc1, 0x58, 0xf2, 0x17, 0xec, 0x22, 0x10, 0x39, 0xcd,
+  0x7d, 0xe6, 0xb1, 0x1d, 0xf4, 0xbd, 0x37, 0xc7, 0xdf, 0xbf, 0x23, 0xed,
+  0xe0, 0x05, 0x23, 0xbc, 0xf7, 0xdf, 0xa7, 0x33, 0x7d, 0x89, 0x55, 0xac,
+  0x0e, 0xd9, 0x6e, 0xd8, 0x04, 0xe3, 0x6b, 0x2f, 0xac, 0xab, 0x1e, 0xea,
+  0xf3, 0x14, 0xee, 0x2d, 0x8c, 0x2e, 0x28, 0x14, 0x95, 0x36, 0xd2, 0x6a,
+  0x3b, 0x4a, 0xfc, 0xfa, 0xeb, 0x7f, 0xb3, 0x96, 0x98, 0x4a, 0x0e, 0x21,
+  0x08, 0x3d, 0xf3, 0x88, 0x5b, 0xd5, 0x6f, 0x7c, 0x3c, 0xaf, 0x22, 0x29,
+  0x97, 0x1c, 0xc0, 0xe2, 0xa0, 0x28, 0xb5, 0xce, 0x32, 0x7c, 0xde, 0x8a,
+  0x57, 0xa9, 0x20, 0x4c, 0x1c, 0x42, 0x6b, 0xd1, 0xf4, 0xc6, 0xc7, 0x54,
+  0x84, 0x71, 0x63, 0x49, 0xad, 0x94, 0x2d, 0x6a, 0xf3, 0x9c, 0x1f, 0x5f,
+  0x8c, 0x4e, 0x46, 0x97, 0xac, 0x46, 0x69, 0x5d, 0x45, 0xb5, 0x41, 0x5b,
+  0xd1, 0x4b, 0x60, 0x36, 0x34, 0xa1, 0x47, 0xc3, 0xba, 0x21, 0x8d, 0x13,
+  0xed, 0xd8, 0x5c, 0x33, 0x89, 0x93, 0x6f, 0x00, 0xc9, 0x0c, 0x65, 0x41,
+  0x54, 0x00, 0x74, 0xd3, 0x2b, 0x3b, 0xc0, 0x85, 0x92, 0x46, 0xab, 0x7c,
+  0x06, 0x4a, 0xdf, 0x60, 0x77, 0x66, 0xf9, 0xd8, 0x5b, 0xcd, 0x5b, 0x2e,
+  0x64, 0x8e, 0x4e, 0x50, 0xb0, 0x8e, 0xf0, 0x08, 0x99, 0x3d, 0xdc, 0x67,
+  0x46, 0x6b, 0xa9, 0x5d, 0xbd, 0xd6, 0x34, 0xab, 0x31, 0xcc, 0x5f, 0x75,
+  0x8a, 0x2a, 0x94, 0x13, 0x93, 0xd3, 0xdc, 0xa7, 0x41, 0x10, 0xaa, 0xe2,
+  0x3f, 0x01, 0xba, 0x56, 0x59, 0x36, 0x33, 0xe5, 0x5c, 0x32, 0xd1, 0xd8,
+  0xd0, 0x42, 0x52, 0x0b, 0x32, 0xeb, 0x11, 0x27, 0xa4, 0x33, 0x8b, 0x44,
+  0x10, 0x15, 0x1d, 0xaf, 0x39, 0x85, 0x0d, 0x20, 0x5b, 0x53, 0x96, 0xb7,
+  0x60, 0x81, 0x0b, 0x3b, 0xb3, 0xeb, 0x94, 0x57, 0x70, 0xbc, 0x0a, 0x0b,
+  0xb5, 0xb9, 0xd1, 0x4b, 0x7d, 0x12, 0x2c, 0x3c, 0x22, 0x24, 0xd3, 0x12,
+  0x28, 0x96, 0xb5, 0x82, 0xc6, 0x9b, 0xe2, 0xa3, 0xe1, 0x8e, 0xc3, 0x26,
+  0x9e, 0x8f, 0xd1, 0xa5, 0x15, 0x13, 0x7d, 0x68, 0x45, 0x83, 0xca, 0x8e,
+  0x4c, 0xbe, 0x65, 0x66, 0x71, 0x4b, 0x62, 0x66, 0xa8, 0xd8, 0xe1, 0xb0,
+  0x98, 0xb8, 0xcb, 0x98, 0x93, 0x8e, 0xd8, 0xbf, 0x58, 0x2a, 0x56, 0x12,
+  0xb1, 0x3f, 0xb6, 0x2c, 0xa3, 0x1c, 0x24, 0xea, 0x24, 0xb3, 0xd7, 0xcd,
+  0x70, 0xf4, 0x7c, 0x18, 0xb7, 0x2c, 0x77, 0x40, 0x56, 0x62, 0x5e, 0xbf,
+  0xd7, 0x0e, 0x5d, 0x82, 0xbc, 0x6d, 0x56, 0x5f, 0xf2, 0xad, 0x52, 0xa4,
+  0xf7, 0x98, 0x5d, 0x37, 0x48, 0x13, 0xad, 0x34, 0xf9, 0xd6, 0xb9, 0xa7,
+  0xc1, 0xf0, 0x1a, 0x35, 0x71, 0x79, 0x76, 0x0d, 0xd7, 0x20, 0xc9, 0x97,
+  0x4b, 0x14, 0x53, 0x9a, 0x28, 0x9a, 0x3c, 0x82, 0x76, 0x5d, 0x83, 0x76,
+  0x89, 0xf8, 0xc5, 0xa2, 0x55, 0x7d, 0xfd, 0xf6, 0xf4, 0xf2, 0xe4, 0x3c,
+  0x74, 0x3f, 0x26, 0xdf, 0x9f, 0x5c, 0x7e, 0x43, 0x52, 0xfb, 0xe8, 0xe4,
+  0xcd, 0xd7, 0xa7, 0xec, 0xe3, 0x79, 0xfd, 0xfa, 0xf0, 0x0d, 0xa3, 0x0b,
+  0xbc, 0x41, 0x64, 0xe3, 0x21, 0x14, 0x07, 0x66, 0x47, 0xb4, 0xc4, 0x4c,
+  0x3b, 0x9c, 0x77, 0xde, 0x8f, 0x5d, 0x0d, 0xad, 0xe3, 0x27, 0x35, 0x8f,
+  0x17, 0xcd, 0x45, 0xe2, 0x1d, 0x57, 0xcd, 0xe0, 0x9e, 0x0d, 0x3b, 0x38,
+  0xb6, 0xac, 0x6c, 0xf1, 0x42, 0xb7, 0x61, 0xe4, 0x91, 0xe3, 0x28, 0x12,
+  0x3a, 0xdc, 0xe8, 0x72, 0x77, 0x7b, 0xf7, 0x05, 0x76, 0xd4, 0x81, 0xd0,
+  0x42, 0x8f, 0x21, 0x99, 0x69, 0xa1, 0x7a, 0x8d, 0xdc, 0x97, 0xcd, 0x9c,
+  0x03, 0xea, 0x11, 0x43, 0x42, 0x1c, 0x41, 0xe1, 0x2d, 0x82, 0xac, 0x71,
+  0xb2, 0xd2, 0x7c, 0x71, 0x1a, 0x5e, 0xa8, 0xcd, 0x32, 0xf4, 0x16, 0x1e,
+  0x78, 0x5d, 0x64, 0xfe, 0xe4, 0x0e, 0xce, 0xac, 0x19, 0x33, 0xff, 0x42,
+  0x0d, 0x93, 0xcb, 0x65, 0xc0, 0x7c, 0x6d, 0x40, 0x5b, 0xb2, 0xed, 0x2a,
+  0x0e, 0xa9, 0xf9, 0xec, 0x40, 0xc4, 0x4a, 0x07, 0xb3, 0x6c, 0xc5, 0xf3,
+  0xa8, 0x39, 0x6b, 0x59, 0x43, 0x51, 0x10, 0x8f, 0xad, 0x69, 0x4d, 0x3a,
+  0x67, 0x70, 0x4b, 0x7b, 0xac, 0x91, 0x95, 0x2d, 0xf7, 0xdd, 0x99, 0x99,
+  0xf6, 0x2c, 0xad, 0x0d, 0xc9, 0xac, 0x0c, 0xbf, 0xe3, 0x3d, 0xa7, 0x28,
+  0xb2, 0x56, 0x14, 0xc3, 0xec, 0x43, 0xc6, 0x4e, 0x4e, 0xfe, 0xf5, 0x6f,
+  0xcb, 0xeb, 0x30, 0xe3, 0x4d, 0xca, 0x3e, 0x2f, 0xbb, 0x76, 0x56, 0x31,
+  0x9d, 0x45, 0x2c, 0xd2, 0x52, 0x73, 0x8d, 0x11, 0x68, 0xfd, 0xb8, 0xbd,
+  0x75, 0x1d, 0xea, 0xf7, 0xfb, 0xf1, 0xf7, 0xfb, 0x62, 0x76, 0x3c, 0x39,
+  0x7f, 0xff, 0xd4, 0x61, 0xa1, 0x4a, 0x1e, 0x77, 0x28, 0xbe, 0x99, 0x50,
+  0xc0, 0x14, 0xc6, 0x8f, 0xca, 0x9d, 0x93, 0x0a, 0x4f, 0x14, 0xdb, 0x3f,
+  0x47, 0x90, 0xad, 0x4a, 0xe4, 0xa7, 0xe2, 0x11, 0x98, 0x89, 0x25, 0xec,
+  0x17, 0x41, 0x76, 0xe0, 0x53, 0x7c, 0x5d, 0x51, 0x83, 0xf4, 0xfd, 0x63,
+  0x17, 0x8b, 0xef, 0x79, 0x1a, 0xca, 0xb5, 0x69, 0x36, 0xd4, 0x20, 0x5f,
+  0xbe, 0xb7, 0x1a, 0xbc, 0xf4, 0xeb, 0x53, 0x57, 0xaa, 0xa7, 0x6a, 0xf8,
+  0xa8, 0x1a, 0xb8, 0xc3, 0xc6, 0xfc, 0x31, 0x38, 0x84, 0x45, 0x32, 0x67,
+  0xf0, 0x4a, 0x46, 0x6b, 0x5c, 0x59, 0x33, 0x20, 0x3b, 0x28, 0x22, 0x0a,
+  0x03, 0xf3, 0x0c, 0x99, 0xb1, 0xe0, 0x47, 0x01, 0x73, 0x09, 0x31, 0xff,
+  0x75, 0xd7, 0x7f, 0xdc, 0xdf, 0xdd, 0xdd, 0x3b, 0xd8, 0xfb, 0xfc, 0xd9,
+  0xee, 0xc1, 0xde, 0xde, 0xde, 0xfe, 0xc1, 0xde, 0xc1, 0xc1, 0xfe, 0xee,
+  0xcf, 0x3b, 0x6c, 0x3f, 0x7a, 0x9f, 0x67, 0x77, 0xe6, 0x98, 0x92, 0x5c,
+  0x3c, 0x90, 0xb5, 0xd4, 0x52, 0x57, 0x0d, 0x5e, 0xf5, 0x5c, 0x93, 0x7c,
+  0x1c, 0xaa, 0x84, 0x84, 0xcc, 0x0b, 0x98, 0xdc, 0xd2, 0x67, 0x9a, 0xe2,
+  0x0c, 0x06, 0x80, 0xd7, 0x18, 0xd5, 0xdf, 0x57, 0x3c, 0xd3, 0x31, 0x8b,
+  0x03, 0x90, 0x69, 0x2a, 0x97, 0xd7, 0x77, 0x3d, 0x2b, 0xc6, 0x63, 0x64,
+  0x2e, 0xb8, 0xd4, 0xd6, 0x61, 0xc2, 0xa8, 0xaa, 0xb7, 0x42, 0x12, 0xea,
+  0x39, 0x40, 0x50, 0xa1, 0x1c, 0x74, 0xbf, 0x3a, 0x22, 0x78, 0x69, 0x20,
+  0xf5, 0xa4, 0xe0, 0x0a, 0x03, 0x53, 0x66, 0x4a, 0xb4, 0x48, 0xa5, 0x4b,
+  0x79, 0x49, 0xae, 0xb2, 0xcf, 0x77, 0x0f, 0x0e, 0xb8, 0x08, 0xc8, 0x9f,
+  0xf6, 0xfa, 0x1a, 0x0f, 0x1a, 0x06, 0xb9, 0xf7, 0xdd, 0xf5, 0x24, 0x6d,
+  0xb0, 0xfa, 0x11, 0xce, 0x73, 0xb1, 0x9a, 0x67, 0xa5, 0x2a, 0x22, 0xb8,
+  0x10, 0x05, 0xfc, 0x87, 0x89, 0xd1, 0x86, 0xec, 0x9e, 0x45, 0x61, 0x1b,
+  0xd8, 0xe5, 0x25, 0x35, 0xc5, 0xdf, 0x9e, 0x7a, 0xce, 0x71, 0x54, 0x16,
+  0x52, 0x3e, 0x94, 0x1f, 0x86, 0x44, 0x0e, 0x44, 0x93, 0xe2, 0x36, 0x14,
+  0x56, 0x35, 0x1f, 0xe7, 0xc7, 0x60, 0xf0, 0xfb, 0x4f, 0xf6, 0x7e, 0x96,
+  0xf0, 0x43, 0x26, 0x70, 0xbf, 0x0a, 0x5a, 0xe8, 0x6d, 0x1a, 0x66, 0x5c,
+  0x18, 0x61, 0x6c, 0x65, 0xc3, 0xeb, 0xa1, 0x49, 0x09, 0x6a, 0x3d, 0xec,
+  0x87, 0x41, 0xe0, 0x82, 0x40, 0x2e, 0x65, 0x81, 0xa1, 0x77, 0x99, 0x81,
+  0xc8, 0x0c, 0xbc, 0x62, 0x9c, 0x6c, 0x54, 0xec, 0xa1, 0x1b, 0xe3, 0xf8,
+  0xf2, 0x90, 0x2e, 0x83, 0x6f, 0x63, 0xc5, 0xfd, 0x75, 0x46, 0x5a, 0x36,
+  0x6f, 0xde, 0x16, 0xe8, 0xfb, 0xbd, 0xc3, 0xfd, 0xe5, 0xd5, 0x7b, 0x9c,
+  0x6c, 0xb1, 0x0f, 0xe2, 0xc9, 0xe7, 0x4f, 0x1e, 0x6f, 0x4b, 0x91, 0x05,
+  0x79, 0x2d, 0xe3, 0x7c, 0x0f, 0x58, 0x19, 0x15, 0x6c, 0x86, 0xcd, 0xc3,
+  0x8e, 0xc5, 0xbc, 0xbd, 0x38, 0x91, 0x23, 0x7a, 0x23, 0x98, 0x00, 0xa2,
+  0xc4, 0xb6, 0x71, 0xe2, 0x70, 0x7f, 0x06, 0x42, 0xc3, 0x3c, 0x67, 0x0c,
+  0x43, 0xe4, 0x52, 0xf3, 0x45, 0xe7, 0x72, 0xf9, 0x71, 0x63, 0xd2, 0x81,
+  0x2b, 0x50, 0x7a, 0x50, 0x2b, 0x3a, 0x61, 0x30, 0x00, 0x3d, 0x64, 0xcc,
+  0x55, 0xa5, 0x1b, 0xa7, 0x51, 0xb1, 0x5e, 0x23, 0xfc, 0x45, 0xb8, 0x79,
+  0x0b, 0x67, 0x7b, 0x5b, 0x3c, 0xf8, 0x10, 0xf2, 0x98, 0xac, 0xe8, 0x41,
+  0x0b, 0x05, 0xe5, 0x11, 0x37, 0xb2, 0xcb, 0xbc, 0xf4, 0x18, 0x60, 0x34,
+  0x19, 0x3c, 0x8b, 0xb2, 0x16, 0xb7, 0x84, 0xe2, 0x9e, 0xae, 0x61, 0x29,
+  0xcc, 0x1b, 0x26, 0x1c, 0xcd, 0x8d, 0x47, 0x8e, 0x3a, 0x42, 0x88, 0xe7,
+  0x74, 0xbd, 0x94, 0xf7, 0x2a, 0x31, 0x43, 0xec, 0x77, 0x95, 0xd2, 0x5a,
+  0x0e, 0x7e, 0x41, 0x81, 0x08, 0x23, 0xe3, 0x1d, 0x08, 0x8a, 0x29, 0xc1,
+  0x8d, 0x01, 0x34, 0xd8, 0xf8, 0x60, 0x6e, 0x5f, 0x05, 0xf1, 0x2f, 0x61,
+  0xba, 0x98, 0xfd, 0x6e, 0xcf, 0x05, 0xa1, 0x91, 0x69, 0x7b, 0x62, 0x6b,
+  0x86, 0x26, 0x58, 0x99, 0x08, 0x87, 0x72, 0xda, 0xcc, 0x16, 0x46, 0xb2,
+  0xb3, 0xb3, 0xbd, 0x66, 0x34, 0xfa, 0x75, 0x57, 0xef, 0xe7, 0xc0, 0x18,
+  0x09, 0x32, 0x34, 0x69, 0xcf, 0x9b, 0x8d, 0xf3, 0xd2, 0xe6, 0x15, 0xef,
+  0xe4, 0x54, 0xe3, 0x5c, 0xc5, 0x2c, 0x6a, 0xea, 0x92, 0x0c, 0xde, 0x98,
+  0x51, 0x73, 0x12, 0x1a, 0x5a, 0x63, 0x98, 0x4f, 0x52, 0xc3, 0x59, 0xdc,
+  0x95, 0xc3, 0xe4, 0x90, 0xa9, 0xa1, 0xd1, 0x71, 0x30, 0x64, 0xb3, 0xcf,
+  0x1a, 0xa2, 0xb9, 0x09, 0xa5, 0xce, 0x3c, 0xd7, 0x0f, 0xbe, 0x34, 0xb1,
+  0xcd, 0x52, 0xfc, 0x9d, 0xf1, 0x76, 0x9c, 0x09, 0x9c, 0x89, 0xe3, 0x84,
+  0x01, 0x52, 0x71, 0xbe, 0x68, 0x94, 0x00, 0xd5, 0x46, 0xe0, 0xb8, 0x76,
+  0x93, 0x00, 0x08, 0x62, 0x69, 0xe0, 0xba, 0x61, 0x59, 0x40, 0x20, 0x0a,
+  0x68, 0x90, 0xba, 0x08, 0xca, 0x8e, 0x88, 0xc5, 0x7b, 0x3a, 0x16, 0xf2,
+  0x6a, 0xac, 0x47, 0x5f, 0x28, 0x5e, 0x82, 0x12, 0x24, 0x7e, 0x96, 0x0e,
+  0x09, 0x33, 0x8c, 0xc3, 0x93, 0x53, 0x8e, 0x72, 0x3b, 0x25, 0x95, 0x6d,
+  0x64, 0xa2, 0x0f, 0xa2, 0x3e, 0x11, 0x7f, 0xb7, 0xc8, 0x59, 0xfc, 0xee,
+  0xbb, 0x52, 0x22, 0x96, 0xfc, 0x04, 0x3d, 0x84, 0x9d, 0x75, 0xa2, 0xca,
+  0x2b, 0xe6, 0x1f, 0xed, 0x16, 0xc9, 0x3f, 0x95, 0x18, 0x61, 0x01, 0xad,
+  0xcb, 0xa0, 0xf3, 0x70, 0x8c, 0x42, 0x45, 0x16, 0x46, 0x8d, 0x4a, 0x46,
+  0x65, 0x36, 0xcb, 0xde, 0xab, 0xb5, 0x54, 0x80, 0x4a, 0xbf, 0x56, 0x9f,
+  0xa4, 0x94, 0x32, 0xad, 0xbd, 0x6b, 0xb5, 0xe1, 0xf6, 0xe4, 0x3e, 0x77,
+  0x04, 0xe3, 0xc5, 0x43, 0x77, 0x70, 0xf7, 0x1e, 0x5d, 0xdf, 0x5c, 0xc0,
+  0xfc, 0xde, 0x80, 0x75, 0x56, 0x0d, 0x55, 0x7d, 0x5b, 0x29, 0x3a, 0x43,
+  0x3b, 0xf6, 0x5b, 0x6c, 0x7f, 0x56, 0x0c, 0x4f, 0x8c, 0xe9, 0x7d, 0xc3,
+  0x3f, 0x16, 0x0f, 0x00, 0xab, 0x39, 0x7d, 0x36, 0xbc, 0x4a, 0xc1, 0x75,
+  0x52, 0xb0, 0xb8, 0xd2, 0x45, 0x5f, 0x12, 0x41, 0x41, 0x1b, 0xc5, 0x8c,
+  0xfe, 0x44, 0x78, 0x94, 0x04, 0x4c, 0xd2, 0xb3, 0x8c, 0xdf, 0x1a, 0x44,
+  0xa8, 0xd2, 0x9f, 0x92, 0xdc, 0xa0, 0x7f, 0xa1, 0xa9, 0x72, 0x05, 0x98,
+  0xe0, 0xbe, 0x5c, 0x6e, 0xec, 0x44, 0xac, 0x27, 0x43, 0x37, 0x7a, 0xf5,
+  0xe1, 0xcb, 0xf8, 0x5f, 0x9a, 0x8b, 0xd9, 0xc4, 0x8a, 0xa2, 0xb4, 0xd5,
+  0x95, 0x5d, 0x18, 0x4b, 0xed, 0xc2, 0xaf, 0x56, 0xec, 0xdc, 0x72, 0x95,
+  0x79, 0x78, 0x14, 0x73, 0xbe, 0x8a, 0x32, 0x29, 0x13, 0xea, 0x1a, 0x67,
+  0x0d, 0x6d, 0x45, 0xbb, 0x2b, 0xad, 0x9f, 0x16, 0x77, 0x5c, 0xe3, 0xf4,
+  0xea, 0x2a, 0x9f, 0x70, 0xe1, 0x1a, 0x0f, 0x07, 0xcc, 0x2c, 0x5e, 0x1e,
+  0x9c, 0x5b, 0x59, 0x25, 0x9a, 0x5b, 0xb2, 0x5c, 0x8d, 0x67, 0x74, 0xf7,
+  0x5a, 0x74, 0x3a, 0x1d, 0x2a, 0xac, 0x12, 0x29, 0x4f, 0x68, 0x4e, 0x7c,
+  0xf3, 0xd0, 0x1f, 0x5b, 0x11, 0xd1, 0x5a, 0x8c, 0x9d, 0x25, 0xea, 0x39,
+  0x8a, 0xbd, 0x72, 0xd8, 0xf0, 0xbc, 0x58, 0x58, 0x72, 0xcb, 0xaa, 0x12,
+  0x70, 0x48, 0xab, 0xdc, 0xbe, 0x21, 0x9e, 0x86, 0x7c, 0xa6, 0x68, 0xec,
+  0xaa, 0x69, 0xe3, 0x8d, 0x70, 0x32, 0xd3, 0xc1, 0xf2, 0x66, 0x69, 0x3b,
+  0x6d, 0xf2, 0x8d, 0x08, 0x3f, 0x9a, 0x4e, 0x81, 0x93, 0x77, 0xfe, 0xcd,
+  0xf9, 0x30, 0x39, 0xe6, 0x96, 0x64, 0x4c, 0x2a, 0xb7, 0xc2, 0xe4, 0x42,
+  0xdf, 0xd1, 0x64, 0xaf, 0xf9, 0xfe, 0x3a, 0x2b, 0xf9, 0x2f, 0xb4, 0xa6,
+  0x5f, 0x8a, 0x95, 0x15, 0xdf, 0x36, 0x7b, 0xa5, 0x86, 0x2c, 0x68, 0xfa,
+  0x1c, 0xbf, 0xd3, 0x51, 0x21, 0x69, 0xca, 0x6d, 0x93, 0xef, 0xa1, 0x28,
+  0x1b, 0x50, 0x3a, 0xf2, 0x66, 0x42, 0x42, 0x16, 0x44, 0xa5, 0xe5, 0x3d,
+  0xf6, 0x2f, 0xe0, 0x8d, 0x22, 0x4e, 0x4a, 0x03, 0x01, 0x69, 0x29, 0xf9,
+  0xb9, 0x70, 0x3c, 0x39, 0x57, 0xa5, 0x80, 0xc8, 0x94, 0x99, 0x06, 0x2f,
+  0x16, 0xea, 0xf5, 0x14, 0x03, 0x45, 0x95, 0xb5, 0x8e, 0x6b, 0xa0, 0x8e,
+  0xd9, 0x17, 0xac, 0x45, 0xf3, 0x58, 0x48, 0x68, 0xa1, 0x2d, 0x18, 0x6e,
+  0xfc, 0xff, 0x01, 0x26, 0x72, 0xdf, 0xe5, 0x8f, 0x60, 0x02, 0x00,
 };
 #define BUF_SIZE 0x10000
 static voidpf zalloc_func(voidpf opaque, unsigned int items, unsigned int size)
 {
   (void) opaque;
   /* not a typo, keep it calloc() */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_metalink.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_metalink.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_metalink.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_metalink.c	2013-12-17 06:02:35.000000000 +0800
@@ -51,15 +51,13 @@
 #elif defined(USE_NSS)
 #  include <nss.h>
 #  include <pk11pub.h>
 #  define MD5_CTX    void *
 #  define SHA_CTX    void *
 #  define SHA256_CTX void *
-#  ifdef HAVE_NSS_INITCONTEXT
-     static NSSInitContext *nss_context;
-#  endif
+   static NSSInitContext *nss_context;
 #elif (defined(__MAC_OS_X_VERSION_MAX_ALLOWED) && \
               (__MAC_OS_X_VERSION_MAX_ALLOWED >= 1040)) || \
       (defined(__IPHONE_OS_VERSION_MAX_ALLOWED) && \
               (__IPHONE_OS_VERSION_MAX_ALLOWED >= 20000))
 /* For Apple operating systems: CommonCrypto has the functions we need.
    The library's headers are even backward-compatible with OpenSSL's
@@ -237,21 +235,19 @@
 
 static int nss_hash_init(void **pctx, SECOidTag hash_alg)
 {
   PK11Context *ctx;
 
   /* we have to initialize NSS if not initialized alraedy */
-#ifdef HAVE_NSS_INITCONTEXT
   if(!NSS_IsInitialized() && !nss_context) {
     static NSSInitParameters params;
     params.length = sizeof params;
     nss_context = NSS_InitContext("", "", "", "", &params, NSS_INIT_READONLY
         | NSS_INIT_NOCERTDB   | NSS_INIT_NOMODDB       | NSS_INIT_FORCEOPEN
         | NSS_INIT_NOROOTINIT | NSS_INIT_OPTIMIZESPACE | NSS_INIT_PK11RELOAD);
   }
-#endif
 
   ctx = PK11_CreateDigestContext(hash_alg);
   if(!ctx)
     return /* failure */ 0;
 
   if(PK11_DigestBegin(ctx) != SECSuccess) {
@@ -891,13 +887,13 @@
   }
   config->metalinkfile_last = 0;
 }
 
 void metalink_cleanup(void)
 {
-#if defined(USE_NSS) && defined(HAVE_NSS_INITCONTEXT)
+#ifdef USE_NSS
   if(nss_context) {
     NSS_ShutdownContext(nss_context);
     nss_context = NULL;
   }
 #endif
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_operate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_operate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_operate.c	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_operate.c	2013-12-17 06:02:35.000000000 +0800
@@ -1048,12 +1048,14 @@
           my_setopt_enum(curl, CURLOPT_NETRC, (long)CURL_NETRC_IGNORED);
 
         if(config->netrc_file)
           my_setopt(curl, CURLOPT_NETRC_FILE, config->netrc_file);
 
         my_setopt(curl, CURLOPT_TRANSFERTEXT, config->use_ascii?1L:0L);
+        if(config->login_options)
+          my_setopt_str(curl, CURLOPT_LOGIN_OPTIONS, config->login_options);
         my_setopt_str(curl, CURLOPT_USERPWD, config->userpwd);
         my_setopt_str(curl, CURLOPT_RANGE, config->range);
         my_setopt(curl, CURLOPT_ERRORBUFFER, errorbuffer);
         my_setopt(curl, CURLOPT_TIMEOUT_MS, (long)(config->timeout * 1000));
 
         if(built_in_protos & CURLPROTO_HTTP) {
@@ -1232,14 +1234,14 @@
 
         progressbarinit(&progressbar, config);
         if((config->progressmode == CURL_PROGRESS_BAR) &&
            !config->noprogress && !config->mute) {
           /* we want the alternative style, then we have to implement it
              ourselves! */
-          my_setopt(curl, CURLOPT_PROGRESSFUNCTION, tool_progress_cb);
-          my_setopt(curl, CURLOPT_PROGRESSDATA, &progressbar);
+          my_setopt(curl, CURLOPT_XFERINFOFUNCTION, tool_progress_cb);
+          my_setopt(curl, CURLOPT_XFERINFODATA, &progressbar);
         }
 
         /* new in libcurl 7.24.0: */
         if(config->dns_servers)
           my_setopt_str(curl, CURLOPT_DNS_SERVERS, config->dns_servers);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_parsecfg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_parsecfg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_parsecfg.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_parsecfg.c	2013-12-17 06:02:35.000000000 +0800
@@ -32,13 +32,16 @@
 #include "tool_msgs.h"
 #include "tool_parsecfg.h"
 
 #include "memdebug.h" /* keep this as LAST include */
 
 #define CURLRC DOT_CHAR "curlrc"
-#define ISSEP(x) (((x) == '=') || ((x) == ':'))
+
+/* only acknowledge colon or equals as separators if the option was not
+   specified with an initial dash! */
+#define ISSEP(x,dash) (!dash && (((x) == '=') || ((x) == ':')))
 
 static const char *unslashquote(const char *line, char *param);
 static char *my_get_line(FILE *fp);
 
 /* return 0 on everything-is-fine, and non-zero otherwise */
 int parseconfig(const char *filename,
@@ -120,12 +123,13 @@
     char *line;
     char *aline;
     char *option;
     char *param;
     int lineno = 0;
     bool alloced_param;
+    bool dashed_option;
 
     while(NULL != (aline = my_get_line(file))) {
       lineno++;
       line = aline;
       alloced_param=FALSE;
 
@@ -143,25 +147,29 @@
         Curl_safefree(aline);
         continue;
       }
 
       /* the option keywords starts here */
       option = line;
-      while(*line && !ISSPACE(*line) && !ISSEP(*line))
+
+      /* the option starts with a dash? */
+      dashed_option = option[0]=='-'?TRUE:FALSE;
+
+      while(*line && !ISSPACE(*line) && !ISSEP(*line, dashed_option))
         line++;
       /* ... and has ended here */
 
       if(*line)
         *line++ = '\0'; /* zero terminate, we have a local copy of the data */
 
 #ifdef DEBUG_CONFIG
       fprintf(stderr, "GOT: %s\n", option);
 #endif
 
       /* pass spaces and separator(s) */
-      while(*line && (ISSPACE(*line) || ISSEP(*line)))
+      while(*line && (ISSPACE(*line) || ISSEP(*line, dashed_option)))
         line++;
 
       /* the parameter starts here (unless quoted) */
       if(*line == '\"') {
         /* quoted parameter, do the quote dance */
         line++;
@@ -177,12 +185,30 @@
       }
       else {
         param = line; /* parameter starts here */
         while(*line && !ISSPACE(*line))
           line++;
         *line = '\0'; /* zero terminate */
+
+        /* to detect mistakes better, see if there's data following */
+        line++;
+        /* pass all spaces */
+        while(*line && ISSPACE(*line))
+          line++;
+
+        switch(*line) {
+        case '\0':
+        case '\r':
+        case '\n':
+        case '#': /* comment */
+          break;
+        default:
+          warnf(config, "%s:%d: warning: '%s' uses unquoted white space in the"
+                " line that may cause side-effects!\n",
+                filename, lineno, option);
+        }
       }
 
       if(param && !*param) {
         /* do this so getparameter can check for required parameters.
            Otherwise it always thinks there's a parameter. */
         if(alloced_param)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_setopt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_setopt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_setopt.c	2013-09-27 16:57:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_setopt.c	2013-12-17 06:02:35.000000000 +0800
@@ -75,12 +75,15 @@
 
 const NameValue setopt_nv_CURL_SSLVERSION[] = {
   NV(CURL_SSLVERSION_DEFAULT),
   NV(CURL_SSLVERSION_TLSv1),
   NV(CURL_SSLVERSION_SSLv2),
   NV(CURL_SSLVERSION_SSLv3),
+  NV(CURL_SSLVERSION_TLSv1_0),
+  NV(CURL_SSLVERSION_TLSv1_1),
+  NV(CURL_SSLVERSION_TLSv1_2),
   NVEND,
 };
 
 const NameValue setopt_nv_CURL_TIMECOND[] = {
   NV(CURL_TIMECOND_IFMODSINCE),
   NV(CURL_TIMECOND_IFUNMODSINCE),
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_urlglob.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_urlglob.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_urlglob.c	2013-09-26 04:52:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_urlglob.c	2013-12-17 06:02:35.000000000 +0800
@@ -37,31 +37,32 @@
 
 #define GLOBERROR(string, column, code) \
   glob->error = string, glob->pos = column, code;
 
 void glob_cleanup(URLGlob* glob);
 
-static GlobCode glob_fixed(URLGlob *glob, unsigned long *amount)
+static GlobCode glob_fixed(URLGlob *glob, char *fixed, size_t len)
 {
   URLPattern *pat = &glob->pattern[glob->size];
   pat->type = UPTSet;
   pat->content.Set.size = 1;
   pat->content.Set.ptr_s = 0;
   pat->globindex = -1;
 
-  (*amount)++;
-
   pat->content.Set.elements = malloc(sizeof(char*));
 
   if(!pat->content.Set.elements)
     return GLOBERROR("out of memory", 0, GLOB_NO_MEM);
 
-  pat->content.Set.elements[0] = strdup(glob->glob_buffer);
+  pat->content.Set.elements[0] = malloc(len+1);
   if(!pat->content.Set.elements[0])
     return GLOBERROR("out of memory", 0, GLOB_NO_MEM);
 
+  memcpy(pat->content.Set.elements[0], fixed, len);
+  pat->content.Set.elements[0][len] = 0;
+
   return GLOB_OK;
 }
 
 /* multiply
  *
  * Multiplies and checks for overflow.
@@ -208,13 +209,13 @@
         step = (int)lstep;
         if(step > (max_c - min_c))
           step = -1;
       }
     }
     else
-      pattern+=3;
+      pattern += 4;
 
     *posp += (pattern - *patternp);
 
     if((rc != 2) || (min_c >= max_c) || ((max_c - min_c) > ('z' - 'a')) ||
        (step < 0) )
       /* the pattern is not well-formed */
@@ -304,17 +305,19 @@
 static GlobCode glob_parse(URLGlob *glob, char *pattern,
                            size_t pos, unsigned long *amount)
 {
   /* processes a literal string component of a URL
      special characters '{' and '[' branch to set/range processing functions
    */
-  char* buf = glob->glob_buffer;
   GlobCode res = GLOB_OK;
   int globindex = 0; /* count "actual" globs */
 
+  *amount = 1;
+
   while(*pattern && !res) {
+    char *buf = glob->glob_buffer;
     int sublen = 0;
     while(*pattern && *pattern != '{' && *pattern != '[') {
       if(*pattern == '}' || *pattern == ']')
         return GLOBERROR("unmatched close brace/bracket", pos, GLOB_ERROR);
 
       /* only allow \ to escape known "special letters" */
@@ -330,18 +333,15 @@
       ++pos;
       sublen++;
     }
     if(sublen) {
       /* we got a literal string, add it as a single-item list */
       *buf = '\0';
-      res = glob_fixed(glob, amount);
+      res = glob_fixed(glob, glob->glob_buffer, sublen);
     }
     else {
-      if(!*amount)
-        *amount = 1;
-
       switch (*pattern) {
       case '\0': /* done  */
         break;
 
       case '{':
         /* process set pattern */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/src/tool_version.h	2013-10-14 22:43:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/src/tool_version.h	2013-12-17 15:51:32.000000000 +0800
@@ -22,13 +22,13 @@
  *
  ***************************************************************************/
 #include <curl/curlver.h>
 
 #define CURL_NAME "curl"
 #define CURL_COPYRIGHT LIBCURL_COPYRIGHT
-#define CURL_VERSION "7.33.0"
+#define CURL_VERSION "7.34.0"
 #define CURL_VERSION_MAJOR LIBCURL_VERSION_MAJOR
 #define CURL_VERSION_MINOR LIBCURL_VERSION_MINOR
 #define CURL_VERSION_PATCH LIBCURL_VERSION_PATCH
 #define CURL_ID CURL_NAME " " CURL_VERSION " (" OS ") "
 
 #endif /* HEADER_CURL_TOOL_VERSION_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/certs/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/certs/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/certs/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/certs/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -239,13 +239,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/certs/scripts/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/certs/scripts/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/certs/scripts/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/certs/scripts/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -179,13 +179,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/DISABLED /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/DISABLED
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/DISABLED	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/DISABLED	2013-12-17 06:02:35.000000000 +0800
@@ -1,8 +1,10 @@
 # This file can be used to specify test cases that should not run when all
 # test cases are run by runtests.pl. Just add the plain test case numbers, one
 # per line.
 # Lines starting with '#' letters are treated as comments.
 594
+815
+816
 1209
 1211
 1512
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/Makefile.am	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/Makefile.am	2013-12-17 06:02:35.000000000 +0800
@@ -61,20 +61,25 @@
 test635 test636 test637 test638 test639 \
 \
 test700 test701 test702 test703 test704 test705 test706 test707 test708 \
 test709 test710 test711 test712 \
 \
 test800 test801 test802 test803 test804 test805 test806 test807 test808 \
-test809 test810 test811 test812 test813 test814 \
+test809 test810 test811 test812 test813 test814 test815 test816 test817 \
+test818 test819 test820 test821 test822 test823 test824 test825 test826 \
+test827 test828 test829 test830 test831 test832 \
 \
 test850 test851 test852 test853 test854 test855 test856 test857 test858 \
-test859 test860 test861 test862 \
+test859 test860 test861 test862 test863 test864 test865 test866 test867 \
+test868 test869 test870 test871 test872 test873 test874 test875 test876 \
+test877 test878 \
 \
 test900 test901 test902 test903 test904 test905 test906 test907 test908 \
 test909 test910 test911 test912 test913 test914 test915 test916 test917 \
-test918 \
+test918 test919 test920 test921 test922 test923 test924 test925 test926 \
+test927 test928 test929 test930 test931 test932 test933 test934 \
 \
 test1000 test1001 test1002 test1003 test1004 test1005 test1006 test1007 \
 test1008 test1009 test1010 test1011 test1012 test1013 test1014 test1015 \
 test1016 test1017 test1018 test1019 test1020 test1021 test1022 test1023 \
 test1024 test1025 test1026 test1027 test1028 test1029 test1030 test1031 \
 test1032 test1033 test1034 test1035 test1036 test1037 test1038 test1039 \
@@ -93,18 +98,18 @@
 \
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
 test1220 test1221 test1222 test1223 test1224 test1225 test1226 test1227 \
 test1228 test1229 test1230 test1231 test1232 test1233 test1234 test1235 \
-test1236 test1237 test1238 test1239 \
+test1236 test1237 test1238 test1239 test1240 \
 \
 test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
 test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
-test1316 test1317 test1318 test1319 test1320 test1321 test1322 test1323 \
-test1324 test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
+test1316 test1317 test1318 test1319 test1320 test1321                   \
+         test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
 test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
 test1340 test1341 test1342 test1343 test1344 test1345 test1346 test1347 \
 test1348 test1349 test1350 test1351 test1352 test1353 test1354 test1355 \
 test1356 test1357 test1358 test1359 test1360 test1361 test1362 test1363 \
 test1364 test1365 test1366 test1367 test1368 test1369 test1370 test1371 \
 test1372 test1373 test1374 test1375 test1376 test1377 test1378 test1379 \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -179,13 +179,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
@@ -370,20 +369,25 @@
 test635 test636 test637 test638 test639 \
 \
 test700 test701 test702 test703 test704 test705 test706 test707 test708 \
 test709 test710 test711 test712 \
 \
 test800 test801 test802 test803 test804 test805 test806 test807 test808 \
-test809 test810 test811 test812 test813 test814 \
+test809 test810 test811 test812 test813 test814 test815 test816 test817 \
+test818 test819 test820 test821 test822 test823 test824 test825 test826 \
+test827 test828 test829 test830 test831 test832 \
 \
 test850 test851 test852 test853 test854 test855 test856 test857 test858 \
-test859 test860 test861 test862 \
+test859 test860 test861 test862 test863 test864 test865 test866 test867 \
+test868 test869 test870 test871 test872 test873 test874 test875 test876 \
+test877 test878 \
 \
 test900 test901 test902 test903 test904 test905 test906 test907 test908 \
 test909 test910 test911 test912 test913 test914 test915 test916 test917 \
-test918 \
+test918 test919 test920 test921 test922 test923 test924 test925 test926 \
+test927 test928 test929 test930 test931 test932 test933 test934 \
 \
 test1000 test1001 test1002 test1003 test1004 test1005 test1006 test1007 \
 test1008 test1009 test1010 test1011 test1012 test1013 test1014 test1015 \
 test1016 test1017 test1018 test1019 test1020 test1021 test1022 test1023 \
 test1024 test1025 test1026 test1027 test1028 test1029 test1030 test1031 \
 test1032 test1033 test1034 test1035 test1036 test1037 test1038 test1039 \
@@ -402,18 +406,18 @@
 \
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
 test1220 test1221 test1222 test1223 test1224 test1225 test1226 test1227 \
 test1228 test1229 test1230 test1231 test1232 test1233 test1234 test1235 \
-test1236 test1237 test1238 test1239 \
+test1236 test1237 test1238 test1239 test1240 \
 \
 test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
 test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
-test1316 test1317 test1318 test1319 test1320 test1321 test1322 test1323 \
-test1324 test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
+test1316 test1317 test1318 test1319 test1320 test1321                   \
+         test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
 test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
 test1340 test1341 test1342 test1343 test1344 test1345 test1346 test1347 \
 test1348 test1349 test1350 test1351 test1352 test1353 test1354 test1355 \
 test1356 test1357 test1358 test1359 test1360 test1361 test1362 test1363 \
 test1364 test1365 test1366 test1367 test1368 test1369 test1370 test1371 \
 test1372 test1373 test1374 test1375 test1376 test1377 test1378 test1379 \
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test1240
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test1316 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test1316
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test1316	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test1316	2013-12-17 06:02:35.000000000 +0800
@@ -22,15 +22,15 @@
 # When doing LIST, we get the default list output hard-coded in the test
 # FTP server
 <datacheck>
 HTTP/1.1 200 Mighty fine indeed
 Magic: sure you can FTP me
 
-HTTP/1.1 200 Mighty fine indeed
-Magic: sure you can FTP me
-
+HTTP/1.1 200 Mighty fine indeed
+Magic: sure you can FTP me
+
 total 20
 drwxr-xr-x   8 98       98           512 Oct 22 13:06 .
 drwxr-xr-x   8 98       98           512 Oct 22 13:06 ..
 drwxr-xr-x   2 98       98           512 May  2  1996 .NeXT
 -r--r--r--   1 0        1             35 Jul 16  1996 README
 lrwxrwxrwx   1 0        1              7 Dec  9  1999 bin -> usr/bin
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data: test1322
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data: test1323
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data: test1324
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test804 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test804
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test804	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test804	2013-12-17 06:02:35.000000000 +0800
@@ -24,13 +24,13 @@
 imap
 </server>
  <name>
 IMAP doesn't perform SELECT if re-using the same mailbox
  </name>
  <command>
--u user:secret 'imap://%HOSTIP:%IMAPPORT/804/;UID=123/;SECTION=1' 'imap://%HOSTIP:%IMAPPORT/804/;UID=456/;SECTION=2.3'
+'imap://%HOSTIP:%IMAPPORT/804/;UID=123/;SECTION=1' 'imap://%HOSTIP:%IMAPPORT/804/;UID=456/;SECTION=2.3' -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test805 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test805
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test805	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test805	2013-12-17 06:02:35.000000000 +0800
@@ -19,13 +19,13 @@
 imap
 </server>
  <name>
 IMAP APPEND message
  </name>
  <command>
--u user:secret -T log/upload805 'imap://%HOSTIP:%IMAPPORT/805'
+imap://%HOSTIP:%IMAPPORT/805 -T log/upload805 -u user:secret
 </command>
 <file name="log/upload805">
 Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)
 From: Fred Foobar <foobar@example.COM>
 Subject: afternoon meeting
 To: joe@example.com
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test806 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test806
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test806	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test806	2013-12-17 06:02:35.000000000 +0800
@@ -23,13 +23,13 @@
 imap
 </server>
  <name>
 IMAP LIST mailbox
  </name>
  <command>
--u user:secret 'imap://%HOSTIP:%IMAPPORT/806/'
+imap://%HOSTIP:%IMAPPORT/806 -u user:secret
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test815
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test816
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test817
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test818
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test819
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test820
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test821
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test822
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test823
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test824
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test825
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test826
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test827
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test828
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test829
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test83
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test83	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test83	2013-12-17 06:02:35.000000000 +0800
@@ -47,13 +47,13 @@
 http-proxy
 </server>
  <name>
 HTTP over proxy-tunnel with site authentication
  </name>
  <command>
-http://test.83:%HTTPPORT/we/want/that/page/83 -p -x %HOSTIP:%PROXYPORT --user iam:myself
+http://test.83:%HTTPPORT/we/want/that/page/83 -p -x %HOSTIP:%PROXYPORT --user 'iam:my:;self'
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
@@ -66,13 +66,13 @@
 Host: test.83:%HTTPPORT
 Proxy-Connection: Keep-Alive
 
 </proxy>
 <protocol>
 GET /we/want/that/page/83 HTTP/1.1
-Authorization: Basic aWFtOm15c2VsZg==
+Authorization: Basic aWFtOm15OjtzZWxm
 User-Agent: curl/7.10.7-pre2 (i686-pc-linux-gnu) libcurl/7.10.7-pre2 OpenSSL/0.9.7a zlib/1.1.3
 Host: test.83:%HTTPPORT
 Accept: */*
 
 </protocol>
 </verify>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test830
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test831
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test832
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test856 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test856
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test856	2013-09-18 06:58:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test856	2013-12-17 06:02:35.000000000 +0800
@@ -1,11 +1,11 @@
 <testcase>
 <info>
 <keywords>
 POP3
-LOGIN
+LOGIN
 FAILURE
 </keywords>
 </info>
 
 #
 # Server-side
@@ -26,17 +26,18 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
+# 67 - CURLE_LOGIN_DENIED
 <errorcode>
 67
 </errorcode>
 #
-# The multi interface considers a broken "DO" request as a prematurely broken
+# The multi interface considers a broken "CONNECT" as a prematurely broken
 # transfer and such a connection will not get a "QUIT"
 <protocol>
 CAPA
 USER user
 PASS wrong
 </protocol>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test858 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test858
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test858	2013-09-09 16:42:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test858	2013-12-17 06:02:35.000000000 +0800
@@ -1,12 +1,12 @@
 <testcase>
 <info>
 <keywords>
 POP3
 DELE
-CUSTOMREQUEST
+CUSTOMREQUEST
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test859 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test859
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test859	2013-09-09 16:42:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test859	2013-12-17 06:02:35.000000000 +0800
@@ -1,12 +1,12 @@
 <testcase>
 <info>
 <keywords>
 POP3
 STAT
-CUSTOMREQUEST
+CUSTOMREQUEST
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test860 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test860
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test860	2013-09-09 16:42:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test860	2013-12-17 06:02:35.000000000 +0800
@@ -1,12 +1,12 @@
 <testcase>
 <info>
 <keywords>
 POP3
 NOOP
-CUSTOMREQUEST
+CUSTOMREQUEST
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test861 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test861
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test861	2013-09-11 06:06:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test861	2013-12-17 06:02:35.000000000 +0800
@@ -1,12 +1,13 @@
 <testcase>
 <info>
 <keywords>
 POP3
 UIDL
-CUSTOMREQUEST
+CUSTOMREQUEST
+RFC2449
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test862 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test862
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test862	2013-09-11 06:06:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test862	2013-12-17 06:02:35.000000000 +0800
@@ -1,12 +1,13 @@
 <testcase>
 <info>
 <keywords>
 POP3
 TOP
-CUSTOMREQUEST
+CUSTOMREQUEST
+RFC2449
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test863
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test864
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test865
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test866
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test867
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test868
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test869
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test870
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test871
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test872
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test873
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test874
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test875
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test876
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test877
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test878
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test903 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test903
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test903	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test903	2013-12-17 06:02:35.000000000 +0800
@@ -11,13 +11,13 @@
 #
 # Server-side
 <reply>
 <servercmd>
 AUTH PLAIN
 REPLY AUTH 334 PLAIN supported
-REPLY dGVzdAB0ZXN0ADEyMzQ= 235 Authenticated
+REPLY dXNlcgB1c2VyAHNlY3JldA== 235 Authenticated
 </servercmd>
 </reply>
 
 #
 # Client-side
 <client>
@@ -28,23 +28,23 @@
 SMTP plain authentication
  </name>
 <stdin>
 mail body
 </stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/903 --mail-rcpt recipient@example.com --mail-from sender@example.com -u test:1234 -T -
+smtp://%HOSTIP:%SMTPPORT/903 --mail-rcpt recipient@example.com --mail-from sender@example.com -u user:secret -T -
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 EHLO 903
 AUTH PLAIN
-dGVzdAB0ZXN0ADEyMzQ=
+dXNlcgB1c2VyAHNlY3JldA==
 MAIL FROM:<sender@example.com>
 RCPT TO:<recipient@example.com>
 DATA
 QUIT
 </protocol>
 <upload>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test904 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test904
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test904	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test904	2013-12-17 06:02:35.000000000 +0800
@@ -9,15 +9,15 @@
 
 #
 # Server-side
 <reply>
 <servercmd>
 AUTH LOGIN
-REPLY AUTH 334 LOGIN supported
-REPLY dGVzdA== 334 UGFzc3dvcmQ6
-REPLY MTIzNA== 235 Authenticated
+REPLY AUTH 334 VXNlcm5hbWU6
+REPLY dXNlcg== 334 UGFzc3dvcmQ6
+REPLY c2VjcmV0 235 Authenticated
 </servercmd>
 </reply>
 
 #
 # Client-side
 <client>
@@ -28,24 +28,24 @@
 SMTP login authentication
  </name>
 <stdin>
 mail body
 </stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/904 --mail-rcpt recipient@example.com --mail-from sender@example.com -u test:1234 -T -
+smtp://%HOSTIP:%SMTPPORT/904 --mail-rcpt recipient@example.com --mail-from sender@example.com -u user:secret -T -
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 EHLO 904
 AUTH LOGIN
-dGVzdA==
-MTIzNA==
+dXNlcg==
+c2VjcmV0
 MAIL FROM:<sender@example.com>
 RCPT TO:<recipient@example.com>
 DATA
 QUIT
 </protocol>
 <upload>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test905 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test905
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test905	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test905	2013-12-17 06:02:35.000000000 +0800
@@ -10,14 +10,14 @@
 
 #
 # Server-side
 <reply>
 <servercmd>
 AUTH CRAM-MD5
-REPLY AUTH 334 PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+
-REPLY dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw 235 Authenticated
+REPLY AUTH 334 PDE5NzIuOTg3NjU0MzIxQGN1cmw+
+REPLY dXNlciA3MDMxNzI1NTk5ZmRiYjVkNDEyNjg5YWEzMjNlM2UwYg== 235 Authenticated
 </servercmd>
 </reply>
 
 #
 # Client-side
 <client>
@@ -31,23 +31,23 @@
 SMTP CRAM-MD5 authentication
  </name>
 <stdin>
 mail body
 </stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/905 --mail-rcpt recipient@example.com --mail-from sender@example.com -u tim:tanstaaftanstaaf -T -
+smtp://%HOSTIP:%SMTPPORT/905 --mail-rcpt recipient@example.com --mail-from sender@example.com -u user:secret -T -
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 EHLO 905
 AUTH CRAM-MD5
-dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw
+dXNlciA3MDMxNzI1NTk5ZmRiYjVkNDEyNjg5YWEzMjNlM2UwYg==
 MAIL FROM:<sender@example.com>
 RCPT TO:<recipient@example.com>
 DATA
 QUIT
 </protocol>
 <upload>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test906 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test906
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test906	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test906	2013-12-17 06:02:35.000000000 +0800
@@ -1,21 +1,22 @@
 <testcase>
 <info>
 <keywords>
 SMTP
 SMTP AUTH NTLM
+RFC4954
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
 <servercmd>
 AUTH NTLM
 REPLY AUTH 334 NTLM supported
-REPLY TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA= 334 TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA
+REPLY TlRMTVNTUAABAAAABoIIAAAAAAAAAAAAAAAAAAAAAAA= 334 TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 REPLY TlRMTVNTUAADAAAAGAAYAEAAAAAYABgAWAAAAAAAAABwAAAACAAIAHAAAAAIAAgAeAAAAAAAAAAAAAAABoKBAFpkQwKRCZFMhjj0tw47wEjKHRHlvzfxQamFcheMuv8v+xeqphEO5V41xRd7R9deOXRlc3R1c2VyY3VybGhvc3Q= 235 Authenticated
 </servercmd>
 </reply>
 
 #
 # Client-side
@@ -38,12 +39,15 @@
 <stdin>
 mail body
 </stdin>
  <command>
 smtp://%HOSTIP:%SMTPPORT/906 --mail-rcpt recipient@example.com --mail-from sender@example.com -u testuser:testpass -T -
 </command>
+<precheck>
+chkhostname curlhost
+</precheck>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test907 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test907
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test907	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test907	2013-12-17 06:02:35.000000000 +0800
@@ -1,48 +1,56 @@
 <testcase>
 <info>
 <keywords>
 SMTP
-SMTP AUTH PLAIN SASL-IR
-RFC4616
+SMTP AUTH DIGEST-MD5
+RFC2831
 RFC4954
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
 <servercmd>
-AUTH PLAIN
-REPLY AUTH 235 Authenticated
+AUTH DIGEST-MD5
+REPLY AUTH 334 cmVhbG09ImN1cmwiLG5vbmNlPSI1MzAwZDE3YTFkNjk1YmQ0MTFlNGNkZjk2Zjk1NDhjMjNjZWQ2MTc1IixhbGdvcml0aG09bWQ1LXNlc3MscW9wPSJhdXRoIg==
+REPLY dXNlcm5hbWU9InVzZXIiLHJlYWxtPSJjdXJsIixub25jZT0iNTMwMGQxN2ExZDY5NWJkNDExZTRjZGY5NmY5NTQ4YzIzY2VkNjE3NSIsY25vbmNlPSIxMjM0NTY3OCIsbmM9IjAwMDAwMDAxIixkaWdlc3QtdXJpPSJzbXRwL2N1cmwiLHJlc3BvbnNlPTU3MjBiYjgxZDgwNjI3YmU1ZDExYTAwYTU2M2Q3MGU1 334
+REPLY  235 Authenticated
 </servercmd>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
 smtp
 </server>
+<features>
+debug
+crypto
+</features>
  <name>
-SMTP plain authentication with initial response
+SMTP DIGEST-MD5 authentication
  </name>
 <stdin>
 mail body
 </stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/907 --mail-rcpt recipient@example.com --mail-from sender@example.com -u test:1234 --sasl-ir -T -
+smtp://%HOSTIP:%SMTPPORT/907 --mail-rcpt recipient@example.com --mail-from sender@example.com -u user:secret -T -
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 EHLO 907
-AUTH PLAIN dGVzdAB0ZXN0ADEyMzQ=
+AUTH DIGEST-MD5
+dXNlcm5hbWU9InVzZXIiLHJlYWxtPSJjdXJsIixub25jZT0iNTMwMGQxN2ExZDY5NWJkNDExZTRjZGY5NmY5NTQ4YzIzY2VkNjE3NSIsY25vbmNlPSIxMjM0NTY3OCIsbmM9IjAwMDAwMDAxIixkaWdlc3QtdXJpPSJzbXRwL2N1cmwiLHJlc3BvbnNlPTU3MjBiYjgxZDgwNjI3YmU1ZDExYTAwYTU2M2Q3MGU1
+
 MAIL FROM:<sender@example.com>
 RCPT TO:<recipient@example.com>
 DATA
 QUIT
 </protocol>
 <upload>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test908 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test908
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test908	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test908	2013-12-17 06:02:35.000000000 +0800
@@ -1,49 +1,50 @@
 <testcase>
 <info>
 <keywords>
 SMTP
-SMTP AUTH LOGIN SASL-IR
+SMTP AUTH OAUTH2
 RFC4954
+RFC6749
 </keywords>
 </info>
 
 #
 # Server-side
 <reply>
 <servercmd>
-AUTH LOGIN
-REPLY AUTH 334 UGFzc3dvcmQ6
-REPLY MTIzNA== 235 Authenticated
+AUTH XOAUTH2
+REPLY AUTH 334 XOAUTH2 supported
+REPLY dXNlcj11c2VyAWF1dGg9QmVhcmVyIG1GXzkuQjVmLTQuMUpxTQEB 235 Authenticated
 </servercmd>
 </reply>
 
 #
 # Client-side
 <client>
 <server>
 smtp
 </server>
  <name>
-SMTP login authentication with initial response
+SMTP OAuth 2.0 authentication
  </name>
 <stdin>
 mail body
 </stdin>
  <command>
-smtp://%HOSTIP:%SMTPPORT/908 --mail-rcpt recipient@example.com --mail-from sender@example.com -u test:1234 --sasl-ir -T -
+smtp://%HOSTIP:%SMTPPORT/908 --mail-rcpt recipient@example.com --mail-from sender@example.com -u user --oauth2-bearer mF_9.B5f-4.1JqM -T -
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
 <protocol>
 EHLO 908
-AUTH LOGIN dGVzdA==
-MTIzNA==
+AUTH XOAUTH2
+dXNlcj11c2VyAWF1dGg9QmVhcmVyIG1GXzkuQjVmLTQuMUpxTQEB
 MAIL FROM:<sender@example.com>
 RCPT TO:<recipient@example.com>
 DATA
 QUIT
 </protocol>
 <upload>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test913 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test913
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test913	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test913	2013-12-17 06:02:35.000000000 +0800
@@ -34,12 +34,13 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
+# 55 - CURLE_SEND_ERROR
 <errorcode>
 55
 </errorcode>
 <protocol>
 EHLO 913
 MAIL FROM:<sender@example.com> SIZE=38
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test914 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test914
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test914	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test914	2013-12-17 06:02:35.000000000 +0800
@@ -30,12 +30,13 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
+# 55 - CURLE_SEND_ERROR
 <errorcode>
 55
 </errorcode>
 <protocol>
 EHLO 914
 MAIL FROM:<invalid>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test916 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test916
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test916	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test916	2013-12-17 06:02:35.000000000 +0800
@@ -30,12 +30,13 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
+# 55 - CURLE_SEND_ERROR
 <errorcode>
 55
 </errorcode>
 <protocol>
 EHLO 916
 MAIL FROM:<sender@example.com>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test918 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test918
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/data/test918	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data/test918	2013-12-17 06:02:35.000000000 +0800
@@ -30,15 +30,16 @@
 </command>
 </client>
 
 #
 # Verify data after the test has been "shot"
 <verify>
-<errorcode>
-55
-</errorcode>
+# 55 - CURLE_SEND_ERROR
+<errorcode>
+55
+</errorcode>
 <protocol>
 EHLO 918
 MAIL FROM:<sender@example.com>
 RCPT TO:<recipient.one@example.com>
 RCPT TO:<invalid>
 QUIT
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test919
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test920
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test921
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test922
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test923
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test924
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test925
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test926
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test927
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test928
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test929
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test930
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test931
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test932
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test933
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/data: test934
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/ftpserver.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/ftpserver.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/ftpserver.pl	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/ftpserver.pl	2013-12-17 06:02:35.000000000 +0800
@@ -49,12 +49,13 @@
     }
 }
 
 use strict;
 use warnings;
 use IPC::Open2;
+use Digest::MD5;
 
 require "getpart.pm";
 require "ftp.pm";
 require "directories.pm";
 
 use serverhelp qw(
@@ -171,12 +172,13 @@
 
 #**********************************************************************
 # Mail related definitions
 #
 my $TEXT_USERNAME = "user";
 my $TEXT_PASSWORD = "secret";
+my $POP3_TIMESTAMP = "<1972.987654321\@curl>";
 
 #**********************************************************************
 # exit_signal_handler will be triggered to indicate that the program
 # should finish its execution in a controlled way as soon as possible.
 # For now, program will also terminate from within this handler.
 #
@@ -559,12 +561,13 @@
             '220-  | (__| |_| |  _ <| |___ '."\r\n",
             '220    \___|\___/|_| \_\_____|'."\r\n")
         );
     }
     elsif($proto eq 'pop3') {
         %commandfunc = (
+            'APOP' => \&APOP_pop3,
             'AUTH' => \&AUTH_pop3,
             'CAPA' => \&CAPA_pop3,
             'DELE' => \&DELE_pop3,
             'LIST' => \&LIST_pop3,
             'NOOP' => \&NOOP_pop3,
             'PASS' => \&PASS_pop3,
@@ -580,13 +583,13 @@
             'welcome' => join("",
             '        _   _ ____  _     '."\r\n",
             '    ___| | | |  _ \| |    '."\r\n",
             '   / __| | | | |_) | |    '."\r\n",
             '  | (__| |_| |  _ <| |___ '."\r\n",
             '   \___|\___/|_| \_\_____|'."\r\n",
-            '+OK cURL POP3 server ready to serve'."\r\n")
+            '+OK cURL POP3 server ready to serve '.$POP3_TIMESTAMP."\r\n")
         );
     }
     elsif($proto eq 'imap') {
         %commandfunc = (
             'APPEND'     => \&APPEND_imap,
             'CAPABILITY' => \&CAPABILITY_imap,
@@ -621,15 +624,20 @@
         );
     }
     elsif($proto eq 'smtp') {
         %commandfunc = (
             'DATA' => \&DATA_smtp,
             'EHLO' => \&EHLO_smtp,
+            'EXPN' => \&EXPN_smtp,
             'HELO' => \&HELO_smtp,
+            'HELP' => \&HELP_smtp,
             'MAIL' => \&MAIL_smtp,
+            'NOOP' => \&NOOP_smtp,
+            'RSET' => \&RSET_smtp,
             'RCPT' => \&RCPT_smtp,
+            'VRFY' => \&VRFY_smtp,
             'QUIT' => \&QUIT_smtp,
         );
         %displaytext = (
             'welcome' => join("",
             '220-        _   _ ____  _     '."\r\n",
             '220-    ___| | | |  _ \| |    '."\r\n",
@@ -951,12 +959,119 @@
         sendcontrol "250 OK, data received!\r\n";
     }
 
     return 0;
 }
 
+sub NOOP_smtp {
+    my ($args) = @_;
+
+    if($args) {
+        sendcontrol "501 Unrecognized parameter\r\n";
+    }
+    else {
+        sendcontrol "250 OK\r\n";
+    }
+
+    return 0;
+}
+
+sub RSET_smtp {
+    my ($args) = @_;
+
+    if($args) {
+        sendcontrol "501 Unrecognized parameter\r\n";
+    }
+    else {
+        sendcontrol "250 Resetting\r\n";
+    }
+
+    return 0;
+}
+
+sub HELP_smtp {
+    my ($args) = @_;
+
+    # One argument is optional
+    if($args) {
+        logmsg "HELP_smtp got $args\n";
+    }
+
+    sendcontrol "214-This server supports the following commands:\r\n";
+
+    if(@auth_mechs) {
+        sendcontrol "214 HELO EHLO RCPT DATA RSET MAIL VRFY EXPN QUIT HELP AUTH\r\n";
+    }
+    else {
+        sendcontrol "214 HELO EHLO RCPT DATA RSET MAIL VRFY EXPN QUIT HELP\r\n";
+    }
+
+    return 0;
+}
+
+sub VRFY_smtp {
+    my ($args) = @_;
+    my ($username, $address) = split(/ /, $args, 2);
+
+    logmsg "VRFY_smtp got $args\n";
+
+    if($username eq "") {
+        sendcontrol "501 Unrecognized parameter\r\n";
+    }
+    else {
+        my $testno = $smtp_client;
+
+        $testno =~ s/^([^0-9]*)//;
+        my $testpart = "";
+        if ($testno > 10000) {
+            $testpart = $testno % 10000;
+            $testno = int($testno / 10000);
+        }
+
+        loadtest("$srcdir/data/test$testno");
+
+        my @data = getpart("reply", "data$testpart");
+
+        for my $d (@data) {
+            sendcontrol $d;
+        }
+    }
+
+    return 0;
+}
+
+sub EXPN_smtp {
+    my ($list_name) = @_;
+
+    logmsg "EXPN_smtp got $list_name\n";
+
+    if(!$list_name) {
+        sendcontrol "501 Unrecognized parameter\r\n";
+    }
+    else {
+        my $testno = $smtp_client;
+
+        $testno =~ s/^([^0-9]*)//;
+        my $testpart = "";
+        if ($testno > 10000) {
+            $testpart = $testno % 10000;
+            $testno = int($testno / 10000);
+        }
+
+        loadtest("$srcdir/data/test$testno");
+
+        my @data = getpart("reply", "data$testpart");
+
+        for my $d (@data) {
+            sendcontrol $d;
+        }
+    }
+
+    return 0;
+}
+
 sub QUIT_smtp {
     sendcontrol "221 cURL $smtp_type server signing off\r\n";
 
     return 0;
 }
 
@@ -1630,12 +1745,36 @@
         sendcontrol ".\r\n";
     }
 
     return 0;
 }
 
+sub APOP_pop3 {
+    my ($args) = @_;
+    my ($user, $secret) = split(/ /, $args, 2);
+
+    if (!grep /^APOP$/, @capabilities) {
+        sendcontrol "-ERR Unrecognized command\r\n";
+    }
+    elsif (($user eq "") || ($secret eq "")) {
+        sendcontrol "-ERR Protocol error\r\n";
+    }
+    else {
+        my $digest = Digest::MD5::md5_hex($POP3_TIMESTAMP, $TEXT_PASSWORD);
+
+        if (($user ne $TEXT_USERNAME) || ($secret ne $digest)) {
+            sendcontrol "-ERR Login failure\r\n";
+        }
+        else {
+            sendcontrol "+OK Login successful\r\n";
+        }
+    }
+
+    return 0;
+}
+
 sub AUTH_pop3 {
     my ($testno) = @_;
 
     if(!@auth_mechs) {
         sendcontrol "-ERR Unrecognized command\r\n";
     }
@@ -2699,15 +2838,20 @@
     open(CUSTOM, "<log/ftpserver.cmd") ||
         return 1;
 
     logmsg "FTPD: Getting commands from log/ftpserver.cmd\n";
 
     while(<CUSTOM>) {
-        if($_ =~ /REPLY ([A-Za-z0-9+\/=]+) (.*)/) {
+        if($_ =~ /REPLY ([A-Za-z0-9+\/=\*]*) (.*)/) {
             $customreply{$1}=eval "qq{$2}";
-            logmsg "FTPD: set custom reply for $1\n";
+            if($1 eq "") {
+                logmsg "FTPD: set custom reply for empty response\n";
+            }
+            else {
+                logmsg "FTPD: set custom reply for $1\n";
+            }
         }
         elsif($_ =~ /COUNT ([A-Z]+) (.*)/) {
             # we blank the customreply for this command when having
             # been used this number of times
             $customcount{$1}=$2;
             logmsg "FTPD: blank custom reply for $1 after $2 uses\n";
@@ -3014,32 +3158,73 @@
         $full =~ s/[\n\r]+$//;
 
         my $FTPCMD;
         my $FTPARG;
         if($proto eq "imap") {
             # IMAP is different with its identifier first on the command line
-            unless(($full =~ /^([^ ]+) ([^ ]+) (.*)/) ||
-                   ($full =~ /^([^ ]+) ([^ ]+)/)) {
-                sendcontrol "$1 '$full': command not understood.\r\n";
+            if(($full =~ /^([^ ]+) ([^ ]+) (.*)/) ||
+               ($full =~ /^([^ ]+) ([^ ]+)/)) {
+                $cmdid=$1; # set the global variable
+                $FTPCMD=$2;
+                $FTPARG=$3;
+            }
+            # IMAP authentication cancellation
+            elsif($full =~ /^\*$/) {
+                # Command id has already been set
+                $FTPCMD="*";
+                $FTPARG="";
+            }
+            # IMAP long "commands" are base64 authentication data
+            elsif($full =~ /^[A-Z0-9+\/]*={0,2}$/i) {
+                # Command id has already been set
+                $FTPCMD=$full;
+                $FTPARG="";
+            }
+            else {
+                sendcontrol "$full BAD Command\r\n";
                 last;
             }
-            $cmdid=$1; # set the global variable
-            $FTPCMD=$2;
-            $FTPARG=$3;
         }
         elsif($full =~ /^([A-Z]{3,4})(\s(.*))?$/i) {
             $FTPCMD=$1;
             $FTPARG=$3;
         }
-        elsif(($proto eq "smtp") && ($full =~ /^[A-Z0-9+\/]{0,512}={0,2}$/i)) {
-            # SMTP long "commands" are base64 authentication data.
-            $FTPCMD=$full;
-            $FTPARG="";
+        elsif($proto eq "pop3") {
+            # POP3 authentication cancellation
+            if($full =~ /^\*$/) {
+                $FTPCMD="*";
+                $FTPARG="";
+            }
+            # POP3 long "commands" are base64 authentication data
+            elsif($full =~ /^[A-Z0-9+\/]*={0,2}$/i) {
+                $FTPCMD=$full;
+                $FTPARG="";
+            }
+            else {
+                sendcontrol "-ERR Unrecognized command\r\n";
+                last;
+            }
+        }
+        elsif($proto eq "smtp") {
+            # SMTP authentication cancellation
+            if($full =~ /^\*$/) {
+                $FTPCMD="*";
+                $FTPARG="";
+            }
+            # SMTP long "commands" are base64 authentication data
+            elsif($full =~ /^[A-Z0-9+\/]{0,512}={0,2}$/i) {
+                $FTPCMD=$full;
+                $FTPARG="";
+            }
+            else {
+                sendcontrol "500 Unrecognized command\r\n";
+                last;
+            }
         }
         else {
-            sendcontrol "500 '$full': command not understood.\r\n";
+            sendcontrol "500 Unrecognized command\r\n";
             last;
         }
 
         logmsg "< \"$full\"\n";
 
         if($verbose) {
@@ -3055,39 +3240,39 @@
             my $twentieths = $delay * 20;
             while($twentieths--) {
                 select(undef, undef, undef, 0.05) unless($got_exit_signal);
             }
         }
 
-        my $text;
-        $text = $customreply{$FTPCMD};
-        my $fake = $text;
+        my $check = 1; # no response yet
 
+        # See if there is a custom reply for our command
+        my $text = $customreply{$FTPCMD};
         if($text && ($text ne "")) {
             if($customcount{$FTPCMD} && (!--$customcount{$FTPCMD})) {
                 # used enough number of times, now blank the customreply
                 $customreply{$FTPCMD}="";
             }
+
+            sendcontrol "$text\r\n";
+            $check = 0;
         }
         else {
+            # See if there is any display text for our command
             $text = $displaytext{$FTPCMD};
-        }
-        my $check;
-        if($text && ($text ne "")) {
-            if($cmdid && ($cmdid ne "")) {
-                sendcontrol "$cmdid$text\r\n";
-            }
-            else {
-                sendcontrol "$text\r\n";
+            if($text && ($text ne "")) {
+                if($proto eq 'imap') {
+                    sendcontrol "$cmdid $text\r\n";
+                }
+                else {
+                    sendcontrol "$text\r\n";
+                }
+
+                $check = 0;
             }
-        }
-        else {
-            $check=1; # no response yet
-        }
 
-        unless($fake && ($fake ne "")) {
             # only perform this if we're not faking a reply
             my $func = $commandfunc{$FTPCMD};
             if($func) {
                 &$func($FTPARG, $FTPCMD);
                 $check=0; # taken care of
             }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/libtest/lib1507.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/libtest/lib1507.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/libtest/lib1507.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/libtest/lib1507.c	2013-12-17 06:02:35.000000000 +0800
@@ -86,12 +86,13 @@
 
    curl_easy_setopt(curl, CURLOPT_URL, URL);
 #if 0
    curl_easy_setopt(curl, CURLOPT_USERNAME, USERNAME);
    curl_easy_setopt(curl, CURLOPT_PASSWORD, PASSWORD);
 #endif
+   curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
    curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
    curl_easy_setopt(curl, CURLOPT_MAIL_FROM, MAILFROM);
    curl_easy_setopt(curl, CURLOPT_MAIL_RCPT, rcpt_list);
    curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
    curl_multi_add_handle(mcurl, curl);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/libtest/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/libtest/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/libtest/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/libtest/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -901,13 +901,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -260,13 +260,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/runtests.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/runtests.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/runtests.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/runtests.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/runtests.pl	2013-10-13 04:24:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/runtests.pl	2013-12-17 06:02:35.000000000 +0800
@@ -207,23 +207,24 @@
 my $gopher_ipv6; # set if Gopher server has IPv6 support
 my $has_ipv6;    # set if libcurl is built with IPv6 support
 my $has_libz;    # set if libcurl is built with libz support
 my $has_getrlimit;  # set if system has getrlimit()
 my $has_ntlm;    # set if libcurl is built with NTLM support
 my $has_ntlm_wb; # set if libcurl is built with NTLM delegation to winbind
+my $has_sspi;    # set if libcurl is built with SSPI support
 my $has_charconv;# set if libcurl is built with CharConv support
 my $has_tls_srp; # set if libcurl is built with TLS-SRP support
 my $has_metalink;# set if curl is built with Metalink support
 
 my $has_openssl;  # built with a lib using an OpenSSL-like API
 my $has_gnutls;   # built with GnuTLS
 my $has_nss;      # built with NSS
 my $has_yassl;    # built with yassl
 my $has_polarssl; # built with polarssl
 my $has_axtls;    # built with axTLS
-my $has_winssl;   # built with WinSSL (Schannel/SSPI)
+my $has_winssl;   # built with WinSSL    (Secure Channel aka Schannel)
 my $has_darwinssl;# build with DarwinSSL (Secure Transport)
 
 my $has_shared = "unknown";  # built shared
 
 my $ssllib;      # name of the lib we use (for human presentation)
 my $has_crypto;  # set if libcurl is built with cryptographic support
@@ -2403,12 +2404,16 @@
                 $has_ntlm=1;
             }
             if($feat =~ /NTLM_WB/i) {
                 # NTLM delegation to winbind daemon ntlm_auth helper enabled
                 $has_ntlm_wb=1;
             }
+            if($feat =~ /SSPI/i) {
+                # SSPI enabled
+                $has_sspi=1;
+            }
             if($feat =~ /CharConv/i) {
                 # CharConv enabled
                 $has_charconv=1;
             }
             if($feat =~ /TLS-SRP/i) {
                 # TLS-SRP enabled
@@ -2832,12 +2837,17 @@
         }
         elsif($f eq "NTLM_WB") {
             if($has_ntlm_wb) {
                 next;
             }
         }
+        elsif($f eq "SSPI") {
+            if($has_sspi) {
+                next;
+            }
+        }
         elsif($f eq "getrlimit") {
             if($has_getrlimit) {
                 next;
             }
         }
         elsif($f eq "crypto") {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/server/getpart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/server/getpart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/server/getpart.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/server/getpart.c	2013-12-17 06:02:35.000000000 +0800
@@ -149,65 +149,81 @@
 static int appenddata(char  **dst_buf,   /* dest buffer */
                       size_t *dst_len,   /* dest buffer data length */
                       size_t *dst_alloc, /* dest buffer allocated size */
                       char   *src_buf,   /* source buffer */
                       int     src_b64)   /* != 0 if source is base64 encoded */
 {
-  size_t need_alloc, src_len;
-  union {
-    unsigned char *as_uchar;
-             char *as_char;
-  } buf64;
+  size_t need_alloc = 0;
+  size_t src_len = strlen(src_buf);
 
-  src_len = strlen(src_buf);
   if(!src_len)
     return GPE_OK;
 
-  buf64.as_char = NULL;
+  need_alloc = src_len + *dst_len + 1;
 
   if(src_b64) {
-    /* base64 decode the given buffer */
-    int error = (int) Curl_base64_decode(src_buf, &buf64.as_uchar, &src_len);
-    if(error)
-      return GPE_OUT_OF_MEMORY;
-    src_buf = buf64.as_char;
-    if(!src_len || !src_buf) {
-      /*
-      ** currently there is no way to tell apart an OOM condition in
-      ** Curl_base64_decode() from zero length decoded data. For now,
-      ** let's just assume it is an OOM condition, currently we have
-      ** no input for this function that decodes to zero length data.
-      */
-      if(buf64.as_char)
-        free(buf64.as_char);
-      return GPE_OUT_OF_MEMORY;
-    }
-  }
+    if(src_buf[src_len - 1] == '\r')
+      src_len--;
 
-  need_alloc = src_len + *dst_len + 1;
+    if(src_buf[src_len - 1] == '\n')
+      src_len--;
+  }
 
   /* enlarge destination buffer if required */
   if(need_alloc > *dst_alloc) {
     size_t newsize = need_alloc * 2;
     char *newptr = realloc(*dst_buf, newsize);
     if(!newptr) {
-      if(buf64.as_char)
-        free(buf64.as_char);
       return GPE_OUT_OF_MEMORY;
     }
     *dst_alloc = newsize;
     *dst_buf = newptr;
   }
 
   /* memcpy to support binary blobs */
   memcpy(*dst_buf + *dst_len, src_buf, src_len);
   *dst_len += src_len;
   *(*dst_buf + *dst_len) = '\0';
 
-  if(buf64.as_char)
-    free(buf64.as_char);
+  return GPE_OK;
+}
+
+static int decodedata(char  **buf,   /* dest buffer */
+                      size_t *len)   /* dest buffer data length */
+{
+  int error = 0;
+  unsigned char *buf64 = NULL;
+  size_t src_len = 0;
+
+  if(!*len)
+    return GPE_OK;
+
+  /* base64 decode the given buffer */
+  error = (int) Curl_base64_decode(*buf, &buf64, &src_len);
+  if(error)
+    return GPE_OUT_OF_MEMORY;
+
+  if(!src_len) {
+    /*
+    ** currently there is no way to tell apart an OOM condition in
+    ** Curl_base64_decode() from zero length decoded data. For now,
+    ** let's just assume it is an OOM condition, currently we have
+    ** no input for this function that decodes to zero length data.
+    */
+    if(buf64)
+      free(buf64);
+
+    return GPE_OUT_OF_MEMORY;
+  }
+
+  /* memcpy to support binary blobs */
+  memcpy(*buf, buf64, src_len);
+  *len = src_len;
+  *(*buf + src_len) = '\0';
+
+  free(buf64);
 
   return GPE_OK;
 }
 
 /*
  * getpart()
@@ -305,22 +321,36 @@
         /* end of current sub section */
         state = STATE_INMAIN;
         csub[0] = '\0';
         if(in_wanted_part) {
           /* end of wanted part */
           in_wanted_part = 0;
+
+          /* Do we need to base64 decode the data? */
+          if(base64) {
+            error = decodedata(outbuf, outlen);
+            if(error)
+              return error;
+          }
           break;
         }
       }
       else if((STATE_INMAIN == state) && !strcmp(cmain, ptag)) {
         /* end of current main section */
         state = STATE_OUTER;
         cmain[0] = '\0';
         if(in_wanted_part) {
           /* end of wanted part */
           in_wanted_part = 0;
+
+          /* Do we need to base64 decode the data? */
+          if(base64) {
+            error = decodedata(outbuf, outlen);
+            if(error)
+              return error;
+          }
           break;
         }
       }
       else if((STATE_OUTER == state) && !strcmp(couter, ptag)) {
         /* end of outermost file section */
         state = STATE_OUTSIDE;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/server/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/server/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/server/Makefile.in	2013-10-13 04:24:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/server/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -357,13 +357,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/unit/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/unit/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/unit/Makefile.in	2013-10-13 04:24:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/unit/Makefile.in	2013-12-17 06:11:29.000000000 +0800
@@ -322,13 +322,12 @@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
 HAVE_GNUTLS_SRP = @HAVE_GNUTLS_SRP@
 HAVE_LDAP_SSL = @HAVE_LDAP_SSL@
 HAVE_LIBZ = @HAVE_LIBZ@
-HAVE_NSS_INITCONTEXT = @HAVE_NSS_INITCONTEXT@
 HAVE_SSLEAY_SRP = @HAVE_SSLEAY_SRP@
 IDN_ENABLED = @IDN_ENABLED@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/unit/unit1302.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/unit/unit1302.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/tests/unit/unit1302.c	2013-09-09 06:11:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/tests/unit/unit1302.c	2013-12-17 06:02:35.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at http://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -28,13 +28,13 @@
 
 static struct SessionHandle *data;
 
 static CURLcode unit_setup( void )
 {
   data = curl_easy_init();
-  if (!data)
+  if(!data)
     return CURLE_OUT_OF_MEMORY;
   return CURLE_OK;
 }
 
 static void unit_stop( void )
 {
@@ -101,24 +101,39 @@
 rc = Curl_base64_decode("aQ==", &decoded, &size);
 fail_unless(rc == CURLE_OK, "return code should be CURLE_OK");
 fail_unless(size == 1, "size should be 1");
 verify_memory(decoded, "i", 2);
 Curl_safefree(decoded);
 
-/* this is an illegal input */
+/* This is illegal input as the data is too short */
 size = 1; /* not zero */
 decoded = &anychar; /* not NULL */
 rc = Curl_base64_decode("aQ", &decoded, &size);
-/* return code indiferent, but output shall be as follows */
+fail_unless(rc == CURLE_BAD_CONTENT_ENCODING, "return code should be CURLE_BAD_CONTENT_ENCODING");
 fail_unless(size == 0, "size should be 0");
 fail_if(decoded, "returned pointer should be NULL");
 
-/* this is garbage input that libcurl decodes as far as possible */
-size = 0;
-decoded = NULL;
+/* This is illegal input as it contains three padding characters */
+size = 1; /* not zero */
+decoded = &anychar; /* not NULL */
+rc = Curl_base64_decode("a===", &decoded, &size);
+fail_unless(rc == CURLE_BAD_CONTENT_ENCODING, "return code should be CURLE_BAD_CONTENT_ENCODING");
+fail_unless(size == 0, "size should be 0");
+fail_if(decoded, "returned pointer should be NULL");
+
+/* This is illegal input as it contains a padding character mid input */
+size = 1; /* not zero */
+decoded = &anychar; /* not NULL */
+rc = Curl_base64_decode("a=Q=", &decoded, &size);
+fail_unless(rc == CURLE_BAD_CONTENT_ENCODING, "return code should be CURLE_BAD_CONTENT_ENCODING");
+fail_unless(size == 0, "size should be 0");
+fail_if(decoded, "returned pointer should be NULL");
+
+/* This is garbage input as it contains an illegal base64 character */
+size = 1; /* not zero */
+decoded = &anychar; /* not NULL */
 rc = Curl_base64_decode("a\x1f==", &decoded, &size);
-fail_unless(rc == CURLE_OK, "return code should be CURLE_OK");
-fail_unless(size == 1, "size should be 1");
-fail_if(!decoded, "returned pointer should not be NULL");
-Curl_safefree(decoded);
+fail_unless(rc == CURLE_BAD_CONTENT_ENCODING, "return code should be CURLE_BAD_CONTENT_ENCODING");
+fail_unless(size == 0, "size should be 0");
+fail_if(decoded, "returned pointer should be NULL");
 
 UNITTEST_STOP
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/vs/vc6/lib/vc6libcurl.dsp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/vs/vc6/lib/vc6libcurl.dsp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/vs/vc6/lib/vc6libcurl.dsp	2013-10-14 22:43:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/vs/vc6/lib/vc6libcurl.dsp	2013-12-17 15:51:30.000000000 +0800
@@ -939,12 +939,16 @@
 # Begin Source File
 
 SOURCE=..\..\..\lib\share.h
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\..\lib\sigpipe.h
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\..\lib\slist.h
 # End Source File
 # Begin Source File
 
 SOURCE=..\..\..\lib\smtp.h
 # End Source File
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/vs/vc8/lib/vc8libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/vs/vc8/lib/vc8libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.33.0/vs/vc8/lib/vc8libcurl.vcproj	2013-10-14 22:43:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.34.0/vs/vc8/lib/vc8libcurl.vcproj	2013-12-17 15:51:30.000000000 +0800
@@ -296,12 +296,13 @@
 			<File RelativePath="..\..\..\lib\rawstr.h"></File>
 			<File RelativePath="..\..\..\lib\rtsp.h"></File>
 			<File RelativePath="..\..\..\lib\select.h"></File>
 			<File RelativePath="..\..\..\lib\sendf.h"></File>
 			<File RelativePath="..\..\..\lib\setup-vms.h"></File>
 			<File RelativePath="..\..\..\lib\share.h"></File>
+			<File RelativePath="..\..\..\lib\sigpipe.h"></File>
 			<File RelativePath="..\..\..\lib\slist.h"></File>
 			<File RelativePath="..\..\..\lib\smtp.h"></File>
 			<File RelativePath="..\..\..\lib\sockaddr.h"></File>
 			<File RelativePath="..\..\..\lib\socks.h"></File>
 			<File RelativePath="..\..\..\lib\speedcheck.h"></File>
 			<File RelativePath="..\..\..\lib\splay.h"></File>

diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/acinclude.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/acinclude.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/acinclude.m4	2016-10-31 17:41:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/acinclude.m4	2016-12-19 15:27:56.000000000 +0800
@@ -3229,10 +3229,17 @@
     fi
     if test -z "$min"; then
       AC_MSG_RESULT([set by user])
     else
       AC_MSG_RESULT([$min set])
     fi
+
+    old_CFLAGS=$CFLAGS
     CFLAGS="$CFLAGS -Werror=partial-availability"
+    AC_MSG_CHECKING([whether $CC accepts -Werror=partial-availability])
+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],
+      [AC_MSG_RESULT([yes])],
+      [AC_MSG_RESULT([no])
+      CFLAGS=$old_CFLAGS])
   fi
 
 ])
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/CHANGES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/CHANGES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/CHANGES	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/CHANGES	2016-12-21 14:50:26.000000000 +0800
@@ -3,5909 +3,5812 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                                   Changelog
 
-Version 7.51.0 (2 Nov 2016)
+Version 7.52.0 (20 Dec 2016)
 
-Daniel Stenberg (2 Nov 2016)
-- THANKS: synced with 7.51.0
+Daniel Stenberg (20 Dec 2016)
+- THANKS: 13 new contributors from 7.52.0
 
-- RELEASE-NOTES: 7.51.0
+- RELEASE-NOTES: 7.52.0
 
-- ftp_done: don't clobber the passed in error code
+- ssh: inhibit coverity warning with (void)
   
-  Coverity CID 1374359 pointed out the unused result value.
+  CID 1397391 (#1 of 1): Unchecked return value (CHECKED_RETURN)
 
-- ftp: remove dead code in ftp_done
+- Curl_recv_has_postponed_data: silence compiler warnings
   
-  Coverity CID 1374358
+  Follow-up to d00f2a8f2
 
-Jay Satiro (1 Nov 2016)
-- generate.bat: Include include/curl in libcurl VS projects
-  
-  .. because including those headers helps Visual Studio's Intellisense.
+Jay Satiro (19 Dec 2016)
+- tests: checksrc compliance
 
-- generate.bat: Remove strcase.[ch] from curl tool VS projects
+- http_proxy: Fix proxy CONNECT hang on pending data
   
-  ..because they're no longer needed in the tool build. strcase is still
-  built by the libcurl project and exports curl_str(n)equal which is used
-  by the curl tool.
+  - Check for pending data before waiting on the socket.
   
-  Bug: https://github.com/curl/curl/commit/9363f1a#all_commit_comments
+  Bug: https://github.com/curl/curl/issues/1156
+  Reported-by: Adam Langley
 
-Daniel Stenberg (2 Nov 2016)
-- metalink: simplify the hex parsing function
+Daniel Stenberg (19 Dec 2016)
+- cmdline-opts/tlsv1.d: rephrased
+
+- [Dan McNulty brought this change]
+
+  schannel: fix wildcard cert name validation on Win CE
   
-  ... and now it avoids using the libcurl toupper() function
+  Fixes a few issues in manual wildcard cert name validation in
+  schannel support code for Win32 CE:
+  - when comparing the wildcard name to the hostname, the wildcard
+    character was removed from the cert name and the hostname
+    was checked to see if it ended with the modified cert name.
+    This allowed cert names like *.com to match the connection
+    hostname. This violates recommendations from RFC 6125.
+  - when the wildcard name in the certificate is longer than the
+    connection hostname, a buffer overread of the connection
+    hostname buffer would occur during the comparison of the
+    certificate name and the connection hostname.
 
-Michael Kaufmann (1 Nov 2016)
-- file: fix compiler warning
+- printf: fix floating point buffer overflow issues
   
-  follow-up to 46133aa5
+  ... and add a bunch of floating point printf tests
 
-Dan Fandrich (1 Nov 2016)
-- strcase: fixed Metalink builds by redefining checkprefix()
+- config-amigaos.h: (embarrassed) made the line shorter
+
+- config-amigaos.h: fix bug report email reference
+
+- RELEASE-NOTES: synced with 4517158abfeba
+
+- CIPHERS.md: backtick the names to show underscores fine
+
+- form-string.d: fix format mistake
   
-  ...to use the public function curl_strnequal(). This isn't ideal because
-  it adds extra overhead to any internal calls to checkprefix.
+  and regenerated curl.1
   
-  follow-up to 95bd2b3e
+  Reported-by: Gisle Vanem
 
-Daniel Stenberg (1 Nov 2016)
-- curl.1: typo
+Michael Kaufmann (18 Dec 2016)
+- openssl: simplify expression in Curl_ossl_version
 
-- curl.1: expand on how multiple uses of -o looks
+- curl_easy_recv: Improve documentation and example program
   
-  Suggested-by: Dan Jacobson
-  Issue: https://github.com/curl/curl/issues/1097
-
-- tests/util: get a private strncasecompare clone
+  Follow-up to 82245ea: Fix the example program sendrecv.c (handle
+  CURLE_AGAIN, handle incomplete send). Improve the documentation
+  for curl_easy_recv() and curl_easy_send().
   
-  ... since the curlx_* code no longer provides one and we don't link
-  libcurl to these test servers.
+  Reviewed-by: Frank Meier
+  Assisted-by: Jay Satiro
+  
+  See https://github.com/curl/curl/pull/1134
 
-- strcase: make the tool use curl_str[n]equal instead
+- [Isaac Boukris brought this change]
+
+  Curl_getconnectinfo: avoid checking if the connection is closed
   
-  As they are after all part of the public API. Saves space and reduces
-  complexity. Remove the strcase defines from the curlx_ family.
+  It doesn't benefit us much as the connection could get closed at
+  any time, and also by checking we lose the ability to determine
+  if the socket was closed by reading zero bytes.
   
-  Suggested-by: Dan Fandrich
-  Idea: https://curl.haxx.se/mail/lib-2016-10/0136.html
-
-Kamil Dudka (31 Oct 2016)
-- gskit, nss: do not include strequal.h
+  Reported-by: Michael Kaufmann
   
-  follow-up to 811a693b80
+  Closes https://github.com/curl/curl/pull/1134
 
-Dan Fandrich (31 Oct 2016)
-- strcasecompare: include curl.h in strcase.c
+Daniel Stenberg (18 Dec 2016)
+- CIPHERS.md: attempt to document TLS cipher names
   
-  This should fix the "warning: 'curl_strequal' redeclared without
-  dllimport attribute: previous dllimport ignored" message and subsequent
-  link error on Windows because of the missing CURL_EXTERN on the
-  prototype.
+  As the official docs seems really hard to keep track of and link to over
+  time
 
-Daniel Stenberg (31 Oct 2016)
-- strcase: fix the remaining rawstr users
+- curl.1: generated after 6cce4dbf830
 
-- msvc builds: s/rawstr/strcase
-  
-  Follow-up to 811a693b
+- cmdline-opts/post30X.d: fix the RFC references
 
-Dan Fandrich (31 Oct 2016)
-- strcasecompare: replaced remaining rawstr.h with strcase.h
+- curl.1: regenerated
   
-  This is a followup to commit 811a693b
+  Fixed trailing whitespace and numerous formatting glitches
 
-Marcel Raad (31 Oct 2016)
-- digest_sspi: fix include
-  
-  Fix compile break from 811a693b80
+- cmdline-opts: formatting fixes
 
-Dan Fandrich (31 Oct 2016)
-- libauthretry: use the external function curl_strequal
+- curl_easy_setopt.3: removed CURLOPT_SOCKS_PROXYTYPE
+
+- tool_getparam.c: make comments use the up-to-date option names
+
+- manpage-scan.pl: allow deprecated options to get removed from curl.1
   
-  The internal version strcasecompare isn't available outside libcurl
+  --krb4, --ftp-ssl and --ftp-ssl-reqd no longer need to be documented in the
+  man page
 
-Daniel Stenberg (31 Oct 2016)
-- RELEASE-NOTES: synced with d14538d2501ef0da
+- cmdline-opts/gen.pl: trim off trailing spaces
 
-- configure: raise the default minimum version for macos to 10.8
+- cmdline-opts/proxy-tlsuser.d: remove trailing .d
+
+- curl_easy_setopt.3: CURLOPT_PRE_PROXY instead of CURLOPT_SOCKS_PROXY
+
+- symbols: removed two, added one
+
+- cmdline-opts: include the man page split up files in the dist
+
+- curl.1: generated with gen.pl
   
-  follow-up to 4f8d0b6f02aa7043. Since the darwinssl code breaks
-  otherwise. If you build without darwinssl 10.5 works fine.
+  This is the first time we replace the manually edited curt.1 with the
+  generated one created by gen.pl and the individual option documentation
+  pages.
+  
+  Do not edit this file, edit the individual pages and regenerate this
+  output.
+  
+  This file will be generated by the build system soon and then removed
+  from git.
 
-- unit1301: keep testing curl_strequal
+- cmdline-opts: added some missing info
+
+- CURLINFO_SSL_VERIFYRESULT.3: language
+
+- HTTPS-PROXY docs: update/polish
+
+- cmdline-opts/page-header: mention it is generated
   
-  as that is still part of the API, fix from 8fe4bd084412f30
+  ... to avoid people from trying to edit the pending curl.1 version that
+  gets generated by gen.pl
 
-- ldap: fix include
+- preproxy: renamed what was added as SOCKS_PROXY
   
-  Fix bug from 811a693b80
+  CURLOPT_SOCKS_PROXY -> CURLOPT_PRE_PROXY
+  
+  Added the corresponding --preroxy command line option. Sets a SOCKS
+  proxy to connect to _before_ connecting to a HTTP(S) proxy.
 
-- url: remove unconditional idn2.h include
+- curl: normal socks proxies still use CURLOPT_PROXY
   
-  Mistake brought by 9c91ec778104a
+  ... the newly introduced CURLOPT_SOCKS_PROXY is special and should be
+  asked for specially. (Needs new code.)
+  
+  Unified proxy type to a single variable in the config struct.
 
-- curl_strequal: part of public API/ABI, needs to be kept
+- CURLOPT_SOCKS_PROXYTYPE: removed
   
-  These two public functions have been mentioned as deprecated since a
-  very long time but since they are still part of the API and ABI we need
-  to keep them around.
+  This was added as part of the SOCKS+HTTPS proxy merge but there's no
+  need to support this as we prefer to have the protocol specified as a
+  prefix instead.
 
-- strcase: s/strequal/strcasecompare
+- curl_multi_socket.3: fix typo
+
+- checksrc: warn for assignments within if() expressions
   
-  some more follow-ups to 811a693b80
+  ... they're already frowned upon in our source code style guide, this
+  now enforces the rule harder.
 
-- ldap: fix strcase use
+- checksrc: stricter no-space-before-paren enforcement
   
-  follow-up to 811a693b80
+  In order to make the code style more uniform everywhere
 
-- test165: adapted to the libidn2 use and IDNA2008 fix
+- ISSUE_TEMPLATE: try mentioning known bugs/todo in new issue template
 
-- cookie: replace use of fgets() with custom version
-  
-  ... that will ignore lines that are too long to fit in the buffer.
+- RELEASE-NOTES: synced with 71a55534fa6
+
+- [Adam Langley brought this change]
+
+  openssl: don't use OpenSSL's ERR_PACK.
   
-  CVE-2016-8615
+  ERR_PACK is an internal detail of OpenSSL. Also, when using it, a
+  function name must be specified which is overly specific: the test will
+  break whenever OpenSSL internally change things so that a different
+  function creates the error.
   
-  Bug: https://curl.haxx.se/docs/adv_20161102A.html
-  Reported-by: Cure53
+  Closes #1157
 
-- strcasecompare: all case insensitive string compares ignore locale now
-  
-  We had some confusions on when each function was used. We should not act
-  differently on different locales anyway.
+Dan Fandrich (5 Dec 2016)
+- test2032: Mark test as flaky
 
-- strcasecompare: is the new name for strequal()
-  
-  ... to make it less likely that we forget that the function actually
-  does case insentive compares. Also replaced several invokes of the
-  function with a plain strcmp when case sensitivity is not an issue (like
-  comparing with "-").
+Jay Satiro (3 Dec 2016)
+- [Jeremy Pearson brought this change]
 
-- ftp: check for previous patch must be case sensitive!
+  libcurl-multi.3: typo
   
-  ... otherwise example.com/PATH and example.com/path would be assumed to
-  be the same and they usually aren't!
+  Closes https://github.com/curl/curl/pull/1153
 
-- SSH: check md5 fingerprint case sensitively
+Dan Fandrich (2 Dec 2016)
+- test1281: added http as a required feature
 
-- connectionexists: use case sensitive user/password comparisons
+Daniel Stenberg (2 Dec 2016)
+- curl: support zero-length argument strings in config files
   
-  CVE-2016-8616
+  ... like 'user-agent = ""'
   
-  Bug: https://curl.haxx.se/docs/adv_20161102B.html
-  Reported-by: Cure53
+  Adjusted test 71 to verify.
 
-- base64: check for integer overflow on large input
+- http_proxy: simplify CONNECT response reading
   
-  CVE-2016-8617
-  
-  Bug: https://curl.haxx.se/docs/adv_20161102C.html
-  Reported-by: Cure53
+  Since it now reads responses one byte a time, a loop could be removed
+  and it is no longer limited to get the whole response within 16K, it is
+  now instead only limited to 16K maximum header line lengths.
 
-- krb5: avoid realloc(0)
+- tests: fix CONNECT test cases to be more strict
   
-  If the requested size is zero, bail out with error instead of doing a
-  realloc() that would cause a double-free: realloc(0) acts as a free()
-  and then there's a second free in the cleanup path.
+  ... as they broke with the cleaned up CONNECT handling
+
+- CONNECT: read responses one byte at a time
   
-  CVE-2016-8619
+  ... so that it doesn't read data that is actually coming from the
+  remote. 2xx responses have no body from the proxy, that data is from the
+  peer.
   
-  Bug: https://curl.haxx.se/docs/adv_20161102E.html
-  Reported-by: Cure53
+  Fixes #1132
 
-- aprintf: detect wrap-around when growing allocation
-  
-  On 32bit systems we could otherwise wrap around after 2GB and allocate 0
-  bytes and crash.
+- CONNECT: reject TE or CL in 2xx responses
   
-  CVE-2016-8618
+  A server MUST NOT send any Transfer-Encoding or Content-Length header
+  fields in a 2xx (Successful) response to CONNECT. (RFC 7231 section
+  4.3.6)
   
-  Bug: https://curl.haxx.se/docs/adv_20161102D.html
-  Reported-by: Cure53
+  Also fixes the three test cases that did this.
 
-- range: reject char globs with missing end like '[L-]'
+- URL parser: reject non-numerical port numbers
   
-  ... which previously would lead to out of boundary reads.
-  
-  Reported-by: Luật Nguyễn
+  Test 1281 added to verify
 
-- glob_next_url: make sure to stay within the given output buffer
+Dan Fandrich (30 Nov 2016)
+- runtests: made Servers: output be more consistent by removing OFF
 
-- range: prevent negative end number in a glob range
+- cyassl: fixed typo introduced in 4f8b1774
+
+Michael Kaufmann (30 Nov 2016)
+- CURLOPT_CONNECT_TO: Skip non-matching "connect-to" entries properly
   
-  CVE-2016-8620
+  If a port number in a "connect-to" entry does not match, skip this
+  entry instead of connecting to port 0.
   
-  Bug: https://curl.haxx.se/docs/adv_20161102F.html
-  Reported-by: Luật Nguyễn
-
-- parsedate: handle cut off numbers better
+  If a port number in a "connect-to" entry matches, use this entry
+  and look no further.
   
-  ... and don't read outside of the given buffer!
+  Reported-by: Jay Satiro
+  Assisted-by: Jay Satiro, Daniel Stenberg
   
-  CVE-2016-8621
+  Closes #1148
+
+Daniel Stenberg (29 Nov 2016)
+- BUGS: describe bug handling process
+
+- RELEASE-NOTES: synced with 19613fb3
+
+Jay Satiro (28 Nov 2016)
+- http2: check nghttp2_session_set_local_window_size exists
   
-  bug: https://curl.haxx.se/docs/adv_20161102G.html
-  Reported-by: Luật Nguyễn
+  The function only exists since nghttp2 1.12.0.
+  
+  Bug: https://github.com/curl/curl/commit/a4d8888#commitcomment-19985676
+  Reported-by: Michael Kaufmann
 
-- escape: avoid using curl_easy_unescape() internally
+Daniel Stenberg (28 Nov 2016)
+- [Anders Bakken brought this change]
+
+  http2: Fix crashes when parent stream gets aborted
   
-  Since the internal Curl_urldecode() function has a better API.
+  Closes #1125
 
-- unescape: avoid integer overflow
+- cmdline-docs: more options converted and fixed
   
-  CVE-2016-8622
+  Now all options are in the new system.
+
+- gen: include footer in mainpage output
+
+Jay Satiro (28 Nov 2016)
+- lib1536: checksrc compliance
+
+Daniel Stenberg (28 Nov 2016)
+- cmdline-opts: more command line options documented
   
-  Bug: https://curl.haxx.se/docs/adv_20161102H.html
-  Reported-by: Cure53
+  Moved over to the new format
 
-- cookies: getlist() now holds deep copies of all cookies
+- curl: remove --proxy-ssl* options
   
-  Previously it only held references to them, which was reckless as the
-  thread lock was released so the cookies could get modified by other
-  handles that share the same cookie jar over the share interface.
+  There's mostly likely no need to allow setting SSLv2/3 version for HTTPS
+  proxy. Those protocols are insecure by design and deprecated.
+
+- CURLOPT_PROXY_*.3: polished some proxy option man pages
+
+Patrick Monnerat (26 Nov 2016)
+- os400: support CURLOPT_PROXY_PINNEDPUBLICKEY
   
-  CVE-2016-8623
+  Also define it in ILE/RPG binding.
+
+Daniel Stenberg (26 Nov 2016)
+- [Okhin Vasilij brought this change]
+
+  curl_version_info: add CURL_VERSION_HTTPS_PROXY
   
-  Bug: https://curl.haxx.se/docs/adv_20161102I.html
-  Reported-by: Cure53
+  Closes #1142
 
-- TODO: remove IDNA2008
+- [Frank Gevaerts brought this change]
 
-- idn: switch to libidn2 use and IDNA2008 support
+  tests: Add some testcases for recent new features.
   
-  CVE-2016-8625
+  Add missing tests for CURLINFO_SCHEME, CURLINFO_PROTOCOL, %{scheme},
+  and %{http_version}
   
-  Bug: https://curl.haxx.se/docs/adv_20161102K.html
-  Reported-by: Christian Heimes
+  closes #1143
 
-- test1246: verify URL parsing with host name ending with '#'
+- [Frank Gevaerts brought this change]
 
-- urlparse: accept '#' as end of host name
+  curl_easy_reset: clear info for CULRINFO_PROTOCOL and CURLINFO_SCHEME
+
+- CURLOPT_PROXY_CAINFO.3: clarify proxy use
+
+- CURLOPT_PROXY_CRLFILE.3: clarify https proxy and availability
+
+- curl_easy_setopt.3: add CURLOPT_PROXY_PINNEDPUBLICKEY
   
-  'http://example.com#@127.0.0.1/x.txt' equals a request to example.com
-  for the '/' document with the rest of the URL being a fragment.
+  Follow-up to 4f8b17743d7c55a
+
+- docs: include all opts man pages in dist
   
-  CVE-2016-8624
+  Sorted the lists too.
   
-  Bug: https://curl.haxx.se/docs/adv_20161102J.html
-  Reported-by: Fernando Muñoz
+  ... and include the new ones in the PDF and HTML generation targets
 
-Jay Satiro (31 Oct 2016)
-- INTERNALS: better markdown (follow-up)
+- [Thomas Glanzmann brought this change]
+
+  HTTPS Proxy: Implement CURLOPT_PROXY_PINNEDPUBLICKEY
+
+- [Thomas Glanzmann brought this change]
+
+  url: proxy: Use 443 as default port for https proxies
+
+- TODO: removed "HTTPS proxy"
+
+- [Jan-E brought this change]
+
+  winbuild: add config option ENABLE_NGHTTP2
   
-  - Wrap more words with underscores in backticks.
+  Closes #1141
+
+Jay Satiro (24 Nov 2016)
+- tool_urlglob: Improve sanity check in glob_range
   
-  Follow-up to 13f4913.
+  Prior to this change we depended on errno if strtol could not perform a
+  conversion. POSIX says EINVAL *may* be set. Some implementations like
+  Microsoft's will not set it if there's no conversion.
+  
+  Ref: https://github.com/curl/curl/commit/ee4f7660#commitcomment-19658189
 
-Daniel Stenberg (30 Oct 2016)
-- INTERNALS: better markdown
+- tool_help: Change description for --retry-connrefused
   
-  words with underscore need to be within `these`
+  Ref: https://github.com/curl/curl/pull/1064#issuecomment-260052409
+
+Patrick Monnerat (25 Nov 2016)
+- os400: sync ILE/RPG binding
+
+Jay Satiro (24 Nov 2016)
+- test1135: Fix curl_easy_duphandle prototype for code style
   
-  Bug: https://github.com/curl/curl-www/issues/19
-  Reported-by : Jay Satiro
+  Follow-up to dbadaeb which changed the style.
 
-Jay Satiro (30 Oct 2016)
-- mk-ca-bundle.vbs: Fix UTF-8 output
+- x509asn1: Restore the parameter check in Curl_getASN1Element
   
-  - Change initial message box to mention delay when downloading/parsing.
+  - Restore the removed parts of the parameter check.
   
-  Since there is no progress meter it was somewhat unexpected that after
-  choosing a filename nothing appears to happen, when actually the cert
-  data is in the process of being downloaded and parsed.
+  Follow-up to 945f60e which altered the parameter check.
+
+Daniel Stenberg (25 Nov 2016)
+- RELEASE-NOTES: update option counters
+
+- [Frank Gevaerts brought this change]
+
+  add CURLINFO_SCHEME, CURLINFO_PROTOCOL, and %{scheme}
   
-  - Warn if OpenSSL is not present.
+  Adds access to the effectively used protocol/scheme to both libcurl and
+  curl, both in string and numeric (CURLPROTO_*) form.
   
-  - Use a UTF-8 stream to make the ca-bundle data.
+  Note that the string form will be uppercase, as it is just the internal
+  string.
   
-  - Save the UTF-8 ca-bundle stream as binary so that no BOM is added.
+  As these strings are declared internally as const, and all other strings
+  returned by curl_easy_getinfo() are de-facto const as well, string
+  handling in getinfo.c got const-ified.
   
-  ---
-  
-  This is a follow-up to d2c6d15 which switched mk-ca-bundle.vbs output to
-  ANSI due to corrupt UTF-8 output, now fixed.
-  
-  This change completes making the default certificate bundle output of
-  mk-ca-bundle.vbs as close as possible to that of mk-ca-bundle.pl, which
-  should make it easier to review any difference between their output.
-  
-  Ref: https://github.com/curl/curl/pull/1012
+  Closes #1137
 
-Daniel Stenberg (28 Oct 2016)
-- BINDINGS: converted to markdown
-  
-  To make it render better on the web site, at the price of it becoming
-  slightly less readable as text.
+- RELEASE-NOTES: synced with 63198a4750aeb
 
-Jay Satiro (27 Oct 2016)
-- CURLMOPT_MAX_PIPELINE_LENGTH.3: Clarify it's not for HTTP/2
-  
-  - Clarify that this option is only for HTTP/1.1 pipelining.
-  
-  Bug: https://github.com/curl/curl/issues/1059
-  Reported-by: Jeroen Ooms
-  
-  Assisted-by: Daniel Stenberg
+- curl.1: the new --proxy options ship in 7.52.0
 
-Daniel Stenberg (27 Oct 2016)
-- KNOWN_BUGS: HTTP/2 server push enabled when no pushes can be accepted
-  
-  Closes #927
+- checksrc: move open braces to comply with function declaration style
 
-- KNOWN_BUGS: c-ares deviates from stock resolver on http://1346569778
-  
-  Closes #893
+- checksrc: detect wrongly placed open braces in func declarations
 
-Michael Osipov (27 Oct 2016)
-- configure.in: Fix test syntax
-  
-  Some versions of test allow == for equality, but others (such as the HP-UX
-  version) do not.  Use a single = for correctness.
-  
-  Error output:
-  checking for monotonic clock_gettime... ./configure[20445]: ==: A test command parameter is not valid.
+- checksrc: white space edits to comply to stricter checksrc
 
-Daniel Stenberg (27 Oct 2016)
-- SECURITY: minor updates
+- checksrc: verify ASTERISKNOSPACE
   
-  - we allow the security push up to 48 hours before the release
+  Detects (char*) and 'char*foo' uses.
+
+- checksrc: code style: use 'char *name' style
+
+- checksrc: add ASTERISKSPACE
   
-  - add a mention about possible pre-notifications
+  Verifies a 'char *name' style, with no space after the asterisk.
+
+- openssl: remove dead code
   
-  - lower case the 'curl-security' title
+  Coverity CID 1394666
 
-- [Andrei Sedoi brought this change]
+- [Okhin Vasilij brought this change]
 
-  docs: fix req->data in multi-uv example
+  HTTPS-proxy: fixed mbedtls and polishing
+
+- darwinssl: adopted to the HTTPS proxy changes
   
-  Closes #1088
+  It builds and runs all test cases. No adaptations for actual HTTPS proxy
+  support has been made.
 
-- mbedtls: stop using deprecated include file
+- gtls: fix indent to silence compiler warning
   
-  Reported-by: wyattoday
-  Fixes #1087
+  vtls/gtls.c: In function ‘Curl_gtls_data_pending’:
+  vtls/gtls.c:1429:3: error: this ‘if’ clause does not guard... [-Werror=misleading-indentation]
+     if(conn->proxy_ssl[connindex].session &&
+        ^~
+        vtls/gtls.c:1433:5: note: ...this statement, but the latter is misleadingly indented as if it is guarded by the ‘if’
+             return res;
 
-Kamil Dudka (25 Oct 2016)
-- [Martin Frodl brought this change]
+- [Thomas Glanzmann brought this change]
 
-  nss: fix tight loop in non-blocking TLS handhsake over proxy
+  mbedtls: Fix compile errors
+
+- [Alex Rousskov brought this change]
+
+  proxy: Support HTTPS proxy and SOCKS+HTTP(s)
   
-  ... in case the handshake completes before entering
-  CURLM_STATE_PROTOCONNECT
+  * HTTPS proxies:
   
-  Bug: https://bugzilla.redhat.com/1388162
-
-Jay Satiro (25 Oct 2016)
-- mk-ca-bundle: Update the vbscript version
+  An HTTPS proxy receives all transactions over an SSL/TLS connection.
+  Once a secure connection with the proxy is established, the user agent
+  uses the proxy as usual, including sending CONNECT requests to instruct
+  the proxy to establish a [usually secure] TCP tunnel with an origin
+  server. HTTPS proxies protect nearly all aspects of user-proxy
+  communications as opposed to HTTP proxies that receive all requests
+  (including CONNECT requests) in vulnerable clear text.
   
-  Bring the VBScript version more in line with the perl version:
+  With HTTPS proxies, it is possible to have two concurrent _nested_
+  SSL/TLS sessions: the "outer" one between the user agent and the proxy
+  and the "inner" one between the user agent and the origin server
+  (through the proxy). This change adds supports for such nested sessions
+  as well.
   
-  - Change timestamp to UTC.
+  A secure connection with a proxy requires its own set of the usual SSL
+  options (their actual descriptions differ and need polishing, see TODO):
   
-  - Change URL retrieval to HTTPS-only by default.
+    --proxy-cacert FILE        CA certificate to verify peer against
+    --proxy-capath DIR         CA directory to verify peer against
+    --proxy-cert CERT[:PASSWD] Client certificate file and password
+    --proxy-cert-type TYPE     Certificate file type (DER/PEM/ENG)
+    --proxy-ciphers LIST       SSL ciphers to use
+    --proxy-crlfile FILE       Get a CRL list in PEM format from the file
+    --proxy-insecure           Allow connections to proxies with bad certs
+    --proxy-key KEY            Private key file name
+    --proxy-key-type TYPE      Private key file type (DER/PEM/ENG)
+    --proxy-pass PASS          Pass phrase for the private key
+    --proxy-ssl-allow-beast    Allow security flaw to improve interop
+    --proxy-sslv2              Use SSLv2
+    --proxy-sslv3              Use SSLv3
+    --proxy-tlsv1              Use TLSv1
+    --proxy-tlsuser USER       TLS username
+    --proxy-tlspassword STRING TLS password
+    --proxy-tlsauthtype STRING TLS authentication type (default SRP)
   
-  - Comment out the options that disabled SSL cert checking by default.
+  All --proxy-foo options are independent from their --foo counterparts,
+  except --proxy-crlfile which defaults to --crlfile and --proxy-capath
+  which defaults to --capath.
   
-  - Assume OpenSSL is present, get SHA256. And add a flag to toggle it.
+  Curl now also supports %{proxy_ssl_verify_result} --write-out variable,
+  similar to the existing %{ssl_verify_result} variable.
   
-  - Fix cert issuer name output.
+  Supported backends: OpenSSL, GnuTLS, and NSS.
   
-  The cert issuer output is now ansi, converted from UTF-8. Prior to this
-  it was corrupt UTF-8. It turns out though we can work with UTF-8 the
-  FSO object that writes ca-bundle can't write UTF-8, so there will have
-  to be some alternative if UTF-8 is needed (like an ADODB.Stream).
+  * A SOCKS proxy + HTTP/HTTPS proxy combination:
   
-  - Disable the certificate text info feature.
+  If both --socks* and --proxy options are given, Curl first connects to
+  the SOCKS proxy and then connects (through SOCKS) to the HTTP or HTTPS
+  proxy.
   
-  The certificate text info doesn't work properly with any recent OpenSSL.
+  TODO: Update documentation for the new APIs and --proxy-* options.
+  Look for "Added in 7.XXX" marks.
 
-Daniel Stenberg (24 Oct 2016)
-- TODO: indent code to make it render properly
+Patrick Monnerat (24 Nov 2016)
+- Declare endian read functions argument as a const pointer.
+  This is done for all functions of the form Curl_read[136][624]_[lb]e.
 
-- TODO: Remove the generated include file
+- Limit ASN.1 structure sizes to 256K. Prevent some allocation size overflows.
+  See CRL-01-006.
 
-- TODO: add "--retry should resume"
+Jay Satiro (22 Nov 2016)
+- url: Fix conn reuse for local ports and interfaces
   
-  See #1084
-
-- mk-ca-bundle.1: document -k
+  - Fix connection reuse for when the proposed new conn 'needle' has a
+  specified local port but does not have a specified device interface.
   
-  Brought in 1ad2bdcf110266c. Now does HTTPS by default and needs -k to
-  fall back to plain HTTP.
+  Bug: https://curl.haxx.se/mail/lib-2016-11/0137.html
+  Reported-by: bjt3[at]hotmail.com
 
-- [Jay Satiro brought this change]
+Daniel Stenberg (21 Nov 2016)
+- rand: pass in number of randoms as an unsigned argument
 
-  mk-ca-bundle: Change URL retrieval to HTTPS-only by default
-  
-  - Change all predefined Mozilla URLs to HTTPS (Gregory Szorc).
+Jay Satiro (20 Nov 2016)
+- rand: Fix potentially uninitialized result warning
+
+Marcel Raad (19 Nov 2016)
+- vtls: fix build warnings
   
-  - New option -k to allow URLs other than HTTPS and enable HTTP fallback.
+  Fix warnings about conversions from long to time_t in openssl.c and
+  schannel.c.
   
-  Prior to this change the default URL retrieval mode was to fall back to
-  HTTP if HTTPS didn't work.
+  Follow-up to de4de4e3c7c
+
+Daniel Stenberg (18 Nov 2016)
+- [Marcel Raad brought this change]
+
+  lib: fix compiler warnings after de4de4e3c7c
   
-  Reported-by: Gregory Szorc
+  Visual C++ now complains about implicitly casting time_t (64-bit) to
+  long (32-bit). Fix this by changing some variables from long to time_t,
+  or explicitly casting to long where the public interface would be
+  affected.
   
-  Closes #1012
+  Closes #1131
 
-- RELEASE-NOTES: synced with 50ee3aaf1a9b22d
-
-Dan Fandrich (23 Oct 2016)
-- INSTALL.md: Updated minimum file sizes for 7.50.3
+Peter Wu (17 Nov 2016)
+- [Isaac Boukris brought this change]
 
-Daniel Stenberg (22 Oct 2016)
-- multi: force connections to get closed in close_all_connections
+  Don't mix unix domain sockets with regular ones
   
-  Several independent reports on infinite loops hanging in the
-  close_all_connections() function when closing a multi handle, can be
-  fixed by first marking the connection to get closed before calling
-  Curl_disconnect.
+  When reusing a connection, make sure the unix domain
+  socket option matches.
+
+Jay Satiro (17 Nov 2016)
+- tests: Fix HTTP2-Settings header for huge window size
   
-  This is more fixing-the-symptom rather than the underlying problem
-  though.
+  Follow-up to a4d8888. Changing the window size in that commit resulted
+  in a different HTTP2-Settings upgrade header, causing test 1800 to fail.
+
+- http2: Use huge HTTP/2 windows
   
-  Bug: https://curl.haxx.se/mail/lib-2016-10/0011.html
-  Bug: https://curl.haxx.se/mail/lib-2016-10/0059.html
+  - Improve performance by using a huge HTTP/2 window size.
   
-  Reported-by: Dan Fandrich, Valentin David, Miloš Ljumović
+  Bug: https://github.com/curl/curl/issues/1102
+  Reported-by: afrind@users.noreply.github.com
+  Assisted-by: Tatsuhiro Tsujikawa
 
-- [Anders Bakken brought this change]
+Daniel Stenberg (16 Nov 2016)
+- cmdline-docs: more conversion
 
-  curl_multi_remove_handle: fix a double-free
+- gen: support 'protos'
   
-  In short the easy handle needs to be disconnected from its connection at
-  this point since the connection still is serving other easy handles.
+  and warn on unrecognized lines
+
+- gen: support 'single' to make an individual page man page
+
+- cmdline-docs: more options converted over
+
+- gen: support 'redirect'
   
-  In our app we can reliably reproduce a crash in our http2 stress test
-  that is fixed by this change. I can't easily reproduce the same test in
-  a small example.
+  ... and warn for too long --help lines
+
+- cmdline/gen: replace options in texts better
+
+Jay Satiro (16 Nov 2016)
+- http2: Fix address sanitizer memcpy warning
   
-  This is the gdb/asan output:
+  - In Curl_http2_switched don't call memcpy when src is NULL.
   
-  ==11785==ERROR: AddressSanitizer: heap-use-after-free on address 0xe9f4fb80 at pc 0x09f41f19 bp 0xf27be688 sp 0xf27be67c
-  READ of size 4 at 0xe9f4fb80 thread T13 (RESOURCE_HTTP)
-      #0 0x9f41f18 in curl_multi_remove_handle /path/to/source/3rdparty/curl/lib/multi.c:666
+  Curl_http2_switched can be called like:
   
-  0xe9f4fb80 is located 0 bytes inside of 1128-byte region [0xe9f4fb80,0xe9f4ffe8)
-  freed by thread T13 (RESOURCE_HTTP) here:
-      #0 0xf7b1b5c2 in __interceptor_free /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_malloc_linux.cc:45
-      #1 0x9f7862d in conn_free /path/to/source/3rdparty/curl/lib/url.c:2808
-      #2 0x9f78c6a in Curl_disconnect /path/to/source/3rdparty/curl/lib/url.c:2876
-      #3 0x9f41b09 in multi_done /path/to/source/3rdparty/curl/lib/multi.c:615
-      #4 0x9f48017 in multi_runsingle /path/to/source/3rdparty/curl/lib/multi.c:1896
-      #5 0x9f490f1 in curl_multi_perform /path/to/source/3rdparty/curl/lib/multi.c:2123
-      #6 0x9c4443c in perform /path/to/source/src/net/resourcemanager/ResourceManagerCurlThread.cpp:854
-      #7 0x9c445e0 in ...
-      #8 0x9c4cf1d in ...
-      #9 0xa2be6b5 in ...
-      #10 0xf7aa5780 in asan_thread_start /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
-      #11 0xf4d3a16d in __clone (/lib/i386-linux-gnu/libc.so.6+0xe716d)
+  Curl_http2_switched(conn, NULL, 0);
   
-  previously allocated by thread T13 (RESOURCE_HTTP) here:
-      #0 0xf7b1ba27 in __interceptor_calloc /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_malloc_linux.cc:70
-      #1 0x9f7dfa6 in allocate_conn /path/to/source/3rdparty/curl/lib/url.c:3904
-      #2 0x9f88ca0 in create_conn /path/to/source/3rdparty/curl/lib/url.c:5797
-      #3 0x9f8c928 in Curl_connect /path/to/source/3rdparty/curl/lib/url.c:6438
-      #4 0x9f45a8c in multi_runsingle /path/to/source/3rdparty/curl/lib/multi.c:1411
-      #5 0x9f490f1 in curl_multi_perform /path/to/source/3rdparty/curl/lib/multi.c:2123
-      #6 0x9c4443c in perform /path/to/source/src/net/resourcemanager/ResourceManagerCurlThread.cpp:854
-      #7 0x9c445e0 in ...
-      #8 0x9c4cf1d in ...
-      #9 0xa2be6b5 in ...
-      #10 0xf7aa5780 in asan_thread_start /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
-      #11 0xf4d3a16d in __clone (/lib/i386-linux-gnu/libc.so.6+0xe716d)
+  .. and prior to this change memcpy was then called like:
   
-  SUMMARY: AddressSanitizer: heap-use-after-free /path/to/source/3rdparty/curl/lib/multi.c:666 in curl_multi_remove_handle
-  Shadow bytes around the buggy address:
-    0x3d3e9f20: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9f30: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9f40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9f50: fd fd fd fd fd fd fd fd fd fd fd fd fd fa fa fa
-    0x3d3e9f60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
-  =>0x3d3e9f70:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9f80: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9f90: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9fa0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9fb0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-    0x3d3e9fc0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
-  Shadow byte legend (one shadow byte represents 8 application bytes):
-    Addressable:           00
-    Partially addressable: 01 02 03 04 05 06 07
-    Heap left redzone:       fa
-    Heap right redzone:      fb
-    Freed heap region:       fd
-    Stack left redzone:      f1
-    Stack mid redzone:       f2
-    Stack right redzone:     f3
-    Stack partial redzone:   f4
-    Stack after return:      f5
-    Stack use after scope:   f8
-    Global redzone:          f9
-    Global init order:       f6
-    Poisoned by user:        f7
-    Container overflow:      fc
-    Array cookie:            ac
-    Intra object redzone:    bb
-    ASan internal:           fe
-    Left alloca redzone:     ca
-    Right alloca redzone:    cb
-  ==11785==ABORTING
+  memcpy(dest, NULL, 0)
   
-  Thread 14 "RESOURCE_HTTP" received signal SIGABRT, Aborted.
-  [Switching to Thread 0xf27bfb40 (LWP 12324)]
-  0xf7fd8be9 in __kernel_vsyscall ()
-   (gdb) bt
-   #0  0xf7fd8be9 in __kernel_vsyscall ()
-   #1  0xf4c7ee89 in __GI_raise (sig=6) at ../sysdeps/unix/sysv/linux/raise.c:54
-   #2  0xf4c803e7 in __GI_abort () at abort.c:89
-   #3  0xf7b2ef2e in __sanitizer::Abort () at /opt/toolchain/src/gcc-6.2.0/libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cc:122
-   #4  0xf7b262fa in __sanitizer::Die () at /opt/toolchain/src/gcc-6.2.0/libsanitizer/sanitizer_common/sanitizer_common.cc:145
-   #5  0xf7b21ab3 in __asan::ScopedInErrorReport::~ScopedInErrorReport (this=0xf27be171, __in_chrg=<optimized out>) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_report.cc:689
-   #6  0xf7b214a5 in __asan::ReportGenericError (pc=166993689, bp=4068206216, sp=4068206204, addr=3925146496, is_write=false, access_size=4, exp=0, fatal=true) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_report.cc:1074
-   #7  0xf7b21fce in __asan::__asan_report_load4 (addr=3925146496) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_rtl.cc:129
-   #8  0x09f41f19 in curl_multi_remove_handle (multi=0xf3406080, data=0xde582400) at /path/to/source3rdparty/curl/lib/multi.c:666
-   #9  0x09f6b277 in Curl_close (data=0xde582400) at /path/to/source3rdparty/curl/lib/url.c:415
-   #10 0x09f3354e in curl_easy_cleanup (data=0xde582400) at /path/to/source3rdparty/curl/lib/easy.c:860
-   #11 0x09c6de3f in ...
-   #12 0x09c378c5 in ...
-   #13 0x09c48133 in ...
-   #14 0x09c4d092 in ...
-   #15 0x0a2be6b6 in ...
-   #16 0xf7aa5781 in asan_thread_start (arg=0xf2d22938) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
-   #17 0xf5de52b5 in start_thread (arg=0xf27bfb40) at pthread_create.c:333
-   #18 0xf4d3a16e in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:114
+  .. causing address sanitizer to warn:
   
-  Fixes #1083
+  http2.c:2057:3: runtime error: null pointer passed as argument 2, which
+  is declared to never be null
 
-- testcurl.1: fix the URL to the autobuild summary
+- tool_help: Clarify --dump-header only writes received headers
 
-- testcurl.1: update URLs
+- curl.1: Clarify --dump-header only writes received headers
 
-- INSTALL: converted to markdown => INSTALL.md
+Daniel Stenberg (15 Nov 2016)
+- [Alex Chan brought this change]
+
+  docs: Spelling fixes
+
+Kamil Dudka (15 Nov 2016)
+- docs: the next release will be 7.52.0
+
+Daniel Stenberg (15 Nov 2016)
+- cmdline-opts: support generating the --help output
+
+- [David Schweikert brought this change]
+
+  darwinssl: fix SSL client certificate not found on MacOS Sierra
   
-  Also heavily edited for content. Removed lots of old cruft that we added
-  like 10+ years ago that is likely incorrect by now.
+  Reviewed-by: Nick Zitzmann
   
-  Also removed INSTALL.devcpp for same reason.
-
-- [Martin Storsjo brought this change]
+  Closes #1105
 
-  configure: Check for other variants of the -m*os*-version-min flags
+- curl: add --fail-early to help output
   
-  In addition to -miphoneos-version-min, the same version can be set
-  using -mios-version-min. And for WatchOS and TvOS, there's
-  -mwatchos-version-min and -mtvos-version-min.
+  Fixes test 1139 failures
+  
+  Follow-up to f82bbe01c8835
 
-- configure: set min version flags for builds on mac
+- glob: fix [a-c] globbing regression
   
-  This helps building binaries that can work on multiple macOS versions.
+  Brought in ee4f76606cf
   
-  Help-by: Martin Storsjö
+  Added test case 1280 to verify
   
-  Fixes #1069
+  Reported-by: Dave Reisner
+  
+  Bug: https://github.com/curl/curl/commit/ee4f76606cfa4ee068bf28edd37c8dae7e8db317#commitcomment-19823146
 
-- curl_multi_add_handle: set timeouts in closure handles
+- curl: add --fail-early
   
-  The closure handle only ever has default timeouts set. To improve the
-  state somewhat we clone the timeouts from each added handle so that the
-  closure handle always has the same timeouts as the most recently added
-  easy handle.
+  Exit with an error on the first transfer error instead of continuing to
+  do the rest of the URLs.
   
-  Fixes #739
+  Discussion: https://curl.haxx.se/mail/archive-2016-11/0038.html
 
-- configure/CURL_CHECK_FUNC_POLL: disable poll completely on mac
+- Curl_rand: fixed and moved to rand.c
   
-  ... so that the same libcurl build easier can run on any version.
+  Now Curl_rand() is made to fail if it cannot get the necessary random
+  level.
   
-  Follow-up to issue #1057
+  Changed the proto of Curl_rand() slightly to provide a number of ints at
+  once.
+  
+  Moved out from vtls, since it isn't a TLS function and vtls provides
+  Curl_ssl_random() for this to use.
+  
+  Discussion: https://curl.haxx.se/mail/lib-2016-11/0119.html
 
-- RELEASE-NOTES: synced with f36f8c14551efc6772
+- cmdline-opts: first test version of a new man page generator kit
+  
+  See MANPAGE.md for the description of how this works. Each command line
+  option is now described in a separate .d file.
 
-- test14xx: fixed --libcurl output tests again after 8e8afa82cbb
-
-- s/cURL/curl
+- time_t fix: follow-up to de4de4e3c7c
   
-  The tool was never called cURL, only the project. But even so, we have
-  more and more over time switched to just use lower case.
-
-- polarssl: indented code, removed unused variables
-
-- polarssl: reduce #ifdef madness with a macro
-
-- polarssl: fix unaligned SSL session-id lock
+  Blah, I accidentally wrote size_t instead of time_t for two variables.
+  
+  Reported-by: Dave Reisner
 
-- Curl_polarsslthreadlock_thread_setup: clear array at init
+- timeval: prefer time_t to hold seconds instead of long
   
-  ... since if it fails to init the entire array and then tries to clean
-  it up, it would attempt to work on an uninitialized pointer.
+  ... as long is still 32bit on modern 64bit windows machines, while
+  time_t is generally 64bit.
 
-- curl: set INTERLEAVEDATA too
+Dan Fandrich (12 Nov 2016)
+- tests: fixed variable might be clobbered warning
   
-  As otherwise the callback could be called with a NULL pointer when RTSP
-  data is provided.
+  This stops the compiler from potentially making invalid assumptions
+  about the immutability of sdp and sap across the longjmp boundary.
 
-- gopher: properly return error for poll failures
+Daniel Stenberg (12 Nov 2016)
+- RELEASE-NOTES: synced with 346340808c
 
-- select: switch to macros in uppercase
+- URL-parser: for file://[host]/ URLs, the [host] must be localhost
   
-  Curl_select_ready() was the former API that was replaced with
-  Curl_select_check() a while back and the former arg setup was provided
-  with a define (in order to leave existing code unmodified).
+  Previously, the [host] part was just ignored which made libcurl accept
+  strange URLs misleading users. like "file://etc/passwd" which might've
+  looked like it refers to "/etc/passwd" but is just "/passwd" since the
+  "etc" is an ignored host name.
   
-  Now we instead offer SOCKET_READABLE and SOCKET_WRITABLE for the most
-  common shortcuts where only one socket is checked. They're also more
-  visibly macros.
+  Reported-by: Mike Crowe
+  Assisted-by: Kamil Dudka
 
-- select: use more proper macro-looking names
-  
-  ... so that it becomes more obvious in the code what is what. Also added
-  a typecast for one of the calculations.
+- test558: adapt to 0649433da
 
-- Curl_socket_check: add extra check to avoid integer overflow
+- openssl: make sure to fail in the unlikely event that PRNG seeding fails
 
-- maketgz: make it support "only" generating version info
+- openssl: avoid unnecessary seeding if already done
   
-  ... to allow you to update the local repository with the given version
-  number data.
+  1.1.0+ does more of this by itself so we can avoid extra processing this
+  way.
 
-Jay Satiro (17 Oct 2016)
-- url: skip to-be-closed connections when pipelining (follow-up)
+- openssl: RAND_status always exists in OpenSSL >= 0.9.7
   
-  - Change back behavior so that pipelining is considered possible for
-  connections that have not yet reached the protocol level.
+  and remove RAND_screen from configure since nothing is using that
+  function
+
+- Curl_pgrsUpdate: use dedicated function for time passed
+
+- realloc: use Curl_saferealloc to avoid common mistakes
   
-  This is a follow-up to e5f0b1a which had changed the behavior of
-  checking if pipelining is possible to ignore connections that had
-  'bits.close' set. Connections that have not yet reached the protocol
-  level also have that bit set, and we need to consider pipelining
-  possible on those connections.
+  Discussed: https://curl.haxx.se/mail/lib-2016-11/0087.html
 
-Daniel Stenberg (17 Oct 2016)
-- HTTP2: mention the tool's limited support
+- [Daniel Hwang brought this change]
 
-- RELEASE-NOTES: synced with a1a5cd04877fd6fd
+  curl: Add --retry-connrefused
+  
+  to consider ECONNREFUSED as a transient error.
+  
+  Closes #1064
 
-- [David Woodhouse brought this change]
+- openssl: raise the max_version to 1.3 if asked for
+  
+  Now I've managed to negotiate TLS 1.3 with https://enabled.tls13.com/ when
+  using boringssl.
 
-  curl: do not set CURLOPT_SSLENGINEDEFAULT automatically
+Jay Satiro (9 Nov 2016)
+- vtls: Fail on unrecognized param for CURLOPT_SSLVERSION
   
-  There were bugs in the PKCS#11 engine, and fixing them triggers bugs in
-  OpenSSL. Just don't get involved; there's no need to be making the
-  engine methods the default anyway.
+  - Fix GnuTLS code for CURL_SSLVERSION_TLSv1_2 that broke when the
+  TLS 1.3 support was added in 6ad3add.
   
-  https://github.com/OpenSC/libp11/pull/108
-  https://github.com/openssl/openssl/pull/1639
+  - Homogenize across code for all backends the error message when TLS 1.3
+  is not available to "<backend>: TLS 1.3 is not yet supported".
   
-  Merges #1042
+  - Return an error when a user-specified ssl version is unrecognized.
+  
+  ---
+  
+  Prior to this change our code for some of the backends used the
+  'default' label in the switch statement (ie ver unrecognized) for
+  ssl.version and treated it the same as CURL_SSLVERSION_DEFAULT.
+  
+  Bug: https://curl.haxx.se/mail/lib-2016-11/0048.html
+  Reported-by: Kamil Dudka
 
-- KNOWN_BUGS: two more existing problems
+Daniel Stenberg (9 Nov 2016)
+- [Isaac Boukris brought this change]
 
-Marcel Raad (16 Oct 2016)
-- win: fix Universal Windows Platform build
-  
-  This fixes a merge error in commit 7f3df80 caused by commit 332e8d6.
+  SPNEGO: Fix memory leak when authentication fails
   
-  Additionally, this changes Curl_verify_windows_version for Windows App
-  builds to assume to always be running on the target Windows version.
-  There seems to be no way to determine the Windows version from a
-  UWP app. Neither GetVersion(Ex), nor VerifyVersionInfo, nor the
-  Version Helper functions are supported.
+  If SPNEGO fails, cleanup the negotiate handle right away.
   
-  Bug: https://github.com/curl/curl/pull/820#issuecomment-250889878
-  Reported-by: Paul Joyce
+  Fixes #1115
   
-  Closes https://github.com/curl/curl/pull/1048
+  Signed-off-by: Isaac Boukris <iboukris@gmail.com>
+  Reported-by: ashman-p
 
-Daniel Stenberg (16 Oct 2016)
-- KNOWN_BUGS: minor formatting edit
+- CODE_STYLE.md: link to INTERNALS.md correctly
 
-Jay Satiro (14 Oct 2016)
-- [Rider Linden brought this change]
+- bump: next version will be 7.52.0
 
-  url: skip to-be-closed connections when pipelining
+- RELEASE-NOTES: synced with dfcdaaba371e9a3
+
+- examples/fileupload.c: fclose the file as well
+
+- printf: fix ".*f" handling
   
-  No longer attempt to use "doomed" to-be-closed connections when
-  pipelining. Prior to this change connections marked for deletion (e.g.
-  timeout) would be erroneously used, resulting in sporadic crashes.
+  It would always use precision 1 instead of reading it from the argument
+  list as intended.
   
-  As originally reported and fixed by Carlo Wood (origin unknown).
+  Reported-by: Ray Satiro
   
-  Bug: https://github.com/curl/curl/issues/627
-  Reported-by: Rider Linden
+  Bug: #1113
+
+- curl_formadd.3: *_FILECONTENT and *_FILE need the file to be kept
   
-  Closes https://github.com/curl/curl/pull/1075
-  Participation-by: nopjmp@users.noreply.github.com
+  Reported-by: Frank Gevaerts
 
-Daniel Stenberg (13 Oct 2016)
-- vtls: only re-use session-ids using the same scheme
+Kamil Dudka (7 Nov 2016)
+- nss: silence warning 'SSL_NEXT_PROTO_EARLY_VALUE not handled in switch'
   
-  To make it harder to do cross-protocol mistakes
+  ... with nss-3.26.0 and newer
+  
+  Reported-by: Daniel Stenberg
 
-Jay Satiro (11 Oct 2016)
-- [Torben Dannhauer brought this change]
+Daniel Stenberg (7 Nov 2016)
+- openssl: initial TLS 1.3 adaptions
+  
+  BoringSSL supports TLSv1.3 already, but these changes don't seem to be anough
+  to get it working.
 
-  dist: add missing cmake modules to the tarball
+- ssh: check md5 fingerprints case insensitively (regression)
   
-  Closes https://github.com/curl/curl/pull/1070
+  Revert the change from ce8d09483eea but use the new function
+  
+  Reported-by: Kamil Dudka
+  Bug: https://github.com/curl/curl/commit/ce8d09483eea2fcb1b50e323e1a8ed1f3613b2e3#commitcomment-19666146
 
-Daniel Stenberg (11 Oct 2016)
-- configure: detect the broken poll() in macOS 10.12
+Kamil Dudka (7 Nov 2016)
+- curl: introduce the --tlsv1.3 option to force TLS 1.3
   
-  Fixes #1057
+  Fully implemented with the NSS backend only for now.
+  
+  Reviewed-by: Ray Satiro
 
-- dist: remove PDF and HTML converted docs from the releases
+- vtls: support TLS 1.3 via CURL_SSLVERSION_TLSv1_3
+  
+  Fully implemented with the NSS backend only for now.
+  
+  Reviewed-by: Ray Satiro
 
-- [Remo E brought this change]
+- nss: map CURL_SSLVERSION_DEFAULT to NSS default
+  
+  ... but make sure we use at least TLSv1.0 according to libcurl API
+  
+  Reported-by: Cure53
+  Reviewed-by: Ray Satiro
 
-  cmake: add nghttp2 support
+Daniel Stenberg (7 Nov 2016)
+- s/cURL/curl
   
-  Closes #922
+  We're mostly saying just "curl" in lower case these days so here's a big
+  cleanup to adapt to this reality. A few instances are left as the
+  project could still formally be considered called cURL.
 
-- [Andreas Streichardt brought this change]
+Jay Satiro (7 Nov 2016)
+- [Tatsuhiro Tsujikawa brought this change]
 
-  resolve: add error message when resolving using SIGALRM
+  http2: Don't send header fields prohibited by HTTP/2 spec
   
-  Closes #1066
+  Previously, we just ignored "Connection" header field.  But HTTP/2
+  specification actually prohibits few more header fields.  This commit
+  ignores all of them so that we don't send these bad header fields.
+  
+  Bug: https://curl.haxx.se/mail/archive-2016-10/0033.html
+  Reported-by: Ricki Hirner
+  
+  Closes https://github.com/curl/curl/pull/1092
 
-- GIT-INFO: remove the Mac 10.1-specific details
+Daniel Stenberg (7 Nov 2016)
+- curl.1: explain the SMTP data expected for -T
   
-  There shouldn't be many devs out there anymore using such outdated macOS
-  versions. And it removes the dead link.
+  Fixes #1107
   
-  Closes #1049
+  Reported-by: Adam Piggott
 
-- RELEASE-NOTES: spellfix
+Peter Wu (6 Nov 2016)
+- cmake: disable poll for macOS
+  
+  Mirrors the autotools behavior introduced with curl-7_50_3-83-ga34c7ce.
+  
+  Fixes #1089
 
-- RELEASE-NOTES: synced with 82720490628cb53a
+Jay Satiro (5 Nov 2016)
+- easy: Initialize info variables on easy init and duphandle
   
-  5 more fixes, 2 more contributors
+  - Call Curl_initinfo on init and duphandle.
+  
+  Prior to this change the statistical and informational variables were
+  simply zeroed by calloc on easy init and duphandle. While zero is the
+  correct default value for almost all info variables, there is one where
+  it isn't (filetime initializes to -1).
+  
+  Bug: https://github.com/curl/curl/issues/1103
+  Reported-by: Neal Poole
 
-- [Tobias Stoeckmann brought this change]
+Daniel Stenberg (5 Nov 2016)
+- [Mauro Rappa brought this change]
 
-  smb: properly check incoming packet boundaries
+  curl -w: added more decimal digits to timing counters
   
-  Not all reply messages were properly checked for their lengths, which
-  made it possible to access uninitialized memory (but this does not lead
-  to out of boundary accesses).
+  Now showing microsecond resolution.
   
-  Closes #1052
+  Closes #1106
 
-- test557: verify printf() with 128 and 129 arguments
+Jakub Zakrzewski (4 Nov 2016)
+- dist: add CMakeLists.txt to the tarball
 
-- mprintf: return error on too many arguments
+Daniel Stenberg (4 Nov 2016)
+- mbedtls: fix build with mbedtls versions < 2.4.0
   
-  128 arguments should be enough for everyone
-
-- ftp: fix Curl_ftpsendf()
+  Regression added in 62a8095e714
   
-  ... it no longer takes printf() arguments since it was only really taken
-  advantage by one user and it was not written and used in a safe
-  way. Thus the 'f' is removed from the function name and the proto is
-  changed.
+  Reported-by: Tony Kelman
   
-  Although the current code wouldn't end up in badness, it was a risk that
-  future changes could end up springf()ing too large data or passing in a
-  format string inadvertently.
+  Discussed in #1087
 
-- formpost: avoid silent snprintf() truncation
+- configure: verify that compiler groks -Werror=partial-availability
   
-  The previous use of snprintf() could make libcurl silently truncate some
-  input data and not report that back on overly large input, which could
-  make data get sent over the network in a bad format.
+  Reported-by: bemoody
   
-  Example:
+  Fixes #1104
+
+- docs: shorten and simplify the top comment in multi-uv.c
   
-   $ curl --form 'a=b' -H "Content-Type: $(perl -e 'print "A"x4100')"
+  and change URL to use https
 
-- TODO: build: Enable PIE and RELRO by default
+- [Andrei Sedoi brought this change]
 
-- TODO: Support better than MD5 hostkey hash (for ssh)
+  docs: handle CURL_POLL_INOUT in multi-uv example
 
-- [Daniel Gustafsson brought this change]
+- [Andrei Sedoi brought this change]
 
-  tests: Fix a small typo in the tests README (#1060)
-  
-  The subdirectory for logs in tests/ is named log/ without an 's'
-  at the end.
+  docs: multi-uv: don't use CURLMsg after cleanup
 
-- TODO: Introduce --fail-fast to exit on first transfer fail
-  
-  See #1054
+- [Andrei Sedoi brought this change]
 
-- TODO: Leave secure cookies alone
+  docs: remove unused variables in multi-uv example
 
-- [Rainer Müller brought this change]
+- bump: start working on 7.51.1
 
-  CURLOPT_DEBUGFUNCTION.3: unused argument warning (#1056)
+- winbuild: remove strcase.obj from curl build
   
-  The 'userp' argument is unused in this example code.
+  Reported-by: Bruce Stephens
+  
+  Fixes #1098
 
-- TODO: TCP Fast Open for windows
+Dan Fandrich (2 Nov 2016)
+- msvc: removed a straggling reference to strequal.c
+  
+  Follow-up to 502acba2
 
-- RELEASE-NOTES: synced with 8fd2a754f0de
+Version 7.51.0 (2 Nov 2016)
 
-- CURLOPT_KEEP_SENDING_ON_ERROR.3: mention when it is added
+Daniel Stenberg (2 Nov 2016)
+- THANKS: synced with 7.51.0
 
-- memdup: use 'void *' as return and source type
+- RELEASE-NOTES: 7.51.0
 
-- TODO: Add easy argument to formpost functions
+- ftp_done: don't clobber the passed in error code
+  
+  Coverity CID 1374359 pointed out the unused result value.
 
-- formpost: trying to attach a directory no longer crashes
+- ftp: remove dead code in ftp_done
   
-  The error path would previously add a freed entry to the linked list.
+  Coverity CID 1374358
+
+Jay Satiro (1 Nov 2016)
+- generate.bat: Include include/curl in libcurl VS projects
   
-  Reported-by: Toby Peterson
+  .. because including those headers helps Visual Studio's Intellisense.
+
+- generate.bat: Remove strcase.[ch] from curl tool VS projects
   
-  Fixes #1053
+  ..because they're no longer needed in the tool build. strcase is still
+  built by the libcurl project and exports curl_str(n)equal which is used
+  by the curl tool.
+  
+  Bug: https://github.com/curl/curl/commit/9363f1a#all_commit_comments
 
-- [Sergei Kuzmin brought this change]
+Daniel Stenberg (2 Nov 2016)
+- metalink: simplify the hex parsing function
+  
+  ... and now it avoids using the libcurl toupper() function
 
-  cookies: same domain handling changed to match browser behavior
+Michael Kaufmann (1 Nov 2016)
+- file: fix compiler warning
   
-  Cokie with the same domain but different tailmatching property are now
-  considered different and do not replace each other.  If header contains
-  following lines then two cookies will be set: Set-Cookie: foo=bar;
-  domain=.foo.com; expires=Thu Mar 3 GMT 8:56:27 2033 Set-Cookie: foo=baz;
-  domain=foo.com; expires=Thu Mar 3 GMT 8:56:27 2033
+  follow-up to 46133aa5
+
+Dan Fandrich (1 Nov 2016)
+- strcase: fixed Metalink builds by redefining checkprefix()
   
-  This matches Chrome, Opera, Safari, and Firefox behavior. When sending
-  stored tokens to foo.com Chrome, Opera, Firefox store send them in the
-  stored order, while Safari pre-sort the cookies.
+  ...to use the public function curl_strnequal(). This isn't ideal because
+  it adds extra overhead to any internal calls to checkprefix.
   
-  Closes #1050
+  follow-up to 95bd2b3e
 
-- [Stephen Brokenshire brought this change]
+Daniel Stenberg (1 Nov 2016)
+- curl.1: typo
 
-  FAQ: Fix typos in section 5.14 (#1047)
+- curl.1: expand on how multiple uses of -o looks
   
-  Type required for YourClass::func C++ function (using size_t in line
-  with the documentation for CURLOPT_WRITEFUNCTION) and missing second
-  colon when specifying the static function for CURLOPT_WRITEFUNCTION.
+  Suggested-by: Dan Jacobson
+  Issue: https://github.com/curl/curl/issues/1097
 
-- [Sebastian Mundry brought this change]
+- tests/util: get a private strncasecompare clone
+  
+  ... since the curlx_* code no longer provides one and we don't link
+  libcurl to these test servers.
 
-  KNOWN_BUGS: Fix typos in section 5.8.
+- strcase: make the tool use curl_str[n]equal instead
   
-  Closes #1046
+  As they are after all part of the public API. Saves space and reduces
+  complexity. Remove the strcase defines from the curlx_ family.
+  
+  Suggested-by: Dan Fandrich
+  Idea: https://curl.haxx.se/mail/lib-2016-10/0136.html
 
-- [mundry brought this change]
-
-  CONTRIBUTE.md: Fix typo in 'About pull requests' section. (#1045)
-
-- curl.1: --trace supports % for sending to stderr!
-
-- KNOWN_BUGS: 5.8 configure finding libs in wrong directory
+Kamil Dudka (31 Oct 2016)
+- gskit, nss: do not include strequal.h
+  
+  follow-up to 811a693b80
 
-Dan Fandrich (24 Sep 2016)
-- configure: Fixed builds with libssh2 in a custom location
+Dan Fandrich (31 Oct 2016)
+- strcasecompare: include curl.h in strcase.c
   
-  A libssh2 library in the standard system location was being used in
-  preference to the desired one while linking.
+  This should fix the "warning: 'curl_strequal' redeclared without
+  dllimport attribute: previous dllimport ignored" message and subsequent
+  link error on Windows because of the missing CURL_EXTERN on the
+  prototype.
 
-Daniel Stenberg (23 Sep 2016)
-- SECURITY: remove the top ascii logo
+Daniel Stenberg (31 Oct 2016)
+- strcase: fix the remaining rawstr users
 
-Michael Kaufmann (22 Sep 2016)
-- New libcurl option to keep sending on error
+- msvc builds: s/rawstr/strcase
   
-  Add the new option CURLOPT_KEEP_SENDING_ON_ERROR to control whether
-  sending the request body shall be completed when the server responds
-  early with an error status code.
+  Follow-up to 811a693b
+
+Dan Fandrich (31 Oct 2016)
+- strcasecompare: replaced remaining rawstr.h with strcase.h
   
-  This is suitable for manual NTLM authentication.
+  This is a followup to commit 811a693b
+
+Marcel Raad (31 Oct 2016)
+- digest_sspi: fix include
   
-  Reviewed-by: Jay Satiro
+  Fix compile break from 811a693b80
+
+Dan Fandrich (31 Oct 2016)
+- libauthretry: use the external function curl_strequal
   
-  Closes https://github.com/curl/curl/pull/904
+  The internal version strcasecompare isn't available outside libcurl
 
-Kamil Dudka (22 Sep 2016)
-- nss: add chacha20-poly1305 cipher suites if supported by NSS
+Daniel Stenberg (31 Oct 2016)
+- RELEASE-NOTES: synced with d14538d2501ef0da
 
-- nss: add cipher suites using SHA384 if supported by NSS
+- configure: raise the default minimum version for macos to 10.8
+  
+  follow-up to 4f8d0b6f02aa7043. Since the darwinssl code breaks
+  otherwise. If you build without darwinssl 10.5 works fine.
 
-- nss: fix typo in ecdhe_rsa_null cipher suite string
+- unit1301: keep testing curl_strequal
   
-  As it seems to be a rarely used cipher suite (for securely established
-  but _unencrypted_ connections), I believe it is fine not to provide an
-  alias for the misspelled variant.
+  as that is still part of the API, fix from 8fe4bd084412f30
 
-Jay Satiro (21 Sep 2016)
-- docs: Remove that --proto is just used for initial retrieval
+- ldap: fix include
   
-  .. and add that --proto-redir and CURLOPT_REDIR_PROTOCOLS do not
-  override protocols denied by --proto and CURLOPT_PROTOCOLS.
+  Fix bug from 811a693b80
+
+- url: remove unconditional idn2.h include
   
-  - Add a test to enforce: --proto deny must override --proto-redir allow
+  Mistake brought by 9c91ec778104a
+
+- curl_strequal: part of public API/ABI, needs to be kept
   
-  Closes https://github.com/curl/curl/pull/1031
+  These two public functions have been mentioned as deprecated since a
+  very long time but since they are still part of the API and ABI we need
+  to keep them around.
 
-Daniel Stenberg (21 Sep 2016)
-- dist: add CurlSymbolHiding.cmake to the tarball
+- strcase: s/strequal/strcasecompare
   
-  Follow-up to 6140dfcf3e784
+  some more follow-ups to 811a693b80
+
+- ldap: fix strcase use
   
-  Reported-by: Alexander Sinditskiy
+  follow-up to 811a693b80
 
-- curl_global_cleanup.3: don't unload the lib with sub threads running
+- test165: adapted to the libidn2 use and IDNA2008 fix
+
+- cookie: replace use of fgets() with custom version
   
-  Discussed in #997
+  ... that will ignore lines that are too long to fit in the buffer.
   
-  Assisted-by: Jay Satiro
+  CVE-2016-8615
+  
+  Bug: https://curl.haxx.se/docs/adv_20161102A.html
+  Reported-by: Cure53
 
-- MAIL-ETIQUETTE: language
+- strcasecompare: all case insensitive string compares ignore locale now
+  
+  We had some confusions on when each function was used. We should not act
+  differently on different locales anyway.
 
-Jay Satiro (20 Sep 2016)
-- easy: Reset all statistical session info in curl_easy_reset
+- strcasecompare: is the new name for strequal()
   
-  Bug: https://github.com/curl/curl/issues/1017
-  Reported-by: Jeroen Ooms
+  ... to make it less likely that we forget that the function actually
+  does case insentive compares. Also replaced several invokes of the
+  function with a plain strcmp when case sensitivity is not an issue (like
+  comparing with "-").
 
-Daniel Stenberg (19 Sep 2016)
-- RELEASE-NOTES: synced with 79607eec51055
+- ftp: check for previous patch must be case sensitive!
+  
+  ... otherwise example.com/PATH and example.com/path would be assumed to
+  be the same and they usually aren't!
 
-Jay Satiro (19 Sep 2016)
-- [Daniel Gustafsson brought this change]
+- SSH: check md5 fingerprint case sensitively
 
-  darwinssl: Fix typo in comment
+- connectionexists: use case sensitive user/password comparisons
   
-  Closes https://github.com/curl/curl/pull/1028
+  CVE-2016-8616
+  
+  Bug: https://curl.haxx.se/docs/adv_20161102B.html
+  Reported-by: Cure53
 
-Daniel Stenberg (19 Sep 2016)
-- [Bernard Spil brought this change]
+- base64: check for integer overflow on large input
+  
+  CVE-2016-8617
+  
+  Bug: https://curl.haxx.se/docs/adv_20161102C.html
+  Reported-by: Cure53
 
-  libressl: fix version output
+- krb5: avoid realloc(0)
   
-  LibreSSL defines `OPENSSL_VERSION_NUMBER` as `0x20000000L` for all
-  versions returning `LibreSSL/2.0.0` for any LibreSSL version.
+  If the requested size is zero, bail out with error instead of doing a
+  realloc() that would cause a double-free: realloc(0) acts as a free()
+  and then there's a second free in the cleanup path.
   
-  This change provides a local OpenSSL_version_num function replacement
-  returning LIBRESSL_VERSION_NUMBER instead.
+  CVE-2016-8619
   
-  Closes #1029
-
-- [rugk brought this change]
+  Bug: https://curl.haxx.se/docs/adv_20161102E.html
+  Reported-by: Cure53
 
-  TODO: Add PINNEDPUBLICKEY - HPKP compatibility, HSTS & HPKP
+- aprintf: detect wrap-around when growing allocation
   
-  Closes #1025
-  Closes #1026
-  Closes #1027
-
-- openssl: don't call ERR_remote_thread_state on >= 1.1.0
+  On 32bit systems we could otherwise wrap around after 2GB and allocate 0
+  bytes and crash.
   
-  Follow-up fix to d9321562
-
-- openssl: don’t call CRYTPO_cleanup_all_ex_data
+  CVE-2016-8618
   
-  The OpenSSL function CRYTPO_cleanup_all_ex_data() cannot be called
-  multiple times without crashing - and other libs might call it! We
-  basically cannot call it without risking a crash. The function is a
-  no-op since OpenSSL 1.1.0.
+  Bug: https://curl.haxx.se/docs/adv_20161102D.html
+  Reported-by: Cure53
+
+- range: reject char globs with missing end like '[L-]'
   
-  Not calling this function only risks a small memory leak with OpenSSL <
-  1.1.0.
+  ... which previously would lead to out of boundary reads.
   
-  Bug: https://curl.haxx.se/mail/lib-2016-09/0045.html
-  Reported-by: Todd Short
+  Reported-by: Luật Nguyễn
 
-- TODO: Support SSLKEYLOGFILE
+- glob_next_url: make sure to stay within the given output buffer
 
-Jay Satiro (18 Sep 2016)
-- CURLOPT_PINNEDPUBLICKEY.3: fix the AVAILABILITY formatting
+- range: prevent negative end number in a glob range
+  
+  CVE-2016-8620
+  
+  Bug: https://curl.haxx.se/docs/adv_20161102F.html
+  Reported-by: Luật Nguyễn
 
-Nick Zitzmann (18 Sep 2016)
-- darwinssl: disable RC4 cipher-suite support
+- parsedate: handle cut off numbers better
   
-  RC4 was a nice alternative to CBC back in the days of BEAST, but it's insecure and obsolete now.
+  ... and don't read outside of the given buffer!
+  
+  CVE-2016-8621
+  
+  bug: https://curl.haxx.se/docs/adv_20161102G.html
+  Reported-by: Luật Nguyễn
 
-- configure: change "iOS/Mac OS X native" to "Apple OS native"
+- escape: avoid using curl_easy_unescape() internally
   
-  Since I first wrote that text, Apple introduced tvOS and watchOS, and renamed "Mac OS X" to "macOS." Let's make the text a little more inclusive, since curl can be built for all four operating systems.
+  Since the internal Curl_urldecode() function has a better API.
 
-Jay Satiro (18 Sep 2016)
-- test2048: fix url
+- unescape: avoid integer overflow
+  
+  CVE-2016-8622
+  
+  Bug: https://curl.haxx.se/docs/adv_20161102H.html
+  Reported-by: Cure53
 
-- examples/imap-append: Set size of data to be uploaded
+- cookies: getlist() now holds deep copies of all cookies
   
-  Prior to this commit this example failed with error
-  'Cannot APPEND with unknown input file size'.
+  Previously it only held references to them, which was reckless as the
+  thread lock was released so the cookies could get modified by other
+  handles that share the same cookie jar over the share interface.
   
-  Bug: https://github.com/curl/curl/issues/1008
-  Reported-by: lukaszgn@users.noreply.github.com
+  CVE-2016-8623
   
-  Closes https://github.com/curl/curl/pull/1011
+  Bug: https://curl.haxx.se/docs/adv_20161102I.html
+  Reported-by: Cure53
 
-Daniel Stenberg (16 Sep 2016)
-- [Tony Kelman brought this change]
+- TODO: remove IDNA2008
 
-  LICENSE-MIXING.md: update with mbedTLS dual licensing
+- idn: switch to libidn2 use and IDNA2008 support
   
-  Recent versions of mbedTLS are available under either Apache 2.0 or GPL
-  2.0, see https://tls.mbed.org/how-to-get
+  CVE-2016-8625
   
-  Closes #1019
-
-- KNOWN_BUGS: chunked-encoded requests with HTTP/2 is fixed
+  Bug: https://curl.haxx.se/docs/adv_20161102K.html
+  Reported-by: Christian Heimes
 
-- http2: debug ouput sent HTTP/2 request headers
+- test1246: verify URL parsing with host name ending with '#'
 
-- http: accept "Transfer-Encoding: chunked" for HTTP/2 as well
+- urlparse: accept '#' as end of host name
   
-  ... but don't send the actual header over the wire as it isn't accepted.
-  Chunked uploading is still triggered using this method.
+  'http://example.com#@127.0.0.1/x.txt' equals a request to example.com
+  for the '/' document with the rest of the URL being a fragment.
   
-  Fixes #1013
-  Fixes #662
+  CVE-2016-8624
+  
+  Bug: https://curl.haxx.se/docs/adv_20161102J.html
+  Reported-by: Fernando Muñoz
 
-- openssl: fix per-thread memory leak usiong 1.0.1 or 1.0.2
+Jay Satiro (31 Oct 2016)
+- INTERNALS: better markdown (follow-up)
   
-  OpenSSL 1.0.1 and 1.0.2 build an error queue that is stored per-thread
-  so we need to clean it when easy handles are freed, in case the thread
-  will be killed in which the easy handle was used. All OpenSSL code in
-  libcurl should extract the error in association with the error already
-  so clearing this queue here should be harmless at worst.
+  - Wrap more words with underscores in backticks.
   
-  Fixes #964
-
-- RELEASE-NOTES: reset and go toward 7.51.0 (again)
-
-Version 7.50.3 (14 Sep 2016)
-
-Daniel Stenberg (14 Sep 2016)
-- THANKS: updated with curl 7.50.3 contributors
-
-- RELEASE-NOTES: curl 7.50.3
-
-- test1605: verify negative input lengths to (un)escape functions
+  Follow-up to 13f4913.
 
-- curl_easy_unescape: deny negative string lengths as input
+Daniel Stenberg (30 Oct 2016)
+- INTERNALS: better markdown
   
-  CVE-2016-7167
+  words with underscore need to be within `these`
   
-  Bug: https://curl.haxx.se/docs/adv_20160914.html
+  Bug: https://github.com/curl/curl-www/issues/19
+  Reported-by : Jay Satiro
 
-- curl_easy_escape: deny negative string lengths as input
+Jay Satiro (30 Oct 2016)
+- mk-ca-bundle.vbs: Fix UTF-8 output
   
-  CVE-2016-7167
+  - Change initial message box to mention delay when downloading/parsing.
   
-  Bug: https://curl.haxx.se/docs/adv_20160914.html
-
-- curl: make --create-dirs on windows grok both forward and backward slashes
+  Since there is no progress meter it was somewhat unexpected that after
+  choosing a filename nothing appears to happen, when actually the cert
+  data is in the process of being downloaded and parsed.
   
-  Reported-by: Ryan Scott
+  - Warn if OpenSSL is not present.
   
-  Fixes #1007
-
-- RELEASE-NOTES: synced with 665694979b6
-
-- [Tony Kelman brought this change]
-
-  mbedtls: switch off NTLM in build if md4 isn't available
+  - Use a UTF-8 stream to make the ca-bundle data.
   
-  NTLM support with mbedTLS was added in 497e7c9 but requires that mbedTLS
-  is built with the MD4 functions available, which it isn't in default
-  builds. This now adapts if the funtion isn't there and builds libcurl
-  without NTLM support if so.
+  - Save the UTF-8 ca-bundle stream as binary so that no BOM is added.
   
-  Fixes #1004
-
-Jay Satiro (12 Sep 2016)
-- CODE_STYLE: fix long-line guideline
+  ---
   
-  - Change maximum allowed line length from 80 to 79.
+  This is a follow-up to d2c6d15 which switched mk-ca-bundle.vbs output to
+  ANSI due to corrupt UTF-8 output, now fixed.
+  
+  This change completes making the default certificate bundle output of
+  mk-ca-bundle.vbs as close as possible to that of mk-ca-bundle.pl, which
+  should make it easier to review any difference between their output.
+  
+  Ref: https://github.com/curl/curl/pull/1012
 
-- CODE_STYLE: add column alignment section
+Daniel Stenberg (28 Oct 2016)
+- BINDINGS: converted to markdown
   
-  Note that since the added examples are for column alignment I had to
-  encapsulate with ~~~c markdown to preserve their alignment.
+  To make it render better on the web site, at the price of it becoming
+  slightly less readable as text.
 
-Peter Wu (11 Sep 2016)
-- cmake: fix curl-config --static-libs
+Jay Satiro (27 Oct 2016)
+- CURLMOPT_MAX_PIPELINE_LENGTH.3: Clarify it's not for HTTP/2
   
-  The `curl-config --static-libs` command should not output paths like
-  -l/usr/lib/libssl.so, instead print the absolute path without `-l`.
+  - Clarify that this option is only for HTTP/1.1 pipelining.
   
-  This also removes the confusing message "Static linking is broken" which
-  was printed because curl-config --static-libs was disfunctional even
-  though the static libcurl.a library works properly.
+  Bug: https://github.com/curl/curl/issues/1059
+  Reported-by: Jeroen Ooms
   
-  Fixes https://github.com/curl/curl/issues/841
+  Assisted-by: Daniel Stenberg
 
-Daniel Stenberg (11 Sep 2016)
-- http: refuse to pass on response body with NO_NODY was set
+Daniel Stenberg (27 Oct 2016)
+- KNOWN_BUGS: HTTP/2 server push enabled when no pushes can be accepted
   
-  ... like when a HTTP/0.9 response comes back without any headers at all
-  and just a body this now prevents that body from being sent to the
-  callback etc.
+  Closes #927
+
+- KNOWN_BUGS: c-ares deviates from stock resolver on http://1346569778
   
-  Adapted test 1144 to verify.
+  Closes #893
+
+Michael Osipov (27 Oct 2016)
+- configure.in: Fix test syntax
   
-  Fixes #973
+  Some versions of test allow == for equality, but others (such as the HP-UX
+  version) do not.  Use a single = for correctness.
   
-  Assisted-by: Ray Satiro
-
-- RELEASE-NOTES: synced with 257bf3ac67eb6
+  Error output:
+  checking for monotonic clock_gettime... ./configure[20445]: ==: A test command parameter is not valid.
 
-Jakub Zakrzewski (10 Sep 2016)
-- CMake: Don't build unit tests if private symbols are hidden
+Daniel Stenberg (27 Oct 2016)
+- SECURITY: minor updates
   
-  This only excludes building unit tests from default build ( 'all' Make
-  target or "Build Solution" in VisualStudio). The projects and Make
-  targets will still be generated and shown in supporting IDEs.
+  - we allow the security push up to 48 hours before the release
   
-  Fixes https://github.com/curl/curl/issues/981
-  Reported-by: Randy Armstrong
+  - add a mention about possible pre-notifications
   
-  Closes https://github.com/curl/curl/pull/990
+  - lower case the 'curl-security' title
 
-- CMake: Try to (un-)hide private library symbols
+- [Andrei Sedoi brought this change]
+
+  docs: fix req->data in multi-uv example
   
-  Detect support for compiler symbol visibility flags and apply those
-  according to CURL_HIDDEN_SYMBOLS option.
-  It should work true to the autotools build except it tries to unhide
-  symbols on Windows when requested and prints warning if it fails.
+  Closes #1088
+
+- mbedtls: stop using deprecated include file
   
-  Ref: https://github.com/curl/curl/issues/981#issuecomment-242665951
-  Reported-by: Daniel Stenberg
+  Reported-by: wyattoday
+  Fixes #1087
 
-Daniel Stenberg (9 Sep 2016)
-- openssl: fix bad memory free (regression)
+Kamil Dudka (25 Oct 2016)
+- [Martin Frodl brought this change]
+
+  nss: fix tight loop in non-blocking TLS handhsake over proxy
   
-  ... by partially reverting f975f06033b1. The allocation could be made by
-  OpenSSL so the free must be made with OPENSSL_free() to avoid problems.
+  ... in case the handshake completes before entering
+  CURLM_STATE_PROTOCONNECT
   
-  Reported-by: Harold Stuart
-  Fixes #1005
+  Bug: https://bugzilla.redhat.com/1388162
 
-- http2: support > 64bit sized uploads
+Jay Satiro (25 Oct 2016)
+- mk-ca-bundle: Update the vbscript version
   
-  ... by making sure we don't count down the "upload left" counter when the
-  uploaded size is unknown and then it can be allowed to continue forever.
+  Bring the VBScript version more in line with the perl version:
   
-  Fixes #996
-
-Jay Satiro (7 Sep 2016)
-- errors: new alias CURLE_WEIRD_SERVER_REPLY (8)
+  - Change timestamp to UTC.
   
-  Since we're using CURLE_FTP_WEIRD_SERVER_REPLY in imap, pop3 and smtp as
-  more of a generic "failed to parse" introduce an alias without FTP in
-  the name.
+  - Change URL retrieval to HTTPS-only by default.
   
-  Closes https://github.com/curl/curl/pull/975
-
-Daniel Stenberg (7 Sep 2016)
-- bump: toward 7.51.0
+  - Comment out the options that disabled SSL cert checking by default.
+  
+  - Assume OpenSSL is present, get SHA256. And add a flag to toggle it.
+  
+  - Fix cert issuer name output.
+  
+  The cert issuer output is now ansi, converted from UTF-8. Prior to this
+  it was corrupt UTF-8. It turns out though we can work with UTF-8 the
+  FSO object that writes ca-bundle can't write UTF-8, so there will have
+  to be some alternative if UTF-8 is needed (like an ADODB.Stream).
+  
+  - Disable the certificate text info feature.
+  
+  The certificate text info doesn't work properly with any recent OpenSSL.
 
-- HISTORY: remove ascii logo to render nicer on web
+Daniel Stenberg (24 Oct 2016)
+- TODO: indent code to make it render properly
 
-- curl: whitelist use of strtok() in non-threaded context
+- TODO: Remove the generated include file
 
-- checksrc: detect strtok() use
+- TODO: add "--retry should resume"
   
-  ... as that function slipped through once before.
-
-GitHub (7 Sep 2016)
-- [Viktor Szakats brought this change]
+  See #1084
 
-  mk-ca-bundle.pl: use SHA256 instead of SHA1
+- mk-ca-bundle.1: document -k
   
-  This hash is used to verify the original downloaded certificate bundle
-  and also included in the generated bundle's comment header. Also
-  rename related internal symbols to algorithm-agnostic names.
-
-Version 7.50.2 (7 Sep 2016)
-
-Daniel Stenberg (7 Sep 2016)
-- RELEASE-NOTES: curl 7.50.2 release
-
-- THANKS: updated for 7.50.2
+  Brought in 1ad2bdcf110266c. Now does HTTPS by default and needs -k to
+  fall back to plain HTTP.
 
-Jay Satiro (6 Sep 2016)
-- [Gaurav Malhotra brought this change]
+- [Jay Satiro brought this change]
 
-  openssl: fix CURLINFO_SSL_VERIFYRESULT
+  mk-ca-bundle: Change URL retrieval to HTTPS-only by default
   
-  CURLINFO_SSL_VERIFYRESULT does not get the certificate verification
-  result when SSL_connect fails because of a certificate verification
-  error.
+  - Change all predefined Mozilla URLs to HTTPS (Gregory Szorc).
   
-  This fix saves the result of SSL_get_verify_result so that it is
-  returned by CURLINFO_SSL_VERIFYRESULT.
+  - New option -k to allow URLs other than HTTPS and enable HTTP fallback.
   
-  Closes https://github.com/curl/curl/pull/995
-
-Daniel Stenberg (6 Sep 2016)
-- [Daniel Gustafsson brought this change]
-
-  darwinssl: test for errSecSuccess in PKCS12 import rather than noErr (#993)
+  Prior to this change the default URL retrieval mode was to fall back to
+  HTTP if HTTPS didn't work.
   
-  While noErr and errSecSuccess are defined as the same value, the API
-  documentation states that SecPKCS12Import() returns errSecSuccess if
-  there were no errors in importing. Ensure that a future change of the
-  defined value doesn't break (however unlikely) and be consistent with
-  the API docs.
-
-- [Daniel Gustafsson brought this change]
+  Reported-by: Gregory Szorc
+  
+  Closes #1012
 
-  docs: Fix link to CONTRIBUTE in Github contribution guidelines (#994)
+- RELEASE-NOTES: synced with 50ee3aaf1a9b22d
 
-- [Marcel Raad brought this change]
+Dan Fandrich (23 Oct 2016)
+- INSTALL.md: Updated minimum file sizes for 7.50.3
 
-  openssl: Fix compilation with OPENSSL_API_COMPAT=0x10100000L
+Daniel Stenberg (22 Oct 2016)
+- multi: force connections to get closed in close_all_connections
   
-  With OPENSSL_API_COMPAT=0x10100000L (OpenSSL 1.1 API), the cleanup
-  functions are unavailable (they're no-ops anyway in OpenSSL 1.1). The
-  replacements for SSL_load_error_strings, SSLeay_add_ssl_algorithms, and
-  OpenSSL_add_all_algorithms are called automatically [1][2]. SSLeay() is
-  now called OpenSSL_version_num().
+  Several independent reports on infinite loops hanging in the
+  close_all_connections() function when closing a multi handle, can be
+  fixed by first marking the connection to get closed before calling
+  Curl_disconnect.
   
-  [1]: https://www.openssl.org/docs/man1.1.0/ssl/OPENSSL_init_ssl.html
-  [2]: https://www.openssl.org/docs/man1.1.0/crypto/OPENSSL_init_crypto.html
-  
-  Closes #992
-
-- RELEASE-NOTES: synced with 3d4c0c8b9bc1d
-
-- http2: return EOF when done uploading without known size
-  
-  Fixes #982
-
-- http2: skip the content-length parsing, detect unknown size
-
-- http2: minor white space edit
-
-- http2: use named define instead of magic constant in read callback
-
-- [Craig Davison brought this change]
-
-  configure: make the cpp -P detection not clobber CPPFLAGS
-  
-  CPPPFLAGS is now CPPPFLAG. Fixes CURL_CHECK_DEF.
-  
-  Fixes #958
-
-- [Olivier Brunel brought this change]
-
-  speed caps: not based on average speeds anymore
-  
-  Speed limits (from CURLOPT_MAX_RECV_SPEED_LARGE &
-  CURLOPT_MAX_SEND_SPEED_LARGE) were applied simply by comparing limits
-  with the cumulative average speed of the entire transfer; While this
-  might work at times with good/constant connections, in other cases it
-  can result to the limits simply being "ignored" for more than "short
-  bursts" (as told in man page).
-  
-  Consider a download that goes on much slower than the limit for some
-  time (because bandwidth is used elsewhere, server is slow, whatever the
-  reason), then once things get better, curl would simply ignore the limit
-  up until the average speed (since the beginning of the transfer) reached
-  the limit.  This could prove the limit useless to effectively avoid
-  using the entire bandwidth (at least for quite some time).
-  
-  So instead, we now use a "moving starting point" as reference, and every
-  time at least as much as the limit as been transferred, we can reset
-  this starting point to the current position. This gets a good limiting
-  effect that applies to the "current speed" with instant reactivity (in
-  case of sudden speed burst).
-  
-  Closes #971
-
-- HISTORY.md: the multi socket was put in the wrong year!
-
-- [Mark Hamilton brought this change]
-
-  tool_helpers.c: fix comment typo (#989)
-
-- [Mark Hamilton brought this change]
-
-  libtest/test.h: fix typo (#988)
-
-- CURLMOPT_PIPELINING.3: language
-
-- CURLMOPT_PIPELINING.3: extended and clarified
-  
-  Especially in regards to the multiplexing part.
-
-Steve Holme (31 Aug 2016)
-- curl_sspi.c: Updated function description comments
-  
-  * Added description to Curl_sspi_free_identity()
-  * Added parameter and return explanations to Curl_sspi_global_init()
-  * Added parameter explaination to Curl_sspi_global_cleanup()
-
-- README: Corrected the supported Visual Studio versions
-  
-  Missed from commit 8356022d17.
-
-- KNOWN_BUGS: Move the Visual Studio project shortcomings from local README
-
-- KNOWN_BUGS: Expand 6.4 to include Kerberos V5
-  
-  ...and discuss a possible solution.
-
-Daniel Stenberg (30 Aug 2016)
-- connect: fix #ifdefs for debug versions of conn/streamclose() macros
-  
-  CURLDEBUG is for the memory debugging
-  
-  DEBUGBUILD is for the extra debug stuff
-  
-  Pointed-out-by: Steve Holme
-
-- KNOWN_BUGS: mention some cmake "support gaps"
-
-Nick Zitzmann (28 Aug 2016)
-- darwinssl: add documentation stating that the --cainfo option is intended for backward compatibility only
-  
-  In other news, I changed one other reference to "Mac OS X" in the documentation (that I previously wrote) to say "macOS" instead.
-
-Daniel Stenberg (28 Aug 2016)
-- http2: return CURLE_HTTP2_STREAM for unexpected stream close
-  
-  Follow-up to c3e906e9cd0f, seems like a more appropriate error code
-  
-  Suggested-by: Jay Satiro
-
-- [Tatsuhiro Tsujikawa brought this change]
-
-  http2: handle closed streams when uploading
-  
-  Fixes #986
-
-- http2: make sure stream errors don't needlessly close the connection
-  
-  With HTTP/2 each transfer is made in an indivial logical stream over the
-  connection, making most previous errors that caused the connection to get
-  forced-closed now instead just kill the stream and not the connection.
-  
-  Fixes #941
-
-- Curl_verify_windows_version: minor edit to avoid compiler warnings
-  
-  ... instead of if() before the switch(), add a default to the switch so
-  that the compilers don't warn on "warning: enumeration value
-  'PLATFORM_DONT_CARE' not handled in switch" anymore.
-
-Steve Holme (27 Aug 2016)
-- RELEASE-NOTES: Added missing fix from commit 15592143f
-
-Jay Satiro (26 Aug 2016)
-- schannel: Disable ALPN for Wine since it is causing problems
-  
-  - Disable ALPN on Wine.
-  
-  - Don't pass input secbuffer when ALPN is disabled.
-  
-  When ALPN support was added a change was made to pass an input secbuffer
-  to initialize the context. When ALPN is enabled the buffer contains the
-  ALPN information, and when it's disabled the buffer is empty. In either
-  case this input buffer caused problems with Wine and connections would
-  not complete.
-  
-  Bug: https://github.com/curl/curl/issues/983
-  Reported-by: Christian Fillion
-
-Kamil Dudka (26 Aug 2016)
-- [Peter Wang brought this change]
-
-  nss: work around race condition in PK11_FindSlotByName()
-  
-  Serialise the call to PK11_FindSlotByName() to avoid spurious errors in
-  a multi-threaded environment. The underlying cause is a race condition
-  in nssSlot_IsTokenPresent().
-  
-  Bug: https://bugzilla.mozilla.org/1297397
-  
-  Closes #985
-
-- nss: refuse previously loaded certificate from file
-  
-  ... when we are not asked to use a certificate from file
-
-Daniel Stenberg (26 Aug 2016)
-- ftp_done: remove dead code
-
-- TLS: random file/egd doesn't have to match for conn reuse
-
-- test161: add comment for the exit code
-
-Dan Fandrich (26 Aug 2016)
-- test219: Add http as a required feature
-
-Daniel Stenberg (25 Aug 2016)
-- [Michael Kaufmann brought this change]
-
-  HTTP: stop parsing headers when switching to unknown protocols
-  
-  - unknown protocols probably won't send more headers (e.g. WebSocket)
-  - improved comments and moved them to the correct case statements
-  
-  Closes #899
-
-- openssl: make build with 1.1.0 again
-  
-  synced with OpenSSL git master commit cc06906707
-
-- INTERNALS: fix title
-
-- configure: detect zlib with our pkg-config macros
-  
-  ... instead of relying on the pkg-config autoconf macros to be present.
-  
-  Fixes #972 (again...)
-
-Jay Satiro (25 Aug 2016)
-- http2: Remove incorrect comments
-  
-  .. also remove same from scp
-
-Daniel Stenberg (23 Aug 2016)
-- [Ales Novak brought this change]
-
-  ftp: fix wrong poll on the secondary socket
-  
-  When we're uploading using FTP and the server issues a tiny pause
-  between opening the connection to the client's secondary socket, the
-  client's initial poll() times out, which leads to second poll() which
-  does not wait for POLLIN on the secondary socket. So that poll() also
-  has to time out, creating a long (200ms) pause.
-  
-  This patch adds the correct flag to the secondary socket, making the
-  second poll() correctly wait for the connection there too.
-  
-  Signed-off-by: Ales Novak <alnovak@suse.cz>
-  
-  Closes #978
-
-- RELEASE-NOTES: synced with 95ded2c56
-
-- configure: make it work without PKG_CHECK_MODULES
-  
-  With commit c2f9b78 we added a new dependency on pkg-config for
-  developers which may be unwanted. This change make the configure script
-  still work as before if pkg-config isn't installed, it'll just use the
-  old zlib detection logic without pkg-config.
-  
-  Reported-by: Marc Hörsken
-  
-  Fixes #972
-
-Marc Hoersken (21 Aug 2016)
-- Revert "KNOWN_BUGS: SOCKS proxy not working via IPv6"
-  
-  This reverts commit 9cb1059f92286a6eb5d28c477fdd3f26aed1d554.
-  
-  As discussed in #835 SOCKS5 supports IPv6 proxies and destinations.
-
-Daniel Stenberg (21 Aug 2016)
-- [Marco Deckel brought this change]
-
-  win: Basic support for Universal Windows Platform apps
-  
-  Closes #820
-
-Steve Holme (21 Aug 2016)
-- sasl: Don't use GSSAPI authentication when domain name not specified
-  
-  Only choose the GSSAPI authentication mechanism when the user name
-  contains a Windows domain name or the user is a valid UPN.
+  This is more fixing-the-symptom rather than the underlying problem
+  though.
   
-  Fixes #718
-
-- vauth: Added check for supported SSPI based authentication mechanisms
+  Bug: https://curl.haxx.se/mail/lib-2016-10/0011.html
+  Bug: https://curl.haxx.se/mail/lib-2016-10/0059.html
   
-  Completing commit 00417fd66c and 2708d4259b.
+  Reported-by: Dan Fandrich, Valentin David, Miloš Ljumović
 
-- http.c: Remove duplicate (authp->avail & CURLAUTH_DIGEST) check
-  
-  From commit 2708d4259b.
+- [Anders Bakken brought this change]
 
-Marc Hoersken (20 Aug 2016)
-- socks.c: display the hostname returned by the SOCKS5 proxy server
-  
-  Instead of displaying the requested hostname the one returned
-  by the SOCKS5 proxy server is used in case of connection error.
-  The requested hostname is displayed earlier in the connection sequence.
+  curl_multi_remove_handle: fix a double-free
   
-  The upper-value of the port is moved to a temporary variable and
-  replaced with a 0-byte to make sure the hostname is 0-terminated.
-
-Steve Holme (20 Aug 2016)
-- urldata.h: Corrected comment for httpcode which is also populated by SMTP
+  In short the easy handle needs to be disconnected from its connection at
+  this point since the connection still is serving other easy handles.
   
-  As of 7.25.0 and commit 5430007222.
-
-Marc Hoersken (20 Aug 2016)
-- socks.c: use Curl_printable_address in SOCKS5 connection sequence
+  In our app we can reliably reproduce a crash in our http2 stress test
+  that is fixed by this change. I can't easily reproduce the same test in
+  a small example.
   
-  Replace custom string formatting with Curl_printable_address.
-  Add additional debug and error output in case of failures.
-
-- socks.c: align SOCKS4 connection sequence with SOCKS5
+  This is the gdb/asan output:
   
-  Calling sscanf is not required since the raw IPv4 address is
-  available and the protocol can be detected using ai_family.
-
-Steve Holme (20 Aug 2016)
-- http.c: Corrected indentation change from commit 2708d4259b
+  ==11785==ERROR: AddressSanitizer: heap-use-after-free on address 0xe9f4fb80 at pc 0x09f41f19 bp 0xf27be688 sp 0xf27be67c
+  READ of size 4 at 0xe9f4fb80 thread T13 (RESOURCE_HTTP)
+      #0 0x9f41f18 in curl_multi_remove_handle /path/to/source/3rdparty/curl/lib/multi.c:666
   
-  Made by Visual Studio's auto-correct feature and missed by me in my own
-  code reviews!
-
-- http: Added calls to Curl_auth_is_<mechansism>_supported()
+  0xe9f4fb80 is located 0 bytes inside of 1128-byte region [0xe9f4fb80,0xe9f4ffe8)
+  freed by thread T13 (RESOURCE_HTTP) here:
+      #0 0xf7b1b5c2 in __interceptor_free /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_malloc_linux.cc:45
+      #1 0x9f7862d in conn_free /path/to/source/3rdparty/curl/lib/url.c:2808
+      #2 0x9f78c6a in Curl_disconnect /path/to/source/3rdparty/curl/lib/url.c:2876
+      #3 0x9f41b09 in multi_done /path/to/source/3rdparty/curl/lib/multi.c:615
+      #4 0x9f48017 in multi_runsingle /path/to/source/3rdparty/curl/lib/multi.c:1896
+      #5 0x9f490f1 in curl_multi_perform /path/to/source/3rdparty/curl/lib/multi.c:2123
+      #6 0x9c4443c in perform /path/to/source/src/net/resourcemanager/ResourceManagerCurlThread.cpp:854
+      #7 0x9c445e0 in ...
+      #8 0x9c4cf1d in ...
+      #9 0xa2be6b5 in ...
+      #10 0xf7aa5780 in asan_thread_start /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
+      #11 0xf4d3a16d in __clone (/lib/i386-linux-gnu/libc.so.6+0xe716d)
   
-  Hooked up the HTTP authentication layer to query the new 'is mechanism
-  supported' functions when deciding what mechanism to use.
+  previously allocated by thread T13 (RESOURCE_HTTP) here:
+      #0 0xf7b1ba27 in __interceptor_calloc /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_malloc_linux.cc:70
+      #1 0x9f7dfa6 in allocate_conn /path/to/source/3rdparty/curl/lib/url.c:3904
+      #2 0x9f88ca0 in create_conn /path/to/source/3rdparty/curl/lib/url.c:5797
+      #3 0x9f8c928 in Curl_connect /path/to/source/3rdparty/curl/lib/url.c:6438
+      #4 0x9f45a8c in multi_runsingle /path/to/source/3rdparty/curl/lib/multi.c:1411
+      #5 0x9f490f1 in curl_multi_perform /path/to/source/3rdparty/curl/lib/multi.c:2123
+      #6 0x9c4443c in perform /path/to/source/src/net/resourcemanager/ResourceManagerCurlThread.cpp:854
+      #7 0x9c445e0 in ...
+      #8 0x9c4cf1d in ...
+      #9 0xa2be6b5 in ...
+      #10 0xf7aa5780 in asan_thread_start /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
+      #11 0xf4d3a16d in __clone (/lib/i386-linux-gnu/libc.so.6+0xe716d)
   
-  As per commit 00417fd66c existing functionality is maintained for now.
-
-Marc Hoersken (20 Aug 2016)
-- socks.c: improve verbose output of SOCKS5 connection sequence
-
-- configure.ac: add missing quotes to PKG_CHECK_MODULES
-
-Steve Holme (20 Aug 2016)
-- sasl: Added calls to Curl_auth_is_<mechansism>_supported()
+  SUMMARY: AddressSanitizer: heap-use-after-free /path/to/source/3rdparty/curl/lib/multi.c:666 in curl_multi_remove_handle
+  Shadow bytes around the buggy address:
+    0x3d3e9f20: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9f30: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9f40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9f50: fd fd fd fd fd fd fd fd fd fd fd fd fd fa fa fa
+    0x3d3e9f60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
+  =>0x3d3e9f70:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9f80: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9f90: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9fa0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9fb0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+    0x3d3e9fc0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
+  Shadow byte legend (one shadow byte represents 8 application bytes):
+    Addressable:           00
+    Partially addressable: 01 02 03 04 05 06 07
+    Heap left redzone:       fa
+    Heap right redzone:      fb
+    Freed heap region:       fd
+    Stack left redzone:      f1
+    Stack mid redzone:       f2
+    Stack right redzone:     f3
+    Stack partial redzone:   f4
+    Stack after return:      f5
+    Stack use after scope:   f8
+    Global redzone:          f9
+    Global init order:       f6
+    Poisoned by user:        f7
+    Container overflow:      fc
+    Array cookie:            ac
+    Intra object redzone:    bb
+    ASan internal:           fe
+    Left alloca redzone:     ca
+    Right alloca redzone:    cb
+  ==11785==ABORTING
   
-  Hooked up the SASL authentication layer to query the new 'is mechanism
-  supported' functions when deciding what mechanism to use.
+  Thread 14 "RESOURCE_HTTP" received signal SIGABRT, Aborted.
+  [Switching to Thread 0xf27bfb40 (LWP 12324)]
+  0xf7fd8be9 in __kernel_vsyscall ()
+   (gdb) bt
+   #0  0xf7fd8be9 in __kernel_vsyscall ()
+   #1  0xf4c7ee89 in __GI_raise (sig=6) at ../sysdeps/unix/sysv/linux/raise.c:54
+   #2  0xf4c803e7 in __GI_abort () at abort.c:89
+   #3  0xf7b2ef2e in __sanitizer::Abort () at /opt/toolchain/src/gcc-6.2.0/libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cc:122
+   #4  0xf7b262fa in __sanitizer::Die () at /opt/toolchain/src/gcc-6.2.0/libsanitizer/sanitizer_common/sanitizer_common.cc:145
+   #5  0xf7b21ab3 in __asan::ScopedInErrorReport::~ScopedInErrorReport (this=0xf27be171, __in_chrg=<optimized out>) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_report.cc:689
+   #6  0xf7b214a5 in __asan::ReportGenericError (pc=166993689, bp=4068206216, sp=4068206204, addr=3925146496, is_write=false, access_size=4, exp=0, fatal=true) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_report.cc:1074
+   #7  0xf7b21fce in __asan::__asan_report_load4 (addr=3925146496) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_rtl.cc:129
+   #8  0x09f41f19 in curl_multi_remove_handle (multi=0xf3406080, data=0xde582400) at /path/to/source3rdparty/curl/lib/multi.c:666
+   #9  0x09f6b277 in Curl_close (data=0xde582400) at /path/to/source3rdparty/curl/lib/url.c:415
+   #10 0x09f3354e in curl_easy_cleanup (data=0xde582400) at /path/to/source3rdparty/curl/lib/easy.c:860
+   #11 0x09c6de3f in ...
+   #12 0x09c378c5 in ...
+   #13 0x09c48133 in ...
+   #14 0x09c4d092 in ...
+   #15 0x0a2be6b6 in ...
+   #16 0xf7aa5781 in asan_thread_start (arg=0xf2d22938) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
+   #17 0xf5de52b5 in start_thread (arg=0xf27bfb40) at pthread_create.c:333
+   #18 0xf4d3a16e in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:114
   
-  For now existing functionality is maintained.
-
-Daniel Stenberg (19 Aug 2016)
-- [Miroslav Franc brought this change]
+  Fixes #1083
 
-  spnego_sspi: fix memory leak in case *outlen is zero (#970)
+- testcurl.1: fix the URL to the autobuild summary
 
-- CURLMOPT_MAX_TOTAL_CONNECTIONS.3: mention it can also multiplex
+- testcurl.1: update URLs
 
-Steve Holme (18 Aug 2016)
-- vauth: Introduced Curl_auth_is_<mechansism>_supported() functions
+- INSTALL: converted to markdown => INSTALL.md
   
-  As Windows SSPI authentication calls fail when a particular mechanism
-  isn't available, introduced these functions for DIGEST, NTLM, Kerberos 5
-  and Negotiate to allow both HTTP and SASL authentication the opportunity
-  to query support for a supported mechanism before selecting it.
+  Also heavily edited for content. Removed lots of old cruft that we added
+  like 10+ years ago that is likely incorrect by now.
   
-  For now each function returns TRUE to maintain compatability with the
-  existing code when called.
+  Also removed INSTALL.devcpp for same reason.
 
-Daniel Stenberg (18 Aug 2016)
-- test1144: verify HEAD with body-only response
+- [Martin Storsjo brought this change]
 
-Steve Holme (17 Aug 2016)
-- RELEASE-PROCEDURE: Added some more future release dates
+  configure: Check for other variants of the -m*os*-version-min flags
   
-  ...and removed some old ones
-
-Daniel Stenberg (17 Aug 2016)
-- [David Woodhouse brought this change]
+  In addition to -miphoneos-version-min, the same version can be set
+  using -mios-version-min. And for WatchOS and TvOS, there's
+  -mwatchos-version-min and -mtvos-version-min.
 
-  curl: allow "pkcs11:" prefix for client certificates
-  
-  RFC7512 provides a standard method to reference certificates in PKCS#11
-  tokens, by means of a URI starting 'pkcs11:'.
-  
-  We're working on fixing various applications so that whenever they would
-  have been able to use certificates from a file, users can simply insert
-  a PKCS#11 URI instead and expect it to work. This expectation is now a
-  part of the Fedora packaging guidelines, for example.
-  
-  This doesn't work with cURL because of the way that the colon is used
-  to separate the certificate argument from the passphrase. So instead of
+- configure: set min version flags for builds on mac
   
-     curl -E 'pkcs11:manufacturer=piv_II;id=%01' …
+  This helps building binaries that can work on multiple macOS versions.
   
-  I instead need to invoke cURL with the colon escaped, like this:
+  Help-by: Martin Storsjö
   
-     curl -E 'pkcs11\:manufacturer=piv_II;id=%01' …
+  Fixes #1069
+
+- curl_multi_add_handle: set timeouts in closure handles
   
-  This is suboptimal because we want *consistency* — the URI should be
-  usable in place of a filename anywhere, without having strange
-  differences for different applications.
+  The closure handle only ever has default timeouts set. To improve the
+  state somewhat we clone the timeouts from each added handle so that the
+  closure handle always has the same timeouts as the most recently added
+  easy handle.
   
-  This patch therefore disables the processing in parse_cert_parameter()
-  when the string starts with 'pkcs11:'. It means you can't pass a
-  passphrase with an unescaped PKCS#11 URI, but there's no need to do so
-  because RFC7512 allows a PIN to be given as a 'pin-value' attribute in
-  the URI itself.
+  Fixes #739
+
+- configure/CURL_CHECK_FUNC_POLL: disable poll completely on mac
   
-  Also, if users are already using RFC7512 URIs with the colon escaped as
-  in the above example — even providing a passphrase for cURL to handling
-  instead of using a pin-value attribute, that will continue to work
-  because their string will start 'pkcs11\:' and won't match the check.
+  ... so that the same libcurl build easier can run on any version.
   
-  What *does* break with this patch is the extremely unlikely case that a
-  user has a file which is in the local directory and literally named
-  just "pkcs11", and they have a passphrase on it. If that ever happened,
-  the user would need to refer to it as './pkcs11:<passphrase>' instead.
-
-- nss: make the global variables static
+  Follow-up to issue #1057
 
-- openssl: use regular malloc instead of OPENSSL_malloc
-  
-  This allows for better memmory debugging and torture tests.
+- RELEASE-NOTES: synced with f36f8c14551efc6772
 
-- proxy: fix tests as follow-up to 93b0d907d5
-  
-  This fixes tests that were added after 113f04e664b as the tests would
-  fail otherwise.
-  
-  We bring back "Proxy-Connection: Keep-Alive" now unconditionally to fix
-  regressions with old and stupid proxies, but we could possibly switch to
-  using it only for CONNECT or only for NTLM in a future if we want to
-  gradually reduce it.
-  
-  Fixes #954
-  
-  Reported-by: János Fekete
+- test14xx: fixed --libcurl output tests again after 8e8afa82cbb
 
-- Revert "Proxy-Connection: stop sending this header by default"
+- s/cURL/curl
   
-  This reverts commit 113f04e664b16b944e64498a73a4dab990fe9a68.
+  The tool was never called cURL, only the project. But even so, we have
+  more and more over time switched to just use lower case.
 
-- CURLOPT_PROXY.3: unsupported schemes cause errors now
-  
-  Follow-up to a96319ebb9 (document the new behavior)
+- polarssl: indented code, removed unused variables
 
-- tests/README: mention nghttpx for HTTP/2 tests
+- polarssl: reduce #ifdef madness with a macro
 
-- README.md: add our CII Best Practices badge
+- polarssl: fix unaligned SSL session-id lock
 
-- proxy: polished the error message for unsupported schemes
+- Curl_polarsslthreadlock_thread_setup: clear array at init
   
-  Follow up to a96319ebb93
-
-- test219: verify unsupported scheme for proxies get rejected
+  ... since if it fails to init the entire array and then tries to clean
+  it up, it would attempt to work on an uninitialized pointer.
 
-- proxy: reject attempts to use unsupported proxy schemes
-  
-  I discovered some people have been using "https://example.com" style
-  strings as proxy and it "works" (curl doesn't complain) because curl
-  ignores unknown schemes and then assumes plain HTTP instead.
+- curl: set INTERLEAVEDATA too
   
-  I think this misleads users into believing curl uses HTTPS to proxies
-  when it doesn't. Now curl rejects proxy strings using unsupported
-  schemes instead of just ignoring and defaulting to HTTP.
+  As otherwise the callback could be called with a NULL pointer when RTSP
+  data is provided.
 
-- RELEASE-NOTES: synced with b7ee5316c2fd5b
+- gopher: properly return error for poll failures
 
-Marc Hoersken (14 Aug 2016)
-- socks.c: Correctly calculate position of port in response packet
+- select: switch to macros in uppercase
   
-  Third commit to fix issue #944 regarding SOCKS5 error handling.
+  Curl_select_ready() was the former API that was replaced with
+  Curl_select_check() a while back and the former arg setup was provided
+  with a define (in order to leave existing code unmodified).
   
-  Reported-by: David Kalnischkies
+  Now we instead offer SOCKET_READABLE and SOCKET_WRITABLE for the most
+  common shortcuts where only one socket is checked. They're also more
+  visibly macros.
 
-- socks.c: Do not modify and invalidate calculated response length
+- select: use more proper macro-looking names
   
-  Second commit to fix issue #944 regarding SOCKS5 error handling.
+  ... so that it becomes more obvious in the code what is what. Also added
+  a typecast for one of the calculations.
+
+- Curl_socket_check: add extra check to avoid integer overflow
+
+- maketgz: make it support "only" generating version info
   
-  Reported-by: David Kalnischkies
+  ... to allow you to update the local repository with the given version
+  number data.
 
-- socks.c: Move error output after reading the whole response packet
+Jay Satiro (17 Oct 2016)
+- url: skip to-be-closed connections when pipelining (follow-up)
   
-  First commit to fix issue #944 regarding SOCKS5 error handling.
+  - Change back behavior so that pipelining is considered possible for
+  connections that have not yet reached the protocol level.
   
-  Reported-by: David Kalnischkies
+  This is a follow-up to e5f0b1a which had changed the behavior of
+  checking if pipelining is possible to ignore connections that had
+  'bits.close' set. Connections that have not yet reached the protocol
+  level also have that bit set, and we need to consider pipelining
+  possible on those connections.
 
-Daniel Stenberg (13 Aug 2016)
-- [Ronnie Mose brought this change]
+Daniel Stenberg (17 Oct 2016)
+- HTTP2: mention the tool's limited support
 
-  MANUAL: Remove invalid link to LDAP documentation (#962)
-  
-  The server developer.netscape.com does not resolve into any
-  ip address and can be removed.
+- RELEASE-NOTES: synced with a1a5cd04877fd6fd
 
-Jay Satiro (13 Aug 2016)
-- openssl: accept subjectAltName iPAddress if no dNSName match
+- [David Woodhouse brought this change]
+
+  curl: do not set CURLOPT_SSLENGINEDEFAULT automatically
   
-  Undo change introduced in d4643d6 which caused iPAddress match to be
-  ignored if dNSName was present but did not match.
+  There were bugs in the PKCS#11 engine, and fixing them triggers bugs in
+  OpenSSL. Just don't get involved; there's no need to be making the
+  engine methods the default anyway.
   
-  Also, if iPAddress is present but does not match, and dNSName is not
-  present, fail as no-match. Prior to this change in such a case the CN
-  would be checked for a match.
+  https://github.com/OpenSC/libp11/pull/108
+  https://github.com/openssl/openssl/pull/1639
   
-  Bug: https://github.com/curl/curl/issues/959
-  Reported-by: wmsch@users.noreply.github.com
-
-Daniel Stenberg (12 Aug 2016)
-- [Dambaev Alexander brought this change]
+  Merges #1042
 
-  configure.ac: add zlib search with pkg-config
-  
-  Closes #956
+- KNOWN_BUGS: two more existing problems
 
-- rtsp: ignore whitespace in session id
-  
-  Follow-up to e577c43bb to fix test case 569 brekage: stop the parser at
-  whitespace as well.
+Marcel Raad (16 Oct 2016)
+- win: fix Universal Windows Platform build
   
-  Help-by: Erik Janssen
-
-- HTTP: retry failed HEAD requests too
+  This fixes a merge error in commit 7f3df80 caused by commit 332e8d6.
   
-  Mark's new document about HTTP Retries
-  (https://mnot.github.io/I-D/httpbis-retry/) made me check our code and I
-  spotted that we don't retry failed HEAD requests which seems totally
-  inconsistent and I can't see any reason for that separate treatment.
+  Additionally, this changes Curl_verify_windows_version for Windows App
+  builds to assume to always be running on the target Windows version.
+  There seems to be no way to determine the Windows version from a
+  UWP app. Neither GetVersion(Ex), nor VerifyVersionInfo, nor the
+  Version Helper functions are supported.
   
-  So, no separate treatment for HEAD starting now. A HTTP request sent
-  over a reused connection that gets cut off before a single byte is
-  received will be retried on a fresh connection.
+  Bug: https://github.com/curl/curl/pull/820#issuecomment-250889878
+  Reported-by: Paul Joyce
   
-  Made-aware-by: Mark Nottingham
-
-- mk-ca-bundle.1: document -m, added in 1.26
+  Closes https://github.com/curl/curl/pull/1048
 
-- RELEASE-NOTES: synced with e577c43bb5
+Daniel Stenberg (16 Oct 2016)
+- KNOWN_BUGS: minor formatting edit
 
-- [Erik Janssen brought this change]
+Jay Satiro (14 Oct 2016)
+- [Rider Linden brought this change]
 
-  rtsp: accept any RTSP session id
-  
-  Makes libcurl work in communication with gstreamer-based RTSP
-  servers. The original code validates the session id to be in accordance
-  with the RFC. I think it is better not to do that:
-  
-  - For curl the actual content is a don't care.
-  
-  - The clarity of the RFC is debatable, is $ allowed or only as \$, that
-    is imho not clear
+  url: skip to-be-closed connections when pipelining
   
-  - Gstreamer seems to url-encode the session id but % is not allowed by
-  the RFC
+  No longer attempt to use "doomed" to-be-closed connections when
+  pipelining. Prior to this change connections marked for deletion (e.g.
+  timeout) would be erroneously used, resulting in sporadic crashes.
   
-  - less code
+  As originally reported and fixed by Carlo Wood (origin unknown).
   
-  With this patch curl will correctly handle real-life lines like:
-  Session: biTN4Kc.8%2B1w-AF.; timeout=60
+  Bug: https://github.com/curl/curl/issues/627
+  Reported-by: Rider Linden
   
-  Bug: https://curl.haxx.se/mail/lib-2016-08/0076.html
+  Closes https://github.com/curl/curl/pull/1075
+  Participation-by: nopjmp@users.noreply.github.com
 
-- symbols-in-versions: add CURL_STRICTER
+Daniel Stenberg (13 Oct 2016)
+- vtls: only re-use session-ids using the same scheme
   
-  Added in 5fce88aa8c12564
+  To make it harder to do cross-protocol mistakes
 
-- [Simon Warta brought this change]
+Jay Satiro (11 Oct 2016)
+- [Torben Dannhauer brought this change]
 
-  winbuild: Allow changing C compiler via environment variable CC (#952)
-  
-  This makes it possible to use specific compilers or a cache.
+  dist: add missing cmake modules to the tarball
   
-  Sample use for clcache:
-  set CC=clcache.bat
-  nmake /f Makefile.vc DEBUG=no MODE=static VC=14 GEN_PDB=no
-
-- LICENSE-MIXING.md: switched to markdown
-
-- docs-make: have markdown files use .md
-
-- curl.h: make CURL_NO_OLDIES define CURL_STRICTER
-
-- HISTORY.md: use markdown extension
-
-- SSLCERTS.md: renamed to markdown extension
-
-- INTERNALS.md: use markdown extension for markdown content
-
-- CONTRIBUTE.md: markdown extension
-
-- CONTRIBUTE: changed to markdown
-
-- CONTRIBUTE: refreshed
-
-- TODO: added an SSH section and two SFTP things to do
-
-- TODO: remove the 1.22 duplicated item
-
-- TODO: move "CURLOPT_MAIL_CLIENT" to SMTP section
+  Closes https://github.com/curl/curl/pull/1070
 
-- TODO: API for URL parsing/splitting
+Daniel Stenberg (11 Oct 2016)
+- configure: detect the broken poll() in macOS 10.12
+  
+  Fixes #1057
 
-- TODO: move QUIC to the HTTP section
+- dist: remove PDF and HTML converted docs from the releases
 
-- [Simon Warta brought this change]
+- [Remo E brought this change]
 
-  winbuild: Free name $(CC) in Makefile (#950)
-  
-  In the old line number 290, CC and CURL_CC had the same value. After
-  that, /DCURL_STATICLIB was added to CC but not CURL_CC (intended?).
+  cmake: add nghttp2 support
   
-  This gets rid of the CC variable entirely. It is a first step to make it
-  possible to manualyl set a CC variable in order to be able to change the
-  compiler.
-
-- TODO: Use huge HTTP/2 windows
+  Closes #922
 
-- [Simon Warta brought this change]
+- [Andreas Streichardt brought this change]
 
-  winbuild: Avoid setting redundant CFLAGS to compile commands (#949)
+  resolve: add error message when resolving using SIGALRM
   
-  $(CURL_CC) is always used with $(CURL_CFLAGS) appended, so before this,
-  all arguments in CURL_CFLAGS have been added twice.
+  Closes #1066
 
-Jay Satiro (8 Aug 2016)
-- cmake: Enable win32 threaded resolver by default
+- GIT-INFO: remove the Mac 10.1-specific details
   
-  - Turn on USE_THREADS_WIN32 in Windows if ares isn't on
+  There shouldn't be many devs out there anymore using such outdated macOS
+  versions. And it removes the dead link.
   
-  This change is similar to what we already do in the autotools build.
+  Closes #1049
 
-- cmake: Enable win32 large file support by default
-  
-  All compilers used by cmake in Windows should support large files.
+- RELEASE-NOTES: spellfix
+
+- RELEASE-NOTES: synced with 82720490628cb53a
   
-  - Add test SIZEOF_OFF_T
-  - Remove outdated test SIZEOF_CURL_OFF_T
-  - Turn on USE_WIN32_LARGE_FILES in Windows
-  - Check for 'Largefile' during the features output
+  5 more fixes, 2 more contributors
 
-Daniel Stenberg (7 Aug 2016)
-- TODO: added several ideas, removed SPDY
+- [Tobias Stoeckmann brought this change]
 
-- http2: always wait for readable socket
+  smb: properly check incoming packet boundaries
   
-  Since the server can at any time send a HTTP/2 frame to us, we need to
-  wait for the socket to be readable during all transfers so that we can
-  act on incoming frames even when uploading etc.
+  Not all reply messages were properly checked for their lengths, which
+  made it possible to access uninitialized memory (but this does not lead
+  to out of boundary accesses).
   
-  Reminded-by: Tatsuhiro Tsujikawa
+  Closes #1052
 
-- RELEASE-NOTES: synced with 7b4bf37a44791
+- test557: verify printf() with 128 and 129 arguments
 
-- [Thomas Glanzmann brought this change]
+- mprintf: return error on too many arguments
+  
+  128 arguments should be enough for everyone
 
-  mbedtls: set debug threshold to 4 (verbose) when MBEDTLS_DEBUG is defined
+- ftp: fix Curl_ftpsendf()
   
-  In order to make MBEDTLS_DEBUG work, the debug threshold must be unequal
-  to 0.  This patch also adds a comment how mbedtls must be compiled in
-  order to make debugging work, and explains the possible debug levels.
+  ... it no longer takes printf() arguments since it was only really taken
+  advantage by one user and it was not written and used in a safe
+  way. Thus the 'f' is removed from the function name and the proto is
+  changed.
+  
+  Although the current code wouldn't end up in badness, it was a risk that
+  future changes could end up springf()ing too large data or passing in a
+  format string inadvertently.
 
-- CURLOPT_TCP_NODELAY: now enabled by default
+- formpost: avoid silent snprintf() truncation
   
-  After a few wasted hours hunting down the reason for slowness during a
-  TLS handshake that turned out to be because of TCP_NODELAY not being
-  set, I think we have enough motivation to toggle the default for this
-  option. We now enable TCP_NODELAY by default and allow applications to
-  switch it off.
+  The previous use of snprintf() could make libcurl silently truncate some
+  input data and not report that back on overly large input, which could
+  make data get sent over the network in a bad format.
   
-  This also makes --tcp-nodelay unnecessary, but --no-tcp-nodelay can be
-  used to disable it.
+  Example:
   
-  Thanks-to: Tim Rühsen
-  Bug: https://curl.haxx.se/mail/lib-2016-06/0143.html
+   $ curl --form 'a=b' -H "Content-Type: $(perl -e 'print "A"x4100')"
 
-- [Serj Kalichev brought this change]
+- TODO: build: Enable PIE and RELRO by default
 
-  TFTP: Fix upload problem with piped input
-  
-  When input stream for curl is stdin and input stream is not a file but
-  generated by a script then curl can truncate data transfer to arbitrary
-  size since a partial packet is treated as end of transfer by TFTP.
-  
-  Fixes #857
+- TODO: Support better than MD5 hostkey hash (for ssh)
 
-- mk-ca-bundle.pl: -m keeps ca cert meta data in output
-  
-  Makes the script pass on comments holding meta data to the output
-  file. Like fingerprinters, issuer, date ranges etc.
-  
-  Closes #937
+- [Daniel Gustafsson brought this change]
 
-- multi: make Curl_expire() work with 0 ms timeouts
-  
-  Previously, passing a timeout of zero to Curl_expire() was a magic code
-  for clearing all timeouts for the handle. That is now instead made with
-  the new Curl_expire_clear() function and thus a 0 timeout is fine to set
-  and will trigger a timeout ASAP.
+  tests: Fix a small typo in the tests README (#1060)
   
-  This will help removing short delays, in particular notable when doing
-  HTTP/2.
+  The subdirectory for logs in tests/ is named log/ without an 's'
+  at the end.
 
-- transfer: return without select when the read loop reached maxcount
-  
-  Regression added in 790d6de48515. The was then added to avoid one
-  particular transfer to starve out others. But when aborting due to
-  reading the maxcount, the connection must be marked to be read from
-  again without first doing a select as for some protocols (like SFTP/SCP)
-  the data may already have been read off the socket.
+- TODO: Introduce --fail-fast to exit on first transfer fail
   
-  Reported-by: Dan Donahue
-  Bug: https://curl.haxx.se/mail/lib-2016-07/0057.html
-
-Steve Holme (3 Aug 2016)
-- [Bill Nagel brought this change]
+  See #1054
 
-  mbedtls: Added support for NTLM
+- TODO: Leave secure cookies alone
 
-Daniel Stenberg (3 Aug 2016)
-- [Sergei Nikulov brought this change]
+- [Rainer Müller brought this change]
 
-  travis: removed option to rebuild autotool from source
+  CURLOPT_DEBUGFUNCTION.3: unused argument warning (#1056)
   
-  Fixes #943
+  The 'userp' argument is unused in this example code.
 
-- bump: start working toward 7.50.2
+- TODO: TCP Fast Open for windows
 
-Version 7.50.1 (3 Aug 2016)
+- RELEASE-NOTES: synced with 8fd2a754f0de
 
-Daniel Stenberg (3 Aug 2016)
-- THANKS: 7 new contributors from the 7.50.1 release
+- CURLOPT_KEEP_SENDING_ON_ERROR.3: mention when it is added
 
-- RELEASE-NOTES: 7.50.1
+- memdup: use 'void *' as return and source type
 
-- TLS: only reuse connections with the same client cert
-  
-  CVE-2016-5420
-  Bug: https://curl.haxx.se/docs/adv_20160803B.html
+- TODO: Add easy argument to formpost functions
 
-- TLS: switch off SSL session id when client cert is used
+- formpost: trying to attach a directory no longer crashes
   
-  CVE-2016-5419
-  Bug: https://curl.haxx.se/docs/adv_20160803A.html
-  Reported-by: Bru Rom
-  Contributions-by: Eric Rescorla and Ray Satiro
+  The error path would previously add a freed entry to the linked list.
+  
+  Reported-by: Toby Peterson
+  
+  Fixes #1053
 
-- curl_multi_cleanup: clear connection pointer for easy handles
+- [Sergei Kuzmin brought this change]
+
+  cookies: same domain handling changed to match browser behavior
+  
+  Cokie with the same domain but different tailmatching property are now
+  considered different and do not replace each other.  If header contains
+  following lines then two cookies will be set: Set-Cookie: foo=bar;
+  domain=.foo.com; expires=Thu Mar 3 GMT 8:56:27 2033 Set-Cookie: foo=baz;
+  domain=foo.com; expires=Thu Mar 3 GMT 8:56:27 2033
+  
+  This matches Chrome, Opera, Safari, and Firefox behavior. When sending
+  stored tokens to foo.com Chrome, Opera, Firefox store send them in the
+  stored order, while Safari pre-sort the cookies.
   
-  CVE-2016-5421
-  Bug: https://curl.haxx.se/docs/adv_20160803C.html
-  Reported-by: Marcelo Echeverria and Fernando Muñoz
+  Closes #1050
 
-- KNOWN_BUGS: SOCKS proxy not working via IPv6
-  
-  Closes #835
+- [Stephen Brokenshire brought this change]
 
-- KNOWN_BUGS: CURLOPT_SEEKFUNCTION not called with CURLFORM_STREAM
+  FAQ: Fix typos in section 5.14 (#1047)
   
-  Closes #768
+  Type required for YourClass::func C++ function (using size_t in line
+  with the documentation for CURLOPT_WRITEFUNCTION) and missing second
+  colon when specifying the static function for CURLOPT_WRITEFUNCTION.
 
-- KNOWN_BUGS: transfer-encoding: chunked in HTTP/2
-  
-  Closes #662
+- [Sebastian Mundry brought this change]
 
-- TODO: Provide cmake config-file
+  KNOWN_BUGS: Fix typos in section 5.8.
   
-  Closes #885
-
-Patrick Monnerat (2 Aug 2016)
-- os400: define BUILDING_LIBCURL in make script.
+  Closes #1046
 
-Daniel Stenberg (1 Aug 2016)
-- RELEASE-NOTES: synced with aa9f536a18b
+- [mundry brought this change]
 
-Jay Satiro (1 Aug 2016)
-- [Thomas Glanzmann brought this change]
+  CONTRIBUTE.md: Fix typo in 'About pull requests' section. (#1045)
 
-  mbedtls: Fix debug function name
-  
-  This patch is necessary so that curl compiles if MBEDTLS_DEBUG is
-  defined.
-  
-  Bug: https://curl.haxx.se/mail/lib-2016-08/0001.html
+- curl.1: --trace supports % for sending to stderr!
 
-Daniel Stenberg (1 Aug 2016)
-- [Sergei Nikulov brought this change]
+- KNOWN_BUGS: 5.8 configure finding libs in wrong directory
 
-  travis: fix OSX build by re-installing libtool
-  
-  Apparently due to a broken homebrew install
+Dan Fandrich (24 Sep 2016)
+- configure: Fixed builds with libssh2 in a custom location
   
-  fixes #934
-  Closes #939
-
-- [Martin Vejnár brought this change]
+  A libssh2 library in the standard system location was being used in
+  preference to the desired one while linking.
 
-  win32: fix a potential memory leak in Curl_load_library
-  
-  If a call to GetSystemDirectory fails, the `path` pointer that was
-  previously allocated would be leaked. This makes sure that `path` is
-  always freed.
-  
-  Closes #938
+Daniel Stenberg (23 Sep 2016)
+- SECURITY: remove the top ascii logo
 
-- include: revert 9adf3c4 and make public types void * again
+Michael Kaufmann (22 Sep 2016)
+- New libcurl option to keep sending on error
   
-  Many applications assume the actual contents of the public types and use
-  that do for example forward declarations (saving them from including our
-  public header) which then breaks when we switch from void * to a struct
-  *.
+  Add the new option CURLOPT_KEEP_SENDING_ON_ERROR to control whether
+  sending the request body shall be completed when the server responds
+  early with an error status code.
   
-  I'm not convinced we were wrong, but since this practise seems
-  widespread enough I'm willing to (partly) step down.
+  This is suitable for manual NTLM authentication.
   
-  Now libcurl uses the struct itself when it is built and it allows
-  applications to use the struct type if CURL_STRICTER is defined at the
-  time of the #include.
+  Reviewed-by: Jay Satiro
   
-  Reported-by: Peter Frühberger
-  Fixes #926
+  Closes https://github.com/curl/curl/pull/904
 
-Jay Satiro (28 Jul 2016)
-- [Yonggang Luo brought this change]
+Kamil Dudka (22 Sep 2016)
+- nss: add chacha20-poly1305 cipher suites if supported by NSS
 
-  cmake: Fix for schannel support
+- nss: add cipher suites using SHA384 if supported by NSS
+
+- nss: fix typo in ecdhe_rsa_null cipher suite string
   
-  The check_library_exists_concat do not check crypt32 library properly.
-  So include it directly.
+  As it seems to be a rarely used cipher suite (for securely established
+  but _unencrypted_ connections), I believe it is fine not to provide an
+  alias for the misspelled variant.
+
+Jay Satiro (21 Sep 2016)
+- docs: Remove that --proto is just used for initial retrieval
   
-  Bug: https://github.com/curl/curl/pull/917
-  Reported-by: Yonggang Luo
+  .. and add that --proto-redir and CURLOPT_REDIR_PROTOCOLS do not
+  override protocols denied by --proto and CURLOPT_PROTOCOLS.
   
-  Bug: https://github.com/curl/curl/issues/935
-  Reported-by: Alain Danteny
+  - Add a test to enforce: --proto deny must override --proto-redir allow
+  
+  Closes https://github.com/curl/curl/pull/1031
 
-- Revert "travis: Install libtool for OS X builds"
+Daniel Stenberg (21 Sep 2016)
+- dist: add CurlSymbolHiding.cmake to the tarball
   
-  Didn't work.
+  Follow-up to 6140dfcf3e784
   
-  This reverts commit 50723585ed380744358de054e2a55dccee65dfd7.
+  Reported-by: Alexander Sinditskiy
 
-- travis: Install libtool for OS X builds
+- curl_global_cleanup.3: don't unload the lib with sub threads running
   
-  CI is failing due to missing libtoolize, so I'm trying this.
+  Discussed in #997
+  
+  Assisted-by: Jay Satiro
 
-Daniel Stenberg (26 Jul 2016)
-- [Viktor Szakats brought this change]
+- MAIL-ETIQUETTE: language
 
-  TODO: minor typo in last commit
+Jay Satiro (20 Sep 2016)
+- easy: Reset all statistical session info in curl_easy_reset
   
-  merged #931
+  Bug: https://github.com/curl/curl/issues/1017
+  Reported-by: Jeroen Ooms
 
-- TODO: Timeout idle connections from the pool
+Daniel Stenberg (19 Sep 2016)
+- RELEASE-NOTES: synced with 79607eec51055
 
-Patrick Monnerat (25 Jul 2016)
-- os400: minimum supported OS version: V6R1M0.
-  Do not log compilation informational messages.
+Jay Satiro (19 Sep 2016)
+- [Daniel Gustafsson brought this change]
 
-Jay Satiro (24 Jul 2016)
-- tests: Fix for http/2 feature
+  darwinssl: Fix typo in comment
   
-  Bug: https://curl.haxx.se/mail/lib-2016-07/0070.html
-  Reported-by: Paul Howarth
+  Closes https://github.com/curl/curl/pull/1028
 
-Steve Holme (23 Jul 2016)
-- README: Mention wolfSSL in the 'Dependencies' section
+Daniel Stenberg (19 Sep 2016)
+- [Bernard Spil brought this change]
 
-- vauth.h: No need to query HAVE_GSSAPI || USE_WINDOWS_SSPI for SPNEGO
+  libressl: fix version output
   
-  As SPNEGO is only defined when these pre-processor variables are defined
-  there is no need to query them explicitly.
-
-- spnego: Corrected miss-placed * in Curl_auth_spnego_cleanup() declaration
+  LibreSSL defines `OPENSSL_VERSION_NUMBER` as `0x20000000L` for all
+  versions returning `LibreSSL/2.0.0` for any LibreSSL version.
   
-  Typo introduced in commit ad5e9bfd5d.
-
-Daniel Stenberg (22 Jul 2016)
-- SECURITY: mention how to get windows-specific CVEs
+  This change provides a local OpenSSL_version_num function replacement
+  returning LIBRESSL_VERSION_NUMBER instead.
   
-  ... and make the distros link a proper link
-
-Dan Fandrich (21 Jul 2016)
-- test558: fix test by stripping file paths from FD lines
-
-Kamil Dudka (21 Jul 2016)
-- tests: distribute the http2-server.pl script, too
-
-- docs: distribute the CURLINFO_HTTP_VERSION(3) man page, too
-
-Daniel Stenberg (21 Jul 2016)
-- bump: start working on 7.50.1
+  Closes #1029
 
-Version 7.50.0 (21 Jul 2016)
+- [rugk brought this change]
 
-Daniel Stenberg (21 Jul 2016)
-- RELEASE-NOTES: version 7.50.0 ready
+  TODO: Add PINNEDPUBLICKEY - HPKP compatibility, HSTS & HPKP
+  
+  Closes #1025
+  Closes #1026
+  Closes #1027
 
-- THANKS: 13 new contributors from the 7.50.0 release
+- openssl: don't call ERR_remote_thread_state on >= 1.1.0
+  
+  Follow-up fix to d9321562
 
-Jay Satiro (21 Jul 2016)
-- winbuild: fix embedded manifest option
+- openssl: don’t call CRYTPO_cleanup_all_ex_data
   
-  Embedded manifest option didn't work due to typo.
+  The OpenSSL function CRYTPO_cleanup_all_ex_data() cannot be called
+  multiple times without crashing - and other libs might call it! We
+  basically cannot call it without risking a crash. The function is a
+  no-op since OpenSSL 1.1.0.
   
-  Reported-by: Stefan Kanthak
-
-- vauth: Fix memleak by freeing credentials if out of memory
+  Not calling this function only risks a small memory leak with OpenSSL <
+  1.1.0.
   
-  This is a follow up to the parent commit dcdd4be which fixes one leak
-  but creates another by failing to free the credentials handle if out of
-  memory. Also there's a second location a few lines down where we fail to
-  do same. This commit fixes both of those issues.
+  Bug: https://curl.haxx.se/mail/lib-2016-09/0045.html
+  Reported-by: Todd Short
 
-Daniel Stenberg (20 Jul 2016)
-- [Saurav Babu brought this change]
+- TODO: Support SSLKEYLOGFILE
 
-  vauth: Fixed memory leak due to function returning without free
-  
-  This patch allocates memory to "output_token" only when it is required
-  so that memory is not leaked if function returns.
+Jay Satiro (18 Sep 2016)
+- CURLOPT_PINNEDPUBLICKEY.3: fix the AVAILABILITY formatting
 
-- test558: updated after ipv6-check move
+Nick Zitzmann (18 Sep 2016)
+- darwinssl: disable RC4 cipher-suite support
   
-  Follow-up commit to c50980807c5 to make this test pass.
+  RC4 was a nice alternative to CBC back in the days of BEAST, but it's insecure and obsolete now.
 
-Jay Satiro (20 Jul 2016)
-- connect: disable TFO on Linux when using SSL
-  
-  - Linux TFO + TLS is not implemented yet.
+- configure: change "iOS/Mac OS X native" to "Apple OS native"
   
-  Bug: https://github.com/curl/curl/issues/907
-
-Daniel Stenberg (19 Jul 2016)
-- ROADMAP: QUIC and TLS 1.3
-
-- RELEASE-NOTES: synced with c50980807c5
+  Since I first wrote that text, Apple introduced tvOS and watchOS, and renamed "Mac OS X" to "macOS." Let's make the text a little more inclusive, since curl can be built for all four operating systems.
 
-Jay Satiro (18 Jul 2016)
-- [Brian Prodoehl brought this change]
+Jay Satiro (18 Sep 2016)
+- test2048: fix url
 
-  curl_global_init: Check if IPv6 works
+- examples/imap-append: Set size of data to be uploaded
   
-  - Curl_ipv6works() is not thread-safe until after the first call, so
-  call it once during global init to avoid a possible race condition.
+  Prior to this commit this example failed with error
+  'Cannot APPEND with unknown input file size'.
   
-  Bug: https://github.com/curl/curl/issues/915
-  PR: https://github.com/curl/curl/pull/918
-
-- [Timothy Polich brought this change]
-
-  CURLMOPT_SOCKETFUNCTION.3: fix typo
+  Bug: https://github.com/curl/curl/issues/1008
+  Reported-by: lukaszgn@users.noreply.github.com
   
-  Closes https://github.com/curl/curl/pull/914
+  Closes https://github.com/curl/curl/pull/1011
 
-- [Miroslav Franc brought this change]
+Daniel Stenberg (16 Sep 2016)
+- [Tony Kelman brought this change]
 
-  library: Fix memory leaks found during static analysis
+  LICENSE-MIXING.md: update with mbedTLS dual licensing
   
-  Closes https://github.com/curl/curl/pull/913
+  Recent versions of mbedTLS are available under either Apache 2.0 or GPL
+  2.0, see https://tls.mbed.org/how-to-get
+  
+  Closes #1019
 
-- [Viktor Szakats brought this change]
+- KNOWN_BUGS: chunked-encoded requests with HTTP/2 is fixed
 
-  cookie.c: Fix misleading indentation
-  
-  Closes https://github.com/curl/curl/pull/911
+- http2: debug ouput sent HTTP/2 request headers
 
-- FAQ: Update FTP directory listing section for MLSD command
+- http: accept "Transfer-Encoding: chunked" for HTTP/2 as well
   
-  Explain how some FTP servers support the machine readable listing
-  format MLSD from RFC 3659 and compare it to LIST.
+  ... but don't send the actual header over the wire as it isn't accepted.
+  Chunked uploading is still triggered using this method.
   
-  Ref: https://github.com/curl/curl/issues/906
-
-Daniel Stenberg (1 Jul 2016)
-- [Sergei Nikulov brought this change]
+  Fixes #1013
+  Fixes #662
 
-  Appveyor: Updates for options - CURL_STATICLIB/BUILD_TESTING
+- openssl: fix per-thread memory leak usiong 1.0.1 or 1.0.2
   
-  Closes #892
+  OpenSSL 1.0.1 and 1.0.2 build an error queue that is stored per-thread
+  so we need to clean it when easy handles are freed, in case the thread
+  will be killed in which the easy handle was used. All OpenSSL code in
+  libcurl should extract the error in association with the error already
+  so clearing this queue here should be harmless at worst.
+  
+  Fixes #964
 
-- TODO: 17.4 also brings more HTTP/2 support
+- RELEASE-NOTES: reset and go toward 7.51.0 (again)
 
-- TODO: try next proxy if one doesn't work
-  
-  Closes #896
+Version 7.50.3 (14 Sep 2016)
 
-- conn: don't free easy handle data in handler->disconnect
-  
-  Reported-by: Gou Lingfeng
-  Bug: https://curl.haxx.se/mail/lib-2016-06/0139.html
+Daniel Stenberg (14 Sep 2016)
+- THANKS: updated with curl 7.50.3 contributors
 
-- test1244: test different proxy ports same URL
+- RELEASE-NOTES: curl 7.50.3
 
-- curl_global_init.3: improved formatting of the flags
+- test1605: verify negative input lengths to (un)escape functions
 
-- curl_global_init.3: expand on the SSL and WIN32 bits purpose
+- curl_easy_unescape: deny negative string lengths as input
   
-  Reported-by: Richard Gray
-  Bug: https://curl.haxx.se/mail/lib-2016-06/0136.html
-
-- [Michael Kaufmann brought this change]
+  CVE-2016-7167
+  
+  Bug: https://curl.haxx.se/docs/adv_20160914.html
 
-  cleanup: minor code cleanup in Curl_http_readwrite_headers()
+- curl_easy_escape: deny negative string lengths as input
   
-  - the expression of an 'if' was always true
-  - a 'while' contained a condition that was always true
-  - use 'if(k->exp100 > EXP100_SEND_DATA)' instead of 'if(k->exp100)'
-  - fixed a typo
+  CVE-2016-7167
   
-  Closes #889
+  Bug: https://curl.haxx.se/docs/adv_20160914.html
 
-- SFTP: set a generic error when no SFTP one exists...
+- curl: make --create-dirs on windows grok both forward and backward slashes
   
-  ... as otherwise we could get a 0 which would count as no error and we'd
-  wrongly continue and could end up segfaulting.
+  Reported-by: Ryan Scott
   
-  Bug: https://curl.haxx.se/mail/lib-2016-06/0052.html
-  Reported-by: 暖和的和暖
+  Fixes #1007
 
-- ROADMAP: http2 tests are merged, mention http2 perf
+- RELEASE-NOTES: synced with 665694979b6
 
-- docs/README.md: to render nicer pages on github
-  
-  ... as previously the README.cmake would be picked and put at the bottom
-  of the docs page there and it wasn't very representative!
+- [Tony Kelman brought this change]
 
-- README.md: change host name for the svg logo
+  mbedtls: switch off NTLM in build if md4 isn't available
   
-  rawgit.com asks to use the domain cdn.rawgit.com for production
+  NTLM support with mbedTLS was added in 497e7c9 but requires that mbedTLS
+  is built with the MD4 functions available, which it isn't in default
+  builds. This now adapts if the funtion isn't there and builds libcurl
+  without NTLM support if so.
   
-  See #900
-
-- [Viktor Szakats brought this change]
+  Fixes #1004
 
-  README.md: use the SVG logo
+Jay Satiro (12 Sep 2016)
+- CODE_STYLE: fix long-line guideline
+  
+  - Change maximum allowed line length from 80 to 79.
 
-- README.md: logo on top!
+- CODE_STYLE: add column alignment section
+  
+  Note that since the added examples are for column alignment I had to
+  encapsulate with ~~~c markdown to preserve their alignment.
 
-- KNOWN_BUGS: 3.4 POP3 expects "CRLF.CRLF" eob for some
+Peter Wu (11 Sep 2016)
+- cmake: fix curl-config --static-libs
   
-  Closes #740
+  The `curl-config --static-libs` command should not output paths like
+  -l/usr/lib/libssl.so, instead print the absolute path without `-l`.
+  
+  This also removes the confusing message "Static linking is broken" which
+  was printed because curl-config --static-libs was disfunctional even
+  though the static libcurl.a library works properly.
+  
+  Fixes https://github.com/curl/curl/issues/841
 
-- RELEASE-NOTES: synced with d61c80515aa8
+Daniel Stenberg (11 Sep 2016)
+- http: refuse to pass on response body with NO_NODY was set
+  
+  ... like when a HTTP/0.9 response comes back without any headers at all
+  and just a body this now prevents that body from being sent to the
+  callback etc.
+  
+  Adapted test 1144 to verify.
+  
+  Fixes #973
+  
+  Assisted-by: Ray Satiro
 
-- [Michael Osipov brought this change]
+- RELEASE-NOTES: synced with 257bf3ac67eb6
 
-  acinclude.m4: improve autodetection of CA bundle on FreeBSD
+Jakub Zakrzewski (10 Sep 2016)
+- CMake: Don't build unit tests if private symbols are hidden
   
-  The FreeBSD Port security/ca_root_nss installs the Mozilla NSS CA bundle
-  to /usr/local/share/certs/ca-root-nss.crt. Use this bundle in the
-  discovery process.
+  This only excludes building unit tests from default build ( 'all' Make
+  target or "Build Solution" in VisualStudio). The projects and Make
+  targets will still be generated and shown in supporting IDEs.
   
-  This change also removes the former FreeBSD path that has been obsolete
-  for 8 years since this FreeBSD ports commit:
-  https://svnweb.freebsd.org/ports/head/security/?view=revision&revision=215953
+  Fixes https://github.com/curl/curl/issues/981
+  Reported-by: Randy Armstrong
   
-  Closes #894
+  Closes https://github.com/curl/curl/pull/990
 
-- configure: don't specify .lib for libs on windows
+- CMake: Try to (un-)hide private library symbols
   
-  Another follow up for crypt32.lib linking with winssl
-
-- configure: fix winssl LIBS change typo
+  Detect support for compiler symbol visibility flags and apply those
+  according to CURL_HIDDEN_SYMBOLS option.
+  It should work true to the autotools build except it tries to unhide
+  symbols on Windows when requested and prints warning if it fails.
   
-  follow-up from 120bf29e
+  Ref: https://github.com/curl/curl/issues/981#issuecomment-242665951
+  Reported-by: Daniel Stenberg
 
-- TODO: "TCP Fast Open" is done, add monitor pool connections
+Daniel Stenberg (9 Sep 2016)
+- openssl: fix bad memory free (regression)
+  
+  ... by partially reverting f975f06033b1. The allocation could be made by
+  OpenSSL so the free must be made with OPENSSL_free() to avoid problems.
+  
+  Reported-by: Harold Stuart
+  Fixes #1005
 
-- configure: add crypt32.lib for winssl builds
+- http2: support > 64bit sized uploads
   
-  Necessary since 6cabd78531f
+  ... by making sure we don't count down the "upload left" counter when the
+  uploaded size is unknown and then it can be allowed to continue forever.
+  
+  Fixes #996
 
-- Makefile.vc: link with crypt32.lib for winssl builds
+Jay Satiro (7 Sep 2016)
+- errors: new alias CURLE_WEIRD_SERVER_REPLY (8)
   
-  Necessary since 6cabd78531f
+  Since we're using CURLE_FTP_WEIRD_SERVER_REPLY in imap, pop3 and smtp as
+  more of a generic "failed to parse" introduce an alias without FTP in
+  the name.
   
-  Fixes #853
+  Closes https://github.com/curl/curl/pull/975
 
-- [Joel Depooter brought this change]
+Daniel Stenberg (7 Sep 2016)
+- bump: toward 7.51.0
 
-  VC: Add crypt32.lib to Visual Sudio project template files
-  
-  Closes #854
+- HISTORY: remove ascii logo to render nicer on web
 
-- vc: fix the build for schannel certinfo support
-  
-  Broken since 6cabd785, which adds use of the Curl_extract_certinfo
-  function from the x509asn1.c file.
+- curl: whitelist use of strtok() in non-threaded context
 
-- typedefs: use the full structs in internal code...
+- checksrc: detect strtok() use
   
-  ... and save the typedef'ed names for headers and external APIs.
+  ... as that function slipped through once before.
 
-- internals: rename the SessionHandle struct to Curl_easy
+GitHub (7 Sep 2016)
+- [Viktor Szakats brought this change]
 
-- headers: forward declare CURL, CURLM and CURLSH as structs
-  
-  Instead of typedef'ing to void, typedef to their corresponding actual
-  struct names to allow compilers to type-check.
+  mk-ca-bundle.pl: use SHA256 instead of SHA1
   
-  Assisted-by: Reinhard Max
+  This hash is used to verify the original downloaded certificate bundle
+  and also included in the generated bundle's comment header. Also
+  rename related internal symbols to algorithm-agnostic names.
 
-Jay Satiro (22 Jun 2016)
-- vtls: Only call add/getsession if session id is enabled
+Version 7.50.2 (7 Sep 2016)
+
+Daniel Stenberg (7 Sep 2016)
+- RELEASE-NOTES: curl 7.50.2 release
+
+- THANKS: updated for 7.50.2
+
+Jay Satiro (6 Sep 2016)
+- [Gaurav Malhotra brought this change]
+
+  openssl: fix CURLINFO_SSL_VERIFYRESULT
   
-  Prior to this change we called Curl_ssl_getsessionid and
-  Curl_ssl_addsessionid regardless of whether session ID reusing was
-  enabled. According to comments that is in case session ID reuse was
-  disabled but then later enabled.
+  CURLINFO_SSL_VERIFYRESULT does not get the certificate verification
+  result when SSL_connect fails because of a certificate verification
+  error.
   
-  The old way was not intuitive and probably not something users expected.
-  When a user disables session ID caching I'd guess they don't expect the
-  session ID to be cached anyway in case the caching is later enabled.
+  This fix saves the result of SSL_get_verify_result so that it is
+  returned by CURLINFO_SSL_VERIFYRESULT.
+  
+  Closes https://github.com/curl/curl/pull/995
 
-Daniel Stenberg (22 Jun 2016)
-- curl.1: the used progress meter suffix is k in lower case
+Daniel Stenberg (6 Sep 2016)
+- [Daniel Gustafsson brought this change]
+
+  darwinssl: test for errSecSuccess in PKCS12 import rather than noErr (#993)
   
-  Closes #883
+  While noErr and errSecSuccess are defined as the same value, the API
+  documentation states that SecPKCS12Import() returns errSecSuccess if
+  there were no errors in importing. Ensure that a future change of the
+  defined value doesn't break (however unlikely) and be consistent with
+  the API docs.
+
+- [Daniel Gustafsson brought this change]
+
+  docs: Fix link to CONTRIBUTE in Github contribution guidelines (#994)
 
-- [Sergei Nikulov brought this change]
+- [Marcel Raad brought this change]
 
-  cmake: now using BUILD_TESTING=ON/OFF
+  openssl: Fix compilation with OPENSSL_API_COMPAT=0x10100000L
   
-  CMake build now using BUILD_TESTING=ON/OFF (default is OFF) to build
-  tests and enabling CTest integration. Options BUILD_CURL_TESTS and
-  BUILD_DASHBOARD_REPORTS was removed.
+  With OPENSSL_API_COMPAT=0x10100000L (OpenSSL 1.1 API), the cleanup
+  functions are unavailable (they're no-ops anyway in OpenSSL 1.1). The
+  replacements for SSL_load_error_strings, SSLeay_add_ssl_algorithms, and
+  OpenSSL_add_all_algorithms are called automatically [1][2]. SSLeay() is
+  now called OpenSSL_version_num().
   
-  Closes #882
+  [1]: https://www.openssl.org/docs/man1.1.0/ssl/OPENSSL_init_ssl.html
+  [2]: https://www.openssl.org/docs/man1.1.0/crypto/OPENSSL_init_crypto.html
   
-  Reviewed-by: Brad King
+  Closes #992
 
-- [Michael Kaufmann brought this change]
+- RELEASE-NOTES: synced with 3d4c0c8b9bc1d
 
-  cleanup: fix method names in code comments
+- http2: return EOF when done uploading without known size
   
-  Closes #887
+  Fixes #982
 
-Kamil Dudka (21 Jun 2016)
-- curl-compilers.m4: improve detection of GCC's -fvisibility= flag
-  
-  Some builds of GCC produce output on both stdout and stderr when --help
-  --verbose is used.  The 2>&1 redirection caused them to be arbitrarily
-  interleaved with each other because of stream buffering.  Consequently,
-  grep failed to match the fvisibility= string in the mixed output, even
-  though the string was present in GCC's standard output.
-  
-  This led to silently disabling symbol hiding in some builds of curl.
+- http2: skip the content-length parsing, detect unknown size
 
-Daniel Stenberg (19 Jun 2016)
-- tests: fix the HTTP/2 tests
-  
-  The HTTP/2 tests brought with commit bf05606ef1f were using the internal
-  name 'http2' for the HTTP/2 server, while in fact that name was already
-  used for the second instance of the HTTP server. This made tests using
-  the second instance (like test 2050) fail after a HTTP/2 test had run.
-  
-  The server is now known as HTTP/2 internally and within the <server>
-  section in test cases. 1700, 1701 and 1702 were updated accordingly.
+- http2: minor white space edit
 
-- openssl: use more 'const' to fix build warnings with 1.1.0 branch
+- http2: use named define instead of magic constant in read callback
 
-- curl.1: missed 'T' in the progress unit suffixes
+- [Craig Davison brought this change]
 
-- curl.1: mention the unix for the progress meter
+  configure: make the cpp -P detection not clobber CPPFLAGS
+  
+  CPPPFLAGS is now CPPPFLAG. Fixes CURL_CHECK_DEF.
+  
+  Fixes #958
 
-Patrick Monnerat (16 Jun 2016)
-- os400: add new definitions to ILE/RPG binding.
+- [Olivier Brunel brought this change]
 
-Daniel Stenberg (16 Jun 2016)
-- openssl: fix cert check with non-DNS name fields present
+  speed caps: not based on average speeds anymore
   
-  Regression introduced in 5f5b62635 (released in 7.48.0)
+  Speed limits (from CURLOPT_MAX_RECV_SPEED_LARGE &
+  CURLOPT_MAX_SEND_SPEED_LARGE) were applied simply by comparing limits
+  with the cumulative average speed of the entire transfer; While this
+  might work at times with good/constant connections, in other cases it
+  can result to the limits simply being "ignored" for more than "short
+  bursts" (as told in man page).
   
-  Reported-by: Fabian Ruff
-  Fixes #875
+  Consider a download that goes on much slower than the limit for some
+  time (because bandwidth is used elsewhere, server is slow, whatever the
+  reason), then once things get better, curl would simply ignore the limit
+  up until the average speed (since the beginning of the transfer) reached
+  the limit.  This could prove the limit useless to effectively avoid
+  using the entire bandwidth (at least for quite some time).
+  
+  So instead, we now use a "moving starting point" as reference, and every
+  time at least as much as the limit as been transferred, we can reset
+  this starting point to the current position. This gets a good limiting
+  effect that applies to the "current speed" with instant reactivity (in
+  case of sudden speed burst).
+  
+  Closes #971
 
-Dan Fandrich (16 Jun 2016)
-- axtls: Use Curl_wait_ms instead of the less-portable usleep
+- HISTORY.md: the multi socket was put in the wrong year!
 
-- axtls: Fixed compile after compile 31c521b0
+- [Mark Hamilton brought this change]
 
-- tests: Added HTTP proxy keywords to tests 1141 & 1142
+  tool_helpers.c: fix comment typo (#989)
 
-Jay Satiro (15 Jun 2016)
-- [Sergei Nikulov brought this change]
+- [Mark Hamilton brought this change]
 
-  cmake: Fix build with winldap
-  
-  Bug: https://github.com/curl/curl/pull/874
-  Reported-by: Sergei Nikulov
+  libtest/test.h: fix typo (#988)
 
-- CURLOPT_POSTFIELDS.3: Clarify what happens when set empty
+- CURLMOPT_PIPELINING.3: language
+
+- CURLMOPT_PIPELINING.3: extended and clarified
   
-  When CURLOPT_POSTFIELDS is set to an empty string libcurl will send a
-  zero-byte POST. Prior to this change it was documented as sending data
-  from the read callback.
+  Especially in regards to the multiplexing part.
+
+Steve Holme (31 Aug 2016)
+- curl_sspi.c: Updated function description comments
   
-  This also changes the wording of what happens when empty or NULL so that
-  it's hopefully easier to understand for people whose primary language
-  isn't English.
+  * Added description to Curl_sspi_free_identity()
+  * Added parameter and return explanations to Curl_sspi_global_init()
+  * Added parameter explaination to Curl_sspi_global_cleanup()
+
+- README: Corrected the supported Visual Studio versions
   
-  Bug: https://github.com/curl/curl/issues/862
-  Reported-by: Askar Safin
+  Missed from commit 8356022d17.
 
-- [Michael Wallner brought this change]
+- KNOWN_BUGS: Move the Visual Studio project shortcomings from local README
 
-  curl_multi_socket_action.3: Fix rewording
-  
-  - Remove some erroneous text.
+- KNOWN_BUGS: Expand 6.4 to include Kerberos V5
   
-  Closes https://github.com/curl/curl/pull/865
-
-- [Luo Jinghua brought this change]
+  ...and discuss a possible solution.
 
-  resolve: enable protocol family logic for synthesized IPv6
+Daniel Stenberg (30 Aug 2016)
+- connect: fix #ifdefs for debug versions of conn/streamclose() macros
   
-  - Enable protocol family logic for IPv6 resolves even when support
-  for synthesized addresses is enabled.
+  CURLDEBUG is for the memory debugging
   
-  This is a follow up to the parent commit that added support for
-  synthesized IPv6 addresses from IPv4 on iOS/OS X. The protocol family
-  logic needed for IPv6 was inadvertently excluded if support for
-  synthesized addresses was enabled.
+  DEBUGBUILD is for the extra debug stuff
   
-  Bug: https://github.com/curl/curl/issues/863
-  Ref: https://github.com/curl/curl/pull/866
-  Ref: https://github.com/curl/curl/pull/867
+  Pointed-out-by: Steve Holme
 
-Daniel Stenberg (7 Jun 2016)
-- [Luo Jinghua brought this change]
+- KNOWN_BUGS: mention some cmake "support gaps"
 
-  resolve: add support for IPv6 DNS64/NAT64 Networks on OS X + iOS
-  
-  Use getaddrinfo() to resolve the IPv4 address literal on iOS/Mac OS X.
-  If the current network interface doesn’t support IPv4, but supports
-  IPv6, NAT64, and DNS64.
+Nick Zitzmann (28 Aug 2016)
+- darwinssl: add documentation stating that the --cainfo option is intended for backward compatibility only
   
-  Closes #866
-  Fixes #863
+  In other news, I changed one other reference to "Mac OS X" in the documentation (that I previously wrote) to say "macOS" instead.
 
-- tests: two more HTTP/2 tests
+Daniel Stenberg (28 Aug 2016)
+- http2: return CURLE_HTTP2_STREAM for unexpected stream close
   
-  1701 and 1702
+  Follow-up to c3e906e9cd0f, seems like a more appropriate error code
+  
+  Suggested-by: Jay Satiro
 
-- runtests: don't display logs when http2 server fails to start
+- [Tatsuhiro Tsujikawa brought this change]
 
-- runtests: make stripfile work on stdout as well
+  http2: handle closed streams when uploading
   
-  ... and have test 1700 use that to strip out the nghttpx server: headers
+  Fixes #986
 
-- http2-tests: test1700 is the first real HTTP/2 test
+- http2: make sure stream errors don't needlessly close the connection
   
-  It requires that 'nghttpx' is in the PATH, and it will run the tests
-  using nghttpx as a front-end proxy in front of the standard HTTP/1 test
-  server. This uses HTTP/2 over plain TCP.
+  With HTTP/2 each transfer is made in an indivial logical stream over the
+  connection, making most previous errors that caused the connection to get
+  forced-closed now instead just kill the stream and not the connection.
   
-  If you like me have nghttpx installed in a custom path, you can run test 1700
-  like this:
+  Fixes #941
+
+- Curl_verify_windows_version: minor edit to avoid compiler warnings
   
-  $ PATH=$PATH:$HOME/build-nghttp2/bin/ ./runtests.pl 1700
+  ... instead of if() before the switch(), add a default to the switch so
+  that the compilers don't warn on "warning: enumeration value
+  'PLATFORM_DONT_CARE' not handled in switch" anymore.
 
-- RELEASE-NOTES: synced with 34855feeb4c299
+Steve Holme (27 Aug 2016)
+- RELEASE-NOTES: Added missing fix from commit 15592143f
 
-Steve Holme (6 Jun 2016)
-- schannel: Disable ALPN on Windows < 8.1
+Jay Satiro (26 Aug 2016)
+- schannel: Disable ALPN for Wine since it is causing problems
   
-  Calling QueryContextAttributes with SECPKG_ATTR_APPLICATION_PROTOCOL
-  fails on Windows < 8.1 so we need to disable ALPN on these OS versions.
+  - Disable ALPN on Wine.
   
-  Inspiration provide by: Daniel Seither
+  - Don't pass input secbuffer when ALPN is disabled.
   
-  Closes #848
-  Fixes #840
-
-Jay Satiro (5 Jun 2016)
-- checksrc: Add LoadLibrary to the banned functions list
+  When ALPN support was added a change was made to pass an input secbuffer
+  to initialize the context. When ALPN is enabled the buffer contains the
+  ALPN information, and when it's disabled the buffer is empty. In either
+  case this input buffer caused problems with Wine and connections would
+  not complete.
   
-  LoadLibrary was supplanted by Curl_load_library for security
-  reasons in 6df916d.
+  Bug: https://github.com/curl/curl/issues/983
+  Reported-by: Christian Fillion
 
-- http: Fix HTTP/2 connection reuse
+Kamil Dudka (26 Aug 2016)
+- [Peter Wang brought this change]
+
+  nss: work around race condition in PK11_FindSlotByName()
   
-  - Change the parser to not require a minor version for HTTP/2.
+  Serialise the call to PK11_FindSlotByName() to avoid spurious errors in
+  a multi-threaded environment. The underlying cause is a race condition
+  in nssSlot_IsTokenPresent().
   
-  HTTP/2 connection reuse broke when we changed from HTTP/2.0 to HTTP/2
-  in 8243a95 because the parser still expected a minor version.
+  Bug: https://bugzilla.mozilla.org/1297397
   
-  Bug: https://github.com/curl/curl/issues/855
-  Reported-by: Andrew Robbins, Frank Gevaerts
+  Closes #985
 
-Steve Holme (4 Jun 2016)
-- connect.c: Fixed compilation warning from commit 332e8d6164
+- nss: refuse previously loaded certificate from file
   
-  connect.c:952:5: warning: suggest explicit braces to avoid ambiguous 'else'
+  ... when we are not asked to use a certificate from file
 
-- win32: Used centralised verify windows version function
-  
-  Closes #845
+Daniel Stenberg (26 Aug 2016)
+- ftp_done: remove dead code
 
-- win32: Added verify windows version functionality
+- TLS: random file/egd doesn't have to match for conn reuse
 
-- win32: Introduced centralised verify windows version function
+- test161: add comment for the exit code
 
-Kamil Dudka (3 Jun 2016)
-- tool_urlglob: fix off-by-one error in glob_parse()
-  
-  ... causing SIGSEGV while parsing URL with too many globs.
-  Minimal example:
+Dan Fandrich (26 Aug 2016)
+- test219: Add http as a required feature
+
+Daniel Stenberg (25 Aug 2016)
+- [Michael Kaufmann brought this change]
+
+  HTTP: stop parsing headers when switching to unknown protocols
   
-  $ curl $(for i in $(seq 101); do printf '{a}'; done)
+  - unknown protocols probably won't send more headers (e.g. WebSocket)
+  - improved comments and moved them to the correct case statements
   
-  Reported-by: Romain Coltel
-  Bug: https://bugzilla.redhat.com/1340757
-
-Daniel Stenberg (1 Jun 2016)
-- [Benjamin Kircher brought this change]
+  Closes #899
 
-  libcurl-multi.3: fix small typo
+- openssl: make build with 1.1.0 again
   
-  Closes #850
+  synced with OpenSSL git master commit cc06906707
 
-- [Viktor Szakats brought this change]
+- INTERNALS: fix title
 
-  makefile.m32: add crypt32 for winssl builds
+- configure: detect zlib with our pkg-config macros
   
-  Dependency added by 6cabd78
+  ... instead of relying on the pkg-config autoconf macros to be present.
   
-  Closes #849
+  Fixes #972 (again...)
 
-- [Ivan Avdeev brought this change]
+Jay Satiro (25 Aug 2016)
+- http2: Remove incorrect comments
+  
+  .. also remove same from scp
 
-  vtls: fix ssl session cache race condition
+Daniel Stenberg (23 Aug 2016)
+- [Ales Novak brought this change]
+
+  ftp: fix wrong poll on the secondary socket
   
-  Sessionid cache management is inseparable from managing individual
-  session lifetimes. E.g. for reference-counted sessions (like those in
-  SChannel and OpenSSL engines) every session addition and removal
-  should be accompanied with refcount increment and decrement
-  respectively. Failing to do so synchronously leads to a race condition
-  that causes symptoms like use-after-free and memory corruption.
-  This commit:
-   - makes existing session cache locking explicit, thus allowing
-     individual engines to manage lock's scope.
-   - fixes OpenSSL and SChannel engines by putting refcount management
-     inside this lock's scope in relevant places.
-   - adds these explicit locking calls to other engines that use
-     sessionid cache to accommodate for this change. Note, however,
-     that it is unknown whether any of these engines could also have
-     this race.
+  When we're uploading using FTP and the server issues a tiny pause
+  between opening the connection to the client's secondary socket, the
+  client's initial poll() times out, which leads to second poll() which
+  does not wait for POLLIN on the secondary socket. So that poll() also
+  has to time out, creating a long (200ms) pause.
   
-  Bug: https://github.com/curl/curl/issues/815
-  Fixes #815
-  Closes #847
+  This patch adds the correct flag to the secondary socket, making the
+  second poll() correctly wait for the connection there too.
+  
+  Signed-off-by: Ales Novak <alnovak@suse.cz>
+  
+  Closes #978
 
-- [Andrew Kurushin brought this change]
+- RELEASE-NOTES: synced with 95ded2c56
 
-  schannel: add CURLOPT_CERTINFO support
+- configure: make it work without PKG_CHECK_MODULES
   
-  Closes #822
-
-- RELEASE-NOTES: synced with 142ee9fa15002315
+  With commit c2f9b78 we added a new dependency on pkg-config for
+  developers which may be unwanted. This change make the configure script
+  still work as before if pkg-config isn't installed, it'll just use the
+  old zlib detection logic without pkg-config.
+  
+  Reported-by: Marc Hörsken
+  
+  Fixes #972
 
-- openssl: rename the private SSL_strerror
+Marc Hoersken (21 Aug 2016)
+- Revert "KNOWN_BUGS: SOCKS proxy not working via IPv6"
   
-  ... to make it not look like an OpenSSL function
+  This reverts commit 9cb1059f92286a6eb5d28c477fdd3f26aed1d554.
+  
+  As discussed in #835 SOCKS5 supports IPv6 proxies and destinations.
 
-- [Michael Kaufmann brought this change]
+Daniel Stenberg (21 Aug 2016)
+- [Marco Deckel brought this change]
 
-  openssl: Use correct buffer sizes for error messages
+  win: Basic support for Universal Windows Platform apps
   
-  Closes #844
+  Closes #820
 
-- curl: fix -q [regression]
+Steve Holme (21 Aug 2016)
+- sasl: Don't use GSSAPI authentication when domain name not specified
   
-  This broke in 7.49.0 with commit e200034425a7625
+  Only choose the GSSAPI authentication mechanism when the user name
+  contains a Windows domain name or the user is a valid UPN.
   
-  Fixes #842
+  Fixes #718
 
-- URL parser: allow URLs to use one, two or three slashes
+- vauth: Added check for supported SSPI based authentication mechanisms
   
-  Mostly in order to support broken web sites that redirect to broken URLs
-  that are accepted by browsers.
+  Completing commit 00417fd66c and 2708d4259b.
+
+- http.c: Remove duplicate (authp->avail & CURLAUTH_DIGEST) check
   
-  Browsers are typically even more leniant than this as the WHATWG URL
-  spec they should allow an _infinite_ amount. I tested 8000 slashes with
-  Firefox and it just worked.
+  From commit 2708d4259b.
+
+Marc Hoersken (20 Aug 2016)
+- socks.c: display the hostname returned by the SOCKS5 proxy server
   
-  Added test case 1141, 1142 and 1143 to verify the new parser.
+  Instead of displaying the requested hostname the one returned
+  by the SOCKS5 proxy server is used in case of connection error.
+  The requested hostname is displayed earlier in the connection sequence.
   
-  Closes #791
-
-- [Renaud Lehoux brought this change]
+  The upper-value of the port is moved to a temporary variable and
+  replaced with a 0-byte to make sure the hostname is 0-terminated.
 
-  cmake: Added missing mbedTLS support
+Steve Holme (20 Aug 2016)
+- urldata.h: Corrected comment for httpcode which is also populated by SMTP
   
-  Closes #837
+  As of 7.25.0 and commit 5430007222.
 
-- [Renaud Lehoux brought this change]
+Marc Hoersken (20 Aug 2016)
+- socks.c: use Curl_printable_address in SOCKS5 connection sequence
+  
+  Replace custom string formatting with Curl_printable_address.
+  Add additional debug and error output in case of failures.
 
-  mbedtls: removed unused variables
+- socks.c: align SOCKS4 connection sequence with SOCKS5
   
-  Closes #838
+  Calling sscanf is not required since the raw IPv4 address is
+  available and the protocol can be detected using ai_family.
 
-- [Frank Gevaerts brought this change]
+Steve Holme (20 Aug 2016)
+- http.c: Corrected indentation change from commit 2708d4259b
+  
+  Made by Visual Studio's auto-correct feature and missed by me in my own
+  code reviews!
 
-  http: add CURLINFO_HTTP_VERSION and %{http_version}
+- http: Added calls to Curl_auth_is_<mechansism>_supported()
   
-  Adds access to the effectively used http version to both libcurl and
-  curl.
+  Hooked up the HTTP authentication layer to query the new 'is mechanism
+  supported' functions when deciding what mechanism to use.
   
-  Closes #799
+  As per commit 00417fd66c existing functionality is maintained for now.
 
-- bump: start the journey toward 7.50.0
+Marc Hoersken (20 Aug 2016)
+- socks.c: improve verbose output of SOCKS5 connection sequence
 
-- [Marcel Raad brought this change]
+- configure.ac: add missing quotes to PKG_CHECK_MODULES
 
-  openssl: fix build with OPENSSL_NO_COMP
+Steve Holme (20 Aug 2016)
+- sasl: Added calls to Curl_auth_is_<mechansism>_supported()
   
-  With OPENSSL_NO_COMP defined, there is no function
-  SSL_COMP_free_compression_methods
+  Hooked up the SASL authentication layer to query the new 'is mechanism
+  supported' functions when deciding what mechanism to use.
   
-  Closes #836
+  For now existing functionality is maintained.
 
-- [Gisle Vanem brought this change]
+Daniel Stenberg (19 Aug 2016)
+- [Miroslav Franc brought this change]
 
-  memdebug: fix MSVC crash with -DMEMDEBUG_LOG_SYNC
-  
-  Fixes #828
+  spnego_sspi: fix memory leak in case *outlen is zero (#970)
 
-- [Jonathan brought this change]
+- CURLMOPT_MAX_TOTAL_CONNECTIONS.3: mention it can also multiplex
 
-  README.md: polish
+Steve Holme (18 Aug 2016)
+- vauth: Introduced Curl_auth_is_<mechansism>_supported() functions
   
-  Closes #834
-
-- RELEASE-NOTES: fix vuln link
+  As Windows SSPI authentication calls fail when a particular mechanism
+  isn't available, introduced these functions for DIGEST, NTLM, Kerberos 5
+  and Negotiate to allow both HTTP and SASL authentication the opportunity
+  to query support for a supported mechanism before selecting it.
+  
+  For now each function returns TRUE to maintain compatability with the
+  existing code when called.
 
-Version 7.49.1 (30 May 2016)
+Daniel Stenberg (18 Aug 2016)
+- test1144: verify HEAD with body-only response
 
-Daniel Stenberg (30 May 2016)
-- RELEASE-NOTES: 7.49.1
+Steve Holme (17 Aug 2016)
+- RELEASE-PROCEDURE: Added some more future release dates
+  
+  ...and removed some old ones
 
-- [Steve Holme brought this change]
+Daniel Stenberg (17 Aug 2016)
+- [David Woodhouse brought this change]
 
-  loadlibrary: Only load system DLLs from the system directory
+  curl: allow "pkcs11:" prefix for client certificates
   
-  Inspiration provided by: Daniel Stenberg and Ray Satiro
+  RFC7512 provides a standard method to reference certificates in PKCS#11
+  tokens, by means of a URI starting 'pkcs11:'.
   
-  Bug: https://curl.haxx.se/docs/adv_20160530.html
+  We're working on fixing various applications so that whenever they would
+  have been able to use certificates from a file, users can simply insert
+  a PKCS#11 URI instead and expect it to work. This expectation is now a
+  part of the Fedora packaging guidelines, for example.
   
-  Ref: Windows DLL hijacking with curl, CVE-2016-4802
+  This doesn't work with cURL because of the way that the colon is used
+  to separate the certificate argument from the passphrase. So instead of
+  
+     curl -E 'pkcs11:manufacturer=piv_II;id=%01' …
+  
+  I instead need to invoke cURL with the colon escaped, like this:
+  
+     curl -E 'pkcs11\:manufacturer=piv_II;id=%01' …
+  
+  This is suboptimal because we want *consistency* — the URI should be
+  usable in place of a filename anywhere, without having strange
+  differences for different applications.
+  
+  This patch therefore disables the processing in parse_cert_parameter()
+  when the string starts with 'pkcs11:'. It means you can't pass a
+  passphrase with an unescaped PKCS#11 URI, but there's no need to do so
+  because RFC7512 allows a PIN to be given as a 'pin-value' attribute in
+  the URI itself.
+  
+  Also, if users are already using RFC7512 URIs with the colon escaped as
+  in the above example — even providing a passphrase for cURL to handling
+  instead of using a pin-value attribute, that will continue to work
+  because their string will start 'pkcs11\:' and won't match the check.
+  
+  What *does* break with this patch is the extremely unlikely case that a
+  user has a file which is in the local directory and literally named
+  just "pkcs11", and they have a passphrase on it. If that ever happened,
+  the user would need to refer to it as './pkcs11:<passphrase>' instead.
 
-- ssh: fix version number check typo
+- nss: make the global variables static
 
-Jay Satiro (29 May 2016)
-- curl_share_setopt.3: Add min ver needed for ssl session lock
+- openssl: use regular malloc instead of OPENSSL_malloc
   
-  Bug: https://github.com/curl/curl/issues/826
-  Reported-by: Michael Wallner
+  This allows for better memmory debugging and torture tests.
 
-Daniel Stenberg (29 May 2016)
-- ssh: fix build for libssh2 before 1.2.6
+- proxy: fix tests as follow-up to 93b0d907d5
+  
+  This fixes tests that were added after 113f04e664b as the tests would
+  fail otherwise.
+  
+  We bring back "Proxy-Connection: Keep-Alive" now unconditionally to fix
+  regressions with old and stupid proxies, but we could possibly switch to
+  using it only for CONNECT or only for NTLM in a future if we want to
+  gradually reduce it.
   
-  The statvfs functionality was added to libssh2 in that version, so we
-  switch off that functionality when built with older libraries.
+  Fixes #954
   
-  Fixes #831
+  Reported-by: János Fekete
 
-- mbedtls: fix includes so snprintf() works
-  
-  Regression from the previous *printf() rearrangements, this file missed to
-  include the correct header to make sure snprintf() works universally.
+- Revert "Proxy-Connection: stop sending this header by default"
   
-  Reported-by: Moti Avrahami
-  Bug: https://curl.haxx.se/mail/lib-2016-05/0196.html
+  This reverts commit 113f04e664b16b944e64498a73a4dab990fe9a68.
 
-Steve Holme (23 May 2016)
-- checksrc.pl: Added variants of strcat() & strncat() to banned function list
+- CURLOPT_PROXY.3: unsupported schemes cause errors now
   
-  Added support for checking the tchar, unicode and mbcs variants of
-  strcat() and strncat() in the banned function list.
-
-Daniel Stenberg (23 May 2016)
-- smtp: minor ident (white space) fixes
+  Follow-up to a96319ebb9 (document the new behavior)
 
-- THANKS: updated after script fixes
-  
-  Now giving credit properly to github user names, fixed some UTF-8 issues
-  and added names discovered when contrithanks was improved.
+- tests/README: mention nghttpx for HTTP/2 tests
 
-- THANKS-filter: more name cleanups
+- README.md: add our CII Best Practices badge
 
-- contrithanks.sh: exclude existing names case insensitively
+- proxy: polished the error message for unsupported schemes
+  
+  Follow up to a96319ebb93
 
-- contrithanks.sh: use same grep pattern and -a flag as contributors.sh
+- test219: verify unsupported scheme for proxies get rejected
 
-- contributors.sh: better grep pattern, use grep -a
+- proxy: reject attempts to use unsupported proxy schemes
+  
+  I discovered some people have been using "https://example.com" style
+  strings as proxy and it "works" (curl doesn't complain) because curl
+  ignores unknown schemes and then assumes plain HTTP instead.
+  
+  I think this misleads users into believing curl uses HTTPS to proxies
+  when it doesn't. Now curl rejects proxy strings using unsupported
+  schemes instead of just ignoring and defaulting to HTTP.
 
-- THANKS-filter: fix more names
+- RELEASE-NOTES: synced with b7ee5316c2fd5b
 
-- contrithanks.sh: do the same github fix as contributors.sh
+Marc Hoersken (14 Aug 2016)
+- socks.c: Correctly calculate position of port in response packet
   
-  from 1577bfa35ba
+  Third commit to fix issue #944 regarding SOCKS5 error handling.
+  
+  Reported-by: David Kalnischkies
 
-Jay Satiro (23 May 2016)
-- contributors: Show GitHub username if real name unknown
+- socks.c: Do not modify and invalidate calculated response length
   
-  Prior to this change if a GitHub contributor's real name was unknown
-  they would be omitted from the list.
+  Second commit to fix issue #944 regarding SOCKS5 error handling.
   
-  Bug: https://github.com/curl/curl/issues/824
-
-Daniel Stenberg (21 May 2016)
-- RELEASE-NOTES: synced with 3caaeffbe8ded4
+  Reported-by: David Kalnischkies
 
-Jay Satiro (20 May 2016)
-- openssl: cleanup must free compression methods
+- socks.c: Move error output after reading the whole response packet
   
-  - Free compression methods if OpenSSL 1.0.2 to avoid a memory leak.
+  First commit to fix issue #944 regarding SOCKS5 error handling.
   
-  Bug: https://github.com/curl/curl/issues/817
-  Reported-by: jveazey@users.noreply.github.com
+  Reported-by: David Kalnischkies
 
-Daniel Stenberg (20 May 2016)
-- [Gisle Vanem brought this change]
+Daniel Stenberg (13 Aug 2016)
+- [Ronnie Mose brought this change]
 
-  curl_multibyte: fix compiler error
+  MANUAL: Remove invalid link to LDAP documentation (#962)
   
-  While compiling lib/curl_multibyte.c with '-DUSE_WIN32_IDN' etc. I was
-  getting:
+  The server developer.netscape.com does not resolve into any
+  ip address and can be removed.
+
+Jay Satiro (13 Aug 2016)
+- openssl: accept subjectAltName iPAddress if no dNSName match
   
-  f:\mingw32\src\inet\curl\lib\memdebug.h(38): error C2054: expected '('
-  to follow 'CURL_EXTERN'
+  Undo change introduced in d4643d6 which caused iPAddress match to be
+  ignored if dNSName was present but did not match.
   
-  f:\mingw32\src\inet\curl\lib\memdebug.h(38): error C2085:
-  'curl_domalloc': not in formal parameter list
-
-- THANKS-filter: make Jan-E get proper credit
-
-- [Jan-E brought this change]
-
-  winbuild/Makefile.vc: Fix check on SSL, MBEDTLS, WINSSL exclusivity
+  Also, if iPAddress is present but does not match, and dNSName is not
+  present, fail as no-match. Prior to this change in such a case the CN
+  would be checked for a match.
   
-  Closes #818
+  Bug: https://github.com/curl/curl/issues/959
+  Reported-by: wmsch@users.noreply.github.com
 
-- [Alexander Traud brought this change]
+Daniel Stenberg (12 Aug 2016)
+- [Dambaev Alexander brought this change]
 
-  libcurl.m4: Avoid obsolete warning
+  configure.ac: add zlib search with pkg-config
   
-  Closes #821
+  Closes #956
 
-Jay Satiro (20 May 2016)
-- [Michael Kaufmann brought this change]
+- rtsp: ignore whitespace in session id
+  
+  Follow-up to e577c43bb to fix test case 569 brekage: stop the parser at
+  whitespace as well.
+  
+  Help-by: Erik Janssen
 
-  CURLOPT_CONNECT_TO.3: user must not free the list prematurely
+- HTTP: retry failed HEAD requests too
   
-  The connect-to list isn't copied so as long as the handle may be used
-  for a transfer the list must be valid.
+  Mark's new document about HTTP Retries
+  (https://mnot.github.io/I-D/httpbis-retry/) made me check our code and I
+  spotted that we don't retry failed HEAD requests which seems totally
+  inconsistent and I can't see any reason for that separate treatment.
   
-  Bug: https://github.com/curl/curl/pull/819
-  Reported-by: Michael Kaufmann
+  So, no separate treatment for HEAD starting now. A HTTP request sent
+  over a reused connection that gets cut off before a single byte is
+  received will be retried on a fresh connection.
+  
+  Made-aware-by: Mark Nottingham
 
-Daniel Stenberg (19 May 2016)
-- RELEASE-NOTES: synced with 48114a8634242c
+- mk-ca-bundle.1: document -m, added in 1.26
 
-- openssl: ERR_remove_thread_state() is deprecated in latest 1.1.0
-  
-  See OpenSSL commit 21e001747d4a
+- RELEASE-NOTES: synced with e577c43bb5
 
-- http2: use HTTP/2 in the HTTP/1.1-alike header
+- [Erik Janssen brought this change]
+
+  rtsp: accept any RTSP session id
   
-  ... when generating them, not "2.0" as the protocol is called just
-  HTTP/2 and nothing else.
+  Makes libcurl work in communication with gstreamer-based RTSP
+  servers. The original code validates the session id to be in accordance
+  with the RFC. I think it is better not to do that:
+  
+  - For curl the actual content is a don't care.
+  
+  - The clarity of the RFC is debatable, is $ allowed or only as \$, that
+    is imho not clear
+  
+  - Gstreamer seems to url-encode the session id but % is not allowed by
+  the RFC
+  
+  - less code
+  
+  With this patch curl will correctly handle real-life lines like:
+  Session: biTN4Kc.8%2B1w-AF.; timeout=60
+  
+  Bug: https://curl.haxx.se/mail/lib-2016-08/0076.html
 
-Jay Satiro (19 May 2016)
-- dist: include curl_multi_socket_all.3
+- symbols-in-versions: add CURL_STRICTER
   
-  Closes https://github.com/curl/curl/pull/816
+  Added in 5fce88aa8c12564
 
-Steve Holme (18 May 2016)
-- bump: Start work on 7.49.1
+- [Simon Warta brought this change]
 
-Daniel Stenberg (18 May 2016)
-- curlbuild.h.dist: check __LP64__ as well to fix MIPS build
+  winbuild: Allow changing C compiler via environment variable CC (#952)
   
-  The preprocessor check that sets up the 32bit defines for non-configure
-  builds didn't work properly for MIPS systems as __mips__ is defined for
-  both 32bit and 64bit. Now __LP64__ is also checked and indicates 64bit.
+  This makes it possible to use specific compilers or a cache.
   
-  Reported-by: Tomas Jakobsson
-  Fixes #813
+  Sample use for clcache:
+  set CC=clcache.bat
+  nmake /f Makefile.vc DEBUG=no MODE=static VC=14 GEN_PDB=no
 
-- [Marcel Raad brought this change]
+- LICENSE-MIXING.md: switched to markdown
 
-  schannel: fix compile break with MSVC XP toolset
-  
-  For the Windows XP toolset of Visual C++ 2013/2015, the old Windows SDK
-  7.1 is used. In this case, _USING_V110_SDK71_ is defined.
-  
-  Closes #812
+- docs-make: have markdown files use .md
 
-- dist: include CHECKSRC.md
-  
-  Reported-by: Paul Howarth
-  Bug: https://curl.haxx.se/mail/lib-2016-05/0116.html
+- curl.h: make CURL_NO_OLDIES define CURL_STRICTER
 
-- test/Makefile.am: include manpage-scan.pl and nroff-scan.pl in dist
-  
-  Reported-by: Ray Satiro
-  Bug: https://curl.haxx.se/mail/lib-2016-05/0113.html
+- HISTORY.md: use markdown extension
 
-Version 7.49.0 (17 May 2016)
+- SSLCERTS.md: renamed to markdown extension
 
-Daniel Stenberg (17 May 2016)
-- THANKS: 24 new names from 7.49.0 release notes
+- INTERNALS.md: use markdown extension for markdown content
 
-- RELEASE-NOTES: 7.49.0
+- CONTRIBUTE.md: markdown extension
 
-- mbedtls/polarssl: set "hostname" unconditionally
-  
-  ...as otherwise the TLS libs will skip the CN/SAN check and just allow
-  connection to any server. curl previously skipped this function when SNI
-  wasn't used or when connecting to an IP address specified host.
-  
-  CVE-2016-3739
-  
-  Bug: https://curl.haxx.se/docs/adv_20160518A.html
-  Reported-by: Moti Avrahami
+- CONTRIBUTE: changed to markdown
 
-- [Frank Gevaerts brought this change]
+- CONTRIBUTE: refreshed
 
-  CURLOPT_RESOLVE.3: fix typo
-  
-  Closes #811
+- TODO: added an SSH section and two SFTP things to do
 
-- docs: CURLOPT_RESOLVE overrides CURLOPT_IPRESOLVE
+- TODO: remove the 1.22 duplicated item
 
-- KNOWN_BUGS: GnuTLS backend skips really long certificate fields
-  
-  Closes #762
+- TODO: move "CURLOPT_MAIL_CLIENT" to SMTP section
 
-- CURLOPT_HTTPPOST.3: the data needs to be around while in use
+- TODO: API for URL parsing/splitting
 
-- openssl: get_cert_chain: fix NULL dereference
-  
-  CID 1361815: Explicit null dereferenced (FORWARD_NULL)
+- TODO: move QUIC to the HTTP section
 
-- openssl: get_cert_chain: avoid NULL dereference
-  
-  CID 1361811: Explicit null dereferenced (FORWARD_NULL)
+- [Simon Warta brought this change]
 
-- dprintf_formatf: fix (false?) Coverity warning
+  winbuild: Free name $(CC) in Makefile (#950)
   
-  CID 1024412: Memory - illegal accesses (OVERRUN). Claimed to happen when
-  we run over 'workend' but the condition says <= workend and for all I
-  can see it should be safe. Compensating for the warning by adding a byte
-  margin in the buffer.
+  In the old line number 290, CC and CURL_CC had the same value. After
+  that, /DCURL_STATICLIB was added to CC but not CURL_CC (intended?).
   
-  Also, removed the extra brace level indentation in the code and made it
-  so that 'workend' is only assigned once within the function.
+  This gets rid of the CC variable entirely. It is a first step to make it
+  possible to manualyl set a CC variable in order to be able to change the
+  compiler.
 
-- RELEASE-NOTES: synced with 2dcb5adc72d6
+- TODO: Use huge HTTP/2 windows
 
-- THANKS-filter: fixed Jonathan Cardoso
+- [Simon Warta brought this change]
 
-Jay Satiro (15 May 2016)
-- ftp: fix incorrect out-of-memory code in Curl_pretransfer
+  winbuild: Avoid setting redundant CFLAGS to compile commands (#949)
   
-  - Return value type must match function type.
+  $(CURL_CC) is always used with $(CURL_CFLAGS) appended, so before this,
+  all arguments in CURL_CFLAGS have been added twice.
+
+Jay Satiro (8 Aug 2016)
+- cmake: Enable win32 threaded resolver by default
   
-  s/CURLM_OUT_OF_MEMORY/CURLE_OUT_OF_MEMORY/
+  - Turn on USE_THREADS_WIN32 in Windows if ares isn't on
   
-  Caught by Travis CI
+  This change is similar to what we already do in the autotools build.
 
-Daniel Stenberg (15 May 2016)
-- ftp wildcard: segfault due to init only in multi_perform
-  
-  The proper FTP wildcard init is now more properly done in Curl_pretransfer()
-  and the corresponding cleanup in Curl_close().
+- cmake: Enable win32 large file support by default
   
-  The previous place of init/cleanup code made the internal pointer to be NULL
-  when this feature was used with the multi_socket() API, as it was made within
-  the curl_multi_perform() function.
+  All compilers used by cmake in Windows should support large files.
   
-  Reported-by: Jonathan Cardoso Machado
-  Fixes #800
+  - Add test SIZEOF_OFF_T
+  - Remove outdated test SIZEOF_CURL_OFF_T
+  - Turn on USE_WIN32_LARGE_FILES in Windows
+  - Check for 'Largefile' during the features output
 
-Jay Satiro (13 May 2016)
-- libcurl-tlibcurl-thread: Update OpenSSL links
+Daniel Stenberg (7 Aug 2016)
+- TODO: added several ideas, removed SPDY
+
+- http2: always wait for readable socket
   
-  Because the old OpenSSL link now redirects to their master documentation
-  (currently 1.1.0), which does not document the required actions for
-  OpenSSL <= 1.0.2.
+  Since the server can at any time send a HTTP/2 frame to us, we need to
+  wait for the socket to be readable during all transfers so that we can
+  act on incoming frames even when uploading etc.
+  
+  Reminded-by: Tatsuhiro Tsujikawa
 
-Daniel Stenberg (13 May 2016)
-- [Viktor Szakats brought this change]
+- RELEASE-NOTES: synced with 7b4bf37a44791
 
-  darwinssl.c: fix OS X codename typo in comment
+- [Thomas Glanzmann brought this change]
 
-- RELEASE-NOTES: synced with 68701e51c1f7
+  mbedtls: set debug threshold to 4 (verbose) when MBEDTLS_DEBUG is defined
   
-  Added 8 bug fixes and 5 more contrbutors
-
-- [Jay Satiro brought this change]
+  In order to make MBEDTLS_DEBUG work, the debug threshold must be unequal
+  to 0.  This patch also adds a comment how mbedtls must be compiled in
+  order to make debugging work, and explains the possible debug levels.
 
-  mprintf: Fix processing of width and prec args
-  
-  Prior to this change a width arg could be erroneously output, and also
-  width and precision args could not be used together without crashing.
+- CURLOPT_TCP_NODELAY: now enabled by default
   
-  "%0*d%s", 2, 9, "foo"
+  After a few wasted hours hunting down the reason for slowness during a
+  TLS handshake that turned out to be because of TCP_NODELAY not being
+  set, I think we have enough motivation to toggle the default for this
+  option. We now enable TCP_NODELAY by default and allow applications to
+  switch it off.
   
-  Before: "092"
-  After: "09foo"
+  This also makes --tcp-nodelay unnecessary, but --no-tcp-nodelay can be
+  used to disable it.
   
-  "%*.*s", 5, 2, "foo"
+  Thanks-to: Tim Rühsen
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0143.html
+
+- [Serj Kalichev brought this change]
+
+  TFTP: Fix upload problem with piped input
   
-  Before: crash
-  After: "   fo"
+  When input stream for curl is stdin and input stream is not a file but
+  generated by a script then curl can truncate data transfer to arbitrary
+  size since a partial packet is treated as end of transfer by TFTP.
   
-  Test 557 is updated to verify this and more
-
-- [Michael Kaufmann brought this change]
+  Fixes #857
 
-  ConnectionExists: follow-up fix for proxy re-use
+- mk-ca-bundle.pl: -m keeps ca cert meta data in output
   
-  Follow-up commit to 5823179
+  Makes the script pass on comments holding meta data to the output
+  file. Like fingerprinters, issuer, date ranges etc.
   
-  Closes #648
+  Closes #937
 
-- [Per Malmberg brought this change]
+- multi: make Curl_expire() work with 0 ms timeouts
+  
+  Previously, passing a timeout of zero to Curl_expire() was a magic code
+  for clearing all timeouts for the handle. That is now instead made with
+  the new Curl_expire_clear() function and thus a 0 timeout is fine to set
+  and will trigger a timeout ASAP.
+  
+  This will help removing short delays, in particular notable when doing
+  HTTP/2.
 
-  darwinssl: fix certificate verification disable on OS X 10.8
+- transfer: return without select when the read loop reached maxcount
   
-  The new way of disabling certificate verification doesn't work on
-  Mountain Lion (OS X 10.8) so we need to use the old way in that version
-  too. I've tested this solution on versions 10.7.5, 10.8, 10.9, 10.10.2
-  and 10.11.
+  Regression added in 790d6de48515. The was then added to avoid one
+  particular transfer to starve out others. But when aborting due to
+  reading the maxcount, the connection must be marked to be read from
+  again without first doing a select as for some protocols (like SFTP/SCP)
+  the data may already have been read off the socket.
   
-  Closes #802
+  Reported-by: Dan Donahue
+  Bug: https://curl.haxx.se/mail/lib-2016-07/0057.html
 
-- [Cory Benfield brought this change]
+Steve Holme (3 Aug 2016)
+- [Bill Nagel brought this change]
 
-  http2: Add space between colon and header value
+  mbedtls: Added support for NTLM
+
+Daniel Stenberg (3 Aug 2016)
+- [Sergei Nikulov brought this change]
+
+  travis: removed option to rebuild autotool from source
   
-  curl's representation of HTTP/2 responses involves transforming the
-  response to a format that is similar to HTTP/1.1. Prior to this change,
-  curl would do this by separating header names and values with only a
-  colon, without introducing a space after the colon.
+  Fixes #943
+
+- bump: start working toward 7.50.2
+
+Version 7.50.1 (3 Aug 2016)
+
+Daniel Stenberg (3 Aug 2016)
+- THANKS: 7 new contributors from the 7.50.1 release
+
+- RELEASE-NOTES: 7.50.1
+
+- TLS: only reuse connections with the same client cert
   
-  While this is technically a valid way to represent a HTTP/1.1 header
-  block, it is much more common to see a space following the colon. This
-  change introduces that space, to ensure that incautious tools are safely
-  able to parse the header block.
+  CVE-2016-5420
+  Bug: https://curl.haxx.se/docs/adv_20160803B.html
+
+- TLS: switch off SSL session id when client cert is used
   
-  This also ensures that the difference between the HTTP/1.1 and HTTP/2
-  response layout is as minimal as possible.
+  CVE-2016-5419
+  Bug: https://curl.haxx.se/docs/adv_20160803A.html
+  Reported-by: Bru Rom
+  Contributions-by: Eric Rescorla and Ray Satiro
+
+- curl_multi_cleanup: clear connection pointer for easy handles
   
-  Bug: https://github.com/curl/curl/issues/797
+  CVE-2016-5421
+  Bug: https://curl.haxx.se/docs/adv_20160803C.html
+  Reported-by: Marcelo Echeverria and Fernando Muñoz
+
+- KNOWN_BUGS: SOCKS proxy not working via IPv6
   
-  Closes #798
-  Fixes #797
+  Closes #835
 
-Kamil Dudka (12 May 2016)
-- openssl: fix compile-time warning in Curl_ossl_check_cxn()
+- KNOWN_BUGS: CURLOPT_SEEKFUNCTION not called with CURLFORM_STREAM
   
-  ... introduced in curl-7_48_0-293-g2968c83:
+  Closes #768
+
+- KNOWN_BUGS: transfer-encoding: chunked in HTTP/2
   
-  Error: COMPILER_WARNING:
-  lib/vtls/openssl.c: scope_hint: In function ‘Curl_ossl_check_cxn’
-  lib/vtls/openssl.c:767:15: warning: conversion to ‘int’ from ‘ssize_t’
-  may alter its value [-Wconversion]
+  Closes #662
 
-Jay Satiro (11 May 2016)
-- openssl: stricter connection check function
+- TODO: Provide cmake config-file
   
-  - In the case of recv error, limit returning 'connection still in place'
-  to EINPROGRESS, EAGAIN and EWOULDBLOCK.
+  Closes #885
+
+Patrick Monnerat (2 Aug 2016)
+- os400: define BUILDING_LIBCURL in make script.
+
+Daniel Stenberg (1 Aug 2016)
+- RELEASE-NOTES: synced with aa9f536a18b
+
+Jay Satiro (1 Aug 2016)
+- [Thomas Glanzmann brought this change]
+
+  mbedtls: Fix debug function name
   
-  This is an improvement on the parent commit which changed the openssl
-  connection check to use recv MSG_PEEK instead of SSL_peek.
+  This patch is necessary so that curl compiles if MBEDTLS_DEBUG is
+  defined.
   
-  Ref: https://github.com/curl/curl/commit/856baf5#comments
+  Bug: https://curl.haxx.se/mail/lib-2016-08/0001.html
 
-Daniel Stenberg (11 May 2016)
-- [Anders Bakken brought this change]
+Daniel Stenberg (1 Aug 2016)
+- [Sergei Nikulov brought this change]
 
-  TLS: SSL_peek is not a const operation
+  travis: fix OSX build by re-installing libtool
   
-  Calling SSL_peek can cause bytes to be read from the raw socket which in
-  turn can upset the select machinery that determines whether there's data
-  available on the socket.
+  Apparently due to a broken homebrew install
   
-  Since Curl_ossl_check_cxn only tries to determine whether the socket is
-  alive and doesn't actually need to see the bytes SSL_peek seems like
-  the wrong function to call.
+  fixes #934
+  Closes #939
+
+- [Martin Vejnár brought this change]
+
+  win32: fix a potential memory leak in Curl_load_library
   
-  We're able to occasionally reproduce a connect timeout due to this
-  bug. What happens is that Curl doesn't know to call SSL_connect again
-  after the peek happens since data is buffered in the SSL buffer and thus
-  select won't fire for this socket.
+  If a call to GetSystemDirectory fails, the `path` pointer that was
+  previously allocated would be leaked. This makes sure that `path` is
+  always freed.
   
-  Closes #795
-
-Jay Satiro (9 May 2016)
-- [Daniel Stenberg brought this change]
+  Closes #938
 
-  TLS: move the ALPN/NPN enable bits to the connection
+- include: revert 9adf3c4 and make public types void * again
   
-  Only protocols that actually have a protocol registered for ALPN and NPN
-  should try to get that negotiated in the TLS handshake. That is only
-  HTTPS (well, http/1.1 and http/2) right now. Previously ALPN and NPN
-  would wrongly be used in all handshakes if libcurl was built with it
-  enabled.
+  Many applications assume the actual contents of the public types and use
+  that do for example forward declarations (saving them from including our
+  public header) which then breaks when we switch from void * to a struct
+  *.
   
-  Reported-by: Jay Satiro
+  I'm not convinced we were wrong, but since this practise seems
+  widespread enough I'm willing to (partly) step down.
+  
+  Now libcurl uses the struct itself when it is built and it allows
+  applications to use the struct type if CURL_STRICTER is defined at the
+  time of the #include.
   
-  Fixes #789
-
-Daniel Stenberg (8 May 2016)
-- libcurl-thread.3: openssl 1.1.0 is safe, and so is boringssl
+  Reported-by: Peter Frühberger
+  Fixes #926
 
-- [Antonio Larrosa brought this change]
+Jay Satiro (28 Jul 2016)
+- [Yonggang Luo brought this change]
 
-  connect: fix invalid "Network is unreachable" errors
-  
-  Sometimes, in systems with both ipv4 and ipv6 addresses but where the
-  network doesn't support ipv6, Curl_is_connected returns an error
-  (intermittently) even if the ipv4 socket connects successfully.
+  cmake: Fix for schannel support
   
-  This happens because there's a for-loop that iterates on the sockets but
-  the error variable is not resetted when the ipv4 is checked and is ok.
+  The check_library_exists_concat do not check crypt32 library properly.
+  So include it directly.
   
-  This patch fixes this problem by setting error to 0 when checking the
-  second socket and not having a result yet.
+  Bug: https://github.com/curl/curl/pull/917
+  Reported-by: Yonggang Luo
   
-  Fixes #794
-
-Jay Satiro (5 May 2016)
-- FAQ: refer to thread safety guidelines
+  Bug: https://github.com/curl/curl/issues/935
+  Reported-by: Alain Danteny
 
-Daniel Stenberg (3 May 2016)
-- connections: non-HTTP proxies on different ports aren't reused either
+- Revert "travis: Install libtool for OS X builds"
   
-  Reported-by: Oleg Pudeyev and fuchaoqun
+  Didn't work.
   
-  Fixes #648
+  This reverts commit 50723585ed380744358de054e2a55dccee65dfd7.
 
-- http: make sure a blank header overrides accept_decoding
+- travis: Install libtool for OS X builds
   
-  Reported-by: rcanavan
-  Assisted-by: Isaac Boukris
-  Closes #785
+  CI is failing due to missing libtoolize, so I'm trying this.
 
-- CHECKSRC.md: clarified, explained the whitelist file
+Daniel Stenberg (26 Jul 2016)
+- [Viktor Szakats brought this change]
 
-- nroff-scan.pl: verify that references are made with \fI
+  TODO: minor typo in last commit
+  
+  merged #931
 
-- docs: unified man page references to use \fI
+- TODO: Timeout idle connections from the pool
 
-- TODO: 17.14 --fail without --location should treat 3xx as a failure
+Patrick Monnerat (25 Jul 2016)
+- os400: minimum supported OS version: V6R1M0.
+  Do not log compilation informational messages.
+
+Jay Satiro (24 Jul 2016)
+- tests: Fix for http/2 feature
   
-  Closes #727
+  Bug: https://curl.haxx.se/mail/lib-2016-07/0070.html
+  Reported-by: Paul Howarth
 
-- RELEASE-NOTES: synced with 7987f5cb14d
+Steve Holme (23 Jul 2016)
+- README: Mention wolfSSL in the 'Dependencies' section
 
-- [Isaac Boukris brought this change]
+- vauth.h: No need to query HAVE_GSSAPI || USE_WINDOWS_SSPI for SPNEGO
+  
+  As SPNEGO is only defined when these pre-processor variables are defined
+  there is no need to query them explicitly.
 
-  CURLOPT_ACCEPT_ENCODING.3: Follow-up clarification
+- spnego: Corrected miss-placed * in Curl_auth_spnego_cleanup() declaration
   
-  Mention possible content-length mismatch with sum of bytes reported
-  by write callbacks when auto decoding is enabled.
+  Typo introduced in commit ad5e9bfd5d.
+
+Daniel Stenberg (22 Jul 2016)
+- SECURITY: mention how to get windows-specific CVEs
   
-  See #785
+  ... and make the distros link a proper link
 
-- test1140: run nroff-scan to verify man pages
+Dan Fandrich (21 Jul 2016)
+- test558: fix test by stripping file paths from FD lines
 
-- nroff-scan.pl: verify the .BR references as well
+Kamil Dudka (21 Jul 2016)
+- tests: distribute the http2-server.pl script, too
 
-- CURLOPT_CONV_TO_NETWORK_FUNCTION.3: fix bad man page reference
+- docs: distribute the CURLINFO_HTTP_VERSION(3) man page, too
 
-- CURLOPT_BUFFERSIZE.3: fix reference to CURLOPT_MAX_RECV_SPEED_LARGE
+Daniel Stenberg (21 Jul 2016)
+- bump: start working on 7.50.1
 
-- curl_easy_pause.3: fix man page reference
+Version 7.50.0 (21 Jul 2016)
 
-Jay Satiro (1 May 2016)
-- tool_cb_hdr: Fix --remote-header-name with schemeless URL
-  
-  - Move the existing scheme check from tool_operate.
-  
-  In the case of --remote-header-name we want to parse Content-disposition
-  for a filename, but only if the scheme is http or https. A recent
-  adjustment 0dc4d8e was made to account for schemeless URLs however it's
-  not 100% accurate. To remedy that I've moved the scheme check to the
-  header callback, since at that point the library has already determined
-  the scheme.
-  
-  Bug: https://github.com/curl/curl/issues/760
-  Reported-by: Kai Noda
+Daniel Stenberg (21 Jul 2016)
+- RELEASE-NOTES: version 7.50.0 ready
 
-Daniel Stenberg (1 May 2016)
-- tls: make setting pinnedkey option fail if not supported
+- THANKS: 13 new contributors from the 7.50.0 release
+
+Jay Satiro (21 Jul 2016)
+- winbuild: fix embedded manifest option
   
-  to make it obvious to users trying to use the feature with TLS backends
-  not supporting it.
+  Embedded manifest option didn't work due to typo.
   
-  Discussed in #781
-  Reported-by: Travis Burtrum
+  Reported-by: Stefan Kanthak
 
-- nroff-scan.pl: verifies nroff pages
+- vauth: Fix memleak by freeing credentials if out of memory
   
-  ... not used by any test yet but can be used stand-alone.
-
-- opts: fix broken/bad references
+  This is a follow up to the parent commit dcdd4be which fixes one leak
+  but creates another by failing to free the credentials handle if out of
+  memory. Also there's a second location a few lines down where we fail to
+  do same. This commit fixes both of those issues.
 
-- [Michael Kaufmann brought this change]
+Daniel Stenberg (20 Jul 2016)
+- [Saurav Babu brought this change]
 
-  docs: fix bugs in CURLOPT_HTTP_VERSION.3 and CURLOPT_PIPEWAIT.3
+  vauth: Fixed memory leak due to function returning without free
   
-  Closes #786
+  This patch allocates memory to "output_token" only when it is required
+  so that memory is not leaked if function returns.
 
-- CURLOPT_ACCEPT_ENCODING.3: clarified
+- test558: updated after ipv6-check move
   
-  As discussed in #785
+  Follow-up commit to c50980807c5 to make this test pass.
 
-- curl.1: --mail-rcpt can be used multiple times
+Jay Satiro (20 Jul 2016)
+- connect: disable TFO on Linux when using SSL
   
-  Reported-by: mgendre
-  Closes #784
-
-- [Karlson2k brought this change]
-
-  tests: Use 'pathhelp' for paths conversions in secureserver.pl
+  - Linux TFO + TLS is not implemented yet.
   
-  Closes #675
+  Bug: https://github.com/curl/curl/issues/907
 
-- [Karlson2k brought this change]
+Daniel Stenberg (19 Jul 2016)
+- ROADMAP: QUIC and TLS 1.3
 
-  tests: Use 'pathhelp' for paths conversions in sshserver.pl
+- RELEASE-NOTES: synced with c50980807c5
 
-- [Karlson2k brought this change]
+Jay Satiro (18 Jul 2016)
+- [Brian Prodoehl brought this change]
 
-  tests: Use 'pathhelp' for current path in runtests.pl
+  curl_global_init: Check if IPv6 works
+  
+  - Curl_ipv6works() is not thread-safe until after the first call, so
+  call it once during global init to avoid a possible race condition.
+  
+  Bug: https://github.com/curl/curl/issues/915
+  PR: https://github.com/curl/curl/pull/918
 
-- [Karlson2k brought this change]
+- [Timothy Polich brought this change]
 
-  tests: pathhelp.pm to process paths on Msys/Cygwin
+  CURLMOPT_SOCKETFUNCTION.3: fix typo
+  
+  Closes https://github.com/curl/curl/pull/914
 
-- lib: include curl_printf.h as one of the last headers
+- [Miroslav Franc brought this change]
+
+  library: Fix memory leaks found during static analysis
   
-  curl_printf.h defines printf to curl_mprintf, etc. This can cause
-  problems with external headers which may use
-  __attribute__((format(printf, ...))) markers etc.
+  Closes https://github.com/curl/curl/pull/913
+
+- [Viktor Szakats brought this change]
+
+  cookie.c: Fix misleading indentation
   
-  To avoid that they cause problems with system includes, we include
-  curl_printf.h after any system headers. That makes the three last
-  headers to always be, and we keep them in this order:
+  Closes https://github.com/curl/curl/pull/911
+
+- FAQ: Update FTP directory listing section for MLSD command
   
-   curl_printf.h
-   curl_memory.h
-   memdebug.h
+  Explain how some FTP servers support the machine readable listing
+  format MLSD from RFC 3659 and compare it to LIST.
   
-  None of them include system headers, they all do funny #defines.
+  Ref: https://github.com/curl/curl/issues/906
+
+Daniel Stenberg (1 Jul 2016)
+- [Sergei Nikulov brought this change]
+
+  Appveyor: Updates for options - CURL_STATICLIB/BUILD_TESTING
   
-  Reported-by: David Benjamin
+  Closes #892
+
+- TODO: 17.4 also brings more HTTP/2 support
+
+- TODO: try next proxy if one doesn't work
   
-  Fixes #743
+  Closes #896
 
-- memdebug.h: remove inclusion of other headers
+- conn: don't free easy handle data in handler->disconnect
   
-  Mostly because they're not needed, because memdebug.h is always included
-  last of all headers so the others already included the correct ones.
+  Reported-by: Gou Lingfeng
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0139.html
+
+- test1244: test different proxy ports same URL
+
+- curl_global_init.3: improved formatting of the flags
+
+- curl_global_init.3: expand on the SSL and WIN32 bits purpose
   
-  But also, starting now we don't want this to accidentally include any
-  system headers, as the header included _before_ this header may add
-  defines and other fun stuff that we won't want used in system includes.
+  Reported-by: Richard Gray
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0136.html
 
-- [Jay Satiro brought this change]
+- [Michael Kaufmann brought this change]
 
-  curl -J: make it work even without http:// scheme on URL
+  cleanup: minor code cleanup in Curl_http_readwrite_headers()
   
-  It does open up a miniscule risk that one of the other protocols that
-  libcurl could use would send back a Content-Disposition header and then
-  curl would act on it even if not HTTP.
+  - the expression of an 'if' was always true
+  - a 'while' contained a condition that was always true
+  - use 'if(k->exp100 > EXP100_SEND_DATA)' instead of 'if(k->exp100)'
+  - fixed a typo
   
-  A future mitigation for this risk would be to allow the callback to ask
-  libcurl which protocol is being used.
+  Closes #889
+
+- SFTP: set a generic error when no SFTP one exists...
   
-  Verified with test 1312
+  ... as otherwise we could get a 0 which would count as no error and we'd
+  wrongly continue and could end up segfaulting.
   
-  Closes #760
+  Bug: https://curl.haxx.se/mail/lib-2016-06/0052.html
+  Reported-by: 暖和的和暖
+
+- ROADMAP: http2 tests are merged, mention http2 perf
 
-- manpage-scan.pl: also verify the command line option docs
+- docs/README.md: to render nicer pages on github
   
-  This script now also scans src/tool_getparam.c, docs/curl.1 and
-  src/tool_help.c and will warn if any of them lists a command line option
-  not mentioned in one of the other places.
-
-- curl: show the long option version of -q in the -h list
+  ... as previously the README.cmake would be picked and put at the bottom
+  of the docs page there and it wasn't very representative!
 
-- curl: remove "--socks" as "--socks5" turned 8
+- README.md: change host name for the svg logo
   
-  In commit 2e42b0a2524 (Jan 2008) we made the option "--socks" deprecated
-  and it has not been documented since. The more explicit socks options
-  (like --socks4 or --socks5) should be used.
+  rawgit.com asks to use the domain cdn.rawgit.com for production
+  
+  See #900
 
-- curl.1: document the deprecated --ftp-ssl option
+- [Viktor Szakats brought this change]
 
-- curl: remove --http-request
-  
-  It was mentioned as deprecated already in commit ae1912cb0d4 from
-  1999. It has not been documented in this millennium.
+  README.md: use the SVG logo
 
-- curl: mention --ntlm-wb in -h list
+- README.md: logo on top!
 
-- curl: -h output lacked --proxy-header
+- KNOWN_BUGS: 3.4 POP3 expects "CRLF.CRLF" eob for some
+  
+  Closes #740
 
-- curl.1: document --ntlm-wb
+- RELEASE-NOTES: synced with d61c80515aa8
 
-- curl.1: document the long format of -q: --disable
+- [Michael Osipov brought this change]
 
-- curl.1: mention the deprecated --krb4 option
+  acinclude.m4: improve autodetection of CA bundle on FreeBSD
+  
+  The FreeBSD Port security/ca_root_nss installs the Mozilla NSS CA bundle
+  to /usr/local/share/certs/ca-root-nss.crt. Use this bundle in the
+  discovery process.
+  
+  This change also removes the former FreeBSD path that has been obsolete
+  for 8 years since this FreeBSD ports commit:
+  https://svnweb.freebsd.org/ports/head/security/?view=revision&revision=215953
+  
+  Closes #894
 
-- curl.1: document --ftp-ssl-reqd
+- configure: don't specify .lib for libs on windows
   
-  Even if deprecated, document it so that people will find it as old
-  scripts may still use it.
+  Another follow up for crypt32.lib linking with winssl
 
-- curl: use --telnet-option as documented
+- configure: fix winssl LIBS change typo
   
-  The code said "telnet-options" but no documentation ever said so. It
-  worked fine since the code is fine with a unique match of the first
-  part.
+  follow-up from 120bf29e
 
-- getparam: remove support for --ftpport
+- TODO: "TCP Fast Open" is done, add monitor pool connections
+
+- configure: add crypt32.lib for winssl builds
   
-  It has been deprecated and undocumented since commit ad5ead8bed7 (Dec
-  2003). --ftp-port is the proper long option name.
+  Necessary since 6cabd78531f
 
-- curl: make --disable work as long form of -q
+- Makefile.vc: link with crypt32.lib for winssl builds
   
-  To make the aliases list reflect reality.
+  Necessary since 6cabd78531f
+  
+  Fixes #853
 
-- aliases: remove trailing space from capath string
+- [Joel Depooter brought this change]
 
-- cmdline parse: only single letter options have single-letter strings
+  VC: Add crypt32.lib to Visual Sudio project template files
   
-  ... moved around options so that parsing the code to find all
-  single-letter options easier.
+  Closes #854
 
-Jay Satiro (28 Apr 2016)
-- CURLINFO_TLS_SSL_PTR.3: Clarify SSL pointer availability
+- vc: fix the build for schannel certinfo support
   
-  Bug: https://curl.haxx.se/mail/lib-2016-04/0126.html
-  Reported-by: Bru Rom
+  Broken since 6cabd785, which adds use of the Curl_extract_certinfo
+  function from the x509asn1.c file.
 
-Daniel Stenberg (28 Apr 2016)
-- curl_easy_getinfo.3: remove superfluous blank lines
+- typedefs: use the full structs in internal code...
+  
+  ... and save the typedef'ed names for headers and external APIs.
 
-- test1139: verifies libcurl option man page presence
+- internals: rename the SessionHandle struct to Curl_easy
+
+- headers: forward declare CURL, CURLM and CURLSH as structs
   
-  - checks that each option has its own man page present
+  Instead of typedef'ing to void, typedef to their corresponding actual
+  struct names to allow compilers to type-check.
   
-  - checks that each option is mentioned in its corresponding index man
-    page
+  Assisted-by: Reinhard Max
 
-- curl_easy_getinfo.3: added missing mention of CURLINFO_TLS_SESSION
+Jay Satiro (22 Jun 2016)
+- vtls: Only call add/getsession if session id is enabled
   
-  ... although it is deprecated.
+  Prior to this change we called Curl_ssl_getsessionid and
+  Curl_ssl_addsessionid regardless of whether session ID reusing was
+  enabled. According to comments that is in case session ID reuse was
+  disabled but then later enabled.
+  
+  The old way was not intuitive and probably not something users expected.
+  When a user disables session ID caching I'd guess they don't expect the
+  session ID to be cached anyway in case the caching is later enabled.
 
-Jay Satiro (28 Apr 2016)
-- mbedtls: Fix session resume
+Daniel Stenberg (22 Jun 2016)
+- curl.1: the used progress meter suffix is k in lower case
   
-  This also fixes PolarSSL session resume.
+  Closes #883
+
+- [Sergei Nikulov brought this change]
+
+  cmake: now using BUILD_TESTING=ON/OFF
   
-  Prior to this change the TLS session information wasn't properly
-  saved and restored for PolarSSL and mbedTLS.
+  CMake build now using BUILD_TESTING=ON/OFF (default is OFF) to build
+  tests and enabling CTest integration. Options BUILD_CURL_TESTS and
+  BUILD_DASHBOARD_REPORTS was removed.
   
-  Bug: https://curl.haxx.se/mail/lib-2016-01/0070.html
-  Reported-by: Thomas Glanzmann
+  Closes #882
   
-  Bug: https://curl.haxx.se/mail/lib-2016-04/0095.html
-  Reported-by: Moti Avrahami
-
-Daniel Stenberg (27 Apr 2016)
-- RELEASE-NOTES: synced with f4298fcc6d2
+  Reviewed-by: Brad King
 
 - [Michael Kaufmann brought this change]
 
-  opts: Fix some syntax errors in example code fragments
+  cleanup: fix method names in code comments
   
-  Fixes #779
+  Closes #887
 
-- openssl: avoid BN_print a NULL bignum
+Kamil Dudka (21 Jun 2016)
+- curl-compilers.m4: improve detection of GCC's -fvisibility= flag
   
-  OpenSSL 1.1.0-pre seems to return NULL(?) for a whole lot of those
-  numbers so make sure the function handles this.
+  Some builds of GCC produce output on both stdout and stderr when --help
+  --verbose is used.  The 2>&1 redirection caused them to be arbitrarily
+  interleaved with each other because of stream buffering.  Consequently,
+  grep failed to match the fvisibility= string in the mixed output, even
+  though the string was present in GCC's standard output.
   
-  Reported-by: Linus Nordberg
-
-- [Marcel Raad brought this change]
+  This led to silently disabling symbol hiding in some builds of curl.
 
-  CONNECT_ONLY: don't close connection on GSS 401/407 reponses
-  
-  Previously, connections were closed immediately before the user had a
-  chance to extract the socket when the proxy required Negotiate
-  authentication.
+Daniel Stenberg (19 Jun 2016)
+- tests: fix the HTTP/2 tests
   
-  This regression was brought in with the security fix in commit
-  79b9d5f1a42578f
+  The HTTP/2 tests brought with commit bf05606ef1f were using the internal
+  name 'http2' for the HTTP/2 server, while in fact that name was already
+  used for the second instance of the HTTP server. This made tests using
+  the second instance (like test 2050) fail after a HTTP/2 test had run.
   
-  Closes #655
+  The server is now known as HTTP/2 internally and within the <server>
+  section in test cases. 1700, 1701 and 1702 were updated accordingly.
 
-- CURLINFO_TLS_SESSION.3: clarify TLS library support before 7.48.0
+- openssl: use more 'const' to fix build warnings with 1.1.0 branch
 
-- mbedtls.c: silly spellfix of a comment
+- curl.1: missed 'T' in the progress unit suffixes
 
-- KNOWN_BUGS: 1.10 Strips trailing dot from host name
-  
-  Closes #716
+- curl.1: mention the unix for the progress meter
 
-- test1322: verify stripping of trailing dot from host name
-  
-  While being debated (in #716) and a violation of RFC 7230 section 5.4,
-  this test verifies that the existing functionality works as intended. It
-  strips the dot from the host name and uses the host without dot
-  throughout the internals.
+Patrick Monnerat (16 Jun 2016)
+- os400: add new definitions to ILE/RPG binding.
 
-- multi: accidentally used resolved host name instead of proxy
+Daniel Stenberg (16 Jun 2016)
+- openssl: fix cert check with non-DNS name fields present
   
-  Regression introduced in 09b5a998
+  Regression introduced in 5f5b62635 (released in 7.48.0)
   
-  Bug: https://curl.haxx.se/mail/lib-2016-04/0084.html
-  Reported-by: BoBo
+  Reported-by: Fabian Ruff
+  Fixes #875
 
-- symbols-in-versions: added new CURLSSLBACKEND_ symbols
+Dan Fandrich (16 Jun 2016)
+- axtls: Use Curl_wait_ms instead of the less-portable usleep
 
-- test148: fixed after the --ftp-create-dirs retry change
-  
-  follow-up commit to 3c1e84f569 as it made curl try a little harder
+- axtls: Fixed compile after compile 31c521b0
 
-- curl.h: clarify curl_sslbackend for openssl clones and renames
+- tests: Added HTTP proxy keywords to tests 1141 & 1142
 
-- [Karlson2k brought this change]
+Jay Satiro (15 Jun 2016)
+- [Sergei Nikulov brought this change]
 
-  url.c: fixed DEBUGASSERT() for WinSock workaround
-  
-  If buffer is allocated, but nothing is received during prereceive
-  stage, than number of processed bytes must be zero.
+  cmake: Fix build with winldap
   
-  Closes #778
+  Bug: https://github.com/curl/curl/pull/874
+  Reported-by: Sergei Nikulov
 
-- KNOWN_BUGS: --interface for ipv6 binds to unusable IP address
+- CURLOPT_POSTFIELDS.3: Clarify what happens when set empty
   
-  Closes #686 for now.
-
-- TODO: 1.17 Add support for IRIs
+  When CURLOPT_POSTFIELDS is set to an empty string libcurl will send a
+  zero-byte POST. Prior to this change it was documented as sending data
+  from the read callback.
   
-  Adding support for IRIs is a mouthful, but is probably interesting at
-  least for areas and countries where the use of such "URLs" are growing
-  popularity.
+  This also changes the wording of what happens when empty or NULL so that
+  it's hopefully easier to understand for people whose primary language
+  isn't English.
   
-  Closes #776
-
-- THANKS-filter: Travis Burtrum
-
-- lib1517: checksrc compliance
-
-- [moparisthebest brought this change]
-
-  PolarSSL: Implement public key pinning
-
-Patrick Monnerat (22 Apr 2016)
-- os400: upgrade ILE/RPG binding
+  Bug: https://github.com/curl/curl/issues/862
+  Reported-by: Askar Safin
 
-- curl.h: CURLOPT_CONNECT_TO sets a struct slist *, not a string
+- [Michael Wallner brought this change]
 
-Daniel Stenberg (22 Apr 2016)
-- contributors.sh: make --releasenotes implied
+  curl_multi_socket_action.3: Fix rewording
   
-  It got too annoying to type =)
+  - Remove some erroneous text.
+  
+  Closes https://github.com/curl/curl/pull/865
 
-- RELEASE-NOTES: synced with 3c1e84f5693d8093
+- [Luo Jinghua brought this change]
 
-- curl: make --ftp-create-dirs retry on failure
+  resolve: enable protocol family logic for synthesized IPv6
   
-  The underlying libcurl option used for this feature is
-  CURLOPT_FTP_CREATE_MISSING_DIRS which has the ability to retry the dir
-  creation, but it was never set to do that by the command line tool.
+  - Enable protocol family logic for IPv6 resolves even when support
+  for synthesized addresses is enabled.
   
-  Now it does.
+  This is a follow up to the parent commit that added support for
+  synthesized IPv6 addresses from IPv4 on iOS/OS X. The protocol family
+  logic needed for IPv6 was inadvertently excluded if support for
+  synthesized addresses was enabled.
   
-  Bug: https://curl.haxx.se/mail/archive-2016-04/0021.html
-  Reported-by: John Wanghui
-  Help-by: Leif W
+  Bug: https://github.com/curl/curl/issues/863
+  Ref: https://github.com/curl/curl/pull/866
+  Ref: https://github.com/curl/curl/pull/867
 
-- [Henrik Gaßmann brought this change]
+Daniel Stenberg (7 Jun 2016)
+- [Luo Jinghua brought this change]
 
-  winbuild: add mbedtls support
+  resolve: add support for IPv6 DNS64/NAT64 Networks on OS X + iOS
   
-  Add WITH_MBEDTLS option. Make WITH_SSL, WITH_MBEDTLS and ENABLE_WINSSL
-  options mutual exclusive.
+  Use getaddrinfo() to resolve the IPv4 address literal on iOS/Mac OS X.
+  If the current network interface doesn’t support IPv4, but supports
+  IPv6, NAT64, and DNS64.
   
-  Closes #606
+  Closes #866
+  Fixes #863
 
-- KNOWN_BUGS: fixed "5.6 Improper use of Autoconf cache variables"
+- tests: two more HTTP/2 tests
   
-  As of commit d9f3b365a3
+  1701 and 1702
 
-- [Irfan Adilovic brought this change]
+- runtests: don't display logs when http2 server fails to start
 
-  configure: ac_cv_ -> curl_cv_ for write-only vars
+- runtests: make stripfile work on stdout as well
   
-  These configure vars are modified in a curl-specific way but never
-  evaluated or loaded from cache, even though they are designated as
-  _cv_. We could either implement proper AC_CACHE_CHECKs for them, or
-  remove them completely.
+  ... and have test 1700 use that to strip out the nghttpx server: headers
+
+- http2-tests: test1700 is the first real HTTP/2 test
   
-  Fixes #603 as ac_cv_func_gethostbyname is no longer clobbered, and
-  AC_CHECK_FUNC(gethostbyname...) will no longer spuriously succeed after
-  the first configure run with caching.
+  It requires that 'nghttpx' is in the PATH, and it will run the tests
+  using nghttpx as a front-end proxy in front of the standard HTTP/1 test
+  server. This uses HTTP/2 over plain TCP.
   
-  `ac_cv_func_strcasecmp` is curious, see #770.
+  If you like me have nghttpx installed in a custom path, you can run test 1700
+  like this:
   
-  `eval "ac_cv_func_$func=yes"` can still cause problems as it works in
-  tandem with AC_CHECK_FUNCS and then potentially modifies its result. It
-  would be best to rewrite this test to use a new CURL_CHECK_FUNCS macro,
-  which works the same as AC_CHECK_FUNCS but relies on caching the values
-  of curl_cv_func_* variables, without modifiying ac_cv_func_*.
+  $ PATH=$PATH:$HOME/build-nghttp2/bin/ ./runtests.pl 1700
 
-- [Irfan Adilovic brought this change]
+- RELEASE-NOTES: synced with 34855feeb4c299
 
-  configure: ac_cv_ -> curl_cv_ for r/w vars
+Steve Holme (6 Jun 2016)
+- schannel: Disable ALPN on Windows < 8.1
   
-  These configure vars are modified in a curl-specific way and modified by
-  the configure process, but are never loaded from cache, even though they
-  are designated as _cv_. We should implement proper AC_CACHE_CHECKs for
-  them eventually.
-
-- [Irfan Adilovic brought this change]
-
-  configure: ac_cv_func_clock_gettime -> curl_...
+  Calling QueryContextAttributes with SECPKG_ATTR_APPLICATION_PROTOCOL
+  fails on Windows < 8.1 so we need to disable ALPN on these OS versions.
   
-  This variable must not be cached in its current form, as any cached
-  information will prevent the next configure run from determining the
-  correct LIBS needed for the function. Thus, rename prefix `ac_cv_` to
-  just `curl_`.
+  Inspiration provide by: Daniel Seither
+  
+  Closes #848
+  Fixes #840
 
-- [Irfan Adilovic brought this change]
+Jay Satiro (5 Jun 2016)
+- checksrc: Add LoadLibrary to the banned functions list
+  
+  LoadLibrary was supplanted by Curl_load_library for security
+  reasons in 6df916d.
 
-  configure: ac_cv_ -> curl_cv_ for all cached vars
+- http: Fix HTTP/2 connection reuse
   
-  This was automated by:
+  - Change the parser to not require a minor version for HTTP/2.
   
-  sed -b -i -f <(ack -A1 AC_CACHE_CHECK | \
-                 ack -o 'ac_cv_.*?\b' | \
-                 sort -u | xargs -n1 bash -c \
-                      'echo "s/$0/curl_cv_${0#ac_cv_}/g"') \
-      $(git ls-files)
+  HTTP/2 connection reuse broke when we changed from HTTP/2.0 to HTTP/2
+  in 8243a95 because the parser still expected a minor version.
   
-  This only changed the prefix for 16 variables actually checked with
-  AC_CACHE_CHECK.
+  Bug: https://github.com/curl/curl/issues/855
+  Reported-by: Andrew Robbins, Frank Gevaerts
 
-- openssl: builds with OpenSSL 1.1.0-pre5
-  
-  The RSA, DSA and DH structs are now opaque and require use of new APIs
+Steve Holme (4 Jun 2016)
+- connect.c: Fixed compilation warning from commit 332e8d6164
   
-  Fixes #763
+  connect.c:952:5: warning: suggest explicit braces to avoid ambiguous 'else'
 
-Steve Holme (20 Apr 2016)
-- url.c: Prefer we don't use explicit NULLs in conditions
+- win32: Used centralised verify windows version function
   
-  Fixed commit fa5fa65a30 to not use NULLs in if condition.
-
-Daniel Stenberg (20 Apr 2016)
-- [Isaac Boukris brought this change]
+  Closes #845
 
-  NTLM: check for NULL pointer before deferencing
-  
-  At ConnectionExists, both check->proxyuser and check->proxypasswd
-  could be NULL, so make sure to check first.
-  
-  Fixes #765
+- win32: Added verify windows version functionality
 
-- [Karlson2k brought this change]
+- win32: Introduced centralised verify windows version function
 
-  tests: added test1517
+Kamil Dudka (3 Jun 2016)
+- tool_urlglob: fix off-by-one error in glob_parse()
   
-  ... for checking ability to receive full HTTP response when POST request
-  is used with slow read callback function.
+  ... causing SIGSEGV while parsing URL with too many globs.
+  Minimal example:
   
-  This test checks for bug #657 and verifies the work-around from
-  72d5e144fbc6.
+  $ curl $(for i in $(seq 101); do printf '{a}'; done)
   
-  Closes #720
+  Reported-by: Romain Coltel
+  Bug: https://bugzilla.redhat.com/1340757
 
-- [Karlson2k brought this change]
+Daniel Stenberg (1 Jun 2016)
+- [Benjamin Kircher brought this change]
 
-  sendf.c: added ability to call recv() before send() as workaround
-  
-  WinSock destroys recv() buffer if send() is failed. As result - server
-  response may be lost if server sent it while curl is still sending
-  request. This behavior noticeable on HTTP server short replies if
-  libcurl use several send() for request (usually for POST request).
-  To workaround this problem, libcurl use recv() before every send() and
-  keeps received data in intermediate buffer for further processing.
+  libcurl-multi.3: fix small typo
   
-  Fixes: #657
-  Closes: #668
+  Closes #850
 
-Kamil Dudka (19 Apr 2016)
-- connect: make sure that rc is initialized in singleipconnect()
+- [Viktor Szakats brought this change]
+
+  makefile.m32: add crypt32 for winssl builds
   
-  This commit fixes a Clang warning introduced in curl-7_48_0-190-g8f72b13:
+  Dependency added by 6cabd78
   
-  Error: CLANG_WARNING:
-  lib/connect.c:1120:11: warning: The right operand of '==' is a garbage value
-  1118|       }
-  1119|
-  1120|->     if(-1 == rc)
-  1121|         error = SOCKERRNO;
-  1122|     }
-
-Daniel Stenberg (19 Apr 2016)
-- make/checksrc: use $srcdir, not $top_srcdir
-
-- src/checksrc.whitelist: removed
+  Closes #849
 
-- tool_operate: switch to inline checksrc ignore
+- [Ivan Avdeev brought this change]
 
-- lib/checksrc.whitelist: not needed anymore
+  vtls: fix ssl session cache race condition
   
-  ... as checksrc now skips comments
-
-- vtls.h: remove a space before semicolon
+  Sessionid cache management is inseparable from managing individual
+  session lifetimes. E.g. for reference-counted sessions (like those in
+  SChannel and OpenSSL engines) every session addition and removal
+  should be accompanied with refcount increment and decrement
+  respectively. Failing to do so synchronously leads to a race condition
+  that causes symptoms like use-after-free and memory corruption.
+  This commit:
+   - makes existing session cache locking explicit, thus allowing
+     individual engines to manage lock's scope.
+   - fixes OpenSSL and SChannel engines by putting refcount management
+     inside this lock's scope in relevant places.
+   - adds these explicit locking calls to other engines that use
+     sessionid cache to accommodate for this change. Note, however,
+     that it is unknown whether any of these engines could also have
+     this race.
   
-  ... that the new checksrc detected
+  Bug: https://github.com/curl/curl/issues/815
+  Fixes #815
+  Closes #847
 
-- darwinssl: removed commented out code
+- [Andrew Kurushin brought this change]
 
-- http_chunks: removed checksrc disable
+  schannel: add CURLOPT_CERTINFO support
   
-  ... since checksrc now skips comments
+  Closes #822
 
-- imap: inlined checksrc disable instead of whitelist edit
+- RELEASE-NOTES: synced with 142ee9fa15002315
 
-- checksrc: taught to skip comments
+- openssl: rename the private SSL_strerror
   
-  ... but output non-stripped version of the line, even if that then can
-  make the script identify the wrong position in the line at
-  times. Showing the line stripped (ie without comments) is just too
-  surprising.
+  ... to make it not look like an OpenSSL function
 
-- opts/Makefile.am: list all docs file one by one
+- [Michael Kaufmann brought this change]
+
+  openssl: Use correct buffer sizes for error messages
   
-  ... to make it easier to add lines in patches that won't just break all
-  other patches trying to add lines too.
+  Closes #844
 
-- curl_easy_setopt.3: mention CURLOPT_TCP_FASTOPEN
+- curl: fix -q [regression]
+  
+  This broke in 7.49.0 with commit e200034425a7625
+  
+  Fixes #842
 
-- RELEASE-NOTES: synced with 03de4e4b219
+- URL parser: allow URLs to use one, two or three slashes
   
-  (since we just merged two major features)
+  Mostly in order to support broken web sites that redirect to broken URLs
+  that are accepted by browsers.
+  
+  Browsers are typically even more leniant than this as the WHATWG URL
+  spec they should allow an _infinite_ amount. I tested 8000 slashes with
+  Firefox and it just worked.
+  
+  Added test case 1141, 1142 and 1143 to verify the new parser.
+  
+  Closes #791
 
-- [Alessandro Ghedini brought this change]
+- [Renaud Lehoux brought this change]
 
-  connect: implement TCP Fast Open for Linux
+  cmake: Added missing mbedTLS support
   
-  Closes #660
-
-- [Alessandro Ghedini brought this change]
+  Closes #837
 
-  tool: add --tcp-fastopen option
+- [Renaud Lehoux brought this change]
 
-- [Alessandro Ghedini brought this change]
+  mbedtls: removed unused variables
+  
+  Closes #838
 
-  connect: implement TCP Fast Open for OS X
+- [Frank Gevaerts brought this change]
 
-- [Alessandro Ghedini brought this change]
+  http: add CURLINFO_HTTP_VERSION and %{http_version}
+  
+  Adds access to the effectively used http version to both libcurl and
+  curl.
+  
+  Closes #799
 
-  url: add CURLOPT_TCP_FASTOPEN option
+- bump: start the journey toward 7.50.0
 
-- checksrc: pass on -D so the whitelists are found correctly
+- [Marcel Raad brought this change]
 
-- configure: remove check for libresolve
-  
-  'strncasecmp' was once provided by libresolv (no trailing e) for SunOS,
-  but this check is broken and most likely adds nothing useful. Removing
-  now.
+  openssl: fix build with OPENSSL_NO_COMP
   
-  Reported-by: Irfan Adilovic
+  With OPENSSL_NO_COMP defined, there is no function
+  SSL_COMP_free_compression_methods
   
-  Discussed in #770
+  Closes #836
 
-- scripts/make: use $(EXEEXT) for executables
-  
-  Reported-by: bodop
+- [Gisle Vanem brought this change]
+
+  memdebug: fix MSVC crash with -DMEMDEBUG_LOG_SYNC
   
-  Fixes #771
+  Fixes #828
 
-- includes: avoid duplicate memory callback typdefs even harder
+- [Jonathan brought this change]
 
-- checksrc/makefile.am: use $top_srcdir to find source files
+  README.md: polish
   
-  ... to properly support out of source tree builds.
+  Closes #834
 
-- RELEASE-NOTES: synced with 26ec93dd6aeba8dfb5
+- RELEASE-NOTES: fix vuln link
 
-- opts: fix option references missing (section)
+Version 7.49.1 (30 May 2016)
 
-- [Michael Kaufmann brought this change]
+Daniel Stenberg (30 May 2016)
+- RELEASE-NOTES: 7.49.1
 
-  news: CURLOPT_CONNECT_TO and --connect-to
-  
-  Makes curl connect to the given host+port instead of the host+port found
-  in the URL.
+- [Steve Holme brought this change]
 
-- makefile.vc6: use d suffix on debug object
+  loadlibrary: Only load system DLLs from the system directory
   
-  To allow both release and debug builds in parallel.
+  Inspiration provided by: Daniel Stenberg and Ray Satiro
   
-  Reported-by: Rod Widdowson
+  Bug: https://curl.haxx.se/docs/adv_20160530.html
   
-  Fixes #769
+  Ref: Windows DLL hijacking with curl, CVE-2016-4802
 
-Jay Satiro (12 Apr 2016)
-- http2: Use size_t type for data drain count
-  
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+- ssh: fix version number check typo
 
-- http2: Improve header parsing
-  
-  - Error if a header line is larger than supported.
+Jay Satiro (29 May 2016)
+- curl_share_setopt.3: Add min ver needed for ssl session lock
   
-  - Warn if cumulative header line length may be larger than supported.
+  Bug: https://github.com/curl/curl/issues/826
+  Reported-by: Michael Wallner
+
+Daniel Stenberg (29 May 2016)
+- ssh: fix build for libssh2 before 1.2.6
   
-  - Allow spaces when parsing the path component.
+  The statvfs functionality was added to libssh2 in that version, so we
+  switch off that functionality when built with older libraries.
   
-  - Make sure each header line ends in \r\n. This fixes an out of bounds.
+  Fixes #831
+
+- mbedtls: fix includes so snprintf() works
   
-  - Disallow header continuation lines until we decide what to do.
+  Regression from the previous *printf() rearrangements, this file missed to
+  include the correct header to make sure snprintf() works universally.
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  Reported-by: Moti Avrahami
+  Bug: https://curl.haxx.se/mail/lib-2016-05/0196.html
 
-- http2: Add Curl_http2_strerror for HTTP/2 error codes
+Steve Holme (23 May 2016)
+- checksrc.pl: Added variants of strcat() & strncat() to banned function list
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  Added support for checking the tchar, unicode and mbcs variants of
+  strcat() and strncat() in the banned function list.
 
-- [Tatsuhiro Tsujikawa brought this change]
+Daniel Stenberg (23 May 2016)
+- smtp: minor ident (white space) fixes
 
-  http2: Don't increment drain when one header field is received
-  
-  Sicne we write header field in temporary location, not in the memory
-  that upper layer provides, incrementing drain should not happen.
+- THANKS: updated after script fixes
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  Now giving credit properly to github user names, fixed some UTF-8 issues
+  and added names discovered when contrithanks was improved.
 
-- [Tatsuhiro Tsujikawa brought this change]
+- THANKS-filter: more name cleanups
 
-  http2: Ensure that http2_handle_stream_close is called
+- contrithanks.sh: exclude existing names case insensitively
+
+- contrithanks.sh: use same grep pattern and -a flag as contributors.sh
+
+- contributors.sh: better grep pattern, use grep -a
+
+- THANKS-filter: fix more names
+
+- contrithanks.sh: do the same github fix as contributors.sh
   
-  This commit ensures that streams which was closed in on_stream_close
-  callback gets passed to http2_handle_stream_close.  Previously, this
-  might not happen.  To achieve this, we increment drain property to
-  forcibly call recv function for that stream.
+  from 1577bfa35ba
+
+Jay Satiro (23 May 2016)
+- contributors: Show GitHub username if real name unknown
   
-  To more accurately check that we have no pending event before shutting
-  down HTTP/2 session, we sum up drain property into
-  http_conn.drain_total.  We only shutdown session if that value is 0.
+  Prior to this change if a GitHub contributor's real name was unknown
+  they would be omitted from the list.
   
-  With this commit, when stream was closed before reading response
-  header fields, error code CURLE_HTTP2_STREAM is returned even if
-  HTTP/2 level error is NO_ERROR.  This signals the upper layer that
-  stream was closed by error just like TCP connection close in HTTP/1.
+  Bug: https://github.com/curl/curl/issues/824
+
+Daniel Stenberg (21 May 2016)
+- RELEASE-NOTES: synced with 3caaeffbe8ded4
+
+Jay Satiro (20 May 2016)
+- openssl: cleanup must free compression methods
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  - Free compression methods if OpenSSL 1.0.2 to avoid a memory leak.
+  
+  Bug: https://github.com/curl/curl/issues/817
+  Reported-by: jveazey@users.noreply.github.com
 
-- [Tatsuhiro Tsujikawa brought this change]
+Daniel Stenberg (20 May 2016)
+- [Gisle Vanem brought this change]
 
-  http2: Process paused data first before tear down http2 session
+  curl_multibyte: fix compiler error
   
-  This commit ensures that data from network are processed before HTTP/2
-  session is terminated.  This is achieved by pausing nghttp2 whenever
-  different stream than current easy handle receives data.
+  While compiling lib/curl_multibyte.c with '-DUSE_WIN32_IDN' etc. I was
+  getting:
   
-  This commit also fixes the bug that sometimes processing hangs when
-  multiple HTTP/2 streams are multiplexed.
+  f:\mingw32\src\inet\curl\lib\memdebug.h(38): error C2054: expected '('
+  to follow 'CURL_EXTERN'
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  f:\mingw32\src\inet\curl\lib\memdebug.h(38): error C2085:
+  'curl_domalloc': not in formal parameter list
 
-- [Tatsuhiro Tsujikawa brought this change]
+- THANKS-filter: make Jan-E get proper credit
 
-  http2: Check session closure early in http2_recv
+- [Jan-E brought this change]
+
+  winbuild/Makefile.vc: Fix check on SSL, MBEDTLS, WINSSL exclusivity
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  Closes #818
 
-- [Tatsuhiro Tsujikawa brought this change]
+- [Alexander Traud brought this change]
 
-  http2: Add handling stream level error
-  
-  Previously, when a stream was closed with other than NGHTTP2_NO_ERROR
-  by RST_STREAM, underlying TCP connection was dropped.  This is
-  undesirable since there may be other streams multiplexed and they are
-  very much fine.  This change introduce new error code
-  CURLE_HTTP2_STREAM, which indicates stream error that only affects the
-  relevant stream, and connection should be kept open.  The existing
-  CURLE_HTTP2 means connection error in general.
+  libcurl.m4: Avoid obsolete warning
   
-  Ref: https://github.com/curl/curl/issues/659
-  Ref: https://github.com/curl/curl/pull/663
+  Closes #821
 
-Daniel Stenberg (11 Apr 2016)
-- http2: drain the socket better...
+Jay Satiro (20 May 2016)
+- [Michael Kaufmann brought this change]
+
+  CURLOPT_CONNECT_TO.3: user must not free the list prematurely
   
-  ... but ignore EAGAIN if the stream has ended so that we don't end up in
-  a loop. This is a follow-up to c8ab613 in order to avoid the problem
-  d261652 was made to fix.
+  The connect-to list isn't copied so as long as the handle may be used
+  for a transfer the list must be valid.
   
-  Reported-by: Jay Satiro
-  Clues-provided-by: Tatsuhiro Tsujikawa
+  Bug: https://github.com/curl/curl/pull/819
+  Reported-by: Michael Kaufmann
+
+Daniel Stenberg (19 May 2016)
+- RELEASE-NOTES: synced with 48114a8634242c
+
+- openssl: ERR_remove_thread_state() is deprecated in latest 1.1.0
   
-  Discussed in #750
+  See OpenSSL commit 21e001747d4a
 
-- KNOWN_BUGS: added info for "Hangs with PolarSSL"
+- http2: use HTTP/2 in the HTTP/1.1-alike header
+  
+  ... when generating them, not "2.0" as the protocol is called just
+  HTTP/2 and nothing else.
 
-- KNOWN_BUGS: 1.9 HTTP/2 frames while in the connection pool kill reuse
+Jay Satiro (19 May 2016)
+- dist: include curl_multi_socket_all.3
   
-  Closes #750
+  Closes https://github.com/curl/curl/pull/816
 
-- build: include scripts/ in the dist
+Steve Holme (18 May 2016)
+- bump: Start work on 7.49.1
 
-Steve Holme (9 Apr 2016)
-- CURLOPT_SOCKS5_GSSAPI_SERVICE: Merged with CURLOPT_PROXY_SERVICE_NAME
+Daniel Stenberg (18 May 2016)
+- curlbuild.h.dist: check __LP64__ as well to fix MIPS build
   
-  As these two options provide identical functionality, the former for
-  SOCK5 proxies and the latter for HTTP proxies, merged the two options
-  together.
+  The preprocessor check that sets up the 32bit defines for non-configure
+  builds didn't work properly for MIPS systems as __mips__ is defined for
+  both 32bit and 64bit. Now __LP64__ is also checked and indicates 64bit.
   
-  As such CURLOPT_SOCKS5_GSSAPI_SERVICE is marked as deprecated as of
-  7.49.0.
+  Reported-by: Tomas Jakobsson
+  Fixes #813
 
-- urldata: Use bool for socks5_gssapi_nec as it is a flag
-  
-  This value is set to TRUE or FALSE so should be a bool and not a long.
+- [Marcel Raad brought this change]
 
-- url: Ternary operator code style changes
+  schannel: fix compile break with MSVC XP toolset
+  
+  For the Windows XP toolset of Visual C++ 2013/2015, the old Windows SDK
+  7.1 is used. In this case, _USING_V110_SDK71_ is defined.
+  
+  Closes #812
 
-- CODE_STYLE: Added ternary operator example to 'Space around operators'
+- dist: include CHECKSRC.md
   
-  Following conversation on the libcurl mailing list.
+  Reported-by: Paul Howarth
+  Bug: https://curl.haxx.se/mail/lib-2016-05/0116.html
 
-- sasl: Fixed compilation errors from commit 9d89a0387
+- test/Makefile.am: include manpage-scan.pl and nroff-scan.pl in dist
   
-  ...when GSS-API or Windows SSPI are not used.
+  Reported-by: Ray Satiro
+  Bug: https://curl.haxx.se/mail/lib-2016-05/0113.html
 
-- url: Corrected comments following 9d89a0387
+Version 7.49.0 (17 May 2016)
 
-- docs: Added clarification following commit 9d89a0387
+Daniel Stenberg (17 May 2016)
+- THANKS: 24 new names from 7.49.0 release notes
 
-- Makefile: Fixed echo of checksrc check
+- RELEASE-NOTES: 7.49.0
 
-- checksrc: Fix issue with the autobuilds not picking up the whitelist
+- mbedtls/polarssl: set "hostname" unconditionally
+  
+  ...as otherwise the TLS libs will skip the CN/SAN check and just allow
+  connection to any server. curl previously skipped this function when SNI
+  wasn't used or when connecting to an IP address specified host.
+  
+  CVE-2016-3739
+  
+  Bug: https://curl.haxx.se/docs/adv_20160518A.html
+  Reported-by: Moti Avrahami
 
-- checksrc: Added missing vauth and vtls directories
+- [Frank Gevaerts brought this change]
 
-- ftp/imap/pop3/smtp: Allow the service name to be overridden
+  CURLOPT_RESOLVE.3: fix typo
   
-  Allow the service name to be overridden for DIGIST-MD5 and Kerberos 5
-  authentication in FTP, IMAP, POP3 and SMTP.
+  Closes #811
 
-- http_negotiate: Calculate service name and proxy service name locally
-  
-  Calculate the service name and proxy service names locally, rather than
-  in url.c which will allow for us to support overriding the service name
-  for other protocols such as FTP, IMAP, POP3 and SMTP.
+- docs: CURLOPT_RESOLVE overrides CURLOPT_IPRESOLVE
 
-- ROADMAP: Updated following the move of the authentication code
+- KNOWN_BUGS: GnuTLS backend skips really long certificate fields
+  
+  Closes #762
 
-Patrick Monnerat (8 Apr 2016)
-- KNOWN_BUGS: openldap hangs. TODO: binary SASL.
+- CURLOPT_HTTPPOST.3: the data needs to be around while in use
 
-Daniel Stenberg (8 Apr 2016)
-- KNOWN_BUGS: 5.6 Improper use of Autoconf cache variables
+- openssl: get_cert_chain: fix NULL dereference
   
-  Closes #603
+  CID 1361815: Explicit null dereferenced (FORWARD_NULL)
 
-- KNOWN_BUGS: 11.2 error buffer not set...
+- openssl: get_cert_chain: avoid NULL dereference
   
-  Closes #544
+  CID 1361811: Explicit null dereferenced (FORWARD_NULL)
 
-- KNOWN_BUGS: 11.1 Curl leaks .onion hostnames in DNS
+- dprintf_formatf: fix (false?) Coverity warning
   
-  Closes #543
-
-- KNOWN_BUGS: 1.8 DNS timing is wrong for HTTP redirects
+  CID 1024412: Memory - illegal accesses (OVERRUN). Claimed to happen when
+  we run over 'workend' but the condition says <= workend and for all I
+  can see it should be safe. Compensating for the warning by adding a byte
+  margin in the buffer.
   
-  Closes #522
+  Also, removed the extra brace level indentation in the code and made it
+  so that 'workend' is only assigned once within the function.
 
-- TODO: HTTP/2 "prior knowledge" is implemented!
+- RELEASE-NOTES: synced with 2dcb5adc72d6
 
-- [Damien Vielpeau brought this change]
+- THANKS-filter: fixed Jonathan Cardoso
 
-  mbedtls: fix MBEDTLS_DEBUG builds
+Jay Satiro (15 May 2016)
+- ftp: fix incorrect out-of-memory code in Curl_pretransfer
+  
+  - Return value type must match function type.
+  
+  s/CURLM_OUT_OF_MEMORY/CURLE_OUT_OF_MEMORY/
+  
+  Caught by Travis CI
 
-- mbedtls: implement and provide *_data_pending()
+Daniel Stenberg (15 May 2016)
+- ftp wildcard: segfault due to init only in multi_perform
   
-  ... as otherwise we might get stuck thinking there's no more data to
-  handle.
+  The proper FTP wildcard init is now more properly done in Curl_pretransfer()
+  and the corresponding cleanup in Curl_close().
   
-  Reported-by: Damien Vielpeau
+  The previous place of init/cleanup code made the internal pointer to be NULL
+  when this feature was used with the multi_socket() API, as it was made within
+  the curl_multi_perform() function.
   
-  Fixes #737
+  Reported-by: Jonathan Cardoso Machado
+  Fixes #800
 
-- mbedtls: follow-up for the previous commit
+Jay Satiro (13 May 2016)
+- libcurl-tlibcurl-thread: Update OpenSSL links
+  
+  Because the old OpenSSL link now redirects to their master documentation
+  (currently 1.1.0), which does not document the required actions for
+  OpenSSL <= 1.0.2.
 
-- mbedtls.c: name space pollution fix, Use 'Curl_'
+Daniel Stenberg (13 May 2016)
+- [Viktor Szakats brought this change]
 
-- mbedtls.c: changed private prefix to mbed_
+  darwinssl.c: fix OS X codename typo in comment
+
+- RELEASE-NOTES: synced with 68701e51c1f7
   
-  mbedtls_ is the prefix used by the mbedTLS library itself so we should
-  avoid using that for our private functions.
+  Added 8 bug fixes and 5 more contrbutors
 
-- mbedtls.h: fix compiler warnings
+- [Jay Satiro brought this change]
 
-- Revert "winbuild: trying to set some files eol=crlf for git"
+  mprintf: Fix processing of width and prec args
   
-  This reverts commit 9c08b4f1e7eced5a4d3782a3e0daa484c9d77d21.
+  Prior to this change a width arg could be erroneously output, and also
+  width and precision args could not be used together without crashing.
   
-  Didn't help. Caused problems.
+  "%0*d%s", 2, 9, "foo"
   
-  Fixes #756
-
-- curl.1: use example.com more
+  Before: "092"
+  After: "09foo"
   
-  Make (most) example snippets use the example.com domain instead of the
-  random ones picked and used before. Some of those were probably
-  legitimate sites and some not. example.com is designed for this purpose.
+  "%*.*s", 5, 2, "foo"
+  
+  Before: crash
+  After: "   fo"
+  
+  Test 557 is updated to verify this and more
 
 - [Michael Kaufmann brought this change]
 
-  HTTP2: Add a space character after the status code
+  ConnectionExists: follow-up fix for proxy re-use
   
-  The space character after the status code is mandatory, even if the
-  reason phrase is empty (see RFC 7230 section 3.1.2)
+  Follow-up commit to 5823179
   
-  Closes #755
+  Closes #648
 
-- [Viktor Szakats brought this change]
+- [Per Malmberg brought this change]
 
-  URLs: change http to https in many places
+  darwinssl: fix certificate verification disable on OS X 10.8
   
-  Closes #754
-
-- winbuild: trying to set some files eol=crlf for git
+  The new way of disabling certificate verification doesn't work on
+  Mountain Lion (OS X 10.8) so we need to use the old way in that version
+  too. I've tested this solution on versions 10.7.5, 10.8, 10.9, 10.10.2
+  and 10.11.
   
-  Thinking it might help to apply patches etc with git.
+  Closes #802
 
-- [Theodore Dubois brought this change]
+- [Cory Benfield brought this change]
 
-  curl.1: change example for -F
+  http2: Add space between colon and header value
   
-  It's a bad idea to send your passwords anywhere, especially over HTTP.
-  Modified example to send a picture instead.
+  curl's representation of HTTP/2 responses involves transforming the
+  response to a format that is similar to HTTP/1.1. Prior to this change,
+  curl would do this by separating header names and values with only a
+  colon, without introducing a space after the colon.
   
-  Fixes #752
-
-- KNOWN_BUGS: reorganized and cleaned up
+  While this is technically a valid way to represent a HTTP/1.1 header
+  block, it is much more common to see a space following the colon. This
+  change introduces that space, to ensure that incautious tools are safely
+  able to parse the header block.
   
-  Now sorted into categories and organized in the same style we do the
-  TODO document. It will make each issue linked properly on the
-  https://curl.haxx.se/docs/knownbugs.html web page.
+  This also ensures that the difference between the HTTP/1.1 and HTTP/2
+  response layout is as minimal as possible.
   
-  The sections should make it easier to find issues and issues related to
-  areas of the reader's specific interest.
-
-Jay Satiro (6 Apr 2016)
-- KNOWN_BUGS: #95 curl in Windows can't handle Unicode arguments
-
-Steve Holme (6 Apr 2016)
-- KNOWN_BUGS: Use https://curl.haxx.se URL for github based issues
-
-- CHECKSRC.md: Corrected some typos
-
-- RELEASE-NOTES: Corrected last updated
+  Bug: https://github.com/curl/curl/issues/797
   
-  Included a summary of the checksrc.bat updates and combined two krb5
-  changes as they should have been implemented at the same time.
+  Closes #798
+  Fixes #797
 
-- vauth: Corrected a number of typos in comments
+Kamil Dudka (12 May 2016)
+- openssl: fix compile-time warning in Curl_ossl_check_cxn()
   
-  Reported-by: Michael Osipov
-
-Jay Satiro (5 Apr 2016)
-- KNOWN_BUGS: #94 IMAP custom requests use the LIST handler
+  ... introduced in curl-7_48_0-293-g2968c83:
   
-  Bug: https://github.com/curl/curl/issues/536
-  Reported-by: eXeC64@users.noreply.github.com
+  Error: COMPILER_WARNING:
+  lib/vtls/openssl.c: scope_hint: In function ‘Curl_ossl_check_cxn’
+  lib/vtls/openssl.c:767:15: warning: conversion to ‘int’ from ‘ssize_t’
+  may alter its value [-Wconversion]
 
-Daniel Stenberg (5 Apr 2016)
-- KNOWN_BUGS: remove 68, 70 and 72.
-  
-  Due to their age (we don't fully know if they actually remain) and lack
-  of detail - very few people will bother to find out what they're about
-  or work on them. If people truly still suffer from any of these, I
-  assume they will be reported again and then we'll deal with them.
+Jay Satiro (11 May 2016)
+- openssl: stricter connection check function
   
-  72. "Pausing pipeline problems."
-    https://curl.haxx.se/mail/lib-2009-07/0214.html
+  - In the case of recv error, limit returning 'connection still in place'
+  to EINPROGRESS, EAGAIN and EWOULDBLOCK.
   
-  70. Problem re-using easy handle after call to curl_multi_remove_handle
-    https://curl.haxx.se/mail/lib-2009-07/0249.html
+  This is an improvement on the parent commit which changed the openssl
+  connection check to use recv MSG_PEEK instead of SSL_peek.
   
-  68. "More questions about ares behavior".
-    https://curl.haxx.se/mail/lib-2009-08/0012.html
+  Ref: https://github.com/curl/curl/commit/856baf5#comments
 
-- KNOWN_BUGS: remove 92 and 88, fixed
+Daniel Stenberg (11 May 2016)
+- [Anders Bakken brought this change]
 
-- http2: fix connection reuse when PING comes after last DATA
-  
-  It turns out the google GFE HTTP/2 servers send a PING frame immediately
-  after a stream ends and its last DATA has been received by curl. So if
-  we don't drain that from the socket, it makes the socket readable in
-  subsequent checks and libcurl then (wrongly) assumes the connection is
-  dead when trying to reuse the connection.
+  TLS: SSL_peek is not a const operation
   
-  Reported-by: Joonas Kuorilehto
+  Calling SSL_peek can cause bytes to be read from the raw socket which in
+  turn can upset the select machinery that determines whether there's data
+  available on the socket.
   
-  Discussed in #750
-
-- multi: remove trailing space in debug output
-
-- RELEASE-NOTES: synced with 86e97b642fb
-
-- CHECKSRC.md: mention cmdline options, fix the bullet list
-
-- docs/CHECKSRC.md: initial version
-
-Steve Holme (3 Apr 2016)
-- checksrc.bat: Added support for the examples
-
-Daniel Stenberg (3 Apr 2016)
-- lib/src: fix the checksrc invoke
+  Since Curl_ossl_check_cxn only tries to determine whether the socket is
+  alive and doesn't actually need to see the bytes SSL_peek seems like
+  the wrong function to call.
   
-  ... now works correctly when invoke from the root makefile
+  We're able to occasionally reproduce a connect timeout due to this
+  bug. What happens is that Curl doesn't know to call SSL_connect again
+  after the peek happens since data is buffered in the SSL buffer and thus
+  select won't fire for this socket.
+  
+  Closes #795
 
-- nw: please the stricter checksrc
+Jay Satiro (9 May 2016)
+- [Daniel Stenberg brought this change]
 
-Steve Holme (3 Apr 2016)
-- checksrc.bat: Re-enabled the tests directory by default
+  TLS: move the ALPN/NPN enable bits to the connection
   
-  Following the recent changes to the source in the tests directory,
-  re-enabled tests for the default scan.
-
-- checksrc.bat: Added tests/server directory support
+  Only protocols that actually have a protocol registered for ALPN and NPN
+  should try to get that negotiated in the TLS handshake. That is only
+  HTTPS (well, http/1.1 and http/2) right now. Previously ALPN and NPN
+  would wrongly be used in all handshakes if libcurl was built with it
+  enabled.
   
-  In addition to commit 83b174b3f0 and following the recent changes.
+  Reported-by: Jay Satiro
+  
+  Fixes #789
 
-- tests: Fixed header files to comply with our code style
+Daniel Stenberg (8 May 2016)
+- libcurl-thread.3: openssl 1.1.0 is safe, and so is boringssl
 
-Daniel Stenberg (3 Apr 2016)
-- make checksrc: run it in docs/examples too by default
+- [Antonio Larrosa brought this change]
 
-- docs/examples: remove spurious white spaces all over
+  connect: fix invalid "Network is unreachable" errors
   
-  ... to please the new, slightly picker, checksrc.pl
+  Sometimes, in systems with both ipv4 and ipv6 addresses but where the
+  network doesn't support ipv6, Curl_is_connected returns an error
+  (intermittently) even if the ipv4 socket connects successfully.
+  
+  This happens because there's a for-loop that iterates on the sockets but
+  the error variable is not resetted when the ipv4 is checked and is ok.
+  
+  This patch fixes this problem by setting error to 0 when checking the
+  second socket and not having a result yet.
+  
+  Fixes #794
 
-- tests: fix make checksrc in servers/
+Jay Satiro (5 May 2016)
+- FAQ: refer to thread safety guidelines
 
-- tests: 'make checksrc' now checks server/ too
+Daniel Stenberg (3 May 2016)
+- connections: non-HTTP proxies on different ports aren't reused either
+  
+  Reported-by: Oleg Pudeyev and fuchaoqun
+  
+  Fixes #648
 
-- root/make: have checksrc run in include/curl too
+- http: make sure a blank header overrides accept_decoding
+  
+  Reported-by: rcanavan
+  Assisted-by: Isaac Boukris
+  Closes #785
 
-- tests/server: comply with our code style
+- CHECKSRC.md: clarified, explained the whitelist file
 
-- code: style updates
+- nroff-scan.pl: verify that references are made with \fI
 
-- checksrc: check for more malplaced spaces
+- docs: unified man page references to use \fI
 
-- unit: make unit test source code checksrc compliant
+- TODO: 17.14 --fail without --location should treat 3xx as a failure
+  
+  Closes #727
 
-- checksrc: run checksrc in tests when 'make checksrc' in root
+- RELEASE-NOTES: synced with 7987f5cb14d
 
-- checksrc: remove debug crap
+- [Isaac Boukris brought this change]
 
-- lib557: allow too long lines
+  CURLOPT_ACCEPT_ENCODING.3: Follow-up clarification
+  
+  Mention possible content-length mismatch with sum of bytes reported
+  by write callbacks when auto decoding is enabled.
+  
+  See #785
 
-- checksrc: allow ignore of specific warnings within a file (section)
+- test1140: run nroff-scan to verify man pages
 
-- checksrc: add warning names, explain on help output
+- nroff-scan.pl: verify the .BR references as well
 
-Steve Holme (3 Apr 2016)
-- checksrc.bat: Disable tests by default until warnings are fixed
+- CURLOPT_CONV_TO_NETWORK_FUNCTION.3: fix bad man page reference
 
-- checksrc.bat: Added support for the tests directory
+- CURLOPT_BUFFERSIZE.3: fix reference to CURLOPT_MAX_RECV_SPEED_LARGE
 
-- vauth: Removed the need for a separate GSS-API based SPN function
+- curl_easy_pause.3: fix man page reference
 
-- curl_sasl: Fixed potential null pointer utilisation
+Jay Satiro (1 May 2016)
+- tool_cb_hdr: Fix --remote-header-name with schemeless URL
   
-  Although this should never happen due to the relationship between the
-  'mech' and 'resp' variables, and the way they are allocated together,
-  it does cause problems for code analysis tools:
+  - Move the existing scheme check from tool_operate.
   
-  V595 The 'mech' pointer was utilized before it was verified against
-       nullptr. Check lines: 376, 381. curl_sasl.c 376
+  In the case of --remote-header-name we want to parse Content-disposition
+  for a filename, but only if the scheme is http or https. A recent
+  adjustment 0dc4d8e was made to account for schemeless URLs however it's
+  not 100% accurate. To remedy that I've moved the scheme check to the
+  header callback, since at that point the library has already determined
+  the scheme.
   
-  Bug: https://github.com/curl/curl/issues/745
-  Reported-by: Alexis La Goutte
+  Bug: https://github.com/curl/curl/issues/760
+  Reported-by: Kai Noda
 
-- spnego: Small code tidy up
+Daniel Stenberg (1 May 2016)
+- tls: make setting pinnedkey option fail if not supported
   
-  * Prefer dereference of string pointer rather than strlen()
-  * Free challenge pointer in one place
-  * Additional comments
-
-- krb5: Small code tidy up
+  to make it obvious to users trying to use the feature with TLS backends
+  not supporting it.
   
-  * Prefer dereference of string pointer rather than strlen()
-  * Free challenge pointer in one place
-  * Additional comments
+  Discussed in #781
+  Reported-by: Travis Burtrum
 
-- krb5_gssapi: Only process challenge when present
-  
-  This wouldn't cause a problem because of the way the function is called,
-  but prior to this change, we were processing the challenge message when
-  the credentials were NULL rather than when the challenge message was
-  populated.
+- nroff-scan.pl: verifies nroff pages
   
-  This also brings this part of the Kerberos 5 code in line with the
-  Negotiate code.
+  ... not used by any test yet but can be used stand-alone.
 
-- krb5: Fixed missing client response when mutual authentication enabled
-  
-  Although mutual authentication is currently turned off and can only be
-  enabled by changing libcurl source code, authentication using Kerberos
-  5 has been broken since commit 79543caf90 in this use case.
+- opts: fix broken/bad references
 
-- krb5_sspi: Only process challenge when present
-  
-  This wouldn't cause a problem because of the way the function is called,
-  but prior to this change, we were processing the challenge message when
-  the credentials were NULL rather than when the challenge message was
-  populated.
-  
-  This also brings this part of the Kerberos 5 code in line with the
-  Negotiate code.
+- [Michael Kaufmann brought this change]
 
-- krb5_sspi: Only generate the output token when its not allocated
-  
-  Prior to this change, we were generating the output token when the
-  credentials were NULL rather than when the output token was NULL.
+  docs: fix bugs in CURLOPT_HTTP_VERSION.3 and CURLOPT_PIPEWAIT.3
   
-  This also brings this part of the Kerberos 5 code in line with the
-  Negotiate code.
+  Closes #786
 
-- krb5: Only generate a SPN when its not known
+- CURLOPT_ACCEPT_ENCODING.3: clarified
   
-  Prior to this change, we were generating the SPN in the SSPI code when
-  the credentials were NULL and in the GSS-API code when the context was
-  empty. It is better to decouple the SPN generation from these checks
-  and only generate it when the SPN itself is NULL.
+  As discussed in #785
+
+- curl.1: --mail-rcpt can be used multiple times
   
-  This also brings this part of the Kerberos 5 code in line with the
-  Negotiate code.
+  Reported-by: mgendre
+  Closes #784
 
-Daniel Stenberg (3 Apr 2016)
-- tests/libtest: follow our code style guidelines better
+- [Karlson2k brought this change]
+
+  tests: Use 'pathhelp' for paths conversions in secureserver.pl
   
-  ... checksrc of all test code is pending.
+  Closes #675
 
-- checksrc.whitelist: remove fopen() uses
+- [Karlson2k brought this change]
 
-- formdata: use appropriate fopen() macros
+  tests: Use 'pathhelp' for paths conversions in sshserver.pl
 
-- checksrc: improve the fopen() parser somewhat
-  
-  The quote scanner was too fragile, now look for a comma instead to find
-  the mode argument.
+- [Karlson2k brought this change]
 
-- unit1604: fix snprintf
+  tests: Use 'pathhelp' for current path in runtests.pl
+
+- [Karlson2k brought this change]
+
+  tests: pathhelp.pm to process paths on Msys/Cygwin
+
+- lib: include curl_printf.h as one of the last headers
   
-  follow-up to 0326b06
+  curl_printf.h defines printf to curl_mprintf, etc. This can cause
+  problems with external headers which may use
+  __attribute__((format(printf, ...))) markers etc.
   
-  sizeof(pointer) is no good for the buffer size!
+  To avoid that they cause problems with system includes, we include
+  curl_printf.h after any system headers. That makes the three last
+  headers to always be, and we keep them in this order:
   
-  Reported-by: Viktor Szakats
-
-Steve Holme (3 Apr 2016)
-- unittests: Fixed compilation warnings
+   curl_printf.h
+   curl_memory.h
+   memdebug.h
   
-  warning: implicit declaration of function 'sprintf_was_used'
-           [-Wimplicit-function-declaration]
+  None of them include system headers, they all do funny #defines.
   
-  Follow up to the modications made to tests/libtest in commit 55452ebdff
-  as we prefer not to use sprintf() now.
-
-Daniel Stenberg (2 Apr 2016)
-- curl.1: -w filename_effective was introduced in 7.26.0
+  Reported-by: David Benjamin
   
-  We never made a 7.25.1 release
-
-- 7.49.0: next release version
+  Fixes #743
 
-- http2: make use of the nghttp2 error callback
-  
-  It offers extra info from nghttp2 in certain error cases. Like for
-  example when trying prior-knowledge http2 on a server that doesn't speak
-  http2 at all. The error message is passed on as a verbose message to
-  libcurl.
+- memdebug.h: remove inclusion of other headers
   
-  Discussed in #722
+  Mostly because they're not needed, because memdebug.h is always included
+  last of all headers so the others already included the correct ones.
   
-  The error callback was added in nghttp2 1.9.0
+  But also, starting now we don't want this to accidentally include any
+  system headers, as the header included _before_ this header may add
+  defines and other fun stuff that we won't want used in system includes.
 
-Steve Holme (2 Apr 2016)
-- spnego: Renamed the context's SPN variable
-  
-  To be consistent with the Kerberos 5 context and other authentication
-  code.
+- [Jay Satiro brought this change]
 
-- krb5_gssapi: Renamed the status variables
+  curl -J: make it work even without http:// scheme on URL
+  
+  It does open up a miniscule risk that one of the other protocols that
+  libcurl could use would send back a Content-Disposition header and then
+  curl would act on it even if not HTTP.
+  
+  A future mitigation for this risk would be to allow the callback to ask
+  libcurl which protocol is being used.
   
-  For consistency with the spnego code.
-
-- krb5: Moved host from Curl_auth_create_gssapi_user_message() to be argument
+  Verified with test 1312
   
-  For consistency with the spnego and oauth2 code moved the setting of
-  the host name outside of the Curl_auth_create_gssapi_user_messag()
-  function.
+  Closes #760
+
+- manpage-scan.pl: also verify the command line option docs
   
-  This will allow us to more easily override it in the future.
+  This script now also scans src/tool_getparam.c, docs/curl.1 and
+  src/tool_help.c and will warn if any of them lists a command line option
+  not mentioned in one of the other places.
 
-- test1119: Fixed missing CURL_DID_MEMORY_FUNC_TYPEDEFS symbol
+- curl: show the long option version of -q in the -h list
 
-- RELEASE-NOTES: Removed "http_negotiate: Corrected host and proxy host name"
+- curl: remove "--socks" as "--socks5" turned 8
   
-  As this was introduced in the recent vauth changes and not a prior
-  release.
+  In commit 2e42b0a2524 (Jan 2008) we made the option "--socks" deprecated
+  and it has not been documented since. The more explicit socks options
+  (like --socks4 or --socks5) should be used.
 
-Daniel Stenberg (1 Apr 2016)
-- RELEASE-NOTES: synced with 0aa8da10bbdafa
+- curl.1: document the deprecated --ftp-ssl option
 
-Steve Holme (1 Apr 2016)
-- http_negotiate: Corrected host and proxy host name being wrong way round
-  
-  I had accidentally used the proxy server name for the host and the host
-  server name for the proxy in commit ad5e9bfd5d and 6d6f9ca1d9. Whilst
-  Windows SSPI was quite happy with this, GSS-API wasn't.
+- curl: remove --http-request
   
-  Thanks-to:  Michael Osipov
+  It was mentioned as deprecated already in commit ae1912cb0d4 from
+  1999. It has not been documented in this millennium.
 
-- build: Changed the Visual Studio projects warning level from 3 to 4
-  
-  After squashing most of our compiler warnings, up'ed the default
-  warning level from 3 to 4 in order to increase the likelyhood of
-  catching future warnings.
+- curl: mention --ntlm-wb in -h list
 
-Daniel Stenberg (1 Apr 2016)
-- [ehlertjd@gmail.com brought this change]
+- curl: -h output lacked --proxy-header
 
-  IMAP: check pointer before dereferencing it
-  
-  may be null in the CURLOPT_CONNECT_ONLY case
-  
-  Fixes #747
+- curl.1: document --ntlm-wb
 
-Steve Holme (1 Apr 2016)
-- .gitignore: Added new VC14 SQLite based program database files
+- curl.1: document the long format of -q: --disable
 
-- curl_memory.h: Fixed typo in comment
-  
-  From commit 7218b52c49.
+- curl.1: mention the deprecated --krb4 option
 
-- spnego: Corrected some typos in comments
+- curl.1: document --ftp-ssl-reqd
   
-  Corrected typos from commit ad5e9bfd5d and 6d6f9ca1d9.
+  Even if deprecated, document it so that people will find it as old
+  scripts may still use it.
 
-- memdebug: Ensure curl/curl.h is included before curl_memory.h
+- curl: use --telnet-option as documented
   
-  Follow up to commit 7db9782dd6.
+  The code said "telnet-options" but no documentation ever said so. It
+  worked fine since the code is fine with a unique match of the first
+  part.
 
-Daniel Stenberg (1 Apr 2016)
-- upload: missing rewind call could make libcurl hang
+- getparam: remove support for --ftpport
   
-  When an upload is done, there are two places where that can be detected
-  and only one of them would rewind the input stream - which sometimes is
-  necessary for example when doing NTLM HTTP POSTs and more.
+  It has been deprecated and undocumented since commit ad5ead8bed7 (Dec
+  2003). --ftp-port is the proper long option name.
+
+- curl: make --disable work as long form of -q
   
-  This could then end up libcurl hanging.
+  To make the aliases list reflect reality.
+
+- aliases: remove trailing space from capath string
+
+- cmdline parse: only single letter options have single-letter strings
   
-  Figured-out-by: Isaac Boukris
-  Reported-by: Anatol Belski
+  ... moved around options so that parsing the code to find all
+  single-letter options easier.
+
+Jay Satiro (28 Apr 2016)
+- CURLINFO_TLS_SSL_PTR.3: Clarify SSL pointer availability
   
-  Fixes #741
+  Bug: https://curl.haxx.se/mail/lib-2016-04/0126.html
+  Reported-by: Bru Rom
 
-- curl.h: define CURL_DID_MEMORY_FUNC_TYPEDEFS
+Daniel Stenberg (28 Apr 2016)
+- curl_easy_getinfo.3: remove superfluous blank lines
+
+- test1139: verifies libcurl option man page presence
   
-  So that we only do the extra typedefs in curl_memory.h when we really
-  need to and avoid double typedefs.
+  - checks that each option has its own man page present
   
-  follow-up commit to 7218b52c49aeb1
+  - checks that each option is mentioned in its corresponding index man
+    page
+
+- curl_easy_getinfo.3: added missing mention of CURLINFO_TLS_SESSION
   
-  Thanks-to: Steve Holme
+  ... although it is deprecated.
 
-- curl/mprintf.h: remove support for _MPRINTF_REPLACE
+Jay Satiro (28 Apr 2016)
+- mbedtls: Fix session resume
   
-  The define is not in our name space and is therefore not protected by
-  our API promises.
+  This also fixes PolarSSL session resume.
   
-  It was only really used by libcurl internals but was mostly erased from
-  there already in 8aabbf5 (March 2015). This is supposedly the final
-  death blow to that define from everywhere.
+  Prior to this change the TLS session information wasn't properly
+  saved and restored for PolarSSL and mbedTLS.
   
-  As a side-effect, making sure _MPRINTF_REPLACE is gone and not used, I
-  made the lib tests in tests/libtest/ use curl_printf.h for its redefine
-  magic and then subsequently the use of sprintf() got banned in the tests
-  as well (as it is in libcurl internals) and I then replaced them all
-  with snprintf().
+  Bug: https://curl.haxx.se/mail/lib-2016-01/0070.html
+  Reported-by: Thomas Glanzmann
   
-  In the unlikely event that any users is actually using this define and
-  gets sad by this change, it is very easily copied to the user's own
-  code.
+  Bug: https://curl.haxx.se/mail/lib-2016-04/0095.html
+  Reported-by: Moti Avrahami
 
-- curl_memory.h: avoid the curl/curl.h include
-  
-  Discussed in #743
+Daniel Stenberg (27 Apr 2016)
+- RELEASE-NOTES: synced with f4298fcc6d2
 
-Steve Holme (1 Apr 2016)
-- url: Corrected get protocol family for FTP and LDAP
-  
-  Fixed copy/paste error from commit a5aec58726.
+- [Michael Kaufmann brought this change]
 
-Jay Satiro (31 Mar 2016)
-- strerror: don't bit shift a signed integer
+  opts: Fix some syntax errors in example code fragments
   
-  Bug: https://github.com/curl/curl/issues/744
-  Reported-by: Alexis La Goutte
+  Fixes #779
 
-Daniel Stenberg (31 Mar 2016)
-- http2: more documentation for prior knowledge
+- openssl: avoid BN_print a NULL bignum
+  
+  OpenSSL 1.1.0-pre seems to return NULL(?) for a whole lot of those
+  numbers so make sure the function handles this.
+  
+  Reported-by: Linus Nordberg
 
-- [Diego Bes brought this change]
+- [Marcel Raad brought this change]
 
-  http2: support "prior knowledge", no upgrade from HTTP/1.1
-  
-  Supports HTTP/2 over clear TCP
+  CONNECT_ONLY: don't close connection on GSS 401/407 reponses
   
-  - Optimize switching to HTTP/2 by removing calls to init and setup
-  before switching. Switching will eventually call setup and setup calls
-  init.
+  Previously, connections were closed immediately before the user had a
+  chance to extract the socket when the proxy required Negotiate
+  authentication.
   
-  - Supports new version to “force” the use of HTTP/2 over clean TCP
+  This regression was brought in with the security fix in commit
+  79b9d5f1a42578f
   
-  - Add common line parameter “--http2-prior-knowledge” to the Curl
-    command line tool.
+  Closes #655
 
-- imap: remove duplicated function
+- CURLINFO_TLS_SESSION.3: clarify TLS library support before 7.48.0
+
+- mbedtls.c: silly spellfix of a comment
+
+- KNOWN_BUGS: 1.10 Strips trailing dot from host name
   
-  The list and search response functions were identical! Merged into one
-  now. Detected by PVS Studio.
+  Closes #716
+
+- test1322: verify stripping of trailing dot from host name
   
-  Reported-by: Alexis La Goutte
+  While being debated (in #716) and a violation of RFC 7230 section 5.4,
+  this test verifies that the existing functionality works as intended. It
+  strips the dot from the host name and uses the host without dot
+  throughout the internals.
 
-- SOCKS5_gssapi_negotiate: don't assume little-endian ints
+- multi: accidentally used resolved host name instead of proxy
   
-  The code copied one byte from a 32bit integer, which works fine as long
-  as the byte order is the same. Not a fine assumption. Reported by PVS
-  Studio.
+  Regression introduced in 09b5a998
   
-  Reported-by: Alexis La Goutte
+  Bug: https://curl.haxx.se/mail/lib-2016-04/0084.html
+  Reported-by: BoBo
 
-- http: remove ((expression)) double parentheses
+- symbols-in-versions: added new CURLSSLBACKEND_ symbols
 
-- Curl_add_buffer_send: avoid possible NULL dereference
-  
-  ... as we check for a NULL pointer below, we move the derefence to after
-  the check. Detected by PVS Studio.
+- test148: fixed after the --ftp-create-dirs retry change
   
-  Reported-by: Alexis La Goutte
+  follow-up commit to 3c1e84f569 as it made curl try a little harder
 
-- file: remove duplicate checks of the same variable
-  
-  ... as it doesn't change in between. Deteced by PVS Studio.
-  
-  Reported-by: Alexis La Goutte
+- curl.h: clarify curl_sslbackend for openssl clones and renames
 
-Steve Holme (30 Mar 2016)
-- [Marcel Raad brought this change]
+- [Karlson2k brought this change]
 
-  openssl: Fix compilation warnings
+  url.c: fixed DEBUGASSERT() for WinSock workaround
   
-  When compiling with OpenSSL 1.1.0 (so that the HAVE_X509_GET0_SIGNATURE
-  && HAVE_X509_GET0_EXTENSIONS pre-processor block is active), Visual C++
-  14 complains:
+  If buffer is allocated, but nothing is received during prereceive
+  stage, than number of processed bytes must be zero.
   
-  warning C4701: potentially uninitialized local variable 'palg' used
-  warning C4701: potentially uninitialized local variable 'psig' used
+  Closes #778
 
-Daniel Stenberg (30 Mar 2016)
-- multi: turn Curl_done into file local multi_done
+- KNOWN_BUGS: --interface for ipv6 binds to unusable IP address
   
-  ... as it now is used by multi.c only.
+  Closes #686 for now.
 
-- multi: multi_reconnect_request is the former Curl_reconnect_request
+- TODO: 1.17 Add support for IRIs
   
-  now a file local function in multi.c
+  Adding support for IRIs is a mouthful, but is probably interesting at
+  least for areas and countries where the use of such "URLs" are growing
+  popularity.
+  
+  Closes #776
+
+- THANKS-filter: Travis Burtrum
+
+- lib1517: checksrc compliance
+
+- [moparisthebest brought this change]
+
+  PolarSSL: Implement public key pinning
+
+Patrick Monnerat (22 Apr 2016)
+- os400: upgrade ILE/RPG binding
+
+- curl.h: CURLOPT_CONNECT_TO sets a struct slist *, not a string
 
-- multi: move Curl_do and Curl_do_done to multi.c and make static
+Daniel Stenberg (22 Apr 2016)
+- contributors.sh: make --releasenotes implied
   
-  ... called multi_do and multi_do_done as they're file local now.
+  It got too annoying to type =)
 
-Jay Satiro (29 Mar 2016)
-- wolfssl: Use ECC supported curves extension
-  
-  https://github.com/wolfSSL/wolfssl/issues/366
+- RELEASE-NOTES: synced with 3c1e84f5693d8093
 
-- build-wolfssl: Allow a broader range of ciphers (Visual Studio)
+- curl: make --ftp-create-dirs retry on failure
   
-  This is an update to the build-time options used to build wolfSSL in
-  Visual Studio for greater compatibility, and make it behave similar to
-  the way OpenSSL 1.0.2 behaves. Starting in wolfSSL v3.6.6 static ciphers
-  and SSLv3 are disabled by default at build time, but we can use both.
+  The underlying libcurl option used for this feature is
+  CURLOPT_FTP_CREATE_MISSING_DIRS which has the ability to retry the dir
+  creation, but it was never set to do that by the command line tool.
   
-  - Enable static cipher suites TLS_ECDH_ and TLS_RSA_.
+  Now it does.
   
-  - Enable SSLv3 hello. Though in libcurl we disable it by default at
-  runtime, we make it available so the user can manually select it if
-  necessary.
+  Bug: https://curl.haxx.se/mail/archive-2016-04/0021.html
+  Reported-by: John Wanghui
+  Help-by: Leif W
 
-Daniel Stenberg (29 Mar 2016)
-- [Isaac Boukris brought this change]
+- [Henrik Gaßmann brought this change]
 
-  GSS: make Curl_gss_log_error more verbose
-  
-  Also display the GSS_C_GSS_CODE (major code) when specified instead of
-  only GSS_C_MECH_CODE (minor code).
-  
-  In addition, the old code was printing a colon twice after the prefix
-  and also miscalculated the length of the buffer in between calls to
-  gss_display_status (the length of ": " was missing).
+  winbuild: add mbedtls support
   
-  Also, gss_buffer is not guaranteed to be NULL terminated and thus need
-  to restrict reading by its length.
+  Add WITH_MBEDTLS option. Make WITH_SSL, WITH_MBEDTLS and ENABLE_WINSSL
+  options mutual exclusive.
   
-  Closes #738
+  Closes #606
 
-- build: use roffit 0.11 feature
+- KNOWN_BUGS: fixed "5.6 Improper use of Autoconf cache variables"
   
-  ... load file specified as argument.
+  As of commit d9f3b365a3
 
-- http2: set correct scheme in handler structs [regression]
+- [Irfan Adilovic brought this change]
+
+  configure: ac_cv_ -> curl_cv_ for write-only vars
   
-  Since commit a5aec58 the handler schemes need to match for the
-  connections to be reused and for HTTP/2 multiplexing to work, reusing
-  connections is very important!
+  These configure vars are modified in a curl-specific way but never
+  evaluated or loaded from cache, even though they are designated as
+  _cv_. We could either implement proper AC_CACHE_CHECKs for them, or
+  remove them completely.
   
-  Closes #736
-
-- hostip.c: minor white space edit for style
+  Fixes #603 as ac_cv_func_gethostbyname is no longer clobbered, and
+  AC_CHECK_FUNC(gethostbyname...) will no longer spuriously succeed after
+  the first configure run with caching.
+  
+  `ac_cv_func_strcasecmp` is curious, see #770.
+  
+  `eval "ac_cv_func_$func=yes"` can still cause problems as it works in
+  tandem with AC_CHECK_FUNCS and then potentially modifies its result. It
+  would be best to rewrite this test to use a new CURL_CHECK_FUNCS macro,
+  which works the same as AC_CHECK_FUNCS but relies on caching the values
+  of curl_cv_func_* variables, without modifiying ac_cv_func_*.
 
-- [Viktor Szakats brought this change]
+- [Irfan Adilovic brought this change]
 
-  TODO: use secure protocol in recently added URL
+  configure: ac_cv_ -> curl_cv_ for r/w vars
   
-  Closes #733
-
-- HTTP2.md: mention libressl and boringssl too
+  These configure vars are modified in a curl-specific way and modified by
+  the configure process, but are never loaded from cache, even though they
+  are designated as _cv_. We should implement proper AC_CACHE_CHECKs for
+  them eventually.
 
-- docs/HTTP-COOKIES: converted to markdown
+- [Irfan Adilovic brought this change]
 
-- HTTP2: s/polarssl/mbedtls
+  configure: ac_cv_func_clock_gettime -> curl_...
+  
+  This variable must not be cached in its current form, as any cached
+  information will prevent the next configure run from determining the
+  correct LIBS needed for the function. Thus, rename prefix `ac_cv_` to
+  just `curl_`.
 
-Jay Satiro (28 Mar 2016)
-- wolfssl: Add ALPN support
+- [Irfan Adilovic brought this change]
 
-- tool_operate: remove mixed declaration
+  configure: ac_cv_ -> curl_cv_ for all cached vars
   
-  This is a follow up to the previous commit.
-
-Daniel Stenberg (28 Mar 2016)
-- curl: warn for --capath use if not supported by libcurl
+  This was automated by:
   
-  Closes #492
-
-- TODO: 2.5 Edge-triggered sockets should work
+  sed -b -i -f <(ack -A1 AC_CACHE_CHECK | \
+                 ack -o 'ac_cv_.*?\b' | \
+                 sort -u | xargs -n1 bash -c \
+                      'echo "s/$0/curl_cv_${0#ac_cv_}/g"') \
+      $(git ls-files)
+  
+  This only changed the prefix for 16 variables actually checked with
+  AC_CACHE_CHECK.
 
-- Makefile.am: skip the scripts dir
+- openssl: builds with OpenSSL 1.1.0-pre5
   
-  Skipping the scripts dir is primarily done for 'make install' so that it
-  does not attempt to install the zsh completion script as we've not yet
-  found a proper way to do/run that at install time.
+  The RSA, DSA and DH structs are now opaque and require use of new APIs
   
-  By leaving the script dir's Makefile in place, a user can still opt to
-  run make install manually in there.
+  Fixes #763
+
+Steve Holme (20 Apr 2016)
+- url.c: Prefer we don't use explicit NULLs in conditions
   
-  Closes #620
+  Fixed commit fa5fa65a30 to not use NULLs in if condition.
 
-- CURLMOPT_SOCKETFUNCTION.3: describe the 'what' argument
+Daniel Stenberg (20 Apr 2016)
+- [Isaac Boukris brought this change]
 
-- curl_multi_socket_action.3: mark the options properly
+  NTLM: check for NULL pointer before deferencing
   
-  ... to make them appear as links on the html version.
+  At ConnectionExists, both check->proxyuser and check->proxypasswd
+  could be NULL, so make sure to check first.
+  
+  Fixes #765
 
-Steve Holme (27 Mar 2016)
-- RELEASE-NOTES: Synced with f0bdd72c10
+- [Karlson2k brought this change]
 
-- http_ntlm: Renamed from curl_ntlm.[c|h]
+  tests: added test1517
   
-  Renamed the header and source files for this module as they are HTTP
-  specific and as such, they should use the naming convention as other
-  HTTP authentication source files do - this revert commit 260ee6b7bf.
+  ... for checking ability to receive full HTTP response when POST request
+  is used with slow read callback function.
   
-  Note: We could also rename curl_ntlm_wb.[c|h], however, the Winbind
-  code needs separating from the HTTP protocol and migrating into the
-  vauth directory, thus adding support for Winbind to the SASL based
-  protocols such as IMAP, POP3 and SMTP.
+  This test checks for bug #657 and verifies the work-around from
+  72d5e144fbc6.
+  
+  Closes #720
 
-Daniel Stenberg (27 Mar 2016)
-- [marquis-de-muesli brought this change]
+- [Karlson2k brought this change]
 
-  docs: curlinfo_filetime sftp support, new curlopt_quote "statvfs"
+  sendf.c: added ability to call recv() before send() as workaround
   
-  Closes #677
-
-- [marquis-de-muesli brought this change]
+  WinSock destroys recv() buffer if send() is failed. As result - server
+  response may be lost if server sent it while curl is still sending
+  request. This behavior noticeable on HTTP server short replies if
+  libcurl use several send() for request (usually for POST request).
+  To workaround this problem, libcurl use recv() before every send() and
+  keeps received data in intermediate buffer for further processing.
+  
+  Fixes: #657
+  Closes: #668
 
-  SSH: new CURLOPT_QUOTE command "statvfs"
+Kamil Dudka (19 Apr 2016)
+- connect: make sure that rc is initialized in singleipconnect()
   
-  usage: "statvfs path"
-  returns remote file system statistics
+  This commit fixes a Clang warning introduced in curl-7_48_0-190-g8f72b13:
+  
+  Error: CLANG_WARNING:
+  lib/connect.c:1120:11: warning: The right operand of '==' is a garbage value
+  1118|       }
+  1119|
+  1120|->     if(-1 == rc)
+  1121|         error = SOCKERRNO;
+  1122|     }
 
-- [marquis-de-muesli brought this change]
+Daniel Stenberg (19 Apr 2016)
+- make/checksrc: use $srcdir, not $top_srcdir
 
-  SSH: support CURLINFO_FILETIME
+- src/checksrc.whitelist: removed
 
-- [Karlson2k brought this change]
+- tool_operate: switch to inline checksrc ignore
 
-  sshserver.pl: use quotes for given options
+- lib/checksrc.whitelist: not needed anymore
   
-  Fixed failed redirection of stderr with some options. At least on Msys2,
-  perl fails to redirect stderr if $value contains newline or other weird
-  characters.
+  ... as checksrc now skips comments
 
-Jay Satiro (26 Mar 2016)
-- url: don't use bad offset in tld_check_name to show error
-  
-  libidn's tld_check_lz returns an error offset of the first character
-  that it failed to process, however that offset is not a byte offset and
-  may not even be in the locale encoding therefore we can't use it to show
-  the user the character that failed to process.
+- vtls.h: remove a space before semicolon
   
-  Bug: https://github.com/curl/curl/issues/731
-  Reported-by: Karlson2k
+  ... that the new checksrc detected
 
-Steve Holme (26 Mar 2016)
-- http_negotiate: Combine GSS-API and SSPI source files
-  
-  As the GSS-API and SSPI based source files are no longer library/API
-  specific, following the extraction of that authentication code to the
-  vauth directory, combine these files rather than maintain two separate
-  versions.
+- darwinssl: removed commented out code
 
-- vauth: Moved the Negotiate authentication code to the new vauth directory
+- http_chunks: removed checksrc disable
   
-  Part 2 of 2 - Moved the GSS-API based Negotiate authentication code.
+  ... since checksrc now skips comments
 
-- vauth: Moved the Negotiate authentication code to the new vauth directory
-  
-  Part 1 of 2 - Moved the SSPI based Negotiate authentication code.
+- imap: inlined checksrc disable instead of whitelist edit
 
-- warnless.h: Removed spurious character from commit 696bc6b9c9
+- checksrc: taught to skip comments
   
-  Not picked up by checksrc or Visual Studio but my own code review, this
-  would haven broken Intel based Unix builds - Perhaps I should learn to
-  type on my laptop's keyboard before committing!
+  ... but output non-stripped version of the line, even if that then can
+  make the script identify the wrong position in the line at
+  times. Showing the line stripped (ie without comments) is just too
+  surprising.
 
-- schannel: Fixed compilation warning from commit f8d88a4913
+- opts/Makefile.am: list all docs file one by one
   
-  warning C4244: '=': conversion from 'int' to 'unsigned short', possible
-                      loss of data
-
-- warnless?: Added some integer based conversion functions
+  ... to make it easier to add lines in patches that won't just break all
+  other patches trying to add lines too.
 
-Daniel Stenberg (25 Mar 2016)
-- [Dusty Mabe brought this change]
+- curl_easy_setopt.3: mention CURLOPT_TCP_FASTOPEN
 
-  docs/TODO: Add feature request for metalink in HTTP headers
+- RELEASE-NOTES: synced with 03de4e4b219
   
-  Closes #729
-  Closes #728
+  (since we just merged two major features)
 
-Steve Holme (25 Mar 2016)
-- build: Corrected typos from commit 70e56939aa
+- [Alessandro Ghedini brought this change]
 
-- vauth: Refactored function names after move to new vauth directory
+  connect: implement TCP Fast Open for Linux
   
-  Renamed all the SASL functions that moved to the new vauth directory to
-  include the correct module name.
+  Closes #660
 
-- vauth: Updated the copyright year after recent changes
-  
-  As most of this work was performed in 2015 but not pushed until 2016
-  updated the copyright year to reflect the public facing changes.
+- [Alessandro Ghedini brought this change]
 
-- vauth: Moved the OAuth 2.0 authentication code to the new vauth directory
+  tool: add --tcp-fastopen option
 
-- vauth: Moved the NTLM authentication code to the new vauth directory
+- [Alessandro Ghedini brought this change]
 
-- vauth: Moved the Kerberos V5 authentication code to the new vauth directory
+  connect: implement TCP Fast Open for OS X
 
-- digest.c: Fixed checksrc warnings
+- [Alessandro Ghedini brought this change]
 
-- vauth: Moved the DIGEST authentication code to the new vauth directory
+  url: add CURLOPT_TCP_FASTOPEN option
 
-- vauth: Moved the CRAM-MD5 authentication code to the new vauth directory
+- checksrc: pass on -D so the whitelists are found correctly
 
-- vauth: Moved the ClearText authentication code to the new vauth directory
+- configure: remove check for libresolve
+  
+  'strncasecmp' was once provided by libresolv (no trailing e) for SunOS,
+  but this check is broken and most likely adds nothing useful. Removing
+  now.
+  
+  Reported-by: Irfan Adilovic
+  
+  Discussed in #770
 
-- vauth: Moved Curl_sasl_build_spn() to create the initial vauth source files
+- scripts/make: use $(EXEEXT) for executables
+  
+  Reported-by: bodop
+  
+  Fixes #771
 
-- checksrc.bat: Added support for checking the new vauth directory
+- includes: avoid duplicate memory callback typdefs even harder
 
-- build: Updated all makefiles and project files for the new vauth directory
+- checksrc/makefile.am: use $top_srcdir to find source files
   
-  Updated the makefiles and Visual Studio project files to support moving
-  the authentication code to the new lib/vauth directory that was started
-  in commit 0d04e859e1.
+  ... to properly support out of source tree builds.
 
-Daniel Stenberg (24 Mar 2016)
-- [JDepooter brought this change]
+- RELEASE-NOTES: synced with 26ec93dd6aeba8dfb5
 
-  schannel: Add ALPN support
+- opts: fix option references missing (section)
+
+- [Michael Kaufmann brought this change]
+
+  news: CURLOPT_CONNECT_TO and --connect-to
   
-  Add ALPN support for schannel. This allows cURL to negotiate
-  HTTP/2.0 connections when built with schannel.
+  Makes curl connect to the given host+port instead of the host+port found
+  in the URL.
+
+- makefile.vc6: use d suffix on debug object
   
-  Closes #724
+  To allow both release and debug builds in parallel.
+  
+  Reported-by: Rod Widdowson
+  
+  Fixes #769
 
-Steve Holme (24 Mar 2016)
-- http: Minor update based on CODE_STYLE guidelines
+Jay Satiro (12 Apr 2016)
+- http2: Use size_t type for data drain count
+  
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-Daniel Stenberg (23 Mar 2016)
-- multi: fix "Operation timed out after" timer
+- http2: Improve header parsing
   
-  Use the local, reasonably updated, 'now' value when creating the message
-  string to output for the timeout condition.
+  - Error if a header line is larger than supported.
   
-  Fixes #619
-
-- openssl: boringssl provides the same numbering as openssl
+  - Warn if cumulative header line length may be larger than supported.
   
-  ... so we don't need extra boringssl precautions for for
-  HAVE_ERR_REMOVE_THREAD_STATE_NOARG.
+  - Allow spaces when parsing the path component.
   
-  Pointed-out-by: David Benjamin
-
-- openssl: fix ERR_remove_thread_state() for boringssl/libressl
+  - Make sure each header line ends in \r\n. This fixes an out of bounds.
   
-  The removed arg is only done in OpenSSL
+  - Disallow header continuation lines until we decide what to do.
   
-  Bug: https://twitter.com/xtraemeat/status/712564874098917376
-
-- bump: work on 7.48.1
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-- RELEASE-PROCEDURE: mention the github release tag edit
+- http2: Add Curl_http2_strerror for HTTP/2 error codes
   
-  ... and update the coming release dates a bit
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-Steve Holme (23 Mar 2016)
-- checksrc.bat: Updated the help to be consistent with generate.bat
+- [Tatsuhiro Tsujikawa brought this change]
+
+  http2: Don't increment drain when one header field is received
   
-  Follow up to commit a8c7f0fcbf prior to release.
+  Sicne we write header field in temporary location, not in the memory
+  that upper layer provides, incrementing drain should not happen.
+  
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-Version 7.48.0 (23 Mar 2016)
+- [Tatsuhiro Tsujikawa brought this change]
 
-Daniel Stenberg (23 Mar 2016)
-- RELEASE-NOTES: curl 7.48.0
+  http2: Ensure that http2_handle_stream_close is called
+  
+  This commit ensures that streams which was closed in on_stream_close
+  callback gets passed to http2_handle_stream_close.  Previously, this
+  might not happen.  To achieve this, we increment drain property to
+  forcibly call recv function for that stream.
+  
+  To more accurately check that we have no pending event before shutting
+  down HTTP/2 session, we sum up drain property into
+  http_conn.drain_total.  We only shutdown session if that value is 0.
+  
+  With this commit, when stream was closed before reading response
+  header fields, error code CURLE_HTTP2_STREAM is returned even if
+  HTTP/2 level error is NO_ERROR.  This signals the upper layer that
+  stream was closed by error just like TCP connection close in HTTP/1.
+  
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-- THANKS: 15 new contributors from 7.48.0 release
+- [Tatsuhiro Tsujikawa brought this change]
 
-Jay Satiro (23 Mar 2016)
-- CURLINFO_TLS_SSL_PTR.3: Warn about limitations
+  http2: Process paused data first before tear down http2 session
   
-  Bug: https://github.com/curl/curl/issues/685
-
-Daniel Stenberg (22 Mar 2016)
-- Revert "sshserver: remove use of AuthorizedKeysFile2"
+  This commit ensures that data from network are processed before HTTP/2
+  session is terminated.  This is achieved by pausing nghttp2 whenever
+  different stream than current easy handle receives data.
   
-  It seems we may have some autobuild problems after this commit went
-  in. Trying to see if a revert helps to get them back.
+  This commit also fixes the bug that sometimes processing hangs when
+  multiple HTTP/2 streams are multiplexed.
   
-  This reverts commit 2716350d1f3edc8e929f6ceeee05051090f6d642.
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-- maketgz: add -j to make dist
-  
-  ... makes it a lot faster
+- [Tatsuhiro Tsujikawa brought this change]
 
-- libcurl-thread.3: minor nroff format fix
+  http2: Check session closure early in http2_recv
+  
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-- CURLINFO_TLS_SSL_PTR.3: minor nroff format fix
+- [Tatsuhiro Tsujikawa brought this change]
 
-- CODE_STYLE: indend example code
+  http2: Add handling stream level error
   
-  ... to make it look nicer in markdown outputa
+  Previously, when a stream was closed with other than NGHTTP2_NO_ERROR
+  by RST_STREAM, underlying TCP connection was dropped.  This is
+  undesirable since there may be other streams multiplexed and they are
+  very much fine.  This change introduce new error code
+  CURLE_HTTP2_STREAM, which indicates stream error that only affects the
+  relevant stream, and connection should be kept open.  The existing
+  CURLE_HTTP2 means connection error in general.
+  
+  Ref: https://github.com/curl/curl/issues/659
+  Ref: https://github.com/curl/curl/pull/663
 
-Jay Satiro (22 Mar 2016)
-- build-wolfssl: Update VS properties for wolfSSL v3.9.0
+Daniel Stenberg (11 Apr 2016)
+- http2: drain the socket better...
   
-  - Do not use wolfSSL's sample user-setting files.
+  ... but ignore EAGAIN if the stream has ended so that we don't end up in
+  a loop. This is a follow-up to c8ab613 in order to avoid the problem
+  d261652 was made to fix.
   
-  wolfSSL starting in v3.9.0 has added their own sample user settings that
-  are applied by default, but we don't use them because we have our own
-  settings.
+  Reported-by: Jay Satiro
+  Clues-provided-by: Tatsuhiro Tsujikawa
   
-  - Do not use wolfSSL's Visual Studio Unicode character setting.
+  Discussed in #750
+
+- KNOWN_BUGS: added info for "Hangs with PolarSSL"
+
+- KNOWN_BUGS: 1.9 HTTP/2 frames while in the connection pool kill reuse
   
-  wolfSSL Visual Studio projects use the Unicode character set however our
-  settings and options imitate mingw build which does not use the Unicode
-  character set. This does not appear to have any effect at the moment but
-  better safe than sorry.
+  Closes #750
+
+- build: include scripts/ in the dist
+
+Steve Holme (9 Apr 2016)
+- CURLOPT_SOCKS5_GSSAPI_SERVICE: Merged with CURLOPT_PROXY_SERVICE_NAME
   
+  As these two options provide identical functionality, the former for
+  SOCK5 proxies and the latter for HTTP proxies, merged the two options
+  together.
   
-  These changes are backwards compatible with earlier versions.
+  As such CURLOPT_SOCKS5_GSSAPI_SERVICE is marked as deprecated as of
+  7.49.0.
 
-Steve Holme (22 Mar 2016)
-- hostip6: Fixed compilation warnings when verbose strings disabled
+- urldata: Use bool for socks5_gssapi_nec as it is a flag
   
-  warning C4189: 'data': local variable is initialized but not referenced
+  This value is set to TRUE or FALSE so should be a bool and not a long.
+
+- url: Ternary operator code style changes
+
+- CODE_STYLE: Added ternary operator example to 'Space around operators'
   
-  ...and some minor formatting/spacing changes.
+  Following conversation on the libcurl mailing list.
 
-Daniel Stenberg (21 Mar 2016)
-- sshserver: remove use of AuthorizedKeysFile2
+- sasl: Fixed compilation errors from commit 9d89a0387
   
-  Support for the (undocumented) AuthorizedKeysFile2 was removed in
-  OpenSSH 5.9, released in September 2011
+  ...when GSS-API or Windows SSPI are not used.
+
+- url: Corrected comments following 9d89a0387
+
+- docs: Added clarification following commit 9d89a0387
+
+- Makefile: Fixed echo of checksrc check
+
+- checksrc: Fix issue with the autobuilds not picking up the whitelist
+
+- checksrc: Added missing vauth and vtls directories
+
+- ftp/imap/pop3/smtp: Allow the service name to be overridden
   
-  Closes #715
+  Allow the service name to be overridden for DIGIST-MD5 and Kerberos 5
+  authentication in FTP, IMAP, POP3 and SMTP.
 
-Steve Holme (20 Mar 2016)
-- connect/ntlm/http: Fixed compilation warnings when verbose strings disabled
+- http_negotiate: Calculate service name and proxy service name locally
   
-  warning C4189: 'data': local variable is initialized but not referenced
+  Calculate the service name and proxy service names locally, rather than
+  in url.c which will allow for us to support overriding the service name
+  for other protocols such as FTP, IMAP, POP3 and SMTP.
+
+- ROADMAP: Updated following the move of the authentication code
+
+Patrick Monnerat (8 Apr 2016)
+- KNOWN_BUGS: openldap hangs. TODO: binary SASL.
 
-- openssl: Fixed compilation warning when /Wall enabled
+Daniel Stenberg (8 Apr 2016)
+- KNOWN_BUGS: 5.6 Improper use of Autoconf cache variables
   
-  warning C4706: assignment within conditional expression
+  Closes #603
 
-- CODE_STYLE: Use boolean conditions
+- KNOWN_BUGS: 11.2 error buffer not set...
   
-  Rather than use TRUE, FALSE, NULL, 0 or != 0 in if/while conditions.
+  Closes #544
+
+- KNOWN_BUGS: 11.1 Curl leaks .onion hostnames in DNS
   
-  Additionally, corrected some example code to adhere to the recommended
-  coding style.
+  Closes #543
 
-- inet_pton.c: Fixed compilation warnings
+- KNOWN_BUGS: 1.8 DNS timing is wrong for HTTP redirects
   
-  warning: conversion to 'unsigned char' from 'int' may alter its value
+  Closes #522
 
-Daniel Stenberg (19 Mar 2016)
-- RELEASE-NOTES: synced with 80851028efc2fa9
+- TODO: HTTP/2 "prior knowledge" is implemented!
 
-- mbedtls: fix compiler warning
-  
-  vtls/mbedtls.h:67:36: warning: implicit declaration of function
-  ‘mbedtls_sha256’ [-Wimplicit-function-declaration]
+- [Damien Vielpeau brought this change]
 
-Steve Holme (19 Mar 2016)
-- easy: Minor coding standard and style updates
-  
-  Following commit c5744340db. Additionally removes the need for a second
-  'result code' variable as well.
+  mbedtls: fix MBEDTLS_DEBUG builds
 
-Jay Satiro (19 Mar 2016)
-- easy: Remove poll failure check in easy_transfer
+- mbedtls: implement and provide *_data_pending()
   
-  .. because curl_multi_wait can no longer signal poll failure.
+  ... as otherwise we might get stuck thinking there's no more data to
+  handle.
   
-  follow-up to 77e1726
+  Reported-by: Damien Vielpeau
   
-  Bug: https://github.com/curl/curl/issues/707
+  Fixes #737
 
-Steve Holme (19 Mar 2016)
-- build: Added missing Visual Studio filter files for VC10 onwards
-  
-  As these files don't need to contain references to the source files,
-  although typically do, added basic files which only include three
-  filters and don't require the project file generator to be modified.
-  
-  These files allow the source code to be viewed in the Solution Explorer
-  in versions of Visual Studio from 2010 onwards in the same manner as
-  previous versions did rather than one large view of files.
+- mbedtls: follow-up for the previous commit
 
-- ftp/imap/pop3/smtp: Fixed compilation warning when /Wall enabled
-  
-  warning C4706: assignment within conditional expression
+- mbedtls.c: name space pollution fix, Use 'Curl_'
 
-- config-w32.h: Fixed compilation warning when /Wall enabled
+- mbedtls.c: changed private prefix to mbed_
   
-  warning C4668: 'USE_IPV6' is not defined as a preprocessor macro,
-                 replacing with '0' for '#if/#elif'
+  mbedtls_ is the prefix used by the mbedTLS library itself so we should
+  avoid using that for our private functions.
 
-- imap.c: Fixed compilation warning with /Wall enabled
+- mbedtls.h: fix compiler warnings
+
+- Revert "winbuild: trying to set some files eol=crlf for git"
   
-  warning C4701: potentially uninitialized local variable 'size' used
+  This reverts commit 9c08b4f1e7eced5a4d3782a3e0daa484c9d77d21.
   
-  Technically this can't happen, as the usage of 'size' is protected by
-  'if(parsed)' and 'parsed' is only set after 'size' has been parsed.
+  Didn't help. Caused problems.
   
-  Anyway, lets keep the compiler happy.
+  Fixes #756
 
-- KNOWN_BUGS: #93 Issue with CURLFORM_CONTENTLEN in arrays on 32-bit platforms
+- curl.1: use example.com more
+  
+  Make (most) example snippets use the example.com domain instead of the
+  random ones picked and used before. Some of those were probably
+  legitimate sites and some not. example.com is designed for this purpose.
 
-Daniel Stenberg (18 Mar 2016)
-- bump: the coming release is 7.48.0
+- [Michael Kaufmann brought this change]
 
-- configure: use cpp -P when needed
+  HTTP2: Add a space character after the status code
   
-  Since gcc 5, the processor output can get split up on multiple lines
-  that made the configure script fail to figure out values from
-  definitions. The fix is to use cpp -P, and this fix now first checks if
-  cpp -P is necessary and then if cpp -P works before it uses that to
-  extract defined values.
+  The space character after the status code is mandatory, even if the
+  reason phrase is empty (see RFC 7230 section 3.1.2)
   
-  Fixes #719
+  Closes #755
 
-Steve Holme (18 Mar 2016)
-- formdata.c: Fixed compilation warning
-  
-  formdata.c:390: warning: cast from pointer to integer of different size
-  
-  Introduced in commit ca5f9341ef this happens because a char*, which is
-  32-bits wide in 32-bit land, is being cast to a curl_off_t which is
-  64-bits wide where 64-bit integers are supported by the compiler.
-  
-  This doesn't happen in 64-bit land as a pointer is the same size as a
-  curl_off_t.
+- [Viktor Szakats brought this change]
+
+  URLs: change http to https in many places
   
-  This fix doesn't address the fact that a 64-bit value cannot be used
-  for CURLFORM_CONTENTLEN when set in a form array and compiled on a
-  32-bit platforms, it does at least suppress the compilation warning.
+  Closes #754
 
-Daniel Stenberg (18 Mar 2016)
-- FAQ: 2.5 Install libcurl for both 32bit and 64bit?
+- winbuild: trying to set some files eol=crlf for git
+  
+  Thinking it might help to apply patches etc with git.
 
-- [Gisle Vanem brought this change]
+- [Theodore Dubois brought this change]
 
-  openssl: adapt to API breakage in ERR_remove_thread_state()
-  
-  The OpenSSL API change that broke this is "Convert ERR_STATE to new
-  multi-threading API": openssl commit 8509dcc.
+  curl.1: change example for -F
   
-  Closes #713
-
-- version: init moved to private name space, added protos
+  It's a bad idea to send your passwords anywhere, especially over HTTP.
+  Modified example to send a picture instead.
   
-  follow-up to 80015cdd52145
+  Fixes #752
 
-- openssl: verbose: show matching SAN pattern
+- KNOWN_BUGS: reorganized and cleaned up
   
-  ... to allow users to see which specfic wildcard that matched when such
-  is used.
+  Now sorted into categories and organized in the same style we do the
+  TODO document. It will make each issue linked properly on the
+  https://curl.haxx.se/docs/knownbugs.html web page.
   
-  Also minor logic cleanup to simplify the code, and I removed all tabs
-  from verbose strings.
+  The sections should make it easier to find issues and issues related to
+  areas of the reader's specific interest.
 
-Jay Satiro (16 Mar 2016)
-- version: thread safety
+Jay Satiro (6 Apr 2016)
+- KNOWN_BUGS: #95 curl in Windows can't handle Unicode arguments
 
-Steve Holme (16 Mar 2016)
-- transfer: Removed redundant HTTP authentication include files
-  
-  It would also seem that share.h is not required here either as there
-  are no references to the Curl_share structure or functions.
+Steve Holme (6 Apr 2016)
+- KNOWN_BUGS: Use https://curl.haxx.se URL for github based issues
 
-- easy: Removed redundant HTTP authentication include files
+- CHECKSRC.md: Corrected some typos
 
-Jay Satiro (15 Mar 2016)
-- CURLOPT_SSLENGINE.3: Only for OpenSSL built with engine support
+- RELEASE-NOTES: Corrected last updated
   
-  Bug: https://curl.haxx.se/mail/lib-2016-03/0150.html
-  Reported-by: Oliver Graute
+  Included a summary of the checksrc.bat updates and combined two krb5
+  changes as they should have been implemented at the same time.
 
-Steve Holme (15 Mar 2016)
-- curl_sasl: Minor code indent fixes
+- vauth: Corrected a number of typos in comments
+  
+  Reported-by: Michael Osipov
 
-Daniel Stenberg (14 Mar 2016)
-- runtests: mention when run event-based
+Jay Satiro (5 Apr 2016)
+- KNOWN_BUGS: #94 IMAP custom requests use the LIST handler
+  
+  Bug: https://github.com/curl/curl/issues/536
+  Reported-by: eXeC64@users.noreply.github.com
 
-- easy: add check to malloc() when running event-based
+Daniel Stenberg (5 Apr 2016)
+- KNOWN_BUGS: remove 68, 70 and 72.
   
-  ... to allow torture tests then too.
+  Due to their age (we don't fully know if they actually remain) and lack
+  of detail - very few people will bother to find out what they're about
+  or work on them. If people truly still suffer from any of these, I
+  assume they will be reported again and then we'll deal with them.
+  
+  72. "Pausing pipeline problems."
+    https://curl.haxx.se/mail/lib-2009-07/0214.html
+  
+  70. Problem re-using easy handle after call to curl_multi_remove_handle
+    https://curl.haxx.se/mail/lib-2009-07/0249.html
+  
+  68. "More questions about ares behavior".
+    https://curl.haxx.se/mail/lib-2009-08/0012.html
 
-- memdebug: skip logging the limit countdown, fflush when reached
+- KNOWN_BUGS: remove 92 and 88, fixed
 
-- CODE_STYLE: Space around operators
+- http2: fix connection reuse when PING comes after last DATA
   
-  As just discussed on the mailing list, also document how we prefer
-  spacing in expressions.
-
-- curl: glob_range: no need to check unsigned variable for negative
+  It turns out the google GFE HTTP/2 servers send a PING frame immediately
+  after a stream ends and its last DATA has been received by curl. So if
+  we don't drain that from the socket, it makes the socket readable in
+  subsequent checks and libcurl then (wrongly) assumes the connection is
+  dead when trying to reuse the connection.
   
-  cppcheck warned:
+  Reported-by: Joonas Kuorilehto
   
-  [src/tool_urlglob.c:283]: (style) Checking if unsigned variable 'step_n'
-  is less than zero.
-
-- CODE_STYLE: add example for indent style as well
+  Discussed in #750
 
-- CODE_STYLE: mention braces for functions too
+- multi: remove trailing space in debug output
 
-- docs/Makefile.am: include CODE_STYLE in tarball too
+- RELEASE-NOTES: synced with 86e97b642fb
 
-- CONTRIBUTE: moved out code style to a separate document
+- CHECKSRC.md: mention cmdline options, fix the bullet list
 
-- CODE_STYLE: initial version
-  
-  Ripped out from CONTRIBUTE into its own document, but also extended from
-  there.
+- docs/CHECKSRC.md: initial version
 
-- curl_sasl.c: minor code indent fixes
+Steve Holme (3 Apr 2016)
+- checksrc.bat: Added support for the examples
 
-- multi: simplified singlesocket
+Daniel Stenberg (3 Apr 2016)
+- lib/src: fix the checksrc invoke
   
-  Since sh_getentry() now checks for invalid sockets itself and by
-  narrowing the scope of the remove_sock_from_hash variable.
+  ... now works correctly when invoke from the root makefile
 
-- multi: introduce sh_getentry() for looking up sockets in the sockhash
-  
-  Simplify the code by using a single entry that looks for a socket in the
-  socket hash. As indicated in #712, the code looked for CURL_SOCKET_BAD
-  at some point and that is ineffective/wrong and this makes it easier to
-  avoid that.
+- nw: please the stricter checksrc
 
-- [Jaime Fullaondo brought this change]
+Steve Holme (3 Apr 2016)
+- checksrc.bat: Re-enabled the tests directory by default
+  
+  Following the recent changes to the source in the tests directory,
+  re-enabled tests for the default scan.
 
-  multi hash: ensure modulo performed on curl_socket_t
+- checksrc.bat: Added tests/server directory support
   
-  Closes #712
+  In addition to commit 83b174b3f0 and following the recent changes.
 
-Steve Holme (13 Mar 2016)
-- base64: Minor coding standard and style updates
+- tests: Fixed header files to comply with our code style
 
-- base64: Use 'CURLcode result' for curl result codes
+Daniel Stenberg (3 Apr 2016)
+- make checksrc: run it in docs/examples too by default
 
-- negotiate: Use 'CURLcode result' for curl result codes
+- docs/examples: remove spurious white spaces all over
+  
+  ... to please the new, slightly picker, checksrc.pl
 
-Daniel Stenberg (13 Mar 2016)
-- [Maksim Kuzevanov brought this change]
+- tests: fix make checksrc in servers/
 
-  multi_runsingle: avoid loop in CURLM_STATE_WAITPROXYCONNECT
-  
-  Closes #703
+- tests: 'make checksrc' now checks server/ too
 
-- TODO: Use the RFC6265 test suite
+- root/make: have checksrc run in include/curl too
 
-Steve Holme (13 Mar 2016)
-- checksrc.bat: Added the ability to scan src and lib source independently
+- tests/server: comply with our code style
 
-- digest: Use boolean based success code for Curl_sasl_digest_get_pair()
-  
-  Rather than use a 0 and 1 integer base result code use a TRUE / FALSE
-  based success code.
+- code: style updates
 
-- digest: Corrected some typos in comments
+- checksrc: check for more malplaced spaces
 
-- krb5: Corrected some typos in function descriptions
+- unit: make unit test source code checksrc compliant
 
-- ntlm: Corrected some typos in function descriptions
+- checksrc: run checksrc in tests when 'make checksrc' in root
 
-- url: Corrected indentation when calling idna_to_ascii_lz()
+- checksrc: remove debug crap
 
-- idn_win32: Use boolean based success codes
-  
-  Rather than use 0 and 1 integer base result codes use a FALSE / TRUE
-  based success code.
+- lib557: allow too long lines
 
-Daniel Stenberg (10 Mar 2016)
-- idn_win32.c: warning: Trailing whitespace
+- checksrc: allow ignore of specific warnings within a file (section)
 
-Steve Holme (10 Mar 2016)
-- idn_win32.c: Fixed compilation warning from commit 9e7fcd4291
-  
-  warning C4267: 'function': conversion from 'size_t' to 'int',
-                 possible loss of data
+- checksrc: add warning names, explain on help output
 
-Daniel Stenberg (10 Mar 2016)
-- THANKS-filter: unify Michael König
+Steve Holme (3 Apr 2016)
+- checksrc.bat: Disable tests by default until warnings are fixed
 
-- RELEASE-NOTES: synced with 863c5766dd
+- checksrc.bat: Added support for the tests directory
 
-- ftp: remove a check for NULL(!)
-  
-  ... as it implies we need to check for that on all the other variable
-  references as well (as Coverity otherwise warns us for missing NULL
-  checks), and we're alredy making sure that the pointer is never NULL.
+- vauth: Removed the need for a separate GSS-API based SPN function
 
-- cookies: first n/v pair in Set-Cookie: is the cookie, then parameters
-  
-  RFC 6265 section 4.1.1 spells out that the first name/value pair in the
-  header is the actual cookie name and content, while the following are
-  the parameters.
+- curl_sasl: Fixed potential null pointer utilisation
   
-  libcurl previously had a more liberal approach which causes significant
-  problems when introducing new cookie parameters, like the suggested new
-  cookie priority draft.
+  Although this should never happen due to the relationship between the
+  'mech' and 'resp' variables, and the way they are allocated together,
+  it does cause problems for code analysis tools:
   
-  The previous logic read all n/v pairs from left-to-right and the first
-  name used that wassn't a known parameter name would be used as the
-  cookie name, thus accepting "Set-Cookie: Max-Age=2; person=daniel" to be
-  a cookie named 'person' while an RFC 6265 compliant parser should
-  consider that to be a cookie named 'Max-Age' with an (unknown) parameter
-  'person'.
+  V595 The 'mech' pointer was utilized before it was verified against
+       nullptr. Check lines: 376, 381. curl_sasl.c 376
   
-  Fixes #709
+  Bug: https://github.com/curl/curl/issues/745
+  Reported-by: Alexis La Goutte
 
-- krb5: improved type handling to avoid clang compiler warnings
+- spnego: Small code tidy up
+  
+  * Prefer dereference of string pointer rather than strlen()
+  * Free challenge pointer in one place
+  * Additional comments
 
-- url.c: fix clang warning: no newline at end of file
+- krb5: Small code tidy up
+  
+  * Prefer dereference of string pointer rather than strlen()
+  * Free challenge pointer in one place
+  * Additional comments
 
-- curl_multi_wait: never return -1 in 'numfds'
+- krb5_gssapi: Only process challenge when present
   
-  Such a return value isn't documented but could still happen, and the
-  curl tool code checks for it. It would happen when the underlying
-  Curl_poll() function returns an error. Starting now we mask that error
-  as a user of curl_multi_wait() would have no way to handle it anyway.
+  This wouldn't cause a problem because of the way the function is called,
+  but prior to this change, we were processing the challenge message when
+  the credentials were NULL rather than when the challenge message was
+  populated.
   
-  Reported-by: Jay Satiro
-  Closes #707
+  This also brings this part of the Kerberos 5 code in line with the
+  Negotiate code.
 
-- HTTP2.md: add CURL_HTTP_VERSION_2TLS and updated alt-svc link
+- krb5: Fixed missing client response when mutual authentication enabled
+  
+  Although mutual authentication is currently turned off and can only be
+  enabled by changing libcurl source code, authentication using Kerberos
+  5 has been broken since commit 79543caf90 in this use case.
 
-- curl_multi_wait.3: add example
+- krb5_sspi: Only process challenge when present
+  
+  This wouldn't cause a problem because of the way the function is called,
+  but prior to this change, we were processing the challenge message when
+  the credentials were NULL rather than when the challenge message was
+  populated.
+  
+  This also brings this part of the Kerberos 5 code in line with the
+  Negotiate code.
 
-Steve Holme (8 Mar 2016)
-- imap/pop3/smtp: Fixed connections upgraded with TLS are not reused
+- krb5_sspi: Only generate the output token when its not allocated
   
-  Regression since commit 710f14edba.
+  Prior to this change, we were generating the output token when the
+  credentials were NULL rather than when the output token was NULL.
   
-  Bug: https://github.com/curl/curl/issues/422
-  Reported-by: Justin Ehlert
+  This also brings this part of the Kerberos 5 code in line with the
+  Negotiate code.
 
-Jay Satiro (8 Mar 2016)
-- opt-docs: fix heading macros
+- krb5: Only generate a SPN when its not known
+  
+  Prior to this change, we were generating the SPN in the SSPI code when
+  the credentials were NULL and in the GSS-API code when the context was
+  empty. It is better to decouple the SPN generation from these checks
+  and only generate it when the SPN itself is NULL.
   
-  ..SH should be .SH
+  This also brings this part of the Kerberos 5 code in line with the
+  Negotiate code.
+
+Daniel Stenberg (3 Apr 2016)
+- tests/libtest: follow our code style guidelines better
   
-  Bug: https://github.com/curl/curl/issues/705
-  Reported-by: Eric S. Raymond
+  ... checksrc of all test code is pending.
+
+- checksrc.whitelist: remove fopen() uses
 
-Kamil Dudka (8 Mar 2016)
-- [Tim Rühsen brought this change]
+- formdata: use appropriate fopen() macros
 
-  cookie: do not refuse cookies for localhost
+- checksrc: improve the fopen() parser somewhat
   
-  Closes #658
+  The quote scanner was too fragile, now look for a comma instead to find
+  the mode argument.
 
-Daniel Stenberg (8 Mar 2016)
-- ftp_done: clear tunnel_state when secondary socket closes
+- unit1604: fix snprintf
   
-  Introducing a function for closing the secondary connection to make this
-  bug less likely to happen again.
+  follow-up to 0326b06
   
-  Reported-by: daboul
-  Closes #701
-
-- [Gisle Vanem brought this change]
+  sizeof(pointer) is no good for the buffer size!
+  
+  Reported-by: Viktor Szakats
 
-  openssl: use the correct OpenSSL/BoringSSL/LibreSSL in messages
+Steve Holme (3 Apr 2016)
+- unittests: Fixed compilation warnings
+  
+  warning: implicit declaration of function 'sprintf_was_used'
+           [-Wimplicit-function-declaration]
+  
+  Follow up to the modications made to tests/libtest in commit 55452ebdff
+  as we prefer not to use sprintf() now.
 
-- HTTP2.md: HTTP/2 by default for curl's HTTPS connections
+Daniel Stenberg (2 Apr 2016)
+- curl.1: -w filename_effective was introduced in 7.26.0
+  
+  We never made a 7.25.1 release
 
-- [Anders Bakken brought this change]
+- 7.49.0: next release version
 
-  pipeline: Sanity check pipeline pointer before accessing it.
+- http2: make use of the nghttp2 error callback
   
-  I got a crash with this stack:
+  It offers extra info from nghttp2 in certain error cases. Like for
+  example when trying prior-knowledge http2 on a server that doesn't speak
+  http2 at all. The error message is passed on as a verbose message to
+  libcurl.
   
-  curl/lib/url.c:2873 (Curl_removeHandleFromPipeline)
-  curl/lib/url.c:2919 (Curl_getoff_all_pipelines)
-  curl/lib/multi.c:561 (curl_multi_remove_handle)
-  curl/lib/url.c:415 (Curl_close)
-  curl/lib/easy.c:859 (curl_easy_cleanup)
+  Discussed in #722
   
-  Closes #704
-
-- HTTP2.md: mention the disable ALPN and NPN options
+  The error callback was added in nghttp2 1.9.0
 
-- TODO: 17.12 keep running, read instructions from pipe/socket
+Steve Holme (2 Apr 2016)
+- spnego: Renamed the context's SPN variable
   
-  And delete trailing whitespace
-  And rename section 17 to "command line tool" from "client"
+  To be consistent with the Kerberos 5 context and other authentication
+  code.
+
+- krb5_gssapi: Renamed the status variables
   
-  Closes #702
+  For consistency with the spnego code.
 
-- README.md: linkified
+- krb5: Moved host from Curl_auth_create_gssapi_user_message() to be argument
   
-  It also makes it less readable as plain text, so let's keep this
-  primarily for github use.
+  For consistency with the spnego and oauth2 code moved the setting of
+  the host name outside of the Curl_auth_create_gssapi_user_messag()
+  function.
   
-  Removed the top ascii art logo, as it looks weird when markdownified.
+  This will allow us to more easily override it in the future.
 
-- README.md: markdown version of README
+- test1119: Fixed missing CURL_DID_MEMORY_FUNC_TYPEDEFS symbol
+
+- RELEASE-NOTES: Removed "http_negotiate: Corrected host and proxy host name"
   
-  Attempt to make it look more appealing on github
+  As this was introduced in the recent vauth changes and not a prior
+  release.
+
+Daniel Stenberg (1 Apr 2016)
+- RELEASE-NOTES: synced with 0aa8da10bbdafa
 
-Jay Satiro (6 Mar 2016)
-- mprintf: update trio project link
+Steve Holme (1 Apr 2016)
+- http_negotiate: Corrected host and proxy host name being wrong way round
+  
+  I had accidentally used the proxy server name for the host and the host
+  server name for the proxy in commit ad5e9bfd5d and 6d6f9ca1d9. Whilst
+  Windows SSPI was quite happy with this, GSS-API wasn't.
+  
+  Thanks-to:  Michael Osipov
 
-Daniel Stenberg (6 Mar 2016)
-- CURLOPT_ACCEPTTIMEOUT_MS.3: added example
+- build: Changed the Visual Studio projects warning level from 3 to 4
+  
+  After squashing most of our compiler warnings, up'ed the default
+  warning level from 3 to 4 in order to increase the likelyhood of
+  catching future warnings.
 
-- CURLOPT_ACCEPT_ENCODING.3: added example
+Daniel Stenberg (1 Apr 2016)
+- [ehlertjd@gmail.com brought this change]
 
-- CURLOPT_APPEND.3: added example
+  IMAP: check pointer before dereferencing it
+  
+  may be null in the CURLOPT_CONNECT_ONLY case
+  
+  Fixes #747
 
-- CURLOPT_NOPROGRESS.3: added example, conform to stardard style
+Steve Holme (1 Apr 2016)
+- .gitignore: Added new VC14 SQLite based program database files
 
-Steve Holme (6 Mar 2016)
-- build-openssl/checksrc.bat: Fixed prepend vs append of Perl path
+- curl_memory.h: Fixed typo in comment
   
-  Fixed inconsistency from commit 1eae114065 and 0ad6c72227 of the order
-  in which Perl was added to the PATH.
+  From commit 7218b52c49.
 
-Daniel Stenberg (6 Mar 2016)
-- opts: added two examples
+- spnego: Corrected some typos in comments
+  
+  Corrected typos from commit ad5e9bfd5d and 6d6f9ca1d9.
 
-- CURLOPT_SSL_CTX_FUNCTION.3: use .NF for example
+- memdebug: Ensure curl/curl.h is included before curl_memory.h
+  
+  Follow up to commit 7db9782dd6.
 
-- CURLOPT_SSL_CTX_FUNCTION.3: added example
+Daniel Stenberg (1 Apr 2016)
+- upload: missing rewind call could make libcurl hang
+  
+  When an upload is done, there are two places where that can be detected
+  and only one of them would rewind the input stream - which sometimes is
+  necessary for example when doing NTLM HTTP POSTs and more.
+  
+  This could then end up libcurl hanging.
+  
+  Figured-out-by: Isaac Boukris
+  Reported-by: Anatol Belski
   
-  and removed erroneous reference to test case lib509
+  Fixes #741
 
-- curlx.c: use more curl style code
+- curl.h: define CURL_DID_MEMORY_FUNC_TYPEDEFS
+  
+  So that we only do the extra typedefs in curl_memory.h when we really
+  need to and avoid double typedefs.
+  
+  follow-up commit to 7218b52c49aeb1
+  
+  Thanks-to: Steve Holme
 
-- test46: change cookie expiry date
+- curl/mprintf.h: remove support for _MPRINTF_REPLACE
+  
+  The define is not in our name space and is therefore not protected by
+  our API promises.
+  
+  It was only really used by libcurl internals but was mostly erased from
+  there already in 8aabbf5 (March 2015). This is supposedly the final
+  death blow to that define from everywhere.
   
-  Since two of the cookies would now otherwise expire and cause the test
-  to fail after commit 20de9b4f09
+  As a side-effect, making sure _MPRINTF_REPLACE is gone and not used, I
+  made the lib tests in tests/libtest/ use curl_printf.h for its redefine
+  magic and then subsequently the use of sprintf() got banned in the tests
+  as well (as it is in libcurl internals) and I then replaced them all
+  with snprintf().
   
-  Discussed in #697
+  In the unlikely event that any users is actually using this define and
+  gets sad by this change, it is very easily copied to the user's own
+  code.
 
-Jay Satiro (5 Mar 2016)
-- [Viktor Szakats brought this change]
+- curl_memory.h: avoid the curl/curl.h include
+  
+  Discussed in #743
 
-  makefile.m32: add missing libs for static -winssl-ssh2 builds
+Steve Holme (1 Apr 2016)
+- url: Corrected get protocol family for FTP and LDAP
   
-  Bug: https://github.com/curl/curl/pull/693
+  Fixed copy/paste error from commit a5aec58726.
 
-- mbedtls: fix user-specified SSL protocol version
+Jay Satiro (31 Mar 2016)
+- strerror: don't bit shift a signed integer
   
-  Prior to this change when a single protocol CURL_SSLVERSION_ was
-  specified by the user that version was set only as the minimum version
-  but not as the maximum version as well.
+  Bug: https://github.com/curl/curl/issues/744
+  Reported-by: Alexis La Goutte
 
-Steve Holme (5 Mar 2016)
-- .gitignore: Added *.VC.opendb and *.vcxproj.user files for VC14
+Daniel Stenberg (31 Mar 2016)
+- http2: more documentation for prior knowledge
 
-- build-openssl.bat: Fixed cannot find perl if installed but not in path
+- [Diego Bes brought this change]
 
-- checksrc.bat: Fixed cannot find perl if installed but not in path
+  http2: support "prior knowledge", no upgrade from HTTP/1.1
+  
+  Supports HTTP/2 over clear TCP
+  
+  - Optimize switching to HTTP/2 by removing calls to init and setup
+  before switching. Switching will eventually call setup and setup calls
+  init.
+  
+  - Supports new version to “force” the use of HTTP/2 over clean TCP
+  
+  - Add common line parameter “--http2-prior-knowledge” to the Curl
+    command line tool.
 
-Jay Satiro (5 Mar 2016)
-- [Viktor Szakats brought this change]
+- imap: remove duplicated function
+  
+  The list and search response functions were identical! Merged into one
+  now. Detected by PVS Studio.
+  
+  Reported-by: Alexis La Goutte
 
-  makefile.m32: fix to allow -ssh2-winssl combination
+- SOCKS5_gssapi_negotiate: don't assume little-endian ints
+  
+  The code copied one byte from a 32bit integer, which works fine as long
+  as the byte order is the same. Not a fine assumption. Reported by PVS
+  Studio.
   
-  In makefile.m32, option -ssh2 (libssh2) automatically implied -ssl
-  (OpenSSL) option, with no way to override it with -winssl. Since both
-  libssh2 and curl support using Windows's built-in SSL backend, modify
-  the logic to allow that combination.
+  Reported-by: Alexis La Goutte
 
-- cookie: Don't expire session cookies in remove_expired
-  
-  Prior to this change cookies with an expiry date that failed parsing
-  and were converted to session cookies could be purged in remove_expired.
-  
-  Bug: https://github.com/curl/curl/issues/697
-  Reported-by: Seth Mos
+- http: remove ((expression)) double parentheses
 
-Daniel Stenberg (3 Mar 2016)
-- cookie: remove redundant check
+- Curl_add_buffer_send: avoid possible NULL dereference
   
-  ... as it was already checked previously within the function.
+  ... as we check for a NULL pointer below, we move the derefence to after
+  the check. Detected by PVS Studio.
   
-  Reported-by: Dmitry-Me
-  Closes #695
-
-Jay Satiro (1 Mar 2016)
-- [Anders Bakken brought this change]
+  Reported-by: Alexis La Goutte
 
-  url: if Curl_done is premature then pipeline not in use
+- file: remove duplicate checks of the same variable
   
-  Prevent a crash if 2 (or more) requests are made to the same host and
-  pipelining is enabled and the connection does not complete.
+  ... as it doesn't change in between. Deteced by PVS Studio.
   
-  Bug: https://github.com/curl/curl/pull/690
+  Reported-by: Alexis La Goutte
 
-- [Viktor Szakats brought this change]
+Steve Holme (30 Mar 2016)
+- [Marcel Raad brought this change]
 
-  makefile.m32: allow to pass .dll/.exe-specific LDFLAGS
-  
-  using envvars `CURL_LDFLAG_EXTRAS_DLL` and
-  `CURL_LDFLAG_EXTRAS_EXE` respectively. This
-  is useful f.e. to pass ASLR-related extra
-  options, that are required to make this
-  feature work when using the mingw toolchain.
+  openssl: Fix compilation warnings
   
-  Ref: https://github.com/curl/curl/pull/670#issuecomment-190863985
+  When compiling with OpenSSL 1.1.0 (so that the HAVE_X509_GET0_SIGNATURE
+  && HAVE_X509_GET0_EXTENSIONS pre-processor block is active), Visual C++
+  14 complains:
   
-  Closes https://github.com/curl/curl/pull/689
+  warning C4701: potentially uninitialized local variable 'palg' used
+  warning C4701: potentially uninitialized local variable 'psig' used
 
-Daniel Stenberg (29 Feb 2016)
-- formpost: fix memory leaks in AddFormData error branches
+Daniel Stenberg (30 Mar 2016)
+- multi: turn Curl_done into file local multi_done
   
-  Reported-by: Dmitry-Me
-  Fixes #688
+  ... as it now is used by multi.c only.
 
-Jay Satiro (28 Feb 2016)
-- getinfo: Fix syntax error when mbedTLS
+- multi: multi_reconnect_request is the former Curl_reconnect_request
   
-  The assignment of the mbedTLS TLS session info in the parent commit was
-  incorrect. Change the assignment to a pointer to the session structure.
+  now a file local function in multi.c
 
-- getinfo: Add support for mbedTLS TLS session info
+- multi: move Curl_do and Curl_do_done to multi.c and make static
   
-  .. and preprocessor check TLS session info is defined for all backends.
-
-Daniel Stenberg (26 Feb 2016)
-- ROADMAP: clarify on the TLS proxy, mention HTTP cookies to work on
+  ... called multi_do and multi_do_done as they're file local now.
 
-- file: try reading from files with no size
-  
-  Some systems have special files that report as 0 bytes big, but still
-  contain data that can be read (for example /proc/cpuinfo on
-  Linux). Starting now, a zero byte size is considered "unknown" size and
-  will be read as far as possible anyway.
-  
-  Reported-by: Jesse Tan
+Jay Satiro (29 Mar 2016)
+- wolfssl: Use ECC supported curves extension
   
-  Closes #681
+  https://github.com/wolfSSL/wolfssl/issues/366
 
-Jay Satiro (25 Feb 2016)
-- configure: warn on invalid ca bundle or path
-  
-  - Warn if --with-ca-bundle file does not exist.
-  
-  - Warn if --with-ca-path directory does not contain certificates.
-  
-  - Improve help messages for both.
-  
-  Example configure output:
-  
-    ca cert bundle:   /some/file   (warning: certs not found)
-    ca cert path:     /some/dir   (warning: certs not found)
+- build-wolfssl: Allow a broader range of ciphers (Visual Studio)
   
-  Bug: https://github.com/curl/curl/issues/404
-  Reported-by: Jeffrey Walton
-
-Daniel Stenberg (24 Feb 2016)
-- Curl_read: check for activated HTTP/1 pipelining, not only requested
+  This is an update to the build-time options used to build wolfSSL in
+  Visual Studio for greater compatibility, and make it behave similar to
+  the way OpenSSL 1.0.2 behaves. Starting in wolfSSL v3.6.6 static ciphers
+  and SSLv3 are disabled by default at build time, but we can use both.
   
-  ... as when pipelining is used, we read things into a unified buffer and
-  we don't do that with HTTP/2. This could then easily make programs that
-  set CURLMOPT_PIPELINING = CURLPIPE_HTTP1|CURLPIPE_MULTIPLEX to get data
-  intermixed or plain broken between HTTP/2 streams.
+  - Enable static cipher suites TLS_ECDH_ and TLS_RSA_.
   
-  Reported-by: Anders Bakken
+  - Enable SSLv3 hello. Though in libcurl we disable it by default at
+  runtime, we make it available so the user can manually select it if
+  necessary.
 
-Patrick Monnerat (24 Feb 2016)
-- os400: Fix ILE/RPG definition of CURLOPT_TFTP_NO_OPTIONS
+Daniel Stenberg (29 Mar 2016)
+- [Isaac Boukris brought this change]
 
-Jay Satiro (23 Feb 2016)
-- getinfo: CURLINFO_TLS_SSL_PTR supersedes CURLINFO_TLS_SESSION
-  
-  The two options are almost the same, except in the case of OpenSSL:
-  
-  CURLINFO_TLS_SESSION OpenSSL session internals is SSL_CTX *.
-  
-  CURLINFO_TLS_SSL_PTR OpenSSL session internals is SSL *.
+  GSS: make Curl_gss_log_error more verbose
   
-  For backwards compatibility we couldn't modify CURLINFO_TLS_SESSION to
-  return an SSL pointer for OpenSSL.
+  Also display the GSS_C_GSS_CODE (major code) when specified instead of
+  only GSS_C_MECH_CODE (minor code).
   
-  Also, add support for the 'internals' member to point to SSL object for
-  the other backends axTLS, PolarSSL, Secure Channel, Secure Transport and
-  wolfSSL.
+  In addition, the old code was printing a colon twice after the prefix
+  and also miscalculated the length of the buffer in between calls to
+  gss_display_status (the length of ": " was missing).
   
-  Bug: https://github.com/curl/curl/issues/234
-  Reported-by: dkjjr89@users.noreply.github.com
+  Also, gss_buffer is not guaranteed to be NULL terminated and thus need
+  to restrict reading by its length.
   
-  Bug: https://curl.haxx.se/mail/lib-2015-09/0127.html
-  Reported-by: Michael König
+  Closes #738
 
-Daniel Stenberg (23 Feb 2016)
-- multi_remove_handle: keep the timeout list until after disconnect
-  
-  The internal Curl_done() function uses Curl_expire() at times and that
-  uses the timeout list. Better clean up the list once we're done using
-  it. This caused a segfault.
+- build: use roffit 0.11 feature
   
-  Reported-by: 蔡文凱
-  Bug: https://curl.haxx.se/mail/lib-2016-02/0097.html
+  ... load file specified as argument.
 
-Kamil Dudka (23 Feb 2016)
-- tests/sshserver.pl: use RSA instead of DSA for host auth
-  
-  DSA is no longer supported by OpenSSH 7.0, which causes all SCP/SFTP
-  test cases to be skipped.  Using RSA for host authentication works with
-  both old and new versions of OpenSSH.
+- http2: set correct scheme in handler structs [regression]
   
-  Reported-by: Karlson2k
+  Since commit a5aec58 the handler schemes need to match for the
+  connections to be reused and for HTTP/2 multiplexing to work, reusing
+  connections is very important!
   
-  Closes #676
+  Closes #736
 
-Jay Satiro (23 Feb 2016)
-- TFTP: add option to suppress TFTP option requests (Part 2)
-  
-  - Add tests.
-  
-  - Add an example to CURLOPT_TFTP_NO_OPTIONS.3.
-  
-  - Add --tftp-no-options to expose CURLOPT_TFTP_NO_OPTIONS.
-  
-  Bug: https://github.com/curl/curl/issues/481
+- hostip.c: minor white space edit for style
 
-- [Michael Koenig brought this change]
+- [Viktor Szakats brought this change]
 
-  TFTP: add option to suppress TFTP option requests (Part 1)
-  
-  Some TFTP server implementations ignore the "TFTP Option extension"
-  (RFC 1782-1784, 2347-2349), or implement it in a flawed way, causing
-  problems with libcurl. Another switch for curl_easy_setopt
-  "CURLOPT_TFTP_NO_OPTIONS" is introduced which prevents libcurl from
-  sending TFTP option requests to a server, avoiding many problems caused
-  by faulty implementations.
+  TODO: use secure protocol in recently added URL
   
-  Bug: https://github.com/curl/curl/issues/481
+  Closes #733
 
-Daniel Stenberg (22 Feb 2016)
-- [Karlson2k brought this change]
+- HTTP2.md: mention libressl and boringssl too
 
-  runtests: Fixed usage of %PWD on MinGW64
-  
-  Closes #672
+- docs/HTTP-COOKIES: converted to markdown
 
-Jay Satiro (20 Feb 2016)
-- CURLOPT_DEBUGFUNCTION.3: Fix example
+- HTTP2: s/polarssl/mbedtls
 
-- [Viktor Szakats brought this change]
+Jay Satiro (28 Mar 2016)
+- wolfssl: Add ALPN support
 
-  src/Makefile.m32: add CURL_{LD,C}FLAGS_EXTRAS support
-  
-  Sync with lib/Makefile.m32 which already uses those variables.
+- tool_operate: remove mixed declaration
   
-  Bug: https://github.com/curl/curl/pull/670
+  This is a follow up to the previous commit.
 
-Dan Fandrich (20 Feb 2016)
-- Enabled test 1437 after the bug fix in commit 3fa220a6
+Daniel Stenberg (28 Mar 2016)
+- curl: warn for --capath use if not supported by libcurl
+  
+  Closes #492
 
-Jay Satiro (19 Feb 2016)
-- [Emil Lerner brought this change]
+- TODO: 2.5 Edge-triggered sockets should work
 
-  curl_sasl: Fix memory leak in digest parser
+- Makefile.am: skip the scripts dir
   
-  If any parameter in a HTTP DIGEST challenge message is present multiple
-  times, memory allocated for all but the last entry should be freed.
+  Skipping the scripts dir is primarily done for 'make install' so that it
+  does not attempt to install the zsh completion script as we've not yet
+  found a proper way to do/run that at install time.
   
-  Bug: https://github.com/curl/curl/pull/667
-
-Dan Fandrich (19 Feb 2016)
-- Added test 1437 to verify a memory leak
+  By leaving the script dir's Makefile in place, a user can still opt to
+  run make install manually in there.
   
-  Reported-by: neex@users.noreply.github.com
+  Closes #620
 
-Jay Satiro (18 Feb 2016)
-- CURLOPT_COOKIEFILE.3: HTTP headers must be Set-Cookie style
-  
-  Bug: https://github.com/curl/curl/issues/666
-  Reported-by: baumanj@users.noreply.github.com
+- CURLMOPT_SOCKETFUNCTION.3: describe the 'what' argument
 
-- curl.1: HTTP headers for --cookie must be Set-Cookie style
+- curl_multi_socket_action.3: mark the options properly
   
-  Bug: https://github.com/curl/curl/issues/666
-  Reported-by: baumanj@users.noreply.github.com
-
-Daniel Stenberg (18 Feb 2016)
-- curl.1: add a missing dash
+  ... to make them appear as links on the html version.
 
-- CONTRIBUTING.md: fix links
+Steve Holme (27 Mar 2016)
+- RELEASE-NOTES: Synced with f0bdd72c10
 
-- ISSUE_TEMPLATE: github issue template
+- http_ntlm: Renamed from curl_ntlm.[c|h]
   
-  First version, try this out!
-
-- CONTRIBUTING.md: move into .github
+  Renamed the header and source files for this module as they are HTTP
+  specific and as such, they should use the naming convention as other
+  HTTP authentication source files do - this revert commit 260ee6b7bf.
   
-  To hide github specific files somewhat from the rest.
+  Note: We could also rename curl_ntlm_wb.[c|h], however, the Winbind
+  code needs separating from the HTTP protocol and migrating into the
+  vauth directory, thus adding support for Winbind to the SASL based
+  protocols such as IMAP, POP3 and SMTP.
 
-- opts: add references
+Daniel Stenberg (27 Mar 2016)
+- [marquis-de-muesli brought this change]
+
+  docs: curlinfo_filetime sftp support, new curlopt_quote "statvfs"
+  
+  Closes #677
 
-- examples/make: add 'checksrc' target
+- [marquis-de-muesli brought this change]
 
-- 10-at-a-time: typecast the argument passed to sleep()
+  SSH: new CURLOPT_QUOTE command "statvfs"
+  
+  usage: "statvfs path"
+  returns remote file system statistics
 
-- externalsocket.c: fix compiler warning for fwrite return type
+- [marquis-de-muesli brought this change]
 
-- anyauthput.c: fix compiler warnings
+  SSH: support CURLINFO_FILETIME
 
-- simplessl.c: warning: while with space
+- [Karlson2k brought this change]
 
-- curlx.c: i2s_ASN1_IA5STRING() clashes with an openssl function
+  sshserver.pl: use quotes for given options
   
-  Reported-By: Gisle Vanem
+  Fixed failed redirection of stderr with some options. At least on Msys2,
+  perl fails to redirect stderr if $value contains newline or other weird
+  characters.
 
-- http2: don't decompress gzip decoding automatically
+Jay Satiro (26 Mar 2016)
+- url: don't use bad offset in tld_check_name to show error
   
-  At one point during the development of HTTP/2, the commit 133cdd29ea0
-  introduced automatic decompression of Content-Encoding as that was what
-  the spec said then. Now however, HTTP/2 should work the same way as
-  HTTP/1 in this regard.
+  libidn's tld_check_lz returns an error offset of the first character
+  that it failed to process, however that offset is not a byte offset and
+  may not even be in the locale encoding therefore we can't use it to show
+  the user the character that failed to process.
   
-  Reported-by: Kazuho Oku
+  Bug: https://github.com/curl/curl/issues/731
+  Reported-by: Karlson2k
+
+Steve Holme (26 Mar 2016)
+- http_negotiate: Combine GSS-API and SSPI source files
   
-  Closes #661
+  As the GSS-API and SSPI based source files are no longer library/API
+  specific, following the extraction of that authentication code to the
+  vauth directory, combine these files rather than maintain two separate
+  versions.
 
-Jay Satiro (16 Feb 2016)
-- [Tatsuhiro Tsujikawa brought this change]
+- vauth: Moved the Negotiate authentication code to the new vauth directory
+  
+  Part 2 of 2 - Moved the GSS-API based Negotiate authentication code.
 
-  http: Don't break the header into chunks if HTTP/2
+- vauth: Moved the Negotiate authentication code to the new vauth directory
   
-  nghttp2 callback deals with TLS layer and therefore the header does not
-  need to be broken into chunks.
+  Part 1 of 2 - Moved the SSPI based Negotiate authentication code.
+
+- warnless.h: Removed spurious character from commit 696bc6b9c9
   
-  Bug: https://github.com/curl/curl/issues/659
-  Reported-by: Kazuho Oku
+  Not picked up by checksrc or Visual Studio but my own code review, this
+  would haven broken Intel based Unix builds - Perhaps I should learn to
+  type on my laptop's keyboard before committing!
 
-Daniel Stenberg (16 Feb 2016)
-- [Viktor Szakats brought this change]
+- schannel: Fixed compilation warning from commit f8d88a4913
+  
+  warning C4244: '=': conversion from 'int' to 'unsigned short', possible
+                      loss of data
 
-  openssl: use macro to guard the opaque EVP_PKEY branch
+- warnless?: Added some integer based conversion functions
 
-- [Viktor Szakats brought this change]
+Daniel Stenberg (25 Mar 2016)
+- [Dusty Mabe brought this change]
 
-  openssl: avoid direct PKEY access with OpenSSL 1.1.0
-  
-  by using API instead of accessing an internal structure.
-  This is required starting OpenSSL 1.1.0-pre3.
+  docs/TODO: Add feature request for metalink in HTTP headers
   
-  Closes #650
-
-- RELEASE-NOTES: synced with ede0bfc079da
+  Closes #729
+  Closes #728
 
-- [Clint Clayton brought this change]
+Steve Holme (25 Mar 2016)
+- build: Corrected typos from commit 70e56939aa
 
-  CURLOPT_CONNECTTIMEOUT_MS.3: Fix example to use milliseconds option
+- vauth: Refactored function names after move to new vauth directory
   
-  Change the example in the docs for CURLOPT_CONNECTTIMEOUT_MS to use
-  CURLOPT_CONNECTTIMEOUT_MS instead of CURLOPT_CONNECTTIMEOUT.
+  Renamed all the SASL functions that moved to the new vauth directory to
+  include the correct module name.
+
+- vauth: Updated the copyright year after recent changes
   
-  Closes #653
+  As most of this work was performed in 2015 but not pushed until 2016
+  updated the copyright year to reflect the public facing changes.
+
+- vauth: Moved the OAuth 2.0 authentication code to the new vauth directory
 
-- opt-docs: add more references
+- vauth: Moved the NTLM authentication code to the new vauth directory
 
-- [David Byron brought this change]
+- vauth: Moved the Kerberos V5 authentication code to the new vauth directory
 
-  SCP: use libssh2_scp_recv2 to support > 2GB files on windows
-  
-  libssh2_scp_recv2 is introduced in libssh2 1.7.0 - to be released "any
-  day now.
-  
-  Closes #451
+- digest.c: Fixed checksrc warnings
 
-Jay Satiro (13 Feb 2016)
-- [Shine Fan brought this change]
+- vauth: Moved the DIGEST authentication code to the new vauth directory
 
-  gtls: fix for builds lacking encrypted key file support
-  
-  Bug: https://github.com/curl/curl/pull/651
+- vauth: Moved the CRAM-MD5 authentication code to the new vauth directory
 
-Dan Fandrich (13 Feb 2016)
-- test1604: Add to Makefile.inc so it gets run
+- vauth: Moved the ClearText authentication code to the new vauth directory
 
-Jay Satiro (12 Feb 2016)
-- generate.bat: Fix comment bug by removing old comments
-  
-  Remove NOTES section, it's no longer needed since we aren't setting the
-  errorlevel and more importantly the recently updated URL in the comments
-  is causing some unusual behavior that breaks the script.
-  
-  Closes https://github.com/curl/curl/issues/649
+- vauth: Moved Curl_sasl_build_spn() to create the initial vauth source files
 
-Kamil Dudka (12 Feb 2016)
-- curl.1: --disable-{eprt,epsv} are ignored for IPv6 hosts
-  
-  The behavior has been clarified in CURLOPT_FTP_USE_{EPRT,EPSV}.3 man
-  pages since curl-7_12_3~131.  This patch makes it clear in the curl.1
-  man page, too.
-  
-  Bug: https://bugzilla.redhat.com/1305970
+- checksrc.bat: Added support for checking the new vauth directory
 
-Daniel Stenberg (12 Feb 2016)
-- dist: ship buildconf.bat too
+- build: Updated all makefiles and project files for the new vauth directory
   
-  As the winbuild/* stuff uses it!
+  Updated the makefiles and Visual Studio project files to support moving
+  the authentication code to the new lib/vauth directory that was started
+  in commit 0d04e859e1.
 
-- curlx_tvdiff: handle 32bit time_t overflows
-  
-  On 32bit systems, make sure we don't overflow and return funky values
-  for very large time differences.
+Daniel Stenberg (24 Mar 2016)
+- [JDepooter brought this change]
+
+  schannel: Add ALPN support
   
-  Reported-by: Anders Bakken
+  Add ALPN support for schannel. This allows cURL to negotiate
+  HTTP/2.0 connections when built with schannel.
   
-  Closes #646
+  Closes #724
 
-- examples: fix some compiler warnings
+Steve Holme (24 Mar 2016)
+- http: Minor update based on CODE_STYLE guidelines
 
-- simplessl.c: fix my breakage
+Daniel Stenberg (23 Mar 2016)
+- multi: fix "Operation timed out after" timer
+  
+  Use the local, reasonably updated, 'now' value when creating the message
+  string to output for the timeout condition.
+  
+  Fixes #619
 
-- examples: adhere to curl code style
+- openssl: boringssl provides the same numbering as openssl
   
-  All plain C examples now (mostly) adhere to the curl code style. While
-  they are only examples, they had diverted so much and contained all
-  sorts of different mixed code styles by now. Having them use a unified
-  style helps users and readability. Also, as they get copy-and-pasted
-  widely by users, making sure they're clean and nice is a good idea.
+  ... so we don't need extra boringssl precautions for for
+  HAVE_ERR_REMOVE_THREAD_STATE_NOARG.
   
-  573 checksrc warnings were addressed.
+  Pointed-out-by: David Benjamin
 
-- examples/cookie_interface.c: add cleanup call
+- openssl: fix ERR_remove_thread_state() for boringssl/libressl
   
-  cleaning up handles is a good idea as we leak memory otherwise
+  The removed arg is only done in OpenSSL
   
-  Also, line wrapped before 80 columns.
+  Bug: https://twitter.com/xtraemeat/status/712564874098917376
 
-Kamil Dudka (10 Feb 2016)
-- nss: search slash in forward direction in dup_nickname()
+- bump: work on 7.48.1
+
+- RELEASE-PROCEDURE: mention the github release tag edit
   
-  It is wasteful to search it backwards if we look for _any_ slash.
+  ... and update the coming release dates a bit
 
-- nss: do not count enabled cipher-suites
+Steve Holme (23 Mar 2016)
+- checksrc.bat: Updated the help to be consistent with generate.bat
   
-  We only care if at least one cipher-suite is enabled, so it does
-  not make any sense to iterate till the end and count all enabled
-  cipher-suites.
+  Follow up to commit a8c7f0fcbf prior to release.
 
-Daniel Stenberg (10 Feb 2016)
-- contributors.sh: make 79 the max column width (from 80)
+Version 7.48.0 (23 Mar 2016)
 
-- RELEASE-NOTES: synced with c276aefee3995
+Daniel Stenberg (23 Mar 2016)
+- RELEASE-NOTES: curl 7.48.0
 
-- mbedtls.c: re-indent to better match curl standards
+- THANKS: 15 new contributors from 7.48.0 release
 
-- [Rafael Antonio brought this change]
+Jay Satiro (23 Mar 2016)
+- CURLINFO_TLS_SSL_PTR.3: Warn about limitations
+  
+  Bug: https://github.com/curl/curl/issues/685
 
-  mbedtls: fix memory leak when destroying SSL connection data
+Daniel Stenberg (22 Mar 2016)
+- Revert "sshserver: remove use of AuthorizedKeysFile2"
+  
+  It seems we may have some autobuild problems after this commit went
+  in. Trying to see if a revert helps to get them back.
   
-  Closes #626
+  This reverts commit 2716350d1f3edc8e929f6ceeee05051090f6d642.
 
-- mbedtls: fix ALPN usage segfault
-  
-  Since we didn't keep the input argument around after having called
-  mbedtls, it could end up accessing the wrong memory when figuring out
-  the ALPN protocols.
+- maketgz: add -j to make dist
   
-  Closes #642
-
-Jay Satiro (9 Feb 2016)
-- [Timotej Lazar brought this change]
+  ... makes it a lot faster
 
-  opts: update references to renamed options
+- libcurl-thread.3: minor nroff format fix
 
-- KNOWN_BUGS: Update #92 - Windows device prefix
+- CURLINFO_TLS_SSL_PTR.3: minor nroff format fix
 
-- tool_doswin: Support for literal path prefix \\?\
+- CODE_STYLE: indend example code
   
-  For example something like --output \\?\C:\foo
-
-Daniel Stenberg (9 Feb 2016)
-- configure: state "BoringSSL" in summary when that was detected
-
-- [David Benjamin brought this change]
+  ... to make it look nicer in markdown outputa
 
-  openssl: remove most BoringSSL #ifdefs.
-  
-  As of https://boringssl-review.googlesource.com/#/c/6980/, almost all of
-  BoringSSL #ifdefs in cURL should be unnecessary:
-  
-  - BoringSSL provides no-op stubs for compatibility which replaces most
-    #ifdefs.
+Jay Satiro (22 Mar 2016)
+- build-wolfssl: Update VS properties for wolfSSL v3.9.0
   
-  - DES_set_odd_parity has been in BoringSSL for nearly a year now. Remove
-    the compatibility codepath.
+  - Do not use wolfSSL's sample user-setting files.
   
-  - With a small tweak to an extend_key_56_to_64 call, the NTLM code
-    builds fine.
+  wolfSSL starting in v3.9.0 has added their own sample user settings that
+  are applied by default, but we don't use them because we have our own
+  settings.
   
-  - Switch OCSP-related #ifdefs to the more generally useful
-    OPENSSL_NO_OCSP.
+  - Do not use wolfSSL's Visual Studio Unicode character setting.
   
-  The only #ifdefs which remain are Curl_ossl_version and the #undefs to
-  work around OpenSSL and wincrypt.h name conflicts. (BoringSSL leaves
-  that to the consumer. The in-header workaround makes things sensitive to
-  include order.)
+  wolfSSL Visual Studio projects use the Unicode character set however our
+  settings and options imitate mingw build which does not use the Unicode
+  character set. This does not appear to have any effect at the moment but
+  better safe than sorry.
   
-  This change errs on the side of removing conditionals despite many of
-  the restored codepaths being no-ops. (BoringSSL generally adds no-op
-  compatibility stubs when possible. OPENSSL_VERSION_NUMBER #ifdefs are
-  bad enough!)
   
-  Closes #640
-
-Jay Satiro (8 Feb 2016)
-- KNOWN_BUGS: Windows device prefix is required for devices
+  These changes are backwards compatible with earlier versions.
 
-- tool_urlglob: Allow reserved dos device names (Windows)
-  
-  Allow --output to reserved dos device names without the device prefix
-  for backwards compatibility.
+Steve Holme (22 Mar 2016)
+- hostip6: Fixed compilation warnings when verbose strings disabled
   
-  Example: --output NUL can be used instead of --output \\.\NUL
+  warning C4189: 'data': local variable is initialized but not referenced
   
-  Bug: https://github.com/curl/curl/commit/4520534#commitcomment-15954863
-  Reported-by: Gisle Vanem
+  ...and some minor formatting/spacing changes.
 
-Daniel Stenberg (8 Feb 2016)
-- cookies: allow spaces in cookie names, cut of trailing spaces
-  
-  It turns out Firefox and Chrome both allow spaces in cookie names and
-  there are sites out there using that.
-  
-  Turned out the code meant to strip off trailing space from cookie names
-  didn't work. Fixed now.
+Daniel Stenberg (21 Mar 2016)
+- sshserver: remove use of AuthorizedKeysFile2
   
-  Test case 8 modified to verify both these changes.
+  Support for the (undocumented) AuthorizedKeysFile2 was removed in
+  OpenSSH 5.9, released in September 2011
   
-  Closes #639
-
-Patrick Monnerat (8 Feb 2016)
-- Merge branch 'master' of github.com:curl/curl
-
-- os400: sync ILE/RPG definitions with latest public header files.
-
-Daniel Stenberg (8 Feb 2016)
-- [Ludwig Nussel brought this change]
-
-  SSLCERTS: update wrt SSL CA certificate store
-
-- [Ludwig Nussel brought this change]
+  Closes #715
 
-  configure: --with-ca-fallback: use built-in TLS CA fallback
-  
-  When trying to verify a peer without having any root CA certificates
-  set, this makes libcurl use the TLS library's built in default as
-  fallback.
+Steve Holme (20 Mar 2016)
+- connect/ntlm/http: Fixed compilation warnings when verbose strings disabled
   
-  Closes #569
+  warning C4189: 'data': local variable is initialized but not referenced
 
-- Proxy-Connection: stop sending this header by default
+- openssl: Fixed compilation warning when /Wall enabled
   
-  RFC 7230 says we should stop. Firefox already stopped.
+  warning C4706: assignment within conditional expression
+
+- CODE_STYLE: Use boolean conditions
   
-  Bug: https://github.com/curl/curl/issues/633
-  Reported-By: Brad Fitzpatrick
+  Rather than use TRUE, FALSE, NULL, 0 or != 0 in if/while conditions.
   
-  Closes #633
-
-- bump: work toward the next release
-
-- THANKS: 2 contributors from the 7.47.1 release
+  Additionally, corrected some example code to adhere to the recommended
+  coding style.
 
-- RELEASE-PROCEDURE: remove the github upload part
+- inet_pton.c: Fixed compilation warnings
   
-  ... as we're HTTPS on the main site now, there's no point in that
-  extra step
-
-Version 7.47.1 (8 Feb 2016)
+  warning: conversion to 'unsigned char' from 'int' may alter its value
 
-Daniel Stenberg (8 Feb 2016)
-- RELEASE-NOTES: curl 7.47.1 time!
+Daniel Stenberg (19 Mar 2016)
+- RELEASE-NOTES: synced with 80851028efc2fa9
 
-Jay Satiro (8 Feb 2016)
-- tool_operhlp: Check for backslashes in get_url_file_name
-  
-  Extract the filename from the last slash or backslash. Prior to this
-  change backslashes could be part of the filename.
-  
-  This change needed for the curl tool built for Cygwin. Refer to the
-  CYGWIN addendum in advisory 20160127B.
+- mbedtls: fix compiler warning
   
-  Bug: https://curl.haxx.se/docs/adv_20160127B.html
-
-Daniel Stenberg (7 Feb 2016)
-- RELEASE-NOTES: synced with d6a8869ea34
+  vtls/mbedtls.h:67:36: warning: implicit declaration of function
+  ‘mbedtls_sha256’ [-Wimplicit-function-declaration]
 
-Jay Satiro (6 Feb 2016)
-- openssl: Fix signed/unsigned mismatch warning in X509V3_ext
-  
-  sk_X509_EXTENSION_num may return an unsigned integer, however the value
-  will fit in an int.
+Steve Holme (19 Mar 2016)
+- easy: Minor coding standard and style updates
   
-  Bug: https://github.com/curl/curl/commit/dd1b44c#commitcomment-15913896
-  Reported-by: Gisle Vanem
-
-Daniel Stenberg (7 Feb 2016)
-- TODO: 17.11 -w output to stderr
-
-Jay Satiro (6 Feb 2016)
-- [Michael Kaufmann brought this change]
+  Following commit c5744340db. Additionally removes the need for a second
+  'result code' variable as well.
 
-  idn_win32: Better error checking
+Jay Satiro (19 Mar 2016)
+- easy: Remove poll failure check in easy_transfer
   
-  .. also fix a conversion bug in the unused function
-  curl_win32_ascii_to_idn().
+  .. because curl_multi_wait can no longer signal poll failure.
   
-  And remove wprintfs on error (Jay).
+  follow-up to 77e1726
   
-  Bug: https://github.com/curl/curl/pull/637
-
-- [Gisle Vanem brought this change]
+  Bug: https://github.com/curl/curl/issues/707
 
-  examples/asiohiper: Avoid function name collision on Windows
+Steve Holme (19 Mar 2016)
+- build: Added missing Visual Studio filter files for VC10 onwards
   
-  closesocket => close_socket
-  Winsock already has the former.
+  As these files don't need to contain references to the source files,
+  although typically do, added basic files which only include three
+  filters and don't require the project file generator to be modified.
   
-  Bug: https://curl.haxx.se/mail/lib-2016-02/0016.html
-
-- [Gisle Vanem brought this change]
+  These files allow the source code to be viewed in the Solution Explorer
+  in versions of Visual Studio from 2010 onwards in the same manner as
+  previous versions did rather than one large view of files.
 
-  examples/htmltitle: Use _stricmp on Windows
+- ftp/imap/pop3/smtp: Fixed compilation warning when /Wall enabled
   
-  Bug: https://curl.haxx.se/mail/lib-2016-02/0017.html
+  warning C4706: assignment within conditional expression
 
-Daniel Stenberg (6 Feb 2016)
-- COPYING: clarify that Daniel is not the sole author
+- config-w32.h: Fixed compilation warning when /Wall enabled
   
-  ... done on request and as it is a fair point.
-
-Jay Satiro (5 Feb 2016)
-- unit1604: Fix unit setup return code
-
-- tool_doswin: Use type SANITIZEcode in sanitize_file_name
+  warning C4668: 'USE_IPV6' is not defined as a preprocessor macro,
+                 replacing with '0' for '#if/#elif'
 
-- tool_doswin: Improve sanitization processing
-  
-  - Add unit test 1604 to test the sanitize_file_name function.
-  
-  - Use -DCURL_STATICLIB when building libcurltool for unit testing.
-  
-  - Better detection of reserved DOS device names.
-  
-  - New flags to modify sanitize behavior:
-  
-  SANITIZE_ALLOW_COLONS: Allow colons
-  SANITIZE_ALLOW_PATH: Allow path separators and colons
-  SANITIZE_ALLOW_RESERVED: Allow reserved device names
-  SANITIZE_ALLOW_TRUNCATE: Allow truncating a long filename
-  
-  - Restore sanitization of banned characters from user-specified outfile.
+- imap.c: Fixed compilation warning with /Wall enabled
   
-  Prior to this commit sanitization of a user-specified outfile was
-  temporarily disabled in 2b6dadc because there was no way to allow path
-  separators and colons through while replacing other banned characters.
-  Now in such a case we call the sanitize function with
-  SANITIZE_ALLOW_PATH which allows path separators and colons to pass
-  through.
+  warning C4701: potentially uninitialized local variable 'size' used
   
+  Technically this can't happen, as the usage of 'size' is protected by
+  'if(parsed)' and 'parsed' is only set after 'size' has been parsed.
   
-  Closes https://github.com/curl/curl/issues/624
-  Reported-by: Octavio Schroeder
+  Anyway, lets keep the compiler happy.
 
-- [Viktor Szakats brought this change]
+- KNOWN_BUGS: #93 Issue with CURLFORM_CONTENTLEN in arrays on 32-bit platforms
 
-  URLs: change more http to https
+Daniel Stenberg (18 Mar 2016)
+- bump: the coming release is 7.48.0
 
-- sasl_sspi: Fix memory leak in domain populate
+- configure: use cpp -P when needed
   
-  Free an existing domain before replacing it.
+  Since gcc 5, the processor output can get split up on multiple lines
+  that made the configure script fail to figure out values from
+  definitions. The fix is to use cpp -P, and this fix now first checks if
+  cpp -P is necessary and then if cpp -P works before it uses that to
+  extract defined values.
   
-  Bug: https://github.com/curl/curl/issues/635
-  Reported-by: silveja1@users.noreply.github.com
-
-Daniel Stenberg (4 Feb 2016)
-- [Viktor Szakats brought this change]
+  Fixes #719
 
-  URLs: follow GitHub project rename (also Travis CI)
+Steve Holme (18 Mar 2016)
+- formdata.c: Fixed compilation warning
   
-  Closes #632
-
-- CHANGES.o: fix references to curl.haxx.nu
+  formdata.c:390: warning: cast from pointer to integer of different size
   
-  I removed the scheme prefix from the URLs references this host name, as
-  we don't own/run that anymore but the name is kept for historic reasons.
-
-- HISTORY: add some info about when we used which host names
-
-Jay Satiro (2 Feb 2016)
-- [Viktor Szakats brought this change]
-
-  URLs: change more http to https
-
-Dan Fandrich (3 Feb 2016)
-- URLs: Change more haxx.se URLs from http: to https:
-
-Daniel Stenberg (3 Feb 2016)
-- RELEASE-NOTES: synced with 4af40b364
-
-- URLs: change all http:// URLs to https://
-
-- configure: update the copyright year range in output
-
-- dotdot: allow an empty input string too
+  Introduced in commit ca5f9341ef this happens because a char*, which is
+  32-bits wide in 32-bit land, is being cast to a curl_off_t which is
+  64-bits wide where 64-bit integers are supported by the compiler.
   
-  It isn't used by the code in current conditions but for safety it seems
-  sensible to at least not crash on such input.
+  This doesn't happen in 64-bit land as a pointer is the same size as a
+  curl_off_t.
   
-  Extended unit test 1395 to verify this too as well as a plain "/" input.
+  This fix doesn't address the fact that a 64-bit value cannot be used
+  for CURLFORM_CONTENTLEN when set in a form array and compiled on a
+  32-bit platforms, it does at least suppress the compilation warning.
 
-- HTTPS: update a bunch of URLs from HTTP to HTTPS
+Daniel Stenberg (18 Mar 2016)
+- FAQ: 2.5 Install libcurl for both 32bit and 64bit?
 
-- [Sergei Nikulov brought this change]
+- [Gisle Vanem brought this change]
 
-  AppVeyor: updated to handle OpenSSL/WinSSL builds
+  openssl: adapt to API breakage in ERR_remove_thread_state()
+  
+  The OpenSSL API change that broke this is "Convert ERR_STATE to new
+  multi-threading API": openssl commit 8509dcc.
   
-  Closes #621
+  Closes #713
 
-Jay Satiro (1 Feb 2016)
-- tool_operate: Don't sanitize --output path (Windows)
+- version: init moved to private name space, added protos
   
-  Due to path separators being incorrectly sanitized in --output
-  pathnames, eg -o c:\foo => c__foo
+  follow-up to 80015cdd52145
+
+- openssl: verbose: show matching SAN pattern
   
-  This is a partial revert of 3017d8a until I write a proper fix. The
-  remote-name will continue to be sanitized, but if the user specified an
-  --output with string replacement (#1, #2, etc) that data is unsanitized
-  until I finish a fix.
+  ... to allow users to see which specfic wildcard that matched when such
+  is used.
   
-  Bug: https://github.com/bagder/curl/issues/624
-  Reported-by: Octavio Schroeder
+  Also minor logic cleanup to simplify the code, and I removed all tabs
+  from verbose strings.
+
+Jay Satiro (16 Mar 2016)
+- version: thread safety
 
-- curl.1: Explain remote-name behavior if file already exists
+Steve Holme (16 Mar 2016)
+- transfer: Removed redundant HTTP authentication include files
   
-  .. also warn about letting the server pick the filename.
+  It would also seem that share.h is not required here either as there
+  are no references to the Curl_share structure or functions.
 
-- [Gisle Vanem brought this change]
+- easy: Removed redundant HTTP authentication include files
 
-  urldata: Error on missing SSL backend-specific connect info
+Jay Satiro (15 Mar 2016)
+- CURLOPT_SSLENGINE.3: Only for OpenSSL built with engine support
+  
+  Bug: https://curl.haxx.se/mail/lib-2016-03/0150.html
+  Reported-by: Oliver Graute
 
-Daniel Stenberg (28 Jan 2016)
-- bump: towards the next (7.47.1 ?)
+Steve Holme (15 Mar 2016)
+- curl_sasl: Minor code indent fixes
 
-- [Sergei Nikulov brought this change]
+Daniel Stenberg (14 Mar 2016)
+- runtests: mention when run event-based
 
-  cmake: fixed when OpenSSL enabled on Windows and schannel detected
+- easy: add check to malloc() when running event-based
   
-  Closes #617
+  ... to allow torture tests then too.
 
-Jay Satiro (28 Jan 2016)
-- [Sergei Nikulov brought this change]
+- memdebug: skip logging the limit countdown, fflush when reached
 
-  urldata: moved common variable out of ifdef
+- CODE_STYLE: Space around operators
   
-  Closes https://github.com/bagder/curl/pull/618
-
-- [Viktor Szakats brought this change]
+  As just discussed on the mailing list, also document how we prefer
+  spacing in expressions.
 
-  tool_doswin: silence unused function warning
-  
-  tool_doswin.c:185:14: warning: 'msdosify' defined but not used
-  [-Wunused-function]
+- curl: glob_range: no need to check unsigned variable for negative
   
-  Closes https://github.com/bagder/curl/pull/616
-
-Daniel Stenberg (27 Jan 2016)
-- getredirect.c: fix variable name
+  cppcheck warned:
   
-  Reported-by: Bernard Spil
+  [src/tool_urlglob.c:283]: (style) Checking if unsigned variable 'step_n'
+  is less than zero.
 
-Version 7.47.0 (27 Jan 2016)
+- CODE_STYLE: add example for indent style as well
 
-Daniel Stenberg (27 Jan 2016)
-- examples/Makefile.inc: specify programs without .c!
+- CODE_STYLE: mention braces for functions too
 
-- THANKS: 6 new contributors from 7.47.0 release notes
+- docs/Makefile.am: include CODE_STYLE in tarball too
 
-- [Isaac Boukris brought this change]
+- CONTRIBUTE: moved out code style to a separate document
 
-  NTLM: Fix ConnectionExists to compare Proxy credentials
-  
-  Proxy NTLM authentication should compare credentials when
-  re-using a connection similar to host authentication, as it
-  authenticate the connection.
-  
-  Example:
-  curl -v -x http://proxy:port http://host/ -U good_user:good_pwd
-    --proxy-ntlm --next -x http://proxy:port http://host/
-      [-U fake_user:fake_pwd --proxy-ntlm]
-  
-  CVE-2016-0755
+- CODE_STYLE: initial version
   
-  Bug: http://curl.haxx.se/docs/adv_20160127A.html
+  Ripped out from CONTRIBUTE into its own document, but also extended from
+  there.
 
-- [Ray Satiro brought this change]
+- curl_sasl.c: minor code indent fixes
 
-  curl: avoid local drive traversal when saving file (Windows)
-  
-  curl does not sanitize colons in a remote file name that is used as the
-  local file name. This may lead to a vulnerability on systems where the
-  colon is a special path character. Currently Windows/DOS is the only OS
-  where this vulnerability applies.
-  
-  CVE-2016-0754
+- multi: simplified singlesocket
   
-  Bug: http://curl.haxx.se/docs/adv_20160127B.html
-
-- RELEASE-NOTES: 7.47.0
-
-- FAQ: language fix in 4.19
-
-- [paulehoffman brought this change]
+  Since sh_getentry() now checks for invalid sockets itself and by
+  narrowing the scope of the remove_sock_from_hash variable.
 
-  FAQ: Update to point to GitHub
-  
-  Current FAQ didn't make it clear where the main repo is.
+- multi: introduce sh_getentry() for looking up sockets in the sockhash
   
-  Closes #612
+  Simplify the code by using a single entry that looks for a socket in the
+  socket hash. As indicated in #712, the code looked for CURL_SOCKET_BAD
+  at some point and that is ineffective/wrong and this makes it easier to
+  avoid that.
 
-- maketgz: generate date stamp with LC_TIME=C
+- [Jaime Fullaondo brought this change]
+
+  multi hash: ensure modulo performed on curl_socket_t
   
-  bug: http://curl.haxx.se/mail/lib-2016-01/0123.html
+  Closes #712
 
-- curl_multi_socket_action.3: line wrap
+Steve Holme (13 Mar 2016)
+- base64: Minor coding standard and style updates
 
-- RELEASE-NOTES: synced with d58ba66eeceb
+- base64: Use 'CURLcode result' for curl result codes
 
-Steve Holme (21 Jan 2016)
-- TODO: "Create remote directories" for SMB
+- negotiate: Use 'CURLcode result' for curl result codes
 
-Jay Satiro (18 Jan 2016)
-- mbedtls: Fix pinned key return value on fail
-  
-  - Switch from verifying a pinned public key in a callback during the
-  certificate verification to inline after the certificate verification.
-  
-  The callback method had three problems:
-  
-  1. If a pinned public key didn't match, CURLE_SSL_PINNEDPUBKEYNOTMATCH
-  was not returned.
-  
-  2. If peer certificate verification was disabled the pinned key
-  verification did not take place as it should.
-  
-  3. (related to #2) If there was no certificate of depth 0 the callback
-  would not have checked the pinned public key.
-  
-  Though all those problems could have been fixed it would have made the
-  code more complex. Instead we now verify inline after the certificate
-  verification in mbedtls_connect_step2.
-  
-  Ref: http://curl.haxx.se/mail/lib-2016-01/0047.html
-  Ref: https://github.com/bagder/curl/pull/601
+Daniel Stenberg (13 Mar 2016)
+- [Maksim Kuzevanov brought this change]
 
-- tests: Add a test for pinnedpubkey fail even when insecure
+  multi_runsingle: avoid loop in CURLM_STATE_WAITPROXYCONNECT
   
-  Because disabling the peer verification (--insecure) must not disable
-  the public key pinning check (--pinnedpubkey).
+  Closes #703
 
-- [Daniel Schauenberg brought this change]
+- TODO: Use the RFC6265 test suite
 
-  CURLINFO_RESPONSE_CODE.3: add example
+Steve Holme (13 Mar 2016)
+- checksrc.bat: Added the ability to scan src and lib source independently
 
-Kamil Dudka (15 Jan 2016)
-- ssh: make CURLOPT_SSH_PUBLIC_KEYFILE treat "" as NULL
-  
-  The CURLOPT_SSH_PUBLIC_KEYFILE option has been documented to handle
-  empty strings specially since curl-7_25_0-31-g05a443a but the behavior
-  was unintentionally removed in curl-7_38_0-47-gfa7d04f.
-  
-  This commit restores the original behavior and clarifies it in the
-  documentation that NULL and "" have both the same meaning when passed
-  to CURLOPT_SSH_PUBLIC_KEYFILE.
+- digest: Use boolean based success code for Curl_sasl_digest_get_pair()
   
-  Bug: http://curl.haxx.se/mail/lib-2016-01/0072.html
-
-Daniel Stenberg (14 Jan 2016)
-- RELEASE-NOTES: synced with 35083ca60ed035a
+  Rather than use a 0 and 1 integer base result code use a TRUE / FALSE
+  based success code.
 
-- openssl: improved error detection/reporting
-  
-  ... by extracting the LIB + REASON from the OpenSSL error code. OpenSSL
-  1.1.0+ returned a new func number of another cerfificate fail so this
-  required a fix and this is the better way to catch this error anyway.
+- digest: Corrected some typos in comments
 
-- openssl: for 1.1.0+ they now provide a SSLeay() macro of their own
+- krb5: Corrected some typos in function descriptions
 
-- CURLOPT_RESOLVE.3: minor language polish
+- ntlm: Corrected some typos in function descriptions
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/CMake/OtherTests.cmake /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/CMake/OtherTests.cmake
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/CMake/OtherTests.cmake	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/CMake/OtherTests.cmake	2016-12-19 15:27:56.000000000 +0800
@@ -176,23 +176,26 @@
   (void)ts;
   return 0;
 }" HAVE_STRUCT_TIMEVAL)
 
 
 include(CheckCSourceRuns)
-set(CMAKE_REQUIRED_FLAGS)
-if(HAVE_SYS_POLL_H)
-  set(CMAKE_REQUIRED_FLAGS "-DHAVE_SYS_POLL_H")
-endif(HAVE_SYS_POLL_H)
-check_c_source_runs("
-  #ifdef HAVE_SYS_POLL_H
-  #  include <sys/poll.h>
-  #endif
-  int main(void) {
-    return poll((void *)0, 0, 10 /*ms*/);
-  }" HAVE_POLL_FINE)
+# See HAVE_POLL in CMakeLists.txt for why poll is disabled on macOS
+if(NOT APPLE)
+  set(CMAKE_REQUIRED_FLAGS)
+  if(HAVE_SYS_POLL_H)
+    set(CMAKE_REQUIRED_FLAGS "-DHAVE_SYS_POLL_H")
+  endif(HAVE_SYS_POLL_H)
+  check_c_source_runs("
+    #ifdef HAVE_SYS_POLL_H
+    #  include <sys/poll.h>
+    #endif
+    int main(void) {
+      return poll((void *)0, 0, 10 /*ms*/);
+    }" HAVE_POLL_FINE)
+endif()
 
 set(HAVE_SIG_ATOMIC_T 1)
 set(CMAKE_REQUIRED_FLAGS)
 if(HAVE_SIGNAL_H)
   set(CMAKE_REQUIRED_FLAGS "-DHAVE_SIGNAL_H")
   set(CMAKE_EXTRA_INCLUDE_FILES "signal.h")
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/CMakeLists.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/CMakeLists.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/CMakeLists.txt	2016-10-31 15:48:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/CMakeLists.txt	2016-12-19 15:27:56.000000000 +0800
@@ -739,13 +739,17 @@
 elseif(HAVE_LIBSOCKET)
   set(CMAKE_REQUIRED_LIBRARIES socket)
 endif()
 
 check_symbol_exists(basename      "${CURL_INCLUDES}" HAVE_BASENAME)
 check_symbol_exists(socket        "${CURL_INCLUDES}" HAVE_SOCKET)
-check_symbol_exists(poll          "${CURL_INCLUDES}" HAVE_POLL)
+# poll on macOS is unreliable, it first did not exist, then was broken until
+# fixed in 10.9 only to break again in 10.12.
+if(NOT APPLE)
+  check_symbol_exists(poll        "${CURL_INCLUDES}" HAVE_POLL)
+endif()
 check_symbol_exists(select        "${CURL_INCLUDES}" HAVE_SELECT)
 check_symbol_exists(strdup        "${CURL_INCLUDES}" HAVE_STRDUP)
 check_symbol_exists(strstr        "${CURL_INCLUDES}" HAVE_STRSTR)
 check_symbol_exists(strtok_r      "${CURL_INCLUDES}" HAVE_STRTOK_R)
 check_symbol_exists(strftime      "${CURL_INCLUDES}" HAVE_STRFTIME)
 check_symbol_exists(uname         "${CURL_INCLUDES}" HAVE_UNAME)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/config.guess /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/config.guess
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/config.guess	2016-10-12 14:11:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/config.guess	2016-12-17 07:19:21.000000000 +0800
@@ -1,11 +1,11 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
 #   Copyright 1992-2016 Free Software Foundation, Inc.
 
-timestamp='2016-04-02'
+timestamp='2016-10-02'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
@@ -183,15 +183,18 @@
 		endian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\(eb\)$,\1,p'`
 		machine=${arch}${endian}-unknown
 		;;
 	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
 	esac
 	# The Operating System including object format, if it has switched
-	# to ELF recently, or will in the future.
+	# to ELF recently (or will in the future) and ABI.
 	case "${UNAME_MACHINE_ARCH}" in
-	    arm*|earm*|i386|m68k|ns32k|sh3*|sparc|vax)
+	    earm*)
+		os=netbsdelf
+		;;
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
 		eval $set_cc_for_build
 		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
 			| grep -q __ELF__
 		then
 		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
 		    # Return netbsd for either.  FIX?
@@ -994,12 +997,15 @@
 	#endif
 	#endif
 EOF
 	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
 	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-${LIBC}"; exit; }
 	;;
+    mips64el:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
     openrisc*:Linux:*:*)
 	echo or1k-unknown-linux-${LIBC}
 	exit ;;
     or32:Linux:*:* | or1k*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
 	exit ;;
@@ -1026,12 +1032,15 @@
     ppc64le:Linux:*:*)
 	echo powerpc64le-unknown-linux-${LIBC}
 	exit ;;
     ppcle:Linux:*:*)
 	echo powerpcle-unknown-linux-${LIBC}
 	exit ;;
+    riscv32:Linux:*:* | riscv64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
     s390:Linux:*:* | s390x:Linux:*:*)
 	echo ${UNAME_MACHINE}-ibm-linux-${LIBC}
 	exit ;;
     sh64*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
 	exit ;;
@@ -1405,24 +1414,23 @@
 	exit ;;
 esac
 
 cat >&2 <<EOF
 $0: unable to guess system type
 
-This script, last modified $timestamp, has failed to recognize
-the operating system you are using. It is advised that you
-download the most up to date version of the config scripts from
+This script (version $timestamp), has failed to recognize the
+operating system you are using. If your script is old, overwrite
+config.guess and config.sub with the latest versions from:
 
   http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
 and
   http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
 
-If the version you run ($0) is already up to date, please
-send the following data and any information you think might be
-pertinent to <config-patches@gnu.org> in order to provide the needed
-information to handle your system.
+If $0 has already been updated, send the following data and any
+information you think might be pertinent to config-patches@gnu.org to
+provide the necessary information to handle your system.
 
 config.guess timestamp = $timestamp
 
 uname -m = `(uname -m) 2>/dev/null || echo unknown`
 uname -r = `(uname -r) 2>/dev/null || echo unknown`
 uname -s = `(uname -s) 2>/dev/null || echo unknown`
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/config.sub /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/config.sub
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/config.sub	2016-10-12 14:11:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/config.sub	2016-12-17 07:19:21.000000000 +0800
@@ -1,11 +1,11 @@
 #! /bin/sh
 # Configuration validation subroutine script.
 #   Copyright 1992-2016 Free Software Foundation, Inc.
 
-timestamp='2016-03-30'
+timestamp='2016-11-04'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
@@ -114,13 +114,13 @@
 # Here we must recognize all the valid KERNEL-OS combinations.
 maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
 case $maybe_os in
   nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \
   linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
   knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \
-  kopensolaris*-gnu* | \
+  kopensolaris*-gnu* | cloudabi*-eabi* | \
   storm-chaos* | os2-emx* | rtmk-nova*)
     os=-$maybe_os
     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
     ;;
   android-linux)
     os=-linux-android
@@ -298,12 +298,13 @@
 	| nds32 | nds32le | nds32be \
 	| nios | nios2 | nios2eb | nios2el \
 	| ns16k | ns32k \
 	| open8 | or1k | or1knd | or32 \
 	| pdp10 | pdp11 | pj | pjl \
 	| powerpc | powerpc64 | powerpc64le | powerpcle \
+	| pru \
 	| pyramid \
 	| riscv32 | riscv64 \
 	| rl78 | rx \
 	| score \
 	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
 	| sh64 | sh64le \
@@ -425,12 +426,13 @@
 	| none-* | np1-* | ns16k-* | ns32k-* \
 	| open8-* \
 	| or1k*-* \
 	| orion-* \
 	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
 	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \
+	| pru-* \
 	| pyramid-* \
 	| riscv32-* | riscv64-* \
 	| rl78-* | romp-* | rs6000-* | rx-* \
 	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
 	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
 	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
@@ -640,12 +642,20 @@
 		os=-bosx
 		;;
 	dpx2* | dpx2*-bull)
 		basic_machine=m68k-bull
 		os=-sysv3
 		;;
+	e500v[12])
+		basic_machine=powerpc-unknown
+		os=$os"spe"
+		;;
+	e500v[12]-*)
+		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=$os"spe"
+		;;
 	ebmon29k)
 		basic_machine=a29k-amd
 		os=-ebmon
 		;;
 	elxsi)
 		basic_machine=elxsi-elxsi
@@ -1019,23 +1029,23 @@
 		;;
 	ppc | ppcbe)	basic_machine=powerpc-unknown
 		;;
 	ppc-* | ppcbe-*)
 		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	ppcle | powerpclittle | ppc-le | powerpc-little)
+	ppcle | powerpclittle)
 		basic_machine=powerpcle-unknown
 		;;
 	ppcle-* | powerpclittle-*)
 		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
 	ppc64)	basic_machine=powerpc64-unknown
 		;;
 	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+	ppc64le | powerpc64little)
 		basic_machine=powerpc64le-unknown
 		;;
 	ppc64le-* | powerpc64little-*)
 		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
 	ps2)
@@ -1386,23 +1396,23 @@
 	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
 	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
 	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
 	      | -chorusos* | -chorusrdb* | -cegcc* \
 	      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \
+	      | -midipix* | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \
 	      | -linux-newlib* | -linux-musl* | -linux-uclibc* \
 	      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \
 	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
 	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
 	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
 	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
 	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
-	      | -onefs* | -tirtos*)
+	      | -onefs* | -tirtos* | -phoenix* | -fuchsia*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
 		case $basic_machine in
 		    x86-* | i*86-*)
 			;;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/configure	2016-10-31 17:41:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/configure	2016-12-19 16:16:46.000000000 +0800
@@ -17251,13 +17251,13 @@
 *** Warning: This configure script does not have information about the
 *** compiler you are using, relative to the flags required to enable or
 *** disable generation of debug info, optimization options or warnings.
 ***
 *** Whatever settings are present in CFLAGS will be used for this run.
 ***
-*** If you wish to help the cURL project to better support your compiler
+*** If you wish to help the curl project to better support your compiler
 *** you can report this and the required info on the libcurl development
 *** mailing list: https://cool.haxx.se/mailman/listinfo/curl-library/
 ***
 _EOF
   fi
 
@@ -19230,13 +19230,36 @@
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: set by user" >&5
 $as_echo "set by user" >&6; }
     else
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $min set" >&5
 $as_echo "$min set" >&6; }
     fi
+
+    old_CFLAGS=$CFLAGS
     CFLAGS="$CFLAGS -Werror=partial-availability"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -Werror=partial-availability" >&5
+$as_echo_n "checking whether $CC accepts -Werror=partial-availability... " >&6; }
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int main (void)
+{
+
+ ;
+ return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+      CFLAGS=$old_CFLAGS
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   fi
 
 
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to support http" >&5
 $as_echo_n "checking whether to support http... " >&6; }
@@ -22682,15 +22705,13 @@
 
 
 fi
 
 
 
-    for ac_func in RAND_status \
-                    RAND_screen \
-                    RAND_egd \
+    for ac_func in RAND_egd \
                     ENGINE_cleanup \
                     SSL_get_shutdown \
                     SSLv2_client_method
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
 ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
@@ -40639,12 +40660,17 @@
 fi
 
 if test "x$USE_NGHTTP2" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES HTTP2"
 fi
 
+if test "x$OPENSSL_ENABLED" = "x1" -o "x$GNUTLS_ENABLED" = "x1" \
+    -o "x$NSS_ENABLED" = "x1"; then
+  SUPPORT_FEATURES="$SUPPORT_FEATURES HTTPS-proxy"
+fi
+
 
 
 if test "x$CURL_DISABLE_HTTP" != "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS HTTP"
   if test "x$SSL_ENABLED" = "x1"; then
     SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS HTTPS"
@@ -40907,13 +40933,13 @@
 
 if test "x$want_curldebug_assumed" = "xyes" &&
   test "x$want_curldebug" = "xyes" && test "x$USE_ARES" = "x1"; then
   ac_configure_args="$ac_configure_args --enable-curldebug"
 fi
 
-ac_config_files="$ac_config_files Makefile docs/Makefile docs/examples/Makefile docs/libcurl/Makefile docs/libcurl/opts/Makefile include/Makefile include/curl/Makefile src/Makefile lib/Makefile scripts/Makefile lib/libcurl.vers tests/Makefile tests/certs/Makefile tests/certs/scripts/Makefile tests/data/Makefile tests/server/Makefile tests/libtest/Makefile tests/unit/Makefile packages/Makefile packages/Win32/Makefile packages/Win32/cygwin/Makefile packages/Linux/Makefile packages/Linux/RPM/Makefile packages/Linux/RPM/curl.spec packages/Linux/RPM/curl-ssl.spec packages/Solaris/Makefile packages/EPM/curl.list packages/EPM/Makefile packages/vms/Makefile packages/AIX/Makefile packages/AIX/RPM/Makefile packages/AIX/RPM/curl.spec curl-config libcurl.pc"
+ac_config_files="$ac_config_files Makefile docs/Makefile docs/examples/Makefile docs/libcurl/Makefile docs/libcurl/opts/Makefile docs/cmdline-opts/Makefile include/Makefile include/curl/Makefile src/Makefile lib/Makefile scripts/Makefile lib/libcurl.vers tests/Makefile tests/certs/Makefile tests/certs/scripts/Makefile tests/data/Makefile tests/server/Makefile tests/libtest/Makefile tests/unit/Makefile packages/Makefile packages/Win32/Makefile packages/Win32/cygwin/Makefile packages/Linux/Makefile packages/Linux/RPM/Makefile packages/Linux/RPM/curl.spec packages/Linux/RPM/curl-ssl.spec packages/Solaris/Makefile packages/EPM/curl.list packages/EPM/Makefile packages/vms/Makefile packages/AIX/Makefile packages/AIX/RPM/Makefile packages/AIX/RPM/curl.spec curl-config libcurl.pc"
 
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
 # tests run on this system so they can be shared between configure
 # scripts and configure runs, see configure's option --config-cache.
 # It is not useful on other systems.  If it contains results you don't
@@ -41992,12 +42018,13 @@
     "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
     "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
     "docs/Makefile") CONFIG_FILES="$CONFIG_FILES docs/Makefile" ;;
     "docs/examples/Makefile") CONFIG_FILES="$CONFIG_FILES docs/examples/Makefile" ;;
     "docs/libcurl/Makefile") CONFIG_FILES="$CONFIG_FILES docs/libcurl/Makefile" ;;
     "docs/libcurl/opts/Makefile") CONFIG_FILES="$CONFIG_FILES docs/libcurl/opts/Makefile" ;;
+    "docs/cmdline-opts/Makefile") CONFIG_FILES="$CONFIG_FILES docs/cmdline-opts/Makefile" ;;
     "include/Makefile") CONFIG_FILES="$CONFIG_FILES include/Makefile" ;;
     "include/curl/Makefile") CONFIG_FILES="$CONFIG_FILES include/curl/Makefile" ;;
     "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
     "lib/Makefile") CONFIG_FILES="$CONFIG_FILES lib/Makefile" ;;
     "scripts/Makefile") CONFIG_FILES="$CONFIG_FILES scripts/Makefile" ;;
     "lib/libcurl.vers") CONFIG_FILES="$CONFIG_FILES lib/libcurl.vers" ;;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/configure.ac	2016-10-31 15:48:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/configure.ac	2016-12-19 15:27:56.000000000 +0800
@@ -1634,15 +1634,13 @@
 
     dnl These can only exist if OpenSSL exists
     dnl Older versions of Cyassl (some time before 2.9.4) don't have
     dnl SSL_get_shutdown (but this check won't actually detect it there
     dnl as it's a macro that needs the header files be included)
 
-    AC_CHECK_FUNCS( RAND_status \
-                    RAND_screen \
-                    RAND_egd \
+    AC_CHECK_FUNCS( RAND_egd \
                     ENGINE_cleanup \
                     SSL_get_shutdown \
                     SSLv2_client_method )
 
     AC_MSG_CHECKING([for BoringSSL])
     AC_COMPILE_IFELSE([
@@ -3709,12 +3707,17 @@
 fi
 
 if test "x$USE_NGHTTP2" = "x1"; then
   SUPPORT_FEATURES="$SUPPORT_FEATURES HTTP2"
 fi
 
+if test "x$OPENSSL_ENABLED" = "x1" -o "x$GNUTLS_ENABLED" = "x1" \
+    -o "x$NSS_ENABLED" = "x1"; then
+  SUPPORT_FEATURES="$SUPPORT_FEATURES HTTPS-proxy"
+fi
+
 AC_SUBST(SUPPORT_FEATURES)
 
 dnl For supported protocols in pkg-config file
 if test "x$CURL_DISABLE_HTTP" != "x1"; then
   SUPPORT_PROTOCOLS="$SUPPORT_PROTOCOLS HTTP"
   if test "x$SSL_ENABLED" = "x1"; then
@@ -3821,12 +3824,13 @@
 
 AC_CONFIG_FILES([Makefile \
            docs/Makefile \
            docs/examples/Makefile \
            docs/libcurl/Makefile \
            docs/libcurl/opts/Makefile \
+           docs/cmdline-opts/Makefile \
            include/Makefile \
            include/curl/Makefile \
            src/Makefile \
            lib/Makefile \
            scripts/Makefile \
            lib/libcurl.vers \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/BINDINGS.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/BINDINGS.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/BINDINGS.md	2016-10-31 06:48:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/BINDINGS.md	2016-12-19 15:27:56.000000000 +0800
@@ -7,15 +7,15 @@
 
  This is a list of all known interfaces as of this writing.
 
  The bindings listed below are not part of the curl/libcurl distribution
  archives, but must be downloaded and installed separately.
 
-[Ada95](http://www.almroth.com/adacurl/index.html)  Writtten by Andreas Almroth
+[Ada95](http://www.almroth.com/adacurl/index.html)  Written by Andreas Almroth
 
-[Basic](http://scriptbasic.com/) ScriptBasic bindings writtten by Peter Verhas
+[Basic](http://scriptbasic.com/) ScriptBasic bindings written by Peter Verhas
 
 [C++](http://curlpp.org/) Written by Jean-Philippe Barrette-LaPierre
 
 [Ch](http://chcurl.sourceforge.net/) Written by Stephen Nestinger and Jonathan Rogado
 
 Cocoa: [BBHTTP](https://github.com/brunodecarvalho/BBHTTP) written by Bruno de Carvalho
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/BUGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/BUGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/BUGS	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/BUGS	2016-12-19 15:27:56.000000000 +0800
@@ -12,12 +12,22 @@
   1.3 What to report
   1.4 libcurl problems
   1.5 Who will fix the problems
   1.6 How to get a stack trace
   1.7 Bugs in libcurl bindings
 
+ 2. Bug fixing procedure
+ 2.1 What happens on first filing
+ 2.2 First response
+ 2.3 Not reproducible
+ 2.4 Unresponsive
+ 2.5 Lack of time/interest
+ 2.6 KNOWN_BUGS
+ 2.7 TODO
+ 2.8 Closing off stalled bugs
+
 ==============================================================================
 
 1.1 There are still bugs
 
   Curl and libcurl have grown substantially since the beginning. At the time
   of writing (January 2013), there are about 83,000 lines of source code, and
@@ -73,14 +83,12 @@
 
   The address and how to subscribe to the mailing lists are detailed in the
   MANUAL file.
 
 1.4 libcurl problems
 
-  First, post all libcurl problems on the curl-library mailing list.
-
   When you've written your own application with libcurl to perform transfers,
   it is even more important to be specific and detailed when reporting bugs.
 
   Tell us the libcurl version and your operating system. Tell us the name and
   version of all relevant sub-components like for example the SSL library
   you're using and what name resolving your libcurl uses. If you use SFTP or
@@ -141,6 +149,99 @@
   primarily approach the team that works on that particular binding and see
   what you can do to help them fix the problem.
 
   If you suspect that the problem exists in the underlying libcurl, then
   please convert your program over to plain C and follow the steps outlined
   above.
+
+2. Bug fixing procedure
+
+2.1 What happens on first filing
+
+  When a new issue is posted in the issue tracker or on the mailing list, the
+  team of developers first need to see the report. Maybe they took the day
+  off, maybe they're off in the woods hunting. Have patience. Allow at least a
+  few days before expecting someone to have responded.
+
+  In the issue tracker you can expect that some labels will be set on the
+  issue to help categorize it.
+
+2.2 First response
+
+  If your issue/bug report wasn't perfect at once (and few are), chances are
+  that someone will ask follow-up questions. Which version did you use? Which
+  options did you use? How often does the problem occur? How can we reproduce
+  this problem? Which protocols does it involve? Or perhaps much more specific
+  and deep diving questions. It all depends on your specific issue.
+
+  You should then respond to these follow-up questions and provide more info
+  about the problem, so that we can help you figure it out. Or maybe you can
+  help us figure it out. An active back-and-forth communication is important
+  and the key for finding a cure and landing a fix.
+
+2.3 Not reproducible
+
+  For problems that we can't reproduce and can't understand even after having
+  gotten all the info we need and having studied the source code over again,
+  are really hard to solve so then we may require further work from you who
+  actually see or experience the problem.
+
+2.4 Unresponsive
+
+  If the problem haven't been understood or reproduced, and there's nobody
+  responding to follow-up questions or questions asking for clarifications or
+  for discussing possible ways to move forward with the task, we take that as
+  a strong suggestion that the bug is not important.
+
+  Unimportant issues will be closed as inactive sooner or later as they can't
+  be fixed. The inactivity period (waiting for responses) should not be
+  shorter than two weeks but may extend months.
+
+2.5 Lack of time/interest
+
+  Bugs that are filed and are understood can unfortunately end up in the
+  "nobody cares enough about it to work on it" category. Such bugs are
+  perfectly valid problems that *should* get fixed but apparently aren't. We
+  try to mark such bugs as "KNOWN_BUGS material" after a time of inactivity
+  and if no activity is noticed after yet some time those bugs are added to
+  KNOWN_BUGS and are closed in the issue tracker.
+
+2.6 KNOWN_BUGS
+
+  This is a list of known bugs. Bugs we know exist and that have been pointed
+  out but that haven't yet been fixed. The reasons for why they haven't been
+  fixed can involve anything really, but the primary reason is that nobody has
+  considered these problems to be important enough to spend the necesary time
+  and effort to have them fixed.
+
+  The KNOWN_BUGS are always up for grabs and we will always love the ones who
+  bring one of them back to live and offers solutions to them.
+
+  The KNOWN_BUGS document has a sibling document known as TODO.
+
+2.7 TODO
+
+  Issues that are filed or reported that aren't really bugs but more missing
+  features or ideas for future improvements and so on are marked as
+  'enhancement' or 'feature-request' and will be added to the TODO document
+  instead and the issue is closed. We don't keep TODO items in the issue
+  tracker.
+
+  The TODO document is full of ideas and suggestions of what we can add or fix
+  one day. You're always encouraged and free to grab one of those items and
+  take up a discussion with the curl development team on how that could be
+  implemented or provided in the project so that you can work on ticking it
+  odd that document.
+
+  If the issue is rather a bug and not a missing feature or functionality, it
+  is listed in KNOWN_BUGS instead.
+
+2.8 Closing off stalled bugs
+
+  The issue and pull request trackers on https://github.com/curl/curl will
+  only hold "active" entries (using a non-precise defintion of what active
+  actually is, but they're at least not completely dead). Those that are
+  abandonded or in other ways dormant will be closed and sometimes added to
+  TODO and KNOWN_BUGS instead.
+
+  This way, we only have "active" issues open on github. Irrelevant issues and
+  pull requests will not distract developes or casual visitors.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/CHECKSRC.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/CHECKSRC.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/CHECKSRC.md	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/CHECKSRC.md	2016-12-19 15:27:56.000000000 +0800
@@ -17,26 +17,26 @@
 `-h` shows the help output, that also lists all recognized warnings
 
 ## What does checksrc warn for?
 
 checksrc does not check and verify the code against the entire style guide,
 but the script is instead an effort to detect the most common mistakes and
-syntax mistakes that contributers make before they get accustomed to our code
+syntax mistakes that contributors make before they get accustomed to our code
 style. Heck, many of us regulars do the mistakes too and this script helps us
 keep the code in shape.
 
     checksrc.pl -h
 
 Lists how to use the script and it lists all existing warnings it has and
 problems it detects. At the time of this writing, the existing checksrc
 warnings are:
 
 - `BADCOMMAND`: There's a bad !checksrc! instruction in the code. See the
    **Ignore certain warnings** section below for details.
 
-- `BANNEDFUNC`: A banned function was used. The funtions sprintf, vsprintf,
+- `BANNEDFUNC`: A banned function was used. The functions sprintf, vsprintf,
    strcat, strncat, gets are **never** allowed in curl source code.
 
 - `BRACEELSE`: '} else' on the same line. The else is supposed to be on the
   following line.
 
 - `BRACEPOS`: wrong position for an open brace (`{`).
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs: cmdline-opts
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/CODE_STYLE.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/CODE_STYLE.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/CODE_STYLE.md	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/CODE_STYLE.md	2016-12-19 15:27:56.000000000 +0800
@@ -6,14 +6,14 @@
 making it easier to review when new things are added and it helps debugging
 code when developers are trying to figure out why things go wrong. A unified
 style is more important than individual contributors having their own personal
 tastes satisfied.
 
 Our C code has a few style rules. Most of them are verified and upheld by the
-lib/checksrc.pl script. Invoked with `make checksrc` or even by default by the
-build system when built after `./configure --enable-debug` has been used.
+`lib/checksrc.pl` script. Invoked with `make checksrc` or even by default by
+the build system when built after `./configure --enable-debug` has been used.
 
 It is normally not a problem for anyone to follow the guidelines, as you just
 need to copy the style already used in the source code and there are no
 particularly unusual rules in our set of rules.
 
 We also work hard on writing code that are warning-free on all the major
@@ -25,13 +25,14 @@
 Try using a non-confusing naming scheme for your new functions and variable
 names. It doesn't necessarily have to mean that you should use the same as in
 other places of the code, just that the names should be logical,
 understandable and be named according to what they're used for. File-local
 functions should be made static. We like lower case names.
 
-See the INTERNALS document on how we name non-exported library-global symbols.
+See the [INTERNALS](INTERNALS.md) document on how we name non-exported
+library-global symbols.
 
 ## Indenting
 
 We use only spaces for indentation, never TABs. We use two spaces for each new
 open brace.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/curl.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/curl.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/curl.1	2016-11-02 07:36:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/curl.1	2016-12-19 15:27:56.000000000 +0800
@@ -17,13 +17,15 @@
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
 .\" **************************************************************************
 .\"
-.TH curl 1 "30 Nov 2014" "Curl 7.40.0" "Curl Manual"
+.\" DO NOT EDIT. Generated by the curl project gen.pl man page generator.
+.\"
+.TH curl 1 "16 Dec 2016" "Curl 7.52.0" "Curl Manual"
 .SH NAME
 curl \- transfer a URL
 .SH SYNOPSIS
 .B curl [options]
 .I [URL...]
 .SH DESCRIPTION
@@ -112,283 +114,337 @@
 redirect the response output to a file, using shell redirect (>), -o [file] or
 similar.
 
 It is not the same case for FTP upload as that operation does not spit out
 any response data to the terminal.
 
-If you prefer a progress "bar" instead of the regular meter, \fI-#\fP is your
-friend.
+If you prefer a progress "bar" instead of the regular meter, \fI-#, --progress-bar\fP is
+your friend.
 .SH OPTIONS
 Options start with one or two dashes. Many of the options require an
 additional value next to them.
 
 The short "single-dash" form of the options, -d for example, may be used with
 or without a space between it and its value, although a space is a recommended
-separator. The long "double-dash" form, --data for example, requires a space
+separator. The long "double-dash" form, \fI-d, --data\fP for example, requires a space
 between it and its value.
 
 Short version options that don't need any additional values can be used
 immediately next to each other, like for example you can specify all the
 options -O, -L and -v at once as -OLv.
 
 In general, all boolean options are enabled with --\fBoption\fP and yet again
 disabled with --\fBno-\fPoption. That is, you use the exact same option name
 but prefix it with "no-". However, in this list we mostly only list and show
 the --option version of them. (This concept with --no options was added in
 7.19.0. Previously most options were toggled on/off on repeated use of the
 same command line option.)
-.IP "-#, --progress-bar"
-Make curl display progress as a simple progress bar instead of the standard,
-more informational, meter.
-.IP "-:, --next"
-Tells curl to use a separate operation for the following URL and associated
-options. This allows you to send several URL requests, each with their own
-specific options, for example, such as different user names or custom requests
-for each. (Added in 7.36.0)
-.IP "-0, --http1.0"
-(HTTP) Tells curl to use HTTP version 1.0 instead of using its internally
-preferred: HTTP 1.1.
-.IP "--http1.1"
-(HTTP) Tells curl to use HTTP version 1.1. This is the internal default
-version. (Added in 7.33.0)
-.IP "--http2"
-(HTTP) Tells curl to issue its requests using HTTP 2. This requires that the
-underlying libcurl was built to support it. (Added in 7.33.0)
-.IP "--http2-prior-knowledge"
-(HTTP) Tells curl to issue its non-TLS HTTP requests using HTTP/2 without
-HTTP/1.1 Upgrade. It requires prior knowledge that the server supports HTTP/2
-straight away. HTTPS requests will still do HTTP/2 the standard way with
-negotiated protocol version in the TLS handshake.
-
-HTTP/2 support in general also requires that the underlying libcurl was built
-to support it. (Added in 7.49.0)
-.IP "--no-npn"
-Disable the NPN TLS extension. NPN is enabled by default if libcurl was built
-with an SSL library that supports NPN. NPN is used by a libcurl that supports
-HTTP 2 to negotiate HTTP 2 support with the server during https sessions.
+.IP "--anyauth"
+(HTTP) Tells curl to figure out authentication method by itself, and use the most
+secure one the remote site claims to support. This is done by first doing a
+request and checking the response-headers, thus possibly inducing an extra
+network round-trip. This is used instead of setting a specific authentication
+method, which you can do with \fI--basic\fP, \fI--digest\fP, \fI--ntlm\fP, and \fI--negotiate\fP.
+
+Using \fI--anyauth\fP is not recommended if you do uploads from stdin, since it may
+require data to be sent twice and then the client must be able to rewind. If
+the need should arise when uploading from stdin, the upload operation will
+fail.
 
-(Added in 7.36.0)
-.IP "--no-alpn"
-Disable the ALPN TLS extension. ALPN is enabled by default if libcurl was built
-with an SSL library that supports ALPN. ALPN is used by a libcurl that supports
-HTTP 2 to negotiate HTTP 2 support with the server during https sessions.
+Used together with \fI-u, --user\fP.
 
-(Added in 7.36.0)
-.IP "-1, --tlsv1"
-(SSL)
-Forces curl to use TLS version 1.x when negotiating with a remote TLS server.
-You can use options \fI--tlsv1.0\fP, \fI--tlsv1.1\fP, and \fI--tlsv1.2\fP to
-control the TLS version more precisely (if the SSL backend in use supports such
-a level of control).
-.IP "-2, --sslv2"
-(SSL) Forces curl to use SSL version 2 when negotiating with a remote SSL
-server. Sometimes curl is built without SSLv2 support. SSLv2 is widely
-considered insecure (see RFC 6176).
-.IP "-3, --sslv3"
-(SSL) Forces curl to use SSL version 3 when negotiating with a remote SSL
-server. Sometimes curl is built without SSLv3 support. SSLv3 is widely
-considered insecure (see RFC 7568).
-.IP "-4, --ipv4"
-This option tells curl to resolve names to IPv4 addresses only, and not for
-example try IPv6.
-.IP "-6, --ipv6"
-This option tells curl to resolve names to IPv6 addresses only, and not for
-example try IPv4.
+See also \fI--proxy-anyauth\fP and \fI--basic\fP and \fI--digest\fP.
 .IP "-a, --append"
-(FTP/SFTP) When used in an upload, this makes curl append to the target file
-instead of overwriting it. If the remote file doesn't exist, it will be
-created.  Note that this flag is ignored by some SFTP servers (including
-OpenSSH).
-.IP "-A, --user-agent <agent string>"
-(HTTP) Specify the User-Agent string to send to the HTTP server. Some badly
-done CGIs fail if this field isn't set to "Mozilla/4.0". To encode blanks in
-the string, surround the string with single quote marks. This can also be set
-with the \fI-H, --header\fP option of course.
+(FTP SFTP) When used in an upload, this makes curl append to the target file instead of
+overwriting it. If the remote file doesn't exist, it will be created.  Note
+that this flag is ignored by some SFTP servers (including OpenSSH).
+.IP "--basic"
+(HTTP) Tells curl to use HTTP Basic authentication with the remote host. This is the
+default and this option is usually pointless, unless you use it to override a
+previously set option that sets a different authentication method (such as
+\fI--ntlm\fP, \fI--digest\fP, or \fI--negotiate\fP).
 
-If this option is used several times, the last one will be used.
-.IP "--anyauth"
-(HTTP) Tells curl to figure out authentication method by itself, and use the
-most secure one the remote site claims to support. This is done by first
-doing a request and checking the response-headers, thus possibly inducing an
-extra network round-trip. This is used instead of setting a specific
-authentication method, which you can do with \fI--basic\fP, \fI--digest\fP,
-\fI--ntlm\fP, and \fI--negotiate\fP.
-
-Note that using --anyauth is not recommended if you do uploads from stdin,
-since it may require data to be sent twice and then the client must be able to
-rewind. If the need should arise when uploading from stdin, the upload
-operation will fail.
-.IP "-b, --cookie <name=data>"
-(HTTP) Pass the data to the HTTP server as a cookie. It is supposedly the data
-previously received from the server in a "Set-Cookie:" line.  The data should
-be in the format "NAME1=VALUE1; NAME2=VALUE2".
-
-If no '=' symbol is used in the line, it is treated as a filename to use to
-read previously stored cookie lines from, which should be used in this session
-if they match. Using this method also activates the cookie engine which will
-make curl record incoming cookies too, which may be handy if you're using this
-in combination with the \fI-L, --location\fP option. The file format of the
-file to read cookies from should be plain HTTP headers (Set-Cookie style) or
-the Netscape/Mozilla cookie file format.
+Used together with \fI-u, --user\fP.
 
-The file specified with \fI-b, --cookie\fP is only used as input. No cookies
-will be written to the file. To store cookies, use the \fI-c, --cookie-jar\fP
-option.
+See also \fI--proxy-basic\fP.
+.IP "--cacert <CA certificate>"
+(TLS) Tells curl to use the specified certificate file to verify the peer. The file
+may contain multiple CA certificates. The certificate(s) must be in PEM
+format. Normally curl is built to use a default file for this, so this option
+is typically used to alter that default file.
+
+curl recognizes the environment variable named 'CURL_CA_BUNDLE' if it is
+set, and uses the given path as a path to a CA cert bundle. This option
+overrides that variable.
+
+The windows version of curl will automatically look for a CA certs file named
+\'curl-ca-bundle.crt\', either in the same directory as curl.exe, or in the
+Current Working Directory, or in any folder along your PATH.
+
+If curl is built against the NSS SSL library, the NSS PEM PKCS#11 module
+(libnsspem.so) needs to be available for this option to work properly.
 
-Exercise caution if you are using this option and multiple transfers may occur.
-If you use the NAME1=VALUE1; format, or in a file use the Set-Cookie format and
-don't specify a domain, then the cookie is sent for any domain (even after
-redirects are followed) and cannot be modified by a server-set cookie. If the
-cookie engine is enabled and a server sets a cookie of the same name then both
-will be sent on a future transfer to that server, likely not what you intended.
-To address these issues set a domain in Set-Cookie (doing that will include
-sub-domains) or use the Netscape format.
+(iOS and macOS only) If curl is built against Secure Transport, then this
+option is supported for backward compatibility with other SSL engines, but it
+should not be set. If the option is not set, then curl will use the
+certificates in the system and user Keychain to verify the peer, which is the
+preferred method of verifying the peer's certificate chain.
 
 If this option is used several times, the last one will be used.
-.IP "-B, --use-ascii"
-(FTP/LDAP) Enable ASCII transfer. For FTP, this can also be enforced by using
-an URL that ends with ";type=A". This option causes data sent to stdout to be
-in text mode for win32 systems.
-.IP "--basic"
-(HTTP) Tells curl to use HTTP Basic authentication with the remote host. This
-is the default and this option is usually pointless, unless you use it to
-override a previously set option that sets a different authentication method
-(such as \fI--ntlm\fP, \fI--digest\fP, or \fI--negotiate\fP).
+.IP "--capath <dir>"
+(TLS) Tells curl to use the specified certificate directory to verify the
+peer. Multiple paths can be provided by separating them with ":" (e.g.
+\&"path1:path2:path3"). The certificates must be in PEM format, and if curl is
+built against OpenSSL, the directory must have been processed using the
+c_rehash utility supplied with OpenSSL. Using \fI--capath\fP can allow
+OpenSSL-powered curl to make SSL-connections much more efficiently than using
+\fI--cacert\fP if the --cacert file contains many CA certificates.
 
-Used together with \fI-u, --user\fP and \fI-x, --proxy\fP.
+If this option is set, the default capath value will be ignored, and if it is
+used several times, the last one will be used.
+.IP "--cert-status"
+(TLS) Tells curl to verify the status of the server certificate by using the
+Certificate Status Request (aka. OCSP stapling) TLS extension.
 
-See also \fI--proxy-basic\fP.
-.IP "-c, --cookie-jar <file name>"
-(HTTP) Specify to which file you want curl to write all cookies after a
-completed operation. Curl writes all cookies previously read from a specified
-file as well as all cookies received from remote server(s). If no cookies are
-known, no data will be written. The file will be written using the Netscape
-cookie file format. If you set the file name to a single dash, "-", the
-cookies will be written to stdout.
+If this option is enabled and the server sends an invalid (e.g. expired)
+response, if the response suggests that the server certificate has been revoked,
+or no response at all is received, the verification fails.
 
-This command line option will activate the cookie engine that makes curl
-record and use cookies. Another way to activate it is to use the \fI-b,
---cookie\fP option.
+This is currently only implemented in the OpenSSL, GnuTLS and NSS backends.
 
-If the cookie jar can't be created or written to, the whole curl operation
-won't fail or even report an error clearly. Using -v will get a warning
-displayed, but that is the only visible feedback you get about this possibly
-lethal situation.
+Added in 7.41.0.
+.IP "--cert-type <type>"
+(TLS) Tells curl what certificate type the provided certificate is in. PEM, DER and
+ENG are recognized types.  If not specified, PEM is assumed.
 
-Since 7.43.0 cookies that were imported in the Set-Cookie format without a
-domain name are not exported by this option.
+If this option is used several times, the last one will be used.
 
-If this option is used several times, the last specified file name will be
-used.
-.IP "-C, --continue-at <offset>"
-Continue/Resume a previous file transfer at the given offset. The given offset
-is the exact number of bytes that will be skipped, counting from the beginning
-of the source file before it is transferred to the destination.  If used with
-uploads, the FTP server command SIZE will not be used by curl.
+See also \fI-E, --cert\fP and \fI--key\fP and \fI--key-type\fP.
+.IP "-E, --cert <certificate[:password]>"
+(TLS) Tells curl to use the specified client certificate file when getting a file
+with HTTPS, FTPS or another SSL-based protocol. The certificate must be in
+PKCS#12 format if using Secure Transport, or PEM format if using any other
+engine.  If the optional password isn't specified, it will be queried for on
+the terminal. Note that this option assumes a \&"certificate" file that is the
+private key and the client certificate concatenated! See \fI-E, --cert\fP and \fI--key\fP to
+specify them independently.
 
-Use "-C -" to tell curl to automatically find out where/how to resume the
-transfer. It then uses the given output/input files to figure that out.
+If curl is built against the NSS SSL library then this option can tell
+curl the nickname of the certificate to use within the NSS database defined
+by the environment variable SSL_DIR (or by default /etc/pki/nssdb). If the
+NSS PEM PKCS#11 module (libnsspem.so) is available then PEM files may be
+loaded. If you want to use a file from the current directory, please precede
+it with "./" prefix, in order to avoid confusion with a nickname.  If the
+nickname contains ":", it needs to be preceded by "\\" so that it is not
+recognized as password delimiter.  If the nickname contains "\\", it needs to
+be escaped as "\\\\" so that it is not recognized as an escape character.
+
+(iOS and macOS only) If curl is built against Secure Transport, then the
+certificate string can either be the name of a certificate/private key in the
+system or user keychain, or the path to a PKCS#12-encoded certificate and
+private key. If you want to use a file from the current directory, please
+precede it with "./" prefix, in order to avoid confusion with a nickname.
 
 If this option is used several times, the last one will be used.
+
+See also \fI--cert-type\fP and \fI--key\fP and \fI--key-type\fP.
 .IP "--ciphers <list of ciphers>"
-(SSL) Specifies which ciphers to use in the connection. The list of ciphers
-must specify valid ciphers. Read up on SSL cipher list details on this URL:
-\fIhttps://www.openssl.org/docs/apps/ciphers.html\fP
+(TLS) Specifies which ciphers to use in the connection. The list of ciphers must
+specify valid ciphers. Read up on SSL cipher list details on this URL:
+
+ https://www.openssl.org/docs/apps/ciphers.html
 
 NSS ciphers are done differently than OpenSSL and GnuTLS. The full list of NSS
 ciphers is in the NSSCipherSuite entry at this URL:
-\fIhttps://git.fedorahosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives\fP
+
+ https://git.fedorahosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives
 
 If this option is used several times, the last one will be used.
 .IP "--compressed"
-(HTTP) Request a compressed response using one of the algorithms curl
-supports, and save the uncompressed document.  If this option is used and the
-server sends an unsupported encoding, curl will report an error.
+(HTTP) Request a compressed response using one of the algorithms curl supports, and
+save the uncompressed document.  If this option is used and the server sends
+an unsupported encoding, curl will report an error.
+.IP "-K, --config <file>"
+Specify which config file to read curl arguments from. The config file is a
+text file in which command line arguments can be written which then will be
+used as if they were written on the actual command line.
+
+Options and their parameters must be specified on the same config file line,
+separated by whitespace, colon, or the equals sign. Long option names can
+optionally be given in the config file without the initial double dashes and
+if so, the colon or equals characters can be used as separators. If the option
+is specified with one or two dashes, there can be no colon or equals character
+between the option and its parameter.
+
+If the parameter is to contain whitespace, the parameter must be enclosed
+within quotes. Within double quotes, the following escape sequences are
+available: \\\\, \\", \\t, \\n, \\r and \\v. A backslash preceding any other
+letter is ignored. If the first column of a config line is a '#' character,
+the rest of the line will be treated as a comment. Only write one option per
+physical line in the config file.
+
+Specify the filename to \fI-K, --config\fP as '-' to make curl read the file from stdin.
+
+Note that to be able to specify a URL in the config file, you need to specify
+it using the \fI--url\fP option, and not by simply writing the URL on its own
+line. So, it could look similar to this:
+
+url = "https://curl.haxx.se/docs/"
+
+When curl is invoked, it always (unless \fI-q, --disable\fP is used) checks for a
+default config file and uses it if found. The default config file is checked
+for in the following places in this order:
+
+1) curl tries to find the "home dir": It first checks for the CURL_HOME and
+then the HOME environment variables. Failing that, it uses getpwuid() on
+Unix-like systems (which returns the home dir given the current user in your
+system). On Windows, it then checks for the APPDATA variable, or as a last
+resort the '%USERPROFILE%\\Application Data'.
+
+2) On windows, if there is no _curlrc file in the home dir, it checks for one
+in the same dir the curl executable is placed. On Unix-like systems, it will
+simply try to load .curlrc from the determined home dir.
+
+.nf
+# --- Example file ---
+# this is a comment
+url = "example.com"
+output = "curlhere.html"
+user-agent = "superagent/1.0"
+
+# and fetch another URL too
+url = "example.com/docs/manpage.html"
+-O
+referer = "http://nowhereatall.example.com/"
+# --- End of example file ---
+.fi
+
+This option can be used multiple times to load multiple config files.
 .IP "--connect-timeout <seconds>"
 Maximum time in seconds that you allow curl's connection to take.  This only
 limits the connection phase, so if curl connects within the given period it
 will continue - if not it will exit.  Since version 7.32.0, this option
 accepts decimal values.
 
-See also the \fI-m, --max-time\fP option.
+If this option is used several times, the last one will be used.
+
+See also \fI-m, --max-time\fP.
+.IP "--connect-to <HOST1:PORT1:HOST2:PORT2>"
+
+For a request to the given HOST:PORT pair, connect to
+CONNECT-TO-HOST:CONNECT-TO-PORT instead.  This option is suitable to direct
+requests at a specific server, e.g. at a specific cluster node in a cluster of
+servers.  This option is only used to establish the network connection. It
+does NOT affect the hostname/port that is used for TLS/SSL (e.g. SNI,
+certificate verification) or for the application protocols.  "host" and "port"
+may be the empty string, meaning "any host/port".  "connect-to-host" and
+"connect-to-port" may also be the empty string, meaning "use the request's
+original host/port".
+
+This option can be used many times to add many connect rules.
+
+See also \fI--resolve\fP and \fI-H, --header\fP. Added in 7.49.0.
+.IP "-C, --continue-at <offset>"
+Continue/Resume a previous file transfer at the given offset. The given offset
+is the exact number of bytes that will be skipped, counting from the beginning
+of the source file before it is transferred to the destination.  If used with
+uploads, the FTP server command SIZE will not be used by curl.
+
+Use "-C -" to tell curl to automatically find out where/how to resume the
+transfer. It then uses the given output/input files to figure that out.
+
+If this option is used several times, the last one will be used.
+
+See also \fI-r, --range\fP.
+.IP "-c, --cookie-jar <filename>"
+(HTTP) Specify to which file you want curl to write all cookies after a completed
+operation. Curl writes all cookies from its in-memory cookie storage to the
+given file at the end of operations. If no cookies are known, no data will be
+written. The file will be written using the Netscape cookie file format. If
+you set the file name to a single dash, "-", the cookies will be written to
+stdout.
+
+This command line option will activate the cookie engine that makes curl
+record and use cookies. Another way to activate it is to use the \fI-b, --cookie\fP
+option.
+
+If the cookie jar can't be created or written to, the whole curl operation
+won't fail or even report an error clearly. Using \fI-v, --verbose\fP will get a warning
+displayed, but that is the only visible feedback you get about this possibly
+lethal situation.
+
+If this option is used several times, the last specified file name will be
+used.
+.IP "-b, --cookie <data>"
+(HTTP) Pass the data to the HTTP server in the Cookie header. It is supposedly
+the data previously received from the server in a "Set-Cookie:" line.  The
+data should be in the format "NAME1=VALUE1; NAME2=VALUE2".
+
+If no '=' symbol is used in the argument, it is instead treated as a filename
+to read previously stored cookie from. This option also activates the cookie
+engine which will make curl record incoming cookies, which may be handy if
+you're using this in combination with the \fI-L, --location\fP option or do multiple URL
+transfers on the same invoke.
+
+The file format of the file to read cookies from should be plain HTTP headers
+(Set-Cookie style) or the Netscape/Mozilla cookie file format.
+
+The file specified with \fI-b, --cookie\fP is only used as input. No cookies will be
+written to the file. To store cookies, use the \fI-c, --cookie-jar\fP option.
+
+Exercise caution if you are using this option and multiple transfers may
+occur.  If you use the NAME1=VALUE1; format, or in a file use the Set-Cookie
+format and don't specify a domain, then the cookie is sent for any domain
+(even after redirects are followed) and cannot be modified by a server-set
+cookie. If the cookie engine is enabled and a server sets a cookie of the same
+name then both will be sent on a future transfer to that server, likely not
+what you intended.  To address these issues set a domain in Set-Cookie (doing
+that will include sub domains) or use the Netscape format.
 
 If this option is used several times, the last one will be used.
+
+Users very often want to both read cookies from a file and write updated
+cookies back to a file, so using both \fI-b, --cookie\fP and \fI-c, --cookie-jar\fP in the same
+command line is common.
 .IP "--create-dirs"
-When used in conjunction with the \fI-o\fP option, curl will create the
+When used in conjunction with the \fI-o, --output\fP option, curl will create the
 necessary local directory hierarchy as needed. This option creates the dirs
-mentioned with the \fI-o\fP option, nothing else. If the \fI-o\fP file name
+mentioned with the \fI-o, --output\fP option, nothing else. If the --output file name
 uses no dir or if the dirs it mentions already exist, no dir will be created.
 
-To create remote directories when using FTP or SFTP, try
-\fI--ftp-create-dirs\fP.
+To create remote directories when using FTP or SFTP, try \fI--ftp-create-dirs\fP.
 .IP "--crlf"
-Convert LF to CRLF in upload. Useful for MVS (OS/390).
+(FTP SMTP) Convert LF to CRLF in upload. Useful for MVS (OS/390).
 
 (SMTP added in 7.40.0)
 .IP "--crlfile <file>"
-(HTTPS/FTPS) Provide a file using PEM format with a Certificate Revocation
-List that may specify peer certificates that are to be considered revoked.
+(TLS) Provide a file using PEM format with a Certificate Revocation List that may
+specify peer certificates that are to be considered revoked.
 
 If this option is used several times, the last one will be used.
 
-(Added in 7.19.7)
-.IP "-d, --data <data>"
-(HTTP) Sends the specified data in a POST request to the HTTP server, in the
-same way that a browser does when a user has filled in an HTML form and
-presses the submit button. This will cause curl to pass the data to the server
-using the content-type application/x-www-form-urlencoded.  Compare to
-\fI-F, --form\fP.
-
-\fI-d, --data\fP is the same as \fI--data-ascii\fP. \fI--data-raw\fP is almost
-the same but does not have a special interpretation of the @ character. To
-post data purely binary, you should instead use the \fI--data-binary\fP option.
-To URL-encode the value of a form field you may use \fI--data-urlencode\fP.
-
-If any of these options is used more than once on the same command line, the
-data pieces specified will be merged together with a separating
-&-symbol. Thus, using '-d name=daniel -d skill=lousy' would generate a post
-chunk that looks like \&'name=daniel&skill=lousy'.
-
-If you start the data with the letter @, the rest should be a file name to
-read the data from, or - if you want curl to read the data from
-stdin. Multiple files can also be specified. Posting data from a file
-named 'foobar' would thus be done with \fI--data\fP @foobar. When --data is
-told to read from a file like that, carriage returns and newlines will be
-stripped out. If you don't want the @ character to have a special
-interpretation use \fI--data-raw\fP instead.
-.IP "-D, --dump-header <file>"
-Write the protocol headers to the specified file.
-
-This option is handy to use when you want to store the headers that an HTTP
-site sends to you. Cookies from the headers could then be read in a second
-curl invocation by using the \fI-b, --cookie\fP option! The
-\fI-c, --cookie-jar\fP option is a better way to store cookies.
-
-When used in FTP, the FTP server response lines are considered being "headers"
-and thus are saved there.
-
-If this option is used several times, the last one will be used.
+Added in 7.19.7.
 .IP "--data-ascii <data>"
-See \fI-d, --data\fP.
+(HTTP) This is just an alias for \fI-d, --data\fP.
 .IP "--data-binary <data>"
-(HTTP) This posts data exactly as specified with no extra processing
-whatsoever.
+(HTTP) This posts data exactly as specified with no extra processing whatsoever.
 
 If you start the data with the letter @, the rest should be a filename.  Data
-is posted in a similar manner as \fI--data-ascii\fP does, except that newlines
-and carriage returns are preserved and conversions are never done.
+is posted in a similar manner as \fI-d, --data\fP does, except that newlines and
+carriage returns are preserved and conversions are never done.
 
 If this option is used several times, the ones following the first will append
 data as described in \fI-d, --data\fP.
 .IP "--data-raw <data>"
-(HTTP) This posts data similarly to \fI--data\fP but without the special
-interpretation of the @ character. See \fI-d, --data\fP.
-(Added in 7.43.0)
+(HTTP) This posts data similarly to \fI-d, --data\fP but without the special
+interpretation of the @ character.
+
+See also \fI-d, --data\fP. Added in 7.43.0.
 .IP "--data-urlencode <data>"
-(HTTP) This posts data, similar to the other --data options with the exception
-that this performs URL-encoding. (Added in 7.18.0)
+(HTTP) This posts data, similar to the other \fI-d, --data\fP options with the exception
+that this performs URL-encoding.
 
 To be CGI-compliant, the <data> part should begin with a \fIname\fP followed
 by a separator and a content specification. The <data> part can be passed to
 curl using one of the following syntaxes:
 .RS
 .IP "content"
@@ -407,307 +463,269 @@
 .IP "name@filename"
 This will make curl load data from the given file (including any newlines),
 URL-encode that data and pass it on in the POST. The name part gets an equal
 sign appended, resulting in \fIname=urlencoded-file-content\fP. Note that the
 name is expected to be URL-encoded already.
 .RE
-.IP "--delegation LEVEL"
-Set \fILEVEL\fP to tell the server what it is allowed to delegate when it
-comes to user credentials. Used with GSS/kerberos.
+
+See also \fI-d, --data\fP and \fI--data-raw\fP. Added in 7.18.0.
+.IP "-d, --data <data>"
+(HTTP) Sends the specified data in a POST request to the HTTP server, in the same way
+that a browser does when a user has filled in an HTML form and presses the
+submit button. This will cause curl to pass the data to the server using the
+content-type application/x-www-form-urlencoded.  Compare to \fI-F, --form\fP.
+
+\fI--data-raw\fP is almost the same but does not have a special interpretation of
+the @ character. To post data purely binary, you should instead use the
+\fI--data-binary\fP option.  To URL-encode the value of a form field you may use
+\fI--data-urlencode\fP.
+
+If any of these options is used more than once on the same command line, the
+data pieces specified will be merged together with a separating
+&-symbol. Thus, using '-d name=daniel -d skill=lousy' would generate a post
+chunk that looks like \&'name=daniel&skill=lousy'.
+
+If you start the data with the letter @, the rest should be a file name to
+read the data from, or - if you want curl to read the data from
+stdin. Multiple files can also be specified. Posting data from a file named
+'foobar' would thus be done with \fI-d, --data\fP @foobar. When --data is told to read
+from a file like that, carriage returns and newlines will be stripped out. If
+you don't want the @ character to have a special interpretation use \fI--data-raw\fP
+instead.
+
+See also \fI--data-binary\fP and \fI--data-urlencode\fP and \fI--data-raw\fP. This option overrides \fI-F, --form\fP and \fI-I, --head\fP and \fI--upload\fP.
+.IP "--delegation <LEVEL>"
+(GSS/kerberos) Set LEVEL to tell the server what it is allowed to delegate when it
+comes to user credentials.
 .RS
 .IP "none"
 Don't allow any delegation.
 .IP "policy"
 Delegates if and only if the OK-AS-DELEGATE flag is set in the Kerberos
 service ticket, which is a matter of realm policy.
 .IP "always"
 Unconditionally allow the server to delegate.
 .RE
 .IP "--digest"
-(HTTP) Enables HTTP Digest authentication. This is an authentication scheme
-that prevents the password from being sent over the wire in clear text. Use
-this in combination with the normal \fI-u, --user\fP option to set user name
-and password. See also \fI--ntlm\fP, \fI--negotiate\fP and \fI--anyauth\fP for
-related options.
+(HTTP) Enables HTTP Digest authentication. This is an authentication scheme that
+prevents the password from being sent over the wire in clear text. Use this in
+combination with the normal \fI-u, --user\fP option to set user name and password.
 
 If this option is used several times, only the first one is used.
+
+See also \fI-u, --user\fP and \fI--proxy-digest\fP and \fI--anyauth\fP. This option overrides \fI--basic\fP and \fI--ntlm\fP and \fI--negotiate\fP.
 .IP "--disable-eprt"
-(FTP) Tell curl to disable the use of the EPRT and LPRT commands when doing
-active FTP transfers. Curl will normally always first attempt to use EPRT,
-then LPRT before using PORT, but with this option, it will use PORT right
-away. EPRT and LPRT are extensions to the original FTP protocol, and may not
-work on all servers, but they enable more functionality in a better way than
-the traditional PORT command.
+(FTP) Tell curl to disable the use of the EPRT and LPRT commands when doing active
+FTP transfers. Curl will normally always first attempt to use EPRT, then LPRT
+before using PORT, but with this option, it will use PORT right away. EPRT and
+LPRT are extensions to the original FTP protocol, and may not work on all
+servers, but they enable more functionality in a better way than the
+traditional PORT command.
 
-\fB--eprt\fP can be used to explicitly enable EPRT again and \fB--no-eprt\fP
-is an alias for \fB--disable-eprt\fP.
+--eprt can be used to explicitly enable EPRT again and --no-eprt is an alias
+for \fI--disable-eprt\fP.
 
-If the server is an IPv6 host, this option will have no effect as EPRT is
-necessary then.
+If the server is accessed using IPv6, this option will have no effect as EPRT
+is necessary then.
 
 Disabling EPRT only changes the active behavior. If you want to switch to
-passive mode you need to not use \fI-P, --ftp-port\fP or force it with
-\fI--ftp-pasv\fP.
+passive mode you need to not use \fI-P, --ftp-port\fP or force it with \fI--ftp-pasv\fP.
 .IP "--disable-epsv"
-(FTP) Tell curl to disable the use of the EPSV command when doing passive FTP
+(FTP) (FTP) Tell curl to disable the use of the EPSV command when doing passive FTP
 transfers. Curl will normally always first attempt to use EPSV before PASV,
 but with this option, it will not try using EPSV.
 
-\fB--epsv\fP can be used to explicitly enable EPSV again and \fB--no-epsv\fP
-is an alias for \fB--disable-epsv\fP.
+--epsv can be used to explicitly enable EPSV again and --no-epsv is an alias
+for \fI--disable-epsv\fP.
 
 If the server is an IPv6 host, this option will have no effect as EPSV is
 necessary then.
 
 Disabling EPSV only changes the passive behavior. If you want to switch to
 active mode you need to use \fI-P, --ftp-port\fP.
+.IP "-q, --disable"
+If used as the first parameter on the command line, the \fIcurlrc\fP config
+file will not be read and used. See the \fI-K, --config\fP for details on the default
+config file search path.
 .IP "--dns-interface <interface>"
-Tell curl to send outgoing DNS requests through <interface>. This option
-is a counterpart to \fI--interface\fP (which does not affect DNS). The
-supplied string must be an interface name (not an address).
-
-This option requires that libcurl was built with a resolver backend that
-supports this operation. The c-ares backend is the only such one. (Added in
-7.33.0)
-.IP "--dns-ipv4-addr <ip-address>"
-Tell curl to bind to <ip-address> when making IPv4 DNS requests, so that
+(DNS) Tell curl to send outgoing DNS requests through <interface>. This option is a
+counterpart to \fI--interface\fP (which does not affect DNS). The supplied string
+must be an interface name (not an address).
+
+See also \fI--dns-ipv4-addr\fP and \fI--dns-ipv6-addr\fP. \fI--dns-interface\fP requires that the underlying libcurl was built to support c-ares. Added in 7.33.0.
+.IP "--dns-ipv4-addr <address>"
+(DNS) Tell curl to bind to <ip-address> when making IPv4 DNS requests, so that
 the DNS requests originate from this address. The argument should be a
 single IPv4 address.
 
-This option requires that libcurl was built with a resolver backend that
-supports this operation. The c-ares backend is the only such one.  (Added in
-7.33.0)
-.IP "--dns-ipv6-addr <ip-address>"
-Tell curl to bind to <ip-address> when making IPv6 DNS requests, so that
+See also \fI--dns-interface\fP and \fI--dns-ipv6-addr\fP. \fI--dns-ipv4-addr\fP requires that the underlying libcurl was built to support c-ares. Added in 7.33.0.
+.IP "--dns-ipv6-addr <address>"
+(DNS) Tell curl to bind to <ip-address> when making IPv6 DNS requests, so that
 the DNS requests originate from this address. The argument should be a
 single IPv6 address.
 
-This option requires that libcurl was built with a resolver backend that
-supports this operation. The c-ares backend is the only such one.  (Added in
-7.33.0)
-.IP "--dns-servers <ip-address,ip-address>"
+See also \fI--dns-interface\fP and \fI--dns-ipv4-addr\fP. \fI--dns-ipv6-addr\fP requires that the underlying libcurl was built to support c-ares. Added in 7.33.0.
+.IP "--dns-servers <addresses>"
 Set the list of DNS servers to be used instead of the system default.
 The list of IP addresses should be separated with commas. Port numbers
 may also optionally be given as \fI:<port-number>\fP after each IP
 address.
 
-This option requires that libcurl was built with a resolver backend that
-supports this operation. The c-ares backend is the only such one.  (Added in
-7.33.0)
-.IP "-e, --referer <URL>"
-(HTTP) Sends the "Referrer Page" information to the HTTP server. This can also
-be set with the \fI-H, --header\fP flag of course.  When used with
-\fI-L, --location\fP you can append ";auto" to the --referer URL to make curl
-automatically set the previous URL when it follows a Location: header. The
-\&";auto" string can be used alone, even if you don't set an initial --referer.
-
-If this option is used several times, the last one will be used.
-.IP "-E, --cert <certificate[:password]>"
-(SSL) Tells curl to use the specified client certificate file when getting a
-file with HTTPS, FTPS or another SSL-based protocol. The certificate must be
-in PKCS#12 format if using Secure Transport, or PEM format if using any other
-engine.  If the optional password isn't specified, it will be queried for on
-the terminal. Note that this option assumes a \&"certificate" file that is the
-private key and the client certificate concatenated! See \fI--cert\fP and
-\fI--key\fP to specify them independently.
+\fI--dns-servers\fP requires that the underlying libcurl was built to support c-ares. Added in 7.33.0.
+.IP "-D, --dump-header <filename>"
+(HTTP FTP) Write the received protocol headers to the specified file.
 
-If curl is built against the NSS SSL library then this option can tell
-curl the nickname of the certificate to use within the NSS database defined
-by the environment variable SSL_DIR (or by default /etc/pki/nssdb). If the
-NSS PEM PKCS#11 module (libnsspem.so) is available then PEM files may be
-loaded. If you want to use a file from the current directory, please precede
-it with "./" prefix, in order to avoid confusion with a nickname.  If the
-nickname contains ":", it needs to be preceded by "\\" so that it is not
-recognized as password delimiter.  If the nickname contains "\\", it needs to
-be escaped as "\\\\" so that it is not recognized as an escape character.
+This option is handy to use when you want to store the headers that an HTTP
+site sends to you. Cookies from the headers could then be read in a second
+curl invocation by using the \fI-b, --cookie\fP option! The \fI-c, --cookie-jar\fP option is a
+better way to store cookies.
 
-(iOS and macOS only) If curl is built against Secure Transport, then the
-certificate string can either be the name of a certificate/private key in the
-system or user keychain, or the path to a PKCS#12-encoded certificate and
-private key. If you want to use a file from the current directory, please
-precede it with "./" prefix, in order to avoid confusion with a nickname.
+When used in FTP, the FTP server response lines are considered being "headers"
+and thus are saved there.
 
 If this option is used several times, the last one will be used.
+
+See also \fI-o, --output\fP.
+.IP "--egd-file <file>"
+(TLS) Specify the path name to the Entropy Gathering Daemon socket. The socket is
+used to seed the random engine for SSL connections.
+
+See also \fI--random-file\fP.
 .IP "--engine <name>"
-Select the OpenSSL crypto engine to use for cipher
-operations. Use \fI--engine list\fP to print a list of build-time supported
-engines. Note that not all (or none) of the engines may be available at
-run-time.
+(TLS) Select the OpenSSL crypto engine to use for cipher operations. Use \fI--engine\fP
+list to print a list of build-time supported engines. Note that not all (or
+none) of the engines may be available at run-time.
 .IP "--environment"
-(RISC OS ONLY) Sets a range of environment variables, using the names the
-\fI-w\fP option supports, to allow easier extraction of useful information
-after having run curl.
-.IP "--egd-file <file>"
-(SSL) Specify the path name to the Entropy Gathering Daemon socket. The socket
-is used to seed the random engine for SSL connections. See also the
-\fI--random-file\fP option.
+Sets a range of environment variables, using the names the \fI-w, --write-out\fP option
+supports, to allow easier extraction of useful information after having run
+curl.
+
+\fI--environment\fP requires that the underlying libcurl was built to support RISC OS.
 .IP "--expect100-timeout <seconds>"
 (HTTP) Maximum time in seconds that you allow curl to wait for a 100-continue
 response when curl emits an Expects: 100-continue header in its request. By
 default curl will wait one second. This option accepts decimal values! When
 curl stops waiting, it will continue as if the response has been received.
 
-(Added in 7.47.0)
-.IP "--cert-type <type>"
-(SSL) Tells curl what certificate type the provided certificate is in. PEM,
-DER and ENG are recognized types.  If not specified, PEM is assumed.
+See also \fI--connect-timeout\fP. Added in 7.47.0.
+.IP "--fail-early"
+Fail and exit on first detected error.
+
+When curl is used to do multiple transfers on the command line, it will
+attempt to operate on each given URL, one by one. By default, it will ignore
+errors if there are more URLs given and the last URL's success will determine
+the error code curl returns. So early failures will be "hidden" by subsequent
+successful transfers.
+
+Using this option, curl will instead return an error on the first transfers
+that fails, independent on the amount of more URLs that are given on the
+command line. This way, no transfer failures go undetected by scripts and
+similar.
 
-If this option is used several times, the last one will be used.
-.IP "--cacert <CA certificate>"
-(SSL) Tells curl to use the specified certificate file to verify the peer. The
-file may contain multiple CA certificates. The certificate(s) must be in PEM
-format. Normally curl is built to use a default file for this, so this option
-is typically used to alter that default file.
+This option will apply for all given URLs even if you use \fI-:, --next\fP.
 
-curl recognizes the environment variable named 'CURL_CA_BUNDLE' if it is
-set, and uses the given path as a path to a CA cert bundle. This option
-overrides that variable.
-
-The windows version of curl will automatically look for a CA certs file named
-\'curl-ca-bundle.crt\', either in the same directory as curl.exe, or in the
-Current Working Directory, or in any folder along your PATH.
-
-If curl is built against the NSS SSL library, the NSS PEM PKCS#11 module
-(libnsspem.so) needs to be available for this option to work properly.
-
-(iOS and macOS only) If curl is built against Secure Transport, then this
-option is supported for backward compatibility with other SSL engines, but it
-should not be set. If the option is not set, then curl will use the
-certificates in the system and user Keychain to verify the peer, which is the
-preferred method of verifying the peer's certificate chain.
-
-If this option is used several times, the last one will be used.
-.IP "--capath <CA certificate directory>"
-(SSL) Tells curl to use the specified certificate directory to verify the
-peer. Multiple paths can be provided by separating them with ":" (e.g.
-\&"path1:path2:path3"). The certificates must be in PEM format, and if curl is
-built against OpenSSL, the directory must have been processed using the
-c_rehash utility supplied with OpenSSL. Using \fI--capath\fP can allow
-OpenSSL-powered curl to make SSL-connections much more efficiently than using
-\fI--cacert\fP if the \fI--cacert\fP file contains many CA certificates.
-
-If this option is set, the default capath value will be ignored, and if it is
-used several times, the last one will be used.
-.IP "--pinnedpubkey <pinned public key (hashes)>"
-(SSL) Tells curl to use the specified public key file (or hashes) to verify the
-peer. This can be a path to a file which contains a single public key in PEM or
-DER format, or any number of base64 encoded sha256 hashes preceded by
-\'sha256//\' and separated by \';\'
-
-When negotiating a TLS or SSL connection, the server sends a certificate
-indicating its identity. A public key is extracted from this certificate and
-if it does not exactly match the public key provided to this option, curl will
-abort the connection before sending or receiving any data.
-
-PEM/DER support:
-  7.39.0: OpenSSL, GnuTLS and GSKit
-  7.43.0: NSS and wolfSSL/CyaSSL
-  7.47.0: mbedtls
-  7.49.0: PolarSSL
-sha256 support:
-  7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.
-  7.47.0: mbedtls
-  7.49.0: PolarSSL
-Other SSL backends not supported.
-
-If this option is used several times, the last one will be used.
-.IP "--cert-status"
-(SSL) Tells curl to verify the status of the server certificate by using the
-Certificate Status Request (aka. OCSP stapling) TLS extension.
-
-If this option is enabled and the server sends an invalid (e.g. expired)
-response, if the response suggests that the server certificate has been revoked,
-or no response at all is received, the verification fails.
+Added in 7.52.0.
+.IP "-f, --fail"
+(HTTP) Fail silently (no output at all) on server errors. This is mostly done to
+better enable scripts etc to better deal with failed attempts. In normal cases
+when an HTTP server fails to deliver a document, it returns an HTML document
+stating so (which often also describes why and more). This flag will prevent
+curl from outputting that and return error 22.
 
-This is currently only implemented in the OpenSSL, GnuTLS and NSS backends.
-(Added in 7.41.0)
+This method is not fail-safe and there are occasions where non-successful
+response codes will slip through, especially when authentication is involved
+(response codes 401 and 407).
 .IP "--false-start"
-
-(SSL) Tells curl to use false start during the TLS handshake. False start is a
-mode where a TLS client will start sending application data before verifying
-the server's Finished message, thus saving a round trip when performing a full
+(TLS) Tells curl to use false start during the TLS handshake. False start is a mode
+where a TLS client will start sending application data before verifying the
+server's Finished message, thus saving a round trip when performing a full
 handshake.
 
 This is currently only implemented in the NSS and Secure Transport (on iOS 7.0
 or later, or OS X 10.9 or later) backends.
-(Added in 7.42.0)
-.IP "-f, --fail"
-(HTTP) Fail silently (no output at all) on server errors. This is mostly done
-to better enable scripts etc to better deal with failed attempts. In normal
-cases when an HTTP server fails to deliver a document, it returns an HTML
-document stating so (which often also describes why and more). This flag will
-prevent curl from outputting that and return error 22.
 
-This method is not fail-safe and there are occasions where non-successful
-response codes will slip through, especially when authentication is involved
-(response codes 401 and 407).
+Added in 7.42.0.
+.IP "--form-string <name=string>"
+(HTTP) Similar to \fI-F, --form\fP except that the value string for the named parameter is used
+literally. Leading \&'@' and \&'<' characters, and the \&';type=' string in
+the value have no special meaning. Use this in preference to \fI-F, --form\fP if
+there's any possibility that the string value may accidentally trigger the
+\&'@' or \&'<' features of \fI-F, --form\fP.
+
+See also \fI-F, --form\fP.
 .IP "-F, --form <name=content>"
-(HTTP) This lets curl emulate a filled-in form in which a user has pressed the
-submit button. This causes curl to POST data using the Content-Type
+(HTTP) This lets curl emulate a filled-in form in which a user has pressed the submit
+button. This causes curl to POST data using the Content-Type
 multipart/form-data according to RFC 2388. This enables uploading of binary
 files etc. To force the 'content' part to be a file, prefix the file name with
 an @ sign. To just get the content part from a file, prefix the file name with
 the symbol <. The difference between @ and < is then that @ makes a file get
 attached in the post as a file upload, while the < makes a text field and just
 get the contents for that text field from a file.
 
 Example: to send an image to a server, where \&'profile' is the name of the
 form-field to which portrait.jpg will be the input:
 
-\fBcurl\fP -F profile=@portrait.jpg https://example.com/upload.cgi
+ curl -F profile=@portrait.jpg https://example.com/upload.cgi
 
 To read content from stdin instead of a file, use - as the filename. This goes
 for both @ and < constructs. Unfortunately it does not support reading the
 file from a named pipe or similar, as it needs the full size before the
 transfer starts.
 
 You can also tell curl what Content-Type to use by using 'type=', in a manner
 similar to:
 
-\fBcurl\fP -F "web=@index.html;type=text/html" example.com
+ curl -F "web=@index.html;type=text/html" example.com
 
 or
 
-\fBcurl\fP -F "name=daniel;type=text/foo" example.com
+ curl -F "name=daniel;type=text/foo" example.com
 
 You can also explicitly change the name field of a file upload part by setting
 filename=, like this:
 
-\fBcurl\fP -F "file=@localfile;filename=nameinpost" example.com
+ curl -F "file=@localfile;filename=nameinpost" example.com
 
 If filename/path contains ',' or ';', it must be quoted by double-quotes like:
 
-\fBcurl\fP -F "file=@\\"localfile\\";filename=\\"nameinpost\\"" example.com
+ curl -F "file=@\\"localfile\\";filename=\\"nameinpost\\"" example.com
 
 or
 
-\fBcurl\fP -F 'file=@"localfile";filename="nameinpost"' example.com
+ curl -F 'file=@"localfile";filename="nameinpost"' example.com
 
 Note that if a filename/path is quoted by double-quotes, any double-quote
 or backslash within the filename must be escaped by backslash.
 
 See further examples and details in the MANUAL.
 
 This option can be used multiple times.
-.IP "--ftp-account [data]"
-(FTP) When an FTP server asks for "account data" after user name and password
-has been provided, this data is sent off using the ACCT command. (Added in
-7.13.0)
+
+This option overrides \fI-d, --data\fP and \fI-I, --head\fP and \fI--upload\fP.
+.IP "--ftp-account <data>"
+(FTP) When an FTP server asks for "account data" after user name and password has
+been provided, this data is sent off using the ACCT command.
 
 If this option is used several times, the last one will be used.
+
+Added in 7.13.0.
 .IP "--ftp-alternative-to-user <command>"
-(FTP) If authenticating with the USER and PASS commands fails, send this
-command.  When connecting to Tumbleweed's Secure Transport server over FTPS
-using a client certificate, using "SITE AUTH" will tell the server to retrieve
-the username from the certificate. (Added in 7.15.5)
+(FTP) If authenticating with the USER and PASS commands fails, send this command.
+When connecting to Tumbleweed's Secure Transport server over FTPS using a
+client certificate, using "SITE AUTH" will tell the server to retrieve the
+username from the certificate.
+
+Added in 7.15.5.
 .IP "--ftp-create-dirs"
-(FTP/SFTP) When an FTP or SFTP URL/operation uses a path that doesn't
-currently exist on the server, the standard behavior of curl is to
-fail. Using this option, curl will instead attempt to create missing
-directories.
-.IP "--ftp-method [method]"
+(FTP SFTP) When an FTP or SFTP URL/operation uses a path that doesn't currently exist on
+the server, the standard behavior of curl is to fail. Using this option, curl
+will instead attempt to create missing directories.
+
+See also \fI--create-dirs\fP.
+.IP "--ftp-method <method>"
 (FTP) Control what method curl should use to reach a file on an FTP(S)
 server. The method argument should be one of the following alternatives:
 .RS
 .IP multicwd
 curl does a single CWD operation for each path part in the given URL. For deep
 hierarchies this means very many commands. This is how RFC 1738 says it should
@@ -717,263 +735,276 @@
 path to the server for all these commands. This is the fastest behavior.
 .IP singlecwd
 curl does one CWD with the full target directory and then operates on the file
 \&"normally" (like in the multicwd case). This is somewhat more standards
 compliant than 'nocwd' but without the full penalty of 'multicwd'.
 .RE
-.IP
-(Added in 7.15.1)
+
+Added in 7.15.1.
 .IP "--ftp-pasv"
 (FTP) Use passive mode for the data connection. Passive is the internal default
-behavior, but using this option can be used to override a previous
-\fI-P/-ftp-port\fP option. (Added in 7.11.0)
+behavior, but using this option can be used to override a previous \fI-P, --ftp-port\fP
+option.
 
 If this option is used several times, only the first one is used. Undoing an
 enforced passive really isn't doable but you must then instead enforce the
 correct \fI-P, --ftp-port\fP again.
 
 Passive mode means that curl will try the EPSV command first and then PASV,
 unless \fI--disable-epsv\fP is used.
+
+See also \fI--disable-epsv\fP. Added in 7.11.0.
+.IP "-P, --ftp-port <address>"
+(FTP) Reverses the default initiator/listener roles when connecting with FTP. This
+option makes curl use active mode. curl then tells the server to connect back
+to the client's specified address and port, while passive mode asks the server
+to setup an IP address and port for it to connect to. <address> should be one
+of:
+.RS
+.IP interface
+i.e "eth0" to specify which interface's IP address you want to use (Unix only)
+.IP "IP address"
+i.e "192.168.10.1" to specify the exact IP address
+.IP "host name"
+i.e "my.host.domain" to specify the machine
+.IP "-"
+make curl pick the same IP address that is already used for the control
+connection
+.RE
+
+If this option is used several times, the last one will be used. Disable the
+use of PORT with \fI--ftp-pasv\fP. Disable the attempt to use the EPRT command
+instead of PORT by using \fI--disable-eprt\fP. EPRT is really PORT++.
+
+Since 7.19.5, you can append \&":[start]-[end]\&" to the right of the address,
+to tell curl what TCP port range to use. That means you specify a port range,
+from a lower to a higher number. A single number works as well, but do note
+that it increases the risk of failure since the port may not be available.
+
+See also \fI--ftp-pasv\fP and \fI--disable-eprt\fP.
+.IP "--ftp-pret"
+(FTP) Tell curl to send a PRET command before PASV (and EPSV). Certain FTP servers,
+mainly drftpd, require this non-standard command for directory listings as
+well as up and downloads in PASV mode.
+
+Added in 7.20.0.
 .IP "--ftp-skip-pasv-ip"
 (FTP) Tell curl to not use the IP address the server suggests in its response
 to curl's PASV command when curl connects the data connection. Instead curl
 will re-use the same IP address it already uses for the control
-connection. (Added in 7.14.2)
+connection.
 
 This option has no effect if PORT, EPRT or EPSV is used instead of PASV.
-.IP "--ftp-pret"
-(FTP) Tell curl to send a PRET command before PASV (and EPSV). Certain
-FTP servers, mainly drftpd, require this non-standard command for
-directory listings as well as up and downloads in PASV mode.
-(Added in 7.20.x)
+
+See also \fI--ftp-pasv\fP. Added in 7.14.2.
+.IP "--ftp-ssl-ccc-mode <active/passive>"
+(FTP) Sets the CCC mode. The passive mode will not initiate the shutdown, but
+instead wait for the server to do it, and will not reply to the shutdown from
+the server. The active mode initiates the shutdown and waits for a reply from
+the server.
+
+See also \fI--ftp-ssl-ccc\fP. Added in 7.16.2.
 .IP "--ftp-ssl-ccc"
-(FTP) Use CCC (Clear Command Channel)
-Shuts down the SSL/TLS layer after authenticating. The rest of the
-control channel communication will be unencrypted. This allows
-NAT routers to follow the FTP transaction. The default mode is
-passive. See \fI--ftp-ssl-ccc-mode\fP for other modes.
-(Added in 7.16.1)
-.IP "--ftp-ssl-ccc-mode [active/passive]"
-(FTP) Use CCC (Clear Command Channel)
-Sets the CCC mode. The passive mode will not initiate the shutdown, but
-instead wait for the server to do it, and will not reply to the
-shutdown from the server. The active mode initiates the shutdown and
-waits for a reply from the server.
-(Added in 7.16.2)
+(FTP) Use CCC (Clear Command Channel) Shuts down the SSL/TLS layer after
+authenticating. The rest of the control channel communication will be
+unencrypted. This allows NAT routers to follow the FTP transaction. The
+default mode is passive.
+
+See also \fI--ssl\fP and \fI--ftp-ssl-ccc-mode\fP. Added in 7.16.1.
 .IP "--ftp-ssl-control"
 (FTP) Require SSL/TLS for the FTP login, clear for transfer.  Allows secure
 authentication, but non-encrypted data transfers for efficiency.  Fails the
-transfer if the server doesn't support SSL/TLS.  (Added in 7.16.0)
-that can still be used but will be removed in a future version.
-.IP "--ftp-ssl"
-(FTP) This deprecated option is now known as \fI--ssl\fP.
-.IP "--ftp-ssl-reqd"
-(FTP) This deprecated option is now known as \fI--ssl-reqd\fP.
-.IP "--form-string <name=string>"
-(HTTP) Similar to \fI--form\fP except that the value string for the named
-parameter is used literally. Leading \&'@' and \&'<' characters, and the
-\&';type=' string in the value have no special meaning. Use this in preference
-to \fI--form\fP if there's any possibility that the string value may
-accidentally trigger the \&'@' or \&'<' features of \fI--form\fP.
-.IP "-g, --globoff"
-This option switches off the "URL globbing parser". When you set this option,
-you can specify URLs that contain the letters {}[] without having them being
-interpreted by curl itself. Note that these letters are not normal legal URL
-contents but they should be encoded according to the URI standard.
+transfer if the server doesn't support SSL/TLS.
+
+Added in 7.16.0.
 .IP "-G, --get"
-When used, this option will make all data specified with \fI-d, --data\fP,
-\fI--data-binary\fP or \fI--data-urlencode\fP to be used in an HTTP GET
-request instead of the POST request that otherwise would be used. The data
-will be appended to the URL with a '?' separator.
+When used, this option will make all data specified with \fI-d, --data\fP, \fI--data-binary\fP
+or \fI--data-urlencode\fP to be used in an HTTP GET request instead of the POST
+request that otherwise would be used. The data will be appended to the URL
+with a '?' separator.
 
-If used in combination with -I, the POST data will instead be appended to the
-URL with a HEAD request.
+If used in combination with \fI-I, --head\fP, the POST data will instead be appended to
+the URL with a HEAD request.
 
 If this option is used several times, only the first one is used. This is
 because undoing a GET doesn't make sense, but you should then instead enforce
 the alternative method you prefer.
+.IP "-g, --globoff"
+This option switches off the "URL globbing parser". When you set this option,
+you can specify URLs that contain the letters {}[] without having them being
+interpreted by curl itself. Note that these letters are not normal legal URL
+contents but they should be encoded according to the URI standard.
+.IP "-I, --head"
+(HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the command HEAD which this uses
+to get nothing but the header of a document. When used on an FTP or FILE file,
+curl displays the file size and last modification time only.
 .IP "-H, --header <header>"
-(HTTP) Extra header to include in the request when sending HTTP to a
-server. You may specify any number of extra headers. Note that if you should
-add a custom header that has the same name as one of the internal ones curl
-would use, your externally set header will be used instead of the internal
-one. This allows you to make even trickier stuff than curl would normally
-do. You should not replace internally set headers without knowing perfectly
-well what you're doing. Remove an internal header by giving a replacement
-without content on the right side of the colon, as in: -H \&"Host:". If you
-send the custom header with no-value then its header must be terminated with a
-semicolon, such as \-H \&"X-Custom-Header;" to send "X-Custom-Header:".
+(HTTP) 
+Extra header to include in the request when sending HTTP to a server. You may
+specify any number of extra headers. Note that if you should add a custom
+header that has the same name as one of the internal ones curl would use, your
+externally set header will be used instead of the internal one. This allows
+you to make even trickier stuff than curl would normally do. You should not
+replace internally set headers without knowing perfectly well what you're
+doing. Remove an internal header by giving a replacement without content on
+the right side of the colon, as in: -H \&"Host:". If you send the custom
+header with no-value then its header must be terminated with a semicolon, such
+as \-H \&"X-Custom-Header;" to send "X-Custom-Header:".
 
 curl will make sure that each header you add/replace is sent with the proper
 end-of-line marker, you should thus \fBnot\fP add that as a part of the header
 content: do not add newlines or carriage returns, they will only mess things up
 for you.
 
 See also the \fI-A, --user-agent\fP and \fI-e, --referer\fP options.
 
-Starting in 7.37.0, you need \fI--proxy-header\fP to send custom headers
-intended for a proxy.
+Starting in 7.37.0, you need \fI--proxy-header\fP to send custom headers intended
+for a proxy.
 
 Example:
 
-\&# curl -H "X-First-Name: Joe" http://example.com/
+ curl -H "X-First-Name: Joe" http://example.com/
 
 \fBWARNING\fP: headers set with this option will be set in all requests - even
-after redirects are followed, like when told with \fB-L, --location\fP. This
-can lead to the header being sent to other hosts than the original host, so
-sensitive headers should be used with caution combined with following
-redirects.
+after redirects are followed, like when told with \fI-L, --location\fP. This can lead to
+the header being sent to other hosts than the original host, so sensitive
+headers should be used with caution combined with following redirects.
 
 This option can be used multiple times to add/replace/remove multiple headers.
+.IP "-h, --help"
+Usage help. This lists all current command line options with a short
+description.
 .IP "--hostpubmd5 <md5>"
-(SCP/SFTP) Pass a string containing 32 hexadecimal digits. The string should
+(SFTP SCP) Pass a string containing 32 hexadecimal digits. The string should
 be the 128 bit MD5 checksum of the remote host's public key, curl will refuse
-the connection with the host unless the md5sums match. (Added in 7.17.1)
+the connection with the host unless the md5sums match.
+
+Added in 7.17.1.
+.IP "-0, --http1.0"
+(HTTP) Tells curl to use HTTP version 1.0 instead of using its internally preferred
+HTTP version.
+
+This option overrides \fI--http1.1\fP and \fI--http2\fP.
+.IP "--http1.1"
+(HTTP) Tells curl to use HTTP version 1.1.
+
+This option overrides \fI-0, --http1.0\fP and \fI--http2\fP. Added in 7.33.0.
+.IP "--http2-prior-knowledge"
+(HTTP) Tells curl to issue its non-TLS HTTP requests using HTTP/2 without HTTP/1.1
+Upgrade. It requires prior knowledge that the server supports HTTP/2 straight
+away. HTTPS requests will still do HTTP/2 the standard way with negotiated
+protocol version in the TLS handshake.
+
+\fI--http2-prior-knowledge\fP requires that the underlying libcurl was built to support HTTP/2. This option overrides \fI--http1.1\fP and \fI-0, --http1.0\fP and \fI--http2\fP. Added in 7.49.0.
+.IP "--http2"
+(HTTP) Tells curl to use HTTP version 2.
+
+See also \fI--no-alpn\fP. \fI--http2\fP requires that the underlying libcurl was built to support HTTP/2. This option overrides \fI--http1.1\fP and \fI-0, --http1.0\fP and \fI--http2-prior-knowledge\fP. Added in 7.33.0.
 .IP "--ignore-content-length"
-For HTTP, Ignore the Content-Length header. This is particularly useful for
+(FTP HTTP) For HTTP, Ignore the Content-Length header. This is particularly useful for
 servers running Apache 1.x, which will report incorrect Content-Length for
 files larger than 2 gigabytes.
 
 For FTP (since 7.46.0), skip the RETR command to figure out the size before
 downloading a file.
 .IP "-i, --include"
-(HTTP) Include the HTTP-header in the output. The HTTP-header includes things
-like server-name, date of the document, HTTP-version and more...
-.IP "-I, --head"
-(HTTP/FTP/FILE)
-Fetch the HTTP-header only! HTTP-servers feature the command HEAD
-which this uses to get nothing but the header of a document. When used
-on an FTP or FILE file, curl displays the file size and last modification
-time only.
-.IP "--interface <name>"
-Perform an operation using a specified interface. You can enter interface
-name, IP address or host name. An example could look like:
-
- curl --interface eth0:1 https://www.example.com/
-
-If this option is used several times, the last one will be used.
-.IP "-j, --junk-session-cookies"
-(HTTP) When curl is told to read cookies from a given file, this option will
-make it discard all "session cookies". This will basically have the same effect
-as if a new session is started. Typical browsers always discard session
-cookies when they're closed down.
-.IP "-J, --remote-header-name"
-(HTTP) This option tells the \fI-O, --remote-name\fP option to use the
-server-specified Content-Disposition filename instead of extracting a filename
-from the URL.
-
-If the server specifies a file name and a file with that name already exists
-in the current working directory it will not be overwritten and an error will
-occur. If the server doesn't specify a file name then this option has no
-effect.
-
-There's no attempt to decode %-sequences (yet) in the provided file name, so
-this option may provide you with rather unexpected file names.
+Include the HTTP-header in the output. The HTTP-header includes things like
+server-name, date of the document, HTTP-version and more...
 
-\fBWARNING\fP: Exercise judicious use of this option, especially on Windows. A
-rogue server could send you the name of a DLL or other file that could possibly
-be loaded automatically by Windows or some third party software.
+See also \fI-v, --verbose\fP.
 .IP "-k, --insecure"
-(SSL) This option explicitly allows curl to perform "insecure" SSL connections
-and transfers. All SSL connections are attempted to be made secure by using
-the CA certificate bundle installed by default. This makes all connections
-considered "insecure" fail unless \fI-k, --insecure\fP is used.
+(TLS) This option explicitly allows curl to perform "insecure" SSL connections and
+transfers. All SSL connections are attempted to be made secure by using the CA
+certificate bundle installed by default. This makes all connections considered
+\&"insecure" fail unless \fI-k, --insecure\fP is used.
 
 See this online resource for further details:
-\fBhttps://curl.haxx.se/docs/sslcerts.html\fP
-.IP "-K, --config <config file>"
-Specify which config file to read curl arguments from. The config file is a
-text file in which command line arguments can be written which then will be
-used as if they were written on the actual command line.
-
-Options and their parameters must be specified on the same config file line,
-separated by whitespace, colon, or the equals sign. Long option names can
-optionally be given in the config file without the initial double dashes and
-if so, the colon or equals characters can be used as separators. If the option
-is specified with one or two dashes, there can be no colon or equals character
-between the option and its parameter.
-
-If the parameter is to contain whitespace, the parameter must be enclosed
-within quotes. Within double quotes, the following escape sequences are
-available: \\\\, \\", \\t, \\n, \\r and \\v. A backslash preceding any other
-letter is ignored. If the first column of a config line is a '#' character,
-the rest of the line will be treated as a comment. Only write one option per
-physical line in the config file.
-
-Specify the filename to -K, --config as '-' to make curl read the file from
-stdin.
-
-Note that to be able to specify a URL in the config file, you need to specify
-it using the \fI--url\fP option, and not by simply writing the URL on its own
-line. So, it could look similar to this:
+ https://curl.haxx.se/docs/sslcerts.html
+.IP "--interface <name>"
 
-url = "https://curl.haxx.se/docs/"
+Perform an operation using a specified interface. You can enter interface
+name, IP address or host name. An example could look like:
 
-When curl is invoked, it always (unless \fI-q\fP is used) checks for a default
-config file and uses it if found. The default config file is checked for in
-the following places in this order:
+ curl --interface eth0:1 https://www.example.com/
 
-1) curl tries to find the "home dir": It first checks for the CURL_HOME and
-then the HOME environment variables. Failing that, it uses getpwuid() on
-Unix-like systems (which returns the home dir given the current user in your
-system). On Windows, it then checks for the APPDATA variable, or as a last
-resort the '%USERPROFILE%\\Application Data'.
+If this option is used several times, the last one will be used.
 
-2) On windows, if there is no _curlrc file in the home dir, it checks for one
-in the same dir the curl executable is placed. On Unix-like systems, it will
-simply try to load .curlrc from the determined home dir.
+See also \fI--dns-interface\fP.
+.IP "-4, --ipv4"
+This option tells curl to resolve names to IPv4 addresses only, and not for
+example try IPv6.
 
-.nf
-# --- Example file ---
-# this is a comment
-url = "example.com"
-output = "curlhere.html"
-user-agent = "superagent/1.0"
+See also \fI--http1.1\fP and \fI--http2\fP. This option overrides \fI-6, --ipv6\fP.
+.IP "-6, --ipv6"
+This option tells curl to resolve names to IPv6 addresses only, and not for
+example try IPv4.
 
-# and fetch another URL too
-url = "example.com/docs/manpage.html"
--O
-referer = "http://nowhereatall.example.com/"
-# --- End of example file ---
-.fi
+See also \fI--http1.1\fP and \fI--http2\fP. This option overrides \fI-6, --ipv6\fP.
+.IP "-j, --junk-session-cookies"
+(HTTP) When curl is told to read cookies from a given file, this option will make it
+discard all "session cookies". This will basically have the same effect as if
+a new session is started. Typical browsers always discard session cookies when
+they're closed down.
 
-This option can be used multiple times to load multiple config files.
+See also \fI-b, --cookie\fP and \fI-c, --cookie-jar\fP.
 .IP "--keepalive-time <seconds>"
 This option sets the time a connection needs to remain idle before sending
 keepalive probes and the time between individual keepalive probes. It is
 currently effective on operating systems offering the TCP_KEEPIDLE and
 TCP_KEEPINTVL socket options (meaning Linux, recent AIX, HP-UX and more). This
-option has no effect if \fI--no-keepalive\fP is used. (Added in 7.18.0)
+option has no effect if \fI--no-keepalive\fP is used.
 
 If this option is used several times, the last one will be used. If
 unspecified, the option defaults to 60 seconds.
-.IP "--key <key>"
-(SSL/SSH) Private key file name. Allows you to provide your private key in this
-separate file. For SSH, if not specified, curl tries the following candidates
-in order: '~/.ssh/id_rsa', '~/.ssh/id_dsa', './id_rsa', './id_dsa'.
 
-If this option is used several times, the last one will be used.
+Added in 7.18.0.
 .IP "--key-type <type>"
-(SSL) Private key file type. Specify which type your \fI--key\fP provided
-private key is. DER, PEM, and ENG are supported. If not specified, PEM is
-assumed.
+(TLS) Private key file type. Specify which type your \fI--key\fP provided private key
+is. DER, PEM, and ENG are supported. If not specified, PEM is assumed.
+
+If this option is used several times, the last one will be used.
+.IP "--key <key>"
+(TLS SSH) Private key file name. Allows you to provide your private key in this separate
+file. For SSH, if not specified, curl tries the following candidates in order:
+'~/.ssh/id_rsa', '~/.ssh/id_dsa', './id_rsa', './id_dsa'.
 
 If this option is used several times, the last one will be used.
 .IP "--krb <level>"
-(FTP) Enable Kerberos authentication and use. The level must be entered and
-should be one of 'clear', 'safe', 'confidential', or 'private'. Should you use
-a level that is not one of these, 'private' will instead be used.
+(FTP) Enable Kerberos authentication and use. The level must be entered and should
+be one of 'clear', 'safe', 'confidential', or 'private'. Should you use a
+level that is not one of these, 'private' will instead be used.
+
+If this option is used several times, the last one will be used.
+
+\fI--krb\fP requires that the underlying libcurl was built to support Kerberos.
+.IP "--libcurl <file>"
+Append this option to any ordinary curl command line, and you will get a
+libcurl-using C source code written to the file that does the equivalent
+of what your command-line operation does!
 
-This option requires a library built with kerberos4 support. This is not
-very common. Use \fI-V, --version\fP to see if your curl supports it.
+If this option is used several times, the last given file name will be
+used.
+
+Added in 7.16.1.
+.IP "--limit-rate <speed>"
+Specify the maximum transfer rate you want curl to use - for both downloads
+and uploads. This feature is useful if you have a limited pipe and you'd like
+your transfer not to use your entire bandwidth. To make it slower than it
+otherwise would be.
+
+The given speed is measured in bytes/second, unless a suffix is appended.
+Appending 'k' or 'K' will count the number as kilobytes, 'm' or M' makes it
+megabytes, while 'g' or 'G' makes it gigabytes. Examples: 200K, 3m and 1G.
+
+If you also use the \fI-Y, --speed-limit\fP option, that option will take precedence and
+might cripple the rate-limiting slightly, to help keeping the speed-limit
+logic working.
 
 If this option is used several times, the last one will be used.
-.IP "--krb4 <level>"
-(FTP) This is the former name for \fI--krb\fP. Do not use.
 .IP "-l, --list-only"
-(FTP)
+(FTP POP3) (FTP)
 When listing an FTP directory, this switch forces a name-only view. This is
 especially useful if the user wants to machine-parse the contents of an FTP
 directory since the normal directory view doesn't use a standard look or
 format. When used like this, the option causes a NLST command to be sent to
 the server instead of LIST.
 
@@ -982,150 +1013,168 @@
 
 (POP3)
 When retrieving a specific email from POP3, this switch forces a LIST command
 to be performed instead of RETR. This is particularly useful if the user wants
 to see if a specific message id exists on the server and what size it is.
 
-Note: When combined with \fI-X, --request <command>\fP, this option can be used
-to send an UIDL command instead, so the user may use the email's unique
-identifier rather than it's message id to make the request. (Added in 7.21.5)
+Note: When combined with \fI-X, --request\fP, this option can be used to send an UIDL
+command instead, so the user may use the email's unique identifier rather than
+it's message id to make the request.
+
+Added in 7.21.5.
+.IP "--local-port <num/range>"
+Set a preferred single number or range (FROM-TO) of local port numbers to use
+for the connection(s).  Note that port numbers by nature are a scarce resource
+that will be busy at times so setting this range to something too narrow might
+cause unnecessary connection setup failures.
+
+Added in 7.15.2.
+.IP "--location-trusted"
+(HTTP) Like \fI-L, --location\fP, but will allow sending the name + password to all hosts that
+the site may redirect to. This may or may not introduce a security breach if
+the site redirects you to a site to which you'll send your authentication info
+(which is plaintext in the case of HTTP Basic authentication).
+
+See also \fI-u, --user\fP.
 .IP "-L, --location"
-(HTTP/HTTPS) If the server reports that the requested page has moved to a
-different location (indicated with a Location: header and a 3XX response code),
-this option will make curl redo the request on the new place. If used together
-with \fI-i, --include\fP or \fI-I, --head\fP, headers from all requested pages
-will be shown. When authentication is used, curl only sends its credentials to
-the initial host. If a redirect takes curl to a different host, it won't be
-able to intercept the user+password. See also \fI--location-trusted\fP on how
-to change this. You can limit the amount of redirects to follow by using the
+(HTTP) If the server reports that the requested page has moved to a different
+location (indicated with a Location: header and a 3XX response code), this
+option will make curl redo the request on the new place. If used together with
+\fI-i, --include\fP or \fI-I, --head\fP, headers from all requested pages will be shown. When
+authentication is used, curl only sends its credentials to the initial
+host. If a redirect takes curl to a different host, it won't be able to
+intercept the user+password. See also \fI--location-trusted\fP on how to change
+this. You can limit the amount of redirects to follow by using the
 \fI--max-redirs\fP option.
 
 When curl follows a redirect and the request is not a plain GET (for example
 POST or PUT), it will do the following request with a GET if the HTTP response
 was 301, 302, or 303. If the response code was any other 3xx code, curl will
 re-send the following request using the same unmodified method.
 
 You can tell curl to not change the non-GET request method to GET after a 30x
-response by using the dedicated options for that: \fI--post301\fP,
-\fI--post302\fP and \fI--post303\fP.
-.IP "--libcurl <file>"
-Append this option to any ordinary curl command line, and you will get a
-libcurl-using C source code written to the file that does the equivalent
-of what your command-line operation does!
-
-If this option is used several times, the last given file name will be
-used. (Added in 7.16.1)
-.IP "--limit-rate <speed>"
-Specify the maximum transfer rate you want curl to use - for both downloads
-and uploads. This feature is useful if you have a limited pipe and you'd like
-your transfer not to use your entire bandwidth. To make it slower than it
-otherwise would be.
-
-The given speed is measured in bytes/second, unless a suffix is appended.
-Appending 'k' or 'K' will count the number as kilobytes, 'm' or M' makes it
-megabytes, while 'g' or 'G' makes it gigabytes. Examples: 200K, 3m and 1G.
-
-If you also use the \fI-Y, --speed-limit\fP option, that option will take
-precedence and might cripple the rate-limiting slightly, to help keeping the
-speed-limit logic working.
-
-If this option is used several times, the last one will be used.
-.IP "--local-port <num>[-num]"
-Set a preferred number or range of local port numbers to use for the
-connection(s).  Note that port numbers by nature are a scarce resource that
-will be busy at times so setting this range to something too narrow might
-cause unnecessary connection setup failures. (Added in 7.15.2)
-.IP "--location-trusted"
-(HTTP/HTTPS) Like \fI-L, --location\fP, but will allow sending the name +
-password to all hosts that the site may redirect to. This may or may not
-introduce a security breach if the site redirects you to a site to which
-you'll send your authentication info (which is plaintext in the case of HTTP
-Basic authentication).
-.IP "-m, --max-time <seconds>"
-Maximum time in seconds that you allow the whole operation to take.  This is
-useful for preventing your batch jobs from hanging for hours due to slow
-networks or links going down.  Since 7.32.0, this option accepts decimal
-values, but the actual timeout will decrease in accuracy as the specified
-timeout increases in decimal precision.  See also the \fI--connect-timeout\fP
-option.
-
-If this option is used several times, the last one will be used.
+response by using the dedicated options for that: \fI--post301\fP, \fI--post302\fP and
+\fI--post303\fP.
 .IP "--login-options <options>"
-Specify the login options to use during server authentication.
+(IMAP POP3 SMTP) Specify the login options to use during server authentication.
 
 You can use the login options to specify protocol specific options that may
 be used during authentication. At present only IMAP, POP3 and SMTP support
 login options. For more information about the login options please see
-RFC 2384, RFC 5092 and IETF draft draft-earhart-url-smtp-00.txt (Added in
-7.34.0).
+RFC 2384, RFC 5092 and IETF draft draft-earhart-url-smtp-00.txt
 
 If this option is used several times, the last one will be used.
+
+Added in 7.34.0.
 .IP "--mail-auth <address>"
-(SMTP) Specify a single address. This will be used to specify the
-authentication address (identity) of a submitted message that is being relayed
-to another server.
+(SMTP) Specify a single address. This will be used to specify the authentication
+address (identity) of a submitted message that is being relayed to another
+server.
 
-(Added in 7.25.0)
+See also \fI--mail-rcpt\fP and \fI--mail-from\fP. Added in 7.25.0.
 .IP "--mail-from <address>"
 (SMTP) Specify a single address that the given mail should get sent from.
 
-(Added in 7.20.0)
-.IP "--max-filesize <bytes>"
-Specify the maximum size (in bytes) of a file to download. If the file
-requested is larger than this value, the transfer will not start and curl will
-return with exit code 63.
-
-\fBNOTE:\fP The file size is not always known prior to download, and for such
-files this option has no effect even if the file transfer ends up being larger
-than this given limit. This concerns both FTP and HTTP transfers.
+See also \fI--mail-rcpt\fP and \fI--mail-auth\fP. Added in 7.20.0.
 .IP "--mail-rcpt <address>"
 (SMTP) Specify a single address, user name or mailing list name. Repeat this
 option several times to send to multiple recipients.
 
 When performing a mail transfer, the recipient should specify a valid email
-address to send the mail to. (Added in 7.20.0)
+address to send the mail to.
 
 When performing an address verification (VRFY command), the recipient should be
 specified as the user name or user name and domain (as per Section 3.5 of
 RFC5321). (Added in 7.34.0)
 
 When performing a mailing list expand (EXPN command), the recipient should be
 specified using the mailing list name, such as "Friends" or "London-Office".
 (Added in 7.34.0)
+
+Added in 7.20.0.
+.IP "-M, --manual"
+Manual. Display the huge help text.
+.IP "--max-filesize <bytes>"
+Specify the maximum size (in bytes) of a file to download. If the file
+requested is larger than this value, the transfer will not start and curl will
+return with exit code 63.
+
+\fBNOTE:\fP The file size is not always known prior to download, and for such
+files this option has no effect even if the file transfer ends up being larger
+than this given limit. This concerns both FTP and HTTP transfers.
+
+See also \fI--limit-rate\fP.
 .IP "--max-redirs <num>"
-Set maximum number of redirection-followings allowed. If \fI-L, --location\fP
-is used, this option can be used to prevent curl from following redirections
-\&"in absurdum". By default, the limit is set to 50 redirections. Set this
-option to -1 to make it limitless.
+(HTTP) Set maximum number of redirection-followings allowed. When \fI-L, --location\fP is used,
+is used to prevent curl from following redirections \&"in absurdum". By
+default, the limit is set to 50 redirections. Set this option to -1 to make it
+unlimited.
 
 If this option is used several times, the last one will be used.
+.IP "-m, --max-time <time>"
+Maximum time in seconds that you allow the whole operation to take.  This is
+useful for preventing your batch jobs from hanging for hours due to slow
+networks or links going down.  Since 7.32.0, this option accepts decimal
+values, but the actual timeout will decrease in accuracy as the specified
+timeout increases in decimal precision.
+
+If this option is used several times, the last one will be used.
+
+See also \fI--connect-timeout\fP.
 .IP "--metalink"
 This option can tell curl to parse and process a given URI as Metalink file
 (both version 3 and 4 (RFC 5854) are supported) and make use of the mirrors
 listed within for failover if there are errors (such as the file or server not
 being available). It will also verify the hash of the file after the download
 completes. The Metalink file itself is downloaded and processed in memory and
 not stored in the local file system.
 
 Example to use a remote Metalink file:
 
-\fBcurl\fP --metalink http://www.example.com/example.metalink
+ curl --metalink http://www.example.com/example.metalink
+
+To use a Metalink file in the local file system, use FILE protocol (file://):
+
+ curl --metalink file://example.metalink
+
+Please note that if FILE protocol is disabled, there is no way to use a local
+Metalink file at the time of this writing. Also note that if \fI--metalink\fP and
+\fI-i, --include\fP are used together, --include will be ignored. This is because
+including headers in the response will break Metalink parser and if the
+headers are included in the file described in Metalink file, hash check will
+fail.
+
+
+\fI--metalink\fP requires that the underlying libcurl was built to support metalink. Added in 7.27.0.
+.IP "--negotiate"
+(HTTP) Enables Negotiate (SPNEGO) authentication.
+
+This option requires a library built with GSS-API or SSPI support. Use
+\fI-V, --version\fP to see if your curl supports GSS-API/SSPI or SPNEGO.
 
-To use a Metalink file in the local file system, use FILE protocol
-(file://):
+When using this option, you must also provide a fake \fI-u, --user\fP option to activate
+the authentication code properly. Sending a '-u :' is enough as the user name
+and password from the \fI-u, --user\fP option aren't actually used.
 
-\fBcurl\fP --metalink file://example.metalink
+If this option is used several times, only the first one is used.
+
+See also \fI--basic\fP and \fI--ntlm\fP and \fI--anyauth\fP and \fI--proxy-negotiate\fP.
+.IP "--netrc-file <filemame>"
+This option is similar to \fI-n, --netrc\fP, except that you provide the path (absolute
+or relative) to the netrc file that Curl should use.  You can only specify one
+netrc file per invocation. If several \fI--netrc-file\fP options are provided,
+the last one will be used.
 
-Please note that if FILE protocol is disabled, there is no way to use
-a local Metalink file at the time of this writing. Also note that if
-\fI--metalink\fP and \fI--include\fP are used together, \fI--include\fP will be
-ignored. This is because including headers in the response will break
-Metalink parser and if the headers are included in the file described
-in Metalink file, hash check will fail.
+It will abide by \fI--netrc-optional\fP if specified.
+
+This option overrides \fI-n, --netrc\fP. Added in 7.21.5.
+.IP "--netrc-optional"
+Very similar to \fI-n, --netrc\fP, but this option makes the .netrc usage \fBoptional\fP
+and not mandatory as the \fI-n, --netrc\fP option does.
 
-(Added in 7.27.0, if built against the libmetalink library.)
+See also \fI--netrc-file\fP. This option overrides \fI-n, --netrc\fP.
 .IP "-n, --netrc"
 Makes curl scan the \fI.netrc\fP (\fI_netrc\fP on Windows) file in the user's
 home directory for login name and password. This is typically used for FTP on
 Unix. If used with HTTP, curl will enable user authentication. See
 \fInetrc(5)\fP \fIftp(1)\fP for details on the file format. Curl will not
 complain if that file doesn't have the right permissions (it should not be
@@ -1134,113 +1183,111 @@
 
 A quick and very simple example of how to setup a \fI.netrc\fP to allow curl
 to FTP to the machine host.domain.com with user name \&'myself' and password
 \&'secret' should look similar to:
 
 .B "machine host.domain.com login myself password secret"
+.IP "-:, --next"
+Tells curl to use a separate operation for the following URL and associated
+options. This allows you to send several URL requests, each with their own
+specific options, for example, such as different user names or custom requests
+for each.
+
+\fI-:, --next\fP will reset all local options and only global ones will have their
+values survive over to the operation following the \fI-:, --next\fP instruction. Global
+options include \fI-v, --verbose\fP and \fI--fail-early\fP.
+
+For example, you can do both a GET and a POST in a single command line:
+
+ curl www1.example.com --next -d postthis www2.example.com
+
+Added in 7.36.0.
+.IP "--no-alpn"
+(HTTPS) Disable the ALPN TLS extension. ALPN is enabled by default if libcurl was built
+with an SSL library that supports ALPN. ALPN is used by a libcurl that supports
+HTTP/2 to negotiate HTTP/2 support with the server during https sessions.
+
+See also \fI--no-npn\fP and \fI--http2\fP. \fI--no-alpn\fP requires that the underlying libcurl was built to support TLS. Added in 7.36.0.
 .IP "-N, --no-buffer"
 Disables the buffering of the output stream. In normal work situations, curl
 will use a standard buffered output stream that will have the effect that it
 will output the data in chunks, not necessarily exactly when the data arrives.
 Using this option will disable that buffering.
 
 Note that this is the negated option name documented. You can thus use
-\fI--buffer\fP to enforce the buffering.
-.IP "--netrc-file"
-This option is similar to \fI--netrc\fP, except that you provide the path
-(absolute or relative) to the netrc file that Curl should use.
-You can only specify one netrc file per invocation. If several
-\fI--netrc-file\fP options are provided, only the \fBlast one\fP will be used.
-(Added in 7.21.5)
-
-This option overrides any use of \fI--netrc\fP as they are mutually exclusive.
-It will also abide by \fI--netrc-optional\fP if specified.
-
-.IP "--netrc-optional"
-Very similar to \fI--netrc\fP, but this option makes the .netrc usage
-\fBoptional\fP and not mandatory as the \fI--netrc\fP option does.
-
-.IP "--negotiate"
-(HTTP) Enables Negotiate (SPNEGO) authentication.
-
-If you want to enable Negotiate (SPNEGO) for proxy authentication, then use
-\fI--proxy-negotiate\fP.
-
-This option requires a library built with GSS-API or SSPI support. Use \fI-V,
---version\fP to see if your curl supports GSS-API/SSPI and SPNEGO.
-
-When using this option, you must also provide a fake \fI-u, --user\fP option to
-activate the authentication code properly. Sending a '-u :' is enough as the
-user name and password from the \fI-u\fP option aren't actually used.
-
-If this option is used several times, only the first one is used.
+--buffer to enforce the buffering.
 .IP "--no-keepalive"
-Disables the use of keepalive messages on the TCP connection, as by default
-curl enables them.
+Disables the use of keepalive messages on the TCP connection. curl otherwis
+enables them by default.
 
 Note that this is the negated option name documented. You can thus use
-\fI--keepalive\fP to enforce keepalive.
+--keepalive to enforce keepalive.
+.IP "--no-npn"
+(HTTPS) Disable the NPN TLS extension. NPN is enabled by default if libcurl was built
+with an SSL library that supports NPN. NPN is used by a libcurl that supports
+HTTP/2 to negotiate HTTP/2 support with the server during https sessions.
+
+See also \fI--no-alpn\fP and \fI--http2\fP. \fI--no-npn\fP requires that the underlying libcurl was built to support TLS. Added in 7.36.0.
 .IP "--no-sessionid"
-(SSL) Disable curl's use of SSL session-ID caching.  By default all transfers
-are done using the cache. Note that while nothing should ever get hurt by
+(TLS) Disable curl's use of SSL session-ID caching.  By default all transfers are
+done using the cache. Note that while nothing should ever get hurt by
 attempting to reuse SSL session-IDs, there seem to be broken SSL
 implementations in the wild that may require you to disable this in order for
-you to succeed. (Added in 7.16.0)
+you to succeed.
 
 Note that this is the negated option name documented. You can thus use
-\fI--sessionid\fP to enforce session-ID caching.
+--sessionid to enforce session-ID caching.
+
+Added in 7.16.0.
 .IP "--noproxy <no-proxy-list>"
 Comma-separated list of hosts which do not use a proxy, if one is specified.
 The only wildcard is a single * character, which matches all hosts, and
 effectively disables the proxy. Each name in this list is matched as either
 a domain which contains the hostname, or the hostname itself. For example,
 local.com would match local.com, local.com:80, and www.local.com, but not
-www.notlocal.com.  (Added in 7.19.4).
-.IP "--connect-to <host:port:connect-to-host:connect-to-port>"
-For a request to the given "host:port" pair, connect to
-"connect-to-host:connect-to-port" instead.
-This is suitable to direct the request at a specific server, e.g. at a specific
-cluster node in a cluster of servers.
-This option is only used to establish the network connection. It does NOT
-affect the hostname/port that is used for TLS/SSL (e.g. SNI, certificate
-verification) or for the application protocols.
-"host" and "port" may be the empty string, meaning "any host/port".
-"connect-to-host" and "connect-to-port" may also be the empty string,
-meaning "use the request's original host/port".
-This option can be used many times to add many connect rules.
-(Added in 7.49.0).
+www.notlocal.com.
+
+Added in 7.19.4.
+.IP "--ntlm-wb"
+(HTTP) Enables NTLM much in the style \fI--ntlm\fP does, but hand over the authentication
+to the separate binary ntlmauth application that is executed when needed.
+
+See also \fI--ntlm\fP and \fI--proxy-ntlm\fP.
 .IP "--ntlm"
-(HTTP) Enables NTLM authentication. The NTLM authentication method was
-designed by Microsoft and is used by IIS web servers. It is a proprietary
-protocol, reverse-engineered by clever people and implemented in curl based
-on their efforts. This kind of behavior should not be endorsed, you should
-encourage everyone who uses NTLM to switch to a public and documented
-authentication method instead, such as Digest.
+(HTTP) Enables NTLM authentication. The NTLM authentication method was designed by
+Microsoft and is used by IIS web servers. It is a proprietary protocol,
+reverse-engineered by clever people and implemented in curl based on their
+efforts. This kind of behavior should not be endorsed, you should encourage
+everyone who uses NTLM to switch to a public and documented authentication
+method instead, such as Digest.
 
 If you want to enable NTLM for your proxy authentication, then use
 \fI--proxy-ntlm\fP.
 
-This option requires a library built with SSL support. Use
-\fI-V, --version\fP to see if your curl supports NTLM.
-
 If this option is used several times, only the first one is used.
-.IP "--ntlm-wb"
-(HTTP) Enables NTLM much in the style \fI--ntlm\fP does, but hand over the
-authentication to the separate binary ntlmauth application that is executed
-when needed.
+
+See also \fI--proxy-ntlm\fP. \fI--ntlm\fP requires that the underlying libcurl was built to support TLS. This option overrides \fI--basic\fP and \fI--negotiated\fP and \fI--digest\fP and \fI--anyauth\fP.
+.IP "--oauth2-bearer"
+(IMAP POP3 SMTP) Specify the Bearer Token for OAUTH 2.0 server authentication. The Bearer Token
+is used in conjunction with the user name which can be specified as part of
+the \fI--url\fP or \fI-u, --user\fP options.
+
+The Bearer Token and user name are formatted according to RFC 6750.
+
+If this option is used several times, the last one will be used.
 .IP "-o, --output <file>"
 Write output to <file> instead of stdout. If you are using {} or [] to fetch
 multiple documents, you can use '#' followed by a number in the <file>
 specifier. That variable will be replaced with the current string for the URL
 being fetched. Like in:
 
-  curl http://{one,two}.example.com -o "file_#1.txt"
+ curl http://{one,two}.example.com -o "file_#1.txt"
 
 or use several variables like:
 
-  curl http://{site,host}.host[1-5].com -o "#1_#2"
+ curl http://{site,host}.host[1-5].com -o "#1_#2"
 
 You may use this option as many times as the number of URLs you have. For
 example, if you specify two URLs on the same command line, you can use it like
 this:
 
   curl -o aa example.com -o bb example.net
@@ -1251,121 +1298,129 @@
 
   curl example.com example.net -o aa -o bb
 
 See also the \fI--create-dirs\fP option to create the local directories
 dynamically. Specifying the output as '-' (a single dash) will force the
 output to be done to stdout.
-.IP "-O, --remote-name"
-Write output to a local file named like the remote file we get. (Only the file
-part of the remote file is used, the path is cut off.)
 
-The file will be saved in the current working directory. If you want the file
-saved in a different directory, make sure you change the current working
-directory before invoking curl with this option.
-
-The remote file name to use for saving is extracted from the given URL, nothing
-else, and if it already exists it will be overwritten. If you want the server
-to be able to choose the file name refer to \fI-J, --remote-header-name\fP
-which can be used in addition to this option. If the server chooses a file name
-and that name already exists it will not be overwritten.
-
-There is no URL decoding done on the file name. If it has %20 or other URL
-encoded parts of the name, they will end up as-is as file name.
-
-You may use this option as many times as the number of URLs you have.
-.IP "--oauth2-bearer"
-(IMAP, POP3, SMTP)
-Specify the Bearer Token for OAUTH 2.0 server authentication. The Bearer Token
-is used in conjunction with the user name which can be specified as part of the
-\fI--url\fP or \fI-u, --user\fP options.
-
-The Bearer Token and user name are formatted according to RFC 6750.
-
-If this option is used several times, the last one will be used.
-.IP "--proxy-header <header>"
-(HTTP) Extra header to include in the request when sending HTTP to a
-proxy. You may specify any number of extra headers. This is the equivalent
-option to \fI-H, --header\fP but is for proxy communication only like in
-CONNECT requests when you want a separate header sent to the proxy to what is
-sent to the actual remote host.
-
-curl will make sure that each header you add/replace is sent with the proper
-end-of-line marker, you should thus \fBnot\fP add that as a part of the header
-content: do not add newlines or carriage returns, they will only mess things
-up for you.
-
-Headers specified with this option will not be included in requests that curl
-knows will not be sent to a proxy.
-
-This option can be used multiple times to add/replace/remove multiple headers.
-
-(Added in 7.37.0)
-.IP "-p, --proxytunnel"
-When an HTTP proxy is used (\fI-x, --proxy\fP), this option will cause non-HTTP
-protocols to attempt to tunnel through the proxy instead of merely using it to
-do HTTP-like operations. The tunnel approach is made with the HTTP proxy
-CONNECT request and requires that the proxy allows direct connect to the
-remote port number curl wants to tunnel through to.
-.IP "-P, --ftp-port <address>"
-(FTP) Reverses the default initiator/listener roles when connecting with
-FTP. This switch makes curl use active mode. In practice, curl then tells the
-server to connect back to the client's specified address and port, while
-passive mode asks the server to setup an IP address and port for it to connect
-to. <address> should be one of:
-.RS
-.IP interface
-i.e "eth0" to specify which interface's IP address you want to use (Unix only)
-.IP "IP address"
-i.e "192.168.10.1" to specify the exact IP address
-.IP "host name"
-i.e "my.host.domain" to specify the machine
-.IP "-"
-make curl pick the same IP address that is already used for the control
-connection
-.RE
-.IP
-If this option is used several times, the last one will be used. Disable the
-use of PORT with \fI--ftp-pasv\fP. Disable the attempt to use the EPRT command
-instead of PORT by using \fI--disable-eprt\fP. EPRT is really PORT++.
-
-Starting in 7.19.5, you can append \&":[start]-[end]\&" to the right of the
-address, to tell curl what TCP port range to use. That means you specify a
-port range, from a lower to a higher number. A single number works as well,
-but do note that it increases the risk of failure since the port may not be
-available.
+See also \fI-O, --remote-name\fP and \fI--remote-name-all\fP and \fI-J, --remote-header-name\fP.
 .IP "--pass <phrase>"
-(SSL/SSH) Passphrase for the private key
+(SSH TLS) Passphrase for the private key
 
 If this option is used several times, the last one will be used.
 .IP "--path-as-is"
 Tell curl to not handle sequences of /../ or /./ in the given URL
 path. Normally curl will squash or merge them according to standards but with
 this option set you tell it not to do that.
 
-(Added in 7.42.0)
+Added in 7.42.0.
+.IP "--pinnedpubkey <hashes>"
+(TLS) Tells curl to use the specified public key file (or hashes) to verify the
+peer. This can be a path to a file which contains a single public key in PEM
+or DER format, or any number of base64 encoded sha256 hashes preceded by
+\'sha256//\' and separated by \';\'
+
+When negotiating a TLS or SSL connection, the server sends a certificate
+indicating its identity. A public key is extracted from this certificate and
+if it does not exactly match the public key provided to this option, curl will
+abort the connection before sending or receiving any data.
+
+PEM/DER support:
+  7.39.0: OpenSSL, GnuTLS and GSKit
+  7.43.0: NSS and wolfSSL/CyaSSL
+  7.47.0: mbedtls
+  7.49.0: PolarSSL
+sha256 support:
+  7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.
+  7.47.0: mbedtls
+  7.49.0: PolarSSL
+Other SSL backends not supported.
+
+If this option is used several times, the last one will be used.
 .IP "--post301"
-(HTTP) Tells curl to respect RFC 7230/6.4.2 and not convert POST requests
-into GET requests when following a 301 redirection. The non-RFC behaviour is
-ubiquitous in web browsers, so curl does the conversion by default to maintain
+(HTTP) Tells curl to respect RFC 7231/6.4.2 and not convert POST requests into GET
+requests when following a 301 redirection. The non-RFC behaviour is ubiquitous
+in web browsers, so curl does the conversion by default to maintain
 consistency. However, a server may require a POST to remain a POST after such
-a redirection. This option is meaningful only when using \fI-L, --location\fP
-(Added in 7.17.1)
+a redirection. This option is meaningful only when using \fI-L, --location\fP.
+
+See also \fI--post302\fP and \fI--post303\fP and \fI-L, --location\fP. Added in 7.17.1.
 .IP "--post302"
-(HTTP) Tells curl to respect RFC 7230/6.4.3 and not convert POST requests
-into GET requests when following a 302 redirection. The non-RFC behaviour is
-ubiquitous in web browsers, so curl does the conversion by default to maintain
+(HTTP) Tells curl to respect RFC 7231/6.4.3 and not convert POST requests into GET
+requests when following a 302 redirection. The non-RFC behaviour is ubiquitous
+in web browsers, so curl does the conversion by default to maintain
 consistency. However, a server may require a POST to remain a POST after such
-a redirection. This option is meaningful only when using \fI-L, --location\fP
-(Added in 7.19.1)
+a redirection. This option is meaningful only when using \fI-L, --location\fP.
+
+See also \fI--post301\fP and \fI--post303\fP and \fI-L, --location\fP. Added in 7.19.1.
 .IP "--post303"
-(HTTP) Tells curl to respect RFC 7230/6.4.4 and not convert POST requests
-into GET requests when following a 303 redirection. The non-RFC behaviour is
-ubiquitous in web browsers, so curl does the conversion by default to maintain
+(HTTP) Tells curl to respect RFC 7231/6.4.4 and not convert POST requests into GET
+requests when following a 303 redirection. The non-RFC behaviour is ubiquitous
+in web browsers, so curl does the conversion by default to maintain
 consistency. However, a server may require a POST to remain a POST after such
-a redirection. This option is meaningful only when using \fI-L, --location\fP
-(Added in 7.26.0)
+a redirection. This option is meaningful only when using \fI-L, --location\fP.
+
+See also \fI--post302\fP and \fI--post301\fP and \fI-L, --location\fP. Added in 7.26.0.
+.IP "--preproxy [protocol://]host[:port]"
+Use the specified proxy before connecting to the ordinary proxy. Hence pre
+proxy. A pre proxy must be a SOCKS speaking proxy.
+
+The pre proxy string should be specified with a protocol:// prefix to specify
+alternative proxy protocols. Use socks4://, socks4a://, socks5:// or
+socks5h:// to request the specific SOCKS version to be used. No protocol
+specified will make curl default to SOCKS4.
+
+If the port number is not specified in the proxy string, it is assumed to be
+1080.
+
+User and password that might be provided in the proxy string are URL decoded
+by curl. This allows you to pass in special characters such as @ by using %40
+or pass in a colon with %3a.
+
+If this option is used several times, the last one will be used.
+
+Added in 7.52.0.
+.IP "-#, --progress-bar"
+Make curl display transfer progress as a simple progress bar instead of the
+standard, more informational, meter.
+
+This progress bar draws a single line of '#' characters across the screen and
+shows a percentage if the transfer size is known. For transfers without a
+known size, it will instead output one '#' character for every 1024 bytes
+transferred.
+.IP "--proto-default <protocol>"
+Tells curl to use \fIprotocol\fP for any URL missing a scheme name.
+
+Example:
+
+ curl --proto-default https ftp.mozilla.org
+
+An unknown or unsupported protocol causes error
+\fICURLE_UNSUPPORTED_PROTOCOL\fP (1).
+
+This option does not change the default proxy protocol (http).
+
+Without this option curl would make a guess based on the host, see \fI--url\fP for
+details.
+
+Added in 7.45.0.
+.IP "--proto-redir <protocols>"
+Tells curl to limit what protocols it may use on redirect. Protocols denied by
+\fI--proto\fP are not overridden by this option. See --proto for how protocols are
+represented.
+
+Example, allow only HTTP and HTTPS on redirect:
+
+ curl --proto-redir -all,http,https http://example.com
+
+By default curl will allow all protocols on redirect except several disabled
+for security reasons: Since 7.19.4 FILE and SCP are disabled, and since 7.40.0
+SMB and SMBS are also disabled. Specifying \fIall\fP or \fI+all\fP enables all
+protocols on redirect, including those disabled for security.
+
+Added in 7.20.2.
 .IP "--proto <protocols>"
 Tells curl to limit what protocols it may use in the transfer. Protocols are
 evaluated left to right, are comma separated, and are each a protocol name or
 'all', optionally prefixed by zero or more modifiers. Available modifiers are:
 .RS
 .TP 3
@@ -1382,125 +1437,216 @@
 list.
 .RE
 .IP
 For example:
 .RS
 .TP 15
-.B --proto -ftps
+.B \fI--proto\fP -ftps
 uses the default protocols, but disables ftps
 .TP
-.B  --proto -all,https,+http
+.B  \fI--proto\fP -all,https,+http
 only enables http and https
 .TP
-.B --proto =http,https
+.B \fI--proto\fP =http,https
 also only enables http and https
 .RE
-.IP
+
 Unknown protocols produce a warning. This allows scripts to safely rely on
 being able to disable potentially dangerous protocols, without relying upon
 support for that protocol being built into curl to avoid an error.
 
 This option can be used multiple times, in which case the effect is the same
 as concatenating the protocols into one instance of the option.
 
-(Added in 7.20.2)
-.IP "--proto-default <protocol>"
-Tells curl to use \fIprotocol\fP for any URL missing a scheme name.
-
-Example:
-
-.RS
-.IP "--proto-default https ftp.mozilla.org"
-https://ftp.mozilla.org
-.RE
+See also \fI--proto-redir\fP and \fI--proto-default\fP. Added in 7.20.2.
+.IP "--proxy-anyauth"
+Tells curl to pick a suitable authentication method when communicating with
+the given HTTP proxy. This might cause an extra request/response round-trip.
 
-An unknown or unsupported protocol causes error
-\fICURLE_UNSUPPORTED_PROTOCOL\fP.
+See also \fI-x, --proxy\fP and \fI--proxy-basic\fP and \fI--proxy-digest\fP. Added in 7.13.2.
+.IP "--proxy-basic"
+Tells curl to use HTTP Basic authentication when communicating with the given
+proxy. Use \fI--basic\fP for enabling HTTP Basic with a remote host. Basic is the
+default authentication method curl uses with proxies.
 
-This option does not change the default proxy protocol (http).
+See also \fI-x, --proxy\fP and \fI--proxy-anyauth\fP and \fI--proxy-digest\fP.
+.IP "--proxy-cacert <file>"
+Same as \fI--cacert\fP but used in HTTPS proxy context.
+
+See also \fI--proxy-capath\fP and \fI--cacert\fP and \fI--capath\fP and \fI-x, --proxy\fP. Added in 7.52.0.
+.IP "--proxy-capath <dir>"
+Same as \fI--capath\fP but used in HTTPS proxy context.
+
+See also \fI--proxy-cacert\fP and \fI-x, --proxy\fP and \fI--capath\fP. Added in 7.52.0.
+.IP "--proxy-cert-type <type>"
+Same as \fI--cert-type\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-cert <cert[:passwd]>"
+Same as \fI-E, --cert\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-ciphers <list>"
+Same as \fI--ciphers\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-crlfile <file>"
+Same as \fI--crlfile\fP but used in HTTPS proxy context.
 
-Without this option curl would make a guess based on the host, see \fI--url\fP
-for details.
+Added in 7.52.0.
+.IP "--proxy-digest"
+Tells curl to use HTTP Digest authentication when communicating with the given
+proxy. Use \fI--digest\fP for enabling HTTP Digest with a remote host.
 
-(Added in 7.45.0)
-.IP "--proto-redir <protocols>"
-Tells curl to limit what protocols it may use on redirect. Protocols denied by
---proto are not overridden by this option. See \fI--proto\fP for how protocols
-are represented.
+See also \fI-x, --proxy\fP and \fI--proxy-anyauth\fP and \fI--proxy-basic\fP.
+.IP "--proxy-header <header>"
+(HTTP) Extra header to include in the request when sending HTTP to a proxy. You may
+specify any number of extra headers. This is the equivalent option to \fI-H, --header\fP
+but is for proxy communication only like in CONNECT requests when you want a
+separate header sent to the proxy to what is sent to the actual remote host.
 
-Example:
+curl will make sure that each header you add/replace is sent with the proper
+end-of-line marker, you should thus \fBnot\fP add that as a part of the header
+content: do not add newlines or carriage returns, they will only mess things
+up for you.
 
-.RS
-.IP "--proto-redir -all,http,https"
-Allow only HTTP and HTTPS on redirect.
-.RE
+Headers specified with this option will not be included in requests that curl
+knows will not be sent to a proxy.
 
-By default curl will allow all protocols on redirect except several disabled
-for security reasons: Since 7.19.4 FILE and SCP are disabled, and since 7.40.0
-SMB and SMBS are also disabled. Specifying \fIall\fP or \fI+all\fP enables all
-protocols on redirect, including those disabled for security.
+This option can be used multiple times to add/replace/remove multiple headers.
 
-(Added in 7.20.2)
-.IP "--proxy-anyauth"
-Tells curl to pick a suitable authentication method when communicating with
-the given proxy. This might cause an extra request/response round-trip. (Added
-in 7.13.2)
-.IP "--proxy-basic"
-Tells curl to use HTTP Basic authentication when communicating with the given
-proxy. Use \fI--basic\fP for enabling HTTP Basic with a remote host. Basic is
-the default authentication method curl uses with proxies.
-.IP "--proxy-digest"
-Tells curl to use HTTP Digest authentication when communicating with the given
-proxy. Use \fI--digest\fP for enabling HTTP Digest with a remote host.
+Added in 7.37.0.
+.IP "--proxy-insecure"
+Same as \fI-k, --insecure\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-key-type <type>"
+Same as \fI--key-type\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-key <key>"
+Same as \fI--key\fP but used in HTTPS proxy context.
 .IP "--proxy-negotiate"
 Tells curl to use HTTP Negotiate (SPNEGO) authentication when communicating
 with the given proxy. Use \fI--negotiate\fP for enabling HTTP Negotiate (SPNEGO)
-with a remote host. (Added in 7.17.1)
+with a remote host.
+
+See also \fI--proxy-anyauth\fP and \fI--proxy-basic\fP. Added in 7.17.1.
 .IP "--proxy-ntlm"
 Tells curl to use HTTP NTLM authentication when communicating with the given
 proxy. Use \fI--ntlm\fP for enabling NTLM with a remote host.
-.IP "--proxy-service-name <servicename>"
+
+See also \fI--proxy-negotiate\fP and \fI--proxy-anyauth\fP.
+.IP "--proxy-pass <phrase>"
+Same as \fI--pass\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-service-name <name>"
 This option allows you to change the service name for proxy negotiation.
 
-Examples: --proxy-negotiate proxy-name \fI--proxy-service-name\fP sockd would use
-sockd/proxy-name.  (Added in 7.43.0).
-.IP "--proxy1.0 <proxyhost[:port]>"
+Added in 7.43.0.
+.IP "--proxy-ssl-allow-beast"
+Same as \fI--ssl-allow-beast\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-tlsauthtype <type>"
+Same as \fI--tlsauthtype\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-tlspassword <string>"
+Same as \fI--tlspassword\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-tlsuser <name>"
+Same as \fI--tlsuser\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "--proxy-tlsv1"
+Same as \fI-1, --tlsv1\fP but used in HTTPS proxy context.
+
+Added in 7.52.0.
+.IP "-U, --proxy-user <user:password>"
+Specify the user name and password to use for proxy authentication.
+
+If you use a Windows SSPI-enabled curl binary and do either Negotiate or NTLM
+authentication then you can tell curl to select the user name and password
+from your environment by specifying a single colon with this option: "-U :".
+
+If this option is used several times, the last one will be used.
+.IP "-x, --proxy [protocol://]host[:port]"
+Use the specified proxy.
+
+The proxy string can be specified with a protocol:// prefix to specify
+alternative proxy protocols. Use socks4://, socks4a://, socks5:// or
+socks5h:// to request the specific SOCKS version to be used. No protocol
+specified, http:// and all others will be treated as HTTP proxies. (The
+protocol support was added in curl 7.21.7)
+
+If the port number is not specified in the proxy string, it is assumed to be
+1080.
+
+This option overrides existing environment variables that set the proxy to
+use. If there's an environment variable setting a proxy, you can set proxy to
+\&"" to override it.
+
+All operations that are performed over an HTTP proxy will transparently be
+converted to HTTP. It means that certain protocol specific operations might
+not be available. This is not the case if you can tunnel through the proxy, as
+one with the \fI-p, --proxytunnel\fP option.
+
+User and password that might be provided in the proxy string are URL decoded
+by curl. This allows you to pass in special characters such as @ by using %40
+or pass in a colon with %3a.
+
+The proxy host can be specified the exact same way as the proxy environment
+variables, including the protocol prefix (http://) and the embedded user +
+password.
+
+If this option is used several times, the last one will be used.
+.IP "--proxy1.0 <host[:port]>"
 Use the specified HTTP 1.0 proxy. If the port number is not specified, it is
 assumed at port 1080.
 
-The only difference between this and the HTTP proxy option (\fI-x, --proxy\fP),
-is that attempts to use CONNECT through the proxy will specify an HTTP 1.0
-protocol instead of the default HTTP 1.1.
+The only difference between this and the HTTP proxy option \fI-x, --proxy\fP, is that
+attempts to use CONNECT through the proxy will specify an HTTP 1.0 protocol
+instead of the default HTTP 1.1.
+.IP "-p, --proxytunnel"
+When an HTTP proxy is used \fI-x, --proxy\fP, this option will cause non-HTTP protocols
+to attempt to tunnel through the proxy instead of merely using it to do
+HTTP-like operations. The tunnel approach is made with the HTTP proxy CONNECT
+request and requires that the proxy allows direct connect to the remote port
+number curl wants to tunnel through to.
+
+See also \fI-x, --proxy\fP.
 .IP "--pubkey <key>"
-(SSH) Public key file name. Allows you to provide your public key in this
-separate file.
+(SFTP SCP) Public key file name. Allows you to provide your public key in this separate
+file.
 
 If this option is used several times, the last one will be used.
 
 (As of 7.39.0, curl attempts to automatically extract the public key from the
 private key file, so passing this option is generally not required. Note that
 this public key extraction requires libcurl to be linked against a copy of
 libssh2 1.2.8 or higher that is itself linked against OpenSSL.)
-.IP "-q, --disable"
-If used as the first parameter on the command line, the \fIcurlrc\fP config
-file will not be read and used. See the \fI-K, --config\fP for details on the
-default config file search path.
-.IP "-Q, --quote <command>"
-(FTP/SFTP) Send an arbitrary command to the remote FTP or SFTP server. Quote
-commands are sent BEFORE the transfer takes place (just after the initial PWD
-command in an FTP transfer, to be exact). To make commands take place after a
-successful transfer, prefix them with a dash '-'.  To make commands be sent
-after curl has changed the working directory, just before the transfer
-command(s), prefix the command with a '+' (this is only supported for
-FTP). You may specify any number of commands. If the server returns failure
-for one of the commands, the entire operation will be aborted. You must send
-syntactically correct FTP commands as RFC 959 defines to FTP servers, or one
-of the commands listed below to SFTP servers.  This option can be used
-multiple times. When speaking to an FTP server, prefix the command with an
-asterisk (*) to make curl continue even if the command fails as by default
-curl will stop at first failure.
+.IP "-Q, --quote"
+(FTP SFTP) 
+Send an arbitrary command to the remote FTP or SFTP server. Quote commands are
+sent BEFORE the transfer takes place (just after the initial PWD command in an
+FTP transfer, to be exact). To make commands take place after a successful
+transfer, prefix them with a dash '-'.  To make commands be sent after curl
+has changed the working directory, just before the transfer command(s), prefix
+the command with a '+' (this is only supported for FTP). You may specify any
+number of commands.
+
+If the server returns failure for one of the commands, the entire operation
+will be aborted. You must send syntactically correct FTP commands as RFC 959
+defines to FTP servers, or one of the commands listed below to SFTP servers.
+
+This option can be used multiple times. When speaking to an FTP server, prefix
+the command with an asterisk (*) to make curl continue even if the command
+fails as by default curl will stop at first failure.
 
 SFTP is a binary protocol. Unlike for FTP, curl interprets SFTP quote commands
 itself before sending them to the server.  File names may be quoted
 shell-style to embed spaces or special characters.  Following is the list of
 all supported SFTP quote commands:
 .RS
@@ -1530,16 +1676,19 @@
 .IP "rmdir directory"
 The rmdir command removes the directory entry specified by the directory
 operand, provided it is empty.
 .IP "symlink source_file target_file"
 See ln.
 .RE
+.IP "--random-file <file>"
+Specify the path name to file containing what will be considered as random
+data. The data may be used to seed the random engine for SSL connections.  See
+also the \fI--egd-file\fP option.
 .IP "-r, --range <range>"
-(HTTP/FTP/SFTP/FILE) Retrieve a byte range (i.e a partial document) from a
-HTTP/1.1, FTP or SFTP server or a local FILE. Ranges can be specified
-in a number of ways.
+(HTTP FTP SFTP FILE) Retrieve a byte range (i.e a partial document) from a HTTP/1.1, FTP or SFTP
+server or a local FILE. Ranges can be specified in a number of ways.
 .RS
 .TP 10
 .B 0-499
 specifies the first 500 bytes
 .TP
 .B 500-999
@@ -1572,290 +1721,489 @@
 
 FTP and SFTP range downloads only support the simple 'start-stop' syntax
 (optionally with one of the numbers omitted). FTP use depends on the extended
 FTP command SIZE.
 
 If this option is used several times, the last one will be used.
-.IP "-R, --remote-time"
-When used, this will make curl attempt to figure out the timestamp of the
-remote file, and if that is available make the local file get that same
-timestamp.
-.IP "--random-file <file>"
-(SSL) Specify the path name to file containing what will be considered as
-random data. The data is used to seed the random engine for SSL connections.
-See also the \fI--egd-file\fP option.
 .IP "--raw"
 (HTTP) When used, it disables all internal HTTP decoding of content or transfer
-encodings and instead makes them passed on unaltered, raw. (Added in 7.16.2)
+encodings and instead makes them passed on unaltered, raw.
+
+Added in 7.16.2.
+.IP "-e, --referer <URL>"
+(HTTP) Sends the "Referrer Page" information to the HTTP server. This can also be set
+with the \fI-H, --header\fP flag of course.  When used with \fI-L, --location\fP you can append
+";auto" to the \fI-e, --referer\fP URL to make curl automatically set the previous URL
+when it follows a Location: header. The \&";auto" string can be used alone,
+even if you don't set an initial \fI-e, --referer\fP.
+
+If this option is used several times, the last one will be used.
+
+See also \fI-A, --user-agent\fP and \fI-H, --header\fP.
+.IP "-J, --remote-header-name"
+(HTTP) This option tells the \fI-O, --remote-name\fP option to use the server-specified
+Content-Disposition filename instead of extracting a filename from the URL.
+
+If the server specifies a file name and a file with that name already exists
+in the current working directory it will not be overwritten and an error will
+occur. If the server doesn't specify a file name then this option has no
+effect.
+
+There's no attempt to decode %-sequences (yet) in the provided file name, so
+this option may provide you with rather unexpected file names.
+
+\fBWARNING\fP: Exercise judicious use of this option, especially on Windows. A
+rogue server could send you the name of a DLL or other file that could possibly
+be loaded automatically by Windows or some third party software.
 .IP "--remote-name-all"
 This option changes the default action for all given URLs to be dealt with as
-if \fI-O, --remote-name\fP were used for each one. So if you want to disable
-that for a specific URL after \fI--remote-name-all\fP has been used, you must
-use "-o -" or \fI--no-remote-name\fP. (Added in 7.19.0)
+if \fI-O, --remote-name\fP were used for each one. So if you want to disable that for a
+specific URL after \fI--remote-name-all\fP has been used, you must use "-o -" or
+--no-remote-name.
+
+Added in 7.19.0.
+.IP "-O, --remote-name"
+Write output to a local file named like the remote file we get. (Only the file
+part of the remote file is used, the path is cut off.)
+
+The file will be saved in the current working directory. If you want the file
+saved in a different directory, make sure you change the current working
+directory before invoking curl with this option.
+
+The remote file name to use for saving is extracted from the given URL,
+nothing else, and if it already exists it will be overwritten. If you want the
+server to be able to choose the file name refer to \fI-J, --remote-header-name\fP which
+can be used in addition to this option. If the server chooses a file name and
+that name already exists it will not be overwritten.
+
+There is no URL decoding done on the file name. If it has %20 or other URL
+encoded parts of the name, they will end up as-is as file name.
+
+You may use this option as many times as the number of URLs you have.
+.IP "-R, --remote-time"
+When used, this will make curl attempt to figure out the timestamp of the
+remote file, and if that is available make the local file get that same
+timestamp.
+.IP "-X, --request <command>"
+(HTTP) Specifies a custom request method to use when communicating with the
+HTTP server.  The specified request method will be used instead of the method
+otherwise used (which defaults to GET). Read the HTTP 1.1 specification for
+details and explanations. Common additional HTTP requests include PUT and
+DELETE, but related technologies like WebDAV offers PROPFIND, COPY, MOVE and
+more.
+
+Normally you don't need this option. All sorts of GET, HEAD, POST and PUT
+requests are rather invoked by using dedicated command line options.
+
+This option only changes the actual word used in the HTTP request, it does not
+alter the way curl behaves. So for example if you want to make a proper HEAD
+request, using -X HEAD will not suffice. You need to use the \fI-I, --head\fP option.
+
+The method string you set with \fI-X, --request\fP will be used for all requests, which
+if you for example use \fI-L, --location\fP may cause unintended side-effects when curl
+doesn't change request method according to the HTTP 30x response codes - and
+similar.
+
+(FTP)
+Specifies a custom FTP command to use instead of LIST when doing file lists
+with FTP.
+
+(POP3)
+Specifies a custom POP3 command to use instead of LIST or RETR. (Added in
+7.26.0)
+
+(IMAP)
+Specifies a custom IMAP command to use instead of LIST. (Added in 7.30.0)
+
+(SMTP)
+Specifies a custom SMTP command to use instead of HELP or VRFY. (Added in 7.34.0)
+
+If this option is used several times, the last one will be used.
 .IP "--resolve <host:port:address>"
 Provide a custom address for a specific host and port pair. Using this, you
 can make the curl requests(s) use a specified address and prevent the
 otherwise normally resolved address to be used. Consider it a sort of
 /etc/hosts alternative provided on the command line. The port number should be
 the number used for the specific protocol the host will be used for. It means
 you need several entries if you want to provide address for the same host but
 different ports.
 
-The provided address set by this option will be used even if \fI-4, --ipv4\fP
-or \fI-6, --ipv6\fP is set to make curl use another IP version.
+The provided address set by this option will be used even if \fI-4, --ipv4\fP or \fI-6, --ipv6\fP
+is set to make curl use another IP version.
 
 This option can be used many times to add many host names to resolve.
 
-(Added in 7.21.3)
-.IP "--retry <num>"
-If a transient error is returned when curl tries to perform a transfer, it
-will retry this number of times before giving up. Setting the number to 0
-makes curl do no retries (which is the default). Transient error means either:
-a timeout, an FTP 4xx response code or an HTTP 5xx response code.
+Added in 7.21.3.
+.IP "--retry-connrefused"
+In addition to the other conditions, consider ECONNREFUSED as a transient
+error too for \fI--retry\fP. This option is used together with --retry.
 
-When curl is about to retry a transfer, it will first wait one second and then
-for all forthcoming retries it will double the waiting time until it reaches
-10 minutes which then will be the delay between the rest of the retries.  By
-using \fI--retry-delay\fP you disable this exponential backoff algorithm. See
-also \fI--retry-max-time\fP to limit the total time allowed for
-retries. (Added in 7.12.3)
-
-If this option is used several times, the last one will be used.
+Added in 7.52.0.
 .IP "--retry-delay <seconds>"
 Make curl sleep this amount of time before each retry when a transfer has
 failed with a transient error (it changes the default backoff time algorithm
 between retries). This option is only interesting if \fI--retry\fP is also
 used. Setting this delay to zero will make curl use the default backoff time.
-(Added in 7.12.3)
 
 If this option is used several times, the last one will be used.
+
+Added in 7.12.3.
 .IP "--retry-max-time <seconds>"
 The retry timer is reset before the first transfer attempt. Retries will be
-done as usual (see \fI--retry\fP) as long as the timer hasn't reached this
-given limit. Notice that if the timer hasn't reached the limit, the request
-will be made and while performing, it may take longer than this given time
-period. To limit a single request\'s maximum time, use \fI-m, --max-time\fP.
-Set this option to zero to not timeout retries. (Added in 7.12.3)
+done as usual (see \fI--retry\fP) as long as the timer hasn't reached this given
+limit. Notice that if the timer hasn't reached the limit, the request will be
+made and while performing, it may take longer than this given time period. To
+limit a single request\'s maximum time, use \fI-m, --max-time\fP.  Set this option to
+zero to not timeout retries.
 
 If this option is used several times, the last one will be used.
-.IP "-s, --silent"
-Silent or quiet mode. Don't show progress meter or error messages.  Makes Curl
-mute. It will still output the data you ask for, potentially even to the
-terminal/stdout unless you redirect it.
+
+Added in 7.12.3.
+.IP "--retry <num>"
+If a transient error is returned when curl tries to perform a transfer, it
+will retry this number of times before giving up. Setting the number to 0
+makes curl do no retries (which is the default). Transient error means either:
+a timeout, an FTP 4xx response code or an HTTP 5xx response code.
+
+When curl is about to retry a transfer, it will first wait one second and then
+for all forthcoming retries it will double the waiting time until it reaches
+10 minutes which then will be the delay between the rest of the retries.  By
+using \fI--retry-delay\fP you disable this exponential backoff algorithm. See also
+\fI--retry-max-time\fP to limit the total time allowed for retries.
+
+If this option is used several times, the last one will be used.
+
+Added in 7.12.3.
 .IP "--sasl-ir"
 Enable initial response in SASL authentication.
-(Added in 7.31.0)
-.IP "--service-name <servicename>"
+
+Added in 7.31.0.
+.IP "--service-name <name>"
 This option allows you to change the service name for SPNEGO.
 
-Examples: --negotiate \fI--service-name\fP sockd would use
-sockd/server-name.  (Added in 7.43.0).
-.IP "-S, --show-error"
-When used with \fI-s\fP it makes curl show an error message if it fails.
-.IP "--ssl"
-(FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for the connection.  Reverts to a
-non-secure connection if the server doesn't support SSL/TLS.  See also
-\fI--ftp-ssl-control\fP and \fI--ssl-reqd\fP for different levels of
-encryption required. (Added in 7.20.0)
+Examples: \fI--negotiate\fP \fI--service-name\fP sockd would use sockd/server-name.
 
-This option was formerly known as \fI--ftp-ssl\fP (Added in 7.11.0). That
-option name can still be used but will be removed in a future version.
-.IP "--ssl-reqd"
-(FTP, POP3, IMAP, SMTP) Require SSL/TLS for the connection.  Terminates the
-connection if the server doesn't support SSL/TLS. (Added in 7.20.0)
+Added in 7.43.0.
+.IP "-S, --show-error"
+When used with \fI-s, --silent\fP, it makes curl show an error message if it fails.
+.IP "-s, --silent"
+Silent or quiet mode. Don't show progress meter or error messages.  Makes Curl
+mute. It will still output the data you ask for, potentially even to the
+terminal/stdout unless you redirect it.
 
-This option was formerly known as \fI--ftp-ssl-reqd\fP.
-.IP "--ssl-allow-beast"
-(SSL) This option tells curl to not work around a security flaw in the SSL3
-and TLS1.0 protocols known as BEAST.  If this option isn't used, the SSL layer
-may use workarounds known to cause interoperability problems with some older
-SSL implementations. WARNING: this option loosens the SSL security, and by
-using this flag you ask for exactly that.  (Added in 7.25.0)
-.IP "--ssl-no-revoke"
-(WinSSL) This option tells curl to disable certificate revocation checks.
-WARNING: this option loosens the SSL security, and by using this flag you ask
-for exactly that.  (Added in 7.44.0)
+See also \fI-v, --verbose\fP and \fI--stderr\fP.
 .IP "--socks4 <host[:port]>"
 Use the specified SOCKS4 proxy. If the port number is not specified, it is
-assumed at port 1080. (Added in 7.15.2)
+assumed at port 1080.
 
-This option overrides any previous use of \fI-x, --proxy\fP, as they are
-mutually exclusive.
+This option overrides any previous use of \fI-x, --proxy\fP, as they are mutually
+exclusive.
 
 Since 7.21.7, this option is superfluous since you can specify a socks4 proxy
 with \fI-x, --proxy\fP using a socks4:// protocol prefix.
 
 If this option is used several times, the last one will be used.
+
+Added in 7.15.2.
 .IP "--socks4a <host[:port]>"
 Use the specified SOCKS4a proxy. If the port number is not specified, it is
-assumed at port 1080. (Added in 7.18.0)
+assumed at port 1080.
 
-This option overrides any previous use of \fI-x, --proxy\fP, as they are
-mutually exclusive.
+This option overrides any previous use of \fI-x, --proxy\fP, as they are mutually
+exclusive.
 
 Since 7.21.7, this option is superfluous since you can specify a socks4a proxy
 with \fI-x, --proxy\fP using a socks4a:// protocol prefix.
 
 If this option is used several times, the last one will be used.
+
+Added in 7.18.0.
+.IP "--socks5-gssapi-nec"
+As part of the GSS-API negotiation a protection mode is negotiated. RFC 1961
+says in section 4.3/4.4 it should be protected, but the NEC reference
+implementation does not.  The option \fI--socks5-gssapi-nec\fP allows the
+unprotected exchange of the protection mode negotiation.
+
+Added in 7.19.4.
+.IP "--socks5-gssapi-service <name>"
+The default service name for a socks server is rcmd/server-fqdn. This option
+allows you to change it.
+
+Examples: \fI--socks5\fP proxy-name \fI--socks5-gssapi-service\fP sockd would use
+sockd/proxy-name \fI--socks5\fP proxy-name \fI--socks5-gssapi-service\fP sockd/real-name
+would use sockd/real-name for cases where the proxy-name does not match the
+principal name.
+
+Added in 7.19.4.
 .IP "--socks5-hostname <host[:port]>"
 Use the specified SOCKS5 proxy (and let the proxy resolve the host name). If
-the port number is not specified, it is assumed at port 1080. (Added in
-7.18.0)
+the port number is not specified, it is assumed at port 1080.
 
-This option overrides any previous use of \fI-x, --proxy\fP, as they are
-mutually exclusive.
+This option overrides any previous use of \fI-x, --proxy\fP, as they are mutually
+exclusive.
 
 Since 7.21.7, this option is superfluous since you can specify a socks5
 hostname proxy with \fI-x, --proxy\fP using a socks5h:// protocol prefix.
 
-If this option is used several times, the last one will be used. (This option
-was previously wrongly documented and used as --socks without the number
-appended.)
+If this option is used several times, the last one will be used.
+
+Added in 7.18.0.
 .IP "--socks5 <host[:port]>"
 Use the specified SOCKS5 proxy - but resolve the host name locally. If the
 port number is not specified, it is assumed at port 1080.
 
-This option overrides any previous use of \fI-x, --proxy\fP, as they are
-mutually exclusive.
+This option overrides any previous use of \fI-x, --proxy\fP, as they are mutually
+exclusive.
 
 Since 7.21.7, this option is superfluous since you can specify a socks5 proxy
 with \fI-x, --proxy\fP using a socks5:// protocol prefix.
 
-If this option is used several times, the last one will be used. (This option
-was previously wrongly documented and used as --socks without the number
-appended.)
+If this option is used several times, the last one will be used.
 
 This option (as well as \fI--socks4\fP) does not work with IPV6, FTPS or LDAP.
-.IP "--socks5-gssapi-service <servicename>"
-The default service name for a socks server is rcmd/server-fqdn. This option
-allows you to change it.
 
-Examples: --socks5 proxy-name \fI--socks5-gssapi-service\fP sockd would use
-sockd/proxy-name --socks5 proxy-name \fI--socks5-gssapi-service\fP
-sockd/real-name would use sockd/real-name for cases where the proxy-name does
-not match the principal name.  (Added in 7.19.4).
-.IP "--socks5-gssapi-nec"
-As part of the GSS-API negotiation a protection mode is negotiated. RFC 1961
-says in section 4.3/4.4 it should be protected, but the NEC reference
-implementation does not.  The option \fI--socks5-gssapi-nec\fP allows the
-unprotected exchange of the protection mode negotiation. (Added in 7.19.4).
-.IP "--stderr <file>"
+Added in 7.18.0.
+.IP "-Y, --speed-limit <speed>"
+If a download is slower than this given speed (in bytes per second) for
+speed-time seconds it gets aborted. speed-time is set with \fI-y, --speed-time\fP and is
+30 if not set.
+
+If this option is used several times, the last one will be used.
+.IP "-y, --speed-time <seconds>"
+If a download is slower than speed-limit bytes per second during a speed-time
+period, the download gets aborted. If speed-time is used, the default
+speed-limit will be 1 unless set with \fI-Y, --speed-limit\fP.
+
+This option controls transfers and thus will not affect slow connects etc. If
+this is a concern for you, try the \fI--connect-timeout\fP option.
+
+If this option is used several times, the last one will be used.
+.IP "--ssl-allow-beast"
+This option tells curl to not work around a security flaw in the SSL3 and
+TLS1.0 protocols known as BEAST.  If this option isn't used, the SSL layer may
+use workarounds known to cause interoperability problems with some older SSL
+implementations. WARNING: this option loosens the SSL security, and by using
+this flag you ask for exactly that.
+
+Added in 7.25.0.
+.IP "--ssl-no-revoke"
+(WinSSL) This option tells curl to disable certificate revocation checks.
+WARNING: this option loosens the SSL security, and by using this flag you ask
+for exactly that.
+
+Added in 7.44.0.
+.IP "--ssl-reqd"
+(FTP IMAP POP3 SMTP) Require SSL/TLS for the connection.  Terminates the connection if the server
+doesn't support SSL/TLS.
+
+This option was formerly known as --ftp-ssl-reqd.
+
+Added in 7.20.0.
+.IP "--ssl"
+(FTP IMAP POP3 SMTP) 
+Try to use SSL/TLS for the connection.  Reverts to a non-secure connection if
+the server doesn't support SSL/TLS.  See also \fI--ftp-ssl-control\fP and \fI--ssl-reqd\fP
+for different levels of encryption required.
+
+This option was formerly known as --ftp-ssl (Added in 7.11.0). That option
+name can still be used but will be removed in a future version.
+
+Added in 7.20.0.
+.IP "-2, --sslv2"
+(SSL) Forces curl to use SSL version 2 when negotiating with a remote SSL
+server. Sometimes curl is built without SSLv2 support. SSLv2 is widely
+considered insecure (see RFC 6176).
+
+See also \fI--http1.1\fP and \fI--http2\fP. \fI-2, --sslv2\fP requires that the underlying libcurl was built to support TLS. This option overrides \fI-3, --sslv3\fP and \fI-1, --tlsv1\fP and \fI--tlsv1.1\fP and \fI--tlsv1.2\fP.
+.IP "-3, --sslv3"
+(SSL) Forces curl to use SSL version 3 when negotiating with a remote SSL
+server. Sometimes curl is built without SSLv3 support. SSLv3 is widely
+considered insecure (see RFC 7568).
+
+See also \fI--http1.1\fP and \fI--http2\fP. \fI-3, --sslv3\fP requires that the underlying libcurl was built to support TLS. This option overrides \fI-2, --sslv2\fP and \fI-1, --tlsv1\fP and \fI--tlsv1.1\fP and \fI--tlsv1.2\fP.
+.IP "--stderr"
 Redirect all writes to stderr to the specified file instead. If the file name
 is a plain '-', it is instead written to stdout.
 
 If this option is used several times, the last one will be used.
-.IP "-t, --telnet-option <OPT=val>"
-Pass options to the telnet protocol. Supported options are:
 
-TTYPE=<term> Sets the terminal type.
+See also \fI-v, --verbose\fP and \fI-s, --silent\fP.
+.IP "--tcp-fastopen"
+Enable use of TCP Fast Open (RFC7413).
+
+Added in 7.49.0.
+.IP "--tcp-nodelay"
+Turn on the TCP_NODELAY option. See the \fIcurl_easy_setopt(3)\fP man page for
+details about this option.
+
+Since 7.50.2, curl sets this option by default and you need to explictitly
+switch it off if you don't want it on.
+
+Added in 7.11.2.
+.IP "-t, --telnet-option <opt=val>"
+Pass options to the telnet protocol. Supported options are:
+
+TTYPE=<term> Sets the terminal type.
+
+XDISPLOC=<X display> Sets the X display location.
+
+NEW_ENV=<var,val> Sets an environment variable.
+.IP "--tftp-blksize <value>"
+(TFTP) Set TFTP BLKSIZE option (must be >512). This is the block size that curl will
+try to use when transferring data to or from a TFTP server. By default 512
+bytes will be used.
+
+If this option is used several times, the last one will be used.
+
+Added in 7.20.0.
+.IP "--tftp-no-options"
+(TFTP) Tells curl not to send TFTP options requests.
+
+This option improves interop with some legacy servers that do not acknowledge
+or properly implement TFTP options. When this option is used \fI--tftp-blksize\fP is
+ignored.
+
+Added in 7.48.0.
+.IP "-z, --time-cond <time>"
+(HTTP FTP) Request a file that has been modified later than the given time and date, or
+one that has been modified before that time. The <date expression> can be all
+sorts of date strings or if it doesn't match any internal ones, it is taken as
+a filename and tries to get the modification date (mtime) from <file>
+instead. See the \fIcurl_getdate(3)\fP man pages for date expression details.
+
+Start the date expression with a dash (-) to make it request for a document
+that is older than the given date/time, default is a document that is newer
+than the specified date/time.
+
+If this option is used several times, the last one will be used.
+.IP "--tlsauthtype <type>"
+Set TLS authentication type. Currently, the only supported option is "SRP",
+for TLS-SRP (RFC 5054). If \fI--tlsuser\fP and \fI--tlspassword\fP are specified but
+\fI--tlsauthtype\fP is not, then this option defaults to "SRP".
+
+Added in 7.21.4.
+.IP "--tlspassword"
+Set password for use with the TLS authentication method specified with
+\fI--tlsauthtype\fP. Requires that \fI--tlsuser\fP also be set.
+
+Added in 7.21.4.
+.IP "--tlsuser <name>"
+Set username for use with the TLS authentication method specified with
+\fI--tlsauthtype\fP. Requires that \fI--tlspassword\fP also is set.
+
+Added in 7.21.4.
+.IP "--tlsv1.0"
+(TLS) Forces curl to use TLS version 1.0 when connecting to a remote TLS server.
+
+Added in 7.34.0.
+.IP "--tlsv1.1"
+(TLS) Forces curl to use TLS version 1.1 when connecting to a remote TLS server.
+
+Added in 7.34.0.
+.IP "--tlsv1.2"
+(TLS) Forces curl to use TLS version 1.2 when connecting to a remote TLS server.
+
+Added in 7.34.0.
+.IP "--tlsv1.3"
+(TLS) Forces curl to use TLS version 1.3 when connecting to a remote TLS server.
+
+Note that TLS 1.3 is only supported by a subset of TLS backends. At the time
+of writing this, those are BoringSSL and NSS only.
+
+Added in 7.52.0.
+.IP "-1, --tlsv1"
+(SSL) Tells curl to use TLS version 1.x when negotiating with a remote TLS
+server. That means TLS version 1.0, 1.1 or 1.2.
+
+See also \fI--http1.1\fP and \fI--http2\fP. \fI-1, --tlsv1\fP requires that the underlying libcurl was built to support TLS. This option overrides \fI--tlsv1.1\fP and \fI--tlsv1.2\fP and \fI--tlsv1.3\fP.
+.IP "--tr-encoding"
+(HTTP) Request a compressed Transfer-Encoding response using one of the algorithms
+curl supports, and uncompress the data while receiving it.
+
+Added in 7.21.6.
+.IP "--trace-ascii <file>"
+Enables a full trace dump of all incoming and outgoing data, including
+descriptive information, to the given output file. Use "-" as filename to have
+the output sent to stdout.
+
+This is very similar to \fI--trace\fP, but leaves out the hex part and only shows
+the ASCII part of the dump. It makes smaller output that might be easier to
+read for untrained humans.
+
+If this option is used several times, the last one will be used.
+
+This option overrides \fI--trace\fP and \fI-v, --verbose\fP.
+.IP "--trace-time"
+Prepends a time stamp to each trace or verbose line that curl displays.
 
-XDISPLOC=<X display> Sets the X display location.
+Added in 7.14.0.
+.IP "--trace <file>"
+Enables a full trace dump of all incoming and outgoing data, including
+descriptive information, to the given output file. Use "-" as filename to have
+the output sent to stdout. Use "%" as filename to have the output sent to
+stderr.
 
-NEW_ENV=<var,val> Sets an environment variable.
+If this option is used several times, the last one will be used.
+
+This option overrides \fI-v, --verbose\fP and \fI--trace-ascii\fP.
+.IP "--unix-socket <path>"
+(HTTP) Connect through this Unix domain socket, instead of using the network.
+
+Added in 7.40.0.
 .IP "-T, --upload-file <file>"
 This transfers the specified local file to the remote URL. If there is no file
-part in the specified URL, Curl will append the local file name. NOTE that you
+part in the specified URL, curl will append the local file name. NOTE that you
 must use a trailing / on the last directory to really prove to Curl that there
 is no file name or curl will think that your last directory name is the remote
 file name to use. That will most likely cause the upload operation to fail. If
 this is used on an HTTP(S) server, the PUT command will be used.
 
 Use the file name "-" (a single dash) to use stdin instead of a given file.
 Alternately, the file name "." (a single period) may be specified instead
 of "-" to use stdin in non-blocking mode to allow reading server output
 while stdin is being uploaded.
 
-You can specify one -T for each URL on the command line. Each -T + URL pair
-specifies what to upload and to where. curl also supports "globbing" of the -T
-argument, meaning that you can upload multiple files to a single URL by using
-the same URL globbing style supported in the URL, like this:
+You can specify one \fI-T, --upload-file\fP for each URL on the command line. Each
+\fI-T, --upload-file\fP + URL pair specifies what to upload and to where. curl also
+supports "globbing" of the \fI-T, --upload-file\fP argument, meaning that you can upload
+multiple files to a single URL by using the same URL globbing style supported
+in the URL, like this:
 
-curl -T "{file1,file2}" http://www.example.com
+ curl --upload-file "{file1,file2}" http://www.example.com
 
 or even
 
-curl -T "img[1-1000].png" ftp://ftp.example.com/upload/
-.IP "--tcp-nodelay"
-Turn on the TCP_NODELAY option. See the \fIcurl_easy_setopt(3)\fP man page for
-details about this option. (Added in 7.11.2)
-.IP "--tcp-fastopen"
-Enable use of TCP Fast Open (RFC7413). (Added in 7.49.0)
-.IP "--tftp-blksize <value>"
-(TFTP) Set TFTP BLKSIZE option (must be >512). This is the block size that
-curl will try to use when transferring data to or from a TFTP server. By
-default 512 bytes will be used.
-
-If this option is used several times, the last one will be used.
-
-(Added in 7.20.0)
-.IP "--tftp-no-options"
-(TFTP) Tells curl not to send TFTP options requests.
-
-This option improves interop with some legacy servers that do not acknowledge
-or properly implement TFTP options. When this option is used
-\fI--tftp-blksize\fP is ignored.
-
-(Added in 7.48.0)
-.IP "--tlsauthtype <authtype>"
-Set TLS authentication type. Currently, the only supported option is "SRP",
-for TLS-SRP (RFC 5054). If \fI--tlsuser\fP and \fI--tlspassword\fP are
-specified but \fI--tlsauthtype\fP is not, then this option defaults to "SRP".
-(Added in 7.21.4)
-.IP "--tlspassword <password>"
-Set password for use with the TLS authentication method specified with
-\fI--tlsauthtype\fP. Requires that \fI--tlsuser\fP also be set.  (Added in
-7.21.4)
-.IP "--tlsuser <user>"
-Set username for use with the TLS authentication method specified with
-\fI--tlsauthtype\fP. Requires that \fI--tlspassword\fP also be set.  (Added in
-7.21.4)
-.IP "--tlsv1.0"
-(SSL)
-Forces curl to use TLS version 1.0 when negotiating with a remote TLS server.
-(Added in 7.34.0)
-.IP "--tlsv1.1"
-(SSL)
-Forces curl to use TLS version 1.1 when negotiating with a remote TLS server.
-(Added in 7.34.0)
-.IP "--tlsv1.2"
-(SSL)
-Forces curl to use TLS version 1.2 when negotiating with a remote TLS server.
-(Added in 7.34.0)
-.IP "--tr-encoding"
-(HTTP) Request a compressed Transfer-Encoding response using one of the
-algorithms curl supports, and uncompress the data while receiving it.
-
-(Added in 7.21.6)
-.IP "--trace <file>"
-Enables a full trace dump of all incoming and outgoing data, including
-descriptive information, to the given output file. Use "-" as filename to have
-the output sent to stdout. Use "%" as filename to have the output sent to
-stderr.
-
-This option overrides previous uses of \fI-v, --verbose\fP or
-\fI--trace-ascii\fP.
+ curl -T "img[1-1000].png" ftp://ftp.example.com/upload/
 
-If this option is used several times, the last one will be used.
-.IP "--trace-ascii <file>"
-Enables a full trace dump of all incoming and outgoing data, including
-descriptive information, to the given output file. Use "-" as filename to have
-the output sent to stdout.
+When uploading to an SMTP server: the uploaded data is assumed to be RFC 5322
+formatted. It has to feature the necessary set of headers and mail body
+formatted correctly by the user as curl will not transcode nor encode it
+further in any way.
+.IP "--url <url>"
+Specify a URL to fetch. This option is mostly handy when you want to specify
+URL(s) in a config file.
 
-This is very similar to \fI--trace\fP, but leaves out the hex part and only
-shows the ASCII part of the dump. It makes smaller output that might be easier
-to read for untrained humans.
+If the given URL is missing a scheme name (such as "http://" or "ftp://" etc)
+then curl will make a guess based on the host. If the outermost sub-domain
+name matches DICT, FTP, IMAP, LDAP, POP3 or SMTP then that protocol will be
+used, otherwise HTTP will be used. Since 7.45.0 guessing can be disabled by
+setting a default protocol, see \fI--proto-default\fP for details.
 
-This option overrides previous uses of \fI-v, --verbose\fP or \fI--trace\fP.
+This option may be used any number of times. To control where this URL is
+written, use the \fI-o, --output\fP or the \fI-O, --remote-name\fP options.
+.IP "-B, --use-ascii"
+(FTP LDAP) Enable ASCII transfer. For FTP, this can also be enforced by using an URL that
+ends with ";type=A". This option causes data sent to stdout to be in text mode
+for win32 systems.
+.IP "-A, --user-agent <name>"
+(HTTP) 
+Specify the User-Agent string to send to the HTTP server. To encode blanks in
+the string, surround the string with single quote marks. This can also be set
+with the \fI-H, --header\fP option of course.
 
 If this option is used several times, the last one will be used.
-.IP "--trace-time"
-Prepends a time stamp to each trace or verbose line that curl displays.
-(Added in 7.14.0)
-.IP "--unix-socket <path>"
-(HTTP) Connect through this Unix domain socket, instead of using the
-network. (Added in 7.40.0)
 .IP "-u, --user <user:password>"
 Specify the user name and password to use for server authentication. Overrides
 \fI-n, --netrc\fP and \fI--netrc-optional\fP.
 
 If you simply specify the user name, curl will prompt for a password.
 
@@ -1879,60 +2227,95 @@
 If you use a Windows SSPI-enabled curl binary and perform Kerberos V5,
 Negotiate, NTLM or Digest authentication then you can tell curl to select
 the user name and password from your environment by specifying a single colon
 with this option: "-u :".
 
 If this option is used several times, the last one will be used.
-.IP "-U, --proxy-user <user:password>"
-Specify the user name and password to use for proxy authentication.
-
-If you use a Windows SSPI-enabled curl binary and do either Negotiate or NTLM
-authentication then you can tell curl to select the user name and password
-from your environment by specifying a single colon with this option: "-U :".
-
-If this option is used several times, the last one will be used.
-.IP "--url <URL>"
-Specify a URL to fetch. This option is mostly handy when you want to specify
-URL(s) in a config file.
-
-If the given URL is missing a scheme name (such as "http://" or "ftp://" etc)
-then curl will make a guess based on the host. If the outermost sub-domain name
-matches DICT, FTP, IMAP, LDAP, POP3 or SMTP then that protocol will be used,
-otherwise HTTP will be used. Since 7.45.0 guessing can be disabled by setting a
-default protocol, see \fI--proto-default\fP for details.
-
-This option may be used any number of times. To control where this URL is
-written, use the \fI-o, --output\fP or the \fI-O, --remote-name\fP options.
 .IP "-v, --verbose"
-Be more verbose/talkative during the operation. Useful for debugging and
-seeing what's going on "under the hood". A line starting with '>' means
-"header data" sent by curl, '<' means "header data" received by curl that is
-hidden in normal cases, and a line starting with '*' means additional info
-provided by curl.
+Makes curl verbose during the operation. Useful for debugging and seeing
+what's going on "under the hood". A line starting with '>' means "header data"
+sent by curl, '<' means "header data" received by curl that is hidden in
+normal cases, and a line starting with '*' means additional info provided by
+curl.
 
-Note that if you only want HTTP headers in the output, \fI-i, --include\fP
-might be the option you're looking for.
+If you only want HTTP headers in the output, \fI-i, --include\fP might be the option
+you're looking for.
 
 If you think this option still doesn't give you enough details, consider using
 \fI--trace\fP or \fI--trace-ascii\fP instead.
 
-This option overrides previous uses of \fI--trace-ascii\fP or \fI--trace\fP.
+Use \fI-s, --silent\fP to make curl really quiet.
+
+See also \fI-i, --include\fP. This option overrides \fI--trace\fP and \fI--trace-ascii\fP.
+.IP "-V, --version"
+Displays information about curl and the libcurl version it uses.
+
+The first line includes the full version of curl, libcurl and other 3rd party
+libraries linked with the executable.
+
+The second line (starts with "Protocols:") shows all protocols that libcurl
+reports to support.
 
-Use \fI-s, --silent\fP to make curl quiet.
+The third line (starts with "Features:") shows specific features libcurl
+reports to offer. Available features include:
+.RS
+.IP "IPv6"
+You can use IPv6 with this.
+.IP "krb4"
+Krb4 for FTP is supported.
+.IP "SSL"
+SSL versions of various protocols are supported, such as HTTPS, FTPS, POP3S
+and so on.
+.IP "libz"
+Automatic decompression of compressed files over HTTP is supported.
+.IP "NTLM"
+NTLM authentication is supported.
+.IP "Debug"
+This curl uses a libcurl built with Debug. This enables more error-tracking
+and memory debugging etc. For curl-developers only!
+.IP "AsynchDNS"
+This curl uses asynchronous name resolves. Asynchronous name resolves can be
+done using either the c-ares or the threaded resolver backends.
+.IP "SPNEGO"
+SPNEGO authentication is supported.
+.IP "Largefile"
+This curl supports transfers of large files, files larger than 2GB.
+.IP "IDN"
+This curl supports IDN - international domain names.
+.IP "GSS-API"
+GSS-API is supported.
+.IP "SSPI"
+SSPI is supported.
+.IP "TLS-SRP"
+SRP (Secure Remote Password) authentication is supported for TLS.
+.IP "HTTP2"
+HTTP/2 support has been built-in.
+.IP "UnixSockets"
+Unix sockets support is provided.
+.IP "HTTPS-proxy"
+This curl is built to support HTTPS proxy.
+.IP "Metalink"
+This curl supports Metalink (both version 3 and 4 (RFC 5854)), which
+describes mirrors and hashes.  curl will use mirrors for failover if
+there are errors (such as the file or server not being available).
+.IP "PSL"
+PSL is short for Public Suffix List and means that this curl has been built
+with knowledge about "public suffixes".
+.RE
 .IP "-w, --write-out <format>"
 Make curl display information on stdout after a completed transfer. The format
 is a string that may contain plain text mixed with any number of
 variables. The format can be specified as a literal "string", or you can have
 curl read the format from a file with "@filename" and to tell curl to read the
 format from stdin you write "@-".
 
 The variables present in the output format will be substituted by the value or
-text that curl thinks fit, as described below. All variables are specified
-as %{variable_name} and to output a normal % you just write them as
-%%. You can output a newline by using \\n, a carriage return with \\r and a tab
-space with \\t.
+text that curl thinks fit, as described below. All variables are specified as
+%{variable_name} and to output a normal % you just write them as %%. You can
+output a newline by using \\n, a carriage return with \\r and a tab space with
+\\t.
 
 .B NOTE:
 The %-symbol is a special symbol in the win32-environment, where all
 occurrences of % must be doubled when using this option.
 
 The variables available are:
@@ -1940,14 +2323,14 @@
 .TP 15
 .B content_type
 The Content-Type of the requested document, if there was any.
 .TP
 .B filename_effective
 The ultimate filename that curl writes out to. This is only meaningful if curl
-is told to write to a file with the \fI--remote-name\fP or \fI--output\fP
-option. It's most useful in combination with the \fI--remote-header-name\fP
+is told to write to a file with the \fI-O, --remote-name\fP or \fI-o, --output\fP
+option. It's most useful in combination with the \fI-J, --remote-header-name\fP
 option. (Added in 7.26.0)
 .TP
 .B ftp_entry_path
 The initial path curl ended up in when logging on to the remote FTP
 server. (Added in 7.15.4)
 .TP
@@ -1984,12 +2367,15 @@
 The remote IP address of the most recently done connection - can be either
 IPv4 or IPv6 (Added in 7.29.0)
 .TP
 .B remote_port
 The remote port number of the most recently done connection (Added in 7.29.0)
 .TP
+.B scheme
+The URL scheme (sometimes called protocol) that was effectively used (Added in 7.52.0)
+.TP
 .B size_download
 The total amount of bytes that were downloaded.
 .TP
 .B size_header
 The total amount of bytes of the downloaded headers.
 .TP
@@ -2046,177 +2432,29 @@
 .B url_effective
 The URL that was fetched last. This is most meaningful if you've told curl
 to follow location: headers.
 .RE
 .IP
 If this option is used several times, the last one will be used.
-.IP "-x, --proxy <[protocol://][user:password@]proxyhost[:port]>"
-Use the specified proxy.
-
-The proxy string can be specified with a protocol:// prefix to specify
-alternative proxy protocols. Use socks4://, socks4a://, socks5:// or
-socks5h:// to request the specific SOCKS version to be used. No protocol
-specified, http:// and all others will be treated as HTTP proxies. (The
-protocol support was added in curl 7.21.7)
-
-If the port number is not specified in the proxy string, it is assumed to be
-1080.
-
-This option overrides existing environment variables that set the proxy to
-use. If there's an environment variable setting a proxy, you can set proxy to
-\&"" to override it.
-
-All operations that are performed over an HTTP proxy will transparently be
-converted to HTTP. It means that certain protocol specific operations might
-not be available. This is not the case if you can tunnel through the proxy, as
-one with the \fI-p, --proxytunnel\fP option.
-
-User and password that might be provided in the proxy string are URL decoded
-by curl. This allows you to pass in special characters such as @ by using %40
-or pass in a colon with %3a.
-
-The proxy host can be specified the exact same way as the proxy environment
-variables, including the protocol prefix (http://) and the embedded user +
-password.
-
-If this option is used several times, the last one will be used.
-.IP "-X, --request <command>"
-(HTTP) Specifies a custom request method to use when communicating with the
-HTTP server.  The specified request method will be used instead of the method
-otherwise used (which defaults to GET). Read the HTTP 1.1 specification for
-details and explanations. Common additional HTTP requests include PUT and
-DELETE, but related technologies like WebDAV offers PROPFIND, COPY, MOVE and
-more.
-
-Normally you don't need this option. All sorts of GET, HEAD, POST and PUT
-requests are rather invoked by using dedicated command line options.
-
-This option only changes the actual word used in the HTTP request, it does not
-alter the way curl behaves. So for example if you want to make a proper HEAD
-request, using -X HEAD will not suffice. You need to use the \fI-I, --head\fP
-option.
-
-The method string you set with -X will be used for all requests, which if you
-for example use \fB-L, --location\fP may cause unintended side-effects when
-curl doesn't change request method according to the HTTP 30x response codes -
-and similar.
-
-(FTP)
-Specifies a custom FTP command to use instead of LIST when doing file lists
-with FTP.
-
-(POP3)
-Specifies a custom POP3 command to use instead of LIST or RETR. (Added in
-7.26.0)
-
-(IMAP)
-Specifies a custom IMAP command to use instead of LIST. (Added in 7.30.0)
-
-(SMTP)
-Specifies a custom SMTP command to use instead of HELP or VRFY. (Added in 7.34.0)
-
-If this option is used several times, the last one will be used.
 .IP "--xattr"
 When saving output to a file, this option tells curl to store certain file
 metadata in extended file attributes. Currently, the URL is stored in the
 xdg.origin.url attribute and, for HTTP, the content type is stored in
 the mime_type attribute. If the file system does not support extended
 attributes, a warning is issued.
-
-.IP "-y, --speed-time <time>"
-If a download is slower than speed-limit bytes per second during a speed-time
-period, the download gets aborted. If speed-time is used, the default
-speed-limit will be 1 unless set with \fI-Y\fP.
-
-This option controls transfers and thus will not affect slow connects etc. If
-this is a concern for you, try the \fI--connect-timeout\fP option.
-
-If this option is used several times, the last one will be used.
-.IP "-Y, --speed-limit <speed>"
-If a download is slower than this given speed (in bytes per second) for
-speed-time seconds it gets aborted. speed-time is set with \fI-y\fP and is 30
-if not set.
-
-If this option is used several times, the last one will be used.
-.IP "-z, --time-cond <date expression>|<file>"
-(HTTP/FTP) Request a file that has been modified later than the given time and
-date, or one that has been modified before that time. The <date expression>
-can be all sorts of date strings or if it doesn't match any internal ones, it
-is taken as a filename and tries to get the modification date (mtime) from
-<file> instead. See the \fIcurl_getdate(3)\fP man pages for date expression
-details.
-
-Start the date expression with a dash (-) to make it request for a document
-that is older than the given date/time, default is a document that is newer
-than the specified date/time.
-
-If this option is used several times, the last one will be used.
-.IP "-h, --help"
-Usage help. This lists all current command line options with a short
-description.
-.IP "-M, --manual"
-Manual. Display the huge help text.
-.IP "-V, --version"
-Displays information about curl and the libcurl version it uses.
-
-The first line includes the full version of curl, libcurl and other 3rd party
-libraries linked with the executable.
-
-The second line (starts with "Protocols:") shows all protocols that libcurl
-reports to support.
-
-The third line (starts with "Features:") shows specific features libcurl
-reports to offer. Available features include:
-.RS
-.IP "IPv6"
-You can use IPv6 with this.
-.IP "krb4"
-Krb4 for FTP is supported.
-.IP "SSL"
-SSL versions of various protocols are supported, such as HTTPS, FTPS, POP3S
-and so on.
-.IP "libz"
-Automatic decompression of compressed files over HTTP is supported.
-.IP "NTLM"
-NTLM authentication is supported.
-.IP "Debug"
-This curl uses a libcurl built with Debug. This enables more error-tracking
-and memory debugging etc. For curl-developers only!
-.IP "AsynchDNS"
-This curl uses asynchronous name resolves. Asynchronous name resolves can be
-done using either the c-ares or the threaded resolver backends.
-.IP "SPNEGO"
-SPNEGO authentication is supported.
-.IP "Largefile"
-This curl supports transfers of large files, files larger than 2GB.
-.IP "IDN"
-This curl supports IDN - international domain names.
-.IP "GSS-API"
-GSS-API is supported.
-.IP "SSPI"
-SSPI is supported.
-.IP "TLS-SRP"
-SRP (Secure Remote Password) authentication is supported for TLS.
-.IP "HTTP2"
-HTTP/2 support has been built-in.
-.IP "Metalink"
-This curl supports Metalink (both version 3 and 4 (RFC 5854)), which
-describes mirrors and hashes.  curl will use mirrors for failover if
-there are errors (such as the file or server not being available).
-.RE
 .SH FILES
 .I ~/.curlrc
 .RS
 Default config file, see \fI-K, --config\fP for details.
 .SH ENVIRONMENT
 The environment variables can be specified in lower case or upper case. The
 lower case version has precedence. http_proxy is an exception as it is only
 available in lower case.
 
 Using an environment variable to set the proxy has the same effect as using
-the \fI--proxy\fP option.
+the \fI-x, --proxy\fP option.
 
 .IP "http_proxy [protocol://]<host>[:port]"
 Sets the proxy server to use for HTTP.
 .IP "HTTPS_PROXY [protocol://]<host>[:port]"
 Sets the proxy server to use for HTTPS.
 .IP "[url-protocol]_PROXY [protocol://]<host>[:port]"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/10-at-a-time.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/10-at-a-time.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/10-at-a-time.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/10-at-a-time.c	2016-12-19 15:27:56.000000000 +0800
@@ -83,13 +83,13 @@
   "http://www.techweb.com",
   "http://www.newslink.org",
   "http://www.un.org",
 };
 
 #define MAX 10 /* number of simultaneous transfers */
-#define CNT sizeof(urls)/sizeof(char*) /* total number of transfers to do */
+#define CNT sizeof(urls)/sizeof(char *) /* total number of transfers to do */
 
 static size_t cb(char *d, size_t n, size_t l, void *p)
 {
   /* take care of the data here, ignored in this example */
   (void)d;
   (void)p;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/anyauthput.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/anyauthput.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/anyauthput.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/anyauthput.c	2016-12-19 15:27:56.000000000 +0800
@@ -144,19 +144,19 @@
   curl = curl_easy_init();
   if(curl) {
     /* we want to use our own read function */
     curl_easy_setopt(curl, CURLOPT_READFUNCTION, read_callback);
 
     /* which file to upload */
-    curl_easy_setopt(curl, CURLOPT_READDATA, (void*)&hd);
+    curl_easy_setopt(curl, CURLOPT_READDATA, (void *)&hd);
 
     /* set the ioctl function */
     curl_easy_setopt(curl, CURLOPT_IOCTLFUNCTION, my_ioctl);
 
     /* pass the file descriptor to the ioctl callback as well */
-    curl_easy_setopt(curl, CURLOPT_IOCTLDATA, (void*)&hd);
+    curl_easy_setopt(curl, CURLOPT_IOCTLDATA, (void *)&hd);
 
     /* enable "uploading" (which means PUT when doing HTTP) */
     curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
 
     /* specify target URL, and note that this URL should also include a file
        name, not only a directory (as you can do with GTP uploads) */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/cacertinmem.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/cacertinmem.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/cacertinmem.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/cacertinmem.c	2016-12-19 15:27:56.000000000 +0800
@@ -31,18 +31,18 @@
 size_t writefunction(void *ptr, size_t size, size_t nmemb, void *stream)
 {
   fwrite(ptr, size, nmemb, stream);
   return (nmemb*size);
 }
 
-static CURLcode sslctx_function(CURL * curl, void * sslctx, void * parm)
+static CURLcode sslctx_function(CURL *curl, void *sslctx, void *parm)
 {
-  X509_STORE * store;
-  X509 * cert=NULL;
-  BIO * bio;
-  char * mypem = /* www.cacert.org */
+  X509_STORE *store;
+  X509 *cert=NULL;
+  BIO *bio;
+  char *mypem = /* www.cacert.org */
     "-----BEGIN CERTIFICATE-----\n"\
     "MIIHPTCCBSWgAwIBAgIBADANBgkqhkiG9w0BAQQFADB5MRAwDgYDVQQKEwdSb290\n"\
     "IENBMR4wHAYDVQQLExVodHRwOi8vd3d3LmNhY2VydC5vcmcxIjAgBgNVBAMTGUNB\n"\
     "IENlcnQgU2lnbmluZyBBdXRob3JpdHkxITAfBgkqhkiG9w0BCQEWEnN1cHBvcnRA\n"\
     "Y2FjZXJ0Lm9yZzAeFw0wMzAzMzAxMjI5NDlaFw0zMzAzMjkxMjI5NDlaMHkxEDAO\n"\
     "BgNVBAoTB1Jvb3QgQ0ExHjAcBgNVBAsTFWh0dHA6Ly93d3cuY2FjZXJ0Lm9yZzEi\n"\
@@ -104,13 +104,13 @@
   /* all set to go */
   return CURLE_OK;
 }
 
 int main(void)
 {
-  CURL * ch;
+  CURL *ch;
   CURLcode rv;
 
   rv=curl_global_init(CURL_GLOBAL_ALL);
   ch=curl_easy_init();
   rv=curl_easy_setopt(ch, CURLOPT_VERBOSE, 0L);
   rv=curl_easy_setopt(ch, CURLOPT_HEADER, 0L);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/curlx.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/curlx.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/curlx.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/curlx.c	2016-12-19 15:27:56.000000000 +0800
@@ -130,20 +130,20 @@
 
 #define ZERO_NULL 0
 
 /* This is a context that we pass to all callbacks */
 
 typedef struct sslctxparm_st {
-  unsigned char * p12file;
-  const char * pst;
-  PKCS12 * p12;
-  EVP_PKEY * pkey;
-  X509 * usercert;
+  unsigned char *p12file;
+  const char *pst;
+  PKCS12 *p12;
+  EVP_PKEY *pkey;
+  X509 *usercert;
   STACK_OF(X509) * ca;
-  CURL * curl;
-  BIO * errorbio;
+  CURL *curl;
+  BIO *errorbio;
   int accesstype;
   int verbose;
 
 } sslctxparm;
 
 /* some helper function. */
@@ -193,17 +193,18 @@
   int ok;
 
   if(p->verbose > 2)
     BIO_printf(p->errorbio, "entering ssl_app_verify_callback\n");
 
   if((ok= X509_verify_cert(ctx)) && ctx->cert) {
-    unsigned char * accessinfo;
+    unsigned char *accessinfo;
     if(p->verbose > 1)
       X509_print_ex(p->errorbio, ctx->cert, 0, 0);
 
-    if(accessinfo = my_get_ext(ctx->cert, p->accesstype, NID_sinfo_access)) {
+    accessinfo = my_get_ext(ctx->cert, p->accesstype, NID_sinfo_access);
+    if(accessinfo) {
       if(p->verbose)
         BIO_printf(p->errorbio, "Setting URL from SIA to: %s\n", accessinfo);
 
       curl_easy_setopt(p->curl, CURLOPT_URL, accessinfo);
     }
     else if(accessinfo = my_get_ext(ctx->cert, p->accesstype,
@@ -225,16 +226,16 @@
    - a private key and certificate
    - a trusted ca certificate
    - a preferred cipherlist
    - an application verification callback (the function above)
 */
 
-static CURLcode sslctxfun(CURL * curl, void * sslctx, void * parm)
+static CURLcode sslctxfun(CURL *curl, void *sslctx, void *parm)
 {
-  sslctxparm * p = (sslctxparm *) parm;
-  SSL_CTX * ctx = (SSL_CTX *) sslctx;
+  sslctxparm *p = (sslctxparm *) parm;
+  SSL_CTX *ctx = (SSL_CTX *) sslctx;
 
   if(!SSL_CTX_use_certificate(ctx, p->usercert)) {
     BIO_printf(p->errorbio, "SSL_CTX_use_certificate problem\n");
     goto err;
   }
   if(!SSL_CTX_use_PrivateKey(ctx, p->pkey)) {
@@ -267,36 +268,36 @@
 
 int main(int argc, char **argv)
 {
   BIO* in=NULL;
   BIO* out=NULL;
 
-  char * outfile = NULL;
-  char * infile = NULL;
+  char *outfile = NULL;
+  char *infile = NULL;
 
   int tabLength=100;
   char *binaryptr;
-  char* mimetype;
-  char* mimetypeaccept=NULL;
-  char* contenttype;
-  const char** pp;
-  unsigned char* hostporturl = NULL;
-  BIO * p12bio;
+  char *mimetype;
+  char *mimetypeaccept=NULL;
+  char *contenttype;
+  const char **pp;
+  unsigned char *hostporturl = NULL;
+  BIO *p12bio;
   char **args = argv + 1;
-  unsigned char * serverurl;
+  unsigned char *serverurl;
   sslctxparm p;
   char *response;
 
   CURLcode res;
-  struct curl_slist * headers=NULL;
+  struct curl_slist *headers=NULL;
   int badarg=0;
 
   binaryptr = malloc(tabLength);
 
   p.verbose = 0;
-  p.errorbio = BIO_new_fp (stderr, BIO_NOCLOSE);
+  p.errorbio = BIO_new_fp(stderr, BIO_NOCLOSE);
 
   curl_global_init(CURL_GLOBAL_DEFAULT);
 
   /* we need some more for the P12 decoding */
 
   OpenSSL_add_all_ciphers();
@@ -352,13 +353,14 @@
       }
       else
         badarg=1;
     }
     else if(strcmp(*args, "-accesstype") == 0) {
       if(args[1]) {
-        if((p.accesstype = OBJ_obj2nid(OBJ_txt2obj(*++args, 0))) == 0)
+        p.accesstype = OBJ_obj2nid(OBJ_txt2obj(*++args, 0));
+        if(p.accesstype == 0)
           badarg=1;
       }
       else
         badarg=1;
     }
     else if(strcmp(*args, "-verbose") == 0) {
@@ -405,24 +407,27 @@
     BIO_printf(p.errorbio, "Error opening output file %s\n", outfile);
     BIO_free(out);
     goto err;
   }
 
 
-  p.errorbio = BIO_new_fp (stderr, BIO_NOCLOSE);
+  p.errorbio = BIO_new_fp(stderr, BIO_NOCLOSE);
 
-  if(!(p.curl = curl_easy_init())) {
+  p.curl = curl_easy_init();
+  if(!p.curl) {
     BIO_printf(p.errorbio, "Cannot init curl lib\n");
     goto err;
   }
 
-  if(!(p12bio = BIO_new_file(p.p12file, "rb"))) {
+  p12bio = BIO_new_file(p.p12file, "rb");
+  if(!p12bio) {
     BIO_printf(p.errorbio, "Error opening P12 file %s\n", p.p12file);
     goto err;
   }
-  if(!(p.p12 = d2i_PKCS12_bio (p12bio, NULL))) {
+  p.p12 = d2i_PKCS12_bio(p12bio, NULL);
+  if(!p.p12) {
     BIO_printf(p.errorbio, "Cannot decode P12 structure %s\n", p.p12file);
     goto err;
   }
 
   p.ca= NULL;
   if(!(PKCS12_parse (p.p12, p.pst, &(p.pkey), &(p.usercert), &(p.ca) ) )) {
@@ -444,22 +449,25 @@
     size_t len = strlen(hostporturl) + 9;
     serverurl = malloc(len);
     snprintf(serverurl, len, "https://%s", hostporturl);
   }
   else if(p.accesstype != 0) { /* see whether we can find an AIA or SIA for a
                                   given access type */
-    if(!(serverurl = my_get_ext(p.usercert, p.accesstype, NID_info_access))) {
+    serverurl = my_get_ext(p.usercert, p.accesstype, NID_info_access);
+    if(!serverurl) {
       int j=0;
       BIO_printf(p.errorbio, "no service URL in user cert "
                  "cherching in others certificats\n");
       for(j=0; j<sk_X509_num(p.ca); j++) {
-        if((serverurl = my_get_ext(sk_X509_value(p.ca, j), p.accesstype,
-                                    NID_info_access)))
+        serverurl = my_get_ext(sk_X509_value(p.ca, j), p.accesstype,
+                               NID_info_access);
+        if(serverurl)
           break;
-        if((serverurl = my_get_ext(sk_X509_value(p.ca, j), p.accesstype,
-                                    NID_sinfo_access)))
+        serverurl = my_get_ext(sk_X509_value(p.ca, j), p.accesstype,
+                               NID_sinfo_access);
+        if(serverurl)
           break;
       }
     }
   }
 
   if(!serverurl) {
@@ -502,13 +510,13 @@
                "CURLOPT_SSL_CTX_FUNCTION", CURLOPT_SSL_CTX_FUNCTION, res);
 
   curl_easy_setopt(p.curl, CURLOPT_SSL_CTX_DATA, &p);
 
   {
     int lu; int i=0;
-    while((lu = BIO_read (in, &binaryptr[i], tabLength-i)) >0) {
+    while((lu = BIO_read(in, &binaryptr[i], tabLength-i)) >0) {
       i+=lu;
       if(i== tabLength) {
         tabLength+=100;
         binaryptr=realloc(binaryptr, tabLength); /* should be more careful */
       }
     }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/debug.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/debug.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/debug.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/debug.c	2016-12-19 15:27:56.000000000 +0800
@@ -85,13 +85,13 @@
              void *userp)
 {
   struct data *config = (struct data *)userp;
   const char *text;
   (void)handle; /* prevent compiler warning */
 
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "== Info: %s", data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/evhiperfifo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/evhiperfifo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/evhiperfifo.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/evhiperfifo.c	2016-12-19 15:27:56.000000000 +0800
@@ -83,13 +83,13 @@
 {
   struct ev_loop *loop;
   struct ev_io fifo_event;
   struct ev_timer timer_event;
   CURLM *multi;
   int still_running;
-  FILE* input;
+  FILE *input;
 } GlobalInfo;
 
 
 /* Information associated with a specific easy handle */
 typedef struct _ConnInfo
 {
@@ -131,13 +131,13 @@
 
 /* Die if we get a bad CURLMcode somewhere */
 static void mcode_or_die(const char *where, CURLMcode code)
 {
   if(CURLM_OK != code) {
     const char *s;
-    switch (code) {
+    switch(code) {
     case CURLM_BAD_HANDLE:
       s="CURLM_BAD_HANDLE";
       break;
     case CURLM_BAD_EASY_HANDLE:
       s="CURLM_BAD_EASY_HANDLE";
       break;
@@ -240,13 +240,14 @@
   }
 }
 
 
 
 /* Assign information to a SockInfo structure */
-static void setsock(SockInfo*f, curl_socket_t s, CURL*e, int act, GlobalInfo*g)
+static void setsock(SockInfo *f, curl_socket_t s, CURL *e, int act,
+                    GlobalInfo *g)
 {
   printf("%s  \n", __PRETTY_FUNCTION__);
 
   int kind = (act&CURL_POLL_IN?EV_READ:0)|(act&CURL_POLL_OUT?EV_WRITE:0);
 
   f->sockfd = s;
@@ -313,14 +314,14 @@
   (void)conn;
   return realsize;
 }
 
 
 /* CURLOPT_PROGRESSFUNCTION */
-static int prog_cb (void *p, double dltotal, double dlnow, double ult,
-                    double uln)
+static int prog_cb(void *p, double dltotal, double dlnow, double ult,
+                   double uln)
 {
   ConnInfo *conn = (ConnInfo *)p;
   (void)ult;
   (void)uln;
 
   fprintf(MSG_OUT, "Progress: %s (%g/%g)\n", conn->url, dlnow, dltotal);
@@ -384,35 +385,35 @@
     else
       break;
   } while(rv != EOF);
 }
 
 /* Create a named pipe and tell libevent to monitor it */
-static int init_fifo (GlobalInfo *g)
+static int init_fifo(GlobalInfo *g)
 {
   struct stat st;
   static const char *fifo = "hiper.fifo";
   curl_socket_t sockfd;
 
   fprintf(MSG_OUT, "Creating named pipe \"%s\"\n", fifo);
   if(lstat (fifo, &st) == 0) {
     if((st.st_mode & S_IFMT) == S_IFREG) {
       errno = EEXIST;
       perror("lstat");
-      exit (1);
+      exit(1);
     }
   }
   unlink(fifo);
   if(mkfifo (fifo, 0600) == -1) {
     perror("mkfifo");
-    exit (1);
+    exit(1);
   }
   sockfd = open(fifo, O_RDWR | O_NONBLOCK, 0);
   if(sockfd == -1) {
     perror("open");
-    exit (1);
+    exit(1);
   }
   g->input = fdopen(sockfd, "r");
 
   fprintf(MSG_OUT, "Now, pipe some URL's into > %s\n", fifo);
   ev_io_init(&g->fifo_event, fifo_cb, sockfd, EV_READ);
   ev_io_start(g->loop, &g->fifo_event);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/externalsocket.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/externalsocket.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/externalsocket.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/externalsocket.c	2016-12-19 15:27:56.000000000 +0800
@@ -87,15 +87,14 @@
   CURLcode res;
   struct sockaddr_in servaddr;  /*  socket address structure  */
   curl_socket_t sockfd;
 
 #ifdef WIN32
   WSADATA wsaData;
-  int initwsa;
-
-  if((initwsa = WSAStartup(MAKEWORD(2, 0), &wsaData)) != 0) {
+  int initwsa = WSAStartup(MAKEWORD(2, 0), &wsaData);
+  if(initwsa != 0) {
     printf("WSAStartup failed: %d\n", initwsa);
     return 1;
   }
 #endif
 
   curl = curl_easy_init();
@@ -104,22 +103,24 @@
      * Note that libcurl will internally think that you connect to the host
      * and port that you specify in the URL option.
      */
     curl_easy_setopt(curl, CURLOPT_URL, "http://99.99.99.99:9999");
 
     /* Create the socket "manually" */
-    if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == CURL_SOCKET_BAD) {
+    sockfd = socket(AF_INET, SOCK_STREAM, 0);
+    if(sockfd == CURL_SOCKET_BAD) {
       printf("Error creating listening socket.\n");
       return 3;
     }
 
     memset(&servaddr, 0, sizeof(servaddr));
     servaddr.sin_family = AF_INET;
     servaddr.sin_port   = htons(PORTNUM);
 
-    if(INADDR_NONE == (servaddr.sin_addr.s_addr = inet_addr(IPADDR)))
+    servaddr.sin_addr.s_addr = inet_addr(IPADDR);
+    if(INADDR_NONE == servaddr.sin_addr.s_addr)
       return 2;
 
     if(connect(sockfd, (struct sockaddr *) &servaddr, sizeof(servaddr)) ==
        -1) {
       close(sockfd);
       printf("client error: connect: %s\n", strerror(errno));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/fileupload.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/fileupload.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/fileupload.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/fileupload.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -34,22 +34,18 @@
   CURLcode res;
   struct stat file_info;
   double speed_upload, total_time;
   FILE *fd;
 
   fd = fopen("debugit", "rb"); /* open file to upload */
-  if(!fd) {
-
+  if(!fd)
     return 1; /* can't continue */
-  }
 
   /* to get the file size */
-  if(fstat(fileno(fd), &file_info) != 0) {
-
+  if(fstat(fileno(fd), &file_info) != 0)
     return 1; /* can't continue */
-  }
 
   curl = curl_easy_init();
   if(curl) {
     /* upload to this place */
     curl_easy_setopt(curl, CURLOPT_URL,
                      "file:///home/dast/src/curl/debug/new");
@@ -83,8 +79,9 @@
               speed_upload, total_time);
 
     }
     /* always cleanup */
     curl_easy_cleanup(curl);
   }
+  fclose(fd);
   return 0;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/fopen.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/fopen.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/fopen.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/fopen.c	2016-12-19 15:27:56.000000000 +0800
@@ -81,13 +81,13 @@
 
 /* exported functions */
 URL_FILE *url_fopen(const char *url, const char *operation);
 int url_fclose(URL_FILE *file);
 int url_feof(URL_FILE *file);
 size_t url_fread(void *ptr, size_t size, size_t nmemb, URL_FILE *file);
-char * url_fgets(char *ptr, size_t size, URL_FILE *file);
+char *url_fgets(char *ptr, size_t size, URL_FILE *file);
 void url_rewind(URL_FILE *file);
 
 /* we use a global one for convenience */
 CURLM *multi_handle;
 
 /* curl calls this routine to get more data */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/ftpupload.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/ftpupload.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/ftpupload.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/ftpupload.c	2016-12-19 15:27:56.000000000 +0800
@@ -124,13 +124,13 @@
     /* Check for errors */
     if(res != CURLE_OK)
       fprintf(stderr, "curl_easy_perform() failed: %s\n",
               curl_easy_strerror(res));
 
     /* clean up the FTP commands list */
-    curl_slist_free_all (headerlist);
+    curl_slist_free_all(headerlist);
 
     /* always cleanup */
     curl_easy_cleanup(curl);
   }
   fclose(hd_src); /* close the local file */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/ftpuploadresume.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/ftpuploadresume.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/ftpuploadresume.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/ftpuploadresume.c	2016-12-19 15:27:56.000000000 +0800
@@ -33,14 +33,14 @@
 #  error _snscanf requires MSVC 7.0 or later.
 #endif
 
 /* The MinGW headers are missing a few Win32 function definitions,
    you shouldn't need this if you use VC++ */
 #if defined(__MINGW32__) && !defined(__MINGW64__)
-int __cdecl _snscanf(const char * input, size_t length,
-                     const char * format, ...);
+int __cdecl _snscanf(const char *input, size_t length,
+                     const char *format, ...);
 #endif
 
 
 /* parse headers for Content-Length */
 size_t getcontentlengthfunc(void *ptr, size_t size, size_t nmemb, void *stream)
 {
@@ -74,13 +74,13 @@
   n = fread(ptr, size, nmemb, f) * size;
 
   return n;
 }
 
 
-int upload(CURL *curlhandle, const char * remotepath, const char * localpath,
+int upload(CURL *curlhandle, const char *remotepath, const char *localpath,
            long timeout, long tries)
 {
   FILE *f;
   long uploaded_len = 0;
   CURLcode r = CURLE_GOT_NOTHING;
   int c;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/ghiper.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/ghiper.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/ghiper.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/ghiper.c	2016-12-19 15:27:56.000000000 +0800
@@ -91,16 +91,17 @@
   GIOChannel *ch;
   guint ev;
   GlobalInfo *global;
 } SockInfo;
 
 /* Die if we get a bad CURLMcode somewhere */
-static void mcode_or_die(const char *where, CURLMcode code) {
+static void mcode_or_die(const char *where, CURLMcode code)
+{
   if(CURLM_OK != code) {
     const char *s;
-    switch (code) {
+    switch(code) {
     case     CURLM_BAD_HANDLE:         s="CURLM_BAD_HANDLE";         break;
     case     CURLM_BAD_EASY_HANDLE:    s="CURLM_BAD_EASY_HANDLE";    break;
     case     CURLM_OUT_OF_MEMORY:      s="CURLM_OUT_OF_MEMORY";      break;
     case     CURLM_INTERNAL_ERROR:     s="CURLM_INTERNAL_ERROR";     break;
     case     CURLM_BAD_SOCKET:         s="CURLM_BAD_SOCKET";         break;
     case     CURLM_UNKNOWN_OPTION:     s="CURLM_UNKNOWN_OPTION";     break;
@@ -203,13 +204,14 @@
     g_source_remove(f->ev);
   }
   g_free(f);
 }
 
 /* Assign information to a SockInfo structure */
-static void setsock(SockInfo*f, curl_socket_t s, CURL*e, int act, GlobalInfo*g)
+static void setsock(SockInfo *f, curl_socket_t s, CURL *e, int act,
+                    GlobalInfo *g)
 {
   GIOCondition kind =
     (act&CURL_POLL_IN?G_IO_IN:0)|(act&CURL_POLL_OUT?G_IO_OUT:0);
 
   f->sockfd = s;
   f->action = act;
@@ -267,14 +269,14 @@
   (void)ptr;
   (void)conn;
   return realsize;
 }
 
 /* CURLOPT_PROGRESSFUNCTION */
-static int prog_cb (void *p, double dltotal, double dlnow, double ult,
-                    double uln)
+static int prog_cb(void *p, double dltotal, double dlnow, double ult,
+                   double uln)
 {
   ConnInfo *conn = (ConnInfo *)p;
   MSG_OUT("Progress: %s (%g/%g)\n", conn->url, dlnow, dltotal);
   return 0;
 }
 
@@ -313,13 +315,13 @@
 
   /* note that the add_handle() will set a time-out to trigger very soon so
      that the necessary socket_action() call will be called by this app */
 }
 
 /* This gets called by glib whenever data is received from the fifo */
-static gboolean fifo_cb (GIOChannel *ch, GIOCondition condition, gpointer data)
+static gboolean fifo_cb(GIOChannel *ch, GIOCondition condition, gpointer data)
 {
 #define BUF_SIZE 1024
   gsize len, tp;
   gchar *buf, *tmp, *all=NULL;
   GIOStatus rv;
 
@@ -375,27 +377,27 @@
   int socket;
 
   if(lstat (fifo, &st) == 0) {
     if((st.st_mode & S_IFMT) == S_IFREG) {
       errno = EEXIST;
       perror("lstat");
-      exit (1);
+      exit(1);
     }
   }
 
-  unlink (fifo);
+  unlink(fifo);
   if(mkfifo (fifo, 0600) == -1) {
     perror("mkfifo");
-    exit (1);
+    exit(1);
   }
 
-  socket = open (fifo, O_RDWR | O_NONBLOCK, 0);
+  socket = open(fifo, O_RDWR | O_NONBLOCK, 0);
 
   if(socket == -1) {
     perror("open");
-    exit (1);
+    exit(1);
   }
   MSG_OUT("Now, pipe some URL's into > %s\n", fifo);
 
   return socket;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/hiperfifo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/hiperfifo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/hiperfifo.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/hiperfifo.c	2016-12-19 15:27:56.000000000 +0800
@@ -79,13 +79,13 @@
 {
   struct event_base *evbase;
   struct event *fifo_event;
   struct event *timer_event;
   CURLM *multi;
   int still_running;
-  FILE* input;
+  FILE *input;
 } GlobalInfo;
 
 
 /* Information associated with a specific easy handle */
 typedef struct _ConnInfo
 {
@@ -125,13 +125,13 @@
 
 /* Die if we get a bad CURLMcode somewhere */
 static void mcode_or_die(const char *where, CURLMcode code)
 {
   if(CURLM_OK != code) {
     const char *s;
-    switch (code) {
+    switch(code) {
       case     CURLM_BAD_HANDLE:         s="CURLM_BAD_HANDLE";         break;
       case     CURLM_BAD_EASY_HANDLE:    s="CURLM_BAD_EASY_HANDLE";    break;
       case     CURLM_OUT_OF_MEMORY:      s="CURLM_OUT_OF_MEMORY";      break;
       case     CURLM_INTERNAL_ERROR:     s="CURLM_INTERNAL_ERROR";     break;
       case     CURLM_UNKNOWN_OPTION:     s="CURLM_UNKNOWN_OPTION";     break;
       case     CURLM_LAST:               s="CURLM_LAST";               break;
@@ -227,13 +227,14 @@
   }
 }
 
 
 
 /* Assign information to a SockInfo structure */
-static void setsock(SockInfo*f, curl_socket_t s, CURL*e, int act, GlobalInfo*g)
+static void setsock(SockInfo *f, curl_socket_t s, CURL *e, int act,
+                    GlobalInfo *g)
 {
   int kind =
      (act&CURL_POLL_IN?EV_READ:0)|(act&CURL_POLL_OUT?EV_WRITE:0)|EV_PERSIST;
 
   f->sockfd = s;
   f->action = act;
@@ -296,14 +297,14 @@
   (void)conn;
   return realsize;
 }
 
 
 /* CURLOPT_PROGRESSFUNCTION */
-static int prog_cb (void *p, double dltotal, double dlnow, double ult,
-                    double uln)
+static int prog_cb(void *p, double dltotal, double dlnow, double ult,
+                   double uln)
 {
   ConnInfo *conn = (ConnInfo *)p;
   (void)ult;
   (void)uln;
 
   fprintf(MSG_OUT, "Progress: %s (%g/%g)\n", conn->url, dlnow, dltotal);
@@ -367,34 +368,34 @@
       break;
   } while(rv != EOF);
 }
 
 /* Create a named pipe and tell libevent to monitor it */
 static const char *fifo = "hiper.fifo";
-static int init_fifo (GlobalInfo *g)
+static int init_fifo(GlobalInfo *g)
 {
   struct stat st;
   curl_socket_t sockfd;
 
   fprintf(MSG_OUT, "Creating named pipe \"%s\"\n", fifo);
   if(lstat (fifo, &st) == 0) {
     if((st.st_mode & S_IFMT) == S_IFREG) {
       errno = EEXIST;
       perror("lstat");
-      exit (1);
+      exit(1);
     }
   }
   unlink(fifo);
   if(mkfifo (fifo, 0600) == -1) {
     perror("mkfifo");
-    exit (1);
+    exit(1);
   }
   sockfd = open(fifo, O_RDWR | O_NONBLOCK, 0);
   if(sockfd == -1) {
     perror("open");
-    exit (1);
+    exit(1);
   }
   g->input = fdopen(sockfd, "r");
 
   fprintf(MSG_OUT, "Now, pipe some URL's into > %s\n", fifo);
   g->fifo_event = event_new(g->evbase, sockfd, EV_READ|EV_PERSIST, fifo_cb, g);
   event_add(g->fifo_event, NULL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/http2-download.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/http2-download.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/http2-download.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/http2-download.c	2016-12-19 15:27:56.000000000 +0800
@@ -111,13 +111,13 @@
              void *userp)
 {
   const char *text;
   int num = hnd2num(handle);
   (void)handle; /* prevent compiler warning */
   (void)userp;
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "== %d Info: %s", num, data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/http2-serverpush.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/http2-serverpush.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/http2-serverpush.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/http2-serverpush.c	2016-12-19 15:27:56.000000000 +0800
@@ -90,13 +90,13 @@
              char *data, size_t size,
              void *userp)
 {
   const char *text;
   (void)handle; /* prevent compiler warning */
   (void)userp;
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "== Info: %s", data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/http2-upload.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/http2-upload.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/http2-upload.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/http2-upload.c	2016-12-19 15:27:56.000000000 +0800
@@ -130,13 +130,13 @@
   }
   secs = epoch_offset + tv.tv_sec;
   now = localtime(&secs);  /* not thread safe but we don't care */
   snprintf(timebuf, sizeof(timebuf), "%02d:%02d:%02d.%06ld",
            now->tm_hour, now->tm_min, now->tm_sec, (long)tv.tv_usec);
 
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "%s [%d] Info: %s", timebuf, num, data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/Makefile.netware /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/Makefile.netware
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/Makefile.netware	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/Makefile.netware	2016-12-19 15:27:56.000000000 +0800
@@ -57,13 +57,13 @@
 endif
 
 # Edit the vars below to change NLM target settings.
 TARGET  = examples
 VERSION	= $(LIBCURL_VERSION)
 COPYR	= Copyright (C) $(LIBCURL_COPYRIGHT_STR)
-DESCR	= cURL ($(LIBARCH))
+DESCR	= curl ($(LIBARCH))
 MTSAFE	= YES
 STACK	= 8192
 SCREEN	= Example Program
 # Comment the line below if you dont want to load protected automatically.
 # LDRING = 3
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-app.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-app.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-app.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-app.c	2016-12-19 15:27:56.000000000 +0800
@@ -153,13 +153,13 @@
       for(idx=0; idx<HANDLECOUNT; idx++) {
         found = (msg->easy_handle == handles[idx]);
         if(found)
           break;
       }
 
-      switch (idx) {
+      switch(idx) {
       case HTTP_HANDLE:
         printf("HTTP transfer completed with status %d\n", msg->data.result);
         break;
       case FTP_HANDLE:
         printf("FTP transfer completed with status %d\n", msg->data.result);
         break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-debugcallback.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-debugcallback.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-debugcallback.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-debugcallback.c	2016-12-19 15:27:56.000000000 +0800
@@ -93,13 +93,13 @@
 {
   const char *text;
 
   (void)userp;
   (void)handle; /* prevent compiler warning */
 
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "== Info: %s", data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-post.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-post.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-post.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-post.c	2016-12-19 15:27:56.000000000 +0800
@@ -162,10 +162,10 @@
     curl_easy_cleanup(curl);
 
     /* then cleanup the formpost chain */
     curl_formfree(formpost);
 
     /* free slist */
-    curl_slist_free_all (headerlist);
+    curl_slist_free_all(headerlist);
   }
   return 0;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-uv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-uv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/multi-uv.c	2016-10-31 06:48:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/multi-uv.c	2016-12-19 15:27:56.000000000 +0800
@@ -21,24 +21,18 @@
  ***************************************************************************/
 
 /* <DESC>
  * multi_socket API using libuv
  * </DESC>
  */
-/* Example application code using the multi socket interface to download
-   multiple files at once, but instead of using curl_multi_perform and
-   curl_multi_wait, which uses select(), we use libuv.
-   It supports epoll, kqueue, etc. on unixes and fast IO completion ports on
-   Windows, which means, it should be very fast on all platforms..
-
-   Written by Clemens Gruber, based on an outdated example from uvbook and
-   some tests from libuv.
+/* Example application using the multi socket interface to download multiple
+   files in parallel, powered by libuv.
 
    Requires libuv and (of course) libcurl.
 
-   See http://nikhilm.github.com/uvbook/ for more information on libuv.
+   See https://nikhilm.github.com/uvbook/ for more information on libuv.
 */
 
 #include <stdio.h>
 #include <stdlib.h>
 #include <uv.h>
 #include <curl/curl.h>
@@ -99,28 +92,34 @@
   curl_multi_add_handle(curl_handle, handle);
   fprintf(stderr, "Added download %s -> %s\n", url, filename);
 }
 
 static void check_multi_info(void)
 {
-  int running_handles;
   char *done_url;
   CURLMsg *message;
   int pending;
+  CURL *easy_handle;
   FILE *file;
 
   while((message = curl_multi_info_read(curl_handle, &pending))) {
     switch(message->msg) {
     case CURLMSG_DONE:
-      curl_easy_getinfo(message->easy_handle, CURLINFO_EFFECTIVE_URL,
-                        &done_url);
-      curl_easy_getinfo(message->easy_handle, CURLINFO_PRIVATE, &file);
+      /* Do not use message data after calling curl_multi_remove_handle() and
+         curl_easy_cleanup(). As per curl_multi_info_read() docs:
+         "WARNING: The data the returned pointer points to will not survive
+         calling curl_multi_cleanup, curl_multi_remove_handle or
+         curl_easy_cleanup." */
+      easy_handle = message->easy_handle;
+
+      curl_easy_getinfo(easy_handle, CURLINFO_EFFECTIVE_URL, &done_url);
+      curl_easy_getinfo(easy_handle, CURLINFO_PRIVATE, &file);
       printf("%s DONE\n", done_url);
 
-      curl_multi_remove_handle(curl_handle, message->easy_handle);
-      curl_easy_cleanup(message->easy_handle);
+      curl_multi_remove_handle(curl_handle, easy_handle);
+      curl_easy_cleanup(easy_handle);
       if(file) {
         fclose(file);
       }
       break;
 
     default:
@@ -132,15 +131,12 @@
 
 void curl_perform(uv_poll_t *req, int status, int events)
 {
   int running_handles;
   int flags = 0;
   curl_context_t *context;
-  char *done_url;
-  CURLMsg *message;
-  int pending;
 
   uv_timer_stop(&timeout);
 
   if(events & UV_READABLE)
     flags |= CURL_CSELECT_IN;
   if(events & UV_WRITABLE)
@@ -171,28 +167,29 @@
 }
 
 int handle_socket(CURL *easy, curl_socket_t s, int action, void *userp,
                   void *socketp)
 {
   curl_context_t *curl_context;
-  if(action == CURL_POLL_IN || action == CURL_POLL_OUT) {
-    if(socketp) {
-      curl_context = (curl_context_t *) socketp;
-    }
-    else {
-      curl_context = create_curl_context(s);
-    }
-    curl_multi_assign(curl_handle, s, (void *) curl_context);
-  }
+  int events = 0;
 
   switch(action) {
   case CURL_POLL_IN:
-    uv_poll_start(&curl_context->poll_handle, UV_READABLE, curl_perform);
-    break;
   case CURL_POLL_OUT:
-    uv_poll_start(&curl_context->poll_handle, UV_WRITABLE, curl_perform);
+  case CURL_POLL_INOUT:
+    curl_context = socketp ?
+      (curl_context_t *) socketp : create_curl_context(s);
+
+    curl_multi_assign(curl_handle, s, (void *) curl_context);
+
+    if(action != CURL_POLL_IN)
+      events |= UV_WRITABLE;
+    if(action != CURL_POLL_OUT)
+      events |= UV_READABLE;
+
+    uv_poll_start(&curl_context->poll_handle, events, curl_perform);
     break;
   case CURL_POLL_REMOVE:
     if(socketp) {
       uv_poll_stop(&((curl_context_t*)socketp)->poll_handle);
       destroy_curl_context((curl_context_t*) socketp);
       curl_multi_assign(curl_handle, s, NULL);
@@ -210,13 +207,13 @@
   loop = uv_default_loop();
 
   if(argc <= 1)
     return 0;
 
   if(curl_global_init(CURL_GLOBAL_ALL)) {
-    fprintf(stderr, "Could not init cURL\n");
+    fprintf(stderr, "Could not init curl\n");
     return 1;
   }
 
   uv_timer_init(loop, &timeout);
 
   curl_handle = curl_multi_init();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/opensslthreadlock.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/opensslthreadlock.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/opensslthreadlock.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/opensslthreadlock.c	2016-12-19 15:27:56.000000000 +0800
@@ -49,13 +49,13 @@
   /* exit(-1); */
 }
 
 /* This array will store all of the mutexes available to OpenSSL. */
 static MUTEX_TYPE *mutex_buf= NULL;
 
-static void locking_function(int mode, int n, const char * file, int line)
+static void locking_function(int mode, int n, const char *file, int line)
 {
   if(mode & CRYPTO_LOCK)
     MUTEX_LOCK(mutex_buf[n]);
   else
     MUTEX_UNLOCK(mutex_buf[n]);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/postit2.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/postit2.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/postit2.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/postit2.c	2016-12-19 15:27:56.000000000 +0800
@@ -98,10 +98,10 @@
     /* always cleanup */
     curl_easy_cleanup(curl);
 
     /* then cleanup the formpost chain */
     curl_formfree(formpost);
     /* free slist */
-    curl_slist_free_all (headerlist);
+    curl_slist_free_all(headerlist);
   }
   return 0;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/rtsp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/rtsp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/rtsp.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/rtsp.c	2016-12-19 15:27:56.000000000 +0800
@@ -58,19 +58,21 @@
 
 #include <curl/curl.h>
 
 #define VERSION_STR  "V1.0"
 
 /* error handling macros */
-#define my_curl_easy_setopt(A, B, C) \
-  if((res = curl_easy_setopt((A), (B), (C))) != CURLE_OK) \
+#define my_curl_easy_setopt(A, B, C)                             \
+  res = curl_easy_setopt((A), (B), (C));                         \
+  if(!res)                                                       \
     fprintf(stderr, "curl_easy_setopt(%s, %s, %s) failed: %d\n", \
             #A, #B, #C, res);
 
-#define my_curl_easy_perform(A) \
-  if((res = curl_easy_perform((A))) != CURLE_OK) \
+#define my_curl_easy_perform(A)                                     \
+  res = curl_easy_perform(A);                                       \
+  if(!res)                                                          \
     fprintf(stderr, "curl_easy_perform(%s) failed: %d\n", #A, res);
 
 
 /* send RTSP OPTIONS request */
 static void rtsp_options(CURL *curl, const char *uri)
 {
@@ -185,13 +187,13 @@
   const char *range = "0.000-";
   int rc = EXIT_SUCCESS;
   char *base_name = NULL;
 
   printf("\nRTSP request %s\n", VERSION_STR);
   printf("    Project web site: http://code.google.com/p/rtsprequest/\n");
-  printf("    Requires cURL V7.20 or greater\n\n");
+  printf("    Requires curl V7.20 or greater\n\n");
 
   /* check command line */
   if((argc != 2) && (argc != 3)) {
     base_name = strrchr(argv[0], '/');
     if(base_name == NULL) {
       base_name = strrchr(argv[0], '\\');
@@ -223,13 +225,13 @@
 
     /* initialize curl */
     res = curl_global_init(CURL_GLOBAL_ALL);
     if(res == CURLE_OK) {
       curl_version_info_data *data = curl_version_info(CURLVERSION_NOW);
       CURL *curl;
-      fprintf(stderr, "    cURL V%s loaded\n", data->version);
+      fprintf(stderr, "    curl V%s loaded\n", data->version);
 
       /* initialize this curl session */
       curl = curl_easy_init();
       if(curl != NULL) {
         my_curl_easy_setopt(curl, CURLOPT_VERBOSE, 0L);
         my_curl_easy_setopt(curl, CURLOPT_NOPROGRESS, 1L);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/sendrecv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/sendrecv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/sendrecv.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/sendrecv.c	2016-12-19 15:27:56.000000000 +0800
@@ -59,16 +59,15 @@
 int main(void)
 {
   CURL *curl;
   CURLcode res;
   /* Minimalistic http request */
   const char *request = "GET / HTTP/1.0\r\nHost: example.com\r\n\r\n";
-  curl_socket_t sockfd; /* socket */
-  long sockextr;
-  size_t iolen;
-  curl_off_t nread;
+  size_t request_len = strlen(request);
+  curl_socket_t sockfd;
+  size_t nsent_total = 0;
 
   /* A general note of caution here: if you're using curl_easy_recv() or
      curl_easy_send() to implement HTTP or _any_ other protocol libcurl
      supports "natively", you're doing it wrong and you should stop.
 
      This example uses HTTP only to show how to use this API, it does not
@@ -79,60 +78,82 @@
   if(curl) {
     curl_easy_setopt(curl, CURLOPT_URL, "http://example.com");
     /* Do not do the transfer - only connect to host */
     curl_easy_setopt(curl, CURLOPT_CONNECT_ONLY, 1L);
     res = curl_easy_perform(curl);
 
-    if(CURLE_OK != res) {
-      printf("Error: %s\n", strerror(res));
+    if(res != CURLE_OK) {
+      printf("Error: %s\n", curl_easy_strerror(res));
       return 1;
     }
 
-    /* Extract the socket from the curl handle - we'll need it for waiting.
-     * Note that this API takes a pointer to a 'long' while we use
-     * curl_socket_t for sockets otherwise.
-     */
-    res = curl_easy_getinfo(curl, CURLINFO_LASTSOCKET, &sockextr);
+    /* Extract the socket from the curl handle - we'll need it for waiting. */
+    res = curl_easy_getinfo(curl, CURLINFO_ACTIVESOCKET, &sockfd);
 
-    if(CURLE_OK != res) {
+    if(res != CURLE_OK) {
       printf("Error: %s\n", curl_easy_strerror(res));
       return 1;
     }
 
-    sockfd = (curl_socket_t)sockextr;
+    printf("Sending request.\n");
 
-    /* wait for the socket to become ready for sending */
-    if(!wait_on_socket(sockfd, 0, 60000L)) {
-      printf("Error: timeout.\n");
-      return 1;
-    }
+    do {
+      /* Warning: This example program may loop indefinitely.
+       * A production-quality program must define a timeout and exit this loop
+       * as soon as the timeout has expired. */
+      size_t nsent;
+      do {
+        nsent = 0;
+        res = curl_easy_send(curl, request + nsent_total,
+            request_len - nsent_total, &nsent);
+        nsent_total += nsent;
+
+        if(res == CURLE_AGAIN && !wait_on_socket(sockfd, 0, 60000L)) {
+          printf("Error: timeout.\n");
+          return 1;
+        }
+      } while(res == CURLE_AGAIN);
+
+      if(res != CURLE_OK) {
+        printf("Error: %s\n", curl_easy_strerror(res));
+        return 1;
+      }
 
-    puts("Sending request.");
-    /* Send the request. Real applications should check the iolen
-     * to see if all the request has been sent */
-    res = curl_easy_send(curl, request, strlen(request), &iolen);
+      printf("Sent %" CURL_FORMAT_CURL_OFF_T " bytes.\n",
+        (curl_off_t)nsent);
 
-    if(CURLE_OK != res) {
-      printf("Error: %s\n", curl_easy_strerror(res));
-      return 1;
-    }
-    puts("Reading response.");
+    } while(nsent_total < request_len);
+
+    printf("Reading response.\n");
 
-    /* read the response */
     for(;;) {
+      /* Warning: This example program may loop indefinitely (see above). */
       char buf[1024];
+      size_t nread;
+      do {
+        nread = 0;
+        res = curl_easy_recv(curl, buf, sizeof(buf), &nread);
+
+        if(res == CURLE_AGAIN && !wait_on_socket(sockfd, 1, 60000L)) {
+          printf("Error: timeout.\n");
+          return 1;
+        }
+      } while(res == CURLE_AGAIN);
 
-      wait_on_socket(sockfd, 1, 60000L);
-      res = curl_easy_recv(curl, buf, 1024, &iolen);
-
-      if(CURLE_OK != res)
+      if(res != CURLE_OK) {
+        printf("Error: %s\n", curl_easy_strerror(res));
         break;
+      }
 
-      nread = (curl_off_t)iolen;
+      if(nread == 0) {
+        /* end of the response */
+        break;
+      }
 
-      printf("Received %" CURL_FORMAT_CURL_OFF_T " bytes.\n", nread);
+      printf("Received %" CURL_FORMAT_CURL_OFF_T " bytes.\n",
+        (curl_off_t)nread);
     }
 
     /* always cleanup */
     curl_easy_cleanup(curl);
   }
   return 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/sessioninfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/sessioninfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/sessioninfo.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/sessioninfo.c	2016-12-19 15:27:56.000000000 +0800
@@ -21,13 +21,13 @@
  ***************************************************************************/
 /* <DESC>
  * Uses the CURLINFO_TLS_SESSION data.
  * </DESC>
  */
 
-/* Note that this example currently requires cURL to be linked against
+/* Note that this example currently requires curl to be linked against
    GnuTLS (and this program must also be linked against -lgnutls). */
 
 #include <stdio.h>
 
 #include <curl/curl.h>
 #include <gnutls/gnutls.h>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/smooth-gtk-thread.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/smooth-gtk-thread.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/smooth-gtk-thread.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/smooth-gtk-thread.c	2016-12-19 15:27:56.000000000 +0800
@@ -102,26 +102,26 @@
 
       fclose(outfile);
       printf("fclose\n");
 
       curl_easy_cleanup(curl);
     }
-    g_free (http);
+    g_free(http);
 
     /* Adds more latency, testing the mutex.*/
     sleep(1);
 
   } /* end while */
   return NULL;
 }
 
 
 gboolean pulse_bar(gpointer data)
 {
   gdk_threads_enter();
-  gtk_progress_bar_pulse (GTK_PROGRESS_BAR (data));
+  gtk_progress_bar_pulse(GTK_PROGRESS_BAR (data));
   gdk_threads_leave();
 
   /* Return true so the function will be called again;
    * returning false removes this timeout function.
    */
   return TRUE;
@@ -179,14 +179,14 @@
 
   /* Must initialize libcurl before any threads are started */
   curl_global_init(CURL_GLOBAL_ALL);
 
   /* Init thread */
   g_thread_init(NULL);
-  gdk_threads_init ();
-  gdk_threads_enter ();
+  gdk_threads_init();
+  gdk_threads_enter();
 
   gtk_init(&argc, &argv);
 
   /* Base window */
   top_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
 
@@ -200,15 +200,15 @@
   gtk_frame_set_shadow_type(GTK_FRAME(inside_frame), GTK_SHADOW_IN);
   gtk_container_set_border_width(GTK_CONTAINER(inside_frame), 5);
   gtk_container_add(GTK_CONTAINER(outside_frame), inside_frame);
 
   /* Progress bar */
   progress_bar = gtk_progress_bar_new();
-  gtk_progress_bar_pulse (GTK_PROGRESS_BAR (progress_bar));
+  gtk_progress_bar_pulse(GTK_PROGRESS_BAR (progress_bar));
   /* Make uniform pulsing */
-  gint pulse_ref = g_timeout_add (300, pulse_bar, progress_bar);
+  gint pulse_ref = g_timeout_add(300, pulse_bar, progress_bar);
   g_object_set_data(G_OBJECT(progress_bar), "pulse_id",
                     GINT_TO_POINTER(pulse_ref));
   gtk_container_add(GTK_CONTAINER(inside_frame), progress_bar);
 
   gtk_widget_show_all(top_window);
   printf("gtk_widget_show_all\n");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/synctime.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/synctime.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/examples/synctime.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/examples/synctime.c	2016-12-19 15:27:56.000000000 +0800
@@ -149,15 +149,15 @@
       *TmpStr1 = 0;
       *TmpStr2 = 0;
       if(strlen((char *)(ptr)) > 50) /* Can prevent buffer overflow to
                                          TmpStr1 & 2? */
         AutoSyncTime = 0;
       else {
-        RetVal = sscanf ((char *)(ptr), "Date: %s %hu %s %hu %hu:%hu:%hu",
-                         TmpStr1, &SYSTime.wDay, TmpStr2, &SYSTime.wYear,
-                         &SYSTime.wHour, &SYSTime.wMinute, &SYSTime.wSecond);
+        RetVal = sscanf((char *)(ptr), "Date: %s %hu %s %hu %hu:%hu:%hu",
+                        TmpStr1, &SYSTime.wDay, TmpStr2, &SYSTime.wYear,
+                        &SYSTime.wHour, &SYSTime.wMinute, &SYSTime.wSecond);
 
         if(RetVal == 7) {
           SYSTime.wMilliseconds = 500;    /* adjust to midpoint, 0.5 sec */
           for(i=0; i<12; i++) {
             if(strcmp(MthStr[i], TmpStr2) == 0) {
               SYSTime.wMonth = i+1;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/HISTORY.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/HISTORY.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/HISTORY.md	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/HISTORY.md	2016-12-19 15:27:56.000000000 +0800
@@ -1,7 +1,7 @@
-How cURL Became Like This
+How curl Became Like This
 =========================
 
 Towards the end of 1996, Daniel Stenberg was spending time writing an IRC bot
 for an Amiga related channel on EFnet. He then came up with the idea to make
 currency-exchange calculations available to Internet Relay Chat (IRC)
 users. All the necessary data are published on the Web; he just needed to
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/HTTP2.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/HTTP2.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/HTTP2.md	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/HTTP2.md	2016-12-19 15:27:56.000000000 +0800
@@ -117,10 +117,10 @@
 -------------------------
 
 Alt-Svc is an extension with a corresponding frame (ALTSVC) in HTTP/2 that
 tells the client about an alternative "route" to the same content for the same
 origin server that you get the response from. A browser or long-living client
 can use that hint to create a new connection asynchronously.  For libcurl, we
-may introduce a way to bring such clues to the applicaton and/or let a
+may introduce a way to bring such clues to the application and/or let a
 subsequent request use the alternate route automatically.
 
 [Detailed in RFC 7838](https://tools.ietf.org/html/rfc7838)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/INTERNALS.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/INTERNALS.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/INTERNALS.md	2016-10-31 17:41:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/INTERNALS.md	2016-12-19 15:27:56.000000000 +0800
@@ -970,13 +970,13 @@
   "struct `Curl_handler` `Curl_handler_[protocol]`" declared. In url.c there's
   then the main array with all individual `Curl_handler` structs pointed to
   from a single array which is scanned through when a URL is given to libcurl
   to work with.
 
   `->scheme` is the URL scheme name, usually spelled out in uppercase. That's
-  "HTTP" or "FTP" etc. SSL versions of the protcol need its own `Curl_handler`
+  "HTTP" or "FTP" etc. SSL versions of the protocol need its own `Curl_handler`
   setup so HTTPS separate from HTTP.
 
   `->setup_connection` is called to allow the protocol code to allocate
   protocol specific data that then gets associated with that `Curl_easy` for
   the rest of this transfer. It gets freed again at the end of the transfer.
   It will be called before the 'connectdata' for the transfer has been
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/KNOWN_BUGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/KNOWN_BUGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/KNOWN_BUGS	2016-10-31 06:48:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/KNOWN_BUGS	2016-12-19 15:27:56.000000000 +0800
@@ -15,13 +15,12 @@
  1.1 CURLFORM_CONTENTLEN in an array
  1.2 Disabling HTTP Pipelining
  1.3 STARTTRANSFER time is wrong for HTTP POSTs
  1.4 multipart formposts file name encoding
  1.5 Expect-100 meets 417
  1.6 Unnecessary close when 401 received waiting for 100
- 1.7 CONNECT response larger than 16KB
  1.8 DNS timing is wrong for HTTP redirects
  1.9 HTTP/2 frames while in the connection pool kill reuse
  1.10 Strips trailing dot from host name
  1.11 CURLOPT_SEEKFUNCTION not called with CURLFORM_STREAM
  1.12 HTTP/2 server push enabled when no pushes can be accepted
 
@@ -141,19 +140,12 @@
 1.6 Unnecessary close when 401 received waiting for 100
 
  libcurl closes the connection if an HTTP 401 reply is received while it is
  waiting for the the 100-continue response.
  https://curl.haxx.se/mail/lib-2008-08/0462.html
 
-1.7 CONNECT response larger than 16KB
-
- If a CONNECT response-headers are larger than BUFSIZE (16KB) when the
- connection is meant to be kept alive (like for NTLM proxy auth), the function
- will return prematurely and will confuse the rest of the HTTP protocol
- code. This should be very rare.
-
 1.8 DNS timing is wrong for HTTP redirects
 
  When extracting timing information after HTTP redirects, only the last
  transfer's results are returned and not the totals:
  https://github.com/curl/curl/issues/522
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_getinfo.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_getinfo.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_getinfo.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_getinfo.3	2016-12-19 15:27:56.000000000 +0800
@@ -101,12 +101,15 @@
 .IP CURLINFO_REQUEST_SIZE
 Number of bytes sent in the issued HTTP requests.
 See \fICURLINFO_REQUEST_SIZE(3)\fP
 .IP CURLINFO_SSL_VERIFYRESULT
 Certificate verification result.
 See \fICURLINFO_SSL_VERIFYRESULT(3)\fP
+.IP CURLINFO_PROXY_SSL_VERIFYRESULT
+Proxy certificate verification result.
+See \fICURLINFO_PROXY_SSL_VERIFYRESULT(3)\fP
 .IP CURLINFO_SSL_ENGINES
 A list of OpenSSL crypto engines.
 See \fICURLINFO_SSL_ENGINES(3)\fP
 .IP CURLINFO_CONTENT_LENGTH_DOWNLOAD
 Content length from the Content-Length header.
 See \fICURLINFO_CONTENT_LENGTH_DOWNLOAD(3)\fP
@@ -177,12 +180,18 @@
 .IP CURLINFO_RTSP_SERVER_CSEQ
 RTSP CSeq that will next be expected.
 See \fICURLINFO_RTSP_SERVER_CSEQ(3)\fP
 .IP CURLINFO_RTSP_CSEQ_RECV
 RTSP CSeq last received.
 See \fICURLINFO_RTSP_CSEQ_RECV(3)\fP
+.IP CURLINFO_PROTOCOL
+The protocol used for the connection. (Added in 7.52.0)
+See \fICURLINFO_PROTOCOL(3)\fP
+.IP CURLINFO_SCHEME
+The scheme used for the connection. (Added in 7.52.0)
+See \fICURLINFO_SCHEME(3)\fP
 .SH TIMES
 .nf
 An overview of the six time values available from curl_easy_getinfo()
 
 curl_easy_perform()
     |
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_recv.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_recv.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_recv.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_recv.3	2016-12-19 15:27:56.000000000 +0800
@@ -43,33 +43,42 @@
 
 To establish the connection, set \fICURLOPT_CONNECT_ONLY(3)\fP option before
 calling \fIcurl_easy_perform(3)\fP or \fIcurl_multi_perform(3)\fP. Note that
 \fIcurl_easy_recv(3)\fP does not work on connections that were created without
 this option.
 
-You must ensure that the socket has data to read before calling
-\fIcurl_easy_recv(3)\fP, otherwise the call will return \fBCURLE_AGAIN\fP -
-the socket is used in non-blocking mode internally. Use
-\fIcurl_easy_getinfo(3)\fP with \fICURLINFO_ACTIVESOCKET(3)\fP to obtain the
-socket; use your operating system facilities like \fIselect(2)\fP to check if
-it has any data you can read.
+The call will return \fBCURLE_AGAIN\fP if there is no data to read - the
+socket is used in non-blocking mode internally. When \fBCURLE_AGAIN\fP is
+returned, use your operating system facilities like \fIselect(2)\fP to wait
+for data. The socket may be obtained using \fIcurl_easy_getinfo(3)\fP with
+\fICURLINFO_ACTIVESOCKET(3)\fP.
+
+Wait on the socket only if \fIcurl_easy_recv(3)\fP returns \fBCURLE_AGAIN\fP.
+The reason for this is libcurl or the SSL library may internally cache some
+data, therefore you should call \fIcurl_easy_recv(3)\fP until all data is
+read which would include any cached data.
+
+Furthermore if you wait on the socket and it tells you there is data to read,
+\fIcurl_easy_recv(3)\fP may return \fBCURLE_AGAIN\fP if the only data that was
+read was for internal SSL processing, and no other data is available.
+
 .SH AVAILABILITY
 Added in 7.18.2.
 .SH RETURN VALUE
 On success, returns \fBCURLE_OK\fP, stores the received data into
 \fBbuffer\fP, and the number of bytes it actually read into \fB*n\fP.
 
 On failure, returns the appropriate error code.
 
-If there is no data to read, the function returns \fBCURLE_AGAIN\fP. Use your
-operating system facilities to wait until the data is ready, and retry.
+The function may return \fBCURLE_AGAIN\fP. In this case, use your operating
+system facilities to wait until data can be read, and retry.
 
-Reading exactly 0 bytes would indicate a closed connection.
+Reading exactly 0 bytes indicates a closed connection.
 
 If there's no socket available to use from the previous transfer, this function
-returns CURLE_UNSUPPORTED_PROTOCOL.
+returns \fBCURLE_UNSUPPORTED_PROTOCOL\fP.
 .SH EXAMPLE
 See \fBsendrecv.c\fP in \fBdocs/examples\fP directory for usage example.
 .SH "SEE ALSO"
 .BR curl_easy_setopt "(3), " curl_easy_perform "(3), "
 .BR curl_easy_getinfo "(3), "
 .BR curl_easy_send "(3) "
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_send.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_send.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_send.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_send.3	2016-12-19 15:27:56.000000000 +0800
@@ -37,32 +37,39 @@
 connection set-up.
 
 \fBbuffer\fP is a pointer to the data of length \fBbuflen\fP that you want sent.
 The variable \fBn\fP points to will receive the number of sent bytes.
 
 To establish the connection, set \fICURLOPT_CONNECT_ONLY(3)\fP option before
-calling \fIcurl_easy_perform(3)\fP or \fIcurl_multi_perform()\fP. Note that
+calling \fIcurl_easy_perform(3)\fP or \fIcurl_multi_perform(3)\fP. Note that
 \fIcurl_easy_send(3)\fP will not work on connections that were created without
 this option.
 
-You must ensure that the socket is writable before calling
-\fIcurl_easy_send(3)\fP, otherwise the call will return \fBCURLE_AGAIN\fP -
-the socket is used in non-blocking mode internally. Use
-\fIcurl_easy_getinfo(3)\fP with \fICURLINFO_ACTIVESOCKET(3)\fP to obtain the
-socket; use your operating system facilities like \fIselect(2)\fP to check if
-it can be written to.
+The call will return \fBCURLE_AGAIN\fP if it's not possible to send data right
+now - the socket is used in non-blocking mode internally. When
+\fBCURLE_AGAIN\fP is returned, use your operating system facilities like
+\fIselect(2)\fP to wait until the socket is writable. The socket may be
+obtained using \fIcurl_easy_getinfo(3)\fP with \fICURLINFO_ACTIVESOCKET(3)\fP.
+
+Furthermore if you wait on the socket and it tells you it's writable,
+\fIcurl_easy_send(3)\fP may return \fBCURLE_AGAIN\fP if the only data that was
+sent was for internal SSL processing, and no other data could be sent.
+
 .SH AVAILABILITY
 Added in 7.18.2.
 .SH RETURN VALUE
 On success, returns \fBCURLE_OK\fP and stores the number of bytes actually
 sent into \fB*n\fP. Note that this may very well be less than the amount you
 wanted to send.
 
 On failure, returns the appropriate error code.
 
+This function may return \fBCURLE_AGAIN\fP. In this case, use your operating
+system facilities to wait until the socket is writable, and retry.
+
 If there's no socket available to use from the previous transfer, this function
-returns CURLE_UNSUPPORTED_PROTOCOL.
+returns \fBCURLE_UNSUPPORTED_PROTOCOL\fP.
 .SH EXAMPLE
 See \fBsendrecv.c\fP in \fBdocs/examples\fP directory for usage example.
 .SH "SEE ALSO"
 .BR curl_easy_setopt "(3), " curl_easy_perform "(3), " curl_easy_getinfo "(3), "
 .BR curl_easy_recv "(3) "
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_setopt.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_setopt.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_easy_setopt.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_easy_setopt.3	2016-12-19 15:27:56.000000000 +0800
@@ -156,12 +156,14 @@
 .IP CURLOPT_REDIR_PROTOCOLS
 Protocols to allow redirects to. See \fICURLOPT_REDIR_PROTOCOLS(3)\fP
 .IP CURLOPT_DEFAULT_PROTOCOL
 Default protocol. See \fICURLOPT_DEFAULT_PROTOCOL(3)\fP
 .IP CURLOPT_PROXY
 Proxy to use. See \fICURLOPT_PROXY(3)\fP
+.IP CURLOPT_PRE_PROXY
+Socks proxy to use. See \fICURLOPT_PRE_PROXY(3)\fP
 .IP CURLOPT_PROXYPORT
 Proxy port to use. See \fICURLOPT_PROXYPORT(3)\fP
 .IP CURLOPT_PROXYTYPE
 Proxy type. See \fICURLOPT_PROXYTYPE(3)\fP
 .IP CURLOPT_NOPROXY
 Filter out hosts from proxy use. \fICURLOPT_NOPROXY(3)\fP
@@ -225,16 +227,22 @@
 .IP CURLOPT_PROXYPASSWORD
 Proxy password. See \fICURLOPT_PROXYPASSWORD(3)\fP
 .IP CURLOPT_HTTPAUTH
 HTTP server authentication methods. See \fICURLOPT_HTTPAUTH(3)\fP
 .IP CURLOPT_TLSAUTH_USERNAME
 TLS authentication user name. See \fICURLOPT_TLSAUTH_USERNAME(3)\fP
+.IP CURLOPT_PROXY_TLSAUTH_USERNAME
+Proxy TLS authentication user name. See \fICURLOPT_PROXY_TLSAUTH_USERNAME(3)\fP
 .IP CURLOPT_TLSAUTH_PASSWORD
 TLS authentication password. See \fICURLOPT_TLSAUTH_PASSWORD(3)\fP
+.IP CURLOPT_PROXY_TLSAUTH_PASSWORD
+Proxy TLS authentication password. See \fICURLOPT_PROXY_TLSAUTH_PASSWORD(3)\fP
 .IP CURLOPT_TLSAUTH_TYPE
 TLS authentication methods. See \fICURLOPT_TLSAUTH_TYPE(3)\fP
+.IP CURLOPT_PROXY_TLSAUTH_TYPE
+Proxy TLS authentication methods. See \fICURLOPT_PROXY_TLSAUTH_TYPE(3)\fP
 .IP CURLOPT_PROXYAUTH
 HTTP proxy authentication methods. See \fICURLOPT_PROXYAUTH(3)\fP
 .IP CURLOPT_SASL_IR
 Enable SASL initial response. See \fICURLOPT_SASL_IR(3)\fP
 .IP CURLOPT_XOAUTH2_BEARER
 OAuth2 bearer token. See \fICURLOPT_XOAUTH2_BEARER(3)\fP
@@ -444,60 +452,89 @@
 Preferred DNS servers. See \fICURLOPT_DNS_SERVERS(3)\fP
 .IP CURLOPT_ACCEPTTIMEOUT_MS
 Timeout for waiting for the server's connect back to be accepted. See \fICURLOPT_ACCEPTTIMEOUT_MS(3)\fP
 .SH SSL and SECURITY OPTIONS
 .IP CURLOPT_SSLCERT
 Client cert. See \fICURLOPT_SSLCERT(3)\fP
+.IP CURLOPT_PROXY_SSLCERT
+Proxy client cert. See \fICURLOPT_PROXY_SSLCERT(3)\fP
 .IP CURLOPT_SSLCERTTYPE
 Client cert type.  See \fICURLOPT_SSLCERTTYPE(3)\fP
+.IP CURLOPT_PROXY_SSLCERTTYPE
+Proxy client cert type.  See \fICURLOPT_PROXY_SSLCERTTYPE(3)\fP
 .IP CURLOPT_SSLKEY
 Client key. See \fICURLOPT_SSLKEY(3)\fP
+.IP CURLOPT_PROXY_SSLKEY
+Proxy client key. See \fICURLOPT_PROXY_SSLKEY(3)\fP
 .IP CURLOPT_SSLKEYTYPE
 Client key type. See \fICURLOPT_SSLKEYTYPE(3)\fP
+.IP CURLOPT_PROXY_SSLKEYTYPE
+Proxy client key type. See \fICURLOPT_PROXY_SSLKEYTYPE(3)\fP
 .IP CURLOPT_KEYPASSWD
 Client key password. See \fICURLOPT_KEYPASSWD(3)\fP
+.IP CURLOPT_PROXY_KEYPASSWD
+Proxy client key password. See \fICURLOPT_PROXY_KEYPASSWD(3)\fP
 .IP CURLOPT_SSL_ENABLE_ALPN
 Enable use of ALPN. See \fICURLOPT_SSL_ENABLE_ALPN(3)\fP
 .IP CURLOPT_SSL_ENABLE_NPN
 Enable use of NPN. See \fICURLOPT_SSL_ENABLE_NPN(3)\fP
 .IP CURLOPT_SSLENGINE
 Use identifier with SSL engine. See \fICURLOPT_SSLENGINE(3)\fP
 .IP CURLOPT_SSLENGINE_DEFAULT
 Default SSL engine. See \fICURLOPT_SSLENGINE_DEFAULT(3)\fP
 .IP CURLOPT_SSL_FALSESTART
 Enable TLS False Start. See \fICURLOPT_SSL_FALSESTART(3)\fP
 .IP CURLOPT_SSLVERSION
 SSL version to use. See \fICURLOPT_SSLVERSION(3)\fP
+.IP CURLOPT_PROXY_SSLVERSION
+Proxy SSL version to use. See \fICURLOPT_PROXY_SSLVERSION(3)\fP
 .IP CURLOPT_SSL_VERIFYHOST
 Verify the host name in the SSL certificate. See \fICURLOPT_SSL_VERIFYHOST(3)\fP
+.IP CURLOPT_PROXY_SSL_VERIFYHOST
+Verify the host name in the proxy SSL certificate. See \fICURLOPT_PROXY_SSL_VERIFYHOST(3)\fP
 .IP CURLOPT_SSL_VERIFYPEER
 Verify the SSL certificate. See \fICURLOPT_SSL_VERIFYPEER(3)\fP
+.IP CURLOPT_PROXY_SSL_VERIFYPEER
+Verify the proxy SSL certificate. See \fICURLOPT_PROXY_SSL_VERIFYPEER(3)\fP
 .IP CURLOPT_SSL_VERIFYSTATUS
 Verify the SSL certificate's status. See \fICURLOPT_SSL_VERIFYSTATUS(3)\fP
 .IP CURLOPT_CAINFO
 CA cert bundle. See \fICURLOPT_CAINFO(3)\fP
+.IP CURLOPT_PROXY_CAINFO
+Proxy CA cert bundle. See \fICURLOPT_PROXY_CAINFO(3)\fP
 .IP CURLOPT_ISSUERCERT
 Issuer certificate. See \fICURLOPT_ISSUERCERT(3)\fP
 .IP CURLOPT_CAPATH
 Path to CA cert bundle. See \fICURLOPT_CAPATH(3)\fP
+.IP CURLOPT_PROXY_CAPATH
+Path to proxy CA cert bundle. See \fICURLOPT_PROXY_CAPATH(3)\fP
 .IP CURLOPT_CRLFILE
 Certificate Revocation List. See \fICURLOPT_CRLFILE(3)\fP
+.IP CURLOPT_PROXY_CRLFILE
+Proxy Certificate Revocation List. See \fICURLOPT_PROXY_CRLFILE(3)\fP
 .IP CURLOPT_CERTINFO
 Extract certificate info. See \fICURLOPT_CERTINFO(3)\fP
 .IP CURLOPT_PINNEDPUBLICKEY
 Set pinned SSL public key . See \fICURLOPT_PINNEDPUBLICKEY(3)\fP
+.IP CURLOPT_PROXY_PINNEDPUBLICKEY
+Set the proxy's pinned SSL public key. See
+\fICURLOPT_PROXY_PINNEDPUBLICKEY(3)\fP
 .IP CURLOPT_RANDOM_FILE
 Provide source for entropy random data. See \fICURLOPT_RANDOM_FILE(3)\fP
 .IP CURLOPT_EGDSOCKET
 Identify EGD socket for entropy. See \fICURLOPT_EGDSOCKET(3)\fP
 .IP CURLOPT_SSL_CIPHER_LIST
 Ciphers to use. See \fICURLOPT_SSL_CIPHER_LIST(3)\fP
+.IP CURLOPT_PROXY_SSL_CIPHER_LIST
+Proxy ciphers to use. See \fICURLOPT_PROXY_SSL_CIPHER_LIST(3)\fP
 .IP CURLOPT_SSL_SESSIONID_CACHE
 Disable SSL session-id cache. See \fICURLOPT_SSL_SESSIONID_CACHE(3)\fP
 .IP CURLOPT_SSL_OPTIONS
 Control SSL behavior. See \fICURLOPT_SSL_OPTIONS(3)\fP
+.IP CURLOPT_PROXY_SSL_OPTIONS
+Control proxy SSL behavior. See \fICURLOPT_PROXY_SSL_OPTIONS(3)\fP
 .IP CURLOPT_KRBLEVEL
 Kerberos security level. See \fICURLOPT_KRBLEVEL(3)\fP
 .IP CURLOPT_GSSAPI_DELEGATION
 Disable GSS-API delegation. See \fICURLOPT_GSSAPI_DELEGATION(3)\fP
 .SH SSH OPTIONS
 .IP CURLOPT_SSH_AUTH_TYPES
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_formadd.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_formadd.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_formadd.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_formadd.3	2016-12-19 15:27:56.000000000 +0800
@@ -102,24 +102,28 @@
 the contents to figure out the size. If you really want to send a zero byte
 content then you must make sure strlen() on the data pointer returns zero.
 .IP CURLFORM_FILECONTENT
 followed by a filename, causes that file to be read and its contents used
 as data in this part. This part does \fInot\fP automatically become a file
 upload part simply because its data was read from a file.
+
+The specified file needs to kept around until the associated transfer is done.
 .IP CURLFORM_FILE
 followed by a filename, makes this part a file upload part. It sets the
 \fIfilename\fP field to the basename of the provided filename, it reads the
 contents of the file and passes them as data and sets the content-type if the
 given file match one of the internally known file extensions.  For
 \fBCURLFORM_FILE\fP the user may send one or more files in one part by
 providing multiple \fBCURLFORM_FILE\fP arguments each followed by the filename
 (and each \fICURLFORM_FILE\fP is allowed to have a
 \fICURLFORM_CONTENTTYPE\fP).
 
 The given upload file has to exist in its full in the file system already when
 the upload starts, as libcurl needs to read the correct file size beforehand.
+
+The specified file needs to kept around until the associated transfer is done.
 .IP CURLFORM_CONTENTTYPE
 is used in combination with \fICURLFORM_FILE\fP. Followed by a pointer to a
 string which provides the content-type for this part, possibly instead of an
 internally chosen one.
 .IP CURLFORM_FILENAME
 is used in combination with \fICURLFORM_FILE\fP. Followed by a pointer to a
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_multi_socket.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_multi_socket.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_multi_socket.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_multi_socket.3	2016-12-19 15:27:56.000000000 +0800
@@ -115,13 +115,13 @@
 that you should call \fIcurl_multi_socket(3)\fP again, before you wait for
 more actions on libcurl's sockets. You don't have to do it immediately, but
 the return code means that libcurl may have more data available to return or
 that there may be more data to send off before it is "satisfied".
 
 In modern libcurls, \fICURLM_CALL_MULTI_PERFORM\fP or
-\fICURLM_CALL_MULTI_SOKCET\fP should not be returned and no application needs
+\fICURLM_CALL_MULTI_SOCKET\fP should not be returned and no application needs
 to care about them.
 
 NOTE that the return code is for the whole multi stack. Problems still might have
 occurred on individual transfers even when one of these functions
 return OK.
 .SH "TYPICAL USAGE"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_version_info.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_version_info.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/curl_version_info.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/curl_version_info.3	2016-12-19 15:27:56.000000000 +0800
@@ -150,12 +150,15 @@
 libcurl was built with support for Unix domain sockets.
 (Added in 7.40.0)
 .IP CURL_VERSION_PSL
 libcurl was built with support for Mozilla's Public Suffix List. This makes
 libcurl ignore cookies with a domain that's on the list.
 (Added in 7.47.0)
+.IP CURL_VERSION_HTTPS_PROXY
+libcurl was built with support for HTTPS-proxy.
+(Added in 7.52.0)
 .RE
 \fIssl_version\fP is an ASCII string for the OpenSSL version used. If libcurl
 has no SSL support, this is NULL.
 
 \fIssl_version_num\fP is always 0.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/libcurl-multi.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/libcurl-multi.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/libcurl-multi.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/libcurl-multi.3	2016-12-19 15:27:56.000000000 +0800
@@ -39,13 +39,13 @@
 and when to ask libcurl to get/send data.
 
 2. Enable multiple simultaneous transfers in the same thread without making it
 complicated for the application.
 
 3. Enable the application to wait for action on its own file descriptors and
-curl's file descriptors simultaneous easily.
+curl's file descriptors simultaneously.
 
 4. Enable event-based handling and scaling transfers up to and beyond
 thousands of parallel connections.
 .SH "ONE MULTI HANDLE MANY EASY HANDLES"
 To use the multi interface, you must first create a 'multi handle' with
 \fIcurl_multi_init(3)\fP. This handle is then used as input to all further
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/libcurl-symbols.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/libcurl-symbols.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/libcurl-symbols.3	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/libcurl-symbols.3	2016-12-21 14:50:25.000000000 +0800
@@ -16,13 +16,13 @@
 .\" * furnished to do so, under the terms of the COPYING file.
 .\" *
 .\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 .\" * KIND, either express or implied.
 .\" *
 .\" **************************************************************************
-.TH libcurl-symbols 3 "nov  2, 2016" "libcurl 7.41.0" "libcurl symbols"
+.TH libcurl-symbols 3 "dec 21, 2016" "libcurl 7.41.0" "libcurl symbols"
 .SH NAME
 libcurl-symbols \- libcurl symbol version information
 .SH "libcurl symbols"
 This man page details version information for public symbols provided in the
 libcurl header files. This lists the first version in which the symbol was
 introduced and for some symbols two additional information pieces:
@@ -519,14 +519,18 @@
 .IP CURLINFO_PRIMARY_IP
 Introduced in 7.19.0
 .IP CURLINFO_PRIMARY_PORT
 Introduced in 7.21.0
 .IP CURLINFO_PRIVATE
 Introduced in 7.10.3
+.IP CURLINFO_PROTOCOL
+Introduced in 7.52.0
 .IP CURLINFO_PROXYAUTH_AVAIL
 Introduced in 7.10.8
+.IP CURLINFO_PROXY_SSL_VERIFYRESULT
+Introduced in 7.52.0
 .IP CURLINFO_REDIRECT_COUNT
 Introduced in 7.9.7
 .IP CURLINFO_REDIRECT_TIME
 Introduced in 7.9.7
 .IP CURLINFO_REDIRECT_URL
 Introduced in 7.18.2
@@ -539,12 +543,14 @@
 .IP CURLINFO_RTSP_CSEQ_RECV
 Introduced in 7.20.0
 .IP CURLINFO_RTSP_SERVER_CSEQ
 Introduced in 7.20.0
 .IP CURLINFO_RTSP_SESSION_ID
 Introduced in 7.20.0
+.IP CURLINFO_SCHEME
+Introduced in 7.52.0
 .IP CURLINFO_SIZE_DOWNLOAD
 Introduced in 7.4.1
 .IP CURLINFO_SIZE_UPLOAD
 Introduced in 7.4.1
 .IP CURLINFO_SLIST
 Introduced in 7.12.3
@@ -977,12 +983,14 @@
 .IP CURLOPT_POSTQUOTE
 Introduced in 7.1
 .IP CURLOPT_POSTREDIR
 Introduced in 7.19.1
 .IP CURLOPT_PREQUOTE
 Introduced in 7.9.5
+.IP CURLOPT_PRE_PROXY
+Introduced in 7.52.0
 .IP CURLOPT_PRIVATE
 Introduced in 7.10.3
 .IP CURLOPT_PROGRESSDATA
 Introduced in 7.1
 .IP CURLOPT_PROGRESSFUNCTION
 Introduced in 7.1
@@ -1002,14 +1010,48 @@
 .IP CURLOPT_PROXYTYPE
 Introduced in 7.10
 .IP CURLOPT_PROXYUSERNAME
 Introduced in 7.19.1
 .IP CURLOPT_PROXYUSERPWD
 Introduced in 7.1
+.IP CURLOPT_PROXY_CAINFO
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_CAPATH
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_CRLFILE
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_KEYPASSWD
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_PINNEDPUBLICKEY
+Introduced in 7.52.0
 .IP CURLOPT_PROXY_SERVICE_NAME
 Introduced in 7.43.0
+.IP CURLOPT_PROXY_SSLCERT
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSLCERTTYPE
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSLKEY
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSLKEYTYPE
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSLVERSION
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSL_CIPHER_LIST
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSL_OPTIONS
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSL_VERIFYHOST
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_SSL_VERIFYPEER
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_TLSAUTH_PASSWORD
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_TLSAUTH_TYPE
+Introduced in 7.52.0
+.IP CURLOPT_PROXY_TLSAUTH_USERNAME
+Introduced in 7.52.0
 .IP CURLOPT_PROXY_TRANSFER_MODE
 Introduced in 7.18.0
 .IP CURLOPT_PUT
 Introduced in 7.1
 .IP CURLOPT_QUOTE
 Introduced in 7.1
@@ -1291,12 +1333,14 @@
 .IP CURLPROTO_TFTP
 Introduced in 7.19.4
 .IP CURLPROXY_HTTP
 Introduced in 7.10
 .IP CURLPROXY_HTTP_1_0
 Introduced in 7.19.4
+.IP CURLPROXY_HTTPS
+Introduced in 7.52.0
 .IP CURLPROXY_SOCKS4
 Introduced in 7.10
 .IP CURLPROXY_SOCKS4A
 Introduced in 7.18.0
 .IP CURLPROXY_SOCKS5
 Introduced in 7.10
@@ -1615,12 +1659,14 @@
 .IP CURL_SSLVERSION_TLS
 Introduced in 
 .IP CURL_SSLVERSION_TLS
 Introduced in 
 .IP CURL_SSLVERSION_TLS
 Introduced in 
+.IP CURL_SSLVERSION_TLS
+Introduced in 
 .IP CURL_TIMECOND_IFMODSINCE
 Introduced in 7.9.7
 .IP CURL_TIMECOND_IFUNMODSINCE
 Introduced in 7.9.7
 .IP CURL_TIMECOND_LASTMOD
 Introduced in 7.9.7
@@ -1642,12 +1688,14 @@
 Introduced in 7.38.0
 .IP CURL_VERSION_GSSNEGOTIATE
 Introduced in 7.10.6
 Deprecated since 7.38.0
 .IP CURL_VERSION_HTTP2
 Introduced in 7.33.0
+.IP CURL_VERSION_HTTPS_PROXY
+Introduced in 7.52.0
 .IP CURL_VERSION_IDN
 Introduced in 7.12.0
 .IP CURL_VERSION_IPV6
 Introduced in 7.10
 .IP CURL_VERSION_KERBEROS4
 Introduced in 7.10
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLINFO_PROTOCOL.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLINFO_PROXY_SSL_VERIFYRESULT.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLINFO_SCHEME.3
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLINFO_SSL_VERIFYRESULT.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLINFO_SSL_VERIFYRESULT.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLINFO_SSL_VERIFYRESULT.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLINFO_SSL_VERIFYRESULT.3	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
 .\" *                                  _   _ ____  _
 .\" *  Project                     ___| | | |  _ \| |
 .\" *                             / __| | | | |_) | |
 .\" *                            | (__| |_| |  _ <| |___
 .\" *                             \___|\___/|_| \_\_____|
 .\" *
-.\" * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+.\" * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
 .\" *
 .\" * This software is licensed as described in the file COPYING, which
 .\" * you should have received as part of this distribution. The terms
 .\" * are also available at https://curl.haxx.se/docs/copyright.html.
 .\" *
 .\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -19,19 +19,19 @@
 .\" * KIND, either express or implied.
 .\" *
 .\" **************************************************************************
 .\"
 .TH CURLINFO_SSL_VERIFYRESULT 3 "1 Sep 2015" "libcurl 7.44.0" "curl_easy_getinfo options"
 .SH NAME
-CURLINFO_SSL_VERIFYRESULT \- get the result of the certification verification
+CURLINFO_SSL_VERIFYRESULT \- get the result of the certificate verification
 .SH SYNOPSIS
 #include <curl/curl.h>
 
 CURLcode curl_easy_getinfo(CURL *handle, CURLINFO_SSL_VERIFYRESULT, long *result);
 .SH DESCRIPTION
-Pass a pointer to a long to receive the result of the certification
+Pass a pointer to a long to receive the result of the server SSL certificate
 verification that was requested (using the \fICURLOPT_SSL_VERIFYPEER(3)\fP
 option.
 .SH PROTOCOLS
 All using TLS
 .SH EXAMPLE
 TODO
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLOPT_CONNECT_ONLY.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLOPT_CONNECT_ONLY.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLOPT_CONNECT_ONLY.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLOPT_CONNECT_ONLY.3	2016-12-19 15:27:56.000000000 +0800
@@ -46,6 +46,7 @@
 .SH AVAILABILITY
 Added in 7.15.2
 .SH RETURN VALUE
 Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
 .SH "SEE ALSO"
 .BR CURLOPT_VERBOSE "(3), " CURLOPT_HTTPPROXYTUNNEL  "(3), "
+.BR curl_easy_recv "(3), " curl_easy_send "(3) "
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PRE_PROXY.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_CAINFO.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_CAPATH.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_CRLFILE.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_KEYPASSWD.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_PINNEDPUBLICKEY.3
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLOPT_PROXYPORT.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLOPT_PROXYPORT.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLOPT_PROXYPORT.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLOPT_PROXYPORT.3	2016-12-19 15:27:56.000000000 +0800
@@ -26,13 +26,14 @@
 .SH SYNOPSIS
 #include <curl/curl.h>
 
 CURLcode curl_easy_setopt(CURL *handle, CURLOPT_PROXYPORT, long port);
 .SH DESCRIPTION
 Pass a long with this option to set the proxy port to connect to unless it is
-specified in the proxy string \fICURLOPT_PROXY(3)\fP or uses the default one.
+specified in the proxy string \fICURLOPT_PROXY(3)\fP or uses 443 for https
+proxies and 1080 for all others as default.
 
 While this accepts a 'long', the port number is 16 bit so it can't be larger
 than 65535.
 .SH DEFAULT
 0, not specified which makes it use the default port
 .SH PROTOCOLS
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSLCERT.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSLCERTTYPE.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSL_CIPHER_LIST.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSLKEY.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSLKEYTYPE.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSL_OPTIONS.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSL_VERIFYHOST.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSL_VERIFYPEER.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_SSLVERSION.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_TLSAUTH_PASSWORD.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_TLSAUTH_TYPE.3
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts: CURLOPT_PROXY_TLSAUTH_USERNAME.3
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLOPT_SSLVERSION.3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLOPT_SSLVERSION.3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/CURLOPT_SSLVERSION.3	2016-10-14 14:42:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/CURLOPT_SSLVERSION.3	2016-12-19 15:27:56.000000000 +0800
@@ -45,12 +45,14 @@
 .IP CURL_SSLVERSION_TLSv1_0
 TLSv1.0 (Added in 7.34.0)
 .IP CURL_SSLVERSION_TLSv1_1
 TLSv1.1 (Added in 7.34.0)
 .IP CURL_SSLVERSION_TLSv1_2
 TLSv1.2 (Added in 7.34.0)
+.IP CURL_SSLVERSION_TLSv1_3
+TLSv1.3 (Added in 7.52.0)
 .RE
 .SH DEFAULT
 CURL_SSLVERSION_DEFAULT
 .SH PROTOCOLS
 All TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.
 .SH EXAMPLE
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/Makefile.am	2016-10-24 21:42:02.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/Makefile.am	2016-12-19 15:27:56.000000000 +0800
@@ -46,22 +46,25 @@
  CURLINFO_NUM_CONNECTS.3                        \
  CURLINFO_OS_ERRNO.3                            \
  CURLINFO_PRETRANSFER_TIME.3                    \
  CURLINFO_PRIMARY_IP.3                          \
  CURLINFO_PRIMARY_PORT.3                        \
  CURLINFO_PRIVATE.3                             \
+ CURLINFO_PROTOCOL.3                            \
  CURLINFO_PROXYAUTH_AVAIL.3                     \
+ CURLINFO_PROXY_SSL_VERIFYRESULT.3              \
  CURLINFO_REDIRECT_COUNT.3                      \
  CURLINFO_REDIRECT_TIME.3                       \
  CURLINFO_REDIRECT_URL.3                        \
  CURLINFO_REQUEST_SIZE.3                        \
  CURLINFO_RESPONSE_CODE.3                       \
  CURLINFO_RTSP_CLIENT_CSEQ.3                    \
  CURLINFO_RTSP_CSEQ_RECV.3                      \
  CURLINFO_RTSP_SERVER_CSEQ.3                    \
  CURLINFO_RTSP_SESSION_ID.3                     \
+ CURLINFO_SCHEME.3                              \
  CURLINFO_SIZE_DOWNLOAD.3                       \
  CURLINFO_SIZE_UPLOAD.3                         \
  CURLINFO_SPEED_DOWNLOAD.3                      \
  CURLINFO_SPEED_UPLOAD.3                        \
  CURLINFO_SSL_ENGINES.3                         \
  CURLINFO_SSL_VERIFYRESULT.3                    \
@@ -206,25 +209,43 @@
  CURLOPT_POSTFIELDS.3                           \
  CURLOPT_POSTFIELDSIZE.3                        \
  CURLOPT_POSTFIELDSIZE_LARGE.3                  \
  CURLOPT_POSTQUOTE.3                            \
  CURLOPT_POSTREDIR.3                            \
  CURLOPT_PREQUOTE.3                             \
+ CURLOPT_PRE_PROXY.3                            \
  CURLOPT_PRIVATE.3                              \
  CURLOPT_PROGRESSDATA.3                         \
  CURLOPT_PROGRESSFUNCTION.3                     \
  CURLOPT_PROTOCOLS.3                            \
  CURLOPT_PROXY.3                                \
  CURLOPT_PROXYAUTH.3                            \
  CURLOPT_PROXYHEADER.3                          \
  CURLOPT_PROXYPASSWORD.3                        \
  CURLOPT_PROXYPORT.3                            \
  CURLOPT_PROXYTYPE.3                            \
  CURLOPT_PROXYUSERNAME.3                        \
  CURLOPT_PROXYUSERPWD.3                         \
+ CURLOPT_PROXY_CAINFO.3                         \
+ CURLOPT_PROXY_CAPATH.3                         \
+ CURLOPT_PROXY_CRLFILE.3                        \
+ CURLOPT_PROXY_KEYPASSWD.3                      \
+ CURLOPT_PROXY_PINNEDPUBLICKEY.3                \
  CURLOPT_PROXY_SERVICE_NAME.3                   \
+ CURLOPT_PROXY_SSLCERT.3                        \
+ CURLOPT_PROXY_SSLCERTTYPE.3                    \
+ CURLOPT_PROXY_SSLKEY.3                         \
+ CURLOPT_PROXY_SSLKEYTYPE.3                     \
+ CURLOPT_PROXY_SSLVERSION.3                     \
+ CURLOPT_PROXY_SSL_CIPHER_LIST.3                \
+ CURLOPT_PROXY_SSL_OPTIONS.3                    \
+ CURLOPT_PROXY_SSL_VERIFYHOST.3                 \
+ CURLOPT_PROXY_SSL_VERIFYPEER.3                 \
+ CURLOPT_PROXY_TLSAUTH_PASSWORD.3               \
+ CURLOPT_PROXY_TLSAUTH_TYPE.3                   \
+ CURLOPT_PROXY_TLSAUTH_USERNAME.3               \
  CURLOPT_PROXY_TRANSFER_MODE.3                  \
  CURLOPT_PUT.3                                  \
  CURLOPT_QUOTE.3                                \
  CURLOPT_RANDOM_FILE.3                          \
  CURLOPT_RANGE.3                                \
  CURLOPT_READDATA.3                             \
@@ -324,32 +345,36 @@
  CURLINFO_EFFECTIVE_URL.html                    \
  CURLINFO_FILETIME.html                         \
  CURLINFO_FTP_ENTRY_PATH.html                   \
  CURLINFO_HEADER_SIZE.html                      \
  CURLINFO_HTTPAUTH_AVAIL.html                   \
  CURLINFO_HTTP_CONNECTCODE.html                 \
+ CURLINFO_HTTP_VERSION.html                     \
  CURLINFO_LASTSOCKET.html                       \
  CURLINFO_LOCAL_IP.html                         \
  CURLINFO_LOCAL_PORT.html                       \
  CURLINFO_NAMELOOKUP_TIME.html                  \
  CURLINFO_NUM_CONNECTS.html                     \
  CURLINFO_OS_ERRNO.html                         \
  CURLINFO_PRETRANSFER_TIME.html                 \
  CURLINFO_PRIMARY_IP.html                       \
  CURLINFO_PRIMARY_PORT.html                     \
  CURLINFO_PRIVATE.html                          \
+ CURLINFO_PROTOCOL.html                         \
  CURLINFO_PROXYAUTH_AVAIL.html                  \
+ CURLINFO_PROXY_SSL_VERIFYRESULT.html           \
  CURLINFO_REDIRECT_COUNT.html                   \
  CURLINFO_REDIRECT_TIME.html                    \
  CURLINFO_REDIRECT_URL.html                     \
  CURLINFO_REQUEST_SIZE.html                     \
  CURLINFO_RESPONSE_CODE.html                    \
  CURLINFO_RTSP_CLIENT_CSEQ.html                 \
  CURLINFO_RTSP_CSEQ_RECV.html                   \
  CURLINFO_RTSP_SERVER_CSEQ.html                 \
  CURLINFO_RTSP_SESSION_ID.html                  \
+ CURLINFO_SCHEME.html                           \
  CURLINFO_SIZE_DOWNLOAD.html                    \
  CURLINFO_SIZE_UPLOAD.html                      \
  CURLINFO_SPEED_DOWNLOAD.html                   \
  CURLINFO_SPEED_UPLOAD.html                     \
  CURLINFO_SSL_ENGINES.html                      \
  CURLINFO_SSL_VERIFYRESULT.html                 \
@@ -494,25 +519,43 @@
  CURLOPT_POSTFIELDS.html                        \
  CURLOPT_POSTFIELDSIZE.html                     \
  CURLOPT_POSTFIELDSIZE_LARGE.html               \
  CURLOPT_POSTQUOTE.html                         \
  CURLOPT_POSTREDIR.html                         \
  CURLOPT_PREQUOTE.html                          \
+ CURLOPT_PRE_PROXY.html                         \
  CURLOPT_PRIVATE.html                           \
  CURLOPT_PROGRESSDATA.html                      \
  CURLOPT_PROGRESSFUNCTION.html                  \
  CURLOPT_PROTOCOLS.html                         \
  CURLOPT_PROXY.html                             \
  CURLOPT_PROXYAUTH.html                         \
  CURLOPT_PROXYHEADER.html                       \
  CURLOPT_PROXYPASSWORD.html                     \
  CURLOPT_PROXYPORT.html                         \
  CURLOPT_PROXYTYPE.html                         \
  CURLOPT_PROXYUSERNAME.html                     \
  CURLOPT_PROXYUSERPWD.html                      \
+ CURLOPT_PROXY_CAINFO.html                      \
+ CURLOPT_PROXY_CAPATH.html                      \
+ CURLOPT_PROXY_CRLFILE.html                     \
+ CURLOPT_PROXY_KEYPASSWD.html                   \
+ CURLOPT_PROXY_PINNEDPUBLICKEY.html             \
  CURLOPT_PROXY_SERVICE_NAME.html                \
+ CURLOPT_PROXY_SSLCERT.html                     \
+ CURLOPT_PROXY_SSLCERTTYPE.html                 \
+ CURLOPT_PROXY_SSLKEY.html                      \
+ CURLOPT_PROXY_SSLKEYTYPE.html                  \
+ CURLOPT_PROXY_SSLVERSION.html                  \
+ CURLOPT_PROXY_SSL_CIPHER_LIST.html             \
+ CURLOPT_PROXY_SSL_OPTIONS.html                 \
+ CURLOPT_PROXY_SSL_VERIFYHOST.html              \
+ CURLOPT_PROXY_SSL_VERIFYPEER.html              \
+ CURLOPT_PROXY_TLSAUTH_PASSWORD.html            \
+ CURLOPT_PROXY_TLSAUTH_TYPE.html                \
+ CURLOPT_PROXY_TLSAUTH_USERNAME.html            \
  CURLOPT_PROXY_TRANSFER_MODE.html               \
  CURLOPT_PUT.html                               \
  CURLOPT_QUOTE.html                             \
  CURLOPT_RANDOM_FILE.html                       \
  CURLOPT_RANGE.html                             \
  CURLOPT_READDATA.html                          \
@@ -612,32 +655,36 @@
  CURLINFO_EFFECTIVE_URL.pdf                     \
  CURLINFO_FILETIME.pdf                          \
  CURLINFO_FTP_ENTRY_PATH.pdf                    \
  CURLINFO_HEADER_SIZE.pdf                       \
  CURLINFO_HTTPAUTH_AVAIL.pdf                    \
  CURLINFO_HTTP_CONNECTCODE.pdf                  \
+ CURLINFO_HTTP_VERSION.pdf                      \
  CURLINFO_LASTSOCKET.pdf                        \
  CURLINFO_LOCAL_IP.pdf                          \
  CURLINFO_LOCAL_PORT.pdf                        \
  CURLINFO_NAMELOOKUP_TIME.pdf                   \
  CURLINFO_NUM_CONNECTS.pdf                      \
  CURLINFO_OS_ERRNO.pdf                          \
  CURLINFO_PRETRANSFER_TIME.pdf                  \
  CURLINFO_PRIMARY_IP.pdf                        \
  CURLINFO_PRIMARY_PORT.pdf                      \
  CURLINFO_PRIVATE.pdf                           \
+ CURLINFO_PROTOCOL.pdf                          \
  CURLINFO_PROXYAUTH_AVAIL.pdf                   \
+ CURLINFO_PROXY_SSL_VERIFYRESULT.pdf            \
  CURLINFO_REDIRECT_COUNT.pdf                    \
  CURLINFO_REDIRECT_TIME.pdf                     \
  CURLINFO_REDIRECT_URL.pdf                      \
  CURLINFO_REQUEST_SIZE.pdf                      \
  CURLINFO_RESPONSE_CODE.pdf                     \
  CURLINFO_RTSP_CLIENT_CSEQ.pdf                  \
  CURLINFO_RTSP_CSEQ_RECV.pdf                    \
  CURLINFO_RTSP_SERVER_CSEQ.pdf                  \
  CURLINFO_RTSP_SESSION_ID.pdf                   \
+ CURLINFO_SCHEME.pdf                            \
  CURLINFO_SIZE_DOWNLOAD.pdf                     \
  CURLINFO_SIZE_UPLOAD.pdf                       \
  CURLINFO_SPEED_DOWNLOAD.pdf                    \
  CURLINFO_SPEED_UPLOAD.pdf                      \
  CURLINFO_SSL_ENGINES.pdf                       \
  CURLINFO_SSL_VERIFYRESULT.pdf                  \
@@ -782,25 +829,43 @@
  CURLOPT_POSTFIELDS.pdf                         \
  CURLOPT_POSTFIELDSIZE.pdf                      \
  CURLOPT_POSTFIELDSIZE_LARGE.pdf                \
  CURLOPT_POSTQUOTE.pdf                          \
  CURLOPT_POSTREDIR.pdf                          \
  CURLOPT_PREQUOTE.pdf                           \
+ CURLOPT_PRE_PROXY.pdf                          \
  CURLOPT_PRIVATE.pdf                            \
  CURLOPT_PROGRESSDATA.pdf                       \
  CURLOPT_PROGRESSFUNCTION.pdf                   \
  CURLOPT_PROTOCOLS.pdf                          \
  CURLOPT_PROXY.pdf                              \
  CURLOPT_PROXYAUTH.pdf                          \
  CURLOPT_PROXYHEADER.pdf                        \
  CURLOPT_PROXYPASSWORD.pdf                      \
  CURLOPT_PROXYPORT.pdf                          \
  CURLOPT_PROXYTYPE.pdf                          \
  CURLOPT_PROXYUSERNAME.pdf                      \
  CURLOPT_PROXYUSERPWD.pdf                       \
+ CURLOPT_PROXY_CAINFO.pdf                       \
+ CURLOPT_PROXY_CAPATH.pdf                       \
+ CURLOPT_PROXY_CRLFILE.pdf                      \
+ CURLOPT_PROXY_KEYPASSWD.pdf                    \
+ CURLOPT_PROXY_PINNEDPUBLICKEY.pdf              \
  CURLOPT_PROXY_SERVICE_NAME.pdf                 \
+ CURLOPT_PROXY_SSLCERT.pdf                      \
+ CURLOPT_PROXY_SSLCERTTYPE.pdf                  \
+ CURLOPT_PROXY_SSLKEY.pdf                       \
+ CURLOPT_PROXY_SSLKEYTYPE.pdf                   \
+ CURLOPT_PROXY_SSLVERSION.pdf                   \
+ CURLOPT_PROXY_SSL_CIPHER_LIST.pdf              \
+ CURLOPT_PROXY_SSL_OPTIONS.pdf                  \
+ CURLOPT_PROXY_SSL_VERIFYHOST.pdf               \
+ CURLOPT_PROXY_SSL_VERIFYPEER.pdf               \
+ CURLOPT_PROXY_TLSAUTH_PASSWORD.pdf             \
+ CURLOPT_PROXY_TLSAUTH_TYPE.pdf                 \
+ CURLOPT_PROXY_TLSAUTH_USERNAME.pdf             \
  CURLOPT_PROXY_TRANSFER_MODE.pdf                \
  CURLOPT_PUT.pdf                                \
  CURLOPT_QUOTE.pdf                              \
  CURLOPT_RANDOM_FILE.pdf                        \
  CURLOPT_RANGE.pdf                              \
  CURLOPT_READDATA.pdf                           \
@@ -907,6 +972,12 @@
 	ps2pdf $$foo.ps $@; \
 	rm $$foo.ps; \
 	echo "converted $< to $@")
 
 mancheck:
 	@cd $(top_srcdir)/docs/libcurl/opts && ls `awk -F, '!/OBSOLETE/ && /^  CINIT/ { a=substr($$1, 9); print "CURLOPT_" a ".3"}' $(top_srcdir)/include/curl/curl.h`
+	rm -f in_temp
+	@(for a in $(man_MANS); do echo $$a >>in_temp; done)
+	sort in_temp > in_makefile
+	ls CURL*.3 > in_directory
+	-diff -u in_makefile in_directory
+	rm in_temp in_directory in_makefile
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/opts/Makefile.in	2016-10-31 17:41:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/opts/Makefile.in	2016-12-19 16:16:46.000000000 +0800
@@ -405,22 +405,25 @@
  CURLINFO_NUM_CONNECTS.3                        \
  CURLINFO_OS_ERRNO.3                            \
  CURLINFO_PRETRANSFER_TIME.3                    \
  CURLINFO_PRIMARY_IP.3                          \
  CURLINFO_PRIMARY_PORT.3                        \
  CURLINFO_PRIVATE.3                             \
+ CURLINFO_PROTOCOL.3                            \
  CURLINFO_PROXYAUTH_AVAIL.3                     \
+ CURLINFO_PROXY_SSL_VERIFYRESULT.3              \
  CURLINFO_REDIRECT_COUNT.3                      \
  CURLINFO_REDIRECT_TIME.3                       \
  CURLINFO_REDIRECT_URL.3                        \
  CURLINFO_REQUEST_SIZE.3                        \
  CURLINFO_RESPONSE_CODE.3                       \
  CURLINFO_RTSP_CLIENT_CSEQ.3                    \
  CURLINFO_RTSP_CSEQ_RECV.3                      \
  CURLINFO_RTSP_SERVER_CSEQ.3                    \
  CURLINFO_RTSP_SESSION_ID.3                     \
+ CURLINFO_SCHEME.3                              \
  CURLINFO_SIZE_DOWNLOAD.3                       \
  CURLINFO_SIZE_UPLOAD.3                         \
  CURLINFO_SPEED_DOWNLOAD.3                      \
  CURLINFO_SPEED_UPLOAD.3                        \
  CURLINFO_SSL_ENGINES.3                         \
  CURLINFO_SSL_VERIFYRESULT.3                    \
@@ -565,25 +568,43 @@
  CURLOPT_POSTFIELDS.3                           \
  CURLOPT_POSTFIELDSIZE.3                        \
  CURLOPT_POSTFIELDSIZE_LARGE.3                  \
  CURLOPT_POSTQUOTE.3                            \
  CURLOPT_POSTREDIR.3                            \
  CURLOPT_PREQUOTE.3                             \
+ CURLOPT_PRE_PROXY.3                            \
  CURLOPT_PRIVATE.3                              \
  CURLOPT_PROGRESSDATA.3                         \
  CURLOPT_PROGRESSFUNCTION.3                     \
  CURLOPT_PROTOCOLS.3                            \
  CURLOPT_PROXY.3                                \
  CURLOPT_PROXYAUTH.3                            \
  CURLOPT_PROXYHEADER.3                          \
  CURLOPT_PROXYPASSWORD.3                        \
  CURLOPT_PROXYPORT.3                            \
  CURLOPT_PROXYTYPE.3                            \
  CURLOPT_PROXYUSERNAME.3                        \
  CURLOPT_PROXYUSERPWD.3                         \
+ CURLOPT_PROXY_CAINFO.3                         \
+ CURLOPT_PROXY_CAPATH.3                         \
+ CURLOPT_PROXY_CRLFILE.3                        \
+ CURLOPT_PROXY_KEYPASSWD.3                      \
+ CURLOPT_PROXY_PINNEDPUBLICKEY.3                \
  CURLOPT_PROXY_SERVICE_NAME.3                   \
+ CURLOPT_PROXY_SSLCERT.3                        \
+ CURLOPT_PROXY_SSLCERTTYPE.3                    \
+ CURLOPT_PROXY_SSLKEY.3                         \
+ CURLOPT_PROXY_SSLKEYTYPE.3                     \
+ CURLOPT_PROXY_SSLVERSION.3                     \
+ CURLOPT_PROXY_SSL_CIPHER_LIST.3                \
+ CURLOPT_PROXY_SSL_OPTIONS.3                    \
+ CURLOPT_PROXY_SSL_VERIFYHOST.3                 \
+ CURLOPT_PROXY_SSL_VERIFYPEER.3                 \
+ CURLOPT_PROXY_TLSAUTH_PASSWORD.3               \
+ CURLOPT_PROXY_TLSAUTH_TYPE.3                   \
+ CURLOPT_PROXY_TLSAUTH_USERNAME.3               \
  CURLOPT_PROXY_TRANSFER_MODE.3                  \
  CURLOPT_PUT.3                                  \
  CURLOPT_QUOTE.3                                \
  CURLOPT_RANDOM_FILE.3                          \
  CURLOPT_RANGE.3                                \
  CURLOPT_READDATA.3                             \
@@ -683,32 +704,36 @@
  CURLINFO_EFFECTIVE_URL.html                    \
  CURLINFO_FILETIME.html                         \
  CURLINFO_FTP_ENTRY_PATH.html                   \
  CURLINFO_HEADER_SIZE.html                      \
  CURLINFO_HTTPAUTH_AVAIL.html                   \
  CURLINFO_HTTP_CONNECTCODE.html                 \
+ CURLINFO_HTTP_VERSION.html                     \
  CURLINFO_LASTSOCKET.html                       \
  CURLINFO_LOCAL_IP.html                         \
  CURLINFO_LOCAL_PORT.html                       \
  CURLINFO_NAMELOOKUP_TIME.html                  \
  CURLINFO_NUM_CONNECTS.html                     \
  CURLINFO_OS_ERRNO.html                         \
  CURLINFO_PRETRANSFER_TIME.html                 \
  CURLINFO_PRIMARY_IP.html                       \
  CURLINFO_PRIMARY_PORT.html                     \
  CURLINFO_PRIVATE.html                          \
+ CURLINFO_PROTOCOL.html                         \
  CURLINFO_PROXYAUTH_AVAIL.html                  \
+ CURLINFO_PROXY_SSL_VERIFYRESULT.html           \
  CURLINFO_REDIRECT_COUNT.html                   \
  CURLINFO_REDIRECT_TIME.html                    \
  CURLINFO_REDIRECT_URL.html                     \
  CURLINFO_REQUEST_SIZE.html                     \
  CURLINFO_RESPONSE_CODE.html                    \
  CURLINFO_RTSP_CLIENT_CSEQ.html                 \
  CURLINFO_RTSP_CSEQ_RECV.html                   \
  CURLINFO_RTSP_SERVER_CSEQ.html                 \
  CURLINFO_RTSP_SESSION_ID.html                  \
+ CURLINFO_SCHEME.html                           \
  CURLINFO_SIZE_DOWNLOAD.html                    \
  CURLINFO_SIZE_UPLOAD.html                      \
  CURLINFO_SPEED_DOWNLOAD.html                   \
  CURLINFO_SPEED_UPLOAD.html                     \
  CURLINFO_SSL_ENGINES.html                      \
  CURLINFO_SSL_VERIFYRESULT.html                 \
@@ -853,25 +878,43 @@
  CURLOPT_POSTFIELDS.html                        \
  CURLOPT_POSTFIELDSIZE.html                     \
  CURLOPT_POSTFIELDSIZE_LARGE.html               \
  CURLOPT_POSTQUOTE.html                         \
  CURLOPT_POSTREDIR.html                         \
  CURLOPT_PREQUOTE.html                          \
+ CURLOPT_PRE_PROXY.html                         \
  CURLOPT_PRIVATE.html                           \
  CURLOPT_PROGRESSDATA.html                      \
  CURLOPT_PROGRESSFUNCTION.html                  \
  CURLOPT_PROTOCOLS.html                         \
  CURLOPT_PROXY.html                             \
  CURLOPT_PROXYAUTH.html                         \
  CURLOPT_PROXYHEADER.html                       \
  CURLOPT_PROXYPASSWORD.html                     \
  CURLOPT_PROXYPORT.html                         \
  CURLOPT_PROXYTYPE.html                         \
  CURLOPT_PROXYUSERNAME.html                     \
  CURLOPT_PROXYUSERPWD.html                      \
+ CURLOPT_PROXY_CAINFO.html                      \
+ CURLOPT_PROXY_CAPATH.html                      \
+ CURLOPT_PROXY_CRLFILE.html                     \
+ CURLOPT_PROXY_KEYPASSWD.html                   \
+ CURLOPT_PROXY_PINNEDPUBLICKEY.html             \
  CURLOPT_PROXY_SERVICE_NAME.html                \
+ CURLOPT_PROXY_SSLCERT.html                     \
+ CURLOPT_PROXY_SSLCERTTYPE.html                 \
+ CURLOPT_PROXY_SSLKEY.html                      \
+ CURLOPT_PROXY_SSLKEYTYPE.html                  \
+ CURLOPT_PROXY_SSLVERSION.html                  \
+ CURLOPT_PROXY_SSL_CIPHER_LIST.html             \
+ CURLOPT_PROXY_SSL_OPTIONS.html                 \
+ CURLOPT_PROXY_SSL_VERIFYHOST.html              \
+ CURLOPT_PROXY_SSL_VERIFYPEER.html              \
+ CURLOPT_PROXY_TLSAUTH_PASSWORD.html            \
+ CURLOPT_PROXY_TLSAUTH_TYPE.html                \
+ CURLOPT_PROXY_TLSAUTH_USERNAME.html            \
  CURLOPT_PROXY_TRANSFER_MODE.html               \
  CURLOPT_PUT.html                               \
  CURLOPT_QUOTE.html                             \
  CURLOPT_RANDOM_FILE.html                       \
  CURLOPT_RANGE.html                             \
  CURLOPT_READDATA.html                          \
@@ -971,32 +1014,36 @@
  CURLINFO_EFFECTIVE_URL.pdf                     \
  CURLINFO_FILETIME.pdf                          \
  CURLINFO_FTP_ENTRY_PATH.pdf                    \
  CURLINFO_HEADER_SIZE.pdf                       \
  CURLINFO_HTTPAUTH_AVAIL.pdf                    \
  CURLINFO_HTTP_CONNECTCODE.pdf                  \
+ CURLINFO_HTTP_VERSION.pdf                      \
  CURLINFO_LASTSOCKET.pdf                        \
  CURLINFO_LOCAL_IP.pdf                          \
  CURLINFO_LOCAL_PORT.pdf                        \
  CURLINFO_NAMELOOKUP_TIME.pdf                   \
  CURLINFO_NUM_CONNECTS.pdf                      \
  CURLINFO_OS_ERRNO.pdf                          \
  CURLINFO_PRETRANSFER_TIME.pdf                  \
  CURLINFO_PRIMARY_IP.pdf                        \
  CURLINFO_PRIMARY_PORT.pdf                      \
  CURLINFO_PRIVATE.pdf                           \
+ CURLINFO_PROTOCOL.pdf                          \
  CURLINFO_PROXYAUTH_AVAIL.pdf                   \
+ CURLINFO_PROXY_SSL_VERIFYRESULT.pdf            \
  CURLINFO_REDIRECT_COUNT.pdf                    \
  CURLINFO_REDIRECT_TIME.pdf                     \
  CURLINFO_REDIRECT_URL.pdf                      \
  CURLINFO_REQUEST_SIZE.pdf                      \
  CURLINFO_RESPONSE_CODE.pdf                     \
  CURLINFO_RTSP_CLIENT_CSEQ.pdf                  \
  CURLINFO_RTSP_CSEQ_RECV.pdf                    \
  CURLINFO_RTSP_SERVER_CSEQ.pdf                  \
  CURLINFO_RTSP_SESSION_ID.pdf                   \
+ CURLINFO_SCHEME.pdf                            \
  CURLINFO_SIZE_DOWNLOAD.pdf                     \
  CURLINFO_SIZE_UPLOAD.pdf                       \
  CURLINFO_SPEED_DOWNLOAD.pdf                    \
  CURLINFO_SPEED_UPLOAD.pdf                      \
  CURLINFO_SSL_ENGINES.pdf                       \
  CURLINFO_SSL_VERIFYRESULT.pdf                  \
@@ -1141,25 +1188,43 @@
  CURLOPT_POSTFIELDS.pdf                         \
  CURLOPT_POSTFIELDSIZE.pdf                      \
  CURLOPT_POSTFIELDSIZE_LARGE.pdf                \
  CURLOPT_POSTQUOTE.pdf                          \
  CURLOPT_POSTREDIR.pdf                          \
  CURLOPT_PREQUOTE.pdf                           \
+ CURLOPT_PRE_PROXY.pdf                          \
  CURLOPT_PRIVATE.pdf                            \
  CURLOPT_PROGRESSDATA.pdf                       \
  CURLOPT_PROGRESSFUNCTION.pdf                   \
  CURLOPT_PROTOCOLS.pdf                          \
  CURLOPT_PROXY.pdf                              \
  CURLOPT_PROXYAUTH.pdf                          \
  CURLOPT_PROXYHEADER.pdf                        \
  CURLOPT_PROXYPASSWORD.pdf                      \
  CURLOPT_PROXYPORT.pdf                          \
  CURLOPT_PROXYTYPE.pdf                          \
  CURLOPT_PROXYUSERNAME.pdf                      \
  CURLOPT_PROXYUSERPWD.pdf                       \
+ CURLOPT_PROXY_CAINFO.pdf                       \
+ CURLOPT_PROXY_CAPATH.pdf                       \
+ CURLOPT_PROXY_CRLFILE.pdf                      \
+ CURLOPT_PROXY_KEYPASSWD.pdf                    \
+ CURLOPT_PROXY_PINNEDPUBLICKEY.pdf              \
  CURLOPT_PROXY_SERVICE_NAME.pdf                 \
+ CURLOPT_PROXY_SSLCERT.pdf                      \
+ CURLOPT_PROXY_SSLCERTTYPE.pdf                  \
+ CURLOPT_PROXY_SSLKEY.pdf                       \
+ CURLOPT_PROXY_SSLKEYTYPE.pdf                   \
+ CURLOPT_PROXY_SSLVERSION.pdf                   \
+ CURLOPT_PROXY_SSL_CIPHER_LIST.pdf              \
+ CURLOPT_PROXY_SSL_OPTIONS.pdf                  \
+ CURLOPT_PROXY_SSL_VERIFYHOST.pdf               \
+ CURLOPT_PROXY_SSL_VERIFYPEER.pdf               \
+ CURLOPT_PROXY_TLSAUTH_PASSWORD.pdf             \
+ CURLOPT_PROXY_TLSAUTH_TYPE.pdf                 \
+ CURLOPT_PROXY_TLSAUTH_USERNAME.pdf             \
  CURLOPT_PROXY_TRANSFER_MODE.pdf                \
  CURLOPT_PUT.pdf                                \
  CURLOPT_QUOTE.pdf                              \
  CURLOPT_RANDOM_FILE.pdf                        \
  CURLOPT_RANGE.pdf                              \
  CURLOPT_READDATA.pdf                           \
@@ -1502,10 +1567,16 @@
 	ps2pdf $$foo.ps $@; \
 	rm $$foo.ps; \
 	echo "converted $< to $@")
 
 mancheck:
 	@cd $(top_srcdir)/docs/libcurl/opts && ls `awk -F, '!/OBSOLETE/ && /^  CINIT/ { a=substr($$1, 9); print "CURLOPT_" a ".3"}' $(top_srcdir)/include/curl/curl.h`
+	rm -f in_temp
+	@(for a in $(man_MANS); do echo $$a >>in_temp; done)
+	sort in_temp > in_makefile
+	ls CURL*.3 > in_directory
+	-diff -u in_makefile in_directory
+	rm in_temp in_directory in_makefile
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/symbols-in-versions /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/symbols-in-versions
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/libcurl/symbols-in-versions	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/libcurl/symbols-in-versions	2016-12-19 15:27:56.000000000 +0800
@@ -236,22 +236,25 @@
 CURLINFO_NUM_CONNECTS           7.12.3
 CURLINFO_OS_ERRNO               7.12.2
 CURLINFO_PRETRANSFER_TIME       7.4.1
 CURLINFO_PRIMARY_IP             7.19.0
 CURLINFO_PRIMARY_PORT           7.21.0
 CURLINFO_PRIVATE                7.10.3
+CURLINFO_PROTOCOL               7.52.0
 CURLINFO_PROXYAUTH_AVAIL        7.10.8
+CURLINFO_PROXY_SSL_VERIFYRESULT 7.52.0
 CURLINFO_REDIRECT_COUNT         7.9.7
 CURLINFO_REDIRECT_TIME          7.9.7
 CURLINFO_REDIRECT_URL           7.18.2
 CURLINFO_REQUEST_SIZE           7.4.1
 CURLINFO_RESPONSE_CODE          7.10.8
 CURLINFO_RTSP_CLIENT_CSEQ       7.20.0
 CURLINFO_RTSP_CSEQ_RECV         7.20.0
 CURLINFO_RTSP_SERVER_CSEQ       7.20.0
 CURLINFO_RTSP_SESSION_ID        7.20.0
+CURLINFO_SCHEME                 7.52.0
 CURLINFO_SIZE_DOWNLOAD          7.4.1
 CURLINFO_SIZE_UPLOAD            7.4.1
 CURLINFO_SLIST                  7.12.3
 CURLINFO_SOCKET                 7.45.0
 CURLINFO_SPEED_DOWNLOAD         7.4.1
 CURLINFO_SPEED_UPLOAD           7.4.1
@@ -453,25 +456,43 @@
 CURLOPT_POSTFIELDS              7.1
 CURLOPT_POSTFIELDSIZE           7.2
 CURLOPT_POSTFIELDSIZE_LARGE     7.11.1
 CURLOPT_POSTQUOTE               7.1
 CURLOPT_POSTREDIR               7.19.1
 CURLOPT_PREQUOTE                7.9.5
+CURLOPT_PRE_PROXY               7.52.0
 CURLOPT_PRIVATE                 7.10.3
 CURLOPT_PROGRESSDATA            7.1
 CURLOPT_PROGRESSFUNCTION        7.1           7.32.0
 CURLOPT_PROTOCOLS               7.19.4
 CURLOPT_PROXY                   7.1
 CURLOPT_PROXYAUTH               7.10.7
 CURLOPT_PROXYHEADER             7.37.0
 CURLOPT_PROXYPASSWORD           7.19.1
 CURLOPT_PROXYPORT               7.1
 CURLOPT_PROXYTYPE               7.10
 CURLOPT_PROXYUSERNAME           7.19.1
 CURLOPT_PROXYUSERPWD            7.1
+CURLOPT_PROXY_CAINFO            7.52.0
+CURLOPT_PROXY_CAPATH            7.52.0
+CURLOPT_PROXY_CRLFILE           7.52.0
+CURLOPT_PROXY_KEYPASSWD         7.52.0
+CURLOPT_PROXY_PINNEDPUBLICKEY   7.52.0
 CURLOPT_PROXY_SERVICE_NAME      7.43.0
+CURLOPT_PROXY_SSLCERT           7.52.0
+CURLOPT_PROXY_SSLCERTTYPE       7.52.0
+CURLOPT_PROXY_SSLKEY            7.52.0
+CURLOPT_PROXY_SSLKEYTYPE        7.52.0
+CURLOPT_PROXY_SSLVERSION        7.52.0
+CURLOPT_PROXY_SSL_CIPHER_LIST   7.52.0
+CURLOPT_PROXY_SSL_OPTIONS       7.52.0
+CURLOPT_PROXY_SSL_VERIFYHOST    7.52.0
+CURLOPT_PROXY_SSL_VERIFYPEER    7.52.0
+CURLOPT_PROXY_TLSAUTH_PASSWORD  7.52.0
+CURLOPT_PROXY_TLSAUTH_TYPE      7.52.0
+CURLOPT_PROXY_TLSAUTH_USERNAME  7.52.0
 CURLOPT_PROXY_TRANSFER_MODE     7.18.0
 CURLOPT_PUT                     7.1
 CURLOPT_QUOTE                   7.1
 CURLOPT_RANDOM_FILE             7.7
 CURLOPT_RANGE                   7.1
 CURLOPT_READDATA                7.9.7
@@ -608,12 +629,13 @@
 CURLPROTO_SMTP                  7.20.0
 CURLPROTO_SMTPS                 7.20.0
 CURLPROTO_TELNET                7.19.4
 CURLPROTO_TFTP                  7.19.4
 CURLPROXY_HTTP                  7.10
 CURLPROXY_HTTP_1_0              7.19.4
+CURLPROXY_HTTPS                 7.52.0
 CURLPROXY_SOCKS4                7.10
 CURLPROXY_SOCKS4A               7.18.0
 CURLPROXY_SOCKS5                7.10
 CURLPROXY_SOCKS5_HOSTNAME       7.18.0
 CURLSHE_BAD_OPTION              7.10.3
 CURLSHE_INVALID                 7.10.3
@@ -770,12 +792,13 @@
 CURL_SSLVERSION_SSLv2           7.9.2
 CURL_SSLVERSION_SSLv3           7.9.2
 CURL_SSLVERSION_TLSv1           7.9.2
 CURL_SSLVERSION_TLSv1_0         7.34.0
 CURL_SSLVERSION_TLSv1_1         7.34.0
 CURL_SSLVERSION_TLSv1_2         7.34.0
+CURL_SSLVERSION_TLSv1_3         7.52.0
 CURL_TIMECOND_IFMODSINCE        7.9.7
 CURL_TIMECOND_IFUNMODSINCE      7.9.7
 CURL_TIMECOND_LASTMOD           7.9.7
 CURL_TIMECOND_NONE              7.9.7
 CURL_TLSAUTH_NONE               7.21.4
 CURL_TLSAUTH_SRP                7.21.4
@@ -783,12 +806,13 @@
 CURL_VERSION_CONV               7.15.4
 CURL_VERSION_CURLDEBUG          7.19.6
 CURL_VERSION_DEBUG              7.10.6
 CURL_VERSION_GSSAPI             7.38.0
 CURL_VERSION_GSSNEGOTIATE       7.10.6        7.38.0
 CURL_VERSION_HTTP2              7.33.0
+CURL_VERSION_HTTPS_PROXY        7.52.0
 CURL_VERSION_IDN                7.12.0
 CURL_VERSION_IPV6               7.10
 CURL_VERSION_KERBEROS4          7.10          7.33.0
 CURL_VERSION_KERBEROS5          7.40.0
 CURL_VERSION_LARGEFILE          7.11.1
 CURL_VERSION_LIBZ               7.10
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/LICENSE-MIXING.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/LICENSE-MIXING.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/LICENSE-MIXING.md	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/LICENSE-MIXING.md	2016-12-19 15:27:56.000000000 +0800
@@ -42,13 +42,13 @@
  for you, consider using another TLS library. Also note that GnuTLS itself
  depends on and uses other libs (libgcrypt and libgpg-error) and they too are
  LGPL- or GPL-licensed.
 
 ## WolfSSL
 
- (May be used for SSL/TLS support) Uses the GPL license or a propietary
+ (May be used for SSL/TLS support) Uses the GPL license or a proprietary
  license. If this is a problem for you, consider using another TLS library.
 
 ## NSS
 
  (May be used for SSL/TLS support) Is covered by the
  [MPL](https://www.mozilla.org/MPL/) license, the GPL license and the LGPL
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/Makefile.am	2016-10-31 06:48:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/Makefile.am	2016-12-19 15:27:56.000000000 +0800
@@ -26,13 +26,13 @@
 noinst_man_MANS = mk-ca-bundle.1
 GENHTMLPAGES = curl.html curl-config.html mk-ca-bundle.html
 PDFPAGES = curl.pdf curl-config.pdf mk-ca-bundle.pdf
 
 HTMLPAGES = $(GENHTMLPAGES) index.html
 
-SUBDIRS = examples libcurl
+SUBDIRS = examples libcurl cmdline-opts
 
 CLEANFILES = $(GENHTMLPAGES) $(PDFPAGES)
 
 EXTRA_DIST = MANUAL BUGS CONTRIBUTE.md FAQ FEATURES INTERNALS.md SSLCERTS.md  \
  README.win32 RESOURCES TODO TheArtOfHttpScripting THANKS VERSIONS KNOWN_BUGS \
  BINDINGS.md $(man_MANS) HISTORY.md INSTALL INSTALL.md LICENSE-MIXING.md         \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/Makefile.in	2016-10-31 17:41:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/Makefile.in	2016-12-19 16:16:46.000000000 +0800
@@ -443,13 +443,13 @@
 AUTOMAKE_OPTIONS = foreign no-dependencies
 man_MANS = curl.1 curl-config.1
 noinst_man_MANS = mk-ca-bundle.1
 GENHTMLPAGES = curl.html curl-config.html mk-ca-bundle.html
 PDFPAGES = curl.pdf curl-config.pdf mk-ca-bundle.pdf
 HTMLPAGES = $(GENHTMLPAGES) index.html
-SUBDIRS = examples libcurl
+SUBDIRS = examples libcurl cmdline-opts
 CLEANFILES = $(GENHTMLPAGES) $(PDFPAGES)
 EXTRA_DIST = MANUAL BUGS CONTRIBUTE.md FAQ FEATURES INTERNALS.md SSLCERTS.md  \
  README.win32 RESOURCES TODO TheArtOfHttpScripting THANKS VERSIONS KNOWN_BUGS \
  BINDINGS.md $(man_MANS) HISTORY.md INSTALL INSTALL.md LICENSE-MIXING.md         \
  README.netware MAIL-ETIQUETTE HTTP-COOKIES.md SECURITY.md RELEASE-PROCEDURE  \
  SSL-PROBLEMS.md HTTP2.md ROADMAP.md CODE_OF_CONDUCT.md CODE_STYLE.md         \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/SECURITY.md /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/SECURITY.md
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/SECURITY.md	2016-10-31 06:48:56.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/SECURITY.md	2016-12-19 15:27:56.000000000 +0800
@@ -90,13 +90,13 @@
 - The security web page on the web site should get the new vulnerability
   mentioned.
 
 Pre-notification
 ----------------
 
-If you think you are or should be eligible for a pre-notifcation about
+If you think you are or should be eligible for a pre-notification about
 upcoming security announcements for curl, we urge OS distros and similar
 vendors to primarily join the distros@openwall list as that is one of the
 purposes of that list - and not just for curl of course.
 
 If you are not a distro or otherwise not suitable for distros@openwall and yet
 want pre-notifications from us, contact the curl security team with a detailed
@@ -109,8 +109,8 @@
 might ask you to join the list or you can ask to join it. It really isn't very
 formal. We basically only require that you have a long-term presence in the
 curl project and you have shown an understanding for the project and its way
 of working. You must've been around for a good while and you should have no
 plans in vanishing in the near future.
 
-We do not make the list of partipants public mostly because it tends to vary
+We do not make the list of participants public mostly because it tends to vary
 somewhat over time and a list somewhere will only risk getting outdated.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/THANKS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/THANKS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/THANKS	2016-11-02 14:49:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/THANKS	2016-12-21 14:48:02.000000000 +0800
@@ -8,12 +8,13 @@
 "Spoon Man"
 Aaro Koskinen
 Aaron Oneal
 Aaron Orenstein
 Abram Pousada
 Adam D. Moss
+Adam Langley
 Adam Light
 Adam Piggott
 Adam Sampson
 Adam Tkac
 Adrian Schuur
 Adriano Meirelles
@@ -30,16 +31,18 @@
 Aleksandar Milivojevic
 Aleksey Tulinov
 Ales Novak
 Alessandro Ghedini
 Alessandro Vesely
 Alex Bligh
+Alex Chan
 Alex Fishman
 Alex Gruz
 Alex McLellan
 Alex Neblett
+Alex Rousskov
 Alex Suykov
 Alex Vinnik
 Alex aka WindEagle
 Alexander Beedie
 Alexander Dyagilev
 Alexander Elgert
@@ -185,12 +188,13 @@
 Brian Prodoehl
 Brian R Duffy
 Brian Ulm
 Brock Noland
 Bru Rom
 Bruce Mitchener
+Bruce Stephens
 Bruno Thomsen
 Bruno de Carvalho
 Bryan Henderson
 Bryan Kemp
 Byrial Jensen
 Cameron Kaiser
@@ -270,12 +274,13 @@
 Dan Becker
 Dan C
 Dan Cristian
 Dan Donahue
 Dan Fandrich
 Dan Locks
+Dan McNulty
 Dan Nelson
 Dan Petitt
 Dan Torop
 Dan Zitter
 Daniel Black
 Daniel Cater
@@ -324,12 +329,13 @@
 David McCreedy
 David Meyer
 David Odin
 David Phillips
 David Rosenstrauch
 David Ryskalczyk
+David Schweikert
 David Shaw
 David Strauss
 David Tarendash
 David Thiel
 David Walser
 David Woodhouse
@@ -622,12 +628,13 @@
 Jeff Weber
 Jeffrey Walton
 Jens Rantil
 Jeremy Friesner
 Jeremy Huddleston
 Jeremy Lin
+Jeremy Pearson
 Jeroen Koekkoek
 Jeroen Ooms
 Jerome Muffat-Meridol
 Jerome Robert
 Jerome Vouillon
 Jerry Krinock
@@ -902,12 +909,13 @@
 Matthew Blain
 Matthew Clarke
 Matthew Hall
 Matthias Bolte
 Maurice Barnum
 Mauro Iorio
+Mauro Rappa
 Max Katsev
 Maxim Ivanov
 Maxim Perenesenko
 Maxim Prohorov
 Maxime Larocque
 Mehmet Bozkurt
@@ -972,12 +980,13 @@
 Nathan Coulter
 Nathan O'Sullivan
 Nathanael Nerode
 Nathaniel Waisbrot
 Naveen Chandran
 Naveen Noel
+Neal Poole
 Neil Bowers
 Neil Dunbar
 Neil Spring
 Nic Roets
 Nicholas Maniscalco
 Nick Gimbrone
@@ -1000,12 +1009,13 @@
 Nodak Sodak
 Norbert Frese
 Norbert Kett
 Norbert Novotny
 Octavio Schroeder
 Ofer
+Okhin Vasilij
 Ola Mork
 Olaf Flebbe
 Olaf Stüben
 Oleg Pudeyev
 Oliver Gondža
 Oliver Graute
@@ -1155,12 +1165,13 @@
 Richard Moore
 Richard Prescott
 Richard Silverman
 Richard van den Berg
 Rick Jones
 Rick Richardson
+Ricki Hirner
 Rider Linden
 Rob Crittenden
 Rob Davies
 Rob Jones
 Rob Stanzel
 Rob Ward
@@ -1389,12 +1400,13 @@
 Ulf Härnhammar
 Ulf Samuelsson
 Ulrich Doehner
 Ulrich Telle
 Ulrich Zadow
 Valentin David
+Vasy Okhin
 Venkat Akella
 Victor Snezhko
 Vijay Panghal
 Vikram Saxena
 Viktor Szakáts
 Ville Skyttä
@@ -1449,12 +1461,13 @@
 Yves Arrouye
 Yves Lejeune
 Zdenek Pavlas
 Zekun Ni
 Zmey Petroff
 Zvi Har'El
+afrind on github
 asavah on github
 baumanj on github
 bsammon on github
 dkjjr89 on github
 eXeC64 on github
 jveazey on github
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/TheArtOfHttpScripting /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/TheArtOfHttpScripting
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/TheArtOfHttpScripting	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/TheArtOfHttpScripting	2016-12-19 15:27:56.000000000 +0800
@@ -752,7 +752,7 @@
  RFC 1867 defines the HTTP post upload format
 
  RFC 6525 defines how HTTP cookies work
 
  14.2 Sites
 
- https://curl.haxx.se is the home of the cURL project
+ https://curl.haxx.se is the home of the curl project
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/docs/TODO	2016-10-31 15:48:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/docs/TODO	2016-12-19 15:27:56.000000000 +0800
@@ -3,13 +3,13 @@
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
                 Things that could be nice to do in the future
 
- Things to do in project cURL. Please tell us what you think, contribute and
+ Things to do in project curl. Please tell us what you think, contribute and
  send us patches that improve things!
 
  Be aware that these are things that we could do, or have once been considered
  things we could do. If you want to work on any of these areas, please
  consider bringing it up for discussions first on the mailing list so that we
  all agree it is still a good idea for the project!
@@ -20,13 +20,12 @@
  1.2 More data sharing
  1.3 struct lifreq
  1.4 signal-based resolver timeouts
  1.5 get rid of PATH_MAX
  1.6 Modified buffer size approach
  1.7 Detect when called from within callbacks
- 1.8 Allow SSL (HTTPS) to proxy
  1.9 Cache negative name resolves
  1.11 minimize dependencies with dynamicly loaded modules
  1.12 have form functions use CURL handle argument
  1.14 Typesafe curl_easy_setopt()
  1.15 Monitor connections in the connection pool
  1.16 Try to URL encode given URL
@@ -60,13 +59,12 @@
  4.7 STAT for LIST without data connection
 
  5. HTTP
  5.1 Better persistency for HTTP 1.0
  5.2 support FF3 sqlite cookie files
  5.3 Rearrange request header order
- 5.4 Use huge HTTP/2 windows
  5.5 auth= in URLs
  5.6 Refuse "downgrade" redirects
  5.7 Brotli compression
  5.8 QUIC
  5.9 Add easy argument to formpost functions
  5.10 Leave secure cookies alone
@@ -241,22 +239,12 @@
 1.7 Detect when called from within callbacks
 
  We should set a state variable before calling callbacks, so that we
  subsequently can add code within libcurl that returns error if called within
  callbacks for when that's not supported.
 
-1.8 Allow SSL (HTTPS) to proxy
-
- To prevent local users from snooping on your traffic to the proxy. Supported
- by Firefox and Chrome already:
- https://www.chromium.org/developers/design-documents/secure-web-proxy
-
- See this stale work in progress branch:
- https://github.com/curl/curl/tree/HTTPS-proxy based on this PR:
- https://github.com/curl/curl/pull/305
-
 1.9 Cache negative name resolves
 
  A name resolve that has failed is likely to fail when made again within a
  short period of time. Currently we only cache positive responses.
 
 1.11 minimize dependencies with dynamicly loaded modules
@@ -525,19 +513,12 @@
  the order of the request headers. I propose that we introduce a new option in
  which you give headers a value, and then when the HTTP request is built it
  sorts the headers based on that number. We could then have internally created
  headers use a default value so only headers that need to be moved have to be
  specified.
 
-5.4 Use huge HTTP/2 windows
-
- We're currently using nghttp2's default window size which is terribly small
- (64K). This becomes a bottle neck over high bandwidth networks. We should
- instead make the window size to be very big (512MB?) as we really don't do
- much flow control anyway.
-
 5.5 auth= in URLs
 
  Add the ability to specify the preferred authentication mechanism to use by
  using ;auth=<mech> in the login part of the URL.
 
  For example:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/curl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/curl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/curl.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/curl.h	2016-12-19 15:27:56.000000000 +0800
@@ -140,13 +140,13 @@
   char *contents;                   /* pointer to allocated data contents */
   long contentslength;              /* length of contents field, see also
                                        CURL_HTTPPOST_LARGE */
   char *buffer;                     /* pointer to allocated buffer contents */
   long bufferlength;                /* length of buffer field */
   char *contenttype;                /* Content-Type */
-  struct curl_slist* contentheader; /* list of extra headers for this form */
+  struct curl_slist *contentheader; /* list of extra headers for this form */
   struct curl_httppost *more;       /* if one field name has more than one
                                        file, this link should link to following
                                        files */
   long flags;                       /* as defined below */
 
 /* specified content is a file name */
@@ -267,13 +267,13 @@
     char *target; /* pointer to the target filename of a symlink */
   } strings;
 
   unsigned int flags;
 
   /* used internally */
-  char * b_data;
+  char *b_data;
   size_t b_size;
   size_t b_used;
 };
 
 /* return codes for CURLOPT_CHUNK_BGN_FUNCTION */
 #define CURL_CHUNK_BGN_FUNC_OK      0
@@ -637,12 +637,13 @@
 
 typedef enum {
   CURLPROXY_HTTP = 0,   /* added in 7.10, new in 7.19.4 default is to use
                            CONNECT HTTP/1.1 */
   CURLPROXY_HTTP_1_0 = 1,   /* added in 7.19.4, force to use CONNECT
                                HTTP/1.0  */
+  CURLPROXY_HTTPS = 2, /* added in 7.52.0 */
   CURLPROXY_SOCKS4 = 4, /* support added in 7.15.2, enum existed already
                            in 7.10 */
   CURLPROXY_SOCKS5 = 5, /* added in 7.10 */
   CURLPROXY_SOCKS4A = 6, /* added in 7.18.0 */
   CURLPROXY_SOCKS5_HOSTNAME = 7 /* Use the SOCKS5 protocol but pass along the
                                    host name rather than the IP address. added
@@ -1203,13 +1204,14 @@
   CINIT(NOSIGNAL, LONG, 99),
 
   /* Provide a CURLShare for mutexing non-ts data */
   CINIT(SHARE, OBJECTPOINT, 100),
 
   /* indicates type of proxy. accepted values are CURLPROXY_HTTP (default),
-     CURLPROXY_SOCKS4, CURLPROXY_SOCKS4A and CURLPROXY_SOCKS5. */
+     CURLPROXY_HTTPS, CURLPROXY_SOCKS4, CURLPROXY_SOCKS4A and
+     CURLPROXY_SOCKS5. */
   CINIT(PROXYTYPE, LONG, 101),
 
   /* Set the Accept-Encoding string. Use this to tell a server you would like
      the response to be compressed. Before 7.21.6, this was known as
      CURLOPT_ENCODING */
   CINIT(ACCEPT_ENCODING, STRINGPOINT, 102),
@@ -1701,12 +1703,76 @@
   CINIT(TCP_FASTOPEN, LONG, 244),
 
   /* Continue to send data if the server responds early with an
    * HTTP status code >= 300 */
   CINIT(KEEP_SENDING_ON_ERROR, LONG, 245),
 
+  /* The CApath or CAfile used to validate the proxy certificate
+     this option is used only if PROXY_SSL_VERIFYPEER is true */
+  CINIT(PROXY_CAINFO, STRINGPOINT, 246),
+
+  /* The CApath directory used to validate the proxy certificate
+     this option is used only if PROXY_SSL_VERIFYPEER is true */
+  CINIT(PROXY_CAPATH, STRINGPOINT, 247),
+
+  /* Set if we should verify the proxy in ssl handshake,
+     set 1 to verify. */
+  CINIT(PROXY_SSL_VERIFYPEER, LONG, 248),
+
+  /* Set if we should verify the Common name from the proxy certificate in ssl
+   * handshake, set 1 to check existence, 2 to ensure that it matches
+   * the provided hostname. */
+  CINIT(PROXY_SSL_VERIFYHOST, LONG, 249),
+
+  /* What version to specifically try to use for proxy.
+     See CURL_SSLVERSION defines below. */
+  CINIT(PROXY_SSLVERSION, LONG, 250),
+
+  /* Set a username for authenticated TLS for proxy */
+  CINIT(PROXY_TLSAUTH_USERNAME, STRINGPOINT, 251),
+
+  /* Set a password for authenticated TLS for proxy */
+  CINIT(PROXY_TLSAUTH_PASSWORD, STRINGPOINT, 252),
+
+  /* Set authentication type for authenticated TLS for proxy */
+  CINIT(PROXY_TLSAUTH_TYPE, STRINGPOINT, 253),
+
+  /* name of the file keeping your private SSL-certificate for proxy */
+  CINIT(PROXY_SSLCERT, STRINGPOINT, 254),
+
+  /* type of the file keeping your SSL-certificate ("DER", "PEM", "ENG") for
+     proxy */
+  CINIT(PROXY_SSLCERTTYPE, STRINGPOINT, 255),
+
+  /* name of the file keeping your private SSL-key for proxy */
+  CINIT(PROXY_SSLKEY, STRINGPOINT, 256),
+
+  /* type of the file keeping your private SSL-key ("DER", "PEM", "ENG") for
+     proxy */
+  CINIT(PROXY_SSLKEYTYPE, STRINGPOINT, 257),
+
+  /* password for the SSL private key for proxy */
+  CINIT(PROXY_KEYPASSWD, STRINGPOINT, 258),
+
+  /* Specify which SSL ciphers to use for proxy */
+  CINIT(PROXY_SSL_CIPHER_LIST, STRINGPOINT, 259),
+
+  /* CRL file for proxy */
+  CINIT(PROXY_CRLFILE, STRINGPOINT, 260),
+
+  /* Enable/disable specific SSL features with a bitmask for proxy, see
+     CURLSSLOPT_* */
+  CINIT(PROXY_SSL_OPTIONS, LONG, 261),
+
+  /* Name of pre proxy to use. */
+  CINIT(PRE_PROXY, STRINGPOINT, 262),
+
+  /* The public key in DER form used to validate the proxy public key
+     this option is used only if PROXY_SSL_VERIFYPEER is true */
+  CINIT(PROXY_PINNEDPUBLICKEY, STRINGPOINT, 263),
+
   CURLOPT_LASTENTRY /* the last unused */
 } CURLoption;
 
 #ifndef CURL_NO_OLDIES /* define this to test if your app builds with all
                           the obsolete stuff removed! */
 
@@ -1802,12 +1868,13 @@
   CURL_SSLVERSION_TLSv1, /* TLS 1.x */
   CURL_SSLVERSION_SSLv2,
   CURL_SSLVERSION_SSLv3,
   CURL_SSLVERSION_TLSv1_0,
   CURL_SSLVERSION_TLSv1_1,
   CURL_SSLVERSION_TLSv1_2,
+  CURL_SSLVERSION_TLSv1_3,
 
   CURL_SSLVERSION_LAST /* never use, keep last */
 };
 
 enum CURL_TLSAUTH {
   CURL_TLSAUTH_NONE,
@@ -1836,13 +1903,16 @@
 
   CURL_TIMECOND_LAST
 } curl_TimeCond;
 
 
 /* curl_strequal() and curl_strnequal() are subject for removal in a future
-   libcurl, see lib/README.curlx for details */
+   libcurl, see lib/README.curlx for details
+
+   !checksrc! disable SPACEBEFOREPAREN 2
+*/
 CURL_EXTERN int (curl_strequal)(const char *s1, const char *s2);
 CURL_EXTERN int (curl_strnequal)(const char *s1, const char *s2, size_t n);
 
 /* name is uppercase CURLFORM_<name> */
 #ifdef CFINIT
 #undef CFINIT
@@ -2206,15 +2276,18 @@
   CURLINFO_LOCAL_IP         = CURLINFO_STRING + 41,
   CURLINFO_LOCAL_PORT       = CURLINFO_LONG   + 42,
   CURLINFO_TLS_SESSION      = CURLINFO_SLIST  + 43,
   CURLINFO_ACTIVESOCKET     = CURLINFO_SOCKET + 44,
   CURLINFO_TLS_SSL_PTR      = CURLINFO_SLIST  + 45,
   CURLINFO_HTTP_VERSION     = CURLINFO_LONG   + 46,
+  CURLINFO_PROXY_SSL_VERIFYRESULT = CURLINFO_LONG + 47,
+  CURLINFO_PROTOCOL         = CURLINFO_LONG   + 48,
+  CURLINFO_SCHEME           = CURLINFO_STRING + 49,
   /* Fill in new entries below here! */
 
-  CURLINFO_LASTONE          = 46
+  CURLINFO_LASTONE          = 49
 } CURLINFO;
 
 /* CURLINFO_RESPONSE_CODE is the new name for the option previously known as
    CURLINFO_HTTP_CODE */
 #define CURLINFO_HTTP_CODE CURLINFO_RESPONSE_CODE
 
@@ -2369,12 +2442,13 @@
 #define CURL_VERSION_HTTP2        (1<<16) /* HTTP2 support built-in */
 #define CURL_VERSION_GSSAPI       (1<<17) /* Built against a GSS-API library */
 #define CURL_VERSION_KERBEROS5    (1<<18) /* Kerberos V5 auth is supported */
 #define CURL_VERSION_UNIX_SOCKETS (1<<19) /* Unix domain sockets support */
 #define CURL_VERSION_PSL          (1<<20) /* Mozilla's Public Suffix List, used
                                              for cookie domain verification */
+#define CURL_VERSION_HTTPS_PROXY  (1<<21) /* HTTPS-proxy support built-in */
 
  /*
  * NAME curl_version_info()
  *
  * DESCRIPTION
  *
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/curlver.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/curlver.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/curlver.h	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/curlver.h	2016-12-21 14:50:26.000000000 +0800
@@ -27,18 +27,18 @@
 
 /* This is the global package copyright */
 #define LIBCURL_COPYRIGHT "1996 - 2016 Daniel Stenberg, <daniel@haxx.se>."
 
 /* This is the version number of the libcurl package from which this header
    file origins: */
-#define LIBCURL_VERSION "7.51.0"
+#define LIBCURL_VERSION "7.52.0"
 
 /* The numeric version number is also available "in parts" by using these
    defines: */
 #define LIBCURL_VERSION_MAJOR 7
-#define LIBCURL_VERSION_MINOR 51
+#define LIBCURL_VERSION_MINOR 52
 #define LIBCURL_VERSION_PATCH 0
 
 /* This is the numeric version of the libcurl version number, meant for easier
    parsing and comparions by programs. The LIBCURL_VERSION_NUM define will
    always follow this syntax:
 
@@ -54,24 +54,24 @@
    comparisons with greater than and less than work.
 
    Note: This define is the full hex number and _does not_ use the
    CURL_VERSION_BITS() macro since curl's own configure script greps for it
    and needs it to contain the full number.
 */
-#define LIBCURL_VERSION_NUM 0x073300
+#define LIBCURL_VERSION_NUM 0x073400
 
 /*
  * This is the date and time when the full source package was created. The
  * timestamp is not stored in git, as the timestamp is properly set in the
  * tarballs by the maketgz script.
  *
  * The format of the date should follow this template:
  *
  * "Mon Feb 12 11:35:33 UTC 2007"
  */
-#define LIBCURL_TIMESTAMP "Wed Nov  2 06:54:46 UTC 2016"
+#define LIBCURL_TIMESTAMP "Wed Dec 21 06:50:01 UTC 2016"
 
 #define CURL_VERSION_BITS(x,y,z) ((x)<<16|(y)<<8|z)
 #define CURL_AT_LEAST_VERSION(x,y,z) \
   (LIBCURL_VERSION_NUM >= CURL_VERSION_BITS(x, y, z))
 
 #endif /* __CURL_CURLVER_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/easy.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/easy.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/easy.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/easy.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -55,13 +55,13 @@
  * passed in. Duplicating a handle could only be a matter of cloning data and
  * options, internal state info and things like persistent connections cannot
  * be transferred. It is useful in multithreaded applications when you can run
  * curl_easy_duphandle() for each new thread to avoid a series of identical
  * curl_easy_setopt() invokes in every thread.
  */
-CURL_EXTERN CURL* curl_easy_duphandle(CURL *curl);
+CURL_EXTERN CURL *curl_easy_duphandle(CURL *curl);
 
 /*
  * NAME curl_easy_reset()
  *
  * DESCRIPTION
  *
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/stdcheaders.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/stdcheaders.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/stdcheaders.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/stdcheaders.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -21,13 +21,13 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include <sys/types.h>
 
-size_t fread (void *, size_t, size_t, FILE *);
-size_t fwrite (const void *, size_t, size_t, FILE *);
+size_t fread(void *, size_t, size_t, FILE *);
+size_t fwrite(const void *, size_t, size_t, FILE *);
 
 int strcasecmp(const char *, const char *);
 int strncasecmp(const char *, const char *, size_t);
 
 #endif /* __STDC_HEADERS_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/typecheck-gcc.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/typecheck-gcc.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/curl/typecheck-gcc.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/curl/typecheck-gcc.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -37,13 +37,13 @@
  *
  * To add an option that uses the same type as an existing option, you'll just
  * need to extend the appropriate _curl_*_option macro
  */
 #define curl_easy_setopt(handle, option, value)                               \
 __extension__ ({                                                              \
-  __typeof__ (option) _curl_opt = option;                                     \
+  __typeof__(option) _curl_opt = option;                                     \
   if(__builtin_constant_p(_curl_opt)) {                                       \
     if(_curl_is_long_option(_curl_opt))                                       \
       if(!_curl_is_long(value))                                               \
         _curl_easy_setopt_err_long();                                         \
     if(_curl_is_off_t_option(_curl_opt))                                      \
       if(!_curl_is_off_t(value))                                              \
@@ -107,13 +107,13 @@
 })
 
 /* wraps curl_easy_getinfo() with typechecking */
 /* FIXME: don't allow const pointers */
 #define curl_easy_getinfo(handle, info, arg)                                  \
 __extension__ ({                                                              \
-  __typeof__ (info) _curl_info = info;                                        \
+  __typeof__(info) _curl_info = info;                                        \
   if(__builtin_constant_p(_curl_info)) {                                      \
     if(_curl_is_string_info(_curl_info))                                      \
       if(!_curl_is_arr((arg), char *))                                        \
         _curl_easy_getinfo_err_string();                                      \
     if(_curl_is_long_info(_curl_info))                                        \
       if(!_curl_is_arr((arg), long))                                          \
@@ -148,13 +148,13 @@
 _CURL_WARNING(_curl_easy_setopt_err_long,
   "curl_easy_setopt expects a long argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_curl_off_t,
   "curl_easy_setopt expects a curl_off_t argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_string,
               "curl_easy_setopt expects a "
-              "string (char* or char[]) argument for this option"
+              "string ('char *' or char[]) argument for this option"
   )
 _CURL_WARNING(_curl_easy_setopt_err_write_callback,
   "curl_easy_setopt expects a curl_write_callback argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_read_cb,
   "curl_easy_setopt expects a curl_read_callback argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_ioctl_cb,
@@ -179,30 +179,31 @@
               "curl_easy_setopt expects a "
               "private data pointer as argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_error_buffer,
               "curl_easy_setopt expects a "
               "char buffer of CURL_ERROR_SIZE as argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_FILE,
-  "curl_easy_setopt expects a FILE* argument for this option")
+  "curl_easy_setopt expects a 'FILE *' argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_postfields,
-  "curl_easy_setopt expects a void* or char* argument for this option")
+  "curl_easy_setopt expects a 'void *' or 'char *' argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_curl_httpost,
-  "curl_easy_setopt expects a struct curl_httppost* argument for this option")
+              "curl_easy_setopt expects a 'struct curl_httppost *' "
+              "argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_curl_slist,
-  "curl_easy_setopt expects a struct curl_slist* argument for this option")
+  "curl_easy_setopt expects a 'struct curl_slist *' argument for this option")
 _CURL_WARNING(_curl_easy_setopt_err_CURLSH,
   "curl_easy_setopt expects a CURLSH* argument for this option")
 
 _CURL_WARNING(_curl_easy_getinfo_err_string,
-  "curl_easy_getinfo expects a pointer to char * for this info")
+  "curl_easy_getinfo expects a pointer to 'char *' for this info")
 _CURL_WARNING(_curl_easy_getinfo_err_long,
   "curl_easy_getinfo expects a pointer to long for this info")
 _CURL_WARNING(_curl_easy_getinfo_err_double,
   "curl_easy_getinfo expects a pointer to double for this info")
 _CURL_WARNING(_curl_easy_getinfo_err_curl_slist,
-  "curl_easy_getinfo expects a pointer to struct curl_slist * for this info")
+  "curl_easy_getinfo expects a pointer to 'struct curl_slist *' for this info")
 
 /* groups of curl_easy_setops options that take the same type of argument */
 
 /* To add a new option to one of the groups, just add
  *   (option) == CURLOPT_SOMETHING
  * to the or-expression. If the option takes a long or curl_off_t, you don't
@@ -360,13 +361,13 @@
  * means that you can only apply the sizeof and __typeof__ operators, no
  * == or whatsoever.
  */
 
 /* XXX: should evaluate to true iff expr is a pointer */
 #define _curl_is_any_ptr(expr)                                                \
-  (sizeof(expr) == sizeof(void*))
+  (sizeof(expr) == sizeof(void *))
 
 /* evaluates to true if expr is NULL */
 /* XXX: must not evaluate expr, so this check is not accurate */
 #define _curl_is_NULL(expr)                                                   \
   (__builtin_types_compatible_p(__typeof__(expr), __typeof__(NULL)))
 
@@ -452,51 +453,51 @@
    _curl_callback_compatible((expr), _curl_read_callback1) ||                 \
    _curl_callback_compatible((expr), _curl_read_callback2) ||                 \
    _curl_callback_compatible((expr), _curl_read_callback3) ||                 \
    _curl_callback_compatible((expr), _curl_read_callback4) ||                 \
    _curl_callback_compatible((expr), _curl_read_callback5) ||                 \
    _curl_callback_compatible((expr), _curl_read_callback6))
-typedef size_t (_curl_read_callback1)(char *, size_t, size_t, void*);
-typedef size_t (_curl_read_callback2)(char *, size_t, size_t, const void*);
-typedef size_t (_curl_read_callback3)(char *, size_t, size_t, FILE*);
-typedef size_t (_curl_read_callback4)(void *, size_t, size_t, void*);
-typedef size_t (_curl_read_callback5)(void *, size_t, size_t, const void*);
-typedef size_t (_curl_read_callback6)(void *, size_t, size_t, FILE*);
+typedef size_t (_curl_read_callback1)(char *, size_t, size_t, void *);
+typedef size_t (_curl_read_callback2)(char *, size_t, size_t, const void *);
+typedef size_t (_curl_read_callback3)(char *, size_t, size_t, FILE *);
+typedef size_t (_curl_read_callback4)(void *, size_t, size_t, void *);
+typedef size_t (_curl_read_callback5)(void *, size_t, size_t, const void *);
+typedef size_t (_curl_read_callback6)(void *, size_t, size_t, FILE *);
 
 /* evaluates to true if expr is of type curl_write_callback or "similar" */
 #define _curl_is_write_cb(expr)                                               \
   (_curl_is_read_cb(expr) ||                                            \
    __builtin_types_compatible_p(__typeof__(expr), __typeof__(fwrite)) ||      \
    __builtin_types_compatible_p(__typeof__(expr), curl_write_callback) ||     \
    _curl_callback_compatible((expr), _curl_write_callback1) ||                \
    _curl_callback_compatible((expr), _curl_write_callback2) ||                \
    _curl_callback_compatible((expr), _curl_write_callback3) ||                \
    _curl_callback_compatible((expr), _curl_write_callback4) ||                \
    _curl_callback_compatible((expr), _curl_write_callback5) ||                \
    _curl_callback_compatible((expr), _curl_write_callback6))
-typedef size_t (_curl_write_callback1)(const char *, size_t, size_t, void*);
+typedef size_t (_curl_write_callback1)(const char *, size_t, size_t, void *);
 typedef size_t (_curl_write_callback2)(const char *, size_t, size_t,
-                                       const void*);
-typedef size_t (_curl_write_callback3)(const char *, size_t, size_t, FILE*);
-typedef size_t (_curl_write_callback4)(const void *, size_t, size_t, void*);
+                                       const void *);
+typedef size_t (_curl_write_callback3)(const char *, size_t, size_t, FILE *);
+typedef size_t (_curl_write_callback4)(const void *, size_t, size_t, void *);
 typedef size_t (_curl_write_callback5)(const void *, size_t, size_t,
-                                       const void*);
-typedef size_t (_curl_write_callback6)(const void *, size_t, size_t, FILE*);
+                                       const void *);
+typedef size_t (_curl_write_callback6)(const void *, size_t, size_t, FILE *);
 
 /* evaluates to true if expr is of type curl_ioctl_callback or "similar" */
 #define _curl_is_ioctl_cb(expr)                                         \
   (_curl_is_NULL(expr) ||                                                     \
    __builtin_types_compatible_p(__typeof__(expr), curl_ioctl_callback) ||     \
    _curl_callback_compatible((expr), _curl_ioctl_callback1) ||                \
    _curl_callback_compatible((expr), _curl_ioctl_callback2) ||                \
    _curl_callback_compatible((expr), _curl_ioctl_callback3) ||                \
    _curl_callback_compatible((expr), _curl_ioctl_callback4))
-typedef curlioerr (_curl_ioctl_callback1)(CURL *, int, void*);
-typedef curlioerr (_curl_ioctl_callback2)(CURL *, int, const void*);
-typedef curlioerr (_curl_ioctl_callback3)(CURL *, curliocmd, void*);
-typedef curlioerr (_curl_ioctl_callback4)(CURL *, curliocmd, const void*);
+typedef curlioerr (_curl_ioctl_callback1)(CURL *, int, void *);
+typedef curlioerr (_curl_ioctl_callback2)(CURL *, int, const void *);
+typedef curlioerr (_curl_ioctl_callback3)(CURL *, curliocmd, void *);
+typedef curlioerr (_curl_ioctl_callback4)(CURL *, curliocmd, const void *);
 
 /* evaluates to true if expr is of type curl_sockopt_callback or "similar" */
 #define _curl_is_sockopt_cb(expr)                                       \
   (_curl_is_NULL(expr) ||                                                     \
    __builtin_types_compatible_p(__typeof__(expr), curl_sockopt_callback) ||   \
    _curl_callback_compatible((expr), _curl_sockopt_callback1) ||              \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/include/README	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/include/README	2016-12-19 15:27:56.000000000 +0800
@@ -34,13 +34,13 @@
   is generated from the include/curl/curlbuild.h.in template file.
 
 * If you intend to distribute an already compiled libcurl library you _MUST_
   also distribute along with it the generated curl/curlbuild.h which has been
   used to compile it. Otherwise the library will be of no use for the users of
   the library that you have built. It is _your_ responsibility to provide this
-  file. No one at the cURL project can know how you have built the library.
+  file. No one at the curl project can know how you have built the library.
 
 * File curl/curlbuild.h includes platform and configuration dependent info,
   and must not be modified by anyone. Configure script generates it for you.
 
 * We cannot assume anything else but very basic compiler features being
   present. While libcurl requires an ANSI C compiler to build, some of the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/asyn-ares.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/asyn-ares.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/asyn-ares.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/asyn-ares.c	2016-12-19 15:27:56.000000000 +0800
@@ -166,13 +166,13 @@
   /* Clone the ares channel for the new handle */
   if(ARES_SUCCESS != ares_dup((ares_channel*)to, (ares_channel)from))
     return CURLE_FAILED_INIT;
   return CURLE_OK;
 }
 
-static void destroy_async_data (struct Curl_async *async);
+static void destroy_async_data(struct Curl_async *async);
 
 /*
  * Cancel all possibly still on-going resolves for this connection.
  */
 void Curl_resolver_cancel(struct connectdata *conn)
 {
@@ -181,13 +181,13 @@
   destroy_async_data(&conn->async);
 }
 
 /*
  * destroy_async_data() cleans up async resolver data.
  */
-static void destroy_async_data (struct Curl_async *async)
+static void destroy_async_data(struct Curl_async *async)
 {
   free(async->hostname);
 
   if(async->os_specific) {
     struct ResolverResults *res = (struct ResolverResults *)async->os_specific;
     if(res) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/asyn-thread.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/asyn-thread.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/asyn-thread.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/asyn-thread.c	2016-12-19 15:27:56.000000000 +0800
@@ -152,27 +152,27 @@
 
 /* Data for synchronization between resolver thread and its parent */
 struct thread_sync_data {
   curl_mutex_t * mtx;
   int done;
 
-  char * hostname;        /* hostname to resolve, Curl_async.hostname
-                             duplicate */
+  char *hostname;        /* hostname to resolve, Curl_async.hostname
+                            duplicate */
   int port;
   int sock_error;
   Curl_addrinfo *res;
 #ifdef HAVE_GETADDRINFO
   struct addrinfo hints;
 #endif
   struct thread_data *td; /* for thread-self cleanup */
 };
 
 struct thread_data {
   curl_thread_t thread_hnd;
   unsigned int poll_interval;
-  long interval_end;
+  time_t interval_end;
   struct thread_sync_data tsd;
 };
 
 static struct thread_sync_data *conn_thread_sync_data(struct connectdata *conn)
 {
   return &(((struct thread_data *)conn->async.os_specific)->tsd);
@@ -197,13 +197,13 @@
   memset(tsd, 0, sizeof(*tsd));
 }
 
 /* Initialize resolver thread synchronization data */
 static
 int init_thread_sync_data(struct thread_data * td,
-                           const char * hostname,
+                           const char *hostname,
                            int port,
                            const struct addrinfo *hints)
 {
   struct thread_sync_data *tsd = &td->tsd;
 
   memset(tsd, 0, sizeof(*tsd));
@@ -260,13 +260,13 @@
 /*
  * getaddrinfo_thread() resolves a name and then exits.
  *
  * For builds without ARES, but with ENABLE_IPV6, create a resolver thread
  * and wait on it.
  */
-static unsigned int CURL_STDCALL getaddrinfo_thread (void *arg)
+static unsigned int CURL_STDCALL getaddrinfo_thread(void *arg)
 {
   struct thread_sync_data *tsd = (struct thread_sync_data*)arg;
   struct thread_data *td = tsd->td;
   char service[12];
   int rc;
 
@@ -300,13 +300,13 @@
 
 #else /* HAVE_GETADDRINFO */
 
 /*
  * gethostbyname_thread() resolves a name and then exits.
  */
-static unsigned int CURL_STDCALL gethostbyname_thread (void *arg)
+static unsigned int CURL_STDCALL gethostbyname_thread(void *arg)
 {
   struct thread_sync_data *tsd = (struct thread_sync_data *)arg;
   struct thread_data *td = tsd->td;
 
   tsd->res = Curl_ipv4_resolve_r(tsd->hostname, tsd->port);
 
@@ -333,13 +333,13 @@
 
 #endif /* HAVE_GETADDRINFO */
 
 /*
  * destroy_async_data() cleans up async resolver data and thread handle.
  */
-static void destroy_async_data (struct Curl_async *async)
+static void destroy_async_data(struct Curl_async *async)
 {
   if(async->os_specific) {
     struct thread_data *td = (struct thread_data*) async->os_specific;
     int done;
 
     /*
@@ -372,20 +372,20 @@
 /*
  * init_resolve_thread() starts a new thread that performs the actual
  * resolve. This function returns before the resolve is done.
  *
  * Returns FALSE in case of failure, otherwise TRUE.
  */
-static bool init_resolve_thread (struct connectdata *conn,
-                                 const char *hostname, int port,
-                                 const struct addrinfo *hints)
+static bool init_resolve_thread(struct connectdata *conn,
+                                const char *hostname, int port,
+                                const struct addrinfo *hints)
 {
   struct thread_data *td = calloc(1, sizeof(struct thread_data));
   int err = RESOLVER_ENOMEM;
 
-  conn->async.os_specific = (void*) td;
+  conn->async.os_specific = (void *)td;
   if(!td)
     goto err_exit;
 
   conn->async.port = port;
   conn->async.done = FALSE;
   conn->async.status = 0;
@@ -522,13 +522,13 @@
     }
     destroy_async_data(&conn->async);
     *entry = conn->async.dns;
   }
   else {
     /* poll for name lookup done with exponential backoff up to 250ms */
-    long elapsed = Curl_tvdiff(Curl_tvnow(), data->progress.t_startsingle);
+    time_t elapsed = Curl_tvdiff(Curl_tvnow(), data->progress.t_startsingle);
     if(elapsed < 0)
       elapsed = 0;
 
     if(td->poll_interval == 0)
       /* Start at 1ms poll interval */
       td->poll_interval = 1;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/checksrc.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/checksrc.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/checksrc.pl	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/checksrc.pl	2016-12-19 16:15:11.000000000 +0800
@@ -52,13 +52,16 @@
     'FOPENMODE'        => 'fopen needs a macro for the mode string',
     'BRACEPOS'         => 'wrong position for an open brace',
     'INDENTATION'      => 'wrong start column for code',
     'COPYRIGHT'        => 'file missing a copyright statement',
     'BADCOMMAND'       => 'bad !checksrc! instruction',
     'UNUSEDIGNORE'     => 'a warning ignore was not used',
-    'OPENCOMMENT'      => 'file ended with a /* comment still "open"'
+    'OPENCOMMENT'      => 'file ended with a /* comment still "open"',
+    'ASTERISKSPACE'    => 'pointer declared with space after asterisk',
+    'ASTERISKNOSPACE'  => 'pointer declared without space before asterisk',
+    'ASSIGNWITHINCONDITION'  => 'assignment within conditional expression'
     );
 
 sub readwhitelist {
     open(W, "<$dir/checksrc.whitelist");
     my @all=<W>;
     for(@all) {
@@ -238,12 +241,18 @@
                       $line, 0, $file, $l,
                       "Illegal !checksrc! command");
         }
     }
 }
 
+sub nostrings {
+    my ($str) = @_;
+    $str =~ s/\".*\"//g;
+    return $str;
+}
+
 sub scanfile {
     my ($file) = @_;
 
     my $line = 1;
     my $prevl;
     my $l;
@@ -324,23 +333,41 @@
         # positives
         if($l =~ /^([^"\*]*)[^:"]\/\//) {
             checkwarn("CPPCOMMENTS",
                       $line, length($1), $file, $l, "\/\/ comment");
         }
 
-        # check spaces after for/if/while
-        if($l =~ /^(.*)(for|if|while) \(/) {
+        my $nostr = nostrings($l);
+        # check spaces after for/if/while/function call
+        if($nostr =~ /^(.*)(for|if|while| ([a-zA-Z0-9_]+)) \((.)/) {
             if($1 =~ / *\#/) {
                 # this is a #if, treat it differently
             }
+            elsif($3 eq "return") {
+                # return must have a space
+            }
+            elsif($4 eq "*") {
+                # (* beginning makes the space OK!
+            }
+            elsif($1 =~ / *typedef/) {
+                # typedefs can use space-paren
+            }
             else {
                 checkwarn("SPACEBEFOREPAREN", $line, length($1)+length($2), $file, $l,
                           "$2 with space");
             }
         }
 
+        if($nostr =~ /^((.*)(if) *\()(.*)\)/) {
+            my $pos = length($1);
+            if($4 =~ / = /) {
+                checkwarn("ASSIGNWITHINCONDITION",
+                          $line, $pos+1, $file, $l,
+                          "assignment within conditional expression");
+            }
+        }
         # check spaces after open parentheses
         if($l =~ /^(.*[a-z])\( /i) {
             checkwarn("SPACEAFTERPAREN",
                       $line, length($1)+1, $file, $l,
                       "space after open parenthesis");
         }
@@ -468,12 +495,37 @@
                               "not indented $indent steps, uses $diff)");
 
                 }
             }
         }
 
+        # check for 'char * name'
+        if(($l =~ /(^.*(char|int|long|void|curl_slist|CURL|CURLM|CURLMsg|curl_httppost) *(\*+)) (\w+)/) && ($4 ne "const")) {
+            checkwarn("ASTERISKNOSPACE",
+                      $line, length($1), $file, $ol,
+                      "no space after declarative asterisk");
+        }
+        # check for 'char*'
+        if(($l =~ /(^.*(char|int|long|void|curl_slist|CURL|CURLM|CURLMsg|curl_httppost|sockaddr_in|FILE)\*)/)) {
+            checkwarn("ASTERISKNOSPACE",
+                      $line, length($1)-1, $file, $ol,
+                      "no space before asterisk");
+        }
+
+        # check for 'void func() {', but avoid false positives by requiring
+        # both an open and closed parentheses before the open brace
+        if($l =~ /^((\w).*){\z/) {
+            my $k = $1;
+            $k =~ s/const *//;
+            $k =~ s/static *//;
+            if($k =~ /\(.*\)/) {
+                checkwarn("BRACEPOS",
+                          $line, length($l)-1, $file, $ol,
+                          "wrongly placed open brace");
+            }
+        }
         $line++;
         $prevl = $ol;
     }
 
     if(!$copyright) {
         checkwarn("COPYRIGHT", 1, 0, $file, "", "Missing copyright statement", 1);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/config-amigaos.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/config-amigaos.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/config-amigaos.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/config-amigaos.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -95,13 +95,13 @@
 #define USE_OPENSSL 1
 #define CURL_DISABLE_LDAP 1
 
 #define OS "AmigaOS"
 
 #define PACKAGE "curl"
-#define PACKAGE_BUGREPORT "curl-bug@haxx.se"
+#define PACKAGE_BUGREPORT "a suitable mailing list: https://curl.haxx.se/mail/"
 #define PACKAGE_NAME "curl"
 #define PACKAGE_STRING "curl -"
 #define PACKAGE_TARNAME "curl"
 #define PACKAGE_VERSION "-"
 #define CURL_CA_BUNDLE "s:curl-ca-bundle.crt"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/config-symbian.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/config-symbian.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/config-symbian.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/config-symbian.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -673,13 +673,13 @@
 /*#define PACKAGE_VERSION "-"*/
 
 /* a suitable file to read random data from */
 /*#define RANDOM_FILE "/dev/urandom"*/
 
 #define RECV_TYPE_ARG1 int
-#define RECV_TYPE_ARG2 void*
+#define RECV_TYPE_ARG2 void *
 #define RECV_TYPE_ARG3 size_t
 #define RECV_TYPE_ARG4 int
 #define RECV_TYPE_RETV ssize_t
 
 #define RECVFROM_TYPE_ARG1 int
 #define RECVFROM_TYPE_ARG2 void
@@ -689,13 +689,13 @@
 #define RECVFROM_TYPE_ARG6 size_t
 #define RECVFROM_TYPE_RETV ssize_t
 #define RECVFROM_TYPE_ARG2_IS_VOID 1
 
 #define SEND_TYPE_ARG1 int
 #define SEND_QUAL_ARG2 const
-#define SEND_TYPE_ARG2 void*
+#define SEND_TYPE_ARG2 void *
 #define SEND_TYPE_ARG3 size_t
 #define SEND_TYPE_ARG4 int
 #define SEND_TYPE_RETV ssize_t
 
 
 /* Define as the return type of signal handlers (`int' or `void'). */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/conncache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/conncache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/conncache.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/conncache.c	2016-12-19 15:27:56.000000000 +0800
@@ -129,14 +129,16 @@
 
 /* returns an allocated key to find a bundle for this connection */
 static char *hashkey(struct connectdata *conn)
 {
   const char *hostname;
 
-  if(conn->bits.proxy)
-    hostname = conn->proxy.name;
+  if(conn->bits.socksproxy)
+    hostname = conn->socks_proxy.host.name;
+  else if(conn->bits.httpproxy)
+    hostname = conn->http_proxy.host.name;
   else if(conn->bits.conn_to_host)
     hostname = conn->conn_to_host.name;
   else
     hostname = conn->host.name;
 
   return aprintf("%s:%d", hostname, conn->port);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/connect.c	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/connect.c	2016-12-19 16:15:11.000000000 +0800
@@ -176,28 +176,28 @@
  * If 'nowp' is non-NULL, it points to the current time.
  * 'duringconnect' is FALSE if not during a connect, as then of course the
  * connect timeout is not taken into account!
  *
  * @unittest: 1303
  */
-long Curl_timeleft(struct Curl_easy *data,
-                   struct timeval *nowp,
-                   bool duringconnect)
+time_t Curl_timeleft(struct Curl_easy *data,
+                     struct timeval *nowp,
+                     bool duringconnect)
 {
   int timeout_set = 0;
-  long timeout_ms = duringconnect?DEFAULT_CONNECT_TIMEOUT:0;
+  time_t timeout_ms = duringconnect?DEFAULT_CONNECT_TIMEOUT:0;
   struct timeval now;
 
   /* if a timeout is set, use the most restrictive one */
 
   if(data->set.timeout > 0)
     timeout_set |= 1;
   if(duringconnect && (data->set.connecttimeout > 0))
     timeout_set |= 2;
 
-  switch (timeout_set) {
+  switch(timeout_set) {
   case 1:
     timeout_ms = data->set.timeout;
     break;
   case 2:
     timeout_ms = data->set.connecttimeout;
     break;
@@ -598,42 +598,44 @@
 /* Copies connection info into the session handle to make it available
    when the session handle is no longer associated with a connection. */
 void Curl_persistconninfo(struct connectdata *conn)
 {
   memcpy(conn->data->info.conn_primary_ip, conn->primary_ip, MAX_IPADR_LEN);
   memcpy(conn->data->info.conn_local_ip, conn->local_ip, MAX_IPADR_LEN);
+  conn->data->info.conn_scheme = conn->handler->scheme;
+  conn->data->info.conn_protocol = conn->handler->protocol;
   conn->data->info.conn_primary_port = conn->primary_port;
   conn->data->info.conn_local_port = conn->local_port;
 }
 
 /* retrieves ip address and port from a sockaddr structure */
-static bool getaddressinfo(struct sockaddr* sa, char* addr,
-                           long* port)
+static bool getaddressinfo(struct sockaddr *sa, char *addr,
+                           long *port)
 {
   unsigned short us_port;
-  struct sockaddr_in* si = NULL;
+  struct sockaddr_in *si = NULL;
 #ifdef ENABLE_IPV6
-  struct sockaddr_in6* si6 = NULL;
+  struct sockaddr_in6 *si6 = NULL;
 #endif
 #if defined(HAVE_SYS_UN_H) && defined(AF_UNIX)
-  struct sockaddr_un* su = NULL;
+  struct sockaddr_un *su = NULL;
 #endif
 
-  switch (sa->sa_family) {
+  switch(sa->sa_family) {
     case AF_INET:
-      si = (struct sockaddr_in*)(void*) sa;
+      si = (struct sockaddr_in *)(void *) sa;
       if(Curl_inet_ntop(sa->sa_family, &si->sin_addr,
                         addr, MAX_IPADR_LEN)) {
         us_port = ntohs(si->sin_port);
         *port = us_port;
         return TRUE;
       }
       break;
 #ifdef ENABLE_IPV6
     case AF_INET6:
-      si6 = (struct sockaddr_in6*)(void*) sa;
+      si6 = (struct sockaddr_in6 *)(void *) sa;
       if(Curl_inet_ntop(sa->sa_family, &si6->sin6_addr,
                         addr, MAX_IPADR_LEN)) {
         us_port = ntohs(si6->sin6_port);
         *port = us_port;
         return TRUE;
       }
@@ -719,13 +721,13 @@
 CURLcode Curl_is_connected(struct connectdata *conn,
                            int sockindex,
                            bool *connected)
 {
   struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_OK;
-  long allow;
+  time_t allow;
   int error = 0;
   struct timeval now;
   int rc;
   int i;
 
   DEBUGASSERT(sockindex >= FIRSTSOCKET && sockindex <= SECONDARYSOCKET);
@@ -840,24 +842,26 @@
     }
   }
 
   if(result) {
     /* no more addresses to try */
 
-    const char* hostname;
+    const char *hostname;
 
     /* if the first address family runs out of addresses to try before
        the happy eyeball timeout, go ahead and try the next family now */
     if(conn->tempaddr[1] == NULL) {
       result = trynextip(conn, sockindex, 1);
       if(!result)
         return result;
     }
 
-    if(conn->bits.proxy)
-      hostname = conn->proxy.name;
+    if(conn->bits.socksproxy)
+      hostname = conn->socks_proxy.host.name;
+    else if(conn->bits.httpproxy)
+      hostname = conn->http_proxy.host.name;
     else if(conn->bits.conn_to_host)
       hostname = conn->conn_to_host.name;
     else
       hostname = conn->host.name;
 
     failf(data, "Failed to connect to %s port %ld: %s",
@@ -1150,13 +1154,13 @@
                           const struct Curl_dns_entry *remotehost)
 {
   struct Curl_easy *data = conn->data;
   struct timeval before = Curl_tvnow();
   CURLcode result = CURLE_COULDNT_CONNECT;
 
-  long timeout_ms = Curl_timeleft(data, &before, TRUE);
+  time_t timeout_ms = Curl_timeleft(data, &before, TRUE);
 
   if(timeout_ms < 0) {
     /* a precaution, no need to continue if time already is up */
     failf(data, "Connection time-out");
     return CURLE_OPERATION_TIMEDOUT;
   }
@@ -1240,38 +1244,47 @@
     }
 
     if(connp)
       /* only store this if the caller cares for it */
       *connp = c;
     sockfd = c->sock[FIRSTSOCKET];
-    /* we have a socket connected, let's determine if the server shut down */
-    /* determine if ssl */
-    if(c->ssl[FIRSTSOCKET].use) {
-      /* use the SSL context */
-      if(!Curl_ssl_check_cxn(c))
-        return CURL_SOCKET_BAD;   /* FIN received */
-    }
-/* Minix 3.1 doesn't support any flags on recv; just assume socket is OK */
-#ifdef MSG_PEEK
-    else if(sockfd != CURL_SOCKET_BAD) {
-      /* use the socket */
-      char buf;
-      if(recv((RECV_TYPE_ARG1)sockfd, (RECV_TYPE_ARG2)&buf,
-              (RECV_TYPE_ARG3)1, (RECV_TYPE_ARG4)MSG_PEEK) == 0) {
-        return CURL_SOCKET_BAD;   /* FIN received */
-      }
-    }
-#endif
   }
   else
     return CURL_SOCKET_BAD;
 
   return sockfd;
 }
 
 /*
+ * Check if a connection seems to be alive.
+ */
+bool Curl_connalive(struct connectdata *conn)
+{
+  /* First determine if ssl */
+  if(conn->ssl[FIRSTSOCKET].use) {
+    /* use the SSL context */
+    if(!Curl_ssl_check_cxn(conn))
+      return false;   /* FIN received */
+  }
+/* Minix 3.1 doesn't support any flags on recv; just assume socket is OK */
+#ifdef MSG_PEEK
+  else if(conn->sock[FIRSTSOCKET] == CURL_SOCKET_BAD)
+    return false;
+  else {
+    /* use the socket */
+    char buf;
+    if(recv((RECV_TYPE_ARG1)conn->sock[FIRSTSOCKET], (RECV_TYPE_ARG2)&buf,
+            (RECV_TYPE_ARG3)1, (RECV_TYPE_ARG4)MSG_PEEK) == 0) {
+      return false;   /* FIN received */
+    }
+  }
+#endif
+  return true;
+}
+
+/*
  * Close a socket.
  *
  * 'conn' can be NULL, beware!
  */
 int Curl_closesocket(struct connectdata *conn,
                       curl_socket_t sock)
@@ -1388,6 +1401,19 @@
     DEBUGF(infof(conn->data, "Marked for [%s]: %s\n",
                  closeit?"closure":"keep alive", reason));
     conn->bits.close = closeit; /* the only place in the source code that
                                    should assign this bit */
   }
 }
+
+/* Data received can be cached at various levels, so check them all here. */
+bool Curl_conn_data_pending(struct connectdata *conn, int sockindex)
+{
+  int readable;
+
+  if(Curl_ssl_data_pending(conn, sockindex) ||
+     Curl_recv_has_postponed_data(conn, sockindex))
+    return true;
+
+  readable = SOCKET_READABLE(conn->sock[sockindex], 0);
+  return (readable > 0 && (readable & CURL_CSELECT_IN));
+}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/connect.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/connect.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/connect.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/connect.h	2016-12-19 16:15:11.000000000 +0800
@@ -32,15 +32,15 @@
 
 CURLcode Curl_connecthost(struct connectdata *conn,
                           const struct Curl_dns_entry *host);
 
 /* generic function that returns how much time there's left to run, according
    to the timeouts set */
-long Curl_timeleft(struct Curl_easy *data,
-                   struct timeval *nowp,
-                   bool duringconnect);
+time_t Curl_timeleft(struct Curl_easy *data,
+                     struct timeval *nowp,
+                     bool duringconnect);
 
 #define DEFAULT_CONNECT_TIMEOUT 300000 /* milliseconds == five minutes */
 #define HAPPY_EYEBALLS_TIMEOUT     200 /* milliseconds to wait between
                                           IPv4/IPv6 connection attempts */
 
 /*
@@ -49,12 +49,17 @@
  *
  * The returned socket will be CURL_SOCKET_BAD in case of failure!
  */
 curl_socket_t Curl_getconnectinfo(struct Curl_easy *data,
                                   struct connectdata **connp);
 
+/*
+ * Check if a connection seems to be alive.
+ */
+bool Curl_connalive(struct connectdata *conn);
+
 #ifdef USE_WINSOCK
 /* When you run a program that uses the Windows Sockets API, you may
    experience slow performance when you copy data to a TCP server.
 
    https://support.microsoft.com/kb/823764
 
@@ -134,7 +139,9 @@
 #else /* if !CURLDEBUG */
 #define streamclose(x,y) Curl_conncontrol(x, CONNCTRL_STREAM)
 #define connclose(x,y) Curl_conncontrol(x, CONNCTRL_CONNECTION)
 #define connkeep(x,y) Curl_conncontrol(x, CONNCTRL_KEEP)
 #endif
 
+bool Curl_conn_data_pending(struct connectdata *conn, int sockindex);
+
 #endif /* HEADER_CURL_CONNECT_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/content_encoding.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/content_encoding.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/content_encoding.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/content_encoding.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -25,14 +25,14 @@
 #ifdef HAVE_LIBZ
 
 #include "urldata.h"
 #include <curl/curl.h>
 #include "sendf.h"
 #include "content_encoding.h"
+#include "strdup.h"
 #include "curl_memory.h"
-
 #include "memdebug.h"
 
 /* Comment this out if zlib is always going to be at least ver. 1.2.0.4
    (doing so will reduce code size slightly). */
 #define OLD_ZLIB_SUPPORT 1
 
@@ -66,17 +66,17 @@
 
 static CURLcode
 process_zlib_error(struct connectdata *conn, z_stream *z)
 {
   struct Curl_easy *data = conn->data;
   if(z->msg)
-    failf (data, "Error while processing content unencoding: %s",
-           z->msg);
+    failf(data, "Error while processing content unencoding: %s",
+          z->msg);
   else
-    failf (data, "Error while processing content unencoding: "
-           "Unknown failure within decompression software.");
+    failf(data, "Error while processing content unencoding: "
+          "Unknown failure within decompression software.");
 
   return CURLE_BAD_CONTENT_ENCODING;
 }
 
 static CURLcode
 exit_zlib(z_stream *z, zlibInitState *zlib_init, CURLcode result)
@@ -324,20 +324,20 @@
    * make the block bigger, copy the next part in and keep waiting.
    *
    * This is only required with zlib versions < 1.2.0.4 as newer versions
    * can handle the gzip header themselves.
    */
 
-  switch (k->zlib_init) {
+  switch(k->zlib_init) {
   /* Skip over gzip header? */
   case ZLIB_INIT:
   {
     /* Initial call state */
     ssize_t hlen;
 
-    switch (check_gzip_header((unsigned char *)k->str, nread, &hlen)) {
+    switch(check_gzip_header((unsigned char *)k->str, nread, &hlen)) {
     case GZIP_OK:
       z->next_in = (Bytef *)k->str + hlen;
       z->avail_in = (uInt)(nread - hlen);
       k->zlib_init = ZLIB_GZIP_INFLATING; /* Inflating stream state */
       break;
 
@@ -368,24 +368,21 @@
   break;
 
   case ZLIB_GZIP_HEADER:
   {
     /* Need more gzip header data state */
     ssize_t hlen;
-    unsigned char *oldblock = z->next_in;
-
     z->avail_in += (uInt)nread;
-    z->next_in = realloc(z->next_in, z->avail_in);
+    z->next_in = Curl_saferealloc(z->next_in, z->avail_in);
     if(z->next_in == NULL) {
-      free(oldblock);
       return exit_zlib(z, &k->zlib_init, CURLE_OUT_OF_MEMORY);
     }
     /* Append the new block of data to the previous one */
     memcpy(z->next_in + z->avail_in - nread, k->str, nread);
 
-    switch (check_gzip_header(z->next_in, z->avail_in, &hlen)) {
+    switch(check_gzip_header(z->next_in, z->avail_in, &hlen)) {
     case GZIP_OK:
       /* This is the zlib stream data */
       free(z->next_in);
       /* Don't point into the malloced block since we just freed it */
       z->next_in = (Bytef *)k->str + hlen + nread - z->avail_in;
       z->avail_in = (uInt)(z->avail_in - hlen);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/cookie.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/cookie.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/cookie.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/cookie.c	2016-12-19 15:27:56.000000000 +0800
@@ -143,18 +143,18 @@
 }
 
 /*
  * matching cookie path and url path
  * RFC6265 5.1.4 Paths and Path-Match
  */
-static bool pathmatch(const char* cookie_path, const char* request_uri)
+static bool pathmatch(const char *cookie_path, const char *request_uri)
 {
   size_t cookie_path_len;
   size_t uri_path_len;
-  char* uri_path = NULL;
-  char* pos;
+  char *uri_path = NULL;
+  char *pos;
   bool ret = FALSE;
 
   /* cookie_path must not have last '/' separator. ex: /sample */
   cookie_path_len = strlen(cookie_path);
   if(1 == cookie_path_len) {
     /* cookie_path must be '/' */
@@ -795,14 +795,14 @@
   remove_expired(c);
 
 #ifdef USE_LIBPSL
   /* Check if the domain is a Public Suffix and if yes, ignore the cookie.
      This needs a libpsl compiled with builtin data. */
   if(domain && co->domain && !isip(co->domain)) {
-    if(((psl = psl_builtin()) != NULL)
-        && !psl_is_cookie_domain_acceptable(psl, domain, co->domain)) {
+    psl = psl_builtin();
+    if(psl && !psl_is_cookie_domain_acceptable(psl, domain, co->domain)) {
       infof(data,
             "cookie '%s' dropped, domain '%s' must not set cookies for '%s'\n",
             co->name, domain, co->domain);
       freecookie(co);
       return NULL;
     }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_addrinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_addrinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_addrinfo.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_addrinfo.c	2016-12-19 15:27:56.000000000 +0800
@@ -143,13 +143,14 @@
       continue;
 
     /* ignore elements with bogus address size */
     if((size_t)ai->ai_addrlen < ss_size)
       continue;
 
-    if((ca = malloc(sizeof(Curl_addrinfo))) == NULL) {
+    ca = malloc(sizeof(Curl_addrinfo));
+    if(!ca) {
       error = EAI_MEMORY;
       break;
     }
 
     /* copy each structure member individually, member ordering, */
     /* size, or padding might be different for each platform.    */
@@ -160,21 +161,23 @@
     ca->ai_protocol  = ai->ai_protocol;
     ca->ai_addrlen   = (curl_socklen_t)ss_size;
     ca->ai_addr      = NULL;
     ca->ai_canonname = NULL;
     ca->ai_next      = NULL;
 
-    if((ca->ai_addr = malloc(ss_size)) == NULL) {
+    ca->ai_addr = malloc(ss_size);
+    if(!ca->ai_addr) {
       error = EAI_MEMORY;
       free(ca);
       break;
     }
     memcpy(ca->ai_addr, ai->ai_addr, ss_size);
 
     if(ai->ai_canonname != NULL) {
-      if((ca->ai_canonname = strdup(ai->ai_canonname)) == NULL) {
+      ca->ai_canonname = strdup(ai->ai_canonname);
+      if(!ca->ai_canonname) {
         error = EAI_MEMORY;
         free(ca->ai_addr);
         free(ca);
         break;
       }
     }
@@ -283,27 +286,30 @@
 
   for(i=0; (curr = he->h_addr_list[i]) != NULL; i++) {
 
     size_t ss_size;
 #ifdef ENABLE_IPV6
     if(he->h_addrtype == AF_INET6)
-      ss_size = sizeof (struct sockaddr_in6);
+      ss_size = sizeof(struct sockaddr_in6);
     else
 #endif
-      ss_size = sizeof (struct sockaddr_in);
+      ss_size = sizeof(struct sockaddr_in);
 
-    if((ai = calloc(1, sizeof(Curl_addrinfo))) == NULL) {
+    ai = calloc(1, sizeof(Curl_addrinfo));
+    if(!ai) {
       result = CURLE_OUT_OF_MEMORY;
       break;
     }
-    if((ai->ai_canonname = strdup(he->h_name)) == NULL) {
+    ai->ai_canonname = strdup(he->h_name);
+    if(!ai->ai_canonname) {
       result = CURLE_OUT_OF_MEMORY;
       free(ai);
       break;
     }
-    if((ai->ai_addr = calloc(1, ss_size)) == NULL) {
+    ai->ai_addr = calloc(1, ss_size);
+    if(!ai->ai_addr) {
       result = CURLE_OUT_OF_MEMORY;
       free(ai->ai_canonname);
       free(ai);
       break;
     }
 
@@ -322,13 +328,13 @@
     ai->ai_socktype = SOCK_STREAM;
 
     ai->ai_addrlen = (curl_socklen_t)ss_size;
 
     /* leave the rest of the struct filled with zero */
 
-    switch (ai->ai_family) {
+    switch(ai->ai_family) {
     case AF_INET:
       addr = (void *)ai->ai_addr; /* storage area for this info */
 
       memcpy(&addr->sin_addr, curr, sizeof(struct in_addr));
       addr->sin_family = (unsigned short)(he->h_addrtype);
       addr->sin_port = htons((unsigned short)port);
@@ -472,31 +478,35 @@
 }
 
 #ifdef USE_UNIX_SOCKETS
 /**
  * Given a path to a Unix domain socket, return a newly allocated Curl_addrinfo
  * struct initialized with this path.
+ * Set '*longpath' to TRUE if the error is a too long path.
  */
-Curl_addrinfo *Curl_unix2addr(const char *path)
+Curl_addrinfo *Curl_unix2addr(const char *path, int *longpath)
 {
   Curl_addrinfo *ai;
   struct sockaddr_un *sa_un;
   size_t path_len;
 
   ai = calloc(1, sizeof(Curl_addrinfo));
   if(!ai)
     return NULL;
-  if((ai->ai_addr = calloc(1, sizeof(struct sockaddr_un))) == NULL) {
+  ai->ai_addr = calloc(1, sizeof(struct sockaddr_un));
+  if(!ai->ai_addr) {
     free(ai);
+    *longpath = FALSE;
     return NULL;
   }
   /* sun_path must be able to store the NUL-terminated path */
   path_len = strlen(path);
   if(path_len >= sizeof(sa_un->sun_path)) {
     free(ai->ai_addr);
     free(ai);
+    *longpath = TRUE;
     return NULL;
   }
 
   ai->ai_family = AF_UNIX;
   ai->ai_socktype = SOCK_STREAM; /* assume reliable transport for HTTP */
   ai->ai_addrlen = (curl_socklen_t) sizeof(struct sockaddr_un);
@@ -573,13 +583,13 @@
   Curl_addrinfo *ca;
   struct sockaddr_in *addr;
 #ifdef ENABLE_IPV6
   struct sockaddr_in6 *addr6;
 #endif
   for(ca = addrinfo; ca != NULL; ca = ca->ai_next) {
-    switch (ca->ai_family) {
+    switch(ca->ai_family) {
     case AF_INET:
       addr = (void *)ca->ai_addr; /* storage area for this info */
       addr->sin_port = htons((unsigned short)port);
       break;
 
 #ifdef ENABLE_IPV6
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_addrinfo.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_addrinfo.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_addrinfo.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_addrinfo.h	2016-12-19 15:27:56.000000000 +0800
@@ -77,13 +77,13 @@
 Curl_addrinfo *
 Curl_ip2addr(int af, const void *inaddr, const char *hostname, int port);
 
 Curl_addrinfo *Curl_str2addr(char *dotted, int port);
 
 #ifdef USE_UNIX_SOCKETS
-Curl_addrinfo *Curl_unix2addr(const char *path);
+Curl_addrinfo *Curl_unix2addr(const char *path, int *longpath);
 #endif
 
 #if defined(CURLDEBUG) && defined(HAVE_GETADDRINFO) && \
     defined(HAVE_FREEADDRINFO)
 void
 curl_dofreeaddrinfo(struct addrinfo *freethis,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_config.h.in	2016-10-31 17:43:03.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_config.h.in	2016-12-19 16:17:08.000000000 +0800
@@ -513,18 +513,12 @@
 /* Define to 1 if you have the <pwd.h> header file. */
 #undef HAVE_PWD_H
 
 /* Define to 1 if you have the `RAND_egd' function. */
 #undef HAVE_RAND_EGD
 
-/* Define to 1 if you have the `RAND_screen' function. */
-#undef HAVE_RAND_SCREEN
-
-/* Define to 1 if you have the `RAND_status' function. */
-#undef HAVE_RAND_STATUS
-
 /* Define to 1 if you have the recv function. */
 #undef HAVE_RECV
 
 /* Define to 1 if you have the <rsa.h> header file. */
 #undef HAVE_RSA_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_endian.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_endian.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_endian.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_endian.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -34,13 +34,13 @@
  * Parameters:
  *
  * buf      [in]     - A pointer to a 2 byte buffer.
  *
  * Returns the integer.
  */
-unsigned short Curl_read16_le(unsigned char *buf)
+unsigned short Curl_read16_le(const unsigned char *buf)
 {
   return (unsigned short)(((unsigned short)buf[0]) |
                           ((unsigned short)buf[1] << 8));
 }
 
 /*
@@ -53,13 +53,13 @@
  * Parameters:
  *
  * buf      [in]     - A pointer to a 4 byte buffer.
  *
  * Returns the integer.
  */
-unsigned int Curl_read32_le(unsigned char *buf)
+unsigned int Curl_read32_le(const unsigned char *buf)
 {
   return ((unsigned int)buf[0]) | ((unsigned int)buf[1] << 8) |
          ((unsigned int)buf[2] << 16) | ((unsigned int)buf[3] << 24);
 }
 
 #if (CURL_SIZEOF_CURL_OFF_T > 4)
@@ -74,25 +74,25 @@
  *
  * buf      [in]     - A pointer to a 8 byte buffer.
  *
  * Returns the integer.
  */
 #if defined(HAVE_LONGLONG)
-unsigned long long Curl_read64_le(unsigned char *buf)
+unsigned long long Curl_read64_le(const unsigned char *buf)
 {
   return ((unsigned long long)buf[0]) |
          ((unsigned long long)buf[1] << 8) |
          ((unsigned long long)buf[2] << 16) |
          ((unsigned long long)buf[3] << 24) |
          ((unsigned long long)buf[4] << 32) |
          ((unsigned long long)buf[5] << 40) |
          ((unsigned long long)buf[6] << 48) |
          ((unsigned long long)buf[7] << 56);
 }
 #else
-unsigned __int64 Curl_read64_le(unsigned char *buf)
+unsigned __int64 Curl_read64_le(const unsigned char *buf)
 {
   return ((unsigned __int64)buf[0]) | ((unsigned __int64)buf[1] << 8) |
          ((unsigned __int64)buf[2] << 16) | ((unsigned __int64)buf[3] << 24) |
          ((unsigned __int64)buf[4] << 32) | ((unsigned __int64)buf[5] << 40) |
          ((unsigned __int64)buf[6] << 48) | ((unsigned __int64)buf[7] << 56);
 }
@@ -110,13 +110,13 @@
  * Parameters:
  *
  * buf      [in]     - A pointer to a 2 byte buffer.
  *
  * Returns the integer.
  */
-unsigned short Curl_read16_be(unsigned char *buf)
+unsigned short Curl_read16_be(const unsigned char *buf)
 {
   return (unsigned short)(((unsigned short)buf[0] << 8) |
                           ((unsigned short)buf[1]));
 }
 
 /*
@@ -129,13 +129,13 @@
  * Parameters:
  *
  * buf      [in]     - A pointer to a 4 byte buffer.
  *
  * Returns the integer.
  */
-unsigned int Curl_read32_be(unsigned char *buf)
+unsigned int Curl_read32_be(const unsigned char *buf)
 {
   return ((unsigned int)buf[0] << 24) | ((unsigned int)buf[1] << 16) |
          ((unsigned int)buf[2] << 8) | ((unsigned int)buf[3]);
 }
 
 #if (CURL_SIZEOF_CURL_OFF_T > 4)
@@ -150,25 +150,25 @@
  *
  * buf      [in]     - A pointer to a 8 byte buffer.
  *
  * Returns the integer.
  */
 #if defined(HAVE_LONGLONG)
-unsigned long long Curl_read64_be(unsigned char *buf)
+unsigned long long Curl_read64_be(const unsigned char *buf)
 {
   return ((unsigned long long)buf[0] << 56) |
          ((unsigned long long)buf[1] << 48) |
          ((unsigned long long)buf[2] << 40) |
          ((unsigned long long)buf[3] << 32) |
          ((unsigned long long)buf[4] << 24) |
          ((unsigned long long)buf[5] << 16) |
          ((unsigned long long)buf[6] << 8) |
          ((unsigned long long)buf[7]);
 }
 #else
-unsigned __int64 Curl_read64_be(unsigned char *buf)
+unsigned __int64 Curl_read64_be(const unsigned char *buf)
 {
   return ((unsigned __int64)buf[0] << 56) | ((unsigned __int64)buf[1] << 48) |
          ((unsigned __int64)buf[2] << 40) | ((unsigned __int64)buf[3] << 32) |
          ((unsigned __int64)buf[4] << 24) | ((unsigned __int64)buf[5] << 16) |
          ((unsigned __int64)buf[6] << 8) | ((unsigned __int64)buf[7]);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_endian.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_endian.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_endian.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_endian.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -20,38 +20,38 @@
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 /* Converts a 16-bit integer from little endian */
-unsigned short Curl_read16_le(unsigned char *buf);
+unsigned short Curl_read16_le(const unsigned char *buf);
 
 /* Converts a 32-bit integer from little endian */
-unsigned int Curl_read32_le(unsigned char *buf);
+unsigned int Curl_read32_le(const unsigned char *buf);
 
 #if (CURL_SIZEOF_CURL_OFF_T > 4)
 /* Converts a 64-bit integer from little endian */
 #if defined(HAVE_LONGLONG)
-unsigned long long Curl_read64_le(unsigned char *buf);
+unsigned long long Curl_read64_le(const unsigned char *buf);
 #else
-unsigned __int64 Curl_read64_le(unsigned char *buf);
+unsigned __int64 Curl_read64_le(const unsigned char *buf);
 #endif
 #endif
 
 /* Converts a 16-bit integer from big endian */
-unsigned short Curl_read16_be(unsigned char *buf);
+unsigned short Curl_read16_be(const unsigned char *buf);
 
 /* Converts a 32-bit integer from big endian */
-unsigned int Curl_read32_be(unsigned char *buf);
+unsigned int Curl_read32_be(const unsigned char *buf);
 
 #if (CURL_SIZEOF_CURL_OFF_T > 4)
 /* Converts a 64-bit integer from big endian */
 #if defined(HAVE_LONGLONG)
-unsigned long long Curl_read64_be(unsigned char *buf);
+unsigned long long Curl_read64_be(const unsigned char *buf);
 #else
-unsigned __int64 Curl_read64_be(unsigned char *buf);
+unsigned __int64 Curl_read64_be(const unsigned char *buf);
 #endif
 #endif
 
 /* Converts a 16-bit integer to little endian */
 void Curl_write16_le(const short value, unsigned char *buffer);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_gethostname.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_gethostname.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_gethostname.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_gethostname.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -45,24 +45,24 @@
  * LD_PRELOAD mechanism and additionally have environment variable
  * CURL_GETHOSTNAME set in order to override the returned host name.
  *
  * For libcurl static library release builds no overriding takes place.
  */
 
-int Curl_gethostname(char *name, GETHOSTNAME_TYPE_ARG2 namelen) {
-
+int Curl_gethostname(char *name, GETHOSTNAME_TYPE_ARG2 namelen)
+{
 #ifndef HAVE_GETHOSTNAME
 
   /* Allow compilation and return failure when unavailable */
   (void) name;
   (void) namelen;
   return -1;
 
 #else
   int err;
-  char* dot;
+  char *dot;
 
 #ifdef DEBUGBUILD
 
   /* Override host name when environment variable CURL_GETHOSTNAME is set */
   const char *force_hostname = getenv("CURL_GETHOSTNAME");
   if(force_hostname) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_gssapi.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_gssapi.c	2016-12-19 15:27:56.000000000 +0800
@@ -91,13 +91,13 @@
                                   GSS_C_NO_OID,
                                   &msg_ctx,
                                   &status_string);
     if(GSS_LOG_BUFFER_LEN > len + status_string.length + 3) {
       len += snprintf(buf + len, GSS_LOG_BUFFER_LEN - len,
                       "%.*s. ", (int)status_string.length,
-                      (char*)status_string.value);
+                      (char *)status_string.value);
     }
     gss_release_buffer(&min_stat, &status_string);
   } while(!GSS_ERROR(maj_stat) && msg_ctx != 0);
 
   return len;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_hmac.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_hmac.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_hmac.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_hmac.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -21,17 +21,17 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #ifndef CURL_DISABLE_CRYPTO_AUTH
 
-typedef void    (* HMAC_hinit_func)(void * context);
-typedef void    (* HMAC_hupdate_func)(void * context,
-                                      const unsigned char * data,
+typedef void    (* HMAC_hinit_func)(void *context);
+typedef void    (* HMAC_hupdate_func)(void *context,
+                                      const unsigned char *data,
                                       unsigned int len);
-typedef void    (* HMAC_hfinal_func)(unsigned char * result, void * context);
+typedef void    (* HMAC_hfinal_func)(unsigned char *result, void *context);
 
 
 /* Per-hash function HMAC parameters. */
 
 typedef struct {
   HMAC_hinit_func       hmac_hinit;     /* Initialize context procedure. */
@@ -43,25 +43,25 @@
 } HMAC_params;
 
 
 /* HMAC computation context. */
 
 typedef struct {
-  const HMAC_params *   hmac_hash;      /* Hash function definition. */
-  void *                hmac_hashctxt1; /* Hash function context 1. */
-  void *                hmac_hashctxt2; /* Hash function context 2. */
+  const HMAC_params *hmac_hash; /* Hash function definition. */
+  void *hmac_hashctxt1;         /* Hash function context 1. */
+  void *hmac_hashctxt2;         /* Hash function context 2. */
 } HMAC_context;
 
 
 /* Prototypes. */
 
-HMAC_context * Curl_HMAC_init(const HMAC_params * hashparams,
-                              const unsigned char * key,
+HMAC_context * Curl_HMAC_init(const HMAC_params *hashparams,
+                              const unsigned char *key,
                               unsigned int keylen);
-int Curl_HMAC_update(HMAC_context * context,
-                     const unsigned char * data,
+int Curl_HMAC_update(HMAC_context *context,
+                     const unsigned char *data,
                      unsigned int len);
-int Curl_HMAC_final(HMAC_context * context, unsigned char * result);
+int Curl_HMAC_final(HMAC_context *context, unsigned char *result);
 
 #endif
 
 #endif /* HEADER_CURL_HMAC_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_ntlm_core.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_ntlm_core.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_ntlm_core.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_ntlm_core.c	2016-12-19 15:27:56.000000000 +0800
@@ -563,13 +563,13 @@
     md4_update(&MD4pw, (unsigned int)(2 * len), pw);
     md4_digest(&MD4pw, MD4_DIGEST_SIZE, ntbuffer);
 #elif defined(USE_GNUTLS)
     gcry_md_hd_t MD4pw;
     gcry_md_open(&MD4pw, GCRY_MD_MD4, 0);
     gcry_md_write(MD4pw, pw, 2 * len);
-    memcpy (ntbuffer, gcry_md_read (MD4pw, 0), MD4_DIGEST_LENGTH);
+    memcpy(ntbuffer, gcry_md_read(MD4pw, 0), MD4_DIGEST_LENGTH);
     gcry_md_close(MD4pw);
 #elif defined(USE_MBEDTLS)
     mbedtls_md4(pw, 2 * len, ntbuffer);
 #elif defined(USE_NSS) || defined(USE_OS400CRYPTO)
     Curl_md4it(ntbuffer, pw, 2 * len);
 #elif defined(USE_DARWINSSL)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_ntlm_wb.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_ntlm_wb.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_ntlm_wb.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_ntlm_wb.c	2016-12-19 15:27:56.000000000 +0800
@@ -48,12 +48,13 @@
 #include "sendf.h"
 #include "select.h"
 #include "vauth/ntlm.h"
 #include "curl_ntlm_wb.h"
 #include "url.h"
 #include "strerror.h"
+#include "strdup.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 #if DEBUG_ME
@@ -153,13 +154,14 @@
 #endif
     if(!username || !username[0])
       username = userp;
   }
   slash = strpbrk(username, "\\/");
   if(slash) {
-    if((domain = strdup(username)) == NULL)
+    domain = strdup(username);
+    if(!domain)
       return CURLE_OUT_OF_MEMORY;
     slash = domain + (slash - username);
     *slash = '\0';
     username = username + (slash - domain) + 1;
   }
 
@@ -290,17 +292,16 @@
 
     len_out += size;
     if(buf[len_out - 1] == '\n') {
       buf[len_out - 1] = '\0';
       break;
     }
-    newbuf = realloc(buf, len_out + NTLM_BUFSIZE);
-    if(!newbuf) {
-      free(buf);
+    newbuf = Curl_saferealloc(buf, len_out + NTLM_BUFSIZE);
+    if(!newbuf)
       return CURLE_OUT_OF_MEMORY;
-    }
+
     buf = newbuf;
   }
 
   /* Samba/winbind installed but not configured */
   if(state == NTLMSTATE_TYPE1 &&
      len_out == 3 &&
@@ -346,13 +347,13 @@
 
   DEBUGASSERT(conn);
   DEBUGASSERT(conn->data);
 
   if(proxy) {
     allocuserpwd = &conn->allocptr.proxyuserpwd;
-    userp = conn->proxyuser;
+    userp = conn->http_proxy.user;
     ntlm = &conn->proxyntlm;
     authp = &conn->data->state.authproxy;
   }
   else {
     allocuserpwd = &conn->allocptr.userpwd;
     userp = conn->user;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_sasl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_sasl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_sasl.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_sasl.c	2016-12-19 15:27:56.000000000 +0800
@@ -259,16 +259,19 @@
   unsigned int enabledmechs;
   const char *mech = NULL;
   char *resp = NULL;
   size_t len = 0;
   saslstate state1 = SASL_STOP;
   saslstate state2 = SASL_FINAL;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const long int port = SSL_IS_PROXY() ? conn->port : conn->remote_port;
 #if defined(USE_KERBEROS5)
-  const char* service = data->set.str[STRING_SERVICE_NAME] ?
-                        data->set.str[STRING_SERVICE_NAME] :
-                        sasl->params->service;
+  const char *service = data->set.str[STRING_SERVICE_NAME] ?
+    data->set.str[STRING_SERVICE_NAME] :
+    sasl->params->service;
 #endif
 
   sasl->force_ir = force_ir;    /* Latch for future use */
   sasl->authused = 0;           /* No mechanism used yet */
   enabledmechs = sasl->authmechs & sasl->prefmech;
   *progress = SASL_IDLE;
@@ -338,14 +341,14 @@
       state1 = SASL_OAUTH2;
       state2 = SASL_OAUTH2_RESP;
       sasl->authused = SASL_MECH_OAUTHBEARER;
 
       if(force_ir || data->set.sasl_ir)
         result = Curl_auth_create_oauth_bearer_message(data, conn->user,
-                                                       conn->host.name,
-                                                       conn->port,
+                                                       hostname,
+                                                       port,
                                                        conn->oauth_bearer,
                                                        &resp, &len);
     }
     else if((enabledmechs & SASL_MECH_XOAUTH2) && conn->oauth_bearer) {
       mech = SASL_MECH_STRING_XOAUTH2;
       state1 = SASL_OAUTH2;
@@ -405,12 +408,15 @@
                             int code, saslprogress *progress)
 {
   CURLcode result = CURLE_OK;
   struct Curl_easy *data = conn->data;
   saslstate newstate = SASL_FINAL;
   char *resp = NULL;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const long int port = SSL_IS_PROXY() ? conn->port : conn->remote_port;
 #if !defined(CURL_DISABLE_CRYPTO_AUTH)
   char *serverdata;
   char *chlg = NULL;
   size_t chlglen = 0;
 #endif
 #if !defined(CURL_DISABLE_CRYPTO_AUTH) || defined(USE_KERBEROS5)
@@ -539,14 +545,14 @@
 #endif
 
   case SASL_OAUTH2:
     /* Create the authorisation message */
     if(sasl->authused == SASL_MECH_OAUTHBEARER) {
       result = Curl_auth_create_oauth_bearer_message(data, conn->user,
-                                                     conn->host.name,
-                                                     conn->port,
+                                                     hostname,
+                                                     port,
                                                      conn->oauth_bearer,
                                                      &resp, &len);
 
       /* Failures maybe sent by the server as continuations for OAUTHBEARER */
       newstate = SASL_OAUTH2_RESP;
     }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_sec.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_sec.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_sec.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_sec.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -27,25 +27,25 @@
   size_t size;
   int (*init)(void *);
   int (*auth)(void *, struct connectdata *);
   void (*end)(void *);
   int (*check_prot)(void *, int);
   int (*overhead)(void *, int, int);
-  int (*encode)(void *, const void*, int, int, void**);
-  int (*decode)(void *, void*, int, int, struct connectdata *);
+  int (*encode)(void *, const void *, int, int, void **);
+  int (*decode)(void *, void *, int, int, struct connectdata *);
 };
 
 #define AUTH_OK         0
 #define AUTH_CONTINUE   1
 #define AUTH_ERROR      2
 
 #ifdef HAVE_GSSAPI
-int Curl_sec_read_msg (struct connectdata *conn, char *,
-                       enum protection_level);
-void Curl_sec_end (struct connectdata *);
-CURLcode Curl_sec_login (struct connectdata *);
-int Curl_sec_request_prot (struct connectdata *conn, const char *level);
+int Curl_sec_read_msg(struct connectdata *conn, char *,
+                      enum protection_level);
+void Curl_sec_end(struct connectdata *);
+CURLcode Curl_sec_login(struct connectdata *);
+int Curl_sec_request_prot(struct connectdata *conn, const char *level);
 
 extern struct Curl_sec_client_mech Curl_krb5_client_mech;
 #endif
 
 #endif /* HEADER_CURL_SECURITY_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_setup.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_setup.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_setup.h	2016-10-31 15:48:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_setup.h	2016-12-19 15:27:56.000000000 +0800
@@ -464,14 +464,14 @@
 #    endif
 
 #  endif /* MSDOS */
 
 #  ifdef __minix
      /* Minix 3 versions up to at least 3.1.3 are missing these prototypes */
-     extern char * strtok_r(char *s, const char *delim, char **last);
-     extern struct tm * gmtime_r(const time_t * const timep, struct tm *tmp);
+     extern char *strtok_r(char *s, const char *delim, char **last);
+     extern struct tm *gmtime_r(const time_t * const timep, struct tm *tmp);
 #  endif
 
 #  define DIR_CHAR      "/"
 #  ifndef DOT_CHAR
 #    define DOT_CHAR      "."
 #  endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_threads.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_threads.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_threads.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_threads.c	2016-12-19 15:27:56.000000000 +0800
@@ -56,13 +56,13 @@
 
   (*func)(real_arg);
 
   return 0;
 }
 
-curl_thread_t Curl_thread_create(unsigned int (*func) (void*), void *arg)
+curl_thread_t Curl_thread_create(unsigned int (*func) (void *), void *arg)
 {
   curl_thread_t t = malloc(sizeof(pthread_t));
   struct curl_actual_call *ac = malloc(sizeof(struct curl_actual_call));
   if(!(ac && t))
     goto err;
 
@@ -97,13 +97,14 @@
 
   return ret;
 }
 
 #elif defined(USE_THREADS_WIN32)
 
-curl_thread_t Curl_thread_create(unsigned int (CURL_STDCALL *func) (void*),
+/* !checksrc! disable SPACEBEFOREPAREN 1 */
+curl_thread_t Curl_thread_create(unsigned int (CURL_STDCALL *func) (void *),
                                  void *arg)
 {
 #ifdef _WIN32_WCE
   return CreateThread(NULL, 0, func, arg, 0, NULL);
 #else
   curl_thread_t t;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_threads.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_threads.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/curl_threads.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/curl_threads.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -47,13 +47,14 @@
 #  define Curl_mutex_release(m)  LeaveCriticalSection(m)
 #  define Curl_mutex_destroy(m)  DeleteCriticalSection(m)
 #endif
 
 #if defined(USE_THREADS_POSIX) || defined(USE_THREADS_WIN32)
 
-curl_thread_t Curl_thread_create(unsigned int (CURL_STDCALL *func) (void*),
+/* !checksrc! disable SPACEBEFOREPAREN 1 */
+curl_thread_t Curl_thread_create(unsigned int (CURL_STDCALL *func) (void *),
                                  void *arg);
 
 void Curl_thread_destroy(curl_thread_t hnd);
 
 int Curl_thread_join(curl_thread_t *hnd);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/easy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/easy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/easy.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/easy.c	2016-12-19 15:27:56.000000000 +0800
@@ -924,12 +924,14 @@
   if(Curl_resolver_duphandle(&outcurl->state.resolver,
                              data->state.resolver))
     goto fail;
 
   Curl_convert_setup(outcurl);
 
+  Curl_initinfo(outcurl);
+
   outcurl->magic = CURLEASY_MAGIC_NUMBER;
 
   /* we reach this point and thus we are OK */
 
   return outcurl;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/escape.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/escape.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/escape.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/escape.c	2016-12-19 15:27:56.000000000 +0800
@@ -28,24 +28,25 @@
 #include <curl/curl.h>
 
 #include "urldata.h"
 #include "warnless.h"
 #include "non-ascii.h"
 #include "escape.h"
+#include "strdup.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 /* Portable character check (remember EBCDIC). Do not use isalnum() because
    its behavior is altered by the current locale.
    See https://tools.ietf.org/html/rfc3986#section-2.3
 */
 static bool Curl_isunreserved(unsigned char in)
 {
-  switch (in) {
+  switch(in) {
     case '0': case '1': case '2': case '3': case '4':
     case '5': case '6': case '7': case '8': case '9':
     case 'a': case 'b': case 'c': case 'd': case 'e':
     case 'f': case 'g': case 'h': case 'i': case 'j':
     case 'k': case 'l': case 'm': case 'n': case 'o':
     case 'p': case 'q': case 'r': case 's': case 't':
@@ -106,17 +107,15 @@
       ns[strindex++]=in;
     else {
       /* encode it */
       newlen += 2; /* the size grows with two, since this'll become a %XX */
       if(newlen > alloc) {
         alloc *= 2;
-        testing_ptr = realloc(ns, alloc);
-        if(!testing_ptr) {
-          free(ns);
+        testing_ptr = Curl_saferealloc(ns, alloc);
+        if(!testing_ptr)
           return NULL;
-        }
         else {
           ns = testing_ptr;
         }
       }
 
       result = Curl_convert_to_network(data, &in, 1);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/file.c	2016-11-02 07:36:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/file.c	2016-12-19 15:27:56.000000000 +0800
@@ -310,13 +310,13 @@
   char *buf = data->state.buffer;
   size_t nread;
   size_t nwrite;
   curl_off_t bytecount = 0;
   struct timeval now = Curl_tvnow();
   struct_stat file_stat;
-  const char* buf2;
+  const char *buf2;
 
   /*
    * Since FILE: doesn't do the full init, we need to provide some extra
    * assignments here.
    */
   conn->data->req.upload_fromhere = buf;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/formdata.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/formdata.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/formdata.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/formdata.c	2016-12-19 15:27:56.000000000 +0800
@@ -33,12 +33,13 @@
 #include "urldata.h" /* for struct Curl_easy */
 #include "formdata.h"
 #include "vtls/vtls.h"
 #include "strcase.h"
 #include "sendf.h"
 #include "strdup.h"
+#include "rand.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 #ifndef HAVE_BASENAME
@@ -77,13 +78,13 @@
 static struct curl_httppost *
 AddHttpPost(char *name, size_t namelength,
             char *value, curl_off_t contentslength,
             char *buffer, size_t bufferlength,
             char *contenttype,
             long flags,
-            struct curl_slist* contentHeader,
+            struct curl_slist *contentHeader,
             char *showfilename, char *userp,
             struct curl_httppost *parent_post,
             struct curl_httppost **httppost,
             struct curl_httppost **last_post)
 {
   struct curl_httppost *post;
@@ -312,13 +313,13 @@
       /* This is not array-state, get next option */
       option = va_arg(params, CURLformoption);
       if(CURLFORM_END == option)
         break;
     }
 
-    switch (option) {
+    switch(option) {
     case CURLFORM_ARRAY:
       if(array_state)
         /* we don't support an array from within an array */
         return_value = CURL_FORMADD_ILLEGAL_ARRAY;
       else {
         forms = va_arg(params, struct curl_forms *);
@@ -544,15 +545,15 @@
         break;
       }
     case CURLFORM_CONTENTHEADER:
       {
         /* this "cast increases required alignment of target type" but
            we consider it OK anyway */
-        struct curl_slist* list = array_state?
-          (struct curl_slist*)(void*)array_value:
-          va_arg(params, struct curl_slist*);
+        struct curl_slist *list = array_state?
+          (struct curl_slist *)(void *)array_value:
+          va_arg(params, struct curl_slist *);
 
         if(current_form->contentheader)
           return_value = CURL_FORMADD_OPTION_TWICE;
         else
           current_form->contentheader = list;
 
@@ -758,14 +759,14 @@
  *
  * For all others, have to read the entire file in, discarding the contents.
  * Most posted text files will be small, and binary files like zlib archives
  * and CD/DVD images should be either a STREAM_LF format or a fixed format.
  *
  */
-curl_off_t VmsRealFileSize(const char * name,
-                           const struct_stat * stat_buf)
+curl_off_t VmsRealFileSize(const char *name,
+                           const struct_stat *stat_buf)
 {
   char buffer[8192];
   curl_off_t count;
   int ret_stat;
   FILE * file;
 
@@ -788,14 +789,14 @@
 /*
  *
  *  VmsSpecialSize checks to see if the stat st_size can be trusted and
  *  if not to call a routine to get the correct size.
  *
  */
-static curl_off_t VmsSpecialSize(const char * name,
-                                 const struct_stat * stat_buf)
+static curl_off_t VmsSpecialSize(const char *name,
+                                 const struct_stat *stat_buf)
 {
   switch(stat_buf->st_fab_rfm) {
   case FAB$C_VAR:
   case FAB$C_VFC:
     return VmsRealFileSize(name, stat_buf);
     break;
@@ -945,14 +946,14 @@
 
   do {
     next=form->next;  /* the following form line */
     if(form->type <= FORM_CONTENT)
       free(form->line); /* free the line */
     free(form);       /* free the struct */
-
-  } while((form = next) != NULL); /* continue */
+    form = next;
+  } while(form); /* continue */
 
   *form_ptr = NULL;
 }
 
 /*
  * curl_formget()
@@ -1027,14 +1028,14 @@
          (HTTPPOST_PTRCONTENTS|HTTPPOST_BUFFER|HTTPPOST_CALLBACK))
       )
       free(form->contents); /* free the contents */
     free(form->contenttype); /* free the content type */
     free(form->showfilename); /* free the faked file name */
     free(form);       /* free the struct */
-
-  } while((form = next) != NULL); /* continue */
+    form = next;
+  } while(form); /* continue */
 }
 
 #ifndef HAVE_BASENAME
 /*
   (Quote from The Open Group Base Specifications Issue 6 IEEE Std 1003.1, 2004
   Edition)
@@ -1163,13 +1164,13 @@
   struct curl_httppost *file;
   CURLcode result = CURLE_OK;
 
   curl_off_t size = 0; /* support potentially ENORMOUS formposts */
   char *boundary;
   char *fileboundary = NULL;
-  struct curl_slist* curList;
+  struct curl_slist *curList;
 
   *finalform = NULL; /* default form is empty */
 
   if(!post)
     return result; /* no input => no output! */
 
@@ -1370,14 +1371,14 @@
       result = AddFormDataf(&form, &size,
                            "\r\n--%s--",
                            fileboundary);
       if(result)
         break;
     }
-
-  } while((post = post->next) != NULL); /* for each field */
+    post = post->next;
+  } while(post); /* for each field */
 
   /* end-boundary for everything */
   if(!result)
     result = AddFormDataf(&form, &size, "\r\n--%s--\r\n", boundary);
 
   if(result) {
@@ -1423,19 +1424,20 @@
    * For upload to work as expected on VMS, different optional
    * parameters must be added to the fopen command based on
    * record format of the file.
    *
    */
 # define fopen_read vmsfopenread
-static FILE * vmsfopenread(const char *file, const char *mode) {
+static FILE * vmsfopenread(const char *file, const char *mode)
+{
   struct_stat statbuf;
   int result;
 
   result = stat(file, &statbuf);
 
-  switch (statbuf.st_fab_rfm) {
+  switch(statbuf.st_fab_rfm) {
   case FAB$C_VAR:
   case FAB$C_VFC:
   case FAB$C_STMCR:
     return fopen(file, FOPEN_READTEXT); /* VMS */
     break;
   default:
@@ -1566,14 +1568,18 @@
  * one.
  */
 static char *formboundary(struct Curl_easy *data)
 {
   /* 24 dashes and 16 hexadecimal digits makes 64 bit (18446744073709551615)
      combinations */
-  return aprintf("------------------------%08x%08x",
-                 Curl_rand(data), Curl_rand(data));
+  unsigned int rnd[2];
+  CURLcode result = Curl_rand(data, &rnd[0], 2);
+  if(result)
+    return NULL;
+
+  return aprintf("------------------------%08x%08x", rnd[0], rnd[1]);
 }
 
 #else  /* CURL_DISABLE_HTTP */
 CURLFORMcode curl_formadd(struct curl_httppost **httppost,
                           struct curl_httppost **last_post,
                           ...)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/formdata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/formdata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/formdata.h	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/formdata.h	2016-12-19 15:27:56.000000000 +0800
@@ -62,13 +62,13 @@
   char *buffer;      /* pointer to existing buffer used for file upload */
   size_t bufferlength;
   char *showfilename; /* The file name to show. If not set, the actual
                          file name will be used */
   bool showfilename_alloc;
   char *userp;        /* pointer for the read callback */
-  struct curl_slist* contentheader;
+  struct curl_slist *contentheader;
   struct FormInfo *more;
 } FormInfo;
 
 int Curl_FormInit(struct Form *form, struct FormData *formdata);
 
 CURLcode Curl_getformdata(struct Curl_easy *data,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ftp.c	2016-11-02 14:34:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ftp.c	2016-12-19 16:15:11.000000000 +0800
@@ -381,16 +381,16 @@
  * already elapsed.
  *
  * The start time is stored in progress.t_acceptdata - as set with
  * Curl_pgrsTime(..., TIMER_STARTACCEPT);
  *
  */
-static long ftp_timeleft_accept(struct Curl_easy *data)
+static time_t ftp_timeleft_accept(struct Curl_easy *data)
 {
-  long timeout_ms = DEFAULT_ACCEPT_TIMEOUT;
-  long other;
+  time_t timeout_ms = DEFAULT_ACCEPT_TIMEOUT;
+  time_t other;
   struct timeval now;
 
   if(data->set.accepttimeout > 0)
     timeout_ms = data->set.accepttimeout;
 
   now = Curl_tvnow();
@@ -427,13 +427,13 @@
   struct Curl_easy *data = conn->data;
   curl_socket_t ctrl_sock = conn->sock[FIRSTSOCKET];
   curl_socket_t data_sock = conn->sock[SECONDARYSOCKET];
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   int result;
-  long timeout_ms;
+  time_t timeout_ms;
   ssize_t nread;
   int ftpcode;
 
   *received = FALSE;
 
   timeout_ms = ftp_timeleft_accept(data);
@@ -452,13 +452,13 @@
     return CURLE_FTP_ACCEPT_FAILED;
   }
 
   result = Curl_socket_check(ctrl_sock, data_sock, CURL_SOCKET_BAD, 0);
 
   /* see if the connection request is already here */
-  switch (result) {
+  switch(result) {
   case -1: /* error */
     /* let's die here */
     failf(data, "Error while waiting for server connect");
     return CURLE_FTP_ACCEPT_FAILED;
   case 0:  /* Server connect is not received yet */
     break; /* loop */
@@ -496,13 +496,13 @@
 static CURLcode InitiateTransfer(struct connectdata *conn)
 {
   struct Curl_easy *data = conn->data;
   struct FTP *ftp = data->req.protop;
   CURLcode result = CURLE_OK;
 
-  if(conn->ssl[SECONDARYSOCKET].use) {
+  if(conn->bits.ftp_use_data_ssl) {
     /* since we only have a plaintext TCP connection here, we must now
      * do the TLS stuff */
     infof(data, "Doing the SSL/TLS handshake on the data stream\n");
     result = Curl_ssl_connect(conn, SECONDARYSOCKET);
     if(result)
       return result;
@@ -544,13 +544,13 @@
  * accepted.
  *
  */
 static CURLcode AllowServerConnect(struct connectdata *conn, bool *connected)
 {
   struct Curl_easy *data = conn->data;
-  long timeout_ms;
+  time_t timeout_ms;
   CURLcode result = CURLE_OK;
 
   *connected = FALSE;
   infof(data, "Preparing for accepting server on data port\n");
 
   /* Save the time we start accepting server connect */
@@ -684,14 +684,14 @@
    * the OpenSSL read() doesn't grok that properly.
    *
    * Alas, read as much as possible, split up into lines, use the ending
    * line in a response or continue reading.  */
 
   curl_socket_t sockfd = conn->sock[FIRSTSOCKET];
-  long timeout;              /* timeout in milliseconds */
-  long interval_ms;
+  time_t timeout;              /* timeout in milliseconds */
+  time_t interval_ms;
   struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_OK;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   size_t nread;
   int cache_skip=0;
@@ -737,14 +737,14 @@
        * There's a cache left since before. We then skipping the wait for
        * socket action, unless this is the same cache like the previous round
        * as then the cache was deemed not enough to act on and we then need to
        * wait for more data anyway.
        */
     }
-    else {
-      switch (SOCKET_READABLE(sockfd, interval_ms)) {
+    else if(!Curl_conn_data_pending(conn, FIRSTSOCKET)) {
+      switch(SOCKET_READABLE(sockfd, interval_ms)) {
       case -1: /* select() error, stop reading */
         failf(data, "FTP response aborted due to select/poll error: %d",
               SOCKERRNO);
         return CURLE_RECV_ERROR;
 
       case 0: /* timeout */
@@ -1032,44 +1032,50 @@
       return CURLE_OUT_OF_MEMORY;
 
 #ifdef ENABLE_IPV6
     if(*string_ftpport == '[') {
       /* [ipv6]:port(-range) */
       ip_start = string_ftpport + 1;
-      if((ip_end = strchr(string_ftpport, ']')) != NULL)
+      ip_end = strchr(string_ftpport, ']');
+      if(ip_end)
         strncpy(addr, ip_start, ip_end - ip_start);
     }
     else
 #endif
       if(*string_ftpport == ':') {
         /* :port */
         ip_end = string_ftpport;
-    }
-    else if((ip_end = strchr(string_ftpport, ':')) != NULL) {
-        /* either ipv6 or (ipv4|domain|interface):port(-range) */
-#ifdef ENABLE_IPV6
-      if(Curl_inet_pton(AF_INET6, string_ftpport, sa6) == 1) {
-        /* ipv6 */
-        port_min = port_max = 0;
-        strcpy(addr, string_ftpport);
-        ip_end = NULL; /* this got no port ! */
       }
-      else
+      else {
+        ip_end = strchr(string_ftpport, ':');
+        if(ip_end) {
+          /* either ipv6 or (ipv4|domain|interface):port(-range) */
+#ifdef ENABLE_IPV6
+          if(Curl_inet_pton(AF_INET6, string_ftpport, sa6) == 1) {
+            /* ipv6 */
+            port_min = port_max = 0;
+            strcpy(addr, string_ftpport);
+            ip_end = NULL; /* this got no port ! */
+          }
+          else
 #endif
-        /* (ipv4|domain|interface):port(-range) */
-        strncpy(addr, string_ftpport, ip_end - ip_start);
-    }
-    else
-      /* ipv4|interface */
-      strcpy(addr, string_ftpport);
+            /* (ipv4|domain|interface):port(-range) */
+            strncpy(addr, string_ftpport, ip_end - ip_start);
+        }
+        else
+          /* ipv4|interface */
+          strcpy(addr, string_ftpport);
+      }
 
     /* parse the port */
     if(ip_end != NULL) {
-      if((port_start = strchr(ip_end, ':')) != NULL) {
+      port_start = strchr(ip_end, ':');
+      if(port_start) {
         port_min = curlx_ultous(strtoul(port_start+1, NULL, 10));
-        if((port_sep = strchr(port_start, '-')) != NULL) {
+        port_sep = strchr(port_start, '-');
+        if(port_sep) {
           port_max = curlx_ultous(strtoul(port_sep + 1, NULL, 10));
         }
         else
           port_max = port_min;
       }
     }
@@ -1847,102 +1853,20 @@
   conn->proto.ftpc.count1++;
   /* remain in/go to the FTP_PASV state */
   state(conn, FTP_PASV);
   return result;
 }
 
-/*
- * Perform the necessary magic that needs to be done once the TCP connection
- * to the proxy has completed.
- */
-static CURLcode proxy_magic(struct connectdata *conn,
-                            char *newhost, unsigned short newport,
-                            bool *magicdone)
-{
-  CURLcode result = CURLE_OK;
-  struct Curl_easy *data = conn->data;
-
-#if defined(CURL_DISABLE_PROXY)
-  (void) newhost;
-  (void) newport;
-#endif
-
-  *magicdone = FALSE;
-
-  switch(conn->proxytype) {
-  case CURLPROXY_SOCKS5:
-  case CURLPROXY_SOCKS5_HOSTNAME:
-    result = Curl_SOCKS5(conn->proxyuser, conn->proxypasswd, newhost,
-                         newport, SECONDARYSOCKET, conn);
-    *magicdone = TRUE;
-    break;
-  case CURLPROXY_SOCKS4:
-    result = Curl_SOCKS4(conn->proxyuser, newhost, newport,
-                         SECONDARYSOCKET, conn, FALSE);
-    *magicdone = TRUE;
-    break;
-  case CURLPROXY_SOCKS4A:
-    result = Curl_SOCKS4(conn->proxyuser, newhost, newport,
-                         SECONDARYSOCKET, conn, TRUE);
-    *magicdone = TRUE;
-    break;
-  case CURLPROXY_HTTP:
-  case CURLPROXY_HTTP_1_0:
-    /* do nothing here. handled later. */
-    break;
-  default:
-    failf(data, "unknown proxytype option given");
-    result = CURLE_COULDNT_CONNECT;
-    break;
-  }
-
-  if(conn->bits.tunnel_proxy && conn->bits.httpproxy) {
-    /* BLOCKING */
-    /* We want "seamless" FTP operations through HTTP proxy tunnel */
-
-    /* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the
-     * member conn->proto.http; we want FTP through HTTP and we have to
-     * change the member temporarily for connecting to the HTTP proxy. After
-     * Curl_proxyCONNECT we have to set back the member to the original
-     * struct FTP pointer
-     */
-    struct HTTP http_proxy;
-    struct FTP *ftp_save = data->req.protop;
-    memset(&http_proxy, 0, sizeof(http_proxy));
-    data->req.protop = &http_proxy;
-
-    result = Curl_proxyCONNECT(conn, SECONDARYSOCKET, newhost, newport, TRUE);
-
-    data->req.protop = ftp_save;
-
-    if(result)
-      return result;
-
-    if(conn->tunnel_state[SECONDARYSOCKET] != TUNNEL_COMPLETE) {
-      /* the CONNECT procedure is not complete, the tunnel is not yet up */
-      state(conn, FTP_STOP); /* this phase is completed */
-      return result;
-    }
-    else
-      *magicdone = TRUE;
-  }
-
-  return result;
-}
 
 static char *control_address(struct connectdata *conn)
 {
   /* Returns the control connection IP address.
      If a proxy tunnel is used, returns the original host name instead, because
      the effective control connection address is the proxy address,
      not the ftp host. */
-  if(conn->bits.tunnel_proxy ||
-     conn->proxytype == CURLPROXY_SOCKS5 ||
-     conn->proxytype == CURLPROXY_SOCKS5_HOSTNAME ||
-     conn->proxytype == CURLPROXY_SOCKS4 ||
-     conn->proxytype == CURLPROXY_SOCKS4A)
+  if(conn->bits.tunnel_proxy || conn->bits.socksproxy)
     return conn->host.name;
 
   return conn->ip_addr_str;
 }
 
 static CURLcode ftp_state_pasv_resp(struct connectdata *conn,
@@ -2060,24 +1984,25 @@
   if(conn->bits.proxy) {
     /*
      * This connection uses a proxy and we need to connect to the proxy again
      * here. We don't want to rely on a former host lookup that might've
      * expired now, instead we remake the lookup here and now!
      */
-    rc = Curl_resolv(conn, conn->proxy.name, (int)conn->port, &addr);
+    const char * const host_name = conn->bits.socksproxy ?
+      conn->socks_proxy.host.name : conn->http_proxy.host.name;
+    rc = Curl_resolv(conn, host_name, (int)conn->port, &addr);
     if(rc == CURLRESOLV_PENDING)
       /* BLOCKING, ignores the return code but 'addr' will be NULL in
          case of failure */
       (void)Curl_resolver_wait_resolv(conn, &addr);
 
     connectport =
       (unsigned short)conn->port; /* we connect to the proxy's port */
 
     if(!addr) {
-      failf(data, "Can't resolve proxy host %s:%hu",
-            conn->proxy.name, connectport);
+      failf(data, "Can't resolve proxy host %s:%hu", host_name, connectport);
       return CURLE_FTP_CANT_GET_HOST;
     }
   }
   else {
     /* normal, direct, ftp connection */
     rc = Curl_resolv(conn, ftpc->newhost, ftpc->newport, &addr);
@@ -2112,12 +2037,16 @@
    */
 
   if(data->set.verbose)
     /* this just dumps information about this second connection */
     ftp_pasv_verbose(conn, addr->addr, ftpc->newhost, connectport);
 
+  Curl_safefree(conn->secondaryhostname);
+  conn->secondaryhostname = strdup(ftpc->newhost);
+  conn->secondary_port = ftpc->newport;
+
   Curl_resolv_unlock(data, addr); /* we're done using this address */
   conn->bits.do_more = TRUE;
   state(conn, FTP_STOP); /* this phase is completed */
 
   return result;
 }
@@ -2760,13 +2689,16 @@
           infof(data, "Logging in with password in cleartext!\n");
         else
           infof(data, "Authentication successful\n");
       }
 #endif
 
-      if(data->set.use_ssl && !conn->ssl[FIRSTSOCKET].use) {
+      if(data->set.use_ssl &&
+         (!conn->ssl[FIRSTSOCKET].use ||
+          (conn->bits.proxy_ssl_connected[FIRSTSOCKET] &&
+           !conn->proxy_ssl[FIRSTSOCKET].use))) {
         /* We don't have a SSL/TLS connection yet, but FTPS is
            requested. Try a FTPS connection now */
 
         ftpc->count3=0;
         switch(data->set.ftpsslauth) {
         case CURLFTPAUTH_DEFAULT:
@@ -2805,13 +2737,13 @@
        */
 
       if((ftpcode == 234) || (ftpcode == 334)) {
         /* Curl_ssl_connect is BLOCKING */
         result = Curl_ssl_connect(conn, FIRSTSOCKET);
         if(!result) {
-          conn->ssl[SECONDARYSOCKET].use = FALSE; /* clear-text data */
+          conn->bits.ftp_use_data_ssl = FALSE; /* clear-text data */
           result = ftp_state_user(conn);
         }
       }
       else if(ftpc->count3 < 1) {
         ftpc->count3++;
         ftpc->count1 += ftpc->count2; /* get next attempt */
@@ -2847,13 +2779,13 @@
 
       break;
 
     case FTP_PROT:
       if(ftpcode/100 == 2)
         /* We have enabled SSL for the data connection! */
-        conn->ssl[SECONDARYSOCKET].use =
+        conn->bits.ftp_use_data_ssl =
           (data->set.use_ssl != CURLUSESSL_CONTROL) ? TRUE : FALSE;
       /* FTP servers typically responds with 500 if they decide to reject
          our 'P' request */
       else if(data->set.use_ssl > CURLUSESSL_CONTROL)
         /* we failed and bails out */
         return CURLE_USE_SSL_FAILED;
@@ -3247,13 +3179,13 @@
   struct FTP *ftp = data->req.protop;
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   struct pingpong *pp = &ftpc->pp;
   ssize_t nread;
   int ftpcode;
   CURLcode result = CURLE_OK;
-  char *path;
+  char *path = NULL;
   const char *path_to_use = data->state.path;
 
   if(!ftp)
     return CURLE_OK;
 
   switch(status) {
@@ -3663,27 +3595,35 @@
 
     result = Curl_is_connected(conn, SECONDARYSOCKET, &connected);
 
     /* Ready to do more? */
     if(connected) {
       DEBUGF(infof(data, "DO-MORE connected phase starts\n"));
-      if(conn->bits.proxy) {
-        infof(data, "Connection to proxy confirmed\n");
-        result = proxy_magic(conn, ftpc->newhost, ftpc->newport, &connected);
-      }
     }
     else {
       if(result && (ftpc->count1 == 0)) {
         *completep = -1; /* go back to DOING please */
         /* this is a EPSV connect failing, try PASV instead */
         return ftp_epsv_disable(conn);
       }
       return result;
     }
   }
 
+  result = Curl_proxy_connect(conn, SECONDARYSOCKET);
+  if(result)
+    return result;
+
+  if(CONNECT_SECONDARYSOCKET_PROXY_SSL())
+    return result;
+
+  if(conn->bits.tunnel_proxy && conn->bits.httpproxy &&
+     conn->tunnel_state[SECONDARYSOCKET] != TUNNEL_COMPLETE)
+    return result;
+
+
   if(ftpc->state) {
     /* already in a state so skip the intial commands.
        They are only done to kickstart the do_more state */
     result = ftp_multi_statemach(conn, &complete);
 
     *completep = (int)complete;
@@ -3936,13 +3876,13 @@
 /* This is called recursively */
 static CURLcode wc_statemach(struct connectdata *conn)
 {
   struct WildcardData * const wildcard = &(conn->data->wildcard);
   CURLcode result = CURLE_OK;
 
-  switch (wildcard->state) {
+  switch(wildcard->state) {
   case CURLWC_INIT:
     result = init_wc_data(conn);
     if(wildcard->state == CURLWC_CLEAN)
       /* only listing! */
       break;
     else
@@ -4243,14 +4183,14 @@
   struct ftp_conn *ftpc = &conn->proto.ftpc;
   const char *slash_pos;  /* position of the first '/' char in curpos */
   const char *path_to_use = data->state.path;
   const char *cur_pos;
   const char *filename = NULL;
 
-  cur_pos = path_to_use; /* current position in path. point at the begin
-                            of next path component */
+  cur_pos = path_to_use; /* current position in path. point at the begin of
+                            next path component */
 
   ftpc->ctl_valid = FALSE;
   ftpc->cwdfail = FALSE;
 
   switch(data->set.ftp_filemethod) {
   case FTPFILE_NOCWD:
@@ -4564,13 +4504,13 @@
 
   if(type) {
     *type = 0;                     /* it was in the middle of the hostname */
     command = Curl_raw_toupper(type[6]);
     conn->bits.type_set = TRUE;
 
-    switch (command) {
+    switch(command) {
     case 'A': /* ASCII mode */
       data->set.prefer_ascii = TRUE;
       break;
 
     case 'D': /* directory mode */
       data->set.ftp_list_only = TRUE;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ftp.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ftp.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ftp.h	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ftp.h	2016-12-19 15:27:56.000000000 +0800
@@ -140,13 +140,13 @@
   int count2; /* general purpose counter for the state machine */
   int count3; /* general purpose counter for the state machine */
   ftpstate state; /* always use ftp.c:state() to change state! */
   ftpstate state_saved; /* transfer type saved to be reloaded after
                            data connection is established */
   curl_off_t retr_size_saved; /* Size of retrieved file saved */
-  char * server_os;     /* The target server operating system. */
+  char *server_os;     /* The target server operating system. */
   curl_off_t known_filesize; /* file size is different from -1, if wildcard
                                 LIST parsing was done and wc_statemach set
                                 it */
   /* newhost is the (allocated) IP addr or host name to connect the data
      connection to */
   char *newhost;          /* this is the pair to connect the DATA... */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ftplistparser.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ftplistparser.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ftplistparser.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ftplistparser.c	2016-12-19 15:27:56.000000000 +0800
@@ -393,15 +393,15 @@
         parser->error = CURLE_OUT_OF_MEMORY;
         PL_ERROR(conn, CURLE_OUT_OF_MEMORY);
         return bufflen;
       }
     }
 
-    switch (parser->os_type) {
+    switch(parser->os_type) {
     case OS_TYPE_UNIX:
-      switch (parser->state.UNIX.main) {
+      switch(parser->state.UNIX.main) {
       case PL_UNIX_TOTALSIZE:
         switch(parser->state.UNIX.sub.total_dirsize) {
         case PL_UNIX_TOTALSIZE_INIT:
           if(c == 't') {
             parser->state.UNIX.sub.total_dirsize = PL_UNIX_TOTALSIZE_READING;
             parser->item_length++;
@@ -444,13 +444,13 @@
             }
           }
           break;
         }
         break;
       case PL_UNIX_FILETYPE:
-        switch (c) {
+        switch(c) {
         case '-':
           finfo->filetype = CURLFILETYPE_FILE;
           break;
         case 'd':
           finfo->filetype = CURLFILETYPE_DIRECTORY;
           break;
@@ -964,13 +964,13 @@
             parser->state.NT.sub.filename = PL_WINNT_FILENAME_PRESPACE;
           }
           break;
         }
         break;
       case PL_WINNT_FILENAME:
-        switch (parser->state.NT.sub.filename) {
+        switch(parser->state.NT.sub.filename) {
         case PL_WINNT_FILENAME_PRESPACE:
           if(c != ' ') {
             parser->item_offset = finfo->b_used -1;
             parser->item_length = 1;
             parser->state.NT.sub.filename = PL_WINNT_FILENAME_CONTENT;
           }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/getinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/getinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/getinfo.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/getinfo.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -33,14 +33,17 @@
 
 /* The last #include files should be: */
 #include "curl_memory.h"
 #include "memdebug.h"
 
 /*
- * This is supposed to be called in the beginning of a perform() session and
- * in curl_easy_reset() and should reset all session-info variables.
+ * Initialize statistical and informational data.
+ *
+ * This function is called in curl_easy_reset, curl_easy_duphandle and at the
+ * beginning of a perform session. It must reset the session-info variables,
+ * in particular all variables in struct PureInfo.
  */
 CURLcode Curl_initinfo(struct Curl_easy *data)
 {
   struct Progress *pro = &data->progress;
   struct PureInfo *info = &data->info;
 
@@ -72,21 +75,24 @@
 
   info->conn_primary_ip[0] = '\0';
   info->conn_local_ip[0] = '\0';
   info->conn_primary_port = 0;
   info->conn_local_port = 0;
 
+  info->conn_scheme = 0;
+  info->conn_protocol = 0;
+
 #ifdef USE_SSL
   Curl_ssl_free_certinfo(data);
 #endif
 
   return CURLE_OK;
 }
 
 static CURLcode getinfo_char(struct Curl_easy *data, CURLINFO info,
-                             char **param_charp)
+                             const char **param_charp)
 {
   switch(info) {
   case CURLINFO_EFFECTIVE_URL:
     *param_charp = data->change.url?data->change.url:(char *)"";
     break;
   case CURLINFO_CONTENT_TYPE:
@@ -117,12 +123,15 @@
        connection */
     *param_charp = data->info.conn_local_ip;
     break;
   case CURLINFO_RTSP_SESSION_ID:
     *param_charp = data->set.str[STRING_RTSP_SESSION_ID];
     break;
+  case CURLINFO_SCHEME:
+    *param_charp = data->info.conn_scheme;
+    break;
 
   default:
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
@@ -154,12 +163,15 @@
   case CURLINFO_REQUEST_SIZE:
     *param_longp = data->info.request_size;
     break;
   case CURLINFO_SSL_VERIFYRESULT:
     *param_longp = data->set.ssl.certverifyresult;
     break;
+  case CURLINFO_PROXY_SSL_VERIFYRESULT:
+    *param_longp = data->set.proxy_ssl.certverifyresult;
+    break;
   case CURLINFO_REDIRECT_COUNT:
     *param_longp = data->set.followlocation;
     break;
   case CURLINFO_HTTPAUTH_AVAIL:
     lptr.to_long = param_longp;
     *lptr.to_ulong = data->info.httpauthavail;
@@ -205,13 +217,13 @@
     *param_longp = data->state.rtsp_next_server_CSeq;
     break;
   case CURLINFO_RTSP_CSEQ_RECV:
     *param_longp = data->state.rtsp_CSeq_recv;
     break;
   case CURLINFO_HTTP_VERSION:
-    switch (data->info.httpversion) {
+    switch(data->info.httpversion) {
     case 10:
       *param_longp = CURL_HTTP_VERSION_1_0;
       break;
     case 11:
       *param_longp = CURL_HTTP_VERSION_1_1;
       break;
@@ -220,12 +232,15 @@
       break;
     default:
       *param_longp = CURL_HTTP_VERSION_NONE;
       break;
     }
     break;
+  case CURLINFO_PROTOCOL:
+    *param_longp = data->info.conn_protocol;
+    break;
 
   default:
     return CURLE_UNKNOWN_OPTION;
   }
 
   return CURLE_OK;
@@ -376,13 +391,13 @@
 
 CURLcode Curl_getinfo(struct Curl_easy *data, CURLINFO info, ...)
 {
   va_list arg;
   long *param_longp = NULL;
   double *param_doublep = NULL;
-  char **param_charp = NULL;
+  const char **param_charp = NULL;
   struct curl_slist **param_slistp = NULL;
   curl_socket_t *param_socketp = NULL;
   int type;
   CURLcode result = CURLE_UNKNOWN_OPTION;
 
   if(!data)
@@ -390,13 +405,13 @@
 
   va_start(arg, info);
 
   type = CURLINFO_TYPEMASK & (int)info;
   switch(type) {
   case CURLINFO_STRING:
-    param_charp = va_arg(arg, char **);
+    param_charp = va_arg(arg, const char **);
     if(param_charp)
       result = getinfo_char(data, info, param_charp);
     break;
   case CURLINFO_LONG:
     param_longp = va_arg(arg, long *);
     if(param_longp)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hash.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hash.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hash.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hash.c	2016-12-19 15:27:56.000000000 +0800
@@ -132,13 +132,13 @@
  */
 void *
 Curl_hash_add(struct curl_hash *h, void *key, size_t key_len, void *p)
 {
   struct curl_hash_element  *he;
   struct curl_llist_element *le;
-  struct curl_llist *l = FETCH_LIST (h, key, key_len);
+  struct curl_llist *l = FETCH_LIST(h, key, key_len);
 
   for(le = l->head; le; le = le->next) {
     he = (struct curl_hash_element *) le->ptr;
     if(h->comp_func(he->key, he->key_len, key, key_len)) {
       Curl_llist_remove(l, le, (void *)h);
       --h->size;
@@ -288,15 +288,15 @@
       }
       le = lnext;
     }
   }
 }
 
-size_t Curl_hash_str(void* key, size_t key_length, size_t slots_num)
+size_t Curl_hash_str(void *key, size_t key_length, size_t slots_num)
 {
-  const char* key_str = (const char *) key;
+  const char *key_str = (const char *) key;
   const char *end = key_str + key_length;
   unsigned long h = 5381;
 
   while(key_str < end) {
     h += h << 5;
     h ^= (unsigned long) *key_str++;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hash.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hash.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hash.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hash.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -26,22 +26,22 @@
 
 #include <stddef.h>
 
 #include "llist.h"
 
 /* Hash function prototype */
-typedef size_t (*hash_function) (void* key,
+typedef size_t (*hash_function) (void *key,
                                  size_t key_length,
                                  size_t slots_num);
 
 /*
    Comparator function prototype. Compares two keys.
 */
-typedef size_t (*comp_function) (void* key1,
+typedef size_t (*comp_function) (void *key1,
                                  size_t key1_len,
-                                 void*key2,
+                                 void *key2,
                                  size_t key2_len);
 
 typedef void (*curl_hash_dtor)(void *);
 
 struct curl_hash {
   struct curl_llist **table;
@@ -73,24 +73,23 @@
                    hash_function hfunc,
                    comp_function comparator,
                    curl_hash_dtor dtor);
 
 void *Curl_hash_add(struct curl_hash *h, void *key, size_t key_len, void *p);
 int Curl_hash_delete(struct curl_hash *h, void *key, size_t key_len);
-void *Curl_hash_pick(struct curl_hash *, void * key, size_t key_len);
+void *Curl_hash_pick(struct curl_hash *, void *key, size_t key_len);
 void Curl_hash_apply(struct curl_hash *h, void *user,
                      void (*cb)(void *user, void *ptr));
 int Curl_hash_count(struct curl_hash *h);
 void Curl_hash_destroy(struct curl_hash *h);
 void Curl_hash_clean(struct curl_hash *h);
 void Curl_hash_clean_with_criterium(struct curl_hash *h, void *user,
                                     int (*comp)(void *, void *));
-size_t Curl_hash_str(void* key, size_t key_length, size_t slots_num);
-size_t Curl_str_key_compare(void*k1, size_t key1_len, void*k2,
+size_t Curl_hash_str(void *key, size_t key_length, size_t slots_num);
+size_t Curl_str_key_compare(void *k1, size_t key1_len, void *k2,
                             size_t key2_len);
-
 void Curl_hash_start_iterate(struct curl_hash *hash,
                              struct curl_hash_iterator *iter);
 struct curl_hash_element *
 Curl_hash_next_element(struct curl_hash_iterator *iter);
 
 void Curl_hash_print(struct curl_hash *h,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hmac.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hmac.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hmac.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hmac.c	2016-12-19 15:27:56.000000000 +0800
@@ -46,18 +46,18 @@
 static const unsigned char hmac_opad = 0x5C;
 
 
 
 HMAC_context *
 Curl_HMAC_init(const HMAC_params * hashparams,
-               const unsigned char * key,
+               const unsigned char *key,
                unsigned int keylen)
 {
   size_t i;
-  HMAC_context * ctxt;
-  unsigned char * hkey;
+  HMAC_context *ctxt;
+  unsigned char *hkey;
   unsigned char b;
 
   /* Create HMAC context. */
   i = sizeof *ctxt + 2 * hashparams->hmac_ctxtsize +
     hashparams->hmac_resultlen;
   ctxt = malloc(i);
@@ -98,22 +98,22 @@
 
   /* Done, return pointer to HMAC context. */
   return ctxt;
 }
 
 int Curl_HMAC_update(HMAC_context * ctxt,
-                     const unsigned char * data,
+                     const unsigned char *data,
                      unsigned int len)
 {
   /* Update first hash calculation. */
   (*ctxt->hmac_hash->hmac_hupdate)(ctxt->hmac_hashctxt1, data, len);
   return 0;
 }
 
 
-int Curl_HMAC_final(HMAC_context * ctxt, unsigned char * result)
+int Curl_HMAC_final(HMAC_context *ctxt, unsigned char *result)
 {
   const HMAC_params * hashparams = ctxt->hmac_hash;
 
   /* Do not get result if called with a null parameter: only release
      storage. */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostcheck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostcheck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostcheck.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostcheck.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -19,13 +19,16 @@
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
-#if defined(USE_OPENSSL) || defined(USE_AXTLS) || defined(USE_GSKIT)
+#if defined(USE_OPENSSL)                                \
+  || defined(USE_AXTLS)                                 \
+  || defined(USE_GSKIT)                                 \
+  || (defined(USE_SCHANNEL) && defined(_WIN32_WCE))
 /* these backends use functions from this file */
 
 #ifdef HAVE_NETINET_IN_H
 #include <netinet/in.h>
 #endif
 
@@ -141,7 +144,7 @@
     }
   }
 
   return res;
 }
 
-#endif /* OPENSSL or AXTLS or GSKIT */
+#endif /* OPENSSL, AXTLS, GSKIT or schannel+wince */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostip4.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostip4.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostip4.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostip4.c	2016-12-19 15:27:56.000000000 +0800
@@ -288,13 +288,13 @@
     /*
      * Here is code for platforms that don't have a thread safe
      * getaddrinfo() nor gethostbyname_r() function or for which
      * gethostbyname() is the preferred one.
      */
   else {
-    h = gethostbyname((void*)hostname);
+    h = gethostbyname((void *)hostname);
 #endif /* HAVE_GETADDRINFO_THREADSAFE || HAVE_GETHOSTBYNAME_R */
   }
 
   if(h) {
     ai = Curl_he2ai(h, port);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostip.c	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostip.c	2016-12-19 15:27:56.000000000 +0800
@@ -169,13 +169,13 @@
   const struct in_addr *ipaddr4;
 #ifdef ENABLE_IPV6
   const struct sockaddr_in6 *sa6;
   const struct in6_addr *ipaddr6;
 #endif
 
-  switch (ai->ai_family) {
+  switch(ai->ai_family) {
     case AF_INET:
       sa4 = (const void *)ai->ai_addr;
       ipaddr4 = &sa4->sin_addr;
       return Curl_inet_ntop(ai->ai_family, (const void *)ipaddr4, buf,
                             bufsize);
 #ifdef ENABLE_IPV6
@@ -565,13 +565,13 @@
  */
 
 int Curl_resolv_timeout(struct connectdata *conn,
                         const char *hostname,
                         int port,
                         struct Curl_dns_entry **entry,
-                        long timeoutms)
+                        time_t timeoutms)
 {
 #ifdef USE_ALARM_TIMEOUT
 #ifdef HAVE_SIGACTION
   struct sigaction keep_sigact;   /* store the old struct here */
   volatile bool keep_copysig = FALSE; /* wether old sigact has been saved */
   struct sigaction sigact;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostip.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostip.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/hostip.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/hostip.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -84,13 +84,13 @@
 #define CURLRESOLV_RESOLVED  0
 #define CURLRESOLV_PENDING   1
 int Curl_resolv(struct connectdata *conn, const char *hostname,
                 int port, struct Curl_dns_entry **dnsentry);
 int Curl_resolv_timeout(struct connectdata *conn, const char *hostname,
                         int port, struct Curl_dns_entry **dnsentry,
-                        long timeoutms);
+                        time_t timeoutms);
 
 #ifdef CURLRES_IPV6
 /*
  * Curl_ipv6works() returns TRUE if IPv6 seems to work.
  */
 bool Curl_ipv6works(void);
@@ -128,25 +128,25 @@
 int Curl_mk_dnscache(struct curl_hash *hash);
 
 /* prune old entries from the DNS cache */
 void Curl_hostcache_prune(struct Curl_easy *data);
 
 /* Return # of adresses in a Curl_addrinfo struct */
-int Curl_num_addresses (const Curl_addrinfo *addr);
+int Curl_num_addresses(const Curl_addrinfo *addr);
 
 #if defined(CURLDEBUG) && defined(HAVE_GETNAMEINFO)
 int curl_dogetnameinfo(GETNAMEINFO_QUAL_ARG1 GETNAMEINFO_TYPE_ARG1 sa,
                        GETNAMEINFO_TYPE_ARG2 salen,
                        char *host, GETNAMEINFO_TYPE_ARG46 hostlen,
                        char *serv, GETNAMEINFO_TYPE_ARG46 servlen,
                        GETNAMEINFO_TYPE_ARG7 flags,
                        int line, const char *source);
 #endif
 
 /* IPv4 threadsafe resolve function used for synch and asynch builds */
-Curl_addrinfo *Curl_ipv4_resolve_r(const char * hostname, int port);
+Curl_addrinfo *Curl_ipv4_resolve_r(const char *hostname, int port);
 
 CURLcode Curl_async_resolved(struct connectdata *conn,
                              bool *protocol_connect);
 
 #ifndef CURLRES_ASYNCH
 #define Curl_async_resolved(x,y) CURLE_OK
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http2.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http2.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http2.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http2.c	2016-12-19 15:27:56.000000000 +0800
@@ -32,13 +32,13 @@
 #include "strcase.h"
 #include "multiif.h"
 #include "conncache.h"
 #include "url.h"
 #include "connect.h"
 #include "strtoofft.h"
-
+#include "strdup.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 #define MIN(x,y) ((x)<(y)?(x):(y))
@@ -56,12 +56,18 @@
    later */
 #define NGHTTP2_HAS_ERROR_CALLBACK 1
 #else
 #define nghttp2_session_callbacks_set_error_callback(x,y)
 #endif
 
+#if (NGHTTP2_VERSION_NUM >= 0x010c00)
+#define NGHTTP2_HAS_SET_LOCAL_WINDOW_SIZE 1
+#endif
+
+#define HTTP2_HUGE_WINDOW_SIZE (1 << 30)
+
 /*
  * Curl_http2_init_state() is called when the easy handle is created and
  * allows for HTTP/2 specific init of state.
  */
 void Curl_http2_init_state(struct UrlState *state)
 {
@@ -220,13 +226,14 @@
 }
 
 /* HTTP/2 error code to name based on the Error Code Registry.
 https://tools.ietf.org/html/rfc7540#page-77
 nghttp2_error_code enums are identical.
 */
-const char *Curl_http2_strerror(uint32_t err) {
+const char *Curl_http2_strerror(uint32_t err)
+{
 #ifndef NGHTTP2_HAS_HTTP2_STRERROR
   const char *str[] = {
     "NO_ERROR",             /* 0x0 */
     "PROTOCOL_ERROR",       /* 0x1 */
     "INTERNAL_ERROR",       /* 0x2 */
     "FLOW_CONTROL_ERROR",   /* 0x3 */
@@ -838,16 +845,15 @@
       stream->push_headers_used = 0;
     }
     else if(stream->push_headers_used ==
             stream->push_headers_alloc) {
       char **headp;
       stream->push_headers_alloc *= 2;
-      headp = realloc(stream->push_headers,
-                      stream->push_headers_alloc * sizeof(char *));
+      headp = Curl_saferealloc(stream->push_headers,
+                               stream->push_headers_alloc * sizeof(char *));
       if(!headp) {
-        free(stream->push_headers);
         stream->push_headers = NULL;
         return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;
       }
       stream->push_headers = headp;
     }
     h = aprintf("%s:%s", name, value);
@@ -963,13 +969,13 @@
 
 /*
  * The HTTP2 settings we send in the Upgrade request
  */
 static nghttp2_settings_entry settings[] = {
   { NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS, 100 },
-  { NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE, NGHTTP2_INITIAL_WINDOW_SIZE },
+  { NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE, HTTP2_HUGE_WINDOW_SIZE },
 };
 
 #define H2_BUFSIZE 32768
 
 #ifdef NGHTTP2_HAS_ERROR_CALLBACK
 static int error_callback(nghttp2_session *session,
@@ -1569,12 +1575,78 @@
    field list. */
 #define AUTHORITY_DST_IDX 3
 
 #define HEADER_OVERFLOW(x) \
   (x.namelen > (uint16_t)-1 || x.valuelen > (uint16_t)-1 - x.namelen)
 
+/*
+ * Check header memory for the token "trailers".
+ * Parse the tokens as separated by comma and surrounded by whitespace.
+ * Returns TRUE if found or FALSE if not.
+ */
+static bool contains_trailers(const char *p, size_t len)
+{
+  const char *end = p + len;
+  for(;;) {
+    for(; p != end && (*p == ' ' || *p == '\t'); ++p)
+      ;
+    if(p == end || (size_t)(end - p) < sizeof("trailers") - 1)
+      return FALSE;
+    if(strncasecompare("trailers", p, sizeof("trailers") - 1)) {
+      p += sizeof("trailers") - 1;
+      for(; p != end && (*p == ' ' || *p == '\t'); ++p)
+        ;
+      if(p == end || *p == ',')
+        return TRUE;
+    }
+    /* skip to next token */
+    for(; p != end && *p != ','; ++p)
+      ;
+    if(p == end)
+      return FALSE;
+    ++p;
+  }
+}
+
+typedef enum {
+  /* Send header to server */
+  HEADERINST_FORWARD,
+  /* Don't send header to server */
+  HEADERINST_IGNORE,
+  /* Discard header, and replace it with "te: trailers" */
+  HEADERINST_TE_TRAILERS
+} header_instruction;
+
+/* Decides how to treat given header field. */
+static header_instruction inspect_header(const char *name, size_t namelen,
+                                         const char *value, size_t valuelen) {
+  switch(namelen) {
+  case 2:
+    if(!strncasecompare("te", name, namelen))
+      return HEADERINST_FORWARD;
+
+    return contains_trailers(value, valuelen) ?
+           HEADERINST_TE_TRAILERS : HEADERINST_IGNORE;
+  case 7:
+    return strncasecompare("upgrade", name, namelen) ?
+           HEADERINST_IGNORE : HEADERINST_FORWARD;
+  case 10:
+    return (strncasecompare("connection", name, namelen) ||
+            strncasecompare("keep-alive", name, namelen)) ?
+           HEADERINST_IGNORE : HEADERINST_FORWARD;
+  case 16:
+    return strncasecompare("proxy-connection", name, namelen) ?
+           HEADERINST_IGNORE : HEADERINST_FORWARD;
+  case 17:
+    return strncasecompare("transfer-encoding", name, namelen) ?
+           HEADERINST_IGNORE : HEADERINST_FORWARD;
+  default:
+    return HEADERINST_FORWARD;
+  }
+}
+
 static ssize_t http2_send(struct connectdata *conn, int sockindex,
                           const void *mem, size_t len, CURLcode *err)
 {
   /*
    * BIG TODO: Currently, we send request in this function, but this
    * function is also used to send request body. It would be nice to
@@ -1584,13 +1656,13 @@
   struct http_conn *httpc = &conn->proto.httpc;
   struct HTTP *stream = conn->data->req.protop;
   nghttp2_nv *nva = NULL;
   size_t nheader;
   size_t i;
   size_t authority_idx;
-  char *hdbuf = (char*)mem;
+  char *hdbuf = (char *)mem;
   char *end, *line_end;
   nghttp2_data_provider data_prd;
   int32_t stream_id;
   nghttp2_session *h2 = httpc->h2;
   nghttp2_priority_spec pri_spec;
 
@@ -1722,13 +1794,12 @@
   }
 
   authority_idx = 0;
   i = 3;
   while(i < nheader) {
     size_t hlen;
-    int skip = 0;
 
     hdbuf = line_end + 2;
 
     line_end = strstr(hdbuf, "\r\n");
     if(line_end == hdbuf)
       goto fail;
@@ -1740,40 +1811,47 @@
     for(end = hdbuf; end < line_end && *end != ':'; ++end)
       ;
     if(end == hdbuf || end == line_end)
       goto fail;
     hlen = end - hdbuf;
 
-    if(hlen == 10 && strncasecompare("connection", hdbuf, 10)) {
-      /* skip Connection: headers! */
-      skip = 1;
-      --nheader;
-    }
-    else if(hlen == 4 && strncasecompare("host", hdbuf, 4)) {
+    if(hlen == 4 && strncasecompare("host", hdbuf, 4)) {
       authority_idx = i;
       nva[i].name = (unsigned char *)":authority";
       nva[i].namelen = strlen((char *)nva[i].name);
     }
     else {
       nva[i].name = (unsigned char *)hdbuf;
       nva[i].namelen = (size_t)(end - hdbuf);
     }
     hdbuf = end + 1;
     while(*hdbuf == ' ' || *hdbuf == '\t')
       ++hdbuf;
     end = line_end;
-    if(!skip) {
+
+    switch(inspect_header((const char *)nva[i].name, nva[i].namelen, hdbuf,
+                          end - hdbuf)) {
+    case HEADERINST_IGNORE:
+      /* skip header fields prohibited by HTTP/2 specification. */
+      --nheader;
+      continue;
+    case HEADERINST_TE_TRAILERS:
+      nva[i].value = (uint8_t*)"trailers";
+      nva[i].valuelen = sizeof("trailers") - 1;
+      break;
+    default:
       nva[i].value = (unsigned char *)hdbuf;
       nva[i].valuelen = (size_t)(end - hdbuf);
-      nva[i].flags = NGHTTP2_NV_FLAG_NONE;
-      if(HEADER_OVERFLOW(nva[i])) {
-        failf(conn->data, "Failed sending HTTP request: Header overflow");
-        goto fail;
-      }
-      ++i;
     }
+
+    nva[i].flags = NGHTTP2_NV_FLAG_NONE;
+    if(HEADER_OVERFLOW(nva[i])) {
+      failf(conn->data, "Failed sending HTTP request: Header overflow");
+      goto fail;
+    }
+    ++i;
   }
 
   /* :authority must come before non-pseudo header fields */
   if(authority_idx != 0 && authority_idx != AUTHORITY_DST_IDX) {
     nghttp2_nv authority = nva[authority_idx];
     for(i = authority_idx; i > AUTHORITY_DST_IDX; --i) {
@@ -1958,20 +2036,31 @@
                                          stream->stream_id,
                                          conn->data);
   }
   else {
     /* stream ID is unknown at this point */
     stream->stream_id = -1;
-    rv = nghttp2_submit_settings(httpc->h2, NGHTTP2_FLAG_NONE, NULL, 0);
+    rv = nghttp2_submit_settings(httpc->h2, NGHTTP2_FLAG_NONE, settings,
+                                 sizeof(settings) / sizeof(settings[0]));
     if(rv != 0) {
       failf(data, "nghttp2_submit_settings() failed: %s(%d)",
             nghttp2_strerror(rv), rv);
       return CURLE_HTTP2;
     }
   }
 
+#ifdef NGHTTP2_HAS_SET_LOCAL_WINDOW_SIZE
+  rv = nghttp2_session_set_local_window_size(httpc->h2, NGHTTP2_FLAG_NONE, 0,
+                                             HTTP2_HUGE_WINDOW_SIZE);
+  if(rv != 0) {
+    failf(data, "nghttp2_session_set_local_window_size() failed: %s(%d)",
+          nghttp2_strerror(rv), rv);
+    return CURLE_HTTP2;
+  }
+#endif
+
   /* we are going to copy mem to httpc->inbuf.  This is required since
      mem is part of buffer pointed by stream->mem, and callbacks
      called by nghttp2_session_mem_recv() will write stream specific
      data into stream->mem, overwriting data already there. */
   if(H2_BUFSIZE < nread) {
     failf(data, "connection buffer size is too small to store data following "
@@ -1981,13 +2070,14 @@
   }
 
   infof(conn->data, "Copying HTTP/2 data in stream buffer to connection buffer"
                     " after upgrade: len=%zu\n",
         nread);
 
-  memcpy(httpc->inbuf, mem, nread);
+  if(nread)
+    memcpy(httpc->inbuf, mem, nread);
   httpc->inbuflen = nread;
 
   nproc = nghttp2_session_mem_recv(httpc->h2, (const uint8_t *)httpc->inbuf,
                                    httpc->inbuflen);
 
   if(nghttp2_is_fatal((int)nproc)) {
@@ -2021,12 +2111,88 @@
     return CURLE_HTTP2;
   }
 
   return CURLE_OK;
 }
 
+void Curl_http2_add_child(struct Curl_easy *parent, struct Curl_easy *child,
+                          bool exclusive)
+{
+  struct Curl_http2_dep **tail;
+  struct Curl_http2_dep *dep = calloc(1, sizeof(struct Curl_http2_dep));
+  dep->data = child;
+
+  if(parent->set.stream_dependents && exclusive) {
+    struct Curl_http2_dep *node = parent->set.stream_dependents;
+    while(node) {
+      node->data->set.stream_depends_on = child;
+      node = node->next;
+    }
+
+    tail = &child->set.stream_dependents;
+    while(*tail)
+      tail = &(*tail)->next;
+
+    DEBUGASSERT(!*tail);
+    *tail = parent->set.stream_dependents;
+    parent->set.stream_dependents = 0;
+  }
+
+  tail = &parent->set.stream_dependents;
+  while(*tail) {
+    (*tail)->data->set.stream_depends_e = FALSE;
+    tail = &(*tail)->next;
+  }
+
+  DEBUGASSERT(!*tail);
+  *tail = dep;
+
+  child->set.stream_depends_on = parent;
+  child->set.stream_depends_e = exclusive;
+}
+
+void Curl_http2_remove_child(struct Curl_easy *parent, struct Curl_easy *child)
+{
+  struct Curl_http2_dep *last = 0;
+  struct Curl_http2_dep *data = parent->set.stream_dependents;
+  DEBUGASSERT(child->set.stream_depends_on == parent);
+
+  while(data && data->data != child) {
+    last = data;
+    data = data->next;
+  }
+
+  DEBUGASSERT(data);
+
+  if(data) {
+    if(last) {
+      last->next = data->next;
+    }
+    else {
+      parent->set.stream_dependents = data->next;
+    }
+    free(data);
+  }
+
+  child->set.stream_depends_on = 0;
+  child->set.stream_depends_e = FALSE;
+}
+
+void Curl_http2_cleanup_dependencies(struct Curl_easy *data)
+{
+  while(data->set.stream_dependents) {
+    struct Curl_easy *tmp = data->set.stream_dependents->data;
+    Curl_http2_remove_child(data, tmp);
+    if(data->set.stream_depends_on)
+      Curl_http2_add_child(data->set.stream_depends_on, tmp, FALSE);
+  }
+
+  if(data->set.stream_depends_on)
+    Curl_http2_remove_child(data->set.stream_depends_on, data);
+}
+
 #else /* !USE_NGHTTP2 */
 
 /* Satisfy external references even if http2 is not compiled in. */
 
 #define CURL_DISABLE_TYPECHECK
 #include <curl/curl.h>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http2.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http2.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http2.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http2.h	2016-12-19 15:27:56.000000000 +0800
@@ -50,22 +50,30 @@
                              const char *data, size_t nread);
 /* called from Curl_http_setup_conn */
 void Curl_http2_setup_conn(struct connectdata *conn);
 void Curl_http2_setup_req(struct Curl_easy *data);
 void Curl_http2_done(struct connectdata *conn, bool premature);
 CURLcode Curl_http2_done_sending(struct connectdata *conn);
+void Curl_http2_add_child(struct Curl_easy *parent, struct Curl_easy *child,
+                          bool exclusive);
+void Curl_http2_remove_child(struct Curl_easy *parent,
+                             struct Curl_easy *child);
+void Curl_http2_cleanup_dependencies(struct Curl_easy *data);
 #else /* USE_NGHTTP2 */
 #define Curl_http2_init(x) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_send_request(x) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_request_upgrade(x,y) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_setup(x) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_switched(x,y,z) CURLE_UNSUPPORTED_PROTOCOL
 #define Curl_http2_setup_conn(x)
 #define Curl_http2_setup_req(x)
 #define Curl_http2_init_state(x)
 #define Curl_http2_init_userset(x)
 #define Curl_http2_done(x,y)
 #define Curl_http2_done_sending(x)
+#define Curl_http2_add_child(x, y, z)
+#define Curl_http2_remove_child(x, y)
+#define Curl_http2_cleanup_dependencies(x)
 #endif
 
 #endif /* HEADER_CURL_HTTP2_H */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http.c	2016-12-19 15:27:56.000000000 +0800
@@ -73,12 +73,13 @@
 #include "warnless.h"
 #include "non-ascii.h"
 #include "conncache.h"
 #include "pipeline.h"
 #include "http2.h"
 #include "connect.h"
+#include "strdup.h"
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
@@ -284,14 +285,14 @@
   const char *user;
   const char *pwd;
   CURLcode result;
 
   if(proxy) {
     userp = &conn->allocptr.proxyuserpwd;
-    user = conn->proxyuser;
-    pwd = conn->proxypasswd;
+    user = conn->http_proxy.user;
+    pwd = conn->http_proxy.passwd;
   }
   else {
     userp = &conn->allocptr.userpwd;
     user = conn->user;
     pwd = conn->passwd;
   }
@@ -541,14 +542,14 @@
       if(!data->req.newurl)
         return CURLE_OUT_OF_MEMORY;
       data->state.authhost.done = TRUE;
     }
   }
   if(http_should_fail(conn)) {
-    failf (data, "The requested URL returned error: %d",
-           data->req.httpcode);
+    failf(data, "The requested URL returned error: %d",
+          data->req.httpcode);
     result = CURLE_HTTP_RETURNED_ERROR;
   }
 
   return result;
 }
 
@@ -638,13 +639,13 @@
     authstatus->done = TRUE;
   }
 
   if(auth) {
     infof(data, "%s auth using %s with user '%s'\n",
           proxy ? "Proxy" : "Server", auth,
-          proxy ? (conn->proxyuser ? conn->proxyuser : "") :
+          proxy ? (conn->http_proxy.user ? conn->http_proxy.user : "") :
                   (conn->user ? conn->user : ""));
     authstatus->multi = (!authstatus->done) ? TRUE : FALSE;
   }
   else
     authstatus->multi = FALSE;
 
@@ -836,15 +837,17 @@
                 while(*auth && ISSPACE(*auth))
                   auth++;
                 if(checkprefix("NTLM", auth)) {
                   auth += strlen("NTLM");
                   while(*auth && ISSPACE(*auth))
                     auth++;
-                  if(*auth)
-                    if((conn->challenge_header = strdup(auth)) == NULL)
+                  if(*auth) {
+                    conn->challenge_header = strdup(auth);
+                    if(!conn->challenge_header)
                       return CURLE_OUT_OF_MEMORY;
+                  }
                 }
               }
 #endif
             }
             else {
               infof(data, "Authentication problem. Ignoring this.\n");
@@ -1095,13 +1098,15 @@
   if(result) {
     /* conversion failed, free memory and return to the caller */
     Curl_add_buffer_free(in);
     return result;
   }
 
-  if((conn->handler->flags & PROTOPT_SSL) && conn->httpversion != 20) {
+  if((conn->handler->flags & PROTOPT_SSL ||
+     conn->http_proxy.proxytype == CURLPROXY_HTTPS)
+     && conn->httpversion != 20) {
     /* We never send more than CURL_MAX_WRITE_SIZE bytes in one single chunk
        when we speak HTTPS, as if only a fraction of it is sent now, this data
        needs to fit into the normal read-callback buffer later on and that
        buffer is using this size.
     */
 
@@ -1252,20 +1257,19 @@
       new_size = (size_t)-1;
     else
       new_size = (in->size_used+size) * 2;
 
     if(in->buffer)
       /* we have a buffer, enlarge the existing one */
-      new_rb = realloc(in->buffer, new_size);
+      new_rb = Curl_saferealloc(in->buffer, new_size);
     else
       /* create a new buffer */
       new_rb = malloc(new_size);
 
     if(!new_rb) {
       /* If we failed, we cleanup the whole buffer and return error */
-      Curl_safefree(in->buffer);
       free(in);
       return CURLE_OUT_OF_MEMORY;
     }
 
     in->buffer = new_rb;
     in->size_max = new_size;
@@ -1347,16 +1351,19 @@
 
   /* We default to persistent connections. We set this already in this connect
      function to make the re-use checks properly be able to check this bit. */
   connkeep(conn, "HTTP default");
 
   /* the CONNECT procedure might not have been completed */
-  result = Curl_proxy_connect(conn);
+  result = Curl_proxy_connect(conn, FIRSTSOCKET);
   if(result)
     return result;
 
+  if(CONNECT_FIRSTSOCKET_PROXY_SSL())
+    return CURLE_OK; /* wait for HTTPS proxy SSL initialization to complete */
+
   if(conn->tunnel_state[FIRSTSOCKET] == TUNNEL_CONNECT)
     /* nothing else to do except wait right now - we're not done here. */
     return CURLE_OK;
 
   if(conn->given->flags & PROTOPT_SSL) {
     /* perform SSL initialization */
@@ -1393,56 +1400,22 @@
   result = Curl_ssl_connect_nonblocking(conn, FIRSTSOCKET, done);
   if(result)
     connclose(conn, "Failed HTTPS connection");
 
   return result;
 }
-#endif
-
-#if defined(USE_OPENSSL) || defined(USE_GNUTLS) || defined(USE_SCHANNEL) || \
-    defined(USE_DARWINSSL) || defined(USE_POLARSSL) || defined(USE_NSS) || \
-    defined(USE_MBEDTLS)
-/* This function is for OpenSSL, GnuTLS, darwinssl, schannel and polarssl only.
-   It should be made to query the generic SSL layer instead. */
-static int https_getsock(struct connectdata *conn,
-                         curl_socket_t *socks,
-                         int numsocks)
-{
-  if(conn->handler->flags & PROTOPT_SSL) {
-    struct ssl_connect_data *connssl = &conn->ssl[FIRSTSOCKET];
-
-    if(!numsocks)
-      return GETSOCK_BLANK;
 
-    if(connssl->connecting_state == ssl_connect_2_writing) {
-      /* write mode */
-      socks[0] = conn->sock[FIRSTSOCKET];
-      return GETSOCK_WRITESOCK(0);
-    }
-    else if(connssl->connecting_state == ssl_connect_2_reading) {
-      /* read mode */
-      socks[0] = conn->sock[FIRSTSOCKET];
-      return GETSOCK_READSOCK(0);
-    }
-  }
-
-  return CURLE_OK;
-}
-#else
-#ifdef USE_SSL
 static int https_getsock(struct connectdata *conn,
                          curl_socket_t *socks,
                          int numsocks)
 {
-  (void)conn;
-  (void)socks;
-  (void)numsocks;
+  if(conn->handler->flags & PROTOPT_SSL)
+    return Curl_ssl_getsock(conn, socks, numsocks);
   return GETSOCK_BLANK;
 }
 #endif /* USE_SSL */
-#endif /* USE_OPENSSL || USE_GNUTLS || USE_SCHANNEL */
 
 /*
  * Curl_http_done() gets called after a single HTTP request has been
  * performed.
  */
 
@@ -2089,13 +2062,13 @@
     ppath = data->change.url;
     if(checkprefix("ftp://", ppath)) {
       if(data->set.proxy_transfer_mode) {
         /* when doing ftp, append ;type=<a|i> if not present */
         char *type = strstr(ppath, ";type=");
         if(type && type[6] && type[7] == 0) {
-          switch (Curl_raw_toupper(type[6])) {
+          switch(Curl_raw_toupper(type[6])) {
           case 'A':
           case 'D':
           case 'I':
             break;
           default:
             type = NULL;
@@ -2325,13 +2298,13 @@
   Curl_safefree(conn->allocptr.userpwd);
 
   /*
    * Free proxyuserpwd for Negotiate/NTLM. Cannot reuse as it is associated
    * with the connection and shouldn't be repeated over it either.
    */
-  switch (data->state.authproxy.picked) {
+  switch(data->state.authproxy.picked) {
   case CURLAUTH_NEGOTIATE:
   case CURLAUTH_NTLM:
   case CURLAUTH_NTLM_WB:
     Curl_safefree(conn->allocptr.proxyuserpwd);
     break;
   }
@@ -2779,13 +2752,13 @@
   struct curl_slist *head = data->set.http200aliases;
   bool rc = FALSE;
 #ifdef CURL_DOES_CONVERSIONS
   /* convert from the network encoding using a scratch area */
   char *scratch = strdup(s);
   if(NULL == scratch) {
-    failf (data, "Failed to allocate memory for conversion!");
+    failf(data, "Failed to allocate memory for conversion!");
     return FALSE; /* can't return CURLE_OUT_OF_MEMORY so return FALSE */
   }
   if(CURLE_OK != Curl_convert_from_network(data, scratch, strlen(s)+1)) {
     /* Curl_convert_from_network calls failf if unsuccessful */
     free(scratch);
     return FALSE; /* can't return CURLE_foobar so return FALSE */
@@ -2817,13 +2790,13 @@
 {
 
 #ifdef CURL_DOES_CONVERSIONS
   /* convert from the network encoding using a scratch area */
   char *scratch = strdup(s);
   if(NULL == scratch) {
-    failf (data, "Failed to allocate memory for conversion!");
+    failf(data, "Failed to allocate memory for conversion!");
     return FALSE; /* can't return CURLE_OUT_OF_MEMORY so return FALSE */
   }
   if(CURLE_OK != Curl_convert_from_network(data, scratch, strlen(s)+1)) {
     /* Curl_convert_from_network calls failf if unsuccessful */
     free(scratch);
     return FALSE; /* can't return CURLE_foobar so return FALSE */
@@ -2869,22 +2842,22 @@
     size_t newsize;
 
     if(k->hbuflen + length > CURL_MAX_HTTP_HEADER) {
       /* The reason to have a max limit for this is to avoid the risk of a bad
          server feeding libcurl with a never-ending header that will cause
          reallocs infinitely */
-      failf (data, "Avoided giant realloc for header (max is %d)!",
-             CURL_MAX_HTTP_HEADER);
+      failf(data, "Avoided giant realloc for header (max is %d)!",
+            CURL_MAX_HTTP_HEADER);
       return CURLE_OUT_OF_MEMORY;
     }
 
     newsize=CURLMAX((k->hbuflen+ length)*3/2, data->state.headersize*2);
     hbufp_index = k->hbufp - data->state.headerbuff;
     newbuff = realloc(data->state.headerbuff, newsize);
     if(!newbuff) {
-      failf (data, "Failed to alloc memory for big header!");
+      failf(data, "Failed to alloc memory for big header!");
       return CURLE_OUT_OF_MEMORY;
     }
     data->state.headersize=newsize;
     data->state.headerbuff = newbuff;
     k->hbufp = data->state.headerbuff + hbufp_index;
   }
@@ -3119,14 +3092,14 @@
 
       /*
        * When all the headers have been parsed, see if we should give
        * up and return an error.
        */
       if(http_should_fail(conn)) {
-        failf (data, "The requested URL returned error: %d",
-               k->httpcode);
+        failf(data, "The requested URL returned error: %d",
+              k->httpcode);
         return CURLE_HTTP_RETURNED_ERROR;
       }
 
       /* now, only output this if the header AND body are requested:
        */
       writetype = CLIENTWRITE_HEADER;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_chunks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_chunks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_chunks.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_chunks.c	2016-12-19 15:27:56.000000000 +0800
@@ -187,14 +187,14 @@
          more or less than 'datasize'. Get the smallest piece.
       */
       piece = curlx_sotouz((ch->datasize >= length)?length:ch->datasize);
 
       /* Write the data portion available */
 #ifdef HAVE_LIBZ
-      switch (conn->data->set.http_ce_skip?
-              IDENTITY : data->req.auto_decoding) {
+      switch(conn->data->set.http_ce_skip?
+             IDENTITY : data->req.auto_decoding) {
       case IDENTITY:
 #endif
         if(!k->ignorebody) {
           if(!data->set.http_te_skip)
             result = Curl_client_write(conn, CLIENTWRITE_BODY, datap,
                                        piece);
@@ -216,16 +216,16 @@
         data->req.str = datap;
         result = Curl_unencode_gzip_write(conn, &data->req,
                                           (ssize_t)piece);
         break;
 
       default:
-        failf (conn->data,
-               "Unrecognized content encoding type. "
-               "libcurl understands `identity', `deflate' and `gzip' "
-               "content encodings.");
+        failf(conn->data,
+              "Unrecognized content encoding type. "
+              "libcurl understands `identity', `deflate' and `gzip' "
+              "content encodings.");
         return CHUNKE_BAD_ENCODING;
       }
 #endif
 
       if(result)
         return CHUNKE_WRITE_ERROR;
@@ -357,13 +357,13 @@
   }
   return CHUNKE_OK;
 }
 
 const char *Curl_chunked_strerror(CHUNKcode code)
 {
-  switch (code) {
+  switch(code) {
   default:
     return "OK";
   case CHUNKE_TOO_LONG_HEX:
     return "Too long hexadecimal number";
   case CHUNKE_ILLEGAL_HEX:
     return "Illegal or missing hexadecimal sequence";
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_digest.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_digest.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_digest.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_digest.c	2016-12-19 15:27:56.000000000 +0800
@@ -72,13 +72,13 @@
                             const unsigned char *request,
                             const unsigned char *uripath)
 {
   CURLcode result;
   struct Curl_easy *data = conn->data;
   unsigned char *path;
-  char *tmp;
+  char *tmp = NULL;
   char *response;
   size_t len;
   bool have_chlg;
 
   /* Point to the address of the pointer that holds the string to send to the
      server, which is for a plain host or for a HTTP proxy */
@@ -92,14 +92,14 @@
   struct digestdata *digest;
   struct auth *authp;
 
   if(proxy) {
     digest = &data->state.proxydigest;
     allocuserpwd = &conn->allocptr.proxyuserpwd;
-    userp = conn->proxyuser;
-    passwdp = conn->proxypasswd;
+    userp = conn->http_proxy.user;
+    passwdp = conn->http_proxy.passwd;
     authp = &data->state.authproxy;
   }
   else {
     digest = &data->state.digest;
     allocuserpwd = &conn->allocptr.userpwd;
     userp = conn->user;
@@ -137,18 +137,20 @@
      https://httpd.apache.org/docs/2.2/mod/mod_auth_digest.html#msie
 
      Further details on Digest implementation differences:
      http://www.fngtps.com/2006/09/http-authentication
   */
 
-  if(authp->iestyle && ((tmp = strchr((char *)uripath, '?')) != NULL)) {
-    size_t urilen = tmp - (char *)uripath;
-
-    path = (unsigned char *) aprintf("%.*s", urilen, uripath);
+  if(authp->iestyle) {
+    tmp = strchr((char *)uripath, '?');
+    if(tmp) {
+      size_t urilen = tmp - (char *)uripath;
+      path = (unsigned char *) aprintf("%.*s", urilen, uripath);
+    }
   }
-  else
+  if(!tmp)
     path = (unsigned char *) strdup((char *) uripath);
 
   if(!path)
     return CURLE_OUT_OF_MEMORY;
 
   result = Curl_auth_create_digest_http_message(data, userp, passwdp, request,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_negotiate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_negotiate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_negotiate.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_negotiate.c	2016-12-19 15:27:56.000000000 +0800
@@ -34,12 +34,13 @@
 #include "curl_memory.h"
 #include "memdebug.h"
 
 CURLcode Curl_input_negotiate(struct connectdata *conn, bool proxy,
                               const char *header)
 {
+  CURLcode result;
   struct Curl_easy *data = conn->data;
   size_t len;
 
   /* Point to the username, password, service and host */
   const char *userp;
   const char *passwdp;
@@ -47,17 +48,17 @@
   const char *host;
 
   /* Point to the correct struct with this */
   struct negotiatedata *neg_ctx;
 
   if(proxy) {
-    userp = conn->proxyuser;
-    passwdp = conn->proxypasswd;
+    userp = conn->http_proxy.user;
+    passwdp = conn->http_proxy.passwd;
     service = data->set.str[STRING_PROXY_SERVICE_NAME] ?
               data->set.str[STRING_PROXY_SERVICE_NAME] : "HTTP";
-    host = conn->proxy.name;
+    host = conn->http_proxy.host.name;
     neg_ctx = &data->state.proxyneg;
   }
   else {
     userp = conn->user;
     passwdp = conn->passwd;
     service = data->set.str[STRING_SERVICE_NAME] ?
@@ -86,14 +87,19 @@
       negotiation mechanisms */
       return CURLE_LOGIN_DENIED;
     }
   }
 
   /* Initilise the security context and decode our challenge */
-  return Curl_auth_decode_spnego_message(data, userp, passwdp, service, host,
-                                         header, neg_ctx);
+  result = Curl_auth_decode_spnego_message(data, userp, passwdp, service,
+                                           host, header, neg_ctx);
+
+  if(result)
+    Curl_auth_spnego_cleanup(neg_ctx);
+
+  return result;
 }
 
 CURLcode Curl_output_negotiate(struct connectdata *conn, bool proxy)
 {
   struct negotiatedata *neg_ctx = proxy ? &conn->data->state.proxyneg :
     &conn->data->state.negotiate;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_ntlm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_ntlm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_ntlm.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_ntlm.c	2016-12-19 15:27:56.000000000 +0800
@@ -133,14 +133,14 @@
   if(CURLE_OK != Curl_nss_force_init(conn->data))
     return CURLE_OUT_OF_MEMORY;
 #endif
 
   if(proxy) {
     allocuserpwd = &conn->allocptr.proxyuserpwd;
-    userp = conn->proxyuser;
-    passwdp = conn->proxypasswd;
+    userp = conn->http_proxy.user;
+    passwdp = conn->http_proxy.passwd;
     ntlm = &conn->proxyntlm;
     authp = &conn->data->state.authproxy;
   }
   else {
     allocuserpwd = &conn->allocptr.userpwd;
     userp = conn->user;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_proxy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_proxy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_proxy.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_proxy.c	2016-12-19 16:15:11.000000000 +0800
@@ -32,20 +32,56 @@
 #include "url.h"
 #include "select.h"
 #include "progress.h"
 #include "non-ascii.h"
 #include "connect.h"
 #include "curlx.h"
+#include "vtls/vtls.h"
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
-CURLcode Curl_proxy_connect(struct connectdata *conn)
+/*
+ * Perform SSL initialization for HTTPS proxy.  Sets
+ * proxy_ssl_connected connection bit when complete.  Can be
+ * called multiple times.
+ */
+static CURLcode https_proxy_connect(struct connectdata *conn, int sockindex)
+{
+#ifdef USE_SSL
+  CURLcode result = CURLE_OK;
+  DEBUGASSERT(conn->http_proxy.proxytype == CURLPROXY_HTTPS);
+  if(!conn->bits.proxy_ssl_connected[sockindex]) {
+    /* perform SSL initialization for this socket */
+    result =
+      Curl_ssl_connect_nonblocking(conn, sockindex,
+                                   &conn->bits.proxy_ssl_connected[sockindex]);
+    if(result)
+      conn->bits.close = TRUE; /* a failed connection is marked for closure to
+                                  prevent (bad) re-use or similar */
+  }
+  return result;
+#else
+  (void) conn;
+  (void) sockindex;
+  return CURLE_NOT_BUILT_IN;
+#endif
+}
+
+CURLcode Curl_proxy_connect(struct connectdata *conn, int sockindex)
 {
+  if(conn->http_proxy.proxytype == CURLPROXY_HTTPS) {
+    const CURLcode result = https_proxy_connect(conn, sockindex);
+    if(result)
+      return result;
+    if(!conn->bits.proxy_ssl_connected[sockindex])
+      return result; /* wait for HTTPS proxy SSL initialization to complete */
+  }
+
   if(conn->bits.tunnel_proxy && conn->bits.httpproxy) {
 #ifndef CURL_DISABLE_PROXY
     /* for [protocol] tunneled through HTTP proxy */
     struct HTTP http_proxy;
     void *prot_save;
     const char *hostname;
@@ -65,21 +101,26 @@
      * if the proxy's CONNTECT response is not instant.
      */
     prot_save = conn->data->req.protop;
     memset(&http_proxy, 0, sizeof(http_proxy));
     conn->data->req.protop = &http_proxy;
     connkeep(conn, "HTTP proxy CONNECT");
-    if(conn->bits.conn_to_host)
+    if(sockindex == SECONDARYSOCKET)
+      hostname = conn->secondaryhostname;
+    else if(conn->bits.conn_to_host)
       hostname = conn->conn_to_host.name;
     else
       hostname = conn->host.name;
-    if(conn->bits.conn_to_port)
+
+    if(sockindex == SECONDARYSOCKET)
+      remote_port = conn->secondary_port;
+    else if(conn->bits.conn_to_port)
       remote_port = conn->conn_to_port;
     else
       remote_port = conn->remote_port;
-    result = Curl_proxyCONNECT(conn, FIRSTSOCKET, hostname,
+    result = Curl_proxyCONNECT(conn, sockindex, hostname,
                                remote_port, FALSE);
     conn->data->req.protop = prot_save;
     if(CURLE_OK != result)
       return result;
     Curl_safefree(conn->allocptr.proxyuserpwd);
 #else
@@ -110,13 +151,13 @@
   struct SingleRequest *k = &data->req;
   CURLcode result;
   curl_socket_t tunnelsocket = conn->sock[sockindex];
   curl_off_t cl=0;
   bool closeConnection = FALSE;
   bool chunked_encoding = FALSE;
-  long check;
+  time_t check;
 
 #define SELECT_OK      0
 #define SELECT_ERROR   1
 #define SELECT_TIMEOUT 2
   int error = SELECT_OK;
 
@@ -158,13 +199,13 @@
       free(host_port);
 
       if(!result) {
         char *host=(char *)"";
         const char *proxyconn="";
         const char *useragent="";
-        const char *http = (conn->proxytype == CURLPROXY_HTTP_1_0) ?
+        const char *http = (conn->http_proxy.proxytype == CURLPROXY_HTTP_1_0) ?
           "1.0" : "1.1";
         bool ipv6_ip = conn->bits.ipv6_ip;
         char *hostheader;
 
         /* the hostname may be different */
         if(hostname != conn->host.name)
@@ -241,13 +282,13 @@
     if(check <= 0) {
       failf(data, "Proxy CONNECT aborted due to timeout");
       return CURLE_RECV_ERROR;
     }
 
     if(!blocking) {
-      if(0 == SOCKET_READABLE(tunnelsocket, 0))
+      if(!Curl_conn_data_pending(conn, sockindex))
         /* return so we'll be called again polling-style */
         return CURLE_OK;
       else {
         DEBUGF(infof(data,
                "Read response immediately from proxy CONNECT\n"));
       }
@@ -260,274 +301,263 @@
       int perline; /* count bytes per line */
       int keepon=TRUE;
       ssize_t gotbytes;
       char *ptr;
       char *line_start;
 
-      ptr=data->state.buffer;
+      ptr = data->state.buffer;
       line_start = ptr;
 
-      nread=0;
-      perline=0;
+      nread = 0;
+      perline = 0;
+
+      while(nread < BUFSIZE && keepon && !error) {
+        int writetype;
 
-      while((nread<BUFSIZE) && (keepon && !error)) {
+        if(Curl_pgrsUpdate(conn))
+          return CURLE_ABORTED_BY_CALLBACK;
+
+        if(ptr >= &data->state.buffer[BUFSIZE]) {
+          failf(data, "CONNECT response too large!");
+          return CURLE_RECV_ERROR;
+        }
 
         check = Curl_timeleft(data, NULL, TRUE);
         if(check <= 0) {
           failf(data, "Proxy CONNECT aborted due to timeout");
           error = SELECT_TIMEOUT; /* already too little time */
           break;
         }
 
-        /* loop every second at least, less if the timeout is near */
-        switch (SOCKET_READABLE(tunnelsocket, check<1000L?check:1000)) {
-        case -1: /* select() error, stop reading */
-          error = SELECT_ERROR;
-          failf(data, "Proxy CONNECT aborted due to select/poll error");
+        /* Read one byte at a time to avoid a race condition. Wait at most one
+           second before looping to ensure continuous pgrsUpdates. */
+        result = Curl_read(conn, tunnelsocket, ptr, 1, &gotbytes);
+        if(result == CURLE_AGAIN) {
+          if(SOCKET_READABLE(tunnelsocket, check<1000L?check:1000) == -1) {
+            error = SELECT_ERROR;
+            failf(data, "Proxy CONNECT aborted due to select/poll error");
+            break;
+          }
+          continue;
+        }
+        else if(result) {
+          keepon = FALSE;
           break;
-        case 0: /* timeout */
+        }
+        else if(gotbytes <= 0) {
+          if(data->set.proxyauth && data->state.authproxy.avail) {
+            /* proxy auth was requested and there was proxy auth available,
+               then deem this as "mere" proxy disconnect */
+            conn->bits.proxy_connect_closed = TRUE;
+            infof(data, "Proxy CONNECT connection closed\n");
+          }
+          else {
+            error = SELECT_ERROR;
+            failf(data, "Proxy CONNECT aborted");
+          }
+          keepon = FALSE;
           break;
-        default:
-          DEBUGASSERT(ptr+BUFSIZE-nread <= data->state.buffer+BUFSIZE+1);
-          result = Curl_read(conn, tunnelsocket, ptr, BUFSIZE-nread,
-                             &gotbytes);
-          if(result==CURLE_AGAIN)
-            continue; /* go loop yourself */
-          else if(result)
-            keepon = FALSE;
-          else if(gotbytes <= 0) {
-            keepon = FALSE;
-            if(data->set.proxyauth && data->state.authproxy.avail) {
-              /* proxy auth was requested and there was proxy auth available,
-                 then deem this as "mere" proxy disconnect */
-              conn->bits.proxy_connect_closed = TRUE;
-              infof(data, "Proxy CONNECT connection closed\n");
-            }
-            else {
-              error = SELECT_ERROR;
-              failf(data, "Proxy CONNECT aborted");
+        }
+
+        /* We got a byte of data */
+        nread++;
+
+        if(keepon > TRUE) {
+          /* This means we are currently ignoring a response-body */
+
+          nread = 0; /* make next read start over in the read buffer */
+          ptr = data->state.buffer;
+          if(cl) {
+            /* A Content-Length based body: simply count down the counter
+               and make sure to break out of the loop when we're done! */
+            cl--;
+            if(cl <= 0) {
+              keepon = FALSE;
+              break;
             }
           }
           else {
-            /*
-             * We got a whole chunk of data, which can be anything from one
-             * byte to a set of lines and possibly just a piece of the last
-             * line.
-             */
-            int i;
-
-            nread += gotbytes;
-
-            if(keepon > TRUE) {
-              /* This means we are currently ignoring a response-body */
-
-              nread = 0; /* make next read start over in the read buffer */
-              ptr=data->state.buffer;
-              if(cl) {
-                /* A Content-Length based body: simply count down the counter
-                   and make sure to break out of the loop when we're done! */
-                cl -= gotbytes;
-                if(cl<=0) {
-                  keepon = FALSE;
-                  break;
-                }
+            /* chunked-encoded body, so we need to do the chunked dance
+               properly to know when the end of the body is reached */
+            CHUNKcode r;
+            ssize_t tookcareof = 0;
+
+            /* now parse the chunked piece of data so that we can
+               properly tell when the stream ends */
+            r = Curl_httpchunk_read(conn, ptr, 1, &tookcareof);
+            if(r == CHUNKE_STOP) {
+              /* we're done reading chunks! */
+              infof(data, "chunk reading DONE\n");
+              keepon = FALSE;
+              /* we did the full CONNECT treatment, go COMPLETE */
+              conn->tunnel_state[sockindex] = TUNNEL_COMPLETE;
+            }
+          }
+          continue;
+        }
+
+        perline++; /* amount of bytes in this line so far */
+
+        /* if this is not the end of a header line then continue */
+        if(*ptr != 0x0a) {
+          ptr++;
+          continue;
+        }
+
+        /* convert from the network encoding */
+        result = Curl_convert_from_network(data, line_start, perline);
+        /* Curl_convert_from_network calls failf if unsuccessful */
+        if(result)
+          return result;
+
+        /* output debug if that is requested */
+        if(data->set.verbose)
+          Curl_debug(data, CURLINFO_HEADER_IN,
+                     line_start, (size_t)perline, conn);
+
+        /* send the header to the callback */
+        writetype = CLIENTWRITE_HEADER;
+        if(data->set.include_header)
+          writetype |= CLIENTWRITE_BODY;
+
+        result = Curl_client_write(conn, writetype, line_start, perline);
+
+        data->info.header_size += (long)perline;
+        data->req.headerbytecount += (long)perline;
+
+        if(result)
+          return result;
+
+        /* Newlines are CRLF, so the CR is ignored as the line isn't
+           really terminated until the LF comes. Treat a following CR
+           as end-of-headers as well.*/
+
+        if(('\r' == line_start[0]) ||
+           ('\n' == line_start[0])) {
+          /* end of response-headers from the proxy */
+          nread = 0; /* make next read start over in the read
+                        buffer */
+          ptr = data->state.buffer;
+          if((407 == k->httpcode) && !data->state.authproblem) {
+            /* If we get a 407 response code with content length
+               when we have no auth problem, we must ignore the
+               whole response-body */
+            keepon = 2;
+
+            if(cl) {
+              infof(data, "Ignore %" CURL_FORMAT_CURL_OFF_T
+                    " bytes of response-body\n", cl);
+            }
+            else if(chunked_encoding) {
+              CHUNKcode r;
+
+              infof(data, "Ignore chunked response-body\n");
+
+              /* We set ignorebody true here since the chunked
+                 decoder function will acknowledge that. Pay
+                 attention so that this is cleared again when this
+                 function returns! */
+              k->ignorebody = TRUE;
+
+              if(line_start[1] == '\n') {
+                /* this can only be a LF if the letter at index 0
+                   was a CR */
+                line_start++;
               }
-              else {
-                /* chunked-encoded body, so we need to do the chunked dance
-                   properly to know when the end of the body is reached */
-                CHUNKcode r;
-                ssize_t tookcareof=0;
-
-                /* now parse the chunked piece of data so that we can
-                   properly tell when the stream ends */
-                r = Curl_httpchunk_read(conn, ptr, gotbytes, &tookcareof);
-                if(r == CHUNKE_STOP) {
-                  /* we're done reading chunks! */
-                  infof(data, "chunk reading DONE\n");
-                  keepon = FALSE;
-                  /* we did the full CONNECT treatment, go COMPLETE */
-                  conn->tunnel_state[sockindex] = TUNNEL_COMPLETE;
-                }
-                else
-                  infof(data, "Read %zd bytes of chunk, continue\n",
-                        tookcareof);
+
+              /* now parse the chunked piece of data so that we can
+                 properly tell when the stream ends */
+              r = Curl_httpchunk_read(conn, line_start + 1, 1, &gotbytes);
+              if(r == CHUNKE_STOP) {
+                /* we're done reading chunks! */
+                infof(data, "chunk reading DONE\n");
+                keepon = FALSE;
+                /* we did the full CONNECT treatment, go to
+                   COMPLETE */
+                conn->tunnel_state[sockindex] = TUNNEL_COMPLETE;
               }
             }
-            else
-              for(i = 0; i < gotbytes; ptr++, i++) {
-                perline++; /* amount of bytes in this line so far */
-                if(*ptr == 0x0a) {
-                  char letter;
-                  int writetype;
-
-                  /* convert from the network encoding */
-                  result = Curl_convert_from_network(data, line_start,
-                                                     perline);
-                  /* Curl_convert_from_network calls failf if unsuccessful */
-                  if(result)
-                    return result;
-
-                  /* output debug if that is requested */
-                  if(data->set.verbose)
-                    Curl_debug(data, CURLINFO_HEADER_IN,
-                               line_start, (size_t)perline, conn);
-
-                  /* send the header to the callback */
-                  writetype = CLIENTWRITE_HEADER;
-                  if(data->set.include_header)
-                    writetype |= CLIENTWRITE_BODY;
-
-                  result = Curl_client_write(conn, writetype, line_start,
-                                             perline);
-
-                  data->info.header_size += (long)perline;
-                  data->req.headerbytecount += (long)perline;
-
-                  if(result)
-                    return result;
-
-                  /* Newlines are CRLF, so the CR is ignored as the line isn't
-                     really terminated until the LF comes. Treat a following CR
-                     as end-of-headers as well.*/
-
-                  if(('\r' == line_start[0]) ||
-                     ('\n' == line_start[0])) {
-                    /* end of response-headers from the proxy */
-                    nread = 0; /* make next read start over in the read
-                                  buffer */
-                    ptr=data->state.buffer;
-                    if((407 == k->httpcode) && !data->state.authproblem) {
-                      /* If we get a 407 response code with content length
-                         when we have no auth problem, we must ignore the
-                         whole response-body */
-                      keepon = 2;
-
-                      if(cl) {
-                        infof(data, "Ignore %" CURL_FORMAT_CURL_OFF_T
-                              " bytes of response-body\n", cl);
-
-                        /* remove the remaining chunk of what we already
-                           read */
-                        cl -= (gotbytes - i);
-
-                        if(cl<=0)
-                          /* if the whole thing was already read, we are done!
-                           */
-                          keepon=FALSE;
-                      }
-                      else if(chunked_encoding) {
-                        CHUNKcode r;
-                        /* We set ignorebody true here since the chunked
-                           decoder function will acknowledge that. Pay
-                           attention so that this is cleared again when this
-                           function returns! */
-                        k->ignorebody = TRUE;
-                        infof(data, "%zd bytes of chunk left\n", gotbytes-i);
-
-                        if(line_start[1] == '\n') {
-                          /* this can only be a LF if the letter at index 0
-                             was a CR */
-                          line_start++;
-                          i++;
-                        }
-
-                        /* now parse the chunked piece of data so that we can
-                           properly tell when the stream ends */
-                        r = Curl_httpchunk_read(conn, line_start+1,
-                                                  gotbytes -i, &gotbytes);
-                        if(r == CHUNKE_STOP) {
-                          /* we're done reading chunks! */
-                          infof(data, "chunk reading DONE\n");
-                          keepon = FALSE;
-                          /* we did the full CONNECT treatment, go to
-                             COMPLETE */
-                          conn->tunnel_state[sockindex] = TUNNEL_COMPLETE;
-                        }
-                        else
-                          infof(data, "Read %zd bytes of chunk, continue\n",
-                                gotbytes);
-                      }
-                      else {
-                        /* without content-length or chunked encoding, we
-                           can't keep the connection alive since the close is
-                           the end signal so we bail out at once instead */
-                        keepon=FALSE;
-                      }
-                    }
-                    else {
-                      keepon = FALSE;
-                      if(200 == data->info.httpproxycode) {
-                        if(gotbytes - (i+1))
-                          failf(data, "Proxy CONNECT followed by %zd bytes "
-                                "of opaque data. Data ignored (known bug #39)",
-                                gotbytes - (i+1));
-                      }
-                    }
-                    /* we did the full CONNECT treatment, go to COMPLETE */
-                    conn->tunnel_state[sockindex] = TUNNEL_COMPLETE;
-                    break; /* breaks out of for-loop, not switch() */
-                  }
-
-                  /* keep a backup of the position we are about to blank */
-                  letter = line_start[perline];
-                  line_start[perline]=0; /* zero terminate the buffer */
-                  if((checkprefix("WWW-Authenticate:", line_start) &&
-                      (401 == k->httpcode)) ||
-                     (checkprefix("Proxy-authenticate:", line_start) &&
-                      (407 == k->httpcode))) {
-
-                    bool proxy = (k->httpcode == 407) ? TRUE : FALSE;
-                    char *auth = Curl_copy_header_value(line_start);
-                    if(!auth)
-                      return CURLE_OUT_OF_MEMORY;
-
-                    result = Curl_http_input_auth(conn, proxy, auth);
-
-                    free(auth);
-
-                    if(result)
-                      return result;
-                  }
-                  else if(checkprefix("Content-Length:", line_start)) {
-                    cl = curlx_strtoofft(line_start +
-                                         strlen("Content-Length:"), NULL, 10);
-                  }
-                  else if(Curl_compareheader(line_start,
-                                             "Connection:", "close"))
-                    closeConnection = TRUE;
-                  else if(Curl_compareheader(line_start,
-                                             "Transfer-Encoding:",
-                                             "chunked")) {
-                    infof(data, "CONNECT responded chunked\n");
-                    chunked_encoding = TRUE;
-                    /* init our chunky engine */
-                    Curl_httpchunk_init(conn);
-                  }
-                  else if(Curl_compareheader(line_start,
-                                             "Proxy-Connection:", "close"))
-                    closeConnection = TRUE;
-                  else if(2 == sscanf(line_start, "HTTP/1.%d %d",
-                                      &subversion,
-                                      &k->httpcode)) {
-                    /* store the HTTP code from the proxy */
-                    data->info.httpproxycode = k->httpcode;
-                  }
-                  /* put back the letter we blanked out before */
-                  line_start[perline]= letter;
-
-                  perline=0; /* line starts over here */
-                  line_start = ptr+1; /* this skips the zero byte we wrote */
-                }
-              }
+            else {
+              /* without content-length or chunked encoding, we
+                 can't keep the connection alive since the close is
+                 the end signal so we bail out at once instead */
+              keepon = FALSE;
+            }
           }
-          break;
-        } /* switch */
-        if(Curl_pgrsUpdate(conn))
-          return CURLE_ABORTED_BY_CALLBACK;
+          else
+            keepon = FALSE;
+          /* we did the full CONNECT treatment, go to COMPLETE */
+          conn->tunnel_state[sockindex] = TUNNEL_COMPLETE;
+          continue;
+        }
+
+        line_start[perline] = 0; /* zero terminate the buffer */
+        if((checkprefix("WWW-Authenticate:", line_start) &&
+            (401 == k->httpcode)) ||
+           (checkprefix("Proxy-authenticate:", line_start) &&
+            (407 == k->httpcode))) {
+
+          bool proxy = (k->httpcode == 407) ? TRUE : FALSE;
+          char *auth = Curl_copy_header_value(line_start);
+          if(!auth)
+            return CURLE_OUT_OF_MEMORY;
+
+          result = Curl_http_input_auth(conn, proxy, auth);
+
+          free(auth);
+
+          if(result)
+            return result;
+        }
+        else if(checkprefix("Content-Length:", line_start)) {
+          if(k->httpcode/100 == 2) {
+            /* A server MUST NOT send any Transfer-Encoding or
+               Content-Length header fields in a 2xx (Successful)
+               response to CONNECT. (RFC 7231 section 4.3.6) */
+            failf(data, "Content-Length: in %03d response",
+                  k->httpcode);
+            return CURLE_RECV_ERROR;
+          }
+
+          cl = curlx_strtoofft(line_start +
+                               strlen("Content-Length:"), NULL, 10);
+        }
+        else if(Curl_compareheader(line_start, "Connection:", "close"))
+          closeConnection = TRUE;
+        else if(Curl_compareheader(line_start,
+                                   "Transfer-Encoding:",
+                                   "chunked")) {
+          if(k->httpcode/100 == 2) {
+            /* A server MUST NOT send any Transfer-Encoding or
+               Content-Length header fields in a 2xx (Successful)
+               response to CONNECT. (RFC 7231 section 4.3.6) */
+            failf(data, "Transfer-Encoding: in %03d response", k->httpcode);
+            return CURLE_RECV_ERROR;
+          }
+          infof(data, "CONNECT responded chunked\n");
+          chunked_encoding = TRUE;
+          /* init our chunky engine */
+          Curl_httpchunk_init(conn);
+        }
+        else if(Curl_compareheader(line_start, "Proxy-Connection:", "close"))
+          closeConnection = TRUE;
+        else if(2 == sscanf(line_start, "HTTP/1.%d %d",
+                            &subversion,
+                            &k->httpcode)) {
+          /* store the HTTP code from the proxy */
+          data->info.httpproxycode = k->httpcode;
+        }
+
+        perline = 0; /* line starts over here */
+        ptr = data->state.buffer;
+        line_start = ptr;
       } /* while there's buffer left and loop is requested */
 
+      if(Curl_pgrsUpdate(conn))
+        return CURLE_ABORTED_BY_CALLBACK;
+
       if(error)
         return CURLE_RECV_ERROR;
 
       if(data->info.httpproxycode != 200) {
         /* Deal with the possibly already received authenticate
            headers. 'newurl' is set to a new URL if we must loop. */
@@ -535,14 +565,13 @@
         if(result)
           return result;
 
         if(conn->bits.close)
           /* the connection has been marked for closure, most likely in the
              Curl_http_auth_act() function and thus we can kill it at once
-             below
-          */
+             below */
           closeConnection = TRUE;
       }
 
       if(closeConnection && data->req.newurl) {
         /* Connection closed by server. Don't use it anymore */
         Curl_closesocket(conn, conn->sock[sockindex]);
@@ -597,13 +626,13 @@
      after we've connected. So let's free and clear it here. */
   Curl_safefree(conn->allocptr.proxyuserpwd);
   conn->allocptr.proxyuserpwd = NULL;
 
   data->state.authproxy.done = TRUE;
 
-  infof (data, "Proxy replied OK to CONNECT request\n");
+  infof(data, "Proxy replied OK to CONNECT request\n");
   data->req.ignorebody = FALSE; /* put it (back) to non-ignore state */
   conn->bits.rewindaftersend = FALSE; /* make sure this isn't set for the
                                          document request  */
   return CURLE_OK;
 }
 #endif /* CURL_DISABLE_PROXY */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_proxy.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_proxy.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/http_proxy.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/http_proxy.h	2016-12-19 15:27:56.000000000 +0800
@@ -29,14 +29,14 @@
                            const char *hostname, int remote_port,
                            bool blocking);
 
 /* Default proxy timeout in milliseconds */
 #define PROXY_TIMEOUT (3600*1000)
 
-CURLcode Curl_proxy_connect(struct connectdata *conn);
+CURLcode Curl_proxy_connect(struct connectdata *conn, int sockindex);
 
 #else
 #define Curl_proxyCONNECT(x,y,z,w,v) CURLE_NOT_BUILT_IN
-#define Curl_proxy_connect(x) CURLE_OK
+#define Curl_proxy_connect(x,y) CURLE_OK
 #endif
 
 #endif /* HEADER_CURL_HTTP_PROXY_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/if2ip.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/if2ip.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/if2ip.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/if2ip.c	2016-12-19 15:27:56.000000000 +0800
@@ -65,13 +65,13 @@
 {
 #ifndef ENABLE_IPV6
   (void) sa;
 #else
   if(sa->sa_family == AF_INET6) {
     const struct sockaddr_in6 * sa6 = (const struct sockaddr_in6 *)(void *) sa;
-    const unsigned char * b = sa6->sin6_addr.s6_addr;
+    const unsigned char *b = sa6->sin6_addr.s6_addr;
     unsigned short w = (unsigned short) ((b[0] << 8) | b[1]);
 
     switch(w & 0xFFC0) {
     case 0xFE80:
       return IPV6_SCOPE_LINKLOCAL;
     case 0xFEC0:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/imap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/imap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/imap.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/imap.c	2016-12-19 15:27:56.000000000 +0800
@@ -104,13 +104,13 @@
 static CURLcode imap_parse_custom_request(struct connectdata *conn);
 static CURLcode imap_perform_authenticate(struct connectdata *conn,
                                           const char *mech,
                                           const char *initresp);
 static CURLcode imap_continue_authenticate(struct connectdata *conn,
                                            const char *resp);
-static void imap_get_message(char *buffer, char** outptr);
+static void imap_get_message(char *buffer, char **outptr);
 
 /*
  * IMAP protocol handler.
  */
 
 const struct Curl_handler Curl_handler_imap = {
@@ -387,16 +387,16 @@
 /***********************************************************************
  *
  * imap_get_message()
  *
  * Gets the authentication message from the response buffer.
  */
-static void imap_get_message(char *buffer, char** outptr)
+static void imap_get_message(char *buffer, char **outptr)
 {
   size_t len = 0;
-  char* message = NULL;
+  char *message = NULL;
 
   /* Find the start of the message */
   for(message = buffer + 2; *message == ' ' || *message == '\t'; message++)
     ;
 
   /* Find the end of the message */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/inet_ntop.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/inet_ntop.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/inet_ntop.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/inet_ntop.c	2016-12-19 15:27:56.000000000 +0800
@@ -179,18 +179,18 @@
  * in the winsock error code. This is to avoid losing the
  * actual last winsock error. So use macro ERRNO to fetch the
  * errno this function sets when returning NULL, not SOCKERRNO.
  */
 char *Curl_inet_ntop(int af, const void *src, char *buf, size_t size)
 {
-  switch (af) {
+  switch(af) {
   case AF_INET:
-    return inet_ntop4((const unsigned char*)src, buf, size);
+    return inet_ntop4((const unsigned char *)src, buf, size);
 #ifdef ENABLE_IPV6
   case AF_INET6:
-    return inet_ntop6((const unsigned char*)src, buf, size);
+    return inet_ntop6((const unsigned char *)src, buf, size);
 #endif
   default:
     SET_ERRNO(EAFNOSUPPORT);
     return NULL;
   }
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/inet_pton.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/inet_pton.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/inet_pton.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/inet_pton.c	2016-12-19 15:27:56.000000000 +0800
@@ -62,13 +62,13 @@
  * author:
  *      Paul Vixie, 1996.
  */
 int
 Curl_inet_pton(int af, const char *src, void *dst)
 {
-  switch (af) {
+  switch(af) {
   case AF_INET:
     return (inet_pton4(src, (unsigned char *)dst));
 #ifdef ENABLE_IPV6
   case AF_INET6:
     return (inet_pton6(src, (unsigned char *)dst));
 #endif
@@ -100,13 +100,14 @@
   octets = 0;
   tp = tmp;
   *tp = 0;
   while((ch = *src++) != '\0') {
     const char *pch;
 
-    if((pch = strchr(digits, ch)) != NULL) {
+    pch = strchr(digits, ch);
+    if(pch) {
       unsigned int val = *tp * 10 + (unsigned int)(pch - digits);
 
       if(saw_digit && *tp == 0)
         return (0);
       if(val > 255)
         return (0);
@@ -166,13 +167,14 @@
   curtok = src;
   saw_xdigit = 0;
   val = 0;
   while((ch = *src++) != '\0') {
     const char *pch;
 
-    if((pch = strchr((xdigits = xdigits_l), ch)) == NULL)
+    pch = strchr((xdigits = xdigits_l), ch);
+    if(!pch)
       pch = strchr((xdigits = xdigits_u), ch);
     if(pch != NULL) {
       val <<= 4;
       val |= (pch - xdigits);
       if(++saw_xdigit > 4)
         return (0);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/krb5.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/krb5.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/krb5.c	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/krb5.c	2016-12-19 15:27:56.000000000 +0800
@@ -118,13 +118,13 @@
   int state;
   int len;
 
   /* NOTE that the cast is safe, neither of the krb5, gnu gss and heimdal
    * libraries modify the input buffer in gss_seal()
    */
-  dec.value = (void*)from;
+  dec.value = (void *)from;
   dec.length = length;
   maj = gss_seal(&min, *context,
                  level == PROT_PRIVATE,
                  GSS_C_QOP_DEFAULT,
                  &dec, &state, &enc);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ldap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ldap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ldap.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ldap.c	2016-12-19 15:27:56.000000000 +0800
@@ -106,27 +106,27 @@
                                without HAVE_LDAP_URL_PARSE defined */
 } CURL_LDAPURLDesc;
 
 #undef LDAPURLDesc
 #define LDAPURLDesc             CURL_LDAPURLDesc
 
-static int  _ldap_url_parse (const struct connectdata *conn,
-                             LDAPURLDesc **ludp);
-static void _ldap_free_urldesc (LDAPURLDesc *ludp);
+static int  _ldap_url_parse(const struct connectdata *conn,
+                            LDAPURLDesc **ludp);
+static void _ldap_free_urldesc(LDAPURLDesc *ludp);
 
 #undef ldap_free_urldesc
 #define ldap_free_urldesc       _ldap_free_urldesc
 #endif
 
 #ifdef DEBUG_LDAP
   #define LDAP_TRACE(x)   do { \
-                            _ldap_trace ("%u: ", __LINE__); \
+                            _ldap_trace("%u: ", __LINE__); \
                             _ldap_trace x; \
                           } WHILE_FALSE
 
-  static void _ldap_trace (const char *fmt, ...);
+  static void _ldap_trace(const char *fmt, ...);
 #else
   #define LDAP_TRACE(x)   Curl_nop_stmt
 #endif
 
 
 static CURLcode Curl_ldap(struct connectdata *conn, bool *done);
@@ -268,25 +268,25 @@
 #ifdef USE_WIN32_LDAP
     /* Win32 LDAP SDK doesn't support insecure mode without CA! */
     server = ldap_sslinit(host, (int)conn->port, 1);
     ldap_set_option(server, LDAP_OPT_SSL, LDAP_OPT_ON);
 #else
     int ldap_option;
-    char* ldap_ca = data->set.str[STRING_SSL_CAFILE];
+    char *ldap_ca = conn->ssl_config.CAfile;
 #if defined(CURL_HAS_NOVELL_LDAPSDK)
     rc = ldapssl_client_init(NULL, NULL);
     if(rc != LDAP_SUCCESS) {
       failf(data, "LDAP local: ldapssl_client_init %s", ldap_err2string(rc));
       result = CURLE_SSL_CERTPROBLEM;
       goto quit;
     }
-    if(data->set.ssl.verifypeer) {
+    if(conn->ssl_config.verifypeer) {
       /* Novell SDK supports DER or BASE64 files. */
       int cert_type = LDAPSSL_CERT_FILETYPE_B64;
-      if((data->set.str[STRING_CERT_TYPE]) &&
-         (strcasecompare(data->set.str[STRING_CERT_TYPE], "DER")))
+      if((data->set.ssl.cert_type) &&
+         (strcasecompare(data->set.ssl.cert_type, "DER")))
         cert_type = LDAPSSL_CERT_FILETYPE_DER;
       if(!ldap_ca) {
         failf(data, "LDAP local: ERROR %s CA cert not set!",
               (cert_type == LDAPSSL_CERT_FILETYPE_DER ? "DER" : "PEM"));
         result = CURLE_SSL_CERTPROBLEM;
         goto quit;
@@ -318,16 +318,16 @@
       failf(data, "LDAP local: Cannot connect to %s:%ld",
             conn->host.dispname, conn->port);
       result = CURLE_COULDNT_CONNECT;
       goto quit;
     }
 #elif defined(LDAP_OPT_X_TLS)
-    if(data->set.ssl.verifypeer) {
+    if(conn->ssl_config.verifypeer) {
       /* OpenLDAP SDK supports BASE64 files. */
-      if((data->set.str[STRING_CERT_TYPE]) &&
-         (!strcasecompare(data->set.str[STRING_CERT_TYPE], "PEM"))) {
+      if((data->set.ssl.cert_type) &&
+         (!strcasecompare(data->set.ssl.cert_type, "PEM"))) {
         failf(data, "LDAP local: ERROR OpenLDAP only supports PEM cert-type!");
         result = CURLE_SSL_CERTPROBLEM;
         goto quit;
       }
       if(!ldap_ca) {
         failf(data, "LDAP local: ERROR PEM CA cert not set!");
@@ -652,13 +652,13 @@
        ber_free(ber, 0);
   }
 
 quit:
   if(ldapmsg) {
     ldap_msgfree(ldapmsg);
-    LDAP_TRACE (("Received %d entries\n", num));
+    LDAP_TRACE(("Received %d entries\n", num));
   }
   if(rc == LDAP_SIZELIMIT_EXCEEDED)
     infof(data, "There are more than %d entries\n", num);
   if(ludp)
     ldap_free_urldesc(ludp);
   if(server)
@@ -679,36 +679,36 @@
   connclose(conn, "LDAP connection always disable re-use");
 
   return result;
 }
 
 #ifdef DEBUG_LDAP
-static void _ldap_trace (const char *fmt, ...)
+static void _ldap_trace(const char *fmt, ...)
 {
   static int do_trace = -1;
   va_list args;
 
   if(do_trace == -1) {
     const char *env = getenv("CURL_TRACE");
     do_trace = (env && strtol(env, NULL, 10) > 0);
   }
   if(!do_trace)
     return;
 
-  va_start (args, fmt);
-  vfprintf (stderr, fmt, args);
-  va_end (args);
+  va_start(args, fmt);
+  vfprintf(stderr, fmt, args);
+  va_end(args);
 }
 #endif
 
 #ifndef HAVE_LDAP_URL_PARSE
 
 /*
  * Return scope-value for a scope-string.
  */
-static int str2scope (const char *p)
+static int str2scope(const char *p)
 {
   if(strcasecompare(p, "one"))
     return LDAP_SCOPE_ONELEVEL;
   if(strcasecompare(p, "onetree"))
     return LDAP_SCOPE_ONELEVEL;
   if(strcasecompare(p, "base"))
@@ -796,13 +796,13 @@
 
   if(*p) {
     char *dn = p;
     char *unescaped;
     CURLcode result;
 
-    LDAP_TRACE (("DN '%s'\n", dn));
+    LDAP_TRACE(("DN '%s'\n", dn));
 
     /* Unescape the DN */
     result = Curl_urldecode(conn->data, dn, 0, &unescaped, NULL, FALSE);
     if(result) {
       rc = LDAP_NO_MEMORY;
 
@@ -861,13 +861,13 @@
     }
 
     for(i = 0; i < count; i++) {
       char *unescaped;
       CURLcode result;
 
-      LDAP_TRACE (("attr[%d] '%s'\n", i, attributes[i]));
+      LDAP_TRACE(("attr[%d] '%s'\n", i, attributes[i]));
 
       /* Unescape the attribute */
       result = Curl_urldecode(conn->data, attributes[i], 0, &unescaped, NULL,
                               FALSE);
       if(result) {
         free(attributes);
@@ -914,13 +914,13 @@
     ludp->lud_scope = str2scope(p);
     if(ludp->lud_scope == -1) {
       rc = LDAP_INVALID_SYNTAX;
 
       goto quit;
     }
-    LDAP_TRACE (("scope %d\n", ludp->lud_scope));
+    LDAP_TRACE(("scope %d\n", ludp->lud_scope));
   }
 
   p = q;
   if(!p)
     goto quit;
 
@@ -931,13 +931,13 @@
 
   if(*p) {
     char *filter = p;
     char *unescaped;
     CURLcode result;
 
-    LDAP_TRACE (("filter '%s'\n", filter));
+    LDAP_TRACE(("filter '%s'\n", filter));
 
     /* Unescape the filter */
     result = Curl_urldecode(conn->data, filter, 0, &unescaped, NULL, FALSE);
     if(result) {
       rc = LDAP_NO_MEMORY;
 
@@ -1006,10 +1006,10 @@
   if(ludp->lud_attrs) {
     for(i = 0; i < ludp->lud_attrs_dups; i++)
       free(ludp->lud_attrs[i]);
     free(ludp->lud_attrs);
   }
 
-  free (ludp);
+  free(ludp);
 }
 #endif  /* !HAVE_LDAP_URL_PARSE */
 #endif  /* !CURL_DISABLE_LDAP && !USE_OPENLDAP */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/libcurl.plist /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/libcurl.plist
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/libcurl.plist	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/libcurl.plist	2016-12-21 14:50:26.000000000 +0800
@@ -12,24 +12,24 @@
 	<string>curl</string>
 
 	<key>CFBundleIdentifier</key>
 	<string>se.haxx.curl.libcurl</string>
 
 	<key>CFBundleVersion</key>
-	<string>7.51.0</string>
+	<string>7.52.0</string>
 
 	<key>CFBundleName</key>
 	<string>libcurl</string>
 
 	<key>CFBundlePackageType</key>
 	<string>FMWK</string>
 
 	<key>CFBundleSignature</key>
 	<string>????</string>
 
 	<key>CFBundleShortVersionString</key>
-	<string>libcurl 7.51.0</string>
+	<string>libcurl 7.52.0</string>
 
 	<key>CFBundleGetInfoString</key>
-	<string>libcurl.plist 7.51.0</string>
+	<string>libcurl.plist 7.52.0</string>
 </dict>
 </plist>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.in	2016-10-31 17:41:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.in	2016-12-19 16:16:46.000000000 +0800
@@ -214,16 +214,16 @@
 	libcurl_la-curl_gethostname.lo libcurl_la-gopher.lo \
 	libcurl_la-idn_win32.lo libcurl_la-http_proxy.lo \
 	libcurl_la-non-ascii.lo libcurl_la-asyn-ares.lo \
 	libcurl_la-asyn-thread.lo libcurl_la-curl_gssapi.lo \
 	libcurl_la-http_ntlm.lo libcurl_la-curl_ntlm_wb.lo \
 	libcurl_la-curl_ntlm_core.lo libcurl_la-curl_sasl.lo \
-	libcurl_la-curl_multibyte.lo libcurl_la-hostcheck.lo \
-	libcurl_la-conncache.lo libcurl_la-pipeline.lo \
-	libcurl_la-dotdot.lo libcurl_la-x509asn1.lo \
-	libcurl_la-http2.lo libcurl_la-smb.lo \
+	libcurl_la-rand.lo libcurl_la-curl_multibyte.lo \
+	libcurl_la-hostcheck.lo libcurl_la-conncache.lo \
+	libcurl_la-pipeline.lo libcurl_la-dotdot.lo \
+	libcurl_la-x509asn1.lo libcurl_la-http2.lo libcurl_la-smb.lo \
 	libcurl_la-curl_endian.lo libcurl_la-curl_des.lo \
 	libcurl_la-system_win32.lo
 am__dirstamp = $(am__leading_dot)dirstamp
 am__objects_2 = vauth/libcurl_la-vauth.lo \
 	vauth/libcurl_la-cleartext.lo vauth/libcurl_la-cram.lo \
 	vauth/libcurl_la-digest.lo vauth/libcurl_la-digest_sspi.lo \
@@ -290,18 +290,19 @@
 	libcurlu_la-openldap.lo libcurlu_la-curl_gethostname.lo \
 	libcurlu_la-gopher.lo libcurlu_la-idn_win32.lo \
 	libcurlu_la-http_proxy.lo libcurlu_la-non-ascii.lo \
 	libcurlu_la-asyn-ares.lo libcurlu_la-asyn-thread.lo \
 	libcurlu_la-curl_gssapi.lo libcurlu_la-http_ntlm.lo \
 	libcurlu_la-curl_ntlm_wb.lo libcurlu_la-curl_ntlm_core.lo \
-	libcurlu_la-curl_sasl.lo libcurlu_la-curl_multibyte.lo \
-	libcurlu_la-hostcheck.lo libcurlu_la-conncache.lo \
-	libcurlu_la-pipeline.lo libcurlu_la-dotdot.lo \
-	libcurlu_la-x509asn1.lo libcurlu_la-http2.lo \
-	libcurlu_la-smb.lo libcurlu_la-curl_endian.lo \
-	libcurlu_la-curl_des.lo libcurlu_la-system_win32.lo
+	libcurlu_la-curl_sasl.lo libcurlu_la-rand.lo \
+	libcurlu_la-curl_multibyte.lo libcurlu_la-hostcheck.lo \
+	libcurlu_la-conncache.lo libcurlu_la-pipeline.lo \
+	libcurlu_la-dotdot.lo libcurlu_la-x509asn1.lo \
+	libcurlu_la-http2.lo libcurlu_la-smb.lo \
+	libcurlu_la-curl_endian.lo libcurlu_la-curl_des.lo \
+	libcurlu_la-system_win32.lo
 am__objects_8 = vauth/libcurlu_la-vauth.lo \
 	vauth/libcurlu_la-cleartext.lo vauth/libcurlu_la-cram.lo \
 	vauth/libcurlu_la-digest.lo vauth/libcurlu_la-digest_sspi.lo \
 	vauth/libcurlu_la-krb5_gssapi.lo \
 	vauth/libcurlu_la-krb5_sspi.lo vauth/libcurlu_la-ntlm.lo \
 	vauth/libcurlu_la-ntlm_sspi.lo vauth/libcurlu_la-oauth2.lo \
@@ -696,13 +697,13 @@
   inet_ntop.c parsedate.c select.c tftp.c splay.c strdup.c socks.c      \
   ssh.c curl_addrinfo.c socks_gssapi.c socks_sspi.c            \
   curl_sspi.c slist.c nonblock.c curl_memrchr.c imap.c pop3.c smtp.c    \
   pingpong.c rtsp.c curl_threads.c warnless.c hmac.c curl_rtmp.c        \
   openldap.c curl_gethostname.c gopher.c idn_win32.c                    \
   http_proxy.c non-ascii.c asyn-ares.c asyn-thread.c curl_gssapi.c      \
-  http_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_sasl.c               \
+  http_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_sasl.c rand.c        \
   curl_multibyte.c hostcheck.c conncache.c pipeline.c dotdot.c          \
   x509asn1.c http2.c smb.c curl_endian.c curl_des.c system_win32.c
 
 LIB_HFILES = arpa_telnet.h netrc.h file.h timeval.h hostip.h progress.h \
   formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h if2ip.h         \
   speedcheck.h urldata.h curl_ldap.h escape.h telnet.h getinfo.h        \
@@ -717,13 +718,13 @@
   rtsp.h curl_threads.h warnless.h curl_hmac.h curl_rtmp.h              \
   curl_gethostname.h gopher.h http_proxy.h non-ascii.h asyn.h           \
   http_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h             \
   curl_sasl.h curl_multibyte.h hostcheck.h conncache.h                  \
   curl_setup_once.h multihandle.h setup-vms.h pipeline.h dotdot.h       \
   x509asn1.h http2.h sigpipe.h smb.h curl_endian.h curl_des.h           \
-  curl_printf.h system_win32.h
+  curl_printf.h system_win32.h rand.h
 
 LIB_RCFILES = libcurl.rc
 CSOURCES = $(LIB_CFILES) $(LIB_VAUTH_CFILES) $(LIB_VTLS_CFILES)
 HHEADERS = $(LIB_HFILES) $(LIB_VAUTH_HFILES) $(LIB_VTLS_HFILES)
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
@@ -1020,12 +1021,13 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-openldap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-parsedate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-pingpong.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-pipeline.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-pop3.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-progress.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-rand.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-rtsp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-security.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-select.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-sendf.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-share.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-slist.Plo@am__quote@
@@ -1120,12 +1122,13 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-openldap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-parsedate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-pingpong.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-pipeline.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-pop3.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-progress.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-rand.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-rtsp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-security.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-select.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-sendf.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-share.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurlu_la-slist.Plo@am__quote@
@@ -1845,12 +1848,19 @@
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-curl_sasl.lo -MD -MP -MF $(DEPDIR)/libcurl_la-curl_sasl.Tpo -c -o libcurl_la-curl_sasl.lo `test -f 'curl_sasl.c' || echo '$(srcdir)/'`curl_sasl.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurl_la-curl_sasl.Tpo $(DEPDIR)/libcurl_la-curl_sasl.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='curl_sasl.c' object='libcurl_la-curl_sasl.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-curl_sasl.lo `test -f 'curl_sasl.c' || echo '$(srcdir)/'`curl_sasl.c
 
+libcurl_la-rand.lo: rand.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-rand.lo -MD -MP -MF $(DEPDIR)/libcurl_la-rand.Tpo -c -o libcurl_la-rand.lo `test -f 'rand.c' || echo '$(srcdir)/'`rand.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurl_la-rand.Tpo $(DEPDIR)/libcurl_la-rand.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rand.c' object='libcurl_la-rand.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-rand.lo `test -f 'rand.c' || echo '$(srcdir)/'`rand.c
+
 libcurl_la-curl_multibyte.lo: curl_multibyte.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-curl_multibyte.lo -MD -MP -MF $(DEPDIR)/libcurl_la-curl_multibyte.Tpo -c -o libcurl_la-curl_multibyte.lo `test -f 'curl_multibyte.c' || echo '$(srcdir)/'`curl_multibyte.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurl_la-curl_multibyte.Tpo $(DEPDIR)/libcurl_la-curl_multibyte.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='curl_multibyte.c' object='libcurl_la-curl_multibyte.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-curl_multibyte.lo `test -f 'curl_multibyte.c' || echo '$(srcdir)/'`curl_multibyte.c
@@ -2713,12 +2723,19 @@
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-curl_sasl.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-curl_sasl.Tpo -c -o libcurlu_la-curl_sasl.lo `test -f 'curl_sasl.c' || echo '$(srcdir)/'`curl_sasl.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurlu_la-curl_sasl.Tpo $(DEPDIR)/libcurlu_la-curl_sasl.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='curl_sasl.c' object='libcurlu_la-curl_sasl.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-curl_sasl.lo `test -f 'curl_sasl.c' || echo '$(srcdir)/'`curl_sasl.c
 
+libcurlu_la-rand.lo: rand.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-rand.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-rand.Tpo -c -o libcurlu_la-rand.lo `test -f 'rand.c' || echo '$(srcdir)/'`rand.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurlu_la-rand.Tpo $(DEPDIR)/libcurlu_la-rand.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rand.c' object='libcurlu_la-rand.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-rand.lo `test -f 'rand.c' || echo '$(srcdir)/'`rand.c
+
 libcurlu_la-curl_multibyte.lo: curl_multibyte.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -MT libcurlu_la-curl_multibyte.lo -MD -MP -MF $(DEPDIR)/libcurlu_la-curl_multibyte.Tpo -c -o libcurlu_la-curl_multibyte.lo `test -f 'curl_multibyte.c' || echo '$(srcdir)/'`curl_multibyte.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurlu_la-curl_multibyte.Tpo $(DEPDIR)/libcurlu_la-curl_multibyte.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='curl_multibyte.c' object='libcurlu_la-curl_multibyte.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurlu_la_CPPFLAGS) $(CPPFLAGS) $(libcurlu_la_CFLAGS) $(CFLAGS) -c -o libcurlu_la-curl_multibyte.lo `test -f 'curl_multibyte.c' || echo '$(srcdir)/'`curl_multibyte.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.inc	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.inc	2016-12-19 15:27:56.000000000 +0800
@@ -48,13 +48,13 @@
   inet_ntop.c parsedate.c select.c tftp.c splay.c strdup.c socks.c      \
   ssh.c curl_addrinfo.c socks_gssapi.c socks_sspi.c            \
   curl_sspi.c slist.c nonblock.c curl_memrchr.c imap.c pop3.c smtp.c    \
   pingpong.c rtsp.c curl_threads.c warnless.c hmac.c curl_rtmp.c        \
   openldap.c curl_gethostname.c gopher.c idn_win32.c                    \
   http_proxy.c non-ascii.c asyn-ares.c asyn-thread.c curl_gssapi.c      \
-  http_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_sasl.c               \
+  http_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_sasl.c rand.c        \
   curl_multibyte.c hostcheck.c conncache.c pipeline.c dotdot.c          \
   x509asn1.c http2.c smb.c curl_endian.c curl_des.c system_win32.c
 
 LIB_HFILES = arpa_telnet.h netrc.h file.h timeval.h hostip.h progress.h \
   formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h if2ip.h         \
   speedcheck.h urldata.h curl_ldap.h escape.h telnet.h getinfo.h        \
@@ -69,12 +69,12 @@
   rtsp.h curl_threads.h warnless.h curl_hmac.h curl_rtmp.h              \
   curl_gethostname.h gopher.h http_proxy.h non-ascii.h asyn.h           \
   http_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h             \
   curl_sasl.h curl_multibyte.h hostcheck.h conncache.h                  \
   curl_setup_once.h multihandle.h setup-vms.h pipeline.h dotdot.h       \
   x509asn1.h http2.h sigpipe.h smb.h curl_endian.h curl_des.h           \
-  curl_printf.h system_win32.h
+  curl_printf.h system_win32.h rand.h
 
 LIB_RCFILES = libcurl.rc
 
 CSOURCES = $(LIB_CFILES) $(LIB_VAUTH_CFILES) $(LIB_VTLS_CFILES)
 HHEADERS = $(LIB_HFILES) $(LIB_VAUTH_HFILES) $(LIB_VTLS_HFILES)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.netware /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.netware
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.netware	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.netware	2016-12-19 15:27:56.000000000 +0800
@@ -84,13 +84,13 @@
 endif
 
 # Edit the vars below to change NLM target settings.
 TARGET  = libcurl
 VERSION	= $(LIBCURL_VERSION)
 COPYR	= Copyright (C) $(LIBCURL_COPYRIGHT_STR)
-DESCR	= cURL libcurl $(LIBCURL_VERSION_STR) ($(LIBARCH)) - https://curl.haxx.se
+DESCR	= curl libcurl $(LIBCURL_VERSION_STR) ($(LIBARCH)) - https://curl.haxx.se
 MTSAFE	= YES
 STACK	= 64000
 SCREEN	= none
 EXPORTF	= $(TARGET).imp
 EXPORTS	= @$(EXPORTF)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc10
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc10	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc10	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc11
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc11	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc11	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc12
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc12	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc12	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc14
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc14	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc14	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc6
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc6	2016-10-31 22:17:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc6	2016-12-19 15:27:56.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc7
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc7	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc7	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc8
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc8	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc8	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc9
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/Makefile.vc9	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/Makefile.vc9	2016-12-21 14:50:26.000000000 +0800
@@ -599,12 +599,13 @@
 	$(DIROBJ)\pipeline.obj \
 	$(DIROBJ)\polarssl.obj \
 	$(DIROBJ)\polarssl_threadlock.obj \
 	$(DIROBJ)\pop3.obj \
 	$(DIROBJ)\progress.obj \
 	$(DIROBJ)\strcase.obj \
+	$(DIROBJ)\rand.obj \
 	$(DIROBJ)\rtsp.obj \
 	$(DIROBJ)\schannel.obj \
 	$(DIROBJ)\security.obj \
 	$(DIROBJ)\select.obj \
 	$(DIROBJ)\sendf.obj \
 	$(DIROBJ)\share.obj \
@@ -630,13 +631,12 @@
 	$(DIROBJ)\oauth2.obj \
 	$(DIROBJ)\spnego_gssapi.obj \
 	$(DIROBJ)\spnego_sspi.obj \
 	$(DIROBJ)\vtls.obj \
 	$(DIROBJ)\openssl.obj \
 	$(DIROBJ)\strdup.obj \
-	$(DIROBJ)\strequal.obj \
 	$(DIROBJ)\strerror.obj \
 	$(DIROBJ)\strtok.obj \
 	$(DIROBJ)\strtoofft.obj \
 	$(DIROBJ)\telnet.obj \
 	$(DIROBJ)\tftp.obj \
 	$(DIROBJ)\timeval.obj \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/md4.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/md4.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/md4.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/md4.c	2016-12-19 15:27:56.000000000 +0800
@@ -210,13 +210,14 @@
 static void MD4_Update(MD4_CTX *ctx, const void *data, unsigned long size)
 {
   MD4_u32plus saved_lo;
   unsigned long used, available;
 
   saved_lo = ctx->lo;
-  if((ctx->lo = (saved_lo + size) & 0x1fffffff) < saved_lo)
+  ctx->lo = (saved_lo + size) & 0x1fffffff;
+  if(ctx->lo < saved_lo)
     ctx->hi++;
   ctx->hi += (MD4_u32plus)size >> 29;
 
   used = saved_lo & 0x3f;
 
   if(used) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/md5.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/md5.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/md5.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/md5.c	2016-12-19 15:27:56.000000000 +0800
@@ -42,13 +42,13 @@
 static void MD5_Init(MD5_CTX * ctx)
 {
   md5_init(ctx);
 }
 
 static void MD5_Update(MD5_CTX * ctx,
-                       const unsigned char * input,
+                       const unsigned char *input,
                        unsigned int inputLen)
 {
   md5_update(ctx, inputLen, input);
 }
 
 static void MD5_Final(unsigned char digest[16], MD5_CTX * ctx)
@@ -68,13 +68,13 @@
 static void MD5_Init(MD5_CTX * ctx)
 {
   gcry_md_open(ctx, GCRY_MD_MD5, 0);
 }
 
 static void MD5_Update(MD5_CTX * ctx,
-                       const unsigned char * input,
+                       const unsigned char *input,
                        unsigned int inputLen)
 {
   gcry_md_write(*ctx, input, inputLen);
 }
 
 static void MD5_Final(unsigned char digest[16], MD5_CTX * ctx)
@@ -399,13 +399,14 @@
 static void MD5_Update(MD5_CTX *ctx, const void *data, unsigned long size)
 {
   MD5_u32plus saved_lo;
   unsigned long used, available;
 
   saved_lo = ctx->lo;
-  if((ctx->lo = (saved_lo + size) & 0x1fffffff) < saved_lo)
+  ctx->lo = (saved_lo + size) & 0x1fffffff;
+  if(ctx->lo < saved_lo)
     ctx->hi++;
   ctx->hi += (MD5_u32plus)size >> 29;
 
   used = saved_lo & 0x3f;
 
   if(used) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/memdebug.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/memdebug.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/memdebug.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/memdebug.c	2016-12-19 15:27:56.000000000 +0800
@@ -87,13 +87,13 @@
 
 struct memdebug {
   size_t size;
   union {
     curl_off_t o;
     double d;
-    void * p;
+    void *p;
   } mem[1];
   /* I'm hoping this is the thing with the strictest alignment
    * requirements.  That also means we waste some space :-( */
 };
 
 /*
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/mprintf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/mprintf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/mprintf.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/mprintf.c	2016-12-19 15:27:56.000000000 +0800
@@ -89,13 +89,14 @@
 #  define mp_uintmax_t unsigned LONG_LONG_TYPE
 #else
 #  define mp_intmax_t long
 #  define mp_uintmax_t unsigned long
 #endif
 
-#define BUFFSIZE 256 /* buffer for long-to-str and float-to-str calcs */
+#define BUFFSIZE 326 /* buffer for long-to-str and float-to-str calcs, should
+                        fit negative DBL_MAX (317 letters) */
 #define MAX_PARAMETERS 128 /* lame static limit */
 
 #ifdef __AMIGA__
 # undef FORMAT_INT
 #endif
 
@@ -300,13 +301,12 @@
           flags &= ~FLAGS_PAD_NIL;
           break;
         case '#':
           flags |= FLAGS_ALT;
           break;
         case '.':
-          flags |= FLAGS_PREC;
           if('*' == *fmt) {
             /* The precision is picked from a specified parameter */
 
             flags |= FLAGS_PRECPARAM;
             fmt++;
             param_num++;
@@ -499,13 +499,13 @@
     }
     if(vto[i].flags & FLAGS_PRECPARAM) {
       vto[vto[i].precision].data.num.as_signed =
         (mp_intmax_t)va_arg(arglist, int);
     }
 
-    switch (vto[i].type) {
+    switch(vto[i].type) {
     case FORMAT_STRING:
       vto[i].data.str = va_arg(arglist, char *);
       break;
 
     case FORMAT_INTPTR:
     case FORMAT_UNKNOWN:
@@ -689,13 +689,13 @@
       prec = p->precision;
     else
       prec = -1;
 
     is_alt = (p->flags & FLAGS_ALT) ? 1 : 0;
 
-    switch (p->type) {
+    switch(p->type) {
     case FORMAT_INT:
       num = p->data.num.as_unsigned;
       if(p->flags & FLAGS_CHAR) {
         /* Character.  */
         if(!(p->flags & FLAGS_LEFT))
           while(--width > 0)
@@ -914,18 +914,31 @@
         if(p->flags & FLAGS_ALT)
           *fptr++ = '#';
 
         *fptr = 0;
 
         if(width >= 0) {
+          if(width >= (long)sizeof(work))
+            width = sizeof(work)-1;
           /* RECURSIVE USAGE */
           len = curl_msnprintf(fptr, left, "%ld", width);
           fptr += len;
           left -= len;
         }
         if(prec >= 0) {
+          /* for each digit in the integer part, we can have one less
+             precision */
+          size_t maxprec = sizeof(work) - 2;
+          double val = p->data.dnum;
+          while(val >= 10.0) {
+            val /= 10;
+            maxprec--;
+          }
+
+          if(prec > (long)maxprec)
+            prec = maxprec-1;
           /* RECURSIVE USAGE */
           len = curl_msnprintf(fptr, left, ".%ld", prec);
           fptr += len;
         }
         if(p->flags & FLAGS_LONG)
           *fptr++ = 'l';
@@ -939,13 +952,15 @@
 
         *fptr = 0; /* and a final zero termination */
 
         /* NOTE NOTE NOTE!! Not all sprintf implementations return number of
            output characters */
         (sprintf)(work, formatbuf, p->data.dnum);
-
+#ifdef CURLDEBUG
+        assert(strlen(work) <= sizeof(work));
+#endif
         for(fptr=work; *fptr; fptr++)
           OUTCHAR(*fptr);
       }
       break;
 
     case FORMAT_INTPTR:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/multi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/multi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/multi.c	2016-10-25 05:23:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/multi.c	2016-12-19 15:27:56.000000000 +0800
@@ -39,12 +39,13 @@
 #include "warnless.h"
 #include "speedcheck.h"
 #include "conncache.h"
 #include "multihandle.h"
 #include "pipeline.h"
 #include "sigpipe.h"
+#include "vtls/vtls.h"
 #include "connect.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
@@ -809,12 +810,17 @@
   int s=0;
   int rc=0;
 
   if(!numsocks)
     return GETSOCK_BLANK;
 
+#ifdef USE_SSL
+  if(CONNECT_FIRSTSOCKET_PROXY_SSL())
+    return Curl_ssl_getsock(conn, sock, numsocks);
+#endif
+
   for(i=0; i<2; i++) {
     if(conn->tempsock[i] != CURL_SOCKET_BAD) {
       sock[s] = conn->tempsock[i];
       rc |= GETSOCK_WRITESOCK(s++);
     }
   }
@@ -1297,13 +1303,13 @@
   bool protocol_connect = FALSE;
   bool dophase_done = FALSE;
   bool done = FALSE;
   CURLMcode rc;
   CURLcode result = CURLE_OK;
   struct SingleRequest *k;
-  long timeout_ms;
+  time_t timeout_ms;
   int control;
 
   if(!GOOD_EASY_HANDLE(data))
     return CURLM_BAD_EASY_HANDLE;
 
   do {
@@ -1545,25 +1551,35 @@
         /* connect back to proxy again */
         result = CURLE_OK;
         multi_done(&data->easy_conn, CURLE_OK, FALSE);
         multistate(data, CURLM_STATE_CONNECT);
       }
       else if(!result) {
-        if(data->easy_conn->tunnel_state[FIRSTSOCKET] == TUNNEL_COMPLETE) {
+        if((data->easy_conn->http_proxy.proxytype != CURLPROXY_HTTPS ||
+           data->easy_conn->bits.proxy_ssl_connected[FIRSTSOCKET]) &&
+           (data->easy_conn->tunnel_state[FIRSTSOCKET] != TUNNEL_CONNECT)) {
           rc = CURLM_CALL_MULTI_PERFORM;
           /* initiate protocol connect phase */
           multistate(data, CURLM_STATE_SENDPROTOCONNECT);
         }
       }
       break;
 #endif
 
     case CURLM_STATE_WAITCONNECT:
       /* awaiting a completion of an asynch TCP connect */
       result = Curl_is_connected(data->easy_conn, FIRSTSOCKET, &connected);
       if(connected && !result) {
+#ifndef CURL_DISABLE_HTTP
+        if((data->easy_conn->http_proxy.proxytype == CURLPROXY_HTTPS &&
+            !data->easy_conn->bits.proxy_ssl_connected[FIRSTSOCKET]) ||
+            (data->easy_conn->tunnel_state[FIRSTSOCKET] == TUNNEL_CONNECT)) {
+          multistate(data, CURLM_STATE_WAITPROXYCONNECT);
+          break;
+        }
+#endif
         rc = CURLM_CALL_MULTI_PERFORM;
         multistate(data, data->easy_conn->bits.tunnel_proxy?
                    CURLM_STATE_WAITPROXYCONNECT:
                    CURLM_STATE_SENDPROTOCONNECT);
       }
       else if(result) {
@@ -2483,13 +2499,13 @@
 
   /* move over the timeout list for this specific handle and remove all
      timeouts that are now passed tense and store the next pending
      timeout in *tv */
   for(e = list->head; e;) {
     struct curl_llist_element *n = e->next;
-    long diff = curlx_tvdiff(*(struct timeval *)e->ptr, now);
+    time_t diff = curlx_tvdiff(*(struct timeval *)e->ptr, now);
     if(diff <= 0)
       /* remove outdated entry */
       Curl_llist_remove(list, e, NULL);
     else
       /* the list is sorted so get out on the first mismatch */
       break;
@@ -2761,13 +2777,13 @@
 
     /* splay the lowest to the bottom */
     multi->timetree = Curl_splay(tv_zero, multi->timetree);
 
     if(Curl_splaycomparekeys(multi->timetree->key, now) > 0) {
       /* some time left before expiration */
-      *timeout_ms = curlx_tvdiff(multi->timetree->key, now);
+      *timeout_ms = (long)curlx_tvdiff(multi->timetree->key, now);
       if(!*timeout_ms)
         /*
          * Since we only provide millisecond resolution on the returned value
          * and the diff might be less than one millisecond here, we don't
          * return zero as that may cause short bursts of busyloops on fast
          * processors while the diff is still present but less than one
@@ -2868,13 +2884,13 @@
   memcpy(timedup, stamp, sizeof(*timedup));
 
   if(Curl_llist_count(timeoutlist)) {
     /* find the correct spot in the list */
     for(e = timeoutlist->head; e; e = e->next) {
       struct timeval *checktime = e->ptr;
-      long diff = curlx_tvdiff(*checktime, *timedup);
+      time_t diff = curlx_tvdiff(*checktime, *timedup);
       if(diff > 0)
         break;
       prev = e;
     }
 
   }
@@ -2895,38 +2911,38 @@
  * given a number of milliseconds from now to use to set the 'act before
  * this'-time for the transfer, to be extracted by curl_multi_timeout()
  *
  * The timeout will be added to a queue of timeouts if it defines a moment in
  * time that is later than the current head of queue.
  */
-void Curl_expire(struct Curl_easy *data, long milli)
+void Curl_expire(struct Curl_easy *data, time_t milli)
 {
   struct Curl_multi *multi = data->multi;
   struct timeval *nowp = &data->state.expiretime;
   int rc;
   struct timeval set;
 
   /* this is only interesting while there is still an associated multi struct
      remaining! */
   if(!multi)
     return;
 
   set = Curl_tvnow();
-  set.tv_sec += milli/1000;
+  set.tv_sec += (long)(milli/1000);
   set.tv_usec += (milli%1000)*1000;
 
   if(set.tv_usec >= 1000000) {
     set.tv_sec++;
     set.tv_usec -= 1000000;
   }
 
   if(nowp->tv_sec || nowp->tv_usec) {
     /* This means that the struct is added as a node in the splay tree.
        Compare if the new time is earlier, and only remove-old/add-new if it
        is. */
-    long diff = curlx_tvdiff(set, *nowp);
+    time_t diff = curlx_tvdiff(set, *nowp);
     if(diff > 0) {
       /* the new expire time was later so just add it to the queue
          and get out */
       multi_addtimeout(data->state.timeoutlist, &set);
       return;
     }
@@ -2958,32 +2974,32 @@
  *
  * Use this function if the code logic risks calling this function many times
  * or if there's no particular conditional wait in the code for this specific
  * time-out period to expire.
  *
  */
-void Curl_expire_latest(struct Curl_easy *data, long milli)
+void Curl_expire_latest(struct Curl_easy *data, time_t milli)
 {
   struct timeval *expire = &data->state.expiretime;
 
   struct timeval set;
 
   set = Curl_tvnow();
-  set.tv_sec += milli / 1000;
+  set.tv_sec += (long)(milli / 1000);
   set.tv_usec += (milli % 1000) * 1000;
 
   if(set.tv_usec >= 1000000) {
     set.tv_sec++;
     set.tv_usec -= 1000000;
   }
 
   if(expire->tv_sec || expire->tv_usec) {
     /* This means that the struct is added as a node in the splay tree.
        Compare if the new time is earlier, and only remove-old/add-new if it
          is. */
-    long diff = curlx_tvdiff(set, *expire);
+    time_t diff = curlx_tvdiff(set, *expire);
     if(diff > 0)
       /* the new expire time was later than the top time, so just skip this */
       return;
   }
 
   /* Just add the timeout like normal */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/multihandle.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/multihandle.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/multihandle.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/multihandle.h	2016-12-19 15:27:56.000000000 +0800
@@ -35,13 +35,15 @@
 typedef enum {
   CURLM_STATE_INIT,         /* 0 - start in this state */
   CURLM_STATE_CONNECT_PEND, /* 1 - no connections, waiting for one */
   CURLM_STATE_CONNECT,      /* 2 - resolve/connect has been sent off */
   CURLM_STATE_WAITRESOLVE,  /* 3 - awaiting the resolve to finalize */
   CURLM_STATE_WAITCONNECT,  /* 4 - awaiting the TCP connect to finalize */
-  CURLM_STATE_WAITPROXYCONNECT, /* 5 - awaiting proxy CONNECT to finalize */
+  CURLM_STATE_WAITPROXYCONNECT, /* 5 - awaiting HTTPS proxy SSL initialization
+                                   to complete and/or proxy CONNECT to
+                                   finalize */
   CURLM_STATE_SENDPROTOCONNECT, /* 6 - initiate protocol connect procedure */
   CURLM_STATE_PROTOCONNECT, /* 7 - completing the protocol-specific connect
                                    phase */
   CURLM_STATE_WAITDO,       /* 8 - wait for our turn to send the request */
   CURLM_STATE_DO,           /* 9 - start send off the request (part 1) */
   CURLM_STATE_DOING,        /* 10 - sending off the request (part 1) */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/multiif.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/multiif.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/multiif.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/multiif.h	2016-12-19 15:27:56.000000000 +0800
@@ -22,15 +22,15 @@
  *
  ***************************************************************************/
 
 /*
  * Prototypes for library-wide functions provided by multi.c
  */
-void Curl_expire(struct Curl_easy *data, long milli);
+void Curl_expire(struct Curl_easy *data, time_t milli);
 void Curl_expire_clear(struct Curl_easy *data);
-void Curl_expire_latest(struct Curl_easy *data, long milli);
+void Curl_expire_latest(struct Curl_easy *data, time_t milli);
 bool Curl_pipeline_wanted(const struct Curl_multi* multi, int bits);
 void Curl_multi_handlePipeBreak(struct Curl_easy *data);
 
 /* Internal version of curl_multi_init() accepts size parameters for the
    socket and connection hashes */
 struct Curl_multi *Curl_multi_handle(int hashsize, int chashsize);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/non-ascii.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/non-ascii.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/non-ascii.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/non-ascii.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -114,13 +114,13 @@
         return CURLE_CONV_FAILED;
       }
     }
     /* call iconv */
     input_ptr = output_ptr = buffer;
     in_bytes = out_bytes = length;
-    rc = iconv(data->outbound_cd, (const char**)&input_ptr, &in_bytes,
+    rc = iconv(data->outbound_cd, (const char **)&input_ptr, &in_bytes,
                &output_ptr, &out_bytes);
     if((rc == ICONV_ERROR) || (in_bytes != 0)) {
       error = ERRNO;
       failf(data,
             "The Curl_convert_to_network iconv call failed with errno %i: %s",
             error, strerror(error));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/nwlib.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/nwlib.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/nwlib.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/nwlib.c	2016-12-19 15:27:56.000000000 +0800
@@ -181,13 +181,14 @@
      * data-creation mutex. We also need to recheck for data after we acquire
      * the lock because WE might be that other thread that was too late to
      * create the data and the first thread in will have created it.
      */
     NXLock(gLibLock);
 
-    if(!(app_data = (libdata_t *) get_app_data(id))) {
+    app_data = (libdata_t *) get_app_data(id);
+    if(!app_data) {
       app_data = malloc(sizeof(libdata_t));
 
       if(app_data) {
         memset(app_data, 0, sizeof(libdata_t));
 
         app_data->tenbytes = malloc(10);
@@ -256,13 +257,14 @@
         if(!thread_data->twentybytes) {
           free(thread_data);
           thread_data = (libthreaddata_t *) NULL;
           err         = ENOMEM;
         }
 
-        if((err = NXKeySetValue(key, thread_data))) {
+        err = NXKeySetValue(key, thread_data);
+        if(err) {
           free(thread_data->twentybytes);
           free(thread_data);
           thread_data = (libthreaddata_t *) NULL;
         }
       }
     }
@@ -300,20 +302,20 @@
 }
 
 #else /* __NOVELL_LIBC__ */
 /* For native CLib-based NLM seems we can do a bit more simple. */
 #include <nwthread.h>
 
-int main (void)
+int main(void)
 {
   /* initialize any globals here... */
 
   /* do this if any global initializing was done
   SynchronizeStart();
   */
-  ExitThread (TSR_THREAD, 0);
+  ExitThread(TSR_THREAD, 0);
   return 0;
 }
 
 #endif /* __NOVELL_LIBC__ */
 
 #else /* NETWARE */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/nwos.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/nwos.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/nwos.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/nwos.c	2016-12-19 15:27:56.000000000 +0800
@@ -23,13 +23,13 @@
 #include "curl_setup.h"
 
 #ifdef NETWARE /* Novell NetWare */
 
 #ifdef __NOVELL_LIBC__
 /* For native LibC-based NLM we need to do nothing. */
-int netware_init (void)
+int netware_init(void)
 {
   return 0;
 }
 
 #else /* __NOVELL_LIBC__ */
 
@@ -42,13 +42,13 @@
 NETDB_DEFINE_CONTEXT
 /* Make the CLIB Inet stuff link */
 #include <netinet/in.h>
 #include <arpa/inet.h>
 NETINET_DEFINE_CONTEXT
 
-int netware_init (void)
+int netware_init(void)
 {
   int rc = 0;
   unsigned int myHandle = GetNLMHandle();
   /* import UnAugmentAsterisk dynamically for NW4.x compatibility */
   void (*pUnAugmentAsterisk)(int) = (void(*)(int))
           ImportSymbol(myHandle, "UnAugmentAsterisk");
@@ -69,19 +69,19 @@
     rc = rc + 2;
   }
   return rc;
 }
 
 /* dummy function to satisfy newer prelude */
-int __init_environment (void)
+int __init_environment(void)
 {
   return 0;
 }
 
 /* dummy function to satisfy newer prelude */
-int __deinit_environment (void)
+int __deinit_environment(void)
 {
   return 0;
 }
 
 #endif /* __NOVELL_LIBC__ */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/pingpong.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/pingpong.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/pingpong.c	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/pingpong.c	2016-12-19 15:27:56.000000000 +0800
@@ -41,18 +41,18 @@
 #include "memdebug.h"
 
 #ifdef USE_PINGPONG
 
 /* Returns timeout in ms. 0 or negative number means the timeout has already
    triggered */
-long Curl_pp_state_timeout(struct pingpong *pp)
+time_t Curl_pp_state_timeout(struct pingpong *pp)
 {
   struct connectdata *conn = pp->conn;
   struct Curl_easy *data=conn->data;
-  long timeout_ms; /* in milliseconds */
-  long timeout2_ms; /* in milliseconds */
+  time_t timeout_ms; /* in milliseconds */
+  time_t timeout2_ms; /* in milliseconds */
   long response_time= (data->set.server_response_timeout)?
     data->set.server_response_timeout: pp->response_time;
 
   /* if CURLOPT_SERVER_RESPONSE_TIMEOUT is set, use that to determine
      remaining time, or use pp->response because SERVER_RESPONSE_TIMEOUT is
      supposed to govern the response for any given server response, not for
@@ -80,14 +80,14 @@
  */
 CURLcode Curl_pp_statemach(struct pingpong *pp, bool block)
 {
   struct connectdata *conn = pp->conn;
   curl_socket_t sock = conn->sock[FIRSTSOCKET];
   int rc;
-  long interval_ms;
-  long timeout_ms = Curl_pp_state_timeout(pp);
+  time_t interval_ms;
+  time_t timeout_ms = Curl_pp_state_timeout(pp);
   struct Curl_easy *data=conn->data;
   CURLcode result = CURLE_OK;
 
   if(timeout_ms <=0) {
     failf(data, "server response timeout");
     return CURLE_OPERATION_TIMEDOUT; /* already too little time */
@@ -98,13 +98,15 @@
     if(timeout_ms < interval_ms)
       interval_ms = timeout_ms;
   }
   else
     interval_ms = 0; /* immediate */
 
-  if(Curl_pp_moredata(pp))
+  if(Curl_ssl_data_pending(conn, FIRSTSOCKET))
+    rc = 1;
+  else if(Curl_pp_moredata(pp))
     /* We are receiving and there is data in the cache so just read it */
     rc = 1;
   else if(!pp->sendleft && Curl_ssl_data_pending(conn, FIRSTSOCKET))
     /* We are receiving and there is data ready in the SSL library */
     rc = 1;
   else
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/pingpong.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/pingpong.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/pingpong.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/pingpong.h	2016-12-19 15:27:56.000000000 +0800
@@ -85,13 +85,13 @@
 
 /* initialize stuff to prepare for reading a fresh new response */
 void Curl_pp_init(struct pingpong *pp);
 
 /* Returns timeout in ms. 0 or negative number means the timeout has already
    triggered */
-long Curl_pp_state_timeout(struct pingpong *pp);
+time_t Curl_pp_state_timeout(struct pingpong *pp);
 
 
 /***********************************************************************
  *
  * Curl_pp_sendf()
  *
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/pop3.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/pop3.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/pop3.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/pop3.c	2016-12-19 15:27:56.000000000 +0800
@@ -101,13 +101,13 @@
 static CURLcode pop3_parse_url_options(struct connectdata *conn);
 static CURLcode pop3_parse_url_path(struct connectdata *conn);
 static CURLcode pop3_parse_custom_request(struct connectdata *conn);
 static CURLcode pop3_perform_auth(struct connectdata *conn, const char *mech,
                                   const char *initresp);
 static CURLcode pop3_continue_auth(struct connectdata *conn, const char *resp);
-static void pop3_get_message(char *buffer, char** outptr);
+static void pop3_get_message(char *buffer, char **outptr);
 
 /*
  * POP3 protocol handler.
  */
 
 const struct Curl_handler Curl_handler_pop3 = {
@@ -287,16 +287,16 @@
 /***********************************************************************
  *
  * pop3_get_message()
  *
  * Gets the authentication message from the response buffer.
  */
-static void pop3_get_message(char *buffer, char** outptr)
+static void pop3_get_message(char *buffer, char **outptr)
 {
   size_t len = 0;
-  char* message = NULL;
+  char *message = NULL;
 
   /* Find the start of the message */
   for(message = buffer + 2; *message == ' ' || *message == '\t'; message++)
     ;
 
   /* Find the end of the message */
@@ -1569,13 +1569,13 @@
         pop3c->strip--;
       }
 
       if(prev) {
         /* If the partial match was the CRLF and dot then only write the CRLF
            as the server would have inserted the dot */
-        result = Curl_client_write(conn, CLIENTWRITE_BODY, (char*)POP3_EOB,
+        result = Curl_client_write(conn, CLIENTWRITE_BODY, (char *)POP3_EOB,
                                    strip_dot ? prev - 1 : prev);
 
         if(result)
           return result;
 
         last = i;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/progress.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/progress.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/progress.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/progress.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -246,30 +246,32 @@
 long Curl_pgrsLimitWaitTime(curl_off_t cursize,
                             curl_off_t startsize,
                             curl_off_t limit,
                             struct timeval start,
                             struct timeval now)
 {
-    curl_off_t size = cursize - startsize;
-    long minimum, actual;
-
-    /* we don't have a starting point yet -- return 0 so it gets (re)set */
-    if(start.tv_sec == 0 && start.tv_usec == 0)
-        return 0;
-
-    /* not enough data yet */
-    if(size < limit)
-      return -1;
-
-    minimum = (long) (CURL_OFF_T_C(1000) * size / limit);
-    actual = Curl_tvdiff(now, start);
-
-    if(actual < minimum)
-      return minimum - actual;
-    else
-      return 0;
+  curl_off_t size = cursize - startsize;
+  time_t minimum;
+  time_t actual;
+
+  /* we don't have a starting point yet -- return 0 so it gets (re)set */
+  if(start.tv_sec == 0 && start.tv_usec == 0)
+    return 0;
+
+  /* not enough data yet */
+  if(size < limit)
+    return -1;
+
+  minimum = (time_t) (CURL_OFF_T_C(1000) * size / limit);
+  actual = Curl_tvdiff(now, start);
+
+  if(actual < minimum)
+    /* this is a conversion on some systems (64bit time_t => 32bit long) */
+    return (long)(minimum - actual);
+  else
+    return 0;
 }
 
 void Curl_pgrsSetDownloadCounter(struct Curl_easy *data, curl_off_t size)
 {
   struct timeval now = Curl_tvnow();
 
@@ -356,15 +358,13 @@
   curl_off_t total_estimate;
   bool shownow=FALSE;
 
   now = Curl_tvnow(); /* what time is it */
 
   /* The time spent so far (from the start) */
-  data->progress.timespent =
-    (double)(now.tv_sec - data->progress.start.tv_sec) +
-    (double)(now.tv_usec - data->progress.start.tv_usec)/1000000.0;
+  data->progress.timespent = curlx_tvdiff_secs(now, data->progress.start);
   timespent = (curl_off_t)data->progress.timespent;
 
   /* The average download speed this far */
   data->progress.dlspeed = (curl_off_t)
     ((double)data->progress.downloaded/
      (data->progress.timespent>0?data->progress.timespent:1));
@@ -372,13 +372,13 @@
   /* The average upload speed this far */
   data->progress.ulspeed = (curl_off_t)
     ((double)data->progress.uploaded/
      (data->progress.timespent>0?data->progress.timespent:1));
 
   /* Calculations done at most once a second, unless end is reached */
-  if(data->progress.lastshow != (long)now.tv_sec) {
+  if(data->progress.lastshow != now.tv_sec) {
     shownow = TRUE;
 
     data->progress.lastshow = now.tv_sec;
 
     /* Let's do the "current speed" thing, which should use the fastest
        of the dl/ul speeds. Store the faster speed at entry 'nowindex'. */
@@ -399,13 +399,13 @@
        after two seconds we've filled in three entries etc. */
     countindex = ((data->progress.speeder_c>=CURR_TIME)?
                   CURR_TIME:data->progress.speeder_c) - 1;
 
     /* first of all, we don't do this if there's no counted seconds yet */
     if(countindex) {
-      long span_ms;
+      time_t span_ms;
 
       /* Get the index position to compare with the 'nowindex' position.
          Get the oldest entry possible. While we have less than CURR_TIME
          entries, the first entry will remain the oldest. */
       checkindex = (data->progress.speeder_c>=CURR_TIME)?
         data->progress.speeder_c%CURR_TIME:0;
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib: rand.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib: rand.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/rtsp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/rtsp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/rtsp.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/rtsp.c	2016-12-19 15:27:56.000000000 +0800
@@ -33,12 +33,13 @@
 #include "url.h"
 #include "progress.h"
 #include "rtsp.h"
 #include "strcase.h"
 #include "select.h"
 #include "connect.h"
+#include "strdup.h"
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
 /*
@@ -136,13 +137,13 @@
 
 /*
  * The server may send us RTP data at any point, and RTSPREQ_RECEIVE does not
  * want to block the application forever while receiving a stream. Therefore,
  * we cannot assume that an RTSP socket is dead just because it is readable.
  *
- * Instead, if it is readable, run Curl_getconnectinfo() to peek at the socket
+ * Instead, if it is readable, run Curl_connalive() to peek at the socket
  * and distinguish between closed and data.
  */
 bool Curl_rtsp_connisdead(struct connectdata *check)
 {
   int sval;
   bool ret_val = TRUE;
@@ -153,18 +154,15 @@
     ret_val = FALSE;
   }
   else if(sval & CURL_CSELECT_ERR) {
     /* socket is in an error state */
     ret_val = TRUE;
   }
-  else if((sval & CURL_CSELECT_IN) && check->data) {
-    /* readable with no error. could be closed or could be alive but we can
-       only check if we have a proper Curl_easy for the connection */
-    curl_socket_t connectinfo = Curl_getconnectinfo(check->data, &check);
-    if(connectinfo != CURL_SOCKET_BAD)
-      ret_val = FALSE;
+  else if(sval & CURL_CSELECT_IN) {
+    /* readable with no error. could still be closed */
+    ret_val = !Curl_connalive(check);
   }
 
   return ret_val;
 }
 
 static CURLcode rtsp_connect(struct connectdata *conn, bool *done)
@@ -485,13 +483,13 @@
                             p_userpwd ? p_userpwd : "");
 
   /*
    * Free userpwd now --- cannot reuse this for Negotiate and possibly NTLM
    * with basic and digest, it will be freed anyway by the next request
    */
-  Curl_safefree (conn->allocptr.userpwd);
+  Curl_safefree(conn->allocptr.userpwd);
   conn->allocptr.userpwd = NULL;
 
   if(result)
     return result;
 
   if((rtspreq == RTSPREQ_SETUP) || (rtspreq == RTSPREQ_DESCRIBE)) {
@@ -611,15 +609,15 @@
   ssize_t rtp_dataleft; /* how much data left to parse in this round */
   char *scratch;
   CURLcode result;
 
   if(rtspc->rtp_buf) {
     /* There was some leftover data the last time. Merge buffers */
-    char *newptr = realloc(rtspc->rtp_buf, rtspc->rtp_bufsize + *nread);
+    char *newptr = Curl_saferealloc(rtspc->rtp_buf,
+                                    rtspc->rtp_bufsize + *nread);
     if(!newptr) {
-      Curl_safefree(rtspc->rtp_buf);
       rtspc->rtp_buf = NULL;
       rtspc->rtp_bufsize = 0;
       return CURLE_OUT_OF_MEMORY;
     }
     rtspc->rtp_buf = newptr;
     memcpy(rtspc->rtp_buf + rtspc->rtp_bufsize, k->str, *nread);
@@ -733,26 +731,26 @@
 {
   struct Curl_easy *data = conn->data;
   size_t wrote;
   curl_write_callback writeit;
 
   if(len == 0) {
-    failf (data, "Cannot write a 0 size RTP packet.");
+    failf(data, "Cannot write a 0 size RTP packet.");
     return CURLE_WRITE_ERROR;
   }
 
   writeit = data->set.fwrite_rtp?data->set.fwrite_rtp:data->set.fwrite_func;
   wrote = writeit(ptr, 1, len, data->set.rtp_out);
 
   if(CURL_WRITEFUNC_PAUSE == wrote) {
-    failf (data, "Cannot pause RTP");
+    failf(data, "Cannot pause RTP");
     return CURLE_WRITE_ERROR;
   }
 
   if(wrote != len) {
-    failf (data, "Failed writing RTP data");
+    failf(data, "Failed writing RTP data");
     return CURLE_WRITE_ERROR;
   }
 
   return CURLE_OK;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/security.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/security.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/security.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/security.c	2016-12-19 15:27:56.000000000 +0800
@@ -59,13 +59,13 @@
 #include "curl_memory.h"
 #include "curl_sec.h"
 #include "ftp.h"
 #include "sendf.h"
 #include "strcase.h"
 #include "warnless.h"
-
+#include "strdup.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 static const struct {
   enum protection_level level;
   const char *name;
@@ -85,13 +85,14 @@
       return level_names[i].level;
   return PROT_NONE;
 }
 
 /* Convert a protocol |level| to its char representation.
    We take an int to catch programming mistakes. */
-static char level_to_char(int level) {
+static char level_to_char(int level)
+{
   switch(level) {
   case PROT_CLEAR:
     return 'C';
   case PROT_SAFE:
     return 'S';
   case PROT_CONFIDENTIAL:
@@ -199,13 +200,13 @@
   if(result)
     return result;
 
   if(len) {
     /* only realloc if there was a length */
     len = ntohl(len);
-    tmp = realloc(buf->data, len);
+    tmp = Curl_saferealloc(buf->data, len);
   }
   if(tmp == NULL)
     return CURLE_OUT_OF_MEMORY;
 
   buf->data = tmp;
   result = socket_read(fd, buf->data, len);
@@ -219,13 +220,13 @@
 
 static size_t
 buffer_read(struct krb5buffer *buf, void *data, size_t len)
 {
   if(buf->size - buf->index < len)
     len = buf->size - buf->index;
-  memcpy(data, (char*)buf->data + buf->index, len);
+  memcpy(data, (char *)buf->data + buf->index, len);
   buf->index += len;
   return len;
 }
 
 /* Matches Curl_recv signature */
 static ssize_t sec_recv(struct connectdata *conn, int sockindex,
@@ -288,13 +289,13 @@
     if(!strncmp(from, "PASS ", 5) || !strncmp(from, "ACCT ", 5))
       prot_level = PROT_PRIVATE;
     else
       prot_level = conn->command_prot;
   }
   bytes = conn->mech->encode(conn->app_data, from, length, prot_level,
-                             (void**)&buffer);
+                             (void **)&buffer);
   if(!buffer || bytes <= 0)
     return; /* error */
 
   if(iscmd) {
     error = Curl_base64_encode(conn->data, buffer, curlx_sitouz(bytes),
                                &cmd_buffer, &cmd_size);
@@ -408,13 +409,13 @@
 }
 
 /* FIXME: The error code returned here is never checked. */
 static int sec_set_protection_level(struct connectdata *conn)
 {
   int code;
-  char* pbsz;
+  char *pbsz;
   static unsigned int buffer_size = 1 << 20; /* 1048576 */
   enum protection_level level = conn->request_data_prot;
 
   DEBUGASSERT(level > PROT_NONE && level < PROT_LAST);
 
   if(!conn->sec_complete) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/select.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/select.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/select.c	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/select.c	2016-12-19 15:27:56.000000000 +0800
@@ -142,13 +142,13 @@
  * CURL_CSELECT_OUT - write socket is writable
  * CURL_CSELECT_ERR - an error condition occurred
  */
 int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
                       curl_socket_t readfd1,
                       curl_socket_t writefd, /* socket to write to */
-                      long timeout_ms)       /* milliseconds to wait */
+                      time_t timeout_ms)     /* milliseconds to wait */
 {
 #ifdef HAVE_POLL_FINE
   struct pollfd pfd[3];
   int num;
 #else
   struct timeval pending_tv;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/select.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/select.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/select.h	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/select.h	2016-12-19 15:27:56.000000000 +0800
@@ -70,13 +70,13 @@
    are exposed to users, but this *IN2 bit is only ever used internally and
    therefore defined here */
 #define CURL_CSELECT_IN2 (CURL_CSELECT_ERR << 1)
 
 int Curl_socket_check(curl_socket_t readfd, curl_socket_t readfd2,
                       curl_socket_t writefd,
-                      long timeout_ms);
+                      time_t timeout_ms);
 
 #define SOCKET_READABLE(x,z) \
   Curl_socket_check(x, CURL_SOCKET_BAD, CURL_SOCKET_BAD, z)
 #define SOCKET_WRITABLE(x,z) \
   Curl_socket_check(CURL_SOCKET_BAD, CURL_SOCKET_BAD, x, z)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/sendf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/sendf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/sendf.c	2016-10-25 19:01:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/sendf.c	2016-12-19 16:20:14.000000000 +0800
@@ -119,12 +119,19 @@
   }
   return size;
 }
 #endif /* CURL_DO_LINEEND_CONV */
 
 #ifdef USE_RECV_BEFORE_SEND_WORKAROUND
+bool Curl_recv_has_postponed_data(struct connectdata *conn, int sockindex)
+{
+  struct postponed_data * const psnd = &(conn->postponed[sockindex]);
+  return psnd->buffer && psnd->allocated_size &&
+         psnd->recv_size > psnd->recv_processed;
+}
+
 static void pre_receive_plain(struct connectdata *conn, int num)
 {
   const curl_socket_t sockfd = conn->sock[num];
   struct postponed_data * const psnd = &(conn->postponed[num]);
   size_t bytestorecv = psnd->allocated_size - psnd->recv_size;
   /* WinSock will destroy unread received data if send() is
@@ -198,12 +205,18 @@
 #endif /* DEBUGBUILD */
   }
   return (ssize_t)copysize;
 }
 #else  /* ! USE_RECV_BEFORE_SEND_WORKAROUND */
 /* Use "do-nothing" macros instead of functions when workaround not used */
+bool Curl_recv_has_postponed_data(struct connectdata *conn, int sockindex)
+{
+  (void)conn;
+  (void)sockindex;
+  return false;
+}
 #define pre_receive_plain(c,n) do {} WHILE_FALSE
 #define get_pre_recved(c,n,b,l) 0
 #endif /* ! USE_RECV_BEFORE_SEND_WORKAROUND */
 
 /* Curl_infof() is for info message along the way */
 
@@ -485,13 +498,13 @@
 /* Curl_client_chop_write() writes chunks of data not larger than
  * CURL_MAX_WRITE_SIZE via client write callback(s) and
  * takes care of pause requests from the callbacks.
  */
 CURLcode Curl_client_chop_write(struct connectdata *conn,
                                 int type,
-                                char * ptr,
+                                char *ptr,
                                 size_t len)
 {
   struct Curl_easy *data = conn->data;
   curl_write_callback writeheader = NULL;
   curl_write_callback writebody = NULL;
 
@@ -568,13 +581,13 @@
         /* here we pass in the HEADER bit only since if this was body as well
            then it was passed already and clearly that didn't trigger the
            pause, so this is saved for later with the HEADER bit only */
         return pausewrite(data, CLIENTWRITE_HEADER, ptr, len);
 
       if(wrote != chunklen) {
-        failf (data, "Failed writing header");
+        failf(data, "Failed writing header");
         return CURLE_WRITE_ERROR;
       }
     }
 
     ptr += chunklen;
     len -= chunklen;
@@ -689,13 +702,13 @@
 
       *n = (ssize_t)bytestocopy;
       return CURLE_OK;
     }
     /* If we come here, it means that there is no data to read from the buffer,
      * so we read from the socket */
-    bytesfromsocket = CURLMIN(sizerequested, BUFSIZE * sizeof (char));
+    bytesfromsocket = CURLMIN(sizerequested, BUFSIZE * sizeof(char));
     buffertofill = conn->master_buffer;
   }
   else {
     bytesfromsocket = CURLMIN((long)sizerequested,
                               conn->data->set.buffer_size ?
                               conn->data->set.buffer_size : BUFSIZE);
@@ -793,13 +806,13 @@
 {
   int rc;
   if(data->set.printhost && conn && conn->host.dispname) {
     char buffer[160];
     const char *t=NULL;
     const char *w="Data";
-    switch (type) {
+    switch(type) {
     case CURLINFO_HEADER_IN:
       w = "Header";
       /* FALLTHROUGH */
     case CURLINFO_DATA_IN:
       t = "from";
       break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/sendf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/sendf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/sendf.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/sendf.h	2016-12-19 16:15:11.000000000 +0800
@@ -53,12 +53,14 @@
 
 CURLcode Curl_client_chop_write(struct connectdata *conn, int type, char *ptr,
                                 size_t len) WARN_UNUSED_RESULT;
 CURLcode Curl_client_write(struct connectdata *conn, int type, char *ptr,
                            size_t len) WARN_UNUSED_RESULT;
 
+bool Curl_recv_has_postponed_data(struct connectdata *conn, int sockindex);
+
 /* internal read-function, does plain socket only */
 CURLcode Curl_read_plain(curl_socket_t sockfd,
                          char *buf,
                          size_t bytesfromsocket,
                          ssize_t *n);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/setup-os400.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/setup-os400.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/setup-os400.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/setup-os400.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -38,24 +38,24 @@
 #include <sys/socket.h>
 #include <netdb.h>
 #include <gskssl.h>
 #include <qsoasync.h>
 #include <gssapi.h>
 
-extern int      Curl_getaddrinfo_a(const char * nodename,
-                                   const char * servname,
-                                   const struct addrinfo * hints,
-                                   struct addrinfo * * res);
+extern int Curl_getaddrinfo_a(const char *nodename,
+                              const char *servname,
+                              const struct addrinfo *hints,
+                              struct addrinfo **res);
 #define getaddrinfo             Curl_getaddrinfo_a
 
 
-extern int      Curl_getnameinfo_a(const struct sockaddr * sa,
-                                   curl_socklen_t salen,
-                                   char * nodename, curl_socklen_t nodenamelen,
-                                   char * servname, curl_socklen_t servnamelen,
-                                   int flags);
+extern int Curl_getnameinfo_a(const struct sockaddr *sa,
+                              curl_socklen_t salen,
+                              char *nodename, curl_socklen_t nodenamelen,
+                              char *servname, curl_socklen_t servnamelen,
+                              int flags);
 #define getnameinfo             Curl_getnameinfo_a
 
 
 /* GSKit wrappers. */
 
 extern int      Curl_gsk_environment_open(gsk_handle * my_env_handle);
@@ -76,13 +76,13 @@
 
 extern int      Curl_gsk_secure_soc_init(gsk_handle my_session_handle);
 #define gsk_secure_soc_init     Curl_gsk_secure_soc_init
 
 extern int      Curl_gsk_attribute_set_buffer_a(gsk_handle my_gsk_handle,
                                                 GSK_BUF_ID bufID,
-                                                const char * buffer,
+                                                const char *buffer,
                                                 int bufSize);
 #define gsk_attribute_set_buffer        Curl_gsk_attribute_set_buffer_a
 
 extern int      Curl_gsk_attribute_set_enum(gsk_handle my_gsk_handle,
                                             GSK_ENUM_ID enumID,
                                             GSK_ENUM_VALUE enumValue);
@@ -92,49 +92,49 @@
                                                      GSK_NUM_ID numID,
                                                      int numValue);
 #define gsk_attribute_set_numeric_value Curl_gsk_attribute_set_numeric_value
 
 extern int      Curl_gsk_attribute_set_callback(gsk_handle my_gsk_handle,
                                                 GSK_CALLBACK_ID callBackID,
-                                                void * callBackAreaPtr);
+                                                void *callBackAreaPtr);
 #define gsk_attribute_set_callback      Curl_gsk_attribute_set_callback
 
 extern int      Curl_gsk_attribute_get_buffer_a(gsk_handle my_gsk_handle,
                                                 GSK_BUF_ID bufID,
-                                                const char * * buffer,
-                                                int * bufSize);
+                                                const char **buffer,
+                                                int *bufSize);
 #define gsk_attribute_get_buffer        Curl_gsk_attribute_get_buffer_a
 
 extern int      Curl_gsk_attribute_get_enum(gsk_handle my_gsk_handle,
                                             GSK_ENUM_ID enumID,
-                                            GSK_ENUM_VALUE * enumValue);
+                                            GSK_ENUM_VALUE *enumValue);
 #define gsk_attribute_get_enum  Curl_gsk_attribute_get_enum
 
 extern int      Curl_gsk_attribute_get_numeric_value(gsk_handle my_gsk_handle,
                                                      GSK_NUM_ID numID,
-                                                     int * numValue);
+                                                     int *numValue);
 #define gsk_attribute_get_numeric_value Curl_gsk_attribute_get_numeric_value
 
 extern int      Curl_gsk_attribute_get_cert_info(gsk_handle my_gsk_handle,
                                  GSK_CERT_ID certID,
-                                 const gsk_cert_data_elem * * certDataElem,
-                                 int * certDataElementCount);
+                                 const gsk_cert_data_elem **certDataElem,
+                                 int *certDataElementCount);
 #define gsk_attribute_get_cert_info     Curl_gsk_attribute_get_cert_info
 
 extern int      Curl_gsk_secure_soc_misc(gsk_handle my_session_handle,
                                          GSK_MISC_ID miscID);
 #define gsk_secure_soc_misc     Curl_gsk_secure_soc_misc
 
 extern int      Curl_gsk_secure_soc_read(gsk_handle my_session_handle,
-                                         char * readBuffer,
-                                         int readBufSize, int * amtRead);
+                                         char *readBuffer,
+                                         int readBufSize, int *amtRead);
 #define gsk_secure_soc_read     Curl_gsk_secure_soc_read
 
 extern int      Curl_gsk_secure_soc_write(gsk_handle my_session_handle,
-                                          char * writeBuffer,
-                                          int writeBufSize, int * amtWritten);
+                                          char *writeBuffer,
+                                          int writeBufSize, int *amtWritten);
 #define gsk_secure_soc_write    Curl_gsk_secure_soc_write
 
 extern const char *     Curl_gsk_strerror_a(int gsk_return_value);
 #define gsk_strerror    Curl_gsk_strerror_a
 
 extern int      Curl_gsk_secure_soc_startInit(gsk_handle my_session_handle,
@@ -199,16 +199,16 @@
 
 /* Some socket functions must be wrapped to process textual addresses
    like AF_UNIX. */
 
 extern int Curl_os400_connect(int sd, struct sockaddr * destaddr, int addrlen);
 extern int Curl_os400_bind(int sd, struct sockaddr * localaddr, int addrlen);
-extern int Curl_os400_sendto(int sd, char * buffer, int buflen, int flags,
-            struct sockaddr * dstaddr, int addrlen);
-extern int Curl_os400_recvfrom(int sd, char * buffer, int buflen, int flags,
-                                struct sockaddr * fromaddr, int * addrlen);
+extern int Curl_os400_sendto(int sd, char *buffer, int buflen, int flags,
+                             struct sockaddr * dstaddr, int addrlen);
+extern int Curl_os400_recvfrom(int sd, char *buffer, int buflen, int flags,
+                               struct sockaddr *fromaddr, int *addrlen);
 
 #define connect                 Curl_os400_connect
 #define bind                    Curl_os400_bind
 #define sendto                  Curl_os400_sendto
 #define recvfrom                Curl_os400_recvfrom
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/setup-vms.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/setup-vms.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/setup-vms.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/setup-vms.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -38,13 +38,13 @@
 #ifdef __DECC
 #   if __INITIAL_POINTER_SIZE != 64
 #       define getpwuid decc_getpwuid
 #   endif
 #endif
 #include <stdlib.h>
-    char * decc$getenv(const char * __name);
+char *decc$getenv(const char *__name);
 #include <pwd.h>
 
 #include <string.h>
 #include <unixlib.h>
 
 #undef getenv
@@ -76,29 +76,30 @@
     struct passwd * decc_getpwuid(uid_t uid);
 
 #ifdef __DECC
 #   if __INITIAL_POINTER_SIZE == 32
 /* Translate the path, but only if the path is a VMS file specification */
 /* The translation is usually only needed for older versions of VMS */
-static char * vms_translate_path(const char * path) {
-char * unix_path;
-char * test_str;
-
-    /* See if the result is in VMS format, if not, we are done */
-    /* Assume that this is a PATH, not just some data */
-    test_str = strpbrk(path, ":[<^");
-    if(test_str == NULL) {
-      return (char *)path;
-    }
-
-    unix_path = decc$translate_vms(path);
-
-    if((int)unix_path <= 0) {
-      /* We can not translate it, so return the original string */
-      return (char *)path;
-    }
+static char *vms_translate_path(const char *path)
+{
+  char *unix_path;
+  char *test_str;
+
+  /* See if the result is in VMS format, if not, we are done */
+  /* Assume that this is a PATH, not just some data */
+  test_str = strpbrk(path, ":[<^");
+  if(test_str == NULL) {
+    return (char *)path;
+  }
+
+  unix_path = decc$translate_vms(path);
+
+  if((int)unix_path <= 0) {
+    /* We can not translate it, so return the original string */
+    return (char *)path;
+  }
 }
 #   else
     /* VMS translate path is actually not needed on the current 64 bit */
     /* VMS platforms, so instead of figuring out the pointer settings */
     /* Change it to a noop */
 #   define vms_translate_path(__path) __path
@@ -108,80 +109,80 @@
 #ifdef __DECC
 #   if __INITIAL_POINTER_SIZE
 #       pragma __pointer_size __restore
 #   endif
 #endif
 
-static char * vms_getenv(const char * envvar) {
+static char *vms_getenv(const char *envvar)
+{
+  char *result;
+  char *vms_path;
+
+  /* first use the DECC getenv() function */
+  result = decc$getenv(envvar);
+  if(result == NULL) {
+    return result;
+  }
 
-char * result;
-char * vms_path;
+  vms_path = result;
+  result = vms_translate_path(vms_path);
 
-    /* first use the DECC getenv() function */
-    result = decc$getenv(envvar);
-    if(result == NULL) {
-      return result;
-    }
-
-    vms_path = result;
-    result = vms_translate_path(vms_path);
-
-    /* note that if you backport this to use VAX C RTL, that the VAX C RTL */
-    /* may do a malloc(2048) for each call to getenv(), so you will need   */
-    /* to add a free(vms_path) */
-    /* Do not do a free() for DEC C RTL builds, which should be used for */
-    /* VMS 5.5-2 and later, even if using GCC */
+  /* note that if you backport this to use VAX C RTL, that the VAX C RTL */
+  /* may do a malloc(2048) for each call to getenv(), so you will need   */
+  /* to add a free(vms_path) */
+  /* Do not do a free() for DEC C RTL builds, which should be used for */
+  /* VMS 5.5-2 and later, even if using GCC */
 
-    return result;
+  return result;
 }
 
 
 static struct passwd vms_passwd_cache;
 
-static struct passwd * vms_getpwuid(uid_t uid) {
-
-struct passwd * my_passwd;
+static struct passwd * vms_getpwuid(uid_t uid)
+{
+  struct passwd * my_passwd;
 
 /* Hack needed to support 64 bit builds, decc_getpwnam is 32 bit only */
 #ifdef __DECC
 #   if __INITIAL_POINTER_SIZE
-__char_ptr32 unix_path;
+  __char_ptr32 unix_path;
 #   else
-char * unix_path;
+  char *unix_path;
 #   endif
 #else
-char * unix_path;
+  char *unix_path;
 #endif
 
-    my_passwd = decc_getpwuid(uid);
-    if(my_passwd == NULL) {
-      return my_passwd;
-    }
-
-    unix_path = vms_translate_path(my_passwd->pw_dir);
-
-    if((long)unix_path <= 0) {
-      /* We can not translate it, so return the original string */
-      return my_passwd;
-    }
-
-    /* If no changes needed just return it */
-    if(unix_path == my_passwd->pw_dir) {
-      return my_passwd;
-    }
-
-    /* Need to copy the structure returned */
-    /* Since curl is only using pw_dir, no need to fix up *
-    /* the pw_shell when running under Bash */
-    vms_passwd_cache.pw_name = my_passwd->pw_name;
-    vms_passwd_cache.pw_uid = my_passwd->pw_uid;
-    vms_passwd_cache.pw_gid = my_passwd->pw_uid;
-    vms_passwd_cache.pw_dir = unix_path;
-    vms_passwd_cache.pw_shell = my_passwd->pw_shell;
+  my_passwd = decc_getpwuid(uid);
+  if(my_passwd == NULL) {
+    return my_passwd;
+  }
+
+  unix_path = vms_translate_path(my_passwd->pw_dir);
+
+  if((long)unix_path <= 0) {
+    /* We can not translate it, so return the original string */
+    return my_passwd;
+  }
+
+  /* If no changes needed just return it */
+  if(unix_path == my_passwd->pw_dir) {
+    return my_passwd;
+  }
+
+  /* Need to copy the structure returned */
+  /* Since curl is only using pw_dir, no need to fix up */
+  /* the pw_shell when running under Bash */
+  vms_passwd_cache.pw_name = my_passwd->pw_name;
+  vms_passwd_cache.pw_uid = my_passwd->pw_uid;
+  vms_passwd_cache.pw_gid = my_passwd->pw_uid;
+  vms_passwd_cache.pw_dir = unix_path;
+  vms_passwd_cache.pw_shell = my_passwd->pw_shell;
 
-    return &vms_passwd_cache;
+  return &vms_passwd_cache;
 }
 
 #ifdef __DECC
 #pragma message restore
 #endif
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/share.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/share.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/share.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/share.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -51,11 +51,11 @@
 
   struct curl_ssl_session *sslsession;
   size_t max_ssl_sessions;
   long sessionage;
 };
 
-CURLSHcode Curl_share_lock (struct Curl_easy *, curl_lock_data,
-                            curl_lock_access);
-CURLSHcode Curl_share_unlock (struct Curl_easy *, curl_lock_data);
+CURLSHcode Curl_share_lock(struct Curl_easy *, curl_lock_data,
+                           curl_lock_access);
+CURLSHcode Curl_share_unlock(struct Curl_easy *, curl_lock_data);
 
 #endif /* HEADER_CURL_SHARE_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/smb.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/smb.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/smb.c	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/smb.c	2016-12-19 15:27:56.000000000 +0800
@@ -3,13 +3,13 @@
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
  * Copyright (C) 2014, Bill Nagel <wnagel@tycoint.com>, Exacq Technologies
- * Copyright (C) 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -305,25 +305,25 @@
   smbc->got += bytes_read;
 
   /* Check for a 32-bit nbt header */
   if(smbc->got < sizeof(unsigned int))
     return CURLE_OK;
 
-  nbt_size = Curl_read16_be((unsigned char *)(buf + sizeof(unsigned short))) +
-             sizeof(unsigned int);
+  nbt_size = Curl_read16_be((const unsigned char *)(buf +
+             sizeof(unsigned short))) + sizeof(unsigned int);
   if(smbc->got < nbt_size)
     return CURLE_OK;
 
   msg_size = sizeof(struct smb_header);
   if(nbt_size >= msg_size + 1) {
     /* Add the word count */
     msg_size += 1 + ((unsigned char) buf[msg_size]) * sizeof(unsigned short);
     if(nbt_size >= msg_size + sizeof(unsigned short)) {
       /* Add the byte count */
       msg_size += sizeof(unsigned short) +
-                  Curl_read16_le((unsigned char *)&buf[msg_size]);
+                  Curl_read16_le((const unsigned char *)&buf[msg_size]);
       if(nbt_size < msg_size)
         return CURLE_READ_ERROR;
     }
   }
 
   *msg = buf;
@@ -778,15 +778,15 @@
   case SMB_DOWNLOAD:
     if(h->status || smbc->got < sizeof(struct smb_header) + 14) {
       req->result = CURLE_RECV_ERROR;
       next_state = SMB_CLOSE;
       break;
     }
-    len = Curl_read16_le(((unsigned char *) msg) +
+    len = Curl_read16_le(((const unsigned char *) msg) +
                          sizeof(struct smb_header) + 11);
-    off = Curl_read16_le(((unsigned char *) msg) +
+    off = Curl_read16_le(((const unsigned char *) msg) +
                          sizeof(struct smb_header) + 13);
     if(len > 0) {
       if(off + sizeof(unsigned int) + len > smbc->got) {
         failf(conn->data, "Invalid input packet");
         result = CURLE_RECV_ERROR;
       }
@@ -809,13 +809,13 @@
   case SMB_UPLOAD:
     if(h->status || smbc->got < sizeof(struct smb_header) + 6) {
       req->result = CURLE_UPLOAD_FAILED;
       next_state = SMB_CLOSE;
       break;
     }
-    len = Curl_read16_le(((unsigned char *) msg) +
+    len = Curl_read16_le(((const unsigned char *) msg) +
                          sizeof(struct smb_header) + 5);
     conn->data->req.bytecount += len;
     conn->data->req.offset += len;
     Curl_pgrsSetUploadCounter(conn->data, conn->data->req.bytecount);
     if(conn->data->req.bytecount >= conn->data->req.size)
       next_state = SMB_CLOSE;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/smtp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/smtp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/smtp.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/smtp.c	2016-12-19 15:27:56.000000000 +0800
@@ -100,13 +100,13 @@
 static CURLcode smtp_parse_url_options(struct connectdata *conn);
 static CURLcode smtp_parse_url_path(struct connectdata *conn);
 static CURLcode smtp_parse_custom_request(struct connectdata *conn);
 static CURLcode smtp_perform_auth(struct connectdata *conn, const char *mech,
                                   const char *initresp);
 static CURLcode smtp_continue_auth(struct connectdata *conn, const char *resp);
-static void smtp_get_message(char *buffer, char** outptr);
+static void smtp_get_message(char *buffer, char **outptr);
 
 /*
  * SMTP protocol handler.
  */
 
 const struct Curl_handler Curl_handler_smtp = {
@@ -275,16 +275,16 @@
 /***********************************************************************
  *
  * smtp_get_message()
  *
  * Gets the authentication message from the response buffer.
  */
-static void smtp_get_message(char *buffer, char** outptr)
+static void smtp_get_message(char *buffer, char **outptr)
 {
   size_t len = 0;
-  char* message = NULL;
+  char *message = NULL;
 
   /* Find the start of the message */
   for(message = buffer + 4; *message == ' ' || *message == '\t'; message++)
     ;
 
   /* Find the end of the message */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks.c	2016-12-19 15:27:56.000000000 +0800
@@ -54,13 +54,13 @@
                        ssize_t buffersize,       /* max amount to read */
                        ssize_t *n)               /* amount bytes read */
 {
   ssize_t nread;
   ssize_t allread = 0;
   int result;
-  long timeleft;
+  time_t timeleft;
   *n = 0;
   for(;;) {
     timeleft = Curl_timeleft(conn->data, NULL, TRUE);
     if(timeleft < 0) {
       /* we already got the timeout */
       result = CURLE_OPERATION_TIMEDOUT;
@@ -106,15 +106,16 @@
 *   Nonsupport "Identification Protocol (RFC1413)"
 */
 CURLcode Curl_SOCKS4(const char *proxy_name,
                      const char *hostname,
                      int remote_port,
                      int sockindex,
-                     struct connectdata *conn,
-                     bool protocol4a)
+                     struct connectdata *conn)
 {
+  const bool protocol4a =
+    (conn->socks_proxy.proxytype == CURLPROXY_SOCKS4A) ? TRUE : FALSE;
 #define SOCKS4REQLEN 262
   unsigned char socksreq[SOCKS4REQLEN]; /* room for SOCKS4 request incl. user
                                            id */
   int result;
   CURLcode code;
   curl_socket_t sock = conn->sock[sockindex];
@@ -123,12 +124,16 @@
   if(Curl_timeleft(data, NULL, TRUE) < 0) {
     /* time-out, bail out, go home */
     failf(data, "Connection time-out");
     return CURLE_OPERATION_TIMEDOUT;
   }
 
+  if(conn->bits.httpproxy)
+    infof(conn->data, "SOCKS4%s: connecting to HTTP proxy %s port %d\n",
+          protocol4a ? "a" : "", hostname, remote_port);
+
   (void)curlx_nonblock(sock, FALSE);
 
   infof(data, "SOCKS4 communication to %s:%d\n", hostname, remote_port);
 
   /*
    * Compose socks4 request
@@ -171,17 +176,17 @@
       char buf[64];
       Curl_printable_address(hp, buf, sizeof(buf));
 
       if(hp->ai_family == AF_INET) {
         struct sockaddr_in *saddr_in;
 
-        saddr_in = (struct sockaddr_in*)(void*)hp->ai_addr;
-        socksreq[4] = ((unsigned char*)&saddr_in->sin_addr.s_addr)[0];
-        socksreq[5] = ((unsigned char*)&saddr_in->sin_addr.s_addr)[1];
-        socksreq[6] = ((unsigned char*)&saddr_in->sin_addr.s_addr)[2];
-        socksreq[7] = ((unsigned char*)&saddr_in->sin_addr.s_addr)[3];
+        saddr_in = (struct sockaddr_in *)(void *)hp->ai_addr;
+        socksreq[4] = ((unsigned char *)&saddr_in->sin_addr.s_addr)[0];
+        socksreq[5] = ((unsigned char *)&saddr_in->sin_addr.s_addr)[1];
+        socksreq[6] = ((unsigned char *)&saddr_in->sin_addr.s_addr)[2];
+        socksreq[7] = ((unsigned char *)&saddr_in->sin_addr.s_addr)[3];
 
         infof(data, "SOCKS4 connect to IPv4 %s (locally resolved)\n", buf);
       }
       else {
         hp = NULL; /* fail! */
 
@@ -216,24 +221,24 @@
    */
   {
     ssize_t actualread;
     ssize_t written;
     ssize_t hostnamelen = 0;
     int packetsize = 9 +
-      (int)strlen((char*)socksreq + 8); /* size including NUL */
+      (int)strlen((char *)socksreq + 8); /* size including NUL */
 
     /* If SOCKS4a, set special invalid IP address 0.0.0.x */
     if(protocol4a) {
       socksreq[4] = 0;
       socksreq[5] = 0;
       socksreq[6] = 0;
       socksreq[7] = 1;
       /* If still enough room in buffer, also append hostname */
       hostnamelen = (ssize_t)strlen(hostname) + 1; /* length including NUL */
       if(packetsize + hostnamelen <= SOCKS4REQLEN)
-        strcpy((char*)socksreq + packetsize, hostname);
+        strcpy((char *)socksreq + packetsize, hostname);
       else
         hostnamelen = 0; /* Flag: hostname did not fit in buffer */
     }
 
     /* Send request */
     code = Curl_write_plain(conn, sock, (char *)socksreq,
@@ -373,17 +378,22 @@
   ssize_t actualread;
   ssize_t written;
   int result;
   CURLcode code;
   curl_socket_t sock = conn->sock[sockindex];
   struct Curl_easy *data = conn->data;
-  long timeout;
-  bool socks5_resolve_local = (conn->proxytype == CURLPROXY_SOCKS5)?TRUE:FALSE;
+  time_t timeout;
+  bool socks5_resolve_local =
+    (conn->socks_proxy.proxytype == CURLPROXY_SOCKS5) ? TRUE : FALSE;
   const size_t hostname_len = strlen(hostname);
   ssize_t len = 0;
 
+  if(conn->bits.httpproxy)
+    infof(conn->data, "SOCKS5: connecting to HTTP proxy %s port %d\n",
+          hostname, remote_port);
+
   /* RFC1928 chapter 5 specifies max 255 chars for domain name in packet */
   if(!socks5_resolve_local && hostname_len > 255) {
     infof(conn->data, "SOCKS5: server resolving disabled for hostnames of "
           "length > 255 [actual len=%zu]\n", hostname_len);
     socks5_resolve_local = TRUE;
   }
@@ -602,27 +612,28 @@
       Curl_printable_address(hp, buf, sizeof(buf));
 
       if(hp->ai_family == AF_INET) {
         struct sockaddr_in *saddr_in;
         socksreq[len++] = 1; /* ATYP: IPv4 = 1 */
 
-        saddr_in = (struct sockaddr_in*)(void*)hp->ai_addr;
+        saddr_in = (struct sockaddr_in *)(void *)hp->ai_addr;
         for(i = 0; i < 4; i++) {
-          socksreq[len++] = ((unsigned char*)&saddr_in->sin_addr.s_addr)[i];
+          socksreq[len++] = ((unsigned char *)&saddr_in->sin_addr.s_addr)[i];
         }
 
         infof(data, "SOCKS5 connect to IPv4 %s (locally resolved)\n", buf);
       }
 #ifdef ENABLE_IPV6
       else if(hp->ai_family == AF_INET6) {
         struct sockaddr_in6 *saddr_in6;
         socksreq[len++] = 4; /* ATYP: IPv6 = 4 */
 
-        saddr_in6 = (struct sockaddr_in6*)(void*)hp->ai_addr;
+        saddr_in6 = (struct sockaddr_in6 *)(void *)hp->ai_addr;
         for(i = 0; i < 16; i++) {
-          socksreq[len++] = ((unsigned char*)&saddr_in6->sin6_addr.s6_addr)[i];
+          socksreq[len++] =
+            ((unsigned char *)&saddr_in6->sin6_addr.s6_addr)[i];
         }
 
         infof(data, "SOCKS5 connect to IPv6 %s (locally resolved)\n", buf);
       }
 #endif
       else {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks_gssapi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks_gssapi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks_gssapi.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks_gssapi.c	2016-12-19 15:27:56.000000000 +0800
@@ -43,13 +43,13 @@
 /*
  * Helper GSS-API error functions.
  */
 static int check_gss_err(struct Curl_easy *data,
                          OM_uint32 major_status,
                          OM_uint32 minor_status,
-                         const char* function)
+                         const char *function)
 {
   if(GSS_ERROR(major_status)) {
     OM_uint32 maj_stat, min_stat;
     OM_uint32 msg_ctx = 0;
     gss_buffer_desc status_string;
     char buf[1024];
@@ -62,13 +62,13 @@
       maj_stat = gss_display_status(&min_stat, major_status,
                                     GSS_C_GSS_CODE,
                                     GSS_C_NULL_OID,
                                     &msg_ctx, &status_string);
       if(maj_stat == GSS_S_COMPLETE) {
         if(sizeof(buf) > len + status_string.length + 1) {
-          strcpy(buf+len, (char*) status_string.value);
+          strcpy(buf+len, (char *) status_string.value);
           len += status_string.length;
         }
         gss_release_buffer(&min_stat, &status_string);
         break;
       }
       gss_release_buffer(&min_stat, &status_string);
@@ -83,13 +83,13 @@
       maj_stat = gss_display_status(&min_stat, minor_status,
                                     GSS_C_MECH_CODE,
                                     GSS_C_NULL_OID,
                                     &msg_ctx, &status_string);
       if(maj_stat == GSS_S_COMPLETE) {
         if(sizeof(buf) > len + status_string.length)
-          strcpy(buf+len, (char*) status_string.value);
+          strcpy(buf+len, (char *) status_string.value);
         gss_release_buffer(&min_stat, &status_string);
         break;
       }
       gss_release_buffer(&min_stat, &status_string);
     }
     failf(data, "GSS-API error: %s failed:\n%s", function, buf);
@@ -120,39 +120,41 @@
   gss_name_t       gss_client_name = GSS_C_NO_NAME;
   unsigned short   us_length;
   char             *user=NULL;
   unsigned char socksreq[4]; /* room for GSS-API exchange header only */
   const char *serviceptr = data->set.str[STRING_PROXY_SERVICE_NAME] ?
                            data->set.str[STRING_PROXY_SERVICE_NAME] : "rcmd";
+  const size_t serviceptr_length = strlen(serviceptr);
 
   /*   GSS-API request looks like
    * +----+------+-----+----------------+
    * |VER | MTYP | LEN |     TOKEN      |
    * +----+------+----------------------+
    * | 1  |  1   |  2  | up to 2^16 - 1 |
    * +----+------+-----+----------------+
    */
 
   /* prepare service name */
   if(strchr(serviceptr, '/')) {
-    service.value = malloc(strlen(serviceptr));
+    service.length = serviceptr_length;
+    service.value = malloc(service.length);
     if(!service.value)
       return CURLE_OUT_OF_MEMORY;
-    service.length = strlen(serviceptr);
     memcpy(service.value, serviceptr, service.length);
 
     gss_major_status = gss_import_name(&gss_minor_status, &service,
                                        (gss_OID) GSS_C_NULL_OID, &server);
   }
   else {
-    service.value = malloc(strlen(serviceptr) +strlen(conn->proxy.name)+2);
+    service.value = malloc(serviceptr_length +
+                           strlen(conn->socks_proxy.host.name)+2);
     if(!service.value)
       return CURLE_OUT_OF_MEMORY;
-    service.length = strlen(serviceptr) +strlen(conn->proxy.name)+1;
+    service.length = serviceptr_length + strlen(conn->socks_proxy.host.name)+1;
     snprintf(service.value, service.length+1, "%s@%s",
-             serviceptr, conn->proxy.name);
+             serviceptr, conn->socks_proxy.host.name);
 
     gss_major_status = gss_import_name(&gss_minor_status, &service,
                                        GSS_C_NT_HOSTBASED_SERVICE, &server);
   }
 
   gss_release_buffer(&gss_status, &service); /* clear allocated memory */
@@ -287,15 +289,15 @@
     gss_token = &gss_recv_token;
   }
 
   gss_release_name(&gss_status, &server);
 
   /* Everything is good so far, user was authenticated! */
-  gss_major_status = gss_inquire_context (&gss_minor_status, gss_context,
-                                          &gss_client_name, NULL, NULL, NULL,
-                                          NULL, NULL, NULL);
+  gss_major_status = gss_inquire_context(&gss_minor_status, gss_context,
+                                         &gss_client_name, NULL, NULL, NULL,
+                                         NULL, NULL, NULL);
   if(check_gss_err(data, gss_major_status,
                    gss_minor_status, "gss_inquire_context")) {
     gss_delete_sec_context(&gss_status, &gss_context, NULL);
     gss_release_name(&gss_status, &gss_client_name);
     failf(data, "Failed to determine user name.");
     return CURLE_COULDNT_CONNECT;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks.h	2016-12-19 15:27:56.000000000 +0800
@@ -22,13 +22,13 @@
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
 #ifdef CURL_DISABLE_PROXY
-#define Curl_SOCKS4(a,b,c,d,e,f) CURLE_NOT_BUILT_IN
+#define Curl_SOCKS4(a,b,c,d,e) CURLE_NOT_BUILT_IN
 #define Curl_SOCKS5(a,b,c,d,e,f) CURLE_NOT_BUILT_IN
 #else
 /*
  * Helper read-from-socket functions. Does the same as Curl_read() but it
  * blocks until all bytes amount of buffersize will be read. No more, no less.
  *
@@ -46,14 +46,13 @@
  * final destination server.
  */
 CURLcode Curl_SOCKS4(const char *proxy_name,
                      const char *hostname,
                      int remote_port,
                      int sockindex,
-                     struct connectdata *conn,
-                     bool protocol4a);
+                     struct connectdata *conn);
 
 /*
  * This function logs in to a SOCKS5 proxy and sends the specifics to the
  * final destination server.
  */
 CURLcode Curl_SOCKS5(const char *proxy_name,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/socks_sspi.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/socks_sspi.c	2016-12-19 15:27:56.000000000 +0800
@@ -42,13 +42,13 @@
 
 /*
  * Helper sspi error functions.
  */
 static int check_sspi_err(struct connectdata *conn,
                           SECURITY_STATUS status,
-                          const char* function)
+                          const char *function)
 {
   if(status != SEC_E_OK &&
      status != SEC_I_COMPLETE_AND_CONTINUE &&
      status != SEC_I_COMPLETE_NEEDED &&
      status != SEC_I_CONTINUE_NEEDED) {
     failf(conn->data, "SSPI error: %s failed: %s", function,
@@ -83,12 +83,13 @@
   char *service_name = NULL;
   unsigned short us_length;
   unsigned long qop;
   unsigned char socksreq[4]; /* room for GSS-API exchange header only */
   const char *service = data->set.str[STRING_PROXY_SERVICE_NAME] ?
                         data->set.str[STRING_PROXY_SERVICE_NAME]  : "rcmd";
+  const size_t service_length = strlen(service);
 
   /*   GSS-API request looks like
    * +----+------+-----+----------------+
    * |VER | MTYP | LEN |     TOKEN      |
    * +----+------+----------------------+
    * | 1  |  1   |  2  | up to 2^16 - 1 |
@@ -99,17 +100,19 @@
   if(strchr(service, '/')) {
     service_name = strdup(service);
     if(!service_name)
       return CURLE_OUT_OF_MEMORY;
   }
   else {
-    service_name = malloc(strlen(service) + strlen(conn->proxy.name) + 2);
+    service_name = malloc(service_length +
+                          strlen(conn->socks_proxy.host.name) + 2);
     if(!service_name)
       return CURLE_OUT_OF_MEMORY;
-    snprintf(service_name, strlen(service) +strlen(conn->proxy.name)+2,
-             "%s/%s", service, conn->proxy.name);
+    snprintf(service_name, service_length +
+             strlen(conn->socks_proxy.host.name)+2, "%s/%s",
+             service, conn->socks_proxy.host.name);
   }
 
   input_desc.cBuffers = 1;
   input_desc.pBuffers = &sspi_recv_token;
   input_desc.ulVersion = SECBUFFER_VERSION;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/speedcheck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/speedcheck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/speedcheck.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/speedcheck.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -37,14 +37,14 @@
                          struct timeval now)
 {
   if((data->progress.current_speed >= 0) &&
      data->set.low_speed_time &&
      (Curl_tvlong(data->state.keeps_speed) != 0) &&
      (data->progress.current_speed < data->set.low_speed_limit)) {
-    long howlong = Curl_tvdiff(now, data->state.keeps_speed);
-    long nextcheck = (data->set.low_speed_time * 1000) - howlong;
+    time_t howlong = Curl_tvdiff(now, data->state.keeps_speed);
+    time_t nextcheck = (data->set.low_speed_time * 1000) - howlong;
 
     /* We are now below the "low speed limit". If we are below it
        for "low speed time" seconds we consider that enough reason
        to abort the download. */
     if(nextcheck <= 0) {
       /* we have been this slow for long enough, now die */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ssh.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ssh.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/ssh.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/ssh.c	2016-12-20 23:09:48.000000000 +0800
@@ -68,13 +68,13 @@
 #include "escape.h"
 #include "http.h" /* for HTTP proxy tunnel stuff */
 #include "ssh.h"
 #include "url.h"
 #include "speedcheck.h"
 #include "getinfo.h"
-
+#include "strdup.h"
 #include "strcase.h"
 #include "vtls/vtls.h"
 #include "connect.h"
 #include "strerror.h"
 #include "inet_ntop.h"
 #include "parsedate.h" /* for the week day and month names */
@@ -236,13 +236,13 @@
   (void)prompts;
   (void)abstract;
 } /* kbd_callback */
 
 static CURLcode sftp_libssh2_error_to_CURLE(int err)
 {
-  switch (err) {
+  switch(err) {
     case LIBSSH2_FX_OK:
       return CURLE_OK;
 
     case LIBSSH2_FX_NO_SUCH_FILE:
     case LIBSSH2_FX_NO_SUCH_PATH:
       return CURLE_REMOTE_FILE_NOT_FOUND;
@@ -268,13 +268,13 @@
 
   return CURLE_SSH;
 }
 
 static CURLcode libssh2_session_error_to_CURLE(int err)
 {
-  switch (err) {
+  switch(err) {
     /* Ordered by order of appearance in libssh2.h */
     case LIBSSH2_ERROR_NONE:
       return CURLE_OK;
 
     case LIBSSH2_ERROR_SOCKET_NONE:
       return CURLE_COULDNT_CONNECT;
@@ -673,13 +673,13 @@
   }
 
   /* Before we authenticate we check the hostkey's MD5 fingerprint
    * against a known fingerprint, if available.
    */
   if(pubkey_md5 && strlen(pubkey_md5) == 32) {
-    if(!fingerprint || strcmp(md5buffer, pubkey_md5)) {
+    if(!fingerprint || !strcasecompare(md5buffer, pubkey_md5)) {
       if(fingerprint)
         failf(data,
             "Denied establishing ssh session: mismatch md5 fingerprint. "
             "Remote %s is not equal to %s", md5buffer, pubkey_md5);
       else
         failf(data,
@@ -779,20 +779,20 @@
         if(libssh2_userauth_authenticated(sshc->ssh_session)) {
           sshc->authed = TRUE;
           infof(data, "SSH user accepted with no authentication\n");
           state(conn, SSH_AUTH_DONE);
           break;
         }
-        else if((err = libssh2_session_last_errno(sshc->ssh_session)) ==
-           LIBSSH2_ERROR_EAGAIN) {
-          rc = LIBSSH2_ERROR_EAGAIN;
-          break;
-        }
         else {
-          state(conn, SSH_SESSION_FREE);
-          sshc->actualcode = libssh2_session_error_to_CURLE(err);
+          err = libssh2_session_last_errno(sshc->ssh_session);
+          if(err == LIBSSH2_ERROR_EAGAIN)
+            rc = LIBSSH2_ERROR_EAGAIN;
+          else {
+            state(conn, SSH_SESSION_FREE);
+            sshc->actualcode = libssh2_session_error_to_CURLE(err);
+          }
           break;
         }
       }
       infof(data, "SSH authentication methods available: %s\n",
             sshc->authlist);
 
@@ -871,13 +871,13 @@
           Curl_safefree(sshc->rsa_pub);
           state(conn, SSH_SESSION_FREE);
           sshc->actualcode = CURLE_OUT_OF_MEMORY;
           break;
         }
 
-        sshc->passphrase = data->set.str[STRING_KEY_PASSWD];
+        sshc->passphrase = data->set.ssl.key_passwd;
         if(!sshc->passphrase)
           sshc->passphrase = "";
 
         free(home);
 
         if(sshc->rsa_pub)
@@ -1984,18 +1984,20 @@
           state(conn, SSH_SFTP_CLOSE);
           result = sftp_libssh2_error_to_CURLE(err);
           sshc->actualcode = result?result:CURLE_SSH;
           break;
         }
       }
-      if((sshc->readdir_filename = malloc(PATH_MAX+1)) == NULL) {
+      sshc->readdir_filename = malloc(PATH_MAX+1);
+      if(!sshc->readdir_filename) {
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_OUT_OF_MEMORY;
         break;
       }
-      if((sshc->readdir_longentry = malloc(PATH_MAX+1)) == NULL) {
+      sshc->readdir_longentry = malloc(PATH_MAX+1);
+      if(!sshc->readdir_longentry) {
         Curl_safefree(sshc->readdir_filename);
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_OUT_OF_MEMORY;
         break;
       }
       state(conn, SSH_SFTP_READDIR);
@@ -2109,15 +2111,16 @@
         break;
       }
       Curl_safefree(sshc->readdir_linkPath);
 
       /* get room for the filename and extra output */
       sshc->readdir_totalLen += 4 + sshc->readdir_len;
-      new_readdir_line = realloc(sshc->readdir_line, sshc->readdir_totalLen);
+      new_readdir_line = Curl_saferealloc(sshc->readdir_line,
+                                          sshc->readdir_totalLen);
       if(!new_readdir_line) {
-        Curl_safefree(sshc->readdir_line);
+        sshc->readdir_line = NULL;
         Curl_safefree(sshc->readdir_filename);
         Curl_safefree(sshc->readdir_longentry);
         state(conn, SSH_SFTP_CLOSE);
         sshc->actualcode = CURLE_OUT_OF_MEMORY;
         break;
       }
@@ -2648,13 +2651,13 @@
         if(rc == LIBSSH2_ERROR_EAGAIN) {
           break;
         }
         else if(rc < 0) {
           infof(data, "Failed to disconnect from libssh2 agent\n");
         }
-        libssh2_agent_free (sshc->ssh_agent);
+        libssh2_agent_free(sshc->ssh_agent);
         sshc->ssh_agent = NULL;
 
         /* NB: there is no need to free identities, they are part of internal
            agent stuff */
         sshc->sshagent_identity = NULL;
         sshc->sshagent_prev_identity = NULL;
@@ -2785,19 +2788,22 @@
  * function in all cases so that when it _doesn't_ return EAGAIN we can
  * restore the default wait bits.
  */
 static void ssh_block2waitfor(struct connectdata *conn, bool block)
 {
   struct ssh_conn *sshc = &conn->proto.sshc;
-  int dir;
-  if(block && (dir = libssh2_session_block_directions(sshc->ssh_session))) {
-    /* translate the libssh2 define bits into our own bit defines */
-    conn->waitfor = ((dir&LIBSSH2_SESSION_BLOCK_INBOUND)?KEEP_RECV:0) |
-      ((dir&LIBSSH2_SESSION_BLOCK_OUTBOUND)?KEEP_SEND:0);
+  int dir = 0;
+  if(block) {
+    dir = libssh2_session_block_directions(sshc->ssh_session);
+    if(dir) {
+      /* translate the libssh2 define bits into our own bit defines */
+      conn->waitfor = ((dir&LIBSSH2_SESSION_BLOCK_INBOUND)?KEEP_RECV:0) |
+        ((dir&LIBSSH2_SESSION_BLOCK_OUTBOUND)?KEEP_SEND:0);
+    }
   }
-  else
+  if(!dir)
     /* It didn't block or libssh2 didn't reveal in which direction, put back
        the original set */
     conn->waitfor = sshc->orig_waitfor;
 }
 #else
   /* no libssh2 directional support so we simply don't know */
@@ -2857,14 +2863,14 @@
       curl_socket_t fd_write = CURL_SOCKET_BAD;
       if(LIBSSH2_SESSION_BLOCK_INBOUND & dir)
         fd_read = sock;
       if(LIBSSH2_SESSION_BLOCK_OUTBOUND & dir)
         fd_write = sock;
       /* wait for the socket to become ready */
-      Curl_socket_check(fd_read, CURL_SOCKET_BAD, fd_write,
-                        left>1000?1000:left); /* ignore result */
+      (void)Curl_socket_check(fd_read, CURL_SOCKET_BAD, fd_write,
+                              left>1000?1000:left); /* ignore result */
     }
 #endif
 
   }
 
   return result;
@@ -3380,13 +3386,13 @@
   return CURLE_QUOTE_ERROR;
 }
 
 
 static const char *sftp_libssh2_strerror(int err)
 {
-  switch (err) {
+  switch(err) {
     case LIBSSH2_FX_NO_SUCH_FILE:
       return "No such file or directory";
 
     case LIBSSH2_FX_PERMISSION_DENIED:
       return "Permission denied";
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strcase.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strcase.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strcase.c	2016-10-31 22:22:07.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strcase.c	2016-12-19 15:27:56.000000000 +0800
@@ -31,13 +31,13 @@
 char Curl_raw_toupper(char in)
 {
 #if !defined(CURL_DOES_CONVERSIONS)
   if(in >= 'a' && in <= 'z')
     return (char)('A' + in - 'a');
 #else
-  switch (in) {
+  switch(in) {
   case 'a':
     return 'A';
   case 'b':
     return 'B';
   case 'c':
     return 'C';
@@ -117,12 +117,22 @@
   /* we do the comparison here (possibly again), just to make sure that if the
      loop above is skipped because one of the strings reached zero, we must not
      return this as a successful match */
   return (Curl_raw_toupper(*first) == Curl_raw_toupper(*second));
 }
 
+int Curl_safe_strcasecompare(const char *first, const char *second)
+{
+  if(first && second)
+    /* both pointers point to something then compare them */
+    return Curl_strcasecompare(first, second);
+  else
+    /* if both pointers are NULL then treat them as equal */
+    return (NULL == first && NULL == second);
+}
+
 /*
  * @unittest: 1301
  */
 int Curl_strncasecompare(const char *first, const char *second, size_t max)
 {
   while(*first && *second && max) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strcase.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strcase.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strcase.h	2016-11-02 07:36:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strcase.h	2016-12-19 15:27:56.000000000 +0800
@@ -33,12 +33,13 @@
  */
 
 #define strcasecompare(a,b) Curl_strcasecompare(a,b)
 #define strncasecompare(a,b,c) Curl_strncasecompare(a,b,c)
 
 int Curl_strcasecompare(const char *first, const char *second);
+int Curl_safe_strcasecompare(const char *first, const char *second);
 int Curl_strncasecompare(const char *first, const char *second, size_t max);
 
 char Curl_raw_toupper(char in);
 
 /* checkprefix() is a shorter version of the above, used when the first
    argument is zero-byte terminated */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strdup.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strdup.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strdup.c	2016-10-12 07:07:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strdup.c	2016-12-19 15:27:56.000000000 +0800
@@ -72,6 +72,29 @@
     return NULL; /* fail */
 
   memcpy(buffer, src, length);
 
   return buffer;
 }
+
+/***************************************************************************
+ *
+ * Curl_saferealloc(ptr, size)
+ *
+ * Does a normal realloc(), but will free the data pointer if the realloc
+ * fails. If 'size' is zero, it will free the data and return a failure.
+ *
+ * This convenience function is provided and used to help us avoid a common
+ * mistake pattern when we could pass in a zero, catch the NULL return and end
+ * up free'ing the memory twice.
+ *
+ * Returns the new pointer or NULL on failure.
+ *
+ ***************************************************************************/
+void *Curl_saferealloc(void *ptr, size_t size)
+{
+  void *datap = realloc(ptr, size);
+  if(size && !datap)
+    /* only free 'ptr' if size was non-zero */
+    free(ptr);
+  return datap;
+}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strdup.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strdup.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strdup.h	2016-10-12 07:07:06.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strdup.h	2016-12-19 15:27:56.000000000 +0800
@@ -24,8 +24,9 @@
 #include "curl_setup.h"
 
 #ifndef HAVE_STRDUP
 extern char *curlx_strdup(const char *str);
 #endif
 void *Curl_memdup(const void *src, size_t buffer_length);
+void *Curl_saferealloc(void *ptr, size_t size);
 
 #endif /* HEADER_CURL_STRDUP_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strerror.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strerror.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strerror.c	2016-10-31 15:48:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strerror.c	2016-12-19 15:27:56.000000000 +0800
@@ -50,13 +50,13 @@
 #include "memdebug.h"
 
 const char *
 curl_easy_strerror(CURLcode error)
 {
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-  switch (error) {
+  switch(error) {
   case CURLE_OK:
     return "No error";
 
   case CURLE_UNSUPPORTED_PROTOCOL:
     return "Unsupported protocol";
 
@@ -345,13 +345,13 @@
 }
 
 const char *
 curl_multi_strerror(CURLMcode error)
 {
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-  switch (error) {
+  switch(error) {
   case CURLM_CALL_MULTI_PERFORM:
     return "Please call curl_multi_perform() soon";
 
   case CURLM_OK:
     return "No error";
 
@@ -390,13 +390,13 @@
 }
 
 const char *
 curl_share_strerror(CURLSHcode error)
 {
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-  switch (error) {
+  switch(error) {
   case CURLSHE_OK:
     return "No error";
 
   case CURLSHE_BAD_OPTION:
     return "Unknown share option";
 
@@ -432,13 +432,13 @@
 static const char *
 get_winsock_error (int err, char *buf, size_t len)
 {
   const char *p;
 
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
-  switch (err) {
+  switch(err) {
   case WSAEINTR:
     p = "Call interrupted";
     break;
   case WSAEBADF:
     p = "Bad file";
     break;
@@ -606,13 +606,13 @@
 #else
   if(!err)
     return NULL;
   else
     p = "error";
 #endif
-  strncpy (buf, p, len);
+  strncpy(buf, p, len);
   buf [len-1] = '\0';
   return buf;
 }
 #endif   /* USE_WINSOCK */
 
 /*
@@ -712,16 +712,18 @@
 
 #endif /* end of ! USE_WINSOCK */
 
   buf[max] = '\0'; /* make sure the string is zero terminated */
 
   /* strip trailing '\r\n' or '\n'. */
-  if((p = strrchr(buf, '\n')) != NULL && (p - buf) >= 2)
-     *p = '\0';
-  if((p = strrchr(buf, '\r')) != NULL && (p - buf) >= 1)
-     *p = '\0';
+  p = strrchr(buf, '\n');
+  if(p && (p - buf) >= 2)
+    *p = '\0';
+  p = strrchr(buf, '\r');
+  if(p && (p - buf) >= 1)
+    *p = '\0';
 
   if(old_errno != ERRNO)
     SET_ERRNO(old_errno);
 
   return buf;
 }
@@ -747,13 +749,13 @@
   *outbuf = '\0';
 
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
 
   old_errno = ERRNO;
 
-  switch (err) {
+  switch(err) {
     case SEC_E_OK:
       txt = "No error";
       break;
     case CRYPT_E_REVOKED:
       txt = "CRYPT_E_REVOKED";
       break;
@@ -1032,16 +1034,18 @@
       msg_formatted = TRUE;
     }
 #endif
     if(msg_formatted) {
       msgbuf[sizeof(msgbuf)-1] = '\0';
       /* strip trailing '\r\n' or '\n' */
-      if((p = strrchr(msgbuf, '\n')) != NULL && (p - msgbuf) >= 2)
-         *p = '\0';
-      if((p = strrchr(msgbuf, '\r')) != NULL && (p - msgbuf) >= 1)
-         *p = '\0';
+      p = strrchr(msgbuf, '\n');
+      if(p && (p - msgbuf) >= 2)
+        *p = '\0';
+      p = strrchr(msgbuf, '\r');
+      if(p && (p - msgbuf) >= 1)
+        *p = '\0';
       msg = msgbuf;
     }
     if(msg)
       snprintf(outbuf, outmax, "%s - %s", str, msg);
     else
       strncpy(outbuf, str, outmax);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strtoofft.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strtoofft.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/strtoofft.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/strtoofft.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -162,13 +162,13 @@
     value = c - 'A' + 10;
   }
   else if(c <= 'z' && c >= 'a') {
     value = c - 'a' + 10;
   }
 #else
-  const char * cp;
+  const char *cp;
   int value;
 
   cp = memchr(valchars, c, 10 + 26 + 26);
 
   if(!cp)
     return -1;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/telnet.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/telnet.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/telnet.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/telnet.c	2016-12-19 15:27:56.000000000 +0800
@@ -88,13 +88,13 @@
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
 #define printoption(a,b,c,d)  Curl_nop_stmt
 #endif
 
 #ifdef USE_WINSOCK
 typedef FARPROC WSOCK2_FUNC;
-static CURLcode check_wsock2 (struct Curl_easy *data);
+static CURLcode check_wsock2(struct Curl_easy *data);
 #endif
 
 static
 CURLcode telrcv(struct connectdata *,
                 const unsigned char *inbuf, /* Data received from socket */
                 ssize_t count);             /* Number of bytes received */
@@ -932,13 +932,13 @@
   char varname[128] = "";
   char varval[128] = "";
   struct Curl_easy *data = conn->data;
   struct TELNET *tn = (struct TELNET *)data->req.protop;
 
   printsub(data, '<', (unsigned char *)tn->subbuffer, CURL_SB_LEN(tn)+2);
-  switch (CURL_SB_GET(tn)) {
+  switch(CURL_SB_GET(tn)) {
     case CURL_TELOPT_TTYPE:
       len = strlen(tn->subopt_ttype) + 4 + 2;
       snprintf((char *)temp, sizeof(temp),
                "%c%c%c%c%s%c%c", CURL_IAC, CURL_SB, CURL_TELOPT_TTYPE,
                CURL_TELQUAL_IS, tn->subopt_ttype, CURL_IAC, CURL_SE);
       bytes_written = swrite(conn->sock[FIRSTSOCKET], temp, len);
@@ -1001,30 +1001,30 @@
 
 static void sendsuboption(struct connectdata *conn, int option)
 {
   ssize_t bytes_written;
   int err;
   unsigned short x, y;
-  unsigned char*uc1, *uc2;
+  unsigned char *uc1, *uc2;
 
   struct Curl_easy *data = conn->data;
   struct TELNET *tn = (struct TELNET *)data->req.protop;
 
-  switch (option) {
+  switch(option) {
   case CURL_TELOPT_NAWS:
     /* We prepare data to be sent */
     CURL_SB_CLEAR(tn);
     CURL_SB_ACCUM(tn, CURL_IAC);
     CURL_SB_ACCUM(tn, CURL_SB);
     CURL_SB_ACCUM(tn, CURL_TELOPT_NAWS);
     /* We must deal either with litte or big endien processors */
     /* Window size must be sent according to the 'network order' */
     x=htons(tn->subopt_wsx);
     y=htons(tn->subopt_wsy);
-    uc1 = (unsigned char*)&x;
-    uc2 = (unsigned char*)&y;
+    uc1 = (unsigned char *)&x;
+    uc2 = (unsigned char *)&y;
     CURL_SB_ACCUM(tn, uc1[0]);
     CURL_SB_ACCUM(tn, uc1[1]);
     CURL_SB_ACCUM(tn, uc2[0]);
     CURL_SB_ACCUM(tn, uc2[1]);
 
     CURL_SB_ACCUM(tn, CURL_IAC);
@@ -1084,13 +1084,13 @@
 
 #define bufferflush() startskipping()
 
   while(count--) {
     c = inbuf[in];
 
-    switch (tn->telrcv_state) {
+    switch(tn->telrcv_state) {
     case CURL_TS_CR:
       tn->telrcv_state = CURL_TS_DATA;
       if(c == '\0') {
         startskipping();
         break;   /* Ignore \0 after CR */
       }
@@ -1108,13 +1108,13 @@
       writebyte();
       break;
 
     case CURL_TS_IAC:
     process_iac:
       DEBUGASSERT(startwrite < 0);
-      switch (c) {
+      switch(c) {
       case CURL_WILL:
         tn->telrcv_state = CURL_TS_WILL;
         break;
       case CURL_WONT:
         tn->telrcv_state = CURL_TS_WONT;
         break;
@@ -1238,13 +1238,13 @@
     total_written = 0;
     do {
       /* Make sure socket is writable to avoid EWOULDBLOCK condition */
       struct pollfd pfd[1];
       pfd[0].fd = conn->sock[FIRSTSOCKET];
       pfd[0].events = POLLOUT;
-      switch (Curl_poll(pfd, 1, -1)) {
+      switch(Curl_poll(pfd, 1, -1)) {
         case -1:                    /* error, abort writing */
         case 0:                     /* timeout (will never happen) */
           result = CURLE_SEND_ERROR;
           break;
         default:                    /* write! */
           bytes_written = 0;
@@ -1486,13 +1486,14 @@
     break;
 
     case WAIT_OBJECT_0:
 
       events.lNetworkEvents = 0;
       if(SOCKET_ERROR == enum_netevents_func(sockfd, event_handle, &events)) {
-        if((err = SOCKERRNO) != EINPROGRESS) {
+        err = SOCKERRNO;
+        if(err != EINPROGRESS) {
           infof(data, "WSAEnumNetworkEvents failed (%d)", err);
           keepon = FALSE;
           result = CURLE_READ_ERROR;
         }
         break;
       }
@@ -1573,13 +1574,13 @@
     pfd[1].events = POLLIN;
     poll_cnt = 2;
     interval_ms = 1 * 1000;
   }
 
   while(keepon) {
-    switch (Curl_poll(pfd, poll_cnt, interval_ms)) {
+    switch(Curl_poll(pfd, poll_cnt, interval_ms)) {
     case -1:                    /* error, stop reading */
       keepon = FALSE;
       continue;
     case 0:                     /* timeout */
       pfd[0].revents = 0;
       pfd[1].revents = 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/tftp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/tftp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/tftp.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/tftp.c	2016-12-19 15:27:56.000000000 +0800
@@ -196,13 +196,13 @@
  *
  *
  **********************************************************/
 static CURLcode tftp_set_timeouts(tftp_state_data_t *state)
 {
   time_t maxtime, timeout;
-  long timeout_ms;
+  time_t timeout_ms;
   bool start = (state->state == TFTP_STATE_START) ? TRUE : FALSE;
 
   time(&state->start_time);
 
   /* Compute drop-dead time */
   timeout_ms = Curl_timeleft(state->conn->data, NULL, start);
@@ -301,13 +301,13 @@
 {
   return (unsigned short)((packet->data[2] << 8) | packet->data[3]);
 }
 
 static size_t Curl_strnlen(const char *string, size_t maxlen)
 {
-  const char *end = memchr (string, '\0', maxlen);
+  const char *end = memchr(string, '\0', maxlen);
   return end ? (size_t) (end - string) : maxlen;
 }
 
 static const char *tftp_option_get(const char *buf, size_t len,
                                    const char **option, const char **value)
 {
@@ -1353,13 +1353,13 @@
   return result;
 }
 
 static CURLcode tftp_setup_connection(struct connectdata * conn)
 {
   struct Curl_easy *data = conn->data;
-  char * type;
+  char *type;
   char command;
 
   conn->socktype = SOCK_DGRAM;   /* UDP datagram based */
 
   /* TFTP URLs support an extension like ";mode=<typecode>" that
    * we'll try to get now! */
@@ -1369,13 +1369,13 @@
     type = strstr(conn->host.rawalloc, ";mode=");
 
   if(type) {
     *type = 0;                   /* it was in the middle of the hostname */
     command = Curl_raw_toupper(type[6]);
 
-    switch (command) {
+    switch(command) {
     case 'A': /* ASCII mode */
     case 'N': /* NETASCII mode */
       data->set.prefer_ascii = TRUE;
       break;
 
     case 'O': /* octet mode */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/timeval.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/timeval.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/timeval.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/timeval.c	2016-12-19 15:27:56.000000000 +0800
@@ -113,23 +113,23 @@
  * Make sure that the first argument is the more recent time, as otherwise
  * we'll get a weird negative time-diff back...
  *
  * Returns: the time difference in number of milliseconds. For large diffs it
  * returns 0x7fffffff on 32bit time_t systems.
  */
-long curlx_tvdiff(struct timeval newer, struct timeval older)
+time_t curlx_tvdiff(struct timeval newer, struct timeval older)
 {
 #if SIZEOF_TIME_T < 8
   /* for 32bit time_t systems, add a precaution to avoid overflow for really
      big time differences */
   time_t diff = newer.tv_sec-older.tv_sec;
   if(diff >= (0x7fffffff/1000))
     return 0x7fffffff;
 #endif
   return (newer.tv_sec-older.tv_sec)*1000+
-    (long)(newer.tv_usec-older.tv_usec)/1000;
+    (time_t)(newer.tv_usec-older.tv_usec)/1000;
 }
 
 /*
  * Same as curlx_tvdiff but with full usec resolution.
  *
  * Returns: the time difference in seconds with subsecond resolution.
@@ -141,10 +141,10 @@
       (double)(newer.tv_usec-older.tv_usec)/1000000.0;
   else
     return (double)(newer.tv_usec-older.tv_usec)/1000000.0;
 }
 
 /* return the number of seconds in the given input timeval struct */
-long Curl_tvlong(struct timeval t1)
+time_t Curl_tvlong(struct timeval t1)
 {
   return t1.tv_sec;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/timeval.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/timeval.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/timeval.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/timeval.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2007, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -34,22 +34,22 @@
 /*
  * Make sure that the first argument (t1) is the more recent time and t2 is
  * the older time, as otherwise you get a weird negative time-diff back...
  *
  * Returns: the time difference in number of milliseconds.
  */
-long curlx_tvdiff(struct timeval t1, struct timeval t2);
+time_t curlx_tvdiff(struct timeval t1, struct timeval t2);
 
 /*
  * Same as curlx_tvdiff but with full usec resolution.
  *
  * Returns: the time difference in seconds with subsecond resolution.
  */
 double curlx_tvdiff_secs(struct timeval t1, struct timeval t2);
 
-long Curl_tvlong(struct timeval t1);
+time_t Curl_tvlong(struct timeval t1);
 
 /* These two defines below exist to provide the older API for library
    internals only. */
 #define Curl_tvnow() curlx_tvnow()
 #define Curl_tvdiff(x,y) curlx_tvdiff(x,y)
 #define Curl_tvdiff_secs(x,y) curlx_tvdiff_secs(x,y)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/transfer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/transfer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/transfer.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/transfer.c	2016-12-19 15:27:56.000000000 +0800
@@ -738,14 +738,14 @@
           /* This switch handles various content encodings. If there's an
              error here, be sure to check over the almost identical code
              in http_chunks.c.
              Make sure that ALL_CONTENT_ENCODINGS contains all the
              encodings handled here. */
 #ifdef HAVE_LIBZ
-          switch (conn->data->set.http_ce_skip ?
-                  IDENTITY : k->auto_decoding) {
+          switch(conn->data->set.http_ce_skip ?
+                 IDENTITY : k->auto_decoding) {
           case IDENTITY:
 #endif
             /* This is the default when the server sends no
                Content-Encoding header. See Curl_readwrite_init; the
                memset() call initializes k->auto_decoding to zero. */
             if(!k->ignorebody) {
@@ -772,15 +772,15 @@
             /* Assume CLIENTWRITE_BODY; headers are not encoded. */
             if(!k->ignorebody)
               result = Curl_unencode_gzip_write(conn, k, nread);
             break;
 
           default:
-            failf (data, "Unrecognized content encoding type. "
-                   "libcurl understands `identity', `deflate' and `gzip' "
-                   "content encodings.");
+            failf(data, "Unrecognized content encoding type. "
+                  "libcurl understands `identity', `deflate' and `gzip' "
+                  "content encodings.");
             result = CURLE_BAD_CONTENT_ENCODING;
             break;
           }
 #endif
         }
         k->badheader = HEADER_NORMAL; /* taken care of now */
@@ -1134,13 +1134,13 @@
          (possibly via a proxy) from which it has never seen a 100 (Continue)
          status, the client SHOULD NOT wait for an indefinite period before
          sending the request body.
 
       */
 
-      long ms = Curl_tvdiff(k->now, k->start100);
+      time_t ms = Curl_tvdiff(k->now, k->start100);
       if(ms >= data->set.expect_100_timeout) {
         /* we've waited long enough, continue anyway */
         k->exp100 = EXP100_SEND_DATA;
         k->keepon |= KEEP_SEND;
         infof(data, "Done waiting for 100-continue\n");
       }
@@ -1293,13 +1293,13 @@
     return CURLE_URL_MALFORMAT;
   }
 
   /* Init the SSL session ID cache here. We do it here since we want to do it
      after the *_setopt() calls (that could specify the size of the cache) but
      before any transfer takes place. */
-  result = Curl_ssl_initsessions(data, data->set.ssl.max_ssl_sessions);
+  result = Curl_ssl_initsessions(data, data->set.general_ssl.max_ssl_sessions);
   if(result)
     return result;
 
   data->set.followlocation=0; /* reset the location-follow counter */
   data->state.this_is_a_follow = FALSE; /* reset this */
   data->state.errorbuf = FALSE; /* no error has occurred */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/url.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/url.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/url.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/url.c	2016-12-19 15:27:56.000000000 +0800
@@ -89,12 +89,13 @@
 #include "multiif.h"
 #include "easyif.h"
 #include "speedcheck.h"
 #include "warnless.h"
 #include "non-ascii.h"
 #include "inet_pton.h"
+#include "getinfo.h"
 
 /* And now for the protocols */
 #include "ftp.h"
 #include "dict.h"
 #include "telnet.h"
 #include "tftp.h"
@@ -460,12 +461,13 @@
   Curl_safefree(data->info.contenttype);
   Curl_safefree(data->info.wouldredirect);
 
   /* this destroys the channel and we cannot use it anymore after this */
   Curl_resolver_cleanup(data->state.resolver);
 
+  Curl_http2_cleanup_dependencies(data);
   Curl_convert_close(data);
 
   /* No longer a dirty share, if it exists */
   if(data->share) {
     Curl_share_lock(data, CURL_LOCK_DATA_SHARE, CURL_LOCK_ACCESS_SINGLE);
     data->share->dirty--;
@@ -522,34 +524,36 @@
   set->ftp_use_pret = FALSE;  /* mainly useful for drftpd servers */
   set->ftp_filemethod = FTPFILE_MULTICWD;
 
   set->dns_cache_timeout = 60; /* Timeout every 60 seconds by default */
 
   /* Set the default size of the SSL session ID cache */
-  set->ssl.max_ssl_sessions = 5;
+  set->general_ssl.max_ssl_sessions = 5;
 
-  set->proxyport = CURL_DEFAULT_PROXY_PORT; /* from url.h */
+  set->proxyport = 0;
   set->proxytype = CURLPROXY_HTTP; /* defaults to HTTP proxy */
   set->httpauth = CURLAUTH_BASIC;  /* defaults to basic */
   set->proxyauth = CURLAUTH_BASIC; /* defaults to basic */
 
   /* make libcurl quiet by default: */
   set->hide_progress = TRUE;  /* CURLOPT_NOPROGRESS changes these */
 
   /*
    * libcurl 7.10 introduced SSL verification *by default*! This needs to be
    * switched off unless wanted.
    */
-  set->ssl.verifypeer = TRUE;
-  set->ssl.verifyhost = TRUE;
+  set->ssl.primary.verifypeer = TRUE;
+  set->ssl.primary.verifyhost = TRUE;
 #ifdef USE_TLS_SRP
   set->ssl.authtype = CURL_TLSAUTH_NONE;
 #endif
   set->ssh_auth_types = CURLSSH_AUTH_DEFAULT; /* defaults to any auth
                                                       type */
-  set->ssl.sessionid = TRUE; /* session ID caching enabled by default */
+  set->general_ssl.sessionid = TRUE; /* session ID caching enabled by
+                                        default */
+  set->proxy_ssl = set->ssl;
 
   set->new_file_perms = 0644;    /* Default permissions */
   set->new_directory_perms = 0755; /* Default permissions */
 
   /* for the *protocols fields we don't use the CURLPROTO_ALL convenience
      define since we internally only use the lower 16 bits for the passed
@@ -566,20 +570,23 @@
    */
   set->socks5_gssapi_nec = FALSE;
 #endif
 
   /* This is our preferred CA cert bundle/path since install time */
 #if defined(CURL_CA_BUNDLE)
-  result = setstropt(&set->str[STRING_SSL_CAFILE], CURL_CA_BUNDLE);
+  result = setstropt(&set->str[STRING_SSL_CAFILE_ORIG], CURL_CA_BUNDLE);
   if(result)
     return result;
 #endif
 #if defined(CURL_CA_PATH)
-  result = setstropt(&set->str[STRING_SSL_CAPATH], CURL_CA_PATH);
+  result = setstropt(&set->str[STRING_SSL_CAPATH_ORIG], CURL_CA_PATH);
   if(result)
     return result;
+
+  result = setstropt(&set->str[STRING_SSL_CAPATH_PROXY],
+                     (char *) CURL_CA_PATH);
 #endif
 
   set->wildcardmatch  = FALSE;
   set->chunk_bgn      = ZERO_NULL;
   set->chunk_end      = ZERO_NULL;
 
@@ -643,12 +650,14 @@
     result = Curl_init_userdefined(&data->set);
 
     data->state.headersize=HEADERSIZE;
 
     Curl_convert_init(data);
 
+    Curl_initinfo(data);
+
     /* most recent connection is not yet defined */
     data->state.lastconnect = NULL;
 
     data->progress.flags |= PGRS_HIDE;
     data->state.current_speed = -1; /* init to negative == impossible */
 
@@ -691,13 +700,18 @@
     /* remember we want this enabled */
     arg = va_arg(param, long);
     data->set.global_dns_cache = (0 != arg) ? TRUE : FALSE;
     break;
   case CURLOPT_SSL_CIPHER_LIST:
     /* set a list of cipher we want to use in the SSL connection */
-    result = setstropt(&data->set.str[STRING_SSL_CIPHER_LIST],
+    result = setstropt(&data->set.str[STRING_SSL_CIPHER_LIST_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_SSL_CIPHER_LIST:
+    /* set a list of cipher we want to use in the SSL connection for proxy */
+    result = setstropt(&data->set.str[STRING_SSL_CIPHER_LIST_PROXY],
                        va_arg(param, char *));
     break;
 
   case CURLOPT_RANDOM_FILE:
     /*
      * This is the path name to a file that contains random data to seed
@@ -897,13 +911,24 @@
   case CURLOPT_SSLVERSION:
     /*
      * Set explicit SSL version to try to connect with, as some SSL
      * implementations are lame.
      */
 #ifdef USE_SSL
-    data->set.ssl.version = va_arg(param, long);
+    data->set.ssl.primary.version = va_arg(param, long);
+#else
+    result = CURLE_UNKNOWN_OPTION;
+#endif
+    break;
+  case CURLOPT_PROXY_SSLVERSION:
+    /*
+     * Set explicit SSL version to try to connect with for proxy, as some SSL
+     * implementations are lame.
+     */
+#ifdef USE_SSL
+    data->set.proxy_ssl.primary.version = va_arg(param, long);
 #else
     result = CURLE_UNKNOWN_OPTION;
 #endif
     break;
 
 #ifndef CURL_DISABLE_HTTP
@@ -1004,13 +1029,13 @@
 
       if((data->set.postfieldsize < 0) ||
          ((sizeof(curl_off_t) != sizeof(size_t)) &&
           (data->set.postfieldsize > (curl_off_t)((size_t)-1))))
         result = CURLE_OUT_OF_MEMORY;
       else {
-        char * p;
+        char *p;
 
         (void) setstropt(&data->set.str[STRING_COPYPOSTFIELDS], NULL);
 
         /* Allocate even when size == 0. This satisfies the need of possible
            later address compare to detect the COPYPOSTFIELDS mode, and
            to mark that postfields is used rather than read function or
@@ -1431,36 +1456,48 @@
     data->set.proxyauth = auth;
   }
   break;
 
   case CURLOPT_PROXY:
     /*
-     * Set proxy server:port to use as HTTP proxy.
+     * Set proxy server:port to use as proxy.
      *
-     * If the proxy is set to "" we explicitly say that we don't want to use a
-     * proxy (even though there might be environment variables saying so).
+     * If the proxy is set to "" (and CURLOPT_SOCKS_PROXY is set to "" or NULL)
+     * we explicitly say that we don't want to use a proxy
+     * (even though there might be environment variables saying so).
      *
      * Setting it to NULL, means no proxy but allows the environment variables
-     * to decide for us.
+     * to decide for us (if CURLOPT_SOCKS_PROXY setting it to NULL).
      */
     result = setstropt(&data->set.str[STRING_PROXY],
                        va_arg(param, char *));
     break;
 
+  case CURLOPT_PRE_PROXY:
+    /*
+     * Set proxy server:port to use as SOCKS proxy.
+     *
+     * If the proxy is set to "" or NULL we explicitly say that we don't want
+     * to use the socks proxy.
+     */
+    result = setstropt(&data->set.str[STRING_PRE_PROXY],
+                       va_arg(param, char *));
+    break;
+
   case CURLOPT_PROXYTYPE:
     /*
      * Set proxy type. HTTP/HTTP_1_0/SOCKS4/SOCKS4a/SOCKS5/SOCKS5_HOSTNAME
      */
     data->set.proxytype = (curl_proxytype)va_arg(param, long);
     break;
 
   case CURLOPT_PROXY_TRANSFER_MODE:
     /*
      * set transfer mode (;type=<a|i>) when doing FTP via an HTTP proxy
      */
-    switch (va_arg(param, long)) {
+    switch(va_arg(param, long)) {
     case 0:
       data->set.proxy_transfer_mode = FALSE;
       break;
     case 1:
       data->set.proxy_transfer_mode = TRUE;
       break;
@@ -1907,41 +1944,76 @@
     data->set.ioctl_client = va_arg(param, void *);
     break;
   case CURLOPT_SSLCERT:
     /*
      * String that holds file name of the SSL certificate to use
      */
-    result = setstropt(&data->set.str[STRING_CERT],
+    result = setstropt(&data->set.str[STRING_CERT_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_SSLCERT:
+    /*
+     * String that holds file name of the SSL certificate to use for proxy
+     */
+    result = setstropt(&data->set.str[STRING_CERT_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_SSLCERTTYPE:
     /*
      * String that holds file type of the SSL certificate to use
      */
-    result = setstropt(&data->set.str[STRING_CERT_TYPE],
+    result = setstropt(&data->set.str[STRING_CERT_TYPE_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_SSLCERTTYPE:
+    /*
+     * String that holds file type of the SSL certificate to use for proxy
+     */
+    result = setstropt(&data->set.str[STRING_CERT_TYPE_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_SSLKEY:
     /*
      * String that holds file name of the SSL key to use
      */
-    result = setstropt(&data->set.str[STRING_KEY],
+    result = setstropt(&data->set.str[STRING_KEY_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_SSLKEY:
+    /*
+     * String that holds file name of the SSL key to use for proxy
+     */
+    result = setstropt(&data->set.str[STRING_KEY_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_SSLKEYTYPE:
     /*
      * String that holds file type of the SSL key to use
      */
-    result = setstropt(&data->set.str[STRING_KEY_TYPE],
+    result = setstropt(&data->set.str[STRING_KEY_TYPE_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_SSLKEYTYPE:
+    /*
+     * String that holds file type of the SSL key to use for proxy
+     */
+    result = setstropt(&data->set.str[STRING_KEY_TYPE_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_KEYPASSWD:
     /*
      * String that holds the SSL or SSH private key password.
      */
-    result = setstropt(&data->set.str[STRING_KEY_PASSWD],
+    result = setstropt(&data->set.str[STRING_KEY_PASSWD_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_KEYPASSWD:
+    /*
+     * String that holds the SSL private key password for proxy.
+     */
+    result = setstropt(&data->set.str[STRING_KEY_PASSWD_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_SSLENGINE:
     /*
      * String that holds the SSL crypto engine.
      */
@@ -1998,13 +2070,21 @@
     data->set.gssapi_delegation = va_arg(param, long);
     break;
   case CURLOPT_SSL_VERIFYPEER:
     /*
      * Enable peer SSL verifying.
      */
-    data->set.ssl.verifypeer = (0 != va_arg(param, long)) ? TRUE : FALSE;
+    data->set.ssl.primary.verifypeer = (0 != va_arg(param, long)) ?
+                                       TRUE : FALSE;
+    break;
+  case CURLOPT_PROXY_SSL_VERIFYPEER:
+    /*
+     * Enable peer SSL verifying for proxy.
+     */
+    data->set.proxy_ssl.primary.verifypeer =
+      (0 != va_arg(param, long))?TRUE:FALSE;
     break;
   case CURLOPT_SSL_VERIFYHOST:
     /*
      * Enable verification of the host name in the peer certificate
      */
     arg = va_arg(param, long);
@@ -2016,24 +2096,43 @@
 
     if(1 == arg) {
       failf(data, "CURLOPT_SSL_VERIFYHOST no longer supports 1 as value!");
       return CURLE_BAD_FUNCTION_ARGUMENT;
     }
 
-    data->set.ssl.verifyhost = (0 != arg) ? TRUE : FALSE;
+    data->set.ssl.primary.verifyhost = (0 != arg) ? TRUE : FALSE;
+    break;
+  case CURLOPT_PROXY_SSL_VERIFYHOST:
+    /*
+     * Enable verification of the host name in the peer certificate for proxy
+     */
+    arg = va_arg(param, long);
+
+    /* Obviously people are not reading documentation and too many thought
+       this argument took a boolean when it wasn't and misused it. We thus ban
+       1 as a sensible input and we warn about its use. Then we only have the
+       2 action internally stored as TRUE. */
+
+    if(1 == arg) {
+      failf(data, "CURLOPT_SSL_VERIFYHOST no longer supports 1 as value!");
+      return CURLE_BAD_FUNCTION_ARGUMENT;
+    }
+
+    data->set.proxy_ssl.primary.verifyhost = (0 != arg)?TRUE:FALSE;
     break;
   case CURLOPT_SSL_VERIFYSTATUS:
     /*
      * Enable certificate status verifying.
      */
     if(!Curl_ssl_cert_status_request()) {
       result = CURLE_NOT_BUILT_IN;
       break;
     }
 
-    data->set.ssl.verifystatus = (0 != va_arg(param, long)) ? TRUE : FALSE;
+    data->set.ssl.primary.verifystatus = (0 != va_arg(param, long)) ?
+                                         TRUE : FALSE;
     break;
   case CURLOPT_SSL_CTX_FUNCTION:
 #ifdef have_curlssl_ssl_ctx
     /*
      * Set a SSL_CTX callback
      */
@@ -2073,52 +2172,89 @@
   case CURLOPT_PINNEDPUBLICKEY:
 #ifdef have_curlssl_pinnedpubkey /* only by supported backends */
     /*
      * Set pinned public key for SSL connection.
      * Specify file name of the public key in DER format.
      */
-    result = setstropt(&data->set.str[STRING_SSL_PINNEDPUBLICKEY],
+    result = setstropt(&data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG],
+                       va_arg(param, char *));
+#else
+    result = CURLE_NOT_BUILT_IN;
+#endif
+    break;
+  case CURLOPT_PROXY_PINNEDPUBLICKEY:
+#ifdef have_curlssl_pinnedpubkey /* only by supported backends */
+    /*
+     * Set pinned public key for SSL connection.
+     * Specify file name of the public key in DER format.
+     */
+    result = setstropt(&data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY],
                        va_arg(param, char *));
 #else
     result = CURLE_NOT_BUILT_IN;
 #endif
     break;
   case CURLOPT_CAINFO:
     /*
      * Set CA info for SSL connection. Specify file name of the CA certificate
      */
-    result = setstropt(&data->set.str[STRING_SSL_CAFILE],
+    result = setstropt(&data->set.str[STRING_SSL_CAFILE_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_CAINFO:
+    /*
+     * Set CA info SSL connection for proxy. Specify file name of the
+     * CA certificate
+     */
+    result = setstropt(&data->set.str[STRING_SSL_CAFILE_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_CAPATH:
 #ifdef have_curlssl_ca_path /* not supported by all backends */
     /*
      * Set CA path info for SSL connection. Specify directory name of the CA
      * certificates which have been prepared using openssl c_rehash utility.
      */
     /* This does not work on windows. */
-    result = setstropt(&data->set.str[STRING_SSL_CAPATH],
+    result = setstropt(&data->set.str[STRING_SSL_CAPATH_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_CAPATH:
+    /*
+     * Set CA path info for SSL connection proxy. Specify directory name of the
+     * CA certificates which have been prepared using openssl c_rehash utility.
+     */
+    /* This does not work on windows. */
+    result = setstropt(&data->set.str[STRING_SSL_CAPATH_PROXY],
                        va_arg(param, char *));
 #else
     result = CURLE_NOT_BUILT_IN;
 #endif
     break;
   case CURLOPT_CRLFILE:
     /*
      * Set CRL file info for SSL connection. Specify file name of the CRL
      * to check certificates revocation
      */
-    result = setstropt(&data->set.str[STRING_SSL_CRLFILE],
+    result = setstropt(&data->set.str[STRING_SSL_CRLFILE_ORIG],
+                       va_arg(param, char *));
+    break;
+  case CURLOPT_PROXY_CRLFILE:
+    /*
+     * Set CRL file info for SSL connection for proxy. Specify file name of the
+     * CRL to check certificates revocation
+     */
+    result = setstropt(&data->set.str[STRING_SSL_CRLFILE_PROXY],
                        va_arg(param, char *));
     break;
   case CURLOPT_ISSUERCERT:
     /*
      * Set Issuer certificate file
      * to check certificates issuer
      */
-    result = setstropt(&data->set.str[STRING_SSL_ISSUERCERT],
+    result = setstropt(&data->set.str[STRING_SSL_ISSUERCERT_ORIG],
                        va_arg(param, char *));
     break;
   case CURLOPT_TELNETOPTIONS:
     /*
      * Set a linked list of telnet options
      */
@@ -2193,13 +2329,13 @@
         Curl_cookie_cleanup(data->cookies);
         /* enable cookies since we now use a share that uses cookies! */
         data->cookies = data->share->cookies;
       }
 #endif   /* CURL_DISABLE_HTTP */
       if(data->share->sslsession) {
-        data->set.ssl.max_ssl_sessions = data->share->max_ssl_sessions;
+        data->set.general_ssl.max_ssl_sessions = data->share->max_ssl_sessions;
         data->state.session = data->share->sslsession;
       }
       Curl_share_unlock(data, CURL_LOCK_DATA_SHARE);
 
     }
     /* check for host cache not needed,
@@ -2228,14 +2364,20 @@
      */
     data->set.use_ssl = (curl_usessl)va_arg(param, long);
     break;
 
   case CURLOPT_SSL_OPTIONS:
     arg = va_arg(param, long);
-    data->set.ssl_enable_beast = !!(arg & CURLSSLOPT_ALLOW_BEAST);
-    data->set.ssl_no_revoke = !!(arg & CURLSSLOPT_NO_REVOKE);
+    data->set.ssl.enable_beast = arg&CURLSSLOPT_ALLOW_BEAST?TRUE:FALSE;
+    data->set.ssl.no_revoke = !!(arg & CURLSSLOPT_NO_REVOKE);
+    break;
+
+  case CURLOPT_PROXY_SSL_OPTIONS:
+    arg = va_arg(param, long);
+    data->set.proxy_ssl.enable_beast = arg&CURLSSLOPT_ALLOW_BEAST?TRUE:FALSE;
+    data->set.proxy_ssl.no_revoke = !!(arg & CURLSSLOPT_NO_REVOKE);
     break;
 
 #endif
   case CURLOPT_FTPSSLAUTH:
     /*
      * Set a specific auth for FTP-SSL transfers.
@@ -2325,13 +2467,14 @@
      * socket callback data pointer. Might be NULL.
      */
     data->set.closesocket_client = va_arg(param, void *);
     break;
 
   case CURLOPT_SSL_SESSIONID_CACHE:
-    data->set.ssl.sessionid = (0 != va_arg(param, long)) ? TRUE : FALSE;
+    data->set.general_ssl.sessionid = (0 != va_arg(param, long)) ?
+                                      TRUE : FALSE;
     break;
 
 #ifdef USE_LIBSSH2
     /* we only include SSH options if explicitly built to support SSH */
   case CURLOPT_SSH_AUTH_TYPES:
     data->set.ssh_auth_types = va_arg(param, long);
@@ -2592,29 +2735,49 @@
     break;
   case CURLOPT_FNMATCH_DATA:
     data->set.fnmatch_data = va_arg(param, void *);
     break;
 #ifdef USE_TLS_SRP
   case CURLOPT_TLSAUTH_USERNAME:
-    result = setstropt(&data->set.str[STRING_TLSAUTH_USERNAME],
+    result = setstropt(&data->set.str[STRING_TLSAUTH_USERNAME_ORIG],
                        va_arg(param, char *));
-    if(data->set.str[STRING_TLSAUTH_USERNAME] && !data->set.ssl.authtype)
+    if(data->set.str[STRING_TLSAUTH_USERNAME_ORIG] && !data->set.ssl.authtype)
       data->set.ssl.authtype = CURL_TLSAUTH_SRP; /* default to SRP */
     break;
+  case CURLOPT_PROXY_TLSAUTH_USERNAME:
+    result = setstropt(&data->set.str[STRING_TLSAUTH_USERNAME_PROXY],
+                       va_arg(param, char *));
+    if(data->set.str[STRING_TLSAUTH_USERNAME_PROXY] &&
+       !data->set.proxy_ssl.authtype)
+      data->set.proxy_ssl.authtype = CURL_TLSAUTH_SRP; /* default to SRP */
+    break;
   case CURLOPT_TLSAUTH_PASSWORD:
-    result = setstropt(&data->set.str[STRING_TLSAUTH_PASSWORD],
+    result = setstropt(&data->set.str[STRING_TLSAUTH_PASSWORD_ORIG],
                        va_arg(param, char *));
-    if(data->set.str[STRING_TLSAUTH_USERNAME] && !data->set.ssl.authtype)
+    if(data->set.str[STRING_TLSAUTH_USERNAME_ORIG] && !data->set.ssl.authtype)
       data->set.ssl.authtype = CURL_TLSAUTH_SRP; /* default to SRP */
     break;
+  case CURLOPT_PROXY_TLSAUTH_PASSWORD:
+    result = setstropt(&data->set.str[STRING_TLSAUTH_PASSWORD_PROXY],
+                       va_arg(param, char *));
+    if(data->set.str[STRING_TLSAUTH_USERNAME_PROXY] &&
+       !data->set.proxy_ssl.authtype)
+      data->set.proxy_ssl.authtype = CURL_TLSAUTH_SRP; /* default to SRP */
+    break;
   case CURLOPT_TLSAUTH_TYPE:
     if(strncasecompare((char *)va_arg(param, char *), "SRP", strlen("SRP")))
       data->set.ssl.authtype = CURL_TLSAUTH_SRP;
     else
       data->set.ssl.authtype = CURL_TLSAUTH_NONE;
     break;
+  case CURLOPT_PROXY_TLSAUTH_TYPE:
+    if(strncasecompare((char *)va_arg(param, char *), "SRP", strlen("SRP")))
+      data->set.proxy_ssl.authtype = CURL_TLSAUTH_SRP;
+    else
+      data->set.proxy_ssl.authtype = CURL_TLSAUTH_NONE;
+    break;
 #endif
   case CURLOPT_DNS_SERVERS:
     result = Curl_set_dns_servers(data, va_arg(param, char *));
     break;
   case CURLOPT_DNS_INTERFACE:
     result = Curl_set_dns_interface(data, va_arg(param, char *));
@@ -2675,15 +2838,17 @@
   case CURLOPT_STREAM_DEPENDS_E:
   {
 #ifndef USE_NGHTTP2
     return CURLE_NOT_BUILT_IN;
 #else
     struct Curl_easy *dep = va_arg(param, struct Curl_easy *);
-    if(dep && GOOD_EASY_HANDLE(dep)) {
-      data->set.stream_depends_on = dep;
-      data->set.stream_depends_e = (option == CURLOPT_STREAM_DEPENDS_E);
+    if(!dep || GOOD_EASY_HANDLE(dep)) {
+      if(data->set.stream_depends_on) {
+        Curl_http2_remove_child(data->set.stream_depends_on, data);
+      }
+      Curl_http2_add_child(dep, data, (option == CURLOPT_STREAM_DEPENDS_E));
     }
     break;
 #endif
   }
   case CURLOPT_CONNECT_TO:
     data->set.connect_to = va_arg(param, struct curl_slist *);
@@ -2715,16 +2880,16 @@
     psnd->recv_processed = 0;
 #ifdef DEBUGBUILD
     psnd->bindsock = CURL_SOCKET_BAD; /* used only for DEBUGASSERT */
 #endif /* DEBUGBUILD */
   }
   else {
-    DEBUGASSERT (psnd->allocated_size == 0);
-    DEBUGASSERT (psnd->recv_size == 0);
-    DEBUGASSERT (psnd->recv_processed == 0);
-    DEBUGASSERT (psnd->bindsock == CURL_SOCKET_BAD);
+    DEBUGASSERT(psnd->allocated_size == 0);
+    DEBUGASSERT(psnd->recv_size == 0);
+    DEBUGASSERT(psnd->recv_processed == 0);
+    DEBUGASSERT(psnd->bindsock == CURL_SOCKET_BAD);
   }
 }
 
 static void conn_reset_all_postponed_data(struct connectdata *conn)
 {
   conn_reset_postponed_data(conn, 0);
@@ -2765,14 +2930,16 @@
 #endif
 
   Curl_safefree(conn->user);
   Curl_safefree(conn->passwd);
   Curl_safefree(conn->oauth_bearer);
   Curl_safefree(conn->options);
-  Curl_safefree(conn->proxyuser);
-  Curl_safefree(conn->proxypasswd);
+  Curl_safefree(conn->http_proxy.user);
+  Curl_safefree(conn->socks_proxy.user);
+  Curl_safefree(conn->http_proxy.passwd);
+  Curl_safefree(conn->socks_proxy.passwd);
   Curl_safefree(conn->allocptr.proxyuserpwd);
   Curl_safefree(conn->allocptr.uagent);
   Curl_safefree(conn->allocptr.userpwd);
   Curl_safefree(conn->allocptr.accept_encoding);
   Curl_safefree(conn->allocptr.te);
   Curl_safefree(conn->allocptr.rangeline);
@@ -2780,25 +2947,32 @@
   Curl_safefree(conn->allocptr.host);
   Curl_safefree(conn->allocptr.cookiehost);
   Curl_safefree(conn->allocptr.rtsp_transport);
   Curl_safefree(conn->trailer);
   Curl_safefree(conn->host.rawalloc); /* host name buffer */
   Curl_safefree(conn->conn_to_host.rawalloc); /* host name buffer */
-  Curl_safefree(conn->proxy.rawalloc); /* proxy name buffer */
+  Curl_safefree(conn->secondaryhostname);
+  Curl_safefree(conn->http_proxy.host.rawalloc); /* http proxy name buffer */
+  Curl_safefree(conn->socks_proxy.host.rawalloc); /* socks proxy name buffer */
   Curl_safefree(conn->master_buffer);
 
   conn_reset_all_postponed_data(conn);
 
   Curl_llist_destroy(conn->send_pipe, NULL);
   Curl_llist_destroy(conn->recv_pipe, NULL);
 
   conn->send_pipe = NULL;
   conn->recv_pipe = NULL;
 
   Curl_safefree(conn->localdev);
-  Curl_free_ssl_config(&conn->ssl_config);
+  Curl_free_primary_ssl_config(&conn->ssl_config);
+  Curl_free_primary_ssl_config(&conn->proxy_ssl_config);
+
+#ifdef USE_UNIX_SOCKETS
+  Curl_safefree(conn->unix_domain_socket);
+#endif
 
   free(conn); /* free all the connection oriented data */
 }
 
 /*
  * Disconnects the given connection. Note the connection may not be the
@@ -2853,12 +3027,14 @@
   infof(data, "Closing connection %ld\n", conn->connection_id);
   Curl_conncache_remove_conn(data->state.conn_cache, conn);
 
   free_fixed_hostname(&conn->host);
   free_fixed_hostname(&conn->conn_to_host);
   free_fixed_hostname(&conn->proxy);
+  free_fixed_hostname(&conn->http_proxy.host);
+  free_fixed_hostname(&conn->socks_proxy.host);
 
   Curl_ssl_close(conn, FIRSTSOCKET);
 
   /* Indicate to all handles on the pipe that we're dead */
   if(Curl_pipeline_wanted(data->multi, CURLPIPE_ANY)) {
     signalPipeClose(conn->send_pipe, TRUE);
@@ -3011,14 +3187,14 @@
 Curl_oldest_idle_connection(struct Curl_easy *data)
 {
   struct conncache *bc = data->state.conn_cache;
   struct curl_hash_iterator iter;
   struct curl_llist_element *curr;
   struct curl_hash_element *he;
-  long highscore=-1;
-  long score;
+  time_t highscore=-1;
+  time_t score;
   struct timeval now;
   struct connectdata *conn_candidate = NULL;
   struct connectbundle *bundle;
 
   now = Curl_tvnow();
 
@@ -3049,26 +3225,41 @@
     he = Curl_hash_next_element(&iter);
   }
 
   return conn_candidate;
 }
 
+static bool
+proxy_info_matches(const struct proxy_info* data,
+                   const struct proxy_info* needle)
+{
+  if((data->proxytype == needle->proxytype) &&
+     (data->port == needle->port) &&
+     Curl_safe_strcasecompare(data->host.name, needle->host.name) &&
+     Curl_safe_strcasecompare(data->user, needle->user) &&
+     Curl_safe_strcasecompare(data->passwd, needle->passwd))
+    return TRUE;
+
+  return FALSE;
+}
+
+
 /*
  * This function finds the connection in the connection
  * bundle that has been unused for the longest time.
  *
  * Returns the pointer to the oldest idle connection, or NULL if none was
  * found.
  */
 static struct connectdata *
 find_oldest_idle_connection_in_bundle(struct Curl_easy *data,
                                       struct connectbundle *bundle)
 {
   struct curl_llist_element *curr;
-  long highscore=-1;
-  long score;
+  time_t highscore=-1;
+  time_t score;
   struct timeval now;
   struct connectdata *conn_candidate = NULL;
   struct connectdata *conn;
 
   (void)data;
 
@@ -3144,13 +3335,13 @@
  * closes and removes them.
  * The cleanup is done at most once per second.
  */
 static void prune_dead_connections(struct Curl_easy *data)
 {
   struct timeval now = Curl_tvnow();
-  long elapsed = Curl_tvdiff(now, data->state.conn_cache->last_cleanup);
+  time_t elapsed = Curl_tvdiff(now, data->state.conn_cache->last_cleanup);
 
   if(elapsed >= 1000L) {
     Curl_conncache_foreach(data->state.conn_cache, data,
                            call_disconnect_if_dead);
     data->state.conn_cache->last_cleanup = now;
   }
@@ -3323,49 +3514,76 @@
           }
 #endif
           continue;
         }
       }
 
+#ifdef USE_UNIX_SOCKETS
+      if(needle->unix_domain_socket) {
+        if(!check->unix_domain_socket)
+          continue;
+        if(strcmp(needle->unix_domain_socket, check->unix_domain_socket))
+          continue;
+      }
+      else if(check->unix_domain_socket)
+        continue;
+#endif
+
       if((needle->handler->flags&PROTOPT_SSL) !=
          (check->handler->flags&PROTOPT_SSL))
         /* don't do mixed SSL and non-SSL connections */
         if(get_protocol_family(check->handler->protocol) !=
            needle->handler->protocol || !check->tls_upgraded)
           /* except protocols that have been upgraded via TLS */
           continue;
 
-      if(needle->handler->flags&PROTOPT_SSL) {
-        if((data->set.ssl.verifypeer != check->verifypeer) ||
-           (data->set.ssl.verifyhost != check->verifyhost))
-          continue;
-      }
-
-      if(needle->bits.proxy != check->bits.proxy)
-        /* don't do mixed proxy and non-proxy connections */
+      if(needle->bits.httpproxy != check->bits.httpproxy ||
+         needle->bits.socksproxy != check->bits.socksproxy)
         continue;
 
-      if(needle->bits.proxy &&
-         (needle->proxytype != check->proxytype ||
-          needle->bits.httpproxy != check->bits.httpproxy ||
-          needle->bits.tunnel_proxy != check->bits.tunnel_proxy ||
-          !strcasecompare(needle->proxy.name, check->proxy.name) ||
-          needle->port != check->port))
-        /* don't mix connections that use different proxies */
+      if(needle->bits.socksproxy && !proxy_info_matches(&needle->socks_proxy,
+                                                        &check->socks_proxy))
         continue;
 
       if(needle->bits.conn_to_host != check->bits.conn_to_host)
         /* don't mix connections that use the "connect to host" feature and
          * connections that don't use this feature */
         continue;
 
       if(needle->bits.conn_to_port != check->bits.conn_to_port)
         /* don't mix connections that use the "connect to port" feature and
          * connections that don't use this feature */
         continue;
 
+      if(needle->bits.httpproxy) {
+        if(!proxy_info_matches(&needle->http_proxy, &check->http_proxy))
+          continue;
+
+        if(needle->bits.tunnel_proxy != check->bits.tunnel_proxy)
+          continue;
+
+        if(needle->http_proxy.proxytype == CURLPROXY_HTTPS) {
+          /* use https proxy */
+          if(needle->handler->flags&PROTOPT_SSL) {
+            /* use double layer ssl */
+            if(!Curl_ssl_config_matches(&needle->proxy_ssl_config,
+                                        &check->proxy_ssl_config))
+              continue;
+            if(check->proxy_ssl[FIRSTSOCKET].state != ssl_connection_complete)
+              continue;
+          }
+          else {
+            if(!Curl_ssl_config_matches(&needle->ssl_config,
+                                        &check->ssl_config))
+              continue;
+            if(check->ssl[FIRSTSOCKET].state != ssl_connection_complete)
+              continue;
+          }
+        }
+      }
+
       if(!canPipeline && check->inuse)
         /* this request can't be pipelined but the checked connection is
            already in use so we skip it */
         continue;
 
       if(needle->localdev || needle->localport) {
@@ -3379,15 +3597,14 @@
            Instead, this matching will assume that re-uses of bound connections
            will most likely also re-use the exact same binding parameters and
            missing out a few edge cases shouldn't hurt anyone very much.
         */
         if((check->localport != needle->localport) ||
            (check->localportrange != needle->localportrange) ||
-           !check->localdev ||
-           !needle->localdev ||
-           strcmp(check->localdev, needle->localdev))
+           (needle->localdev &&
+            (!check->localdev || strcmp(check->localdev, needle->localdev))))
           continue;
       }
 
       if(!(needle->handler->flags & PROTOPT_CREDSPERREQUEST)) {
         /* This protocol requires credentials per connection,
            so verify that we're using the same name and password as well */
@@ -3396,16 +3613,17 @@
           /* one of them was different */
           continue;
         }
       }
 
       if(!needle->bits.httpproxy || (needle->handler->flags&PROTOPT_SSL) ||
-         (needle->bits.httpproxy && needle->bits.tunnel_proxy)) {
+         needle->bits.tunnel_proxy) {
         /* The requested connection does not use a HTTP proxy or it uses SSL or
-           it is a non-SSL protocol tunneled over the same HTTP proxy name and
-           port number */
+           it is a non-SSL protocol tunneled or it is a non-SSL protocol which
+           is allowed to be upgraded via TLS */
+
         if((strcasecompare(needle->handler->scheme, check->handler->scheme) ||
             (get_protocol_family(check->handler->protocol) ==
              needle->handler->protocol && check->tls_upgraded)) &&
            (!needle->bits.conn_to_host || strcasecompare(
             needle->conn_to_host.name, check->conn_to_host.name)) &&
            (!needle->bits.conn_to_port ||
@@ -3460,18 +3678,19 @@
           /* Connection is using NTLM auth but we don't want NTLM */
           continue;
         }
 
         /* Same for Proxy NTLM authentication */
         if(wantProxyNTLMhttp) {
-          /* Both check->proxyuser and check->proxypasswd can be NULL */
-          if(!check->proxyuser || !check->proxypasswd)
+          /* Both check->http_proxy.user and check->http_proxy.passwd can be
+           * NULL */
+          if(!check->http_proxy.user || !check->http_proxy.passwd)
             continue;
 
-          if(strcmp(needle->proxyuser, check->proxyuser) ||
-             strcmp(needle->proxypasswd, check->proxypasswd))
+          if(strcmp(needle->http_proxy.user, check->http_proxy.user) ||
+             strcmp(needle->http_proxy.passwd, check->http_proxy.passwd))
             continue;
         }
         else if(check->proxyntlm.state != NTLMSTATE_NONE) {
           /* Proxy connection is using NTLM auth but we don't want NTLM */
           continue;
         }
@@ -3569,68 +3788,67 @@
 /* after a TCP connection to the proxy has been verified, this function does
    the next magic step.
 
    Note: this function's sub-functions call failf()
 
 */
-CURLcode Curl_connected_proxy(struct connectdata *conn,
-                              int sockindex)
+CURLcode Curl_connected_proxy(struct connectdata *conn, int sockindex)
 {
-  if(!conn->bits.proxy || sockindex)
-    /* this magic only works for the primary socket as the secondary is used
-       for FTP only and it has FTP specific magic in ftp.c */
-    return CURLE_OK;
+  CURLcode result = CURLE_OK;
 
-  switch(conn->proxytype) {
+  if(conn->bits.socksproxy) {
 #ifndef CURL_DISABLE_PROXY
-  case CURLPROXY_SOCKS5:
-  case CURLPROXY_SOCKS5_HOSTNAME:
-    return Curl_SOCKS5(conn->proxyuser, conn->proxypasswd,
-                       conn->bits.conn_to_host ? conn->conn_to_host.name :
-                       conn->host.name,
-                       conn->bits.conn_to_port ? conn->conn_to_port :
-                       conn->remote_port,
-                       FIRSTSOCKET, conn);
-
-  case CURLPROXY_SOCKS4:
-    return Curl_SOCKS4(conn->proxyuser,
-                       conn->bits.conn_to_host ? conn->conn_to_host.name :
-                       conn->host.name,
-                       conn->bits.conn_to_port ? conn->conn_to_port :
-                       conn->remote_port,
-                       FIRSTSOCKET, conn, FALSE);
-
-  case CURLPROXY_SOCKS4A:
-    return Curl_SOCKS4(conn->proxyuser,
-                       conn->bits.conn_to_host ? conn->conn_to_host.name :
-                       conn->host.name,
-                       conn->bits.conn_to_port ? conn->conn_to_port :
-                       conn->remote_port,
-                       FIRSTSOCKET, conn, TRUE);
+    const char * const host = conn->bits.conn_to_host ?
+                              conn->conn_to_host.name :
+                              conn->bits.httpproxy ?
+                              conn->http_proxy.host.name :
+                              sockindex == SECONDARYSOCKET ?
+                              conn->secondaryhostname : conn->host.name;
+    const int port = conn->bits.conn_to_port ? conn->conn_to_port :
+                     conn->bits.httpproxy ?
+                     (int)conn->http_proxy.port :
+                     sockindex == SECONDARYSOCKET ?
+                      conn->secondary_port : conn->remote_port;
+    conn->bits.socksproxy_connecting = TRUE;
+    switch(conn->socks_proxy.proxytype) {
+    case CURLPROXY_SOCKS5:
+    case CURLPROXY_SOCKS5_HOSTNAME:
+      result = Curl_SOCKS5(conn->socks_proxy.user, conn->socks_proxy.passwd,
+                         host, port, sockindex, conn);
+      break;
+
+    case CURLPROXY_SOCKS4:
+    case CURLPROXY_SOCKS4A:
+      result = Curl_SOCKS4(conn->socks_proxy.user, host, port, sockindex,
+                           conn);
+      break;
 
+    default:
+      failf(conn->data, "unknown proxytype option given");
+      result = CURLE_COULDNT_CONNECT;
+    } /* switch proxytype */
+    conn->bits.socksproxy_connecting = FALSE;
+#else
+  (void)sockindex;
 #endif /* CURL_DISABLE_PROXY */
-  case CURLPROXY_HTTP:
-  case CURLPROXY_HTTP_1_0:
-    /* do nothing here. handled later. */
-    break;
-  default:
-    break;
-  } /* switch proxytype */
+  }
 
-  return CURLE_OK;
+  return result;
 }
 
 /*
  * verboseconnect() displays verbose information after a connect
  */
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
 void Curl_verboseconnect(struct connectdata *conn)
 {
   if(conn->data->set.verbose)
     infof(conn->data, "Connected to %s (%s) port %ld (#%ld)\n",
-          conn->bits.proxy ? conn->proxy.dispname : conn->host.dispname,
+          conn->bits.socksproxy ? conn->socks_proxy.host.dispname :
+          conn->bits.httpproxy ? conn->http_proxy.host.dispname :
+                             conn->host.dispname,
           conn->ip_addr_str, conn->port, conn->connection_id);
 }
 #endif
 
 int Curl_protocol_getsock(struct connectdata *conn,
                           curl_socket_t *socks,
@@ -3714,16 +3932,20 @@
 
     return CURLE_OK;
   }
 
   if(!conn->bits.protoconnstart) {
 
-    result = Curl_proxy_connect(conn);
+    result = Curl_proxy_connect(conn, FIRSTSOCKET);
     if(result)
       return result;
 
+    if(CONNECT_FIRSTSOCKET_PROXY_SSL())
+      /* wait for HTTPS proxy SSL initialization to complete */
+      return CURLE_OK;
+
     if(conn->bits.tunnel_proxy && conn->bits.httpproxy &&
        (conn->tunnel_state[FIRSTSOCKET] != TUNNEL_COMPLETE))
       /* when using an HTTP tunnel proxy, await complete tunnel establishment
          before proceeding further. Return CURLE_OK so we'll be called again */
       return CURLE_OK;
 
@@ -3747,13 +3969,13 @@
 
 /*
  * Helpers for IDNA convertions.
  */
 static bool is_ASCII_name(const char *hostname)
 {
-  const unsigned char *ch = (const unsigned char*)hostname;
+  const unsigned char *ch = (const unsigned char *)hostname;
 
   while(*ch) {
     if(*ch++ & 0x80)
       return FALSE;
   }
   return TRUE;
@@ -3876,43 +4098,56 @@
   /* Store creation time to help future close decision making */
   conn->created = Curl_tvnow();
 
   conn->data = data; /* Setup the association between this connection
                         and the Curl_easy */
 
-  conn->proxytype = data->set.proxytype; /* type */
+  conn->http_proxy.proxytype = data->set.proxytype;
+  conn->socks_proxy.proxytype = CURLPROXY_SOCKS4;
 
 #ifdef CURL_DISABLE_PROXY
 
   conn->bits.proxy = FALSE;
   conn->bits.httpproxy = FALSE;
+  conn->bits.socksproxy = FALSE;
   conn->bits.proxy_user_passwd = FALSE;
   conn->bits.tunnel_proxy = FALSE;
 
 #else /* CURL_DISABLE_PROXY */
 
   /* note that these two proxy bits are now just on what looks to be
      requested, they may be altered down the road */
   conn->bits.proxy = (data->set.str[STRING_PROXY] &&
                       *data->set.str[STRING_PROXY]) ? TRUE : FALSE;
   conn->bits.httpproxy = (conn->bits.proxy &&
-                          (conn->proxytype == CURLPROXY_HTTP ||
-                           conn->proxytype == CURLPROXY_HTTP_1_0)) ?
-                          TRUE : FALSE;
-  conn->bits.proxy_user_passwd = (data->set.str[STRING_PROXYUSERNAME]) ?
-                                 TRUE : FALSE;
+                          (conn->http_proxy.proxytype == CURLPROXY_HTTP ||
+                           conn->http_proxy.proxytype == CURLPROXY_HTTP_1_0 ||
+                           conn->http_proxy.proxytype == CURLPROXY_HTTPS)) ?
+                           TRUE : FALSE;
+  conn->bits.socksproxy = (conn->bits.proxy &&
+                           !conn->bits.httpproxy) ? TRUE : FALSE;
+
+  if(data->set.str[STRING_PRE_PROXY] && *data->set.str[STRING_PRE_PROXY]) {
+    conn->bits.proxy = TRUE;
+    conn->bits.socksproxy = TRUE;
+  }
+
+  conn->bits.proxy_user_passwd =
+    (data->set.str[STRING_PROXYUSERNAME]) ? TRUE : FALSE;
   conn->bits.tunnel_proxy = data->set.tunnel_thru_httpproxy;
 
 #endif /* CURL_DISABLE_PROXY */
 
   conn->bits.user_passwd = (data->set.str[STRING_USERNAME]) ? TRUE : FALSE;
   conn->bits.ftp_use_epsv = data->set.ftp_use_epsv;
   conn->bits.ftp_use_eprt = data->set.ftp_use_eprt;
 
-  conn->verifypeer = data->set.ssl.verifypeer;
-  conn->verifyhost = data->set.ssl.verifyhost;
+  conn->ssl_config.verifypeer = data->set.ssl.primary.verifypeer;
+  conn->ssl_config.verifyhost = data->set.ssl.primary.verifyhost;
+  conn->proxy_ssl_config.verifypeer = data->set.proxy_ssl.primary.verifypeer;
+  conn->proxy_ssl_config.verifyhost = data->set.proxy_ssl.primary.verifyhost;
 
   conn->ip_version = data->set.ipver;
 
 #if !defined(CURL_DISABLE_HTTP) && defined(USE_NTLM) && \
     defined(NTLM_WB_ENABLED)
   conn->ntlm_auth_hlpr_socket = CURL_SOCKET_BAD;
@@ -3921,13 +4156,13 @@
   conn->response_header = NULL;
 #endif
 
   if(Curl_pipeline_wanted(data->multi, CURLPIPE_HTTP1) &&
      !conn->master_buffer) {
     /* Allocate master_buffer to be used for HTTP/1 pipelining */
-    conn->master_buffer = calloc(BUFSIZE, sizeof (char));
+    conn->master_buffer = calloc(BUFSIZE, sizeof(char));
     if(!conn->master_buffer)
       goto error;
   }
 
   /* Initialize the pipeline lists */
   conn->send_pipe = Curl_llist_alloc((curl_llist_dtor) llist_dtor);
@@ -4062,39 +4297,44 @@
     /*
      * we deal with file://<host>/<path> differently since it supports no
      * hostname other than "localhost" and "127.0.0.1", which is unique among
      * the URL protocols specified in RFC 1738
      */
     if(path[0] != '/') {
-      /* the URL included a host name, we ignore host names in file:// URLs
-         as the standards don't define what to do with them */
-      char *ptr=strchr(path, '/');
-      if(ptr) {
-        /* there was a slash present
-
-           RFC1738 (section 3.1, page 5) says:
-
-           The rest of the locator consists of data specific to the scheme,
-           and is known as the "url-path". It supplies the details of how the
-           specified resource can be accessed. Note that the "/" between the
-           host (or port) and the url-path is NOT part of the url-path.
-
-           As most agents use file://localhost/foo to get '/foo' although the
-           slash preceding foo is a separator and not a slash for the path,
-           a URL as file://localhost//foo must be valid as well, to refer to
-           the same file with an absolute path.
-        */
+      /* the URL includes a host name, it must match "localhost" or
+         "127.0.0.1" to be valid */
+      char *ptr;
+      if(!checkprefix("localhost/", path) &&
+         !checkprefix("127.0.0.1/", path)) {
+        failf(data, "Valid host name with slash missing in URL");
+        return CURLE_URL_MALFORMAT;
+      }
+      ptr = &path[9]; /* now points to the slash after the host */
+
+      /* there was a host name and slash present
+
+         RFC1738 (section 3.1, page 5) says:
+
+         The rest of the locator consists of data specific to the scheme,
+         and is known as the "url-path". It supplies the details of how the
+         specified resource can be accessed. Note that the "/" between the
+         host (or port) and the url-path is NOT part of the url-path.
+
+         As most agents use file://localhost/foo to get '/foo' although the
+         slash preceding foo is a separator and not a slash for the path,
+         a URL as file://localhost//foo must be valid as well, to refer to
+         the same file with an absolute path.
+      */
 
-        if(ptr[1] && ('/' == ptr[1]))
-          /* if there was two slashes, we skip the first one as that is then
-             used truly as a separator */
-          ptr++;
+      if('/' == ptr[1])
+        /* if there was two slashes, we skip the first one as that is then
+           used truly as a separator */
+        ptr++;
 
-        /* This cannot be made with strcpy, as the memory chunks overlap! */
-        memmove(path, ptr, strlen(ptr)+1);
-      }
+      /* This cannot be made with strcpy, as the memory chunks overlap! */
+      memmove(path, ptr, strlen(ptr)+1);
     }
 
     protop = "file"; /* protocol string */
   }
   else {
     /* clear path */
@@ -4470,22 +4710,22 @@
 
 #ifndef CURL_DISABLE_PROXY
 /****************************************************************
 * Checks if the host is in the noproxy list. returns true if it matches
 * and therefore the proxy should NOT be used.
 ****************************************************************/
-static bool check_noproxy(const char* name, const char* no_proxy)
+static bool check_noproxy(const char *name, const char *no_proxy)
 {
   /* no_proxy=domain1.dom,host.domain2.dom
    *   (a comma-separated list of hosts which should
    *   not be proxied, or an asterisk to override
    *   all proxy variables)
    */
   size_t tok_start;
   size_t tok_end;
-  const char* separator = ", ";
+  const char *separator = ", ";
   size_t no_proxy_len;
   size_t namelen;
   char *endptr;
 
   if(no_proxy && no_proxy[0]) {
     if(strcasecompare("*", no_proxy)) {
@@ -4633,97 +4873,78 @@
 /*
  * If this is supposed to use a proxy, we need to figure out the proxy
  * host name, so that we can re-use an existing connection
  * that may exist registered to the same proxy host.
  */
 static CURLcode parse_proxy(struct Curl_easy *data,
-                            struct connectdata *conn, char *proxy)
+                            struct connectdata *conn, char *proxy,
+                            curl_proxytype proxytype)
 {
   char *prox_portno;
   char *endofprot;
 
   /* We use 'proxyptr' to point to the proxy name from now on... */
   char *proxyptr;
   char *portptr;
   char *atsign;
+  long port = -1;
+  char *proxyuser = NULL;
+  char *proxypasswd = NULL;
+  bool sockstype;
 
   /* We do the proxy host string parsing here. We want the host name and the
    * port name. Accept a protocol:// prefix
    */
 
   /* Parse the protocol part if present */
   endofprot = strstr(proxy, "://");
   if(endofprot) {
     proxyptr = endofprot+3;
-    if(checkprefix("socks5h", proxy))
-      conn->proxytype = CURLPROXY_SOCKS5_HOSTNAME;
+    if(checkprefix("https", proxy))
+      proxytype = CURLPROXY_HTTPS;
+    else if(checkprefix("socks5h", proxy))
+      proxytype = CURLPROXY_SOCKS5_HOSTNAME;
     else if(checkprefix("socks5", proxy))
-      conn->proxytype = CURLPROXY_SOCKS5;
+      proxytype = CURLPROXY_SOCKS5;
     else if(checkprefix("socks4a", proxy))
-      conn->proxytype = CURLPROXY_SOCKS4A;
+      proxytype = CURLPROXY_SOCKS4A;
     else if(checkprefix("socks4", proxy) || checkprefix("socks", proxy))
-      conn->proxytype = CURLPROXY_SOCKS4;
+      proxytype = CURLPROXY_SOCKS4;
     else if(checkprefix("http:", proxy))
       ; /* leave it as HTTP or HTTP/1.0 */
     else {
       /* Any other xxx:// reject! */
       failf(data, "Unsupported proxy scheme for \'%s\'", proxy);
       return CURLE_COULDNT_CONNECT;
     }
   }
   else
     proxyptr = proxy; /* No xxx:// head: It's a HTTP proxy */
 
+#ifndef HTTPS_PROXY_SUPPORT
+  if(proxytype == CURLPROXY_HTTPS) {
+    failf(data, "Unsupported proxy \'%s\'"
+                ", libcurl is built without the HTTPS-proxy support.", proxy);
+    return CURLE_NOT_BUILT_IN;
+  }
+#endif
+
+  sockstype = proxytype == CURLPROXY_SOCKS5_HOSTNAME ||
+              proxytype == CURLPROXY_SOCKS5 ||
+              proxytype == CURLPROXY_SOCKS4A ||
+              proxytype == CURLPROXY_SOCKS4;
+
   /* Is there a username and password given in this proxy url? */
   atsign = strchr(proxyptr, '@');
   if(atsign) {
-    char *proxyuser = NULL;
-    char *proxypasswd = NULL;
     CURLcode result =
       parse_login_details(proxyptr, atsign - proxyptr,
-                          &proxyuser, &proxypasswd, NULL);
-    if(!result) {
-      /* found user and password, rip them out.  note that we are
-         unescaping them, as there is otherwise no way to have a
-         username or password with reserved characters like ':' in
-         them. */
-      Curl_safefree(conn->proxyuser);
-      if(proxyuser && strlen(proxyuser) < MAX_CURL_USER_LENGTH)
-        result = Curl_urldecode(data, proxyuser, 0, &conn->proxyuser, NULL,
-                                FALSE);
-      else {
-        conn->proxyuser = strdup("");
-        if(!conn->proxyuser)
-          result = CURLE_OUT_OF_MEMORY;
-      }
-
-      if(!result) {
-        Curl_safefree(conn->proxypasswd);
-        if(proxypasswd && strlen(proxypasswd) < MAX_CURL_PASSWORD_LENGTH)
-          result = Curl_urldecode(data, proxypasswd, 0,
-                                  &conn->proxypasswd, NULL, FALSE);
-        else {
-          conn->proxypasswd = strdup("");
-          if(!conn->proxypasswd)
-            result = CURLE_OUT_OF_MEMORY;
-        }
-      }
-
-      if(!result) {
-        conn->bits.proxy_user_passwd = TRUE; /* enable it */
-        atsign++; /* the right side of the @-letter */
-
-        proxyptr = atsign; /* now use this instead */
-      }
-    }
-
-    free(proxyuser);
-    free(proxypasswd);
-
+                              &proxyuser, &proxypasswd, NULL);
     if(result)
       return result;
+    proxyptr = atsign + 1;
   }
 
   /* start scanning for port number at this point */
   portptr = proxyptr;
 
   /* detect and extract RFC6874-style IPv6-addresses */
@@ -4754,13 +4975,13 @@
   }
 
   /* Get port number off proxy.server.com:1080 */
   prox_portno = strchr(portptr, ':');
   if(prox_portno) {
     char *endp = NULL;
-    long port = 0;
+
     *prox_portno = 0x0; /* cut off number from host name */
     prox_portno ++;
     /* now set the local port number */
     port = strtol(prox_portno, &endp, 10);
     if((endp && *endp && (*endp != '/') && (*endp != ' ')) ||
        (port < 0) || (port > 65535)) {
@@ -4788,21 +5009,65 @@
     if(atsign)
       *atsign = '\0'; /* cut off path part from host name */
 
     if(data->set.proxyport)
       /* None given in the proxy string, then get the default one if it is
          given */
-      conn->port = data->set.proxyport;
+      port = data->set.proxyport;
+    else {
+      if(proxytype == CURLPROXY_HTTPS)
+        port = CURL_DEFAULT_HTTPS_PROXY_PORT;
+      else
+        port = CURL_DEFAULT_PROXY_PORT;
+    }
   }
 
-  /* now, clone the cleaned proxy host name */
-  conn->proxy.rawalloc = strdup(proxyptr);
-  conn->proxy.name = conn->proxy.rawalloc;
+  if(*proxyptr) {
+    struct proxy_info *proxyinfo =
+      sockstype ? &conn->socks_proxy : &conn->http_proxy;
+    proxyinfo->proxytype = proxytype;
 
-  if(!conn->proxy.rawalloc)
-    return CURLE_OUT_OF_MEMORY;
+    if(proxyuser) {
+      /* found user and password, rip them out.  note that we are unescaping
+         them, as there is otherwise no way to have a username or password
+         with reserved characters like ':' in them. */
+      Curl_safefree(proxyinfo->user);
+      proxyinfo->user = curl_easy_unescape(data, proxyuser, 0, NULL);
+
+      if(!proxyinfo->user)
+        return CURLE_OUT_OF_MEMORY;
+
+      Curl_safefree(proxyinfo->passwd);
+      if(proxypasswd && strlen(proxypasswd) < MAX_CURL_PASSWORD_LENGTH)
+        proxyinfo->passwd = curl_easy_unescape(data, proxypasswd, 0, NULL);
+      else
+        proxyinfo->passwd = strdup("");
+
+      if(!proxyinfo->passwd)
+        return CURLE_OUT_OF_MEMORY;
+
+      conn->bits.proxy_user_passwd = TRUE; /* enable it */
+    }
+
+    if(port >= 0) {
+      proxyinfo->port = port;
+      if(conn->port < 0 || sockstype || !conn->socks_proxy.host.rawalloc)
+        conn->port = port;
+    }
+
+    /* now, clone the cleaned proxy host name */
+    Curl_safefree(proxyinfo->host.rawalloc);
+    proxyinfo->host.rawalloc = strdup(proxyptr);
+    proxyinfo->host.name = proxyinfo->host.rawalloc;
+
+    if(!proxyinfo->host.rawalloc)
+      return CURLE_OUT_OF_MEMORY;
+  }
+
+  Curl_safefree(proxyuser);
+  Curl_safefree(proxypasswd);
 
   return CURLE_OK;
 }
 
 /*
  * Extract the user and password from the authentication string
@@ -4822,16 +5087,17 @@
   if(data->set.str[STRING_PROXYPASSWORD] != NULL) {
     strncpy(proxypasswd, data->set.str[STRING_PROXYPASSWORD],
             MAX_CURL_PASSWORD_LENGTH);
     proxypasswd[MAX_CURL_PASSWORD_LENGTH-1] = '\0'; /*To be on safe side*/
   }
 
-  result = Curl_urldecode(data, proxyuser, 0, &conn->proxyuser, NULL, FALSE);
+  result = Curl_urldecode(data, proxyuser, 0, &conn->http_proxy.user, NULL,
+                          FALSE);
   if(!result)
-    result = Curl_urldecode(data, proxypasswd, 0, &conn->proxypasswd, NULL,
-                            FALSE);
+    result = Curl_urldecode(data, proxypasswd, 0, &conn->http_proxy.passwd,
+                            NULL, FALSE);
   return result;
 }
 #endif /* CURL_DISABLE_PROXY */
 
 /*
  * parse_url_login()
@@ -5177,17 +5443,22 @@
     }
 
     else if(rest != &portptr[1]) {
       *portptr = '\0'; /* cut off the name there */
       conn->remote_port = curlx_ultous(port);
     }
-    else
+    else {
+      if(rest[0]) {
+        failf(data, "Illegal port number");
+        return CURLE_URL_MALFORMAT;
+      }
       /* Browser behavior adaptation. If there's a colon with no digits after,
          just cut off the name there which makes us ignore the colon and just
          use the default port. Firefox and Chrome both do that. */
       *portptr = '\0';
+    }
   }
 
   /* only if remote_port was not already parsed off the URL we use the
      default port number */
   if(conn->remote_port < 0)
     conn->remote_port = (unsigned short)conn->given->defport;
@@ -5401,12 +5672,15 @@
 {
   CURLcode result = CURLE_OK;
   const char *ptr = conn_to_host;
   int host_match = FALSE;
   int port_match = FALSE;
 
+  *host_result = NULL;
+  *port_result = -1;
+
   if(*ptr == ':') {
     /* an empty hostname always matches */
     host_match = TRUE;
     ptr++;
   }
   else {
@@ -5463,15 +5737,15 @@
 static CURLcode parse_connect_to_slist(struct Curl_easy *data,
                                        struct connectdata *conn,
                                        struct curl_slist *conn_to_host)
 {
   CURLcode result = CURLE_OK;
   char *host = NULL;
-  int port = 0;
+  int port = -1;
 
-  while(conn_to_host && !host) {
+  while(conn_to_host && !host && port == -1) {
     result = parse_connect_to_string(data, conn, conn_to_host->data,
                                      &host, &port);
     if(result)
       return result;
 
     if(host && *host) {
@@ -5484,23 +5758,24 @@
       infof(data, "Connecting to hostname: %s%s%s\n",
             ipv6host ? "[" : "", host, ipv6host ? "]" : "");
     }
     else {
       /* no "connect to host" */
       conn->bits.conn_to_host = FALSE;
-      free(host);
+      Curl_safefree(host);
     }
 
     if(port >= 0) {
       conn->conn_to_port = port;
       conn->bits.conn_to_port = TRUE;
       infof(data, "Connecting to port: %d\n", port);
     }
     else {
       /* no "connect to port" */
       conn->bits.conn_to_port = FALSE;
+      port = -1;
     }
 
     conn_to_host = conn_to_host->next;
   }
 
   return result;
@@ -5511,13 +5786,13 @@
  *************************************************************/
 static CURLcode resolve_server(struct Curl_easy *data,
                                struct connectdata *conn,
                                bool *async)
 {
   CURLcode result=CURLE_OK;
-  long timeout_ms = Curl_timeleft(data, NULL, TRUE);
+  time_t timeout_ms = Curl_timeleft(data, NULL, TRUE);
 
   /*************************************************************
    * Resolve the name of the server or proxy
    *************************************************************/
   if(conn->bits.reuse)
     /* We're reusing the connection - no need to resolve anything, and
@@ -5528,38 +5803,42 @@
   else {
     /* this is a fresh connect */
     int rc;
     struct Curl_dns_entry *hostaddr;
 
 #ifdef USE_UNIX_SOCKETS
-    if(data->set.str[STRING_UNIX_SOCKET_PATH]) {
+    if(conn->unix_domain_socket) {
       /* Unix domain sockets are local. The host gets ignored, just use the
        * specified domain socket address. Do not cache "DNS entries". There is
        * no DNS involved and we already have the filesystem path available */
-      const char *path = data->set.str[STRING_UNIX_SOCKET_PATH];
+      const char *path = conn->unix_domain_socket;
 
       hostaddr = calloc(1, sizeof(struct Curl_dns_entry));
       if(!hostaddr)
         result = CURLE_OUT_OF_MEMORY;
-      else if((hostaddr->addr = Curl_unix2addr(path)) != NULL)
-        hostaddr->inuse++;
       else {
-        /* Long paths are not supported for now */
-        if(strlen(path) >= sizeof(((struct sockaddr_un *)0)->sun_path)) {
-          failf(data, "Unix socket path too long: '%s'", path);
-          result = CURLE_COULDNT_RESOLVE_HOST;
+        int longpath=0;
+        hostaddr->addr = Curl_unix2addr(path, &longpath);
+        if(hostaddr->addr)
+          hostaddr->inuse++;
+        else {
+          /* Long paths are not supported for now */
+          if(longpath) {
+            failf(data, "Unix socket path too long: '%s'", path);
+            result = CURLE_COULDNT_RESOLVE_HOST;
+          }
+          else
+            result = CURLE_OUT_OF_MEMORY;
+          free(hostaddr);
+          hostaddr = NULL;
         }
-        else
-          result = CURLE_OUT_OF_MEMORY;
-        free(hostaddr);
-        hostaddr = NULL;
       }
     }
     else
 #endif
-    if(!conn->proxy.name || !*conn->proxy.name) {
+    if(!conn->bits.proxy) {
       struct hostname *connhost;
       if(conn->bits.conn_to_host)
         connhost = &conn->conn_to_host;
       else
         connhost = &conn->host;
 
@@ -5585,24 +5864,27 @@
         /* don't return yet, we need to clean up the timeout first */
       }
     }
     else {
       /* This is a proxy that hasn't been resolved yet. */
 
+      struct hostname * const host = conn->bits.socksproxy ?
+        &conn->socks_proxy.host : &conn->http_proxy.host;
+
       /* resolve proxy */
-      rc = Curl_resolv_timeout(conn, conn->proxy.name, (int)conn->port,
+      rc = Curl_resolv_timeout(conn, host->name, (int)conn->port,
                                &hostaddr, timeout_ms);
 
       if(rc == CURLRESOLV_PENDING)
         *async = TRUE;
 
       else if(rc == CURLRESOLV_TIMEDOUT)
         result = CURLE_OPERATION_TIMEDOUT;
 
       else if(!hostaddr) {
-        failf(data, "Couldn't resolve proxy '%s'", conn->proxy.dispname);
+        failf(data, "Couldn't resolve proxy '%s'", host->dispname);
         result = CURLE_COULDNT_RESOLVE_PROXY;
         /* don't return yet, we need to clean up the timeout first */
       }
     }
     DEBUGASSERT(conn->dns_entry == NULL);
     conn->dns_entry = hostaddr;
@@ -5616,18 +5898,24 @@
  * previously existing one.  All relevant data is copied over and old_conn is
  * ready for freeing once this function returns.
  */
 static void reuse_conn(struct connectdata *old_conn,
                        struct connectdata *conn)
 {
+  free_fixed_hostname(&old_conn->http_proxy.host);
+  free_fixed_hostname(&old_conn->socks_proxy.host);
   free_fixed_hostname(&old_conn->proxy);
+
+  free(old_conn->http_proxy.host.rawalloc);
+  free(old_conn->socks_proxy.host.rawalloc);
   free(old_conn->proxy.rawalloc);
 
   /* free the SSL config struct from this connection struct as this was
      allocated in vain and is targeted for destruction */
-  Curl_free_ssl_config(&old_conn->ssl_config);
+  Curl_free_primary_ssl_config(&old_conn->ssl_config);
+  Curl_free_primary_ssl_config(&old_conn->proxy_ssl_config);
 
   conn->data = old_conn->data;
 
   /* get the user+password information from the old_conn struct since it may
    * be new for this request even when we re-use an existing connection */
   conn->bits.user_passwd = old_conn->bits.user_passwd;
@@ -5641,18 +5929,24 @@
     old_conn->passwd = NULL;
   }
 
   conn->bits.proxy_user_passwd = old_conn->bits.proxy_user_passwd;
   if(conn->bits.proxy_user_passwd) {
     /* use the new proxy user name and proxy password though */
-    Curl_safefree(conn->proxyuser);
-    Curl_safefree(conn->proxypasswd);
-    conn->proxyuser = old_conn->proxyuser;
-    conn->proxypasswd = old_conn->proxypasswd;
-    old_conn->proxyuser = NULL;
-    old_conn->proxypasswd = NULL;
+    Curl_safefree(conn->http_proxy.user);
+    Curl_safefree(conn->socks_proxy.user);
+    Curl_safefree(conn->http_proxy.passwd);
+    Curl_safefree(conn->socks_proxy.passwd);
+    conn->http_proxy.user = old_conn->http_proxy.user;
+    conn->socks_proxy.user = old_conn->socks_proxy.user;
+    conn->http_proxy.passwd = old_conn->http_proxy.passwd;
+    conn->socks_proxy.passwd = old_conn->socks_proxy.passwd;
+    old_conn->http_proxy.user = NULL;
+    old_conn->socks_proxy.user = NULL;
+    old_conn->http_proxy.passwd = NULL;
+    old_conn->socks_proxy.passwd = NULL;
   }
 
   /* host can change, when doing keepalive with a proxy or if the case is
      different this time etc */
   free_fixed_hostname(&conn->host);
   free_fixed_hostname(&conn->conn_to_host);
@@ -5672,23 +5966,29 @@
 
   /* re-use init */
   conn->bits.reuse = TRUE; /* yes, we're re-using here */
 
   Curl_safefree(old_conn->user);
   Curl_safefree(old_conn->passwd);
-  Curl_safefree(old_conn->proxyuser);
-  Curl_safefree(old_conn->proxypasswd);
+  Curl_safefree(old_conn->http_proxy.user);
+  Curl_safefree(old_conn->socks_proxy.user);
+  Curl_safefree(old_conn->http_proxy.passwd);
+  Curl_safefree(old_conn->socks_proxy.passwd);
   Curl_safefree(old_conn->localdev);
 
   Curl_llist_destroy(old_conn->send_pipe, NULL);
   Curl_llist_destroy(old_conn->recv_pipe, NULL);
 
   old_conn->send_pipe = NULL;
   old_conn->recv_pipe = NULL;
 
   Curl_safefree(old_conn->master_buffer);
+
+#ifdef USE_UNIX_SOCKETS
+  Curl_safefree(old_conn->unix_domain_socket);
+#endif
 }
 
 /**
  * create_conn() sets up a new connectdata struct, or re-uses an already
  * existing one, and resolves host name.
  *
@@ -5714,12 +6014,13 @@
   size_t urllen;
   char *user = NULL;
   char *passwd = NULL;
   char *options = NULL;
   bool reuse;
   char *proxy = NULL;
+  char *socksproxy = NULL;
   bool prot_missing = FALSE;
   bool connections_available = TRUE;
   bool force_reuse = FALSE;
   bool waitpipe = FALSE;
   size_t max_host_connections = Curl_multi_max_host_connections(data->multi);
   size_t max_total_connections = Curl_multi_max_total_connections(data->multi);
@@ -5880,49 +6181,79 @@
       failf(data, "memory shortage");
       result = CURLE_OUT_OF_MEMORY;
       goto out;
     }
   }
 
+  if(data->set.str[STRING_PRE_PROXY]) {
+    socksproxy = strdup(data->set.str[STRING_PRE_PROXY]);
+    /* if global socks proxy is set, this is it */
+    if(NULL == socksproxy) {
+      failf(data, "memory shortage");
+      result = CURLE_OUT_OF_MEMORY;
+      goto out;
+    }
+  }
+
   if(data->set.str[STRING_NOPROXY] &&
      check_noproxy(conn->host.name, data->set.str[STRING_NOPROXY])) {
-    free(proxy);  /* proxy is in exception list */
-    proxy = NULL;
+    Curl_safefree(proxy);
+    Curl_safefree(socksproxy);
   }
-  else if(!proxy)
+  else if(!proxy && !socksproxy)
     proxy = detect_proxy(conn);
 
 #ifdef USE_UNIX_SOCKETS
-  if(proxy && data->set.str[STRING_UNIX_SOCKET_PATH]) {
-    free(proxy);  /* Unix domain sockets cannot be proxied, so disable it */
-    proxy = NULL;
+  if(data->set.str[STRING_UNIX_SOCKET_PATH]) {
+    if(proxy) {
+      free(proxy); /* Unix domain sockets cannot be proxied, so disable it */
+      proxy = NULL;
+    }
+    conn->unix_domain_socket = strdup(data->set.str[STRING_UNIX_SOCKET_PATH]);
+    if(conn->unix_domain_socket == NULL) {
+      result = CURLE_OUT_OF_MEMORY;
+      goto out;
+    }
   }
 #endif
 
   if(proxy && (!*proxy || (conn->handler->flags & PROTOPT_NONETWORK))) {
     free(proxy);  /* Don't bother with an empty proxy string or if the
                      protocol doesn't work with network */
     proxy = NULL;
   }
+  if(socksproxy && (!*socksproxy ||
+                    (conn->handler->flags & PROTOPT_NONETWORK))) {
+    free(socksproxy);  /* Don't bother with an empty socks proxy string or if
+                          the protocol doesn't work with network */
+    socksproxy = NULL;
+  }
 
   /***********************************************************************
    * If this is supposed to use a proxy, we need to figure out the proxy host
    * name, proxy type and port number, so that we can re-use an existing
    * connection that may exist registered to the same proxy host.
    ***********************************************************************/
-  if(proxy) {
-    result = parse_proxy(data, conn, proxy);
-
-    free(proxy); /* parse_proxy copies the proxy string */
-    proxy = NULL;
+  if(proxy || socksproxy) {
+    if(proxy) {
+      result = parse_proxy(data, conn, proxy, conn->http_proxy.proxytype);
+      Curl_safefree(proxy); /* parse_proxy copies the proxy string */
+      if(result)
+        goto out;
+    }
 
-    if(result)
-      goto out;
+    if(socksproxy) {
+      result = parse_proxy(data, conn, socksproxy,
+                           conn->socks_proxy.proxytype);
+      /* parse_proxy copies the socks proxy string */
+      Curl_safefree(socksproxy);
+      if(result)
+        goto out;
+    }
 
-    if((conn->proxytype == CURLPROXY_HTTP) ||
-       (conn->proxytype == CURLPROXY_HTTP_1_0)) {
+    if(conn->http_proxy.host.rawalloc) {
 #ifdef CURL_DISABLE_HTTP
       /* asking for a HTTP proxy is a bit funny when HTTP is disabled... */
       result = CURLE_UNSUPPORTED_PROTOCOL;
       goto out;
 #else
       /* force this connection's protocol to become HTTP if not already
@@ -5935,18 +6266,40 @@
 #endif
     }
     else {
       conn->bits.httpproxy = FALSE; /* not a HTTP proxy */
       conn->bits.tunnel_proxy = FALSE; /* no tunneling if not HTTP */
     }
-    conn->bits.proxy = TRUE;
+
+    if(conn->socks_proxy.host.rawalloc) {
+      if(!conn->http_proxy.host.rawalloc) {
+        /* once a socks proxy */
+        if(!conn->socks_proxy.user) {
+          conn->socks_proxy.user = conn->http_proxy.user;
+          conn->http_proxy.user = NULL;
+          Curl_safefree(conn->socks_proxy.passwd);
+          conn->socks_proxy.passwd = conn->http_proxy.passwd;
+          conn->http_proxy.passwd = NULL;
+        }
+      }
+      conn->bits.socksproxy = TRUE;
+    }
+    else
+      conn->bits.socksproxy = FALSE; /* not a socks proxy */
   }
   else {
+    conn->bits.socksproxy = FALSE;
+    conn->bits.httpproxy = FALSE;
+  }
+  conn->bits.proxy = conn->bits.httpproxy || conn->bits.socksproxy;
+
+  if(!conn->bits.proxy) {
     /* we aren't using the proxy after all... */
     conn->bits.proxy = FALSE;
     conn->bits.httpproxy = FALSE;
+    conn->bits.socksproxy = FALSE;
     conn->bits.proxy_user_passwd = FALSE;
     conn->bits.tunnel_proxy = FALSE;
   }
 
 #endif /* CURL_DISABLE_PROXY */
 
@@ -6076,26 +6429,57 @@
      strings in the session handle strings array!
 
      Keep in mind that the pointers in the master copy are pointing to strings
      that will be freed as part of the Curl_easy struct, but all cloned
      copies will be separately allocated.
   */
-  data->set.ssl.CApath = data->set.str[STRING_SSL_CAPATH];
-  data->set.ssl.CAfile = data->set.str[STRING_SSL_CAFILE];
-  data->set.ssl.CRLfile = data->set.str[STRING_SSL_CRLFILE];
-  data->set.ssl.issuercert = data->set.str[STRING_SSL_ISSUERCERT];
-  data->set.ssl.random_file = data->set.str[STRING_SSL_RANDOM_FILE];
-  data->set.ssl.egdsocket = data->set.str[STRING_SSL_EGDSOCKET];
-  data->set.ssl.cipher_list = data->set.str[STRING_SSL_CIPHER_LIST];
-  data->set.ssl.clientcert = data->set.str[STRING_CERT];
+  data->set.ssl.primary.CApath = data->set.str[STRING_SSL_CAPATH_ORIG];
+  data->set.proxy_ssl.primary.CApath = data->set.str[STRING_SSL_CAPATH_PROXY];
+  data->set.ssl.primary.CAfile = data->set.str[STRING_SSL_CAFILE_ORIG];
+  data->set.proxy_ssl.primary.CAfile = data->set.str[STRING_SSL_CAFILE_PROXY];
+  data->set.ssl.primary.random_file = data->set.str[STRING_SSL_RANDOM_FILE];
+  data->set.proxy_ssl.primary.random_file =
+    data->set.str[STRING_SSL_RANDOM_FILE];
+  data->set.ssl.primary.egdsocket = data->set.str[STRING_SSL_EGDSOCKET];
+  data->set.proxy_ssl.primary.egdsocket = data->set.str[STRING_SSL_EGDSOCKET];
+  data->set.ssl.primary.cipher_list =
+    data->set.str[STRING_SSL_CIPHER_LIST_ORIG];
+  data->set.proxy_ssl.primary.cipher_list =
+    data->set.str[STRING_SSL_CIPHER_LIST_PROXY];
+
+  data->set.ssl.CRLfile = data->set.str[STRING_SSL_CRLFILE_ORIG];
+  data->set.proxy_ssl.CRLfile = data->set.str[STRING_SSL_CRLFILE_PROXY];
+  data->set.ssl.issuercert = data->set.str[STRING_SSL_ISSUERCERT_ORIG];
+  data->set.proxy_ssl.issuercert = data->set.str[STRING_SSL_ISSUERCERT_PROXY];
+  data->set.ssl.cert = data->set.str[STRING_CERT_ORIG];
+  data->set.proxy_ssl.cert = data->set.str[STRING_CERT_PROXY];
+  data->set.ssl.cert_type = data->set.str[STRING_CERT_TYPE_ORIG];
+  data->set.proxy_ssl.cert_type = data->set.str[STRING_CERT_TYPE_PROXY];
+  data->set.ssl.key = data->set.str[STRING_KEY_ORIG];
+  data->set.proxy_ssl.key = data->set.str[STRING_KEY_PROXY];
+  data->set.ssl.key_type = data->set.str[STRING_KEY_TYPE_ORIG];
+  data->set.proxy_ssl.key_type = data->set.str[STRING_KEY_TYPE_PROXY];
+  data->set.ssl.key_passwd = data->set.str[STRING_KEY_PASSWD_ORIG];
+  data->set.proxy_ssl.key_passwd = data->set.str[STRING_KEY_PASSWD_PROXY];
+  data->set.ssl.primary.clientcert = data->set.str[STRING_CERT_ORIG];
+  data->set.proxy_ssl.primary.clientcert = data->set.str[STRING_CERT_PROXY];
 #ifdef USE_TLS_SRP
-  data->set.ssl.username = data->set.str[STRING_TLSAUTH_USERNAME];
-  data->set.ssl.password = data->set.str[STRING_TLSAUTH_PASSWORD];
+  data->set.ssl.username = data->set.str[STRING_TLSAUTH_USERNAME_ORIG];
+  data->set.proxy_ssl.username = data->set.str[STRING_TLSAUTH_USERNAME_PROXY];
+  data->set.ssl.password = data->set.str[STRING_TLSAUTH_PASSWORD_ORIG];
+  data->set.proxy_ssl.password = data->set.str[STRING_TLSAUTH_PASSWORD_PROXY];
 #endif
 
-  if(!Curl_clone_ssl_config(&data->set.ssl, &conn->ssl_config)) {
+  if(!Curl_clone_primary_ssl_config(&data->set.ssl.primary,
+     &conn->ssl_config)) {
+    result = CURLE_OUT_OF_MEMORY;
+    goto out;
+  }
+
+  if(!Curl_clone_primary_ssl_config(&data->set.proxy_ssl.primary,
+                                    &conn->proxy_ssl_config)) {
     result = CURLE_OUT_OF_MEMORY;
     goto out;
   }
 
   prune_dead_connections(data);
 
@@ -6146,13 +6530,15 @@
     conn = conn_temp;
     *in_connect = conn;
 
     infof(data, "Re-using existing connection! (#%ld) with %s %s\n",
           conn->connection_id,
           conn->bits.proxy?"proxy":"host",
-          conn->proxy.name?conn->proxy.dispname:conn->host.dispname);
+          conn->socks_proxy.host.name ? conn->socks_proxy.host.dispname :
+          conn->http_proxy.host.name ? conn->http_proxy.host.dispname :
+                                       conn->host.dispname);
   }
   else {
     /* We have decided that we want a new connection. However, we may not
        be able to do that if we have reached the limit of how many
        connections we are allowed to open. */
     struct connectbundle *bundle = NULL;
@@ -6277,12 +6663,13 @@
 
   out:
 
   free(options);
   free(passwd);
   free(user);
+  free(socksproxy);
   free(proxy);
   return result;
 }
 
 /* Curl_setup_conn() is called after the name resolve initiated in
  * create_conn() is all done.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/urldata.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/urldata.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/urldata.h	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/urldata.h	2016-12-19 15:27:56.000000000 +0800
@@ -313,12 +313,14 @@
   struct Curl_easy *data;
   struct curl_llist *obj_list;
   PK11GenericObject *obj_clicert;
 #elif defined(USE_GSKIT)
   gsk_handle handle;
   int iocport;
+  int localfd;
+  int remotefd;
 #elif defined(USE_AXTLS)
   SSL_CTX* ssl_ctx;
   SSL*     ssl;
 #elif defined(USE_SCHANNEL)
   struct curl_schannel_cred *cred;
   struct curl_schannel_ctxt *ctxt;
@@ -338,52 +340,67 @@
   size_t ssl_write_buffered_length;
 #elif defined(USE_SSL)
 #error "SSL backend specific information missing from ssl_connect_data"
 #endif
 };
 
-struct ssl_config_data {
+struct ssl_primary_config {
   long version;          /* what version the client wants to use */
-  long certverifyresult; /* result from the certificate verification */
-
   bool verifypeer;       /* set TRUE if this is desired */
   bool verifyhost;       /* set TRUE if CN/SAN must match hostname */
   bool verifystatus;     /* set TRUE if certificate status must be checked */
   char *CApath;          /* certificate dir (doesn't work on windows) */
   char *CAfile;          /* certificate to verify peer against */
-  const char *CRLfile;   /* CRL to check certificate revocation */
-  const char *issuercert;/* optional issuer certificate filename */
   char *clientcert;
   char *random_file;     /* path to file containing "random" data */
   char *egdsocket;       /* path to file containing the EGD daemon socket */
   char *cipher_list;     /* list of ciphers to use */
-  size_t max_ssl_sessions; /* SSL session id cache size */
+};
+
+struct ssl_config_data {
+  struct ssl_primary_config primary;
+  bool enable_beast; /* especially allow this flaw for interoperability's
+                        sake*/
+  bool no_revoke;    /* disable SSL certificate revocation checks */
+  long certverifyresult; /* result from the certificate verification */
+  char *CRLfile;   /* CRL to check certificate revocation */
+  char *issuercert;/* optional issuer certificate filename */
   curl_ssl_ctx_callback fsslctx; /* function to initialize ssl ctx */
   void *fsslctxp;        /* parameter for call back */
-  bool sessionid;        /* cache session IDs or not */
   bool certinfo;         /* gather lots of certificate info */
   bool falsestart;
 
+  char *cert; /* client certificate file name */
+  char *cert_type; /* format for certificate (default: PEM)*/
+  char *key; /* private key file name */
+  char *key_type; /* format for private key (default: PEM) */
+  char *key_passwd; /* plain text private key password */
+
 #ifdef USE_TLS_SRP
   char *username; /* TLS username (for, e.g., SRP) */
   char *password; /* TLS password (for, e.g., SRP) */
   enum CURL_TLSAUTH authtype; /* TLS authentication type (default SRP) */
 #endif
 };
 
+struct ssl_general_config {
+  bool sessionid; /* cache session IDs or not */
+  size_t max_ssl_sessions; /* SSL session id cache size */
+};
+
 /* information stored about one single SSL session */
 struct curl_ssl_session {
   char *name;       /* host name for which this ID was used */
   char *conn_to_host; /* host name for the connection (may be NULL) */
   const char *scheme; /* protocol scheme used */
   void *sessionid;  /* as returned from the SSL layer */
   size_t idsize;    /* if known, otherwise 0 */
   long age;         /* just a number, the higher the more recent */
   int remote_port;  /* remote port */
   int conn_to_port; /* remote port for the connection (may be -1) */
-  struct ssl_config_data ssl_config; /* setup for this session */
+  struct ssl_primary_config ssl_config; /* setup for this session */
 };
 
 /* Struct used for Digest challenge-response authentication */
 struct digestdata {
 #if defined(USE_WINDOWS_SSPI)
   BYTE *input_token;
@@ -448,13 +465,13 @@
   BYTE *output_token;
   BYTE *input_token;
   size_t input_token_len;
 #else
   unsigned int flags;
   unsigned char nonce[8];
-  void* target_info; /* TargetInfo received in the ntlm type-2 message */
+  void *target_info; /* TargetInfo received in the ntlm type-2 message */
   unsigned int target_info_len;
 #endif
 };
 #endif
 
 #ifdef USE_SPNEGO
@@ -494,12 +511,13 @@
   bool conn_to_host; /* if set, this connection has a "connect to host"
                         that overrides the host in the URL */
   bool conn_to_port; /* if set, this connection has a "connect to port"
                         that overrides the port in the URL (remote port) */
   bool proxy; /* if set, this transfer is done through a proxy - any type */
   bool httpproxy;    /* if set, this transfer is done through a http proxy */
+  bool socksproxy;   /* if set, this transfer is done through a socks proxy */
   bool user_passwd;    /* do we use user+password for this connection? */
   bool proxy_user_passwd; /* user+password for the proxy? */
   bool ipv6_ip; /* we communicate with a remote site specified with pure IPv6
                    IP address */
   bool ipv6;    /* we communicate with a site using an IPv6 address */
 
@@ -528,12 +546,13 @@
                          EPSV doesn't work we disable it for the forthcoming
                          requests */
 
   bool ftp_use_eprt;  /* As set with CURLOPT_FTP_USE_EPRT, but if we find out
                          EPRT doesn't work we disable it for the forthcoming
                          requests */
+  bool ftp_use_data_ssl; /* Enabled SSL for the data connection */
   bool netrc;         /* name+password provided by netrc */
   bool userpwd_in_url; /* name+password found in url */
   bool stream_was_rewound; /* Indicates that the stream was rewound after a
                               request read past the end of its response byte
                               boundary */
   bool proxy_connect_closed; /* set true if a proxy disconnected the
@@ -544,12 +563,15 @@
   bool type_set;  /* type= was used in the URL */
   bool multiplex; /* connection is multiplexed */
 
   bool tcp_fastopen; /* use TCP Fast Open */
   bool tls_enable_npn;  /* TLS NPN extension? */
   bool tls_enable_alpn; /* TLS ALPN extension? */
+  bool proxy_ssl_connected[2]; /* TRUE when SSL initialization for HTTPS proxy
+                                  is complete */
+  bool socksproxy_connecting; /* connecting through a socks proxy */
 };
 
 struct hostname {
   char *rawalloc; /* allocated "raw" version of the name */
   char *encalloc; /* allocated IDN-encoded version of the name */
   char *name;     /* name to use internally, might be encoded, might be raw */
@@ -729,13 +751,13 @@
 
 /*
  * Specific protocol handler.
  */
 
 struct Curl_handler {
-  const char * scheme;        /* URL scheme name. */
+  const char *scheme;        /* URL scheme name. */
 
   /* Complement to setup_connection_internals(). */
   CURLcode (*setup_connection)(struct connectdata *);
 
   /* These two functions MUST be set to be protocol dependent */
   CURLcode (*do_it)(struct connectdata *, bool *done);
@@ -846,12 +868,20 @@
   curl_socket_t bindsock;/* Structure must be bound to specific socket,
                             used only for DEBUGASSERT */
 #endif /* DEBUGBUILD */
 };
 #endif /* USE_RECV_BEFORE_SEND_WORKAROUND */
 
+struct proxy_info {
+  struct hostname host;
+  long port;
+  curl_proxytype proxytype; /* what kind of proxy that is in use */
+  char *user;    /* proxy user name string, allocated */
+  char *passwd;  /* proxy password string, allocated */
+};
+
 /*
  * The connectdata struct contains all fields and variables that should be
  * unique for an entire connection.
  */
 struct connectdata {
   /* 'data' is the CURRENT Curl_easy using this connection -- take great
@@ -895,20 +925,26 @@
 
   unsigned int scope_id;  /* Scope id for IPv6 */
 
   int socktype;  /* SOCK_STREAM or SOCK_DGRAM */
 
   struct hostname host;
+  char *secondaryhostname; /* secondary socket host name (ftp) */
   struct hostname conn_to_host; /* the host to connect to. valid only if
                                    bits.conn_to_host is set */
   struct hostname proxy;
 
+  struct proxy_info socks_proxy;
+  struct proxy_info http_proxy;
+
   long port;       /* which port to use locally */
   int remote_port; /* the remote port, not the proxy port! */
   int conn_to_port; /* the remote port to connect to. valid only if
                        bits.conn_to_port is set */
+  unsigned short secondary_port; /* secondary socket remote port to connect to
+                                    (ftp) */
 
   /* 'primary_ip' and 'primary_port' get filled with peer's numerical
      ip address and port number whenever an outgoing connection is
      *attempted* from the primary socket to a remote address. When more
      than one address is tried for a connection these will hold data
      for the last attempt. When the connection is actually established
@@ -927,16 +963,12 @@
   char *user;    /* user name string, allocated */
   char *passwd;  /* password string, allocated */
   char *options; /* options string, allocated */
 
   char *oauth_bearer; /* bearer token for OAuth 2.0, allocated */
 
-  char *proxyuser;    /* proxy user name string, allocated */
-  char *proxypasswd;  /* proxy password string, allocated */
-  curl_proxytype proxytype; /* what kind of proxy that is in use */
-
   int httpversion;        /* the HTTP version*10 reported by the server */
   int rtspversion;        /* the RTSP version*10 reported by the server */
 
   struct timeval now;     /* "current" time */
   struct timeval created; /* creation time */
   curl_socket_t sock[2]; /* two sockets, the second is used for the data
@@ -948,25 +980,27 @@
   Curl_send *send[2];
 
 #ifdef USE_RECV_BEFORE_SEND_WORKAROUND
   struct postponed_data postponed[2]; /* two buffers for two sockets */
 #endif /* USE_RECV_BEFORE_SEND_WORKAROUND */
   struct ssl_connect_data ssl[2]; /* this is for ssl-stuff */
-  struct ssl_config_data ssl_config;
+  struct ssl_connect_data proxy_ssl[2]; /* this is for proxy ssl-stuff */
+  struct ssl_primary_config ssl_config;
+  struct ssl_primary_config proxy_ssl_config;
   bool tls_upgraded;
 
   struct ConnectBits bits;    /* various state-flags for this connection */
 
  /* connecttime: when connect() is called on the current IP address. Used to
     be able to track when to move on to try next IP - but only when the multi
     interface is used. */
   struct timeval connecttime;
   /* The two fields below get set in Curl_connecthost */
   int num_addr; /* number of addresses to try to connect to */
-  long timeoutms_per_addr; /* how long time in milliseconds to spend on
-                              trying to connect to each IP address */
+  time_t timeoutms_per_addr; /* how long time in milliseconds to spend on
+                                trying to connect to each IP address */
 
   const struct Curl_handler *handler; /* Connection's protocol handler */
   const struct Curl_handler *given;   /* The protocol first given */
 
   long ip_version; /* copied from the Curl_easy at creation time */
 
@@ -1017,13 +1051,13 @@
   bool writechannel_inuse; /* whether the write channel is in use by an easy
                               handle */
   struct curl_llist *send_pipe; /* List of handles waiting to
                                    send on this pipeline */
   struct curl_llist *recv_pipe; /* List of handles waiting to read
                                    their responses on this pipeline */
-  char* master_buffer; /* The master buffer allocated on-demand;
+  char *master_buffer; /* The master buffer allocated on-demand;
                           used for pipelining. */
   size_t read_pos; /* Current read position in the master buffer */
   size_t buf_len; /* Length of the buffer?? */
 
 
   curl_seek_callback seek_func; /* function that seeks the input */
@@ -1038,14 +1072,14 @@
   struct ntlmdata proxyntlm; /* NTLM data for proxy */
 
 #if defined(NTLM_WB_ENABLED)
   /* used for communication with Samba's winbind daemon helper ntlm_auth */
   curl_socket_t ntlm_auth_hlpr_socket;
   pid_t ntlm_auth_hlpr_pid;
-  char* challenge_header;
-  char* response_header;
+  char *challenge_header;
+  char *response_header;
 #endif
 #endif
 
   char syserr_buf [256]; /* buffer for Curl_strerror() */
 
 #ifdef CURLRES_ASYNCH
@@ -1075,15 +1109,12 @@
   int waitfor;      /* current READ/WRITE bits to wait for */
 
 #if defined(HAVE_GSSAPI) || defined(USE_WINDOWS_SSPI)
   int socks5_gssapi_enctype;
 #endif
 
-  bool verifypeer;
-  bool verifyhost;
-
   /* When this connection is created, store the conditions for the local end
      bind. This is stored before the actual bind and before any connection is
      made and will serve the purpose of being used for comparison reasons so
      that subsequent bound-requested connections aren't accidentally re-using
      wrong connections. */
   char *localdev;
@@ -1096,19 +1127,23 @@
     TUNNEL_CONNECT, /* CONNECT has been sent off */
     TUNNEL_COMPLETE /* CONNECT response received completely */
   } tunnel_state[2]; /* two separate ones to allow FTP */
   struct connectbundle *bundle; /* The bundle we are member of */
 
   int negnpn; /* APLN or NPN TLS negotiated protocol, CURL_HTTP_VERSION* */
+
+#ifdef USE_UNIX_SOCKETS
+  char *unix_domain_socket;
+#endif
 };
 
 /* The end of connectdata. */
 
 /*
  * Struct to keep statistical and informational data.
- * All variables in this struct must be reset in Curl_initinfo().
+ * All variables in this struct must be initialized/reset in Curl_initinfo().
  */
 struct PureInfo {
   int httpcode;  /* Recent HTTP, FTP, RTSP or SMTP response code */
   int httpproxycode; /* response code from proxy when received separate */
   int httpversion; /* the http version number X.Y = X*10+Y */
   long filetime; /* If requested, this is might get set. Set to -1 if the time
@@ -1136,21 +1171,24 @@
   char conn_primary_ip[MAX_IPADR_LEN];
   long conn_primary_port;
 
   char conn_local_ip[MAX_IPADR_LEN];
   long conn_local_port;
 
+  const char *conn_scheme;
+  unsigned int conn_protocol;
+
   struct curl_certinfo certs; /* info about the certs, only populated in
                                  OpenSSL builds. Asked for with
                                  CURLOPT_CERTINFO / CURLINFO_CERTINFO */
 };
 
 
 struct Progress {
-  long lastshow; /* time() of the last displayed progress meter or NULL to
-                    force redraw at next call */
+  time_t lastshow; /* time() of the last displayed progress meter or NULL to
+                      force redraw at next call */
   curl_off_t size_dl; /* total expected size */
   curl_off_t size_ul; /* total expected size */
   curl_off_t downloaded; /* transferred so far */
   curl_off_t uploaded; /* transferred so far */
 
   curl_off_t current_speed; /* uses the currently fastest transfer */
@@ -1239,12 +1277,17 @@
   bool multi; /* TRUE if this is not yet authenticated but within the auth
                  multipass negotiation */
   bool iestyle; /* TRUE if digest should be done IE-style or FALSE if it should
                    be RFC compliant */
 };
 
+struct Curl_http2_dep {
+  struct Curl_http2_dep *next;
+  struct Curl_easy *data;
+};
+
 struct UrlState {
 
   /* Points to the connection cache */
   struct conncache *conn_cache;
 
   /* when curl_easy_perform() is called, the multi handle is "owned" by
@@ -1399,42 +1442,54 @@
  * Character pointer fields point to dynamic storage, unless otherwise stated.
  */
 
 struct Curl_multi;    /* declared and used only in multi.c */
 
 enum dupstring {
-  STRING_CERT,            /* client certificate file name */
-  STRING_CERT_TYPE,       /* format for certificate (default: PEM)*/
+  STRING_CERT_ORIG,       /* client certificate file name */
+  STRING_CERT_PROXY,      /* client certificate file name */
+  STRING_CERT_TYPE_ORIG,  /* format for certificate (default: PEM)*/
+  STRING_CERT_TYPE_PROXY, /* format for certificate (default: PEM)*/
   STRING_COOKIE,          /* HTTP cookie string to send */
   STRING_COOKIEJAR,       /* dump all cookies to this file */
   STRING_CUSTOMREQUEST,   /* HTTP/FTP/RTSP request/method to use */
   STRING_DEFAULT_PROTOCOL, /* Protocol to use when the URL doesn't specify */
   STRING_DEVICE,          /* local network interface/address to use */
   STRING_ENCODING,        /* Accept-Encoding string */
   STRING_FTP_ACCOUNT,     /* ftp account data */
   STRING_FTP_ALTERNATIVE_TO_USER, /* command to send if USER/PASS fails */
   STRING_FTPPORT,         /* port to send with the FTP PORT command */
-  STRING_KEY,             /* private key file name */
-  STRING_KEY_PASSWD,      /* plain text private key password */
-  STRING_KEY_TYPE,        /* format for private key (default: PEM) */
+  STRING_KEY_ORIG,        /* private key file name */
+  STRING_KEY_PROXY,       /* private key file name */
+  STRING_KEY_PASSWD_ORIG, /* plain text private key password */
+  STRING_KEY_PASSWD_PROXY, /* plain text private key password */
+  STRING_KEY_TYPE_ORIG,   /* format for private key (default: PEM) */
+  STRING_KEY_TYPE_PROXY,  /* format for private key (default: PEM) */
   STRING_KRB_LEVEL,       /* krb security level */
   STRING_NETRC_FILE,      /* if not NULL, use this instead of trying to find
                              $HOME/.netrc */
   STRING_PROXY,           /* proxy to use */
+  STRING_PRE_PROXY,       /* pre socks proxy to use */
   STRING_SET_RANGE,       /* range, if used */
   STRING_SET_REFERER,     /* custom string for the HTTP referer field */
   STRING_SET_URL,         /* what original URL to work on */
-  STRING_SSL_CAPATH,      /* CA directory name (doesn't work on windows) */
-  STRING_SSL_CAFILE,      /* certificate file to verify peer against */
-  STRING_SSL_PINNEDPUBLICKEY, /* public key file to verify peer against */
-  STRING_SSL_CIPHER_LIST, /* list of ciphers to use */
+  STRING_SSL_CAPATH_ORIG, /* CA directory name (doesn't work on windows) */
+  STRING_SSL_CAPATH_PROXY, /* CA directory name (doesn't work on windows) */
+  STRING_SSL_CAFILE_ORIG, /* certificate file to verify peer against */
+  STRING_SSL_CAFILE_PROXY, /* certificate file to verify peer against */
+  STRING_SSL_PINNEDPUBLICKEY_ORIG, /* public key file to verify peer against */
+  STRING_SSL_PINNEDPUBLICKEY_PROXY, /* public key file to verify proxy */
+  STRING_SSL_CIPHER_LIST_ORIG, /* list of ciphers to use */
+  STRING_SSL_CIPHER_LIST_PROXY, /* list of ciphers to use */
   STRING_SSL_EGDSOCKET,   /* path to file containing the EGD daemon socket */
   STRING_SSL_RANDOM_FILE, /* path to file containing "random" data */
   STRING_USERAGENT,       /* User-Agent string */
-  STRING_SSL_CRLFILE,     /* crl file to check certificate */
-  STRING_SSL_ISSUERCERT,  /* issuer cert file to check certificate */
+  STRING_SSL_CRLFILE_ORIG, /* crl file to check certificate */
+  STRING_SSL_CRLFILE_PROXY, /* crl file to check certificate */
+  STRING_SSL_ISSUERCERT_ORIG, /* issuer cert file to check certificate */
+  STRING_SSL_ISSUERCERT_PROXY, /* issuer cert file to check certificate */
   STRING_USERNAME,        /* <username>, if used */
   STRING_PASSWORD,        /* <password>, if used */
   STRING_OPTIONS,         /* <options>, if used */
   STRING_PROXYUSERNAME,   /* Proxy <username>, if used */
   STRING_PROXYPASSWORD,   /* Proxy <password>, if used */
   STRING_NOPROXY,         /* List of hosts which should not use the proxy, if
@@ -1456,14 +1511,16 @@
   STRING_SERVICE_NAME,    /* Service name */
 #endif
   STRING_MAIL_FROM,
   STRING_MAIL_AUTH,
 
 #ifdef USE_TLS_SRP
-  STRING_TLSAUTH_USERNAME,      /* TLS auth <username> */
-  STRING_TLSAUTH_PASSWORD,      /* TLS auth <password> */
+  STRING_TLSAUTH_USERNAME_ORIG,  /* TLS auth <username> */
+  STRING_TLSAUTH_USERNAME_PROXY, /* TLS auth <username> */
+  STRING_TLSAUTH_PASSWORD_ORIG,  /* TLS auth <password> */
+  STRING_TLSAUTH_PASSWORD_PROXY, /* TLS auth <password> */
 #endif
   STRING_BEARER,                /* <bearer>, if used */
 #ifdef USE_UNIX_SOCKETS
   STRING_UNIX_SOCKET_PATH,      /* path to Unix socket, if used */
 #endif
 
@@ -1521,16 +1578,16 @@
   curl_ioctl_callback ioctl_func;  /* function for I/O control */
   curl_sockopt_callback fsockopt;  /* function for setting socket options */
   void *sockopt_client; /* pointer to pass to the socket options callback */
   curl_opensocket_callback fopensocket; /* function for checking/translating
                                            the address and opening the
                                            socket */
-  void* opensocket_client;
+  void *opensocket_client;
   curl_closesocket_callback fclosesocket; /* function for closing the
                                              socket */
-  void* closesocket_client;
+  void *closesocket_client;
 
   void *seek_client;    /* pointer to pass to the seek callback */
   /* the 3 curl_conv_callback functions below are used on non-ASCII hosts */
   /* function to convert from the network encoding: */
   curl_conv_callback convfromnetwork;
   /* function to convert to the network encoding: */
@@ -1575,13 +1632,16 @@
   curl_TimeCond timecondition; /* kind of time/date comparison */
   time_t timevalue;       /* what time to compare with */
   Curl_HttpReq httpreq;   /* what kind of HTTP request (if any) is this */
   long httpversion; /* when non-zero, a specific HTTP version requested to
                        be used in the library's request(s) */
   struct ssl_config_data ssl;  /* user defined SSL stuff */
+  struct ssl_config_data proxy_ssl;  /* user defined SSL stuff for proxy */
+  struct ssl_general_config general_ssl; /* general user defined SSL stuff */
   curl_proxytype proxytype; /* what kind of proxy that is in use */
+  curl_proxytype socks_proxytype; /* what kind of socks proxy that is in use */
   long dns_cache_timeout; /* DNS cache timeout */
   long buffer_size;      /* size of receive buffer to use */
   void *private_data; /* application-private data */
 
   struct curl_slist *http200aliases; /* linked list of aliases for http200 */
 
@@ -1639,15 +1699,12 @@
   bool global_dns_cache; /* subject for future removal */
   bool tcp_nodelay;      /* whether to enable TCP_NODELAY or not */
   bool ignorecl;         /* ignore content length */
   bool ftp_skip_ip;      /* skip the IP address the FTP server passes on to
                             us */
   bool connect_only;     /* make connection, let application use the socket */
-  bool ssl_enable_beast; /* especially allow this flaw for interoperability's
-                            sake*/
-  bool ssl_no_revoke;    /* disable SSL certificate revocation checks */
   long ssh_auth_types;   /* allowed SSH auth types */
   bool http_te_skip;     /* pass the raw body data to the user, even when
                             transfer-encoded (chunked, compressed) */
   bool http_ce_skip;     /* pass the raw body data to the user, even when
                             content-encoded (chunked, compressed) */
   long new_file_perms;    /* Permissions to use when creating remote files */
@@ -1692,12 +1749,14 @@
                            new connection */
   long expect_100_timeout; /* in milliseconds */
 
   struct Curl_easy *stream_depends_on;
   bool stream_depends_e; /* set or don't set the Exclusive bit */
   int stream_weight;
+
+  struct Curl_http2_dep *stream_dependents;
 };
 
 struct Names {
   struct curl_hash *hostcache;
   enum {
     HCACHE_NONE,    /* not pointing to anything */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/url.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/url.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/url.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/url.h	2016-12-19 15:27:56.000000000 +0800
@@ -64,17 +64,30 @@
 void Curl_getoff_all_pipelines(struct Curl_easy *data,
                                struct connectdata *conn);
 
 void Curl_close_connections(struct Curl_easy *data);
 
 #define CURL_DEFAULT_PROXY_PORT 1080 /* default proxy port unless specified */
+#define CURL_DEFAULT_HTTPS_PROXY_PORT 443 /* default https proxy port unless
+                                             specified */
 
 CURLcode Curl_connected_proxy(struct connectdata *conn, int sockindex);
 
 #ifdef CURL_DISABLE_VERBOSE_STRINGS
 #define Curl_verboseconnect(x)  Curl_nop_stmt
 #else
 void Curl_verboseconnect(struct connectdata *conn);
 #endif
 
+#define CONNECT_PROXY_SSL()\
+  (conn->http_proxy.proxytype == CURLPROXY_HTTPS &&\
+  !conn->bits.proxy_ssl_connected[sockindex])
+
+#define CONNECT_FIRSTSOCKET_PROXY_SSL()\
+  (conn->http_proxy.proxytype == CURLPROXY_HTTPS &&\
+  !conn->bits.proxy_ssl_connected[FIRSTSOCKET])
+
+#define CONNECT_SECONDARYSOCKET_PROXY_SSL()\
+  (conn->http_proxy.proxytype == CURLPROXY_HTTPS &&\
+  !conn->bits.proxy_ssl_connected[SECONDARYSOCKET])
 
 #endif /* HEADER_CURL_URL_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/cleartext.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/cleartext.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/cleartext.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/cleartext.c	2016-12-19 15:27:56.000000000 +0800
@@ -63,33 +63,43 @@
                                         char **outptr, size_t *outlen)
 {
   CURLcode result;
   char *plainauth;
   size_t ulen;
   size_t plen;
+  size_t plainlen;
 
+  *outlen = 0;
+  *outptr = NULL;
   ulen = strlen(userp);
   plen = strlen(passwdp);
 
-  plainauth = malloc(2 * ulen + plen + 2);
-  if(!plainauth) {
-    *outlen = 0;
-    *outptr = NULL;
+  /* Compute binary message length, checking for overflows. */
+  plainlen = 2 * ulen;
+  if(plainlen < ulen)
+    return CURLE_OUT_OF_MEMORY;
+  plainlen += plen;
+  if(plainlen < plen)
+    return CURLE_OUT_OF_MEMORY;
+  plainlen += 2;
+  if(plainlen < 2)
+    return CURLE_OUT_OF_MEMORY;
+
+  plainauth = malloc(plainlen);
+  if(!plainauth)
     return CURLE_OUT_OF_MEMORY;
-  }
 
   /* Calculate the reply */
   memcpy(plainauth, userp, ulen);
   plainauth[ulen] = '\0';
   memcpy(plainauth + ulen + 1, userp, ulen);
   plainauth[2 * ulen + 1] = '\0';
   memcpy(plainauth + 2 * ulen + 2, passwdp, plen);
 
   /* Base64 encode the reply */
-  result = Curl_base64_encode(data, plainauth, 2 * ulen + plen + 2, outptr,
-                              outlen);
+  result = Curl_base64_encode(data, plainauth, plainlen, outptr, outlen);
   free(plainauth);
 
   return result;
 }
 
 /*
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/digest.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/digest.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/digest.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/digest.c	2016-12-19 15:27:56.000000000 +0800
@@ -37,12 +37,13 @@
 #include "vtls/vtls.h"
 #include "warnless.h"
 #include "strtok.h"
 #include "strcase.h"
 #include "non-ascii.h" /* included for Curl_convert_... prototypes */
 #include "curl_printf.h"
+#include "rand.h"
 
 /* The last #include files should be: */
 #include "curl_memory.h"
 #include "memdebug.h"
 
 #if !defined(USE_WINDOWS_SSPI)
@@ -56,13 +57,13 @@
 
 /* The CURL_OUTPUT_DIGEST_CONV macro below is for non-ASCII machines.
    It converts digest text to ASCII so the MD5 will be correct for
    what ultimately goes over the network.
 */
 #define CURL_OUTPUT_DIGEST_CONV(a, b) \
-  result = Curl_convert_to_network(a, (char *)b, strlen((const char*)b)); \
+  result = Curl_convert_to_network(a, (char *)b, strlen((const char *)b)); \
   if(result) { \
     free(b); \
     return result; \
   }
 #endif /* !USE_WINDOWS_SSPI */
 
@@ -384,16 +385,15 @@
 
   /* We only support auth quality-of-protection */
   if(!(qop_values & DIGEST_QOP_VALUE_AUTH))
     return CURLE_BAD_CONTENT_ENCODING;
 
   /* Generate 16 bytes of random data */
-  entropy[0] = Curl_rand(data);
-  entropy[1] = Curl_rand(data);
-  entropy[2] = Curl_rand(data);
-  entropy[3] = Curl_rand(data);
+  result = Curl_rand(data, &entropy[0], 4);
+  if(result)
+    return result;
 
   /* Convert the random data into a 32 byte hex string */
   snprintf(cnonce, sizeof(cnonce), "%08x%08x%08x%08x",
            entropy[0], entropy[1], entropy[2], entropy[3]);
 
   /* So far so good, now calculate A1 and H(A1) according to RFC 2831 */
@@ -681,15 +681,18 @@
   char *tmp = NULL;
 
   if(!digest->nc)
     digest->nc = 1;
 
   if(!digest->cnonce) {
+    unsigned int rnd[4];
+    result = Curl_rand(data, &rnd[0], 4);
+    if(result)
+      return result;
     snprintf(cnoncebuf, sizeof(cnoncebuf), "%08x%08x%08x%08x",
-             Curl_rand(data), Curl_rand(data),
-             Curl_rand(data), Curl_rand(data));
+             rnd[0], rnd[1], rnd[2], rnd[3]);
 
     result = Curl_base64_encode(data, cnoncebuf, strlen(cnoncebuf),
                                 &cnonce, &cnonce_sz);
     if(result)
       return result;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/digest_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/digest_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/digest_sspi.c	2016-10-31 20:20:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/digest_sspi.c	2016-12-19 15:27:56.000000000 +0800
@@ -411,13 +411,13 @@
   if(userp && *userp) {
     /* Populate our identity structure */
     if(Curl_create_sspi_identity(userp, passwdp, &identity))
       return CURLE_OUT_OF_MEMORY;
 
     /* Populate our identity domain */
-    if(Curl_override_sspi_http_realm((const char*) digest->input_token,
+    if(Curl_override_sspi_http_realm((const char *) digest->input_token,
                                      &identity))
       return CURLE_OUT_OF_MEMORY;
 
     /* Allow proper cleanup of the identity structure */
     p_identity = &identity;
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/ntlm.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/ntlm.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/ntlm.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/ntlm.c	2016-12-19 15:27:56.000000000 +0800
@@ -38,13 +38,13 @@
 #include "sendf.h"
 #include "curl_base64.h"
 #include "curl_ntlm_core.h"
 #include "curl_gethostname.h"
 #include "curl_multibyte.h"
 #include "warnless.h"
-
+#include "rand.h"
 #include "vtls/vtls.h"
 
 #ifdef USE_NSS
 #include "vtls/nssg.h" /* for Curl_nss_force_init() */
 #endif
 
@@ -555,14 +555,15 @@
 #if USE_NTRESPONSES && USE_NTLM_V2
   if(ntlm->target_info_len) {
     unsigned char ntbuffer[0x18];
     unsigned int entropy[2];
     unsigned char ntlmv2hash[0x18];
 
-    entropy[0] = Curl_rand(data);
-    entropy[1] = Curl_rand(data);
+    result = Curl_rand(data, &entropy[0], 2);
+    if(result)
+      return result;
 
     result = Curl_ntlm_core_mk_nt_hash(data, passwdp, ntbuffer);
     if(result)
       return result;
 
     result = Curl_ntlm_core_mk_ntlmv2_hash(user, userlen, domain, domlen,
@@ -595,14 +596,15 @@
     unsigned char ntbuffer[0x18];
     unsigned char tmp[0x18];
     unsigned char md5sum[MD5_DIGEST_LENGTH];
     unsigned int entropy[2];
 
     /* Need to create 8 bytes random data */
-    entropy[0] = Curl_rand(data);
-    entropy[1] = Curl_rand(data);
+    result = Curl_rand(data, &entropy[0], 2);
+    if(result)
+      return result;
 
     /* 8 bytes random data as challenge in lmresp */
     memcpy(lmresp, entropy, 8);
 
     /* Pad with zeros */
     memset(lmresp + 8, 0, 0x10);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/spnego_sspi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/spnego_sspi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vauth/spnego_sspi.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vauth/spnego_sspi.c	2016-12-19 15:27:56.000000000 +0800
@@ -261,13 +261,13 @@
                                          char **outptr, size_t *outlen)
 {
   CURLcode result;
 
   /* Base64 encode the already generated response */
   result = Curl_base64_encode(data,
-                              (const char*) nego->output_token,
+                              (const char *) nego->output_token,
                               nego->output_token_length,
                               outptr, outlen);
 
   if(result)
     return result;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/version.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/version.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/version.c	2016-10-31 15:48:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/version.c	2016-12-19 15:27:56.000000000 +0800
@@ -321,12 +321,15 @@
 #if defined(USE_UNIX_SOCKETS)
   | CURL_VERSION_UNIX_SOCKETS
 #endif
 #if defined(USE_LIBPSL)
   | CURL_VERSION_PSL
 #endif
+#if defined(HTTPS_PROXY_SUPPORT)
+  | CURL_VERSION_HTTPS_PROXY
+#endif
   ,
   NULL, /* ssl_version */
   0,    /* ssl_version_num, this is kept at zero */
   NULL, /* zlib_version */
   protocols,
   NULL, /* c-ares version */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/axtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/axtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/axtls.c	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/axtls.c	2016-12-19 15:27:56.000000000 +0800
@@ -62,13 +62,13 @@
   /* axTLS has no global cleanup.  Perhaps can move this to axtls.h. */
   return 1;
 }
 
 static CURLcode map_error_to_curl(int axtls_err)
 {
-  switch (axtls_err) {
+  switch(axtls_err) {
   case SSL_ERROR_NOT_SUPPORTED:
   case SSL_ERROR_INVALID_VERSION:
   case -70:                       /* protocol version alert from server */
     return CURLE_UNSUPPORTED_PROTOCOL;
     break;
   case SSL_ERROR_NO_CIPHER:
@@ -118,13 +118,13 @@
 static Curl_recv axtls_recv;
 static Curl_send axtls_send;
 
 static void free_ssl_structs(struct ssl_connect_data *connssl)
 {
   if(connssl->ssl) {
-    ssl_free (connssl->ssl);
+    ssl_free(connssl->ssl);
     connssl->ssl = NULL;
   }
   if(connssl->ssl_ctx) {
     ssl_ctx_free(connssl->ssl_ctx);
     connssl->ssl_ctx = NULL;
   }
@@ -155,13 +155,13 @@
     /* to make us tolerant against being called more than once for the
        same connection */
     return CURLE_OK;
 
   /* axTLS only supports TLSv1 */
   /* check to see if we've been told to use an explicit SSL/TLS version */
-  switch(data->set.ssl.version) {
+  switch(SSL_CONN_CONFIG(version)) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     break;
   default:
     failf(data, "axTLS only supports TLS 1.0 and 1.1, "
           "and it cannot be specified which one to use");
@@ -180,94 +180,95 @@
   }
 
   conn->ssl[sockindex].ssl_ctx = ssl_ctx;
   conn->ssl[sockindex].ssl = NULL;
 
   /* Load the trusted CA cert bundle file */
-  if(data->set.ssl.CAfile) {
-    if(ssl_obj_load(ssl_ctx, SSL_OBJ_X509_CACERT, data->set.ssl.CAfile, NULL)
-       != SSL_OK) {
+  if(SSL_CONN_CONFIG(CAfile)) {
+    if(ssl_obj_load(ssl_ctx, SSL_OBJ_X509_CACERT,
+                    SSL_CONN_CONFIG(CAfile), NULL) != SSL_OK) {
       infof(data, "error reading ca cert file %s \n",
-            data->set.ssl.CAfile);
-      if(data->set.ssl.verifypeer) {
+            SSL_CONN_CONFIG(CAfile));
+      if(SSL_CONN_CONFIG(verifypeer)) {
         return CURLE_SSL_CACERT_BADFILE;
       }
     }
     else
-      infof(data, "found certificates in %s\n", data->set.ssl.CAfile);
+      infof(data, "found certificates in %s\n", SSL_CONN_CONFIG(CAfile));
   }
 
   /* gtls.c tasks we're skipping for now:
    * 1) certificate revocation list checking
    * 2) dns name assignment to host
    * 3) set protocol priority.  axTLS is TLSv1 only, so can probably ignore
    * 4) set certificate priority.  axTLS ignores type and sends certs in
    *  order added.  can probably ignore this.
    */
 
   /* Load client certificate */
-  if(data->set.str[STRING_CERT]) {
+  if(SSL_SET_OPTION(cert)) {
     i=0;
     /* Instead of trying to analyze cert type here, let axTLS try them all. */
     while(cert_types[i] != 0) {
       ssl_fcn_return = ssl_obj_load(ssl_ctx, cert_types[i],
-                                    data->set.str[STRING_CERT], NULL);
+                                    SSL_SET_OPTION(cert), NULL);
       if(ssl_fcn_return == SSL_OK) {
         infof(data, "successfully read cert file %s \n",
-              data->set.str[STRING_CERT]);
+              SSL_SET_OPTION(cert));
         break;
       }
       i++;
     }
     /* Tried all cert types, none worked. */
     if(cert_types[i] == 0) {
       failf(data, "%s is not x509 or pkcs12 format",
-            data->set.str[STRING_CERT]);
+            SSL_SET_OPTION(cert));
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load client key.
      If a pkcs12 file successfully loaded a cert, then there's nothing to do
      because the key has already been loaded. */
-  if(data->set.str[STRING_KEY] && cert_types[i] != SSL_OBJ_PKCS12) {
+  if(SSL_SET_OPTION(key) && cert_types[i] != SSL_OBJ_PKCS12) {
     i=0;
     /* Instead of trying to analyze key type here, let axTLS try them all. */
     while(key_types[i] != 0) {
       ssl_fcn_return = ssl_obj_load(ssl_ctx, key_types[i],
-                                    data->set.str[STRING_KEY], NULL);
+                                    SSL_SET_OPTION(key), NULL);
       if(ssl_fcn_return == SSL_OK) {
         infof(data, "successfully read key file %s \n",
-              data->set.str[STRING_KEY]);
+              SSL_SET_OPTION(key));
         break;
       }
       i++;
     }
     /* Tried all key types, none worked. */
     if(key_types[i] == 0) {
       failf(data, "Failure: %s is not a supported key file",
-            data->set.str[STRING_KEY]);
+            SSL_SET_OPTION(key));
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 
   /* gtls.c does more here that is being left out for now
    * 1) set session credentials.  can probably ignore since axtls puts this
    *    info in the ssl_ctx struct
    * 2) setting up callbacks.  these seem gnutls specific
    */
 
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     const uint8_t *ssl_sessionid;
     size_t ssl_idsize;
 
     /* In axTLS, handshaking happens inside ssl_client_new. */
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, (void **) &ssl_sessionid, &ssl_idsize)) {
+    if(!Curl_ssl_getsessionid(conn, (void **) &ssl_sessionid, &ssl_idsize,
+                              sockindex)) {
       /* we got a session id, use it! */
-      infof (data, "SSL re-using session ID\n");
+      infof(data, "SSL re-using session ID\n");
       ssl = ssl_client_new(ssl_ctx, conn->sock[sockindex],
                            ssl_sessionid, (uint8_t)ssl_idsize);
     }
     Curl_ssl_sessionid_unlock(conn);
   }
 
@@ -288,19 +289,23 @@
   SSL *ssl = conn->ssl[sockindex].ssl;
   const char *peer_CN;
   uint32_t dns_altname_index;
   const char *dns_altname;
   int8_t found_subject_alt_names = 0;
   int8_t found_subject_alt_name_matching_conn = 0;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const char * const dispname = SSL_IS_PROXY() ?
+    conn->http_proxy.host.dispname : conn->host.dispname;
 
   /* Here, gtls.c gets the peer certificates and fails out depending on
    * settings in "data."  axTLS api doesn't have get cert chain fcn, so omit?
    */
 
   /* Verify server's certificate */
-  if(data->set.ssl.verifypeer) {
+  if(SSL_CONN_CONFIG(verifypeer)) {
     if(ssl_verify_cert(ssl) != SSL_OK) {
       Curl_axtls_close(conn, sockindex);
       failf(data, "server cert verify failed");
       return CURLE_PEER_FAILED_VERIFICATION;
     }
   }
@@ -325,74 +330,72 @@
     if(dns_altname == NULL) {
       break;
     }
     found_subject_alt_names = 1;
 
     infof(data, "\tComparing subject alt name DNS with hostname: %s <-> %s\n",
-          dns_altname, conn->host.name);
-    if(Curl_cert_hostcheck(dns_altname, conn->host.name)) {
+          dns_altname, hostname);
+    if(Curl_cert_hostcheck(dns_altname, hostname)) {
       found_subject_alt_name_matching_conn = 1;
       break;
     }
   }
 
   /* RFC2818 checks */
   if(found_subject_alt_names && !found_subject_alt_name_matching_conn) {
-    if(data->set.ssl.verifyhost) {
+    if(SSL_CONN_CONFIG(verifyhost)) {
       /* Break connection ! */
       Curl_axtls_close(conn, sockindex);
-      failf(data, "\tsubjectAltName(s) do not match %s\n",
-            conn->host.dispname);
+      failf(data, "\tsubjectAltName(s) do not match %s\n", dispname);
       return CURLE_PEER_FAILED_VERIFICATION;
     }
     else
-      infof(data, "\tsubjectAltName(s) do not match %s\n",
-            conn->host.dispname);
+      infof(data, "\tsubjectAltName(s) do not match %s\n", dispname);
   }
   else if(found_subject_alt_names == 0) {
     /* Per RFC2818, when no Subject Alt Names were available, examine the peer
        CN as a legacy fallback */
     peer_CN = ssl_get_cert_dn(ssl, SSL_X509_CERT_COMMON_NAME);
     if(peer_CN == NULL) {
-      if(data->set.ssl.verifyhost) {
+      if(SSL_CONN_CONFIG(verifyhost)) {
         Curl_axtls_close(conn, sockindex);
         failf(data, "unable to obtain common name from peer certificate");
         return CURLE_PEER_FAILED_VERIFICATION;
       }
       else
         infof(data, "unable to obtain common name from peer certificate");
     }
     else {
-      if(!Curl_cert_hostcheck((const char *)peer_CN, conn->host.name)) {
-        if(data->set.ssl.verifyhost) {
+      if(!Curl_cert_hostcheck((const char *)peer_CN, hostname)) {
+        if(SSL_CONN_CONFIG(verifyhost)) {
           /* Break connection ! */
           Curl_axtls_close(conn, sockindex);
           failf(data, "\tcommon name \"%s\" does not match \"%s\"\n",
-                peer_CN, conn->host.dispname);
+                peer_CN, dispname);
           return CURLE_PEER_FAILED_VERIFICATION;
         }
         else
           infof(data, "\tcommon name \"%s\" does not match \"%s\"\n",
-                peer_CN, conn->host.dispname);
+                peer_CN, dispname);
       }
     }
   }
 
   /* General housekeeping */
   conn->ssl[sockindex].state = ssl_connection_complete;
   conn->recv[sockindex] = axtls_recv;
   conn->send[sockindex] = axtls_send;
 
   /* Put our freshly minted SSL session in cache */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     const uint8_t *ssl_sessionid = ssl_get_session_id_size(ssl);
     size_t ssl_idsize = ssl_get_session_id(ssl);
     Curl_ssl_sessionid_lock(conn);
-    if(Curl_ssl_addsessionid(conn, (void *) ssl_sessionid, ssl_idsize)
-       != CURLE_OK)
-      infof (data, "failed to add session to cache\n");
+    if(Curl_ssl_addsessionid(conn, (void *) ssl_sessionid, ssl_idsize,
+                             sockindex) != CURLE_OK)
+      infof(data, "failed to add session to cache\n");
     Curl_ssl_sessionid_unlock(conn);
   }
 
   return CURLE_OK;
 }
 
@@ -434,13 +437,13 @@
           ssl_display_error(ssl_fcn_return); /* goes to stdout. */
           return map_error_to_curl(ssl_fcn_return);
         }
         return CURLE_OK;
       }
     }
-    infof (conn->data, "handshake completed successfully\n");
+    infof(conn->data, "handshake completed successfully\n");
     conn->ssl[sockindex].connecting_state = ssl_connect_3;
   }
 
   if(conn->ssl[sockindex].connecting_state == ssl_connect_3) {
     conn_step = connect_finish(conn, sockindex);
     if(conn_step != CURLE_OK) {
@@ -500,13 +503,13 @@
       ssl_display_error(ssl_fcn_return); /* goes to stdout. */
       return map_error_to_curl(ssl_fcn_return);
     }
     /* TODO: avoid polling */
     Curl_wait_ms(10);
   }
-  infof (conn->data, "handshake completed successfully\n");
+  infof(conn->data, "handshake completed successfully\n");
 
   conn_step = connect_finish(conn, sockindex);
   if(conn_step != CURLE_OK) {
     Curl_axtls_close(conn, sockindex);
     return conn_step;
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/cyassl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/cyassl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/cyassl.c	2016-10-31 20:20:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/cyassl.c	2016-12-19 15:27:56.000000000 +0800
@@ -146,13 +146,13 @@
 #endif
 
   if(conssl->state == ssl_connection_complete)
     return CURLE_OK;
 
   /* check to see if we've been told to use an explicit SSL/TLS version */
-  switch(data->set.ssl.version) {
+  switch(SSL_CONN_CONFIG(version)) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
 #if LIBCYASSL_VERSION_HEX >= 0x03003000 /* >= 3.3.0 */
     /* minimum protocol version is set later after the CTX object is created */
     req_method = SSLv23_client_method();
 #else
@@ -171,18 +171,21 @@
     use_sni(TRUE);
     break;
   case CURL_SSLVERSION_TLSv1_2:
     req_method = TLSv1_2_client_method();
     use_sni(TRUE);
     break;
+  case CURL_SSLVERSION_TLSv1_3:
+    failf(data, "CyaSSL: TLS 1.3 is not yet supported");
+    return CURLE_SSL_CONNECT_ERROR;
   case CURL_SSLVERSION_SSLv3:
 #ifdef WOLFSSL_ALLOW_SSLV3
     req_method = SSLv3_client_method();
     use_sni(FALSE);
 #else
-    failf(data, "No support for SSLv3");
+    failf(data, "CyaSSL does not support SSLv3");
     return CURLE_NOT_BUILT_IN;
 #endif
     break;
   case CURL_SSLVERSION_SSLv2:
     failf(data, "CyaSSL does not support SSLv2");
     return CURLE_SSL_CONNECT_ERROR;
@@ -202,13 +205,13 @@
 
   if(!conssl->ctx) {
     failf(data, "SSL: couldn't create a context!");
     return CURLE_OUT_OF_MEMORY;
   }
 
-  switch(data->set.ssl.version) {
+  switch(SSL_CONN_CONFIG(version)) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
 #if LIBCYASSL_VERSION_HEX > 0x03004006 /* > 3.4.6 */
     /* Versions 3.3.0 to 3.4.6 we know the minimum protocol version is whatever
     minimum version of TLS was built in and at least TLS 1.0. For later library
     versions that could change (eg TLS 1.0 built in but defaults to TLS 1.1) so
@@ -225,24 +228,24 @@
 #endif
     break;
   }
 
 #ifndef NO_FILESYSTEM
   /* load trusted cacert */
-  if(data->set.str[STRING_SSL_CAFILE]) {
+  if(SSL_CONN_CONFIG(CAfile)) {
     if(1 != SSL_CTX_load_verify_locations(conssl->ctx,
-                                          data->set.str[STRING_SSL_CAFILE],
-                                          data->set.str[STRING_SSL_CAPATH])) {
-      if(data->set.ssl.verifypeer) {
+                                      SSL_CONN_CONFIG(CAfile),
+                                      SSL_CONN_CONFIG(CApath))) {
+      if(SSL_CONN_CONFIG(verifypeer)) {
         /* Fail if we insist on successfully verifying the server. */
         failf(data, "error setting certificate verify locations:\n"
               "  CAfile: %s\n  CApath: %s",
-              data->set.str[STRING_SSL_CAFILE]?
-              data->set.str[STRING_SSL_CAFILE]: "none",
-              data->set.str[STRING_SSL_CAPATH]?
-              data->set.str[STRING_SSL_CAPATH] : "none");
+              SSL_CONN_CONFIG(CAfile)?
+              SSL_CONN_CONFIG(CAfile): "none",
+              SSL_CONN_CONFIG(CApath)?
+              SSL_CONN_CONFIG(CApath) : "none");
         return CURLE_SSL_CACERT_BADFILE;
       }
       else {
         /* Just continue with a warning if no strict certificate
            verification is required. */
         infof(data, "error setting certificate verify locations,"
@@ -253,59 +256,62 @@
       /* Everything is fine. */
       infof(data, "successfully set certificate verify locations:\n");
     }
     infof(data,
           "  CAfile: %s\n"
           "  CApath: %s\n",
-          data->set.str[STRING_SSL_CAFILE] ? data->set.str[STRING_SSL_CAFILE]:
+          SSL_CONN_CONFIG(CAfile) ? SSL_CONN_CONFIG(CAfile):
           "none",
-          data->set.str[STRING_SSL_CAPATH] ? data->set.str[STRING_SSL_CAPATH]:
+          SSL_CONN_CONFIG(CApath) ? SSL_CONN_CONFIG(CApath):
           "none");
   }
 
   /* Load the client certificate, and private key */
-  if(data->set.str[STRING_CERT] && data->set.str[STRING_KEY]) {
-    int file_type = do_file_type(data->set.str[STRING_CERT_TYPE]);
+  if(SSL_SET_OPTION(cert) && SSL_SET_OPTION(key)) {
+    int file_type = do_file_type(SSL_SET_OPTION(cert_type));
 
-    if(SSL_CTX_use_certificate_file(conssl->ctx, data->set.str[STRING_CERT],
+    if(SSL_CTX_use_certificate_file(conssl->ctx, SSL_SET_OPTION(cert),
                                      file_type) != 1) {
       failf(data, "unable to use client certificate (no key or wrong pass"
             " phrase?)");
       return CURLE_SSL_CONNECT_ERROR;
     }
 
-    file_type = do_file_type(data->set.str[STRING_KEY_TYPE]);
-    if(SSL_CTX_use_PrivateKey_file(conssl->ctx, data->set.str[STRING_KEY],
+    file_type = do_file_type(SSL_SET_OPTION(key_type));
+    if(SSL_CTX_use_PrivateKey_file(conssl->ctx, SSL_SET_OPTION(key),
                                     file_type) != 1) {
       failf(data, "unable to set private key");
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 #endif /* !NO_FILESYSTEM */
 
   /* SSL always tries to verify the peer, this only says whether it should
    * fail to connect if the verification fails, or if it should continue
    * anyway. In the latter case the result of the verification is checked with
    * SSL_get_verify_result() below. */
   SSL_CTX_set_verify(conssl->ctx,
-                     data->set.ssl.verifypeer?SSL_VERIFY_PEER:SSL_VERIFY_NONE,
+                     SSL_CONN_CONFIG(verifypeer)?SSL_VERIFY_PEER:
+                                                 SSL_VERIFY_NONE,
                      NULL);
 
 #ifdef HAVE_SNI
   if(sni) {
     struct in_addr addr4;
 #ifdef ENABLE_IPV6
     struct in6_addr addr6;
 #endif
-    size_t hostname_len = strlen(conn->host.name);
+    const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+      conn->host.name;
+    size_t hostname_len = strlen(hostname);
     if((hostname_len < USHRT_MAX) &&
-       (0 == Curl_inet_pton(AF_INET, conn->host.name, &addr4)) &&
+       (0 == Curl_inet_pton(AF_INET, hostname, &addr4)) &&
 #ifdef ENABLE_IPV6
-       (0 == Curl_inet_pton(AF_INET6, conn->host.name, &addr6)) &&
+       (0 == Curl_inet_pton(AF_INET6, hostname, &addr6)) &&
 #endif
-       (CyaSSL_CTX_UseSNI(conssl->ctx, CYASSL_SNI_HOST_NAME, conn->host.name,
+       (CyaSSL_CTX_UseSNI(conssl->ctx, CYASSL_SNI_HOST_NAME, hostname,
                           (unsigned short)hostname_len) != 1)) {
       infof(data, "WARNING: failed to configure server name indication (SNI) "
             "TLS extension\n");
     }
   }
 #endif
@@ -328,13 +334,13 @@
     if(result) {
       failf(data, "error signaled by ssl ctx callback");
       return result;
     }
   }
 #ifdef NO_FILESYSTEM
-  else if(data->set.ssl.verifypeer) {
+  else if(SSL_CONN_CONFIG(verifypeer)) {
     failf(data, "SSL: Certificates couldn't be loaded because CyaSSL was built"
           " with \"no filesystem\". Either disable peer verification"
           " (insecure) or if you are building an application with libcurl you"
           " can load certificates via CURLOPT_SSL_CTX_FUNCTION.");
     return CURLE_SSL_CONNECT_ERROR;
   }
@@ -374,27 +380,27 @@
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 #endif /* HAVE_ALPN */
 
   /* Check if there's a cached ID we can/should use here! */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     void *ssl_sessionid = NULL;
 
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL)) {
+    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL, sockindex)) {
       /* we got a session id, use it! */
       if(!SSL_set_session(conssl->handle, ssl_sessionid)) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "SSL: SSL_set_session failed: %s",
               ERR_error_string(SSL_get_error(conssl->handle, 0),
               error_buffer));
         return CURLE_SSL_CONNECT_ERROR;
       }
       /* Informational message */
-      infof (data, "SSL re-using session ID\n");
+      infof(data, "SSL re-using session ID\n");
     }
     Curl_ssl_sessionid_unlock(conn);
   }
 
   /* pass the raw socket into the SSL layer */
   if(!SSL_set_fd(conssl->handle, (int)sockfd)) {
@@ -411,19 +417,26 @@
 cyassl_connect_step2(struct connectdata *conn,
                      int sockindex)
 {
   int ret = -1;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data* conssl = &conn->ssl[sockindex];
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const char * const dispname = SSL_IS_PROXY() ?
+    conn->http_proxy.host.dispname : conn->host.dispname;
+  const char * const pinnedpubkey = SSL_IS_PROXY() ?
+                        data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+                        data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
 
   conn->recv[sockindex] = cyassl_recv;
   conn->send[sockindex] = cyassl_send;
 
   /* Enable RFC2818 checks */
-  if(data->set.ssl.verifyhost) {
-    ret = CyaSSL_check_domain_name(conssl->handle, conn->host.name);
+  if(SSL_CONN_CONFIG(verifyhost)) {
+    ret = CyaSSL_check_domain_name(conssl->handle, hostname);
     if(ret == SSL_FAILURE)
       return CURLE_OUT_OF_MEMORY;
   }
 
   ret = SSL_connect(conssl->handle);
   if(ret != 1) {
@@ -441,37 +454,37 @@
     /* There is no easy way to override only the CN matching.
      * This will enable the override of both mismatching SubjectAltNames
      * as also mismatching CN fields */
     else if(DOMAIN_NAME_MISMATCH == detail) {
 #if 1
       failf(data, "\tsubject alt name(s) or common name do not match \"%s\"\n",
-            conn->host.dispname);
+            dispname);
       return CURLE_PEER_FAILED_VERIFICATION;
 #else
       /* When the CyaSSL_check_domain_name() is used and you desire to continue
-       * on a DOMAIN_NAME_MISMATCH, i.e. 'data->set.ssl.verifyhost == 0',
+       * on a DOMAIN_NAME_MISMATCH, i.e. 'conn->ssl_config.verifyhost == 0',
        * CyaSSL version 2.4.0 will fail with an INCOMPLETE_DATA error. The only
        * way to do this is currently to switch the CyaSSL_check_domain_name()
-       * in and out based on the 'data->set.ssl.verifyhost' value. */
-      if(data->set.ssl.verifyhost) {
+       * in and out based on the 'conn->ssl_config.verifyhost' value. */
+      if(SSL_CONN_CONFIG(verifyhost)) {
         failf(data,
               "\tsubject alt name(s) or common name do not match \"%s\"\n",
-              conn->host.dispname);
+              dispname);
         return CURLE_PEER_FAILED_VERIFICATION;
       }
       else {
         infof(data,
               "\tsubject alt name(s) and/or common name do not match \"%s\"\n",
-              conn->host.dispname);
+              dispname);
         return CURLE_OK;
       }
 #endif
     }
 #if LIBCYASSL_VERSION_HEX >= 0x02007000 /* 2.7.0 */
     else if(ASN_NO_SIGNER_E == detail) {
-      if(data->set.ssl.verifypeer) {
+      if(SSL_CONN_CONFIG(verifypeer)) {
         failf(data, "\tCA signer not available for verification\n");
         return CURLE_SSL_CACERT_BADFILE;
       }
       else {
         /* Just continue with a warning if no strict certificate
            verification is required. */
@@ -484,13 +497,13 @@
       failf(data, "SSL_connect failed with error %d: %s", detail,
           ERR_error_string(detail, error_buffer));
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 
-  if(data->set.str[STRING_SSL_PINNEDPUBLICKEY]) {
+  if(pinnedpubkey) {
 #ifdef KEEP_PEER_CERT
     X509 *x509;
     const char *x509_der;
     int x509_der_len;
     curl_X509certificate x509_parsed;
     curl_asn1Element *pubkey;
@@ -506,22 +519,23 @@
     if(!x509_der) {
       failf(data, "SSL: failed retrieving ASN.1 server certificate");
       return CURLE_SSL_PINNEDPUBKEYNOTMATCH;
     }
 
     memset(&x509_parsed, 0, sizeof x509_parsed);
-    Curl_parseX509(&x509_parsed, x509_der, x509_der + x509_der_len);
+    if(Curl_parseX509(&x509_parsed, x509_der, x509_der + x509_der_len))
+      return CURLE_SSL_PINNEDPUBKEYNOTMATCH;
 
     pubkey = &x509_parsed.subjectPublicKeyInfo;
     if(!pubkey->header || pubkey->end <= pubkey->header) {
       failf(data, "SSL: failed retrieving public key from server certificate");
       return CURLE_SSL_PINNEDPUBKEYNOTMATCH;
     }
 
     result = Curl_pin_peer_pubkey(data,
-                                  data->set.str[STRING_SSL_PINNEDPUBLICKEY],
+                                  pinnedpubkey,
                                   (const unsigned char *)pubkey->header,
                                   (size_t)(pubkey->end - pubkey->header));
     if(result) {
       failf(data, "SSL: public key does not match pinned public key!");
       return result;
     }
@@ -580,32 +594,33 @@
   CURLcode result = CURLE_OK;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     bool incache;
     SSL_SESSION *our_ssl_sessionid;
     void *old_ssl_sessionid = NULL;
 
     our_ssl_sessionid = SSL_get_session(connssl->handle);
 
     Curl_ssl_sessionid_lock(conn);
-    incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL));
+    incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL,
+                                      sockindex));
     if(incache) {
       if(old_ssl_sessionid != our_ssl_sessionid) {
         infof(data, "old SSL session ID is stale, removing\n");
         Curl_ssl_delsessionid(conn, old_ssl_sessionid);
         incache = FALSE;
       }
     }
 
     if(!incache) {
       result = Curl_ssl_addsessionid(conn, our_ssl_sessionid,
-                                     0 /* unknown size */);
+                                     0 /* unknown size */, sockindex);
       if(result) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "failed to store ssl session");
         return result;
       }
     }
@@ -651,17 +666,17 @@
 void Curl_cyassl_close(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *conssl = &conn->ssl[sockindex];
 
   if(conssl->handle) {
     (void)SSL_shutdown(conssl->handle);
-    SSL_free (conssl->handle);
+    SSL_free(conssl->handle);
     conssl->handle = NULL;
   }
   if(conssl->ctx) {
-    SSL_CTX_free (conssl->ctx);
+    SSL_CTX_free(conssl->ctx);
     conssl->ctx = NULL;
   }
 }
 
 static ssize_t cyassl_recv(struct connectdata *conn,
                            int num,
@@ -737,13 +752,13 @@
 int Curl_cyassl_shutdown(struct connectdata *conn, int sockindex)
 {
   int retval = 0;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   if(connssl->handle) {
-    SSL_free (connssl->handle);
+    SSL_free(connssl->handle);
     connssl->handle = NULL;
   }
   return retval;
 }
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/darwinssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/darwinssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/darwinssl.c	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/darwinssl.c	2016-12-19 15:27:56.000000000 +0800
@@ -194,13 +194,13 @@
   int theErr;
 
   *dataLength = 0;
 
   do {
     length = write(sock,
-                   (char*)dataPtr + bytesSent,
+                   (char *)dataPtr + bytesSent,
                    dataLen - bytesSent);
   } while((length > 0) &&
            ( (bytesSent += length) < dataLen) );
 
   if(length <= 0) {
     theErr = errno;
@@ -216,14 +216,15 @@
     ortn = noErr;
   }
   *dataLength = bytesSent;
   return ortn;
 }
 
-CF_INLINE const char *SSLCipherNameForNumber(SSLCipherSuite cipher) {
-  switch (cipher) {
+CF_INLINE const char *SSLCipherNameForNumber(SSLCipherSuite cipher)
+{
+  switch(cipher) {
     /* SSL version 3.0 */
     case SSL_RSA_WITH_NULL_MD5:
       return "SSL_RSA_WITH_NULL_MD5";
       break;
     case SSL_RSA_WITH_NULL_SHA:
       return "SSL_RSA_WITH_NULL_SHA";
@@ -361,13 +362,14 @@
       return "SSL_RSA_WITH_3DES_EDE_CBC_MD5";
       break;
   }
   return "SSL_NULL_WITH_NULL_NULL";
 }
 
-CF_INLINE const char *TLSCipherNameForNumber(SSLCipherSuite cipher) {
+CF_INLINE const char *TLSCipherNameForNumber(SSLCipherSuite cipher)
+{
   switch(cipher) {
     /* TLS 1.0 with AES (RFC 3268) */
     case TLS_RSA_WITH_AES_128_CBC_SHA:
       return "TLS_RSA_WITH_AES_128_CBC_SHA";
       break;
     case TLS_DH_DSS_WITH_AES_128_CBC_SHA:
@@ -880,44 +882,80 @@
 #endif /* CURL_SUPPORT_MAC_10_6 */
 
 static OSStatus CopyIdentityWithLabel(char *label,
                                       SecIdentityRef *out_cert_and_key)
 {
   OSStatus status = errSecItemNotFound;
+  CFArrayRef keys_list;
+  CFIndex keys_list_count;
+  CFIndex i;
+  CFStringRef common_name;
 
 #if CURL_BUILD_MAC_10_7 || CURL_BUILD_IOS
   /* SecItemCopyMatching() was introduced in iOS and Snow Leopard.
      kSecClassIdentity was introduced in Lion. If both exist, let's use them
      to find the certificate. */
   if(SecItemCopyMatching != NULL && kSecClassIdentity != NULL) {
-    CFTypeRef keys[4];
-    CFTypeRef values[4];
+    CFTypeRef keys[5];
+    CFTypeRef values[5];
     CFDictionaryRef query_dict;
     CFStringRef label_cf = CFStringCreateWithCString(NULL, label,
       kCFStringEncodingUTF8);
 
     /* Set up our search criteria and expected results: */
     values[0] = kSecClassIdentity; /* we want a certificate and a key */
     keys[0] = kSecClass;
     values[1] = kCFBooleanTrue;    /* we want a reference */
     keys[1] = kSecReturnRef;
-    values[2] = kSecMatchLimitOne; /* one is enough, thanks */
+    values[2] = kSecMatchLimitAll; /* kSecMatchLimitOne would be better if the
+                                    * label matching below worked correctly */
     keys[2] = kSecMatchLimit;
     /* identity searches need a SecPolicyRef in order to work */
-    values[3] = SecPolicyCreateSSL(false, label_cf);
+    values[3] = SecPolicyCreateSSL(false, NULL);
     keys[3] = kSecMatchPolicy;
+    /* match the name of the certificate (doesn't work in macOS 10.12.1) */
+    values[4] = label_cf;
+    keys[4] = kSecAttrLabel;
     query_dict = CFDictionaryCreate(NULL, (const void **)keys,
-                                   (const void **)values, 4L,
-                                   &kCFCopyStringDictionaryKeyCallBacks,
-                                   &kCFTypeDictionaryValueCallBacks);
+                                    (const void **)values, 5L,
+                                    &kCFCopyStringDictionaryKeyCallBacks,
+                                    &kCFTypeDictionaryValueCallBacks);
     CFRelease(values[3]);
-    CFRelease(label_cf);
 
     /* Do we have a match? */
-    status = SecItemCopyMatching(query_dict, (CFTypeRef *)out_cert_and_key);
+    status = SecItemCopyMatching(query_dict, (CFTypeRef *) &keys_list);
+
+    /* Because kSecAttrLabel matching doesn't work with kSecClassIdentity,
+     * we need to find the correct identity ourselves */
+    if(status == noErr) {
+      keys_list_count = CFArrayGetCount(keys_list);
+      *out_cert_and_key = NULL;
+      for(i=0; i<keys_list_count; i++) {
+        OSStatus err = noErr;
+        SecCertificateRef cert = NULL;
+        *out_cert_and_key =
+          (SecIdentityRef) CFArrayGetValueAtIndex(keys_list, i);
+        err = SecIdentityCopyCertificate(*out_cert_and_key, &cert);
+        if(err == noErr) {
+          SecCertificateCopyCommonName(cert, &common_name);
+          if(CFStringCompare(common_name, label_cf, 0) == kCFCompareEqualTo) {
+            CFRelease(cert);
+            CFRelease(common_name);
+            status = noErr;
+            break;
+          }
+          CFRelease(common_name);
+        }
+        *out_cert_and_key = NULL;
+        status = 1;
+        CFRelease(cert);
+      }
+    }
+
     CFRelease(query_dict);
+    CFRelease(label_cf);
   }
   else {
 #if CURL_SUPPORT_MAC_10_6
     /* On Leopard and Snow Leopard, fall back to SecKeychainSearch. */
     status = CopyIdentityWithLabelOldSchool(label, out_cert_and_key);
 #endif /* CURL_SUPPORT_MAC_10_6 */
@@ -999,12 +1037,18 @@
 static CURLcode darwinssl_connect_step1(struct connectdata *conn,
                                         int sockindex)
 {
   struct Curl_easy *data = conn->data;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  const char * const ssl_cafile = SSL_CONN_CONFIG(CAfile);
+  const bool verifypeer = SSL_CONN_CONFIG(verifypeer);
+  char * const ssl_cert = SSL_SET_OPTION(cert);
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const long int port = SSL_IS_PROXY() ? conn->port : conn->remote_port;
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif /* ENABLE_IPV6 */
   size_t all_ciphers_count = 0UL, allowed_ciphers_count = 0UL, i;
@@ -1049,168 +1093,184 @@
 #endif /* CURL_BUILD_MAC_10_8 || CURL_BUILD_IOS */
   connssl->ssl_write_buffered_length = 0UL; /* reset buffered write length */
 
   /* check to see if we've been told to use an explicit SSL/TLS version */
 #if CURL_BUILD_MAC_10_8 || CURL_BUILD_IOS
   if(SSLSetProtocolVersionMax != NULL) {
-    switch(data->set.ssl.version) {
-      default:
-      case CURL_SSLVERSION_DEFAULT:
-      case CURL_SSLVERSION_TLSv1:
-        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol1);
-        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
-        break;
-      case CURL_SSLVERSION_TLSv1_0:
-        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol1);
-        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol1);
-        break;
-      case CURL_SSLVERSION_TLSv1_1:
-        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol11);
-        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol11);
-        break;
-      case CURL_SSLVERSION_TLSv1_2:
-        (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol12);
-        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
-        break;
-      case CURL_SSLVERSION_SSLv3:
-        err = SSLSetProtocolVersionMin(connssl->ssl_ctx, kSSLProtocol3);
-        if(err != noErr) {
-          failf(data, "Your version of the OS does not support SSLv3");
-          return CURLE_SSL_CONNECT_ERROR;
-        }
-        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kSSLProtocol3);
-        break;
-      case CURL_SSLVERSION_SSLv2:
-        err = SSLSetProtocolVersionMin(connssl->ssl_ctx, kSSLProtocol2);
-        if(err != noErr) {
-          failf(data, "Your version of the OS does not support SSLv2");
-          return CURLE_SSL_CONNECT_ERROR;
-        }
-        (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kSSLProtocol2);
+    switch(conn->ssl_config.version) {
+    case CURL_SSLVERSION_DEFAULT:
+    case CURL_SSLVERSION_TLSv1:
+      (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol1);
+      (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
+      break;
+    case CURL_SSLVERSION_TLSv1_0:
+      (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol1);
+      (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol1);
+      break;
+    case CURL_SSLVERSION_TLSv1_1:
+      (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol11);
+      (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol11);
+      break;
+    case CURL_SSLVERSION_TLSv1_2:
+      (void)SSLSetProtocolVersionMin(connssl->ssl_ctx, kTLSProtocol12);
+      (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kTLSProtocol12);
+      break;
+    case CURL_SSLVERSION_TLSv1_3:
+      failf(data, "DarwinSSL: TLS 1.3 is not yet supported");
+      return CURLE_SSL_CONNECT_ERROR;
+    case CURL_SSLVERSION_SSLv3:
+      err = SSLSetProtocolVersionMin(connssl->ssl_ctx, kSSLProtocol3);
+      if(err != noErr) {
+        failf(data, "Your version of the OS does not support SSLv3");
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kSSLProtocol3);
+      break;
+    case CURL_SSLVERSION_SSLv2:
+      err = SSLSetProtocolVersionMin(connssl->ssl_ctx, kSSLProtocol2);
+      if(err != noErr) {
+        failf(data, "Your version of the OS does not support SSLv2");
+        return CURLE_SSL_CONNECT_ERROR;
+      }
+      (void)SSLSetProtocolVersionMax(connssl->ssl_ctx, kSSLProtocol2);
+      break;
+    default:
+      failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+      return CURLE_SSL_CONNECT_ERROR;
     }
   }
   else {
 #if CURL_SUPPORT_MAC_10_8
     (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                        kSSLProtocolAll,
                                        false);
-    switch (data->set.ssl.version) {
-      default:
-      case CURL_SSLVERSION_DEFAULT:
-      case CURL_SSLVERSION_TLSv1:
-        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kTLSProtocol1,
-                                           true);
-        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kTLSProtocol11,
-                                           true);
-        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kTLSProtocol12,
-                                           true);
-        break;
-      case CURL_SSLVERSION_TLSv1_0:
-        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kTLSProtocol1,
-                                           true);
-        break;
-      case CURL_SSLVERSION_TLSv1_1:
-        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kTLSProtocol11,
-                                           true);
-        break;
-      case CURL_SSLVERSION_TLSv1_2:
-        (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kTLSProtocol12,
-                                           true);
-        break;
-      case CURL_SSLVERSION_SSLv3:
-        err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kSSLProtocol3,
-                                           true);
-        if(err != noErr) {
-          failf(data, "Your version of the OS does not support SSLv3");
-          return CURLE_SSL_CONNECT_ERROR;
-        }
-        break;
-      case CURL_SSLVERSION_SSLv2:
-        err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                           kSSLProtocol2,
-                                           true);
-        if(err != noErr) {
-          failf(data, "Your version of the OS does not support SSLv2");
-          return CURLE_SSL_CONNECT_ERROR;
-        }
-        break;
-    }
-#endif  /* CURL_SUPPORT_MAC_10_8 */
-  }
-#else
-  (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx, kSSLProtocolAll, false);
-  switch(data->set.ssl.version) {
-    default:
+    switch(conn->ssl_config.version) {
     case CURL_SSLVERSION_DEFAULT:
     case CURL_SSLVERSION_TLSv1:
+      (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                         kTLSProtocol1,
+                                         true);
+      (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                         kTLSProtocol11,
+                                         true);
+      (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                         kTLSProtocol12,
+                                         true);
+      break;
     case CURL_SSLVERSION_TLSv1_0:
       (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
                                          kTLSProtocol1,
                                          true);
       break;
     case CURL_SSLVERSION_TLSv1_1:
-      failf(data, "Your version of the OS does not support TLSv1.1");
-      return CURLE_SSL_CONNECT_ERROR;
+      (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                         kTLSProtocol11,
+                                         true);
+      break;
     case CURL_SSLVERSION_TLSv1_2:
-      failf(data, "Your version of the OS does not support TLSv1.2");
+      (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                         kTLSProtocol12,
+                                         true);
+      break;
+    case CURL_SSLVERSION_TLSv1_3:
+      failf(data, "DarwinSSL: TLS 1.3 is not yet supported");
       return CURLE_SSL_CONNECT_ERROR;
-    case CURL_SSLVERSION_SSLv2:
+    case CURL_SSLVERSION_SSLv3:
       err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                         kSSLProtocol2,
+                                         kSSLProtocol3,
                                          true);
       if(err != noErr) {
-        failf(data, "Your version of the OS does not support SSLv2");
+        failf(data, "Your version of the OS does not support SSLv3");
         return CURLE_SSL_CONNECT_ERROR;
       }
       break;
-    case CURL_SSLVERSION_SSLv3:
+    case CURL_SSLVERSION_SSLv2:
       err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
-                                         kSSLProtocol3,
+                                         kSSLProtocol2,
                                          true);
       if(err != noErr) {
-        failf(data, "Your version of the OS does not support SSLv3");
+        failf(data, "Your version of the OS does not support SSLv2");
         return CURLE_SSL_CONNECT_ERROR;
       }
       break;
+    default:
+      failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+      return CURLE_SSL_CONNECT_ERROR;
+    }
+#endif  /* CURL_SUPPORT_MAC_10_8 */
+  }
+#else
+  (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx, kSSLProtocolAll, false);
+  switch(conn->ssl_config.version) {
+  case CURL_SSLVERSION_DEFAULT:
+  case CURL_SSLVERSION_TLSv1:
+  case CURL_SSLVERSION_TLSv1_0:
+    (void)SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                       kTLSProtocol1,
+                                       true);
+    break;
+  case CURL_SSLVERSION_TLSv1_1:
+    failf(data, "Your version of the OS does not support TLSv1.1");
+    return CURLE_SSL_CONNECT_ERROR;
+  case CURL_SSLVERSION_TLSv1_2:
+    failf(data, "Your version of the OS does not support TLSv1.2");
+    return CURLE_SSL_CONNECT_ERROR;
+  case CURL_SSLVERSION_TLSv1_3:
+    failf(data, "Your version of the OS does not support TLSv1.3");
+    return CURLE_SSL_CONNECT_ERROR;
+  case CURL_SSLVERSION_SSLv2:
+    err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                       kSSLProtocol2,
+                                       true);
+    if(err != noErr) {
+      failf(data, "Your version of the OS does not support SSLv2");
+      return CURLE_SSL_CONNECT_ERROR;
+    }
+    break;
+  case CURL_SSLVERSION_SSLv3:
+    err = SSLSetProtocolVersionEnabled(connssl->ssl_ctx,
+                                       kSSLProtocol3,
+                                       true);
+    if(err != noErr) {
+      failf(data, "Your version of the OS does not support SSLv3");
+      return CURLE_SSL_CONNECT_ERROR;
+    }
+    break;
+  default:
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+    return CURLE_SSL_CONNECT_ERROR;
   }
 #endif /* CURL_BUILD_MAC_10_8 || CURL_BUILD_IOS */
 
-  if(data->set.str[STRING_KEY]) {
+  if(SSL_SET_OPTION(key)) {
     infof(data, "WARNING: SSL: CURLOPT_SSLKEY is ignored by Secure "
-                "Transport. The private key must be in the Keychain.\n");
+          "Transport. The private key must be in the Keychain.\n");
   }
 
-  if(data->set.str[STRING_CERT]) {
+  if(ssl_cert) {
     SecIdentityRef cert_and_key = NULL;
-    bool is_cert_file = is_file(data->set.str[STRING_CERT]);
+    bool is_cert_file = is_file(ssl_cert);
 
     /* User wants to authenticate with a client cert. Look for it:
        If we detect that this is a file on disk, then let's load it.
        Otherwise, assume that the user wants to use an identity loaded
        from the Keychain. */
     if(is_cert_file) {
-      if(!data->set.str[STRING_CERT_TYPE])
+      if(!SSL_SET_OPTION(cert_type))
         infof(data, "WARNING: SSL: Certificate type not set, assuming "
                     "PKCS#12 format.\n");
-      else if(strncmp(data->set.str[STRING_CERT_TYPE], "P12",
-        strlen(data->set.str[STRING_CERT_TYPE])) != 0)
+      else if(strncmp(SSL_SET_OPTION(cert_type), "P12",
+        strlen(SSL_SET_OPTION(cert_type))) != 0)
         infof(data, "WARNING: SSL: The Security framework only supports "
                     "loading identities that are in PKCS#12 format.\n");
 
-      err = CopyIdentityFromPKCS12File(data->set.str[STRING_CERT],
-        data->set.str[STRING_KEY_PASSWD], &cert_and_key);
+      err = CopyIdentityFromPKCS12File(ssl_cert,
+        SSL_SET_OPTION(key_passwd), &cert_and_key);
     }
     else
-      err = CopyIdentityWithLabel(data->set.str[STRING_CERT], &cert_and_key);
+      err = CopyIdentityWithLabel(ssl_cert, &cert_and_key);
 
     if(err == noErr) {
       SecCertificateRef cert = NULL;
       CFTypeRef certs_c[1];
       CFArrayRef certs;
 
@@ -1243,33 +1303,33 @@
         return CURLE_SSL_CERTPROBLEM;
       }
       CFRelease(cert_and_key);
     }
     else {
       switch(err) {
-        case errSecAuthFailed: case -25264: /* errSecPkcs12VerifyFailure */
-          failf(data, "SSL: Incorrect password for the certificate \"%s\" "
-                      "and its private key.", data->set.str[STRING_CERT]);
-          break;
-        case -26275: /* errSecDecode */ case -25257: /* errSecUnknownFormat */
-          failf(data, "SSL: Couldn't make sense of the data in the "
-                      "certificate \"%s\" and its private key.",
-                      data->set.str[STRING_CERT]);
-          break;
-        case -25260: /* errSecPassphraseRequired */
-          failf(data, "SSL The certificate \"%s\" requires a password.",
-                      data->set.str[STRING_CERT]);
-          break;
-        case errSecItemNotFound:
-          failf(data, "SSL: Can't find the certificate \"%s\" and its private "
-                      "key in the Keychain.", data->set.str[STRING_CERT]);
-          break;
-        default:
-          failf(data, "SSL: Can't load the certificate \"%s\" and its private "
-                      "key: OSStatus %d", data->set.str[STRING_CERT], err);
-          break;
+      case errSecAuthFailed: case -25264: /* errSecPkcs12VerifyFailure */
+        failf(data, "SSL: Incorrect password for the certificate \"%s\" "
+                    "and its private key.", ssl_cert);
+        break;
+      case -26275: /* errSecDecode */ case -25257: /* errSecUnknownFormat */
+        failf(data, "SSL: Couldn't make sense of the data in the "
+                    "certificate \"%s\" and its private key.",
+                    ssl_cert);
+        break;
+      case -25260: /* errSecPassphraseRequired */
+        failf(data, "SSL The certificate \"%s\" requires a password.",
+                    ssl_cert);
+        break;
+      case errSecItemNotFound:
+        failf(data, "SSL: Can't find the certificate \"%s\" and its private "
+                    "key in the Keychain.", ssl_cert);
+        break;
+      default:
+        failf(data, "SSL: Can't load the certificate \"%s\" and its private "
+                    "key: OSStatus %d", ssl_cert, err);
+        break;
       }
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* SSL always tries to verify the peer, this only says whether it should
@@ -1294,75 +1354,73 @@
   */
 #if CURL_BUILD_MAC
   if(SSLSetSessionOption != NULL && darwinver_maj >= 13) {
 #else
   if(SSLSetSessionOption != NULL) {
 #endif /* CURL_BUILD_MAC */
-    bool break_on_auth = !data->set.ssl.verifypeer ||
-      data->set.str[STRING_SSL_CAFILE];
+    bool break_on_auth = !conn->ssl_config.verifypeer || ssl_cafile;
     err = SSLSetSessionOption(connssl->ssl_ctx,
                               kSSLSessionOptionBreakOnServerAuth,
                               break_on_auth);
     if(err != noErr) {
       failf(data, "SSL: SSLSetSessionOption() failed: OSStatus %d", err);
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
   else {
 #if CURL_SUPPORT_MAC_10_8
     err = SSLSetEnableCertVerify(connssl->ssl_ctx,
-                                 data->set.ssl.verifypeer?true:false);
+                                 conn->ssl_config.verifypeer?true:false);
     if(err != noErr) {
       failf(data, "SSL: SSLSetEnableCertVerify() failed: OSStatus %d", err);
       return CURLE_SSL_CONNECT_ERROR;
     }
 #endif /* CURL_SUPPORT_MAC_10_8 */
   }
 #else
   err = SSLSetEnableCertVerify(connssl->ssl_ctx,
-                               data->set.ssl.verifypeer?true:false);
+                               conn->ssl_config.verifypeer?true:false);
   if(err != noErr) {
     failf(data, "SSL: SSLSetEnableCertVerify() failed: OSStatus %d", err);
     return CURLE_SSL_CONNECT_ERROR;
   }
 #endif /* CURL_BUILD_MAC_10_6 || CURL_BUILD_IOS */
 
-  if(data->set.str[STRING_SSL_CAFILE]) {
-    bool is_cert_file = is_file(data->set.str[STRING_SSL_CAFILE]);
+  if(ssl_cafile) {
+    bool is_cert_file = is_file(ssl_cafile);
 
     if(!is_cert_file) {
-      failf(data, "SSL: can't load CA certificate file %s",
-            data->set.str[STRING_SSL_CAFILE]);
+      failf(data, "SSL: can't load CA certificate file %s", ssl_cafile);
       return CURLE_SSL_CACERT_BADFILE;
     }
-    if(!data->set.ssl.verifypeer) {
+    if(!verifypeer) {
       failf(data, "SSL: CA certificate set, but certificate verification "
             "is disabled");
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 
   /* Configure hostname check. SNI is used if available.
    * Both hostname check and SNI require SSLSetPeerDomainName().
    * Also: the verifyhost setting influences SNI usage */
-  if(data->set.ssl.verifyhost) {
-    err = SSLSetPeerDomainName(connssl->ssl_ctx, conn->host.name,
-    strlen(conn->host.name));
+  if(conn->ssl_config.verifyhost) {
+    err = SSLSetPeerDomainName(connssl->ssl_ctx, hostname,
+    strlen(hostname));
 
     if(err != noErr) {
       infof(data, "WARNING: SSL: SSLSetPeerDomainName() failed: OSStatus %d\n",
             err);
     }
 
-    if((Curl_inet_pton(AF_INET, conn->host.name, &addr))
+    if((Curl_inet_pton(AF_INET, hostname, &addr))
   #ifdef ENABLE_IPV6
-    || (Curl_inet_pton(AF_INET6, conn->host.name, &addr))
+    || (Curl_inet_pton(AF_INET6, hostname, &addr))
   #endif
        ) {
-         infof(data, "WARNING: using IP address, SNI is being disabled by "
-         "the OS.\n");
+      infof(data, "WARNING: using IP address, SNI is being disabled by "
+            "the OS.\n");
     }
   }
 
   /* Disable cipher suites that ST supports but are not safe. These ciphers
      are unlikely to be used in any case since ST gives other ciphers a much
      higher priority, but it's probably better that we not connect at all than
@@ -1379,13 +1437,13 @@
      /* There's a known bug in early versions of Mountain Lion where ST's ECC
         ciphers (cipher suite 0xC001 through 0xC032) simply do not work.
         Work around the problem here by disabling those ciphers if we are
         running in an affected version of OS X. */
       if(darwinver_maj == 12 && darwinver_min <= 3 &&
          all_ciphers[i] >= 0xC001 && all_ciphers[i] <= 0xC032) {
-           continue;
+        continue;
       }
 #endif /* CURL_BUILD_MAC */
       switch(all_ciphers[i]) {
         /* Disable NULL ciphersuites: */
         case SSL_NULL_WITH_NULL_NULL:
         case SSL_RSA_WITH_NULL_MD5:
@@ -1471,27 +1529,28 @@
   Curl_safefree(allowed_ciphers);
 
 #if CURL_BUILD_MAC_10_9 || CURL_BUILD_IOS_7
   /* We want to enable 1/n-1 when using a CBC cipher unless the user
      specifically doesn't want us doing that: */
   if(SSLSetSessionOption != NULL) {
+    /* TODO s/data->set.ssl.enable_beast/SSL_SET_OPTION(enable_beast)/g */
     SSLSetSessionOption(connssl->ssl_ctx, kSSLSessionOptionSendOneByteRecord,
-                      !data->set.ssl_enable_beast);
+                      !data->set.ssl.enable_beast);
     SSLSetSessionOption(connssl->ssl_ctx, kSSLSessionOptionFalseStart,
                       data->set.ssl.falsestart); /* false start support */
   }
 #endif /* CURL_BUILD_MAC_10_9 || CURL_BUILD_IOS_7 */
 
   /* Check if there's a cached ID we can/should use here! */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     char *ssl_sessionid;
     size_t ssl_sessionid_len;
 
     Curl_ssl_sessionid_lock(conn);
     if(!Curl_ssl_getsessionid(conn, (void **)&ssl_sessionid,
-                              &ssl_sessionid_len)) {
+                              &ssl_sessionid_len, sockindex)) {
       /* we got a session id, use it! */
       err = SSLSetPeerID(connssl->ssl_ctx, ssl_sessionid, ssl_sessionid_len);
       Curl_ssl_sessionid_unlock(conn);
       if(err != noErr) {
         failf(data, "SSL: SSLSetPeerID() failed: OSStatus %d", err);
         return CURLE_SSL_CONNECT_ERROR;
@@ -1501,25 +1560,25 @@
     }
     /* If there isn't one, then let's make one up! This has to be done prior
        to starting the handshake. */
     else {
       CURLcode result;
       ssl_sessionid =
-        aprintf("%s:%d:%d:%s:%hu", data->set.str[STRING_SSL_CAFILE],
-                data->set.ssl.verifypeer, data->set.ssl.verifyhost,
-                conn->host.name, conn->remote_port);
+        aprintf("%s:%d:%d:%s:%hu", ssl_cafile,
+                verifypeer, SSL_CONN_CONFIG(verifyhost), hostname, port);
       ssl_sessionid_len = strlen(ssl_sessionid);
 
       err = SSLSetPeerID(connssl->ssl_ctx, ssl_sessionid, ssl_sessionid_len);
       if(err != noErr) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "SSL: SSLSetPeerID() failed: OSStatus %d", err);
         return CURLE_SSL_CONNECT_ERROR;
       }
 
-      result = Curl_ssl_addsessionid(conn, ssl_sessionid, ssl_sessionid_len);
+      result = Curl_ssl_addsessionid(conn, ssl_sessionid, ssl_sessionid_len,
+                                     sockindex);
       Curl_ssl_sessionid_unlock(conn);
       if(result) {
         failf(data, "failed to store ssl session");
         return result;
       }
     }
@@ -1817,13 +1876,13 @@
   CFRelease(array);
   CFRelease(trust);
   if(ret != noErr) {
     return sslerr_to_curlerr(data, ret);
   }
 
-  switch (trust_eval) {
+  switch(trust_eval) {
     case kSecTrustResultUnspecified:
     case kSecTrustResultProceed:
       return CURLE_OK;
 
     case kSecTrustResultRecoverableTrustFailure:
     case kSecTrustResultDeny:
@@ -1839,32 +1898,34 @@
 {
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   OSStatus err;
   SSLCipherSuite cipher;
   SSLProtocol protocol = 0;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 
   DEBUGASSERT(ssl_connect_2 == connssl->connecting_state
               || ssl_connect_2_reading == connssl->connecting_state
               || ssl_connect_2_writing == connssl->connecting_state);
 
   /* Here goes nothing: */
   err = SSLHandshake(connssl->ssl_ctx);
 
   if(err != noErr) {
-    switch (err) {
+    switch(err) {
       case errSSLWouldBlock:  /* they're not done with us yet */
         connssl->connecting_state = connssl->ssl_direction ?
             ssl_connect_2_writing : ssl_connect_2_reading;
         return CURLE_OK;
 
       /* The below is errSSLServerAuthCompleted; it's not defined in
         Leopard's headers */
       case -9841:
-        if(data->set.str[STRING_SSL_CAFILE]) {
-          int res = verify_cert(data->set.str[STRING_SSL_CAFILE], data,
+        if(SSL_CONN_CONFIG(CAfile)) {
+          int res = verify_cert(SSL_CONN_CONFIG(CAfile), data,
                                 connssl->ssl_ctx);
           if(res != CURLE_OK)
             return res;
         }
         /* the documentation says we need to call SSLHandshake() again */
         return darwinssl_connect_step2(conn, sockindex);
@@ -1927,24 +1988,24 @@
       case errSSLFatalAlert:
         failf(data, "Fatal SSL engine error encountered during the SSL "
               "handshake");
         return CURLE_SSL_CONNECT_ERROR;
       default:
         failf(data, "Unknown SSL protocol error in connection to %s:%d",
-              conn->host.name, err);
+              hostname, err);
         return CURLE_SSL_CONNECT_ERROR;
     }
   }
   else {
     /* we have been connected fine, we're not waiting for anything else. */
     connssl->connecting_state = ssl_connect_3;
 
     /* Informational message */
     (void)SSLGetNegotiatedCipher(connssl->ssl_ctx, &cipher);
     (void)SSLGetNegotiatedProtocolVersion(connssl->ssl_ctx, &protocol);
-    switch (protocol) {
+    switch(protocol) {
       case kSSLProtocol2:
         infof(data, "SSL 2.0 connection using %s\n",
               SSLCipherNameForNumber(cipher));
         break;
       case kSSLProtocol3:
         infof(data, "SSL 3.0 connection using %s\n",
@@ -2387,13 +2448,14 @@
                            size_t md5len)
 {
   (void)md5len;
   (void)CC_MD5(tmp, (CC_LONG)tmplen, md5sum);
 }
 
-bool Curl_darwinssl_false_start(void) {
+bool Curl_darwinssl_false_start(void)
+{
 #if CURL_BUILD_MAC_10_9 || CURL_BUILD_IOS_7
   if(SSLSetSessionOption != NULL)
     return TRUE;
 #endif
   return FALSE;
 }
@@ -2424,13 +2486,13 @@
      over again with no new data until it quits returning errSSLWouldBlock. */
 
   /* Do we have buffered data to write from the last time we were called? */
   if(connssl->ssl_write_buffered_length) {
     /* Write the buffered data: */
     err = SSLWrite(connssl->ssl_ctx, NULL, 0UL, &processed);
-    switch (err) {
+    switch(err) {
       case noErr:
         /* processed is always going to be 0 because we didn't write to
            the buffer, so return how much was written to the socket */
         processed = connssl->ssl_write_buffered_length;
         connssl->ssl_write_buffered_length = 0UL;
         break;
@@ -2444,13 +2506,13 @@
     }
   }
   else {
     /* We've got new data to write: */
     err = SSLWrite(connssl->ssl_ctx, mem, len, &processed);
     if(err != noErr) {
-      switch (err) {
+      switch(err) {
         case errSSLWouldBlock:
           /* Data was buffered but not sent, we have to tell the caller
              to try sending again, and remember how much was buffered */
           connssl->ssl_write_buffered_length = len;
           *curlcode = CURLE_AGAIN;
           return -1L;
@@ -2473,13 +2535,13 @@
   /*struct Curl_easy *data = conn->data;*/
   struct ssl_connect_data *connssl = &conn->ssl[num];
   size_t processed = 0UL;
   OSStatus err = SSLRead(connssl->ssl_ctx, buf, buffersize, &processed);
 
   if(err != noErr) {
-    switch (err) {
+    switch(err) {
       case errSSLWouldBlock:  /* return how much we read (if anything) */
         if(processed)
           return (ssize_t)processed;
         *curlcode = CURLE_AGAIN;
         return -1L;
         break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gskit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gskit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gskit.c	2016-11-01 04:51:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gskit.c	2016-12-19 15:27:56.000000000 +0800
@@ -78,12 +78,16 @@
 
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
 
+/* Directions. */
+#define SOS_READ        0x01
+#define SOS_WRITE       0x02
+
 /* SSL version flags. */
 #define CURL_GSKPROTO_SSLV2     0
 #define CURL_GSKPROTO_SSLV2_MASK        (1 << CURL_GSKPROTO_SSLV2)
 #define CURL_GSKPROTO_SSLV3     1
 #define CURL_GSKPROTO_SSLV3_MASK        (1 << CURL_GSKPROTO_SSLV3)
 #define CURL_GSKPROTO_TLSV10    2
@@ -148,13 +152,13 @@
 };
 
 
 static bool is_separator(char c)
 {
   /* Return whether character is a cipher list separator. */
-  switch (c) {
+  switch(c) {
   case ' ':
   case '\t':
   case ':':
   case ',':
   case ';':
     return true;
@@ -164,13 +168,13 @@
 
 
 static CURLcode gskit_status(struct Curl_easy *data, int rc,
                              const char *procname, CURLcode defcode)
 {
   /* Process GSKit status and map it to a CURLcode. */
-  switch (rc) {
+  switch(rc) {
   case GSK_OK:
   case GSK_OS400_ASYNCHRONOUS_SOC_INIT:
     return CURLE_OK;
   case GSK_KEYRING_OPEN_ERROR:
   case GSK_OS400_ERROR_NO_ACCESS:
     return CURLE_SSL_CACERT_BADFILE;
@@ -187,13 +191,13 @@
     return CURLE_OPERATION_TIMEDOUT;
   case GSK_WOULD_BLOCK:
     return CURLE_AGAIN;
   case GSK_OS400_ERROR_NOT_REGISTERED:
     break;
   case GSK_ERROR_IO:
-    switch (errno) {
+    switch(errno) {
     case ENOMEM:
       return CURLE_OUT_OF_MEMORY;
     default:
       failf(data, "%s I/O error: %s", procname, strerror(errno));
       break;
     }
@@ -208,13 +212,13 @@
 
 static CURLcode set_enum(struct Curl_easy *data, gsk_handle h,
                 GSK_ENUM_ID id, GSK_ENUM_VALUE value, bool unsupported_ok)
 {
   int rc = gsk_attribute_set_enum(h, id, value);
 
-  switch (rc) {
+  switch(rc) {
   case GSK_OK:
     return CURLE_OK;
   case GSK_ERROR_IO:
     failf(data, "gsk_attribute_set_enum() I/O error: %s", strerror(errno));
     break;
   case GSK_ATTRIBUTE_INVALID_ID:
@@ -230,13 +234,13 @@
 
 static CURLcode set_buffer(struct Curl_easy *data, gsk_handle h,
                         GSK_BUF_ID id, const char *buffer, bool unsupported_ok)
 {
   int rc = gsk_attribute_set_buffer(h, id, buffer, 0);
 
-  switch (rc) {
+  switch(rc) {
   case GSK_OK:
     return CURLE_OK;
   case GSK_ERROR_IO:
     failf(data, "gsk_attribute_set_buffer() I/O error: %s", strerror(errno));
     break;
   case GSK_ATTRIBUTE_INVALID_ID:
@@ -252,13 +256,13 @@
 
 static CURLcode set_numeric(struct Curl_easy *data,
                             gsk_handle h, GSK_NUM_ID id, int value)
 {
   int rc = gsk_attribute_set_numeric_value(h, id, value);
 
-  switch (rc) {
+  switch(rc) {
   case GSK_OK:
     return CURLE_OK;
   case GSK_ERROR_IO:
     failf(data, "gsk_attribute_set_numeric_value() I/O error: %s",
           strerror(errno));
     break;
@@ -272,13 +276,13 @@
 
 static CURLcode set_callback(struct Curl_easy *data,
                              gsk_handle h, GSK_CALLBACK_ID id, void *info)
 {
   int rc = gsk_attribute_set_callback(h, id, info);
 
-  switch (rc) {
+  switch(rc) {
   case GSK_OK:
     return CURLE_OK;
   case GSK_ERROR_IO:
     failf(data, "gsk_attribute_set_callback() I/O error: %s", strerror(errno));
     break;
   default:
@@ -286,16 +290,17 @@
     break;
   }
   return CURLE_SSL_CONNECT_ERROR;
 }
 
 
-static CURLcode set_ciphers(struct Curl_easy *data,
+static CURLcode set_ciphers(struct connectdata *conn,
                                         gsk_handle h, unsigned int *protoflags)
 {
-  const char *cipherlist = data->set.str[STRING_SSL_CIPHER_LIST];
+  struct Curl_easy *data = conn->data;
+  const char *cipherlist = SSL_CONN_CONFIG(cipher_list);
   const char *clp;
   const gskit_cipher *ctp;
   int i;
   int l;
   bool unsupported;
   CURLcode result;
@@ -337,13 +342,13 @@
       cipherlist++;
     l = cipherlist - clp;
     if(!l)
       break;
     /* Search the cipher in our table. */
     for(ctp = ciphertable; ctp->name; ctp++)
-      if(strnequal(ctp->name, clp, l) && !ctp->name[l])
+      if(strncasecompare(ctp->name, clp, l) && !ctp->name[l])
         break;
     if(!ctp->name) {
       failf(data, "Unknown cipher %.*s", l, clp);
       result = CURLE_SSL_CIPHER;
     }
     else {
@@ -445,13 +450,13 @@
   CURLcode result;
   gsk_handle h;
 
   /* Creates the GSKit environment. */
 
   rc = gsk_environment_open(&h);
-  switch (rc) {
+  switch(rc) {
   case GSK_OK:
     break;
   case GSK_INSUFFICIENT_STORAGE:
     return CURLE_OUT_OF_MEMORY;
   default:
     failf(data, "gsk_environment_open(): %s", gsk_strerror(rc));
@@ -497,37 +502,220 @@
 static void close_async_handshake(struct ssl_connect_data *connssl)
 {
   QsoDestroyIOCompletionPort(connssl->iocport);
   connssl->iocport = -1;
 }
 
+/* SSL over SSL
+ * Problems:
+ * 1) GSKit can only perform SSL on an AF_INET or AF_INET6 stream socket. To
+ *    pipe an SSL stream into another, it is therefore needed to have a pair
+ *    of such communicating sockets and handle the pipelining explicitly.
+ * 2) OS/400 socketpair() is only implemented for domain AF_UNIX, thus cannot
+ *    be used to produce the pipeline.
+ * The solution is to simulate socketpair() for AF_INET with low-level API
+ *    listen(), bind() and connect().
+ */
+
+static int
+inetsocketpair(int sv[2])
+{
+  int lfd;      /* Listening socket. */
+  int sfd;      /* Server socket. */
+  int cfd;      /* Client socket. */
+  int len;
+  struct sockaddr_in addr1;
+  struct sockaddr_in addr2;
+
+  /* Create listening socket on a local dynamic port. */
+  lfd = socket(AF_INET, SOCK_STREAM, 0);
+  if(lfd < 0)
+    return -1;
+  memset((char *) &addr1, 0, sizeof addr1);
+  addr1.sin_family = AF_INET;
+  addr1.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+  addr1.sin_port = 0;
+  if(bind(lfd, (struct sockaddr *) &addr1, sizeof addr1) ||
+     listen(lfd, 2) < 0) {
+    close(lfd);
+    return -1;
+  }
+
+  /* Get the allocated port. */
+  len = sizeof addr1;
+  if(getsockname(lfd, (struct sockaddr *) &addr1, &len) < 0) {
+    close(lfd);
+    return -1;
+  }
+
+  /* Create the client socket. */
+  cfd = socket(AF_INET, SOCK_STREAM, 0);
+  if(cfd < 0) {
+    close(lfd);
+    return -1;
+  }
+
+  /* Request unblocking connection to the listening socket. */
+  curlx_nonblock(cfd, TRUE);
+  if(connect(cfd, (struct sockaddr *) &addr1, sizeof addr1) < 0 &&
+     errno != EINPROGRESS) {
+    close(lfd);
+    close(cfd);
+    return -1;
+  }
+
+  /* Get the client dynamic port for intrusion check below. */
+  len = sizeof addr2;
+  if(getsockname(cfd, (struct sockaddr *) &addr2, &len) < 0) {
+    close(lfd);
+    close(cfd);
+    return -1;
+  }
+
+  /* Accept the incoming connection and get the server socket. */
+  curlx_nonblock(lfd, TRUE);
+  for(;;) {
+    len = sizeof addr1;
+    sfd = accept(lfd, (struct sockaddr *) &addr1, &len);
+    if(sfd < 0) {
+      close(lfd);
+      close(cfd);
+      return -1;
+    }
+
+    /* Check for possible intrusion from an external process. */
+    if(addr1.sin_addr.s_addr == addr2.sin_addr.s_addr &&
+       addr1.sin_port == addr2.sin_port)
+      break;
+
+    /* Intrusion: reject incoming connection. */
+    close(sfd);
+  }
+
+  /* Done, return sockets and succeed. */
+  close(lfd);
+  curlx_nonblock(cfd, FALSE);
+  sv[0] = cfd;
+  sv[1] = sfd;
+  return 0;
+}
+
+static int pipe_ssloverssl(struct connectdata *conn, int sockindex,
+                           int directions)
+{
+  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  struct ssl_connect_data *connproxyssl = &conn->proxy_ssl[sockindex];
+  fd_set fds_read;
+  fd_set fds_write;
+  int n;
+  int m;
+  int i;
+  int ret = 0;
+  struct timeval tv = {0, 0};
+  char buf[CURL_MAX_WRITE_SIZE];
+
+  if(!connssl->use || !connproxyssl->use)
+    return 0;   /* No SSL over SSL: OK. */
+
+  FD_ZERO(&fds_read);
+  FD_ZERO(&fds_write);
+  n = -1;
+  if(directions & SOS_READ) {
+    FD_SET(connssl->remotefd, &fds_write);
+    n = connssl->remotefd;
+  }
+  if(directions & SOS_WRITE) {
+    FD_SET(connssl->remotefd, &fds_read);
+    n = connssl->remotefd;
+    FD_SET(conn->sock[sockindex], &fds_write);
+    if(n < conn->sock[sockindex])
+      n = conn->sock[sockindex];
+  }
+  i = select(n + 1, &fds_read, &fds_write, NULL, &tv);
+  if(i < 0)
+    return -1;  /* Select error. */
+
+  if(FD_ISSET(connssl->remotefd, &fds_write)) {
+    /* Try getting data from HTTPS proxy and pipe it upstream. */
+    n = 0;
+    i = gsk_secure_soc_read(connproxyssl->handle, buf, sizeof buf, &n);
+    switch(i) {
+    case GSK_OK:
+      if(n) {
+        i = write(connssl->remotefd, buf, n);
+        if(i < 0)
+          return -1;
+        ret = 1;
+      }
+      break;
+    case GSK_OS400_ERROR_TIMED_OUT:
+    case GSK_WOULD_BLOCK:
+      break;
+    default:
+      return -1;
+    }
+  }
+
+  if(FD_ISSET(connssl->remotefd, &fds_read) &&
+     FD_ISSET(conn->sock[sockindex], &fds_write)) {
+    /* Pipe data to HTTPS proxy. */
+    n = read(connssl->remotefd, buf, sizeof buf);
+    if(n < 0)
+      return -1;
+    if(n) {
+      i = gsk_secure_soc_write(connproxyssl->handle, buf, n, &m);
+      if(i != GSK_OK || n != m)
+        return -1;
+      ret = 1;
+    }
+  }
+
+  return ret;  /* OK */
+}
+
 
-static void close_one(struct ssl_connect_data *conn,
-                      struct Curl_easy *data)
+static void close_one(struct ssl_connect_data *connssl,
+                      struct connectdata *conn, int sockindex)
 {
-  if(conn->handle) {
-    gskit_status(data, gsk_secure_soc_close(&conn->handle),
+  if(connssl->handle) {
+    gskit_status(conn->data, gsk_secure_soc_close(&connssl->handle),
               "gsk_secure_soc_close()", 0);
-    conn->handle = (gsk_handle) NULL;
+    /* Last chance to drain output. */
+    while(pipe_ssloverssl(conn, sockindex, SOS_WRITE) > 0)
+      ;
+    connssl->handle = (gsk_handle) NULL;
+    if(connssl->localfd >= 0) {
+      close(connssl->localfd);
+      connssl->localfd = -1;
+    }
+    if(connssl->remotefd >= 0) {
+      close(connssl->remotefd);
+      connssl->remotefd = -1;
+    }
   }
-  if(conn->iocport >= 0)
-    close_async_handshake(conn);
+  if(connssl->iocport >= 0)
+    close_async_handshake(connssl);
 }
 
 
 static ssize_t gskit_send(struct connectdata *conn, int sockindex,
                            const void *mem, size_t len, CURLcode *curlcode)
 {
   struct Curl_easy *data = conn->data;
-  CURLcode cc;
+  CURLcode cc = CURLE_SEND_ERROR;
   int written;
 
-  cc = gskit_status(data,
-                    gsk_secure_soc_write(conn->ssl[sockindex].handle,
-                                         (char *) mem, (int) len, &written),
-                    "gsk_secure_soc_write()", CURLE_SEND_ERROR);
+  if(pipe_ssloverssl(conn, sockindex, SOS_WRITE) >= 0) {
+    cc = gskit_status(data,
+                      gsk_secure_soc_write(conn->ssl[sockindex].handle,
+                                           (char *) mem, (int) len, &written),
+                      "gsk_secure_soc_write()", CURLE_SEND_ERROR);
+    if(cc == CURLE_OK)
+      if(pipe_ssloverssl(conn, sockindex, SOS_WRITE) < 0)
+        cc = CURLE_SEND_ERROR;
+  }
   if(cc != CURLE_OK) {
     *curlcode = cc;
     written = -1;
   }
   return (ssize_t) written; /* number of bytes */
 }
@@ -536,45 +724,61 @@
 static ssize_t gskit_recv(struct connectdata *conn, int num, char *buf,
                            size_t buffersize, CURLcode *curlcode)
 {
   struct Curl_easy *data = conn->data;
   int buffsize;
   int nread;
-  CURLcode cc;
+  CURLcode cc = CURLE_RECV_ERROR;
 
-  buffsize = buffersize > (size_t) INT_MAX? INT_MAX: (int) buffersize;
-  cc = gskit_status(data, gsk_secure_soc_read(conn->ssl[num].handle,
-                                              buf, buffsize, &nread),
-                    "gsk_secure_soc_read()", CURLE_RECV_ERROR);
-  if(cc != CURLE_OK) {
+  if(pipe_ssloverssl(conn, num, SOS_READ) >= 0) {
+    buffsize = buffersize > (size_t) INT_MAX? INT_MAX: (int) buffersize;
+    cc = gskit_status(data, gsk_secure_soc_read(conn->ssl[num].handle,
+                                                buf, buffsize, &nread),
+                      "gsk_secure_soc_read()", CURLE_RECV_ERROR);
+  }
+  switch(cc) {
+  case CURLE_OK:
+    break;
+  case CURLE_OPERATION_TIMEDOUT:
+    cc = CURLE_AGAIN;
+  default:
     *curlcode = cc;
     nread = -1;
+    break;
   }
   return (ssize_t) nread;
 }
 
 
 static CURLcode gskit_connect_step1(struct connectdata *conn, int sockindex)
 {
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   gsk_handle envir;
   CURLcode result;
   int rc;
-  char *keyringfile;
-  char *keyringpwd;
-  char *keyringlabel;
-  char *sni;
+  const char * const keyringfile = SSL_CONN_CONFIG(CAfile);
+  const char * const keyringpwd = SSL_SET_OPTION(key_passwd);
+  const char * const keyringlabel = SSL_SET_OPTION(cert);
+  const long int ssl_version = SSL_CONN_CONFIG(version);
+  const bool verifypeer = SSL_CONN_CONFIG(verifypeer);
+  const char * const hostname = SSL_IS_PROXY()? conn->http_proxy.host.name:
+    conn->host.name;
+  const char *sni;
   unsigned int protoflags;
   long timeout;
   Qso_OverlappedIO_t commarea;
+  int sockpair[2];
+  static const int sobufsize = CURL_MAX_WRITE_SIZE;
 
   /* Create SSL environment, start (preferably asynchronous) handshake. */
 
   connssl->handle = (gsk_handle) NULL;
   connssl->iocport = -1;
+  connssl->localfd = -1;
+  connssl->remotefd = -1;
 
   /* GSKit supports two ways of specifying an SSL context: either by
    *  application identifier (that should have been defined at the system
    *  level) or by keyring file, password and certificate label.
    * Local certificate name (CURLOPT_SSLCERT) is used to hold either the
    *  application identifier of the certificate label.
@@ -583,15 +787,12 @@
    *  local certificate. We thus use the CA file (CURLOPT_CAINFO) to identify
    *  the keyring file.
    * If no key password is given and the keyring is the system keyring,
    *  application identifier mode is tried first, as recommended in IBM doc.
    */
 
-  keyringfile = data->set.str[STRING_SSL_CAFILE];
-  keyringpwd = data->set.str[STRING_KEY_PASSWD];
-  keyringlabel = data->set.str[STRING_CERT];
   envir = (gsk_handle) NULL;
 
   if(keyringlabel && *keyringlabel && !keyringpwd &&
       !strcmp(keyringfile, CURL_CA_BUNDLE)) {
     /* Try application identifier mode. */
     init_environment(data, &envir, keyringlabel, (const char *) NULL,
@@ -610,25 +811,42 @@
   result = gskit_status(data, gsk_secure_soc_open(envir, &connssl->handle),
                         "gsk_secure_soc_open()", CURLE_SSL_CONNECT_ERROR);
   gsk_environment_close(&envir);
   if(result)
     return result;
 
+  /* Establish a pipelining socket pair for SSL over SSL. */
+  if(conn->proxy_ssl[sockindex].use) {
+    if(inetsocketpair(sockpair))
+      return CURLE_SSL_CONNECT_ERROR;
+    connssl->localfd = sockpair[0];
+    connssl->remotefd = sockpair[1];
+    setsockopt(connssl->localfd, SOL_SOCKET, SO_RCVBUF,
+               (void *) sobufsize, sizeof sobufsize);
+    setsockopt(connssl->remotefd, SOL_SOCKET, SO_RCVBUF,
+               (void *) sobufsize, sizeof sobufsize);
+    setsockopt(connssl->localfd, SOL_SOCKET, SO_SNDBUF,
+               (void *) sobufsize, sizeof sobufsize);
+    setsockopt(connssl->remotefd, SOL_SOCKET, SO_SNDBUF,
+               (void *) sobufsize, sizeof sobufsize);
+    curlx_nonblock(connssl->localfd, TRUE);
+    curlx_nonblock(connssl->remotefd, TRUE);
+  }
+
   /* Determine which SSL/TLS version should be enabled. */
-  protoflags = CURL_GSKPROTO_TLSV10_MASK | CURL_GSKPROTO_TLSV11_MASK |
-               CURL_GSKPROTO_TLSV12_MASK;
-  sni = conn->host.name;
-  switch (data->set.ssl.version) {
+  sni = hostname;
+  switch(ssl_version) {
   case CURL_SSLVERSION_SSLv2:
     protoflags = CURL_GSKPROTO_SSLV2_MASK;
-    sni = (char *) NULL;
+    sni = NULL;
     break;
   case CURL_SSLVERSION_SSLv3:
     protoflags = CURL_GSKPROTO_SSLV3_MASK;
-    sni = (char *) NULL;
+    sni = NULL;
     break;
+  case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     protoflags = CURL_GSKPROTO_TLSV10_MASK |
                  CURL_GSKPROTO_TLSV11_MASK | CURL_GSKPROTO_TLSV12_MASK;
     break;
   case CURL_SSLVERSION_TLSv1_0:
     protoflags = CURL_GSKPROTO_TLSV10_MASK;
@@ -636,12 +854,18 @@
   case CURL_SSLVERSION_TLSv1_1:
     protoflags = CURL_GSKPROTO_TLSV11_MASK;
     break;
   case CURL_SSLVERSION_TLSv1_2:
     protoflags = CURL_GSKPROTO_TLSV12_MASK;
     break;
+  case CURL_SSLVERSION_TLSv1_3:
+    failf(data, "GSKit: TLS 1.3 is not yet supported");
+    return CURLE_SSL_CONNECT_ERROR;
+  default:
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+    return CURLE_SSL_CONNECT_ERROR;
   }
 
   /* Process SNI. Ignore if not supported (on OS400 < V7R1). */
   if(sni) {
     result = set_buffer(data, connssl->handle,
                         GSK_SSL_EXTN_SERVERNAME_REQUEST, sni, TRUE);
@@ -658,15 +882,18 @@
       result = CURLE_OPERATION_TIMEDOUT;
     else
       result = set_numeric(data, connssl->handle, GSK_HANDSHAKE_TIMEOUT,
                            (timeout + 999) / 1000);
   }
   if(!result)
-    result = set_numeric(data, connssl->handle, GSK_FD, conn->sock[sockindex]);
+    result = set_numeric(data, connssl->handle, GSK_OS400_READ_TIMEOUT, 1);
   if(!result)
-    result = set_ciphers(data, connssl->handle, &protoflags);
+    result = set_numeric(data, connssl->handle, GSK_FD, connssl->localfd >= 0?
+                         connssl->localfd: conn->sock[sockindex]);
+  if(!result)
+    result = set_ciphers(conn, connssl->handle, &protoflags);
   if(!protoflags) {
     failf(data, "No SSL protocol/cipher combination enabled");
     result = CURLE_SSL_CIPHER;
   }
   if(!result)
     result = set_enum(data, connssl->handle, GSK_PROTOCOL_SSLV2,
@@ -703,13 +930,13 @@
         result = CURLE_SSL_CIPHER;
       }
     }
   }
   if(!result)
     result = set_enum(data, connssl->handle, GSK_SERVER_AUTH_TYPE,
-                      data->set.ssl.verifypeer? GSK_SERVER_AUTH_FULL:
+                      verifypeer? GSK_SERVER_AUTH_FULL:
                       GSK_SERVER_AUTH_PASSTHRU, FALSE);
 
   if(!result) {
     /* Start handshake. Try asynchronous first. */
     memset(&commarea, 0, sizeof commarea);
     connssl->iocport = QsoCreateIOCompletionPort();
@@ -727,25 +954,29 @@
       else
         close_async_handshake(connssl);
     }
     else if(errno != ENOBUFS)
       result = gskit_status(data, GSK_ERROR_IO,
                             "QsoCreateIOCompletionPort()", 0);
+    else if(conn->proxy_ssl[sockindex].use) {
+      /* Cannot pipeline while handshaking synchronously. */
+      result = CURLE_SSL_CONNECT_ERROR;
+    }
     else {
       /* No more completion port available. Use synchronous IO. */
       result = gskit_status(data, gsk_secure_soc_init(connssl->handle),
                             "gsk_secure_soc_init()", CURLE_SSL_CONNECT_ERROR);
       if(!result) {
         connssl->connecting_state = ssl_connect_3;
         return CURLE_OK;
       }
     }
   }
 
   /* Error: rollback. */
-  close_one(connssl, data);
+  close_one(connssl, conn, sockindex);
   return result;
 }
 
 
 static CURLcode gskit_connect_step2(struct connectdata *conn, int sockindex,
                                     bool nonblocking)
@@ -762,13 +993,13 @@
   for(;;) {
     timeout_ms = nonblocking? 0: Curl_timeleft(data, NULL, TRUE);
     if(timeout_ms < 0)
       timeout_ms = 0;
     stmv.tv_sec = timeout_ms / 1000;
     stmv.tv_usec = (timeout_ms - stmv.tv_sec * 1000) * 1000;
-    switch (QsoWaitForIOCompletion(connssl->iocport, &cstat, &stmv)) {
+    switch(QsoWaitForIOCompletion(connssl->iocport, &cstat, &stmv)) {
     case 1:             /* Operation complete. */
       break;
     case -1:            /* An error occurred: handshake still in progress. */
       if(errno == EINTR) {
         if(nonblocking)
           return CURLE_OK;
@@ -819,13 +1050,13 @@
                                                     &cdev, &cdec),
                   "gsk_attribute_get_cert_info()", CURLE_SSL_CONNECT_ERROR) ==
      CURLE_OK) {
     infof(data, "Server certificate:\n");
     p = cdev;
     for(i = 0; i++ < cdec; p++)
-      switch (p->cert_data_id) {
+      switch(p->cert_data_id) {
       case CERT_BODY_DER:
         cert = p->cert_data_p;
         certend = cert + cdev->cert_data_l;
         break;
       case CERT_DN_PRINTABLE:
         infof(data, "\t subject: %.*s\n", p->cert_data_l, p->cert_data_p);
@@ -862,20 +1093,20 @@
       if(result)
         return result;
     }
   }
 
   /* Check pinned public key. */
-  ptr = data->set.str[STRING_SSL_PINNEDPUBLICKEY];
+  ptr = SSL_IS_PROXY() ? data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+                         data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
   if(!result && ptr) {
     curl_X509certificate x509;
     curl_asn1Element *p;
 
-    if(!cert)
+    if(Curl_parseX509(&x509, cert, certend))
       return CURLE_SSL_PINNEDPUBKEYNOTMATCH;
-    Curl_parseX509(&x509, cert, certend);
     p = &x509.subjectPublicKeyInfo;
     result = Curl_pin_peer_pubkey(data, ptr, p->header, p->end - p->header);
     if(result) {
       failf(data, "SSL: public key does not match pinned public key!");
       return result;
     }
@@ -910,12 +1141,17 @@
       result = CURLE_OPERATION_TIMEDOUT;
     }
     else
       result = gskit_connect_step1(conn, sockindex);
   }
 
+  /* Handle handshake pipelining. */
+  if(!result)
+    if(pipe_ssloverssl(conn, sockindex, SOS_READ | SOS_WRITE) < 0)
+      result = CURLE_SSL_CONNECT_ERROR;
+
   /* Step 2: check if handshake is over. */
   if(!result && connssl->connecting_state == ssl_connect_2) {
     /* check allowed time left */
     timeout_ms = Curl_timeleft(data, NULL, TRUE);
 
     if(timeout_ms < 0) {
@@ -924,18 +1160,23 @@
       result = CURLE_OPERATION_TIMEDOUT;
     }
     else
       result = gskit_connect_step2(conn, sockindex, nonblocking);
   }
 
+  /* Handle handshake pipelining. */
+  if(!result)
+    if(pipe_ssloverssl(conn, sockindex, SOS_READ | SOS_WRITE) < 0)
+      result = CURLE_SSL_CONNECT_ERROR;
+
   /* Step 3: gather certificate info, verify host. */
   if(!result && connssl->connecting_state == ssl_connect_3)
     result = gskit_connect_step3(conn, sockindex);
 
   if(result)
-    close_one(connssl, data);
+    close_one(connssl, conn, sockindex);
   else if(connssl->connecting_state == ssl_connect_done) {
     connssl->state = ssl_connection_complete;
     connssl->connecting_state = ssl_connect_1;
     conn->recv[sockindex] = gskit_recv;
     conn->send[sockindex] = gskit_send;
     *done = TRUE;
@@ -973,17 +1214,14 @@
   return CURLE_OK;
 }
 
 
 void Curl_gskit_close(struct connectdata *conn, int sockindex)
 {
-  struct Curl_easy *data = conn->data;
-  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-
-  if(connssl->use)
-    close_one(connssl, data);
+  close_one(&conn->ssl[sockindex], conn, sockindex);
+  close_one(&conn->proxy_ssl[sockindex], conn, sockindex);
 }
 
 
 int Curl_gskit_shutdown(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
@@ -996,13 +1234,13 @@
   if(!connssl->handle)
     return 0;
 
   if(data->set.ftp_ccc != CURLFTPSSL_CCC_ACTIVE)
     return 0;
 
-  close_one(connssl, data);
+  close_one(connssl, conn, sockindex);
   rc = 0;
   what = SOCKET_READABLE(conn->sock[sockindex],
                          SSL_SHUTDOWN_TIMEOUT);
 
   for(;;) {
     if(what < 0) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gskit.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gskit.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gskit.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gskit.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -38,12 +38,15 @@
 void Curl_gskit_close(struct connectdata *conn, int sockindex);
 int Curl_gskit_shutdown(struct connectdata *conn, int sockindex);
 
 size_t Curl_gskit_version(char *buffer, size_t size);
 int Curl_gskit_check_cxn(struct connectdata *cxn);
 
+/* Support HTTPS-proxy */
+/* TODO: add '#define HTTPS_PROXY_SUPPORT 1' and fix test #1014 (if need) */
+
 /* Set the API backend definition to GSKit */
 #define CURL_SSL_BACKEND CURLSSLBACKEND_GSKIT
 
 /* this backend supports CURLOPT_CERTINFO */
 #define have_curlssl_certinfo 1
 
@@ -61,11 +64,11 @@
 #define curlssl_set_engine(x,y) CURLE_NOT_BUILT_IN
 #define curlssl_set_engine_default(x) CURLE_NOT_BUILT_IN
 #define curlssl_engines_list(x) NULL
 #define curlssl_version Curl_gskit_version
 #define curlssl_check_cxn(x) Curl_gskit_check_cxn(x)
 #define curlssl_data_pending(x,y) 0
-#define curlssl_random(x,y,z) -1
+#define curlssl_random(x,y,z) (x=x, y=y, z=z, CURLE_NOT_BUILT_IN)
 
 #endif /* USE_GSKIT */
 
 #endif /* HEADER_CURL_GSKIT_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gtls.c	2016-10-31 20:20:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gtls.c	2016-12-19 15:27:56.000000000 +0800
@@ -65,13 +65,13 @@
  https://developer.gnome.org/glib/unstable/glib-Type-Conversion-Macros.html
 */
 #ifndef GNUTLS_POINTER_TO_INT_CAST
 #define GNUTLS_POINTER_TO_INT_CAST(p) ((int) (long) (p))
 #endif
 #ifndef GNUTLS_INT_TO_POINTER_CAST
-#define GNUTLS_INT_TO_POINTER_CAST(i) ((void*) (long) (i))
+#define GNUTLS_INT_TO_POINTER_CAST(i) ((void *) (long) (i))
 #endif
 
 /* Enable GnuTLS debugging by defining GTLSDEBUG */
 /*#define GTLSDEBUG */
 
 #ifdef GTLSDEBUG
@@ -168,12 +168,22 @@
   if(ret < 0)
     gnutls_transport_set_global_errno(gtls_mapped_sockerrno());
 #endif
   return ret;
 }
 
+static ssize_t Curl_gtls_push_ssl(void *s, const void *buf, size_t len)
+{
+  return gnutls_record_send((gnutls_session_t) s, buf, len);
+}
+
+static ssize_t Curl_gtls_pull_ssl(void *s, void *buf, size_t len)
+{
+  return gnutls_record_recv((gnutls_session_t) s, buf, len);
+}
+
 /* Curl_gtls_init()
  *
  * Global GnuTLS init, called from Curl_ssl_init(). This calls functions that
  * are not thread-safe and thus this function itself is not thread-safe and
  * must only be called from within curl_global_init() to keep the thread
  * situation under control!
@@ -222,20 +232,21 @@
            tm->tm_hour,
            tm->tm_min,
            tm->tm_sec);
   infof(data, "%s\n", data->state.buffer);
 }
 
-static gnutls_datum_t load_file (const char *file)
+static gnutls_datum_t load_file(const char *file)
 {
   FILE *f;
   gnutls_datum_t loaded_file = { NULL, 0 };
   long filelen;
   void *ptr;
 
-  if(!(f = fopen(file, "rb")))
+  f = fopen(file, "rb");
+  if(!f)
     return loaded_file;
   if(fseek(f, 0, SEEK_END) != 0
      || (filelen = ftell(f)) < 0
      || fseek(f, 0, SEEK_SET) != 0
      || !(ptr = malloc((size_t)filelen)))
     goto out;
@@ -248,13 +259,14 @@
   loaded_file.size = (unsigned int)filelen;
 out:
   fclose(f);
   return loaded_file;
 }
 
-static void unload_file(gnutls_datum_t data) {
+static void unload_file(gnutls_datum_t data)
+{
   free(data.data);
 }
 
 
 /* this function does a SSL/TLS (re-)handshake */
 static CURLcode handshake(struct connectdata *conn,
@@ -368,12 +380,15 @@
                    int sockindex)
 {
   struct Curl_easy *data = conn->data;
   gnutls_session_t session;
   int rc;
   bool sni = TRUE; /* default is SNI enabled */
+  void *transport_ptr = NULL;
+  gnutls_push_func gnutls_transport_push = NULL;
+  gnutls_pull_func gnutls_transport_pull = NULL;
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
 #ifndef USE_GNUTLS_PRIORITY_SET_DIRECT
@@ -394,140 +409,142 @@
 #else
 #define GNUTLS_CIPHERS "NORMAL:-ARCFOUR-128:-CTYPE-ALL:+CTYPE-X509"
 /* If GnuTLS was compiled without support for SRP it will error out if SRP is
    requested in the priority string, so treat it specially
  */
 #define GNUTLS_SRP "+SRP"
-  const char* prioritylist;
+  const char *prioritylist;
   const char *err = NULL;
 #endif
 
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+
   if(conn->ssl[sockindex].state == ssl_connection_complete)
     /* to make us tolerant against being called more than once for the
        same connection */
     return CURLE_OK;
 
   if(!gtls_inited)
     Curl_gtls_init();
 
-  /* GnuTLS only supports SSLv3 and TLSv1 */
-  if(data->set.ssl.version == CURL_SSLVERSION_SSLv2) {
+  if(SSL_CONN_CONFIG(version) == CURL_SSLVERSION_SSLv2) {
     failf(data, "GnuTLS does not support SSLv2");
     return CURLE_SSL_CONNECT_ERROR;
   }
-  else if(data->set.ssl.version == CURL_SSLVERSION_SSLv3)
+  else if(SSL_CONN_CONFIG(version) == CURL_SSLVERSION_SSLv3)
     sni = FALSE; /* SSLv3 has no SNI */
 
   /* allocate a cred struct */
   rc = gnutls_certificate_allocate_credentials(&conn->ssl[sockindex].cred);
   if(rc != GNUTLS_E_SUCCESS) {
     failf(data, "gnutls_cert_all_cred() failed: %s", gnutls_strerror(rc));
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #ifdef USE_TLS_SRP
-  if(data->set.ssl.authtype == CURL_TLSAUTH_SRP) {
-    infof(data, "Using TLS-SRP username: %s\n", data->set.ssl.username);
+  if(SSL_SET_OPTION(authtype) == CURL_TLSAUTH_SRP) {
+    infof(data, "Using TLS-SRP username: %s\n", SSL_SET_OPTION(username));
 
     rc = gnutls_srp_allocate_client_credentials(
            &conn->ssl[sockindex].srp_client_cred);
     if(rc != GNUTLS_E_SUCCESS) {
       failf(data, "gnutls_srp_allocate_client_cred() failed: %s",
             gnutls_strerror(rc));
       return CURLE_OUT_OF_MEMORY;
     }
 
     rc = gnutls_srp_set_client_credentials(conn->ssl[sockindex].
                                            srp_client_cred,
-                                           data->set.ssl.username,
-                                           data->set.ssl.password);
+                                           SSL_SET_OPTION(username),
+                                           SSL_SET_OPTION(password));
     if(rc != GNUTLS_E_SUCCESS) {
       failf(data, "gnutls_srp_set_client_cred() failed: %s",
             gnutls_strerror(rc));
       return CURLE_BAD_FUNCTION_ARGUMENT;
     }
   }
 #endif
 
-  if(data->set.ssl.CAfile) {
+  if(SSL_CONN_CONFIG(CAfile)) {
     /* set the trusted CA cert bundle file */
     gnutls_certificate_set_verify_flags(conn->ssl[sockindex].cred,
                                         GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT);
 
     rc = gnutls_certificate_set_x509_trust_file(conn->ssl[sockindex].cred,
-                                                data->set.ssl.CAfile,
+                                                SSL_CONN_CONFIG(CAfile),
                                                 GNUTLS_X509_FMT_PEM);
     if(rc < 0) {
       infof(data, "error reading ca cert file %s (%s)\n",
-            data->set.ssl.CAfile, gnutls_strerror(rc));
-      if(data->set.ssl.verifypeer)
+            SSL_CONN_CONFIG(CAfile), gnutls_strerror(rc));
+      if(SSL_CONN_CONFIG(verifypeer))
         return CURLE_SSL_CACERT_BADFILE;
     }
     else
-      infof(data, "found %d certificates in %s\n",
-            rc, data->set.ssl.CAfile);
+      infof(data, "found %d certificates in %s\n", rc,
+            SSL_CONN_CONFIG(CAfile));
   }
 
 #ifdef HAS_CAPATH
-  if(data->set.ssl.CApath) {
+  if(SSL_CONN_CONFIG(CApath)) {
     /* set the trusted CA cert directory */
     rc = gnutls_certificate_set_x509_trust_dir(conn->ssl[sockindex].cred,
-                                                data->set.ssl.CApath,
-                                                GNUTLS_X509_FMT_PEM);
+                                               SSL_CONN_CONFIG(CApath),
+                                               GNUTLS_X509_FMT_PEM);
     if(rc < 0) {
       infof(data, "error reading ca cert file %s (%s)\n",
-            data->set.ssl.CAfile, gnutls_strerror(rc));
-      if(data->set.ssl.verifypeer)
+            SSL_CONN_CONFIG(CApath), gnutls_strerror(rc));
+      if(SSL_CONN_CONFIG(verifypeer))
         return CURLE_SSL_CACERT_BADFILE;
     }
     else
       infof(data, "found %d certificates in %s\n",
-            rc, data->set.ssl.CApath);
+            rc, SSL_CONN_CONFIG(CApath));
   }
 #endif
 
 #ifdef CURL_CA_FALLBACK
   /* use system ca certificate store as fallback */
-  if(data->set.ssl.verifypeer &&
-     !(data->set.ssl.CAfile || data->set.ssl.CApath)) {
+  if(SSL_CONN_CONFIG(verifypeer) &&
+     !(SSL_CONN_CONFIG(CAfile) || SSL_CONN_CONFIG(CApath))) {
     gnutls_certificate_set_x509_system_trust(conn->ssl[sockindex].cred);
   }
 #endif
 
-  if(data->set.ssl.CRLfile) {
+  if(SSL_SET_OPTION(CRLfile)) {
     /* set the CRL list file */
     rc = gnutls_certificate_set_x509_crl_file(conn->ssl[sockindex].cred,
-                                              data->set.ssl.CRLfile,
+                                              SSL_SET_OPTION(CRLfile),
                                               GNUTLS_X509_FMT_PEM);
     if(rc < 0) {
       failf(data, "error reading crl file %s (%s)",
-            data->set.ssl.CRLfile, gnutls_strerror(rc));
+            SSL_SET_OPTION(CRLfile), gnutls_strerror(rc));
       return CURLE_SSL_CRL_BADFILE;
     }
     else
       infof(data, "found %d CRL in %s\n",
-            rc, data->set.ssl.CRLfile);
+            rc, SSL_SET_OPTION(CRLfile));
   }
 
   /* Initialize TLS session as a client */
   rc = gnutls_init(&conn->ssl[sockindex].session, GNUTLS_CLIENT);
   if(rc != GNUTLS_E_SUCCESS) {
     failf(data, "gnutls_init() failed: %d", rc);
     return CURLE_SSL_CONNECT_ERROR;
   }
 
   /* convenient assign */
   session = conn->ssl[sockindex].session;
 
-  if((0 == Curl_inet_pton(AF_INET, conn->host.name, &addr)) &&
+  if((0 == Curl_inet_pton(AF_INET, hostname, &addr)) &&
 #ifdef ENABLE_IPV6
-     (0 == Curl_inet_pton(AF_INET6, conn->host.name, &addr)) &&
+     (0 == Curl_inet_pton(AF_INET6, hostname, &addr)) &&
 #endif
      sni &&
-     (gnutls_server_name_set(session, GNUTLS_NAME_DNS, conn->host.name,
-                             strlen(conn->host.name)) < 0))
+     (gnutls_server_name_set(session, GNUTLS_NAME_DNS, hostname,
+                             strlen(hostname)) < 0))
     infof(data, "WARNING: failed to configure server name indication (SNI) "
           "TLS extension\n");
 
   /* Use default priorities */
   rc = gnutls_set_default_priority(session);
   if(rc != GNUTLS_E_SUCCESS)
@@ -542,19 +559,19 @@
    is higher for types specified before others. After specifying the types
    you want, you must append a 0. */
   rc = gnutls_certificate_type_set_priority(session, cert_type_priority);
   if(rc != GNUTLS_E_SUCCESS)
     return CURLE_SSL_CONNECT_ERROR;
 
-  if(data->set.ssl.cipher_list != NULL) {
+  if(SSL_CONN_CONFIG(cipher_list) != NULL) {
     failf(data, "can't pass a custom cipher list to older GnuTLS"
           " versions");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
-  switch (data->set.ssl.version) {
+  switch(SSL_CONN_CONFIG(version) {
     case CURL_SSLVERSION_SSLv3:
       protocol_priority[0] = GNUTLS_SSL3;
       break;
     case CURL_SSLVERSION_DEFAULT:
     case CURL_SSLVERSION_TLSv1:
       protocol_priority[0] = GNUTLS_TLS1_0;
@@ -566,30 +583,34 @@
       break;
     case CURL_SSLVERSION_TLSv1_1:
       protocol_priority[0] = GNUTLS_TLS1_1;
       break;
     case CURL_SSLVERSION_TLSv1_2:
       protocol_priority[0] = GNUTLS_TLS1_2;
-    break;
-      case CURL_SSLVERSION_SSLv2:
-    default:
+      break;
+    case CURL_SSLVERSION_TLSv1_3:
+      failf(data, "GnuTLS: TLS 1.3 is not yet supported");
+      return CURLE_SSL_CONNECT_ERROR;
+    case CURL_SSLVERSION_SSLv2:
       failf(data, "GnuTLS does not support SSLv2");
       return CURLE_SSL_CONNECT_ERROR;
-      break;
+    default:
+      failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+      return CURLE_SSL_CONNECT_ERROR;
   }
   rc = gnutls_protocol_set_priority(session, protocol_priority);
   if(rc != GNUTLS_E_SUCCESS) {
     failf(data, "Did you pass a valid GnuTLS cipher list?");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #else
   /* Ensure +SRP comes at the *end* of all relevant strings so that it can be
    * removed if a run-time error indicates that SRP is not supported by this
    * GnuTLS version */
-  switch (data->set.ssl.version) {
+  switch(SSL_CONN_CONFIG(version)) {
     case CURL_SSLVERSION_SSLv3:
       prioritylist = GNUTLS_CIPHERS ":-VERS-TLS-ALL:+VERS-SSL3.0";
       sni = false;
       break;
     case CURL_SSLVERSION_DEFAULT:
     case CURL_SSLVERSION_TLSv1:
@@ -604,17 +625,21 @@
                      "+VERS-TLS1.1:" GNUTLS_SRP;
       break;
     case CURL_SSLVERSION_TLSv1_2:
       prioritylist = GNUTLS_CIPHERS ":-VERS-SSL3.0:-VERS-TLS-ALL:"
                      "+VERS-TLS1.2:" GNUTLS_SRP;
       break;
+    case CURL_SSLVERSION_TLSv1_3:
+      failf(data, "GnuTLS: TLS 1.3 is not yet supported");
+      return CURLE_SSL_CONNECT_ERROR;
     case CURL_SSLVERSION_SSLv2:
-    default:
       failf(data, "GnuTLS does not support SSLv2");
       return CURLE_SSL_CONNECT_ERROR;
-      break;
+    default:
+      failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+      return CURLE_SSL_CONNECT_ERROR;
   }
   rc = gnutls_priority_set_direct(session, prioritylist, &err);
   if((rc == GNUTLS_E_INVALID_REQUEST) && err) {
     if(!strcmp(err, GNUTLS_SRP)) {
       /* This GnuTLS was probably compiled without support for SRP.
        * Note that fact and try again without it. */
@@ -658,27 +683,27 @@
     infof(data, "ALPN, offering %s\n", ALPN_HTTP_1_1);
 
     gnutls_alpn_set_protocols(session, protocols, cur, 0);
   }
 #endif
 
-  if(data->set.str[STRING_CERT]) {
-    if(data->set.str[STRING_KEY_PASSWD]) {
+  if(SSL_SET_OPTION(cert)) {
+    if(SSL_SET_OPTION(key_passwd)) {
 #if HAVE_GNUTLS_CERTIFICATE_SET_X509_KEY_FILE2
       const unsigned int supported_key_encryption_algorithms =
         GNUTLS_PKCS_USE_PKCS12_3DES | GNUTLS_PKCS_USE_PKCS12_ARCFOUR |
         GNUTLS_PKCS_USE_PKCS12_RC2_40 | GNUTLS_PKCS_USE_PBES2_3DES |
         GNUTLS_PKCS_USE_PBES2_AES_128 | GNUTLS_PKCS_USE_PBES2_AES_192 |
         GNUTLS_PKCS_USE_PBES2_AES_256;
       rc = gnutls_certificate_set_x509_key_file2(
            conn->ssl[sockindex].cred,
-           data->set.str[STRING_CERT],
-           data->set.str[STRING_KEY] ?
-           data->set.str[STRING_KEY] : data->set.str[STRING_CERT],
-           do_file_type(data->set.str[STRING_CERT_TYPE]),
-           data->set.str[STRING_KEY_PASSWD],
+           SSL_SET_OPTION(cert),
+           SSL_SET_OPTION(key) ?
+           SSL_SET_OPTION(key) : SSL_SET_OPTION(cert),
+           do_file_type(SSL_SET_OPTION(cert_type)),
+           SSL_SET_OPTION(key_passwd),
            supported_key_encryption_algorithms);
       if(rc != GNUTLS_E_SUCCESS) {
         failf(data,
               "error reading X.509 potentially-encrypted key file: %s",
               gnutls_strerror(rc));
         return CURLE_SSL_CONNECT_ERROR;
@@ -686,29 +711,28 @@
 #else
       failf(data, "gnutls lacks support for encrypted key files");
       return CURLE_SSL_CONNECT_ERROR;
 #endif
     }
     else {
-      rc = gnutls_certificate_set_x509_key_file(
+      if(gnutls_certificate_set_x509_key_file(
            conn->ssl[sockindex].cred,
-           data->set.str[STRING_CERT],
-           data->set.str[STRING_KEY] ?
-           data->set.str[STRING_KEY] : data->set.str[STRING_CERT],
-           do_file_type(data->set.str[STRING_CERT_TYPE]) );
-      if(rc != GNUTLS_E_SUCCESS) {
-        failf(data, "error reading X.509 key or certificate file: %s",
-              gnutls_strerror(rc));
+           SSL_SET_OPTION(cert),
+           SSL_SET_OPTION(key) ?
+           SSL_SET_OPTION(key) : SSL_SET_OPTION(cert),
+           do_file_type(SSL_SET_OPTION(cert_type)) ) !=
+         GNUTLS_E_SUCCESS) {
+        failf(data, "error reading X.509 key or certificate file");
         return CURLE_SSL_CONNECT_ERROR;
       }
     }
   }
 
 #ifdef USE_TLS_SRP
   /* put the credentials to the current session */
-  if(data->set.ssl.authtype == CURL_TLSAUTH_SRP) {
+  if(SSL_SET_OPTION(authtype) == CURL_TLSAUTH_SRP) {
     rc = gnutls_credentials_set(session, GNUTLS_CRD_SRP,
                                 conn->ssl[sockindex].srp_client_cred);
     if(rc != GNUTLS_E_SUCCESS) {
       failf(data, "gnutls_credentials_set() failed: %s", gnutls_strerror(rc));
       return CURLE_SSL_CONNECT_ERROR;
     }
@@ -721,46 +745,57 @@
     if(rc != GNUTLS_E_SUCCESS) {
       failf(data, "gnutls_credentials_set() failed: %s", gnutls_strerror(rc));
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 
-  /* set the connection handle (file descriptor for the socket) */
-  gnutls_transport_set_ptr(session,
-                           GNUTLS_INT_TO_POINTER_CAST(conn->sock[sockindex]));
+  if(conn->proxy_ssl[sockindex].use) {
+    transport_ptr = conn->proxy_ssl[sockindex].session;
+    gnutls_transport_push = Curl_gtls_push_ssl;
+    gnutls_transport_pull = Curl_gtls_pull_ssl;
+  }
+  else {
+    /* file descriptor for the socket */
+    transport_ptr = GNUTLS_INT_TO_POINTER_CAST(conn->sock[sockindex]);
+    gnutls_transport_push = Curl_gtls_push;
+    gnutls_transport_pull = Curl_gtls_pull;
+  }
+
+  /* set the connection handle */
+  gnutls_transport_set_ptr(session, transport_ptr);
 
   /* register callback functions to send and receive data. */
-  gnutls_transport_set_push_function(session, Curl_gtls_push);
-  gnutls_transport_set_pull_function(session, Curl_gtls_pull);
+  gnutls_transport_set_push_function(session, gnutls_transport_push);
+  gnutls_transport_set_pull_function(session, gnutls_transport_pull);
 
   /* lowat must be set to zero when using custom push and pull functions. */
   gnutls_transport_set_lowat(session, 0);
 
 #ifdef HAS_OCSP
-  if(data->set.ssl.verifystatus) {
+  if(SSL_CONN_CONFIG(verifystatus)) {
     rc = gnutls_ocsp_status_request_enable_client(session, NULL, 0, NULL);
     if(rc != GNUTLS_E_SUCCESS) {
       failf(data, "gnutls_ocsp_status_request_enable_client() failed: %d", rc);
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 #endif
 
   /* This might be a reconnect, so we check for a session ID in the cache
      to speed up things */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     void *ssl_sessionid;
     size_t ssl_idsize;
 
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, &ssl_idsize)) {
+    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, &ssl_idsize, sockindex)) {
       /* we got a session id, use it! */
       gnutls_session_set_data(session, ssl_sessionid, ssl_idsize);
 
       /* Informational message */
-      infof (data, "SSL re-using session ID\n");
+      infof(data, "SSL re-using session ID\n");
     }
     Curl_ssl_sessionid_unlock(conn);
   }
 
   return CURLE_OK;
 }
@@ -844,14 +879,15 @@
   gnutls_session_t session = conn->ssl[sockindex].session;
   int rc;
 #ifdef HAS_ALPN
   gnutls_datum_t proto;
 #endif
   CURLcode result = CURLE_OK;
-
   gnutls_protocol_t version = gnutls_protocol_get_version(session);
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 
   /* the name of the cipher suite used, e.g. ECDHE_RSA_AES_256_GCM_SHA384. */
   ptr = gnutls_cipher_suite_get_name(gnutls_kx_get(session),
                                      gnutls_cipher_get(session),
                                      gnutls_mac_get(session));
 
@@ -863,19 +899,19 @@
      X.509). In case of a X.509 then a certificate list may be present. The
      first certificate in the list is the peer's certificate, following the
      issuer's certificate, then the issuer's issuer etc. */
 
   chainp = gnutls_certificate_get_peers(session, &cert_list_size);
   if(!chainp) {
-    if(data->set.ssl.verifypeer ||
-       data->set.ssl.verifyhost ||
-       data->set.ssl.issuercert) {
+    if(SSL_CONN_CONFIG(verifypeer) ||
+       SSL_CONN_CONFIG(verifyhost) ||
+       SSL_SET_OPTION(issuercert)) {
 #ifdef USE_TLS_SRP
-      if(data->set.ssl.authtype == CURL_TLSAUTH_SRP
-         && data->set.ssl.username != NULL
-         && !data->set.ssl.verifypeer
+      if(SSL_SET_OPTION(authtype) == CURL_TLSAUTH_SRP
+         && SSL_SET_OPTION(username) != NULL
+         && !SSL_CONN_CONFIG(verifypeer)
          && gnutls_cipher_get(session)) {
         /* no peer cert, but auth is ok if we have SRP user and cipher and no
            peer verify */
       }
       else {
 #endif
@@ -902,13 +938,13 @@
       result = Curl_extract_certinfo(conn, i, beg, end);
       if(result)
         return result;
     }
   }
 
-  if(data->set.ssl.verifypeer) {
+  if(SSL_CONN_CONFIG(verifypeer)) {
     /* This function will try to verify the peer's certificate and return its
        status (trusted, invalid etc.). The value of status should be one or
        more of the gnutls_certificate_status_t enumerated elements bitwise
        or'd. To avoid denial of service attacks some default upper limits
        regarding the certificate key size and chain size are set. To override
        them use gnutls_certificate_set_verify_limits(). */
@@ -918,29 +954,30 @@
       failf(data, "server cert verify failed: %d", rc);
       return CURLE_SSL_CONNECT_ERROR;
     }
 
     /* verify_status is a bitmask of gnutls_certificate_status bits */
     if(verify_status & GNUTLS_CERT_INVALID) {
-      if(data->set.ssl.verifypeer) {
+      if(SSL_CONN_CONFIG(verifypeer)) {
         failf(data, "server certificate verification failed. CAfile: %s "
-              "CRLfile: %s", data->set.ssl.CAfile?data->set.ssl.CAfile:"none",
-              data->set.ssl.CRLfile?data->set.ssl.CRLfile:"none");
+              "CRLfile: %s", SSL_CONN_CONFIG(CAfile) ? SSL_CONN_CONFIG(CAfile):
+              "none",
+              SSL_SET_OPTION(CRLfile)?SSL_SET_OPTION(CRLfile):"none");
         return CURLE_SSL_CACERT;
       }
       else
         infof(data, "\t server certificate verification FAILED\n");
     }
     else
       infof(data, "\t server certificate verification OK\n");
   }
   else
     infof(data, "\t server certificate verification SKIPPED\n");
 
 #ifdef HAS_OCSP
-  if(data->set.ssl.verifystatus) {
+  if(SSL_CONN_CONFIG(verifystatus)) {
     if(gnutls_ocsp_status_request_is_checked(session, 0) == 0) {
       gnutls_datum_t status_request;
       gnutls_ocsp_resp_t ocsp_resp;
 
       gnutls_ocsp_cert_status_t status;
       gnutls_x509_crl_reason_t reason;
@@ -1046,27 +1083,27 @@
 
   if(chainp)
     /* convert the given DER or PEM encoded Certificate to the native
        gnutls_x509_crt_t format */
     gnutls_x509_crt_import(x509_cert, chainp, GNUTLS_X509_FMT_DER);
 
-  if(data->set.ssl.issuercert) {
+  if(SSL_SET_OPTION(issuercert)) {
     gnutls_x509_crt_init(&x509_issuer);
-    issuerp = load_file(data->set.ssl.issuercert);
+    issuerp = load_file(SSL_SET_OPTION(issuercert));
     gnutls_x509_crt_import(x509_issuer, &issuerp, GNUTLS_X509_FMT_PEM);
     rc = gnutls_x509_crt_check_issuer(x509_cert, x509_issuer);
     gnutls_x509_crt_deinit(x509_issuer);
     unload_file(issuerp);
     if(rc <= 0) {
       failf(data, "server certificate issuer check failed (IssuerCert: %s)",
-            data->set.ssl.issuercert?data->set.ssl.issuercert:"none");
+            SSL_SET_OPTION(issuercert)?SSL_SET_OPTION(issuercert):"none");
       gnutls_x509_crt_deinit(x509_cert);
       return CURLE_SSL_ISSUER_ERROR;
     }
     infof(data, "\t server certificate issuer check OK (Issuer Cert: %s)\n",
-          data->set.ssl.issuercert?data->set.ssl.issuercert:"none");
+          SSL_SET_OPTION(issuercert)?SSL_SET_OPTION(issuercert):"none");
   }
 
   size=sizeof(certbuf);
   rc = gnutls_x509_crt_get_dn_by_oid(x509_cert, GNUTLS_OID_X520_COMMON_NAME,
                                      0, /* the first and only one */
                                      FALSE,
@@ -1079,13 +1116,13 @@
 
   /* This function will check if the given certificate's subject matches the
      given hostname. This is a basic implementation of the matching described
      in RFC2818 (HTTPS), which takes into account wildcards, and the subject
      alternative name PKIX extension. Returns non zero on success, and zero on
      failure. */
-  rc = gnutls_x509_crt_check_hostname(x509_cert, conn->host.name);
+  rc = gnutls_x509_crt_check_hostname(x509_cert, hostname);
 #if GNUTLS_VERSION_NUMBER < 0x030306
   /* Before 3.3.6, gnutls_x509_crt_check_hostname() didn't check IP
      addresses. */
   if(!rc) {
 #ifdef ENABLE_IPV6
     #define use_addr in6_addr
@@ -1095,16 +1132,16 @@
     unsigned char addrbuf[sizeof(struct use_addr)];
     unsigned char certaddr[sizeof(struct use_addr)];
     size_t addrlen = 0, certaddrlen;
     int i;
     int ret = 0;
 
-    if(Curl_inet_pton(AF_INET, conn->host.name, addrbuf) > 0)
+    if(Curl_inet_pton(AF_INET, hostname, addrbuf) > 0)
       addrlen = 4;
 #ifdef ENABLE_IPV6
-    else if(Curl_inet_pton(AF_INET6, conn->host.name, addrbuf) > 0)
+    else if(Curl_inet_pton(AF_INET6, hostname, addrbuf) > 0)
       addrlen = 16;
 #endif
 
     if(addrlen) {
       for(i=0; ; i++) {
         certaddrlen = sizeof(certaddr);
@@ -1123,40 +1160,43 @@
         }
       }
     }
   }
 #endif
   if(!rc) {
-    if(data->set.ssl.verifyhost) {
+    const char * const dispname = SSL_IS_PROXY() ?
+      conn->http_proxy.host.dispname : conn->host.dispname;
+
+    if(SSL_CONN_CONFIG(verifyhost)) {
       failf(data, "SSL: certificate subject name (%s) does not match "
-            "target host name '%s'", certbuf, conn->host.dispname);
+            "target host name '%s'", certbuf, dispname);
       gnutls_x509_crt_deinit(x509_cert);
       return CURLE_PEER_FAILED_VERIFICATION;
     }
     else
       infof(data, "\t common name: %s (does not match '%s')\n",
-            certbuf, conn->host.dispname);
+            certbuf, dispname);
   }
   else
     infof(data, "\t common name: %s (matched)\n", certbuf);
 
   /* Check for time-based validity */
   certclock = gnutls_x509_crt_get_expiration_time(x509_cert);
 
   if(certclock == (time_t)-1) {
-    if(data->set.ssl.verifypeer) {
+    if(SSL_CONN_CONFIG(verifypeer)) {
       failf(data, "server cert expiration date verify failed");
       gnutls_x509_crt_deinit(x509_cert);
       return CURLE_SSL_CONNECT_ERROR;
     }
     else
       infof(data, "\t server certificate expiration date verify FAILED\n");
   }
   else {
     if(certclock < time(NULL)) {
-      if(data->set.ssl.verifypeer) {
+      if(SSL_CONN_CONFIG(verifypeer)) {
         failf(data, "server certificate expiration date has passed.");
         gnutls_x509_crt_deinit(x509_cert);
         return CURLE_PEER_FAILED_VERIFICATION;
       }
       else
         infof(data, "\t server certificate expiration date FAILED\n");
@@ -1165,35 +1205,36 @@
       infof(data, "\t server certificate expiration date OK\n");
   }
 
   certclock = gnutls_x509_crt_get_activation_time(x509_cert);
 
   if(certclock == (time_t)-1) {
-    if(data->set.ssl.verifypeer) {
+    if(SSL_CONN_CONFIG(verifypeer)) {
       failf(data, "server cert activation date verify failed");
       gnutls_x509_crt_deinit(x509_cert);
       return CURLE_SSL_CONNECT_ERROR;
     }
     else
       infof(data, "\t server certificate activation date verify FAILED\n");
   }
   else {
     if(certclock > time(NULL)) {
-      if(data->set.ssl.verifypeer) {
+      if(SSL_CONN_CONFIG(verifypeer)) {
         failf(data, "server certificate not activated yet.");
         gnutls_x509_crt_deinit(x509_cert);
         return CURLE_PEER_FAILED_VERIFICATION;
       }
       else
         infof(data, "\t server certificate activation date FAILED\n");
     }
     else
       infof(data, "\t server certificate activation date OK\n");
   }
 
-  ptr = data->set.str[STRING_SSL_PINNEDPUBLICKEY];
+  ptr = SSL_IS_PROXY() ? data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+        data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
   if(ptr) {
     result = pkp_pin_peer_pubkey(data, x509_cert, ptr);
     if(result != CURLE_OK) {
       failf(data, "SSL: public key does not match pinned public key!");
       gnutls_x509_crt_deinit(x509_cert);
       return result;
@@ -1267,13 +1308,13 @@
 #endif
 
   conn->ssl[sockindex].state = ssl_connection_complete;
   conn->recv[sockindex] = gtls_recv;
   conn->send[sockindex] = gtls_send;
 
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     /* we always unconditionally get the session id here, as even if we
        already got it from the cache and asked to use it in the connection, it
        might've been rejected and then a new one is in use now and we need to
        detect that. */
     bool incache;
     void *ssl_sessionid;
@@ -1286,21 +1327,23 @@
 
     if(connect_sessionid) {
       /* extract session ID to the allocated buffer */
       gnutls_session_get_data(session, connect_sessionid, &connect_idsize);
 
       Curl_ssl_sessionid_lock(conn);
-      incache = !(Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL));
+      incache = !(Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL,
+                                        sockindex));
       if(incache) {
         /* there was one before in the cache, so instead of risking that the
            previous one was rejected, we just kill that and store the new */
         Curl_ssl_delsessionid(conn, ssl_sessionid);
       }
 
       /* store this session id */
-      result = Curl_ssl_addsessionid(conn, connect_sessionid, connect_idsize);
+      result = Curl_ssl_addsessionid(conn, connect_sessionid, connect_idsize,
+                                     sockindex);
       Curl_ssl_sessionid_unlock(conn);
       if(result) {
         free(connect_sessionid);
         result = CURLE_OUT_OF_MEMORY;
       }
     }
@@ -1329,13 +1372,13 @@
 {
   int rc;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   /* Initiate the connection, if not already done */
   if(ssl_connect_1==connssl->connecting_state) {
-    rc = gtls_connect_step1 (conn, sockindex);
+    rc = gtls_connect_step1(conn, sockindex);
     if(rc)
       return rc;
   }
 
   rc = handshake(conn, sockindex, TRUE, nonblocking);
   if(rc)
@@ -1376,12 +1419,26 @@
 
   DEBUGASSERT(done);
 
   return CURLE_OK;
 }
 
+bool Curl_gtls_data_pending(const struct connectdata *conn, int connindex)
+{
+  bool res = FALSE;
+  if(conn->ssl[connindex].session &&
+     0 != gnutls_record_check_pending(conn->ssl[connindex].session))
+    res = TRUE;
+
+  if(conn->proxy_ssl[connindex].session &&
+     0 != gnutls_record_check_pending(conn->proxy_ssl[connindex].session))
+    res = TRUE;
+
+  return res;
+}
+
 static ssize_t gtls_send(struct connectdata *conn,
                          int sockindex,
                          const void *mem,
                          size_t len,
                          CURLcode *curlcode)
 {
@@ -1395,35 +1452,35 @@
     rc = -1;
   }
 
   return rc;
 }
 
-static void close_one(struct connectdata *conn,
-                      int idx)
+static void close_one(struct ssl_connect_data *ssl)
 {
-  if(conn->ssl[idx].session) {
-    gnutls_bye(conn->ssl[idx].session, GNUTLS_SHUT_RDWR);
-    gnutls_deinit(conn->ssl[idx].session);
-    conn->ssl[idx].session = NULL;
-  }
-  if(conn->ssl[idx].cred) {
-    gnutls_certificate_free_credentials(conn->ssl[idx].cred);
-    conn->ssl[idx].cred = NULL;
+  if(ssl->session) {
+    gnutls_bye(ssl->session, GNUTLS_SHUT_RDWR);
+    gnutls_deinit(ssl->session);
+    ssl->session = NULL;
+  }
+  if(ssl->cred) {
+    gnutls_certificate_free_credentials(ssl->cred);
+    ssl->cred = NULL;
   }
 #ifdef USE_TLS_SRP
-  if(conn->ssl[idx].srp_client_cred) {
-    gnutls_srp_free_client_credentials(conn->ssl[idx].srp_client_cred);
-    conn->ssl[idx].srp_client_cred = NULL;
+  if(ssl->srp_client_cred) {
+    gnutls_srp_free_client_credentials(ssl->srp_client_cred);
+    ssl->srp_client_cred = NULL;
   }
 #endif
 }
 
 void Curl_gtls_close(struct connectdata *conn, int sockindex)
 {
-  close_one(conn, sockindex);
+  close_one(&conn->ssl[sockindex]);
+  close_one(&conn->proxy_ssl[sockindex]);
 }
 
 /*
  * This function is called to shut down the SSL layer but keep the
  * socket open (CCC - Clear Command Channel)
  */
@@ -1483,14 +1540,14 @@
     }
     gnutls_deinit(conn->ssl[sockindex].session);
   }
   gnutls_certificate_free_credentials(conn->ssl[sockindex].cred);
 
 #ifdef USE_TLS_SRP
-  if(data->set.ssl.authtype == CURL_TLSAUTH_SRP
-     && data->set.ssl.username != NULL)
+  if(SSL_SET_OPTION(authtype) == CURL_TLSAUTH_SRP
+     && SSL_SET_OPTION(username) != NULL)
     gnutls_srp_free_client_credentials(conn->ssl[sockindex].srp_client_cred);
 #endif
 
   conn->ssl[sockindex].cred = NULL;
   conn->ssl[sockindex].session = NULL;
 
@@ -1594,13 +1651,13 @@
   md5_update(&MD5pw, (unsigned int)tmplen, tmp);
   md5_digest(&MD5pw, (unsigned int)md5len, md5sum);
 #elif defined(USE_GNUTLS)
   gcry_md_hd_t MD5pw;
   gcry_md_open(&MD5pw, GCRY_MD_MD5, 0);
   gcry_md_write(MD5pw, tmp, tmplen);
-  memcpy(md5sum, gcry_md_read (MD5pw, 0), md5len);
+  memcpy(md5sum, gcry_md_read(MD5pw, 0), md5len);
   gcry_md_close(MD5pw);
 #endif
 }
 
 void Curl_gtls_sha256sum(const unsigned char *tmp, /* input */
                       size_t tmplen,
@@ -1613,13 +1670,13 @@
   sha256_update(&SHA256pw, (unsigned int)tmplen, tmp);
   sha256_digest(&SHA256pw, (unsigned int)sha256len, sha256sum);
 #elif defined(USE_GNUTLS)
   gcry_md_hd_t SHA256pw;
   gcry_md_open(&SHA256pw, GCRY_MD_SHA256, 0);
   gcry_md_write(SHA256pw, tmp, tmplen);
-  memcpy(sha256sum, gcry_md_read (SHA256pw, 0), sha256len);
+  memcpy(sha256sum, gcry_md_read(SHA256pw, 0), sha256len);
   gcry_md_close(SHA256pw);
 #endif
 }
 
 bool Curl_gtls_cert_status_request(void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gtls.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gtls.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/gtls.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/gtls.h	2016-12-19 15:27:56.000000000 +0800
@@ -31,12 +31,14 @@
 int Curl_gtls_init(void);
 int Curl_gtls_cleanup(void);
 CURLcode Curl_gtls_connect(struct connectdata *conn, int sockindex);
 CURLcode Curl_gtls_connect_nonblocking(struct connectdata *conn,
                                        int sockindex,
                                        bool *done);
+bool Curl_gtls_data_pending(const struct connectdata *conn,
+                            int connindex);
 
  /* close a SSL connection */
 void Curl_gtls_close(struct connectdata *conn, int sockindex);
 
 void Curl_gtls_session_free(void *ptr);
 size_t Curl_gtls_version(char *buffer, size_t size);
@@ -52,12 +54,15 @@
                       size_t tmplen,
                       unsigned char *sha256sum, /* output */
                       size_t sha256len);
 
 bool Curl_gtls_cert_status_request(void);
 
+/* Support HTTPS-proxy */
+#define HTTPS_PROXY_SUPPORT 1
+
 /* Set the API backend definition to GnuTLS */
 #define CURL_SSL_BACKEND CURLSSLBACKEND_GNUTLS
 
 /* this backend supports the CAPATH option */
 #define have_curlssl_ca_path 1
 
@@ -78,13 +83,13 @@
 #define curlssl_shutdown(x,y) Curl_gtls_shutdown(x,y)
 #define curlssl_set_engine(x,y) ((void)x, (void)y, CURLE_NOT_BUILT_IN)
 #define curlssl_set_engine_default(x) ((void)x, CURLE_NOT_BUILT_IN)
 #define curlssl_engines_list(x) ((void)x, (struct curl_slist *)NULL)
 #define curlssl_version Curl_gtls_version
 #define curlssl_check_cxn(x) ((void)x, -1)
-#define curlssl_data_pending(x,y) ((void)x, (void)y, 0)
+#define curlssl_data_pending(x,y) Curl_gtls_data_pending(x,y)
 #define curlssl_random(x,y,z) Curl_gtls_random(x,y,z)
 #define curlssl_md5sum(a,b,c,d) Curl_gtls_md5sum(a,b,c,d)
 #define curlssl_sha256sum(a,b,c,d) Curl_gtls_sha256sum(a,b,c,d)
 #define curlssl_cert_status_request() Curl_gtls_cert_status_request()
 
 #endif /* USE_GNUTLS */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/mbedtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/mbedtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/mbedtls.c	2016-10-31 20:20:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/mbedtls.c	2016-12-19 15:27:56.000000000 +0800
@@ -28,17 +28,21 @@
  */
 
 #include "curl_setup.h"
 
 #ifdef USE_MBEDTLS
 
+#include <mbedtls/version.h>
+#if MBEDTLS_VERSION_NUMBER >= 0x02040000
 #include <mbedtls/net_sockets.h>
+#else
+#include <mbedtls/net.h>
+#endif
 #include <mbedtls/ssl.h>
 #include <mbedtls/certs.h>
 #include <mbedtls/x509.h>
-#include <mbedtls/version.h>
 
 #include <mbedtls/error.h>
 #include <mbedtls/entropy.h>
 #include <mbedtls/ctr_drbg.h>
 #include <mbedtls/sha256.h>
 
@@ -156,19 +160,26 @@
 static CURLcode
 mbed_connect_step1(struct connectdata *conn,
                    int sockindex)
 {
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
-
+  const char * const ssl_cafile = SSL_CONN_CONFIG(CAfile);
+  const bool verifypeer = SSL_CONN_CONFIG(verifypeer);
+  const char * const ssl_capath = SSL_CONN_CONFIG(CApath);
+  char * const ssl_cert = SSL_SET_OPTION(cert);
+  const char * const ssl_crlfile = SSL_SET_OPTION(CRLfile);
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const long int port = SSL_IS_PROXY() ? conn->port : conn->remote_port;
   int ret = -1;
   char errorbuf[128];
   errorbuf[0]=0;
 
   /* mbedTLS only supports SSLv3 and TLSv1 */
-  if(data->set.ssl.version == CURL_SSLVERSION_SSLv2) {
+  if(SSL_CONN_CONFIG(version) == CURL_SSLVERSION_SSLv2) {
     failf(data, "mbedTLS does not support SSLv2");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #ifdef THREADING_SUPPORT
   entropy_init_mutex(&entropy);
@@ -198,102 +209,97 @@
   }
 #endif /* THREADING_SUPPORT */
 
   /* Load the trusted CA */
   mbedtls_x509_crt_init(&connssl->cacert);
 
-  if(data->set.str[STRING_SSL_CAFILE]) {
-    ret = mbedtls_x509_crt_parse_file(&connssl->cacert,
-                                      data->set.str[STRING_SSL_CAFILE]);
+  if(ssl_cafile) {
+    ret = mbedtls_x509_crt_parse_file(&connssl->cacert, ssl_cafile);
 
     if(ret<0) {
 #ifdef MBEDTLS_ERROR_C
       mbedtls_strerror(ret, errorbuf, sizeof(errorbuf));
 #endif /* MBEDTLS_ERROR_C */
       failf(data, "Error reading ca cert file %s - mbedTLS: (-0x%04X) %s",
-            data->set.str[STRING_SSL_CAFILE], -ret, errorbuf);
+            ssl_cafile, -ret, errorbuf);
 
-      if(data->set.ssl.verifypeer)
+      if(verifypeer)
         return CURLE_SSL_CACERT_BADFILE;
     }
   }
 
-  if(data->set.str[STRING_SSL_CAPATH]) {
-    ret = mbedtls_x509_crt_parse_path(&connssl->cacert,
-                                      data->set.str[STRING_SSL_CAPATH]);
+  if(ssl_capath) {
+    ret = mbedtls_x509_crt_parse_path(&connssl->cacert, ssl_capath);
 
     if(ret<0) {
 #ifdef MBEDTLS_ERROR_C
       mbedtls_strerror(ret, errorbuf, sizeof(errorbuf));
 #endif /* MBEDTLS_ERROR_C */
       failf(data, "Error reading ca cert path %s - mbedTLS: (-0x%04X) %s",
-            data->set.str[STRING_SSL_CAPATH], -ret, errorbuf);
+            ssl_capath, -ret, errorbuf);
 
-      if(data->set.ssl.verifypeer)
+      if(verifypeer)
         return CURLE_SSL_CACERT_BADFILE;
     }
   }
 
   /* Load the client certificate */
   mbedtls_x509_crt_init(&connssl->clicert);
 
-  if(data->set.str[STRING_CERT]) {
-    ret = mbedtls_x509_crt_parse_file(&connssl->clicert,
-                                      data->set.str[STRING_CERT]);
+  if(ssl_cert) {
+    ret = mbedtls_x509_crt_parse_file(&connssl->clicert, ssl_cert);
 
     if(ret) {
 #ifdef MBEDTLS_ERROR_C
       mbedtls_strerror(ret, errorbuf, sizeof(errorbuf));
 #endif /* MBEDTLS_ERROR_C */
       failf(data, "Error reading client cert file %s - mbedTLS: (-0x%04X) %s",
-            data->set.str[STRING_CERT], -ret, errorbuf);
+            ssl_cert, -ret, errorbuf);
 
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load the client private key */
   mbedtls_pk_init(&connssl->pk);
 
-  if(data->set.str[STRING_KEY]) {
-    ret = mbedtls_pk_parse_keyfile(&connssl->pk, data->set.str[STRING_KEY],
-                                   data->set.str[STRING_KEY_PASSWD]);
+  if(SSL_SET_OPTION(key)) {
+    ret = mbedtls_pk_parse_keyfile(&connssl->pk, SSL_SET_OPTION(key),
+                                   SSL_SET_OPTION(key_passwd));
     if(ret == 0 && !mbedtls_pk_can_do(&connssl->pk, MBEDTLS_PK_RSA))
       ret = MBEDTLS_ERR_PK_TYPE_MISMATCH;
 
     if(ret) {
 #ifdef MBEDTLS_ERROR_C
       mbedtls_strerror(ret, errorbuf, sizeof(errorbuf));
 #endif /* MBEDTLS_ERROR_C */
       failf(data, "Error reading private key %s - mbedTLS: (-0x%04X) %s",
-            data->set.str[STRING_KEY], -ret, errorbuf);
+            SSL_SET_OPTION(key), -ret, errorbuf);
 
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load the CRL */
   mbedtls_x509_crl_init(&connssl->crl);
 
-  if(data->set.str[STRING_SSL_CRLFILE]) {
-    ret = mbedtls_x509_crl_parse_file(&connssl->crl,
-                                      data->set.str[STRING_SSL_CRLFILE]);
+  if(ssl_crlfile) {
+    ret = mbedtls_x509_crl_parse_file(&connssl->crl, ssl_crlfile);
 
     if(ret) {
 #ifdef MBEDTLS_ERROR_C
       mbedtls_strerror(ret, errorbuf, sizeof(errorbuf));
 #endif /* MBEDTLS_ERROR_C */
       failf(data, "Error reading CRL file %s - mbedTLS: (-0x%04X) %s",
-            data->set.str[STRING_SSL_CRLFILE], -ret, errorbuf);
+            ssl_crlfile, -ret, errorbuf);
 
       return CURLE_SSL_CRL_BADFILE;
     }
   }
 
-  infof(data, "mbedTLS: Connecting to %s:%d\n",
-        conn->host.name, conn->remote_port);
+  infof(data, "mbedTLS: Connecting to %s:%d\n", hostname, port);
 
   mbedtls_ssl_config_init(&connssl->config);
 
   mbedtls_ssl_init(&connssl->ssl);
   if(mbedtls_ssl_setup(&connssl->ssl, &connssl->config)) {
     failf(data, "mbedTLS: ssl_init failed");
@@ -309,13 +315,13 @@
   }
 
   /* new profile with RSA min key len = 1024 ... */
   mbedtls_ssl_conf_cert_profile(&connssl->config,
                                 &mbedtls_x509_crt_profile_fr);
 
-  switch(data->set.ssl.version) {
+  switch(SSL_CONN_CONFIG(version)) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     mbedtls_ssl_conf_min_version(&connssl->config, MBEDTLS_SSL_MAJOR_VERSION_3,
                                  MBEDTLS_SSL_MINOR_VERSION_1);
     infof(data, "mbedTLS: Set min SSL version to TLS 1.0\n");
     break;
@@ -344,14 +350,17 @@
     mbedtls_ssl_conf_min_version(&connssl->config, MBEDTLS_SSL_MAJOR_VERSION_3,
                                  MBEDTLS_SSL_MINOR_VERSION_3);
     mbedtls_ssl_conf_max_version(&connssl->config, MBEDTLS_SSL_MAJOR_VERSION_3,
                                  MBEDTLS_SSL_MINOR_VERSION_3);
     infof(data, "mbedTLS: Set SSL version to TLS 1.2\n");
     break;
+  case CURL_SSLVERSION_TLSv1_3:
+    failf(data, "mbedTLS: TLS 1.3 is not yet supported");
+    return CURLE_SSL_CONNECT_ERROR;
   default:
-    failf(data, "mbedTLS: Unsupported SSL protocol version");
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
   mbedtls_ssl_conf_authmode(&connssl->config, MBEDTLS_SSL_VERIFY_OPTIONAL);
 
   mbedtls_ssl_conf_rng(&connssl->config, mbedtls_ctr_drbg_random,
@@ -362,17 +371,17 @@
                       NULL /*  rev_timeout() */);
 
   mbedtls_ssl_conf_ciphersuites(&connssl->config,
                                 mbedtls_ssl_list_ciphersuites());
 
   /* Check if there's a cached ID we can/should use here! */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     void *old_session = NULL;
 
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &old_session, NULL)) {
+    if(!Curl_ssl_getsessionid(conn, &old_session, NULL, sockindex)) {
       ret = mbedtls_ssl_set_session(&connssl->ssl, old_session);
       if(ret) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "mbedtls_ssl_set_session returned -0x%x", -ret);
         return CURLE_SSL_CONNECT_ERROR;
       }
@@ -382,17 +391,17 @@
   }
 
   mbedtls_ssl_conf_ca_chain(&connssl->config,
                             &connssl->cacert,
                             &connssl->crl);
 
-  if(data->set.str[STRING_KEY]) {
+  if(SSL_SET_OPTION(key)) {
     mbedtls_ssl_conf_own_cert(&connssl->config,
                               &connssl->clicert, &connssl->pk);
   }
-  if(mbedtls_ssl_set_hostname(&connssl->ssl, conn->host.name)) {
+  if(mbedtls_ssl_set_hostname(&connssl->ssl, hostname)) {
     /* mbedtls_ssl_set_hostname() sets the name to use in CN/SAN checks *and*
        the name to set in the SNI extension. So even if curl connects to a
        host specified as an IP address, this function must be used. */
     failf(data, "couldn't set hostname in mbedTLS");
     return CURLE_SSL_CONNECT_ERROR;
   }
@@ -440,15 +449,18 @@
                    int sockindex)
 {
   int ret;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
   const mbedtls_x509_crt *peercert;
+  const char * const pinnedpubkey = SSL_IS_PROXY() ?
+        data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+        data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
 
 #ifdef HAS_ALPN
-  const char* next_protocol;
+  const char *next_protocol;
 #endif
 
   char errorbuf[128];
   errorbuf[0] = 0;
 
   conn->recv[sockindex] = mbed_recv;
@@ -476,13 +488,13 @@
   infof(data, "mbedTLS: Handshake complete, cipher is %s\n",
         mbedtls_ssl_get_ciphersuite(&conn->ssl[sockindex].ssl)
     );
 
   ret = mbedtls_ssl_get_verify_result(&conn->ssl[sockindex].ssl);
 
-  if(ret && data->set.ssl.verifypeer) {
+  if(ret && SSL_CONN_CONFIG(verifypeer)) {
     if(ret & MBEDTLS_X509_BADCERT_EXPIRED)
       failf(data, "Cert verify failed: BADCERT_EXPIRED");
 
     if(ret & MBEDTLS_X509_BADCERT_REVOKED) {
       failf(data, "Cert verify failed: BADCERT_REVOKED");
       return CURLE_SSL_CACERT;
@@ -511,13 +523,13 @@
     else
       infof(data, "Unable to dump certificate information.\n");
 
     free(buffer);
   }
 
-  if(data->set.str[STRING_SSL_PINNEDPUBLICKEY]) {
+  if(pinnedpubkey) {
     int size;
     CURLcode result;
     mbedtls_x509_crt *p;
     unsigned char pubkey[PUB_DER_MAX_BYTES];
 
     if(!peercert || !peercert->raw.p || !peercert->raw.len) {
@@ -550,13 +562,13 @@
       free(p);
       return CURLE_SSL_PINNEDPUBKEYNOTMATCH;
     }
 
     /* mbedtls_pk_write_pubkey_der writes data at the end of the buffer. */
     result = Curl_pin_peer_pubkey(data,
-                                  data->set.str[STRING_SSL_PINNEDPUBLICKEY],
+                                  pinnedpubkey,
                                   &pubkey[PUB_DER_MAX_BYTES - size], size);
     if(result) {
       mbedtls_x509_crt_free(p);
       free(p);
       return result;
     }
@@ -603,13 +615,13 @@
   CURLcode retcode = CURLE_OK;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   struct Curl_easy *data = conn->data;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     int ret;
     mbedtls_ssl_session *our_ssl_sessionid;
     void *old_ssl_sessionid = NULL;
 
     our_ssl_sessionid = malloc(sizeof(mbedtls_ssl_session));
     if(!our_ssl_sessionid)
@@ -622,16 +634,16 @@
       failf(data, "mbedtls_ssl_get_session returned -0x%x", -ret);
       return CURLE_SSL_CONNECT_ERROR;
     }
 
     /* If there's already a matching session in the cache, delete it */
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL))
+    if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL, sockindex))
       Curl_ssl_delsessionid(conn, old_ssl_sessionid);
 
-    retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0);
+    retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0, sockindex);
     Curl_ssl_sessionid_unlock(conn);
     if(retcode) {
       free(our_ssl_sessionid);
       failf(data, "failed to store ssl session");
       return retcode;
     }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/nss.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/nss.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/nss.c	2016-11-01 04:51:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/nss.c	2016-12-19 15:27:56.000000000 +0800
@@ -197,20 +197,20 @@
      TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256},
  {"dhe_rsa_chacha20_poly1305_sha_256",
      TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256},
 #endif
 };
 
-static const char* pem_library = "libnsspem.so";
-static SECMODModule* mod = NULL;
+static const char *pem_library = "libnsspem.so";
+static SECMODModule *mod = NULL;
 
 /* NSPR I/O layer we use to detect blocking direction during SSL handshake */
 static PRDescIdentity nspr_io_identity = PR_INVALID_IO_LAYER;
 static PRIOMethods nspr_io_methods;
 
-static const char* nss_error_to_name(PRErrorCode code)
+static const char *nss_error_to_name(PRErrorCode code)
 {
   const char *name = PR_ErrorToName(code);
   if(name)
     return name;
 
   return "unknown error";
@@ -251,13 +251,14 @@
   cipher = cipher_list;
 
   while(cipher_list && (cipher_list[0])) {
     while((*cipher) && (ISSPACE(*cipher)))
       ++cipher;
 
-    if((cipher_list = strchr(cipher, ','))) {
+    cipher_list = strchr(cipher, ',');
+    if(cipher_list) {
       *cipher_list++ = '\0';
     }
 
     found = PR_FALSE;
 
     for(i=0; i<NUM_OF_CIPHERS; i++) {
@@ -334,15 +335,14 @@
 /* Check if the given string is filename or nickname of a certificate.  If the
  * given string is recognized as filename, return NULL.  If the given string is
  * recognized as nickname, return a duplicated string.  The returned string
  * should be later deallocated using free().  If the OOM failure occurs, we
  * return NULL, too.
  */
-static char* dup_nickname(struct Curl_easy *data, enum dupstring cert_kind)
+static char *dup_nickname(struct Curl_easy *data, const char *str)
 {
-  const char *str = data->set.str[cert_kind];
   const char *n;
 
   if(!is_file(str))
     /* no such file exists, use the string as nickname */
     return strdup(str);
 
@@ -511,13 +511,13 @@
   /* we need to clear session cache, so that the CRL could take effect */
   SSL_ClearSessionCache();
   PR_Unlock(nss_crllock);
   return CURLE_OK;
 }
 
-static CURLcode nss_load_crl(const char* crlfilename)
+static CURLcode nss_load_crl(const char *crlfilename)
 {
   PRFileDesc *infile;
   PRFileInfo  info;
   SECItem filedata = { 0, NULL, 0 };
   SECItem *crl_der = NULL;
   char *body;
@@ -537,13 +537,13 @@
 
   crl_der = SECITEM_AllocItem(NULL, NULL, 0U);
   if(!crl_der)
     goto fail;
 
   /* place a trailing zero right after the visible data */
-  body = (char*)filedata.data;
+  body = (char *)filedata.data;
   body[--filedata.len] = '\0';
 
   body = strstr(body, "-----BEGIN");
   if(body) {
     /* assume ASCII */
     char *trailer;
@@ -582,12 +582,13 @@
                              char *key_file)
 {
   PK11SlotInfo *slot;
   SECStatus status;
   CURLcode result;
   struct ssl_connect_data *ssl = conn->ssl;
+  struct Curl_easy *data = conn->data;
 
   (void)sockindex; /* unused */
 
   result = nss_create_object(ssl, CKO_PRIVATE_KEY, key_file, FALSE);
   if(result) {
     PR_SetError(SEC_ERROR_BAD_KEY, 0);
@@ -599,14 +600,13 @@
     return CURLE_SSL_CERTPROBLEM;
 
   /* This will force the token to be seen as re-inserted */
   SECMOD_WaitForAnyTokenEvent(mod, 0, 0);
   PK11_IsPresent(slot);
 
-  status = PK11_Authenticate(slot, PR_TRUE,
-                             conn->data->set.str[STRING_KEY_PASSWD]);
+  status = PK11_Authenticate(slot, PR_TRUE, SSL_SET_OPTION(key_passwd));
   PK11_FreeSlot(slot);
 
   return (SECSuccess == status) ? CURLE_OK : CURLE_SSL_CERTPROBLEM;
 }
 
 static int display_error(struct connectdata *conn, PRInt32 err,
@@ -661,13 +661,13 @@
     }
   }
 
   return CURLE_OK;
 }
 
-static char * nss_get_password(PK11SlotInfo * slot, PRBool retry, void *arg)
+static char *nss_get_password(PK11SlotInfo *slot, PRBool retry, void *arg)
 {
   (void)slot; /* unused */
 
   if(retry || NULL == arg)
     return NULL;
   else
@@ -679,13 +679,13 @@
 static SECStatus nss_auth_cert_hook(void *arg, PRFileDesc *fd, PRBool checksig,
                                     PRBool isServer)
 {
   struct connectdata *conn = (struct connectdata *)arg;
 
 #ifdef SSL_ENABLE_OCSP_STAPLING
-  if(conn->data->set.ssl.verifystatus) {
+  if(SSL_CONN_CONFIG(verifystatus)) {
     SECStatus cacheResult;
 
     const SECItemArray *csa = SSL_PeerStapledOCSPResponses(fd);
     if(!csa) {
       failf(conn->data, "Invalid OCSP response");
       return SECFailure;
@@ -705,13 +705,13 @@
       failf(conn->data, "Invalid OCSP response");
       return cacheResult;
     }
   }
 #endif
 
-  if(!conn->data->set.ssl.verifypeer) {
+  if(!SSL_CONN_CONFIG(verifypeer)) {
     infof(conn->data, "skipping SSL peer certificate verification\n");
     return SECSuccess;
   }
 
   return SSL_AuthCertificate(CERT_GetDefaultCertDB(), fd, checksig, isServer);
 }
@@ -731,12 +731,17 @@
     return;
   }
 
   if(SSL_GetNextProto(sock, &state, buf, &buflen, buflenmax) == SECSuccess) {
 
     switch(state) {
+#if NSSVERNUM >= 0x031a00 /* 3.26.0 */
+    /* used by NSS internally to implement 0-RTT */
+    case SSL_NEXT_PROTO_EARLY_VALUE:
+      /* fall through! */
+#endif
     case SSL_NEXT_PROTO_NO_SUPPORT:
     case SSL_NEXT_PROTO_NO_OVERLAP:
       infof(conn->data, "ALPN/NPN, server did not agree to a protocol\n");
       return;
 #ifdef SSL_ENABLE_ALPN
     case SSL_NEXT_PROTO_SELECTED:
@@ -925,15 +930,18 @@
   struct connectdata *conn = (struct connectdata *)arg;
   struct Curl_easy *data = conn->data;
   PRErrorCode err = PR_GetError();
   CERTCertificate *cert;
 
   /* remember the cert verification result */
-  data->set.ssl.certverifyresult = err;
+  if(SSL_IS_PROXY())
+    data->set.proxy_ssl.certverifyresult = err;
+  else
+    data->set.ssl.certverifyresult = err;
 
-  if(err == SSL_ERROR_BAD_CERT_DOMAIN && !data->set.ssl.verifyhost)
+  if(err == SSL_ERROR_BAD_CERT_DOMAIN && !SSL_CONN_CONFIG(verifyhost))
     /* we are asked not to verify the host name */
     return SECSuccess;
 
   /* print only info about the cert, the error is printed off the callback */
   cert = SSL_PeerCertificate(sock);
   if(cert) {
@@ -1364,42 +1372,61 @@
   if(rc == 0)
     return 0; /* connection has been closed */
 
   return -1;  /* connection status unknown */
 }
 
+static void nss_close(struct ssl_connect_data *connssl)
+{
+  /* before the cleanup, check whether we are using a client certificate */
+  const bool client_cert = (connssl->client_nickname != NULL)
+    || (connssl->obj_clicert != NULL);
+
+  free(connssl->client_nickname);
+  connssl->client_nickname = NULL;
+
+  /* destroy all NSS objects in order to avoid failure of NSS shutdown */
+  Curl_llist_destroy(connssl->obj_list, NULL);
+  connssl->obj_list = NULL;
+  connssl->obj_clicert = NULL;
+
+  if(connssl->handle) {
+    if(client_cert)
+      /* A server might require different authentication based on the
+       * particular path being requested by the client.  To support this
+       * scenario, we must ensure that a connection will never reuse the
+       * authentication data from a previous connection. */
+      SSL_InvalidateSession(connssl->handle);
+
+    PR_Close(connssl->handle);
+    connssl->handle = NULL;
+  }
+}
+
 /*
  * This function is called when an SSL connection is closed.
  */
 void Curl_nss_close(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  struct ssl_connect_data *connssl_proxy = &conn->proxy_ssl[sockindex];
 
-  if(connssl->handle) {
+  if(connssl->handle || connssl_proxy->handle) {
     /* NSS closes the socket we previously handed to it, so we must mark it
        as closed to avoid double close */
     fake_sclose(conn->sock[sockindex]);
     conn->sock[sockindex] = CURL_SOCKET_BAD;
+  }
 
-    if((connssl->client_nickname != NULL) || (connssl->obj_clicert != NULL))
-      /* A server might require different authentication based on the
-       * particular path being requested by the client.  To support this
-       * scenario, we must ensure that a connection will never reuse the
-       * authentication data from a previous connection. */
-      SSL_InvalidateSession(connssl->handle);
-
-    free(connssl->client_nickname);
-    connssl->client_nickname = NULL;
-    /* destroy all NSS objects in order to avoid failure of NSS shutdown */
-    Curl_llist_destroy(connssl->obj_list, NULL);
-    connssl->obj_list = NULL;
-    connssl->obj_clicert = NULL;
+  if(connssl->handle)
+    /* nss_close(connssl) will transitively close also connssl_proxy->handle
+       if both are used. Clear it to avoid a double close leading to crash. */
+    connssl_proxy->handle = NULL;
 
-    PR_Close(connssl->handle);
-    connssl->handle = NULL;
-  }
+  nss_close(connssl);
+  nss_close(connssl_proxy);
 }
 
 /* return true if NSS can provide error code (and possibly msg) for the
    error */
 static bool is_nss_error(CURLcode err)
 {
@@ -1434,14 +1461,14 @@
 static Curl_send nss_send;
 
 static CURLcode nss_load_ca_certificates(struct connectdata *conn,
                                          int sockindex)
 {
   struct Curl_easy *data = conn->data;
-  const char *cafile = data->set.ssl.CAfile;
-  const char *capath = data->set.ssl.CApath;
+  const char *cafile = SSL_CONN_CONFIG(CAfile);
+  const char *capath = SSL_CONN_CONFIG(CApath);
 
   if(cafile) {
     CURLcode result = nss_load_cert(&conn->ssl[sockindex], cafile, PR_TRUE);
     if(result)
       return result;
   }
@@ -1483,19 +1510,28 @@
       capath ? capath : "none");
 
   return CURLE_OK;
 }
 
 static CURLcode nss_init_sslver(SSLVersionRange *sslver,
-                                struct Curl_easy *data)
+                                struct Curl_easy *data,
+                                struct connectdata *conn)
 {
-  switch(data->set.ssl.version) {
-  default:
+  switch(SSL_CONN_CONFIG(version)) {
   case CURL_SSLVERSION_DEFAULT:
+    /* map CURL_SSLVERSION_DEFAULT to NSS default */
+    if(SSL_VersionRangeGetDefault(ssl_variant_stream, sslver) != SECSuccess)
+      return CURLE_SSL_CONNECT_ERROR;
+    /* ... but make sure we use at least TLSv1.0 according to libcurl API */
+    if(sslver->min < SSL_LIBRARY_VERSION_TLS_1_0)
+      sslver->min = SSL_LIBRARY_VERSION_TLS_1_0;
+    return CURLE_OK;
+
   case CURL_SSLVERSION_TLSv1:
     sslver->min = SSL_LIBRARY_VERSION_TLS_1_0;
+    /* TODO: set sslver->max to SSL_LIBRARY_VERSION_TLS_1_3 once stable */
 #ifdef SSL_LIBRARY_VERSION_TLS_1_2
     sslver->max = SSL_LIBRARY_VERSION_TLS_1_2;
 #elif defined SSL_LIBRARY_VERSION_TLS_1_1
     sslver->max = SSL_LIBRARY_VERSION_TLS_1_1;
 #else
     sslver->max = SSL_LIBRARY_VERSION_TLS_1_0;
@@ -1529,12 +1565,24 @@
 #ifdef SSL_LIBRARY_VERSION_TLS_1_2
     sslver->min = SSL_LIBRARY_VERSION_TLS_1_2;
     sslver->max = SSL_LIBRARY_VERSION_TLS_1_2;
     return CURLE_OK;
 #endif
     break;
+
+  case CURL_SSLVERSION_TLSv1_3:
+#ifdef SSL_LIBRARY_VERSION_TLS_1_3
+    sslver->min = SSL_LIBRARY_VERSION_TLS_1_3;
+    sslver->max = SSL_LIBRARY_VERSION_TLS_1_3;
+    return CURLE_OK;
+#endif
+    break;
+
+  default:
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+    return CURLE_SSL_CONNECT_ERROR;
   }
 
   failf(data, "TLS minor version cannot be set");
   return CURLE_SSL_CONNECT_ERROR;
 }
 
@@ -1586,12 +1634,13 @@
   PRBool ssl_no_cache;
   PRBool ssl_cbc_random_iv;
   struct Curl_easy *data = conn->data;
   curl_socket_t sockfd = conn->sock[sockindex];
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   CURLcode result;
+  bool second_layer = FALSE;
 
   SSLVersionRange sslver = {
     SSL_LIBRARY_VERSION_TLS_1_0,  /* min */
     SSL_LIBRARY_VERSION_TLS_1_0   /* max */
   };
 
@@ -1644,83 +1693,88 @@
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_SERVER, PR_FALSE) != SECSuccess)
     goto error;
   if(SSL_OptionSet(model, SSL_HANDSHAKE_AS_CLIENT, PR_TRUE) != SECSuccess)
     goto error;
 
   /* do not use SSL cache if disabled or we are not going to verify peer */
-  ssl_no_cache = (conn->ssl_config.sessionid && data->set.ssl.verifypeer) ?
-    PR_FALSE : PR_TRUE;
+  ssl_no_cache = (data->set.general_ssl.sessionid
+                  && SSL_CONN_CONFIG(verifypeer)) ? PR_FALSE : PR_TRUE;
   if(SSL_OptionSet(model, SSL_NO_CACHE, ssl_no_cache) != SECSuccess)
     goto error;
 
   /* enable/disable the requested SSL version(s) */
-  if(nss_init_sslver(&sslver, data) != CURLE_OK)
+  if(nss_init_sslver(&sslver, data, conn) != CURLE_OK)
     goto error;
   if(SSL_VersionRangeSet(model, &sslver) != SECSuccess)
     goto error;
 
-  ssl_cbc_random_iv = !data->set.ssl_enable_beast;
+  ssl_cbc_random_iv = !SSL_SET_OPTION(enable_beast);
 #ifdef SSL_CBC_RANDOM_IV
   /* unless the user explicitly asks to allow the protocol vulnerability, we
      use the work-around */
   if(SSL_OptionSet(model, SSL_CBC_RANDOM_IV, ssl_cbc_random_iv) != SECSuccess)
     infof(data, "warning: failed to set SSL_CBC_RANDOM_IV = %d\n",
           ssl_cbc_random_iv);
 #else
   if(ssl_cbc_random_iv)
     infof(data, "warning: support for SSL_CBC_RANDOM_IV not compiled in\n");
 #endif
 
-  if(data->set.ssl.cipher_list) {
-    if(set_ciphers(data, model, data->set.ssl.cipher_list) != SECSuccess) {
+  if(SSL_CONN_CONFIG(cipher_list)) {
+    if(set_ciphers(data, model, SSL_CONN_CONFIG(cipher_list)) != SECSuccess) {
       result = CURLE_SSL_CIPHER;
       goto error;
     }
   }
 
-  if(!data->set.ssl.verifypeer && data->set.ssl.verifyhost)
+  if(!SSL_CONN_CONFIG(verifypeer) && SSL_CONN_CONFIG(verifyhost))
     infof(data, "warning: ignoring value of ssl.verifyhost\n");
 
   /* bypass the default SSL_AuthCertificate() hook in case we do not want to
    * verify peer */
   if(SSL_AuthCertificateHook(model, nss_auth_cert_hook, conn) != SECSuccess)
     goto error;
 
-  data->set.ssl.certverifyresult=0; /* not checked yet */
+  /* not checked yet */
+  if(SSL_IS_PROXY())
+    data->set.proxy_ssl.certverifyresult = 0;
+  else
+    data->set.ssl.certverifyresult = 0;
+
   if(SSL_BadCertHook(model, BadCertHandler, conn) != SECSuccess)
     goto error;
 
   if(SSL_HandshakeCallback(model, HandshakeCallback, conn) != SECSuccess)
     goto error;
 
-  if(data->set.ssl.verifypeer) {
+  if(SSL_CONN_CONFIG(verifypeer)) {
     const CURLcode rv = nss_load_ca_certificates(conn, sockindex);
     if(rv) {
       result = rv;
       goto error;
     }
   }
 
-  if(data->set.ssl.CRLfile) {
-    const CURLcode rv = nss_load_crl(data->set.ssl.CRLfile);
+  if(SSL_SET_OPTION(CRLfile)) {
+    const CURLcode rv = nss_load_crl(SSL_SET_OPTION(CRLfile));
     if(rv) {
       result = rv;
       goto error;
     }
-    infof(data, "  CRLfile: %s\n", data->set.ssl.CRLfile);
+    infof(data, "  CRLfile: %s\n", SSL_SET_OPTION(CRLfile));
   }
 
-  if(data->set.str[STRING_CERT]) {
-    char *nickname = dup_nickname(data, STRING_CERT);
+  if(SSL_SET_OPTION(cert)) {
+    char *nickname = dup_nickname(data, SSL_SET_OPTION(cert));
     if(nickname) {
       /* we are not going to use libnsspem.so to read the client cert */
       connssl->obj_clicert = NULL;
     }
     else {
-      CURLcode rv = cert_stuff(conn, sockindex, data->set.str[STRING_CERT],
-                               data->set.str[STRING_KEY]);
+      CURLcode rv = cert_stuff(conn, sockindex, SSL_SET_OPTION(cert),
+                               SSL_SET_OPTION(key));
       if(rv) {
         /* failf() is already done in cert_stuff() */
         result = rv;
         goto error;
       }
     }
@@ -1734,51 +1788,62 @@
   if(SSL_GetClientAuthDataHook(model, SelectClientCert,
                                (void *)connssl) != SECSuccess) {
     result = CURLE_SSL_CERTPROBLEM;
     goto error;
   }
 
-  /* wrap OS file descriptor by NSPR's file descriptor abstraction */
-  nspr_io = PR_ImportTCPSocket(sockfd);
-  if(!nspr_io)
-    goto error;
+  if(conn->proxy_ssl[sockindex].use) {
+    DEBUGASSERT(ssl_connection_complete == conn->proxy_ssl[sockindex].state);
+    DEBUGASSERT(conn->proxy_ssl[sockindex].handle != NULL);
+    nspr_io = conn->proxy_ssl[sockindex].handle;
+    second_layer = TRUE;
+  }
+  else {
+    /* wrap OS file descriptor by NSPR's file descriptor abstraction */
+    nspr_io = PR_ImportTCPSocket(sockfd);
+    if(!nspr_io)
+      goto error;
+  }
 
   /* create our own NSPR I/O layer */
   nspr_io_stub = PR_CreateIOLayerStub(nspr_io_identity, &nspr_io_methods);
   if(!nspr_io_stub) {
-    PR_Close(nspr_io);
+    if(!second_layer)
+      PR_Close(nspr_io);
     goto error;
   }
 
   /* make the per-connection data accessible from NSPR I/O callbacks */
   nspr_io_stub->secret = (void *)connssl;
 
   /* push our new layer to the NSPR I/O stack */
   if(PR_PushIOLayer(nspr_io, PR_TOP_IO_LAYER, nspr_io_stub) != PR_SUCCESS) {
-    PR_Close(nspr_io);
+    if(!second_layer)
+      PR_Close(nspr_io);
     PR_Close(nspr_io_stub);
     goto error;
   }
 
   /* import our model socket onto the current I/O stack */
   connssl->handle = SSL_ImportFD(model, nspr_io);
   if(!connssl->handle) {
-    PR_Close(nspr_io);
+    if(!second_layer)
+      PR_Close(nspr_io);
     goto error;
   }
 
   PR_Close(model); /* We don't need this any more */
   model = NULL;
 
   /* This is the password associated with the cert that we're using */
-  if(data->set.str[STRING_KEY_PASSWD]) {
-    SSL_SetPKCS11PinArg(connssl->handle, data->set.str[STRING_KEY_PASSWD]);
+  if(SSL_SET_OPTION(key_passwd)) {
+    SSL_SetPKCS11PinArg(connssl->handle, SSL_SET_OPTION(key_passwd));
   }
 
 #ifdef SSL_ENABLE_OCSP_STAPLING
-  if(data->set.ssl.verifystatus) {
+  if(SSL_CONN_CONFIG(verifystatus)) {
     if(SSL_OptionSet(connssl->handle, SSL_ENABLE_OCSP_STAPLING, PR_TRUE)
         != SECSuccess)
       goto error;
   }
 #endif
 
@@ -1832,17 +1897,20 @@
   /* Force handshake on next I/O */
   if(SSL_ResetHandshake(connssl->handle, /* asServer */ PR_FALSE)
       != SECSuccess)
     goto error;
 
   /* propagate hostname to the TLS layer */
-  if(SSL_SetURL(connssl->handle, conn->host.name) != SECSuccess)
+  if(SSL_SetURL(connssl->handle, SSL_IS_PROXY() ? conn->http_proxy.host.name :
+                conn->host.name) != SECSuccess)
     goto error;
 
   /* prevent NSS from re-using the session for a different hostname */
-  if(SSL_SetSockPeerID(connssl->handle, conn->host.name) != SECSuccess)
+  if(SSL_SetSockPeerID(connssl->handle, SSL_IS_PROXY() ?
+                       conn->http_proxy.host.name : conn->host.name)
+     != SECSuccess)
     goto error;
 
   return CURLE_OK;
 
 error:
   if(model)
@@ -1854,12 +1922,18 @@
 static CURLcode nss_do_connect(struct connectdata *conn, int sockindex)
 {
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   struct Curl_easy *data = conn->data;
   CURLcode result = CURLE_SSL_CONNECT_ERROR;
   PRUint32 timeout;
+  long * const certverifyresult = SSL_IS_PROXY() ?
+    &data->set.proxy_ssl.certverifyresult : &data->set.ssl.certverifyresult;
+  const char * const pinnedpubkey = SSL_IS_PROXY() ?
+              data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+              data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
+
 
   /* check timeout situation */
   const long time_left = Curl_timeleft(data, NULL, TRUE);
   if(time_left < 0L) {
     failf(data, "timed out before SSL handshake");
     result = CURLE_OPERATION_TIMEDOUT;
@@ -1869,28 +1943,28 @@
   /* Force the handshake now */
   timeout = PR_MillisecondsToInterval((PRUint32) time_left);
   if(SSL_ForceHandshakeWithTimeout(connssl->handle, timeout) != SECSuccess) {
     if(PR_GetError() == PR_WOULD_BLOCK_ERROR)
       /* blocking direction is updated by nss_update_connecting_state() */
       return CURLE_AGAIN;
-    else if(conn->data->set.ssl.certverifyresult == SSL_ERROR_BAD_CERT_DOMAIN)
+    else if(*certverifyresult == SSL_ERROR_BAD_CERT_DOMAIN)
       result = CURLE_PEER_FAILED_VERIFICATION;
-    else if(conn->data->set.ssl.certverifyresult!=0)
+    else if(*certverifyresult != 0)
       result = CURLE_SSL_CACERT;
     goto error;
   }
 
   result = display_conn_info(conn, connssl->handle);
   if(result)
     goto error;
 
-  if(data->set.str[STRING_SSL_ISSUERCERT]) {
+  if(SSL_SET_OPTION(issuercert)) {
     SECStatus ret = SECFailure;
-    char *nickname = dup_nickname(data, STRING_SSL_ISSUERCERT);
+    char *nickname = dup_nickname(data, SSL_SET_OPTION(issuercert));
     if(nickname) {
-      /* we support only nicknames in case of STRING_SSL_ISSUERCERT for now */
+      /* we support only nicknames in case of issuercert for now */
       ret = check_issuer_cert(connssl->handle, nickname);
       free(nickname);
     }
 
     if(SECFailure == ret) {
       infof(data, "SSL certificate issuer check failed\n");
@@ -1899,13 +1973,13 @@
     }
     else {
       infof(data, "SSL certificate issuer check ok\n");
     }
   }
 
-  result = cmp_peer_pubkey(connssl, data->set.str[STRING_SSL_PINNEDPUBLICKEY]);
+  result = cmp_peer_pubkey(connssl, pinnedpubkey);
   if(result)
     /* status already printed */
     goto error;
 
   return CURLE_OK;
 
@@ -2109,13 +2183,14 @@
   return TRUE;
 #else
   return FALSE;
 #endif
 }
 
-bool Curl_nss_false_start(void) {
+bool Curl_nss_false_start(void)
+{
 #if NSSVERNUM >= 0x030f04 /* 3.15.4 */
   return TRUE;
 #else
   return FALSE;
 #endif
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/nssg.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/nssg.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/nssg.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/nssg.h	2016-12-19 15:27:56.000000000 +0800
@@ -62,12 +62,15 @@
                      size_t sha256len);
 
 bool Curl_nss_cert_status_request(void);
 
 bool Curl_nss_false_start(void);
 
+/* Support HTTPS-proxy */
+#define HTTPS_PROXY_SUPPORT 1
+
 /* Set the API backend definition to NSS */
 #define CURL_SSL_BACKEND CURLSSLBACKEND_NSS
 
 /* this backend supports the CAPATH option */
 #define have_curlssl_ca_path 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/openssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/openssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/openssl.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/openssl.c	2016-12-19 15:27:56.000000000 +0800
@@ -173,54 +173,49 @@
     }
   }
   return 0;
 }
 
 /*
- * rand_enough() is a function that returns TRUE if we have seeded the random
- * engine properly. We use some preprocessor magic to provide a seed_enough()
- * macro to use, just to prevent a compiler warning on this function if we
- * pass in an argument that is never used.
+ * rand_enough() returns TRUE if we have seeded the random engine properly.
  */
-
-#ifdef HAVE_RAND_STATUS
-#define seed_enough(x) rand_enough()
 static bool rand_enough(void)
 {
   return (0 != RAND_status()) ? TRUE : FALSE;
 }
-#else
-#define seed_enough(x) rand_enough(x)
-static bool rand_enough(int nread)
-{
-  /* this is a very silly decision to make */
-  return (nread > 500) ? TRUE : FALSE;
-}
-#endif
 
-static int ossl_seed(struct Curl_easy *data)
+static CURLcode Curl_ossl_seed(struct Curl_easy *data)
 {
+  /* we have the "SSL is seeded" boolean static to prevent multiple
+     time-consuming seedings in vain */
+  static bool ssl_seeded = FALSE;
   char *buf = data->state.buffer; /* point to the big buffer */
   int nread=0;
 
-  /* Q: should we add support for a random file name as a libcurl option?
-     A: Yes, it is here */
+  if(ssl_seeded)
+    return CURLE_OK;
+
+  if(rand_enough()) {
+    /* OpenSSL 1.1.0+ will return here */
+    ssl_seeded = TRUE;
+    return CURLE_OK;
+  }
 
 #ifndef RANDOM_FILE
   /* if RANDOM_FILE isn't defined, we only perform this if an option tells
      us to! */
-  if(data->set.ssl.random_file)
+  if(data->set.str[STRING_SSL_RANDOM_FILE])
 #define RANDOM_FILE "" /* doesn't matter won't be used */
 #endif
   {
     /* let the option override the define */
     nread += RAND_load_file((data->set.str[STRING_SSL_RANDOM_FILE]?
                              data->set.str[STRING_SSL_RANDOM_FILE]:
                              RANDOM_FILE),
                             RAND_LOAD_LENGTH);
-    if(seed_enough(nread))
+    if(rand_enough())
       return nread;
   }
 
 #if defined(HAVE_RAND_EGD)
   /* only available in OpenSSL 0.9.5 and later */
   /* EGD_SOCKET is set at configure time or not at all */
@@ -234,52 +229,40 @@
     /* If there's an option and a define, the option overrides the
        define */
     int ret = RAND_egd(data->set.str[STRING_SSL_EGDSOCKET]?
                        data->set.str[STRING_SSL_EGDSOCKET]:EGD_SOCKET);
     if(-1 != ret) {
       nread += ret;
-      if(seed_enough(nread))
+      if(rand_enough())
         return nread;
     }
   }
 #endif
 
   /* If we get here, it means we need to seed the PRNG using a "silly"
      approach! */
   do {
     unsigned char randb[64];
     int len = sizeof(randb);
-    RAND_bytes(randb, len);
+    if(!RAND_bytes(randb, len))
+      break;
     RAND_add(randb, len, (len >> 1));
-  } while(!RAND_status());
+  } while(!rand_enough());
 
   /* generates a default path for the random seed file */
   buf[0]=0; /* blank it first */
   RAND_file_name(buf, BUFSIZE);
   if(buf[0]) {
     /* we got a file name to try */
     nread += RAND_load_file(buf, RAND_LOAD_LENGTH);
-    if(seed_enough(nread))
+    if(rand_enough())
       return nread;
   }
 
   infof(data, "libcurl is now using a weak random seed!\n");
-  return nread;
-}
-
-static void Curl_ossl_seed(struct Curl_easy *data)
-{
-  /* we have the "SSL is seeded" boolean static to prevent multiple
-     time-consuming seedings in vain */
-  static bool ssl_seeded = FALSE;
-
-  if(!ssl_seeded || data->set.str[STRING_SSL_RANDOM_FILE] ||
-     data->set.str[STRING_SSL_EGDSOCKET]) {
-    ossl_seed(data);
-    ssl_seeded = TRUE;
-  }
+  return CURLE_SSL_CONNECT_ERROR; /* confusing error code */
 }
 
 #ifndef SSL_FILETYPE_ENGINE
 #define SSL_FILETYPE_ENGINE 42
 #endif
 #ifndef SSL_FILETYPE_PKCS12
@@ -309,13 +292,13 @@
 static int ssl_ui_reader(UI *ui, UI_STRING *uis)
 {
   const char *password;
   switch(UI_get_string_type(uis)) {
   case UIT_PROMPT:
   case UIT_VERIFY:
-    password = (const char*)UI_get0_user_data(ui);
+    password = (const char *)UI_get0_user_data(ui);
     if(password && (UI_get_input_flags(uis) & UI_INPUT_FLAG_DEFAULT_PWD)) {
       UI_set_result(ui, uis, password);
       return 1;
     }
   default:
     break;
@@ -345,27 +328,27 @@
 static
 int cert_stuff(struct connectdata *conn,
                SSL_CTX* ctx,
                char *cert_file,
                const char *cert_type,
                char *key_file,
-               const char *key_type)
+               const char *key_type,
+               char *key_passwd)
 {
   struct Curl_easy *data = conn->data;
 
   int file_type = do_file_type(cert_type);
 
   if(cert_file || (file_type == SSL_FILETYPE_ENGINE)) {
     SSL *ssl;
     X509 *x509;
     int cert_done = 0;
 
-    if(data->set.str[STRING_KEY_PASSWD]) {
+    if(key_passwd) {
       /* set the password in the callback userdata */
-      SSL_CTX_set_default_passwd_cb_userdata(ctx,
-                                             data->set.str[STRING_KEY_PASSWD]);
+      SSL_CTX_set_default_passwd_cb_userdata(ctx, key_passwd);
       /* Set passwd callback: */
       SSL_CTX_set_default_passwd_cb(ctx, passwd_callback);
     }
 
 
     switch(file_type) {
@@ -470,13 +453,13 @@
         failf(data, "error reading PKCS12 file '%s'", cert_file);
         return 0;
       }
 
       PKCS12_PBE_add();
 
-      if(!PKCS12_parse(p12, data->set.str[STRING_KEY_PASSWD], &pri, &x509,
+      if(!PKCS12_parse(p12, key_passwd, &pri, &x509,
                        &ca)) {
         failf(data,
               "could not parse PKCS12 file, check password, " OSSL_PACKAGE
               " error %s",
               ERR_error_string(ERR_get_error(), NULL) );
         PKCS12_free(p12);
@@ -568,13 +551,13 @@
     case SSL_FILETYPE_ENGINE:
 #ifdef HAVE_OPENSSL_ENGINE_H
       {                         /* XXXX still needs some work */
         EVP_PKEY *priv_key = NULL;
         if(data->state.engine) {
           UI_METHOD *ui_method =
-            UI_create_method((char *)"cURL user interface");
+            UI_create_method((char *)"curl user interface");
           if(!ui_method) {
             failf(data, "unable do create " OSSL_PACKAGE
                   " user-interface method");
             return 0;
           }
           UI_method_set_opener(ui_method, UI_method_get_opener(UI_OpenSSL()));
@@ -582,13 +565,13 @@
           UI_method_set_reader(ui_method, ssl_ui_reader);
           UI_method_set_writer(ui_method, ssl_ui_writer);
           /* the typecast below was added to please mingw32 */
           priv_key = (EVP_PKEY *)
             ENGINE_load_private_key(data->state.engine, key_file,
                                     ui_method,
-                                    data->set.str[STRING_KEY_PASSWD]);
+                                    key_passwd);
           UI_destroy_method(ui_method);
           if(!priv_key) {
             failf(data, "failed to load private key from crypto engine");
             return 0;
           }
           if(SSL_CTX_use_PrivateKey(ctx, priv_key) != 1) {
@@ -913,33 +896,37 @@
 #endif
   (void) data;
   return list;
 }
 
 
-/*
- * This function is called when an SSL connection is closed.
- */
-void Curl_ossl_close(struct connectdata *conn, int sockindex)
+static void ossl_close(struct ssl_connect_data *connssl)
 {
-  struct ssl_connect_data *connssl = &conn->ssl[sockindex];
-
   if(connssl->handle) {
     (void)SSL_shutdown(connssl->handle);
     SSL_set_connect_state(connssl->handle);
 
-    SSL_free (connssl->handle);
+    SSL_free(connssl->handle);
     connssl->handle = NULL;
   }
   if(connssl->ctx) {
-    SSL_CTX_free (connssl->ctx);
+    SSL_CTX_free(connssl->ctx);
     connssl->ctx = NULL;
   }
 }
 
 /*
+ * This function is called when an SSL connection is closed.
+ */
+void Curl_ossl_close(struct connectdata *conn, int sockindex)
+{
+  ossl_close(&conn->ssl[sockindex]);
+  ossl_close(&conn->proxy_ssl[sockindex]);
+}
+
+/*
  * This function is called to shut down the SSL layer but keep the
  * socket open (CCC - Clear Command Channel)
  */
 int Curl_ossl_shutdown(struct connectdata *conn, int sockindex)
 {
   int retval = 0;
@@ -1028,13 +1015,13 @@
               "SSL_RECEIVED__SHUTDOWN\n");
         break;
       }
 #endif
     }
 
-    SSL_free (connssl->handle);
+    SSL_free(connssl->handle);
     connssl->handle = NULL;
   }
   return retval;
 }
 
 void Curl_ossl_session_free(void *ptr)
@@ -1104,22 +1091,26 @@
 #else
   struct in_addr addr;
 #endif
   CURLcode result = CURLE_OK;
   bool dNSName = FALSE; /* if a dNSName field exists in the cert */
   bool iPAddress = FALSE; /* if a iPAddress field exists in the cert */
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const char * const dispname = SSL_IS_PROXY() ?
+    conn->http_proxy.host.dispname : conn->host.dispname;
 
 #ifdef ENABLE_IPV6
   if(conn->bits.ipv6_ip &&
-     Curl_inet_pton(AF_INET6, conn->host.name, &addr)) {
+     Curl_inet_pton(AF_INET6, hostname, &addr)) {
     target = GEN_IPADD;
     addrlen = sizeof(struct in6_addr);
   }
   else
 #endif
-    if(Curl_inet_pton(AF_INET, conn->host.name, &addr)) {
+    if(Curl_inet_pton(AF_INET, hostname, &addr)) {
       target = GEN_IPADD;
       addrlen = sizeof(struct in_addr);
     }
 
   /* get a "list" of alternative names */
   altnames = X509_get_ext_d2i(server_cert, NID_subject_alt_name, NULL, NULL);
@@ -1162,28 +1153,28 @@
              "I checked the 0.9.6 and 0.9.8 sources before my patch and
              it always 0-terminates an IA5String."
           */
           if((altlen == strlen(altptr)) &&
              /* if this isn't true, there was an embedded zero in the name
                 string and we cannot match it. */
-             Curl_cert_hostcheck(altptr, conn->host.name)) {
+             Curl_cert_hostcheck(altptr, hostname)) {
             dnsmatched = TRUE;
             infof(data,
                   " subjectAltName: host \"%s\" matched cert's \"%s\"\n",
-                  conn->host.dispname, altptr);
+                  dispname, altptr);
           }
           break;
 
         case GEN_IPADD: /* IP address comparison */
           /* compare alternative IP address if the data chunk is the same size
              our server IP address is */
           if((altlen == addrlen) && !memcmp(altptr, &addr, altlen)) {
             ipmatched = TRUE;
             infof(data,
                   " subjectAltName: host \"%s\" matched cert's IP address!\n",
-                  conn->host.dispname);
+                  dispname);
           }
           break;
         }
       }
     }
     GENERAL_NAMES_free(altnames);
@@ -1193,15 +1184,15 @@
   }
 
   if(matched)
     /* an alternative name matched */
     ;
   else if(dNSName || iPAddress) {
-    infof(data, " subjectAltName does not match %s\n", conn->host.dispname);
+    infof(data, " subjectAltName does not match %s\n", dispname);
     failf(data, "SSL: no alternative certificate subject name matches "
-          "target host name '%s'", conn->host.dispname);
+          "target host name '%s'", dispname);
     result = CURLE_PEER_FAILED_VERIFICATION;
   }
   else {
     /* we have to look to the last occurrence of a commonName in the
        distinguished one to get the most significant one. */
     int j, i=-1;
@@ -1269,15 +1260,15 @@
       ;
     else if(!peer_CN) {
       failf(data,
             "SSL: unable to obtain common name from peer certificate");
       result = CURLE_PEER_FAILED_VERIFICATION;
     }
-    else if(!Curl_cert_hostcheck((const char *)peer_CN, conn->host.name)) {
+    else if(!Curl_cert_hostcheck((const char *)peer_CN, hostname)) {
       failf(data, "SSL: certificate subject name '%s' does not match "
-            "target host name '%s'", peer_CN, conn->host.dispname);
+            "target host name '%s'", peer_CN, dispname);
       result = CURLE_PEER_FAILED_VERIFICATION;
     }
     else {
       infof(data, " common name: %s (matched)\n", peer_CN);
     }
     if(peer_CN)
@@ -1422,13 +1413,13 @@
 #ifdef SSL_CTRL_SET_MSG_CALLBACK
 
 static const char *ssl_msg_type(int ssl_ver, int msg)
 {
 #ifdef SSL2_VERSION_MAJOR
   if(ssl_ver == SSL2_VERSION_MAJOR) {
-    switch (msg) {
+    switch(msg) {
       case SSL2_MT_ERROR:
         return "Error";
       case SSL2_MT_CLIENT_HELLO:
         return "Client hello";
       case SSL2_MT_CLIENT_MASTER_KEY:
         return "Client key";
@@ -1446,13 +1437,13 @@
         return "Client CERT";
     }
   }
   else
 #endif
   if(ssl_ver == SSL3_VERSION_MAJOR) {
-    switch (msg) {
+    switch(msg) {
       case SSL3_MT_HELLO_REQUEST:
         return "Hello request";
       case SSL3_MT_CLIENT_HELLO:
         return "Client hello";
       case SSL3_MT_SERVER_HELLO:
         return "Server hello";
@@ -1546,12 +1537,17 @@
 #endif
 #ifdef TLS1_2_VERSION
   case TLS1_2_VERSION:
     verstr = "TLSv1.2";
     break;
 #endif
+#ifdef TLS1_3_VERSION
+  case TLS1_3_VERSION:
+    verstr = "TLSv1.3";
+    break;
+#endif
   case 0:
     break;
   default:
     snprintf(unknown, sizeof(unknown), "(%x)", ssl_ver);
     verstr = unknown;
     break;
@@ -1568,13 +1564,13 @@
      */
     if(ssl_ver == SSL3_VERSION_MAJOR && content_type)
       tls_rt_name = tls_rt_type(content_type);
     else
       tls_rt_name = "";
 
-    msg_type = *(char*)buf;
+    msg_type = *(char *)buf;
     msg_name = ssl_msg_type(ssl_ver, msg_type);
 
     txt_len = snprintf(ssl_buf, sizeof(ssl_buf), "%s (%s), %s, %s (%d):\n",
                        verstr, direction?"OUT":"IN",
                        tls_rt_name, msg_name, msg_type);
     Curl_debug(data, CURLINFO_TEXT, ssl_buf, (size_t)txt_len, NULL);
@@ -1674,12 +1670,16 @@
 get_ssl_version_txt(SSL *ssl)
 {
   if(!ssl)
     return "";
 
   switch(SSL_version(ssl)) {
+#ifdef TLS1_3_VERSION
+  case TLS1_3_VERSION:
+    return "TLSv1.3";
+#endif
 #if OPENSSL_VERSION_NUMBER >= 0x1000100FL
   case TLS1_2_VERSION:
     return "TLSv1.2";
   case TLS1_1_VERSION:
     return "TLSv1.1";
 #endif
@@ -1708,29 +1708,45 @@
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
 #endif
+  long * const certverifyresult = SSL_IS_PROXY() ?
+    &data->set.proxy_ssl.certverifyresult : &data->set.ssl.certverifyresult;
+  const long int ssl_version = SSL_CONN_CONFIG(version);
+#ifdef USE_TLS_SRP
+  const enum CURL_TLSAUTH ssl_authtype = SSL_SET_OPTION(authtype);
+#endif
+  char * const ssl_cert = SSL_SET_OPTION(cert);
+  const char * const ssl_cert_type = SSL_SET_OPTION(cert_type);
+  const char * const ssl_cafile = SSL_CONN_CONFIG(CAfile);
+  const char * const ssl_capath = SSL_CONN_CONFIG(CApath);
+  const bool verifypeer = SSL_CONN_CONFIG(verifypeer);
+  const char * const ssl_crlfile = SSL_SET_OPTION(CRLfile);
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 
   DEBUGASSERT(ssl_connect_1 == connssl->connecting_state);
 
   /* Make funny stuff to get random input */
-  Curl_ossl_seed(data);
+  result = Curl_ossl_seed(data);
+  if(result)
+    return result;
 
-  data->set.ssl.certverifyresult = !X509_V_OK;
+  *certverifyresult = !X509_V_OK;
 
   /* check to see if we've been told to use an explicit SSL/TLS version */
 
-  switch(data->set.ssl.version) {
-  default:
+  switch(ssl_version) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
   case CURL_SSLVERSION_TLSv1_0:
   case CURL_SSLVERSION_TLSv1_1:
   case CURL_SSLVERSION_TLSv1_2:
+  case CURL_SSLVERSION_TLSv1_3:
     /* it will be handled later with the context options */
 #if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && \
     !defined(LIBRESSL_VERSION_NUMBER)
     req_method = TLS_client_method();
 #else
     req_method = SSLv23_client_method();
@@ -1740,32 +1756,35 @@
   case CURL_SSLVERSION_SSLv2:
 #ifdef OPENSSL_NO_SSL2
     failf(data, OSSL_PACKAGE " was built without SSLv2 support");
     return CURLE_NOT_BUILT_IN;
 #else
 #ifdef USE_TLS_SRP
-    if(data->set.ssl.authtype == CURL_TLSAUTH_SRP)
+    if(ssl_authtype == CURL_TLSAUTH_SRP)
       return CURLE_SSL_CONNECT_ERROR;
 #endif
     req_method = SSLv2_client_method();
     use_sni(FALSE);
     break;
 #endif
   case CURL_SSLVERSION_SSLv3:
 #ifdef OPENSSL_NO_SSL3_METHOD
     failf(data, OSSL_PACKAGE " was built without SSLv3 support");
     return CURLE_NOT_BUILT_IN;
 #else
 #ifdef USE_TLS_SRP
-    if(data->set.ssl.authtype == CURL_TLSAUTH_SRP)
+    if(ssl_authtype == CURL_TLSAUTH_SRP)
       return CURLE_SSL_CONNECT_ERROR;
 #endif
     req_method = SSLv3_client_method();
     use_sni(FALSE);
     break;
 #endif
+  default:
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+    return CURLE_SSL_CONNECT_ERROR;
   }
 
   if(connssl->ctx)
     SSL_CTX_free(connssl->ctx);
   connssl->ctx = SSL_CTX_new(req_method);
 
@@ -1838,28 +1857,31 @@
   ctx_options &= ~SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG;
 #endif
 
 #ifdef SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
   /* unless the user explicitly ask to allow the protocol vulnerability we
      use the work-around */
-  if(!conn->data->set.ssl_enable_beast)
+  if(!SSL_SET_OPTION(enable_beast))
     ctx_options &= ~SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS;
 #endif
 
-  switch(data->set.ssl.version) {
+  switch(ssl_version) {
   case CURL_SSLVERSION_SSLv3:
 #ifdef USE_TLS_SRP
-    if(data->set.ssl.authtype == CURL_TLSAUTH_SRP) {
+    if(ssl_authtype == CURL_TLSAUTH_SRP) {
       infof(data, "Set version TLSv1.x for SRP authorisation\n");
     }
 #endif
     ctx_options |= SSL_OP_NO_SSLv2;
     ctx_options |= SSL_OP_NO_TLSv1;
 #if OPENSSL_VERSION_NUMBER >= 0x1000100FL
     ctx_options |= SSL_OP_NO_TLSv1_1;
     ctx_options |= SSL_OP_NO_TLSv1_2;
+#ifdef TLS1_3_VERSION
+    ctx_options |= SSL_OP_NO_TLSv1_3;
+#endif
 #endif
     break;
 
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     ctx_options |= SSL_OP_NO_SSLv2;
@@ -1869,44 +1891,81 @@
   case CURL_SSLVERSION_TLSv1_0:
     ctx_options |= SSL_OP_NO_SSLv2;
     ctx_options |= SSL_OP_NO_SSLv3;
 #if OPENSSL_VERSION_NUMBER >= 0x1000100FL
     ctx_options |= SSL_OP_NO_TLSv1_1;
     ctx_options |= SSL_OP_NO_TLSv1_2;
+#ifdef TLS1_3_VERSION
+    ctx_options |= SSL_OP_NO_TLSv1_3;
+#endif
 #endif
     break;
 
-#if OPENSSL_VERSION_NUMBER >= 0x1000100FL
   case CURL_SSLVERSION_TLSv1_1:
+#if OPENSSL_VERSION_NUMBER >= 0x1000100FL
     ctx_options |= SSL_OP_NO_SSLv2;
     ctx_options |= SSL_OP_NO_SSLv3;
     ctx_options |= SSL_OP_NO_TLSv1;
     ctx_options |= SSL_OP_NO_TLSv1_2;
+#ifdef TLS1_3_VERSION
+    ctx_options |= SSL_OP_NO_TLSv1_3;
+#endif
     break;
+#else
+    failf(data, OSSL_PACKAGE " was built without TLS 1.1 support");
+    return CURLE_NOT_BUILT_IN;
+#endif
 
   case CURL_SSLVERSION_TLSv1_2:
+#if OPENSSL_VERSION_NUMBER >= 0x1000100FL
     ctx_options |= SSL_OP_NO_SSLv2;
     ctx_options |= SSL_OP_NO_SSLv3;
     ctx_options |= SSL_OP_NO_TLSv1;
     ctx_options |= SSL_OP_NO_TLSv1_1;
+#ifdef TLS1_3_VERSION
+    ctx_options |= SSL_OP_NO_TLSv1_3;
+#endif
     break;
+#else
+    failf(data, OSSL_PACKAGE " was built without TLS 1.2 support");
+    return CURLE_NOT_BUILT_IN;
+#endif
+
+  case CURL_SSLVERSION_TLSv1_3:
+#ifdef TLS1_3_VERSION
+    SSL_CTX_set_max_proto_version(connssl->ctx, TLS1_3_VERSION);
+    ctx_options |= SSL_OP_NO_SSLv2;
+    ctx_options |= SSL_OP_NO_SSLv3;
+    ctx_options |= SSL_OP_NO_TLSv1;
+    ctx_options |= SSL_OP_NO_TLSv1_1;
+    ctx_options |= SSL_OP_NO_TLSv1_2;
+    break;
+#else
+    failf(data, OSSL_PACKAGE " was built without TLS 1.3 support");
+    return CURLE_NOT_BUILT_IN;
 #endif
 
-#ifndef OPENSSL_NO_SSL2
   case CURL_SSLVERSION_SSLv2:
+#ifndef OPENSSL_NO_SSL2
     ctx_options |= SSL_OP_NO_SSLv3;
     ctx_options |= SSL_OP_NO_TLSv1;
 #if OPENSSL_VERSION_NUMBER >= 0x1000100FL
     ctx_options |= SSL_OP_NO_TLSv1_1;
     ctx_options |= SSL_OP_NO_TLSv1_2;
+#ifdef TLS1_3_VERSION
+    ctx_options |= SSL_OP_NO_TLSv1_3;
+#endif
 #endif
     break;
+#else
+    failf(data, OSSL_PACKAGE " was built without SSLv2 support");
+    return CURLE_NOT_BUILT_IN;
 #endif
 
   default:
-    failf(data, "Unsupported SSL protocol version");
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
   SSL_CTX_set_options(connssl->ctx, ctx_options);
 
 #ifdef HAS_NPN
@@ -1939,69 +1998,65 @@
      * format
      */
     SSL_CTX_set_alpn_protos(connssl->ctx, protocols, cur);
   }
 #endif
 
-  if(data->set.str[STRING_CERT] || data->set.str[STRING_CERT_TYPE]) {
-    if(!cert_stuff(conn,
-                   connssl->ctx,
-                   data->set.str[STRING_CERT],
-                   data->set.str[STRING_CERT_TYPE],
-                   data->set.str[STRING_KEY],
-                   data->set.str[STRING_KEY_TYPE])) {
+  if(ssl_cert || ssl_cert_type) {
+    if(!cert_stuff(conn, connssl->ctx, ssl_cert, ssl_cert_type,
+                   SSL_SET_OPTION(key), SSL_SET_OPTION(key_type),
+                   SSL_SET_OPTION(key_passwd))) {
       /* failf() is already done in cert_stuff() */
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
-  ciphers = data->set.str[STRING_SSL_CIPHER_LIST];
+  ciphers = SSL_CONN_CONFIG(cipher_list);
   if(!ciphers)
     ciphers = (char *)DEFAULT_CIPHER_SELECTION;
   if(!SSL_CTX_set_cipher_list(connssl->ctx, ciphers)) {
     failf(data, "failed setting cipher list: %s", ciphers);
     return CURLE_SSL_CIPHER;
   }
   infof(data, "Cipher selection: %s\n", ciphers);
 
 #ifdef USE_TLS_SRP
-  if(data->set.ssl.authtype == CURL_TLSAUTH_SRP) {
-    infof(data, "Using TLS-SRP username: %s\n", data->set.ssl.username);
+  if(ssl_authtype == CURL_TLSAUTH_SRP) {
+    char * const ssl_username = SSL_SET_OPTION(username);
+
+    infof(data, "Using TLS-SRP username: %s\n", ssl_username);
 
-    if(!SSL_CTX_set_srp_username(connssl->ctx, data->set.ssl.username)) {
+    if(!SSL_CTX_set_srp_username(connssl->ctx, ssl_username)) {
       failf(data, "Unable to set SRP user name");
       return CURLE_BAD_FUNCTION_ARGUMENT;
     }
-    if(!SSL_CTX_set_srp_password(connssl->ctx, data->set.ssl.password)) {
+    if(!SSL_CTX_set_srp_password(connssl->ctx, SSL_SET_OPTION(password))) {
       failf(data, "failed setting SRP password");
       return CURLE_BAD_FUNCTION_ARGUMENT;
     }
-    if(!data->set.str[STRING_SSL_CIPHER_LIST]) {
+    if(!SSL_CONN_CONFIG(cipher_list)) {
       infof(data, "Setting cipher list SRP\n");
 
       if(!SSL_CTX_set_cipher_list(connssl->ctx, "SRP")) {
         failf(data, "failed setting SRP cipher list");
         return CURLE_SSL_CIPHER;
       }
     }
   }
 #endif
-  if(data->set.str[STRING_SSL_CAFILE] || data->set.str[STRING_SSL_CAPATH]) {
+
+  if(ssl_cafile || ssl_capath) {
     /* tell SSL where to find CA certificates that are used to verify
        the servers certificate. */
-    if(!SSL_CTX_load_verify_locations(connssl->ctx,
-                                       data->set.str[STRING_SSL_CAFILE],
-                                       data->set.str[STRING_SSL_CAPATH])) {
-      if(data->set.ssl.verifypeer) {
+    if(!SSL_CTX_load_verify_locations(connssl->ctx, ssl_cafile, ssl_capath)) {
+      if(verifypeer) {
         /* Fail if we insist on successfully verifying the server. */
         failf(data, "error setting certificate verify locations:\n"
               "  CAfile: %s\n  CApath: %s",
-              data->set.str[STRING_SSL_CAFILE]?
-              data->set.str[STRING_SSL_CAFILE]: "none",
-              data->set.str[STRING_SSL_CAPATH]?
-              data->set.str[STRING_SSL_CAPATH] : "none");
+              ssl_cafile ? ssl_cafile : "none",
+              ssl_capath ? ssl_capath : "none");
         return CURLE_SSL_CACERT_BADFILE;
       }
       else {
         /* Just continue with a warning if no strict  certificate verification
            is required. */
         infof(data, "error setting certificate verify locations,"
@@ -2012,69 +2067,62 @@
       /* Everything is fine. */
       infof(data, "successfully set certificate verify locations:\n");
     }
     infof(data,
           "  CAfile: %s\n"
           "  CApath: %s\n",
-          data->set.str[STRING_SSL_CAFILE] ? data->set.str[STRING_SSL_CAFILE]:
-          "none",
-          data->set.str[STRING_SSL_CAPATH] ? data->set.str[STRING_SSL_CAPATH]:
-          "none");
+          ssl_cafile ? ssl_cafile : "none",
+          ssl_capath ? ssl_capath : "none");
   }
 #ifdef CURL_CA_FALLBACK
-  else if(data->set.ssl.verifypeer) {
+  else if(verifypeer) {
     /* verfying the peer without any CA certificates won't
        work so use openssl's built in default as fallback */
     SSL_CTX_set_default_verify_paths(connssl->ctx);
   }
 #endif
 
-  if(data->set.str[STRING_SSL_CRLFILE]) {
+  if(ssl_crlfile) {
     /* tell SSL where to find CRL file that is used to check certificate
      * revocation */
     lookup=X509_STORE_add_lookup(SSL_CTX_get_cert_store(connssl->ctx),
                                  X509_LOOKUP_file());
     if(!lookup ||
-       (!X509_load_crl_file(lookup, data->set.str[STRING_SSL_CRLFILE],
-                            X509_FILETYPE_PEM)) ) {
-      failf(data, "error loading CRL file: %s",
-            data->set.str[STRING_SSL_CRLFILE]);
+       (!X509_load_crl_file(lookup, ssl_crlfile, X509_FILETYPE_PEM)) ) {
+      failf(data, "error loading CRL file: %s", ssl_crlfile);
       return CURLE_SSL_CRL_BADFILE;
     }
     else {
       /* Everything is fine. */
       infof(data, "successfully load CRL file:\n");
       X509_STORE_set_flags(SSL_CTX_get_cert_store(connssl->ctx),
                            X509_V_FLAG_CRL_CHECK|X509_V_FLAG_CRL_CHECK_ALL);
     }
-    infof(data,
-          "  CRLfile: %s\n", data->set.str[STRING_SSL_CRLFILE] ?
-          data->set.str[STRING_SSL_CRLFILE]: "none");
+    infof(data, "  CRLfile: %s\n", ssl_crlfile);
   }
 
   /* Try building a chain using issuers in the trusted store first to avoid
   problems with server-sent legacy intermediates.
   Newer versions of OpenSSL do alternate chain checking by default which
   gives us the same fix without as much of a performance hit (slight), so we
   prefer that if available.
   https://rt.openssl.org/Ticket/Display.html?id=3621&user=guest&pass=guest
   */
 #if defined(X509_V_FLAG_TRUSTED_FIRST) && !defined(X509_V_FLAG_NO_ALT_CHAINS)
-  if(data->set.ssl.verifypeer) {
+  if(verifypeer) {
     X509_STORE_set_flags(SSL_CTX_get_cert_store(connssl->ctx),
                          X509_V_FLAG_TRUSTED_FIRST);
   }
 #endif
 
   /* SSL always tries to verify the peer, this only says whether it should
    * fail to connect if the verification fails, or if it should continue
    * anyway. In the latter case the result of the verification is checked with
    * SSL_get_verify_result() below. */
   SSL_CTX_set_verify(connssl->ctx,
-                     data->set.ssl.verifypeer?SSL_VERIFY_PEER:SSL_VERIFY_NONE,
-                     NULL);
+                     verifypeer ? SSL_VERIFY_PEER : SSL_VERIFY_NONE, NULL);
 
   /* give application a chance to interfere with SSL set up. */
   if(data->set.ssl.fsslctx) {
     result = (*data->set.ssl.fsslctx)(data, connssl->ctx,
                                       data->set.ssl.fsslctxp);
     if(result) {
@@ -2091,13 +2139,13 @@
     failf(data, "SSL: couldn't create a context (handle)!");
     return CURLE_OUT_OF_MEMORY;
   }
 
 #if (OPENSSL_VERSION_NUMBER >= 0x0090808fL) && !defined(OPENSSL_NO_TLSEXT) && \
     !defined(OPENSSL_NO_OCSP)
-  if(data->set.ssl.verifystatus)
+  if(SSL_CONN_CONFIG(verifystatus))
     SSL_set_tlsext_status_type(connssl->handle, TLSEXT_STATUSTYPE_ocsp);
 #endif
 
   SSL_set_connect_state(connssl->handle);
 
   connssl->server_cert = 0x0;
@@ -2098,45 +2146,52 @@
     SSL_set_tlsext_status_type(connssl->handle, TLSEXT_STATUSTYPE_ocsp);
 #endif
 
   SSL_set_connect_state(connssl->handle);
 
   connssl->server_cert = 0x0;
-
 #ifdef SSL_CTRL_SET_TLSEXT_HOSTNAME
-  if((0 == Curl_inet_pton(AF_INET, conn->host.name, &addr)) &&
+  if((0 == Curl_inet_pton(AF_INET, hostname, &addr)) &&
 #ifdef ENABLE_IPV6
-     (0 == Curl_inet_pton(AF_INET6, conn->host.name, &addr)) &&
+     (0 == Curl_inet_pton(AF_INET6, hostname, &addr)) &&
 #endif
      sni &&
-     !SSL_set_tlsext_host_name(connssl->handle, conn->host.name))
+     !SSL_set_tlsext_host_name(connssl->handle, hostname))
     infof(data, "WARNING: failed to configure server name indication (SNI) "
           "TLS extension\n");
 #endif
 
   /* Check if there's a cached ID we can/should use here! */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     void *ssl_sessionid = NULL;
 
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL)) {
+    if(!Curl_ssl_getsessionid(conn, &ssl_sessionid, NULL, sockindex)) {
       /* we got a session id, use it! */
       if(!SSL_set_session(connssl->handle, ssl_sessionid)) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "SSL: SSL_set_session failed: %s",
               ERR_error_string(ERR_get_error(), NULL));
         return CURLE_SSL_CONNECT_ERROR;
       }
       /* Informational message */
-      infof (data, "SSL re-using session ID\n");
+      infof(data, "SSL re-using session ID\n");
     }
     Curl_ssl_sessionid_unlock(conn);
   }
 
-  /* pass the raw socket into the SSL layers */
-  if(!SSL_set_fd(connssl->handle, (int)sockfd)) {
+  if(conn->proxy_ssl[sockindex].use) {
+    BIO *const bio = BIO_new(BIO_f_ssl());
+    DEBUGASSERT(ssl_connection_complete == conn->proxy_ssl[sockindex].state);
+    DEBUGASSERT(conn->proxy_ssl[sockindex].handle != NULL);
+    DEBUGASSERT(bio != NULL);
+    BIO_set_ssl(bio, conn->proxy_ssl[sockindex].handle, FALSE);
+    SSL_set_bio(connssl->handle, bio, bio);
+  }
+  else if(!SSL_set_fd(connssl->handle, (int)sockfd)) {
+    /* pass the raw socket into the SSL layers */
     failf(data, "SSL: SSL_set_fd failed: %s",
           ERR_error_string(ERR_get_error(), NULL));
     return CURLE_SSL_CONNECT_ERROR;
   }
 
   connssl->connecting_state = ssl_connect_2;
@@ -2146,15 +2201,17 @@
 
 static CURLcode ossl_connect_step2(struct connectdata *conn, int sockindex)
 {
   struct Curl_easy *data = conn->data;
   int err;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  long * const certverifyresult = SSL_IS_PROXY() ?
+    &data->set.proxy_ssl.certverifyresult : &data->set.ssl.certverifyresult;
   DEBUGASSERT(ssl_connect_2 == connssl->connecting_state
-             || ssl_connect_2_reading == connssl->connecting_state
-             || ssl_connect_2_writing == connssl->connecting_state);
+              || ssl_connect_2_reading == connssl->connecting_state
+              || ssl_connect_2_writing == connssl->connecting_state);
 
   ERR_clear_error();
 
   err = SSL_connect(connssl->handle);
 
   /* 1  is fine
@@ -2195,13 +2252,13 @@
       if((lib == ERR_LIB_SSL) &&
          (reason == SSL_R_CERTIFICATE_VERIFY_FAILED)) {
         result = CURLE_SSL_CACERT;
 
         lerr = SSL_get_verify_result(connssl->handle);
         if(lerr != X509_V_OK) {
-          data->set.ssl.certverifyresult = lerr;
+          *certverifyresult = lerr;
           snprintf(error_buffer, sizeof(error_buffer),
                    "SSL certificate problem: %s",
                    X509_verify_cert_error_string(lerr));
         }
         else
           /* strcpy() is fine here as long as the string fits within
@@ -2217,14 +2274,17 @@
 
       /* If we e.g. use SSLv2 request-method and the server doesn't like us
        * (RST connection etc.), OpenSSL gives no explanation whatsoever and
        * the SO_ERROR is also lost.
        */
       if(CURLE_SSL_CONNECT_ERROR == result && errdetail == 0) {
+        const char * const hostname = SSL_IS_PROXY() ?
+          conn->http_proxy.host.name : conn->host.name;
+        const long int port = SSL_IS_PROXY() ? conn->port : conn->remote_port;
         failf(data, "Unknown SSL protocol error in connection to %s:%ld ",
-              conn->host.name, conn->remote_port);
+              hostname, port);
         return result;
       }
 
       /* Could be a CERT problem */
       failf(data, "%s", error_buffer);
 
@@ -2242,13 +2302,13 @@
 
 #ifdef HAS_ALPN
     /* Sets data and len to negotiated protocol, len is 0 if no protocol was
      * negotiated
      */
     if(conn->bits.tls_enable_alpn) {
-      const unsigned char* neg_protocol;
+      const unsigned char *neg_protocol;
       unsigned int len;
       SSL_get0_alpn_selected(connssl->handle, &neg_protocol, &len);
       if(len != 0) {
         infof(data, "ALPN, server accepted to use %.*s\n", len, neg_protocol);
 
 #ifdef USE_NGHTTP2
@@ -2273,13 +2333,14 @@
 }
 
 static int asn1_object_dump(ASN1_OBJECT *a, char *buf, size_t len)
 {
   int i, ilen;
 
-  if((ilen = (int)len) < 0)
+  ilen = (int)len;
+  if(ilen < 0)
     return 1; /* buffer too big */
 
   i = i2t_ASN1_OBJECT(buf, ilen, a);
 
   if(i >= ilen)
     return 1; /* buffer too small */
@@ -2695,12 +2756,14 @@
   long lerr, len;
   struct Curl_easy *data = conn->data;
   X509 *issuer;
   FILE *fp;
   char *buffer = data->state.buffer;
   const char *ptr;
+  long * const certverifyresult = SSL_IS_PROXY() ?
+    &data->set.proxy_ssl.certverifyresult : &data->set.ssl.certverifyresult;
   BIO *mem = BIO_new(BIO_s_mem());
 
   if(data->set.ssl.certinfo)
     /* we've been asked to gather certificate info! */
     (void)get_cert_chain(conn, connssl);
 
@@ -2710,13 +2773,13 @@
       return CURLE_OK;
 
     failf(data, "SSL: couldn't get peer certificate!");
     return CURLE_PEER_FAILED_VERIFICATION;
   }
 
-  infof(data, "Server certificate:\n");
+  infof(data, "%s certificate:\n", SSL_IS_PROXY() ? "Proxy" : "Server");
 
   rc = x509_name_oneline(X509_get_subject_name(connssl->server_cert),
                          buffer, BUFSIZE);
   infof(data, " subject: %s\n", rc?"[NONE]":buffer);
 
   ASN1_TIME_print(mem, X509_get0_notBefore(connssl->server_cert));
@@ -2728,13 +2791,13 @@
   len = BIO_get_mem_data(mem, (char **) &ptr);
   infof(data, " expire date: %.*s\n", len, ptr);
   rc = BIO_reset(mem);
 
   BIO_free(mem);
 
-  if(data->set.ssl.verifyhost) {
+  if(SSL_CONN_CONFIG(verifyhost)) {
     result = verifyhost(conn, connssl->server_cert);
     if(result) {
       X509_free(connssl->server_cert);
       connssl->server_cert = NULL;
       return result;
     }
@@ -2751,56 +2814,55 @@
     infof(data, " issuer: %s\n", buffer);
 
     /* We could do all sorts of certificate verification stuff here before
        deallocating the certificate. */
 
     /* e.g. match issuer name with provided issuer certificate */
-    if(data->set.str[STRING_SSL_ISSUERCERT]) {
-      fp = fopen(data->set.str[STRING_SSL_ISSUERCERT], FOPEN_READTEXT);
+    if(SSL_SET_OPTION(issuercert)) {
+      fp = fopen(SSL_SET_OPTION(issuercert), FOPEN_READTEXT);
       if(!fp) {
         if(strict)
           failf(data, "SSL: Unable to open issuer cert (%s)",
-                data->set.str[STRING_SSL_ISSUERCERT]);
+                SSL_SET_OPTION(issuercert));
         X509_free(connssl->server_cert);
         connssl->server_cert = NULL;
         return CURLE_SSL_ISSUER_ERROR;
       }
 
       issuer = PEM_read_X509(fp, NULL, ZERO_NULL, NULL);
       if(!issuer) {
         if(strict)
           failf(data, "SSL: Unable to read issuer cert (%s)",
-                data->set.str[STRING_SSL_ISSUERCERT]);
+                SSL_SET_OPTION(issuercert));
         X509_free(connssl->server_cert);
         X509_free(issuer);
         fclose(fp);
         return CURLE_SSL_ISSUER_ERROR;
       }
 
       fclose(fp);
 
       if(X509_check_issued(issuer, connssl->server_cert) != X509_V_OK) {
         if(strict)
           failf(data, "SSL: Certificate issuer check failed (%s)",
-                data->set.str[STRING_SSL_ISSUERCERT]);
+                SSL_SET_OPTION(issuercert));
         X509_free(connssl->server_cert);
         X509_free(issuer);
         connssl->server_cert = NULL;
         return CURLE_SSL_ISSUER_ERROR;
       }
 
       infof(data, " SSL certificate issuer check ok (%s)\n",
-            data->set.str[STRING_SSL_ISSUERCERT]);
+            SSL_SET_OPTION(issuercert));
       X509_free(issuer);
     }
 
-    lerr = data->set.ssl.certverifyresult =
-      SSL_get_verify_result(connssl->handle);
+    lerr = *certverifyresult = SSL_get_verify_result(connssl->handle);
 
-    if(data->set.ssl.certverifyresult != X509_V_OK) {
-      if(data->set.ssl.verifypeer) {
+    if(*certverifyresult != X509_V_OK) {
+      if(SSL_CONN_CONFIG(verifypeer)) {
         /* We probably never reach this, because SSL_connect() will fail
            and we return earlier if verifypeer is set? */
         if(strict)
           failf(data, "SSL certificate verify result: %s (%ld)",
                 X509_verify_cert_error_string(lerr), lerr);
         result = CURLE_PEER_FAILED_VERIFICATION;
@@ -2813,13 +2875,13 @@
     else
       infof(data, " SSL certificate verify ok.\n");
   }
 
 #if (OPENSSL_VERSION_NUMBER >= 0x0090808fL) && !defined(OPENSSL_NO_TLSEXT) && \
     !defined(OPENSSL_NO_OCSP)
-  if(data->set.ssl.verifystatus) {
+  if(SSL_CONN_CONFIG(verifystatus)) {
     result = verifystatus(conn, connssl);
     if(result) {
       X509_free(connssl->server_cert);
       connssl->server_cert = NULL;
       return result;
     }
@@ -2827,13 +2889,14 @@
 #endif
 
   if(!strict)
     /* when not strict, we don't bother about the verify cert problems */
     result = CURLE_OK;
 
-  ptr = data->set.str[STRING_SSL_PINNEDPUBLICKEY];
+  ptr = SSL_IS_PROXY() ? data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+                         data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
   if(!result && ptr) {
     result = pkp_pin_peer_pubkey(data, connssl->server_cert, ptr);
     if(result)
       failf(data, "SSL: public key does not match pinned public key!");
   }
 
@@ -2849,36 +2912,37 @@
   CURLcode result = CURLE_OK;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     bool incache;
     SSL_SESSION *our_ssl_sessionid;
     void *old_ssl_sessionid = NULL;
 
     our_ssl_sessionid = SSL_get1_session(connssl->handle);
 
     /* SSL_get1_session() will increment the reference count and the session
         will stay in memory until explicitly freed with SSL_SESSION_free(3),
         regardless of its state. */
 
     Curl_ssl_sessionid_lock(conn);
-    incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL));
+    incache = !(Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL,
+                                      sockindex));
     if(incache) {
       if(old_ssl_sessionid != our_ssl_sessionid) {
         infof(data, "old SSL session ID is stale, removing\n");
         Curl_ssl_delsessionid(conn, old_ssl_sessionid);
         incache = FALSE;
       }
     }
 
     if(!incache) {
       result = Curl_ssl_addsessionid(conn, our_ssl_sessionid,
-                                      0 /* unknown size */);
+                                      0 /* unknown size */, sockindex);
       if(result) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "failed to store ssl session");
         return result;
       }
     }
@@ -2896,14 +2960,14 @@
    * We check certificates to authenticate the server; otherwise we risk
    * man-in-the-middle attack; NEVERTHELESS, if we're told explicitly not to
    * verify the peer ignore faults and failures from the server cert
    * operations.
    */
 
-  result = servercert(conn, connssl,
-                      (data->set.ssl.verifypeer || data->set.ssl.verifyhost));
+  result = servercert(conn, connssl, (SSL_CONN_CONFIG(verifypeer) ||
+                                      SSL_CONN_CONFIG(verifyhost)));
 
   if(!result)
     connssl->connecting_state = ssl_connect_done;
 
   return result;
 }
@@ -2917,13 +2981,13 @@
                                     bool *done)
 {
   CURLcode result;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
-  long timeout_ms;
+  time_t timeout_ms;
   int what;
 
   /* check if the connection has already been established */
   if(ssl_connection_complete == connssl->state) {
     *done = TRUE;
     return CURLE_OK;
@@ -3045,13 +3109,16 @@
 }
 
 bool Curl_ossl_data_pending(const struct connectdata *conn, int connindex)
 {
   if(conn->ssl[connindex].handle)
     /* SSL is in use */
-    return (0 != SSL_pending(conn->ssl[connindex].handle)) ? TRUE : FALSE;
+    return (0 != SSL_pending(conn->ssl[connindex].handle) ||
+           (conn->proxy_ssl[connindex].handle &&
+            0 != SSL_pending(conn->proxy_ssl[connindex].handle))) ?
+           TRUE : FALSE;
   else
     return FALSE;
 }
 
 static ssize_t ossl_send(struct connectdata *conn,
                          int sockindex,
@@ -3090,14 +3157,24 @@
       *curlcode = CURLE_SEND_ERROR;
       return -1;
     case SSL_ERROR_SSL:
       /*  A failure in the SSL library occurred, usually a protocol error.
           The OpenSSL error queue contains more information on the error. */
       sslerror = ERR_get_error();
-      failf(conn->data, "SSL_write() error: %s",
-            ossl_strerror(sslerror, error_buffer, sizeof(error_buffer)));
+      if(ERR_GET_LIB(sslerror) == ERR_LIB_SSL &&
+         ERR_GET_REASON(sslerror) == SSL_R_BIO_NOT_SET &&
+         conn->ssl[sockindex].state == ssl_connection_complete &&
+         conn->proxy_ssl[sockindex].state == ssl_connection_complete) {
+        char ver[120];
+        Curl_ossl_version(ver, 120);
+        failf(conn->data, "Error: %s does not support double SSL tunneling.",
+              ver);
+      }
+      else
+        failf(conn->data, "SSL_write() error: %s",
+              ossl_strerror(sslerror, error_buffer, sizeof(error_buffer)));
       *curlcode = CURLE_SEND_ERROR;
       return -1;
     }
     /* a true error */
     failf(conn->data, "SSL_write() return error %d", err);
     *curlcode = CURLE_SEND_ERROR;
@@ -3175,13 +3252,13 @@
       if(minor_ver > 26) {
         /* handle extended version introduced for 0.9.8za */
         sub[1] = (char) ((minor_ver - 1) % 26 + 'a' + 1);
         sub[0] = 'z';
       }
       else {
-        sub[0]=(char)(((ssleay_value>>4)&0xff) + 'a' -1);
+        sub[0] = (char) (minor_ver + 'a' - 1);
       }
     }
     else
       sub[0]='\0';
   }
 
@@ -3196,13 +3273,18 @@
 
 /* can be called with data == NULL */
 int Curl_ossl_random(struct Curl_easy *data, unsigned char *entropy,
                      size_t length)
 {
   if(data) {
-    Curl_ossl_seed(data); /* Initiate the seed if not already done */
+    if(Curl_ossl_seed(data)) /* Initiate the seed if not already done */
+      return 1; /* couldn't seed for some reason */
+  }
+  else {
+    if(!rand_enough())
+      return 1;
   }
   RAND_bytes(entropy, curlx_uztosi(length));
   return 0; /* 0 as in no problem */
 }
 
 void Curl_ossl_md5sum(unsigned char *tmp, /* input */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/openssl.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/openssl.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/openssl.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/openssl.h	2016-12-19 15:27:56.000000000 +0800
@@ -76,12 +76,15 @@
                       size_t tmplen,
                       unsigned char *sha256sum /* output */,
                       size_t unused);
 
 bool Curl_ossl_cert_status_request(void);
 
+/* Support HTTPS-proxy */
+#define HTTPS_PROXY_SUPPORT 1
+
 /* Set the API backend definition to OpenSSL */
 #define CURL_SSL_BACKEND CURLSSLBACKEND_OPENSSL
 
 /* this backend supports the CAPATH option */
 #define have_curlssl_ca_path 1
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/polarssl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/polarssl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/polarssl.c	2016-10-31 20:20:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/polarssl.c	2016-12-19 15:27:56.000000000 +0800
@@ -144,18 +144,22 @@
 static CURLcode
 polarssl_connect_step1(struct connectdata *conn,
                        int sockindex)
 {
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
+  const char *capath = SSL_CONN_CONFIG(CApath);
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
+  const long int port = SSL_IS_PROXY() ? conn->port : conn->remote_port;
   int ret = -1;
   char errorbuf[128];
   errorbuf[0]=0;
 
   /* PolarSSL only supports SSLv3 and TLSv1 */
-  if(data->set.ssl.version == CURL_SSLVERSION_SSLv2) {
+  if(SSL_CONN_CONFIG(version) == CURL_SSLVERSION_SSLv2) {
     failf(data, "PolarSSL does not support SSLv2");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #ifdef THREADING_SUPPORT
   entropy_init_mutex(&entropy);
@@ -177,105 +181,102 @@
   }
 #endif /* THREADING_SUPPORT */
 
   /* Load the trusted CA */
   memset(&connssl->cacert, 0, sizeof(x509_crt));
 
-  if(data->set.str[STRING_SSL_CAFILE]) {
+  if(SSL_CONN_CONFIG(CAfile)) {
     ret = x509_crt_parse_file(&connssl->cacert,
-                              data->set.str[STRING_SSL_CAFILE]);
+                              SSL_CONN_CONFIG(CAfile));
 
     if(ret<0) {
       error_strerror(ret, errorbuf, sizeof(errorbuf));
       failf(data, "Error reading ca cert file %s - PolarSSL: (-0x%04X) %s",
-            data->set.str[STRING_SSL_CAFILE], -ret, errorbuf);
+            SSL_CONN_CONFIG(CAfile), -ret, errorbuf);
 
-      if(data->set.ssl.verifypeer)
+      if(SSL_CONN_CONFIG(verifypeer))
         return CURLE_SSL_CACERT_BADFILE;
     }
   }
 
-  if(data->set.str[STRING_SSL_CAPATH]) {
-    ret = x509_crt_parse_path(&connssl->cacert,
-                              data->set.str[STRING_SSL_CAPATH]);
+  if(capath) {
+    ret = x509_crt_parse_path(&connssl->cacert, capath);
 
     if(ret<0) {
       error_strerror(ret, errorbuf, sizeof(errorbuf));
       failf(data, "Error reading ca cert path %s - PolarSSL: (-0x%04X) %s",
-            data->set.str[STRING_SSL_CAPATH], -ret, errorbuf);
+            capath, -ret, errorbuf);
 
-      if(data->set.ssl.verifypeer)
+      if(SSL_CONN_CONFIG(verifypeer))
         return CURLE_SSL_CACERT_BADFILE;
     }
   }
 
   /* Load the client certificate */
   memset(&connssl->clicert, 0, sizeof(x509_crt));
 
-  if(data->set.str[STRING_CERT]) {
+  if(SSL_SET_OPTION(cert)) {
     ret = x509_crt_parse_file(&connssl->clicert,
-                              data->set.str[STRING_CERT]);
+                              SSL_SET_OPTION(cert));
 
     if(ret) {
       error_strerror(ret, errorbuf, sizeof(errorbuf));
       failf(data, "Error reading client cert file %s - PolarSSL: (-0x%04X) %s",
-            data->set.str[STRING_CERT], -ret, errorbuf);
+            SSL_SET_OPTION(cert), -ret, errorbuf);
 
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load the client private key */
-  if(data->set.str[STRING_KEY]) {
+  if(SSL_SET_OPTION(key)) {
     pk_context pk;
     pk_init(&pk);
-    ret = pk_parse_keyfile(&pk, data->set.str[STRING_KEY],
-                           data->set.str[STRING_KEY_PASSWD]);
+    ret = pk_parse_keyfile(&pk, SSL_SET_OPTION(key),
+                           SSL_SET_OPTION(key_passwd));
     if(ret == 0 && !pk_can_do(&pk, POLARSSL_PK_RSA))
       ret = POLARSSL_ERR_PK_TYPE_MISMATCH;
     if(ret == 0)
       rsa_copy(&connssl->rsa, pk_rsa(pk));
     else
       rsa_free(&connssl->rsa);
     pk_free(&pk);
 
     if(ret) {
       error_strerror(ret, errorbuf, sizeof(errorbuf));
       failf(data, "Error reading private key %s - PolarSSL: (-0x%04X) %s",
-            data->set.str[STRING_KEY], -ret, errorbuf);
+            SSL_SET_OPTION(key), -ret, errorbuf);
 
       return CURLE_SSL_CERTPROBLEM;
     }
   }
 
   /* Load the CRL */
   memset(&connssl->crl, 0, sizeof(x509_crl));
 
-  if(data->set.str[STRING_SSL_CRLFILE]) {
+  if(SSL_SET_OPTION(CRLfile)) {
     ret = x509_crl_parse_file(&connssl->crl,
-                              data->set.str[STRING_SSL_CRLFILE]);
+                              SSL_SET_OPTION(CRLfile));
 
     if(ret) {
       error_strerror(ret, errorbuf, sizeof(errorbuf));
       failf(data, "Error reading CRL file %s - PolarSSL: (-0x%04X) %s",
-            data->set.str[STRING_SSL_CRLFILE], -ret, errorbuf);
+            SSL_SET_OPTION(CRLfile), -ret, errorbuf);
 
       return CURLE_SSL_CRL_BADFILE;
     }
   }
 
-  infof(data, "PolarSSL: Connecting to %s:%d\n",
-        conn->host.name, conn->remote_port);
+  infof(data, "PolarSSL: Connecting to %s:%d\n", hostname, port);
 
   if(ssl_init(&connssl->ssl)) {
     failf(data, "PolarSSL: ssl_init failed");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
-  switch(data->set.ssl.version) {
-  default:
+  switch(SSL_CONN_CONFIG(version)) {
   case CURL_SSLVERSION_DEFAULT:
   case CURL_SSLVERSION_TLSv1:
     ssl_set_min_version(&connssl->ssl, SSL_MAJOR_VERSION_3,
                         SSL_MINOR_VERSION_1);
     break;
   case CURL_SSLVERSION_SSLv3:
@@ -303,12 +304,18 @@
     ssl_set_min_version(&connssl->ssl, SSL_MAJOR_VERSION_3,
                         SSL_MINOR_VERSION_3);
     ssl_set_max_version(&connssl->ssl, SSL_MAJOR_VERSION_3,
                         SSL_MINOR_VERSION_3);
     infof(data, "PolarSSL: Forced min. SSL Version to be TLS 1.2\n");
     break;
+  case CURL_SSLVERSION_TLSv1_3:
+    failf(data, "PolarSSL: TLS 1.3 is not yet supported");
+    return CURLE_SSL_CONNECT_ERROR;
+  default:
+    failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+    return CURLE_SSL_CONNECT_ERROR;
   }
 
   ssl_set_endpoint(&connssl->ssl, SSL_IS_CLIENT);
   ssl_set_authmode(&connssl->ssl, SSL_VERIFY_OPTIONAL);
 
   ssl_set_rng(&connssl->ssl, ctr_drbg_random,
@@ -317,17 +324,17 @@
               net_recv, &conn->sock[sockindex],
               net_send, &conn->sock[sockindex]);
 
   ssl_set_ciphersuites(&connssl->ssl, ssl_list_ciphersuites());
 
   /* Check if there's a cached ID we can/should use here! */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     void *old_session = NULL;
 
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &old_session, NULL)) {
+    if(!Curl_ssl_getsessionid(conn, &old_session, NULL, sockindex)) {
       ret = ssl_set_session(&connssl->ssl, old_session);
       if(ret) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "ssl_set_session returned -0x%x", -ret);
         return CURLE_SSL_CONNECT_ERROR;
       }
@@ -336,28 +343,28 @@
     Curl_ssl_sessionid_unlock(conn);
   }
 
   ssl_set_ca_chain(&connssl->ssl,
                    &connssl->cacert,
                    &connssl->crl,
-                   conn->host.name);
+                   hostname);
 
   ssl_set_own_cert_rsa(&connssl->ssl,
                        &connssl->clicert, &connssl->rsa);
 
-  if(ssl_set_hostname(&connssl->ssl, conn->host.name)) {
+  if(ssl_set_hostname(&connssl->ssl, hostname)) {
     /* ssl_set_hostname() sets the name to use in CN/SAN checks *and* the name
        to set in the SNI extension. So even if curl connects to a host
        specified as an IP address, this function must be used. */
     failf(data, "couldn't set hostname in PolarSSL");
     return CURLE_SSL_CONNECT_ERROR;
   }
 
 #ifdef HAS_ALPN
   if(conn->bits.tls_enable_alpn) {
-    static const char* protocols[3];
+    static const char *protocols[3];
     int cur = 0;
 
 #ifdef USE_NGHTTP2
     if(data->set.httpversion >= CURL_HTTP_VERSION_2) {
       protocols[cur++] = NGHTTP2_PROTO_VERSION_ID;
       infof(data, "ALPN, offering %s\n", NGHTTP2_PROTO_VERSION_ID);
@@ -387,12 +394,16 @@
                        int sockindex)
 {
   int ret;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data* connssl = &conn->ssl[sockindex];
   char buffer[1024];
+  const char * const pinnedpubkey = SSL_IS_PROXY() ?
+            data->set.str[STRING_SSL_PINNEDPUBLICKEY_PROXY] :
+            data->set.str[STRING_SSL_PINNEDPUBLICKEY_ORIG];
+
 
   char errorbuf[128];
   errorbuf[0] = 0;
 
   conn->recv[sockindex] = polarssl_recv;
   conn->send[sockindex] = polarssl_send;
@@ -420,13 +431,13 @@
 
   infof(data, "PolarSSL: Handshake complete, cipher is %s\n",
         ssl_get_ciphersuite(&conn->ssl[sockindex].ssl) );
 
   ret = ssl_get_verify_result(&conn->ssl[sockindex].ssl);
 
-  if(ret && data->set.ssl.verifypeer) {
+  if(ret && SSL_CONN_CONFIG(verifypeer)) {
     if(ret & BADCERT_EXPIRED)
       failf(data, "Cert verify failed: BADCERT_EXPIRED");
 
     if(ret & BADCERT_REVOKED) {
       failf(data, "Cert verify failed: BADCERT_REVOKED");
       return CURLE_SSL_CACERT;
@@ -448,13 +459,13 @@
     if(x509_crt_info(buffer, sizeof(buffer), (char *)"* ",
                      ssl_get_peer_cert(&(connssl->ssl))) != -1)
       infof(data, "Dumping cert info:\n%s\n", buffer);
   }
 
   /* adapted from mbedtls.c */
-  if(data->set.str[STRING_SSL_PINNEDPUBLICKEY]) {
+  if(pinnedpubkey) {
     int size;
     CURLcode result;
     x509_crt *p;
     unsigned char pubkey[PUB_DER_MAX_BYTES];
     const x509_crt *peercert;
 
@@ -490,13 +501,13 @@
       free(p);
       return CURLE_SSL_PINNEDPUBKEYNOTMATCH;
     }
 
     /* pk_write_pubkey_der writes data at the end of the buffer. */
     result = Curl_pin_peer_pubkey(data,
-                                  data->set.str[STRING_SSL_PINNEDPUBLICKEY],
+                                  pinnedpubkey,
                                   &pubkey[PUB_DER_MAX_BYTES - size], size);
     if(result) {
       x509_crt_free(p);
       free(p);
       return result;
     }
@@ -541,13 +552,13 @@
   CURLcode retcode = CURLE_OK;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   struct Curl_easy *data = conn->data;
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     int ret;
     ssl_session *our_ssl_sessionid;
     void *old_ssl_sessionid = NULL;
 
     our_ssl_sessionid = malloc(sizeof(ssl_session));
     if(!our_ssl_sessionid)
@@ -560,16 +571,16 @@
       failf(data, "ssl_get_session returned -0x%x", -ret);
       return CURLE_SSL_CONNECT_ERROR;
     }
 
     /* If there's already a matching session in the cache, delete it */
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL))
+    if(!Curl_ssl_getsessionid(conn, &old_ssl_sessionid, NULL, sockindex))
       Curl_ssl_delsessionid(conn, old_ssl_sessionid);
 
-    retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0);
+    retcode = Curl_ssl_addsessionid(conn, our_ssl_sessionid, 0, sockindex);
     Curl_ssl_sessionid_unlock(conn);
     if(retcode) {
       free(our_ssl_sessionid);
       failf(data, "failed to store ssl session");
       return retcode;
     }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/schannel.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/schannel.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/schannel.c	2016-10-19 04:37:55.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/schannel.c	2016-12-19 15:27:56.000000000 +0800
@@ -56,12 +56,13 @@
 #include "inet_pton.h" /* for IP addr SNI check */
 #include "curl_multibyte.h"
 #include "warnless.h"
 #include "x509asn1.h"
 #include "curl_printf.h"
 #include "system_win32.h"
+#include "hostcheck.h"
 
  /* The last #include file should be: */
 #include "curl_memory.h"
 #include "memdebug.h"
 
 /* ALPN requires version 8.1 of the Windows SDK, which was
@@ -120,15 +121,17 @@
   struct in_addr addr;
 #ifdef ENABLE_IPV6
   struct in6_addr addr6;
 #endif
   TCHAR *host_name;
   CURLcode result;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 
   infof(data, "schannel: SSL/TLS connection with %s port %hu (step 1/3)\n",
-        conn->host.name, conn->remote_port);
+        hostname, conn->remote_port);
 
 #ifdef HAS_ALPN
   /* ALPN is only supported on Windows 8.1 / Server 2012 R2 and above.
      Also it doesn't seem to be supported for Wine, see curl bug #983. */
   connssl->use_alpn = conn->bits.tls_enable_alpn &&
                       !GetProcAddress(GetModuleHandleA("ntdll"),
@@ -139,15 +142,15 @@
   connssl->use_alpn = false;
 #endif
 
   connssl->cred = NULL;
 
   /* check for an existing re-usable credential handle */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     Curl_ssl_sessionid_lock(conn);
-    if(!Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL)) {
+    if(!Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL, sockindex)) {
       connssl->cred = old_cred;
       infof(data, "schannel: re-using existing credential handle\n");
 
       /* increment the reference counter of the credential/session handle */
       connssl->cred->refcount++;
       infof(data, "schannel: incremented credential handle refcount = %d\n",
@@ -158,49 +161,49 @@
 
   if(!connssl->cred) {
     /* setup Schannel API options */
     memset(&schannel_cred, 0, sizeof(schannel_cred));
     schannel_cred.dwVersion = SCHANNEL_CRED_VERSION;
 
-    if(data->set.ssl.verifypeer) {
+    if(conn->ssl_config.verifypeer) {
 #ifdef _WIN32_WCE
       /* certificate validation on CE doesn't seem to work right; we'll
          do it following a more manual process. */
       schannel_cred.dwFlags = SCH_CRED_MANUAL_CRED_VALIDATION |
         SCH_CRED_IGNORE_NO_REVOCATION_CHECK |
         SCH_CRED_IGNORE_REVOCATION_OFFLINE;
 #else
       schannel_cred.dwFlags = SCH_CRED_AUTO_CRED_VALIDATION;
-      if(data->set.ssl_no_revoke)
+      /* TODO s/data->set.ssl.no_revoke/SSL_SET_OPTION(no_revoke)/g */
+      if(data->set.ssl.no_revoke)
         schannel_cred.dwFlags |= SCH_CRED_IGNORE_NO_REVOCATION_CHECK |
                                  SCH_CRED_IGNORE_REVOCATION_OFFLINE;
       else
         schannel_cred.dwFlags |= SCH_CRED_REVOCATION_CHECK_CHAIN;
 #endif
-      if(data->set.ssl_no_revoke)
+      if(data->set.ssl.no_revoke)
         infof(data, "schannel: disabled server certificate revocation "
                     "checks\n");
       else
         infof(data, "schannel: checking server certificate revocation\n");
     }
     else {
       schannel_cred.dwFlags = SCH_CRED_MANUAL_CRED_VALIDATION |
         SCH_CRED_IGNORE_NO_REVOCATION_CHECK |
         SCH_CRED_IGNORE_REVOCATION_OFFLINE;
       infof(data, "schannel: disabled server certificate revocation checks\n");
     }
 
-    if(!data->set.ssl.verifyhost) {
+    if(!conn->ssl_config.verifyhost) {
       schannel_cred.dwFlags |= SCH_CRED_NO_SERVERNAME_CHECK;
       infof(data, "schannel: verifyhost setting prevents Schannel from "
             "comparing the supplied target name with the subject "
             "names in server certificates. Also disables SNI.\n");
     }
 
-    switch(data->set.ssl.version) {
-    default:
+    switch(conn->ssl_config.version) {
     case CURL_SSLVERSION_DEFAULT:
     case CURL_SSLVERSION_TLSv1:
       schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_0_CLIENT |
         SP_PROT_TLS1_1_CLIENT |
         SP_PROT_TLS1_2_CLIENT;
       break;
@@ -210,18 +213,24 @@
     case CURL_SSLVERSION_TLSv1_1:
       schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_1_CLIENT;
       break;
     case CURL_SSLVERSION_TLSv1_2:
       schannel_cred.grbitEnabledProtocols = SP_PROT_TLS1_2_CLIENT;
       break;
+    case CURL_SSLVERSION_TLSv1_3:
+      failf(data, "Schannel: TLS 1.3 is not yet supported");
+      return CURLE_SSL_CONNECT_ERROR;
     case CURL_SSLVERSION_SSLv3:
       schannel_cred.grbitEnabledProtocols = SP_PROT_SSL3_CLIENT;
       break;
     case CURL_SSLVERSION_SSLv2:
       schannel_cred.grbitEnabledProtocols = SP_PROT_SSL2_CLIENT;
       break;
+    default:
+      failf(data, "Unrecognized parameter passed via CURLOPT_SSLVERSION");
+      return CURLE_SSL_CONNECT_ERROR;
     }
 
     /* allocate memory for the re-usable credential handle */
     connssl->cred = (struct curl_schannel_cred *)
       malloc(sizeof(struct curl_schannel_cred));
     if(!connssl->cred) {
@@ -250,35 +259,35 @@
       Curl_safefree(connssl->cred);
       return CURLE_SSL_CONNECT_ERROR;
     }
   }
 
   /* Warn if SNI is disabled due to use of an IP address */
-  if(Curl_inet_pton(AF_INET, conn->host.name, &addr)
+  if(Curl_inet_pton(AF_INET, hostname, &addr)
 #ifdef ENABLE_IPV6
-     || Curl_inet_pton(AF_INET6, conn->host.name, &addr6)
+     || Curl_inet_pton(AF_INET6, hostname, &addr6)
 #endif
     ) {
     infof(data, "schannel: using IP address, SNI is not supported by OS.\n");
   }
 
 #ifdef HAS_ALPN
   if(connssl->use_alpn) {
     int cur = 0;
     int list_start_index = 0;
-    unsigned int* extension_len = NULL;
+    unsigned int *extension_len = NULL;
     unsigned short* list_len = NULL;
 
     /* The first four bytes will be an unsigned int indicating number
        of bytes of data in the rest of the the buffer. */
-    extension_len = (unsigned int*)(&alpn_buffer[cur]);
+    extension_len = (unsigned int *)(&alpn_buffer[cur]);
     cur += sizeof(unsigned int);
 
     /* The next four bytes are an indicator that this buffer will contain
        ALPN data, as opposed to NPN, for example. */
-    *(unsigned int*)&alpn_buffer[cur] =
+    *(unsigned int *)&alpn_buffer[cur] =
       SecApplicationProtocolNegotiationExt_ALPN;
     cur += sizeof(unsigned int);
 
     /* The next two bytes will be an unsigned short indicating the number
        of bytes used to list the preferred protocols. */
     list_len = (unsigned short*)(&alpn_buffer[cur]);
@@ -330,13 +339,13 @@
   if(!connssl->ctxt) {
     failf(data, "schannel: unable to allocate memory");
     return CURLE_OUT_OF_MEMORY;
   }
   memset(connssl->ctxt, 0, sizeof(struct curl_schannel_ctxt));
 
-  host_name = Curl_convert_UTF8_to_tchar(conn->host.name);
+  host_name = Curl_convert_UTF8_to_tchar(hostname);
   if(!host_name)
     return CURLE_OUT_OF_MEMORY;
 
   /* Schannel InitializeSecurityContext:
      https://msdn.microsoft.com/en-us/library/windows/desktop/aa375924.aspx
 
@@ -403,17 +412,19 @@
   SecBuffer inbuf[2];
   SecBufferDesc inbuf_desc;
   SECURITY_STATUS sspi_status = SEC_E_OK;
   TCHAR *host_name;
   CURLcode result;
   bool doread;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 
   doread = (connssl->connecting_state != ssl_connect_2_writing) ? TRUE : FALSE;
 
   infof(data, "schannel: SSL/TLS connection with %s port %hu (step 2/3)\n",
-        conn->host.name, conn->remote_port);
+        hostname, conn->remote_port);
 
   if(!connssl->cred || !connssl->ctxt)
     return CURLE_SSL_CONNECT_ERROR;
 
   /* buffer to store previously received and decrypted data */
   if(connssl->decdata_buffer == NULL) {
@@ -503,13 +514,13 @@
     }
 
     /* copy received handshake data into input buffer */
     memcpy(inbuf[0].pvBuffer, connssl->encdata_buffer,
            connssl->encdata_offset);
 
-    host_name = Curl_convert_UTF8_to_tchar(conn->host.name);
+    host_name = Curl_convert_UTF8_to_tchar(hostname);
     if(!host_name)
       return CURLE_OUT_OF_MEMORY;
 
     /* https://msdn.microsoft.com/en-us/library/windows/desktop/aa375924.aspx
        */
     sspi_status = s_pSecFn->InitializeSecurityContext(
@@ -620,13 +631,13 @@
     infof(data, "schannel: SSL/TLS handshake complete\n");
   }
 
 #ifdef _WIN32_WCE
   /* Windows CE doesn't do any server certificate validation.
      We have to do it manually. */
-  if(data->set.ssl.verifypeer)
+  if(conn->ssl_config.verifypeer)
     return verify_certificate(conn, sockindex);
 #endif
 
   return CURLE_OK;
 }
 
@@ -635,20 +646,22 @@
 {
   CURLcode result = CURLE_OK;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   SECURITY_STATUS sspi_status = SEC_E_OK;
   CERT_CONTEXT *ccert_context = NULL;
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 #ifdef HAS_ALPN
   SecPkgContext_ApplicationProtocol alpn_result;
 #endif
 
   DEBUGASSERT(ssl_connect_3 == connssl->connecting_state);
 
   infof(data, "schannel: SSL/TLS connection with %s port %hu (step 3/3)\n",
-        conn->host.name, conn->remote_port);
+        hostname, conn->remote_port);
 
   if(!connssl->cred)
     return CURLE_SSL_CONNECT_ERROR;
 
   /* check if the required context attributes are met */
   if(connssl->ret_flags != connssl->req_flags) {
@@ -698,29 +711,31 @@
     else
       infof(data, "ALPN, server did not agree to a protocol\n");
   }
 #endif
 
   /* save the current session data for possible re-use */
-  if(conn->ssl_config.sessionid) {
+  if(data->set.general_ssl.sessionid) {
     bool incache;
     struct curl_schannel_cred *old_cred = NULL;
 
     Curl_ssl_sessionid_lock(conn);
-    incache = !(Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL));
+    incache = !(Curl_ssl_getsessionid(conn, (void **)&old_cred, NULL,
+                                      sockindex));
     if(incache) {
       if(old_cred != connssl->cred) {
         infof(data, "schannel: old credential handle is stale, removing\n");
         /* we're not taking old_cred ownership here, no refcount++ is needed */
         Curl_ssl_delsessionid(conn, (void *)old_cred);
         incache = FALSE;
       }
     }
     if(!incache) {
       result = Curl_ssl_addsessionid(conn, (void *)connssl->cred,
-                                     sizeof(struct curl_schannel_cred));
+                                     sizeof(struct curl_schannel_cred),
+                                     sockindex);
       if(result) {
         Curl_ssl_sessionid_unlock(conn);
         failf(data, "schannel: failed to store credential handle");
         return result;
       }
       else {
@@ -766,13 +781,13 @@
                         bool nonblocking, bool *done)
 {
   CURLcode result;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   curl_socket_t sockfd = conn->sock[sockindex];
-  long timeout_ms;
+  time_t timeout_ms;
   int what;
 
   /* check if the connection has already been established */
   if(ssl_connection_complete == connssl->state) {
     *done = TRUE;
     return CURLE_OK;
@@ -954,13 +969,13 @@
       seems the answer is NO.
     */
 
     /* send entire message or fail */
     while(len > (size_t)written) {
       ssize_t this_write;
-      long timeleft;
+      time_t timeleft;
       int what;
 
       this_write = 0;
 
       timeleft = Curl_timeleft(conn->data, NULL, FALSE);
       if(timeleft < 0) {
@@ -1373,15 +1388,17 @@
 {
   /* See https://msdn.microsoft.com/en-us/library/windows/desktop/aa380138.aspx
    * Shutting Down an Schannel Connection
    */
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
+  const char * const hostname = SSL_IS_PROXY() ? conn->http_proxy.host.name :
+    conn->host.name;
 
   infof(data, "schannel: shutting down SSL/TLS connection with %s port %hu\n",
-        conn->host.name, conn->remote_port);
+        hostname, conn->remote_port);
 
   if(connssl->cred && connssl->ctxt) {
     SecBufferDesc BuffDesc;
     SecBuffer Buffer;
     SECURITY_STATUS sspi_status;
     SecBuffer outbuf;
@@ -1397,13 +1414,13 @@
                                               &BuffDesc);
 
     if(sspi_status != SEC_E_OK)
       failf(data, "schannel: ApplyControlToken failure: %s",
             Curl_sspi_strerror(conn, sspi_status));
 
-    host_name = Curl_convert_UTF8_to_tchar(conn->host.name);
+    host_name = Curl_convert_UTF8_to_tchar(hostname);
     if(!host_name)
       return CURLE_OUT_OF_MEMORY;
 
     /* setup output buffer */
     InitSecBuffer(&outbuf, SECBUFFER_EMPTY, NULL, 0);
     InitSecBufferDesc(&outbuf_desc, &outbuf, 1);
@@ -1522,12 +1539,15 @@
   SECURITY_STATUS status;
   struct Curl_easy *data = conn->data;
   struct ssl_connect_data *connssl = &conn->ssl[sockindex];
   CURLcode result = CURLE_OK;
   CERT_CONTEXT *pCertContextServer = NULL;
   const CERT_CHAIN_CONTEXT *pChainContext = NULL;
+  const char * const conn_hostname = SSL_IS_PROXY() ?
+    conn->http_proxy.host.name :
+    conn->host.name;
 
   status = s_pSecFn->QueryContextAttributes(&connssl->ctxt->ctxt_handle,
                                             SECPKG_ATTR_REMOTE_CERT_CONTEXT,
                                             &pCertContextServer);
 
   if((status != SEC_E_OK) || (pCertContextServer == NULL)) {
@@ -1543,13 +1563,13 @@
 
     if(!CertGetCertificateChain(NULL,
                                 pCertContextServer,
                                 NULL,
                                 pCertContextServer->hCertStore,
                                 &ChainPara,
-                                (data->set.ssl_no_revoke ? 0 :
+                                (data->set.ssl.no_revoke ? 0 :
                                  CERT_CHAIN_REVOCATION_CHECK_CHAIN),
                                 NULL,
                                 &pChainContext)) {
       failf(data, "schannel: CertGetCertificateChain failed: %s",
             Curl_sspi_strerror(conn, GetLastError()));
       pChainContext = NULL;
@@ -1579,56 +1599,70 @@
         result = CURLE_PEER_FAILED_VERIFICATION;
       }
     }
   }
 
   if(result == CURLE_OK) {
-    if(data->set.ssl.verifyhost) {
-      TCHAR cert_hostname_buff[128];
-      xcharp_u hostname;
-      xcharp_u cert_hostname;
+    if(conn->ssl_config.verifyhost) {
+      TCHAR cert_hostname_buff[256];
       DWORD len;
 
-      cert_hostname.const_tchar_ptr = cert_hostname_buff;
-      hostname.tchar_ptr = Curl_convert_UTF8_to_tchar(conn->host.name);
-
       /* TODO: Fix this for certificates with multiple alternative names.
       Right now we're only asking for the first preferred alternative name.
       Instead we'd need to do all via CERT_NAME_SEARCH_ALL_NAMES_FLAG
       (if WinCE supports that?) and run this section in a loop for each.
       https://msdn.microsoft.com/en-us/library/windows/desktop/aa376086.aspx
       curl: (51) schannel: CertGetNameString() certificate hostname
       (.google.com) did not match connection (google.com)
       */
       len = CertGetNameString(pCertContextServer,
                               CERT_NAME_DNS_TYPE,
-                              0,
+                              CERT_NAME_DISABLE_IE4_UTF8_FLAG,
                               NULL,
-                              cert_hostname.tchar_ptr,
-                              128);
-      if(len > 0 && *cert_hostname.tchar_ptr == '*') {
-        /* this is a wildcard cert.  try matching the last len - 1 chars */
-        int hostname_len = strlen(conn->host.name);
-        cert_hostname.tchar_ptr++;
-        if(_tcsicmp(cert_hostname.const_tchar_ptr,
-                    hostname.const_tchar_ptr + hostname_len - len + 2) != 0)
-          result = CURLE_PEER_FAILED_VERIFICATION;
+                              cert_hostname_buff,
+                              256);
+      if(len > 0) {
+        const char *cert_hostname;
+
+        /* Comparing the cert name and the connection hostname encoded as UTF-8
+         * is acceptable since both values are assumed to use ASCII
+         * (or some equivalent) encoding
+         */
+        cert_hostname = Curl_convert_tchar_to_UTF8(cert_hostname_buff);
+        if(!cert_hostname) {
+          result = CURLE_OUT_OF_MEMORY;
+        }
+        else{
+          int match_result;
+
+          match_result = Curl_cert_hostcheck(cert_hostname, conn->host.name);
+          if(match_result == CURL_HOST_MATCH) {
+            infof(data,
+                  "schannel: connection hostname (%s) validated "
+                  "against certificate name (%s)\n",
+                  conn->host.name,
+                  cert_hostname);
+            result = CURLE_OK;
+          }
+          else{
+            failf(data,
+                  "schannel: connection hostname (%s) "
+                  "does not match certificate name (%s)",
+                  conn->host.name,
+                  cert_hostname);
+            result = CURLE_PEER_FAILED_VERIFICATION;
+          }
+          Curl_unicodefree(cert_hostname);
+        }
       }
-      else if(len == 0 || _tcsicmp(hostname.const_tchar_ptr,
-                                   cert_hostname.const_tchar_ptr) != 0) {
+      else {
+        failf(data,
+              "schannel: CertGetNameString did not provide any "
+              "certificate name information");
         result = CURLE_PEER_FAILED_VERIFICATION;
       }
-      if(result == CURLE_PEER_FAILED_VERIFICATION) {
-        char *_cert_hostname;
-        _cert_hostname = Curl_convert_tchar_to_UTF8(cert_hostname.tchar_ptr);
-        failf(data, "schannel: CertGetNameString() certificate hostname "
-              "(%s) did not match connection (%s)",
-              _cert_hostname, conn->host.name);
-        Curl_unicodefree(_cert_hostname);
-      }
-      Curl_unicodefree(hostname.tchar_ptr);
     }
   }
 
   if(pChainContext)
     CertFreeCertificateChain(pChainContext);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/vtls.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/vtls.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/vtls.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/vtls.c	2016-12-19 15:27:56.000000000 +0800
@@ -62,12 +62,13 @@
 #include "slist.h"
 #include "sendf.h"
 #include "strcase.h"
 #include "url.h"
 #include "progress.h"
 #include "share.h"
+#include "multiif.h"
 #include "timeval.h"
 #include "curl_md5.h"
 #include "warnless.h"
 #include "curl_base64.h"
 #include "curl_printf.h"
 
@@ -77,180 +78,64 @@
 
 /* convenience macro to check if this handle is using a shared SSL session */
 #define SSLSESSION_SHARED(data) (data->share &&                        \
                                  (data->share->specifier &             \
                                   (1<<CURL_LOCK_DATA_SSL_SESSION)))
 
-static bool safe_strequal(char* str1, char* str2)
-{
-  if(str1 && str2)
-    /* both pointers point to something then compare them */
-    return (0 != strcasecompare(str1, str2)) ? TRUE : FALSE;
-  else
-    /* if both pointers are NULL then treat them as equal */
-    return (!str1 && !str2) ? TRUE : FALSE;
-}
+#define CLONE_STRING(var)                    \
+  if(source->var) {                          \
+    dest->var = strdup(source->var);         \
+    if(!dest->var)                           \
+      return FALSE;                          \
+  }                                          \
+  else                                       \
+    dest->var = NULL;
 
 bool
-Curl_ssl_config_matches(struct ssl_config_data* data,
-                        struct ssl_config_data* needle)
+Curl_ssl_config_matches(struct ssl_primary_config* data,
+                        struct ssl_primary_config* needle)
 {
   if((data->version == needle->version) &&
      (data->verifypeer == needle->verifypeer) &&
      (data->verifyhost == needle->verifyhost) &&
-     safe_strequal(data->CApath, needle->CApath) &&
-     safe_strequal(data->CAfile, needle->CAfile) &&
-     safe_strequal(data->clientcert, needle->clientcert) &&
-     safe_strequal(data->cipher_list, needle->cipher_list))
+     Curl_safe_strcasecompare(data->CApath, needle->CApath) &&
+     Curl_safe_strcasecompare(data->CAfile, needle->CAfile) &&
+     Curl_safe_strcasecompare(data->clientcert, needle->clientcert) &&
+     Curl_safe_strcasecompare(data->cipher_list, needle->cipher_list))
     return TRUE;
 
   return FALSE;
 }
 
 bool
-Curl_clone_ssl_config(struct ssl_config_data *source,
-                      struct ssl_config_data *dest)
+Curl_clone_primary_ssl_config(struct ssl_primary_config *source,
+                              struct ssl_primary_config *dest)
 {
-  dest->sessionid = source->sessionid;
   dest->verifyhost = source->verifyhost;
   dest->verifypeer = source->verifypeer;
   dest->version = source->version;
 
-  if(source->CAfile) {
-    dest->CAfile = strdup(source->CAfile);
-    if(!dest->CAfile)
-      return FALSE;
-  }
-  else
-    dest->CAfile = NULL;
-
-  if(source->CApath) {
-    dest->CApath = strdup(source->CApath);
-    if(!dest->CApath)
-      return FALSE;
-  }
-  else
-    dest->CApath = NULL;
-
-  if(source->cipher_list) {
-    dest->cipher_list = strdup(source->cipher_list);
-    if(!dest->cipher_list)
-      return FALSE;
-  }
-  else
-    dest->cipher_list = NULL;
-
-  if(source->egdsocket) {
-    dest->egdsocket = strdup(source->egdsocket);
-    if(!dest->egdsocket)
-      return FALSE;
-  }
-  else
-    dest->egdsocket = NULL;
-
-  if(source->random_file) {
-    dest->random_file = strdup(source->random_file);
-    if(!dest->random_file)
-      return FALSE;
-  }
-  else
-    dest->random_file = NULL;
-
-  if(source->clientcert) {
-    dest->clientcert = strdup(source->clientcert);
-    if(!dest->clientcert)
-      return FALSE;
-    dest->sessionid = FALSE;
-  }
-  else
-    dest->clientcert = NULL;
-
+  CLONE_STRING(CAfile);
+  CLONE_STRING(CApath);
+  CLONE_STRING(cipher_list);
+  CLONE_STRING(egdsocket);
+  CLONE_STRING(random_file);
+  CLONE_STRING(clientcert);
   return TRUE;
 }
 
-void Curl_free_ssl_config(struct ssl_config_data* sslc)
+void Curl_free_primary_ssl_config(struct ssl_primary_config* sslc)
 {
   Curl_safefree(sslc->CAfile);
   Curl_safefree(sslc->CApath);
   Curl_safefree(sslc->cipher_list);
   Curl_safefree(sslc->egdsocket);
   Curl_safefree(sslc->random_file);
   Curl_safefree(sslc->clientcert);
 }
 
-
-/*
- * Curl_rand() returns a random unsigned integer, 32bit.
- *
- * This non-SSL function is put here only because this file is the only one
- * with knowledge of what the underlying SSL libraries provide in terms of
- * randomizers.
- *
- * NOTE: 'data' may be passed in as NULL when coming from external API without
- * easy handle!
- *
- */
-
-unsigned int Curl_rand(struct Curl_easy *data)
-{
-  unsigned int r = 0;
-  static unsigned int randseed;
-  static bool seeded = FALSE;
-
-#ifdef CURLDEBUG
-  char *force_entropy = getenv("CURL_ENTROPY");
-  if(force_entropy) {
-    if(!seeded) {
-      size_t elen = strlen(force_entropy);
-      size_t clen = sizeof(randseed);
-      size_t min = elen < clen ? elen : clen;
-      memcpy((char *)&randseed, force_entropy, min);
-      seeded = TRUE;
-    }
-    else
-      randseed++;
-    return randseed;
-  }
-#endif
-
-  /* data may be NULL! */
-  if(!Curl_ssl_random(data, (unsigned char *)&r, sizeof(r)))
-    return r;
-
-  /* If Curl_ssl_random() returns non-zero it couldn't offer randomness and we
-     instead perform a "best effort" */
-
-#ifdef RANDOM_FILE
-  if(!seeded) {
-    /* if there's a random file to read a seed from, use it */
-    int fd = open(RANDOM_FILE, O_RDONLY);
-    if(fd > -1) {
-      /* read random data into the randseed variable */
-      ssize_t nread = read(fd, &randseed, sizeof(randseed));
-      if(nread == sizeof(randseed))
-        seeded = TRUE;
-      close(fd);
-    }
-  }
-#endif
-
-  if(!seeded) {
-    struct timeval now = curlx_tvnow();
-    infof(data, "WARNING: Using weak random seed\n");
-    randseed += (unsigned int)now.tv_usec + (unsigned int)now.tv_sec;
-    randseed = randseed * 1103515245 + 12345;
-    randseed = randseed * 1103515245 + 12345;
-    randseed = randseed * 1103515245 + 12345;
-    seeded = TRUE;
-  }
-
-  /* Return an unsigned 32-bit pseudo-random number. */
-  r = randseed = randseed * 1103515245 + 12345;
-  return (r << 16) | ((r >> 16) & 0xFFFF);
-}
-
 int Curl_ssl_backend(void)
 {
   return (int)CURL_SSL_BACKEND;
 }
 
 #ifdef USE_SSL
@@ -285,25 +170,47 @@
   }
 }
 
 static bool ssl_prefs_check(struct Curl_easy *data)
 {
   /* check for CURLOPT_SSLVERSION invalid parameter value */
-  if((data->set.ssl.version < 0)
-     || (data->set.ssl.version >= CURL_SSLVERSION_LAST)) {
+  if((data->set.ssl.primary.version < 0)
+     || (data->set.ssl.primary.version >= CURL_SSLVERSION_LAST)) {
     failf(data, "Unrecognized parameter value passed via CURLOPT_SSLVERSION");
     return FALSE;
   }
   return TRUE;
 }
 
+static CURLcode
+ssl_connect_init_proxy(struct connectdata *conn, int sockindex)
+{
+  DEBUGASSERT(conn->bits.proxy_ssl_connected[sockindex]);
+  if(ssl_connection_complete == conn->ssl[sockindex].state &&
+     !conn->proxy_ssl[sockindex].use) {
+#if defined(HTTPS_PROXY_SUPPORT)
+    conn->proxy_ssl[sockindex] = conn->ssl[sockindex];
+    memset(&conn->ssl[sockindex], 0, sizeof(conn->ssl[sockindex]));
+#else
+    return CURLE_NOT_BUILT_IN;
+#endif
+  }
+  return CURLE_OK;
+}
+
 CURLcode
 Curl_ssl_connect(struct connectdata *conn, int sockindex)
 {
   CURLcode result;
 
+  if(conn->bits.proxy_ssl_connected[sockindex]) {
+    result = ssl_connect_init_proxy(conn, sockindex);
+    if(result)
+      return result;
+  }
+
   if(!ssl_prefs_check(conn->data))
     return CURLE_SSL_CONNECT_ERROR;
 
   /* mark this is being ssl-enabled from here on. */
   conn->ssl[sockindex].use = TRUE;
   conn->ssl[sockindex].state = ssl_connection_negotiating;
@@ -318,12 +225,17 @@
 
 CURLcode
 Curl_ssl_connect_nonblocking(struct connectdata *conn, int sockindex,
                              bool *done)
 {
   CURLcode result;
+  if(conn->bits.proxy_ssl_connected[sockindex]) {
+    result = ssl_connect_init_proxy(conn, sockindex);
+    if(result)
+      return result;
+  }
 
   if(!ssl_prefs_check(conn->data))
     return CURLE_SSL_CONNECT_ERROR;
 
   /* mark this is being ssl requested from here on. */
   conn->ssl[sockindex].use = TRUE;
@@ -360,49 +272,57 @@
 /*
  * Check if there's a session ID for the given connection in the cache, and if
  * there's one suitable, it is provided. Returns TRUE when no entry matched.
  */
 bool Curl_ssl_getsessionid(struct connectdata *conn,
                            void **ssl_sessionid,
-                           size_t *idsize) /* set 0 if unknown */
+                           size_t *idsize, /* set 0 if unknown */
+                           int sockindex)
 {
   struct curl_ssl_session *check;
   struct Curl_easy *data = conn->data;
   size_t i;
   long *general_age;
   bool no_match = TRUE;
 
+  const bool isProxy = CONNECT_PROXY_SSL();
+  struct ssl_primary_config * const ssl_config = isProxy ?
+                                                 &conn->proxy_ssl_config :
+                                                 &conn->ssl_config;
+  const char * const name = isProxy ? conn->http_proxy.host.name :
+                                      conn->host.name;
+  int port = isProxy ? (int)conn->port : conn->remote_port;
   *ssl_sessionid = NULL;
 
-  DEBUGASSERT(conn->ssl_config.sessionid);
+  DEBUGASSERT(data->set.general_ssl.sessionid);
 
-  if(!conn->ssl_config.sessionid)
+  if(!data->set.general_ssl.sessionid)
     /* session ID re-use is disabled */
     return TRUE;
 
   /* Lock if shared */
   if(SSLSESSION_SHARED(data))
     general_age = &data->share->sessionage;
   else
     general_age = &data->state.sessionage;
 
-  for(i = 0; i < data->set.ssl.max_ssl_sessions; i++) {
+  for(i = 0; i < data->set.general_ssl.max_ssl_sessions; i++) {
     check = &data->state.session[i];
     if(!check->sessionid)
       /* not session ID means blank entry */
       continue;
-    if(strcasecompare(conn->host.name, check->name) &&
+    if(strcasecompare(name, check->name) &&
        ((!conn->bits.conn_to_host && !check->conn_to_host) ||
         (conn->bits.conn_to_host && check->conn_to_host &&
          strcasecompare(conn->conn_to_host.name, check->conn_to_host))) &&
        ((!conn->bits.conn_to_port && check->conn_to_port == -1) ||
         (conn->bits.conn_to_port && check->conn_to_port != -1 &&
          conn->conn_to_port == check->conn_to_port)) &&
-       (conn->remote_port == check->remote_port) &&
+       (port == check->remote_port) &&
        strcasecompare(conn->handler->scheme, check->scheme) &&
-       Curl_ssl_config_matches(&conn->ssl_config, &check->ssl_config)) {
+       Curl_ssl_config_matches(ssl_config, &check->ssl_config)) {
       /* yes, we have a session ID! */
       (*general_age)++;          /* increase general age */
       check->age = *general_age; /* set this as used in this age */
       *ssl_sessionid = check->sessionid;
       if(idsize)
         *idsize = check->idsize;
@@ -425,13 +345,13 @@
     /* free the ID the SSL-layer specific way */
     curlssl_session_free(session->sessionid);
 
     session->sessionid = NULL;
     session->age = 0; /* fresh */
 
-    Curl_free_ssl_config(&session->ssl_config);
+    Curl_free_primary_ssl_config(&session->ssl_config);
 
     Curl_safefree(session->name);
     Curl_safefree(session->conn_to_host);
   }
 }
 
@@ -440,13 +360,13 @@
  */
 void Curl_ssl_delsessionid(struct connectdata *conn, void *ssl_sessionid)
 {
   size_t i;
   struct Curl_easy *data=conn->data;
 
-  for(i = 0; i < data->set.ssl.max_ssl_sessions; i++) {
+  for(i = 0; i < data->set.general_ssl.max_ssl_sessions; i++) {
     struct curl_ssl_session *check = &data->state.session[i];
 
     if(check->sessionid == ssl_sessionid) {
       Curl_ssl_kill_session(check);
       break;
     }
@@ -458,26 +378,31 @@
  * must already have been extracted and allocated the proper way for the SSL
  * layer. Curl_XXXX_session_free() will be called to free/kill the session ID
  * later on.
  */
 CURLcode Curl_ssl_addsessionid(struct connectdata *conn,
                                void *ssl_sessionid,
-                               size_t idsize)
+                               size_t idsize,
+                               int sockindex)
 {
   size_t i;
   struct Curl_easy *data=conn->data; /* the mother of all structs */
   struct curl_ssl_session *store = &data->state.session[0];
   long oldest_age=data->state.session[0].age; /* zero if unused */
   char *clone_host;
   char *clone_conn_to_host;
   int conn_to_port;
   long *general_age;
+  const bool isProxy = CONNECT_PROXY_SSL();
+  struct ssl_primary_config * const ssl_config = isProxy ?
+                                           &conn->proxy_ssl_config :
+                                           &conn->ssl_config;
 
-  DEBUGASSERT(conn->ssl_config.sessionid);
+  DEBUGASSERT(data->set.general_ssl.sessionid);
 
-  clone_host = strdup(conn->host.name);
+  clone_host = strdup(isProxy ? conn->http_proxy.host.name : conn->host.name);
   if(!clone_host)
     return CURLE_OUT_OF_MEMORY; /* bail out */
 
   if(conn->bits.conn_to_host) {
     clone_conn_to_host = strdup(conn->conn_to_host.name);
     if(!clone_conn_to_host) {
@@ -502,20 +427,20 @@
   }
   else {
     general_age = &data->state.sessionage;
   }
 
   /* find an empty slot for us, or find the oldest */
-  for(i = 1; (i < data->set.ssl.max_ssl_sessions) &&
+  for(i = 1; (i < data->set.general_ssl.max_ssl_sessions) &&
         data->state.session[i].sessionid; i++) {
     if(data->state.session[i].age < oldest_age) {
       oldest_age = data->state.session[i].age;
       store = &data->state.session[i];
     }
   }
-  if(i == data->set.ssl.max_ssl_sessions)
+  if(i == data->set.general_ssl.max_ssl_sessions)
     /* cache is full, we must "kill" the oldest entry! */
     Curl_ssl_kill_session(store);
   else
     store = &data->state.session[i]; /* use this slot */
 
   /* now init the session struct wisely */
@@ -525,16 +450,17 @@
     /* free it if there's one already present */
   free(store->name);
   free(store->conn_to_host);
   store->name = clone_host;               /* clone host name */
   store->conn_to_host = clone_conn_to_host; /* clone connect to host name */
   store->conn_to_port = conn_to_port; /* connect to port number */
-  store->remote_port = conn->remote_port; /* port number */
+  /* port number */
+  store->remote_port = isProxy ? (int)conn->port : conn->remote_port;
   store->scheme = conn->handler->scheme;
 
-  if(!Curl_clone_ssl_config(&conn->ssl_config, &store->ssl_config)) {
+  if(!Curl_clone_primary_ssl_config(ssl_config, &store->ssl_config)) {
     store->sessionid = NULL; /* let caller free sessionid */
     free(clone_host);
     free(clone_conn_to_host);
     return CURLE_OUT_OF_MEMORY;
   }
 
@@ -544,23 +470,60 @@
 
 void Curl_ssl_close_all(struct Curl_easy *data)
 {
   size_t i;
   /* kill the session ID cache if not shared */
   if(data->state.session && !SSLSESSION_SHARED(data)) {
-    for(i = 0; i < data->set.ssl.max_ssl_sessions; i++)
+    for(i = 0; i < data->set.general_ssl.max_ssl_sessions; i++)
       /* the single-killer function handles empty table slots */
       Curl_ssl_kill_session(&data->state.session[i]);
 
     /* free the cache data */
     Curl_safefree(data->state.session);
   }
 
   curlssl_close_all(data);
 }
 
+#if defined(USE_SSLEAY) || defined(USE_GNUTLS) || defined(USE_SCHANNEL) || \
+    defined(USE_DARWINSSL) || defined(USE_NSS)
+/* This function is for OpenSSL, GnuTLS, darwinssl, and schannel only. */
+int Curl_ssl_getsock(struct connectdata *conn, curl_socket_t *socks,
+                     int numsocks)
+{
+  struct ssl_connect_data *connssl = &conn->ssl[FIRSTSOCKET];
+
+  if(!numsocks)
+    return GETSOCK_BLANK;
+
+  if(connssl->connecting_state == ssl_connect_2_writing) {
+    /* write mode */
+    socks[0] = conn->sock[FIRSTSOCKET];
+    return GETSOCK_WRITESOCK(0);
+  }
+  else if(connssl->connecting_state == ssl_connect_2_reading) {
+    /* read mode */
+    socks[0] = conn->sock[FIRSTSOCKET];
+    return GETSOCK_READSOCK(0);
+  }
+
+  return GETSOCK_BLANK;
+}
+#else
+int Curl_ssl_getsock(struct connectdata *conn,
+                          curl_socket_t *socks,
+                          int numsocks)
+{
+  (void)conn;
+  (void)socks;
+  (void)numsocks;
+  return GETSOCK_BLANK;
+}
+/* USE_SSLEAY || USE_GNUTLS || USE_SCHANNEL || USE_DARWINSSL || USE_NSS */
+#endif
+
 void Curl_ssl_close(struct connectdata *conn, int sockindex)
 {
   DEBUGASSERT((sockindex <= 1) && (sockindex >= -1));
   curlssl_close(conn, sockindex);
 }
 
@@ -612,13 +575,13 @@
 
   session = calloc(amount, sizeof(struct curl_ssl_session));
   if(!session)
     return CURLE_OUT_OF_MEMORY;
 
   /* store the info in the SSL section */
-  data->set.ssl.max_ssl_sessions = amount;
+  data->set.general_ssl.max_ssl_sessions = amount;
   data->state.session = session;
   data->state.sessionage = 1; /* this is brand new */
   return CURLE_OK;
 }
 
 size_t Curl_ssl_version(char *buffer, size_t size)
@@ -688,15 +651,15 @@
 CURLcode Curl_ssl_push_certinfo_len(struct Curl_easy *data,
                                     int certnum,
                                     const char *label,
                                     const char *value,
                                     size_t valuelen)
 {
-  struct curl_certinfo * ci = &data->info.certs;
-  char * output;
-  struct curl_slist * nl;
+  struct curl_certinfo *ci = &data->info.certs;
+  char *output;
+  struct curl_slist *nl;
   CURLcode result = CURLE_OK;
   size_t labellen = strlen(label);
   size_t outlen = labellen + 1 + valuelen + 1; /* label:value\0 */
 
   output = malloc(outlen);
   if(!output)
@@ -733,17 +696,22 @@
 {
   size_t valuelen = strlen(value);
 
   return Curl_ssl_push_certinfo_len(data, certnum, label, value, valuelen);
 }
 
-int Curl_ssl_random(struct Curl_easy *data,
-                     unsigned char *entropy,
-                     size_t length)
-{
-  return curlssl_random(data, entropy, length);
+CURLcode Curl_ssl_random(struct Curl_easy *data,
+                         unsigned char *entropy,
+                         size_t length)
+{
+  int rc = curlssl_random(data, entropy, length);
+  if(rc) {
+    failf(data, "PRNG seeding failed");
+    return CURLE_FAILED_INIT; /* possibly weird return code */
+  }
+  return CURLE_OK;
 }
 
 /*
  * Public key pem to der conversion
  */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/vtls.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/vtls.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/vtls/vtls.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/vtls/vtls.h	2016-12-19 15:27:56.000000000 +0800
@@ -47,19 +47,30 @@
 #endif
 
 /* see https://tools.ietf.org/html/draft-ietf-tls-applayerprotoneg-04 */
 #define ALPN_HTTP_1_1_LENGTH 8
 #define ALPN_HTTP_1_1 "http/1.1"
 
-bool Curl_ssl_config_matches(struct ssl_config_data* data,
-                             struct ssl_config_data* needle);
-bool Curl_clone_ssl_config(struct ssl_config_data* source,
-                           struct ssl_config_data* dest);
-void Curl_free_ssl_config(struct ssl_config_data* sslc);
+/* set of helper macros for the backends to access the correct fields. For the
+   proxy or for the remote host - to properly support HTTPS proxy */
 
-unsigned int Curl_rand(struct Curl_easy *);
+#define SSL_IS_PROXY() (CURLPROXY_HTTPS == conn->http_proxy.proxytype && \
+  ssl_connection_complete != conn->proxy_ssl[conn->sock[SECONDARYSOCKET] == \
+  CURL_SOCKET_BAD ? FIRSTSOCKET : SECONDARYSOCKET].state)
+#define SSL_SET_OPTION(var) (SSL_IS_PROXY() ? data->set.proxy_ssl.var : \
+                             data->set.ssl.var)
+#define SSL_CONN_CONFIG(var) (SSL_IS_PROXY() ?          \
+  conn->proxy_ssl_config.var : conn->ssl_config.var)
+
+bool Curl_ssl_config_matches(struct ssl_primary_config* data,
+                             struct ssl_primary_config* needle);
+bool Curl_clone_primary_ssl_config(struct ssl_primary_config *source,
+                                   struct ssl_primary_config *dest);
+void Curl_free_primary_ssl_config(struct ssl_primary_config* sslc);
+int Curl_ssl_getsock(struct connectdata *conn, curl_socket_t *socks,
+                     int numsocks);
 
 int Curl_ssl_backend(void);
 
 #ifdef USE_SSL
 int Curl_ssl_init(void);
 void Curl_ssl_cleanup(void);
@@ -84,18 +95,18 @@
                            int connindex);
 int Curl_ssl_check_cxn(struct connectdata *conn);
 
 /* Certificate information list handling. */
 
 void Curl_ssl_free_certinfo(struct Curl_easy *data);
-CURLcode Curl_ssl_init_certinfo(struct Curl_easy * data, int num);
-CURLcode Curl_ssl_push_certinfo_len(struct Curl_easy * data, int certnum,
-                                    const char * label, const char * value,
+CURLcode Curl_ssl_init_certinfo(struct Curl_easy *data, int num);
+CURLcode Curl_ssl_push_certinfo_len(struct Curl_easy *data, int certnum,
+                                    const char *label, const char *value,
                                     size_t valuelen);
-CURLcode Curl_ssl_push_certinfo(struct Curl_easy * data, int certnum,
-                                const char * label, const char * value);
+CURLcode Curl_ssl_push_certinfo(struct Curl_easy *data, int certnum,
+                                const char *label, const char *value);
 
 /* Functions to be used by SSL library adaptation functions */
 
 /* Lock session cache mutex.
  * Call this before calling other Curl_ssl_*session* functions
  * Caller should unlock this mutex as soon as possible, as it may block
@@ -113,21 +124,23 @@
  * Caller must make sure that the ownership of returned sessionid object
  * is properly taken (e.g. its refcount is incremented
  * under sessionid mutex).
  */
 bool Curl_ssl_getsessionid(struct connectdata *conn,
                            void **ssl_sessionid,
-                           size_t *idsize); /* set 0 if unknown */
+                           size_t *idsize, /* set 0 if unknown */
+                           int sockindex);
 /* add a new session ID
  * Sessionid mutex must be locked (see Curl_ssl_sessionid_lock).
  * Caller must ensure that it has properly shared ownership of this sessionid
  * object with cache (e.g. incrementing refcount on success)
  */
 CURLcode Curl_ssl_addsessionid(struct connectdata *conn,
                                void *ssl_sessionid,
-                               size_t idsize);
+                               size_t idsize,
+                               int sockindex);
 /* Kill a single session ID entry in the cache
  * Sessionid mutex must be locked (see Curl_ssl_sessionid_lock).
  * This will call engine-specific curlssl_session_free function, which must
  * take sessionid object ownership from sessionid cache
  * (e.g. decrement refcount).
  */
@@ -137,16 +150,15 @@
  * This will call engine-specific curlssl_session_free function, which must
  * take sessionid object ownership from sessionid cache
  * (e.g. decrement refcount).
  */
 void Curl_ssl_delsessionid(struct connectdata *conn, void *ssl_sessionid);
 
-/* get N random bytes into the buffer, return 0 if a find random is filled
-   in */
-int Curl_ssl_random(struct Curl_easy *data, unsigned char *buffer,
-                    size_t length);
+/* get N random bytes into the buffer */
+CURLcode Curl_ssl_random(struct Curl_easy *data, unsigned char *buffer,
+                         size_t length);
 CURLcode Curl_ssl_md5sum(unsigned char *tmp, /* input */
                          size_t tmplen,
                          unsigned char *md5sum, /* output */
                          size_t md5len);
 /* Check pinned public key. */
 CURLcode Curl_pin_peer_pubkey(struct Curl_easy *data,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/x509asn1.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/x509asn1.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/x509asn1.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/x509asn1.c	2016-12-19 15:27:56.000000000 +0800
@@ -37,12 +37,15 @@
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
 
+/* For overflow checks. */
+#define CURL_SIZE_T_MAX         ((size_t)-1)
+
 
 /* ASN.1 OIDs. */
 static const char       cnOID[] = "2.5.4.3";    /* Common name. */
 static const char       sanOID[] = "2.5.29.17"; /* Subject alternative name. */
 
 static const curl_OID   OIDtable[] = {
@@ -102,25 +105,25 @@
  * that offer a mean to get certificates as a whole, but do not supply
  * entry points to get particular certificate sub-fields.
  * Please note there is no pretention here to rewrite a full SSL library.
  */
 
 
-const char * Curl_getASN1Element(curl_asn1Element * elem,
-                                 const char * beg, const char * end)
+const char *Curl_getASN1Element(curl_asn1Element *elem,
+                                const char *beg, const char *end)
 {
   unsigned char b;
   unsigned long len;
   curl_asn1Element lelem;
 
   /* Get a single ASN.1 element into `elem', parse ASN.1 string at `beg'
      ending at `end'.
      Returns a pointer in source string after the parsed element, or NULL
      if an error occurs. */
-
-  if(beg >= end || !*beg)
+  if(!beg || !end || beg >= end || !*beg ||
+     (size_t)(end - beg) > CURL_ASN1_MAX)
     return (const char *) NULL;
 
   /* Process header byte. */
   elem->header = beg;
   b = (unsigned char) *beg++;
   elem->constructed = (b & 0x20) != 0;
@@ -149,81 +152,83 @@
     }
     if(beg >= end)
       return (const char *) NULL;
     elem->end = beg;
     return beg + 1;
   }
-  else if(beg + b > end)
+  else if((unsigned)b > (size_t)(end - beg))
     return (const char *) NULL; /* Does not fit in source. */
   else {
     /* Get long length. */
     len = 0;
     do {
       if(len & 0xFF000000L)
         return (const char *) NULL;  /* Lengths > 32 bits are not supported. */
       len = (len << 8) | (unsigned char) *beg++;
     } while(--b);
   }
-  if((unsigned long) (end - beg) < len)
+  if(len > (size_t)(end - beg))
     return (const char *) NULL;  /* Element data does not fit in source. */
   elem->beg = beg;
   elem->end = beg + len;
   return elem->end;
 }
 
-static const curl_OID * searchOID(const char * oid)
+static const curl_OID * searchOID(const char *oid)
 {
-  const curl_OID * op;
+  const curl_OID *op;
 
   /* Search the null terminated OID or OID identifier in local table.
      Return the table entry pointer or NULL if not found. */
 
   for(op = OIDtable; op->numoid; op++)
     if(!strcmp(op->numoid, oid) || strcasecompare(op->textoid, oid))
       return op;
 
   return (const curl_OID *) NULL;
 }
 
-static const char * bool2str(const char * beg, const char * end)
+static const char *bool2str(const char *beg, const char *end)
 {
   /* Convert an ASN.1 Boolean value into its string representation.
      Return the dynamically allocated string, or NULL if source is not an
      ASN.1 Boolean value. */
 
   if(end - beg != 1)
     return (const char *) NULL;
   return strdup(*beg? "TRUE": "FALSE");
 }
 
-static const char * octet2str(const char * beg, const char * end)
+static const char *octet2str(const char *beg, const char *end)
 {
   size_t n = end - beg;
-  char * buf;
+  char *buf = NULL;
 
   /* Convert an ASN.1 octet string to a printable string.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
-  buf = malloc(3 * n + 1);
-  if(buf)
-    for(n = 0; beg < end; n += 3)
-      snprintf(buf + n, 4, "%02x:", *(const unsigned char *) beg++);
+  if(n <= (CURL_SIZE_T_MAX - 1) / 3) {
+    buf = malloc(3 * n + 1);
+    if(buf)
+      for(n = 0; beg < end; n += 3)
+        snprintf(buf + n, 4, "%02x:", *(const unsigned char *) beg++);
+  }
   return buf;
 }
 
-static const char * bit2str(const char * beg, const char * end)
+static const char *bit2str(const char *beg, const char *end)
 {
   /* Convert an ASN.1 bit string to a printable string.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
   if(++beg > end)
     return (const char *) NULL;
   return octet2str(beg, end);
 }
 
-static const char * int2str(const char * beg, const char * end)
+static const char *int2str(const char *beg, const char *end)
 {
   long val = 0;
   size_t n = end - beg;
 
   /* Convert an ASN.1 integer value into its string representation.
      Return the dynamically allocated string, or NULL if source is not an
@@ -243,29 +248,29 @@
     val = (val << 8) | *(const unsigned char *) beg++;
   while(beg < end);
   return curl_maprintf("%s%lx", (val < 0 || val >= 10)? "0x": "", val);
 }
 
 static ssize_t
-utf8asn1str(char * * to, int type, const char * from, const char * end)
+utf8asn1str(char **to, int type, const char *from, const char *end)
 {
   size_t inlength = end - from;
   int size = 1;
   size_t outlength;
   int charsize;
   unsigned int wc;
-  char * buf;
+  char *buf;
 
   /* Perform a lazy conversion from an ASN.1 typed string to UTF8. Allocate the
      destination buffer dynamically. The allocation size will normally be too
      large: this is to avoid buffer overflows.
      Terminate the string with a nul byte and return the converted
      string length. */
 
   *to = (char *) NULL;
-  switch (type) {
+  switch(type) {
   case CURL_ASN1_BMP_STRING:
     size = 2;
     break;
   case CURL_ASN1_UNIVERSAL_STRING:
     size = 4;
     break;
@@ -279,12 +284,14 @@
   default:
     return -1;  /* Conversion not supported. */
   }
 
   if(inlength % size)
     return -1;  /* Length inconsistent with character size. */
+  if(inlength / size > (CURL_SIZE_T_MAX - 1) / 4)
+    return -1;  /* Too big. */
   buf = malloc(4 * (inlength / size) + 1);
   if(!buf)
     return -1;  /* Not enough memory. */
 
   if(type == CURL_ASN1_UTF8_STRING) {
     /* Just copy. */
@@ -292,13 +299,13 @@
     if(outlength)
       memcpy(buf, from, outlength);
   }
   else {
     for(outlength = 0; from < end;) {
       wc = 0;
-      switch (size) {
+      switch(size) {
       case 4:
         wc = (wc << 8) | *(const unsigned char *) from++;
         wc = (wc << 8) | *(const unsigned char *) from++;
         /* fallthrough */
       case 2:
         wc = (wc << 8) | *(const unsigned char *) from++;
@@ -332,25 +339,25 @@
   }
   buf[outlength] = '\0';
   *to = buf;
   return outlength;
 }
 
-static const char * string2str(int type, const char * beg, const char * end)
+static const char *string2str(int type, const char *beg, const char *end)
 {
-  char * buf;
+  char *buf;
 
   /* Convert an ASN.1 String into its UTF-8 string representation.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
   if(utf8asn1str(&buf, type, beg, end) < 0)
     return (const char *) NULL;
   return buf;
 }
 
-static int encodeUint(char * buf, int n, unsigned int x)
+static int encodeUint(char *buf, int n, unsigned int x)
 {
   int i = 0;
   unsigned int y = x / 10;
 
   /* Decimal ASCII encode unsigned integer `x' in the `n'-byte buffer at `buf'.
      Return the total number of encoded digits, even if larger than `n'. */
@@ -364,13 +371,13 @@
   i++;
   if(i < n)
     buf[i] = '\0';      /* Store a terminator if possible. */
   return i;
 }
 
-static int encodeOID(char * buf, int n, const char * beg, const char * end)
+static int encodeOID(char *buf, int n, const char *beg, const char *end)
 {
   int i = 0;
   unsigned int x;
   unsigned int y;
 
   /* Convert an ASN.1 OID into its dotted string representation.
@@ -403,15 +410,15 @@
   }
   if(i < n)
     buf[i] = '\0';
   return i;
 }
 
-static const char * OID2str(const char * beg, const char * end, bool symbolic)
+static const char *OID2str(const char *beg, const char *end, bool symbolic)
 {
-  char * buf = (char *) NULL;
+  char *buf = (char *) NULL;
   const curl_OID * op;
   int n;
 
   /* Convert an ASN.1 OID into its dotted or symbolic string representation.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
@@ -433,30 +440,30 @@
       }
     }
   }
   return buf;
 }
 
-static const char * GTime2str(const char * beg, const char * end)
+static const char *GTime2str(const char *beg, const char *end)
 {
-  const char * tzp;
-  const char * fracp;
+  const char *tzp;
+  const char *fracp;
   char sec1, sec2;
   size_t fracl;
   size_t tzl;
-  const char * sep = "";
+  const char *sep = "";
 
   /* Convert an ASN.1 Generalized time to a printable string.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
   for(fracp = beg; fracp < end && *fracp >= '0' && *fracp <= '9'; fracp++)
     ;
 
   /* Get seconds digits. */
   sec1 = '0';
-  switch (fracp - beg - 12) {
+  switch(fracp - beg - 12) {
   case 0:
     sec2 = '0';
     break;
   case 2:
     sec1 = fracp[-2];
   case 1:
@@ -496,26 +503,26 @@
                        beg, beg + 4, beg + 6,
                        beg + 8, beg + 10, sec1, sec2,
                        fracl? ".": "", fracl, fracp,
                        sep, tzl, tzp);
 }
 
-static const char * UTime2str(const char * beg, const char * end)
+static const char *UTime2str(const char *beg, const char *end)
 {
-  const char * tzp;
+  const char *tzp;
   size_t tzl;
-  const char * sec;
+  const char *sec;
 
   /* Convert an ASN.1 UTC time to a printable string.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
   for(tzp = beg; tzp < end && *tzp >= '0' && *tzp <= '9'; tzp++)
     ;
   /* Get the seconds. */
   sec = beg + 10;
-  switch (tzp - sec) {
+  switch(tzp - sec) {
   case 0:
     sec = "00";
   case 2:
     break;
   default:
     return (const char *) NULL;
@@ -535,24 +542,24 @@
   return curl_maprintf("%u%.2s-%.2s-%.2s %.2s:%.2s:%.2s %.*s",
                        20 - (*beg >= '5'), beg, beg + 2, beg + 4,
                        beg + 6, beg + 8, sec,
                        tzl, tzp);
 }
 
-const char * Curl_ASN1tostr(curl_asn1Element * elem, int type)
+const char *Curl_ASN1tostr(curl_asn1Element *elem, int type)
 {
   /* Convert an ASN.1 element to a printable string.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
   if(elem->constructed)
     return (const char *) NULL; /* No conversion of structured elements. */
 
   if(!type)
     type = elem->tag;   /* Type not forced: use element tag as type. */
 
-  switch (type) {
+  switch(type) {
   case CURL_ASN1_BOOLEAN:
     return bool2str(elem->beg, elem->end);
   case CURL_ASN1_INTEGER:
   case CURL_ASN1_ENUMERATED:
     return int2str(elem->beg, elem->end);
   case CURL_ASN1_BIT_STRING:
@@ -578,23 +585,23 @@
     return string2str(type, elem->beg, elem->end);
   }
 
   return (const char *) NULL;   /* Unsupported. */
 }
 
-static ssize_t encodeDN(char * buf, size_t n, curl_asn1Element * dn)
+static ssize_t encodeDN(char *buf, size_t n, curl_asn1Element *dn)
 {
   curl_asn1Element rdn;
   curl_asn1Element atv;
   curl_asn1Element oid;
   curl_asn1Element value;
   size_t l = 0;
-  const char * p1;
-  const char * p2;
-  const char * p3;
-  const char * str;
+  const char *p1;
+  const char *p2;
+  const char *p3;
+  const char *str;
 
   /* ASCII encode distinguished name at `dn' into the `n'-byte buffer at `buf'.
      Return the total string length, even if larger than `n'. */
 
   for(p1 = dn->beg; p1 < dn->end;) {
     p1 = Curl_getASN1Element(&rdn, p1, dn->end);
@@ -644,15 +651,15 @@
     }
   }
 
   return l;
 }
 
-const char * Curl_DNtostr(curl_asn1Element * dn)
+const char *Curl_DNtostr(curl_asn1Element *dn)
 {
-  char * buf = (char *) NULL;
+  char *buf = (char *) NULL;
   ssize_t n = encodeDN(buf, 0, dn);
 
   /* Convert an ASN.1 distinguished name into a printable string.
      Return the dynamically allocated string, or NULL if an error occurs. */
 
   if(n >= 0) {
@@ -666,30 +673,31 @@
 }
 
 /*
  * X509 parser.
  */
 
-void Curl_parseX509(curl_X509certificate * cert,
-                    const char * beg, const char * end)
+int Curl_parseX509(curl_X509certificate *cert,
+                   const char *beg, const char *end)
 {
   curl_asn1Element elem;
   curl_asn1Element tbsCertificate;
-  const char * ccp;
+  const char *ccp;
   static const char defaultVersion = 0;  /* v1. */
 
   /* ASN.1 parse an X509 certificate into structure subfields.
      Syntax is assumed to have already been checked by the SSL backend.
      See RFC 5280. */
 
   cert->certificate.header = NULL;
   cert->certificate.beg = beg;
   cert->certificate.end = end;
 
   /* Get the sequence content. */
-  Curl_getASN1Element(&elem, beg, end);
+  if(!Curl_getASN1Element(&elem, beg, end))
+    return -1;  /* Invalid bounds/size. */
   beg = elem.beg;
   end = elem.end;
 
   /* Get tbsCertificate. */
   beg = Curl_getASN1Element(&tbsCertificate, beg, end);
   /* Skip the signatureAlgorithm. */
@@ -746,15 +754,16 @@
     cert->subjectUniqueID = elem;
     if(beg < end)
       beg = Curl_getASN1Element(&elem, beg, end);
   }
   if(elem.tag == 3)
     Curl_getASN1Element(&cert->extensions, elem.beg, elem.end);
+  return 0;
 }
 
-static size_t copySubstring(char * to, const char * from)
+static size_t copySubstring(char *to, const char *from)
 {
   size_t i;
 
   /* Copy at most 64-characters, terminate with a newline and returns the
      effective number of stored characters. */
 
@@ -765,14 +774,14 @@
   }
 
   to[i++] = '\n';
   return i;
 }
 
-static const char * dumpAlgo(curl_asn1Element * param,
-                             const char * beg, const char * end)
+static const char *dumpAlgo(curl_asn1Element *param,
+                            const char *beg, const char *end)
 {
   curl_asn1Element oid;
 
   /* Get algorithm parameters and return algorithm name. */
 
   beg = Curl_getASN1Element(&oid, beg, end);
@@ -781,16 +790,16 @@
   param->beg = param->end = end;
   if(beg < end)
     Curl_getASN1Element(param, beg, end);
   return OID2str(oid.beg, oid.end, TRUE);
 }
 
-static void do_pubkey_field(struct Curl_easy * data, int certnum,
-                            const char * label, curl_asn1Element * elem)
+static void do_pubkey_field(struct Curl_easy *data, int certnum,
+                            const char *label, curl_asn1Element *elem)
 {
-  const char * output;
+  const char *output;
 
   /* Generate a certificate information record for the public key. */
 
   output = Curl_ASN1tostr(elem, 0);
   if(output) {
     if(data->set.ssl.certinfo)
@@ -798,20 +807,20 @@
     if(!certnum)
       infof(data, "   %s: %s\n", label, output);
     free((char *) output);
   }
 }
 
-static void do_pubkey(struct Curl_easy * data, int certnum,
-                      const char * algo, curl_asn1Element * param,
-                      curl_asn1Element * pubkey)
+static void do_pubkey(struct Curl_easy *data, int certnum,
+                      const char *algo, curl_asn1Element *param,
+                      curl_asn1Element *pubkey)
 {
   curl_asn1Element elem;
   curl_asn1Element pk;
-  const char * p;
-  const char * q;
+  const char *p;
+  const char *q;
   unsigned long len;
   unsigned int i;
 
   /* Generate all information records for the public key. */
 
   /* Get the public key (single element). */
@@ -862,37 +871,38 @@
   else if(strcasecompare(algo, "ecPublicKey")) {
     /* Left TODO. */
   }
 #endif
 }
 
-CURLcode Curl_extract_certinfo(struct connectdata * conn,
+CURLcode Curl_extract_certinfo(struct connectdata *conn,
                                int certnum,
-                               const char * beg,
-                               const char * end)
+                               const char *beg,
+                               const char *end)
 {
   curl_X509certificate cert;
-  struct Curl_easy * data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_asn1Element param;
-  const char * ccp;
-  char * cp1;
+  const char *ccp;
+  char *cp1;
   size_t cl1;
-  char * cp2;
+  char *cp2;
   CURLcode result;
   unsigned long version;
   size_t i;
   size_t j;
 
   if(!data->set.ssl.certinfo)
     if(certnum)
       return CURLE_OK;
 
   /* Prepare the certificate information for curl_easy_getinfo(). */
 
   /* Extract the certificate ASN.1 elements. */
-  Curl_parseX509(&cert, beg, end);
+  if(Curl_parseX509(&cert, beg, end))
+    return CURLE_OUT_OF_MEMORY;
 
   /* Subject. */
   ccp = Curl_DNtostr(&cert.subject);
   if(!ccp)
     return CURLE_OUT_OF_MEMORY;
   if(data->set.ssl.certinfo)
@@ -1026,18 +1036,18 @@
 }
 
 #endif /* USE_GSKIT or USE_NSS or USE_GNUTLS or USE_CYASSL or USE_SCHANNEL */
 
 #if defined(USE_GSKIT)
 
-static const char * checkOID(const char * beg, const char * end,
-                             const char * oid)
+static const char *checkOID(const char *beg, const char *end,
+                            const char *oid)
 {
   curl_asn1Element e;
-  const char * ccp;
-  const char * p;
+  const char *ccp;
+  const char *p;
   bool matched;
 
   /* Check if first ASN.1 element at `beg' is the given OID.
      Return a pointer in the source after the OID if found, else NULL. */
 
   ccp = Curl_getASN1Element(&e, beg, end);
@@ -1050,50 +1060,54 @@
 
   matched = !strcmp(p, oid);
   free((char *) p);
   return matched? ccp: (const char *) NULL;
 }
 
-CURLcode Curl_verifyhost(struct connectdata * conn,
-                         const char * beg, const char * end)
+CURLcode Curl_verifyhost(struct connectdata *conn,
+                         const char *beg, const char *end)
 {
-  struct Curl_easy * data = conn->data;
+  struct Curl_easy *data = conn->data;
   curl_X509certificate cert;
   curl_asn1Element dn;
   curl_asn1Element elem;
   curl_asn1Element ext;
   curl_asn1Element name;
-  const char * p;
-  const char * q;
-  char * dnsname;
+  const char *p;
+  const char *q;
+  char *dnsname;
   int matched = -1;
   size_t addrlen = (size_t) -1;
   ssize_t len;
+  const char * const hostname = SSL_IS_PROXY()? conn->http_proxy.host.name:
+                                                conn->host.name;
+  const char * const dispname = SSL_IS_PROXY()?
+                                  conn->http_proxy.host.dispname:
+                                  conn->host.dispname;
 #ifdef ENABLE_IPV6
   struct in6_addr addr;
 #else
   struct in_addr addr;
 #endif
 
   /* Verify that connection server matches info in X509 certificate at
      `beg'..`end'. */
 
-  if(!data->set.ssl.verifyhost)
+  if(!SSL_CONN_CONFIG(verifyhost))
     return CURLE_OK;
 
-  if(!beg)
+  if(Curl_parseX509(&cert, beg, end))
     return CURLE_PEER_FAILED_VERIFICATION;
-  Curl_parseX509(&cert, beg, end);
 
   /* Get the server IP address. */
 #ifdef ENABLE_IPV6
-  if(conn->bits.ipv6_ip && Curl_inet_pton(AF_INET6, conn->host.name, &addr))
+  if(conn->bits.ipv6_ip && Curl_inet_pton(AF_INET6, hostname, &addr))
     addrlen = sizeof(struct in6_addr);
   else
 #endif
-  if(Curl_inet_pton(AF_INET, conn->host.name, &addr))
+  if(Curl_inet_pton(AF_INET, hostname, &addr))
     addrlen = sizeof(struct in_addr);
 
   /* Process extensions. */
   for(p = cert.extensions.beg; p < cert.extensions.end && matched != 1;) {
     p = Curl_getASN1Element(&ext, p, cert.extensions.end);
     /* Check if extension is a subjectAlternativeName. */
@@ -1105,18 +1119,18 @@
         ext.beg = Curl_getASN1Element(&elem, ext.beg, ext.end);
       /* Parse the octet string contents: is a single sequence. */
       Curl_getASN1Element(&elem, elem.beg, elem.end);
       /* Check all GeneralNames. */
       for(q = elem.beg; matched != 1 && q < elem.end;) {
         q = Curl_getASN1Element(&name, q, elem.end);
-        switch (name.tag) {
+        switch(name.tag) {
         case 2: /* DNS name. */
           len = utf8asn1str(&dnsname, CURL_ASN1_IA5_STRING,
                             name.beg, name.end);
           if(len > 0 && (size_t)len == strlen(dnsname))
-            matched = Curl_cert_hostcheck(dnsname, conn->host.name);
+            matched = Curl_cert_hostcheck(dnsname, hostname);
           else
             matched = 0;
           free(dnsname);
           break;
 
         case 7: /* IP address. */
@@ -1125,21 +1139,21 @@
           break;
         }
       }
     }
   }
 
-  switch (matched) {
+  switch(matched) {
   case 1:
     /* an alternative name matched the server hostname */
-    infof(data, "\t subjectAltName: %s matched\n", conn->host.dispname);
+    infof(data, "\t subjectAltName: %s matched\n", dispname);
     return CURLE_OK;
   case 0:
     /* an alternative name field existed, but didn't match and then
        we MUST fail */
-    infof(data, "\t subjectAltName does not match %s\n", conn->host.dispname);
+    infof(data, "\t subjectAltName does not match %s\n", dispname);
     return CURLE_PEER_FAILED_VERIFICATION;
   }
 
   /* Process subject. */
   name.header = NULL;
   name.beg = name.end = "";
@@ -1165,20 +1179,20 @@
     if(len < 0) {
       free(dnsname);
       return CURLE_OUT_OF_MEMORY;
     }
     if(strlen(dnsname) != (size_t) len)         /* Nul byte in string ? */
       failf(data, "SSL: illegal cert name field");
-    else if(Curl_cert_hostcheck((const char *) dnsname, conn->host.name)) {
+    else if(Curl_cert_hostcheck((const char *) dnsname, hostname)) {
       infof(data, "\t common name: %s (matched)\n", dnsname);
       free(dnsname);
       return CURLE_OK;
     }
     else
       failf(data, "SSL: certificate subject name '%s' does not match "
-            "target host name '%s'", dnsname, conn->host.dispname);
+            "target host name '%s'", dnsname, dispname);
     free(dnsname);
   }
 
   return CURLE_PEER_FAILED_VERIFICATION;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/x509asn1.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/x509asn1.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/lib/x509asn1.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/lib/x509asn1.h	2016-12-19 15:27:56.000000000 +0800
@@ -5,13 +5,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -31,12 +31,15 @@
 #include "urldata.h"
 
 /*
  * Constants.
  */
 
+/* Largest supported ASN.1 structure. */
+#define CURL_ASN1_MAX                   ((size_t) 0x40000)      /* 256K */
+
 /* ASN.1 classes. */
 #define CURL_ASN1_UNIVERSAL             0
 #define CURL_ASN1_APPLICATION           1
 #define CURL_ASN1_CONTEXT_SPECIFIC      2
 #define CURL_ASN1_PRIVATE               3
 
@@ -114,19 +117,18 @@
 
 
 /*
  * Prototypes.
  */
 
-const char * Curl_getASN1Element(curl_asn1Element * elem,
-                                 const char * beg, const char * end);
-const char * Curl_ASN1tostr(curl_asn1Element * elem, int type);
-const char * Curl_DNtostr(curl_asn1Element * dn);
-void Curl_parseX509(curl_X509certificate * cert,
-                    const char * beg, const char * end);
-CURLcode Curl_extract_certinfo(struct connectdata * conn, int certnum,
-                               const char * beg, const char * end);
-CURLcode Curl_verifyhost(struct connectdata * conn,
-                         const char * beg, const char * end);
-
+const char *Curl_getASN1Element(curl_asn1Element *elem,
+                                 const char *beg, const char *end);
+const char *Curl_ASN1tostr(curl_asn1Element *elem, int type);
+const char *Curl_DNtostr(curl_asn1Element *dn);
+int Curl_parseX509(curl_X509certificate *cert,
+                   const char *beg, const char *end);
+CURLcode Curl_extract_certinfo(struct connectdata *conn, int certnum,
+                               const char *beg, const char *end);
+CURLcode Curl_verifyhost(struct connectdata *conn,
+                         const char *beg, const char *end);
 #endif /* USE_GSKIT or USE_NSS or USE_GNUTLS or USE_CYASSL or USE_SCHANNEL */
 #endif /* HEADER_CURL_X509ASN1_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/m4/curl-compilers.m4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/m4/curl-compilers.m4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/m4/curl-compilers.m4	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/m4/curl-compilers.m4	2016-12-19 15:27:56.000000000 +0800
@@ -61,13 +61,13 @@
 *** Warning: This configure script does not have information about the
 *** compiler you are using, relative to the flags required to enable or
 *** disable generation of debug info, optimization options or warnings.
 ***
 *** Whatever settings are present in CFLAGS will be used for this run.
 ***
-*** If you wish to help the cURL project to better support your compiler
+*** If you wish to help the curl project to better support your compiler
 *** you can report this and the required info on the libcurl development
 *** mailing list: https://cool.haxx.se/mailman/listinfo/curl-library/
 ***
 _EOF
   fi
 ])
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/Makefile.in	2016-11-02 14:55:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/Makefile.in	2016-12-21 14:50:22.000000000 +0800
@@ -643,13 +643,13 @@
   inet_ntop.c parsedate.c select.c tftp.c splay.c strdup.c socks.c      \
   ssh.c curl_addrinfo.c socks_gssapi.c socks_sspi.c            \
   curl_sspi.c slist.c nonblock.c curl_memrchr.c imap.c pop3.c smtp.c    \
   pingpong.c rtsp.c curl_threads.c warnless.c hmac.c curl_rtmp.c        \
   openldap.c curl_gethostname.c gopher.c idn_win32.c                    \
   http_proxy.c non-ascii.c asyn-ares.c asyn-thread.c curl_gssapi.c      \
-  http_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_sasl.c               \
+  http_ntlm.c curl_ntlm_wb.c curl_ntlm_core.c curl_sasl.c rand.c        \
   curl_multibyte.c hostcheck.c conncache.c pipeline.c dotdot.c          \
   x509asn1.c http2.c smb.c curl_endian.c curl_des.c system_win32.c
 
 LIB_HFILES = arpa_telnet.h netrc.h file.h timeval.h hostip.h progress.h \
   formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h if2ip.h         \
   speedcheck.h urldata.h curl_ldap.h escape.h telnet.h getinfo.h        \
@@ -664,13 +664,13 @@
   rtsp.h curl_threads.h warnless.h curl_hmac.h curl_rtmp.h              \
   curl_gethostname.h gopher.h http_proxy.h non-ascii.h asyn.h           \
   http_ntlm.h curl_gssapi.h curl_ntlm_wb.h curl_ntlm_core.h             \
   curl_sasl.h curl_multibyte.h hostcheck.h conncache.h                  \
   curl_setup_once.h multihandle.h setup-vms.h pipeline.h dotdot.h       \
   x509asn1.h http2.h sigpipe.h smb.h curl_endian.h curl_des.h           \
-  curl_printf.h system_win32.h
+  curl_printf.h system_win32.h rand.h
 
 LIB_RCFILES = libcurl.rc
 CSOURCES = $(LIB_CFILES) $(LIB_VAUTH_CFILES) $(LIB_VTLS_CFILES)
 HHEADERS = $(LIB_HFILES) $(LIB_VAUTH_HFILES) $(LIB_VTLS_HFILES)
 
 # libcurl has sources that provide functions named curlx_* that aren't part of
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/AIX/RPM/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/AIX/RPM/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/AIX/RPM/README	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/AIX/RPM/README	2016-12-19 15:27:56.000000000 +0800
@@ -26,8 +26,8 @@
 
 Default is to build with ssl support.
 
 Lastly, the spec file expects the Curl source distribution file to be
 in .tar.bz2 format.
 
-The nifty cURL header of this README is a ripoff of the vms/readme file.
+The nifty curl header of this README is a ripoff of the vms/readme file.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/DOS/common.dj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/DOS/common.dj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/DOS/common.dj	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/DOS/common.dj	2016-12-19 15:27:56.000000000 +0800
@@ -1,10 +1,10 @@
 #
 # Common defines for curl (djgpp/Watt-32)
 #
-# Assumes you've unpacked cURL with long-file names
+# Assumes you've unpacked curl with long-file names
 # I.e use "set LFN=y" before untaring on Win9x/XP.
 # Requires sed, yacc, rm and the usual stuff.
 #
 # Define TOPDIR before including this file.
 
 .SUFFIXES: .exe .y
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/OS400/ccsidcurl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/OS400/ccsidcurl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/OS400/ccsidcurl.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/OS400/ccsidcurl.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -612,13 +612,13 @@
   char * * cpp;
   struct Curl_easy * data;
   struct curl_slist * * slp;
   struct curl_certinfo * cipf;
   struct curl_certinfo * cipt;
 
-  /* WARNING: unlike curl_easy_get_info(), the strings returned by this
+  /* WARNING: unlike curl_easy_getinfo(), the strings returned by this
      procedure have to be free'ed. */
 
   data = (struct Curl_easy *) curl;
   va_start(arg, info);
   paramp = va_arg(arg, void *);
   ret = Curl_getinfo(data, info, paramp);
@@ -1144,49 +1144,63 @@
   case CURLOPT_CRLFILE:
   case CURLOPT_CUSTOMREQUEST:
   case CURLOPT_DEFAULT_PROTOCOL:
   case CURLOPT_DNS_SERVERS:
   case CURLOPT_EGDSOCKET:
   case CURLOPT_ENCODING:
+  case CURLOPT_FTPPORT:
   case CURLOPT_FTP_ACCOUNT:
   case CURLOPT_FTP_ALTERNATIVE_TO_USER:
-  case CURLOPT_FTPPORT:
   case CURLOPT_INTERFACE:
   case CURLOPT_ISSUERCERT:
   case CURLOPT_KEYPASSWD:
   case CURLOPT_KRBLEVEL:
   case CURLOPT_LOGIN_OPTIONS:
-  case CURLOPT_MAIL_FROM:
   case CURLOPT_MAIL_AUTH:
+  case CURLOPT_MAIL_FROM:
   case CURLOPT_NETRC_FILE:
   case CURLOPT_NOPROXY:
   case CURLOPT_PASSWORD:
   case CURLOPT_PINNEDPUBLICKEY:
   case CURLOPT_PROXY:
   case CURLOPT_PROXYPASSWORD:
   case CURLOPT_PROXYUSERNAME:
   case CURLOPT_PROXYUSERPWD:
+  case CURLOPT_PROXY_CAINFO:
+  case CURLOPT_PROXY_CAPATH:
+  case CURLOPT_PROXY_CRLFILE:
+  case CURLOPT_PROXY_KEYPASSWD:
+  case CURLOPT_PROXY_PINNEDPUBLICKEY:
   case CURLOPT_PROXY_SERVICE_NAME:
+  case CURLOPT_PROXY_SSLCERT:
+  case CURLOPT_PROXY_SSLCERTTYPE:
+  case CURLOPT_PROXY_SSLKEY:
+  case CURLOPT_PROXY_SSLKEYTYPE:
+  case CURLOPT_PROXY_SSL_CIPHER_LIST:
+  case CURLOPT_PROXY_TLSAUTH_PASSWORD:
+  case CURLOPT_PROXY_TLSAUTH_TYPE:
+  case CURLOPT_PROXY_TLSAUTH_USERNAME:
   case CURLOPT_RANDOM_FILE:
   case CURLOPT_RANGE:
   case CURLOPT_REFERER:
   case CURLOPT_RTSP_SESSION_ID:
   case CURLOPT_RTSP_STREAM_URI:
   case CURLOPT_RTSP_TRANSPORT:
   case CURLOPT_SERVICE_NAME:
   case CURLOPT_SOCKS5_GSSAPI_SERVICE:
+  case CURLOPT_SOCKS_PROXY:
   case CURLOPT_SSH_HOST_PUBLIC_KEY_MD5:
   case CURLOPT_SSH_KNOWNHOSTS:
   case CURLOPT_SSH_PRIVATE_KEYFILE:
   case CURLOPT_SSH_PUBLIC_KEYFILE:
   case CURLOPT_SSLCERT:
   case CURLOPT_SSLCERTTYPE:
-  case CURLOPT_SSL_CIPHER_LIST:
   case CURLOPT_SSLENGINE:
   case CURLOPT_SSLKEY:
   case CURLOPT_SSLKEYTYPE:
+  case CURLOPT_SSL_CIPHER_LIST:
   case CURLOPT_TLSAUTH_PASSWORD:
   case CURLOPT_TLSAUTH_TYPE:
   case CURLOPT_TLSAUTH_USERNAME:
   case CURLOPT_UNIX_SOCKET_PATH:
   case CURLOPT_URL:
   case CURLOPT_USERAGENT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/OS400/curl.inc.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/OS400/curl.inc.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/OS400/curl.inc.in	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/OS400/curl.inc.in	2016-12-19 15:27:56.000000000 +0800
@@ -124,12 +124,14 @@
      d CURL_VERSION_KERBEROS5...
      d                 c                   X'00040000'
      d CURL_VERSION_UNIX_SOCKETS...
      d                 c                   X'00080000'
      d CURL_VERSION_PSL...
      d                 c                   X'00100000'
+     d CURL_VERSION_HTTPS_PROXY...
+     d                 c                   X'00200000'
       *
      d CURL_HTTPPOST_FILENAME...
      d                 c                   X'00000001'
      d CURL_HTTPPOST_READFILE...
      d                 c                   X'00000002'
      d CURL_HTTPPOST_PTRNAME...
@@ -255,12 +257,14 @@
      d CURL_SSLVERSION_TLSv1_0...
      d                 c                   4
      d CURL_SSLVERSION_TLSv1_1...
      d                 c                   5
      d CURL_SSLVERSION_TLSv1_2...
      d                 c                   6
+     d CURL_SSLVERSION_TLSv1_3...
+     d                 c                   7
       *
      d CURL_TLSAUTH_NONE...
      d                 c                   0
      d CURL_TLSAUTH_SRP...
      d                 c                   1
       *
@@ -652,12 +656,14 @@
       *
      d curl_proxytype  s             10i 0 based(######ptr######)               Enum
      d  CURLPROXY_HTTP...
      d                 c                   0
      d  CURLPROXY_HTTP_1_0...
      d                 c                   1
+     d  CURLPROXY_HTTPS...
+     d                 c                   2
      d  CURLPROXY_SOCKS4...
      d                 c                   4
      d  CURLPROXY_SOCKS5...
      d                 c                   5
      d  CURLPROXY_SOCKS4A...
      d                 c                   6
@@ -1253,12 +1259,50 @@
      d  CURLOPT_CONNECT_TO...
      d                 c                   10243
      d  CURLOPT_TCP_FASTOPEN...
      d                 c                   00244
      d  CURLOPT_KEEP_SENDING_ON_ERROR...
      d                 c                   00245
+     d  CURLOPT_PROXY_CAINFO...
+     d                 c                   10246
+     d  CURLOPT_PROXY_CAPATH...
+     d                 c                   10247
+     d  CURLOPT_PROXY_SSL_VERIFYPEER...
+     d                 c                   00248
+     d  CURLOPT_PROXY_SSL_VERIFYHOST...
+     d                 c                   00249
+     d  CURLOPT_PROXY_SSLVERSION...
+     d                 c                   00250
+     d  CURLOPT_PROXY_TLSAUTH_USERNAME...
+     d                 c                   10251
+     d  CURLOPT_PROXY_TLSAUTH_PASSWORD...
+     d                 c                   10252
+     d  CURLOPT_PROXY_TLSAUTH_TYPE...
+     d                 c                   10253
+     d  CURLOPT_PROXY_SSLCERT...
+     d                 c                   10254
+     d  CURLOPT_PROXY_SSLCERTTYPE...
+     d                 c                   10255
+     d  CURLOPT_PROXY_SSLKEY...
+     d                 c                   10256
+     d  CURLOPT_PROXY_SSLKEYTYPE...
+     d                 c                   10257
+     d  CURLOPT_PROXY_KEYPASSWD...
+     d                 c                   10258
+     d  CURLOPT_PROXY_SSL_CIPHER_LIST...
+     d                 c                   10259
+     d  CURLOPT_PROXY_CRLFILE...
+     d                 c                   10260
+     d  CURLOPT_PROXY_SSL_OPTIONS...
+     d                 c                   00261
+     d  CURLOPT_SOCKS_PROXY...
+     d                 c                   10262
+     d  CURLOPT_SOCKS_PROXYTYPE...
+     d                 c                   00263
+     d  CURLOPT_PROXY_PINNEDPUBLICKEY...
+     d                 c                   10264
       *
       /if not defined(CURL_NO_OLDIES)
      d  CURLOPT_FILE   c                   10001
      d  CURLOPT_INFILE...
      d                 c                   10009
      d  CURLOPT_SSLKEYPASSWD...
@@ -1439,12 +1483,18 @@
      d  CURLINFO_ACTIVESOCKET...                                                CURLINFO_SOCKET + 44
      d                 c                   X'0050002C'
      d  CURLINFO_TLS_SSL_PTR...                                                 CURLINFO_SLIST + 45
      d                 c                   X'0040002D'
      d  CURLINFO_HTTP_VERSION...                                                CURLINFO_LONG + 46
      d                 c                   X'0020002E'
+     d  CURLINFO_PROXY_SSL_VERIFYRESULT...                                      CURLINFO_LONG + 47
+     d                 c                   X'0020002F'
+     d  CURLINFO_PROTOCOL...                                                    CURLINFO_LONG + 48
+     d                 c                   X'00200030'
+     d  CURLINFO_SCHEME...                                                      CURLINFO_STRING + 49
+     d                 c                   X'00100031'
       *
      d  CURLINFO_HTTP_CODE...                                                   Old ...RESPONSE_CODE
      d                 c                   X'00200002'
       *
      d curl_sslbackend...
      d                 s             10i 0 based(######ptr######)               Enum
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/OS400/README.OS400 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/OS400/README.OS400
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/OS400/README.OS400	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/OS400/README.OS400	2016-12-19 15:27:56.000000000 +0800
@@ -73,49 +73,63 @@
         CURLOPT_CRLFILE
         CURLOPT_CUSTOMREQUEST
         CURLOPT_DEFAULT_PROTOCOL
         CURLOPT_DNS_SERVERS
         CURLOPT_EGDSOCKET
         CURLOPT_ENCODING
+        CURLOPT_FTPPORT
         CURLOPT_FTP_ACCOUNT
         CURLOPT_FTP_ALTERNATIVE_TO_USER
-        CURLOPT_FTPPORT
         CURLOPT_INTERFACE
         CURLOPT_ISSUERCERT
         CURLOPT_KEYPASSWD
         CURLOPT_KRBLEVEL
         CURLOPT_LOGIN_OPTIONS
-        CURLOPT_MAIL_FROM
         CURLOPT_MAIL_AUTH
+        CURLOPT_MAIL_FROM
         CURLOPT_NETRC_FILE
         CURLOPT_NOPROXY
         CURLOPT_PASSWORD
         CURLOPT_PINNEDPUBLICKEY
         CURLOPT_PROXY
         CURLOPT_PROXYPASSWORD
         CURLOPT_PROXYUSERNAME
         CURLOPT_PROXYUSERPWD
+        CURLOPT_PROXY_CAINFO
+        CURLOPT_PROXY_CAPATH
+        CURLOPT_PROXY_CRLFILE
+        CURLOPT_PROXY_KEYPASSWD
+        CURLOPT_PROXY_PINNEDPUBLICKEY
         CURLOPT_PROXY_SERVICE_NAME
+        CURLOPT_PROXY_SSLCERT
+        CURLOPT_PROXY_SSLCERTTYPE
+        CURLOPT_PROXY_SSLKEY
+        CURLOPT_PROXY_SSLKEYTYPE
+        CURLOPT_PROXY_SSL_CIPHER_LIST
+        CURLOPT_PROXY_TLSAUTH_PASSWORD
+        CURLOPT_PROXY_TLSAUTH_TYPE
+        CURLOPT_PROXY_TLSAUTH_USERNAME
         CURLOPT_RANDOM_FILE
         CURLOPT_RANGE
         CURLOPT_REFERER
         CURLOPT_RTSP_SESSION_UID
         CURLOPT_RTSP_STREAM_URI
         CURLOPT_RTSP_TRANSPORT
         CURLOPT_SERVICE_NAME
         CURLOPT_SOCKS5_GSSAPI_SERVICE
+        CURLOPT_SOCKS_PROXY
         CURLOPT_SSH_HOST_PUBLIC_KEY_MD5
         CURLOPT_SSH_KNOWNHOSTS
         CURLOPT_SSH_PRIVATE_KEYFILE
         CURLOPT_SSH_PUBLIC_KEYFILE
         CURLOPT_SSLCERT
         CURLOPT_SSLCERTTYPE
-        CURLOPT_SSL_CIPHER_LIST
         CURLOPT_SSLENGINE
         CURLOPT_SSLKEY
         CURLOPT_SSLKEYTYPE
+        CURLOPT_SSL_CIPHER_LIST
         CURLOPT_TLSAUTH_PASSWORD
         CURLOPT_TLSAUTH_TYPE
         CURLOPT_TLSAUTH_USERNAME
         CURLOPT_UNIX_SOCKET_PATH
         CURLOPT_URL
         CURLOPT_USERAGENT
@@ -157,12 +171,13 @@
         CURLINFO_CONTENT_TYPE
         CURLINFO_FTP_ENTRY_PATH
         CURLINFO_REDIRECT_URL
         CURLINFO_PRIMARY_IP
         CURLINFO_RTSP_SESSION_ID
         CURLINFO_LOCAL_IP
+        CURLINFO_SCHEME
   Likewise, the following options are followed by a struct curl_slist * * and a
 CCSID.
         CURLINFO_SSL_ENGINES
         CURLINFO_COOKIELIST
 Lists returned should be released with curl_slist_free_all() after use.
   Option CURLINFO_CERTINFO is followed by a struct curl_certinfo * * and a
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/Symbian/group/curl.mmp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/Symbian/group/curl.mmp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/Symbian/group/curl.mmp	2016-10-31 22:18:23.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/Symbian/group/curl.mmp	2016-12-19 15:27:56.000000000 +0800
@@ -1,8 +1,8 @@
 //
-// cURL network retrieval client
+// curl network retrieval client
 //
 
 TARGET        curl.exe
 TARGETTYPE    exe
 UID           0x00000000 0xF0206442
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/Symbian/group/libcurl.mmp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/Symbian/group/libcurl.mmp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/Symbian/group/libcurl.mmp	2016-10-31 22:18:29.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/Symbian/group/libcurl.mmp	2016-12-19 15:27:56.000000000 +0800
@@ -1,8 +1,8 @@
 //
-// libcurl.dll cURL network retrieval client library
+// libcurl.dll curl network retrieval client library
 //
 
 // Build-time options (uncomment these to enable)
 #define ENABLE_ZLIB     // Enable gzip/deflate decompression
 //#define ENABLE_SSL      // Enable SSL for HTTPS/FTPS (requires S60 Open C SDK)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/vms/readme /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/vms/readme
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/vms/readme	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/vms/readme	2016-12-19 15:27:56.000000000 +0800
@@ -80,19 +80,19 @@
                         The first part of the curl release notes.
 
 curl_startup.com        A procedure run at VMS startup to install the
                         libcurl shared image and to set up the needed
                         logical names.
 
-curlmsg.h               C header defining cURL status code macros.
+curlmsg.h               C header defining curl status code macros.
 
 curlmsg.msg             Error message source for curlmsg.h and curlmsg.sdl.
 
-curlmsg.sdl             SDL source defining cURL status code constants.
+curlmsg.sdl             SDL source defining curl status code constants.
 
-curlmsg_vms.h           Mapping of cURL status codes to VMS-form codes.
+curlmsg_vms.h           Mapping of curl status codes to VMS-form codes.
 
 generate_config_vms_h_curl.com
                         DCL procedure to generate the curl specific
                         definitions for curl_config.h that config_h.com
                         can not properly generate.
 
@@ -112,15 +112,15 @@
 gnv_link_curl.com       Links the libcurl shared image and then links a curl
                         image to use the libcurl.
 
 macro32_exactcase.patch The patch file needed to modify VAX Macro32 to be
                         case sensitive and case preserving.
 
-Makefile.am             cURL kit file list for this directory.
+Makefile.am             curl kit file list for this directory.
 
-Makefile.in             cURL kit makefile source for this directory.
+Makefile.in             curl kit makefile source for this directory.
 
 make_gnv_curl_install.sh
                         Script to do a make install using GNV after running
                         the configure script.
 
 make_pcsi_curl_kit_name.com
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/vms/vms_eco_level.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/vms/vms_eco_level.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/vms/vms_eco_level.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/vms/vms_eco_level.h	2016-12-19 15:27:56.000000000 +0800
@@ -16,13 +16,13 @@
  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
  * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 
  */
 
 /* This file should be incremented for each ECO that is kit */
-/* for a specific cURL x.y-z release. */
+/* for a specific curl x.y-z release. */
 /* When any part of x.y-z is incremented, the ECO should be set back to 0 */
 
 #ifndef _VMS_ECO_LEVEL_H
 #define _VMS_ECO_LEVEL_H
 
 #define VMS_ECO_LEVEL "0"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/Win32/cygwin/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/Win32/cygwin/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/packages/Win32/cygwin/README	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/packages/Win32/cygwin/README	2016-12-19 15:27:56.000000000 +0800
@@ -9,13 +9,13 @@
 
 
 Dependencies:
   - Cygwin
   - OpenSSL 0.9.6b-2+ (*)
 
-  (*) cURL can be built without SSL support, see below for details
+  (*) curl can be built without SSL support, see below for details
 
 
 Canonical Homepage and Downloads:
   https://curl.haxx.se/
   https://curl.haxx.se/download.html
 
@@ -38,13 +38,13 @@
   (*) The Cygwin project now (as of sometime in 2003) prefers man pages
       within /usr/share/man, as opposed to the default /usr/man.
 
   (**) LibTool 1.4.2 had a bug related to cygwin's use of ".exe" extensions,
       such that "make install" blew up at curl.exe. See this URL for details:
          http://mail.gnu.org/pipermail/libtool/2001-September/005549.html
-      The copy of ltmain.sh that is distributed with cURL includes this patch.
+      The copy of ltmain.sh that is distributed with curl includes this patch.
 
   As of curl 7.9.1, the official source compiles (under Cygwin) and tests
     100% cleanly OOTB (Out Of The Box)
 
   ---NO SSL RELEASE---
   Same as standard, except for the configure step, which changes to:
@@ -97,18 +97,18 @@
   cookies, user+password authentication, file transfer resume,
   http proxy tunneling and a busload of other useful tricks."
   category: Web Libs
   requires: cygwin openssl
 
   @ curl-devel
-  sdesc: "(lib)cURL headers, static libraries, developer docs and samples"
+  sdesc: "(lib)curl headers, static libraries, developer docs and samples"
   ldesc: "curl-devel is the developer-oriented (non-run-time) parts
-  of the cURL package. It includes header files, static libraries,
+  of the curl package. It includes header files, static libraries,
   example source code snippets, and the libcurl man pages."
   category: Web Libs Devel
   requires: cygwin openssl curl
 
 
 Cygwin port maintained by:
   Kevin Roth <kproth @ users . sourceforge . net>
-  Questions about cURL should be directed to curl-users@cool.haxx.se.
+  Questions about curl should be directed to curl-users@cool.haxx.se.
   Questions about this cygwin package go to cygwin@cygwin.com.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC10/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC10/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC10/lib/libcurl.vcxproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC10/lib/libcurl.vcxproj	2016-12-21 14:50:26.000000000 +0800
@@ -2391,12 +2391,13 @@
     <ClCompile Include="..\..\..\..\lib\openldap.c" />
     <ClCompile Include="..\..\..\..\lib\parsedate.c" />
     <ClCompile Include="..\..\..\..\lib\pingpong.c" />
     <ClCompile Include="..\..\..\..\lib\pipeline.c" />
     <ClCompile Include="..\..\..\..\lib\pop3.c" />
     <ClCompile Include="..\..\..\..\lib\progress.c" />
+    <ClCompile Include="..\..\..\..\lib\rand.c" />
     <ClCompile Include="..\..\..\..\lib\rtsp.c" />
     <ClCompile Include="..\..\..\..\lib\security.c" />
     <ClCompile Include="..\..\..\..\lib\select.c" />
     <ClCompile Include="..\..\..\..\lib\sendf.c" />
     <ClCompile Include="..\..\..\..\lib\share.c" />
     <ClCompile Include="..\..\..\..\lib\slist.c" />
@@ -2516,12 +2517,13 @@
     <ClInclude Include="..\..\..\..\lib\nonblock.h" />
     <ClInclude Include="..\..\..\..\lib\parsedate.h" />
     <ClInclude Include="..\..\..\..\lib\pingpong.h" />
     <ClInclude Include="..\..\..\..\lib\pipeline.h" />
     <ClInclude Include="..\..\..\..\lib\pop3.h" />
     <ClInclude Include="..\..\..\..\lib\progress.h" />
+    <ClInclude Include="..\..\..\..\lib\rand.h" />
     <ClInclude Include="..\..\..\..\lib\rtsp.h" />
     <ClInclude Include="..\..\..\..\lib\select.h" />
     <ClInclude Include="..\..\..\..\lib\sendf.h" />
     <ClInclude Include="..\..\..\..\lib\setup-vms.h" />
     <ClInclude Include="..\..\..\..\lib\share.h" />
     <ClInclude Include="..\..\..\..\lib\sigpipe.h" />
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC11/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC11/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC11/lib/libcurl.vcxproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC11/lib/libcurl.vcxproj	2016-12-21 14:50:26.000000000 +0800
@@ -2447,12 +2447,13 @@
     <ClCompile Include="..\..\..\..\lib\openldap.c" />
     <ClCompile Include="..\..\..\..\lib\parsedate.c" />
     <ClCompile Include="..\..\..\..\lib\pingpong.c" />
     <ClCompile Include="..\..\..\..\lib\pipeline.c" />
     <ClCompile Include="..\..\..\..\lib\pop3.c" />
     <ClCompile Include="..\..\..\..\lib\progress.c" />
+    <ClCompile Include="..\..\..\..\lib\rand.c" />
     <ClCompile Include="..\..\..\..\lib\rtsp.c" />
     <ClCompile Include="..\..\..\..\lib\security.c" />
     <ClCompile Include="..\..\..\..\lib\select.c" />
     <ClCompile Include="..\..\..\..\lib\sendf.c" />
     <ClCompile Include="..\..\..\..\lib\share.c" />
     <ClCompile Include="..\..\..\..\lib\slist.c" />
@@ -2572,12 +2573,13 @@
     <ClInclude Include="..\..\..\..\lib\nonblock.h" />
     <ClInclude Include="..\..\..\..\lib\parsedate.h" />
     <ClInclude Include="..\..\..\..\lib\pingpong.h" />
     <ClInclude Include="..\..\..\..\lib\pipeline.h" />
     <ClInclude Include="..\..\..\..\lib\pop3.h" />
     <ClInclude Include="..\..\..\..\lib\progress.h" />
+    <ClInclude Include="..\..\..\..\lib\rand.h" />
     <ClInclude Include="..\..\..\..\lib\rtsp.h" />
     <ClInclude Include="..\..\..\..\lib\select.h" />
     <ClInclude Include="..\..\..\..\lib\sendf.h" />
     <ClInclude Include="..\..\..\..\lib\setup-vms.h" />
     <ClInclude Include="..\..\..\..\lib\share.h" />
     <ClInclude Include="..\..\..\..\lib\sigpipe.h" />
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC12/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC12/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC12/lib/libcurl.vcxproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC12/lib/libcurl.vcxproj	2016-12-21 14:50:26.000000000 +0800
@@ -2447,12 +2447,13 @@
     <ClCompile Include="..\..\..\..\lib\openldap.c" />
     <ClCompile Include="..\..\..\..\lib\parsedate.c" />
     <ClCompile Include="..\..\..\..\lib\pingpong.c" />
     <ClCompile Include="..\..\..\..\lib\pipeline.c" />
     <ClCompile Include="..\..\..\..\lib\pop3.c" />
     <ClCompile Include="..\..\..\..\lib\progress.c" />
+    <ClCompile Include="..\..\..\..\lib\rand.c" />
     <ClCompile Include="..\..\..\..\lib\rtsp.c" />
     <ClCompile Include="..\..\..\..\lib\security.c" />
     <ClCompile Include="..\..\..\..\lib\select.c" />
     <ClCompile Include="..\..\..\..\lib\sendf.c" />
     <ClCompile Include="..\..\..\..\lib\share.c" />
     <ClCompile Include="..\..\..\..\lib\slist.c" />
@@ -2572,12 +2573,13 @@
     <ClInclude Include="..\..\..\..\lib\nonblock.h" />
     <ClInclude Include="..\..\..\..\lib\parsedate.h" />
     <ClInclude Include="..\..\..\..\lib\pingpong.h" />
     <ClInclude Include="..\..\..\..\lib\pipeline.h" />
     <ClInclude Include="..\..\..\..\lib\pop3.h" />
     <ClInclude Include="..\..\..\..\lib\progress.h" />
+    <ClInclude Include="..\..\..\..\lib\rand.h" />
     <ClInclude Include="..\..\..\..\lib\rtsp.h" />
     <ClInclude Include="..\..\..\..\lib\select.h" />
     <ClInclude Include="..\..\..\..\lib\sendf.h" />
     <ClInclude Include="..\..\..\..\lib\setup-vms.h" />
     <ClInclude Include="..\..\..\..\lib\share.h" />
     <ClInclude Include="..\..\..\..\lib\sigpipe.h" />
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC14/lib/libcurl.vcxproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC14/lib/libcurl.vcxproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC14/lib/libcurl.vcxproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC14/lib/libcurl.vcxproj	2016-12-21 14:50:26.000000000 +0800
@@ -2447,12 +2447,13 @@
     <ClCompile Include="..\..\..\..\lib\openldap.c" />
     <ClCompile Include="..\..\..\..\lib\parsedate.c" />
     <ClCompile Include="..\..\..\..\lib\pingpong.c" />
     <ClCompile Include="..\..\..\..\lib\pipeline.c" />
     <ClCompile Include="..\..\..\..\lib\pop3.c" />
     <ClCompile Include="..\..\..\..\lib\progress.c" />
+    <ClCompile Include="..\..\..\..\lib\rand.c" />
     <ClCompile Include="..\..\..\..\lib\rtsp.c" />
     <ClCompile Include="..\..\..\..\lib\security.c" />
     <ClCompile Include="..\..\..\..\lib\select.c" />
     <ClCompile Include="..\..\..\..\lib\sendf.c" />
     <ClCompile Include="..\..\..\..\lib\share.c" />
     <ClCompile Include="..\..\..\..\lib\slist.c" />
@@ -2572,12 +2573,13 @@
     <ClInclude Include="..\..\..\..\lib\nonblock.h" />
     <ClInclude Include="..\..\..\..\lib\parsedate.h" />
     <ClInclude Include="..\..\..\..\lib\pingpong.h" />
     <ClInclude Include="..\..\..\..\lib\pipeline.h" />
     <ClInclude Include="..\..\..\..\lib\pop3.h" />
     <ClInclude Include="..\..\..\..\lib\progress.h" />
+    <ClInclude Include="..\..\..\..\lib\rand.h" />
     <ClInclude Include="..\..\..\..\lib\rtsp.h" />
     <ClInclude Include="..\..\..\..\lib\select.h" />
     <ClInclude Include="..\..\..\..\lib\sendf.h" />
     <ClInclude Include="..\..\..\..\lib\setup-vms.h" />
     <ClInclude Include="..\..\..\..\lib\share.h" />
     <ClInclude Include="..\..\..\..\lib\sigpipe.h" />
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC6/lib/libcurl.dsp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC6/lib/libcurl.dsp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC6/lib/libcurl.dsp	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC6/lib/libcurl.dsp	2016-12-21 14:50:26.000000000 +0800
@@ -1011,12 +1011,16 @@
 # Begin Source File
 
 SOURCE=..\..\..\..\lib\progress.c
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\..\..\lib\rand.c
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\..\..\lib\rtsp.c
 # End Source File
 # Begin Source File
 
 SOURCE=..\..\..\..\lib\security.c
 # End Source File
@@ -1507,12 +1511,16 @@
 # Begin Source File
 
 SOURCE=..\..\..\..\lib\progress.h
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\..\..\lib\rand.h
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\..\..\lib\rtsp.h
 # End Source File
 # Begin Source File
 
 SOURCE=..\..\..\..\lib\select.h
 # End Source File
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC7/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC7/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC7/lib/libcurl.vcproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC7/lib/libcurl.vcproj	2016-12-21 14:50:26.000000000 +0800
@@ -1320,12 +1320,15 @@
 				RelativePath="..\..\..\..\lib\pop3.c">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.c">
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.c">
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.c">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\security.c">
 			</File>
 			<File
@@ -1621,12 +1624,15 @@
 				RelativePath="..\..\..\..\lib\pop3.h">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.h">
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.h">
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.h">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\select.h">
 			</File>
 			<File
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC7.1/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC7.1/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC7.1/lib/libcurl.vcproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC7.1/lib/libcurl.vcproj	2016-12-21 14:50:26.000000000 +0800
@@ -1466,12 +1466,15 @@
 				RelativePath="..\..\..\..\lib\pop3.c">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.c">
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.c">
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.c">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\security.c">
 			</File>
 			<File
@@ -1767,12 +1770,15 @@
 				RelativePath="..\..\..\..\lib\pop3.h">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.h">
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.h">
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.h">
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\select.h">
 			</File>
 			<File
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC8/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC8/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC8/lib/libcurl.vcproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC8/lib/libcurl.vcproj	2016-12-21 14:50:26.000000000 +0800
@@ -3898,12 +3898,16 @@
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.c"
 			>
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.c"
+			>
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.c"
 			>
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\security.c"
 			>
@@ -4298,12 +4302,16 @@
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.h"
 			>
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.h"
+			>
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.h"
 			>
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\select.h"
 			>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC9/lib/libcurl.vcproj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC9/lib/libcurl.vcproj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/projects/Windows/VC9/lib/libcurl.vcproj	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/projects/Windows/VC9/lib/libcurl.vcproj	2016-12-21 14:50:26.000000000 +0800
@@ -3839,12 +3839,16 @@
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.c"
 			>
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.c"
+			>
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.c"
 			>
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\security.c"
 			>
@@ -4239,12 +4243,16 @@
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\progress.h"
 			>
 			</File>
 			<File
+				RelativePath="..\..\..\..\lib\rand.h"
+			>
+			</File>
+			<File
 				RelativePath="..\..\..\..\lib\rtsp.h"
 			>
 			</File>
 			<File
 				RelativePath="..\..\..\..\lib\select.h"
 			>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/RELEASE-NOTES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/RELEASE-NOTES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/RELEASE-NOTES	2016-11-02 14:49:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/RELEASE-NOTES	2016-12-21 14:48:02.000000000 +0800
@@ -1,141 +1,123 @@
-Curl and libcurl 7.51.0
+Curl and libcurl 7.52.0
 
- Public curl releases:         160
- Command line options:         185
- curl_easy_setopt() options:   225
+ Public curl releases:         161
+ Command line options:         204
+ curl_easy_setopt() options:   243
  Public functions in libcurl:  61
- Contributors:                 1467
+ Contributors:                 1480
 
 This release includes the following changes:
 
- o nss: additional cipher suites are now accepted by CURLOPT_SSL_CIPHER_LIST
- o New option: CURLOPT_KEEP_SENDING_ON_ERROR [10]
+ o nss: map CURL_SSLVERSION_DEFAULT to NSS default
+ o vtls: support TLS 1.3 via CURL_SSLVERSION_TLSv1_3
+ o curl: introduce the --tlsv1.3 option to force TLS 1.3
+ o curl: Add --retry-connrefused [11]
+ o proxy: Support HTTPS proxy and SOCKS+HTTP(s) [24]
+ o add CURLINFO_SCHEME, CURLINFO_PROTOCOL, and %{scheme} [20]
+ o curl: add --fail-early [15]
 
 This release includes the following bugfixes:
 
- o CVE-2016-8615: cookie injection for other servers [28]
- o CVE-2016-8616: case insensitive password comparison [29]
- o CVE-2016-8617: OOB write via unchecked multiplication [30]
- o CVE-2016-8618: double-free in curl_maprintf [31]
- o CVE-2016-8619: double-free in krb5 code [32]
- o CVE-2016-8620: glob parser write/read out of bounds [33]
- o CVE-2016-8621: curl_getdate read out of bounds [34]
- o CVE-2016-8622: URL unescape heap overflow via integer truncation [35]
- o CVE-2016-8623: Use-after-free via shared cookies [36]
- o CVE-2016-8624: invalid URL parsing with '#' [37]
- o CVE-2016-8625: IDNA 2003 makes curl use wrong host [38]
- o openssl: fix per-thread memory leak using 1.0.1 or 1.0.2 [1]
- o http: accept "Transfer-Encoding: chunked" for HTTP/2 as well [2]
- o LICENSE-MIXING.md: update with mbedTLS dual licensing [3]
- o examples/imap-append: Set size of data to be uploaded [4]
- o test2048: fix url
- o darwinssl: disable RC4 cipher-suite support
- o CURLOPT_PINNEDPUBLICKEY.3: fix the AVAILABILITY formatting
- o openssl: don’t call CRYTPO_cleanup_all_ex_data [5]
- o libressl: fix version output [6]
- o easy: Reset all statistical session info in curl_easy_reset [7]
- o curl_global_cleanup.3: don't unload the lib with sub threads running [8]
- o dist: add CurlSymbolHiding.cmake to the tarball
- o docs: Remove that --proto is just used for initial retrieval [9]
- o configure: Fixed builds with libssh2 in a custom location
- o curl.1: --trace supports % for sending to stderr!
- o cookies: same domain handling changed to match browser behavior [11]
- o formpost: trying to attach a directory no longer crashes [12]
- o CURLOPT_DEBUGFUNCTION.3: fixed unused argument warning [13]
- o formpost: avoid silent snprintf() truncation
- o ftp: fix Curl_ftpsendf
- o mprintf: return error on too many arguments
- o smb: properly check incoming packet boundaries [14]
- o GIT-INFO: remove the Mac 10.1-specific details [15]
- o resolve: add error message when resolving using SIGALRM [16]
- o cmake: add nghttp2 support [17]
- o dist: remove PDF and HTML converted docs from the releases [18]
- o configure: disable poll() in macOS builds [19]
- o vtls: only re-use session-ids using the same scheme
- o pipelining: skip to-be-closed connections when pipelining [20]
- o win: fix Universal Windows Platform build [21]
- o curl: do not set CURLOPT_SSLENGINE to DEFAULT automatically [22]
- o maketgz: make it support "only" generating version info
- o Curl_socket_check: add extra check to avoid integer overflow
- o gopher: properly return error for poll failures
- o curl: set INTERLEAVEDATA too
- o polarssl: clear thread array at init
- o polarssl: fix unaligned SSL session-id lock
- o polarssl: reduce #ifdef madness with a macro
- o curl_multi_add_handle: set timeouts in closure handles [23]
- o configure: set min version flags for builds on mac [24]
- o INSTALL: converted to markdown => INSTALL.md
- o curl_multi_remove_handle: fix a double-free [25]
- o multi: fix inifinte loop in curl_multi_cleanup() [26]
- o nss: fix tight loop in non-blocking TLS handhsake over proxy [27]
- o mk-ca-bundle: Change URL retrieval to HTTPS-only by default [39]
- o mbedtls: stop using deprecated include file [40]
- o docs: fix req->data in multi-uv example [41]
- o configure: Fix test syntax for monotonic clock_gettime
- o CURLMOPT_MAX_PIPELINE_LENGTH.3: Clarify it's not for HTTP/2 [42]
+ o CVE-2016-9586: printf floating point buffer overflow [33]
+ o CVE-2016-9952: Win CE schannel cert wildcard matches too much [34]
+ o CVE-2016-9953: Win CE schannel cert name out of buffer read [35]
+ o msvc: removed a straggling reference to strequal.c
+ o winbuild: remove strcase.obj from curl build [1]
+ o examples: bugfixed multi-uv.c
+ o configure: verify that compiler groks -Werror=partial-availability [2]
+ o mbedtls: fix build with mbedtls versions < 2.4.0 [3]
+ o dist: add unit test CMakeLists.txt to the tarball
+ o curl -w: added more decimal digits to timing counters [4]
+ o easy: Initialize info variables on easy init and duphandle [5]
+ o cmake: disable poll for macOS [6]
+ o http2: Don't send header fields prohibited by HTTP/2 spec [7]
+ o ssh: check md5 fingerprints case insensitively (regression) [8]
+ o openssl: initial TLS 1.3 adaptions
+ o curl_formadd.3: *_FILECONTENT and *_FILE need the file to be kept
+ o printf: fix ".*f" handling [9]
+ o examples/fileupload.c: fclose the file as well
+ o SPNEGO: Fix memory leak when authentication fails [10]
+ o realloc: use Curl_saferealloc to avoid common mistakes [12]
+ o openssl: make sure to fail in the unlikely event that PRNG seeding fails
+ o URL-parser: for file://[host]/ URLs, the [host] must be localhost [13]
+ o timeval: prefer time_t to hold seconds instead of long
+ o Curl_rand: fixed and moved to rand.c [14]
+ o glob: fix [a-c] globbing regression [16]
+ o darwinssl: fix SSL client certificate not found on MacOS Sierra [17]
+ o curl.1: Clarify --dump-header only writes received headers
+ o http2: Fix address sanitizer memcpy warning
+ o http2: Use huge HTTP/2 windows [18]
+ o connects: Don't mix unix domain sockets with regular ones
+ o url: Fix conn reuse for local ports and interfaces [19]
+ o x509: Limit ASN.1 structure sizes to 256K
+ o checksrc: add more checks
+ o winbuild: add config option ENABLE_NGHTTP2 [21]
+ o http2: check nghttp2_session_set_local_window_size exists [22]
+ o http2: Fix crashes when parent stream gets aborted [23]
+ o CURLOPT_CONNECT_TO: Skip non-matching "connect-to" entries [25]
+ o URL parser: reject non-numerical port numbers
+ o CONNECT: reject TE or CL in 2xx responses
+ o CONNECT: read responses one byte at a time [26]
+ o curl: support zero-length argument strings in config files [27]
+ o openssl: don't use OpenSSL's ERR_PACK [28]
+ o curl.1: generated with the new man page system [29]
+ o curl_easy_recv: Improve documentation and example program [30]
+ o Curl_getconnectinfo: avoid checking if the connection is closed [31]
+ o CIPHERS.md: attempt to document TLS cipher names [32]
 
 This release includes the following known bugs:
 
  o see docs/KNOWN_BUGS (https://curl.haxx.se/docs/knownbugs.html)
 
 This release would not have looked like this without help, code, reports and
 advice from friends like these:
 
-  Akshay Vernekar, Alexander Sinditskiy, Anders Bakken, Andreas Streichardt,
-  Andrei Sedoi, Bernard Spil, Christian Heimes, Dan Fandrich,
-  Daniel Gustafsson, Daniel Stenberg, Darío Hereñú, David Woodhouse,
-  Fernando Muñoz, Gregory Szorc, Jeroen Ooms, Kamil Dudka, Luật Nguyễn,
-  lukaszgn on github, Marcel Raad, Martin Frodl, Martin Storsjö,
-  Michael Kaufmann, Michael Osipov, Miloš Ljumović, Nick Zitzmann,
-  nopjmp on github, Paul Joyce, Rainer Müller, Ray Satiro, Remo E,
-  Rider Linden, Sebastian Mundry, Sergei Kuzmin, Stephen Brokenshire,
-  Tobias Stoeckmann, Toby Peterson, Todd Short, Tony Kelman, Torben Dannhauer,
-  Valentin David,
-  (40 contributors)
+  Adam Langley, Adam Piggott, afrind on github, Alex Chan, Alex Rousskov,
+  Anders Bakken, Andrei Sedoi, Bruce Stephens, Dan Fandrich, Daniel Hwang,
+  Daniel Stenberg, Dan McNulty, Dave Reisner, David Schweikert,
+  Dmitry Kurochkin, Frank Gevaerts, Frank Meier, Gisle Vanem, Isaac Boukris,
+  Jakub Zakrzewski, Jan Ehrhardt, Jeremy Pearson, Kamil Dudka, Marcel Raad,
+  Mauro Rappa, Michael Kaufmann, Mike Crowe, Neal Poole, Nick Zitzmann,
+  Okhin Vasilij, Patrick Monnerat, Peter Wu, Ray Satiro, Ricki Hirner,
+  Tatsuhiro Tsujikawa, Thomas Glanzmann, Tony Kelman, Vasy Okhin,
+  (38 contributors)
 
         Thanks! (and sorry if I forgot to mention someone)
 
 References to bug reports and discussions on issues:
 
- [1] = https://curl.haxx.se/bug/?i=964
- [2] = https://curl.haxx.se/bug/?i=1013
- [3] = https://curl.haxx.se/bug/?i=1019
- [4] = https://curl.haxx.se/bug/?i=1011
- [5] = https://curl.haxx.se/mail/lib-2016-09/0045.html
- [6] = https://curl.haxx.se/bug/?i=1029
- [7] = https://curl.haxx.se/bug/?i=1017
- [8] = https://curl.haxx.se/bug/?i=997
- [9] = https://curl.haxx.se/bug/?i=1031
- [10] = https://curl.haxx.se/libcurl/c/CURLOPT_KEEP_SENDING_ON_ERROR.html
- [11] = https://curl.haxx.se/bug/?i=1050
- [12] = https://curl.haxx.se/bug/?i=1053
- [13] = https://curl.haxx.se/bug/?i=1056
- [14] = https://curl.haxx.se/bug/?i=1052
- [15] = https://curl.haxx.se/bug/?i=1049
- [16] = https://curl.haxx.se/bug/?i=1066
- [17] = https://curl.haxx.se/bug/?i=922
- [18] = https://curl.haxx.se/mail/lib-2016-10/0040.html
- [19] = https://curl.haxx.se/bug/?i=1057
- [20] = https://curl.haxx.se/bug/?i=1075
- [21] = https://curl.haxx.se/bug/?i=1048
- [22] = https://curl.haxx.se/bug/?i=1042
- [23] = https://curl.haxx.se/bug/?i=739
- [24] = https://curl.haxx.se/bug/?i=1069
- [25] = https://curl.haxx.se/bug/?i=1083
- [26] = https://curl.haxx.se/mail/lib-2016-10/0011.html
- [27] = https://bugzilla.redhat.com/1388162
- [28] = https://curl.haxx.se/docs/adv_20161102A.html
- [29] = https://curl.haxx.se/docs/adv_20161102B.html
- [30] = https://curl.haxx.se/docs/adv_20161102C.html
- [31] = https://curl.haxx.se/docs/adv_20161102D.html
- [32] = https://curl.haxx.se/docs/adv_20161102E.html
- [33] = https://curl.haxx.se/docs/adv_20161102F.html
- [34] = https://curl.haxx.se/docs/adv_20161102G.html
- [35] = https://curl.haxx.se/docs/adv_20161102H.html
- [36] = https://curl.haxx.se/docs/adv_20161102I.html
- [37] = https://curl.haxx.se/docs/adv_20161102J.html
- [38] = https://curl.haxx.se/docs/adv_20161102K.html
- [39] = https://curl.haxx.se/bug/?i=1012
- [40] = https://curl.haxx.se/bug/?i=1087
- [41] = https://curl.haxx.se/bug/?i=1088
- [42] = https://curl.haxx.se/bug/?i=1059
+ [1] = https://curl.haxx.se/bug/?i=1098
+ [2] = https://curl.haxx.se/bug/?i=1104
+ [3] = https://curl.haxx.se/bug/?i=1087
+ [4] = https://curl.haxx.se/bug/?i=1106
+ [5] = https://curl.haxx.se/bug/?i=1103
+ [6] = https://curl.haxx.se/bug/?i=1089
+ [7] = https://curl.haxx.se/bug/?i=1092
+ [8] = https://github.com/curl/curl/commit/ce8d09483eea2fcb1b50e323e1a8ed1f3613b2e3#commitcomment-19666146
+ [9] = https://curl.haxx.se/bug/?i=1113
+ [10] = https://curl.haxx.se/bug/?i=1115
+ [11] = https://curl.haxx.se/bug/?i=1064
+ [12] = https://curl.haxx.se/mail/lib-2016-11/0087.html
+ [13] = https://curl.haxx.se/mail/lib-2016-11/0104.html
+ [14] = https://curl.haxx.se/mail/lib-2016-11/0119.html
+ [15] = https://curl.haxx.se/mail/archive-2016-11/0038.html
+ [16] = https://github.com/curl/curl/commit/ee4f76606cfa4ee068bf28edd37c8dae7e8db317#commitcomment-19823146
+ [17] = https://curl.haxx.se/bug/?i=1105
+ [18] = https://curl.haxx.se/bug/?i=1102
+ [19] = https://curl.haxx.se/mail/lib-2016-11/0137.html
+ [20] = https://curl.haxx.se/bug/?i=1137
+ [21] = https://curl.haxx.se/bug/?i=1141
+ [22] = https://github.com/curl/curl/commit/a4d8888#commitcomment-19985676
+ [23] = https://curl.haxx.se/bug/?i=1125
+ [24] = https://curl.haxx.se/bug/?i=1127
+ [25] = https://curl.haxx.se/bug/?i=1148
+ [26] = https://curl.haxx.se/bug/?i=1132
+ [27] = https://curl.haxx.se/bug/?i=1152
+ [28] = https://curl.haxx.se/bug/?i=1157
+ [29] = https://github.com/curl/curl/blob/master/docs/cmdline-opts/MANPAGE.md
+ [30] = https://curl.haxx.se/bug/?i=1134
+ [31] = https://curl.haxx.se/bug/?i=1134
+ [32] = https://curl.haxx.se/docs/ssl-ciphers.html
+ [33] = https://curl.haxx.se/docs/adv_20161221A.html
+ [34] = https://curl.haxx.se/docs/adv_20161221B.html
+ [35] = https://curl.haxx.se/docs/adv_20161221C.html
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/CMakeLists.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/CMakeLists.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/CMakeLists.txt	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/CMakeLists.txt	2016-12-19 15:27:56.000000000 +0800
@@ -46,25 +46,25 @@
 # CURL_FILES comes from Makefile.inc
 add_executable(
   ${EXE_NAME}
   ${CURL_FILES}
   )
 
-source_group("cURLX source files" FILES ${CURLX_CFILES})
-source_group("cURL source files" FILES ${CURL_CFILES})
-source_group("cURL header files" FILES ${CURL_HFILES})
+source_group("curlX source files" FILES ${CURLX_CFILES})
+source_group("curl source files" FILES ${CURL_CFILES})
+source_group("curl header files" FILES ${CURL_HFILES})
 
 include_directories(
   ${CURL_SOURCE_DIR}/lib        # To be able to reach "curl_setup_once.h"
   ${CURL_BINARY_DIR}/lib        # To be able to reach "curl_config.h"
   ${CURL_BINARY_DIR}/include    # To be able to reach "curl/curlbuild.h"
   # This is needed as tool_hugehelp.c is generated in the binary dir
   ${CURL_SOURCE_DIR}/src        # To be able to reach "tool_hugehelp.h"
   )
 
-#Build cURL executable
+#Build curl executable
 target_link_libraries( ${EXE_NAME} libcurl ${CURL_LIBS})
 
 ################################################################################
 
 #SET_TARGET_PROPERTIES(${EXE_NAME} ARCHIVE_OUTPUT_DIRECTORY "blah blah blah")
 #SET_TARGET_PROPERTIES(${EXE_NAME} RUNTIME_OUTPUT_DIRECTORY "blah blah blah")
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/macos/MACINSTALL.TXT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/macos/MACINSTALL.TXT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/macos/MACINSTALL.TXT	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/macos/MACINSTALL.TXT	2016-12-19 15:27:56.000000000 +0800
@@ -1 +1 @@
-MACOS (not MACOS X)===================This is the first attempt at porting cURL to MacOS.http, ftp, dict and telnet seems to work fine, other protocols and advanced features have not been all tested.This port is heavily based on the GUSI library from Matthias Neeracher.GUSI (Grand Unified Socket Interface) is a POSIX/Pthreads/Sockets library bringing some of the comforts of UNIX 98 to traditional MacOS.The latest GUSI release can be downloaded from sourceforge at <http://sourceforge.net/projects/gusi/>I have also written a few functions to help port Unix applications to MacOS.These functions are part of the GUSI Extra library that can be downloaded at<http://perso.wanadoo.fr/ela/resources.html#gusiextra>OpenSSL support is still experimental but I hope to deliver a version including SSL soon.cURL for MacOS requires using the CodeWarrior compiler from Metrowerks.First download GUSI, GUSI Extra and cURL. Access paths have been setup so thatGUSI, GUSI Extra and cURL directories should have the same parent directory.Follow the instructions in GUSI Extra "readme.txt" mainly the ones related toSIOUX and GUSI patches. If you do not apply these patches curl will not behave correctly.In the 'curl/src/macos' directory, decode "curl.mcp.xml.sit.hqx" (This is a stuffit binhexed file)From the CodeWarrior IDE, import 'curl/src/macos/curl.xml', adjust the access paths if required. Then you should be able to build:- the libcurl libraries for PPC and 68K.- the curl application (also available for PPC and 68K) which is the command  line version of cURL.If the file "tool_hugehelp.c" is missing rename "curl/src/tool_hugehelp.c.cvs"to "tool_hugehelp.c" and make sure its file type is 'TEXT'
+MACOS (not MACOS X)===================This is the first attempt at porting curl to MacOS.http, ftp, dict and telnet seems to work fine, other protocols and advanced features have not been all tested.This port is heavily based on the GUSI library from Matthias Neeracher.GUSI (Grand Unified Socket Interface) is a POSIX/Pthreads/Sockets library bringing some of the comforts of UNIX 98 to traditional MacOS.The latest GUSI release can be downloaded from sourceforge at <http://sourceforge.net/projects/gusi/>I have also written a few functions to help port Unix applications to MacOS.These functions are part of the GUSI Extra library that can be downloaded at<http://perso.wanadoo.fr/ela/resources.html#gusiextra>OpenSSL support is still experimental but I hope to deliver a version including SSL soon.curl for MacOS requires using the CodeWarrior compiler from Metrowerks.First download GUSI, GUSI Extra and curl. Access paths have been setup so thatGUSI, GUSI Extra and curl directories should have the same parent directory.Follow the instructions in GUSI Extra "readme.txt" mainly the ones related toSIOUX and GUSI patches. If you do not apply these patches curl will not behave correctly.In the 'curl/src/macos' directory, decode "curl.mcp.xml.sit.hqx" (This is a stuffit binhexed file)From the CodeWarrior IDE, import 'curl/src/macos/curl.xml', adjust the access paths if required. Then you should be able to build:- the libcurl libraries for PPC and 68K.- the curl application (also available for PPC and 68K) which is the command  line version of curl.If the file "tool_hugehelp.c" is missing rename "curl/src/tool_hugehelp.c.cvs"to "tool_hugehelp.c" and make sure its file type is 'TEXT'
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/makefile.amiga /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/makefile.amiga
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/makefile.amiga	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/makefile.amiga	2016-12-19 15:27:56.000000000 +0800
@@ -1,8 +1,8 @@
 #
-# $VER: cURL Makefile for AmigaOS ...
+# $VER: curl Makefile for AmigaOS ...
 #
 
 # change the follow to where you have the AmiTCP SDK v4.3 includes:
 
 ATCPSDKI=	/GG/netinclude
 
@@ -16,15 +16,15 @@
 
 include Makefile.inc
 
 OBJS = $(CURL_CFILES:.c=.o) $(CURLX_CFILES:.c=.o)
 
 all:	tool_hugehelp.c $(OBJS)
-	$(CC) $(CFLAGS) -o cURL $(OBJS) $(LIBS) -Wl,-Map,cURL.map,--cref
+	$(CC) $(CFLAGS) -o curl $(OBJS) $(LIBS) -Wl,-Map,curl.map,--cref
 
 tool_hugehelp.c: $(README) $(MANPAGE)  mkhelp.pl
 	rm -f tool_hugehelp.c
 	/bin/nroff -man $(MANPAGE) | /bin/perl $(MKHELP) -c $(README) > tool_hugehelp.c
 
 install:
-	$(INSTALL) -c cURL /c/cURL
+	$(INSTALL) -c curl /c/curl
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/makefile.dj /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/makefile.dj
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/makefile.dj	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/makefile.dj	2016-12-19 15:27:56.000000000 +0800
@@ -56,13 +56,13 @@
 CFLAGS += -DUSE_ENVIRONMENT
 
 PROGRAM  = curl.exe
 OBJECTS += $(addprefix $(OBJ_DIR)/, $(CSOURCES:.c=.o))
 
 all: $(OBJ_DIR) $(PROGRAM)
-	@echo Welcome to cURL
+	@echo Welcome to curl
 
 $(PROGRAM): $(OBJECTS) ../lib/libcurl.a
 	$(CC) -o $@ $^ $(LDFLAGS) $(EX_LIBS)
 
 #
 # groff 1.18+ requires "-P -c"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/Makefile.netware /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/Makefile.netware
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/Makefile.netware	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/Makefile.netware	2016-12-19 15:27:56.000000000 +0800
@@ -99,13 +99,13 @@
 endif
 
 # Edit the vars below to change NLM target settings.
 TARGET  = curl
 VERSION	= $(LIBCURL_VERSION)
 COPYR	= Copyright (C) $(LIBCURL_COPYRIGHT_STR)
-DESCR	= cURL $(LIBCURL_VERSION_STR) ($(LIBARCH)) - https://curl.haxx.se
+DESCR	= curl $(LIBCURL_VERSION_STR) ($(LIBARCH)) - https://curl.haxx.se
 MTSAFE	= YES
 STACK	= 64000
 SCREEN	= $(TARGET) commandline utility
 # Comment the line below if you dont want to load protected automatically.
 # LDRING = 3
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/Makefile.Watcom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/Makefile.Watcom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/Makefile.Watcom	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/Makefile.Watcom	2016-12-19 15:27:56.000000000 +0800
@@ -19,13 +19,13 @@
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 #***************************************************************************
 
 #
-#  Watcom / OpenWatcom / Win32 makefile for cURL.
+#  Watcom / OpenWatcom / Win32 makefile for curl.
 #
 
 .ERASE
 
 !if $(__VERSION__) < 1280
 !message !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
@@ -153,13 +153,13 @@
 
 RESOURCE = $(OBJ_DIR)/curl.res
 
 DIRS = $(OBJ_DIR)
 
 all: tool_hugehelp.c $(DIRS) $(TARGETS) .SYMBOLIC
-	@echo Welcome to cURL
+	@echo Welcome to curl
 
 clean: .SYMBOLIC
 	-rm -f $(OBJS)
 	-rm -f $(RESOURCE) $(LINK_ARG)
 
 vclean distclean: clean .SYMBOLIC
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cb_dbg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cb_dbg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cb_dbg.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cb_dbg.c	2016-12-19 15:27:56.000000000 +0800
@@ -179,13 +179,13 @@
         break;
       }
     }
   }
 #endif /* CURL_DOES_CONVERSIONS */
 
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(output, "%s== Info: %s", timebuf, data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cb_hdr.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cb_hdr.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cb_hdr.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cb_hdr.c	2016-12-19 15:27:56.000000000 +0800
@@ -44,13 +44,13 @@
 {
   struct HdrCbData *hdrcbdata = userdata;
   struct OutStruct *outs = hdrcbdata->outs;
   struct OutStruct *heads = hdrcbdata->heads;
   const char *str = ptr;
   const size_t cb = size * nmemb;
-  const char *end = (char*)ptr + cb;
+  const char *end = (char *)ptr + cb;
   char *url = NULL;
 
   /*
    * Once that libcurl has called back tool_header_cb() the returned value
    * is checked against the amount that was intended to be written, if
    * it does not match then it fails with CURLE_WRITE_ERROR. So at this
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cfgable.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cfgable.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cfgable.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cfgable.c	2016-12-19 15:27:56.000000000 +0800
@@ -65,12 +65,15 @@
   Curl_safefree(config->range);
 
   Curl_safefree(config->userpwd);
   Curl_safefree(config->tls_username);
   Curl_safefree(config->tls_password);
   Curl_safefree(config->tls_authtype);
+  Curl_safefree(config->proxy_tls_username);
+  Curl_safefree(config->proxy_tls_password);
+  Curl_safefree(config->proxy_tls_authtype);
   Curl_safefree(config->proxyuserpwd);
   Curl_safefree(config->proxy);
 
   Curl_safefree(config->dns_ipv6_addr);
   Curl_safefree(config->dns_ipv4_addr);
   Curl_safefree(config->dns_interface);
@@ -96,21 +99,30 @@
   config->url_list = NULL;
   config->url_last = NULL;
   config->url_get = NULL;
   config->url_out = NULL;
 
   Curl_safefree(config->cipher_list);
+  Curl_safefree(config->proxy_cipher_list);
   Curl_safefree(config->cert);
+  Curl_safefree(config->proxy_cert);
   Curl_safefree(config->cert_type);
+  Curl_safefree(config->proxy_cert_type);
   Curl_safefree(config->cacert);
+  Curl_safefree(config->proxy_cacert);
   Curl_safefree(config->capath);
+  Curl_safefree(config->proxy_capath);
   Curl_safefree(config->crlfile);
   Curl_safefree(config->pinnedpubkey);
+  Curl_safefree(config->proxy_crlfile);
   Curl_safefree(config->key);
+  Curl_safefree(config->proxy_key);
   Curl_safefree(config->key_type);
+  Curl_safefree(config->proxy_key_type);
   Curl_safefree(config->key_passwd);
+  Curl_safefree(config->proxy_key_passwd);
   Curl_safefree(config->pubkey);
   Curl_safefree(config->hostpubmd5);
   Curl_safefree(config->engine);
 
   Curl_safefree(config->customrequest);
   Curl_safefree(config->krblevel);
@@ -135,13 +147,13 @@
   config->last_post = NULL;
 
   curl_slist_free_all(config->telnet_options);
   curl_slist_free_all(config->resolve);
   curl_slist_free_all(config->connect_to);
 
-  Curl_safefree(config->socksproxy);
+  Curl_safefree(config->preproxy);
   Curl_safefree(config->proxy_service_name);
   Curl_safefree(config->service_name);
 
   Curl_safefree(config->ftp_account);
   Curl_safefree(config->ftp_alternative_to_user);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cfgable.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cfgable.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_cfgable.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_cfgable.h	2016-12-19 15:27:56.000000000 +0800
@@ -75,12 +75,15 @@
   char *dns_ipv6_addr; /* dot notation */
   char *userpwd;
   char *login_options;
   char *tls_username;
   char *tls_password;
   char *tls_authtype;
+  char *proxy_tls_username;
+  char *proxy_tls_password;
+  char *proxy_tls_authtype;
   char *proxyuserpwd;
   char *proxy;
   int proxyver;             /* set to CURLPROXY_HTTP* define */
   char *noproxy;
   char *mail_from;
   struct curl_slist *mail_rcpt;
@@ -103,33 +106,44 @@
   char *netrc_file;
   struct getout *url_list;  /* point to the first node */
   struct getout *url_last;  /* point to the last/current node */
   struct getout *url_get;   /* point to the node to fill in URL */
   struct getout *url_out;   /* point to the node to fill in outfile */
   char *cipher_list;
+  char *proxy_cipher_list;
   char *cert;
+  char *proxy_cert;
   char *cert_type;
+  char *proxy_cert_type;
   char *cacert;
+  char *proxy_cacert;
   char *capath;
+  char *proxy_capath;
   char *crlfile;
+  char *proxy_crlfile;
   char *pinnedpubkey;
   char *key;
+  char *proxy_key;
   char *key_type;
+  char *proxy_key_type;
   char *key_passwd;
+  char *proxy_key_passwd;
   char *pubkey;
   char *hostpubmd5;
   char *engine;
   bool crlf;
   char *customrequest;
   char *krblevel;
   long httpversion;
   bool nobuffer;
   bool readbusy;            /* set when reading input returns EAGAIN */
   bool globoff;
   bool use_httpget;
   bool insecure_ok;         /* set TRUE to allow insecure SSL connects */
+  bool proxy_insecure_ok;   /* set TRUE to allow insecure SSL connects
+                               for proxy */
   bool verifystatus;
   bool create_dirs;
   bool ftp_create_dirs;
   bool ftp_skip_ip;
   bool proxynegotiate;
   bool proxyntlm;
@@ -139,12 +153,13 @@
   char *writeout;           /* %-styled format string to output */
   bool writeenv;            /* write results to environment, if available */
   struct curl_slist *quote;
   struct curl_slist *postquote;
   struct curl_slist *prequote;
   long ssl_version;
+  long proxy_ssl_version;
   long ip_version;
   curl_TimeCond timecond;
   time_t condtime;
   struct curl_slist *headers;
   struct curl_slist *proxyheaders;
   struct curl_httppost *httppost;
@@ -160,25 +175,24 @@
 
   bool ftp_ssl;
   bool ftp_ssl_reqd;
   bool ftp_ssl_control;
   bool ftp_ssl_ccc;
   int ftp_ssl_ccc_mode;
-
-  char *socksproxy;         /* set to server string */
-  int socksver;             /* set to CURLPROXY_SOCKS* define */
+  char *preproxy;
   int socks5_gssapi_nec;    /* The NEC reference server does not protect the
                                encryption type exchange */
   char *proxy_service_name; /* set authentication service name for HTTP and
                                SOCKS5 proxies */
   char *service_name;       /* set authentication service name for DIGEST-MD5,
                                Kerberos 5 and SPNEGO */
 
   bool tcp_nodelay;
   bool tcp_fastopen;
   long req_retry;           /* number of retries */
+  bool retry_connrefused;   /* set connection refused as a transient error */
   long retry_delay;         /* delay between retries (in seconds) */
   long retry_maxtime;       /* maximum time to keep retrying */
 
   char *ftp_account;        /* for ACCT */
   char *ftp_alternative_to_user;  /* send command if USER/PASS fails */
   int ftp_filemethod;
@@ -198,13 +212,16 @@
   int default_node_flags;   /* default flags to search for each 'node', which
                                is basically each given URL to transfer */
 
   bool xattr;               /* store metadata in extended attributes */
   long gssapi_delegation;
   bool ssl_allow_beast;     /* allow this SSL vulnerability */
+  bool proxy_ssl_allow_beast; /* allow this SSL vulnerability for proxy*/
+
   bool ssl_no_revoke;       /* disable SSL certificate revocation checks */
+  /*bool proxy_ssl_no_revoke; */
 
   bool use_metalink;        /* process given URLs as metalink XML file */
   metalinkfile *metalinkfile_list; /* point to the first node */
   metalinkfile *metalinkfile_last; /* point to the last/current node */
 #ifdef CURLDEBUG
   bool test_event_based;
@@ -235,13 +252,13 @@
   FILE *trace_stream;
   bool trace_fopened;
   trace tracetype;
   bool tracetime;                 /* include timestamp? */
   int progressmode;               /* CURL_PROGRESS_BAR / CURL_PROGRESS_STATS */
   char *libcurl;                  /* Output libcurl code to this file name */
-
+  bool fail_early;                /* exit on first transfer error */
   struct OperationConfig *first;
   struct OperationConfig *current;
   struct OperationConfig *last;   /* Always last in the struct */
 };
 
 void config_init(struct OperationConfig *config);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_doswin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_doswin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_doswin.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_doswin.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -428,13 +428,13 @@
             *d++ = 'x';
             if(d == dlimit)
               break;
             *d   = 'x';
           }
           else {
-            memcpy (d, "plus", 4);
+            memcpy(d, "plus", 4);
             d += 3;
           }
         }
         s++;
         idx++;
       }
@@ -612,13 +612,13 @@
 /*
  * Disable program default argument globbing. We do it on our own.
  */
 char **__crt0_glob_function(char *arg)
 {
   (void)arg;
-  return (char**)0;
+  return (char **)0;
 }
 
 #endif /* MSDOS && (__DJGPP__ || __GO32__) */
 
 #ifdef WIN32
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_getparam.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_getparam.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_getparam.c	2016-11-01 04:51:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_getparam.c	2016-12-19 15:27:56.000000000 +0800
@@ -122,12 +122,13 @@
   {"$b", "ftp-pasv",                 FALSE},
   {"$c", "socks5",                   TRUE},
   {"$d", "tcp-nodelay",              FALSE},
   {"$e", "proxy-digest",             FALSE},
   {"$f", "proxy-basic",              FALSE},
   {"$g", "retry",                    TRUE},
+  {"$V", "retry-connrefused",        FALSE},
   {"$h", "retry-delay",              TRUE},
   {"$i", "retry-max-time",           TRUE},
   {"$k", "proxy-negotiate",          FALSE},
   {"$m", "ftp-account",              TRUE},
   {"$n", "proxy-anyauth",            FALSE},
   {"$o", "trace-time",               FALSE},
@@ -187,12 +188,13 @@
   {"02",  "http2",                   FALSE},
   {"03",  "http2-prior-knowledge",   FALSE},
   {"1",  "tlsv1",                    FALSE},
   {"10",  "tlsv1.0",                 FALSE},
   {"11",  "tlsv1.1",                 FALSE},
   {"12",  "tlsv1.2",                 FALSE},
+  {"13",  "tlsv1.3",                 FALSE},
   {"2",  "sslv2",                    FALSE},
   {"3",  "sslv3",                    FALSE},
   {"4",  "ipv4",                     FALSE},
   {"6",  "ipv6",                     FALSE},
   {"a",  "append",                   FALSE},
   {"A",  "user-agent",               TRUE},
@@ -225,13 +227,30 @@
   {"Eo", "login-options",            TRUE},
   {"Ep", "pinnedpubkey",             TRUE},
   {"Eq", "cert-status",              FALSE},
   {"Er", "false-start",              FALSE},
   {"Es", "ssl-no-revoke",            FALSE},
   {"Et", "tcp-fastopen",             FALSE},
+  {"Eu", "proxy-tlsuser",            TRUE},
+  {"Ev", "proxy-tlspassword",        TRUE},
+  {"Ew", "proxy-tlsauthtype",        TRUE},
+  {"Ex", "proxy-cert",               TRUE},
+  {"Ey", "proxy-cert-type",          TRUE},
+  {"Ez", "proxy-key",                TRUE},
+  {"E0", "proxy-key-type",           TRUE},
+  {"E1", "proxy-pass",               TRUE},
+  {"E2", "proxy-ciphers",            TRUE},
+  {"E3", "proxy-crlfile",            TRUE},
+  {"E4", "proxy-ssl-allow-beast",    FALSE},
+  {"E5", "login-options",            TRUE},
+  {"E6", "proxy-cacert",             TRUE},
+  {"E7", "proxy-capath",             TRUE},
+  {"E8", "proxy-insecure",           FALSE},
+  {"E9", "proxy-tlsv1",              FALSE},
   {"f",  "fail",                     FALSE},
+  {"fa", "fail-early",               FALSE},
   {"F",  "form",                     TRUE},
   {"Fs", "form-string",              TRUE},
   {"g",  "globoff",                  FALSE},
   {"G",  "get",                      FALSE},
   {"h",  "help",                     FALSE},
   {"H",  "header",                   TRUE},
@@ -268,12 +287,13 @@
   {"u",  "user",                     TRUE},
   {"U",  "proxy-user",               TRUE},
   {"v",  "verbose",                  FALSE},
   {"V",  "version",                  FALSE},
   {"w",  "write-out",                TRUE},
   {"x",  "proxy",                    TRUE},
+  {"xa", "preproxy",                 TRUE},
   {"X",  "request",                  TRUE},
   {"Y",  "speed-limit",              TRUE},
   {"y",  "speed-time",               TRUE},
   {"z",  "time-cond",                TRUE},
   {"#",  "progress-bar",             FALSE},
   {":",  "next",                     FALSE},
@@ -378,12 +398,26 @@
     }
   }
 done:
   *certname_place = '\0';
 }
 
+static void
+GetFileAndPassword(char *nextarg, char **file, char **password)
+{
+  char *certname, *passphrase;
+  parse_cert_parameter(nextarg, &certname, &passphrase);
+  Curl_safefree(*file);
+  *file = certname;
+  if(passphrase) {
+    Curl_safefree(*password);
+    *password = passphrase;
+  }
+  cleanarg(nextarg);
+}
+
 ParameterError getparameter(char *flag,    /* f or -long-flag */
                             char *nextarg, /* NULL if unset */
                             bool *usedarg, /* set to TRUE if the arg
                                               has been used */
                             struct GlobalConfig *global,
                             struct OperationConfig *config)
@@ -721,13 +755,17 @@
       case '~': /* --xattr */
         config->xattr = toggle;
         break;
       case '@': /* the URL! */
       {
         struct getout *url;
-        if(config->url_get || ((config->url_get = config->url_list) != NULL)) {
+
+        if(!config->url_get)
+          config->url_get = config->url_list;
+
+        if(config->url_get) {
           /* there's a node here, if it already is filled-in continue to find
              an "empty" node */
           while(config->url_get && (config->url_get->flags & GETOUT_URL))
             config->url_get = config->url_get->next;
         }
 
@@ -749,37 +787,37 @@
         }
       }
       }
       break;
     case '$': /* more options without a short option */
       switch(subletter) {
-      case 'a': /* --ftp-ssl */
+      case 'a': /* --ssl */
         if(toggle && !(curlinfo->features & CURL_VERSION_SSL))
           return PARAM_LIBCURL_DOESNT_SUPPORT;
         config->ftp_ssl = toggle;
         break;
       case 'b': /* --ftp-pasv */
         Curl_safefree(config->ftpport);
         break;
       case 'c': /* --socks5 specifies a socks5 proxy to use, and resolves
                    the name locally and passes on the resolved address */
-        GetStr(&config->socksproxy, nextarg);
-        config->socksver = CURLPROXY_SOCKS5;
+        GetStr(&config->proxy, nextarg);
+        config->proxyver = CURLPROXY_SOCKS5;
         break;
       case 't': /* --socks4 specifies a socks4 proxy to use */
-        GetStr(&config->socksproxy, nextarg);
-        config->socksver = CURLPROXY_SOCKS4;
+        GetStr(&config->proxy, nextarg);
+        config->proxyver = CURLPROXY_SOCKS4;
         break;
       case 'T': /* --socks4a specifies a socks4a proxy to use */
-        GetStr(&config->socksproxy, nextarg);
-        config->socksver = CURLPROXY_SOCKS4A;
+        GetStr(&config->proxy, nextarg);
+        config->proxyver = CURLPROXY_SOCKS4A;
         break;
       case '2': /* --socks5-hostname specifies a socks5 proxy and enables name
                    resolving with the proxy */
-        GetStr(&config->socksproxy, nextarg);
-        config->socksver = CURLPROXY_SOCKS5_HOSTNAME;
+        GetStr(&config->proxy, nextarg);
+        config->proxyver = CURLPROXY_SOCKS5_HOSTNAME;
         break;
       case 'd': /* --tcp-nodelay option */
         config->tcp_nodelay = toggle;
         break;
       case 'e': /* --proxy-digest */
         config->proxydigest = toggle;
@@ -789,12 +827,15 @@
         break;
       case 'g': /* --retry */
         err = str2unum(&config->req_retry, nextarg);
         if(err)
           return err;
         break;
+      case 'V': /* --retry-connrefused */
+        config->retry_connrefused = toggle;
+        break;
       case 'h': /* --retry-delay */
         err = str2unum(&config->retry_delay, nextarg);
         if(err)
           return err;
         break;
       case 'i': /* --retry-max-time */
@@ -844,13 +885,13 @@
           }
         }
         break;
       case 'u': /* --ftp-alternative-to-user */
         GetStr(&config->ftp_alternative_to_user, nextarg);
         break;
-      case 'v': /* --ftp-ssl-reqd */
+      case 'v': /* --ssl-reqd */
         if(toggle && !(curlinfo->features & CURL_VERSION_SSL))
           return PARAM_LIBCURL_DOESNT_SUPPORT;
         config->ftp_ssl_reqd = toggle;
         break;
       case 'w': /* --no-sessionid */
         config->disable_sessionid = (!toggle)?TRUE:FALSE;
@@ -1058,12 +1099,16 @@
         config->ssl_version = CURL_SSLVERSION_TLSv1_1;
         break;
       case '2':
         /* TLS version 1.2 */
         config->ssl_version = CURL_SSLVERSION_TLSv1_2;
         break;
+      case '3':
+        /* TLS version 1.3 */
+        config->ssl_version = CURL_SSLVERSION_TLSv1_3;
+        break;
       }
       break;
     case '2':
       /* SSL version 2 */
       config->ssl_version = CURL_SSLVERSION_SSLv2;
       break;
@@ -1321,12 +1366,15 @@
         config->autoreferer = FALSE;
       GetStr(&config->referer, nextarg);
     }
     break;
     case 'E':
       switch(subletter) {
+      case '\0': /* certificate file */
+        GetFileAndPassword(nextarg, &config->cert, &config->key_passwd);
+        break;
       case 'a': /* CA info PEM file */
         /* CA info PEM file */
         GetStr(&config->cacert, nextarg);
         break;
       case 'b': /* cert file type */
         GetStr(&config->cert_type, nextarg);
@@ -1411,29 +1459,108 @@
         break;
 
       case 't': /* --tcp-fastopen */
         config->tcp_fastopen = TRUE;
         break;
 
-      default: /* certificate file */
-      {
-        char *certname, *passphrase;
-        parse_cert_parameter(nextarg, &certname, &passphrase);
-        Curl_safefree(config->cert);
-        config->cert = certname;
-        if(passphrase) {
-          Curl_safefree(config->key_passwd);
-          config->key_passwd = passphrase;
+      case 'u': /* TLS username for proxy */
+        if(curlinfo->features & CURL_VERSION_TLSAUTH_SRP)
+          GetStr(&config->proxy_tls_username, nextarg);
+        else
+          return PARAM_LIBCURL_DOESNT_SUPPORT;
+        break;
+
+      case 'v': /* TLS password for proxy */
+        if(curlinfo->features & CURL_VERSION_TLSAUTH_SRP)
+          GetStr(&config->proxy_tls_password, nextarg);
+        else
+          return PARAM_LIBCURL_DOESNT_SUPPORT;
+        break;
+
+      case 'w': /* TLS authentication type for proxy */
+        if(curlinfo->features & CURL_VERSION_TLSAUTH_SRP) {
+          GetStr(&config->proxy_tls_authtype, nextarg);
+          if(!curl_strequal(config->proxy_tls_authtype, "SRP"))
+            return PARAM_LIBCURL_DOESNT_SUPPORT; /* only support TLS-SRP */
         }
+        else
+          return PARAM_LIBCURL_DOESNT_SUPPORT;
+        break;
+
+      case 'x': /* certificate file for proxy */
+        GetFileAndPassword(nextarg, &config->proxy_cert,
+                           &config->proxy_key_passwd);
+        break;
+
+      case 'y': /* cert file type for proxy */
+        GetStr(&config->proxy_cert_type, nextarg);
+        break;
+
+      case 'z': /* private key file for proxy */
+        GetStr(&config->proxy_key, nextarg);
+        break;
+
+      case '0': /* private key file type for proxy */
+        GetStr(&config->proxy_key_type, nextarg);
+        break;
+
+      case '1': /* private key passphrase for proxy */
+        GetStr(&config->proxy_key_passwd, nextarg);
         cleanarg(nextarg);
-      }
+        break;
+
+      case '2': /* ciphers for proxy */
+        GetStr(&config->proxy_cipher_list, nextarg);
+        break;
+
+      case '3': /* CRL info PEM file for proxy */
+        /* CRL file */
+        GetStr(&config->proxy_crlfile, nextarg);
+        break;
+
+      case '4': /* no empty SSL fragments for proxy */
+        if(curlinfo->features & CURL_VERSION_SSL)
+          config->proxy_ssl_allow_beast = toggle;
+        break;
+
+      case '5': /* --login-options */
+        GetStr(&config->login_options, nextarg);
+        break;
+
+      case '6': /* CA info PEM file for proxy */
+        /* CA info PEM file */
+        GetStr(&config->proxy_cacert, nextarg);
+        break;
+
+      case '7': /* CA info PEM file for proxy */
+        /* CA cert directory */
+        GetStr(&config->proxy_capath, nextarg);
+        break;
+
+      case '8': /* allow insecure SSL connects for proxy */
+        config->proxy_insecure_ok = toggle;
+        break;
+
+      case '9':
+        /* TLS version 1 for proxy */
+        config->proxy_ssl_version = CURL_SSLVERSION_TLSv1;
+        break;
+
+      default: /* unknown flag */
+        return PARAM_OPTION_UNKNOWN;
       }
       break;
     case 'f':
-      /* fail hard on errors  */
-      config->failonerror = toggle;
+      switch(subletter) {
+      case 'a': /* --fail-early */
+        global->fail_early = toggle;
+        break;
+      default:
+        /* fail hard on errors  */
+        config->failonerror = toggle;
+      }
       break;
     case 'F':
       /* "form data" simulation, this is a little advanced so lets do our best
          to sort this out slowly and carefully */
       if(formparse(config,
                    nextarg,
@@ -1503,13 +1630,13 @@
       break;
     case 'l':
       config->dirlistonly = toggle; /* only list the names of the FTP dir */
       break;
     case 'L':
       config->followlocation = toggle; /* Follow Location: HTTP headers */
-      switch (subletter) {
+      switch(subletter) {
       case 't':
         /* Continue to send authentication (user+password) when following
          * locations, even when hostname changed */
         config->unrestricted_auth = toggle;
         break;
       }
@@ -1562,13 +1689,15 @@
       }
       /* fall-through! */
     case 'o': /* --output */
       /* output file */
     {
       struct getout *url;
-      if(config->url_out || ((config->url_out = config->url_list) != NULL)) {
+      if(!config->url_out)
+        config->url_out = config->url_list;
+      if(config->url_out) {
         /* there's a node here, if it already is filled-in continue to find
            an "empty" node */
         while(config->url_out && (config->url_out->flags & GETOUT_OUTFILE))
           config->url_out = config->url_out->next;
       }
 
@@ -1699,13 +1828,15 @@
         return err;
       break;
     case 'T':
       /* we are uploading */
     {
       struct getout *url;
-      if(config->url_out || ((config->url_out = config->url_list) != NULL)) {
+      if(!config->url_out)
+        config->url_out = config->url_list;
+      if(config->url_out) {
         /* there's a node here, if it already is filled-in continue to find
            an "empty" node */
         while(config->url_out && (config->url_out->flags & GETOUT_UPLOAD))
           config->url_out = config->url_out->next;
       }
 
@@ -1787,15 +1918,22 @@
           warnf(global, "Failed to read %s", fname);
       }
       else
         GetStr(&config->writeout, nextarg);
       break;
     case 'x':
-      /* proxy */
-      GetStr(&config->proxy, nextarg);
-      config->proxyver = CURLPROXY_HTTP;
+      switch(subletter) {
+      case 'a': /* --preproxy */
+        GetStr(&config->preproxy, nextarg);
+        break;
+      default:
+        /* --proxy */
+        GetStr(&config->proxy, nextarg);
+        config->proxyver = CURLPROXY_HTTP;
+        break;
+      }
       break;
     case 'X':
       /* set custom request */
       GetStr(&config->customrequest, nextarg);
       break;
     case 'y':
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_getpass.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_getpass.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_getpass.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_getpass.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -27,10 +27,10 @@
 /* If there's a system-provided function named like this, we trust it is
    also found in one of the standard headers. */
 
 /*
  * Returning NULL will abort the continued operation!
  */
-char* getpass_r(const char *prompt, char* buffer, size_t buflen);
+char *getpass_r(const char *prompt, char *buffer, size_t buflen);
 #endif
 
 #endif /* HEADER_CURL_TOOL_GETPASS_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_help.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_help.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_help.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_help.c	2016-12-19 15:27:56.000000000 +0800
@@ -75,20 +75,21 @@
   "     --disable-eprt  Inhibit using EPRT or LPRT (F)",
   "     --disable-epsv  Inhibit using EPSV (F)",
   "     --dns-servers   DNS server addrs to use: 1.1.1.1;2.2.2.2",
   "     --dns-interface  Interface to use for DNS requests",
   "     --dns-ipv4-addr  IPv4 address to use for DNS requests, dot notation",
   "     --dns-ipv6-addr  IPv6 address to use for DNS requests, dot notation",
-  " -D, --dump-header FILE  Write the headers to FILE",
+  " -D, --dump-header FILE  Write the received headers to FILE",
   "     --egd-file FILE  EGD socket path for random data (SSL)",
   "     --engine ENGINE  Crypto engine (use \"--engine list\" for list) (SSL)",
 #ifdef USE_ENVIRONMENT
   "     --environment   Write results to environment variables (RISC OS)",
 #endif
   "     --expect100-timeout SECONDS How long to wait for 100-continue (H)",
   " -f, --fail          Fail silently (no output at all) on HTTP errors (H)",
+  "     --fail-early    Fail on first transfer error, do not continue",
   "     --false-start   Enable TLS False Start.",
   " -F, --form CONTENT  Specify HTTP multipart POST data (H)",
   "     --form-string STRING  Specify HTTP multipart POST data (H)",
   "     --ftp-account DATA  Account data string (F)",
   "     --ftp-alternative-to-user COMMAND  "
   "String to replace \"USER [name]\" (F)",
@@ -164,24 +165,49 @@
   "     --post301       "
   "Do not switch to GET after following a 301 redirect (H)",
   "     --post302       "
   "Do not switch to GET after following a 302 redirect (H)",
   "     --post303       "
   "Do not switch to GET after following a 303 redirect (H)",
+  "     --preproxy [PROTOCOL://]HOST[:PORT] Proxy before HTTP(S) proxy",
   " -#, --progress-bar  Display transfer progress as a progress bar",
   "     --proto PROTOCOLS  Enable/disable PROTOCOLS",
   "     --proto-default PROTOCOL  Use PROTOCOL for any URL missing a scheme",
   "     --proto-redir PROTOCOLS   Enable/disable PROTOCOLS on redirect",
   " -x, --proxy [PROTOCOL://]HOST[:PORT]  Use proxy on given port",
   "     --proxy-anyauth  Pick \"any\" proxy authentication method (H)",
   "     --proxy-basic   Use Basic authentication on the proxy (H)",
   "     --proxy-digest  Use Digest authentication on the proxy (H)",
+  "     --proxy-cacert FILE "
+  "CA certificate to verify peer against for proxy (SSL)",
+  "     --proxy-capath DIR "
+  "CA directory to verify peer against for proxy (SSL)",
+  "     --proxy-cert CERT[:PASSWD] "
+  "Client certificate file and password for proxy (SSL)",
+  "     --proxy-cert-type TYPE "
+  "Certificate file type (DER/PEM/ENG) for proxy (SSL)",
+  "     --proxy-ciphers LIST SSL ciphers to use for proxy (SSL)",
+  "     --proxy-crlfile FILE "
+  "Get a CRL list in PEM format from the given file for proxy",
+  "     --proxy-insecure "
+  "Allow connections to SSL sites without certs for proxy (H)",
+  "     --proxy-key KEY Private key file name for proxy (SSL)",
+  "     --proxy-key-type TYPE "
+  "Private key file type for proxy (DER/PEM/ENG) (SSL)",
   "     --proxy-negotiate  "
   "Use HTTP Negotiate (SPNEGO) authentication on the proxy (H)",
   "     --proxy-ntlm    Use NTLM authentication on the proxy (H)",
   "     --proxy-header LINE Pass custom header LINE to proxy (H)",
+  "     --proxy-pass PASS Pass phrase for the private key for proxy (SSL)",
+  "     --proxy-ssl-allow-beast "
+  "Allow security flaw to improve interop for proxy (SSL)",
+  "     --proxy-tlsv1   Use TLSv1 for proxy (SSL)",
+  "     --proxy-tlsuser USER TLS username for proxy",
+  "     --proxy-tlspassword STRING TLS password for proxy",
+  "     --proxy-tlsauthtype STRING "
+  "TLS authentication type for proxy (default SRP)",
   "     --proxy-service-name NAME  SPNEGO proxy service name",
   "     --service-name NAME  SPNEGO service name",
   " -U, --proxy-user USER[:PASSWORD]  Proxy user and password",
   "     --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port",
   " -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)",
   "     --pubkey KEY    Public key file name (SSH)",
@@ -195,12 +221,13 @@
   "     --remote-name-all  Use the remote file name for all URLs",
   " -R, --remote-time   Set the remote file's time on the local output",
   " -X, --request COMMAND  Specify request command to use",
   "     --resolve HOST:PORT:ADDRESS  Force resolve of HOST:PORT to ADDRESS",
   "     --retry NUM   "
   "Retry request NUM times if transient problems occur",
+  "     --retry-connrefused  Retry on connection refused (use with --retry)",
   "     --retry-delay SECONDS  Wait SECONDS between retries",
   "     --retry-max-time SECONDS  Retry only within this period",
   "     --sasl-ir       Enable initial response in SASL authentication",
   " -S, --show-error    "
   "Show error. With -s, make curl show errors when they occur",
   " -s, --silent        Silent mode (don't output anything)",
@@ -229,12 +256,13 @@
   "     --tftp-no-options  Do not send TFTP options requests",
   " -z, --time-cond TIME   Transfer based on a time condition",
   " -1, --tlsv1         Use >= TLSv1 (SSL)",
   "     --tlsv1.0       Use TLSv1.0 (SSL)",
   "     --tlsv1.1       Use TLSv1.1 (SSL)",
   "     --tlsv1.2       Use TLSv1.2 (SSL)",
+  "     --tlsv1.3       Use TLSv1.3 (SSL)",
   "     --trace FILE    Write a debug trace to FILE",
   "     --trace-ascii FILE  Like --trace, but without hex output",
   "     --trace-time    Add time stamps to trace/verbose output",
   "     --tr-encoding   Request compressed transfer encoding (H)",
   " -T, --upload-file FILE  Transfer FILE to destination",
   "     --url URL       URL to work with",
@@ -285,12 +313,13 @@
   {"SSL",            CURL_VERSION_SSL},
   {"libz",           CURL_VERSION_LIBZ},
   {"CharConv",       CURL_VERSION_CONV},
   {"TLS-SRP",        CURL_VERSION_TLSAUTH_SRP},
   {"HTTP2",          CURL_VERSION_HTTP2},
   {"UnixSockets",    CURL_VERSION_UNIX_SOCKETS},
+  {"HTTPS-proxy",    CURL_VERSION_HTTPS_PROXY}
 };
 
 void tool_help(void)
 {
   int i;
   for(i = 0; helptext[i]; i++) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_homedir.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_homedir.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_homedir.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_homedir.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -43,13 +43,13 @@
   if(rc > 0 && rc < sizeof(buf1)) {
     env = buf1;
     variable = buf1;
   }
   if(do_expand && strchr(variable, '%')) {
     /* buf2 == variable if not expanded */
-    rc = ExpandEnvironmentStrings (variable, buf2, sizeof(buf2));
+    rc = ExpandEnvironmentStrings(variable, buf2, sizeof(buf2));
     if(rc > 0 && rc < sizeof(buf2) &&
        !strchr(buf2, '%'))    /* no vars still unexpanded */
       env = buf2;
   }
 #else
   (void)do_expand;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_hugehelp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_hugehelp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_hugehelp.c	2016-11-02 14:33:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_hugehelp.c	2016-12-20 21:41:16.000000000 +0800
@@ -1,11 +1,11 @@
 #include "tool_setup.h"
 #ifndef HAVE_LIBZ
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Wed Nov  2 07:33:11 2016
+ * Generation time: Tue Dec 20 14:41:16 2016
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 void hugehelp(void)
 {
    fputs(
@@ -128,23 +128,24 @@
 "\n"
 , stdout);
  fputs(
 "       It  is not the same case for FTP upload as that operation does not spit\n"
 "       out any response data to the terminal.\n"
 "\n"
-"       If you prefer a progress \"bar\" instead of the regular meter, -# is your\n"
-"       friend.\n"
+"       If you prefer a progress  \"bar\"  instead  of  the  regular  meter,  -#,\n"
+"       --progress-bar is your friend.\n"
+"\n"
 "OPTIONS\n"
 "       Options  start  with  one or two dashes. Many of the options require an\n"
 "       additional value next to them.\n"
 "\n"
 "       The short \"single-dash\" form of the options, -d  for  example,  may  be\n"
 , stdout);
  fputs(
 "       used with or without a space between it and its value, although a space\n"
-"       is a recommended separator. The long  \"double-dash\"  form,  --data  for\n"
+"       is a recommended separator. The long \"double-dash\" form, -d, --data for\n"
 "       example, requires a space between it and its value.\n"
 "\n"
 "       Short version options that don't need any additional values can be used\n"
 "       immediately next to each other, like for example you  can  specify  all\n"
 "       the options -O, -L and -v at once as -OLv.\n"
 "\n"
@@ -154,1805 +155,1905 @@
 "       disabled with --no-option. That is, you use the exact same option  name\n"
 "       but prefix it with \"no-\". However, in this list we mostly only list and\n"
 "       show the --option version of them. (This concept with --no options  was\n"
 "       added  in  7.19.0.  Previously  most  options  were  toggled  on/off on\n"
 "       repeated use of the same command line option.)\n"
 "\n"
-"       -#, --progress-bar\n"
+"       --anyauth\n"
 , stdout);
  fputs(
-"              Make curl display progress as a simple progress bar  instead  of\n"
-"              the standard, more informational, meter.\n"
-"\n"
-"       -:, --next\n"
-"              Tells curl to use a separate operation for the following URL and\n"
-"              associated  options.  This  allows  you  to  send  several   URL\n"
-"              requests,  each  with  their  own specific options, for example,\n"
-"              such as different user names or custom requests for each. (Added\n"
-"              in 7.36.0)\n"
-"\n"
+"              (HTTP) Tells curl to figure out authentication method by itself,\n"
+"              and  use  the most secure one the remote site claims to support.\n"
+"              This is done by first doing a request and checking the response-\n"
+"              headers,  thus  possibly  inducing  an extra network round-trip.\n"
+"              This is  used  instead  of  setting  a  specific  authentication\n"
+"              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
 , stdout);
  fputs(
-"       -0, --http1.0\n"
-"              (HTTP)  Tells  curl to use HTTP version 1.0 instead of using its\n"
-"              internally preferred: HTTP 1.1.\n"
+"              --negotiate.\n"
 "\n"
-"       --http1.1\n"
-"              (HTTP) Tells curl to use HTTP version 1.1. This is the  internal\n"
-"              default version. (Added in 7.33.0)\n"
+"              Using --anyauth is not recommended if you do uploads from stdin,\n"
+"              since  it  may require data to be sent twice and then the client\n"
+"              must be able to rewind. If the need should arise when  uploading\n"
+"              from stdin, the upload operation will fail.\n"
 "\n"
-"       --http2\n"
-"              (HTTP)  Tells  curl  to  issue  its  requests using HTTP 2. This\n"
-"              requires that the underlying libcurl was built  to  support  it.\n"
-"              (Added in 7.33.0)\n"
+"              Used together with -u, --user.\n"
 "\n"
-, stdout);
- fputs(
-"       --http2-prior-knowledge\n"
-"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
-"              HTTP/2 without HTTP/1.1 Upgrade.  It  requires  prior  knowledge\n"
-"              that  the  server  supports HTTP/2 straight away. HTTPS requests\n"
-"              will still do HTTP/2 the standard way with  negotiated  protocol\n"
-"              version in the TLS handshake.\n"
+"              See also --proxy-anyauth and --basic and --digest.\n"
 "\n"
-"              HTTP/2  support  in  general  also  requires that the underlying\n"
+"       -a, --append\n"
 , stdout);
  fputs(
-"              libcurl was built to support it. (Added in 7.49.0)\n"
-"\n"
-"       --no-npn\n"
-"              Disable the NPN TLS extension. NPN  is  enabled  by  default  if\n"
-"              libcurl  was built with an SSL library that supports NPN. NPN is\n"
-"              used by a libcurl that supports HTTP 2 to negotiate HTTP 2  sup-\n"
-"              port with the server during https sessions.\n"
-"\n"
-"              (Added in 7.36.0)\n"
+"              (FTP SFTP) When used in an upload, this makes curl append to the\n"
+"              target file instead  of  overwriting  it.  If  the  remote  file\n"
+"              doesn't  exist,  it  will  be  created.   Note that this flag is\n"
+"              ignored by some SFTP servers (including OpenSSH).\n"
 "\n"
-"       --no-alpn\n"
+"       --basic\n"
+"              (HTTP) Tells curl to use  HTTP  Basic  authentication  with  the\n"
+"              remote  host.  This  is  the  default and this option is usually\n"
 , stdout);
  fputs(
-"              Disable  the  ALPN  TLS extension. ALPN is enabled by default if\n"
-"              libcurl was built with an SSL library that supports  ALPN.  ALPN\n"
-"              is  used  by  a libcurl that supports HTTP 2 to negotiate HTTP 2\n"
-"              support with the server during https sessions.\n"
-"\n"
-"              (Added in 7.36.0)\n"
+"              pointless, unless you use it to override a previously set option\n"
+"              that  sets  a  different  authentication method (such as --ntlm,\n"
+"              --digest, or --negotiate).\n"
 "\n"
-"       -1, --tlsv1\n"
-"              (SSL) Forces curl to use TLS version 1.x when negotiating with a\n"
-, stdout);
- fputs(
-"              remote  TLS  server.   You can use options --tlsv1.0, --tlsv1.1,\n"
-"              and --tlsv1.2 to control the TLS version more precisely (if  the\n"
-"              SSL backend in use supports such a level of control).\n"
+"              Used together with -u, --user.\n"
 "\n"
-"       -2, --sslv2\n"
-"              (SSL)  Forces  curl to use SSL version 2 when negotiating with a\n"
-"              remote SSL server. Sometimes curl is built  without  SSLv2  sup-\n"
-"              port. SSLv2 is widely considered insecure (see RFC 6176).\n"
+"              See also --proxy-basic.\n"
 "\n"
-"       -3, --sslv3\n"
+"       --cacert <CA certificate>\n"
+"              (TLS) Tells curl to use the specified certificate file to verify\n"
+"              the  peer.  The  file  may contain multiple CA certificates. The\n"
 , stdout);
  fputs(
-"              (SSL)  Forces  curl to use SSL version 3 when negotiating with a\n"
-"              remote SSL server. Sometimes curl is built  without  SSLv3  sup-\n"
-"              port. SSLv3 is widely considered insecure (see RFC 7568).\n"
+"              certificate(s) must be in PEM format. Normally curl is built  to\n"
+"              use a default file for this, so this option is typically used to\n"
+"              alter that default file.\n"
 "\n"
-"       -4, --ipv4\n"
-"              This  option tells curl to resolve names to IPv4 addresses only,\n"
-"              and not for example try IPv6.\n"
+"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
+"              if  it  is  set,  and uses the given path as a path to a CA cert\n"
+"              bundle. This option overrides that variable.\n"
 "\n"
-"       -6, --ipv6\n"
-"              This option tells curl to resolve names to IPv6 addresses  only,\n"
+"              The windows version of curl will automatically  look  for  a  CA\n"
 , stdout);
  fputs(
-"              and not for example try IPv4.\n"
+"              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
+"              tory as curl.exe, or in the Current Working Directory, or in any\n"
+"              folder along your PATH.\n"
 "\n"
-"       -a, --append\n"
-"              (FTP/SFTP) When used in an upload, this makes curl append to the\n"
-"              target file instead  of  overwriting  it.  If  the  remote  file\n"
-"              doesn't  exist,  it  will  be  created.   Note that this flag is\n"
-"              ignored by some SFTP servers (including OpenSSH).\n"
+"              If  curl  is  built  against  the  NSS  SSL library, the NSS PEM\n"
+"              PKCS#11 module (libnsspem.so) needs to  be  available  for  this\n"
+"              option to work properly.\n"
 "\n"
-"       -A, --user-agent <agent string>\n"
-"              (HTTP) Specify the User-Agent string to send to the HTTP server.\n"
+"              (iOS  and macOS only) If curl is built against Secure Transport,\n"
 , stdout);
  fputs(
-"              Some   badly   done  CGIs  fail  if  this  field  isn't  set  to\n"
-"              \"Mozilla/4.0\". To encode blanks  in  the  string,  surround  the\n"
-"              string  with  single  quote marks. This can also be set with the\n"
-"              -H, --header option of course.\n"
+"              then this option is supported for  backward  compatibility  with\n"
+"              other  SSL  engines,  but it should not be set. If the option is\n"
+"              not set, then curl will use the certificates in the  system  and\n"
+"              user  Keychain to verify the peer, which is the preferred method\n"
+"              of verifying the peer's certificate chain.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --anyauth\n"
-"              (HTTP) Tells curl to figure out authentication method by itself,\n"
+"       --capath <dir>\n"
 , stdout);
  fputs(
-"              and  use  the most secure one the remote site claims to support.\n"
-"              This is done by first doing a request and checking the response-\n"
-"              headers,  thus  possibly  inducing  an extra network round-trip.\n"
-"              This is  used  instead  of  setting  a  specific  authentication\n"
-"              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
-"              --negotiate.\n"
-"\n"
+"              (TLS) Tells curl to use the specified certificate  directory  to\n"
+"              verify  the  peer.  Multiple paths can be provided by separating\n"
+"              them with \":\" (e.g.  \"path1:path2:path3\"). The certificates must\n"
+"              be  in  PEM  format,  and  if curl is built against OpenSSL, the\n"
+"              directory must have been processed using  the  c_rehash  utility\n"
+"              supplied  with OpenSSL. Using --capath can allow OpenSSL-powered\n"
 , stdout);
  fputs(
-"              Note that using --anyauth is not recommended if you  do  uploads\n"
-"              from  stdin, since it may require data to be sent twice and then\n"
-"              the client must be able to rewind. If the need should arise when\n"
-"              uploading from stdin, the upload operation will fail.\n"
+"              curl to make SSL-connections much more  efficiently  than  using\n"
+"              --cacert if the --cacert file contains many CA certificates.\n"
 "\n"
-"       -b, --cookie <name=data>\n"
-"              (HTTP)  Pass the data to the HTTP server as a cookie. It is sup-\n"
-"              posedly the data previously received from the server in a  \"Set-\n"
-, stdout);
- fputs(
-"              Cookie:\"  line.  The data should be in the format \"NAME1=VALUE1;\n"
-"              NAME2=VALUE2\".\n"
+"              If this option is set, the default capath value will be ignored,\n"
+"              and if it is used several times, the last one will be used.\n"
 "\n"
-"              If no '=' symbol is used in the line, it is treated as  a  file-\n"
-"              name  to  use to read previously stored cookie lines from, which\n"
-"              should be used in this session if they match. Using this  method\n"
-"              also  activates  the  cookie  engine which will make curl record\n"
+"       --cert-status\n"
+"              (TLS) Tells curl to verify the status of the server  certificate\n"
+"              by using the Certificate Status Request (aka. OCSP stapling) TLS\n"
 , stdout);
  fputs(
-"              incoming cookies too, which may be handy if you're using this in\n"
-"              combination  with  the -L, --location option. The file format of\n"
-"              the file to read cookies from should be plain HTTP headers (Set-\n"
-"              Cookie style) or the Netscape/Mozilla cookie file format.\n"
+"              extension.\n"
 "\n"
-"              The  file  specified with -b, --cookie is only used as input. No\n"
-"              cookies will be written to the file. To store cookies,  use  the\n"
-, stdout);
- fputs(
-"              -c, --cookie-jar option.\n"
+"              If this option is enabled and the server sends an invalid  (e.g.\n"
+"              expired) response, if the response suggests that the server cer-\n"
+"              tificate has been revoked, or no response at  all  is  received,\n"
+"              the verification fails.\n"
 "\n"
-"              Exercise  caution  if  you  are  using  this option and multiple\n"
-"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
-"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
-"              then the cookie is sent for any domain (even after redirects are\n"
-"              followed)  and cannot be modified by a server-set cookie. If the\n"
+"              This  is  currently  only implemented in the OpenSSL, GnuTLS and\n"
+"              NSS backends.\n"
+"\n"
+"              Added in 7.41.0.\n"
+"\n"
+"       --cert-type <type>\n"
 , stdout);
  fputs(
-"              cookie engine is enabled and a server sets a cookie of the  same\n"
-"              name then both will be sent on a future transfer to that server,\n"
-"              likely not what you intended.  To address  these  issues  set  a\n"
-"              domain  in  Set-Cookie  (doing that will include sub-domains) or\n"
-"              use the Netscape format.\n"
+"              (TLS) Tells curl what certificate type the provided  certificate\n"
+"              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
+"              PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -B, --use-ascii\n"
-, stdout);
- fputs(
-"              (FTP/LDAP) Enable ASCII transfer. For  FTP,  this  can  also  be\n"
-"              enforced  by  using an URL that ends with \";type=A\". This option\n"
-"              causes data sent to stdout to be in text mode for win32 systems.\n"
+"              See also -E, --cert and --key and --key-type.\n"
 "\n"
-"       --basic\n"
-"              (HTTP) Tells curl to use  HTTP  Basic  authentication  with  the\n"
-"              remote  host.  This  is  the  default and this option is usually\n"
-"              pointless, unless you use it to override a previously set option\n"
+"       -E, --cert <certificate[:password]>\n"
+"              (TLS) Tells curl to use the specified  client  certificate  file\n"
 , stdout);
  fputs(
-"              that  sets  a  different  authentication method (such as --ntlm,\n"
-"              --digest, or --negotiate).\n"
-"\n"
-"              Used together with -u, --user and -x, --proxy.\n"
-"\n"
-"              See also --proxy-basic.\n"
-"\n"
-"       -c, --cookie-jar <file name>\n"
-"              (HTTP) Specify to which file you want curl to write all  cookies\n"
-"              after  a completed operation. Curl writes all cookies previously\n"
-"              read from a specified file as well as all cookies received  from\n"
+"              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
+"              col. The certificate must be in PKCS#12 format if  using  Secure\n"
+"              Transport,  or  PEM  format  if  using any other engine.  If the\n"
+"              optional password isn't specified, it will be queried for on the\n"
+"              terminal.  Note  that  this  option assumes a \"certificate\" file\n"
+"              that is the private key and the client certificate concatenated!\n"
 , stdout);
  fputs(
-"              remote server(s). If no cookies are known, no data will be writ-\n"
-"              ten. The file will be written using  the  Netscape  cookie  file\n"
-"              format.  If  you  set  the  file name to a single dash, \"-\", the\n"
-"              cookies will be written to stdout.\n"
-"\n"
-"              This command line option will activate the  cookie  engine  that\n"
-"              makes curl record and use cookies. Another way to activate it is\n"
-"              to use the -b, --cookie option.\n"
+"              See -E, --cert and --key to specify them independently.\n"
 "\n"
+"              If  curl  is  built against the NSS SSL library then this option\n"
+"              can tell curl the nickname of the certificate to use within  the\n"
+"              NSS  database defined by the environment variable SSL_DIR (or by\n"
+"              default /etc/pki/nssdb). If the NSS  PEM  PKCS#11  module  (lib-\n"
+"              nsspem.so)  is  available  then  PEM files may be loaded. If you\n"
 , stdout);
  fputs(
-"              If the cookie jar can't be created or written to, the whole curl\n"
-"              operation  won't  fail or even report an error clearly. Using -v\n"
-"              will get a warning displayed, but that is the only visible feed-\n"
-"              back you get about this possibly lethal situation.\n"
-"\n"
-"              Since 7.43.0 cookies that were imported in the Set-Cookie format\n"
-"              without a domain name are not exported by this option.\n"
+"              want to use a file from the current directory, please precede it\n"
+"              with  \"./\"  prefix, in order to avoid confusion with a nickname.\n"
+"              If the nickname contains \":\", it needs to be preceded by \"\\\"  so\n"
+"              that  it  is not recognized as password delimiter.  If the nick-\n"
+"              name contains \"\\\", it needs to be escaped as \"\\\\\" so that it  is\n"
+"              not recognized as an escape character.\n"
 "\n"
 , stdout);
  fputs(
-"              If this option is used several times, the  last  specified  file\n"
-"              name will be used.\n"
+"              (iOS  and macOS only) If curl is built against Secure Transport,\n"
+"              then the certificate string can either be the name of a certifi-\n"
+"              cate/private  key in the system or user keychain, or the path to\n"
+"              a PKCS#12-encoded certificate and private key. If  you  want  to\n"
+"              use  a  file  from the current directory, please precede it with\n"
+"              \"./\" prefix, in order to avoid confusion with a nickname.\n"
 "\n"
-"       -C, --continue-at <offset>\n"
-"              Continue/Resume  a  previous  file transfer at the given offset.\n"
-"              The given offset is the exact  number  of  bytes  that  will  be\n"
-"              skipped,  counting  from the beginning of the source file before\n"
-"              it is transferred to the destination.  If used with uploads, the\n"
 , stdout);
  fputs(
-"              FTP server command SIZE will not be used by curl.\n"
-"\n"
-"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
-"              resume the transfer. It then uses the given  output/input  files\n"
-"              to figure that out.\n"
-"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              See also --cert-type and --key and --key-type.\n"
+"\n"
 "       --ciphers <list of ciphers>\n"
-"              (SSL) Specifies which ciphers to use in the connection. The list\n"
+"              (TLS) Specifies which ciphers to use in the connection. The list\n"
+"              of  ciphers  must  specify  valid ciphers. Read up on SSL cipher\n"
+"              list details on this URL:\n"
+"\n"
+"               https://www.openssl.org/docs/apps/ciphers.html\n"
+"\n"
 , stdout);
  fputs(
-"              of ciphers must specify valid ciphers. Read  up  on  SSL  cipher\n"
-"              list           details           on           this          URL:\n"
-"              https://www.openssl.org/docs/apps/ciphers.html\n"
-"\n"
 "              NSS ciphers are done differently than OpenSSL  and  GnuTLS.  The\n"
 "              full  list of NSS ciphers is in the NSSCipherSuite entry at this\n"
-"              URL:                                         https://git.fedora-\n"
-, stdout);
- fputs(
+"              URL:\n"
+"\n"
+"               https://git.fedora-\n"
 "              hosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --compressed\n"
 "              (HTTP) Request a compressed response using one of the algorithms\n"
+, stdout);
+ fputs(
 "              curl supports, and save  the  uncompressed  document.   If  this\n"
 "              option  is  used  and  the server sends an unsupported encoding,\n"
 "              curl will report an error.\n"
 "\n"
-"       --connect-timeout <seconds>\n"
+"       -K, --config <file>\n"
+"              Specify which config file to read curl arguments from. The  con-\n"
+"              fig  file  is a text file in which command line arguments can be\n"
+"              written which then will be used as if they were written  on  the\n"
+"              actual command line.\n"
+"\n"
 , stdout);
  fputs(
-"              Maximum time in seconds that  you  allow  curl's  connection  to\n"
-"              take.   This  only  limits the connection phase, so if curl con-\n"
-"              nects within the given period it will continue - if not it  will\n"
-"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
-"\n"
-"              See also the -m, --max-time option.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       --create-dirs\n"
+"              Options  and their parameters must be specified on the same con-\n"
+"              fig file line, separated by whitespace,  colon,  or  the  equals\n"
+"              sign.  Long  option  names can optionally be given in the config\n"
+"              file without the initial double dashes and if so, the  colon  or\n"
+"              equals  characters  can  be used as separators. If the option is\n"
+"              specified with one or two dashes,  there  can  be  no  colon  or\n"
 , stdout);
  fputs(
-"              When  used  in  conjunction with the -o option, curl will create\n"
-"              the necessary local directory hierarchy as needed.  This  option\n"
-"              creates  the dirs mentioned with the -o option, nothing else. If\n"
-"              the -o file name uses no dir or if the dirs it mentions  already\n"
-"              exist, no dir will be created.\n"
-"\n"
-"              To  create remote directories when using FTP or SFTP, try --ftp-\n"
-"              create-dirs.\n"
+"              equals character between the option and its parameter.\n"
 "\n"
+"              If the parameter is to contain whitespace, the parameter must be\n"
+"              enclosed within quotes.  Within  double  quotes,  the  following\n"
+"              escape  sequences  are  available:  \\\\, \\\", \\t, \\n, \\r and \\v. A\n"
+"              backslash preceding any other letter is ignored.  If  the  first\n"
+"              column of a config line is a '#' character, the rest of the line\n"
 , stdout);
  fputs(
-"       --crlf Convert LF to CRLF in upload. Useful for MVS (OS/390).\n"
-"\n"
-"              (SMTP added in 7.40.0)\n"
+"              will be treated as a comment. Only write one option per physical\n"
+"              line in the config file.\n"
 "\n"
-"       --crlfile <file>\n"
-"              (HTTPS/FTPS) Provide a file using PEM format with a  Certificate\n"
-"              Revocation  List  that may specify peer certificates that are to\n"
-"              be considered revoked.\n"
+"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
+"              the file from stdin.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              Note that to be able to specify a URL in the  config  file,  you\n"
+"              need  to  specify  it  using the --url option, and not by simply\n"
+"              writing the URL on its own line. So, it could  look  similar  to\n"
+"              this:\n"
 "\n"
-"              (Added in 7.19.7)\n"
-"       -d, --data <data>\n"
 , stdout);
  fputs(
-"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
-"              server,  in  the  same  way  that a browser does when a user has\n"
-"              filled in an HTML form and presses the submit button. This  will\n"
-"              cause curl to pass the data to the server using the content-type\n"
-"              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
+"              url = \"https://curl.haxx.se/docs/\"\n"
 "\n"
-"              -d, --data is the same as --data-ascii. --data-raw is almost the\n"
-, stdout);
- fputs(
-"              same but does not have a special interpretation of the @ charac-\n"
-"              ter. To post data purely binary,  you  should  instead  use  the\n"
-"              --data-binary  option.   To URL-encode the value of a form field\n"
-"              you may use --data-urlencode.\n"
+"              When  curl  is invoked, it always (unless -q, --disable is used)\n"
+"              checks for a default config file  and  uses  it  if  found.  The\n"
+"              default  config  file  is checked for in the following places in\n"
+"              this order:\n"
 "\n"
-"              If any of these options is used more than once on the same  com-\n"
-"              mand  line,  the  data  pieces specified will be merged together\n"
+"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
+"              CURL_HOME and then the HOME environment variables. Failing that,\n"
 , stdout);
  fputs(
-"              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
-"              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
-"              'name=daniel&skill=lousy'.\n"
+"              it uses getpwuid() on Unix-like systems (which returns the  home\n"
+"              dir  given the current user in your system). On Windows, it then\n"
+"              checks for the APPDATA variable, or as a last resort the '%USER-\n"
+"              PROFILE%\\Application Data'.\n"
 "\n"
-"              If you start the data with the letter @, the rest  should  be  a\n"
-"              file  name  to read the data from, or - if you want curl to read\n"
-"              the data from stdin. Multiple files can also be specified. Post-\n"
+"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
+"              checks for one in the same dir the curl executable is placed. On\n"
 , stdout);
  fputs(
-"              ing  data  from  a  file  named 'foobar' would thus be done with\n"
-"              --data @foobar. When --data is told to read  from  a  file  like\n"
-"              that, carriage returns and newlines will be stripped out. If you\n"
-"              don't want the @ character to have a special interpretation  use\n"
-"              --data-raw instead.\n"
+"              Unix-like  systems,  it will simply try to load .curlrc from the\n"
+"              determined home dir.\n"
 "\n"
-"       -D, --dump-header <file>\n"
-"              Write the protocol headers to the specified file.\n"
+"              # --- Example file ---\n"
+"              # this is a comment\n"
+"              url = \"example.com\"\n"
+"              output = \"curlhere.html\"\n"
+"              user-agent = \"superagent/1.0\"\n"
 "\n"
+"              # and fetch another URL too\n"
+"              url = \"example.com/docs/manpage.html\"\n"
+"              -O\n"
+"              referer = \"http://nowhereatall.example.com/\"\n"
 , stdout);
  fputs(
-"              This  option  is handy to use when you want to store the headers\n"
-"              that an HTTP site sends to you. Cookies from the  headers  could\n"
-"              then  be  read  in  a  second  curl  invocation by using the -b,\n"
-"              --cookie option! The -c, --cookie-jar option is a better way  to\n"
-"              store cookies.\n"
+"              # --- End of example file ---\n"
 "\n"
-"              When  used  in FTP, the FTP server response lines are considered\n"
-"              being \"headers\" and thus are saved there.\n"
+"              This option can be used multiple times to load  multiple  config\n"
+"              files.\n"
 "\n"
+"       --connect-timeout <seconds>\n"
+"              Maximum  time  in  seconds  that  you allow curl's connection to\n"
+"              take.  This only limits the connection phase, so  if  curl  con-\n"
+"              nects  within the given period it will continue - if not it will\n"
+"              exit.  Since version 7.32.0, this option accepts decimal values.\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --data-ascii <data>\n"
-"              See -d, --data.\n"
+"              See also -m, --max-time.\n"
 "\n"
-"       --data-binary <data>\n"
-"              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
-"              cessing whatsoever.\n"
+"       --connect-to <HOST1:PORT1:HOST2:PORT2>\n"
 "\n"
-"              If  you  start  the data with the letter @, the rest should be a\n"
-"              filename.  Data is posted in a similar  manner  as  --data-ascii\n"
+"              For a request to the given HOST:PORT pair, connect  to  CONNECT-\n"
+"              TO-HOST:CONNECT-TO-PORT  instead.   This  option  is suitable to\n"
+"              direct requests at a specific server, e.g. at a specific cluster\n"
+"              node  in  a  cluster  of  servers.   This option is only used to\n"
 , stdout);
  fputs(
-"              does,  except  that  newlines and carriage returns are preserved\n"
-"              and conversions are never done.\n"
+"              establish the network connection. It does NOT affect  the  host-\n"
+"              name/port  that is used for TLS/SSL (e.g. SNI, certificate veri-\n"
+"              fication) or for the application protocols.  \"host\"  and  \"port\"\n"
+"              may  be the empty string, meaning \"any host/port\".  \"connect-to-\n"
+"              host\" and \"connect-to-port\" may also be the empty string,  mean-\n"
+"              ing \"use the request's original host/port\".\n"
 "\n"
-"              If this option is used several times,  the  ones  following  the\n"
-"              first will append data as described in -d, --data.\n"
+, stdout);
+ fputs(
+"              This option can be used many times to add many connect rules.\n"
+"\n"
+"              See also --resolve and -H, --header. Added in 7.49.0.\n"
+"\n"
+"       -C, --continue-at <offset>\n"
+"              Continue/Resume  a  previous  file transfer at the given offset.\n"
+"              The given offset is the exact  number  of  bytes  that  will  be\n"
+"              skipped,  counting  from the beginning of the source file before\n"
+"              it is transferred to the destination.  If used with uploads, the\n"
+, stdout);
+ fputs(
+"              FTP server command SIZE will not be used by curl.\n"
+"\n"
+"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
+"              resume the transfer. It then uses the given  output/input  files\n"
+"              to figure that out.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              See also -r, --range.\n"
+"\n"
+"       -c, --cookie-jar <filename>\n"
+"              (HTTP)  Specify to which file you want curl to write all cookies\n"
+, stdout);
+ fputs(
+"              after a completed operation. Curl writes all  cookies  from  its\n"
+"              in-memory  cookie storage to the given file at the end of opera-\n"
+"              tions. If no cookies are known, no data  will  be  written.  The\n"
+"              file  will  be written using the Netscape cookie file format. If\n"
+"              you set the file name to a single dash, \"-\", the cookies will be\n"
+"              written to stdout.\n"
+"\n"
+, stdout);
+ fputs(
+"              This  command  line  option will activate the cookie engine that\n"
+"              makes curl record and use cookies. Another way to activate it is\n"
+"              to use the -b, --cookie option.\n"
+"\n"
+"              If the cookie jar can't be created or written to, the whole curl\n"
+"              operation won't fail or even report an error clearly. Using  -v,\n"
+"              --verbose  will  get  a  warning displayed, but that is the only\n"
+, stdout);
+ fputs(
+"              visible feedback you get about this possibly lethal situation.\n"
+"\n"
+"              If this option is used several times, the  last  specified  file\n"
+"              name will be used.\n"
+"\n"
+"       -b, --cookie <data>\n"
+"              (HTTP) Pass the data to the HTTP server in the Cookie header. It\n"
+"              is supposedly the data previously received from the server in  a\n"
+"              \"Set-Cookie:\"   line.    The   data  should  be  in  the  format\n"
+"              \"NAME1=VALUE1; NAME2=VALUE2\".\n"
+"\n"
+, stdout);
+ fputs(
+"              If no '=' symbol is used in the argument, it is instead  treated\n"
+"              as a filename to read previously stored cookie from. This option\n"
+"              also activates the cookie engine which  will  make  curl  record\n"
+"              incoming  cookies,  which  may  be handy if you're using this in\n"
+"              combination with the -L, --location option or  do  multiple  URL\n"
+"              transfers on the same invoke.\n"
+"\n"
+, stdout);
+ fputs(
+"              The file format of the file to read cookies from should be plain\n"
+"              HTTP headers (Set-Cookie style) or the  Netscape/Mozilla  cookie\n"
+"              file format.\n"
+"\n"
+"              The  file  specified with -b, --cookie is only used as input. No\n"
+"              cookies will be written to the file. To store cookies,  use  the\n"
+"              -c, --cookie-jar option.\n"
+"\n"
+"              Exercise  caution  if  you  are  using  this option and multiple\n"
+, stdout);
+ fputs(
+"              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
+"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
+"              then the cookie is sent for any domain (even after redirects are\n"
+"              followed)  and cannot be modified by a server-set cookie. If the\n"
+"              cookie engine is enabled and a server sets a cookie of the  same\n"
+"              name then both will be sent on a future transfer to that server,\n"
+, stdout);
+ fputs(
+"              likely not what you intended.  To address  these  issues  set  a\n"
+"              domain  in  Set-Cookie  (doing that will include sub domains) or\n"
+"              use the Netscape format.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"              Users very often want to both read cookies from a file and write\n"
+"              updated  cookies  back to a file, so using both -b, --cookie and\n"
+, stdout);
+ fputs(
+"              -c, --cookie-jar in the same command line is common.\n"
+"\n"
+"       --create-dirs\n"
+"              When used in conjunction with the -o, --output option, curl will\n"
+"              create  the  necessary local directory hierarchy as needed. This\n"
+"              option creates the dirs mentioned with the -o, --output  option,\n"
+"              nothing  else.  If  the --output file name uses no dir or if the\n"
+"              dirs it mentions already exist, no dir will be created.\n"
+"\n"
+, stdout);
+ fputs(
+"              To create remote directories when using FTP or SFTP, try  --ftp-\n"
+"              create-dirs.\n"
+"\n"
+"       --crlf (FTP  SMTP)  Convert  LF  to  CRLF  in  upload.  Useful  for MVS\n"
+"              (OS/390).\n"
+"\n"
+"              (SMTP added in 7.40.0)\n"
+"\n"
+"       --crlfile <file>\n"
+"              (TLS) Provide a file using PEM format with a Certificate Revoca-\n"
+"              tion List that may specify peer certificates that are to be con-\n"
+"              sidered revoked.\n"
+"\n"
+, stdout);
+ fputs(
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              Added in 7.19.7.\n"
+"\n"
+"       --data-ascii <data>\n"
+"              (HTTP) This is just an alias for -d, --data.\n"
+"\n"
+"       --data-binary <data>\n"
+"              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
+"              cessing whatsoever.\n"
+"\n"
+"              If  you  start  the data with the letter @, the rest should be a\n"
+"              filename.  Data is posted in a  similar  manner  as  -d,  --data\n"
+, stdout);
+ fputs(
+"              does,  except  that  newlines and carriage returns are preserved\n"
+"              and conversions are never done.\n"
+"\n"
+"              If this option is used several times,  the  ones  following  the\n"
+"              first will append data as described in -d, --data.\n"
 "\n"
 "       --data-raw <data>\n"
-"              (HTTP)  This posts data similarly to --data but without the spe-\n"
-"              cial interpretation of the @ character. See -d, --data.   (Added\n"
-"              in 7.43.0)\n"
+"              (HTTP)  This  posts data similarly to -d, --data but without the\n"
+"              special interpretation of the @ character.\n"
+"\n"
+"              See also -d, --data. Added in 7.43.0.\n"
 "\n"
 , stdout);
  fputs(
 "       --data-urlencode <data>\n"
-"              (HTTP) This posts data, similar to the other --data options with\n"
-"              the exception that this performs URL-encoding. (Added in 7.18.0)\n"
-"              To be CGI-compliant, the <data> part should begin  with  a  name\n"
-"              followed  by a separator and a content specification. The <data>\n"
+"              (HTTP) This posts data, similar to the other -d, --data  options\n"
+"              with the exception that this performs URL-encoding.\n"
+"\n"
+"              To  be  CGI-compliant,  the <data> part should begin with a name\n"
+"              followed by a separator and a content specification. The  <data>\n"
 "              part can be passed to curl using one of the following syntaxes:\n"
 "\n"
 "              content\n"
 , stdout);
  fputs(
-"                     This will make curl URL-encode the content and pass  that\n"
-"                     on.  Just  be careful so that the content doesn't contain\n"
-"                     any = or @ symbols, as that will  then  make  the  syntax\n"
+"                     This  will make curl URL-encode the content and pass that\n"
+"                     on. Just be careful so that the content  doesn't  contain\n"
+"                     any  =  or  @  symbols, as that will then make the syntax\n"
 "                     match one of the other cases below!\n"
 "\n"
 "              =content\n"
-"                     This  will make curl URL-encode the content and pass that\n"
+"                     This will make curl URL-encode the content and pass  that\n"
 "                     on. The preceding = symbol is not included in the data.\n"
 "\n"
 , stdout);
  fputs(
 "              name=content\n"
-"                     This will make curl URL-encode the content part and  pass\n"
-"                     that  on.  Note that the name part is expected to be URL-\n"
+"                     This  will make curl URL-encode the content part and pass\n"
+"                     that on. Note that the name part is expected to  be  URL-\n"
 "                     encoded already.\n"
 "\n"
 "              @filename\n"
-"                     This will  make  curl  load  data  from  the  given  file\n"
-"                     (including  any  newlines), URL-encode that data and pass\n"
+"                     This  will  make  curl  load  data  from  the  given file\n"
+"                     (including any newlines), URL-encode that data  and  pass\n"
 "                     it on in the POST.\n"
 "\n"
 "              name@filename\n"
 , stdout);
  fputs(
-"                     This will  make  curl  load  data  from  the  given  file\n"
-"                     (including  any  newlines), URL-encode that data and pass\n"
-"                     it on in the POST. The  name  part  gets  an  equal  sign\n"
+"                     This  will  make  curl  load  data  from  the  given file\n"
+"                     (including any newlines), URL-encode that data  and  pass\n"
+"                     it  on  in  the  POST.  The  name part gets an equal sign\n"
 "                     appended, resulting in name=urlencoded-file-content. Note\n"
 "                     that the name is expected to be URL-encoded already.\n"
+"       See also -d, --data and --data-raw. Added in 7.18.0.\n"
+"\n"
+"       -d, --data <data>\n"
+, stdout);
+ fputs(
+"              (HTTP)  Sends  the  specified data in a POST request to the HTTP\n"
+"              server, in the same way that a browser  does  when  a  user  has\n"
+"              filled  in an HTML form and presses the submit button. This will\n"
+"              cause curl to pass the data to the server using the content-type\n"
+"              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
+"\n"
+"              --data-raw is almost the same but does not have a special inter-\n"
+, stdout);
+ fputs(
+"              pretation of the @ character. To post data  purely  binary,  you\n"
+"              should  instead use the --data-binary option.  To URL-encode the\n"
+"              value of a form field you may use --data-urlencode.\n"
+"\n"
+"              If any of these options is used more than once on the same  com-\n"
+"              mand  line,  the  data  pieces specified will be merged together\n"
+"              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
+, stdout);
+ fputs(
+"              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
+"              'name=daniel&skill=lousy'.\n"
+"\n"
+"              If you start the data with the letter @, the rest  should  be  a\n"
+"              file  name  to read the data from, or - if you want curl to read\n"
+"              the data from stdin. Multiple files can also be specified. Post-\n"
+"              ing  data  from  a  file  named  from a file like that, carriage\n"
+, stdout);
+ fputs(
+"              returns and newlines will be stripped out. If you don't want the\n"
+"              @  character  to  have  a  special interpretation use --data-raw\n"
+"              instead.\n"
+"\n"
+"              See also --data-binary and --data-urlencode and --data-raw. This\n"
+"              option overrides -F, --form and -I, --head and --upload.\n"
 "\n"
-"       --delegation LEVEL\n"
-"              Set LEVEL to tell the server what it is allowed to delegate when\n"
+"       --delegation <LEVEL>\n"
+"              (GSS/kerberos)  Set  LEVEL to tell the server what it is allowed\n"
 , stdout);
  fputs(
-"              it comes to user credentials. Used with GSS/kerberos.\n"
+"              to delegate when it comes to user credentials.\n"
 "\n"
 "              none   Don't allow any delegation.\n"
 "\n"
-"              policy Delegates  if  and only if the OK-AS-DELEGATE flag is set\n"
-"                     in the Kerberos service ticket,  which  is  a  matter  of\n"
+"              policy Delegates if and only if the OK-AS-DELEGATE flag  is  set\n"
+"                     in  the  Kerberos  service  ticket,  which is a matter of\n"
 "                     realm policy.\n"
 "\n"
 "              always Unconditionally allow the server to delegate.\n"
 "\n"
 "       --digest\n"
-"              (HTTP)  Enables HTTP Digest authentication. This is an authenti-\n"
+"              (HTTP) Enables HTTP Digest authentication. This is an  authenti-\n"
 , stdout);
  fputs(
-"              cation scheme that prevents the password from  being  sent  over\n"
-"              the  wire in clear text. Use this in combination with the normal\n"
-"              -u, --user option to  set  user  name  and  password.  See  also\n"
-"              --ntlm, --negotiate and --anyauth for related options.\n"
+"              cation  scheme  that  prevents the password from being sent over\n"
+"              the wire in clear text. Use this in combination with the  normal\n"
+"              -u, --user option to set user name and password.\n"
 "\n"
 "              If  this  option  is  used  several times, only the first one is\n"
 "              used.\n"
 "\n"
+"              See also -u,  --user  and  --proxy-digest  and  --anyauth.  This\n"
+"              option overrides --basic and --ntlm and --negotiate.\n"
+"\n"
 "       --disable-eprt\n"
 , stdout);
  fputs(
 "              (FTP) Tell curl to disable the use of the EPRT and LPRT commands\n"
 "              when doing active FTP transfers. Curl will normally always first\n"
-"              attempt to use EPRT, then LPRT before using PORT, but with  this\n"
-"              option,  it  will  use PORT right away. EPRT and LPRT are exten-\n"
-"              sions to the original FTP protocol, and  may  not  work  on  all\n"
+"              attempt  to use EPRT, then LPRT before using PORT, but with this\n"
+"              option, it will use PORT right away. EPRT and  LPRT  are  exten-\n"
+"              sions  to  the  original  FTP  protocol, and may not work on all\n"
 "              servers, but they enable more functionality in a better way than\n"
 , stdout);
  fputs(
 "              the traditional PORT command.\n"
 "\n"
 "              --eprt can be used to explicitly enable EPRT again and --no-eprt\n"
 "              is an alias for --disable-eprt.\n"
 "\n"
-"              If  the  server is an IPv6 host, this option will have no effect\n"
-"              as EPRT is necessary then.\n"
+"              If the server is accessed using IPv6, this option will  have  no\n"
+"              effect as EPRT is necessary then.\n"
 "\n"
-"              Disabling EPRT only changes the active behavior. If you want  to\n"
-"              switch  to  passive  mode  you need to not use -P, --ftp-port or\n"
+"              Disabling  EPRT only changes the active behavior. If you want to\n"
+"              switch to passive mode you need to not  use  -P,  --ftp-port  or\n"
 "              force it with --ftp-pasv.\n"
 "\n"
 , stdout);
  fputs(
 "       --disable-epsv\n"
-"              (FTP) Tell curl to disable the use  of  the  EPSV  command  when\n"
-"              doing  passive  FTP  transfers.  Curl will normally always first\n"
-"              attempt to use EPSV before PASV, but with this option,  it  will\n"
-"              not try using EPSV.\n"
+"              (FTP)  (FTP)  Tell  curl  to disable the use of the EPSV command\n"
+"              when doing passive FTP  transfers.  Curl  will  normally  always\n"
+"              first  attempt to use EPSV before PASV, but with this option, it\n"
+"              will not try using EPSV.\n"
 "\n"
 "              --epsv can be used to explicitly enable EPSV again and --no-epsv\n"
 "              is an alias for --disable-epsv.\n"
 "\n"
-"              If the server is an IPv6 host, this option will have  no  effect\n"
 , stdout);
  fputs(
+"              If  the  server is an IPv6 host, this option will have no effect\n"
 "              as EPSV is necessary then.\n"
 "\n"
 "              Disabling EPSV only changes the passive behavior. If you want to\n"
 "              switch to active mode you need to use -P, --ftp-port.\n"
 "\n"
+"       -q, --disable\n"
+"              If  used  as the first parameter on the command line, the curlrc\n"
+"              config file will not be read and used. See the -K, --config  for\n"
+, stdout);
+ fputs(
+"              details on the default config file search path.\n"
+"\n"
 "       --dns-interface <interface>\n"
-"              Tell curl to send outgoing  DNS  requests  through  <interface>.\n"
-"              This  option  is  a  counterpart  to --interface (which does not\n"
-"              affect DNS). The supplied string must be an interface name  (not\n"
-"              an address).\n"
+"              (DNS)  Tell  curl  to send outgoing DNS requests through <inter-\n"
+"              face>. This option is a counterpart to --interface  (which  does\n"
+"              not  affect  DNS). The supplied string must be an interface name\n"
+"              (not an address).\n"
 "\n"
+"              See also --dns-ipv4-addr  and  --dns-ipv6-addr.  --dns-interface\n"
 , stdout);
  fputs(
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
-"              only such one. (Added in 7.33.0)\n"
+"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              ares. Added in 7.33.0.\n"
 "\n"
-"       --dns-ipv4-addr <ip-address>\n"
-"              Tell curl to bind to <ip-address> when making IPv4 DNS requests,\n"
-"              so that the DNS requests originate from this address. The  argu-\n"
-"              ment should be a single IPv4 address.\n"
+"       --dns-ipv4-addr <address>\n"
+"              (DNS) Tell curl to bind to <ip-address>  when  making  IPv4  DNS\n"
+"              requests,  so that the DNS requests originate from this address.\n"
+"              The argument should be a single IPv4 address.\n"
 "\n"
+"              See also --dns-interface  and  --dns-ipv6-addr.  --dns-ipv4-addr\n"
 , stdout);
  fputs(
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
-"              only such one.  (Added in 7.33.0)\n"
+"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              ares. Added in 7.33.0.\n"
 "\n"
-"       --dns-ipv6-addr <ip-address>\n"
-"              Tell curl to bind to <ip-address> when making IPv6 DNS requests,\n"
-"              so that the DNS requests originate from this address. The  argu-\n"
-"              ment should be a single IPv6 address.\n"
+"       --dns-ipv6-addr <address>\n"
+"              (DNS) Tell curl to bind to <ip-address>  when  making  IPv6  DNS\n"
+"              requests,  so that the DNS requests originate from this address.\n"
+"              The argument should be a single IPv6 address.\n"
 "\n"
+"              See also --dns-interface  and  --dns-ipv4-addr.  --dns-ipv6-addr\n"
 , stdout);
  fputs(
-"              This  option  requires  that  libcurl  was built with a resolver\n"
-"              backend that supports this operation. The c-ares backend is  the\n"
-"              only such one.  (Added in 7.33.0)\n"
+"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              ares. Added in 7.33.0.\n"
 "\n"
-"       --dns-servers <ip-address,ip-address>\n"
-"              Set  the  list  of  DNS servers to be used instead of the system\n"
+"       --dns-servers <addresses>\n"
+"              Set the list of DNS servers to be used  instead  of  the  system\n"
 "              default.  The list of IP addresses should be separated with com-\n"
 "              mas. Port numbers may also optionally be given as :<port-number>\n"
-, stdout);
- fputs(
 "              after each IP address.\n"
 "\n"
-"              This option requires that libcurl  was  built  with  a  resolver\n"
-"              backend  that supports this operation. The c-ares backend is the\n"
-"              only such one.  (Added in 7.33.0)\n"
-"\n"
-"       -e, --referer <URL>\n"
-"              (HTTP) Sends the \"Referrer Page\" information to the HTTP server.\n"
-"              This can also be set with the -H, --header flag of course.  When\n"
 , stdout);
  fputs(
-"              used with -L, --location you can append \";auto\" to the --referer\n"
-"              URL to make curl automatically set the previous URL when it fol-\n"
-"              lows a Location: header. The \";auto\" string can be  used  alone,\n"
-"              even if you don't set an initial --referer.\n"
+"              --dns-servers  requires that the underlying libcurl was built to\n"
+"              support c-ares. Added in 7.33.0.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"       -D, --dump-header <filename>\n"
+"              (HTTP FTP) Write the received protocol headers to the  specified\n"
+"              file.\n"
 "\n"
-"       -E, --cert <certificate[:password]>\n"
-"              (SSL)  Tells  curl  to use the specified client certificate file\n"
-, stdout);
- fputs(
-"              when getting a file with HTTPS, FTPS or another SSL-based proto-\n"
-"              col.  The  certificate must be in PKCS#12 format if using Secure\n"
-"              Transport, or PEM format if using  any  other  engine.   If  the\n"
-"              optional password isn't specified, it will be queried for on the\n"
-"              terminal. Note that this option  assumes  a  \"certificate\"  file\n"
-"              that is the private key and the client certificate concatenated!\n"
+"              This  option  is handy to use when you want to store the headers\n"
+"              that an HTTP site sends to you. Cookies from the  headers  could\n"
+"              then  be  read  in  a  second  curl  invocation by using the -b,\n"
 , stdout);
  fputs(
-"              See --cert and --key to specify them independently.\n"
+"              --cookie option! The -c, --cookie-jar option is a better way  to\n"
+"              store cookies.\n"
 "\n"
-"              If curl is built against the NSS SSL library  then  this  option\n"
-"              can  tell curl the nickname of the certificate to use within the\n"
-"              NSS database defined by the environment variable SSL_DIR (or  by\n"
-"              default  /etc/pki/nssdb).  If  the  NSS PEM PKCS#11 module (lib-\n"
-"              nsspem.so) is available then PEM files may  be  loaded.  If  you\n"
-, stdout);
- fputs(
-"              want to use a file from the current directory, please precede it\n"
-"              with \"./\" prefix, in order to avoid confusion with  a  nickname.\n"
-"              If  the nickname contains \":\", it needs to be preceded by \"\\\" so\n"
-"              that it is not recognized as password delimiter.  If  the  nick-\n"
-"              name  contains \"\\\", it needs to be escaped as \"\\\\\" so that it is\n"
-"              not recognized as an escape character.\n"
+"              When  used  in FTP, the FTP server response lines are considered\n"
+"              being \"headers\" and thus are saved there.\n"
 "\n"
-, stdout);
- fputs(
-"              (iOS and macOS only) If curl is built against Secure  Transport,\n"
-"              then the certificate string can either be the name of a certifi-\n"
-"              cate/private key in the system or user keychain, or the path  to\n"
-"              a  PKCS#12-encoded  certificate  and private key. If you want to\n"
-"              use a file from the current directory, please  precede  it  with\n"
-"              \"./\" prefix, in order to avoid confusion with a nickname.\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              See also -o, --output.\n"
 "\n"
+"       --egd-file <file>\n"
+"              (TLS) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
 , stdout);
  fputs(
-"              If this option is used several times, the last one will be used.\n"
+"              socket.  The  socket  is  used to seed the random engine for SSL\n"
+"              connections.\n"
+"\n"
+"              See also --random-file.\n"
 "\n"
 "       --engine <name>\n"
-"              Select  the  OpenSSL crypto engine to use for cipher operations.\n"
-"              Use --engine list  to  print  a  list  of  build-time  supported\n"
-"              engines.  Note  that  not  all  (or  none) of the engines may be\n"
+"              (TLS) Select the OpenSSL crypto engine to use for cipher  opera-\n"
+"              tions. Use --engine list to print a list of build-time supported\n"
+"              engines. Note that not all (or  none)  of  the  engines  may  be\n"
 "              available at run-time.\n"
 "\n"
 "       --environment\n"
-"              (RISC OS ONLY) Sets a range of environment variables, using  the\n"
 , stdout);
  fputs(
-"              names the -w option supports, to allow easier extraction of use-\n"
+"              Sets  a  range of environment variables, using the names the -w,\n"
+"              --write-out option supports, to allow easier extraction of  use-\n"
 "              ful information after having run curl.\n"
 "\n"
-"       --egd-file <file>\n"
-"              (SSL) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
-"              socket.  The  socket  is  used to seed the random engine for SSL\n"
-"              connections. See also the --random-file option.\n"
+"              --environment  requires that the underlying libcurl was built to\n"
+"              support RISC OS.\n"
 "\n"
 "       --expect100-timeout <seconds>\n"
 "              (HTTP) Maximum time in seconds that you allow curl to wait for a\n"
 , stdout);
  fputs(
 "              100-continue  response  when curl emits an Expects: 100-continue\n"
 "              header in its request. By default curl  will  wait  one  second.\n"
 "              This  option accepts decimal values! When curl stops waiting, it\n"
 "              will continue as if the response has been received.\n"
 "\n"
-"              (Added in 7.47.0)\n"
+"              See also --connect-timeout. Added in 7.47.0.\n"
 "\n"
-"       --cert-type <type>\n"
-"              (SSL) Tells curl what certificate type the provided  certificate\n"
-, stdout);
- fputs(
-"              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
-"              PEM is assumed.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
+"       --fail-early\n"
+"              Fail and exit on first detected error.\n"
 "\n"
-"       --cacert <CA certificate>\n"
-"              (SSL) Tells curl to use the specified certificate file to verify\n"
-"              the  peer.  The  file  may contain multiple CA certificates. The\n"
-"              certificate(s) must be in PEM format. Normally curl is built  to\n"
 , stdout);
  fputs(
-"              use a default file for this, so this option is typically used to\n"
-"              alter that default file.\n"
-"\n"
-"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
-"              if  it  is  set,  and uses the given path as a path to a CA cert\n"
-"              bundle. This option overrides that variable.\n"
+"              When curl is used to do multiple transfers on the command  line,\n"
+"              it  will  attempt  to  operate on each given URL, one by one. By\n"
+"              default, it will ignore errors if there are more URLs given  and\n"
+"              the  last  URL's  success  will  determine  the  error code curl\n"
+"              returns. So early failures will be \"hidden\" by  subsequent  suc-\n"
+"              cessful transfers.\n"
 "\n"
-"              The windows version of curl will automatically  look  for  a  CA\n"
-"              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
 , stdout);
  fputs(
-"              tory as curl.exe, or in the Current Working Directory, or in any\n"
-"              folder along your PATH.\n"
+"              Using  this  option,  curl  will  instead return an error on the\n"
+"              first transfers that fails, independent on the  amount  of  more\n"
+"              URLs  that  are given on the command line. This way, no transfer\n"
+"              failures go undetected by scripts and similar.\n"
 "\n"
-"              If  curl  is  built  against  the  NSS  SSL library, the NSS PEM\n"
-"              PKCS#11 module (libnsspem.so) needs to  be  available  for  this\n"
-"              option to work properly.\n"
+"              This option will apply for all given URLs even if  you  use  -:,\n"
+"              --next.\n"
 "\n"
-"              (iOS  and macOS only) If curl is built against Secure Transport,\n"
-"              then this option is supported for  backward  compatibility  with\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       -f, --fail\n"
 , stdout);
  fputs(
-"              other  SSL  engines,  but it should not be set. If the option is\n"
-"              not set, then curl will use the certificates in the  system  and\n"
-"              user  Keychain to verify the peer, which is the preferred method\n"
-"              of verifying the peer's certificate chain.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
+"              (HTTP)  Fail  silently (no output at all) on server errors. This\n"
+"              is mostly done to better enable scripts etc to better deal  with\n"
+"              failed  attempts.  In  normal cases when an HTTP server fails to\n"
+"              deliver a document, it  returns  an  HTML  document  stating  so\n"
+"              (which  often  also describes why and more). This flag will pre-\n"
+"              vent curl from outputting that and return error 22.\n"
 "\n"
-"       --capath <CA certificate directory>\n"
-"              (SSL) Tells curl to use the specified certificate  directory  to\n"
 , stdout);
  fputs(
-"              verify  the  peer.  Multiple paths can be provided by separating\n"
-"              them with \":\" (e.g.  \"path1:path2:path3\"). The certificates must\n"
-"              be  in  PEM  format,  and  if curl is built against OpenSSL, the\n"
-"              directory must have been processed using  the  c_rehash  utility\n"
-"              supplied  with OpenSSL. Using --capath can allow OpenSSL-powered\n"
-"              curl to make SSL-connections much more  efficiently  than  using\n"
+"              This method is not fail-safe and there are occasions where  non-\n"
+"              successful  response  codes  will  slip through, especially when\n"
+"              authentication is involved (response codes 401 and 407).\n"
+"\n"
+"       --false-start\n"
+"              (TLS) Tells curl to use false start during  the  TLS  handshake.\n"
+"              False  start  is  a  mode  where a TLS client will start sending\n"
+"              application data before verifying the server's Finished message,\n"
 , stdout);
  fputs(
-"              --cacert if the --cacert file contains many CA certificates.\n"
+"              thus saving a round trip when performing a full handshake.\n"
 "\n"
-"              If this option is set, the default capath value will be ignored,\n"
-"              and if it is used several times, the last one will be used.\n"
+"              This  is currently only implemented in the NSS and Secure Trans-\n"
+"              port (on iOS 7.0 or later, or OS X 10.9 or later) backends.\n"
+"\n"
+"              Added in 7.42.0.\n"
 "\n"
-"       --pinnedpubkey <pinned public key (hashes)>\n"
-"              (SSL) Tells curl to  use  the  specified  public  key  file  (or\n"
-"              hashes)  to  verify the peer. This can be a path to a file which\n"
+"       --form-string <name=string>\n"
+"              (HTTP) Similar to -F, --form except that the  value  string  for\n"
+"              the named parameter is used literally. Leading '@' and '<' char-\n"
 , stdout);
  fputs(
-"              contains a single public key in PEM or DER format, or any number\n"
-"              of base64 encoded sha256 hashes preceded by 'sha256//' and sepa-\n"
-"              rated by ';'\n"
+"              acters, and the ';type=' string in the  value  have  no  special\n"
+"              meaning.  Use  this  in  preference to -F, --form if there's any\n"
+"              possibility that the string value may accidentally  trigger  the\n"
+"              '@' or '<' features of -F, --form.\n"
 "\n"
-"              When negotiating a TLS or SSL connection,  the  server  sends  a\n"
-"              certificate  indicating  its identity. A public key is extracted\n"
-"              from this certificate and if it does not exactly match the  pub-\n"
+"              See also -F, --form.\n"
+"\n"
+"       -F, --form <name=content>\n"
+"              (HTTP)  This  lets curl emulate a filled-in form in which a user\n"
 , stdout);
  fputs(
-"              lic  key provided to this option, curl will abort the connection\n"
-"              before sending or receiving any data.\n"
-"\n"
-"              PEM/DER support:\n"
-"                7.39.0: OpenSSL, GnuTLS and GSKit\n"
-"                7.43.0: NSS and wolfSSL/CyaSSL\n"
-"                7.47.0: mbedtls\n"
-"                7.49.0: PolarSSL sha256 support:\n"
-"                7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.\n"
-"                7.47.0: mbedtls\n"
+"              has pressed the submit button. This causes  curl  to  POST  data\n"
+"              using  the  Content-Type  multipart/form-data  according  to RFC\n"
+"              2388. This enables uploading of binary files etc. To  force  the\n"
+"              'content'  part  to  be  a  file, prefix the file name with an @\n"
+"              sign. To just get the content part from a file, prefix the  file\n"
+"              name  with  the symbol <. The difference between @ and < is then\n"
 , stdout);
  fputs(
-"                7.49.0: PolarSSL Other SSL backends not supported.\n"
+"              that @ makes a file get attached in the post as a  file  upload,\n"
+"              while  the  <  makes  a text field and just get the contents for\n"
+"              that text field from a file.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              Example: to send an image to a server, where  'profile'  is  the\n"
+"              name of the form-field to which portrait.jpg will be the input:\n"
 "\n"
-"       --cert-status\n"
-"              (SSL) Tells curl to verify the status of the server  certificate\n"
-"              by using the Certificate Status Request (aka. OCSP stapling) TLS\n"
-"              extension.\n"
+"               curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
 "\n"
-"              If this option is enabled and the server sends an invalid  (e.g.\n"
 , stdout);
  fputs(
-"              expired) response, if the response suggests that the server cer-\n"
-"              tificate has been revoked, or no response at  all  is  received,\n"
-"              the verification fails.\n"
+"              To read content from stdin instead of a file, use - as the file-\n"
+"              name. This goes for both @ and <  constructs.  Unfortunately  it\n"
+"              does  not support reading the file from a named pipe or similar,\n"
+"              as it needs the full size before the transfer starts.\n"
 "\n"
-"              This  is  currently  only implemented in the OpenSSL, GnuTLS and\n"
-"              NSS backends.  (Added in 7.41.0)\n"
+"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
+"              'type=', in a manner similar to:\n"
 "\n"
-"       --false-start\n"
-"\n"
-"              (SSL) Tells curl to use false start during  the  TLS  handshake.\n"
-, stdout);
- fputs(
-"              False  start  is  a  mode  where a TLS client will start sending\n"
-"              application data before verifying the server's Finished message,\n"
-"              thus saving a round trip when performing a full handshake.\n"
-"\n"
-"              This  is currently only implemented in the NSS and Secure Trans-\n"
-"              port (on iOS 7.0 or later, or OS  X  10.9  or  later)  backends.\n"
-"              (Added in 7.42.0)\n"
-"\n"
-"       -f, --fail\n"
-, stdout);
- fputs(
-"              (HTTP)  Fail  silently (no output at all) on server errors. This\n"
-"              is mostly done to better enable scripts etc to better deal  with\n"
-"              failed  attempts.  In  normal cases when an HTTP server fails to\n"
-"              deliver a document, it  returns  an  HTML  document  stating  so\n"
-"              (which  often  also describes why and more). This flag will pre-\n"
-"              vent curl from outputting that and return error 22.\n"
-"\n"
-, stdout);
- fputs(
-"              This method is not fail-safe and there are occasions where  non-\n"
-"              successful  response  codes  will  slip through, especially when\n"
-"              authentication is involved (response codes 401 and 407).\n"
-"\n"
-"       -F, --form <name=content>\n"
-"              (HTTP) This lets curl emulate a filled-in form in which  a  user\n"
-"              has  pressed  the  submit  button. This causes curl to POST data\n"
-"              using the  Content-Type  multipart/form-data  according  to  RFC\n"
-, stdout);
- fputs(
-"              2388.  This  enables uploading of binary files etc. To force the\n"
-"              'content' part to be a file, prefix the  file  name  with  an  @\n"
-"              sign.  To just get the content part from a file, prefix the file\n"
-"              name with the symbol <. The difference between @ and <  is  then\n"
-"              that  @  makes a file get attached in the post as a file upload,\n"
-"              while the < makes a text field and just  get  the  contents  for\n"
-, stdout);
- fputs(
-"              that text field from a file.\n"
-"\n"
-"              Example:  to  send  an image to a server, where 'profile' is the\n"
-"              name of the form-field to which portrait.jpg will be the input:\n"
-"\n"
-"              curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
-"\n"
-"              To read content from stdin instead of a file, use - as the file-\n"
-"              name.  This  goes  for both @ and < constructs. Unfortunately it\n"
 , stdout);
  fputs(
-"              does not support reading the file from a named pipe or  similar,\n"
-"              as it needs the full size before the transfer starts.\n"
-"\n"
-"              You  can  also  tell  curl  what  Content-Type  to  use by using\n"
-"              'type=', in a manner similar to:\n"
-"\n"
-"              curl -F \"web=@index.html;type=text/html\" example.com\n"
+"               curl -F \"web=@index.html;type=text/html\" example.com\n"
 "\n"
 "              or\n"
 "\n"
-"              curl -F \"name=daniel;type=text/foo\" example.com\n"
+"               curl -F \"name=daniel;type=text/foo\" example.com\n"
 "\n"
-, stdout);
- fputs(
-"              You can also explicitly change the name field of a  file  upload\n"
+"              You  can  also explicitly change the name field of a file upload\n"
 "              part by setting filename=, like this:\n"
 "\n"
-"              curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
+"               curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
 "\n"
-"              If  filename/path contains ',' or ';', it must be quoted by dou-\n"
+"              If filename/path contains ',' or ';', it must be quoted by  dou-\n"
 "              ble-quotes like:\n"
 "\n"
-"              curl  -F   \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"   exam-\n"
+, stdout);
+ fputs(
+"               curl   -F  \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"  exam-\n"
 "              ple.com\n"
 "\n"
 "              or\n"
 "\n"
-, stdout);
- fputs(
-"              curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
+"               curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
 "\n"
-"              Note  that  if  a  filename/path is quoted by double-quotes, any\n"
+"              Note that if a filename/path is  quoted  by  double-quotes,  any\n"
 "              double-quote or backslash within the filename must be escaped by\n"
 "              backslash.\n"
 "\n"
 "              See further examples and details in the MANUAL.\n"
 "\n"
+, stdout);
+ fputs(
 "              This option can be used multiple times.\n"
 "\n"
-"       --ftp-account [data]\n"
+"              This option overrides -d, --data and -I, --head and --upload.\n"
+"\n"
+"       --ftp-account <data>\n"
 "              (FTP) When an FTP server asks for \"account data\" after user name\n"
-, stdout);
- fputs(
-"              and password has been provided, this data is sent off using  the\n"
-"              ACCT command. (Added in 7.13.0)\n"
+"              and  password has been provided, this data is sent off using the\n"
+"              ACCT command.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --ftp-alternative-to-user <command>\n"
-"              (FTP)  If  authenticating with the USER and PASS commands fails,\n"
-"              send this  command.   When  connecting  to  Tumbleweed's  Secure\n"
-"              Transport  server  over  FTPS  using a client certificate, using\n"
+"              Added in 7.13.0.\n"
+"\n"
 , stdout);
  fputs(
-"              \"SITE AUTH\" will tell the server to retrieve the  username  from\n"
-"              the certificate. (Added in 7.15.5)\n"
+"       --ftp-alternative-to-user <command>\n"
+"              (FTP) If authenticating with the USER and PASS  commands  fails,\n"
+"              send  this  command.   When  connecting  to  Tumbleweed's Secure\n"
+"              Transport server over FTPS using  a  client  certificate,  using\n"
+"              \"SITE  AUTH\"  will tell the server to retrieve the username from\n"
+"              the certificate.\n"
+"              Added in 7.15.5.\n"
 "\n"
 "       --ftp-create-dirs\n"
-"              (FTP/SFTP)  When  an  FTP or SFTP URL/operation uses a path that\n"
-"              doesn't currently exist on the server, the standard behavior  of\n"
+, stdout);
+ fputs(
+"              (FTP SFTP) When an FTP or SFTP URL/operation uses  a  path  that\n"
+"              doesn't  currently exist on the server, the standard behavior of\n"
 "              curl is to fail. Using this option, curl will instead attempt to\n"
 "              create missing directories.\n"
 "\n"
-"       --ftp-method [method]\n"
+"              See also --create-dirs.\n"
+"\n"
+"       --ftp-method <method>\n"
+"              (FTP)  Control what method curl should use to reach a file on an\n"
 , stdout);
  fputs(
-"              (FTP) Control what method curl should use to reach a file on  an\n"
-"              FTP(S)  server. The method argument should be one of the follow-\n"
+"              FTP(S) server. The method argument should be one of the  follow-\n"
 "              ing alternatives:\n"
 "\n"
 "              multicwd\n"
-"                     curl does a single CWD operation for each  path  part  in\n"
-"                     the  given URL. For deep hierarchies this means very many\n"
-"                     commands. This is how RFC 1738 says it  should  be  done.\n"
-, stdout);
- fputs(
+"                     curl  does  a  single CWD operation for each path part in\n"
+"                     the given URL. For deep hierarchies this means very  many\n"
+"                     commands.  This  is  how RFC 1738 says it should be done.\n"
 "                     This is the default but the slowest behavior.\n"
 "\n"
-"              nocwd  curl  does  no  CWD at all. curl will do SIZE, RETR, STOR\n"
+, stdout);
+ fputs(
+"              nocwd  curl does no CWD at all. curl will do  SIZE,  RETR,  STOR\n"
 "                     etc and give a full path to the server for all these com-\n"
 "                     mands. This is the fastest behavior.\n"
 "\n"
 "              singlecwd\n"
 "                     curl does one CWD with the full target directory and then\n"
-"                     operates on the file \"normally\"  (like  in  the  multicwd\n"
+"                     operates  on  the  file  \"normally\" (like in the multicwd\n"
+"                     case). This is somewhat  more  standards  compliant  than\n"
 , stdout);
  fputs(
-"                     case).  This  is  somewhat  more standards compliant than\n"
 "                     'nocwd' but without the full penalty of 'multicwd'.\n"
 "\n"
-"              (Added in 7.15.1)\n"
+"       Added in 7.15.1.\n"
 "\n"
 "       --ftp-pasv\n"
-"              (FTP) Use passive mode for the data connection. Passive  is  the\n"
-"              internal  default behavior, but using this option can be used to\n"
-"              override a previous -P/-ftp-port option. (Added in 7.11.0)\n"
+"              (FTP)  Use  passive mode for the data connection. Passive is the\n"
+"              internal default behavior, but using this option can be used  to\n"
+"              override a previous -P, --ftp-port option.\n"
 "\n"
+"              If  this  option  is  used  several times, only the first one is\n"
+"              used. Undoing an enforced passive really isn't  doable  but  you\n"
 , stdout);
  fputs(
-"              If this option is used several times,  only  the  first  one  is\n"
-"              used.  Undoing  an  enforced passive really isn't doable but you\n"
 "              must then instead enforce the correct -P, --ftp-port again.\n"
 "\n"
 "              Passive mode means that curl will try the EPSV command first and\n"
 "              then PASV, unless --disable-epsv is used.\n"
+"              See also --disable-epsv. Added in 7.11.0.\n"
+"\n"
+"       -P, --ftp-port <address>\n"
+"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
+"              necting  with  FTP. This option makes curl use active mode. curl\n"
+, stdout);
+ fputs(
+"              then tells the server to connect back to the client's  specified\n"
+"              address and port, while passive mode asks the server to setup an\n"
+"              IP address and port for it to connect to.  <address>  should  be\n"
+"              one of:\n"
+"\n"
+"              interface\n"
+"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
+"                     want to use (Unix only)\n"
+"\n"
+"              IP address\n"
+, stdout);
+ fputs(
+"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
+"\n"
+"              host name\n"
+"                     i.e \"my.host.domain\" to specify the machine\n"
+"\n"
+"              -      make curl pick the same IP address that is  already  used\n"
+"                     for the control connection\n"
+"\n"
+"       If  this  option is used several times, the last one will be used. Dis-\n"
+"       able the use of PORT with --ftp-pasv. Disable the attempt  to  use  the\n"
+, stdout);
+ fputs(
+"       EPRT  command  instead  of PORT by using --disable-eprt. EPRT is really\n"
+"       PORT++.\n"
+"\n"
+"       Since 7.19.5, you can append  \":[start]-[end]\"  to  the  right  of  the\n"
+"       address,  to tell curl what TCP port range to use. That means you spec-\n"
+"       ify a port range, from a lower to a  higher  number.  A  single  number\n"
+"       works  as well, but do note that it increases the risk of failure since\n"
+"       the port may not be available.\n"
+"\n"
+"       See also --ftp-pasv and --disable-eprt.\n"
+"\n"
+, stdout);
+ fputs(
+"       --ftp-pret\n"
+"              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
+"              Certain  FTP  servers,  mainly drftpd, require this non-standard\n"
+"              command for directory listings as well as up  and  downloads  in\n"
+"              PASV mode.\n"
+"\n"
+"              Added in 7.20.0.\n"
 "\n"
 "       --ftp-skip-pasv-ip\n"
 "              (FTP) Tell curl to not use the IP address the server suggests in\n"
+"              its response to curl's PASV command when curl connects the  data\n"
 , stdout);
  fputs(
-"              its response to curl's PASV command when curl connects the  data\n"
 "              connection.  Instead  curl  will  re-use  the same IP address it\n"
-"              already uses for the control connection. (Added in 7.14.2)\n"
+"              already uses for the control connection.\n"
 "\n"
 "              This option has no effect if PORT, EPRT or EPSV is used  instead\n"
 "              of PASV.\n"
 "\n"
-"       --ftp-pret\n"
-"              (FTP)  Tell  curl to send a PRET command before PASV (and EPSV).\n"
+"              See also --ftp-pasv. Added in 7.14.2.\n"
+"\n"
+"       --ftp-ssl-ccc-mode <active/passive>\n"
+"              (FTP)  Sets the CCC mode. The passive mode will not initiate the\n"
+"              shutdown, but instead wait for the server to do it, and will not\n"
 , stdout);
  fputs(
-"              Certain FTP servers, mainly drftpd,  require  this  non-standard\n"
-"              command  for  directory  listings as well as up and downloads in\n"
-"              PASV mode.  (Added in 7.20.x)\n"
+"              reply to the shutdown from the server. The active mode initiates\n"
+"              the shutdown and waits for a reply from the server.\n"
+"\n"
+"              See also --ftp-ssl-ccc. Added in 7.16.2.\n"
 "\n"
 "       --ftp-ssl-ccc\n"
 "              (FTP) Use CCC (Clear Command Channel)  Shuts  down  the  SSL/TLS\n"
 "              layer after authenticating. The rest of the control channel com-\n"
 "              munication will be unencrypted. This allows NAT routers to  fol-\n"
 , stdout);
  fputs(
-"              low the FTP transaction. The default mode is passive. See --ftp-\n"
-"              ssl-ccc-mode for other modes.  (Added in 7.16.1)\n"
+"              low the FTP transaction. The default mode is passive.\n"
 "\n"
-"       --ftp-ssl-ccc-mode [active/passive]\n"
-"              (FTP) Use CCC (Clear Command Channel) Sets  the  CCC  mode.  The\n"
-"              passive  mode  will  not initiate the shutdown, but instead wait\n"
-"              for the server to do it, and will not reply to the shutdown from\n"
-, stdout);
- fputs(
-"              the server. The active mode initiates the shutdown and waits for\n"
-"              a reply from the server.  (Added in 7.16.2)\n"
+"              See also --ssl and --ftp-ssl-ccc-mode. Added in 7.16.1.\n"
 "\n"
 "       --ftp-ssl-control\n"
-"              (FTP) Require SSL/TLS for the FTP  login,  clear  for  transfer.\n"
-"              Allows  secure  authentication, but non-encrypted data transfers\n"
-"              for efficiency.  Fails the transfer if the server  doesn't  sup-\n"
-"              port SSL/TLS.  (Added in 7.16.0) that can still be used but will\n"
-, stdout);
- fputs(
-"              be removed in a future version.\n"
+"              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
+"              Allows secure authentication, but non-encrypted  data  transfers\n"
+"              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
+"              port SSL/TLS.\n"
 "\n"
-"       --ftp-ssl\n"
-"              (FTP) This deprecated option is now known as --ssl.\n"
+"              Added in 7.16.0.\n"
 "\n"
-"       --ftp-ssl-reqd\n"
-"              (FTP) This deprecated option is now known as --ssl-reqd.\n"
+"       -G, --get\n"
+, stdout);
+ fputs(
+"              When used, this option will make all  data  specified  with  -d,\n"
+"              --data,  --data-binary or --data-urlencode to be used in an HTTP\n"
+"              GET request instead of the POST request that otherwise would  be\n"
+"              used. The data will be appended to the URL with a '?' separator.\n"
+"              If  used  in  combination  with  -I,  --head, the POST data will\n"
+"              instead be appended to the URL with a HEAD request.\n"
 "\n"
-"       --form-string <name=string>\n"
-"              (HTTP) Similar to --form except that the value  string  for  the\n"
-"              named  parameter  is used literally. Leading '@' and '<' charac-\n"
-"              ters, and the ';type=' string in the value have no special mean-\n"
 , stdout);
  fputs(
-"              ing. Use this in preference to --form if there's any possibility\n"
-"              that the string value may accidentally trigger the  '@'  or  '<'\n"
-"              features of --form.\n"
+"              If this option is used several times,  only  the  first  one  is\n"
+"              used.  This is because undoing a GET doesn't make sense, but you\n"
+"              should then instead enforce the alternative method you prefer.\n"
 "\n"
 "       -g, --globoff\n"
 "              This option switches off the \"URL globbing parser\". When you set\n"
-"              this option, you can specify URLs that contain the letters  {}[]\n"
-"              without  having them being interpreted by curl itself. Note that\n"
+"              this  option, you can specify URLs that contain the letters {}[]\n"
+"              without having them being interpreted by curl itself. Note  that\n"
 , stdout);
  fputs(
-"              these letters are not normal legal URL contents but they  should\n"
+"              these  letters are not normal legal URL contents but they should\n"
 "              be encoded according to the URI standard.\n"
 "\n"
-"       -G, --get\n"
-"              When  used,  this  option  will make all data specified with -d,\n"
-"              --data, --data-binary or --data-urlencode to be used in an  HTTP\n"
-"              GET  request instead of the POST request that otherwise would be\n"
-"              used. The data will be appended to the URL with a '?' separator.\n"
-, stdout);
- fputs(
-"              If used in combination with -I, the POST data  will  instead  be\n"
-"              appended to the URL with a HEAD request.\n"
-"\n"
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used. This is because undoing a GET doesn't make sense, but  you\n"
-"              should then instead enforce the alternative method you prefer.\n"
+"       -I, --head\n"
+"              (HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the\n"
+"              command  HEAD which this uses to get nothing but the header of a\n"
+"              document. When used on an FTP or FILE file,  curl  displays  the\n"
+"              file size and last modification time only.\n"
 "\n"
 "       -H, --header <header>\n"
-"              (HTTP)  Extra header to include in the request when sending HTTP\n"
 , stdout);
  fputs(
+"              (HTTP)  Extra header to include in the request when sending HTTP\n"
 "              to a server. You may specify any number of extra  headers.  Note\n"
 "              that if you should add a custom header that has the same name as\n"
 "              one of the internal ones curl would  use,  your  externally  set\n"
 "              header will be used instead of the internal one. This allows you\n"
 "              to make even trickier stuff than curl  would  normally  do.  You\n"
-"              should  not  replace internally set headers without knowing per-\n"
 , stdout);
  fputs(
+"              should  not  replace internally set headers without knowing per-\n"
 "              fectly well what you're doing. Remove an internal header by giv-\n"
 "              ing  a  replacement  without  content  on  the right side of the\n"
 "              colon, as in: -H \"Host:\". If you send the custom header with no-\n"
 "              value  then its header must be terminated with a semicolon, such\n"
 "              as -H \"X-Custom-Header;\" to send \"X-Custom-Header:\".\n"
 "\n"
-"              curl will make sure that each header  you  add/replace  is  sent\n"
 , stdout);
  fputs(
+"              curl will make sure that each header  you  add/replace  is  sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
 "              See also the -A, --user-agent and -e, --referer options.\n"
 "\n"
 "              Starting in 7.37.0, you need --proxy-header to send custom head-\n"
 "              ers intended for a proxy.\n"
 "\n"
-"              Example:\n"
-"\n"
 , stdout);
  fputs(
-"              # curl -H \"X-First-Name: Joe\" http://example.com/\n"
+"              Example:\n"
+"\n"
+"               curl -H \"X-First-Name: Joe\" http://example.com/\n"
 "\n"
 "              WARNING: headers set  with  this  option  will  be  set  in  all\n"
 "              requests  -  even  after  redirects are followed, like when told\n"
 "              with -L, --location. This can lead to the header being  sent  to\n"
 "              other  hosts than the original host, so sensitive headers should\n"
 "              be used with caution combined with following redirects.\n"
 "\n"
 , stdout);
  fputs(
 "              This option can be used  multiple  times  to  add/replace/remove\n"
 "              multiple headers.\n"
 "\n"
+"       -h, --help\n"
+"              Usage  help.  This lists all current command line options with a\n"
+"              short description.\n"
 "       --hostpubmd5 <md5>\n"
-"              (SCP/SFTP)  Pass  a string containing 32 hexadecimal digits. The\n"
-"              string should be the 128 bit MD5 checksum of the  remote  host's\n"
-"              public key, curl will refuse the connection with the host unless\n"
-"              the md5sums match. (Added in 7.17.1)\n"
-"\n"
-"       --ignore-content-length\n"
+"              (SFTP SCP) Pass a string containing 32 hexadecimal  digits.  The\n"
+"              string  should  be the 128 bit MD5 checksum of the remote host's\n"
 , stdout);
  fputs(
-"              For HTTP, Ignore the Content-Length header. This is particularly\n"
-"              useful  for servers running Apache 1.x, which will report incor-\n"
-"              rect Content-Length for files larger than 2 gigabytes.\n"
+"              public key, curl will refuse the connection with the host unless\n"
+"              the md5sums match.\n"
 "\n"
-"              For FTP (since 7.46.0), skip the RETR command to figure out  the\n"
-"              size before downloading a file.\n"
+"              Added in 7.17.1.\n"
 "\n"
-"       -i, --include\n"
-"              (HTTP)  Include  the  HTTP-header in the output. The HTTP-header\n"
-, stdout);
- fputs(
-"              includes things like server-name, date of  the  document,  HTTP-\n"
-"              version and more...\n"
+"       -0, --http1.0\n"
+"              (HTTP)  Tells  curl to use HTTP version 1.0 instead of using its\n"
+"              internally preferred HTTP version.\n"
 "\n"
-"       -I, --head\n"
-"              (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature\n"
-"              the command HEAD which this uses to get nothing but  the  header\n"
-"              of  a  document. When used on an FTP or FILE file, curl displays\n"
-"              the file size and last modification time only.\n"
+"              This option overrides --http1.1 and --http2.\n"
+"\n"
+"       --http1.1\n"
+"              (HTTP) Tells curl to use HTTP version 1.1.\n"
 "\n"
-"       --interface <name>\n"
 , stdout);
  fputs(
-"              Perform an operation using a specified interface. You can  enter\n"
-"              interface  name,  IP address or host name. An example could look\n"
-"              like:\n"
-"\n"
-"               curl --interface eth0:1 https://www.example.com/\n"
+"              This option  overrides  -0,  --http1.0  and  --http2.  Added  in\n"
+"              7.33.0.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"       --http2-prior-knowledge\n"
+"              (HTTP)  Tells  curl  to  issue  its  non-TLS HTTP requests using\n"
+"              HTTP/2 without HTTP/1.1 Upgrade.  It  requires  prior  knowledge\n"
+"              that  the  server  supports HTTP/2 straight away. HTTPS requests\n"
+"              will still do HTTP/2 the standard way with  negotiated  protocol\n"
+"              version in the TLS handshake.\n"
 "\n"
-"       -j, --junk-session-cookies\n"
-"              (HTTP) When curl is told to read cookies from a given file, this\n"
 , stdout);
  fputs(
-"              option  will  make  it  discard all \"session cookies\". This will\n"
-"              basically have the same effect as if a new session  is  started.\n"
-"              Typical  browsers  always  discard  session cookies when they're\n"
-"              closed down.\n"
+"              --http2-prior-knowledge requires that the underlying libcurl was\n"
+"              built to support HTTP/2. This option overrides --http1.1 and -0,\n"
+"              --http1.0 and --http2. Added in 7.49.0.\n"
 "\n"
-"       -J, --remote-header-name\n"
-"              (HTTP) This option tells the -O, --remote-name option to use the\n"
-"              server-specified   Content-Disposition   filename   instead   of\n"
+"       --http2\n"
+"              (HTTP) Tells curl to use HTTP version 2.\n"
+"\n"
+"              See also --no-alpn. --http2 requires that the underlying libcurl\n"
+"              was built to support HTTP/2. This option overrides --http1.1 and\n"
 , stdout);
  fputs(
-"              extracting a filename from the URL.\n"
+"              -0, --http1.0 and --http2-prior-knowledge. Added in 7.33.0.\n"
 "\n"
-"              If the server specifies a file name and a file  with  that  name\n"
-"              already  exists  in the current working directory it will not be\n"
-"              overwritten and an error will occur. If the server doesn't spec-\n"
-"              ify a file name then this option has no effect.\n"
+"       --ignore-content-length\n"
+"              (FTP  HTTP)  For HTTP, Ignore the Content-Length header. This is\n"
+"              particularly useful for servers running Apache 1.x,  which  will\n"
+"              report  incorrect  Content-Length  for files larger than 2 giga-\n"
+"              bytes.\n"
+"\n"
+"              For FTP (since 7.46.0), skip the RETR command to figure out  the\n"
+"              size before downloading a file.\n"
 "\n"
-"              There's  no  attempt to decode %-sequences (yet) in the provided\n"
 , stdout);
  fputs(
-"              file name, so this option may provide you with rather unexpected\n"
-"              file names.\n"
+"       -i, --include\n"
+"              Include  the HTTP-header in the output. The HTTP-header includes\n"
+"              things like server-name, date of the document, HTTP-version  and\n"
+"              more...\n"
 "\n"
-"              WARNING:  Exercise  judicious  use of this option, especially on\n"
-"              Windows. A rogue server could send you the  name  of  a  DLL  or\n"
-"              other  file  that could possibly be loaded automatically by Win-\n"
-"              dows or some third party software.\n"
+"              See also -v, --verbose.\n"
 "\n"
 "       -k, --insecure\n"
-"              (SSL) This option explicitly allows curl to  perform  \"insecure\"\n"
+"              (TLS)  This  option explicitly allows curl to perform \"insecure\"\n"
+"              SSL connections and transfers. All SSL connections are attempted\n"
+"              to  be  made secure by using the CA certificate bundle installed\n"
 , stdout);
  fputs(
-"              SSL connections and transfers. All SSL connections are attempted\n"
-"              to be made secure by using the CA certificate  bundle  installed\n"
-"              by  default.  This  makes  all connections considered \"insecure\"\n"
+"              by default. This makes  all  connections  considered  \"insecure\"\n"
 "              fail unless -k, --insecure is used.\n"
 "\n"
-"              See    this    online    resource    for    further     details:\n"
-"              https://curl.haxx.se/docs/sslcerts.html\n"
+"              See this online resource for further details:\n"
+"               https://curl.haxx.se/docs/sslcerts.html\n"
 "\n"
-"       -K, --config <config file>\n"
-, stdout);
- fputs(
-"              Specify  which config file to read curl arguments from. The con-\n"
-"              fig file is a text file in which command line arguments  can  be\n"
-"              written  which  then will be used as if they were written on the\n"
-"              actual command line.\n"
+"       --interface <name>\n"
 "\n"
-"              Options and their parameters must be specified on the same  con-\n"
-"              fig  file  line,  separated  by whitespace, colon, or the equals\n"
-, stdout);
- fputs(
-"              sign. Long option names can optionally be given  in  the  config\n"
-"              file  without  the initial double dashes and if so, the colon or\n"
-"              equals characters can be used as separators. If  the  option  is\n"
-"              specified  with  one  or  two  dashes,  there can be no colon or\n"
-"              equals character between the option and its parameter.\n"
+"              Perform  an operation using a specified interface. You can enter\n"
+"              interface name, IP address or host name. An example  could  look\n"
+"              like:\n"
 "\n"
-"              If the parameter is to contain whitespace, the parameter must be\n"
 , stdout);
  fputs(
-"              enclosed  within  quotes.  Within  double  quotes, the following\n"
-"              escape sequences are available: \\\\, \\\", \\t, \\n,  \\r  and  \\v.  A\n"
-"              backslash  preceding  any  other letter is ignored. If the first\n"
-"              column of a config line is a '#' character, the rest of the line\n"
-"              will be treated as a comment. Only write one option per physical\n"
-"              line in the config file.\n"
+"               curl --interface eth0:1 https://www.example.com/\n"
 "\n"
-, stdout);
- fputs(
-"              Specify the filename to -K, --config as '-' to  make  curl  read\n"
-"              the file from stdin.\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"              Note  that  to  be able to specify a URL in the config file, you\n"
-"              need to specify it using the --url option,  and  not  by  simply\n"
-"              writing  the  URL  on its own line. So, it could look similar to\n"
-"              this:\n"
+"              See also --dns-interface.\n"
 "\n"
-"              url = \"https://curl.haxx.se/docs/\"\n"
+"       -4, --ipv4\n"
+"              This  option tells curl to resolve names to IPv4 addresses only,\n"
+"              and not for example try IPv6.\n"
 "\n"
-, stdout);
- fputs(
-"              When curl is invoked, it always (unless -q is used) checks for a\n"
-"              default  config  file  and  uses it if found. The default config\n"
-"              file is checked for in the following places in this order:\n"
+"              See also  --http1.1  and  --http2.  This  option  overrides  -6,\n"
+"              --ipv6.\n"
 "\n"
-"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
-"              CURL_HOME and then the HOME environment variables. Failing that,\n"
-"              it uses getpwuid() on Unix-like systems (which returns the  home\n"
+"       -6, --ipv6\n"
 , stdout);
  fputs(
-"              dir  given the current user in your system). On Windows, it then\n"
-"              checks for the APPDATA variable, or as a last resort the '%USER-\n"
-"              PROFILE%\\Application Data'.\n"
+"              This  option tells curl to resolve names to IPv6 addresses only,\n"
+"              and not for example try IPv4.\n"
 "\n"
-"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
-"              checks for one in the same dir the curl executable is placed. On\n"
-"              Unix-like  systems,  it will simply try to load .curlrc from the\n"
-"              determined home dir.\n"
+"              See also  --http1.1  and  --http2.  This  option  overrides  -6,\n"
+"              --ipv6.\n"
 "\n"
+"       -j, --junk-session-cookies\n"
+"              (HTTP) When curl is told to read cookies from a given file, this\n"
+"              option will make it discard all  \"session  cookies\".  This  will\n"
+"              basically  have  the same effect as if a new session is started.\n"
 , stdout);
  fputs(
-"              # --- Example file ---\n"
-"              # this is a comment\n"
-"              url = \"example.com\"\n"
-"              output = \"curlhere.html\"\n"
-"              user-agent = \"superagent/1.0\"\n"
-"\n"
-"              # and fetch another URL too\n"
-"              url = \"example.com/docs/manpage.html\"\n"
-"              -O\n"
-"              referer = \"http://nowhereatall.example.com/\"\n"
-"              # --- End of example file ---\n"
+"              Typical browsers always discard  session  cookies  when  they're\n"
+"              closed down.\n"
 "\n"
-"              This option can be used multiple times to load  multiple  config\n"
-, stdout);
- fputs(
-"              files.\n"
+"              See also -b, --cookie and -c, --cookie-jar.\n"
 "\n"
 "       --keepalive-time <seconds>\n"
 "              This  option  sets  the  time  a connection needs to remain idle\n"
 "              before sending keepalive probes and the time between  individual\n"
 "              keepalive probes. It is currently effective on operating systems\n"
-"              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
-"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
 , stdout);
  fputs(
-"              effect if --no-keepalive is used. (Added in 7.18.0)\n"
+"              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
+"              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
+"              effect if --no-keepalive is used.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "              If unspecified, the option defaults to 60 seconds.\n"
 "\n"
-"       --key <key>\n"
-"              (SSL/SSH) Private key file name. Allows you to provide your pri-\n"
-"              vate key in this separate file. For SSH, if not specified,  curl\n"
-"              tries   the  following  candidates  in  order:  '~/.ssh/id_rsa',\n"
+"              Added in 7.18.0.\n"
+"\n"
+"       --key-type <type>\n"
+"              (TLS)  Private key file type. Specify which type your --key pro-\n"
 , stdout);
  fputs(
-"              '~/.ssh/id_dsa', './id_rsa', './id_dsa'.\n"
+"              vided private key is. DER, PEM, and ENG are  supported.  If  not\n"
+"              specified, PEM is assumed.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --key-type <type>\n"
-"              (SSL) Private key file type. Specify which type your --key  pro-\n"
-"              vided  private  key  is. DER, PEM, and ENG are supported. If not\n"
-"              specified, PEM is assumed.\n"
+"       --key <key>\n"
+"              (TLS SSH) Private key file name. Allows you to provide your pri-\n"
+"              vate key in this separate file. For SSH, if not specified,  curl\n"
+"              tries the following candidates in order:\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --krb <level>\n"
-, stdout);
- fputs(
-"              (FTP) Enable Kerberos authentication and use. The level must  be\n"
+"              (FTP)  Enable Kerberos authentication and use. The level must be\n"
 "              entered and should be one of 'clear', 'safe', 'confidential', or\n"
-"              'private'. Should you use a level that  is  not  one  of  these,\n"
+"              'private'.  Should  you  use  a  level that is not one of these,\n"
 "              'private' will instead be used.\n"
 "\n"
-"              This  option  requires  a  library built with kerberos4 support.\n"
-"              This is not very common. Use -V, --version to see if  your  curl\n"
-"              supports it.\n"
-"\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
-"\n"
-"       --krb4 <level>\n"
-"              (FTP) This is the former name for --krb. Do not use.\n"
-"\n"
-"       -l, --list-only\n"
-"              (FTP)  When listing an FTP directory, this switch forces a name-\n"
-"              only view. This is  especially  useful  if  the  user  wants  to\n"
-"              machine-parse  the contents of an FTP directory since the normal\n"
 , stdout);
  fputs(
-"              directory view doesn't use a standard look or format. When  used\n"
-"              like  this,  the  option causes a NLST command to be sent to the\n"
-"              server instead of LIST.\n"
+"              --krb requires that the underlying libcurl was built to  support\n"
+"              Kerberos.\n"
 "\n"
-"              Note: Some FTP servers list only  files  in  their  response  to\n"
-"              NLST; they do not include sub-directories and symbolic links.\n"
+"       --libcurl <file>\n"
+"              Append  this  option  to any ordinary curl command line, and you\n"
+"              will get a libcurl-using C source code written to the file  that\n"
+"              does the equivalent of what your command-line operation does!\n"
+"\n"
+"              If  this  option is used several times, the last given file name\n"
+"              will be used.\n"
 "\n"
-"              (POP3)  When  retrieving a specific email from POP3, this switch\n"
 , stdout);
  fputs(
-"              forces a LIST command to be performed instead of RETR.  This  is\n"
-"              particularly  useful if the user wants to see if a specific mes-\n"
-"              sage id exists on the server and what size it is.\n"
+"              Added in 7.16.1.\n"
 "\n"
-"              Note: When combined with -X, --request  <command>,  this  option\n"
-"              can be used to send an UIDL command instead, so the user may use\n"
-"              the email's unique identifier rather than  it's  message  id  to\n"
+"       --limit-rate <speed>\n"
+"              Specify the maximum transfer rate you want curl  to  use  -  for\n"
+"              both downloads and uploads. This feature is useful if you have a\n"
+"              limited pipe and you'd like your transfer not to use your entire\n"
+"              bandwidth. To make it slower than it otherwise would be.\n"
+"\n"
+"              The  given speed is measured in bytes/second, unless a suffix is\n"
 , stdout);
  fputs(
-"              make the request. (Added in 7.21.5)\n"
+"              appended.  Appending 'k' or 'K' will count the number  as  kilo-\n"
+"              bytes,  'm'  or M' makes it megabytes, while 'g' or 'G' makes it\n"
+"              gigabytes. Examples: 200K, 3m and 1G.\n"
+"\n"
+"              If you also use the -Y, --speed-limit option, that  option  will\n"
+"              take precedence and might cripple the rate-limiting slightly, to\n"
+"              help keeping the speed-limit logic working.\n"
 "\n"
-"       -L, --location\n"
-"              (HTTP/HTTPS)  If  the server reports that the requested page has\n"
-"              moved to a different location (indicated with a Location: header\n"
-"              and  a  3XX  response code), this option will make curl redo the\n"
-"              request on the new place. If used together with -i, --include or\n"
-"              -I, --head, headers from all requested pages will be shown. When\n"
 , stdout);
  fputs(
-"              authentication is used, curl only sends its credentials  to  the\n"
-"              initial  host.  If a redirect takes curl to a different host, it\n"
-"              won't be able to intercept the user+password. See  also  --loca-\n"
-"              tion-trusted  on how to change this. You can limit the amount of\n"
-"              redirects to follow by using the --max-redirs option.\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"              When curl follows a redirect and the request is not a plain  GET\n"
+"       -l, --list-only\n"
+"              (FTP POP3) (FTP) When listing  an  FTP  directory,  this  switch\n"
+"              forces  a  name-only view. This is especially useful if the user\n"
+"              wants to machine-parse the contents of an  FTP  directory  since\n"
+"              the normal directory view doesn't use a standard look or format.\n"
+"              When used like this, the option causes a NLST command to be sent\n"
 , stdout);
  fputs(
-"              (for example POST or PUT), it will do the following request with\n"
-"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
-"              code  was  any  other  3xx code, curl will re-send the following\n"
-"              request using the same unmodified method.\n"
+"              to the server instead of LIST.\n"
+"\n"
+"              Note:  Some  FTP  servers  list  only files in their response to\n"
+"              NLST; they do not include sub-directories and symbolic links.\n"
 "\n"
-"              You can tell curl to not change the non-GET  request  method  to\n"
-"              GET  after  a  30x  response  by using the dedicated options for\n"
+"              (POP3) When retrieving a specific email from POP3,  this  switch\n"
+"              forces  a  LIST command to be performed instead of RETR. This is\n"
+"              particularly useful if the user wants to see if a specific  mes-\n"
 , stdout);
  fputs(
-"              that: --post301, --post302 and --post303.\n"
+"              sage id exists on the server and what size it is.\n"
 "\n"
-"       --libcurl <file>\n"
-"              Append this option to any ordinary curl command  line,  and  you\n"
-"              will  get a libcurl-using C source code written to the file that\n"
-"              does the equivalent of what your command-line operation does!\n"
+"              Note:  When combined with -X, --request, this option can be used\n"
+"              to send an UIDL command instead, so the user may use the email's\n"
+"              unique  identifier  rather  than  it's  message  id  to make the\n"
+"              request.\n"
 "\n"
-"              If this option is used several times, the last given  file  name\n"
-"              will be used. (Added in 7.16.1)\n"
+"              Added in 7.21.5.\n"
 "\n"
-"       --limit-rate <speed>\n"
+"       --local-port <num/range>\n"
+"              Set a preferred single number or range (FROM-TO) of  local  port\n"
 , stdout);
  fputs(
-"              Specify  the  maximum  transfer  rate you want curl to use - for\n"
-"              both downloads and uploads. This feature is useful if you have a\n"
-"              limited pipe and you'd like your transfer not to use your entire\n"
-"              bandwidth. To make it slower than it otherwise would be.\n"
+"              numbers to use for the connection(s).  Note that port numbers by\n"
+"              nature are a scarce resource that will be busy at times so  set-\n"
+"              ting  this range to something too narrow might cause unnecessary\n"
+"              connection setup failures.\n"
+"\n"
+"              Added in 7.15.2.\n"
 "\n"
-"              The given speed is measured in bytes/second, unless a suffix  is\n"
-"              appended.   Appending  'k' or 'K' will count the number as kilo-\n"
+"       --location-trusted\n"
+"              (HTTP) Like -L, --location, but will allow sending  the  name  +\n"
+"              password to all hosts that the site may redirect to. This may or\n"
 , stdout);
  fputs(
-"              bytes, 'm' or M' makes it megabytes, while 'g' or 'G'  makes  it\n"
-"              gigabytes. Examples: 200K, 3m and 1G.\n"
+"              may not introduce a security breach if the site redirects you to\n"
+"              a  site  to which you'll send your authentication info (which is\n"
+"              plaintext in the case of HTTP Basic authentication).\n"
 "\n"
-"              If  you  also use the -Y, --speed-limit option, that option will\n"
-"              take precedence and might cripple the rate-limiting slightly, to\n"
-"              help keeping the speed-limit logic working.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
+"              See also -u, --user.\n"
 "\n"
-"       --local-port <num>[-num]\n"
+"       -L, --location\n"
+"              (HTTP) If the server reports that the requested page  has  moved\n"
+"              to a different location (indicated with a Location: header and a\n"
 , stdout);
  fputs(
-"              Set a preferred number or range of local port numbers to use for\n"
-"              the connection(s).  Note that  port  numbers  by  nature  are  a\n"
-"              scarce resource that will be busy at times so setting this range\n"
-"              to something too narrow might cause unnecessary connection setup\n"
-"              failures. (Added in 7.15.2)\n"
-"\n"
-"       --location-trusted\n"
-"              (HTTP/HTTPS)  Like  -L,  --location,  but will allow sending the\n"
+"              3XX response code), this option will make curl redo the  request\n"
+"              on  the  new  place.  If used together with -i, --include or -I,\n"
+"              --head, headers from all requested pages  will  be  shown.  When\n"
+"              authentication  is  used, curl only sends its credentials to the\n"
+"              initial host. If a redirect takes curl to a different  host,  it\n"
+"              won't  be  able to intercept the user+password. See also --loca-\n"
 , stdout);
  fputs(
-"              name + password to all hosts that the site may redirect to. This\n"
-"              may or may not introduce a security breach if the site redirects\n"
-"              you to a site to which  you'll  send  your  authentication  info\n"
-"              (which is plaintext in the case of HTTP Basic authentication).\n"
+"              tion-trusted on how to change this. You can limit the amount  of\n"
+"              redirects to follow by using the --max-redirs option.\n"
 "\n"
-"       -m, --max-time <seconds>\n"
-"              Maximum  time  in  seconds that you allow the whole operation to\n"
+"              When  curl follows a redirect and the request is not a plain GET\n"
+"              (for example POST or PUT), it will do the following request with\n"
+"              a GET if the HTTP response was 301, 302, or 303. If the response\n"
+"              code was any other 3xx code, curl  will  re-send  the  following\n"
 , stdout);
  fputs(
-"              take.  This is useful for preventing your batch jobs from  hang-\n"
-"              ing  for  hours due to slow networks or links going down.  Since\n"
-"              7.32.0, this option accepts decimal values, but the actual time-\n"
-"              out will decrease in accuracy as the specified timeout increases\n"
-"              in decimal precision.  See also the --connect-timeout option.\n"
+"              request using the same unmodified method.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              You  can  tell  curl to not change the non-GET request method to\n"
+"              GET after a 30x response by  using  the  dedicated  options  for\n"
+"              that: --post301, --post302 and --post303.\n"
 "\n"
-, stdout);
- fputs(
 "       --login-options <options>\n"
-"              Specify the login options to use during server authentication.\n"
+"              (IMAP  POP3 SMTP) Specify the login options to use during server\n"
+"              authentication.\n"
 "\n"
 "              You can use the  login  options  to  specify  protocol  specific\n"
+, stdout);
+ fputs(
 "              options  that may be used during authentication. At present only\n"
 "              IMAP, POP3 and SMTP support login options. For more  information\n"
 "              about  the  login options please see RFC 2384, RFC 5092 and IETF\n"
-"              draft draft-earhart-url-smtp-00.txt (Added in 7.34.0).\n"
+"              draft draft-earhart-url-smtp-00.txt\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              Added in 7.34.0.\n"
+"\n"
 "       --mail-auth <address>\n"
+, stdout);
+ fputs(
 "              (SMTP) Specify a single address. This will be  used  to  specify\n"
 "              the  authentication  address  (identity)  of a submitted message\n"
 "              that is being relayed to another server.\n"
 "\n"
-"              (Added in 7.25.0)\n"
+"              See also --mail-rcpt and --mail-from. Added in 7.25.0.\n"
 "\n"
 "       --mail-from <address>\n"
 "              (SMTP) Specify a single address that the given mail  should  get\n"
 "              sent from.\n"
 "\n"
+"              See also --mail-rcpt and --mail-auth. Added in 7.20.0.\n"
+"\n"
+, stdout);
+ fputs(
+"       --mail-rcpt <address>\n"
+"              (SMTP) Specify a single address, user name or mailing list name.\n"
+"              Repeat this option several times to send to multiple recipients.\n"
+"              When performing a mail transfer, the recipient should specify  a\n"
+"              valid email address to send the mail to.\n"
+"\n"
+"              When  performing  an  address  verification  (VRFY command), the\n"
+"              recipient should be specified as the user name or user name  and\n"
 , stdout);
  fputs(
-"              (Added in 7.20.0)\n"
+"              domain (as per Section 3.5 of RFC5321). (Added in 7.34.0)\n"
+"\n"
+"              When performing a mailing list expand (EXPN command), the recip-\n"
+"              ient should be specified using the mailing list  name,  such  as\n"
+"              \"Friends\" or \"London-Office\".  (Added in 7.34.0)\n"
+"\n"
+"              Added in 7.20.0.\n"
+"\n"
+"       -M, --manual\n"
+"              Manual. Display the huge help text.\n"
 "\n"
 "       --max-filesize <bytes>\n"
+, stdout);
+ fputs(
 "              Specify  the  maximum  size (in bytes) of a file to download. If\n"
 "              the file requested is larger than this value, the transfer  will\n"
 "              not start and curl will return with exit code 63.\n"
 "\n"
 "              NOTE:  The  file size is not always known prior to download, and\n"
 "              for such files this option has no effect even if the file trans-\n"
+"              fer  ends  up  being larger than this given limit. This concerns\n"
 , stdout);
  fputs(
-"              fer  ends  up  being larger than this given limit. This concerns\n"
 "              both FTP and HTTP transfers.\n"
 "\n"
-"       --mail-rcpt <address>\n"
-"              (SMTP) Specify a single address, user name or mailing list name.\n"
-"              Repeat this option several times to send to multiple recipients.\n"
-"              When  performing a mail transfer, the recipient should specify a\n"
-"              valid email address to send the mail to. (Added in 7.20.0)\n"
+"              See also --limit-rate.\n"
+"\n"
+"       --max-redirs <num>\n"
+"              (HTTP) Set maximum  number  of  redirection-followings  allowed.\n"
+"              When  -L,  --location is used, is used to prevent curl from fol-\n"
+"              lowing redirections \"in absurdum\". By default, the limit is  set\n"
+"              to 50 redirections. Set this option to -1 to make it unlimited.\n"
 "\n"
 , stdout);
  fputs(
-"              When performing an  address  verification  (VRFY  command),  the\n"
-"              recipient  should be specified as the user name or user name and\n"
-"              domain (as per Section 3.5 of RFC5321). (Added in 7.34.0)\n"
-"\n"
-"              When performing a mailing list expand (EXPN command), the recip-\n"
-"              ient  should  be  specified using the mailing list name, such as\n"
-"              \"Friends\" or \"London-Office\".  (Added in 7.34.0)\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --max-redirs <num>\n"
+"       -m, --max-time <time>\n"
+"              Maximum  time  in  seconds that you allow the whole operation to\n"
+"              take.  This is useful for preventing your batch jobs from  hang-\n"
+"              ing  for  hours due to slow networks or links going down.  Since\n"
+"              7.32.0, this option accepts decimal values, but the actual time-\n"
 , stdout);
  fputs(
-"              Set maximum number of  redirection-followings  allowed.  If  -L,\n"
-"              --location is used, this option can be used to prevent curl from\n"
-"              following redirections \"in absurdum\". By default, the  limit  is\n"
-"              set  to 50 redirections. Set this option to -1 to make it limit-\n"
-"              less.\n"
+"              out will decrease in accuracy as the specified timeout increases\n"
+"              in decimal precision.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              See also --connect-timeout.\n"
+"\n"
 "       --metalink\n"
-, stdout);
- fputs(
 "              This option can tell curl to parse and process a  given  URI  as\n"
 "              Metalink  file  (both  version 3 and 4 (RFC 5854) are supported)\n"
 "              and make use of the mirrors listed within for failover if  there\n"
+, stdout);
+ fputs(
 "              are  errors (such as the file or server not being available). It\n"
 "              will also verify the hash of the file after  the  download  com-\n"
 "              pletes.  The Metalink file itself is downloaded and processed in\n"
-, stdout);
- fputs(
 "              memory and not stored in the local file system.\n"
 "\n"
 "              Example to use a remote Metalink file:\n"
 "\n"
-"              curl --metalink http://www.example.com/example.metalink\n"
+"               curl --metalink http://www.example.com/example.metalink\n"
 "\n"
+, stdout);
+ fputs(
 "              To use a Metalink file in the local file system, use FILE proto-\n"
 "              col (file://):\n"
 "\n"
-"              curl --metalink file://example.metalink\n"
+"               curl --metalink file://example.metalink\n"
 "\n"
 "              Please  note  that if FILE protocol is disabled, there is no way\n"
-, stdout);
- fputs(
 "              to use a local Metalink file at the time of this  writing.  Also\n"
-"              note  that  if  --metalink  and  --include  are  used  together,\n"
+"              note  that  if  --metalink  and -i, --include are used together,\n"
 "              --include will be ignored. This is because including headers  in\n"
+, stdout);
+ fputs(
 "              the  response  will break Metalink parser and if the headers are\n"
 "              included in the file described in Metalink file, hash check will\n"
 "              fail.\n"
 "\n"
-"              (Added in 7.27.0, if built against the libmetalink library.)\n"
+"              --metalink  requires  that  the  underlying libcurl was built to\n"
+"              support metalink. Added in 7.27.0.\n"
 "\n"
+"       --negotiate\n"
+"              (HTTP) Enables Negotiate (SPNEGO) authentication.\n"
+"\n"
+"              This option requires a library built with GSS-API or  SSPI  sup-\n"
 , stdout);
  fputs(
+"              port.  Use  -V,  --version  to  see  if  your curl supports GSS-\n"
+"              API/SSPI or SPNEGO.\n"
+"\n"
+"              When using this option, you must also provide a fake -u,  --user\n"
+"              option  to  activate the authentication code properly. Sending a\n"
+"              '-u :' is enough as the user name  and  password  from  the  -u,\n"
+"              --user option aren't actually used.\n"
+"\n"
+"              If  this  option  is  used  several times, only the first one is\n"
+, stdout);
+ fputs(
+"              used.\n"
+"\n"
+"              See also --basic and --ntlm and --anyauth and --proxy-negotiate.\n"
+"\n"
+"       --netrc-file <filemame>\n"
+"              This option is similar to -n, --netrc, except that  you  provide\n"
+"              the  path  (absolute  or  relative)  to the netrc file that Curl\n"
+"              should use.  You can only specify one netrc file per invocation.\n"
+"              If  several --netrc-file options are provided, the last one will\n"
+"              be used.\n"
+"\n"
+, stdout);
+ fputs(
+"              It will abide by --netrc-optional if specified.\n"
+"\n"
+"              This option overrides -n, --netrc. Added in 7.21.5.\n"
+"\n"
+"       --netrc-optional\n"
+"              Very similar to -n, --netrc, but this option  makes  the  .netrc\n"
+"              usage optional and not mandatory as the -n, --netrc option does.\n"
+"\n"
+"              See also --netrc-file. This option overrides -n, --netrc.\n"
+"\n"
 "       -n, --netrc\n"
 "              Makes  curl  scan  the  .netrc  (_netrc  on Windows) file in the\n"
+, stdout);
+ fputs(
 "              user's home directory for login name and password. This is typi-\n"
 "              cally  used for FTP on Unix. If used with HTTP, curl will enable\n"
 "              user authentication. See netrc(5) ftp(1) for details on the file\n"
 "              format.  Curl  will  not  complain if that file doesn't have the\n"
 "              right permissions (it should not be either world- or group-read-\n"
-, stdout);
- fputs(
 "              able).  The environment variable \"HOME\" is used to find the home\n"
 "              directory.\n"
 "\n"
+, stdout);
+ fputs(
 "              A quick and very simple example of how  to  setup  a  .netrc  to\n"
 "              allow  curl to FTP to the machine host.domain.com with user name\n"
 "              'myself' and password 'secret' should look similar to:\n"
 "\n"
 "              machine host.domain.com login myself password secret\n"
 "\n"
-"       -N, --no-buffer\n"
+"       -:, --next\n"
+"              Tells curl to use a separate operation for the following URL and\n"
+"              associated   options.  This  allows  you  to  send  several  URL\n"
 , stdout);
  fputs(
-"              Disables the buffering of the output stream. In normal work sit-\n"
-"              uations,  curl  will  use a standard buffered output stream that\n"
-"              will have the effect that it will output the data in chunks, not\n"
-"              necessarily  exactly  when  the data arrives.  Using this option\n"
-"              will disable that buffering.\n"
+"              requests, each with their own  specific  options,  for  example,\n"
+"              such as different user names or custom requests for each.\n"
 "\n"
-"              Note that this is the negated option name  documented.  You  can\n"
-"              thus use --buffer to enforce the buffering.\n"
-"\n"
-, stdout);
- fputs(
-"       --netrc-file\n"
-"              This  option  is similar to --netrc, except that you provide the\n"
-"              path (absolute or relative) to the netrc file that  Curl  should\n"
-"              use.   You  can  only  specify one netrc file per invocation. If\n"
-"              several --netrc-file options are provided,  only  the  last  one\n"
-"              will be used.  (Added in 7.21.5)\n"
+"              -:,  --next  will  reset  all local options and only global ones\n"
+"              will have their values survive over to the  operation  following\n"
+"              the -:, --next instruction. Global options include -v, --verbose\n"
+"              and --fail-early.\n"
 "\n"
-"              This  option  overrides  any use of --netrc as they are mutually\n"
 , stdout);
  fputs(
-"              exclusive.  It will also abide by --netrc-optional if specified.\n"
+"              For example, you can do both a GET and a POST in a  single  com-\n"
+"              mand line:\n"
 "\n"
-"       --netrc-optional\n"
-"              Very similar to --netrc, but this option makes the .netrc  usage\n"
-"              optional and not mandatory as the --netrc option does.\n"
-"\n"
-"       --negotiate\n"
-"              (HTTP) Enables Negotiate (SPNEGO) authentication.\n"
+"               curl www1.example.com --next -d postthis www2.example.com\n"
 "\n"
-"              If  you  want to enable Negotiate (SPNEGO) for proxy authentica-\n"
-"              tion, then use --proxy-negotiate.\n"
+"              Added in 7.36.0.\n"
 "\n"
+"       --no-alpn\n"
+"              (HTTPS)  Disable  the  ALPN  TLS  extension.  ALPN is enabled by\n"
+"              default if libcurl was built with an SSL library  that  supports\n"
+"              ALPN.  ALPN is used by a libcurl that supports HTTP/2 to negoti-\n"
 , stdout);
  fputs(
-"              This option requires a library built with GSS-API or  SSPI  sup-\n"
-"              port.  Use  -V,  --version  to  see  if  your curl supports GSS-\n"
-"              API/SSPI and SPNEGO.\n"
+"              ate HTTP/2 support with the server during https sessions.\n"
 "\n"
-"              When using this option, you must also provide a fake -u,  --user\n"
-"              option  to  activate the authentication code properly. Sending a\n"
-"              '-u :' is enough as the user  name  and  password  from  the  -u\n"
-"              option aren't actually used.\n"
+"              See also --no-npn  and  --http2.  --no-alpn  requires  that  the\n"
+"              underlying libcurl was built to support TLS. Added in 7.36.0.\n"
 "\n"
+"       -N, --no-buffer\n"
+"              Disables the buffering of the output stream. In normal work sit-\n"
+"              uations, curl will use a standard buffered  output  stream  that\n"
+"              will have the effect that it will output the data in chunks, not\n"
 , stdout);
  fputs(
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used.\n"
+"              necessarily exactly when the data arrives.   Using  this  option\n"
+"              will disable that buffering.\n"
+"\n"
+"              Note  that  this  is the negated option name documented. You can\n"
+"              thus use --buffer to enforce the buffering.\n"
 "\n"
 "       --no-keepalive\n"
-"              Disables the use of keepalive messages on the TCP connection, as\n"
-"              by default curl enables them.\n"
+"              Disables the use of keepalive messages on  the  TCP  connection.\n"
+"              curl otherwis enables them by default.\n"
 "\n"
 "              Note  that  this  is the negated option name documented. You can\n"
+, stdout);
+ fputs(
 "              thus use --keepalive to enforce keepalive.\n"
 "\n"
-"       --no-sessionid\n"
-"              (SSL) Disable curl's use of SSL session-ID caching.  By  default\n"
+"       --no-npn\n"
+"              (HTTPS) Disable the NPN TLS extension. NPN is enabled by default\n"
+"              if  libcurl was built with an SSL library that supports NPN. NPN\n"
+"              is used by a libcurl that supports HTTP/2  to  negotiate  HTTP/2\n"
+"              support with the server during https sessions.\n"
+"\n"
+"              See  also  --no-alpn  and  --http2.  --no-npn  requires that the\n"
 , stdout);
  fputs(
+"              underlying libcurl was built to support TLS. Added in 7.36.0.\n"
+"\n"
+"       --no-sessionid\n"
+"              (TLS) Disable curl's use of SSL session-ID caching.  By  default\n"
 "              all  transfers are done using the cache. Note that while nothing\n"
 "              should ever get hurt by attempting  to  reuse  SSL  session-IDs,\n"
 "              there seem to be broken SSL implementations in the wild that may\n"
-"              require you to disable this in order for you to succeed.  (Added\n"
-"              in 7.16.0)\n"
-"\n"
-"              Note  that  this  is the negated option name documented. You can\n"
-"              thus use --sessionid to enforce session-ID caching.\n"
+"              require you to disable this in order for you to succeed.\n"
 "\n"
 , stdout);
  fputs(
+"              Note that this is the negated option name  documented.  You  can\n"
+"              thus use --sessionid to enforce session-ID caching.\n"
+"\n"
+"              Added in 7.16.0.\n"
+"\n"
 "       --noproxy <no-proxy-list>\n"
-"              Comma-separated list of hosts which do not use a proxy,  if  one\n"
-"              is  specified.  The only wildcard is a single * character, which\n"
+"              Comma-separated  list  of hosts which do not use a proxy, if one\n"
+"              is specified.  The only wildcard is a single * character,  which\n"
 "              matches all hosts, and effectively disables the proxy. Each name\n"
-"              in  this  list  is matched as either a domain which contains the\n"
-"              hostname, or the hostname itself. For example,  local.com  would\n"
 , stdout);
  fputs(
-"              match   local.com,  local.com:80,  and  www.local.com,  but  not\n"
-"              www.notlocal.com.  (Added in 7.19.4).\n"
+"              in this list is matched as either a domain  which  contains  the\n"
+"              hostname,  or  the hostname itself. For example, local.com would\n"
+"              match  local.com,  local.com:80,  and  www.local.com,  but   not\n"
+"              www.notlocal.com.\n"
 "\n"
-"       --connect-to <host:port:connect-to-host:connect-to-port>\n"
-"              For a request to the given \"host:port\" pair,  connect  to  \"con-\n"
-"              nect-to-host:connect-to-port\"  instead.   This  is  suitable  to\n"
-"              direct the request at a specific  server,  e.g.  at  a  specific\n"
-, stdout);
- fputs(
-"              cluster  node in a cluster of servers.  This option is only used\n"
-"              to establish the network connection.  It  does  NOT  affect  the\n"
-"              hostname/port  that  is  used for TLS/SSL (e.g. SNI, certificate\n"
-"              verification) or for  the  application  protocols.   \"host\"  and\n"
-"              \"port\"  may be the empty string, meaning \"any host/port\".  \"con-\n"
-"              nect-to-host\"  and  \"connect-to-port\"  may  also  be  the  empty\n"
+"              Added in 7.19.4.\n"
+"\n"
+"       --ntlm-wb\n"
+"              (HTTP) Enables NTLM much in the style --ntlm does, but hand over\n"
+"              the authentication to the separate binary  ntlmauth  application\n"
 , stdout);
  fputs(
-"              string,  meaning  \"use  the request's original host/port\".  This\n"
-"              option can be used many times to add many connect rules.  (Added\n"
-"              in 7.49.0).\n"
+"              that is executed when needed.\n"
+"\n"
+"              See also --ntlm and --proxy-ntlm.\n"
 "\n"
 "       --ntlm (HTTP)  Enables  NTLM  authentication.  The  NTLM authentication\n"
 "              method was designed by Microsoft and is used by IIS web servers.\n"
 "              It  is a proprietary protocol, reverse-engineered by clever peo-\n"
-, stdout);
- fputs(
 "              ple and implemented in curl based on their efforts. This kind of\n"
 "              behavior  should  not be endorsed, you should encourage everyone\n"
+, stdout);
+ fputs(
 "              who uses NTLM to switch to a public and  documented  authentica-\n"
 "              tion method instead, such as Digest.\n"
 "\n"
 "              If  you  want to enable NTLM for your proxy authentication, then\n"
 "              use --proxy-ntlm.\n"
 "\n"
-"              This option requires a library built with SSL support.  Use  -V,\n"
+"              If this option is used several times,  only  the  first  one  is\n"
+"              used.\n"
+"\n"
+"              See  also  --proxy-ntlm.  --ntlm  requires  that  the underlying\n"
 , stdout);
  fputs(
-"              --version to see if your curl supports NTLM.\n"
+"              libcurl was built to support TLS. This option overrides  --basic\n"
+"              and --negotiated and --digest and --anyauth.\n"
 "\n"
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used.\n"
+"       --oauth2-bearer\n"
+"              (IMAP  POP3  SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
+"              authentication. The Bearer Token is used in conjunction with the\n"
+"              user  name  which  can  be specified as part of the --url or -u,\n"
+"              --user options.\n"
 "\n"
-"       --ntlm-wb\n"
-"              (HTTP) Enables NTLM much in the style --ntlm does, but hand over\n"
-"              the  authentication  to the separate binary ntlmauth application\n"
-"              that is executed when needed.\n"
+, stdout);
+ fputs(
+"              The Bearer Token and user name are formatted  according  to  RFC\n"
+"              6750.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -o, --output <file>\n"
 "              Write output to <file> instead of stdout. If you are using {} or\n"
+"              [] to fetch multiple documents, you can use '#'  followed  by  a\n"
+"              number  in  the <file> specifier. That variable will be replaced\n"
 , stdout);
  fputs(
-"              []  to  fetch  multiple documents, you can use '#' followed by a\n"
-"              number in the <file> specifier. That variable will  be  replaced\n"
 "              with the current string for the URL being fetched. Like in:\n"
 "\n"
-"                curl http://{one,two}.example.com -o \"file_#1.txt\"\n"
+"               curl http://{one,two}.example.com -o \"file_#1.txt\"\n"
 "\n"
 "              or use several variables like:\n"
 "\n"
-"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
+"               curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
 "\n"
-"              You  may use this option as many times as the number of URLs you\n"
-, stdout);
- fputs(
-"              have. For example, if you specify two URLs on the  same  command\n"
+"              You may use this option as many times as the number of URLs  you\n"
+"              have.  For  example, if you specify two URLs on the same command\n"
 "              line, you can use it like this:\n"
 "\n"
+, stdout);
+ fputs(
 "                curl -o aa example.com -o bb example.net\n"
 "\n"
-"              and  the  order  of  the -o options and the URLs doesn't matter,\n"
-"              just that the first -o is for the first URL and so  on,  so  the\n"
+"              and the order of the -o options and  the  URLs  doesn't  matter,\n"
+"              just  that  the  first -o is for the first URL and so on, so the\n"
 "              above command line can also be written as\n"
 "\n"
 "                curl example.com example.net -o aa -o bb\n"
 "\n"
+"              See also the --create-dirs option to create the  local  directo-\n"
+"              ries  dynamically.  Specifying the output as '-' (a single dash)\n"
 , stdout);
  fputs(
-"              See  also  the --create-dirs option to create the local directo-\n"
-"              ries dynamically. Specifying the output as '-' (a  single  dash)\n"
 "              will force the output to be done to stdout.\n"
 "\n"
-"       -O, --remote-name\n"
-"              Write  output to a local file named like the remote file we get.\n"
-"              (Only the file part of the remote file is used, the path is  cut\n"
-"              off.)\n"
+"              See  also  -O,  --remote-name  and  --remote-name-all  and   -J,\n"
+"              --remote-header-name.\n"
 "\n"
-"              The  file will be saved in the current working directory. If you\n"
-, stdout);
- fputs(
-"              want the file saved in a  different  directory,  make  sure  you\n"
-"              change  the  current working directory before invoking curl with\n"
-"              this option.\n"
+"       --pass <phrase>\n"
+"              (SSH TLS) Passphrase for the private key\n"
 "\n"
-"              The remote file name to use for saving  is  extracted  from  the\n"
-"              given  URL,  nothing  else,  and if it already exists it will be\n"
-"              overwritten. If you want the server to be  able  to  choose  the\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"       --path-as-is\n"
+"              Tell  curl  to  not handle sequences of /../ or /./ in the given\n"
 , stdout);
  fputs(
-"              file name refer to -J, --remote-header-name which can be used in\n"
-"              addition to this option. If the server chooses a file  name  and\n"
-"              that name already exists it will not be overwritten.\n"
+"              URL path. Normally curl will squash or merge them  according  to\n"
+"              standards but with this option set you tell it not to do that.\n"
 "\n"
-"              There is no URL decoding done on the file name. If it has %20 or\n"
-"              other URL encoded parts of the name, they will end up  as-is  as\n"
-"              file name.\n"
+"              Added in 7.42.0.\n"
 "\n"
-"              You  may use this option as many times as the number of URLs you\n"
+"       --pinnedpubkey <hashes>\n"
+"              (TLS)  Tells  curl  to  use  the  specified  public key file (or\n"
+"              hashes) to verify the peer. This can be a path to a  file  which\n"
+"              contains a single public key in PEM or DER format, or any number\n"
 , stdout);
  fputs(
-"              have.\n"
+"              of base64 encoded sha256 hashes preceded by 'sha256//' and sepa-\n"
+"              rated by ';'\n"
 "\n"
-"       --oauth2-bearer\n"
-"              (IMAP, POP3, SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
-"              authentication. The Bearer Token is used in conjunction with the\n"
-"              user name which can be specified as part of  the  --url  or  -u,\n"
-"              --user options.\n"
+"              When  negotiating  a  TLS  or SSL connection, the server sends a\n"
+"              certificate indicating its identity. A public key  is  extracted\n"
+"              from  this certificate and if it does not exactly match the pub-\n"
+"              lic key provided to this option, curl will abort the  connection\n"
+"              before sending or receiving any data.\n"
 "\n"
-"              The  Bearer  Token  and user name are formatted according to RFC\n"
-"              6750.\n"
+, stdout);
+ fputs(
+"              PEM/DER support:\n"
+"                7.39.0: OpenSSL, GnuTLS and GSKit\n"
+"                7.43.0: NSS and wolfSSL/CyaSSL\n"
+"                7.47.0: mbedtls\n"
+"                7.49.0: PolarSSL sha256 support:\n"
+"                7.44.0: OpenSSL, GnuTLS, NSS and wolfSSL/CyaSSL.\n"
+"                7.47.0: mbedtls\n"
+"                7.49.0: PolarSSL Other SSL backends not supported.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"       --post301\n"
 , stdout);
  fputs(
-"       --proxy-header <header>\n"
-"              (HTTP) Extra header to include in the request when sending  HTTP\n"
-"              to a proxy. You may specify any number of extra headers. This is\n"
-"              the equivalent option to -H, --header but is for proxy  communi-\n"
-"              cation  only  like  in CONNECT requests when you want a separate\n"
-"              header sent to the proxy to what is sent to  the  actual  remote\n"
-"              host.\n"
+"              (HTTP) Tells curl to respect RFC 7231/6.4.2 and not convert POST\n"
+"              requests into GET requests when following a 301 redirection. The\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
+"              tion.\n"
 "\n"
 , stdout);
  fputs(
-"              curl  will  make  sure  that each header you add/replace is sent\n"
-"              with the proper end-of-line marker, you should thus not add that\n"
-"              as a part of the header content: do not add newlines or carriage\n"
-"              returns, they will only mess things up for you.\n"
+"              See  also  --post302  and --post303 and -L, --location. Added in\n"
+"              7.17.1.\n"
 "\n"
-"              Headers specified with this  option  will  not  be  included  in\n"
-"              requests that curl knows will not be sent to a proxy.\n"
+"       --post302\n"
+"              (HTTP) Tells curl to respect RFC 7231/6.4.3 and not convert POST\n"
+"              requests into GET requests when following a 302 redirection. The\n"
+"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
+"              the  conversion  by  default to maintain consistency. However, a\n"
+, stdout);
+ fputs(
+"              server may require a POST to remain a POST after  such  a  redi-\n"
+"              rection.  This  option is meaningful only when using -L, --loca-\n"
+"              tion.\n"
 "\n"
+"              See also --post301 and --post303 and -L,  --location.  Added  in\n"
+"              7.19.1.\n"
+"\n"
+"       --post303\n"
+"              (HTTP) Tells curl to respect RFC 7231/6.4.4 and not convert POST\n"
+"              requests into GET requests when following a 303 redirection. The\n"
 , stdout);
  fputs(
-"              This  option  can  be  used multiple times to add/replace/remove\n"
-"              multiple headers.\n"
-"              (Added in 7.37.0)\n"
-"       -p, --proxytunnel\n"
-"              When an HTTP proxy is used (-x, --proxy), this option will cause\n"
-"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
-"              instead of merely using it to do HTTP-like operations. The  tun-\n"
-"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
+"              tion.\n"
+"\n"
+"              See  also  --post302  and --post301 and -L, --location. Added in\n"
+"              7.26.0.\n"
+"\n"
+"       --preproxy [protocol://]host[:port]\n"
 , stdout);
  fputs(
-"              requires that the proxy allows direct connect to the remote port\n"
-"              number curl wants to tunnel through to.\n"
+"              Use the specified proxy before connecting to the ordinary proxy.\n"
+"              Hence pre proxy. A pre proxy must be a SOCKS speaking proxy.\n"
 "\n"
-"       -P, --ftp-port <address>\n"
-"              (FTP)  Reverses  the  default initiator/listener roles when con-\n"
-"              necting with FTP. This switch makes curl  use  active  mode.  In\n"
-"              practice,  curl  then  tells  the  server to connect back to the\n"
-"              client's specified address and port, while passive mode asks the\n"
+"              The pre proxy string should be specified with a protocol:// pre-\n"
+"              fix to  specify  alternative  proxy  protocols.  Use  socks4://,\n"
+"              socks4a://,  socks5://  or  socks5h://  to  request the specific\n"
+"              SOCKS version to be used. No protocol specified will  make  curl\n"
 , stdout);
  fputs(
-"              server  to  setup  an  IP address and port for it to connect to.\n"
-"              <address> should be one of:\n"
+"              default to SOCKS4.\n"
 "\n"
-"              interface\n"
-"                     i.e \"eth0\" to specify which interface's  IP  address  you\n"
-"                     want to use (Unix only)\n"
+"              If  the  port number is not specified in the proxy string, it is\n"
+"              assumed to be 1080.\n"
 "\n"
-"              IP address\n"
-"                     i.e \"192.168.10.1\" to specify the exact IP address\n"
+"              User and password that might be provided in the proxy string are\n"
+"              URL  decoded by curl. This allows you to pass in special charac-\n"
+"              ters such as @ by using %40 or pass in a colon with %3a.\n"
 "\n"
-"              host name\n"
-"                     i.e \"my.host.domain\" to specify the machine\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              Added in 7.52.0.\n"
 "\n"
 , stdout);
  fputs(
-"              -      make  curl  pick the same IP address that is already used\n"
-"                     for the control connection\n"
+"       -#, --progress-bar\n"
+"              Make curl display transfer progress as  a  simple  progress  bar\n"
+"              instead of the standard, more informational, meter.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
-"              Disable  the use of PORT with --ftp-pasv. Disable the attempt to\n"
-"              use the EPRT command instead of PORT  by  using  --disable-eprt.\n"
-"              EPRT is really PORT++.\n"
+"              This  progress  bar draws a single line of '#' characters across\n"
+"              the screen and shows a percentage if the transfer size is known.\n"
+"              For  transfers  without a known size, it will instead output one\n"
+"              '#' character for every 1024 bytes transferred.\n"
 "\n"
-"              Starting in 7.19.5, you can append \":[start]-[end]\" to the right\n"
 , stdout);
  fputs(
-"              of the address, to tell curl what TCP port range  to  use.  That\n"
-"              means you specify a port range, from a lower to a higher number.\n"
-"              A single number works as well, but do note that it increases the\n"
-"              risk of failure since the port may not be available.\n"
+"       --proto-default <protocol>\n"
+"              Tells curl to use protocol for any URL missing a scheme name.\n"
 "\n"
-"       --pass <phrase>\n"
-"              (SSL/SSH) Passphrase for the private key\n"
+"              Example:\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"               curl --proto-default https ftp.mozilla.org\n"
 "\n"
-"       --path-as-is\n"
-, stdout);
- fputs(
-"              Tell  curl  to  not handle sequences of /../ or /./ in the given\n"
-"              URL path. Normally curl will squash or merge them  according  to\n"
-"              standards but with this option set you tell it not to do that.\n"
+"              An unknown or unsupported  protocol  causes  error  CURLE_UNSUP-\n"
+"              PORTED_PROTOCOL (1).\n"
 "\n"
-"              (Added in 7.42.0)\n"
+"              This option does not change the default proxy protocol (http).\n"
 "\n"
-"       --post301\n"
-"              (HTTP) Tells curl to respect RFC 7230/6.4.2 and not convert POST\n"
-"              requests into GET requests when following a 301 redirection. The\n"
+"              Without  this  option curl would make a guess based on the host,\n"
 , stdout);
  fputs(
-"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
-"              the conversion by default to maintain  consistency.  However,  a\n"
-"              server  may  require  a POST to remain a POST after such a redi-\n"
-"              rection. This option is meaningful only when using  -L,  --loca-\n"
-"              tion (Added in 7.17.1)\n"
+"              see --url for details.\n"
 "\n"
-"       --post302\n"
-"              (HTTP) Tells curl to respect RFC 7230/6.4.3 and not convert POST\n"
-, stdout);
- fputs(
-"              requests into GET requests when following a 302 redirection. The\n"
-"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
-"              the conversion by default to maintain  consistency.  However,  a\n"
-"              server  may  require  a POST to remain a POST after such a redi-\n"
-"              rection. This option is meaningful only when using  -L,  --loca-\n"
-"              tion (Added in 7.19.1)\n"
+"              Added in 7.45.0.\n"
+"\n"
+"       --proto-redir <protocols>\n"
+"              Tells curl to limit what protocols it may use on redirect.  Pro-\n"
+"              tocols  denied by --proto are not overridden by this option. See\n"
+"              --proto for how protocols are represented.\n"
+"\n"
+"              Example, allow only HTTP and HTTPS on redirect:\n"
+"\n"
+"               curl --proto-redir -all,http,https http://example.com\n"
 "\n"
-"       --post303\n"
-, stdout);
- fputs(
-"              (HTTP) Tells curl to respect RFC 7230/6.4.4 and not convert POST\n"
-"              requests into GET requests when following a 303 redirection. The\n"
-"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
-"              the conversion by default to maintain  consistency.  However,  a\n"
-"              server  may  require  a POST to remain a POST after such a redi-\n"
-"              rection. This option is meaningful only when using  -L,  --loca-\n"
 , stdout);
  fputs(
-"              tion (Added in 7.26.0)\n"
+"              By default curl will allow all protocols on redirect except sev-\n"
+"              eral  disabled  for  security reasons: Since 7.19.4 FILE and SCP\n"
+"              are disabled, and since 7.40.0 SMB and SMBS are  also  disabled.\n"
+"              Specifying  all  or  +all  enables  all  protocols  on redirect,\n"
+"              including those disabled for security.\n"
+"\n"
+"              Added in 7.20.2.\n"
 "\n"
 "       --proto <protocols>\n"
-"              Tells  curl  to limit what protocols it may use in the transfer.\n"
-"              Protocols are evaluated left to right, are comma separated,  and\n"
+, stdout);
+ fputs(
+"              Tells curl to limit what protocols it may use in  the  transfer.\n"
+"              Protocols  are evaluated left to right, are comma separated, and\n"
 "              are each a protocol name or\n"
 "\n"
 "              +  Permit this protocol in addition to protocols already permit-\n"
 "                 ted (this is the default if no modifier is used).\n"
 "\n"
-"              -  Deny this protocol, removing it from the  list  of  protocols\n"
-, stdout);
- fputs(
+"              -  Deny  this  protocol,  removing it from the list of protocols\n"
 "                 already permitted.\n"
 "\n"
-"              =  Permit  only this protocol (ignoring the list already permit-\n"
-"                 ted), though subject  to  later  modification  by  subsequent\n"
+, stdout);
+ fputs(
+"              =  Permit only this protocol (ignoring the list already  permit-\n"
+"                 ted),  though  subject  to  later  modification by subsequent\n"
 "                 entries in the comma separated list.\n"
 "\n"
 "              For example:\n"
 "\n"
 "              --proto -ftps  uses the default protocols, but disables ftps\n"
 "\n"
@@ -1961,458 +2062,720 @@
 "\n"
 "              --proto =http,https\n"
 , stdout);
  fputs(
 "                             also only enables http and https\n"
 "\n"
-"              Unknown  protocols  produce  a  warning.  This allows scripts to\n"
-"              safely rely on being able to disable potentially dangerous  pro-\n"
-"              tocols,  without  relying  upon  support for that protocol being\n"
-"              built into curl to avoid an error.\n"
+"       Unknown protocols produce a warning. This allows scripts to safely rely\n"
+"       on being able to disable potentially dangerous protocols, without rely-\n"
+"       ing upon support for that protocol being built into curl  to  avoid  an\n"
+"       error.\n"
+"\n"
+"       This option can be used multiple times, in which case the effect is the\n"
+"       same as concatenating the protocols into one instance of the option.\n"
 "\n"
-"              This option can be used multiple times, in which case the effect\n"
 , stdout);
  fputs(
-"              is  the same as concatenating the protocols into one instance of\n"
-"              the option.\n"
+"       See also --proto-redir and --proto-default. Added in 7.20.2.\n"
 "\n"
-"              (Added in 7.20.2)\n"
+"       --proxy-anyauth\n"
+"              Tells curl to pick a suitable authentication method when  commu-\n"
+"              nicating  with  the  given HTTP proxy. This might cause an extra\n"
+"              request/response round-trip.\n"
 "\n"
-"       --proto-default <protocol>\n"
-"              Tells curl to use protocol for any URL missing a scheme name.\n"
+"              See also -x, --proxy and --proxy-basic and --proxy-digest. Added\n"
+"              in 7.13.2.\n"
 "\n"
-"              Example:\n"
+"       --proxy-basic\n"
+"              Tells  curl  to use HTTP Basic authentication when communicating\n"
+, stdout);
+ fputs(
+"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
+"              remote  host.  Basic  is  the default authentication method curl\n"
+"              uses with proxies.\n"
 "\n"
-"              --proto-default https ftp.mozilla.org\n"
-"                     https://ftp.mozilla.org\n"
+"              See also -x, --proxy and --proxy-anyauth and --proxy-digest.\n"
 "\n"
-"       An unknown or unsupported protocol causes error  CURLE_UNSUPPORTED_PRO-\n"
-"       TOCOL.\n"
+"       --proxy-cacert <file>\n"
+"              Same as --cacert but used in HTTPS proxy context.\n"
+"\n"
+"              See also  --proxy-capath  and  --cacert  and  --capath  and  -x,\n"
+"              --proxy. Added in 7.52.0.\n"
 "\n"
 , stdout);
  fputs(
-"       This option does not change the default proxy protocol (http).\n"
+"       --proxy-capath <dir>\n"
+"              Same as --capath but used in HTTPS proxy context.\n"
 "\n"
-"       Without  this  option  curl  would  make a guess based on the host, see\n"
-"       --url for details.\n"
+"              See  also  --proxy-cacert and -x, --proxy and --capath. Added in\n"
+"              7.52.0.\n"
 "\n"
-"       (Added in 7.45.0)\n"
+"       --proxy-cert-type <type>\n"
+"              Same as --cert-type but used in HTTPS proxy context.\n"
 "\n"
-"       --proto-redir <protocols>\n"
-"              Tells curl to limit what protocols it may use on redirect.  Pro-\n"
-"              tocols  denied by --proto are not overridden by this option. See\n"
-"              --proto for how protocols are represented.\n"
+"              Added in 7.52.0.\n"
 "\n"
-"              Example:\n"
+"       --proxy-cert <cert[:passwd]>\n"
+"              Same as -E, --cert but used in HTTPS proxy context.\n"
 "\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-ciphers <list>\n"
 , stdout);
  fputs(
-"              --proto-redir -all,http,https\n"
-"                     Allow only HTTP and HTTPS on redirect.\n"
+"              Same as --ciphers but used in HTTPS proxy context.\n"
 "\n"
-"       By default curl will allow all protocols  on  redirect  except  several\n"
-"       disabled  for security reasons: Since 7.19.4 FILE and SCP are disabled,\n"
-"       and since 7.40.0 SMB and SMBS are also disabled. Specifying all or +all\n"
-"       enables  all  protocols on redirect, including those disabled for secu-\n"
-"       rity.\n"
+"              Added in 7.52.0.\n"
 "\n"
-"       (Added in 7.20.2)\n"
+"       --proxy-crlfile <file>\n"
+"              Same as --crlfile but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-digest\n"
+"              Tells curl to use HTTP Digest authentication when  communicating\n"
+"              with the given proxy. Use --digest for enabling HTTP Digest with\n"
+"              a remote host.\n"
 "\n"
-"       --proxy-anyauth\n"
 , stdout);
  fputs(
-"              Tells curl to pick a suitable authentication method when  commu-\n"
-"              nicating  with  the  given  proxy.  This  might  cause  an extra\n"
-"              request/response round-trip. (Added in 7.13.2)\n"
+"              See also -x, --proxy and --proxy-anyauth and --proxy-basic.\n"
 "\n"
-"       --proxy-basic\n"
-"              Tells curl to use HTTP Basic authentication  when  communicating\n"
-"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
-"              remote host. Basic is the  default  authentication  method  curl\n"
+"       --proxy-header <header>\n"
+"              (HTTP) Extra header to include in the request when sending  HTTP\n"
+"              to a proxy. You may specify any number of extra headers. This is\n"
+"              the equivalent option to -H, --header but is for proxy  communi-\n"
+"              cation  only  like  in CONNECT requests when you want a separate\n"
+, stdout);
+ fputs(
+"              header sent to the proxy to what is sent to  the  actual  remote\n"
+"              host.\n"
+"\n"
+"              curl  will  make  sure  that each header you add/replace is sent\n"
+"              with the proper end-of-line marker, you should thus not add that\n"
+"              as a part of the header content: do not add newlines or carriage\n"
+"              returns, they will only mess things up for you.\n"
+"\n"
+"              Headers specified with this  option  will  not  be  included  in\n"
+, stdout);
+ fputs(
+"              requests that curl knows will not be sent to a proxy.\n"
+"\n"
+"              This  option  can  be  used multiple times to add/replace/remove\n"
+"              multiple headers.\n"
+"\n"
+"              Added in 7.37.0.\n"
+"       --proxy-insecure\n"
+"              Same as -k, --insecure but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-key-type <type>\n"
+"              Same as --key-type but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-key <key>\n"
+, stdout);
+ fputs(
+"              Same as --key but used in HTTPS proxy context.\n"
+"\n"
+"       --proxy-negotiate\n"
+"              Tells curl to use HTTP Negotiate  (SPNEGO)  authentication  when\n"
+"              communicating with the given proxy. Use --negotiate for enabling\n"
+"              HTTP Negotiate (SPNEGO) with a remote host.\n"
+"\n"
+"              See also --proxy-anyauth and --proxy-basic. Added in 7.17.1.\n"
+"\n"
+"       --proxy-ntlm\n"
+"              Tells curl to use HTTP NTLM  authentication  when  communicating\n"
+, stdout);
+ fputs(
+"              with the given proxy. Use --ntlm for enabling NTLM with a remote\n"
+"              host.\n"
+"\n"
+"              See also --proxy-negotiate and --proxy-anyauth.\n"
+"\n"
+"       --proxy-pass <phrase>\n"
+"              Same as --pass but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-service-name <name>\n"
+"              This option allows you to change  the  service  name  for  proxy\n"
+"              negotiation.\n"
+"\n"
+"              Added in 7.43.0.\n"
+"\n"
+"       --proxy-ssl-allow-beast\n"
+, stdout);
+ fputs(
+"              Same as --ssl-allow-beast but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-tlsauthtype <type>\n"
+"              Same as --tlsauthtype but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-tlspassword <string>\n"
+"              Same as --tlspassword but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-tlsuser <name>\n"
+"              Same as --tlsuser but used in HTTPS proxy context.\n"
+"\n"
+, stdout);
+ fputs(
+"              Added in 7.52.0.\n"
+"\n"
+"       --proxy-tlsv1\n"
+"              Same as -1, --tlsv1 but used in HTTPS proxy context.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       -U, --proxy-user <user:password>\n"
+"              Specify  the user name and password to use for proxy authentica-\n"
+"              tion.\n"
+"\n"
+"              If you use a Windows SSPI-enabled  curl  binary  and  do  either\n"
+"              Negotiate  or  NTLM  authentication  then  you  can tell curl to\n"
+, stdout);
+ fputs(
+"              select the user name and password from your environment by spec-\n"
+"              ifying a single colon with this option: \"-U :\".\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"       -x, --proxy [protocol://]host[:port]\n"
+"              Use the specified proxy.\n"
+"\n"
+"              The  proxy  string can be specified with a protocol:// prefix to\n"
+"              specify alternative proxy protocols. Use socks4://,  socks4a://,\n"
+, stdout);
+ fputs(
+"              socks5:// or socks5h:// to request the specific SOCKS version to\n"
+"              be used. No protocol specified, http:// and all others  will  be\n"
+"              treated as HTTP proxies. (The protocol support was added in curl\n"
+"              7.21.7)\n"
+"\n"
+"              If the port number is not specified in the proxy string,  it  is\n"
+"              assumed to be 1080.\n"
+"\n"
+"              This  option  overrides  existing environment variables that set\n"
 , stdout);
  fputs(
-"              uses with proxies.\n"
+"              the proxy to use. If there's an environment variable  setting  a\n"
+"              proxy, you can set proxy to \"\" to override it.\n"
 "\n"
-"       --proxy-digest\n"
-"              Tells  curl to use HTTP Digest authentication when communicating\n"
-"              with the given proxy. Use --digest for enabling HTTP Digest with\n"
-"              a remote host.\n"
+"              All operations that are performed over an HTTP proxy will trans-\n"
+"              parently be converted to HTTP. It means  that  certain  protocol\n"
+"              specific operations might not be available. This is not the case\n"
+"              if you can tunnel through the proxy, as one with the -p, --prox-\n"
+"              ytunnel option.\n"
 "\n"
-"       --proxy-negotiate\n"
-"              Tells  curl  to  use HTTP Negotiate (SPNEGO) authentication when\n"
-"              communicating with the given proxy. Use --negotiate for enabling\n"
 , stdout);
  fputs(
-"              HTTP Negotiate (SPNEGO) with a remote host. (Added in 7.17.1)\n"
-"\n"
-"       --proxy-ntlm\n"
-"              Tells  curl  to  use HTTP NTLM authentication when communicating\n"
-"              with the given proxy. Use --ntlm for enabling NTLM with a remote\n"
-"              host.\n"
+"              User and password that might be provided in the proxy string are\n"
+"              URL decoded by curl. This allows you to pass in special  charac-\n"
+"              ters such as @ by using %40 or pass in a colon with %3a.\n"
 "\n"
-"       --proxy-service-name <servicename>\n"
-"              This  option  allows  you  to  change the service name for proxy\n"
-"              negotiation.\n"
+"              The  proxy host can be specified the exact same way as the proxy\n"
+"              environment variables, including the protocol  prefix  (http://)\n"
+"              and the embedded user + password.\n"
 "\n"
 , stdout);
  fputs(
-"              Examples:  --proxy-negotiate   proxy-name   --proxy-service-name\n"
-"              sockd would use sockd/proxy-name.  (Added in 7.43.0).\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --proxy1.0 <proxyhost[:port]>\n"
+"       --proxy1.0 <host[:port]>\n"
 "              Use  the  specified  HTTP  1.0  proxy. If the port number is not\n"
 "              specified, it is assumed at port 1080.\n"
 "\n"
-"              The only difference between this and the HTTP proxy option  (-x,\n"
-"              --proxy), is that attempts to use CONNECT through the proxy will\n"
+"              The only difference between this and the HTTP proxy  option  -x,\n"
+"              --proxy,  is that attempts to use CONNECT through the proxy will\n"
+"              specify an HTTP 1.0 protocol instead of the default HTTP 1.1.\n"
+"\n"
 , stdout);
  fputs(
-"              specify an HTTP 1.0 protocol instead of the default HTTP 1.1.\n"
+"       -p, --proxytunnel\n"
+"              When an HTTP proxy is used -x, --proxy, this option  will  cause\n"
+"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
+"              instead of merely using it to do HTTP-like operations. The  tun-\n"
+"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
+"              requires that the proxy allows direct connect to the remote port\n"
+"              number curl wants to tunnel through to.\n"
+"\n"
+, stdout);
+ fputs(
+"              See also -x, --proxy.\n"
 "\n"
 "       --pubkey <key>\n"
-"              (SSH) Public key file name. Allows you to  provide  your  public\n"
-"              key in this separate file.\n"
+"              (SFTP SCP) Public key file name. Allows you to provide your pub-\n"
+"              lic key in this separate file.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "              (As of 7.39.0, curl attempts to automatically extract the public\n"
-"              key from the private key file, so passing this option is  gener-\n"
+"              key  from the private key file, so passing this option is gener-\n"
+"              ally not required. Note that this public key extraction requires\n"
 , stdout);
  fputs(
-"              ally not required. Note that this public key extraction requires\n"
-"              libcurl to be linked against a copy of libssh2 1.2.8  or  higher\n"
+"              libcurl  to  be linked against a copy of libssh2 1.2.8 or higher\n"
 "              that is itself linked against OpenSSL.)\n"
 "\n"
-"       -q, --disable\n"
-"              If  used  as the first parameter on the command line, the curlrc\n"
-"              config file will not be read and used. See the -K, --config  for\n"
-"              details on the default config file search path.\n"
-"\n"
-"       -Q, --quote <command>\n"
-, stdout);
- fputs(
-"              (FTP/SFTP)  Send  an arbitrary command to the remote FTP or SFTP\n"
-"              server. Quote commands are sent BEFORE the transfer takes  place\n"
-"              (just  after  the  initial PWD command in an FTP transfer, to be\n"
+"       -Q, --quote\n"
+"              (FTP SFTP) Send an arbitrary command to the remote FTP  or  SFTP\n"
+"              server.  Quote commands are sent BEFORE the transfer takes place\n"
+"              (just after the initial PWD command in an FTP  transfer,  to  be\n"
 "              exact). To make commands take place after a successful transfer,\n"
-"              prefix  them  with  a  dash '-'.  To make commands be sent after\n"
-"              curl has changed the working directory, just before the transfer\n"
 , stdout);
  fputs(
-"              command(s),  prefix  the  command  with a '+' (this is only sup-\n"
-"              ported for FTP). You may specify any number of commands. If  the\n"
-"              server returns failure for one of the commands, the entire oper-\n"
-"              ation will be aborted. You must send syntactically  correct  FTP\n"
-"              commands  as  RFC 959 defines to FTP servers, or one of the com-\n"
-"              mands listed below to SFTP servers.  This  option  can  be  used\n"
+"              prefix them with a dash '-'.  To make  commands  be  sent  after\n"
+"              curl has changed the working directory, just before the transfer\n"
+"              command(s), prefix the command with a '+'  (this  is  only  sup-\n"
+"              ported for FTP). You may specify any number of commands.\n"
+"\n"
+"              If  the  server  returns  failure  for  one of the commands, the\n"
+"              entire operation will be aborted. You  must  send  syntactically\n"
 , stdout);
  fputs(
-"              multiple  times. When speaking to an FTP server, prefix the com-\n"
-"              mand with an asterisk (*) to make curl continue even if the com-\n"
-"              mand fails as by default curl will stop at first failure.\n"
+"              correct  FTP  commands as RFC 959 defines to FTP servers, or one\n"
+"              of the commands listed below to SFTP servers.\n"
+"\n"
+"              This option can be used multiple times. When speaking to an  FTP\n"
+"              server,  prefix  the  command  with an asterisk (*) to make curl\n"
+"              continue even if the command fails as by default curl will  stop\n"
+"              at first failure.\n"
 "\n"
 "              SFTP  is a binary protocol. Unlike for FTP, curl interprets SFTP\n"
-"              quote commands itself before sending them to the  server.   File\n"
-"              names may be quoted shell-style to embed spaces or special char-\n"
 , stdout);
  fputs(
+"              quote commands itself before sending them to the  server.   File\n"
+"              names may be quoted shell-style to embed spaces or special char-\n"
 "              acters.  Following is the list of all supported SFTP quote  com-\n"
 "              mands:\n"
 "\n"
 "              chgrp group file\n"
 "                     The  chgrp command sets the group ID of the file named by\n"
 "                     the file operand to the group ID specified by  the  group\n"
+, stdout);
+ fputs(
 "                     operand. The group operand is a decimal integer group ID.\n"
 "\n"
 "              chmod mode file\n"
 "                     The  chmod  command  modifies  the  file mode bits of the\n"
-, stdout);
- fputs(
 "                     specified file. The mode operand is an octal integer mode\n"
 "                     number.\n"
 "\n"
 "              chown user file\n"
 "                     The chown command sets the owner of the file named by the\n"
 "                     file operand to the user ID specified by the  user  oper-\n"
+, stdout);
+ fputs(
 "                     and. The user operand is a decimal integer user ID.\n"
 "\n"
 "              ln source_file target_file\n"
 "                     The ln and symlink commands create a symbolic link at the\n"
-, stdout);
- fputs(
 "                     target_file location pointing to  the  source_file  loca-\n"
 "                     tion.\n"
 "\n"
 "              mkdir directory_name\n"
 "                     The  mkdir  command  creates  the  directory named by the\n"
 "                     directory_name operand.\n"
 "\n"
+, stdout);
+ fputs(
 "              pwd    The pwd command returns the absolute pathname of the cur-\n"
 "                     rent working directory.\n"
 "\n"
 "              rename source target\n"
-, stdout);
- fputs(
 "                     The rename command renames the file or directory named by\n"
 "                     the source operand to the destination path named  by  the\n"
 "                     target operand.\n"
 "\n"
 "              rm file\n"
 "                     The rm command removes the file specified by the file op-\n"
 "                     erand.\n"
 "\n"
-"              rmdir directory\n"
-"                     The rmdir command removes the directory  entry  specified\n"
 , stdout);
  fputs(
+"              rmdir directory\n"
+"                     The rmdir command removes the directory  entry  specified\n"
 "                     by the directory operand, provided it is empty.\n"
 "\n"
 "              symlink source_file target_file\n"
 "                     See ln.\n"
 "\n"
+"       --random-file <file>\n"
+"              Specify the path name to file containing what will be considered\n"
+"              as random data. The data may be used to seed the  random  engine\n"
+, stdout);
+ fputs(
+"              for SSL connections.  See also the --egd-file option.\n"
+"\n"
 "       -r, --range <range>\n"
-"              (HTTP/FTP/SFTP/FILE)  Retrieve a byte range (i.e a partial docu-\n"
+"              (HTTP  FTP SFTP FILE) Retrieve a byte range (i.e a partial docu-\n"
 "              ment) from a HTTP/1.1, FTP or  SFTP  server  or  a  local  FILE.\n"
 "              Ranges can be specified in a number of ways.\n"
 "\n"
 "              0-499     specifies the first 500 bytes\n"
 "\n"
-, stdout);
- fputs(
 "              500-999   specifies the second 500 bytes\n"
 "\n"
 "              -500      specifies the last 500 bytes\n"
 "\n"
+, stdout);
+ fputs(
 "              9500-     specifies the bytes from offset 9500 and forward\n"
 "\n"
 "              0-0,-1    specifies the first and last byte only(*)(HTTP)\n"
 "\n"
 "              100-199,500-599\n"
 "                        specifies two separate 100-byte ranges(*) (HTTP)\n"
 "\n"
 "              (*)  = NOTE that this will cause the server to reply with a mul-\n"
 "              tipart response!\n"
 "\n"
+"              Only digit characters (0-9) are valid in the 'start' and  'stop'\n"
 , stdout);
  fputs(
-"              Only digit characters (0-9) are valid in the 'start' and  'stop'\n"
 "              fields  of the 'start-stop' range syntax. If a non-digit charac-\n"
 "              ter is given in the range, the server's response will be unspec-\n"
 "              ified, depending on the server's configuration.\n"
 "\n"
 "              You  should also be aware that many HTTP/1.1 servers do not have\n"
 "              this feature enabled, so that when you attempt to get  a  range,\n"
-, stdout);
- fputs(
 "              you'll instead get the whole document.\n"
 "\n"
+, stdout);
+ fputs(
 "              FTP  and  SFTP  range  downloads only support the simple 'start-\n"
 "              stop' syntax (optionally with one of the numbers  omitted).  FTP\n"
 "              use depends on the extended FTP command SIZE.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -R, --remote-time\n"
-"              When  used,  this will make curl attempt to figure out the time-\n"
+"       --raw  (HTTP) When used, it disables all internal HTTP decoding of con-\n"
+"              tent or transfer encodings and  instead  makes  them  passed  on\n"
+"              unaltered, raw.\n"
+"\n"
 , stdout);
  fputs(
-"              stamp of the remote file, and if  that  is  available  make  the\n"
-"              local file get that same timestamp.\n"
+"              Added in 7.16.2.\n"
 "\n"
-"       --random-file <file>\n"
-"              (SSL) Specify the path name to file containing what will be con-\n"
-"              sidered as random data. The data is  used  to  seed  the  random\n"
-"              engine for SSL connections.  See also the --egd-file option.\n"
+"       -e, --referer <URL>\n"
+"              (HTTP) Sends the \"Referrer Page\" information to the HTTP server.\n"
+"              This can also be set with the -H, --header flag of course.  When\n"
+"              used  with  -L,  --location  you  can  append \";auto\" to the -e,\n"
+"              --referer URL to make curl automatically set  the  previous  URL\n"
+"              when  it  follows  a Location: header. The \";auto\" string can be\n"
+, stdout);
+ fputs(
+"              used alone, even if you don't set an initial -e, --referer.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              See also -A, --user-agent and -H, --header.\n"
+"\n"
+"       -J, --remote-header-name\n"
+"              (HTTP) This option tells the -O, --remote-name option to use the\n"
+"              server-specified   Content-Disposition   filename   instead   of\n"
+"              extracting a filename from the URL.\n"
 "\n"
-"       --raw  (HTTP) When used, it disables all internal HTTP decoding of con-\n"
 , stdout);
  fputs(
-"              tent or transfer encodings and  instead  makes  them  passed  on\n"
-"              unaltered, raw. (Added in 7.16.2)\n"
+"              If the server specifies a file name and a file  with  that  name\n"
+"              already  exists  in the current working directory it will not be\n"
+"              overwritten and an error will occur. If the server doesn't spec-\n"
+"              ify a file name then this option has no effect.\n"
+"\n"
+"              There's  no  attempt to decode %-sequences (yet) in the provided\n"
+"              file name, so this option may provide you with rather unexpected\n"
+"              file names.\n"
+"\n"
+, stdout);
+ fputs(
+"              WARNING:  Exercise  judicious  use of this option, especially on\n"
+"              Windows. A rogue server could send you the  name  of  a  DLL  or\n"
+"              other  file  that could possibly be loaded automatically by Win-\n"
+"              dows or some third party software.\n"
 "\n"
 "       --remote-name-all\n"
-"              This  option changes the default action for all given URLs to be\n"
+"              This option changes the default action for all given URLs to  be\n"
 "              dealt with as if -O, --remote-name were used for each one. So if\n"
+, stdout);
+ fputs(
 "              you want to disable that for a specific URL after --remote-name-\n"
-"              all has been used, you must  use  \"-o  -\"  or  --no-remote-name.\n"
+"              all has been used, you must use \"-o -\" or --no-remote-name.\n"
+"\n"
+"              Added in 7.19.0.\n"
+"\n"
+"       -O, --remote-name\n"
+"              Write  output to a local file named like the remote file we get.\n"
+"              (Only the file part of the remote file is used, the path is  cut\n"
+"              off.)\n"
+"\n"
+"              The  file will be saved in the current working directory. If you\n"
 , stdout);
  fputs(
-"              (Added in 7.19.0)\n"
+"              want the file saved in a  different  directory,  make  sure  you\n"
+"              change  the  current working directory before invoking curl with\n"
+"              this option.\n"
 "\n"
-"       --resolve <host:port:address>\n"
-"              Provide  a  custom  address  for  a specific host and port pair.\n"
-"              Using this, you can make the curl requests(s)  use  a  specified\n"
-"              address  and  prevent the otherwise normally resolved address to\n"
-"              be used. Consider it a sort of /etc/hosts  alternative  provided\n"
-"              on  the  command line. The port number should be the number used\n"
+"              The remote file name to use for saving  is  extracted  from  the\n"
+"              given  URL,  nothing  else,  and if it already exists it will be\n"
+"              overwritten. If you want the server to be  able  to  choose  the\n"
 , stdout);
  fputs(
-"              for the specific protocol the host will be used  for.  It  means\n"
-"              you  need several entries if you want to provide address for the\n"
-"              same host but different ports.\n"
+"              file name refer to -J, --remote-header-name which can be used in\n"
+"              addition to this option. If the server chooses a file  name  and\n"
+"              that name already exists it will not be overwritten.\n"
 "\n"
-"              The provided address set by this option will be used even if -4,\n"
-"              --ipv4 or -6, --ipv6 is set to make curl use another IP version.\n"
-"              This  option  can  be  used many times to add many host names to\n"
-"              resolve.\n"
+"              There is no URL decoding done on the file name. If it has %20 or\n"
+"              other URL encoded parts of the name, they will end up  as-is  as\n"
+"              file name.\n"
+"\n"
+"              You  may use this option as many times as the number of URLs you\n"
+, stdout);
+ fputs(
+"              have.\n"
 "\n"
-"              (Added in 7.21.3)\n"
+"       -R, --remote-time\n"
+"              When used, this will make curl attempt to figure out  the  time-\n"
+"              stamp  of  the  remote  file,  and if that is available make the\n"
+"              local file get that same timestamp.\n"
 "\n"
+"       -X, --request <command>\n"
+"              (HTTP) Specifies a custom request method to use when communicat-\n"
+"              ing  with the HTTP server.  The specified request method will be\n"
 , stdout);
  fputs(
-"       --retry <num>\n"
-"              If a transient error is returned when curl tries  to  perform  a\n"
-"              transfer,  it  will retry this number of times before giving up.\n"
-"              Setting the number to 0 makes curl do no retries (which  is  the\n"
-"              default).  Transient  error  means either: a timeout, an FTP 4xx\n"
-"              response code or an HTTP 5xx response code.\n"
+"              used instead of the method otherwise  used  (which  defaults  to\n"
+"              GET).  Read  the HTTP 1.1 specification for details and explana-\n"
+"              tions. Common additional HTTP requests include PUT  and  DELETE,\n"
+"              but related technologies like WebDAV offers PROPFIND, COPY, MOVE\n"
+"              and more.\n"
+"\n"
+"              Normally you don't need this option. All  sorts  of  GET,  HEAD,\n"
+"              POST and PUT requests are rather invoked by using dedicated com-\n"
+, stdout);
+ fputs(
+"              mand line options.\n"
+"\n"
+"              This option only changes  the  actual  word  used  in  the  HTTP\n"
+"              request,  it does not alter the way curl behaves. So for example\n"
+"              if you want to make a proper HEAD request, using  -X  HEAD  will\n"
+"              not suffice. You need to use the -I, --head option.\n"
 "\n"
-"              When curl is about to retry a transfer, it will first  wait  one\n"
+"              The  method  string  you set with -X, --request will be used for\n"
+"              all requests, which if you for example use  -L,  --location  may\n"
 , stdout);
  fputs(
-"              second  and  then for all forthcoming retries it will double the\n"
-"              waiting time until it reaches 10 minutes which then will be  the\n"
-"              delay  between  the rest of the retries.  By using --retry-delay\n"
-"              you  disable  this  exponential  backoff  algorithm.  See   also\n"
-"              --retry-max-time  to  limit  the total time allowed for retries.\n"
-"              (Added in 7.12.3)\n"
+"              cause  unintended  side-effects when curl doesn't change request\n"
+"              method according to the HTTP 30x response codes - and similar.\n"
 "\n"
+"              (FTP) Specifies a custom FTP command to use instead of LIST when\n"
+"              doing file lists with FTP.\n"
+"\n"
+"              (POP3) Specifies a custom POP3 command to use instead of LIST or\n"
+"              RETR. (Added in 7.26.0)\n"
+"\n"
+"              (IMAP) Specifies a custom IMAP command to use instead  of  LIST.\n"
 , stdout);
  fputs(
+"              (Added in 7.30.0)\n"
+"\n"
+"              (SMTP) Specifies a custom SMTP command to use instead of HELP or\n"
+"              VRFY. (Added in 7.34.0)\n"
+"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --retry-delay <seconds>\n"
-"              Make curl sleep this amount of time before  each  retry  when  a\n"
-"              transfer  has  failed  with  a  transient  error (it changes the\n"
-"              default backoff time algorithm between retries). This option  is\n"
-"              only  interesting if --retry is also used. Setting this delay to\n"
+"       --resolve <host:port:address>\n"
+"              Provide a custom address for a  specific  host  and  port  pair.\n"
+"              Using  this,  you  can make the curl requests(s) use a specified\n"
+, stdout);
+ fputs(
+"              address and prevent the otherwise normally resolved  address  to\n"
+"              be  used.  Consider it a sort of /etc/hosts alternative provided\n"
+"              on the command line. The port number should be the  number  used\n"
+"              for  the  specific  protocol the host will be used for. It means\n"
+"              you need several entries if you want to provide address for  the\n"
+"              same host but different ports.\n"
+"\n"
+, stdout);
+ fputs(
+"              The provided address set by this option will be used even if -4,\n"
+"              --ipv4 or -6, --ipv6 is set to make curl use another IP version.\n"
+"              This option can be used many times to add  many  host  names  to\n"
+"              resolve.\n"
+"\n"
+"              Added in 7.21.3.\n"
+"\n"
+"       --retry-connrefused\n"
+"              In  addition to the other conditions, consider ECONNREFUSED as a\n"
+"              transient error too for --retry. This option  is  used  together\n"
 , stdout);
  fputs(
-"              zero will make curl use the default  backoff  time.   (Added  in\n"
-"              7.12.3)\n"
+"              with --retry.\n"
 "\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       --retry-delay <seconds>\n"
+"              Make  curl  sleep  this  amount of time before each retry when a\n"
+"              transfer has failed with  a  transient  error  (it  changes  the\n"
+"              default  backoff time algorithm between retries). This option is\n"
+"              only interesting if --retry is also used. Setting this delay  to\n"
+"              zero will make curl use the default backoff time.\n"
+"\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              Added in 7.12.3.\n"
+"\n"
 "       --retry-max-time <seconds>\n"
 "              The  retry  timer  is  reset  before the first transfer attempt.\n"
 "              Retries will be done as usual (see --retry) as long as the timer\n"
 "              hasn't reached this given limit. Notice that if the timer hasn't\n"
+"              reached the limit, the request will be made and  while  perform-\n"
 , stdout);
  fputs(
-"              reached the limit, the request will be made and  while  perform-\n"
 "              ing,  it may take longer than this given time period. To limit a\n"
 "              single request's maximum time, use  -m,  --max-time.   Set  this\n"
-"              option to zero to not timeout retries. (Added in 7.12.3)\n"
+"              option to zero to not timeout retries.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -s, --silent\n"
-"              Silent  or  quiet  mode. Don't show progress meter or error mes-\n"
+"              Added in 7.12.3.\n"
+"\n"
+"       --retry <num>\n"
+"              If  a  transient  error is returned when curl tries to perform a\n"
 , stdout);
  fputs(
-"              sages.  Makes Curl mute. It will still output the data  you  ask\n"
-"              for, potentially even to the terminal/stdout unless you redirect\n"
-"              it.\n"
-"\n"
-"       --sasl-ir\n"
-"              Enable initial  response  in  SASL  authentication.   (Added  in\n"
-"              7.31.0)\n"
-"\n"
-"       --service-name <servicename>\n"
-"              This option allows you to change the service name for SPNEGO.\n"
+"              transfer, it will retry this number of times before  giving  up.\n"
+"              Setting  the  number to 0 makes curl do no retries (which is the\n"
+"              default). Transient error means either: a timeout,  an  FTP  4xx\n"
+"              response code or an HTTP 5xx response code.\n"
 "\n"
-"              Examples:    --negotiate    --service-name   sockd   would   use\n"
+"              When  curl  is about to retry a transfer, it will first wait one\n"
+"              second and then for all forthcoming retries it will  double  the\n"
 , stdout);
  fputs(
-"              sockd/server-name.  (Added in 7.43.0).\n"
+"              waiting  time until it reaches 10 minutes which then will be the\n"
+"              delay between the rest of the retries.  By  using  --retry-delay\n"
+"              you   disable  this  exponential  backoff  algorithm.  See  also\n"
+"              --retry-max-time to limit the total time allowed for retries.\n"
 "\n"
-"       -S, --show-error\n"
-"              When used with -s it makes curl show  an  error  message  if  it\n"
-"              fails.\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --ssl  (FTP,  POP3,  IMAP, SMTP) Try to use SSL/TLS for the connection.\n"
-"              Reverts to a non-secure connection if the server doesn't support\n"
-"              SSL/TLS.   See also --ftp-ssl-control and --ssl-reqd for differ-\n"
-"              ent levels of encryption required. (Added in 7.20.0)\n"
+"              Added in 7.12.3.\n"
 "\n"
+"       --sasl-ir\n"
 , stdout);
  fputs(
-"              This option was formerly known as --ftp-ssl (Added  in  7.11.0).\n"
-"              That  option  name  can  still  be used but will be removed in a\n"
-"              future version.\n"
+"              Enable initial response in SASL authentication.\n"
 "\n"
-"       --ssl-reqd\n"
-"              (FTP, POP3, IMAP, SMTP)  Require  SSL/TLS  for  the  connection.\n"
-"              Terminates the connection if the server doesn't support SSL/TLS.\n"
-"              (Added in 7.20.0)\n"
+"              Added in 7.31.0.\n"
 "\n"
-"              This option was formerly known as --ftp-ssl-reqd.\n"
+"       --service-name <name>\n"
+"              This option allows you to change the service name for SPNEGO.\n"
 "\n"
-"       --ssl-allow-beast\n"
-, stdout);
- fputs(
-"              (SSL) This option tells curl to not work around a security  flaw\n"
-"              in the SSL3 and TLS1.0 protocols known as BEAST.  If this option\n"
-"              isn't used, the SSL layer may use  workarounds  known  to  cause\n"
-"              interoperability  problems  with some older SSL implementations.\n"
-"              WARNING: this option loosens the SSL security, and by using this\n"
-"              flag you ask for exactly that.  (Added in 7.25.0)\n"
+"              Examples:   --negotiate   --service-name   sockd    would    use\n"
+"              sockd/server-name.\n"
 "\n"
-"       --ssl-no-revoke\n"
+"              Added in 7.43.0.\n"
+"       -S, --show-error\n"
+"              When used with -s, --silent, it makes curl show an error message\n"
+"              if it fails.\n"
+"       -s, --silent\n"
 , stdout);
  fputs(
-"              (WinSSL)  This  option tells curl to disable certificate revoca-\n"
-"              tion checks.  WARNING: this option loosens the SSL security, and\n"
-"              by using this flag you ask for exactly that.  (Added in 7.44.0)\n"
+"              Silent or quiet mode. Don't show progress meter  or  error  mes-\n"
+"              sages.   Makes  Curl mute. It will still output the data you ask\n"
+"              for, potentially even to the terminal/stdout unless you redirect\n"
+"              it.\n"
+"\n"
+"              See also -v, --verbose and --stderr.\n"
 "\n"
 "       --socks4 <host[:port]>\n"
 "              Use the specified SOCKS4 proxy. If the port number is not speci-\n"
-"              fied, it is assumed at port 1080. (Added in 7.15.2)\n"
+"              fied, it is assumed at port 1080.\n"
 "\n"
-"              This option overrides any previous use of -x, --proxy,  as  they\n"
 , stdout);
  fputs(
+"              This option overrides any previous use of -x, --proxy,  as  they\n"
 "              are mutually exclusive.\n"
 "\n"
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
 "              socks4 proxy with -x, --proxy using a socks4:// protocol prefix.\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              Added in 7.15.2.\n"
+"\n"
 "       --socks4a <host[:port]>\n"
 "              Use the specified SOCKS4a proxy. If the port number is not spec-\n"
-"              ified, it is assumed at port 1080. (Added in 7.18.0)\n"
-"\n"
 , stdout);
  fputs(
+"              ified, it is assumed at port 1080.\n"
+"\n"
 "              This  option  overrides any previous use of -x, --proxy, as they\n"
 "              are mutually exclusive.\n"
 "\n"
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
 "              socks4a  proxy with -x, --proxy using a socks4a:// protocol pre-\n"
 "              fix.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --socks5-hostname <host[:port]>\n"
-"              Use the specified SOCKS5 proxy (and let the  proxy  resolve  the\n"
+"              Added in 7.18.0.\n"
+"\n"
+"       --socks5-gssapi-nec\n"
 , stdout);
  fputs(
+"              As part of the GSS-API negotiation a protection mode is  negoti-\n"
+"              ated.  RFC  1961 says in section 4.3/4.4 it should be protected,\n"
+"              but the NEC  reference  implementation  does  not.   The  option\n"
+"              --socks5-gssapi-nec  allows the unprotected exchange of the pro-\n"
+"              tection mode negotiation.\n"
+"\n"
+"              Added in 7.19.4.\n"
+"\n"
+"       --socks5-gssapi-service <name>\n"
+, stdout);
+ fputs(
+"              The default service name for a socks server is rcmd/server-fqdn.\n"
+"              This option allows you to change it.\n"
+"\n"
+"              Examples:   --socks5  proxy-name  --socks5-gssapi-service  sockd\n"
+"              would use sockd/proxy-name --socks5 proxy-name  --socks5-gssapi-\n"
+"              service  sockd/real-name  would  use  sockd/real-name  for cases\n"
+"              where the proxy-name does not match the principal name.\n"
+"\n"
+"              Added in 7.19.4.\n"
+"\n"
+, stdout);
+ fputs(
+"       --socks5-hostname <host[:port]>\n"
+"              Use the specified SOCKS5 proxy (and let the  proxy  resolve  the\n"
 "              host  name).  If the port number is not specified, it is assumed\n"
-"              at port 1080. (Added in 7.18.0)\n"
+"              at port 1080.\n"
 "\n"
 "              This option overrides any previous use of -x, --proxy,  as  they\n"
 "              are mutually exclusive.\n"
 "\n"
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
+, stdout);
+ fputs(
 "              socks5 hostname proxy with -x, --proxy using a socks5h:// proto-\n"
 "              col prefix.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
-"              (This option was  previously  wrongly  documented  and  used  as\n"
-"              --socks without the number appended.)\n"
+"\n"
+"              Added in 7.18.0.\n"
 "\n"
 "       --socks5 <host[:port]>\n"
 "              Use  the  specified  SOCKS5  proxy  -  but resolve the host name\n"
 "              locally. If the port number is not specified, it is  assumed  at\n"
 "              port 1080.\n"
 "\n"
@@ -2421,893 +2784,913 @@
 "              This  option  overrides any previous use of -x, --proxy, as they\n"
 "              are mutually exclusive.\n"
 "\n"
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
 "              socks5 proxy with -x, --proxy using a socks5:// protocol prefix.\n"
 "              If this option is used several times, the last one will be used.\n"
-"              (This option was  previously  wrongly  documented  and  used  as\n"
-"              --socks without the number appended.)\n"
-"\n"
-, stdout);
- fputs(
 "              This  option (as well as --socks4) does not work with IPV6, FTPS\n"
 "              or LDAP.\n"
 "\n"
-"       --socks5-gssapi-service <servicename>\n"
-"              The default service name for a socks server is rcmd/server-fqdn.\n"
-"              This option allows you to change it.\n"
+"              Added in 7.18.0.\n"
 "\n"
-"              Examples:   --socks5  proxy-name  --socks5-gssapi-service  sockd\n"
-"              would use sockd/proxy-name --socks5 proxy-name  --socks5-gssapi-\n"
 , stdout);
  fputs(
-"              service  sockd/real-name  would  use  sockd/real-name  for cases\n"
-"              where the proxy-name does not match the principal name.   (Added\n"
-"              in 7.19.4).\n"
+"       -Y, --speed-limit <speed>\n"
+"              If a download is slower than this given speed (in bytes per sec-\n"
+"              ond)  for  speed-time seconds it gets aborted. speed-time is set\n"
+"              with -y, --speed-time and is 30 if not set.\n"
 "\n"
-"       --socks5-gssapi-nec\n"
-"              As  part of the GSS-API negotiation a protection mode is negoti-\n"
-"              ated. RFC 1961 says in section 4.3/4.4 it should  be  protected,\n"
-"              but  the  NEC  reference  implementation  does  not.  The option\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"       -y, --speed-time <seconds>\n"
+"              If a download is slower than speed-limit bytes per second during\n"
 , stdout);
  fputs(
-"              --socks5-gssapi-nec allows the unprotected exchange of the  pro-\n"
-"              tection mode negotiation. (Added in 7.19.4).\n"
+"              a speed-time period, the download gets aborted. If speed-time is\n"
+"              used, the default speed-limit will be  1  unless  set  with  -Y,\n"
+"              --speed-limit.\n"
 "\n"
-"       --stderr <file>\n"
-"              Redirect  all writes to stderr to the specified file instead. If\n"
-"              the file name is a plain '-', it is instead written to stdout.\n"
+"              This  option  controls  transfers  and thus will not affect slow\n"
+"              connects etc. If this is a concern for you, try  the  --connect-\n"
+"              timeout option.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -t, --telnet-option <OPT=val>\n"
+"       --ssl-allow-beast\n"
 , stdout);
  fputs(
-"              Pass options to the telnet protocol. Supported options are:\n"
+"              This option tells curl to not work around a security flaw in the\n"
+"              SSL3 and TLS1.0 protocols known as BEAST.  If this option  isn't\n"
+"              used,  the SSL layer may use workarounds known to cause interop-\n"
+"              erability problems with some older SSL implementations. WARNING:\n"
+"              this option loosens the SSL security, and by using this flag you\n"
+"              ask for exactly that.\n"
 "\n"
-"              TTYPE=<term> Sets the terminal type.\n"
+"              Added in 7.25.0.\n"
 "\n"
-"              XDISPLOC=<X display> Sets the X display location.\n"
+"       --ssl-no-revoke\n"
+, stdout);
+ fputs(
+"              (WinSSL) This option tells curl to disable  certificate  revoca-\n"
+"              tion checks.  WARNING: this option loosens the SSL security, and\n"
+"              by using this flag you ask for exactly that.\n"
 "\n"
-"              NEW_ENV=<var,val> Sets an environment variable.\n"
+"              Added in 7.44.0.\n"
+"\n"
+"       --ssl-reqd\n"
+"              (FTP IMAP POP3 SMTP) Require SSL/TLS for the connection.  Termi-\n"
+"              nates the connection if the server doesn't support SSL/TLS.\n"
+"\n"
+"              This option was formerly known as --ftp-ssl-reqd.\n"
 "\n"
-"       -T, --upload-file <file>\n"
-"              This transfers the specified local file to the  remote  URL.  If\n"
-"              there is no file part in the specified URL, Curl will append the\n"
 , stdout);
  fputs(
-"              local file name. NOTE that you must use a trailing / on the last\n"
-"              directory  to really prove to Curl that there is no file name or\n"
-"              curl will think that your last directory name is the remote file\n"
-"              name to use. That will most likely cause the upload operation to\n"
-"              fail. If this is used on an HTTP(S) server, the PUT command will\n"
-"              be used.\n"
+"              Added in 7.20.0.\n"
 "\n"
-"              Use  the file name \"-\" (a single dash) to use stdin instead of a\n"
+"       --ssl  (FTP  IMAP  POP3  SMTP)  Try  to use SSL/TLS for the connection.\n"
+"              Reverts to a non-secure connection if the server doesn't support\n"
+"              SSL/TLS.   See also --ftp-ssl-control and --ssl-reqd for differ-\n"
+"              ent levels of encryption required.\n"
+"\n"
+"              This option was formerly known as --ftp-ssl (Added  in  7.11.0).\n"
+"              That  option  name  can  still  be used but will be removed in a\n"
 , stdout);
  fputs(
-"              given file.  Alternately, the file name \".\"  (a  single  period)\n"
-"              may  be  specified  instead  of \"-\" to use stdin in non-blocking\n"
-"              mode to  allow  reading  server  output  while  stdin  is  being\n"
-"              uploaded.\n"
+"              future version.\n"
+"\n"
+"              Added in 7.20.0.\n"
 "\n"
-"              You can specify one -T for each URL on the command line. Each -T\n"
-"              + URL pair specifies what to upload and to where. curl also sup-\n"
+"       -2, --sslv2\n"
+"              (SSL) Forces curl to use SSL version 2 when negotiating  with  a\n"
+"              remote  SSL  server.  Sometimes curl is built without SSLv2 sup-\n"
+"              port. SSLv2 is widely considered insecure (see RFC 6176).\n"
+"\n"
+"              See also --http1.1 and --http2. -2, --sslv2  requires  that  the\n"
+"              underlying  libcurl  was built to support TLS. This option over-\n"
 , stdout);
  fputs(
-"              ports \"globbing\" of the -T argument, meaning that you can upload\n"
-"              multiple files to a single URL by using the  same  URL  globbing\n"
-"              style supported in the URL, like this:\n"
+"              rides -3, --sslv3 and -1, --tlsv1 and --tlsv1.1 and --tlsv1.2.\n"
 "\n"
-"              curl -T \"{file1,file2}\" http://www.example.com\n"
+"       -3, --sslv3\n"
+"              (SSL) Forces curl to use SSL version 3 when negotiating  with  a\n"
+"              remote  SSL  server.  Sometimes curl is built without SSLv3 sup-\n"
+"              port. SSLv3 is widely considered insecure (see RFC 7568).\n"
 "\n"
-"              or even\n"
+"              See also --http1.1 and --http2. -3, --sslv3  requires  that  the\n"
+"              underlying  libcurl  was built to support TLS. This option over-\n"
+, stdout);
+ fputs(
+"              rides -2, --sslv2 and -1, --tlsv1 and --tlsv1.1 and --tlsv1.2.\n"
 "\n"
-"              curl -T \"img[1-1000].png\" ftp://ftp.example.com/upload/\n"
+"       --stderr\n"
+"              Redirect all writes to stderr to the specified file instead.  If\n"
+"              the file name is a plain '-', it is instead written to stdout.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              See also -v, --verbose and -s, --silent.\n"
 "\n"
+"       --tcp-fastopen\n"
+"              Enable use of TCP Fast Open (RFC7413).\n"
+"\n"
+"              Added in 7.49.0.\n"
+"\n"
+, stdout);
+ fputs(
 "       --tcp-nodelay\n"
 "              Turn  on the TCP_NODELAY option. See the curl_easy_setopt(3) man\n"
+"              page for details about this option.\n"
+"\n"
+"              Since 7.50.2, curl sets this option by default and you  need  to\n"
+"              explictitly switch it off if you don't want it on.\n"
+"\n"
+"              Added in 7.11.2.\n"
+"\n"
+"       -t, --telnet-option <opt=val>\n"
+"              Pass options to the telnet protocol. Supported options are:\n"
+"\n"
+"              TTYPE=<term> Sets the terminal type.\n"
+"\n"
 , stdout);
  fputs(
-"              page for details about this option. (Added in 7.11.2)\n"
+"              XDISPLOC=<X display> Sets the X display location.\n"
 "\n"
-"       --tcp-fastopen\n"
-"              Enable use of TCP Fast Open (RFC7413). (Added in 7.49.0)\n"
+"              NEW_ENV=<var,val> Sets an environment variable.\n"
 "\n"
 "       --tftp-blksize <value>\n"
 "              (TFTP) Set TFTP BLKSIZE option (must be >512). This is the block\n"
 "              size that curl will try to use when transferring data to or from\n"
 "              a TFTP server. By default 512 bytes will be used.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"              Added in 7.20.0.\n"
+"\n"
 , stdout);
  fputs(
-"              (Added in 7.20.0)\n"
 "       --tftp-no-options\n"
 "              (TFTP) Tells curl not to send TFTP options requests.\n"
 "\n"
-"              This option improves interop with some legacy  servers  that  do\n"
-"              not  acknowledge  or  properly implement TFTP options. When this\n"
+"              This  option  improves  interop with some legacy servers that do\n"
+"              not acknowledge or properly implement TFTP  options.  When  this\n"
 "              option is used --tftp-blksize is ignored.\n"
 "\n"
-"              (Added in 7.48.0)\n"
+"              Added in 7.48.0.\n"
+"\n"
+"       -z, --time-cond <time>\n"
+"              (HTTP  FTP) Request a file that has been modified later than the\n"
+, stdout);
+ fputs(
+"              given time and date, or one that has been modified  before  that\n"
+"              time.  The <date expression> can be all sorts of date strings or\n"
+"              if it doesn't match any internal ones, it is taken as a filename\n"
+"              and  tries  to  get  the  modification  date (mtime) from <file>\n"
+"              instead. See the curl_getdate(3) man pages for  date  expression\n"
+"              details.\n"
 "\n"
-"       --tlsauthtype <authtype>\n"
-"              Set TLS  authentication  type.  Currently,  the  only  supported\n"
+"              Start the date expression with a dash (-) to make it request for\n"
 , stdout);
  fputs(
-"              option  is  \"SRP\",  for  TLS-SRP  (RFC  5054).  If --tlsuser and\n"
-"              --tlspassword are specified but --tlsauthtype is not, then  this\n"
-"              option defaults to \"SRP\".  (Added in 7.21.4)\n"
+"              a document that is older than the given date/time, default is  a\n"
+"              document that is newer than the specified date/time.\n"
 "\n"
-"       --tlspassword <password>\n"
-"              Set  password  for use with the TLS authentication method speci-\n"
-"              fied with --tlsauthtype. Requires that --tlsuser  also  be  set.\n"
-"              (Added in 7.21.4)\n"
+"              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --tlsuser <user>\n"
+"       --tlsauthtype <type>\n"
+"              Set  TLS  authentication  type.  Currently,  the  only supported\n"
+"              option is \"SRP\",  for  TLS-SRP  (RFC  5054).  If  --tlsuser  and\n"
+"              --tlspassword  are specified but --tlsauthtype is not, then this\n"
 , stdout);
  fputs(
+"              option defaults to \"SRP\".\n"
+"\n"
+"              Added in 7.21.4.\n"
+"\n"
+"       --tlspassword\n"
+"              Set password for use with the TLS authentication  method  speci-\n"
+"              fied with --tlsauthtype. Requires that --tlsuser also be set.\n"
+"\n"
+"              Added in 7.21.4.\n"
+"       --tlsuser <name>\n"
 "              Set  username  for use with the TLS authentication method speci-\n"
-"              fied with --tlsauthtype. Requires  that  --tlspassword  also  be\n"
-"              set.  (Added in 7.21.4)\n"
+"              fied with --tlsauthtype. Requires  that  --tlspassword  also  is\n"
+"              set.\n"
+"\n"
+, stdout);
+ fputs(
+"              Added in 7.21.4.\n"
 "\n"
 "       --tlsv1.0\n"
-"              (SSL) Forces curl to use TLS version 1.0 when negotiating with a\n"
-"              remote TLS server.  (Added in 7.34.0)\n"
+"              (TLS)  Forces  curl  to use TLS version 1.0 when connecting to a\n"
+"              remote TLS server.\n"
+"\n"
+"              Added in 7.34.0.\n"
 "\n"
 "       --tlsv1.1\n"
-"              (SSL) Forces curl to use TLS version 1.1 when negotiating with a\n"
-"              remote TLS server.  (Added in 7.34.0)\n"
+"              (TLS) Forces curl to use TLS version 1.1 when  connecting  to  a\n"
+"              remote TLS server.\n"
+"\n"
+"              Added in 7.34.0.\n"
+"\n"
+"       --tlsv1.2\n"
+"              (TLS)  Forces  curl  to use TLS version 1.2 when connecting to a\n"
+"              remote TLS server.\n"
 "\n"
 , stdout);
  fputs(
-"       --tlsv1.2\n"
-"              (SSL) Forces curl to use TLS version 1.2 when negotiating with a\n"
-"              remote TLS server.  (Added in 7.34.0)\n"
+"              Added in 7.34.0.\n"
+"\n"
+"       --tlsv1.3\n"
+"              (TLS) Forces curl to use TLS version 1.3 when  connecting  to  a\n"
+"              remote TLS server.\n"
+"\n"
+"              Note that TLS 1.3 is only supported by a subset of TLS backends.\n"
+"              At the time of writing this, those are BoringSSL and NSS only.\n"
+"\n"
+"              Added in 7.52.0.\n"
+"\n"
+"       -1, --tlsv1\n"
+"              (SSL) Tells curl to use TLS version 1.x when negotiating with  a\n"
+, stdout);
+ fputs(
+"              remote TLS server. That means TLS version 1.0, 1.1 or 1.2.\n"
+"\n"
+"              See  also  --http1.1  and --http2. -1, --tlsv1 requires that the\n"
+"              underlying libcurl was built to support TLS. This  option  over-\n"
+"              rides --tlsv1.1 and --tlsv1.2 and --tlsv1.3.\n"
 "\n"
 "       --tr-encoding\n"
 "              (HTTP) Request a compressed Transfer-Encoding response using one\n"
-"              of  the  algorithms curl supports, and uncompress the data while\n"
+"              of the algorithms curl supports, and uncompress the  data  while\n"
 "              receiving it.\n"
 "\n"
-"              (Added in 7.21.6)\n"
+, stdout);
+ fputs(
+"              Added in 7.21.6.\n"
+"\n"
+"       --trace-ascii <file>\n"
+"              Enables  a  full  trace  dump of all incoming and outgoing data,\n"
+"              including descriptive information, to the given output file. Use\n"
+"              \"-\" as filename to have the output sent to stdout.\n"
+"\n"
+"              This is very similar to --trace, but leaves out the hex part and\n"
+"              only shows the ASCII part of the dump. It makes  smaller  output\n"
+, stdout);
+ fputs(
+"              that might be easier to read for untrained humans.\n"
+"\n"
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"              This option overrides --trace and -v, --verbose.\n"
+"\n"
+"       --trace-time\n"
+"              Prepends  a  time  stamp to each trace or verbose line that curl\n"
+"              displays.\n"
+"\n"
+"              Added in 7.14.0.\n"
 "\n"
 "       --trace <file>\n"
 "              Enables a full trace dump of all  incoming  and  outgoing  data,\n"
 , stdout);
  fputs(
 "              including descriptive information, to the given output file. Use\n"
 "              \"-\" as filename to have the output sent to stdout.  Use  \"%\"  as\n"
 "              filename to have the output sent to stderr.\n"
 "\n"
-"              This option overrides previous uses of -v, --verbose or --trace-\n"
-"              ascii.\n"
-"\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --trace-ascii <file>\n"
+"              This option overrides -v, --verbose and --trace-ascii.\n"
+"\n"
+"       --unix-socket <path>\n"
+"              (HTTP) Connect through this Unix domain socket, instead of using\n"
 , stdout);
  fputs(
-"              Enables a full trace dump of all  incoming  and  outgoing  data,\n"
-"              including descriptive information, to the given output file. Use\n"
-"              \"-\" as filename to have the output sent to stdout.\n"
+"              the network.\n"
 "\n"
-"              This is very similar to --trace, but leaves out the hex part and\n"
-"              only  shows  the ASCII part of the dump. It makes smaller output\n"
-"              that might be easier to read for untrained humans.\n"
+"              Added in 7.40.0.\n"
 "\n"
+"       -T, --upload-file <file>\n"
+"              This transfers the specified local file to the  remote  URL.  If\n"
+"              there is no file part in the specified URL, curl will append the\n"
+"              local file name. NOTE that you must use a trailing / on the last\n"
+"              directory  to really prove to Curl that there is no file name or\n"
+"              curl will think that your last directory name is the remote file\n"
 , stdout);
  fputs(
-"              This option overrides previous uses of -v, --verbose or --trace.\n"
-"              If this option is used several times, the last one will be used.\n"
+"              name to use. That will most likely cause the upload operation to\n"
+"              fail. If this is used on an HTTP(S) server, the PUT command will\n"
+"              be used.\n"
 "\n"
-"       --trace-time\n"
-"              Prepends a time stamp to each trace or verbose  line  that  curl\n"
-"              displays.  (Added in 7.14.0)\n"
+"              Use  the file name \"-\" (a single dash) to use stdin instead of a\n"
+"              given file.  Alternately, the file name \".\"  (a  single  period)\n"
+"              may  be  specified  instead  of \"-\" to use stdin in non-blocking\n"
+"              mode to  allow  reading  server  output  while  stdin  is  being\n"
+, stdout);
+ fputs(
+"              uploaded.\n"
 "\n"
-"       --unix-socket <path>\n"
-"              (HTTP) Connect through this Unix domain socket, instead of using\n"
-"              the network. (Added in 7.40.0)\n"
+"              You  can  specify one -T, --upload-file for each URL on the com-\n"
+"              mand line. Each -T, --upload-file + URL pair specifies  what  to\n"
+"              upload  and  to  where. curl also supports \"globbing\" of the -T,\n"
+"              --upload-file argument, meaning that  you  can  upload  multiple\n"
+"              files  to a single URL by using the same URL globbing style sup-\n"
+"              ported in the URL, like this:\n"
+"\n"
+, stdout);
+ fputs(
+"               curl --upload-file \"{file1,file2}\" http://www.example.com\n"
+"\n"
+"              or even\n"
+"\n"
+"               curl -T \"img[1-1000].png\" ftp://ftp.example.com/upload/\n"
+"\n"
+"              When uploading to an SMTP server: the uploaded data  is  assumed\n"
+"              to be RFC 5322 formatted. It has to feature the necessary set of\n"
+"              headers and mail body formatted correctly by the  user  as  curl\n"
+"              will not transcode nor encode it further in any way.\n"
+"\n"
+"       --url <url>\n"
+, stdout);
+ fputs(
+"              Specify  a  URL  to  fetch. This option is mostly handy when you\n"
+"              want to specify URL(s) in a config file.\n"
+"\n"
+"              If the given URL is missing a scheme name (such as \"http://\"  or\n"
+"              \"ftp://\"  etc) then curl will make a guess based on the host. If\n"
+"              the outermost sub-domain name matches  DICT,  FTP,  IMAP,  LDAP,\n"
+"              POP3  or  SMTP  then  that protocol will be used, otherwise HTTP\n"
+, stdout);
+ fputs(
+"              will be used. Since 7.45.0 guessing can be disabled by setting a\n"
+"              default protocol, see --proto-default for details.\n"
+"\n"
+"              This  option  may  be used any number of times. To control where\n"
+"              this URL is written, use the -o, --output or the  -O,  --remote-\n"
+"              name options.\n"
+"\n"
+"       -B, --use-ascii\n"
+"              (FTP  LDAP)  Enable  ASCII  transfer.  For FTP, this can also be\n"
+, stdout);
+ fputs(
+"              enforced by using an URL that ends with \";type=A\".  This  option\n"
+"              causes data sent to stdout to be in text mode for win32 systems.\n"
+"\n"
+"       -A, --user-agent <name>\n"
+"              (HTTP) Specify the User-Agent string to send to the HTTP server.\n"
+"              To encode blanks in the string, surround the string with  single\n"
+"              quote  marks.  This can also be set with the -H, --header option\n"
+"              of course.\n"
 "\n"
-"       -u, --user <user:password>\n"
 , stdout);
  fputs(
+"              If this option is used several times, the last one will be used.\n"
+"\n"
+"       -u, --user <user:password>\n"
 "              Specify the user name and password to use for server authentica-\n"
 "              tion. Overrides -n, --netrc and --netrc-optional.\n"
 "\n"
 "              If  you  simply  specify  the  user name, curl will prompt for a\n"
 "              password.\n"
 "\n"
 "              The user name and passwords are split up  on  the  first  colon,\n"
+, stdout);
+ fputs(
 "              which  makes  it impossible to use a colon in the user name with\n"
 "              this option. The password can, still.\n"
 "\n"
-, stdout);
- fputs(
 "              When using Kerberos V5 with a Windows based  server  you  should\n"
 "              include  the  Windows domain name in the user name, in order for\n"
 "              the server to successfully obtain  a  Kerberos  Ticket.  If  you\n"
 "              don't then the initial authentication handshake may fail.\n"
 "\n"
-"              When  using  NTLM,  the user name can be specified simply as the\n"
-"              user name, without the domain, if there is a single  domain  and\n"
 , stdout);
  fputs(
+"              When  using  NTLM,  the user name can be specified simply as the\n"
+"              user name, without the domain, if there is a single  domain  and\n"
 "              forest in your setup for example.\n"
 "\n"
 "              To  specify  the domain name use either Down-Level Logon Name or\n"
 "              UPN (User Principal Name) formats. For example, EXAMPLE\\user and\n"
 "              user@example.com respectively.\n"
 "\n"
 "              If  you  use a Windows SSPI-enabled curl binary and perform Ker-\n"
-"              beros V5, Negotiate, NTLM or Digest authentication then you  can\n"
-"              tell  curl  to select the user name and password from your envi-\n"
 , stdout);
  fputs(
+"              beros V5, Negotiate, NTLM or Digest authentication then you  can\n"
+"              tell  curl  to select the user name and password from your envi-\n"
 "              ronment by specifying a single colon with this option: \"-u :\".\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -U, --proxy-user <user:password>\n"
-"              Specify the user name and password to use for proxy  authentica-\n"
-"              tion.\n"
+"       -v, --verbose\n"
+"              Makes curl verbose during the operation.  Useful  for  debugging\n"
+"              and  seeing  what's  going  on \"under the hood\". A line starting\n"
+, stdout);
+ fputs(
+"              with '>' means \"header data\" sent by  curl,  '<'  means  \"header\n"
+"              data\"  received  by  curl  that is hidden in normal cases, and a\n"
+"              line starting with '*' means additional info provided by curl.\n"
 "\n"
-"              If  you  use  a  Windows  SSPI-enabled curl binary and do either\n"
-"              Negotiate or NTLM authentication  then  you  can  tell  curl  to\n"
+"              If you only want HTTP headers in the output, -i, --include might\n"
+"              be the option you're looking for.\n"
+"\n"
+"              If  you think this option still doesn't give you enough details,\n"
 , stdout);
  fputs(
-"              select the user name and password from your environment by spec-\n"
-"              ifying a single colon with this option: \"-U :\".\n"
+"              consider using --trace or --trace-ascii instead.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
+"              Use -s, --silent to make curl really quiet.\n"
 "\n"
-"       --url <URL>\n"
-"              Specify a URL to fetch. This option is  mostly  handy  when  you\n"
-"              want to specify URL(s) in a config file.\n"
+"              See also  -i,  --include.  This  option  overrides  --trace  and\n"
+"              --trace-ascii.\n"
+"\n"
+"       -V, --version\n"
+"              Displays information about curl and the libcurl version it uses.\n"
+"              The  first  line  includes the full version of curl, libcurl and\n"
+"              other 3rd party libraries linked with the executable.\n"
+"\n"
+, stdout);
+ fputs(
+"              The second line (starts with \"Protocols:\") shows  all  protocols\n"
+"              that libcurl reports to support.\n"
+"\n"
+"              The third line (starts with \"Features:\") shows specific features\n"
+"              libcurl reports to offer. Available features include:\n"
+"\n"
+"              IPv6   You can use IPv6 with this.\n"
+"\n"
+"              krb4   Krb4 for FTP is supported.\n"
+"\n"
+"              SSL    SSL versions of various protocols are supported, such  as\n"
+, stdout);
+ fputs(
+"                     HTTPS, FTPS, POP3S and so on.\n"
+"\n"
+"              libz   Automatic  decompression of compressed files over HTTP is\n"
+"                     supported.\n"
+"\n"
+"              NTLM   NTLM authentication is supported.\n"
+"\n"
+"              Debug  This curl uses a libcurl built with Debug.  This  enables\n"
+"                     more  error-tracking  and memory debugging etc. For curl-\n"
+"                     developers only!\n"
+"\n"
+"              AsynchDNS\n"
+, stdout);
+ fputs(
+"                     This curl uses asynchronous name  resolves.  Asynchronous\n"
+"                     name  resolves can be done using either the c-ares or the\n"
+"                     threaded resolver backends.\n"
+"\n"
+"              SPNEGO SPNEGO authentication is supported.\n"
+"\n"
+"              Largefile\n"
+"                     This curl supports transfers of large files, files larger\n"
+"                     than 2GB.\n"
+"\n"
+"              IDN    This curl supports IDN - international domain names.\n"
 "\n"
-"              If  the given URL is missing a scheme name (such as \"http://\" or\n"
+"              GSS-API\n"
 , stdout);
  fputs(
-"              \"ftp://\" etc) then curl will make a guess based on the host.  If\n"
-"              the  outermost  sub-domain  name  matches DICT, FTP, IMAP, LDAP,\n"
-"              POP3 or SMTP then that protocol will  be  used,  otherwise  HTTP\n"
-"              will be used. Since 7.45.0 guessing can be disabled by setting a\n"
-"              default protocol, see --proto-default for details.\n"
+"                     GSS-API is supported.\n"
 "\n"
-"              This option may be used any number of times.  To  control  where\n"
-, stdout);
- fputs(
-"              this  URL  is written, use the -o, --output or the -O, --remote-\n"
-"              name options.\n"
-"       -v, --verbose\n"
-"              Be more  verbose/talkative  during  the  operation.  Useful  for\n"
-"              debugging  and  seeing  what's going on \"under the hood\". A line\n"
-"              starting with '>' means \"header data\" sent by  curl,  '<'  means\n"
-"              \"header  data\"  received by curl that is hidden in normal cases,\n"
-, stdout);
- fputs(
-"              and a line starting with '*' means additional info  provided  by\n"
-"              curl.\n"
+"              SSPI   SSPI is supported.\n"
 "\n"
-"              Note  that  if  you  only  want  HTTP headers in the output, -i,\n"
-"              --include might be the option you're looking for.\n"
+"              TLS-SRP\n"
+"                     SRP  (Secure Remote Password) authentication is supported\n"
+"                     for TLS.\n"
 "\n"
-"              If you think this option still doesn't give you enough  details,\n"
-"              consider using --trace or --trace-ascii instead.\n"
+"              HTTP2  HTTP/2 support has been built-in.\n"
 "\n"
-"              This option overrides previous uses of --trace-ascii or --trace.\n"
+"              UnixSockets\n"
+"                     Unix sockets support is provided.\n"
 "\n"
+"              HTTPS-proxy\n"
+"                     This curl is built to support HTTPS proxy.\n"
+"\n"
+"              Metalink\n"
 , stdout);
  fputs(
-"              Use -s, --silent to make curl quiet.\n"
+"                     This curl supports Metalink (both version 3  and  4  (RFC\n"
+"                     5854)),  which  describes  mirrors and hashes.  curl will\n"
+"                     use mirrors for failover if there are errors (such as the\n"
+"                     file or server not being available).\n"
 "\n"
+"              PSL    PSL  is  short for Public Suffix List and means that this\n"
+"                     curl has been built with  knowledge  about  \"public  suf-\n"
+"                     fixes\".\n"
+"\n"
+, stdout);
+ fputs(
 "       -w, --write-out <format>\n"
 "              Make curl display information on stdout after a completed trans-\n"
 "              fer. The format is a string that may contain  plain  text  mixed\n"
 "              with  any  number of variables. The format can be specified as a\n"
 "              literal \"string\", or you can have curl read the  format  from  a\n"
 "              file  with  \"@filename\" and to tell curl to read the format from\n"
-, stdout);
- fputs(
 "              stdin you write \"@-\".\n"
 "\n"
+, stdout);
+ fputs(
 "              The variables present in the output format will  be  substituted\n"
 "              by  the  value or text that curl thinks fit, as described below.\n"
 "              All variables are specified as %{variable_name} and to output  a\n"
 "              normal  % you just write them as %%. You can output a newline by\n"
 "              using \\n, a carriage return with \\r and a tab space with \\t.\n"
 "\n"
+"              NOTE: The %-symbol is a special symbol in the win32-environment,\n"
 , stdout);
  fputs(
-"              NOTE: The %-symbol is a special symbol in the win32-environment,\n"
 "              where  all  occurrences  of  %  must  be doubled when using this\n"
 "              option.\n"
 "\n"
 "              The variables available are:\n"
 "\n"
 "              content_type   The Content-Type of the  requested  document,  if\n"
 "                             there was any.\n"
 "\n"
 "              filename_effective\n"
 "                             The  ultimate  filename  that curl writes out to.\n"
+"                             This is only meaningful if curl is told to  write\n"
 , stdout);
  fputs(
-"                             This is only meaningful if curl is told to  write\n"
-"                             to  a  file  with  the  --remote-name or --output\n"
-"                             option. It's most useful in combination with  the\n"
-"                             --remote-header-name option. (Added in 7.26.0)\n"
+"                             to  a  file  with  the  -O,  --remote-name or -o,\n"
+"                             --output option. It's most useful in  combination\n"
+"                             with  the -J, --remote-header-name option. (Added\n"
+"                             in 7.26.0)\n"
 "\n"
 "              ftp_entry_path The initial path curl ended up in when logging on\n"
 "                             to the remote FTP server. (Added in 7.15.4)\n"
 "\n"
 , stdout);
  fputs(
 "              http_code      The numerical response code that was found in the\n"
-"                             last  retrieved  HTTP(S)  or  FTP(s) transfer. In\n"
-"                             7.18.2 the alias response_code was added to  show\n"
+"                             last retrieved HTTP(S)  or  FTP(s)  transfer.  In\n"
+"                             7.18.2  the alias response_code was added to show\n"
 "                             the same info.\n"
 "\n"
-"              http_connect   The  numerical  code  that  was found in the last\n"
-"                             response  (from  a  proxy)  to  a  curl   CONNECT\n"
+"              http_connect   The numerical code that was  found  in  the  last\n"
+"                             response   (from  a  proxy)  to  a  curl  CONNECT\n"
 "                             request. (Added in 7.12.4)\n"
 "\n"
 , stdout);
  fputs(
 "              http_version   The  http  version  that  was  effectively  used.\n"
 "                             (Added in 7.50.0)\n"
 "\n"
-"              local_ip       The IP address of  the  local  end  of  the  most\n"
-"                             recently  done connection - can be either IPv4 or\n"
+"              local_ip       The  IP  address  of  the  local  end of the most\n"
+"                             recently done connection - can be either IPv4  or\n"
 "                             IPv6 (Added in 7.29.0)\n"
 "\n"
-"              local_port     The local port number of the most  recently  done\n"
+"              local_port     The  local  port number of the most recently done\n"
 "                             connection (Added in 7.29.0)\n"
 "\n"
 , stdout);
  fputs(
-"              num_connects   Number  of new connects made in the recent trans-\n"
+"              num_connects   Number of new connects made in the recent  trans-\n"
 "                             fer. (Added in 7.12.3)\n"
 "\n"
-"              num_redirects  Number of redirects that  were  followed  in  the\n"
+"              num_redirects  Number  of  redirects  that  were followed in the\n"
 "                             request. (Added in 7.12.3)\n"
 "\n"
-"              redirect_url   When  an HTTP request was made without -L to fol-\n"
+"              redirect_url   When an HTTP request was made without -L to  fol-\n"
 "                             low redirects, this variable will show the actual\n"
 , stdout);
  fputs(
-"                             URL  a  redirect  would  take  you  to. (Added in\n"
+"                             URL a redirect  would  take  you  to.  (Added  in\n"
 "                             7.18.2)\n"
 "\n"
-"              remote_ip      The remote IP address of the most  recently  done\n"
+"              remote_ip      The  remote  IP address of the most recently done\n"
 "                             connection - can be either IPv4 or IPv6 (Added in\n"
 "                             7.29.0)\n"
 "\n"
-"              remote_port    The remote port number of the most recently  done\n"
+"              remote_port    The  remote port number of the most recently done\n"
 "                             connection (Added in 7.29.0)\n"
 "\n"
 , stdout);
  fputs(
+"              scheme         The URL scheme (sometimes called  protocol)  that\n"
+"                             was effectively used (Added in 7.52.0)\n"
+"\n"
 "              size_download  The total amount of bytes that were downloaded.\n"
 "\n"
 "              size_header    The total amount of bytes of the downloaded head-\n"
 "                             ers.\n"
 "\n"
 "              size_request   The total amount of bytes that were sent  in  the\n"
 "                             HTTP request.\n"
 "\n"
+, stdout);
+ fputs(
 "              size_upload    The total amount of bytes that were uploaded.\n"
 "\n"
 "              speed_download The average download speed that curl measured for\n"
-, stdout);
- fputs(
 "                             the complete download. Bytes per second.\n"
 "\n"
 "              speed_upload   The average upload speed that curl  measured  for\n"
 "                             the complete upload. Bytes per second.\n"
 "\n"
 "              ssl_verify_result\n"
 "                             The  result of the SSL peer certificate verifica-\n"
+, stdout);
+ fputs(
 "                             tion that was requested. 0 means the verification\n"
 "                             was successful. (Added in 7.19.0)\n"
 "\n"
-, stdout);
- fputs(
 "              time_appconnect\n"
 "                             The  time,  in  seconds,  it  took from the start\n"
 "                             until the SSL/SSH/etc  connect/handshake  to  the\n"
 "                             remote host was completed. (Added in 7.19.0)\n"
 "\n"
 "              time_connect   The  time,  in  seconds,  it  took from the start\n"
+, stdout);
+ fputs(
 "                             until the TCP connect  to  the  remote  host  (or\n"
 "                             proxy) was completed.\n"
 "\n"
-, stdout);
- fputs(
 "              time_namelookup\n"
 "                             The  time,  in  seconds,  it  took from the start\n"
 "                             until the name resolving was completed.\n"
 "\n"
 "              time_pretransfer\n"
 "                             The time, in seconds,  it  took  from  the  start\n"
 "                             until  the file transfer was just about to begin.\n"
-"                             This includes all pre-transfer commands and nego-\n"
 , stdout);
  fputs(
+"                             This includes all pre-transfer commands and nego-\n"
 "                             tiations that are specific to the particular pro-\n"
 "                             tocol(s) involved.\n"
 "\n"
 "              time_redirect  The time, in seconds, it took for all redirection\n"
 "                             steps  include  name lookup, connect, pretransfer\n"
 "                             and transfer before  the  final  transaction  was\n"
-"                             started.  time_redirect shows the complete execu-\n"
 , stdout);
  fputs(
+"                             started.  time_redirect shows the complete execu-\n"
 "                             tion time for multiple  redirections.  (Added  in\n"
 "                             7.12.3)\n"
 "\n"
 "              time_starttransfer\n"
 "                             The  time,  in  seconds,  it  took from the start\n"
 "                             until the first byte was just about to be  trans-\n"
 "                             ferred.  This  includes time_pretransfer and also\n"
-"                             the time  the  server  needed  to  calculate  the\n"
 , stdout);
  fputs(
+"                             the time  the  server  needed  to  calculate  the\n"
 "                             result.\n"
 "\n"
 "              time_total     The  total time, in seconds, that the full opera-\n"
 "                             tion lasted. The time will be displayed with mil-\n"
 "                             lisecond resolution.\n"
 "\n"
 "              url_effective  The URL that was fetched last. This is most mean-\n"
 "                             ingful if you've told curl  to  follow  location:\n"
-"                             headers.\n"
-"\n"
-, stdout);
- fputs(
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       -x, --proxy <[protocol://][user:password@]proxyhost[:port]>\n"
-"              Use the specified proxy.\n"
-"\n"
-"              The  proxy  string can be specified with a protocol:// prefix to\n"
-"              specify alternative proxy protocols. Use socks4://,  socks4a://,\n"
-"              socks5:// or socks5h:// to request the specific SOCKS version to\n"
-, stdout);
- fputs(
-"              be used. No protocol specified, http:// and all others  will  be\n"
-"              treated as HTTP proxies. (The protocol support was added in curl\n"
-"              7.21.7)\n"
-"\n"
-"              If the port number is not specified in the proxy string,  it  is\n"
-"              assumed to be 1080.\n"
-"\n"
-"              This  option  overrides  existing environment variables that set\n"
-"              the proxy to use. If there's an environment variable  setting  a\n"
-, stdout);
- fputs(
-"              proxy, you can set proxy to \"\" to override it.\n"
-"\n"
-"              All operations that are performed over an HTTP proxy will trans-\n"
-"              parently be converted to HTTP. It means  that  certain  protocol\n"
-"              specific operations might not be available. This is not the case\n"
-"              if you can tunnel through the proxy, as one with the -p, --prox-\n"
-"              ytunnel option.\n"
-"\n"
-"              User and password that might be provided in the proxy string are\n"
-, stdout);
- fputs(
-"              URL decoded by curl. This allows you to pass in special  charac-\n"
-"              ters such as @ by using %40 or pass in a colon with %3a.\n"
-"\n"
-"              The  proxy host can be specified the exact same way as the proxy\n"
-"              environment variables, including the protocol  prefix  (http://)\n"
-"              and the embedded user + password.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       -X, --request <command>\n"
-, stdout);
- fputs(
-"              (HTTP) Specifies a custom request method to use when communicat-\n"
-"              ing with the HTTP server.  The specified request method will  be\n"
-"              used  instead  of  the  method otherwise used (which defaults to\n"
-"              GET). Read the HTTP 1.1 specification for details  and  explana-\n"
-"              tions.  Common  additional HTTP requests include PUT and DELETE,\n"
-"              but related technologies like WebDAV offers PROPFIND, COPY, MOVE\n"
-"              and more.\n"
-"\n"
-, stdout);
- fputs(
-"              Normally  you  don't  need  this option. All sorts of GET, HEAD,\n"
-"              POST and PUT requests are rather invoked by using dedicated com-\n"
-"              mand line options.\n"
-"\n"
-"              This  option  only  changes  the  actual  word  used in the HTTP\n"
-"              request, it does not alter the way curl behaves. So for  example\n"
-"              if  you  want  to make a proper HEAD request, using -X HEAD will\n"
-"              not suffice. You need to use the -I, --head option.\n"
-"\n"
-, stdout);
- fputs(
-"              The method string you set with -X will be used for all requests,\n"
-"              which if you for example use -L, --location may cause unintended\n"
-"              side-effects when curl doesn't change request  method  according\n"
-"              to the HTTP 30x response codes - and similar.\n"
-"\n"
-"              (FTP) Specifies a custom FTP command to use instead of LIST when\n"
-"              doing file lists with FTP.\n"
-"\n"
-"              (POP3) Specifies a custom POP3 command to use instead of LIST or\n"
 , stdout);
  fputs(
-"              RETR. (Added in 7.26.0)\n"
-"\n"
-"              (IMAP)  Specifies  a custom IMAP command to use instead of LIST.\n"
-"              (Added in 7.30.0)\n"
-"\n"
-"              (SMTP) Specifies a custom SMTP command to use instead of HELP or\n"
-"              VRFY. (Added in 7.34.0)\n"
+"                             headers.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --xattr\n"
 "              When  saving  output  to a file, this option tells curl to store\n"
-, stdout);
- fputs(
 "              certain file metadata in extended  file  attributes.  Currently,\n"
 "              the URL is stored in the xdg.origin.url attribute and, for HTTP,\n"
 "              the content type is stored in the mime_type  attribute.  If  the\n"
-"              file  system  does not support extended attributes, a warning is\n"
-"              issued.\n"
-"\n"
-"       -y, --speed-time <time>\n"
-"              If a download is slower than speed-limit bytes per second during\n"
-, stdout);
- fputs(
-"              a speed-time period, the download gets aborted. If speed-time is\n"
-"              used, the default speed-limit will be 1 unless set with -Y.\n"
-"\n"
-"              This option controls transfers and thus  will  not  affect  slow\n"
-"              connects  etc.  If this is a concern for you, try the --connect-\n"
-"              timeout option.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       -Y, --speed-limit <speed>\n"
-, stdout);
- fputs(
-"              If a download is slower than this given speed (in bytes per sec-\n"
-"              ond)  for  speed-time seconds it gets aborted. speed-time is set\n"
-"              with -y and is 30 if not set.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       -z, --time-cond <date expression>|<file>\n"
-"              (HTTP/FTP) Request a file that has been modified later than  the\n"
-"              given  time  and date, or one that has been modified before that\n"
-, stdout);
- fputs(
-"              time. The <date expression> can be all sorts of date strings  or\n"
-"              if it doesn't match any internal ones, it is taken as a filename\n"
-"              and tries to get  the  modification  date  (mtime)  from  <file>\n"
-"              instead.  See  the curl_getdate(3) man pages for date expression\n"
-"              details.\n"
-"\n"
-"              Start the date expression with a dash (-) to make it request for\n"
-"              a  document that is older than the given date/time, default is a\n"
-, stdout);
- fputs(
-"              document that is newer than the specified date/time.\n"
-"\n"
-"              If this option is used several times, the last one will be used.\n"
-"\n"
-"       -h, --help\n"
-"              Usage help. This lists all current command line options  with  a\n"
-"              short description.\n"
-"\n"
-"       -M, --manual\n"
-"              Manual. Display the huge help text.\n"
-"\n"
-"       -V, --version\n"
-"              Displays information about curl and the libcurl version it uses.\n"
-, stdout);
- fputs(
-"              The  first  line  includes the full version of curl, libcurl and\n"
-"              other 3rd party libraries linked with the executable.\n"
-"\n"
-"              The second line (starts with \"Protocols:\") shows  all  protocols\n"
-"              that libcurl reports to support.\n"
-"\n"
-"              The third line (starts with \"Features:\") shows specific features\n"
-"              libcurl reports to offer. Available features include:\n"
-"\n"
-"              IPv6   You can use IPv6 with this.\n"
-"\n"
-, stdout);
- fputs(
-"              krb4   Krb4 for FTP is supported.\n"
-"\n"
-"              SSL    SSL versions of various protocols are supported, such  as\n"
-"                     HTTPS, FTPS, POP3S and so on.\n"
-"\n"
-"              libz   Automatic  decompression of compressed files over HTTP is\n"
-"                     supported.\n"
-"\n"
-"              NTLM   NTLM authentication is supported.\n"
-"\n"
-"              Debug  This curl uses a libcurl built with Debug.  This  enables\n"
 , stdout);
  fputs(
-"                     more  error-tracking  and memory debugging etc. For curl-\n"
-"                     developers only!\n"
-"\n"
-"              AsynchDNS\n"
-"                     This curl uses asynchronous name  resolves.  Asynchronous\n"
-"                     name  resolves can be done using either the c-ares or the\n"
-"                     threaded resolver backends.\n"
-"\n"
-"              SPNEGO SPNEGO authentication is supported.\n"
-"\n"
-"              Largefile\n"
-, stdout);
- fputs(
-"                     This curl supports transfers of large files, files larger\n"
-"                     than 2GB.\n"
-"\n"
-"              IDN    This curl supports IDN - international domain names.\n"
-"\n"
-"              GSS-API\n"
-"                     GSS-API is supported.\n"
-"\n"
-"              SSPI   SSPI is supported.\n"
-"\n"
-"              TLS-SRP\n"
-"                     SRP  (Secure Remote Password) authentication is supported\n"
-"                     for TLS.\n"
-"\n"
-"              HTTP2  HTTP/2 support has been built-in.\n"
-"\n"
-, stdout);
- fputs(
-"              Metalink\n"
-"                     This curl supports Metalink (both version 3  and  4  (RFC\n"
-"                     5854)),  which  describes  mirrors and hashes.  curl will\n"
-"                     use mirrors for failover if there are errors (such as the\n"
-"                     file or server not being available).\n"
+"              file  system  does not support extended attributes, a warning is\n"
+"              issued.\n"
 "\n"
 "FILES\n"
 "       ~/.curlrc\n"
 "              Default config file, see -K, --config for details.\n"
 "\n"
 "ENVIRONMENT\n"
 "       The environment variables can be specified in lower case or upper case.\n"
-, stdout);
- fputs(
 "       The lower case version has precedence. http_proxy is an exception as it\n"
 "       is only available in lower case.\n"
 "\n"
-"       Using  an  environment variable to set the proxy has the same effect as\n"
-"       using the --proxy option.\n"
+"       Using an environment variable to set the proxy has the same  effect  as\n"
+, stdout);
+ fputs(
+"       using the -x, --proxy option.\n"
 "\n"
 "       http_proxy [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for HTTP.\n"
 "       HTTPS_PROXY [protocol://]<host>[:port]\n"
 "              Sets the proxy server to use for HTTPS.\n"
 "\n"
 "       [url-protocol]_PROXY [protocol://]<host>[:port]\n"
+"              Sets  the proxy server to use for [url-protocol], where the pro-\n"
+"              tocol is a protocol that curl supports and  as  specified  in  a\n"
 , stdout);
  fputs(
-"              Sets the proxy server to use for [url-protocol], where the  pro-\n"
-"              tocol  is  a  protocol  that curl supports and as specified in a\n"
 "              URL. FTP, FTPS, POP3, IMAP, SMTP, LDAP etc.\n"
 "\n"
 "       ALL_PROXY [protocol://]<host>[:port]\n"
-"              Sets the proxy server to use if no  protocol-specific  proxy  is\n"
+"              Sets  the  proxy  server to use if no protocol-specific proxy is\n"
 "              set.\n"
 "\n"
 "       NO_PROXY <comma-separated list of hosts>\n"
-"              list  of  host names that shouldn't go through any proxy. If set\n"
-, stdout);
- fputs(
+"              list of host names that shouldn't go through any proxy.  If  set\n"
 "              to a asterisk '*' only, it matches all hosts.\n"
 "\n"
 "PROXY PROTOCOL PREFIXES\n"
-"       Since curl version 7.21.7, the proxy string may  be  specified  with  a\n"
+"       Since  curl  version  7.21.7,  the proxy string may be specified with a\n"
+, stdout);
+ fputs(
 "       protocol:// prefix to specify alternative proxy protocols.\n"
 "\n"
-"       If  no  protocol  is  specified  in  the  proxy string or if the string\n"
-"       doesn't match a supported one, the proxy will be  treated  as  an  HTTP\n"
+"       If no protocol is specified in  the  proxy  string  or  if  the  string\n"
+"       doesn't  match  a  supported  one, the proxy will be treated as an HTTP\n"
 "       proxy.\n"
 "\n"
 "       The supported proxy protocol prefixes are as follows:\n"
 "\n"
 "       socks4://\n"
-, stdout);
- fputs(
 "              Makes it the equivalent of --socks4\n"
 "\n"
 "       socks4a://\n"
 "              Makes it the equivalent of --socks4a\n"
 "\n"
 "       socks5://\n"
+, stdout);
+ fputs(
 "              Makes it the equivalent of --socks5\n"
 "\n"
 "       socks5h://\n"
 "              Makes it the equivalent of --socks5-hostname\n"
 "\n"
 "EXIT CODES\n"
-"       There  are  a  bunch  of  different error codes and their corresponding\n"
-"       error messages that may appear during bad conditions. At  the  time  of\n"
+"       There are a bunch of different  error  codes  and  their  corresponding\n"
+"       error  messages  that  may appear during bad conditions. At the time of\n"
 "       this writing, the exit codes are:\n"
 "\n"
-, stdout);
- fputs(
 "       1      Unsupported protocol. This build of curl has no support for this\n"
 "              protocol.\n"
 "\n"
 "       2      Failed to initialize.\n"
 "\n"
+, stdout);
+ fputs(
 "       3      URL malformed. The syntax was not correct.\n"
 "\n"
-"       4      A feature or option that  was  needed  to  perform  the  desired\n"
-"              request  was  not  enabled  or was explicitly disabled at build-\n"
-"              time. To make curl able to do this, you  probably  need  another\n"
+"       4      A  feature  or  option  that  was  needed to perform the desired\n"
+"              request was not enabled or was  explicitly  disabled  at  build-\n"
+"              time.  To  make  curl able to do this, you probably need another\n"
 "              build of libcurl!\n"
 "\n"
-, stdout);
- fputs(
-"       5      Couldn't  resolve  proxy.  The  given  proxy  host  could not be\n"
+"       5      Couldn't resolve proxy.  The  given  proxy  host  could  not  be\n"
 "              resolved.\n"
 "\n"
+, stdout);
+ fputs(
 "       6      Couldn't resolve host. The given remote host was not resolved.\n"
 "\n"
 "       7      Failed to connect to host.\n"
 "\n"
 "       8      Weird server reply. The server sent data curl couldn't parse.\n"
 "\n"
-"       9      FTP access denied. The server denied login or denied  access  to\n"
-"              the  particular  resource or directory you wanted to reach. Most\n"
-, stdout);
- fputs(
-"              often you tried to change to a directory that doesn't  exist  on\n"
+"       9      FTP  access  denied. The server denied login or denied access to\n"
+"              the particular resource or directory you wanted to  reach.  Most\n"
+"              often  you  tried to change to a directory that doesn't exist on\n"
 "              the server.\n"
 "\n"
-"       11     FTP  weird PASS reply. Curl couldn't parse the reply sent to the\n"
+, stdout);
+ fputs(
+"       11     FTP weird PASS reply. Curl couldn't parse the reply sent to  the\n"
 "              PASS request.\n"
 "\n"
-"       13     FTP weird PASV reply, Curl couldn't parse the reply sent to  the\n"
+"       13     FTP  weird PASV reply, Curl couldn't parse the reply sent to the\n"
 "              PASV request.\n"
 "\n"
-"       14     FTP  weird  227  format.  Curl  couldn't  parse the 227-line the\n"
+"       14     FTP weird 227 format.  Curl  couldn't  parse  the  227-line  the\n"
 "              server sent.\n"
 "\n"
+"       15     FTP  can't  get host. Couldn't resolve the host IP we got in the\n"
+"              227-line.\n"
+"\n"
 , stdout);
  fputs(
-"       15     FTP can't get host. Couldn't resolve the host IP we got  in  the\n"
-"              227-line.\n"
-"\n"
-"       17     FTP  couldn't  set  binary.  Couldn't  change transfer method to\n"
+"       17     FTP couldn't set binary.  Couldn't  change  transfer  method  to\n"
 "              binary.\n"
 "\n"
 "       18     Partial file. Only a part of the file was transferred.\n"
 "\n"
-"       19     FTP couldn't download/access the given file, the RETR (or  simi-\n"
+"       19     FTP  couldn't download/access the given file, the RETR (or simi-\n"
 "              lar) command failed.\n"
 "\n"
 "       21     FTP quote error. A quote command returned error from the server.\n"
+"       22     HTTP page not retrieved. The requested  url  was  not  found  or\n"
 , stdout);
  fputs(
-"       22     HTTP  page  not  retrieved.  The  requested url was not found or\n"
-"              returned another error with the HTTP error  code  being  400  or\n"
+"              returned  another  error  with  the HTTP error code being 400 or\n"
 "              above. This return code only appears if -f, --fail is used.\n"
 "\n"
-"       23     Write  error.  Curl couldn't write data to a local filesystem or\n"
+"       23     Write error. Curl couldn't write data to a local  filesystem  or\n"
 "              similar.\n"
 "\n"
-"       25     FTP couldn't STOR file. The server denied  the  STOR  operation,\n"
+"       25     FTP  couldn't  STOR  file. The server denied the STOR operation,\n"
 "              used for FTP uploading.\n"
 "\n"
-, stdout);
- fputs(
 "       26     Read error. Various reading problems.\n"
 "\n"
 "       27     Out of memory. A memory allocation request failed.\n"
 "\n"
-"       28     Operation  timeout.  The  specified  time-out period was reached\n"
+, stdout);
+ fputs(
+"       28     Operation timeout. The specified  time-out  period  was  reached\n"
 "              according to the conditions.\n"
 "\n"
-"       30     FTP PORT failed. The PORT command failed. Not  all  FTP  servers\n"
-"              support  the  PORT  command,  try  doing  a  transfer using PASV\n"
+"       30     FTP  PORT  failed.  The PORT command failed. Not all FTP servers\n"
+"              support the PORT  command,  try  doing  a  transfer  using  PASV\n"
 "              instead!\n"
 "\n"
-, stdout);
- fputs(
-"       31     FTP couldn't use REST. The REST command failed. This command  is\n"
+"       31     FTP  couldn't use REST. The REST command failed. This command is\n"
 "              used for resumed FTP transfers.\n"
 "\n"
 "       33     HTTP range error. The range \"command\" didn't work.\n"
 "\n"
+, stdout);
+ fputs(
 "       34     HTTP post error. Internal post-request generation error.\n"
 "\n"
 "       35     SSL connect error. The SSL handshaking failed.\n"
 "\n"
-"       36     FTP  bad  download  resume. Couldn't continue an earlier aborted\n"
+"       36     FTP bad download resume. Couldn't continue  an  earlier  aborted\n"
 "              download.\n"
 "\n"
-, stdout);
- fputs(
 "       37     FILE couldn't read file. Failed to open the file. Permissions?\n"
 "\n"
 "       38     LDAP cannot bind. LDAP bind operation failed.\n"
 "\n"
 "       39     LDAP search failed.\n"
 "\n"
 "       41     Function not found. A required LDAP function was not found.\n"
 "\n"
+, stdout);
+ fputs(
 "       42     Aborted by callback. An application told curl to abort the oper-\n"
 "              ation.\n"
 "\n"
 "       43     Internal error. A function was called with a bad parameter.\n"
 "\n"
-, stdout);
- fputs(
-"       45     Interface  error.  A  specified  outgoing interface could not be\n"
+"       45     Interface error. A specified outgoing  interface  could  not  be\n"
 "              used.\n"
 "\n"
 "       47     Too many redirects. When following redirects, curl hit the maxi-\n"
 "              mum amount.\n"
 "\n"
-"       48     Unknown  option  specified  to  libcurl. This indicates that you\n"
-"              passed a weird option to curl that was passed on to libcurl  and\n"
+"       48     Unknown option specified to libcurl.  This  indicates  that  you\n"
+, stdout);
+ fputs(
+"              passed  a weird option to curl that was passed on to libcurl and\n"
 "              rejected. Read up in the manual!\n"
 "\n"
 "       49     Malformed telnet option.\n"
 "\n"
-, stdout);
- fputs(
 "       51     The peer's SSL certificate or SSH MD5 fingerprint was not OK.\n"
 "\n"
-"       52     The  server  didn't  reply anything, which here is considered an\n"
+"       52     The server didn't reply anything, which here  is  considered  an\n"
 "              error.\n"
 "\n"
 "       53     SSL crypto engine not found.\n"
 "\n"
 "       54     Cannot set SSL crypto engine as default.\n"
 "\n"
 "       55     Failed sending network data.\n"
 "\n"
+, stdout);
+ fputs(
 "       56     Failure in receiving network data.\n"
 "\n"
 "       58     Problem with the local certificate.\n"
 "\n"
 "       59     Couldn't use specified SSL cipher.\n"
 "\n"
-, stdout);
- fputs(
-"       60     Peer certificate cannot be authenticated with known CA  certifi-\n"
+"       60     Peer  certificate cannot be authenticated with known CA certifi-\n"
 "              cates.\n"
 "\n"
 "       61     Unrecognized transfer encoding.\n"
 "\n"
 "       62     Invalid LDAP URL.\n"
 "\n"
 "       63     Maximum file size exceeded.\n"
 "\n"
 "       64     Requested FTP SSL level failed.\n"
 "\n"
 "       65     Sending the data requires a rewind that failed.\n"
 "\n"
+, stdout);
+ fputs(
 "       66     Failed to initialise SSL Engine.\n"
 "\n"
-"       67     The  user  name,  password, or similar was not accepted and curl\n"
+"       67     The user name, password, or similar was not  accepted  and  curl\n"
 "              failed to log in.\n"
 "\n"
-, stdout);
- fputs(
 "       68     File not found on TFTP server.\n"
 "\n"
 "       69     Permission problem on TFTP server.\n"
 "\n"
 "       70     Out of disk space on TFTP server.\n"
 "\n"
@@ -3316,54 +3699,54 @@
 "       72     Unknown TFTP transfer ID.\n"
 "\n"
 "       73     File already exists (TFTP).\n"
 "\n"
 "       74     No such user (TFTP).\n"
 "\n"
+, stdout);
+ fputs(
 "       75     Character conversion failed.\n"
 "\n"
 "       76     Character conversion functions required.\n"
 "\n"
 "       77     Problem with reading the SSL CA cert (path? access rights?).\n"
 "\n"
-, stdout);
- fputs(
 "       78     The resource referenced in the URL does not exist.\n"
 "\n"
 "       79     An unspecified error occurred during the SSH session.\n"
 "\n"
 "       80     Failed to shut down the SSL connection.\n"
 "\n"
-"       82     Could not load CRL file,  missing  or  wrong  format  (added  in\n"
+"       82     Could  not  load  CRL  file,  missing  or wrong format (added in\n"
 "              7.19.0).\n"
 "\n"
+, stdout);
+ fputs(
 "       83     Issuer check failed (added in 7.19.0).\n"
 "\n"
 "       84     The FTP PRET command failed\n"
 "\n"
 "       85     RTSP: mismatch of CSeq numbers\n"
 "\n"
 "       86     RTSP: mismatch of Session Identifiers\n"
 "\n"
-, stdout);
- fputs(
 "       87     unable to parse FTP file list\n"
 "\n"
 "       88     FTP chunk callback reported error\n"
 "\n"
 "       89     No connection available, the session will be queued\n"
 "\n"
 "       90     SSL public key does not matched pinned public key\n"
 "\n"
+, stdout);
+ fputs(
 "       XX     More error codes will appear here in future releases. The exist-\n"
 "              ing ones are meant to never change.\n"
 "\n"
 "AUTHORS / CONTRIBUTORS\n"
-"       Daniel Stenberg is the main author, but the whole list of  contributors\n"
-, stdout);
- fputs(
+"       Daniel  Stenberg is the main author, but the whole list of contributors\n"
 "       is found in the separate THANKS file.\n"
 "\n"
 "WWW\n"
 "       https://curl.haxx.se\n"
 "\n"
 "FTP\n"
@@ -3372,227 +3755,227 @@
 "SEE ALSO\n"
 "       ftp(1), wget(1)\n"
 "\n"
 "LATEST VERSION\n"
 "\n"
 "  You always find news about what's going on as well as the latest versions\n"
+, stdout);
+ fputs(
 "  from the curl web pages, located at:\n"
 "\n"
 "        https://curl.haxx.se\n"
 "\n"
 "SIMPLE USAGE\n"
 "\n"
 "  Get the main page from Netscape's web-server:\n"
 "\n"
 "        curl http://www.netscape.com/\n"
 "\n"
-, stdout);
- fputs(
 "  Get the README file the user's home directory at funet's ftp-server:\n"
 "\n"
 "        curl ftp://ftp.funet.fi/README\n"
 "\n"
 "  Get a web page from a server using port 8000:\n"
 "\n"
 "        curl http://www.weirdserver.com:8000/\n"
 "\n"
 "  Get a directory listing of an FTP site:\n"
 "\n"
 "        curl ftp://cool.haxx.se/\n"
 "\n"
+, stdout);
+ fputs(
 "  Get the definition of curl from a dictionary:\n"
 "\n"
 "        curl dict://dict.org/m:curl\n"
 "\n"
 "  Fetch two documents at once:\n"
 "\n"
 "        curl ftp://cool.haxx.se/ http://www.weirdserver.com:8000/\n"
 "\n"
-, stdout);
- fputs(
 "  Get a file off an FTPS server:\n"
 "\n"
 "        curl ftps://files.are.secure.com/secrets.txt\n"
 "\n"
 "  or use the more appropriate FTPS way to get the same file:\n"
 "\n"
 "        curl --ftp-ssl ftp://files.are.secure.com/secrets.txt\n"
 "\n"
 "  Get a file from an SSH server using SFTP:\n"
 "\n"
 "        curl -u username sftp://example.com/etc/issue\n"
 "\n"
+, stdout);
+ fputs(
 "  Get a file from an SSH server using SCP using a private key\n"
 "  (not password-protected) to authenticate:\n"
 "\n"
 "        curl -u username: --key ~/.ssh/id_rsa \\\n"
-, stdout);
- fputs(
 "             scp://example.com/~/file.txt\n"
 "\n"
 "  Get a file from an SSH server using SCP using a private key\n"
 "  (password-protected) to authenticate:\n"
 "\n"
 "        curl -u username: --key ~/.ssh/id_rsa --pass private_key_password \\\n"
 "             scp://example.com/~/file.txt\n"
 "\n"
 "  Get the main page from an IPv6 web server:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl \"http://[2001:1890:1112:1::20]/\"\n"
 "\n"
 "  Get a file from an SMB server:\n"
 "\n"
 "        curl -u \"domain\\username:passwd\" smb://server.example.com/share/file.txt\n"
 "\n"
 "DOWNLOAD TO A FILE\n"
 "\n"
-, stdout);
- fputs(
 "  Get a web page and store in a local file with a specific name:\n"
 "\n"
 "        curl -o thatpage.html http://www.netscape.com/\n"
 "\n"
 "  Get a web page and store in a local file, make the local file get the name\n"
 "  of the remote document (if no file name part is specified in the URL, this\n"
 "  will fail):\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -O http://www.netscape.com/index.html\n"
 "\n"
 "  Fetch two files and store them with their remote names:\n"
 "\n"
 "        curl -O www.haxx.se/index.html -O curl.haxx.se/download.html\n"
 "\n"
 "USING PASSWORDS\n"
 "\n"
 " FTP\n"
 "\n"
-, stdout);
- fputs(
 "   To ftp files using name+passwd, include them in the URL like:\n"
 "\n"
 "        curl ftp://name:passwd@machine.domain:port/full/path/to/file\n"
 "\n"
 "   or specify them with the -u flag like\n"
 "\n"
 "        curl -u name:passwd ftp://machine.domain:port/full/path/to/file\n"
 "\n"
 " FTPS\n"
 "\n"
+, stdout);
+ fputs(
 "   It is just like for FTP, but you may also want to specify and use\n"
 "   SSL-specific options for certificates etc.\n"
 "\n"
 "   Note that using FTPS:// as prefix is the \"implicit\" way as described in the\n"
-, stdout);
- fputs(
 "   standards while the recommended \"explicit\" way is done by using FTP:// and\n"
 "   the --ftp-ssl option.\n"
 "\n"
 " SFTP / SCP\n"
 "\n"
 "   This is similar to FTP, but you can use the --key option to specify a\n"
 "   private key to use instead of a password. Note that the private key may\n"
+, stdout);
+ fputs(
 "   itself be protected by a password that is unrelated to the login password\n"
 "   of the remote system; this password is specified using the --pass option.\n"
 "   Typically, curl will automatically extract the public key from the private\n"
-, stdout);
- fputs(
 "   key file, but in cases where curl does not have the proper library support,\n"
 "   a matching public key file must be specified using the --pubkey option.\n"
 "\n"
 " HTTP\n"
 "\n"
 "   Curl also supports user and password in HTTP URLs, thus you can pick a file\n"
 "   like:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl http://name:passwd@machine.domain/full/path/to/file\n"
 "\n"
 "   or specify user and password separately like in\n"
 "\n"
 "        curl -u name:passwd http://machine.domain/full/path/to/file\n"
 "\n"
-, stdout);
- fputs(
 "   HTTP offers many different methods of authentication and curl supports\n"
 "   several: Basic, Digest, NTLM and Negotiate (SPNEGO). Without telling which\n"
 "   method to use, curl defaults to Basic. You can also ask curl to pick the\n"
 "   most secure ones out of the ones that the server accepts for the given URL,\n"
+, stdout);
+ fputs(
 "   by using --anyauth.\n"
 "\n"
 "   NOTE! According to the URL specification, HTTP URLs can not contain a user\n"
 "   and password, so that style will not work when using curl via a proxy, even\n"
-, stdout);
- fputs(
 "   though curl allows it at other times. When using a proxy, you _must_ use\n"
 "   the -u style for user and password.\n"
 "\n"
 " HTTPS\n"
 "\n"
 "   Probably most commonly used with private certificates, as explained below.\n"
 "\n"
 "PROXY\n"
 "\n"
 " curl supports both HTTP and SOCKS proxy servers, with optional authentication.\n"
-" It does not have special support for FTP proxy servers since there are no\n"
-" standards for those, but it can still be made to work with many of them. You\n"
 , stdout);
  fputs(
+" It does not have special support for FTP proxy servers since there are no\n"
+" standards for those, but it can still be made to work with many of them. You\n"
 " can also use both HTTP and SOCKS proxies to transfer files to and from FTP\n"
 " servers.\n"
 "\n"
 " Get an ftp file using an HTTP proxy named my-proxy that uses port 888:\n"
 "\n"
 "        curl -x my-proxy:888 ftp://ftp.leachsite.com/README\n"
 "\n"
 " Get a file from an HTTP server that requires user and password, using the\n"
 " same proxy as above:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -u user:passwd -x my-proxy:888 http://www.get.this/\n"
 "\n"
 " Some proxies require special authentication. Specify by using -U as above:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -U user:passwd -x my-proxy:888 http://www.get.this/\n"
 "\n"
 " A comma-separated list of hosts and domains which do not use the proxy can\n"
 " be specified as:\n"
 "\n"
 "        curl --noproxy localhost,get.this -x my-proxy:888 http://www.get.this/\n"
 "\n"
 " If the proxy is specified with --proxy1.0 instead of --proxy or -x, then\n"
+, stdout);
+ fputs(
 " curl will use HTTP/1.0 instead of HTTP/1.1 for any CONNECT attempts.\n"
 "\n"
 " curl also supports SOCKS4 and SOCKS5 proxies with --socks4 and --socks5.\n"
 "\n"
-, stdout);
- fputs(
 " See also the environment variables Curl supports that offer further proxy\n"
 " control.\n"
 "\n"
 " Most FTP proxy servers are set up to appear as a normal FTP server from the\n"
 " client's perspective, with special commands to select the remote FTP server.\n"
 " curl supports the -u, -Q and --ftp-account options that can be used to\n"
+, stdout);
+ fputs(
 " set up transfers through many FTP proxies. For example, a file can be\n"
 " uploaded to a remote FTP server using a Blue Coat FTP proxy with the\n"
 " options:\n"
 "\n"
-, stdout);
- fputs(
 "   curl -u \"Remote-FTP-Username@remote.ftp.server Proxy-Username:Remote-Pass\" \\\n"
 "    --ftp-account Proxy-Password --upload-file local-file \\\n"
 "    ftp://my-ftp.proxy.server:21/remote/upload/path/\n"
 "\n"
 " See the manual for your FTP proxy to determine the form it expects to set up\n"
 " transfers, and curl's -v option to see exactly what curl is sending.\n"
 "\n"
+, stdout);
+ fputs(
 "RANGES\n"
 "\n"
 "  HTTP 1.1 introduced byte-ranges. Using this, a client can request\n"
 "  to get only one or more subparts of a specified document. Curl supports\n"
-, stdout);
- fputs(
 "  this with the -r flag.\n"
 "\n"
 "  Get the first 100 bytes of a document:\n"
 "\n"
 "        curl -r 0-99 http://www.get.this/\n"
 "\n"
@@ -3600,73 +3983,73 @@
 "\n"
 "        curl -r -500 http://www.get.this/\n"
 "\n"
 "  Curl also supports simple ranges for FTP files as well. Then you can only\n"
 "  specify start and stop position.\n"
 "\n"
+, stdout);
+ fputs(
 "  Get the first 100 bytes of a document using FTP:\n"
 "\n"
 "        curl -r 0-99 ftp://www.get.this/README\n"
 "\n"
 "UPLOADING\n"
 "\n"
 " FTP / FTPS / SFTP / SCP\n"
 "\n"
 "  Upload all data on stdin to a specified server:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -T - ftp://ftp.upload.com/myfile\n"
 "\n"
 "  Upload data from a specified file, login with user and password:\n"
 "\n"
 "        curl -T uploadfile -u user:passwd ftp://ftp.upload.com/myfile\n"
 "\n"
 "  Upload a local file to the remote site, and use the local file name at the remote\n"
 "  site too:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -T uploadfile -u user:passwd ftp://ftp.upload.com/\n"
 "\n"
 "  Upload a local file to get appended to the remote file:\n"
 "\n"
 "        curl -T localfile -a ftp://ftp.upload.com/remotefile\n"
 "\n"
-, stdout);
- fputs(
 "  Curl also supports ftp upload through a proxy, but only if the proxy is\n"
 "  configured to allow that kind of tunneling. If it does, you can run curl in\n"
 "  a fashion similar to:\n"
 "\n"
 "        curl --proxytunnel -x proxy:port -T localfile ftp.upload.com\n"
 "\n"
 "SMB / SMBS\n"
 "\n"
 "        curl -T file.txt -u \"domain\\username:passwd\" \n"
+, stdout);
+ fputs(
 "         smb://server.example.com/share/\n"
 "\n"
 " HTTP\n"
 "\n"
 "  Upload all data on stdin to a specified HTTP site:\n"
 "\n"
 "        curl -T - http://www.upload.com/myfile\n"
 "\n"
-, stdout);
- fputs(
 "  Note that the HTTP server must have been configured to accept PUT before\n"
 "  this can be done successfully.\n"
 "\n"
 "  For other ways to do HTTP data upload, see the POST section below.\n"
 "\n"
 "VERBOSE / DEBUG\n"
 "\n"
 "  If curl fails where it isn't supposed to, if the servers don't let you in,\n"
 "  if you can't understand the responses: use the -v flag to get verbose\n"
-"  fetching. Curl will output lots of info and what it sends and receives in\n"
-"  order to let the user see all client-server interaction (but it won't show\n"
 , stdout);
  fputs(
+"  fetching. Curl will output lots of info and what it sends and receives in\n"
+"  order to let the user see all client-server interaction (but it won't show\n"
 "  you the actual data).\n"
 "\n"
 "        curl -v ftp://ftp.upload.com/\n"
 "\n"
 "  To get even more details and information on what curl does, try using the\n"
 "  --trace or --trace-ascii options with a given file name to log to, like\n"
@@ -3674,468 +4057,468 @@
 "\n"
 "        curl --trace trace.txt www.haxx.se\n"
 "\n"
 "\n"
 "DETAILED INFORMATION\n"
 "\n"
-"  Different protocols provide different ways of getting detailed information\n"
-"  about specific files/documents. To get curl to show detailed information\n"
 , stdout);
  fputs(
+"  Different protocols provide different ways of getting detailed information\n"
+"  about specific files/documents. To get curl to show detailed information\n"
 "  about a single file, you should use -I/--head option. It displays all\n"
 "  available info on a single file for HTTP and FTP. The HTTP information is a\n"
 "  lot more extensive.\n"
 "\n"
 "  For HTTP, you can get the header information (the same as -I would show)\n"
 "  shown before the data by using -i/--include. Curl understands the\n"
+, stdout);
+ fputs(
 "  -D/--dump-header option when getting files from both FTP and HTTP, and it\n"
 "  will then store the headers in the specified file.\n"
 "\n"
-, stdout);
- fputs(
 "  Store the HTTP headers in a separate file (headers.txt in the example):\n"
 "\n"
 "        curl --dump-header headers.txt curl.haxx.se\n"
 "\n"
 "  Note that headers stored in a separate file can be very useful at a later\n"
 "  time if you want curl to use cookies sent by the server. More about that in\n"
 "  the cookies section.\n"
 "\n"
 "POST (HTTP)\n"
 "\n"
+, stdout);
+ fputs(
 "  It's easy to post data using curl. This is done using the -d <data>\n"
 "  option.  The post data must be urlencoded.\n"
 "\n"
 "  Post a simple \"name\" and \"phone\" guestbook.\n"
 "\n"
-, stdout);
- fputs(
 "        curl -d \"name=Rafael%20Sagula&phone=3320780\" \\\n"
 "                http://www.where.com/guest.cgi\n"
 "\n"
 "  How to post a form with curl, lesson #1:\n"
 "\n"
 "  Dig out all the <input> tags in the form that you want to fill in. (There's\n"
 "  a perl program called formfind.pl on the curl site that helps with this).\n"
 "\n"
+, stdout);
+ fputs(
 "  If there's a \"normal\" post, you use -d to post. -d takes a full \"post\n"
 "  string\", which is in the format\n"
 "\n"
 "        <variable1>=<data1>&<variable2>=<data2>&...\n"
 "\n"
-, stdout);
- fputs(
 "  The 'variable' names are the names set with \"name=\" in the <input> tags, and\n"
 "  the data is the contents you want to fill in for the inputs. The data *must*\n"
 "  be properly URL encoded. That means you replace space with + and that you\n"
 "  replace weird letters with %XX where XX is the hexadecimal representation of\n"
+, stdout);
+ fputs(
 "  the letter's ASCII code.\n"
 "\n"
 "  Example:\n"
 "\n"
 "  (page located at http://www.formpost.com/getthis/\n"
 "\n"
 "        <form action=\"post.cgi\" method=\"post\">\n"
 "        <input name=user size=10>\n"
-, stdout);
- fputs(
 "        <input name=pass type=password size=10>\n"
 "        <input name=id type=hidden value=\"blablabla\">\n"
 "        <input name=ding value=\"submit\">\n"
 "        </form>\n"
 "\n"
 "  We want to enter user 'foobar' with password '12345'.\n"
 "\n"
 "  To post to this, you enter a curl command line like:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -d \"user=foobar&pass=12345&id=blablabla&ding=submit\"  (continues)\n"
 "          http://www.formpost.com/getthis/post.cgi\n"
 "\n"
 "\n"
 "  While -d uses the application/x-www-form-urlencoded mime-type, generally\n"
-, stdout);
- fputs(
 "  understood by CGI's and similar, curl also supports the more capable\n"
 "  multipart/form-data type. This latter type supports things like file upload.\n"
 "\n"
 "  -F accepts parameters like -F \"name=contents\". If you want the contents to\n"
+, stdout);
+ fputs(
 "  be read from a file, use <@filename> as contents. When specifying a file,\n"
 "  you can also specify the file content type by appending ';type=<mime type>'\n"
 "  to the file name. You can also post the contents of several files in one\n"
-, stdout);
- fputs(
 "  field.  For example, the field name 'coolfiles' is used to send three files,\n"
 "  with different content types using the following syntax:\n"
 "\n"
 "        curl -F \"coolfiles=@fil1.gif;type=image/gif,fil2.txt,fil3.html\" \\\n"
 "        http://www.post.com/postit.cgi\n"
 "\n"
+, stdout);
+ fputs(
 "  If the content-type is not specified, curl will try to guess from the file\n"
 "  extension (it only knows a few), or use the previously specified type (from\n"
 "  an earlier file if several files are specified in a list) or else it will\n"
-, stdout);
- fputs(
 "  use the default type 'application/octet-stream'.\n"
 "\n"
 "  Emulate a fill-in form with -F. Let's say you fill in three fields in a\n"
 "  form. One field is a file name which to post, one field is your name and one\n"
+, stdout);
+ fputs(
 "  field is a file description. We want to post the file we have written named\n"
 "  \"cooltext.txt\". To let curl do the posting of this data instead of your\n"
 "  favourite browser, you have to read the HTML source of the form page and\n"
-, stdout);
- fputs(
 "  find the names of the input fields. In our example, the input field names\n"
 "  are 'file', 'yourname' and 'filedescription'.\n"
 "\n"
 "        curl -F \"file=@cooltext.txt\" -F \"yourname=Daniel\" \\\n"
 "             -F \"filedescription=Cool text file with cool text inside\" \\\n"
+, stdout);
+ fputs(
 "             http://www.post.com/postit.cgi\n"
 "\n"
 "  To send two files in one post you can do it in two ways:\n"
 "\n"
 "  1. Send multiple files in a single \"field\" with a single field name:\n"
 "\n"
 "        curl -F \"pictures=@dog.gif,cat.gif\"\n"
 "\n"
-, stdout);
- fputs(
 "  2. Send two fields with two field names:\n"
 "\n"
 "        curl -F \"docpicture=@dog.gif\" -F \"catpicture=@cat.gif\"\n"
 "\n"
 "  To send a field value literally without interpreting a leading '@'\n"
 "  or '<', or an embedded ';type=', use --form-string instead of\n"
+, stdout);
+ fputs(
 "  -F. This is recommended when the value is obtained from a user or\n"
 "  some other unpredictable source. Under these circumstances, using\n"
 "  -F instead of --form-string would allow a user to trick curl into\n"
 "  uploading a file.\n"
 "\n"
 "REFERRER\n"
 "\n"
-, stdout);
- fputs(
 "  An HTTP request has the option to include information about which address\n"
 "  referred it to the actual page.  Curl allows you to specify the\n"
 "  referrer to be used on the command line. It is especially useful to\n"
+, stdout);
+ fputs(
 "  fool or trick stupid servers or CGI scripts that rely on that information\n"
 "  being available or contain certain data.\n"
 "\n"
 "        curl -e www.coolsite.com http://www.showme.com/\n"
 "\n"
 "  NOTE: The Referer: [sic] field is defined in the HTTP spec to be a full URL.\n"
 "\n"
 "USER AGENT\n"
 "\n"
-, stdout);
- fputs(
 "  An HTTP request has the option to include information about the browser\n"
 "  that generated the request. Curl allows it to be specified on the command\n"
 "  line. It is especially useful to fool or trick stupid servers or CGI\n"
+, stdout);
+ fputs(
 "  scripts that only accept certain browsers.\n"
 "\n"
 "  Example:\n"
 "\n"
 "  curl -A 'Mozilla/3.0 (Win95; I)' http://www.nationsbank.com/\n"
 "\n"
 "  Other common strings:\n"
 "    'Mozilla/3.0 (Win95; I)'     Netscape Version 3 for Windows 95\n"
-, stdout);
- fputs(
 "    'Mozilla/3.04 (Win95; U)'    Netscape Version 3 for Windows 95\n"
 "    'Mozilla/2.02 (OS/2; U)'     Netscape Version 2 for OS/2\n"
 "    'Mozilla/4.04 [en] (X11; U; AIX 4.2; Nav)'           NS for AIX\n"
 "    'Mozilla/4.05 [en] (X11; U; Linux 2.0.32 i586)'      NS for Linux\n"
 "\n"
+, stdout);
+ fputs(
 "  Note that Internet Explorer tries hard to be compatible in every way:\n"
 "    'Mozilla/4.0 (compatible; MSIE 4.01; Windows 95)'    MSIE for W95\n"
 "\n"
 "  Mozilla is not the only possible User-Agent name:\n"
-, stdout);
- fputs(
 "    'Konqueror/1.0'             KDE File Manager desktop client\n"
 "    'Lynx/2.7.1 libwww-FM/2.14' Lynx command line browser\n"
 "\n"
 "COOKIES\n"
 "\n"
 "  Cookies are generally used by web servers to keep state information at the\n"
 "  client's side. The server sets cookies by sending a response line in the\n"
-"  headers that looks like 'Set-Cookie: <data>' where the data part then\n"
-"  typically contains a set of NAME=VALUE pairs (separated by semicolons ';'\n"
 , stdout);
  fputs(
+"  headers that looks like 'Set-Cookie: <data>' where the data part then\n"
+"  typically contains a set of NAME=VALUE pairs (separated by semicolons ';'\n"
 "  like \"NAME1=VALUE1; NAME2=VALUE2;\"). The server can also specify for what\n"
 "  path the \"cookie\" should be used for (by specifying \"path=value\"), when the\n"
 "  cookie should expire (\"expire=DATE\"), for what domain to use it\n"
 "  (\"domain=NAME\") and if it should be used on secure connections only\n"
 "  (\"secure\").\n"
 "\n"
+, stdout);
+ fputs(
 "  If you've received a page from a server that contains a header like:\n"
 "        Set-Cookie: sessionid=boo123; path=\"/foo\";\n"
 "\n"
-, stdout);
- fputs(
 "  it means the server wants that first pair passed on when we get anything in\n"
 "  a path beginning with \"/foo\".\n"
 "\n"
 "  Example, get a page that wants my name passed in a cookie:\n"
 "\n"
 "        curl -b \"name=Daniel\" www.sillypage.com\n"
 "\n"
 "  Curl also has the ability to use previously received cookies in following\n"
 "  sessions. If you get cookies from a server and store them in a file in a\n"
+, stdout);
+ fputs(
 "  manner similar to:\n"
 "\n"
 "        curl --dump-header headers www.example.com\n"
 "\n"
-, stdout);
- fputs(
 "  ... you can then in a second connect to that (or another) site, use the\n"
 "  cookies from the 'headers' file like:\n"
 "\n"
 "        curl -b headers www.example.com\n"
 "\n"
 "  While saving headers to a file is a working way to store cookies, it is\n"
 "  however error-prone and not the preferred way to do this. Instead, make curl\n"
 "  save the incoming cookies using the well-known netscape cookie format like\n"
 "  this:\n"
 "\n"
-"        curl -c cookies.txt www.example.com\n"
-"\n"
 , stdout);
  fputs(
+"        curl -c cookies.txt www.example.com\n"
+"\n"
 "  Note that by specifying -b you enable the \"cookie awareness\" and with -L\n"
 "  you can make curl follow a location: (which often is used in combination\n"
 "  with cookies). So that if a site sends cookies and a location, you can\n"
 "  use a non-existing file to trigger the cookie awareness like:\n"
 "\n"
 "        curl -L -b empty.txt www.example.com\n"
 "\n"
 "  The file to read cookies from must be formatted using plain HTTP headers OR\n"
-"  as netscape's cookie file. Curl will determine what kind it is based on the\n"
 , stdout);
  fputs(
+"  as netscape's cookie file. Curl will determine what kind it is based on the\n"
 "  file contents.  In the above command, curl will parse the header and store\n"
 "  the cookies received from www.example.com.  curl will send to the server the\n"
 "  stored cookies which match the request as it follows the location.  The\n"
 "  file \"empty.txt\" may be a nonexistent file.\n"
 "\n"
 "  To read and write cookies from a netscape cookie file, you can set both -b\n"
 "  and -c to use the same file:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl -b cookies.txt -c cookies.txt www.example.com\n"
 "\n"
 "PROGRESS METER\n"
 "\n"
-, stdout);
- fputs(
 "  The progress meter exists to show a user that something actually is\n"
 "  happening. The different fields in the output have the following meaning:\n"
 "\n"
 "  % Total    % Received % Xferd  Average Speed          Time             Curr.\n"
 "                                 Dload  Upload Total    Current  Left    Speed\n"
 "  0  151M    0 38608    0     0   9406      0  4:41:43  0:00:04  4:41:39  9287\n"
 "\n"
 "  From left-to-right:\n"
-"   %             - percentage completed of the whole transfer\n"
 , stdout);
  fputs(
+"   %             - percentage completed of the whole transfer\n"
 "   Total         - total size of the whole expected transfer\n"
 "   %             - percentage completed of the download\n"
 "   Received      - currently downloaded amount of bytes\n"
 "   %             - percentage completed of the upload\n"
 "   Xferd         - currently uploaded amount of bytes\n"
 "   Average Speed\n"
 "   Dload         - the average transfer speed of the download\n"
 "   Average Speed\n"
 "   Upload        - the average transfer speed of the upload\n"
-"   Time Total    - expected time to complete the operation\n"
 , stdout);
  fputs(
+"   Time Total    - expected time to complete the operation\n"
 "   Time Current  - time passed since the invoke\n"
 "   Time Left     - expected time left to completion\n"
 "   Curr.Speed    - the average transfer speed the last 5 seconds (the first\n"
 "                   5 seconds of a transfer is based on less time of course.)\n"
 "\n"
 "  The -# option will display a totally different progress bar that doesn't\n"
 "  need much explanation!\n"
 "\n"
 "SPEED LIMIT\n"
 "\n"
-"  Curl allows the user to set the transfer speed conditions that must be met\n"
 , stdout);
  fputs(
+"  Curl allows the user to set the transfer speed conditions that must be met\n"
 "  to let the transfer keep going. By using the switch -y and -Y you\n"
 "  can make curl abort transfers if the transfer speed is below the specified\n"
 "  lowest limit for a specified time.\n"
 "\n"
 "  To have curl abort the download if the speed is slower than 3000 bytes per\n"
 "  second for 1 minute, run:\n"
 "\n"
 "        curl -Y 3000 -y 60 www.far-away-site.com\n"
 "\n"
 "  This can very well be used in combination with the overall time limit, so\n"
-"  that the above operation must be completed in whole within 30 minutes:\n"
-"\n"
 , stdout);
  fputs(
+"  that the above operation must be completed in whole within 30 minutes:\n"
+"\n"
 "        curl -m 1800 -Y 3000 -y 60 www.far-away-site.com\n"
 "\n"
 "  Forcing curl not to transfer data faster than a given rate is also possible,\n"
 "  which might be useful if you're using a limited bandwidth connection and you\n"
 "  don't want your transfer to use all of it (sometimes referred to as\n"
 "  \"bandwidth throttle\").\n"
 "\n"
 "  Make curl transfer data no faster than 10 kilobytes per second:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl --limit-rate 10K www.far-away-site.com\n"
 "\n"
 "    or\n"
 "\n"
 "        curl --limit-rate 10240 www.far-away-site.com\n"
 "\n"
-, stdout);
- fputs(
 "  Or prevent curl from uploading data faster than 1 megabyte per second:\n"
 "\n"
 "        curl -T upload --limit-rate 1M ftp://uploadshereplease.com\n"
 "\n"
 "  When using the --limit-rate option, the transfer rate is regulated on a\n"
 "  per-second basis, which will cause the total transfer speed to become lower\n"
 "  than the given number. Sometimes of course substantially lower, if your\n"
+, stdout);
+ fputs(
 "  transfer stalls during periods.\n"
 "\n"
 "CONFIG FILE\n"
 "\n"
 "  Curl automatically tries to read the .curlrc file (or _curlrc file on win32\n"
-, stdout);
- fputs(
 "  systems) from the user's home dir on startup.\n"
 "\n"
 "  The config file could be made up with normal command line switches, but you\n"
 "  can also specify the long options without the dashes to make it more\n"
 "  readable. You can separate the options and the parameter with spaces, or\n"
 "  with = or :. Comments can be used within the file. If the first letter on a\n"
+, stdout);
+ fputs(
 "  line is a '#'-symbol the rest of the line is treated as a comment.\n"
 "\n"
 "  If you want the parameter to contain spaces, you must enclose the entire\n"
-, stdout);
- fputs(
 "  parameter within double quotes (\"). Within those quotes, you specify a\n"
 "  quote as \\\".\n"
 "\n"
 "  NOTE: You must specify options and their arguments on the same line.\n"
 "\n"
 "  Example, set default time out and proxy in a config file:\n"
 "\n"
 "        # We want a 30 minute timeout:\n"
 "        -m 1800\n"
 "        # ... and we use a proxy for all accesses:\n"
+, stdout);
+ fputs(
 "        proxy = proxy.our.domain.com:8080\n"
 "\n"
 "  White spaces ARE significant at the end of lines, but all white spaces\n"
-, stdout);
- fputs(
 "  leading up to the first characters of each line are ignored.\n"
 "\n"
 "  Prevent curl from reading the default file by using -q as the first command\n"
 "  line parameter, like:\n"
 "\n"
 "        curl -q www.thatsite.com\n"
 "\n"
 "  Force curl to get and display a local help page in case it is invoked\n"
 "  without URL by making a config file similar to:\n"
 "\n"
 "        # default url to get\n"
+, stdout);
+ fputs(
 "        url = \"http://help.with.curl.com/curlhelp.html\"\n"
 "\n"
 "  You can specify another config file to be read by using the -K/--config\n"
-, stdout);
- fputs(
 "  flag. If you set config file name to \"-\" it'll read the config from stdin,\n"
 "  which can be handy if you want to hide options from being visible in process\n"
 "  tables etc:\n"
 "\n"
 "        echo \"user = user:passwd\" | curl -K - http://that.secret.site.com\n"
 "\n"
 "EXTRA HEADERS\n"
 "\n"
 "  When using curl in your own very special programs, you may end up needing\n"
+, stdout);
+ fputs(
 "  to pass on your own custom headers when getting a web page. You can do\n"
 "  this by using the -H flag.\n"
 "\n"
-, stdout);
- fputs(
 "  Example, send the header \"X-you-and-me: yes\" to the server when getting a\n"
 "  page:\n"
 "\n"
 "        curl -H \"X-you-and-me: yes\" www.love.com\n"
 "\n"
 "  This can also be useful in case you want curl to send a different text in a\n"
 "  header than it normally does. The -H header you specify then replaces the\n"
 "  header curl would normally send. If you replace an internal header with an\n"
+, stdout);
+ fputs(
 "  empty one, you prevent that header from being sent. To prevent the Host:\n"
 "  header from being used:\n"
 "\n"
-, stdout);
- fputs(
 "        curl -H \"Host:\" www.server.com\n"
 "\n"
 "FTP and PATH NAMES\n"
 "\n"
 "  Do note that when getting files with the ftp:// URL, the given path is\n"
 "  relative the directory you enter. To get the file 'README' from your home\n"
 "  directory at your ftp site, do:\n"
 "\n"
 "        curl ftp://user:passwd@my.site.com/README\n"
 "\n"
 "  But if you want the README file from the root directory of that very same\n"
+, stdout);
+ fputs(
 "  site, you need to specify the absolute file name:\n"
 "\n"
 "        curl ftp://user:passwd@my.site.com//README\n"
 "\n"
-, stdout);
- fputs(
 "  (I.e with an extra slash in front of the file name.)\n"
 "\n"
 "SFTP and SCP and PATH NAMES\n"
 "\n"
 "  With sftp: and scp: URLs, the path name given is the absolute name on the\n"
 "  server. To access a file relative to the remote user's home directory,\n"
 "  prefix the file with /~/ , such as:\n"
 "\n"
 "        curl -u $USER sftp://home.example.com/~/.bashrc\n"
 "\n"
 "FTP and firewalls\n"
 "\n"
-"  The FTP protocol requires one of the involved parties to open a second\n"
 , stdout);
  fputs(
+"  The FTP protocol requires one of the involved parties to open a second\n"
 "  connection as soon as data is about to get transferred. There are two ways to\n"
 "  do this.\n"
 "\n"
 "  The default way for curl is to issue the PASV command which causes the\n"
 "  server to open another port and await another connection performed by the\n"
 "  client. This is good if the client is behind a firewall that doesn't allow\n"
 "  incoming connections.\n"
 "\n"
 "        curl ftp.download.com\n"
 "\n"
-"  If the server, for example, is behind a firewall that doesn't allow connections\n"
 , stdout);
  fputs(
+"  If the server, for example, is behind a firewall that doesn't allow connections\n"
 "  on ports other than 21 (or if it just doesn't support the PASV command), the\n"
 "  other way to do it is to use the PORT command and instruct the server to\n"
 "  connect to the client on the given IP number and port (as parameters to the\n"
 "  PORT command).\n"
 "\n"
 "  The -P flag to curl supports a few different options. Your machine may have\n"
 "  several IP-addresses and/or network interfaces and curl allows you to select\n"
-"  which of them to use. Default address can also be used:\n"
-"\n"
 , stdout);
  fputs(
+"  which of them to use. Default address can also be used:\n"
+"\n"
 "        curl -P - ftp.download.com\n"
 "\n"
 "  Download with PORT but use the IP address of our 'le0' interface (this does\n"
 "  not work on windows):\n"
 "\n"
 "        curl -P le0 ftp.download.com\n"
@@ -4145,18 +4528,18 @@
 "        curl -P 192.168.0.10 ftp.download.com\n"
 "\n"
 "NETWORK INTERFACE\n"
 "\n"
 "  Get a web page from a server using a specified port for the interface:\n"
 "\n"
+, stdout);
+ fputs(
 "        curl --interface eth0:1 http://www.netscape.com/\n"
 "\n"
 "  or\n"
 "\n"
-, stdout);
- fputs(
 "        curl --interface 192.168.1.10 http://www.netscape.com/\n"
 "\n"
 "HTTPS\n"
 "\n"
 "  Secure HTTP requires SSL libraries to be installed and used when curl is\n"
 "  built. If that is done, curl is capable of retrieving and posting documents\n"
@@ -4164,47 +4547,47 @@
 "\n"
 "  Example:\n"
 "\n"
 "        curl https://www.secure-site.com\n"
 "\n"
 "  Curl is also capable of using your personal certificates to get/post files\n"
-"  from sites that require valid certificates. The only drawback is that the\n"
 , stdout);
  fputs(
+"  from sites that require valid certificates. The only drawback is that the\n"
 "  certificate needs to be in PEM-format. PEM is a standard and open format to\n"
 "  store certificates with, but it is not used by the most commonly used\n"
 "  browsers (Netscape and MSIE both use the so called PKCS#12 format). If you\n"
 "  want curl to use the certificates you use with your (favourite) browser, you\n"
 "  may need to download/compile a converter that can convert your browser's\n"
-"  formatted certificates to PEM formatted ones. This kind of converter is\n"
 , stdout);
  fputs(
+"  formatted certificates to PEM formatted ones. This kind of converter is\n"
 "  included in recent versions of OpenSSL, and for older versions Dr Stephen\n"
 "  N. Henson has written a patch for SSLeay that adds this functionality. You\n"
 "  can get his patch (that requires an SSLeay installation) from his site at:\n"
 "  http://www.drh-consultancy.demon.co.uk/\n"
 "\n"
 "  Example on how to automatically retrieve a document using a certificate with\n"
 "  a personal password:\n"
 "\n"
-"        curl -E /path/to/cert.pem:password https://secure.site.com/\n"
-"\n"
 , stdout);
  fputs(
+"        curl -E /path/to/cert.pem:password https://secure.site.com/\n"
+"\n"
 "  If you neglect to specify the password on the command line, you will be\n"
 "  prompted for the correct password before any data can be received.\n"
 "\n"
 "  Many older SSL-servers have problems with SSLv3 or TLS, which newer versions\n"
 "  of OpenSSL etc use, therefore it is sometimes useful to specify what\n"
 "  SSL-version curl should use. Use -3, -2 or -1 to specify that exact SSL\n"
 "  version to use (for SSLv3, SSLv2 or TLSv1 respectively):\n"
 "\n"
-"        curl -2 https://secure.site.com/\n"
-"\n"
 , stdout);
  fputs(
+"        curl -2 https://secure.site.com/\n"
+"\n"
 "  Otherwise, curl will first attempt to use v3 and then v2.\n"
 "\n"
 "  To use OpenSSL to convert your favourite browser's certificate into a PEM\n"
 "  formatted one that curl can use, do something like this:\n"
 "\n"
 "    In Netscape, you start with hitting the 'Security' menu button.\n"
@@ -4583,4366 +4966,4532 @@
 #include "tool_hugehelp.h"
 void hugehelp(void) {}
 #endif /* USE_MANUAL */
 #else
 /*
  * NEVER EVER edit this manually, fix the mkhelp.pl script instead!
- * Generation time: Wed Nov  2 07:33:12 2016
+ * Generation time: Tue Dec 20 14:41:16 2016
  */
 #ifdef USE_MANUAL
 #include "tool_hugehelp.h"
 #include <zlib.h>
 #include "memdebug.h" /* keep this as LAST include */
 static const unsigned char hugehelpgz[] = {
   /* This mumbo-jumbo is the huge help text compressed with gzip.
-     Thanks to this operation, the size of this data shrunk from 173518
-     to 52110 bytes. You can disable the use of compressed help
+     Thanks to this operation, the size of this data shrunk from 182809
+     to 54098 bytes. You can disable the use of compressed help
      texts by NOT passing -c to the mkhelp.pl tool. */
-  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xed, 0xbd,
-  0x6b, 0x7b, 0x1b, 0xc7, 0xb1, 0x2e, 0xfa, 0x9d, 0xbf, 0x62, 0x82, 0x9c,
-  0x84, 0x64, 0x02, 0x80, 0x17, 0x51, 0xb2, 0xc5, 0x48, 0x5e, 0xa6, 0x29,
-  0xca, 0xe6, 0x32, 0x25, 0x72, 0x13, 0x94, 0xed, 0x6c, 0xdb, 0x8f, 0x9e,
-  0x01, 0x30, 0x24, 0x27, 0x04, 0x66, 0x90, 0x99, 0x01, 0x29, 0x66, 0xad,
-  0xec, 0xdf, 0x7e, 0xba, 0xde, 0xaa, 0xea, 0xee, 0x99, 0x6e, 0x90, 0xb2,
-  0x63, 0xe5, 0xd9, 0x67, 0xef, 0xe3, 0xb5, 0x22, 0x92, 0xc0, 0x4c, 0x5f,
-  0xab, 0xab, 0xeb, 0xfa, 0x56, 0x92, 0x3c, 0xf6, 0xdf, 0x7b, 0xfc, 0xef,
-  0xbd, 0xf9, 0xcf, 0xfc, 0x5c, 0x4b, 0x92, 0xb3, 0xaa, 0xfc, 0x5b, 0x36,
-  0x69, 0xe2, 0xcf, 0xbe, 0x7f, 0xff, 0xdf, 0x09, 0xff, 0x9f, 0x79, 0xe7,
-  0x27, 0xf3, 0x73, 0xed, 0xc1, 0xb6, 0xb7, 0x12, 0xf7, 0xc2, 0x7f, 0xbf,
-  0xdf, 0x4c, 0x1e, 0x7b, 0xe1, 0xbf, 0x93, 0x0d, 0xbc, 0xf0, 0x5e, 0x7a,
-  0x78, 0x41, 0xbf, 0xbf, 0x7f, 0xff, 0x70, 0x27, 0x3f, 0xd1, 0xa8, 0xe8,
-  0x9f, 0x2d, 0x7a, 0xef, 0xa7, 0xf7, 0xf4, 0xab, 0xf9, 0x64, 0x6d, 0xed,
-  0xed, 0xc1, 0x9b, 0x23, 0x7d, 0x75, 0xb2, 0xac, 0x66, 0xc9, 0x20, 0x69,
-  0xaa, 0xb4, 0xa8, 0x2f, 0xb3, 0x2a, 0x49, 0x93, 0x77, 0xe7, 0x27, 0x6b,
-  0x6b, 0xa3, 0xbf, 0xbe, 0x3d, 0x3d, 0x1b, 0x1d, 0x8f, 0x5a, 0x8f, 0xfd,
-  0x58, 0x2e, 0x9a, 0xbc, 0x2c, 0xea, 0x9f, 0x93, 0x1f, 0xcd, 0x43, 0xc3,
-  0xe1, 0xf0, 0xe7, 0xb5, 0xb5, 0x57, 0x47, 0xa3, 0xc3, 0xf3, 0xe3, 0xb3,
-  0x8b, 0xe3, 0xd3, 0xb7, 0xad, 0x67, 0x93, 0xbc, 0x4e, 0x4c, 0x63, 0x4d,
-  0x59, 0xce, 0xcc, 0x3f, 0xae, 0xfd, 0x69, 0xda, 0xa4, 0xc9, 0x65, 0x55,
-  0xce, 0x93, 0xb2, 0xa2, 0x2f, 0xd2, 0xa4, 0xce, 0xaa, 0xdb, 0xac, 0xea,
-  0x27, 0xcb, 0x3a, 0x2f, 0xae, 0x92, 0xb2, 0xc8, 0x92, 0xf2, 0x32, 0x69,
-  0xae, 0x33, 0x6d, 0xae, 0x5e, 0x2e, 0x16, 0x65, 0xd5, 0x64, 0xd3, 0x64,
-  0x51, 0x95, 0x4d, 0x39, 0x29, 0x67, 0x75, 0xb2, 0xf1, 0xea, 0xf8, 0xf0,
-  0xa2, 0x9f, 0xbc, 0x3e, 0x3e, 0x39, 0x32, 0xff, 0x5e, 0x9c, 0xe1, 0x9f,
-  0x51, 0x3f, 0xf9, 0xfa, 0xf4, 0xec, 0x9b, 0xa3, 0xf3, 0x7e, 0xf2, 0xcd,
-  0x05, 0x7d, 0x46, 0xff, 0x9a, 0x0f, 0x93, 0xe3, 0x37, 0x07, 0x67, 0x7d,
-  0x6d, 0x8e, 0xfe, 0xa0, 0x0f, 0x4f, 0x5e, 0x99, 0x0f, 0xf9, 0x07, 0xfd,
-  0x79, 0x76, 0x7a, 0xf6, 0x44, 0x7e, 0xd0, 0x9f, 0xe7, 0x17, 0x6f, 0xcc,
-  0xb7, 0xe7, 0x17, 0x23, 0xf3, 0xef, 0xe8, 0x90, 0xfe, 0x41, 0x2f, 0xa3,
-  0x37, 0x5f, 0xe1, 0x9f, 0x91, 0x6d, 0x6e, 0xf4, 0x86, 0x3f, 0x47, 0x4f,
-  0x17, 0x47, 0x27, 0x6f, 0x8f, 0x2e, 0x92, 0xb4, 0x98, 0x26, 0x17, 0xe6,
-  0xf9, 0xcd, 0x61, 0x72, 0x71, 0x9d, 0x25, 0x93, 0x72, 0x3e, 0xa7, 0x8f,
-  0xcc, 0x8a, 0x4c, 0xb3, 0x3a, 0xbf, 0x2a, 0xcc, 0x54, 0xcc, 0xcc, 0xef,
-  0xca, 0xea, 0x26, 0x49, 0xee, 0xf2, 0xe6, 0xba, 0x5c, 0x36, 0xda, 0xdc,
-  0xd2, 0xac, 0x46, 0x92, 0x17, 0x4d, 0x56, 0xa5, 0x13, 0x5a, 0xeb, 0xe1,
-  0x5a, 0x6b, 0x55, 0xcb, 0x4b, 0xb3, 0x86, 0xb5, 0x59, 0xb4, 0xf1, 0xb2,
-  0x9e, 0x95, 0xe9, 0x94, 0x96, 0xca, 0xbc, 0x72, 0xb9, 0x34, 0x8b, 0x5c,
-  0xe5, 0x93, 0x9b, 0x3a, 0x99, 0xe5, 0x37, 0x19, 0x2d, 0xd4, 0x87, 0x7b,
-  0x5d, 0xb8, 0x3e, 0x37, 0x9a, 0x2e, 0xcd, 0x9a, 0x16, 0x03, 0x6d, 0xae,
-  0xc9, 0x27, 0x29, 0x75, 0x80, 0x95, 0x4b, 0x96, 0x0b, 0x6a, 0x8d, 0x57,
-  0x2c, 0x59, 0x94, 0xb5, 0x79, 0x69, 0x34, 0x3a, 0x31, 0x23, 0x2f, 0x8a,
-  0x0c, 0xe3, 0xa8, 0xfb, 0xe6, 0x8f, 0xf2, 0x26, 0xcf, 0xcc, 0x2f, 0x97,
-  0xf9, 0x2c, 0x4b, 0x78, 0x47, 0x6d, 0x73, 0xb4, 0xb5, 0x49, 0x95, 0xd5,
-  0xcb, 0x79, 0x66, 0x56, 0xef, 0x4d, 0xd6, 0xa4, 0xb3, 0xbc, 0xb8, 0x31,
-  0xbf, 0xd2, 0xc4, 0xe7, 0x65, 0x95, 0x0d, 0x93, 0x83, 0x3a, 0xb9, 0x2f,
-  0x97, 0x66, 0xc2, 0xb3, 0x99, 0xd9, 0xf3, 0x2c, 0x19, 0x67, 0xb3, 0xf2,
-  0xae, 0x4f, 0x3b, 0x9d, 0x14, 0xcb, 0xf9, 0xd8, 0x34, 0x50, 0x5e, 0xba,
-  0xe6, 0xd2, 0x66, 0x69, 0x9a, 0xe3, 0xa7, 0xe7, 0xa9, 0x99, 0x93, 0x79,
-  0xb7, 0x4a, 0xae, 0x33, 0x33, 0xe7, 0x7a, 0x91, 0x17, 0xbf, 0x6b, 0xaf,
-  0x8b, 0x59, 0xda, 0x45, 0x79, 0x97, 0x55, 0x66, 0x65, 0xc7, 0xf7, 0x89,
-  0x59, 0x84, 0x31, 0x13, 0xe1, 0xa5, 0x21, 0xb2, 0x24, 0x35, 0x4d, 0x58,
-  0x02, 0x1c, 0x54, 0xd9, 0x2c, 0x25, 0x62, 0xb2, 0x7d, 0x0c, 0xcd, 0x26,
-  0x66, 0x96, 0xda, 0xe4, 0xd5, 0x8d, 0x27, 0x9b, 0x78, 0x79, 0x6a, 0x66,
-  0x92, 0xcf, 0x6a, 0xb3, 0x0d, 0x74, 0x2c, 0xe4, 0x19, 0xda, 0x54, 0x3a,
-  0x26, 0x86, 0x36, 0xef, 0x8b, 0x26, 0xfd, 0x80, 0xee, 0x85, 0x36, 0x07,
-  0xd3, 0x6c, 0x91, 0x15, 0xd3, 0xac, 0x68, 0x86, 0xc9, 0x5f, 0xcb, 0xe5,
-  0xba, 0xe9, 0xfb, 0x32, 0x37, 0x6b, 0x90, 0x4a, 0x53, 0xa6, 0x67, 0x43,
-  0x04, 0x93, 0x2a, 0x5f, 0x78, 0x5b, 0x51, 0x16, 0x66, 0xcf, 0x93, 0xf3,
-  0xd7, 0x87, 0xc9, 0x93, 0xe7, 0x9f, 0x3f, 0x73, 0x7b, 0x6e, 0x1a, 0x48,
-  0x26, 0x69, 0x61, 0x66, 0x9c, 0x4d, 0xf2, 0xcb, 0xfb, 0x64, 0xbe, 0x9c,
-  0x35, 0xf9, 0xc2, 0xac, 0xbe, 0xe9, 0xbc, 0xa6, 0x03, 0xb4, 0x48, 0xab,
-  0xa6, 0x26, 0x22, 0xc0, 0x07, 0x98, 0xfb, 0x5d, 0x95, 0x37, 0x74, 0x90,
-  0xf0, 0x9d, 0x19, 0x61, 0xd6, 0xd4, 0xda, 0x1c, 0xd1, 0x9a, 0xe9, 0x67,
-  0x6c, 0x68, 0xcb, 0x2c, 0x6d, 0x5a, 0x9b, 0x4e, 0xf7, 0xd7, 0x1c, 0x0f,
-  0xb9, 0x6e, 0x9a, 0xc5, 0xfe, 0xd6, 0x56, 0x9d, 0x37, 0xd9, 0xf0, 0xbf,
-  0xcc, 0x39, 0xec, 0x37, 0x77, 0x65, 0xbf, 0xb9, 0xae, 0xb2, 0xec, 0x9f,
-  0x43, 0x43, 0xc3, 0xf6, 0x49, 0xd3, 0xef, 0xbd, 0x0c, 0xec, 0x2a, 0x6b,
-  0x4c, 0x0f, 0x7f, 0x5f, 0x66, 0x05, 0xb5, 0x68, 0xc6, 0x91, 0xce, 0x16,
-  0xd7, 0xa9, 0xd9, 0xce, 0xcc, 0x50, 0x23, 0x9d, 0x6c, 0x43, 0x30, 0x34,
-  0x2a, 0x3e, 0xdb, 0x3f, 0xfe, 0x1c, 0x76, 0x7a, 0x89, 0x3e, 0xcd, 0xbf,
-  0xc3, 0xec, 0x43, 0x3a, 0x37, 0x73, 0xa3, 0xae, 0xb6, 0x88, 0xc4, 0x7e,
-  0xdc, 0x19, 0xec, 0x6c, 0x6f, 0xff, 0x3c, 0x6c, 0x3e, 0x34, 0x1f, 0xf7,
-  0xfc, 0xf6, 0xb6, 0x7b, 0x83, 0x1e, 0xdd, 0xa0, 0xf9, 0x26, 0x33, 0x43,
-  0x32, 0xd4, 0xf9, 0x3f, 0xb2, 0xaa, 0xac, 0x37, 0x3f, 0xae, 0xa5, 0x74,
-  0xf0, 0x8f, 0x76, 0xbf, 0x6f, 0xb3, 0x1a, 0x34, 0xe3, 0xe6, 0x9a, 0xa4,
-  0x95, 0xa1, 0xdb, 0xb2, 0x71, 0xec, 0xa9, 0x6f, 0x0e, 0x65, 0x63, 0x57,
-  0xc6, 0x9c, 0x39, 0xf3, 0xb4, 0x61, 0x6c, 0xe9, 0x8c, 0x78, 0x5a, 0x9d,
-  0x14, 0xd9, 0x07, 0x7b, 0xca, 0xcd, 0xe9, 0xcf, 0xd2, 0xc9, 0x75, 0x52,
-  0x1a, 0xe2, 0xaf, 0x22, 0x5b, 0xe0, 0x0f, 0x28, 0xad, 0x26, 0xd7, 0xf9,
-  0xad, 0x59, 0x8d, 0xe7, 0xcf, 0x9f, 0x0d, 0xcc, 0x3f, 0xcf, 0x7f, 0xde,
-  0xba, 0x2d, 0x67, 0x66, 0x71, 0xf6, 0x7e, 0xde, 0xa2, 0x2d, 0xfe, 0xaf,
-  0xb4, 0x3f, 0xee, 0x4f, 0xfe, 0x39, 0xbc, 0x6e, 0xe6, 0xb3, 0x95, 0x84,
-  0x93, 0x16, 0xe6, 0x7f, 0xf3, 0x72, 0x59, 0x34, 0x96, 0x58, 0x0c, 0xcd,
-  0x35, 0x1e, 0x73, 0x32, 0xc7, 0xd5, 0x9c, 0x51, 0x22, 0x6d, 0xa2, 0x21,
-  0x3a, 0x75, 0xe6, 0x80, 0xba, 0xe3, 0xd8, 0x4c, 0xae, 0xcd, 0xfc, 0x0d,
-  0xf1, 0xa4, 0xb2, 0x06, 0x4d, 0x9e, 0xd2, 0xc1, 0x34, 0xfc, 0x81, 0xf8,
-  0x15, 0x9a, 0xe2, 0xce, 0x72, 0xf3, 0x5c, 0x59, 0x4d, 0xb3, 0xaa, 0x4d,
-  0xc6, 0x18, 0x8e, 0x1b, 0x4f, 0x62, 0xd6, 0x73, 0x61, 0x3a, 0x5f, 0x12,
-  0xab, 0xc3, 0x49, 0xa3, 0x16, 0xcc, 0x19, 0xbd, 0x32, 0x4b, 0x65, 0x96,
-  0x87, 0x08, 0x8b, 0x56, 0xef, 0x3e, 0x79, 0x6b, 0xf6, 0x90, 0xf9, 0x83,
-  0x47, 0x7f, 0xb3, 0xac, 0x69, 0x1e, 0x5d, 0x39, 0x47, 0x44, 0xfb, 0x3b,
-  0x01, 0x1d, 0xad, 0x7a, 0xde, 0x6c, 0xfd, 0xfe, 0x6e, 0xfb, 0xe1, 0xef,
-  0x0d, 0xdf, 0x74, 0x14, 0x6c, 0x7a, 0xff, 0xaf, 0x7f, 0x7a, 0x84, 0x70,
-  0x47, 0xdf, 0xe6, 0xc5, 0x6d, 0x79, 0x63, 0x26, 0x8e, 0x8b, 0x2d, 0x6d,
-  0x2d, 0x6a, 0x42, 0xac, 0x61, 0xbe, 0x68, 0xec, 0x8d, 0x41, 0x14, 0x62,
-  0x3e, 0x1a, 0xa7, 0xe3, 0xd9, 0x7d, 0x72, 0x9d, 0xde, 0x66, 0x34, 0xdf,
-  0x85, 0x21, 0x1d, 0x5a, 0x01, 0xc3, 0xc9, 0x67, 0x60, 0x2d, 0x72, 0x56,
-  0xa7, 0xe5, 0x72, 0x6c, 0xce, 0xfb, 0xdf, 0x97, 0x65, 0xc3, 0x0b, 0x93,
-  0xde, 0x96, 0xf9, 0xb4, 0x75, 0x3d, 0x5e, 0x67, 0xc4, 0x63, 0xa8, 0x63,
-  0xdc, 0x1b, 0x86, 0xc7, 0xd1, 0x48, 0x41, 0xfb, 0x79, 0x43, 0x37, 0x90,
-  0xe1, 0x4e, 0xe9, 0xac, 0x2e, 0x93, 0xe4, 0xaa, 0x24, 0xc2, 0x05, 0x4f,
-  0x04, 0xe5, 0x99, 0x4d, 0xb9, 0x4e, 0xe9, 0xa2, 0x31, 0x77, 0x8a, 0x25,
-  0xcd, 0x2a, 0x03, 0x7b, 0xc4, 0x4e, 0xa5, 0xb3, 0x3e, 0x5f, 0x28, 0xf4,
-  0x8e, 0x2c, 0x55, 0xb2, 0xfe, 0xc7, 0xf5, 0x7e, 0xb2, 0xfe, 0x1f, 0xeb,
-  0x60, 0xed, 0xeb, 0x7f, 0x5a, 0x77, 0xfb, 0x6c, 0x24, 0xa4, 0xdb, 0x7c,
-  0x4a, 0x77, 0x83, 0x99, 0xc9, 0xf1, 0xd9, 0xed, 0xb3, 0xe4, 0x1f, 0x74,
-  0x9d, 0x1b, 0xf6, 0x97, 0x7d, 0x50, 0x22, 0xd1, 0xb9, 0x99, 0xb7, 0x13,
-  0xc3, 0x07, 0xd3, 0x05, 0xdd, 0xeb, 0x59, 0x35, 0x31, 0x14, 0x95, 0x5e,
-  0x19, 0x1a, 0x32, 0xd7, 0xa3, 0x36, 0x47, 0xed, 0xd3, 0x2b, 0x3c, 0x2d,
-  0xc3, 0xb3, 0x92, 0x22, 0x9d, 0x1b, 0x22, 0x3d, 0xa1, 0x11, 0xe5, 0x45,
-  0xb8, 0x99, 0x3f, 0x5e, 0x66, 0x9f, 0x6f, 0xef, 0xef, 0x3f, 0xf9, 0xc3,
-  0xee, 0xd3, 0xac, 0xb9, 0xde, 0xfe, 0x79, 0xcb, 0x3e, 0x72, 0x7c, 0x89,
-  0x65, 0x57, 0xf2, 0xd3, 0x41, 0x98, 0x8b, 0xd7, 0x32, 0x6e, 0xf3, 0xbe,
-  0xf9, 0x3d, 0xbb, 0xcc, 0x3f, 0xf4, 0x55, 0x84, 0xe1, 0x63, 0x90, 0x1a,
-  0x52, 0x33, 0xfb, 0x47, 0xa7, 0x56, 0x9b, 0xbb, 0x5a, 0x66, 0xb5, 0x59,
-  0xc9, 0xbb, 0xeb, 0xb4, 0x49, 0x6c, 0x03, 0xbc, 0xb3, 0xf3, 0xfc, 0xea,
-  0xba, 0x49, 0xee, 0x52, 0xe2, 0xff, 0xc7, 0x0d, 0x37, 0x41, 0x17, 0xaf,
-  0xe1, 0xfa, 0x97, 0xa9, 0x61, 0xdf, 0xb4, 0x87, 0xb8, 0x65, 0xc7, 0xee,
-  0xd2, 0x6f, 0x0c, 0x99, 0xf3, 0x86, 0x38, 0x09, 0x67, 0x9c, 0xd6, 0x74,
-  0x90, 0x0a, 0x73, 0x5e, 0x1b, 0x73, 0x6d, 0x2f, 0xe9, 0xaf, 0x6b, 0x73,
-  0x31, 0x63, 0x0d, 0x64, 0xa0, 0xb8, 0xbb, 0x5e, 0xd3, 0x76, 0xd2, 0xde,
-  0xd8, 0xfb, 0xc4, 0x6c, 0x52, 0x5f, 0xb6, 0xd9, 0xbe, 0x51, 0x9b, 0x03,
-  0x67, 0x98, 0x85, 0xa5, 0x8c, 0x1e, 0xf1, 0xbd, 0x1e, 0xcf, 0x13, 0x63,
-  0x4c, 0x6b, 0xba, 0xbb, 0xf9, 0x86, 0x36, 0x83, 0xf7, 0x26, 0x6b, 0x16,
-  0x2d, 0xbd, 0x21, 0x29, 0xa1, 0x23, 0x8b, 0xe0, 0xb5, 0x69, 0x69, 0x88,
-  0xcc, 0x8c, 0xd6, 0xf0, 0x47, 0x9a, 0x19, 0x71, 0x3d, 0xac, 0x0a, 0x88,
-  0xdc, 0xb4, 0x49, 0x1f, 0xe6, 0x0d, 0xb1, 0x7d, 0x08, 0x96, 0x66, 0xbc,
-  0x66, 0x51, 0x20, 0x1b, 0x1a, 0xde, 0xe9, 0xcd, 0x1f, 0x37, 0x96, 0x79,
-  0x36, 0xb9, 0x35, 0x82, 0x83, 0x91, 0x11, 0x33, 0xfb, 0x16, 0xae, 0xd8,
-  0x09, 0x89, 0x2b, 0x33, 0x73, 0x5e, 0x26, 0x65, 0x55, 0x91, 0x10, 0x4e,
-  0x3b, 0x38, 0x66, 0xbe, 0x36, 0xcf, 0xcc, 0xcd, 0xee, 0x2f, 0x67, 0x4e,
-  0x77, 0x8c, 0xe1, 0x2f, 0x46, 0x54, 0x00, 0x07, 0x31, 0x57, 0x3a, 0xd8,
-  0x30, 0x26, 0x8e, 0xd1, 0x51, 0xdb, 0x93, 0x49, 0xb6, 0x68, 0xea, 0xd8,
-  0x9c, 0x74, 0xc3, 0xcd, 0x70, 0xaa, 0x8c, 0x56, 0xde, 0x97, 0x83, 0xb0,
-  0xae, 0xf6, 0x1e, 0x86, 0x28, 0xa4, 0xa2, 0x85, 0x11, 0x8d, 0x6a, 0xbb,
-  0x6a, 0x0d, 0x68, 0xc3, 0xb0, 0x31, 0xac, 0xf9, 0x9c, 0x06, 0x4a, 0x0f,
-  0xd7, 0x7c, 0x52, 0xc1, 0x2e, 0x69, 0x23, 0x59, 0xf8, 0xe5, 0x7e, 0xe9,
-  0x36, 0x31, 0xeb, 0x69, 0x1b, 0x37, 0xbd, 0xda, 0x3d, 0xa5, 0xee, 0x6b,
-  0xa3, 0x36, 0x98, 0xcb, 0x75, 0x5a, 0x5f, 0x1b, 0x79, 0xa8, 0x96, 0x93,
-  0x9d, 0xcf, 0x0d, 0xcd, 0xdc, 0xd2, 0xfe, 0x2e, 0xb2, 0x6c, 0x3a, 0x4c,
-  0x4e, 0x2f, 0x89, 0xab, 0x56, 0x66, 0xd0, 0x0d, 0xbe, 0x26, 0x46, 0x6f,
-  0xd6, 0x6d, 0x0a, 0xb9, 0xda, 0x1e, 0x2d, 0x1e, 0x8a, 0xc7, 0xb1, 0x89,
-  0xd2, 0xcc, 0x62, 0x27, 0xc4, 0xe5, 0x66, 0xed, 0x5b, 0x01, 0xe7, 0xd0,
-  0x70, 0x6f, 0x1a, 0xde, 0x38, 0x4b, 0x40, 0x89, 0xe3, 0xac, 0xb9, 0xcb,
-  0x32, 0xdb, 0x5c, 0x9d, 0x99, 0x9b, 0x88, 0x36, 0x8d, 0x85, 0x31, 0x30,
-  0x43, 0x5a, 0xda, 0xb3, 0xf3, 0xd3, 0xaf, 0xcf, 0x8f, 0x46, 0xa3, 0xe4,
-  0xcd, 0xd1, 0xc5, 0xd1, 0x79, 0x6b, 0xa5, 0x8b, 0xb2, 0x9a, 0x63, 0x47,
-  0xa7, 0x79, 0xbd, 0x98, 0xa5, 0xf7, 0xb4, 0xd5, 0x66, 0x26, 0x57, 0x15,
-  0x9d, 0xac, 0x79, 0x46, 0xb7, 0xc2, 0x74, 0x09, 0x4e, 0x96, 0x94, 0x86,
-  0x3f, 0xa4, 0x22, 0x84, 0x12, 0x33, 0x81, 0xe4, 0x5a, 0x5c, 0xb9, 0x95,
-  0x36, 0x1c, 0x47, 0x2e, 0x37, 0xba, 0xdd, 0xec, 0x7e, 0x90, 0x34, 0x08,
-  0x7d, 0xa3, 0xef, 0x3e, 0xe3, 0x65, 0xaa, 0x31, 0x27, 0x43, 0xb3, 0xf9,
-  0x1c, 0xcc, 0xce, 0xfc, 0x74, 0x02, 0x60, 0x76, 0x69, 0xa4, 0x5f, 0x73,
-  0xe1, 0xb1, 0xf0, 0xde, 0x1d, 0x93, 0x8e, 0xd6, 0x8a, 0xac, 0x86, 0x0c,
-  0x89, 0x35, 0x53, 0x83, 0x3c, 0x14, 0xee, 0xc1, 0x32, 0x31, 0x23, 0x26,
-  0x10, 0xef, 0x93, 0xc7, 0x16, 0x34, 0x84, 0xcc, 0xec, 0xec, 0x94, 0x9b,
-  0xaf, 0x97, 0x97, 0x38, 0xc8, 0xc9, 0x86, 0x11, 0x96, 0xdf, 0x18, 0x05,
-  0xc6, 0x28, 0x11, 0xfd, 0xe4, 0x6c, 0x13, 0xef, 0xed, 0x6c, 0xef, 0xee,
-  0x31, 0x23, 0x18, 0x6a, 0x73, 0xaf, 0x3d, 0x46, 0xbc, 0x73, 0x43, 0xdb,
-  0xcb, 0x0f, 0x51, 0xe3, 0xc3, 0x64, 0xe7, 0x0d, 0x7f, 0xb2, 0xf7, 0xf9,
-  0xd3, 0xcf, 0x9e, 0xc9, 0x87, 0x6d, 0x02, 0xb7, 0xe3, 0x07, 0x75, 0x40,
-  0x19, 0x23, 0xed, 0xcc, 0x8c, 0xc4, 0xcc, 0x6e, 0x9e, 0x17, 0xe6, 0x98,
-  0x98, 0x63, 0x25, 0xbc, 0x8a, 0xe8, 0xd9, 0x0c, 0xfe, 0x92, 0x39, 0x9b,
-  0xec, 0x6b, 0x5b, 0xcb, 0x33, 0x2f, 0x1b, 0x92, 0x35, 0xbc, 0xdc, 0x6e,
-  0x12, 0x56, 0xc2, 0x1c, 0x30, 0xba, 0x75, 0xc6, 0xc4, 0x60, 0x49, 0xd5,
-  0x31, 0x32, 0x69, 0x16, 0xed, 0xcd, 0xde, 0x8a, 0xe6, 0x0d, 0x33, 0x36,
-  0x73, 0x27, 0xd2, 0x35, 0x17, 0xae, 0xbb, 0x61, 0x05, 0xe0, 0x90, 0x77,
-  0x79, 0x0d, 0xd6, 0x70, 0x57, 0x2e, 0x67, 0x46, 0xb1, 0xa0, 0x07, 0x96,
-  0x0b, 0xbc, 0x60, 0xba, 0x5a, 0x38, 0x1e, 0x30, 0xcf, 0x3f, 0x10, 0xed,
-  0x74, 0x5b, 0x31, 0x43, 0x33, 0x7f, 0x2e, 0x0c, 0x29, 0xf1, 0x70, 0x86,
-  0xdd, 0x1b, 0x02, 0xbc, 0x2f, 0xa0, 0x44, 0x3a, 0xf3, 0x60, 0xda, 0x67,
-  0xa7, 0xa3, 0x0b, 0x92, 0x00, 0xce, 0xde, 0x5d, 0x98, 0x86, 0x8c, 0x08,
-  0x50, 0x37, 0x86, 0x28, 0xe9, 0xc5, 0x22, 0x83, 0x56, 0xa7, 0xcd, 0x19,
-  0xda, 0xcb, 0xc1, 0xa8, 0x20, 0xd6, 0x68, 0x97, 0x3c, 0x46, 0x56, 0x7b,
-  0xe9, 0x08, 0xaa, 0xd2, 0xcb, 0x77, 0xb8, 0x7b, 0x29, 0xd9, 0xf8, 0x62,
-  0xd3, 0x10, 0xed, 0xc0, 0x36, 0xf7, 0x23, 0x3d, 0x0d, 0xd9, 0xa3, 0xce,
-  0xe7, 0xf9, 0x2c, 0xf5, 0x84, 0x2b, 0xe1, 0xa7, 0x74, 0x3a, 0x2d, 0x57,
-  0x99, 0x18, 0x9a, 0xc1, 0xa0, 0x9d, 0x6e, 0x47, 0x2b, 0x08, 0x9e, 0xe4,
-  0x36, 0x6a, 0x4a, 0xe2, 0x00, 0x44, 0xd8, 0x45, 0x6e, 0x17, 0x8e, 0x76,
-  0x8c, 0x98, 0x55, 0x6b, 0x99, 0xba, 0xbb, 0x16, 0x2c, 0x1b, 0xdd, 0x47,
-  0x30, 0x1e, 0xd8, 0x85, 0xeb, 0x8d, 0xd3, 0xaa, 0x67, 0xf9, 0x30, 0x6b,
-  0xf4, 0xa6, 0xd1, 0xab, 0xa5, 0x19, 0x3c, 0xaf, 0x6a, 0x3f, 0x19, 0xfc,
-  0x9e, 0x46, 0x4e, 0x8a, 0x9d, 0xe5, 0x4b, 0x46, 0x61, 0x30, 0x47, 0x63,
-  0xed, 0x14, 0x06, 0x05, 0x6b, 0x7d, 0x38, 0x65, 0xbb, 0x43, 0xc2, 0x97,
-  0x18, 0x2b, 0x32, 0x09, 0x9b, 0x0a, 0x8c, 0xe0, 0x78, 0x67, 0x68, 0x30,
-  0x35, 0x4b, 0x68, 0x0e, 0xc0, 0x1b, 0x1a, 0xba, 0x74, 0x26, 0xc6, 0x0a,
-  0xec, 0x93, 0x59, 0x56, 0x33, 0x2b, 0x7b, 0x26, 0xa7, 0xd3, 0x9c, 0xbe,
-  0x33, 0xc4, 0x6e, 0xae, 0x9b, 0x65, 0x06, 0xd9, 0x5c, 0xe6, 0x38, 0x77,
-  0x73, 0xc3, 0xf9, 0xbc, 0x36, 0xb2, 0x7d, 0xd2, 0x63, 0xb6, 0x38, 0xa0,
-  0x6e, 0x7a, 0xb4, 0xb0, 0xf3, 0x4e, 0x27, 0x66, 0x2e, 0x53, 0xb9, 0x72,
-  0xe5, 0x74, 0x9a, 0xed, 0x9b, 0xa7, 0xf7, 0xbe, 0x10, 0x0d, 0xc6, 0x89,
-  0x91, 0x97, 0x95, 0x95, 0x3e, 0xcc, 0xfd, 0xb6, 0x20, 0xc9, 0x46, 0x18,
-  0x2a, 0x6e, 0x26, 0x9c, 0x9f, 0x9a, 0x87, 0xd6, 0x37, 0xa2, 0x1b, 0x3d,
-  0x79, 0x75, 0xad, 0x8f, 0x7a, 0xb7, 0x5c, 0x6a, 0xe6, 0x46, 0x9c, 0x9a,
-  0xf4, 0xcd, 0xa9, 0x32, 0xe1, 0xb2, 0x62, 0xce, 0x32, 0x2b, 0x89, 0x77,
-  0xf6, 0x58, 0x80, 0x94, 0x91, 0x63, 0xe8, 0x44, 0x58, 0x03, 0xec, 0x2a,
-  0xfd, 0xa9, 0xcd, 0xd9, 0x61, 0xcb, 0x72, 0xd5, 0x8f, 0x0e, 0xcd, 0x2d,
-  0xd4, 0x08, 0x8b, 0x64, 0xee, 0xb1, 0x9a, 0xc8, 0x4a, 0xd7, 0x1d, 0xd4,
-  0x66, 0xee, 0x9d, 0xf5, 0x86, 0x0f, 0x07, 0x74, 0x90, 0xce, 0xca, 0xd7,
-  0x50, 0x0b, 0xe4, 0x56, 0xb1, 0x33, 0x33, 0x33, 0x9a, 0xe6, 0x86, 0x31,
-  0x9b, 0xdb, 0x41, 0x77, 0xc6, 0xa9, 0x4b, 0x11, 0x89, 0xf4, 0x3e, 0xd0,
-  0x2f, 0x48, 0xe7, 0xf7, 0xef, 0x07, 0x1d, 0xd3, 0xe0, 0xd4, 0xec, 0xd4,
-  0x09, 0xe6, 0x31, 0xb8, 0x4d, 0xe8, 0x34, 0x18, 0x19, 0x9e, 0x8e, 0xc6,
-  0xe0, 0xf4, 0xe4, 0xd6, 0xa3, 0x6a, 0xd2, 0x6c, 0x0b, 0x12, 0x1a, 0xfa,
-  0xb0, 0x1e, 0x8c, 0xcb, 0xd2, 0xa8, 0x91, 0x6e, 0x6a, 0xc4, 0x9c, 0xb3,
-  0x82, 0x98, 0x95, 0xec, 0xe8, 0x60, 0xc0, 0x5f, 0xa1, 0xe5, 0x7b, 0xa3,
-  0xbb, 0xa4, 0x57, 0x69, 0x6e, 0xe9, 0x4d, 0x18, 0x9b, 0x7d, 0xb6, 0x28,
-  0xe5, 0x71, 0xda, 0x29, 0x12, 0x47, 0x84, 0x87, 0x2c, 0x71, 0x6b, 0x67,
-  0x34, 0x2f, 0xc3, 0x04, 0x70, 0x92, 0xa5, 0x59, 0xc8, 0x70, 0xda, 0xdc,
-  0x18, 0x52, 0x2b, 0x09, 0x80, 0xe0, 0x84, 0x10, 0xe7, 0x4c, 0x93, 0xbd,
-  0x61, 0xf2, 0x4d, 0x79, 0x97, 0xc1, 0x96, 0x06, 0x61, 0x3b, 0x27, 0x6b,
-  0x90, 0x91, 0xcb, 0xee, 0xb2, 0x64, 0x6e, 0xe4, 0x40, 0xb3, 0x9a, 0x10,
-  0x05, 0xf0, 0x99, 0x19, 0xa7, 0x53, 0x20, 0xca, 0x3b, 0x74, 0x6b, 0x27,
-  0x61, 0x77, 0xf2, 0x92, 0x4f, 0x44, 0xb2, 0x01, 0x51, 0x63, 0x42, 0x8b,
-  0xb5, 0x68, 0xdc, 0x2c, 0xec, 0x7a, 0x18, 0xb6, 0x59, 0x7b, 0x87, 0x8b,
-  0xee, 0x5d, 0xba, 0xf2, 0x3e, 0x1b, 0xee, 0x3c, 0x1f, 0x6e, 0x0f, 0x49,
-  0x31, 0xc8, 0x6e, 0xf3, 0x72, 0x59, 0x9b, 0xde, 0x31, 0x94, 0xc4, 0x7b,
-  0x33, 0xa3, 0x0b, 0xb2, 0x29, 0xaf, 0xae, 0x66, 0x2c, 0x86, 0x6c, 0x95,
-  0x97, 0x97, 0x9e, 0xa4, 0x52, 0x65, 0x0b, 0x56, 0x48, 0x68, 0x71, 0xe4,
-  0xd0, 0x31, 0x8f, 0xf3, 0x45, 0x14, 0x59, 0x4e, 0xa7, 0xde, 0x0f, 0x7e,
-  0x6f, 0x36, 0x7a, 0xa0, 0xdc, 0x68, 0x60, 0x98, 0x51, 0xc7, 0x56, 0xfa,
-  0x86, 0x6c, 0x4a, 0xfe, 0x95, 0xe8, 0x58, 0x17, 0x8b, 0x9d, 0x39, 0x48,
-  0xcb, 0x7e, 0x68, 0x5a, 0x48, 0x2c, 0x3b, 0xf3, 0x2c, 0x55, 0x1e, 0x91,
-  0x19, 0xe6, 0x54, 0x4c, 0xd3, 0x6a, 0xda, 0x87, 0xc1, 0xcb, 0x3c, 0x4c,
-  0xa7, 0x2d, 0x65, 0x72, 0xef, 0x33, 0xcf, 0x73, 0x24, 0x36, 0xd8, 0xa7,
-  0x01, 0xfa, 0x46, 0x01, 0xe5, 0x3a, 0xe6, 0x2a, 0xa8, 0x79, 0x64, 0x22,
-  0x50, 0xa7, 0x4e, 0xbe, 0x72, 0xcc, 0x5b, 0x55, 0xe6, 0xcb, 0x72, 0x36,
-  0x2b, 0xef, 0xe8, 0x12, 0x21, 0x91, 0xd8, 0xdb, 0x56, 0xdd, 0x8e, 0xba,
-  0x2e, 0x27, 0x39, 0x5b, 0xbc, 0x64, 0xd1, 0xa1, 0xe6, 0xc3, 0x3c, 0x4b,
-  0xaf, 0xd6, 0x72, 0xbb, 0x93, 0xf0, 0x5d, 0x67, 0x05, 0x8c, 0x1c, 0x6c,
-  0xb6, 0x80, 0x8d, 0xab, 0xd3, 0x9c, 0xbb, 0xf4, 0xf8, 0x48, 0x0a, 0x2b,
-  0x36, 0x23, 0xc9, 0x49, 0xab, 0xbc, 0x53, 0x93, 0x43, 0x3e, 0x71, 0xac,
-  0xd1, 0x3b, 0xaa, 0xfd, 0x4e, 0x73, 0xf5, 0xd2, 0xb4, 0x61, 0xd6, 0x7b,
-  0x9a, 0x93, 0x61, 0xd3, 0xe8, 0x80, 0x6c, 0xab, 0x64, 0x8d, 0xc5, 0xbc,
-  0x36, 0x59, 0xd6, 0x8d, 0x11, 0x97, 0xb5, 0x57, 0x6e, 0xca, 0xf4, 0x6b,
-  0x48, 0xf2, 0x80, 0xe8, 0xac, 0xd3, 0x9c, 0x21, 0xba, 0xcf, 0x86, 0x4f,
-  0x9e, 0x0d, 0xb7, 0x3d, 0x42, 0xd8, 0xa6, 0x75, 0x26, 0x05, 0x71, 0x67,
-  0xb8, 0xdd, 0x79, 0x7c, 0x83, 0xee, 0xf4, 0x4d, 0x5d, 0xf2, 0xd6, 0x9a,
-  0xe3, 0xb6, 0xd7, 0x73, 0x60, 0xde, 0xf4, 0x6f, 0x32, 0xbe, 0xb3, 0x73,
-  0x67, 0x57, 0xb3, 0xbd, 0x9b, 0x1d, 0x2e, 0x20, 0xd4, 0xf2, 0x7d, 0x68,
-  0xee, 0xf3, 0x7d, 0x6e, 0x69, 0x67, 0xb8, 0xe3, 0x6d, 0xbd, 0x0c, 0x67,
-  0x27, 0x3e, 0x9c, 0x90, 0x00, 0x3a, 0x83, 0xd9, 0x51, 0xd1, 0x9f, 0x25,
-  0x25, 0xdb, 0x6f, 0xa7, 0x39, 0x55, 0x38, 0xe5, 0x45, 0x5d, 0x32, 0x59,
-  0xa4, 0x27, 0xad, 0x45, 0xc2, 0x88, 0x76, 0x3f, 0x62, 0x79, 0x40, 0x26,
-  0xb9, 0xd1, 0x15, 0xa9, 0x5f, 0xb3, 0x21, 0x6e, 0x6b, 0x78, 0x55, 0x30,
-  0xd4, 0x5d, 0x1e, 0x60, 0x84, 0x74, 0x70, 0xb1, 0xe0, 0x62, 0xa0, 0x91,
-  0x2f, 0xcd, 0xbd, 0x55, 0xcd, 0xa0, 0xfb, 0xa9, 0xc5, 0xd6, 0x30, 0x12,
-  0xc3, 0xdf, 0xf2, 0x59, 0x23, 0x04, 0xc9, 0xc6, 0x35, 0xea, 0x6b, 0xd8,
-  0x1d, 0xdd, 0x63, 0xb3, 0x31, 0xa7, 0x3f, 0x2f, 0xab, 0xc1, 0x4d, 0x51,
-  0xde, 0x19, 0xd6, 0x72, 0x95, 0xfd, 0x9a, 0xd9, 0x15, 0x46, 0x05, 0xbb,
-  0x38, 0x19, 0xf1, 0xb4, 0xda, 0x53, 0xed, 0x34, 0x47, 0x4f, 0x6c, 0xed,
-  0xda, 0x7b, 0x1d, 0x7f, 0x9a, 0xad, 0x4a, 0xde, 0x2d, 0xae, 0xaa, 0x74,
-  0x9a, 0x89, 0xe2, 0x6b, 0xd7, 0x20, 0xc1, 0xe0, 0x92, 0x64, 0xd5, 0xe8,
-  0x58, 0x7d, 0x64, 0x7d, 0x82, 0x55, 0x44, 0x5d, 0x8b, 0x5a, 0xbb, 0xaa,
-  0x8d, 0x4e, 0x03, 0x63, 0x43, 0x7a, 0x97, 0xde, 0x0f, 0xd9, 0xd9, 0x61,
-  0xc7, 0xd8, 0x69, 0x8e, 0x8d, 0xee, 0x8d, 0x68, 0xec, 0xd2, 0x80, 0xcf,
-  0xb3, 0xcc, 0xc2, 0xdf, 0xcb, 0x59, 0x2e, 0xb2, 0xab, 0xb2, 0x11, 0x8e,
-  0xa1, 0xf6, 0x88, 0x4e, 0x73, 0x4a, 0x8b, 0x62, 0xd3, 0xa1, 0x15, 0xb2,
-  0x8a, 0xe9, 0x70, 0x2d, 0xbe, 0x32, 0xde, 0x5e, 0x16, 0x89, 0x5e, 0xaf,
-  0x89, 0x58, 0xa6, 0x1e, 0xa2, 0x8d, 0x4e, 0x73, 0x21, 0xa5, 0x98, 0x4d,
-  0xd3, 0xb6, 0xc9, 0xe0, 0xe5, 0x13, 0xc6, 0xde, 0xf3, 0x36, 0x61, 0x98,
-  0x6b, 0xb2, 0x58, 0x14, 0x9d, 0x16, 0x5f, 0xf1, 0xf5, 0x8c, 0x6e, 0xdf,
-  0x9e, 0xbd, 0xc5, 0x74, 0x0c, 0x5f, 0xce, 0x0a, 0x3e, 0x36, 0xf4, 0x11,
-  0x2c, 0x16, 0x7a, 0xe3, 0xc3, 0xcc, 0xae, 0xa7, 0xcb, 0xa8, 0x47, 0x2b,
-  0x06, 0xe8, 0x8d, 0x50, 0x0d, 0x5e, 0xe4, 0x53, 0x31, 0x5f, 0x57, 0x69,
-  0x75, 0xcf, 0x33, 0xb5, 0x7b, 0x6a, 0x3a, 0xe1, 0x9e, 0x82, 0x63, 0xc3,
-  0xfa, 0x36, 0x99, 0x4c, 0xb5, 0xe1, 0xf6, 0x9b, 0x7c, 0xe2, 0x68, 0x11,
-  0xec, 0xc6, 0xe9, 0x67, 0xf4, 0xd0, 0xa0, 0xd3, 0x1c, 0x96, 0x09, 0xe3,
-  0xc1, 0xf6, 0x33, 0x6d, 0x89, 0xa6, 0x4d, 0xc7, 0xa6, 0x36, 0x9f, 0xd5,
-  0x35, 0xae, 0x89, 0xb5, 0x87, 0x4e, 0xdc, 0xb3, 0x60, 0x61, 0xd3, 0xd9,
-  0xca, 0x95, 0x65, 0x42, 0x3e, 0x38, 0xa1, 0x95, 0xec, 0xac, 0x2e, 0x3e,
-  0x34, 0xab, 0xab, 0x8b, 0xeb, 0xb4, 0xcf, 0xd5, 0x2b, 0xfb, 0x4b, 0x16,
-  0x16, 0x1d, 0x0c, 0xf9, 0x47, 0x97, 0x5f, 0xd7, 0xb2, 0xba, 0xd8, 0xd0,
-  0x5f, 0xbe, 0xbe, 0xc1, 0x5d, 0xb6, 0xf8, 0x34, 0x8b, 0xbb, 0x43, 0x37,
-  0x58, 0x33, 0xab, 0x6f, 0x83, 0x0b, 0xc3, 0x4c, 0x7b, 0x93, 0x4c, 0x02,
-  0x64, 0x87, 0xf6, 0x2f, 0x0c, 0x5a, 0x63, 0x77, 0x5f, 0x7c, 0x60, 0x1b,
-  0xb5, 0x0e, 0xdf, 0xda, 0x00, 0xd3, 0x80, 0x41, 0xcf, 0x4b, 0x33, 0x39,
-  0xbc, 0x2d, 0x83, 0x1f, 0x7a, 0xbe, 0x04, 0x08, 0x60, 0x2a, 0x47, 0xf3,
-  0x78, 0x86, 0xdb, 0x76, 0x68, 0xc3, 0x9d, 0xee, 0xdd, 0x0e, 0x21, 0x5b,
-  0xbe, 0xc4, 0xfa, 0x19, 0xf9, 0xb1, 0xa9, 0xca, 0x99, 0x65, 0x19, 0x3a,
-  0x42, 0x48, 0x4b, 0xe6, 0xc6, 0x9c, 0x18, 0xdd, 0xde, 0xdc, 0x9d, 0x1b,
-  0x64, 0x70, 0xf0, 0x0c, 0xdc, 0xaa, 0x64, 0x98, 0x2d, 0x1e, 0xa7, 0x93,
-  0x1b, 0x12, 0x51, 0x72, 0xf1, 0xaf, 0xe8, 0x1e, 0xb1, 0x18, 0x91, 0xcc,
-  0x8c, 0xe0, 0x42, 0x3e, 0x52, 0xed, 0x69, 0xd3, 0xbb, 0x73, 0x77, 0x69,
-  0xa4, 0x75, 0x3d, 0xbb, 0xdd, 0x8d, 0x2e, 0xa2, 0xae, 0x62, 0x6b, 0x19,
-  0xa9, 0x4b, 0x1d, 0xe4, 0xee, 0x2f, 0x5b, 0x44, 0x7a, 0x55, 0x97, 0x70,
-  0x54, 0x1a, 0xd9, 0x2f, 0x9f, 0xeb, 0x1e, 0xe5, 0xf6, 0x86, 0xd3, 0xcb,
-  0x82, 0x9e, 0xbe, 0x5d, 0x7d, 0x5c, 0x87, 0xf2, 0x7d, 0x4e, 0xee, 0xd0,
-  0x69, 0x06, 0x2b, 0xa8, 0x39, 0x3d, 0x53, 0xb8, 0x3b, 0x8d, 0x5c, 0x92,
-  0x99, 0x66, 0xb3, 0x64, 0x83, 0x7c, 0xaa, 0xe4, 0x42, 0x7c, 0xb6, 0xf3,
-  0xd9, 0x33, 0x7f, 0xe6, 0x4f, 0x74, 0xe6, 0x4f, 0x7e, 0xdd, 0xcc, 0x9f,
-  0x7c, 0xea, 0x99, 0x3f, 0x79, 0x64, 0xe6, 0x4f, 0x3e, 0x76, 0xe6, 0x9f,
-  0x3d, 0x7d, 0xf6, 0xb9, 0x3f, 0xf3, 0x3d, 0x9a, 0x79, 0xbe, 0xb8, 0xdd,
-  0xeb, 0x8a, 0xd8, 0x90, 0x7e, 0x45, 0xd9, 0x69, 0x5a, 0xe2, 0x96, 0xb9,
-  0x83, 0xca, 0xd9, 0x6d, 0x26, 0x12, 0xa8, 0xf9, 0xe0, 0xf8, 0xec, 0x76,
-  0x8f, 0x74, 0x1a, 0x52, 0x02, 0x32, 0x36, 0xa6, 0xc6, 0x08, 0x9d, 0xcc,
-  0x28, 0xbe, 0x4a, 0x4a, 0x26, 0x7d, 0xf2, 0x80, 0x78, 0xa3, 0x79, 0x26,
-  0xa3, 0x79, 0x16, 0x1b, 0xcd, 0x47, 0x0f, 0xe6, 0x99, 0x37, 0x98, 0x5f,
-  0x3a, 0x9a, 0x3d, 0x6f, 0x34, 0x29, 0x8d, 0x26, 0x5d, 0x90, 0xaf, 0xba,
-  0x4b, 0x16, 0xaf, 0xcd, 0x7d, 0x4d, 0xe1, 0x0e, 0x9b, 0xea, 0xf9, 0x12,
-  0xcf, 0x5f, 0x61, 0xc3, 0x04, 0xa0, 0x5b, 0x92, 0x57, 0x5e, 0xc6, 0xca,
-  0xed, 0x88, 0x05, 0xa5, 0x2b, 0xc9, 0xa4, 0x15, 0x39, 0xf3, 0x60, 0x29,
-  0xf7, 0xf4, 0x27, 0xf3, 0x3f, 0x43, 0x22, 0xd6, 0x59, 0x4d, 0x17, 0x37,
-  0x19, 0x93, 0xf8, 0xa6, 0x50, 0x4e, 0x44, 0x2f, 0x75, 0xa5, 0xda, 0x32,
-  0xab, 0xc9, 0xa4, 0x60, 0xe6, 0x96, 0x53, 0x98, 0x02, 0xa9, 0xc0, 0xd6,
-  0x5f, 0x69, 0x88, 0x98, 0xdd, 0x57, 0xc4, 0xb7, 0xde, 0x52, 0x13, 0x22,
-  0x4f, 0x98, 0xe1, 0x5e, 0xce, 0xd2, 0xab, 0xf0, 0x76, 0xcd, 0xaf, 0x8a,
-  0x52, 0xa2, 0x06, 0x6a, 0x43, 0xac, 0x08, 0xf3, 0x10, 0xf2, 0xad, 0x0d,
-  0x27, 0x2a, 0x26, 0xb3, 0x25, 0xbc, 0xc7, 0xa7, 0x66, 0x82, 0xa3, 0xd1,
-  0x37, 0x3e, 0x75, 0x1d, 0xd0, 0x0a, 0x92, 0xba, 0x32, 0x48, 0xaf, 0x48,
-  0x73, 0x79, 0xc1, 0x3f, 0x8c, 0x58, 0x66, 0x5e, 0xf8, 0x22, 0x2e, 0x6d,
-  0x8e, 0xc4, 0x3e, 0x01, 0x4f, 0x18, 0xbd, 0x7a, 0xe0, 0xbd, 0x03, 0x41,
-  0xc6, 0xad, 0x23, 0xdf, 0x32, 0x72, 0x94, 0xba, 0xcc, 0x90, 0xc6, 0x6a,
-  0x66, 0x9c, 0x4e, 0x49, 0xa5, 0x66, 0xeb, 0x7e, 0x72, 0xf8, 0xf5, 0x31,
-  0xb9, 0xf7, 0xd2, 0x7c, 0xc6, 0x46, 0x5b, 0x4c, 0xdb, 0xac, 0x61, 0x36,
-  0x23, 0x7d, 0x9c, 0x57, 0xad, 0xce, 0x5a, 0x8e, 0x2c, 0xf9, 0xaf, 0xf7,
-  0xa6, 0xfc, 0x87, 0x59, 0xc2, 0x74, 0x6b, 0x6f, 0xb8, 0xdd, 0x33, 0xc2,
-  0x7b, 0x69, 0xae, 0xe3, 0x49, 0x39, 0xcd, 0x92, 0xf1, 0x2c, 0x2d, 0x6e,
-  0x6a, 0x16, 0xd9, 0x58, 0x18, 0xc5, 0x48, 0xfb, 0x74, 0x62, 0xab, 0xaa,
-  0x5c, 0x8a, 0xd1, 0xbb, 0x7b, 0x13, 0xf2, 0x74, 0x44, 0x9e, 0x14, 0x97,
-  0x02, 0xfb, 0x30, 0x0d, 0xd5, 0x54, 0x37, 0xea, 0xbb, 0xa0, 0x5b, 0x05,
-  0xf2, 0xdf, 0x38, 0xc3, 0xc0, 0xf4, 0xe6, 0xec, 0x34, 0x37, 0xf8, 0x06,
-  0x2a, 0x9c, 0x21, 0x1c, 0x32, 0xb8, 0xf3, 0x41, 0x29, 0xd5, 0xcd, 0x11,
-  0x5c, 0xa4, 0xc7, 0x97, 0x3c, 0x71, 0x79, 0x30, 0xaf, 0x99, 0x80, 0x55,
-  0xa9, 0x05, 0x3b, 0xe2, 0xa8, 0x93, 0x59, 0x5a, 0x37, 0x30, 0x22, 0x82,
-  0x7c, 0xc4, 0x08, 0xe5, 0xab, 0x69, 0x69, 0x71, 0x4f, 0x51, 0x33, 0x1f,
-  0xa3, 0xa6, 0x5d, 0xe6, 0x57, 0xc4, 0x8a, 0x60, 0xd2, 0x43, 0xa0, 0x8d,
-  0xc6, 0xd7, 0x90, 0xde, 0x7f, 0x5d, 0x82, 0xc0, 0x8c, 0x46, 0x91, 0xcd,
-  0x2e, 0x63, 0xe7, 0x15, 0x3c, 0x17, 0x63, 0x82, 0x75, 0x44, 0xf8, 0x1a,
-  0x0d, 0x8d, 0xad, 0xa6, 0x38, 0x0d, 0x14, 0x97, 0x91, 0x4c, 0x66, 0x69,
-  0x3e, 0xaf, 0x3d, 0x91, 0x77, 0x18, 0xe3, 0x26, 0x64, 0xda, 0xa7, 0xb7,
-  0xc7, 0xe4, 0x74, 0xaa, 0x6a, 0x32, 0xc3, 0xd1, 0x86, 0xa4, 0xaa, 0x1e,
-  0xb0, 0x4b, 0xe7, 0x3a, 0x9b, 0xdc, 0x80, 0xec, 0x3c, 0x13, 0x75, 0x97,
-  0x0b, 0xf3, 0xaa, 0x93, 0xba, 0xdf, 0x5c, 0x2f, 0x49, 0x6d, 0x29, 0x8d,
-  0xfc, 0x42, 0x8e, 0x6b, 0x72, 0xc4, 0x2c, 0x27, 0xd8, 0x66, 0xf2, 0xe4,
-  0x7e, 0x30, 0xca, 0x88, 0xb9, 0x22, 0x1a, 0x04, 0x35, 0x81, 0x30, 0x06,
-  0x86, 0x08, 0x16, 0xab, 0x46, 0x27, 0x72, 0x57, 0x8b, 0x1f, 0xd4, 0xe2,
-  0x2b, 0x83, 0x1b, 0x4a, 0x8d, 0x08, 0x9d, 0xd5, 0xec, 0x34, 0xc7, 0x6b,
-  0xdb, 0x27, 0x4f, 0x6c, 0x4e, 0xc6, 0x08, 0x67, 0x08, 0x34, 0x5a, 0x8e,
-  0x98, 0xa9, 0xc6, 0x69, 0x9d, 0x4f, 0x88, 0x80, 0xa6, 0xf9, 0x55, 0x46,
-  0x1c, 0xc3, 0x08, 0xab, 0xcd, 0x6c, 0xde, 0x8f, 0xd8, 0x4a, 0xc8, 0x1e,
-  0x23, 0x22, 0x5e, 0x40, 0x56, 0x8e, 0x9b, 0xb0, 0xa2, 0x6b, 0xa9, 0x43,
-  0x8d, 0xef, 0xbe, 0x29, 0x36, 0x67, 0xab, 0x38, 0x8d, 0x42, 0x78, 0x66,
-  0x97, 0xef, 0xc0, 0x0b, 0x68, 0x0e, 0x8a, 0x61, 0x2e, 0x7d, 0x3a, 0x21,
-  0x13, 0x78, 0x35, 0xc8, 0x62, 0xac, 0xe6, 0x6a, 0xb5, 0xbb, 0xe3, 0x6c,
-  0x90, 0x43, 0xf6, 0x2e, 0x9f, 0x64, 0xea, 0x13, 0x2f, 0x22, 0xe6, 0xa7,
-  0xc9, 0x2c, 0xa7, 0xe7, 0xe6, 0xcb, 0x1a, 0x7e, 0x3a, 0x56, 0x69, 0xe8,
-  0x12, 0xb9, 0xcb, 0xc9, 0xdb, 0x74, 0xcc, 0xb6, 0x33, 0x98, 0x62, 0xeb,
-  0x6b, 0xb8, 0x4f, 0xd2, 0x2a, 0x87, 0xbf, 0x36, 0x68, 0x8e, 0xc7, 0x4c,
-  0xd3, 0xc4, 0x38, 0x65, 0x98, 0x50, 0xcb, 0xd8, 0x99, 0xe0, 0xec, 0x50,
-  0x38, 0x3b, 0xc4, 0x73, 0xbc, 0x83, 0x33, 0xa6, 0x45, 0xe6, 0x70, 0xb1,
-  0xe4, 0x05, 0x5d, 0x5e, 0x2f, 0x69, 0x32, 0x2b, 0x58, 0x62, 0x72, 0x06,
-  0x37, 0xf1, 0x75, 0xdb, 0xd3, 0xe0, 0xf1, 0x3e, 0xb6, 0xc7, 0x71, 0x73,
-  0xf0, 0xa9, 0xe7, 0x75, 0x5c, 0x5e, 0x30, 0x24, 0x35, 0xbb, 0x77, 0x2d,
-  0x2d, 0x9c, 0xd1, 0xd1, 0xec, 0x4d, 0x96, 0xdf, 0x6a, 0x7c, 0x86, 0x27,
-  0x9b, 0x23, 0xa0, 0x25, 0xe9, 0x8d, 0xb2, 0xa6, 0xdb, 0xdc, 0x21, 0xfa,
-  0xdb, 0xef, 0x25, 0x5e, 0x64, 0x0c, 0xb7, 0x2b, 0x8b, 0x37, 0xce, 0x54,
-  0xfd, 0x65, 0x33, 0x5f, 0xd2, 0xa3, 0xb0, 0xca, 0x9d, 0x97, 0xdf, 0x1d,
-  0x9c, 0xbc, 0x3b, 0xda, 0xf9, 0x4b, 0x97, 0x7c, 0xcc, 0x77, 0xbb, 0xfc,
-  0xdd, 0x6e, 0x2f, 0xc6, 0xb3, 0x8a, 0x32, 0x59, 0x7f, 0xb9, 0x9e, 0xd4,
-  0xf7, 0xf3, 0x71, 0x39, 0xb3, 0x5c, 0x4b, 0x7a, 0xa0, 0x21, 0xf4, 0xc5,
-  0xa9, 0xa6, 0x01, 0x1a, 0x29, 0xe2, 0x2b, 0x71, 0x45, 0x76, 0xc7, 0x8e,
-  0x10, 0x01, 0xd8, 0x32, 0x60, 0x51, 0x26, 0x1a, 0x48, 0xa7, 0xfe, 0x7a,
-  0xd4, 0x0d, 0x2e, 0x3d, 0xd9, 0x22, 0x6a, 0x9d, 0xfd, 0xd2, 0x7d, 0x3e,
-  0x48, 0x5d, 0x76, 0x6e, 0x27, 0xec, 0xc6, 0x94, 0x5b, 0x55, 0x86, 0x88,
-  0xbd, 0xa1, 0xa8, 0x21, 0xb3, 0x06, 0x64, 0x98, 0x7b, 0x57, 0x33, 0x4f,
-  0xa1, 0x53, 0xce, 0xe7, 0xb3, 0xcb, 0xf0, 0xa0, 0xf1, 0x93, 0x4b, 0xff,
-  0x36, 0x25, 0x97, 0x28, 0x5f, 0x2c, 0x32, 0x16, 0x73, 0xf1, 0x5c, 0x91,
-  0x41, 0x97, 0x0f, 0xb4, 0x8b, 0xfe, 0x03, 0x9f, 0xa5, 0x23, 0x56, 0x85,
-  0x36, 0x3f, 0x73, 0xee, 0xa8, 0x4b, 0x89, 0x4f, 0xa4, 0x90, 0x53, 0x99,
-  0x07, 0xce, 0x93, 0x19, 0x36, 0xd9, 0x26, 0xee, 0xe5, 0x50, 0xae, 0x57,
-  0x99, 0x9c, 0x60, 0xf6, 0x8f, 0x77, 0x49, 0xdf, 0x34, 0x36, 0xce, 0x0b,
-  0xa6, 0x6d, 0x67, 0xdc, 0x4c, 0x06, 0x27, 0x44, 0xd3, 0xb3, 0x52, 0x98,
-  0xba, 0x33, 0xdf, 0x4b, 0x0c, 0x80, 0xd0, 0x40, 0xd4, 0x2e, 0xcc, 0x41,
-  0x02, 0xb2, 0x0b, 0x3a, 0x4a, 0x3e, 0x58, 0x76, 0x65, 0x17, 0x86, 0xaf,
-  0x17, 0x4c, 0xf5, 0xc2, 0x72, 0x8d, 0x78, 0xbe, 0x8a, 0x2a, 0xcd, 0xfe,
-  0xdd, 0xcf, 0xb2, 0xcd, 0x44, 0x4c, 0xc0, 0x6f, 0xb3, 0x06, 0x81, 0x34,
-  0x5b, 0x72, 0x8b, 0xeb, 0x5a, 0x7a, 0x03, 0x0b, 0x28, 0x0e, 0x21, 0x8c,
-  0x1c, 0xc8, 0xe9, 0x82, 0x00, 0x98, 0x63, 0xfa, 0xa7, 0x57, 0xc3, 0x07,
-  0xb0, 0xf1, 0x88, 0xdd, 0x5b, 0x2c, 0x8d, 0xa4, 0xf6, 0xb6, 0x0c, 0x56,
-  0x8d, 0x67, 0xa5, 0x37, 0x29, 0xc9, 0x75, 0x46, 0xc5, 0xd7, 0xd3, 0x4c,
-  0x1d, 0x41, 0xac, 0x00, 0xe1, 0xb9, 0x48, 0x52, 0x7b, 0xef, 0x75, 0x19,
-  0xf1, 0xc4, 0x8d, 0x61, 0xf0, 0xb7, 0x54, 0x6f, 0xfd, 0x60, 0x16, 0x47,
-  0x1f, 0xb2, 0x8a, 0xb4, 0x46, 0x62, 0xfa, 0x4b, 0xde, 0x32, 0xeb, 0xad,
-  0x86, 0xe3, 0x9d, 0x77, 0xba, 0x25, 0x10, 0x20, 0x20, 0x55, 0x42, 0x2c,
-  0xba, 0x9b, 0xa5, 0x81, 0x1c, 0x20, 0x9c, 0x72, 0x62, 0x88, 0x6e, 0x68,
-  0x5d, 0x9c, 0xea, 0x9c, 0x69, 0x9d, 0x72, 0x59, 0xde, 0x3e, 0x6d, 0x45,
-  0x40, 0x4a, 0xa9, 0xae, 0xb0, 0xbd, 0xdd, 0x13, 0xda, 0x52, 0xd9, 0x43,
-  0xa1, 0x18, 0x1a, 0x0e, 0x3b, 0xc9, 0x5c, 0x6c, 0xdc, 0xb4, 0x9c, 0x1b,
-  0x6a, 0xe8, 0x87, 0xa4, 0xa4, 0x21, 0x7b, 0xba, 0x37, 0xb8, 0x18, 0x48,
-  0xd0, 0x27, 0xdf, 0x1a, 0xbf, 0x95, 0x6c, 0x18, 0x41, 0xc7, 0xcc, 0xf2,
-  0x92, 0xfc, 0xd6, 0xea, 0x50, 0x86, 0xc7, 0xaa, 0x7b, 0x03, 0xc1, 0x71,
-  0x90, 0x4d, 0x37, 0x93, 0x4e, 0x80, 0xc7, 0xbc, 0x9c, 0x32, 0x39, 0xc0,
-  0xe8, 0xc4, 0x8c, 0x72, 0x40, 0xe2, 0x99, 0x65, 0xc1, 0x97, 0x91, 0x2d,
-  0x93, 0x41, 0xc9, 0xf1, 0xf5, 0x0c, 0x3a, 0x29, 0x82, 0x5f, 0x85, 0xdf,
-  0x52, 0x34, 0xaa, 0x65, 0xe6, 0xea, 0xce, 0x81, 0x3f, 0x27, 0xc6, 0xc2,
-  0x30, 0xe3, 0x71, 0xd9, 0x5c, 0x5b, 0xba, 0xc2, 0x84, 0x69, 0x13, 0x93,
-  0xcb, 0x25, 0x05, 0xef, 0xba, 0xb8, 0x0e, 0x50, 0x1a, 0xd9, 0x6d, 0x38,
-  0x9a, 0x3c, 0xb0, 0x1c, 0xdd, 0xc0, 0x9b, 0x68, 0x66, 0x68, 0xc3, 0x93,
-  0xc8, 0x6c, 0x4e, 0xb7, 0x35, 0xf1, 0xf6, 0x52, 0xb5, 0x2a, 0x2c, 0x33,
-  0x6d, 0x17, 0xac, 0xc0, 0xb5, 0x08, 0xcc, 0x69, 0xa0, 0x84, 0x60, 0xa9,
-  0x21, 0x16, 0x7b, 0x5b, 0x9a, 0x6c, 0xb0, 0x9c, 0x85, 0x81, 0x60, 0xc8,
-  0xac, 0x40, 0x90, 0xa5, 0x62, 0x3c, 0xe0, 0x97, 0x6a, 0x3a, 0xb6, 0xa1,
-  0x89, 0xaf, 0x75, 0x90, 0x57, 0x1d, 0xda, 0xdf, 0x4e, 0xb4, 0xfd, 0x4a,
-  0x74, 0x97, 0x41, 0x5a, 0x4f, 0xf2, 0x3c, 0xa6, 0x00, 0x52, 0x5c, 0xfc,
-  0x66, 0x72, 0x84, 0x4d, 0x4c, 0x0e, 0x46, 0x87, 0xc7, 0xc7, 0x76, 0xad,
-  0x87, 0x1c, 0x73, 0x86, 0x80, 0x78, 0x61, 0xf4, 0x90, 0xb9, 0x98, 0xb1,
-  0x8f, 0xbb, 0x5b, 0x99, 0x91, 0x1f, 0x6c, 0xa2, 0x66, 0x36, 0x3e, 0x91,
-  0xe6, 0x71, 0x72, 0x57, 0x61, 0xa1, 0xcc, 0x26, 0xd4, 0xe2, 0xc5, 0xfc,
-  0x4b, 0x73, 0xbf, 0xc8, 0x5e, 0x1e, 0xf4, 0x86, 0xbe, 0x52, 0xdc, 0x25,
-  0xb4, 0x74, 0x49, 0xba, 0x2f, 0x5f, 0xc5, 0x10, 0x8c, 0x88, 0xad, 0x4c,
-  0x25, 0xd2, 0x44, 0x6e, 0x65, 0xf2, 0x1a, 0xcf, 0x49, 0x81, 0xb9, 0x84,
-  0xaf, 0xbd, 0x78, 0xb2, 0x6b, 0x6e, 0x56, 0x23, 0x6b, 0xce, 0x6b, 0x5f,
-  0xbe, 0x87, 0x68, 0xf8, 0xb1, 0x4e, 0x18, 0x66, 0xce, 0xc9, 0x57, 0xf4,
-  0x4e, 0x57, 0x2c, 0xf5, 0x6e, 0x8a, 0x15, 0x36, 0x35, 0x0a, 0xc4, 0xb3,
-  0x7e, 0xb7, 0x5c, 0x2f, 0x3d, 0xb5, 0x74, 0xb2, 0x54, 0xd7, 0xd9, 0xd9,
-  0x25, 0x79, 0x92, 0x02, 0x21, 0xc7, 0x50, 0xed, 0xcc, 0xd0, 0x69, 0x3f,
-  0x59, 0x16, 0xf4, 0xd3, 0xb2, 0xa6, 0x1c, 0xd3, 0x27, 0x9d, 0xba, 0xa2,
-  0x10, 0xcc, 0x96, 0xf8, 0x43, 0x34, 0x1c, 0x5d, 0x4b, 0xf6, 0x32, 0xe0,
-  0x50, 0x12, 0xb7, 0x72, 0x5e, 0xb8, 0x15, 0x4a, 0xcc, 0x86, 0xfa, 0xeb,
-  0x44, 0x86, 0x0e, 0xe4, 0x67, 0x95, 0xb1, 0xcd, 0xaa, 0x7b, 0xc2, 0xf4,
-  0x66, 0x40, 0xc9, 0xef, 0x6a, 0x44, 0xcb, 0x5c, 0x65, 0x88, 0x7a, 0xe4,
-  0x7b, 0x67, 0xa9, 0xfa, 0x34, 0x5b, 0x0e, 0x3f, 0x88, 0x03, 0xf7, 0xc3,
-  0x7d, 0xf0, 0xf6, 0x28, 0xcb, 0x98, 0xd8, 0xe4, 0x01, 0xde, 0x48, 0x6f,
-  0x67, 0xbb, 0xd7, 0xc7, 0x0b, 0xf0, 0x61, 0xe2, 0x29, 0x8f, 0xe9, 0xe5,
-  0xa5, 0x48, 0x0e, 0x78, 0xc1, 0x06, 0x04, 0x29, 0x1d, 0x70, 0x1c, 0x13,
-  0xf2, 0x09, 0xe4, 0x0e, 0xeb, 0xb2, 0x7c, 0xb0, 0x5d, 0x8e, 0x00, 0x36,
-  0xf7, 0x0b, 0xc9, 0x69, 0x56, 0x54, 0x1e, 0x26, 0x87, 0x30, 0x5e, 0x53,
-  0x1b, 0x35, 0x1a, 0xd1, 0x5b, 0xd3, 0x6d, 0x55, 0x40, 0x3d, 0xa9, 0x8d,
-  0x29, 0x76, 0xd7, 0x34, 0xc6, 0x66, 0x36, 0xe1, 0x2e, 0x43, 0xdc, 0x66,
-  0xab, 0x29, 0x2b, 0xe9, 0xe2, 0xb5, 0x38, 0x31, 0x32, 0x8b, 0xdc, 0xa8,
-  0x37, 0x87, 0x22, 0x78, 0xea, 0xcb, 0x74, 0x65, 0x92, 0x43, 0xca, 0xc8,
-  0xfa, 0x45, 0xc9, 0x27, 0xcc, 0xbf, 0xd0, 0xbb, 0xc2, 0x88, 0x61, 0x9f,
-  0x9e, 0x04, 0xd4, 0xbd, 0xfa, 0xed, 0xd5, 0x9b, 0x25, 0x8e, 0xb1, 0x59,
-  0x31, 0x2f, 0x62, 0xd9, 0x11, 0xa6, 0xc7, 0x66, 0x20, 0x5c, 0xe1, 0x6c,
-  0xac, 0xb0, 0x92, 0x0a, 0xdf, 0x09, 0x48, 0x19, 0x62, 0x93, 0x02, 0x05,
-  0xb5, 0xf4, 0x93, 0xde, 0xa0, 0xd7, 0x5f, 0x79, 0x21, 0x45, 0x45, 0x12,
-  0x66, 0x17, 0x11, 0x99, 0x08, 0x41, 0x0e, 0x41, 0x58, 0x81, 0x44, 0x85,
-  0x8a, 0xc0, 0x1a, 0x15, 0x57, 0x71, 0x92, 0xba, 0xca, 0xa9, 0xb3, 0x8f,
-  0xb1, 0xe0, 0x0a, 0xba, 0xe6, 0x70, 0x52, 0x0c, 0x6d, 0x98, 0x1c, 0x14,
-  0x1c, 0xf6, 0x4b, 0xce, 0x37, 0x9a, 0x98, 0x76, 0x01, 0x49, 0xbf, 0xbb,
-  0xda, 0xa5, 0xbd, 0x27, 0x5a, 0x22, 0xda, 0x0a, 0xd1, 0x48, 0xd4, 0x3d,
-  0x79, 0x88, 0x0e, 0x81, 0xe1, 0xd1, 0xeb, 0xb8, 0xe0, 0xc5, 0x46, 0x86,
-  0x30, 0x24, 0xbb, 0x28, 0x7c, 0x6f, 0xdc, 0x5d, 0x97, 0x33, 0x16, 0xb6,
-  0x3b, 0xcd, 0x39, 0x85, 0x2f, 0xb9, 0x83, 0xb4, 0xc2, 0x76, 0x26, 0xb2,
-  0x31, 0x92, 0xb8, 0x51, 0x65, 0x70, 0x7d, 0x90, 0x25, 0xa0, 0xaa, 0xc8,
-  0x6f, 0x3f, 0xcb, 0xd2, 0x6a, 0x76, 0xaf, 0xda, 0xc0, 0xe0, 0x36, 0xe6,
-  0x8f, 0x24, 0xb3, 0xa0, 0xa1, 0xb0, 0xb4, 0x2a, 0xe8, 0x19, 0x09, 0xc3,
-  0xd0, 0x3c, 0x8a, 0x86, 0x03, 0x63, 0x38, 0x7a, 0x87, 0x44, 0xd0, 0xdb,
-  0x9c, 0x0c, 0x0f, 0x86, 0xd8, 0x8c, 0x02, 0xdb, 0xa5, 0x44, 0xf2, 0x0b,
-  0x80, 0x64, 0xd0, 0x24, 0x47, 0x1d, 0x5e, 0x23, 0x27, 0x48, 0xac, 0x15,
-  0xe6, 0x28, 0x5e, 0x9b, 0x1b, 0xb2, 0xce, 0x9b, 0x65, 0x1a, 0x5d, 0xae,
-  0x11, 0x54, 0xf0, 0xcf, 0x86, 0x7b, 0x4f, 0x86, 0xdb, 0x4e, 0x93, 0xc0,
-  0x3d, 0x4e, 0x01, 0x2a, 0xf9, 0x5c, 0x52, 0xd0, 0x44, 0x21, 0x0b, 0xe4,
-  0xb8, 0x60, 0x7e, 0x1a, 0xde, 0x25, 0xa2, 0x02, 0x68, 0x57, 0x53, 0x46,
-  0xb2, 0x0f, 0xd2, 0xda, 0xf8, 0xde, 0x67, 0xfb, 0xff, 0xc2, 0x7d, 0xcf,
-  0x17, 0xbe, 0x1f, 0xcf, 0x1b, 0x39, 0x60, 0x18, 0xc3, 0x0a, 0x81, 0xe0,
-  0x90, 0x29, 0xca, 0x70, 0xfc, 0x62, 0x69, 0xa4, 0x82, 0x26, 0x79, 0x51,
-  0x5e, 0x5e, 0x9a, 0xf3, 0xf7, 0x45, 0xa0, 0x80, 0xf0, 0x23, 0x5b, 0xe7,
-  0xc8, 0xf5, 0xc2, 0xb5, 0xa1, 0xec, 0x2b, 0x69, 0x87, 0x43, 0x27, 0xe2,
-  0xc9, 0xbd, 0xca, 0x89, 0x42, 0xb8, 0xb9, 0x61, 0x44, 0x0d, 0xf1, 0xbf,
-  0xd7, 0x1d, 0xe7, 0x08, 0x28, 0x0d, 0xb2, 0x85, 0x79, 0x88, 0xe3, 0x67,
-  0xe5, 0xca, 0xea, 0x26, 0xa8, 0xa8, 0xa6, 0x7a, 0x93, 0x2f, 0x16, 0x44,
-  0x41, 0x9c, 0x59, 0x02, 0x06, 0x64, 0x55, 0xfe, 0x71, 0x66, 0x8e, 0x2a,
-  0x48, 0x4d, 0xc3, 0x88, 0xca, 0xa5, 0x91, 0x4b, 0x78, 0xd0, 0xe3, 0xcc,
-  0xec, 0x63, 0xb7, 0x39, 0x55, 0xb8, 0x5d, 0x38, 0xb1, 0xe8, 0x33, 0x53,
-  0x0a, 0x1d, 0x2e, 0x84, 0xab, 0xd3, 0x36, 0xb9, 0xd8, 0x3e, 0x31, 0xf7,
-  0xc4, 0x38, 0x92, 0x33, 0x2d, 0x5b, 0x2e, 0x33, 0x3a, 0xfe, 0x9f, 0x47,
-  0x2e, 0xf8, 0xdb, 0x46, 0x57, 0xdf, 0xe3, 0x08, 0xc6, 0x6e, 0xcd, 0xc4,
-  0xb0, 0xbb, 0x43, 0xb3, 0x5f, 0x3d, 0x0c, 0x85, 0x2e, 0x00, 0xbd, 0x9b,
-  0xcc, 0x8d, 0x5d, 0x52, 0xb4, 0x11, 0xc7, 0xc9, 0x23, 0xe7, 0x8c, 0x28,
-  0xf0, 0xce, 0xf0, 0x97, 0x6c, 0x0b, 0x21, 0x5e, 0x65, 0x70, 0x1d, 0x60,
-  0x0b, 0x11, 0xd8, 0x69, 0x45, 0xbb, 0xe3, 0x86, 0xc5, 0x6e, 0x08, 0x59,
-  0x6e, 0xfb, 0x24, 0x74, 0x75, 0x0b, 0x0a, 0xa0, 0xc4, 0x8f, 0x87, 0x0c,
-  0x4a, 0xac, 0xa0, 0x1c, 0x67, 0xba, 0xfc, 0x94, 0x02, 0xec, 0x60, 0x92,
-  0x2f, 0xae, 0x49, 0x53, 0x7b, 0x81, 0x70, 0x36, 0x32, 0x07, 0xf3, 0x07,
-  0x5f, 0x44, 0x9d, 0x5c, 0x23, 0x39, 0x18, 0xb5, 0x5c, 0xef, 0xfa, 0xb6,
-  0x30, 0xd5, 0x5c, 0x15, 0x2b, 0x0d, 0xf3, 0x97, 0x10, 0x4a, 0xd3, 0x74,
-  0x97, 0x0f, 0xda, 0x8e, 0xd8, 0xd0, 0xa6, 0x4a, 0x1b, 0xd2, 0x16, 0xf4,
-  0xab, 0x61, 0x72, 0x0e, 0xab, 0xe6, 0x72, 0xc1, 0x71, 0xf5, 0xe4, 0x12,
-  0x93, 0xef, 0x02, 0xbd, 0xa4, 0x6e, 0x5a, 0x21, 0x3b, 0xc8, 0x36, 0xf4,
-  0xfb, 0x2b, 0x5a, 0xe2, 0x5a, 0xee, 0x7d, 0x67, 0x04, 0xe8, 0xfd, 0xae,
-  0xb5, 0x96, 0x7c, 0xcc, 0xfb, 0x5b, 0x5b, 0x77, 0x77, 0x77, 0x43, 0xc3,
-  0xb1, 0x8b, 0xba, 0x9e, 0x0d, 0xcb, 0xea, 0x6a, 0x6b, 0x5a, 0x4e, 0xea,
-  0xad, 0x74, 0xb1, 0xa8, 0xb7, 0x74, 0x84, 0xad, 0x6c, 0x31, 0xb5, 0x51,
-  0x8d, 0x46, 0x76, 0x72, 0xc4, 0xaa, 0x60, 0x42, 0xb6, 0x32, 0x21, 0x4c,
-  0x6b, 0x86, 0xc1, 0xb3, 0x27, 0xe4, 0x44, 0x0c, 0xd7, 0x5f, 0x17, 0xcb,
-  0x8b, 0x93, 0x11, 0x9b, 0xc7, 0xba, 0xf7, 0x39, 0xa5, 0x32, 0x25, 0xba,
-  0x3d, 0x7e, 0xe3, 0xb0, 0xbb, 0xb0, 0xc6, 0x33, 0x1a, 0x1d, 0xe2, 0xc3,
-  0xd1, 0x92, 0x24, 0x2b, 0xd3, 0x4d, 0x75, 0x9f, 0x88, 0xc7, 0xa6, 0x4b,
-  0xfc, 0x66, 0xba, 0xc9, 0xc7, 0xfe, 0xa7, 0x0b, 0x71, 0x95, 0x37, 0xc3,
-  0xcb, 0x6c, 0x5a, 0x56, 0x69, 0x60, 0xd8, 0x2e, 0x29, 0xa3, 0x0f, 0xab,
-  0x33, 0x31, 0x4f, 0x6d, 0x19, 0x6d, 0xe1, 0xbd, 0x59, 0xaf, 0x21, 0xfd,
-  0x0e, 0x63, 0x0c, 0x2f, 0x9a, 0x7e, 0x4c, 0xeb, 0xf5, 0xfb, 0x57, 0x50,
-  0xa6, 0xcd, 0x79, 0xa8, 0x3f, 0x25, 0x61, 0x1b, 0xc9, 0x11, 0xfe, 0xbd,
-  0x69, 0x5c, 0x54, 0x3d, 0x57, 0x13, 0x7e, 0xe2, 0x9e, 0x74, 0xd1, 0xda,
-  0xdd, 0x24, 0x6a, 0x23, 0x1c, 0x5e, 0x95, 0xe6, 0x92, 0xbf, 0x9e, 0x77,
-  0xd7, 0x13, 0x7c, 0x43, 0x3d, 0xe8, 0xb0, 0x86, 0x1b, 0x3d, 0xfc, 0x56,
-  0x0d, 0x15, 0xcb, 0xc2, 0x6b, 0xdd, 0x50, 0xc2, 0xc4, 0x70, 0x0a, 0x4a,
-  0x69, 0x52, 0x27, 0x5d, 0xb0, 0x3d, 0x1a, 0xa8, 0xea, 0x8c, 0xfb, 0x36,
-  0x23, 0xc2, 0xea, 0xfe, 0x05, 0x12, 0x2f, 0x4c, 0xdb, 0x2e, 0xa5, 0x1b,
-  0x7e, 0x26, 0xf2, 0x28, 0xc5, 0x46, 0x87, 0x25, 0xea, 0x88, 0x16, 0xed,
-  0xa5, 0xc2, 0x79, 0x1d, 0xd0, 0xf2, 0x12, 0xaf, 0x7b, 0xc1, 0x99, 0x15,
-  0x01, 0x0f, 0x78, 0x93, 0x7e, 0xc8, 0xe7, 0xcb, 0x39, 0xb6, 0x81, 0x28,
-  0x4f, 0x1e, 0x93, 0xbb, 0x84, 0xad, 0x45, 0x64, 0x0c, 0xe1, 0x6e, 0xd7,
-  0x49, 0x9f, 0xb5, 0x9c, 0x20, 0xe2, 0x2d, 0x6b, 0x28, 0xca, 0xc9, 0xb9,
-  0x91, 0x49, 0x38, 0x31, 0x64, 0x3e, 0xa7, 0x80, 0xb1, 0x36, 0x17, 0x49,
-  0x16, 0xd7, 0x69, 0x9d, 0x21, 0x8b, 0x22, 0xbf, 0xe4, 0x29, 0xf9, 0x39,
-  0x3d, 0xad, 0xd4, 0x1e, 0xc9, 0xf7, 0x73, 0x1c, 0xd7, 0x08, 0x5c, 0x79,
-  0x39, 0xe5, 0x08, 0x5f, 0x08, 0xf8, 0x7c, 0xf1, 0x26, 0x03, 0x6a, 0x8b,
-  0x6e, 0x0b, 0x75, 0x7c, 0x76, 0xd5, 0xed, 0x0f, 0xf0, 0xa5, 0xb2, 0x40,
-  0xa3, 0x3e, 0xfc, 0xcf, 0x86, 0x4f, 0x76, 0x29, 0x58, 0xa3, 0x65, 0x08,
-  0xe3, 0x0c, 0x28, 0xc3, 0x74, 0x26, 0xf9, 0xdc, 0x06, 0x64, 0xaf, 0x56,
-  0xb6, 0x20, 0x79, 0xce, 0x49, 0x4e, 0x98, 0xa7, 0x1f, 0xb0, 0xe6, 0xff,
-  0xba, 0xdc, 0xf2, 0xf8, 0x69, 0x80, 0xac, 0x6a, 0xf4, 0xca, 0xaa, 0x4b,
-  0x70, 0xf0, 0x4d, 0x5b, 0x3f, 0x12, 0xb6, 0xec, 0x6f, 0x86, 0x6a, 0x45,
-  0x60, 0x97, 0x10, 0x9c, 0x81, 0xc6, 0x28, 0xf7, 0x3d, 0x8a, 0xe2, 0x36,
-  0x23, 0x86, 0x5a, 0xb3, 0x13, 0x86, 0xe0, 0x29, 0x86, 0x88, 0x0c, 0xbd,
-  0x14, 0x19, 0x4c, 0xe7, 0xbd, 0x34, 0x7f, 0x5f, 0xe7, 0x66, 0xe4, 0xd5,
-  0xe4, 0xfa, 0x9e, 0xf4, 0x2d, 0x72, 0xa1, 0xb0, 0xd9, 0xc8, 0x8b, 0x23,
-  0xe8, 0xd2, 0x2f, 0xfa, 0x10, 0x3d, 0x9f, 0x46, 0x9f, 0xd0, 0xf9, 0x31,
-  0xcf, 0xa9, 0x9c, 0xd0, 0x19, 0x1d, 0x29, 0x02, 0x74, 0x72, 0xb3, 0x59,
-  0x0d, 0x0b, 0x5b, 0x64, 0x74, 0x83, 0xd2, 0x53, 0x83, 0x70, 0x3d, 0x93,
-  0x92, 0x96, 0x57, 0xb0, 0x3d, 0x5e, 0xba, 0x8e, 0xc8, 0x8f, 0xc4, 0x7d,
-  0x21, 0xc4, 0x97, 0x74, 0xc8, 0xfb, 0x90, 0x46, 0x48, 0x4b, 0x97, 0xf7,
-  0x75, 0xed, 0xd5, 0x77, 0x1e, 0xe8, 0x45, 0xa5, 0xce, 0x47, 0x35, 0x48,
-  0x5d, 0x98, 0x5c, 0xf3, 0x5f, 0x99, 0xed, 0x90, 0x80, 0x63, 0x06, 0xc3,
-  0x50, 0x09, 0xc4, 0xc9, 0x07, 0x83, 0xcb, 0x26, 0x70, 0xd4, 0x78, 0x5b,
-  0xda, 0xde, 0xe9, 0xd9, 0x25, 0x89, 0x97, 0x86, 0x46, 0x9a, 0xe4, 0xe4,
-  0x35, 0x5d, 0xcd, 0x87, 0xe7, 0xe6, 0x67, 0xae, 0x61, 0x07, 0xa4, 0x4c,
-  0x00, 0xe9, 0x80, 0x6c, 0x3a, 0x6f, 0xbe, 0x1b, 0x25, 0x1b, 0xa7, 0xa3,
-  0xad, 0x27, 0xcf, 0xb7, 0x43, 0xeb, 0xc2, 0x06, 0xc1, 0x31, 0x48, 0x20,
-  0x3a, 0x87, 0x01, 0x6e, 0xb7, 0xa3, 0xd5, 0xa8, 0x2f, 0x5a, 0x4a, 0xd8,
-  0x05, 0xa2, 0x26, 0x81, 0xd1, 0x16, 0x01, 0x4a, 0x6c, 0xda, 0x94, 0x56,
-  0xce, 0xd7, 0x91, 0x79, 0x9e, 0x1d, 0xbd, 0x51, 0xf3, 0x2d, 0x47, 0xc2,
-  0x18, 0xb9, 0xd8, 0x8c, 0x9a, 0x1c, 0x96, 0x21, 0x61, 0x9d, 0x67, 0xb7,
-  0xea, 0x35, 0x48, 0x4e, 0x70, 0xdd, 0x83, 0xed, 0x90, 0x85, 0x59, 0x85,
-  0x87, 0x45, 0x46, 0x22, 0xa1, 0x6b, 0x41, 0x38, 0x13, 0xdd, 0xc1, 0x01,
-  0xf3, 0x19, 0x67, 0x7e, 0x0c, 0x8c, 0x91, 0xbc, 0x29, 0xef, 0xf8, 0xd3,
-  0x9d, 0xc0, 0x48, 0x74, 0xda, 0xce, 0xf3, 0xe1, 0x67, 0x9b, 0x76, 0x2d,
-  0xa7, 0x7d, 0xcd, 0x26, 0x79, 0xf1, 0x80, 0x93, 0x6f, 0x94, 0x31, 0xbf,
-  0xf5, 0x93, 0xc4, 0xf1, 0x12, 0x1c, 0x70, 0xc8, 0xaa, 0x52, 0xd7, 0x34,
-  0xfc, 0x56, 0xb8, 0x83, 0xe8, 0xd5, 0xae, 0x80, 0x2f, 0x58, 0x21, 0x5e,
-  0x40, 0x02, 0x7c, 0x5d, 0xa4, 0x40, 0xcb, 0xa2, 0x25, 0xe3, 0xaa, 0xbc,
-  0x23, 0x2b, 0x12, 0xd2, 0x9b, 0x40, 0x9d, 0x29, 0x47, 0x95, 0x5f, 0xa7,
-  0x81, 0x17, 0xd6, 0xcc, 0xd9, 0x06, 0xb7, 0x7c, 0x73, 0xf1, 0xe6, 0x84,
-  0x73, 0x7b, 0xe8, 0xe6, 0x5a, 0x48, 0x8c, 0x0d, 0xc6, 0xbc, 0x1c, 0x1b,
-  0xee, 0x4e, 0x6a, 0x69, 0xc3, 0xa2, 0x21, 0x1d, 0xfb, 0x08, 0xeb, 0x85,
-  0x69, 0xd2, 0x0a, 0xe4, 0x8b, 0x98, 0x5f, 0x53, 0xee, 0x42, 0xf5, 0x40,
-  0x61, 0x33, 0x8d, 0x02, 0x6e, 0xee, 0xb0, 0xfb, 0x45, 0x97, 0x72, 0x8c,
-  0xc0, 0x36, 0x13, 0x03, 0xdc, 0xd6, 0x87, 0x81, 0x91, 0xe9, 0x06, 0x34,
-  0xba, 0x81, 0x69, 0x9e, 0xa3, 0x33, 0x88, 0x05, 0x1d, 0x9a, 0x5b, 0x9a,
-  0xe9, 0x24, 0x19, 0xbc, 0xa6, 0xad, 0xa0, 0x47, 0x82, 0xed, 0xf3, 0x76,
-  0x49, 0x14, 0x2c, 0x2c, 0x1b, 0x0c, 0x79, 0xf4, 0x29, 0x9b, 0x81, 0x87,
-  0xfa, 0x57, 0x95, 0xde, 0x21, 0xbd, 0x68, 0x86, 0x68, 0x84, 0x48, 0x7c,
-  0x07, 0xbd, 0x4c, 0x4a, 0xba, 0xcd, 0x20, 0x43, 0x1a, 0x7b, 0xaa, 0x49,
-  0xe3, 0x1c, 0x91, 0x6e, 0x56, 0xb0, 0x49, 0x1b, 0x97, 0x47, 0x92, 0x7c,
-  0x29, 0xe9, 0xe6, 0xa1, 0x1d, 0xa9, 0x82, 0x73, 0x88, 0x70, 0x47, 0xc4,
-  0x75, 0x6b, 0xb4, 0x08, 0x73, 0xab, 0x92, 0x23, 0xae, 0xba, 0xef, 0xab,
-  0x35, 0x88, 0x9d, 0x65, 0x2e, 0x68, 0x60, 0x95, 0xf3, 0x88, 0x27, 0xc1,
-  0x2f, 0x27, 0xd6, 0x55, 0x07, 0x3e, 0x66, 0x84, 0xc8, 0x81, 0x84, 0xb6,
-  0xd0, 0x88, 0x38, 0xfb, 0x8b, 0x60, 0x2b, 0x78, 0xe3, 0x11, 0x2b, 0xd3,
-  0x69, 0x0e, 0x49, 0xdd, 0x29, 0x5c, 0x60, 0xda, 0xb4, 0xdd, 0x81, 0xd8,
-  0xb9, 0x73, 0x19, 0x68, 0x5e, 0xbc, 0xa4, 0x1e, 0x40, 0x84, 0x3a, 0x42,
-  0x8c, 0x46, 0xe2, 0x91, 0x60, 0x30, 0x30, 0x0d, 0x1b, 0x81, 0x6b, 0x10,
-  0x98, 0x90, 0x48, 0x86, 0x62, 0xef, 0xaf, 0x58, 0x8c, 0x91, 0xb7, 0xb5,
-  0xc8, 0xe9, 0xa6, 0x6a, 0x79, 0xee, 0xf8, 0xf0, 0xce, 0xb3, 0xea, 0xca,
-  0xb3, 0xac, 0x46, 0xac, 0x12, 0x2e, 0x9b, 0x04, 0xda, 0xf1, 0x1f, 0x07,
-  0xec, 0x71, 0xc6, 0x6d, 0xb6, 0x64, 0x97, 0x1c, 0xbe, 0x58, 0xa7, 0x84,
-  0x36, 0xf1, 0xdd, 0x17, 0x66, 0x59, 0x88, 0x88, 0x42, 0x6d, 0x7b, 0x36,
-  0x7b, 0x39, 0x33, 0x9a, 0xff, 0xfd, 0x7a, 0x22, 0x19, 0x99, 0x12, 0xd8,
-  0xdd, 0x88, 0x65, 0x00, 0xb9, 0x3e, 0x93, 0xeb, 0x65, 0x71, 0xa3, 0x9a,
-  0xfb, 0xac, 0x2c, 0x29, 0xa0, 0x88, 0x1c, 0x32, 0x9d, 0xe6, 0xd6, 0xbd,
-  0xde, 0xfe, 0xe8, 0xb7, 0x1d, 0x5b, 0x65, 0x64, 0xf3, 0x23, 0x19, 0xd0,
-  0x9e, 0x30, 0x7b, 0xad, 0x32, 0x38, 0x44, 0xf2, 0x65, 0x5f, 0x23, 0x5b,
-  0x1a, 0x47, 0x3c, 0x14, 0x23, 0x96, 0x86, 0x5c, 0x20, 0xf3, 0x9c, 0xe6,
-  0x30, 0xba, 0xda, 0x56, 0xd9, 0x2d, 0x4e, 0xf6, 0x6c, 0x8d, 0xea, 0x68,
-  0x59, 0x84, 0xe9, 0xe1, 0xc8, 0x5d, 0xed, 0x50, 0x8e, 0x10, 0x3b, 0x31,
-  0x4c, 0xde, 0xf8, 0x19, 0xe3, 0x9d, 0xc8, 0x27, 0xdd, 0xc5, 0x61, 0x72,
-  0x66, 0xd6, 0x6b, 0x10, 0xf8, 0xb7, 0xaf, 0x74, 0xdb, 0x39, 0x68, 0x24,
-  0xf5, 0x47, 0x3c, 0x4d, 0xd6, 0x2f, 0xcb, 0x72, 0x9c, 0x56, 0xeb, 0xb2,
-  0x01, 0x08, 0xd3, 0x19, 0x8b, 0xf2, 0x46, 0x4b, 0x12, 0x3d, 0x1d, 0xc9,
-  0x97, 0xfc, 0xd6, 0x90, 0xc5, 0x28, 0x8f, 0x37, 0x94, 0xb3, 0xa9, 0x5d,
-  0x84, 0x6e, 0x87, 0x91, 0x4d, 0xa3, 0x4d, 0x35, 0xb2, 0x55, 0x5a, 0x55,
-  0x39, 0xc1, 0x37, 0x98, 0x23, 0xbf, 0xac, 0x0a, 0xce, 0x86, 0x2e, 0xb2,
-  0x3b, 0x8e, 0x2c, 0xb0, 0xce, 0x3b, 0x8a, 0x08, 0x22, 0xbc, 0x07, 0x32,
-  0x0d, 0xc8, 0x26, 0x06, 0x8e, 0x35, 0xb2, 0x2d, 0x32, 0x00, 0x81, 0xc7,
-  0x31, 0x1a, 0x76, 0xf0, 0x3d, 0xcc, 0x65, 0xe8, 0x84, 0xc5, 0x59, 0x01,
-  0xf8, 0x19, 0x73, 0x0d, 0x4f, 0xe2, 0x78, 0x05, 0x9e, 0xb8, 0x9c, 0x2f,
-  0x34, 0xb4, 0x2c, 0x2a, 0x0d, 0x7c, 0x0f, 0x93, 0xbf, 0x64, 0x24, 0x33,
-  0xce, 0x83, 0x3a, 0xe8, 0x95, 0xa5, 0xb7, 0x0c, 0xf3, 0x71, 0xab, 0xb2,
-  0xaf, 0x1e, 0x71, 0x34, 0x82, 0x05, 0x4b, 0x30, 0xcb, 0xef, 0x81, 0x2e,
-  0x88, 0x87, 0x9c, 0xda, 0x95, 0x6e, 0x62, 0x2e, 0x9b, 0x54, 0x42, 0x05,
-  0x10, 0x12, 0xc6, 0x7a, 0x95, 0x79, 0xd5, 0x34, 0x33, 0x94, 0x08, 0x01,
-  0x0f, 0x66, 0xc0, 0x0e, 0x97, 0x6c, 0x62, 0xb3, 0x69, 0xcc, 0xa9, 0x8c,
-  0x53, 0xc1, 0x3b, 0x9e, 0x0b, 0x0c, 0x00, 0x34, 0x24, 0x0b, 0xe5, 0x55,
-  0x58, 0x11, 0xc6, 0x62, 0xf9, 0x88, 0x1d, 0x3a, 0x58, 0xf0, 0x96, 0x55,
-  0xfa, 0x77, 0x30, 0xa3, 0xac, 0xf0, 0xe6, 0x73, 0x06, 0xeb, 0x98, 0x0f,
-  0x2b, 0x5f, 0xe0, 0x65, 0x10, 0x48, 0xe8, 0x85, 0x0b, 0x04, 0x2b, 0xdb,
-  0xd1, 0x00, 0x58, 0xea, 0x34, 0xfd, 0x79, 0x76, 0x36, 0xab, 0x17, 0x33,
-  0x25, 0xa6, 0x95, 0x2f, 0x3d, 0x05, 0x92, 0x15, 0xcd, 0xab, 0x27, 0xcb,
-  0xd5, 0x13, 0xa7, 0xdc, 0x92, 0xdf, 0x22, 0xd5, 0x18, 0x5c, 0xa1, 0xfa,
-  0xa4, 0x11, 0x87, 0xee, 0x32, 0x8e, 0x8b, 0x53, 0xa4, 0x8c, 0xb9, 0xcb,
-  0x3c, 0x78, 0x53, 0xee, 0xbc, 0x87, 0x24, 0xb1, 0x0b, 0xb1, 0x8b, 0x37,
-  0xe2, 0x42, 0x85, 0xa5, 0x75, 0x06, 0xbd, 0xa6, 0x13, 0x08, 0x62, 0xb4,
-  0x03, 0x89, 0xeb, 0x23, 0xd2, 0x0f, 0xa4, 0x78, 0x8a, 0xfe, 0xa1, 0x50,
-  0x70, 0x43, 0x8f, 0x75, 0x99, 0xdd, 0xfa, 0xb9, 0x8d, 0x6e, 0x5d, 0xe4,
-  0xe6, 0xe6, 0xac, 0xed, 0x8f, 0xe2, 0xd4, 0x2e, 0x24, 0x26, 0xc6, 0xa6,
-  0x19, 0x00, 0x26, 0x79, 0x25, 0xdc, 0x6a, 0x01, 0x23, 0x8e, 0xc0, 0x12,
-  0x71, 0x62, 0x7c, 0xa2, 0xa0, 0x44, 0x08, 0x90, 0xf2, 0x57, 0x34, 0x12,
-  0x48, 0x4c, 0x59, 0x8c, 0x1f, 0x90, 0xd3, 0x2a, 0xb7, 0x93, 0xe5, 0x59,
-  0x1c, 0x12, 0xd1, 0xe5, 0x6a, 0x9c, 0xa7, 0x00, 0xda, 0x9a, 0x46, 0xc2,
-  0x38, 0x27, 0xd0, 0x5e, 0x6a, 0x9b, 0x22, 0x5c, 0x64, 0xc8, 0xff, 0x30,
-  0x1b, 0xfe, 0x2b, 0x69, 0x86, 0x0f, 0x30, 0xe0, 0xa3, 0xbc, 0x44, 0xcf,
-  0x88, 0xcc, 0xc3, 0x51, 0x9e, 0xec, 0xa7, 0xe2, 0x58, 0x6c, 0x2c, 0x74,
-  0x5a, 0x0b, 0xd8, 0xd8, 0x98, 0x57, 0xe9, 0x01, 0xd2, 0x21, 0x1e, 0xf9,
-  0x10, 0xdd, 0x04, 0x84, 0x23, 0xeb, 0x3d, 0x03, 0x2b, 0x93, 0x0b, 0x84,
-  0x64, 0x42, 0x75, 0x7d, 0x08, 0x6b, 0x0c, 0xe8, 0xe6, 0x71, 0xf9, 0x10,
-  0xf2, 0x60, 0x87, 0xd2, 0xad, 0x0e, 0x12, 0xcb, 0xf8, 0xdc, 0xeb, 0xa4,
-  0xff, 0xb5, 0x85, 0xb4, 0x5f, 0x72, 0x1c, 0xfa, 0x96, 0x8c, 0x84, 0xb9,
-  0xb3, 0x7f, 0x4e, 0xa6, 0xa7, 0xd2, 0x5c, 0xe4, 0x5a, 0x65, 0xa7, 0x05,
-  0x91, 0x12, 0xc2, 0xf8, 0x6d, 0xd4, 0xf9, 0x22, 0xab, 0x48, 0xb2, 0xac,
-  0x9d, 0xe4, 0x69, 0x76, 0xb0, 0x9d, 0xa3, 0xb6, 0xf3, 0x39, 0x8d, 0x3e,
-  0x50, 0xb9, 0xcd, 0x09, 0x38, 0xfc, 0xfa, 0x18, 0xe6, 0xc0, 0x59, 0x6e,
-  0x2e, 0x07, 0x3e, 0x23, 0x3c, 0x17, 0xc6, 0x76, 0xb3, 0x47, 0xe5, 0x2a,
-  0xb7, 0x11, 0x08, 0x69, 0x3b, 0x55, 0xbc, 0x13, 0xeb, 0x93, 0x68, 0x4c,
-  0x8f, 0x20, 0x05, 0x48, 0x70, 0x8e, 0xe8, 0x20, 0x36, 0xea, 0x36, 0x75,
-  0x26, 0xf0, 0xe8, 0xda, 0xa1, 0x77, 0x49, 0xdc, 0x27, 0x2d, 0x87, 0x1d,
-  0x23, 0xb8, 0x2b, 0x02, 0xfb, 0xa3, 0x23, 0x5b, 0xc6, 0xca, 0xcb, 0xea,
-  0xfd, 0xb5, 0xc0, 0x53, 0x8b, 0xee, 0xe3, 0x60, 0x96, 0xd8, 0xa0, 0x4e,
-  0x1c, 0x60, 0x47, 0x8a, 0xd7, 0xe1, 0x43, 0x6d, 0x4b, 0xeb, 0x3a, 0xea,
-  0x8d, 0xb5, 0xf6, 0x74, 0x43, 0x4a, 0xff, 0x49, 0x96, 0x7b, 0x68, 0xd2,
-  0xe6, 0x94, 0x92, 0x45, 0xa1, 0x2e, 0x5d, 0xe2, 0xa1, 0xb6, 0xa6, 0x89,
-  0x06, 0xf4, 0x77, 0x1a, 0xc4, 0x76, 0xd9, 0x53, 0x7f, 0x9f, 0xbc, 0x24,
-  0xe9, 0xf0, 0x4b, 0x89, 0xdc, 0x24, 0x4b, 0x6a, 0xed, 0x05, 0x00, 0xc9,
-  0x05, 0x8b, 0xb1, 0x8b, 0xc2, 0x8a, 0x65, 0x88, 0x37, 0x87, 0x10, 0x4a,
-  0x7f, 0xf5, 0x98, 0xfc, 0x08, 0xce, 0xa3, 0x66, 0xbc, 0xc4, 0xdf, 0x75,
-  0x17, 0xef, 0xe5, 0xe3, 0xab, 0xf7, 0x4b, 0x97, 0xef, 0xe1, 0xd5, 0x63,
-  0x50, 0x1c, 0xa3, 0x7f, 0x20, 0x3e, 0xf8, 0xa5, 0x17, 0xb1, 0x0a, 0xa3,
-  0x24, 0x07, 0x3c, 0x59, 0x47, 0x69, 0x9b, 0xd7, 0x78, 0x8e, 0xc8, 0x97,
-  0xbf, 0xd5, 0xae, 0x83, 0x18, 0xa1, 0x27, 0xd1, 0xe0, 0xe3, 0xcd, 0x31,
-  0x73, 0xc7, 0xde, 0xfb, 0x59, 0x21, 0x62, 0x4b, 0x43, 0x0b, 0x14, 0xb1,
-  0xf6, 0xc1, 0xd0, 0x7f, 0xc3, 0xc4, 0x3c, 0x06, 0x52, 0xd9, 0x20, 0xde,
-  0x9c, 0xa8, 0xdf, 0x6a, 0x5c, 0x0b, 0xe6, 0xf7, 0xa5, 0x5e, 0x55, 0x8f,
-  0x4d, 0x4e, 0xe8, 0x82, 0xa5, 0x2c, 0x04, 0x56, 0xb7, 0x24, 0x7d, 0xd0,
-  0x8b, 0xf8, 0xdf, 0x22, 0xfe, 0x5c, 0xe5, 0x64, 0x2e, 0x4b, 0x05, 0xf4,
-  0x68, 0x2f, 0xb1, 0xcd, 0x7e, 0x7b, 0xcd, 0x52, 0xd1, 0xae, 0x75, 0xa3,
-  0xe3, 0xcd, 0xe5, 0x08, 0xb0, 0x93, 0xed, 0x23, 0xcb, 0x4c, 0x74, 0xfb,
-  0xfe, 0x0f, 0x9b, 0x22, 0xc7, 0xc3, 0xb2, 0x0a, 0xc8, 0xb8, 0x99, 0x57,
-  0x1c, 0x14, 0x65, 0x86, 0x95, 0xfd, 0x7d, 0x49, 0x89, 0xca, 0x3e, 0x32,
-  0x5d, 0x60, 0xa7, 0x41, 0x20, 0x61, 0x1f, 0x1e, 0xd5, 0x19, 0x14, 0x6b,
-  0x71, 0xf9, 0xbf, 0x74, 0xc6, 0x9a, 0x01, 0x22, 0xb5, 0x85, 0x6a, 0x87,
-  0xa0, 0xc3, 0x07, 0x88, 0xd5, 0x12, 0x67, 0x9c, 0x2e, 0x57, 0x52, 0xa0,
-  0xb9, 0xa9, 0xb2, 0x59, 0x76, 0xc5, 0xf7, 0xea, 0xc9, 0xd1, 0x77, 0x47,
-  0x27, 0x81, 0x04, 0xd9, 0xf0, 0xe7, 0xd6, 0x81, 0xec, 0x99, 0xa5, 0x14,
-  0x1c, 0x0d, 0xc6, 0x1f, 0xbe, 0x31, 0x08, 0xe0, 0x89, 0x5b, 0x8c, 0x66,
-  0x0a, 0xe4, 0xc4, 0x20, 0x25, 0x3b, 0x0d, 0x46, 0xb6, 0x89, 0x11, 0xac,
-  0x19, 0x1d, 0xb2, 0x1e, 0x72, 0x98, 0x17, 0x2e, 0xa6, 0xaf, 0x47, 0xa3,
-  0xad, 0x9b, 0xac, 0x1a, 0x13, 0x08, 0x67, 0x48, 0x50, 0x48, 0x5f, 0x4a,
-  0x5e, 0x41, 0xf9, 0x63, 0x4f, 0x0c, 0x02, 0x5a, 0xed, 0x4c, 0x82, 0x37,
-  0x16, 0xe5, 0x2c, 0x9f, 0xdc, 0x27, 0xaf, 0x64, 0x64, 0x35, 0xc7, 0xfd,
-  0xd2, 0xae, 0xc3, 0x1d, 0x23, 0xe6, 0xf0, 0xd3, 0x6f, 0x07, 0x07, 0xa3,
-  0xc1, 0xab, 0xa3, 0x93, 0xa3, 0xaf, 0x0f, 0x2e, 0x8e, 0x34, 0x03, 0x8c,
-  0xc2, 0x8a, 0x56, 0xd0, 0x05, 0x53, 0xc4, 0xb7, 0x32, 0x4e, 0xac, 0x0a,
-  0x25, 0x5d, 0x34, 0xf9, 0xe4, 0x26, 0x6b, 0x5c, 0x9a, 0x09, 0x43, 0x1b,
-  0x13, 0xb7, 0x6e, 0x38, 0x3a, 0x21, 0xde, 0x9c, 0xd9, 0x9a, 0xd9, 0x5c,
-  0x86, 0x1a, 0xcc, 0x20, 0x9d, 0xdd, 0x11, 0x0c, 0xd7, 0xbb, 0x82, 0x14,
-  0x2d, 0xc1, 0xc4, 0x21, 0x31, 0x1c, 0xb3, 0xf7, 0xb6, 0xc4, 0x5b, 0xff,
-  0xd6, 0x2e, 0x23, 0xd0, 0x6e, 0x85, 0xa8, 0xc6, 0x51, 0x9b, 0x92, 0xba,
-  0xfc, 0x0a, 0x4f, 0x76, 0x02, 0xfa, 0x1c, 0x82, 0x04, 0x19, 0x22, 0xe4,
-  0xab, 0x40, 0x54, 0x63, 0x2a, 0xaa, 0x27, 0xd7, 0xd9, 0x5c, 0x0e, 0x17,
-  0x85, 0x7a, 0x98, 0x47, 0x05, 0xa2, 0xcb, 0x1c, 0xb0, 0x3b, 0x8a, 0x6b,
-  0xe2, 0xa3, 0xcc, 0xfa, 0x13, 0xc7, 0x64, 0x22, 0x10, 0x31, 0x22, 0x22,
-  0x19, 0x62, 0x00, 0x32, 0x0a, 0x07, 0x08, 0x21, 0x4e, 0x13, 0x54, 0xa2,
-  0xc1, 0xf8, 0xad, 0xf0, 0x7b, 0xab, 0x26, 0x30, 0x56, 0x5c, 0x57, 0xd5,
-  0x74, 0xf1, 0x82, 0x9a, 0x3c, 0x59, 0x4a, 0xc8, 0x18, 0x3e, 0x94, 0xd3,
-  0x6c, 0x6f, 0x06, 0x1a, 0x29, 0x43, 0xfd, 0x72, 0xa4, 0x6a, 0x98, 0xfb,
-  0x83, 0xac, 0x20, 0x2f, 0x6c, 0x51, 0x32, 0x98, 0x35, 0xcf, 0x87, 0xdc,
-  0x0e, 0x0a, 0x1e, 0xac, 0x48, 0x2a, 0x31, 0x95, 0xa7, 0xe9, 0x2a, 0xfc,
-  0xa2, 0xa2, 0x76, 0x64, 0x7b, 0x10, 0x2a, 0x07, 0xc7, 0x57, 0xa2, 0x15,
-  0x46, 0x73, 0xff, 0xdb, 0xbb, 0x8e, 0x7c, 0xfa, 0x41, 0xb6, 0xa8, 0x9a,
-  0x48, 0xd0, 0x2e, 0x87, 0xad, 0x5a, 0xdb, 0xd4, 0xd4, 0xc3, 0x35, 0xf0,
-  0xd0, 0x73, 0x8e, 0xce, 0xce, 0x19, 0xa2, 0xfa, 0x84, 0x7e, 0x91, 0x48,
-  0x94, 0x00, 0x30, 0x02, 0x90, 0x95, 0x9c, 0x35, 0x06, 0x97, 0x37, 0xb4,
-  0x6a, 0x1b, 0x20, 0xaf, 0xb1, 0x8c, 0x1c, 0xb9, 0x22, 0x48, 0x7e, 0x42,
-  0xd2, 0x98, 0x4f, 0x97, 0xda, 0x1d, 0xa4, 0x22, 0x8d, 0x84, 0x86, 0xd0,
-  0x67, 0xd1, 0x08, 0x83, 0xe0, 0xe8, 0x1b, 0xf5, 0xae, 0x9c, 0xd2, 0x97,
-  0xaa, 0x4a, 0x3c, 0xe0, 0x6c, 0x6e, 0x25, 0x7f, 0x52, 0xb3, 0xf4, 0x66,
-  0x52, 0x79, 0x98, 0x18, 0xed, 0xa9, 0x02, 0xb5, 0x89, 0x90, 0x07, 0xba,
-  0x84, 0xce, 0x1a, 0x9b, 0x4a, 0xfc, 0xa6, 0x01, 0xe0, 0xe0, 0xd1, 0x84,
-  0xd5, 0xe6, 0xc3, 0xfe, 0x71, 0x46, 0xf4, 0x22, 0x31, 0x47, 0xc0, 0xbb,
-  0x01, 0x9a, 0x18, 0xb8, 0x01, 0x24, 0x7d, 0x54, 0xe3, 0xd8, 0xb2, 0x7b,
-  0x89, 0x85, 0x67, 0xeb, 0xef, 0xa5, 0x38, 0x29, 0xd3, 0x59, 0xde, 0xdc,
-  0xb3, 0xea, 0xea, 0xd9, 0x40, 0xc8, 0x36, 0x1c, 0x39, 0x37, 0x66, 0xe1,
-  0x2d, 0x70, 0x16, 0x66, 0x29, 0xdb, 0x16, 0x5a, 0xfa, 0x41, 0x1b, 0x3e,
-  0xaa, 0x16, 0xd0, 0xb3, 0x3e, 0x90, 0x27, 0x21, 0x27, 0x3d, 0x5f, 0x86,
-  0xc2, 0x2b, 0x43, 0x20, 0x55, 0x42, 0xe5, 0x45, 0x19, 0xa3, 0x2a, 0x61,
-  0x10, 0x46, 0x01, 0x61, 0xec, 0x9d, 0x36, 0x09, 0xae, 0x20, 0x7f, 0x87,
-  0x59, 0xc2, 0xaf, 0x23, 0x6b, 0xf9, 0x1a, 0xa0, 0xe2, 0xbe, 0xce, 0x8b,
-  0x7d, 0x83, 0x49, 0xaf, 0x30, 0x23, 0xbc, 0xbc, 0x34, 0x77, 0x5c, 0x80,
-  0x5d, 0xc4, 0xe3, 0x24, 0xd9, 0xd2, 0xba, 0x66, 0x89, 0x6a, 0x82, 0x8e,
-  0x19, 0x68, 0x82, 0xa8, 0x07, 0x2f, 0xe0, 0x6c, 0x19, 0x65, 0x92, 0xd1,
-  0x84, 0x29, 0x0a, 0x82, 0x69, 0x78, 0x9c, 0x99, 0xfe, 0x72, 0x42, 0x48,
-  0xf3, 0xe1, 0xfe, 0x22, 0x76, 0x27, 0x43, 0x79, 0xc4, 0xe8, 0x89, 0xa3,
-  0x10, 0xef, 0xa0, 0x77, 0x39, 0x9e, 0xdc, 0xc7, 0xfa, 0x03, 0x25, 0xc0,
-  0x2d, 0x70, 0xd6, 0x17, 0x57, 0x27, 0x42, 0x15, 0x82, 0xf8, 0x7e, 0xc4,
-  0xbf, 0x5b, 0xac, 0x2e, 0x79, 0x32, 0xad, 0x6f, 0xe3, 0x47, 0xbb, 0xbe,
-  0xfd, 0xe5, 0x47, 0x9b, 0x71, 0x2f, 0x69, 0xe5, 0x8f, 0xce, 0x46, 0xdf,
-  0x25, 0x36, 0xbe, 0x2c, 0x76, 0x65, 0xf3, 0xa9, 0x76, 0xf3, 0x22, 0x3a,
-  0xf7, 0x4f, 0xf6, 0xbf, 0x7a, 0xb4, 0x4d, 0xff, 0x72, 0x9e, 0xcf, 0x0e,
-  0x46, 0xdf, 0x79, 0x27, 0xd9, 0xdb, 0x7c, 0xef, 0xe8, 0x06, 0xb2, 0x40,
-  0x03, 0xd7, 0x31, 0xf3, 0x02, 0x6a, 0x2d, 0x4a, 0xe3, 0xf5, 0xed, 0xc7,
-  0xd0, 0xb8, 0x19, 0x4a, 0x40, 0xe3, 0xc1, 0xf2, 0x3e, 0x44, 0xe3, 0xfe,
-  0x1e, 0xb5, 0x03, 0x6b, 0x7f, 0x19, 0x85, 0xb3, 0x31, 0x6d, 0x25, 0x8d,
-  0x9b, 0x71, 0xfe, 0x32, 0x1a, 0x37, 0x2f, 0x04, 0x34, 0xae, 0x1b, 0x1a,
-  0x27, 0xf2, 0x55, 0x34, 0xae, 0x61, 0xc7, 0x19, 0xd3, 0xb7, 0x4f, 0xde,
-  0x21, 0x69, 0xb7, 0x08, 0xb6, 0xa8, 0x07, 0x0e, 0x99, 0xf9, 0x85, 0xfd,
-  0xf5, 0x8b, 0x08, 0x9e, 0x99, 0xa5, 0x5b, 0xa4, 0xb7, 0x97, 0xcb, 0xe6,
-  0x8a, 0x69, 0xf0, 0xd5, 0xdb, 0x91, 0x87, 0x20, 0x65, 0x66, 0x51, 0x01,
-  0xe9, 0xd0, 0x6f, 0x6d, 0xf8, 0x98, 0x39, 0x9d, 0x24, 0x31, 0xc1, 0x11,
-  0x67, 0xc9, 0x1d, 0xe6, 0x28, 0x37, 0xb2, 0x0d, 0x16, 0xda, 0xd4, 0x55,
-  0x19, 0x04, 0xec, 0xd3, 0x9e, 0xd0, 0x40, 0x36, 0x15, 0x90, 0x95, 0xbc,
-  0xae, 0x64, 0x8a, 0xe3, 0x24, 0x76, 0x9b, 0x4e, 0x5b, 0x74, 0x70, 0xa8,
-  0xcd, 0xb9, 0x8c, 0x34, 0x57, 0x68, 0x22, 0xd1, 0xe6, 0x23, 0x8e, 0x00,
-  0x87, 0x04, 0x25, 0x7e, 0xb1, 0x55, 0xa8, 0x41, 0x8a, 0x02, 0x51, 0x45,
-  0x62, 0x9e, 0x01, 0x16, 0xd0, 0x42, 0xab, 0x11, 0xf2, 0xb3, 0x29, 0x07,
-  0xa8, 0x3f, 0x31, 0x48, 0xa9, 0x23, 0x0b, 0x9e, 0x52, 0xc7, 0x2c, 0x88,
-  0x20, 0x27, 0xa4, 0x77, 0x90, 0xb9, 0xf2, 0x41, 0x74, 0x2d, 0xec, 0xfc,
-  0xe2, 0x76, 0x6f, 0x40, 0x53, 0x35, 0x7b, 0xb5, 0x18, 0xc8, 0x9c, 0x1f,
-  0xdc, 0xfa, 0x71, 0xce, 0xc8, 0x06, 0xfe, 0xf3, 0x2c, 0x66, 0x18, 0x0d,
-  0x91, 0x56, 0x1a, 0x48, 0x1b, 0x44, 0x11, 0x16, 0x63, 0xae, 0x4b, 0xb1,
-  0x9e, 0x95, 0xc6, 0x7f, 0x4e, 0xaf, 0x6c, 0x23, 0xb1, 0x89, 0xd7, 0x83,
-  0x4e, 0x25, 0x77, 0x21, 0x9a, 0x5d, 0x5a, 0x5d, 0x2d, 0x03, 0xe7, 0x2a,
-  0x4c, 0x5e, 0xce, 0xdc, 0xac, 0x59, 0x05, 0x3e, 0xe2, 0xc7, 0xff, 0xb7,
-  0x37, 0xf1, 0x63, 0x76, 0xf1, 0xd9, 0x6f, 0xbf, 0x8b, 0xcf, 0xfe, 0x37,
-  0xd9, 0xc5, 0x67, 0xff, 0x97, 0xec, 0xa2, 0xc2, 0x95, 0x78, 0x7b, 0xd2,
-  0x5f, 0xbd, 0x9d, 0x23, 0x9b, 0x54, 0xc3, 0xc1, 0xc7, 0x24, 0x39, 0xd0,
-  0x3e, 0x68, 0x2b, 0x6c, 0x64, 0x90, 0x4c, 0xef, 0x16, 0x7a, 0x2f, 0x67,
-  0xd0, 0xc5, 0x51, 0x06, 0x25, 0x41, 0x5e, 0xa3, 0x7d, 0x8f, 0xcf, 0x3c,
-  0x98, 0x1a, 0xb7, 0x3b, 0x8a, 0x63, 0x29, 0x46, 0x81, 0x68, 0xc4, 0x43,
-  0x4d, 0x6e, 0x70, 0xc3, 0xc7, 0x39, 0xf6, 0x9f, 0x53, 0x71, 0xe1, 0x2a,
-  0xe7, 0xed, 0x82, 0x38, 0x32, 0xd6, 0x20, 0x49, 0xb3, 0x41, 0xfb, 0x2f,
-  0x68, 0xb9, 0x07, 0xfc, 0xf8, 0x17, 0xd1, 0x7c, 0x2c, 0x20, 0x55, 0xba,
-  0x21, 0xc5, 0xc9, 0x41, 0xa8, 0xa1, 0x8d, 0x44, 0xd7, 0x22, 0x05, 0x1f,
-  0xbc, 0x08, 0xd7, 0xce, 0x23, 0xe4, 0xf0, 0xab, 0xe8, 0xe1, 0x5f, 0x22,
-  0x87, 0x8c, 0x2e, 0x6b, 0x40, 0x4f, 0x92, 0x3b, 0xfb, 0xdd, 0xf9, 0xc9,
-  0xa3, 0xe1, 0x58, 0xbd, 0x73, 0x06, 0xaa, 0xac, 0x92, 0xb3, 0xf4, 0x2a,
-  0xeb, 0xf9, 0xa0, 0xa5, 0x1f, 0x01, 0x43, 0xf3, 0x20, 0x8a, 0x4b, 0x1b,
-  0xb7, 0x05, 0xc6, 0x17, 0x87, 0xda, 0xc2, 0xde, 0xdb, 0x18, 0xd4, 0x1d,
-  0xcb, 0xc8, 0xed, 0x74, 0x7b, 0x2d, 0xaa, 0x22, 0xbe, 0xad, 0xde, 0x5f,
-  0x28, 0xd9, 0xa1, 0xa7, 0x03, 0xb4, 0x53, 0x0e, 0x23, 0xc6, 0xe9, 0x11,
-  0x67, 0x41, 0x6e, 0xa7, 0x48, 0xd0, 0x58, 0xd9, 0xaf, 0x2f, 0xe9, 0x2b,
-  0xa8, 0x0a, 0x71, 0xcd, 0x48, 0xc7, 0x97, 0xe5, 0xac, 0x4b, 0x9a, 0xc0,
-  0x4a, 0x4d, 0x93, 0x13, 0x19, 0xd4, 0xbe, 0x38, 0xd6, 0x79, 0x23, 0x75,
-  0x48, 0x22, 0x35, 0x88, 0x6c, 0xaa, 0x91, 0xd0, 0x33, 0xaa, 0xa6, 0xd3,
-  0x8d, 0xc1, 0x24, 0xfa, 0x95, 0x90, 0x12, 0x49, 0x00, 0xcf, 0x1a, 0x16,
-  0x33, 0x72, 0x14, 0x57, 0xb1, 0xd3, 0xfa, 0x84, 0x0e, 0xe7, 0x23, 0x78,
-  0xe6, 0x29, 0xe2, 0xf2, 0x85, 0x17, 0x7f, 0xf8, 0xe3, 0xbe, 0x1a, 0x4c,
-  0x7e, 0x8e, 0xa7, 0x53, 0x04, 0xa0, 0x99, 0x9a, 0x99, 0xe6, 0x5c, 0xc8,
-  0x82, 0x46, 0xe2, 0xb5, 0x1a, 0xb3, 0xef, 0x62, 0xb9, 0xb5, 0x48, 0x42,
-  0xaa, 0x89, 0x84, 0x86, 0x00, 0xa4, 0x74, 0x17, 0x05, 0x61, 0x26, 0xf0,
-  0x53, 0xb1, 0x27, 0xc4, 0xf4, 0x3e, 0xe0, 0xca, 0x18, 0xd0, 0xcc, 0x03,
-  0x8b, 0x95, 0x04, 0x32, 0x91, 0xc1, 0xd9, 0xeb, 0x58, 0x65, 0x38, 0x73,
-  0x64, 0xce, 0xbe, 0x3d, 0x1c, 0xfd, 0x7e, 0x67, 0x57, 0xc3, 0x37, 0x73,
-  0x45, 0x73, 0x1d, 0x01, 0x72, 0xa7, 0x4b, 0xde, 0xa4, 0x14, 0x71, 0x09,
-  0x2d, 0xc2, 0x7c, 0x77, 0x51, 0x9f, 0xf6, 0x35, 0xb6, 0x46, 0x4b, 0x31,
-  0x15, 0xce, 0x05, 0x74, 0x31, 0xf2, 0x59, 0xd4, 0x6a, 0x61, 0x36, 0xc8,
-  0x1a, 0xce, 0x18, 0x94, 0xc9, 0x2e, 0x5a, 0xdf, 0x46, 0x7b, 0x8f, 0xa9,
-  0xe4, 0x0b, 0x55, 0x4f, 0x9a, 0x42, 0x25, 0xe1, 0x38, 0xb1, 0x30, 0x6c,
-  0x8e, 0xc1, 0xd8, 0xbb, 0x48, 0x57, 0x7a, 0xaf, 0x71, 0x49, 0x0f, 0x96,
-  0x90, 0x7b, 0xde, 0x7a, 0xf4, 0xa2, 0xa6, 0x76, 0x3f, 0xe1, 0x6e, 0x51,
-  0x71, 0x1e, 0xe2, 0x4d, 0x76, 0x6f, 0xab, 0xb0, 0x44, 0x36, 0x94, 0x00,
-  0xa1, 0xcd, 0x4f, 0xba, 0xb3, 0xa7, 0xbf, 0x8b, 0x45, 0x2a, 0x30, 0x69,
-  0xb1, 0xf2, 0x45, 0x6d, 0x91, 0x06, 0xe0, 0x10, 0xb0, 0xe6, 0xa8, 0x0c,
-  0x23, 0xd5, 0xb2, 0x66, 0xf7, 0x31, 0x32, 0x6f, 0xc3, 0xc6, 0x41, 0x97,
-  0xe3, 0x88, 0x44, 0xe4, 0x93, 0xf8, 0xa8, 0x8f, 0xe2, 0x68, 0x6b, 0x1e,
-  0x08, 0xc9, 0x26, 0x63, 0xbe, 0x97, 0x32, 0x45, 0x86, 0xc5, 0x7c, 0x72,
-  0x03, 0x59, 0x5e, 0x6e, 0x38, 0x7f, 0x72, 0x1a, 0xa0, 0x63, 0xe3, 0xf2,
-  0x23, 0xd9, 0x32, 0xe4, 0x6b, 0x20, 0x72, 0xa4, 0x5b, 0x30, 0x2f, 0x34,
-  0xa1, 0x8f, 0xf2, 0x58, 0x6e, 0xf3, 0xaa, 0x2c, 0x20, 0x9b, 0xdc, 0xa6,
-  0x55, 0x0e, 0x75, 0xd4, 0x8c, 0xf6, 0xfd, 0xab, 0xe3, 0xf3, 0x64, 0x83,
-  0x92, 0xe7, 0xc7, 0xf7, 0x2b, 0xd0, 0x7a, 0x93, 0xad, 0xac, 0x99, 0x6c,
-  0x2d, 0x6e, 0xf2, 0xad, 0xa2, 0xae, 0xa7, 0xe3, 0x4d, 0x1f, 0x16, 0x8d,
-  0xba, 0x24, 0x2a, 0x64, 0x22, 0xde, 0x21, 0x8d, 0x6d, 0x69, 0x1a, 0xde,
-  0x30, 0x6b, 0x10, 0x24, 0x15, 0xd4, 0x66, 0xa1, 0xe7, 0xc3, 0xba, 0xdc,
-  0x84, 0x8a, 0x7a, 0x9b, 0xe6, 0x33, 0x35, 0x18, 0x14, 0x4c, 0xc9, 0x88,
-  0x43, 0x13, 0x88, 0x7a, 0xf6, 0xcc, 0x20, 0xa0, 0x54, 0x82, 0x36, 0xba,
-  0xe7, 0x54, 0xa2, 0x93, 0x18, 0x8e, 0x9a, 0x81, 0x45, 0x34, 0xc0, 0xc8,
-  0xac, 0x26, 0x72, 0xc6, 0x6d, 0xb4, 0x7c, 0x9f, 0x2a, 0xd0, 0xd0, 0xaa,
-  0xb0, 0x9b, 0x90, 0x2c, 0x1f, 0xb1, 0x40, 0xc4, 0xde, 0x70, 0xab, 0x67,
-  0x2b, 0xee, 0x98, 0x25, 0x46, 0xd1, 0x28, 0x57, 0xe2, 0xc8, 0x10, 0xd7,
-  0xe5, 0xb2, 0xb6, 0x76, 0x60, 0x78, 0xb6, 0x65, 0xbb, 0x86, 0x2b, 0xcc,
-  0x4e, 0x76, 0x3b, 0xc5, 0x67, 0x5b, 0x27, 0xbd, 0xfd, 0x1e, 0x0e, 0x55,
-  0x81, 0xa2, 0x1f, 0x2c, 0xda, 0xc8, 0xa8, 0xb0, 0x59, 0xbd, 0x9f, 0x7a,
-  0x49, 0x60, 0x0a, 0x6e, 0x9c, 0x17, 0x44, 0x81, 0x9d, 0xae, 0x8a, 0xfc,
-  0x1f, 0x8c, 0x80, 0x62, 0xcf, 0xee, 0x34, 0x43, 0xce, 0x47, 0x56, 0xf9,
-  0x3b, 0x44, 0x23, 0x88, 0xa3, 0xf1, 0xb8, 0x21, 0xfd, 0x14, 0x0e, 0x49,
-  0x0b, 0x21, 0xa5, 0xf4, 0x35, 0x86, 0xe4, 0x0d, 0x22, 0x62, 0x20, 0x69,
-  0x0f, 0xc9, 0x56, 0x52, 0xf2, 0xe2, 0x27, 0x82, 0x00, 0xee, 0xfc, 0x74,
-  0xc4, 0xd0, 0x27, 0xe9, 0xc4, 0xfc, 0x46, 0x32, 0xc5, 0xe6, 0xea, 0x03,
-  0xc6, 0xdc, 0xd0, 0x67, 0x80, 0x2b, 0xb1, 0x48, 0xbc, 0x13, 0xe3, 0xdd,
-  0x7d, 0x59, 0x0e, 0x96, 0x38, 0xce, 0x9c, 0x23, 0x0b, 0x51, 0xb6, 0xf2,
-  0x78, 0xc4, 0xd3, 0x90, 0x6d, 0xf9, 0x4c, 0x47, 0x2b, 0x8a, 0x41, 0xe2,
-  0x24, 0xe6, 0x0b, 0x93, 0xbe, 0xf9, 0xc6, 0xcc, 0x90, 0xa0, 0xa8, 0x04,
-  0xf9, 0x66, 0x91, 0xc2, 0x40, 0x5c, 0x86, 0xc0, 0x2b, 0xc2, 0xe7, 0xad,
-  0xa3, 0xac, 0x35, 0x50, 0x09, 0xf0, 0xb6, 0xdd, 0x3d, 0x62, 0x29, 0xf9,
-  0x65, 0x44, 0x6f, 0xa9, 0x5e, 0x2c, 0x5c, 0x41, 0xa8, 0xc8, 0x2f, 0xa3,
-  0xfb, 0xd4, 0xa3, 0xfa, 0x4f, 0x17, 0x77, 0x26, 0x69, 0xec, 0x2f, 0x62,
-  0x10, 0x09, 0xa3, 0x6c, 0x86, 0x9a, 0x24, 0x20, 0x70, 0xcd, 0xfe, 0x9b,
-  0x54, 0xf7, 0x0b, 0x32, 0xba, 0xf1, 0x7b, 0xc2, 0x19, 0xe8, 0xaa, 0xe2,
-  0x1c, 0x3f, 0xaf, 0x66, 0xcf, 0x30, 0x92, 0xc4, 0x6a, 0x3b, 0x64, 0x15,
-  0x04, 0x66, 0x56, 0x43, 0x3b, 0x0d, 0xb6, 0xce, 0xa9, 0x25, 0x44, 0x94,
-  0x53, 0xce, 0x34, 0x72, 0x65, 0xf6, 0x02, 0x74, 0x11, 0x6a, 0xa8, 0x56,
-  0xcf, 0xbe, 0xc6, 0x71, 0x91, 0x8d, 0x1e, 0x38, 0x0d, 0xe0, 0xb6, 0xe4,
-  0x60, 0xdc, 0x54, 0x26, 0x2f, 0x6f, 0x08, 0x38, 0x54, 0x97, 0x74, 0x2c,
-  0xa7, 0x34, 0xcd, 0x54, 0xcb, 0x02, 0xbd, 0xb7, 0x57, 0xca, 0xb2, 0xf6,
-  0xee, 0x11, 0x3b, 0x3f, 0x1e, 0x1d, 0x26, 0xe6, 0x70, 0x9d, 0xbe, 0x3d,
-  0xf9, 0x2b, 0xc9, 0xd8, 0x80, 0xba, 0x41, 0x49, 0x3b, 0xea, 0x3a, 0x76,
-  0x27, 0xd4, 0x7d, 0x0f, 0x26, 0x21, 0xc2, 0x36, 0xf8, 0x36, 0x1e, 0xdc,
-  0xe9, 0x16, 0xbb, 0x74, 0x3d, 0x22, 0x17, 0xb8, 0x0a, 0x0d, 0xcd, 0xe5,
-  0xa4, 0xe2, 0x50, 0xa0, 0xde, 0x44, 0xa3, 0xa9, 0x96, 0x21, 0x90, 0x1f,
-  0x85, 0xb9, 0xf8, 0xc2, 0x3d, 0x6b, 0x46, 0x64, 0x29, 0x34, 0xdd, 0x9b,
-  0x89, 0x76, 0x32, 0x8e, 0xcd, 0x44, 0xaf, 0xd8, 0x65, 0xbd, 0x22, 0x49,
-  0xc6, 0x4b, 0xab, 0xbd, 0x77, 0x67, 0xd1, 0x21, 0x8f, 0xb1, 0x31, 0x9a,
-  0x60, 0x78, 0x17, 0xe6, 0x8a, 0xf9, 0x3a, 0x25, 0x7e, 0xc0, 0x36, 0xbf,
-  0x34, 0x9b, 0x07, 0x77, 0x73, 0x5d, 0x92, 0x87, 0x55, 0x65, 0x37, 0xfe,
-  0xcb, 0xf3, 0x9d, 0xc1, 0x72, 0xc8, 0xf1, 0x97, 0xb4, 0xa0, 0x53, 0x73,
-  0x08, 0x85, 0x80, 0x88, 0xe4, 0xcc, 0x50, 0xc2, 0x88, 0x22, 0xad, 0xd7,
-  0x35, 0xec, 0x24, 0xb0, 0x0d, 0xf8, 0x7d, 0x9e, 0x5a, 0x37, 0x7f, 0xcd,
-  0xcc, 0x1a, 0xbe, 0xf6, 0x9d, 0xed, 0xed, 0x47, 0x93, 0x0a, 0x45, 0x95,
-  0x7a, 0x30, 0xb7, 0x90, 0x78, 0x0a, 0x6f, 0x93, 0x45, 0x10, 0x49, 0x73,
-  0x41, 0x6c, 0xea, 0x34, 0x47, 0x5d, 0xda, 0x1c, 0x3f, 0x17, 0xb7, 0xca,
-  0x12, 0x32, 0xde, 0xce, 0x90, 0x61, 0x68, 0x98, 0xeb, 0x11, 0xc6, 0x58,
-  0xef, 0xb7, 0xde, 0x89, 0xe2, 0x36, 0xd2, 0x80, 0xe8, 0x25, 0xb1, 0xb1,
-  0x0c, 0x93, 0xaf, 0x1c, 0xba, 0xb6, 0x5f, 0xe2, 0x0e, 0xa3, 0x02, 0x83,
-  0xd0, 0xe2, 0x54, 0x0f, 0x19, 0x4c, 0xe2, 0x89, 0x83, 0xbf, 0xe3, 0x78,
-  0x5c, 0x4e, 0x2b, 0x6d, 0xca, 0x45, 0x8d, 0x56, 0x01, 0x16, 0x1a, 0xb9,
-  0xff, 0xfd, 0x8c, 0x46, 0xc2, 0x15, 0xbb, 0x6c, 0x17, 0x4a, 0xba, 0x26,
-  0xcb, 0x4b, 0x06, 0x60, 0x09, 0xc6, 0x33, 0x79, 0x30, 0x23, 0x69, 0xef,
-  0xb3, 0x4e, 0x7a, 0x97, 0xe1, 0xf5, 0x48, 0xa8, 0x49, 0x5e, 0xd0, 0xbf,
-  0x71, 0xda, 0xf5, 0x10, 0x7e, 0x10, 0xf6, 0xd0, 0x92, 0xfd, 0xe8, 0x5d,
-  0x89, 0xf9, 0xa6, 0xf4, 0xaf, 0xf6, 0xfd, 0x11, 0xfa, 0x0f, 0x28, 0xc2,
-  0xdf, 0x08, 0x55, 0xfd, 0xe4, 0xd5, 0xd1, 0x39, 0x2e, 0x97, 0xa3, 0xb7,
-  0x5f, 0xc3, 0xdd, 0xe8, 0x5d, 0xd4, 0xd4, 0x66, 0x3d, 0x14, 0xac, 0x3f,
-  0x5f, 0xe8, 0xef, 0x34, 0x47, 0xc2, 0x19, 0x89, 0x6c, 0x10, 0xde, 0xa7,
-  0x9f, 0x34, 0xb7, 0x32, 0x65, 0xcd, 0xef, 0xf0, 0xc0, 0x9f, 0xdd, 0xa3,
-  0xab, 0x15, 0x57, 0xf7, 0x3a, 0x7a, 0x1e, 0x3d, 0x65, 0x46, 0x64, 0x98,
-  0x43, 0x2c, 0x0a, 0x80, 0x12, 0xde, 0x86, 0x2d, 0x10, 0x3a, 0x62, 0xc6,
-  0x22, 0x22, 0xb9, 0x02, 0x78, 0xed, 0x81, 0xb1, 0x15, 0x30, 0x08, 0x43,
-  0xb6, 0xdf, 0x6f, 0xd4, 0x9b, 0x2d, 0x4d, 0xcf, 0xaa, 0x6b, 0xa4, 0x20,
-  0x89, 0x1f, 0xab, 0x03, 0x43, 0xbd, 0xe2, 0xaa, 0xd7, 0x23, 0xa2, 0x00,
-  0x7a, 0x58, 0xf1, 0x3e, 0x4b, 0x65, 0xad, 0xa5, 0x37, 0x7b, 0x2a, 0xc6,
-  0x04, 0x61, 0x53, 0x41, 0x90, 0x07, 0x32, 0x17, 0x10, 0x96, 0xe4, 0xb5,
-  0x19, 0x6c, 0xaa, 0x05, 0x89, 0x01, 0xad, 0xd4, 0xab, 0x75, 0x08, 0x4e,
-  0xf9, 0x48, 0xd6, 0x0f, 0xdf, 0x9d, 0x9f, 0xbc, 0x3f, 0x3c, 0x78, 0xff,
-  0xd5, 0xbb, 0xb7, 0xaf, 0x4e, 0x8e, 0xd6, 0xbb, 0x14, 0x79, 0xc9, 0xc2,
-  0x47, 0xce, 0xf8, 0x65, 0x52, 0x85, 0xb9, 0x83, 0xe8, 0x00, 0x7e, 0x0d,
-  0x68, 0x4d, 0xfc, 0x06, 0x5c, 0x1d, 0x59, 0xf0, 0xae, 0x3d, 0x6b, 0x59,
-  0x4c, 0x81, 0xdf, 0xe7, 0x4d, 0x5e, 0x81, 0xa6, 0x84, 0xd1, 0xe9, 0x00,
-  0xa3, 0x38, 0x83, 0x84, 0x3f, 0x4a, 0xb6, 0x13, 0xaf, 0xac, 0x90, 0x57,
-  0x6c, 0xb1, 0x65, 0x93, 0x41, 0x7a, 0x90, 0x96, 0x6d, 0x4e, 0xcc, 0x78,
-  0x22, 0xdb, 0x5d, 0xbb, 0x34, 0xd8, 0x69, 0xb2, 0x4e, 0x2d, 0x19, 0x4a,
-  0x1e, 0xc8, 0x20, 0x27, 0x55, 0xb3, 0xde, 0x57, 0xf1, 0x33, 0xf7, 0xd2,
-  0xab, 0x20, 0xa8, 0x05, 0x99, 0x67, 0x94, 0xdb, 0x9b, 0x32, 0x5d, 0x0f,
-  0xb3, 0x0f, 0x99, 0xe0, 0xf8, 0xe1, 0xad, 0x43, 0x91, 0xf0, 0xbe, 0x2f,
-  0x2b, 0x18, 0xb6, 0x5f, 0x39, 0x49, 0x8f, 0x1f, 0x32, 0xaa, 0x7f, 0x18,
-  0x66, 0x4b, 0x4c, 0x37, 0x45, 0xe9, 0x2d, 0xd4, 0xab, 0x3e, 0x3b, 0xb8,
-  0xf8, 0x26, 0xea, 0x25, 0x77, 0x35, 0xd2, 0x85, 0x14, 0x55, 0xf4, 0x76,
-  0x9a, 0x9e, 0xaf, 0xde, 0xf6, 0xad, 0xce, 0x6b, 0xc8, 0xba, 0xcb, 0x30,
-  0x42, 0x6d, 0xd0, 0xd3, 0xfe, 0xac, 0x9a, 0xc1, 0xa9, 0x4f, 0x56, 0xbc,
-  0xe1, 0x35, 0x5e, 0x9d, 0xc8, 0xaf, 0x05, 0xca, 0x0d, 0x07, 0x5c, 0x50,
-  0x21, 0x8e, 0xb8, 0x46, 0xf1, 0x8b, 0x55, 0x8a, 0xc7, 0x34, 0x8a, 0xd6,
-  0xf1, 0x72, 0x30, 0x01, 0x18, 0x2c, 0x59, 0x49, 0xef, 0xa8, 0x56, 0x09,
-  0x90, 0x0f, 0x0c, 0xcd, 0x8c, 0x73, 0xc4, 0x50, 0xc4, 0x84, 0x6c, 0x31,
-  0xc9, 0x00, 0xa8, 0x42, 0x04, 0xbe, 0x3e, 0x57, 0xce, 0xca, 0xad, 0xbb,
-  0x40, 0x20, 0x57, 0x08, 0x96, 0x46, 0xbd, 0xba, 0xb6, 0xef, 0x88, 0xd2,
-  0x85, 0x93, 0xd4, 0xd8, 0x3b, 0x0e, 0xd4, 0xab, 0x8c, 0xb0, 0x95, 0xbc,
-  0x2b, 0x04, 0xa4, 0xda, 0x4b, 0x04, 0x68, 0x98, 0x03, 0x94, 0xbe, 0x15,
-  0x75, 0xc6, 0xf1, 0x4a, 0xbe, 0x73, 0x32, 0xca, 0x70, 0x65, 0xaf, 0xa5,
-  0xb5, 0xc7, 0x48, 0x39, 0xa1, 0x38, 0xa2, 0xaa, 0x39, 0x50, 0xfc, 0xbe,
-  0x26, 0xe6, 0x50, 0x13, 0xeb, 0x75, 0xdb, 0x56, 0x43, 0x3d, 0x7d, 0xda,
-  0xdb, 0x04, 0x7c, 0xa4, 0x73, 0x9b, 0x38, 0x05, 0xe9, 0x5f, 0xbf, 0x57,
-  0xbc, 0x7c, 0xfc, 0x90, 0xd5, 0xca, 0x02, 0xb6, 0xee, 0x17, 0x9b, 0x74,
-  0x47, 0x23, 0xb3, 0xa5, 0xe6, 0xec, 0x9d, 0x4e, 0x98, 0xef, 0x36, 0x15,
-  0x32, 0x24, 0xc7, 0xb9, 0x98, 0x29, 0xf6, 0x7b, 0xc9, 0x46, 0x36, 0xbc,
-  0x32, 0xed, 0xf5, 0xa8, 0x9d, 0x9d, 0x7d, 0xfa, 0x77, 0x17, 0xff, 0x3e,
-  0xe9, 0x89, 0xd7, 0xb8, 0xb5, 0xff, 0x74, 0x09, 0x85, 0x59, 0xdb, 0x48,
-  0xad, 0xa2, 0x4b, 0xc9, 0x62, 0x86, 0x72, 0x4c, 0x51, 0xbe, 0xea, 0xc4,
-  0x88, 0xaa, 0x15, 0x43, 0x12, 0x72, 0x0b, 0x81, 0x0b, 0x0f, 0x21, 0x06,
-  0x10, 0x97, 0xcc, 0xdc, 0x26, 0x8c, 0xd9, 0xe1, 0xc3, 0xaf, 0x4d, 0xde,
-  0x57, 0x99, 0x91, 0xa8, 0x8c, 0xaa, 0xbc, 0x6c, 0x70, 0x64, 0x22, 0x95,
-  0x4b, 0xe0, 0xf3, 0xe6, 0x19, 0x4b, 0xc7, 0x16, 0xbc, 0x4b, 0xb7, 0x96,
-  0x0d, 0xfd, 0x24, 0xcd, 0xca, 0x13, 0x83, 0x45, 0x79, 0x17, 0x49, 0xa4,
-  0xd2, 0xdd, 0x84, 0xe1, 0x9d, 0x1e, 0xf3, 0xcb, 0xe7, 0xce, 0xc9, 0x91,
-  0x81, 0x40, 0x28, 0x8a, 0x87, 0xc8, 0x27, 0x39, 0x43, 0xcb, 0x70, 0x52,
-  0x6c, 0xb4, 0xb2, 0x92, 0x15, 0x54, 0x44, 0x48, 0xb4, 0x7f, 0xe3, 0x1a,
-  0xb0, 0x76, 0x15, 0x94, 0xd8, 0xed, 0x4a, 0x0c, 0x8f, 0xd3, 0xbb, 0x9e,
-  0x6a, 0x27, 0x17, 0xf3, 0x64, 0x39, 0x35, 0x58, 0x89, 0x5d, 0xca, 0x04,
-  0xc4, 0xb0, 0xdb, 0xcd, 0xa8, 0xd8, 0x56, 0xf4, 0xab, 0x4f, 0xce, 0x22,
-  0x37, 0xcb, 0x33, 0x5d, 0x2c, 0xc7, 0x64, 0xf9, 0x78, 0xc1, 0x7f, 0x25,
-  0xe6, 0xcf, 0x59, 0x3e, 0x81, 0x31, 0x64, 0xe3, 0x1a, 0xd5, 0x2d, 0x37,
-  0x3f, 0xe6, 0x04, 0x79, 0x58, 0xb3, 0x1e, 0x18, 0x98, 0x34, 0x86, 0xd6,
-  0x44, 0xe0, 0xda, 0x08, 0xa2, 0x94, 0xa4, 0x17, 0x29, 0xc3, 0xdc, 0xe6,
-  0x47, 0x1e, 0x60, 0x3f, 0x9c, 0xac, 0x4e, 0x64, 0x60, 0x93, 0x7d, 0x04,
-  0x35, 0xda, 0x6e, 0x8c, 0x75, 0xc9, 0x7a, 0x53, 0x12, 0xf9, 0xcc, 0x70,
-  0x75, 0x92, 0x98, 0x3d, 0x10, 0x5d, 0xda, 0xc4, 0x76, 0xb5, 0x77, 0xc7,
-  0xe3, 0xc8, 0xd2, 0xfa, 0x6c, 0xcf, 0x46, 0xdf, 0xd7, 0xd7, 0xe9, 0xee,
-  0xd3, 0x67, 0x32, 0xec, 0x96, 0x55, 0x6f, 0x9d, 0xbf, 0xda, 0xda, 0xe2,
-  0x1a, 0xe5, 0x74, 0xc8, 0xbb, 0x37, 0x3f, 0x7b, 0x21, 0xe9, 0xd9, 0xbf,
-  0xac, 0x47, 0xf3, 0x0a, 0xfd, 0x72, 0x27, 0x29, 0xca, 0xd5, 0xb0, 0xa6,
-  0xe9, 0xe9, 0x96, 0xfd, 0x6e, 0x81, 0x2e, 0x78, 0xd5, 0x02, 0xcd, 0xae,
-  0xc5, 0xc2, 0x5c, 0xf9, 0x62, 0xae, 0x30, 0x96, 0x23, 0x58, 0xba, 0xb9,
-  0x1f, 0x26, 0x07, 0xad, 0xf5, 0xa9, 0x55, 0xa3, 0x0f, 0x4e, 0x97, 0x73,
-  0x8e, 0xfb, 0x0d, 0x3b, 0x4a, 0xb4, 0x39, 0xf9, 0x9a, 0xd9, 0xc7, 0x49,
-  0x25, 0xcc, 0x17, 0x97, 0x81, 0xa1, 0xd8, 0xd2, 0x85, 0x65, 0x8b, 0x4d,
-  0xd9, 0x8e, 0xd4, 0xf2, 0x64, 0xb5, 0x71, 0x59, 0x35, 0x1d, 0x8c, 0x9b,
-  0x80, 0xd1, 0x21, 0xf2, 0x8b, 0x96, 0x02, 0x89, 0x40, 0x95, 0x68, 0x70,
-  0x0c, 0xfa, 0x7a, 0x1f, 0xcf, 0x07, 0x31, 0xa4, 0xb0, 0x45, 0x74, 0x20,
-  0xf7, 0xfd, 0x7e, 0x10, 0x4e, 0xfd, 0xd9, 0xf0, 0xc9, 0xf3, 0xe1, 0xf6,
-  0xbe, 0x63, 0x89, 0x0c, 0x3b, 0x85, 0x59, 0x7f, 0x3d, 0xfa, 0x36, 0x6f,
-  0x22, 0x6f, 0x50, 0x52, 0xd8, 0x3e, 0x44, 0x26, 0x7a, 0xea, 0xae, 0x9c,
-  0x5d, 0x9a, 0x37, 0xb7, 0x0e, 0xef, 0xd3, 0xd0, 0x5c, 0x90, 0x88, 0x0e,
-  0xb9, 0x9f, 0x18, 0xc2, 0x9b, 0x36, 0xb3, 0x3a, 0xf6, 0x3d, 0x06, 0x70,
-  0x56, 0xce, 0xd2, 0x0a, 0x15, 0x6e, 0x98, 0xf8, 0x1e, 0x18, 0xf1, 0xde,
-  0x5e, 0x64, 0xc4, 0xfd, 0x15, 0x03, 0x1a, 0xfe, 0xeb, 0x23, 0x3a, 0x55,
-  0x07, 0x99, 0x7a, 0x93, 0xa5, 0xb6, 0xaf, 0xca, 0x50, 0x9f, 0xf4, 0xee,
-  0x27, 0x85, 0xbb, 0x6e, 0xd2, 0x66, 0x59, 0x7f, 0x04, 0x8f, 0xf2, 0x78,
-  0x0b, 0xbf, 0x63, 0x03, 0x0c, 0xe4, 0x20, 0xad, 0xd6, 0xb5, 0x5b, 0xe9,
-  0xc7, 0x1e, 0xe6, 0x4a, 0x32, 0xe2, 0x86, 0x14, 0x1c, 0x6b, 0x23, 0xbd,
-  0x49, 0x87, 0xc9, 0xe9, 0xe1, 0xe8, 0x8c, 0xba, 0x58, 0x50, 0xd4, 0xdc,
-  0x26, 0x1d, 0xe2, 0x00, 0x07, 0x47, 0xeb, 0x90, 0x3d, 0xbe, 0x38, 0x3e,
-  0x9e, 0x75, 0x0c, 0xd5, 0x2a, 0x2f, 0x18, 0x03, 0x8e, 0x85, 0x85, 0xa0,
-  0xa3, 0x85, 0xb9, 0xb2, 0xa7, 0x9b, 0xd6, 0xc2, 0xd1, 0x0f, 0x4c, 0x1e,
-  0xf5, 0xf2, 0xea, 0x0a, 0x71, 0x30, 0x36, 0x3a, 0x46, 0xb1, 0x02, 0xb3,
-  0x2a, 0xd0, 0x5b, 0x74, 0xda, 0x9e, 0x9d, 0x04, 0x40, 0x30, 0xe0, 0xa1,
-  0x45, 0xe9, 0x5a, 0x4d, 0xd5, 0x0e, 0x9a, 0xa3, 0x56, 0x23, 0x1b, 0x53,
-  0x22, 0xb2, 0x37, 0x6f, 0x8a, 0xc2, 0xfd, 0x12, 0xb6, 0xe7, 0xaa, 0xa8,
-  0x99, 0x9c, 0xfd, 0xbe, 0x02, 0x09, 0x27, 0xf9, 0x16, 0x04, 0x76, 0x4b,
-  0x9a, 0xaa, 0x4b, 0xfc, 0x8a, 0x1c, 0xd5, 0x88, 0x03, 0x4d, 0x49, 0xb5,
-  0x13, 0xd6, 0xb0, 0xb7, 0xd3, 0x36, 0xe8, 0x5c, 0xa6, 0xb3, 0x3a, 0x1b,
-  0x20, 0x8d, 0x78, 0xed, 0x23, 0xc5, 0x48, 0xbc, 0x22, 0x99, 0xc7, 0x5a,
-  0x48, 0x1e, 0x3c, 0x10, 0xd5, 0xcd, 0xbc, 0x6a, 0x85, 0x1d, 0x8c, 0x46,
-  0xbc, 0xa6, 0x19, 0xcb, 0x9a, 0xe8, 0x81, 0xc8, 0x5f, 0x20, 0x29, 0xca,
-  0x5d, 0x20, 0xce, 0x50, 0x29, 0xab, 0x88, 0x64, 0x4c, 0xe6, 0x78, 0xab,
-  0x21, 0x5c, 0x38, 0x31, 0x49, 0xf8, 0x63, 0x5b, 0x5c, 0xe7, 0x8d, 0x36,
-  0x02, 0xfb, 0xeb, 0xbc, 0xc8, 0xcd, 0x6d, 0xc6, 0x85, 0xcd, 0xd3, 0xab,
-  0x2c, 0xdc, 0x28, 0x43, 0xe3, 0x35, 0xdb, 0x6c, 0x53, 0x2e, 0xb3, 0x92,
-  0x10, 0xa8, 0x02, 0x5b, 0x09, 0x25, 0xd7, 0x54, 0x5c, 0xe9, 0x4b, 0xc4,
-  0x9e, 0xae, 0x2a, 0xca, 0x68, 0xf7, 0xd2, 0x6d, 0xe5, 0xaa, 0x9d, 0x54,
-  0x8e, 0xe5, 0x6b, 0x70, 0xd1, 0xaa, 0x82, 0x1b, 0x74, 0x50, 0x8c, 0x26,
-  0x68, 0xf8, 0x16, 0x91, 0x21, 0x65, 0x4a, 0x54, 0x20, 0x48, 0x52, 0x14,
-  0x7f, 0x20, 0x13, 0xe7, 0xf0, 0x79, 0x42, 0x7f, 0xf3, 0x57, 0x9b, 0x89,
-  0xdb, 0xfe, 0x87, 0x8c, 0x7b, 0xbb, 0x2d, 0x5a, 0xb8, 0x44, 0x3c, 0xaa,
-  0xa1, 0xcf, 0x15, 0xb9, 0x2f, 0xaf, 0x51, 0xfe, 0xa8, 0xa6, 0xec, 0x34,
-  0x9a, 0xd4, 0x06, 0x55, 0x29, 0xe6, 0xaa, 0xeb, 0x29, 0x72, 0x8b, 0x36,
-  0xc9, 0x99, 0x2e, 0x27, 0x0b, 0x80, 0x72, 0x75, 0xb4, 0x58, 0x29, 0xd5,
-  0xb7, 0xe2, 0x9a, 0xc9, 0x00, 0xd2, 0x80, 0x9b, 0x0e, 0x41, 0xfa, 0x12,
-  0x5b, 0x4c, 0x49, 0xd5, 0x64, 0x03, 0xcd, 0x9a, 0x89, 0xf7, 0xe5, 0x34,
-  0x4b, 0x67, 0x51, 0x75, 0x94, 0x06, 0x8c, 0x48, 0x10, 0x0e, 0x96, 0x86,
-  0x1d, 0x90, 0xaa, 0x3a, 0xc3, 0x2e, 0x25, 0xf9, 0x9d, 0x0c, 0x55, 0x54,
-  0xb4, 0x4a, 0x9f, 0xe0, 0x20, 0x86, 0xca, 0x0e, 0xf9, 0x1e, 0x51, 0x19,
-  0xc5, 0x22, 0xf3, 0xc1, 0xa5, 0x68, 0x13, 0xd5, 0x91, 0xb7, 0x06, 0x3c,
-  0x23, 0xfb, 0x00, 0x68, 0x9a, 0xe5, 0x8e, 0xc0, 0xe1, 0x29, 0x21, 0xb2,
-  0x86, 0x0d, 0x13, 0x16, 0x30, 0x1b, 0xcb, 0x35, 0x6f, 0x9c, 0xc6, 0xc5,
-  0x41, 0x00, 0x24, 0xb4, 0x6f, 0x8a, 0x20, 0x88, 0x68, 0x1e, 0x50, 0xbf,
-  0x91, 0xbb, 0x06, 0x81, 0x2a, 0xa6, 0x00, 0x29, 0x90, 0x55, 0x78, 0xf9,
-  0x1b, 0x0b, 0x8c, 0x4f, 0x6d, 0xf1, 0x40, 0x05, 0x2c, 0x78, 0x77, 0x37,
-  0x4e, 0x9e, 0x02, 0x3a, 0x2e, 0x6e, 0x58, 0x5a, 0x8a, 0x41, 0x9d, 0x5e,
-  0xda, 0x1a, 0x38, 0x15, 0x03, 0xea, 0x96, 0x13, 0xb3, 0x7c, 0x9c, 0x96,
-  0x8d, 0xcf, 0x50, 0xb3, 0x35, 0x2c, 0x33, 0x4c, 0x6a, 0x11, 0xf9, 0x40,
-  0x3c, 0xd3, 0x3a, 0x89, 0x91, 0x9a, 0x1d, 0x9b, 0xd4, 0x33, 0x73, 0x8c,
-  0x24, 0x00, 0xb9, 0x9f, 0x64, 0x82, 0x31, 0x62, 0xf6, 0x3f, 0x12, 0x41,
-  0xdf, 0x01, 0x47, 0x87, 0x01, 0xf8, 0x96, 0x22, 0xc1, 0xa6, 0xc9, 0x86,
-  0x6d, 0x9e, 0x5b, 0xdf, 0xdb, 0xde, 0xc1, 0x78, 0xf7, 0xb6, 0x3f, 0xf3,
-  0x6b, 0x87, 0x59, 0xa8, 0x26, 0xa9, 0x8f, 0x23, 0x69, 0x81, 0x0f, 0x25,
-  0xa9, 0xcf, 0xc8, 0x9f, 0x24, 0x8e, 0x80, 0xe5, 0x0c, 0x32, 0x9f, 0xe0,
-  0x57, 0x0d, 0xf2, 0x82, 0xe1, 0x8b, 0xcc, 0x4f, 0xd9, 0xc9, 0x94, 0x6d,
-  0x0c, 0xa1, 0x84, 0x9f, 0x24, 0x16, 0xd4, 0x91, 0x65, 0x57, 0x86, 0xb6,
-  0x6a, 0x63, 0x5b, 0x09, 0xc4, 0xbe, 0xb2, 0x53, 0xc0, 0x73, 0x11, 0xf7,
-  0x0a, 0xac, 0x18, 0xca, 0xc0, 0x00, 0x0b, 0x4c, 0x28, 0x56, 0x17, 0x64,
-  0x38, 0x17, 0x03, 0xae, 0xe1, 0x8a, 0x5b, 0x00, 0xac, 0xe2, 0x7c, 0xcf,
-  0x74, 0x42, 0x18, 0xd8, 0xcc, 0x87, 0x8d, 0x82, 0x71, 0xfe, 0xfa, 0xb0,
-  0xd3, 0xdc, 0xee, 0x93, 0xcf, 0x3f, 0xb7, 0xa0, 0x7a, 0x99, 0xa4, 0xb0,
-  0xb9, 0x4a, 0x44, 0xa4, 0x00, 0x30, 0xbc, 0x05, 0x87, 0x2e, 0x98, 0x93,
-  0x07, 0xd4, 0x28, 0x4e, 0xae, 0x08, 0x75, 0xe4, 0x75, 0x59, 0xd3, 0x75,
-  0x4e, 0xe8, 0x64, 0x47, 0x3b, 0xeb, 0x2b, 0x7d, 0x2d, 0x9f, 0xee, 0xb0,
-  0xc5, 0xc5, 0x73, 0x25, 0xa1, 0x06, 0xe6, 0x10, 0x7c, 0x19, 0xe4, 0x08,
-  0x5d, 0x15, 0x5c, 0x29, 0xe2, 0x6f, 0xa4, 0x72, 0x5f, 0x65, 0x4d, 0x98,
-  0x85, 0x2c, 0x48, 0xed, 0x41, 0x17, 0xab, 0xb1, 0x98, 0xb5, 0x52, 0x28,
-  0xe7, 0x50, 0xbf, 0x60, 0x63, 0x82, 0x42, 0xae, 0x4e, 0x48, 0xa9, 0x6f,
-  0xee, 0xe8, 0x7a, 0xff, 0x12, 0x44, 0xf4, 0xc2, 0x96, 0x0e, 0x88, 0x03,
-  0xf9, 0x7f, 0xa9, 0xa0, 0xe3, 0xa2, 0x96, 0x01, 0x0d, 0xbb, 0x69, 0xd2,
-  0xc9, 0xb5, 0xe3, 0xe6, 0x80, 0x64, 0x4a, 0xed, 0x23, 0x52, 0xd1, 0x2f,
-  0x08, 0xcb, 0xca, 0x25, 0xb9, 0xe4, 0x85, 0x6d, 0x11, 0x35, 0x15, 0xb8,
-  0x98, 0x1c, 0x8d, 0x05, 0xab, 0x80, 0x1e, 0x14, 0x10, 0x1d, 0x0b, 0x01,
-  0xa0, 0x8a, 0x2a, 0x36, 0x3a, 0xef, 0x7d, 0x6f, 0x9d, 0x22, 0x25, 0x5d,
-  0x50, 0xb2, 0x70, 0xdf, 0x2f, 0x48, 0x4e, 0xd2, 0xd5, 0x9c, 0x80, 0x38,
-  0x18, 0xfc, 0x5d, 0x30, 0xe0, 0xf8, 0xb8, 0xaf, 0x1b, 0xbd, 0x85, 0x1a,
-  0x5a, 0x8f, 0x07, 0x4f, 0xfa, 0xd1, 0x3d, 0x20, 0x46, 0x1e, 0x81, 0xc5,
-  0xf9, 0xa7, 0x8b, 0xab, 0x4a, 0xf3, 0x66, 0xf8, 0xb7, 0xc5, 0x95, 0x15,
-  0x6f, 0xe9, 0x61, 0x00, 0x1d, 0xef, 0x47, 0x0d, 0xf5, 0x83, 0xd7, 0x89,
-  0x74, 0xfa, 0xf2, 0xcb, 0xd6, 0xfb, 0x8a, 0x3a, 0x2b, 0x65, 0x17, 0x87,
-  0x93, 0x72, 0xbe, 0x25, 0xd8, 0x85, 0x93, 0xab, 0x3c, 0x02, 0xab, 0x28,
-  0x15, 0x81, 0x98, 0x84, 0x1c, 0x5c, 0x94, 0x1f, 0x78, 0xab, 0xe4, 0x84,
-  0x64, 0x0c, 0xc6, 0x16, 0xc8, 0x56, 0x16, 0x7d, 0xb2, 0xc7, 0xe7, 0xaa,
-  0x64, 0xc8, 0x90, 0x8a, 0xcb, 0xa7, 0x28, 0xf9, 0x10, 0xf6, 0x4d, 0x53,
-  0x2d, 0x27, 0x74, 0x01, 0xbd, 0x23, 0x67, 0x70, 0xb3, 0xa4, 0xe0, 0x2d,
-  0xba, 0xf7, 0x9b, 0x08, 0x3c, 0x8a, 0xaf, 0x40, 0x60, 0xac, 0x7a, 0xde,
-  0x5d, 0x2c, 0x44, 0x2a, 0x76, 0xf8, 0x45, 0xbe, 0xc8, 0x70, 0xb5, 0x0b,
-  0x7e, 0x46, 0x3f, 0x4c, 0x73, 0x71, 0x31, 0x2f, 0xd4, 0x02, 0x89, 0x27,
-  0x75, 0xfe, 0x0f, 0x45, 0xde, 0x6e, 0xa1, 0x50, 0xb3, 0x48, 0x15, 0x0a,
-  0xa0, 0x7f, 0xb5, 0xe5, 0xdd, 0xb8, 0xd4, 0x08, 0x82, 0xb9, 0xd4, 0x91,
-  0x89, 0x13, 0xd0, 0xe6, 0x43, 0x6a, 0x0f, 0x51, 0xad, 0xa1, 0xcb, 0x21,
-  0x50, 0x6d, 0x64, 0xbd, 0xcf, 0x49, 0x78, 0x02, 0x1b, 0xe3, 0xf0, 0x3f,
-  0x56, 0x6e, 0x7e, 0xef, 0x2e, 0x1b, 0xbf, 0xfc, 0x92, 0x62, 0xd7, 0x3e,
-  0x00, 0x17, 0x98, 0xab, 0x96, 0x10, 0x7d, 0x6f, 0xd1, 0x9f, 0xbd, 0xc4,
-  0xdb, 0xff, 0x6e, 0x1b, 0xe6, 0x6c, 0xac, 0x6a, 0xd5, 0x83, 0x3f, 0xf3,
-  0x5a, 0xbc, 0x2c, 0xcb, 0x07, 0x1b, 0xd4, 0xea, 0xbc, 0x58, 0x11, 0x2f,
-  0x07, 0x8a, 0x33, 0x83, 0x5c, 0xf8, 0x0d, 0xd3, 0x3d, 0x08, 0x4a, 0xab,
-  0x12, 0x81, 0x32, 0x63, 0xd0, 0x1e, 0x30, 0x8c, 0xf2, 0x8d, 0xad, 0x69,
-  0xfe, 0x2f, 0xfb, 0x40, 0xff, 0x82, 0x52, 0xb4, 0x7a, 0x61, 0xf8, 0x4c,
-  0x00, 0x3c, 0x95, 0x7e, 0xfd, 0x8b, 0x7d, 0x9b, 0xfe, 0x31, 0x27, 0xca,
-  0xf0, 0x9e, 0x07, 0x27, 0x43, 0x9e, 0x11, 0x7d, 0x67, 0x8b, 0x6d, 0x8e,
-  0x6a, 0x45, 0x5a, 0xef, 0xaf, 0x13, 0x7d, 0xad, 0xff, 0x65, 0x1d, 0xa2,
-  0x8e, 0x3a, 0xfa, 0x50, 0x54, 0x92, 0xab, 0x46, 0x97, 0x41, 0x6e, 0x00,
-  0xe5, 0x70, 0xe1, 0x81, 0x1a, 0x83, 0x8f, 0x8f, 0x9b, 0x06, 0x9e, 0xe8,
-  0xd0, 0x7f, 0xea, 0xd9, 0xc1, 0xff, 0xd4, 0x73, 0xc3, 0xff, 0xa9, 0xe7,
-  0x26, 0xf0, 0x53, 0xaf, 0x07, 0x85, 0x2e, 0x0d, 0x62, 0xd7, 0x7f, 0xf1,
-  0x96, 0xaf, 0x73, 0xa7, 0xae, 0x4f, 0xaf, 0x4b, 0xaf, 0xc7, 0xde, 0xfa,
-  0x43, 0x6b, 0xe6, 0x87, 0xbd, 0x20, 0x09, 0xbe, 0xbb, 0x84, 0x86, 0x1f,
-  0xb4, 0x56, 0xc9, 0xad, 0x4a, 0x3f, 0xe2, 0xc3, 0xf2, 0x1f, 0xa0, 0x05,
-  0x27, 0x11, 0xbd, 0x9e, 0x91, 0xf1, 0xd8, 0x43, 0x28, 0xd6, 0x0e, 0xec,
-  0x36, 0x68, 0x00, 0x5b, 0x10, 0xd6, 0x68, 0x5f, 0x8f, 0xe2, 0x0a, 0x5f,
-  0x2e, 0x2b, 0x58, 0x2d, 0x64, 0x7a, 0x0c, 0xbb, 0xa4, 0x20, 0xe8, 0xd2,
-  0xd7, 0x9b, 0x83, 0xb7, 0xef, 0x0e, 0x4e, 0x1e, 0x8c, 0xd9, 0xf7, 0x33,
-  0x01, 0xad, 0xf3, 0x18, 0xf6, 0x0b, 0xdf, 0x48, 0x41, 0x49, 0x6c, 0x24,
-  0x84, 0x2c, 0x0d, 0xaf, 0xfd, 0x91, 0x64, 0x92, 0x9f, 0xa3, 0x79, 0x96,
-  0xdf, 0x8b, 0x18, 0xfe, 0xda, 0x2f, 0x40, 0x78, 0xc3, 0xa9, 0x81, 0x3d,
-  0x7d, 0x9f, 0x5e, 0xef, 0x49, 0x0c, 0x0d, 0x9c, 0x39, 0x11, 0x28, 0x0c,
-  0xc5, 0xa0, 0x40, 0xb4, 0xa0, 0x55, 0xd4, 0xd5, 0xcc, 0x26, 0x99, 0x82,
-  0x8a, 0xbb, 0xc7, 0x85, 0xad, 0x2e, 0x2f, 0x57, 0xc7, 0x03, 0x1d, 0x1c,
-  0x1e, 0xba, 0xb4, 0xdf, 0x36, 0x80, 0x50, 0x2b, 0x09, 0xe0, 0xb7, 0xb7,
-  0xee, 0x60, 0xe1, 0xc8, 0x93, 0x4d, 0x79, 0xf9, 0xb7, 0xd9, 0xa0, 0x29,
-  0x39, 0xed, 0xfe, 0x85, 0x8c, 0xe6, 0x8b, 0xe8, 0x3a, 0xe2, 0x30, 0xfb,
-  0x92, 0xb2, 0xd6, 0x8d, 0x46, 0xed, 0xdb, 0x91, 0x04, 0x4a, 0x9c, 0x1d,
-  0x10, 0x2e, 0xbc, 0xe4, 0xa0, 0xb3, 0xba, 0x13, 0x24, 0x0c, 0x65, 0x5a,
-  0x1d, 0xc9, 0x4d, 0x5f, 0xc1, 0xdf, 0xd4, 0x0e, 0xa9, 0x52, 0xe5, 0xc5,
-  0x72, 0x6e, 0xa8, 0xd7, 0x88, 0x4c, 0x53, 0x42, 0xf1, 0x7e, 0x38, 0xa8,
-  0xdb, 0x19, 0x6e, 0x4b, 0xfc, 0x8b, 0x58, 0x73, 0xad, 0x4f, 0x15, 0x09,
-  0x77, 0xee, 0x47, 0x2f, 0x91, 0xde, 0xe8, 0xf8, 0xe2, 0x28, 0x39, 0x78,
-  0x77, 0xf1, 0x4d, 0x8f, 0x17, 0xb0, 0x8b, 0xa9, 0x01, 0x30, 0x45, 0xa3,
-  0xa4, 0x9b, 0x85, 0x17, 0x68, 0xf5, 0x9a, 0x56, 0x92, 0xa4, 0xcd, 0x48,
-  0x89, 0x9e, 0x8e, 0x33, 0xb1, 0xb3, 0xd1, 0x4f, 0x87, 0x4f, 0x37, 0x3b,
-  0x1b, 0xb3, 0x1a, 0x20, 0xdb, 0xab, 0xe3, 0x2c, 0xab, 0x45, 0x37, 0xa7,
-  0x87, 0xd1, 0x4c, 0x09, 0x0f, 0x5b, 0xae, 0xb0, 0x0b, 0x64, 0x7e, 0x35,
-  0xed, 0x87, 0x10, 0x40, 0x16, 0x0f, 0xc9, 0x1a, 0x0c, 0x80, 0x22, 0x6d,
-  0x31, 0x4c, 0x45, 0x2a, 0x13, 0xab, 0x5e, 0x31, 0x25, 0x47, 0xad, 0xa6,
-  0xa2, 0x46, 0x30, 0x32, 0xd4, 0xe7, 0x45, 0x55, 0x23, 0xa8, 0x7a, 0xa8,
-  0x5f, 0x37, 0x32, 0xb4, 0x3c, 0xab, 0x40, 0xe4, 0x92, 0x8d, 0xa3, 0xa0,
-  0xd2, 0xc9, 0x3c, 0x67, 0x54, 0x3a, 0x0f, 0xa0, 0xba, 0x4b, 0xc9, 0xa2,
-  0x55, 0xfe, 0xc8, 0x3f, 0xe3, 0x3c, 0xe0, 0x50, 0x2a, 0xd5, 0x43, 0xa8,
-  0x90, 0x17, 0x38, 0xb0, 0x89, 0x3d, 0xc7, 0xae, 0xac, 0x26, 0xea, 0xce,
-  0x73, 0x2c, 0x19, 0x16, 0x38, 0x2c, 0xf9, 0xb1, 0x31, 0xda, 0x4c, 0x6c,
-  0x41, 0x74, 0x12, 0xef, 0xa5, 0x3d, 0x4a, 0x66, 0xeb, 0x24, 0xaf, 0x05,
-  0xb0, 0x59, 0x31, 0x2c, 0x50, 0xef, 0x24, 0x86, 0x37, 0x31, 0xb8, 0xdf,
-  0xe4, 0x6e, 0x1a, 0x07, 0x24, 0xc1, 0x14, 0x20, 0xd8, 0x59, 0x9f, 0xcc,
-  0xe1, 0xf7, 0xaf, 0xbc, 0xda, 0x3e, 0xa8, 0x19, 0x4e, 0x73, 0x92, 0xc8,
-  0x5a, 0x4e, 0xa8, 0x5d, 0x05, 0x7e, 0xe5, 0x61, 0xf7, 0x18, 0x4a, 0xe2,
-  0xaa, 0x70, 0xd3, 0x2c, 0x5b, 0x58, 0xb4, 0x74, 0xae, 0xa1, 0x03, 0x4d,
-  0xde, 0x9c, 0x39, 0x32, 0x7a, 0xdd, 0xc3, 0x4d, 0xb7, 0x62, 0x74, 0xc2,
-  0x05, 0x1c, 0x36, 0x09, 0x55, 0x2d, 0xa1, 0xba, 0xee, 0x3b, 0x9f, 0x3d,
-  0xf9, 0x3c, 0xa9, 0x29, 0x01, 0x3d, 0xef, 0x40, 0xb9, 0x32, 0xb6, 0xde,
-  0x6a, 0x08, 0x22, 0xf1, 0x9f, 0xab, 0x6f, 0x6f, 0xac, 0xb8, 0x74, 0x84,
-  0x6d, 0x83, 0x9b, 0x4b, 0x52, 0xa5, 0x43, 0x44, 0x1a, 0xb3, 0x88, 0x2a,
-  0x20, 0x60, 0xc5, 0x90, 0xc1, 0x4d, 0xab, 0xc5, 0x66, 0xa4, 0xa1, 0x47,
-  0x9c, 0xd3, 0x12, 0x75, 0x5c, 0xfa, 0xc9, 0xf9, 0xd1, 0xc5, 0x79, 0x3f,
-  0x19, 0x5d, 0x9c, 0x9e, 0xaf, 0xc0, 0x8d, 0x6a, 0x26, 0x60, 0x7a, 0xb4,
-  0x66, 0x6a, 0xa2, 0x53, 0x4f, 0x9a, 0xc7, 0x31, 0x10, 0x1e, 0xc8, 0x4c,
-  0x04, 0x76, 0x84, 0xf9, 0x60, 0x15, 0x5a, 0x58, 0x6b, 0xb5, 0x40, 0x36,
-  0x86, 0x97, 0x3f, 0x38, 0x31, 0xde, 0xf6, 0x8f, 0xa0, 0x10, 0xa2, 0x45,
-  0x9a, 0xae, 0x65, 0xd9, 0x18, 0xad, 0x14, 0x73, 0x77, 0xfe, 0xe7, 0x15,
-  0xf5, 0x88, 0x6d, 0x2c, 0x09, 0xb0, 0x80, 0x6b, 0x65, 0x12, 0x38, 0x28,
-  0x3d, 0x45, 0x15, 0x30, 0x72, 0xd4, 0x06, 0x84, 0x4a, 0x87, 0xe6, 0xfd,
-  0x08, 0xfd, 0xa6, 0x35, 0x59, 0xa0, 0x3c, 0x43, 0x34, 0xd5, 0x6c, 0x67,
-  0xc9, 0x1f, 0x2e, 0x65, 0x65, 0x3c, 0x75, 0x62, 0x61, 0xf3, 0x62, 0x88,
-  0x1a, 0x2a, 0xff, 0x63, 0x97, 0xd7, 0x03, 0xd4, 0x42, 0xde, 0x17, 0x23,
-  0xe0, 0xcc, 0x1a, 0x40, 0x39, 0xaf, 0xeb, 0xa8, 0xd6, 0x1f, 0xc6, 0x45,
-  0x7f, 0x3a, 0xdc, 0xe9, 0x72, 0x67, 0x42, 0x79, 0x88, 0x72, 0x18, 0x8a,
-  0x82, 0xd6, 0x84, 0x7d, 0x5b, 0xa8, 0xd0, 0x02, 0x64, 0xfa, 0x85, 0x68,
-  0xce, 0x14, 0xa7, 0x21, 0x9e, 0x2c, 0x8a, 0xa4, 0x74, 0x4a, 0x2a, 0x72,
-  0x44, 0x2e, 0x7b, 0xcf, 0xc8, 0x0b, 0xcb, 0x2e, 0x5b, 0xed, 0xe0, 0x26,
-  0x74, 0x85, 0xd5, 0xb0, 0x80, 0x60, 0x32, 0x38, 0xdb, 0xf2, 0xc0, 0x2d,
-  0x04, 0x4e, 0xbb, 0x35, 0xf3, 0x9d, 0x5f, 0x2d, 0x80, 0x48, 0xf9, 0x0c,
-  0x31, 0xc4, 0x54, 0xb5, 0x86, 0xa1, 0xc6, 0xa1, 0x70, 0x12, 0xa3, 0xb5,
-  0x0a, 0x7c, 0x05, 0x90, 0xb9, 0xb4, 0xb2, 0xa4, 0xae, 0x24, 0x21, 0x2e,
-  0x91, 0x32, 0x8b, 0x8b, 0x6a, 0x5a, 0xc2, 0x52, 0x4b, 0x8b, 0x10, 0x26,
-  0xb4, 0x40, 0x70, 0x45, 0x30, 0x8f, 0x5e, 0x2d, 0xd2, 0x98, 0x58, 0x75,
-  0x2a, 0x22, 0xf0, 0x2e, 0xb0, 0x07, 0x22, 0x33, 0x42, 0xef, 0xa5, 0xbf,
-  0x8d, 0xcc, 0xe9, 0x20, 0x8d, 0x3b, 0x06, 0xd1, 0x30, 0xa4, 0x03, 0xe3,
-  0x36, 0x28, 0x34, 0x07, 0xcf, 0x36, 0x74, 0x8b, 0x70, 0x86, 0x0e, 0x90,
-  0x33, 0xa4, 0xc4, 0x63, 0x1b, 0x90, 0x42, 0x57, 0xb2, 0x7b, 0xaf, 0x51,
-  0xed, 0x2b, 0xd0, 0xdb, 0x20, 0x5f, 0x3c, 0x0e, 0x20, 0xa2, 0xd0, 0x25,
-  0x34, 0x2c, 0x97, 0x19, 0xdb, 0x72, 0x6c, 0xa9, 0x3f, 0x2a, 0x0f, 0x31,
-  0xbf, 0x6a, 0x67, 0x45, 0x15, 0xe0, 0x47, 0x23, 0x6e, 0xd1, 0x98, 0xed,
-  0xec, 0x5c, 0xd8, 0xb2, 0xd0, 0x72, 0xed, 0xf0, 0xcb, 0x57, 0x06, 0x6b,
-  0xc3, 0x2a, 0x2e, 0xe0, 0xee, 0x7e, 0x78, 0x72, 0x95, 0x0d, 0x6c, 0x58,
-  0x03, 0x82, 0xf9, 0xbc, 0x11, 0x07, 0x86, 0x0b, 0x81, 0x44, 0x63, 0x71,
-  0x46, 0x4f, 0xd5, 0x44, 0x2e, 0x74, 0xbf, 0xaf, 0x16, 0x05, 0xef, 0x0d,
-  0x77, 0x37, 0x1f, 0x52, 0x31, 0x48, 0x7e, 0xb7, 0x30, 0x35, 0xa4, 0x67,
-  0x31, 0x4a, 0x11, 0xa3, 0xcd, 0x54, 0x16, 0xc2, 0xa3, 0x55, 0xd6, 0x3e,
-  0x8c, 0x60, 0xa0, 0x25, 0xea, 0xee, 0x1b, 0xc1, 0xa0, 0xc6, 0x05, 0xe8,
-  0x0b, 0x67, 0xde, 0x50, 0xe8, 0x8c, 0x34, 0x39, 0x33, 0x97, 0x8c, 0x5d,
-  0x65, 0x0f, 0x67, 0x25, 0xd9, 0x40, 0xdc, 0xb1, 0x19, 0xc7, 0x66, 0xf7,
-  0x42, 0x24, 0x3f, 0x69, 0x9a, 0xfb, 0x1a, 0x8d, 0x39, 0x78, 0x54, 0x95,
-  0x8e, 0xbc, 0x1b, 0x95, 0x19, 0x03, 0x15, 0x4c, 0xd3, 0xb2, 0xf3, 0x22,
-  0x69, 0x93, 0x11, 0x5d, 0xb9, 0xe9, 0x5a, 0xf4, 0x9e, 0x96, 0x08, 0x42,
-  0x2f, 0x26, 0x8b, 0x12, 0x37, 0xcc, 0xd9, 0xac, 0xfd, 0xda, 0x94, 0xcb,
-  0x85, 0x54, 0x38, 0xbe, 0x2b, 0x50, 0x17, 0x2d, 0xa4, 0x26, 0x0c, 0x9e,
-  0xce, 0x4e, 0xc7, 0x07, 0xb8, 0xbb, 0x3d, 0xfc, 0xd0, 0x65, 0xa7, 0x75,
-  0x3d, 0x1b, 0x4c, 0x26, 0x93, 0x95, 0x1c, 0xf5, 0xf0, 0xf0, 0x30, 0xd9,
-  0x38, 0x04, 0xb4, 0xd8, 0xa1, 0x8c, 0xf2, 0xf0, 0x9a, 0xec, 0x3a, 0x33,
-  0xb3, 0x9c, 0xa3, 0xeb, 0x25, 0x99, 0x27, 0x69, 0x28, 0x5a, 0x8d, 0x79,
-  0x74, 0xb2, 0x15, 0x3a, 0x85, 0xa9, 0x08, 0x61, 0x25, 0xba, 0x5d, 0x5b,
-  0x7f, 0x61, 0xf9, 0x0d, 0x30, 0xc5, 0x9a, 0x30, 0xa8, 0x74, 0xc5, 0xbd,
-  0x44, 0x33, 0xda, 0x97, 0x85, 0x3a, 0x0a, 0xac, 0x82, 0x55, 0x64, 0x05,
-  0x12, 0x68, 0x88, 0xa5, 0x81, 0xca, 0x10, 0x56, 0x55, 0x27, 0x6f, 0x0f,
-  0x2e, 0xc8, 0xab, 0xd7, 0x48, 0x1e, 0xfe, 0x8a, 0x2c, 0x64, 0x0b, 0x72,
-  0x0d, 0x7b, 0x59, 0xea, 0x15, 0x2c, 0xd3, 0x2b, 0x00, 0xac, 0x28, 0xaf,
-  0x95, 0x2f, 0x0a, 0x9a, 0x6e, 0xac, 0x18, 0x8b, 0xac, 0xe8, 0xc0, 0xde,
-  0x41, 0x1c, 0x38, 0x49, 0x7f, 0x76, 0x9d, 0xb2, 0x3b, 0xcf, 0xc2, 0xfb,
-  0xad, 0xf5, 0xfa, 0x8f, 0x0c, 0x24, 0xb3, 0x25, 0xbd, 0xfe, 0xfc, 0xab,
-  0xb6, 0x09, 0x69, 0x33, 0xe2, 0x54, 0x30, 0x8f, 0x29, 0x65, 0x84, 0x91,
-  0xdf, 0x1d, 0x5c, 0x26, 0xe6, 0x14, 0x0c, 0x41, 0x9a, 0x33, 0x7c, 0x1b,
-  0xd8, 0x85, 0xd9, 0xf4, 0x29, 0x2a, 0x9a, 0x22, 0xf6, 0x53, 0xb8, 0x0b,
-  0x65, 0x26, 0x84, 0x18, 0x4d, 0x5d, 0xd8, 0xbd, 0xd2, 0x30, 0x17, 0x06,
-  0xfe, 0xb2, 0x15, 0xfa, 0xaa, 0x6c, 0xc1, 0x80, 0xc7, 0x7e, 0xdb, 0xab,
-  0xf4, 0x38, 0x5f, 0xe8, 0xf7, 0x31, 0x76, 0x74, 0x80, 0x75, 0xbb, 0x15,
-  0x74, 0x94, 0x12, 0x73, 0x0d, 0x2d, 0xe8, 0xa9, 0xf4, 0x6c, 0xf3, 0xcf,
-  0xb4, 0xed, 0xee, 0x0e, 0xed, 0x46, 0x77, 0x88, 0xa9, 0x34, 0xba, 0x1f,
-  0xe7, 0x72, 0xee, 0xe5, 0x2c, 0xd8, 0x75, 0x00, 0x2a, 0xd4, 0xac, 0xbc,
-  0xa2, 0x6c, 0x3b, 0x41, 0xeb, 0x93, 0x90, 0x61, 0x2d, 0x15, 0xd8, 0xb5,
-  0x4f, 0x30, 0x09, 0x53, 0x02, 0x09, 0x72, 0x07, 0xdb, 0x4e, 0x32, 0x5e,
-  0x7f, 0xe2, 0x2a, 0x96, 0xf4, 0xa5, 0x2e, 0x8a, 0x02, 0x4f, 0x45, 0xf6,
-  0x43, 0x03, 0x04, 0x27, 0xf7, 0x43, 0x76, 0xec, 0xd6, 0x6d, 0x33, 0x71,
-  0xde, 0x0e, 0x1b, 0x51, 0x0d, 0x95, 0x4c, 0xd6, 0x51, 0x07, 0xb5, 0xcc,
-  0x31, 0x5c, 0xb5, 0xed, 0x4d, 0xb9, 0xb2, 0x8d, 0x54, 0x61, 0x78, 0x98,
-  0x33, 0x83, 0x88, 0x6c, 0x18, 0xa0, 0x54, 0x8d, 0xb9, 0x14, 0xd2, 0xad,
-  0x82, 0x8f, 0x4b, 0x35, 0x72, 0x89, 0x70, 0x1f, 0x86, 0x7b, 0x10, 0xbf,
-  0x91, 0x61, 0x01, 0xca, 0x28, 0x74, 0xcd, 0x43, 0x15, 0x64, 0x87, 0xe7,
-  0x1d, 0x57, 0xe2, 0xe5, 0x1a, 0x2d, 0x54, 0xc7, 0x2f, 0xb2, 0xaf, 0x86,
-  0x67, 0x4f, 0xff, 0xe5, 0x86, 0xd1, 0x4a, 0xab, 0x75, 0x72, 0x93, 0x48,
-  0x2e, 0x27, 0x7b, 0x27, 0xf9, 0x8f, 0x55, 0x58, 0x12, 0x0e, 0x30, 0x5b,
-  0x5c, 0x9a, 0x02, 0xa9, 0x6e, 0xe3, 0x58, 0x38, 0x94, 0x52, 0xd3, 0x43,
-  0x35, 0xf0, 0x3c, 0xe6, 0xa9, 0x01, 0x54, 0x63, 0x65, 0x7e, 0x01, 0xae,
-  0xa6, 0xde, 0xa7, 0x33, 0xca, 0xb2, 0x25, 0xc1, 0x6e, 0x98, 0x9c, 0x88,
-  0x13, 0x62, 0xfd, 0x4b, 0x0e, 0xed, 0x5b, 0x7f, 0xb1, 0xbe, 0xba, 0xa8,
-  0x8c, 0x54, 0xb5, 0xa3, 0x21, 0xac, 0xb3, 0x45, 0x7d, 0x5d, 0x07, 0x21,
-  0xb6, 0x45, 0x1e, 0x99, 0x62, 0xd0, 0x69, 0x5d, 0x09, 0x92, 0xe1, 0x22,
-  0x9a, 0x77, 0x1b, 0xa8, 0x92, 0x43, 0xb2, 0xe1, 0xa4, 0x73, 0x33, 0x67,
-  0x82, 0xac, 0xb2, 0xf5, 0x1a, 0xc1, 0x6e, 0x5c, 0x7e, 0x36, 0x16, 0x71,
-  0xeb, 0x62, 0x7c, 0x78, 0x3c, 0x3c, 0x10, 0x40, 0x9d, 0x4c, 0x26, 0x88,
-  0x09, 0x84, 0x20, 0x6b, 0xbe, 0x34, 0x42, 0x18, 0x1f, 0x48, 0xcc, 0x19,
-  0x2e, 0x16, 0x33, 0xe9, 0xee, 0x61, 0xc9, 0x52, 0xa2, 0x3f, 0x04, 0x52,
-  0x75, 0x4b, 0x00, 0x0d, 0xae, 0x48, 0x86, 0xbd, 0x9a, 0x95, 0xe3, 0xf2,
-  0xf2, 0xf2, 0x01, 0x09, 0x87, 0xf1, 0xc0, 0xd0, 0x06, 0x1f, 0xab, 0x1e,
-  0xe1, 0x61, 0xd0, 0x7b, 0x63, 0x1a, 0xa1, 0xd9, 0x17, 0x73, 0xce, 0x7a,
-  0x52, 0x30, 0x04, 0xe5, 0x57, 0x02, 0xb9, 0xa5, 0x65, 0xbc, 0x51, 0xcc,
-  0x0e, 0x4d, 0xf8, 0x37, 0xad, 0xa9, 0x60, 0x2c, 0x79, 0x3e, 0xae, 0x02,
-  0x80, 0x61, 0x1b, 0xff, 0xf5, 0xcf, 0x1f, 0x7f, 0x5e, 0x51, 0x44, 0x57,
-  0xb3, 0x14, 0x11, 0x93, 0xcd, 0x28, 0xa3, 0x16, 0x40, 0xde, 0x55, 0x4b,
-  0x25, 0xb1, 0x34, 0x9b, 0x5d, 0x7a, 0x68, 0x08, 0x21, 0x4b, 0xae, 0x5d,
-  0x87, 0x5a, 0x8b, 0x57, 0x42, 0x30, 0x08, 0x61, 0x15, 0x10, 0xd3, 0xce,
-  0x91, 0x69, 0xd1, 0x1b, 0xc5, 0xe2, 0x10, 0xb2, 0x00, 0x8b, 0xc2, 0x6b,
-  0x5d, 0xdb, 0x72, 0x33, 0xbc, 0x3b, 0x3f, 0xb6, 0xba, 0xa8, 0xb7, 0x13,
-  0x5f, 0x63, 0x27, 0x82, 0x65, 0x73, 0x75, 0x2c, 0xfa, 0x5d, 0xf4, 0x50,
-  0x07, 0x81, 0x4d, 0x06, 0x01, 0xc6, 0xdd, 0x6f, 0x57, 0x69, 0x18, 0x4c,
-  0xfb, 0xd1, 0xa2, 0x27, 0xfd, 0x4e, 0x4d, 0x88, 0xb2, 0x0a, 0x81, 0xf1,
-  0x5b, 0x50, 0x3f, 0x12, 0x33, 0x12, 0x94, 0xdc, 0xfa, 0xda, 0xc8, 0x9b,
-  0xb6, 0x38, 0x57, 0x07, 0x11, 0xa8, 0x55, 0xb8, 0x8b, 0xab, 0xbe, 0x12,
-  0xfd, 0xdf, 0xe5, 0x04, 0x9c, 0x20, 0x56, 0xad, 0xa8, 0x1e, 0x77, 0xe1,
-  0x4a, 0x41, 0x30, 0xb3, 0x55, 0x0c, 0x65, 0xb7, 0x82, 0x27, 0x9a, 0xff,
-  0xbc, 0xfe, 0x1f, 0xeb, 0x0e, 0xb1, 0x3e, 0x92, 0xfa, 0xaf, 0xe3, 0x0f,
-  0xa0, 0x63, 0x07, 0xc7, 0x7d, 0x37, 0x4a, 0x0e, 0x42, 0x60, 0x29, 0xc1,
-  0x56, 0x90, 0x1a, 0x47, 0x4a, 0x6e, 0xad, 0x1a, 0xc6, 0x37, 0x47, 0x07,
-  0xaf, 0x6c, 0x22, 0xe5, 0xbf, 0x03, 0xf7, 0xd5, 0x1a, 0x76, 0xc6, 0x19,
-  0x17, 0x16, 0x5b, 0x8a, 0xee, 0x9b, 0x62, 0x4f, 0xf4, 0xb6, 0x03, 0x75,
-  0x18, 0xe5, 0x80, 0x62, 0x0a, 0x89, 0x64, 0x23, 0xca, 0xae, 0x58, 0xcc,
-  0x56, 0xaa, 0xbb, 0x9e, 0x49, 0x51, 0xad, 0x93, 0x74, 0x7a, 0x99, 0xc5,
-  0x79, 0xf4, 0xeb, 0xe3, 0xf9, 0xbc, 0xe0, 0x9f, 0xab, 0xaa, 0x45, 0x1c,
-  0xa1, 0x70, 0x88, 0x3c, 0x6b, 0x16, 0x53, 0x70, 0xe1, 0x95, 0xf1, 0x2a,
-  0xcd, 0x40, 0x4d, 0xd4, 0x60, 0xe1, 0x08, 0xf1, 0x79, 0x0e, 0xff, 0x21,
-  0x5c, 0x9d, 0x7e, 0xd9, 0x3c, 0x17, 0x2b, 0x8e, 0xfc, 0x6a, 0x2e, 0x55,
-  0x22, 0xe5, 0x5b, 0x24, 0x1f, 0x3c, 0x8a, 0xec, 0x20, 0xd5, 0xa3, 0x78,
-  0x51, 0x8c, 0x1e, 0x49, 0xd6, 0xfe, 0x65, 0xdd, 0x18, 0xc9, 0x4a, 0xc7,
-  0x4b, 0x8f, 0x5d, 0xa7, 0x5e, 0xa5, 0x34, 0x2e, 0xdf, 0x1d, 0xa4, 0x4a,
-  0x39, 0x7b, 0xad, 0x35, 0xc3, 0xa0, 0x58, 0x07, 0xab, 0xfe, 0x6c, 0xa6,
-  0x5c, 0xd2, 0xc6, 0x70, 0x36, 0x18, 0xe2, 0x4d, 0x2b, 0x86, 0xb0, 0x8a,
-  0xb0, 0x4f, 0xe9, 0xdd, 0x77, 0xc3, 0x74, 0x0f, 0x9c, 0xdf, 0x4d, 0x5b,
-  0x75, 0x08, 0x77, 0x5d, 0x33, 0x30, 0x00, 0x34, 0x64, 0x6e, 0x92, 0xc9,
-  0x4d, 0x0e, 0xd7, 0xfa, 0x12, 0xfc, 0x3d, 0x2d, 0x54, 0xc5, 0xe6, 0x61,
-  0x5a, 0xa8, 0x4f, 0x43, 0x58, 0x43, 0xb8, 0x95, 0xe3, 0x44, 0xc4, 0xa9,
-  0xf5, 0x24, 0x8d, 0x12, 0x10, 0xa2, 0x8e, 0x47, 0xe0, 0x94, 0xb4, 0xd4,
-  0x90, 0x72, 0x6e, 0x92, 0x34, 0x70, 0x79, 0x84, 0x21, 0xac, 0xa4, 0x47,
-  0x53, 0x74, 0x15, 0xe9, 0x89, 0x77, 0x92, 0x2b, 0xbd, 0x8e, 0xa2, 0xc3,
-  0xb8, 0x6a, 0xcf, 0x21, 0x5d, 0x59, 0xd4, 0x45, 0x9a, 0xb2, 0x2c, 0x8f,
-  0x61, 0xf7, 0x57, 0xf9, 0x6d, 0xb4, 0x4a, 0x56, 0x6a, 0x07, 0xc6, 0x11,
-  0x6f, 0xf6, 0x02, 0xd1, 0x10, 0x0b, 0x18, 0xe9, 0x41, 0x7f, 0x00, 0x09,
-  0xa6, 0x3a, 0x40, 0xb2, 0xb2, 0x21, 0x90, 0x10, 0xdd, 0x61, 0x14, 0xb5,
-  0x50, 0xec, 0x1b, 0xc2, 0x4f, 0x7a, 0xdf, 0x94, 0x75, 0xb3, 0xdf, 0xb3,
-  0x48, 0x11, 0xe2, 0x94, 0xca, 0x3a, 0x94, 0x23, 0x85, 0x73, 0x82, 0x88,
-  0x38, 0x96, 0x80, 0xf8, 0x00, 0x9a, 0xab, 0x45, 0x9e, 0x56, 0xef, 0xa9,
-  0x20, 0xf9, 0x58, 0x5c, 0x34, 0x22, 0xf9, 0x79, 0x2e, 0x63, 0x20, 0xe4,
-  0xaf, 0x30, 0x98, 0x82, 0x86, 0xf4, 0xc3, 0xe0, 0x10, 0x9d, 0x0f, 0xbe,
-  0x41, 0x73, 0x7f, 0xe9, 0x59, 0x33, 0x41, 0xf7, 0x2b, 0x33, 0xf0, 0xb5,
-  0x95, 0x05, 0x76, 0x99, 0x81, 0xd8, 0xba, 0xdd, 0xb0, 0xff, 0xcb, 0x00,
-  0xa5, 0x36, 0xee, 0x74, 0xba, 0xa5, 0x1b, 0x2e, 0x39, 0xa5, 0x45, 0x14,
-  0xd1, 0x45, 0x32, 0xa6, 0x17, 0x08, 0x93, 0x9c, 0x0e, 0xca, 0xcb, 0x01,
-  0x81, 0xf4, 0x9b, 0x0e, 0xaa, 0x1b, 0x72, 0x0d, 0x79, 0xa7, 0x0e, 0x81,
-  0xac, 0x44, 0x49, 0x74, 0xfc, 0x22, 0x77, 0xb5, 0xe4, 0xa5, 0x56, 0x56,
-  0xd1, 0x96, 0x01, 0xc9, 0x46, 0xee, 0x93, 0x72, 0xa6, 0xaf, 0xdb, 0x9a,
-  0x3d, 0x84, 0x3e, 0x21, 0x25, 0x7b, 0x82, 0x4a, 0xe7, 0x88, 0x8b, 0xec,
-  0xf3, 0x7d, 0x8e, 0x59, 0x83, 0x0d, 0xcf, 0xd9, 0xe6, 0x05, 0xa3, 0xc5,
-  0x72, 0x01, 0xc9, 0x94, 0x8a, 0x68, 0x3d, 0x5c, 0x02, 0xf7, 0x40, 0x71,
-  0xc7, 0x07, 0xa6, 0x23, 0xa9, 0x9b, 0xd1, 0x46, 0x5e, 0x5b, 0x85, 0x0e,
-  0x3e, 0xa2, 0xb0, 0x16, 0x11, 0x3f, 0x3f, 0x1b, 0x3e, 0xf9, 0x8c, 0x2a,
-  0xf2, 0x5a, 0xc0, 0xd5, 0xc1, 0xc0, 0x2c, 0xdd, 0x87, 0xfb, 0x81, 0xe3,
-  0x99, 0xd8, 0x4a, 0x8f, 0xbe, 0xba, 0x54, 0x85, 0x52, 0xda, 0xb4, 0x1e,
-  0x53, 0xc9, 0x90, 0x24, 0x9b, 0xad, 0x69, 0x62, 0x65, 0x4c, 0x55, 0xf7,
-  0xf3, 0xdf, 0x4b, 0x24, 0x02, 0x68, 0xe9, 0x35, 0x5d, 0x47, 0x83, 0xb7,
-  0x86, 0xd1, 0xed, 0x27, 0xff, 0x59, 0x66, 0x3d, 0x44, 0x33, 0x75, 0x82,
-  0x99, 0x82, 0x4c, 0x99, 0x83, 0xf3, 0xb7, 0xc7, 0x6f, 0xbf, 0xde, 0xb7,
-  0x07, 0x1f, 0xf0, 0xeb, 0x0e, 0xb6, 0xbb, 0x23, 0xc8, 0xc0, 0x65, 0x83,
-  0x47, 0xf2, 0x28, 0x70, 0xb6, 0x43, 0x82, 0x1d, 0x08, 0x3e, 0x9a, 0x98,
-  0x61, 0xcc, 0x37, 0x6c, 0x67, 0x62, 0xb9, 0x4d, 0xcb, 0xd9, 0x48, 0x4c,
-  0x0a, 0x2e, 0x11, 0x2a, 0x5c, 0x17, 0xa3, 0xc9, 0x36, 0x92, 0x9c, 0x97,
-  0xc7, 0x34, 0x43, 0x99, 0xbf, 0xd2, 0xa7, 0xae, 0x16, 0x82, 0x7d, 0x68,
-  0x1a, 0xe7, 0x94, 0xd2, 0xeb, 0x52, 0x82, 0xf4, 0x8b, 0x36, 0x5c, 0x38,
-  0xc3, 0xff, 0xd6, 0xd8, 0xb6, 0x3a, 0xc7, 0x5d, 0x6a, 0x57, 0x65, 0x85,
-  0xfc, 0xe8, 0xf0, 0xee, 0xcc, 0x05, 0xcf, 0xb6, 0x79, 0xc8, 0x30, 0xfa,
-  0xa9, 0xab, 0x9d, 0x63, 0xe7, 0xff, 0xd1, 0x71, 0x10, 0x2e, 0x10, 0x82,
-  0x05, 0x0f, 0xf6, 0x8f, 0x7b, 0x47, 0x79, 0x8b, 0x15, 0xd8, 0x98, 0x03,
-  0x91, 0xde, 0xd2, 0x7b, 0xd4, 0x53, 0x0c, 0x69, 0x86, 0x8b, 0xe5, 0x78,
-  0x3e, 0x7d, 0x9a, 0xbc, 0x30, 0xff, 0x84, 0xe9, 0x68, 0x87, 0xd6, 0xdf,
-  0x7c, 0x86, 0x32, 0x3c, 0xa9, 0x85, 0x04, 0x62, 0x89, 0x9f, 0x7e, 0x7d,
-  0xb2, 0x6b, 0x9a, 0xfe, 0x90, 0x2a, 0x76, 0xc4, 0xd4, 0xac, 0x5e, 0x13,
-  0xcd, 0xec, 0x97, 0x57, 0x9d, 0x77, 0x94, 0x56, 0x7b, 0x67, 0xf7, 0xf3,
-  0x64, 0x9c, 0x37, 0xc9, 0x9b, 0x57, 0x4f, 0x8d, 0xde, 0x97, 0x4d, 0x6e,
-  0xea, 0xe5, 0x5c, 0x59, 0x84, 0x16, 0x27, 0xc6, 0x4e, 0xac, 0x77, 0xef,
-  0x6a, 0x97, 0x5c, 0xd5, 0x6f, 0x15, 0x17, 0xbf, 0xb4, 0x29, 0xbc, 0xae,
-  0x6c, 0xb7, 0x65, 0x66, 0xd4, 0x92, 0x58, 0xe1, 0x23, 0xf6, 0x1d, 0xb3,
-  0x06, 0xa6, 0xfb, 0x9a, 0x13, 0xac, 0x3a, 0xf6, 0xe4, 0xcf, 0xda, 0xb6,
-  0x32, 0xce, 0x1f, 0xd4, 0xea, 0x1f, 0x03, 0x23, 0x80, 0x5f, 0x05, 0x31,
-  0xe2, 0xe4, 0x3e, 0x25, 0x11, 0xa8, 0x9f, 0x1c, 0xe3, 0x69, 0xce, 0x71,
-  0x91, 0x37, 0x4e, 0xf0, 0x86, 0x07, 0x39, 0xc8, 0xa2, 0x21, 0xb1, 0xc8,
-  0x7c, 0xb2, 0x44, 0x1d, 0xae, 0x50, 0x86, 0x44, 0xbc, 0x33, 0x31, 0x06,
-  0xc5, 0xf6, 0xac, 0x96, 0x05, 0x36, 0xe1, 0x60, 0x41, 0x31, 0xa1, 0xc9,
-  0xce, 0xf0, 0x83, 0x26, 0x1a, 0xfb, 0xa5, 0xd6, 0x8d, 0xac, 0x56, 0x06,
-  0xf7, 0x35, 0xfc, 0x21, 0x9d, 0xd1, 0x50, 0xd3, 0x1c, 0x8c, 0x3b, 0x23,
-  0xbf, 0x60, 0xc5, 0xa7, 0x62, 0xd7, 0xdc, 0xcf, 0x57, 0xe9, 0xf8, 0x3e,
-  0x96, 0x7f, 0x49, 0x73, 0x24, 0xcb, 0xd2, 0x46, 0x8d, 0xf2, 0xe4, 0x9f,
-  0x0d, 0xf7, 0xc8, 0xf8, 0xd2, 0xa7, 0x52, 0xa2, 0x0b, 0xcc, 0x97, 0x5c,
-  0xa8, 0xd6, 0xc2, 0x4c, 0xb1, 0x01, 0xf9, 0x15, 0xdd, 0x4c, 0xb8, 0xc5,
-  0x23, 0x85, 0x68, 0xbd, 0x00, 0x42, 0x35, 0x31, 0x3b, 0x24, 0x41, 0x8f,
-  0x76, 0xf3, 0x3e, 0x30, 0xa1, 0x21, 0x83, 0xae, 0x90, 0x58, 0x8f, 0x45,
-  0x42, 0x75, 0xb5, 0x87, 0x07, 0x0e, 0x44, 0x05, 0x27, 0x1d, 0x71, 0xec,
-  0xac, 0xbb, 0x78, 0x5f, 0x07, 0x82, 0x08, 0x9a, 0xb1, 0xd7, 0x0a, 0x38,
-  0x14, 0xaf, 0xff, 0x80, 0xa4, 0xc8, 0x3e, 0x69, 0x22, 0x99, 0xc3, 0x6b,
-  0x77, 0x01, 0xfc, 0xdc, 0x68, 0x98, 0xd6, 0x0c, 0xcc, 0x04, 0x0d, 0xc0,
-  0x1f, 0x0e, 0xbd, 0x59, 0x1d, 0xab, 0x3c, 0x1e, 0x9b, 0x12, 0x15, 0xb0,
-  0xde, 0x7a, 0x7d, 0x7c, 0x72, 0xb4, 0x99, 0xbc, 0xce, 0x34, 0x03, 0xd0,
-  0x9f, 0x16, 0xdd, 0x80, 0xbf, 0xe3, 0x4f, 0x94, 0x3e, 0xc4, 0x8e, 0x10,
-  0x8b, 0x49, 0x91, 0x2d, 0x81, 0x16, 0xc4, 0x24, 0x03, 0x06, 0xcf, 0xa0,
-  0x12, 0x25, 0x02, 0x81, 0xb5, 0x86, 0xf9, 0x78, 0xa9, 0x41, 0xc1, 0xd1,
-  0x15, 0x2a, 0x39, 0x48, 0x4d, 0x27, 0x2e, 0x16, 0x05, 0x30, 0xad, 0xd2,
-  0x46, 0x5e, 0x11, 0x9d, 0x98, 0xb1, 0x4b, 0xf0, 0x2b, 0xbb, 0xa5, 0xf3,
-  0xda, 0x30, 0xae, 0xfb, 0xd8, 0x49, 0x84, 0x5f, 0x19, 0xc4, 0x40, 0x63,
-  0x44, 0x40, 0xd3, 0xbc, 0x9c, 0xba, 0x7c, 0x26, 0x2e, 0x56, 0x5f, 0xcc,
-  0x5a, 0x85, 0x72, 0x3c, 0xf0, 0xf2, 0x18, 0xec, 0xd5, 0x19, 0x67, 0xd3,
-  0xd0, 0x80, 0xfc, 0x18, 0x19, 0x26, 0x2f, 0xa7, 0x84, 0xdb, 0x56, 0x86,
-  0x36, 0x14, 0x33, 0xa1, 0xf4, 0x99, 0x2a, 0xe6, 0xa7, 0x45, 0x6f, 0x09,
-  0x93, 0x81, 0xef, 0xc4, 0x32, 0xb3, 0x05, 0xab, 0xe1, 0x18, 0xde, 0x83,
-  0x42, 0x03, 0xe2, 0xb8, 0x64, 0x27, 0x40, 0x31, 0x82, 0xb4, 0xcd, 0x48,
-  0x3c, 0xa3, 0x5c, 0xe7, 0xde, 0xcc, 0x8c, 0x32, 0xb7, 0xbd, 0xbf, 0x63,
-  0x03, 0x93, 0xef, 0xee, 0xee, 0x86, 0x0f, 0xdd, 0xe7, 0xbf, 0x5d, 0xd0,
-  0xd8, 0xdf, 0x88, 0x34, 0xff, 0xb6, 0x2c, 0x6e, 0x0c, 0x6d, 0xd5, 0x44,
-  0xc1, 0x52, 0xff, 0xb3, 0x8e, 0x9f, 0x3e, 0x07, 0x1d, 0xd4, 0xad, 0x41,
-  0x3b, 0xf1, 0xeb, 0x99, 0xa6, 0x12, 0x6e, 0xc2, 0x54, 0xb1, 0x1a, 0xbc,
-  0xa2, 0x55, 0x7a, 0x8a, 0x62, 0x46, 0x0c, 0xed, 0x4c, 0x28, 0x20, 0x89,
-  0xac, 0x28, 0x3d, 0x19, 0x91, 0x36, 0xdd, 0x1b, 0xba, 0x72, 0x55, 0x41,
-  0xf4, 0x62, 0x2d, 0xc0, 0x24, 0xb0, 0x11, 0x5a, 0x75, 0x50, 0xdc, 0x80,
-  0x0c, 0x5c, 0x94, 0x92, 0x04, 0x9a, 0x68, 0xa3, 0x2c, 0x20, 0x93, 0xa0,
-  0x97, 0x85, 0x28, 0x4a, 0x0c, 0x17, 0x93, 0x68, 0x89, 0xf2, 0xda, 0x96,
-  0x01, 0xb2, 0x03, 0x4c, 0x3a, 0x83, 0x13, 0xe1, 0xc6, 0x88, 0xad, 0xeb,
-  0xc1, 0xb9, 0x9c, 0xcc, 0x4a, 0xda, 0x1d, 0x62, 0x7c, 0xde, 0xca, 0xff,
-  0x27, 0x4b, 0xa2, 0x74, 0x15, 0xca, 0x49, 0x1f, 0x44, 0x82, 0x13, 0xfd,
-  0xcc, 0x12, 0x45, 0xfc, 0x40, 0x0e, 0x1d, 0x44, 0xdc, 0x53, 0xaf, 0x0d,
-  0x8e, 0xa0, 0xb7, 0xa0, 0x20, 0x72, 0x5d, 0x46, 0x4b, 0x9e, 0x0c, 0xbc,
-  0x94, 0x73, 0x7b, 0x57, 0xbc, 0x32, 0xc7, 0xb6, 0xac, 0x73, 0xde, 0x17,
-  0x17, 0x39, 0xea, 0x59, 0x61, 0xc2, 0xe0, 0x30, 0x45, 0x33, 0xb3, 0xac,
-  0x9c, 0x43, 0x98, 0xd5, 0xf9, 0x41, 0xd1, 0x46, 0x0f, 0x97, 0x65, 0xd0,
-  0x81, 0xd8, 0x3c, 0x07, 0x56, 0xe0, 0xe1, 0x41, 0xe5, 0xe8, 0x67, 0x15,
-  0x52, 0x81, 0x16, 0x17, 0x09, 0xde, 0x14, 0x2f, 0x32, 0x07, 0xb9, 0xd5,
-  0xb6, 0x36, 0x94, 0xe2, 0xfe, 0xdd, 0x09, 0x2a, 0x8c, 0x73, 0x7f, 0x2a,
-  0x74, 0x2b, 0xa3, 0x8a, 0x44, 0xc2, 0x2a, 0xee, 0xaa, 0xbc, 0x69, 0x32,
-  0x66, 0xe5, 0xa9, 0xe6, 0x3e, 0xb1, 0x2e, 0x32, 0x31, 0xcd, 0x0e, 0x3b,
-  0x53, 0x50, 0xfb, 0x0e, 0x4d, 0x25, 0xd0, 0x76, 0xc9, 0xfa, 0xe1, 0x4d,
-  0x2c, 0x00, 0x4f, 0x69, 0xb9, 0xab, 0x63, 0xa0, 0x3c, 0xb0, 0x51, 0x23,
-  0xa6, 0xc9, 0xab, 0xdf, 0x61, 0x84, 0x32, 0x32, 0x0b, 0xfe, 0xc1, 0x9c,
-  0x59, 0x23, 0x88, 0x17, 0x54, 0x62, 0x7c, 0xe3, 0x3e, 0x6b, 0x36, 0x6d,
-  0xee, 0x88, 0xc4, 0xae, 0xc6, 0xea, 0x67, 0x33, 0x53, 0xeb, 0x40, 0x24,
-  0x91, 0xb5, 0x46, 0x5e, 0x62, 0x7c, 0x45, 0x5a, 0xf4, 0x0a, 0x58, 0x70,
-  0xe4, 0x04, 0x95, 0xba, 0x66, 0xab, 0x9a, 0x8b, 0x54, 0xfc, 0x55, 0x7d,
-  0xc3, 0xa8, 0x34, 0x59, 0x35, 0x21, 0x33, 0x63, 0xf2, 0xb7, 0xe5, 0x34,
-  0x9f, 0x20, 0x4e, 0xc5, 0x15, 0x39, 0xf2, 0xcc, 0xd0, 0x5e, 0x26, 0x57,
-  0x90, 0xac, 0xfe, 0x3d, 0x03, 0x13, 0x51, 0xee, 0x7d, 0x55, 0x5e, 0x2d,
-  0x5d, 0xc6, 0x2d, 0xb8, 0x2e, 0xd4, 0x2f, 0x1a, 0x75, 0xe3, 0x6a, 0xc3,
-  0xc9, 0xdd, 0xf5, 0xea, 0xe4, 0x24, 0x09, 0xcb, 0xbc, 0x88, 0x82, 0xc0,
-  0xf4, 0x25, 0x96, 0x6e, 0x6a, 0x88, 0xdd, 0x00, 0x0c, 0x5b, 0xce, 0x38,
-  0xab, 0x1d, 0xd4, 0xa3, 0xf1, 0x3d, 0x0d, 0x65, 0x10, 0x04, 0x5c, 0xde,
-  0xe1, 0x66, 0xa0, 0x18, 0x27, 0x9a, 0x53, 0x35, 0x85, 0xb8, 0x77, 0x6f,
-  0x3e, 0xb8, 0x6c, 0xee, 0x52, 0xbf, 0x10, 0xf1, 0xe0, 0x86, 0xe5, 0x9b,
-  0x3a, 0x16, 0xf0, 0x2a, 0x19, 0xb2, 0xde, 0xb6, 0x78, 0x69, 0x02, 0x62,
-  0x3d, 0xb2, 0xf0, 0x11, 0x92, 0x43, 0x9a, 0x24, 0x3d, 0x6d, 0xad, 0xd7,
-  0x55, 0x62, 0x5b, 0x18, 0x08, 0x1c, 0xb2, 0xed, 0x55, 0x8f, 0x39, 0x30,
-  0xf4, 0x1c, 0x3c, 0x42, 0xa9, 0x7a, 0x4c, 0x66, 0xc1, 0x6e, 0xb3, 0x0d,
-  0x7a, 0x6e, 0x56, 0x45, 0x3d, 0x87, 0xed, 0x1c, 0xef, 0x36, 0x9a, 0x8c,
-  0x60, 0x51, 0x31, 0xf3, 0x48, 0x29, 0xf9, 0x2d, 0x4c, 0x10, 0x6f, 0x41,
-  0xd2, 0x13, 0x37, 0xe6, 0x0c, 0x26, 0xf0, 0x7e, 0x7f, 0x54, 0xae, 0x10,
-  0xf4, 0xea, 0xc9, 0x52, 0x68, 0xaa, 0x0d, 0xc3, 0x69, 0x2d, 0x72, 0x18,
-  0x86, 0xe3, 0x19, 0x0b, 0xd4, 0x17, 0x02, 0x1b, 0x21, 0x6c, 0x20, 0x09,
-  0xa3, 0xc5, 0x2f, 0xc9, 0xe4, 0x2a, 0xde, 0x4d, 0x80, 0x32, 0x72, 0xfc,
-  0x3b, 0xe7, 0x74, 0x22, 0xec, 0xbd, 0x0b, 0x25, 0xa0, 0x57, 0x37, 0x20,
-  0xaa, 0xae, 0xd3, 0x0f, 0x1f, 0x86, 0x75, 0xb6, 0x65, 0x64, 0xa7, 0x7a,
-  0xab, 0xae, 0x67, 0x80, 0xc3, 0x42, 0x0e, 0x8a, 0x23, 0x85, 0x6f, 0xb9,
-  0xd8, 0x76, 0x61, 0x24, 0x67, 0x8a, 0xd0, 0xc6, 0xcf, 0x18, 0x82, 0xa3,
-  0x62, 0x37, 0x8a, 0x34, 0xe7, 0x3d, 0xe9, 0xee, 0x5e, 0x80, 0xa6, 0x4b,
-  0x9c, 0x2a, 0x5f, 0xc1, 0x02, 0x77, 0x13, 0xa6, 0x58, 0xda, 0x97, 0x73,
-  0x2f, 0x59, 0x6c, 0x96, 0xb9, 0x9c, 0x44, 0x95, 0x20, 0xb1, 0x1c, 0xae,
-  0x51, 0x96, 0x98, 0x02, 0x86, 0xa9, 0xcc, 0x52, 0x13, 0x1a, 0xc1, 0xe1,
-  0x5a, 0x96, 0x51, 0x8b, 0x1a, 0x48, 0x46, 0x44, 0xb3, 0x1f, 0xfa, 0x46,
-  0x14, 0x2b, 0xdb, 0x5c, 0x26, 0x54, 0xc4, 0xd1, 0x1f, 0x43, 0xb0, 0x71,
-  0xa7, 0x0b, 0x8f, 0xa0, 0xaf, 0xb3, 0xbc, 0x72, 0xbe, 0xc8, 0xda, 0x9a,
-  0xea, 0xdc, 0x0d, 0x57, 0x7a, 0xe0, 0x62, 0xab, 0x16, 0x44, 0x78, 0x01,
-  0x75, 0xd7, 0x4f, 0xbc, 0xea, 0x07, 0x44, 0xa6, 0x66, 0x62, 0x46, 0x43,
-  0x32, 0x8a, 0x18, 0xc9, 0xb7, 0x6c, 0xea, 0x13, 0xd7, 0x3b, 0x0a, 0x4e,
-  0xd6, 0xd1, 0xfc, 0xc3, 0x13, 0x42, 0x16, 0x93, 0x53, 0xcc, 0x00, 0xa1,
-  0x13, 0xc8, 0xa7, 0x61, 0x65, 0x04, 0x17, 0x53, 0xc9, 0x3b, 0x1b, 0x63,
-  0xb2, 0xce, 0x40, 0xca, 0xb6, 0x65, 0xc6, 0x9d, 0xe7, 0x0c, 0x10, 0xa3,
-  0xa6, 0x00, 0x57, 0x45, 0x80, 0x45, 0xea, 0xb2, 0x2f, 0x7a, 0xc0, 0x8c,
-  0x10, 0xdc, 0xba, 0xac, 0x8f, 0x87, 0xec, 0xf0, 0x87, 0xeb, 0x96, 0x2d,
-  0x82, 0x6a, 0x8b, 0xab, 0x03, 0xa7, 0x1e, 0x3a, 0xb4, 0x64, 0xe7, 0x2b,
-  0xe9, 0x4e, 0xd6, 0xc9, 0x11, 0x7c, 0x4f, 0x23, 0x26, 0x10, 0x7e, 0xe3,
-  0xbb, 0x32, 0x91, 0xa1, 0x31, 0xfc, 0x0a, 0x55, 0x74, 0xe7, 0xae, 0xcc,
-  0x65, 0xf6, 0x91, 0xa3, 0xb3, 0x69, 0x95, 0x1e, 0xe4, 0x17, 0xe6, 0xd9,
-  0xd4, 0x6e, 0xcf, 0x57, 0x49, 0x18, 0xce, 0x41, 0xcd, 0xd1, 0xeb, 0xea,
-  0xcd, 0xf4, 0xf7, 0xb3, 0xfd, 0x9c, 0xd0, 0x4e, 0x00, 0x5c, 0x2b, 0xf2,
-  0x9b, 0x26, 0xd6, 0x70, 0x96, 0x0e, 0x79, 0x2e, 0xbe, 0x97, 0x0f, 0x64,
-  0x27, 0x12, 0xcd, 0xd6, 0x69, 0xd5, 0x53, 0xee, 0x36, 0xc7, 0x08, 0xd0,
-  0xee, 0xe6, 0x06, 0xd3, 0x55, 0xb8, 0xb7, 0xfd, 0xe4, 0xa7, 0x9f, 0xfa,
-  0x09, 0x21, 0x4f, 0xff, 0x64, 0x34, 0xcd, 0x9f, 0x28, 0xa6, 0xe3, 0xa7,
-  0x4a, 0x00, 0xa8, 0x7e, 0xba, 0x35, 0x5d, 0x1e, 0xac, 0xca, 0xdb, 0x49,
-  0xbc, 0x62, 0xbf, 0x3e, 0xda, 0xbd, 0x94, 0x6e, 0x27, 0x33, 0x04, 0x63,
-  0x23, 0x59, 0xf9, 0x25, 0x56, 0x24, 0xcc, 0x6c, 0xcc, 0x72, 0x5e, 0x08,
-  0x06, 0x34, 0x73, 0x1a, 0xf0, 0x01, 0x30, 0x8b, 0xf5, 0xdf, 0xaf, 0xbb,
-  0xbd, 0xf1, 0x4a, 0xc1, 0x8b, 0x5d, 0x87, 0x1e, 0x8c, 0xe1, 0x87, 0x92,
-  0x49, 0x08, 0x51, 0xff, 0x0c, 0x82, 0x8d, 0xc3, 0x0d, 0x7d, 0xf2, 0x94,
-  0x4c, 0xbb, 0xc4, 0x0e, 0x24, 0xa2, 0x9e, 0x37, 0x98, 0xac, 0xd2, 0x8b,
-  0xeb, 0x7b, 0x08, 0xf4, 0x81, 0x32, 0x55, 0x58, 0xcf, 0x94, 0xc7, 0x07,
-  0x43, 0xd6, 0xee, 0xc1, 0xdd, 0x5a, 0xa9, 0x94, 0xbc, 0xff, 0x3e, 0xcf,
-  0x35, 0x63, 0x59, 0x1f, 0xac, 0xe3, 0x32, 0xf5, 0x4b, 0xdf, 0x56, 0xa1,
-  0x9a, 0xde, 0xce, 0xa4, 0x44, 0xe6, 0xe7, 0xf0, 0xa1, 0xec, 0x2e, 0x01,
-  0xf1, 0x63, 0x1c, 0x77, 0x87, 0xa4, 0x9f, 0xc2, 0x4b, 0x19, 0x0e, 0xbf,
-  0x1f, 0xf1, 0x09, 0x69, 0x69, 0x2f, 0x7d, 0x37, 0x6f, 0xbc, 0xbb, 0x76,
-  0x40, 0xae, 0x61, 0x57, 0xa0, 0x0d, 0xc4, 0x01, 0x6f, 0x0f, 0x5d, 0xaa,
-  0x35, 0x21, 0x43, 0xdc, 0x47, 0xb8, 0xb4, 0x43, 0xd6, 0xa0, 0x61, 0xa0,
-  0xb0, 0x2e, 0x15, 0xf3, 0xb9, 0x2b, 0x98, 0xcb, 0x26, 0xa3, 0xb2, 0xcf,
-  0x55, 0x62, 0x55, 0x93, 0xf5, 0x52, 0x2c, 0x23, 0xf1, 0x03, 0x81, 0x52,
-  0x4b, 0x63, 0x7a, 0x99, 0xf4, 0x56, 0xdf, 0x83, 0xbd, 0x28, 0x7e, 0x93,
-  0x2a, 0x93, 0x94, 0x99, 0x7f, 0x23, 0xa5, 0x15, 0x44, 0xd9, 0xda, 0xd0,
-  0x0b, 0xfd, 0xef, 0x7a, 0x89, 0x6f, 0x8a, 0x31, 0x31, 0x8a, 0xcc, 0x6b,
-  0x91, 0xf9, 0x65, 0x6d, 0x85, 0x77, 0x62, 0x79, 0x60, 0xfe, 0xc8, 0xe1,
-  0x53, 0xbc, 0x24, 0x34, 0x8e, 0x76, 0x18, 0xde, 0x6a, 0xce, 0x4b, 0x36,
-  0x68, 0xea, 0x51, 0x0c, 0xf7, 0x9a, 0x56, 0x67, 0xed, 0xbd, 0xb0, 0xd0,
-  0x4a, 0x0a, 0x1c, 0xc9, 0x6d, 0x04, 0x11, 0x1e, 0xac, 0xcc, 0xce, 0xa6,
-  0xc8, 0x6d, 0x55, 0xce, 0x46, 0x98, 0xcb, 0x5c, 0x9c, 0x52, 0xbd, 0xeb,
-  0x92, 0x21, 0x2f, 0x7b, 0xfb, 0xc9, 0x71, 0xa3, 0x81, 0xd5, 0x32, 0xc7,
-  0x55, 0x01, 0x38, 0xc0, 0x14, 0xfd, 0xe6, 0xf4, 0xcd, 0x91, 0x0d, 0xea,
-  0x67, 0x93, 0x11, 0x7d, 0x12, 0x05, 0xaf, 0x1e, 0x22, 0x26, 0x4b, 0x71,
-  0x1d, 0xfa, 0x61, 0x65, 0x60, 0xac, 0xce, 0x55, 0xd6, 0x2c, 0xee, 0x96,
-  0xf9, 0x74, 0x03, 0xc8, 0x1b, 0xef, 0x8a, 0xfc, 0xc3, 0x80, 0x6d, 0x62,
-  0x40, 0x47, 0xac, 0x15, 0x7c, 0x42, 0xa1, 0x2b, 0xd8, 0x6e, 0x54, 0xce,
-  0x23, 0x90, 0x77, 0x9a, 0x6c, 0xe2, 0xeb, 0x61, 0x48, 0x44, 0xcb, 0x0b,
-  0xf6, 0xaf, 0x72, 0x93, 0x9b, 0xc4, 0x01, 0x54, 0xb6, 0xc7, 0xbe, 0x47,
-  0x12, 0x14, 0xbc, 0xfd, 0xa6, 0xe6, 0x0e, 0xce, 0xce, 0x5e, 0x1d, 0x5c,
-  0x1c, 0xd8, 0xb9, 0x31, 0x16, 0x19, 0x71, 0x15, 0x18, 0x3a, 0x48, 0x74,
-  0x13, 0xe4, 0xab, 0xf5, 0x3f, 0x50, 0xee, 0x5a, 0xf7, 0xb2, 0x3f, 0x3b,
-  0x3f, 0x25, 0x73, 0xd5, 0x1f, 0x7e, 0x3a, 0xf0, 0x00, 0x5f, 0x5e, 0xa5,
-  0x4d, 0x1a, 0xa6, 0x0c, 0xec, 0x6e, 0x26, 0x34, 0x3e, 0x45, 0x45, 0xed,
-  0xdb, 0xa0, 0x21, 0x0e, 0xcf, 0x4a, 0xde, 0xd3, 0x9e, 0x56, 0x13, 0x2b,
-  0x3d, 0xb1, 0x1d, 0x9a, 0xb7, 0x33, 0x02, 0xa5, 0xec, 0x4d, 0xa4, 0x74,
-  0x5c, 0x4c, 0x21, 0x4f, 0x75, 0xad, 0x66, 0x46, 0xe6, 0x37, 0x62, 0x6b,
-  0x03, 0xde, 0x41, 0x76, 0x63, 0xa2, 0xaf, 0x29, 0x2d, 0x54, 0x17, 0x9d,
-  0xdd, 0xee, 0x8f, 0x6e, 0x10, 0x97, 0x6a, 0x64, 0xa4, 0x1b, 0xf0, 0x00,
-  0x0e, 0x67, 0x2f, 0xb9, 0x98, 0xf7, 0x50, 0x47, 0x2b, 0xba, 0x79, 0x70,
-  0x76, 0xd8, 0xb7, 0x69, 0xe8, 0x5c, 0xe7, 0x30, 0x0c, 0xbd, 0x50, 0x83,
-  0xc1, 0x40, 0x7d, 0x54, 0x3c, 0x6d, 0xf3, 0x41, 0xf0, 0x50, 0xa3, 0x05,
-  0x8b, 0x95, 0xd1, 0xc7, 0xf9, 0x84, 0x67, 0xde, 0xea, 0x0a, 0xf3, 0x82,
-  0x03, 0x63, 0x1e, 0xa2, 0x41, 0xd3, 0x92, 0x43, 0x74, 0xee, 0x45, 0xc0,
-  0x39, 0xc5, 0xb5, 0x67, 0x1e, 0xad, 0x97, 0x64, 0xfc, 0xa3, 0xbf, 0xb6,
-  0x76, 0x86, 0xdb, 0xbd, 0x70, 0xf0, 0x88, 0xe5, 0x87, 0x81, 0x55, 0x8b,
-  0xd4, 0x70, 0xdd, 0xa1, 0xf2, 0xd1, 0xf1, 0x31, 0xfb, 0x32, 0x02, 0xe9,
-  0xc2, 0xb4, 0x1f, 0x1d, 0xca, 0xe0, 0x34, 0xb0, 0xc2, 0xb3, 0x87, 0x51,
-  0x18, 0xa2, 0xe1, 0x87, 0x45, 0x09, 0x1c, 0x84, 0x94, 0xb4, 0xa1, 0x96,
-  0x6d, 0xaf, 0x17, 0x5f, 0xe6, 0x62, 0xca, 0xc1, 0x12, 0x9d, 0xd5, 0xfe,
-  0x55, 0xd9, 0xb5, 0x96, 0x0a, 0x3c, 0x67, 0xd3, 0x4a, 0x9e, 0xd7, 0x72,
-  0x25, 0xdd, 0x64, 0x46, 0x1e, 0x9c, 0x21, 0x99, 0x94, 0x4c, 0xb3, 0xab,
-  0x30, 0xd6, 0xdb, 0x75, 0xda, 0x6a, 0x17, 0x1a, 0xcc, 0x35, 0x01, 0xfc,
-  0x44, 0x19, 0x07, 0x74, 0x5b, 0x65, 0x14, 0xdb, 0x9e, 0xe4, 0xd3, 0x00,
-  0x74, 0xa3, 0x03, 0x4e, 0x67, 0x07, 0x41, 0x36, 0x8a, 0x71, 0x66, 0x25,
-  0x7f, 0x6e, 0x5d, 0x65, 0x44, 0x40, 0xf6, 0xdd, 0xe6, 0xd3, 0x65, 0x20,
-  0x36, 0x74, 0xdf, 0x1f, 0x12, 0xaf, 0x6d, 0x41, 0x2a, 0xb1, 0xfd, 0x85,
-  0x9e, 0x28, 0xad, 0x15, 0x99, 0x7c, 0x5a, 0x7c, 0xb2, 0x02, 0xbb, 0xf8,
-  0x65, 0xe6, 0xe3, 0x54, 0x1d, 0x9e, 0xbd, 0xff, 0xf6, 0xe8, 0xe8, 0xec,
-  0xf8, 0xd5, 0xc9, 0x91, 0xdc, 0x36, 0xf6, 0xa3, 0xb7, 0x17, 0xdf, 0x9d,
-  0x38, 0x98, 0x7c, 0x71, 0x37, 0x77, 0xd5, 0x7e, 0x0a, 0x63, 0x44, 0x73,
-  0x27, 0x79, 0xb1, 0xfc, 0xd0, 0x07, 0xfa, 0x97, 0xa1, 0xe9, 0x83, 0xe3,
-  0x1f, 0xfa, 0xc9, 0x37, 0x67, 0x83, 0x77, 0x3f, 0x04, 0xa8, 0x3e, 0x2d,
-  0xe3, 0x51, 0x57, 0xbe, 0xb4, 0x99, 0x0f, 0xa8, 0xa3, 0xea, 0xe6, 0xae,
-  0x7a, 0x70, 0xdb, 0xff, 0xf5, 0xf9, 0xa7, 0x48, 0x49, 0x0e, 0x43, 0xbf,
-  0x0a, 0xaf, 0x76, 0x92, 0x27, 0xcc, 0xcb, 0x05, 0x0c, 0x72, 0x78, 0xb6,
-  0xad, 0x98, 0xfc, 0x6d, 0x02, 0xbc, 0x4f, 0x5e, 0x98, 0x7f, 0x62, 0x98,
-  0x9a, 0x5b, 0xa3, 0xd1, 0x37, 0x9b, 0xc9, 0x99, 0x57, 0x8e, 0xc4, 0x9a,
-  0xa4, 0x86, 0x1a, 0xe6, 0x0c, 0xbb, 0x50, 0xe9, 0x1b, 0xb7, 0x2a, 0x2a,
-  0x61, 0x11, 0x06, 0x7e, 0xf8, 0x05, 0x4d, 0x72, 0xab, 0x07, 0xf1, 0xc9,
-  0xe3, 0x94, 0x49, 0xd3, 0x1b, 0x2e, 0x81, 0x36, 0x2a, 0x3c, 0xcb, 0x8d,
-  0x5d, 0x01, 0x09, 0x37, 0xbd, 0xa6, 0x4b, 0x59, 0x69, 0x81, 0x8e, 0xe8,
-  0x34, 0x9f, 0x22, 0xa4, 0x1c, 0x7a, 0x1f, 0xcb, 0x0b, 0x49, 0xb2, 0xfe,
-  0xbf, 0xb6, 0x86, 0x75, 0x7d, 0xbd, 0x95, 0x4f, 0xdf, 0x57, 0x75, 0xba,
-  0xde, 0xbd, 0xa2, 0xbd, 0xaf, 0xa7, 0xf4, 0x75, 0xb2, 0x3e, 0xb4, 0x8f,
-  0xca, 0xef, 0xf4, 0xf9, 0xa7, 0x44, 0x0e, 0x34, 0x6b, 0xf3, 0x28, 0x52,
-  0x7f, 0xb0, 0x13, 0xf4, 0xe8, 0xd0, 0x4a, 0xe3, 0xe2, 0x8d, 0xa2, 0x46,
-  0xb0, 0x0d, 0xbc, 0xb9, 0xb4, 0x35, 0xc1, 0x6e, 0x30, 0x94, 0xbf, 0x56,
-  0x7e, 0x61, 0x38, 0xd4, 0xdc, 0x9c, 0xdb, 0x57, 0x47, 0xe7, 0x7d, 0x06,
-  0xf0, 0xf7, 0xc1, 0xfb, 0x1d, 0x74, 0xa2, 0x80, 0xf6, 0xaf, 0xd2, 0x52,
-  0xfb, 0xff, 0x46, 0xd0, 0xfe, 0x9b, 0x6a, 0x9c, 0xbc, 0x98, 0x99, 0x17,
-  0x67, 0xf1, 0xb4, 0xfb, 0x23, 0xc6, 0x27, 0xfb, 0x36, 0xab, 0xc6, 0x59,
-  0x55, 0xd6, 0x5d, 0xac, 0x2a, 0x01, 0x82, 0x67, 0x39, 0x15, 0xcd, 0xb0,
-  0x7a, 0x1a, 0xd3, 0x4f, 0x1b, 0xd8, 0xc6, 0x80, 0xa0, 0xda, 0x4d, 0x51,
-  0x5e, 0x47, 0x46, 0x00, 0x51, 0x09, 0x21, 0x72, 0xd1, 0x4f, 0xf0, 0x7d,
-  0x80, 0x99, 0xa6, 0xb3, 0xf5, 0x7e, 0xa8, 0x83, 0xaf, 0xcb, 0xaa, 0xaf,
-  0x9b, 0x8d, 0xe3, 0xd6, 0xe8, 0x08, 0x31, 0xde, 0x3e, 0x8f, 0x43, 0x20,
-  0x2c, 0x6a, 0x51, 0x3a, 0x58, 0xe5, 0xbf, 0x94, 0xb8, 0xdd, 0xfe, 0xaa,
-  0xe6, 0xda, 0xf9, 0xe1, 0xc1, 0x82, 0x45, 0x2f, 0x12, 0x57, 0xf0, 0x13,
-  0xe5, 0x66, 0xb8, 0x80, 0x98, 0x57, 0xe8, 0xf3, 0x46, 0x16, 0x6f, 0x4f,
-  0x49, 0x20, 0x5a, 0x0e, 0x43, 0x70, 0xc9, 0x90, 0xd5, 0x4c, 0x22, 0x09,
-  0x45, 0x97, 0xa0, 0xb8, 0xcd, 0x77, 0xa4, 0x0d, 0xaa, 0xe3, 0x96, 0x4b,
-  0x97, 0x00, 0x99, 0x83, 0x63, 0x00, 0x23, 0xc7, 0xda, 0x96, 0x88, 0xcc,
-  0x9b, 0x4f, 0x4c, 0x3a, 0x7b, 0x0f, 0xd2, 0x4e, 0x2b, 0x93, 0xb8, 0xac,
-  0xe6, 0x82, 0x6b, 0x21, 0x55, 0xb1, 0xcd, 0xeb, 0xe6, 0xa4, 0xd8, 0xd4,
-  0x41, 0xaf, 0xe5, 0x19, 0x42, 0x6c, 0xf2, 0xba, 0x19, 0x90, 0x8f, 0x35,
-  0x9e, 0xcc, 0x06, 0xa5, 0x4c, 0x32, 0xc4, 0xd4, 0xc9, 0xeb, 0x15, 0x4f,
-  0x62, 0xe6, 0xc8, 0x25, 0xa9, 0x11, 0x98, 0x5a, 0x0b, 0xb4, 0xd0, 0x20,
-  0x56, 0x0d, 0xf3, 0x36, 0xcf, 0xee, 0x5c, 0x10, 0x84, 0x6f, 0xe3, 0xb7,
-  0x61, 0x0f, 0xb9, 0x1a, 0x99, 0x18, 0x6b, 0x9d, 0x2a, 0x3b, 0xd5, 0x91,
-  0xa0, 0x9e, 0x79, 0x3a, 0xb9, 0x36, 0xe2, 0xe9, 0x00, 0xe1, 0xed, 0x89,
-  0x0f, 0xe9, 0x85, 0x60, 0xfa, 0xee, 0x40, 0x13, 0x8e, 0x5b, 0x00, 0xaa,
-  0x0e, 0x02, 0x26, 0x57, 0x02, 0x73, 0xd3, 0x10, 0xad, 0x0f, 0x87, 0xc9,
-  0xdc, 0xc2, 0x22, 0x40, 0x0b, 0x2e, 0x2b, 0x5b, 0x9e, 0xc2, 0x05, 0x80,
-  0x47, 0xbc, 0xbc, 0x89, 0x54, 0x9f, 0x68, 0x99, 0xcc, 0x04, 0xa1, 0x2d,
-  0x4d, 0xde, 0x9e, 0x8c, 0x2e, 0xfc, 0x78, 0x09, 0xe0, 0xd9, 0x73, 0xad,
-  0xb6, 0x55, 0x5e, 0x3a, 0x3f, 0xa6, 0xf4, 0xe4, 0x78, 0x74, 0x11, 0xb5,
-  0x39, 0xec, 0x1b, 0xbd, 0x7d, 0x9e, 0xf9, 0x29, 0x83, 0x52, 0xdb, 0x15,
-  0xe9, 0xba, 0x1c, 0xf4, 0xa1, 0x26, 0xc6, 0xbc, 0xf2, 0x51, 0xf5, 0x82,
-  0x25, 0xa6, 0x21, 0xfe, 0x85, 0x0d, 0xb5, 0x12, 0xb5, 0xa7, 0xc1, 0xc0,
-  0xf5, 0x72, 0x3c, 0xf0, 0x90, 0x1a, 0x98, 0xd5, 0x00, 0x0a, 0x2d, 0x9f,
-  0x90, 0xf5, 0xe0, 0x26, 0xf4, 0x00, 0x6d, 0x9c, 0x9d, 0x9e, 0x3d, 0xb1,
-  0x80, 0x16, 0x02, 0xac, 0xd1, 0xf2, 0xc9, 0x4f, 0x12, 0x92, 0xff, 0x04,
-  0x7b, 0x90, 0x9e, 0x6e, 0x11, 0x57, 0x98, 0x65, 0xc4, 0xa4, 0x46, 0x0b,
-  0xd1, 0x59, 0x47, 0x71, 0x85, 0xb4, 0x83, 0x70, 0x29, 0x3e, 0xc5, 0xcb,
-  0x40, 0x8f, 0xa0, 0x27, 0x69, 0x38, 0x8e, 0x25, 0x45, 0xc9, 0x52, 0x02,
-  0x1d, 0x32, 0x19, 0x3a, 0x9e, 0xe0, 0x8d, 0xda, 0x9c, 0xe3, 0x20, 0x39,
-  0x8f, 0x30, 0xcf, 0xf2, 0xa9, 0xfa, 0x20, 0x5b, 0x48, 0x1b, 0x9c, 0x2e,
-  0x86, 0x02, 0xb3, 0x14, 0xf7, 0x00, 0x08, 0xf2, 0x15, 0x3b, 0xc9, 0xf6,
-  0x90, 0x56, 0x64, 0xd9, 0xe0, 0x07, 0xf6, 0xf0, 0x72, 0x14, 0xb6, 0x43,
-  0x72, 0xe9, 0x3f, 0x5a, 0x41, 0xd1, 0x65, 0x8e, 0x4b, 0x46, 0xaa, 0xd1,
-  0xe9, 0x8d, 0x88, 0x6a, 0xd7, 0x4e, 0xd6, 0x4a, 0x5c, 0x81, 0x32, 0x6d,
-  0xf2, 0x03, 0x9a, 0x5f, 0x22, 0xf6, 0x2f, 0xec, 0xd5, 0xba, 0x61, 0x6a,
-  0x45, 0x6e, 0xc6, 0x22, 0x70, 0xd8, 0x97, 0x14, 0xa8, 0x2c, 0x6e, 0x42,
-  0xc6, 0x85, 0xcf, 0x1b, 0x72, 0x57, 0x0a, 0x2a, 0x6a, 0x42, 0x6b, 0x12,
-  0x3b, 0xca, 0x37, 0x99, 0x1f, 0x5c, 0xde, 0x96, 0x48, 0x77, 0x77, 0x5a,
-  0xd8, 0x29, 0xad, 0xa8, 0xc0, 0x68, 0xf8, 0x0c, 0x2a, 0x90, 0x6e, 0xba,
-  0xda, 0x7e, 0xb2, 0xec, 0x1c, 0x23, 0xe5, 0xa1, 0xf4, 0x4a, 0x6f, 0xc8,
-  0x42, 0xbf, 0x02, 0x22, 0x6f, 0x77, 0x5c, 0x48, 0x13, 0x43, 0x24, 0xbb,
-  0x22, 0xfb, 0x35, 0x89, 0x2d, 0x6d, 0xbb, 0x21, 0x88, 0xe0, 0x2e, 0xf6,
-  0xb7, 0x5b, 0x60, 0x36, 0x02, 0x2b, 0x44, 0xf7, 0xd6, 0x93, 0x1f, 0x7e,
-  0xf0, 0x8e, 0x1d, 0x39, 0x6e, 0x37, 0xfb, 0xad, 0xab, 0xc2, 0x05, 0xf7,
-  0x4a, 0x79, 0x99, 0x69, 0x8c, 0x27, 0x28, 0x0d, 0x08, 0x71, 0x51, 0x28,
-  0x03, 0x8c, 0x03, 0x43, 0x9b, 0x5a, 0xd1, 0x94, 0x57, 0x19, 0xb6, 0x82,
-  0x29, 0xc7, 0x0f, 0xa5, 0x0a, 0xaf, 0x79, 0x17, 0x93, 0xd4, 0xb7, 0xe1,
-  0x8f, 0x1c, 0xba, 0x81, 0xf8, 0x32, 0x7f, 0xa9, 0x6a, 0x7b, 0x51, 0x19,
-  0xf1, 0xe2, 0xae, 0x18, 0xc6, 0x2a, 0x02, 0x87, 0x48, 0x9b, 0x9c, 0x26,
-  0x83, 0x19, 0x71, 0x61, 0x64, 0xe0, 0x2f, 0x93, 0xc9, 0x71, 0x62, 0x66,
-  0xc8, 0xf2, 0x47, 0x6d, 0x4b, 0x90, 0x05, 0x41, 0x38, 0xec, 0xe2, 0x40,
-  0xb4, 0x0d, 0xd7, 0x62, 0x4a, 0x6d, 0x6c, 0x65, 0xd2, 0xc0, 0x4f, 0xa8,
-  0xae, 0x50, 0x7f, 0xb7, 0x38, 0xb6, 0x33, 0x2c, 0x63, 0x85, 0xb2, 0xbd,
-  0x9e, 0x49, 0x16, 0x81, 0x37, 0x92, 0xfc, 0xc6, 0xa4, 0xff, 0x67, 0x45,
-  0x80, 0xe2, 0x1c, 0x5c, 0x01, 0xae, 0x63, 0xd2, 0x0b, 0x51, 0x9d, 0xcb,
-  0x62, 0xd0, 0x54, 0x4b, 0xac, 0x10, 0x6d, 0x08, 0xe1, 0x9f, 0x90, 0x87,
-  0x41, 0xa1, 0xdc, 0x48, 0x54, 0xd5, 0x20, 0x23, 0x14, 0x9f, 0xe4, 0xec,
-  0x8d, 0x39, 0x20, 0xa9, 0x82, 0x20, 0x0a, 0x17, 0x33, 0x4b, 0xa6, 0x41,
-  0x28, 0x0b, 0x6d, 0xdf, 0xea, 0x60, 0x30, 0x4f, 0x3f, 0x0c, 0xf0, 0x58,
-  0x1d, 0x94, 0x42, 0x0b, 0x6c, 0xa9, 0xdc, 0x42, 0xed, 0x2f, 0x98, 0xea,
-  0xcb, 0x36, 0x3b, 0x48, 0x62, 0xba, 0x89, 0x82, 0xe8, 0x6e, 0xf8, 0xfa,
-  0xe8, 0xa2, 0x7b, 0xb4, 0x90, 0xd6, 0x29, 0xc6, 0x07, 0xe4, 0xe5, 0x50,
-  0x61, 0xdd, 0x77, 0x17, 0x9b, 0xae, 0xf4, 0x2d, 0x53, 0x69, 0x2b, 0xf6,
-  0x55, 0x72, 0x45, 0x42, 0x58, 0x5d, 0xce, 0x84, 0x11, 0x06, 0x0b, 0xdc,
-  0x5c, 0x7b, 0x20, 0xa8, 0x60, 0xf7, 0x93, 0xed, 0x9d, 0xbe, 0xf9, 0x67,
-  0x17, 0xd6, 0xbc, 0x27, 0xdb, 0x4f, 0xac, 0x8b, 0x42, 0x9f, 0x0a, 0xbc,
-  0x14, 0xc8, 0x24, 0x4e, 0xeb, 0x76, 0x5d, 0xdf, 0x27, 0x1f, 0x3e, 0xe0,
-  0xab, 0x76, 0xe0, 0xe8, 0xc0, 0xa6, 0x00, 0xac, 0x72, 0xc9, 0xe8, 0xc0,
-  0xdd, 0x8a, 0xc3, 0x2c, 0xb7, 0x2c, 0x38, 0x36, 0xcd, 0x56, 0x73, 0x19,
-  0xae, 0xc2, 0xf4, 0x6b, 0xba, 0x88, 0x0d, 0x3e, 0xa8, 0x9f, 0xa1, 0x95,
-  0x56, 0x6a, 0x96, 0x66, 0xee, 0x84, 0x8c, 0x11, 0x8f, 0x49, 0x20, 0x35,
-  0x31, 0x8e, 0xed, 0x0f, 0xfe, 0x7d, 0xdd, 0x22, 0x09, 0xc3, 0x2e, 0x73,
-  0x3f, 0x65, 0xb4, 0x5e, 0x81, 0xe6, 0xb9, 0x4f, 0xe1, 0xea, 0xe6, 0x50,
-  0x60, 0x85, 0xf5, 0xd7, 0x5d, 0xa9, 0xf4, 0xcb, 0x7f, 0x3d, 0xf1, 0x45,
-  0x4f, 0xad, 0xa3, 0x1e, 0xad, 0x25, 0x78, 0xc0, 0x55, 0xbd, 0x7d, 0xde,
-  0x45, 0xe7, 0xaf, 0xa0, 0xa4, 0xb5, 0x29, 0x67, 0xaf, 0x09, 0x92, 0x84,
-  0x00, 0x0f, 0x88, 0x3f, 0x15, 0xbf, 0x47, 0x6a, 0xd5, 0x22, 0xf6, 0x0b,
-  0xd8, 0xa7, 0x5a, 0xbf, 0x7d, 0xc0, 0x33, 0x3c, 0x4c, 0xc4, 0x03, 0x8f,
-  0x8d, 0x56, 0x87, 0xb1, 0xc4, 0x80, 0xb3, 0x66, 0x19, 0xc7, 0xbd, 0x52,
-  0xb7, 0xac, 0x51, 0x39, 0x66, 0x0c, 0xd4, 0x66, 0x73, 0x56, 0x2a, 0x1d,
-  0x16, 0xe7, 0x3a, 0xb8, 0x50, 0x41, 0x7a, 0xef, 0x77, 0xff, 0xa2, 0x34,
-  0x2f, 0xae, 0x5c, 0x87, 0x50, 0xbb, 0xc2, 0x0f, 0x16, 0x31, 0xc0, 0x74,
-  0x92, 0xf5, 0xc1, 0x2e, 0x06, 0xb0, 0x3c, 0xbc, 0x30, 0x22, 0x47, 0x36,
-  0x5d, 0x19, 0x0e, 0xc0, 0x38, 0x3c, 0x52, 0xd5, 0xd0, 0xe5, 0x5a, 0xa3,
-  0x62, 0x86, 0x2b, 0x92, 0xea, 0x43, 0xad, 0x0f, 0x22, 0x44, 0x02, 0xd8,
-  0x51, 0x87, 0xfa, 0x00, 0xb5, 0x13, 0x78, 0x93, 0x0a, 0x58, 0x24, 0xa1,
-  0xa6, 0xb2, 0x04, 0x22, 0x27, 0x51, 0xf3, 0x88, 0xb4, 0x4b, 0x03, 0x41,
-  0x98, 0x4a, 0xed, 0x0a, 0xcc, 0x68, 0xca, 0x71, 0x39, 0xeb, 0x53, 0x96,
-  0x8f, 0xb1, 0x09, 0x76, 0x9c, 0x74, 0x4c, 0x64, 0x5c, 0xf8, 0x82, 0x6e,
-  0x84, 0x20, 0x24, 0x66, 0x6c, 0x9a, 0xb8, 0xcb, 0xa7, 0xcd, 0x35, 0x10,
-  0x84, 0x71, 0x47, 0x52, 0x59, 0x28, 0x4a, 0x2a, 0x10, 0x89, 0x23, 0x8f,
-  0xa5, 0x32, 0x46, 0xab, 0x9b, 0xf1, 0x1e, 0x61, 0x4d, 0x13, 0x86, 0xba,
-  0xa2, 0x5c, 0x1a, 0x6c, 0x03, 0x62, 0xa0, 0xb7, 0xd8, 0xfa, 0x64, 0xd1,
-  0x5c, 0x8c, 0xc8, 0xb7, 0xbc, 0x24, 0x64, 0xe0, 0x50, 0x7c, 0xd4, 0xec,
-  0xc3, 0xa1, 0x3d, 0x14, 0xb0, 0xee, 0xac, 0xdf, 0x30, 0xf4, 0xe5, 0xb7,
-  0xeb, 0x5a, 0x38, 0x71, 0x59, 0x30, 0xeb, 0x97, 0xec, 0x37, 0xc3, 0xb0,
-  0x6e, 0xf2, 0x59, 0x60, 0xee, 0x40, 0xf7, 0x46, 0x35, 0x9f, 0xe3, 0xf5,
-  0x37, 0xeb, 0x12, 0x08, 0x43, 0xe8, 0x99, 0x99, 0x04, 0x68, 0xf7, 0x05,
-  0xea, 0x77, 0xfd, 0x8a, 0xbb, 0xf8, 0x7a, 0xdd, 0x86, 0xcb, 0x04, 0xb7,
-  0x9d, 0x8b, 0xea, 0x56, 0x63, 0x7d, 0xbd, 0x9f, 0xec, 0x6e, 0x6f, 0x7f,
-  0x6b, 0x78, 0xec, 0x1c, 0x9b, 0xb2, 0xf3, 0x75, 0x34, 0x31, 0x92, 0x93,
-  0x88, 0xe8, 0xe2, 0xd3, 0x58, 0xfb, 0xc1, 0x5f, 0x89, 0x6b, 0x60, 0xcd,
-  0x98, 0x32, 0xad, 0xd7, 0x91, 0x93, 0x48, 0x9d, 0x00, 0xd3, 0xe5, 0x3d,
-  0xb4, 0x55, 0x52, 0xea, 0x85, 0x14, 0x31, 0x58, 0x30, 0x91, 0xcb, 0x45,
-  0x78, 0xec, 0x0b, 0x01, 0x2d, 0x26, 0x52, 0xe5, 0x76, 0x61, 0x6d, 0x9d,
-  0xd1, 0x03, 0x33, 0x52, 0x32, 0xcb, 0x20, 0xe3, 0x6e, 0xb6, 0x80, 0x19,
-  0xd7, 0x32, 0x68, 0x6f, 0x48, 0x04, 0x7e, 0x30, 0xd1, 0x40, 0xbf, 0x4f,
-  0xa9, 0x97, 0x03, 0xfe, 0x93, 0x11, 0x86, 0x5e, 0x98, 0x1d, 0xfd, 0xe2,
-  0xc7, 0x81, 0xf9, 0xf7, 0xe7, 0x20, 0xac, 0xa8, 0x61, 0x4c, 0x26, 0x29,
-  0x04, 0xa6, 0x89, 0x8f, 0x95, 0xab, 0x30, 0x8b, 0x76, 0x18, 0xe9, 0x80,
-  0xbf, 0xad, 0xbd, 0xc2, 0xbc, 0xd1, 0x98, 0x6e, 0x35, 0x9e, 0x6f, 0xd4,
-  0x9b, 0x5a, 0x40, 0x97, 0xad, 0x30, 0x8c, 0x8f, 0xa8, 0xad, 0xc0, 0x01,
-  0x5c, 0xf0, 0x79, 0x85, 0x65, 0x2c, 0x38, 0x9f, 0x14, 0xbc, 0x3a, 0xc9,
-  0x5c, 0x88, 0x13, 0x5a, 0xd1, 0xf9, 0x8e, 0x97, 0xf5, 0x3d, 0xc1, 0xa6,
-  0xb1, 0xcf, 0x00, 0x19, 0x32, 0x0a, 0x07, 0x6f, 0x96, 0x0d, 0xc3, 0x0f,
-  0x83, 0xc2, 0x28, 0xea, 0x8d, 0xc3, 0xc9, 0x9b, 0xd2, 0x5c, 0x7e, 0x69,
-  0x55, 0x19, 0xf1, 0x45, 0xb6, 0x5a, 0xb2, 0x61, 0xcd, 0xe0, 0x49, 0x21,
-  0x80, 0xf9, 0xc5, 0xba, 0x01, 0x4c, 0xdb, 0xcb, 0x45, 0x24, 0x8a, 0x8b,
-  0xd2, 0xe3, 0x03, 0x34, 0xc5, 0x16, 0x5a, 0x86, 0x8a, 0xe4, 0x2a, 0x82,
-  0x3d, 0xa8, 0x15, 0x9c, 0x40, 0x33, 0x27, 0x35, 0xc2, 0x7b, 0x53, 0x2a,
-  0xcc, 0x71, 0xad, 0x1c, 0xc8, 0x5b, 0xea, 0x6a, 0x58, 0x01, 0x4c, 0xfd,
-  0x67, 0x07, 0x10, 0xca, 0x05, 0x7d, 0x5d, 0x76, 0x91, 0xc0, 0x03, 0x50,
-  0x10, 0x03, 0x69, 0x4f, 0x4e, 0x48, 0x2d, 0xa3, 0xf5, 0x0a, 0xe8, 0x99,
-  0x92, 0x15, 0x2d, 0xd6, 0xb0, 0x9b, 0xaa, 0x9c, 0x2e, 0x27, 0x30, 0x3b,
-  0x50, 0xbc, 0x1a, 0xd5, 0xc9, 0x1b, 0x33, 0x5e, 0xa1, 0xa2, 0x66, 0x50,
-  0xd3, 0x56, 0x46, 0xec, 0x34, 0x27, 0xe6, 0xed, 0x94, 0x9f, 0xb2, 0x68,
-  0xd9, 0x60, 0xbb, 0x40, 0xcb, 0xcf, 0xe4, 0xee, 0xad, 0x02, 0x19, 0x1d,
-  0x55, 0x86, 0xe3, 0x05, 0x06, 0xd8, 0xf1, 0x48, 0x42, 0xf2, 0x87, 0xc6,
-  0x06, 0x2c, 0xa4, 0x1c, 0xb4, 0x09, 0xe9, 0xed, 0x2b, 0x8a, 0xb7, 0xee,
-  0x34, 0xe8, 0xc3, 0xe6, 0xcf, 0xfb, 0x22, 0xb4, 0x3e, 0xe8, 0x35, 0x7a,
-  0x63, 0x2f, 0x2f, 0x78, 0x89, 0xf2, 0x22, 0x59, 0x55, 0x95, 0x97, 0x06,
-  0x70, 0x77, 0x5d, 0xce, 0xfc, 0x7b, 0x3b, 0x8c, 0x4a, 0xa0, 0xfa, 0x19,
-  0xce, 0xe6, 0x27, 0xb7, 0x15, 0x09, 0xb2, 0x84, 0x90, 0x46, 0x03, 0xd5,
-  0x6a, 0x8f, 0x63, 0x54, 0x5a, 0xfa, 0x5b, 0x39, 0x16, 0x9d, 0x87, 0xea,
-  0x6f, 0x5c, 0x45, 0x33, 0x55, 0xe1, 0x82, 0xbf, 0x36, 0xef, 0xd4, 0xc9,
-  0x74, 0xc9, 0xd1, 0x1c, 0x34, 0x9e, 0x22, 0x6b, 0x88, 0xdf, 0x20, 0xec,
-  0x13, 0xf6, 0x8f, 0xe4, 0x0a, 0x19, 0xdf, 0x08, 0xf1, 0x36, 0x3c, 0x80,
-  0x8c, 0x4f, 0x9d, 0xe6, 0x3e, 0x1b, 0x3e, 0xd9, 0xa5, 0x3c, 0x42, 0x9f,
-  0x19, 0xc5, 0x0b, 0xf4, 0xf6, 0x2d, 0xfc, 0xa1, 0x44, 0xc3, 0xd1, 0xf2,
-  0x0c, 0x42, 0x1f, 0xa9, 0x88, 0xe1, 0x19, 0x41, 0x6a, 0xd6, 0xf0, 0x28,
-  0xa7, 0x14, 0x9f, 0x9c, 0x4e, 0xee, 0x15, 0x7e, 0xdc, 0x85, 0x67, 0x69,
-  0x91, 0x64, 0x33, 0x30, 0x3c, 0x1d, 0x94, 0xd1, 0x28, 0xec, 0x20, 0x88,
-  0x6b, 0xe7, 0x35, 0xa3, 0x7c, 0x75, 0x4a, 0x32, 0xcb, 0xf1, 0xb5, 0x25,
-  0x97, 0x57, 0xe8, 0x22, 0xbf, 0x29, 0xcb, 0xbd, 0xca, 0x8b, 0x81, 0xca,
-  0xb8, 0x2f, 0xe4, 0x97, 0x2f, 0x1e, 0x88, 0xf7, 0xc1, 0x1b, 0x56, 0x2a,
-  0x16, 0xbe, 0x2a, 0x85, 0x65, 0xd4, 0x22, 0xd3, 0xa2, 0xdb, 0x95, 0x52,
-  0xbd, 0x5e, 0x82, 0xd2, 0xa4, 0x6d, 0x93, 0x01, 0xef, 0x55, 0x0c, 0x5b,
-  0x54, 0x65, 0x53, 0x4e, 0xca, 0x99, 0x75, 0x33, 0x4c, 0xa2, 0xa9, 0x0e,
-  0xb5, 0x04, 0x07, 0x71, 0x31, 0x73, 0x5e, 0x10, 0x19, 0x55, 0x67, 0x38,
-  0xc9, 0x41, 0x83, 0xda, 0x0f, 0x90, 0x5f, 0x43, 0x33, 0xed, 0xf1, 0x9b,
-  0x83, 0xb3, 0x3e, 0xec, 0x65, 0x5c, 0xec, 0xe5, 0x0d, 0x59, 0xfe, 0x04,
-  0xfa, 0xbd, 0x35, 0x77, 0x76, 0x5a, 0x71, 0x05, 0x3f, 0xaf, 0xa0, 0x78,
-  0x57, 0x94, 0x19, 0xdb, 0xb8, 0xc2, 0xce, 0xd2, 0x99, 0x4b, 0x9a, 0xc8,
-  0x8a, 0x0c, 0x60, 0x84, 0xed, 0xb9, 0xfb, 0xe4, 0xf3, 0xbd, 0x3e, 0x7e,
-  0x7b, 0xba, 0xfd, 0x9c, 0x35, 0x88, 0xe3, 0xa3, 0x8b, 0xd7, 0x5d, 0x21,
-  0xbc, 0x32, 0xfa, 0x0b, 0xff, 0x3b, 0xc8, 0xd2, 0xea, 0x3a, 0xad, 0x1a,
-  0x0a, 0x56, 0x1a, 0xd4, 0xf3, 0x66, 0x31, 0xd8, 0xde, 0x1e, 0x36, 0x86,
-  0xa1, 0xf8, 0xbc, 0xfd, 0xc9, 0xde, 0x70, 0x7b, 0xf3, 0x53, 0x12, 0x10,
-  0x99, 0xad, 0x06, 0xb4, 0xc2, 0xc9, 0x0b, 0x49, 0xe2, 0x09, 0x7d, 0x57,
-  0x6f, 0x00, 0x8f, 0x63, 0xa3, 0xb4, 0x04, 0x71, 0x55, 0x1e, 0xf7, 0x92,
-  0x4e, 0x90, 0x16, 0xcb, 0x49, 0x9b, 0x1e, 0x09, 0xc4, 0xea, 0x26, 0x77,
-  0x59, 0xad, 0xe6, 0x0f, 0x25, 0x1b, 0x5a, 0x47, 0x6e, 0x33, 0xe1, 0x20,
-  0x3b, 0xae, 0xeb, 0xd1, 0xb8, 0x52, 0x42, 0x51, 0x24, 0x84, 0x5a, 0x52,
-  0x5e, 0xab, 0x8c, 0x40, 0xcf, 0xf8, 0x12, 0x92, 0x20, 0x06, 0x01, 0x5d,
-  0x78, 0x08, 0xf0, 0x72, 0xf7, 0x69, 0xbb, 0x4a, 0x13, 0xd6, 0x04, 0x8c,
-  0xef, 0x57, 0xae, 0x89, 0xbb, 0xf7, 0x58, 0xa8, 0x9e, 0x73, 0x2d, 0x1f,
-  0x01, 0x1e, 0x08, 0x81, 0x53, 0x6a, 0x2d, 0x9b, 0xf0, 0xf0, 0x30, 0xb7,
-  0xbb, 0xc3, 0xfc, 0x80, 0xea, 0xef, 0xb0, 0x9b, 0xbe, 0x80, 0x44, 0xfb,
-  0x91, 0xca, 0x10, 0xde, 0xd8, 0x50, 0xc1, 0x7e, 0xd3, 0x95, 0x67, 0x60,
-  0xb8, 0x30, 0x56, 0x76, 0xc8, 0xc8, 0xb0, 0x2a, 0xd0, 0xcf, 0x19, 0xc0,
-  0xf2, 0x76, 0xce, 0x24, 0xc8, 0x12, 0x6c, 0xba, 0xdf, 0x86, 0xb8, 0x8a,
-  0x09, 0xc1, 0x70, 0x14, 0xa3, 0xe8, 0x54, 0x5a, 0x4c, 0x5b, 0x36, 0x09,
-  0x14, 0xd5, 0x81, 0x99, 0x2e, 0xfb, 0x80, 0x98, 0x3b, 0xa3, 0xe6, 0x3e,
-  0x7b, 0x12, 0x9a, 0x85, 0x4f, 0x2f, 0x8e, 0xf6, 0xfd, 0xf2, 0xdb, 0x6c,
-  0x42, 0x16, 0xeb, 0x0d, 0x07, 0xc9, 0x31, 0x48, 0xd4, 0xa2, 0x22, 0xf4,
-  0x66, 0x6f, 0x76, 0xfd, 0x08, 0x62, 0x25, 0x32, 0x4c, 0xa9, 0xac, 0x27,
-  0xbb, 0x05, 0x56, 0xe6, 0xa1, 0x70, 0x4a, 0x77, 0x7e, 0xe9, 0xa9, 0xdb,
-  0xb1, 0x5a, 0x52, 0x98, 0x36, 0x97, 0x52, 0x5c, 0x2e, 0x12, 0xa1, 0xd0,
-  0x60, 0xb1, 0x98, 0x42, 0x20, 0xa9, 0x6b, 0x52, 0x77, 0x69, 0x6e, 0xc7,
-  0x2a, 0x88, 0x83, 0x80, 0x26, 0x4a, 0x7e, 0x0c, 0xa4, 0x2f, 0x5e, 0x28,
-  0x6c, 0xde, 0x65, 0x27, 0xb9, 0x19, 0xc4, 0x5b, 0x4d, 0x16, 0xcd, 0xaf,
-  0x25, 0xde, 0xbe, 0x03, 0x82, 0x67, 0x49, 0x8c, 0x43, 0xe3, 0xe0, 0x35,
-  0x41, 0xe8, 0x40, 0xa7, 0xb9, 0xf3, 0x6c, 0x91, 0x81, 0xda, 0x3d, 0x08,
-  0x26, 0x9f, 0x11, 0x59, 0x0b, 0x3b, 0xe1, 0x78, 0x68, 0x78, 0x0d, 0xdd,
-  0xa1, 0x0b, 0x02, 0x26, 0x0f, 0x4a, 0x66, 0xb1, 0x43, 0xa4, 0x55, 0x02,
-  0x0c, 0xc7, 0x47, 0x27, 0xab, 0x71, 0xb5, 0xf2, 0xbe, 0x9e, 0x2a, 0x1b,
-  0x44, 0x1a, 0x22, 0x56, 0x90, 0xe3, 0x01, 0x4d, 0xd8, 0xd3, 0x59, 0x3a,
-  0xd8, 0x0b, 0x6e, 0xbb, 0x1c, 0x3e, 0x70, 0xd2, 0xfc, 0x81, 0xf9, 0xe3,
-  0xf2, 0xf9, 0x56, 0xab, 0xea, 0x5c, 0xb2, 0xf1, 0xdd, 0xf9, 0xeb, 0xbf,
-  0x5a, 0x80, 0xc9, 0xcd, 0x7e, 0x12, 0xb5, 0x57, 0xeb, 0x0c, 0x3c, 0xaf,
-  0xb4, 0x13, 0x48, 0x44, 0x42, 0x69, 0x6d, 0x85, 0xfb, 0x23, 0xa4, 0xdd,
-  0x69, 0x89, 0x60, 0xa1, 0x0d, 0xf3, 0x1e, 0x05, 0x08, 0x8f, 0x44, 0x8b,
-  0x78, 0x32, 0x7c, 0x0a, 0x6f, 0xcf, 0xeb, 0xc3, 0xa7, 0x4f, 0x76, 0x77,
-  0x36, 0x87, 0xe1, 0xe5, 0xf2, 0xe8, 0x34, 0xdb, 0x14, 0x90, 0x7d, 0x58,
-  0x10, 0xfd, 0x6d, 0x1c, 0xfd, 0x70, 0xf6, 0xd6, 0x9b, 0xa0, 0xdd, 0x93,
-  0x40, 0x4a, 0xf4, 0x67, 0xc8, 0xb8, 0x09, 0x76, 0x8e, 0xce, 0x5c, 0x17,
-  0x10, 0x19, 0xc3, 0x85, 0x84, 0x48, 0x35, 0xbd, 0xd7, 0x55, 0x4e, 0x47,
-  0xaa, 0x47, 0xeb, 0xd1, 0x3b, 0x31, 0xb2, 0xb0, 0xd1, 0x73, 0x4e, 0x09,
-  0x5e, 0x2f, 0xeb, 0x75, 0xe0, 0xf0, 0xda, 0xb3, 0x6b, 0xd9, 0x88, 0xa1,
-  0x9d, 0x46, 0xf4, 0x52, 0x65, 0x90, 0x0e, 0x8c, 0xc7, 0x2a, 0x16, 0xa4,
-  0x4f, 0x59, 0xfb, 0x28, 0x27, 0xe1, 0x10, 0x72, 0x03, 0xdb, 0xde, 0x49,
-  0x7f, 0x0a, 0xc0, 0xab, 0xac, 0x67, 0xc4, 0x1a, 0xfb, 0x57, 0x83, 0x17,
-  0xab, 0x04, 0xee, 0xaa, 0x8d, 0x85, 0x15, 0xd9, 0x3b, 0x08, 0x0a, 0x90,
-  0x41, 0x7a, 0x24, 0xd4, 0x8e, 0xeb, 0x65, 0x35, 0x5d, 0xce, 0xcd, 0xfc,
-  0xbf, 0xba, 0xd7, 0x88, 0xa1, 0xbe, 0x48, 0x2c, 0x30, 0x00, 0x44, 0xf2,
-  0x12, 0x32, 0x0e, 0xc3, 0x7e, 0xba, 0xdd, 0x6a, 0x6f, 0x88, 0x55, 0xe8,
-  0xd8, 0x2f, 0x07, 0x3b, 0x16, 0x81, 0x87, 0x8c, 0x09, 0xb0, 0xbf, 0x75,
-  0xad, 0x5a, 0x24, 0x07, 0x7c, 0x4a, 0x21, 0x25, 0x6b, 0x52, 0x52, 0x23,
-  0x1e, 0x09, 0xee, 0x6b, 0x99, 0x99, 0xd9, 0x11, 0x8e, 0xda, 0x15, 0x5c,
-  0x4b, 0x9a, 0x4c, 0xc6, 0x62, 0x87, 0x24, 0x58, 0xb3, 0x90, 0xb6, 0xde,
-  0x48, 0x2f, 0xb6, 0xb2, 0x30, 0x38, 0xae, 0xcd, 0x5c, 0x67, 0x79, 0x72,
-  0x2f, 0xd9, 0x80, 0x8c, 0xf7, 0xf9, 0xd3, 0xbd, 0xcd, 0x76, 0x70, 0xcd,
-  0x66, 0xc4, 0xbf, 0x85, 0x55, 0xb3, 0xd9, 0x7c, 0x04, 0xeb, 0x8f, 0x4a,
-  0x7d, 0xa0, 0x73, 0x71, 0x94, 0x71, 0xcd, 0x33, 0xa8, 0xf6, 0x28, 0xdf,
-  0x20, 0xfe, 0xfe, 0xc0, 0xd4, 0x07, 0x73, 0x05, 0x17, 0xfa, 0x4b, 0x36,
-  0xe4, 0x70, 0xb8, 0x0b, 0xc8, 0x62, 0x23, 0x48, 0xda, 0x26, 0x4e, 0xae,
-  0x26, 0x4d, 0x6c, 0x52, 0x40, 0x5f, 0xcc, 0xe2, 0x0a, 0xd5, 0xc5, 0xab,
-  0x62, 0x8a, 0xda, 0xda, 0xa5, 0x77, 0xaf, 0x89, 0xb1, 0x5d, 0x12, 0xfc,
-  0xf9, 0xe6, 0x4c, 0x62, 0xe0, 0xb0, 0x86, 0xa7, 0x73, 0xca, 0x07, 0xdd,
-  0xc5, 0x76, 0x21, 0x39, 0xf4, 0x17, 0x70, 0x76, 0xb4, 0xff, 0xda, 0x82,
-  0x04, 0xe3, 0xb8, 0x1a, 0xdf, 0x01, 0x96, 0xee, 0x3c, 0x9b, 0x2b, 0x28,
-  0x3b, 0x0b, 0x09, 0x65, 0xe5, 0x2a, 0x7f, 0xb1, 0x79, 0x88, 0xef, 0x7b,
-  0x04, 0x20, 0xae, 0xc2, 0x89, 0x51, 0xed, 0x26, 0x55, 0x44, 0x8d, 0xd6,
-  0xc0, 0x56, 0x54, 0xff, 0xb1, 0xc4, 0xa6, 0xb8, 0x31, 0xdd, 0x5c, 0x73,
-  0xfd, 0xdd, 0x12, 0x65, 0x58, 0x0e, 0x8b, 0x3b, 0xed, 0x2c, 0xc3, 0x8a,
-  0xc1, 0x73, 0x45, 0x2c, 0x60, 0x04, 0x40, 0x55, 0x1a, 0x84, 0x19, 0x27,
-  0xc9, 0x06, 0xc6, 0xbb, 0xb5, 0xb5, 0xf9, 0xe8, 0x98, 0xe5, 0xc1, 0xc7,
-  0xc6, 0x78, 0xc6, 0xba, 0x0b, 0x2d, 0x6e, 0xe6, 0xd0, 0xc4, 0xdc, 0x20,
-  0xa8, 0x53, 0xda, 0x30, 0x86, 0xeb, 0xe6, 0x98, 0x44, 0x1b, 0xd8, 0x6d,
-  0xc4, 0xaa, 0xd0, 0xcc, 0x25, 0x01, 0x50, 0x98, 0x5d, 0x7b, 0xe2, 0x22,
-  0x09, 0x33, 0x74, 0x81, 0xf0, 0x04, 0x4d, 0xb8, 0xa0, 0x84, 0x9d, 0x59,
-  0x50, 0xc6, 0xb1, 0xe8, 0x54, 0x02, 0xf2, 0xe6, 0xc7, 0xbe, 0x12, 0xe7,
-  0xb7, 0xe5, 0x63, 0xa1, 0x3a, 0x07, 0xfb, 0x77, 0x43, 0x56, 0xac, 0x4f,
-  0x77, 0xaa, 0xa0, 0x87, 0xc8, 0x74, 0xfc, 0x20, 0x1d, 0x1e, 0xf5, 0xf9,
-  0x86, 0xb4, 0x29, 0x10, 0x2d, 0xea, 0x76, 0xe2, 0x36, 0xab, 0x2c, 0xbd,
-  0x71, 0xf3, 0x66, 0x8c, 0x49, 0x4d, 0x39, 0x73, 0xc0, 0x3c, 0x48, 0x66,
-  0x8a, 0xe3, 0x6c, 0x58, 0xea, 0xc6, 0x9a, 0x69, 0xd1, 0x4a, 0x7c, 0xda,
-  0x5a, 0xce, 0x3e, 0x1f, 0x52, 0x44, 0xcb, 0xc7, 0x64, 0x6a, 0xd4, 0x20,
-  0x79, 0x50, 0x8b, 0x00, 0x5a, 0x93, 0x19, 0x16, 0xc7, 0x89, 0x01, 0x0a,
-  0x9e, 0x21, 0xe4, 0xc9, 0xc9, 0x64, 0x17, 0x5a, 0xa2, 0xc9, 0x86, 0xde,
-  0x0d, 0x5a, 0x90, 0xd1, 0xaa, 0xc8, 0x9a, 0x6a, 0x12, 0xd8, 0xa9, 0x60,
-  0x68, 0xe7, 0xfc, 0xa0, 0x1a, 0x79, 0x90, 0x58, 0xa4, 0x21, 0x1e, 0x36,
-  0xdd, 0xbf, 0x97, 0x5f, 0x4a, 0x9b, 0xce, 0xb0, 0xe9, 0x1f, 0x8a, 0x48,
-  0xdc, 0xfa, 0x7a, 0x6d, 0xe3, 0xec, 0x25, 0x0e, 0x89, 0x98, 0x24, 0x2b,
-  0xe0, 0x36, 0x05, 0xde, 0xb9, 0xa4, 0x6d, 0xc0, 0xd7, 0xfd, 0x22, 0x08,
-  0x5d, 0x9d, 0xd8, 0x78, 0x2a, 0xce, 0x51, 0x01, 0x2a, 0x07, 0x27, 0x70,
-  0xb8, 0xd8, 0x00, 0xe8, 0x1a, 0x0c, 0x5a, 0xe3, 0xf4, 0x10, 0xae, 0xdd,
-  0x18, 0x19, 0x5d, 0x60, 0x92, 0x20, 0x3b, 0x10, 0xe6, 0xb8, 0xf1, 0xd4,
-  0xcc, 0xac, 0x59, 0x6c, 0xec, 0x6c, 0xa2, 0x2f, 0x2d, 0x01, 0xe5, 0x95,
-  0x8d, 0x08, 0x75, 0x0e, 0x84, 0x4e, 0x25, 0x87, 0x1e, 0x4e, 0x3c, 0xe2,
-  0x06, 0x51, 0xf9, 0x01, 0x01, 0xe0, 0x97, 0x7c, 0x16, 0x98, 0x32, 0x24,
-  0x12, 0x4b, 0x71, 0x1c, 0xba, 0x52, 0x25, 0x0c, 0xcb, 0x0b, 0xca, 0x55,
-  0xa8, 0xb9, 0x98, 0xe8, 0x46, 0x6e, 0x65, 0x64, 0xbe, 0x1a, 0x92, 0x2c,
-  0xe7, 0x28, 0x88, 0xb2, 0x9a, 0x4d, 0x07, 0x74, 0x73, 0x5c, 0x55, 0xe5,
-  0x72, 0x31, 0xa8, 0x22, 0xc8, 0x5c, 0x72, 0x7b, 0x80, 0xab, 0xc7, 0x52,
-  0x67, 0x92, 0x1e, 0x65, 0xd5, 0xf4, 0xec, 0xe5, 0xee, 0xe7, 0xee, 0xc4,
-  0x73, 0x5f, 0x78, 0x37, 0x03, 0x0a, 0x3d, 0x48, 0xfe, 0xbe, 0xcc, 0x0d,
-  0x45, 0xd3, 0xb6, 0x22, 0x10, 0x11, 0x29, 0x1a, 0x99, 0x75, 0xb1, 0x1b,
-  0xc6, 0x41, 0x41, 0x04, 0x52, 0x4b, 0xb1, 0x21, 0x7d, 0x2a, 0x75, 0x04,
-  0x16, 0x98, 0x3a, 0xd9, 0x2a, 0x6a, 0x65, 0x01, 0x60, 0x8c, 0x97, 0x22,
-  0x69, 0x22, 0x4e, 0x8e, 0x03, 0x27, 0x58, 0x68, 0x26, 0xae, 0xce, 0x04,
-  0xb0, 0xaa, 0x02, 0xd6, 0xfa, 0xfc, 0x9e, 0xee, 0xb0, 0xf5, 0x76, 0x29,
-  0xac, 0xf5, 0x9a, 0x4c, 0x8b, 0xcd, 0xba, 0x2e, 0x6f, 0x27, 0x27, 0x2c,
-  0xac, 0x69, 0xb3, 0xa2, 0x6b, 0xa6, 0x6a, 0xee, 0xc2, 0xb5, 0xce, 0x8d,
-  0xbb, 0xd3, 0xf7, 0xb6, 0xcf, 0x01, 0xeb, 0xe3, 0x25, 0x05, 0x73, 0x74,
-  0x9a, 0x7e, 0xc5, 0x8c, 0x9a, 0x05, 0x02, 0x7e, 0x42, 0x4a, 0x8d, 0x3a,
-  0xc0, 0x1f, 0x02, 0xa2, 0xca, 0xd2, 0xf9, 0x90, 0x0a, 0xf6, 0x0a, 0x58,
-  0x2c, 0xd9, 0x68, 0xc9, 0x32, 0xde, 0xdd, 0xf6, 0x25, 0xc8, 0xba, 0xee,
-  0xb7, 0xab, 0x17, 0x74, 0x82, 0xff, 0xb8, 0x1b, 0xf2, 0xb0, 0xfb, 0xcd,
-  0xc7, 0x3c, 0xcf, 0x78, 0xdd, 0x02, 0x8f, 0x88, 0x0e, 0xcd, 0x97, 0x8e,
-  0x18, 0x69, 0xa5, 0x09, 0x5b, 0x37, 0x84, 0x50, 0x50, 0xaf, 0x97, 0xc5,
-  0x8d, 0x19, 0x42, 0x18, 0xae, 0xac, 0xee, 0x92, 0x7c, 0x06, 0x58, 0x8b,
-  0x14, 0xf8, 0x8b, 0x8c, 0x2f, 0xe2, 0x5a, 0x20, 0xfc, 0xbc, 0x5b, 0x48,
-  0x24, 0x41, 0x3d, 0xa6, 0xd8, 0xe8, 0xe4, 0xa6, 0xe3, 0x51, 0xd9, 0x05,
-  0x8c, 0x67, 0x31, 0x8a, 0x71, 0xc7, 0x85, 0x98, 0x16, 0xd9, 0x95, 0x8f,
-  0x4e, 0xcd, 0x08, 0x0b, 0x0a, 0x0b, 0x04, 0x1d, 0x41, 0x0b, 0x3e, 0xc6,
-  0xca, 0x60, 0xc3, 0xf3, 0x2c, 0xdb, 0x4a, 0x54, 0xea, 0x03, 0x9a, 0x46,
-  0x46, 0x22, 0x2c, 0x78, 0x10, 0xe1, 0x25, 0x17, 0x5d, 0xe0, 0xd6, 0xda,
-  0x87, 0xb4, 0xc6, 0x6b, 0xfd, 0x16, 0xa8, 0x35, 0x83, 0xa3, 0x72, 0xe4,
-  0x7f, 0x13, 0x01, 0xa6, 0x37, 0x47, 0x62, 0xc3, 0xa8, 0x17, 0xe5, 0x6c,
-  0xc9, 0x35, 0xf4, 0xc8, 0xbc, 0x46, 0x59, 0x20, 0x9b, 0x7a, 0x9a, 0xf8,
-  0xfc, 0xd9, 0x88, 0x03, 0xe5, 0x62, 0x51, 0x9c, 0x38, 0x44, 0x6b, 0xfb,
-  0xb5, 0x2f, 0x39, 0x04, 0x53, 0x15, 0x77, 0x92, 0xff, 0xbd, 0xe6, 0x16,
-  0x88, 0xef, 0xbc, 0xb5, 0x70, 0x77, 0x81, 0x2d, 0x4a, 0xf5, 0x08, 0x7f,
-  0x3d, 0xac, 0x6d, 0x96, 0xa4, 0x02, 0x57, 0xa0, 0xce, 0xaf, 0xcd, 0x02,
-  0x5d, 0x83, 0x3a, 0x7b, 0x30, 0x02, 0xe1, 0x81, 0x88, 0xbb, 0xe8, 0x5a,
-  0x6b, 0xb5, 0x19, 0x09, 0xb8, 0x11, 0x89, 0x5f, 0x86, 0x26, 0x82, 0xfa,
-  0x3d, 0x46, 0x35, 0x5f, 0x92, 0xcb, 0x22, 0xb0, 0x5a, 0x9b, 0x5d, 0x99,
-  0x2d, 0xb9, 0xc4, 0x01, 0x25, 0xdf, 0x38, 0xe9, 0x3c, 0x1d, 0xd3, 0xe6,
-  0x8c, 0xef, 0xed, 0x3c, 0x35, 0x47, 0x1e, 0xc9, 0xec, 0xaa, 0x4a, 0x87,
-  0xe4, 0xa1, 0x8f, 0x75, 0xfa, 0xf9, 0x4e, 0x78, 0x6b, 0x40, 0x16, 0xec,
-  0x52, 0xf1, 0x11, 0x4f, 0x6e, 0x84, 0x9d, 0x28, 0x93, 0x5d, 0x46, 0xac,
-  0xaf, 0x76, 0x30, 0x2a, 0xa9, 0x93, 0x39, 0x20, 0xe5, 0x82, 0x4a, 0x02,
-  0xc1, 0x23, 0x6b, 0xa0, 0x09, 0x2d, 0x65, 0x3b, 0x7f, 0xca, 0x1c, 0x9d,
-  0x12, 0x35, 0x04, 0xe2, 0xb0, 0x3e, 0x47, 0x52, 0x3d, 0xf9, 0xad, 0x3e,
-  0x96, 0x6c, 0x8c, 0xce, 0xde, 0x1e, 0x7d, 0x7d, 0xba, 0xf9, 0x98, 0x93,
-  0xc2, 0xfa, 0xeb, 0x11, 0xe5, 0x81, 0x63, 0x85, 0x03, 0x1e, 0x69, 0x89,
-  0x3d, 0x60, 0xe5, 0x87, 0x7b, 0xaf, 0xcd, 0x58, 0x48, 0x5b, 0x9f, 0x73,
-  0x49, 0xf9, 0xbc, 0x32, 0xc6, 0xa5, 0x1d, 0xfe, 0x83, 0x70, 0x86, 0x36,
-  0x4c, 0x3f, 0x8d, 0x05, 0xe9, 0x7f, 0x3d, 0x1a, 0x0d, 0x0e, 0xce, 0x8e,
-  0x81, 0x0a, 0x30, 0x1a, 0x99, 0x5f, 0x56, 0xc1, 0xfe, 0x83, 0x97, 0x91,
-  0xb3, 0xf6, 0x3b, 0x38, 0x6b, 0x55, 0x2f, 0x95, 0x3b, 0x31, 0x4b, 0x5c,
-  0x6c, 0x3e, 0x97, 0x78, 0xd3, 0x60, 0x7c, 0xea, 0xa0, 0x7b, 0xdd, 0x9e,
-  0x1d, 0x6f, 0xa1, 0x2f, 0xb8, 0x48, 0xb0, 0x0e, 0xf1, 0x88, 0xb9, 0x65,
-  0x58, 0xcc, 0x8e, 0x56, 0x15, 0xa9, 0x16, 0xa0, 0x4f, 0x65, 0x1f, 0xa9,
-  0x91, 0x3c, 0x8d, 0xae, 0x3b, 0x58, 0x62, 0x6c, 0x91, 0x9a, 0xdd, 0x7a,
-  0x54, 0x80, 0xde, 0x48, 0xb9, 0x64, 0x5a, 0xd9, 0xa2, 0xe3, 0x0b, 0x80,
-  0xad, 0x97, 0xc1, 0x57, 0x09, 0x28, 0x7f, 0x24, 0x8e, 0xe7, 0xae, 0x5d,
-  0x6f, 0x7d, 0xb0, 0x4c, 0xf6, 0x51, 0x2b, 0x39, 0x2b, 0xa8, 0xd4, 0x79,
-  0xcb, 0x60, 0x26, 0x2c, 0x18, 0xba, 0x82, 0xbd, 0x50, 0xc5, 0x95, 0x09,
-  0x2e, 0x30, 0x58, 0xc6, 0x47, 0x67, 0x4e, 0x28, 0x09, 0x57, 0xec, 0x57,
-  0x9c, 0xdd, 0xc7, 0x73, 0x30, 0x3e, 0x05, 0x46, 0xb6, 0x7f, 0x24, 0xbc,
-  0xa4, 0xb4, 0x87, 0xae, 0x79, 0x61, 0x32, 0x2e, 0x81, 0x4d, 0x1c, 0x24,
-  0x56, 0xda, 0xbc, 0x38, 0x3c, 0xf3, 0x02, 0x0a, 0xfa, 0xa1, 0xc1, 0x63,
-  0x7c, 0xef, 0x32, 0xbc, 0x91, 0x5a, 0x5b, 0xd8, 0xd6, 0xe7, 0x0f, 0x27,
-  0xf0, 0x6b, 0xdd, 0xb2, 0x55, 0xb7, 0x9f, 0x7f, 0xf9, 0x89, 0xbb, 0x70,
-  0xf5, 0xd5, 0xe7, 0x66, 0xe0, 0xdd, 0x7e, 0xf6, 0xc3, 0xce, 0xd2, 0x08,
-  0xac, 0x58, 0x3e, 0x8d, 0x66, 0x58, 0xc9, 0x02, 0x69, 0x25, 0x27, 0x59,
-  0x22, 0x82, 0xf1, 0x51, 0xf4, 0xb6, 0xe3, 0x57, 0x66, 0x30, 0x24, 0x87,
-  0x91, 0xee, 0xf9, 0x95, 0x03, 0xd9, 0x09, 0x05, 0x48, 0x17, 0x33, 0xc6,
-  0xf7, 0x09, 0x95, 0xe8, 0xf3, 0x4c, 0x96, 0xd4, 0x4a, 0xe6, 0x81, 0xf4,
-  0x4b, 0x00, 0x92, 0x60, 0x07, 0xc6, 0x31, 0xa7, 0x89, 0x38, 0x10, 0xd0,
-  0x77, 0xbd, 0xe4, 0xea, 0xc4, 0x02, 0x26, 0x64, 0xcb, 0x7e, 0x56, 0x19,
-  0xea, 0x43, 0xd1, 0x80, 0xbd, 0x11, 0x07, 0x95, 0x44, 0x59, 0x1b, 0x37,
-  0x67, 0x7e, 0x2e, 0x21, 0xfe, 0xe3, 0xaa, 0xbc, 0x31, 0xa7, 0x95, 0xde,
-  0x83, 0xdc, 0x4c, 0x6b, 0xcf, 0x32, 0x9c, 0xaa, 0x95, 0xe6, 0x46, 0x99,
-  0x5a, 0x0f, 0x6b, 0x24, 0xbe, 0x93, 0x4a, 0xa7, 0x48, 0xb0, 0x84, 0x93,
-  0x85, 0xb8, 0x42, 0x04, 0x92, 0xf0, 0x14, 0x53, 0x18, 0xc6, 0xf3, 0xe5,
-  0x64, 0x92, 0x79, 0xd7, 0x64, 0xe8, 0x2b, 0x97, 0x62, 0x24, 0xff, 0x3e,
-  0x1a, 0xb2, 0x64, 0xe1, 0xd3, 0x50, 0x64, 0xcf, 0x5b, 0xc4, 0xc4, 0x4c,
-  0xff, 0x85, 0xa1, 0x2a, 0xe6, 0xe6, 0x64, 0x95, 0xeb, 0x9a, 0x85, 0x51,
-  0xd7, 0x67, 0xe0, 0x10, 0x6f, 0x38, 0x79, 0xe4, 0x52, 0xe2, 0x5b, 0x38,
-  0x1c, 0x64, 0xea, 0xca, 0x90, 0x09, 0x72, 0x71, 0x9f, 0x99, 0x71, 0x28,
-  0x66, 0x00, 0x54, 0xcf, 0xde, 0xda, 0xac, 0x58, 0x81, 0x49, 0xd0, 0xfe,
-  0x00, 0x38, 0x2f, 0xf7, 0x8a, 0x5a, 0xfe, 0xc9, 0x87, 0x13, 0x41, 0x5f,
-  0x81, 0x4a, 0xc1, 0xa5, 0x2e, 0x6c, 0xc4, 0x0d, 0x27, 0xfe, 0xd9, 0x74,
-  0x5d, 0x2a, 0x8c, 0xe5, 0xf3, 0x0c, 0x86, 0x55, 0x4e, 0x8e, 0x28, 0x7c,
-  0x26, 0xa2, 0xe7, 0x70, 0x1e, 0x0c, 0x8d, 0x11, 0xd3, 0x44, 0x18, 0x20,
-  0x7a, 0x80, 0x3f, 0x42, 0xf4, 0xc6, 0x54, 0x7d, 0x0d, 0x16, 0x6f, 0x89,
-  0x0b, 0x5b, 0x87, 0x02, 0x24, 0x8d, 0x88, 0x8d, 0xf9, 0x82, 0x4e, 0xa0,
-  0x1f, 0xd8, 0x12, 0x17, 0xaf, 0x5d, 0x14, 0x75, 0x3f, 0x61, 0xeb, 0x11,
-  0x54, 0x22, 0x8e, 0x54, 0x8c, 0x4d, 0x36, 0xf1, 0x1e, 0xf3, 0x5f, 0xd9,
-  0xff, 0x7c, 0x5b, 0x23, 0x69, 0xc9, 0x60, 0xe7, 0x3f, 0x03, 0x18, 0xcf,
-  0x50, 0x8d, 0xa0, 0xc7, 0xcc, 0xa7, 0xf6, 0xc9, 0x6e, 0x35, 0x9d, 0xe7,
-  0xc3, 0x3d, 0x3f, 0x64, 0xc7, 0x05, 0x77, 0x94, 0xc9, 0x0b, 0x9a, 0xc8,
-  0x3e, 0xdd, 0xae, 0xfb, 0xee, 0x53, 0xc0, 0x0a, 0xfb, 0x7f, 0xd3, 0xf7,
-  0x5f, 0x44, 0x70, 0x63, 0x53, 0x57, 0x69, 0xa2, 0xf4, 0x9c, 0xc4, 0x3d,
-  0xdb, 0x68, 0xcf, 0x5c, 0x5a, 0x84, 0x91, 0xa0, 0xdc, 0x9b, 0x79, 0x43,
-  0x2f, 0x82, 0xcd, 0xf4, 0x50, 0xd7, 0x3d, 0x8b, 0x4c, 0x38, 0x4c, 0x5a,
-  0xa5, 0x26, 0x97, 0x39, 0xc3, 0x27, 0x84, 0x6a, 0xb3, 0x86, 0x66, 0x79,
-  0xa1, 0xf0, 0x54, 0x25, 0xd4, 0xe5, 0xf6, 0xd8, 0xea, 0xb8, 0x49, 0x36,
-  0x24, 0x06, 0x4a, 0x07, 0x39, 0x5d, 0x19, 0xd9, 0x41, 0x22, 0x2d, 0xec,
-  0xc7, 0x05, 0x57, 0x8b, 0x42, 0x35, 0x62, 0xfe, 0xc8, 0x9c, 0x20, 0x49,
-  0xc7, 0x1a, 0xb6, 0x65, 0x25, 0xfa, 0xad, 0x90, 0x9b, 0x37, 0xb4, 0x32,
-  0x9a, 0x11, 0x99, 0xa1, 0xe7, 0xf5, 0xb5, 0x6a, 0x1f, 0xd0, 0x60, 0xdb,
-  0x85, 0xf7, 0x1a, 0x2d, 0x74, 0xfa, 0xf6, 0x14, 0xe1, 0xe2, 0x97, 0xbc,
-  0x82, 0x2b, 0xa9, 0x73, 0x8b, 0x63, 0x04, 0x5d, 0xd6, 0xa6, 0xb5, 0x14,
-  0x5d, 0x9c, 0x8c, 0xb6, 0x88, 0xa5, 0x6e, 0x60, 0xb2, 0xa3, 0xb7, 0xc7,
-  0x7d, 0x1f, 0xc3, 0x2d, 0x04, 0xb8, 0xb5, 0x1e, 0xc0, 0x4d, 0x49, 0x8a,
-  0xd3, 0x68, 0x07, 0x0f, 0x4b, 0xc3, 0xda, 0x57, 0x69, 0xe2, 0xbc, 0xe7,
-  0xbd, 0x24, 0xe2, 0xcf, 0xeb, 0xc9, 0x16, 0x4a, 0x3c, 0x0c, 0xa7, 0x18,
-  0x2d, 0x08, 0x34, 0x0f, 0x70, 0xd2, 0xfd, 0x44, 0xb3, 0xe2, 0x7b, 0xa4,
-  0x70, 0x50, 0x33, 0x98, 0x07, 0x39, 0xc1, 0x1e, 0x23, 0x94, 0x9e, 0x9c,
-  0x93, 0x5e, 0x48, 0x30, 0xd4, 0x9b, 0xa4, 0x76, 0x8c, 0x15, 0x41, 0x18,
-  0xdd, 0x46, 0x31, 0xad, 0xfb, 0x89, 0x1d, 0x45, 0xd2, 0xb3, 0x85, 0x0d,
-  0x85, 0x72, 0xd6, 0xeb, 0x36, 0xa4, 0xb8, 0x1d, 0xde, 0xc5, 0x4a, 0xb4,
-  0xd3, 0x16, 0x40, 0x03, 0x4d, 0xcb, 0xfa, 0x8f, 0x09, 0x1e, 0x1f, 0x9f,
-  0xe8, 0x89, 0xa8, 0x96, 0x33, 0xaf, 0xae, 0x5b, 0xec, 0x02, 0xda, 0x7b,
-  0xde, 0x8a, 0x9c, 0x31, 0xfc, 0xbe, 0x99, 0xcd, 0x5d, 0x59, 0x0f, 0x11,
-  0x75, 0x92, 0xb7, 0x17, 0x27, 0x6f, 0x92, 0xc0, 0x9e, 0xc7, 0x21, 0x05,
-  0xf8, 0xae, 0xfd, 0x55, 0xe0, 0xa7, 0x40, 0xaa, 0x02, 0x65, 0x5a, 0x18,
-  0xe5, 0x2f, 0xbf, 0x2a, 0xb8, 0x8c, 0xcf, 0x9b, 0x7c, 0x52, 0x95, 0x84,
-  0x6e, 0xc8, 0x26, 0x60, 0x31, 0x8e, 0x99, 0x2f, 0x8e, 0x8f, 0x47, 0xc9,
-  0x5d, 0x36, 0xb6, 0xb4, 0xdf, 0x95, 0x2c, 0x99, 0x02, 0x71, 0x89, 0x2c,
-  0xaa, 0x3c, 0x6b, 0x48, 0x55, 0x50, 0x82, 0x21, 0xe0, 0x03, 0x7a, 0x29,
-  0x1b, 0x64, 0x85, 0x59, 0xd6, 0x0c, 0xb6, 0x17, 0xaa, 0x19, 0x34, 0x83,
-  0x58, 0xb1, 0xc8, 0xca, 0x88, 0x53, 0x86, 0x07, 0xa0, 0x22, 0x81, 0xd4,
-  0x97, 0x21, 0x59, 0x6f, 0x9c, 0xd6, 0x16, 0xfb, 0x2d, 0x47, 0x85, 0x32,
-  0xd2, 0x15, 0xc4, 0x92, 0x7a, 0x93, 0x03, 0x5d, 0x23, 0x40, 0x9d, 0xd0,
-  0x22, 0xd8, 0x7e, 0x09, 0x0d, 0x94, 0x0f, 0x9a, 0x96, 0x15, 0x3c, 0x9c,
-  0x5e, 0x65, 0x04, 0x2a, 0xcd, 0xb3, 0x24, 0xc0, 0x11, 0x48, 0x3d, 0xf7,
-  0x11, 0x8d, 0xfb, 0xba, 0x64, 0x60, 0x1d, 0x2c, 0x33, 0x89, 0x15, 0x9c,
-  0x35, 0x8b, 0x70, 0x4d, 0x41, 0x39, 0x07, 0x9d, 0x3a, 0x41, 0x20, 0x79,
-  0x44, 0x43, 0xd3, 0xfd, 0x70, 0xb9, 0x7b, 0xe2, 0x27, 0x7b, 0x95, 0x5f,
-  0xad, 0xaa, 0x76, 0x13, 0x55, 0x12, 0x69, 0x44, 0x22, 0xf0, 0x84, 0xba,
-  0xa1, 0xd3, 0x05, 0x43, 0x49, 0xde, 0x69, 0x86, 0x86, 0xda, 0xfe, 0x05,
-  0xa5, 0x10, 0x22, 0xab, 0xe4, 0x6c, 0x3b, 0xb5, 0x2f, 0x70, 0x6c, 0x84,
-  0xc9, 0xd9, 0x11, 0xfd, 0x8f, 0x66, 0xf3, 0x6f, 0x57, 0x62, 0xcc, 0xf4,
-  0x07, 0x77, 0xe3, 0x47, 0xb4, 0x7a, 0x5a, 0xe6, 0x39, 0x6d, 0x91, 0xa2,
-  0xfd, 0x34, 0xf7, 0x80, 0x71, 0xc1, 0x51, 0x25, 0x26, 0xce, 0x76, 0x89,
-  0x6b, 0x22, 0x03, 0x32, 0xb1, 0x7c, 0x4c, 0x28, 0x99, 0x2d, 0x41, 0x2d,
-  0xf8, 0x14, 0x52, 0x36, 0x8a, 0x9a, 0x44, 0x98, 0x9b, 0xc7, 0x8c, 0x57,
-  0x84, 0x92, 0x31, 0xc2, 0x50, 0x26, 0xb5, 0x5f, 0x09, 0x8e, 0xa5, 0x35,
-  0xb7, 0x92, 0x0c, 0xb1, 0x62, 0xb0, 0x8c, 0xa6, 0x01, 0x7d, 0xcf, 0x88,
-  0x6d, 0x62, 0xd2, 0x2c, 0xe5, 0x21, 0x3f, 0xf9, 0xb6, 0x6e, 0xa6, 0x25,
-  0x21, 0xb0, 0x4b, 0x0d, 0x16, 0xd2, 0x2e, 0x58, 0xb1, 0xf8, 0xaf, 0x7f,
-  0x86, 0x99, 0x88, 0x3f, 0xfe, 0xcc, 0xf7, 0x3f, 0x63, 0xf3, 0xb8, 0x10,
-  0x1a, 0x3d, 0x16, 0xb5, 0x2b, 0x51, 0x46, 0x04, 0x48, 0x20, 0x74, 0x5a,
-  0x57, 0x02, 0x2a, 0x46, 0xf7, 0x26, 0xe0, 0xd8, 0x06, 0x59, 0x71, 0x19,
-  0x9b, 0x8a, 0xa4, 0x40, 0xe4, 0x4f, 0x3d, 0xfb, 0xbe, 0x2b, 0x77, 0x21,
-  0xd5, 0x16, 0xa6, 0xab, 0xea, 0xa5, 0x28, 0x90, 0x95, 0x94, 0x3b, 0x50,
-  0x40, 0x2a, 0xc2, 0x10, 0x62, 0x77, 0x34, 0xc6, 0x4f, 0x42, 0x2f, 0x42,
-  0xce, 0xf3, 0x22, 0x44, 0xfd, 0x66, 0xba, 0x15, 0xb7, 0xeb, 0x7f, 0x19,
-  0x3a, 0xeb, 0x9b, 0xfb, 0xfd, 0x9f, 0xbe, 0xf3, 0xd5, 0xac, 0x7e, 0xd2,
-  0xa3, 0x21, 0xbf, 0xff, 0xfd, 0x0e, 0xc5, 0x4a, 0x06, 0x30, 0x46, 0x1c,
-  0x25, 0x63, 0x29, 0xd8, 0x42, 0x7c, 0xad, 0xc0, 0x19, 0x6f, 0xf7, 0x48,
-  0x31, 0xe2, 0x7d, 0xba, 0xab, 0xfe, 0x39, 0xa4, 0x7f, 0x7f, 0xdc, 0x19,
-  0x3c, 0xfd, 0xd9, 0xf6, 0xfa, 0xfb, 0x9d, 0xf7, 0xbf, 0xdf, 0xed, 0xc5,
-  0x62, 0x61, 0x35, 0x2b, 0xb8, 0x1d, 0xba, 0x5c, 0xfb, 0x57, 0x98, 0x18,
-  0x27, 0x5c, 0x5c, 0x09, 0x8a, 0xc8, 0x85, 0x29, 0x5f, 0x64, 0x24, 0xef,
-  0x48, 0xc5, 0x5a, 0xe5, 0x49, 0x43, 0x78, 0xef, 0x4a, 0x7e, 0x59, 0x94,
-  0x7c, 0x8b, 0xdb, 0x89, 0x48, 0x9c, 0x08, 0x1e, 0x60, 0x9b, 0x3a, 0x10,
-  0xc1, 0x71, 0x93, 0xc5, 0x11, 0xea, 0xd4, 0x9d, 0x6c, 0x18, 0x70, 0x9a,
-  0x74, 0x56, 0x7d, 0x3c, 0xb6, 0x9f, 0x14, 0x9e, 0x5b, 0xc2, 0xcf, 0xe5,
-  0xe5, 0xbc, 0x7e, 0x28, 0x8b, 0xb6, 0x2c, 0x80, 0x79, 0xb3, 0x6c, 0xc3,
-  0x91, 0xf2, 0xe8, 0x5d, 0xd1, 0x2f, 0x42, 0x5f, 0xec, 0x32, 0xb6, 0xbf,
-  0x2d, 0x6b, 0xaf, 0xec, 0x22, 0xb3, 0x1d, 0xd3, 0x52, 0xee, 0x70, 0xce,
-  0xf8, 0x33, 0x22, 0x2e, 0xe4, 0xda, 0x97, 0xa4, 0x6b, 0x11, 0x32, 0x69,
-  0x34, 0x5b, 0x36, 0x1d, 0x53, 0x09, 0xa6, 0x16, 0x6e, 0x2b, 0xad, 0x07,
-  0xe4, 0x9c, 0xb1, 0xcb, 0x9f, 0x4b, 0xeb, 0x15, 0x0b, 0xe2, 0x2f, 0x85,
-  0xb7, 0x08, 0xb2, 0x50, 0x58, 0x9c, 0x28, 0x78, 0x2e, 0x0b, 0x52, 0x12,
-  0x1a, 0x0e, 0x84, 0xc7, 0x81, 0x97, 0xa2, 0x8a, 0x8c, 0x58, 0x7c, 0xea,
-  0x05, 0x06, 0x88, 0x87, 0x2c, 0x28, 0x5a, 0x41, 0xa8, 0x02, 0xd3, 0x7b,
-  0x23, 0xae, 0x32, 0xd2, 0xb2, 0x05, 0x8d, 0x51, 0x6b, 0x84, 0x70, 0x1b,
-  0xc1, 0x6c, 0xdc, 0x20, 0x99, 0x9c, 0x55, 0x48, 0x60, 0x8c, 0x6e, 0xc6,
-  0x8c, 0xdd, 0xce, 0xcb, 0xe0, 0x58, 0xd5, 0x58, 0xcc, 0x1c, 0x74, 0x9f,
-  0x30, 0x8f, 0x72, 0x7c, 0xaf, 0x8b, 0xa5, 0x1e, 0xe5, 0x7a, 0x5e, 0x5b,
-  0xa9, 0x1f, 0xeb, 0xc0, 0x45, 0x31, 0x85, 0xf4, 0x32, 0x8d, 0xc7, 0xc0,
-  0x57, 0x77, 0x19, 0x99, 0x44, 0xba, 0xa2, 0xd0, 0xc6, 0xa9, 0xbb, 0x75,
-  0x66, 0x59, 0xab, 0x84, 0x92, 0xff, 0xb2, 0x17, 0x5b, 0x95, 0xb1, 0xc3,
-  0x22, 0x87, 0x27, 0xba, 0x09, 0x31, 0xa9, 0x86, 0x9b, 0xb1, 0xac, 0x37,
-  0x19, 0x83, 0x26, 0x70, 0xa7, 0xb7, 0xce, 0x13, 0xbf, 0x12, 0x22, 0x5d,
-  0x19, 0x77, 0x77, 0x55, 0xd3, 0xa2, 0xf1, 0xaa, 0x38, 0xa4, 0xb6, 0xa8,
-  0xaa, 0x97, 0x80, 0xed, 0x43, 0x85, 0x08, 0xac, 0x26, 0x2a, 0x56, 0x45,
-  0x9a, 0x93, 0x1c, 0x59, 0xc1, 0xbe, 0x5d, 0x09, 0xd7, 0x2e, 0x58, 0x60,
-  0x80, 0x87, 0x44, 0x89, 0x1a, 0x76, 0x5f, 0x07, 0x29, 0xc6, 0x1e, 0x73,
-  0x8a, 0xa6, 0xff, 0xf9, 0xab, 0xaa, 0x78, 0xa0, 0x92, 0x72, 0x45, 0x73,
-  0x81, 0x90, 0x0f, 0x8c, 0x12, 0x86, 0xb4, 0xcf, 0x7c, 0x83, 0x6a, 0x90,
-  0x60, 0x27, 0x51, 0x56, 0x94, 0x55, 0xa4, 0xc5, 0x34, 0x92, 0x6c, 0x56,
-  0x6b, 0xb2, 0xab, 0xe1, 0x69, 0x40, 0xb1, 0x64, 0x68, 0x7a, 0x41, 0x85,
-  0xc8, 0x6d, 0xa2, 0xd5, 0x6a, 0xcc, 0x79, 0x7b, 0x65, 0xda, 0xb5, 0x76,
-  0x65, 0x8e, 0xe9, 0x92, 0x52, 0xbd, 0x96, 0x56, 0xaf, 0x2c, 0x45, 0x23,
-  0x59, 0x05, 0xcb, 0xce, 0x20, 0x74, 0xf0, 0x82, 0xac, 0xa8, 0x35, 0xa0,
-  0x26, 0x0e, 0x4f, 0x2f, 0x09, 0xc2, 0x41, 0x8c, 0x6a, 0x92, 0xeb, 0x71,
-  0xf6, 0xd7, 0xb8, 0x83, 0x82, 0xcf, 0xe3, 0xb1, 0x30, 0xfe, 0xce, 0x42,
-  0x1d, 0x13, 0x42, 0x38, 0xc2, 0x21, 0xbe, 0x3c, 0x22, 0x73, 0xfb, 0x8b,
-  0x12, 0x85, 0xc5, 0x97, 0x60, 0x1d, 0x62, 0x91, 0x80, 0xc3, 0xe7, 0xf4,
-  0x9b, 0x22, 0xf3, 0x63, 0x11, 0x04, 0x0a, 0xec, 0x18, 0xdb, 0x41, 0x21,
-  0xce, 0x7f, 0xd8, 0xdd, 0x5e, 0x05, 0x07, 0x4f, 0x0d, 0x69, 0x9d, 0x50,
-  0x3a, 0x8d, 0xb5, 0x1e, 0x47, 0xb6, 0xf0, 0xb8, 0x82, 0x64, 0x19, 0x52,
-  0x64, 0x29, 0xbe, 0x6e, 0x40, 0xf4, 0x12, 0x58, 0x9d, 0x5d, 0xc7, 0xff,
-  0x8e, 0xcb, 0xd4, 0x93, 0x49, 0x4b, 0x92, 0xff, 0x76, 0x07, 0xe3, 0xcc,
-  0xc8, 0x5b, 0xdd, 0x39, 0x6e, 0xb8, 0xb4, 0x91, 0x7e, 0xd2, 0x8e, 0x8f,
-  0xa6, 0xbe, 0xbe, 0xc2, 0x3b, 0xc9, 0x05, 0xac, 0xac, 0x74, 0x22, 0x4e,
-  0x0f, 0xde, 0x5d, 0x7c, 0x93, 0xec, 0x0e, 0xb7, 0x65, 0x7f, 0x1f, 0x84,
-  0x7b, 0x60, 0x90, 0xaa, 0x56, 0x1b, 0xaa, 0x13, 0xa2, 0xdc, 0x67, 0xf1,
-  0xb7, 0x65, 0xd1, 0x2e, 0xd8, 0x14, 0x8b, 0x39, 0x09, 0x09, 0xb2, 0x15,
-  0x2d, 0xac, 0x1c, 0x52, 0x1c, 0x1c, 0x80, 0xc0, 0x85, 0x4f, 0x69, 0xb0,
-  0x0c, 0xf5, 0x06, 0x34, 0xb8, 0xaa, 0xba, 0x1b, 0xd8, 0xa2, 0x8c, 0x56,
-  0x86, 0xab, 0x70, 0x5b, 0x1a, 0x7e, 0x5c, 0x65, 0x12, 0xb8, 0xd2, 0x74,
-  0xab, 0xc6, 0x9e, 0xbf, 0x3e, 0xec, 0x34, 0xf7, 0xec, 0xb3, 0xa7, 0xdb,
-  0x9f, 0x32, 0x38, 0xb4, 0x55, 0x6d, 0xee, 0xe1, 0x6a, 0x9e, 0xbf, 0xa6,
-  0x98, 0xe7, 0xca, 0x6a, 0x9e, 0x62, 0x4b, 0xfd, 0x98, 0x62, 0x9e, 0xb6,
-  0x96, 0xa7, 0xc4, 0x29, 0xc5, 0xf0, 0x63, 0xbc, 0xa4, 0x7c, 0x17, 0x7a,
-  0xeb, 0x17, 0x2a, 0x45, 0xdd, 0xf7, 0xda, 0xf3, 0x56, 0x42, 0xa2, 0x59,
-  0x16, 0x91, 0x80, 0x27, 0x71, 0x4a, 0xc3, 0xeb, 0xcd, 0xd0, 0x4b, 0x66,
-  0x86, 0x87, 0xa7, 0x6f, 0xdf, 0x1e, 0x1d, 0x5e, 0xb8, 0xe2, 0x74, 0x77,
-  0x5a, 0x00, 0x19, 0xcc, 0x34, 0xb5, 0x2a, 0x53, 0xbc, 0x9a, 0xa7, 0x87,
-  0xc6, 0x24, 0xfd, 0x23, 0x9b, 0x92, 0x55, 0x26, 0xfd, 0x52, 0x54, 0x32,
-  0x4e, 0xcb, 0x93, 0x2b, 0x25, 0x62, 0x76, 0x8b, 0x17, 0x71, 0x6c, 0x15,
-  0xbb, 0xe1, 0x5b, 0x31, 0x28, 0xe4, 0x08, 0x75, 0xc9, 0x2b, 0xe3, 0x28,
-  0x7d, 0xff, 0xdf, 0x54, 0xc4, 0xf1, 0x1b, 0x2d, 0xc6, 0xd7, 0xae, 0x9f,
-  0x1c, 0x2b, 0x53, 0xc8, 0xa0, 0xd7, 0x99, 0x17, 0x64, 0x18, 0xde, 0x5f,
-  0x96, 0x1c, 0xb8, 0xd0, 0x07, 0x6d, 0x04, 0xa5, 0xcc, 0xd4, 0xad, 0xdb,
-  0x46, 0xf7, 0x77, 0x55, 0x61, 0xc6, 0x76, 0x34, 0x84, 0x54, 0x42, 0x48,
-  0x56, 0x41, 0xad, 0xfe, 0x8a, 0xe2, 0x7d, 0xab, 0xe3, 0x19, 0xa9, 0xfa,
-  0xa4, 0x95, 0x6f, 0x07, 0x8b, 0xbe, 0x72, 0x84, 0x86, 0xf2, 0xaa, 0x67,
-  0x31, 0x9f, 0xb6, 0x19, 0x1d, 0xd2, 0x67, 0x98, 0x8a, 0x95, 0xf5, 0x6c,
-  0x0c, 0x3e, 0xd8, 0x77, 0x63, 0x00, 0x44, 0x08, 0x10, 0x0d, 0x02, 0x55,
-  0x8b, 0x01, 0x9a, 0x72, 0x56, 0x5d, 0x71, 0x70, 0x4b, 0x2d, 0x1a, 0x3e,
-  0x13, 0x18, 0x09, 0x11, 0x73, 0x05, 0x4f, 0xb5, 0x3b, 0x42, 0x81, 0xdd,
-  0xd2, 0x5a, 0x08, 0xe6, 0xe6, 0x06, 0x9f, 0x29, 0xa0, 0x49, 0xce, 0x45,
-  0x6d, 0x4a, 0xae, 0x71, 0x86, 0x03, 0x6d, 0xd3, 0x7c, 0xb9, 0xe4, 0x20,
-  0x3a, 0x09, 0x6d, 0xbe, 0x33, 0xd8, 0x9e, 0xab, 0x92, 0x0e, 0x50, 0xc2,
-  0x15, 0x44, 0xa6, 0x99, 0x77, 0x3c, 0xbc, 0x65, 0xe8, 0x70, 0x87, 0x88,
-  0x64, 0x62, 0x0d, 0x56, 0x56, 0x31, 0x13, 0xc3, 0x18, 0xc3, 0xe9, 0x88,
-  0xef, 0x40, 0x0d, 0xb4, 0xc2, 0x29, 0x44, 0xaa, 0x24, 0x43, 0x54, 0xdc,
-  0x0e, 0xc1, 0xe2, 0xaa, 0xa2, 0x89, 0xc9, 0x52, 0xe9, 0x4a, 0x35, 0xa5,
-  0xc7, 0xe8, 0xcf, 0x68, 0x7b, 0x2e, 0x9b, 0x85, 0x00, 0x0c, 0xac, 0x4a,
-  0x6e, 0x62, 0x94, 0xbe, 0x73, 0x36, 0x95, 0x2a, 0xcc, 0xae, 0xba, 0xb9,
-  0x19, 0x37, 0xc9, 0xc8, 0xcd, 0x5b, 0x88, 0xc0, 0x2f, 0x08, 0x07, 0xab,
-  0x9c, 0x69, 0x75, 0xaa, 0x15, 0x76, 0x73, 0xda, 0x02, 0x2c, 0x99, 0x69,
-  0x5a, 0x58, 0xb8, 0x98, 0x2a, 0xe7, 0x0e, 0x68, 0x09, 0x32, 0x0b, 0x07,
-  0x36, 0x50, 0xa6, 0x9d, 0x11, 0x93, 0xc8, 0x17, 0xd1, 0x3d, 0x6c, 0x0b,
-  0x54, 0x83, 0xa2, 0xca, 0x0a, 0xf2, 0x56, 0xc3, 0x51, 0x6b, 0xa8, 0x58,
-  0x25, 0xfa, 0xbc, 0x15, 0x68, 0x75, 0x29, 0xa9, 0x84, 0x41, 0x1c, 0x07,
-  0x6f, 0x32, 0xa3, 0xf4, 0x9a, 0x75, 0x9f, 0x17, 0x68, 0x46, 0x12, 0x22,
-  0x15, 0xcd, 0x42, 0x29, 0x30, 0x06, 0x85, 0x41, 0x20, 0x48, 0x80, 0x5c,
-  0x31, 0x69, 0x7d, 0x53, 0xaf, 0x86, 0xd5, 0x6b, 0x05, 0x59, 0x16, 0xad,
-  0xfa, 0x6e, 0xda, 0x2a, 0x83, 0xbd, 0x37, 0xfe, 0x28, 0x69, 0xaf, 0xda,
-  0xcd, 0xd9, 0x2d, 0x0a, 0x60, 0x37, 0x03, 0xcb, 0x83, 0x2d, 0xf4, 0x16,
-  0x28, 0xe0, 0xfc, 0xf5, 0x30, 0x4b, 0x7a, 0x54, 0x02, 0xae, 0xe7, 0x63,
-  0xfe, 0x4b, 0x2e, 0xbe, 0xbe, 0x4a, 0xc0, 0x6a, 0x66, 0xa8, 0x2e, 0x27,
-  0x2b, 0x94, 0x08, 0x5b, 0x8a, 0x1a, 0xab, 0x37, 0x1b, 0x14, 0x07, 0x0c,
-  0xfe, 0x1b, 0xc2, 0xfc, 0xda, 0x79, 0x3f, 0x30, 0xaa, 0x9d, 0xe7, 0xbb,
-  0xc3, 0x9d, 0x67, 0x9f, 0x0f, 0x77, 0xb6, 0x87, 0x3b, 0xad, 0xd1, 0xe1,
-  0x52, 0xa7, 0xe0, 0x44, 0xbf, 0x9d, 0xc8, 0x5d, 0x18, 0xf3, 0xc3, 0xfa,
-  0x1d, 0xcc, 0xef, 0x87, 0x5e, 0xc0, 0x68, 0xd0, 0x85, 0x04, 0x95, 0x76,
-  0x5b, 0x1e, 0x78, 0x50, 0x72, 0x42, 0x6a, 0x0b, 0x8a, 0xaf, 0xb5, 0xe0,
-  0x4d, 0xde, 0xa6, 0xaa, 0xdd, 0x53, 0x15, 0x8e, 0x88, 0xeb, 0xcd, 0x4b,
-  0x90, 0x54, 0x64, 0x49, 0x73, 0x6e, 0x3c, 0xc7, 0xdb, 0x27, 0x86, 0x48,
-  0xd6, 0xb8, 0x0e, 0x3f, 0xf0, 0xe5, 0xec, 0xf4, 0xfc, 0x42, 0xa0, 0xdc,
-  0x98, 0x2d, 0xa4, 0xf5, 0xed, 0xd0, 0x3e, 0x89, 0xc8, 0x22, 0x5b, 0x11,
-  0x2c, 0x62, 0xa8, 0xa7, 0x07, 0x8e, 0xce, 0xce, 0x2f, 0xba, 0x80, 0x7f,
-  0xb6, 0x69, 0x80, 0x85, 0x30, 0x03, 0x36, 0x3d, 0x88, 0x1b, 0x7d, 0x90,
-  0x2d, 0x42, 0x14, 0x55, 0x34, 0x43, 0x08, 0x20, 0x19, 0x82, 0x86, 0xe8,
-  0xed, 0x3f, 0xff, 0xf9, 0x91, 0xa2, 0xc9, 0x3b, 0xcf, 0x87, 0x4f, 0x9d,
-  0x69, 0x8e, 0x01, 0x73, 0x92, 0xde, 0xfe, 0x8f, 0xc8, 0x87, 0xfd, 0x79,
-  0xf0, 0xa3, 0xf9, 0xf3, 0xe7, 0x9e, 0xe5, 0xa2, 0x14, 0xd5, 0x1d, 0x56,
-  0x9f, 0xc4, 0x1c, 0x35, 0x69, 0x93, 0x1e, 0xb5, 0xf9, 0x4f, 0x90, 0xcb,
-  0x28, 0xfe, 0x07, 0x87, 0xb5, 0x12, 0x43, 0x42, 0xa9, 0x41, 0x98, 0x17,
-  0xa1, 0x8c, 0x43, 0x8e, 0xbc, 0xba, 0x65, 0x69, 0x4c, 0xbd, 0x97, 0xfb,
-  0x5a, 0xb6, 0x50, 0x90, 0x85, 0x48, 0x12, 0xb8, 0x36, 0x83, 0x22, 0x85,
-  0x00, 0x7c, 0x7c, 0x18, 0xc4, 0x73, 0x8b, 0xfd, 0x49, 0xd8, 0x3c, 0xa3,
-  0x41, 0x18, 0x41, 0x8a, 0xea, 0xa4, 0xb3, 0x55, 0x9f, 0x85, 0xa6, 0xcc,
-  0x06, 0x02, 0x5b, 0xe8, 0x85, 0x68, 0x58, 0x7b, 0x7d, 0x43, 0x33, 0x16,
-  0x00, 0x14, 0x0f, 0xbd, 0x14, 0x63, 0x54, 0xb4, 0x90, 0xb1, 0x57, 0x29,
-  0xa6, 0xa5, 0x22, 0x50, 0x15, 0xdf, 0x17, 0x8b, 0xeb, 0xca, 0x34, 0xff,
-  0x00, 0x50, 0xb6, 0x79, 0x8a, 0x9f, 0xb1, 0x84, 0xbe, 0x70, 0x88, 0xcd,
-  0x9f, 0x52, 0x83, 0x49, 0x9b, 0xeb, 0x01, 0xd4, 0xe5, 0xae, 0x58, 0x45,
-  0x1b, 0xaa, 0x37, 0x45, 0xc9, 0xf2, 0x1c, 0x39, 0x43, 0x66, 0x7e, 0x7d,
-  0x1c, 0xb3, 0x2c, 0x5b, 0xc3, 0xe1, 0x16, 0x09, 0x9c, 0x5b, 0xe6, 0x87,
-  0xe8, 0x32, 0xb0, 0xc1, 0x74, 0x6b, 0x22, 0x18, 0x15, 0x9e, 0xfa, 0xa2,
-  0xa8, 0x25, 0x8a, 0xff, 0x9e, 0xdd, 0x7b, 0xc9, 0x0e, 0xf5, 0xdf, 0x97,
-  0xc8, 0xfe, 0xaa, 0x48, 0xf6, 0x60, 0x6c, 0xb6, 0x79, 0xe2, 0xe9, 0x76,
-  0xe1, 0x29, 0xd2, 0x48, 0xf0, 0x5a, 0xc0, 0x62, 0x54, 0x08, 0xb5, 0x49,
-  0xc0, 0x1c, 0x60, 0x0c, 0xaa, 0xcc, 0x1b, 0x05, 0xb4, 0x02, 0x2c, 0x5e,
-  0xda, 0x3c, 0x98, 0xa3, 0xb2, 0xb7, 0xdb, 0x4e, 0xdd, 0x14, 0x84, 0xb6,
-  0x15, 0xa5, 0x1f, 0x71, 0x79, 0x6a, 0xa8, 0x7f, 0x05, 0x0c, 0xdd, 0x06,
-  0x40, 0x0c, 0x9f, 0xed, 0x3e, 0xd9, 0xde, 0x7a, 0x36, 0xdc, 0x1b, 0xee,
-  0xda, 0xf8, 0x54, 0xc3, 0xb1, 0xcc, 0xfe, 0x34, 0x80, 0xec, 0x5b, 0x25,
-  0x08, 0x9b, 0x1b, 0xa5, 0x04, 0xd6, 0x5c, 0x5b, 0x53, 0x72, 0x29, 0x98,
-  0x29, 0x01, 0xf2, 0xf9, 0x89, 0x93, 0xb1, 0xb2, 0xcf, 0x24, 0x1b, 0xd2,
-  0x20, 0xd4, 0x6d, 0x4a, 0x08, 0x33, 0x70, 0xb1, 0x8d, 0x73, 0x23, 0x47,
-  0x35, 0x54, 0xe7, 0x8f, 0x62, 0x68, 0xb2, 0xb1, 0x2d, 0xa2, 0x09, 0xa8,
-  0x51, 0xae, 0x10, 0x5b, 0x66, 0x75, 0x1c, 0xe7, 0x48, 0x1d, 0x7e, 0x5e,
-  0xe8, 0x1e, 0x92, 0x33, 0x73, 0xae, 0xdd, 0xc4, 0xb5, 0xe0, 0x48, 0xb2,
-  0x99, 0x18, 0xd5, 0x34, 0xf9, 0xc6, 0x9c, 0x56, 0x0e, 0xd7, 0x48, 0x57,
-  0x5c, 0xf5, 0x70, 0xf8, 0x6b, 0xfc, 0x97, 0x99, 0x18, 0xa0, 0x0c, 0x5d,
-  0xed, 0x01, 0xf9, 0x80, 0xd3, 0x00, 0xd9, 0x99, 0x8a, 0x79, 0xc7, 0x8a,
-  0x2a, 0xbb, 0xaa, 0xe4, 0xee, 0x48, 0x48, 0x78, 0x00, 0xe1, 0xcc, 0x70,
-  0x94, 0x93, 0x8b, 0x29, 0xf5, 0x31, 0x87, 0xa2, 0xbe, 0xdc, 0x87, 0xca,
-  0x50, 0x0b, 0x4e, 0xdf, 0xaf, 0x26, 0x88, 0x27, 0xbf, 0x3d, 0x41, 0xec,
-  0xfe, 0xff, 0x04, 0xf1, 0xef, 0x24, 0x88, 0xe7, 0x31, 0x82, 0x78, 0xf2,
-  0xab, 0x09, 0x62, 0xef, 0xb7, 0x27, 0x88, 0x27, 0xff, 0x3f, 0x41, 0xfc,
-  0x1b, 0x09, 0x62, 0xf7, 0x59, 0xe7, 0xca, 0x20, 0x85, 0xdc, 0xdc, 0xf9,
-  0xaa, 0x97, 0x7f, 0x11, 0xb9, 0x5a, 0x6b, 0xef, 0x6e, 0xe5, 0x4c, 0x79,
-  0xc8, 0x4d, 0x4e, 0x97, 0xcf, 0x1b, 0x6b, 0x8e, 0x96, 0x6b, 0x55, 0x43,
-  0x82, 0xbb, 0xf2, 0xce, 0x99, 0x7d, 0x87, 0x6c, 0xa3, 0x19, 0x21, 0xa0,
-  0x70, 0xb8, 0x68, 0x76, 0x89, 0xf5, 0x87, 0x04, 0xd7, 0xc7, 0x97, 0x90,
-  0x37, 0x5d, 0x0d, 0xc5, 0x7e, 0xcc, 0x0b, 0x80, 0x46, 0x52, 0x2c, 0xa6,
-  0xcd, 0xc7, 0x15, 0x14, 0x88, 0xee, 0xbd, 0xf9, 0x67, 0x54, 0xf8, 0x66,
-  0x0c, 0x5d, 0xc2, 0x25, 0xb3, 0xe9, 0xbb, 0x45, 0xcb, 0x35, 0xe1, 0x26,
-  0xa5, 0x62, 0x3e, 0x92, 0x04, 0x83, 0xd4, 0x2f, 0x5a, 0x5b, 0xb2, 0x86,
-  0xf8, 0xf9, 0x4d, 0x56, 0x7b, 0xa6, 0xe2, 0x11, 0x52, 0x90, 0x9c, 0x4b,
-  0xe6, 0xa1, 0xe6, 0xd8, 0x30, 0xa2, 0x7c, 0xbc, 0xca, 0xc8, 0x5c, 0xef,
-  0x0f, 0xa8, 0x0f, 0x5b, 0xc0, 0xad, 0xd8, 0x33, 0x6c, 0x09, 0x64, 0x89,
-  0x34, 0x25, 0xc3, 0xb5, 0x1d, 0x62, 0x38, 0xa4, 0xf6, 0x98, 0x9b, 0x48,
-  0x50, 0xfe, 0x4b, 0xbb, 0x0c, 0x1a, 0xaf, 0xe2, 0x2f, 0xc6, 0x06, 0x32,
-  0x7e, 0xd5, 0x59, 0x8a, 0x2e, 0x3f, 0x66, 0x19, 0x60, 0x07, 0x82, 0x25,
-  0xa2, 0x5e, 0x8e, 0xff, 0x66, 0x23, 0x31, 0x67, 0x29, 0xa2, 0x1a, 0x5b,
-  0x95, 0xd9, 0xb9, 0xb6, 0xdc, 0x72, 0xcc, 0x72, 0x59, 0x13, 0x36, 0x67,
-  0x3e, 0x84, 0x17, 0xd7, 0xd6, 0xb7, 0x6b, 0x51, 0x01, 0xc6, 0x14, 0x4c,
-  0xca, 0x0b, 0x04, 0x08, 0x54, 0x66, 0x25, 0x71, 0xd2, 0x7d, 0x6a, 0x29,
-  0xe0, 0xe6, 0x6f, 0x96, 0x5d, 0x4d, 0x91, 0xb6, 0x35, 0x0c, 0x98, 0x1e,
-  0x5f, 0xd9, 0x96, 0x91, 0x09, 0xfb, 0x28, 0x50, 0xd7, 0xff, 0x33, 0xfd,
-  0x88, 0x6b, 0x81, 0x56, 0x03, 0xa1, 0x75, 0xd6, 0x9c, 0x01, 0x7a, 0x1c,
-  0x3c, 0x14, 0xaf, 0xaf, 0xea, 0xe0, 0x25, 0x7d, 0xcb, 0x3d, 0x3c, 0xdc,
-  0x36, 0x5c, 0xe7, 0xbf, 0xa0, 0x83, 0x77, 0x05, 0xe3, 0xfc, 0xf8, 0x86,
-  0xb8, 0x85, 0x20, 0x07, 0x92, 0x07, 0xf6, 0x2e, 0xad, 0x0a, 0x8e, 0xf9,
-  0x07, 0xff, 0x11, 0x9b, 0x15, 0x25, 0x59, 0x2f, 0x60, 0x79, 0x0a, 0x00,
-  0xeb, 0x2f, 0xc9, 0xfc, 0x06, 0x1b, 0x1c, 0xf1, 0x52, 0xc6, 0x53, 0x10,
-  0x70, 0x6c, 0x8d, 0x8f, 0x5f, 0x94, 0x0d, 0xc3, 0x74, 0x53, 0x94, 0x35,
-  0x69, 0x49, 0x15, 0x8a, 0x37, 0x47, 0xea, 0xb5, 0xe8, 0x46, 0xb8, 0x3a,
-  0xa5, 0xd4, 0x32, 0x78, 0xdc, 0x72, 0x81, 0x8a, 0x50, 0x02, 0x50, 0xc6,
-  0x7a, 0x87, 0xc7, 0x83, 0xb8, 0xeb, 0x6e, 0x20, 0x1e, 0xe2, 0xc4, 0x70,
-  0x09, 0x59, 0x90, 0xef, 0xdb, 0x32, 0x77, 0xd5, 0xb8, 0x87, 0xbf, 0xae,
-  0x0c, 0x56, 0xdf, 0x2b, 0x72, 0x9b, 0xd6, 0x7e, 0xb6, 0x66, 0x24, 0x8a,
-  0xdd, 0x5a, 0x12, 0x52, 0x46, 0x2c, 0x32, 0x54, 0x5c, 0xa4, 0x8d, 0x1e,
-  0x31, 0x8f, 0x87, 0xd2, 0x30, 0xb9, 0xa2, 0x1b, 0x29, 0x0c, 0x93, 0x2c,
-  0x0c, 0x2c, 0x74, 0x05, 0x8f, 0x1e, 0xc3, 0xbf, 0xda, 0x0d, 0x58, 0xfc,
-  0x40, 0xe9, 0xdd, 0xb2, 0xfa, 0x38, 0xa7, 0xf7, 0x71, 0x7e, 0xed, 0xe2,
-  0xa2, 0x4a, 0xa2, 0x61, 0x54, 0xa4, 0x18, 0x21, 0x61, 0x9a, 0xeb, 0x2f,
-  0x4c, 0x8c, 0xea, 0xb3, 0xc2, 0x45, 0x79, 0xf4, 0xf0, 0x69, 0xb4, 0xa3,
-  0x01, 0x91, 0xd2, 0x59, 0x1b, 0xce, 0xcb, 0x7f, 0x18, 0xf5, 0x2a, 0x1d,
-  0x96, 0xd5, 0x55, 0x9c, 0xe4, 0xb5, 0x20, 0x64, 0xf7, 0x61, 0x7d, 0xfa,
-  0xc0, 0xdc, 0x87, 0x42, 0xdd, 0x14, 0xdd, 0x54, 0x58, 0xc0, 0x11, 0x37,
-  0x0f, 0xa9, 0xa2, 0xc1, 0x95, 0xd8, 0x51, 0xff, 0xf0, 0xe8, 0xfd, 0xbb,
-  0xb7, 0xa3, 0x77, 0x67, 0x64, 0x8a, 0x38, 0x7a, 0xf5, 0xfe, 0xec, 0xfc,
-  0xd4, 0x92, 0xe4, 0xc5, 0xe9, 0xe1, 0xa9, 0x57, 0x75, 0xde, 0xa7, 0x0c,
-  0x84, 0x4d, 0x77, 0xe0, 0xb9, 0x3d, 0x76, 0xf2, 0xe1, 0xde, 0x63, 0xa8,
-  0x34, 0x6a, 0x8f, 0xf3, 0x7f, 0xef, 0x0a, 0xf0, 0xb6, 0x3c, 0x01, 0xec,
-  0xd7, 0xe1, 0x68, 0x51, 0x18, 0xa3, 0xd2, 0xe4, 0x6a, 0x49, 0x46, 0x27,
-  0x3f, 0xfe, 0x54, 0x60, 0xe9, 0xeb, 0x2c, 0x73, 0x9b, 0xcb, 0x48, 0xed,
-  0x36, 0x83, 0xde, 0xf5, 0xd4, 0xd2, 0x13, 0x9f, 0x46, 0x2e, 0x7d, 0x06,
-  0xf9, 0x79, 0xf4, 0xea, 0x57, 0x82, 0x78, 0xec, 0xe2, 0x47, 0xa8, 0x26,
-  0xcb, 0x71, 0x43, 0xdc, 0xf3, 0xf1, 0xc3, 0x4d, 0x36, 0xe6, 0x22, 0xe7,
-  0x90, 0x3b, 0xe5, 0x76, 0x74, 0x8b, 0xd3, 0x72, 0x4a, 0x76, 0xa8, 0x79,
-  0x80, 0xbe, 0x6d, 0x05, 0x09, 0x8c, 0xb2, 0x6c, 0x05, 0xab, 0xa4, 0xc9,
-  0x53, 0xca, 0xfb, 0xa2, 0x25, 0x59, 0x54, 0x99, 0x40, 0x1f, 0x46, 0xae,
-  0xc0, 0xc7, 0x68, 0x93, 0xd7, 0xc5, 0xf2, 0xf8, 0x87, 0xd8, 0x30, 0x8a,
-  0x83, 0x31, 0xff, 0x85, 0x8f, 0x40, 0x21, 0xc7, 0x46, 0xad, 0xe5, 0xb0,
-  0x1d, 0x7d, 0xd5, 0x49, 0x24, 0xf3, 0x80, 0x63, 0x29, 0x33, 0xc5, 0xe3,
-  0xc9, 0x5c, 0xb5, 0x48, 0x7c, 0x05, 0x9a, 0x8b, 0xac, 0x46, 0x93, 0x35,
-  0x9b, 0x86, 0xc0, 0xb0, 0x23, 0x82, 0xc8, 0xa6, 0xb0, 0xaf, 0x64, 0x1d,
-  0x32, 0xc2, 0xeb, 0x3e, 0xc3, 0x87, 0x4a, 0x8a, 0x06, 0x83, 0x96, 0x20,
-  0x8d, 0xf1, 0xf0, 0x8c, 0xf3, 0xb4, 0x14, 0xb4, 0x64, 0xcd, 0x0b, 0x4e,
-  0xab, 0xe5, 0x95, 0xbd, 0xed, 0xe1, 0x76, 0x32, 0x7a, 0xf3, 0x95, 0x60,
-  0x43, 0x7e, 0x35, 0xe2, 0xf2, 0xc2, 0x74, 0xdb, 0xe8, 0x7b, 0xad, 0xd8,
-  0x2a, 0x1a, 0xbe, 0x19, 0xc3, 0x9f, 0x53, 0x07, 0xb4, 0xa1, 0x17, 0x12,
-  0xe7, 0x88, 0xb9, 0xb9, 0x79, 0x2b, 0xd3, 0xf7, 0x80, 0x44, 0xcc, 0xb9,
-  0xa8, 0xdd, 0xa0, 0xec, 0x8c, 0x2c, 0x15, 0xd1, 0xd4, 0xe2, 0xd4, 0x1d,
-  0xe1, 0x77, 0x1f, 0xee, 0x07, 0x86, 0x5f, 0x51, 0x74, 0xc1, 0x83, 0x34,
-  0x0d, 0x53, 0x6f, 0xea, 0x32, 0x3d, 0x3a, 0x31, 0xb2, 0x1a, 0xb5, 0x0e,
-  0xdf, 0x03, 0x9c, 0xc8, 0x81, 0xdb, 0x03, 0x8f, 0xd2, 0xfd, 0xc4, 0x65,
-  0xab, 0x21, 0xa9, 0x49, 0x58, 0x8f, 0xf8, 0xbd, 0xb5, 0x26, 0x3d, 0x00,
-  0x27, 0x04, 0xca, 0x18, 0x17, 0x10, 0x79, 0xbc, 0xe3, 0x8a, 0xd3, 0x96,
-  0x45, 0x4d, 0xa9, 0xa8, 0xc6, 0xec, 0xc0, 0x08, 0x44, 0x8b, 0x0e, 0x94,
-  0xf1, 0x93, 0xd8, 0x94, 0xc7, 0x84, 0xa6, 0xfb, 0x28, 0x57, 0x5f, 0x09,
-  0xbc, 0x9b, 0xf8, 0x33, 0xd5, 0x99, 0xad, 0xf2, 0x18, 0xf3, 0x24, 0x65,
-  0x8e, 0xef, 0x38, 0x35, 0x1f, 0x6d, 0xa2, 0xe0, 0x03, 0x6d, 0x3d, 0x2d,
-  0x8b, 0xd7, 0x17, 0x17, 0x3b, 0x09, 0x26, 0x0c, 0xb7, 0x17, 0x57, 0xe7,
-  0xe0, 0xe7, 0x44, 0x96, 0x76, 0x55, 0x78, 0xbb, 0x83, 0xd4, 0xb2, 0x07,
-  0x91, 0xba, 0x5a, 0xe0, 0xee, 0xe8, 0x88, 0x06, 0x96, 0xb7, 0x53, 0xa8,
-  0x79, 0x8d, 0xa6, 0x88, 0x70, 0x7f, 0x40, 0xc9, 0xf1, 0x57, 0x89, 0xc3,
-  0xe1, 0xbb, 0x23, 0x10, 0x1f, 0xd8, 0xaf, 0x5b, 0x24, 0xee, 0x3f, 0xb2,
-  0x4a, 0xd2, 0x57, 0xb4, 0xe8, 0x85, 0xbf, 0x4c, 0xc1, 0x8c, 0x56, 0xa5,
-  0x86, 0x77, 0x35, 0x37, 0x37, 0xad, 0x47, 0xb3, 0xc4, 0x31, 0xc5, 0x00,
-  0x5f, 0xc9, 0x9b, 0xf0, 0x83, 0x53, 0xb4, 0x03, 0x6a, 0xcd, 0xb2, 0xeb,
-  0x9d, 0x5f, 0x31, 0x10, 0xa9, 0x89, 0xd3, 0x22, 0x8c, 0x07, 0x2d, 0x5c,
-  0x36, 0x8b, 0xe0, 0xe3, 0xa7, 0x1f, 0xa6, 0xab, 0xfc, 0x6b, 0x7b, 0x8a,
-  0x30, 0xfc, 0xd6, 0x8e, 0xa2, 0x8b, 0xd6, 0x54, 0x1e, 0x8c, 0xee, 0xd0,
-  0x69, 0x90, 0x2d, 0x21, 0x9f, 0x70, 0xd8, 0x28, 0xa1, 0x5d, 0xe3, 0x2f,
-  0xfa, 0xe3, 0xe1, 0x3a, 0xa9, 0x22, 0xa5, 0x73, 0x8a, 0x06, 0x07, 0xf5,
-  0x59, 0xb9, 0x44, 0x1a, 0x71, 0x75, 0xdd, 0x62, 0x0e, 0x75, 0xdd, 0xb1,
-  0x98, 0x64, 0xe9, 0xa0, 0xff, 0x43, 0x8a, 0x4b, 0x84, 0xcb, 0xf1, 0x80,
-  0xe3, 0xf3, 0xe8, 0x6a, 0x0c, 0xe5, 0xe4, 0x66, 0x2a, 0x92, 0x0e, 0x22,
-  0xd0, 0xe9, 0xef, 0x2d, 0xd7, 0x4a, 0x27, 0xbb, 0x70, 0xef, 0x49, 0x27,
-  0x3b, 0x09, 0x4f, 0xee, 0x98, 0xcb, 0xe9, 0x05, 0x7e, 0x43, 0xfc, 0x39,
-  0x92, 0x01, 0x7f, 0xee, 0xae, 0xd1, 0x3b, 0x4d, 0xb4, 0xf2, 0xbc, 0xbe,
-  0x4c, 0x00, 0x09, 0xbd, 0xaf, 0x5b, 0x28, 0xe1, 0x87, 0x1e, 0x8a, 0xbe,
-  0x00, 0xa3, 0xae, 0x2e, 0xfe, 0x98, 0x37, 0x5e, 0xed, 0x47, 0xca, 0xed,
-  0xc3, 0xcb, 0x3b, 0xdb, 0x9f, 0x6f, 0x47, 0x63, 0xc4, 0x20, 0x1e, 0x68,
-  0x68, 0xeb, 0xc4, 0x15, 0x9a, 0x85, 0x80, 0xa3, 0xd1, 0xde, 0x5e, 0x88,
-  0x81, 0x6e, 0x2b, 0x45, 0x5a, 0xc4, 0x44, 0x14, 0xc4, 0x5d, 0xe4, 0xe2,
-  0x8f, 0x14, 0xdf, 0x9d, 0x45, 0xa8, 0xd6, 0xf8, 0x04, 0x1b, 0x1a, 0x60,
-  0xe3, 0x0f, 0x22, 0x20, 0x58, 0x2e, 0x16, 0x8b, 0xfb, 0xa7, 0x75, 0xf1,
-  0x0c, 0x23, 0xd6, 0xcf, 0xe7, 0x0b, 0xb8, 0xf2, 0xe0, 0x4e, 0x6b, 0x53,
-  0x96, 0xe3, 0x07, 0xea, 0xab, 0x92, 0xcb, 0x88, 0xd3, 0x94, 0x1e, 0x2c,
-  0xad, 0x6a, 0x21, 0x12, 0x04, 0x66, 0x9e, 0x53, 0x9b, 0x82, 0x12, 0xbc,
-  0xab, 0x4a, 0xab, 0x7e, 0x62, 0xcf, 0xea, 0xc6, 0x01, 0x3c, 0x48, 0x9f,
-  0x0d, 0x9f, 0x3c, 0x27, 0x5c, 0x30, 0xb0, 0x15, 0x7f, 0xed, 0x0d, 0x3f,
-  0x29, 0x09, 0x18, 0x9b, 0x51, 0xb4, 0x24, 0xf8, 0x97, 0x57, 0x7f, 0xd5,
-  0x3c, 0xac, 0x6d, 0x67, 0xd1, 0xa9, 0x77, 0x0a, 0xf3, 0x25, 0x02, 0x11,
-  0xda, 0x98, 0x12, 0xd0, 0x27, 0xaf, 0x28, 0x1a, 0x63, 0x10, 0xa6, 0xe1,
-  0xb3, 0x67, 0x4f, 0x0c, 0x90, 0xd3, 0x61, 0x17, 0x82, 0x67, 0xe1, 0x76,
-  0x40, 0x06, 0xe7, 0x27, 0x57, 0x05, 0xf9, 0x10, 0x63, 0xbd, 0x0b, 0xc7,
-  0x19, 0x80, 0xe9, 0x89, 0xce, 0x05, 0x01, 0x8d, 0x8a, 0x30, 0x2f, 0xee,
-  0x51, 0x7f, 0x22, 0x1f, 0xd7, 0xf5, 0xf5, 0xae, 0xa1, 0x86, 0xdd, 0xe1,
-  0xe7, 0x1c, 0x44, 0xc9, 0xce, 0xce, 0x15, 0x09, 0x43, 0x82, 0x70, 0xd8,
-  0x69, 0xef, 0x74, 0x91, 0x15, 0xa3, 0xd1, 0x89, 0x8f, 0xa0, 0xf6, 0xf7,
-  0xbe, 0xf3, 0x24, 0x47, 0xf2, 0xb1, 0x38, 0xfb, 0xca, 0xc2, 0x3a, 0x52,
-  0x86, 0x03, 0x51, 0xc2, 0x3c, 0x43, 0xc6, 0xac, 0x67, 0x37, 0x92, 0x2c,
-  0x86, 0xbe, 0xad, 0x8a, 0x1e, 0x40, 0xb2, 0x71, 0xf5, 0x6a, 0x2f, 0xb8,
-  0x5d, 0xdc, 0xa3, 0x64, 0xf3, 0xd2, 0x60, 0x4e, 0x29, 0xe5, 0x85, 0xfc,
-  0x84, 0x6f, 0xfb, 0x9c, 0xe1, 0x4c, 0x2f, 0x45, 0xaa, 0x6c, 0x74, 0x70,
-  0xcc, 0xac, 0xb0, 0xef, 0xf5, 0x52, 0x67, 0x69, 0x35, 0xb9, 0x66, 0xff,
-  0xa2, 0x9b, 0xf1, 0xff, 0xa0, 0x76, 0xff, 0xbe, 0xa4, 0x3d, 0xb3, 0xb5,
-  0xf9, 0x22, 0x11, 0x3b, 0x5b, 0x23, 0x0e, 0xdb, 0x19, 0xa1, 0x1c, 0x03,
-  0x39, 0xc4, 0xab, 0x71, 0xde, 0x54, 0xa9, 0x54, 0x24, 0x95, 0x5a, 0x86,
-  0x5e, 0x40, 0x11, 0x40, 0xdc, 0xaa, 0x84, 0x5e, 0x8b, 0xda, 0xad, 0x87,
-  0xc9, 0xff, 0x40, 0xa7, 0xf2, 0x36, 0x2b, 0x4f, 0x88, 0x62, 0xfb, 0xea,
-  0xe8, 0xf5, 0xe9, 0xf9, 0x51, 0x1b, 0x9c, 0x9a, 0x0b, 0xa6, 0x71, 0xbd,
-  0xb8, 0xee, 0xe8, 0x90, 0x8b, 0xd2, 0x02, 0xc2, 0xd4, 0xe2, 0x6b, 0x67,
-  0xdf, 0xbf, 0xf2, 0x82, 0x07, 0xb4, 0xc4, 0xa6, 0x87, 0x53, 0x5c, 0x46,
-  0x8a, 0xd1, 0x52, 0x44, 0xc8, 0xa6, 0xab, 0xd6, 0x63, 0xc7, 0xc7, 0x05,
-  0x61, 0x10, 0xd3, 0xc8, 0x7d, 0xa5, 0x0c, 0xb3, 0x50, 0xd7, 0x64, 0x1a,
-  0xb7, 0x8d, 0x06, 0xf1, 0x44, 0x19, 0x2a, 0xf0, 0xb0, 0xb3, 0x96, 0x65,
-  0xf5, 0x94, 0x73, 0x3e, 0x28, 0x11, 0x64, 0x98, 0x84, 0x1d, 0x69, 0x34,
-  0x1f, 0x7a, 0x89, 0x85, 0x61, 0x52, 0x1c, 0x38, 0x5f, 0xb4, 0xcc, 0xc1,
-  0x83, 0x94, 0x83, 0x3e, 0xe7, 0xe7, 0x48, 0xe2, 0x81, 0xbf, 0x90, 0x11,
-  0xd1, 0xca, 0xf4, 0xb9, 0x51, 0x13, 0x02, 0xb2, 0x37, 0xd4, 0xc4, 0x55,
-  0xc0, 0x12, 0x59, 0x62, 0xfd, 0xcf, 0xeb, 0xce, 0xe4, 0xcc, 0xe5, 0xf0,
-  0xe2, 0x18, 0x38, 0x0e, 0xc3, 0x6f, 0xf3, 0xb1, 0xd0, 0x5b, 0x9d, 0xf1,
-  0x50, 0x2b, 0x1f, 0xc6, 0x1d, 0x1c, 0x12, 0x8d, 0x69, 0x43, 0x0b, 0xa8,
-  0x79, 0x29, 0x0e, 0xec, 0x9d, 0x37, 0x61, 0xa9, 0x5c, 0x84, 0x09, 0xd1,
-  0x77, 0x01, 0xab, 0x72, 0xa1, 0x82, 0x28, 0xa4, 0x27, 0x05, 0x97, 0xff,
-  0xaa, 0x68, 0x39, 0x40, 0x9c, 0xae, 0xef, 0x8b, 0x06, 0x11, 0x60, 0x8c,
-  0x49, 0x38, 0x29, 0x2b, 0x56, 0x84, 0x43, 0x32, 0xb6, 0xfb, 0x45, 0xfc,
-  0x00, 0xbe, 0xaa, 0xe7, 0x4f, 0x9f, 0xd3, 0xc1, 0x43, 0x70, 0xa9, 0x60,
-  0xda, 0x49, 0x1a, 0x31, 0xf0, 0x15, 0xda, 0x63, 0x1e, 0x04, 0xd8, 0x09,
-  0xd4, 0x96, 0xc0, 0xce, 0x8e, 0xb3, 0x19, 0x17, 0xe4, 0x1b, 0x79, 0x8d,
-  0x0c, 0x1f, 0x8c, 0xe2, 0x5c, 0x15, 0xa0, 0xc9, 0xf7, 0x8d, 0x54, 0x7e,
-  0x35, 0xfb, 0x90, 0xde, 0x48, 0x1c, 0xb8, 0x9c, 0x06, 0xc5, 0x0b, 0x90,
-  0xdd, 0x7f, 0x60, 0x74, 0x42, 0x0a, 0x14, 0xec, 0x6f, 0x08, 0x93, 0xe2,
-  0x3d, 0x36, 0xfe, 0xb4, 0x69, 0x91, 0x87, 0xa5, 0x6e, 0x1a, 0xd5, 0x28,
-  0x59, 0x66, 0x2d, 0xfc, 0xf5, 0x55, 0xcd, 0x5d, 0x82, 0x61, 0x99, 0xc5,
-  0x1b, 0xc7, 0x8c, 0x13, 0x75, 0x53, 0x2e, 0x12, 0x60, 0x2a, 0x12, 0x97,
-  0x95, 0xbd, 0x0f, 0x43, 0x76, 0x68, 0x0a, 0x9c, 0x91, 0x2d, 0x69, 0xa4,
-  0x2a, 0x45, 0x18, 0x11, 0xb9, 0x40, 0x20, 0xa6, 0x50, 0xa3, 0xdc, 0x9c,
-  0x08, 0x46, 0x33, 0x73, 0x35, 0x77, 0x67, 0x84, 0x35, 0xfd, 0xbd, 0xcd,
-  0x92, 0xe4, 0xda, 0x90, 0x73, 0xe4, 0x55, 0xd8, 0x99, 0x2b, 0xb3, 0xb3,
-  0xcc, 0xcc, 0x50, 0x48, 0x08, 0xf7, 0x46, 0xc2, 0x46, 0xad, 0x00, 0x01,
-  0x68, 0x9b, 0x0a, 0x5c, 0x1b, 0xf5, 0x60, 0xc0, 0x79, 0xb4, 0x94, 0xcf,
-  0x3c, 0x27, 0x0c, 0xd1, 0x7a, 0x91, 0x4e, 0x38, 0x22, 0x59, 0xea, 0x0b,
-  0x03, 0x56, 0x24, 0x20, 0x60, 0x82, 0x19, 0x21, 0x32, 0x78, 0x6d, 0xdd,
-  0x98, 0xa2, 0xb3, 0x2a, 0xe6, 0x09, 0x19, 0x3c, 0x9c, 0xf5, 0x11, 0x8b,
-  0xc3, 0x53, 0x5a, 0x49, 0x71, 0x21, 0x5e, 0xed, 0xf5, 0x55, 0xb5, 0x60,
-  0xc0, 0xc9, 0x18, 0x1a, 0xa6, 0x9f, 0x81, 0xc0, 0x8f, 0x2a, 0xa7, 0xa8,
-  0xb3, 0x86, 0x07, 0xc3, 0xef, 0x1e, 0xbf, 0x6a, 0xe1, 0x14, 0x73, 0x7a,
-  0xd9, 0xf8, 0x3e, 0xde, 0x9c, 0x43, 0x49, 0xa6, 0xa8, 0x59, 0x77, 0x97,
-  0xd8, 0xa6, 0x9c, 0x20, 0x3d, 0x56, 0x9c, 0x38, 0x7c, 0x17, 0x6f, 0x4e,
-  0x5a, 0xe1, 0xc0, 0x5b, 0x6e, 0x43, 0x1b, 0x06, 0xa9, 0x68, 0xa1, 0x18,
-  0x22, 0x06, 0xc2, 0xfa, 0xd7, 0x6e, 0xc2, 0xa8, 0xf7, 0xeb, 0xb9, 0x51,
-  0xf8, 0x11, 0x91, 0xf9, 0xe8, 0x5a, 0xcc, 0xcb, 0xa9, 0xc7, 0x36, 0xc5,
-  0x07, 0xa7, 0x31, 0xa3, 0x98, 0x1c, 0xda, 0x19, 0xe7, 0x36, 0x31, 0x27,
-  0xde, 0x9c, 0x9b, 0x2a, 0xa4, 0x4b, 0x34, 0x8f, 0x37, 0xfd, 0x29, 0x14,
-  0x49, 0x39, 0x69, 0xbc, 0x19, 0xd0, 0x03, 0xf1, 0xe6, 0x34, 0xfa, 0x2b,
-  0x98, 0x19, 0x99, 0xab, 0x91, 0x30, 0xf2, 0xf0, 0xcc, 0xf8, 0xc1, 0x60,
-  0x93, 0xcd, 0x87, 0xcc, 0xc4, 0x83, 0x1d, 0x5e, 0x3d, 0xb3, 0xd8, 0x0e,
-  0x63, 0x04, 0xdd, 0x0d, 0xf6, 0xaa, 0x69, 0xc7, 0x18, 0xb9, 0xb3, 0x1a,
-  0xf2, 0xea, 0x48, 0xae, 0xcc, 0x03, 0x1b, 0x2c, 0xbd, 0x04, 0xab, 0x30,
-  0x2b, 0xa4, 0x4e, 0xe3, 0x7b, 0x46, 0x48, 0xa4, 0xd2, 0x0f, 0xcd, 0xfb,
-  0x87, 0x17, 0x64, 0x56, 0x68, 0xf5, 0x68, 0xc0, 0xf0, 0x5a, 0x66, 0x21,
-  0x99, 0xa2, 0x69, 0xbb, 0xae, 0xb4, 0x80, 0x2b, 0xaf, 0x20, 0x7b, 0xd7,
-  0x9f, 0x2b, 0xd3, 0xbb, 0x28, 0x73, 0x2e, 0xf4, 0x64, 0xb3, 0x35, 0xfc,
-  0x21, 0x26, 0x31, 0x5f, 0xbb, 0xe7, 0x72, 0x0f, 0xa6, 0x38, 0xbf, 0x21,
-  0x9b, 0xb2, 0x15, 0x0d, 0xde, 0xaf, 0x0e, 0x66, 0x05, 0x1d, 0xf3, 0xe3,
-  0x8e, 0x8e, 0x79, 0x56, 0x36, 0x4a, 0xdb, 0x26, 0x35, 0x3e, 0xbe, 0xdb,
-  0xed, 0x2e, 0xed, 0x99, 0xec, 0x8e, 0x6f, 0x71, 0x37, 0xd5, 0xce, 0xe9,
-  0x57, 0xed, 0x58, 0x2f, 0x7d, 0x44, 0x50, 0x2a, 0xc0, 0x25, 0x89, 0xae,
-  0xdc, 0xd8, 0xa5, 0x0a, 0xd6, 0x2b, 0x96, 0x62, 0x45, 0x5a, 0xe8, 0x5a,
-  0x60, 0x05, 0x44, 0x73, 0x5a, 0x4a, 0x0e, 0xdb, 0xb1, 0x7a, 0x71, 0xe4,
-  0x69, 0x37, 0x44, 0xe6, 0xef, 0x3e, 0xc4, 0x7b, 0xb8, 0x40, 0xab, 0x19,
-  0x9e, 0xf4, 0xda, 0x39, 0x10, 0xd3, 0x8c, 0x0a, 0xd7, 0x0b, 0x29, 0x50,
-  0xba, 0x2c, 0x37, 0xa4, 0x7c, 0xef, 0x21, 0x42, 0x5a, 0xb9, 0xc6, 0xd5,
-  0xfc, 0x91, 0x43, 0x6e, 0x1e, 0x70, 0xb3, 0xa2, 0x74, 0x0f, 0x6f, 0x56,
-  0xc1, 0xc9, 0x94, 0x63, 0xbc, 0x62, 0xe5, 0x57, 0x8d, 0xa0, 0x45, 0x85,
-  0x0f, 0x8d, 0x84, 0x1e, 0x8c, 0x0d, 0xc6, 0x2d, 0x2d, 0x3c, 0xf5, 0xf7,
-  0x1e, 0xa7, 0x8c, 0x37, 0x27, 0xc3, 0x75, 0xef, 0xc9, 0xf2, 0xf4, 0x2d,
-  0xf0, 0xa8, 0xd8, 0x53, 0x80, 0x9f, 0x13, 0x0c, 0x59, 0x0f, 0xf8, 0x2f,
-  0x62, 0x10, 0xa4, 0xae, 0xcd, 0xbc, 0x43, 0x38, 0xa8, 0x90, 0xb7, 0x0a,
-  0xa3, 0xd8, 0x0b, 0xfc, 0x88, 0x26, 0xbe, 0x6d, 0xa9, 0x86, 0xb5, 0x45,
-  0xce, 0x12, 0x64, 0x47, 0xa0, 0xdc, 0x3c, 0xb1, 0x13, 0xaa, 0x00, 0x24,
-  0x01, 0xc2, 0x1b, 0x14, 0x6f, 0xce, 0x89, 0x4e, 0x24, 0x23, 0x10, 0xbe,
-  0x44, 0x70, 0xa9, 0x9b, 0xb5, 0xd9, 0xd4, 0x58, 0x60, 0x34, 0xbd, 0x33,
-  0xdc, 0xe9, 0xab, 0x36, 0x26, 0xf2, 0x92, 0x46, 0x0e, 0x95, 0x5c, 0xa6,
-  0x97, 0xb3, 0xc0, 0xe1, 0xa7, 0x09, 0x4a, 0xc7, 0x50, 0xbf, 0x75, 0x98,
-  0xce, 0x88, 0xb8, 0x22, 0x27, 0xc9, 0x53, 0x1d, 0x9f, 0x60, 0x01, 0xb7,
-  0x07, 0x7b, 0xcf, 0x9f, 0xb7, 0xae, 0x34, 0x5f, 0x6f, 0x7e, 0xba, 0xbd,
-  0xcd, 0xc5, 0x8d, 0xba, 0xaf, 0x99, 0x2f, 0x06, 0xcf, 0xf1, 0x62, 0xfb,
-  0x35, 0x2e, 0xac, 0xb7, 0xfa, 0xbd, 0x01, 0x7d, 0x13, 0xe9, 0x0e, 0x46,
-  0x96, 0x95, 0x6f, 0x3d, 0xa7, 0xee, 0x22, 0x6f, 0xe1, 0x61, 0x5e, 0xc7,
-  0xf2, 0xf2, 0x92, 0x22, 0x65, 0xe9, 0x49, 0x70, 0x7e, 0x23, 0x0c, 0xde,
-  0xa5, 0xd5, 0x34, 0x9c, 0xee, 0x76, 0x7f, 0xb0, 0xb3, 0x6a, 0xba, 0xb0,
-  0x08, 0xd0, 0x48, 0xb0, 0x9d, 0xa4, 0x40, 0x19, 0xe1, 0x99, 0xa3, 0xdf,
-  0xba, 0x0d, 0xed, 0x98, 0x11, 0xed, 0x3c, 0x7f, 0xde, 0xa7, 0x91, 0x3d,
-  0x7d, 0xfe, 0x7c, 0x65, 0x18, 0x86, 0xd7, 0xcd, 0x5d, 0xe9, 0x6c, 0x52,
-  0xf4, 0xba, 0xa3, 0x99, 0x9a, 0x64, 0xf4, 0x78, 0x3f, 0xf4, 0x4d, 0xf2,
-  0x12, 0x25, 0x9a, 0x3c, 0x73, 0x8d, 0x4b, 0xa5, 0xea, 0x64, 0x6f, 0x53,
-  0x3e, 0xd8, 0xbd, 0xaa, 0x83, 0x46, 0xbd, 0x08, 0x03, 0xbe, 0x90, 0x80,
-  0xa7, 0x1e, 0xa4, 0xa0, 0x20, 0xf1, 0x29, 0x1b, 0x23, 0xaf, 0xf2, 0xc6,
-  0x61, 0xe6, 0xd5, 0xc9, 0x86, 0xd9, 0x6c, 0x2e, 0xd3, 0xc1, 0x75, 0x80,
-  0x24, 0xf8, 0x66, 0x1d, 0x51, 0xf6, 0x0c, 0xe7, 0x4d, 0x7f, 0x94, 0x8b,
-  0xf5, 0x20, 0x49, 0x39, 0x9b, 0x91, 0xf2, 0x25, 0x57, 0x01, 0xbf, 0x30,
-  0xc0, 0x93, 0x72, 0x5a, 0xa0, 0xca, 0x31, 0x82, 0x7c, 0x8a, 0x50, 0x3e,
-  0xbf, 0xf3, 0x60, 0xf4, 0x6c, 0x7d, 0x65, 0x1b, 0xbb, 0x66, 0x9b, 0x72,
-  0x60, 0xbd, 0x5b, 0x86, 0xf5, 0xda, 0xab, 0xfa, 0xad, 0x26, 0xbb, 0x82,
-  0xf6, 0x21, 0x28, 0xaa, 0xc3, 0xf6, 0xda, 0x69, 0xa6, 0xa5, 0x75, 0xc5,
-  0x2e, 0x63, 0xdb, 0x61, 0xc3, 0xcc, 0xb2, 0x5a, 0x5d, 0xc0, 0x4f, 0x73,
-  0x72, 0x14, 0x04, 0x23, 0xbd, 0x4b, 0xab, 0x4c, 0x01, 0x22, 0x8b, 0x7b,
-  0x7b, 0xb8, 0x55, 0x3d, 0xd4, 0x1c, 0x47, 0x4a, 0xaa, 0x8e, 0x21, 0x0b,
-  0x68, 0x19, 0x64, 0xf6, 0x8e, 0x4e, 0x61, 0xea, 0x13, 0x58, 0x4c, 0xc9,
-  0x32, 0x75, 0xd9, 0x18, 0x80, 0xc0, 0x24, 0xd6, 0xc0, 0x4b, 0x10, 0x96,
-  0xec, 0xa4, 0xd2, 0x9c, 0x6a, 0xa6, 0xbd, 0xca, 0x1a, 0xaf, 0xbc, 0xa5,
-  0x82, 0xde, 0x84, 0xa1, 0x52, 0xc4, 0x79, 0xb0, 0x9f, 0xcc, 0x84, 0x24,
-  0xe7, 0xc1, 0x55, 0x6e, 0x56, 0xab, 0x02, 0x6c, 0xda, 0x5c, 0x37, 0x14,
-  0xc8, 0xf2, 0xb2, 0xb5, 0x41, 0x6c, 0x3b, 0xed, 0x34, 0xef, 0x71, 0xb2,
-  0xa1, 0x30, 0xc7, 0x4a, 0xa1, 0x9e, 0xae, 0x6d, 0x4b, 0xcb, 0x96, 0x1c,
-  0x98, 0x46, 0x68, 0xf9, 0xa1, 0xe6, 0x87, 0x1a, 0x8b, 0xd8, 0x2d, 0x6b,
-  0x43, 0xcb, 0x3e, 0x34, 0xa8, 0x91, 0x8c, 0x91, 0xeb, 0x8d, 0x34, 0x3a,
-  0xfe, 0x9f, 0x47, 0x9f, 0x30, 0x57, 0xfa, 0xdc, 0x83, 0x39, 0xa0, 0xd7,
-  0xa2, 0xa5, 0xb7, 0x18, 0x4f, 0xc3, 0x3b, 0xae, 0x4e, 0x01, 0xf7, 0xb6,
-  0x10, 0xe4, 0x05, 0xe8, 0x10, 0x5b, 0xdd, 0x23, 0x5c, 0xc3, 0x74, 0xbe,
-  0x88, 0x80, 0x76, 0xf4, 0x15, 0x03, 0xc2, 0xc3, 0xdc, 0xb3, 0x69, 0x1b,
-  0x9a, 0xb3, 0x14, 0x0a, 0x23, 0x1e, 0x9a, 0x08, 0xd3, 0x84, 0x79, 0x17,
-  0x01, 0x48, 0x58, 0x00, 0xea, 0xcb, 0x37, 0xdd, 0xd3, 0x55, 0x6c, 0x94,
-  0x52, 0x3c, 0x1e, 0x45, 0x69, 0x62, 0xc0, 0x58, 0x3f, 0xc9, 0xdf, 0xca,
-  0x43, 0x3c, 0xbf, 0x59, 0xa6, 0xd8, 0x96, 0x70, 0x0c, 0xfa, 0x85, 0x80,
-  0x23, 0x89, 0x82, 0xb5, 0xb9, 0xf1, 0x2b, 0xce, 0xc4, 0xe7, 0xae, 0x01,
-  0x43, 0xcf, 0x1a, 0x04, 0x43, 0xda, 0xd7, 0xad, 0xda, 0x88, 0x59, 0xa6,
-  0x88, 0x39, 0xfc, 0x78, 0xd7, 0x4e, 0x08, 0x88, 0x37, 0x58, 0x17, 0x08,
-  0x0a, 0xcc, 0x25, 0x5a, 0xd5, 0x61, 0xd5, 0xd1, 0xec, 0x6a, 0xea, 0xa3,
-  0x9f, 0xb7, 0x57, 0xe1, 0xce, 0x46, 0x41, 0x0b, 0x9e, 0xb3, 0x38, 0x7a,
-  0x6c, 0x3c, 0x60, 0x3a, 0x13, 0xb3, 0x05, 0x01, 0xf5, 0xc1, 0x09, 0x62,
-  0xe1, 0x22, 0x60, 0x44, 0x2b, 0x42, 0x5e, 0x46, 0x39, 0xea, 0x5e, 0xa5,
-  0x72, 0xa0, 0x42, 0x20, 0x6b, 0x19, 0xe7, 0x4f, 0x0f, 0xae, 0xd6, 0xdf,
-  0x66, 0xdb, 0x24, 0x99, 0xfd, 0x69, 0xca, 0x01, 0xea, 0xd6, 0xd2, 0xf4,
-  0xdb, 0xd0, 0xd2, 0xf5, 0xcd, 0x4a, 0xdc, 0x05, 0xc5, 0xdf, 0x5b, 0xe1,
-  0x00, 0x1e, 0xfa, 0xcc, 0x20, 0x0d, 0xbc, 0x3e, 0x2d, 0xf3, 0x15, 0x5b,
-  0x30, 0xdb, 0x21, 0x91, 0xe2, 0x1c, 0x40, 0xd4, 0x97, 0x99, 0x35, 0x73,
-  0x63, 0x80, 0x47, 0xc4, 0x4c, 0xb5, 0xd3, 0x2c, 0x55, 0x34, 0x36, 0xb3,
-  0xa9, 0x86, 0x5c, 0x03, 0x04, 0x9c, 0xe4, 0x2e, 0xab, 0x32, 0x07, 0x17,
-  0x89, 0x80, 0x5d, 0x73, 0xfa, 0x86, 0xc9, 0xa8, 0x34, 0xcf, 0x47, 0x2a,
-  0x11, 0x6b, 0xe2, 0x61, 0xab, 0xda, 0x00, 0x86, 0xe3, 0x20, 0x36, 0x81,
-  0x69, 0x04, 0x0b, 0x70, 0x7b, 0xbe, 0x11, 0x80, 0x62, 0xb2, 0xd4, 0x8e,
-  0x33, 0xbb, 0xab, 0x16, 0x98, 0x9b, 0x73, 0x51, 0x7b, 0x03, 0x43, 0x67,
-  0x83, 0x9e, 0x80, 0x40, 0x10, 0x76, 0xb2, 0xd7, 0xdc, 0x43, 0x19, 0xd5,
-  0x3b, 0xcf, 0xdb, 0x51, 0x55, 0x54, 0x0c, 0x7b, 0x66, 0x84, 0x45, 0x0f,
-  0xf5, 0x74, 0x45, 0xf2, 0xed, 0x99, 0x7a, 0xba, 0x52, 0xb2, 0x25, 0x1b,
-  0x1e, 0x3a, 0xf7, 0xd2, 0x31, 0x2f, 0x59, 0x1e, 0xb4, 0x13, 0x45, 0xf2,
-  0xa3, 0x4d, 0x28, 0x25, 0xc4, 0xd3, 0x61, 0xe0, 0xe9, 0x54, 0x47, 0x91,
-  0xcb, 0x94, 0x03, 0x77, 0x50, 0xb7, 0x87, 0x8d, 0xbf, 0xdf, 0xa8, 0x37,
-  0x35, 0x03, 0x77, 0xb5, 0xe0, 0x6e, 0x47, 0xc2, 0xb8, 0xe0, 0x52, 0x71,
-  0x0d, 0xe6, 0x06, 0x42, 0x38, 0xb9, 0xcb, 0xeb, 0x4c, 0x0a, 0x63, 0x20,
-  0xf4, 0x13, 0x93, 0x9e, 0x7a, 0x45, 0x03, 0x03, 0x38, 0x44, 0x71, 0xa2,
-  0x1c, 0x52, 0x44, 0x3d, 0xe1, 0x01, 0xe4, 0x40, 0x51, 0x28, 0x19, 0x27,
-  0x60, 0x2b, 0x6b, 0x26, 0x5b, 0x8c, 0x12, 0x9c, 0x80, 0xc2, 0x8b, 0x94,
-  0x73, 0x83, 0x55, 0x3d, 0xe8, 0xe6, 0xf3, 0x15, 0x1d, 0xdb, 0x38, 0x79,
-  0x78, 0x98, 0x7f, 0xf8, 0x3e, 0x5c, 0x97, 0x4a, 0xeb, 0x61, 0xa0, 0x44,
-  0x2c, 0xb4, 0x9a, 0xc1, 0x66, 0x97, 0xdb, 0xfa, 0x3f, 0x35, 0xe0, 0xae,
-  0x75, 0x49, 0xe0, 0x05, 0x41, 0x4f, 0x45, 0x2a, 0x60, 0x84, 0x7a, 0x01,
-  0x85, 0x67, 0xaf, 0x1d, 0x1b, 0xcf, 0x7c, 0xd9, 0x22, 0x6d, 0x8b, 0x07,
-  0x2f, 0xcb, 0x26, 0xe3, 0x08, 0xe2, 0x6b, 0xe7, 0x32, 0x08, 0x8e, 0x4d,
-  0x56, 0x78, 0x24, 0x00, 0x16, 0x46, 0x9d, 0xcd, 0x56, 0xa9, 0xd2, 0x86,
-  0x49, 0x68, 0x6e, 0x47, 0xd3, 0xb5, 0x27, 0xa4, 0x36, 0xe2, 0xc1, 0x5e,
-  0xa4, 0x1e, 0xd4, 0xe2, 0x76, 0x8f, 0x8e, 0xc5, 0xe0, 0x59, 0x9f, 0xff,
-  0x7a, 0xc6, 0x40, 0x12, 0x4d, 0xdb, 0xde, 0x0c, 0x40, 0x67, 0x29, 0x23,
-  0x7b, 0x7c, 0xa6, 0x85, 0xe0, 0x86, 0xbf, 0x04, 0xfb, 0x20, 0x8e, 0x62,
-  0x6a, 0xf3, 0x7e, 0x23, 0x64, 0x25, 0x84, 0xf7, 0x70, 0x24, 0xec, 0xce,
-  0xf0, 0x49, 0xfb, 0x84, 0x92, 0xc6, 0x1a, 0xab, 0x6a, 0x08, 0xe9, 0x14,
-  0x9c, 0x1a, 0x85, 0x18, 0x39, 0x42, 0x14, 0xa9, 0xaa, 0x64, 0x00, 0x51,
-  0x8c, 0x43, 0x76, 0x8a, 0x56, 0x6c, 0x50, 0x2c, 0x6d, 0xf5, 0xcd, 0x30,
-  0x29, 0xc4, 0x39, 0xb7, 0x88, 0xd8, 0x6d, 0xb5, 0xd6, 0x4a, 0xf6, 0xc1,
-  0xa9, 0x6c, 0x3c, 0x67, 0x31, 0x6d, 0x1b, 0x46, 0x4b, 0x07, 0x79, 0xb9,
-  0x18, 0x86, 0x35, 0x17, 0x6d, 0xc4, 0xb0, 0xbc, 0x6b, 0xba, 0xdf, 0xf6,
-  0xf3, 0xea, 0x21, 0x76, 0xa2, 0x0f, 0x1a, 0x9d, 0xd4, 0x5f, 0xd7, 0x00,
-  0xe4, 0x80, 0x63, 0x83, 0xcf, 0xa3, 0x60, 0x91, 0x9d, 0xb2, 0x46, 0xc5,
-  0x72, 0x82, 0x2b, 0x63, 0x58, 0xef, 0xd3, 0xa2, 0x70, 0x8d, 0xee, 0xbe,
-  0x7a, 0x2a, 0xf6, 0x3e, 0x7c, 0x08, 0x77, 0x82, 0x85, 0x71, 0x94, 0x24,
-  0x40, 0xa8, 0x30, 0x5f, 0x90, 0x4f, 0x3f, 0x7c, 0x68, 0x7f, 0x19, 0xaf,
-  0x9d, 0xc0, 0x1e, 0x81, 0x5a, 0x4a, 0x48, 0x37, 0xa5, 0xac, 0x54, 0xea,
-  0xad, 0xa2, 0x82, 0x3a, 0xb1, 0x16, 0x67, 0x0e, 0x51, 0x1e, 0x2d, 0x4e,
-  0x22, 0xca, 0xa9, 0x85, 0xd9, 0x73, 0x77, 0x18, 0xa1, 0xb6, 0x5e, 0x1b,
-  0x8e, 0xc1, 0x95, 0x21, 0xe5, 0x44, 0x6a, 0xe5, 0xf3, 0x72, 0x29, 0x99,
-  0xd0, 0x01, 0x50, 0x59, 0xce, 0xcb, 0x4e, 0x25, 0xd9, 0x96, 0x45, 0x93,
-  0x23, 0x3f, 0xb3, 0xa2, 0xfb, 0xcb, 0xbc, 0xbe, 0x63, 0xd6, 0x3f, 0x2f,
-  0x96, 0x4d, 0xa6, 0xf0, 0xe6, 0xe8, 0xd0, 0xd6, 0x77, 0x8e, 0x2d, 0xfb,
-  0x8c, 0x72, 0x84, 0x34, 0xfc, 0x43, 0xc4, 0xbd, 0xda, 0xc3, 0x6b, 0xc3,
-  0xb8, 0x18, 0x6f, 0x9f, 0x53, 0x7b, 0x84, 0x64, 0x07, 0x78, 0x35, 0xc6,
-  0x6a, 0xa6, 0x2e, 0xe1, 0x9b, 0x41, 0xc7, 0xcc, 0x62, 0x73, 0xb0, 0x7d,
-  0x02, 0x3c, 0x04, 0xa3, 0x35, 0x13, 0x5b, 0xbd, 0x2a, 0x2b, 0xb3, 0xa1,
-  0x73, 0x91, 0x89, 0x38, 0x6d, 0x20, 0x38, 0xed, 0xdc, 0x15, 0x95, 0xff,
-  0xc4, 0x84, 0x39, 0x85, 0x83, 0x0b, 0x63, 0x42, 0x74, 0x2d, 0x1b, 0x91,
-  0xa2, 0xb5, 0xa8, 0x27, 0x56, 0x57, 0x47, 0xfd, 0xd0, 0x45, 0xb9, 0xeb,
-  0x1f, 0xc3, 0xdf, 0x3e, 0x2f, 0xd8, 0x5b, 0x23, 0x8a, 0x9a, 0x22, 0x1a,
-  0x08, 0xae, 0xdc, 0x37, 0x96, 0x5b, 0xd5, 0xb3, 0x2c, 0x5b, 0x48, 0xf0,
-  0xcd, 0xbc, 0x5c, 0x16, 0x8d, 0x9e, 0x43, 0x3d, 0x86, 0x2c, 0xa0, 0x08,
-  0x15, 0x4a, 0x4c, 0xe4, 0xaa, 0x03, 0x9e, 0x40, 0xb8, 0x80, 0x63, 0x2c,
-  0x9b, 0x7a, 0x9e, 0xe5, 0xa6, 0x7b, 0xae, 0x36, 0xf2, 0xc6, 0x97, 0xb5,
-  0xe2, 0x27, 0xd2, 0x6e, 0x99, 0xac, 0xb2, 0x6c, 0x9b, 0x25, 0x19, 0x59,
-  0xeb, 0xcd, 0x76, 0x76, 0x58, 0x08, 0x94, 0xc4, 0x88, 0x46, 0x90, 0x56,
-  0x61, 0xc7, 0xbc, 0x02, 0x83, 0x17, 0xf6, 0x87, 0xb4, 0x8e, 0xba, 0xb4,
-  0x91, 0x0d, 0xca, 0x5a, 0xa8, 0x8e, 0x21, 0x96, 0x30, 0x60, 0xb5, 0xff,
-  0xc8, 0xaa, 0xb2, 0xab, 0xe2, 0xa8, 0x65, 0xc2, 0x86, 0x69, 0x5a, 0x6a,
-  0xa3, 0xb1, 0x0f, 0x1d, 0x05, 0x84, 0x48, 0x3a, 0xff, 0x2e, 0x82, 0xb0,
-  0x94, 0xbc, 0x8a, 0x26, 0x2e, 0xb8, 0x42, 0x21, 0xb6, 0x99, 0x1e, 0x94,
-  0xbc, 0x42, 0x0a, 0x1c, 0x07, 0x1e, 0x90, 0xf5, 0xdb, 0x33, 0xdb, 0xb1,
-  0x7b, 0x2e, 0xea, 0x5d, 0x58, 0xe0, 0x99, 0xf9, 0x8a, 0x8e, 0x0a, 0x28,
-  0x72, 0x29, 0x4d, 0x83, 0x50, 0x9e, 0x36, 0x08, 0x78, 0x58, 0x86, 0xb6,
-  0x49, 0x1f, 0xcf, 0x4a, 0x8a, 0x9b, 0xae, 0xad, 0x5a, 0x58, 0x05, 0xb0,
-  0x6c, 0x40, 0xfe, 0x64, 0x76, 0x33, 0x8d, 0x14, 0xc1, 0x7e, 0x5b, 0x12,
-  0x44, 0x8a, 0xad, 0x4a, 0x69, 0xdb, 0x91, 0x37, 0x03, 0x2e, 0xad, 0xed,
-  0x64, 0xdc, 0x40, 0xbf, 0x8d, 0xe5, 0x25, 0x83, 0x06, 0xf2, 0x0d, 0x87,
-  0x1c, 0x00, 0x0f, 0x45, 0xef, 0xb8, 0xc0, 0xb4, 0x02, 0x58, 0x73, 0x89,
-  0xff, 0x47, 0x50, 0x06, 0xcd, 0x27, 0x52, 0xb1, 0x1b, 0x3b, 0x60, 0x1a,
-  0xc9, 0xcb, 0x29, 0xc2, 0x39, 0x98, 0xa3, 0x04, 0x59, 0x94, 0x8c, 0x82,
-  0xe0, 0x30, 0xd1, 0xb5, 0xc4, 0x30, 0xbd, 0xce, 0xa5, 0x3f, 0x93, 0xc1,
-  0xbc, 0xaf, 0xf5, 0x89, 0x95, 0xc6, 0x46, 0x99, 0xa4, 0x52, 0xc4, 0x81,
-  0xd2, 0x0d, 0x07, 0x03, 0xed, 0x36, 0x6c, 0x93, 0x91, 0xab, 0xcc, 0x31,
-  0xda, 0x7f, 0x23, 0x93, 0xaa, 0x49, 0x82, 0xaa, 0xf3, 0x59, 0x98, 0xf3,
-  0x36, 0xc2, 0x87, 0xac, 0x7e, 0xfc, 0x7d, 0x99, 0xd3, 0x8c, 0x18, 0x16,
-  0xe7, 0x55, 0x49, 0xfb, 0x5f, 0x4b, 0x72, 0xc3, 0x15, 0xa4, 0x39, 0x89,
-  0x71, 0xaa, 0x84, 0xab, 0x98, 0xee, 0x03, 0x05, 0x9b, 0x4a, 0xdb, 0x0c,
-  0xb5, 0xd8, 0x24, 0xea, 0x8c, 0xcd, 0xcd, 0x25, 0x35, 0xb4, 0xe5, 0xb2,
-  0x0c, 0x43, 0x88, 0x54, 0x92, 0xe3, 0xeb, 0x24, 0xad, 0x6f, 0x42, 0xf9,
-  0xb8, 0xdf, 0xca, 0xe0, 0x82, 0xbc, 0x28, 0x5e, 0x92, 0x86, 0x72, 0x02,
-  0x8d, 0x5e, 0xba, 0xc5, 0x20, 0xa8, 0xe6, 0x8e, 0xa4, 0x0a, 0xc7, 0x68,
-  0x4a, 0x43, 0xfc, 0xbb, 0x64, 0xd3, 0x8a, 0x7a, 0xad, 0xd3, 0x7a, 0x36,
-  0xc8, 0xbb, 0x84, 0xcf, 0xb0, 0xd7, 0x36, 0x7c, 0xc8, 0xab, 0x21, 0x4a,
-  0x79, 0xb9, 0xa3, 0x03, 0x2a, 0xfa, 0x12, 0x00, 0xd1, 0x3f, 0xc4, 0x6e,
-  0x9e, 0xec, 0xb4, 0x15, 0xb5, 0x5f, 0x16, 0x66, 0xab, 0xd8, 0x8a, 0xad,
-  0x60, 0xc5, 0x87, 0x22, 0x6c, 0x57, 0xd4, 0x89, 0xf2, 0x02, 0x69, 0x5b,
-  0x15, 0xbd, 0x22, 0x63, 0xd2, 0x30, 0x59, 0x9b, 0x12, 0x94, 0x84, 0x98,
-  0x5a, 0x1c, 0x38, 0xcb, 0x56, 0xc7, 0x8f, 0x89, 0x9c, 0x1d, 0x81, 0x00,
-  0x0d, 0x31, 0x0d, 0x40, 0x3a, 0xf1, 0x22, 0x56, 0x0a, 0x92, 0x36, 0x90,
-  0xd4, 0x1e, 0x2b, 0x5e, 0x82, 0x0a, 0x81, 0x72, 0x64, 0xc5, 0x44, 0x14,
-  0x51, 0xe2, 0xfa, 0x2d, 0x79, 0x13, 0xa9, 0xae, 0xda, 0x0a, 0xbe, 0xaf,
-  0xeb, 0x19, 0x47, 0xb0, 0x99, 0x23, 0xcc, 0xe0, 0x91, 0x09, 0x23, 0x49,
-  0x32, 0x86, 0xe4, 0x45, 0x75, 0xaf, 0x01, 0xac, 0x04, 0x33, 0x72, 0x71,
-  0x32, 0xf2, 0x31, 0x74, 0xb4, 0x68, 0x45, 0xc0, 0x6f, 0x29, 0x01, 0x9d,
-  0x35, 0x06, 0x58, 0x96, 0x91, 0x01, 0xe3, 0xbf, 0xa1, 0x6c, 0x51, 0xcc,
-  0xe7, 0x0a, 0xa6, 0x2c, 0xd6, 0xcd, 0xee, 0x39, 0xe4, 0x8e, 0x87, 0x89,
-  0x67, 0x38, 0x62, 0xc4, 0x1c, 0x33, 0xf8, 0x81, 0x42, 0xf9, 0x10, 0x6b,
-  0xc4, 0x74, 0x0c, 0x27, 0xff, 0x3b, 0x4b, 0x40, 0xac, 0x96, 0x0d, 0x02,
-  0xcb, 0x54, 0x93, 0x50, 0xc5, 0x81, 0x19, 0xe2, 0x0c, 0xb2, 0x62, 0x52,
-  0xdd, 0xb7, 0x00, 0xed, 0xa7, 0xc3, 0x6e, 0x12, 0xcb, 0xf6, 0xe6, 0x43,
-  0xe9, 0x88, 0x54, 0x3b, 0x81, 0x18, 0x31, 0x95, 0xfb, 0x4a, 0x38, 0xcd,
-  0xcd, 0x7c, 0x62, 0x07, 0xe8, 0xd1, 0x3f, 0x6e, 0xd8, 0x1d, 0xec, 0x7e,
-  0xb7, 0x39, 0x32, 0x23, 0xaa, 0xd4, 0xc0, 0x94, 0x06, 0x3d, 0x8c, 0x59,
-  0x82, 0x55, 0x09, 0x19, 0xa6, 0x84, 0xd9, 0x18, 0xfb, 0xfe, 0xd8, 0xd5,
-  0xd4, 0xdd, 0xe4, 0x25, 0x2c, 0xd9, 0x56, 0xdd, 0x6b, 0xed, 0x36, 0x96,
-  0x27, 0x12, 0xc1, 0xa8, 0xd8, 0xa1, 0xfe, 0xee, 0x9b, 0x9d, 0x94, 0xb4,
-  0x79, 0xdd, 0x7c, 0xaf, 0x28, 0xc8, 0xea, 0xfd, 0xbf, 0x60, 0xee, 0xd3,
-  0x88, 0xf5, 0xea, 0x63, 0xb7, 0xdd, 0x6e, 0xf4, 0xc3, 0x29, 0x94, 0xff,
-  0xd2, 0x6e, 0x60, 0xf6, 0xdd, 0x15, 0x01, 0x07, 0x21, 0x58, 0xd5, 0x20,
-  0xff, 0x84, 0x6d, 0xac, 0x7e, 0xfb, 0x4d, 0x2b, 0x6d, 0x87, 0x2e, 0x2f,
-  0x54, 0x70, 0x49, 0x91, 0x10, 0x04, 0x0c, 0x4a, 0x49, 0xf6, 0x4a, 0x2e,
-  0x67, 0xe9, 0x5d, 0x58, 0xd7, 0x83, 0xa6, 0x6f, 0x1a, 0x65, 0xfc, 0x0e,
-  0x33, 0x59, 0x3f, 0xb2, 0xbb, 0x76, 0x03, 0xfe, 0xea, 0xe8, 0x60, 0x74,
-  0x31, 0xec, 0xde, 0x73, 0x41, 0x16, 0x2b, 0xad, 0x9e, 0x83, 0x8f, 0x26,
-  0x43, 0xab, 0x91, 0x13, 0x29, 0xde, 0x45, 0x72, 0xff, 0x30, 0x38, 0x1e,
-  0x9b, 0x91, 0x9f, 0x24, 0xc3, 0x18, 0x89, 0x08, 0x11, 0x30, 0x40, 0x88,
-  0xa5, 0x70, 0x02, 0x8f, 0xf3, 0x19, 0xa6, 0x60, 0x06, 0x66, 0x18, 0xfe,
-  0xbc, 0x16, 0xf9, 0xb9, 0xa6, 0x82, 0xc6, 0xe5, 0x8c, 0x2c, 0x45, 0x91,
-  0x42, 0x5d, 0xdd, 0x6d, 0xfb, 0xfe, 0xe0, 0xfc, 0xed, 0xf1, 0xdb, 0xaf,
-  0xf7, 0x5b, 0x17, 0xf5, 0x8c, 0x40, 0x84, 0x25, 0x6e, 0x81, 0xab, 0x9a,
-  0xf1, 0x72, 0xb1, 0x49, 0x7d, 0x7c, 0xef, 0xd5, 0xeb, 0xeb, 0x12, 0xf5,
-  0x2c, 0xbd, 0x62, 0x37, 0x4c, 0x7d, 0xc3, 0xd6, 0x4a, 0x29, 0x9c, 0x0a,
-  0x30, 0x9e, 0x0e, 0x95, 0x74, 0xd2, 0x2a, 0x69, 0x93, 0x61, 0x3e, 0xbc,
-  0x2d, 0x6f, 0x82, 0xf8, 0xd8, 0xef, 0xf3, 0x02, 0xbb, 0xdc, 0xb6, 0x83,
-  0xb4, 0xf7, 0x59, 0xb5, 0x39, 0xaf, 0x7a, 0x0e, 0x15, 0x33, 0x59, 0x85,
-  0xeb, 0x80, 0xe2, 0xd6, 0x74, 0xd7, 0xff, 0xf2, 0x35, 0x08, 0x2b, 0xdc,
-  0x79, 0x15, 0x0c, 0x7f, 0xc9, 0x1a, 0xec, 0xed, 0x75, 0xd6, 0xc0, 0x5c,
-  0x4b, 0xf5, 0x1e, 0xdb, 0x40, 0x1f, 0x48, 0xcc, 0xf0, 0x4c, 0x6e, 0x14,
-  0x22, 0x77, 0x7a, 0xf8, 0xed, 0x68, 0xef, 0xd1, 0x8c, 0x0c, 0x7e, 0x63,
-  0x10, 0xba, 0x20, 0x1f, 0xce, 0xc9, 0x68, 0x8b, 0x79, 0x4f, 0x7d, 0x53,
-  0x79, 0xe4, 0x64, 0xbb, 0x12, 0xa5, 0x64, 0x81, 0x22, 0xeb, 0x67, 0x5e,
-  0x2e, 0x6d, 0x89, 0x3c, 0x0f, 0xfc, 0xb2, 0xcf, 0x21, 0xa7, 0x04, 0x4e,
-  0x1a, 0x41, 0xa5, 0xd0, 0xfa, 0xa5, 0x5e, 0xc5, 0xd2, 0x20, 0x6a, 0x52,
-  0x72, 0x2d, 0x77, 0x77, 0x86, 0x9f, 0xf5, 0xbb, 0x72, 0xa6, 0x61, 0x56,
-  0x46, 0xf0, 0x9e, 0x2d, 0xa9, 0x6f, 0x4e, 0xca, 0x54, 0xcb, 0xae, 0x8d,
-  0xe2, 0x8d, 0x08, 0x04, 0xf5, 0x9e, 0x4d, 0xf6, 0xa0, 0x5b, 0xdc, 0x0d,
-  0x56, 0xb6, 0x37, 0x95, 0xa7, 0xf6, 0xb7, 0xb6, 0x9c, 0xa1, 0x93, 0x63,
-  0x4e, 0x87, 0x9f, 0x4e, 0x1d, 0xe3, 0x3e, 0xd3, 0x5f, 0x45, 0x14, 0xe9,
-  0xc7, 0x51, 0xc5, 0x0a, 0xcf, 0xef, 0x47, 0x53, 0xc5, 0xe7, 0xab, 0xf8,
-  0x7d, 0xa4, 0x74, 0xed, 0xa3, 0x74, 0x21, 0x75, 0x6c, 0xff, 0x37, 0xa2,
-  0x8a, 0x34, 0xf9, 0x38, 0xba, 0x48, 0xbb, 0x84, 0x11, 0x1e, 0xb6, 0x0f,
-  0x9f, 0x12, 0xa3, 0x1a, 0xa3, 0x78, 0x3a, 0xb0, 0xf5, 0xef, 0x7e, 0x05,
-  0xc5, 0x3c, 0x95, 0x99, 0x6e, 0xc0, 0x37, 0x20, 0x4e, 0x71, 0x45, 0x82,
-  0x56, 0x17, 0xcd, 0x8a, 0x32, 0x67, 0x2c, 0x14, 0x6d, 0xea, 0x85, 0xb8,
-  0x9a, 0x07, 0x45, 0xa8, 0x2b, 0x08, 0x73, 0xff, 0xe5, 0xb4, 0xf6, 0x7f,
-  0x04, 0x07, 0x7a, 0xea, 0xaa, 0x17, 0x7e, 0x0c, 0xc9, 0x3d, 0xbd, 0xb6,
-  0x24, 0x17, 0xe0, 0x73, 0x7b, 0xbc, 0xe9, 0x13, 0x27, 0x77, 0x75, 0x45,
-  0x3b, 0xbb, 0xea, 0xa8, 0x98, 0x5e, 0x95, 0xc5, 0x15, 0xfd, 0xd2, 0x2a,
-  0xb0, 0x45, 0x26, 0x12, 0x4d, 0x44, 0x0a, 0x4c, 0xa9, 0x98, 0x9a, 0x45,
-  0x31, 0xf1, 0xcc, 0xf6, 0x0c, 0x60, 0x69, 0x46, 0x10, 0xdc, 0x99, 0x4f,
-  0x1f, 0x25, 0xf6, 0x20, 0x99, 0x51, 0xe8, 0x5d, 0x89, 0x7b, 0xc0, 0x25,
-  0x1c, 0x95, 0xc6, 0xad, 0xff, 0x2a, 0x12, 0x6b, 0x8a, 0x18, 0x81, 0xd9,
-  0xe3, 0x77, 0xad, 0x4f, 0xe7, 0x96, 0x8d, 0x26, 0x01, 0x28, 0xe6, 0x43,
-  0xf9, 0x8f, 0xff, 0xa7, 0xf0, 0xd0, 0xa7, 0x1f, 0x47, 0xce, 0xff, 0x8e,
-  0x9b, 0xf5, 0x7f, 0x23, 0xe2, 0x8d, 0x6d, 0xf3, 0x86, 0xc0, 0x97, 0xb2,
-  0x46, 0xc4, 0x17, 0xcb, 0xa6, 0x03, 0x4d, 0x81, 0x22, 0x83, 0x55, 0x3c,
-  0x3e, 0xfb, 0xee, 0x19, 0x82, 0x22, 0x47, 0x61, 0x75, 0xaa, 0x93, 0x57,
-  0x07, 0x67, 0x91, 0x9b, 0xe1, 0xaa, 0xae, 0xd3, 0x45, 0xae, 0xd6, 0x92,
-  0x47, 0x8c, 0x37, 0xce, 0x3a, 0x1d, 0xd8, 0x68, 0x64, 0xbb, 0x54, 0x45,
-  0x24, 0x4f, 0xdf, 0x64, 0x6e, 0xcd, 0x29, 0x97, 0x7f, 0x9f, 0xc6, 0xdd,
-  0x97, 0x0f, 0xd9, 0x82, 0xf2, 0xe6, 0x41, 0x93, 0x8f, 0x3d, 0xe6, 0xad,
-  0x94, 0xe9, 0x55, 0x13, 0x63, 0xf3, 0x4e, 0xd7, 0x1f, 0xb5, 0x32, 0x6b,
-  0xda, 0xb5, 0xfe, 0x50, 0xe3, 0x91, 0xc4, 0x2e, 0xd7, 0xd7, 0x16, 0xa1,
-  0xf2, 0xca, 0x8b, 0x62, 0x75, 0x82, 0x6a, 0x17, 0x7c, 0x79, 0x09, 0xc4,
-  0xfe, 0x3a, 0x48, 0x1a, 0xbd, 0x43, 0x35, 0x15, 0x9b, 0x6f, 0x3c, 0x90,
-  0xe2, 0xc4, 0xb2, 0xeb, 0x5c, 0x94, 0x56, 0xb2, 0x5d, 0x8b, 0x49, 0xbe,
-  0x48, 0x67, 0x92, 0x05, 0xfc, 0x60, 0x75, 0xe4, 0x6e, 0x71, 0xd9, 0xf6,
-  0x84, 0x8c, 0xbe, 0xdf, 0xc5, 0xd3, 0x25, 0xf2, 0xf7, 0x2a, 0x10, 0x68,
-  0xd1, 0x78, 0x2f, 0xc3, 0x5d, 0xb0, 0xe2, 0xc4, 0x54, 0x80, 0x9c, 0x0e,
-  0x62, 0x79, 0x78, 0x20, 0x4c, 0x56, 0x23, 0x3b, 0x0d, 0x65, 0x95, 0xed,
-  0x3c, 0x7f, 0xb6, 0x93, 0xd4, 0xe9, 0x3d, 0x80, 0xc9, 0x6a, 0x79, 0x79,
-  0x6f, 0xf8, 0x64, 0x8b, 0x30, 0x11, 0xf3, 0xc6, 0x96, 0x7a, 0x1c, 0xb3,
-  0xb0, 0x41, 0xcd, 0x7b, 0xd0, 0x2a, 0x16, 0x90, 0x4a, 0x7c, 0x69, 0xc9,
-  0xdb, 0xa3, 0xc3, 0x84, 0xeb, 0xea, 0x20, 0x25, 0xbc, 0xa3, 0xe4, 0x6a,
-  0x65, 0x56, 0xb3, 0x70, 0x5a, 0xfb, 0x38, 0xa6, 0x98, 0x47, 0x96, 0x43,
-  0x49, 0x13, 0x49, 0x1d, 0x85, 0x1d, 0x08, 0xf1, 0x4a, 0xa6, 0x52, 0x59,
-  0x97, 0x28, 0xfa, 0x96, 0xbf, 0x24, 0x3e, 0x24, 0xc0, 0xc3, 0xf5, 0x7e,
-  0xeb, 0xc6, 0x68, 0xea, 0x55, 0x3c, 0x78, 0xec, 0xdc, 0x42, 0xd8, 0x90,
-  0x13, 0x96, 0xea, 0xf0, 0xb0, 0x87, 0x5f, 0xde, 0xd1, 0x1a, 0x84, 0xad,
-  0x5c, 0x1b, 0x57, 0x8d, 0xf7, 0x38, 0x06, 0x80, 0xe5, 0xca, 0x12, 0x71,
-  0x05, 0xd0, 0x19, 0xa1, 0x2b, 0xae, 0x0f, 0xd6, 0xf5, 0x9a, 0xd2, 0xb0,
-  0x2a, 0xad, 0x56, 0x16, 0x29, 0xd1, 0xf5, 0x9b, 0xcb, 0xad, 0x0d, 0xdd,
-  0x06, 0x46, 0x95, 0x2f, 0xb2, 0x66, 0x20, 0xad, 0xbd, 0x38, 0x3d, 0xbb,
-  0x78, 0x79, 0x9b, 0x06, 0x28, 0x5b, 0x04, 0x9e, 0x6c, 0x4b, 0xbd, 0x59,
-  0x33, 0x3a, 0xbd, 0xe9, 0xe5, 0xcc, 0x8d, 0x6c, 0xf2, 0x98, 0x2d, 0x0a,
-  0x57, 0x85, 0x78, 0x45, 0x17, 0x17, 0x7f, 0x3d, 0x3b, 0x7a, 0xf9, 0x82,
-  0x8c, 0xf0, 0x5f, 0x90, 0x27, 0xa4, 0x6e, 0xd9, 0xe4, 0x93, 0xe6, 0x7e,
-  0x11, 0xde, 0x8c, 0x3f, 0xbc, 0x3a, 0x1e, 0x9d, 0x9d, 0x9c, 0x1e, 0xbe,
-  0x7c, 0xf1, 0x03, 0x59, 0x1b, 0xcc, 0xea, 0xdd, 0x7b, 0xef, 0xda, 0xcf,
-  0x6c, 0x1e, 0x4c, 0x58, 0xde, 0xfe, 0xe8, 0xfb, 0xf7, 0x47, 0x6f, 0xbf,
-  0x7b, 0xf9, 0xe2, 0x36, 0xad, 0xfa, 0x34, 0x3f, 0x7e, 0x9b, 0x00, 0x6d,
-  0x8a, 0xdb, 0xdc, 0x5c, 0x36, 0x44, 0xc4, 0xb6, 0x9e, 0xa0, 0xb7, 0x46,
-  0x17, 0xb4, 0x46, 0xcb, 0x05, 0x05, 0x99, 0x3e, 0x10, 0x6d, 0x08, 0x2e,
-  0xeb, 0xea, 0xc9, 0xb7, 0xa9, 0xc3, 0x8b, 0x6c, 0xd4, 0xc4, 0x3f, 0x09,
-  0x97, 0xa4, 0x68, 0x30, 0x48, 0xed, 0xd1, 0x02, 0xf0, 0x5c, 0xe1, 0xc9,
-  0xd5, 0x47, 0xd3, 0x2a, 0x9a, 0xb6, 0x61, 0x54, 0xe0, 0x3a, 0x74, 0x88,
-  0x4c, 0x8c, 0x32, 0xfe, 0x60, 0x68, 0x25, 0xf3, 0x2e, 0x17, 0xb5, 0x6d,
-  0x83, 0xca, 0xb8, 0xba, 0xb9, 0x99, 0x42, 0x0e, 0x24, 0x90, 0x2d, 0x8d,
-  0x63, 0x9d, 0x85, 0x66, 0x3f, 0x2f, 0x97, 0x02, 0x51, 0x0f, 0x90, 0x6a,
-  0x28, 0x80, 0x07, 0xf3, 0xc3, 0x78, 0xb4, 0x86, 0x44, 0x7b, 0x16, 0x0a,
-  0x71, 0x19, 0xc9, 0x4a, 0xc6, 0x04, 0xa8, 0x38, 0xca, 0x8d, 0x1d, 0x57,
-  0xc5, 0xf4, 0xdb, 0x4e, 0x8a, 0xd1, 0x9c, 0x45, 0x2f, 0xde, 0x34, 0x92,
-  0x36, 0x29, 0x46, 0x79, 0xa9, 0x76, 0xc9, 0x2e, 0x60, 0x12, 0x29, 0x29,
-  0xa5, 0x93, 0x50, 0xb1, 0x6d, 0x80, 0x3a, 0x6f, 0xac, 0x2b, 0xb7, 0x11,
-  0x3a, 0x91, 0xc9, 0x25, 0x30, 0xb4, 0x67, 0x4e, 0x0f, 0x5b, 0x69, 0xcb,
-  0x8c, 0x6c, 0x8c, 0x36, 0x6d, 0x16, 0x2c, 0xb5, 0x78, 0xf6, 0xce, 0x41,
-  0xce, 0x47, 0xa0, 0x2b, 0x82, 0x43, 0xd8, 0x15, 0x94, 0xdd, 0x42, 0xf5,
-  0x06, 0x3d, 0xaa, 0xf4, 0x27, 0x2e, 0x46, 0xd4, 0xf9, 0x53, 0x67, 0x83,
-  0xe1, 0x0c, 0x79, 0xe1, 0x23, 0x5d, 0xa4, 0xd1, 0x12, 0x6d, 0x9c, 0x02,
-  0x98, 0x1c, 0x48, 0x78, 0x9a, 0x99, 0x7a, 0xbf, 0xdb, 0xc7, 0xb0, 0x97,
-  0xb4, 0xca, 0x09, 0xb2, 0xc7, 0x73, 0x33, 0x48, 0xf6, 0xbc, 0xe7, 0x2b,
-  0xc2, 0x93, 0xe2, 0x6d, 0x1c, 0xa8, 0xe9, 0x9e, 0x86, 0xda, 0x19, 0x1a,
-  0x3c, 0x1b, 0x63, 0x43, 0x79, 0x37, 0x21, 0x28, 0x0d, 0x38, 0x35, 0xea,
-  0xa8, 0x00, 0x43, 0x0c, 0xa8, 0x05, 0x40, 0xa3, 0xb2, 0xa9, 0x25, 0xec,
-  0xe5, 0x53, 0x5f, 0x2e, 0xb7, 0x09, 0x61, 0x3e, 0x86, 0x97, 0xc8, 0x9b,
-  0x18, 0x59, 0xd4, 0xbf, 0x76, 0x04, 0x64, 0x62, 0x85, 0x83, 0x0b, 0x17,
-  0xcc, 0x49, 0xb1, 0x98, 0x11, 0xdc, 0x85, 0x61, 0x72, 0x44, 0xdf, 0x0e,
-  0x2e, 0x02, 0x28, 0x56, 0x46, 0x58, 0xcf, 0x2b, 0x2f, 0x7b, 0x02, 0x81,
-  0xc3, 0x34, 0x77, 0xa6, 0x24, 0xc9, 0xc5, 0x82, 0x50, 0x31, 0x94, 0xa8,
-  0x6a, 0xf2, 0xc8, 0xac, 0xc8, 0x77, 0xaf, 0x93, 0xde, 0xd5, 0xac, 0x1c,
-  0x8f, 0xcd, 0xa4, 0x7a, 0x7a, 0xc7, 0x99, 0x11, 0xa6, 0xd5, 0x15, 0x84,
-  0x5e, 0x57, 0x06, 0xdc, 0x1e, 0x56, 0x54, 0xfa, 0x44, 0x5f, 0xab, 0x72,
-  0xb6, 0x69, 0x77, 0xc5, 0xbb, 0x24, 0xbb, 0x8a, 0x22, 0xad, 0xce, 0x54,
-  0x6a, 0xab, 0x8a, 0xd2, 0xe7, 0x89, 0xf6, 0x1f, 0x44, 0x77, 0x53, 0x8e,
-  0xb1, 0x4b, 0x07, 0x16, 0xe6, 0x03, 0x96, 0xb3, 0xba, 0xc4, 0x28, 0x17,
-  0x18, 0xbd, 0x48, 0x7a, 0xff, 0x45, 0xa3, 0xd8, 0xe9, 0xd3, 0xbf, 0xbb,
-  0xff, 0xec, 0x69, 0x09, 0xd6, 0xbb, 0xbb, 0x3b, 0xbf, 0xdc, 0x6b, 0xa4,
-  0xba, 0x2b, 0xb9, 0x69, 0x57, 0x36, 0x9a, 0xcf, 0xaf, 0x7e, 0xdc, 0x19,
-  0xec, 0x6c, 0x6f, 0x6f, 0xff, 0x3c, 0x5c, 0xd0, 0x8a, 0x5d, 0xa2, 0x55,
-  0x42, 0x56, 0xf4, 0x5a, 0xdd, 0xe2, 0xe5, 0xd9, 0xf2, 0xee, 0xfa, 0x66,
-  0xb2, 0x18, 0x50, 0x91, 0xfa, 0x30, 0x1a, 0xe9, 0x62, 0x59, 0xa1, 0x94,
-  0x16, 0x26, 0x77, 0x71, 0x78, 0xf6, 0xfe, 0xed, 0xe9, 0xab, 0xa3, 0x93,
-  0x83, 0xbf, 0xfa, 0x08, 0x7e, 0x36, 0x1e, 0xf5, 0x7d, 0x96, 0xd6, 0xf7,
-  0xef, 0xeb, 0xac, 0x31, 0x5f, 0x6e, 0x3c, 0xd9, 0xa4, 0x60, 0xbf, 0xee,
-  0x9e, 0x92, 0x6f, 0xd1, 0xc3, 0x35, 0xd4, 0xe0, 0x30, 0x1f, 0x13, 0xb0,
-  0x25, 0x95, 0xec, 0xb4, 0x23, 0xa0, 0x69, 0xa0, 0x97, 0x29, 0x65, 0x27,
-  0x04, 0x40, 0x56, 0xe2, 0x5e, 0x16, 0xa5, 0x93, 0x8a, 0x3f, 0xbc, 0x4e,
-  0x05, 0x86, 0x24, 0xd9, 0x30, 0xa2, 0xde, 0x67, 0x7b, 0x3b, 0x4f, 0x36,
-  0xdb, 0xad, 0xef, 0x75, 0x22, 0x7d, 0x1b, 0x72, 0xf3, 0x8c, 0x67, 0x37,
-  0x75, 0xfe, 0x0f, 0x73, 0x8f, 0x11, 0x88, 0x71, 0x18, 0x36, 0x7f, 0x01,
-  0xa4, 0x0e, 0x0a, 0x50, 0xa0, 0xdf, 0x92, 0xaf, 0x4e, 0xbe, 0xa5, 0xa4,
-  0x05, 0xab, 0x23, 0xcd, 0x19, 0x1a, 0x22, 0xf9, 0xe2, 0xe9, 0xce, 0xee,
-  0xa6, 0x2d, 0x78, 0xc6, 0x49, 0x4f, 0x74, 0xd8, 0x83, 0xf8, 0x88, 0x7f,
-  0x64, 0x5e, 0xe5, 0x29, 0xe6, 0xf2, 0xce, 0x69, 0x8a, 0x20, 0x25, 0xbd,
-  0x36, 0x81, 0xdf, 0x0b, 0xa7, 0x3e, 0x21, 0x8a, 0x56, 0x48, 0x9f, 0x0a,
-  0x20, 0xc5, 0x2e, 0x1c, 0xea, 0xc0, 0xd0, 0xc7, 0x25, 0x34, 0xc3, 0x91,
-  0xac, 0xab, 0xb8, 0xac, 0xf3, 0x5b, 0xcb, 0x4e, 0x2b, 0x9d, 0x6f, 0xed,
-  0xc5, 0x2e, 0x4a, 0x11, 0xac, 0xea, 0xf8, 0x3a, 0x7b, 0x30, 0x77, 0x52,
-  0x3f, 0x01, 0x38, 0x12, 0x98, 0xa5, 0xca, 0x50, 0x1a, 0x04, 0xfd, 0x20,
-  0xea, 0xab, 0x11, 0xc4, 0x2b, 0x24, 0x3b, 0x8a, 0x9b, 0xca, 0x73, 0x49,
-  0xcd, 0xb2, 0xab, 0x74, 0x72, 0x9f, 0xd8, 0x4c, 0x1f, 0x49, 0xcb, 0x98,
-  0x96, 0x01, 0x5e, 0x39, 0xc9, 0xbb, 0x13, 0x72, 0x83, 0xcd, 0xb2, 0xe9,
-  0x55, 0xc6, 0xa1, 0x1d, 0x5c, 0x62, 0xcd, 0x5c, 0x9a, 0x56, 0xd4, 0x6f,
-  0x8d, 0x4e, 0xa0, 0x21, 0x56, 0xc7, 0xb2, 0xe8, 0x12, 0x77, 0xa8, 0x8f,
-  0xc8, 0x86, 0x30, 0x9b, 0x1f, 0x59, 0xd3, 0xbd, 0xcf, 0x3b, 0x14, 0x3c,
-  0xab, 0x29, 0x84, 0x82, 0x64, 0xc4, 0xe4, 0x85, 0xfe, 0xf6, 0x45, 0x18,
-  0x76, 0x9a, 0xc0, 0x1b, 0x1b, 0xd4, 0x0e, 0x27, 0xd1, 0x32, 0x21, 0x09,
-  0x85, 0xa2, 0x91, 0xe9, 0x36, 0x94, 0xa2, 0xc6, 0x88, 0x3b, 0xb3, 0xbc,
-  0x2e, 0x3e, 0x11, 0x5c, 0x3f, 0xbd, 0xd1, 0xf9, 0x59, 0xaf, 0x2f, 0x7e,
-  0x5e, 0xd3, 0xc7, 0xc0, 0xfc, 0x9d, 0xe0, 0xf8, 0x51, 0xea, 0xe1, 0xd3,
-  0x3d, 0xb1, 0xc1, 0x62, 0xa0, 0x48, 0x1b, 0x0f, 0x7d, 0x56, 0xf8, 0x8e,
-  0xd2, 0x25, 0xee, 0xca, 0x6a, 0xca, 0xb8, 0x35, 0x2e, 0x47, 0xd6, 0xf0,
-  0x8a, 0xf6, 0x24, 0xd9, 0xaa, 0xd5, 0xd7, 0x42, 0x52, 0x2b, 0x97, 0x59,
-  0xce, 0x01, 0xf8, 0x3e, 0x06, 0x39, 0x0c, 0x42, 0x8a, 0xf7, 0x3a, 0x0b,
-  0x69, 0xc7, 0xf0, 0x42, 0x7f, 0x8b, 0x2d, 0x64, 0x62, 0x1f, 0xc3, 0xa4,
-  0x71, 0x6a, 0x15, 0x53, 0x8e, 0x16, 0x39, 0x8e, 0x3d, 0xb9, 0xd2, 0xe3,
-  0xa5, 0x15, 0x7d, 0xbc, 0x39, 0x0e, 0xd5, 0x8f, 0x2e, 0xd0, 0x60, 0x6e,
-  0xf1, 0xa4, 0xc2, 0x32, 0x04, 0x8f, 0x48, 0x09, 0xe1, 0x87, 0xa7, 0x87,
-  0x16, 0x5e, 0xd0, 0xbf, 0xd1, 0x69, 0xd1, 0x17, 0xce, 0x30, 0xf0, 0x69,
-  0xa7, 0x25, 0x27, 0xae, 0xbd, 0xea, 0x76, 0x72, 0x81, 0x79, 0xa3, 0x79,
-  0x7c, 0xef, 0x6e, 0x77, 0x86, 0xdb, 0x51, 0x67, 0xfc, 0x6b, 0xaa, 0xfa,
-  0xdc, 0x06, 0xce, 0xa4, 0xe9, 0x68, 0xd5, 0x00, 0xf2, 0xa7, 0x4b, 0xd9,
-  0x7b, 0xd1, 0x93, 0x15, 0x14, 0x71, 0x05, 0xc4, 0x25, 0xbd, 0x6c, 0x51,
-  0x4a, 0x5a, 0x75, 0xf9, 0xf6, 0x82, 0x93, 0x69, 0x06, 0xb5, 0xf3, 0xeb,
-  0x06, 0xb5, 0xf3, 0x49, 0x07, 0xb5, 0xfb, 0xeb, 0x06, 0xb5, 0xfb, 0xa9,
-  0x06, 0x55, 0x0d, 0x34, 0xa5, 0x2a, 0x5e, 0xcf, 0xe2, 0x5c, 0x6b, 0xf4,
-  0x91, 0x54, 0x4a, 0x78, 0xc0, 0xc4, 0x3f, 0x2f, 0xe4, 0x96, 0x1c, 0x1c,
-  0xc9, 0xbb, 0x2e, 0xbe, 0x8c, 0xe5, 0xba, 0x30, 0xac, 0xdc, 0x56, 0x8b,
-  0xb5, 0x11, 0xb9, 0x1a, 0x15, 0xc5, 0x9c, 0xae, 0xe6, 0xb0, 0x82, 0x65,
-  0xa1, 0xdd, 0xb8, 0xb0, 0x3a, 0x08, 0xde, 0x61, 0x89, 0x87, 0x2c, 0x17,
-  0x80, 0xff, 0xc7, 0xd2, 0x17, 0x9e, 0xb5, 0x27, 0x4c, 0xb0, 0x57, 0x51,
-  0xbd, 0xf9, 0x48, 0xc0, 0x76, 0xd3, 0xe4, 0x72, 0x09, 0xd1, 0x80, 0x9e,
-  0x9c, 0x2e, 0x39, 0xaf, 0x10, 0x00, 0xbc, 0x79, 0x21, 0xe1, 0xef, 0x6c,
-  0xfd, 0x35, 0xd2, 0xd4, 0x55, 0x89, 0x3f, 0x69, 0x9c, 0xfd, 0xc0, 0xf8,
-  0xa6, 0xb0, 0xbc, 0xd3, 0x8c, 0xc1, 0xdf, 0x29, 0x25, 0x27, 0x2f, 0xb8,
-  0x98, 0x6d, 0x4e, 0x35, 0xe4, 0x15, 0x1b, 0x06, 0x0a, 0x92, 0xe8, 0x19,
-  0xac, 0x27, 0xbd, 0x0b, 0x42, 0x3e, 0x48, 0xad, 0xa1, 0x80, 0x19, 0x8a,
-  0x74, 0x14, 0xad, 0x92, 0xf2, 0x63, 0xfd, 0xa2, 0xea, 0x5a, 0x39, 0x53,
-  0x6c, 0x35, 0xa2, 0xc8, 0xf5, 0xfe, 0xd0, 0x5b, 0x51, 0x19, 0xf9, 0x23,
-  0xda, 0x31, 0x92, 0xd0, 0xf0, 0xe3, 0xfc, 0x6c, 0xbe, 0x27, 0x02, 0xe1,
-  0x5a, 0x83, 0x5b, 0xb2, 0x56, 0x98, 0xef, 0xc7, 0x04, 0x4a, 0x4c, 0x19,
-  0x30, 0xbc, 0xf8, 0x81, 0x7d, 0xb0, 0x9e, 0xe4, 0xf9, 0xa7, 0x74, 0x88,
-  0x72, 0xaf, 0xe8, 0xe6, 0xff, 0x8e, 0x8d, 0x8f, 0x6e, 0x98, 0xf9, 0x7f,
-  0xb3, 0x74, 0xf7, 0x94, 0x8a, 0x9c, 0xcf, 0x52, 0x2e, 0x45, 0xce, 0x4b,
-  0xc3, 0x45, 0x1b, 0x66, 0x59, 0x4a, 0x22, 0x9b, 0xba, 0x2b, 0xae, 0xb3,
-  0x0f, 0x6c, 0xe8, 0x09, 0x85, 0x06, 0x91, 0x50, 0xae, 0x81, 0x97, 0x4a,
-  0xcf, 0x1e, 0x8c, 0x0e, 0x8f, 0x8f, 0x5b, 0x26, 0x63, 0x5a, 0x3c, 0x44,
-  0xcb, 0x72, 0xf8, 0x63, 0x4d, 0x79, 0x6e, 0x14, 0x73, 0x8b, 0xe1, 0xc6,
-  0x90, 0x0d, 0x19, 0xda, 0x79, 0x4c, 0x95, 0x48, 0xea, 0x5c, 0xb3, 0xf4,
-  0x53, 0x8e, 0x0d, 0x5c, 0x16, 0x64, 0x09, 0xa2, 0x04, 0xa2, 0xeb, 0xa5,
-  0xd1, 0x72, 0xea, 0xdf, 0x9a, 0x20, 0x87, 0x9f, 0x9a, 0xf4, 0x22, 0xe9,
-  0xcf, 0x67, 0x95, 0x64, 0x68, 0x73, 0x72, 0x90, 0xe4, 0x2f, 0x13, 0x8a,
-  0x16, 0x69, 0xfb, 0x4c, 0x81, 0x66, 0x84, 0x3a, 0x58, 0x98, 0x02, 0xf4,
-  0xea, 0x8e, 0x80, 0x36, 0x8b, 0xc9, 0xb1, 0xee, 0x70, 0xfb, 0x9d, 0x0e,
-  0xb7, 0x5f, 0x16, 0xf9, 0x07, 0xd8, 0xbb, 0x33, 0xaa, 0x61, 0x90, 0x36,
-  0xd7, 0x2b, 0x6a, 0x57, 0x1f, 0x6a, 0x9d, 0x4d, 0x0b, 0x80, 0x6a, 0x16,
-  0x01, 0xc5, 0x2b, 0xb9, 0x32, 0x64, 0xc2, 0x6d, 0xf4, 0x7d, 0xab, 0x0f,
-  0x18, 0x7f, 0xc4, 0xd6, 0x5c, 0x64, 0x0d, 0x79, 0xab, 0x3a, 0xca, 0x60,
-  0x2b, 0x36, 0x70, 0xb0, 0xec, 0x6b, 0x9d, 0x70, 0xc8, 0x48, 0xfb, 0x2b,
-  0x65, 0x40, 0x2f, 0x83, 0xda, 0xab, 0x10, 0x4e, 0x79, 0x9d, 0x2a, 0xc9,
-  0xc8, 0xed, 0xc9, 0xd0, 0xe7, 0x30, 0xe0, 0x38, 0xe9, 0x29, 0x16, 0x00,
-  0x36, 0x4c, 0x4e, 0x2d, 0xc5, 0x0c, 0x8a, 0x3e, 0x82, 0x8a, 0x9b, 0x6a,
-  0x22, 0x31, 0xaa, 0xf8, 0x7d, 0xa0, 0x29, 0xf9, 0x31, 0x26, 0xc5, 0x31,
-  0xdf, 0xc8, 0xef, 0xbf, 0x77, 0x60, 0xb0, 0x1e, 0xee, 0x13, 0x97, 0xac,
-  0x77, 0x1a, 0xa7, 0xd1, 0x61, 0x28, 0xad, 0x1d, 0x0e, 0xb4, 0x40, 0x61,
-  0xe7, 0x49, 0x44, 0x93, 0x12, 0xe3, 0xf3, 0x15, 0xb0, 0xc9, 0xc5, 0x2c,
-  0x6f, 0xa8, 0x8e, 0xb3, 0xcb, 0xec, 0x94, 0x2c, 0xaf, 0x49, 0x39, 0x33,
-  0xfc, 0x26, 0xf0, 0x32, 0x21, 0xb1, 0x4d, 0x72, 0xa6, 0xc9, 0xe4, 0x3f,
-  0x5f, 0x94, 0x75, 0x9d, 0x4b, 0xcd, 0x11, 0xb6, 0xbe, 0xe2, 0x4d, 0xb5,
-  0xb4, 0x78, 0x45, 0xe1, 0x43, 0x6c, 0xed, 0x96, 0x41, 0x01, 0xf9, 0x93,
-  0xba, 0x19, 0x93, 0xd4, 0xac, 0x28, 0x02, 0x63, 0xe3, 0x59, 0x6b, 0x2c,
-  0x2c, 0x7c, 0x6b, 0x88, 0xdc, 0xa8, 0x89, 0x75, 0xf2, 0xdd, 0x53, 0x05,
-  0xe5, 0xf8, 0x3e, 0x2f, 0xa6, 0xc4, 0x5e, 0xb8, 0x72, 0x83, 0x35, 0xc5,
-  0xdd, 0x3b, 0x30, 0x89, 0x28, 0xcf, 0x55, 0xff, 0xbe, 0xbe, 0x2e, 0xd4,
-  0xca, 0xb6, 0xda, 0xce, 0x4c, 0x50, 0x80, 0xc4, 0x0c, 0x92, 0x60, 0xc3,
-  0xca, 0x2a, 0x42, 0xb8, 0x0e, 0x2f, 0xc4, 0x81, 0x63, 0x52, 0x89, 0x96,
-  0x31, 0xd7, 0xb6, 0x4a, 0x13, 0x37, 0xf0, 0xe4, 0x22, 0xa7, 0xf3, 0x30,
-  0xb4, 0x14, 0xd1, 0x3d, 0x9e, 0xc8, 0x42, 0x68, 0x58, 0x39, 0x75, 0x51,
-  0xf9, 0x1d, 0xb9, 0x9e, 0xaa, 0x2d, 0xd6, 0xd7, 0x94, 0x06, 0x42, 0x26,
-  0x4e, 0xd8, 0x7a, 0xd7, 0x56, 0xa0, 0x26, 0xe0, 0xee, 0x21, 0x80, 0xec,
-  0x7e, 0xd2, 0xd9, 0x9f, 0x00, 0xdf, 0x46, 0x48, 0x33, 0x8d, 0xa5, 0x4c,
-  0x79, 0x8b, 0xe1, 0xbb, 0xaa, 0x79, 0xd9, 0xfa, 0x12, 0x02, 0x5c, 0x89,
-  0x97, 0x48, 0xad, 0xb2, 0xb2, 0xa8, 0x91, 0x8b, 0x81, 0x72, 0x7d, 0x6a,
-  0xb8, 0x06, 0x60, 0x31, 0xe7, 0xb2, 0xbe, 0x97, 0xae, 0xae, 0x50, 0x48,
-  0xd7, 0x65, 0xe7, 0xc8, 0xf8, 0x1b, 0x46, 0x64, 0xc8, 0x29, 0x94, 0xc9,
-  0xab, 0xf2, 0xae, 0x18, 0x9c, 0x50, 0x20, 0x78, 0x72, 0x52, 0x5e, 0x99,
-  0xa5, 0x7a, 0x1b, 0x35, 0xde, 0xbf, 0x3b, 0x7b, 0x9b, 0x6c, 0xbc, 0xa3,
-  0x39, 0x9d, 0x59, 0xff, 0x28, 0x3d, 0xb9, 0x99, 0xf0, 0xd5, 0x6b, 0xd8,
-  0xa3, 0x57, 0xe5, 0xa8, 0x9f, 0x1c, 0xfd, 0x70, 0xf0, 0xe6, 0xec, 0xe4,
-  0xe8, 0xa7, 0x15, 0xca, 0x31, 0x7d, 0xfc, 0xa5, 0x67, 0xcb, 0xd3, 0x6a,
-  0x6e, 0xe6, 0xd2, 0x9e, 0xdd, 0xaf, 0xe6, 0x05, 0x7c, 0x7c, 0x94, 0x04,
-  0x47, 0xa3, 0xb3, 0xe3, 0x81, 0x00, 0x95, 0x30, 0x17, 0x10, 0x74, 0x47,
-  0x9c, 0x62, 0xc9, 0x7d, 0xfd, 0x36, 0x0c, 0x7d, 0xd7, 0x13, 0xd1, 0x77,
-  0x00, 0xef, 0x7d, 0x86, 0x44, 0x37, 0x33, 0x88, 0x63, 0xea, 0x37, 0x8a,
-  0x7e, 0x42, 0x44, 0x10, 0xf8, 0x25, 0x5b, 0xd5, 0x3d, 0xeb, 0x6c, 0x96,
-  0x09, 0xb4, 0xf2, 0x0a, 0x3e, 0x0a, 0xbc, 0x20, 0x6c, 0x23, 0xf9, 0xa4,
-  0x82, 0x0a, 0x6b, 0xe2, 0xa3, 0x1a, 0x5b, 0x40, 0x54, 0x89, 0xdf, 0x60,
-  0x1a, 0x61, 0xde, 0xd1, 0xad, 0xd2, 0xb9, 0x6f, 0x44, 0x99, 0x65, 0xb2,
-  0xdf, 0xfb, 0x84, 0xb2, 0xde, 0x3b, 0x1b, 0x52, 0xf2, 0xdb, 0x5f, 0x27,
-  0x12, 0x21, 0xf4, 0xc8, 0x75, 0xf2, 0x20, 0x59, 0x10, 0xd3, 0x50, 0xc2,
-  0x78, 0x98, 0x32, 0xa6, 0xa5, 0xd0, 0x7e, 0xd7, 0x75, 0x68, 0x33, 0x5e,
-  0xcc, 0x88, 0x62, 0x20, 0xfc, 0x62, 0x9c, 0x51, 0x32, 0xe8, 0xee, 0x7c,
-  0xa0, 0xdf, 0xff, 0x32, 0x3a, 0xe8, 0xec, 0x7b, 0x18, 0x31, 0xfa, 0xb1,
-  0x74, 0xf0, 0xee, 0xd3, 0xd2, 0x01, 0x4a, 0xfa, 0xbc, 0x78, 0x77, 0x7e,
-  0xb2, 0x6a, 0xcb, 0x53, 0xf8, 0x1b, 0x08, 0x7b, 0x25, 0x6b, 0x26, 0xd7,
-  0x41, 0xa5, 0x40, 0x78, 0xe8, 0xe8, 0x42, 0x27, 0x9e, 0x6c, 0x13, 0x58,
-  0x43, 0xc6, 0xae, 0x48, 0x04, 0xca, 0xc4, 0x4c, 0xa3, 0x04, 0x0f, 0x01,
-  0x4c, 0x31, 0x0f, 0xb0, 0x3a, 0x4a, 0x15, 0x4e, 0x01, 0xa0, 0xa1, 0x50,
-  0x79, 0xc2, 0x58, 0x55, 0xa8, 0x64, 0x83, 0x0b, 0x1d, 0xd6, 0x49, 0x4f,
-  0xfc, 0x16, 0xbd, 0x90, 0xf1, 0xf5, 0x2e, 0xe5, 0x1b, 0x33, 0x99, 0x4d,
-  0xa6, 0x00, 0x27, 0x70, 0x3c, 0x5c, 0x0a, 0x69, 0x85, 0xc7, 0x17, 0x3a,
-  0x4e, 0x56, 0xc1, 0x51, 0x49, 0xa5, 0xe6, 0x06, 0xca, 0xf5, 0xd9, 0x4c,
-  0x85, 0x48, 0x14, 0x23, 0x3c, 0xbc, 0x3a, 0x3e, 0xbc, 0xe8, 0x33, 0x26,
-  0x2d, 0x27, 0xa3, 0x50, 0xc8, 0x51, 0x57, 0xdc, 0xa0, 0x64, 0x15, 0x00,
-  0x68, 0xbf, 0x21, 0xc8, 0x6a, 0xbe, 0x04, 0xfd, 0xb2, 0x63, 0x77, 0x9a,
-  0x38, 0xa3, 0x70, 0x40, 0x0e, 0x22, 0x03, 0x5e, 0xcd, 0xa0, 0x8a, 0x84,
-  0xb7, 0xe5, 0x36, 0x4c, 0x8d, 0xca, 0x33, 0xf1, 0x1c, 0x69, 0x09, 0xe5,
-  0x16, 0xb4, 0x95, 0x70, 0x88, 0x5e, 0x25, 0x49, 0x37, 0x5d, 0x91, 0x36,
-  0xec, 0x6a, 0x07, 0x72, 0x92, 0x69, 0xbb, 0xc6, 0x56, 0xb4, 0x3c, 0x54,
-  0x44, 0xfd, 0x10, 0x84, 0x5c, 0xd0, 0x6d, 0x1b, 0x22, 0x5a, 0xc0, 0x8b,
-  0x71, 0xe7, 0x69, 0x22, 0x14, 0xbb, 0xe6, 0x62, 0xe2, 0x14, 0xbb, 0xc3,
-  0x08, 0x15, 0x89, 0x43, 0x30, 0xfa, 0x36, 0x59, 0x78, 0x50, 0x12, 0x8f,
-  0x13, 0xc5, 0x4f, 0xf2, 0xbb, 0x5a, 0x68, 0x31, 0x31, 0x17, 0xb4, 0x1a,
-  0xc8, 0xed, 0x01, 0xf1, 0x55, 0xa1, 0xce, 0x0b, 0x5f, 0x11, 0x48, 0x2b,
-  0x25, 0x12, 0xc9, 0xd7, 0x5b, 0x4d, 0x3a, 0xbb, 0x11, 0x3c, 0x91, 0xe9,
-  0xb2, 0xe2, 0xfa, 0xcc, 0xa0, 0x10, 0x75, 0x54, 0xb3, 0xa5, 0x81, 0xb0,
-  0xc3, 0xa3, 0x70, 0xee, 0xe3, 0xe5, 0xd5, 0x95, 0xd3, 0x9d, 0xcd, 0xea,
-  0x72, 0xb1, 0x1f, 0x43, 0x03, 0xeb, 0x75, 0xc2, 0x7a, 0xb4, 0x59, 0xb9,
-  0xde, 0xb2, 0x98, 0x66, 0x95, 0xd0, 0x65, 0x39, 0xed, 0x0d, 0x93, 0x03,
-  0x68, 0x3d, 0x21, 0xd0, 0x53, 0xe5, 0xcc, 0x5f, 0xeb, 0x5f, 0xac, 0x0b,
-  0xd8, 0x42, 0xef, 0xda, 0xe8, 0x21, 0x94, 0xa8, 0x64, 0x14, 0xf2, 0x1e,
-  0x2b, 0xc4, 0x84, 0x33, 0x49, 0xc7, 0xc0, 0x50, 0xd4, 0xfa, 0x8b, 0xf5,
-  0x38, 0xd6, 0x88, 0xbe, 0x26, 0xef, 0x89, 0x5d, 0x89, 0x29, 0x66, 0x62,
-  0x83, 0x07, 0xcc, 0x3e, 0x5c, 0x73, 0x4d, 0x2d, 0xf8, 0x92, 0x09, 0xb6,
-  0x85, 0xc3, 0xb7, 0xba, 0xa4, 0x9e, 0x22, 0xb1, 0x08, 0xca, 0x5a, 0x67,
-  0xa0, 0x7f, 0xd2, 0x81, 0x6a, 0xa1, 0x4c, 0x60, 0xba, 0x5e, 0xba, 0x92,
-  0x0d, 0x00, 0xc6, 0x8c, 0x38, 0x1b, 0xc3, 0xe8, 0x11, 0x04, 0x6b, 0x08,
-  0x9c, 0x95, 0xde, 0x2e, 0xac, 0x93, 0x83, 0x1d, 0x31, 0x6e, 0x04, 0xcf,
-  0xcb, 0x96, 0x80, 0x64, 0x7a, 0x31, 0x9b, 0x9e, 0x47, 0x10, 0x4a, 0x44,
-  0x76, 0xb6, 0x3a, 0xb8, 0xab, 0x91, 0x07, 0x80, 0xb4, 0x8a, 0xf2, 0x92,
-  0x4b, 0xe0, 0x8f, 0x5e, 0x46, 0xea, 0xfd, 0x1d, 0x33, 0x28, 0x8b, 0xc6,
-  0x4b, 0x78, 0x45, 0xb9, 0x1b, 0x46, 0x86, 0xe0, 0xcc, 0x31, 0x62, 0x75,
-  0x78, 0x30, 0x2b, 0xa0, 0x53, 0xea, 0x71, 0xea, 0x87, 0xd5, 0x04, 0x18,
-  0xe1, 0x46, 0xd1, 0x1b, 0xac, 0x32, 0xdc, 0xb6, 0xe4, 0x68, 0x84, 0xd3,
-  0xaf, 0x35, 0x06, 0xb4, 0x1a, 0xf3, 0x8d, 0x01, 0x91, 0x60, 0x08, 0x3f,
-  0xf3, 0xb8, 0x0d, 0xdb, 0x82, 0x64, 0x63, 0xef, 0xe2, 0xb9, 0xa3, 0x07,
-  0x11, 0xa3, 0x45, 0x47, 0x34, 0x79, 0xc1, 0x82, 0xe7, 0x6a, 0x20, 0x05,
-  0x8d, 0x15, 0xf2, 0xac, 0x43, 0x09, 0x96, 0x0e, 0xb9, 0xc0, 0x8a, 0xce,
-  0x4f, 0x36, 0xd1, 0x59, 0x46, 0x9e, 0x6f, 0xf8, 0x27, 0x03, 0xa3, 0x3f,
-  0x99, 0x79, 0x49, 0xf1, 0xe2, 0x36, 0x44, 0x5c, 0x6f, 0x2a, 0xeb, 0xab,
-  0x27, 0xae, 0x24, 0xf8, 0x62, 0x89, 0x44, 0x7b, 0x19, 0xb9, 0xe0, 0x03,
-  0x65, 0x49, 0xe7, 0x1f, 0x02, 0x1f, 0x93, 0x00, 0x30, 0x18, 0xee, 0xe5,
-  0xb1, 0x2f, 0x8d, 0x46, 0xaa, 0x5b, 0x3d, 0x05, 0xda, 0x86, 0xb9, 0xa7,
-  0xd2, 0xa0, 0x10, 0x46, 0x83, 0xeb, 0xbb, 0xc7, 0x23, 0xea, 0x01, 0x41,
-  0x5e, 0xa3, 0x07, 0x60, 0xc9, 0x12, 0x78, 0xa5, 0x74, 0x2a, 0xaa, 0x2b,
-  0xb7, 0xcd, 0xa2, 0x47, 0x98, 0x31, 0x89, 0x28, 0x0c, 0x1e, 0x63, 0xef,
-  0x4b, 0xb5, 0x8a, 0xf5, 0x34, 0xd8, 0x01, 0xe2, 0x8e, 0x2b, 0xbf, 0x2c,
-  0x6d, 0x4a, 0x93, 0x11, 0x2f, 0x2e, 0x87, 0x73, 0x00, 0x55, 0x88, 0x76,
-  0xcd, 0x34, 0x39, 0xe8, 0x45, 0xf5, 0x6f, 0xbb, 0x00, 0x89, 0x54, 0xc5,
-  0x6b, 0x1f, 0x2d, 0xed, 0xc2, 0x5d, 0x66, 0x54, 0xa0, 0xb5, 0xc9, 0x9b,
-  0x65, 0xe8, 0xc4, 0xb3, 0xc0, 0xdf, 0xf0, 0x7a, 0x83, 0x89, 0xd3, 0x66,
-  0x38, 0xd7, 0x34, 0xce, 0x12, 0x99, 0xfc, 0x1a, 0x04, 0x71, 0xb3, 0x19,
-  0x71, 0xac, 0x68, 0xfa, 0x5d, 0x7b, 0xd5, 0x81, 0xe9, 0xd1, 0x8d, 0xae,
-  0xed, 0xc4, 0x33, 0x6f, 0xff, 0xe1, 0xbf, 0xf4, 0x4b, 0xc0, 0x17, 0xff,
-  0x53, 0x57, 0x4a, 0xe3, 0x5a, 0xd2, 0xc0, 0xf5, 0x0a, 0xfe, 0x96, 0xfc,
-  0x01, 0xab, 0x82, 0xf2, 0x0b, 0xbc, 0x34, 0x00, 0x57, 0xa3, 0x06, 0xff,
-  0x30, 0xb4, 0xd1, 0x2c, 0xd2, 0x48, 0x9a, 0x14, 0xd9, 0x1d, 0xd8, 0x5e,
-  0xc0, 0xc3, 0xf8, 0x18, 0xff, 0x64, 0x6e, 0x30, 0x43, 0xc7, 0xa9, 0x39,
-  0x8e, 0x14, 0x95, 0xc0, 0x90, 0x40, 0xbc, 0x8b, 0x3f, 0x55, 0xc2, 0x36,
-  0x9b, 0x74, 0xcc, 0xf0, 0xf1, 0xf2, 0x79, 0x68, 0xc8, 0xa4, 0x50, 0xb1,
-  0x7d, 0xec, 0xc6, 0x1f, 0x06, 0x8c, 0x4d, 0x2d, 0xb4, 0x2e, 0x50, 0xf3,
-  0xfa, 0x19, 0x6f, 0xcc, 0x5d, 0x5e, 0x3c, 0xd9, 0x1d, 0x78, 0x62, 0x6b,
-  0x3f, 0x1a, 0x6d, 0xcb, 0x16, 0xde, 0x72, 0x32, 0x81, 0x27, 0x96, 0xdc,
-  0x30, 0x70, 0x56, 0xfc, 0x21, 0x11, 0x80, 0x33, 0xa0, 0x50, 0x2c, 0x21,
-  0x46, 0x78, 0x05, 0xa3, 0x57, 0x7a, 0x3f, 0x1f, 0x21, 0x1e, 0x07, 0x3e,
-  0x18, 0x0b, 0x47, 0xa4, 0x43, 0x6a, 0x06, 0xfa, 0x1e, 0xee, 0x56, 0x7e,
-  0xf5, 0x90, 0x3f, 0x1a, 0x5c, 0xd0, 0x47, 0x1a, 0x79, 0x2a, 0x6e, 0x78,
-  0xba, 0x34, 0x34, 0x26, 0x9d, 0x90, 0x24, 0x2e, 0x1f, 0x2e, 0x74, 0xcb,
-  0xca, 0x3c, 0x85, 0xb7, 0x9b, 0xc3, 0x1d, 0x8c, 0x53, 0x8f, 0xd2, 0x7b,
-  0x2e, 0xc3, 0x9a, 0xdf, 0x66, 0x0f, 0xb7, 0x06, 0xe4, 0x0f, 0x8a, 0xf3,
-  0x99, 0x23, 0x01, 0xdf, 0xda, 0xa7, 0xfd, 0x10, 0x0b, 0x0e, 0x56, 0x65,
-  0x48, 0xa2, 0xe1, 0x63, 0xcd, 0x79, 0x15, 0x39, 0xbc, 0x4a, 0xdd, 0xe6,
-  0x8a, 0x53, 0x70, 0xa3, 0xa6, 0x9c, 0x81, 0x72, 0xb9, 0xdd, 0x47, 0xe6,
-  0x5a, 0x42, 0xdb, 0xf2, 0xb9, 0x05, 0x56, 0xae, 0x0d, 0xaa, 0x07, 0xbe,
-  0x1f, 0xb5, 0x4a, 0x27, 0xd1, 0xbd, 0x4d, 0x8e, 0x81, 0xab, 0x51, 0x72,
-  0x8c, 0x22, 0x86, 0x07, 0x44, 0xf9, 0xb1, 0xe2, 0x5c, 0xdb, 0x9e, 0x1e,
-  0x6e, 0xce, 0x8e, 0x82, 0xaf, 0xe9, 0x81, 0x27, 0xa4, 0x0d, 0x1f, 0x28,
-  0x35, 0xae, 0x3b, 0xd5, 0x2c, 0xde, 0x03, 0x38, 0xfa, 0x3d, 0x60, 0x24,
-  0x2f, 0x3c, 0x93, 0x12, 0x3e, 0xc0, 0x7a, 0x31, 0xe0, 0xe7, 0x72, 0xc1,
-  0x75, 0x76, 0x09, 0xf1, 0xa4, 0x64, 0x31, 0x2c, 0x08, 0x81, 0x0e, 0x57,
-  0xae, 0x53, 0xfc, 0x46, 0x3d, 0x89, 0x9d, 0x1c, 0xd0, 0xbd, 0x60, 0x60,
-  0xa4, 0xa1, 0xbc, 0x07, 0x82, 0x95, 0xa5, 0x10, 0x73, 0x83, 0x64, 0x15,
-  0xd5, 0x20, 0xe9, 0x40, 0x5c, 0x31, 0x5e, 0x2b, 0x32, 0xc0, 0x97, 0x85,
-  0x46, 0x74, 0x3d, 0x3c, 0x30, 0x28, 0x7d, 0x02, 0x3c, 0x72, 0xab, 0x85,
-  0xc8, 0x28, 0xe4, 0x11, 0xb1, 0x21, 0x66, 0xa0, 0xa4, 0x7a, 0xd9, 0xa2,
-  0xe9, 0xc9, 0xf1, 0x23, 0xf3, 0x44, 0x16, 0xd9, 0x2e, 0xc3, 0xb2, 0xcf,
-  0xf2, 0xd4, 0x01, 0xe2, 0xf2, 0x0c, 0x70, 0x4c, 0x30, 0x5f, 0x60, 0x68,
-  0x5e, 0x97, 0x77, 0x8f, 0x1e, 0x2e, 0x8e, 0x64, 0xa3, 0xab, 0x7c, 0xb8,
-  0x62, 0x65, 0xd8, 0xac, 0x2e, 0x67, 0xc7, 0x2d, 0x0d, 0x2f, 0x89, 0xc8,
-  0x74, 0xdd, 0x45, 0x89, 0x45, 0xbd, 0x26, 0x2b, 0xd0, 0xc3, 0x92, 0x0d,
-  0xb9, 0x34, 0x25, 0x43, 0x62, 0xd3, 0x1e, 0x04, 0x36, 0x00, 0x68, 0x69,
-  0xb3, 0xc7, 0x9a, 0x03, 0x77, 0x09, 0xb0, 0x5d, 0x56, 0x6c, 0xb8, 0x7a,
-  0xa9, 0x65, 0x5a, 0x28, 0x9e, 0x6d, 0x5d, 0xd7, 0xde, 0xa4, 0x12, 0xcb,
-  0x58, 0x48, 0x56, 0x8d, 0xa5, 0xe1, 0x24, 0xab, 0xfd, 0xb8, 0x4f, 0x63,
-  0x68, 0x02, 0x88, 0x25, 0x7e, 0x9f, 0x2f, 0x3c, 0x8e, 0x74, 0x7c, 0x66,
-  0x51, 0xfb, 0xac, 0xcb, 0x59, 0x50, 0xc1, 0x51, 0xef, 0xc9, 0x7e, 0x48,
-  0x87, 0xf8, 0xb1, 0x65, 0x98, 0x20, 0x32, 0x27, 0x61, 0x14, 0x22, 0x0f,
-  0x1b, 0x61, 0xa0, 0x82, 0x8f, 0xd8, 0x27, 0x8f, 0xcf, 0x80, 0xf1, 0xf7,
-  0x70, 0x73, 0xe6, 0xa1, 0x67, 0xed, 0xb3, 0xfd, 0x7c, 0xe5, 0x94, 0x90,
-  0x0c, 0xa6, 0x53, 0xe2, 0xe1, 0xfb, 0xe9, 0x65, 0x72, 0x0d, 0xb0, 0x76,
-  0xde, 0x1e, 0xe6, 0xc3, 0x63, 0xf0, 0xe6, 0xf0, 0xe8, 0x48, 0x4c, 0x5f,
-  0x4a, 0xb1, 0x35, 0xdd, 0xbd, 0xdc, 0x35, 0xf5, 0x6d, 0xee, 0xfa, 0xc4,
-  0x7e, 0x03, 0xb0, 0x23, 0x85, 0x99, 0xc6, 0x50, 0xe2, 0x42, 0x6a, 0x12,
-  0x91, 0x59, 0x1f, 0xc5, 0x0e, 0xa2, 0x31, 0x28, 0x0a, 0x4e, 0x6d, 0xc7,
-  0x60, 0x86, 0xe0, 0x3e, 0x14, 0xfa, 0xc2, 0x4d, 0x7e, 0x59, 0x0a, 0xa8,
-  0x1a, 0x10, 0x3c, 0x1e, 0x65, 0x28, 0xab, 0xe8, 0x3c, 0x1c, 0x87, 0x76,
-  0xf7, 0x9e, 0x4f, 0x11, 0x9b, 0xe1, 0x15, 0xa2, 0xcf, 0xc2, 0x3f, 0xa5,
-  0xb2, 0x1a, 0x6a, 0x4b, 0x1f, 0xb0, 0x85, 0xa9, 0x9c, 0x3d, 0xb2, 0x16,
-  0x14, 0x77, 0x6c, 0x27, 0x24, 0xb9, 0x76, 0x2a, 0x31, 0x08, 0xde, 0x10,
-  0x41, 0xc7, 0x80, 0x53, 0x4d, 0x28, 0x71, 0xef, 0xe1, 0xe6, 0x60, 0x3a,
-  0x48, 0xfd, 0xda, 0xc7, 0x92, 0x8b, 0x04, 0x88, 0x29, 0xad, 0x70, 0xe9,
-  0xcd, 0xfa, 0x63, 0xf8, 0x64, 0x64, 0x49, 0xe8, 0x7e, 0xb0, 0x87, 0xef,
-  0xc2, 0x5d, 0x19, 0xed, 0x23, 0xf8, 0x2f, 0x13, 0xea, 0x8a, 0xc3, 0xd6,
-  0x39, 0x4f, 0x8f, 0xcd, 0x21, 0x4a, 0xe2, 0x32, 0x07, 0x3d, 0x6d, 0xde,
-  0x1c, 0x56, 0x9d, 0xb6, 0x4f, 0x75, 0xd8, 0x28, 0x0e, 0xf1, 0xbd, 0x02,
-  0x88, 0xf3, 0x48, 0x18, 0x2b, 0xd0, 0xc1, 0xeb, 0x71, 0x44, 0x29, 0xdf,
-  0x9b, 0x44, 0xed, 0xfa, 0x74, 0x24, 0x6a, 0x11, 0xad, 0xa9, 0x65, 0xe3,
-  0xa1, 0xd6, 0xd4, 0x5d, 0x6f, 0x9b, 0x82, 0xdd, 0xe0, 0x11, 0x72, 0xa5,
-  0xca, 0x4d, 0xd1, 0x1e, 0xf5, 0x20, 0x7c, 0xdc, 0xf8, 0xa1, 0x43, 0x7d,
-  0xdc, 0x41, 0xf5, 0x8f, 0x59, 0xbc, 0x6b, 0x89, 0x78, 0xff, 0xc8, 0xae,
-  0x57, 0x06, 0xe9, 0x1b, 0x45, 0x22, 0x9b, 0xba, 0x7d, 0xa0, 0xb6, 0x52,
-  0x32, 0x3e, 0x5f, 0xb9, 0x35, 0xe2, 0x67, 0x3c, 0x21, 0xd7, 0xc8, 0xaa,
-  0xf5, 0xb2, 0x62, 0x24, 0xc7, 0xc7, 0x45, 0x04, 0x55, 0xe5, 0x6d, 0x7b,
-  0x14, 0x39, 0x4c, 0xa3, 0x5b, 0x64, 0x95, 0x60, 0x6f, 0xae, 0x18, 0x95,
-  0x9d, 0xa2, 0x3f, 0x2a, 0xf9, 0xb0, 0x3b, 0x26, 0x37, 0xa8, 0x5f, 0x38,
-  0x2a, 0x6e, 0xef, 0x63, 0xc6, 0x54, 0xcf, 0xe8, 0xe2, 0xcf, 0x2f, 0xef,
-  0xcd, 0xb6, 0xd7, 0x46, 0x0d, 0xf8, 0x08, 0x65, 0x81, 0x1f, 0x54, 0xa2,
-  0x23, 0x3c, 0x15, 0x33, 0xec, 0xaa, 0x85, 0xd4, 0x82, 0x26, 0xf3, 0x95,
-  0x75, 0x81, 0x5a, 0xd0, 0x2d, 0x56, 0x84, 0xb4, 0xda, 0xd0, 0x90, 0xf0,
-  0x5c, 0x61, 0x65, 0xa3, 0x0e, 0xb4, 0xad, 0x48, 0xd6, 0x5f, 0xd2, 0x35,
-  0xe3, 0xd7, 0x9e, 0x93, 0x77, 0xf8, 0x00, 0x42, 0xb5, 0xed, 0xdf, 0xe8,
-  0x49, 0xe9, 0x62, 0x21, 0x47, 0xfc, 0x23, 0xe6, 0xce, 0x18, 0x7c, 0x20,
-  0x77, 0x41, 0x52, 0x14, 0x5c, 0xdb, 0xa6, 0x2c, 0x6f, 0x5c, 0x19, 0x53,
-  0x58, 0x0d, 0x1f, 0x6e, 0x8e, 0x41, 0x54, 0x65, 0x05, 0xb7, 0x46, 0xa3,
-  0x6f, 0x08, 0xfd, 0xd9, 0x72, 0x9b, 0x2d, 0xe7, 0x45, 0xd6, 0xb2, 0x4b,
-  0x8f, 0x5d, 0x82, 0xb6, 0x4a, 0x34, 0xd6, 0xc1, 0xda, 0x9a, 0x3e, 0x76,
-  0x19, 0x3a, 0x52, 0xed, 0xa7, 0x98, 0x28, 0x25, 0x18, 0xd8, 0x6e, 0x6c,
-  0x31, 0x29, 0xcd, 0x5b, 0x63, 0xd4, 0x89, 0x8d, 0xc7, 0xe8, 0x5c, 0x04,
-  0xe2, 0xf6, 0x1c, 0xa3, 0x33, 0x22, 0x6d, 0x8c, 0x2c, 0x9e, 0xab, 0x8a,
-  0xb2, 0x7d, 0xf2, 0x8d, 0x85, 0x3a, 0xc8, 0x18, 0x04, 0xb0, 0x20, 0x3f,
-  0x3e, 0x64, 0xaa, 0x03, 0x18, 0x2f, 0x8c, 0x19, 0x19, 0x33, 0x0f, 0x99,
-  0x73, 0x70, 0xbb, 0x03, 0x16, 0xab, 0x1b, 0x27, 0xe6, 0x7c, 0xec, 0x98,
-  0x5d, 0x22, 0x97, 0xc5, 0xf7, 0xa4, 0x31, 0xc3, 0x76, 0x64, 0x11, 0x89,
-  0xc7, 0x99, 0x51, 0x3f, 0x3f, 0xca, 0x08, 0xc0, 0xf6, 0x68, 0x2e, 0x17,
-  0x40, 0xf8, 0x29, 0xb6, 0x51, 0x57, 0x61, 0xd5, 0x88, 0xf2, 0x14, 0x0b,
-  0xfb, 0x28, 0x9b, 0x48, 0x25, 0x49, 0x14, 0x65, 0x9e, 0x2b, 0x0f, 0xa2,
-  0x5c, 0xb4, 0x5c, 0x14, 0x20, 0x9a, 0x2c, 0x29, 0x20, 0x2e, 0x92, 0xcd,
-  0x1b, 0x68, 0xc6, 0x93, 0x72, 0xc6, 0xfe, 0xbd, 0x5b, 0x00, 0xb6, 0xc7,
-  0xf7, 0xc2, 0xc9, 0x5d, 0xf1, 0xc5, 0xce, 0x1b, 0xa1, 0x0d, 0xc1, 0x55,
-  0xd6, 0xe7, 0x1f, 0x65, 0x53, 0x86, 0xc5, 0x2d, 0x6a, 0x2f, 0xd6, 0x05,
-  0x64, 0xc2, 0x84, 0xda, 0xd7, 0xf3, 0x81, 0xf2, 0x97, 0x1f, 0x47, 0x0a,
-  0xb0, 0x03, 0xea, 0xd2, 0x2a, 0x6e, 0xaf, 0x04, 0x0f, 0x91, 0x7b, 0x82,
-  0xbf, 0x94, 0x42, 0x06, 0xb4, 0xa1, 0x8f, 0x8d, 0x2e, 0xe5, 0x32, 0xa4,
-  0x9d, 0x55, 0xe0, 0x40, 0xc1, 0xd6, 0x2d, 0x93, 0x7d, 0xc8, 0xc2, 0x7a,
-  0x4f, 0x51, 0x16, 0x9f, 0x0b, 0xd6, 0x80, 0x2b, 0x02, 0xea, 0xad, 0x96,
-  0x17, 0xee, 0xf6, 0x31, 0x52, 0x6c, 0x4c, 0xb0, 0xc7, 0x50, 0x31, 0xf2,
-  0x8f, 0x3f, 0x3e, 0x9f, 0xe4, 0xc8, 0x73, 0xbc, 0x16, 0xaa, 0x1d, 0xc5,
-  0x8e, 0x4e, 0xf2, 0xb1, 0x4a, 0x15, 0x40, 0x11, 0x05, 0x4b, 0xc2, 0x1e,
-  0xa4, 0x2e, 0x8b, 0x60, 0x83, 0x6b, 0x88, 0x5f, 0x1d, 0x91, 0x0c, 0x04,
-  0xc6, 0xda, 0x15, 0x08, 0x65, 0x68, 0x7e, 0xad, 0x2d, 0x62, 0x34, 0x53,
-  0x3a, 0x3d, 0x4d, 0xf6, 0x51, 0x37, 0x0d, 0x5d, 0xff, 0xf1, 0x33, 0xc3,
-  0x12, 0x9b, 0x5b, 0x61, 0x8b, 0x93, 0xdd, 0x3e, 0x3a, 0x9a, 0xca, 0xcb,
-  0x81, 0xba, 0x70, 0x40, 0x7e, 0x0c, 0x19, 0x91, 0x05, 0x25, 0x93, 0x12,
-  0x8b, 0x98, 0x90, 0x85, 0x17, 0x66, 0xf7, 0x8b, 0xe6, 0x4c, 0xcc, 0xf3,
-  0x47, 0x55, 0xb5, 0x5c, 0xf0, 0xd1, 0xc1, 0x9d, 0x97, 0x51, 0x83, 0x2f,
-  0x92, 0xf3, 0xd4, 0xd4, 0xc1, 0x13, 0x42, 0xb0, 0x81, 0xb5, 0x78, 0x51,
-  0xc8, 0x41, 0xc6, 0x45, 0xb4, 0x5c, 0xd6, 0x1a, 0xd4, 0x0b, 0x12, 0x5e,
-  0x1e, 0x19, 0x81, 0x33, 0x8b, 0x92, 0x6f, 0x0e, 0x69, 0xce, 0xb3, 0xa9,
-  0x8b, 0xec, 0x11, 0x1d, 0x38, 0xb1, 0xd9, 0xe7, 0xfb, 0x0f, 0x37, 0x27,
-  0x7e, 0xc2, 0x4f, 0x18, 0x8b, 0xe1, 0xc1, 0xbc, 0xbc, 0xf8, 0x51, 0xbd,
-  0xec, 0xfb, 0x5b, 0x5b, 0x3f, 0xff, 0xd8, 0x0a, 0xce, 0xf9, 0xf2, 0x67,
-  0x3c, 0xf3, 0x8b, 0xc0, 0xaa, 0x18, 0xd6, 0x2c, 0x66, 0x70, 0xd7, 0x68,
-  0x1d, 0xf1, 0x82, 0x05, 0x7e, 0x2a, 0x89, 0x33, 0xf4, 0x86, 0x63, 0xcb,
-  0x06, 0x97, 0xa1, 0xf4, 0xcd, 0x21, 0x23, 0x5e, 0x61, 0x0d, 0x6e, 0xdd,
-  0x82, 0x41, 0x22, 0x6c, 0xdb, 0xc1, 0xc2, 0xf5, 0x13, 0x0f, 0x0a, 0xac,
-  0x1f, 0x05, 0xc2, 0xa1, 0x0e, 0x29, 0x44, 0xd5, 0xc1, 0x37, 0xc1, 0x5d,
-  0xc5, 0xfa, 0x53, 0xab, 0x96, 0x06, 0x00, 0x8a, 0xac, 0x39, 0x6d, 0x75,
-  0x65, 0x90, 0xb7, 0xa5, 0x8b, 0xa8, 0xf0, 0x70, 0x87, 0x24, 0x68, 0x44,
-  0x4e, 0xfc, 0x8c, 0x63, 0x2b, 0xea, 0xc4, 0xfa, 0xa9, 0x02, 0x4c, 0x76,
-  0x2a, 0x92, 0x09, 0xbf, 0x11, 0x94, 0x2e, 0x9a, 0x28, 0xc3, 0x3c, 0x4b,
-  0x61, 0x0c, 0xe9, 0x40, 0x60, 0x40, 0x9d, 0x91, 0x34, 0x2f, 0x62, 0x71,
-  0xc9, 0x0c, 0x1f, 0x14, 0x87, 0x84, 0x7e, 0x18, 0x31, 0x49, 0x4d, 0x4a,
-  0xbc, 0xd2, 0xbc, 0x8d, 0xc2, 0x65, 0x03, 0xc7, 0x8b, 0x82, 0x2a, 0x31,
-  0xa7, 0xfc, 0x45, 0x18, 0x4a, 0xe6, 0x2a, 0xca, 0x19, 0xdd, 0x3d, 0x06,
-  0xbd, 0x20, 0x82, 0x43, 0x9d, 0x35, 0x91, 0x08, 0x19, 0x1e, 0x99, 0x26,
-  0xf7, 0x1f, 0x4b, 0xac, 0xe4, 0xfa, 0x4a, 0x1c, 0x87, 0xc4, 0x86, 0xa0,
-  0x84, 0x81, 0xbf, 0x8c, 0xd7, 0x64, 0x31, 0x94, 0x18, 0xc8, 0x82, 0x5b,
-  0xef, 0x21, 0x9b, 0x5d, 0x47, 0x1c, 0x4b, 0x77, 0x39, 0x50, 0x56, 0xd8,
-  0x91, 0x75, 0x24, 0xba, 0x90, 0xe2, 0x7d, 0x10, 0x07, 0x5d, 0xb8, 0x2d,
-  0xbd, 0xd7, 0xec, 0xd7, 0xc8, 0x9d, 0x62, 0x44, 0x22, 0x36, 0x71, 0x70,
-  0xf1, 0x29, 0xc2, 0x07, 0xe6, 0xb5, 0xa5, 0xb7, 0x39, 0xa8, 0x1f, 0x2a,
-  0x96, 0x46, 0xa3, 0x9b, 0xef, 0xd9, 0xaf, 0x2c, 0xc4, 0x11, 0x3d, 0x3e,
-  0x86, 0x90, 0xbd, 0x21, 0x72, 0xa4, 0x01, 0xed, 0x37, 0x55, 0x83, 0x53,
-  0x8f, 0x98, 0xe3, 0x85, 0x48, 0x3f, 0x25, 0x81, 0x21, 0x0d, 0x91, 0x4f,
-  0x2f, 0xed, 0x32, 0x35, 0x4b, 0x23, 0xf1, 0xcc, 0xbc, 0x20, 0xf5, 0x2c,
-  0x71, 0xc0, 0x57, 0xcc, 0x90, 0x24, 0x89, 0x6e, 0xb0, 0x50, 0x1e, 0xd4,
-  0x9d, 0xec, 0xbd, 0x34, 0xb2, 0xc2, 0x77, 0xf7, 0x4e, 0x22, 0x43, 0xbd,
-  0x80, 0xc0, 0x56, 0xb6, 0x82, 0x2b, 0xbf, 0x19, 0x52, 0x2b, 0xed, 0xc1,
-  0x5a, 0x68, 0x99, 0x43, 0xc5, 0x2b, 0x17, 0x60, 0x22, 0x93, 0x6e, 0xa3,
-  0x21, 0x51, 0x6f, 0xb8, 0xf7, 0xc4, 0xaf, 0xb9, 0xba, 0xd2, 0x1f, 0xf4,
-  0x56, 0x84, 0x87, 0x7d, 0xe9, 0xb2, 0xea, 0xff, 0xb0, 0xb7, 0x4d, 0xcc,
-  0x45, 0x5b, 0x49, 0xfd, 0x38, 0xbc, 0x3f, 0x3c, 0x49, 0x1f, 0x62, 0x98,
-  0xd0, 0xa5, 0x02, 0x6e, 0xc9, 0x35, 0xe4, 0xd2, 0x89, 0x14, 0x41, 0xbb,
-  0x4b, 0x35, 0x9e, 0x98, 0xdf, 0x0a, 0x50, 0x9b, 0x23, 0x27, 0xa9, 0xef,
-  0xa5, 0xc5, 0x34, 0x3e, 0x2b, 0x51, 0xbe, 0x9b, 0x6c, 0x08, 0xab, 0xda,
-  0x8c, 0xc4, 0xd4, 0x60, 0x00, 0x54, 0x5f, 0x1c, 0x3e, 0x2d, 0xda, 0x94,
-  0x3f, 0xaf, 0x8e, 0x96, 0xff, 0xed, 0xae, 0xae, 0x1f, 0x38, 0xac, 0x8a,
-  0xb9, 0xf2, 0x0b, 0xd1, 0x3e, 0x56, 0xe4, 0x4c, 0x8c, 0x2c, 0x0a, 0x43,
-  0xaa, 0xf5, 0xa8, 0xf4, 0x4d, 0x49, 0xd8, 0xf4, 0xf3, 0xcc, 0xa9, 0xad,
-  0x65, 0x41, 0xc6, 0x89, 0x48, 0x51, 0x00, 0x47, 0xb8, 0x38, 0xb0, 0x36,
-  0x91, 0xef, 0xa2, 0x75, 0xf9, 0x75, 0x5a, 0x5f, 0xc1, 0xd0, 0x19, 0xa1,
-  0xcc, 0xc7, 0xc7, 0x10, 0xf7, 0x07, 0xbf, 0xe5, 0x42, 0xed, 0xf0, 0xa0,
-  0xd4, 0xbc, 0xf1, 0x12, 0x78, 0x3b, 0xcd, 0x7d, 0x7d, 0x74, 0xb1, 0x49,
-  0xc9, 0xa4, 0x12, 0x57, 0x81, 0xf1, 0xa1, 0x72, 0xa3, 0x9c, 0xf2, 0xd4,
-  0x56, 0x3d, 0x53, 0xd0, 0x01, 0x8e, 0xfa, 0xca, 0x3e, 0x18, 0x39, 0xab,
-  0x88, 0x86, 0xcc, 0x92, 0x14, 0x7f, 0x68, 0x96, 0x83, 0x18, 0xb3, 0x17,
-  0x1c, 0xe5, 0xdb, 0xfc, 0xac, 0x4e, 0x08, 0x44, 0x13, 0x6a, 0xf0, 0xd5,
-  0xd1, 0xc9, 0xd1, 0xc5, 0x51, 0x0c, 0x1b, 0xaa, 0xca, 0x66, 0xb8, 0xc1,
-  0x9a, 0x6c, 0x72, 0x5d, 0x18, 0xba, 0xbf, 0xa2, 0x2d, 0x01, 0x48, 0xc4,
-  0xf7, 0xd9, 0xf8, 0xd5, 0xc1, 0x77, 0x54, 0x04, 0x95, 0xce, 0xcd, 0xd9,
-  0xf9, 0xe9, 0xd9, 0xeb, 0xe3, 0xb7, 0xaf, 0xfa, 0xc9, 0xe1, 0xe9, 0xd9,
-  0x5f, 0xfb, 0xc9, 0x9b, 0xd3, 0xef, 0x8e, 0x22, 0x94, 0x47, 0xa1, 0x70,
-  0x91, 0x10, 0x2c, 0xa9, 0xdc, 0x25, 0x05, 0x64, 0x10, 0xde, 0xcf, 0x25,
-  0xab, 0xda, 0xd9, 0x10, 0xc4, 0x9a, 0x6b, 0x40, 0x6b, 0x98, 0x85, 0x37,
-  0x6b, 0xd7, 0x4f, 0xbe, 0x39, 0x3a, 0x78, 0x15, 0x06, 0x48, 0x8e, 0x78,
-  0x56, 0x34, 0x3b, 0x3b, 0x65, 0x62, 0xe1, 0x86, 0x61, 0x92, 0xc9, 0x9b,
-  0xf4, 0xcd, 0x9b, 0xcc, 0x03, 0x5d, 0x36, 0xc7, 0x00, 0xf6, 0x32, 0x54,
-  0x99, 0x0e, 0x0a, 0xe7, 0x2a, 0x76, 0x88, 0x0b, 0xfb, 0x7b, 0xf8, 0x36,
-  0x44, 0xec, 0x98, 0x16, 0x56, 0x91, 0x2c, 0x4d, 0xf8, 0x19, 0x00, 0x4a,
-  0xad, 0x30, 0x77, 0xc2, 0xe2, 0x22, 0x11, 0x99, 0x32, 0x64, 0xae, 0xf5,
-  0xa7, 0x60, 0x65, 0x10, 0x97, 0x38, 0x0e, 0x23, 0x95, 0x58, 0xba, 0x71,
-  0x46, 0xe1, 0x3e, 0x35, 0x6a, 0xd6, 0x21, 0x69, 0x5d, 0x82, 0xeb, 0x43,
-  0x16, 0xcf, 0xeb, 0xca, 0xe1, 0x6c, 0x1a, 0x6f, 0x95, 0x4a, 0xfa, 0x3f,
-  0x96, 0xd0, 0xf5, 0x29, 0x61, 0x62, 0x3f, 0xf0, 0xc7, 0x11, 0x94, 0x1b,
-  0x88, 0x15, 0xcb, 0x4b, 0x43, 0x9c, 0x19, 0xc7, 0xad, 0x60, 0x9f, 0xe4,
-  0x30, 0xe2, 0x76, 0x38, 0xa6, 0x63, 0x7e, 0x8d, 0x3c, 0xa6, 0xd5, 0x21,
-  0x1c, 0x9a, 0x75, 0xcd, 0xbc, 0x9d, 0xc6, 0x47, 0xd7, 0x34, 0xa7, 0x5a,
-  0xff, 0xd0, 0x2e, 0x07, 0xe6, 0x14, 0x7b, 0xde, 0xca, 0x78, 0xfe, 0x8d,
-  0xdc, 0x64, 0x5e, 0x7e, 0x04, 0x46, 0x34, 0x38, 0xa1, 0xd1, 0xd8, 0x1a,
-  0xea, 0x08, 0xdd, 0x02, 0x44, 0x90, 0x61, 0x17, 0x05, 0x97, 0xf1, 0x8c,
-  0x94, 0x83, 0x1c, 0xb0, 0xc2, 0x51, 0x7b, 0x35, 0xb6, 0x34, 0xf0, 0x4e,
-  0x40, 0xcb, 0xac, 0x71, 0x5e, 0x26, 0x62, 0xb6, 0x78, 0x62, 0x36, 0x37,
-  0x92, 0xb4, 0x55, 0xba, 0xa3, 0xfd, 0x64, 0xbb, 0x53, 0x7d, 0xaa, 0x4e,
-  0x06, 0x5c, 0x33, 0x9e, 0xb3, 0x08, 0xc3, 0xd4, 0xdb, 0xd7, 0x2b, 0x78,
-  0xa1, 0x5f, 0x79, 0x54, 0xd6, 0xde, 0x4b, 0x1e, 0x3b, 0x39, 0x36, 0x27,
-  0x80, 0x86, 0x1e, 0x24, 0xce, 0x20, 0xea, 0x10, 0x55, 0xe5, 0x73, 0x3a,
-  0x14, 0x58, 0x6f, 0xd3, 0x56, 0xd8, 0x31, 0x45, 0x19, 0x47, 0x7b, 0x46,
-  0xf8, 0xf1, 0x23, 0x5d, 0x07, 0xb6, 0xc3, 0xf3, 0xa3, 0x8b, 0xf3, 0x8f,
-  0x88, 0xc4, 0xd8, 0xa0, 0xa8, 0xe7, 0xcd, 0xc4, 0xeb, 0xd6, 0xf5, 0x4b,
-  0x5f, 0x3d, 0xd2, 0xef, 0x43, 0x28, 0x02, 0x4f, 0x62, 0x0e, 0xef, 0x0d,
-  0x06, 0xfb, 0x8f, 0xcc, 0x12, 0xc1, 0xd5, 0xab, 0x7b, 0xfb, 0xe6, 0xe8,
-  0xe4, 0x2c, 0x9c, 0xe5, 0x77, 0xe7, 0xaf, 0xff, 0x3a, 0x7c, 0x20, 0x3f,
-  0xfc, 0xb7, 0x8f, 0xcb, 0xff, 0x90, 0x36, 0x4d, 0xb4, 0x6e, 0x86, 0x91,
-  0x2c, 0x60, 0xeb, 0xb4, 0x61, 0x69, 0xc0, 0x0c, 0xe2, 0x12, 0xae, 0xcd,
-  0x4a, 0x50, 0x7f, 0x33, 0xf5, 0x40, 0xc8, 0x52, 0x81, 0x14, 0x54, 0x63,
-  0x88, 0x3d, 0xe5, 0x92, 0xa8, 0x85, 0xab, 0x82, 0x2b, 0x51, 0x41, 0x34,
-  0x94, 0x7c, 0x4c, 0xc5, 0xc7, 0x5a, 0x38, 0x1c, 0x11, 0x51, 0x5f, 0x02,
-  0xf4, 0xd1, 0x9b, 0x65, 0x84, 0x1f, 0xa6, 0x57, 0xc3, 0xb2, 0xca, 0xc9,
-  0xa8, 0x29, 0xf5, 0x6a, 0xb9, 0xb5, 0x04, 0x85, 0xd9, 0xe9, 0x58, 0xd3,
-  0x11, 0x8a, 0x35, 0x27, 0x51, 0x5e, 0x89, 0x82, 0x6a, 0xb4, 0xdb, 0x9d,
-  0xc3, 0x1e, 0x82, 0x00, 0x30, 0xdb, 0xe6, 0xd0, 0xa6, 0x0c, 0x44, 0xa3,
-  0x21, 0xeb, 0x7b, 0xb3, 0xd1, 0xf3, 0xc4, 0x31, 0x5f, 0xd5, 0xcf, 0xec,
-  0x94, 0xdd, 0x5c, 0x29, 0x0e, 0xef, 0x2e, 0xad, 0x00, 0xe4, 0x14, 0x68,
-  0x52, 0xb9, 0xd1, 0xa4, 0x5a, 0x1b, 0x76, 0x8f, 0xc0, 0x57, 0xf2, 0x2e,
-  0x49, 0x19, 0x28, 0xfa, 0x37, 0x5a, 0xf8, 0xcf, 0xfa, 0xc7, 0x68, 0x42,
-  0xe4, 0x85, 0x97, 0x32, 0x46, 0xfc, 0x32, 0x57, 0x2c, 0x1a, 0x77, 0xbc,
-  0x4a, 0x12, 0x4f, 0x1e, 0x00, 0xeb, 0x78, 0x1d, 0x32, 0x06, 0x58, 0xbf,
-  0xe5, 0xa6, 0xa4, 0x9a, 0xbc, 0x40, 0x33, 0x62, 0x7b, 0xa3, 0xe9, 0xde,
-  0x7b, 0x21, 0x98, 0x93, 0x2b, 0xba, 0x60, 0x91, 0x4c, 0xbd, 0x21, 0x29,
-  0xa1, 0xee, 0x68, 0xe1, 0x1d, 0xc7, 0xd5, 0xff, 0xfa, 0x60, 0x6c, 0xb1,
-  0xc4, 0xf0, 0xfb, 0x48, 0x7b, 0x2c, 0xa9, 0x2e, 0xad, 0x76, 0xcd, 0x20,
-  0x36, 0x60, 0xcc, 0x09, 0xd6, 0x64, 0x2d, 0xea, 0x20, 0x26, 0x2d, 0xb4,
-  0x99, 0x78, 0x15, 0x24, 0x10, 0xd3, 0x68, 0xbe, 0x34, 0x94, 0xcc, 0xb2,
-  0x94, 0xb9, 0x27, 0xfa, 0x0c, 0x55, 0x84, 0x22, 0xbc, 0xf2, 0xde, 0x20,
-  0x62, 0x48, 0x23, 0x83, 0xe1, 0x8a, 0x4b, 0xec, 0xb7, 0x3b, 0xc5, 0x7f,
-  0x75, 0x44, 0xc1, 0x8b, 0xf8, 0x02, 0x7f, 0xfc, 0x22, 0xb2, 0xf0, 0xaa,
-  0x5b, 0xb1, 0xf3, 0x72, 0xc3, 0x90, 0x7f, 0x8b, 0x3e, 0x06, 0x41, 0xda,
-  0xf9, 0x74, 0x53, 0xc0, 0x6e, 0xbc, 0xed, 0x16, 0xd3, 0x20, 0x89, 0x1e,
-  0x6d, 0xaa, 0x68, 0x91, 0x44, 0x44, 0x85, 0xe7, 0x3d, 0xe6, 0x6c, 0x2b,
-  0xf3, 0xc0, 0x93, 0x6d, 0xba, 0x90, 0x71, 0x76, 0xb2, 0x4f, 0x09, 0x73,
-  0xf9, 0x0f, 0xc0, 0x5c, 0x52, 0x05, 0x6b, 0x1c, 0x80, 0x17, 0xd3, 0x14,
-  0xf6, 0x70, 0x40, 0x5e, 0x98, 0xa6, 0xbf, 0xf8, 0xef, 0x78, 0x01, 0x69,
-  0x94, 0x48, 0x7f, 0xdd, 0x06, 0xe4, 0x60, 0x87, 0x0b, 0xe9, 0xa3, 0xb6,
-  0x38, 0xef, 0xbc, 0x9c, 0x0a, 0xcc, 0x63, 0xda, 0xe8, 0x4a, 0x47, 0xb8,
-  0x06, 0xaf, 0xbb, 0xd8, 0x76, 0x91, 0x6e, 0x86, 0xf4, 0x42, 0xb3, 0xb4,
-  0x34, 0xf2, 0x15, 0x4d, 0xda, 0x5a, 0x6e, 0x01, 0x74, 0x35, 0x57, 0x12,
-  0x23, 0x21, 0x29, 0x98, 0x8e, 0xea, 0x92, 0xa9, 0x2f, 0x08, 0xe3, 0x21,
-  0x16, 0xa4, 0x48, 0x0c, 0xad, 0x42, 0xf9, 0x4f, 0x04, 0x49, 0x12, 0x5f,
-  0x18, 0xf4, 0x96, 0xa2, 0xd1, 0x6d, 0xe5, 0x68, 0x33, 0xc8, 0x5a, 0xa1,
-  0x4a, 0x29, 0xa6, 0x05, 0x65, 0x58, 0x52, 0x1b, 0x81, 0x1a, 0xd3, 0x1f,
-  0x51, 0x54, 0x4e, 0xab, 0xc1, 0x4b, 0xfc, 0xd7, 0xd4, 0x29, 0x2c, 0x3c,
-  0xa4, 0x64, 0x63, 0x4e, 0x53, 0xd9, 0x54, 0x27, 0x58, 0x74, 0x2b, 0x2c,
-  0xb2, 0x2a, 0x97, 0x81, 0xb4, 0x70, 0x6c, 0xa6, 0x65, 0x6a, 0x44, 0xa0,
-  0xd8, 0x00, 0xbe, 0xc6, 0x15, 0x69, 0x3b, 0x4b, 0x12, 0xa4, 0xc7, 0xc4,
-  0x93, 0x8a, 0x46, 0xe4, 0x3c, 0x50, 0x0c, 0x14, 0xff, 0x7d, 0x35, 0x5d,
-  0x12, 0x06, 0x63, 0xb2, 0x31, 0xd8, 0xb4, 0xf2, 0x31, 0xca, 0x6a, 0x32,
-  0x6d, 0x84, 0x3e, 0xff, 0xd4, 0x05, 0x0a, 0xdb, 0x94, 0x16, 0x2e, 0x0f,
-  0x23, 0xa7, 0x51, 0x73, 0xd1, 0xa8, 0xb7, 0x2d, 0x36, 0xbc, 0x2b, 0xbb,
-  0xcc, 0xc3, 0x98, 0xfe, 0xa0, 0xad, 0x22, 0xbb, 0xf3, 0xdb, 0x72, 0x5a,
-  0xaa, 0x6d, 0xef, 0x13, 0x9e, 0xa9, 0x6b, 0x96, 0xdf, 0x67, 0x8b, 0xc0,
-  0x7a, 0x43, 0x21, 0x12, 0xf4, 0x85, 0x58, 0x59, 0x58, 0x86, 0x4c, 0x39,
-  0x43, 0x00, 0x45, 0x80, 0x7d, 0xa8, 0x45, 0x0b, 0x72, 0xa6, 0x19, 0x10,
-  0x5d, 0x39, 0xfb, 0x9a, 0xae, 0x54, 0x8b, 0xe9, 0xd1, 0x2a, 0xd7, 0xf4,
-  0xa6, 0x8f, 0xaa, 0x7a, 0x45, 0x18, 0x9c, 0xf5, 0x06, 0x1f, 0x0e, 0x93,
-  0x57, 0x92, 0xe9, 0x81, 0x04, 0xa7, 0xa5, 0x8c, 0x0b, 0x81, 0xff, 0x5e,
-  0x33, 0xdf, 0x49, 0x5a, 0x56, 0x84, 0x50, 0xe4, 0xfd, 0xba, 0x95, 0x2a,
-  0xc2, 0x1e, 0x22, 0x46, 0x76, 0x2c, 0xb4, 0x2e, 0xe1, 0x18, 0x7f, 0xab,
-  0xc5, 0x38, 0x47, 0xa8, 0x72, 0x3d, 0x8c, 0xd9, 0x7c, 0x04, 0x24, 0x80,
-  0xc1, 0x25, 0x9c, 0xb7, 0x48, 0xfd, 0x2b, 0xda, 0x44, 0x79, 0x29, 0x79,
-  0x54, 0xda, 0x76, 0x04, 0x13, 0x04, 0x7a, 0xea, 0x93, 0x6a, 0x0a, 0x8f,
-  0xea, 0x3d, 0x3d, 0x59, 0xa5, 0x15, 0xab, 0xde, 0xc5, 0x8d, 0x1a, 0xdc,
-  0xd9, 0x8e, 0x94, 0x4d, 0x96, 0x4d, 0x1b, 0xd8, 0xd6, 0x1b, 0x93, 0x08,
-  0x06, 0x18, 0xd2, 0x06, 0x3c, 0x68, 0x22, 0xf4, 0xf7, 0xce, 0xd4, 0xda,
-  0xbe, 0xdf, 0xdb, 0x54, 0xf4, 0x11, 0x84, 0xee, 0x5b, 0x33, 0x7c, 0x0c,
-  0x58, 0x44, 0x87, 0x5c, 0x65, 0x0c, 0x71, 0x89, 0x74, 0x7e, 0x08, 0x47,
-  0xd1, 0xee, 0x0d, 0x45, 0x56, 0xd1, 0xde, 0x5f, 0x67, 0x29, 0x55, 0xea,
-  0xf2, 0x3a, 0xb7, 0x86, 0xcd, 0x4b, 0xf9, 0x2a, 0xc8, 0x7b, 0x09, 0x7a,
-  0x86, 0xe9, 0x61, 0x98, 0x1c, 0xd8, 0x1c, 0x00, 0x7d, 0x55, 0x17, 0x3f,
-  0x48, 0x08, 0x40, 0x90, 0x9b, 0x03, 0x0f, 0x25, 0xa9, 0x1e, 0x1f, 0xd9,
-  0x9c, 0xda, 0x60, 0x16, 0x37, 0xd5, 0x78, 0xcf, 0xfc, 0xf8, 0x96, 0x7e,
-  0x10, 0xfb, 0x21, 0xc5, 0x8b, 0x11, 0xfb, 0x19, 0x50, 0x2e, 0xe4, 0x34,
-  0x54, 0x0b, 0x90, 0x7f, 0xc8, 0x86, 0xd7, 0x9a, 0xf0, 0x43, 0x09, 0x53,
-  0xae, 0xe2, 0x15, 0xfc, 0xe7, 0xda, 0x4c, 0x9f, 0x0d, 0x8f, 0xc9, 0x2a,
-  0xaf, 0x30, 0x5d, 0x58, 0x23, 0x06, 0xa6, 0xe7, 0x72, 0x65, 0x23, 0xd6,
-  0x1b, 0xcd, 0x22, 0x84, 0xa2, 0x89, 0x59, 0xaa, 0x7f, 0x90, 0x21, 0x7b,
-  0x69, 0x34, 0x19, 0x43, 0xd8, 0x93, 0x04, 0x56, 0xd2, 0xb9, 0x65, 0x79,
-  0x44, 0x80, 0x0e, 0x7d, 0x8a, 0x31, 0x45, 0x61, 0xd3, 0x86, 0x92, 0x9a,
-  0xaf, 0x18, 0xc2, 0xea, 0x29, 0x23, 0x71, 0x3a, 0x89, 0xe6, 0x4f, 0x3f,
-  0xb8, 0x54, 0xaf, 0x28, 0x97, 0x51, 0xc4, 0x40, 0xad, 0xe0, 0x5a, 0x23,
-  0xe1, 0x8f, 0xb7, 0x7a, 0xbc, 0xcc, 0x67, 0x22, 0x3d, 0xe2, 0x51, 0xeb,
-  0x89, 0xe5, 0x34, 0xef, 0x15, 0xe3, 0xe4, 0x6c, 0x4b, 0xd4, 0x04, 0x44,
-  0x0e, 0xda, 0x8d, 0x4d, 0x96, 0x9c, 0x67, 0x73, 0xc2, 0x1a, 0x76, 0x29,
-  0x94, 0x90, 0x13, 0x09, 0xc3, 0x80, 0xba, 0x5b, 0xe1, 0x28, 0x9c, 0x12,
-  0x4e, 0x02, 0x19, 0x4a, 0x38, 0x97, 0xe2, 0x77, 0x81, 0xbb, 0xa0, 0xbe,
-  0x2f, 0x26, 0xd7, 0xaf, 0xde, 0x8e, 0xd6, 0x56, 0x87, 0x60, 0x78, 0x93,
-  0xc3, 0xd3, 0x55, 0x59, 0x10, 0x2d, 0x70, 0x7e, 0x87, 0x14, 0xc7, 0x20,
-  0xad, 0xe9, 0xc0, 0xfb, 0x36, 0xde, 0x5c, 0xfb, 0x15, 0x9b, 0x98, 0x4b,
-  0xdc, 0x9c, 0x2d, 0x37, 0x12, 0xd5, 0x89, 0x7b, 0x74, 0x90, 0xd2, 0x59,
-  0x88, 0x56, 0x71, 0xb7, 0x67, 0x9a, 0x72, 0xba, 0xb2, 0xa9, 0xb6, 0x58,
-  0xa1, 0x66, 0x2e, 0x21, 0xe9, 0x84, 0x74, 0x8d, 0x12, 0x92, 0xfa, 0xe3,
-  0x97, 0x6c, 0xf3, 0x49, 0x5a, 0x5d, 0x65, 0x11, 0x34, 0xe7, 0x60, 0x85,
-  0x14, 0xbb, 0xcc, 0xd3, 0x01, 0x0c, 0xa9, 0xce, 0xe8, 0x75, 0xa6, 0xd2,
-  0xbe, 0x10, 0x2b, 0x3e, 0xaa, 0x56, 0x4d, 0xc9, 0xac, 0xc9, 0xee, 0xd7,
-  0x5f, 0x85, 0x17, 0xe4, 0xab, 0xb7, 0x2b, 0xba, 0xa3, 0x6f, 0x06, 0x2a,
-  0x0f, 0x89, 0xbd, 0xd4, 0x83, 0xce, 0x08, 0xd7, 0x42, 0x20, 0xfc, 0xe3,
-  0x03, 0x50, 0x7c, 0xff, 0x47, 0xb8, 0x84, 0x79, 0x42, 0x7e, 0x3c, 0xf8,
-  0xa0, 0x00, 0x51, 0xc6, 0xbb, 0x62, 0x84, 0xca, 0x11, 0xd7, 0x98, 0x3c,
-  0xe7, 0xf8, 0xad, 0x33, 0xb1, 0xe3, 0x6f, 0x3e, 0xb4, 0x47, 0xf1, 0xe6,
-  0x88, 0xbf, 0xa1, 0x0a, 0xe1, 0x5a, 0xc8, 0x7c, 0x76, 0xf9, 0xc7, 0xd6,
-  0xae, 0x55, 0x86, 0xad, 0x48, 0x8b, 0x63, 0x3a, 0xc8, 0x43, 0x3e, 0xf4,
-  0xc6, 0x08, 0x63, 0x74, 0x5f, 0x7d, 0xf4, 0xbe, 0xeb, 0x0b, 0xc9, 0xc6,
-  0xd8, 0xdc, 0x80, 0xf6, 0xc2, 0x7c, 0x22, 0x56, 0xef, 0x3d, 0x86, 0xe3,
-  0x8c, 0x37, 0xf7, 0xf4, 0xf3, 0xa7, 0x7b, 0x9b, 0x9b, 0x7d, 0x0b, 0xc7,
-  0xa3, 0x59, 0x7e, 0x84, 0x3e, 0x90, 0x13, 0x33, 0x60, 0x85, 0xd2, 0x8c,
-  0xfa, 0x1a, 0x67, 0xcd, 0x66, 0xf4, 0xc7, 0x9b, 0xa3, 0xab, 0x41, 0xdf,
-  0xa3, 0x75, 0x21, 0xfc, 0x18, 0xf0, 0x48, 0x8b, 0xe2, 0x42, 0xfc, 0x3b,
-  0xe3, 0x07, 0x2c, 0xa8, 0xc0, 0xca, 0x83, 0x06, 0xe5, 0xc2, 0x81, 0x28,
-  0xb1, 0xaf, 0x0e, 0x5e, 0x2d, 0xbd, 0xbc, 0xa8, 0x80, 0xc1, 0xeb, 0xe3,
-  0x93, 0x23, 0xcb, 0x47, 0xfe, 0xd7, 0xd6, 0x90, 0xc6, 0x58, 0x4d, 0x02,
-  0xae, 0xc9, 0x72, 0xa4, 0x07, 0x88, 0x20, 0x49, 0xf6, 0xdf, 0xf6, 0x59,
-  0x9b, 0xc5, 0xc7, 0xad, 0x0c, 0xfb, 0xa3, 0xb7, 0xdf, 0x1d, 0x9f, 0x9f,
-  0xbe, 0x7d, 0x73, 0xf4, 0xd6, 0xe6, 0xaa, 0xd0, 0xf5, 0x1c, 0x77, 0xd2,
-  0x06, 0xfe, 0xaa, 0x9c, 0xb2, 0x9d, 0x48, 0x20, 0x25, 0x07, 0x22, 0xcd,
-  0xc2, 0xec, 0x97, 0xfc, 0x35, 0xf4, 0x9b, 0xf3, 0x1e, 0xd2, 0xad, 0x23,
-  0x22, 0x59, 0x50, 0x94, 0xf7, 0x94, 0x72, 0x01, 0x87, 0x9c, 0xe1, 0xc2,
-  0xbe, 0xb1, 0x9c, 0x5d, 0xbb, 0x1f, 0x26, 0x99, 0x54, 0x30, 0xa9, 0xbd,
-  0xa2, 0xad, 0x9a, 0xb9, 0xe6, 0xf2, 0xfb, 0x5a, 0x83, 0x70, 0xa4, 0xf6,
-  0xae, 0x16, 0xf6, 0x1e, 0x77, 0x94, 0x31, 0x3a, 0x4b, 0xe3, 0x79, 0x13,
-  0xaf, 0xc5, 0xd5, 0x06, 0xd7, 0x1b, 0x9b, 0x79, 0xbd, 0x5b, 0xd7, 0xe1,
-  0x68, 0x6b, 0x90, 0x45, 0x57, 0xfd, 0xf7, 0x66, 0xd0, 0x0a, 0xbf, 0x40,
-  0xa9, 0xa4, 0x2f, 0x24, 0xd6, 0x22, 0x44, 0x25, 0xad, 0x7d, 0x87, 0xa6,
-  0x85, 0x42, 0x52, 0x30, 0x14, 0xf8, 0x82, 0xd7, 0xfc, 0xbb, 0xfe, 0xfd,
-  0xd9, 0xf9, 0xe9, 0x0f, 0x7f, 0xfd, 0x8d, 0xbb, 0xf0, 0x8e, 0xf6, 0x8f,
-  0x74, 0xe3, 0x69, 0xe3, 0x3f, 0xff, 0xe6, 0xbd, 0xb5, 0x9b, 0xef, 0x7b,
-  0x95, 0x58, 0xa2, 0x65, 0x3e, 0xd8, 0x75, 0x89, 0x8a, 0x4e, 0x89, 0xe7,
-  0xcb, 0x74, 0x11, 0xd8, 0x96, 0x45, 0x20, 0xf0, 0xa2, 0x6e, 0x13, 0x67,
-  0x1a, 0xfa, 0x85, 0x87, 0x8c, 0xa2, 0xe1, 0xe4, 0x25, 0xbf, 0xbc, 0x2b,
-  0xe3, 0x6a, 0xe0, 0xf6, 0xb7, 0xeb, 0x71, 0x70, 0x72, 0xf2, 0x9b, 0x2e,
-  0x02, 0xac, 0x1f, 0x6e, 0x2e, 0x03, 0x2b, 0xde, 0x6a, 0x28, 0x4d, 0x20,
-  0x66, 0xb5, 0x0c, 0x25, 0x6f, 0x4f, 0x65, 0x34, 0xec, 0x26, 0x1d, 0xd4,
-  0x99, 0x51, 0x04, 0xe0, 0xa1, 0x22, 0xa5, 0x8b, 0xae, 0x45, 0x1a, 0x58,
-  0x50, 0x3e, 0x1e, 0x5f, 0xc2, 0x2b, 0x69, 0xcb, 0x6c, 0x69, 0xd0, 0x05,
-  0x60, 0xbe, 0x80, 0x1c, 0x50, 0x5a, 0x1f, 0x3f, 0x97, 0xbc, 0xd2, 0x5a,
-  0x86, 0x91, 0xb8, 0x0c, 0x32, 0x1a, 0x53, 0xb0, 0x57, 0x95, 0xd7, 0x37,
-  0x00, 0x5d, 0xa0, 0x43, 0xd9, 0xe7, 0x42, 0xcc, 0x0c, 0x59, 0x42, 0x2a,
-  0x03, 0x86, 0x62, 0xc6, 0xce, 0x23, 0x36, 0xff, 0x5e, 0x9c, 0x1e, 0x9e,
-  0x9e, 0x98, 0x5f, 0x8e, 0x5e, 0x1f, 0xff, 0xe0, 0x18, 0x1a, 0x63, 0x8b,
-  0xb4, 0xb4, 0x29, 0x57, 0x0f, 0xab, 0xe3, 0xec, 0x8f, 0x55, 0x25, 0xe8,
-  0xa8, 0x91, 0xd1, 0x60, 0xa3, 0x8f, 0x0a, 0x2f, 0xb2, 0xab, 0x4c, 0x46,
-  0x60, 0x7f, 0x97, 0x98, 0x04, 0x5b, 0x85, 0x10, 0x12, 0xbf, 0x58, 0x9f,
-  0x0c, 0xae, 0xac, 0x6c, 0x39, 0xdf, 0xc6, 0x37, 0xb8, 0x76, 0x6c, 0x2c,
-  0x1e, 0xc2, 0xbe, 0x91, 0xcf, 0xfc, 0x49, 0xaa, 0xe2, 0x6d, 0xe3, 0x83,
-  0x50, 0x34, 0x8f, 0x78, 0x98, 0xef, 0x0e, 0xec, 0x84, 0x63, 0x41, 0x9d,
-  0xb3, 0x2d, 0xb6, 0xe7, 0x24, 0x0b, 0x20, 0xf9, 0xea, 0xc8, 0x78, 0x44,
-  0x04, 0x84, 0x53, 0x80, 0x6c, 0x34, 0x55, 0x04, 0x3b, 0x01, 0xe6, 0x3e,
-  0x28, 0x93, 0x7f, 0x5f, 0xe6, 0xb7, 0x29, 0x60, 0x19, 0x80, 0xe9, 0xc0,
-  0x2f, 0x75, 0xda, 0x48, 0x7f, 0x55, 0x23, 0x69, 0xbb, 0x95, 0xa7, 0xbf,
-  0xa6, 0x91, 0xa7, 0x9d, 0x36, 0xae, 0x7f, 0x55, 0x23, 0xb6, 0x94, 0xa3,
-  0xb9, 0x16, 0x7f, 0x38, 0xbe, 0x48, 0x0e, 0x4f, 0x5f, 0x39, 0x1a, 0xbd,
-  0x90, 0x1c, 0xf6, 0x8a, 0xd1, 0xa5, 0xc6, 0xcb, 0x82, 0x64, 0x09, 0x3a,
-  0x50, 0x5c, 0x52, 0x9b, 0xda, 0xe2, 0x72, 0xe3, 0xec, 0xbe, 0x13, 0x33,
-  0x41, 0x4e, 0x7f, 0x57, 0xec, 0xda, 0xf3, 0x7d, 0x80, 0xfc, 0xa8, 0x14,
-  0x26, 0xaf, 0x1d, 0x7a, 0x04, 0x95, 0x73, 0x49, 0x2b, 0xc5, 0x7f, 0x19,
-  0xa7, 0xe4, 0x78, 0x2e, 0xd8, 0x57, 0x6f, 0x64, 0x93, 0x03, 0x35, 0xaa,
-  0xb1, 0x45, 0xb1, 0xb4, 0x79, 0xe8, 0x30, 0xf0, 0x50, 0xb6, 0x36, 0xa2,
-  0xb7, 0x58, 0xfd, 0xcf, 0x1b, 0x1d, 0x8a, 0x9f, 0x00, 0xbf, 0x23, 0x9c,
-  0xb0, 0x68, 0x51, 0x8c, 0xd4, 0xf2, 0x81, 0xe4, 0x45, 0x52, 0xdb, 0x54,
-  0x6d, 0x11, 0xb8, 0x15, 0x0b, 0xab, 0xcb, 0x4b, 0xa5, 0xf3, 0x80, 0x45,
-  0xd9, 0x26, 0x6c, 0x3f, 0xbb, 0xfc, 0xe3, 0xb5, 0xb9, 0xa5, 0xd9, 0x0b,
-  0x2c, 0x99, 0xd3, 0xf9, 0x3f, 0xbc, 0x3b, 0xfa, 0x89, 0x0b, 0xd7, 0x99,
-  0xa7, 0x33, 0x0e, 0xa2, 0x62, 0x03, 0xa7, 0xd1, 0x77, 0x9a, 0xf4, 0x03,
-  0xe2, 0xde, 0x48, 0x24, 0xc2, 0x1a, 0x4e, 0x3c, 0x36, 0xb8, 0x27, 0xcc,
-  0x59, 0x35, 0x7b, 0xd8, 0x54, 0x17, 0x2e, 0x5d, 0x85, 0x13, 0x61, 0xfd,
-  0x08, 0x5a, 0xc5, 0x80, 0xe3, 0x05, 0x34, 0xeb, 0x42, 0x75, 0xcd, 0xe3,
-  0x0e, 0x76, 0x7d, 0x9b, 0xdc, 0x0a, 0x0a, 0x1c, 0x46, 0x1d, 0xd0, 0xa7,
-  0x14, 0x60, 0x91, 0x4f, 0x72, 0x8a, 0xdb, 0xb2, 0xa8, 0x47, 0xa6, 0x3f,
-  0x2c, 0xda, 0x20, 0x6e, 0xaf, 0xf5, 0x71, 0x4c, 0x54, 0xf4, 0x98, 0x96,
-  0x58, 0x46, 0x8e, 0x45, 0x43, 0x51, 0x69, 0xf3, 0xcd, 0xbd, 0xc6, 0x36,
-  0xa4, 0x45, 0x19, 0xc1, 0x24, 0xb3, 0x1b, 0x23, 0x6a, 0xb0, 0xd3, 0x38,
-  0x9f, 0xf2, 0x8f, 0x43, 0xe5, 0xe4, 0xae, 0x76, 0xa8, 0x30, 0x71, 0x36,
-  0x43, 0x89, 0x39, 0x5a, 0xee, 0x19, 0x4e, 0xe7, 0x98, 0x20, 0x65, 0x91,
-  0xc5, 0xce, 0x60, 0x35, 0xea, 0x4e, 0xf4, 0xfd, 0xb3, 0x4e, 0x3f, 0xda,
-  0x0d, 0x03, 0x5c, 0x5d, 0x58, 0xe3, 0x66, 0x37, 0xd7, 0x85, 0x9a, 0x0f,
-  0x5b, 0xfb, 0xac, 0x4b, 0x22, 0x9a, 0x7a, 0x42, 0xc8, 0xbb, 0xa5, 0x9f,
-  0x81, 0xf6, 0xb9, 0x38, 0x30, 0x33, 0x32, 0x1a, 0xc9, 0x75, 0x5a, 0x65,
-  0x0b, 0x2a, 0x0a, 0x79, 0xe1, 0x10, 0x24, 0x91, 0xe8, 0x06, 0x27, 0x24,
-  0x96, 0x7a, 0xa2, 0xa3, 0x34, 0x17, 0xa4, 0x2f, 0x18, 0x3e, 0x97, 0x6e,
-  0x2f, 0xce, 0xc8, 0x35, 0x4f, 0xae, 0x28, 0x23, 0x82, 0xe6, 0x96, 0xf0,
-  0xa4, 0x0e, 0x3b, 0x3e, 0xa2, 0x5c, 0x7e, 0xa0, 0x57, 0xea, 0xdf, 0xfa,
-  0x46, 0x18, 0xb0, 0xc3, 0x97, 0x81, 0xcb, 0x72, 0xc0, 0x7c, 0x97, 0x15,
-  0x23, 0xea, 0xb8, 0x72, 0x46, 0x00, 0x40, 0x49, 0x0b, 0x89, 0xf4, 0xab,
-  0x08, 0x85, 0x76, 0x98, 0xbc, 0x09, 0x53, 0xa4, 0xcb, 0xcb, 0x46, 0x40,
-  0x06, 0xc9, 0xa4, 0x3e, 0xf5, 0x4a, 0xf7, 0xe1, 0xea, 0x75, 0x0d, 0x82,
-  0xda, 0xf5, 0x7e, 0xe1, 0x28, 0xcb, 0x24, 0x84, 0x1e, 0x70, 0x38, 0x9b,
-  0x6e, 0x1d, 0x76, 0x76, 0xec, 0x3a, 0x24, 0x77, 0x58, 0xd9, 0xb3, 0x83,
-  0xd1, 0x48, 0xd7, 0xf5, 0x30, 0x5c, 0x42, 0x49, 0x3d, 0x26, 0x94, 0x4b,
-  0x05, 0x42, 0x0e, 0xd5, 0x1a, 0x69, 0xa3, 0x93, 0x42, 0xb8, 0xf3, 0xc4,
-  0xf6, 0x65, 0xbb, 0xfa, 0x8e, 0xdb, 0xea, 0x7f, 0x64, 0x57, 0xf1, 0xbe,
-  0xbe, 0x8b, 0xf4, 0xb5, 0xd7, 0x9d, 0x57, 0xb2, 0xbb, 0xfb, 0x99, 0xc2,
-  0xdd, 0xb0, 0x0b, 0x7a, 0x96, 0xb8, 0x0e, 0xbd, 0x1e, 0xcd, 0x73, 0x03,
-  0xd8, 0x24, 0xc3, 0xbe, 0x3c, 0x1a, 0xf3, 0xba, 0x7a, 0x6a, 0xbb, 0x32,
-  0xba, 0xd1, 0x3a, 0x5c, 0x63, 0x72, 0x18, 0x82, 0x33, 0x62, 0x4b, 0x9c,
-  0x1e, 0xd3, 0x1a, 0x18, 0x61, 0x6b, 0x65, 0x52, 0xa6, 0x8e, 0xc2, 0xeb,
-  0xe7, 0x33, 0x37, 0x25, 0x37, 0x6e, 0x52, 0x5f, 0x04, 0xcb, 0x70, 0xe8,
-  0x1f, 0x7e, 0x25, 0x14, 0x4d, 0x42, 0xb0, 0x61, 0x71, 0x5d, 0x7e, 0xc2,
-  0xaf, 0xba, 0x5e, 0xf8, 0x98, 0x9d, 0x11, 0x11, 0x4b, 0xe9, 0xb0, 0x61,
-  0x72, 0x0a, 0x65, 0xab, 0x05, 0x3a, 0x0d, 0x95, 0x95, 0x8e, 0xb5, 0x2d,
-  0xe2, 0xe2, 0x9f, 0xea, 0x9d, 0xe7, 0x6e, 0x4d, 0x74, 0x48, 0xea, 0x9c,
-  0xdc, 0x92, 0xe3, 0xe3, 0xdc, 0x20, 0x1a, 0x78, 0x90, 0x21, 0x12, 0x84,
-  0x92, 0xcb, 0x00, 0xf2, 0x1b, 0x00, 0x61, 0x9a, 0x23, 0xb5, 0x69, 0x9d,
-  0x08, 0x97, 0xe0, 0x18, 0xde, 0x5d, 0xe3, 0x28, 0xf9, 0xef, 0x4b, 0x62,
-  0x3c, 0xb8, 0x5d, 0x09, 0xd8, 0x8c, 0xff, 0xd4, 0xf7, 0x18, 0x0d, 0x87,
-  0x2a, 0x0c, 0xe2, 0xf6, 0x75, 0x09, 0x24, 0x72, 0x32, 0xec, 0xfa, 0xbb,
-  0x64, 0x58, 0x2e, 0xee, 0xc3, 0x57, 0x81, 0x45, 0xc4, 0x18, 0xda, 0x3c,
-  0x4b, 0x45, 0x87, 0x81, 0xc9, 0x40, 0x18, 0x1d, 0x63, 0x4a, 0x04, 0x9e,
-  0x21, 0xdb, 0xb9, 0x30, 0x77, 0x19, 0x44, 0x3b, 0x04, 0x91, 0x3f, 0x13,
-  0x98, 0x0a, 0xb6, 0x03, 0x24, 0x7b, 0xdb, 0xdb, 0x11, 0xe7, 0x5d, 0x3a,
-  0x2e, 0x6f, 0x35, 0x92, 0x57, 0x50, 0x7e, 0xf0, 0x16, 0x2b, 0xc7, 0x90,
-  0x22, 0x6a, 0x12, 0x46, 0x07, 0x97, 0xa4, 0xfb, 0xd3, 0x8a, 0xa9, 0xe7,
-  0xc7, 0x5b, 0x37, 0x3e, 0x95, 0xdf, 0x03, 0x75, 0x48, 0x17, 0xad, 0x73,
-  0x1c, 0x19, 0x92, 0x48, 0x2b, 0xf4, 0xa4, 0x5e, 0x59, 0x39, 0x09, 0x86,
-  0x08, 0x46, 0x16, 0x84, 0x2c, 0xed, 0x3e, 0x0d, 0x29, 0x62, 0x74, 0x71,
-  0x7a, 0x2e, 0x14, 0x16, 0x72, 0x5d, 0x66, 0xa6, 0x78, 0xc4, 0x45, 0x33,
-  0xf7, 0x63, 0x01, 0x97, 0x6a, 0x78, 0xe7, 0x74, 0x5a, 0xb3, 0x5c, 0x5e,
-  0xaf, 0x7c, 0x59, 0x21, 0x84, 0x52, 0xa6, 0xf6, 0x9d, 0x98, 0xda, 0xb5,
-  0xf4, 0x18, 0x5d, 0xbb, 0xb3, 0x6c, 0xee, 0xc9, 0xfd, 0xbb, 0x7c, 0xd0,
-  0x4e, 0x97, 0x20, 0x76, 0x36, 0x0b, 0x13, 0x1d, 0x89, 0x81, 0x98, 0xa2,
-  0x87, 0xc5, 0x68, 0x66, 0x5d, 0x80, 0x5d, 0x5a, 0xe4, 0x43, 0x74, 0x6a,
-  0x8b, 0xcb, 0x69, 0xb8, 0x80, 0x12, 0x8d, 0xa7, 0x44, 0xc0, 0x3d, 0x4d,
-  0x8e, 0x25, 0x0e, 0xbe, 0x90, 0x1c, 0xdb, 0x94, 0x92, 0x56, 0xba, 0xbb,
-  0xad, 0x31, 0x64, 0x1a, 0x35, 0xe6, 0x49, 0x85, 0x4e, 0x9a, 0xda, 0xb6,
-  0xeb, 0x7c, 0x76, 0x7a, 0x7e, 0xa1, 0x43, 0x43, 0xb7, 0xf8, 0xa0, 0x73,
-  0x7e, 0x08, 0xe1, 0x4e, 0x5c, 0x3b, 0xe0, 0x2c, 0x52, 0x2b, 0x68, 0x2d,
-  0x6a, 0xdd, 0x97, 0x4d, 0x41, 0x3b, 0xda, 0x10, 0x81, 0x22, 0x57, 0xf7,
-  0x1a, 0x3d, 0x46, 0x62, 0xb1, 0xe5, 0x39, 0x6c, 0x2e, 0x21, 0x06, 0x1d,
-  0x77, 0xeb, 0x3a, 0xd9, 0xe5, 0xc9, 0x4e, 0x48, 0x1d, 0xa4, 0x27, 0x9f,
-  0x1f, 0x8d, 0x2e, 0x78, 0xec, 0xf4, 0x5b, 0x30, 0x76, 0x36, 0x12, 0xca,
-  0x87, 0xf1, 0x60, 0x14, 0x50, 0x07, 0x25, 0x43, 0x51, 0x68, 0x3e, 0xb5,
-  0x6f, 0xad, 0xc7, 0xde, 0x9a, 0x3d, 0xf1, 0x12, 0xdf, 0xc1, 0x36, 0x85,
-  0x56, 0x80, 0x51, 0x80, 0x0f, 0x7a, 0xd2, 0x4b, 0xcf, 0xdc, 0xba, 0x7c,
-  0x24, 0x08, 0x66, 0xdd, 0xb5, 0xb0, 0xe7, 0x5a, 0x58, 0x10, 0x7f, 0x97,
-  0x06, 0x8e, 0xd5, 0x8b, 0x4e, 0x1f, 0xda, 0xe0, 0xe6, 0xab, 0xac, 0x50,
-  0xc2, 0xe0, 0xe7, 0x5c, 0x3b, 0x4f, 0xad, 0x97, 0x48, 0xe5, 0x20, 0x6f,
-  0x28, 0xf4, 0xb1, 0x66, 0x1c, 0x23, 0x54, 0xaf, 0x43, 0x76, 0x4f, 0x9e,
-  0xb9, 0x1b, 0x82, 0xb4, 0x06, 0x17, 0x0f, 0x22, 0x2b, 0xe0, 0xdd, 0x48,
-  0x14, 0x51, 0x93, 0x17, 0xcb, 0x0c, 0x56, 0xb6, 0xb4, 0x9a, 0x51, 0x1d,
-  0x00, 0x09, 0xe7, 0x08, 0xdc, 0xcf, 0x92, 0x3b, 0xef, 0xfa, 0x91, 0x9b,
-  0xe8, 0xf8, 0xe4, 0xc8, 0x6d, 0x17, 0x57, 0x10, 0xc0, 0x61, 0x76, 0xc2,
-  0x1c, 0x55, 0x33, 0xb3, 0xd7, 0xc5, 0x30, 0x39, 0xa3, 0x52, 0x9f, 0xf0,
-  0x32, 0xd5, 0xff, 0xe1, 0x5a, 0xe3, 0xc3, 0x02, 0xa3, 0x8b, 0xb9, 0x40,
-  0x21, 0x85, 0xe6, 0x85, 0xd9, 0x5d, 0x7c, 0x42, 0xbf, 0x7a, 0x55, 0x1a,
-  0x83, 0x29, 0x3f, 0x77, 0x2f, 0xd7, 0x66, 0x1e, 0x46, 0x1f, 0xeb, 0x3e,
-  0xb2, 0x27, 0xb4, 0x65, 0x94, 0x35, 0x34, 0x61, 0xd9, 0x33, 0x9d, 0xe9,
-  0x8a, 0x2b, 0xf5, 0x4c, 0xb9, 0x85, 0x4b, 0x7d, 0xa6, 0xc5, 0xc6, 0xbd,
-  0xa6, 0xf8, 0x52, 0x38, 0xe0, 0x75, 0x42, 0x56, 0x81, 0x39, 0x39, 0xe4,
-  0x14, 0x31, 0x6d, 0x15, 0xc4, 0x71, 0x67, 0x16, 0x1f, 0xda, 0x26, 0x8a,
-  0x11, 0xc7, 0xa4, 0x17, 0x04, 0xe9, 0x31, 0x44, 0x9f, 0xee, 0xd4, 0x2d,
-  0xdd, 0x63, 0x6a, 0xb4, 0xa4, 0x63, 0xef, 0xb1, 0xd6, 0xe8, 0xa8, 0x63,
-  0x97, 0x5a, 0x45, 0xbb, 0x4d, 0x26, 0x20, 0x73, 0xcb, 0xfb, 0xd2, 0xdd,
-  0xde, 0x53, 0xd7, 0xd4, 0x25, 0x61, 0xbd, 0x59, 0xfe, 0x7e, 0xd0, 0xe2,
-  0x41, 0xb6, 0xc4, 0x46, 0x6e, 0x9f, 0x7c, 0x40, 0x25, 0x68, 0xdf, 0x1f,
-  0x7b, 0x4c, 0x0c, 0x17, 0x25, 0x69, 0x38, 0xc5, 0xbd, 0xc3, 0x56, 0x91,
-  0x02, 0x61, 0x6c, 0x6b, 0xe0, 0xb2, 0x35, 0x16, 0x75, 0x85, 0xb5, 0x4a,
-  0x51, 0xc4, 0xe7, 0xe9, 0x87, 0xe0, 0xaa, 0x9f, 0x2f, 0xe7, 0x02, 0x29,
-  0xe1, 0xf5, 0xf4, 0xb9, 0x68, 0xad, 0x54, 0xa8, 0xac, 0x70, 0x21, 0xd5,
-  0x3e, 0x33, 0x2d, 0xad, 0x2b, 0x58, 0x13, 0x5c, 0x0a, 0x0e, 0xde, 0xae,
-  0x6d, 0x21, 0xc5, 0x48, 0x1d, 0x00, 0xba, 0x90, 0x45, 0x4c, 0x54, 0xfd,
-  0xb1, 0xf4, 0x10, 0x49, 0x69, 0xbd, 0xe5, 0x31, 0xfe, 0x4a, 0x5d, 0x90,
-  0x11, 0xdf, 0x7c, 0x95, 0xfd, 0x0d, 0x05, 0x8c, 0x25, 0x6e, 0x9f, 0x21,
-  0xc1, 0x78, 0x96, 0x14, 0x9a, 0xe0, 0x58, 0xde, 0xde, 0x73, 0x31, 0x49,
-  0x88, 0xca, 0xab, 0x45, 0x75, 0xbb, 0x16, 0xe5, 0xa7, 0x3b, 0xd6, 0xbe,
-  0x43, 0x00, 0x0e, 0xeb, 0x35, 0x73, 0x07, 0x0f, 0xc6, 0x81, 0xd0, 0x7e,
-  0x47, 0xdf, 0x24, 0x6f, 0x5e, 0x3d, 0xa5, 0x5c, 0xe2, 0xab, 0xac, 0xa2,
-  0x82, 0xd5, 0x4e, 0xe7, 0x3a, 0xfd, 0xd6, 0x6b, 0x6c, 0xd7, 0xc5, 0x23,
-  0x68, 0x86, 0xa9, 0x30, 0x34, 0x91, 0xb4, 0xcd, 0x16, 0x12, 0x20, 0xe2,
-  0x55, 0x5f, 0x3c, 0x25, 0x0a, 0x49, 0xaf, 0x48, 0xa1, 0x90, 0x5d, 0xba,
-  0x39, 0x28, 0x6d, 0x26, 0xf6, 0xf4, 0x89, 0x63, 0x62, 0xd5, 0xfd, 0x82,
-  0xea, 0x6c, 0x14, 0x57, 0x24, 0x50, 0x47, 0x4e, 0xd4, 0x53, 0x66, 0x9c,
-  0x87, 0x7c, 0xee, 0x49, 0x98, 0x0d, 0x5f, 0x03, 0x28, 0x23, 0xbc, 0x1a,
-  0xde, 0x7b, 0x4f, 0x7d, 0xb5, 0x91, 0x4a, 0xe7, 0x11, 0x85, 0x49, 0xf9,
-  0x0b, 0x48, 0x2a, 0xde, 0xb3, 0xcf, 0xec, 0xb3, 0x64, 0x24, 0xc8, 0x0b,
-  0xaf, 0xa0, 0xd1, 0x8a, 0x37, 0x44, 0x08, 0x66, 0xd1, 0xc0, 0x89, 0x67,
-  0x2c, 0xf7, 0x78, 0x6b, 0xef, 0xbd, 0xf2, 0xbc, 0xad, 0x15, 0xa3, 0x22,
-  0xaa, 0x25, 0x4c, 0x4c, 0x2a, 0x5f, 0x5c, 0xfb, 0x87, 0xf3, 0x19, 0xdf,
-  0xd4, 0x67, 0x5d, 0x54, 0x0e, 0xe5, 0x81, 0x99, 0xef, 0xa2, 0xd3, 0xa3,
-  0xce, 0xa4, 0x7f, 0x78, 0x90, 0xe8, 0x2b, 0xdd, 0x83, 0x03, 0x5a, 0xf7,
-  0x3a, 0xd9, 0x91, 0x33, 0x63, 0xa6, 0x5c, 0x5e, 0x15, 0xf9, 0x3f, 0x32,
-  0x2f, 0x0d, 0x5d, 0x8b, 0x51, 0x79, 0x8f, 0xef, 0x0a, 0xc3, 0xb8, 0x4d,
-  0x67, 0xb9, 0x30, 0x45, 0xb2, 0x97, 0xbb, 0x07, 0x9e, 0x08, 0xd5, 0x7e,
-  0xc8, 0xe9, 0x88, 0x42, 0x0b, 0x40, 0x59, 0x3f, 0xf2, 0xd4, 0x64, 0x2d,
-  0x94, 0x97, 0x67, 0x7b, 0x22, 0x7b, 0xa9, 0x7c, 0x4c, 0xf7, 0x12, 0x2d,
-  0xc4, 0x0c, 0xb5, 0x05, 0xba, 0x6c, 0xfa, 0x99, 0x5c, 0x7d, 0xb2, 0x95,
-  0xb6, 0x20, 0x55, 0xa5, 0xb5, 0xd4, 0xe8, 0xd7, 0xbb, 0xbc, 0x90, 0xac,
-  0xb0, 0xe0, 0xf5, 0x67, 0x2b, 0x4c, 0x4d, 0x35, 0xdf, 0x9b, 0x47, 0xa0,
-  0x25, 0xef, 0xf9, 0xcf, 0xdc, 0x49, 0xe0, 0x92, 0x73, 0x5c, 0x9a, 0xc1,
-  0x66, 0x3a, 0x21, 0x42, 0x4f, 0xeb, 0xf7, 0xe8, 0x59, 0x22, 0xd5, 0x65,
-  0x81, 0x94, 0xcd, 0x62, 0x1a, 0x4b, 0xc1, 0xbc, 0xb4, 0xdd, 0xcf, 0x4a,
-  0xe2, 0xa6, 0x5e, 0x7f, 0x4c, 0x52, 0xaf, 0x51, 0x80, 0xd7, 0x29, 0x08,
-  0x45, 0xab, 0xae, 0xa5, 0x7b, 0xfa, 0xb9, 0xd0, 0x86, 0xde, 0x97, 0x2a,
-  0xa6, 0xae, 0x7c, 0xe3, 0xb3, 0x6d, 0x5f, 0x68, 0x9d, 0x92, 0x45, 0x9e,
-  0xe1, 0x3d, 0x57, 0xbe, 0xc0, 0x94, 0x71, 0x3c, 0xa3, 0x2a, 0x91, 0x33,
-  0x2d, 0xed, 0xa8, 0x20, 0xd3, 0xee, 0xb1, 0xdd, 0x16, 0xd3, 0xbd, 0xf0,
-  0x45, 0xa8, 0xe4, 0xf8, 0x95, 0xf7, 0xe0, 0x13, 0x37, 0xc1, 0x74, 0x46,
-  0xd2, 0xc0, 0x3d, 0x5b, 0x22, 0x6a, 0x29, 0x79, 0xe9, 0x3d, 0xba, 0x27,
-  0x89, 0x3d, 0x1c, 0xd6, 0x82, 0xe5, 0x0f, 0x9e, 0x61, 0x72, 0x38, 0x44,
-  0x2e, 0x5e, 0x03, 0x38, 0x8a, 0x42, 0xfd, 0x02, 0xdd, 0xbd, 0xff, 0xec,
-  0xd9, 0x03, 0xcf, 0xca, 0xa5, 0x59, 0xdb, 0xab, 0xde, 0x7b, 0xef, 0xb3,
-  0xf0, 0x98, 0xab, 0x5a, 0xa0, 0xa0, 0x39, 0xe6, 0xa8, 0xd1, 0x49, 0x4b,
-  0x36, 0x08, 0xec, 0xf1, 0x3f, 0xd4, 0xf4, 0x53, 0x51, 0x4e, 0x62, 0xfd,
-  0x1f, 0xfe, 0x78, 0x3f, 0xf7, 0x90, 0xb9, 0xc4, 0xe8, 0x53, 0x65, 0xb0,
-  0x09, 0x4f, 0x5a, 0x45, 0x74, 0x5d, 0xdc, 0x38, 0x56, 0xc7, 0x6b, 0x81,
-  0xf7, 0xdc, 0xc8, 0x11, 0xcb, 0xc2, 0x71, 0x0e, 0x56, 0x06, 0x05, 0x30,
-  0x55, 0x63, 0xb8, 0x65, 0x74, 0xdf, 0x98, 0x4d, 0x05, 0x75, 0x78, 0x46,
-  0xb2, 0xed, 0xce, 0x31, 0xa8, 0xaf, 0x97, 0xac, 0x7a, 0xdb, 0x19, 0x39,
-  0xa4, 0x2c, 0xef, 0xb5, 0x5d, 0xc7, 0xbd, 0x30, 0x36, 0x48, 0x8d, 0x87,
-  0x66, 0xb4, 0xac, 0x9b, 0x5b, 0xb8, 0x7c, 0xa0, 0x3f, 0xde, 0x55, 0x25,
-  0xfd, 0xaa, 0xd0, 0xc1, 0x1b, 0xe9, 0x0a, 0x54, 0x08, 0x01, 0xb2, 0xf1,
-  0xba, 0x11, 0xd1, 0x86, 0x02, 0xdf, 0xcd, 0x2e, 0x5d, 0x67, 0x93, 0x1b,
-  0x3d, 0x32, 0x1b, 0x69, 0x07, 0xfe, 0xc6, 0x7b, 0x6b, 0xcf, 0x2e, 0x2d,
-  0xd4, 0x9a, 0xf3, 0xa3, 0xae, 0x26, 0xe0, 0x1e, 0x65, 0xaa, 0x39, 0xbf,
-  0x18, 0x9d, 0xed, 0xd3, 0x98, 0xd9, 0xd7, 0x62, 0x0e, 0xc4, 0xe1, 0x28,
-  0xfb, 0xbb, 0x64, 0x3f, 0xd7, 0xee, 0xe9, 0x67, 0x2b, 0x9e, 0x1e, 0x49,
-  0x28, 0xd4, 0xf1, 0x94, 0xd8, 0xaf, 0xd9, 0x07, 0xff, 0xa5, 0xcf, 0x04,
-  0x4c, 0x42, 0xad, 0xb8, 0x6c, 0x39, 0xa2, 0x91, 0xd9, 0xd4, 0x19, 0xf7,
-  0xf0, 0xe7, 0x4e, 0xaf, 0xb9, 0x5e, 0x16, 0x37, 0x56, 0x5e, 0x94, 0x40,
-  0x35, 0xdd, 0x60, 0xf7, 0xc2, 0x73, 0x3d, 0x1a, 0x1e, 0xa0, 0x99, 0x75,
-  0x73, 0xf7, 0xc5, 0x52, 0xa1, 0xb1, 0xa9, 0xec, 0x27, 0x32, 0xfc, 0x75,
-  0xe9, 0xad, 0xc1, 0xf3, 0x6d, 0x7b, 0xfd, 0x2e, 0x96, 0x63, 0x23, 0x90,
-  0x26, 0x37, 0xd9, 0xbd, 0xa3, 0x3a, 0x76, 0xcd, 0x19, 0x71, 0x31, 0x2f,
-  0xc8, 0x10, 0xe1, 0x1e, 0xb1, 0x0d, 0xfc, 0xf0, 0x03, 0xf3, 0xf8, 0x52,
-  0x43, 0x18, 0xc4, 0x85, 0x60, 0x4b, 0xcd, 0x1b, 0x86, 0xc8, 0x62, 0x01,
-  0x1d, 0x2f, 0x18, 0xde, 0xab, 0x6c, 0x96, 0x11, 0x44, 0x3b, 0xeb, 0x29,
-  0x20, 0xec, 0x58, 0xaa, 0x25, 0xc5, 0x12, 0xc3, 0x7b, 0x42, 0x49, 0xcd,
-  0x30, 0xe8, 0x15, 0x14, 0x80, 0x2a, 0xc6, 0x2a, 0xb3, 0xe3, 0x07, 0xef,
-  0x2e, 0xbe, 0x39, 0x3d, 0x1f, 0x25, 0x5b, 0x84, 0x9d, 0x79, 0x71, 0x7e,
-  0xfc, 0xd5, 0x3b, 0xa3, 0xff, 0x5b, 0xf7, 0xcb, 0xab, 0xb4, 0xc8, 0xcd,
-  0xcd, 0x31, 0x6a, 0xb2, 0xc2, 0xec, 0xe3, 0x95, 0x96, 0x1f, 0x46, 0x28,
-  0x0e, 0xdd, 0x95, 0x65, 0xc5, 0xd5, 0xd5, 0x90, 0x07, 0x77, 0x5d, 0xca,
-  0x66, 0xc0, 0x3f, 0x83, 0x04, 0x02, 0xca, 0xc9, 0x28, 0x9d, 0x6e, 0x9b,
-  0x77, 0xa0, 0x3f, 0xd5, 0x8b, 0x9a, 0x5c, 0x7c, 0x73, 0xf0, 0xf6, 0xdb,
-  0x91, 0x16, 0x93, 0xf8, 0xfe, 0xfb, 0xef, 0x7d, 0xef, 0x7e, 0xbd, 0xbf,
-  0xb5, 0x05, 0xf9, 0xf2, 0x3a, 0xfd, 0xf0, 0x61, 0x58, 0x67, 0x6b, 0x6b,
-  0xaf, 0x9d, 0x53, 0xce, 0x95, 0xa5, 0xae, 0x97, 0x46, 0xb4, 0x30, 0x5f,
-  0x6f, 0x99, 0x05, 0xa6, 0xea, 0xd7, 0x5b, 0xcb, 0x26, 0x9f, 0x99, 0x1b,
-  0x29, 0xab, 0xf1, 0xf6, 0xd6, 0xda, 0xda, 0xe8, 0xe8, 0x28, 0x39, 0x38,
-  0x19, 0x9d, 0x7a, 0xef, 0x6e, 0xec, 0x6c, 0x1a, 0xb9, 0xeb, 0x2a, 0x6b,
-  0xcc, 0x2f, 0x6b, 0x6b, 0x27, 0x07, 0x17, 0xa4, 0xf4, 0x7e, 0x77, 0x74,
-  0x3e, 0x3a, 0x3e, 0x7d, 0x4b, 0xdb, 0x43, 0x91, 0x89, 0xe9, 0xec, 0x8e,
-  0x02, 0x53, 0x2f, 0x73, 0xa0, 0xf2, 0xdc, 0x69, 0xa1, 0xe9, 0x2e, 0xc2,
-  0xbf, 0xb9, 0xb0, 0xee, 0x08, 0x9d, 0x5b, 0xe2, 0x19, 0x28, 0x44, 0xdd,
-  0x2c, 0x85, 0xc6, 0x1c, 0xae, 0x25, 0xce, 0xf0, 0xc5, 0xa1, 0x2e, 0xd9,
-  0x98, 0xa3, 0xa8, 0xfb, 0x8c, 0x65, 0x01, 0x87, 0x86, 0x17, 0x20, 0x19,
-  0x9f, 0xf9, 0xe8, 0x98, 0x4a, 0xfa, 0x24, 0xef, 0x46, 0x07, 0x5f, 0x1f,
-  0xd1, 0xb3, 0x5f, 0x67, 0x8d, 0xdb, 0x11, 0xae, 0x88, 0x4d, 0xbd, 0xbc,
-  0xcd, 0x9a, 0x7a, 0x92, 0x2e, 0x28, 0x5d, 0xdf, 0xf4, 0x33, 0xe0, 0x9b,
-  0xc8, 0x6b, 0x9c, 0xb5, 0x01, 0x57, 0x28, 0xbc, 0x90, 0xe7, 0x51, 0xd3,
-  0xdb, 0x6f, 0xf7, 0xfc, 0xe8, 0xe0, 0xd5, 0x9b, 0x23, 0x8d, 0xc5, 0xe7,
-  0x32, 0x2a, 0xa6, 0xd1, 0x6b, 0x2a, 0x76, 0xec, 0xac, 0xe1, 0x24, 0x1d,
-  0xd0, 0xea, 0x9b, 0x6f, 0xa8, 0xf0, 0x70, 0xbc, 0x3b, 0xb7, 0x53, 0x78,
-  0x76, 0x78, 0x99, 0x6f, 0x71, 0xeb, 0xda, 0x5f, 0x6a, 0xd7, 0x84, 0x27,
-  0x91, 0xaa, 0xc0, 0xcc, 0x56, 0x0d, 0x98, 0x43, 0x3e, 0xdf, 0xde, 0xde,
-  0x7e, 0x60, 0x1e, 0xd0, 0x28, 0xe4, 0xde, 0x35, 0x53, 0xd9, 0xa7, 0xc7,
-  0xb7, 0x5c, 0xfb, 0x6e, 0xc4, 0x33, 0x81, 0x45, 0xa0, 0x0a, 0x88, 0x05,
-  0xa3, 0x00, 0xe7, 0x4d, 0x16, 0x1f, 0xf2, 0xa4, 0x2c, 0xed, 0x0e, 0xb4,
-  0x16, 0xc7, 0xc8, 0xc8, 0x90, 0x79, 0x5c, 0x0c, 0xb1, 0x0e, 0xdc, 0x68,
-  0x40, 0x88, 0x5b, 0xab, 0xee, 0xbb, 0x4d, 0xd2, 0x37, 0xa6, 0x4d, 0xfa,
-  0x31, 0x2c, 0xab, 0xab, 0xad, 0xf9, 0x3e, 0x84, 0x1a, 0xf3, 0xd0, 0x6b,
-  0xc2, 0x4d, 0x49, 0x8c, 0x70, 0x6c, 0xc3, 0xcf, 0x6b, 0x5a, 0x58, 0xca,
-  0x93, 0xf9, 0x88, 0x71, 0xfd, 0x82, 0x55, 0xe0, 0xd8, 0xa7, 0x4b, 0x9d,
-  0xb9, 0x96, 0x52, 0x8d, 0x74, 0x42, 0xf4, 0x07, 0x9b, 0xe3, 0xd0, 0xb0,
-  0x10, 0xd3, 0x0b, 0xc5, 0xb5, 0x81, 0x44, 0xcc, 0xaf, 0x95, 0x21, 0x99,
-  0x61, 0xf3, 0x01, 0x9c, 0x57, 0xaa, 0xfa, 0x32, 0x8c, 0x24, 0x39, 0xbc,
-  0x17, 0x94, 0xcb, 0x5a, 0xa1, 0x90, 0x0f, 0x7a, 0xa0, 0x1c, 0x59, 0x49,
-  0x4f, 0xb0, 0xb1, 0x3e, 0xd4, 0x70, 0xb7, 0xcf, 0xc1, 0x00, 0xf4, 0x53,
-  0x5b, 0x6a, 0xf9, 0x88, 0xce, 0xbd, 0x49, 0xf1, 0xea, 0x17, 0x72, 0x51,
-  0x7b, 0xb4, 0x33, 0x32, 0xa3, 0x08, 0xfa, 0x5a, 0xba, 0xc2, 0xc4, 0x35,
-  0x77, 0xe7, 0x57, 0xb6, 0x37, 0xbb, 0xb1, 0x85, 0x7c, 0xb1, 0x8f, 0xee,
-  0xe3, 0xf0, 0x4c, 0x7e, 0xa3, 0x54, 0xde, 0xfc, 0x96, 0x26, 0x4f, 0x4c,
-  0xde, 0x5c, 0xd7, 0x74, 0x0b, 0xa8, 0x94, 0x8b, 0x28, 0x1c, 0x28, 0xac,
-  0xc8, 0x6d, 0xf0, 0x35, 0x8e, 0x07, 0x46, 0xb8, 0x6f, 0x96, 0x86, 0x2e,
-  0x95, 0xff, 0xb5, 0x35, 0xac, 0xeb, 0xeb, 0xad, 0x7c, 0xfa, 0xbe, 0xaa,
-  0xd3, 0xe4, 0xa7, 0x36, 0xc7, 0xaf, 0x27, 0xdd, 0x49, 0xfc, 0x2f, 0xac,
-  0xe0, 0x2f, 0x5a, 0xa9, 0xd5, 0xb3, 0xf8, 0x14, 0x33, 0x18, 0x0c, 0x00,
-  0xe3, 0x20, 0x3d, 0xbd, 0x37, 0x0f, 0xbc, 0xb7, 0x58, 0x14, 0xbf, 0x62,
-  0x76, 0x11, 0x56, 0x68, 0x26, 0xc9, 0x21, 0xe5, 0x86, 0xb7, 0xc4, 0x09,
-  0x5d, 0x2b, 0x0f, 0xfd, 0xb8, 0xbb, 0xbd, 0xbd, 0xb3, 0xbf, 0xf3, 0xf9,
-  0xf3, 0xed, 0xfd, 0x9d, 0x9d, 0x9d, 0xdd, 0xfd, 0x9d, 0xfd, 0xfd, 0xdd,
-  0xed, 0x9f, 0xb7, 0x7a, 0xab, 0x96, 0xee, 0xcd, 0x57, 0x2b, 0x1a, 0x34,
-  0xb3, 0xee, 0x71, 0xbc, 0xea, 0x4f, 0x76, 0xf6, 0x98, 0xd5, 0xb4, 0x97,
-  0xd4, 0xf3, 0xb1, 0xe9, 0x4a, 0x0e, 0xa7, 0x3f, 0x99, 0xda, 0xc8, 0xd2,
-  0x99, 0x37, 0xa1, 0x57, 0xa7, 0xdf, 0xbf, 0x3d, 0x39, 0x3d, 0x78, 0x95,
-  0x5c, 0x9c, 0x26, 0x07, 0xb0, 0xfc, 0x45, 0xf8, 0x24, 0x62, 0xce, 0x29,
-  0xbd, 0x92, 0x81, 0x30, 0x9c, 0x97, 0x40, 0xcd, 0x54, 0x36, 0xcc, 0x09,
-  0x83, 0xe8, 0x8e, 0xb3, 0x84, 0x66, 0x47, 0x2d, 0x0d, 0xaf, 0x9b, 0xf9,
-  0xe3, 0x37, 0xc2, 0xc7, 0xf4, 0xdc, 0x67, 0xb7, 0xbb, 0x53, 0xde, 0x31,
-  0x1c, 0x3d, 0xf9, 0x92, 0xc0, 0x24, 0x2e, 0x2d, 0x71, 0x58, 0xdb, 0x74,
-  0x9b, 0x0d, 0x8e, 0xd2, 0xc2, 0x1b, 0x38, 0x97, 0xf0, 0x7f, 0xe5, 0x75,
-  0x88, 0x9b, 0x63, 0xc4, 0xfa, 0xbe, 0x46, 0x44, 0x40, 0x4a, 0x22, 0xb1,
-  0x74, 0x33, 0x98, 0xe0, 0xe9, 0xca, 0x29, 0x99, 0xcb, 0x3c, 0xfb, 0x80,
-  0x59, 0xb7, 0x79, 0x2f, 0x07, 0x34, 0xbb, 0xd9, 0xa1, 0x2a, 0x84, 0x9a,
-  0x23, 0xf2, 0x4a, 0x87, 0x8c, 0x48, 0xae, 0x48, 0x77, 0xd4, 0x8f, 0xb2,
-  0x64, 0xd7, 0x05, 0x7d, 0xe3, 0xdf, 0xe3, 0x5b, 0xd6, 0xc2, 0xcb, 0x03,
-  0x78, 0x37, 0x3a, 0x7e, 0xfb, 0x35, 0x7c, 0xb8, 0xdf, 0x9f, 0x9e, 0xbf,
-  0x1a, 0x99, 0x66, 0x49, 0xc2, 0x59, 0x83, 0x91, 0x8f, 0x38, 0xa1, 0x8c,
-  0x8a, 0xcf, 0x25, 0x75, 0xfd, 0x67, 0x26, 0xa7, 0xbe, 0x05, 0x8e, 0xc0,
-  0x30, 0x3d, 0x95, 0x87, 0x10, 0x21, 0xe2, 0xb7, 0x86, 0x47, 0x8d, 0x5f,
-  0xce, 0xd3, 0xc9, 0x35, 0xe9, 0xe8, 0x4c, 0xac, 0x08, 0xaa, 0xdb, 0xa2,
-  0xd4, 0x98, 0x2d, 0x52, 0xbd, 0xb6, 0x9a, 0x12, 0xe4, 0x88, 0x56, 0x48,
-  0x33, 0x77, 0xe5, 0xe4, 0x3c, 0x03, 0x8d, 0xa1, 0xf5, 0xcb, 0x59, 0x7a,
-  0x85, 0x0e, 0xc3, 0x63, 0xe0, 0x75, 0x26, 0xdd, 0x7f, 0x6c, 0x97, 0x74,
-  0x6d, 0xa0, 0xbd, 0x63, 0x10, 0x00, 0x00, 0xe3, 0x00, 0x73, 0x21, 0xbe,
-  0x27, 0x96, 0x3b, 0xc9, 0x53, 0x8f, 0xf8, 0x1d, 0xaa, 0xef, 0xde, 0xad,
-  0x56, 0x86, 0x82, 0xdb, 0x8c, 0xb0, 0x63, 0x44, 0xf3, 0x81, 0x87, 0xd4,
-  0xc3, 0xea, 0x29, 0xb5, 0xe4, 0x99, 0x81, 0x6a, 0x17, 0x80, 0x88, 0x1a,
-  0x44, 0x30, 0x7a, 0xf0, 0x92, 0xd3, 0x60, 0x80, 0x32, 0x55, 0x6b, 0x64,
-  0x9b, 0x08, 0xc2, 0x3d, 0xaa, 0x3e, 0x49, 0x71, 0x29, 0x3d, 0x45, 0x8d,
-  0x71, 0xc5, 0x4c, 0x1c, 0xe6, 0x7f, 0xdd, 0x98, 0xa1, 0xa4, 0x54, 0xcd,
-  0x14, 0xb5, 0xbe, 0x15, 0x4b, 0xdc, 0x28, 0x54, 0x9c, 0xbd, 0xdc, 0xd3,
-  0xe8, 0x16, 0x6e, 0x25, 0xaf, 0x39, 0x81, 0xc0, 0xc2, 0x61, 0xd0, 0xe5,
-  0xc5, 0x18, 0x57, 0x6b, 0x12, 0x54, 0xe0, 0xee, 0x49, 0x67, 0xbc, 0xa4,
-  0x3b, 0xce, 0x88, 0xf1, 0x86, 0x81, 0x33, 0xe5, 0x48, 0xaa, 0xad, 0x57,
-  0x10, 0xb9, 0xb5, 0x6c, 0x9a, 0x6f, 0xc3, 0xcd, 0x11, 0x67, 0x76, 0x86,
-  0x58, 0xbb, 0x82, 0x6b, 0x08, 0x32, 0xb2, 0xb7, 0x40, 0x24, 0xf3, 0x3e,
-  0x75, 0x40, 0x35, 0xde, 0xb2, 0x71, 0x68, 0x9d, 0x7b, 0xcf, 0xec, 0x11,
-  0x35, 0x95, 0x37, 0x75, 0x36, 0xbb, 0x14, 0x64, 0x21, 0xbe, 0x42, 0x68,
-  0x96, 0x69, 0x07, 0x7f, 0x88, 0x3c, 0xa6, 0x85, 0x05, 0x3a, 0x29, 0x85,
-  0x97, 0x5c, 0x81, 0xad, 0xf3, 0x73, 0x20, 0xc9, 0x16, 0x0f, 0x61, 0xb7,
-  0xe8, 0x5f, 0x38, 0x24, 0xcb, 0x36, 0xd7, 0x62, 0x1d, 0xad, 0x58, 0x62,
-  0xba, 0x75, 0x74, 0xed, 0x68, 0xb5, 0xee, 0x17, 0x54, 0xaa, 0x80, 0xe2,
-  0x22, 0x5c, 0x69, 0xb9, 0x54, 0x13, 0x76, 0x00, 0x86, 0x92, 0x7d, 0xa0,
-  0xec, 0x15, 0x99, 0x9b, 0x53, 0xf3, 0xac, 0x54, 0x2f, 0xf3, 0xa5, 0xd6,
-  0xf0, 0x39, 0x78, 0x21, 0xad, 0x36, 0x61, 0x87, 0x91, 0xaa, 0x26, 0x41,
-  0xb7, 0x16, 0xbd, 0x02, 0xca, 0xa1, 0xad, 0x75, 0x2d, 0xe8, 0x1f, 0x9c,
-  0x59, 0x76, 0xaf, 0xfe, 0x3f, 0xb8, 0x5f, 0x53, 0x56, 0x21, 0x21, 0x04,
-  0x7b, 0x1d, 0x03, 0x00, 0x80, 0xce, 0x45, 0x2b, 0x38, 0xbc, 0x35, 0xcb,
-  0xe5, 0xd8, 0x6d, 0x2c, 0xd1, 0x08, 0xc2, 0x19, 0xa9, 0x49, 0x78, 0x9b,
-  0x71, 0x6a, 0x6c, 0x24, 0xef, 0x32, 0x00, 0x83, 0xca, 0x05, 0x52, 0xcb,
-  0x30, 0x14, 0xa4, 0x2a, 0x2e, 0x6b, 0x4b, 0x39, 0x66, 0xb5, 0x6e, 0xe4,
-  0x42, 0x5c, 0x43, 0x9c, 0x6b, 0xc8, 0x6e, 0x84, 0xf3, 0xae, 0xe6, 0x37,
-  0x8f, 0xb3, 0x9a, 0x70, 0x48, 0xaa, 0x31, 0xce, 0xee, 0x99, 0x1b, 0xe4,
-  0xc5, 0xc3, 0x4c, 0x47, 0x06, 0xf1, 0x51, 0x1d, 0x63, 0xae, 0x02, 0x9f,
-  0x03, 0xc7, 0x8a, 0x0b, 0x31, 0xe4, 0x58, 0x0e, 0xa4, 0xbf, 0x74, 0xb2,
-  0x38, 0xd4, 0x2c, 0x69, 0xd7, 0x11, 0x07, 0x9e, 0x93, 0x3c, 0xf7, 0x93,
-  0xaf, 0xd2, 0x3a, 0x9f, 0xf4, 0xa5, 0xa0, 0xa9, 0x14, 0x38, 0xa5, 0x37,
-  0x5c, 0x9d, 0xcb, 0x0d, 0x4e, 0xe0, 0xd9, 0x1c, 0x26, 0xdf, 0x6b, 0x89,
-  0x5a, 0xa3, 0x44, 0x02, 0x25, 0x89, 0xbc, 0x01, 0xd4, 0x5a, 0x0b, 0x5f,
-  0x49, 0xe8, 0xd3, 0x83, 0x30, 0xe2, 0x4e, 0x5c, 0xcd, 0x22, 0xec, 0x6a,
-  0x5a, 0xdf, 0x58, 0x5f, 0x18, 0xf6, 0x4a, 0x58, 0x11, 0x60, 0x18, 0x59,
-  0x96, 0x66, 0xdb, 0x40, 0xb9, 0xb4, 0x01, 0x26, 0xf8, 0xdb, 0x1e, 0x5f,
-  0x2d, 0x2f, 0x0d, 0xfb, 0x6b, 0x2d, 0x11, 0x88, 0x5e, 0x49, 0x47, 0x50,
-  0xa6, 0x65, 0x51, 0x83, 0x81, 0x59, 0x30, 0x5a, 0x1a, 0x61, 0xa0, 0xa7,
-  0x17, 0x47, 0xbf, 0x4b, 0x0e, 0xba, 0xee, 0x73, 0xba, 0x99, 0x5a, 0x50,
-  0x4a, 0x7d, 0x47, 0x60, 0x18, 0x3b, 0x07, 0x1d, 0x72, 0x25, 0xaf, 0x14,
-  0xdb, 0xbf, 0x26, 0x29, 0xce, 0xce, 0x48, 0x5c, 0x97, 0x12, 0x41, 0xdd,
-  0xdc, 0x6b, 0xfd, 0x00, 0x7a, 0x0d, 0x4e, 0x05, 0xaf, 0x82, 0x11, 0xc7,
-  0x35, 0xe7, 0x29, 0x03, 0xeb, 0x10, 0x6c, 0x9a, 0xd9, 0x94, 0x82, 0x19,
-  0x28, 0x82, 0xad, 0x39, 0x30, 0x90, 0x81, 0xc9, 0xf2, 0x06, 0xaa, 0x16,
-  0xa7, 0x6a, 0x71, 0x25, 0x43, 0xaf, 0x82, 0x73, 0xea, 0x23, 0xd8, 0xbd,
-  0xa7, 0x23, 0xf7, 0x5e, 0x2f, 0x16, 0xb9, 0x02, 0x79, 0x2c, 0x97, 0xac,
-  0x07, 0xb5, 0x49, 0x56, 0x8f, 0x1d, 0xdf, 0x66, 0x67, 0x1a, 0x72, 0x88,
-  0x8d, 0x98, 0x00, 0x17, 0x6a, 0x76, 0xcf, 0x7e, 0x73, 0xdc, 0xa9, 0xca,
-  0x35, 0xfd, 0x8b, 0x09, 0x88, 0x6f, 0x80, 0x98, 0x42, 0x99, 0x78, 0xa9,
-  0x92, 0xc5, 0xe1, 0xdd, 0xa6, 0xd5, 0x76, 0x40, 0x3e, 0x32, 0x75, 0xb0,
-  0xaa, 0x34, 0x0a, 0x86, 0x57, 0xf4, 0x03, 0xe2, 0x6b, 0x2e, 0x86, 0x9c,
-  0x68, 0xd5, 0xef, 0x0e, 0x41, 0x1b, 0x6e, 0x78, 0xdc, 0x74, 0xd8, 0x93,
-  0xad, 0x3f, 0xe5, 0x45, 0xa3, 0xbe, 0xb6, 0x50, 0x7b, 0xd2, 0x2c, 0x15,
-  0x45, 0x9d, 0x64, 0x5e, 0x2e, 0x4e, 0x51, 0xae, 0x79, 0x37, 0x1f, 0xd3,
-  0x4f, 0x59, 0x2b, 0x4f, 0x64, 0x18, 0x36, 0xae, 0xa1, 0x37, 0xce, 0xb8,
-  0xb0, 0x84, 0xa1, 0x12, 0xde, 0x45, 0x80, 0x95, 0xd2, 0x09, 0x64, 0xca,
-  0x9c, 0x83, 0xb8, 0xd7, 0x1c, 0x75, 0xd3, 0x1d, 0xb4, 0x6a, 0x9e, 0x92,
-  0x09, 0x6f, 0x2d, 0xe6, 0x2c, 0x3a, 0x91, 0x9e, 0x52, 0x48, 0xb9, 0x57,
-  0x58, 0x8f, 0x64, 0xd4, 0xb4, 0x3b, 0x90, 0x6c, 0x0b, 0x2b, 0x67, 0xe9,
-  0xa6, 0xb7, 0xf0, 0x04, 0x89, 0xa7, 0x4c, 0x93, 0xf9, 0xbd, 0x24, 0xa1,
-  0x88, 0x6c, 0x40, 0x68, 0x0e, 0xb0, 0x4a, 0x7c, 0xfe, 0x79, 0x20, 0x0b,
-  0x7e, 0xb0, 0x4f, 0xef, 0x9b, 0xaf, 0x3d, 0xeb, 0xc7, 0x8c, 0x42, 0x4d,
-  0xc8, 0xda, 0x00, 0x39, 0xd4, 0x9a, 0x40, 0x22, 0x1a, 0x86, 0x07, 0x8f,
-  0xc6, 0x3d, 0x5a, 0xcf, 0x4c, 0x40, 0x65, 0x7d, 0xc7, 0xf7, 0xd7, 0x58,
-  0xbd, 0xe6, 0x81, 0xa6, 0x35, 0x87, 0x2c, 0xad, 0x50, 0xcc, 0x94, 0x4d,
-  0x76, 0x47, 0xeb, 0x49, 0xcd, 0x46, 0x72, 0x1f, 0xd2, 0xa5, 0x4a, 0x4a,
-  0xc0, 0xa8, 0x94, 0x86, 0x69, 0x91, 0x65, 0x30, 0x96, 0x3a, 0x3a, 0x74,
-  0x64, 0x6b, 0xd1, 0x3a, 0x1e, 0xf1, 0x6e, 0xf5, 0x70, 0xde, 0xfd, 0x9a,
-  0xe1, 0x1c, 0x24, 0x0f, 0x26, 0x63, 0x48, 0xa5, 0x61, 0xe2, 0xf8, 0xb5,
-  0xf8, 0x56, 0xa7, 0x25, 0xa8, 0x5a, 0xe5, 0x1e, 0x5e, 0x23, 0x94, 0x93,
-  0xee, 0x94, 0xf9, 0x0b, 0x0d, 0x13, 0x45, 0xc9, 0x4f, 0x43, 0xa9, 0xa1,
-  0xf6, 0xfb, 0x3a, 0x94, 0x8f, 0x1d, 0xae, 0xc2, 0x82, 0x6a, 0xb6, 0x55,
-  0x07, 0xae, 0x55, 0x12, 0x9c, 0x76, 0x86, 0xdb, 0xbe, 0x7c, 0x65, 0xd3,
-  0x9e, 0x2a, 0x40, 0xcd, 0x36, 0x00, 0x91, 0x72, 0x22, 0x0a, 0xcd, 0x04,
-  0x79, 0x80, 0x9d, 0xd7, 0xe4, 0xb3, 0x1d, 0x06, 0xeb, 0x32, 0x27, 0x49,
-  0x2a, 0x23, 0x11, 0x52, 0x4e, 0x36, 0x5f, 0x20, 0x3d, 0x44, 0x39, 0xa0,
-  0x2f, 0x04, 0xe0, 0x1c, 0xed, 0xb9, 0x23, 0xf5, 0xd4, 0x6e, 0xb7, 0x8c,
-  0x91, 0xb3, 0x07, 0xf0, 0x80, 0x06, 0xf0, 0x43, 0xf8, 0xcc, 0x32, 0x6e,
-  0xa9, 0x59, 0x99, 0xc6, 0x76, 0xd8, 0x4e, 0x29, 0x25, 0x7a, 0xc6, 0x65,
-  0x9b, 0x5c, 0x2e, 0x2b, 0x30, 0x5e, 0x01, 0x5b, 0x14, 0xe4, 0x19, 0x6a,
-  0x95, 0x22, 0x74, 0x23, 0x9c, 0x06, 0x99, 0xda, 0xe6, 0xb8, 0x2c, 0x17,
-  0x38, 0xd7, 0x6c, 0x1f, 0x07, 0x46, 0x86, 0x14, 0xf7, 0x73, 0xde, 0x37,
-  0x2b, 0x9e, 0x99, 0x76, 0x67, 0xb9, 0x19, 0xd0, 0x3a, 0x00, 0x58, 0xb4,
-  0xd0, 0xb9, 0xf0, 0x42, 0x25, 0x61, 0x0b, 0xc0, 0xde, 0xae, 0x21, 0x1e,
-  0xd6, 0x0a, 0xeb, 0x32, 0x5d, 0xbe, 0x06, 0xfa, 0xc9, 0xe0, 0x7f, 0xc8,
-  0xca, 0x90, 0x78, 0x4e, 0xd1, 0x63, 0xa8, 0xd0, 0xb1, 0xf0, 0x90, 0x4b,
-  0x25, 0x99, 0x0f, 0x0c, 0x9f, 0x42, 0x43, 0x75, 0x1e, 0x36, 0xc3, 0x56,
-  0x73, 0x81, 0xc0, 0xff, 0x5e, 0xfb, 0x18, 0xb5, 0xad, 0xe2, 0xee, 0xc2,
-  0x2a, 0xb8, 0xb9, 0x35, 0x5b, 0xf2, 0x83, 0xa3, 0x05, 0x83, 0x01, 0xdb,
-  0x8b, 0xec, 0x2b, 0xaa, 0xc8, 0x78, 0x58, 0xa6, 0xfe, 0xb2, 0xaa, 0x2e,
-  0xb7, 0xa6, 0x23, 0x65, 0xe2, 0xb7, 0xa6, 0x0c, 0x4e, 0x64, 0x1d, 0x98,
-  0x17, 0x06, 0xef, 0xc4, 0x9c, 0xf1, 0x25, 0xf7, 0x30, 0x84, 0xdd, 0x9d,
-  0x7b, 0x38, 0x43, 0x59, 0x72, 0x7d, 0x60, 0x5f, 0x5e, 0xa2, 0xec, 0xd7,
-  0x9e, 0x58, 0x72, 0xda, 0xab, 0xc2, 0xcf, 0x6b, 0x76, 0x2c, 0xd5, 0xb4,
-  0xc6, 0x14, 0x06, 0xec, 0xd2, 0xa1, 0x43, 0xc6, 0xbf, 0xf2, 0xbb, 0xa2,
-  0x3c, 0xde, 0x53, 0x13, 0x43, 0x8e, 0xae, 0x17, 0xdb, 0xcb, 0xee, 0xce,
-  0x16, 0x0f, 0x66, 0x8b, 0x1b, 0x60, 0xb9, 0x4e, 0x48, 0xd2, 0x85, 0x81,
-  0x28, 0xd0, 0x90, 0x7f, 0x73, 0x51, 0x42, 0x00, 0x85, 0xef, 0xcc, 0x25,
-  0xf6, 0x18, 0xfe, 0x35, 0xba, 0x9a, 0xcc, 0x5d, 0xcb, 0xc5, 0x97, 0x4a,
-  0xd9, 0x9f, 0x35, 0xb7, 0x41, 0x7d, 0x2b, 0xf2, 0x19, 0x52, 0x1a, 0xdc,
-  0xfa, 0x5a, 0x53, 0x26, 0x30, 0xa2, 0xe6, 0x42, 0xbf, 0xb3, 0x99, 0x72,
-  0x40, 0xe7, 0x29, 0xc4, 0xe9, 0x7f, 0x7e, 0xf0, 0xf6, 0xeb, 0x23, 0x48,
-  0x02, 0x16, 0x5a, 0x32, 0x27, 0x6a, 0x9f, 0x2e, 0x27, 0x50, 0x85, 0xcc,
-  0x8a, 0x21, 0xfa, 0x0d, 0x90, 0xcb, 0x5a, 0x87, 0x11, 0xa5, 0x25, 0x41,
-  0xbc, 0xd8, 0x6e, 0x89, 0x69, 0x5b, 0x4b, 0xd4, 0xa2, 0x0a, 0x09, 0x82,
-  0x14, 0x46, 0x4a, 0x6d, 0x29, 0x81, 0x62, 0x30, 0x5e, 0xa4, 0x02, 0x46,
-  0x93, 0xfa, 0x60, 0x25, 0x62, 0x67, 0x19, 0xb6, 0xcf, 0xe2, 0x9a, 0x26,
-  0xb2, 0x58, 0x9d, 0xbe, 0x82, 0x4e, 0x3f, 0xf4, 0xad, 0x6a, 0x8c, 0xa5,
-  0xb1, 0xb3, 0xbd, 0xed, 0x4a, 0xeb, 0xa4, 0xb6, 0xc1, 0x80, 0x5b, 0x56,
-  0xc9, 0xf6, 0xe0, 0xf9, 0xf3, 0x55, 0x8c, 0xd0, 0x36, 0x0a, 0xe4, 0x93,
-  0xa7, 0x1f, 0xdd, 0xe6, 0x80, 0x1e, 0x5d, 0xd5, 0x66, 0x44, 0xa3, 0xa9,
-  0x73, 0xc0, 0x0e, 0xf2, 0x8a, 0x5a, 0xa9, 0x45, 0x2c, 0x3c, 0xec, 0xad,
-  0x81, 0xfb, 0xac, 0xb0, 0x6a, 0x0d, 0x2d, 0xe5, 0x9a, 0xc3, 0xc4, 0x06,
-  0x44, 0x86, 0x1a, 0x83, 0x16, 0x14, 0x52, 0x98, 0x5b, 0x2f, 0xee, 0x47,
-  0x2d, 0x8c, 0xa7, 0xc0, 0xaf, 0x58, 0xa2, 0xcb, 0x70, 0x36, 0x2a, 0x12,
-  0xbc, 0x3b, 0x23, 0xfb, 0xdf, 0xf1, 0xdb, 0xaf, 0xd9, 0x1c, 0x62, 0x74,
-  0x7b, 0xd8, 0xd2, 0xb7, 0x3a, 0x9a, 0xfe, 0x3b, 0xae, 0x91, 0x43, 0x01,
-  0xa5, 0x08, 0xdf, 0xe0, 0xfa, 0xba, 0x79, 0xc1, 0xac, 0xc0, 0xed, 0xfe,
-  0x0a, 0x5b, 0xe5, 0x45, 0x32, 0xf0, 0x84, 0x13, 0x29, 0x90, 0x43, 0x92,
-  0xc9, 0xfc, 0x5e, 0x35, 0x23, 0xe9, 0x01, 0xad, 0xab, 0x67, 0xc6, 0x36,
-  0xcb, 0x7a, 0x2e, 0xab, 0xe7, 0xa0, 0xa0, 0x40, 0x36, 0x89, 0x74, 0xc9,
-  0xdd, 0xe0, 0x7c, 0x77, 0x24, 0x91, 0x8f, 0x1b, 0x4a, 0xcb, 0xd4, 0xd9,
-  0xae, 0xe8, 0x48, 0x92, 0x55, 0x5f, 0x6d, 0x3f, 0x5d, 0x33, 0x24, 0x8c,
-  0x8a, 0xa9, 0xcf, 0xd5, 0x69, 0xb7, 0x51, 0xfd, 0xb5, 0x2c, 0xff, 0xf5,
-  0x71, 0x3e, 0x30, 0x42, 0x3a, 0xa8, 0x74, 0x53, 0x15, 0x53, 0x67, 0xd3,
-  0x90, 0x11, 0x47, 0x1d, 0x21, 0x17, 0xfc, 0x3e, 0x77, 0x9d, 0xc6, 0xbb,
-  0xe3, 0xf7, 0x75, 0x69, 0x22, 0x07, 0x80, 0x44, 0x5a, 0x29, 0xa1, 0x64,
-  0x53, 0x4c, 0x55, 0x97, 0x21, 0x29, 0x1c, 0x9c, 0x23, 0x6f, 0x8b, 0x25,
-  0x6b, 0x89, 0x64, 0xb2, 0xa3, 0xbe, 0x12, 0xd1, 0x10, 0x00, 0xf7, 0x71,
-  0x79, 0xdd, 0x20, 0x34, 0xf4, 0x52, 0xa0, 0xa9, 0x89, 0xa5, 0x91, 0x50,
-  0x23, 0x68, 0x56, 0x0e, 0xe0, 0xbb, 0x5a, 0x0a, 0x46, 0x27, 0xe2, 0x13,
-  0xcc, 0xe0, 0xd3, 0xfa, 0x1a, 0x15, 0xb3, 0xad, 0x29, 0x2a, 0x14, 0xaf,
-  0xd0, 0xbd, 0xa0, 0x55, 0x1b, 0x79, 0x8a, 0x85, 0x29, 0x08, 0xd7, 0xad,
-  0xa5, 0x68, 0xaf, 0xc0, 0xda, 0x1a, 0x19, 0xe1, 0xb7, 0xc8, 0x14, 0x3f,
-  0x0a, 0x17, 0x50, 0x6d, 0xe9, 0x0f, 0xda, 0xe3, 0x9d, 0x8f, 0xe1, 0x11,
-  0xcb, 0xbc, 0x67, 0x3d, 0xf9, 0xd8, 0x13, 0xc7, 0xf2, 0x7b, 0xc4, 0xaf,
-  0x88, 0x43, 0xe7, 0x31, 0xb2, 0x28, 0xa9, 0xb7, 0xad, 0x69, 0xbe, 0x2e,
-  0x00, 0xa3, 0x0f, 0x34, 0x33, 0xe0, 0x3d, 0x74, 0xb6, 0x0b, 0x0a, 0x3b,
-  0xb0, 0x76, 0x19, 0xd2, 0x4c, 0xd9, 0xbb, 0x8f, 0x4d, 0xe2, 0xaa, 0x41,
-  0xcd, 0x38, 0x13, 0x85, 0x64, 0x0b, 0x56, 0x7f, 0xe1, 0xeb, 0xe6, 0x54,
-  0x39, 0xf4, 0x89, 0x19, 0xf2, 0x00, 0x19, 0xd6, 0xa0, 0x41, 0x5c, 0xfb,
-  0xe8, 0x82, 0xcc, 0x08, 0xb8, 0xfa, 0x54, 0x1f, 0xfd, 0xee, 0xe8, 0xfc,
-  0xab, 0xd3, 0xd1, 0x91, 0xd9, 0x8f, 0x57, 0x47, 0x5f, 0xbd, 0x23, 0xae,
-  0x45, 0xd4, 0xc1, 0xa6, 0x67, 0x60, 0x25, 0xb3, 0xfd, 0x0b, 0xc0, 0x66,
-  0x14, 0xb0, 0x07, 0x32, 0x65, 0x39, 0xa8, 0x6f, 0x13, 0x78, 0x45, 0xc4,
-  0x63, 0xcc, 0xe1, 0x59, 0xc6, 0xb6, 0xca, 0x1c, 0x69, 0x08, 0x0e, 0x1b,
-  0x9d, 0xa2, 0xfd, 0x0a, 0xaa, 0xeb, 0xd0, 0x28, 0x2c, 0x94, 0xa2, 0xb8,
-  0xd6, 0xfb, 0xce, 0xa8, 0x79, 0xcb, 0x96, 0x69, 0x39, 0x7c, 0xa6, 0xd9,
-  0x71, 0x09, 0xa5, 0x1d, 0x05, 0x2a, 0x40, 0xbc, 0x87, 0x56, 0x8e, 0x16,
-  0x58, 0xce, 0x59, 0xc9, 0xb7, 0x26, 0x4a, 0xd7, 0x53, 0xdb, 0xb8, 0xc7,
-  0xf3, 0x06, 0x57, 0x38, 0x2b, 0x14, 0x1c, 0xc9, 0x08, 0x4c, 0x23, 0x78,
-  0x3e, 0xa7, 0x9c, 0x63, 0x3e, 0x93, 0xeb, 0x00, 0xdc, 0xaf, 0xce, 0x18,
-  0x12, 0x8e, 0x6f, 0x6d, 0xf1, 0x87, 0x73, 0xa8, 0xaf, 0xd4, 0x9b, 0xd9,
-  0x10, 0x25, 0xf8, 0x0e, 0xf3, 0x94, 0xf2, 0xab, 0x5c, 0x67, 0x5e, 0xab,
-  0x20, 0x62, 0xe5, 0xbd, 0xa0, 0x1c, 0x21, 0x9d, 0xdb, 0xd5, 0xac, 0xe7,
-  0x82, 0x67, 0x4a, 0x76, 0x0e, 0x16, 0x04, 0x14, 0xa4, 0x1a, 0x20, 0x80,
-  0xed, 0x12, 0xec, 0x4e, 0x40, 0xe1, 0xb3, 0x4b, 0x19, 0x05, 0x9e, 0x0a,
-  0xb9, 0xba, 0x30, 0xbd, 0x4a, 0xb3, 0xe2, 0x60, 0x72, 0xf9, 0x44, 0xcc,
-  0x5c, 0x25, 0x10, 0x8f, 0xb6, 0x14, 0x2e, 0x01, 0x26, 0xbe, 0xf0, 0xbc,
-  0x73, 0xeb, 0x5c, 0x93, 0x9e, 0xce, 0xa8, 0xe7, 0x38, 0x59, 0x5b, 0x5b,
-  0x7b, 0x75, 0x74, 0x71, 0x70, 0x7c, 0x72, 0xf4, 0x2a, 0x39, 0x7e, 0xfb,
-  0xfa, 0xf4, 0xfc, 0xcd, 0xc1, 0x85, 0x84, 0x63, 0xbc, 0xb2, 0x16, 0x39,
-  0x87, 0xdb, 0x24, 0x20, 0xf5, 0x9e, 0xb5, 0x0e, 0x24, 0x6c, 0x76, 0xf1,
-  0x4a, 0x0a, 0x12, 0xf0, 0x32, 0x64, 0xad, 0x35, 0x58, 0x4b, 0x24, 0x8c,
-  0xc3, 0xe1, 0x5c, 0x91, 0x5c, 0xb0, 0x65, 0x7d, 0xef, 0x43, 0x5d, 0x4e,
-  0x0b, 0xc6, 0x4a, 0x45, 0x2a, 0x1f, 0x6c, 0x2a, 0x25, 0x1b, 0xc8, 0xd5,
-  0x2c, 0x93, 0x3b, 0x11, 0x20, 0xca, 0x48, 0xf3, 0x67, 0xe4, 0xe3, 0xe3,
-  0xad, 0x36, 0x0c, 0x33, 0x0c, 0x2d, 0x0a, 0x7b, 0x96, 0x02, 0xf8, 0xc4,
-  0x87, 0xd7, 0xb8, 0x2c, 0x11, 0x55, 0xe2, 0xb7, 0x69, 0x81, 0x23, 0xb0,
-  0xa3, 0x84, 0x13, 0x8c, 0xe8, 0x1f, 0x86, 0x89, 0xf2, 0xf6, 0x57, 0x20,
-  0xed, 0x66, 0x14, 0x7c, 0x84, 0x98, 0x22, 0xc2, 0x49, 0xad, 0xcd, 0x4e,
-  0xd9, 0xb3, 0x0e, 0xec, 0x56, 0xcb, 0xb0, 0xd5, 0x3b, 0x27, 0x35, 0x15,
-  0xfd, 0xa6, 0x36, 0xac, 0xbf, 0xde, 0x48, 0x4c, 0x83, 0x63, 0xa9, 0xb5,
-  0x49, 0x6b, 0x41, 0x40, 0xf6, 0xf4, 0xb3, 0x70, 0xd0, 0x89, 0x12, 0x40,
-  0xea, 0x34, 0xfe, 0xdc, 0x4c, 0x59, 0x5c, 0x54, 0x72, 0xda, 0xdc, 0xb9,
-  0x55, 0x74, 0x96, 0xc1, 0x2b, 0xf3, 0xd0, 0x74, 0x39, 0x5f, 0x48, 0xb5,
-  0x68, 0x95, 0xa8, 0x61, 0xcb, 0xd3, 0x2d, 0x64, 0xa1, 0x0d, 0xc2, 0x07,
-  0x0c, 0x3f, 0xaf, 0x65, 0x0d, 0x78, 0x1e, 0xa0, 0xef, 0x46, 0x5d, 0x81,
-  0xa4, 0x23, 0x3b, 0xef, 0x9d, 0x96, 0x80, 0xb1, 0x31, 0x47, 0x2d, 0xc9,
-  0x05, 0x0b, 0x32, 0xb2, 0xcf, 0x62, 0x25, 0xbd, 0x17, 0x52, 0x17, 0xa2,
-  0x84, 0xf5, 0xdf, 0xd0, 0x7a, 0x32, 0x44, 0xb2, 0xd2, 0xa0, 0x5c, 0x15,
-  0xa1, 0xf3, 0xb1, 0x35, 0x29, 0xff, 0xc5, 0x76, 0x48, 0x8f, 0xcf, 0xe9,
-  0xb5, 0x6b, 0x07, 0x99, 0xdb, 0x1d, 0x81, 0x70, 0x71, 0xc3, 0x4f, 0xee,
-  0xb5, 0x46, 0x37, 0xd5, 0xc3, 0x60, 0x44, 0xcc, 0x35, 0x49, 0x51, 0x17,
-  0x4e, 0x09, 0x87, 0x98, 0x92, 0xef, 0x12, 0x10, 0xd7, 0xe5, 0x0d, 0xe9,
-  0xf2, 0x48, 0xee, 0x1c, 0xdf, 0xfb, 0x59, 0x78, 0x1c, 0x7c, 0x26, 0x25,
-  0x99, 0xc0, 0xf4, 0x8a, 0x35, 0x85, 0xf3, 0xd5, 0x97, 0x34, 0x84, 0x11,
-  0xdc, 0x9f, 0xeb, 0x02, 0x80, 0xc9, 0x93, 0x52, 0x9d, 0xa5, 0x35, 0x14,
-  0x2a, 0xe4, 0xe2, 0xf0, 0x9d, 0x61, 0xcd, 0xb0, 0xae, 0xf2, 0x85, 0x07,
-  0x8c, 0x05, 0x16, 0xcd, 0x08, 0xa1, 0x29, 0xc1, 0x66, 0xe8, 0xa1, 0xe0,
-  0xb8, 0x7b, 0xdb, 0x8a, 0x3a, 0x38, 0x4c, 0x33, 0x08, 0x9e, 0x96, 0x68,
-  0xd2, 0xb3, 0xb2, 0xe6, 0xf3, 0x06, 0x09, 0xbf, 0x47, 0xac, 0xa7, 0x07,
-  0x32, 0xe8, 0x2d, 0xae, 0x4d, 0x1f, 0xbd, 0xe4, 0x8a, 0x74, 0xa4, 0xb1,
-  0x19, 0x7a, 0xc0, 0x40, 0xa7, 0xfc, 0xf8, 0xcb, 0xf3, 0xf4, 0x32, 0xcd,
-  0x66, 0x7f, 0xd8, 0xdd, 0x1e, 0xa5, 0x57, 0xcb, 0x59, 0xfa, 0x47, 0xbc,
-  0xf8, 0xf2, 0xc9, 0x93, 0xdd, 0xed, 0xcf, 0x3e, 0xdf, 0xee, 0x75, 0xa3,
-  0x0f, 0x24, 0x22, 0x4b, 0x23, 0x6c, 0xe8, 0x26, 0x03, 0xdf, 0x45, 0x3f,
-  0xc3, 0xc9, 0x55, 0x0e, 0xa5, 0x8e, 0x04, 0x25, 0x59, 0x83, 0x94, 0xb5,
-  0x49, 0xb0, 0x49, 0x81, 0x17, 0x34, 0x37, 0xae, 0xa1, 0xeb, 0xdf, 0xef,
-  0xec, 0x33, 0x2b, 0xbb, 0x82, 0xf1, 0x3d, 0x65, 0x8a, 0x4d, 0x5e, 0xe4,
-  0x85, 0xb9, 0x81, 0xbe, 0x48, 0x9a, 0xf4, 0xca, 0xd2, 0x2a, 0x5a, 0xd0,
-  0x2c, 0x0a, 0xeb, 0xdf, 0xbc, 0x24, 0x22, 0xcf, 0x0b, 0x2e, 0x5a, 0x43,
-  0x25, 0x59, 0x20, 0x64, 0x2d, 0xb2, 0x8a, 0x60, 0x27, 0xca, 0xab, 0x2a,
-  0x9d, 0x6b, 0xae, 0x0a, 0xbd, 0x4f, 0x61, 0x6b, 0xc3, 0xc5, 0x0c, 0x79,
-  0x14, 0x1a, 0x7b, 0xc6, 0x12, 0x2f, 0x13, 0xdc, 0x6c, 0x51, 0x3b, 0xb8,
-  0x3d, 0xbe, 0x6e, 0xfc, 0x62, 0x2f, 0x66, 0xb1, 0x60, 0x53, 0xe9, 0x61,
-  0x56, 0xcc, 0x32, 0xc0, 0xcd, 0xa6, 0x3a, 0xd3, 0x21, 0x7e, 0x07, 0xce,
-  0x43, 0xca, 0xc0, 0x8a, 0xbd, 0x05, 0x67, 0x56, 0x33, 0x1a, 0x47, 0x4f,
-  0x13, 0x1b, 0xf2, 0xd6, 0xbc, 0x52, 0x17, 0xb3, 0x99, 0xbc, 0x50, 0x2b,
-  0xd1, 0xce, 0x17, 0x2f, 0x41, 0x10, 0x3b, 0x5f, 0xfc, 0xd1, 0x7e, 0xb6,
-  0x2b, 0x9f, 0xed, 0x7e, 0xf1, 0xc7, 0xe1, 0x10, 0xe3, 0x23, 0x0a, 0x59,
-  0xd7, 0xaf, 0xd7, 0x05, 0x55, 0x25, 0x95, 0x23, 0xcc, 0x7f, 0x59, 0x98,
-  0x63, 0xde, 0xeb, 0x9e, 0xf6, 0xec, 0xaf, 0x72, 0x5f, 0x3c, 0xaa, 0x96,
-  0x6f, 0xe5, 0xb5, 0x8f, 0x5f, 0x5d, 0xc7, 0x16, 0xdd, 0xfa, 0x41, 0xd0,
-  0x8e, 0x44, 0x5f, 0xe2, 0xe5, 0x3f, 0x11, 0xa5, 0xfe, 0x69, 0x2d, 0x11,
-  0xef, 0x26, 0x6d, 0xc7, 0x3d, 0x1c, 0x1e, 0x4a, 0xb6, 0xe6, 0xd1, 0x54,
-  0x8b, 0xcb, 0x50, 0xcb, 0x94, 0xfd, 0x41, 0x77, 0x20, 0x07, 0x8d, 0x63,
-  0xb0, 0x7f, 0x16, 0xfc, 0x0a, 0x9b, 0x36, 0xa3, 0xcf, 0x70, 0xa6, 0x8c,
-  0x91, 0x31, 0x50, 0x13, 0x85, 0x2b, 0x9d, 0xfc, 0xf0, 0x83, 0x08, 0x54,
-  0xe6, 0x17, 0x19, 0xf9, 0xb5, 0xe1, 0x45, 0x53, 0xc3, 0xde, 0xe6, 0xa8,
-  0x47, 0x4f, 0x80, 0x82, 0x66, 0x1e, 0x72, 0xe5, 0x5f, 0xca, 0x4c, 0xb9,
-  0x11, 0xb3, 0xb5, 0x07, 0xa3, 0xc3, 0xe3, 0x63, 0x04, 0x9a, 0x62, 0x51,
-  0x8f, 0x98, 0x8d, 0x81, 0x36, 0x37, 0x10, 0xe2, 0xe1, 0xc2, 0x12, 0x7d,
-  0xd2, 0xa7, 0xbd, 0xc3, 0xb6, 0x83, 0xfa, 0x4d, 0x63, 0xaa, 0x80, 0xcb,
-  0x56, 0x82, 0x66, 0x59, 0xca, 0x79, 0xd9, 0xe3, 0x07, 0xaf, 0xf2, 0x9e,
-  0x38, 0xb1, 0xf8, 0x93, 0x9e, 0x83, 0xc9, 0xe1, 0xfd, 0xc0, 0xa6, 0xbd,
-  0x64, 0xd1, 0x29, 0xff, 0x47, 0xf6, 0x72, 0x67, 0x3b, 0xfe, 0x04, 0xbc,
-  0xb6, 0x84, 0x1d, 0xfe, 0xd2, 0x39, 0x04, 0x1f, 0x7a, 0x3e, 0x9f, 0xf2,
-  0xd3, 0xd7, 0xf9, 0x74, 0x6a, 0xee, 0x84, 0xdb, 0x74, 0xb6, 0x34, 0xb4,
-  0x30, 0xa6, 0x1b, 0x96, 0xfe, 0x7f, 0xc5, 0x38, 0xe0, 0xb1, 0x92, 0x67,
-  0xeb, 0xe5, 0x78, 0x9e, 0xb7, 0x06, 0xbc, 0x45, 0x13, 0xfc, 0x82, 0x26,
-  0xfc, 0x7d, 0x66, 0xa9, 0x23, 0x23, 0xd1, 0x8e, 0x65, 0xbf, 0xf5, 0xcb,
-  0xb2, 0x1c, 0xa7, 0xd5, 0xba, 0xb8, 0x73, 0x74, 0x9c, 0xeb, 0x3b, 0xbb,
-  0x4f, 0xf6, 0x9e, 0xae, 0x0f, 0x45, 0x4e, 0x03, 0x8b, 0x68, 0x7c, 0x34,
-  0x0a, 0x6e, 0xc2, 0x82, 0x28, 0x78, 0xb8, 0xad, 0x31, 0xe7, 0x2a, 0x71,
-  0x31, 0xea, 0xee, 0x25, 0xf7, 0xf6, 0x47, 0xea, 0xe7, 0x25, 0xba, 0xf8,
-  0x63, 0x3e, 0x7d, 0x69, 0x67, 0xf8, 0x47, 0x9a, 0xcb, 0x4b, 0x99, 0x84,
-  0xd9, 0x57, 0xcd, 0x41, 0xac, 0xfd, 0x2a, 0x34, 0x8f, 0x6d, 0xae, 0x6e,
-  0xe2, 0x1a, 0x26, 0x8d, 0x08, 0x86, 0xc1, 0x94, 0xbd, 0x1f, 0x90, 0x56,
-  0x5d, 0x0e, 0xde, 0xd6, 0x87, 0x81, 0x69, 0x65, 0x40, 0xad, 0x0c, 0x1c,
-  0xc3, 0x06, 0xe4, 0xfb, 0x80, 0x36, 0xa2, 0x2f, 0x89, 0x98, 0x33, 0x58,
-  0x59, 0x44, 0x14, 0x28, 0x4b, 0x04, 0x01, 0x1c, 0x7e, 0x7d, 0xbc, 0x5e,
-  0xfb, 0xc5, 0x17, 0xfa, 0x31, 0xfb, 0xb4, 0x0d, 0x31, 0x9c, 0xa4, 0x0b,
-  0x3a, 0xfd, 0x6b, 0x89, 0xd4, 0x4e, 0x4c, 0x29, 0x8e, 0x84, 0xfa, 0xe5,
-  0x9c, 0x69, 0xd3, 0x99, 0x82, 0xe2, 0x92, 0xc5, 0xbb, 0x62, 0x30, 0x7a,
-  0xaf, 0x19, 0x80, 0x33, 0x73, 0x40, 0x09, 0x7c, 0x3e, 0x0b, 0x9b, 0x70,
-  0x39, 0x78, 0x6d, 0x9d, 0x9e, 0x36, 0xc1, 0x4f, 0x1e, 0x35, 0x5f, 0x31,
-  0x3f, 0x51, 0x16, 0xd1, 0x83, 0x02, 0xec, 0xf8, 0x84, 0xcf, 0x3d, 0x90,
-  0xf8, 0x3f, 0xce, 0x24, 0x4d, 0x93, 0xcd, 0x26, 0x2c, 0x18, 0x12, 0xff,
-  0x7c, 0xf1, 0xa5, 0xe2, 0x39, 0x7f, 0x91, 0xa0, 0xfe, 0x29, 0xbf, 0x25,
-  0x7e, 0x47, 0x31, 0x40, 0xb1, 0xcd, 0x16, 0x2f, 0x89, 0x7a, 0x60, 0x5d,
-  0x60, 0x5e, 0x34, 0x8e, 0x08, 0x06, 0x3e, 0xea, 0xfe, 0xf8, 0x5e, 0x8c,
-  0x0d, 0xd4, 0xc2, 0xfa, 0x5f, 0x70, 0x08, 0x5e, 0xd0, 0x36, 0xe0, 0xeb,
-  0x2f, 0xd6, 0xd7, 0x6c, 0x1d, 0x0c, 0x2b, 0xb9, 0x77, 0x1c, 0xc8, 0x4c,
-  0xa0, 0xfe, 0x7c, 0xca, 0x4b, 0x0b, 0x5e, 0xcc, 0xd2, 0x18, 0x41, 0x74,
-  0xa0, 0x48, 0xb8, 0x91, 0xa6, 0x66, 0x94, 0x9d, 0xdf, 0x32, 0x50, 0x73,
-  0xe3, 0x19, 0x65, 0x37, 0x90, 0xf4, 0xb8, 0x4e, 0xd1, 0xaa, 0x78, 0x6f,
-  0xdd, 0x62, 0x21, 0xc3, 0x66, 0x0a, 0x86, 0x57, 0x65, 0x8a, 0x28, 0xb9,
-  0x26, 0xb8, 0x52, 0x4e, 0x9a, 0xf7, 0x27, 0x56, 0x7b, 0xc2, 0x83, 0x4b,
-  0x73, 0x64, 0xd4, 0x9a, 0xe0, 0x88, 0xbc, 0xa6, 0x1c, 0x62, 0xe9, 0xf4,
-  0x25, 0x2d, 0xf7, 0xce, 0xf0, 0x2a, 0xbf, 0xe4, 0xc5, 0x30, 0x2c, 0xf2,
-  0x2a, 0xdb, 0x32, 0x7f, 0xf6, 0xcd, 0xe7, 0xbb, 0x24, 0x95, 0xd1, 0x2f,
-  0x4f, 0x10, 0x8f, 0xe5, 0xdf, 0xfd, 0xde, 0xd9, 0xb0, 0xe7, 0x82, 0x7e,
-  0xc9, 0xed, 0x9d, 0x2f, 0x5e, 0x1d, 0x19, 0xe5, 0x40, 0x8b, 0x1e, 0xb4,
-  0xaa, 0xbd, 0xf9, 0x41, 0x25, 0xc0, 0xb9, 0x2f, 0x21, 0x9f, 0xd4, 0x2e,
-  0x78, 0x44, 0x02, 0x29, 0x44, 0x50, 0x27, 0xb9, 0x3b, 0x17, 0xf3, 0x0c,
-  0x65, 0x01, 0xe1, 0x66, 0xcd, 0xee, 0x36, 0xfb, 0x7e, 0xa4, 0xad, 0x61,
-  0xef, 0xb7, 0x94, 0x57, 0x4f, 0x60, 0x1d, 0xae, 0x94, 0x15, 0x75, 0xbf,
-  0x41, 0xcd, 0xae, 0x25, 0x7e, 0xa2, 0x31, 0xb6, 0x39, 0xef, 0xee, 0xa0,
-  0x57, 0x32, 0x56, 0xa5, 0x4d, 0xf2, 0xa0, 0x6d, 0x52, 0x37, 0xd9, 0xac,
-  0x86, 0xae, 0x2e, 0x90, 0x8c, 0xda, 0xab, 0xa2, 0x66, 0xa3, 0xa3, 0x75,
-  0xff, 0xec, 0x97, 0x93, 0x26, 0x33, 0xba, 0x2e, 0x41, 0x68, 0xcd, 0x99,
-  0xcf, 0x1d, 0xcd, 0xb9, 0x76, 0x26, 0x48, 0x78, 0x36, 0xe0, 0xdb, 0x53,
-  0x44, 0xa2, 0xc1, 0xeb, 0x61, 0x72, 0x82, 0x88, 0xf1, 0x3a, 0x65, 0x7c,
-  0x16, 0xbd, 0x61, 0x95, 0x1a, 0x0c, 0xe9, 0xd4, 0x8a, 0x26, 0x47, 0xef,
-  0x11, 0x28, 0x86, 0x92, 0x54, 0xae, 0x80, 0xe8, 0x4c, 0x5c, 0x2c, 0x5f,
-  0x88, 0x3c, 0xd2, 0x87, 0x2d, 0xdc, 0x3e, 0x07, 0x9b, 0x3f, 0xdb, 0xfd,
-  0x90, 0xfe, 0x65, 0x09, 0xd6, 0x6b, 0xc4, 0x07, 0xbd, 0xf6, 0xd9, 0xba,
-  0x3d, 0x04, 0x1c, 0x52, 0x99, 0xb1, 0xd1, 0x85, 0xb0, 0x19, 0x08, 0x26,
-  0x06, 0x3e, 0x61, 0xd3, 0x1a, 0xa8, 0x0c, 0x48, 0xd7, 0x86, 0x8c, 0x7a,
-  0xd0, 0x1b, 0x67, 0x99, 0x55, 0xae, 0xa5, 0x14, 0xa0, 0x0d, 0x37, 0x87,
-  0x2d, 0x46, 0x6a, 0x76, 0x58, 0x77, 0x1d, 0x0d, 0x92, 0xc6, 0x95, 0xde,
-  0x9a, 0x5f, 0x48, 0x38, 0x1b, 0x57, 0x66, 0xd7, 0xb3, 0x8a, 0xaf, 0x06,
-  0x8e, 0x11, 0x2a, 0x99, 0x93, 0xb0, 0x9a, 0xf2, 0xe6, 0x24, 0x51, 0x9c,
-  0x9b, 0x4b, 0x27, 0x2a, 0x6a, 0x64, 0x26, 0xa6, 0x28, 0x96, 0x11, 0x96,
-  0x87, 0xe4, 0x29, 0xbe, 0xe5, 0x78, 0x6d, 0x29, 0x57, 0x3e, 0xa1, 0xc5,
-  0x69, 0x1d, 0x59, 0xef, 0x09, 0x7e, 0x75, 0x8d, 0xd1, 0xb7, 0xd6, 0x69,
-  0x09, 0xd6, 0xfb, 0xc9, 0x3a, 0x0d, 0x95, 0xbe, 0x58, 0xc7, 0x7a, 0xe2,
-  0x63, 0x6f, 0xf9, 0xd6, 0x87, 0x91, 0x53, 0x48, 0xcf, 0xbc, 0xfc, 0xb2,
-  0xb5, 0x4a, 0xf8, 0x5c, 0x9b, 0x7a, 0xc9, 0x69, 0x26, 0x81, 0xcc, 0xad,
-  0xef, 0x7a, 0xed, 0xbf, 0x3c, 0x34, 0xad, 0x00, 0x56, 0xdc, 0x0b, 0x73,
-  0x9d, 0xd8, 0xcf, 0x72, 0xa4, 0xcc, 0x06, 0x0d, 0x3d, 0x7e, 0x8a, 0x2f,
-  0x94, 0x15, 0xd9, 0x10, 0x50, 0xe6, 0x6e, 0x4c, 0x02, 0xca, 0x79, 0xcd,
-  0x6e, 0xe6, 0xac, 0xf7, 0xdd, 0x95, 0xb0, 0x32, 0x80, 0xe7, 0xec, 0x0c,
-  0x91, 0x43, 0xe9, 0x8a, 0xf8, 0xda, 0x06, 0xac, 0xf2, 0xde, 0xc3, 0x82,
-  0xf6, 0x6c, 0x54, 0xae, 0xaa, 0xf4, 0xba, 0xca, 0x31, 0xde, 0xb5, 0xc8,
-  0x27, 0x00, 0xcf, 0x7e, 0xf9, 0xe5, 0xb4, 0xbc, 0x22, 0xce, 0xd5, 0x37,
-  0x07, 0x8d, 0x7e, 0x22, 0x20, 0x79, 0x57, 0x3a, 0xe5, 0x01, 0xe3, 0xac,
-  0xb0, 0x14, 0xaf, 0x7f, 0xaf, 0x08, 0x51, 0x7d, 0x4d, 0xa6, 0xd0, 0x89,
-  0xb4, 0x6d, 0x9b, 0xe6, 0xfd, 0x30, 0xed, 0xdb, 0x2f, 0xfc, 0xbe, 0x74,
-  0x71, 0x52, 0x69, 0x19, 0xb2, 0x91, 0xe1, 0x14, 0x0d, 0x5f, 0xe5, 0xe8,
-  0xb8, 0x44, 0xa0, 0x5b, 0x43, 0xa9, 0xd0, 0x59, 0xc3, 0xf7, 0xd6, 0x4c,
-  0x12, 0xfb, 0xd6, 0xbf, 0x5c, 0xe7, 0x1c, 0x81, 0xf5, 0x17, 0xeb, 0xe0,
-  0x60, 0xc4, 0x97, 0xb4, 0xda, 0x9d, 0x5c, 0x4e, 0xeb, 0x7c, 0x2b, 0x0e,
-  0x58, 0x76, 0x10, 0x5c, 0x3f, 0x77, 0x40, 0x70, 0x2d, 0x3b, 0x35, 0xd2,
-  0x0f, 0x9e, 0x84, 0x99, 0x80, 0x28, 0x97, 0x47, 0x45, 0x40, 0xa5, 0xe3,
-  0x86, 0x03, 0x65, 0xe4, 0xd2, 0x85, 0x58, 0x06, 0xbc, 0x94, 0x9a, 0xe2,
-  0x17, 0xd8, 0xcc, 0xb9, 0x2c, 0x16, 0x94, 0x1d, 0x3f, 0x01, 0x54, 0xbb,
-  0x9c, 0xa5, 0x61, 0xf2, 0xae, 0xe0, 0x9a, 0x01, 0x19, 0x29, 0xcb, 0x79,
-  0x35, 0x59, 0xce, 0xc9, 0x54, 0x31, 0x21, 0x03, 0x19, 0x2e, 0x1e, 0x16,
-  0x0f, 0x5a, 0xee, 0x79, 0x7f, 0xc0, 0x6c, 0x1c, 0x61, 0x83, 0xb9, 0xf4,
-  0x8b, 0x50, 0x14, 0x0a, 0xc0, 0x12, 0x83, 0x38, 0xa4, 0x02, 0x8b, 0x9b,
-  0x22, 0x0c, 0x88, 0x3c, 0x83, 0x47, 0xaf, 0x8f, 0xce, 0xcf, 0x8f, 0xce,
-  0x69, 0xbd, 0x0f, 0x8a, 0x56, 0x79, 0x38, 0x0b, 0x91, 0xea, 0x5c, 0x8d,
-  0x1a, 0xf6, 0x1b, 0x82, 0xe5, 0x33, 0x2b, 0x4c, 0xa7, 0x53, 0x42, 0x13,
-  0x87, 0x06, 0xc1, 0x48, 0x41, 0x5c, 0x96, 0xdb, 0x37, 0x2f, 0x22, 0xec,
-  0xdb, 0xba, 0x0d, 0xfc, 0xfa, 0x8c, 0x9e, 0x6c, 0xe1, 0x5a, 0xa8, 0xa4,
-  0xfe, 0xe8, 0x52, 0x93, 0xf2, 0xaf, 0xb3, 0x96, 0x98, 0x3a, 0x94, 0x48,
-  0xdd, 0x4c, 0x9c, 0xe9, 0x33, 0x6b, 0x9f, 0xc0, 0x94, 0x2f, 0xe9, 0x8c,
-  0x92, 0xee, 0x84, 0xc5, 0xa8, 0x9b, 0xe5, 0x22, 0x9f, 0x5a, 0x6b, 0xaf,
-  0xf9, 0xdc, 0x88, 0x7f, 0x09, 0x9f, 0xf2, 0x5a, 0x63, 0x5d, 0xe0, 0xd5,
-  0x54, 0x63, 0x84, 0x6f, 0x6d, 0xeb, 0x20, 0xf5, 0x26, 0xc8, 0x97, 0xe3,
-  0xa0, 0x31, 0xad, 0x8e, 0xd4, 0xce, 0x2e, 0x17, 0xda, 0xcf, 0x60, 0x65,
-  0x24, 0x6e, 0xa1, 0xe1, 0x37, 0x3e, 0x67, 0x20, 0x5b, 0xd6, 0xdc, 0xc5,
-  0xbb, 0x53, 0x08, 0xdb, 0x3e, 0x03, 0xa1, 0x20, 0xa9, 0xb4, 0xda, 0x4f,
-  0x7e, 0xac, 0xf3, 0xc9, 0xcf, 0xee, 0xf2, 0x40, 0xfa, 0x4f, 0xbb, 0x72,
-  0x1c, 0x96, 0x4e, 0x16, 0x4a, 0x94, 0x61, 0x4e, 0xe6, 0x7e, 0x37, 0x3a,
-  0x3a, 0x4f, 0x0e, 0xbe, 0x26, 0xbc, 0xdf, 0x7f, 0x71, 0x83, 0xe9, 0x39,
-  0xb9, 0x1d, 0xd6, 0x04, 0x91, 0x55, 0xd0, 0x4d, 0x32, 0x35, 0x85, 0x33,
-  0x32, 0x57, 0x6b, 0x67, 0x73, 0x2d, 0xb4, 0xed, 0xae, 0xfb, 0xf6, 0x1e,
-  0xae, 0x25, 0x8f, 0xee, 0xe2, 0xc7, 0xec, 0x21, 0x1d, 0x32, 0x7f, 0x17,
-  0x19, 0x17, 0x89, 0x5d, 0x12, 0xba, 0x37, 0x32, 0xfa, 0x3a, 0x50, 0x3b,
-  0x79, 0x97, 0x0e, 0x92, 0xf5, 0x37, 0xe5, 0x3f, 0x8c, 0x30, 0x90, 0x6e,
-  0x3d, 0x19, 0x6e, 0x27, 0x1b, 0xdf, 0xe7, 0xc5, 0xf3, 0xa7, 0x7f, 0x49,
-  0x8e, 0x37, 0xd7, 0x5b, 0xc1, 0xfc, 0x5c, 0x6b, 0x75, 0x9c, 0x16, 0x37,
-  0x76, 0xcb, 0x4e, 0x71, 0xb2, 0x39, 0xa8, 0x4e, 0x0b, 0xb0, 0x70, 0x7d,
-  0xe8, 0x95, 0x2d, 0x22, 0xf5, 0x53, 0xf2, 0x02, 0x92, 0xef, 0x2c, 0xbe,
-  0x35, 0x69, 0xf9, 0xe6, 0xa9, 0x29, 0x2d, 0xdd, 0xf3, 0xa7, 0x41, 0x13,
-  0x7b, 0xb6, 0x8d, 0x77, 0xdc, 0xc6, 0x2f, 0x6c, 0x62, 0x77, 0xb8, 0xbd,
-  0x9b, 0x6c, 0x9c, 0x8e, 0xb6, 0x76, 0x6d, 0x0b, 0x61, 0x13, 0xbb, 0x68,
-  0x82, 0x1e, 0x6a, 0xbf, 0xbc, 0x47, 0xfd, 0xff, 0x98, 0x15, 0x3f, 0x27,
-  0x1b, 0x3f, 0xec, 0xec, 0x98, 0x06, 0xfe, 0x92, 0x1c, 0x1c, 0xff, 0x90,
-  0xec, 0x0d, 0x4d, 0x63, 0x6f, 0xd3, 0x5b, 0x69, 0x4e, 0x60, 0x6b, 0x47,
-  0x68, 0xc4, 0x7c, 0x1f, 0xb4, 0xf1, 0xb4, 0xd3, 0xc6, 0x89, 0xd1, 0x0b,
-  0x3f, 0x98, 0x6b, 0x65, 0x7b, 0xf8, 0x64, 0x37, 0xc9, 0x9f, 0x7e, 0xfe,
-  0x4c, 0x1b, 0x92, 0x36, 0xf0, 0x7d, 0xdb, 0x5a, 0xc9, 0x80, 0x29, 0x46,
-  0xd4, 0x39, 0xfa, 0x60, 0x18, 0x1a, 0x58, 0x04, 0x6a, 0x62, 0x5c, 0xa7,
-  0x95, 0x56, 0x2b, 0xa6, 0xba, 0x06, 0x66, 0xa7, 0x04, 0x30, 0x3a, 0x83,
-  0xd9, 0xd2, 0x5c, 0x9c, 0xfb, 0xc1, 0x70, 0x48, 0x37, 0xd5, 0x47, 0xff,
-  0x92, 0xbc, 0x19, 0x1d, 0x1f, 0x99, 0x19, 0x6d, 0x9b, 0xa1, 0xb9, 0x35,
-  0xe4, 0x01, 0xe1, 0x2b, 0x2c, 0xee, 0x73, 0xe0, 0x8f, 0x4a, 0x1b, 0x7e,
-  0x5d, 0x5d, 0x10, 0x9d, 0xb9, 0xb8, 0x6b, 0xf4, 0x4b, 0x21, 0x29, 0x83,
-  0x83, 0x2b, 0x52, 0x21, 0xf8, 0xaa, 0x45, 0xd7, 0xdf, 0x96, 0x85, 0x39,
-  0x26, 0x55, 0x59, 0x51, 0xe4, 0xd4, 0x7a, 0x4b, 0x5a, 0xf8, 0xf6, 0xd5,
-  0x11, 0x27, 0xd5, 0xbf, 0x49, 0x0b, 0xc3, 0x23, 0x09, 0x1f, 0xab, 0xbe,
-  0x21, 0xff, 0x3f, 0xbb, 0x73, 0xf8, 0xfd, 0x93, 0xfb, 0xe2, 0x83, 0xd9,
-  0xc7, 0xcf, 0x86, 0x3b, 0x14, 0xb2, 0x4d, 0x5a, 0xef, 0xeb, 0x37, 0xe6,
-  0xef, 0x9d, 0xbd, 0xf5, 0x84, 0xbe, 0x6a, 0x6b, 0xf0, 0x7a, 0x5e, 0xd7,
-  0x0e, 0x4f, 0x4f, 0xbf, 0x3d, 0xe6, 0x00, 0x90, 0x43, 0x31, 0xab, 0x92,
-  0x70, 0x65, 0xb5, 0x62, 0xe6, 0xae, 0x46, 0x7b, 0x73, 0xd9, 0x4a, 0x70,
-  0xc6, 0xdd, 0x64, 0xd9, 0x82, 0xa2, 0x11, 0x9a, 0x0e, 0x47, 0x68, 0x84,
-  0x47, 0xdb, 0xd8, 0x26, 0x12, 0x7f, 0x3a, 0xe8, 0x8c, 0x4d, 0x6d, 0x4d,
-  0xb8, 0xe3, 0x7b, 0x0b, 0xdc, 0x91, 0xba, 0xc2, 0x87, 0x18, 0xa2, 0xcd,
-  0x56, 0x50, 0x13, 0x34, 0x97, 0x17, 0x31, 0x2f, 0x8a, 0xee, 0xbb, 0x3e,
-  0x32, 0xd2, 0x3d, 0x0f, 0x7a, 0x5f, 0xac, 0xb6, 0xeb, 0x1e, 0x8c, 0x34,
-  0x24, 0xda, 0x85, 0x14, 0xf5, 0x81, 0xe9, 0x58, 0x23, 0xea, 0x95, 0x37,
-  0xd7, 0xb0, 0x65, 0x23, 0x3c, 0xef, 0xed, 0xc1, 0x9b, 0xa3, 0x97, 0xdf,
-  0x1d, 0x9c, 0xbc, 0x3b, 0x32, 0xaf, 0xe4, 0x00, 0x6c, 0xb7, 0x21, 0x7c,
-  0x18, 0xe3, 0x3c, 0x47, 0x4d, 0xdf, 0xda, 0x88, 0x07, 0xeb, 0x6b, 0x1c,
-  0x5e, 0x9e, 0xf4, 0xe8, 0xad, 0x1d, 0x7e, 0xcd, 0xd0, 0x05, 0xfd, 0xb5,
-  0xcb, 0x7f, 0xed, 0xfe, 0xa5, 0xb7, 0xd9, 0x9a, 0x74, 0xa0, 0x25, 0x13,
-  0xbd, 0xdc, 0x71, 0x65, 0x27, 0x0a, 0x0f, 0xe2, 0xdc, 0x0d, 0x5e, 0x95,
-  0x9e, 0xfa, 0x68, 0xfc, 0xf2, 0x96, 0x1b, 0xe3, 0x7b, 0x5f, 0x07, 0xef,
-  0xd1, 0x4b, 0x2f, 0x21, 0x60, 0xf4, 0x36, 0xfb, 0x56, 0xe4, 0x80, 0xab,
-  0x9c, 0xda, 0xd0, 0x26, 0xb2, 0x0f, 0x0b, 0x8a, 0x88, 0xdc, 0xe8, 0xf1,
-  0x2f, 0x2f, 0x5f, 0x1d, 0x5c, 0x1c, 0xd1, 0x0b, 0xda, 0xbd, 0x56, 0x31,
-  0xd0, 0x34, 0x0a, 0x1a, 0xcf, 0x86, 0xb8, 0xa6, 0x5f, 0xd2, 0x84, 0x7a,
-  0x9b, 0xec, 0xcb, 0x80, 0x53, 0xbd, 0x33, 0x2e, 0xe2, 0x69, 0x1c, 0xb8,
-  0xed, 0x12, 0xd5, 0x6b, 0x8d, 0x58, 0xd9, 0xe8, 0xf1, 0x77, 0x3d, 0x6b,
-  0xc1, 0x35, 0x77, 0xf9, 0xfa, 0x6d, 0xa6, 0xee, 0xca, 0x29, 0x92, 0x2c,
-  0x82, 0xcc, 0x5a, 0x0e, 0x49, 0x73, 0xfb, 0x23, 0xce, 0x0a, 0xb6, 0x38,
-  0x79, 0xb8, 0xda, 0x76, 0xe3, 0x25, 0x13, 0x9e, 0x6c, 0x4c, 0x65, 0xb9,
-  0xb3, 0xfb, 0xe4, 0x2f, 0x58, 0xcf, 0x97, 0xbd, 0x2d, 0x73, 0x37, 0xf4,
-  0xfe, 0x42, 0x5d, 0xe7, 0x6a, 0xe3, 0xf4, 0x82, 0xc8, 0x49, 0x9f, 0x12,
-  0x8a, 0xe2, 0x70, 0x19, 0xda, 0x75, 0x0f, 0xe0, 0x07, 0x0b, 0x7a, 0xc7,
-  0x59, 0x62, 0x0a, 0x87, 0xa3, 0xc1, 0x03, 0xd8, 0xaf, 0x71, 0x76, 0x95,
-  0x17, 0x85, 0xad, 0x1d, 0xcc, 0xdd, 0xf9, 0xf7, 0x47, 0x9f, 0xdf, 0xe5,
-  0x39, 0x0a, 0x84, 0x10, 0xf5, 0x39, 0xbf, 0xd7, 0x44, 0xb2, 0xba, 0x56,
-  0x15, 0x97, 0xf7, 0x2c, 0x90, 0x8c, 0xc7, 0x62, 0xdb, 0x51, 0x65, 0x04,
-  0x32, 0x81, 0x61, 0x2d, 0xf7, 0x10, 0x94, 0x10, 0x6d, 0xe0, 0x07, 0x59,
-  0xe8, 0x9d, 0x9d, 0x8e, 0x29, 0xcb, 0xdc, 0xa6, 0xc6, 0x78, 0x5a, 0xb9,
-  0x5d, 0x7a, 0x3d, 0x7e, 0xb9, 0x87, 0xcd, 0x44, 0x17, 0x25, 0xaf, 0x65,
-  0x6d, 0x6d, 0x48, 0xf0, 0x36, 0xca, 0xb3, 0xed, 0x7d, 0xea, 0xe4, 0xa3,
-  0x61, 0x1a, 0xac, 0xd2, 0xb3, 0x7e, 0x6c, 0x58, 0x4d, 0x91, 0x55, 0x0f,
-  0x06, 0x58, 0x44, 0x9c, 0x51, 0x98, 0xa2, 0x17, 0xe9, 0x40, 0xef, 0x0c,
-  0x87, 0x43, 0x57, 0x81, 0x9c, 0xb6, 0x45, 0x7c, 0x50, 0x28, 0x5b, 0xe4,
-  0x21, 0xc5, 0x62, 0x8d, 0x37, 0x20, 0xcc, 0x43, 0xa0, 0xde, 0x94, 0xc0,
-  0x1b, 0xb1, 0x13, 0xd8, 0xa3, 0xe1, 0xd9, 0x38, 0xd6, 0xa5, 0xdb, 0x75,
-  0x85, 0x6d, 0xb8, 0x89, 0x6d, 0xc2, 0x03, 0x63, 0x63, 0xdb, 0xa3, 0x54,
-  0xd2, 0xb4, 0x7c, 0xaa, 0xb4, 0x6b, 0x41, 0x14, 0x4c, 0x01, 0xe4, 0xa0,
-  0x13, 0xce, 0x38, 0xe6, 0x45, 0x93, 0xa1, 0x48, 0x51, 0x35, 0x62, 0x72,
-  0xe5, 0x1d, 0x60, 0x10, 0xb8, 0x2a, 0xcd, 0xa2, 0x22, 0x4d, 0x8f, 0xd6,
-  0x58, 0x6f, 0x90, 0x85, 0x15, 0x9b, 0xa5, 0x1d, 0x01, 0x0e, 0x26, 0x9d,
-  0x19, 0xb2, 0x7f, 0xdf, 0x81, 0x0b, 0xaf, 0xa1, 0xb8, 0x67, 0x26, 0xda,
-  0xb3, 0x19, 0x2a, 0xdc, 0x5e, 0x32, 0x79, 0x67, 0xae, 0xa2, 0x68, 0xb3,
-  0x01, 0x43, 0xba, 0x68, 0x22, 0xa2, 0x72, 0x0f, 0x81, 0xf5, 0x78, 0xc8,
-  0x5f, 0x3e, 0xd1, 0x16, 0xad, 0xb3, 0xbc, 0xb3, 0x36, 0xee, 0x56, 0x6e,
-  0xb3, 0x2e, 0xb3, 0xa2, 0x6c, 0x5d, 0x66, 0xf0, 0x0c, 0xc7, 0xf7, 0x92,
-  0xf4, 0xce, 0x5c, 0x3d, 0x45, 0x46, 0xf1, 0x99, 0x88, 0x74, 0x80, 0x55,
-  0xe6, 0xc4, 0xb3, 0x33, 0x3a, 0xf8, 0x64, 0xa6, 0x5a, 0x89, 0x69, 0x22,
-  0xbe, 0xb3, 0xaf, 0xa5, 0xb4, 0x19, 0x30, 0x57, 0x0d, 0x7a, 0x39, 0x2a,
-  0x7f, 0x13, 0xc0, 0xa9, 0x48, 0xea, 0xaa, 0x9e, 0xd3, 0xc8, 0x37, 0x51,
-  0x18, 0x99, 0xc5, 0x79, 0xc4, 0x25, 0x92, 0x9d, 0x83, 0xe3, 0x2a, 0x74,
-  0xb5, 0x50, 0x4c, 0xc0, 0x76, 0x62, 0xfd, 0xd3, 0x62, 0x7e, 0xa2, 0xf0,
-  0xde, 0x62, 0x00, 0xa8, 0x0b, 0x5b, 0x36, 0x97, 0xd5, 0xab, 0xab, 0x2b,
-  0x2d, 0xb1, 0xd3, 0x99, 0x5a, 0x9c, 0xc8, 0x4e, 0x68, 0x55, 0x28, 0x0a,
-  0xfa, 0x7e, 0xd5, 0x6a, 0x5e, 0xa8, 0xcd, 0x47, 0xad, 0x2e, 0x2d, 0x62,
-  0x56, 0x9f, 0x24, 0xef, 0x5b, 0x63, 0x93, 0xae, 0x90, 0xa0, 0xd1, 0xf6,
-  0x21, 0x9f, 0x9e, 0xaf, 0x01, 0x4c, 0xbe, 0x70, 0x80, 0x0c, 0xba, 0xe9,
-  0xc0, 0xe7, 0x73, 0x11, 0x28, 0x2e, 0x12, 0xf5, 0xce, 0x86, 0x5a, 0x71,
-  0x0d, 0xc0, 0x71, 0xea, 0x54, 0xae, 0xb5, 0xa4, 0x65, 0xed, 0xa5, 0xc2,
-  0x29, 0xc7, 0x85, 0xf0, 0xa1, 0xf2, 0x36, 0x73, 0x10, 0x91, 0xce, 0xe0,
-  0xe8, 0x70, 0x76, 0xe5, 0xf4, 0x5b, 0x66, 0xd2, 0x71, 0xf0, 0x5a, 0x7e,
-  0x85, 0x49, 0x76, 0x56, 0xc5, 0xaf, 0xd0, 0x22, 0xa6, 0x92, 0xd2, 0x67,
-  0xf1, 0x3c, 0x36, 0xf1, 0x5b, 0x6b, 0x8b, 0x4c, 0x23, 0x0c, 0xf2, 0xe2,
-  0xa9, 0x26, 0x5c, 0x5a, 0x44, 0x31, 0xf1, 0x6d, 0x8c, 0x9e, 0xf3, 0xff,
-  0xea, 0x2c, 0x7b, 0x76, 0x93, 0x7a, 0x48, 0xf3, 0x1c, 0x0b, 0x11, 0x80,
-  0x06, 0x48, 0xa0, 0xb3, 0x2e, 0xfc, 0x0b, 0xd9, 0x27, 0x50, 0x32, 0x2c,
-  0x68, 0x1d, 0x46, 0x1a, 0x9c, 0x39, 0x1b, 0xa2, 0x81, 0x3c, 0x14, 0xc3,
-  0x79, 0x11, 0x57, 0x30, 0x18, 0xaf, 0x71, 0xbe, 0xd1, 0x60, 0xe2, 0xd7,
-  0xd0, 0x5e, 0x0d, 0x58, 0x30, 0x6e, 0x1d, 0xcc, 0xc7, 0xce, 0xe9, 0xd9,
-  0xf9, 0xe9, 0xd7, 0xe7, 0x47, 0xa3, 0x51, 0xf2, 0xe6, 0xe8, 0x82, 0x75,
-  0xfd, 0x0b, 0x0e, 0xbd, 0xbb, 0x22, 0x75, 0x3d, 0x81, 0xaf, 0x41, 0x31,
-  0x9c, 0x34, 0xe4, 0x44, 0x0d, 0x09, 0xc8, 0x79, 0x2a, 0xc9, 0x8f, 0x06,
-  0xf9, 0x0d, 0x4a, 0xfc, 0x4c, 0x22, 0xf6, 0xae, 0x61, 0xed, 0x47, 0x4c,
-  0x13, 0x1c, 0x92, 0xd6, 0x78, 0xee, 0xcc, 0xa8, 0x10, 0x8c, 0x39, 0xca,
-  0xc9, 0xe6, 0x1c, 0x3a, 0x13, 0x3a, 0x5d, 0xd9, 0xe6, 0x27, 0xa6, 0xf7,
-  0x07, 0xb3, 0x9a, 0x0d, 0x55, 0x47, 0xa7, 0x5f, 0xcf, 0x95, 0x28, 0xfe,
-  0x90, 0xfc, 0x60, 0xda, 0x9c, 0x1a, 0xe5, 0x95, 0x2c, 0xc8, 0xe6, 0x96,
-  0x1d, 0xa1, 0xae, 0xa9, 0x2b, 0x1f, 0x04, 0x6c, 0x7c, 0xef, 0x3f, 0x2a,
-  0x39, 0x3c, 0x8c, 0x57, 0xdf, 0x69, 0x95, 0xcf, 0x61, 0xb8, 0x4c, 0x89,
-  0xa9, 0xb3, 0x3d, 0x4b, 0xc1, 0xe2, 0x24, 0x39, 0xc9, 0x2e, 0x1b, 0x48,
-  0x21, 0xd4, 0x9d, 0x69, 0x6e, 0x9b, 0xf0, 0x9f, 0x77, 0xa8, 0xbe, 0x99,
-  0xf9, 0xf5, 0xc9, 0xe7, 0xcf, 0xb6, 0x3f, 0xe7, 0x5f, 0xf5, 0xdf, 0xe7,
-  0x7b, 0xdb, 0x82, 0x97, 0x6e, 0xfe, 0xda, 0xdb, 0xdf, 0xdb, 0xd9, 0x27,
-  0x78, 0xc7, 0xed, 0xfd, 0x6d, 0xf3, 0xff, 0x7b, 0xf2, 0x09, 0x61, 0x58,
-  0x3e, 0xdf, 0xfd, 0xfc, 0x33, 0x44, 0xc3, 0x10, 0x7d, 0xcc, 0x4c, 0x27,
-  0x83, 0xa6, 0x1c, 0x00, 0x65, 0x0a, 0x92, 0xcf, 0x1f, 0xda, 0x96, 0x48,
-  0x72, 0xaf, 0x4f, 0xc8, 0x99, 0x7a, 0xc5, 0x3a, 0xcd, 0x2c, 0x43, 0x19,
-  0x89, 0x4b, 0x0f, 0xf9, 0x46, 0x23, 0xc4, 0x39, 0x6d, 0x5b, 0xa6, 0x21,
-  0x6f, 0x37, 0xf8, 0x1b, 0xb0, 0x6d, 0xad, 0x77, 0x38, 0xd0, 0xdc, 0x43,
-  0x88, 0xfb, 0xa5, 0x5d, 0x6b, 0x22, 0xf9, 0x1a, 0x70, 0xdf, 0x64, 0xab,
-  0xe4, 0xbd, 0x89, 0xd6, 0x7c, 0xb6, 0x4f, 0x91, 0x18, 0x38, 0xe7, 0x9c,
-  0x84, 0x4b, 0x0e, 0x57, 0xfe, 0xa5, 0xfd, 0xb1, 0xe5, 0x8a, 0xde, 0x12,
-  0x6a, 0x48, 0xc2, 0xde, 0x6c, 0x2e, 0x42, 0xa4, 0xaf, 0x16, 0xf1, 0xac,
-  0xb9, 0xed, 0x77, 0x2b, 0x45, 0xac, 0x4c, 0x1e, 0xb2, 0x39, 0x5c, 0x5c,
-  0x42, 0x37, 0x32, 0xe5, 0xa0, 0x39, 0x21, 0xa3, 0x5f, 0xd0, 0x9c, 0x9b,
-  0x11, 0x28, 0xd8, 0xee, 0xdc, 0xc0, 0xdb, 0x9c, 0x9c, 0x03, 0xdb, 0x74,
-  0x35, 0x2c, 0xae, 0xa8, 0x5e, 0x73, 0xfc, 0xaa, 0x25, 0xd9, 0x01, 0xbf,
-  0x21, 0x32, 0xa7, 0xcd, 0x8b, 0x33, 0xa7, 0xf0, 0xb6, 0xc4, 0x15, 0xcf,
-  0xcf, 0x2b, 0x65, 0x07, 0x5d, 0x11, 0x35, 0x7a, 0xfd, 0x49, 0x1f, 0x38,
-  0x4f, 0xf6, 0xd0, 0x3d, 0x38, 0x35, 0x17, 0x5b, 0x6f, 0x0b, 0x08, 0x6f,
-  0xd8, 0x58, 0xf5, 0xd8, 0x91, 0x74, 0xcf, 0x21, 0x7c, 0xdd, 0x36, 0xe7,
-  0xdf, 0x3e, 0x28, 0x1f, 0x8d, 0xf1, 0xa1, 0x5e, 0xe1, 0x92, 0xd0, 0xfd,
-  0x37, 0x95, 0x85, 0x0d, 0x7e, 0x6f, 0xc3, 0xb6, 0x70, 0x99, 0x49, 0x35,
-  0xd0, 0x94, 0x29, 0x7f, 0xe6, 0xe7, 0xd2, 0x5a, 0x6e, 0x37, 0x4e, 0xab,
-  0x16, 0x8e, 0xfe, 0x9a, 0xd4, 0x61, 0x98, 0x13, 0x44, 0x1d, 0xd2, 0x1d,
-  0x59, 0x8e, 0xf8, 0xdd, 0xda, 0xda, 0xe8, 0xec, 0xe8, 0xe8, 0x55, 0x72,
-  0x72, 0xfc, 0xe6, 0xf8, 0xc2, 0x93, 0xc2, 0xed, 0xed, 0xa1, 0x96, 0x56,
-  0xad, 0x2c, 0xd5, 0x59, 0x0e, 0x87, 0xda, 0x2c, 0x15, 0x3f, 0xe4, 0xfe,
-  0x9e, 0x67, 0x92, 0x45, 0x31, 0xeb, 0xbe, 0x07, 0x7d, 0x1b, 0xc8, 0x4e,
-  0xc3, 0xe4, 0x2b, 0x2f, 0x30, 0x32, 0xa9, 0x8d, 0x44, 0x33, 0xb1, 0x85,
-  0x95, 0x07, 0x7f, 0x95, 0x38, 0x8d, 0xb6, 0xb8, 0x24, 0xe0, 0xb3, 0x36,
-  0xa5, 0x47, 0x62, 0x5b, 0x3b, 0xa3, 0xa2, 0xb5, 0xcd, 0x38, 0xb4, 0xda,
-  0x33, 0xcb, 0x21, 0x6c, 0xef, 0x2e, 0x03, 0xda, 0xc1, 0x3c, 0xe7, 0x5c,
-  0x4b, 0x3f, 0xa6, 0xd8, 0xd6, 0x9a, 0xbd, 0x28, 0x99, 0x8f, 0xfb, 0x3d,
-  0xfa, 0x45, 0xc4, 0x35, 0xa0, 0x56, 0xfb, 0xf2, 0xab, 0x53, 0x3f, 0xd9,
-  0xb6, 0xe9, 0x0a, 0x0b, 0xf0, 0x1c, 0x91, 0xef, 0xa9, 0xb3, 0x9d, 0xc4,
-  0x08, 0x21, 0x4b, 0x12, 0xe5, 0xab, 0x65, 0x11, 0x5c, 0x77, 0x7f, 0xe5,
-  0x77, 0xcd, 0xfc, 0x9f, 0x6d, 0xe3, 0x7a, 0xbb, 0x4c, 0xab, 0x81, 0x11,
-  0xb7, 0xee, 0x07, 0x6a, 0x52, 0x65, 0x8a, 0x90, 0x78, 0x63, 0xb6, 0xf7,
-  0x64, 0xae, 0xac, 0x6d, 0x47, 0x44, 0x74, 0x39, 0x27, 0x25, 0xfc, 0x92,
-  0x33, 0x39, 0x00, 0x34, 0x75, 0xca, 0xf4, 0x55, 0x0b, 0xa7, 0x13, 0x70,
-  0x1c, 0x30, 0xb1, 0xee, 0xa2, 0xe3, 0x51, 0x94, 0x81, 0x00, 0xb6, 0x4a,
-  0xad, 0xe6, 0x34, 0x4d, 0x99, 0x4b, 0x28, 0x4f, 0xcf, 0x93, 0x9d, 0xcf,
-  0x69, 0x1e, 0x1f, 0x37, 0x9f, 0xd7, 0x65, 0x35, 0xb1, 0x39, 0xc5, 0xd0,
-  0x11, 0xbc, 0x04, 0x53, 0x4e, 0x8b, 0x40, 0x55, 0x26, 0x5e, 0x5d, 0x0d,
-  0x8a, 0x45, 0xd0, 0x1e, 0x29, 0x25, 0xe2, 0x4f, 0x87, 0x39, 0x0a, 0x0e,
-  0x6e, 0x16, 0x8b, 0xe8, 0xae, 0x91, 0x75, 0x21, 0x03, 0x2b, 0x07, 0xed,
-  0xad, 0x57, 0x36, 0x01, 0x95, 0x97, 0x81, 0x4c, 0x22, 0x86, 0xd6, 0xee,
-  0xf2, 0x29, 0x44, 0x69, 0x07, 0x51, 0x67, 0xf6, 0x8b, 0x89, 0x8f, 0x63,
-  0xa5, 0xe1, 0xb3, 0x84, 0xb3, 0xd3, 0x8e, 0x4c, 0x04, 0x18, 0x5a, 0xd6,
-  0x12, 0x16, 0x85, 0x0d, 0xc8, 0x0f, 0x94, 0xdf, 0xec, 0xfc, 0x02, 0xa4,
-  0x3f, 0x11, 0x6b, 0xee, 0xb9, 0x5e, 0x28, 0x57, 0xa0, 0x69, 0x66, 0x6a,
-  0x4c, 0x78, 0x63, 0x09, 0xbb, 0x3d, 0x67, 0x42, 0x6a, 0xf1, 0xa6, 0xbd,
-  0xb3, 0x6d, 0x84, 0xd6, 0x59, 0xd9, 0x2a, 0x72, 0x6e, 0x88, 0x2a, 0xd4,
-  0x44, 0x31, 0xad, 0x01, 0x56, 0x67, 0x67, 0xfb, 0xdb, 0xd5, 0xab, 0x0e,
-  0xf8, 0xfd, 0x07, 0x5f, 0xde, 0xdd, 0x7b, 0x60, 0xd3, 0x4e, 0x2b, 0x28,
-  0xe3, 0x99, 0xc6, 0x40, 0x42, 0x10, 0x74, 0x9e, 0x97, 0x60, 0xdb, 0x0c,
-  0xe1, 0x67, 0x57, 0x29, 0x0d, 0xff, 0xa1, 0xd1, 0x6b, 0x4e, 0x48, 0x67,
-  0x28, 0x6f, 0x24, 0x2a, 0x9b, 0xbf, 0xac, 0xc9, 0x2c, 0xb6, 0x00, 0x40,
-  0x9f, 0xd3, 0x5d, 0x6d, 0x3a, 0x39, 0x63, 0x33, 0x78, 0x6f, 0x33, 0xe7,
-  0xec, 0xb7, 0x99, 0x84, 0x52, 0x4f, 0x95, 0x5d, 0x2d, 0x19, 0x09, 0xa3,
-  0x64, 0x5d, 0x9f, 0xf0, 0xac, 0xe5, 0xbc, 0x1a, 0xde, 0x4c, 0xe1, 0x43,
-  0x4c, 0x4f, 0x60, 0xbc, 0x93, 0x54, 0x45, 0x56, 0x16, 0x39, 0xba, 0x17,
-  0x03, 0x19, 0x65, 0x27, 0xe4, 0x05, 0x03, 0x37, 0x58, 0x4b, 0xba, 0xf5,
-  0xb1, 0x19, 0xb0, 0x71, 0x88, 0x4c, 0x5f, 0x26, 0x14, 0xcb, 0xec, 0x29,
-  0xad, 0x8c, 0xbc, 0x61, 0x0d, 0xbb, 0x05, 0xd0, 0x40, 0x5f, 0xa8, 0x16,
-  0x2d, 0xd9, 0xae, 0x88, 0xe3, 0xd7, 0x0a, 0x9c, 0xc9, 0x20, 0xfb, 0x64,
-  0xec, 0x3f, 0x3c, 0x7d, 0xfb, 0xfa, 0xf8, 0x6b, 0x0b, 0x65, 0xc4, 0x4c,
-  0xbc, 0x05, 0xb1, 0x61, 0xeb, 0x98, 0x5b, 0x4f, 0xb7, 0x94, 0x5c, 0x94,
-  0xe8, 0x5b, 0xc3, 0x9e, 0xde, 0xfb, 0x1f, 0x80, 0x81, 0x14, 0x4f, 0xc8,
-  0x40, 0xce, 0xf8, 0x1f, 0xf5, 0xa6, 0x33, 0x37, 0x74, 0xa0, 0xea, 0x38,
-  0x4b, 0x23, 0xad, 0x9a, 0xe5, 0xc2, 0x06, 0x11, 0x7a, 0x25, 0x1b, 0x05,
-  0x7e, 0x5b, 0x53, 0xd1, 0x97, 0x0b, 0x66, 0x4d, 0x92, 0x50, 0xda, 0xb2,
-  0xe6, 0xf2, 0x1d, 0x40, 0xe6, 0x04, 0xc1, 0x52, 0x91, 0x0b, 0x20, 0x88,
-  0xcb, 0x99, 0x11, 0x68, 0xa7, 0x1f, 0x2f, 0xaf, 0xfe, 0x9b, 0x29, 0x8a,
-  0x5e, 0xfa, 0xa5, 0xcd, 0xe7, 0xac, 0x8e, 0xd1, 0xbc, 0x51, 0x3b, 0xda,
-  0x06, 0xe3, 0xd8, 0xe8, 0x5f, 0xe7, 0x1f, 0xb2, 0x55, 0xae, 0x5c, 0x7c,
-  0x92, 0xa6, 0xb1, 0xa6, 0x70, 0x55, 0xc2, 0xd7, 0x89, 0x4f, 0x5e, 0x92,
-  0x5b, 0x66, 0x9f, 0x40, 0xe8, 0xe7, 0x0c, 0x28, 0xe7, 0xa7, 0x9f, 0x0a,
-  0x97, 0x74, 0x60, 0xf1, 0xc7, 0x97, 0x5e, 0x46, 0x1b, 0xc7, 0x09, 0x2a,
-  0xd1, 0xb1, 0x8d, 0x98, 0x0c, 0x2c, 0xeb, 0xbf, 0x5f, 0x1f, 0xd4, 0xf7,
-  0xf3, 0x71, 0x39, 0xd3, 0xc4, 0x0b, 0x0b, 0x20, 0xa1, 0x0f, 0x69, 0x15,
-  0x35, 0xa4, 0xe4, 0xb2, 0xa7, 0xb6, 0xf1, 0xcc, 0x92, 0x2e, 0x56, 0xca,
-  0x8d, 0x9f, 0xcb, 0x10, 0xc1, 0x3d, 0xa4, 0xb3, 0x00, 0xb6, 0x0f, 0xf1,
-  0xf8, 0xac, 0x98, 0xcc, 0x4a, 0xa1, 0x6a, 0x4a, 0x30, 0xc7, 0x4a, 0xb5,
-  0xa7, 0x4e, 0x1e, 0xbf, 0x72, 0x49, 0x16, 0x0e, 0x94, 0x1e, 0x31, 0xe2,
-  0x4e, 0x4f, 0x10, 0x35, 0x30, 0x41, 0x7a, 0x9b, 0xbf, 0x90, 0xa8, 0x7c,
-  0x0f, 0xdf, 0x86, 0x6b, 0x95, 0x98, 0xa1, 0xfe, 0xc4, 0x06, 0x45, 0xf6,
-  0xfb, 0xfd, 0x55, 0x3b, 0xd7, 0x47, 0x3b, 0x4b, 0x6f, 0xe8, 0x29, 0xad,
-  0xae, 0x04, 0xa5, 0x4f, 0x3c, 0x69, 0x50, 0x12, 0x6d, 0x05, 0x19, 0x6b,
-  0x98, 0x24, 0xa1, 0xc4, 0x46, 0xcd, 0x40, 0x7c, 0x5a, 0x72, 0x4e, 0xa1,
-  0x64, 0x5c, 0xb1, 0x49, 0xd2, 0x12, 0xa2, 0xc7, 0x71, 0x7e, 0x6f, 0x63,
-  0x51, 0x52, 0x77, 0x97, 0x69, 0x61, 0x0b, 0x67, 0x9f, 0x95, 0xcb, 0xcc,
-  0x7b, 0x8d, 0x8c, 0x78, 0xd0, 0x84, 0x33, 0x31, 0x9c, 0x70, 0x57, 0x90,
-  0x25, 0x08, 0xd7, 0x06, 0xc9, 0x3f, 0x59, 0xed, 0x9a, 0xe0, 0xef, 0x5f,
-  0x4a, 0xdd, 0x2a, 0x73, 0x9e, 0x05, 0x29, 0x45, 0xe0, 0x03, 0x3f, 0xdf,
-  0x16, 0xf3, 0x5b, 0x23, 0xe1, 0xaa, 0x75, 0x72, 0x70, 0x7e, 0x64, 0x24,
-  0xdb, 0xab, 0x02, 0x18, 0x15, 0x45, 0xa3, 0x49, 0x75, 0x59, 0x21, 0xa5,
-  0xb2, 0x0a, 0x3d, 0x1f, 0xd4, 0xe1, 0x9d, 0xf7, 0x26, 0x11, 0x93, 0x04,
-  0x06, 0x70, 0xfe, 0xb6, 0x23, 0xb9, 0x89, 0xc2, 0x09, 0x83, 0xeb, 0x10,
-  0x4c, 0x02, 0x93, 0x14, 0xb9, 0x48, 0x4c, 0x57, 0xa5, 0x42, 0x09, 0x9f,
-  0x05, 0x6c, 0xdd, 0xc7, 0x10, 0xd6, 0xb5, 0xc6, 0xa9, 0x76, 0xa9, 0x08,
-  0x7f, 0x57, 0x60, 0x4e, 0xe9, 0xab, 0xe5, 0xf6, 0x74, 0xe4, 0xd4, 0x8f,
-  0x9b, 0x8c, 0xfe, 0x8e, 0x7b, 0x86, 0x64, 0x91, 0xae, 0x5c, 0x90, 0xd9,
-  0x08, 0x7b, 0xb6, 0x5e, 0x4f, 0x3d, 0xe1, 0x97, 0x53, 0x00, 0x29, 0xc6,
-  0x9a, 0x0d, 0xd3, 0x82, 0x04, 0x24, 0x76, 0x1d, 0x56, 0x07, 0xa6, 0x72,
-  0x56, 0x89, 0x2a, 0x28, 0x5c, 0x78, 0x4c, 0x68, 0x49, 0x37, 0x2c, 0x00,
-  0xf8, 0xfc, 0x29, 0x6a, 0xdb, 0xfd, 0xbd, 0x9d, 0xad, 0x1b, 0x83, 0xfd,
-  0x92, 0x3e, 0x7a, 0x69, 0xd1, 0xed, 0x68, 0x14, 0x43, 0xea, 0x08, 0x2c,
-  0x15, 0x3e, 0x53, 0xfa, 0x05, 0x1f, 0x23, 0xea, 0x4d, 0xe1, 0x4e, 0xc1,
-  0x75, 0x2c, 0x84, 0x56, 0x29, 0x3e, 0x55, 0x37, 0x10, 0x76, 0xec, 0x81,
-  0x43, 0x8f, 0x7d, 0xd1, 0x78, 0xf0, 0xed, 0x96, 0x56, 0xbb, 0x25, 0xfb,
-  0x0d, 0x25, 0x10, 0xeb, 0x81, 0xaf, 0xb3, 0x56, 0x79, 0x5c, 0x9b, 0x29,
-  0xd4, 0x1b, 0xf4, 0xcc, 0x5a, 0xac, 0xcf, 0x66, 0x8e, 0xe1, 0xeb, 0x63,
-  0xb4, 0xab, 0x48, 0xaa, 0x73, 0x02, 0x93, 0xf0, 0x2e, 0xaa, 0xc7, 0x71,
-  0xdf, 0x4a, 0x71, 0xa0, 0xc2, 0x65, 0x94, 0x01, 0x64, 0x81, 0xbd, 0x90,
-  0x26, 0x82, 0x20, 0x81, 0xdb, 0xbc, 0x56, 0xe7, 0xa3, 0xa1, 0xed, 0x09,
-  0xc7, 0x44, 0x34, 0x0c, 0x48, 0x90, 0x35, 0x13, 0x6f, 0x29, 0xb3, 0xc9,
-  0x75, 0xc9, 0x31, 0xb5, 0x66, 0xd1, 0xbc, 0x4c, 0xcf, 0x5e, 0xf2, 0xdf,
-  0x42, 0x03, 0xdf, 0xba, 0xa4, 0x3d, 0x22, 0x84, 0x21, 0xe3, 0x50, 0x0e,
-  0x1d, 0x41, 0x1c, 0xfd, 0x70, 0x71, 0x7e, 0x90, 0x7c, 0x73, 0x74, 0xf0,
-  0xea, 0xe8, 0x7c, 0xd4, 0xb9, 0xf4, 0x25, 0xfc, 0x83, 0x25, 0x34, 0x32,
-  0x02, 0x43, 0x34, 0x56, 0xe0, 0x01, 0x89, 0xdb, 0x57, 0xae, 0x67, 0x88,
-  0x87, 0x0e, 0x92, 0x39, 0x1f, 0xa4, 0x10, 0xb1, 0xb7, 0x00, 0xb8, 0xc7,
-  0x35, 0x98, 0x8d, 0x6d, 0x63, 0x62, 0x38, 0x14, 0x05, 0x31, 0xa8, 0xc9,
-  0xdc, 0xcf, 0x98, 0x71, 0x58, 0x7d, 0xee, 0x32, 0x99, 0x96, 0x9a, 0x0c,
-  0xd8, 0xde, 0xb9, 0x6f, 0x5c, 0xbe, 0xb7, 0xc7, 0xb6, 0xe4, 0x92, 0x11,
-  0xab, 0x61, 0xef, 0x87, 0x81, 0xe9, 0x77, 0x60, 0x16, 0x7f, 0x40, 0x60,
-  0x8e, 0xf7, 0x59, 0xdd, 0xeb, 0x98, 0x00, 0xdb, 0xdd, 0xaf, 0x71, 0x11,
-  0xa7, 0xe0, 0x24, 0x7d, 0x13, 0x6d, 0x89, 0x4e, 0x17, 0xd5, 0x73, 0x0e,
-  0x34, 0x08, 0x5c, 0xaa, 0x9e, 0x90, 0x2c, 0x27, 0x28, 0x48, 0x6f, 0x91,
-  0x00, 0x25, 0xa7, 0x66, 0x4a, 0x3c, 0x18, 0x06, 0x22, 0x53, 0x80, 0xac,
-  0x63, 0xce, 0x1e, 0x5f, 0xea, 0x33, 0x86, 0x68, 0x66, 0x8b, 0x99, 0x19,
-  0x96, 0x3c, 0xe4, 0xdf, 0x0f, 0x70, 0x80, 0x48, 0x0c, 0x7e, 0xdd, 0xf2,
-  0x8f, 0x8a, 0x31, 0x54, 0xd0, 0xbb, 0xa5, 0x39, 0x1a, 0x83, 0xa5, 0x79,
-  0x0d, 0xdd, 0xa7, 0x2e, 0xb5, 0xb0, 0x88, 0xbc, 0xcb, 0x51, 0x60, 0xa4,
-  0xd4, 0xc3, 0xbe, 0xc9, 0xd5, 0x48, 0xe9, 0x1d, 0x95, 0x57, 0xbd, 0x5c,
-  0x20, 0x9f, 0x98, 0x51, 0x05, 0x0d, 0xd1, 0xe3, 0xf6, 0xb9, 0x2c, 0xf9,
-  0xa6, 0xac, 0x71, 0x17, 0x84, 0x8f, 0xd3, 0x25, 0x1f, 0x5b, 0x7e, 0xbc,
-  0x21, 0xfe, 0x2d, 0x0b, 0x12, 0x0b, 0x50, 0x65, 0xb0, 0xaf, 0xb3, 0x83,
-  0x8b, 0x6f, 0xe0, 0x5d, 0x05, 0x09, 0xbf, 0x02, 0x62, 0x8a, 0xfa, 0xd4,
-  0xc2, 0x94, 0x2c, 0xab, 0xc0, 0xb1, 0xfc, 0xab, 0xc0, 0x8c, 0x2a, 0x4f,
-  0xc2, 0x7b, 0x97, 0x73, 0x20, 0xd2, 0x8c, 0xab, 0xbf, 0x82, 0x47, 0xb7,
-  0x2a, 0xf3, 0x21, 0xf4, 0xdd, 0xe6, 0xdb, 0xd9, 0x78, 0xcb, 0x75, 0x4e,
-  0x84, 0x5f, 0xe7, 0x39, 0x81, 0xe8, 0x49, 0x98, 0x23, 0x8d, 0xc7, 0x47,
-  0x1e, 0xc6, 0x17, 0x94, 0xe9, 0xcc, 0x0e, 0xa8, 0x69, 0x19, 0xc7, 0x3d,
-  0xf4, 0x8e, 0xf4, 0x97, 0xf3, 0xfb, 0x61, 0x08, 0xc0, 0x93, 0x7c, 0xb5,
-  0x6c, 0xda, 0x6c, 0xa5, 0x83, 0x7f, 0x6c, 0x25, 0xcb, 0xaa, 0x2c, 0x1b,
-  0x6f, 0x0c, 0x90, 0x7e, 0xd2, 0x46, 0x4e, 0x34, 0x03, 0x5c, 0xf2, 0x58,
-  0xa8, 0xa9, 0x42, 0xe4, 0x6e, 0x5f, 0x30, 0x4c, 0xc7, 0x75, 0x39, 0x5b,
-  0x36, 0x5e, 0xf4, 0xf5, 0x2f, 0x1b, 0xb3, 0x37, 0xe8, 0x8d, 0xe3, 0xa1,
-  0x82, 0x7d, 0x16, 0x0c, 0x51, 0x67, 0x34, 0x7d, 0x23, 0x5e, 0xc2, 0xd9,
-  0x58, 0x95, 0x45, 0xbb, 0x7c, 0x1c, 0x02, 0xbd, 0x37, 0xd7, 0xd6, 0x46,
-  0xba, 0xd9, 0x04, 0xf7, 0x1a, 0x6e, 0xfa, 0xf7, 0x90, 0x26, 0x69, 0x0c,
-  0xec, 0x2c, 0x98, 0x98, 0x5f, 0x14, 0x04, 0x2e, 0xe3, 0x3d, 0x05, 0x0b,
-  0xe7, 0x3d, 0xce, 0xeb, 0xf6, 0xa4, 0xf0, 0x95, 0x75, 0x57, 0x68, 0x7e,
-  0xd9, 0x45, 0xa9, 0x50, 0xfe, 0xe2, 0xae, 0x73, 0x04, 0xd1, 0xca, 0x86,
-  0x8f, 0x22, 0x4c, 0xd3, 0x25, 0xa0, 0x35, 0x85, 0x6d, 0x38, 0x2e, 0x0d,
-  0x72, 0xeb, 0x7f, 0x6d, 0x25, 0xfd, 0x44, 0xca, 0xbd, 0x47, 0x40, 0x8e,
-  0xfe, 0x1f, 0x04, 0x5e, 0x09, 0xbc, 0x2f, 0xb5, 0x39, 0x6c, 0x03, 0xc8,
-  0x0e, 0x8d, 0x0a, 0x75, 0x5d, 0x4d, 0x1c, 0xf5, 0x1b, 0xe9, 0x20, 0xbb,
-  0x23, 0xfd, 0x45, 0x75, 0x04, 0x81, 0x0b, 0xe1, 0xb2, 0xbe, 0x16, 0x80,
-  0x09, 0x70, 0x1b, 0x97, 0xd6, 0xaa, 0x47, 0x15, 0x36, 0xb9, 0x0c, 0x25,
-  0x8b, 0xf5, 0xa8, 0xc2, 0xa4, 0x6e, 0x53, 0xce, 0xa8, 0xb7, 0x7a, 0x7b,
-  0x9d, 0xd4, 0x25, 0xff, 0xd4, 0xa4, 0x23, 0x09, 0xec, 0x12, 0xf2, 0xf7,
-  0xaa, 0xfb, 0x49, 0xf9, 0x5b, 0xa4, 0x36, 0x49, 0xc4, 0x29, 0x47, 0xd3,
-  0xa9, 0x3b, 0x52, 0x07, 0xa9, 0x52, 0x00, 0x79, 0x2b, 0x01, 0x6b, 0x29,
-  0xc8, 0x23, 0x14, 0x49, 0x46, 0x18, 0xc6, 0x9c, 0xb4, 0x4d, 0x75, 0x1b,
-  0x55, 0x93, 0xd1, 0x2b, 0x55, 0xd3, 0x38, 0xec, 0x4e, 0xb9, 0xe1, 0xcb,
-  0xdd, 0x8f, 0x24, 0x7c, 0x78, 0xe6, 0xee, 0x52, 0xc2, 0x49, 0x73, 0x22,
-  0x81, 0x4e, 0x49, 0x6a, 0xbc, 0x72, 0xf0, 0x86, 0x1f, 0x90, 0xe2, 0x22,
-  0x36, 0xaf, 0x28, 0xcb, 0x43, 0x4c, 0x52, 0x82, 0x65, 0x02, 0xfb, 0xd7,
-  0x75, 0x2e, 0x71, 0xa5, 0xbc, 0xea, 0xed, 0xba, 0x9a, 0xb0, 0xf0, 0x51,
-  0x48, 0x81, 0xf3, 0xaa, 0xda, 0xc0, 0x87, 0x61, 0x78, 0x60, 0x86, 0x16,
-  0x55, 0x55, 0x2e, 0x91, 0x63, 0x3f, 0xa7, 0x9c, 0xa3, 0x30, 0x6c, 0xac,
-  0xf3, 0x47, 0xf6, 0xee, 0x77, 0x49, 0x41, 0xac, 0x45, 0xc2, 0x09, 0x24,
-  0x02, 0x15, 0x47, 0x17, 0xca, 0xee, 0x0e, 0x14, 0x53, 0x8e, 0xd9, 0x00,
-  0x4e, 0xa9, 0xb6, 0xa0, 0x78, 0x69, 0xdd, 0xc5, 0xdf, 0xec, 0xcb, 0x2a,
-  0xd9, 0x8c, 0x7b, 0x71, 0x31, 0xb3, 0x5c, 0xe8, 0xf9, 0x9d, 0x5a, 0xf5,
-  0xe3, 0x38, 0x8b, 0xbb, 0x6e, 0xaa, 0xe5, 0xa4, 0x05, 0xd1, 0x07, 0x8a,
-  0x68, 0xb9, 0xe6, 0xed, 0x1a, 0x97, 0xbe, 0x6e, 0x7f, 0x7c, 0x26, 0xea,
-  0x3d, 0x6b, 0x1f, 0x34, 0xb2, 0x8d, 0xb4, 0x95, 0xe4, 0x62, 0x4b, 0x8b,
-  0xfa, 0xfd, 0x6e, 0x5a, 0x2a, 0x1b, 0x9c, 0xd9, 0x8c, 0xfa, 0x4e, 0x11,
-  0x78, 0xca, 0x4e, 0xf0, 0xee, 0x5e, 0x11, 0xc4, 0x20, 0x78, 0x54, 0x89,
-  0x80, 0x2f, 0x42, 0xac, 0x21, 0x93, 0xe5, 0x9a, 0x05, 0x48, 0x34, 0x43,
-  0x1a, 0x48, 0xa8, 0x2a, 0x7b, 0x7f, 0xb7, 0xcc, 0x42, 0x6a, 0x81, 0x20,
-  0x5b, 0x19, 0xab, 0x76, 0x20, 0x8b, 0x9d, 0x38, 0x55, 0x40, 0x34, 0x59,
-  0xf9, 0x50, 0xc0, 0xe2, 0x64, 0xfd, 0x86, 0xc9, 0x2b, 0x39, 0x14, 0xd2,
-  0x43, 0x57, 0x9c, 0x08, 0xef, 0xc6, 0x33, 0x86, 0x42, 0x09, 0xe8, 0xe8,
-  0x95, 0xda, 0x54, 0xc1, 0x72, 0xb0, 0x36, 0xa4, 0xd9, 0xe8, 0x26, 0x99,
-  0x75, 0xd5, 0x2e, 0xcc, 0x10, 0x68, 0xc6, 0xeb, 0xb3, 0x6c, 0x7b, 0xdd,
-  0x2b, 0xed, 0xb5, 0xc1, 0x41, 0xff, 0x25, 0xb4, 0x1f, 0x0b, 0x56, 0xc8,
-  0xd6, 0x0b, 0x0a, 0x6e, 0xdb, 0x8c, 0x0c, 0xc5, 0x34, 0xf1, 0x4b, 0x07,
-  0xb3, 0xf3, 0x7c, 0x77, 0xb8, 0xf3, 0xec, 0xf3, 0xe1, 0xf6, 0x70, 0x67,
-  0x9b, 0xf8, 0x0b, 0x0d, 0xc5, 0x1b, 0x1c, 0xaf, 0x4b, 0xa4, 0xab, 0xd6,
-  0x7b, 0x61, 0x9f, 0x6f, 0x8f, 0x2e, 0xbe, 0x3f, 0x3d, 0xff, 0x36, 0x39,
-  0x7e, 0x7b, 0x71, 0x74, 0xfe, 0xfa, 0xe0, 0xf0, 0x63, 0x01, 0xfb, 0x7d,
-  0xb3, 0xb5, 0x57, 0xc5, 0x3a, 0x73, 0x0b, 0x13, 0xda, 0x06, 0xdd, 0x9a,
-  0x65, 0xcd, 0xf5, 0xf6, 0xfe, 0xce, 0x83, 0x90, 0xd4, 0x11, 0xf3, 0xa0,
-  0x7b, 0x5f, 0x27, 0xb5, 0x43, 0x93, 0x5a, 0xdd, 0x8a, 0x85, 0x66, 0x1c,
-  0x71, 0x6c, 0x95, 0x8d, 0xcb, 0x05, 0x9b, 0x47, 0xf1, 0x24, 0x20, 0xb2,
-  0x0a, 0x63, 0x1f, 0x33, 0xf8, 0x2d, 0xa7, 0xd7, 0x0a, 0xc8, 0x8c, 0xc4,
-  0xa0, 0x0b, 0xcf, 0x5d, 0xe3, 0x8a, 0xd1, 0x8d, 0x98, 0x53, 0x18, 0xce,
-  0x76, 0x0a, 0x11, 0x4f, 0xb9, 0xb2, 0xe4, 0xae, 0x11, 0xb5, 0x48, 0x71,
-  0x53, 0x06, 0x1c, 0x9c, 0xda, 0x3c, 0x11, 0x8b, 0x42, 0x80, 0xd0, 0x07,
-  0x95, 0xd3, 0x31, 0xd6, 0x76, 0xd1, 0x6f, 0x3f, 0x7c, 0xb6, 0x83, 0xbd,
-  0x5a, 0x6b, 0x5c, 0x33, 0x26, 0xd6, 0x32, 0x8d, 0x1e, 0xca, 0x40, 0x70,
-  0x1a, 0xbc, 0xd1, 0x70, 0x57, 0x10, 0xa8, 0x08, 0x24, 0x0d, 0xf0, 0x90,
-  0x2d, 0x84, 0x64, 0xbe, 0xa3, 0x90, 0x3b, 0xc1, 0xf2, 0x9f, 0x96, 0xb5,
-  0xa0, 0xd6, 0xeb, 0x16, 0x48, 0x61, 0xc2, 0x05, 0xad, 0xfc, 0xd7, 0x59,
-  0xd4, 0x46, 0x74, 0xe6, 0xb4, 0x4a, 0xef, 0x50, 0x95, 0x25, 0x77, 0x90,
-  0xa3, 0x6b, 0x49, 0xab, 0x2a, 0x17, 0x09, 0x4e, 0x6e, 0xcd, 0x93, 0xb3,
-  0xa3, 0x37, 0x03, 0xad, 0x25, 0x6c, 0x7e, 0x67, 0x63, 0x94, 0xe2, 0x4b,
-  0x72, 0x6e, 0xcf, 0x22, 0x2b, 0x34, 0x96, 0x06, 0x3c, 0x51, 0x82, 0x7f,
-  0xfc, 0x09, 0xd0, 0xa1, 0xb1, 0x08, 0x94, 0x12, 0x32, 0xaa, 0x31, 0x97,
-  0x9c, 0x5b, 0xd8, 0x85, 0xe5, 0xa4, 0xfd, 0x94, 0x80, 0xe5, 0x64, 0xc3,
-  0x06, 0xe9, 0x52, 0x7f, 0x88, 0x44, 0x45, 0xd4, 0x80, 0x0d, 0x13, 0x28,
-  0x35, 0xf3, 0xfa, 0xec, 0xdb, 0xc3, 0xd1, 0xef, 0x77, 0x76, 0x65, 0x38,
-  0x9b, 0xaa, 0x15, 0x10, 0xaf, 0xea, 0x26, 0xe5, 0x83, 0x5d, 0xfb, 0x63,
-  0xd4, 0x14, 0x6b, 0x1c, 0x70, 0x6c, 0xc6, 0x86, 0x4d, 0x0c, 0xda, 0x6c,
-  0x65, 0x06, 0x21, 0xf2, 0xeb, 0xde, 0x8a, 0x98, 0xb6, 0xde, 0x2f, 0xb9,
-  0x44, 0x50, 0x15, 0x4a, 0xea, 0x32, 0x35, 0x36, 0xd4, 0x2f, 0x2d, 0xf4,
-  0x23, 0x6e, 0x59, 0x5a, 0x43, 0x0e, 0xb9, 0x0b, 0x67, 0xe9, 0xee, 0x39,
-  0xad, 0xb7, 0xfb, 0x96, 0x70, 0x62, 0xe5, 0x66, 0x57, 0x40, 0x20, 0xd7,
-  0x0d, 0x0e, 0x80, 0x44, 0xaf, 0x4f, 0xb5, 0xf2, 0x5b, 0xe1, 0xea, 0xa0,
-  0xd0, 0xd3, 0xa7, 0x66, 0xa3, 0xcc, 0xc9, 0x62, 0xdc, 0x06, 0x62, 0x0a,
-  0xe5, 0x8c, 0x54, 0x17, 0xfb, 0xc8, 0xab, 0x8a, 0x2a, 0xce, 0x2c, 0x38,
-  0x8e, 0xf4, 0xed, 0x30, 0xf9, 0x26, 0x2b, 0x28, 0x71, 0x9e, 0x22, 0xee,
-  0x34, 0xf7, 0x0a, 0x71, 0x81, 0x54, 0x7a, 0x12, 0xa5, 0xf8, 0x4e, 0xb2,
-  0x54, 0x30, 0x39, 0x0d, 0xaf, 0xab, 0x59, 0xc3, 0xd5, 0x32, 0x54, 0x29,
-  0x45, 0xe7, 0x09, 0x80, 0xa8, 0x05, 0xbb, 0x60, 0x90, 0x68, 0x6a, 0x60,
-  0xa3, 0x0d, 0xac, 0x89, 0x92, 0x08, 0x68, 0x4e, 0x8e, 0x39, 0x7c, 0x4d,
-  0x62, 0x55, 0xbe, 0x06, 0x9c, 0x36, 0x59, 0x0b, 0x59, 0xe3, 0x72, 0x4c,
-  0x65, 0x5a, 0x5d, 0x93, 0xe9, 0xa3, 0x36, 0xd7, 0x4d, 0x5a, 0x4c, 0xee,
-  0x87, 0x53, 0x23, 0xcb, 0x92, 0xf1, 0x6c, 0xb8, 0xbc, 0xd9, 0xf2, 0x8e,
-  0x29, 0xb1, 0xfc, 0x6b, 0xc6, 0x08, 0x68, 0x1b, 0xbe, 0xb5, 0xc6, 0x71,
-  0x08, 0x1d, 0x96, 0xb6, 0xce, 0x04, 0x91, 0x84, 0x66, 0xfb, 0xf3, 0xf1,
-  0x5c, 0x09, 0xb2, 0x75, 0x94, 0x58, 0x84, 0x63, 0x6a, 0x61, 0xb8, 0xc8,
-  0xe6, 0xfb, 0x36, 0x1b, 0x59, 0xf9, 0x83, 0x54, 0xd5, 0xb0, 0x8a, 0x85,
-  0x67, 0xa4, 0x2d, 0xb2, 0xab, 0x99, 0x08, 0x14, 0xbe, 0xea, 0x62, 0x9b,
-  0x88, 0xa4, 0x80, 0xb0, 0xc2, 0x23, 0x45, 0x92, 0x20, 0xb1, 0x1b, 0x3a,
-  0x6c, 0x24, 0xa4, 0x96, 0x1f, 0xae, 0x48, 0xa0, 0x77, 0x8d, 0x08, 0x72,
-  0x08, 0xc0, 0x96, 0x51, 0x41, 0x9e, 0x4d, 0x3c, 0x1a, 0x89, 0x24, 0xee,
-  0x27, 0x02, 0x82, 0x05, 0x85, 0x00, 0xc6, 0x5d, 0xa2, 0xa2, 0xe1, 0xfc,
-  0xd4, 0x52, 0xc2, 0x7c, 0x56, 0xcc, 0xd7, 0xb7, 0x4f, 0xc8, 0xe2, 0x7d,
-  0x71, 0x32, 0x52, 0xaf, 0x48, 0x91, 0xdd, 0x79, 0xa4, 0xc5, 0xa5, 0x07,
-  0x84, 0xfe, 0xc8, 0x00, 0xc4, 0x90, 0xca, 0x40, 0x3b, 0xc0, 0x48, 0x98,
-  0x2b, 0x38, 0x37, 0x99, 0x4b, 0x7e, 0xd0, 0x45, 0x90, 0x30, 0x62, 0x1a,
-  0x8a, 0x56, 0x3c, 0x63, 0x61, 0xc8, 0x22, 0xbd, 0x10, 0x76, 0x9f, 0x11,
-  0x96, 0x9e, 0xf4, 0x93, 0xc1, 0x2e, 0xf0, 0x73, 0x76, 0xda, 0x8b, 0x98,
-  0x36, 0x0c, 0x13, 0x48, 0x6d, 0x98, 0x96, 0xb4, 0x15, 0x61, 0x07, 0x1b,
-  0x42, 0xd2, 0xb7, 0xe6, 0x7d, 0xfa, 0xb1, 0x2b, 0x13, 0xba, 0xdd, 0x41,
-  0xc4, 0x36, 0xe3, 0x56, 0xce, 0xee, 0x43, 0x91, 0x61, 0xf7, 0xc1, 0x5d,
-  0x45, 0x6e, 0xc4, 0x5d, 0x6e, 0x01, 0xa4, 0xb9, 0x68, 0x02, 0x4c, 0xa1,
-  0x02, 0x09, 0xaa, 0x03, 0x30, 0x4b, 0x28, 0x46, 0xee, 0x22, 0xb9, 0xdd,
-  0x55, 0x5f, 0x33, 0x7d, 0xa3, 0xeb, 0xc6, 0xc6, 0x7a, 0xc7, 0x44, 0x82,
-  0xb4, 0x45, 0x8a, 0x72, 0xf3, 0xa8, 0x96, 0xb2, 0x9e, 0x0c, 0xcd, 0x1a,
-  0x2e, 0xd2, 0xe2, 0x32, 0x65, 0x21, 0x66, 0x05, 0x4e, 0x79, 0x67, 0x3c,
-  0x7a, 0x52, 0xe0, 0xbd, 0x30, 0x27, 0x44, 0x7e, 0x7b, 0x11, 0x91, 0xc7,
-  0x85, 0x4d, 0x94, 0x10, 0x53, 0x3e, 0x20, 0xfa, 0xb0, 0xfd, 0xd7, 0x39,
-  0x1b, 0x26, 0x10, 0x6b, 0x8a, 0xeb, 0xdc, 0x9c, 0xfc, 0xf5, 0xc4, 0x1c,
-  0xa6, 0x25, 0x71, 0xfc, 0xc6, 0x96, 0x5f, 0x1b, 0x31, 0xb4, 0xe7, 0xba,
-  0xcf, 0xe6, 0x06, 0x5f, 0xd0, 0x54, 0xea, 0x75, 0x37, 0x77, 0x81, 0x38,
-  0x6f, 0x4f, 0x44, 0xfc, 0x1c, 0x5a, 0x70, 0xec, 0xac, 0xd2, 0xba, 0xea,
-  0xeb, 0x47, 0x1f, 0x48, 0xc6, 0x59, 0x97, 0x9e, 0xf8, 0x6b, 0xce, 0xe9,
-  0xc7, 0x1a, 0x9d, 0x1d, 0xbf, 0xe5, 0x4a, 0xe1, 0xf6, 0x2c, 0x64, 0x04,
-  0xbd, 0xb8, 0xc6, 0x45, 0xee, 0x31, 0x9e, 0x54, 0x31, 0xe0, 0xd9, 0x70,
-  0x44, 0x34, 0x43, 0x34, 0x9e, 0x4b, 0x5f, 0xe7, 0x4b, 0xee, 0x7d, 0x9d,
-  0xee, 0xb9, 0xba, 0x9e, 0xad, 0x77, 0xaa, 0xdf, 0xda, 0x3d, 0xe9, 0x5c,
-  0x28, 0xd6, 0x22, 0x35, 0x99, 0x3a, 0x01, 0x1f, 0x15, 0xbe, 0xa9, 0x95,
-  0x16, 0x9f, 0xeb, 0x77, 0x32, 0x1d, 0x7d, 0x53, 0xf8, 0xef, 0x93, 0xe1,
-  0x96, 0xe9, 0xb0, 0xde, 0xd2, 0x17, 0x17, 0x37, 0x93, 0xda, 0xdc, 0x70,
-  0x94, 0xd6, 0xfb, 0x23, 0x14, 0x72, 0x6c, 0x87, 0x19, 0xf1, 0xf4, 0xe7,
-  0x64, 0x30, 0x99, 0x61, 0x7e, 0x09, 0xea, 0x6c, 0xff, 0x68, 0x76, 0x9e,
-  0x9e, 0xf8, 0xd9, 0xee, 0xe1, 0xeb, 0x9c, 0xce, 0xdb, 0x87, 0xbe, 0x4e,
-  0xfd, 0x94, 0x15, 0x06, 0xc6, 0xb7, 0x4d, 0x0e, 0xa6, 0xb7, 0x94, 0x74,
-  0x37, 0x95, 0x3f, 0x69, 0x3e, 0x47, 0x05, 0x2a, 0x94, 0x62, 0xa6, 0xe9,
-  0x98, 0x8b, 0x92, 0x7f, 0x97, 0x1b, 0xa5, 0xe3, 0xb0, 0x23, 0x5f, 0x50,
-  0xfe, 0x1f, 0x0d, 0x10, 0x6f, 0x79, 0x5f, 0x6a, 0x32, 0x47, 0x5f, 0x72,
-  0x16, 0x5c, 0x68, 0x29, 0x71, 0x67, 0xda, 0xba, 0x61, 0xf2, 0x15, 0xf9,
-  0x38, 0xab, 0xcc, 0x43, 0x7f, 0x95, 0x8b, 0x8f, 0x2b, 0xf9, 0xd1, 0x66,
-  0xa4, 0x8c, 0x3f, 0x31, 0xb4, 0x33, 0x09, 0x72, 0x60, 0xec, 0x9c, 0xec,
-  0x37, 0xed, 0xc9, 0x61, 0x5c, 0x9a, 0xd2, 0x6e, 0xa6, 0xa2, 0xf9, 0x12,
-  0x49, 0x30, 0x15, 0x0f, 0x97, 0x92, 0x47, 0xc8, 0x17, 0xe6, 0x34, 0xd3,
-  0xc4, 0xfe, 0xd2, 0x47, 0x53, 0x51, 0xcb, 0x31, 0x9a, 0x52, 0x89, 0xc0,
-  0x92, 0x04, 0xee, 0x70, 0x37, 0xea, 0xc3, 0x6b, 0xc3, 0x9a, 0x33, 0x3b,
-  0xd4, 0x11, 0x9b, 0xf4, 0x74, 0x88, 0x23, 0xba, 0xa3, 0x74, 0x13, 0xec,
-  0x97, 0x9a, 0x1d, 0x09, 0x29, 0x74, 0x8b, 0x79, 0x97, 0xa5, 0x5d, 0x5e,
-  0xdd, 0xf6, 0x14, 0x28, 0xa9, 0x71, 0xf4, 0xee, 0x0d, 0x95, 0x36, 0x41,
-  0xe1, 0xea, 0x8b, 0xf3, 0x83, 0xb7, 0xa3, 0xd7, 0x6c, 0x1a, 0xbf, 0x28,
-  0xbd, 0x7a, 0xd8, 0xe2, 0x57, 0x50, 0xff, 0xb1, 0x85, 0x89, 0xbb, 0xe3,
-  0x7a, 0x1b, 0x1a, 0x4f, 0x2f, 0xc5, 0xb2, 0xfb, 0x5d, 0xbc, 0x7d, 0xae,
-  0xb4, 0x4d, 0xab, 0x41, 0x43, 0xdb, 0x18, 0x6d, 0x5a, 0x41, 0xa8, 0xf6,
-  0x8b, 0xb2, 0xb9, 0x82, 0xf5, 0x8a, 0x0c, 0x2d, 0x0f, 0xd1, 0xb2, 0x1c,
-  0xea, 0x60, 0xf4, 0x53, 0xbe, 0x7b, 0x57, 0x82, 0x91, 0x1e, 0x1a, 0x55,
-  0x71, 0x20, 0x95, 0x6a, 0xbc, 0x12, 0x74, 0xd6, 0x9c, 0xca, 0x77, 0xaf,
-  0x40, 0xf9, 0xd9, 0xc6, 0xfd, 0xbc, 0x4f, 0x6d, 0x7a, 0xe3, 0x4f, 0x3b,
-  0x9b, 0xf1, 0xe6, 0x2f, 0x7e, 0x69, 0xf3, 0xf1, 0xb1, 0xab, 0x6e, 0xe6,
-  0x52, 0x8a, 0x36, 0xfe, 0xb4, 0xbb, 0xf9, 0xe0, 0x8c, 0xfc, 0xac, 0x48,
-  0xd7, 0xa7, 0x79, 0x83, 0x06, 0x9b, 0xbc, 0xe4, 0x63, 0x66, 0x65, 0x26,
-  0x1b, 0xa1, 0xe3, 0xe1, 0x0d, 0xb7, 0x00, 0x3b, 0x28, 0x6c, 0xdb, 0x4a,
-  0xea, 0xce, 0xf1, 0x26, 0xd9, 0x25, 0xc7, 0xff, 0xf3, 0xc8, 0x87, 0x91,
-  0x2c, 0xd6, 0x1b, 0xff, 0x8a, 0x22, 0x74, 0x80, 0xba, 0x1c, 0xa2, 0xef,
-  0xdd, 0x07, 0xfa, 0x76, 0xb3, 0xf3, 0xcc, 0x12, 0xe4, 0xc5, 0xa6, 0x30,
-  0x38, 0x45, 0xc3, 0x96, 0x7e, 0xd6, 0x5c, 0xa1, 0xf5, 0xd5, 0xfd, 0x5d,
-  0x1c, 0xbf, 0x39, 0x22, 0xd4, 0xec, 0x57, 0xc7, 0x04, 0x3e, 0x37, 0x12,
-  0xf8, 0x47, 0xb5, 0x40, 0x58, 0x44, 0x5e, 0xbf, 0x5a, 0x0a, 0xbb, 0x77,
-  0x6d, 0xb4, 0x99, 0xe5, 0x1c, 0x76, 0x27, 0xa8, 0x6b, 0x89, 0x81, 0xae,
-  0x35, 0xd3, 0xf2, 0xf8, 0x72, 0xf0, 0xa6, 0x9c, 0x42, 0x4b, 0x1e, 0x8c,
-  0x10, 0x2a, 0x68, 0xde, 0x32, 0x1f, 0xbe, 0x2b, 0xe6, 0xad, 0x8f, 0x87,
-  0x91, 0x4c, 0xdd, 0xb5, 0x55, 0x45, 0x79, 0xfe, 0xb1, 0x35, 0x18, 0xd0,
-  0x60, 0x06, 0x1c, 0xd6, 0x25, 0xce, 0x9d, 0x16, 0x3e, 0x87, 0xb2, 0x16,
-  0xb3, 0x40, 0xf9, 0xec, 0x9e, 0x03, 0x11, 0x52, 0x17, 0x3e, 0xe6, 0xb2,
-  0x37, 0xaf, 0x28, 0x83, 0xcc, 0x99, 0xf8, 0xd8, 0x88, 0xb7, 0xe6, 0x83,
-  0x97, 0x42, 0x91, 0xca, 0xee, 0x5c, 0xfc, 0x93, 0x54, 0x6d, 0x2e, 0x17,
-  0xf7, 0x98, 0xe5, 0x5d, 0x2b, 0xb4, 0x22, 0xea, 0x5f, 0xfd, 0x07, 0xbf,
-  0xd3, 0x2a, 0x43, 0x25, 0x18, 0xd3, 0x1e, 0x05, 0xca, 0x27, 0x52, 0xb5,
-  0xe9, 0xb4, 0xf2, 0xae, 0x2b, 0x19, 0xb6, 0x56, 0xb7, 0xf3, 0x80, 0x4d,
-  0x3d, 0x1c, 0xd6, 0xf6, 0x38, 0x7d, 0x10, 0xd8, 0x92, 0x52, 0x5f, 0x5f,
-  0x95, 0xd6, 0x39, 0x66, 0xd8, 0xce, 0xa2, 0x5d, 0x17, 0x39, 0x4b, 0x34,
-  0xc9, 0x9b, 0x73, 0xf8, 0xd7, 0x07, 0xeb, 0xa8, 0xcb, 0x90, 0x17, 0x91,
-  0xc9, 0x0c, 0x7e, 0xf9, 0x6c, 0x02, 0xd7, 0x6b, 0xd2, 0xbb, 0x24, 0x20,
-  0x0c, 0xf2, 0x63, 0xf5, 0x78, 0x00, 0x8c, 0x13, 0xc3, 0xc4, 0x65, 0x2e,
-  0x08, 0xe2, 0x6b, 0xaa, 0x48, 0xb2, 0x52, 0x6d, 0x23, 0x63, 0xad, 0x91,
-  0x9c, 0xad, 0x92, 0xc4, 0x48, 0x97, 0x8b, 0x29, 0x82, 0x32, 0x38, 0x1c,
-  0xf5, 0x3f, 0x09, 0x14, 0xbb, 0xba, 0x4f, 0x76, 0x76, 0xfb, 0xc9, 0xee,
-  0xf6, 0xce, 0x6e, 0x64, 0x0e, 0xbd, 0xff, 0xa4, 0xa0, 0xa8, 0x5d, 0x7c,
-  0xdd, 0xfb, 0xd8, 0x59, 0xb8, 0x7c, 0x06, 0xdc, 0x24, 0x92, 0xf9, 0x6b,
-  0x98, 0x0f, 0xf9, 0x67, 0x01, 0xc4, 0x8c, 0x62, 0xc9, 0x80, 0xb3, 0xc3,
-  0xb5, 0xc5, 0x46, 0x42, 0xad, 0xb1, 0x69, 0x4b, 0x87, 0x4d, 0x51, 0x49,
-  0x87, 0xeb, 0xd5, 0x22, 0xf2, 0xc5, 0x5a, 0x4a, 0xd3, 0x0a, 0x15, 0x44,
-  0xdb, 0x7b, 0x94, 0x37, 0xba, 0x2d, 0x14, 0x5a, 0x43, 0x7b, 0x63, 0xe8,
-  0xfd, 0xd5, 0xf1, 0xe1, 0x85, 0xe2, 0x1d, 0x5e, 0x92, 0xf0, 0x54, 0xdd,
-  0x7f, 0x5c, 0x31, 0xc6, 0x07, 0x9f, 0x99, 0xee, 0x5f, 0x67, 0x46, 0x8c,
-  0x2e, 0xc6, 0xcb, 0xab, 0xfd, 0xbf, 0xa5, 0xd5, 0x55, 0x59, 0x3c, 0xf6,
-  0xfc, 0x14, 0x09, 0x65, 0xfb, 0x86, 0x43, 0xed, 0x3c, 0xdf, 0x79, 0x82,
-  0xfc, 0xef, 0x59, 0x8e, 0x82, 0x40, 0xc4, 0x20, 0xd6, 0xe7, 0xeb, 0x0c,
-  0xb0, 0x81, 0x34, 0x09, 0x8b, 0xaa, 0x51, 0x4c, 0xd7, 0xf9, 0xba, 0x4f,
-  0xfd, 0x67, 0xa7, 0xf2, 0x2c, 0xa7, 0x9e, 0xaf, 0x4b, 0xae, 0xc2, 0x3a,
-  0xa5, 0x69, 0x2e, 0x17, 0xeb, 0x6d, 0x88, 0xf8, 0x47, 0xe6, 0x4a, 0x5d,
-  0xd8, 0xda, 0x93, 0x87, 0x16, 0xf8, 0x1e, 0x19, 0x44, 0x55, 0x96, 0xde,
-  0xb8, 0xea, 0xc9, 0x0e, 0x7d, 0x43, 0x5d, 0x1e, 0xe7, 0xaf, 0x0f, 0x19,
-  0xc1, 0x54, 0xf3, 0xa5, 0xb0, 0xd4, 0x89, 0x35, 0x4d, 0x6d, 0xd2, 0x28,
-  0x1f, 0xe9, 0x9f, 0x72, 0x1b, 0xf6, 0xa7, 0xe3, 0x8f, 0x78, 0xc8, 0x9c,
-  0x3b, 0x06, 0x8b, 0x3b, 0x68, 0x97, 0xde, 0x21, 0x45, 0x0d, 0xf5, 0x43,
-  0xb4, 0x54, 0xf2, 0x06, 0x97, 0xa2, 0x65, 0x8f, 0x03, 0x0d, 0x4d, 0x0b,
-  0x50, 0xab, 0x75, 0xc7, 0x8c, 0x9b, 0xaa, 0xbc, 0xbe, 0x3a, 0x38, 0xf3,
-  0x14, 0x5d, 0x28, 0x92, 0xce, 0xa8, 0x47, 0xcf, 0x91, 0xa2, 0x83, 0x4a,
-  0xec, 0x52, 0x8d, 0xa9, 0xef, 0x54, 0x94, 0x06, 0x7c, 0x92, 0x64, 0x23,
-  0x04, 0xc8, 0x97, 0x72, 0x9f, 0xc0, 0xfe, 0x84, 0x6a, 0x06, 0xb3, 0x69,
-  0x0a, 0x47, 0xa8, 0xdc, 0x42, 0x90, 0xb9, 0xd0, 0x56, 0x2e, 0xd1, 0x50,
-  0x66, 0x6f, 0x3e, 0x24, 0x92, 0xc4, 0x21, 0xd9, 0x2a, 0x52, 0x6f, 0x04,
-  0x8f, 0x51, 0x56, 0xf2, 0xbd, 0x4e, 0x80, 0xf9, 0xb3, 0x19, 0x7c, 0x5a,
-  0xdf, 0x18, 0x56, 0xca, 0x0e, 0x7c, 0xd3, 0x7b, 0x2e, 0x2e, 0x70, 0x32,
-  0xfa, 0xe4, 0x1c, 0x48, 0x43, 0xe6, 0x27, 0xe0, 0x20, 0xb5, 0x36, 0x8c,
-  0xaf, 0x20, 0xd2, 0x38, 0x67, 0x75, 0xc6, 0xa8, 0x85, 0x80, 0xd1, 0x21,
-  0x8f, 0x19, 0x6d, 0x18, 0x34, 0x0d, 0x8d, 0x44, 0x05, 0x13, 0xa0, 0xbd,
-  0xdd, 0xdd, 0x7d, 0xfa, 0xb4, 0x9f, 0xf4, 0xc8, 0x5a, 0xa7, 0x05, 0xe9,
-  0x89, 0xb4, 0x0c, 0x85, 0xf6, 0xa2, 0x75, 0x69, 0xb7, 0xaa, 0xcb, 0x09,
-  0xfd, 0x8f, 0xde, 0xd3, 0x72, 0x8c, 0x17, 0x92, 0xbe, 0x42, 0xc3, 0x84,
-  0x6b, 0xd2, 0x82, 0xcc, 0xf0, 0xfe, 0xd0, 0x77, 0xc7, 0xd6, 0x20, 0x43,
-  0xde, 0x97, 0x45, 0x56, 0x2e, 0xd4, 0xcd, 0x3a, 0x97, 0x42, 0x1b, 0xe8,
-  0xdf, 0xf3, 0x4d, 0xc1, 0x31, 0xce, 0x71, 0x65, 0x82, 0x26, 0x50, 0x2f,
-  0xc7, 0x03, 0x49, 0xab, 0x65, 0xf5, 0x2c, 0x37, 0x47, 0xc0, 0xfc, 0x39,
-  0x53, 0xbb, 0x77, 0xc0, 0xda, 0xbe, 0x4a, 0x7a, 0xb2, 0x49, 0xf4, 0x63,
-  0x08, 0x2f, 0x69, 0x36, 0xa1, 0x69, 0x94, 0x2f, 0xe5, 0x8f, 0xff, 0xf8,
-  0x0f, 0xd3, 0xec, 0x7f, 0x50, 0x2b, 0x2f, 0xff, 0x54, 0x37, 0xd7, 0xde,
-  0x33, 0x3d, 0xa1, 0x9c, 0x63, 0xe7, 0x23, 0x46, 0xdc, 0x17, 0xf0, 0x5a,
-  0x91, 0xfd, 0xf5, 0xe6, 0x44, 0x58, 0x5b, 0xdf, 0x9b, 0x5f, 0x8e, 0xbc,
-  0x3c, 0xb6, 0x36, 0xda, 0xb0, 0x8b, 0xaf, 0xc8, 0x7f, 0x9b, 0x51, 0x3e,
-  0xb7, 0xd9, 0x04, 0xc0, 0xf1, 0x6d, 0xea, 0x5d, 0x7d, 0xf4, 0xf6, 0xbb,
-  0xe3, 0xf3, 0xd3, 0xb7, 0x6f, 0x8e, 0xde, 0x5e, 0x24, 0xdf, 0x1d, 0x9c,
-  0x1f, 0x1f, 0x7c, 0x75, 0x22, 0x69, 0xe3, 0x34, 0x05, 0x8a, 0x96, 0x61,
-  0x21, 0xb6, 0x03, 0xa7, 0xea, 0x65, 0xf4, 0x44, 0x8b, 0x70, 0x74, 0xea,
-  0x0b, 0xbf, 0x17, 0x2c, 0x70, 0x88, 0xf4, 0xef, 0x51, 0x4f, 0xa8, 0x4f,
-  0x52, 0xdc, 0x7b, 0x2d, 0x2d, 0x44, 0x5a, 0xc8, 0xbd, 0x97, 0x88, 0x4c,
-  0x81, 0x3c, 0x44, 0x52, 0x7a, 0xd0, 0x5d, 0x51, 0x3d, 0x5b, 0xa5, 0xe2,
-  0x6b, 0xce, 0x65, 0xd7, 0x92, 0x1d, 0xfa, 0x2a, 0xf6, 0x90, 0xb9, 0xb4,
-  0x1b, 0xc3, 0xc1, 0xc9, 0x89, 0xeb, 0xea, 0xe1, 0x6a, 0x2e, 0x82, 0x63,
-  0xc4, 0x59, 0x50, 0x68, 0x94, 0x3c, 0x6c, 0x57, 0xa5, 0x03, 0x36, 0x2f,
-  0xee, 0x7d, 0x0c, 0x73, 0xea, 0xcc, 0x6c, 0xc7, 0x06, 0x03, 0x50, 0x90,
-  0xbb, 0xd5, 0x68, 0x63, 0x79, 0x7d, 0xd3, 0x4f, 0xd6, 0xff, 0xb4, 0x2e,
-  0x25, 0xb9, 0x81, 0xba, 0xcb, 0xb5, 0x62, 0x36, 0xdd, 0xa0, 0xde, 0x9e,
-  0xba, 0x31, 0x89, 0x07, 0xd1, 0x0e, 0xc0, 0xbe, 0xe8, 0xfc, 0xbf, 0xb5,
-  0x0a, 0x06, 0x08, 0xbc, 0x74, 0x8f, 0x4b, 0x41, 0x05, 0x9b, 0x57, 0x2f,
-  0x34, 0x4a, 0x1e, 0xa2, 0xe8, 0xbb, 0x50, 0x7f, 0xd2, 0x89, 0x07, 0xae,
-  0x8c, 0xb9, 0x16, 0x64, 0x33, 0xb0, 0x45, 0xae, 0xd4, 0xac, 0x66, 0x96,
-  0x9a, 0x8c, 0x63, 0xe2, 0x97, 0x5b, 0xd6, 0xc2, 0x8a, 0x40, 0x55, 0x1f,
-  0xb6, 0xb4, 0x66, 0x0c, 0x9c, 0x75, 0x14, 0x58, 0x5f, 0xe5, 0x53, 0x01,
-  0xeb, 0x8b, 0x52, 0xc5, 0x10, 0x3e, 0x9e, 0xf3, 0x43, 0x60, 0x9b, 0x17,
-  0x54, 0xdd, 0xd0, 0xd5, 0xa4, 0x40, 0x10, 0xae, 0xd1, 0x62, 0x2b, 0xca,
-  0x6c, 0x2b, 0xe4, 0x36, 0x47, 0x60, 0x2b, 0x84, 0xdd, 0xf4, 0xaa, 0x54,
-  0x41, 0x36, 0xb5, 0xde, 0x67, 0x5b, 0xb9, 0xcb, 0x13, 0x8e, 0x2d, 0x02,
-  0x97, 0xb5, 0xfd, 0xc1, 0x4f, 0xad, 0x96, 0x76, 0x8a, 0xd3, 0xa2, 0x2d,
-  0xd7, 0x4a, 0xcc, 0xb5, 0x97, 0xe3, 0xec, 0xd2, 0x00, 0x88, 0x97, 0x70,
-  0xb4, 0xbb, 0x42, 0x62, 0x01, 0x86, 0x4c, 0x73, 0xa2, 0x11, 0x31, 0x88,
-  0x61, 0xd1, 0x83, 0x68, 0x52, 0x82, 0x3f, 0xd1, 0xa4, 0x1a, 0x81, 0xcd,
-  0xe9, 0x99, 0x51, 0x26, 0x96, 0x72, 0xa2, 0x34, 0x19, 0xe7, 0x57, 0x9c,
-  0x5b, 0x4f, 0x89, 0xdc, 0x44, 0x25, 0x80, 0x4a, 0x33, 0x1a, 0x32, 0x6d,
-  0x15, 0x80, 0xd0, 0x20, 0x04, 0x5f, 0x97, 0x33, 0x1f, 0xad, 0x4b, 0x67,
-  0x52, 0x4b, 0x4d, 0x32, 0xb5, 0x21, 0xc2, 0x87, 0xb0, 0xa4, 0x75, 0xd4,
-  0xb0, 0x2e, 0x81, 0xf9, 0x96, 0x20, 0x37, 0x32, 0x4e, 0x03, 0x73, 0xb0,
-  0x40, 0x4a, 0x8d, 0xe6, 0x24, 0x63, 0x1d, 0x34, 0x00, 0x98, 0xb8, 0x05,
-  0x0c, 0x52, 0x54, 0x2f, 0x71, 0xc3, 0xe2, 0x74, 0x53, 0x2b, 0x13, 0x46,
-  0x3a, 0x25, 0xa2, 0x67, 0xd7, 0x6c, 0xbb, 0xb0, 0x8e, 0x6c, 0x96, 0x60,
-  0x50, 0x19, 0x9a, 0xa0, 0x41, 0x9b, 0x95, 0xda, 0xf0, 0x18, 0x4f, 0x61,
-  0x48, 0x84, 0x1f, 0x63, 0x4d, 0x4c, 0xfe, 0x1a, 0xd8, 0x9a, 0x60, 0xe2,
-  0xc0, 0xdd, 0x74, 0x0e, 0x7c, 0xbe, 0x4e, 0x89, 0x5a, 0x27, 0x52, 0x95,
-  0x11, 0xae, 0x6e, 0x2a, 0x29, 0x09, 0x60, 0xa5, 0x96, 0x11, 0x2f, 0xd1,
-  0xc4, 0x95, 0xd9, 0xcc, 0x03, 0xea, 0x66, 0xbd, 0x3e, 0x0d, 0x2e, 0x71,
-  0xf2, 0xb2, 0x0c, 0x99, 0x03, 0x70, 0x08, 0x0d, 0x83, 0xfa, 0x7a, 0x13,
-  0x91, 0xe0, 0x6c, 0x12, 0x73, 0x3a, 0xb6, 0x41, 0x8f, 0xa1, 0xa9, 0x9b,
-  0xd9, 0xbf, 0x98, 0xa4, 0x2e, 0x45, 0x9e, 0xce, 0x59, 0x08, 0x73, 0xd4,
-  0x37, 0xbf, 0xe7, 0xf0, 0xbd, 0xb5, 0xb5, 0xc3, 0x77, 0xa3, 0x8b, 0xd3,
-  0x37, 0xc9, 0xe9, 0xbb, 0x8b, 0xb3, 0x77, 0x17, 0x72, 0x73, 0x8d, 0x39,
-  0xf8, 0x99, 0x43, 0x00, 0xf8, 0x36, 0xd5, 0xcd, 0x9c, 0x8b, 0xa3, 0x1c,
-  0xb1, 0x1a, 0x25, 0xe0, 0xf9, 0x3c, 0x64, 0x1e, 0x9b, 0xdc, 0x04, 0xcc,
-  0x2a, 0xc6, 0xfd, 0xc5, 0x92, 0xdf, 0x99, 0x25, 0x47, 0x62, 0x2a, 0x2c,
-  0x62, 0x9a, 0x2b, 0x05, 0xfd, 0x41, 0xcf, 0x5a, 0xbb, 0xe6, 0xcb, 0x7d,
-  0x5b, 0x1f, 0x80, 0x97, 0xbb, 0x8d, 0x84, 0xe4, 0x97, 0x9e, 0x64, 0x23,
-  0x89, 0xb3, 0xa1, 0xf8, 0xb1, 0x91, 0x52, 0xb8, 0x52, 0x2d, 0xb9, 0x1a,
-  0x9e, 0x8a, 0x98, 0x9d, 0x76, 0x86, 0x9e, 0x9f, 0x28, 0xd8, 0x94, 0x66,
-  0x86, 0xd7, 0x36, 0xb4, 0x9c, 0xc2, 0x71, 0x10, 0x52, 0xc7, 0x91, 0x08,
-  0x14, 0xbb, 0xc6, 0xa2, 0xb7, 0x51, 0xa8, 0xc8, 0xf6, 0x1f, 0xdc, 0xb2,
-  0x77, 0xc9, 0xfa, 0xf7, 0x99, 0xdf, 0xe0, 0x1f, 0xfe, 0x8b, 0xf2, 0x1f,
-  0xdf, 0xeb, 0x27, 0xff, 0xe4, 0x2e, 0x7f, 0x2a, 0xd6, 0x11, 0x89, 0xd6,
-  0x76, 0x39, 0x7f, 0x7b, 0x74, 0xfe, 0xd5, 0xd1, 0xf9, 0xe9, 0x08, 0xfc,
-  0x40, 0xed, 0x46, 0x21, 0xad, 0xdf, 0x64, 0xd5, 0x38, 0xab, 0x4a, 0xa9,
-  0x47, 0xa5, 0x7f, 0x3d, 0xdd, 0xfa, 0x7a, 0x34, 0x3a, 0x38, 0x3b, 0xb6,
-  0x15, 0x5f, 0x6c, 0x26, 0x16, 0xeb, 0x1a, 0x05, 0xe7, 0x0a, 0xd2, 0xfc,
-  0xf5, 0x15, 0x43, 0x17, 0x93, 0x1b, 0x8e, 0xd0, 0x0d, 0x9c, 0xbb, 0x6a,
-  0xa0, 0x26, 0xaf, 0xae, 0x24, 0xe8, 0x51, 0xc3, 0x8a, 0xa8, 0xe4, 0xa3,
-  0xb6, 0x33, 0xbc, 0x3a, 0x19, 0xd5, 0xfb, 0x36, 0x94, 0xed, 0xa6, 0x1a,
-  0x1b, 0x55, 0x7c, 0x72, 0xa3, 0x05, 0x90, 0x39, 0xa1, 0xc0, 0xb0, 0x4a,
-  0x8e, 0x34, 0x76, 0x4a, 0xfb, 0x0d, 0xd5, 0x92, 0xdf, 0xba, 0xa1, 0xf3,
-  0x41, 0xd5, 0x48, 0x66, 0x43, 0xe6, 0xee, 0x7c, 0xa0, 0x34, 0x7c, 0x94,
-  0x58, 0xec, 0x43, 0x28, 0x0f, 0xa6, 0x37, 0x5b, 0x42, 0x90, 0x0d, 0x47,
-  0xe6, 0x93, 0x3d, 0x0b, 0x77, 0xe5, 0xd7, 0xe3, 0xbe, 0x34, 0x92, 0xec,
-  0xe2, 0x6e, 0x2a, 0x97, 0x08, 0xd0, 0x9e, 0x0b, 0xb6, 0xf3, 0x33, 0x0f,
-  0xef, 0x7a, 0x7a, 0xa8, 0xcc, 0x21, 0x32, 0x1f, 0x24, 0xae, 0x3b, 0x19,
-  0xcf, 0xd2, 0xe2, 0x06, 0xb7, 0x19, 0xee, 0x27, 0xd2, 0xdd, 0x14, 0xc4,
-  0x89, 0xca, 0x4f, 0xc2, 0xb1, 0x27, 0xb8, 0x0a, 0x10, 0x02, 0x67, 0xc4,
-  0xdc, 0xee, 0xd9, 0x28, 0x6e, 0xb1, 0xaa, 0x3c, 0x17, 0x16, 0x8e, 0x93,
-  0x5b, 0x04, 0xb2, 0xc1, 0x1c, 0x9d, 0x98, 0x8b, 0xc9, 0x66, 0x6b, 0x40,
-  0xd7, 0xcd, 0x66, 0x64, 0x53, 0xd5, 0xd0, 0x1a, 0x4e, 0x50, 0xcc, 0xc1,
-  0xc8, 0x98, 0x7b, 0x28, 0x10, 0x39, 0x1c, 0x31, 0x20, 0x17, 0xe4, 0x61,
-  0xd6, 0xb6, 0x5c, 0x87, 0x70, 0x6e, 0x66, 0x62, 0x40, 0xd9, 0x74, 0xd5,
-  0x3b, 0xfc, 0x3a, 0x32, 0x12, 0xb7, 0x76, 0xe8, 0x02, 0x6b, 0x6c, 0x61,
-  0x2d, 0x1e, 0x84, 0x13, 0x4b, 0xad, 0xab, 0xae, 0x95, 0x26, 0xb2, 0x72,
-  0x9b, 0xf8, 0xf5, 0x98, 0x36, 0xcd, 0xe0, 0x60, 0x53, 0x71, 0x1c, 0x58,
-  0x5c, 0x1d, 0x8d, 0xfd, 0x6d, 0xc7, 0xdb, 0xea, 0xc0, 0xd9, 0xad, 0x4e,
-  0x56, 0xd0, 0x59, 0xa3, 0xde, 0x37, 0xc4, 0x8a, 0xca, 0x0d, 0xdc, 0x4c,
-  0xc1, 0x72, 0xaa, 0x16, 0xe4, 0xab, 0x1f, 0xe6, 0xca, 0xd0, 0x0f, 0x30,
-  0xb2, 0x71, 0xe2, 0x03, 0xf4, 0x01, 0x2b, 0xdf, 0x0e, 0xde, 0xd2, 0x75,
-  0x51, 0x0e, 0xc6, 0x4b, 0x28, 0x38, 0x5e, 0xc1, 0x2b, 0x4e, 0x86, 0x34,
-  0x7a, 0x0f, 0xa3, 0x92, 0xe1, 0x7b, 0x72, 0xec, 0x20, 0xcd, 0x9c, 0x7d,
-  0x3d, 0xc8, 0x3b, 0x6c, 0x23, 0xd6, 0x58, 0x9c, 0x12, 0x0e, 0xe6, 0x77,
-  0x95, 0x78, 0xed, 0x04, 0x65, 0x93, 0x6d, 0xd8, 0x5d, 0x21, 0xe5, 0x52,
-  0xe1, 0xa2, 0x68, 0x87, 0x2e, 0x37, 0x16, 0x38, 0xfe, 0x02, 0x62, 0x42,
-  0x26, 0x70, 0xea, 0x1a, 0x93, 0xac, 0x19, 0x10, 0xb7, 0x0d, 0x95, 0x68,
-  0x62, 0x88, 0x85, 0x74, 0xc6, 0xf5, 0x2e, 0x56, 0x5e, 0x25, 0x7c, 0x98,
-  0x9a, 0x8b, 0x8b, 0xbf, 0x9e, 0x1d, 0xbd, 0xd4, 0x37, 0x1f, 0xda, 0x33,
-  0x46, 0x1e, 0x43, 0xf0, 0x49, 0x26, 0x48, 0x9f, 0x5e, 0x91, 0x69, 0x43,
-  0x64, 0x83, 0x46, 0x9d, 0xe2, 0xdc, 0xcd, 0x20, 0xf9, 0xe1, 0xd5, 0xf1,
-  0xe8, 0xec, 0xe4, 0xf4, 0xf0, 0xe5, 0x8b, 0x1f, 0x94, 0x25, 0x7f, 0x41,
-  0xb6, 0x76, 0x96, 0xd3, 0xec, 0x67, 0x0e, 0x19, 0x41, 0xde, 0x7b, 0x7b,
-  0xf4, 0xfd, 0x7b, 0xa3, 0x1d, 0xbc, 0x24, 0x7c, 0xf4, 0xfe, 0x6d, 0x3a,
-  0x93, 0x97, 0x48, 0xc5, 0x8a, 0xc8, 0x76, 0xc3, 0x36, 0x94, 0x5d, 0x77,
-  0x61, 0x6d, 0x9d, 0x4f, 0x17, 0xf0, 0x7f, 0xaf, 0xf1, 0x68, 0x5e, 0x49,
-  0xa7, 0xb4, 0x95, 0x9f, 0x1a, 0xa9, 0xca, 0xeb, 0xae, 0xff, 0xf5, 0x86,
-  0x83, 0x13, 0xc9, 0x17, 0xef, 0xbb, 0xb8, 0x11, 0x00, 0x2a, 0xdf, 0xb8,
-  0xc0, 0x58, 0xc1, 0x21, 0xae, 0x28, 0x12, 0xc4, 0x02, 0x39, 0x4a, 0xa9,
-  0x67, 0x38, 0x8f, 0x05, 0xed, 0x51, 0x20, 0x8c, 0x28, 0x16, 0x55, 0xc3,
-  0xd2, 0x95, 0x8f, 0x89, 0x08, 0x63, 0xc7, 0x92, 0x6a, 0xd1, 0x59, 0x54,
-  0xb6, 0x39, 0x3b, 0x3a, 0x1f, 0x1d, 0x8f, 0x2e, 0x48, 0x8d, 0x92, 0x0a,
-  0x88, 0x62, 0xcc, 0xd5, 0xf2, 0x94, 0x00, 0x3f, 0x68, 0x03, 0x77, 0xfa,
-  0x55, 0x37, 0x5a, 0x27, 0xda, 0xb2, 0xb9, 0x76, 0x36, 0x24, 0xdd, 0x00,
-  0x9c, 0x62, 0x49, 0x82, 0x28, 0xc3, 0xcf, 0xa6, 0x97, 0x7a, 0x80, 0x4b,
-  0x21, 0x8d, 0x4e, 0xf1, 0x09, 0x14, 0x8e, 0xc1, 0xee, 0xcc, 0xf2, 0xb1,
-  0x57, 0x72, 0xba, 0xed, 0x8b, 0x25, 0x37, 0xbf, 0x40, 0x5d, 0xf8, 0x47,
-  0x48, 0x0d, 0xcb, 0x2e, 0xc5, 0x58, 0x8a, 0xe2, 0xca, 0xb5, 0x26, 0xe9,
-  0x81, 0x7e, 0x22, 0xa8, 0x55, 0x54, 0xa1, 0x9c, 0xf8, 0xc5, 0xbf, 0xf1,
-  0xa9, 0x17, 0xcd, 0x29, 0xe8, 0x49, 0x00, 0x7e, 0x15, 0x96, 0x4d, 0x4c,
-  0x39, 0xe7, 0x94, 0x2e, 0xb2, 0x58, 0x18, 0xa9, 0x05, 0x29, 0xea, 0x08,
-  0xb8, 0x91, 0x99, 0x05, 0x22, 0x88, 0x88, 0x8e, 0x57, 0x94, 0x0b, 0x06,
-  0x88, 0xaa, 0x29, 0xc9, 0x5b, 0x30, 0x65, 0xf9, 0x9d, 0xe9, 0x75, 0x4a,
-  0x2b, 0x38, 0x5e, 0xfa, 0x25, 0xd5, 0xec, 0xe8, 0xb9, 0xba, 0x07, 0x16,
-  0x1e, 0xa1, 0x86, 0x69, 0x05, 0x0c, 0xc8, 0x46, 0x20, 0xd7, 0x55, 0xf1,
-  0x91, 0xb8, 0xc1, 0x61, 0x1b, 0x0d, 0x47, 0xe9, 0x52, 0xcb, 0x7e, 0x3e,
-  0xb4, 0xa2, 0x5e, 0x0d, 0x46, 0x22, 0xdf, 0x2a, 0xd3, 0x00, 0x20, 0x36,
-  0x33, 0xd4, 0x64, 0xb9, 0x2f, 0x26, 0xf6, 0x32, 0xa6, 0xec, 0x1d, 0x72,
-  0xd4, 0x55, 0x82, 0x34, 0x64, 0xd8, 0x1f, 0x99, 0x68, 0x51, 0xb8, 0x11,
-  0x15, 0x8d, 0xc9, 0x7d, 0xa5, 0x28, 0x74, 0x2e, 0x1e, 0x9a, 0x97, 0xdb,
-  0x23, 0x2b, 0xb6, 0x53, 0xdf, 0x4b, 0x87, 0x36, 0xd3, 0x5c, 0x37, 0xab,
-  0xcf, 0x89, 0x4b, 0x29, 0xf2, 0x64, 0xd4, 0x40, 0xea, 0xe5, 0x5b, 0xd6,
-  0x92, 0xc5, 0x6a, 0xfd, 0xbc, 0x60, 0x78, 0xad, 0xea, 0xb5, 0x34, 0xbb,
-  0x96, 0x8f, 0xcd, 0xc8, 0x97, 0x0b, 0x94, 0x22, 0x9a, 0x08, 0x16, 0x3b,
-  0xa2, 0x5f, 0x6d, 0x83, 0x7a, 0x89, 0xb8, 0xc5, 0x32, 0xab, 0xfa, 0xe6,
-  0xdd, 0xc9, 0xc5, 0xf1, 0x99, 0xef, 0xc7, 0x4b, 0xbe, 0x3f, 0xbe, 0xf8,
-  0xc6, 0x48, 0xed, 0xa3, 0xe3, 0xb7, 0x5f, 0x9f, 0x90, 0xb3, 0xe4, 0xcd,
-  0x9b, 0x83, 0xb7, 0x94, 0xa6, 0xff, 0x16, 0x21, 0x82, 0x07, 0x50, 0x1c,
-  0x88, 0x1d, 0x99, 0x25, 0x26, 0xda, 0xa1, 0x04, 0xee, 0x7e, 0x68, 0xb3,
-  0xef, 0x1c, 0x3f, 0xae, 0x4e, 0x5c, 0xb4, 0x17, 0x69, 0x0d, 0xb5, 0xa6,
-  0xa1, 0x19, 0xdc, 0x93, 0x61, 0x07, 0xc7, 0x96, 0x94, 0x2d, 0x5a, 0xe8,
-  0x2e, 0x08, 0x3b, 0x92, 0x05, 0x59, 0x42, 0x87, 0x3f, 0x9a, 0xef, 0x6e,
-  0xe7, 0x07, 0xc0, 0x8e, 0x5a, 0x08, 0x57, 0xe8, 0x31, 0x46, 0x66, 0x2a,
-  0x44, 0xaf, 0xe1, 0xfb, 0xb2, 0x1d, 0xbc, 0x6f, 0x7a, 0xc4, 0x90, 0xe0,
-  0x90, 0x2f, 0x9d, 0x69, 0x8d, 0x34, 0x4e, 0x52, 0x9a, 0xcf, 0x4f, 0xfc,
-  0x0b, 0x75, 0xd8, 0xaa, 0xdd, 0xa5, 0x71, 0x76, 0x57, 0x65, 0xe6, 0x4e,
-  0xee, 0xe0, 0x54, 0x9b, 0x51, 0x3b, 0x2a, 0xd4, 0x30, 0xbe, 0x5c, 0x06,
-  0xc4, 0xd7, 0x06, 0x66, 0x4b, 0x36, 0x6d, 0xbd, 0x1e, 0x31, 0x9f, 0xed,
-  0xb3, 0x58, 0x69, 0x41, 0x8a, 0xb5, 0xcc, 0x9d, 0x69, 0x4e, 0x5b, 0x96,
-  0x98, 0x0e, 0x04, 0x36, 0x4b, 0x7e, 0x90, 0xcc, 0x19, 0xdc, 0x52, 0x1f,
-  0x6b, 0xa5, 0x37, 0xf3, 0x7d, 0x77, 0xaa, 0x46, 0x7e, 0xcd, 0x0f, 0xb3,
-  0x05, 0xd4, 0x9c, 0x0b, 0x12, 0x25, 0xca, 0xca, 0x72, 0x98, 0x7d, 0xc8,
-  0xc8, 0x5b, 0x48, 0xbf, 0xfe, 0x6d, 0x71, 0xe5, 0xa7, 0x8e, 0x71, 0x81,
-  0xe6, 0x45, 0x6c, 0x67, 0x05, 0x11, 0x99, 0xc5, 0x22, 0x29, 0x0a, 0xd7,
-  0x1a, 0x81, 0x54, 0x7a, 0xdb, 0x59, 0xd5, 0xa1, 0x7c, 0xbf, 0x1b, 0x7e,
-  0xbf, 0xcb, 0x66, 0xc7, 0xe3, 0xb3, 0xdb, 0x67, 0x16, 0x49, 0x94, 0x13,
-  0xa2, 0x7d, 0xf1, 0x4d, 0x85, 0x02, 0xa2, 0x30, 0x7a, 0x94, 0xef, 0x9c,
-  0x94, 0x79, 0x22, 0x1b, 0xd1, 0x29, 0x14, 0x6b, 0x59, 0x21, 0xd1, 0x13,
-  0x8f, 0xc0, 0xde, 0xca, 0xf1, 0xb3, 0x88, 0x56, 0x03, 0x9f, 0xa2, 0xeb,
-  0xca, 0x34, 0x68, 0xbe, 0xdf, 0xb3, 0x41, 0xed, 0x8e, 0xa7, 0xa1, 0xd8,
-  0x99, 0xa4, 0x15, 0x0d, 0xf2, 0xc5, 0xad, 0x56, 0xcb, 0x35, 0xbf, 0x3e,
-  0xb3, 0x85, 0x6e, 0xea, 0x96, 0xb3, 0xa7, 0x85, 0xda, 0xab, 0xcc, 0x1f,
-  0x83, 0x43, 0x7c, 0x21, 0x71, 0x06, 0xa7, 0x64, 0x74, 0xc6, 0x95, 0xb5,
-  0x23, 0x9b, 0xbd, 0x72, 0x9f, 0xc8, 0x9e, 0x98, 0x21, 0xc5, 0x14, 0xfc,
-  0xc8, 0x63, 0x2e, 0x3e, 0x62, 0xbe, 0xec, 0xfa, 0x8f, 0xbb, 0xdb, 0xdb,
-  0x3b, 0xfb, 0x3b, 0x9f, 0x3f, 0xdf, 0xde, 0xdf, 0xd9, 0xd9, 0xd9, 0xdd,
-  0xdf, 0xd9, 0xdf, 0xdf, 0xdd, 0xfe, 0x79, 0x8b, 0xec, 0x47, 0xb7, 0x79,
-  0x76, 0xa7, 0x1e, 0x1e, 0x4e, 0x6a, 0x03, 0x59, 0x73, 0xd5, 0x73, 0xd1,
-  0xe0, 0x45, 0xcf, 0x55, 0xc9, 0xc7, 0xc2, 0x33, 0x70, 0xec, 0x39, 0x43,
-  0xb1, 0x2d, 0x5c, 0xca, 0x26, 0xce, 0xa0, 0x07, 0x17, 0x8d, 0x51, 0xfd,
-  0x7d, 0x49, 0x33, 0x1d, 0x93, 0x38, 0x00, 0x99, 0xa6, 0xb6, 0x09, 0x72,
-  0x57, 0xb3, 0x72, 0x3c, 0x46, 0x0a, 0x80, 0xcd, 0x11, 0x1d, 0x26, 0x84,
-  0x49, 0x7a, 0xc3, 0x24, 0x21, 0x26, 0x78, 0x44, 0xe7, 0xf1, 0x41, 0x77,
-  0xab, 0xc3, 0x82, 0x97, 0x44, 0x24, 0x4f, 0x4a, 0xc2, 0xe7, 0x9f, 0x12,
-  0x53, 0x32, 0x8b, 0x54, 0xd9, 0xdc, 0x91, 0xe4, 0x32, 0xfb, 0x7c, 0x7b,
-  0x7f, 0x9f, 0x4a, 0x68, 0xfc, 0x61, 0xa7, 0x2f, 0x81, 0x95, 0x7e, 0xb4,
-  0x78, 0xdf, 0x5e, 0x4f, 0xdc, 0x06, 0xa9, 0x1f, 0xfe, 0x3c, 0x8b, 0xe5,
-  0x3c, 0xab, 0x8c, 0x22, 0x42, 0x45, 0x58, 0x11, 0x59, 0x08, 0xa3, 0x37,
-  0x63, 0x95, 0x01, 0xd9, 0xa4, 0x13, 0xd5, 0x4e, 0x37, 0x02, 0x63, 0xae,
-  0xda, 0x6c, 0x6e, 0xc6, 0xdd, 0x71, 0x53, 0xb4, 0x6d, 0xa3, 0x8c, 0x0c,
-  0x82, 0x9e, 0x38, 0x27, 0x84, 0xb3, 0x61, 0xf8, 0xbe, 0x15, 0xce, 0x80,
-  0xc3, 0x55, 0x70, 0x69, 0x50, 0x7a, 0x9c, 0x65, 0x78, 0x58, 0x4c, 0x3c,
-  0xe1, 0x56, 0x12, 0x61, 0x7e, 0xf4, 0x26, 0xbb, 0xfb, 0x74, 0xe7, 0x67,
-  0x8e, 0xfb, 0xa3, 0x03, 0xe1, 0x56, 0x4d, 0xca, 0xaa, 0x4d, 0xfd, 0x54,
-  0x07, 0x25, 0xa4, 0x8d, 0x6c, 0x78, 0x35, 0x54, 0xa9, 0x42, 0xac, 0x8d,
-  0x7d, 0x3f, 0xfa, 0x9a, 0xf1, 0xbe, 0xb9, 0xe0, 0x2f, 0xf4, 0x34, 0x35,
-  0x28, 0xa9, 0x41, 0x98, 0x8d, 0x99, 0xad, 0xfa, 0x38, 0xe6, 0x86, 0x39,
-  0xba, 0x38, 0x30, 0x97, 0xc7, 0xb7, 0xa1, 0xa2, 0xff, 0x26, 0x33, 0x5a,
-  0x39, 0x6d, 0xf6, 0x06, 0xce, 0xc3, 0xad, 0x45, 0xd9, 0xa5, 0xb5, 0xdb,
-  0x4b, 0x36, 0xc8, 0x69, 0xf1, 0xf4, 0xf3, 0xa7, 0x7b, 0x9b, 0x5c, 0xd2,
-  0x80, 0x5f, 0xcb, 0x28, 0xd1, 0x02, 0x56, 0x49, 0x41, 0x79, 0x21, 0x73,
-  0xb2, 0x65, 0x49, 0xef, 0xce, 0x8f, 0xf9, 0x48, 0x5f, 0x73, 0x32, 0x3e,
-  0x2b, 0xbd, 0x5d, 0x54, 0x36, 0xdc, 0xb7, 0x9e, 0x90, 0x31, 0xcf, 0x09,
-  0x31, 0x10, 0x49, 0xcc, 0x74, 0x31, 0xda, 0x24, 0x7a, 0xdc, 0xb0, 0xe6,
-  0x80, 0x96, 0x28, 0xf4, 0x27, 0xf5, 0x93, 0x30, 0x18, 0x40, 0x0c, 0x12,
-  0xc2, 0xa9, 0xd0, 0x99, 0xd5, 0xc0, 0x48, 0x0f, 0x62, 0x7e, 0xc4, 0xdc,
-  0xbf, 0x83, 0x6a, 0xbd, 0xc9, 0xae, 0x73, 0x08, 0x85, 0x44, 0x86, 0xe6,
-  0x41, 0x8d, 0xc1, 0xa4, 0x11, 0xb7, 0xd2, 0xba, 0x9c, 0xb4, 0xe9, 0x81,
-  0x23, 0x29, 0x2e, 0x8a, 0xb0, 0x22, 0xbb, 0x84, 0xec, 0x17, 0x6e, 0x60,
-  0x59, 0xcc, 0x5b, 0x26, 0x1f, 0x49, 0x4a, 0x47, 0x72, 0x38, 0x62, 0x77,
-  0xe7, 0xe6, 0x3a, 0xaa, 0xee, 0x45, 0xc2, 0x86, 0x9a, 0x60, 0xeb, 0x92,
-  0x75, 0x3c, 0xeb, 0x0c, 0xbf, 0xe0, 0x87, 0xa4, 0x5b, 0xf4, 0x11, 0x55,
-  0x9a, 0x5b, 0x03, 0x68, 0xb1, 0xfd, 0xc1, 0x5c, 0xbf, 0xf2, 0x02, 0x4f,
-  0xfc, 0x3c, 0x2d, 0xfd, 0x5d, 0x9f, 0xf3, 0x62, 0x12, 0xd3, 0xee, 0xc4,
-  0x56, 0x0c, 0x8d, 0x91, 0x29, 0x11, 0x87, 0x64, 0xb5, 0x9f, 0x0d, 0x8c,
-  0x64, 0x6b, 0x6b, 0x73, 0xc5, 0x68, 0xe4, 0xeb, 0x58, 0xef, 0x67, 0x00,
-  0xf7, 0xf0, 0x52, 0x23, 0xcd, 0x9e, 0xb7, 0x1b, 0xa7, 0xa5, 0xcd, 0x6b,
-  0xda, 0xc9, 0xa9, 0x04, 0x98, 0xb2, 0x19, 0x55, 0xd5, 0x2b, 0x1e, 0xbc,
-  0x32, 0xaf, 0xf6, 0x24, 0x24, 0xa6, 0x45, 0xc1, 0x96, 0xb8, 0x3a, 0x33,
-  0xfb, 0x09, 0x87, 0xc9, 0x01, 0x51, 0x43, 0xab, 0x63, 0x6f, 0xc8, 0x6a,
-  0xcf, 0x55, 0xfc, 0x70, 0x15, 0x62, 0xad, 0x39, 0xaf, 0xef, 0x7d, 0xa9,
-  0x62, 0x9e, 0xe6, 0xd6, 0x5b, 0x63, 0xef, 0x38, 0x63, 0x1c, 0x11, 0xcb,
-  0x39, 0x3d, 0x5c, 0xe0, 0xbc, 0x68, 0x15, 0xdc, 0x94, 0x46, 0xe0, 0x31,
-  0xb6, 0x93, 0x00, 0xe4, 0x60, 0xa5, 0x50, 0xb6, 0x7e, 0x11, 0x3e, 0xa4,
-  0xf2, 0x4b, 0x74, 0x38, 0x0b, 0xd6, 0x96, 0x88, 0xd9, 0x6d, 0x39, 0x66,
-  0xf2, 0x6a, 0xad, 0x47, 0x9f, 0x29, 0x9e, 0xa3, 0x01, 0x38, 0x70, 0xd5,
-  0x1c, 0x12, 0x62, 0x18, 0x07, 0xc7, 0x27, 0x14, 0x5e, 0x76, 0x62, 0x54,
-  0xbc, 0x91, 0x8a, 0x4a, 0x08, 0xb7, 0x44, 0xe0, 0x5b, 0x91, 0x93, 0xb8,
-  0xde, 0xb7, 0x85, 0x3b, 0x34, 0xeb, 0x08, 0x7a, 0x0b, 0x39, 0xf7, 0x58,
-  0xf5, 0x17, 0xb0, 0x3d, 0xb3, 0x5b, 0x46, 0x5e, 0xaa, 0xd9, 0x68, 0x0b,
-  0x20, 0x5b, 0x82, 0x78, 0xbf, 0xcd, 0x66, 0xe5, 0x02, 0x2a, 0x35, 0xb3,
-  0x69, 0xd4, 0x0d, 0xaa, 0xb2, 0x59, 0x76, 0x2b, 0xd6, 0x55, 0x86, 0x05,
-  0xfd, 0x5a, 0x7c, 0x98, 0x5c, 0x38, 0xb4, 0x91, 0xe8, 0xf0, 0xc0, 0x4f,
-  0x4a, 0x9d, 0x6e, 0x31, 0xba, 0x8a, 0x03, 0xcd, 0xa0, 0xfe, 0x1d, 0x98,
-  0xbd, 0x59, 0x21, 0x0b, 0x86, 0x3e, 0x20, 0x25, 0x57, 0x82, 0x44, 0xdf,
-  0xd5, 0x82, 0x8b, 0xd0, 0x8d, 0xba, 0x66, 0x63, 0xa1, 0xd6, 0x9e, 0x63,
-  0xeb, 0x7b, 0x5f, 0xe1, 0x86, 0xd9, 0x65, 0x40, 0x37, 0x4f, 0x9f, 0x2c,
-  0xb5, 0x5c, 0x4b, 0xdd, 0x68, 0x64, 0x54, 0x58, 0xa2, 0xcf, 0x29, 0x98,
-  0x20, 0x8e, 0x72, 0x66, 0xfe, 0x44, 0x60, 0x12, 0x87, 0x2a, 0x9a, 0x67,
-  0x09, 0x2e, 0xd5, 0x8b, 0x0d, 0x35, 0x7f, 0x72, 0x5a, 0x81, 0xfc, 0x85,
-  0xa6, 0xaa, 0x25, 0x50, 0x79, 0xfb, 0x7c, 0x1b, 0x92, 0xd7, 0xb1, 0x99,
-  0x0c, 0xed, 0xe8, 0xc5, 0x7b, 0xce, 0xe3, 0x7f, 0xc5, 0x4b, 0x49, 0x93,
-  0x60, 0x39, 0xa4, 0xac, 0x74, 0x79, 0x79, 0x1b, 0xc6, 0x5c, 0x2a, 0xf0,
-  0xab, 0x25, 0x79, 0xc3, 0x6c, 0x21, 0x1c, 0x1a, 0xc5, 0x9c, 0xee, 0xa2,
-  0x8c, 0xab, 0x72, 0xda, 0xc6, 0x49, 0xa5, 0x5b, 0x9a, 0xed, 0xe5, 0xd6,
-  0x4f, 0xca, 0x3b, 0x2a, 0x29, 0x7a, 0x79, 0x99, 0x4f, 0xc8, 0xc1, 0xed,
-  0xd0, 0x77, 0x89, 0xc7, 0xf3, 0x83, 0x73, 0xad, 0x62, 0x64, 0xe6, 0x96,
-  0x2c, 0x96, 0xe3, 0x99, 0xb9, 0xac, 0x35, 0x2e, 0xdc, 0x9c, 0x2a, 0xac,
-  0x92, 0xd1, 0xb6, 0xd0, 0x1c, 0xc3, 0x84, 0x41, 0xe1, 0xec, 0xc4, 0x22,
-  0x4b, 0x9d, 0x75, 0x12, 0xc1, 0xe7, 0xa8, 0xad, 0x4a, 0x01, 0xbb, 0xf3,
-  0xb2, 0xd0, 0xb4, 0x92, 0x65, 0xcd, 0xb0, 0x8c, 0x5a, 0x94, 0x7d, 0x8d,
-  0x5d, 0x13, 0xf9, 0x4c, 0xc0, 0xcf, 0x45, 0x35, 0xc7, 0x1b, 0xfe, 0x64,
-  0xa6, 0x83, 0xc5, 0xf5, 0x42, 0x77, 0x5a, 0x05, 0x22, 0x96, 0x96, 0x24,
-  0x91, 0x01, 0x47, 0xef, 0xec, 0x9b, 0xb3, 0x61, 0x72, 0x44, 0x2d, 0xf1,
-  0x98, 0x44, 0xd0, 0x85, 0x8d, 0xc6, 0x7c, 0x67, 0x26, 0x7b, 0x45, 0x17,
-  0xd8, 0x69, 0x45, 0x7f, 0xa1, 0x35, 0xf9, 0x92, 0xcd, 0xb2, 0xf8, 0xb6,
-  0xdd, 0xab, 0x69, 0x48, 0xc3, 0x95, 0xcf, 0xf0, 0xbb, 0x39, 0x2b, 0x46,
-  0xfc, 0xb2, 0xdb, 0xe4, 0x7a, 0x28, 0xab, 0x16, 0x88, 0x0d, 0xbf, 0x99,
-  0x18, 0xa9, 0x0c, 0xb2, 0xd5, 0xe2, 0x1e, 0xfb, 0xe7, 0x31, 0x47, 0x96,
-  0x3f, 0xb9, 0x01, 0x8f, 0xb4, 0x84, 0xfc, 0x6c, 0x20, 0x1c, 0x1f, 0xac,
-  0x8a, 0xe1, 0x5b, 0xaa, 0x4c, 0xc2, 0x06, 0x4b, 0x71, 0x93, 0xb2, 0x45,
-  0xa3, 0xce, 0x3a, 0xe7, 0xd5, 0xd3, 0xdf, 0xf4, 0x0b, 0x52, 0xbb, 0x69,
-  0x2c, 0x46, 0x6a, 0x31, 0x5b, 0x30, 0x5c, 0xfb, 0x7f, 0x01, 0x8e, 0x30,
-  0x96, 0xb9, 0xce, 0xa5, 0x02, 0x00,
+  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xed, 0xfd,
+  0x6b, 0x7b, 0xdc, 0x46, 0x92, 0x2d, 0x8c, 0x7e, 0xe7, 0xaf, 0xc0, 0x54,
+  0x9f, 0x1e, 0x92, 0xd3, 0x55, 0xc5, 0x8b, 0x2e, 0xb6, 0xd8, 0x92, 0xc7,
+  0x34, 0x45, 0xd9, 0x1c, 0x53, 0x22, 0x37, 0x8b, 0xb2, 0xdd, 0xaf, 0xed,
+  0x47, 0x0f, 0xaa, 0x0a, 0x24, 0xd1, 0xaa, 0x02, 0xaa, 0x01, 0x14, 0x29,
+  0xf6, 0xec, 0xde, 0xbf, 0xfd, 0x64, 0xac, 0x88, 0xc8, 0x4c, 0x20, 0xb3,
+  0x8a, 0xb4, 0xdb, 0xee, 0x3d, 0xe7, 0x79, 0x4f, 0xef, 0x3d, 0x96, 0x44,
+  0x02, 0x89, 0xbc, 0x46, 0xc6, 0x65, 0xc5, 0x8a, 0x24, 0x79, 0xe8, 0x7f,
+  0x1f, 0xf0, 0x7f, 0x1f, 0xcc, 0xff, 0xcc, 0x9f, 0x1b, 0x49, 0x72, 0x5e,
+  0x95, 0x7f, 0xcd, 0x26, 0x4d, 0xfc, 0xd9, 0x0f, 0x1f, 0xfe, 0x77, 0xc2,
+  0xff, 0xcf, 0xbc, 0xf3, 0x93, 0xf9, 0x73, 0x63, 0x6d, 0xdb, 0x3b, 0x89,
+  0x7b, 0xe1, 0x7f, 0x7f, 0xd8, 0x4e, 0x1e, 0x7a, 0xe1, 0x7f, 0x27, 0x5b,
+  0x78, 0xe1, 0x83, 0x7c, 0xe1, 0x25, 0xfd, 0xfd, 0xc3, 0x87, 0xf5, 0x1f,
+  0xf9, 0x89, 0x7a, 0x45, 0xff, 0xd9, 0xa1, 0xf7, 0x7e, 0xfa, 0x40, 0x7f,
+  0x35, 0x3f, 0xd9, 0xd8, 0x78, 0x77, 0xf8, 0xf6, 0x58, 0x5f, 0x9d, 0x2c,
+  0xab, 0x59, 0x32, 0x48, 0x9a, 0x2a, 0x2d, 0xea, 0xab, 0xac, 0x4a, 0xd2,
+  0xe4, 0xfd, 0xc5, 0xe9, 0xc6, 0xc6, 0xe8, 0x2f, 0xef, 0xce, 0xce, 0x47,
+  0x27, 0xa3, 0xd6, 0x63, 0x3f, 0x96, 0x8b, 0x26, 0x2f, 0x8b, 0xfa, 0xe7,
+  0xe4, 0x47, 0xf3, 0xd0, 0x70, 0x38, 0xfc, 0x79, 0x63, 0xe3, 0xf5, 0xf1,
+  0xe8, 0xe8, 0xe2, 0xe4, 0xfc, 0xf2, 0xe4, 0xec, 0x5d, 0xeb, 0xd9, 0x24,
+  0xaf, 0x13, 0xd3, 0x58, 0x53, 0x96, 0x33, 0xf3, 0x1f, 0xd7, 0xfe, 0x34,
+  0x6d, 0xd2, 0xe4, 0xaa, 0x2a, 0xe7, 0x49, 0x59, 0xd1, 0x2f, 0xd2, 0xa4,
+  0xce, 0xaa, 0xdb, 0xac, 0xea, 0x27, 0xcb, 0x3a, 0x2f, 0xae, 0x93, 0xb2,
+  0xc8, 0x92, 0xf2, 0x2a, 0x69, 0x6e, 0x32, 0x6d, 0xae, 0x5e, 0x2e, 0x16,
+  0x65, 0xd5, 0x64, 0xd3, 0x64, 0x51, 0x95, 0x4d, 0x39, 0x29, 0x67, 0x75,
+  0xb2, 0xf5, 0xfa, 0xe4, 0xe8, 0xb2, 0x9f, 0xbc, 0x39, 0x39, 0x3d, 0x36,
+  0xff, 0xbd, 0x3c, 0xc7, 0x7f, 0x46, 0xfd, 0xe4, 0xeb, 0xb3, 0xf3, 0x6f,
+  0x8e, 0x2f, 0xfa, 0xc9, 0x37, 0x97, 0xf4, 0x33, 0xfa, 0xaf, 0xf9, 0x61,
+  0x72, 0xf2, 0xf6, 0xf0, 0xbc, 0xaf, 0xcd, 0xd1, 0x3f, 0xe8, 0x87, 0xa7,
+  0xaf, 0xcd, 0x0f, 0xf9, 0x0f, 0xfa, 0xe7, 0xf9, 0xd9, 0xf9, 0x13, 0xf9,
+  0x83, 0xfe, 0x79, 0x71, 0xf9, 0xd6, 0xfc, 0xf6, 0xe2, 0x72, 0x64, 0xfe,
+  0x3b, 0x3a, 0xa2, 0xff, 0xe0, 0x2b, 0xa3, 0xb7, 0x5f, 0xe1, 0x3f, 0x23,
+  0xdb, 0xdc, 0xe8, 0x2d, 0xff, 0x1c, 0x5f, 0xba, 0x3c, 0x3e, 0x7d, 0x77,
+  0x7c, 0x99, 0xa4, 0xc5, 0x34, 0xb9, 0x34, 0xcf, 0x6f, 0x0f, 0x93, 0xcb,
+  0x9b, 0x2c, 0x99, 0x94, 0xf3, 0x39, 0xfd, 0xc8, 0xcc, 0xc8, 0x34, 0xab,
+  0xf3, 0xeb, 0xc2, 0x0c, 0xc5, 0x8c, 0xfc, 0xae, 0xac, 0x3e, 0x26, 0xc9,
+  0x5d, 0xde, 0xdc, 0x94, 0xcb, 0x46, 0x9b, 0x5b, 0x9a, 0xd9, 0x48, 0xf2,
+  0xa2, 0xc9, 0xaa, 0x74, 0x42, 0x73, 0x3d, 0xdc, 0x68, 0xcd, 0x6a, 0x79,
+  0x65, 0xe6, 0xb0, 0x36, 0x93, 0x36, 0x5e, 0xd6, 0xb3, 0x32, 0x9d, 0xd2,
+  0x54, 0x99, 0x57, 0xae, 0x96, 0x66, 0x92, 0xab, 0x7c, 0xf2, 0xb1, 0x4e,
+  0x66, 0xf9, 0xc7, 0x8c, 0x26, 0xea, 0xd3, 0xbd, 0x4e, 0x5c, 0x9f, 0x1b,
+  0x4d, 0x97, 0x66, 0x4e, 0x8b, 0x81, 0x36, 0xd7, 0xe4, 0x93, 0x94, 0x3e,
+  0x80, 0x99, 0x4b, 0x96, 0x0b, 0x6a, 0x8d, 0x67, 0x2c, 0x59, 0x94, 0xb5,
+  0x79, 0x69, 0x34, 0x3a, 0x35, 0x3d, 0x2f, 0x8a, 0x0c, 0xfd, 0xa8, 0xfb,
+  0xe6, 0x1f, 0xe5, 0xc7, 0x3c, 0x33, 0x7f, 0xb9, 0xca, 0x67, 0x59, 0xc2,
+  0x2b, 0x6a, 0x9b, 0xa3, 0xa5, 0x4d, 0xaa, 0xac, 0x5e, 0xce, 0x33, 0x33,
+  0x7b, 0x6f, 0xb3, 0x26, 0x9d, 0xe5, 0xc5, 0x47, 0xf3, 0x57, 0x1a, 0xf8,
+  0xbc, 0xac, 0xb2, 0x61, 0x72, 0x58, 0x27, 0xf7, 0xe5, 0xd2, 0x0c, 0x78,
+  0x36, 0x33, 0x6b, 0x9e, 0x25, 0xe3, 0x6c, 0x56, 0xde, 0xf5, 0x69, 0xa5,
+  0x93, 0x62, 0x39, 0x1f, 0x9b, 0x06, 0xca, 0x2b, 0xd7, 0x5c, 0xda, 0x2c,
+  0x4d, 0x73, 0xfc, 0xf4, 0x3c, 0x35, 0x63, 0x32, 0xef, 0x56, 0xc9, 0x4d,
+  0x66, 0xc6, 0x5c, 0x2f, 0xf2, 0xe2, 0xdf, 0xda, 0xf3, 0x62, 0xa6, 0x76,
+  0x51, 0xde, 0x65, 0x95, 0x99, 0xd9, 0xf1, 0x7d, 0x62, 0x26, 0x61, 0xcc,
+  0x9b, 0xf0, 0xca, 0x6c, 0xb2, 0x24, 0x35, 0x4d, 0xd8, 0x0d, 0x38, 0xa8,
+  0xb2, 0x59, 0x4a, 0x9b, 0xc9, 0x7e, 0x63, 0x68, 0x16, 0x31, 0xb3, 0xbb,
+  0x4d, 0x5e, 0xdd, 0x7a, 0xb2, 0x8d, 0x97, 0xa7, 0x66, 0x24, 0xf9, 0xac,
+  0x36, 0xcb, 0x40, 0xc7, 0x42, 0x9e, 0xa1, 0x45, 0xa5, 0x63, 0x62, 0xf6,
+  0xe6, 0x7d, 0xd1, 0xa4, 0x9f, 0xf0, 0x79, 0xd9, 0x9b, 0x83, 0x69, 0xb6,
+  0xc8, 0x8a, 0x69, 0x56, 0x34, 0xc3, 0xe4, 0x2f, 0xe5, 0x72, 0xd3, 0x7c,
+  0xfb, 0x2a, 0x37, 0x73, 0x90, 0x4a, 0x53, 0xe6, 0xcb, 0x66, 0x13, 0x4c,
+  0xaa, 0x7c, 0xe1, 0x2d, 0x45, 0x59, 0x98, 0x35, 0x4f, 0x2e, 0xde, 0x1c,
+  0x25, 0x4f, 0x5e, 0x7c, 0xfe, 0xdc, 0xad, 0xb9, 0x69, 0x20, 0x99, 0xa4,
+  0x85, 0x19, 0x71, 0x36, 0xc9, 0xaf, 0xee, 0x93, 0xf9, 0x72, 0xd6, 0xe4,
+  0x0b, 0x33, 0xfb, 0xe6, 0xe3, 0x35, 0x1d, 0xa0, 0x45, 0x5a, 0x35, 0x35,
+  0x6d, 0x02, 0xfc, 0x00, 0x63, 0xbf, 0xab, 0xf2, 0x86, 0x0e, 0x12, 0x7e,
+  0x67, 0x7a, 0x98, 0x35, 0xb5, 0x36, 0x47, 0x7b, 0xcd, 0x7c, 0x67, 0x6c,
+  0xf6, 0x96, 0x99, 0xda, 0xb4, 0x36, 0x1f, 0x3d, 0xd8, 0x70, 0x32, 0xe4,
+  0xa6, 0x69, 0x16, 0x07, 0x3b, 0x3b, 0x75, 0xde, 0x64, 0xc3, 0xff, 0x36,
+  0xe7, 0xb0, 0xdf, 0xdc, 0x95, 0xfd, 0xe6, 0xa6, 0xca, 0xb2, 0x7f, 0x0c,
+  0xcd, 0x1e, 0xb6, 0x4f, 0x9a, 0xef, 0xde, 0x4b, 0xc7, 0xae, 0xb3, 0xc6,
+  0x7c, 0xe1, 0x6f, 0xcb, 0xac, 0xa0, 0x16, 0x4d, 0x3f, 0xd2, 0xd9, 0xe2,
+  0x26, 0x35, 0xcb, 0x99, 0x99, 0xdd, 0x48, 0x27, 0xdb, 0x6c, 0x18, 0xea,
+  0x15, 0x9f, 0xed, 0x1f, 0x7f, 0x0e, 0x3f, 0x7a, 0x85, 0x6f, 0x9a, 0xff,
+  0x0e, 0xb3, 0x4f, 0xe9, 0xdc, 0x8c, 0x8d, 0x3e, 0xb5, 0x43, 0x5b, 0xec,
+  0xc7, 0xbd, 0xc1, 0xde, 0xee, 0xee, 0xcf, 0xc3, 0xe6, 0x53, 0xf3, 0xb8,
+  0xe7, 0x77, 0x77, 0xdd, 0x1b, 0xf4, 0xe8, 0x16, 0x8d, 0x37, 0x99, 0x99,
+  0x2d, 0x43, 0x1f, 0xff, 0x7b, 0x56, 0x95, 0xf5, 0xf6, 0xe3, 0x5a, 0x4a,
+  0x07, 0x7f, 0x6f, 0x7f, 0xf7, 0x5d, 0x56, 0x63, 0xcf, 0xb8, 0xb1, 0x26,
+  0x69, 0x65, 0xf6, 0x6d, 0xd9, 0x38, 0xf1, 0xd4, 0x37, 0x87, 0xb2, 0xb1,
+  0x33, 0x63, 0xce, 0x9c, 0x79, 0xda, 0x08, 0xb6, 0x74, 0x46, 0x32, 0xad,
+  0x4e, 0x8a, 0xec, 0x93, 0x3d, 0xe5, 0xe6, 0xf4, 0x67, 0xe9, 0xe4, 0x26,
+  0x29, 0xcd, 0xe6, 0xaf, 0x22, 0x4b, 0xe0, 0x77, 0x28, 0xad, 0x26, 0x37,
+  0xf9, 0xad, 0x99, 0x8d, 0x17, 0x2f, 0x9e, 0x0f, 0xcc, 0x7f, 0x5e, 0xfc,
+  0xbc, 0x73, 0x5b, 0xce, 0xcc, 0xe4, 0x3c, 0xfd, 0x79, 0x87, 0x96, 0xf8,
+  0xbf, 0xd3, 0xfe, 0xb8, 0x3f, 0xf9, 0xc7, 0xf0, 0xa6, 0x99, 0xcf, 0x56,
+  0x6e, 0x9c, 0xb4, 0x30, 0xff, 0x37, 0x2f, 0x97, 0x45, 0x63, 0x37, 0x8b,
+  0xd9, 0x73, 0x8d, 0x27, 0x9c, 0xcc, 0x71, 0x35, 0x67, 0x94, 0xb6, 0x36,
+  0xed, 0x21, 0x3a, 0x75, 0xe6, 0x80, 0xba, 0xe3, 0xd8, 0x4c, 0x6e, 0xcc,
+  0xf8, 0xcd, 0xe6, 0x49, 0x65, 0x0e, 0x9a, 0x3c, 0xa5, 0x83, 0x69, 0xe4,
+  0x03, 0xc9, 0x2b, 0x34, 0xc5, 0x1f, 0xcb, 0xcd, 0x73, 0x65, 0x35, 0xcd,
+  0xaa, 0xf6, 0x36, 0x46, 0x77, 0x5c, 0x7f, 0x12, 0x33, 0x9f, 0x0b, 0xf3,
+  0xf1, 0x25, 0x89, 0x3a, 0x9c, 0x34, 0x6a, 0xc1, 0x9c, 0xd1, 0x6b, 0x33,
+  0x55, 0x66, 0x7a, 0x68, 0x63, 0xd1, 0xec, 0xdd, 0x27, 0xef, 0xcc, 0x1a,
+  0xb2, 0x7c, 0xf0, 0xf6, 0xdf, 0x2c, 0x6b, 0x9a, 0x07, 0x67, 0xce, 0x6d,
+  0xa2, 0x83, 0xbd, 0x60, 0x1f, 0xad, 0x7a, 0xde, 0x2c, 0xfd, 0xc1, 0x7e,
+  0xfb, 0xe1, 0xef, 0x8d, 0xdc, 0x74, 0x3b, 0xd8, 0x7c, 0xfd, 0xbf, 0xff,
+  0xe1, 0x6d, 0x84, 0x3b, 0xfa, 0x6d, 0x5e, 0xdc, 0x96, 0x1f, 0xcd, 0xc0,
+  0x71, 0xb1, 0xa5, 0xad, 0x49, 0x4d, 0x48, 0x34, 0xcc, 0x17, 0x8d, 0xbd,
+  0x31, 0x68, 0x87, 0x98, 0x1f, 0x8d, 0xd3, 0xf1, 0xec, 0x3e, 0xb9, 0x49,
+  0x6f, 0x33, 0x1a, 0xef, 0xc2, 0x6c, 0x1d, 0x9a, 0x01, 0x23, 0xc9, 0x67,
+  0x10, 0x2d, 0x72, 0x56, 0xa7, 0xe5, 0x72, 0x6c, 0xce, 0xfb, 0xdf, 0x96,
+  0x65, 0xc3, 0x13, 0x93, 0xde, 0x96, 0xf9, 0xb4, 0x75, 0x3d, 0xde, 0x64,
+  0x24, 0x63, 0xe8, 0xc3, 0xb8, 0x37, 0x8c, 0x8c, 0xa3, 0x9e, 0x62, 0xef,
+  0xe7, 0x0d, 0xdd, 0x40, 0x46, 0x3a, 0xa5, 0xb3, 0xba, 0x4c, 0x92, 0xeb,
+  0x92, 0x36, 0x2e, 0x64, 0x22, 0x76, 0x9e, 0x59, 0x94, 0x9b, 0x94, 0x2e,
+  0x1a, 0x73, 0xa7, 0xd8, 0xad, 0x59, 0x65, 0x10, 0x8f, 0x58, 0xa9, 0x74,
+  0xd6, 0xe7, 0x0b, 0x85, 0xde, 0x91, 0xa9, 0x4a, 0x36, 0xff, 0x7d, 0xb3,
+  0x9f, 0x6c, 0xfe, 0xe7, 0x26, 0x44, 0xfb, 0xe6, 0x7f, 0x6c, 0xba, 0x75,
+  0x36, 0x1a, 0xd2, 0x6d, 0x3e, 0xa5, 0xbb, 0xc1, 0x8c, 0xe4, 0xe4, 0xfc,
+  0xf6, 0x79, 0xf2, 0x77, 0xba, 0xce, 0x8d, 0xf8, 0xcb, 0x3e, 0xe9, 0x26,
+  0xd1, 0xb1, 0x99, 0xb7, 0x13, 0x23, 0x07, 0xd3, 0x05, 0xdd, 0xeb, 0x59,
+  0x35, 0x31, 0x3b, 0x2a, 0xbd, 0x36, 0x7b, 0xc8, 0x5c, 0x8f, 0xda, 0x1c,
+  0xb5, 0x4f, 0xaf, 0xf0, 0xb0, 0x8c, 0xcc, 0x4a, 0x8a, 0x74, 0x6e, 0x36,
+  0xe9, 0x29, 0xf5, 0x28, 0x2f, 0xc2, 0xc5, 0xfc, 0xf1, 0x2a, 0xfb, 0x7c,
+  0xf7, 0xe0, 0xe0, 0xc9, 0x1f, 0xf7, 0x9f, 0x65, 0xcd, 0xcd, 0xee, 0xcf,
+  0x3b, 0xf6, 0x91, 0x93, 0x2b, 0x4c, 0xbb, 0x6e, 0x3f, 0xed, 0x84, 0xb9,
+  0x78, 0xad, 0xe0, 0x36, 0xef, 0x9b, 0xbf, 0x67, 0x57, 0xf9, 0xa7, 0xbe,
+  0xaa, 0x30, 0x7c, 0x0c, 0x52, 0xb3, 0xd5, 0xcc, 0xfa, 0xd1, 0xa9, 0xd5,
+  0xe6, 0xae, 0x97, 0x59, 0x6d, 0x66, 0xf2, 0xee, 0x26, 0x6d, 0x12, 0xdb,
+  0x00, 0xaf, 0xec, 0x3c, 0xbf, 0xbe, 0x69, 0x92, 0xbb, 0x94, 0xe4, 0xff,
+  0x49, 0xc3, 0x4d, 0xd0, 0xc5, 0x6b, 0xa4, 0xfe, 0x55, 0x6a, 0xc4, 0x37,
+  0xad, 0x21, 0x6e, 0xd9, 0xb1, 0xbb, 0xf4, 0x1b, 0xb3, 0xcd, 0x79, 0x41,
+  0x9c, 0x86, 0x33, 0x4e, 0x6b, 0x3a, 0x48, 0x85, 0x39, 0xaf, 0x8d, 0xb9,
+  0xb6, 0x97, 0xf4, 0xaf, 0x1b, 0x73, 0x31, 0x63, 0x0e, 0xa4, 0xa3, 0xb8,
+  0xbb, 0xde, 0xd0, 0x72, 0xd2, 0xda, 0xd8, 0xfb, 0xc4, 0x2c, 0x52, 0x5f,
+  0x96, 0xd9, 0xbe, 0x51, 0x9b, 0x03, 0x67, 0x84, 0x85, 0xdd, 0x19, 0x3d,
+  0x92, 0x7b, 0x3d, 0x1e, 0x27, 0xfa, 0x98, 0xd6, 0x74, 0x77, 0xf3, 0x0d,
+  0x6d, 0x3a, 0xef, 0x0d, 0xd6, 0x4c, 0x5a, 0xfa, 0x91, 0xb4, 0x84, 0x8e,
+  0x2e, 0x82, 0xd7, 0xa6, 0xa5, 0xd9, 0x64, 0xa6, 0xb7, 0x46, 0x3e, 0xd2,
+  0xc8, 0x48, 0xea, 0x61, 0x56, 0xb0, 0xc9, 0x4d, 0x9b, 0xf4, 0xc3, 0xbc,
+  0x21, 0xb1, 0x0f, 0xc5, 0xd2, 0xf4, 0xd7, 0x4c, 0x0a, 0x74, 0x43, 0x23,
+  0x3b, 0xbd, 0xf1, 0xe3, 0xc6, 0x32, 0xcf, 0x26, 0xb7, 0x46, 0x71, 0x30,
+  0x3a, 0x62, 0x66, 0xdf, 0xc2, 0x15, 0x3b, 0x21, 0x75, 0x65, 0x66, 0xce,
+  0xcb, 0xa4, 0xac, 0x2a, 0x52, 0xc2, 0x69, 0x05, 0xc7, 0x2c, 0xd7, 0xe6,
+  0x99, 0xb9, 0xd9, 0xfd, 0xe9, 0xcc, 0xe9, 0x8e, 0x31, 0xf2, 0xc5, 0xa8,
+  0x0a, 0x90, 0x20, 0xe6, 0x4a, 0x87, 0x18, 0xc6, 0xc0, 0xd1, 0x3b, 0x6a,
+  0x7b, 0x32, 0xc9, 0x16, 0x4d, 0x1d, 0x1b, 0x93, 0x2e, 0xb8, 0xe9, 0x4e,
+  0x95, 0xd1, 0xcc, 0xfb, 0x7a, 0x10, 0xe6, 0xd5, 0xde, 0xc3, 0x50, 0x85,
+  0x54, 0xb5, 0x30, 0xaa, 0x51, 0x6d, 0x67, 0xad, 0xc1, 0xde, 0x30, 0x62,
+  0x0c, 0x73, 0x3e, 0xa7, 0x8e, 0xd2, 0xc3, 0x35, 0x9f, 0x54, 0x88, 0x4b,
+  0x5a, 0x48, 0x56, 0x7e, 0xf9, 0xbb, 0x74, 0x9b, 0x98, 0xf9, 0xb4, 0x8d,
+  0x9b, 0xaf, 0xda, 0x35, 0xa5, 0xcf, 0xd7, 0xc6, 0x6c, 0x30, 0x97, 0xeb,
+  0xb4, 0xbe, 0x31, 0xfa, 0x50, 0x2d, 0x27, 0x3b, 0x9f, 0x9b, 0x3d, 0x73,
+  0x4b, 0xeb, 0xbb, 0xc8, 0xb2, 0xe9, 0x30, 0x39, 0xbb, 0x22, 0xa9, 0x5a,
+  0x99, 0x4e, 0x37, 0xf8, 0x35, 0x09, 0x7a, 0x33, 0x6f, 0x53, 0xe8, 0xd5,
+  0xf6, 0x68, 0x71, 0x57, 0x3c, 0x89, 0x4d, 0x3b, 0xcd, 0x4c, 0x76, 0x42,
+  0x52, 0x6e, 0xd6, 0xbe, 0x15, 0x70, 0x0e, 0x8d, 0xf4, 0xa6, 0xee, 0x8d,
+  0xb3, 0x04, 0x3b, 0x71, 0x9c, 0x35, 0x77, 0x59, 0x66, 0x9b, 0xab, 0x33,
+  0x73, 0x13, 0xd1, 0xa2, 0xb1, 0x32, 0x06, 0x61, 0x48, 0x53, 0x7b, 0x7e,
+  0x71, 0xf6, 0xf5, 0xc5, 0xf1, 0x68, 0x94, 0xbc, 0x3d, 0xbe, 0x3c, 0xbe,
+  0x68, 0xcd, 0x74, 0x51, 0x56, 0x73, 0xac, 0xe8, 0x34, 0xaf, 0x17, 0xb3,
+  0xf4, 0x9e, 0x96, 0xda, 0x8c, 0xe4, 0xba, 0xa2, 0x93, 0x35, 0xcf, 0xe8,
+  0x56, 0x98, 0x2e, 0x21, 0xc9, 0x92, 0xd2, 0xc8, 0x87, 0x54, 0x94, 0x50,
+  0x12, 0x26, 0xd0, 0x5c, 0x8b, 0x6b, 0x37, 0xd3, 0x46, 0xe2, 0xc8, 0xe5,
+  0x46, 0xb7, 0x9b, 0x5d, 0x0f, 0xd2, 0x06, 0x61, 0x6f, 0xf4, 0xdd, 0xcf,
+  0x78, 0x9a, 0x6a, 0x8c, 0xc9, 0xec, 0xd9, 0x7c, 0x0e, 0x61, 0x67, 0xfe,
+  0x74, 0x0a, 0x60, 0x76, 0x65, 0xb4, 0x5f, 0x73, 0xe1, 0xb1, 0xf2, 0xde,
+  0xed, 0x93, 0xf6, 0xd6, 0xaa, 0xac, 0x66, 0x1b, 0x92, 0x68, 0xa6, 0x06,
+  0xb9, 0x2b, 0xfc, 0x05, 0x2b, 0xc4, 0x8c, 0x9a, 0x40, 0xb2, 0x4f, 0x1e,
+  0x5b, 0x50, 0x17, 0x32, 0xb3, 0xb2, 0x53, 0x6e, 0xbe, 0x5e, 0x5e, 0xe1,
+  0x20, 0x27, 0x5b, 0x46, 0x59, 0x7e, 0x6b, 0x0c, 0x18, 0x63, 0x44, 0xf4,
+  0x93, 0xf3, 0x6d, 0xbc, 0xb7, 0xb7, 0xbb, 0xff, 0x94, 0x05, 0xc1, 0x50,
+  0x9b, 0x7b, 0xe3, 0x09, 0xe2, 0xbd, 0x8f, 0xb4, 0xbc, 0xfc, 0x10, 0x35,
+  0x3e, 0x4c, 0xf6, 0xde, 0xf2, 0x4f, 0x9e, 0x7e, 0xfe, 0xec, 0xb3, 0xe7,
+  0xf2, 0xc3, 0xf6, 0x06, 0xb7, 0xfd, 0xc7, 0xee, 0x80, 0x31, 0x46, 0xd6,
+  0x99, 0xe9, 0x89, 0x19, 0xdd, 0x3c, 0x2f, 0xcc, 0x31, 0x31, 0xc7, 0x4a,
+  0x64, 0x15, 0xed, 0x67, 0xd3, 0xf9, 0x2b, 0x96, 0x6c, 0xb2, 0xae, 0x6d,
+  0x2b, 0xcf, 0xbc, 0x6c, 0xb6, 0xac, 0x91, 0xe5, 0x76, 0x91, 0x30, 0x13,
+  0xe6, 0x80, 0xd1, 0xad, 0x33, 0x26, 0x01, 0x4b, 0xa6, 0x8e, 0xd1, 0x49,
+  0xb3, 0xe8, 0xd7, 0xec, 0xad, 0x68, 0xde, 0x30, 0x7d, 0x33, 0x77, 0x22,
+  0x5d, 0x73, 0xe1, 0xbc, 0x1b, 0x51, 0x00, 0x09, 0x79, 0x97, 0xd7, 0x10,
+  0x0d, 0x77, 0xe5, 0x72, 0x66, 0x0c, 0x0b, 0x7a, 0x60, 0xb9, 0xc0, 0x0b,
+  0xe6, 0x53, 0x0b, 0x27, 0x03, 0xe6, 0xf9, 0x27, 0xda, 0x3b, 0xdd, 0x56,
+  0x4c, 0xd7, 0xcc, 0x3f, 0x17, 0x66, 0x2b, 0x71, 0x77, 0x86, 0xdd, 0x1b,
+  0x02, 0xb2, 0x2f, 0xd8, 0x89, 0x74, 0xe6, 0x21, 0xb4, 0xcf, 0xcf, 0x46,
+  0x97, 0xa4, 0x01, 0x9c, 0xbf, 0xbf, 0x34, 0x0d, 0x19, 0x15, 0xa0, 0x6e,
+  0xcc, 0xa6, 0xa4, 0x17, 0x8b, 0x0c, 0x56, 0x9d, 0x36, 0x67, 0xf6, 0x5e,
+  0x0e, 0x41, 0x05, 0xb5, 0x46, 0x3f, 0xc9, 0x7d, 0x64, 0xb3, 0x97, 0x8e,
+  0xa0, 0x1a, 0xbd, 0x7c, 0x87, 0xbb, 0x97, 0x92, 0xad, 0x2f, 0xb6, 0xcd,
+  0xa6, 0x1d, 0xd8, 0xe6, 0x7e, 0xa4, 0xa7, 0xa1, 0x7b, 0xd4, 0xf9, 0x3c,
+  0x9f, 0xa5, 0x9e, 0x72, 0x25, 0xf2, 0x94, 0x4e, 0xa7, 0x95, 0x2a, 0x13,
+  0xb3, 0x67, 0xd0, 0x69, 0x67, 0xdb, 0xd1, 0x0c, 0x42, 0x26, 0xb9, 0x85,
+  0x9a, 0x92, 0x3a, 0x00, 0x15, 0x76, 0x91, 0xdb, 0x89, 0xa3, 0x15, 0x23,
+  0x61, 0xd5, 0x9a, 0xa6, 0xee, 0xaa, 0x05, 0xd3, 0x46, 0xf7, 0x11, 0x9c,
+  0x07, 0x76, 0xe2, 0x92, 0xde, 0x38, 0xad, 0x7a, 0x89, 0x95, 0xc4, 0x7c,
+  0x32, 0xe9, 0x7c, 0x54, 0xd9, 0xf5, 0xd2, 0x8c, 0x20, 0xe1, 0xb9, 0xa5,
+  0x61, 0xfe, 0xc1, 0xee, 0x82, 0xc1, 0x40, 0x1b, 0x18, 0x98, 0xd7, 0x69,
+  0x5c, 0x30, 0xfb, 0xae, 0x8c, 0x1d, 0x61, 0x4e, 0xcc, 0xc6, 0xc6, 0x19,
+  0x1c, 0x0d, 0xd6, 0x2b, 0x71, 0xc6, 0xfe, 0x88, 0x84, 0x2f, 0x37, 0x36,
+  0x70, 0x12, 0x76, 0x21, 0x18, 0x85, 0xf2, 0xce, 0xec, 0xcd, 0xd4, 0x4c,
+  0xad, 0x39, 0x18, 0x6f, 0x69, 0x48, 0xec, 0x56, 0x48, 0xc4, 0x89, 0x81,
+  0xf5, 0x33, 0xd3, 0x6d, 0x46, 0x6b, 0xcf, 0xea, 0x74, 0x9a, 0xd3, 0xef,
+  0xcc, 0x21, 0x30, 0xd7, 0xd0, 0x32, 0x83, 0xce, 0x2e, 0x63, 0x9f, 0xbb,
+  0x31, 0xe3, 0xdc, 0xde, 0x18, 0x9d, 0x3f, 0xe9, 0xb1, 0xb8, 0x1c, 0xd0,
+  0x67, 0x7a, 0x34, 0xe1, 0xf3, 0xce, 0x47, 0xfa, 0xc9, 0x60, 0x2a, 0x57,
+  0xb1, 0x9c, 0x5a, 0x33, 0xde, 0x79, 0x7a, 0xef, 0x2b, 0xd7, 0x10, 0xa8,
+  0xe8, 0x79, 0x59, 0x59, 0xad, 0xc4, 0xdc, 0x7b, 0x0b, 0xd2, 0x78, 0x44,
+  0xd0, 0xe2, 0xc6, 0xc2, 0xb9, 0xaa, 0xb9, 0x6b, 0x7d, 0xa3, 0xd2, 0xd1,
+  0x93, 0xd7, 0x37, 0xfa, 0xa8, 0x77, 0xfb, 0xa5, 0x66, 0x6c, 0x24, 0xc1,
+  0xc9, 0x0e, 0x9d, 0xaa, 0x70, 0x2e, 0x2b, 0x96, 0x38, 0xb3, 0xd2, 0x6c,
+  0xb8, 0x1e, 0xeb, 0x95, 0x5e, 0xc7, 0xa9, 0xa7, 0xe6, 0xff, 0x06, 0xec,
+  0x9f, 0x29, 0xad, 0xb2, 0x6d, 0xbb, 0x2d, 0xd3, 0x55, 0x3f, 0xd8, 0x35,
+  0x37, 0x51, 0x23, 0x4c, 0x92, 0xb9, 0xdf, 0x6a, 0xda, 0x6e, 0x3a, 0xef,
+  0xd8, 0x85, 0xe6, 0x3e, 0xda, 0x6c, 0xf8, 0xd0, 0xc0, 0x36, 0xe9, 0xcc,
+  0x7c, 0x0d, 0x73, 0x41, 0x6e, 0x1b, 0x3b, 0x32, 0x33, 0xa2, 0x69, 0x6e,
+  0x04, 0xb6, 0xb9, 0x35, 0x74, 0x65, 0x9c, 0x19, 0x15, 0xd1, 0x54, 0xef,
+  0x03, 0xbb, 0x83, 0x7c, 0x01, 0xfe, 0xbd, 0xa1, 0x7d, 0x1a, 0x9c, 0x99,
+  0xb1, 0x9f, 0x62, 0x1c, 0x83, 0xdb, 0x84, 0x4e, 0x89, 0xd1, 0xed, 0xe9,
+  0xc8, 0x0c, 0xce, 0x4e, 0x6f, 0xbd, 0xdd, 0x4e, 0x16, 0x6f, 0x41, 0xca,
+  0x44, 0x1f, 0x5e, 0x85, 0x71, 0x59, 0x1a, 0xf3, 0xd2, 0x0d, 0x8d, 0x84,
+  0x76, 0x56, 0x90, 0x10, 0x93, 0x15, 0x1d, 0x0c, 0xf8, 0x57, 0x68, 0xf9,
+  0xde, 0xd8, 0x34, 0xe9, 0x75, 0x9a, 0xdb, 0xfd, 0x26, 0x02, 0xcf, 0x3e,
+  0x5b, 0x94, 0xf2, 0x38, 0xad, 0x14, 0xa9, 0x29, 0x22, 0x5b, 0x96, 0xb8,
+  0xcd, 0x33, 0x1a, 0x97, 0x11, 0x0e, 0x38, 0xe1, 0xd2, 0x2c, 0x74, 0x3b,
+  0x6d, 0x6e, 0x0c, 0x6d, 0x96, 0x14, 0x43, 0x48, 0x48, 0xa8, 0x79, 0xa6,
+  0xc9, 0xde, 0x30, 0xf9, 0xa6, 0xbc, 0xcb, 0xe0, 0x63, 0x83, 0x12, 0x9e,
+  0x93, 0x97, 0xc8, 0xe8, 0x6b, 0x77, 0x59, 0x32, 0x37, 0xfa, 0xa1, 0x99,
+  0x4d, 0xa8, 0x08, 0xf8, 0x99, 0xe9, 0xa7, 0x33, 0x2c, 0xca, 0x3b, 0x7c,
+  0xd6, 0x0e, 0xc2, 0xae, 0xe4, 0x15, 0x9f, 0x88, 0x64, 0x0b, 0x2a, 0xc8,
+  0x84, 0x26, 0x6b, 0xd1, 0xb8, 0x51, 0xd8, 0xf9, 0x30, 0xe2, 0xb4, 0xf6,
+  0x0e, 0x17, 0xdd, 0xc7, 0x74, 0x15, 0x7e, 0x36, 0xdc, 0x7b, 0x31, 0xdc,
+  0x1d, 0x92, 0xc1, 0x90, 0xdd, 0xe6, 0xe5, 0xb2, 0x36, 0x5f, 0x47, 0x57,
+  0x12, 0xef, 0xcd, 0x8c, 0x2e, 0xce, 0xa6, 0xbc, 0xbe, 0x9e, 0xb1, 0x7a,
+  0xb2, 0x53, 0x5e, 0x5d, 0x79, 0x1a, 0x4c, 0x95, 0x2d, 0xd8, 0x50, 0xa1,
+  0xc9, 0x91, 0x43, 0xc7, 0xb2, 0xcf, 0x57, 0x5d, 0x64, 0x3a, 0x9d, 0xd9,
+  0x3f, 0x18, 0x98, 0xed, 0x46, 0xae, 0xb0, 0x8e, 0xeb, 0x74, 0x8b, 0xc4,
+  0xfb, 0x76, 0x72, 0x69, 0xe4, 0x70, 0xcd, 0x57, 0x9b, 0xd9, 0x5c, 0x57,
+  0xf9, 0xf5, 0xb2, 0xca, 0x58, 0x24, 0xc2, 0x7b, 0xa6, 0x4e, 0x33, 0x12,
+  0x5d, 0x37, 0x25, 0x7c, 0x4d, 0x66, 0xdb, 0x67, 0xb3, 0xab, 0x7e, 0xa7,
+  0x39, 0x68, 0x03, 0xd4, 0x33, 0xf4, 0x0b, 0x43, 0x33, 0xb7, 0x3e, 0x1a,
+  0x2b, 0x32, 0xb9, 0x13, 0xe6, 0xc6, 0xa4, 0x4b, 0xc8, 0xd9, 0x92, 0x4c,
+  0x66, 0x69, 0x3e, 0x87, 0xaa, 0x2c, 0xce, 0x84, 0x61, 0xa7, 0xb9, 0x4b,
+  0x51, 0xe5, 0xa0, 0xc5, 0x8d, 0x49, 0x93, 0xac, 0x6a, 0x3a, 0x43, 0x74,
+  0x77, 0xa4, 0x7a, 0x11, 0xb1, 0x9e, 0x76, 0x93, 0x4d, 0x3e, 0xd2, 0x8f,
+  0xfd, 0x7b, 0x67, 0xd0, 0x69, 0x8e, 0xbc, 0x68, 0x50, 0x57, 0xcd, 0x53,
+  0x4b, 0x33, 0xd7, 0x8b, 0xb2, 0xae, 0x73, 0xb2, 0x46, 0x49, 0xbb, 0x5a,
+  0x4e, 0xa0, 0x74, 0x91, 0x79, 0xf6, 0xc9, 0x68, 0x4d, 0xe6, 0xa4, 0x35,
+  0xf0, 0x54, 0x56, 0x46, 0xc1, 0x9a, 0x0e, 0x9a, 0x2a, 0x5f, 0xac, 0xea,
+  0x1d, 0x4b, 0xb2, 0xb6, 0xc4, 0xaf, 0x45, 0x01, 0x86, 0x6e, 0xc9, 0xda,
+  0xe6, 0x24, 0xe9, 0xcc, 0x66, 0xa7, 0x39, 0x9e, 0xdb, 0x3e, 0x99, 0x57,
+  0xb9, 0x39, 0xdc, 0xde, 0x29, 0x36, 0x9a, 0x86, 0xec, 0x31, 0xa3, 0x14,
+  0xe5, 0x13, 0x88, 0xab, 0xfc, 0x3a, 0x23, 0x6f, 0xa5, 0xd9, 0x76, 0xcd,
+  0xcc, 0x08, 0x31, 0x6f, 0xff, 0xda, 0x15, 0x2f, 0xb2, 0xeb, 0xb2, 0x21,
+  0xb9, 0x31, 0xdc, 0xe8, 0xfc, 0xee, 0x3d, 0x6e, 0x5f, 0xbb, 0x27, 0xf4,
+  0x1e, 0xf5, 0xa5, 0x67, 0xce, 0x17, 0x9c, 0xf9, 0x34, 0xdf, 0xa3, 0xa2,
+  0xc0, 0xd7, 0xcd, 0x34, 0x2f, 0xba, 0xab, 0x6e, 0x5a, 0x9b, 0x64, 0x50,
+  0x65, 0x20, 0xe3, 0xf5, 0x82, 0xd1, 0x1b, 0x74, 0x4c, 0xea, 0x3e, 0x99,
+  0x56, 0x77, 0xf9, 0x24, 0x53, 0xeb, 0x56, 0xbc, 0x30, 0x33, 0x73, 0xc1,
+  0x35, 0xdd, 0x89, 0x58, 0xd6, 0xd0, 0xb8, 0x49, 0x46, 0xb0, 0x31, 0x72,
+  0x97, 0x93, 0xde, 0x78, 0xc2, 0xbb, 0x1d, 0xc2, 0xd3, 0x1c, 0x52, 0x52,
+  0x84, 0xd2, 0x2a, 0x87, 0xe5, 0x65, 0x9a, 0x93, 0x7e, 0x7a, 0x0a, 0xb2,
+  0xea, 0xfc, 0xae, 0xdf, 0x78, 0x5f, 0xf4, 0x02, 0xa7, 0x0f, 0xc0, 0x08,
+  0xb9, 0x4a, 0xf3, 0x59, 0x64, 0x9e, 0xa0, 0xdc, 0x18, 0x6b, 0xe6, 0x26,
+  0xab, 0x64, 0x0d, 0x96, 0x34, 0xe9, 0xe4, 0x59, 0x0e, 0x9e, 0x1e, 0x65,
+  0x19, 0x3b, 0x1c, 0x70, 0x9b, 0x7f, 0xba, 0xb7, 0xd3, 0x0b, 0xf1, 0xca,
+  0x6b, 0x27, 0x7f, 0xe7, 0xe5, 0x73, 0x2d, 0x0c, 0x52, 0x6a, 0x35, 0x5d,
+  0x90, 0x0b, 0xb5, 0x7b, 0x42, 0x49, 0x97, 0x21, 0x2f, 0xfc, 0xb6, 0x3a,
+  0x64, 0xc4, 0x21, 0x55, 0x58, 0xef, 0x35, 0x44, 0x1b, 0x39, 0x8b, 0xe5,
+  0x08, 0x73, 0x3b, 0x72, 0x81, 0x77, 0x9a, 0x33, 0x0a, 0x03, 0xf9, 0x98,
+  0x60, 0xc0, 0xb5, 0x76, 0xac, 0x31, 0xa6, 0x2a, 0xeb, 0x43, 0x25, 0x07,
+  0x0a, 0xcd, 0xb7, 0x6a, 0x2e, 0x38, 0xb3, 0x78, 0xa9, 0xd3, 0x1c, 0xe9,
+  0x52, 0x74, 0xa3, 0x99, 0x43, 0x93, 0xd3, 0x7e, 0xc4, 0x26, 0x50, 0x37,
+  0x9a, 0xd9, 0xbe, 0xec, 0x55, 0x19, 0x92, 0x2b, 0x91, 0x9a, 0xc0, 0x1d,
+  0x88, 0xee, 0x5e, 0xcd, 0xd2, 0x6b, 0xb3, 0xef, 0x3a, 0xcd, 0xe5, 0xd7,
+  0xc6, 0x3e, 0x62, 0x67, 0x76, 0x5d, 0x1a, 0xa1, 0x46, 0xe3, 0x16, 0x5b,
+  0xd1, 0x98, 0x0a, 0x66, 0x9b, 0xcd, 0x96, 0x70, 0x6a, 0x9e, 0x99, 0x01,
+  0x8e, 0x46, 0xdf, 0x6c, 0x7b, 0x33, 0xc8, 0xf3, 0xfb, 0x18, 0xf1, 0x06,
+  0xf9, 0x04, 0xb5, 0x36, 0xf9, 0x0a, 0x6b, 0xd2, 0x95, 0x72, 0xa2, 0x4f,
+  0x85, 0x93, 0xa7, 0x13, 0x41, 0xee, 0x85, 0xa1, 0x08, 0x00, 0x48, 0x00,
+  0x4c, 0x93, 0x7a, 0x3a, 0x78, 0x87, 0x93, 0x05, 0xca, 0xd7, 0x87, 0xf9,
+  0xdb, 0xb2, 0x5e, 0x92, 0xd1, 0xd7, 0x69, 0x6e, 0x61, 0x04, 0x59, 0x63,
+  0x14, 0x7f, 0x23, 0x91, 0x96, 0x05, 0xfd, 0x69, 0x6f, 0xbd, 0x1c, 0x97,
+  0x3c, 0x2d, 0x49, 0x45, 0x8e, 0x25, 0xd2, 0x2f, 0xed, 0x8d, 0x61, 0x44,
+  0x8b, 0xb4, 0xdc, 0x5d, 0x5a, 0x98, 0xde, 0xe4, 0xf8, 0x86, 0xd8, 0x99,
+  0xe6, 0x14, 0x34, 0xa1, 0x83, 0xb7, 0x42, 0x8a, 0x6f, 0xd5, 0x4b, 0x23,
+  0x67, 0xe8, 0xb2, 0x67, 0x21, 0x12, 0x08, 0x10, 0x15, 0x32, 0x46, 0xb5,
+  0xf0, 0xa4, 0xc9, 0xf6, 0x6f, 0x7d, 0x4c, 0xb0, 0x70, 0xfe, 0x4a, 0x4e,
+  0x8c, 0x9a, 0x65, 0x14, 0xa8, 0x97, 0x47, 0x87, 0x09, 0xfd, 0x85, 0x64,
+  0xa7, 0xf9, 0xee, 0x17, 0xdd, 0xb5, 0xbd, 0x3c, 0x1d, 0xc5, 0x96, 0xb6,
+  0xed, 0x92, 0xf5, 0x1a, 0x10, 0xaf, 0x45, 0x49, 0xf7, 0xb9, 0x51, 0x8a,
+  0x82, 0xd9, 0x23, 0x97, 0x65, 0x66, 0x3a, 0x2c, 0x81, 0x0e, 0x0e, 0xf7,
+  0x90, 0x40, 0x33, 0x17, 0x7d, 0x63, 0xd4, 0x17, 0xe7, 0xa1, 0x68, 0x77,
+  0x0c, 0x2e, 0x89, 0xee, 0x56, 0xf1, 0x7e, 0xbf, 0x55, 0x6f, 0x5b, 0x99,
+  0x66, 0x5a, 0x39, 0x3f, 0x7e, 0x0b, 0xcd, 0x33, 0x35, 0x5b, 0xe8, 0x9d,
+  0x7a, 0x03, 0x34, 0x9a, 0x33, 0x5e, 0xe6, 0xb3, 0x96, 0xcb, 0xcd, 0x29,
+  0xcb, 0x08, 0xa5, 0xf0, 0x0e, 0x43, 0xd7, 0xd8, 0x79, 0x9c, 0xc3, 0xfb,
+  0xd2, 0xdd, 0x6f, 0xcd, 0xfd, 0x42, 0x1c, 0x47, 0xcb, 0xba, 0x65, 0x9f,
+  0xe9, 0x3d, 0x3d, 0x23, 0xf3, 0x8e, 0x35, 0x52, 0xaf, 0xcd, 0x60, 0xad,
+  0xd0, 0x2d, 0xba, 0x16, 0xae, 0x8b, 0xfc, 0xef, 0x62, 0xa1, 0x66, 0xc5,
+  0x6d, 0x5e, 0x95, 0xc5, 0x9c, 0x76, 0xd6, 0xad, 0x11, 0xc0, 0x10, 0xd3,
+  0xa4, 0x8f, 0x19, 0x41, 0xb2, 0x79, 0xf4, 0xfe, 0xe2, 0xf4, 0xc3, 0xd1,
+  0xe1, 0x87, 0xaf, 0xde, 0xbf, 0x7b, 0x7d, 0x7a, 0xbc, 0xd9, 0x3d, 0xde,
+  0x57, 0x2c, 0x20, 0xe8, 0xc8, 0x98, 0x7d, 0x2a, 0x61, 0x32, 0xd3, 0x45,
+  0x6e, 0xf9, 0x3a, 0xbf, 0x35, 0x02, 0x6e, 0x91, 0x36, 0x37, 0xec, 0x02,
+  0xc3, 0xdf, 0x60, 0x34, 0xca, 0x84, 0x77, 0x9a, 0x1b, 0x9b, 0x9b, 0xd9,
+  0x74, 0x9a, 0xcf, 0xa1, 0x0c, 0x5e, 0xcf, 0x8c, 0xe8, 0xdb, 0xda, 0xc1,
+  0x60, 0x64, 0xb4, 0xc4, 0x74, 0xad, 0x94, 0x77, 0xb5, 0xaf, 0xdf, 0x79,
+  0xde, 0xb0, 0x65, 0x53, 0x9a, 0x35, 0x92, 0x69, 0x34, 0xe6, 0x43, 0xf9,
+  0x51, 0xe3, 0x6a, 0x89, 0xe9, 0x4f, 0x64, 0xb9, 0x6b, 0x5e, 0x17, 0x9e,
+  0x8a, 0x4d, 0x6a, 0xc9, 0xec, 0xe4, 0x81, 0x74, 0x72, 0x52, 0x35, 0x9b,
+  0xfd, 0x24, 0xcb, 0x71, 0x44, 0x34, 0x70, 0x40, 0x7a, 0x1b, 0x4c, 0xdf,
+  0xae, 0xa6, 0x62, 0xac, 0x96, 0x7b, 0x9a, 0x03, 0x6a, 0x64, 0x98, 0x7d,
+  0xca, 0x70, 0x06, 0xe5, 0xad, 0xa3, 0x65, 0x85, 0x53, 0xfd, 0xbd, 0xd1,
+  0x4e, 0x48, 0x16, 0xbe, 0x86, 0xed, 0x6c, 0x5e, 0xd0, 0x87, 0xcc, 0xb5,
+  0xd3, 0xbd, 0x02, 0xcb, 0xd9, 0x94, 0xcc, 0x54, 0xd8, 0x40, 0xb0, 0x2c,
+  0xcf, 0x0f, 0x2f, 0xbf, 0x09, 0xe6, 0x84, 0x04, 0xbe, 0x0b, 0x62, 0xcb,
+  0x56, 0x84, 0xe6, 0x4e, 0x2a, 0x2a, 0x0e, 0xc8, 0xbb, 0xd1, 0x28, 0x41,
+  0x88, 0x74, 0x96, 0x8f, 0xab, 0x94, 0xbe, 0x49, 0x3f, 0xa6, 0x9f, 0x9a,
+  0x6d, 0xdd, 0x69, 0xee, 0xfc, 0xdb, 0xa3, 0xd1, 0x1f, 0xf6, 0xf6, 0x8c,
+  0x1a, 0x38, 0x5d, 0x9a, 0x79, 0xd9, 0x32, 0xaf, 0x14, 0xb5, 0x39, 0x99,
+  0xf3, 0x61, 0x5d, 0x6e, 0xe3, 0x1a, 0x87, 0xee, 0x87, 0x8b, 0x22, 0xbd,
+  0x35, 0xf7, 0x2f, 0x76, 0x12, 0xcf, 0x31, 0xed, 0xe7, 0x4e, 0x73, 0xb2,
+  0xc0, 0x1a, 0x41, 0x36, 0xb2, 0xc3, 0xdc, 0xe0, 0xb3, 0xfb, 0x60, 0x14,
+  0x5b, 0xf9, 0xd9, 0x48, 0xe2, 0xaf, 0xe9, 0xc4, 0xfc, 0x95, 0x94, 0xfc,
+  0x6d, 0x1a, 0x5b, 0xfb, 0x8c, 0xe9, 0xb8, 0x46, 0xac, 0x9f, 0x5e, 0x92,
+  0xa3, 0x0c, 0x61, 0xe3, 0x50, 0x2e, 0x14, 0xdd, 0xe3, 0xe5, 0x42, 0xf3,
+  0xe8, 0xec, 0x38, 0x9d, 0x7c, 0xbc, 0x4b, 0x2b, 0xb3, 0xff, 0x8d, 0xfe,
+  0x64, 0x36, 0x6d, 0x3e, 0xce, 0x67, 0x79, 0x73, 0xcf, 0xf7, 0x48, 0x77,
+  0x14, 0x1c, 0x80, 0xa0, 0x29, 0x34, 0x27, 0xe9, 0xda, 0x28, 0xeb, 0xa4,
+  0x8f, 0x92, 0x09, 0x63, 0x0e, 0x86, 0x68, 0x35, 0xe2, 0x71, 0x34, 0x27,
+  0xc4, 0x2a, 0x3d, 0xf6, 0xdb, 0x9d, 0xe6, 0xe0, 0xc6, 0xa0, 0x93, 0x84,
+  0x6e, 0xba, 0xdd, 0xab, 0x82, 0xd0, 0x17, 0x53, 0xba, 0x81, 0x92, 0xfa,
+  0xde, 0xdc, 0xfb, 0xf3, 0x24, 0xa2, 0x34, 0x22, 0x62, 0x9e, 0x7c, 0x9b,
+  0xdd, 0x4f, 0x6e, 0x48, 0xe0, 0x59, 0x59, 0xc9, 0xae, 0xa9, 0x8c, 0x4c,
+  0x29, 0xd6, 0x4e, 0x73, 0xf5, 0x56, 0x65, 0xe2, 0x70, 0xe4, 0x3b, 0xa5,
+  0x3b, 0xd8, 0x2b, 0x79, 0x5f, 0x35, 0x73, 0x6a, 0x62, 0xb3, 0x6e, 0x09,
+  0x65, 0x7c, 0x29, 0xb6, 0x15, 0x83, 0x2b, 0x14, 0x36, 0x3d, 0x47, 0x16,
+  0xc9, 0x71, 0x59, 0xf3, 0xde, 0x9b, 0xa5, 0x75, 0x03, 0xeb, 0x02, 0xe3,
+  0x16, 0xd3, 0xb9, 0x7d, 0x9b, 0x40, 0x8e, 0xbc, 0x34, 0x07, 0xed, 0x9f,
+  0xbf, 0x42, 0xf8, 0xb8, 0xe2, 0x78, 0x86, 0x52, 0x55, 0xe6, 0xaa, 0x75,
+  0x95, 0xbc, 0xd5, 0x3b, 0x83, 0x3a, 0x61, 0xcd, 0xfb, 0x05, 0x47, 0x8c,
+  0x58, 0xd1, 0x61, 0x3f, 0x45, 0xa8, 0xb8, 0x92, 0xad, 0x29, 0xe6, 0xec,
+  0x41, 0x2f, 0xd9, 0xca, 0x86, 0xd7, 0xa6, 0xbd, 0x1e, 0xb5, 0xb3, 0x77,
+  0x40, 0xff, 0xdd, 0xc7, 0x7f, 0x9f, 0xf4, 0x14, 0x6e, 0xe1, 0x2f, 0x35,
+  0xdd, 0x37, 0x5d, 0x69, 0x29, 0x0e, 0x59, 0xba, 0x7f, 0xe4, 0x02, 0x12,
+  0x01, 0x4c, 0x72, 0x39, 0x7e, 0x38, 0x58, 0xcf, 0x3a, 0xed, 0x47, 0x74,
+  0x21, 0x37, 0x11, 0xb8, 0xdb, 0x10, 0xd0, 0x1b, 0x93, 0x5f, 0xc4, 0x8c,
+  0x6d, 0x62, 0x74, 0x19, 0x98, 0xa8, 0x1c, 0xde, 0xa0, 0xe9, 0x98, 0x7c,
+  0xa8, 0xb2, 0x9b, 0xb4, 0x36, 0x6a, 0xd5, 0xb2, 0xc1, 0xe9, 0xe8, 0xda,
+  0x10, 0xe6, 0x48, 0xcd, 0xe0, 0x91, 0xc7, 0x88, 0xe5, 0xc3, 0x43, 0x6b,
+  0xaa, 0xc8, 0x2a, 0xd2, 0xfc, 0x19, 0x81, 0x6c, 0x2c, 0x74, 0x79, 0x62,
+  0x20, 0xf8, 0x87, 0xd8, 0xc5, 0x65, 0x56, 0x13, 0x10, 0x0a, 0x7a, 0xcc,
+  0x0f, 0x65, 0xcc, 0x49, 0xef, 0x21, 0x70, 0x86, 0x39, 0x82, 0x57, 0x66,
+  0xc6, 0xc8, 0x06, 0x99, 0x61, 0xdd, 0xc8, 0xda, 0x42, 0xaf, 0x03, 0x5d,
+  0x48, 0x74, 0x92, 0xfc, 0x4a, 0x5c, 0x03, 0xf2, 0x6f, 0x48, 0x7c, 0xd1,
+  0x0f, 0x6a, 0x0e, 0x77, 0x74, 0x95, 0x83, 0x87, 0xb7, 0xb6, 0x1e, 0x60,
+  0x7b, 0x17, 0xcb, 0x60, 0xd9, 0x19, 0xa7, 0xfb, 0x5a, 0x74, 0xe3, 0x98,
+  0xc9, 0x6d, 0x7a, 0xc5, 0x9e, 0xe7, 0x5f, 0x7f, 0x48, 0x4c, 0x8f, 0x07,
+  0x75, 0x93, 0x36, 0xcb, 0xfa, 0x11, 0x67, 0xc4, 0x13, 0x0a, 0xfc, 0x8e,
+  0xf5, 0x44, 0x70, 0x58, 0xc7, 0x9f, 0x80, 0xee, 0x2e, 0x54, 0x50, 0x04,
+  0xae, 0x32, 0xef, 0x64, 0x8d, 0xb8, 0xa1, 0x0b, 0x31, 0xea, 0xb7, 0xd2,
+  0x8f, 0xe9, 0x30, 0x39, 0x3b, 0x1a, 0x9d, 0xd3, 0x27, 0xcc, 0xd6, 0x28,
+  0xae, 0x4d, 0x2f, 0x4e, 0x47, 0x9d, 0xe6, 0x8c, 0xad, 0x9e, 0x15, 0x75,
+  0x0b, 0x30, 0xb4, 0x72, 0x9a, 0xd5, 0x43, 0xa5, 0xf1, 0x55, 0xe9, 0xac,
+  0xb1, 0x4d, 0x11, 0x18, 0x21, 0x3f, 0x3f, 0x05, 0xe1, 0x12, 0x3e, 0x6a,
+  0xc1, 0x87, 0x16, 0x66, 0xc3, 0x4f, 0xb7, 0xad, 0x73, 0xa1, 0xaf, 0x7b,
+  0xc1, 0x7a, 0x8c, 0xeb, 0xe5, 0x35, 0xe9, 0xcb, 0xb5, 0x5a, 0x39, 0xf6,
+  0x0b, 0x66, 0x36, 0x82, 0x0b, 0x5e, 0x87, 0x6d, 0xce, 0x04, 0x1f, 0x1b,
+  0xa3, 0xe0, 0x53, 0x28, 0x1d, 0x97, 0x78, 0x51, 0xba, 0x56, 0x49, 0xa7,
+  0x07, 0x92, 0x87, 0xee, 0x64, 0x73, 0xe4, 0x32, 0xa3, 0x24, 0x4d, 0x23,
+  0x97, 0x14, 0x2f, 0x8a, 0xaa, 0xf8, 0x57, 0x82, 0xde, 0x89, 0x78, 0x2c,
+  0xd0, 0xd0, 0x84, 0x95, 0x08, 0xda, 0xf5, 0x70, 0x82, 0xe5, 0xe4, 0x38,
+  0x24, 0x95, 0x8e, 0x8d, 0x4b, 0x6a, 0xcf, 0x9e, 0xfd, 0xaf, 0x8b, 0xa5,
+  0x99, 0xf8, 0xc8, 0x6d, 0x41, 0xd7, 0x3e, 0xdd, 0x7d, 0x34, 0x81, 0xc1,
+  0xb7, 0x0e, 0xe1, 0xf7, 0x32, 0x6d, 0x7d, 0x36, 0x7c, 0xba, 0x37, 0xdc,
+  0x0d, 0x36, 0x9b, 0x51, 0x51, 0xb3, 0xe4, 0x25, 0xfd, 0xf7, 0x41, 0xa9,
+  0x8c, 0xd8, 0xa5, 0x2f, 0x85, 0xf1, 0xae, 0x44, 0x4b, 0x58, 0x8e, 0xae,
+  0xd9, 0x71, 0x08, 0x8b, 0x0e, 0x49, 0xec, 0xf5, 0x93, 0xd7, 0xc7, 0x17,
+  0x58, 0xfe, 0xe3, 0x77, 0x5f, 0xc3, 0x69, 0x69, 0x55, 0xdb, 0x29, 0xda,
+  0xac, 0xd9, 0xea, 0xe5, 0xd8, 0x80, 0x88, 0xff, 0xee, 0x54, 0x93, 0xf8,
+  0x24, 0x5f, 0x33, 0xe2, 0xc6, 0xd3, 0xdf, 0xef, 0xe2, 0x0a, 0xac, 0xa5,
+  0xe3, 0xbe, 0x4c, 0x9d, 0xf8, 0x10, 0x3e, 0x66, 0xf7, 0xee, 0x6f, 0x98,
+  0x4e, 0x6f, 0x8e, 0xdd, 0xc3, 0x2f, 0xbd, 0x99, 0xf9, 0xf1, 0x80, 0x62,
+  0xd3, 0x46, 0x7d, 0x9a, 0xfe, 0xfc, 0xeb, 0xae, 0x42, 0x71, 0xd8, 0x24,
+  0xed, 0x3b, 0x31, 0xe2, 0x17, 0x80, 0x4b, 0x46, 0xa3, 0xc0, 0x1c, 0xf4,
+  0x61, 0xc1, 0x2e, 0xd8, 0x44, 0x82, 0x2d, 0xd2, 0x4e, 0x4f, 0x0b, 0x56,
+  0x88, 0x48, 0x44, 0x73, 0xe8, 0x1f, 0x50, 0x80, 0xee, 0x71, 0x99, 0x94,
+  0xb3, 0xe0, 0x92, 0x6b, 0xd9, 0x54, 0x50, 0x35, 0xf7, 0xe5, 0x5a, 0x83,
+  0x9d, 0x21, 0x97, 0x0f, 0xab, 0x77, 0xdd, 0x73, 0x60, 0x95, 0x3d, 0xa0,
+  0x6a, 0xfc, 0x2b, 0x31, 0xf1, 0x5e, 0x46, 0xf0, 0x04, 0xdd, 0x63, 0x4d,
+  0x6d, 0x28, 0xcb, 0x9b, 0x45, 0x35, 0x53, 0xb3, 0xba, 0x3a, 0xbb, 0x66,
+  0xd9, 0xc9, 0x29, 0xe2, 0xf6, 0x10, 0x3b, 0xa6, 0x79, 0x99, 0x8d, 0x7c,
+  0xab, 0x72, 0x51, 0x1d, 0x19, 0x8c, 0xd4, 0x3d, 0xcc, 0x1a, 0x6d, 0x12,
+  0xa7, 0x89, 0x18, 0xf6, 0xd8, 0x56, 0xba, 0xaf, 0x78, 0xfb, 0x91, 0x91,
+  0xd4, 0xf3, 0xa6, 0xa4, 0x17, 0x5b, 0x8a, 0x86, 0x5d, 0xea, 0x72, 0x5e,
+  0xf2, 0x5b, 0x9a, 0x3a, 0xdd, 0x3b, 0xce, 0x07, 0xd7, 0xd6, 0xc9, 0xca,
+  0x82, 0xfe, 0x2c, 0xc8, 0x77, 0xf3, 0x6f, 0x91, 0x0d, 0x19, 0xdd, 0x8b,
+  0xe4, 0xc6, 0x95, 0x70, 0x03, 0x34, 0x17, 0x82, 0xbf, 0x08, 0x24, 0x30,
+  0xa2, 0xa5, 0xc7, 0x6c, 0x0d, 0xd5, 0x3a, 0xd4, 0xa4, 0xf0, 0xec, 0x8c,
+  0x40, 0x0d, 0xef, 0x6e, 0x10, 0x23, 0xbf, 0x1b, 0x0a, 0x26, 0xf2, 0xde,
+  0x25, 0x37, 0x61, 0x3e, 0xf9, 0x08, 0xcc, 0x88, 0x5c, 0x4d, 0x2d, 0xf9,
+  0x21, 0x88, 0x0d, 0xc6, 0x1a, 0x45, 0x96, 0x00, 0x66, 0x0e, 0xf9, 0x2f,
+  0x69, 0x4f, 0xd2, 0xb5, 0x9c, 0x17, 0xac, 0xac, 0xad, 0x34, 0x80, 0x4d,
+  0x5f, 0x3f, 0xbc, 0x3e, 0xb9, 0x48, 0xb6, 0xcc, 0xaa, 0x8e, 0xbb, 0xca,
+  0x8d, 0xde, 0xeb, 0x3b, 0x59, 0x33, 0xd9, 0x59, 0x7c, 0xcc, 0x77, 0x8c,
+  0x1d, 0x34, 0x1d, 0x6f, 0x5b, 0xed, 0x1e, 0x9f, 0xc3, 0x26, 0x54, 0x9b,
+  0x49, 0x8d, 0x26, 0x58, 0x4d, 0xdd, 0xd3, 0xe0, 0x59, 0x51, 0x0c, 0x37,
+  0x76, 0xc6, 0x13, 0xa6, 0x89, 0x5d, 0x0c, 0x80, 0x3a, 0x90, 0xfb, 0x62,
+  0x4c, 0xc1, 0xaf, 0x74, 0x9a, 0xb1, 0x0b, 0xd5, 0x98, 0x7f, 0xdd, 0xb3,
+  0xca, 0xb8, 0x17, 0xf1, 0x31, 0xb0, 0x6f, 0x41, 0xc1, 0x1a, 0x72, 0x4f,
+  0x38, 0x6d, 0xaf, 0x4f, 0x30, 0x1b, 0x9a, 0x94, 0x05, 0xdd, 0x45, 0x53,
+  0x72, 0x55, 0x75, 0x9b, 0x83, 0xf3, 0xac, 0x37, 0xdc, 0xe9, 0x25, 0x16,
+  0x58, 0x64, 0x66, 0x19, 0xd8, 0x38, 0x87, 0xe4, 0x32, 0x5b, 0xec, 0x6a,
+  0x59, 0xb3, 0xfb, 0x95, 0xec, 0x7d, 0xbb, 0x5e, 0xc3, 0x98, 0x40, 0xf5,
+  0x96, 0xd3, 0x2a, 0x5b, 0x46, 0x29, 0xc6, 0xb9, 0xb2, 0x86, 0xe4, 0xd8,
+  0x76, 0x0a, 0x4b, 0xd5, 0xfb, 0xc9, 0x74, 0xa0, 0x2e, 0xa3, 0x4e, 0xb2,
+  0xdc, 0x05, 0x8f, 0xbd, 0x2b, 0xc0, 0x5c, 0xc5, 0xf6, 0x04, 0x4f, 0xb3,
+  0x59, 0x3e, 0xcf, 0x1b, 0xe8, 0xf0, 0x5e, 0x17, 0x82, 0xa5, 0x68, 0x77,
+  0xe9, 0xa7, 0xb0, 0x4b, 0x0a, 0xf6, 0x4a, 0xe9, 0xd7, 0xa6, 0x4b, 0x70,
+  0xd6, 0x30, 0x16, 0x27, 0x6e, 0xce, 0xb5, 0x3b, 0x64, 0xe1, 0x62, 0x0e,
+  0xb3, 0xf6, 0x2f, 0xb2, 0x78, 0xdb, 0x47, 0xa6, 0x6e, 0x00, 0x4a, 0xa1,
+  0x73, 0x26, 0x4e, 0x8c, 0x31, 0x5f, 0x0e, 0x7a, 0xc6, 0x52, 0x7d, 0x3c,
+  0x90, 0xdd, 0xe6, 0xf5, 0x1d, 0x15, 0x3c, 0x90, 0x3c, 0xea, 0xfe, 0x60,
+  0x33, 0xd4, 0x1c, 0x18, 0x98, 0x9d, 0x1f, 0xc5, 0xea, 0x84, 0x06, 0x04,
+  0x61, 0xc5, 0xee, 0x9f, 0xae, 0xbe, 0xab, 0xc2, 0x7e, 0x90, 0x15, 0x93,
+  0x72, 0xda, 0xb1, 0xcf, 0x68, 0x12, 0x3c, 0x21, 0x87, 0x1d, 0xcf, 0x91,
+  0x14, 0xec, 0xf2, 0xb8, 0x63, 0x8d, 0x3c, 0x3a, 0xec, 0xed, 0xfb, 0x45,
+  0xfb, 0x3e, 0x66, 0xde, 0x63, 0xdb, 0xff, 0xaa, 0x5d, 0xff, 0x2f, 0xd3,
+  0x23, 0x3c, 0xf5, 0xeb, 0x11, 0x8a, 0xc4, 0x60, 0x92, 0x2f, 0x6e, 0xc8,
+  0xfb, 0xfe, 0x12, 0x71, 0x52, 0x72, 0x91, 0xf1, 0x0f, 0xe2, 0x0a, 0xc4,
+  0x48, 0xae, 0xbc, 0x5a, 0xfc, 0x04, 0xfa, 0xb6, 0x88, 0x97, 0x5c, 0xc1,
+  0xb7, 0x6a, 0x8c, 0x49, 0x6c, 0x3e, 0x0f, 0xac, 0x55, 0x0a, 0x49, 0xe8,
+  0xcb, 0x7c, 0xd3, 0xbb, 0x60, 0x36, 0xab, 0xe9, 0xf2, 0xdb, 0xa1, 0x31,
+  0x19, 0xd2, 0x29, 0xa1, 0x61, 0xcc, 0x34, 0x01, 0xbc, 0x8f, 0x9f, 0x77,
+  0x9a, 0x43, 0xe7, 0x05, 0xd4, 0xce, 0xb7, 0xae, 0x99, 0xd1, 0xf7, 0x17,
+  0xa7, 0x07, 0xdd, 0x79, 0x02, 0xa6, 0xb2, 0x3e, 0xd8, 0xd9, 0xb9, 0xbb,
+  0xbb, 0x1b, 0x96, 0xe6, 0xfe, 0xaa, 0xeb, 0xd9, 0xb0, 0xac, 0xae, 0x77,
+  0xa6, 0xe5, 0xa4, 0xde, 0x49, 0x17, 0x8b, 0x7a, 0x47, 0x3f, 0xdc, 0x42,
+  0x1e, 0x7b, 0x17, 0x87, 0x76, 0x9b, 0x14, 0x4c, 0x44, 0x2e, 0xad, 0x27,
+  0x7e, 0x76, 0xcf, 0x36, 0xa6, 0xa8, 0xd6, 0x62, 0x7d, 0xb3, 0x7e, 0xcd,
+  0x6e, 0xe7, 0xae, 0xe3, 0x8e, 0x60, 0xb1, 0x89, 0xce, 0xbc, 0xdf, 0x78,
+  0x6e, 0xdd, 0x39, 0xe6, 0xa7, 0x47, 0xf8, 0xe1, 0x68, 0x49, 0x41, 0x55,
+  0xf3, 0x19, 0xf2, 0x1d, 0x36, 0x31, 0x17, 0xda, 0xda, 0x01, 0x5f, 0xe7,
+  0xcd, 0xf0, 0x2a, 0x9b, 0x96, 0x55, 0x1a, 0xc4, 0x4d, 0x4b, 0x42, 0x81,
+  0x63, 0x16, 0x26, 0xe6, 0xa9, 0x1d, 0x73, 0x37, 0x7d, 0x30, 0xf3, 0x32,
+  0xa4, 0xbf, 0x2f, 0x66, 0xe6, 0xc8, 0xf2, 0xe4, 0xe8, 0x8f, 0x69, 0x5e,
+  0xfe, 0xc0, 0x5e, 0x49, 0x63, 0xab, 0xd4, 0xbf, 0xa7, 0x6b, 0xa7, 0x9c,
+  0x2f, 0x2a, 0xf8, 0x1a, 0xe2, 0x71, 0x1f, 0x35, 0x26, 0x81, 0x4c, 0x96,
+  0x27, 0x9d, 0x65, 0xd5, 0x4d, 0xbc, 0x31, 0xe7, 0xe3, 0xba, 0xac, 0xcc,
+  0xb9, 0x9c, 0xd7, 0x31, 0x6f, 0x82, 0x38, 0xfd, 0x6a, 0x04, 0x5b, 0x93,
+  0x9a, 0xfc, 0x1d, 0xec, 0xda, 0x58, 0x16, 0x5e, 0xeb, 0x66, 0xc5, 0x27,
+  0xcb, 0x39, 0xd2, 0x20, 0x34, 0x82, 0xb6, 0xca, 0x93, 0xe9, 0xc5, 0x8e,
+  0x2d, 0x8a, 0xae, 0x6b, 0x93, 0x2e, 0x0b, 0xe7, 0x6b, 0x84, 0xbc, 0x33,
+  0x5d, 0xee, 0xc7, 0x7a, 0x87, 0x29, 0xaa, 0x32, 0x7a, 0x14, 0x77, 0x46,
+  0x55, 0x95, 0xde, 0x45, 0x31, 0xf8, 0x16, 0x0a, 0x9b, 0x91, 0x3e, 0xf9,
+  0x75, 0xf2, 0x92, 0x64, 0x5d, 0xf7, 0xf8, 0x8e, 0xe4, 0x70, 0xc9, 0xb1,
+  0xe5, 0x27, 0x35, 0x60, 0x52, 0xd1, 0x09, 0xe3, 0xd0, 0x62, 0x75, 0x8d,
+  0xd1, 0x71, 0x38, 0x98, 0x4f, 0x6f, 0x0b, 0xb0, 0x69, 0x81, 0x96, 0xd7,
+  0x2a, 0x53, 0x01, 0xcc, 0x69, 0x08, 0xb7, 0x22, 0x41, 0x47, 0xfb, 0x0d,
+  0x1f, 0x6b, 0x69, 0xdb, 0x65, 0x0f, 0x59, 0x57, 0xa7, 0x30, 0xcb, 0x62,
+  0xf4, 0x51, 0x79, 0x13, 0x17, 0x94, 0xbf, 0x27, 0x90, 0x5e, 0x81, 0x35,
+  0xbc, 0x67, 0x00, 0x85, 0x3e, 0x0f, 0x78, 0x67, 0xa8, 0xde, 0x99, 0x6b,
+  0x74, 0x69, 0xb6, 0x5a, 0x2b, 0x07, 0xa0, 0xbb, 0x4d, 0x2d, 0xc6, 0x4a,
+  0xf4, 0xe4, 0x1c, 0x59, 0x27, 0x29, 0xc0, 0x5b, 0xb5, 0xb5, 0x3d, 0x3c,
+  0xec, 0x7f, 0xe1, 0x63, 0x31, 0xa2, 0x13, 0x82, 0xf1, 0xd3, 0xc7, 0xfa,
+  0x16, 0x39, 0x0a, 0x4d, 0xc5, 0x8c, 0xaa, 0xc9, 0x00, 0x2e, 0xea, 0xc3,
+  0xd4, 0xa1, 0xec, 0xa4, 0x84, 0xbd, 0xe0, 0xe4, 0xa2, 0xfa, 0x9b, 0xe9,
+  0x6b, 0x1d, 0x84, 0xdc, 0xaf, 0x8d, 0xec, 0x4c, 0x4e, 0x4b, 0x06, 0x8a,
+  0x3a, 0x50, 0x0c, 0x4f, 0xa0, 0x5a, 0x24, 0x33, 0x68, 0x7f, 0x1c, 0x57,
+  0x71, 0xb2, 0xd7, 0xf4, 0x25, 0xe8, 0x9d, 0xd8, 0x67, 0xa5, 0xe0, 0xf1,
+  0xf3, 0x22, 0x47, 0xa6, 0x83, 0xe0, 0xf0, 0x19, 0x4f, 0xa6, 0xbe, 0xa6,
+  0xba, 0xec, 0x8b, 0x53, 0x8f, 0xfa, 0x4a, 0x5d, 0xed, 0x3a, 0x4b, 0xd0,
+  0x65, 0x1f, 0x66, 0x2f, 0x48, 0x06, 0x6f, 0xbd, 0x2c, 0x3c, 0xab, 0x7e,
+  0xd0, 0xc9, 0xed, 0x26, 0x99, 0xe1, 0x62, 0x5d, 0x9c, 0x1b, 0x00, 0x1d,
+  0xc0, 0xcd, 0xe8, 0x47, 0xc8, 0x83, 0xf2, 0x50, 0xef, 0x6c, 0xe7, 0x2c,
+  0xa2, 0xcb, 0xeb, 0x83, 0x22, 0xbb, 0xec, 0x92, 0xc7, 0x2f, 0xe8, 0xcc,
+  0x3d, 0x00, 0x13, 0xab, 0xb4, 0xb1, 0x42, 0x7f, 0x4d, 0xdb, 0xcf, 0xc9,
+  0xd6, 0xe9, 0x76, 0xaa, 0x98, 0xcc, 0x4a, 0x45, 0xc4, 0x99, 0xf7, 0x39,
+  0xf3, 0xc1, 0x2c, 0xf1, 0xf7, 0x62, 0xa4, 0xc8, 0x4a, 0xc8, 0x2f, 0xfa,
+  0xb2, 0x39, 0xae, 0x4a, 0x72, 0x86, 0x86, 0x0e, 0x4b, 0xd1, 0x19, 0xbb,
+  0x89, 0x3b, 0xce, 0x54, 0x38, 0x48, 0x92, 0x9f, 0x7e, 0xea, 0x27, 0xa4,
+  0xb0, 0xfe, 0x64, 0xcc, 0xe0, 0x9f, 0xcc, 0x96, 0xfb, 0x89, 0x81, 0xa2,
+  0x3f, 0xdd, 0x0e, 0x93, 0x6e, 0x78, 0x8b, 0xbc, 0x3c, 0xf5, 0x8c, 0xdc,
+  0xb7, 0xac, 0xfe, 0xb4, 0xad, 0x63, 0xce, 0x4a, 0xc1, 0x95, 0xc4, 0x3e,
+  0x4a, 0x1f, 0x3c, 0x00, 0xcc, 0x4e, 0x68, 0xce, 0x2f, 0xe7, 0x85, 0x68,
+  0x8d, 0x2c, 0x6a, 0x20, 0x05, 0x20, 0x2a, 0x36, 0xff, 0xb0, 0xe9, 0xd6,
+  0xa6, 0xaf, 0x2e, 0xb6, 0x46, 0x85, 0x34, 0x3d, 0x18, 0x58, 0x1c, 0x2c,
+  0x0a, 0x34, 0x87, 0x03, 0xc1, 0x43, 0x86, 0xb2, 0x18, 0x31, 0x7c, 0x46,
+  0xfe, 0x2d, 0x46, 0xe2, 0x96, 0x16, 0x1a, 0x05, 0x40, 0xf2, 0xe2, 0xe6,
+  0xbe, 0xa6, 0xf8, 0x5e, 0xa0, 0x2b, 0x14, 0x59, 0xfb, 0xb4, 0xc4, 0x83,
+  0xa3, 0x2a, 0x32, 0x75, 0x9c, 0xb3, 0x0c, 0xba, 0x30, 0xed, 0x82, 0x96,
+  0xbc, 0x35, 0xdd, 0xd9, 0x1c, 0x6c, 0x5a, 0x6f, 0xb4, 0xc4, 0x54, 0xd3,
+  0x69, 0xc4, 0x87, 0xe7, 0x8c, 0x2f, 0x00, 0x56, 0x82, 0x4f, 0x7a, 0x20,
+  0x8a, 0xd2, 0x87, 0xc8, 0xb8, 0xfc, 0x22, 0x4a, 0x10, 0xd0, 0x38, 0x8f,
+  0x7c, 0x5f, 0x20, 0xb7, 0x11, 0xcb, 0x0f, 0x50, 0x1a, 0xc4, 0xe0, 0xac,
+  0x6e, 0x45, 0x66, 0x89, 0x73, 0xd0, 0x0e, 0x06, 0xc8, 0xbe, 0x5c, 0x70,
+  0xc6, 0x24, 0xed, 0x0e, 0xc4, 0xa6, 0xee, 0x09, 0x8e, 0xbb, 0x08, 0xf0,
+  0x0c, 0x0a, 0x1f, 0xd1, 0x7c, 0x17, 0x3a, 0xcb, 0x94, 0xa6, 0x77, 0x57,
+  0x48, 0x9a, 0xd5, 0xa8, 0x84, 0x79, 0x34, 0x41, 0x94, 0x4b, 0x42, 0xaa,
+  0x02, 0xec, 0x8d, 0xa8, 0xe6, 0x74, 0x73, 0x06, 0xea, 0x0a, 0xf5, 0xe7,
+  0x55, 0xd2, 0x53, 0xa5, 0x05, 0x01, 0xd2, 0x9b, 0xf4, 0xd3, 0xa7, 0x61,
+  0x9d, 0xb1, 0x16, 0xd2, 0xeb, 0xbe, 0x01, 0xd4, 0x8c, 0xf3, 0x35, 0x48,
+  0xca, 0x12, 0x3a, 0x92, 0xce, 0xee, 0x08, 0x13, 0xbe, 0x25, 0xe8, 0x8b,
+  0xc1, 0xdf, 0x18, 0x5a, 0x05, 0x74, 0xa2, 0x2a, 0x26, 0xdb, 0xdd, 0xbd,
+  0x4b, 0x48, 0x33, 0x4e, 0x87, 0x70, 0x01, 0x79, 0xff, 0xbe, 0xb4, 0x20,
+  0xb8, 0x5a, 0xec, 0xcc, 0x2b, 0x3a, 0xa6, 0x4b, 0x42, 0x30, 0x45, 0x34,
+  0x3c, 0x6d, 0xa1, 0xb5, 0x58, 0xe8, 0x28, 0x3e, 0x24, 0x7e, 0x22, 0x59,
+  0x51, 0x7b, 0xda, 0x8d, 0x31, 0x82, 0x5c, 0xc6, 0xbc, 0x88, 0xcc, 0x19,
+  0x1b, 0x1d, 0xc1, 0xcc, 0xed, 0x6d, 0x8b, 0x73, 0x04, 0xc9, 0x89, 0x80,
+  0xf9, 0x89, 0x07, 0xa8, 0x77, 0x53, 0x72, 0x20, 0xba, 0x77, 0x40, 0xb0,
+  0x6a, 0x46, 0xd9, 0xe9, 0x40, 0x35, 0x1e, 0xdb, 0xed, 0x38, 0x22, 0xfd,
+  0xdf, 0x9c, 0xbd, 0x3d, 0x6e, 0x23, 0xba, 0xf0, 0x93, 0x98, 0x87, 0xc4,
+  0xc8, 0xb2, 0x37, 0x46, 0xf6, 0xf0, 0xfe, 0x48, 0x03, 0xa3, 0xd3, 0xcc,
+  0x14, 0xa6, 0xec, 0x3a, 0x6b, 0x16, 0x77, 0xcb, 0x7c, 0xba, 0xb5, 0x4d,
+  0xdb, 0xe7, 0x7d, 0x91, 0x7f, 0x1a, 0x00, 0xdf, 0xca, 0xc6, 0xa2, 0x59,
+  0x2b, 0x56, 0x01, 0xaa, 0xac, 0x59, 0x56, 0x05, 0x3b, 0xb5, 0x12, 0xea,
+  0x7e, 0x18, 0x9d, 0x4a, 0xe4, 0xde, 0xf3, 0xcd, 0x39, 0x49, 0x33, 0xe6,
+  0x18, 0x38, 0x37, 0xb9, 0x4d, 0x12, 0xc2, 0x48, 0x59, 0x40, 0x01, 0xb0,
+  0x2b, 0x68, 0x2c, 0xab, 0x17, 0x9d, 0x9a, 0x3b, 0x3c, 0x3f, 0x7f, 0x7d,
+  0x78, 0x79, 0x68, 0xc7, 0x06, 0x93, 0x15, 0x52, 0x07, 0x2a, 0xab, 0x11,
+  0x57, 0xa4, 0x86, 0xd1, 0x93, 0x9b, 0x7f, 0x7c, 0x3f, 0x3a, 0xbe, 0xe8,
+  0x2a, 0x03, 0xe7, 0x17, 0x67, 0x94, 0xc2, 0xfd, 0xc7, 0x9f, 0x0e, 0x29,
+  0xe8, 0x25, 0x2e, 0xfb, 0xd7, 0x69, 0x93, 0x6e, 0x06, 0x27, 0x7e, 0x7f,
+  0x3b, 0xa1, 0xfe, 0x29, 0x56, 0x41, 0xa3, 0x0e, 0x55, 0xc6, 0xfe, 0x8b,
+  0xe4, 0x03, 0xad, 0x69, 0x35, 0xb1, 0xba, 0x15, 0x7d, 0x54, 0x97, 0xb3,
+  0x1f, 0x3a, 0x67, 0xbc, 0x81, 0x94, 0x4e, 0xca, 0x29, 0x10, 0x41, 0xe7,
+  0x6a, 0x96, 0x64, 0x9f, 0xb2, 0xc9, 0xb2, 0xd1, 0x73, 0x80, 0xdd, 0x46,
+  0x49, 0x36, 0xdd, 0x79, 0x71, 0xeb, 0xa3, 0x0b, 0xc4, 0x10, 0x30, 0x4e,
+  0x76, 0x86, 0x8c, 0x40, 0x96, 0x97, 0xd9, 0x6d, 0x00, 0xdd, 0x0d, 0xb5,
+  0xb7, 0x62, 0x67, 0x07, 0x87, 0x81, 0x7d, 0x9f, 0xc8, 0xf9, 0xe2, 0x2e,
+  0x05, 0x13, 0xf2, 0x07, 0x73, 0x44, 0x07, 0xc9, 0xb1, 0x40, 0x9d, 0x31,
+  0x6c, 0xf3, 0x83, 0xe0, 0x21, 0xcd, 0x02, 0xb2, 0x17, 0x41, 0x5c, 0x8e,
+  0x78, 0x79, 0x90, 0xbd, 0xae, 0x96, 0xce, 0x49, 0x0b, 0xe6, 0x21, 0xea,
+  0x34, 0x4d, 0x39, 0x2c, 0x9b, 0x5e, 0x24, 0x64, 0x3e, 0x48, 0xaf, 0x69,
+  0x77, 0x99, 0x47, 0x8d, 0xb6, 0x6e, 0xac, 0x18, 0xfa, 0xd7, 0xce, 0xde,
+  0x70, 0xb7, 0x17, 0x76, 0x9e, 0x0e, 0x0b, 0xd2, 0x4a, 0xad, 0xeb, 0x9b,
+  0x24, 0x65, 0x53, 0x96, 0x0f, 0xf6, 0x4f, 0x8c, 0xac, 0xb4, 0x58, 0x98,
+  0xf6, 0xa3, 0x5d, 0x19, 0x9c, 0x05, 0x78, 0x35, 0xb2, 0x3b, 0x2b, 0x15,
+  0x98, 0x46, 0x5e, 0x16, 0xe5, 0x1d, 0x8d, 0xc4, 0x6c, 0xb5, 0xd9, 0xac,
+  0x95, 0xff, 0xdb, 0x8b, 0x4f, 0x73, 0x81, 0x54, 0xfb, 0xac, 0x3b, 0xdb,
+  0xb1, 0xb8, 0x92, 0x5c, 0xac, 0x1e, 0x80, 0xdd, 0x01, 0xa6, 0x60, 0xd4,
+  0xd9, 0x5d, 0xe0, 0x7e, 0xbe, 0x5a, 0x1b, 0xad, 0xdb, 0x76, 0x1e, 0xfc,
+  0x05, 0x03, 0x6a, 0x86, 0x34, 0xd4, 0x97, 0x9c, 0x4a, 0x14, 0xf8, 0x20,
+  0xde, 0xa6, 0x9f, 0xf2, 0xf9, 0x72, 0x9e, 0xe0, 0x7b, 0x1c, 0xed, 0x96,
+  0x27, 0xd5, 0xf1, 0x47, 0xae, 0x20, 0x8e, 0x1f, 0xd3, 0xa2, 0x6e, 0xd6,
+  0x9e, 0x2b, 0x22, 0x72, 0x01, 0x99, 0xeb, 0x5a, 0x61, 0x7e, 0x02, 0x15,
+  0x9f, 0xe7, 0x4d, 0xdd, 0x71, 0x61, 0x18, 0x35, 0x22, 0xa5, 0x70, 0xa0,
+  0xe6, 0x0c, 0xf1, 0x4d, 0x13, 0x31, 0x01, 0x38, 0x97, 0x4d, 0x15, 0x3c,
+  0x0f, 0xf0, 0x94, 0x55, 0x79, 0x39, 0xb5, 0xc7, 0x86, 0x34, 0xc8, 0xbc,
+  0x58, 0x9a, 0x89, 0xa6, 0xe6, 0xe8, 0xbe, 0x95, 0xdf, 0x04, 0x11, 0x49,
+  0xa0, 0x34, 0x47, 0x00, 0xdf, 0x2a, 0x84, 0xe9, 0xb3, 0xe1, 0x93, 0xfd,
+  0xe1, 0x6e, 0xbf, 0x65, 0x61, 0x4b, 0xca, 0x9f, 0x39, 0x5d, 0x93, 0x7c,
+  0x6e, 0x33, 0x0d, 0x86, 0xff, 0x32, 0x87, 0x13, 0xe5, 0x58, 0x0c, 0xe6,
+  0xe9, 0x27, 0x2c, 0x5f, 0x74, 0x59, 0xcb, 0xe4, 0xe5, 0x37, 0x67, 0xa3,
+  0xcb, 0xbd, 0x83, 0xf3, 0xb3, 0x0b, 0xf3, 0x5f, 0xfa, 0xfb, 0x3e, 0xfe,
+  0xbe, 0xff, 0x45, 0xb7, 0xd9, 0x37, 0xb8, 0x77, 0x15, 0xfa, 0x2d, 0xf9,
+  0x39, 0x3c, 0x8f, 0xf4, 0x1a, 0xde, 0x32, 0xca, 0x36, 0x09, 0x3f, 0x69,
+  0x9e, 0x15, 0x9c, 0xa3, 0xb3, 0x77, 0xef, 0x8e, 0x8f, 0x2e, 0xbb, 0x6b,
+  0x72, 0x79, 0x36, 0xc0, 0x6b, 0xfa, 0x6b, 0xf3, 0x6f, 0xb4, 0xa0, 0xd8,
+  0xd8, 0xa1, 0x8d, 0x9a, 0x7a, 0x46, 0x7b, 0xbd, 0xcc, 0x1b, 0xd1, 0xbc,
+  0xa2, 0xa0, 0x08, 0x9b, 0x22, 0x45, 0x6e, 0x98, 0xd4, 0xe1, 0xbf, 0x95,
+  0xf1, 0x03, 0x48, 0x8e, 0xf6, 0xaf, 0x26, 0x33, 0x63, 0x15, 0x04, 0x5e,
+  0xab, 0xa2, 0x9c, 0xca, 0x36, 0x4e, 0x13, 0x7d, 0x44, 0xf1, 0xe5, 0xc0,
+  0xc4, 0x0e, 0x3b, 0x87, 0x4f, 0x37, 0x6a, 0x1c, 0xf5, 0x67, 0xba, 0x64,
+  0xba, 0x9d, 0xd7, 0x37, 0x82, 0xa3, 0x66, 0x80, 0xbb, 0xef, 0x8c, 0x3b,
+  0x69, 0x38, 0x3b, 0xea, 0xdd, 0xd9, 0x65, 0x92, 0x5e, 0x5d, 0xf1, 0xec,
+  0xdd, 0x08, 0xe2, 0x35, 0xe6, 0xfb, 0xde, 0x81, 0xc3, 0xc1, 0xc6, 0x98,
+  0xf0, 0x5d, 0xba, 0x5c, 0x2e, 0x4f, 0x47, 0x3b, 0xe4, 0xe1, 0x62, 0xd4,
+  0xca, 0xe8, 0xdd, 0x49, 0xbf, 0xe5, 0xa6, 0xa5, 0x58, 0x75, 0x68, 0x21,
+  0xf3, 0x45, 0xb8, 0x4d, 0x97, 0xa9, 0xde, 0xb4, 0xa9, 0x77, 0x41, 0xda,
+  0x24, 0x61, 0x82, 0xc1, 0x50, 0x87, 0x7a, 0xa2, 0x6b, 0xf5, 0xa8, 0x13,
+  0x5d, 0x01, 0x26, 0xd9, 0x46, 0x1c, 0xb1, 0x99, 0x2f, 0x9a, 0x7b, 0x71,
+  0x61, 0xf7, 0x91, 0x38, 0x4b, 0x6a, 0x48, 0x8f, 0x2c, 0x18, 0x6a, 0x07,
+  0x83, 0xe8, 0x51, 0xab, 0x6e, 0x47, 0xc6, 0x7c, 0x60, 0x3d, 0x7c, 0xce,
+  0x7f, 0x08, 0x2f, 0xe2, 0x53, 0xd8, 0xea, 0xd1, 0xcf, 0xe1, 0x7b, 0xdd,
+  0xe6, 0xf0, 0x7d, 0x8d, 0xaf, 0xca, 0x76, 0xd9, 0x24, 0xcd, 0x2d, 0xbf,
+  0x46, 0x32, 0xa2, 0xd7, 0xad, 0x47, 0x0b, 0x5b, 0x1a, 0x8e, 0x15, 0xb4,
+  0xe9, 0x54, 0x7e, 0xa2, 0xa7, 0xa0, 0x5a, 0xce, 0x22, 0x60, 0x14, 0xcf,
+  0x2d, 0x4c, 0x5a, 0xcb, 0xec, 0x56, 0x9c, 0xc2, 0xdf, 0xd0, 0x99, 0xe5,
+  0x7c, 0x89, 0x61, 0x2b, 0x94, 0xff, 0xa2, 0x15, 0xca, 0x3f, 0x12, 0x33,
+  0x07, 0x02, 0x6b, 0x60, 0xf6, 0xc0, 0xcb, 0xf2, 0xea, 0xaa, 0xce, 0x9a,
+  0xae, 0x60, 0x3e, 0x92, 0x47, 0x76, 0x2e, 0x40, 0x95, 0x82, 0xfd, 0xac,
+  0x90, 0xe6, 0xa4, 0x9d, 0x4d, 0x9c, 0x08, 0x76, 0x82, 0xcf, 0x34, 0x37,
+  0x37, 0x8c, 0x80, 0x37, 0xfd, 0xdf, 0x6b, 0x78, 0x93, 0x13, 0x85, 0x34,
+  0x47, 0x15, 0x07, 0x85, 0xd3, 0x4f, 0x45, 0xfa, 0x77, 0xf9, 0x1d, 0xd4,
+  0xbf, 0xf0, 0x31, 0x5f, 0x2c, 0xc8, 0x24, 0x60, 0x62, 0x06, 0xc4, 0x8d,
+  0x6d, 0x24, 0x60, 0x9c, 0x99, 0x15, 0xc1, 0x7e, 0x51, 0x8c, 0x8b, 0xd1,
+  0x1d, 0x27, 0x72, 0x17, 0x8e, 0x33, 0xb3, 0x51, 0xb3, 0x50, 0x95, 0xa5,
+  0xfe, 0x78, 0xd9, 0xb8, 0x22, 0xa6, 0xa6, 0x94, 0x79, 0x5b, 0xa4, 0x7c,
+  0xd4, 0x48, 0xe0, 0xba, 0x14, 0x38, 0x49, 0xb2, 0x88, 0x01, 0xad, 0x1c,
+  0x04, 0xde, 0x3a, 0xac, 0x46, 0x27, 0xff, 0xcf, 0xb1, 0xcb, 0x9d, 0xb6,
+  0xc9, 0xc9, 0x0c, 0x23, 0x8e, 0xc1, 0xb3, 0xcd, 0xd6, 0x1e, 0x1c, 0x99,
+  0xf5, 0xea, 0xa1, 0x2b, 0x2e, 0x4e, 0x5a, 0x76, 0x60, 0xae, 0x30, 0x09,
+  0xe8, 0x86, 0x85, 0x96, 0xb0, 0x83, 0x4c, 0xa8, 0x32, 0x50, 0x2a, 0xb0,
+  0x84, 0xc8, 0x8b, 0x94, 0x31, 0x42, 0x70, 0x34, 0x92, 0x9d, 0xe0, 0x63,
+  0x79, 0x45, 0x89, 0xda, 0xc9, 0x0b, 0x52, 0xa5, 0xf8, 0x62, 0x0f, 0xa0,
+  0xae, 0x9a, 0x6f, 0xc4, 0x69, 0x9a, 0xcb, 0xe6, 0x5f, 0x18, 0x0b, 0xa9,
+  0x68, 0xff, 0x82, 0x7d, 0xc3, 0xdb, 0xd4, 0x13, 0xde, 0xd4, 0xc4, 0xfa,
+  0x33, 0xf8, 0xab, 0xb1, 0x4c, 0x5f, 0xaa, 0x69, 0xff, 0x45, 0xdc, 0xcb,
+  0x6c, 0x1d, 0x01, 0x04, 0x4d, 0x85, 0x75, 0x82, 0xbd, 0x61, 0xd3, 0x6a,
+  0x75, 0xaa, 0xd9, 0x07, 0x91, 0xe2, 0x8a, 0x07, 0xa5, 0x50, 0xd7, 0x2b,
+  0x79, 0x85, 0x5c, 0x5d, 0xf8, 0xaa, 0x67, 0x19, 0x39, 0x32, 0x6c, 0x8e,
+  0xca, 0x90, 0x50, 0xbf, 0x33, 0x6e, 0xa1, 0x66, 0x38, 0x90, 0xb4, 0x21,
+  0x3b, 0x95, 0x0c, 0xed, 0x40, 0xc4, 0x0c, 0xe6, 0xd9, 0x1c, 0x48, 0x45,
+  0x7e, 0xd6, 0x48, 0xa4, 0x92, 0x74, 0xd3, 0xf6, 0xad, 0x89, 0xbe, 0xca,
+  0x99, 0xcb, 0x58, 0xdd, 0xc3, 0x67, 0x43, 0xc4, 0x52, 0x59, 0xb0, 0xab,
+  0xae, 0x28, 0xed, 0xc7, 0xc9, 0xa7, 0xf4, 0xd1, 0xe8, 0x94, 0x45, 0x9f,
+  0x7e, 0x8a, 0x84, 0x1f, 0x2f, 0xfb, 0x43, 0xbc, 0xb0, 0xf1, 0xc8, 0x06,
+  0xcc, 0x5c, 0xfb, 0xac, 0x3a, 0x6c, 0x9d, 0xeb, 0xe1, 0x5d, 0xd6, 0x48,
+  0xdc, 0x93, 0x3b, 0xaf, 0x98, 0x77, 0xe0, 0xe6, 0x4f, 0xae, 0x3a, 0xcd,
+  0x81, 0xe5, 0x22, 0x6b, 0x9c, 0x13, 0x05, 0xae, 0x18, 0xe6, 0xd9, 0xe2,
+  0xd4, 0x7e, 0x72, 0x15, 0xf6, 0xcd, 0x31, 0xe8, 0xf5, 0x45, 0x7f, 0xe3,
+  0x11, 0xc8, 0x46, 0x59, 0xe1, 0x6f, 0x26, 0xd7, 0x4a, 0x33, 0x8d, 0xed,
+  0x49, 0x56, 0x0a, 0xf4, 0x40, 0x0a, 0xe3, 0x89, 0x6c, 0x50, 0xc6, 0x8f,
+  0x53, 0xf4, 0x03, 0x60, 0x03, 0xfb, 0x35, 0x81, 0x91, 0x60, 0xa3, 0x07,
+  0xb7, 0x95, 0xcd, 0xde, 0xa1, 0xf8, 0x6f, 0x35, 0x55, 0x64, 0xbc, 0x76,
+  0xd4, 0x48, 0x61, 0xb1, 0x17, 0xee, 0x52, 0xec, 0x34, 0xdb, 0x3e, 0xc4,
+  0x4d, 0x78, 0xa8, 0xf4, 0x72, 0x19, 0x8c, 0xdd, 0x76, 0xd6, 0xbc, 0xc0,
+  0x15, 0xbe, 0x4c, 0x79, 0x88, 0xf6, 0xbc, 0xb9, 0x58, 0x36, 0x21, 0x59,
+  0x24, 0x83, 0x07, 0x39, 0xba, 0x76, 0x52, 0x78, 0x0a, 0xef, 0x6e, 0xca,
+  0x19, 0x9b, 0x8b, 0x41, 0x7c, 0xc3, 0xa6, 0x56, 0x21, 0xdd, 0x95, 0xc0,
+  0x68, 0xd4, 0x40, 0x76, 0x0b, 0x9c, 0x5b, 0x2b, 0x46, 0x61, 0xd4, 0x9a,
+  0x2c, 0x25, 0x18, 0xb7, 0x20, 0x3d, 0x93, 0xc1, 0x6d, 0x98, 0x88, 0x62,
+  0xce, 0xf9, 0xb8, 0xac, 0xed, 0x7e, 0xa1, 0x04, 0x26, 0xba, 0x41, 0xee,
+  0xd2, 0x0a, 0x82, 0x59, 0x92, 0xfb, 0x95, 0x8a, 0xc8, 0x07, 0xbc, 0x90,
+  0x36, 0xd4, 0x45, 0xe9, 0xe6, 0x94, 0xf4, 0x67, 0xb6, 0x49, 0x96, 0x4d,
+  0xc9, 0xaf, 0x89, 0xbd, 0x43, 0x4d, 0x4a, 0xda, 0xfe, 0x0d, 0x48, 0xb5,
+  0x24, 0x33, 0xd0, 0x9c, 0xc3, 0x9b, 0x94, 0x4c, 0xd9, 0x66, 0x99, 0x36,
+  0x8f, 0x83, 0x19, 0xae, 0x92, 0x4d, 0x2c, 0x9c, 0x7c, 0x30, 0x55, 0x04,
+  0xac, 0x83, 0x6d, 0xbb, 0x22, 0xdc, 0xe5, 0x2f, 0xe4, 0x4b, 0x3a, 0x6b,
+  0x2b, 0xe4, 0xd1, 0x39, 0xf8, 0x47, 0x6e, 0xda, 0x29, 0xec, 0xc8, 0x77,
+  0x92, 0x6b, 0x44, 0x13, 0x09, 0xb8, 0x29, 0xbd, 0xe5, 0x4f, 0x9a, 0x10,
+  0x38, 0x87, 0xe0, 0x93, 0xe9, 0xc5, 0xec, 0xde, 0x35, 0xe8, 0xa5, 0x22,
+  0x29, 0x1c, 0xd1, 0x23, 0xf7, 0xb0, 0x5f, 0x48, 0xd2, 0x6e, 0x68, 0x7c,
+  0x94, 0x35, 0x03, 0xfe, 0xe6, 0x41, 0x4f, 0xdc, 0xac, 0x43, 0x4b, 0x2b,
+  0x26, 0xc2, 0x43, 0x10, 0xf0, 0x16, 0xac, 0x2c, 0x4e, 0x6e, 0x3a, 0xf5,
+  0xdd, 0xe6, 0x88, 0xcd, 0x6f, 0xef, 0xd5, 0x77, 0x87, 0xa7, 0xef, 0x8f,
+  0xf7, 0xfe, 0x9c, 0xd0, 0xbf, 0xf6, 0xf9, 0x5f, 0xfb, 0xbd, 0xd8, 0x2a,
+  0x19, 0xf9, 0xb4, 0xf9, 0x6a, 0x33, 0xa9, 0xef, 0xe7, 0xe3, 0x72, 0x66,
+  0xd7, 0x49, 0xa6, 0x42, 0xc3, 0x4f, 0x7d, 0xb9, 0xbc, 0x6d, 0x66, 0x9c,
+  0xb8, 0x94, 0xbb, 0x92, 0xba, 0x16, 0xa0, 0x8c, 0x4a, 0x19, 0x04, 0xc8,
+  0xfc, 0x1c, 0xad, 0x06, 0x69, 0x6c, 0x2a, 0xba, 0x24, 0x54, 0xb6, 0x0a,
+  0xbc, 0x84, 0xbb, 0x48, 0xcf, 0x73, 0x1d, 0x11, 0x18, 0x92, 0x11, 0xca,
+  0xbb, 0x1f, 0x4e, 0x64, 0xb1, 0x32, 0x59, 0x56, 0x04, 0x82, 0xdf, 0x88,
+  0x25, 0x9c, 0x25, 0x4b, 0x5d, 0xa7, 0x2d, 0xa8, 0x52, 0x4c, 0x74, 0x2a,
+  0xf7, 0x92, 0xe3, 0xb9, 0x59, 0x65, 0x56, 0xec, 0xe6, 0x11, 0x97, 0xa2,
+  0x69, 0x6c, 0x2c, 0x5a, 0x0b, 0xeb, 0x2a, 0x90, 0x2a, 0xa7, 0xb4, 0x19,
+  0x67, 0xa5, 0xa8, 0xe6, 0x9a, 0x7c, 0x53, 0x21, 0x59, 0xd5, 0xb3, 0xef,
+  0x3d, 0xf6, 0x38, 0x4b, 0x7a, 0x23, 0xac, 0x31, 0xad, 0x88, 0x19, 0x7b,
+  0x65, 0xa3, 0x59, 0x3a, 0x9e, 0xe0, 0x57, 0x15, 0xac, 0x1d, 0x97, 0x14,
+  0x49, 0xce, 0x6e, 0x73, 0xde, 0x3f, 0x04, 0x05, 0x9a, 0xa5, 0xc1, 0x50,
+  0x70, 0x08, 0x24, 0x0b, 0x38, 0xd9, 0x72, 0xfb, 0xd1, 0xac, 0xd7, 0xfd,
+  0x2c, 0xdb, 0x56, 0xe0, 0x89, 0xbd, 0x7b, 0x76, 0xde, 0x96, 0x7f, 0x37,
+  0x73, 0x9e, 0xea, 0x4c, 0xc6, 0xee, 0x30, 0xb9, 0x92, 0x62, 0x3d, 0x97,
+  0x4b, 0xae, 0x13, 0xbe, 0x6a, 0x9d, 0xe3, 0x96, 0xc1, 0x06, 0x92, 0x38,
+  0xa3, 0x28, 0x51, 0x5e, 0x58, 0xb0, 0x08, 0xad, 0xeb, 0xca, 0xbf, 0xa0,
+  0x74, 0x42, 0xcc, 0x0e, 0x2b, 0x79, 0xe3, 0x79, 0xeb, 0xae, 0xb9, 0xd8,
+  0x5d, 0x91, 0xda, 0xd5, 0x71, 0x56, 0x5c, 0x0c, 0xc7, 0x9f, 0xb2, 0x6a,
+  0x42, 0x29, 0xb6, 0xe6, 0x42, 0x58, 0x8a, 0xfd, 0xab, 0x80, 0x1a, 0xc4,
+  0x93, 0x2c, 0xc4, 0xdf, 0x73, 0x37, 0x14, 0xce, 0xf1, 0xb3, 0x72, 0xed,
+  0x69, 0x23, 0x96, 0x13, 0xb3, 0x89, 0x87, 0x96, 0x4b, 0x43, 0x2f, 0xac,
+  0xf6, 0xb9, 0xd6, 0x44, 0x05, 0x38, 0xc1, 0x03, 0x28, 0x90, 0xcc, 0xb0,
+  0xcd, 0x38, 0x4f, 0xbc, 0x35, 0x95, 0x2d, 0x43, 0xdd, 0x61, 0xd6, 0x05,
+  0x17, 0x24, 0x99, 0x1a, 0x95, 0x37, 0x4c, 0x63, 0x76, 0xb8, 0x27, 0xbb,
+  0x36, 0xc8, 0x5b, 0x86, 0xab, 0xbf, 0xb8, 0x97, 0xb7, 0x8c, 0x49, 0x4b,
+  0xd7, 0x18, 0x2b, 0x6b, 0xca, 0x5c, 0x02, 0x4d, 0x28, 0x4c, 0xba, 0x9a,
+  0x95, 0x77, 0x04, 0x19, 0xef, 0x30, 0x09, 0xcd, 0xcb, 0x29, 0x6f, 0x87,
+  0xf1, 0xbd, 0xa5, 0x01, 0x1d, 0x90, 0xf2, 0xc2, 0xdf, 0x1d, 0xc6, 0x41,
+  0xa6, 0x6d, 0x89, 0xd0, 0x81, 0xb3, 0xa7, 0x0e, 0x38, 0xd0, 0xb0, 0xcf,
+  0x93, 0xaf, 0xfb, 0x2b, 0x49, 0xf8, 0x49, 0xe7, 0xd1, 0x8b, 0x06, 0x23,
+  0x1e, 0x97, 0x44, 0x0f, 0x25, 0xfb, 0x0a, 0x03, 0xa6, 0x45, 0x4c, 0xae,
+  0x96, 0x0d, 0x94, 0x72, 0x35, 0xcb, 0x1a, 0xc1, 0xad, 0x89, 0x13, 0x23,
+  0x88, 0x99, 0x7d, 0x04, 0x3d, 0x45, 0xd9, 0x38, 0x1e, 0x2c, 0xe2, 0x2f,
+  0x2b, 0x00, 0x3b, 0xa4, 0x9d, 0x69, 0x0c, 0x52, 0x26, 0x48, 0x31, 0x1f,
+  0xad, 0x11, 0xe1, 0xa8, 0x97, 0x19, 0xe7, 0x01, 0x86, 0x77, 0x85, 0x4c,
+  0x35, 0xae, 0x00, 0x6f, 0x49, 0x93, 0x2d, 0xce, 0xfd, 0x47, 0x47, 0xd0,
+  0x65, 0x4e, 0x09, 0x26, 0xec, 0xfd, 0x58, 0x5e, 0xaa, 0xb7, 0xc3, 0x88,
+  0xaf, 0xdd, 0x5a, 0xaa, 0x53, 0xae, 0x38, 0xb4, 0xff, 0xb4, 0xa1, 0x11,
+  0x18, 0x5e, 0x55, 0xcd, 0x5c, 0x5c, 0x60, 0x33, 0xb3, 0x48, 0x4b, 0x4c,
+  0x79, 0x28, 0xbc, 0x04, 0x7c, 0x49, 0x0b, 0x0a, 0x4d, 0xbf, 0x3b, 0x8a,
+  0xc5, 0x94, 0x19, 0x3c, 0xad, 0xea, 0x0f, 0xf5, 0xc5, 0x63, 0xd5, 0xa9,
+  0x4b, 0x39, 0x90, 0xf8, 0x40, 0x4b, 0xd0, 0x44, 0x08, 0x02, 0xba, 0x32,
+  0x20, 0x2f, 0x56, 0xb0, 0x49, 0x80, 0xeb, 0x62, 0x3e, 0xf7, 0xe5, 0x83,
+  0x79, 0x11, 0x37, 0xe3, 0xc0, 0xec, 0xff, 0x3a, 0x16, 0x70, 0xd3, 0xdb,
+  0x75, 0x52, 0x16, 0x7f, 0x5d, 0x16, 0x93, 0xce, 0xed, 0x51, 0xd2, 0xa7,
+  0xc5, 0xc1, 0xae, 0xd1, 0x45, 0x0b, 0x63, 0xe9, 0x6e, 0x7c, 0x7c, 0x48,
+  0xce, 0x77, 0x91, 0x51, 0x6e, 0x11, 0x01, 0x82, 0xe9, 0xee, 0x99, 0x79,
+  0x59, 0x48, 0x37, 0xb9, 0x59, 0xa3, 0x6a, 0x72, 0x83, 0xbc, 0x49, 0x0a,
+  0x6c, 0x66, 0x53, 0xbe, 0x73, 0xe3, 0xe0, 0x1b, 0x6e, 0x55, 0xf4, 0xa4,
+  0x9c, 0x24, 0x12, 0x25, 0x48, 0x97, 0x85, 0x4a, 0xe9, 0xa0, 0x9b, 0xda,
+  0xcf, 0x10, 0xb1, 0x79, 0x03, 0x11, 0x98, 0xcd, 0xea, 0xcc, 0x8b, 0x7b,
+  0xdb, 0xf7, 0x9c, 0x35, 0x02, 0xdb, 0x98, 0xcc, 0xa4, 0xbc, 0x82, 0x38,
+  0xbb, 0x8a, 0x67, 0x55, 0xd5, 0xa4, 0x83, 0x48, 0x6f, 0xc8, 0xd6, 0xa3,
+  0x7d, 0x72, 0xaf, 0xf9, 0xf5, 0xf2, 0xba, 0xee, 0x3a, 0xcd, 0xaf, 0x0f,
+  0x6e, 0x9f, 0x52, 0xa7, 0x4d, 0x52, 0xd6, 0x75, 0x9e, 0x72, 0x65, 0x6e,
+  0xe4, 0x7d, 0x42, 0xbe, 0x05, 0xd3, 0x15, 0x26, 0xf9, 0xa5, 0x40, 0x8d,
+  0xe9, 0xf7, 0x55, 0xb3, 0x18, 0x44, 0x97, 0x00, 0x6b, 0xdd, 0xde, 0x02,
+  0xb3, 0x2b, 0xe6, 0x27, 0x00, 0x11, 0xf0, 0x36, 0xfc, 0x3c, 0xb7, 0x84,
+  0x0a, 0x4f, 0x4e, 0xdf, 0x88, 0xdb, 0xf5, 0x82, 0xfe, 0x96, 0x5b, 0x7a,
+  0x86, 0x21, 0x4e, 0x05, 0xf1, 0xf6, 0x42, 0xac, 0xbe, 0xfd, 0xae, 0x9b,
+  0xd0, 0xb3, 0x75, 0x36, 0xda, 0x79, 0xf2, 0x62, 0x37, 0x4c, 0x32, 0xdf,
+  0xa2, 0x4f, 0x08, 0x9b, 0x0a, 0xbb, 0xa2, 0x76, 0x87, 0xbb, 0xdb, 0x9d,
+  0xde, 0xd0, 0x5c, 0x47, 0xe1, 0x4d, 0x8c, 0x4e, 0x54, 0xa2, 0x46, 0x39,
+  0x68, 0x3c, 0x07, 0x2e, 0x1f, 0x5b, 0x41, 0x99, 0x7e, 0x5a, 0xd2, 0x45,
+  0x76, 0x6b, 0x36, 0x5a, 0xcc, 0x18, 0x4e, 0x4e, 0xf3, 0x5a, 0x8c, 0x0d,
+  0xba, 0xcd, 0xf4, 0x76, 0xa1, 0xbc, 0xbf, 0x76, 0x2e, 0x1e, 0x1e, 0xa1,
+  0xdb, 0x92, 0x63, 0xf6, 0x91, 0xc8, 0x40, 0x6d, 0x3a, 0x55, 0x01, 0x9a,
+  0x86, 0xd8, 0xf4, 0xef, 0xee, 0x00, 0xf1, 0x1c, 0x7a, 0x7b, 0x2f, 0x86,
+  0x9f, 0xf9, 0x6b, 0x4a, 0x6a, 0xf8, 0x20, 0xad, 0x27, 0x79, 0xbe, 0xd6,
+  0xc6, 0x50, 0xee, 0x93, 0xbf, 0x2e, 0x41, 0xc0, 0x62, 0xb6, 0x69, 0x9e,
+  0x72, 0x58, 0xd1, 0xd1, 0x29, 0x05, 0xcd, 0x92, 0x1a, 0x69, 0xf6, 0xd8,
+  0x83, 0xed, 0x12, 0x11, 0xb3, 0x90, 0xb4, 0xc1, 0xa3, 0x37, 0xc3, 0x99,
+  0xee, 0xa8, 0x51, 0x84, 0xf0, 0x61, 0xa6, 0x16, 0x72, 0x0c, 0x07, 0x3b,
+  0xd6, 0x48, 0x09, 0x90, 0x3e, 0x9a, 0xb9, 0xaf, 0x4b, 0x9a, 0xa7, 0x68,
+  0x06, 0x02, 0x14, 0x19, 0x21, 0xd1, 0xb2, 0x06, 0x8e, 0x3d, 0xff, 0x82,
+  0x6b, 0xf9, 0xd2, 0x03, 0xa1, 0x38, 0xfd, 0x32, 0x8d, 0x28, 0x83, 0xcc,
+  0xd3, 0x89, 0x48, 0x6e, 0x22, 0xe3, 0x50, 0xf6, 0x58, 0x87, 0x73, 0x10,
+  0xf2, 0x58, 0x1a, 0x12, 0x26, 0x4b, 0x66, 0x27, 0x42, 0xac, 0xd1, 0xa7,
+  0x11, 0x82, 0x62, 0x48, 0xfc, 0x97, 0x45, 0x76, 0x47, 0x02, 0xb9, 0x16,
+  0x85, 0xa2, 0xaa, 0x72, 0x72, 0xe7, 0x68, 0x2c, 0x9c, 0xb6, 0x18, 0xc1,
+  0x10, 0xe9, 0x82, 0x9e, 0x46, 0xb2, 0x04, 0x27, 0x38, 0x9c, 0xb5, 0x65,
+  0x6c, 0x2a, 0x68, 0x5a, 0x80, 0x50, 0xfd, 0x95, 0x1b, 0x8e, 0x45, 0x32,
+  0x58, 0x7e, 0x3d, 0x68, 0x42, 0x44, 0xaa, 0x31, 0xa2, 0x80, 0xdd, 0x22,
+  0xcc, 0x4d, 0x82, 0x89, 0x4e, 0x6b, 0xe1, 0x84, 0x1e, 0xf3, 0x2c, 0xad,
+  0xd9, 0x3a, 0x55, 0x7a, 0xb7, 0x76, 0xdf, 0x88, 0x3f, 0xc6, 0xdb, 0x39,
+  0x32, 0xdf, 0x33, 0x38, 0x4b, 0x3c, 0x8e, 0x2f, 0xf2, 0x10, 0x78, 0x48,
+  0xb7, 0x18, 0xd4, 0x2c, 0x9d, 0x31, 0xf7, 0xaa, 0x99, 0xcc, 0x46, 0xec,
+  0x1b, 0x56, 0xa4, 0xbe, 0x5c, 0x03, 0xc2, 0x77, 0x4e, 0x45, 0x37, 0x8a,
+  0x96, 0xe7, 0xfc, 0x49, 0x3b, 0x09, 0x0e, 0xc3, 0x32, 0x57, 0x1e, 0xa3,
+  0xd8, 0x7f, 0xc9, 0xa1, 0xe8, 0xdb, 0xbd, 0x24, 0xda, 0x3f, 0xfb, 0x85,
+  0xbc, 0x31, 0x2a, 0x9d, 0x54, 0x2c, 0x33, 0x83, 0xfd, 0xe4, 0xb4, 0xab,
+  0x10, 0xf3, 0xb4, 0x84, 0x2c, 0x8b, 0xac, 0x22, 0x29, 0x08, 0x54, 0xf4,
+  0x40, 0xa1, 0xa6, 0xb1, 0x8b, 0x05, 0xb6, 0xf9, 0xd1, 0xd7, 0x27, 0x40,
+  0xdf, 0x9a, 0x63, 0x4f, 0x56, 0x33, 0x5a, 0xe5, 0x21, 0x30, 0xff, 0xb6,
+  0x3d, 0x27, 0xd7, 0xb9, 0xc3, 0xba, 0x87, 0x5a, 0xa8, 0xea, 0xc8, 0xaa,
+  0x0a, 0x0b, 0x24, 0x50, 0x74, 0x5a, 0x0a, 0x2c, 0x90, 0x3e, 0xaa, 0x51,
+  0xb2, 0xd4, 0x21, 0xc6, 0xe3, 0xf3, 0x85, 0x4f, 0x6b, 0x8a, 0x75, 0x5a,
+  0x73, 0x10, 0x8c, 0x15, 0x8b, 0x00, 0xec, 0xeb, 0x36, 0x2c, 0x93, 0x99,
+  0x67, 0x21, 0xd6, 0x48, 0xbe, 0x1f, 0xaf, 0x36, 0xc0, 0x1b, 0xce, 0xf1,
+  0xb4, 0xe3, 0x2b, 0x76, 0xee, 0xd4, 0xed, 0xc7, 0x03, 0x40, 0x56, 0x02,
+  0x7b, 0x65, 0xd2, 0x15, 0xcd, 0xd1, 0xc0, 0xfe, 0x4b, 0x40, 0xa5, 0xe6,
+  0x64, 0xe3, 0x8a, 0xd4, 0x54, 0x11, 0xbf, 0x29, 0xc7, 0xb8, 0x23, 0x48,
+  0xc3, 0x78, 0x73, 0x64, 0xaf, 0x24, 0xaf, 0x18, 0x45, 0xfa, 0x65, 0x22,
+  0x5e, 0x0f, 0x82, 0x2e, 0xd7, 0x9e, 0xf2, 0x0c, 0xf5, 0x1f, 0x9d, 0xe7,
+  0x74, 0x0c, 0x9a, 0x86, 0x78, 0x73, 0xe6, 0x72, 0x9c, 0xdc, 0xf8, 0xb3,
+  0xc7, 0x5b, 0x8e, 0xf8, 0x16, 0x6b, 0x26, 0xb4, 0xff, 0xb7, 0xee, 0xe4,
+  0xbd, 0x7a, 0x78, 0xf6, 0x7e, 0xe1, 0xe4, 0x3d, 0x30, 0x7b, 0xcc, 0x5a,
+  0xaa, 0xe8, 0xc4, 0x57, 0x9e, 0xa7, 0x07, 0x31, 0x74, 0x36, 0x14, 0xac,
+  0xc7, 0xa7, 0x2d, 0x65, 0x3c, 0xa3, 0xe8, 0xd5, 0x6f, 0xb6, 0xea, 0xd8,
+  0x8d, 0xda, 0xfb, 0x78, 0x73, 0x1c, 0xf2, 0x28, 0x86, 0x2d, 0x76, 0x24,
+  0x51, 0x17, 0xf1, 0x3a, 0xd9, 0x79, 0x9f, 0xcc, 0xf6, 0x6f, 0x78, 0x2b,
+  0xe3, 0xec, 0xd1, 0xe7, 0xe2, 0xcd, 0x69, 0x46, 0x8c, 0x28, 0x8d, 0xc1,
+  0xf8, 0xbe, 0xd4, 0x4b, 0xea, 0xc1, 0xc1, 0xb5, 0xbc, 0x4c, 0x0c, 0xda,
+  0x60, 0xc9, 0xc2, 0xd1, 0x06, 0x08, 0x7e, 0x17, 0x3f, 0x88, 0x37, 0xe7,
+  0xf1, 0x35, 0xd1, 0x76, 0xd4, 0xcb, 0x6b, 0xbb, 0xdf, 0x9e, 0x30, 0xe2,
+  0xa0, 0x41, 0xd3, 0x70, 0xa4, 0xaf, 0x9e, 0xab, 0x1c, 0x86, 0xa9, 0x2c,
+  0x1f, 0x11, 0x92, 0x46, 0x97, 0xef, 0xff, 0xd7, 0x87, 0x08, 0xc4, 0xba,
+  0xf5, 0x7c, 0x62, 0x98, 0xe2, 0x4c, 0x72, 0x9b, 0xe2, 0x1a, 0x46, 0x7e,
+  0xc1, 0x40, 0xe6, 0x16, 0x75, 0x78, 0x47, 0x08, 0xe0, 0xae, 0x25, 0xb7,
+  0x38, 0xc5, 0xec, 0x66, 0x08, 0x6c, 0x9a, 0xa6, 0xb1, 0xcb, 0xed, 0xcd,
+  0x33, 0x1d, 0xd0, 0xf0, 0x06, 0xb2, 0x69, 0x79, 0x27, 0xae, 0xd9, 0xac,
+  0x76, 0x7b, 0x76, 0x76, 0xe6, 0x38, 0xf3, 0x86, 0xec, 0xed, 0xc0, 0xd5,
+  0xb7, 0xa3, 0x52, 0xa1, 0xc9, 0xf5, 0xde, 0xba, 0x2c, 0xf7, 0x3e, 0x6f,
+  0x5d, 0x96, 0xee, 0x9d, 0xb5, 0x3a, 0xc0, 0x28, 0x13, 0xa4, 0x4f, 0xcb,
+  0xe9, 0x86, 0xf7, 0xa0, 0x83, 0x81, 0xc5, 0xb6, 0x03, 0x1d, 0xa1, 0x57,
+  0xbb, 0x3a, 0x80, 0xc0, 0x34, 0x7c, 0x7b, 0x18, 0x41, 0x17, 0xe8, 0xf1,
+  0xc9, 0xb8, 0x2a, 0xef, 0x40, 0x93, 0x02, 0xa4, 0x84, 0x90, 0xcf, 0xa5,
+  0xca, 0x9d, 0x72, 0x93, 0xd6, 0xa1, 0x62, 0x38, 0x13, 0x06, 0x48, 0xb3,
+  0x66, 0xdf, 0x5c, 0xbe, 0x3d, 0x65, 0xc6, 0x54, 0x4e, 0x55, 0xa3, 0xac,
+  0x11, 0xb6, 0x42, 0xeb, 0xe5, 0x78, 0x6e, 0x36, 0x80, 0xd1, 0x4f, 0x1a,
+  0x16, 0x67, 0x22, 0x21, 0x83, 0x74, 0x3a, 0x44, 0x85, 0x24, 0xa6, 0xb8,
+  0x88, 0xf9, 0xfa, 0xc5, 0x17, 0xe4, 0x62, 0x69, 0xb2, 0xb8, 0xc8, 0xed,
+  0xda, 0x08, 0xf6, 0x88, 0x02, 0x2c, 0x76, 0x3e, 0x0d, 0xee, 0xee, 0xee,
+  0x06, 0xd4, 0x39, 0xa7, 0x98, 0x90, 0xc5, 0x76, 0x44, 0xac, 0x36, 0x6c,
+  0xbf, 0x0c, 0xde, 0xd0, 0x52, 0xd0, 0x23, 0xc1, 0xe9, 0xf3, 0x34, 0x35,
+  0x30, 0xef, 0x83, 0xfd, 0xd1, 0x4e, 0x20, 0xa9, 0x5d, 0x96, 0x78, 0x17,
+  0x64, 0x21, 0x69, 0x5b, 0xd9, 0xea, 0x8a, 0xb4, 0xb5, 0xca, 0x17, 0xe9,
+  0x21, 0xa4, 0x10, 0xc9, 0xb1, 0x5a, 0x2c, 0x2b, 0xf2, 0x3e, 0x25, 0x6c,
+  0x60, 0x44, 0xa1, 0xce, 0x1a, 0x58, 0x50, 0xcf, 0xbe, 0x0d, 0x8f, 0xb5,
+  0x4c, 0x13, 0xa5, 0x21, 0xa5, 0xf6, 0xdb, 0x52, 0xbd, 0x1b, 0x44, 0x02,
+  0x35, 0x07, 0x00, 0xec, 0x58, 0x4c, 0xb3, 0xd3, 0x4c, 0xeb, 0x20, 0xc2,
+  0x4f, 0xe1, 0xcd, 0x0d, 0x34, 0xbc, 0x98, 0x8e, 0xed, 0xd8, 0x79, 0x6b,
+  0xc7, 0xc9, 0xaa, 0xca, 0x36, 0x08, 0x4a, 0x90, 0x2e, 0x06, 0x52, 0x56,
+  0xdf, 0x5b, 0x4e, 0xee, 0x98, 0x41, 0x10, 0x41, 0xd4, 0x38, 0xa4, 0x2a,
+  0xe6, 0x32, 0x37, 0x39, 0xb9, 0x4c, 0x5a, 0xd6, 0x13, 0x5b, 0x86, 0xf3,
+  0xac, 0xba, 0xf6, 0x78, 0xdb, 0x62, 0xba, 0x62, 0xea, 0x91, 0xd3, 0x24,
+  0xc9, 0xbf, 0x0f, 0xf8, 0x4a, 0x85, 0x40, 0x5a, 0xb2, 0x77, 0x19, 0xbf,
+  0xd8, 0x24, 0xb2, 0x5f, 0x48, 0x95, 0x69, 0x5a, 0x98, 0x89, 0xa0, 0x13,
+  0x1b, 0x42, 0x2c, 0x66, 0xb3, 0x57, 0xb3, 0x72, 0x59, 0xdf, 0x6f, 0x26,
+  0xc2, 0x62, 0x2d, 0x9c, 0xb2, 0x8d, 0xc0, 0x41, 0x4a, 0x06, 0x1d, 0x2f,
+  0x8b, 0x8f, 0x6a, 0xee, 0x10, 0x40, 0xbc, 0x66, 0xdf, 0x62, 0xa7, 0xb9,
+  0x4d, 0xef, 0x6b, 0xff, 0xee, 0xb7, 0x1d, 0x9b, 0x65, 0xc4, 0x86, 0x61,
+  0xe3, 0x3d, 0xca, 0xc4, 0x6b, 0xc5, 0xa0, 0xd2, 0x68, 0xd8, 0xda, 0xe2,
+  0xfc, 0xe1, 0xc3, 0xb3, 0xad, 0xd2, 0xc5, 0xc1, 0x6c, 0x79, 0x4a, 0x9f,
+  0xd9, 0x8a, 0xff, 0xaf, 0xc0, 0xfc, 0xbb, 0xca, 0x50, 0x8c, 0xf9, 0x77,
+  0x94, 0x41, 0x9c, 0xc2, 0xcd, 0x94, 0x37, 0x8c, 0x2e, 0xb2, 0xab, 0x38,
+  0x4c, 0xce, 0x23, 0x88, 0x2c, 0xac, 0x86, 0x7f, 0x89, 0xa5, 0x7e, 0x8f,
+  0xa7, 0x49, 0xcb, 0xcd, 0x08, 0xd8, 0x2e, 0xa0, 0xd8, 0xd6, 0x94, 0x0c,
+  0x90, 0x1e, 0x62, 0x58, 0x12, 0xee, 0x5f, 0x4d, 0x4f, 0xeb, 0x29, 0x26,
+  0x4a, 0x54, 0x4a, 0x6c, 0xa6, 0xe8, 0xb8, 0x4e, 0x33, 0x3b, 0xda, 0xd9,
+  0xcd, 0x19, 0x9c, 0x99, 0x2f, 0xbd, 0x84, 0x20, 0xf6, 0x0e, 0x41, 0x0e,
+  0x58, 0x8a, 0xd4, 0xd0, 0xec, 0xf2, 0xce, 0x91, 0x11, 0x2b, 0xc1, 0x60,
+  0x19, 0xa1, 0xb7, 0x06, 0xd2, 0xe4, 0x1f, 0x6d, 0xef, 0xb6, 0x71, 0x56,
+  0x57, 0xf7, 0x0a, 0x5a, 0xed, 0x2f, 0x74, 0xbc, 0x72, 0x4e, 0x04, 0xf2,
+  0xeb, 0x27, 0x0a, 0x95, 0x92, 0xd6, 0xc4, 0xd1, 0xe5, 0x9b, 0x7a, 0xd9,
+  0x2c, 0xbb, 0xe6, 0x11, 0xbd, 0x3c, 0x3d, 0xfe, 0xee, 0xf8, 0x34, 0xb8,
+  0xc0, 0xbe, 0x1e, 0x8d, 0x76, 0x3e, 0x66, 0xd5, 0x18, 0xb5, 0x7a, 0xe0,
+  0xf2, 0x4e, 0x12, 0x3c, 0x69, 0xf1, 0x3a, 0x9e, 0x5c, 0xd7, 0x52, 0x0e,
+  0x90, 0xb2, 0x30, 0x9f, 0xc2, 0xe8, 0xbf, 0x7c, 0x52, 0xb8, 0x51, 0x91,
+  0x73, 0x21, 0xc0, 0x30, 0x5c, 0x53, 0x93, 0x2a, 0x9b, 0x72, 0x2d, 0x9b,
+  0x10, 0x12, 0x56, 0x90, 0x9a, 0x9f, 0x24, 0xaf, 0xb1, 0x94, 0x8c, 0x95,
+  0x45, 0xf4, 0xc3, 0x0e, 0x22, 0x78, 0x63, 0x51, 0x9a, 0x2b, 0xe4, 0x3e,
+  0x79, 0x2d, 0xdf, 0x44, 0x2e, 0x1e, 0xcd, 0x05, 0x33, 0xcb, 0xb0, 0xf4,
+  0x3e, 0xfb, 0x76, 0x70, 0x38, 0x1a, 0xbc, 0x3e, 0x3e, 0x3d, 0xfe, 0xfa,
+  0xf0, 0xf2, 0x98, 0xe9, 0x3f, 0x95, 0x07, 0x70, 0x85, 0x32, 0xa4, 0x4a,
+  0xd0, 0xb7, 0x32, 0x31, 0x7c, 0x33, 0x13, 0x87, 0x2c, 0x55, 0xf1, 0xfa,
+  0x08, 0xfe, 0x40, 0xcb, 0x46, 0x96, 0x92, 0x8d, 0xd2, 0xb4, 0x8a, 0x69,
+  0x75, 0x37, 0xb3, 0xb9, 0x92, 0xa4, 0xab, 0xc1, 0x08, 0x24, 0x11, 0xe4,
+  0x7d, 0x41, 0x60, 0xe1, 0xdc, 0xe6, 0xce, 0xf1, 0xe8, 0xbd, 0xa9, 0xf7,
+  0x66, 0xb6, 0xb5, 0xc0, 0x20, 0xca, 0x8c, 0x6b, 0x25, 0xc7, 0x05, 0x93,
+  0xfb, 0x23, 0xf6, 0xf8, 0x1a, 0x0f, 0x76, 0xf8, 0x38, 0x87, 0xd6, 0x9b,
+  0x46, 0xd9, 0x6b, 0xfa, 0xbb, 0x48, 0x1a, 0x3d, 0xe2, 0x6f, 0xf5, 0xe4,
+  0x26, 0x9b, 0x5b, 0x52, 0x10, 0x8a, 0x39, 0x23, 0x6d, 0x92, 0x73, 0xcc,
+  0x84, 0xbc, 0x00, 0xc7, 0x7c, 0x9c, 0xc1, 0xb8, 0x45, 0x40, 0xe7, 0x36,
+  0x90, 0xef, 0x00, 0x70, 0x10, 0x4b, 0x2f, 0xf9, 0xe8, 0x09, 0x82, 0x81,
+  0x14, 0xcd, 0x21, 0xc0, 0x62, 0x12, 0x07, 0x8e, 0x47, 0x7e, 0xa5, 0x82,
+  0x45, 0xf7, 0xf2, 0xb7, 0x7c, 0x9f, 0x1e, 0x4f, 0x1f, 0x85, 0x76, 0xf0,
+  0x23, 0xc8, 0x4b, 0xb5, 0x84, 0xa8, 0x87, 0x51, 0x67, 0x5c, 0xd3, 0xc5,
+  0xd9, 0x4a, 0x72, 0x6c, 0xc7, 0xeb, 0x84, 0x5d, 0xc5, 0x41, 0xcf, 0x4a,
+  0x9c, 0x9d, 0xc1, 0xa1, 0x7d, 0x00, 0xf6, 0xb5, 0x84, 0xd7, 0x8d, 0x15,
+  0x36, 0x5c, 0x9b, 0x4a, 0x45, 0xca, 0x0b, 0x69, 0x7f, 0x28, 0x04, 0xbe,
+  0x82, 0x01, 0x7f, 0x50, 0x30, 0xb4, 0x28, 0x7e, 0x89, 0x52, 0x55, 0xff,
+  0x1a, 0x12, 0x31, 0xdb, 0x34, 0xa3, 0x41, 0xb6, 0x08, 0x78, 0x2d, 0xb7,
+  0xde, 0x28, 0x69, 0xad, 0xbd, 0x3b, 0x34, 0x29, 0x09, 0x04, 0xc6, 0x8e,
+  0xf9, 0xfb, 0xf8, 0xfc, 0x82, 0xcb, 0xee, 0x9d, 0xd2, 0x5f, 0x24, 0x68,
+  0x53, 0xc7, 0xb8, 0x78, 0x84, 0x34, 0x1b, 0x29, 0xd9, 0x70, 0xfb, 0xdb,
+  0x58, 0xac, 0x62, 0xcb, 0x18, 0x4e, 0x28, 0x7c, 0xa4, 0x72, 0x20, 0x62,
+  0xc9, 0x7b, 0x5e, 0x5d, 0x20, 0x74, 0x85, 0xfa, 0x20, 0xfc, 0x83, 0xe8,
+  0x05, 0x63, 0x22, 0xd5, 0xb9, 0x7e, 0x46, 0xbf, 0x54, 0x9f, 0xdb, 0xea,
+  0x64, 0x68, 0xc7, 0x90, 0x43, 0x4d, 0x02, 0x82, 0x5d, 0xa1, 0xa2, 0x50,
+  0x6a, 0xfa, 0x31, 0x74, 0xe3, 0xe4, 0x4f, 0x70, 0xec, 0x19, 0xdc, 0x5f,
+  0xa1, 0x2b, 0x1d, 0x49, 0xbb, 0x74, 0xbb, 0xb0, 0x77, 0x52, 0x11, 0xb5,
+  0x18, 0xb4, 0xc5, 0x10, 0xf7, 0x85, 0x2e, 0x43, 0x42, 0x96, 0x84, 0x83,
+  0x2e, 0x0b, 0x9f, 0x25, 0xbf, 0x65, 0x0b, 0xd4, 0x0a, 0x2c, 0xca, 0xee,
+  0x25, 0xec, 0xca, 0xda, 0xd9, 0x95, 0x44, 0xb6, 0x52, 0xd0, 0x3d, 0xc2,
+  0xc6, 0x18, 0xb3, 0x42, 0x21, 0xf6, 0x42, 0x11, 0x39, 0x75, 0x66, 0xe2,
+  0x2d, 0xe9, 0x3f, 0x06, 0x2a, 0xcb, 0x16, 0x51, 0xa8, 0x69, 0x6f, 0xb4,
+  0x30, 0xbe, 0xc4, 0xfc, 0xff, 0x89, 0x14, 0xf6, 0x9c, 0x9c, 0xe2, 0xd2,
+  0x15, 0x9e, 0x1c, 0x22, 0xf7, 0xd0, 0xfd, 0x56, 0xc6, 0x76, 0x15, 0xcb,
+  0x17, 0xcf, 0x51, 0xdf, 0xda, 0x82, 0xab, 0x30, 0x61, 0x0a, 0xe8, 0xa9,
+  0x91, 0x46, 0xe0, 0xd1, 0xfa, 0x51, 0x9d, 0xab, 0x76, 0x9e, 0x01, 0x5b,
+  0xd5, 0x7c, 0xa7, 0x17, 0x01, 0xf6, 0x9c, 0xd1, 0xe4, 0xe6, 0xdb, 0xe8,
+  0x2e, 0x79, 0x65, 0x6c, 0x28, 0x8f, 0xf6, 0x4e, 0xf0, 0xfd, 0xd7, 0xe8,
+  0x1c, 0x34, 0x1a, 0xbc, 0x81, 0x63, 0x6f, 0xf4, 0x07, 0xae, 0x94, 0x46,
+  0x98, 0x1d, 0xde, 0xcb, 0xe3, 0xcc, 0x7c, 0x31, 0xa7, 0x2a, 0x0f, 0x7e,
+  0x29, 0x93, 0x00, 0xb5, 0x5a, 0x9b, 0xfd, 0x37, 0xb9, 0x51, 0x93, 0x89,
+  0x5e, 0x9c, 0x93, 0x02, 0xe0, 0x95, 0x30, 0xc1, 0x4e, 0x60, 0x28, 0xc1,
+  0xe0, 0xbc, 0xaf, 0x91, 0x30, 0xc6, 0xb7, 0x07, 0x11, 0x65, 0x33, 0x81,
+  0x13, 0xcb, 0x01, 0xa2, 0x8f, 0xa6, 0xf5, 0x6d, 0xfc, 0x84, 0xd7, 0xb7,
+  0xd1, 0x13, 0xae, 0x7f, 0xe0, 0xa4, 0x7b, 0x85, 0x65, 0x56, 0x9d, 0xf5,
+  0xd1, 0x77, 0xba, 0x57, 0x56, 0x9f, 0x70, 0x1d, 0x1d, 0x76, 0xbb, 0x77,
+  0xc6, 0xf9, 0x90, 0xcb, 0x1a, 0xd9, 0x63, 0x2e, 0xe7, 0x3c, 0xea, 0xae,
+  0xf7, 0xeb, 0x41, 0xf1, 0x39, 0x37, 0xdf, 0x97, 0xc3, 0x7d, 0x7e, 0x38,
+  0xfa, 0xae, 0x73, 0xac, 0xbd, 0x83, 0x1c, 0x4b, 0xcf, 0x45, 0x9d, 0x96,
+  0x4a, 0xc9, 0xff, 0xa8, 0xad, 0xe8, 0x7e, 0xaf, 0x6f, 0x1f, 0xb3, 0xdf,
+  0x4d, 0x47, 0x82, 0xfd, 0x1e, 0xcc, 0xf1, 0xba, 0xfd, 0xee, 0x2f, 0x54,
+  0xeb, 0x06, 0xca, 0x12, 0x7f, 0xc7, 0x17, 0x5c, 0xcd, 0xed, 0x06, 0x85,
+  0x41, 0x83, 0xad, 0x8e, 0x9d, 0x5e, 0x94, 0xb2, 0xb5, 0x43, 0x88, 0x18,
+  0xfa, 0xf9, 0x4b, 0x36, 0x3a, 0x5e, 0x08, 0xf6, 0xb9, 0xae, 0xe8, 0x2f,
+  0xde, 0xe8, 0x72, 0x40, 0x82, 0x7d, 0x0e, 0xad, 0xfa, 0xbc, 0xef, 0x6d,
+  0x70, 0x6f, 0xd7, 0xfa, 0x29, 0xb0, 0x91, 0x19, 0x12, 0xba, 0x8a, 0xda,
+  0xbb, 0x80, 0x5d, 0x66, 0x7b, 0xa4, 0xb4, 0x62, 0xdf, 0xa6, 0x14, 0x56,
+  0x93, 0xd0, 0xbb, 0x6e, 0x73, 0x66, 0x7d, 0x2c, 0x7b, 0xa5, 0xaa, 0x34,
+  0x2e, 0x71, 0xdc, 0xda, 0x30, 0xd4, 0xfd, 0x94, 0x6a, 0xbf, 0x52, 0x8b,
+  0xcb, 0x1d, 0x74, 0xe4, 0x2e, 0x59, 0x34, 0x33, 0xb7, 0xce, 0x08, 0x20,
+  0x00, 0x5e, 0xa1, 0xd6, 0x39, 0x2d, 0xea, 0x81, 0xab, 0xb5, 0xf7, 0xd2,
+  0xfe, 0x35, 0xd0, 0xd2, 0x5f, 0xbf, 0x1b, 0x85, 0xa7, 0xb5, 0xce, 0x18,
+  0x32, 0x7f, 0x8d, 0xe3, 0x67, 0x1e, 0x71, 0xd9, 0x3f, 0xcd, 0x4d, 0x85,
+  0x4a, 0x35, 0x2f, 0xa3, 0x0e, 0x0e, 0x7c, 0x62, 0xd8, 0x4d, 0xdf, 0x49,
+  0xb5, 0x38, 0x24, 0x3c, 0x7d, 0xe4, 0x71, 0xf1, 0xfa, 0xa6, 0xd9, 0xaf,
+  0xf0, 0xa4, 0x44, 0xa8, 0xa3, 0x6c, 0xce, 0x0e, 0xf5, 0x54, 0x0b, 0x6d,
+  0x09, 0xaf, 0xaa, 0x10, 0x38, 0xd9, 0xe2, 0x0a, 0x45, 0xa7, 0xbe, 0x60,
+  0x77, 0xb0, 0xd4, 0x1e, 0x9d, 0x1f, 0x86, 0xed, 0x6c, 0xaf, 0x35, 0xb3,
+  0x68, 0x02, 0x17, 0xb7, 0x4f, 0x07, 0xf4, 0xb0, 0x55, 0x9e, 0xe4, 0xa7,
+  0xcf, 0xf1, 0xd3, 0x61, 0x30, 0xd1, 0x81, 0xad, 0x29, 0x65, 0x76, 0x2c,
+  0xdb, 0x1d, 0x98, 0x55, 0xa6, 0x44, 0xf1, 0x8c, 0x4b, 0x40, 0x6b, 0xdb,
+  0xde, 0xa5, 0xca, 0x67, 0xe5, 0xea, 0x86, 0x24, 0x01, 0x81, 0x76, 0x8a,
+  0x02, 0xb7, 0x9e, 0x47, 0xf1, 0x49, 0x37, 0xfc, 0xd6, 0xea, 0xf3, 0x4b,
+  0x19, 0x66, 0x7c, 0xc9, 0x5b, 0x9a, 0xd8, 0x38, 0xe7, 0xd2, 0x0a, 0x2f,
+  0xf3, 0xc5, 0x40, 0xdf, 0x52, 0x2f, 0xe0, 0x3c, 0x05, 0x23, 0x37, 0x49,
+  0x8d, 0xa7, 0x58, 0x84, 0xc8, 0x20, 0xb9, 0x74, 0x56, 0x2b, 0xb6, 0xd3,
+  0xda, 0x34, 0xa2, 0xb0, 0x34, 0x96, 0x84, 0x8d, 0x36, 0x05, 0x7f, 0x27,
+  0x96, 0x06, 0xa3, 0xc8, 0x55, 0x3f, 0x32, 0xad, 0x90, 0x77, 0x74, 0xc3,
+  0xbe, 0xfb, 0xc0, 0xfa, 0xb9, 0x4d, 0xb6, 0x7e, 0xfd, 0x74, 0xce, 0xfe,
+  0x67, 0xac, 0xdf, 0xf3, 0xdf, 0x6b, 0xfd, 0x9e, 0xff, 0xcf, 0x58, 0xbf,
+  0xe7, 0xff, 0xf4, 0xfa, 0x3d, 0x0d, 0xd6, 0xef, 0xf9, 0xff, 0x94, 0xf5,
+  0xd3, 0xc2, 0x1e, 0xba, 0x7a, 0x59, 0xb0, 0x7e, 0x23, 0x49, 0xe9, 0x50,
+  0x06, 0x2c, 0x9a, 0x69, 0x7d, 0x8b, 0x83, 0x0e, 0x91, 0xda, 0x3b, 0x1e,
+  0xc7, 0x79, 0x9c, 0x6c, 0x41, 0x22, 0x2a, 0xda, 0xe8, 0xc9, 0x79, 0x62,
+  0x3b, 0xe0, 0x2d, 0x83, 0xa3, 0xe8, 0x81, 0x8e, 0x13, 0x75, 0xb9, 0xd6,
+  0xe4, 0x87, 0x33, 0xe3, 0xe7, 0x8c, 0xb3, 0xda, 0x65, 0x02, 0xc6, 0x08,
+  0x78, 0xcc, 0xc4, 0x1d, 0xbc, 0xa4, 0xe9, 0x1a, 0xf0, 0xe3, 0x5f, 0x44,
+  0xf3, 0x7f, 0x50, 0xd9, 0xcb, 0x75, 0x29, 0xe6, 0x66, 0xf7, 0xa6, 0xce,
+  0xad, 0x9b, 0xdd, 0x8d, 0xde, 0xa2, 0xc5, 0xd6, 0x2c, 0xc2, 0xbb, 0xcd,
+  0x2b, 0xf8, 0xd0, 0x92, 0xbd, 0x86, 0x66, 0xb0, 0x9c, 0x2f, 0x24, 0x2f,
+  0xf0, 0x81, 0xbc, 0xa8, 0x84, 0x4b, 0xd6, 0x20, 0xe7, 0x89, 0x7d, 0xab,
+  0x92, 0x2b, 0x60, 0xeb, 0xc6, 0x2a, 0x10, 0x5b, 0xa2, 0x16, 0xce, 0xb9,
+  0x19, 0xf1, 0xb9, 0xae, 0xc8, 0xbf, 0xf1, 0x9c, 0x05, 0x0c, 0x69, 0xb7,
+  0xb5, 0x58, 0xb3, 0xc2, 0xd7, 0x91, 0x04, 0x17, 0x0d, 0x72, 0x04, 0xfe,
+  0x6a, 0x8c, 0x16, 0x12, 0xe1, 0x19, 0x4a, 0x93, 0xa0, 0x3e, 0x33, 0x05,
+  0x97, 0x79, 0xd5, 0x34, 0x33, 0x94, 0x5c, 0x09, 0xaf, 0x8a, 0xa9, 0xed,
+  0x3d, 0xb3, 0x99, 0xc4, 0xa0, 0xc4, 0x70, 0x20, 0x43, 0x9b, 0xd1, 0x14,
+  0x5e, 0x4e, 0x46, 0xb7, 0x64, 0x24, 0xc5, 0xad, 0xe2, 0xe7, 0x5b, 0xac,
+  0xd8, 0x83, 0x71, 0x98, 0x01, 0xd3, 0xca, 0xdf, 0xf9, 0x37, 0x6c, 0xdf,
+  0x15, 0x18, 0x6e, 0x56, 0x22, 0x3c, 0x33, 0x34, 0xb2, 0xe6, 0x3e, 0x48,
+  0x7c, 0x18, 0xe7, 0x4b, 0xd1, 0x73, 0x95, 0x30, 0x34, 0xf0, 0x26, 0xf3,
+  0xf3, 0x10, 0x2d, 0x85, 0x9a, 0xa0, 0x91, 0xd0, 0x5a, 0x21, 0x28, 0xb6,
+  0x80, 0x76, 0x1e, 0xb9, 0xae, 0x32, 0x5d, 0x3d, 0x61, 0x0b, 0x59, 0xf2,
+  0x5b, 0xc4, 0xa2, 0x36, 0x65, 0x3e, 0x8b, 0x7f, 0x61, 0xd6, 0x9f, 0x07,
+  0xeb, 0xf4, 0x45, 0x52, 0x76, 0xcd, 0xb1, 0xd0, 0x75, 0x08, 0xc2, 0x91,
+  0x63, 0xb8, 0x65, 0x7e, 0x4a, 0x1b, 0x0a, 0xe0, 0x5d, 0x71, 0x5c, 0x34,
+  0x55, 0xb9, 0x30, 0x93, 0xfe, 0x75, 0x4a, 0xa3, 0x82, 0xe4, 0x7c, 0x9d,
+  0x66, 0xf3, 0x20, 0xe7, 0xa3, 0x2e, 0xc9, 0x83, 0xa9, 0xb1, 0x5d, 0xfe,
+  0x97, 0xe7, 0xf4, 0x82, 0x62, 0xc9, 0x53, 0x43, 0xd5, 0xc1, 0xa7, 0x66,
+  0xd7, 0x09, 0xf2, 0x9b, 0x4c, 0x99, 0xd1, 0xe8, 0x34, 0x54, 0xa6, 0x95,
+  0xde, 0x7e, 0x6d, 0x8e, 0x2f, 0x9a, 0x1a, 0xb4, 0x4f, 0x94, 0x19, 0x39,
+  0x37, 0xfd, 0x32, 0x7a, 0x98, 0x79, 0xdc, 0xd9, 0x4c, 0xab, 0x7a, 0x2a,
+  0x79, 0xe1, 0xa4, 0xba, 0x5f, 0x90, 0x7d, 0x26, 0x39, 0x6d, 0x7c, 0xf0,
+  0xa8, 0x77, 0x4c, 0x51, 0x98, 0xac, 0x4d, 0x23, 0x7c, 0x0f, 0xcf, 0xbe,
+  0xbc, 0x0b, 0x41, 0x4c, 0x96, 0xb9, 0x99, 0x2f, 0x8a, 0xb0, 0xaa, 0x60,
+  0x26, 0x91, 0x35, 0x05, 0x6b, 0x80, 0xab, 0xb8, 0x11, 0xd0, 0x66, 0xa1,
+  0x84, 0x86, 0x0f, 0xa0, 0x80, 0xe2, 0x6a, 0xf6, 0x01, 0x31, 0xf1, 0xc2,
+  0x99, 0xbd, 0xed, 0x5d, 0x0b, 0xf2, 0x7c, 0x50, 0x8c, 0x52, 0x45, 0xb0,
+  0x65, 0xd2, 0x4d, 0x29, 0x63, 0xba, 0x08, 0x28, 0x0b, 0x3c, 0x66, 0x9b,
+  0xf0, 0xaa, 0xe2, 0xba, 0x4b, 0x48, 0x27, 0x05, 0x6b, 0x46, 0x8c, 0x05,
+  0xa7, 0xef, 0x1d, 0x74, 0xe6, 0x6b, 0xc3, 0x91, 0xbf, 0x0b, 0x8f, 0x3c,
+  0x20, 0xe0, 0xb4, 0x4d, 0xf5, 0x04, 0x38, 0x02, 0x42, 0x32, 0xee, 0xe0,
+  0x9a, 0xce, 0xd2, 0x3a, 0xa7, 0x3b, 0x83, 0x70, 0x90, 0x13, 0x0d, 0x96,
+  0xd2, 0x42, 0x0c, 0x42, 0x22, 0x49, 0x73, 0x98, 0x19, 0xe6, 0x8a, 0x24,
+  0x0d, 0xdc, 0x35, 0x64, 0x50, 0x9a, 0xbe, 0x98, 0x81, 0xc6, 0x33, 0x87,
+  0x5b, 0xe3, 0xfd, 0xed, 0xee, 0x9a, 0x8b, 0x93, 0xd1, 0x51, 0x72, 0x36,
+  0x6a, 0xcd, 0x2b, 0xa0, 0x04, 0x7b, 0xbb, 0xbb, 0x0f, 0x72, 0x7c, 0x88,
+  0x5b, 0x5d, 0xa9, 0x3e, 0xb0, 0x3b, 0x8c, 0x98, 0x52, 0x9e, 0x8f, 0x46,
+  0xb3, 0x0f, 0x1c, 0xcb, 0x07, 0x72, 0x6f, 0xd3, 0x5c, 0x12, 0x39, 0xba,
+  0xac, 0x48, 0xe6, 0x93, 0x96, 0x71, 0xc3, 0x09, 0x36, 0xbe, 0x41, 0x98,
+  0x0a, 0x07, 0x9c, 0x1f, 0xe6, 0x6e, 0x38, 0x46, 0x1f, 0xeb, 0x83, 0xd6,
+  0x3b, 0xd1, 0x12, 0x83, 0xd4, 0x21, 0x7a, 0x49, 0x94, 0xc2, 0x61, 0xf2,
+  0xd5, 0xbd, 0x33, 0x48, 0x3d, 0x3f, 0x0c, 0x7a, 0x05, 0xc9, 0xa5, 0xc5,
+  0x91, 0xd7, 0xdd, 0x72, 0x71, 0x1e, 0x8f, 0x7f, 0x63, 0x81, 0xcd, 0x14,
+  0x95, 0x4d, 0xb9, 0xa8, 0xd1, 0x2a, 0x98, 0x07, 0xe2, 0x9e, 0x18, 0x3b,
+  0x5a, 0x4b, 0x9a, 0xe8, 0x86, 0xed, 0x55, 0x23, 0xe0, 0xdb, 0x7a, 0x2d,
+  0x8f, 0x6c, 0x9b, 0x95, 0xa5, 0x8d, 0x76, 0xfc, 0xac, 0xad, 0xee, 0x51,
+  0x0a, 0xe8, 0x00, 0x89, 0x9e, 0xdd, 0xec, 0x76, 0xca, 0x0d, 0x45, 0x55,
+  0xea, 0x4f, 0x0c, 0xf0, 0x91, 0x1a, 0x8f, 0x59, 0xc3, 0xd0, 0x92, 0x0e,
+  0x91, 0xa5, 0x7f, 0x47, 0x29, 0xbb, 0xb1, 0x0a, 0x4c, 0xbf, 0x86, 0x78,
+  0x90, 0x65, 0xd6, 0xca, 0xd4, 0x8d, 0x90, 0x4f, 0x85, 0x45, 0xef, 0x35,
+  0x8f, 0x15, 0xa1, 0x77, 0x68, 0x65, 0xac, 0xc6, 0xbd, 0xbf, 0x38, 0xed,
+  0x27, 0x52, 0x90, 0x92, 0xb0, 0xb3, 0x66, 0x71, 0xe3, 0x6a, 0xa6, 0xf3,
+  0x69, 0x33, 0x2d, 0x1e, 0x8f, 0xa5, 0x76, 0x0c, 0x4e, 0x74, 0x03, 0xc2,
+  0x8f, 0x6c, 0x9a, 0xac, 0x35, 0x63, 0x3e, 0xf4, 0xee, 0x79, 0xc9, 0xa3,
+  0xe6, 0xc1, 0x4d, 0x8a, 0x83, 0x2d, 0xe1, 0x8b, 0xd5, 0x4e, 0x5b, 0xda,
+  0x24, 0x15, 0x72, 0x9c, 0x58, 0x4b, 0x7e, 0x9f, 0x48, 0x76, 0xae, 0x44,
+  0x75, 0x89, 0x8d, 0x2d, 0xc1, 0x8a, 0x20, 0x3f, 0x77, 0x59, 0x79, 0xb1,
+  0xdd, 0xde, 0x4d, 0x6e, 0x96, 0xb2, 0xe8, 0xd1, 0x10, 0x09, 0x97, 0xc2,
+  0x2c, 0x82, 0x0d, 0x3e, 0x1c, 0x43, 0x5a, 0x93, 0x74, 0x71, 0xbe, 0xc6,
+  0x78, 0xb5, 0xc9, 0x56, 0x78, 0xa7, 0x9f, 0xb4, 0xce, 0x81, 0xaa, 0xef,
+  0xdc, 0x35, 0x97, 0x1b, 0x1c, 0xa5, 0xc7, 0xe7, 0x0d, 0xe2, 0x16, 0x18,
+  0x27, 0x1e, 0xf5, 0x2e, 0xfa, 0x3e, 0xe7, 0xbc, 0x2e, 0x7c, 0xab, 0x44,
+  0xfa, 0x3c, 0x64, 0x6b, 0xc0, 0xdc, 0x8b, 0xd1, 0x43, 0x0b, 0x22, 0xbc,
+  0x12, 0xa1, 0x2b, 0x4b, 0x21, 0x39, 0xe9, 0x3d, 0xd2, 0x30, 0xb4, 0x03,
+  0x81, 0x57, 0x47, 0xe6, 0xf2, 0xba, 0x84, 0x74, 0x94, 0x6d, 0x4c, 0x94,
+  0x79, 0x93, 0x2a, 0x5f, 0x34, 0x1c, 0x4d, 0x0f, 0xaa, 0x59, 0x47, 0xb8,
+  0x3d, 0x14, 0x2e, 0x4d, 0x0b, 0x44, 0x82, 0xcb, 0xfc, 0xcb, 0x6e, 0xc0,
+  0x9a, 0x73, 0xa9, 0x6d, 0x2e, 0x1e, 0x7b, 0xad, 0x0f, 0xfa, 0x91, 0x1a,
+  0xa0, 0x9f, 0x9a, 0x75, 0xf0, 0xff, 0x67, 0xfb, 0xad, 0x73, 0x7a, 0xd5,
+  0x97, 0xb3, 0xba, 0x02, 0x61, 0x85, 0xd3, 0x6a, 0x7a, 0x3f, 0x63, 0x32,
+  0xe3, 0x2d, 0xaa, 0x79, 0xcb, 0x69, 0x2e, 0x29, 0x2e, 0x5d, 0x90, 0xb6,
+  0x89, 0x92, 0xc8, 0xbb, 0x3d, 0x1a, 0x53, 0xa7, 0x72, 0x95, 0x5c, 0x81,
+  0x17, 0xfc, 0xc8, 0xb0, 0xe4, 0xa0, 0xaf, 0x8a, 0x87, 0x57, 0xa7, 0x2a,
+  0x6b, 0x26, 0xde, 0x2f, 0xa7, 0x59, 0x3a, 0x8b, 0xd6, 0xd4, 0xa2, 0x0e,
+  0xc3, 0x2d, 0xc9, 0x87, 0x17, 0x55, 0x3c, 0x0a, 0xf5, 0x72, 0x0b, 0x48,
+  0x15, 0xf2, 0xdc, 0x2a, 0xf8, 0xdc, 0x43, 0x6c, 0x9a, 0x08, 0x89, 0x4f,
+  0x36, 0xcb, 0x6f, 0xc1, 0xc4, 0xa0, 0x5c, 0xbe, 0x38, 0xc9, 0x16, 0x0e,
+  0x81, 0x30, 0x2d, 0x70, 0x5c, 0xf6, 0x01, 0x24, 0x11, 0x30, 0x4a, 0x26,
+  0x60, 0x9c, 0x57, 0x9f, 0x1d, 0xa7, 0x80, 0xb1, 0xf0, 0x54, 0xd8, 0x3b,
+  0xf5, 0x8b, 0xa1, 0x09, 0xb4, 0x33, 0xb7, 0x65, 0x8b, 0x21, 0x38, 0x8e,
+  0xe5, 0x5f, 0x54, 0xc1, 0x4d, 0x7e, 0x9b, 0x29, 0xa4, 0x04, 0xb6, 0x08,
+  0x4f, 0x7f, 0x63, 0xb3, 0xe2, 0xb8, 0xd4, 0x3b, 0x8e, 0x11, 0x9f, 0xa1,
+  0xfd, 0xfd, 0xf8, 0x2e, 0x93, 0x22, 0x90, 0x02, 0x8f, 0x85, 0x7c, 0xae,
+  0xd3, 0x2b, 0x5b, 0x9f, 0x55, 0xc4, 0x53, 0x39, 0x31, 0xd3, 0x87, 0x90,
+  0xda, 0x1d, 0x33, 0xac, 0x16, 0x91, 0xec, 0x15, 0x96, 0x46, 0x48, 0xea,
+  0x71, 0x17, 0x28, 0x89, 0x1f, 0x2b, 0xa1, 0xea, 0x59, 0xbe, 0x50, 0x77,
+  0x68, 0x3f, 0xc9, 0x04, 0xee, 0x41, 0xbc, 0x9c, 0x21, 0xd7, 0x5e, 0xa7,
+  0x58, 0xa5, 0x50, 0x36, 0xce, 0xc8, 0x50, 0xd8, 0xb2, 0xcd, 0x73, 0xeb,
+  0x4f, 0x77, 0xf7, 0xd0, 0xdf, 0xa7, 0xbb, 0x9f, 0x6d, 0xb7, 0x6f, 0x9b,
+  0x99, 0x51, 0x81, 0x80, 0xf9, 0x79, 0x64, 0x99, 0x13, 0xbc, 0x21, 0x28,
+  0xa1, 0xe9, 0xb2, 0x72, 0x75, 0xab, 0xa8, 0xf2, 0x0d, 0x6c, 0xcb, 0xfa,
+  0x86, 0xd8, 0xc0, 0x82, 0xdb, 0x8b, 0x5e, 0xd3, 0x0c, 0x92, 0x9c, 0x15,
+  0x40, 0x38, 0xdc, 0x65, 0xbe, 0x52, 0x34, 0x20, 0x25, 0x36, 0x98, 0x15,
+  0x0f, 0xcf, 0x92, 0x75, 0x19, 0xb2, 0xb6, 0xfa, 0x6c, 0x47, 0x9c, 0xac,
+  0xc0, 0xe1, 0x96, 0x76, 0x11, 0x35, 0xde, 0xbd, 0xe6, 0x1e, 0x78, 0x93,
+  0x17, 0x79, 0x7d, 0x83, 0xe2, 0x6b, 0x75, 0x9d, 0x5e, 0x67, 0x61, 0x42,
+  0xab, 0x31, 0xb3, 0x6a, 0xd6, 0xf1, 0x52, 0x2e, 0x64, 0x4c, 0xec, 0x8f,
+  0x0b, 0x3e, 0x0c, 0x02, 0xf8, 0x97, 0x02, 0x2d, 0x4b, 0x04, 0x34, 0xec,
+  0x30, 0x57, 0x15, 0x0e, 0x72, 0x75, 0x83, 0x56, 0x95, 0x0d, 0x22, 0x92,
+  0x72, 0x70, 0xd4, 0x78, 0x55, 0x06, 0x02, 0x6c, 0x1f, 0x69, 0x81, 0x5b,
+  0xb4, 0xb8, 0x67, 0x23, 0x23, 0x84, 0x76, 0x09, 0x33, 0x35, 0x4b, 0x41,
+  0xf7, 0x6a, 0xfe, 0x66, 0x7e, 0xf6, 0x83, 0xd1, 0xb1, 0x86, 0x2f, 0xec,
+  0x8f, 0xb7, 0x1f, 0x57, 0x66, 0x68, 0xbf, 0xa3, 0x73, 0x10, 0x90, 0x51,
+  0xdc, 0xde, 0x30, 0x6d, 0x5e, 0xf1, 0x3f, 0x56, 0x68, 0x94, 0x23, 0x97,
+  0x54, 0xe1, 0x41, 0x7c, 0x24, 0x01, 0xc7, 0x6a, 0xbc, 0x82, 0xfc, 0x53,
+  0x77, 0x7a, 0x24, 0x10, 0xa1, 0x9a, 0xfd, 0xb4, 0xcd, 0x0d, 0x0c, 0x2d,
+  0x65, 0x46, 0x15, 0x25, 0x68, 0xe3, 0x0f, 0x93, 0xd3, 0x0c, 0xc5, 0x8a,
+  0x93, 0xcd, 0x2f, 0x37, 0x31, 0x5f, 0x9b, 0x2f, 0x99, 0xf6, 0x76, 0x10,
+  0x72, 0x55, 0x23, 0x00, 0xad, 0xe5, 0x5a, 0x36, 0xff, 0x4c, 0x28, 0x4e,
+  0x62, 0x32, 0xe0, 0x1e, 0x28, 0xd9, 0xab, 0xf4, 0x4b, 0xc3, 0xaf, 0x16,
+  0x53, 0x15, 0x54, 0x99, 0x06, 0xf9, 0xd5, 0x50, 0x68, 0x81, 0xf8, 0x52,
+  0x26, 0xf7, 0x04, 0x97, 0xf2, 0x23, 0xae, 0xe0, 0xce, 0x0c, 0xa8, 0xba,
+  0xb2, 0x59, 0x47, 0x2a, 0x4b, 0x32, 0x51, 0x06, 0x97, 0x3b, 0x74, 0x65,
+  0xaf, 0xb8, 0x67, 0xdc, 0x23, 0xb8, 0xc4, 0x26, 0x93, 0x9c, 0xee, 0x64,
+  0x8e, 0x39, 0x9a, 0xdf, 0x5e, 0x5f, 0x67, 0x51, 0x52, 0x51, 0x9a, 0x0c,
+  0xb3, 0xe8, 0x34, 0x17, 0x57, 0x59, 0xda, 0xe0, 0x22, 0x35, 0xf7, 0xf6,
+  0x1a, 0xd4, 0xa9, 0xd3, 0x47, 0x23, 0xcf, 0x78, 0xa3, 0x78, 0xe9, 0x63,
+  0xfb, 0xd7, 0x27, 0x11, 0xcd, 0xc8, 0x92, 0x13, 0xd5, 0x7f, 0x39, 0x43,
+  0x55, 0x09, 0x01, 0xf1, 0x0e, 0xcc, 0x44, 0xf1, 0x9c, 0x28, 0x15, 0x79,
+  0x0a, 0x80, 0x4b, 0xd7, 0x08, 0xa0, 0x42, 0x22, 0xc2, 0x07, 0xbf, 0x0a,
+  0xd9, 0x0b, 0x18, 0x6f, 0xed, 0xc5, 0x91, 0x18, 0x9d, 0x9c, 0x44, 0x52,
+  0xc1, 0xfc, 0x32, 0x7a, 0x47, 0x82, 0xe4, 0xbd, 0xa4, 0xf2, 0x0d, 0xa2,
+  0xee, 0x1a, 0x79, 0xb2, 0x83, 0xbd, 0x2e, 0x18, 0xf3, 0x09, 0x71, 0x42,
+  0xf0, 0x2b, 0x65, 0x72, 0xf1, 0xe6, 0xa8, 0xcb, 0x28, 0xfa, 0xe4, 0xf3,
+  0xcf, 0xa5, 0x13, 0x99, 0x60, 0x93, 0x6c, 0xe9, 0x6c, 0x58, 0xdd, 0x8c,
+  0x97, 0x63, 0xf0, 0xa1, 0xb9, 0x81, 0x01, 0xb6, 0x95, 0x80, 0x77, 0x6c,
+  0xc9, 0x64, 0x4e, 0x37, 0x25, 0xfd, 0xc6, 0x95, 0xf4, 0x54, 0xe2, 0x61,
+  0x2e, 0x87, 0xd1, 0xa1, 0xe6, 0x61, 0x7c, 0x69, 0x91, 0x7c, 0x19, 0x25,
+  0x36, 0x37, 0x5f, 0x44, 0x66, 0xe1, 0x75, 0xd6, 0x84, 0x29, 0x15, 0x1e,
+  0x88, 0xb1, 0xd5, 0xf8, 0x4a, 0x3e, 0x15, 0x57, 0xcf, 0x59, 0x93, 0x42,
+  0x5e, 0x72, 0x70, 0x4c, 0x0b, 0x33, 0x4c, 0x32, 0xcb, 0x01, 0xfe, 0x25,
+  0x0e, 0xda, 0x4b, 0xe1, 0x8f, 0x89, 0x96, 0x58, 0xfe, 0x52, 0xd8, 0x7a,
+  0x04, 0x47, 0x09, 0xea, 0x98, 0xa6, 0x31, 0x06, 0x82, 0x13, 0x82, 0x00,
+  0xb3, 0x82, 0x25, 0x44, 0x19, 0x0a, 0xb8, 0x54, 0x77, 0x10, 0xb7, 0xcf,
+  0x67, 0xaa, 0xb4, 0xbf, 0x54, 0x12, 0x20, 0xc7, 0x96, 0x4f, 0x90, 0x62,
+  0xea, 0x4d, 0x6c, 0x2a, 0xea, 0xa8, 0xe4, 0xa1, 0x03, 0xe8, 0xde, 0xf5,
+  0x26, 0x2a, 0xc2, 0xec, 0x00, 0x4a, 0xcf, 0x03, 0x1b, 0xc2, 0xa4, 0x80,
+  0xe0, 0x5c, 0xd8, 0xa1, 0x52, 0x8b, 0x81, 0x97, 0x5b, 0x7f, 0x73, 0x51,
+  0x95, 0xd4, 0xcc, 0xa6, 0x2d, 0x77, 0x1d, 0x9b, 0x67, 0x9b, 0x59, 0x55,
+  0x91, 0x8b, 0x89, 0x7a, 0x60, 0x19, 0xb1, 0x48, 0xe2, 0x57, 0xc6, 0x2e,
+  0x1d, 0xfe, 0x75, 0x71, 0xed, 0xf8, 0xba, 0x41, 0x34, 0x6f, 0xd4, 0x97,
+  0xb0, 0x28, 0x05, 0x8e, 0xc5, 0xe0, 0x4d, 0x22, 0xdf, 0x7d, 0xf5, 0x65,
+  0xab, 0x01, 0x65, 0x7f, 0xf6, 0x09, 0x4c, 0x05, 0x76, 0x39, 0xb9, 0xce,
+  0x23, 0x39, 0x6b, 0x92, 0x6b, 0xcf, 0x9b, 0xc8, 0x61, 0x6d, 0xad, 0xe1,
+  0xc1, 0x40, 0x6e, 0x6c, 0x28, 0x44, 0xc7, 0x5d, 0x84, 0x7b, 0x96, 0xc5,
+  0x68, 0x0f, 0xe5, 0xfc, 0x5c, 0x13, 0xa0, 0x9d, 0x94, 0x73, 0xe4, 0xdb,
+  0xeb, 0xd6, 0x81, 0x2f, 0xb4, 0xa9, 0x96, 0x13, 0x68, 0xa2, 0xef, 0xc9,
+  0xeb, 0xd2, 0x2c, 0x29, 0x22, 0x34, 0x03, 0xbf, 0x76, 0x24, 0xd1, 0x53,
+  0xea, 0xb8, 0x8a, 0x7b, 0xa4, 0x92, 0x9b, 0xa1, 0x4d, 0x08, 0x9e, 0xea,
+  0xa5, 0x92, 0x2f, 0x40, 0x7f, 0x2f, 0x26, 0x44, 0x3f, 0xc4, 0x1d, 0xb8,
+  0x02, 0x44, 0xd4, 0xc0, 0x12, 0x4c, 0xbc, 0x7f, 0x57, 0xae, 0xba, 0x16,
+  0x6f, 0x1b, 0x2b, 0x23, 0xe1, 0xa5, 0xfa, 0x17, 0x63, 0x53, 0x58, 0xd8,
+  0x31, 0xe3, 0x4f, 0xd5, 0x5e, 0x83, 0x9d, 0xd4, 0x96, 0x42, 0x74, 0xe0,
+  0x61, 0x80, 0x90, 0xb5, 0x18, 0xab, 0x9e, 0xb9, 0xc9, 0x37, 0x56, 0x9f,
+  0x11, 0x52, 0x92, 0xff, 0xea, 0x72, 0x18, 0x57, 0xaf, 0x7e, 0xef, 0x2e,
+  0x1b, 0xbf, 0xfa, 0x92, 0x8c, 0xba, 0x4f, 0x20, 0xbc, 0xe5, 0xab, 0x8f,
+  0x76, 0xf8, 0x0e, 0xf8, 0x6f, 0x13, 0x6f, 0x03, 0x74, 0x1b, 0x31, 0xa7,
+  0x63, 0x65, 0xb3, 0x1e, 0x7a, 0xdc, 0x6b, 0xf2, 0xaa, 0x2c, 0xd7, 0xb6,
+  0x48, 0xb3, 0xc2, 0x15, 0x06, 0x30, 0x2f, 0x1e, 0x30, 0x85, 0xe1, 0x1a,
+  0x2e, 0x37, 0x86, 0x37, 0xbf, 0xdd, 0x54, 0x72, 0xfa, 0x63, 0xc9, 0x8a,
+  0xa8, 0xff, 0xca, 0xea, 0xbb, 0x46, 0x53, 0x5e, 0xf5, 0x15, 0x9a, 0x1d,
+  0xa1, 0x3f, 0x77, 0x63, 0xe0, 0x63, 0x01, 0x16, 0x04, 0xfa, 0xeb, 0x9f,
+  0xed, 0xeb, 0xf4, 0x1f, 0x73, 0xaa, 0xc0, 0x57, 0xb9, 0x66, 0x34, 0x27,
+  0x57, 0xf6, 0x8b, 0x3b, 0x5c, 0x5a, 0x55, 0xab, 0x58, 0x6d, 0xf6, 0xf9,
+  0x12, 0xfe, 0xf3, 0x26, 0xec, 0x1e, 0x45, 0x0c, 0xa0, 0xf0, 0x00, 0x2c,
+  0x59, 0xaa, 0x45, 0xd0, 0x3d, 0x15, 0x84, 0xab, 0xe1, 0xd2, 0x04, 0xe8,
+  0xfd, 0x8a, 0x8e, 0xd3, 0x95, 0x9c, 0x68, 0xdf, 0x7f, 0xea, 0xd9, 0xde,
+  0xff, 0xd4, 0x73, 0xfd, 0xff, 0xa9, 0xe7, 0x46, 0xf0, 0x53, 0xaf, 0x97,
+  0x60, 0x10, 0x81, 0x06, 0xf9, 0x8b, 0x17, 0x7d, 0x93, 0x3f, 0xea, 0xbe,
+  0xe9, 0x7d, 0xd2, 0xfb, 0x62, 0x6f, 0x73, 0xdd, 0xa4, 0x39, 0x2f, 0x73,
+  0x7e, 0xe5, 0x51, 0x40, 0xf1, 0x04, 0x92, 0x64, 0x94, 0x49, 0xd2, 0x59,
+  0x72, 0xb3, 0x82, 0x52, 0xbb, 0x81, 0xa3, 0xc8, 0x7b, 0x82, 0xa6, 0xdc,
+  0x95, 0x59, 0xf0, 0x48, 0x82, 0x2d, 0xcf, 0x94, 0x2e, 0x84, 0x56, 0x14,
+  0x0b, 0xca, 0xcc, 0xd9, 0xd7, 0xa3, 0x5a, 0xd2, 0xd5, 0xb2, 0xe2, 0x5a,
+  0x86, 0x3c, 0x3c, 0x76, 0x44, 0x28, 0x6a, 0x46, 0xbe, 0xf5, 0xf6, 0xf0,
+  0xdd, 0xfb, 0xc3, 0xd3, 0xe1, 0xaf, 0xe3, 0x77, 0x5e, 0xfb, 0x9a, 0x07,
+  0x93, 0xed, 0x64, 0x80, 0x3d, 0x8c, 0x9f, 0x27, 0x98, 0x12, 0x69, 0x35,
+  0xe4, 0xc6, 0x89, 0x27, 0x80, 0x71, 0xac, 0x51, 0x4c, 0x7c, 0x2f, 0x50,
+  0x95, 0xd6, 0x42, 0x76, 0xde, 0xd3, 0xf7, 0xe9, 0xf5, 0x9e, 0xb8, 0xbf,
+  0x2d, 0x36, 0x39, 0x92, 0x2c, 0xef, 0xc0, 0xd4, 0xd6, 0x27, 0xaa, 0xc5,
+  0x46, 0x05, 0x0a, 0x36, 0x95, 0x2c, 0x7f, 0x46, 0x58, 0x5f, 0x5d, 0x39,
+  0xc7, 0x7e, 0xd7, 0x44, 0x39, 0x3a, 0x5a, 0x0d, 0xf2, 0xfc, 0x3d, 0xa9,
+  0x1d, 0x3a, 0x21, 0x77, 0x4c, 0xe3, 0xcc, 0x0c, 0x9c, 0x20, 0xdd, 0xb7,
+  0x19, 0xf1, 0xd7, 0x62, 0x06, 0x5e, 0x4a, 0xdf, 0xe2, 0xb3, 0x4a, 0x69,
+  0x4a, 0x9e, 0x45, 0x4e, 0x9c, 0x0a, 0x0a, 0x05, 0x27, 0x6a, 0x7b, 0x4c,
+  0xd6, 0xf9, 0x21, 0x15, 0x30, 0x54, 0xf8, 0x71, 0x22, 0xde, 0xb8, 0x00,
+  0x4a, 0xcb, 0x45, 0x8e, 0x3c, 0xde, 0xc4, 0xa1, 0x0d, 0x37, 0x6a, 0xfc,
+  0x4a, 0xb4, 0xd6, 0xe4, 0x72, 0x39, 0x37, 0x27, 0xc3, 0x68, 0x64, 0x53,
+  0x63, 0x76, 0xac, 0xaf, 0xe1, 0xa9, 0x6b, 0x4d, 0x3b, 0x8c, 0xeb, 0x8a,
+  0x8a, 0xc2, 0x9c, 0x46, 0xcb, 0x95, 0xf6, 0xe3, 0x77, 0x54, 0x6f, 0x74,
+  0x72, 0x79, 0x6c, 0xa6, 0xef, 0xfd, 0xe5, 0x37, 0x3d, 0xf1, 0x5a, 0x74,
+  0xf3, 0x2e, 0x90, 0xc2, 0x43, 0xd5, 0x13, 0x6e, 0x2d, 0x36, 0xb3, 0x62,
+  0x71, 0x6f, 0xee, 0xe7, 0x88, 0x11, 0xe8, 0x7d, 0x74, 0xb8, 0x66, 0x95,
+  0x9e, 0x0d, 0x9f, 0x75, 0x57, 0x69, 0x35, 0xb7, 0x0e, 0xd8, 0x56, 0x46,
+  0xc1, 0x76, 0x17, 0x0e, 0x17, 0x72, 0x0d, 0xee, 0x38, 0xf6, 0x45, 0xb6,
+  0x30, 0x28, 0xb7, 0x2a, 0x65, 0xfd, 0x37, 0x8d, 0x29, 0x1f, 0x9c, 0x4c,
+  0x6e, 0xed, 0x7a, 0x10, 0xcd, 0xd8, 0x6c, 0x33, 0x51, 0x03, 0xa5, 0xd2,
+  0x73, 0x31, 0xa5, 0x2a, 0xf7, 0x0a, 0x44, 0x0c, 0x53, 0x2d, 0xd4, 0x23,
+  0x4f, 0x9c, 0xae, 0x66, 0x0b, 0x28, 0xa7, 0x63, 0x0b, 0x1e, 0xea, 0xaa,
+  0x55, 0xa9, 0xf2, 0xe5, 0x70, 0xa6, 0x71, 0xe6, 0x9f, 0x79, 0xce, 0x5c,
+  0x1e, 0x1e, 0x87, 0xcd, 0xda, 0xb0, 0x44, 0x9c, 0xac, 0x86, 0xe6, 0x55,
+  0x7c, 0x5e, 0x2f, 0xf9, 0xcf, 0xf8, 0x7e, 0x87, 0x72, 0x53, 0x95, 0x52,
+  0x75, 0x58, 0xde, 0xe0, 0xe8, 0x0a, 0x43, 0x43, 0x90, 0x39, 0x08, 0x95,
+  0x12, 0xf6, 0x1f, 0x2e, 0x78, 0xd0, 0x9e, 0x85, 0xbc, 0xbd, 0x5b, 0xa3,
+  0x6d, 0x99, 0x42, 0xb6, 0x37, 0xa4, 0xb5, 0x08, 0xe6, 0xc7, 0x4b, 0xad,
+  0x17, 0x66, 0x82, 0x58, 0x6e, 0x97, 0x77, 0x7a, 0x43, 0xd5, 0x00, 0xc2,
+  0x78, 0x72, 0x37, 0x8d, 0xa7, 0xbf, 0xf0, 0xf5, 0xcb, 0xca, 0x26, 0xd8,
+  0x48, 0x80, 0x30, 0x3a, 0xfa, 0xfe, 0xb5, 0xc7, 0xd6, 0x49, 0x82, 0x12,
+  0xa3, 0xc2, 0x7e, 0xe1, 0xfc, 0xf3, 0x62, 0x55, 0x2e, 0x70, 0xe6, 0xbc,
+  0xd1, 0x43, 0xb0, 0xb2, 0x4f, 0xb3, 0x6c, 0x61, 0x59, 0x98, 0x50, 0x62,
+  0x84, 0xdd, 0x8c, 0xe6, 0x98, 0x32, 0x07, 0x16, 0xf8, 0xa8, 0x57, 0xf4,
+  0x4e, 0x44, 0xc7, 0xd0, 0xaf, 0x51, 0x4d, 0xec, 0xc3, 0xc6, 0x7c, 0x4d,
+  0xf6, 0x3e, 0x7b, 0xf2, 0x79, 0x52, 0x53, 0x3a, 0x42, 0xee, 0x4f, 0x19,
+  0x13, 0x97, 0xac, 0xce, 0xf2, 0x16, 0x06, 0x50, 0x8d, 0xbb, 0x09, 0x80,
+  0x3f, 0xa9, 0x29, 0x63, 0x0a, 0x17, 0xa9, 0xc0, 0x69, 0xc3, 0xfc, 0x27,
+  0x33, 0x89, 0x32, 0x61, 0x92, 0xb1, 0x8a, 0x79, 0x62, 0x0f, 0xf7, 0xd0,
+  0xdb, 0xc0, 0x44, 0x75, 0x48, 0x54, 0xcc, 0x46, 0xa4, 0x5c, 0x1c, 0x5f,
+  0x5e, 0x98, 0x3f, 0x46, 0x97, 0x67, 0x17, 0x2b, 0x52, 0xf3, 0x1b, 0x4e,
+  0x0c, 0xa1, 0x49, 0x53, 0x7f, 0x9b, 0x14, 0xb8, 0xf4, 0x65, 0x8c, 0x7a,
+  0xfa, 0x39, 0x25, 0x34, 0x82, 0x39, 0xf2, 0xb2, 0x3d, 0xeb, 0x61, 0x6b,
+  0xa0, 0x57, 0xe6, 0x7e, 0x58, 0x3b, 0x30, 0x5e, 0xf3, 0xf5, 0x3b, 0x04,
+  0x03, 0xa6, 0xcd, 0x48, 0x23, 0xb6, 0x82, 0x1e, 0xbd, 0x35, 0xa6, 0x02,
+  0xd9, 0xa0, 0x8e, 0x71, 0x4b, 0xeb, 0xbe, 0xac, 0xa0, 0x64, 0xe0, 0xe0,
+  0x59, 0x6d, 0x6b, 0xb0, 0xa9, 0x29, 0xdc, 0x53, 0xf4, 0x79, 0x8f, 0x8a,
+  0xdb, 0x7e, 0xb4, 0x45, 0x48, 0x1e, 0xd8, 0xbf, 0x69, 0x6d, 0xfd, 0xe3,
+  0x74, 0xe9, 0x96, 0xf3, 0x8c, 0x6d, 0x11, 0x04, 0xd0, 0xac, 0x70, 0xe2,
+  0xbb, 0x85, 0x69, 0x49, 0x92, 0x58, 0x06, 0x86, 0x4d, 0x20, 0xa5, 0x55,
+  0xde, 0xec, 0xb2, 0xc1, 0xc8, 0xba, 0x18, 0x7d, 0x6b, 0xd6, 0x20, 0x35,
+  0x77, 0x53, 0x7b, 0xe5, 0x65, 0x96, 0xb6, 0x85, 0xf7, 0x5e, 0x57, 0xc8,
+  0x50, 0x1a, 0x40, 0x5c, 0xb2, 0xc0, 0xe3, 0xd6, 0x4a, 0x3f, 0x50, 0x9a,
+  0x7b, 0xe8, 0x12, 0x3e, 0x11, 0xff, 0xb9, 0x3c, 0xc5, 0x6b, 0x1b, 0x88,
+  0x02, 0x88, 0x81, 0x99, 0xdb, 0xdb, 0xb2, 0xe4, 0x0c, 0xc9, 0x5f, 0x76,
+  0x85, 0x6e, 0x4b, 0x67, 0x0b, 0xc5, 0xac, 0xaa, 0x66, 0x89, 0xe3, 0x76,
+  0xed, 0xe0, 0xc3, 0xd7, 0xf0, 0x06, 0xff, 0xe6, 0x59, 0x5b, 0xc6, 0x60,
+  0x96, 0x5c, 0xa5, 0x22, 0xc9, 0x0a, 0xb8, 0x9d, 0xa6, 0x76, 0xd2, 0x28,
+  0x89, 0x8f, 0xdc, 0xce, 0x7c, 0x69, 0x4d, 0x4b, 0x2e, 0x7a, 0x4c, 0x83,
+  0x8e, 0xa4, 0x7c, 0x43, 0x5f, 0x06, 0x12, 0x4b, 0x6f, 0x1a, 0x69, 0x4f,
+  0xfc, 0x28, 0x15, 0x6a, 0x35, 0x74, 0x46, 0x8a, 0xbc, 0x82, 0x60, 0xa0,
+  0xe7, 0xfe, 0xa2, 0xb1, 0x48, 0x83, 0x15, 0xe0, 0x64, 0x41, 0xc3, 0xf0,
+  0xfe, 0x56, 0x96, 0x86, 0x8c, 0x35, 0x1a, 0xd1, 0x2d, 0x24, 0x87, 0x42,
+  0x4b, 0x4f, 0xb5, 0x92, 0x13, 0x54, 0x0d, 0x1c, 0xae, 0xc1, 0x7c, 0xfa,
+  0xb9, 0x0c, 0xad, 0x2d, 0xb9, 0xd7, 0xd2, 0xfa, 0xda, 0xa3, 0x5b, 0x89,
+  0x93, 0x7d, 0xc3, 0xe5, 0x32, 0x09, 0x53, 0x98, 0xb5, 0xe5, 0x26, 0x57,
+  0x02, 0x34, 0x07, 0x7e, 0x87, 0x60, 0x39, 0x19, 0xa8, 0xab, 0xcc, 0xf5,
+  0xe8, 0xa8, 0x0f, 0x56, 0x54, 0x3a, 0x81, 0x0a, 0xc6, 0x8e, 0x37, 0xd3,
+  0x78, 0x1b, 0xe7, 0xee, 0xb1, 0x5d, 0xa3, 0xe8, 0xb4, 0x4b, 0x54, 0x18,
+  0xc6, 0x22, 0xd6, 0x4c, 0xcc, 0x89, 0x98, 0x4d, 0x5b, 0x1d, 0xd3, 0xda,
+  0x06, 0xca, 0x83, 0xe8, 0xca, 0x99, 0x23, 0x4a, 0xbe, 0x02, 0x4f, 0xa8,
+  0x4c, 0x94, 0x48, 0x48, 0x44, 0x11, 0x78, 0xf6, 0xc3, 0xb5, 0x4e, 0x26,
+  0x2c, 0x87, 0xf6, 0xd7, 0x8c, 0xa1, 0xbe, 0x5c, 0x84, 0xf7, 0xbc, 0xc3,
+  0x6a, 0xda, 0x16, 0xb9, 0x66, 0x57, 0xe3, 0x77, 0xb1, 0x29, 0xcd, 0xdd,
+  0xf6, 0xd2, 0x01, 0x8e, 0x5d, 0x92, 0x79, 0xf7, 0x34, 0x42, 0x13, 0x08,
+  0x6e, 0xf7, 0x55, 0xb8, 0x79, 0xfd, 0xf5, 0x90, 0x24, 0xab, 0x51, 0x2f,
+  0x76, 0x7b, 0xed, 0x82, 0x6e, 0x92, 0x20, 0xab, 0x6f, 0x9b, 0x79, 0xf1,
+  0xfa, 0x1b, 0x9e, 0x19, 0x75, 0x4c, 0x7a, 0x25, 0xc1, 0xb7, 0xa8, 0xc8,
+  0x13, 0xd7, 0x94, 0xde, 0x58, 0x39, 0xf4, 0xd5, 0xbd, 0xea, 0xed, 0xbd,
+  0xd8, 0x1f, 0xee, 0x3d, 0xff, 0x7c, 0xb8, 0xb7, 0x3b, 0xdc, 0xeb, 0x75,
+  0xaa, 0xc4, 0x4b, 0xc5, 0x06, 0xaf, 0x9d, 0x48, 0xd9, 0x8d, 0x64, 0x35,
+  0x9d, 0x0b, 0x3e, 0x30, 0xbf, 0x1f, 0xd2, 0x63, 0x43, 0xe6, 0xff, 0x0c,
+  0x3e, 0x31, 0x37, 0x1a, 0x0d, 0xd5, 0x0c, 0xec, 0xc6, 0xc6, 0xf5, 0x22,
+  0x55, 0x16, 0x9f, 0x45, 0x4e, 0x9b, 0x48, 0x29, 0x16, 0xbc, 0x59, 0x52,
+  0x3e, 0x71, 0xcb, 0xc5, 0x88, 0xb3, 0x19, 0xef, 0x90, 0x0a, 0xf4, 0x89,
+  0x28, 0x91, 0x4e, 0xa6, 0xdb, 0xef, 0x07, 0x42, 0xf3, 0x17, 0xdb, 0x7c,
+  0x94, 0x32, 0x64, 0x8f, 0x5c, 0x37, 0x55, 0x0c, 0x29, 0x85, 0xdd, 0xac,
+  0x34, 0x49, 0x32, 0xe2, 0x07, 0x5b, 0x18, 0x97, 0x2e, 0x41, 0x30, 0x72,
+  0xed, 0x1c, 0x5a, 0xc6, 0x07, 0x56, 0xa3, 0x65, 0x8b, 0x54, 0xed, 0xa4,
+  0x0f, 0xda, 0xb4, 0x3e, 0x16, 0xd1, 0xda, 0x1c, 0xbd, 0xf3, 0xa7, 0x3f,
+  0x39, 0x79, 0xc4, 0xd5, 0x8a, 0x40, 0x3b, 0xf8, 0xac, 0x0f, 0xec, 0x02,
+  0xfc, 0x8c, 0x4c, 0x0a, 0x97, 0xf4, 0x0e, 0x7e, 0x84, 0x47, 0xf2, 0xe7,
+  0xc1, 0x8f, 0xe6, 0xdf, 0x3f, 0xf7, 0x3c, 0x60, 0x25, 0x67, 0x83, 0x2a,
+  0x90, 0x6f, 0xa3, 0x7d, 0x94, 0xfb, 0x49, 0xbb, 0xae, 0x05, 0x34, 0x83,
+  0xcb, 0xa3, 0x73, 0x3e, 0x8c, 0x0c, 0xc8, 0xe3, 0xdd, 0x4c, 0x72, 0x08,
+  0x6a, 0x3d, 0x89, 0x70, 0x10, 0x43, 0x98, 0x9d, 0x62, 0xe7, 0x92, 0xd9,
+  0x81, 0xdd, 0x4b, 0x7d, 0x75, 0xbd, 0x92, 0xce, 0xc8, 0x65, 0xbc, 0xcd,
+  0x96, 0x34, 0x3d, 0x21, 0x21, 0xc8, 0x20, 0x6e, 0x73, 0xaa, 0x0f, 0xad,
+  0x3a, 0x2d, 0x3f, 0xd3, 0xe6, 0x28, 0xad, 0xb4, 0x86, 0x4b, 0xf6, 0xce,
+  0x74, 0xad, 0x2f, 0x1c, 0x28, 0xe4, 0xeb, 0xcd, 0x6c, 0x0d, 0x78, 0x33,
+  0x1f, 0x55, 0x96, 0xaa, 0xd0, 0xad, 0xf2, 0xfa, 0x23, 0x8d, 0x51, 0x50,
+  0x24, 0xd4, 0xae, 0x3b, 0xf1, 0x1c, 0x58, 0xa8, 0x1a, 0x9b, 0xb6, 0x4a,
+  0xb9, 0x02, 0x0a, 0x58, 0xf4, 0xa6, 0xd8, 0x5d, 0x12, 0xba, 0xfe, 0xca,
+  0x73, 0x10, 0xcd, 0xf7, 0x94, 0xc7, 0xaa, 0xec, 0x11, 0x69, 0xc8, 0x1c,
+  0x29, 0x48, 0xce, 0x8d, 0xba, 0x6b, 0xf7, 0x88, 0x97, 0x12, 0x68, 0xde,
+  0xc1, 0xae, 0xa1, 0x4b, 0x70, 0xbb, 0x7b, 0x79, 0x11, 0xab, 0x26, 0x48,
+  0x7d, 0x91, 0x9a, 0x68, 0x13, 0x6b, 0x13, 0x3a, 0xb4, 0x84, 0x04, 0xa9,
+  0x4c, 0x37, 0x40, 0x55, 0x04, 0x90, 0x21, 0x1f, 0x11, 0x42, 0x1b, 0xa8,
+  0x6a, 0xb7, 0x11, 0x35, 0x19, 0x70, 0xe2, 0x9c, 0x4e, 0x4a, 0x77, 0x94,
+  0x59, 0x8b, 0x5a, 0x27, 0x9d, 0xfe, 0x34, 0x42, 0x9b, 0x5d, 0x3a, 0xd3,
+  0xf2, 0xae, 0x40, 0x99, 0x95, 0x24, 0xb4, 0x6b, 0xd0, 0xfd, 0x79, 0x8c,
+  0xa7, 0xc5, 0xbb, 0x5b, 0xf7, 0x77, 0x43, 0x8f, 0x0a, 0x15, 0x8f, 0xc1,
+  0x24, 0x0f, 0xf2, 0xc5, 0xc3, 0x13, 0x48, 0xcb, 0xa6, 0xd4, 0x33, 0x2d,
+  0x11, 0xe3, 0x4a, 0x3f, 0x2f, 0xaf, 0xaf, 0x91, 0x48, 0x12, 0x74, 0x91,
+  0x11, 0x85, 0x02, 0x80, 0x10, 0x5e, 0x3b, 0x23, 0xcf, 0xd1, 0x73, 0x9d,
+  0x0d, 0x07, 0x5b, 0x14, 0xc9, 0x53, 0x3b, 0x2e, 0x98, 0x95, 0x90, 0x61,
+  0xe0, 0x65, 0xe4, 0x9c, 0xfb, 0xb0, 0xac, 0x2a, 0x1b, 0x58, 0x66, 0xed,
+  0xae, 0x50, 0x0c, 0xe2, 0x18, 0x2a, 0x1c, 0xe1, 0x74, 0x58, 0x2d, 0x06,
+  0xd7, 0x3a, 0x09, 0xc9, 0xd5, 0x66, 0x13, 0x2a, 0xc9, 0xc5, 0xca, 0xe9,
+  0xe3, 0x9c, 0xff, 0x5b, 0xd9, 0x84, 0xca, 0x56, 0xce, 0x47, 0x58, 0x37,
+  0x9e, 0x26, 0x64, 0x9d, 0x83, 0xc0, 0x49, 0x45, 0x5f, 0x6d, 0x7a, 0x3a,
+  0xdc, 0x0f, 0x96, 0xb6, 0x9e, 0x0d, 0x26, 0x93, 0xc9, 0x00, 0x0a, 0xc1,
+  0x4b, 0xd6, 0x52, 0x76, 0x44, 0x4b, 0x58, 0xe1, 0x3c, 0x00, 0x0a, 0x18,
+  0xc5, 0x15, 0x8e, 0x8e, 0x44, 0xa1, 0xb9, 0xbc, 0xe9, 0xa8, 0x16, 0x36,
+  0xd9, 0x51, 0x54, 0xab, 0x18, 0xbf, 0x50, 0x7d, 0xb3, 0x6c, 0xa6, 0xa8,
+  0xab, 0x42, 0x42, 0x43, 0xa5, 0xb0, 0x45, 0xb1, 0x76, 0x28, 0x29, 0x4a,
+  0xb3, 0x1c, 0x8c, 0x10, 0xd0, 0xb6, 0x03, 0xcc, 0xdf, 0x82, 0x89, 0x30,
+  0xf1, 0xa2, 0xb4, 0xdd, 0xad, 0xda, 0xc0, 0x5d, 0xf5, 0xb3, 0x46, 0xb5,
+  0x83, 0x75, 0xc4, 0xbb, 0x65, 0x5b, 0xc1, 0x67, 0xd3, 0xbc, 0xd1, 0x9a,
+  0xa8, 0xfc, 0xad, 0x6e, 0xdb, 0x0f, 0xac, 0x87, 0x4c, 0x75, 0x7b, 0x49,
+  0x9e, 0xaf, 0x5c, 0x92, 0xe8, 0xe4, 0x93, 0x79, 0x45, 0xd3, 0xbe, 0x75,
+  0x04, 0x3e, 0x8b, 0x23, 0x39, 0x12, 0x47, 0x37, 0x14, 0x70, 0x9a, 0xd1,
+  0xe2, 0x98, 0x2e, 0xd7, 0x2c, 0x06, 0x94, 0x2e, 0x7e, 0x74, 0xba, 0x73,
+  0x79, 0xda, 0x4d, 0xf3, 0xa2, 0x5a, 0x22, 0x95, 0x96, 0xe3, 0x69, 0xf9,
+  0x3e, 0x79, 0x8a, 0xfc, 0x72, 0xc4, 0x76, 0x87, 0xf3, 0x57, 0xa2, 0x69,
+  0x42, 0xcb, 0x42, 0x41, 0x3d, 0xf6, 0x1a, 0x2f, 0xb2, 0x02, 0xf8, 0x79,
+  0x25, 0xa9, 0x66, 0xb8, 0x72, 0x9d, 0xbc, 0x3b, 0xbc, 0x24, 0xa0, 0x4e,
+  0x23, 0x79, 0x31, 0xe4, 0x0b, 0xea, 0x36, 0xa7, 0x94, 0x24, 0x96, 0xc4,
+  0x21, 0x9d, 0x38, 0x5e, 0x4c, 0xd5, 0xda, 0x79, 0xf9, 0x6a, 0xdd, 0x78,
+  0xeb, 0xa6, 0xdf, 0x4c, 0xa9, 0xdc, 0x0f, 0xdd, 0x3d, 0xdf, 0x5d, 0x8d,
+  0xbd, 0xe8, 0x6a, 0xf0, 0x04, 0xc4, 0x8f, 0xc3, 0x85, 0x08, 0x73, 0x9d,
+  0x68, 0x57, 0x4d, 0x16, 0xdd, 0x9f, 0x95, 0xd7, 0x39, 0xb9, 0x04, 0xb1,
+  0x5e, 0xd8, 0xd7, 0x5a, 0x50, 0xaa, 0x2b, 0x83, 0x79, 0x76, 0x6a, 0xc6,
+  0x14, 0xb5, 0x11, 0x62, 0x7c, 0x44, 0xe8, 0xa6, 0xb0, 0x73, 0xaa, 0x24,
+  0x48, 0x16, 0x24, 0x1a, 0x66, 0xef, 0x83, 0x91, 0x20, 0x9f, 0x18, 0x5b,
+  0x61, 0x72, 0x3f, 0x14, 0x1c, 0x72, 0xdd, 0x0e, 0x8e, 0xe6, 0x2d, 0x06,
+  0x04, 0x75, 0x95, 0xd6, 0xcb, 0x45, 0x14, 0xce, 0x24, 0x23, 0x5c, 0xeb,
+  0x90, 0x7f, 0xde, 0xba, 0x3e, 0xbe, 0x26, 0xd3, 0xec, 0x3a, 0xb8, 0x76,
+  0x2d, 0x7d, 0x7a, 0x24, 0xe5, 0x1c, 0xda, 0x2a, 0xca, 0x3f, 0x49, 0xb9,
+  0x14, 0x57, 0x4c, 0x86, 0x4d, 0xad, 0xc1, 0xb4, 0x1f, 0xa5, 0x65, 0xeb,
+  0x77, 0x49, 0x98, 0x39, 0x21, 0xbe, 0xcd, 0x86, 0xe4, 0x65, 0xd4, 0xe5,
+  0x16, 0x2c, 0xd9, 0x69, 0xee, 0xeb, 0x63, 0x47, 0xa1, 0xe7, 0x45, 0xcf,
+  0x95, 0x93, 0xd1, 0xd1, 0xeb, 0x81, 0xd9, 0x92, 0x02, 0x4e, 0x77, 0x54,
+  0x3f, 0xe2, 0x6e, 0x85, 0xb5, 0xc3, 0xfa, 0xec, 0xa5, 0xe3, 0xe5, 0xe2,
+  0xf3, 0xa1, 0xcc, 0x85, 0x2a, 0xb2, 0xa8, 0x46, 0xaa, 0x30, 0x92, 0x6d,
+  0xfe, 0xe7, 0xa6, 0x23, 0x8a, 0x1d, 0xae, 0x4c, 0x51, 0xcf, 0x8b, 0x76,
+  0xe5, 0x12, 0x9d, 0x9f, 0x13, 0xcc, 0x04, 0x85, 0x9b, 0xfa, 0xae, 0xd3,
+  0xf6, 0xdb, 0x71, 0x8a, 0xa9, 0x07, 0x7a, 0xf4, 0xcd, 0xf1, 0xe1, 0x6b,
+  0x0b, 0xf5, 0xff, 0x95, 0x4c, 0xca, 0x70, 0x8f, 0x78, 0x05, 0xd3, 0x25,
+  0x2b, 0x60, 0x85, 0x8b, 0xc4, 0xba, 0xc1, 0xc6, 0x19, 0xd3, 0x01, 0x2e,
+  0xd5, 0x67, 0x82, 0xf5, 0xd1, 0xad, 0x8a, 0xdd, 0x62, 0x54, 0x36, 0xaa,
+  0x4e, 0x4a, 0x67, 0x64, 0x25, 0x2b, 0xde, 0x4a, 0x27, 0x89, 0xe7, 0x70,
+  0x56, 0xe7, 0x35, 0x29, 0xcd, 0x8c, 0x15, 0xf3, 0xb6, 0xf2, 0x35, 0xb6,
+  0xf2, 0xac, 0x1c, 0x97, 0x57, 0x57, 0x6b, 0xee, 0x77, 0xe6, 0x26, 0x00,
+  0xa6, 0x8b, 0xb7, 0x4c, 0x8f, 0xa6, 0x91, 0xde, 0x1b, 0x33, 0x77, 0x45,
+  0x65, 0x0e, 0x5b, 0x6f, 0xc8, 0x47, 0x40, 0x4a, 0x7a, 0xc5, 0x0a, 0x5c,
+  0xdb, 0x60, 0x82, 0x1a, 0x10, 0x6a, 0xef, 0x01, 0x1a, 0xcd, 0x9e, 0x19,
+  0x8e, 0x66, 0x7b, 0x24, 0x6f, 0x75, 0xf2, 0xdf, 0xff, 0xf8, 0xf1, 0xe7,
+  0x08, 0xcd, 0x1d, 0xf9, 0xfe, 0x24, 0x13, 0xc6, 0x3c, 0xad, 0xc4, 0x49,
+  0x96, 0x8a, 0xcc, 0x55, 0xd6, 0x23, 0x0d, 0x2c, 0x9b, 0x5d, 0x49, 0xb2,
+  0x51, 0x2c, 0x9e, 0x22, 0xb5, 0x2d, 0xf4, 0x83, 0x60, 0xd9, 0x2e, 0x1b,
+  0x45, 0x22, 0x13, 0x71, 0x14, 0xd8, 0x62, 0x1d, 0x88, 0xc7, 0xd2, 0xca,
+  0xf0, 0x4a, 0x04, 0xb9, 0x73, 0x8e, 0xd2, 0xd5, 0xa2, 0xba, 0xec, 0x06,
+  0x3c, 0xb1, 0x5e, 0x4f, 0x6f, 0x25, 0x6c, 0x34, 0x75, 0x55, 0x4e, 0x66,
+  0x42, 0x95, 0xa7, 0xb7, 0x93, 0x37, 0xa8, 0x41, 0xec, 0x25, 0x44, 0x62,
+  0x0b, 0xfe, 0x1b, 0x8e, 0xbc, 0xcd, 0x2e, 0x15, 0x0c, 0x5e, 0xb4, 0x1a,
+  0x89, 0x18, 0x88, 0xd8, 0xfc, 0xec, 0x64, 0xc0, 0xd2, 0x70, 0x01, 0xc0,
+  0x12, 0x70, 0x25, 0xad, 0x8d, 0xa0, 0xae, 0x77, 0x49, 0x8e, 0x21, 0x5c,
+  0x44, 0x10, 0x87, 0x62, 0x1c, 0xf5, 0xd0, 0x2b, 0x1e, 0x51, 0xfa, 0xd1,
+  0x2d, 0xea, 0xb4, 0xd6, 0xb1, 0x97, 0x50, 0x06, 0x17, 0xfd, 0xaa, 0xe3,
+  0x7c, 0xe3, 0x04, 0x22, 0x27, 0xd0, 0x0b, 0xc0, 0xfb, 0x64, 0x44, 0x73,
+  0xd1, 0x15, 0xb9, 0x86, 0x91, 0x34, 0x44, 0xe3, 0xf5, 0x26, 0xce, 0xab,
+  0x78, 0x99, 0xbc, 0xe4, 0x3f, 0x57, 0xc1, 0x04, 0x8f, 0x41, 0x3b, 0x2f,
+  0xcf, 0x9a, 0xb1, 0x6a, 0x11, 0x12, 0xd9, 0x6e, 0x2a, 0x02, 0xa1, 0x8b,
+  0x0b, 0xd0, 0x37, 0x26, 0x4a, 0x3d, 0xa0, 0xd5, 0x10, 0xe0, 0x12, 0xbf,
+  0x8c, 0x00, 0xe8, 0x64, 0xb9, 0x8e, 0x25, 0x0a, 0x30, 0x83, 0xe8, 0x5e,
+  0x96, 0x6a, 0x98, 0xc4, 0x58, 0x5a, 0x15, 0x96, 0x80, 0x73, 0xc3, 0xe7,
+  0x9a, 0x8a, 0x80, 0xa6, 0x66, 0xbe, 0xea, 0xc6, 0x28, 0x63, 0xda, 0x5f,
+  0x7a, 0xec, 0x46, 0xf0, 0x4d, 0xd0, 0xea, 0x99, 0x9d, 0xab, 0x8e, 0xfa,
+  0xa1, 0x04, 0xa3, 0x25, 0xfe, 0x66, 0x50, 0xbd, 0xb3, 0x85, 0xcd, 0xf2,
+  0x7c, 0x49, 0xa2, 0x85, 0xab, 0xa9, 0x83, 0x8e, 0xa9, 0xe2, 0x94, 0xe7,
+  0xc8, 0xb9, 0x95, 0xaf, 0xfb, 0x7e, 0x8c, 0xee, 0xfd, 0xe1, 0x7f, 0xa6,
+  0xad, 0x15, 0x85, 0x82, 0xcb, 0xcc, 0x1d, 0xa4, 0x1b, 0xd2, 0x20, 0x9a,
+  0x2a, 0x9f, 0x7c, 0xcc, 0x01, 0x67, 0x5a, 0x42, 0xb0, 0xa4, 0x85, 0xda,
+  0x31, 0xdc, 0x4d, 0xc7, 0x77, 0x33, 0x25, 0x37, 0xdc, 0x5f, 0x56, 0xb2,
+  0x83, 0x82, 0x44, 0x83, 0x14, 0x58, 0x4a, 0xa4, 0xd7, 0xfe, 0xcc, 0x80,
+  0xd1, 0xb1, 0xe7, 0x44, 0x45, 0x06, 0xd5, 0x3d, 0x84, 0xd4, 0x8a, 0x50,
+  0x7b, 0x64, 0x28, 0x5a, 0x00, 0x03, 0x54, 0xcb, 0xe1, 0x50, 0x99, 0x2d,
+  0x08, 0xe9, 0xa1, 0xd1, 0x8a, 0xe6, 0xe5, 0xad, 0xa3, 0xe0, 0x40, 0xbd,
+  0x57, 0x9e, 0x1e, 0x23, 0x68, 0xae, 0xf3, 0xdb, 0x28, 0xad, 0x63, 0x6a,
+  0x3b, 0xc6, 0x09, 0x07, 0xda, 0x0d, 0xc7, 0x0c, 0xae, 0x71, 0x16, 0x76,
+  0x95, 0x50, 0x36, 0xae, 0xcc, 0x6c, 0x70, 0x76, 0x67, 0x24, 0x3b, 0x51,
+  0x6d, 0xea, 0xc0, 0x6c, 0xfc, 0xa4, 0xf7, 0x4d, 0x59, 0x37, 0x07, 0x3d,
+  0x4b, 0x2c, 0x03, 0x2b, 0x9f, 0x79, 0x5b, 0xfc, 0x9d, 0x23, 0x65, 0x17,
+  0x06, 0x51, 0x2a, 0x54, 0xb9, 0x43, 0x8c, 0x48, 0x93, 0xa7, 0x15, 0xad,
+  0xc2, 0xa9, 0x49, 0x2e, 0x8f, 0x9e, 0xb6, 0xfc, 0x3c, 0x97, 0x3e, 0xd4,
+  0xcb, 0xc9, 0x4d, 0x08, 0x60, 0xa3, 0x2e, 0xfd, 0x30, 0x38, 0xc2, 0xc7,
+  0x07, 0xdf, 0xa0, 0xb9, 0x3f, 0xf7, 0xac, 0xfb, 0xa1, 0xfb, 0xab, 0x83,
+  0xb0, 0xdc, 0x9b, 0x73, 0xcb, 0xf3, 0x15, 0x68, 0xab, 0x8b, 0x22, 0xba,
+  0x29, 0x1d, 0x94, 0x2a, 0x56, 0xd3, 0xe9, 0x8e, 0x2e, 0xb8, 0xf0, 0x11,
+  0x16, 0xcd, 0x2a, 0xde, 0xfc, 0x45, 0x45, 0x51, 0x2d, 0x2a, 0x93, 0x39,
+  0x28, 0xaf, 0x06, 0xa8, 0x8d, 0x33, 0x4f, 0xab, 0x8f, 0x14, 0x21, 0xf7,
+  0x4e, 0x1d, 0x60, 0xf7, 0xc8, 0x42, 0x9d, 0x4e, 0x63, 0x97, 0x04, 0x70,
+  0xa1, 0x88, 0xae, 0xca, 0xc6, 0x97, 0x0e, 0xc9, 0x42, 0x1e, 0x88, 0x8f,
+  0x08, 0xaf, 0x5b, 0xda, 0x4d, 0x4a, 0xe8, 0x5a, 0xcb, 0xd2, 0xd9, 0xe7,
+  0x7b, 0x04, 0xa3, 0x86, 0x36, 0x31, 0x67, 0xc7, 0x02, 0xbc, 0x21, 0xcb,
+  0x05, 0x74, 0x5e, 0x4a, 0x65, 0x5f, 0x69, 0x09, 0x20, 0x0f, 0xf5, 0x50,
+  0x69, 0xfc, 0xa4, 0xa4, 0x3d, 0x0c, 0x83, 0x0c, 0x55, 0x52, 0xa5, 0x96,
+  0xbc, 0xd0, 0xd4, 0x86, 0xed, 0x90, 0xe3, 0x4e, 0x00, 0xe9, 0x9f, 0x0d,
+  0x9f, 0x7c, 0x46, 0x55, 0xc8, 0x2d, 0xeb, 0x90, 0xf2, 0xeb, 0x39, 0x99,
+  0x89, 0xa5, 0xf4, 0xf6, 0x57, 0x77, 0x57, 0xd1, 0x49, 0xd3, 0x02, 0x52,
+  0x62, 0x58, 0xa2, 0x89, 0x95, 0x40, 0xd6, 0x15, 0xc0, 0x2f, 0x6c, 0xa5,
+  0x37, 0xa4, 0x52, 0x0d, 0xde, 0x19, 0x39, 0x77, 0x90, 0xfc, 0x57, 0x99,
+  0xf5, 0x00, 0x20, 0xed, 0xe0, 0x47, 0x83, 0x14, 0xc3, 0xc3, 0x8b, 0x77,
+  0x27, 0xef, 0xbe, 0x3e, 0xb0, 0xe7, 0x1e, 0x85, 0xaa, 0x14, 0x49, 0xec,
+  0xc7, 0xbc, 0x5c, 0xc1, 0x53, 0x3c, 0x82, 0x5c, 0xff, 0xd9, 0x6c, 0x05,
+  0x75, 0x08, 0x1c, 0xcf, 0x19, 0x67, 0xfa, 0xc1, 0xc0, 0x6c, 0xd7, 0x10,
+  0xb3, 0x15, 0x11, 0x04, 0x04, 0x88, 0x3b, 0xa4, 0x29, 0x03, 0xcd, 0x80,
+  0x1d, 0xbc, 0xad, 0x22, 0x7c, 0x16, 0x58, 0x5e, 0x18, 0x45, 0x23, 0xb5,
+  0x8a, 0xaa, 0x4a, 0x96, 0x8c, 0xb3, 0x93, 0x20, 0x29, 0xc2, 0x10, 0x20,
+  0x90, 0x61, 0xf0, 0xb6, 0xd7, 0x2c, 0x3f, 0x41, 0xf2, 0xef, 0x57, 0xa3,
+  0x46, 0x75, 0x29, 0x52, 0x26, 0x73, 0x68, 0x83, 0x76, 0x56, 0x56, 0xe8,
+  0x2d, 0xae, 0xb4, 0xb1, 0x56, 0x8e, 0x63, 0x6d, 0x5c, 0x7f, 0xea, 0xca,
+  0x2f, 0xd8, 0xf1, 0x3f, 0x1a, 0x76, 0xe6, 0xd5, 0x17, 0xe4, 0x7a, 0xd7,
+  0x30, 0x95, 0xbd, 0x93, 0xbc, 0x53, 0x41, 0xc2, 0xc6, 0x00, 0x12, 0xf4,
+  0x96, 0x5e, 0xa3, 0xee, 0xf2, 0xbf, 0xe1, 0xcb, 0x7f, 0xb6, 0x08, 0x52,
+  0x17, 0x09, 0x11, 0x9d, 0xd0, 0x6f, 0x54, 0xeb, 0x26, 0x0f, 0x23, 0x97,
+  0xe0, 0x15, 0xcc, 0x4c, 0xbb, 0x56, 0x96, 0xb2, 0x38, 0xb3, 0xac, 0x0b,
+  0xaf, 0x19, 0xca, 0x2f, 0xca, 0x38, 0xbf, 0x0d, 0xde, 0x30, 0x6b, 0xa5,
+  0xd1, 0x1c, 0x2f, 0x96, 0xe3, 0xf9, 0xf4, 0x59, 0xf2, 0xd2, 0xfc, 0x27,
+  0xd0, 0x3d, 0x80, 0xef, 0x19, 0x1d, 0x69, 0x7d, 0xcf, 0x54, 0xb3, 0x2c,
+  0x44, 0xd1, 0xa5, 0xbf, 0x3e, 0xd9, 0x37, 0x3d, 0xfd, 0x94, 0x6a, 0x7e,
+  0xb0, 0x51, 0x91, 0xae, 0xf3, 0xa6, 0x8e, 0x96, 0xdf, 0xd5, 0xf4, 0x15,
+  0x8f, 0xeb, 0x98, 0x56, 0x7c, 0x6f, 0xff, 0xf3, 0x64, 0x9c, 0x37, 0xc9,
+  0xdb, 0xd7, 0xcf, 0x12, 0xa3, 0xa8, 0x4f, 0x3e, 0xd6, 0xcb, 0xb9, 0x4a,
+  0x29, 0xa9, 0x24, 0x45, 0xfd, 0xdc, 0xec, 0x2a, 0x0b, 0xa6, 0xe3, 0xb3,
+  0x7c, 0x92, 0x7c, 0xcc, 0xee, 0x7d, 0x80, 0x0f, 0x55, 0xb1, 0xa8, 0x6d,
+  0x4d, 0x04, 0x71, 0x00, 0x3a, 0x69, 0x8a, 0xd8, 0x0e, 0xc7, 0x3f, 0x23,
+  0xfe, 0x25, 0x33, 0x07, 0xe6, 0xe3, 0x35, 0x97, 0x9e, 0x58, 0x6b, 0x55,
+  0x7f, 0xd6, 0x72, 0x4c, 0xec, 0x62, 0x29, 0xcd, 0xf9, 0xde, 0x1b, 0xee,
+  0xae, 0x4a, 0xf3, 0x40, 0x28, 0xb1, 0x95, 0xff, 0x05, 0xed, 0x58, 0xaa,
+  0xe3, 0x24, 0xe6, 0x4d, 0x5f, 0x37, 0xe1, 0x78, 0x47, 0xac, 0xc0, 0xb2,
+  0xd5, 0x0f, 0xd8, 0x20, 0xa2, 0x12, 0x4e, 0x7e, 0x43, 0x8f, 0x05, 0x44,
+  0x4a, 0x77, 0xf7, 0xc4, 0x0d, 0x43, 0xff, 0x6a, 0x39, 0xbe, 0xe4, 0xd7,
+  0x2b, 0x8a, 0xc3, 0x04, 0xb9, 0x6c, 0x9d, 0xb1, 0xec, 0xad, 0xed, 0x86,
+  0xd7, 0x0f, 0xcc, 0x9d, 0x9b, 0x3c, 0x4b, 0x24, 0xc4, 0xfd, 0xd1, 0x39,
+  0x0f, 0xfd, 0xd2, 0x21, 0xb9, 0x0f, 0xde, 0x30, 0x22, 0x3f, 0x2f, 0xab,
+  0x01, 0xa9, 0x49, 0xb3, 0x6c, 0x1a, 0x5c, 0x5b, 0xb1, 0xc5, 0xc0, 0x39,
+  0x46, 0x61, 0x40, 0xf6, 0x76, 0xc3, 0xab, 0x43, 0x6e, 0x23, 0x0c, 0xc9,
+  0x8a, 0xd0, 0x18, 0x7e, 0x8f, 0x9e, 0xd8, 0xd9, 0xb7, 0x5a, 0x11, 0xfe,
+  0x49, 0x53, 0xfa, 0x7e, 0x71, 0x5d, 0xa5, 0x53, 0x54, 0x66, 0xf3, 0x19,
+  0x0c, 0x12, 0x74, 0x2e, 0x49, 0x56, 0xf5, 0xce, 0x23, 0x41, 0x12, 0xff,
+  0x8f, 0xa5, 0x5f, 0xd0, 0x4f, 0xd5, 0x94, 0x8f, 0xe0, 0x28, 0x4a, 0xe9,
+  0xa7, 0x8e, 0x06, 0x2a, 0x96, 0x78, 0x5f, 0x37, 0x02, 0x1a, 0x92, 0x06,
+  0x5a, 0xa0, 0x3a, 0x62, 0x6a, 0xe1, 0xcb, 0xc5, 0xb2, 0xc5, 0x4e, 0x1d,
+  0x5d, 0x69, 0x90, 0x03, 0xca, 0x8b, 0x2b, 0x06, 0x07, 0xcd, 0xd0, 0xea,
+  0xdc, 0xbd, 0x15, 0xcb, 0xf1, 0x68, 0x36, 0x87, 0xae, 0x6c, 0xef, 0x72,
+  0x3f, 0xf1, 0x68, 0x86, 0x8f, 0xdb, 0xdc, 0xbb, 0xfd, 0x68, 0xef, 0x68,
+  0xbb, 0xf9, 0x9b, 0xbf, 0x95, 0xd6, 0xf7, 0x22, 0xb2, 0xb9, 0x7e, 0xd5,
+  0x59, 0xd8, 0x5f, 0xe7, 0x06, 0x35, 0x8a, 0x6d, 0x3a, 0x5b, 0x98, 0x5b,
+  0x54, 0xbe, 0xf0, 0xa8, 0xf9, 0xe9, 0x2e, 0x73, 0x8c, 0x1b, 0xeb, 0x17,
+  0xcc, 0x4f, 0x77, 0x6e, 0x7c, 0x59, 0xe6, 0xcf, 0x4f, 0x77, 0x2d, 0xd7,
+  0x32, 0x6d, 0x31, 0xf9, 0x80, 0x16, 0xf8, 0x18, 0xcc, 0xb2, 0xe2, 0x3a,
+  0xc8, 0xa0, 0xe6, 0x22, 0x7e, 0x9a, 0xe4, 0x6d, 0x0e, 0x06, 0xfd, 0xb5,
+  0x9f, 0x9c, 0x30, 0x6f, 0x01, 0x17, 0x8b, 0xe6, 0xd7, 0x4f, 0xf1, 0xba,
+  0x2d, 0x1a, 0x2d, 0x8e, 0xa8, 0x48, 0x6a, 0x43, 0x3e, 0x59, 0x72, 0xf9,
+  0xad, 0x25, 0xd7, 0xfb, 0x23, 0x1d, 0x4e, 0xfd, 0x0a, 0xd5, 0xb2, 0xc0,
+  0x85, 0x75, 0xb8, 0xa0, 0xac, 0x29, 0x23, 0xa3, 0x3e, 0xb9, 0x12, 0xc5,
+  0x11, 0x37, 0x9c, 0x94, 0x0c, 0x47, 0x61, 0x63, 0x06, 0xed, 0x74, 0xbb,
+  0x83, 0xd6, 0x39, 0x63, 0x6d, 0x46, 0x30, 0xb5, 0x8a, 0x95, 0x98, 0x7d,
+  0x63, 0x4d, 0x5d, 0x07, 0x14, 0x34, 0xe3, 0xfb, 0x26, 0x82, 0x20, 0xa5,
+  0x51, 0xd3, 0x2c, 0x6c, 0xd5, 0x12, 0xa2, 0x7e, 0xfa, 0x7c, 0xb8, 0xbb,
+  0xdd, 0xa7, 0xca, 0x05, 0x0b, 0xcc, 0x00, 0x41, 0xfc, 0xec, 0x5d, 0x4f,
+  0x08, 0xd7, 0xfc, 0x9a, 0xec, 0x0a, 0xd8, 0x60, 0x91, 0x00, 0x8e, 0x97,
+  0x72, 0xa3, 0x71, 0x47, 0x49, 0xb5, 0x6d, 0x93, 0xef, 0xe4, 0x7d, 0x50,
+  0x3c, 0xc2, 0x83, 0xd0, 0xf5, 0x1d, 0x8a, 0x5f, 0xc1, 0x16, 0x2a, 0x19,
+  0x38, 0x7a, 0x11, 0xe8, 0x67, 0x4c, 0x61, 0x04, 0xf7, 0x69, 0xfb, 0xd7,
+  0x78, 0x2f, 0xbc, 0x55, 0x61, 0x0b, 0x40, 0xaf, 0x94, 0xaa, 0xb3, 0x64,
+  0xfa, 0xf7, 0xc9, 0xfd, 0x69, 0x6d, 0x7d, 0x97, 0xf2, 0x8e, 0x16, 0xf5,
+  0xe8, 0x44, 0x76, 0x27, 0x01, 0xef, 0x86, 0xc3, 0x35, 0x47, 0xea, 0xb6,
+  0xef, 0x4a, 0xb7, 0x7b, 0x03, 0xfe, 0xc8, 0x03, 0xae, 0x63, 0xa0, 0x6e,
+  0x4e, 0xcf, 0x6e, 0xd3, 0x9e, 0x78, 0x79, 0x36, 0xe2, 0x0e, 0xb0, 0xc5,
+  0x4f, 0x38, 0x83, 0x39, 0xe9, 0x69, 0x6b, 0xbd, 0x6e, 0x5f, 0x46, 0xa7,
+  0x3e, 0x33, 0x12, 0x23, 0x16, 0x1d, 0x27, 0xee, 0xa1, 0x11, 0xc7, 0xc1,
+  0x23, 0x95, 0x05, 0x48, 0xc4, 0x78, 0xf5, 0xa1, 0xe6, 0xcf, 0x53, 0xaa,
+  0x38, 0xcb, 0xb1, 0x88, 0x16, 0x73, 0xd7, 0xd1, 0xa1, 0x0f, 0xfa, 0x36,
+  0xa2, 0xa0, 0x98, 0xce, 0x32, 0xa8, 0x12, 0x29, 0xa5, 0x8f, 0x06, 0xfb,
+  0xd0, 0x11, 0xd2, 0x71, 0x4a, 0xbe, 0xe4, 0xff, 0x21, 0xdd, 0xca, 0xeb,
+  0x93, 0x47, 0xae, 0x95, 0xac, 0x1e, 0x2c, 0x61, 0x06, 0x2c, 0x9c, 0xac,
+  0x35, 0xc9, 0x0e, 0x4e, 0x16, 0x59, 0x2b, 0xf6, 0x4e, 0x17, 0x50, 0x5e,
+  0x8d, 0xb4, 0x2b, 0x97, 0xe4, 0xfb, 0xc5, 0x71, 0x92, 0x7c, 0x11, 0x49,
+  0x11, 0x39, 0xe8, 0xda, 0x57, 0x9a, 0x84, 0x07, 0xe6, 0xa0, 0x9b, 0xf4,
+  0xd3, 0xa7, 0x61, 0x9d, 0xed, 0x98, 0xed, 0x53, 0xef, 0xd4, 0xf5, 0x8c,
+  0xa6, 0xa1, 0x46, 0xce, 0x96, 0x2f, 0x89, 0x1c, 0xc9, 0x2a, 0x33, 0x4d,
+  0x75, 0x63, 0xf0, 0xb2, 0x9e, 0xe4, 0x19, 0xf1, 0x51, 0xec, 0x7c, 0x6e,
+  0x5c, 0xac, 0xc3, 0xb6, 0x33, 0xb4, 0x99, 0x6a, 0x94, 0x82, 0x5e, 0xad,
+  0x82, 0x4c, 0x25, 0xbc, 0xcd, 0xbd, 0xe8, 0xb5, 0x19, 0x9e, 0x45, 0x16,
+  0x99, 0x7d, 0x50, 0x68, 0x52, 0x8c, 0xb0, 0xb9, 0x71, 0xe9, 0x91, 0x48,
+  0x89, 0xe3, 0x55, 0x56, 0xa6, 0x37, 0x34, 0xc2, 0x60, 0x1d, 0xec, 0xd9,
+  0xd9, 0xb9, 0xbb, 0xbb, 0x1b, 0xae, 0x33, 0x33, 0x7f, 0x3f, 0x96, 0xb3,
+  0x36, 0x2d, 0xa4, 0x77, 0x00, 0x9f, 0x62, 0x6f, 0x2c, 0x6e, 0x9f, 0xae,
+  0x23, 0x1b, 0x6a, 0x5a, 0x57, 0x29, 0x6d, 0x8c, 0xd9, 0xad, 0x65, 0xac,
+  0x2a, 0x5b, 0xd4, 0xa2, 0x19, 0xfb, 0x8e, 0xfb, 0x91, 0x2c, 0x1a, 0x50,
+  0x4b, 0x94, 0x36, 0xe7, 0x08, 0x28, 0x49, 0x62, 0xb5, 0x5c, 0xdd, 0x6d,
+  0xef, 0x42, 0xec, 0xea, 0x9f, 0x6d, 0xca, 0x3f, 0x5f, 0x6f, 0x7d, 0x1e,
+  0x6a, 0x15, 0xc4, 0x73, 0xe9, 0x8d, 0xf9, 0xb9, 0x8c, 0xf9, 0xf9, 0x3f,
+  0x37, 0xe6, 0xe7, 0xbf, 0x7e, 0xcc, 0x4f, 0xff, 0xe5, 0x63, 0xfe, 0x2b,
+  0x8d, 0xf9, 0xaf, 0xcb, 0xe2, 0xe3, 0xa0, 0xa6, 0x6a, 0xa8, 0x46, 0x95,
+  0x16, 0xca, 0xbf, 0xb8, 0xf2, 0xd4, 0xe2, 0x54, 0x22, 0x97, 0x83, 0x2d,
+  0x70, 0xd3, 0x29, 0x52, 0xed, 0x8a, 0xa2, 0xf5, 0x57, 0x13, 0xfa, 0x7b,
+  0xee, 0xb7, 0x9c, 0x40, 0xe3, 0xf5, 0x84, 0xb4, 0x5c, 0x88, 0xb6, 0x9e,
+  0x74, 0xc7, 0x16, 0xb2, 0xee, 0x0d, 0xfd, 0xc2, 0x6c, 0x41, 0x52, 0x5b,
+  0x6d, 0xa4, 0x29, 0x9c, 0xb7, 0xcc, 0x6d, 0x60, 0xfd, 0xd6, 0x8e, 0x52,
+  0x1e, 0xc9, 0x78, 0x45, 0x76, 0x97, 0x68, 0xcb, 0x84, 0x10, 0x27, 0x7f,
+  0x54, 0x08, 0xa1, 0xbd, 0xbc, 0x5f, 0x50, 0x73, 0x5a, 0xc5, 0xab, 0xd6,
+  0x4a, 0x07, 0xda, 0xc3, 0xa4, 0xdb, 0x39, 0x85, 0xb9, 0x92, 0x77, 0x6d,
+  0x33, 0xb8, 0xb0, 0x26, 0xb3, 0x92, 0x8e, 0x2b, 0xdd, 0xf0, 0x6b, 0x8e,
+  0x62, 0xa7, 0x10, 0x77, 0x40, 0xdd, 0xe8, 0xab, 0x6b, 0x1f, 0xb3, 0x6c,
+  0x91, 0xce, 0x90, 0x9f, 0x45, 0x51, 0x8a, 0x55, 0x34, 0x68, 0xed, 0x8d,
+  0x81, 0xb2, 0xef, 0x6c, 0xae, 0xe0, 0xad, 0xc4, 0x47, 0x93, 0x6b, 0x36,
+  0x30, 0xad, 0x26, 0xca, 0xaa, 0xe7, 0xd3, 0x20, 0x4f, 0x5e, 0x34, 0x15,
+  0x8d, 0x56, 0xd8, 0x4e, 0x90, 0x05, 0x32, 0x96, 0x5c, 0x41, 0x04, 0xc7,
+  0xa9, 0x75, 0xcd, 0x95, 0x27, 0xba, 0xa5, 0xfc, 0x36, 0x9f, 0x2e, 0x03,
+  0x96, 0x89, 0xee, 0xfb, 0x43, 0xb2, 0xbe, 0x5a, 0xf4, 0x21, 0xbc, 0x78,
+  0xf4, 0x44, 0x69, 0x85, 0x3d, 0x6a, 0x71, 0x12, 0x6d, 0x6b, 0xb0, 0xa5,
+  0x28, 0x4d, 0xdf, 0xe3, 0x64, 0x39, 0x3a, 0xff, 0xf0, 0xed, 0xf1, 0xf1,
+  0xf9, 0xc9, 0xeb, 0xd3, 0x63, 0x39, 0x31, 0xf6, 0x47, 0xef, 0x2e, 0xbf,
+  0x3b, 0x75, 0x7c, 0x8a, 0xf1, 0x3a, 0xa8, 0x5b, 0x42, 0x82, 0x91, 0x24,
+  0xa7, 0x79, 0xb1, 0xfc, 0xd4, 0x07, 0xdb, 0x59, 0xd1, 0x24, 0x87, 0x27,
+  0x3f, 0x18, 0xb5, 0xe7, 0x7c, 0xf0, 0xfe, 0x87, 0x80, 0x92, 0xa7, 0x05,
+  0x50, 0x8a, 0x97, 0x36, 0x30, 0x9b, 0x10, 0x56, 0x84, 0x1b, 0xfb, 0xaa,
+  0x6b, 0xf7, 0x37, 0x2e, 0x33, 0x6f, 0x9a, 0x5b, 0x16, 0xf6, 0x76, 0xe4,
+  0x17, 0xa5, 0x69, 0xd1, 0x2f, 0xb0, 0xf8, 0xcf, 0x77, 0x95, 0x24, 0x6f,
+  0xad, 0x37, 0xa5, 0x5d, 0x79, 0xcf, 0x8c, 0xe6, 0x1e, 0x65, 0xe3, 0x92,
+  0x97, 0xf4, 0xdf, 0x38, 0x39, 0x64, 0x72, 0x5e, 0xe5, 0xb7, 0xa4, 0xf0,
+  0x98, 0x87, 0x39, 0xf6, 0x46, 0xcf, 0x0e, 0x2d, 0x59, 0xa6, 0x84, 0x07,
+  0xa9, 0x15, 0x84, 0x8a, 0xd0, 0x6a, 0xac, 0x6a, 0x33, 0xd2, 0x2b, 0xc9,
+  0x34, 0xb7, 0xad, 0xe5, 0x66, 0xeb, 0xbc, 0x3e, 0xbe, 0xe8, 0x53, 0x95,
+  0x6e, 0x46, 0x38, 0x1d, 0xbf, 0xfb, 0x9a, 0xcb, 0x7f, 0x58, 0x4a, 0x48,
+  0xa9, 0xba, 0x1e, 0xa2, 0x9e, 0xbc, 0x39, 0xa1, 0x22, 0xdf, 0x14, 0x4f,
+  0xaa, 0x6b, 0xa3, 0xdd, 0xfe, 0x8e, 0x59, 0x98, 0x3c, 0xb4, 0x97, 0xe6,
+  0x3f, 0xb1, 0xa9, 0x32, 0xda, 0xe6, 0x37, 0xdb, 0xe1, 0x6c, 0x89, 0x16,
+  0x62, 0x63, 0x5d, 0xcc, 0x85, 0xc9, 0xa5, 0xca, 0x31, 0x61, 0x66, 0x46,
+  0xc2, 0xa8, 0x8b, 0xce, 0x50, 0xc1, 0x5d, 0x57, 0xba, 0x62, 0xb6, 0x2f,
+  0x60, 0xce, 0x98, 0xaf, 0xf5, 0x69, 0x5b, 0x82, 0x5c, 0xc0, 0xcd, 0x45,
+  0x14, 0x62, 0x5f, 0xe5, 0x02, 0x41, 0x75, 0x8e, 0x59, 0xa3, 0x57, 0x4d,
+  0xf3, 0x29, 0x17, 0x74, 0x32, 0x67, 0xb4, 0xa2, 0x58, 0xcb, 0xef, 0x39,
+  0x71, 0xd5, 0x38, 0x79, 0x39, 0x33, 0x2f, 0xce, 0x56, 0x60, 0xeb, 0xb8,
+  0x92, 0x92, 0x2b, 0x07, 0xd5, 0x21, 0x8a, 0x92, 0x92, 0x01, 0x6c, 0x0e,
+  0xa1, 0x1d, 0x8d, 0x41, 0x05, 0x9c, 0xa1, 0x0d, 0x54, 0x69, 0x10, 0xb1,
+  0x75, 0x33, 0xf0, 0x36, 0x01, 0x46, 0xda, 0xec, 0x27, 0x9b, 0xc4, 0x86,
+  0x45, 0x7f, 0xa2, 0x82, 0x80, 0x54, 0xcb, 0xda, 0xec, 0x87, 0xa5, 0x40,
+  0x36, 0x65, 0xbf, 0x6e, 0x0e, 0x09, 0x61, 0xc6, 0xea, 0xa3, 0x23, 0x65,
+  0x4b, 0x13, 0xe9, 0x8b, 0xa2, 0xc8, 0x69, 0x31, 0x5c, 0x6c, 0xb5, 0x0e,
+  0x48, 0x9b, 0x6c, 0x73, 0xed, 0x24, 0xc9, 0x55, 0xfa, 0xde, 0x6f, 0x2c,
+  0x4b, 0x78, 0x19, 0x7e, 0x31, 0xd1, 0xa7, 0x3d, 0x8d, 0x9d, 0xe6, 0x74,
+  0xad, 0xfc, 0x75, 0xd6, 0xf7, 0xa3, 0x2c, 0xbb, 0x87, 0x82, 0x04, 0x6f,
+  0x47, 0x58, 0x28, 0x52, 0x4e, 0xa5, 0x12, 0x09, 0x00, 0x41, 0xe0, 0x25,
+  0x01, 0xb8, 0xfa, 0x65, 0x26, 0xe8, 0x6f, 0x61, 0x98, 0x18, 0x43, 0x05,
+  0x41, 0x8b, 0x76, 0x7b, 0xc0, 0xe6, 0xc4, 0x51, 0x22, 0x96, 0x0e, 0x80,
+  0x4f, 0x44, 0xb5, 0xda, 0x20, 0xd0, 0xe2, 0x48, 0x37, 0x56, 0xa5, 0xcb,
+  0x72, 0xda, 0x82, 0x99, 0x9f, 0xdb, 0x74, 0xc6, 0x99, 0xdf, 0x36, 0xc4,
+  0x5b, 0x69, 0x9f, 0x06, 0x12, 0x0a, 0x50, 0x13, 0x86, 0xde, 0xfb, 0xb7,
+  0x07, 0x93, 0xa7, 0x1e, 0x5a, 0x3b, 0xa7, 0x77, 0xc5, 0x32, 0x22, 0x1e,
+  0x9d, 0x15, 0xde, 0xc1, 0xf1, 0xcd, 0xf2, 0x79, 0xde, 0x0c, 0x20, 0x39,
+  0x5e, 0x1a, 0x21, 0x91, 0x05, 0x69, 0xb1, 0xa3, 0x56, 0x2e, 0x85, 0xb0,
+  0xae, 0x2a, 0x46, 0x0e, 0xef, 0xb5, 0x2b, 0x1d, 0xba, 0xb4, 0x82, 0x41,
+  0x8c, 0x1e, 0x0b, 0x54, 0x29, 0x0e, 0x89, 0x8d, 0x53, 0x8b, 0x8c, 0x7f,
+  0x4d, 0x67, 0x54, 0xd0, 0x09, 0x4f, 0x07, 0x88, 0x6b, 0x39, 0x2c, 0xcd,
+  0x55, 0x43, 0x03, 0xab, 0xcc, 0x74, 0x5f, 0x69, 0x51, 0x64, 0x13, 0x6c,
+  0x4e, 0xd9, 0xc9, 0x81, 0x25, 0xb1, 0x5d, 0x45, 0x05, 0x1a, 0xf6, 0x0a,
+  0xe2, 0x17, 0x74, 0xa2, 0x03, 0x7d, 0x6e, 0x6c, 0x9a, 0xb8, 0xcb, 0xa7,
+  0x54, 0xf3, 0xeb, 0xb2, 0xb4, 0xea, 0x6b, 0x2d, 0xf8, 0x7f, 0xf2, 0x29,
+  0xe5, 0x21, 0xac, 0x6d, 0x1c, 0x23, 0x4c, 0xb3, 0xd5, 0x83, 0x31, 0xa9,
+  0x09, 0xa7, 0xc2, 0x52, 0x24, 0x1a, 0xeb, 0x00, 0x1f, 0xd4, 0x0e, 0xdf,
+  0xc7, 0x36, 0x09, 0xcc, 0xd8, 0xb8, 0xcb, 0x2b, 0x62, 0x33, 0x0a, 0x74,
+  0x6a, 0x45, 0x9f, 0x0d, 0xf5, 0x84, 0x80, 0x39, 0xec, 0x23, 0xf3, 0x74,
+  0x7c, 0xbb, 0xa9, 0xc4, 0xae, 0xcb, 0x42, 0x0a, 0xf4, 0x32, 0x70, 0x84,
+  0x54, 0xe3, 0xe4, 0x63, 0x3e, 0x2b, 0xa3, 0x1e, 0x30, 0x73, 0x11, 0x6c,
+  0xce, 0x37, 0x51, 0x22, 0xfc, 0xed, 0xa6, 0xf8, 0x1e, 0x88, 0xee, 0x23,
+  0xbb, 0x4e, 0xe5, 0xf7, 0x9c, 0x16, 0xb5, 0x79, 0xcd, 0x9f, 0xf9, 0xda,
+  0x3d, 0xd4, 0x69, 0x8e, 0x9c, 0x6c, 0xec, 0x54, 0xd3, 0x68, 0x6c, 0x7d,
+  0x90, 0xec, 0xef, 0xee, 0x7e, 0xdb, 0x4f, 0x9e, 0x70, 0x0d, 0xb4, 0xbd,
+  0xaf, 0x57, 0x15, 0xe6, 0x84, 0x82, 0x6c, 0x8b, 0xb1, 0xfe, 0x85, 0xf4,
+  0x62, 0x4c, 0x18, 0xef, 0x4b, 0x0b, 0xf4, 0x62, 0x7f, 0xbc, 0x1f, 0x71,
+  0xed, 0x5e, 0x60, 0xb4, 0x54, 0x5c, 0xfe, 0x1b, 0x7c, 0x4e, 0x50, 0xe0,
+  0xe0, 0x9e, 0xa7, 0x58, 0xdb, 0x42, 0x52, 0x5f, 0x68, 0xbb, 0x72, 0xcb,
+  0x50, 0x36, 0x67, 0xf4, 0x80, 0xb1, 0xe2, 0xc2, 0x80, 0x28, 0x45, 0xfc,
+  0xa0, 0xc5, 0x5a, 0xd2, 0x3d, 0xaf, 0x53, 0x04, 0x5b, 0x9d, 0x20, 0xbb,
+  0x83, 0xe0, 0x1c, 0xbf, 0xdf, 0x95, 0x38, 0x43, 0x78, 0x37, 0xaf, 0x9b,
+  0x01, 0xd9, 0x9a, 0x31, 0x97, 0xed, 0xf9, 0xd9, 0xf9, 0x93, 0x6d, 0x9f,
+  0xfe, 0x42, 0xf2, 0x1f, 0x98, 0xa3, 0x12, 0x4e, 0x5d, 0x9b, 0x1b, 0xd1,
+  0x57, 0x71, 0xc3, 0x28, 0xbc, 0x58, 0x41, 0x2b, 0xce, 0x0d, 0x27, 0xe1,
+  0x82, 0x2f, 0x1a, 0x7d, 0x2c, 0xbb, 0x73, 0x39, 0xb7, 0x1e, 0x6d, 0xa3,
+  0x3b, 0x98, 0x4a, 0x84, 0xb0, 0x11, 0x26, 0x90, 0xd5, 0x8c, 0xd2, 0x41,
+  0xf6, 0xd5, 0x00, 0xd8, 0xbe, 0x36, 0x81, 0x15, 0xe1, 0xc0, 0x82, 0x5e,
+  0x26, 0xed, 0x9c, 0x17, 0x9f, 0x53, 0x8f, 0x41, 0x74, 0xee, 0x49, 0xea,
+  0x9d, 0xc5, 0x3a, 0x22, 0x8f, 0xd0, 0x85, 0x53, 0xc8, 0x7f, 0x43, 0xbb,
+  0x96, 0x19, 0xaf, 0x87, 0xab, 0x20, 0xb6, 0x8e, 0x69, 0xa7, 0xa5, 0x36,
+  0x0b, 0x39, 0x5b, 0x9a, 0xbc, 0x3b, 0x1d, 0x5d, 0xfa, 0x3e, 0x5f, 0x94,
+  0x85, 0x08, 0xf0, 0x21, 0xed, 0x14, 0x6e, 0x2f, 0x72, 0x78, 0x7a, 0x12,
+  0xa9, 0x52, 0x4e, 0xd0, 0xad, 0x03, 0x23, 0x56, 0x4b, 0xb2, 0xd3, 0xfc,
+  0x5c, 0x98, 0x84, 0x89, 0xcf, 0x19, 0xbd, 0xc1, 0xce, 0x6c, 0x76, 0xf4,
+  0xe6, 0x95, 0x9f, 0xf7, 0xd1, 0x6d, 0xce, 0x74, 0xf1, 0xcf, 0x8c, 0xfd,
+  0x10, 0xdc, 0x88, 0xc2, 0xd1, 0xea, 0xe5, 0x78, 0xe0, 0x71, 0x26, 0xb0,
+  0xbe, 0x03, 0xfe, 0x33, 0xb3, 0x7b, 0xcd, 0x0d, 0xf5, 0x31, 0x34, 0x04,
+  0xb6, 0x78, 0x43, 0x61, 0x7e, 0x84, 0xeb, 0xa2, 0xe5, 0x7c, 0x9b, 0x24,
+  0x64, 0x41, 0x0a, 0xf5, 0x28, 0x3d, 0xfb, 0xe8, 0x4d, 0x45, 0x53, 0xd1,
+  0x99, 0x49, 0x71, 0xdf, 0xb6, 0x81, 0x60, 0xe4, 0x65, 0xff, 0x25, 0x61,
+  0x05, 0x6f, 0x0b, 0xba, 0x4d, 0x57, 0x1b, 0xcb, 0x1b, 0x3e, 0x01, 0xdb,
+  0x6d, 0x42, 0xc3, 0x04, 0xbc, 0xa5, 0x14, 0xdb, 0xcf, 0xa7, 0xcc, 0x78,
+  0x51, 0xb7, 0x29, 0x2f, 0x38, 0xab, 0x81, 0x84, 0x0e, 0x1c, 0xf9, 0xa8,
+  0xb6, 0xba, 0x6a, 0x25, 0xd9, 0x71, 0xd2, 0x42, 0x37, 0x0c, 0x7e, 0x60,
+  0xc8, 0x0c, 0x82, 0x81, 0xfd, 0x55, 0xb9, 0xd8, 0xe1, 0x36, 0x52, 0x26,
+  0xb6, 0xf7, 0xc6, 0xb4, 0xb5, 0xb3, 0x25, 0xb3, 0xd3, 0x4f, 0x04, 0xa4,
+  0x83, 0xb1, 0x6a, 0x99, 0x69, 0x68, 0x23, 0xb4, 0x26, 0x41, 0x4c, 0x7e,
+  0x59, 0xe4, 0x7f, 0x43, 0x20, 0x15, 0xba, 0xeb, 0x55, 0x0e, 0xac, 0x49,
+  0xca, 0x40, 0x0f, 0xdc, 0x64, 0x66, 0x54, 0x94, 0x26, 0x2b, 0xe4, 0xa1,
+  0xf4, 0xa0, 0xc3, 0xd5, 0x85, 0x01, 0x8d, 0x55, 0x00, 0x67, 0x3f, 0x3d,
+  0x6a, 0xaf, 0x4d, 0x65, 0x02, 0xaa, 0x25, 0x49, 0x3c, 0x36, 0x57, 0xd2,
+  0x0e, 0x72, 0xea, 0x62, 0x25, 0x5e, 0x52, 0x2f, 0x80, 0x2e, 0xa9, 0x74,
+  0x8a, 0x7d, 0xac, 0x24, 0x7d, 0x6f, 0xeb, 0xcd, 0xc5, 0xd9, 0xdb, 0xc1,
+  0xe5, 0xd9, 0x36, 0x52, 0x00, 0xd1, 0x32, 0x03, 0xef, 0xbb, 0xa9, 0xc7,
+  0x52, 0x89, 0xc5, 0xab, 0x47, 0xd0, 0xc6, 0x1f, 0x6c, 0xd5, 0xdb, 0x43,
+  0x9f, 0xc8, 0x69, 0xe1, 0xd7, 0x6f, 0x09, 0x28, 0x95, 0x0a, 0xd6, 0x45,
+  0x10, 0x15, 0x48, 0xc8, 0x43, 0x34, 0xf1, 0xbc, 0xe4, 0x78, 0x5f, 0x65,
+  0xf7, 0x78, 0x59, 0xdf, 0x13, 0x47, 0x04, 0x23, 0x52, 0xc8, 0xab, 0x57,
+  0x67, 0x4d, 0x58, 0xfd, 0xc0, 0x32, 0x61, 0xdb, 0xac, 0x44, 0xa2, 0x32,
+  0x60, 0x9c, 0x6c, 0x53, 0x9a, 0x03, 0x9c, 0x56, 0x55, 0x79, 0xa7, 0x57,
+  0x97, 0x80, 0xbb, 0x6d, 0x05, 0xb9, 0x95, 0x29, 0x5c, 0x92, 0x9c, 0xac,
+  0xec, 0xd3, 0x6b, 0x15, 0xc0, 0x67, 0xed, 0xb4, 0x1a, 0xc5, 0x0f, 0x0d,
+  0x9a, 0xca, 0x98, 0x4b, 0xd9, 0x34, 0xee, 0x1d, 0x3c, 0x25, 0x41, 0xd9,
+  0x06, 0x1c, 0x69, 0x01, 0x40, 0xca, 0xb2, 0x03, 0xd9, 0xbe, 0x7a, 0x8f,
+  0xa4, 0x4e, 0x2c, 0xa8, 0x17, 0xff, 0x14, 0x9c, 0x61, 0xa1, 0x55, 0xe2,
+  0x1a, 0x06, 0x0e, 0x72, 0x24, 0xec, 0x1c, 0x54, 0x7a, 0x85, 0xf6, 0xb6,
+  0xa2, 0x82, 0x90, 0x38, 0x2d, 0xd1, 0x91, 0xfb, 0xd0, 0xf8, 0xd2, 0x54,
+  0xc8, 0x9c, 0x92, 0x50, 0xa6, 0xcb, 0x09, 0x96, 0x89, 0x82, 0x1e, 0x44,
+  0x48, 0x3a, 0x66, 0x8e, 0x16, 0xcd, 0xe3, 0xa0, 0xa6, 0x1d, 0xd8, 0x8a,
+  0xed, 0xec, 0xae, 0x9e, 0x95, 0xf0, 0x63, 0x8e, 0xb8, 0x90, 0xd4, 0x49,
+  0x8a, 0xdd, 0x67, 0xac, 0x5a, 0x56, 0x01, 0x3d, 0x71, 0x71, 0x55, 0x2a,
+  0xc5, 0x73, 0x28, 0xb0, 0x66, 0x29, 0x39, 0xe0, 0x3f, 0x35, 0x1a, 0xb1,
+  0x23, 0x16, 0x0b, 0xda, 0xc0, 0x08, 0x4b, 0x7f, 0xc5, 0xd5, 0x62, 0x5b,
+  0xed, 0x6d, 0xaf, 0xaf, 0x5a, 0xcb, 0xd8, 0x3c, 0x6f, 0xf5, 0x5a, 0x0b,
+  0x12, 0x5f, 0xb9, 0x76, 0x21, 0x4f, 0x8e, 0xa5, 0x7a, 0x33, 0x2e, 0xe7,
+  0x1a, 0x24, 0x0b, 0xc0, 0x3a, 0x91, 0xd2, 0x48, 0xe8, 0xa9, 0x69, 0x0c,
+  0xae, 0xac, 0x8c, 0x99, 0x4d, 0xa2, 0x1f, 0x4d, 0xb6, 0xc8, 0x0b, 0x38,
+  0xf1, 0x01, 0x9e, 0xa7, 0xf2, 0x2b, 0xc5, 0xce, 0x41, 0x98, 0x76, 0x15,
+  0xf7, 0x27, 0x3f, 0xfc, 0x90, 0xb4, 0xe8, 0x9c, 0xb7, 0x57, 0xe5, 0xbb,
+  0xc0, 0xaa, 0x30, 0x0b, 0x27, 0x65, 0x82, 0xa4, 0xc3, 0x01, 0x5c, 0x59,
+  0xb7, 0x9d, 0x51, 0x0a, 0x12, 0xa0, 0xc0, 0xd8, 0x2f, 0x24, 0xd5, 0x01,
+  0xb8, 0xc8, 0xbd, 0x48, 0x67, 0x3f, 0xe6, 0x8a, 0x4c, 0x98, 0x93, 0x08,
+  0x2c, 0x01, 0x22, 0x57, 0x61, 0x6e, 0xec, 0xfa, 0x06, 0xa6, 0xc9, 0x9f,
+  0xae, 0xba, 0x85, 0xfe, 0xbb, 0x21, 0x2f, 0x30, 0xdf, 0x07, 0xeb, 0x39,
+  0xad, 0x2d, 0x4d, 0x86, 0xa0, 0xa5, 0x70, 0xe3, 0x73, 0xc1, 0x21, 0x82,
+  0xbd, 0x78, 0xd5, 0xb9, 0x45, 0xb7, 0x08, 0x22, 0x5b, 0x94, 0x97, 0xc7,
+  0x87, 0x07, 0xa8, 0xdd, 0xd4, 0x3b, 0x2f, 0x8e, 0x5b, 0xa1, 0xb3, 0x62,
+  0x02, 0xe3, 0x8b, 0x94, 0x85, 0x40, 0xa9, 0x6f, 0x26, 0x6d, 0x45, 0x92,
+  0x78, 0xc9, 0xb1, 0x33, 0x61, 0x3e, 0xe6, 0x1b, 0xe7, 0x4f, 0xb6, 0x76,
+  0xb3, 0x1f, 0x63, 0xa2, 0x5d, 0x10, 0x2b, 0xf1, 0xa2, 0xc2, 0x84, 0xd6,
+  0x85, 0x78, 0x7c, 0x28, 0x5d, 0x55, 0x49, 0x12, 0xc9, 0xa7, 0xa7, 0x71,
+  0x3b, 0x56, 0xa8, 0x91, 0x6a, 0x62, 0x69, 0xfa, 0x83, 0x8b, 0x47, 0x8f,
+  0x2c, 0x05, 0xdd, 0xe1, 0x9d, 0xea, 0xd4, 0x4b, 0x1a, 0x18, 0xb3, 0x74,
+  0x80, 0xc7, 0xea, 0x55, 0x4c, 0x25, 0xc2, 0x32, 0x06, 0xda, 0xf4, 0x92,
+  0x1d, 0x6d, 0xde, 0x9c, 0xa9, 0x77, 0xdb, 0x26, 0x36, 0x09, 0x7e, 0x97,
+  0x0f, 0x30, 0xe5, 0xd4, 0x74, 0x8f, 0x96, 0x1f, 0xe0, 0x41, 0x0a, 0x91,
+  0xf9, 0xf7, 0xf9, 0xfb, 0xcb, 0x6d, 0x57, 0xf3, 0x41, 0xb6, 0xab, 0x8f,
+  0x73, 0x94, 0xb4, 0x80, 0x90, 0xc0, 0x9e, 0xd3, 0x76, 0x44, 0x4e, 0x09,
+  0xd6, 0x49, 0x4e, 0x06, 0x79, 0x59, 0x9e, 0xec, 0xee, 0x19, 0x4b, 0x6a,
+  0x77, 0x1f, 0xec, 0xd8, 0x4f, 0x76, 0x9f, 0x0c, 0xf5, 0x4c, 0xeb, 0x53,
+  0xc1, 0xb5, 0x30, 0xe5, 0x17, 0xe1, 0x34, 0xc1, 0xbe, 0x7f, 0xf2, 0xe9,
+  0x13, 0x7e, 0xdc, 0xef, 0x26, 0xf8, 0x2a, 0x2b, 0x9b, 0xe5, 0x9d, 0x0a,
+  0xa1, 0x55, 0xda, 0x71, 0x37, 0xe3, 0x08, 0xbf, 0x2c, 0x0b, 0xce, 0xa9,
+  0x00, 0xff, 0x38, 0xa5, 0x06, 0x0d, 0x57, 0x13, 0x66, 0x7a, 0x14, 0xa2,
+  0x92, 0x04, 0xed, 0x53, 0x66, 0x9a, 0xed, 0xe2, 0xa7, 0x95, 0x49, 0xa2,
+  0x51, 0x20, 0x9c, 0xe9, 0x19, 0x49, 0xca, 0x34, 0xb3, 0xf0, 0xc9, 0xcd,
+  0x91, 0xe5, 0x1d, 0x95, 0x81, 0x98, 0xab, 0x4e, 0x04, 0x92, 0x85, 0x63,
+  0xae, 0x60, 0xcb, 0x3d, 0x20, 0x64, 0xb2, 0x39, 0x15, 0x98, 0x61, 0xfd,
+  0xeb, 0xbe, 0x40, 0x6d, 0xf8, 0x5f, 0x4f, 0xda, 0x77, 0xe5, 0x75, 0x5e,
+  0x0c, 0xb4, 0xd1, 0x97, 0xf2, 0x97, 0xc0, 0x5f, 0x79, 0xf2, 0xf6, 0xf0,
+  0x3c, 0x81, 0x7e, 0x9c, 0x8c, 0xde, 0x82, 0x5b, 0xdc, 0xf3, 0xa1, 0xa0,
+  0x0d, 0xdb, 0x31, 0xd1, 0x53, 0x84, 0x73, 0x9e, 0x85, 0xf4, 0x5a, 0xe1,
+  0xb1, 0x92, 0xac, 0x55, 0xb5, 0x41, 0xf9, 0x80, 0x1b, 0xba, 0x4f, 0x07,
+  0xe2, 0xaa, 0xaf, 0x59, 0xdd, 0x38, 0x1a, 0xbe, 0xd3, 0x92, 0x18, 0x74,
+  0xbf, 0x2a, 0xec, 0x56, 0xfa, 0xd8, 0x2d, 0x5e, 0x7f, 0xd8, 0x80, 0xec,
+  0x9a, 0x4b, 0x6e, 0x04, 0x66, 0x2a, 0x4d, 0x45, 0x9f, 0xa7, 0x02, 0xac,
+  0xf0, 0x6f, 0x89, 0x9c, 0x51, 0x90, 0x51, 0xad, 0x99, 0x60, 0x97, 0x35,
+  0xb3, 0x39, 0x79, 0x95, 0x8a, 0xba, 0x73, 0x31, 0x56, 0xbc, 0x4d, 0xd2,
+  0x99, 0x48, 0x73, 0x12, 0xe9, 0x72, 0x25, 0xd5, 0x9f, 0x48, 0xc3, 0xf6,
+  0x9f, 0x7c, 0xfe, 0xb4, 0x8f, 0xbf, 0x3d, 0xdb, 0x7d, 0xc1, 0x2b, 0x7a,
+  0x72, 0x7c, 0xf9, 0xa6, 0xeb, 0xd0, 0xab, 0xcc, 0x86, 0xe2, 0xff, 0x52,
+  0x75, 0x9a, 0x1b, 0x63, 0x60, 0x50, 0x3e, 0xe4, 0xa0, 0x9e, 0x37, 0x8b,
+  0xc1, 0xee, 0xee, 0xb0, 0xf9, 0xd4, 0xfc, 0x0b, 0x09, 0x1b, 0x9f, 0x3c,
+  0x6d, 0xc7, 0x5e, 0x48, 0xad, 0x1f, 0xd0, 0x74, 0xaf, 0xe6, 0xed, 0x69,
+  0x6f, 0x2f, 0x5b, 0x39, 0x52, 0x8b, 0x07, 0x4a, 0xc9, 0x12, 0xf9, 0xbe,
+  0x25, 0x80, 0xb2, 0xfb, 0x21, 0x56, 0x69, 0xa6, 0x7b, 0x57, 0x29, 0x66,
+  0xc2, 0x5c, 0xf4, 0xb8, 0x95, 0x9a, 0x7b, 0x2e, 0xa8, 0x95, 0x0a, 0xaf,
+  0x79, 0xe3, 0x0a, 0x10, 0x44, 0x33, 0x92, 0x6a, 0xc1, 0x9e, 0x57, 0x19,
+  0xe5, 0x55, 0xb3, 0xe2, 0x57, 0xb0, 0x54, 0x7a, 0x38, 0x37, 0x1c, 0x53,
+  0x50, 0x4d, 0x16, 0x92, 0x89, 0xc0, 0xff, 0xa6, 0xcb, 0xb8, 0x05, 0x79,
+  0xdb, 0x7f, 0x16, 0x99, 0x38, 0x5c, 0xd9, 0xbf, 0x72, 0xe2, 0x9c, 0x7a,
+  0xc4, 0x3e, 0xbc, 0x39, 0xd7, 0x3d, 0x11, 0xef, 0x7e, 0x98, 0xb3, 0x5b,
+  0x2b, 0xaf, 0xf4, 0x2f, 0x1e, 0x0b, 0xcd, 0xf6, 0x70, 0x1d, 0xc7, 0x84,
+  0x7b, 0xeb, 0x57, 0x8e, 0xa5, 0xef, 0x78, 0x4e, 0xe9, 0xfe, 0xa0, 0xf6,
+  0xd8, 0x8d, 0xaf, 0xf8, 0x97, 0x4e, 0x73, 0x17, 0xd9, 0x22, 0xc3, 0xe0,
+  0xbd, 0xbc, 0x4d, 0x7f, 0x73, 0x5b, 0x3b, 0xb5, 0xf1, 0xea, 0x2d, 0x99,
+  0x6b, 0x34, 0x5f, 0x10, 0xf1, 0x52, 0x1d, 0xf5, 0xb5, 0xb4, 0x6a, 0x4d,
+  0x60, 0x32, 0xd5, 0x2d, 0xdb, 0xd7, 0xe2, 0x90, 0xfc, 0xba, 0xce, 0xb1,
+  0x95, 0x57, 0x69, 0x98, 0x6d, 0x44, 0x26, 0x3b, 0xda, 0xb0, 0x8b, 0x55,
+  0xba, 0x94, 0x25, 0x6e, 0xbc, 0x5c, 0xa1, 0x00, 0x78, 0xfd, 0x80, 0xef,
+  0xc9, 0xee, 0x6d, 0x54, 0xd8, 0xb0, 0x5b, 0x7e, 0xeb, 0xbb, 0x8b, 0x37,
+  0x7f, 0x51, 0xfb, 0x1b, 0x7a, 0x69, 0x68, 0x0d, 0x77, 0x3a, 0x3c, 0xce,
+  0x3c, 0x80, 0x92, 0x64, 0xd7, 0xb5, 0xe6, 0xdd, 0xfd, 0x23, 0x82, 0xa5,
+  0x63, 0xea, 0xa2, 0x64, 0x8b, 0x0a, 0x07, 0x98, 0xc7, 0x46, 0x62, 0xd4,
+  0x3d, 0x19, 0x3e, 0x83, 0x4f, 0xe4, 0xcd, 0xd1, 0xb3, 0x27, 0xfb, 0x7b,
+  0xc6, 0x6e, 0xdd, 0xea, 0x48, 0x8b, 0xed, 0x8d, 0x47, 0xcd, 0xb6, 0x5d,
+  0xef, 0xec, 0xd3, 0x82, 0xf6, 0xde, 0xd6, 0xf1, 0x0f, 0xe7, 0xef, 0xda,
+  0xe3, 0xe3, 0x11, 0x05, 0x99, 0x67, 0xab, 0x46, 0xe8, 0x74, 0x81, 0x56,
+  0xfb, 0x82, 0xb4, 0x42, 0x5e, 0x57, 0x12, 0xe6, 0x14, 0xf6, 0xde, 0x54,
+  0x39, 0x69, 0xb9, 0x3d, 0x9a, 0x90, 0xde, 0x69, 0x59, 0x4c, 0xcd, 0xd5,
+  0x7f, 0x46, 0x79, 0xf8, 0x19, 0x61, 0x40, 0x1e, 0x1c, 0xdd, 0xea, 0x63,
+  0xf2, 0xb6, 0x8f, 0xa3, 0x52, 0x84, 0x50, 0x84, 0xb7, 0xf8, 0x21, 0x18,
+  0x90, 0x28, 0x5f, 0x94, 0x33, 0x0f, 0x96, 0xd7, 0x19, 0xbb, 0x78, 0x9b,
+  0x56, 0x7d, 0x24, 0xd6, 0x24, 0xe1, 0x7a, 0x23, 0xaf, 0xcf, 0x4b, 0x38,
+  0xb5, 0x57, 0xc5, 0x43, 0x58, 0x5a, 0x6a, 0x44, 0x84, 0xfd, 0x44, 0x5b,
+  0xea, 0xda, 0xdf, 0xf6, 0xd8, 0xbf, 0xc1, 0xd0, 0xc1, 0xf1, 0x0e, 0xd2,
+  0xdc, 0x22, 0x32, 0x17, 0x8f, 0x39, 0xcb, 0x22, 0x6f, 0xa3, 0x58, 0x71,
+  0x12, 0x91, 0x65, 0xd7, 0x6f, 0x13, 0x14, 0xc4, 0xfc, 0xe0, 0x88, 0xf5,
+  0xa2, 0xc4, 0x4c, 0x5a, 0x4c, 0x5b, 0xb9, 0x18, 0xa8, 0x09, 0x04, 0xfb,
+  0x07, 0xa5, 0xd6, 0xa0, 0x24, 0x3e, 0x7f, 0x12, 0x3a, 0xb5, 0xce, 0x2e,
+  0x8f, 0x0f, 0x24, 0x80, 0xe1, 0xf2, 0x68, 0x55, 0x23, 0x66, 0xb0, 0x0c,
+  0x01, 0x8f, 0x0b, 0x81, 0xd0, 0x7b, 0xa3, 0xeb, 0x47, 0x76, 0x36, 0x60,
+  0xbf, 0xb4, 0x1b, 0xd8, 0xa1, 0xd9, 0xac, 0x64, 0x7b, 0xd1, 0x82, 0x56,
+  0x76, 0x3e, 0x9a, 0x58, 0xe5, 0x18, 0x0c, 0x1b, 0x86, 0x12, 0x68, 0x7d,
+  0xf8, 0x66, 0x09, 0x26, 0x8b, 0x85, 0x36, 0x6c, 0x0b, 0xcd, 0x8a, 0x2a,
+  0x8b, 0x49, 0x56, 0x05, 0x48, 0x10, 0x04, 0xa3, 0xc8, 0x07, 0x4b, 0x93,
+  0x05, 0xc5, 0x7b, 0x75, 0x19, 0x33, 0xdf, 0xea, 0xb1, 0x31, 0xb3, 0xee,
+  0xde, 0x11, 0x2b, 0x84, 0xdc, 0x5d, 0xab, 0xca, 0xcc, 0x64, 0x8d, 0xdb,
+  0x34, 0x1a, 0xa8, 0x21, 0x9f, 0x96, 0x5a, 0x23, 0x64, 0x3d, 0x59, 0x55,
+  0x9c, 0xe1, 0xa0, 0x94, 0x10, 0x16, 0x95, 0xab, 0x70, 0x00, 0x78, 0x1e,
+  0x00, 0x55, 0x47, 0xfa, 0x7e, 0x5d, 0x3c, 0x22, 0x75, 0x6c, 0x17, 0x8d,
+  0x8a, 0xb3, 0x8a, 0xf8, 0xc9, 0x58, 0x50, 0xa9, 0x7a, 0xc4, 0x02, 0x31,
+  0xae, 0x97, 0xd5, 0x74, 0x39, 0xef, 0xf9, 0x45, 0x0c, 0x45, 0xbf, 0x81,
+  0xed, 0xc6, 0x39, 0x93, 0x11, 0x97, 0xf8, 0xb3, 0xdd, 0x56, 0x6b, 0x43,
+  0x29, 0xe6, 0xec, 0xd6, 0x9f, 0xca, 0xcc, 0xec, 0x59, 0x8f, 0x63, 0x8e,
+  0x5c, 0x20, 0x8e, 0xe6, 0xfd, 0x8e, 0x31, 0x95, 0x79, 0x5f, 0x56, 0x8a,
+  0xd1, 0x55, 0xf4, 0xdf, 0x2f, 0x02, 0x89, 0x21, 0xab, 0xc3, 0x50, 0xaa,
+  0xbc, 0x48, 0x56, 0x55, 0x97, 0xa4, 0x0f, 0xde, 0xdd, 0x94, 0x33, 0x3f,
+  0xd6, 0x1b, 0x98, 0x2d, 0x64, 0x90, 0x7b, 0x94, 0x0d, 0x1e, 0x1c, 0x5e,
+  0x16, 0x86, 0xe6, 0x1d, 0xae, 0xa5, 0x31, 0xa5, 0x3a, 0x25, 0x7f, 0x2d,
+  0xc7, 0xe2, 0x6f, 0xa0, 0xa4, 0x8e, 0xeb, 0x68, 0x32, 0x30, 0x08, 0x4c,
+  0x8c, 0x58, 0x36, 0x5b, 0x6d, 0xba, 0x64, 0x2f, 0x22, 0xf5, 0xa7, 0xc8,
+  0x1a, 0xe6, 0x1c, 0xa3, 0xc2, 0x49, 0xe4, 0xe0, 0x4f, 0xae, 0x41, 0x0b,
+  0x31, 0x65, 0xc7, 0xc4, 0x28, 0x12, 0x59, 0x31, 0x92, 0x76, 0x9f, 0x52,
+  0x35, 0xfd, 0xe9, 0x8d, 0x17, 0x9a, 0xec, 0xdb, 0x3c, 0xfe, 0x74, 0xd2,
+  0x2c, 0x65, 0xd6, 0xbb, 0xbd, 0x2b, 0xd5, 0x23, 0x68, 0xde, 0x05, 0xaf,
+  0x19, 0x98, 0x44, 0x26, 0x66, 0xeb, 0xa5, 0x93, 0x7b, 0xbd, 0x17, 0xdd,
+  0x35, 0xa2, 0xc5, 0x3e, 0x2d, 0x0b, 0x5a, 0x30, 0x58, 0xdb, 0x09, 0x8a,
+  0xed, 0xe5, 0xf5, 0x0a, 0x16, 0xd2, 0xdf, 0x0b, 0x42, 0xdb, 0x2d, 0x71,
+  0xe9, 0x9f, 0xf6, 0xac, 0x49, 0x69, 0x8e, 0x1f, 0xc8, 0x59, 0x6c, 0x7c,
+  0xf6, 0x2f, 0x0e, 0x82, 0x81, 0x25, 0xb2, 0x2a, 0x27, 0x1c, 0xf2, 0xd5,
+  0xba, 0x8f, 0xc4, 0xe7, 0x10, 0xde, 0x98, 0x6f, 0xe5, 0x2b, 0x4a, 0x9e,
+  0xbb, 0x05, 0x89, 0x65, 0x33, 0x5a, 0xd8, 0xa8, 0x7a, 0x9a, 0x6c, 0xc1,
+  0xd0, 0xf9, 0xfc, 0xd9, 0xd3, 0x6d, 0x2e, 0xab, 0xac, 0xd0, 0xa8, 0xed,
+  0x08, 0x3e, 0x15, 0xa7, 0x4d, 0xc8, 0x02, 0x71, 0x81, 0xe7, 0x5c, 0x96,
+  0x12, 0xf4, 0x9e, 0x53, 0xad, 0x3c, 0x00, 0x04, 0xb8, 0xb9, 0xda, 0xc1,
+  0xaa, 0x9e, 0x33, 0xeb, 0x5e, 0x10, 0x2d, 0x07, 0x0e, 0x4b, 0xaa, 0x5a,
+  0x6e, 0x41, 0xca, 0x7b, 0x75, 0x53, 0x12, 0x9b, 0xf0, 0x21, 0x64, 0x75,
+  0xd0, 0x47, 0x94, 0xaf, 0x6e, 0x9b, 0x20, 0x81, 0x31, 0x08, 0x03, 0x66,
+  0x9e, 0x0b, 0x9e, 0xf1, 0x5d, 0x4d, 0xe5, 0x10, 0x4a, 0xef, 0x5e, 0x90,
+  0xb4, 0x59, 0xb6, 0xf4, 0xe5, 0xe6, 0x49, 0x62, 0xbc, 0x4b, 0x46, 0x2f,
+  0x45, 0x4c, 0x1a, 0x77, 0x99, 0x9d, 0x48, 0xb4, 0xc1, 0x44, 0x1e, 0xb4,
+  0x55, 0xb4, 0x05, 0xc1, 0x03, 0xc9, 0xba, 0x40, 0xcb, 0x08, 0x2a, 0x67,
+  0xcd, 0x95, 0xf5, 0x98, 0x2f, 0xd9, 0xb2, 0x72, 0x05, 0x7f, 0x38, 0x20,
+  0xc1, 0xf7, 0x25, 0x20, 0x8c, 0xab, 0xf2, 0x94, 0xd5, 0xe0, 0x4f, 0x35,
+  0x9f, 0xb2, 0xd5, 0xb1, 0x95, 0xf8, 0x72, 0xdd, 0x6d, 0x9a, 0xb9, 0xdc,
+  0x85, 0x95, 0xeb, 0xdf, 0xed, 0xae, 0x0c, 0x6b, 0xe0, 0xf0, 0x57, 0x3b,
+  0xf3, 0xb0, 0xa2, 0xf7, 0x5c, 0x06, 0x07, 0xa4, 0x1b, 0x70, 0x18, 0x0c,
+  0x42, 0x0a, 0x81, 0x64, 0x0b, 0x1d, 0xde, 0xd9, 0xd9, 0x7e, 0xb8, 0xd3,
+  0xf2, 0xe4, 0x43, 0x9d, 0x3c, 0x67, 0x13, 0x9e, 0x09, 0x12, 0x2d, 0x9f,
+  0x85, 0xeb, 0x05, 0x7d, 0x35, 0x07, 0x54, 0x97, 0x76, 0x10, 0x23, 0x1d,
+  0x2b, 0xd1, 0x4d, 0x28, 0x81, 0x2e, 0xbc, 0x83, 0x78, 0xcc, 0x3c, 0xbc,
+  0xf6, 0xc8, 0xc5, 0xbc, 0x63, 0x26, 0x10, 0x11, 0x20, 0xc0, 0x01, 0x71,
+  0x71, 0xb4, 0xc3, 0x59, 0x50, 0xc7, 0xd1, 0xeb, 0x15, 0x0e, 0x84, 0x37,
+  0x3e, 0x36, 0xe8, 0x5a, 0x5e, 0x65, 0x3a, 0x1a, 0x2d, 0xd7, 0x73, 0x04,
+  0xae, 0x2d, 0x8f, 0xaa, 0x30, 0xe2, 0x44, 0xad, 0xe9, 0x30, 0x60, 0xf7,
+  0xe1, 0x07, 0xe9, 0xf8, 0xd8, 0xa2, 0xf3, 0x79, 0x11, 0x33, 0xdd, 0xbd,
+  0xf2, 0xc5, 0x68, 0xd3, 0xc8, 0xd4, 0x8f, 0x6e, 0xdc, 0x4c, 0xaf, 0x83,
+  0xbe, 0xe6, 0x57, 0x2d, 0xea, 0x97, 0xb4, 0x0a, 0x3d, 0xcc, 0xe8, 0x9b,
+  0xdd, 0xdf, 0x98, 0x33, 0xad, 0x5a, 0x89, 0x9f, 0xb6, 0xa6, 0xb3, 0xcf,
+  0xc7, 0x14, 0x29, 0xc3, 0x31, 0xad, 0x14, 0xd5, 0x00, 0xc2, 0xc4, 0x44,
+  0x37, 0x81, 0x2e, 0x31, 0xd3, 0xcb, 0xbc, 0xfc, 0x75, 0xd5, 0xa5, 0xb5,
+  0xd1, 0xb6, 0x55, 0xdd, 0xa9, 0x47, 0x6c, 0x93, 0x2c, 0xe3, 0x4a, 0xda,
+  0xb1, 0x14, 0x46, 0x7b, 0xa7, 0x8f, 0x19, 0x23, 0xfb, 0xfc, 0xdd, 0xf1,
+  0xd7, 0x67, 0xdb, 0x0f, 0x79, 0xe3, 0x7c, 0xf9, 0x6f, 0x07, 0x05, 0xf4,
+  0x59, 0x45, 0xc8, 0x35, 0xee, 0x3b, 0xb4, 0xf0, 0xaf, 0x47, 0xa3, 0xc1,
+  0xe1, 0xf9, 0x09, 0x89, 0xc9, 0x64, 0x34, 0x32, 0x7f, 0x59, 0x45, 0x2d,
+  0xa6, 0xb5, 0xfa, 0x06, 0xdf, 0x41, 0xd7, 0xb3, 0x29, 0x59, 0xf0, 0xe3,
+  0x64, 0x59, 0xa2, 0x65, 0x60, 0x2b, 0x29, 0x53, 0xa0, 0x79, 0xaa, 0xf4,
+  0x81, 0xae, 0x01, 0x75, 0x7e, 0xb2, 0x83, 0x6f, 0x11, 0x3a, 0x14, 0x03,
+  0x8a, 0x1b, 0xca, 0xcb, 0xb0, 0x6e, 0x03, 0x69, 0x3d, 0xc0, 0x53, 0x42,
+  0x40, 0x2b, 0x3c, 0xd5, 0x98, 0x38, 0x74, 0x9d, 0x50, 0x6c, 0x4a, 0x82,
+  0x53, 0xf1, 0x6c, 0x00, 0xce, 0xd0, 0x27, 0xc0, 0xb7, 0xf0, 0x1d, 0x76,
+  0xdd, 0x4c, 0x30, 0x47, 0x98, 0x5f, 0x83, 0xaa, 0x23, 0x8e, 0x24, 0x94,
+  0xd8, 0x35, 0xff, 0x37, 0x07, 0xcb, 0xe4, 0x60, 0x13, 0x68, 0x94, 0x82,
+  0x8a, 0x89, 0x86, 0xa6, 0x76, 0xa7, 0x7a, 0x8b, 0x68, 0x52, 0xd8, 0x4f,
+  0xa6, 0x97, 0xc1, 0x16, 0xc4, 0x8b, 0xaa, 0xf7, 0x54, 0x19, 0x05, 0x42,
+  0x58, 0xbd, 0x61, 0x88, 0xc1, 0xf4, 0x5f, 0xc2, 0x79, 0xbe, 0x46, 0x03,
+  0x19, 0x73, 0x90, 0x10, 0x0e, 0xa3, 0xa2, 0x99, 0xcd, 0xe5, 0xaf, 0x69,
+  0x71, 0x0f, 0xc7, 0xa0, 0x78, 0xaa, 0x41, 0xae, 0x61, 0xf7, 0x74, 0x7b,
+  0xa3, 0x37, 0xd5, 0x04, 0x26, 0x2d, 0x03, 0x2e, 0xe7, 0x69, 0xa8, 0xf0,
+  0x5e, 0xb6, 0xb5, 0xa7, 0xda, 0x2b, 0x84, 0x59, 0xf4, 0xb5, 0x8d, 0x7e,
+  0xab, 0x14, 0x26, 0x23, 0x5c, 0x65, 0x17, 0xc4, 0x44, 0x11, 0x97, 0x1c,
+  0xd9, 0x32, 0xe6, 0x43, 0x39, 0x5b, 0x92, 0xe0, 0x2c, 0x41, 0x75, 0x31,
+  0x03, 0x97, 0xd8, 0xb6, 0xc5, 0xcc, 0xa0, 0x69, 0xb1, 0xf7, 0xa8, 0xdd,
+  0xa3, 0x10, 0x9a, 0xec, 0xca, 0x6e, 0x0c, 0x9d, 0xb3, 0x9b, 0x23, 0x66,
+  0x62, 0x89, 0xd3, 0xc4, 0x7a, 0x0d, 0x2d, 0x00, 0xc2, 0xb9, 0x55, 0x5a,
+  0x8c, 0xc8, 0xfa, 0xe9, 0x3a, 0xb5, 0xa6, 0x47, 0x1d, 0xc9, 0x24, 0xb9,
+  0xfd, 0x52, 0x3f, 0x1d, 0xb5, 0x31, 0x4e, 0x75, 0x11, 0x6e, 0x13, 0x8d,
+  0x8c, 0x8f, 0xe9, 0x98, 0x8c, 0xef, 0xed, 0xb7, 0xf8, 0x33, 0x29, 0x90,
+  0x2b, 0x56, 0x11, 0x7e, 0x2c, 0x53, 0x80, 0x5b, 0x8e, 0xe1, 0x3a, 0xe0,
+  0x45, 0xfb, 0x4b, 0x9d, 0xa6, 0xbf, 0xa3, 0x5a, 0x1c, 0xab, 0xd6, 0x98,
+  0x55, 0x7c, 0x8f, 0x1e, 0x40, 0x72, 0x12, 0xb1, 0xa6, 0x43, 0x3c, 0x14,
+  0x6c, 0x60, 0x0a, 0x1b, 0xdb, 0x51, 0xa9, 0x7a, 0x44, 0x9e, 0xa5, 0x94,
+  0xcb, 0x44, 0xf0, 0x09, 0xf5, 0x3e, 0x63, 0xb3, 0x13, 0xca, 0xf5, 0x95,
+  0x5c, 0xdc, 0xe2, 0x0c, 0x1f, 0x31, 0x21, 0x6e, 0xfc, 0xee, 0x87, 0x81,
+  0x65, 0xf7, 0xd1, 0xd5, 0xdc, 0xac, 0x39, 0x32, 0xe5, 0x06, 0x66, 0xb6,
+  0xeb, 0x07, 0xf9, 0x8b, 0xf9, 0xc8, 0xf7, 0x79, 0x61, 0x74, 0xc3, 0x7a,
+  0xdb, 0x57, 0x94, 0xc2, 0xb3, 0x4b, 0x65, 0x78, 0x6f, 0x08, 0xc9, 0xe5,
+  0x60, 0x69, 0xa4, 0x39, 0x73, 0x68, 0x82, 0x89, 0xb5, 0x8a, 0x69, 0xe2,
+  0x42, 0xa7, 0xb6, 0x60, 0xc7, 0xfd, 0x22, 0x80, 0xf4, 0x4b, 0x96, 0x13,
+  0x44, 0xc9, 0x95, 0x64, 0x23, 0x9b, 0x8e, 0x10, 0xfd, 0xfa, 0xd0, 0x46,
+  0xb2, 0x71, 0x75, 0x70, 0x76, 0xb6, 0x73, 0xee, 0x70, 0x1d, 0xcf, 0x48,
+  0xef, 0x82, 0x60, 0x0d, 0xcd, 0x2e, 0xc6, 0xb8, 0xf5, 0xcc, 0x8c, 0xac,
+  0x59, 0x6c, 0xed, 0x6d, 0x33, 0x83, 0xb2, 0xd4, 0x01, 0x2b, 0xdd, 0x75,
+  0x1f, 0x3a, 0x72, 0x08, 0x49, 0x97, 0xe0, 0x88, 0x6a, 0x00, 0x11, 0x7c,
+  0x59, 0x28, 0xb8, 0x81, 0xbc, 0xa2, 0x2b, 0x29, 0xc6, 0x0e, 0x65, 0x41,
+  0x80, 0x79, 0x40, 0xed, 0x46, 0x1c, 0xa8, 0x00, 0xb8, 0x2c, 0x88, 0x1c,
+  0xaa, 0xe6, 0x02, 0xd3, 0x5b, 0xae, 0xba, 0x8b, 0x90, 0x5b, 0x67, 0x39,
+  0xc7, 0xec, 0xcb, 0x6a, 0x36, 0x1d, 0x90, 0x00, 0xb9, 0xae, 0x4a, 0x73,
+  0x45, 0x56, 0x11, 0xba, 0x20, 0x31, 0x29, 0xa0, 0xea, 0x67, 0xc5, 0x6d,
+  0x5e, 0x95, 0x05, 0x68, 0xb2, 0x6e, 0xd3, 0x2a, 0x47, 0x4c, 0xbb, 0xf7,
+  0xcd, 0xd9, 0xdb, 0xe3, 0x9e, 0xef, 0x16, 0xb9, 0xca, 0xc5, 0x65, 0x4c,
+  0xeb, 0xd7, 0xf5, 0xc7, 0xea, 0x6a, 0x86, 0xe1, 0x9a, 0xc4, 0xdc, 0xe9,
+  0x46, 0xc9, 0xa1, 0x65, 0xbd, 0x95, 0x93, 0x44, 0x6a, 0xbd, 0x06, 0x83,
+  0x8d, 0x2e, 0x49, 0xf1, 0x6e, 0xb9, 0x9c, 0x1b, 0x70, 0x4f, 0xbb, 0x0d,
+  0x16, 0x02, 0x4e, 0xe0, 0x47, 0xb0, 0x06, 0x22, 0x38, 0x5d, 0x4b, 0x9f,
+  0xb6, 0x3e, 0xf1, 0xa8, 0xed, 0x49, 0xd3, 0xe7, 0x0d, 0xb0, 0xaa, 0x72,
+  0xd9, 0xe6, 0xfc, 0x9e, 0x0c, 0x9b, 0xcd, 0xd6, 0xae, 0x4b, 0x36, 0x6b,
+  0x32, 0xc6, 0x9b, 0x4d, 0x9d, 0x5e, 0x80, 0x23, 0xd7, 0xd4, 0x5f, 0x5c,
+  0xf5, 0x69, 0xde, 0xd5, 0xfc, 0x09, 0xd7, 0x3a, 0x37, 0xee, 0x4e, 0xdf,
+  0x41, 0x5f, 0xea, 0xce, 0x77, 0x45, 0x5a, 0x40, 0xce, 0x90, 0xba, 0xa4,
+  0x95, 0x76, 0x11, 0xa2, 0x76, 0xe0, 0x9c, 0x08, 0x13, 0x43, 0xc7, 0xa2,
+  0xf9, 0x7c, 0x39, 0x11, 0x9a, 0x0c, 0x17, 0x43, 0x94, 0xbc, 0x38, 0x49,
+  0x14, 0xe7, 0x5b, 0x8a, 0x97, 0xa2, 0xf0, 0xee, 0x67, 0x6a, 0x72, 0x05,
+  0x3f, 0x53, 0x9f, 0x39, 0xc2, 0x94, 0xa4, 0x26, 0x37, 0xca, 0x01, 0xb1,
+  0x05, 0x3b, 0x20, 0xa1, 0x7c, 0xaa, 0xaf, 0x2c, 0xb2, 0xbc, 0xee, 0xfd,
+  0xb0, 0x26, 0x3a, 0x74, 0x13, 0x87, 0xbe, 0xb0, 0x4b, 0xc6, 0x5c, 0x5e,
+  0xcc, 0x7c, 0x65, 0x29, 0x4d, 0xb4, 0xf4, 0x52, 0xa8, 0x24, 0x1f, 0xf4,
+  0x13, 0x99, 0x4f, 0x17, 0xb5, 0x07, 0xcf, 0x14, 0xa1, 0x51, 0xd8, 0xb2,
+  0xb1, 0x37, 0x57, 0x31, 0xe5, 0x8b, 0x91, 0x18, 0x35, 0x85, 0xae, 0x2f,
+  0x66, 0x62, 0xeb, 0x91, 0x34, 0x83, 0x63, 0xd7, 0x0e, 0x31, 0xa4, 0xdd,
+  0x22, 0x17, 0x4f, 0x18, 0xa5, 0x21, 0x15, 0xdd, 0x9a, 0xac, 0x84, 0x06,
+  0x40, 0xb0, 0xdb, 0x05, 0x07, 0x52, 0x91, 0xea, 0x9e, 0x42, 0xd4, 0x7c,
+  0x2d, 0x9d, 0x90, 0xce, 0xa9, 0xb5, 0xd3, 0xa2, 0x05, 0x88, 0xb8, 0x27,
+  0xa8, 0x7a, 0x7b, 0x3e, 0xa3, 0x68, 0xec, 0xec, 0x3e, 0x4a, 0xd2, 0xa0,
+  0x33, 0x6e, 0xc9, 0x3f, 0xa7, 0x25, 0xfb, 0x71, 0x19, 0x45, 0x91, 0x32,
+  0x43, 0x3d, 0x61, 0x32, 0x50, 0x6e, 0xd4, 0x72, 0xf3, 0xc7, 0x98, 0x99,
+  0x35, 0x7f, 0x64, 0x85, 0x09, 0x6b, 0xac, 0xec, 0x3d, 0xdf, 0xcc, 0xd6,
+  0x71, 0x0e, 0xa6, 0xa8, 0xf0, 0x8b, 0x8b, 0xd2, 0x3c, 0xb3, 0x3f, 0x5c,
+  0x53, 0x32, 0xd2, 0x8f, 0x69, 0x3c, 0xef, 0x18, 0x21, 0x4c, 0x39, 0x12,
+  0x33, 0x41, 0x28, 0xab, 0x4e, 0x6b, 0x36, 0xf0, 0x6a, 0x1c, 0x9e, 0x9e,
+  0xbf, 0x93, 0x72, 0xf4, 0xc4, 0xb4, 0x58, 0xd4, 0x4c, 0xdc, 0x8e, 0x1f,
+  0xdb, 0x52, 0xce, 0x91, 0xa2, 0x90, 0xb6, 0x8e, 0xcb, 0x55, 0xc4, 0x88,
+  0xd2, 0x2a, 0xcc, 0xc4, 0x82, 0xa0, 0x26, 0x8a, 0x28, 0x78, 0x6a, 0x46,
+  0x74, 0x87, 0x63, 0xbe, 0xe7, 0x7d, 0x16, 0xc2, 0x74, 0x7c, 0xef, 0xf2,
+  0x6b, 0xf8, 0xed, 0x2e, 0x57, 0x0e, 0x81, 0x3e, 0xa0, 0x9d, 0x06, 0x72,
+  0xbb, 0xc9, 0x2c, 0x9f, 0x8e, 0xd8, 0x6f, 0x96, 0x1f, 0x4a, 0x89, 0x97,
+  0x19, 0x76, 0x80, 0x84, 0x7a, 0xcd, 0xce, 0xad, 0x1f, 0x60, 0x72, 0x29,
+  0x16, 0x45, 0x90, 0x4a, 0x6d, 0xe7, 0x3b, 0x6a, 0x6d, 0x06, 0xe0, 0xd9,
+  0xf5, 0xf9, 0x4e, 0xda, 0x59, 0x62, 0x7c, 0x5e, 0xb3, 0xc4, 0xef, 0xfa,
+  0xfc, 0xd9, 0xf1, 0x92, 0xc4, 0x40, 0xe7, 0x1b, 0xb2, 0xbe, 0xac, 0x1e,
+  0xf1, 0x13, 0x52, 0x82, 0xdb, 0x91, 0x7b, 0x10, 0xcb, 0x50, 0x96, 0xce,
+  0xcd, 0xfd, 0x5f, 0x28, 0x00, 0x9e, 0x3c, 0xbc, 0x84, 0x52, 0xec, 0x4e,
+  0xe5, 0x32, 0x15, 0xc1, 0xe4, 0xf4, 0x82, 0x0e, 0x28, 0x9e, 0xbf, 0x01,
+  0x58, 0x0c, 0x37, 0x2e, 0xad, 0x47, 0x73, 0x9d, 0x5a, 0x92, 0x42, 0x83,
+  0x34, 0x5a, 0xb5, 0x82, 0x59, 0x06, 0xb9, 0x11, 0x5b, 0xbf, 0xca, 0x4c,
+  0xc0, 0xe4, 0x66, 0x59, 0x7c, 0x34, 0x5d, 0x08, 0x73, 0x31, 0x15, 0xc2,
+  0x9a, 0xa3, 0xc4, 0x60, 0xca, 0xfc, 0x98, 0x20, 0xb7, 0xd3, 0xd7, 0x89,
+  0xdd, 0xf0, 0x16, 0xfe, 0x3a, 0x29, 0x1b, 0xd8, 0x32, 0xb3, 0x62, 0xbd,
+  0x9b, 0xda, 0xa2, 0x26, 0x69, 0xe3, 0x26, 0x30, 0x0a, 0xd3, 0x76, 0x2b,
+  0x2d, 0xd5, 0xe5, 0xd8, 0xf8, 0xb8, 0xc6, 0xfd, 0x21, 0x6a, 0x25, 0xd4,
+  0x35, 0xe5, 0x3f, 0x21, 0x3f, 0x8c, 0x18, 0x1b, 0x81, 0xcc, 0x5b, 0xd6,
+  0x5c, 0x25, 0x5a, 0x96, 0x95, 0xf6, 0x83, 0x4f, 0x9a, 0x1c, 0xe9, 0x49,
+  0x3b, 0x31, 0x78, 0xdd, 0x3e, 0x10, 0xc7, 0xac, 0x4b, 0x22, 0x16, 0x68,
+  0x45, 0xed, 0x10, 0x8e, 0x54, 0xd8, 0xa4, 0x55, 0x51, 0x21, 0x22, 0xb9,
+  0x34, 0x45, 0xc9, 0x96, 0x78, 0x67, 0x66, 0x63, 0xc7, 0x38, 0xf2, 0xaf,
+  0x9b, 0x24, 0x37, 0x14, 0x6f, 0x9e, 0xec, 0x0f, 0x3b, 0x73, 0x54, 0xac,
+  0x14, 0x87, 0x7e, 0x05, 0x9b, 0x77, 0x46, 0xf8, 0x90, 0x24, 0xf4, 0x04,
+  0xe1, 0xbb, 0xae, 0x18, 0xd4, 0x91, 0x76, 0x1d, 0x5b, 0x84, 0x1e, 0x7f,
+  0x94, 0x1c, 0x6c, 0x0b, 0xb2, 0x77, 0x24, 0xf6, 0xcc, 0x7f, 0xba, 0xcd,
+  0x3d, 0x5a, 0x04, 0x42, 0x0d, 0xb1, 0x26, 0xba, 0x12, 0x96, 0xad, 0xf0,
+  0x61, 0xfd, 0x7a, 0x19, 0x68, 0x19, 0x25, 0xac, 0xb0, 0x8b, 0x89, 0xc1,
+  0xa2, 0x25, 0x05, 0x15, 0xec, 0xf2, 0xfb, 0xc8, 0x40, 0xfa, 0x9e, 0x74,
+  0x39, 0x9f, 0x46, 0xf3, 0xc7, 0x75, 0x69, 0xa5, 0xa0, 0x89, 0x1c, 0x01,
+  0x5a, 0x0b, 0x25, 0xae, 0x38, 0x79, 0x6d, 0xf6, 0x18, 0x29, 0xa5, 0xe4,
+  0x9b, 0xfd, 0xea, 0x3e, 0x59, 0xb1, 0xb8, 0xa0, 0x97, 0xb0, 0x11, 0x5c,
+  0x58, 0xf2, 0x54, 0x25, 0xd2, 0x43, 0x2b, 0x50, 0x2b, 0xd9, 0xd0, 0x83,
+  0xff, 0x73, 0x8e, 0x9b, 0x30, 0x55, 0xc7, 0x3d, 0x0f, 0xa4, 0x34, 0x22,
+  0x89, 0xf4, 0x66, 0xc9, 0x15, 0xbb, 0x85, 0x1f, 0xc8, 0x16, 0xab, 0xad,
+  0x32, 0xa4, 0x3b, 0x52, 0x87, 0xbd, 0x1e, 0x07, 0x05, 0x70, 0xd9, 0x5b,
+  0x5d, 0x67, 0xe6, 0x20, 0x72, 0x02, 0xcc, 0xb8, 0x2a, 0x3f, 0x66, 0xbc,
+  0xe9, 0x60, 0x44, 0xd0, 0x91, 0x4a, 0x55, 0x5b, 0xe2, 0xe0, 0x62, 0x3e,
+  0x9b, 0x5a, 0x20, 0x5e, 0x44, 0x63, 0xa5, 0xda, 0x0a, 0x92, 0x30, 0xee,
+  0x84, 0x61, 0xee, 0xf2, 0xb5, 0x95, 0xf5, 0x95, 0x97, 0x6b, 0x32, 0xc9,
+  0x22, 0xae, 0x06, 0x37, 0x17, 0x8d, 0x57, 0x4d, 0x32, 0x76, 0xec, 0x5b,
+  0xe7, 0xde, 0xa2, 0x3b, 0x57, 0x9f, 0x7c, 0xbb, 0xea, 0xfe, 0xc9, 0x8f,
+  0x2c, 0xe9, 0xe3, 0x4b, 0x26, 0x98, 0xbd, 0x04, 0x5f, 0x57, 0xf2, 0xd2,
+  0x6c, 0x2a, 0xf6, 0x7a, 0x51, 0xd8, 0xaa, 0xeb, 0xd0, 0x42, 0xe9, 0x8f,
+  0x81, 0x1a, 0x17, 0x53, 0x9b, 0x58, 0x75, 0x25, 0xe9, 0x06, 0x0c, 0xd7,
+  0x9f, 0xba, 0x72, 0x3c, 0x42, 0x2e, 0x8b, 0x6c, 0x79, 0xb3, 0x61, 0xc2,
+  0x43, 0xee, 0x3c, 0x35, 0x6c, 0x63, 0x42, 0xcd, 0xa6, 0xd5, 0x01, 0x69,
+  0x48, 0x5e, 0x3b, 0xd4, 0xd5, 0x7f, 0x10, 0xb4, 0xb5, 0x32, 0x17, 0x1c,
+  0x61, 0x9b, 0xf8, 0x4b, 0x81, 0xd6, 0xc9, 0x24, 0xf8, 0x36, 0xfd, 0x81,
+  0xb3, 0x97, 0x2d, 0x23, 0x06, 0x15, 0x43, 0xf2, 0xaf, 0x04, 0xe6, 0xbd,
+  0x4d, 0x8e, 0xc9, 0x2e, 0x89, 0xd8, 0x7c, 0x4a, 0x00, 0x80, 0x31, 0xe6,
+  0x42, 0x98, 0xc9, 0x20, 0x24, 0x31, 0xa0, 0x53, 0xc5, 0x17, 0x29, 0xc7,
+  0x9a, 0x2d, 0xf5, 0x1e, 0x39, 0xf5, 0xd4, 0x23, 0x41, 0xf1, 0x68, 0xa9,
+  0x0e, 0xfd, 0x91, 0xe5, 0xbf, 0x6f, 0xa9, 0xe1, 0xb0, 0x41, 0xd8, 0x34,
+  0x8d, 0x50, 0xc1, 0xa2, 0x37, 0x89, 0x7b, 0xa8, 0xef, 0xfd, 0xfd, 0xe0,
+  0xf3, 0xdd, 0xbe, 0xc8, 0x27, 0x8a, 0x67, 0xf9, 0xcf, 0xa0, 0xa4, 0x63,
+  0x44, 0x8d, 0xa0, 0xe7, 0xcc, 0x4f, 0xed, 0xa3, 0x6b, 0xf7, 0xce, 0x8b,
+  0xe1, 0xd3, 0xd6, 0xde, 0x69, 0x66, 0xf3, 0xc1, 0xdd, 0xf8, 0x01, 0x8f,
+  0xff, 0xe5, 0xe9, 0xdb, 0x64, 0xbe, 0x44, 0xcd, 0x3c, 0x61, 0x68, 0xbc,
+  0x9f, 0x65, 0xea, 0x7c, 0x25, 0xa7, 0x06, 0x3b, 0xc9, 0x6e, 0x60, 0x6c,
+  0x85, 0x60, 0xdd, 0x88, 0x6b, 0xdb, 0xa6, 0x07, 0x8a, 0xad, 0x2b, 0x15,
+  0x38, 0x12, 0x6a, 0x11, 0x4e, 0x5c, 0x4a, 0xef, 0x9d, 0xe5, 0xd1, 0x1c,
+  0x0e, 0x85, 0x50, 0x66, 0x9f, 0xb2, 0xc9, 0x12, 0xe1, 0x59, 0xd2, 0x99,
+  0x88, 0xd0, 0x65, 0xbd, 0xdb, 0xd8, 0x73, 0x15, 0x8b, 0x73, 0xd8, 0xfc,
+  0xa0, 0x3b, 0x19, 0x8e, 0xd0, 0x5e, 0x06, 0xcf, 0xa3, 0x0f, 0x9c, 0x46,
+  0x0c, 0x06, 0xc2, 0xef, 0xda, 0xbf, 0x0a, 0x22, 0xa4, 0x00, 0x6e, 0xd3,
+  0x25, 0x31, 0xcd, 0xea, 0xfc, 0xba, 0xe0, 0x8b, 0xf1, 0x6d, 0x3e, 0xa9,
+  0xca, 0xba, 0xbc, 0x62, 0x48, 0x92, 0x77, 0x63, 0x9e, 0x9c, 0x8c, 0x92,
+  0xbb, 0x6c, 0xac, 0xf9, 0x8f, 0xc3, 0xd0, 0x85, 0xca, 0x27, 0x8b, 0xc2,
+  0x02, 0x55, 0x9e, 0x35, 0x34, 0x6b, 0x1a, 0x08, 0x24, 0xd2, 0x16, 0x54,
+  0xab, 0x1c, 0x64, 0xc5, 0xb5, 0xb1, 0xe0, 0xa0, 0xd7, 0x52, 0x9d, 0x86,
+  0x19, 0xc4, 0xf5, 0x22, 0x2b, 0x23, 0xe1, 0x60, 0xee, 0x80, 0x8a, 0x5a,
+  0xde, 0x27, 0xb8, 0xd7, 0xc6, 0xa9, 0x54, 0x1c, 0x60, 0xab, 0xd8, 0x1c,
+  0x45, 0xba, 0xba, 0xc5, 0x5d, 0xf7, 0x91, 0x1c, 0x45, 0x41, 0x5a, 0x82,
+  0xad, 0x82, 0xdd, 0x22, 0x8f, 0x47, 0xc5, 0x86, 0x69, 0x59, 0x01, 0x83,
+  0xe3, 0x71, 0x82, 0x53, 0x19, 0x87, 0x65, 0x45, 0x9e, 0x52, 0xea, 0xde,
+  0x7d, 0x28, 0x63, 0xee, 0x6e, 0x4a, 0xae, 0x9d, 0x80, 0x69, 0x26, 0x71,
+  0x8d, 0x84, 0x4a, 0xce, 0xe1, 0x10, 0x7a, 0x5d, 0x29, 0x62, 0xa6, 0x32,
+  0xd8, 0x5f, 0xa8, 0x58, 0x0e, 0x86, 0xae, 0x87, 0xcb, 0x1f, 0x14, 0xa7,
+  0xc4, 0xeb, 0xfc, 0x7a, 0x45, 0xa9, 0x12, 0x76, 0x98, 0x68, 0xf5, 0x47,
+  0x56, 0xa6, 0xb8, 0x47, 0x72, 0x91, 0x54, 0x2c, 0x8d, 0x82, 0x12, 0x3c,
+  0x91, 0x3a, 0xc0, 0x7c, 0x07, 0xc4, 0x76, 0xdf, 0x2f, 0xc2, 0x6d, 0xfc,
+  0xb2, 0xd2, 0x28, 0x6b, 0x55, 0x22, 0xaf, 0x2f, 0xf6, 0x08, 0x44, 0x23,
+  0x8f, 0x4e, 0xf3, 0x09, 0xd8, 0x06, 0x1e, 0xd2, 0x83, 0xe2, 0x7e, 0x6a,
+  0x0d, 0xe4, 0x44, 0xfd, 0x1d, 0x1e, 0xe1, 0xab, 0xd6, 0xe9, 0xa3, 0xf5,
+  0x69, 0x47, 0x7a, 0xfc, 0xb3, 0x5b, 0xd2, 0x0f, 0xf6, 0x07, 0xe3, 0xcc,
+  0x28, 0x38, 0xd5, 0x9a, 0xdc, 0x83, 0x48, 0xf2, 0xc1, 0x57, 0x78, 0x27,
+  0xb9, 0x84, 0xe2, 0x41, 0x6b, 0x7a, 0x46, 0x15, 0xef, 0x93, 0xfd, 0xe1,
+  0xee, 0xa3, 0x72, 0x0f, 0x20, 0x09, 0x5a, 0x6d, 0xe8, 0xaa, 0xd1, 0x49,
+  0x2a, 0x8b, 0xbf, 0x2e, 0x8b, 0x36, 0xc9, 0x73, 0xcc, 0x27, 0x2d, 0xca,
+  0x84, 0xde, 0x45, 0xe4, 0x85, 0xef, 0xa2, 0x67, 0x7d, 0x76, 0xfc, 0xc1,
+  0x00, 0x06, 0x4d, 0xf5, 0x50, 0xf8, 0xae, 0x8e, 0x92, 0x30, 0xb4, 0x3a,
+  0x2b, 0x14, 0x31, 0x12, 0x29, 0x64, 0xba, 0x75, 0xf2, 0x6a, 0xf3, 0x61,
+  0xb2, 0x15, 0x56, 0xa0, 0xd4, 0x5d, 0xbc, 0x39, 0xea, 0x34, 0xf7, 0xfc,
+  0xb3, 0x67, 0xbb, 0xbf, 0x23, 0x32, 0xad, 0x24, 0x5f, 0x81, 0xd8, 0xd4,
+  0x51, 0x6e, 0x94, 0xef, 0x2b, 0x4a, 0x4d, 0x54, 0xab, 0xbb, 0x94, 0x87,
+  0xfc, 0xe4, 0xe9, 0xba, 0x99, 0x12, 0x4a, 0xc9, 0x72, 0x2b, 0x54, 0xaa,
+  0xfa, 0xfe, 0xf7, 0x3f, 0xc2, 0xd4, 0xc9, 0x1f, 0x7f, 0x86, 0x17, 0x1c,
+  0x75, 0x60, 0x2c, 0x8e, 0x5b, 0xa5, 0x4b, 0xed, 0xdc, 0x6b, 0x74, 0x8e,
+  0x37, 0xff, 0xb0, 0x99, 0x58, 0x6a, 0x7a, 0x30, 0x57, 0x06, 0x91, 0x59,
+  0x85, 0x32, 0xe6, 0x62, 0xa6, 0x4a, 0xef, 0x74, 0x59, 0x2b, 0xa9, 0xbc,
+  0x69, 0x1d, 0xf2, 0x3a, 0x0b, 0x42, 0xd9, 0x3e, 0x5d, 0x55, 0x73, 0x41,
+  0x59, 0xd6, 0x85, 0xb1, 0x5c, 0xdd, 0xc3, 0xe4, 0x14, 0x66, 0x48, 0x11,
+  0x46, 0x40, 0x8a, 0xd9, 0x29, 0x17, 0x13, 0x5f, 0xe1, 0xcb, 0x13, 0xe0,
+  0xcc, 0x7f, 0x9b, 0x15, 0xe8, 0x37, 0x77, 0xe5, 0x3f, 0xda, 0x7e, 0xbd,
+  0x32, 0xe9, 0x51, 0x7f, 0x3f, 0xfc, 0x61, 0x8f, 0x72, 0x3e, 0x7a, 0xdd,
+  0x26, 0x18, 0xbf, 0x6d, 0x57, 0x55, 0x07, 0x51, 0xaf, 0x23, 0x85, 0xd4,
+  0x0f, 0x52, 0x42, 0x69, 0x9f, 0x54, 0xa8, 0x7f, 0xa0, 0x4c, 0xed, 0x8f,
+  0x7b, 0x83, 0x67, 0x3f, 0xdb, 0x8f, 0xfe, 0x61, 0xef, 0xc3, 0x1f, 0xf6,
+  0x7b, 0xb1, 0x94, 0x1e, 0x97, 0xe0, 0xed, 0x01, 0xf3, 0x48, 0xbb, 0x2b,
+  0xee, 0x05, 0x87, 0x2f, 0x81, 0x35, 0x57, 0x25, 0x06, 0xd5, 0x8f, 0x22,
+  0x2c, 0x38, 0xe4, 0xc5, 0x19, 0xb2, 0xf3, 0xd4, 0xa9, 0x6d, 0x5a, 0x29,
+  0x46, 0x85, 0xc3, 0x5d, 0xc9, 0xef, 0x6b, 0x1a, 0x3c, 0x9d, 0x10, 0x41,
+  0x88, 0x07, 0x42, 0xb0, 0xc8, 0xda, 0xdb, 0x83, 0x38, 0x31, 0x94, 0x48,
+  0x21, 0x9c, 0x0d, 0x81, 0x03, 0x99, 0x8b, 0x2c, 0x4d, 0x3a, 0x93, 0x3e,
+  0x1e, 0xdb, 0x9f, 0x14, 0x59, 0x90, 0x6a, 0xa3, 0x69, 0x79, 0x6c, 0xca,
+  0xa8, 0x38, 0x28, 0x5b, 0xfe, 0x6e, 0xbe, 0x18, 0x78, 0xe4, 0x1a, 0x72,
+  0x4a, 0x70, 0xa4, 0x03, 0xc4, 0xcd, 0x5f, 0x09, 0xbd, 0xe0, 0xe3, 0x4b,
+  0xf8, 0x3a, 0x31, 0x0d, 0xe6, 0xae, 0x62, 0x25, 0xff, 0x4c, 0x42, 0x0e,
+  0x94, 0xc6, 0x8d, 0x32, 0x25, 0xb1, 0x24, 0xcc, 0x74, 0x4c, 0x45, 0x5c,
+  0x5a, 0xe4, 0xff, 0xa8, 0x65, 0x4b, 0x97, 0xcd, 0xd8, 0x71, 0x0a, 0xa5,
+  0xf5, 0x8a, 0x09, 0xf1, 0xa7, 0xc2, 0x9b, 0x04, 0x99, 0x28, 0x4c, 0xce,
+  0xfa, 0x5a, 0x1d, 0x03, 0xc2, 0x4c, 0x36, 0xd9, 0xc0, 0xcb, 0x7b, 0x44,
+  0x9e, 0x25, 0x7e, 0xaa, 0x29, 0x52, 0x13, 0x2e, 0x04, 0x80, 0x70, 0xd6,
+  0x20, 0x88, 0xc1, 0xd1, 0xd5, 0x34, 0xbd, 0x37, 0xd2, 0x90, 0x29, 0x16,
+  0x87, 0x16, 0xdd, 0xae, 0xf6, 0xb2, 0x48, 0x1b, 0xb3, 0xd5, 0x36, 0x07,
+  0x9b, 0xc9, 0x96, 0xb5, 0x72, 0xa6, 0x69, 0x7d, 0xb3, 0x1d, 0xf3, 0xc9,
+  0x39, 0x37, 0x98, 0x13, 0x54, 0x63, 0x31, 0xc3, 0xe9, 0xae, 0x64, 0x09,
+  0xb5, 0xee, 0x9a, 0x3e, 0x43, 0xc0, 0x83, 0xd1, 0x71, 0x03, 0x0f, 0xd2,
+  0xd1, 0xfa, 0xd9, 0x00, 0xa6, 0x3e, 0x7e, 0x9e, 0x0c, 0xfe, 0x2b, 0xbc,
+  0x17, 0xe4, 0x51, 0x06, 0x38, 0x0d, 0x38, 0xcd, 0xc5, 0x5d, 0xa0, 0x14,
+  0xbb, 0x4a, 0x5e, 0x2e, 0x6e, 0x2a, 0xa3, 0xf6, 0x85, 0xd9, 0x34, 0xa3,
+  0x6f, 0x12, 0xb8, 0x25, 0xa8, 0xce, 0x02, 0x3f, 0x63, 0x77, 0x87, 0x47,
+  0x4d, 0xf7, 0x3b, 0x32, 0xa1, 0x11, 0x76, 0x62, 0x90, 0xd6, 0x83, 0x40,
+  0xc5, 0xb9, 0x74, 0x69, 0x94, 0xec, 0x4e, 0x2a, 0xd9, 0x10, 0x21, 0xdc,
+  0x1e, 0x45, 0x92, 0x8a, 0x09, 0x6a, 0xab, 0x25, 0x3b, 0xc3, 0xe1, 0x0e,
+  0xc9, 0xac, 0x1d, 0xf3, 0x87, 0x98, 0x31, 0x40, 0x99, 0x76, 0xab, 0x5b,
+  0x98, 0x5d, 0x4e, 0xdf, 0x22, 0x7f, 0x88, 0x14, 0x48, 0x72, 0xbe, 0xe3,
+  0xfa, 0x6f, 0x4b, 0x20, 0x2f, 0x2b, 0xa3, 0x46, 0x56, 0x9c, 0xa9, 0x39,
+  0xef, 0x5c, 0x92, 0x41, 0x4d, 0x09, 0xf6, 0x33, 0xd7, 0xc2, 0x0b, 0xd0,
+  0xdc, 0x74, 0x92, 0x88, 0x18, 0x3a, 0x0d, 0x44, 0x6c, 0xde, 0x28, 0x1f,
+  0x13, 0xf2, 0x64, 0xd3, 0xb5, 0xbc, 0x12, 0x4f, 0xf7, 0xdb, 0x4e, 0x80,
+  0x45, 0x5e, 0x18, 0xd3, 0xc2, 0x28, 0xc5, 0xe0, 0xda, 0x23, 0xe4, 0x59,
+  0x98, 0xa5, 0xa1, 0x4c, 0xd2, 0xdd, 0xea, 0x02, 0xb6, 0xa0, 0xad, 0x5f,
+  0x3b, 0xd1, 0x95, 0xaf, 0xe0, 0xd8, 0xf5, 0x56, 0x70, 0x59, 0xf2, 0x47,
+  0xb6, 0xa9, 0x09, 0x0f, 0x9b, 0xba, 0xc8, 0x2c, 0x07, 0xba, 0xd0, 0x7a,
+  0xa4, 0x0c, 0x7c, 0xe1, 0x4a, 0xd1, 0x0c, 0xd9, 0x8d, 0xb9, 0x00, 0xac,
+  0x01, 0x6e, 0x0f, 0x94, 0xd7, 0x05, 0x33, 0x66, 0xa2, 0x2b, 0x34, 0x33,
+  0xff, 0xfa, 0xf8, 0x42, 0x34, 0x14, 0xa4, 0xfe, 0xba, 0x9a, 0x60, 0x61,
+  0xd1, 0x5b, 0xb2, 0x60, 0x9e, 0x3f, 0xb5, 0xe5, 0xe2, 0xea, 0x9b, 0x74,
+  0xff, 0xd9, 0x73, 0xe9, 0xb6, 0xf2, 0x22, 0xc1, 0x40, 0xda, 0xe4, 0x5f,
+  0xed, 0xec, 0x70, 0x90, 0x98, 0xac, 0xd2, 0x40, 0x2e, 0xa4, 0x52, 0xf4,
+  0x6e, 0xf3, 0xcf, 0x9b, 0xf1, 0x3c, 0x2a, 0x55, 0x59, 0xb5, 0x32, 0x15,
+  0xc2, 0x52, 0x60, 0x1c, 0xf4, 0xd9, 0xb4, 0xfb, 0xad, 0xba, 0xc6, 0xc8,
+  0xda, 0x08, 0x8a, 0x10, 0x7b, 0x74, 0xd9, 0xc2, 0x23, 0x20, 0xc5, 0x36,
+  0x12, 0xcd, 0x36, 0x1c, 0x26, 0x87, 0xfe, 0xec, 0x00, 0x6e, 0x85, 0x7a,
+  0x68, 0x93, 0x90, 0xac, 0x42, 0xc1, 0x5e, 0xb4, 0x20, 0x5e, 0xcb, 0x02,
+  0x79, 0x24, 0x22, 0x5a, 0x62, 0x70, 0xa3, 0x9d, 0xa7, 0x31, 0x08, 0xf6,
+  0x4f, 0x60, 0x31, 0x97, 0xe3, 0x20, 0x29, 0x42, 0xbe, 0xa9, 0x70, 0x20,
+  0x36, 0xe5, 0x3d, 0x50, 0x9c, 0x3b, 0x2e, 0xe6, 0x36, 0xa8, 0x38, 0x16,
+  0xe2, 0xd7, 0x7c, 0x5f, 0x4b, 0xb2, 0x4a, 0xdc, 0x26, 0x66, 0x5d, 0x72,
+  0xa6, 0xd8, 0x31, 0x6b, 0x4b, 0x61, 0x90, 0xe0, 0x1c, 0x98, 0xad, 0xb0,
+  0x43, 0xfb, 0x40, 0xac, 0x8c, 0x80, 0x86, 0x9b, 0x1c, 0xae, 0x2f, 0x86,
+  0xbb, 0x07, 0xc9, 0xd9, 0x22, 0x2b, 0xcc, 0xfc, 0xf7, 0x93, 0xaf, 0x8b,
+  0x25, 0xad, 0x07, 0x0d, 0xfa, 0xeb, 0xd1, 0xb7, 0x41, 0xb6, 0x3f, 0xbd,
+  0xf1, 0xf4, 0x09, 0xbd, 0xf1, 0x6e, 0xc4, 0x4f, 0xdd, 0x95, 0xb3, 0x2b,
+  0x2a, 0x5f, 0x7a, 0x74, 0x9f, 0x9a, 0x3f, 0x62, 0x8f, 0x7f, 0x46, 0x8f,
+  0x9b, 0x8d, 0x37, 0x6d, 0x66, 0x75, 0xec, 0xf7, 0xe8, 0xc0, 0x79, 0x39,
+  0x4b, 0x2b, 0x78, 0x6d, 0x79, 0xf3, 0xad, 0xe9, 0xf1, 0xd3, 0xa7, 0x91,
+  0x1e, 0xf7, 0x57, 0x74, 0x68, 0xf8, 0xcf, 0xf7, 0xe8, 0x0c, 0x7e, 0x30,
+  0xfa, 0xdb, 0x38, 0x9d, 0x7c, 0xc4, 0x4e, 0x04, 0x86, 0xdb, 0x52, 0x88,
+  0xfe, 0x9e, 0xd2, 0x9c, 0xf3, 0xcb, 0x1f, 0x53, 0xb1, 0xa2, 0x02, 0xc5,
+  0x56, 0x83, 0xb4, 0xe5, 0xcf, 0xf6, 0x9f, 0xec, 0xed, 0x3c, 0x1f, 0x3e,
+  0x1d, 0xee, 0x5b, 0x4c, 0x95, 0xd9, 0x58, 0xe6, 0xf3, 0x0d, 0x82, 0xdb,
+  0xab, 0xca, 0x4b, 0xe5, 0x85, 0x69, 0xc7, 0xcb, 0xa6, 0xaf, 0xd9, 0x63,
+  0xe4, 0xd0, 0x14, 0x94, 0x3b, 0xbf, 0xe7, 0x67, 0xe6, 0x0c, 0x23, 0xe5,
+  0x81, 0x28, 0x25, 0x9f, 0x3a, 0xa1, 0x5e, 0x0e, 0xaa, 0xef, 0x07, 0x98,
+  0xe3, 0x38, 0x37, 0xd6, 0x72, 0x53, 0x2e, 0xe1, 0x62, 0x26, 0xdf, 0x8d,
+  0xf2, 0x28, 0x43, 0x49, 0xc2, 0x38, 0xe8, 0x88, 0x45, 0x9c, 0x62, 0xdc,
+  0x79, 0x20, 0x57, 0x5d, 0x70, 0x86, 0xb3, 0x7f, 0x72, 0x2e, 0xd5, 0xc9,
+  0x34, 0xf7, 0xc6, 0x98, 0xe1, 0x92, 0xbc, 0xdf, 0x18, 0x5b, 0xe3, 0x16,
+  0x4e, 0xd4, 0xa0, 0x8c, 0x92, 0x54, 0x64, 0x21, 0x15, 0xd9, 0xba, 0xc1,
+  0x35, 0xe8, 0xef, 0x68, 0x8e, 0xe5, 0x07, 0x9c, 0x2f, 0xc0, 0xbe, 0x0f,
+  0x8c, 0x7b, 0x10, 0xe6, 0x72, 0x7a, 0xf5, 0xb3, 0xdc, 0x8a, 0x0b, 0x4b,
+  0x30, 0x65, 0xeb, 0xb0, 0xbb, 0xd7, 0x21, 0x63, 0xfd, 0xbc, 0xab, 0x98,
+  0xeb, 0xe5, 0x01, 0x3f, 0x84, 0xd0, 0x0c, 0xb4, 0x79, 0x06, 0xf8, 0x5f,
+  0x9d, 0x92, 0x5e, 0x7a, 0x0b, 0x06, 0x59, 0x3b, 0x9d, 0xaa, 0x47, 0xda,
+  0xe6, 0xaf, 0xde, 0x65, 0x4f, 0x7e, 0xfb, 0x5d, 0xb6, 0xff, 0xd8, 0x5d,
+  0xe6, 0x36, 0x19, 0x9d, 0xb3, 0x35, 0x5b, 0x0c, 0xb4, 0x4a, 0x52, 0xfe,
+  0x33, 0xbe, 0xcb, 0xfc, 0x6d, 0x06, 0x33, 0x35, 0xb6, 0xd1, 0x5a, 0xfb,
+  0xcc, 0x6e, 0xb3, 0x15, 0xbb, 0x8c, 0xc9, 0x88, 0x78, 0x8f, 0xad, 0xdf,
+  0x62, 0x9a, 0xf5, 0x9a, 0xac, 0xdf, 0x65, 0x6d, 0xea, 0xee, 0xf5, 0xfb,
+  0xcc, 0x6d, 0x87, 0x47, 0xef, 0x32, 0x71, 0x00, 0x8b, 0xd4, 0x59, 0xb1,
+  0xc5, 0x5a, 0x7b, 0x6c, 0x4d, 0x61, 0xa7, 0xbd, 0x17, 0xb1, 0x5d, 0xf6,
+  0xe4, 0x57, 0xef, 0xb2, 0xa7, 0xbf, 0xfd, 0x2e, 0x7b, 0xf2, 0xff, 0x97,
+  0x65, 0xff, 0xe3, 0x64, 0xd9, 0xde, 0x2f, 0x93, 0x65, 0xfb, 0x9d, 0x20,
+  0x9f, 0x51, 0x57, 0xd9, 0xcb, 0xfc, 0xa3, 0x7a, 0xfb, 0x0f, 0x76, 0x76,
+  0x7e, 0x86, 0xf3, 0xe4, 0x80, 0xee, 0xeb, 0x9f, 0x83, 0x2a, 0x7d, 0x59,
+  0x27, 0xaf, 0x90, 0x5f, 0x17, 0x7d, 0x4b, 0xf5, 0x31, 0x57, 0x3b, 0xd9,
+  0x12, 0x09, 0x4b, 0x49, 0xc9, 0x76, 0x73, 0xdf, 0x80, 0x40, 0x74, 0x51,
+  0xd9, 0xc8, 0xdb, 0xa1, 0xfb, 0x87, 0x2d, 0x6b, 0x9a, 0x26, 0xa3, 0xb3,
+  0xa3, 0x6f, 0x47, 0xf4, 0xcd, 0xf4, 0x23, 0xca, 0xc0, 0x46, 0xab, 0x53,
+  0x5e, 0xde, 0x78, 0x2d, 0xa9, 0x0f, 0x2b, 0x96, 0x50, 0x2f, 0xd4, 0x59,
+  0xde, 0x80, 0xe9, 0xbd, 0x20, 0xfd, 0x39, 0xff, 0xd4, 0xa6, 0x73, 0xf1,
+  0x0b, 0x74, 0xcb, 0x47, 0x6c, 0x1b, 0xb5, 0x26, 0x8e, 0x10, 0x1b, 0x7e,
+  0xfd, 0xd4, 0x34, 0x19, 0xa0, 0x14, 0xf1, 0x8b, 0x94, 0x7e, 0x23, 0xff,
+  0x78, 0x46, 0x1f, 0x46, 0xe0, 0x8f, 0xff, 0x79, 0x83, 0x7f, 0x73, 0x90,
+  0x5b, 0x0b, 0xbb, 0x67, 0xab, 0xa8, 0x63, 0x78, 0x46, 0xf4, 0x64, 0xb8,
+  0x6a, 0xf2, 0x64, 0x5f, 0xba, 0x0c, 0x2e, 0x7f, 0xcc, 0x64, 0xce, 0x22,
+  0x1f, 0x31, 0xc6, 0x49, 0xee, 0x9d, 0x2b, 0xb4, 0xfc, 0x74, 0x45, 0x2e,
+  0x46, 0x96, 0xf8, 0x24, 0x7e, 0x9a, 0xaa, 0xee, 0x97, 0x8b, 0x71, 0x61,
+  0x54, 0x59, 0x82, 0x3e, 0x33, 0x3a, 0x86, 0x90, 0x52, 0x62, 0x87, 0x97,
+  0x9e, 0xef, 0xed, 0x7e, 0x1e, 0xba, 0x7b, 0xdf, 0x6b, 0x06, 0x95, 0xe3,
+  0xb1, 0x43, 0x74, 0x1e, 0x68, 0xe6, 0xb1, 0x4b, 0x1c, 0x88, 0x7d, 0x34,
+  0x92, 0x66, 0x45, 0x16, 0x38, 0x65, 0xb8, 0x96, 0x53, 0x57, 0x65, 0x3c,
+  0x28, 0x7d, 0xcc, 0x99, 0xa3, 0x35, 0xc4, 0x94, 0x50, 0xb0, 0x4a, 0x8c,
+  0x39, 0x38, 0xae, 0xa8, 0xc8, 0x29, 0x51, 0x9e, 0x2f, 0x1d, 0x4b, 0xd6,
+  0x1f, 0x9f, 0xee, 0xd2, 0x9a, 0x6a, 0x23, 0x29, 0x97, 0x00, 0xe6, 0x3d,
+  0xf7, 0xc7, 0x27, 0xe9, 0xf0, 0x5f, 0xc8, 0x71, 0xf3, 0xac, 0x6d, 0xcb,
+  0xff, 0xa1, 0xcf, 0x71, 0x99, 0x6b, 0xa2, 0xe1, 0x18, 0x8c, 0xd3, 0x2a,
+  0x82, 0xd8, 0x17, 0x51, 0xac, 0xfc, 0x0d, 0xca, 0x7e, 0xa0, 0x6f, 0x81,
+  0xe5, 0x18, 0x38, 0x4f, 0xae, 0xe0, 0x63, 0x7f, 0x9e, 0x84, 0xcd, 0x75,
+  0x2a, 0x4e, 0xab, 0xc7, 0xa2, 0xcf, 0xbc, 0x43, 0x1e, 0xed, 0x50, 0x3a,
+  0xeb, 0x53, 0xf8, 0x2c, 0x42, 0x4e, 0xc3, 0xb7, 0x77, 0xeb, 0x23, 0x44,
+  0x20, 0x74, 0xe7, 0xd9, 0xf2, 0xcc, 0xfe, 0x7d, 0x05, 0xaf, 0xb9, 0x05,
+  0x03, 0x98, 0xdf, 0x53, 0x18, 0x34, 0x76, 0x9d, 0xd4, 0x93, 0x2a, 0x93,
+  0xe8, 0x04, 0x71, 0xc8, 0x21, 0xe4, 0x49, 0xec, 0x6b, 0xe6, 0x2a, 0xb9,
+  0xce, 0x34, 0x57, 0xcf, 0x8e, 0x5b, 0xf9, 0x18, 0x40, 0xc2, 0x30, 0x8c,
+  0x00, 0x64, 0x3d, 0x04, 0x8c, 0xad, 0x87, 0x98, 0x0a, 0x67, 0x03, 0xbd,
+  0xec, 0x38, 0xca, 0xec, 0x74, 0xb0, 0xab, 0x2e, 0x8c, 0x4a, 0xb6, 0x46,
+  0xc0, 0x20, 0x65, 0x80, 0xde, 0xf7, 0x76, 0xf7, 0x9f, 0x32, 0xd1, 0x85,
+  0xfd, 0x58, 0xd5, 0xb1, 0x7a, 0x90, 0x36, 0xaa, 0x47, 0xf8, 0xa5, 0x9e,
+  0xfe, 0x2f, 0x1e, 0x04, 0x85, 0x5b, 0x39, 0x71, 0x25, 0x1e, 0x0f, 0x3a,
+  0x23, 0x48, 0x12, 0x60, 0x22, 0xda, 0xc9, 0x4d, 0x26, 0x35, 0xcb, 0x7f,
+  0x69, 0x29, 0xe0, 0x4e, 0x9f, 0x18, 0x4c, 0x75, 0xd5, 0x2c, 0x86, 0xf3,
+  0xf2, 0xef, 0x66, 0x36, 0xd2, 0x61, 0x59, 0x5d, 0x07, 0x3b, 0xd7, 0xdc,
+  0x92, 0x05, 0x4f, 0x1d, 0xc5, 0x00, 0x0a, 0x6b, 0x31, 0xfa, 0x4c, 0x5a,
+  0x42, 0x17, 0xcc, 0x99, 0xd0, 0x49, 0x72, 0x64, 0x7a, 0x7c, 0xfc, 0xe1,
+  0xfd, 0xbb, 0xd1, 0xfb, 0xf3, 0xee, 0x01, 0x3d, 0x3f, 0xbb, 0xb8, 0x3c,
+  0x7e, 0xfd, 0xe1, 0xfc, 0xe2, 0xec, 0xf2, 0xec, 0xe8, 0xec, 0x34, 0xd9,
+  0xda, 0xdb, 0x5e, 0x9b, 0xfa, 0x63, 0xdd, 0x15, 0x1e, 0x5d, 0x9a, 0xf6,
+  0x9f, 0x45, 0x8b, 0xed, 0xc5, 0x16, 0x8d, 0x27, 0x6c, 0xed, 0x7b, 0x2d,
+  0x13, 0xde, 0xca, 0x59, 0xf3, 0x6a, 0xb8, 0x43, 0xfc, 0xa6, 0xc9, 0xf5,
+  0x92, 0x76, 0xb3, 0x1f, 0x07, 0x67, 0xba, 0xc0, 0x40, 0x5d, 0xd1, 0x80,
+  0x9c, 0x97, 0x35, 0xb2, 0xd6, 0x77, 0xf7, 0xac, 0x7b, 0xb7, 0xd3, 0x1a,
+  0x40, 0x65, 0x73, 0xbb, 0xa2, 0x5e, 0xbf, 0x2d, 0x98, 0x68, 0x02, 0x6c,
+  0xbc, 0xf6, 0x0d, 0x50, 0x95, 0x4b, 0x88, 0x04, 0xa9, 0x96, 0xac, 0x03,
+  0x0e, 0xa9, 0x18, 0x49, 0xe0, 0xe8, 0x96, 0x57, 0x4c, 0x7f, 0x8b, 0x9c,
+  0x05, 0xad, 0x74, 0x04, 0x21, 0x32, 0x54, 0x64, 0xe0, 0x50, 0xad, 0x79,
+  0x80, 0x7e, 0xeb, 0x09, 0x3f, 0xa4, 0xcc, 0x04, 0xee, 0x65, 0x7e, 0xf9,
+  0x0a, 0x65, 0xc4, 0xee, 0xbc, 0x4e, 0x51, 0x73, 0xa4, 0xbc, 0x80, 0x0e,
+  0x2d, 0x22, 0x08, 0x8f, 0x35, 0xfa, 0xc2, 0x79, 0x1f, 0x50, 0xc5, 0x40,
+  0x3b, 0xa2, 0xfc, 0x23, 0x23, 0x7f, 0x30, 0x0f, 0x6c, 0x64, 0x9e, 0x44,
+  0xf2, 0x84, 0xf7, 0x69, 0xed, 0xfb, 0xbc, 0xa1, 0xc3, 0xd2, 0xd6, 0xdd,
+  0x56, 0x1c, 0x8f, 0x87, 0xef, 0xbf, 0x42, 0x87, 0xc8, 0xab, 0xee, 0x46,
+  0xe3, 0x75, 0x45, 0x93, 0xff, 0xcc, 0x15, 0x10, 0x56, 0xea, 0xe6, 0x10,
+  0x03, 0x27, 0x65, 0x4b, 0x5a, 0x84, 0xe5, 0x60, 0x25, 0x5a, 0x07, 0xa3,
+  0x0a, 0x1f, 0x30, 0xf9, 0x84, 0xa0, 0x72, 0x38, 0xa7, 0x1b, 0x7c, 0x70,
+  0x47, 0xe7, 0x11, 0x4e, 0x01, 0x97, 0xe1, 0x0d, 0x99, 0xa8, 0x05, 0x19,
+  0x77, 0x87, 0xbb, 0xc9, 0xe8, 0xed, 0x57, 0x42, 0x24, 0xf7, 0xd5, 0x88,
+  0xf9, 0x07, 0x58, 0x13, 0xd5, 0x57, 0x86, 0x71, 0xb6, 0x1e, 0x76, 0x54,
+  0x92, 0xba, 0x41, 0xbd, 0xfb, 0x13, 0xfe, 0xa6, 0xd0, 0x58, 0xfe, 0xb9,
+  0x1b, 0xb6, 0x3f, 0xee, 0x7e, 0x34, 0x2f, 0x9a, 0xa3, 0x23, 0x65, 0xed,
+  0x7a, 0x2a, 0xe5, 0x2d, 0x79, 0xd0, 0xc3, 0xf5, 0xbc, 0x45, 0xfb, 0xc1,
+  0x79, 0xf8, 0xcd, 0x4e, 0x82, 0x06, 0x5f, 0xad, 0x54, 0xee, 0x4e, 0xc7,
+  0xb9, 0x1b, 0x25, 0x4d, 0x5e, 0x46, 0xf9, 0x1f, 0xf0, 0xf6, 0xce, 0xb2,
+  0x2b, 0x68, 0x5a, 0xc8, 0xcb, 0xea, 0xe3, 0x97, 0x08, 0x6d, 0x59, 0xd8,
+  0x52, 0x94, 0xdd, 0x07, 0x6d, 0xa4, 0x13, 0x5f, 0x73, 0x55, 0xc2, 0xab,
+  0xee, 0x1c, 0xfc, 0x09, 0xf5, 0xfd, 0x98, 0xed, 0x33, 0xaf, 0xbd, 0x84,
+  0xfe, 0x82, 0x58, 0xb8, 0x72, 0x8d, 0x5e, 0x79, 0x67, 0x69, 0x46, 0x89,
+  0x5e, 0xf7, 0x9c, 0x23, 0x16, 0xa0, 0xdd, 0xa1, 0xed, 0x4c, 0x93, 0x2d,
+  0x1f, 0xb3, 0xe8, 0xa5, 0x3a, 0x14, 0xc6, 0x16, 0x63, 0x76, 0xca, 0x4a,
+  0xd5, 0x97, 0x50, 0x36, 0x0e, 0x92, 0xe4, 0x75, 0x56, 0xdc, 0xab, 0x6c,
+  0x74, 0xd0, 0x22, 0x70, 0x33, 0xdc, 0xb2, 0x23, 0x9a, 0x7d, 0xca, 0xcc,
+  0x77, 0x53, 0x03, 0x94, 0x60, 0xbb, 0x18, 0x76, 0xa9, 0xdd, 0xe7, 0x98,
+  0x04, 0x78, 0x65, 0xa7, 0x41, 0xb2, 0x83, 0xfd, 0xb9, 0xd8, 0x02, 0x05,
+  0x80, 0xc6, 0xde, 0xf0, 0x3d, 0x6d, 0x71, 0xed, 0x34, 0x6c, 0x83, 0x86,
+  0x1d, 0xf9, 0xd0, 0x44, 0xca, 0xf7, 0x57, 0x94, 0x48, 0x25, 0xa5, 0x7d,
+  0x96, 0xc2, 0x31, 0xc1, 0x53, 0x21, 0x70, 0x34, 0x23, 0xdf, 0xcc, 0x33,
+  0x1c, 0x2f, 0x0a, 0x7d, 0xc3, 0x54, 0x16, 0x03, 0x71, 0x41, 0x65, 0x2c,
+  0x6e, 0x6f, 0x02, 0x74, 0x6a, 0x5d, 0x5a, 0xce, 0xc1, 0xc6, 0x0a, 0x61,
+  0x39, 0xb8, 0x22, 0xe9, 0xc4, 0x18, 0xa7, 0xce, 0x35, 0xc6, 0xb3, 0xc9,
+  0xb8, 0x3a, 0x8b, 0x7c, 0xa4, 0xc7, 0x57, 0xb6, 0xa5, 0x32, 0xaf, 0xee,
+  0xff, 0x89, 0xfe, 0x08, 0x47, 0xd1, 0xa6, 0x06, 0xa6, 0x9c, 0x03, 0x39,
+  0xec, 0xf4, 0x38, 0x04, 0x08, 0x5e, 0x5f, 0xf5, 0x81, 0x57, 0x4e, 0xa0,
+  0xae, 0x6f, 0x1b, 0xc2, 0xe7, 0x31, 0x1f, 0x78, 0x5f, 0x28, 0x69, 0x96,
+  0xee, 0xef, 0x85, 0x25, 0xac, 0xbe, 0x4b, 0xab, 0x02, 0xd0, 0x66, 0x5f,
+  0xf1, 0xe7, 0x1a, 0xf1, 0x4c, 0x6e, 0x97, 0x5e, 0x11, 0x28, 0xb4, 0xca,
+  0x1c, 0xbb, 0x26, 0xad, 0x23, 0x13, 0xaa, 0x08, 0x61, 0xaf, 0xc2, 0x7f,
+  0x17, 0x65, 0xc3, 0xd4, 0xc1, 0x84, 0x22, 0x25, 0x9d, 0xa1, 0x22, 0x07,
+  0x87, 0x37, 0xc9, 0xaa, 0x11, 0x52, 0x6b, 0x76, 0x37, 0x51, 0x4b, 0xcb,
+  0x05, 0x05, 0xe9, 0x04, 0xcb, 0xc4, 0x01, 0x4f, 0x4f, 0xcc, 0xc8, 0xe7,
+  0x18, 0xf4, 0x04, 0xc7, 0x8c, 0x8b, 0xa9, 0xa5, 0xb7, 0x25, 0x71, 0xc7,
+  0x3b, 0x28, 0x30, 0x14, 0x21, 0xb7, 0x4b, 0x2e, 0xe3, 0xf4, 0xf7, 0x0e,
+  0x75, 0x22, 0x06, 0x05, 0xb9, 0x61, 0x00, 0x0a, 0x02, 0x4d, 0xb6, 0x97,
+  0x76, 0xc2, 0xe7, 0x5b, 0x9b, 0x03, 0x34, 0x21, 0x65, 0x4e, 0x2f, 0xb3,
+  0x27, 0x0b, 0x0e, 0x19, 0x89, 0xb5, 0xa5, 0x32, 0x91, 0x7a, 0x88, 0x84,
+  0x7b, 0x2a, 0xbe, 0x4a, 0xf7, 0x87, 0xa6, 0xd5, 0x74, 0xf8, 0x81, 0x7d,
+  0x97, 0x99, 0x77, 0xab, 0x5a, 0xe8, 0xa4, 0x53, 0x18, 0x87, 0x0f, 0x88,
+  0xf1, 0x4f, 0xf7, 0x8a, 0xd5, 0x5a, 0x2b, 0xc2, 0x17, 0xc8, 0x1e, 0x35,
+  0x13, 0x9d, 0x37, 0x58, 0xb0, 0x0e, 0x58, 0x54, 0x31, 0x94, 0xcc, 0x57,
+  0x6c, 0x0e, 0xdf, 0xb2, 0x7b, 0xe4, 0x0b, 0x0d, 0x92, 0x49, 0xbd, 0xf0,
+  0xc6, 0x95, 0x9a, 0x81, 0x2a, 0x21, 0x4e, 0x0b, 0xe6, 0x4c, 0xf7, 0x68,
+  0xe4, 0xa9, 0x4a, 0x2a, 0x85, 0xcd, 0xe2, 0xde, 0xb6, 0x1d, 0xcb, 0x1d,
+  0x62, 0x36, 0x4c, 0x31, 0x1d, 0x18, 0x21, 0xb0, 0x58, 0xe3, 0x5f, 0xfc,
+  0xd4, 0xd7, 0x41, 0xb7, 0x50, 0xa6, 0x3e, 0x5b, 0x01, 0xff, 0x84, 0xb1,
+  0x6c, 0x32, 0x77, 0x21, 0x72, 0xd9, 0xe8, 0x03, 0x4f, 0x62, 0x33, 0x19,
+  0x43, 0xcb, 0x75, 0x63, 0xb9, 0xb6, 0xbe, 0x77, 0x8c, 0x48, 0x9d, 0x67,
+  0x10, 0x13, 0xa8, 0x13, 0xb6, 0x0a, 0x61, 0xc4, 0x73, 0x27, 0xd3, 0xf6,
+  0x9e, 0x13, 0x7b, 0xd0, 0x22, 0xec, 0x1d, 0x3a, 0xd6, 0x34, 0xdb, 0xde,
+  0x97, 0xd8, 0x57, 0x13, 0xcc, 0x23, 0xe8, 0x7c, 0x84, 0x93, 0x5b, 0x9e,
+  0x84, 0xa3, 0xd1, 0x97, 0x76, 0xf1, 0xd5, 0x8e, 0x38, 0x3f, 0x20, 0x27,
+  0xf1, 0x21, 0xea, 0x58, 0xbe, 0x36, 0x51, 0x7e, 0xc5, 0x62, 0xc4, 0x38,
+  0x22, 0xa6, 0x1d, 0xe8, 0xa7, 0xfe, 0x7c, 0x92, 0x52, 0xbc, 0x34, 0x8e,
+  0x3b, 0x1b, 0xc9, 0x79, 0x1b, 0xe8, 0x53, 0x24, 0xa7, 0x15, 0xf4, 0xc7,
+  0x4a, 0x2b, 0x7f, 0x1c, 0x95, 0x5d, 0x3e, 0x35, 0x6b, 0x0b, 0x9d, 0xea,
+  0xe7, 0x98, 0x1f, 0x42, 0x80, 0x1d, 0xd2, 0xae, 0xfb, 0xa7, 0xff, 0xdb,
+  0x4f, 0xfd, 0x98, 0x90, 0x86, 0x5f, 0x6e, 0xa5, 0x5b, 0xa1, 0xfd, 0x99,
+  0x97, 0xe6, 0x44, 0xaf, 0x1b, 0x14, 0x1e, 0xfa, 0x35, 0x83, 0x0a, 0x46,
+  0x85, 0x61, 0x60, 0xbe, 0x83, 0x35, 0xe1, 0xcf, 0xac, 0xf1, 0x82, 0xae,
+  0x18, 0x82, 0x69, 0x71, 0x4d, 0x01, 0x46, 0x6f, 0x18, 0xf6, 0xc1, 0x5f,
+  0x3a, 0x92, 0x87, 0xa7, 0x11, 0x5b, 0x83, 0xfe, 0xfb, 0xe3, 0x01, 0xfc,
+  0x5e, 0xd3, 0x9f, 0x57, 0xf6, 0xe3, 0xb8, 0x2f, 0x7d, 0xf9, 0x1d, 0xba,
+  0x91, 0x2f, 0x6e, 0xc8, 0xa9, 0xf1, 0x32, 0x96, 0xf2, 0xe1, 0x4d, 0x84,
+  0x3c, 0xf6, 0xdb, 0x7f, 0xbf, 0x9a, 0x39, 0x1e, 0x95, 0x35, 0xdf, 0x97,
+  0xc7, 0x7e, 0xf3, 0xef, 0xf3, 0xd9, 0x7d, 0xd0, 0x81, 0x02, 0x41, 0xf5,
+  0x5a, 0x20, 0xc4, 0x11, 0x99, 0xf8, 0xab, 0x85, 0xa2, 0xc0, 0x92, 0x43,
+  0xa9, 0x28, 0x1f, 0x8b, 0x12, 0xdb, 0x8b, 0x58, 0x84, 0x54, 0xfc, 0x4d,
+  0x24, 0x18, 0x44, 0x73, 0x38, 0x39, 0x52, 0x69, 0xe2, 0x25, 0xff, 0xb9,
+  0x82, 0x7b, 0xf3, 0x98, 0xee, 0x3f, 0x2d, 0x4a, 0x81, 0x2a, 0x07, 0x9c,
+  0x93, 0x2e, 0xba, 0xae, 0x65, 0xe8, 0xa7, 0x69, 0xb2, 0xc5, 0x4c, 0xe8,
+  0xd5, 0x58, 0x29, 0x0c, 0x99, 0x1b, 0xc5, 0x6a, 0xaa, 0x4b, 0xde, 0x81,
+  0x74, 0x48, 0xe5, 0xc8, 0xbc, 0x2f, 0xd6, 0xab, 0xea, 0x1a, 0x75, 0x2b,
+  0x0a, 0x3a, 0x7a, 0xcc, 0x6f, 0xfa, 0x52, 0x89, 0xc2, 0xb4, 0x46, 0xfb,
+  0x49, 0x80, 0x8a, 0xe2, 0xe8, 0x97, 0x85, 0x0c, 0x79, 0x44, 0xa4, 0x5a,
+  0x34, 0x80, 0xf3, 0x00, 0x66, 0xd2, 0x08, 0x8f, 0xce, 0xde, 0xbd, 0x3b,
+  0x3e, 0xea, 0x06, 0xd3, 0x6c, 0xed, 0x3e, 0xa7, 0xe4, 0x07, 0xa5, 0xd0,
+  0xf0, 0x79, 0x50, 0x5c, 0x4b, 0xfc, 0x84, 0xbf, 0x8f, 0x1a, 0x29, 0x9c,
+  0x9e, 0xa2, 0xbf, 0x14, 0x06, 0x71, 0xe6, 0x87, 0x94, 0xb5, 0x8f, 0xe4,
+  0x17, 0x05, 0x3b, 0xc1, 0x2f, 0x4a, 0xc0, 0xf1, 0x00, 0xaa, 0x94, 0x27,
+  0x60, 0x4d, 0x18, 0x98, 0xd2, 0x0b, 0xc0, 0x9a, 0xa7, 0xd3, 0x1d, 0x41,
+  0x0d, 0xeb, 0xb7, 0x57, 0xed, 0x62, 0x26, 0x94, 0xa2, 0x94, 0x8c, 0x41,
+  0x79, 0xc5, 0x55, 0x19, 0xe7, 0x69, 0xf5, 0x91, 0x22, 0x71, 0x5e, 0x72,
+  0x06, 0x52, 0xd6, 0x40, 0x6f, 0x3b, 0x9d, 0xc6, 0x52, 0xa1, 0x53, 0x78,
+  0x64, 0x3d, 0x48, 0xba, 0x74, 0x46, 0x2a, 0x99, 0x1d, 0x68, 0x26, 0x19,
+  0xbd, 0x5e, 0x64, 0x77, 0xf4, 0x19, 0x26, 0x79, 0xa0, 0x94, 0xe6, 0x90,
+  0x16, 0x9d, 0xa9, 0x78, 0xd9, 0x81, 0x7e, 0x2f, 0xa9, 0xd4, 0xb4, 0x54,
+  0x73, 0x26, 0x1e, 0x07, 0xeb, 0x2b, 0xd5, 0xf2, 0xe1, 0x8c, 0x8b, 0x60,
+  0xae, 0xbe, 0x11, 0xd2, 0xb6, 0x4e, 0xec, 0xa8, 0xcd, 0x49, 0xe5, 0xd1,
+  0xb3, 0x8c, 0x33, 0x8f, 0xce, 0x2d, 0xbc, 0x78, 0xec, 0x76, 0xc0, 0x5c,
+  0x63, 0x21, 0xc8, 0x52, 0x11, 0xd6, 0x78, 0xc9, 0x69, 0xd1, 0xf5, 0x4d,
+  0x57, 0x86, 0xb9, 0xfc, 0x8f, 0x2b, 0xa4, 0x3f, 0xa6, 0xe5, 0xa3, 0x15,
+  0xb7, 0x80, 0x3b, 0xb0, 0xb4, 0xbb, 0x33, 0x64, 0x5f, 0xd1, 0x83, 0xb3,
+  0x8e, 0x54, 0x01, 0xcc, 0x6e, 0x1d, 0x69, 0x60, 0xb4, 0x7e, 0xf2, 0xc5,
+  0x64, 0xab, 0x84, 0xf4, 0x47, 0xa6, 0xea, 0xe3, 0x87, 0x7e, 0x7b, 0x49,
+  0xbd, 0xbe, 0x68, 0xb2, 0xbb, 0x2a, 0xec, 0x73, 0xbf, 0x47, 0x0f, 0xa2,
+  0x55, 0x88, 0x5b, 0xdf, 0x7e, 0xfc, 0x67, 0x03, 0x8a, 0xb1, 0xc7, 0xdd,
+  0x42, 0x8e, 0x3e, 0xcf, 0xf1, 0xe7, 0x05, 0xf5, 0x05, 0xee, 0xc2, 0xd4,
+  0xa1, 0xd6, 0x0d, 0xb5, 0xf6, 0x4e, 0x72, 0x09, 0xd5, 0xfe, 0xb5, 0xd4,
+  0x3d, 0x31, 0xed, 0xbe, 0xd8, 0xae, 0x48, 0xcc, 0xf5, 0x71, 0x57, 0xd4,
+  0x83, 0x57, 0x52, 0x2b, 0xf5, 0xb0, 0x8b, 0xce, 0xb1, 0x99, 0x47, 0x8f,
+  0x9c, 0xb8, 0x48, 0x1e, 0x5e, 0xf2, 0x4f, 0x5e, 0xdf, 0x48, 0x77, 0x6a,
+  0x5d, 0xde, 0xf8, 0x4a, 0x6b, 0x12, 0x1e, 0x23, 0xab, 0x83, 0x29, 0x71,
+  0x6b, 0x10, 0xb9, 0xbb, 0xc3, 0x59, 0x58, 0x07, 0xbe, 0x76, 0xdb, 0x13,
+  0x4f, 0xfd, 0xe6, 0xc7, 0x82, 0xd0, 0x16, 0xf9, 0x44, 0x60, 0xe5, 0x2f,
+  0x8b, 0x07, 0xb8, 0xf0, 0xda, 0x21, 0x58, 0x09, 0xc1, 0x08, 0x78, 0x98,
+  0x1b, 0xd2, 0x5c, 0x26, 0xf8, 0xbc, 0xf1, 0x89, 0x80, 0xf6, 0x42, 0x80,
+  0xb2, 0x11, 0x1c, 0x85, 0x1f, 0x25, 0x79, 0x12, 0xed, 0x6d, 0x3d, 0x1b,
+  0xa0, 0x0f, 0x94, 0xea, 0x15, 0x68, 0x7e, 0x6e, 0xae, 0x3a, 0xcf, 0xfd,
+  0xf6, 0xd3, 0xd6, 0xcc, 0x6a, 0x5a, 0xcb, 0xc7, 0x88, 0x34, 0xff, 0xd1,
+  0xdf, 0xa3, 0x1f, 0x36, 0xee, 0xfe, 0x92, 0x83, 0xea, 0x6b, 0x7b, 0x62,
+  0x1f, 0xfe, 0x3d, 0x7a, 0x82, 0x44, 0xb2, 0xe8, 0x1e, 0x6a, 0xf5, 0x01,
+  0x8f, 0xfd, 0x1e, 0xdf, 0xbf, 0xdd, 0x5b, 0xf5, 0x59, 0xd4, 0x32, 0xc2,
+  0x13, 0xbf, 0xe1, 0x87, 0xdf, 0x5b, 0x15, 0x9d, 0x93, 0xee, 0x5e, 0xd2,
+  0x7f, 0x0f, 0x74, 0x86, 0xd7, 0x16, 0x49, 0xf0, 0x52, 0xee, 0x5a, 0xc8,
+  0x09, 0x57, 0xa2, 0xb1, 0x9b, 0x54, 0xfa, 0x28, 0x1c, 0x92, 0x64, 0xb9,
+  0x71, 0xfe, 0xbe, 0xd0, 0xf5, 0x81, 0x49, 0x75, 0xa0, 0x2c, 0x20, 0xa2,
+  0x57, 0x6a, 0xc2, 0xb5, 0xe4, 0xcf, 0x26, 0x92, 0x17, 0xdf, 0xe5, 0x41,
+  0x70, 0x97, 0x15, 0x9d, 0xe6, 0xb8, 0x08, 0x6e, 0x20, 0x82, 0xef, 0xb5,
+  0xb0, 0x95, 0xcf, 0xee, 0x1d, 0x44, 0x4a, 0x67, 0xcc, 0x98, 0xb3, 0x72,
+  0xfc, 0x08, 0x2c, 0x48, 0x29, 0x6a, 0xc7, 0x58, 0x37, 0x66, 0x53, 0x22,
+  0xa0, 0x7d, 0xe7, 0x18, 0x96, 0xc5, 0x18, 0x78, 0x08, 0x0e, 0x2f, 0x5a,
+  0x79, 0x90, 0xf4, 0x06, 0xef, 0x93, 0x83, 0xde, 0xef, 0x88, 0x67, 0xf6,
+  0x4c, 0xb5, 0x7f, 0x0e, 0x9e, 0x15, 0xaf, 0x99, 0x2d, 0xa6, 0x8d, 0x20,
+  0x66, 0xc4, 0x5b, 0xfc, 0x10, 0x4c, 0x8a, 0x61, 0x51, 0xdd, 0x05, 0x50,
+  0x83, 0xcc, 0x83, 0x48, 0xb5, 0x63, 0xe6, 0x35, 0x5f, 0x8d, 0x0e, 0x1e,
+  0xd5, 0x42, 0x44, 0xc5, 0xb0, 0x52, 0x80, 0x47, 0x51, 0xa4, 0xcf, 0x81,
+  0xa3, 0x80, 0xd1, 0x0b, 0xa1, 0x51, 0x01, 0x18, 0x6a, 0x05, 0x6f, 0x68,
+  0x1c, 0x1a, 0xd5, 0xd7, 0x30, 0x2e, 0xd3, 0x99, 0xcd, 0x84, 0xd0, 0xc7,
+  0x2b, 0x37, 0xd8, 0x3d, 0x20, 0x48, 0xfa, 0x42, 0xee, 0xac, 0x75, 0x02,
+  0x93, 0xd3, 0x30, 0xd9, 0xba, 0xf4, 0xfc, 0xe2, 0x8e, 0x5f, 0x86, 0x4c,
+  0x1a, 0x3d, 0xea, 0x11, 0xef, 0x23, 0x28, 0x45, 0x3f, 0xdb, 0x8e, 0xee,
+  0xa2, 0xec, 0x57, 0xa0, 0xad, 0x28, 0x8e, 0xf6, 0xab, 0xf0, 0x56, 0x6d,
+  0xc3, 0xc2, 0x4b, 0xa8, 0x46, 0xd1, 0x5e, 0xda, 0x22, 0x31, 0xb6, 0x47,
+  0x31, 0x66, 0x22, 0x65, 0x29, 0x7c, 0xe3, 0x15, 0x8c, 0xb2, 0x3c, 0xa4,
+  0x2a, 0xdb, 0xac, 0xe1, 0x20, 0x8f, 0x51, 0x47, 0x52, 0x3b, 0x92, 0xe9,
+  0xd2, 0xa5, 0x14, 0x60, 0xd2, 0x10, 0x4d, 0x85, 0xa4, 0x0c, 0x27, 0xdb,
+  0x7a, 0xaf, 0x47, 0xff, 0xd5, 0x1e, 0x9b, 0x09, 0x08, 0x65, 0x2d, 0x2d,
+  0xab, 0x72, 0xec, 0x49, 0x97, 0x41, 0x3e, 0x6b, 0xeb, 0x22, 0x97, 0x5c,
+  0x89, 0xd8, 0xf3, 0xeb, 0xf3, 0xfa, 0x47, 0x4b, 0xa3, 0x2c, 0x88, 0xbe,
+  0x98, 0x52, 0x5a, 0xc6, 0x0a, 0x50, 0x6d, 0x78, 0x6e, 0xe9, 0x6d, 0x62,
+  0xdb, 0x07, 0x08, 0xd4, 0xe6, 0xb9, 0x93, 0x8f, 0x0e, 0x48, 0x55, 0xdd,
+  0x1c, 0xd1, 0xe3, 0x93, 0x4f, 0xfc, 0x2e, 0x72, 0x38, 0x41, 0x6c, 0x42,
+  0x4b, 0xe5, 0xef, 0x58, 0x4d, 0x91, 0xd2, 0x25, 0x65, 0x4e, 0x43, 0xde,
+  0x25, 0x9d, 0xa6, 0x86, 0x0a, 0xda, 0x12, 0x4b, 0x52, 0x85, 0x88, 0xa5,
+  0x5d, 0x93, 0x3e, 0xed, 0x5e, 0x96, 0x3c, 0xa2, 0xc5, 0x0e, 0x16, 0x2a,
+  0x6c, 0xba, 0x83, 0xbd, 0x97, 0x46, 0x56, 0x94, 0x7b, 0xfc, 0x1d, 0x60,
+  0x7a, 0xbf, 0x06, 0xa5, 0xf7, 0x3b, 0xc3, 0xf4, 0x3c, 0x81, 0x49, 0xd2,
+  0x37, 0x94, 0x96, 0x70, 0x2c, 0x51, 0xa2, 0x13, 0xc7, 0xcc, 0xee, 0x52,
+  0xcb, 0xc6, 0x1b, 0xd3, 0x55, 0xa3, 0x27, 0xa9, 0xdf, 0x82, 0x3c, 0x78,
+  0xa2, 0x44, 0xe5, 0x2e, 0x03, 0x8f, 0xa8, 0x0e, 0xc0, 0x8a, 0xec, 0xdd,
+  0x8c, 0xb2, 0x74, 0xa6, 0x99, 0x64, 0xde, 0xff, 0xc9, 0x91, 0xe1, 0xfe,
+  0x9e, 0x39, 0x37, 0x34, 0xbc, 0xbd, 0xe1, 0x6e, 0xf2, 0xd2, 0xbb, 0x96,
+  0xbe, 0x88, 0xdc, 0x4b, 0x41, 0x2a, 0x20, 0x8e, 0x5a, 0x42, 0xaf, 0xaa,
+  0xf5, 0xb4, 0x52, 0xe8, 0xc5, 0x0f, 0x0c, 0x8a, 0xef, 0xc0, 0x29, 0xa6,
+  0xe2, 0x4d, 0x8b, 0x4c, 0xaf, 0x10, 0x70, 0x42, 0x26, 0xa4, 0x4c, 0xa1,
+  0xc6, 0xa8, 0x18, 0x67, 0xcd, 0x5d, 0x96, 0x09, 0xad, 0x8f, 0x4e, 0xa3,
+  0x27, 0x03, 0xac, 0x3c, 0x5c, 0x19, 0x1b, 0xe9, 0x0b, 0x7d, 0x1b, 0x49,
+  0x14, 0x26, 0xab, 0xb2, 0x95, 0x26, 0xd5, 0x0d, 0x18, 0x1c, 0xbf, 0x18,
+  0xbb, 0xb5, 0x73, 0x6a, 0xf2, 0xf7, 0x69, 0x5e, 0x3c, 0xe4, 0x46, 0x0b,
+  0x4c, 0xa9, 0x21, 0x2e, 0x79, 0xd0, 0xb7, 0x7f, 0xed, 0x31, 0x96, 0x63,
+  0x1b, 0xcb, 0x29, 0x6c, 0x8b, 0x39, 0x5d, 0x7c, 0x4f, 0xdd, 0x68, 0xd7,
+  0xa8, 0x91, 0x8b, 0x10, 0xa1, 0xcd, 0x08, 0xe0, 0x9f, 0x97, 0xd1, 0xc3,
+  0xf4, 0x20, 0x4e, 0xcd, 0x53, 0xc1, 0xff, 0x10, 0x01, 0x62, 0xe7, 0x61,
+  0xe5, 0xb1, 0xf0, 0x86, 0x39, 0xcf, 0x28, 0x6a, 0x2e, 0xa7, 0x35, 0xd7,
+  0xf4, 0x55, 0xfa, 0xd6, 0x00, 0x6e, 0x56, 0x27, 0x2a, 0x99, 0x29, 0x83,
+  0x3e, 0x12, 0x84, 0x6f, 0xe9, 0xa3, 0xe9, 0xc2, 0x7c, 0x89, 0xdc, 0x9a,
+  0x08, 0x10, 0xce, 0xd3, 0x69, 0xe6, 0xd9, 0xee, 0xde, 0x34, 0x74, 0x7c,
+  0xb6, 0x11, 0x04, 0x4e, 0x40, 0xe2, 0xa6, 0xba, 0x34, 0x0b, 0x26, 0x41,
+  0x6f, 0x09, 0x04, 0x5e, 0xfd, 0xb7, 0xe2, 0xf1, 0x58, 0x59, 0x3e, 0x5d,
+  0x70, 0x61, 0x69, 0xc1, 0xdb, 0xa6, 0x2b, 0xb0, 0xcb, 0x47, 0x79, 0xf2,
+  0x5b, 0xe7, 0x51, 0x72, 0x75, 0x23, 0x1e, 0xa9, 0xad, 0x11, 0x91, 0x1e,
+  0x8f, 0x8e, 0xce, 0xb7, 0x93, 0xf3, 0x4e, 0x1a, 0x2e, 0x40, 0x9e, 0x74,
+  0x4d, 0xfa, 0x22, 0x56, 0x0a, 0x0f, 0x30, 0x17, 0xcd, 0xea, 0x94, 0x4d,
+  0x65, 0xc5, 0xb2, 0xac, 0x4b, 0xa0, 0x11, 0xff, 0xcd, 0x45, 0x4e, 0x67,
+  0x2c, 0x87, 0x48, 0xbf, 0xe6, 0x8c, 0x4c, 0xc9, 0x0e, 0xf5, 0xcf, 0x9f,
+  0xb1, 0x26, 0x4a, 0xc2, 0x17, 0x33, 0xd3, 0xb7, 0x24, 0xb1, 0x6a, 0xf2,
+  0xe9, 0x2c, 0x08, 0x78, 0x23, 0xdd, 0xd5, 0xc2, 0x8f, 0xbc, 0xdc, 0x73,
+  0xa9, 0xb9, 0x51, 0xf3, 0x8d, 0xd3, 0x29, 0xd5, 0x40, 0xa3, 0xb8, 0xce,
+  0x8a, 0xac, 0x1a, 0x84, 0xec, 0x78, 0x5c, 0x2c, 0x5d, 0xf6, 0xcc, 0x74,
+  0xd8, 0xe5, 0x7e, 0xf3, 0xd2, 0x6c, 0xa5, 0x73, 0x7e, 0x19, 0x8b, 0x15,
+  0x5c, 0x38, 0x38, 0x4d, 0x63, 0xa0, 0x9e, 0x3f, 0x92, 0xb4, 0xbb, 0xa6,
+  0xc4, 0xe6, 0x06, 0xb7, 0xd7, 0xe2, 0x9e, 0xa6, 0xc3, 0x3c, 0x58, 0xd7,
+  0x37, 0xfb, 0x46, 0x26, 0xec, 0x0f, 0x3f, 0xa7, 0x0b, 0xee, 0xc6, 0x5c,
+  0xc3, 0x59, 0xb5, 0x82, 0xe9, 0x4a, 0x4a, 0xf3, 0x74, 0x5a, 0x93, 0x54,
+  0xd1, 0xa1, 0x53, 0x49, 0x07, 0xff, 0x8b, 0x76, 0xda, 0xdf, 0x96, 0xa1,
+  0xd7, 0x6a, 0x0b, 0x1b, 0xea, 0x0d, 0x17, 0x5b, 0x23, 0xf5, 0x99, 0x2a,
+  0x3b, 0x8c, 0xf3, 0x06, 0xac, 0x8e, 0xca, 0xd7, 0xd0, 0x3e, 0x09, 0xf4,
+  0x06, 0x17, 0xe2, 0x78, 0x13, 0x04, 0x7b, 0xa4, 0x48, 0x69, 0x92, 0xfc,
+  0x2f, 0xfa, 0x96, 0x36, 0xc0, 0x58, 0x4f, 0xf8, 0xc5, 0xbf, 0x3a, 0x7e,
+  0x73, 0x76, 0x71, 0xdc, 0x06, 0x69, 0x73, 0x15, 0x6e, 0xb8, 0xb8, 0xbb,
+  0xbd, 0x03, 0x0d, 0x05, 0x27, 0xf2, 0xd0, 0x2b, 0x5a, 0xcb, 0xfb, 0xfc,
+  0xfb, 0xd7, 0xb6, 0x73, 0x39, 0xc4, 0x21, 0x3a, 0xe5, 0xea, 0x64, 0xca,
+  0x3c, 0x77, 0x2f, 0x6d, 0xba, 0xde, 0xb7, 0x87, 0x54, 0xe0, 0x87, 0x8b,
+  0xa5, 0x6b, 0xf7, 0xa8, 0x07, 0xdc, 0x01, 0x5b, 0x34, 0x19, 0x0c, 0x80,
+  0x75, 0x4d, 0x49, 0x40, 0xb6, 0xd9, 0x40, 0xa3, 0x65, 0x63, 0x8a, 0x92,
+  0xfd, 0xc5, 0xd6, 0x22, 0xaa, 0x07, 0x62, 0x7f, 0x18, 0x26, 0xf6, 0x23,
+  0xee, 0x2b, 0x5c, 0xf8, 0x1c, 0xd5, 0xc5, 0xf1, 0x95, 0x58, 0x5c, 0x87,
+  0xea, 0xfc, 0xb1, 0xf3, 0x8c, 0x6f, 0x32, 0x22, 0xb0, 0x45, 0x55, 0x32,
+  0x25, 0x59, 0xef, 0x33, 0x35, 0x87, 0xa4, 0xeb, 0xf8, 0xf3, 0x18, 0xf1,
+  0x0b, 0x9b, 0xcf, 0x6e, 0xd5, 0xdb, 0x7d, 0xaf, 0xa7, 0x76, 0xda, 0xa4,
+  0xc3, 0x9b, 0x7f, 0xda, 0x4c, 0x04, 0x18, 0x08, 0xf1, 0xca, 0x71, 0xb0,
+  0x15, 0xc5, 0x55, 0x1c, 0xd7, 0xfe, 0xf6, 0x43, 0xb1, 0x3c, 0x1d, 0xf4,
+  0xea, 0x34, 0x14, 0x4d, 0xe6, 0x92, 0x08, 0x0f, 0xd7, 0xbd, 0x41, 0x20,
+  0x0b, 0x0e, 0xc2, 0xb2, 0xb0, 0x30, 0x24, 0x6d, 0x2b, 0x56, 0x5b, 0x94,
+  0xfc, 0x0d, 0x95, 0x4f, 0x89, 0xae, 0x22, 0x07, 0x39, 0xe6, 0xca, 0xb9,
+  0xca, 0x99, 0x48, 0x4a, 0x6c, 0x7e, 0x5f, 0x34, 0x74, 0x5a, 0x21, 0x58,
+  0x82, 0x49, 0xab, 0x70, 0x07, 0xf0, 0x7e, 0x72, 0xdb, 0xb7, 0x46, 0x6a,
+  0xde, 0x8b, 0x67, 0x2f, 0xe8, 0xe6, 0x46, 0xc8, 0x4a, 0x08, 0xe8, 0x85,
+  0x8e, 0x0d, 0x94, 0x03, 0x61, 0x4a, 0x40, 0x67, 0x00, 0x5a, 0x36, 0x6c,
+  0x9c, 0xcd, 0xb8, 0xcc, 0xfb, 0xc8, 0x6b, 0x62, 0x2d, 0xb6, 0x7d, 0x35,
+  0x12, 0x6c, 0xc8, 0x1a, 0x81, 0x4d, 0xad, 0x42, 0xc5, 0x60, 0xf4, 0x3f,
+  0x7a, 0x34, 0xfb, 0x4e, 0x17, 0x95, 0x14, 0x50, 0xde, 0x0e, 0x96, 0xd5,
+  0xd5, 0x88, 0xee, 0xac, 0xca, 0xeb, 0x8f, 0xc9, 0xd6, 0x7f, 0x6c, 0xdb,
+  0x7a, 0x83, 0x11, 0xab, 0x97, 0x9c, 0x62, 0x79, 0xb1, 0xcc, 0x5a, 0xb5,
+  0x28, 0xb5, 0xb5, 0x2b, 0xd4, 0x47, 0x20, 0xde, 0xaf, 0x18, 0x7c, 0x9a,
+  0xca, 0x81, 0x2d, 0x02, 0x6e, 0x6b, 0x61, 0x93, 0x91, 0x5d, 0x10, 0xde,
+  0x9a, 0x58, 0x11, 0x50, 0xdc, 0x8d, 0x6d, 0x3e, 0x1a, 0x14, 0x96, 0x61,
+  0xf2, 0xbe, 0x80, 0x46, 0x21, 0x7b, 0x53, 0xee, 0x92, 0xbc, 0x30, 0x03,
+  0x31, 0x63, 0x35, 0xb7, 0x49, 0x44, 0x50, 0xfd, 0xad, 0x2d, 0x9f, 0x44,
+  0x90, 0x76, 0x48, 0x07, 0x70, 0xb2, 0x95, 0xe1, 0xdd, 0x8a, 0xb6, 0xe4,
+  0x4d, 0x58, 0xf0, 0x81, 0xb9, 0xea, 0xa5, 0x00, 0x38, 0xda, 0xa6, 0xf4,
+  0x94, 0x6c, 0x36, 0x1b, 0x30, 0x25, 0x22, 0x11, 0xc4, 0x91, 0x6a, 0x6f,
+  0xd6, 0x29, 0x9d, 0x70, 0xc0, 0xd3, 0xcf, 0x4e, 0x0a, 0x6e, 0x1f, 0x24,
+  0xc1, 0x80, 0x86, 0x48, 0xd3, 0x37, 0x05, 0xb6, 0xab, 0xb8, 0x5a, 0x72,
+  0x73, 0xb8, 0xfc, 0x0a, 0x4c, 0x0e, 0x0f, 0x69, 0x15, 0x75, 0x7b, 0xc8,
+  0x35, 0x34, 0xb9, 0xb9, 0xae, 0x16, 0x5c, 0x26, 0x22, 0x56, 0xc3, 0xc2,
+  0xb7, 0x9b, 0xf8, 0x51, 0x5d, 0xdd, 0x3a, 0x6b, 0xb8, 0x33, 0xfc, 0xee,
+  0xc9, 0xeb, 0x56, 0xc9, 0x39, 0x9a, 0x8a, 0x08, 0xb5, 0xba, 0xe7, 0x54,
+  0x90, 0x0a, 0x32, 0xe6, 0xc4, 0xba, 0xbb, 0xc5, 0x36, 0xe5, 0xcc, 0x8b,
+  0xb1, 0x32, 0xd9, 0xe1, 0x77, 0xf1, 0xe6, 0xa4, 0x15, 0xd6, 0x20, 0xb9,
+  0x0d, 0x6d, 0x18, 0x5b, 0x45, 0x0b, 0x22, 0xd2, 0x66, 0xa0, 0xb2, 0xa7,
+  0xfa, 0x99, 0x30, 0xa8, 0x7e, 0x33, 0x2f, 0xa7, 0x84, 0xfd, 0xcd, 0x1e,
+  0x9e, 0x0b, 0x7a, 0xd2, 0x1d, 0x1c, 0x81, 0x4e, 0xd7, 0x96, 0x27, 0xc9,
+  0x0c, 0x0e, 0xed, 0x8c, 0x89, 0x98, 0x83, 0x67, 0x26, 0xde, 0x9c, 0x1b,
+  0xaa, 0x96, 0x6d, 0x91, 0x37, 0xfd, 0x21, 0x14, 0x49, 0x39, 0x69, 0xbc,
+  0x11, 0xd0, 0x03, 0xf1, 0xe6, 0x58, 0xf8, 0x46, 0x46, 0x46, 0x50, 0x5a,
+  0xd8, 0x93, 0xeb, 0x47, 0xc6, 0x0f, 0x06, 0x8b, 0x6c, 0x7e, 0xe8, 0x08,
+  0xa5, 0x5a, 0x2b, 0xbc, 0x7a, 0x64, 0xb1, 0x15, 0x46, 0x0f, 0xba, 0x0b,
+  0xcc, 0xa5, 0xcb, 0x40, 0x74, 0x47, 0x8f, 0x0f, 0xe2, 0xcd, 0xd9, 0x15,
+  0x16, 0x06, 0xbb, 0x35, 0x0b, 0x2c, 0x5f, 0x09, 0x66, 0x61, 0x66, 0x44,
+  0xa4, 0xd1, 0x82, 0x27, 0xd9, 0x07, 0xae, 0x9f, 0x44, 0x55, 0x70, 0x9b,
+  0x0f, 0xeb, 0x27, 0x64, 0x26, 0x69, 0x66, 0xf7, 0x73, 0xd4, 0x5d, 0xb3,
+  0xc2, 0x42, 0x48, 0xa3, 0x52, 0xfa, 0xcd, 0xb8, 0x24, 0x25, 0x10, 0xbf,
+  0x8f, 0xf2, 0x42, 0xeb, 0xb6, 0x77, 0xdf, 0x4b, 0x6c, 0xfd, 0xd9, 0x45,
+  0x99, 0x17, 0x9a, 0x69, 0x2b, 0x32, 0xc6, 0xeb, 0x62, 0x12, 0xcb, 0x31,
+  0x5e, 0xe7, 0xe2, 0x9f, 0x7f, 0x24, 0x30, 0xae, 0x55, 0x14, 0x3e, 0x44,
+  0xe8, 0x6f, 0xfd, 0x7d, 0xcc, 0x8f, 0xbb, 0x7d, 0xcc, 0xa3, 0xd2, 0x6d,
+  0xec, 0x4a, 0xf4, 0x3c, 0xbc, 0xda, 0xed, 0x4f, 0xda, 0x33, 0xd9, 0xed,
+  0xdf, 0xe2, 0x6e, 0x6a, 0xb3, 0x7c, 0xcd, 0x5f, 0xf5, 0xc3, 0x7a, 0xff,
+  0x83, 0x0c, 0x56, 0x2b, 0x60, 0x11, 0xfc, 0x8f, 0x1b, 0xbb, 0x52, 0x62,
+  0xbb, 0x15, 0x53, 0x01, 0xbe, 0xbb, 0x40, 0x4b, 0x0a, 0x3e, 0x6e, 0x1e,
+  0xa3, 0xe6, 0x78, 0x82, 0x65, 0x39, 0x56, 0x4f, 0x8e, 0x3c, 0xed, 0xba,
+  0xc8, 0xf2, 0xdd, 0xaf, 0xd6, 0x19, 0x4e, 0xd0, 0x6a, 0x81, 0x27, 0x5f,
+  0xed, 0x1c, 0x88, 0x69, 0x46, 0x4e, 0x59, 0xd9, 0x0a, 0x84, 0xaa, 0xe4,
+  0x86, 0x54, 0xee, 0xad, 0xdb, 0x48, 0x2b, 0xe7, 0xb8, 0x9a, 0x3f, 0x70,
+  0xc8, 0xcd, 0x03, 0x6e, 0x54, 0x84, 0x26, 0xf1, 0x46, 0x15, 0x9c, 0x4c,
+  0x39, 0xc6, 0x2b, 0x66, 0x7e, 0x55, 0x0f, 0x5a, 0xbb, 0x70, 0x5d, 0x4f,
+  0xe8, 0xc1, 0x58, 0x67, 0xdc, 0xd4, 0x22, 0xc1, 0xe2, 0xde, 0x93, 0x94,
+  0xf1, 0xe6, 0xa4, 0xbb, 0xee, 0x3d, 0x99, 0x9e, 0xbe, 0xe7, 0xbb, 0x64,
+  0x66, 0x60, 0x63, 0x5c, 0x86, 0x7b, 0x43, 0x0f, 0xf8, 0x2f, 0x12, 0x10,
+  0x64, 0xc5, 0xcf, 0x0a, 0xdf, 0x6e, 0xa7, 0x2f, 0x9a, 0xbb, 0x77, 0x0d,
+  0xec, 0xd1, 0xe3, 0x16, 0xb5, 0x0b, 0xce, 0xd5, 0x95, 0x10, 0xa4, 0x02,
+  0x1b, 0x02, 0x40, 0x1c, 0x20, 0x5b, 0x17, 0x45, 0x16, 0xe4, 0x08, 0x53,
+  0xa2, 0xec, 0x0d, 0x91, 0x56, 0xfc, 0x49, 0xe6, 0x42, 0xc2, 0xa4, 0xa2,
+  0x38, 0x84, 0xa8, 0x21, 0x5a, 0xbb, 0xa9, 0xce, 0xc4, 0x96, 0xd0, 0xc7,
+  0x13, 0x66, 0x01, 0x8e, 0x14, 0x1f, 0x6f, 0x53, 0x52, 0x91, 0x02, 0xd2,
+  0x61, 0xd1, 0xcb, 0xae, 0xa7, 0x7e, 0x01, 0x38, 0x6f, 0xf8, 0x55, 0x9f,
+  0xa7, 0xe0, 0xda, 0x0c, 0x1e, 0x7f, 0x44, 0x61, 0x85, 0xac, 0x58, 0x43,
+  0x5d, 0xa1, 0xb4, 0xb6, 0xed, 0xe4, 0x22, 0xa3, 0x0c, 0x9a, 0x5b, 0x92,
+  0xa6, 0x94, 0x22, 0x9b, 0x70, 0x0b, 0x5b, 0xf9, 0x30, 0x13, 0x18, 0x19,
+  0xa9, 0x48, 0x44, 0xb4, 0x19, 0xe8, 0x34, 0x66, 0x6b, 0x6c, 0xb3, 0xc1,
+  0x9f, 0x72, 0x7d, 0x80, 0xbd, 0xe1, 0x5e, 0x9f, 0xeb, 0x80, 0x55, 0xaa,
+  0x2e, 0xaa, 0x8d, 0x41, 0x3f, 0x49, 0x2d, 0xc3, 0x1f, 0x7d, 0xb9, 0xeb,
+  0x8d, 0xb8, 0xa0, 0xef, 0xd6, 0xa1, 0x57, 0x18, 0xae, 0x65, 0x67, 0xd6,
+  0x50, 0x45, 0xf7, 0x60, 0xff, 0xec, 0x0e, 0x9e, 0xbe, 0x78, 0xd1, 0xba,
+  0xd1, 0x6b, 0x8f, 0x1e, 0xf1, 0xd9, 0xee, 0x2e, 0x67, 0xff, 0x76, 0x5f,
+  0x33, 0xbf, 0x18, 0xbc, 0xc0, 0x8b, 0xed, 0xd7, 0xb8, 0x7e, 0xf6, 0xea,
+  0xf7, 0x06, 0xf4, 0x9b, 0xc8, 0xe7, 0xe0, 0x75, 0x59, 0xf9, 0xd6, 0x0b,
+  0xfa, 0x5c, 0xe4, 0x2d, 0x4e, 0x4c, 0xc6, 0x3c, 0x96, 0x57, 0x57, 0x14,
+  0x95, 0xa1, 0x27, 0x71, 0xf1, 0x99, 0x1d, 0x71, 0x97, 0x56, 0xd3, 0x70,
+  0xb8, 0xbb, 0xfd, 0xc1, 0xde, 0xaa, 0xe1, 0x82, 0xdf, 0x11, 0xc0, 0x0a,
+  0x5a, 0x4e, 0x32, 0x27, 0x8d, 0x21, 0xc1, 0x90, 0xd2, 0x6e, 0x43, 0x7b,
+  0xa6, 0x47, 0x7b, 0x2f, 0x5e, 0xf4, 0xa9, 0x67, 0xcf, 0x5e, 0xbc, 0x58,
+  0x99, 0x3c, 0xe4, 0x7d, 0xe6, 0xae, 0x74, 0x4e, 0x2a, 0x7a, 0xdd, 0xed,
+  0x99, 0x9a, 0xec, 0x95, 0xf8, 0x77, 0xe8, 0x37, 0xc9, 0xab, 0xe4, 0xdd,
+  0xd9, 0xe5, 0xb1, 0xe7, 0xbf, 0xc1, 0xf9, 0xe2, 0x6c, 0x0f, 0x8f, 0x79,
+  0x0d, 0x11, 0xca, 0x05, 0xf8, 0xea, 0x61, 0x1f, 0x1b, 0x63, 0x2b, 0x8c,
+  0xaf, 0x03, 0xde, 0xa8, 0x39, 0x20, 0xff, 0xd6, 0xfd, 0xdc, 0x19, 0x7b,
+  0xa8, 0xaf, 0xf3, 0xc6, 0x4f, 0x68, 0xdf, 0x32, 0x8b, 0xcd, 0x05, 0xa7,
+  0x6f, 0xd3, 0x59, 0x6e, 0x83, 0x29, 0x9b, 0xb5, 0x91, 0x34, 0x0d, 0xd3,
+  0xcb, 0xd1, 0x3f, 0xca, 0xc5, 0x66, 0x40, 0x63, 0x91, 0xcd, 0xc8, 0x79,
+  0x20, 0x37, 0x21, 0xbf, 0x30, 0xc0, 0x93, 0x72, 0x5a, 0x60, 0xd0, 0x72,
+  0xd9, 0xbb, 0x14, 0x0e, 0x5d, 0xff, 0xe3, 0x91, 0x78, 0x0a, 0x9c, 0x5e,
+  0xc0, 0x3c, 0x29, 0x96, 0x97, 0x9a, 0xf1, 0x09, 0xe8, 0x36, 0x6b, 0x57,
+  0x1e, 0xd7, 0xfa, 0xf0, 0x8a, 0x78, 0xa8, 0x1d, 0x4e, 0xfc, 0x69, 0xb6,
+  0x50, 0xa2, 0xb6, 0xa2, 0xdd, 0x8e, 0xd9, 0xcb, 0x57, 0xf9, 0xf5, 0xb2,
+  0x8a, 0xc3, 0x7a, 0x60, 0x9c, 0x0b, 0xb2, 0x54, 0xc9, 0x40, 0xd3, 0xbb,
+  0xb4, 0xca, 0xb4, 0x90, 0x43, 0x71, 0x6f, 0x0f, 0xb7, 0x1a, 0xca, 0x8a,
+  0x20, 0x25, 0xa6, 0xd6, 0xc0, 0x2f, 0x46, 0xa0, 0x5f, 0xa3, 0xc7, 0x90,
+  0x1f, 0x41, 0x80, 0x0d, 0xc2, 0x48, 0x9a, 0x36, 0x0e, 0xc3, 0xab, 0xbe,
+  0x6d, 0xb3, 0xd8, 0xd7, 0xa8, 0x0e, 0x96, 0xc8, 0x14, 0x74, 0x03, 0x67,
+  0xe5, 0x72, 0xd3, 0xcb, 0xfc, 0xa7, 0x67, 0x5d, 0x15, 0x7b, 0x65, 0xff,
+  0x0d, 0x13, 0xfc, 0x48, 0xf2, 0x60, 0x3d, 0x59, 0x08, 0xf1, 0x22, 0xd9,
+  0xe2, 0xd9, 0xb5, 0xd4, 0xe3, 0x94, 0xe8, 0x32, 0x26, 0x8b, 0xd9, 0x18,
+  0x64, 0x69, 0x03, 0xa6, 0x48, 0x5a, 0x69, 0x5e, 0xe3, 0x64, 0x4b, 0x6b,
+  0x47, 0xea, 0x0e, 0xf5, 0xdc, 0x24, 0x2c, 0xa5, 0x68, 0xa7, 0x70, 0x3a,
+  0x25, 0x95, 0xf8, 0x0b, 0x0d, 0x5f, 0xda, 0xef, 0xbc, 0x5a, 0x96, 0xbe,
+  0x16, 0x95, 0x61, 0xe8, 0x92, 0xa4, 0xee, 0xea, 0x85, 0x3c, 0x3a, 0xf9,
+  0x7f, 0x8e, 0x7f, 0xcf, 0xa8, 0x53, 0x95, 0xde, 0x59, 0xa8, 0xb9, 0x94,
+  0xd1, 0x95, 0x68, 0x90, 0xcd, 0x6a, 0x4c, 0x67, 0x62, 0xc5, 0x53, 0xad,
+  0x4c, 0xdc, 0x1e, 0x88, 0x2b, 0x4a, 0xdd, 0x27, 0xb3, 0xb1, 0xc2, 0xbd,
+  0x4d, 0x88, 0xf0, 0xca, 0x79, 0x16, 0xc1, 0xf0, 0x08, 0x8c, 0x30, 0xd6,
+  0x43, 0x17, 0xd2, 0x2b, 0xd4, 0x39, 0xe7, 0xf2, 0xb7, 0xa8, 0xf3, 0x14,
+  0x90, 0xb2, 0x17, 0x80, 0x43, 0x50, 0xb7, 0x4c, 0x6f, 0x1f, 0xa8, 0xbc,
+  0xe1, 0xe7, 0x65, 0x65, 0xb8, 0x0b, 0x33, 0x0a, 0x51, 0x55, 0xc9, 0xcb,
+  0xf7, 0x17, 0xa7, 0x2b, 0x20, 0xf6, 0x23, 0xac, 0x02, 0x4d, 0x57, 0xef,
+  0x22, 0x03, 0x2d, 0x44, 0x95, 0x9c, 0xa7, 0xd7, 0x59, 0xcf, 0x67, 0xd7,
+  0x50, 0x75, 0x11, 0x13, 0x20, 0x4e, 0x88, 0x98, 0xa7, 0xc8, 0xe7, 0xd3,
+  0x25, 0x31, 0xee, 0x02, 0xc3, 0x3e, 0x30, 0xfe, 0x6a, 0x96, 0xca, 0xec,
+  0x2d, 0x2b, 0x14, 0x89, 0xfd, 0x3e, 0x4a, 0x46, 0xaf, 0x0e, 0xa1, 0x2e,
+  0x01, 0x96, 0x07, 0xe7, 0xa1, 0xb8, 0x0c, 0xf9, 0xd3, 0x7a, 0x7f, 0x26,
+  0x4f, 0x7d, 0x4f, 0xbb, 0x39, 0xc8, 0x62, 0x04, 0xb3, 0x3c, 0x15, 0x14,
+  0x1a, 0xf6, 0x5d, 0x4a, 0x1d, 0x1f, 0x3f, 0x2a, 0xf5, 0x31, 0x45, 0x4d,
+  0x95, 0x11, 0xf9, 0x54, 0x1d, 0x2b, 0x3e, 0xc8, 0xc0, 0x4e, 0xc2, 0x48,
+  0x30, 0xb7, 0x15, 0x08, 0x4d, 0x4e, 0xa5, 0x7f, 0x07, 0x82, 0x82, 0x66,
+  0x6d, 0x48, 0xbb, 0xd6, 0x02, 0xc8, 0xc4, 0x06, 0x9b, 0xce, 0x88, 0xe9,
+  0xda, 0xba, 0xb2, 0x68, 0x8c, 0xd3, 0x92, 0xd8, 0x91, 0xa9, 0x4b, 0x69,
+  0x61, 0xfd, 0xce, 0xad, 0x95, 0xfd, 0xdd, 0x99, 0x60, 0x5c, 0xa0, 0xe8,
+  0xb0, 0x2f, 0xf4, 0xed, 0x03, 0xb3, 0x3b, 0x0a, 0xc9, 0x9a, 0xf2, 0x96,
+  0xd5, 0xdb, 0x7b, 0xff, 0xd5, 0x8f, 0x32, 0xfa, 0xae, 0x60, 0x21, 0xf3,
+  0xba, 0xdb, 0x00, 0x5d, 0x8b, 0x25, 0x3c, 0xeb, 0x77, 0x48, 0x85, 0x5d,
+  0x96, 0x85, 0x5c, 0x97, 0x51, 0xdf, 0xe2, 0xc0, 0x0b, 0x0d, 0x27, 0x47,
+  0x8c, 0xf7, 0x1f, 0xbc, 0xce, 0xcd, 0x3d, 0x52, 0x73, 0xca, 0x3a, 0x3b,
+  0x06, 0x18, 0x05, 0xea, 0x0e, 0x63, 0x58, 0x2e, 0x42, 0xe3, 0x29, 0xc0,
+  0x70, 0xd9, 0x57, 0x6c, 0x70, 0xc7, 0xec, 0x89, 0xe1, 0x0a, 0xb4, 0x8d,
+  0xf2, 0xa7, 0x5a, 0x8d, 0x21, 0x75, 0x2e, 0x0b, 0xa9, 0x76, 0x28, 0x44,
+  0xb3, 0x92, 0x0e, 0x4a, 0xe8, 0x8e, 0xc8, 0xfc, 0xd8, 0x4c, 0x72, 0x40,
+  0x67, 0xea, 0xc4, 0x66, 0x78, 0x0b, 0xc1, 0x7a, 0x60, 0x70, 0x5a, 0x9a,
+  0x18, 0x06, 0x7c, 0x74, 0xfd, 0xc0, 0xa6, 0x53, 0x96, 0xe3, 0x9a, 0xa3,
+  0x2c, 0xcc, 0x7f, 0xc2, 0x09, 0x0d, 0x13, 0xd3, 0xec, 0xb0, 0x33, 0x04,
+  0xe5, 0xe7, 0x5e, 0x81, 0x6f, 0x6b, 0x0d, 0xac, 0xb9, 0xd1, 0x00, 0xb8,
+  0x2c, 0x14, 0x45, 0x11, 0x8a, 0x52, 0x32, 0x82, 0x63, 0x61, 0x74, 0x60,
+  0x78, 0xe8, 0x11, 0xff, 0x2e, 0x64, 0xd4, 0x46, 0xf2, 0xc7, 0x81, 0xe3,
+  0x47, 0xde, 0xba, 0xcf, 0x8c, 0x96, 0xed, 0x80, 0x1f, 0x30, 0xa6, 0x36,
+  0x22, 0xce, 0x1e, 0xae, 0x82, 0x53, 0xb7, 0x28, 0x5f, 0x61, 0x88, 0x78,
+  0x31, 0x48, 0x9e, 0x74, 0xa3, 0x09, 0x10, 0xbf, 0xe8, 0xb2, 0xc8, 0x3e,
+  0x11, 0xe7, 0xdd, 0xea, 0xe6, 0x42, 0x45, 0xfb, 0xfb, 0xc3, 0x8b, 0x77,
+  0x27, 0xef, 0xbe, 0x3e, 0x20, 0x6e, 0x90, 0xac, 0x9a, 0xe4, 0x84, 0x49,
+  0xf8, 0xeb, 0x72, 0x9a, 0x4f, 0x58, 0x56, 0x48, 0x2d, 0xac, 0x16, 0xe9,
+  0x6c, 0x26, 0x6e, 0xd6, 0xd9, 0x7d, 0x28, 0xdf, 0x05, 0x06, 0x49, 0x9c,
+  0x65, 0x55, 0x79, 0xbd, 0xb4, 0x53, 0x3f, 0x81, 0x3a, 0x82, 0x60, 0x01,
+  0x02, 0xa9, 0x37, 0x16, 0xba, 0x6c, 0x5a, 0x27, 0x65, 0xe1, 0xf5, 0xe9,
+  0x69, 0x12, 0xd6, 0x08, 0x00, 0xea, 0x4c, 0x89, 0x8c, 0x39, 0x41, 0x04,
+  0x0d, 0x99, 0xed, 0x5f, 0xe7, 0x63, 0xc6, 0x1a, 0x91, 0x02, 0x40, 0xf2,
+  0xa6, 0x25, 0xf7, 0x8c, 0xf9, 0x6a, 0xba, 0xd2, 0x5d, 0x64, 0x20, 0x34,
+  0x01, 0x9f, 0xc3, 0x0a, 0xe7, 0xd5, 0x14, 0xf6, 0x90, 0x11, 0x93, 0xe5,
+  0x55, 0x43, 0x2a, 0x52, 0xeb, 0x36, 0x6d, 0xb3, 0x7d, 0xaf, 0x8b, 0x24,
+  0xdc, 0xb0, 0xa5, 0xd3, 0x4a, 0xb4, 0x9d, 0xd8, 0x6a, 0xb2, 0x74, 0xe7,
+  0xb2, 0x6e, 0x08, 0x9a, 0xf8, 0x68, 0x18, 0x6d, 0x9a, 0xa5, 0xb6, 0x0c,
+  0x5c, 0x4d, 0xf2, 0x32, 0x14, 0x18, 0x77, 0x59, 0x95, 0xb9, 0xe2, 0xcc,
+  0x48, 0x4a, 0x32, 0xe2, 0x6e, 0x98, 0x8c, 0x4a, 0xf3, 0x7c, 0xa8, 0x65,
+  0xd9, 0x2a, 0x2a, 0xad, 0x2a, 0x85, 0xe8, 0x8f, 0xc3, 0x56, 0x81, 0x67,
+  0x1e, 0xd1, 0xb9, 0xf6, 0x78, 0x23, 0x75, 0xcd, 0x68, 0xff, 0x8f, 0x33,
+  0xab, 0x54, 0xd0, 0x17, 0x10, 0x01, 0xa2, 0x1d, 0xd2, 0x1b, 0x18, 0x81,
+  0xda, 0x43, 0x8d, 0x0c, 0xaa, 0xb6, 0xe6, 0xb5, 0xf4, 0x40, 0x7d, 0x24,
+  0x1f, 0xe0, 0xdb, 0x1d, 0x70, 0xb4, 0xfa, 0x84, 0xc7, 0xea, 0x9e, 0x8a,
+  0xed, 0xe9, 0xf9, 0x4f, 0xa5, 0x08, 0x80, 0x0d, 0xab, 0xe2, 0x57, 0x77,
+  0x19, 0x69, 0x99, 0x41, 0xa8, 0xfc, 0x8c, 0xe9, 0x2f, 0xe4, 0x21, 0x3f,
+  0xbb, 0xca, 0x7f, 0x59, 0x2e, 0x9c, 0xbe, 0x73, 0x30, 0xe4, 0x48, 0x01,
+  0x6f, 0x82, 0xa8, 0xd4, 0xd5, 0x70, 0x3b, 0x8a, 0x8f, 0xe2, 0x3e, 0xc8,
+  0x9d, 0x54, 0x1b, 0xfd, 0x7a, 0xfa, 0xa0, 0xe0, 0xd3, 0x02, 0x1a, 0xdd,
+  0x5b, 0x1a, 0x0b, 0x6a, 0x3d, 0x4b, 0xda, 0x54, 0x9a, 0x78, 0x55, 0x7e,
+  0xfd, 0xa0, 0x66, 0x2b, 0x93, 0x2d, 0x6c, 0xae, 0x95, 0x4f, 0xb0, 0x5a,
+  0x08, 0x4b, 0xfc, 0x86, 0x0a, 0xda, 0xe3, 0x37, 0x12, 0x73, 0x0a, 0x52,
+  0x2d, 0x7d, 0xce, 0xa2, 0xd8, 0x44, 0xf8, 0xb3, 0xaa, 0x4e, 0x1a, 0x85,
+  0x5f, 0x9b, 0xb1, 0x00, 0xdf, 0xd8, 0xa2, 0xd6, 0x76, 0x6c, 0xda, 0xdd,
+  0xad, 0xc0, 0x87, 0x89, 0x36, 0x6f, 0x3f, 0xd1, 0xd2, 0x79, 0xe6, 0xc5,
+  0x59, 0x9d, 0x49, 0x39, 0x2f, 0xe6, 0xda, 0xd6, 0x0b, 0x47, 0xee, 0x9b,
+  0xdc, 0xfa, 0x7f, 0x56, 0xdf, 0x24, 0xb6, 0x74, 0x89, 0x9d, 0x6b, 0x67,
+  0xc3, 0x52, 0xa4, 0x59, 0xea, 0xe1, 0x96, 0x08, 0x01, 0x94, 0x82, 0xdf,
+  0x5a, 0x25, 0x6c, 0x13, 0x28, 0x35, 0xc8, 0xa3, 0x5c, 0xa1, 0x41, 0x58,
+  0xba, 0x09, 0x17, 0x89, 0x0c, 0xf2, 0xe3, 0x7c, 0x72, 0x9a, 0x16, 0x2f,
+  0x54, 0xfb, 0x6e, 0xe3, 0xfe, 0xd8, 0xcb, 0x39, 0xb1, 0x85, 0x0b, 0x62,
+  0x30, 0x07, 0xbe, 0xba, 0xe3, 0xd3, 0x23, 0xe8, 0x4a, 0x7f, 0x52, 0xa2,
+  0x97, 0x1d, 0x83, 0xd0, 0x1c, 0x34, 0x11, 0xbb, 0x06, 0xa6, 0x53, 0xd1,
+  0x0e, 0x6b, 0xa0, 0xa7, 0x79, 0x03, 0x01, 0xf2, 0xc7, 0xfd, 0xdd, 0x55,
+  0x42, 0x9e, 0x1a, 0x52, 0xf6, 0x78, 0x3a, 0x8d, 0xb5, 0xb5, 0xc1, 0x70,
+  0x0d, 0xba, 0x5c, 0x45, 0xba, 0x43, 0x50, 0xd6, 0x9c, 0x0a, 0x14, 0xd0,
+  0x1f, 0xab, 0xe6, 0x3f, 0x6e, 0x19, 0xff, 0xda, 0xba, 0x26, 0x2b, 0xca,
+  0x9a, 0x38, 0xf9, 0x75, 0xe1, 0xad, 0x31, 0x35, 0x14, 0x03, 0x99, 0xa9,
+  0x2c, 0x51, 0x5f, 0x89, 0xa7, 0xb6, 0x3b, 0x9d, 0x01, 0xb6, 0x3d, 0xea,
+  0x57, 0x28, 0x99, 0x52, 0x1e, 0x8a, 0x64, 0x63, 0xd7, 0xce, 0x17, 0x7c,
+  0x7b, 0xb2, 0x1f, 0x52, 0xe8, 0x1f, 0x18, 0x99, 0xa3, 0xa7, 0x40, 0x41,
+  0x2d, 0x16, 0x2b, 0xcb, 0x5f, 0x0c, 0x37, 0xad, 0x27, 0x4a, 0xd9, 0x24,
+  0x4f, 0x05, 0xb3, 0x89, 0x29, 0xa1, 0x6f, 0x79, 0x23, 0xfd, 0x81, 0x47,
+  0xca, 0x90, 0xb0, 0x97, 0x62, 0xdd, 0xae, 0xb2, 0xc7, 0x3c, 0xb5, 0xb1,
+  0x5d, 0x74, 0x5c, 0xc9, 0x27, 0x44, 0x0e, 0x74, 0xf8, 0x32, 0x02, 0xfd,
+  0xcc, 0x12, 0x8e, 0x74, 0x0d, 0x37, 0x16, 0x2f, 0x4e, 0x4f, 0xee, 0x34,
+  0x1f, 0x3f, 0xf3, 0x72, 0xd6, 0x5a, 0x00, 0x42, 0x79, 0x41, 0x4b, 0xd7,
+  0x6a, 0xfe, 0x68, 0xb2, 0x25, 0x95, 0xa2, 0xe4, 0x6a, 0xaf, 0x23, 0xa5,
+  0x27, 0xbe, 0x3e, 0xbe, 0x24, 0xd7, 0xc0, 0x05, 0x94, 0x6f, 0xdb, 0x41,
+  0x38, 0x58, 0xe4, 0xaa, 0x75, 0xc5, 0xe5, 0x85, 0xb4, 0x8e, 0x6b, 0x2e,
+  0x7e, 0x5a, 0xcc, 0xd2, 0x22, 0x9a, 0x6e, 0x62, 0x74, 0x28, 0x2a, 0x23,
+  0x59, 0x3a, 0x7a, 0x2a, 0xb5, 0xd8, 0x3d, 0x7e, 0x62, 0x4e, 0x1f, 0x3f,
+  0x7f, 0x7f, 0x29, 0xde, 0x91, 0xd7, 0xc7, 0xa7, 0xc7, 0x97, 0xc7, 0x5d,
+  0x6b, 0x71, 0xcc, 0x74, 0x3b, 0x00, 0xe8, 0x37, 0xd9, 0xe4, 0xa6, 0x28,
+  0x67, 0xe5, 0x75, 0x2e, 0xd5, 0x83, 0x92, 0xef, 0xb3, 0xf1, 0xeb, 0xc3,
+  0xef, 0xe8, 0x06, 0x23, 0x4f, 0xc7, 0xf9, 0xc5, 0xd9, 0xf9, 0x9b, 0x93,
+  0x77, 0xaf, 0xfb, 0xc9, 0xd1, 0xd9, 0xf9, 0x5f, 0xfa, 0xc9, 0xdb, 0xb3,
+  0xef, 0x8e, 0x23, 0xc0, 0x5a, 0xe2, 0xab, 0x8c, 0x54, 0xf2, 0x94, 0x2a,
+  0x1e, 0xce, 0xd8, 0x2b, 0xd8, 0x51, 0xee, 0x89, 0xad, 0x43, 0xa0, 0x15,
+  0x50, 0x99, 0x16, 0xbb, 0xd7, 0x4c, 0x9d, 0xd9, 0xaf, 0xdf, 0x1c, 0x1f,
+  0xbe, 0xee, 0x07, 0x64, 0x85, 0x23, 0x2e, 0xa7, 0x4e, 0xe3, 0xb3, 0x83,
+  0x06, 0xc5, 0x1d, 0xeb, 0xbb, 0xb8, 0x93, 0x38, 0xb4, 0xc2, 0x90, 0x48,
+  0x23, 0x3b, 0x50, 0x70, 0x61, 0xba, 0xb6, 0xd8, 0xfa, 0x9a, 0x7a, 0x5d,
+  0x5e, 0xed, 0x34, 0x52, 0x0f, 0x54, 0xb1, 0x6b, 0xa7, 0x95, 0x03, 0xcf,
+  0x2d, 0x7b, 0xc3, 0x12, 0x9e, 0x45, 0xb2, 0xf4, 0xa5, 0xcb, 0x9c, 0x7d,
+  0x60, 0x99, 0x14, 0xe1, 0xff, 0x60, 0x9f, 0x57, 0x2a, 0xf5, 0x4e, 0x40,
+  0x0c, 0x4d, 0xb0, 0x93, 0x11, 0x73, 0xfa, 0x09, 0x95, 0x55, 0x1c, 0xc1,
+  0xae, 0x6a, 0x9d, 0xf0, 0x26, 0x4a, 0x86, 0x39, 0xcd, 0x9f, 0xfb, 0xa0,
+  0x12, 0x2b, 0xff, 0xc0, 0x13, 0x9b, 0xc4, 0xa0, 0xb5, 0x5c, 0x7f, 0xe0,
+  0xca, 0x6c, 0xcd, 0x8c, 0x01, 0x3d, 0xbc, 0x54, 0xd6, 0x1c, 0x4d, 0x06,
+  0x27, 0x6a, 0x0c, 0xaf, 0xbb, 0xd6, 0xf5, 0xd4, 0xa8, 0x43, 0x80, 0xf3,
+  0xda, 0xd5, 0x57, 0xd2, 0x16, 0x15, 0xbe, 0x65, 0x4e, 0x03, 0x8d, 0x68,
+  0x99, 0xba, 0xcc, 0x7d, 0xb9, 0x1a, 0x65, 0xd0, 0xde, 0xac, 0x70, 0x05,
+  0x95, 0xc0, 0x87, 0x12, 0xd6, 0xa7, 0x65, 0x3f, 0xb4, 0x31, 0x8a, 0xc8,
+  0xdf, 0x05, 0x5f, 0x5c, 0x42, 0x41, 0x9f, 0x01, 0x5b, 0x70, 0x42, 0x3f,
+  0x60, 0x59, 0xb6, 0x69, 0xb3, 0x8a, 0x46, 0x24, 0x7d, 0x88, 0x17, 0x97,
+  0x74, 0x05, 0x68, 0x7c, 0x1f, 0xd2, 0x93, 0xdd, 0x4f, 0xce, 0xbb, 0x4b,
+  0x77, 0x58, 0x9d, 0x0c, 0x84, 0x3b, 0x70, 0x6e, 0x04, 0x6f, 0xe8, 0xd7,
+  0xd8, 0x7a, 0xb3, 0x42, 0x38, 0xfa, 0xfe, 0x42, 0x59, 0x0c, 0x4f, 0x4c,
+  0x9d, 0x9e, 0x98, 0x23, 0x11, 0x49, 0x58, 0x9e, 0x96, 0xa8, 0x44, 0x86,
+  0x50, 0x38, 0x6e, 0x73, 0xcc, 0xbe, 0x69, 0x2b, 0xfc, 0x30, 0x55, 0xe6,
+  0x8b, 0x7e, 0x19, 0x25, 0xfb, 0x1e, 0xf8, 0x74, 0xb0, 0x66, 0x17, 0xc7,
+  0x97, 0x17, 0xc3, 0x64, 0xcb, 0x67, 0xa6, 0x7a, 0x3e, 0xdc, 0x0d, 0xc3,
+  0x05, 0x54, 0x15, 0x30, 0xfa, 0x55, 0x94, 0x0b, 0x5c, 0xf1, 0x55, 0xc8,
+  0x07, 0xfa, 0x6e, 0x88, 0x73, 0xf5, 0xf2, 0xef, 0x77, 0x63, 0xdf, 0xf3,
+  0x2b, 0x0f, 0xb6, 0xbe, 0x47, 0xbf, 0x58, 0x33, 0xca, 0x6f, 0x8e, 0x4f,
+  0xcf, 0xc3, 0x51, 0x7e, 0x77, 0xf1, 0xe6, 0x2f, 0xed, 0x51, 0x3e, 0x79,
+  0x1a, 0xf9, 0xea, 0x6f, 0xe9, 0xca, 0xcd, 0xea, 0x72, 0x76, 0x9b, 0x71,
+  0xfe, 0x00, 0xd2, 0x07, 0x0e, 0xcc, 0x35, 0x40, 0x8c, 0xbf, 0x5f, 0x84,
+  0x8c, 0x8a, 0x70, 0x06, 0xd8, 0x11, 0xca, 0x73, 0x62, 0xea, 0x39, 0x5b,
+  0x8f, 0x73, 0x34, 0xf8, 0x9e, 0x80, 0x9b, 0xdc, 0xa8, 0x59, 0x79, 0xe0,
+  0xf7, 0x7c, 0xcf, 0xa2, 0x83, 0xc6, 0xd1, 0xf7, 0x3c, 0x93, 0xaa, 0x36,
+  0xf0, 0x81, 0xd1, 0x53, 0xba, 0x55, 0x6f, 0x4b, 0xfa, 0xe3, 0xaa, 0x68,
+  0xb2, 0x76, 0x06, 0xb9, 0x30, 0x54, 0x31, 0x55, 0xd4, 0x6a, 0x77, 0xc9,
+  0x16, 0x7a, 0x69, 0xc8, 0x90, 0xa7, 0xee, 0xa5, 0x68, 0xd6, 0x9a, 0xa4,
+  0xad, 0x91, 0x33, 0x0c, 0x31, 0x5c, 0x68, 0xfa, 0xb8, 0x50, 0x50, 0x79,
+  0x2a, 0x6b, 0x26, 0x3b, 0x5c, 0x64, 0xb9, 0x93, 0x77, 0x17, 0x73, 0xb3,
+  0x94, 0x45, 0x0b, 0x62, 0x47, 0x97, 0x03, 0x7b, 0x39, 0xfd, 0x64, 0x0b,
+  0xc7, 0x96, 0xce, 0x5e, 0x0b, 0xa9, 0x33, 0x48, 0xdd, 0x88, 0x84, 0x7b,
+  0x5b, 0x09, 0x1d, 0x13, 0x8f, 0xa5, 0x57, 0x19, 0x6d, 0x03, 0x29, 0xe8,
+  0x52, 0xa3, 0x22, 0x46, 0x3c, 0x84, 0xb2, 0x6e, 0x20, 0x4b, 0x8d, 0xd8,
+  0xbe, 0x09, 0xd4, 0x1d, 0xe4, 0x2f, 0x7c, 0xcc, 0xa1, 0x48, 0xea, 0x1c,
+  0x7a, 0xc0, 0x3c, 0x87, 0x6a, 0x32, 0xa2, 0x4a, 0xfc, 0x0a, 0xe2, 0x78,
+  0x89, 0xf4, 0x6b, 0xcb, 0x24, 0xd7, 0xdb, 0xf4, 0xb4, 0xed, 0xd1, 0xa8,
+  0xb3, 0x77, 0xf0, 0x34, 0x74, 0x58, 0xe7, 0x8b, 0xdb, 0xa7, 0xf0, 0x10,
+  0x3c, 0xef, 0xf3, 0xbf, 0x9e, 0x33, 0x79, 0x4a, 0xd3, 0x76, 0x5f, 0x33,
+  0x53, 0x1c, 0x9b, 0x04, 0x27, 0xe7, 0x9a, 0xbf, 0x38, 0x7c, 0x2c, 0x8e,
+  0xd3, 0x69, 0xf1, 0xcc, 0xf3, 0x91, 0xf0, 0x8f, 0x64, 0xef, 0x33, 0xe4,
+  0x24, 0xdc, 0x56, 0xb2, 0xf5, 0xd6, 0xf2, 0xa6, 0xee, 0x0d, 0x9f, 0xb4,
+  0x0f, 0x68, 0x53, 0xdd, 0x0f, 0x28, 0xb0, 0x6f, 0xac, 0xbc, 0xc8, 0x5e,
+  0x38, 0x29, 0xba, 0xa6, 0x9b, 0x6c, 0x7a, 0x0a, 0xb2, 0xf0, 0x8f, 0xcd,
+  0x01, 0x53, 0x20, 0x42, 0x72, 0x4c, 0x99, 0x16, 0x17, 0xc7, 0x6f, 0xde,
+  0x8f, 0x8e, 0x5f, 0x83, 0xef, 0x25, 0xc8, 0xaf, 0x34, 0xfb, 0x23, 0xa7,
+  0xe5, 0x62, 0x27, 0x67, 0x53, 0xb2, 0xaa, 0x20, 0x1d, 0x69, 0xd7, 0x5b,
+  0xe0, 0xf2, 0x12, 0xd0, 0x4f, 0x9a, 0xd2, 0xa8, 0xf3, 0x21, 0xd8, 0x9d,
+  0x2f, 0x67, 0x79, 0xf7, 0x17, 0x24, 0x7f, 0xf3, 0xa8, 0xa7, 0x19, 0x11,
+  0xa1, 0xbf, 0xe4, 0xa0, 0x7a, 0x20, 0x90, 0xde, 0x5a, 0x3e, 0x7d, 0xb3,
+  0xe7, 0x66, 0x59, 0xb6, 0x50, 0x7e, 0xd3, 0x74, 0x5e, 0x2e, 0x0b, 0xf6,
+  0xb2, 0x98, 0x15, 0x52, 0xc7, 0x02, 0x1c, 0x59, 0x68, 0x97, 0x6f, 0xe4,
+  0xe8, 0xc8, 0xc9, 0x8e, 0x26, 0xfb, 0x91, 0x90, 0xac, 0x9a, 0x85, 0x4b,
+  0xc2, 0xcd, 0x4d, 0x8b, 0x92, 0x5f, 0x6f, 0x51, 0x14, 0xc3, 0xd7, 0xdb,
+  0x56, 0x90, 0xfa, 0xa3, 0x10, 0x93, 0xd1, 0x79, 0xb9, 0x2f, 0xe9, 0xec,
+  0xba, 0x34, 0xc6, 0xee, 0xcd, 0xdc, 0xe6, 0x3e, 0x55, 0x00, 0x51, 0xd4,
+  0xdb, 0xdd, 0x4a, 0x16, 0x1b, 0x11, 0x6e, 0x4f, 0x04, 0xd4, 0x32, 0x4e,
+  0x07, 0xa5, 0xdd, 0xcf, 0xd3, 0x04, 0xbb, 0x8b, 0x42, 0x0d, 0x2c, 0xb0,
+  0x46, 0x92, 0xc4, 0x89, 0xb9, 0xe0, 0x19, 0x0c, 0x37, 0xe2, 0xdf, 0xb3,
+  0xaa, 0xec, 0x5a, 0x86, 0xaa, 0x8f, 0x69, 0xcf, 0xfd, 0x8e, 0xff, 0x2b,
+  0x99, 0xf3, 0xf7, 0xf6, 0x63, 0x27, 0x60, 0x9e, 0x7e, 0x82, 0xb5, 0xbb,
+  0x72, 0x3b, 0x5c, 0xb2, 0x75, 0x0a, 0xcc, 0x11, 0x3d, 0x28, 0xd5, 0x4f,
+  0x88, 0xa2, 0xba, 0x49, 0x7c, 0xcc, 0x3d, 0x63, 0x1d, 0xec, 0x72, 0x8b,
+  0x41, 0x1c, 0x80, 0x4a, 0x78, 0x5d, 0x6c, 0xaf, 0xe1, 0x72, 0x48, 0x69,
+  0x98, 0xa4, 0x9b, 0x6f, 0x31, 0x3f, 0x38, 0x3e, 0xb7, 0x4d, 0x3f, 0x9e,
+  0x95, 0x14, 0xf0, 0x60, 0x83, 0x1e, 0x5f, 0x0f, 0xeb, 0xea, 0x91, 0xe6,
+  0x57, 0xd1, 0x2e, 0x54, 0x4b, 0x85, 0xdd, 0x4b, 0xa0, 0x3a, 0x46, 0x86,
+  0x4a, 0x3e, 0x11, 0xe7, 0xa9, 0x32, 0xe1, 0x63, 0x14, 0xfc, 0x66, 0x20,
+  0x48, 0xb4, 0x9d, 0x8c, 0x1b, 0xe8, 0xb7, 0x89, 0xbd, 0xa4, 0xd3, 0x48,
+  0xb8, 0x62, 0x88, 0xf8, 0x0d, 0xbc, 0x35, 0x92, 0x72, 0x1b, 0x31, 0x7a,
+  0xd9, 0x7a, 0x20, 0xa7, 0x05, 0x12, 0x2a, 0x68, 0x3c, 0x30, 0x1f, 0xd2,
+  0xc2, 0xef, 0x2c, 0x56, 0xc0, 0x34, 0x92, 0x97, 0x53, 0xa4, 0x62, 0x30,
+  0x4f, 0x73, 0x50, 0xeb, 0x85, 0x53, 0xf7, 0xa5, 0x37, 0x9b, 0xe4, 0xf4,
+  0xf8, 0x94, 0xcf, 0x97, 0x73, 0xbc, 0xde, 0x17, 0xc5, 0x7a, 0x0e, 0xc5,
+  0x5a, 0x97, 0x75, 0x88, 0x98, 0x99, 0xd0, 0xb7, 0x77, 0xf7, 0xbe, 0x8d,
+  0x60, 0x61, 0xdb, 0x36, 0x0c, 0x21, 0xa0, 0xb7, 0x98, 0xdf, 0x15, 0x0b,
+  0xf5, 0x7f, 0x7d, 0x87, 0x26, 0x2f, 0xcd, 0x8d, 0xfd, 0x45, 0x24, 0x63,
+  0x22, 0x26, 0x3e, 0xf2, 0x5a, 0xb0, 0x93, 0x5a, 0xe9, 0x9e, 0xb9, 0x15,
+  0xb0, 0xe3, 0xe8, 0xa6, 0xe5, 0x65, 0x5a, 0x29, 0xa3, 0x5c, 0x65, 0x03,
+  0xfe, 0x34, 0x06, 0xea, 0xfc, 0x48, 0x7c, 0x31, 0xc9, 0x96, 0xa7, 0x95,
+  0x83, 0xaa, 0xb5, 0x5c, 0x04, 0x9c, 0xe1, 0x9a, 0xef, 0xed, 0x2b, 0x1c,
+  0xe6, 0xf3, 0xbb, 0x12, 0x64, 0x17, 0xa3, 0x85, 0xdc, 0x6f, 0x32, 0xcb,
+  0xea, 0xa3, 0x68, 0x13, 0xd5, 0xb6, 0x45, 0x1e, 0x89, 0xb2, 0xce, 0x2d,
+  0xc2, 0x09, 0xd9, 0xcc, 0x46, 0x71, 0x60, 0x26, 0x44, 0xd6, 0x0e, 0xfe,
+  0x23, 0x01, 0x5d, 0x3c, 0xfd, 0xf4, 0x29, 0xbc, 0x2c, 0x9d, 0x9d, 0xc3,
+  0x65, 0x21, 0xd9, 0x08, 0x7a, 0xf6, 0xa9, 0x63, 0x04, 0x0d, 0xe3, 0xc5,
+  0x1b, 0xf9, 0x6a, 0x20, 0xe9, 0x38, 0x2e, 0xd9, 0x95, 0xcf, 0xb3, 0x95,
+  0x46, 0xe6, 0x91, 0x85, 0xc2, 0x5d, 0x9a, 0xc7, 0xaa, 0x43, 0x08, 0xaa,
+  0x4b, 0x32, 0x54, 0x5d, 0xb0, 0xc5, 0xfc, 0xd9, 0xdc, 0x18, 0xa5, 0x8e,
+  0xe6, 0x50, 0x27, 0x48, 0x1b, 0x34, 0xf3, 0xb6, 0x64, 0x27, 0x6e, 0x30,
+  0x4f, 0xf4, 0x15, 0x9e, 0x76, 0x3a, 0x4d, 0xe6, 0xaa, 0xca, 0x51, 0x27,
+  0x94, 0xcf, 0x74, 0x9d, 0xec, 0x99, 0xe9, 0xcf, 0x8b, 0x25, 0x41, 0xbb,
+  0x78, 0xb2, 0xf1, 0x4d, 0xdd, 0x9b, 0xb1, 0x69, 0x9f, 0x01, 0x34, 0xa8,
+  0xb9, 0xb4, 0x74, 0xf0, 0x6a, 0x2f, 0xc8, 0xc0, 0xc7, 0x03, 0x74, 0xf8,
+  0xd6, 0x60, 0xf7, 0x2f, 0xd8, 0x88, 0x36, 0x68, 0x69, 0xe6, 0xf5, 0x4a,
+  0xcd, 0x3e, 0x99, 0xd9, 0x66, 0xbe, 0x65, 0x77, 0xa3, 0xb9, 0xdb, 0x6c,
+  0xe8, 0xd1, 0x84, 0x46, 0x10, 0x04, 0x2d, 0xf9, 0x6d, 0xd9, 0xdd, 0x21,
+  0xe2, 0xca, 0x46, 0xce, 0x22, 0x27, 0x72, 0x4a, 0xd0, 0xe9, 0x7f, 0xc0,
+  0x99, 0xae, 0xd3, 0x7a, 0x36, 0xc8, 0xbb, 0x62, 0xfc, 0x18, 0xb8, 0x24,
+  0x8b, 0x29, 0xb0, 0xbb, 0xd0, 0x34, 0x31, 0x3a, 0x1c, 0x9d, 0x76, 0xcb,
+  0xc8, 0xaf, 0xa3, 0x73, 0xdb, 0x6b, 0x6b, 0x3c, 0xbf, 0x01, 0x63, 0x93,
+  0x7a, 0xe9, 0xe9, 0x1e, 0xe1, 0xa8, 0x3b, 0xc1, 0x42, 0xc1, 0x01, 0xb6,
+  0xaa, 0x40, 0x43, 0x7d, 0x80, 0x8f, 0x3b, 0x66, 0xab, 0xa0, 0x2b, 0x4c,
+  0x08, 0x02, 0xf4, 0x37, 0xd7, 0xd1, 0x60, 0xa7, 0x66, 0x84, 0x34, 0x64,
+  0xba, 0x23, 0x50, 0x82, 0x87, 0xe2, 0x71, 0x4c, 0x02, 0xa5, 0x23, 0x1f,
+  0x91, 0x9a, 0x4e, 0xe5, 0x60, 0x06, 0x90, 0x15, 0xab, 0xbc, 0xd9, 0xa2,
+  0x4a, 0xd6, 0x78, 0x9a, 0x60, 0x05, 0x4d, 0x9f, 0x2f, 0x2c, 0x2b, 0xa8,
+  0xa8, 0x0d, 0x17, 0x9d, 0x27, 0x92, 0xc1, 0x90, 0x92, 0x90, 0x03, 0x36,
+  0x57, 0x5c, 0xcc, 0x43, 0x7b, 0xe0, 0xb5, 0xd9, 0x15, 0x90, 0xf9, 0x4c,
+  0x60, 0x49, 0x7f, 0x5b, 0xe6, 0xe6, 0x76, 0xa2, 0x04, 0x8e, 0x61, 0xf2,
+  0x9a, 0xe1, 0x25, 0x52, 0x11, 0x83, 0xcb, 0xe3, 0xa0, 0x86, 0x0e, 0x83,
+  0x55, 0x45, 0x41, 0x34, 0x1d, 0x08, 0x7c, 0xe9, 0xa6, 0x43, 0x74, 0x12,
+  0xa1, 0xba, 0x9a, 0x53, 0x75, 0x44, 0xdd, 0x9e, 0x9b, 0x93, 0x0e, 0xd3,
+  0x8c, 0xab, 0x11, 0x37, 0x40, 0x15, 0x48, 0xf0, 0x51, 0x51, 0xc1, 0x00,
+  0xbe, 0xd5, 0x1f, 0x43, 0x33, 0xb0, 0xdf, 0xe2, 0x41, 0x87, 0x59, 0x24,
+  0x36, 0x40, 0x43, 0x34, 0xfa, 0x45, 0x3a, 0xdb, 0xe1, 0x4a, 0xd4, 0x46,
+  0xcc, 0xcc, 0xa8, 0x9f, 0xd4, 0x92, 0xd6, 0x7c, 0xe8, 0xce, 0xcd, 0x3a,
+  0x0a, 0xb4, 0x5b, 0x9a, 0x23, 0xb3, 0xb8, 0xe3, 0xb2, 0x56, 0xfa, 0x33,
+  0xd3, 0xb0, 0x19, 0x6a, 0x6b, 0x0f, 0x83, 0x54, 0xe6, 0x41, 0x2e, 0x82,
+  0x36, 0x47, 0x0e, 0x97, 0xbc, 0x7a, 0x90, 0x84, 0x80, 0xdf, 0x08, 0xeb,
+  0x84, 0xfd, 0x62, 0x1a, 0x02, 0xcf, 0xf5, 0x6a, 0x59, 0x56, 0xc8, 0x74,
+  0xb3, 0xb8, 0x25, 0x81, 0x22, 0xb4, 0x32, 0xf2, 0x51, 0x7b, 0x89, 0x42,
+  0x43, 0x91, 0xba, 0x10, 0x66, 0x01, 0x97, 0x92, 0xe7, 0x3c, 0x99, 0x19,
+  0x01, 0x1b, 0xb1, 0xef, 0xb4, 0x26, 0x08, 0x91, 0xcd, 0xf4, 0xbb, 0x22,
+  0xac, 0x5e, 0xd2, 0x75, 0x3f, 0x5b, 0xd2, 0xb7, 0xb9, 0x04, 0x88, 0xe5,
+  0x59, 0xd1, 0xf4, 0xcc, 0x68, 0x39, 0x33, 0xcb, 0x66, 0x40, 0xe7, 0xc2,
+  0x63, 0x2b, 0x5a, 0x6a, 0x05, 0x21, 0xa5, 0xfb, 0x71, 0xbe, 0x01, 0x4e,
+  0x1f, 0x1c, 0xfe, 0x0b, 0xa5, 0xea, 0xb3, 0x36, 0xe9, 0xb9, 0xd0, 0x0e,
+  0xfd, 0xaa, 0x2d, 0x92, 0x3e, 0x6e, 0x8f, 0xac, 0x40, 0xb9, 0xfe, 0xd2,
+  0x3d, 0x12, 0xe1, 0xe2, 0x79, 0x70, 0x97, 0xb0, 0xfe, 0xff, 0x3f, 0x69,
+  0x8f, 0xa4, 0xc9, 0xe3, 0x76, 0x49, 0xda, 0xdd, 0x26, 0x91, 0x82, 0x7c,
+  0xff, 0xd2, 0xdb, 0xf8, 0xf3, 0xce, 0xed, 0x08, 0x1e, 0xaa, 0xc1, 0xb5,
+  0x91, 0xe9, 0x8b, 0xdc, 0x5c, 0x57, 0x5d, 0x06, 0x81, 0xc3, 0xba, 0x85,
+  0xac, 0xf8, 0x7a, 0x34, 0x1a, 0x1c, 0x9e, 0x9f, 0xf8, 0xac, 0x84, 0x42,
+  0xa6, 0xc5, 0xd9, 0x11, 0x9c, 0xaa, 0x47, 0xab, 0xcc, 0x4f, 0x04, 0x38,
+  0x14, 0x64, 0x1f, 0x23, 0x6f, 0x38, 0xd9, 0x7b, 0xf1, 0x7c, 0xcf, 0x48,
+  0xee, 0x7b, 0x26, 0xbc, 0x91, 0xf7, 0x9f, 0x0e, 0x9f, 0xec, 0x50, 0x95,
+  0xcf, 0xbc, 0xf1, 0xdc, 0x76, 0xd2, 0xbe, 0xd9, 0x6d, 0x91, 0xb8, 0x18,
+  0x75, 0xeb, 0xdd, 0xf1, 0x51, 0xc2, 0xc1, 0x7a, 0xd0, 0x9f, 0x24, 0x80,
+  0x0e, 0x13, 0x0e, 0x59, 0x62, 0x0b, 0x88, 0xdd, 0xd0, 0x46, 0x1e, 0xaa,
+  0x3d, 0xcb, 0x53, 0x1b, 0xa8, 0x54, 0xc1, 0x74, 0x24, 0xaa, 0x11, 0x20,
+  0x5b, 0xaf, 0xb0, 0x3d, 0xa1, 0xfd, 0xc6, 0xca, 0x81, 0xcc, 0xcc, 0x22,
+  0x52, 0x34, 0xca, 0x9f, 0x93, 0x47, 0xf2, 0x38, 0x52, 0x71, 0xa3, 0xd5,
+  0xeb, 0xa3, 0x4a, 0xc8, 0x0a, 0x35, 0xc6, 0xb9, 0x18, 0x02, 0x6d, 0x45,
+  0xf6, 0xa3, 0x82, 0x0d, 0xc8, 0x4c, 0x9a, 0xcc, 0xad, 0x62, 0x71, 0xf5,
+  0xb7, 0xe9, 0x5a, 0x0f, 0x5d, 0x54, 0x2b, 0x8a, 0x5c, 0x6b, 0x6d, 0xe5,
+  0x87, 0xfb, 0x2e, 0x07, 0x45, 0x94, 0x9e, 0x55, 0x23, 0x62, 0x45, 0xa7,
+  0xab, 0xcf, 0x63, 0x03, 0x2c, 0x85, 0x61, 0x6d, 0xba, 0xe3, 0x35, 0x64,
+  0x5b, 0x5f, 0xd7, 0x78, 0x04, 0x90, 0xe9, 0xbe, 0xb5, 0x63, 0xcc, 0x82,
+  0x99, 0xbc, 0x28, 0x0a, 0xd8, 0xb2, 0x8e, 0xfd, 0xf2, 0x0a, 0x44, 0xcc,
+  0x75, 0x40, 0x5f, 0x71, 0x07, 0x10, 0x85, 0x25, 0x4c, 0xe1, 0xa7, 0x6d,
+  0x94, 0xd0, 0x2b, 0x0b, 0x5f, 0x19, 0xb9, 0x92, 0x2f, 0xd2, 0x59, 0xf2,
+  0x08, 0x3c, 0x55, 0x6c, 0xf1, 0x49, 0xa4, 0xb3, 0xf6, 0xfa, 0xcb, 0x85,
+  0xbb, 0x4c, 0x50, 0xb2, 0x05, 0xf7, 0xb8, 0x60, 0xf5, 0x95, 0x05, 0x48,
+  0x63, 0x14, 0x11, 0xdb, 0xc7, 0xb9, 0x5b, 0x29, 0x2c, 0xfe, 0x08, 0xda,
+  0xb6, 0xce, 0x45, 0x10, 0x66, 0xb2, 0xff, 0xbf, 0x41, 0x75, 0x78, 0x96,
+  0xd8, 0xb5, 0x7a, 0xcc, 0xed, 0xc0, 0xfc, 0x7f, 0x5c, 0x23, 0x26, 0x60,
+  0x12, 0x70, 0x4a, 0xc5, 0xff, 0xed, 0xdb, 0xe1, 0x97, 0x73, 0x60, 0xc9,
+  0xd6, 0xd3, 0x7d, 0x36, 0x50, 0x04, 0x03, 0x6f, 0x37, 0x1b, 0x48, 0x89,
+  0x80, 0x04, 0x01, 0x63, 0x99, 0x3d, 0xac, 0xaf, 0xfa, 0x5b, 0xce, 0x2a,
+  0x1f, 0x49, 0x40, 0xbc, 0xfe, 0xff, 0x06, 0x5d, 0xe4, 0xd9, 0xe3, 0xf6,
+  0xda, 0xbf, 0x42, 0x5f, 0x5d, 0x33, 0xc5, 0x5b, 0x66, 0xde, 0xee, 0x88,
+  0xec, 0x94, 0x09, 0x87, 0xa1, 0x1c, 0x6d, 0x3b, 0x71, 0x49, 0xb0, 0x45,
+  0x1e, 0xc1, 0xc9, 0xf9, 0x77, 0xcf, 0x91, 0xb2, 0x38, 0xea, 0x7a, 0x2b,
+  0xab, 0xe4, 0xf4, 0xf5, 0xe1, 0xf9, 0x2f, 0xd8, 0xbf, 0x7f, 0x81, 0xfd,
+  0xb9, 0xc8, 0xb2, 0xe9, 0x80, 0x3d, 0x23, 0x2f, 0xf1, 0x8f, 0x88, 0x2f,
+  0x31, 0xb5, 0x99, 0x48, 0x58, 0x08, 0x72, 0x98, 0x84, 0x3e, 0x5a, 0xbc,
+  0x9c, 0x6c, 0xe5, 0x85, 0xe4, 0x07, 0x2e, 0x50, 0xd4, 0x20, 0xd0, 0x8b,
+  0xcb, 0x62, 0xba, 0xad, 0x45, 0x0c, 0xf1, 0x6d, 0x78, 0x61, 0xc4, 0xb9,
+  0x4e, 0x5b, 0xf6, 0x9a, 0x58, 0x04, 0x2c, 0x15, 0x8b, 0xf7, 0x0c, 0x87,
+  0xd3, 0xa2, 0x91, 0x9e, 0x7b, 0x37, 0x14, 0x76, 0xea, 0x70, 0xae, 0xff,
+  0x93, 0x5d, 0xae, 0x55, 0x87, 0xa4, 0x8c, 0xdf, 0x31, 0x33, 0xa9, 0xfb,
+  0xf9, 0x55, 0xb1, 0x82, 0xb5, 0x53, 0xe9, 0xaf, 0x44, 0x6b, 0x06, 0xc9,
+  0x07, 0x38, 0x5d, 0x56, 0x21, 0x1b, 0x79, 0xea, 0xcf, 0x0e, 0x7b, 0xc7,
+  0xb9, 0xbf, 0xf6, 0x13, 0xed, 0xb9, 0x34, 0x9f, 0x6f, 0x4d, 0x67, 0x04,
+  0x33, 0xd6, 0x6f, 0x85, 0x62, 0xfc, 0x2e, 0xe9, 0xd0, 0x93, 0xbd, 0x44,
+  0x8d, 0x7a, 0xce, 0xbe, 0x91, 0xa4, 0x9f, 0xbf, 0x84, 0x21, 0x51, 0xef,
+  0xf5, 0x87, 0x2a, 0x1a, 0x94, 0x45, 0x53, 0x31, 0x8f, 0x9c, 0xab, 0xad,
+  0xcb, 0x7e, 0xcf, 0xa5, 0x57, 0x29, 0x21, 0xe5, 0x72, 0x65, 0x34, 0x6b,
+  0x21, 0xb5, 0x4c, 0x01, 0xd4, 0x4b, 0xd6, 0x4c, 0x86, 0x76, 0x65, 0x41,
+  0xf7, 0x40, 0x65, 0xcc, 0xb2, 0xaa, 0xd0, 0x7a, 0x0f, 0x66, 0x84, 0x95,
+  0xb2, 0x84, 0x0c, 0x06, 0xf2, 0x5e, 0x08, 0x50, 0x63, 0x27, 0xff, 0x0a,
+  0x60, 0xd0, 0x6f, 0x08, 0x84, 0x58, 0xcf, 0x41, 0x1e, 0x26, 0xdb, 0x28,
+  0x95, 0xbd, 0x95, 0x0a, 0x29, 0xea, 0x89, 0xa1, 0xbc, 0x88, 0x94, 0x04,
+  0xbd, 0x9a, 0xa5, 0x77, 0x82, 0xc1, 0xee, 0xca, 0xd7, 0xd1, 0xe9, 0x13,
+  0x4c, 0xeb, 0xe5, 0xe9, 0xc8, 0xa7, 0x1a, 0x94, 0x62, 0xc7, 0x24, 0x7c,
+  0xbe, 0x3a, 0x3e, 0x1c, 0x5d, 0x0e, 0x83, 0x21, 0x9a, 0x31, 0x86, 0xd1,
+  0x20, 0xde, 0x30, 0x18, 0x27, 0x65, 0x81, 0xcf, 0xd2, 0x7b, 0x22, 0x1b,
+  0x11, 0xfc, 0x29, 0x75, 0x8e, 0xfb, 0xa6, 0xad, 0x93, 0x6e, 0x9c, 0x32,
+  0x1e, 0xa5, 0xc9, 0xaa, 0x90, 0x23, 0xc0, 0xcc, 0xdd, 0x38, 0x9f, 0xd1,
+  0x08, 0x4c, 0xbf, 0xc6, 0xc6, 0x42, 0x11, 0x98, 0x0f, 0xb2, 0x19, 0xca,
+  0x19, 0x85, 0x91, 0xe9, 0x33, 0x6d, 0xeb, 0x85, 0xc8, 0x8c, 0x24, 0xc5,
+  0x63, 0x35, 0x60, 0xdb, 0xdc, 0x9b, 0x65, 0x9d, 0x09, 0x61, 0x04, 0xb5,
+  0xa1, 0x73, 0xc5, 0x05, 0x50, 0x2d, 0xbe, 0x8e, 0x73, 0x41, 0x29, 0xdd,
+  0x2d, 0x44, 0xc3, 0xa6, 0xf5, 0x47, 0x85, 0x69, 0x4d, 0x1a, 0x40, 0xeb,
+  0xd3, 0xb5, 0xf4, 0xde, 0xfb, 0x9d, 0xc2, 0xbc, 0xb4, 0xd0, 0xc8, 0x1d,
+  0x20, 0x4c, 0x5f, 0x17, 0xce, 0xf3, 0x7d, 0x4e, 0xec, 0x6b, 0xdb, 0x6b,
+  0xd6, 0xdb, 0x3a, 0xc6, 0x89, 0x57, 0x96, 0x01, 0x97, 0x88, 0x3b, 0xde,
+  0x96, 0x71, 0x36, 0x6f, 0x63, 0x86, 0x64, 0xe6, 0x12, 0x19, 0x7a, 0x19,
+  0x30, 0x8f, 0x9e, 0x90, 0x8d, 0x80, 0x2a, 0x21, 0x32, 0x3d, 0xbf, 0x78,
+  0x42, 0x9e, 0x3e, 0x0d, 0x27, 0xa4, 0xca, 0xfe, 0x36, 0x8d, 0xb1, 0xcb,
+  0x01, 0x35, 0x05, 0xc0, 0x16, 0x03, 0x9d, 0x2e, 0x98, 0x22, 0x8f, 0xba,
+  0xba, 0x63, 0xf6, 0xae, 0x94, 0x4f, 0xcc, 0x3c, 0xe2, 0x01, 0x82, 0xc9,
+  0x92, 0xeb, 0x31, 0xa0, 0x83, 0x04, 0x41, 0x49, 0xfb, 0x59, 0x0d, 0x74,
+  0x76, 0xd3, 0xa6, 0x24, 0xbd, 0x56, 0x3e, 0xb2, 0x56, 0x11, 0x27, 0x82,
+  0x67, 0x90, 0x08, 0x57, 0x66, 0xe4, 0xf6, 0xf0, 0x0c, 0xa8, 0x08, 0xa7,
+  0x1d, 0xd8, 0x03, 0x65, 0x6a, 0xbb, 0x93, 0x21, 0x43, 0xe7, 0xb1, 0xf3,
+  0xe0, 0x65, 0xf4, 0xc9, 0x25, 0x24, 0x16, 0x83, 0xb9, 0xd6, 0x4c, 0x41,
+  0x10, 0x4a, 0x26, 0x8e, 0x62, 0x46, 0x8a, 0x20, 0xc7, 0x5b, 0xca, 0xb1,
+  0x3c, 0x76, 0x22, 0x42, 0xe1, 0x81, 0x69, 0x69, 0xf9, 0x67, 0xed, 0x80,
+  0x45, 0x82, 0xab, 0x8f, 0x56, 0xa6, 0x80, 0x01, 0xc1, 0x80, 0xe2, 0x0c,
+  0x42, 0x16, 0x36, 0x63, 0x71, 0xdd, 0x66, 0x33, 0x00, 0xe1, 0xb3, 0x62,
+  0x52, 0xdd, 0x2f, 0x7c, 0x3a, 0xc4, 0xe9, 0x3f, 0x33, 0xff, 0x8a, 0x65,
+  0x03, 0x7e, 0xd5, 0x28, 0x3e, 0x46, 0xd8, 0x6d, 0x87, 0xfa, 0x17, 0x25,
+  0xf2, 0xa9, 0x7c, 0x63, 0x63, 0x16, 0x49, 0xaa, 0xec, 0x0b, 0xb7, 0x98,
+  0x1b, 0xd2, 0xcd, 0x55, 0x7a, 0x33, 0xe5, 0x08, 0xa7, 0xa5, 0x74, 0x3d,
+  0x55, 0x4b, 0x64, 0x90, 0x5b, 0x40, 0xcf, 0xa3, 0xd7, 0x7e, 0xbf, 0xcf,
+  0x13, 0x76, 0xbb, 0x1f, 0x80, 0xfc, 0x48, 0x24, 0xbc, 0x29, 0xab, 0x49,
+  0xd6, 0x2e, 0x61, 0x42, 0x07, 0x56, 0x89, 0xcf, 0xf7, 0x39, 0x8e, 0x6b,
+  0xfd, 0x27, 0xae, 0x6e, 0xe5, 0xaa, 0x02, 0x8a, 0xf4, 0xb6, 0xc3, 0x96,
+  0x8f, 0x8c, 0x70, 0xe5, 0xb8, 0x2d, 0x33, 0xa0, 0xd5, 0x52, 0x82, 0x54,
+  0xcb, 0x98, 0x9a, 0xa7, 0x6f, 0xf7, 0x57, 0x91, 0xfb, 0x0d, 0xe5, 0xd7,
+  0x80, 0xfb, 0x4f, 0x89, 0xba, 0xd5, 0x31, 0x8f, 0x24, 0xb6, 0xfc, 0x0f,
+  0x40, 0x0b, 0xe4, 0xd3, 0x7a, 0xbe, 0xf7, 0xd9, 0xf3, 0xed, 0x75, 0xf5,
+  0x4e, 0x88, 0xe9, 0x98, 0x40, 0xe5, 0xbc, 0x89, 0xe8, 0x5f, 0xfb, 0x43,
+  0x7f, 0x82, 0x3c, 0x3a, 0x56, 0xc9, 0xc3, 0x0c, 0xef, 0x38, 0x73, 0xe1,
+  0xd0, 0xa6, 0xc0, 0x44, 0x58, 0x0a, 0x4d, 0xda, 0x2e, 0x3c, 0x2e, 0x22,
+  0x37, 0x91, 0x73, 0x8e, 0xcd, 0xdc, 0xb5, 0xae, 0xbb, 0xc3, 0x64, 0xb3,
+  0x67, 0xf0, 0x44, 0xfb, 0xc0, 0xf7, 0xa7, 0x5f, 0x02, 0x82, 0x3b, 0x8b,
+  0xbf, 0x0f, 0xdb, 0xff, 0xf2, 0x5d, 0xd0, 0xae, 0x81, 0x5f, 0xb3, 0xca,
+  0x4f, 0xfe, 0x05, 0xab, 0xfc, 0x64, 0xfd, 0x2a, 0x3f, 0x79, 0xec, 0x2a,
+  0x7f, 0xf6, 0xec, 0xf9, 0xe7, 0xbf, 0x62, 0x95, 0xbd, 0x19, 0xfe, 0xbf,
+  0xb6, 0xca, 0xde, 0x4e, 0xfb, 0x75, 0xab, 0x2c, 0xc1, 0xa9, 0x40, 0x10,
+  0x0b, 0x4d, 0x30, 0x05, 0xef, 0x29, 0xe9, 0x88, 0xd1, 0x16, 0xfc, 0xac,
+  0x06, 0xce, 0xda, 0xcc, 0x6e, 0x8a, 0xd9, 0x85, 0x26, 0xb6, 0xb1, 0x82,
+  0x0f, 0x0f, 0x32, 0x0b, 0x3a, 0xee, 0x62, 0x46, 0x54, 0xf3, 0x9b, 0x83,
+  0x4d, 0x35, 0xfa, 0x15, 0xf2, 0xab, 0x19, 0xc4, 0xfc, 0x39, 0xb3, 0xd4,
+  0xff, 0xc2, 0x0c, 0xf4, 0x30, 0x76, 0xe7, 0x45, 0x3c, 0xfd, 0x49, 0x6b,
+  0x26, 0x8b, 0xc1, 0x55, 0x4a, 0xa4, 0x15, 0x01, 0xf0, 0x5b, 0x02, 0xdf,
+  0xe2, 0x69, 0xb8, 0x3c, 0x3a, 0x4f, 0xde, 0xa4, 0x42, 0x57, 0x9b, 0x6c,
+  0x99, 0xdd, 0xf6, 0xd9, 0xd3, 0xbd, 0x27, 0xdb, 0x6b, 0xb5, 0x8e, 0x76,
+  0x12, 0x26, 0xbe, 0x55, 0x94, 0x31, 0x00, 0xc2, 0xe5, 0xb2, 0x2a, 0x2c,
+  0x64, 0xd6, 0x7c, 0xe9, 0xc3, 0xbb, 0xb3, 0xd7, 0xc7, 0xa7, 0x87, 0x7f,
+  0xb1, 0x99, 0x1d, 0x34, 0x32, 0x85, 0x08, 0x7f, 0x30, 0xca, 0xfa, 0xfd,
+  0x07, 0x63, 0xff, 0x98, 0x5f, 0x6e, 0x3d, 0xd9, 0x26, 0x14, 0x66, 0x50,
+  0x2e, 0xe0, 0x3a, 0x6b, 0xe7, 0xc3, 0x30, 0x1a, 0x64, 0x4d, 0x1a, 0xa1,
+  0xba, 0x3f, 0x9e, 0xed, 0x0e, 0xf7, 0x85, 0x91, 0x52, 0x28, 0xf5, 0xdc,
+  0xfa, 0x78, 0xec, 0x98, 0xa9, 0x24, 0x1b, 0x33, 0x88, 0x36, 0x04, 0xdb,
+  0x51, 0xf2, 0x4d, 0x6e, 0xee, 0x79, 0x52, 0xce, 0x6a, 0x73, 0xd2, 0x09,
+  0x3f, 0x43, 0xa1, 0x8a, 0xab, 0x36, 0x5f, 0x01, 0x60, 0xb6, 0xc0, 0x9f,
+  0xac, 0xf5, 0x1d, 0xb4, 0x37, 0x7a, 0x83, 0x93, 0x91, 0xcd, 0x8a, 0xac,
+  0x19, 0x48, 0xcf, 0x5e, 0x9a, 0x3f, 0x5f, 0xdd, 0xa6, 0xb3, 0x00, 0xc0,
+  0x4d, 0x74, 0xfb, 0x92, 0x92, 0xe2, 0xa2, 0xc4, 0xf4, 0xa6, 0x47, 0xc7,
+  0x39, 0xb2, 0xbc, 0x94, 0xfa, 0x64, 0x5a, 0x85, 0xb5, 0xce, 0x2f, 0x2f,
+  0xff, 0x72, 0x7e, 0xfc, 0xea, 0x25, 0xc5, 0x98, 0xbf, 0x20, 0x14, 0x51,
+  0xdd, 0x0a, 0x39, 0x27, 0x54, 0x14, 0x29, 0x18, 0xc3, 0x0f, 0xaf, 0x4f,
+  0x46, 0xe7, 0xa7, 0x67, 0x47, 0xaf, 0x5e, 0xfe, 0x40, 0x4a, 0xb4, 0x39,
+  0x29, 0xf7, 0xde, 0xbb, 0xf6, 0x67, 0x96, 0x62, 0x2f, 0xcc, 0xfa, 0x39,
+  0xfe, 0xfe, 0xc3, 0xf1, 0xbb, 0xef, 0x5e, 0xbd, 0xbc, 0x4d, 0xab, 0x3e,
+  0x8d, 0x8f, 0xdf, 0x5e, 0x51, 0xcd, 0xa2, 0xb5, 0xd7, 0x48, 0x1b, 0x19,
+  0xcf, 0x3e, 0xd6, 0xf9, 0xdf, 0xb3, 0xc4, 0xbc, 0x3e, 0x5b, 0x86, 0x0c,
+  0x57, 0x97, 0xc2, 0xa3, 0x6c, 0x04, 0x15, 0x69, 0x7f, 0x5f, 0x9d, 0x7e,
+  0x4b, 0x2c, 0x2a, 0xd6, 0x2d, 0x34, 0x67, 0xe2, 0xde, 0xe4, 0x8b, 0x67,
+  0x7b, 0xfb, 0xdb, 0xae, 0x10, 0x04, 0x58, 0x98, 0x4c, 0x8f, 0x3f, 0x06,
+  0x08, 0xb8, 0xbf, 0x67, 0x5e, 0xa1, 0x41, 0x29, 0x66, 0x71, 0xdf, 0xca,
+  0x41, 0x53, 0x0b, 0x1b, 0xe9, 0x2c, 0x08, 0xf3, 0x53, 0x1d, 0x8d, 0x0a,
+  0xd9, 0xa8, 0x81, 0x83, 0xe1, 0xf2, 0x8d, 0x97, 0x88, 0xf6, 0x95, 0xdb,
+  0x7b, 0xa6, 0x3b, 0xe2, 0xa4, 0x58, 0x2b, 0x0c, 0x7e, 0x47, 0x67, 0x6c,
+  0x57, 0x83, 0xc6, 0x64, 0x1b, 0x03, 0x4b, 0xf6, 0x4f, 0x7c, 0x9e, 0xbd,
+  0x72, 0x70, 0xc0, 0xf2, 0x95, 0x9c, 0xb2, 0x8f, 0x51, 0xea, 0xc6, 0x53,
+  0xf0, 0xff, 0x03, 0x2e, 0x0b, 0x63, 0x86, 0x56, 0xa0, 0x9f, 0x53, 0x73,
+  0xd6, 0x33, 0x56, 0x67, 0xd9, 0x75, 0x3a, 0xb9, 0xb7, 0xe4, 0x43, 0x58,
+  0x90, 0x69, 0x19, 0x49, 0x50, 0x4a, 0x27, 0xa4, 0xbb, 0xce, 0xb2, 0xe9,
+  0x35, 0x90, 0x66, 0x9c, 0xec, 0x44, 0x88, 0x5b, 0xb5, 0x71, 0xb9, 0x6b,
+  0x36, 0xa3, 0x4b, 0x21, 0x66, 0xab, 0xd1, 0x8a, 0x96, 0xd8, 0xbf, 0xbd,
+  0xfb, 0x68, 0xdb, 0x5c, 0x17, 0x65, 0xb5, 0x7e, 0x4e, 0x9f, 0xb6, 0x1d,
+  0x84, 0x7f, 0xc7, 0x21, 0xa7, 0xe4, 0x4c, 0xf8, 0xa0, 0x5e, 0xd2, 0x5f,
+  0x57, 0x53, 0xb4, 0xb1, 0x95, 0x06, 0x16, 0x7d, 0xbe, 0x9e, 0x30, 0x6c,
+  0x9b, 0x56, 0x2f, 0x9c, 0xa7, 0xc4, 0xf4, 0xd5, 0x38, 0xef, 0x61, 0x3c,
+  0xf5, 0xd9, 0xfa, 0xf0, 0xcc, 0xf6, 0xcc, 0x94, 0x27, 0x79, 0x55, 0x7b,
+  0x16, 0x70, 0x18, 0xa9, 0x2c, 0x2a, 0x10, 0x4f, 0x8a, 0xfd, 0xbd, 0xa4,
+  0xb6, 0x48, 0x26, 0x12, 0x6e, 0xc6, 0xcc, 0xd4, 0x17, 0x0a, 0xac, 0x07,
+  0x2d, 0x6e, 0x29, 0x09, 0xb9, 0x78, 0x88, 0x53, 0xbd, 0xea, 0x30, 0x4f,
+  0x86, 0x61, 0x3c, 0x6a, 0x26, 0x71, 0x0c, 0x8b, 0x3c, 0xe2, 0x96, 0x71,
+  0xc8, 0x74, 0xb3, 0xd6, 0x2b, 0x98, 0xf0, 0xac, 0x05, 0xd7, 0x36, 0x55,
+  0x3e, 0x92, 0x48, 0xa2, 0xa1, 0x80, 0x2f, 0x91, 0x73, 0x7d, 0x6d, 0xc9,
+  0x6c, 0x78, 0x70, 0x9a, 0xfb, 0x85, 0x4e, 0x6d, 0xcd, 0x69, 0x30, 0x42,
+  0x5f, 0x17, 0xe5, 0x0a, 0xb4, 0x2a, 0x43, 0xeb, 0xa2, 0x32, 0x8d, 0xd2,
+  0xfb, 0x72, 0x49, 0xe1, 0x5a, 0x92, 0x14, 0x0a, 0x34, 0xeb, 0xcd, 0x48,
+  0x80, 0xef, 0x6b, 0x18, 0xaf, 0xd4, 0xbd, 0xa5, 0x88, 0x71, 0x4a, 0x31,
+  0x42, 0xfe, 0x8c, 0xb6, 0x08, 0xcd, 0xb7, 0x06, 0x8e, 0x0a, 0x3a, 0x6f,
+  0x2c, 0x42, 0x38, 0x92, 0x15, 0x67, 0x59, 0xb1, 0x6c, 0x36, 0x2f, 0xfb,
+  0x7a, 0x74, 0x87, 0xc8, 0x9e, 0xa0, 0x8f, 0xed, 0x30, 0x90, 0x57, 0x85,
+  0x10, 0x82, 0x1b, 0x41, 0xa6, 0x58, 0xa7, 0xb1, 0x22, 0xbb, 0xf3, 0x1b,
+  0x73, 0x6a, 0x96, 0x6d, 0xf0, 0xf7, 0x74, 0xef, 0x3d, 0x5c, 0xd9, 0x8f,
+  0xd6, 0x9c, 0xec, 0xf9, 0xb0, 0x14, 0x1a, 0xdd, 0x66, 0x00, 0x6b, 0x71,
+  0xdd, 0x21, 0xf1, 0xb4, 0xb5, 0xa8, 0xc0, 0xc2, 0x8c, 0x1f, 0xdb, 0xe5,
+  0xde, 0xe8, 0xe2, 0xbc, 0xd7, 0x17, 0x4f, 0xbb, 0xf9, 0xc0, 0xc0, 0xfc,
+  0x3b, 0x81, 0xce, 0x44, 0x34, 0x82, 0xcf, 0x9e, 0x4a, 0xe0, 0xd2, 0x2b,
+  0xa2, 0x17, 0x71, 0xfd, 0xb4, 0xab, 0xfc, 0x31, 0x25, 0xbf, 0x63, 0xfc,
+  0x34, 0xea, 0x4c, 0x7b, 0x84, 0x1c, 0x82, 0xea, 0x3b, 0x72, 0x99, 0x78,
+  0xef, 0x6c, 0xa2, 0x31, 0x95, 0x71, 0xa2, 0x6e, 0x3e, 0x90, 0x98, 0xf2,
+  0xb4, 0x33, 0xa3, 0xda, 0xa1, 0xc8, 0x54, 0xba, 0xe2, 0x6f, 0x65, 0xc5,
+  0x57, 0x9e, 0xa6, 0x54, 0xd3, 0x1c, 0x77, 0xa7, 0xd8, 0xe6, 0x76, 0xae,
+  0xc2, 0x78, 0x69, 0x22, 0x89, 0x37, 0xc8, 0xa1, 0x3a, 0xa3, 0x44, 0xae,
+  0xbb, 0xf9, 0xf3, 0x98, 0xb4, 0x1e, 0x1e, 0x90, 0x3f, 0x9e, 0x35, 0x95,
+  0x0e, 0x69, 0x77, 0xd0, 0xaf, 0x5d, 0xac, 0xfd, 0xa1, 0x41, 0xc9, 0x98,
+  0x7e, 0xe5, 0x90, 0xc4, 0xe0, 0xea, 0xae, 0x3b, 0x8d, 0x2c, 0x0c, 0x18,
+  0x3c, 0x6a, 0xa0, 0xad, 0x91, 0x1a, 0x73, 0x69, 0x37, 0xb8, 0x99, 0x4f,
+  0x47, 0xdb, 0x89, 0x1a, 0xc0, 0x89, 0x2d, 0x79, 0x41, 0xe3, 0xa4, 0xe1,
+  0xa9, 0x09, 0x4c, 0xfe, 0x6a, 0xc9, 0xa1, 0x67, 0xf7, 0x95, 0x10, 0xd7,
+  0xc7, 0xed, 0x5f, 0x7a, 0x53, 0x89, 0xcf, 0xd6, 0x80, 0x61, 0x3b, 0x2e,
+  0x49, 0x31, 0xef, 0xa2, 0x3d, 0x8c, 0x58, 0xe8, 0xed, 0xee, 0xed, 0xd9,
+  0xfa, 0xb1, 0xb6, 0x7f, 0x5c, 0x15, 0xe7, 0xb7, 0xef, 0xe1, 0xfe, 0xaf,
+  0x9e, 0xc3, 0xfd, 0x7f, 0xd1, 0x1c, 0x3e, 0xf9, 0x75, 0x73, 0xf8, 0xe4,
+  0x37, 0x9b, 0x43, 0x57, 0x79, 0x85, 0x1e, 0xa2, 0x96, 0xf3, 0xba, 0x23,
+  0x3a, 0xc9, 0x96, 0xa2, 0xa2, 0x1d, 0x63, 0x0a, 0x63, 0x91, 0x75, 0x69,
+  0x1e, 0x24, 0x8c, 0x79, 0x86, 0x1a, 0x14, 0x9d, 0x01, 0x37, 0x36, 0x35,
+  0x06, 0x9c, 0xae, 0x55, 0x6e, 0x93, 0x9d, 0x48, 0xdc, 0xc1, 0xc2, 0x35,
+  0xc2, 0xf1, 0xab, 0x92, 0x34, 0x07, 0xf2, 0xbd, 0xd0, 0xdd, 0xfe, 0x6e,
+  0x34, 0xc2, 0x27, 0x7f, 0x41, 0x06, 0x9a, 0xf3, 0x38, 0x44, 0xdd, 0x44,
+  0x61, 0x39, 0xe3, 0xf6, 0xfc, 0x7d, 0x0a, 0xfd, 0x44, 0x6b, 0xdd, 0x44,
+  0xde, 0x04, 0xb2, 0x3f, 0x94, 0x33, 0x26, 0x3a, 0xe7, 0xae, 0x8f, 0xdd,
+  0x6d, 0x64, 0x4f, 0xcb, 0x06, 0xf4, 0xec, 0x7d, 0x11, 0x10, 0xce, 0xb5,
+  0xd3, 0xf1, 0xed, 0x78, 0x7e, 0x94, 0xa0, 0x9e, 0xd2, 0x6a, 0xc7, 0x8e,
+  0xfa, 0x75, 0x1e, 0x70, 0xeb, 0xb4, 0x50, 0x0a, 0x2b, 0x1c, 0x3b, 0x71,
+  0xc7, 0x4d, 0xeb, 0x5f, 0x2d, 0x14, 0x7e, 0x53, 0x0d, 0x94, 0x07, 0x32,
+  0x4e, 0xfb, 0xe1, 0x54, 0xdd, 0x49, 0x39, 0x87, 0x02, 0x64, 0x16, 0xf4,
+  0x52, 0x2c, 0xab, 0xc1, 0xb1, 0xbc, 0xeb, 0x80, 0xfa, 0x1c, 0x40, 0x59,
+  0x59, 0xed, 0xc3, 0x66, 0x34, 0x28, 0xa6, 0x9c, 0x47, 0x59, 0x73, 0x7c,
+  0x6a, 0x59, 0xe8, 0x47, 0x84, 0x68, 0x9d, 0x8c, 0x36, 0x4e, 0xad, 0x0a,
+  0x96, 0x75, 0x92, 0x71, 0xda, 0x4d, 0xfe, 0x90, 0x68, 0x7e, 0xde, 0x1e,
+  0x6f, 0x3a, 0xc9, 0x06, 0x69, 0x3d, 0xc9, 0xf3, 0xb8, 0x6e, 0xc9, 0x7e,
+  0x18, 0xf0, 0x26, 0x26, 0x57, 0x4b, 0x72, 0x8f, 0xe3, 0x15, 0xd3, 0x97,
+  0xe5, 0x7c, 0xa1, 0xc5, 0x25, 0xf2, 0x42, 0x92, 0x52, 0xa8, 0xd3, 0xe5,
+  0xb2, 0xb9, 0x2e, 0xd5, 0xc4, 0xec, 0x07, 0xaa, 0xaa, 0xd6, 0xbc, 0x33,
+  0xcb, 0x33, 0xa9, 0xf2, 0x05, 0xb2, 0x98, 0x3d, 0x06, 0xcb, 0xbe, 0x2d,
+  0xf2, 0x00, 0xe5, 0x4f, 0x80, 0xe9, 0x5c, 0xf3, 0xe0, 0x7d, 0x90, 0x06,
+  0xd0, 0x1b, 0xf4, 0x48, 0xd1, 0xb6, 0xb4, 0x7f, 0xe6, 0x5d, 0x62, 0x9c,
+  0xe0, 0xa4, 0x54, 0x7e, 0x15, 0x35, 0x74, 0x56, 0x7b, 0xc1, 0xd4, 0xb0,
+  0x36, 0x5b, 0xe8, 0x5e, 0x49, 0x0d, 0xc0, 0x6c, 0xc4, 0x53, 0xd3, 0x87,
+  0xb2, 0x33, 0xcb, 0x88, 0xc6, 0x22, 0x29, 0x05, 0x56, 0x79, 0x93, 0x7d,
+  0x62, 0xf4, 0x67, 0xa8, 0x37, 0xb1, 0xa0, 0xb9, 0x51, 0x64, 0xe4, 0xe1,
+  0xe8, 0xe8, 0xe4, 0xa4, 0x85, 0x14, 0xa5, 0x69, 0xe3, 0xc4, 0x68, 0x86,
+  0xe4, 0xd7, 0x94, 0x23, 0x0e, 0x24, 0x3f, 0xba, 0x1b, 0x23, 0x35, 0xb2,
+  0xc5, 0x15, 0xb3, 0xb4, 0xce, 0x95, 0x76, 0x38, 0x15, 0x4d, 0xa7, 0x30,
+  0xdd, 0xcc, 0x29, 0xab, 0xeb, 0x66, 0x69, 0xb4, 0xfc, 0xdf, 0x3f, 0x83,
+  0x25, 0x0e, 0x4a, 0x93, 0xd9, 0xe2, 0x73, 0xe5, 0xbb, 0xff, 0xc2, 0xbd,
+  0x16, 0x61, 0x10, 0x3a, 0xaf, 0x84, 0x63, 0x16, 0xa9, 0x6b, 0x24, 0x69,
+  0x85, 0x05, 0x88, 0x2a, 0xa1, 0x50, 0x16, 0x2d, 0x37, 0x6e, 0x86, 0xab,
+  0x4e, 0x45, 0xb0, 0x9d, 0x58, 0x77, 0x47, 0xd7, 0x12, 0x60, 0xc7, 0x4e,
+  0xbd, 0xd6, 0xab, 0xd5, 0xbd, 0xbc, 0xf0, 0x85, 0xb5, 0x27, 0x20, 0xe5,
+  0xfd, 0xcf, 0x4f, 0xfa, 0xbb, 0xdf, 0x6d, 0x7f, 0x36, 0xec, 0xec, 0x01,
+  0xf8, 0x9f, 0x79, 0x02, 0x04, 0x9b, 0xd6, 0xfb, 0x63, 0x6f, 0x05, 0xc7,
+  0xd4, 0x23, 0xda, 0x69, 0xe5, 0x61, 0xfc, 0x6b, 0x77, 0x5a, 0x24, 0x31,
+  0xc4, 0x13, 0x62, 0xfe, 0x9a, 0x2e, 0x8b, 0xfc, 0x13, 0x10, 0x55, 0xe6,
+  0x96, 0x7f, 0x49, 0x14, 0x77, 0x2b, 0x98, 0x9c, 0x8e, 0xb4, 0x86, 0x9f,
+  0x2d, 0xdc, 0x68, 0x3e, 0xfc, 0xde, 0xbc, 0x6c, 0x6c, 0xca, 0x39, 0xb9,
+  0xd7, 0xb9, 0x8d, 0xbe, 0x4f, 0xa7, 0x01, 0xb1, 0x1e, 0x71, 0xcf, 0x17,
+  0x59, 0x43, 0xf8, 0x87, 0xb5, 0xbe, 0x96, 0xb6, 0xff, 0xea, 0x12, 0x74,
+  0xad, 0x0b, 0x42, 0xed, 0xac, 0x29, 0x07, 0x80, 0xc9, 0x70, 0x10, 0x99,
+  0xb6, 0x41, 0xeb, 0x71, 0x5c, 0x69, 0x01, 0x22, 0x8d, 0x06, 0x11, 0xfd,
+  0x69, 0x3c, 0x92, 0x60, 0x89, 0xce, 0x1c, 0x4d, 0x60, 0xde, 0xb5, 0x94,
+  0x41, 0x44, 0xe7, 0x1c, 0x8a, 0x42, 0xe2, 0xbb, 0x96, 0x64, 0x8b, 0x89,
+  0xd1, 0x1c, 0x7d, 0x7a, 0x8b, 0x4e, 0x11, 0x89, 0x90, 0xf9, 0x8c, 0x36,
+  0xff, 0x8e, 0x3a, 0xdc, 0x67, 0x21, 0xf8, 0xc5, 0xab, 0xe9, 0xc0, 0xb2,
+  0x8e, 0xc0, 0x83, 0x70, 0xba, 0xd1, 0xbf, 0x91, 0xc4, 0xa4, 0x4a, 0x44,
+  0x7b, 0x14, 0xcc, 0x3f, 0x1b, 0xad, 0x95, 0xc6, 0x1e, 0xd1, 0x1b, 0x2a,
+  0xdd, 0xa0, 0xfd, 0xaa, 0x78, 0x23, 0xb6, 0x8b, 0x73, 0xa8, 0x93, 0xd5,
+  0x63, 0xf5, 0x8b, 0x94, 0x6f, 0xb2, 0x55, 0x8e, 0x2f, 0x6d, 0xf5, 0x85,
+  0x39, 0x21, 0x37, 0x89, 0x77, 0x8a, 0xc2, 0x64, 0x96, 0x29, 0x9e, 0x17,
+  0xd6, 0x2b, 0x39, 0x16, 0x38, 0xeb, 0x29, 0x37, 0xac, 0x05, 0x5c, 0xc2,
+  0xa9, 0x29, 0x6d, 0xdd, 0xce, 0x2d, 0xa3, 0x3e, 0x6b, 0x39, 0x2e, 0x6a,
+  0x91, 0x38, 0xa3, 0x5c, 0x5d, 0xb6, 0x80, 0xfd, 0x68, 0xd5, 0x69, 0xb2,
+  0x78, 0x54, 0x37, 0x51, 0x24, 0x3a, 0xb6, 0x6c, 0xdd, 0x73, 0x72, 0xde,
+  0x6c, 0xab, 0x72, 0x69, 0x8e, 0x78, 0x5e, 0xf8, 0xfb, 0x3d, 0x8d, 0xba,
+  0xeb, 0x58, 0x28, 0x25, 0x87, 0x42, 0x48, 0x92, 0xcd, 0xee, 0xfb, 0xdd,
+  0x6f, 0x0c, 0x8d, 0x94, 0xd9, 0x4a, 0x6d, 0x8a, 0xb6, 0xa0, 0xd5, 0xb6,
+  0x03, 0x0a, 0xab, 0x7b, 0xa9, 0x78, 0xe7, 0xc0, 0xb2, 0x3e, 0x59, 0x0e,
+  0x75, 0xb5, 0xd3, 0x35, 0x00, 0x1b, 0xe0, 0x0a, 0x0f, 0x4f, 0x22, 0x32,
+  0x0b, 0x60, 0x3e, 0x10, 0xc0, 0x0a, 0xd9, 0xeb, 0x90, 0xb8, 0xae, 0xc6,
+  0x03, 0x4b, 0x34, 0xcd, 0x52, 0xe7, 0x36, 0xe1, 0x56, 0x1a, 0x67, 0x61,
+  0x73, 0xbc, 0x88, 0x91, 0x49, 0xfd, 0x8b, 0xe5, 0xb7, 0x56, 0x24, 0x2a,
+  0x49, 0xb5, 0xf0, 0x48, 0x5b, 0x5e, 0x53, 0xe2, 0x02, 0x74, 0xdc, 0x2c,
+  0x2b, 0x89, 0xbc, 0x86, 0xc9, 0x31, 0x3d, 0x1d, 0x36, 0xf4, 0x27, 0xb4,
+  0x40, 0xf4, 0x36, 0x1e, 0x6d, 0x31, 0x97, 0x00, 0x09, 0x77, 0x96, 0xec,
+  0x3d, 0xf1, 0x36, 0x96, 0x82, 0xcc, 0x1f, 0x0a, 0x2d, 0x1f, 0x29, 0xee,
+  0xaa, 0x6d, 0x26, 0xbd, 0xeb, 0x59, 0x39, 0x1e, 0x9b, 0x91, 0xf7, 0x54,
+  0x4f, 0x31, 0xdf, 0x0e, 0x5c, 0x42, 0x7e, 0x4f, 0xd2, 0xea, 0x1a, 0xee,
+  0xb6, 0x3e, 0x2c, 0x07, 0x36, 0x89, 0xa8, 0x17, 0x8e, 0xf2, 0x5b, 0x3f,
+  0xaf, 0x25, 0xe8, 0x22, 0x37, 0x0d, 0xbb, 0x3f, 0xed, 0x16, 0xa4, 0xb1,
+  0x79, 0x98, 0xa3, 0x8c, 0x99, 0x5d, 0xe8, 0xa7, 0xda, 0xbd, 0x84, 0x2b,
+  0xa4, 0xad, 0x2e, 0x39, 0x28, 0x22, 0x0c, 0x82, 0x4b, 0x48, 0x53, 0xf3,
+  0xb0, 0x9a, 0x19, 0x4f, 0x41, 0x7b, 0x40, 0xbd, 0xff, 0xa6, 0x3f, 0xf6,
+  0xfa, 0xf4, 0xdf, 0xfd, 0x7f, 0xf4, 0xb4, 0x4e, 0xfc, 0xdd, 0xdd, 0xdd,
+  0x50, 0x08, 0xba, 0x86, 0x66, 0xc9, 0x36, 0x42, 0xf0, 0x2d, 0x25, 0x41,
+  0xae, 0xf8, 0xc0, 0x65, 0xd2, 0xcb, 0xe7, 0xd7, 0x3f, 0xee, 0x0d, 0xf6,
+  0x76, 0x77, 0x77, 0x7f, 0x1e, 0x2e, 0x68, 0x7e, 0xaf, 0xd0, 0xac, 0xf9,
+  0xaf, 0xdf, 0xec, 0x0e, 0xf7, 0x64, 0x27, 0x9a, 0x57, 0xce, 0xbf, 0x73,
+  0xf5, 0xfa, 0xc0, 0xf4, 0xc4, 0x3b, 0xf9, 0xc0, 0x13, 0x32, 0xec, 0xd9,
+  0x4c, 0x13, 0x1f, 0xfa, 0xdd, 0x15, 0xfb, 0x70, 0x53, 0x91, 0x27, 0xf0,
+  0xd9, 0x93, 0xfd, 0xfd, 0x84, 0x55, 0x0e, 0x46, 0x88, 0xb2, 0x83, 0x9d,
+  0x48, 0x1a, 0xa5, 0x22, 0x02, 0xdf, 0x66, 0x54, 0xd6, 0x92, 0xea, 0xe7,
+  0xb1, 0xa5, 0xdc, 0x4d, 0x86, 0x00, 0xe1, 0x27, 0x73, 0x20, 0x99, 0x8b,
+  0xd2, 0x5c, 0xe5, 0xe5, 0xf4, 0xde, 0xb5, 0xaa, 0x05, 0x12, 0x99, 0xb5,
+  0xd8, 0xab, 0xde, 0x95, 0x8a, 0xab, 0x22, 0x40, 0xf4, 0x0a, 0xda, 0x13,
+  0xf7, 0x1c, 0x92, 0xf0, 0x8b, 0x52, 0x78, 0xf9, 0xe1, 0x4b, 0xbe, 0x5a,
+  0x56, 0x42, 0x8f, 0x07, 0xe7, 0xfb, 0x5d, 0xda, 0x2a, 0x85, 0x4b, 0x33,
+  0xfe, 0xd2, 0xfc, 0x67, 0x55, 0x25, 0x1d, 0x52, 0x2e, 0x69, 0x2f, 0xe1,
+  0x28, 0x5c, 0x65, 0xcd, 0xe4, 0xa6, 0x4b, 0x81, 0x02, 0x19, 0x6e, 0x7a,
+  0x7b, 0x63, 0x06, 0x74, 0x6f, 0x2b, 0x40, 0x44, 0xc9, 0x6a, 0x4b, 0x7b,
+  0xe2, 0x4d, 0x93, 0xc4, 0x16, 0x25, 0x65, 0xc5, 0xa9, 0x7e, 0xc5, 0x9a,
+  0x8a, 0xb8, 0x99, 0xe3, 0x4b, 0xc6, 0xf7, 0xf2, 0x5a, 0xb1, 0xe8, 0x93,
+  0x9b, 0x6c, 0x2e, 0x32, 0x73, 0x4b, 0x2b, 0x98, 0xf7, 0x64, 0x0f, 0xf6,
+  0x22, 0x04, 0xd2, 0xbd, 0x2b, 0xfd, 0x95, 0x19, 0xc9, 0x36, 0x3b, 0x5e,
+  0xdd, 0x45, 0x27, 0x1c, 0x7a, 0xd7, 0x4b, 0x32, 0x1d, 0xc7, 0xa9, 0xdc,
+  0x28, 0x9a, 0x60, 0x30, 0x8c, 0x43, 0x0b, 0x8c, 0x50, 0xcc, 0x2a, 0x5c,
+  0x63, 0xf5, 0x72, 0x3c, 0x10, 0xdd, 0x07, 0x3d, 0x42, 0xc0, 0x83, 0x4e,
+  0xeb, 0xeb, 0x93, 0x23, 0x22, 0x35, 0x44, 0xe1, 0x44, 0xe0, 0xd5, 0xcc,
+  0x1f, 0x04, 0x3e, 0x0f, 0x19, 0x0e, 0x09, 0xc4, 0x86, 0xda, 0x3a, 0x6f,
+  0x51, 0x6c, 0x55, 0x82, 0x57, 0xa9, 0x0b, 0xfd, 0xb6, 0x94, 0xbf, 0xbe,
+  0xc7, 0x9b, 0x15, 0x21, 0x1c, 0x6c, 0xe9, 0x89, 0x36, 0x5a, 0xfe, 0xf4,
+  0xd9, 0x70, 0x97, 0x87, 0xe8, 0x08, 0xfb, 0x15, 0x2e, 0x09, 0x1f, 0x4f,
+  0x2d, 0x74, 0x13, 0xe9, 0x0a, 0xaa, 0x1c, 0xed, 0x4a, 0x3f, 0x61, 0x76,
+  0x15, 0xce, 0x38, 0xd1, 0xdf, 0x7a, 0x21, 0xfc, 0x07, 0x22, 0x82, 0x7a,
+  0x7b, 0x71, 0x79, 0x80, 0x56, 0x69, 0x53, 0x29, 0xbb, 0x79, 0x59, 0x2a,
+  0xd2, 0x99, 0x85, 0x70, 0x0c, 0xb1, 0x2a, 0x7b, 0x42, 0x80, 0x1b, 0x7d,
+  0x47, 0x57, 0x58, 0xd2, 0x2d, 0x20, 0x37, 0x96, 0x60, 0xff, 0x40, 0x2a,
+  0xed, 0x58, 0x59, 0x63, 0x1a, 0x4a, 0xc0, 0x05, 0x39, 0xf8, 0x4a, 0x0a,
+  0x03, 0xb0, 0xa6, 0x1c, 0x43, 0x5f, 0x62, 0x2d, 0xb7, 0x2d, 0xf8, 0x42,
+  0xcc, 0x57, 0xab, 0x77, 0xa2, 0xc6, 0xa4, 0x94, 0xcd, 0x6c, 0x3a, 0x65,
+  0x24, 0x02, 0x90, 0xdf, 0x15, 0xb9, 0xfc, 0x3c, 0x88, 0x6d, 0xca, 0xbb,
+  0x1e, 0x7b, 0x00, 0xc6, 0x1e, 0xfc, 0x53, 0xbd, 0x3f, 0x93, 0x1f, 0xfa,
+  0xd5, 0x61, 0x6f, 0xd8, 0x9e, 0xd4, 0x18, 0xe5, 0x61, 0xcd, 0xf2, 0xad,
+  0x6d, 0xce, 0x88, 0x4c, 0x23, 0xb9, 0x9f, 0x7d, 0x6a, 0xa4, 0x28, 0x23,
+  0xc8, 0xf2, 0x8b, 0x27, 0xfb, 0x49, 0x7d, 0x6f, 0x74, 0x88, 0xb9, 0x3f,
+  0x09, 0xdd, 0xea, 0x08, 0x51, 0xef, 0x7b, 0x8b, 0xe2, 0x95, 0x45, 0xd7,
+  0x7b, 0x7a, 0xe5, 0x10, 0xaf, 0x08, 0x21, 0xa4, 0xc6, 0x90, 0x1f, 0x51,
+  0x72, 0xa3, 0x54, 0x21, 0x36, 0x9e, 0xa5, 0xc5, 0xc7, 0xda, 0x2a, 0xda,
+  0x68, 0xa8, 0x4f, 0x44, 0xd6, 0x8c, 0xe5, 0x76, 0x3f, 0x14, 0xef, 0x1d,
+  0x5f, 0x8c, 0xd1, 0x72, 0xa4, 0x66, 0xd7, 0x55, 0x80, 0xf9, 0xfe, 0x82,
+  0x82, 0x1e, 0xd1, 0xb9, 0x75, 0x05, 0x3e, 0x7e, 0xbf, 0x70, 0xd8, 0x52,
+  0x67, 0xdd, 0x48, 0x68, 0xf3, 0xdf, 0x03, 0x8d, 0x30, 0xac, 0xab, 0x7a,
+  0x86, 0xc7, 0x6d, 0x2d, 0x06, 0x1b, 0x93, 0xf0, 0xd9, 0xb5, 0x59, 0x9b,
+  0x73, 0x71, 0x90, 0x18, 0x1e, 0x7a, 0x98, 0x9c, 0x39, 0xe3, 0xb1, 0xe8,
+  0x83, 0x7c, 0xa2, 0xa9, 0x26, 0x62, 0x3a, 0xe2, 0xef, 0x03, 0x2d, 0x94,
+  0x13, 0x2d, 0x40, 0x0c, 0x8d, 0x06, 0x55, 0x77, 0xee, 0x9d, 0x9e, 0xe7,
+  0x5d, 0x67, 0x4c, 0xe3, 0xec, 0x64, 0xaf, 0x91, 0x22, 0xc4, 0x77, 0x8c,
+  0xec, 0xd2, 0x00, 0x1a, 0xc4, 0x83, 0x88, 0x92, 0xd2, 0xc5, 0xc7, 0x2b,
+  0xe5, 0xb0, 0x17, 0x33, 0x73, 0xff, 0x11, 0x39, 0x74, 0x59, 0xd8, 0xda,
+  0xa1, 0x44, 0x20, 0x43, 0x09, 0x71, 0x65, 0xd1, 0x0f, 0x52, 0x30, 0xc1,
+  0xeb, 0x2b, 0x2e, 0x26, 0x8a, 0x4a, 0xcf, 0xa5, 0xb0, 0x80, 0x65, 0x27,
+  0x4f, 0xf9, 0x4d, 0xdd, 0x8a, 0xee, 0xe3, 0x0f, 0x30, 0xa0, 0x33, 0x7f,
+  0x9e, 0x2e, 0x86, 0xd9, 0x76, 0x7d, 0x86, 0xcd, 0xc6, 0x29, 0x71, 0xf8,
+  0xe8, 0x7f, 0x6b, 0xac, 0xf5, 0xac, 0x2a, 0xeb, 0xe4, 0xbb, 0x67, 0x1a,
+  0x2a, 0x96, 0x72, 0x0a, 0x72, 0x37, 0x59, 0xbd, 0xfc, 0xde, 0x95, 0x78,
+  0x8a, 0xba, 0x4d, 0x34, 0xa7, 0x4e, 0x5f, 0xf7, 0x2f, 0xa9, 0xee, 0x48,
+  0xc8, 0x5e, 0x37, 0xf2, 0x12, 0x85, 0x6c, 0xca, 0x2a, 0x72, 0xdf, 0x39,
+  0x06, 0x74, 0x57, 0xbf, 0x9b, 0x4a, 0x3f, 0x8c, 0xa9, 0xb4, 0x1e, 0xd4,
+  0x05, 0xdb, 0xf1, 0xe4, 0x32, 0x27, 0x17, 0xc0, 0xd0, 0xee, 0x88, 0x20,
+  0xf8, 0x4c, 0xb8, 0x00, 0x89, 0x7e, 0x3a, 0xba, 0x96, 0x4e, 0x84, 0x8e,
+  0xf4, 0x8a, 0xfa, 0x86, 0xae, 0x66, 0xba, 0x31, 0x60, 0xf8, 0xc5, 0x89,
+  0x84, 0x84, 0x35, 0xe7, 0xdd, 0xe5, 0xe9, 0x5b, 0x09, 0xfe, 0xba, 0xf5,
+  0x09, 0xaa, 0xce, 0xc9, 0xd6, 0x4c, 0x63, 0x0c, 0x49, 0xde, 0x64, 0x28,
+  0xe2, 0x93, 0xd3, 0x84, 0x68, 0xda, 0xfa, 0x82, 0x02, 0xaf, 0x04, 0x4b,
+  0xa8, 0x26, 0x9a, 0x4c, 0x6a, 0xc4, 0xbb, 0x49, 0x70, 0x8b, 0x1a, 0x7e,
+  0x02, 0x98, 0xcf, 0x46, 0xd0, 0x50, 0x39, 0x60, 0x47, 0x61, 0x1b, 0xee,
+  0xeb, 0xb2, 0x73, 0x64, 0xfc, 0x05, 0xa3, 0x6d, 0xc8, 0x14, 0x4d, 0xc9,
+  0xeb, 0xf2, 0xae, 0x18, 0x9c, 0x12, 0x28, 0x3c, 0x39, 0x2d, 0xaf, 0xcd,
+  0x54, 0xbd, 0x8b, 0x5a, 0xf2, 0xef, 0xcf, 0xdf, 0x25, 0x5b, 0x24, 0x89,
+  0x93, 0x73, 0x9b, 0x3c, 0x4c, 0x4f, 0x6e, 0x8b, 0xd2, 0x69, 0xc4, 0xe1,
+  0x1b, 0xd7, 0x9b, 0x7e, 0x72, 0xfc, 0xc3, 0xe1, 0xdb, 0xf3, 0xd3, 0xe3,
+  0x9f, 0x38, 0x4a, 0x1b, 0x0c, 0x87, 0x7e, 0xfc, 0xa5, 0xa7, 0x85, 0xc3,
+  0x6b, 0x4f, 0xd1, 0x27, 0xd3, 0x8f, 0xfb, 0xd5, 0xb2, 0x80, 0x8f, 0x8f,
+  0x6e, 0xc1, 0xd1, 0xe8, 0xfc, 0x64, 0x20, 0xe5, 0xc3, 0x84, 0xf5, 0x98,
+  0x4b, 0x4e, 0xe3, 0x14, 0x0b, 0xaf, 0xd6, 0xb7, 0x61, 0x80, 0x42, 0x4f,
+  0x44, 0x3f, 0x79, 0xa7, 0x64, 0x38, 0x7d, 0xac, 0x38, 0xdd, 0xf1, 0xaf,
+  0xf3, 0x6b, 0x04, 0x19, 0xda, 0xfb, 0xa7, 0xd1, 0x9a, 0x64, 0xb4, 0x09,
+  0x82, 0xa4, 0x7a, 0xf2, 0x44, 0xda, 0x00, 0x60, 0x9d, 0xcd, 0xd8, 0xa5,
+  0xb5, 0x52, 0x8e, 0x02, 0x4e, 0x82, 0x65, 0x24, 0x34, 0x5b, 0x10, 0x3e,
+  0x11, 0x74, 0xdb, 0xd8, 0xd6, 0x6c, 0x17, 0x3d, 0x95, 0xf7, 0x08, 0xcb,
+  0x0e, 0xb9, 0x64, 0xac, 0x70, 0x38, 0x30, 0x76, 0xfa, 0x32, 0x39, 0xe8,
+  0xfd, 0x8e, 0x17, 0x89, 0xef, 0xfd, 0x8b, 0xd0, 0x33, 0x4a, 0x14, 0x45,
+  0xdd, 0x83, 0x9c, 0x3c, 0xc7, 0xca, 0xad, 0x7a, 0x60, 0xd8, 0xff, 0x69,
+  0x8e, 0xba, 0x20, 0x24, 0xa6, 0xd9, 0x78, 0x79, 0x7d, 0x1d, 0xc9, 0xb1,
+  0x43, 0xf9, 0xf7, 0x2c, 0x63, 0xc8, 0xb5, 0xd1, 0x5a, 0xa8, 0x08, 0x8e,
+  0xf8, 0x75, 0xcd, 0x18, 0x7a, 0x88, 0x57, 0x89, 0x4a, 0x5d, 0x4e, 0x7b,
+  0x54, 0x18, 0x06, 0x5e, 0x69, 0xd4, 0x65, 0x0b, 0x9b, 0xc3, 0x5c, 0x6d,
+  0x7e, 0xb1, 0x29, 0x81, 0xb6, 0x9e, 0xdc, 0xc8, 0xa4, 0xd1, 0xf4, 0x58,
+  0xa5, 0xa1, 0x52, 0xae, 0xd4, 0x7b, 0x73, 0xe2, 0x37, 0x5f, 0x6e, 0x26,
+  0xf2, 0xa0, 0x3e, 0xd9, 0x15, 0x38, 0x78, 0x4f, 0xc2, 0x3e, 0x5a, 0x08,
+  0x56, 0x56, 0x5f, 0xf0, 0x2f, 0x37, 0xf9, 0x74, 0x9a, 0x89, 0xa7, 0x84,
+  0x98, 0x68, 0x39, 0x59, 0x9f, 0x03, 0x4b, 0xdd, 0x8b, 0xa9, 0xd5, 0x73,
+  0xe9, 0xeb, 0x7f, 0x68, 0x5f, 0x3d, 0x9a, 0x76, 0x72, 0x53, 0x3b, 0xf6,
+  0xd4, 0x31, 0xd3, 0x7c, 0xc7, 0x96, 0x9b, 0x76, 0x29, 0x62, 0x21, 0x30,
+  0x97, 0xa0, 0x1b, 0xa9, 0xb5, 0x28, 0x72, 0x9a, 0x15, 0x5a, 0xb3, 0x9c,
+  0x39, 0x68, 0x53, 0x45, 0xbc, 0x23, 0xd6, 0x11, 0xba, 0xb4, 0x78, 0x05,
+  0xb1, 0x79, 0xa8, 0xce, 0x5e, 0x45, 0x7c, 0x81, 0x5c, 0xb5, 0x83, 0x78,
+  0x66, 0x57, 0x9d, 0x54, 0x75, 0xf7, 0xb9, 0x9d, 0xc7, 0x19, 0x1e, 0x8a,
+  0xe3, 0x22, 0x5b, 0x0c, 0x0f, 0x66, 0x05, 0x1c, 0xbf, 0xa2, 0xed, 0xf7,
+  0xc3, 0x14, 0x43, 0xe6, 0x32, 0x65, 0xb1, 0xac, 0xc1, 0x02, 0x90, 0x94,
+  0xfa, 0xf1, 0x33, 0x85, 0x61, 0xc5, 0x5c, 0x6f, 0x3e, 0x02, 0xba, 0xcd,
+  0x0b, 0x2b, 0xee, 0x4d, 0xf0, 0x3d, 0xad, 0xc6, 0x54, 0x63, 0x9a, 0xdc,
+  0x3c, 0x0d, 0x57, 0x27, 0x6a, 0xdb, 0xfe, 0xc5, 0x51, 0x3d, 0x51, 0x57,
+  0xf9, 0x77, 0x72, 0xaa, 0x22, 0x60, 0xb0, 0xd7, 0x12, 0x4c, 0x69, 0x55,
+  0x99, 0x63, 0x44, 0x33, 0xfb, 0x91, 0x0a, 0x25, 0x85, 0x1c, 0xeb, 0xd1,
+  0x43, 0xf4, 0x38, 0x87, 0xc7, 0xb7, 0x1e, 0xc6, 0x2b, 0xc7, 0x40, 0x75,
+  0xc1, 0xa6, 0xd3, 0x8b, 0x5d, 0xca, 0x82, 0x52, 0x84, 0x45, 0x9b, 0x20,
+  0xc5, 0x14, 0xe7, 0x41, 0xdb, 0x8e, 0x84, 0xdb, 0x70, 0x7b, 0x3c, 0xb1,
+  0xe5, 0x8e, 0xcc, 0x93, 0x55, 0x5a, 0x71, 0x05, 0x80, 0xe2, 0xa3, 0x62,
+  0x5e, 0xb8, 0x6e, 0x61, 0x36, 0x59, 0x36, 0x6d, 0xa0, 0xae, 0xd7, 0x27,
+  0xc9, 0xb6, 0x45, 0x97, 0xb6, 0x70, 0x10, 0xd4, 0x40, 0x39, 0xd7, 0x54,
+  0xc9, 0x83, 0xde, 0xb6, 0x44, 0xf6, 0x38, 0xea, 0x63, 0x73, 0x28, 0x63,
+  0x31, 0x3b, 0xed, 0x72, 0x95, 0xb1, 0x83, 0xcd, 0x05, 0xb0, 0xa3, 0x9f,
+  0xe7, 0x92, 0x4d, 0x91, 0xaf, 0xbf, 0x61, 0x6f, 0x8c, 0xf7, 0x71, 0xcb,
+  0xc0, 0x2c, 0x8e, 0x9a, 0x3a, 0x38, 0xca, 0xc1, 0x97, 0x51, 0x01, 0xc1,
+  0x08, 0x28, 0x5b, 0x2b, 0x43, 0x5f, 0xd5, 0xc9, 0x0f, 0x1c, 0x64, 0x27,
+  0xe7, 0xb7, 0xcf, 0xc5, 0xbf, 0x49, 0xfa, 0x06, 0xdd, 0x78, 0xf8, 0x91,
+  0x95, 0xf8, 0xc1, 0x28, 0x3e, 0x56, 0xe3, 0xa7, 0xe6, 0x8f, 0x6f, 0xe9,
+  0x8f, 0x2b, 0x36, 0x12, 0x25, 0x77, 0x9f, 0x3d, 0x73, 0xe1, 0xd6, 0xa6,
+  0x3c, 0x95, 0xc4, 0x4f, 0x76, 0x01, 0x0e, 0x93, 0xe0, 0xd4, 0x94, 0xe8,
+  0xef, 0x32, 0x54, 0xa1, 0xff, 0x6a, 0x33, 0x64, 0x2c, 0x91, 0x6a, 0x1b,
+  0x04, 0xae, 0xe4, 0x7f, 0x24, 0x69, 0x46, 0x9c, 0x26, 0xdf, 0x87, 0x17,
+  0x62, 0xc4, 0x6c, 0xf5, 0x65, 0x0c, 0xe5, 0x6e, 0xa6, 0xea, 0xef, 0x14,
+  0x9b, 0xd1, 0x02, 0x5b, 0x09, 0x0a, 0xbe, 0xcc, 0x2d, 0xac, 0x11, 0x96,
+  0x91, 0x0d, 0xf2, 0xb3, 0xc3, 0x92, 0x0e, 0x1a, 0xcb, 0xb3, 0x7c, 0x45,
+  0x17, 0x56, 0x0f, 0x19, 0xb7, 0xbb, 0xfc, 0xd1, 0xb9, 0xda, 0xd7, 0x4e,
+  0xd5, 0x6b, 0xba, 0xa2, 0xd4, 0xd0, 0x13, 0xe6, 0x5c, 0x52, 0xd8, 0x74,
+  0xa9, 0x5d, 0x4a, 0x0f, 0x3f, 0x6a, 0xa5, 0x03, 0xab, 0x25, 0x2b, 0xfa,
+  0x39, 0x07, 0x76, 0x16, 0xe4, 0x71, 0x10, 0x0b, 0x1f, 0x6d, 0x04, 0x73,
+  0x9e, 0xcd, 0x29, 0x1c, 0x62, 0x6f, 0x46, 0xce, 0xad, 0x26, 0xcd, 0x8a,
+  0x3e, 0xb7, 0xa2, 0xc2, 0xf7, 0x94, 0xb4, 0x37, 0xba, 0x65, 0x19, 0x6d,
+  0x13, 0x54, 0xba, 0x3d, 0xac, 0xef, 0x8b, 0xc9, 0xcd, 0xeb, 0x77, 0xa3,
+  0x55, 0x55, 0xbe, 0xdb, 0x83, 0xc3, 0xd3, 0x46, 0x0b, 0xa1, 0xbd, 0xc0,
+  0x18, 0x38, 0xa1, 0xc9, 0x20, 0x93, 0xf7, 0xd0, 0xfb, 0x6d, 0xbc, 0xb9,
+  0xf6, 0x2b, 0xd6, 0x39, 0x44, 0x9a, 0x05, 0x4b, 0x71, 0x51, 0x3c, 0xe1,
+  0x89, 0x1f, 0xa4, 0x74, 0x16, 0xd8, 0xb5, 0xb2, 0xaa, 0x30, 0x3b, 0x85,
+  0x10, 0x50, 0x83, 0x05, 0x2d, 0x56, 0x1e, 0x5e, 0xa8, 0xbb, 0xaf, 0xc1,
+  0x7f, 0xa8, 0x7f, 0xfc, 0x92, 0x65, 0x3e, 0xa5, 0x32, 0xe2, 0xeb, 0x2a,
+  0xb2, 0xe7, 0x1d, 0x90, 0x88, 0x17, 0x10, 0x34, 0x5b, 0x75, 0x46, 0xaf,
+  0xf3, 0x2e, 0xed, 0xcb, 0x66, 0xc5, 0x8f, 0xaa, 0x55, 0x43, 0x32, 0x73,
+  0xb2, 0xff, 0xf5, 0x57, 0xe1, 0xed, 0xf9, 0xfa, 0xdd, 0x8a, 0xcf, 0xd1,
+  0x6f, 0x06, 0x8a, 0x79, 0x16, 0x8d, 0xc0, 0x53, 0xe8, 0xc3, 0xb9, 0x10,
+  0x5a, 0xac, 0x78, 0x07, 0x94, 0x33, 0xeb, 0x01, 0x29, 0x61, 0x9e, 0x90,
+  0x3f, 0xd6, 0x3e, 0x28, 0x40, 0xd7, 0x15, 0xf5, 0xd7, 0x81, 0x80, 0x1d,
+  0x71, 0xbe, 0xda, 0x05, 0x47, 0xf6, 0xce, 0x45, 0x11, 0xde, 0x5e, 0xb7,
+  0x46, 0xf1, 0xe6, 0x48, 0xbe, 0xc5, 0xf2, 0x84, 0x49, 0x2c, 0xec, 0xf3,
+  0x1f, 0x3b, 0xfb, 0x16, 0xb0, 0x64, 0x81, 0xeb, 0x38, 0xa6, 0xe6, 0x06,
+  0x0f, 0x15, 0x84, 0x22, 0xff, 0x34, 0x42, 0x8c, 0x79, 0xc5, 0x6e, 0x46,
+  0x30, 0x9a, 0xa3, 0xd0, 0xb6, 0x73, 0xd4, 0x4f, 0xd5, 0xc4, 0xa2, 0x3d,
+  0x19, 0x31, 0xdd, 0xc9, 0x43, 0x9b, 0x29, 0x8f, 0x60, 0xac, 0xf0, 0xba,
+  0xb0, 0xdf, 0x75, 0x9b, 0x7e, 0x6b, 0x94, 0x24, 0xba, 0x5c, 0x1f, 0xbd,
+  0x49, 0xf5, 0x85, 0x64, 0x6b, 0x6c, 0xae, 0x6b, 0x2f, 0xb3, 0x91, 0x55,
+  0xec, 0xa7, 0x8c, 0x4d, 0x8e, 0x37, 0xf7, 0xec, 0xf3, 0x67, 0x4f, 0xb7,
+  0xb7, 0xfb, 0xd6, 0xa3, 0xc1, 0x90, 0x89, 0x31, 0xa9, 0x39, 0xf3, 0x9c,
+  0x24, 0x17, 0x07, 0x1f, 0xcc, 0x14, 0xdf, 0x40, 0x30, 0x58, 0x2f, 0x4c,
+  0xbc, 0x39, 0xba, 0xc7, 0xf4, 0x3d, 0x5a, 0x44, 0x32, 0xc1, 0x21, 0xd0,
+  0xad, 0x21, 0x4c, 0x97, 0x4d, 0xc6, 0x0f, 0x58, 0x37, 0xfc, 0x4a, 0xa9,
+  0xc0, 0xc5, 0xed, 0xad, 0x1f, 0x8a, 0x0b, 0x8c, 0xc1, 0x4e, 0xd2, 0x9b,
+  0x36, 0xcc, 0x50, 0x3b, 0xe7, 0x6b, 0x0f, 0x7f, 0x90, 0x88, 0x36, 0x97,
+  0x7a, 0xc5, 0xce, 0xa2, 0xf3, 0xe5, 0x78, 0x66, 0xee, 0xa0, 0x11, 0x95,
+  0xae, 0xf9, 0x94, 0x9c, 0xe6, 0x52, 0x1f, 0x9d, 0x75, 0x70, 0x5b, 0x8a,
+  0x3c, 0xde, 0x13, 0x8c, 0xbb, 0xbd, 0xd1, 0xc4, 0x83, 0xe8, 0xd2, 0x4c,
+  0x44, 0x6b, 0x4b, 0x7a, 0x0b, 0xfe, 0x10, 0x15, 0xc9, 0x19, 0xac, 0x1a,
+  0xd8, 0xa7, 0xac, 0xf6, 0xcc, 0xb8, 0xc1, 0x1d, 0x29, 0x88, 0x48, 0x60,
+  0x24, 0x47, 0x74, 0xf2, 0x92, 0x55, 0xc1, 0x28, 0x41, 0x3e, 0x73, 0x38,
+  0x4b, 0x6e, 0x95, 0xaf, 0x34, 0x42, 0xfd, 0x86, 0xcb, 0x96, 0x0b, 0x33,
+  0x32, 0x82, 0x6e, 0x96, 0xa1, 0x78, 0x13, 0x09, 0xb2, 0x00, 0xb4, 0xac,
+  0xa5, 0x79, 0xb9, 0x0d, 0x71, 0x52, 0x88, 0xf3, 0x95, 0x2b, 0x7e, 0x23,
+  0x23, 0x95, 0xdd, 0x35, 0x9c, 0x09, 0xc9, 0x5e, 0x60, 0xb3, 0xc8, 0x9f,
+  0x82, 0xc3, 0x2b, 0x78, 0x48, 0x2a, 0x9a, 0xe0, 0xfc, 0xf3, 0x9a, 0xbd,
+  0x55, 0xb7, 0xbe, 0x14, 0xf8, 0x58, 0x22, 0x85, 0x0b, 0x66, 0x66, 0x32,
+  0xc8, 0x78, 0xed, 0x71, 0x8f, 0x7a, 0xc8, 0x56, 0x51, 0x62, 0x22, 0x40,
+  0x67, 0x54, 0xbd, 0x9f, 0x8a, 0xc3, 0x8e, 0xdb, 0x96, 0xe2, 0x7f, 0x69,
+  0xac, 0xb8, 0x9b, 0xf4, 0xb1, 0xf7, 0xa5, 0xc2, 0x70, 0x7a, 0x89, 0x54,
+  0x73, 0x81, 0x79, 0xaf, 0xf0, 0x4f, 0xdb, 0xa6, 0x34, 0x19, 0x49, 0xe0,
+  0xe2, 0x88, 0x36, 0x8a, 0x69, 0xa0, 0xbc, 0x64, 0xef, 0xcb, 0x41, 0x2f,
+  0xaa, 0x79, 0xda, 0x09, 0x20, 0xee, 0x23, 0xd8, 0xa1, 0x2d, 0xfb, 0x4c,
+  0x3f, 0x71, 0xa7, 0x99, 0xf1, 0x80, 0xcd, 0x36, 0x79, 0xb3, 0x0c, 0xa5,
+  0xe3, 0x58, 0xdd, 0xa2, 0x48, 0x78, 0xc3, 0x7d, 0x4a, 0x8b, 0xe1, 0xb2,
+  0xd2, 0x60, 0x8f, 0x11, 0x56, 0xa9, 0x01, 0x5d, 0x94, 0x1e, 0x66, 0xe2,
+  0x32, 0x9c, 0x95, 0x77, 0x01, 0xf2, 0x96, 0x4c, 0x01, 0xdb, 0xbb, 0x76,
+  0x06, 0x02, 0x55, 0xdc, 0xfb, 0x6f, 0xfd, 0xe5, 0x07, 0x9a, 0xa9, 0x7f,
+  0xe8, 0x4c, 0x69, 0x68, 0x3f, 0x0d, 0xb2, 0xae, 0x60, 0x04, 0x27, 0x7f,
+  0xc4, 0xac, 0xfc, 0x95, 0x20, 0x29, 0x3c, 0x35, 0x28, 0xec, 0x4d, 0x0d,
+  0xfe, 0x71, 0x68, 0x15, 0x5e, 0x69, 0x24, 0xa5, 0x24, 0x12, 0x68, 0xe5,
+  0xe3, 0xfb, 0xc0, 0x77, 0x44, 0xdb, 0xf0, 0xa7, 0xa2, 0x4f, 0xfb, 0x38,
+  0x35, 0xb6, 0x57, 0x8a, 0x02, 0x4b, 0x44, 0xb1, 0xce, 0xab, 0xf8, 0x53,
+  0x25, 0x35, 0x84, 0x8d, 0xd1, 0x61, 0x7a, 0x4e, 0x16, 0x19, 0xff, 0x3c,
+  0xb4, 0x00, 0x08, 0x2d, 0x73, 0x80, 0xd5, 0xf8, 0xe3, 0xa0, 0xbe, 0x9f,
+  0x8f, 0xcb, 0x99, 0xec, 0x75, 0x2e, 0x47, 0x9b, 0xe8, 0xcf, 0x78, 0x61,
+  0x10, 0xd9, 0x18, 0x78, 0x29, 0x88, 0xfd, 0x28, 0x01, 0x1f, 0x1b, 0x29,
+  0x28, 0x17, 0x5c, 0x71, 0x7d, 0x5e, 0x54, 0x1d, 0xfa, 0x63, 0xc2, 0x70,
+  0x1c, 0x56, 0x87, 0x96, 0xf0, 0x5a, 0xdd, 0x39, 0x57, 0xed, 0xca, 0xdc,
+  0x8d, 0x07, 0x36, 0x8f, 0xab, 0xc3, 0x17, 0x4b, 0xdf, 0x9c, 0x70, 0x7d,
+  0xe7, 0x0f, 0xc8, 0x15, 0xe1, 0x57, 0xb5, 0xe4, 0xf3, 0x25, 0xfd, 0x48,
+  0x30, 0x07, 0x9a, 0x2c, 0x44, 0xfe, 0x0c, 0x4d, 0xe7, 0xa1, 0x32, 0x01,
+  0x57, 0x71, 0x29, 0xd5, 0x06, 0x33, 0x11, 0x58, 0xd8, 0x1c, 0xee, 0xa0,
+  0x9f, 0x7a, 0x94, 0x3e, 0x70, 0x79, 0x2c, 0x63, 0xf2, 0xaf, 0x6f, 0x0d,
+  0x16, 0x2a, 0x41, 0x16, 0xe6, 0xa9, 0x96, 0x1d, 0x64, 0x65, 0xd2, 0xcb,
+  0xae, 0xe4, 0x4c, 0x6e, 0x8e, 0x3e, 0x0d, 0x1f, 0x6a, 0x8e, 0x51, 0x3d,
+  0x70, 0x86, 0x08, 0x54, 0x82, 0x9c, 0x4f, 0xf9, 0x95, 0xbd, 0x7e, 0x9b,
+  0x72, 0x36, 0x65, 0x7c, 0x06, 0xb5, 0xfb, 0xc0, 0x58, 0x4b, 0x46, 0xe2,
+  0xb6, 0xea, 0x52, 0x07, 0xf1, 0x40, 0xc1, 0x41, 0x51, 0xe8, 0x70, 0x7d,
+  0x73, 0x2e, 0xae, 0xa8, 0xb5, 0x37, 0x51, 0x3d, 0xa1, 0x64, 0xbc, 0x16,
+  0xfa, 0x09, 0x50, 0xfe, 0x9c, 0x7c, 0x9a, 0x91, 0xd8, 0x51, 0x12, 0x13,
+  0xb1, 0x08, 0x3b, 0xad, 0x2a, 0x0c, 0xaa, 0x1f, 0x62, 0x9e, 0x8e, 0xf5,
+  0xcd, 0xad, 0x2e, 0xbb, 0x75, 0xd5, 0x2c, 0x3e, 0x50, 0xd1, 0xa0, 0xfb,
+  0x0f, 0x28, 0x5d, 0x7b, 0xe9, 0xf9, 0xdc, 0xf1, 0x03, 0x4c, 0x2d, 0xd7,
+  0x46, 0x5b, 0x2e, 0xa8, 0x1d, 0x6c, 0xf1, 0x59, 0xc9, 0xe6, 0xcc, 0x43,
+  0xc3, 0x90, 0x88, 0x9e, 0x40, 0xc0, 0xfc, 0x44, 0xd8, 0xad, 0x36, 0xd5,
+  0xf0, 0xd3, 0xa0, 0x63, 0x14, 0xb1, 0xff, 0x80, 0x50, 0x9f, 0xdd, 0x4c,
+  0xe6, 0xb2, 0xc9, 0x2a, 0xaa, 0xde, 0xdc, 0x29, 0x30, 0x80, 0xfd, 0xc4,
+  0x74, 0x26, 0x14, 0xfb, 0x8b, 0xf2, 0x36, 0x75, 0xfe, 0x07, 0xef, 0x28,
+  0x73, 0xd5, 0x93, 0xd3, 0x4f, 0xe1, 0x61, 0x08, 0xb4, 0x9b, 0x6e, 0x12,
+  0x0e, 0xc1, 0x0f, 0xd6, 0x9e, 0x3c, 0x30, 0x4e, 0x10, 0xc3, 0xed, 0x27,
+  0x02, 0x44, 0xcf, 0xd3, 0xda, 0xf6, 0x90, 0x87, 0x80, 0x23, 0x85, 0x01,
+  0x93, 0x6e, 0x78, 0x13, 0x70, 0x6f, 0x25, 0x91, 0x98, 0x0a, 0x47, 0x62,
+  0xae, 0xca, 0xe1, 0x8a, 0x99, 0x61, 0xa8, 0x65, 0x77, 0x66, 0xda, 0x13,
+  0x22, 0x33, 0xe2, 0x6a, 0x10, 0x46, 0x30, 0x82, 0x49, 0x17, 0xff, 0x2e,
+  0x53, 0x6b, 0xb4, 0x49, 0xb9, 0x60, 0x85, 0x66, 0x71, 0xdb, 0x1e, 0x1a,
+  0x76, 0x8f, 0x52, 0x3d, 0xa2, 0xe3, 0xa3, 0xcb, 0x87, 0x9a, 0x83, 0x20,
+  0xea, 0x2c, 0xf8, 0xfe, 0xaa, 0x05, 0x57, 0x9d, 0x56, 0xa4, 0x07, 0xfd,
+  0x2c, 0xb1, 0x8a, 0xae, 0x00, 0xa3, 0x30, 0x30, 0x2b, 0x83, 0x66, 0xf7,
+  0x49, 0x94, 0x1b, 0xb0, 0xf3, 0x3f, 0xff, 0xf3, 0xcf, 0x62, 0xf5, 0xe0,
+  0x80, 0xbc, 0xfc, 0x90, 0x2f, 0x7c, 0xe1, 0x75, 0x72, 0xee, 0x55, 0x1a,
+  0xb3, 0x75, 0x54, 0x19, 0xa3, 0x89, 0x22, 0xb3, 0x5a, 0x16, 0xb4, 0x7c,
+  0x78, 0x56, 0x27, 0xc8, 0x40, 0x64, 0xc3, 0xd9, 0xa3, 0x0f, 0x1a, 0xa8,
+  0x8a, 0x24, 0x66, 0xf4, 0xc9, 0xf9, 0xed, 0xd3, 0x08, 0x48, 0x25, 0x89,
+  0x78, 0x95, 0x5a, 0x25, 0xf5, 0x5e, 0xac, 0x1c, 0x12, 0x17, 0x72, 0xd3,
+  0x21, 0x49, 0xe7, 0x7d, 0xd6, 0x4b, 0x6f, 0x10, 0xed, 0x7e, 0xae, 0xef,
+  0x83, 0x37, 0x88, 0x07, 0x7b, 0x62, 0xbe, 0xf4, 0xc1, 0xf2, 0xcb, 0x99,
+  0x6b, 0xda, 0x7e, 0xd8, 0x68, 0x05, 0x8e, 0x78, 0x0e, 0x35, 0x6f, 0x72,
+  0x2d, 0x84, 0x31, 0x41, 0xd1, 0x95, 0xa8, 0x3e, 0x9b, 0x44, 0xd4, 0xdb,
+  0xce, 0xfe, 0x7a, 0x12, 0xed, 0x83, 0xf2, 0xe7, 0xd7, 0xb6, 0x0f, 0x58,
+  0x56, 0xef, 0xc7, 0xb2, 0xc5, 0xe8, 0x1e, 0xbc, 0x2a, 0xa5, 0xae, 0xc5,
+  0x63, 0x04, 0xca, 0xaa, 0x7d, 0x1e, 0xf6, 0x43, 0x3f, 0xf6, 0x01, 0x87,
+  0x88, 0xe3, 0x94, 0x5a, 0x1f, 0xc5, 0x56, 0x01, 0x4a, 0x65, 0x36, 0x34,
+  0xd6, 0x38, 0x38, 0x65, 0xb0, 0x55, 0x39, 0x7b, 0x60, 0x2e, 0x08, 0xa5,
+  0x69, 0x87, 0x23, 0xe0, 0x12, 0x55, 0x2e, 0xa4, 0x4e, 0x01, 0x55, 0x3f,
+  0x80, 0xa0, 0x42, 0xb1, 0xd2, 0xf5, 0xcd, 0xa1, 0xfa, 0xbb, 0x6d, 0xd0,
+  0xf2, 0x18, 0xa3, 0xd0, 0x10, 0x07, 0xd0, 0xcc, 0xbd, 0x9d, 0x78, 0x5c,
+  0x51, 0x8f, 0x91, 0x93, 0x91, 0x29, 0xa1, 0xfb, 0xc1, 0x1e, 0xbe, 0x4b,
+  0x1f, 0x77, 0x6d, 0xce, 0xa0, 0x1e, 0xc1, 0x7f, 0x7e, 0xa3, 0x46, 0x4f,
+  0x5b, 0x59, 0x75, 0xce, 0xd3, 0x43, 0x63, 0x88, 0x6e, 0x71, 0x19, 0x83,
+  0x9e, 0x36, 0x7f, 0x0c, 0xff, 0xe2, 0xc3, 0x26, 0x08, 0x38, 0x5f, 0x0d,
+  0xa3, 0x65, 0x94, 0x1f, 0x6f, 0xd5, 0x8e, 0xc8, 0x88, 0x12, 0x66, 0xa6,
+  0xce, 0xff, 0xbe, 0x1d, 0x25, 0x00, 0xe8, 0x6a, 0x26, 0x66, 0x6b, 0xfa,
+  0xc2, 0x17, 0xf1, 0xc7, 0xad, 0x4e, 0x3a, 0x5e, 0xd8, 0xa7, 0xfc, 0xef,
+  0xd9, 0x07, 0xcb, 0xa9, 0xc9, 0x9e, 0x7a, 0x14, 0x90, 0x71, 0x15, 0xdf,
+  0x98, 0x0b, 0x83, 0xaf, 0x2e, 0x3a, 0x7e, 0xfa, 0x74, 0xc4, 0x29, 0x83,
+  0xd6, 0x24, 0xee, 0x97, 0xac, 0x6b, 0x4d, 0x53, 0x85, 0x6c, 0x53, 0x88,
+  0x9d, 0x3d, 0x70, 0x84, 0xcc, 0x6d, 0x13, 0xff, 0xa2, 0x9e, 0xce, 0xc7,
+  0xf5, 0x1f, 0x26, 0xa0, 0xde, 0xbc, 0xeb, 0xbf, 0xe8, 0x9f, 0xfd, 0xf8,
+  0xa7, 0x15, 0x02, 0xfc, 0xb8, 0x4f, 0xaf, 0x84, 0x59, 0x83, 0x4e, 0xd4,
+  0xad, 0x03, 0xb5, 0x95, 0x52, 0xe4, 0xf8, 0xda, 0x23, 0x3c, 0x65, 0x12,
+  0x5a, 0xa7, 0xa3, 0x1b, 0x55, 0xbb, 0x5e, 0x56, 0xd1, 0x72, 0xbc, 0x11,
+  0xb5, 0x45, 0x3d, 0x11, 0xb6, 0x3d, 0xe2, 0x3c, 0x69, 0x33, 0xb1, 0xae,
+  0xe8, 0x95, 0x1d, 0xa2, 0xdf, 0x2b, 0xf9, 0x61, 0xb7, 0x4f, 0xae, 0x53,
+  0xbf, 0xb0, 0x57, 0xdc, 0xde, 0x63, 0xfa, 0x54, 0xcf, 0x48, 0x19, 0xc9,
+  0xaf, 0xee, 0xcd, 0xb2, 0xd7, 0xc6, 0x8a, 0x79, 0x84, 0xad, 0xc3, 0x0f,
+  0xea, 0xa6, 0xa3, 0x78, 0x8c, 0xe9, 0x76, 0xd5, 0xa2, 0x9b, 0x44, 0x93,
+  0x11, 0x7c, 0x55, 0x12, 0xc2, 0xad, 0x9c, 0x16, 0x67, 0x8d, 0xb9, 0x21,
+  0xd5, 0xf7, 0x12, 0x2f, 0x96, 0x6b, 0xeb, 0x11, 0xd6, 0x44, 0x5a, 0x7b,
+  0xc8, 0x9c, 0xce, 0x1d, 0x15, 0x13, 0x21, 0x24, 0x1f, 0x3e, 0xa4, 0x8b,
+  0x85, 0x88, 0x9d, 0x47, 0x8c, 0x9d, 0x69, 0x25, 0xb0, 0xdd, 0x85, 0xb9,
+  0x97, 0xcb, 0xd2, 0x51, 0x19, 0xca, 0x8f, 0xec, 0xa9, 0x61, 0x4c, 0x5e,
+  0x5a, 0x3d, 0xd0, 0x1c, 0x57, 0xd5, 0x92, 0x19, 0xdc, 0x19, 0x8d, 0xbe,
+  0xa1, 0x82, 0xad, 0x56, 0x02, 0xee, 0x38, 0xe8, 0x0f, 0x6e, 0xc4, 0x47,
+  0x5c, 0xcc, 0x90, 0xc1, 0x5c, 0x57, 0xd5, 0xcc, 0x83, 0x75, 0x95, 0x3d,
+  0x76, 0x1a, 0xda, 0x9a, 0xf6, 0xef, 0x32, 0x50, 0x22, 0xe5, 0xb2, 0x9f,
+  0x91, 0x51, 0xb9, 0x1b, 0x90, 0x99, 0xf2, 0xb7, 0x1e, 0xda, 0xe7, 0xa2,
+  0xa3, 0xb7, 0xc7, 0x18, 0x1d, 0x11, 0x99, 0x8f, 0x14, 0xf5, 0x5f, 0x2e,
+  0xfe, 0x2f, 0x2d, 0x2c, 0xec, 0x57, 0x0e, 0x00, 0x01, 0x25, 0xf1, 0x70,
+  0x97, 0x17, 0x64, 0xab, 0xb1, 0x39, 0xf6, 0x70, 0x9f, 0xb9, 0xcb, 0x5c,
+  0xf3, 0xa3, 0xdb, 0x61, 0x71, 0x1a, 0x32, 0x9f, 0xfc, 0x63, 0xfb, 0xec,
+  0x52, 0x71, 0x6c, 0xed, 0x49, 0xea, 0x33, 0x5c, 0x5f, 0xb6, 0x42, 0xdd,
+  0x38, 0xbb, 0xce, 0x8b, 0x47, 0xf9, 0x30, 0x34, 0x4e, 0x9f, 0xce, 0xb8,
+  0x60, 0x8b, 0x6d, 0x54, 0xb2, 0x91, 0xd8, 0x15, 0x4f, 0x19, 0xe8, 0x0f,
+  0x8a, 0x89, 0x54, 0x38, 0xc1, 0x48, 0x54, 0x78, 0x8e, 0xbd, 0x89, 0x5a,
+  0xde, 0x14, 0xcc, 0xcf, 0x27, 0x4b, 0x4a, 0xc5, 0x8d, 0xd4, 0x0f, 0x09,
+  0xac, 0x75, 0xa3, 0x04, 0x30, 0x04, 0xff, 0x16, 0x75, 0x96, 0xe3, 0x6b,
+  0xe1, 0xb4, 0xc1, 0xf8, 0x64, 0x53, 0x81, 0x38, 0xec, 0x0d, 0xa9, 0xb5,
+  0xa7, 0xcf, 0x3f, 0x28, 0xa6, 0x8c, 0x88, 0x5b, 0xd4, 0x1e, 0x40, 0x11,
+  0xdb, 0x84, 0x37, 0x6a, 0x5f, 0xcf, 0x47, 0x3f, 0x79, 0xf4, 0x56, 0x80,
+  0x1b, 0x53, 0xa7, 0xd6, 0x31, 0x1c, 0xc1, 0x15, 0x45, 0x01, 0x37, 0xfe,
+  0x65, 0xca, 0x5a, 0x15, 0x2d, 0xe8, 0x43, 0xbd, 0x4b, 0x99, 0x03, 0xbc,
+  0x33, 0x0b, 0x2e, 0x47, 0xd9, 0xde, 0x32, 0x80, 0x48, 0x3c, 0x4a, 0xc4,
+  0xe7, 0x52, 0x3d, 0x45, 0x53, 0x7b, 0x12, 0x7f, 0xb6, 0xea, 0x5f, 0xa6,
+  0x59, 0xc7, 0x8c, 0x0d, 0x74, 0x15, 0x3d, 0x7f, 0xfc, 0xf1, 0xf9, 0x5d,
+  0x8e, 0x3c, 0x23, 0x55, 0x48, 0x51, 0x89, 0x1e, 0x9d, 0x47, 0x1b, 0x7a,
+  0x15, 0x56, 0x80, 0x83, 0xf2, 0x0e, 0xf0, 0xd2, 0x11, 0x11, 0xec, 0x2f,
+  0x0e, 0x2b, 0x1a, 0x46, 0x34, 0x03, 0x4e, 0x92, 0x66, 0x71, 0x20, 0xd0,
+  0x59, 0xe2, 0x02, 0xcc, 0x24, 0xd1, 0xcb, 0xa8, 0xc8, 0x74, 0x7a, 0x9a,
+  0xec, 0x51, 0x37, 0x0d, 0x5d, 0xff, 0xf1, 0x33, 0xc3, 0x1a, 0x9b, 0x9b,
+  0x61, 0x5b, 0x3c, 0xb1, 0x7d, 0x74, 0x34, 0x19, 0x93, 0xe1, 0x3b, 0x40,
+  0xda, 0x3d, 0x66, 0x1b, 0x91, 0x57, 0x87, 0xe6, 0x45, 0xcf, 0xa3, 0x2b,
+  0x7d, 0xcb, 0xd1, 0x23, 0x85, 0xef, 0xcc, 0xf3, 0x07, 0xcd, 0xc7, 0x5c,
+  0xf0, 0x3b, 0x90, 0xce, 0xcb, 0xa8, 0xbf, 0x1a, 0xdc, 0x8d, 0x6a, 0x01,
+  0x38, 0xfb, 0xc2, 0x79, 0xe1, 0x28, 0x23, 0x08, 0x2c, 0x65, 0x64, 0x0f,
+  0xab, 0xdb, 0x16, 0x16, 0x0f, 0x29, 0x2f, 0x83, 0x87, 0x5c, 0x95, 0xea,
+  0xd5, 0x25, 0x7c, 0x1a, 0x12, 0x55, 0x67, 0x53, 0x07, 0xc7, 0x14, 0xab,
+  0x3c, 0xb1, 0x64, 0x83, 0x07, 0xeb, 0x9b, 0x13, 0xac, 0xdc, 0xef, 0x49,
+  0x50, 0xf5, 0x29, 0x35, 0x87, 0x2b, 0x8a, 0x3e, 0xae, 0x53, 0xae, 0xdf,
+  0xaa, 0x91, 0x14, 0xa4, 0xe8, 0xd1, 0x3d, 0xd2, 0xae, 0xcc, 0xd1, 0xa6,
+  0x29, 0xaf, 0x9b, 0x32, 0x48, 0x6b, 0x21, 0x15, 0x92, 0x82, 0x72, 0xb8,
+  0x83, 0x8c, 0xf9, 0x96, 0x22, 0x7f, 0xc3, 0xfc, 0x20, 0xfb, 0xd4, 0xb0,
+  0x73, 0x56, 0x1c, 0xd9, 0xd4, 0x95, 0x7c, 0x4c, 0x15, 0x48, 0x5b, 0xbc,
+  0x57, 0x11, 0xcc, 0xb6, 0x24, 0xc9, 0xe0, 0x6b, 0x36, 0xdb, 0xef, 0xd3,
+  0xf4, 0x7a, 0x58, 0x56, 0x39, 0x5d, 0x64, 0x80, 0x89, 0x69, 0x6b, 0x74,
+  0xa0, 0xfa, 0x10, 0x54, 0x64, 0xaa, 0xc4, 0x9a, 0x93, 0xc0, 0x44, 0xa2,
+  0x24, 0x56, 0xed, 0x76, 0xe7, 0x38, 0x03, 0x88, 0x59, 0xd8, 0x36, 0x05,
+  0x02, 0x1e, 0x1e, 0x2b, 0x1e, 0x09, 0x27, 0x9c, 0x24, 0xae, 0x80, 0x87,
+  0x86, 0xd4, 0xed, 0x90, 0xdd, 0x58, 0x29, 0x74, 0x74, 0x97, 0x56, 0x48,
+  0x9e, 0x0c, 0xa2, 0x2e, 0x79, 0x5d, 0x2f, 0xb1, 0x60, 0x6f, 0x4e, 0x4e,
+  0x8f, 0x2d, 0x66, 0xe6, 0xff, 0xec, 0x0c, 0x69, 0xc2, 0xab, 0x49, 0x80,
+  0x10, 0xe2, 0x9c, 0x25, 0x2f, 0x01, 0x4d, 0x92, 0x9a, 0xbe, 0xed, 0x73,
+  0xb1, 0x03, 0xfc, 0xb8, 0x95, 0xd1, 0x74, 0xfc, 0xee, 0xbb, 0x93, 0x8b,
+  0xb3, 0x77, 0x6f, 0x8f, 0xdf, 0x59, 0x67, 0x28, 0x1d, 0x8a, 0x18, 0xb7,
+  0x65, 0x1d, 0x46, 0x44, 0x73, 0x72, 0xa7, 0x13, 0xc1, 0x1a, 0xa1, 0x4a,
+  0xc9, 0x19, 0x61, 0xc6, 0x29, 0xff, 0x1a, 0xfa, 0xcd, 0x79, 0x0f, 0xa9,
+  0x43, 0x94, 0xe2, 0xd4, 0x0b, 0xf2, 0x22, 0x4c, 0x29, 0x2e, 0x35, 0x64,
+  0x17, 0x2a, 0x97, 0x66, 0xc9, 0x99, 0x5e, 0xf3, 0xd3, 0x24, 0x93, 0x02,
+  0x5b, 0x54, 0x18, 0x64, 0xc3, 0x4e, 0x09, 0x47, 0x51, 0x5c, 0xac, 0xa9,
+  0xd5, 0x09, 0xb7, 0xb9, 0xdf, 0x6b, 0xc2, 0x51, 0x6c, 0x2c, 0x8c, 0x8e,
+  0x6e, 0x5c, 0x81, 0x2a, 0x4e, 0x7c, 0x54, 0xdf, 0xb5, 0x78, 0x09, 0x7c,
+  0x84, 0x99, 0xcb, 0x47, 0xf5, 0xab, 0xc8, 0x74, 0xc3, 0x62, 0xde, 0x28,
+  0x7e, 0x54, 0xd7, 0xc4, 0xc1, 0xce, 0xce, 0xcf, 0x28, 0x12, 0xf4, 0x85,
+  0x54, 0x09, 0x0a, 0x59, 0xbe, 0x6a, 0xaf, 0x23, 0x2e, 0x21, 0x41, 0x33,
+  0x5c, 0x68, 0xdf, 0xda, 0xe9, 0x04, 0x2a, 0xe3, 0xc3, 0xf9, 0xc5, 0xd9,
+  0x0f, 0x7f, 0xf9, 0x8d, 0x3f, 0xe1, 0x41, 0x59, 0x7e, 0x24, 0x84, 0x97,
+  0x36, 0xfe, 0xf3, 0xaf, 0xfa, 0xda, 0xda, 0xcf, 0xb5, 0xdb, 0xef, 0xb7,
+  0xab, 0x85, 0x05, 0xf9, 0x3b, 0x48, 0x14, 0x64, 0xa2, 0x63, 0x4d, 0x1b,
+  0x74, 0xe6, 0xb4, 0x45, 0x98, 0x00, 0x47, 0x42, 0xee, 0xf5, 0x56, 0xf6,
+  0x78, 0x18, 0x02, 0x06, 0x19, 0x02, 0xb2, 0xd7, 0x1c, 0x3e, 0xb0, 0x2f,
+  0x69, 0x8c, 0x94, 0xa7, 0xd8, 0x47, 0xfe, 0x1b, 0xd0, 0x6e, 0x76, 0x3e,
+  0x0e, 0x4f, 0x4f, 0x7f, 0xfd, 0x24, 0x68, 0xa1, 0xa7, 0xf6, 0x34, 0xa0,
+  0x32, 0x8d, 0x1d, 0xd0, 0xc0, 0x2a, 0xbf, 0x7a, 0x04, 0xd6, 0x91, 0xad,
+  0xbd, 0x3b, 0x93, 0xde, 0xbc, 0x84, 0xd6, 0x3d, 0xa8, 0x33, 0xa3, 0x2b,
+  0x53, 0xf5, 0x40, 0xba, 0x03, 0x61, 0xc4, 0x53, 0xc7, 0x82, 0xfa, 0x33,
+  0xfe, 0x2f, 0x19, 0xab, 0xc5, 0xf3, 0xc8, 0xa9, 0x36, 0xc0, 0x42, 0x97,
+  0x96, 0xff, 0x82, 0x4b, 0x3d, 0xa1, 0xf2, 0x25, 0x64, 0x5d, 0x58, 0x7b,
+  0x07, 0x37, 0x02, 0xdd, 0xde, 0x55, 0x5e, 0x7f, 0x04, 0x52, 0x9c, 0x0e,
+  0xa6, 0xd4, 0xc7, 0xe5, 0x54, 0x51, 0x52, 0xa1, 0xd1, 0x15, 0xd3, 0x77,
+  0xee, 0xb1, 0xf9, 0xef, 0xe5, 0xd9, 0xd1, 0xd9, 0xa9, 0xf9, 0xcb, 0xf1,
+  0x9b, 0x93, 0x1f, 0x9c, 0x50, 0xe3, 0x7c, 0x4e, 0xb9, 0x2c, 0x6d, 0xd4,
+  0x44, 0x8b, 0x41, 0xf9, 0xbb, 0x89, 0xb1, 0x1f, 0x73, 0x54, 0x9f, 0xf6,
+  0x16, 0x9b, 0x73, 0x8a, 0x36, 0x9c, 0x45, 0xa9, 0xcb, 0x24, 0xf5, 0x9c,
+  0xfc, 0x74, 0xdd, 0x54, 0xb8, 0x0a, 0x48, 0x09, 0xe0, 0x56, 0x2d, 0xd2,
+  0xd4, 0xcd, 0xf2, 0x49, 0x6b, 0x85, 0x70, 0x31, 0xf8, 0x82, 0xaf, 0xbd,
+  0xb6, 0xdc, 0x29, 0xc4, 0xe0, 0xf2, 0x2b, 0x6b, 0xa3, 0xf9, 0x55, 0x7b,
+  0x14, 0x6f, 0x2e, 0xc4, 0xa1, 0x14, 0x8b, 0x72, 0x5c, 0x64, 0x74, 0x49,
+  0xf7, 0xbd, 0x41, 0xda, 0xba, 0xdb, 0x55, 0x86, 0x75, 0x45, 0x58, 0xbb,
+  0x95, 0x14, 0xdb, 0xc1, 0x65, 0x01, 0xbe, 0x6c, 0x9b, 0x6b, 0x8f, 0x49,
+  0x26, 0x40, 0xf0, 0x13, 0x88, 0x35, 0xa2, 0x64, 0xa1, 0x8b, 0xd0, 0xdb,
+  0xa2, 0xad, 0xd1, 0x6c, 0x0a, 0xa9, 0x9a, 0x4d, 0xd4, 0x5d, 0xb7, 0x29,
+  0x97, 0x26, 0xbe, 0xb2, 0x65, 0xaa, 0x3a, 0x6d, 0xa4, 0xbf, 0xaa, 0x91,
+  0xb4, 0xdd, 0xca, 0xb3, 0x5f, 0xd3, 0xc8, 0xb3, 0x4e, 0x1b, 0x37, 0xbf,
+  0xaa, 0x11, 0x5b, 0x4f, 0xd0, 0x5c, 0x8d, 0x3f, 0x9c, 0x5c, 0x26, 0x47,
+  0x67, 0xaf, 0xdd, 0x1e, 0xbd, 0xb4, 0xe8, 0xb0, 0x34, 0x19, 0x2f, 0x0b,
+  0xb3, 0x8a, 0xc4, 0x19, 0x8b, 0xfa, 0x16, 0x70, 0x98, 0x4a, 0x0d, 0x66,
+  0x8a, 0x63, 0xd6, 0xca, 0xb8, 0x70, 0x93, 0xe5, 0xf8, 0x51, 0xc5, 0xc1,
+  0x49, 0x9f, 0x53, 0xcc, 0x95, 0x6c, 0x46, 0x89, 0x66, 0x0d, 0xe0, 0xd0,
+  0xce, 0x26, 0x92, 0x15, 0x63, 0xf7, 0x4a, 0xea, 0xca, 0x38, 0xa5, 0x34,
+  0xfa, 0x82, 0x13, 0x30, 0x8c, 0x76, 0xd4, 0xa6, 0xa3, 0xdb, 0xf0, 0x13,
+  0xf4, 0x84, 0x9a, 0xae, 0x2f, 0x70, 0xf7, 0xbc, 0x91, 0xde, 0xb4, 0x00,
+  0x19, 0x7b, 0x0a, 0x28, 0x6c, 0xed, 0x18, 0xe1, 0xe2, 0x86, 0xd2, 0x4b,
+  0xe0, 0xb1, 0xa9, 0x62, 0xef, 0x71, 0x37, 0x16, 0x0e, 0x18, 0xc8, 0xb5,
+  0x47, 0x02, 0x11, 0x65, 0x9b, 0xb0, 0xdf, 0xd9, 0xe7, 0x3f, 0xde, 0x98,
+  0x9b, 0x9a, 0xc3, 0xc7, 0x12, 0x9e, 0xcf, 0xff, 0xee, 0xdd, 0xd3, 0x4f,
+  0x5c, 0xb4, 0x66, 0x9e, 0xce, 0x50, 0xd5, 0x43, 0xcc, 0x81, 0xfa, 0xbe,
+  0x68, 0xd2, 0x4f, 0xd0, 0xcb, 0x49, 0x89, 0x12, 0x22, 0x01, 0xf7, 0xe6,
+  0x53, 0x11, 0xce, 0x89, 0xa5, 0x2b, 0xc0, 0xf9, 0xd3, 0x6c, 0x08, 0x2f,
+  0xe2, 0x2a, 0x66, 0x91, 0xe9, 0x81, 0xe6, 0x62, 0x71, 0x9d, 0xab, 0x9a,
+  0x2a, 0x8d, 0x6c, 0x44, 0xa3, 0x61, 0xf6, 0xb3, 0x9a, 0xd5, 0x55, 0x56,
+  0x12, 0xbd, 0x05, 0xaf, 0x3a, 0x68, 0xd5, 0x5d, 0x9e, 0x39, 0xd5, 0x70,
+  0xe4, 0x49, 0x1b, 0xac, 0xe0, 0x20, 0x2e, 0x39, 0x13, 0x53, 0x24, 0x9c,
+  0xea, 0x20, 0xd3, 0x52, 0x48, 0x04, 0x29, 0x1e, 0x45, 0x75, 0x8f, 0xcc,
+  0x2f, 0xee, 0x99, 0xd1, 0x3d, 0x2d, 0x90, 0xd7, 0x10, 0x14, 0x75, 0x95,
+  0x85, 0x11, 0xd8, 0xb7, 0x43, 0x58, 0x3f, 0xe3, 0x3f, 0x8e, 0x54, 0x96,
+  0x6b, 0x41, 0x41, 0x15, 0xe2, 0x30, 0xde, 0x98, 0x78, 0x40, 0xa5, 0x16,
+  0x7b, 0xe7, 0x26, 0x1c, 0x17, 0xa3, 0xb1, 0x86, 0x29, 0xdc, 0xd2, 0x8a,
+  0x67, 0x34, 0x3c, 0x5f, 0xf1, 0x1d, 0xe6, 0x14, 0xb8, 0xb4, 0xec, 0x06,
+  0x5d, 0xe7, 0x25, 0xb5, 0x1f, 0xb6, 0xf6, 0x59, 0x77, 0x8b, 0xa8, 0x2f,
+  0x91, 0xa8, 0xa7, 0x4a, 0x3f, 0xa4, 0xf0, 0xb9, 0x58, 0x27, 0x19, 0x25,
+  0x49, 0xc8, 0x5d, 0x5a, 0x65, 0x0b, 0x2a, 0x87, 0x78, 0xe9, 0xf2, 0x38,
+  0x11, 0xb9, 0x80, 0x85, 0x81, 0x79, 0x9e, 0x68, 0x2f, 0xcd, 0x05, 0xe9,
+  0x2b, 0x87, 0x2f, 0xe4, 0xb3, 0x94, 0xee, 0x9e, 0xc2, 0xb9, 0x4c, 0xb0,
+  0xd2, 0x22, 0xb7, 0x5b, 0x4f, 0x4a, 0xe2, 0xe0, 0x47, 0x04, 0x19, 0x41,
+  0x16, 0xa9, 0xfe, 0x5b, 0xde, 0x08, 0xb8, 0x56, 0x3a, 0x5e, 0x2b, 0x1a,
+  0xed, 0xb2, 0xe2, 0x24, 0x21, 0xc7, 0x2f, 0x04, 0x38, 0x5e, 0x5a, 0x34,
+  0x3c, 0x5c, 0x82, 0xf1, 0x11, 0x07, 0x45, 0xf2, 0x36, 0x8c, 0xc3, 0x97,
+  0x57, 0x54, 0xbb, 0x41, 0x42, 0x95, 0x55, 0x2e, 0xf3, 0xc3, 0xf5, 0x65,
+  0x71, 0xf9, 0xba, 0x46, 0x85, 0x63, 0x9c, 0x6f, 0x18, 0x73, 0xec, 0x61,
+  0xf6, 0xad, 0xcc, 0x76, 0x75, 0xf3, 0xb0, 0xb7, 0x67, 0xe7, 0xe1, 0x0e,
+  0x13, 0x7b, 0x7e, 0x38, 0x1a, 0xe9, 0xb4, 0x1e, 0x85, 0x33, 0x28, 0xf1,
+  0x6d, 0x4a, 0x35, 0xd5, 0x0c, 0xfc, 0x88, 0x15, 0x24, 0x8d, 0x74, 0x62,
+  0x42, 0x7b, 0x4f, 0xdc, 0x9c, 0xdb, 0x8f, 0x7d, 0xc7, 0xad, 0xf5, 0x1f,
+  0xf9, 0xb1, 0xe8, 0xb7, 0xbe, 0x8b, 0x7c, 0xeb, 0x69, 0x67, 0x5c, 0xfb,
+  0xfb, 0x9f, 0x09, 0x8a, 0x91, 0x8d, 0xcb, 0x59, 0xe2, 0x3e, 0x26, 0x5f,
+  0xe3, 0x4b, 0xdb, 0x3c, 0x38, 0xe0, 0x9c, 0xa4, 0xf0, 0x5b, 0xde, 0x1e,
+  0xf3, 0x3e, 0xf5, 0xcc, 0x0d, 0xcb, 0x18, 0x48, 0xd4, 0x1e, 0x31, 0x79,
+  0xf3, 0x71, 0x08, 0x4e, 0x89, 0x2d, 0xef, 0x79, 0x42, 0x3d, 0x33, 0x0a,
+  0x57, 0x13, 0x0f, 0xd1, 0x6b, 0x37, 0xbc, 0xef, 0x7c, 0x66, 0xbf, 0x63,
+  0x7b, 0x4e, 0x26, 0x0c, 0x27, 0x9a, 0x0e, 0xbd, 0x13, 0xa9, 0x7b, 0xc4,
+  0x79, 0x10, 0x2d, 0xd5, 0x71, 0xb0, 0x65, 0xe5, 0x6d, 0xf7, 0x15, 0x3e,
+  0x66, 0xe7, 0xb4, 0x8b, 0x85, 0xcd, 0x6b, 0x98, 0x9c, 0xc1, 0xe0, 0x6a,
+  0x31, 0x18, 0xc2, 0xd0, 0xa5, 0x63, 0x6d, 0xeb, 0x09, 0xf8, 0xa7, 0x7a,
+  0xef, 0x85, 0x37, 0x27, 0xda, 0x2d, 0x8d, 0xaa, 0xed, 0xe8, 0xf1, 0xb1,
+  0xa2, 0x42, 0xdd, 0x0a, 0x59, 0x72, 0x71, 0x7c, 0x79, 0x41, 0xe1, 0x02,
+  0x90, 0x30, 0x76, 0x45, 0xa9, 0x39, 0x53, 0xdb, 0x96, 0xf5, 0xea, 0x0a,
+  0x12, 0xc3, 0xbb, 0x6b, 0xdc, 0x4e, 0x66, 0x6a, 0x04, 0xdc, 0xae, 0x94,
+  0x90, 0xc9, 0xff, 0xd4, 0xf7, 0x18, 0x9d, 0x49, 0x35, 0xaa, 0x71, 0xfb,
+  0x3a, 0x8f, 0x60, 0x9b, 0xb4, 0x61, 0x7f, 0xdf, 0x45, 0x37, 0x51, 0xcb,
+  0x83, 0xc5, 0x97, 0x80, 0xae, 0x58, 0x48, 0x78, 0x40, 0x45, 0x5b, 0x80,
+  0x86, 0xc5, 0xa8, 0x40, 0x97, 0x82, 0xb0, 0x87, 0xfd, 0xb8, 0x4a, 0x77,
+  0xab, 0x04, 0x38, 0xd0, 0x1c, 0x3e, 0xc9, 0x3f, 0x65, 0xb6, 0x08, 0x80,
+  0xc9, 0x9f, 0xee, 0xee, 0x86, 0xcd, 0xa5, 0xe3, 0xf2, 0x36, 0x93, 0x1b,
+  0x5b, 0x50, 0xa7, 0x78, 0x85, 0x0d, 0x64, 0xa8, 0x10, 0x35, 0xa9, 0xa3,
+  0x83, 0x2b, 0xb2, 0x58, 0x69, 0xc6, 0xd4, 0x59, 0xe4, 0xcd, 0x1b, 0x9f,
+  0xca, 0xef, 0x81, 0x82, 0x95, 0x39, 0x6b, 0x9f, 0x45, 0x06, 0xc8, 0x6a,
+  0xa9, 0x88, 0x54, 0x61, 0x38, 0x48, 0x2e, 0x11, 0x47, 0x47, 0xd0, 0x33,
+  0xe1, 0xd0, 0xf4, 0x3e, 0xf3, 0x2c, 0xb2, 0x23, 0x92, 0xd1, 0xe5, 0xd9,
+  0x45, 0x22, 0x9b, 0x2c, 0x14, 0xbb, 0x88, 0xa3, 0xd1, 0x13, 0x36, 0x6d,
+  0xb7, 0x1f, 0x29, 0x41, 0x68, 0x13, 0xcd, 0x2c, 0x43, 0x92, 0xf7, 0x55,
+  0xbe, 0xac, 0x2e, 0x08, 0x2a, 0x2d, 0x63, 0xfb, 0x4e, 0x52, 0xcb, 0x94,
+  0x0d, 0x4c, 0x8b, 0x0d, 0x7a, 0x2f, 0xf1, 0x41, 0x3b, 0x5b, 0x62, 0xb3,
+  0x73, 0x1a, 0x14, 0xed, 0x23, 0x49, 0x88, 0x22, 0x36, 0x31, 0x49, 0x12,
+  0xb1, 0xb4, 0xf6, 0xdd, 0xbd, 0xc8, 0x87, 0xe8, 0xcc, 0xf1, 0xbd, 0x71,
+  0x41, 0x49, 0x19, 0xa4, 0xb3, 0x4f, 0x51, 0x5d, 0x01, 0x78, 0x7c, 0x66,
+  0x44, 0x93, 0x3d, 0x84, 0x3b, 0x21, 0x2c, 0x13, 0x3d, 0x31, 0x1a, 0x90,
+  0x32, 0x40, 0x89, 0xdf, 0x4a, 0x55, 0x42, 0xa7, 0x4d, 0xed, 0xba, 0x79,
+  0x3e, 0x3f, 0xbb, 0xb8, 0x4c, 0xb4, 0x73, 0xac, 0x00, 0xe0, 0x47, 0x9d,
+  0x23, 0x44, 0x64, 0xc9, 0xb0, 0xd4, 0x1c, 0xc6, 0x31, 0xb0, 0x3e, 0x45,
+  0xf3, 0x6b, 0xb4, 0x09, 0x6d, 0x83, 0x2c, 0x33, 0x62, 0xe8, 0x9b, 0x72,
+  0x4a, 0x74, 0xea, 0xcb, 0x1c, 0xe1, 0x2f, 0x20, 0x01, 0x1d, 0x2f, 0x55,
+  0xe0, 0x74, 0x97, 0x27, 0x7b, 0x91, 0xdd, 0x41, 0x56, 0xf2, 0xc5, 0x31,
+  0x95, 0xa3, 0xbc, 0xbc, 0xe1, 0xbf, 0x05, 0x3d, 0xe7, 0x44, 0x13, 0xf9,
+  0x61, 0xb4, 0xa2, 0x29, 0x76, 0x07, 0x79, 0xb7, 0xa9, 0x04, 0x32, 0xb5,
+  0x6f, 0xb3, 0xa5, 0xbc, 0x39, 0x7b, 0xe2, 0x21, 0x19, 0x20, 0x39, 0x65,
+  0xaf, 0xe0, 0x90, 0xe3, 0x07, 0x3d, 0xf9, 0x48, 0xcf, 0xdc, 0xb9, 0x7c,
+  0x28, 0x5a, 0xfc, 0x8e, 0x4f, 0x9e, 0x7a, 0xd2, 0x82, 0xa4, 0xbb, 0x34,
+  0x70, 0xa2, 0x95, 0x21, 0xe8, 0x87, 0x03, 0xdd, 0x2e, 0xd7, 0x59, 0xa1,
+  0x1b, 0x83, 0x9f, 0x73, 0xed, 0x3c, 0xb3, 0x59, 0x91, 0xaa, 0x07, 0x79,
+  0x5d, 0xa1, 0x1f, 0x6b, 0x08, 0x19, 0x59, 0xcf, 0x9d, 0x6d, 0xf7, 0xe4,
+  0xb9, 0x9d, 0x45, 0xb2, 0x18, 0x2c, 0x2a, 0x82, 0x87, 0xef, 0x5d, 0x46,
+  0xe4, 0xf0, 0xcc, 0x8b, 0x25, 0xb2, 0x83, 0x8d, 0x04, 0x4a, 0xab, 0x59,
+  0x0e, 0x46, 0xae, 0x71, 0x2c, 0xdd, 0xc9, 0x82, 0x21, 0xdc, 0x77, 0xe4,
+  0x26, 0x3a, 0x39, 0x3d, 0x76, 0xab, 0xc5, 0x64, 0xb4, 0x38, 0xc9, 0x4e,
+  0x99, 0xa3, 0x92, 0x4e, 0xf6, 0xba, 0x18, 0x26, 0xe7, 0x54, 0xaa, 0x07,
+  0x59, 0x95, 0xf5, 0x7f, 0xba, 0xd6, 0xf8, 0xb0, 0xc0, 0xe9, 0x62, 0xee,
+  0x4f, 0xe4, 0xcf, 0xe4, 0x85, 0x59, 0x5c, 0xfc, 0x84, 0xfe, 0xea, 0x11,
+  0x27, 0x06, 0x43, 0x7e, 0xe1, 0x5e, 0xae, 0xcd, 0x40, 0x8c, 0x49, 0xd6,
+  0x7d, 0xe4, 0xa9, 0xec, 0x2d, 0x63, 0xaf, 0xa1, 0x09, 0xfa, 0x00, 0xe4,
+  0x33, 0x9d, 0x69, 0xad, 0x36, 0xc8, 0x2d, 0x5c, 0xe9, 0x33, 0xaa, 0xaf,
+  0xf2, 0x73, 0xae, 0x29, 0xbe, 0x14, 0x0e, 0xc7, 0x96, 0x40, 0x9c, 0x60,
+  0x48, 0x94, 0x04, 0x68, 0xda, 0x2a, 0x48, 0xe2, 0xce, 0x2c, 0x4b, 0x83,
+  0xf5, 0xfc, 0x93, 0xcc, 0x1c, 0xeb, 0xe1, 0xa1, 0x91, 0x0c, 0x82, 0xf2,
+  0xef, 0x2d, 0x17, 0xe2, 0x53, 0xde, 0x8d, 0x76, 0xeb, 0xd8, 0x7b, 0xac,
+  0xd5, 0x3b, 0xc1, 0x3f, 0x09, 0x91, 0x0a, 0x2d, 0x37, 0xb9, 0x80, 0xcc,
+  0x35, 0xef, 0x6b, 0x77, 0x4f, 0x9f, 0xb9, 0xa6, 0xae, 0x28, 0xf7, 0xc0,
+  0xb6, 0xe5, 0x64, 0x90, 0xe3, 0xa9, 0xcd, 0xed, 0x63, 0xeb, 0x4d, 0x82,
+  0xf6, 0xfd, 0xf1, 0xf4, 0x33, 0xe1, 0xf8, 0xa0, 0x74, 0xf6, 0xe2, 0xde,
+  0x01, 0xf8, 0x86, 0x1c, 0x48, 0x60, 0x5f, 0x03, 0xb3, 0x61, 0x5b, 0x68,
+  0x1f, 0x5b, 0x95, 0x62, 0x88, 0xcf, 0xd3, 0x4f, 0xc1, 0x55, 0x3f, 0x5f,
+  0xce, 0x05, 0x23, 0xe4, 0x7d, 0xe9, 0x73, 0xb1, 0x5a, 0xb9, 0xe0, 0xa3,
+  0x26, 0xf3, 0xdb, 0x91, 0x98, 0x89, 0x16, 0xa3, 0xc8, 0x8b, 0xb2, 0x4d,
+  0x81, 0x5d, 0xb1, 0xb6, 0x75, 0x48, 0xda, 0x42, 0x54, 0x18, 0xb8, 0x90,
+  0x45, 0x51, 0xd4, 0xb8, 0x46, 0xa9, 0xd9, 0x2a, 0x12, 0x19, 0x92, 0xe7,
+  0xf8, 0x57, 0xab, 0x73, 0xd1, 0xab, 0xec, 0xaf, 0x66, 0x88, 0x24, 0x9b,
+  0x70, 0xe9, 0x30, 0xee, 0x9c, 0x47, 0x59, 0x2c, 0x53, 0xcf, 0x5c, 0x7b,
+  0xfa, 0x42, 0x5c, 0x12, 0x62, 0xf2, 0x6a, 0x51, 0xac, 0xae, 0x47, 0xf9,
+  0xd9, 0x9e, 0xf5, 0xef, 0x10, 0x22, 0x67, 0xb3, 0x66, 0xe9, 0xe0, 0xe1,
+  0x72, 0x4a, 0x2a, 0x8c, 0xfb, 0x4d, 0xf2, 0xf6, 0xf5, 0x33, 0x0a, 0x0e,
+  0x5f, 0x67, 0xd5, 0xa2, 0x32, 0x4b, 0x69, 0xf7, 0xf0, 0xd9, 0xb7, 0x5e,
+  0x63, 0xfb, 0x5e, 0xae, 0x3b, 0x5f, 0xb5, 0xb9, 0x9c, 0x5e, 0xb0, 0xc7,
+  0x14, 0xf7, 0x94, 0x9d, 0x73, 0xdd, 0x97, 0x4c, 0x3b, 0x4e, 0x21, 0xa1,
+  0x89, 0xf4, 0x4a, 0xfe, 0x25, 0x01, 0xeb, 0x48, 0x47, 0x88, 0x3d, 0x7b,
+  0xe2, 0x84, 0x18, 0x55, 0xf5, 0x24, 0xde, 0xab, 0x6b, 0xd2, 0xa8, 0x23,
+  0x27, 0xea, 0x19, 0x0b, 0xce, 0x23, 0x3e, 0xf7, 0xa4, 0xce, 0x86, 0xaf,
+  0x21, 0x49, 0x08, 0x91, 0x0d, 0xef, 0xbd, 0x67, 0xbe, 0xd9, 0x48, 0x0c,
+  0x5c, 0xb4, 0xc3, 0x84, 0x77, 0x17, 0xba, 0x8a, 0xf7, 0xec, 0x73, 0xfb,
+  0x2c, 0xf9, 0x08, 0xf2, 0xc2, 0xe3, 0x49, 0x5f, 0xf1, 0x86, 0x28, 0xc1,
+  0xac, 0x1a, 0x38, 0xfa, 0x00, 0xd6, 0x7c, 0xbc, 0xb9, 0xf7, 0x5e, 0x79,
+  0xd1, 0xb6, 0x8a, 0x41, 0x52, 0x6a, 0xb7, 0x26, 0x06, 0x95, 0x2f, 0x6e,
+  0xfc, 0xc3, 0xf9, 0x9c, 0x6f, 0xea, 0x73, 0x82, 0x59, 0xb5, 0xd6, 0x53,
+  0x85, 0x60, 0xe6, 0xe7, 0xa4, 0xea, 0x59, 0xe7, 0xbd, 0x7f, 0x74, 0xa8,
+  0x6f, 0x0c, 0x02, 0x8e, 0xb4, 0xc6, 0x4f, 0xc1, 0x7d, 0xbe, 0x27, 0x67,
+  0xc6, 0x0c, 0xb9, 0xbc, 0x2e, 0xf2, 0xbf, 0x67, 0x1e, 0xae, 0x40, 0x39,
+  0xee, 0xbd, 0xc7, 0xf7, 0x45, 0x60, 0xdc, 0xa6, 0xb3, 0x5c, 0x84, 0x22,
+  0xf9, 0xcb, 0xdd, 0x03, 0x4f, 0x64, 0xd7, 0x7e, 0xca, 0xe9, 0x88, 0xc2,
+  0x0a, 0x40, 0x85, 0x29, 0x8a, 0xd6, 0x64, 0x2d, 0xd8, 0xde, 0xf3, 0xa7,
+  0xa2, 0x7b, 0xa9, 0x92, 0x4c, 0xf7, 0x12, 0x0a, 0x45, 0x83, 0xe1, 0xa7,
+  0x2b, 0xa6, 0x9f, 0xcb, 0xd5, 0x27, 0x4b, 0x29, 0x05, 0x86, 0x52, 0x57,
+  0x31, 0x80, 0xfe, 0x7a, 0x97, 0x17, 0x02, 0xa5, 0x0b, 0x5e, 0x7f, 0xbe,
+  0xc2, 0xd5, 0x24, 0xa5, 0x34, 0x8f, 0xb1, 0x97, 0xbc, 0xe7, 0x3f, 0xb3,
+  0x27, 0xc1, 0xa3, 0x47, 0x52, 0x5e, 0x1c, 0xa4, 0xf1, 0x29, 0x0f, 0xbc,
+  0x1e, 0x24, 0x98, 0xfd, 0x8b, 0x26, 0x53, 0x32, 0xd5, 0x08, 0x79, 0xe5,
+  0x95, 0xfd, 0xfc, 0xac, 0xbc, 0x4e, 0xfc, 0x24, 0xdf, 0xe7, 0xbc, 0xa5,
+  0xde, 0x80, 0x13, 0x57, 0xcf, 0x01, 0x49, 0x13, 0xbf, 0xc4, 0x9a, 0x7b,
+  0xfa, 0x85, 0xec, 0x0d, 0xbd, 0x2f, 0x55, 0x4d, 0x5d, 0xf9, 0xc6, 0x67,
+  0xbb, 0xbe, 0xd2, 0x3a, 0x25, 0x8f, 0x3c, 0xa7, 0x9b, 0xad, 0x7c, 0x81,
+  0x77, 0xc6, 0xc9, 0x8c, 0xaa, 0x95, 0xcd, 0xb4, 0x06, 0x9a, 0xd2, 0xe3,
+  0xb8, 0xc7, 0xf6, 0x5b, 0x42, 0xf7, 0xd2, 0x57, 0xa1, 0x92, 0x93, 0xd7,
+  0xde, 0x83, 0x4f, 0xdc, 0x00, 0xd3, 0x19, 0x69, 0x03, 0xf7, 0xec, 0x88,
+  0xa8, 0xa5, 0xfa, 0x9a, 0xf7, 0x28, 0xef, 0x8c, 0x77, 0x25, 0xd3, 0x38,
+  0x60, 0xfe, 0x83, 0x67, 0x78, 0x3b, 0x1c, 0xdd, 0x98, 0x5b, 0x6d, 0xd2,
+  0x00, 0x5f, 0x54, 0x68, 0x54, 0xa0, 0xbb, 0xf6, 0x9f, 0x3d, 0x5f, 0xf3,
+  0xac, 0x5c, 0x9a, 0x75, 0xa4, 0xb0, 0xf0, 0x67, 0x9f, 0x85, 0xc7, 0x5c,
+  0xcd, 0x02, 0x45, 0x41, 0xca, 0x49, 0x4b, 0xb6, 0x28, 0xa3, 0xe8, 0x3f,
+  0xd5, 0xf3, 0x53, 0x11, 0x41, 0x4d, 0xfd, 0x9f, 0x7e, 0x7f, 0x3f, 0xb7,
+  0xfb, 0xc9, 0xba, 0x7d, 0xaa, 0x0c, 0x8e, 0xe1, 0x49, 0x8b, 0x91, 0xd6,
+  0x05, 0x85, 0x31, 0x3b, 0x5e, 0x0b, 0xbc, 0xe6, 0x46, 0x8f, 0x58, 0x16,
+  0x4e, 0x72, 0xb0, 0x21, 0x28, 0x09, 0x7c, 0x53, 0x9f, 0xcb, 0x88, 0x64,
+  0x7e, 0xcd, 0x1c, 0x15, 0x9e, 0x93, 0x6c, 0xb7, 0x73, 0x0c, 0xea, 0x9b,
+  0x25, 0x5b, 0xde, 0x76, 0x44, 0x7e, 0xc5, 0x68, 0xfb, 0xda, 0xbe, 0x93,
+  0x5e, 0x72, 0xed, 0x33, 0xa0, 0xf5, 0x88, 0xa8, 0x52, 0xd9, 0x3c, 0xb7,
+  0x3c, 0xa5, 0xf0, 0x84, 0x56, 0x25, 0xd3, 0xee, 0x50, 0x5a, 0xe8, 0x56,
+  0x1a, 0x07, 0x9f, 0x0b, 0x32, 0xd1, 0xfb, 0x8c, 0xa8, 0x36, 0x14, 0xd5,
+  0xae, 0xb8, 0x44, 0xb9, 0x1e, 0x19, 0xdb, 0x46, 0xe4, 0xad, 0xa7, 0x76,
+  0x6a, 0x69, 0xf7, 0x9d, 0x5f, 0x1c, 0x77, 0x0d, 0x01, 0xf7, 0x28, 0xef,
+  0x9a, 0x8b, 0xcb, 0xd1, 0xf9, 0x01, 0xf5, 0x97, 0x43, 0x2d, 0xe6, 0x40,
+  0x1c, 0x8d, 0xb2, 0xbf, 0x09, 0x8c, 0xbd, 0x76, 0x4f, 0x3f, 0x5f, 0xf1,
+  0xf4, 0x48, 0xa8, 0x3f, 0x4e, 0xa6, 0x24, 0x7d, 0xcd, 0x3a, 0xf8, 0x2f,
+  0x7d, 0x26, 0xe8, 0x20, 0x75, 0xe1, 0xb2, 0xf3, 0x88, 0x7a, 0x06, 0x69,
+  0x48, 0x41, 0x36, 0xf7, 0xf0, 0xe7, 0xce, 0x67, 0x73, 0xb3, 0x2c, 0x3e,
+  0x5a, 0x7d, 0x51, 0x88, 0x59, 0x74, 0x81, 0xdd, 0x0b, 0x2f, 0xf4, 0x68,
+  0x78, 0xa8, 0x79, 0x1b, 0xea, 0xee, 0x8b, 0xa7, 0x42, 0xeb, 0xad, 0x71,
+  0x8c, 0xc8, 0xc8, 0xd7, 0xa5, 0x37, 0x07, 0x2f, 0x76, 0xed, 0xf5, 0x2b,
+  0x39, 0xde, 0x1f, 0xb3, 0x7b, 0xb7, 0xeb, 0x38, 0x34, 0x67, 0xd4, 0xc5,
+  0xbc, 0x20, 0x47, 0x84, 0x7b, 0xc4, 0x36, 0xf0, 0xc3, 0x0f, 0x2c, 0xe3,
+  0x4b, 0xcd, 0x82, 0x97, 0x10, 0x82, 0x65, 0x7f, 0x37, 0x32, 0x91, 0xf9,
+  0xe2, 0x0a, 0x2d, 0x7b, 0x5d, 0x65, 0xb3, 0x8c, 0x78, 0xa5, 0xd8, 0x4e,
+  0xc1, 0xc6, 0x1e, 0x04, 0x36, 0x1f, 0x0a, 0xa0, 0x70, 0x0c, 0x8a, 0xb0,
+  0x34, 0xf0, 0xe7, 0x15, 0x84, 0x59, 0x11, 0x7f, 0x95, 0x59, 0xf1, 0xc3,
+  0xf7, 0x97, 0xdf, 0x9c, 0x5d, 0x8c, 0x92, 0x1d, 0x4a, 0xd0, 0xba, 0xbc,
+  0x38, 0xf9, 0xea, 0xbd, 0x31, 0xff, 0x6d, 0xf8, 0xe5, 0x75, 0x5a, 0xe4,
+  0xe6, 0xe6, 0x48, 0x46, 0x4d, 0x56, 0x98, 0x85, 0xbc, 0x56, 0x96, 0x76,
+  0x70, 0x4f, 0xd0, 0x5d, 0x59, 0x56, 0x5c, 0xa9, 0x03, 0x09, 0xb2, 0x37,
+  0xa5, 0xac, 0x06, 0x33, 0xb8, 0x14, 0x0c, 0xb8, 0x28, 0x9d, 0x6d, 0x9b,
+  0xb7, 0x93, 0xee, 0x12, 0x8d, 0xa2, 0x26, 0x97, 0xdf, 0x1c, 0xbe, 0xfb,
+  0x76, 0xa4, 0x04, 0xbe, 0xdf, 0x7f, 0xff, 0xbd, 0x1f, 0xdd, 0xaf, 0x0f,
+  0x76, 0x76, 0xa0, 0x63, 0xde, 0xa4, 0x9f, 0x3e, 0x0d, 0xeb, 0x6c, 0x63,
+  0xe3, 0x8d, 0x0b, 0xca, 0x39, 0x5a, 0xe7, 0x7a, 0x69, 0x54, 0x0b, 0xf3,
+  0xeb, 0x1d, 0x33, 0xc1, 0x44, 0x1f, 0xbd, 0xb3, 0x6c, 0xf2, 0x99, 0xb9,
+  0x91, 0xb2, 0x1a, 0x6f, 0xef, 0x6c, 0x6c, 0x8c, 0x8e, 0x8f, 0x93, 0xc3,
+  0xd3, 0xd1, 0x99, 0xf7, 0xee, 0xd6, 0xde, 0xb6, 0x51, 0xbd, 0xae, 0xb3,
+  0xc6, 0xfc, 0x65, 0x63, 0xe3, 0xf4, 0xf0, 0x92, 0x6c, 0xde, 0xef, 0x8e,
+  0x2f, 0x46, 0x27, 0x67, 0xef, 0x68, 0x79, 0x28, 0x31, 0x39, 0x9d, 0xdd,
+  0x11, 0x11, 0xd3, 0x55, 0x0e, 0x98, 0xe5, 0x9d, 0x16, 0x96, 0x15, 0x6e,
+  0x32, 0x56, 0xe5, 0x19, 0x33, 0x71, 0x47, 0xd9, 0xe2, 0x82, 0x6a, 0x20,
+  0x18, 0x98, 0x99, 0x09, 0xe5, 0xd8, 0xd9, 0x48, 0x9c, 0xe3, 0x8b, 0x93,
+  0x59, 0xb3, 0x31, 0xd7, 0x06, 0xec, 0x33, 0x38, 0x09, 0x10, 0x15, 0x2f,
+  0x83, 0x37, 0x3e, 0xf2, 0xd1, 0x09, 0x11, 0xeb, 0x25, 0xef, 0x47, 0x87,
+  0x5f, 0x1f, 0xd3, 0xb3, 0x5f, 0x67, 0x8d, 0x5b, 0x10, 0xae, 0x80, 0x4b,
+  0x5f, 0x79, 0x97, 0x35, 0xf5, 0x24, 0x5d, 0x64, 0x9b, 0xd4, 0xa7, 0xf1,
+  0x40, 0x48, 0xab, 0x5d, 0xe3, 0x6c, 0x0d, 0x38, 0xa6, 0xed, 0x42, 0x9e,
+  0x07, 0x27, 0xb6, 0xdf, 0xee, 0xc5, 0xf1, 0xe1, 0xeb, 0xb7, 0xc7, 0x5a,
+  0x5e, 0x92, 0x6f, 0x6e, 0xd3, 0xe8, 0x0d, 0x15, 0xdd, 0x74, 0xbe, 0x70,
+  0xd2, 0x0e, 0x68, 0xf6, 0xcd, 0x6f, 0x50, 0x0f, 0x3e, 0xfa, 0x39, 0xb7,
+  0x52, 0x78, 0x76, 0x78, 0x95, 0xef, 0x70, 0xeb, 0xfa, 0xbd, 0xd4, 0xce,
+  0x09, 0x0f, 0x22, 0x55, 0x8d, 0x99, 0xdd, 0x1a, 0x70, 0x87, 0x7c, 0xbe,
+  0xbb, 0xbb, 0xbb, 0x66, 0x1c, 0x30, 0x28, 0xe4, 0xde, 0x35, 0x43, 0x39,
+  0xa0, 0xc7, 0x77, 0x5c, 0xfb, 0xae, 0xc7, 0xb4, 0x4b, 0xb1, 0x6e, 0x57,
+  0x64, 0x90, 0xe3, 0xb6, 0xce, 0x9b, 0x2c, 0xde, 0xe5, 0x49, 0x59, 0xda,
+  0x15, 0x68, 0x4d, 0x8e, 0xd1, 0x91, 0xa1, 0xf3, 0x38, 0xce, 0x2c, 0xed,
+  0xf8, 0x34, 0x87, 0x1c, 0x49, 0xab, 0xfb, 0x6e, 0x93, 0xf4, 0x1b, 0xd3,
+  0x26, 0xfd, 0x31, 0x2c, 0xab, 0xeb, 0x9d, 0xf9, 0x01, 0x94, 0x1a, 0xf3,
+  0xd0, 0x1b, 0x02, 0xc2, 0x25, 0x46, 0x39, 0xb6, 0x39, 0xd8, 0x35, 0x4d,
+  0x6c, 0x69, 0x6e, 0xb3, 0x47, 0xf4, 0xeb, 0x17, 0xcc, 0x02, 0xd3, 0x67,
+  0x5c, 0xe9, 0xc8, 0xb5, 0x20, 0x55, 0xe4, 0x23, 0xb4, 0xff, 0xe0, 0x74,
+  0x1c, 0x1a, 0x11, 0x32, 0xe4, 0xba, 0xe3, 0xd8, 0x22, 0xe6, 0xaf, 0x95,
+  0xd9, 0x32, 0xc3, 0xe6, 0x13, 0x24, 0xaf, 0x54, 0xc9, 0xe3, 0x54, 0x25,
+  0x8a, 0xd5, 0x2e, 0xa8, 0xb0, 0x6a, 0x45, 0xdc, 0x8a, 0xfc, 0x05, 0x73,
+  0x80, 0x48, 0xf6, 0x5c, 0xcb, 0xc4, 0x01, 0xf1, 0x43, 0x0d, 0x77, 0xbf,
+  0x39, 0x18, 0x60, 0xff, 0xd4, 0x76, 0xb7, 0x3c, 0xe2, 0xe3, 0xde, 0xa0,
+  0x78, 0xf6, 0x0b, 0xb9, 0xa8, 0xbd, 0xbd, 0x33, 0x32, 0xbd, 0x08, 0xbe,
+  0xb5, 0x74, 0x85, 0xfe, 0x6a, 0xfe, 0x9c, 0xcf, 0x0c, 0x6f, 0x56, 0x63,
+  0x07, 0x60, 0xb0, 0x47, 0x7f, 0xe3, 0xe8, 0x5c, 0x29, 0x97, 0x8d, 0xee,
+  0x98, 0xdf, 0xd2, 0xe0, 0x49, 0xc8, 0x27, 0xc9, 0x16, 0xdd, 0x02, 0xaa,
+  0xe8, 0x02, 0x84, 0x03, 0x83, 0x15, 0x55, 0x1f, 0x7c, 0x83, 0x63, 0x4d,
+  0x0f, 0x0f, 0xcc, 0xd4, 0xd0, 0xa5, 0xf2, 0x7f, 0x76, 0x86, 0x75, 0x7d,
+  0xb3, 0x93, 0x4f, 0x3f, 0x54, 0x75, 0x9a, 0xfc, 0xb4, 0xd1, 0x49, 0xe5,
+  0xea, 0x0e, 0xe2, 0xff, 0x60, 0x06, 0x7f, 0xd1, 0x4c, 0xad, 0x1e, 0xc5,
+  0xef, 0x31, 0x82, 0xc1, 0x80, 0x5a, 0xd5, 0x2f, 0x7d, 0x30, 0x0f, 0x7c,
+  0xb0, 0x4c, 0x99, 0xbf, 0x62, 0x74, 0x11, 0x51, 0x68, 0x06, 0xc9, 0x14,
+  0x6a, 0x46, 0xb6, 0xc4, 0x37, 0xba, 0xd2, 0xbd, 0xff, 0xb8, 0xbf, 0xbb,
+  0xbb, 0x77, 0xb0, 0xf7, 0xf9, 0x8b, 0xdd, 0x83, 0xbd, 0xbd, 0xbd, 0xfd,
+  0x83, 0xbd, 0x83, 0x83, 0xfd, 0xdd, 0x9f, 0x77, 0x7a, 0xab, 0xa6, 0xee,
+  0xed, 0x57, 0x2b, 0x1a, 0x34, 0xa3, 0xee, 0x31, 0x3f, 0xd3, 0x4f, 0x76,
+  0xf4, 0x18, 0xd5, 0xb4, 0x97, 0xd4, 0xf3, 0xb1, 0xf9, 0x94, 0x1c, 0x4e,
+  0x7f, 0x30, 0xb5, 0xd1, 0xa5, 0x33, 0x6f, 0x40, 0xaf, 0xcf, 0xbe, 0x7f,
+  0x77, 0x7a, 0x76, 0xf8, 0x3a, 0xb9, 0x3c, 0x4b, 0x0e, 0xe1, 0xf9, 0x8b,
+  0xc8, 0x49, 0x70, 0xac, 0x11, 0x76, 0x92, 0x79, 0xf0, 0xbd, 0x7a, 0x30,
+  0xe2, 0xa6, 0xb2, 0x20, 0x27, 0x74, 0xa2, 0xdb, 0xcf, 0x12, 0x96, 0x1d,
+  0xb5, 0x34, 0xbc, 0x69, 0xe6, 0x0f, 0xdf, 0x08, 0x8f, 0xf9, 0x72, 0x9f,
+  0x83, 0xee, 0xce, 0x78, 0x47, 0x77, 0xf4, 0xe4, 0x4b, 0x51, 0x5e, 0x09,
+  0x69, 0x49, 0xc0, 0xda, 0x96, 0x90, 0xdd, 0x62, 0x88, 0x96, 0x2b, 0x63,
+  0xc2, 0xe5, 0x71, 0x3a, 0x30, 0x20, 0x5b, 0x68, 0x42, 0x10, 0x11, 0xd0,
+  0x92, 0x48, 0x2d, 0xdd, 0x0e, 0x06, 0x78, 0xb6, 0x72, 0x48, 0xe6, 0x32,
+  0xcf, 0x3e, 0x61, 0xd4, 0x6d, 0xd9, 0xcb, 0x04, 0x5e, 0x6e, 0x74, 0x60,
+  0x29, 0x51, 0x77, 0x44, 0x5e, 0x69, 0x97, 0x81, 0xe5, 0x8a, 0x7c, 0x8e,
+  0xbe, 0xa3, 0x22, 0xd9, 0x7d, 0x82, 0x7e, 0xe3, 0xdf, 0xe3, 0x3b, 0xd6,
+  0xc3, 0xcb, 0x1d, 0x78, 0x3f, 0x3a, 0x79, 0xf7, 0x35, 0x62, 0xb8, 0xdf,
+  0x9f, 0x5d, 0xbc, 0x1e, 0x99, 0x66, 0x49, 0xc3, 0xd9, 0x80, 0x93, 0x8f,
+  0x24, 0xa1, 0xf4, 0x8a, 0xcf, 0x25, 0x7d, 0xfa, 0x4f, 0xbc, 0x9d, 0xfa,
+  0x36, 0xfb, 0x01, 0xdd, 0xf4, 0x4c, 0x1e, 0xaa, 0xc1, 0x11, 0xbf, 0x35,
+  0xbc, 0xdd, 0xf8, 0xe5, 0x3c, 0x9d, 0xdc, 0x90, 0x8d, 0xce, 0x9b, 0x15,
+  0xa0, 0xba, 0x1d, 0xc2, 0x92, 0xef, 0x90, 0xe9, 0xb5, 0xd3, 0x94, 0xd8,
+  0x8e, 0x68, 0xa5, 0xac, 0x2c, 0x92, 0xab, 0x35, 0x23, 0xb4, 0xd7, 0xaf,
+  0x66, 0xe9, 0x35, 0x3e, 0x18, 0x1e, 0x03, 0xef, 0x63, 0xf2, 0xf9, 0xc7,
+  0x7e, 0x92, 0xae, 0x0d, 0xb4, 0x77, 0x82, 0x0d, 0x80, 0x0c, 0x00, 0x14,
+  0x16, 0xb9, 0x52, 0x26, 0x7c, 0x52, 0x3b, 0x51, 0xe5, 0x88, 0xc0, 0x3b,
+  0xc4, 0xd5, 0xd9, 0xad, 0x10, 0x81, 0x4a, 0x7e, 0x4c, 0x57, 0x6b, 0x54,
+  0x73, 0x87, 0xf7, 0xd3, 0xba, 0xe3, 0xd4, 0x92, 0xe7, 0x05, 0xaa, 0x1d,
+  0x00, 0xd1, 0xd5, 0xb2, 0xe4, 0x29, 0xa7, 0xce, 0x10, 0xac, 0x8d, 0x01,
+  0xb4, 0x84, 0x6c, 0x13, 0x3d, 0xb8, 0x47, 0x1c, 0xd0, 0x04, 0x4d, 0xe9,
+  0xe1, 0x8a, 0x6b, 0x91, 0xeb, 0xb8, 0x20, 0x73, 0xdd, 0x98, 0xae, 0xa4,
+  0xc4, 0x29, 0xce, 0x75, 0x6f, 0x24, 0x63, 0xdd, 0x18, 0x54, 0x0c, 0x4d,
+  0xee, 0x29, 0xc0, 0x85, 0x5b, 0xc9, 0x6b, 0xce, 0xfb, 0xb7, 0x14, 0xfe,
+  0x74, 0x79, 0xd1, 0xd7, 0xd9, 0xf5, 0x89, 0x59, 0xb7, 0xf7, 0xa4, 0x73,
+  0x5e, 0xd2, 0x1d, 0x67, 0xd4, 0x78, 0x23, 0xc0, 0x79, 0xe7, 0x08, 0x92,
+  0xde, 0xab, 0xad, 0xd7, 0x9a, 0x36, 0xe5, 0x97, 0xe4, 0xe6, 0x48, 0x32,
+  0x3b, 0x3f, 0xac, 0x9d, 0xc1, 0x0d, 0x80, 0x8c, 0xec, 0x2d, 0x60, 0x91,
+  0x94, 0x5e, 0x81, 0x22, 0x47, 0xae, 0xee, 0x4d, 0x1b, 0xc3, 0xea, 0xdc,
+  0x7b, 0x66, 0x8d, 0xa8, 0xa9, 0xbc, 0xa9, 0xb3, 0xd9, 0x15, 0x59, 0x50,
+  0xf6, 0x0a, 0xe1, 0x9a, 0xa0, 0x8e, 0x65, 0x5e, 0x48, 0x74, 0x97, 0x85,
+  0x31, 0x70, 0x52, 0x41, 0x6c, 0xb0, 0x2c, 0xb9, 0x86, 0x58, 0x77, 0x85,
+  0x88, 0xdb, 0x32, 0x84, 0xe3, 0xa2, 0x7f, 0x66, 0x48, 0x96, 0x6d, 0xae,
+  0x25, 0x3a, 0x3c, 0x3c, 0x31, 0xdf, 0x3a, 0x3a, 0x77, 0x34, 0x5b, 0xf7,
+  0x0b, 0x22, 0xc4, 0x20, 0x58, 0x84, 0x57, 0x77, 0x4b, 0x09, 0x2a, 0xc1,
+  0x14, 0x9b, 0x7d, 0x22, 0xb6, 0x46, 0x19, 0x9b, 0x33, 0xf3, 0xac, 0x56,
+  0x2f, 0xe3, 0xa5, 0xd6, 0xf0, 0x73, 0xc8, 0x42, 0x9a, 0x6d, 0xd3, 0x6f,
+  0x50, 0x00, 0x0b, 0xe6, 0x96, 0xd5, 0x40, 0x35, 0x0e, 0x6d, 0xb1, 0x37,
+  0x2e, 0x45, 0x2f, 0x4c, 0xaa, 0xb6, 0x68, 0x2a, 0xc2, 0xaf, 0x29, 0x9b,
+  0x90, 0x50, 0x82, 0xbd, 0x0f, 0x03, 0xdd, 0x4f, 0xe7, 0xa2, 0x05, 0xca,
+  0x6c, 0x8d, 0x72, 0x39, 0x76, 0x0b, 0x4b, 0x7b, 0x04, 0x70, 0x46, 0x6a,
+  0xf2, 0x28, 0xac, 0x45, 0xa4, 0x64, 0xdd, 0xde, 0xec, 0x09, 0xcf, 0x80,
+  0x11, 0x28, 0xc8, 0x6e, 0x58, 0xd6, 0x76, 0xe7, 0x98, 0xd9, 0xfa, 0x28,
+  0x17, 0xe2, 0x06, 0x70, 0xae, 0xa1, 0xb8, 0x11, 0xc9, 0xbb, 0x5a, 0xde,
+  0x3c, 0x2c, 0x6a, 0xc2, 0x2e, 0xa9, 0xc5, 0x38, 0xbb, 0x67, 0x69, 0x90,
+  0x17, 0xeb, 0x85, 0x8e, 0x74, 0xe2, 0x51, 0x1f, 0xc6, 0x58, 0xc1, 0xd9,
+  0x5a, 0x73, 0x60, 0xc5, 0xe1, 0x0c, 0x19, 0xcc, 0x81, 0x0c, 0xf1, 0x0e,
+  0x6b, 0x21, 0xf5, 0xae, 0x85, 0x8a, 0xc6, 0x81, 0xe7, 0xbc, 0x90, 0x83,
+  0xe4, 0xab, 0xb4, 0xce, 0x27, 0x7d, 0xa1, 0x15, 0x17, 0x9a, 0x71, 0x14,
+  0xaa, 0x55, 0xea, 0xf1, 0x64, 0x8b, 0x09, 0x2b, 0xb7, 0x87, 0xc9, 0xf7,
+  0x4a, 0x14, 0x6f, 0x8c, 0x48, 0xe4, 0x39, 0x52, 0x40, 0x80, 0x5a, 0x13,
+  0x24, 0x09, 0x9f, 0x3d, 0xd9, 0x9f, 0x7e, 0x45, 0x6f, 0x7c, 0xc4, 0x71,
+  0x68, 0x61, 0x55, 0xd3, 0xfa, 0xa3, 0x8d, 0x85, 0x61, 0xad, 0x44, 0x14,
+  0x71, 0x99, 0x19, 0x26, 0x64, 0x84, 0x6f, 0xa0, 0x5c, 0x5a, 0x80, 0x09,
+  0xfe, 0x6d, 0x8f, 0xaf, 0x16, 0x79, 0x80, 0x07, 0xb6, 0x16, 0x04, 0xa2,
+  0x57, 0x47, 0x07, 0x3b, 0xd3, 0x8a, 0xa8, 0xc1, 0xc0, 0x4c, 0x18, 0x4d,
+  0x8d, 0x08, 0xd0, 0xb3, 0xcb, 0xe3, 0x7f, 0x4b, 0x0e, 0xbb, 0xe1, 0x73,
+  0x10, 0x0b, 0x88, 0x18, 0x96, 0x9a, 0x8b, 0x76, 0x83, 0xa1, 0xef, 0x0c,
+  0x3a, 0x64, 0x66, 0xb9, 0x14, 0xcb, 0xbf, 0x21, 0xa9, 0x79, 0xce, 0x4f,
+  0x5c, 0x97, 0x82, 0xa1, 0x46, 0x49, 0x2a, 0x5b, 0xbc, 0x08, 0x41, 0x05,
+  0x8f, 0x51, 0x8b, 0x59, 0x91, 0xf3, 0x94, 0x31, 0xec, 0x9f, 0xcc, 0xc1,
+  0x46, 0xc1, 0x28, 0x08, 0x50, 0xc0, 0xad, 0xa5, 0x1c, 0x17, 0xc1, 0x72,
+  0x09, 0xa0, 0x4a, 0xa6, 0x16, 0x53, 0x93, 0x72, 0xe9, 0x18, 0xaf, 0x8e,
+  0x82, 0x6d, 0x81, 0x76, 0xff, 0x07, 0x3a, 0x72, 0x1f, 0xf4, 0x62, 0x91,
+  0x2b, 0x90, 0xfb, 0x22, 0xd5, 0xc2, 0xdb, 0x5b, 0x56, 0x8f, 0x1d, 0xdf,
+  0x66, 0xe7, 0x0a, 0x38, 0xc4, 0x42, 0xd0, 0x15, 0x00, 0xe4, 0x08, 0xe2,
+  0xe6, 0xb8, 0x53, 0x55, 0x6a, 0xfa, 0x17, 0x13, 0x58, 0xdb, 0xe8, 0x8e,
+  0xe0, 0x8a, 0xa3, 0xc2, 0xda, 0xc6, 0xf0, 0x6e, 0xd3, 0x6a, 0x1b, 0x94,
+  0x0f, 0xb2, 0x47, 0xcc, 0x2a, 0xf5, 0x62, 0x74, 0x76, 0xf4, 0xed, 0xa8,
+  0x95, 0x14, 0x50, 0x73, 0x49, 0x82, 0x44, 0x6b, 0x6f, 0x74, 0x36, 0xb4,
+  0x91, 0x86, 0x27, 0x4d, 0x47, 0x3c, 0x59, 0x3e, 0x34, 0x0f, 0x8d, 0x4a,
+  0x97, 0x4d, 0xab, 0x59, 0xa2, 0xa8, 0x9f, 0x64, 0x1e, 0x9d, 0x63, 0x51,
+  0x6e, 0x78, 0x37, 0x1f, 0xef, 0x9f, 0xb2, 0x56, 0x99, 0xc8, 0x64, 0x7f,
+  0xcc, 0x0b, 0x3e, 0xce, 0x98, 0xbe, 0xc4, 0xec, 0x12, 0x5e, 0x45, 0x64,
+  0x9f, 0xd1, 0x09, 0xe4, 0x9d, 0x39, 0xc7, 0xe6, 0xde, 0x70, 0xbb, 0x9b,
+  0xee, 0xa0, 0x55, 0xe3, 0x24, 0x12, 0x6a, 0xda, 0x6e, 0xea, 0x31, 0x67,
+  0xd5, 0x09, 0x15, 0xbc, 0x84, 0x7c, 0x1f, 0xde, 0x23, 0xe9, 0x35, 0xad,
+  0x0e, 0x34, 0xdb, 0xc2, 0xea, 0x59, 0xae, 0x6e, 0x0e, 0x83, 0x0b, 0x30,
+  0x48, 0x92, 0x29, 0xd3, 0x64, 0x7e, 0x2f, 0x49, 0x28, 0xa2, 0x1b, 0x10,
+  0x29, 0x00, 0xbc, 0x12, 0x9f, 0x7f, 0x1e, 0xe8, 0x82, 0x9f, 0xec, 0xd3,
+  0x07, 0xe6, 0xd7, 0x9e, 0xf7, 0x63, 0x46, 0x50, 0x13, 0xf2, 0x36, 0x40,
+  0x0f, 0xb5, 0x2e, 0x90, 0x88, 0x85, 0xe1, 0x95, 0xb6, 0xe1, 0x2f, 0xda,
+  0xc8, 0x4c, 0xb0, 0xcb, 0xfa, 0x4e, 0xee, 0x6f, 0xb0, 0x79, 0xcd, 0x1d,
+  0x4d, 0x6b, 0x86, 0x2c, 0xad, 0x30, 0xcc, 0x54, 0x4c, 0x76, 0x7b, 0xeb,
+  0x69, 0xcd, 0x46, 0x73, 0x1f, 0xd2, 0xa5, 0x4a, 0x46, 0xc0, 0xa8, 0x94,
+  0x86, 0x69, 0x92, 0xa5, 0x33, 0x76, 0x77, 0x74, 0xf6, 0x91, 0xad, 0x29,
+  0xe3, 0x64, 0xc4, 0xfb, 0xd5, 0xdd, 0x79, 0xff, 0x6b, 0xba, 0x73, 0x98,
+  0xac, 0x4d, 0xc6, 0xc0, 0x04, 0xb1, 0xc4, 0xaf, 0x25, 0xbc, 0x3a, 0x2d,
+  0xb1, 0xab, 0x55, 0xef, 0xe1, 0x39, 0x42, 0x51, 0x87, 0x0e, 0xed, 0x64,
+  0xe8, 0x98, 0x28, 0x4a, 0x7e, 0x1a, 0x46, 0x0d, 0xb5, 0xdf, 0xd7, 0xae,
+  0x3c, 0xb6, 0xbb, 0x52, 0x89, 0xcc, 0x66, 0x5c, 0x75, 0x12, 0x29, 0x24,
+  0xc1, 0x69, 0x6f, 0xb8, 0xeb, 0xeb, 0x57, 0x36, 0xed, 0xa9, 0x42, 0x16,
+  0x14, 0x4d, 0xf1, 0x86, 0xa7, 0xa2, 0x2c, 0xa5, 0x70, 0xd7, 0x4e, 0xe7,
+  0x35, 0xf9, 0xd9, 0x1e, 0xa7, 0x55, 0x9b, 0x93, 0x24, 0xf4, 0x5b, 0x94,
+  0x06, 0x97, 0xcd, 0x17, 0x48, 0x0f, 0x89, 0x15, 0x24, 0xc4, 0x39, 0x7a,
+  0xea, 0x8e, 0xd4, 0x33, 0xbb, 0xdc, 0xd2, 0x47, 0xce, 0x1e, 0x90, 0x2a,
+  0x3e, 0x0c, 0xe0, 0x87, 0xf2, 0xa9, 0x84, 0xf9, 0xcd, 0xca, 0x54, 0xb6,
+  0xa3, 0x36, 0x85, 0x32, 0xed, 0x67, 0x5c, 0xb6, 0xb6, 0xbc, 0x9c, 0xd0,
+  0xe6, 0x4a, 0xc1, 0x2e, 0x6a, 0x95, 0x10, 0xba, 0x11, 0x49, 0x83, 0xd4,
+  0xf5, 0x0c, 0x75, 0x79, 0xe8, 0x5c, 0xb3, 0x7f, 0x9c, 0xb6, 0x96, 0x92,
+  0x4d, 0xba, 0xe8, 0x9b, 0x55, 0xcf, 0x4c, 0xbb, 0xb3, 0xdc, 0x74, 0x68,
+  0x13, 0x3c, 0x1e, 0x5a, 0x6e, 0x44, 0x64, 0xa1, 0x6e, 0x61, 0x9b, 0x51,
+  0xdf, 0xae, 0xe4, 0x11, 0x12, 0xd2, 0x75, 0x85, 0x2e, 0x5f, 0x03, 0xfd,
+  0x64, 0xf0, 0xbf, 0x64, 0x66, 0x48, 0x3d, 0x27, 0xf4, 0x18, 0x28, 0x57,
+  0x16, 0x5e, 0xda, 0xbd, 0x24, 0xf4, 0x41, 0xe0, 0x13, 0x34, 0x54, 0xc7,
+  0xe1, 0x95, 0x98, 0xe5, 0x6c, 0x20, 0xc8, 0x3f, 0x1d, 0x7b, 0x9e, 0x75,
+  0x4b, 0xac, 0x88, 0xa8, 0xe0, 0xe6, 0x36, 0x5c, 0x29, 0x42, 0xe0, 0x05,
+  0x83, 0x0e, 0xdb, 0x8b, 0xec, 0x2b, 0x62, 0x08, 0x3d, 0x2a, 0x53, 0x7f,
+  0x5a, 0xd5, 0x96, 0xdb, 0xd0, 0x9e, 0xf2, 0xe6, 0xb7, 0xae, 0x0c, 0x26,
+  0x6e, 0x1e, 0x98, 0x17, 0x06, 0xef, 0xc5, 0x9d, 0xf1, 0x25, 0x7f, 0x61,
+  0x08, 0xbf, 0x3b, 0x7f, 0xe1, 0x9c, 0xda, 0xb2, 0x0f, 0x1c, 0xc8, 0x4b,
+  0xc4, 0xf6, 0xdc, 0x13, 0x4f, 0x4e, 0x7b, 0x56, 0xf8, 0x79, 0x65, 0x83,
+  0xee, 0x14, 0x85, 0xc4, 0x21, 0xe3, 0xbf, 0xf2, 0xbb, 0x62, 0x3c, 0xde,
+  0x53, 0x13, 0x43, 0xc6, 0xd7, 0x8b, 0xef, 0x65, 0x7f, 0x6f, 0x87, 0x3b,
+  0xa3, 0xb5, 0x1c, 0xa1, 0xd7, 0xc9, 0x96, 0x74, 0x30, 0x10, 0x1c, 0x04,
+  0x94, 0x5d, 0x71, 0x03, 0xa7, 0x6c, 0x00, 0x82, 0xef, 0xcc, 0xb9, 0xaa,
+  0x35, 0xf3, 0xba, 0xd2, 0xd5, 0x64, 0xee, 0x5a, 0xf0, 0x7b, 0x49, 0xca,
+  0x22, 0x31, 0x5f, 0xd8, 0x05, 0xea, 0x5b, 0x95, 0x6f, 0x93, 0xaa, 0x22,
+  0xfb, 0x56, 0x53, 0x46, 0x81, 0x98, 0x14, 0x85, 0x17, 0xef, 0x6c, 0xb6,
+  0x1c, 0x1d, 0x74, 0x8e, 0xb0, 0x9b, 0x1d, 0x7d, 0x71, 0xf8, 0xee, 0xeb,
+  0x63, 0x68, 0x02, 0x90, 0xed, 0x74, 0x40, 0x73, 0xda, 0xed, 0xd3, 0x25,
+  0xd7, 0x6c, 0x33, 0x33, 0x06, 0xf4, 0x5b, 0x3d, 0x94, 0x64, 0x4a, 0x4e,
+  0x55, 0x48, 0x65, 0xf3, 0x62, 0xb9, 0x05, 0xd3, 0xb6, 0x91, 0xa8, 0x47,
+  0x15, 0x1a, 0x04, 0x19, 0x8c, 0xc4, 0x0c, 0x50, 0x82, 0xb5, 0x7f, 0xbc,
+  0x40, 0x2d, 0x03, 0xd8, 0x67, 0x4e, 0xcc, 0xa8, 0x9f, 0x65, 0xd8, 0x3e,
+  0x8b, 0x1b, 0x9a, 0xc8, 0x62, 0x6d, 0xfa, 0x0a, 0x36, 0xfd, 0xd0, 0xf7,
+  0xaa, 0x71, 0x46, 0xfe, 0xde, 0xee, 0xae, 0xe3, 0x4a, 0x4a, 0x6d, 0x83,
+  0x81, 0xb4, 0xac, 0x92, 0xdd, 0xc1, 0x8b, 0x17, 0xab, 0x04, 0xa1, 0x6d,
+  0x14, 0xc9, 0xd2, 0xcf, 0x1e, 0xdd, 0xe6, 0x80, 0x1e, 0x5d, 0xd5, 0x66,
+  0xc4, 0xa2, 0x41, 0x85, 0x26, 0xc1, 0x13, 0xd6, 0x56, 0x6b, 0x11, 0x0f,
+  0x0f, 0x47, 0x6b, 0x10, 0x3e, 0x2b, 0xac, 0x59, 0x43, 0x53, 0xb9, 0xe1,
+  0x4a, 0x27, 0x81, 0xb3, 0x40, 0x9d, 0x41, 0x0b, 0x82, 0x14, 0xe6, 0x36,
+  0x8a, 0xfb, 0xa8, 0x89, 0xf1, 0x0c, 0xf8, 0x15, 0x53, 0x74, 0x15, 0x8e,
+  0x46, 0x55, 0x82, 0xf7, 0xe7, 0xe4, 0xff, 0x3b, 0x79, 0xf7, 0x35, 0xbb,
+  0x43, 0x8c, 0x6d, 0x0f, 0x5f, 0xfa, 0x4e, 0xc7, 0xd2, 0x7f, 0xcf, 0xa4,
+  0x47, 0x04, 0x27, 0x05, 0x7c, 0x83, 0xf9, 0x9e, 0xf3, 0x42, 0x4a, 0xbc,
+  0xba, 0x7a, 0x55, 0x71, 0x5f, 0xe5, 0x65, 0x32, 0xf0, 0x94, 0x13, 0x61,
+  0x3c, 0x22, 0xcd, 0x64, 0x7e, 0xaf, 0x96, 0x91, 0x7c, 0x01, 0xad, 0x6b,
+  0x64, 0xc6, 0x36, 0xcb, 0x76, 0x2e, 0x9b, 0xe7, 0xd8, 0x41, 0x81, 0x6e,
+  0x12, 0xf9, 0x24, 0x7f, 0x06, 0xe7, 0xbb, 0xa3, 0x89, 0x3c, 0xae, 0x2b,
+  0x69, 0xa4, 0xf6, 0xb6, 0x3a, 0x02, 0x72, 0x2a, 0xe8, 0x24, 0xbe, 0x9f,
+  0xae, 0x1b, 0x92, 0xcb, 0x31, 0xf9, 0x52, 0x9d, 0x56, 0x1b, 0x6c, 0xc4,
+  0x65, 0xf9, 0xcf, 0xf7, 0x73, 0x4d, 0x0f, 0xe9, 0xa0, 0x72, 0x1d, 0x6f,
+  0xe7, 0xd3, 0xf0, 0x6a, 0x5d, 0x47, 0xbe, 0x8d, 0xf7, 0xf9, 0xd3, 0x69,
+  0xfc, 0x73, 0xfc, 0xbe, 0x4e, 0x4d, 0xe4, 0x00, 0x90, 0x4a, 0x2b, 0x9c,
+  0x58, 0x36, 0xc9, 0x54, 0x6d, 0x19, 0xd2, 0xc2, 0x21, 0x39, 0xf2, 0xb6,
+  0x5a, 0xb2, 0x91, 0x48, 0x36, 0x3b, 0x08, 0xb3, 0x68, 0x0f, 0x81, 0x41,
+  0x01, 0x97, 0xd7, 0xc7, 0x5c, 0x58, 0x2c, 0x97, 0x45, 0x91, 0x91, 0x91,
+  0x8a, 0x02, 0xda, 0x39, 0xdb, 0x0b, 0x7d, 0x7b, 0x8a, 0xaa, 0xa5, 0xd4,
+  0x44, 0x05, 0x3e, 0xc1, 0x74, 0x3e, 0xad, 0x6f, 0x00, 0x1c, 0xb4, 0xae,
+  0xa8, 0x50, 0xbd, 0xc2, 0xe7, 0xb9, 0x5d, 0xd2, 0xa7, 0x58, 0x99, 0x82,
+  0x72, 0xdd, 0x9a, 0x8a, 0xf6, 0x0c, 0x6c, 0x6c, 0x90, 0x13, 0x7e, 0x87,
+  0x5c, 0xf1, 0xa3, 0x70, 0x02, 0xd5, 0x97, 0xbe, 0xd6, 0x1f, 0xef, 0x62,
+  0x0c, 0x0f, 0x78, 0xe6, 0x3d, 0xef, 0xc9, 0x63, 0x4f, 0x1c, 0xeb, 0xef,
+  0x91, 0xb8, 0x22, 0x0e, 0x9d, 0x27, 0xc8, 0xa2, 0x5b, 0xbd, 0xed, 0x4d,
+  0xf3, 0x6d, 0x01, 0x38, 0x7d, 0x60, 0x99, 0x81, 0x76, 0xbe, 0xb3, 0x5c,
+  0x30, 0xd8, 0x51, 0xae, 0x9c, 0x59, 0x6c, 0x54, 0xbc, 0xfb, 0xb5, 0x38,
+  0xfc, 0xc2, 0x7b, 0x90, 0x66, 0xa4, 0x5b, 0xb0, 0xf9, 0x8b, 0x58, 0x37,
+  0xe7, 0xc9, 0xe1, 0x9b, 0x18, 0x21, 0x77, 0x90, 0xa9, 0x0d, 0x18, 0x91,
+  0x3e, 0xba, 0x24, 0x37, 0x02, 0xae, 0x3e, 0xb5, 0x47, 0xbf, 0x3b, 0xbe,
+  0xf8, 0xea, 0x6c, 0x74, 0x6c, 0xd6, 0xe3, 0xf5, 0xf1, 0x57, 0xef, 0x49,
+  0x6a, 0xd1, 0xee, 0x60, 0xd7, 0x33, 0x71, 0x1f, 0x88, 0xff, 0x8b, 0xca,
+  0x22, 0x22, 0x69, 0x0a, 0xdb, 0x94, 0xf5, 0x20, 0x2d, 0x89, 0x67, 0x55,
+  0x3c, 0x2e, 0xec, 0x37, 0xcb, 0xd8, 0x57, 0x99, 0x23, 0x0d, 0x81, 0x49,
+  0x3e, 0x24, 0xe3, 0x07, 0x65, 0xc0, 0x60, 0x5e, 0xca, 0x51, 0x62, 0x1e,
+  0xda, 0xfa, 0xc0, 0x39, 0x35, 0x6f, 0xd9, 0x33, 0x2d, 0x87, 0xcf, 0x15,
+  0x2f, 0x03, 0xe3, 0x08, 0x36, 0xef, 0x91, 0xd5, 0xa3, 0x85, 0x73, 0x63,
+  0x56, 0xf2, 0xad, 0x89, 0x7a, 0x5b, 0xa8, 0xf4, 0x0e, 0x7f, 0x64, 0x83,
+  0x2b, 0x9c, 0x0d, 0x0a, 0x29, 0xfd, 0x55, 0xf3, 0xe6, 0xe6, 0x3a, 0x87,
+  0x84, 0x3e, 0xcb, 0xbc, 0xaa, 0x6f, 0x35, 0xb4, 0xe1, 0x99, 0xdc, 0xda,
+  0x12, 0x0f, 0x67, 0xb4, 0xaf, 0x10, 0x08, 0x6d, 0x89, 0x11, 0x7c, 0x87,
+  0x71, 0x0a, 0xc7, 0x2f, 0xd7, 0xce, 0x52, 0xaa, 0x4d, 0xcc, 0xbc, 0x5f,
+  0xc8, 0x80, 0xb7, 0xce, 0xed, 0x6a, 0xd1, 0x73, 0xc9, 0x23, 0x25, 0x3f,
+  0x07, 0x2b, 0x02, 0x42, 0x3a, 0x81, 0x7e, 0x77, 0x4a, 0x02, 0x38, 0x05,
+  0x85, 0xcf, 0x2e, 0xe5, 0x14, 0x78, 0x26, 0xe4, 0xea, 0x6a, 0x5b, 0xaa,
+  0xcd, 0x4a, 0x80, 0xc9, 0xa5, 0x13, 0xb1, 0x70, 0x15, 0x20, 0x1e, 0x2d,
+  0x29, 0x42, 0x02, 0x49, 0xb7, 0x12, 0xb8, 0x9c, 0x77, 0x6e, 0x1d, 0xff,
+  0xc5, 0x19, 0xf5, 0x02, 0x27, 0x1b, 0x1b, 0x1b, 0xaf, 0x8f, 0x2f, 0x0f,
+  0x4f, 0x4e, 0x8f, 0x5f, 0x27, 0x27, 0xef, 0xde, 0x9c, 0x5d, 0xbc, 0x3d,
+  0xbc, 0x14, 0x38, 0xc6, 0x6b, 0xeb, 0x91, 0x73, 0x75, 0x8a, 0xa4, 0x18,
+  0x87, 0xe7, 0xad, 0xc3, 0x16, 0x36, 0xab, 0x78, 0x2d, 0x75, 0x88, 0x79,
+  0x1a, 0xb2, 0xd6, 0x1c, 0x6c, 0x68, 0x5d, 0x06, 0x57, 0xd7, 0x89, 0xf4,
+  0x82, 0x1d, 0x1b, 0x7b, 0x1f, 0xea, 0x74, 0x5a, 0xa6, 0x15, 0x62, 0x42,
+  0x5d, 0xdb, 0x94, 0x2d, 0xd3, 0xc7, 0x77, 0x22, 0x2d, 0x27, 0x27, 0xfa,
+  0x63, 0x4f, 0x0e, 0x4e, 0x76, 0xb8, 0x20, 0xac, 0x47, 0xfa, 0xad, 0x94,
+  0x3b, 0xc8, 0xdb, 0xa7, 0x76, 0x3c, 0x8a, 0x8d, 0xab, 0x12, 0xa8, 0x12,
+  0xbf, 0x4d, 0x4b, 0x1c, 0x81, 0x15, 0x35, 0x5a, 0x00, 0xa3, 0x7f, 0xb8,
+  0x2c, 0x92, 0xb7, 0xbe, 0x39, 0x97, 0x4d, 0x98, 0x11, 0xf8, 0x08, 0x98,
+  0x22, 0x22, 0x41, 0xa9, 0xcd, 0x4a, 0xd9, 0xb3, 0x0e, 0x62, 0x16, 0x2b,
+  0xb0, 0x35, 0x3a, 0x27, 0x24, 0x99, 0x7e, 0x53, 0x5b, 0x36, 0x5e, 0x6f,
+  0x34, 0xa6, 0xc1, 0x89, 0x50, 0xba, 0xd2, 0x5c, 0x6c, 0x6f, 0xa0, 0x8a,
+  0xc6, 0x5d, 0xa1, 0x6c, 0x59, 0x16, 0x40, 0xea, 0x2c, 0xfe, 0x7c, 0xc7,
+  0x2b, 0x9d, 0x86, 0xd3, 0xe6, 0xce, 0xad, 0x16, 0xf8, 0x18, 0xbc, 0x36,
+  0x0f, 0x4d, 0x97, 0xf3, 0x45, 0xbb, 0x5a, 0x2e, 0xfb, 0xf2, 0x74, 0x09,
+  0x59, 0x69, 0x83, 0xf2, 0x01, 0xc7, 0xcf, 0x1b, 0x99, 0x03, 0x1e, 0x07,
+  0xf6, 0x77, 0xa3, 0xa1, 0x40, 0x94, 0x6b, 0xb4, 0xd1, 0xbb, 0x6e, 0xfd,
+  0xbb, 0xb6, 0xe6, 0x82, 0x09, 0x19, 0xd9, 0x67, 0xbb, 0x05, 0xf3, 0x52,
+  0x07, 0x51, 0xc2, 0xfc, 0x6f, 0x29, 0x41, 0x10, 0x6d, 0x59, 0x69, 0x50,
+  0xae, 0x8a, 0x30, 0xf8, 0xd8, 0x1a, 0x94, 0xff, 0x62, 0x1b, 0xd2, 0xe3,
+  0x4b, 0x7a, 0xfd, 0xb4, 0xe3, 0xc3, 0xe9, 0xf6, 0x40, 0xa4, 0xb8, 0x91,
+  0x27, 0xf7, 0x4a, 0x15, 0x4f, 0x64, 0x6e, 0x80, 0x1b, 0x91, 0xb3, 0x14,
+  0x19, 0xea, 0x22, 0x29, 0x11, 0x10, 0xd3, 0xed, 0xbb, 0x04, 0xff, 0x79,
+  0xf9, 0x91, 0x6c, 0x79, 0xad, 0x7b, 0xe8, 0x65, 0xe1, 0x31, 0xf8, 0x4c,
+  0x38, 0xb6, 0x20, 0xf4, 0x8a, 0x0d, 0xe5, 0xea, 0xd1, 0x97, 0x14, 0xc2,
+  0x08, 0xe9, 0xcf, 0xb5, 0x9a, 0x21, 0xe4, 0xc9, 0xa8, 0xce, 0xd2, 0x1a,
+  0x06, 0x15, 0x72, 0x71, 0xf8, 0xce, 0xb0, 0x6e, 0x58, 0x47, 0xeb, 0xe4,
+  0x15, 0x82, 0x82, 0x88, 0x9e, 0x26, 0x2f, 0xe9, 0x59, 0xa2, 0xcd, 0xd0,
+  0x43, 0xc1, 0xb8, 0x7b, 0xdb, 0x8a, 0x06, 0x38, 0x4c, 0x33, 0x5c, 0xcb,
+  0x99, 0xd1, 0xa4, 0xe7, 0xf4, 0x40, 0xaa, 0x1a, 0x7e, 0xcf, 0xd5, 0xec,
+  0xe8, 0x2d, 0x6e, 0xcc, 0x37, 0x7a, 0xa8, 0x4f, 0xde, 0x8c, 0x4d, 0xd7,
+  0x03, 0x01, 0x3a, 0xe5, 0xc7, 0x5f, 0x5d, 0xa4, 0x57, 0x69, 0x36, 0xfb,
+  0xe3, 0xfe, 0xee, 0x28, 0xbd, 0x5e, 0xce, 0xd2, 0x7f, 0xc7, 0x8b, 0xaf,
+  0x9e, 0x3c, 0xd9, 0xdf, 0xfd, 0xec, 0xf3, 0xdd, 0x5e, 0x17, 0x7d, 0x20,
+  0x88, 0x2c, 0x45, 0xd8, 0xd0, 0x4d, 0x06, 0xb9, 0x8b, 0xef, 0x0c, 0x27,
+  0xd7, 0x39, 0x8c, 0x3a, 0x52, 0x94, 0x64, 0x0e, 0x52, 0xb6, 0x26, 0x21,
+  0x26, 0xa5, 0x9c, 0x9e, 0xb9, 0x71, 0xcd, 0xbe, 0xfe, 0xc3, 0xde, 0x01,
+  0x8b, 0xb2, 0x6b, 0x38, 0xdf, 0x53, 0xde, 0xb1, 0xc9, 0xcb, 0xbc, 0x30,
+  0x37, 0xd0, 0x17, 0x49, 0x93, 0x5e, 0xdb, 0xbd, 0x2a, 0x79, 0xf3, 0x69,
+  0xe3, 0x96, 0xb3, 0x41, 0x88, 0x9a, 0x54, 0xab, 0x61, 0xb2, 0x05, 0x76,
+  0x84, 0xcd, 0x1a, 0x4a, 0xd6, 0x22, 0xab, 0x50, 0x03, 0xf9, 0xba, 0x4a,
+  0xe7, 0x9a, 0xab, 0x42, 0xef, 0x13, 0x6c, 0x6d, 0xb8, 0x98, 0x69, 0x1d,
+  0x7a, 0xf6, 0x5b, 0xe4, 0x6e, 0xc3, 0xcd, 0x16, 0xb5, 0x2b, 0x2f, 0xc7,
+  0xd7, 0xcd, 0x89, 0x54, 0xe5, 0xd9, 0x24, 0x97, 0x4a, 0x8f, 0x7d, 0x2a,
+  0x3d, 0x8c, 0x8a, 0x45, 0x06, 0xa4, 0xd9, 0x54, 0x47, 0x3a, 0xc4, 0xdf,
+  0xc1, 0xf3, 0x90, 0x32, 0x13, 0x59, 0x6f, 0xc1, 0x99, 0xd5, 0xb6, 0x42,
+  0x0b, 0x3b, 0xdf, 0xf2, 0xd6, 0xb8, 0x52, 0x87, 0xd9, 0x4c, 0x5e, 0xaa,
+  0x97, 0x68, 0xef, 0x8b, 0x57, 0xd8, 0x10, 0x7b, 0x5f, 0xfc, 0xbb, 0xfd,
+  0xd9, 0xbe, 0xfc, 0x6c, 0xff, 0x8b, 0x7f, 0x1f, 0x0e, 0xd1, 0x3f, 0xda,
+  0x21, 0x9b, 0xfa, 0xeb, 0x4d, 0xe1, 0x55, 0x49, 0xe5, 0x08, 0xf3, 0xbf,
+  0x6c, 0x2d, 0x6e, 0x5e, 0xeb, 0x9e, 0x7e, 0xd9, 0x9f, 0xe5, 0xbe, 0x44,
+  0x54, 0xad, 0xdc, 0xca, 0x6b, 0x9f, 0x9c, 0xaa, 0x8e, 0x4d, 0xba, 0x8d,
+  0x83, 0xa0, 0x1d, 0x41, 0x5f, 0xe2, 0xe5, 0xff, 0xa0, 0x9d, 0xfa, 0x1f,
+  0x1b, 0x89, 0x44, 0x37, 0x69, 0x39, 0xee, 0x11, 0xf0, 0xd0, 0x6d, 0x6b,
+  0x1e, 0x4d, 0x1b, 0x21, 0x64, 0xa5, 0x96, 0x29, 0x01, 0x84, 0xee, 0x40,
+  0xaf, 0x46, 0xc9, 0x9f, 0xa4, 0xac, 0x23, 0x2f, 0xf8, 0x46, 0x62, 0x9f,
+  0xe1, 0x44, 0x19, 0xa3, 0x63, 0x34, 0x24, 0x1d, 0xf0, 0xec, 0x1f, 0x7f,
+  0xf8, 0x41, 0x14, 0x2a, 0xf3, 0x17, 0xe9, 0xf9, 0x8d, 0x91, 0x45, 0x53,
+  0x23, 0xde, 0xe6, 0x28, 0x7a, 0x20, 0x85, 0x65, 0xe4, 0xca, 0xbf, 0x92,
+  0x91, 0x72, 0x23, 0x66, 0x69, 0xb9, 0xc8, 0x3c, 0xf5, 0x0d, 0x93, 0x7a,
+  0xcc, 0x62, 0x0c, 0x7b, 0x73, 0x0b, 0x10, 0x0f, 0x07, 0x4b, 0xf4, 0xb7,
+  0x3e, 0xad, 0x1d, 0x96, 0x1d, 0xbb, 0xdf, 0x34, 0xa6, 0x06, 0xb8, 0x2c,
+  0x25, 0xf6, 0x2c, 0x6b, 0x39, 0xaf, 0x7a, 0xfc, 0xe0, 0x75, 0xde, 0x93,
+  0x20, 0x16, 0xff, 0xa4, 0xe7, 0x68, 0x72, 0x78, 0x3d, 0xb0, 0x68, 0xaf,
+  0x58, 0x75, 0xca, 0xff, 0x9e, 0xbd, 0xda, 0xdb, 0x8d, 0x3f, 0x81, 0xa8,
+  0x2d, 0x0a, 0xd7, 0xbb, 0x80, 0xe0, 0xba, 0xe7, 0xf3, 0x29, 0x3f, 0x2d,
+  0x25, 0x59, 0x51, 0x1f, 0xe7, 0x55, 0x6f, 0x4c, 0x37, 0x2c, 0xfd, 0xff,
+  0x15, 0xfd, 0x40, 0xc4, 0x4a, 0x9e, 0xad, 0x97, 0xe3, 0x79, 0xde, 0xea,
+  0xf0, 0x0e, 0x0d, 0xf0, 0x0b, 0x1a, 0xf0, 0xf7, 0x99, 0xdd, 0x1d, 0x19,
+  0xa9, 0x76, 0xac, 0xfb, 0x6d, 0x5e, 0x95, 0xe5, 0x38, 0xad, 0x36, 0x25,
+  0x9c, 0xa3, 0xfd, 0xdc, 0xdc, 0xdb, 0x7f, 0xf2, 0xf4, 0xd9, 0xe6, 0x50,
+  0xf4, 0x34, 0x88, 0x88, 0xc6, 0xa7, 0xa2, 0xe0, 0x26, 0x2c, 0x89, 0x02,
+  0x83, 0xad, 0x91, 0x16, 0x1f, 0x0b, 0xae, 0x92, 0x14, 0xa3, 0xcf, 0xbd,
+  0xe2, 0xaf, 0xfd, 0x3b, 0x7d, 0xe7, 0x15, 0x3e, 0xf1, 0xef, 0xf9, 0xf4,
+  0x95, 0x1d, 0xe1, 0xbf, 0xd3, 0x58, 0x5e, 0xc9, 0x20, 0xcc, 0xba, 0x6a,
+  0x1a, 0x62, 0xbd, 0xbd, 0x11, 0x95, 0x6b, 0xd1, 0xc5, 0xd5, 0x45, 0xdc,
+  0xc0, 0xa0, 0x81, 0x60, 0x18, 0x4c, 0x39, 0xfa, 0x01, 0x6d, 0xd5, 0xe5,
+  0xe0, 0xed, 0x7c, 0x1a, 0x98, 0x56, 0x06, 0xd4, 0xca, 0xc0, 0x09, 0x6c,
+  0xf0, 0xb9, 0x0d, 0x68, 0x21, 0xfa, 0x92, 0x88, 0x39, 0x83, 0x97, 0x45,
+  0x54, 0x81, 0xb2, 0x04, 0x08, 0xe0, 0xe8, 0xeb, 0x93, 0x4d, 0x01, 0xde,
+  0xb0, 0x99, 0xd8, 0x8f, 0xf9, 0xa7, 0x2d, 0xc4, 0x70, 0x92, 0x2e, 0xe8,
+  0xf4, 0x6f, 0x24, 0x42, 0x86, 0x99, 0x12, 0x8e, 0x84, 0xbe, 0xcb, 0x59,
+  0xd3, 0xe6, 0x63, 0x72, 0xeb, 0xcc, 0xc8, 0xe3, 0x5d, 0x31, 0xd3, 0x9c,
+  0xd7, 0x8c, 0x99, 0x97, 0x5a, 0x00, 0x25, 0x88, 0xf9, 0x2c, 0x6c, 0xc2,
+  0xe5, 0xe0, 0x8d, 0x0d, 0x7a, 0xda, 0x04, 0x3f, 0x79, 0xd4, 0xfc, 0x8a,
+  0xe5, 0x89, 0x8a, 0x88, 0xde, 0x50, 0x8b, 0xee, 0xf2, 0x4e, 0xf0, 0xa5,
+  0x07, 0x12, 0xff, 0xc7, 0x99, 0xa4, 0x69, 0xb2, 0xdb, 0x84, 0x15, 0x43,
+  0x92, 0x9f, 0x2f, 0x6d, 0xad, 0xa9, 0x2f, 0x12, 0x10, 0xda, 0xf2, 0x5b,
+  0x12, 0x77, 0x6c, 0xd5, 0x7e, 0xc6, 0x4b, 0x62, 0x1e, 0xd8, 0x10, 0x98,
+  0x87, 0xc6, 0x11, 0xc5, 0xc0, 0xa7, 0xd4, 0x1b, 0xdf, 0x8b, 0xb3, 0x81,
+  0x5a, 0xd8, 0xfc, 0x33, 0x0e, 0xc1, 0x4b, 0x5a, 0x06, 0xfc, 0xfa, 0x8b,
+  0xcd, 0x0d, 0x5b, 0x6c, 0xc5, 0x6a, 0xee, 0x9d, 0x00, 0x32, 0x6f, 0x50,
+  0x7f, 0x3c, 0x46, 0xa1, 0x56, 0xbe, 0x43, 0xd6, 0xc6, 0x88, 0xa0, 0x03,
+  0x4c, 0xf4, 0x46, 0x9b, 0x9a, 0x51, 0xba, 0x73, 0xcb, 0x41, 0xcd, 0x8d,
+  0x9b, 0x5f, 0xb0, 0x5d, 0xb0, 0x49, 0x68, 0x55, 0xbc, 0xb7, 0x69, 0xe9,
+  0x13, 0xe1, 0x33, 0x85, 0xc0, 0xab, 0x32, 0xad, 0xa0, 0xb8, 0x21, 0x89,
+  0xf9, 0x4e, 0x9b, 0xf7, 0x07, 0x56, 0x7b, 0xca, 0x83, 0x4b, 0x73, 0x64,
+  0xd6, 0x9a, 0xe0, 0x88, 0xbc, 0xa1, 0x1c, 0x62, 0xf9, 0xe8, 0x2b, 0x9a,
+  0xee, 0xbd, 0xe1, 0x75, 0x7e, 0xc5, 0x93, 0x61, 0x44, 0xe4, 0x75, 0xb6,
+  0x63, 0xfe, 0xd9, 0x37, 0x3f, 0xdf, 0x27, 0xad, 0x8c, 0xfe, 0xf2, 0x04,
+  0x78, 0x2c, 0xff, 0xee, 0xf7, 0xce, 0x86, 0x3d, 0x17, 0xf4, 0x97, 0xdc,
+  0xde, 0xf9, 0x12, 0xd5, 0x91, 0x5e, 0x0e, 0x94, 0xd1, 0x10, 0xc9, 0x75,
+  0xaa, 0x6a, 0xfa, 0xa0, 0x12, 0x32, 0xb4, 0xc8, 0x24, 0x5d, 0x52, 0x56,
+  0x8b, 0x05, 0x8f, 0x08, 0x90, 0x42, 0x14, 0x75, 0xd2, 0xbb, 0x73, 0x71,
+  0xcf, 0x50, 0x16, 0x10, 0x6e, 0xd6, 0xec, 0x6e, 0xbb, 0xef, 0x23, 0x6d,
+  0x8d, 0x78, 0xbf, 0xa5, 0xbc, 0xfa, 0xd9, 0xbd, 0x9f, 0x91, 0x49, 0x9f,
+  0xdf, 0x92, 0xc2, 0x64, 0xc4, 0xc4, 0x27, 0x99, 0xc6, 0x58, 0xe6, 0xbc,
+  0xbb, 0x82, 0xed, 0xe2, 0x5e, 0x0c, 0xe4, 0xcb, 0xeb, 0x66, 0x9b, 0x3e,
+  0x93, 0xcd, 0x6a, 0xd8, 0xea, 0x52, 0xd5, 0x4f, 0xbf, 0x2a, 0xc0, 0x03,
+  0xfe, 0xd0, 0xa6, 0x7f, 0xf6, 0xcb, 0x49, 0x93, 0x19, 0x5b, 0x97, 0xf8,
+  0xb3, 0xe6, 0x2c, 0xe7, 0x8e, 0xe7, 0x4c, 0x86, 0x8a, 0x2d, 0x3c, 0x1b,
+  0xf0, 0xed, 0x29, 0x2a, 0xd1, 0xe0, 0xcd, 0x30, 0x39, 0x05, 0x62, 0xbc,
+  0x4e, 0x99, 0xa1, 0x45, 0x6f, 0x58, 0xdd, 0x0d, 0x66, 0xeb, 0xb0, 0x0e,
+  0xbe, 0xc1, 0x35, 0xdc, 0x88, 0x14, 0x43, 0xb7, 0x14, 0xa8, 0xe9, 0x9c,
+  0xd1, 0xc9, 0xfa, 0x85, 0xe8, 0x23, 0x7d, 0xf8, 0xc2, 0xed, 0x73, 0xf0,
+  0xf9, 0xdb, 0x32, 0xec, 0xde, 0x86, 0xf5, 0x1a, 0x61, 0xd0, 0x96, 0x28,
+  0xa0, 0x9e, 0x58, 0xb7, 0x87, 0x80, 0x21, 0x95, 0x19, 0x3b, 0x5d, 0x88,
+  0x9d, 0x81, 0x68, 0x62, 0x10, 0x13, 0x36, 0xad, 0x61, 0x97, 0x51, 0xc9,
+  0x35, 0xda, 0x46, 0x3d, 0xd8, 0x8d, 0xb3, 0xcc, 0x1a, 0xd7, 0xbc, 0x56,
+  0xa5, 0x85, 0x9b, 0xc3, 0x17, 0x23, 0x84, 0x9c, 0x36, 0x5c, 0x47, 0x9d,
+  0xa4, 0x7e, 0xa5, 0xb7, 0xe6, 0x2f, 0xa4, 0x9c, 0x8d, 0x2b, 0xb3, 0xea,
+  0x59, 0xc5, 0x57, 0x03, 0x63, 0x84, 0xbc, 0xfa, 0x73, 0xdf, 0x5c, 0xbe,
+  0x3d, 0x4d, 0x94, 0xe9, 0xe6, 0xca, 0xa9, 0x8a, 0x8a, 0xcc, 0xc4, 0x10,
+  0xc5, 0x33, 0xc2, 0xfa, 0x90, 0x3c, 0xc5, 0xb7, 0x1c, 0xcf, 0x2d, 0xe5,
+  0xca, 0x27, 0xa8, 0x43, 0xef, 0x1f, 0x59, 0xef, 0x09, 0x7e, 0x95, 0xf6,
+  0x91, 0xd9, 0x26, 0x9b, 0x34, 0x05, 0x9b, 0xfd, 0x64, 0x93, 0xba, 0x4a,
+  0xbf, 0xd8, 0xc4, 0x7c, 0xe2, 0xc7, 0xde, 0xf4, 0x6d, 0x0e, 0x23, 0xa7,
+  0x90, 0x9e, 0x79, 0xf5, 0x65, 0x6b, 0x96, 0xf0, 0x73, 0x6d, 0xea, 0x15,
+  0xa7, 0x99, 0x04, 0x3a, 0xb7, 0xbe, 0xeb, 0xb5, 0xff, 0xea, 0xa8, 0x24,
+  0x2e, 0x42, 0xaa, 0x6f, 0xe7, 0x60, 0xae, 0x13, 0xfb, 0xb3, 0x1c, 0x39,
+  0xb3, 0x41, 0x43, 0x0f, 0x9f, 0xe2, 0x4b, 0x15, 0x45, 0x16, 0x02, 0xca,
+  0xd2, 0x8d, 0xb7, 0x80, 0x4a, 0x5e, 0xb3, 0x9a, 0x39, 0xdb, 0x7d, 0x77,
+  0x25, 0xbc, 0x0c, 0x90, 0x39, 0x7b, 0x43, 0xe4, 0x50, 0x3a, 0x56, 0x66,
+  0xdb, 0x80, 0x35, 0xde, 0x7b, 0x98, 0xd0, 0x9e, 0x45, 0xe5, 0xaa, 0x49,
+  0xaf, 0xb3, 0x1c, 0x93, 0x5d, 0x8b, 0x7c, 0x82, 0x62, 0xd1, 0xaf, 0xbe,
+  0x9c, 0x96, 0xd7, 0x24, 0xb9, 0xfa, 0xe6, 0xa0, 0xd1, 0x9f, 0x00, 0x24,
+  0xef, 0xcb, 0x47, 0xb9, 0xc3, 0x38, 0x2b, 0xac, 0xc5, 0xeb, 0xbf, 0x57,
+  0x40, 0x54, 0xdf, 0x90, 0x2b, 0x74, 0x22, 0x6d, 0xdb, 0xa6, 0x79, 0x3d,
+  0x4c, 0xfb, 0xf6, 0x17, 0xfe, 0xb7, 0x74, 0x72, 0x52, 0x69, 0x99, 0xeb,
+  0x0c, 0x4a, 0x21, 0xc6, 0xd9, 0xbd, 0x2d, 0x3b, 0x03, 0x07, 0x17, 0x11,
+  0x2b, 0xf3, 0xbd, 0x35, 0x93, 0xc4, 0xbe, 0xcd, 0x2f, 0x37, 0x39, 0x47,
+  0x60, 0xf3, 0xe5, 0x26, 0x24, 0x18, 0xc9, 0xa5, 0xf9, 0x38, 0x43, 0xfa,
+  0x99, 0x5c, 0x4e, 0x9b, 0x7c, 0x2b, 0x0e, 0x58, 0x77, 0x10, 0x6e, 0x3f,
+  0x77, 0x40, 0x70, 0x2d, 0x3b, 0x33, 0xd2, 0x07, 0x4f, 0xc2, 0x4d, 0x80,
+  0x02, 0x07, 0xe8, 0x15, 0x91, 0x95, 0x8e, 0x1b, 0x06, 0xca, 0xc8, 0xa5,
+  0x0b, 0xb5, 0x0c, 0x7c, 0x29, 0x54, 0xcc, 0x44, 0xdc, 0x9c, 0xcb, 0x62,
+  0x41, 0xd9, 0xf1, 0x13, 0x94, 0x26, 0x97, 0xb3, 0x34, 0x4c, 0xde, 0x17,
+  0x53, 0x2e, 0x4e, 0x4c, 0xc6, 0x72, 0x5e, 0x4d, 0x96, 0x73, 0x72, 0x55,
+  0x4c, 0xc8, 0x41, 0x86, 0x8b, 0x87, 0xd5, 0x83, 0x56, 0x78, 0xde, 0xef,
+  0x30, 0x3b, 0x47, 0xd8, 0x61, 0x2e, 0xdf, 0x05, 0x14, 0x85, 0x00, 0x58,
+  0xe2, 0x10, 0x87, 0x56, 0x60, 0x79, 0x53, 0x44, 0x00, 0x51, 0x64, 0xf0,
+  0xf8, 0xcd, 0xf1, 0xc5, 0xc5, 0xf1, 0x05, 0xcd, 0xf7, 0x61, 0xa7, 0xbe,
+  0x8f, 0x12, 0xa5, 0xba, 0x50, 0xa3, 0xc2, 0x7e, 0xc3, 0xe2, 0xf0, 0x2c,
+  0x0a, 0xa5, 0x06, 0x0e, 0x2c, 0x08, 0x66, 0x0a, 0x62, 0x9e, 0x75, 0xdf,
+  0xbd, 0x08, 0xd8, 0xb7, 0x0d, 0x1b, 0x00, 0x06, 0x05, 0x07, 0x64, 0x4b,
+  0xb7, 0x70, 0x2d, 0x54, 0x42, 0xbd, 0xbd, 0xd4, 0x9c, 0xfc, 0x9b, 0xac,
+  0xa5, 0xa6, 0x0e, 0x05, 0xa9, 0x9b, 0x49, 0x30, 0x7d, 0x66, 0xfd, 0x13,
+  0x18, 0xf2, 0x15, 0x9d, 0x51, 0xb2, 0x9d, 0x30, 0x19, 0x75, 0xb3, 0x5c,
+  0xe4, 0x53, 0xeb, 0xed, 0x35, 0x3f, 0x37, 0xea, 0x5f, 0xc2, 0xa7, 0xbc,
+  0x56, 0xac, 0x0b, 0xa2, 0x9a, 0xea, 0x8c, 0xf0, 0xbd, 0x6d, 0x9d, 0x62,
+  0xaf, 0x09, 0xf2, 0xe5, 0x18, 0x34, 0xa6, 0xd4, 0xc7, 0xed, 0xec, 0x72,
+  0xd9, 0xfb, 0x19, 0xbc, 0x8c, 0x24, 0x2d, 0x14, 0x7e, 0xe3, 0x4b, 0x06,
+  0xf2, 0x65, 0xcd, 0x1d, 0xde, 0xdd, 0x15, 0x87, 0xbc, 0x40, 0x52, 0x69,
+  0x75, 0x90, 0xfc, 0x58, 0xe7, 0x93, 0x9f, 0xdd, 0xe5, 0x81, 0xf4, 0x1f,
+  0x07, 0x49, 0x67, 0x0f, 0xbd, 0x19, 0xbc, 0x4c, 0x94, 0x18, 0xc3, 0x9c,
+  0xcc, 0xfd, 0x7e, 0x74, 0x7c, 0x91, 0x1c, 0x7e, 0x4d, 0x9c, 0xbf, 0xff,
+  0xe4, 0x02, 0xd3, 0x73, 0x72, 0x3b, 0x6c, 0x08, 0xc7, 0x82, 0xb0, 0x9b,
+  0x64, 0xea, 0x0a, 0x97, 0xda, 0x52, 0x47, 0x6d, 0x80, 0x1b, 0xf7, 0xca,
+  0xa3, 0xa1, 0x68, 0xad, 0x21, 0xb9, 0x0b, 0x1f, 0x58, 0xc5, 0xc7, 0xac,
+  0x21, 0x1d, 0x32, 0x7f, 0x15, 0x99, 0x17, 0x89, 0x43, 0x12, 0xba, 0x36,
+  0xd2, 0xfb, 0x3a, 0x30, 0x3b, 0x79, 0x95, 0x0e, 0x93, 0xcd, 0xb7, 0xe5,
+  0xdf, 0x8d, 0x32, 0x90, 0xee, 0x3c, 0x19, 0xee, 0x26, 0x5b, 0xdf, 0xe7,
+  0xc5, 0x8b, 0x67, 0x7f, 0x4e, 0x4e, 0xb6, 0x37, 0x5b, 0x60, 0x7e, 0xae,
+  0x65, 0x30, 0x4e, 0x8b, 0x8f, 0x76, 0xc9, 0xce, 0x70, 0xb2, 0x19, 0x54,
+  0x27, 0xce, 0x87, 0x9a, 0x09, 0xbf, 0x57, 0xb6, 0x88, 0xd4, 0x4f, 0xc9,
+  0x0b, 0x48, 0xbe, 0xb3, 0x25, 0x92, 0xc9, 0xca, 0x37, 0x4f, 0x4d, 0x69,
+  0xea, 0x5e, 0x3c, 0x0b, 0x9a, 0x78, 0x6a, 0xdb, 0x78, 0xcf, 0x6d, 0xfc,
+  0xc2, 0x26, 0xf6, 0x87, 0xbb, 0xfb, 0xc9, 0xd6, 0xd9, 0x68, 0x67, 0xdf,
+  0xb6, 0x10, 0x36, 0xb1, 0x8f, 0x26, 0xe8, 0xa1, 0xf6, 0xcb, 0x4f, 0xe9,
+  0xfb, 0x3f, 0x66, 0xc5, 0xcf, 0xc9, 0xd6, 0x0f, 0x7b, 0x7b, 0xa6, 0x81,
+  0x3f, 0x27, 0x87, 0x27, 0x3f, 0x24, 0x4f, 0x87, 0xa6, 0xb1, 0x77, 0xe9,
+  0xad, 0x34, 0x27, 0xb4, 0xb5, 0x23, 0x34, 0x62, 0x7e, 0x1f, 0xb4, 0xf1,
+  0xac, 0xd3, 0xc6, 0xa9, 0xb1, 0x0b, 0x3f, 0x99, 0x6b, 0x65, 0x77, 0xf8,
+  0x64, 0x3f, 0xc9, 0x9f, 0x7d, 0xfe, 0x5c, 0x1b, 0x92, 0x36, 0xf0, 0xfb,
+  0xb6, 0xb7, 0x92, 0x09, 0x53, 0x8c, 0xaa, 0x73, 0xfc, 0xc9, 0x08, 0x34,
+  0x88, 0x88, 0x8a, 0x3c, 0x85, 0x37, 0x69, 0x35, 0x95, 0xed, 0x46, 0x45,
+  0x0e, 0xcc, 0x4a, 0x09, 0x69, 0x74, 0x06, 0xb7, 0xa5, 0xb9, 0x38, 0x0f,
+  0x82, 0xee, 0x90, 0x6d, 0xaa, 0x8f, 0xfe, 0x39, 0x79, 0x3b, 0x3a, 0x39,
+  0x36, 0x23, 0xda, 0x35, 0x5d, 0x73, 0x73, 0xc8, 0x1d, 0xc2, 0xaf, 0x30,
+  0xb9, 0x2f, 0xc0, 0x3f, 0x2a, 0x6d, 0xa8, 0xce, 0xcd, 0x40, 0x56, 0xb3,
+  0xe9, 0xcc, 0xc5, 0x5d, 0xe3, 0xbb, 0x04, 0x49, 0x19, 0x1c, 0x5e, 0x93,
+  0x09, 0xc1, 0x57, 0x2d, 0x3e, 0xfd, 0x6d, 0x59, 0x98, 0x63, 0x52, 0x95,
+  0x15, 0x21, 0xa7, 0x36, 0x5b, 0xda, 0xc2, 0xb7, 0xaf, 0x8f, 0x39, 0xa9,
+  0xfe, 0x6d, 0x5a, 0x18, 0x19, 0x49, 0xe4, 0x58, 0xf5, 0x47, 0x8a, 0xff,
+  0x73, 0x38, 0x87, 0xdf, 0x3f, 0xbd, 0x2f, 0x3e, 0x99, 0x75, 0xfc, 0x6c,
+  0xb8, 0x47, 0x90, 0x6d, 0xb2, 0x7a, 0xdf, 0xbc, 0x35, 0xff, 0xde, 0x7b,
+  0xba, 0x99, 0xd0, 0xaf, 0xda, 0x16, 0xbc, 0x9e, 0xd7, 0x8d, 0xa3, 0xb3,
+  0xb3, 0x6f, 0x4f, 0x18, 0x00, 0x72, 0x24, 0x6e, 0x55, 0x52, 0xae, 0xac,
+  0x55, 0xcc, 0xd2, 0xd5, 0x58, 0x6f, 0x2e, 0x5b, 0x09, 0xc1, 0xb8, 0x8f,
+  0x59, 0xb6, 0x20, 0x34, 0x42, 0xd3, 0x91, 0x08, 0x8d, 0xc8, 0x68, 0x8b,
+  0x6d, 0x22, 0xf5, 0xa7, 0xc3, 0xce, 0xd8, 0xd4, 0xd6, 0x85, 0x3b, 0xbe,
+  0xb7, 0xc4, 0x1d, 0xa9, 0x2b, 0xdd, 0x88, 0x2e, 0xda, 0x6c, 0x05, 0x75,
+  0x41, 0x63, 0x85, 0xa9, 0x9c, 0x86, 0xd8, 0xbe, 0x9b, 0x23, 0xa3, 0xdd,
+  0x73, 0xa7, 0x0f, 0xc4, 0x6b, 0xbb, 0xe9, 0xb1, 0x48, 0x43, 0xa3, 0x45,
+  0xba, 0x0e, 0x43, 0xd4, 0xc8, 0x40, 0x10, 0xe0, 0xbc, 0xc8, 0x66, 0x54,
+  0xd6, 0xcd, 0x00, 0xcf, 0x7b, 0x77, 0xf8, 0xf6, 0xf8, 0xd5, 0x77, 0x87,
+  0xa7, 0xef, 0x8f, 0xcd, 0x2b, 0x39, 0x6a, 0x7e, 0x5b, 0x08, 0x1f, 0xfa,
+  0x38, 0xcf, 0x27, 0xe5, 0x8c, 0xa2, 0x4c, 0x9b, 0x7f, 0xde, 0xdc, 0x60,
+  0x78, 0x79, 0xd2, 0xa3, 0xb7, 0xf6, 0xf8, 0x35, 0xb3, 0x2f, 0xe8, 0x5f,
+  0xfb, 0xfc, 0xaf, 0xfd, 0x3f, 0xf7, 0xb6, 0x5b, 0x83, 0x0e, 0xac, 0x64,
+  0xda, 0x2f, 0x77, 0x5c, 0xac, 0x0c, 0x75, 0x4a, 0x91, 0xbb, 0xc1, 0xb3,
+  0xd2, 0xd3, 0x18, 0x8d, 0xde, 0x6d, 0xf4, 0xec, 0xd6, 0xf8, 0xde, 0xb7,
+  0xc1, 0x7b, 0xf4, 0xd2, 0x2b, 0x28, 0x18, 0xbd, 0xed, 0xbe, 0x55, 0x39,
+  0x10, 0x2a, 0xa7, 0x36, 0xb4, 0x89, 0xec, 0xd3, 0x82, 0x10, 0x91, 0x5b,
+  0x3d, 0xfe, 0xcb, 0xab, 0xd7, 0x87, 0x97, 0xc7, 0xf4, 0x82, 0x7e, 0x5e,
+  0xd0, 0x88, 0x36, 0x8d, 0x82, 0xfa, 0xb3, 0x25, 0xa1, 0xe9, 0x57, 0x34,
+  0xa0, 0xde, 0x36, 0xc7, 0x32, 0x10, 0x54, 0xef, 0xf4, 0xab, 0x2c, 0x14,
+  0xb8, 0xed, 0x12, 0xd5, 0x6b, 0x45, 0xac, 0x6c, 0xf5, 0xf8, 0x77, 0x3d,
+  0xeb, 0xc1, 0x95, 0x7a, 0x08, 0x12, 0xae, 0x9c, 0x22, 0xc9, 0x22, 0xc8,
+  0xac, 0x65, 0x48, 0x9a, 0x5b, 0x1f, 0x09, 0x56, 0xb0, 0xc7, 0xc9, 0xe3,
+  0xd5, 0xb6, 0x0b, 0x2f, 0x99, 0xf0, 0xe4, 0x63, 0x2a, 0xcb, 0xbd, 0xfd,
+  0x27, 0x7f, 0xc6, 0x7c, 0xbe, 0xea, 0xed, 0x98, 0xbb, 0xa1, 0xf7, 0x67,
+  0xfa, 0x74, 0xde, 0x78, 0x45, 0xa7, 0xe4, 0x33, 0x64, 0x4f, 0xc9, 0x8e,
+  0x62, 0xb8, 0x0c, 0xad, 0xba, 0xc7, 0xef, 0x83, 0x09, 0xbd, 0xe3, 0x2c,
+  0x31, 0x65, 0xc4, 0x51, 0xf0, 0x00, 0xd6, 0x0b, 0xd5, 0x72, 0x40, 0xd8,
+  0xcf, 0x4e, 0x5d, 0x7c, 0xce, 0xbf, 0x3f, 0xfa, 0xfc, 0x2e, 0x8f, 0x51,
+  0x18, 0x84, 0xe8, 0x9b, 0xf3, 0x7b, 0x4d, 0x24, 0xc3, 0xb7, 0xa0, 0x93,
+  0xf3, 0x9a, 0x05, 0x9a, 0xf1, 0x58, 0x7c, 0x3b, 0x6a, 0x8c, 0x40, 0x27,
+  0x30, 0xa2, 0xe5, 0x1e, 0x8a, 0x12, 0xd0, 0x06, 0x3e, 0xc8, 0x42, 0xef,
+  0xec, 0x74, 0x4c, 0x59, 0xe6, 0x36, 0x35, 0xc6, 0xb3, 0xca, 0xed, 0xd4,
+  0xeb, 0xf1, 0xcb, 0x3d, 0x6e, 0x26, 0xba, 0x28, 0x79, 0x2e, 0x6b, 0xeb,
+  0x43, 0x42, 0xb4, 0x51, 0x9e, 0x6d, 0xaf, 0x53, 0x27, 0x1f, 0x0d, 0xc3,
+  0x60, 0x93, 0x9e, 0xed, 0x63, 0x23, 0x6a, 0x8a, 0xac, 0x5a, 0x0b, 0xb0,
+  0x88, 0x04, 0xa3, 0x30, 0x44, 0x0f, 0xe9, 0x40, 0xef, 0x0c, 0x87, 0x43,
+  0x6b, 0xee, 0x20, 0x90, 0x26, 0x31, 0x28, 0x94, 0xf9, 0xf0, 0x98, 0x62,
+  0x31, 0xc7, 0x5b, 0x50, 0xe6, 0xa1, 0x50, 0x6f, 0x0b, 0xf0, 0x46, 0xfc,
+  0x04, 0xf6, 0x68, 0x78, 0x3e, 0x8e, 0x4d, 0xf9, 0xec, 0xa6, 0xd2, 0x36,
+  0x7c, 0x8c, 0x2d, 0xc2, 0x9a, 0xbe, 0xb1, 0xef, 0x51, 0xca, 0x64, 0x58,
+  0x39, 0x55, 0xda, 0xb9, 0xa0, 0x1d, 0x4c, 0x00, 0x72, 0xae, 0x12, 0x75,
+  0x6f, 0xcb, 0x63, 0x68, 0x57, 0xfa, 0x8c, 0x3d, 0x20, 0x21, 0x57, 0xde,
+  0x81, 0x06, 0x01, 0x64, 0x0b, 0x84, 0x3d, 0x29, 0xd8, 0x3d, 0xa0, 0x37,
+  0xc8, 0xc2, 0xaa, 0xcd, 0xd2, 0x8e, 0xb0, 0x06, 0x93, 0xcd, 0x0c, 0xdd,
+  0x5f, 0xb2, 0x1c, 0x85, 0x90, 0xa6, 0xd6, 0x24, 0x1e, 0xa3, 0xb6, 0x95,
+  0x73, 0x84, 0xbd, 0x64, 0xf0, 0xce, 0x5d, 0x45, 0x68, 0xb3, 0x01, 0x53,
+  0xba, 0x68, 0x22, 0xa2, 0x4a, 0x0f, 0x21, 0xf5, 0x58, 0x17, 0x2f, 0x9f,
+  0x68, 0x8b, 0x36, 0x58, 0xde, 0x99, 0x1b, 0x77, 0x2b, 0xb7, 0x45, 0x97,
+  0x99, 0x51, 0xf6, 0x2e, 0x33, 0x79, 0x86, 0x93, 0x7b, 0x49, 0x7a, 0x67,
+  0xae, 0x9e, 0x22, 0x23, 0x7c, 0x26, 0x90, 0x0e, 0xf0, 0xca, 0x9c, 0x7a,
+  0x7e, 0x46, 0x3b, 0x42, 0xad, 0xa2, 0x92, 0xba, 0x32, 0x2a, 0xc9, 0x16,
+  0x1b, 0x1a, 0x4c, 0x98, 0xab, 0x0e, 0x3d, 0x52, 0xc0, 0x5b, 0x35, 0xab,
+  0xd5, 0x3c, 0xa7, 0x9e, 0x1b, 0x11, 0x3d, 0x92, 0x7d, 0x93, 0x03, 0x97,
+  0x48, 0x7e, 0x0e, 0xc6, 0x55, 0xe8, 0x6c, 0x71, 0xe1, 0x76, 0xfd, 0x88,
+  0x8d, 0x4f, 0x8b, 0xfb, 0x89, 0xe0, 0xbd, 0xc5, 0x00, 0x54, 0x17, 0x1a,
+  0x12, 0x16, 0xf3, 0xea, 0xfa, 0x9a, 0xad, 0xb6, 0xa4, 0x3b, 0xb4, 0xf8,
+  0x26, 0x3b, 0xa5, 0x59, 0x21, 0x14, 0xf4, 0xfd, 0xaa, 0xd9, 0xbc, 0xb4,
+  0x15, 0xbc, 0xc4, 0xeb, 0xd2, 0xda, 0xcc, 0x1a, 0x93, 0xe4, 0x75, 0x6b,
+  0x6c, 0xd2, 0x15, 0x12, 0x34, 0xda, 0x31, 0xe4, 0xb3, 0x8b, 0x0d, 0x94,
+  0x48, 0x28, 0x1c, 0x21, 0x83, 0x2e, 0x3a, 0xf8, 0xf9, 0x1c, 0x02, 0xc5,
+  0x21, 0x51, 0xef, 0x2c, 0xd4, 0x0a, 0xdb, 0x35, 0x19, 0xa7, 0xce, 0xe4,
+  0xda, 0x48, 0x5a, 0xde, 0xde, 0x1a, 0xd5, 0xa6, 0x45, 0x0e, 0x95, 0xb7,
+  0x99, 0x23, 0x89, 0x74, 0x0e, 0x47, 0x47, 0xec, 0x2b, 0xa7, 0xdf, 0x0a,
+  0x93, 0x4e, 0x80, 0xd7, 0xca, 0x2b, 0x0c, 0xb2, 0x33, 0x2b, 0xc3, 0xc4,
+  0x6b, 0x92, 0x5d, 0x25, 0xa5, 0x2f, 0xe2, 0xb9, 0x6f, 0x12, 0xb7, 0xd6,
+  0x16, 0x79, 0x8f, 0x30, 0xc9, 0x8b, 0x67, 0x9a, 0x70, 0x79, 0x11, 0xe5,
+  0xc4, 0xb7, 0x18, 0x3d, 0x17, 0xff, 0xd5, 0x51, 0xf6, 0xec, 0x22, 0xf5,
+  0xb4, 0xfa, 0x00, 0x36, 0x01, 0xf6, 0x00, 0x29, 0x74, 0x36, 0x84, 0x7f,
+  0x29, 0xeb, 0x84, 0x9d, 0x0c, 0x0f, 0x5a, 0x47, 0x90, 0x06, 0x67, 0xce,
+  0x42, 0x34, 0x90, 0x87, 0x42, 0xac, 0xbe, 0x84, 0x2b, 0x18, 0x8c, 0x37,
+  0x38, 0xdf, 0x68, 0x30, 0x51, 0x89, 0xbe, 0x9e, 0xb0, 0x60, 0xdc, 0x3a,
+  0x98, 0x0f, 0x9d, 0xd3, 0xf3, 0x8b, 0xb3, 0xaf, 0x2f, 0x8e, 0x47, 0xa3,
+  0xe4, 0xed, 0xf1, 0x25, 0xdb, 0xfa, 0x97, 0x0c, 0xbd, 0xbb, 0x46, 0xc9,
+  0x5a, 0xc4, 0x1a, 0x94, 0xc3, 0x49, 0x21, 0x27, 0xea, 0x48, 0x40, 0xce,
+  0x13, 0x55, 0x63, 0xc5, 0xed, 0xc8, 0x46, 0xfc, 0x4c, 0x10, 0x7b, 0x37,
+  0xf0, 0xf6, 0x03, 0xd3, 0x84, 0x80, 0xa4, 0x75, 0x9e, 0x3b, 0x37, 0x2a,
+  0x14, 0x63, 0x46, 0x39, 0xd9, 0x9c, 0x43, 0xe7, 0x42, 0xa7, 0x2b, 0xdb,
+  0xfc, 0x89, 0xe1, 0xfd, 0xd1, 0xcc, 0xa6, 0xd4, 0x9f, 0xfa, 0xa3, 0x31,
+  0x7e, 0x65, 0x53, 0xfc, 0x31, 0xf9, 0xc1, 0xb4, 0x39, 0x35, 0xc6, 0xab,
+  0x14, 0xdb, 0x1c, 0xa1, 0xca, 0xa6, 0xab, 0x05, 0x96, 0x7b, 0x55, 0x64,
+  0x13, 0x4e, 0x31, 0xac, 0x1e, 0x28, 0x70, 0x07, 0x8a, 0x19, 0xa6, 0x3d,
+  0x12, 0x4c, 0x9d, 0xfd, 0xb2, 0x54, 0x23, 0x4a, 0x92, 0xd3, 0xec, 0x0a,
+  0x25, 0x72, 0xf1, 0x39, 0xd3, 0xdc, 0x2e, 0xf1, 0x3f, 0xef, 0xbd, 0xa5,
+  0x1f, 0xed, 0x26, 0x4f, 0x3e, 0x7f, 0xbe, 0xfb, 0x39, 0xff, 0x55, 0xff,
+  0xfb, 0xe2, 0xe9, 0xae, 0xf0, 0xa5, 0x9b, 0x7f, 0x3d, 0x3d, 0x78, 0xba,
+  0x77, 0x40, 0xf4, 0x8e, 0xbb, 0x07, 0xbb, 0xe6, 0xff, 0x3f, 0x95, 0x9f,
+  0x10, 0x87, 0xe5, 0x8b, 0xfd, 0xcf, 0x3f, 0x03, 0x1a, 0x86, 0xf6, 0xc7,
+  0xcc, 0x7c, 0x64, 0xd0, 0x94, 0x03, 0xb0, 0x4c, 0x41, 0xf3, 0xf9, 0x63,
+  0xdb, 0x13, 0x49, 0xe1, 0x75, 0x2a, 0xbf, 0x4b, 0x03, 0xb7, 0xc5, 0x07,
+  0xd5, 0xab, 0xca, 0xc4, 0x37, 0x7e, 0xc9, 0x34, 0x3b, 0x0c, 0x79, 0x9b,
+  0x2b, 0x78, 0x81, 0xb6, 0xad, 0xf5, 0x0e, 0x03, 0xcd, 0x3d, 0x86, 0xb8,
+  0x5f, 0xfa, 0x69, 0x4d, 0x24, 0xdf, 0x00, 0xef, 0x9b, 0x2c, 0x95, 0xbc,
+  0x37, 0xd1, 0x82, 0x4e, 0x7e, 0x45, 0xdb, 0x4e, 0x19, 0xd8, 0x5f, 0xfa,
+  0x3d, 0xf6, 0x5c, 0xd1, 0x5b, 0xb2, 0x1b, 0x92, 0xf0, 0x6b, 0x36, 0x17,
+  0x21, 0xf2, 0xad, 0xd6, 0xe6, 0xd9, 0x70, 0xcb, 0xef, 0x66, 0xca, 0x2b,
+  0xe7, 0x6a, 0x73, 0xb8, 0xb8, 0xa0, 0x6b, 0x64, 0xc8, 0x41, 0x73, 0xef,
+  0x17, 0x7e, 0x7b, 0x8f, 0x69, 0xce, 0x8d, 0x08, 0x3b, 0xd8, 0xae, 0xdc,
+  0xc0, 0x5b, 0x9c, 0x9c, 0x81, 0x6d, 0xb6, 0x62, 0x9f, 0xf2, 0x8a, 0xda,
+  0x62, 0xaa, 0x78, 0xd5, 0x6e, 0xd9, 0x01, 0xbf, 0x21, 0x3a, 0xa7, 0xcd,
+  0x8b, 0x43, 0xa1, 0x44, 0x5c, 0xf1, 0xfc, 0xbc, 0xee, 0xec, 0xe0, 0x53,
+  0xb4, 0x1b, 0xbd, 0xef, 0xc9, 0x37, 0x70, 0x9e, 0xec, 0xa1, 0x5b, 0x3b,
+  0x34, 0x87, 0xad, 0xd7, 0x62, 0x71, 0x8c, 0xe3, 0x82, 0xf2, 0x1d, 0x3b,
+  0x92, 0xee, 0x39, 0xc0, 0xd7, 0x6d, 0x73, 0xfe, 0xed, 0x33, 0x03, 0x83,
+  0x38, 0x17, 0xc0, 0x20, 0xba, 0x52, 0x62, 0xf7, 0xdf, 0x56, 0x11, 0x36,
+  0xf8, 0x83, 0x85, 0x6d, 0xe1, 0x32, 0x63, 0x58, 0x1b, 0x35, 0x45, 0xf3,
+  0x39, 0xf3, 0x73, 0x69, 0xad, 0xb4, 0x1b, 0xa7, 0x55, 0x8b, 0x45, 0x7f,
+  0x83, 0xab, 0x46, 0x98, 0xeb, 0xd5, 0x5c, 0x17, 0x48, 0x77, 0x64, 0x3d,
+  0xe2, 0xdf, 0x36, 0x36, 0x46, 0xe7, 0xc7, 0xc7, 0xaf, 0x93, 0xd3, 0x93,
+  0xb7, 0x27, 0x97, 0x9e, 0x16, 0x6e, 0x6f, 0x0f, 0xf5, 0xb4, 0x6a, 0x7d,
+  0xa9, 0xce, 0x74, 0x38, 0xd6, 0x66, 0xfe, 0x9e, 0xde, 0xdf, 0xf3, 0x4c,
+  0xb2, 0x28, 0x66, 0xdd, 0xf7, 0x60, 0x6f, 0x83, 0xd9, 0x89, 0x8a, 0xff,
+  0x7a, 0x5a, 0x5c, 0x6d, 0x34, 0x1a, 0xd3, 0xbb, 0x01, 0xb3, 0x0b, 0x0c,
+  0xfe, 0x22, 0x38, 0x8d, 0xb6, 0xba, 0x24, 0xe4, 0xb3, 0x36, 0xa5, 0x47,
+  0xb0, 0xad, 0x9d, 0x5e, 0xd1, 0xdc, 0x66, 0x33, 0xa9, 0xae, 0x6e, 0xdd,
+  0x72, 0x80, 0xed, 0xdd, 0x65, 0x60, 0x3b, 0x98, 0xe7, 0x9c, 0x6b, 0xe9,
+  0x63, 0x8a, 0x51, 0xdc, 0x42, 0x6e, 0x3c, 0xc8, 0x71, 0xff, 0x8b, 0xde,
+  0xe9, 0xb0, 0x80, 0x5a, 0xfd, 0x56, 0xcd, 0x15, 0xbb, 0xcc, 0x04, 0x14,
+  0xc9, 0x93, 0x5d, 0x9b, 0xae, 0xb0, 0x80, 0xcc, 0x11, 0xfd, 0x9e, 0x3e,
+  0xb6, 0x97, 0x18, 0x25, 0x64, 0x49, 0xaa, 0x7c, 0xb5, 0x2c, 0x82, 0xeb,
+  0xee, 0x2f, 0xfc, 0xae, 0x19, 0xff, 0xf3, 0x5d, 0x5c, 0x6f, 0x57, 0x69,
+  0x35, 0x30, 0xea, 0xd6, 0xfd, 0x40, 0x5d, 0xaa, 0xbc, 0x23, 0x04, 0x6f,
+  0xcc, 0xfe, 0x9e, 0xcc, 0x55, 0xc2, 0xeb, 0xa8, 0x88, 0x2e, 0xe7, 0xa4,
+  0x44, 0x5c, 0x72, 0x26, 0x07, 0x80, 0x86, 0x4e, 0x99, 0xbe, 0xea, 0xe1,
+  0x74, 0x0a, 0x8e, 0x23, 0x26, 0xd6, 0x55, 0x74, 0x32, 0x8a, 0x32, 0x10,
+  0x20, 0x56, 0xa9, 0xd5, 0x9c, 0x86, 0x29, 0x63, 0x09, 0xf5, 0xe9, 0x79,
+  0xb2, 0xf7, 0x39, 0x8d, 0xe3, 0x71, 0xe3, 0x79, 0x53, 0x56, 0x13, 0x9b,
+  0x53, 0x0c, 0x1b, 0xc1, 0x4b, 0x30, 0xe5, 0xb4, 0x08, 0x54, 0x65, 0xe2,
+  0xd9, 0x55, 0x50, 0x2c, 0x40, 0x7b, 0x64, 0x94, 0x48, 0x3c, 0x1d, 0xee,
+  0x28, 0x04, 0xb8, 0x59, 0x2d, 0xa2, 0xbb, 0x46, 0xe6, 0xc5, 0xab, 0x61,
+  0x58, 0xd9, 0x04, 0x54, 0x9e, 0x06, 0x72, 0x89, 0x98, 0xbd, 0x76, 0x97,
+  0x4f, 0xa1, 0x4a, 0x3b, 0x8a, 0x3a, 0xb3, 0x5e, 0xbc, 0xf9, 0x18, 0x2b,
+  0x8d, 0x98, 0x25, 0x82, 0x9d, 0xb6, 0x67, 0xa2, 0xc0, 0xd0, 0xb4, 0x96,
+  0xf0, 0x28, 0x78, 0xd5, 0xdc, 0xad, 0x81, 0x43, 0xf6, 0x13, 0x89, 0xe6,
+  0x9e, 0xfb, 0x0a, 0xe5, 0x0a, 0x34, 0xcd, 0x4c, 0x9d, 0x09, 0x6f, 0xed,
+  0xc6, 0x6e, 0x8f, 0x99, 0x98, 0x5a, 0xbc, 0x61, 0xef, 0xed, 0x1a, 0xa5,
+  0x75, 0x56, 0x8e, 0x3b, 0xb5, 0xb2, 0x43, 0x4b, 0x14, 0xc3, 0x1a, 0x60,
+  0x76, 0xf6, 0x76, 0xbf, 0x5d, 0x3d, 0xeb, 0x20, 0xb9, 0x5f, 0xfb, 0xf2,
+  0xfe, 0xd3, 0x35, 0x8b, 0x76, 0x56, 0xc1, 0x18, 0xcf, 0x14, 0x03, 0x09,
+  0x45, 0xd0, 0x45, 0x5e, 0x82, 0x65, 0x33, 0x1b, 0x3f, 0xbb, 0x4e, 0x51,
+  0x73, 0x74, 0x4d, 0xef, 0x35, 0x27, 0xa4, 0xd3, 0x95, 0xb7, 0x82, 0xca,
+  0xe6, 0x5f, 0xd6, 0xe4, 0x16, 0x5b, 0x80, 0xa0, 0xcf, 0xd9, 0xae, 0x36,
+  0x9d, 0x9c, 0xb9, 0x19, 0xbc, 0xb7, 0x59, 0x72, 0xf6, 0xdb, 0x42, 0x42,
+  0x77, 0x4f, 0x95, 0x5d, 0x2f, 0x99, 0x09, 0xa3, 0x64, 0x5b, 0x9f, 0xf8,
+  0xac, 0xe5, 0xbc, 0x1a, 0xd9, 0x4c, 0xf0, 0x21, 0xde, 0x4f, 0x10, 0xbc,
+  0x93, 0x54, 0x55, 0x56, 0x29, 0x1a, 0xda, 0xb9, 0x18, 0xc8, 0x29, 0x3b,
+  0x29, 0xe7, 0x52, 0x1f, 0x90, 0x8f, 0x57, 0xe1, 0x25, 0xf6, 0x33, 0x61,
+  0xe3, 0x10, 0x99, 0xbe, 0xbc, 0x51, 0xac, 0xb0, 0xa7, 0xb4, 0x32, 0x8a,
+  0x86, 0x35, 0x1c, 0x16, 0x40, 0x03, 0x7d, 0xd9, 0xb5, 0x68, 0xc9, 0x7e,
+  0x8a, 0x24, 0x7e, 0xad, 0xc4, 0x99, 0x4c, 0xb3, 0x4f, 0xce, 0xfe, 0xa3,
+  0xb3, 0x77, 0x6f, 0x4e, 0xbe, 0xb6, 0x54, 0x46, 0x2c, 0xc4, 0x5b, 0x14,
+  0x1b, 0xec, 0x3e, 0xf6, 0x23, 0xdd, 0x52, 0x76, 0x51, 0xd0, 0xb7, 0x46,
+  0x3c, 0x7d, 0xf0, 0x7f, 0x00, 0x01, 0x52, 0x3c, 0x21, 0x07, 0x39, 0xf3,
+  0x7f, 0xd4, 0xdb, 0xce, 0xdd, 0xd0, 0xa1, 0xaa, 0xe3, 0x2c, 0x8d, 0xb4,
+  0x6a, 0x96, 0x0b, 0x0b, 0x22, 0xf4, 0xca, 0x36, 0x0a, 0x01, 0xb7, 0xa6,
+  0xa2, 0x2f, 0x17, 0x2c, 0x9a, 0x24, 0xa1, 0xb4, 0xe5, 0xcd, 0xe5, 0x3b,
+  0x80, 0xdc, 0x09, 0xc2, 0xa5, 0x22, 0x17, 0x40, 0x80, 0xcb, 0x99, 0x11,
+  0x63, 0xa7, 0x8f, 0x97, 0xd7, 0xf8, 0xcd, 0x34, 0xad, 0x6f, 0x78, 0xa0,
+  0xb8, 0x34, 0x72, 0x86, 0x69, 0x23, 0xd6, 0x96, 0x4e, 0xc9, 0x50, 0x77,
+  0x60, 0x1c, 0x8b, 0xfe, 0x75, 0xf1, 0xa1, 0x3a, 0xd1, 0xac, 0x07, 0x8b,
+  0x4f, 0xd2, 0x34, 0xd6, 0x14, 0xa1, 0x4a, 0xc4, 0x3a, 0xf1, 0x93, 0x57,
+  0x14, 0x96, 0x39, 0x20, 0x1e, 0xfa, 0x39, 0x13, 0xca, 0xf9, 0xe9, 0xa7,
+  0x22, 0x25, 0x1d, 0x59, 0xfc, 0xc9, 0x95, 0x97, 0xd1, 0xc6, 0x38, 0x41,
+  0xdd, 0x74, 0xec, 0x23, 0x26, 0x07, 0xcb, 0xe6, 0x1f, 0x36, 0x07, 0xf5,
+  0xfd, 0x7c, 0x5c, 0xce, 0x34, 0xf1, 0xc2, 0x12, 0x48, 0xe8, 0x43, 0x7e,
+  0x09, 0xb5, 0x84, 0x23, 0xb5, 0x8d, 0xe7, 0x96, 0x74, 0x58, 0x29, 0xd7,
+  0x7f, 0x2e, 0x43, 0x84, 0xf0, 0x90, 0x8e, 0x02, 0xdc, 0x3e, 0x24, 0xe3,
+  0xb3, 0x62, 0x32, 0x2b, 0x65, 0x57, 0x53, 0x82, 0x39, 0x66, 0xaa, 0x3d,
+  0x74, 0x8a, 0xf8, 0x95, 0x4b, 0xf2, 0x70, 0xa0, 0xf4, 0x88, 0x51, 0x77,
+  0x7a, 0xc2, 0xa8, 0x81, 0x01, 0xd2, 0xdb, 0xfc, 0x0b, 0x41, 0xe5, 0x7b,
+  0xfc, 0x36, 0x5c, 0xab, 0xc4, 0x74, 0xf5, 0x27, 0x76, 0x28, 0x72, 0xdc,
+  0xef, 0x2f, 0xfa, 0x71, 0x7d, 0xb4, 0x33, 0xf5, 0x66, 0x3f, 0xa5, 0xd5,
+  0xb5, 0xb0, 0xf4, 0x49, 0x24, 0x0d, 0x46, 0xa2, 0xad, 0x20, 0x63, 0x1d,
+  0x93, 0xa4, 0x94, 0x58, 0xd4, 0x0c, 0xd4, 0xa7, 0x25, 0xe7, 0x14, 0x4a,
+  0xc6, 0x15, 0xbb, 0x24, 0xed, 0x46, 0xf4, 0x24, 0xce, 0x1f, 0x2c, 0x16,
+  0x25, 0x75, 0x77, 0x99, 0x56, 0xb6, 0x70, 0xfe, 0x59, 0xb9, 0xcc, 0xbc,
+  0xd7, 0xc8, 0x89, 0x07, 0x4b, 0x38, 0x13, 0xc7, 0x09, 0x7f, 0x4a, 0x4b,
+  0x6c, 0x33, 0xa5, 0x6e, 0x56, 0xbb, 0x26, 0xf8, 0xf7, 0xaf, 0xa4, 0x72,
+  0x95, 0x39, 0xcf, 0xc2, 0x94, 0x22, 0xf4, 0x81, 0x9f, 0xef, 0x8a, 0xfb,
+  0xad, 0x11, 0xb8, 0x6a, 0x9d, 0x1c, 0x5e, 0x1c, 0x1b, 0xcd, 0xf6, 0xba,
+  0x00, 0x47, 0x45, 0xd1, 0x68, 0x52, 0x5d, 0x56, 0x48, 0xa9, 0xac, 0x42,
+  0xcf, 0x07, 0x7d, 0xf0, 0xce, 0x7b, 0x93, 0x36, 0x93, 0x00, 0x03, 0x38,
+  0x7f, 0xdb, 0x6d, 0xb9, 0x89, 0xd2, 0x09, 0x43, 0xea, 0x10, 0x4d, 0x02,
+  0x6f, 0x29, 0x0a, 0x91, 0x98, 0x4f, 0x95, 0x4a, 0x25, 0x7c, 0x1e, 0x88,
+  0x75, 0x9f, 0x43, 0x58, 0xe7, 0x1a, 0xa7, 0xda, 0xa5, 0x22, 0xfc, 0x4d,
+  0x89, 0x39, 0xe5, 0x5b, 0xad, 0xb0, 0xa7, 0xdb, 0x4e, 0xfd, 0xb8, 0xcb,
+  0xe8, 0x6f, 0xb8, 0x67, 0x48, 0x17, 0xe9, 0xea, 0x05, 0x99, 0x45, 0xd8,
+  0xb3, 0xf7, 0x7a, 0xea, 0x29, 0xbf, 0x9c, 0x02, 0x48, 0x18, 0x6b, 0x76,
+  0x4c, 0x0b, 0x13, 0x90, 0xf8, 0x75, 0xd8, 0x1c, 0x98, 0xca, 0x59, 0xa5,
+  0x5d, 0x41, 0x70, 0xe1, 0x31, 0xb1, 0x25, 0x7d, 0x64, 0x05, 0xc0, 0x97,
+  0x4f, 0x51, 0xdf, 0xee, 0x1f, 0xec, 0x68, 0x5d, 0x1f, 0x36, 0xbc, 0xca,
+  0xcb, 0x66, 0x49, 0x95, 0xdd, 0x8e, 0x7a, 0x31, 0xa4, 0x0f, 0x41, 0xa4,
+  0x22, 0x66, 0x4a, 0x7f, 0xc1, 0x8f, 0x81, 0x7a, 0x53, 0xba, 0x53, 0x48,
+  0x1d, 0x4b, 0xa1, 0x55, 0x4a, 0x4c, 0xd5, 0x75, 0x84, 0x03, 0x7b, 0x90,
+  0xd0, 0x63, 0x5f, 0x35, 0x1e, 0x7c, 0xbb, 0xa3, 0x15, 0x6f, 0xc9, 0x7f,
+  0x43, 0x09, 0xc4, 0x7a, 0xe0, 0xeb, 0xac, 0x55, 0x22, 0xd7, 0x66, 0x0a,
+  0xf5, 0x06, 0x3d, 0x33, 0x17, 0x9b, 0xa8, 0xfa, 0x2e, 0x02, 0x5f, 0x1f,
+  0xa3, 0x55, 0x45, 0x52, 0x9d, 0x53, 0x98, 0x44, 0x76, 0x51, 0x3d, 0x8e,
+  0xfb, 0x56, 0x8a, 0x03, 0x15, 0x2e, 0xa3, 0x0c, 0x20, 0x4b, 0xec, 0x85,
+  0x34, 0x11, 0x80, 0x04, 0x6e, 0xf3, 0x5a, 0x83, 0x8f, 0x66, 0x6f, 0x4f,
+  0x18, 0x13, 0xd1, 0x30, 0x21, 0x41, 0xd6, 0x4c, 0xbc, 0xa9, 0xcc, 0x26,
+  0x37, 0x25, 0x63, 0x6a, 0xcd, 0xa4, 0x79, 0x99, 0x9e, 0xbd, 0xe4, 0x7f,
+  0xcb, 0x1e, 0xf8, 0xd6, 0x25, 0xed, 0xd1, 0x46, 0x18, 0x32, 0x0f, 0xe5,
+  0xd0, 0x6d, 0x88, 0xe3, 0x1f, 0x2e, 0x2f, 0x0e, 0x93, 0x6f, 0x8e, 0x0f,
+  0x5f, 0x1f, 0x5f, 0x8c, 0x3a, 0x97, 0xbe, 0xc0, 0x3f, 0x58, 0x43, 0x23,
+  0x27, 0x30, 0x54, 0x63, 0x25, 0x1e, 0x10, 0xdc, 0xbe, 0x4a, 0x3d, 0xb3,
+  0x79, 0xe8, 0x20, 0x99, 0xf3, 0x41, 0x06, 0x11, 0x47, 0x0b, 0xc0, 0x7b,
+  0x5c, 0x43, 0xd8, 0xd8, 0x36, 0x26, 0x46, 0x42, 0x11, 0x88, 0x41, 0x5d,
+  0xe6, 0x7e, 0xc6, 0x8c, 0xe3, 0xea, 0x73, 0x97, 0xc9, 0xb4, 0xd4, 0x64,
+  0xc0, 0xf6, 0xca, 0x7d, 0xe3, 0xf2, 0xbd, 0x3d, 0xb1, 0x25, 0x97, 0x8c,
+  0x78, 0x0d, 0x7b, 0x3f, 0x0c, 0xcc, 0x77, 0x07, 0x66, 0xf2, 0x07, 0x44,
+  0xe6, 0x78, 0x9f, 0xd5, 0xbd, 0x8e, 0x0b, 0xb0, 0xfd, 0x79, 0xc8, 0xe8,
+  0xeb, 0xf0, 0x24, 0x7d, 0x13, 0x6d, 0x89, 0x4e, 0xd7, 0x8c, 0x4a, 0x2b,
+  0x75, 0x2d, 0x08, 0x5c, 0xaa, 0x9e, 0x92, 0x2c, 0x27, 0x28, 0x48, 0x6f,
+  0x11, 0x80, 0x92, 0x33, 0x33, 0x05, 0x0f, 0x86, 0x8e, 0xc8, 0x10, 0xa0,
+  0xeb, 0x98, 0xb3, 0xc7, 0x97, 0xfa, 0x8c, 0x29, 0x9a, 0xd9, 0x63, 0x66,
+  0xba, 0x25, 0x0f, 0xf9, 0xf7, 0x03, 0x02, 0x20, 0x82, 0xc1, 0xaf, 0x5b,
+  0xf1, 0x51, 0x71, 0x86, 0x42, 0x67, 0xb0, 0xcd, 0x51, 0x1f, 0xec, 0x9e,
+  0x57, 0xe8, 0x3e, 0x7d, 0x52, 0x0b, 0x8b, 0xc8, 0xbb, 0x8c, 0x02, 0x23,
+  0xa3, 0x1e, 0xfe, 0x4d, 0xae, 0x44, 0xca, 0xe5, 0x08, 0x59, 0xb0, 0x79,
+  0xb9, 0x40, 0xfe, 0x66, 0x46, 0x15, 0x34, 0xa0, 0xc7, 0xed, 0x73, 0x59,
+  0xf2, 0x4d, 0x59, 0xe3, 0x2e, 0x08, 0x1f, 0xa7, 0x4b, 0x3e, 0x36, 0xfd,
+  0x78, 0x43, 0xe2, 0x5b, 0x96, 0x24, 0x16, 0xa4, 0xca, 0x10, 0x5f, 0xe7,
+  0x87, 0x97, 0xdf, 0x20, 0xba, 0x8a, 0x2d, 0xfc, 0x1a, 0x8c, 0x29, 0x1a,
+  0x53, 0x0b, 0x53, 0xb2, 0xac, 0x01, 0xc7, 0xfa, 0xaf, 0x12, 0x33, 0xaa,
+  0x3e, 0x89, 0xe8, 0x5d, 0xce, 0x40, 0xa4, 0x19, 0x57, 0x7f, 0x85, 0x8c,
+  0x6e, 0xd5, 0xe6, 0x03, 0xf4, 0xdd, 0xe6, 0xdb, 0x59, 0xbc, 0xe5, 0x26,
+  0x27, 0xc2, 0x6f, 0xf2, 0x98, 0xb0, 0xe9, 0x49, 0x99, 0x23, 0x8b, 0xc7,
+  0x67, 0x1e, 0xc6, 0x2f, 0x28, 0xd3, 0x99, 0x03, 0x50, 0xd3, 0x32, 0xce,
+  0x7b, 0xe8, 0x1d, 0xe9, 0x2f, 0xe7, 0xf7, 0xc3, 0x90, 0x80, 0x27, 0xf9,
+  0x6a, 0xd9, 0xb4, 0xc5, 0x4a, 0x87, 0xff, 0xd8, 0x6a, 0x96, 0x55, 0x59,
+  0x36, 0x5e, 0x1f, 0xa0, 0xfd, 0xa4, 0x8d, 0x9c, 0x68, 0x26, 0xb8, 0xe4,
+  0xbe, 0x50, 0x53, 0x85, 0xe8, 0xdd, 0xbe, 0x62, 0x98, 0x8e, 0xeb, 0x72,
+  0xb6, 0x6c, 0x3c, 0xf4, 0xf5, 0x2f, 0xeb, 0xb3, 0xd7, 0xe9, 0xad, 0x93,
+  0xa1, 0x92, 0x7d, 0x16, 0x4c, 0x51, 0x67, 0x2c, 0x7d, 0xa3, 0x5e, 0x22,
+  0xd8, 0x58, 0x95, 0x45, 0xbb, 0x7c, 0x1c, 0x80, 0xde, 0xdb, 0x1b, 0x1b,
+  0x23, 0x5d, 0x6c, 0xa2, 0x7b, 0x0d, 0x17, 0xfd, 0x7b, 0x68, 0x93, 0xd4,
+  0x07, 0x0e, 0x16, 0x4c, 0xcc, 0x5f, 0x94, 0x04, 0x2e, 0xe3, 0x35, 0x85,
+  0x08, 0xe7, 0x35, 0xce, 0xeb, 0xf6, 0xa0, 0xf0, 0x2b, 0x1b, 0xae, 0xd0,
+  0xfc, 0xb2, 0xcb, 0x52, 0xa9, 0xfc, 0x25, 0x5c, 0xe7, 0x36, 0x44, 0x2b,
+  0x1b, 0x3e, 0xca, 0x30, 0x4d, 0x97, 0x80, 0xd6, 0x14, 0xb6, 0x70, 0x5c,
+  0xea, 0xe4, 0xce, 0xff, 0xd9, 0x49, 0xfa, 0x5c, 0xd4, 0x20, 0x42, 0xda,
+  0xb3, 0x4c, 0xfe, 0x3f, 0x00, 0x5e, 0x09, 0xbd, 0x2f, 0xb5, 0x39, 0x6c,
+  0x13, 0xc8, 0x0e, 0x8d, 0x09, 0x75, 0x53, 0x4d, 0xdc, 0xee, 0x37, 0xda,
+  0x41, 0x76, 0x47, 0xf6, 0x8b, 0xda, 0x08, 0x42, 0x17, 0xc2, 0x65, 0x7d,
+  0x2d, 0x01, 0x13, 0xe8, 0x36, 0xae, 0xac, 0x57, 0x8f, 0x2a, 0x6c, 0x72,
+  0x1d, 0x4a, 0x56, 0xeb, 0x51, 0x85, 0x49, 0xc3, 0xa6, 0x9c, 0x51, 0x6f,
+  0xed, 0xf6, 0x3a, 0xa9, 0x4b, 0xfe, 0x53, 0x93, 0x8e, 0x04, 0xd8, 0x25,
+  0xdb, 0xdf, 0xab, 0xee, 0xe7, 0x95, 0xbf, 0x55, 0xc4, 0x29, 0xa3, 0xe9,
+  0x34, 0x1c, 0xa9, 0x9d, 0x54, 0x2d, 0x80, 0xa2, 0x95, 0xa0, 0xb5, 0x14,
+  0xe6, 0x11, 0x42, 0x92, 0x11, 0x87, 0x31, 0x27, 0x6d, 0x53, 0xdd, 0x46,
+  0xb5, 0x64, 0xf4, 0x4a, 0xd5, 0x34, 0x8e, 0x0d, 0xbf, 0x5a, 0x36, 0x77,
+  0x5f, 0xee, 0x7e, 0x24, 0xe1, 0x23, 0x32, 0x77, 0x97, 0x12, 0x4f, 0x9a,
+  0x53, 0x09, 0x74, 0x48, 0x52, 0xe1, 0x95, 0xc1, 0x1b, 0x3e, 0x20, 0xc5,
+  0x21, 0x36, 0xaf, 0x29, 0xcb, 0x43, 0x5c, 0x52, 0xc2, 0x65, 0x02, 0xff,
+  0xd7, 0x4d, 0x2e, 0xb8, 0x52, 0x9e, 0xf5, 0x76, 0x55, 0x4d, 0x78, 0xf8,
+  0x08, 0x52, 0xe0, 0xa2, 0xaa, 0x16, 0xf8, 0x30, 0x0c, 0x0f, 0xcc, 0xd0,
+  0xb2, 0xaa, 0xca, 0x25, 0x72, 0xe2, 0xe7, 0x94, 0x33, 0x0a, 0xc3, 0x62,
+  0x9d, 0x1f, 0xf9, 0x75, 0xff, 0x93, 0x04, 0x62, 0x2d, 0x12, 0x4e, 0x20,
+  0x11, 0xaa, 0x38, 0xba, 0x50, 0xf6, 0xf7, 0x60, 0x98, 0x32, 0x66, 0x03,
+  0x3c, 0xa5, 0xda, 0x42, 0xab, 0x86, 0x9b, 0x37, 0xf9, 0xdb, 0x7d, 0x99,
+  0x25, 0x9b, 0x71, 0x2f, 0x21, 0x66, 0xd6, 0x0b, 0xbd, 0xb8, 0x53, 0xab,
+  0x78, 0x1c, 0x67, 0x71, 0xd7, 0x4d, 0xb5, 0x9c, 0xb4, 0x28, 0xfa, 0xb0,
+  0x23, 0x5a, 0xa1, 0x79, 0x3b, 0xc7, 0xa5, 0x6f, 0xdb, 0x9f, 0x9c, 0x8b,
+  0x79, 0xcf, 0xd6, 0x07, 0xf5, 0x6c, 0x2b, 0x6d, 0x25, 0xb9, 0xd8, 0x72,
+  0x9f, 0xfe, 0x77, 0xb7, 0xed, 0x2e, 0x1b, 0x9c, 0xdb, 0x8c, 0xfa, 0x4e,
+  0x21, 0x78, 0xca, 0x4e, 0xf0, 0xee, 0x5e, 0x51, 0xc4, 0xa0, 0x78, 0x54,
+  0x89, 0x90, 0x2f, 0x42, 0xad, 0x21, 0x97, 0xe5, 0x86, 0x25, 0x48, 0x34,
+  0x5d, 0x1a, 0x08, 0x54, 0x95, 0xa3, 0xbf, 0x3b, 0x66, 0x22, 0xb5, 0x40,
+  0x90, 0x2d, 0x8e, 0x55, 0x3b, 0x92, 0xc5, 0x0e, 0x4e, 0x15, 0x14, 0x4d,
+  0x56, 0x3f, 0x14, 0xb2, 0x38, 0x99, 0xbf, 0x61, 0xf2, 0x5a, 0x0e, 0x85,
+  0x7c, 0xa1, 0xab, 0x4e, 0x84, 0x77, 0xe3, 0x39, 0x53, 0xa1, 0x04, 0xfb,
+  0xe8, 0xb5, 0xfa, 0x54, 0x21, 0x72, 0x30, 0x37, 0x64, 0xd9, 0xe8, 0x22,
+  0x99, 0x79, 0xd5, 0x4f, 0x98, 0x2e, 0xd0, 0x88, 0x37, 0x67, 0xd9, 0xee,
+  0xa6, 0x57, 0xdd, 0x6b, 0x8b, 0x41, 0xff, 0x25, 0xac, 0x1f, 0x4b, 0x56,
+  0xc8, 0xde, 0x0b, 0x02, 0xb7, 0x6d, 0x47, 0xba, 0x62, 0x9a, 0xf8, 0xa5,
+  0x9d, 0xd9, 0x7b, 0xb1, 0x3f, 0xdc, 0x7b, 0xfe, 0xf9, 0x70, 0x77, 0xb8,
+  0xb7, 0x4b, 0xf2, 0x85, 0xba, 0xe2, 0x75, 0x8e, 0xe7, 0x25, 0xf2, 0xa9,
+  0xd6, 0x7b, 0xe1, 0x37, 0xdf, 0x1d, 0x5f, 0x7e, 0x7f, 0x76, 0xf1, 0x6d,
+  0x72, 0xf2, 0xee, 0xf2, 0xf8, 0xe2, 0xcd, 0xe1, 0xd1, 0x63, 0x09, 0xfb,
+  0x7d, 0xb7, 0xb5, 0x57, 0xc5, 0x3a, 0x73, 0x13, 0x13, 0xfa, 0x06, 0xdd,
+  0x9c, 0x65, 0xcd, 0xcd, 0xee, 0xc1, 0xde, 0x5a, 0x4a, 0xea, 0x88, 0x7b,
+  0xd0, 0xbd, 0xaf, 0x83, 0xda, 0xa3, 0x41, 0xad, 0x6e, 0xc5, 0x52, 0x33,
+  0x8e, 0x18, 0x5b, 0x65, 0x71, 0xb9, 0x10, 0xf3, 0x28, 0x9e, 0x04, 0x46,
+  0x56, 0x11, 0xec, 0x63, 0x26, 0xbf, 0xe5, 0xf4, 0x5a, 0x21, 0x99, 0x11,
+  0x0c, 0xba, 0xc8, 0xdc, 0x0d, 0xae, 0x18, 0xdd, 0x88, 0x3b, 0x85, 0xe9,
+  0x6c, 0xa7, 0x50, 0xf1, 0x54, 0x2a, 0x4b, 0xee, 0x1a, 0xed, 0x16, 0xa9,
+  0x6f, 0xca, 0x84, 0x83, 0x53, 0x9b, 0x27, 0x62, 0x59, 0x08, 0x36, 0x12,
+  0x4f, 0x4f, 0x47, 0x5f, 0xdb, 0x45, 0xbf, 0x7d, 0xf8, 0x6c, 0x87, 0x7b,
+  0xb5, 0x56, 0x5c, 0x33, 0x06, 0xd6, 0x72, 0x8d, 0x1e, 0x49, 0x47, 0x70,
+  0x1a, 0xbc, 0xde, 0xf0, 0xa7, 0xa0, 0x50, 0x11, 0x49, 0x1a, 0xe8, 0x21,
+  0x5b, 0x0c, 0xc9, 0x7c, 0x47, 0x21, 0x77, 0x82, 0xf5, 0x3f, 0x2d, 0x6b,
+  0x41, 0xad, 0xd7, 0x2d, 0x92, 0xc2, 0x84, 0x0b, 0x5a, 0xf9, 0xaf, 0xb3,
+  0xaa, 0x0d, 0x74, 0xe6, 0xb4, 0x4a, 0xef, 0x50, 0x95, 0x25, 0x77, 0x94,
+  0xa3, 0x1b, 0xed, 0xa2, 0x5c, 0xa4, 0x38, 0xb9, 0x39, 0x4f, 0xce, 0x8f,
+  0xdf, 0x0e, 0xb4, 0x9c, 0xb0, 0xf9, 0x3b, 0x3b, 0xa3, 0x94, 0x5f, 0x92,
+  0x73, 0x7b, 0x16, 0x59, 0xa1, 0x58, 0x1a, 0xc8, 0x44, 0x01, 0xff, 0xf8,
+  0x03, 0xa0, 0x43, 0x63, 0x19, 0x28, 0x05, 0x32, 0xaa, 0x98, 0x4b, 0xce,
+  0x2d, 0xec, 0xd2, 0x72, 0xd2, 0x7a, 0x0a, 0x60, 0x39, 0xd9, 0xb2, 0x20,
+  0x5d, 0xfa, 0x1e, 0x90, 0xa8, 0x40, 0x0d, 0x58, 0x98, 0x40, 0xa9, 0x99,
+  0xd7, 0xe7, 0xdf, 0x1e, 0x8d, 0xfe, 0xb0, 0xb7, 0x2f, 0xdd, 0xd9, 0x56,
+  0xab, 0x80, 0x64, 0x55, 0x37, 0x29, 0x1f, 0xe2, 0xda, 0xef, 0xa3, 0xa6,
+  0x58, 0xe3, 0x80, 0x63, 0x31, 0xb6, 0x6c, 0x62, 0xd0, 0x76, 0x2b, 0x33,
+  0x68, 0x83, 0x4b, 0xd7, 0xab, 0x8a, 0x69, 0xcb, 0xfd, 0x52, 0x48, 0x04,
+  0x55, 0xa1, 0xa4, 0x2e, 0x53, 0x63, 0xa1, 0x7e, 0x69, 0xa1, 0x3f, 0xe2,
+  0x96, 0xa5, 0x35, 0xe4, 0x90, 0x3b, 0x38, 0x4b, 0x77, 0xcd, 0x69, 0xbe,
+  0xdd, 0x6f, 0x89, 0x27, 0x56, 0x6e, 0x76, 0x25, 0x04, 0x72, 0x9f, 0xc1,
+  0x01, 0x10, 0xf4, 0xfa, 0x54, 0x2b, 0xbf, 0x15, 0xae, 0x0e, 0x0a, 0x3d,
+  0x7d, 0x66, 0x16, 0xca, 0x9c, 0x2c, 0xe6, 0x6d, 0x20, 0xa1, 0x50, 0xce,
+  0xc8, 0x74, 0xb1, 0x8f, 0xbc, 0xae, 0xa8, 0xe0, 0xcc, 0x82, 0x71, 0xa4,
+  0xef, 0x86, 0xc9, 0x37, 0x59, 0x41, 0x89, 0xf3, 0x84, 0xb8, 0xd3, 0xdc,
+  0x2b, 0xe0, 0x02, 0xa9, 0xf4, 0x24, 0x4a, 0xf1, 0x9d, 0x66, 0xa9, 0x70,
+  0x72, 0x1a, 0x59, 0x57, 0xb3, 0x85, 0xab, 0x65, 0xa8, 0x52, 0x42, 0xe7,
+  0x09, 0x81, 0xa8, 0x25, 0xbb, 0x60, 0x92, 0x68, 0x6a, 0x60, 0xab, 0x4d,
+  0xac, 0x89, 0x92, 0x08, 0x68, 0x4e, 0x8e, 0x39, 0x62, 0x4d, 0xe2, 0x55,
+  0xbe, 0x01, 0x9d, 0x36, 0x79, 0x0b, 0xd9, 0xe2, 0x72, 0x42, 0x65, 0x5a,
+  0xdd, 0x90, 0xeb, 0xa3, 0x36, 0xd7, 0x4d, 0x5a, 0x4c, 0xee, 0x87, 0x53,
+  0xa3, 0xcb, 0x92, 0xf3, 0x6c, 0xb8, 0xfc, 0xb8, 0xe3, 0x1d, 0x53, 0x12,
+  0xf9, 0x37, 0xcc, 0x11, 0xd0, 0x76, 0x7c, 0x6b, 0x99, 0xe3, 0x90, 0x3a,
+  0x2c, 0x6d, 0x9d, 0x09, 0xda, 0x12, 0x9a, 0xed, 0xcf, 0xc7, 0x73, 0x25,
+  0xc9, 0xd6, 0x71, 0x62, 0x19, 0x8e, 0xa9, 0x85, 0xe1, 0x22, 0x9b, 0x1f,
+  0xd8, 0x6c, 0x64, 0x95, 0x0f, 0x52, 0x55, 0xc3, 0x1a, 0x16, 0x9e, 0x93,
+  0xb6, 0xc8, 0xae, 0x67, 0xa2, 0x50, 0xf8, 0xa6, 0x8b, 0x6d, 0x22, 0x92,
+  0x02, 0xc2, 0x06, 0x8f, 0x14, 0x49, 0x82, 0xc6, 0x6e, 0xf6, 0x61, 0x23,
+  0x90, 0x5a, 0x7e, 0xb8, 0x22, 0x85, 0xde, 0x35, 0x22, 0xcc, 0x21, 0x20,
+  0x5b, 0x46, 0x05, 0x79, 0x76, 0xf1, 0x28, 0x12, 0x49, 0xc2, 0x4f, 0x44,
+  0x04, 0x8b, 0x1d, 0x02, 0x1a, 0x77, 0x41, 0x45, 0x23, 0xf8, 0xa9, 0xa5,
+  0x84, 0xf9, 0xac, 0x98, 0x5f, 0xdf, 0x3e, 0x21, 0x8f, 0xf7, 0xe5, 0xe9,
+  0x48, 0xa3, 0x22, 0x45, 0x76, 0xe7, 0x6d, 0x2d, 0x2e, 0x3d, 0x20, 0xfb,
+  0x8f, 0x1c, 0x40, 0x4c, 0xa9, 0x0c, 0xb6, 0x03, 0xf4, 0x84, 0xa5, 0x82,
+  0x0b, 0x93, 0xb9, 0xe4, 0x07, 0x9d, 0x04, 0x81, 0x11, 0x53, 0x57, 0xb4,
+  0xe2, 0x19, 0x2b, 0x43, 0x96, 0xe9, 0x85, 0xb8, 0xfb, 0x8c, 0xb2, 0xf4,
+  0xa4, 0x9f, 0x0c, 0xf6, 0xc1, 0x9f, 0xb3, 0xd7, 0x9e, 0xc4, 0xb4, 0x61,
+  0x9a, 0x40, 0x6a, 0xc3, 0xb4, 0xa4, 0xad, 0x88, 0x38, 0xd8, 0x92, 0x2d,
+  0x7d, 0x6b, 0xde, 0xa7, 0x3f, 0xf6, 0x65, 0x40, 0xb7, 0x7b, 0x40, 0x6c,
+  0x33, 0x6f, 0xe5, 0xec, 0x3e, 0x54, 0x19, 0xf6, 0xd7, 0xae, 0x2a, 0x72,
+  0x23, 0xee, 0x72, 0x4b, 0x20, 0xcd, 0x45, 0x13, 0xe0, 0x0a, 0x15, 0x4a,
+  0x50, 0xed, 0x80, 0x99, 0x42, 0x71, 0x72, 0x17, 0xc9, 0xed, 0xbe, 0xc6,
+  0x9a, 0xe9, 0x37, 0x3a, 0x6f, 0xec, 0xac, 0x77, 0x42, 0x24, 0x48, 0x5b,
+  0x24, 0x94, 0x9b, 0xb7, 0x6b, 0x29, 0xeb, 0xc9, 0xec, 0x59, 0x23, 0x45,
+  0x5a, 0x52, 0xa6, 0x2c, 0xc4, 0xad, 0xc0, 0x29, 0xef, 0xcc, 0x47, 0x4f,
+  0x06, 0xbc, 0x07, 0x73, 0x02, 0xf2, 0xdb, 0x43, 0x44, 0x9e, 0x14, 0x36,
+  0x51, 0x42, 0x5c, 0xf9, 0xa0, 0xe8, 0xc3, 0xf2, 0xdf, 0xe4, 0xec, 0x98,
+  0x00, 0xd6, 0x14, 0xd7, 0xb9, 0x39, 0xf9, 0x9b, 0x89, 0x39, 0x4c, 0x4b,
+  0x92, 0xf8, 0x8d, 0x2d, 0xbf, 0x36, 0x62, 0x6a, 0xcf, 0x4d, 0x5f, 0xcc,
+  0x0d, 0xbe, 0xa0, 0xa1, 0xd4, 0x9b, 0x6e, 0xec, 0x42, 0x71, 0xde, 0x1e,
+  0x88, 0xc4, 0x39, 0xb4, 0xe0, 0xd8, 0x79, 0xa5, 0x65, 0xd5, 0x37, 0x8f,
+  0x3f, 0x91, 0x8e, 0xb3, 0x29, 0x5f, 0xe2, 0x5f, 0x73, 0x4e, 0x3f, 0xe6,
+  0xe8, 0xfc, 0xe4, 0x1d, 0x57, 0x0a, 0xb7, 0x67, 0x21, 0x23, 0xea, 0xc5,
+  0x0d, 0x2e, 0x72, 0x8f, 0xfe, 0xa4, 0xca, 0x01, 0xcf, 0x8e, 0x23, 0xda,
+  0x33, 0xb4, 0xc7, 0x73, 0xf9, 0xd6, 0xc5, 0x92, 0xbf, 0xbe, 0x49, 0xf7,
+  0x5c, 0x5d, 0xcf, 0x36, 0x3b, 0xd5, 0x6f, 0xed, 0x9a, 0x74, 0x2e, 0x14,
+  0xeb, 0x91, 0x9a, 0x4c, 0x9d, 0x82, 0x9f, 0x24, 0xd2, 0x4a, 0x4b, 0xce,
+  0xf5, 0x3b, 0x99, 0x8e, 0xbe, 0x2b, 0xfc, 0x0f, 0xc9, 0x70, 0xc7, 0x7c,
+  0xb0, 0xde, 0xd1, 0x17, 0x17, 0x1f, 0x27, 0xb5, 0xb9, 0xe1, 0x28, 0xad,
+  0xf7, 0x47, 0x18, 0xe4, 0x58, 0x0e, 0xd3, 0xe3, 0xe9, 0xcf, 0xc9, 0x60,
+  0x32, 0xc3, 0xf8, 0x12, 0x94, 0xda, 0xfe, 0xd1, 0xac, 0x3c, 0x3d, 0xf1,
+  0xb3, 0x5d, 0xc3, 0x37, 0x39, 0x9d, 0xb7, 0x4f, 0x7d, 0x1d, 0xfa, 0x19,
+  0x1b, 0x0c, 0xcc, 0x6f, 0x9b, 0x1c, 0x4e, 0x6f, 0x29, 0xe9, 0x6e, 0x2a,
+  0xff, 0xa4, 0xf1, 0x1c, 0x17, 0xa8, 0x50, 0x8a, 0x91, 0xa6, 0x63, 0x2e,
+  0x4a, 0xfe, 0x5d, 0x6e, 0x8c, 0x8e, 0xa3, 0x8e, 0x7e, 0x41, 0xf9, 0x7f,
+  0xd4, 0x41, 0xbc, 0xe5, 0xfd, 0x52, 0x93, 0x39, 0xfa, 0x92, 0xb3, 0xe0,
+  0xa0, 0xa5, 0x24, 0x9d, 0x69, 0xe9, 0x86, 0xc9, 0x57, 0x14, 0xe3, 0xac,
+  0x32, 0x8f, 0xfd, 0x55, 0x2e, 0x3e, 0xae, 0xe4, 0x47, 0x8b, 0x91, 0x32,
+  0xff, 0xc4, 0xd0, 0x8e, 0x24, 0xc8, 0x81, 0xb1, 0x63, 0xb2, 0xbf, 0x69,
+  0x0f, 0x0e, 0xfd, 0xd2, 0x94, 0x76, 0x33, 0x14, 0xcd, 0x97, 0x48, 0x82,
+  0xa1, 0x78, 0xbc, 0x94, 0xdc, 0x43, 0xbe, 0x30, 0xa7, 0x99, 0x26, 0xf6,
+  0x97, 0x3e, 0x9b, 0x8a, 0x7a, 0x8e, 0xd1, 0x94, 0x6a, 0x04, 0x76, 0x4b,
+  0xe0, 0x0e, 0x77, 0xbd, 0x3e, 0xba, 0x31, 0xa2, 0x39, 0xb3, 0x5d, 0x1d,
+  0xb1, 0x4b, 0x4f, 0xbb, 0x38, 0xa2, 0x3b, 0x4a, 0x17, 0xc1, 0xfe, 0x52,
+  0xb3, 0x23, 0xa1, 0x85, 0xee, 0xb0, 0xec, 0xb2, 0x7b, 0x97, 0x67, 0xb7,
+  0x3d, 0x04, 0x4a, 0x6a, 0x1c, 0xbd, 0x7f, 0x4b, 0xa5, 0x4d, 0x50, 0xb8,
+  0xfa, 0xf2, 0xe2, 0xf0, 0xdd, 0xe8, 0x0d, 0xbb, 0xc6, 0x2f, 0x4b, 0x57,
+  0x12, 0x5b, 0xfc, 0x41, 0x36, 0x7e, 0x6c, 0x69, 0xe2, 0xee, 0xb8, 0xde,
+  0x86, 0xe2, 0xe9, 0xa5, 0x58, 0x76, 0xbf, 0xcb, 0xb7, 0xcf, 0xc5, 0xb6,
+  0x69, 0x36, 0xa8, 0x6b, 0x5b, 0xa3, 0x6d, 0xab, 0x08, 0xd5, 0x7e, 0x51,
+  0x36, 0x57, 0xb0, 0x5e, 0x99, 0xa1, 0xe5, 0x21, 0x9a, 0x96, 0x23, 0xed,
+  0x8c, 0xfe, 0x94, 0xef, 0xde, 0x95, 0x64, 0xa4, 0x47, 0xc6, 0x54, 0x1c,
+  0x48, 0xa5, 0x1a, 0xaf, 0x04, 0x9d, 0x75, 0xa7, 0xf2, 0xdd, 0x2b, 0x54,
+  0x7e, 0xb6, 0x71, 0x3f, 0xef, 0x53, 0x9b, 0xde, 0xfa, 0x8f, 0xbd, 0xed,
+  0x78, 0xf3, 0x97, 0xbf, 0xb4, 0xf9, 0x78, 0xdf, 0xd5, 0x36, 0x73, 0x29,
+  0x45, 0x5b, 0xff, 0xb1, 0xbf, 0xbd, 0x76, 0x44, 0x7e, 0x56, 0xa4, 0xfb,
+  0xa6, 0x79, 0x83, 0x3a, 0x9b, 0xbc, 0xe2, 0x63, 0x66, 0x75, 0x26, 0x8b,
+  0xd0, 0xf1, 0xf8, 0x86, 0x5b, 0x84, 0x1d, 0x04, 0xdb, 0xb6, 0x9a, 0xba,
+  0x0b, 0xbc, 0x49, 0x76, 0xc9, 0xc9, 0xff, 0x73, 0xec, 0xd3, 0x48, 0x16,
+  0x9b, 0x8d, 0x7f, 0x45, 0x11, 0x3b, 0x40, 0x5d, 0x0e, 0xf1, 0xed, 0xfd,
+  0x35, 0xdf, 0x76, 0xa3, 0xf3, 0xdc, 0x12, 0x14, 0xc5, 0x26, 0x18, 0x9c,
+  0xb2, 0x61, 0xcb, 0x77, 0x36, 0x5c, 0xa1, 0xf5, 0xd5, 0xdf, 0xbb, 0x3c,
+  0x79, 0x7b, 0x4c, 0xac, 0xd9, 0xaf, 0x4f, 0x88, 0x7c, 0x6e, 0x24, 0xf4,
+  0x8f, 0xea, 0x81, 0xb0, 0x8c, 0xbc, 0x7e, 0xb5, 0x14, 0x0e, 0xef, 0x5a,
+  0xb4, 0x99, 0x95, 0x1c, 0x76, 0x25, 0xe8, 0xd3, 0x82, 0x81, 0xae, 0x35,
+  0xd3, 0xf2, 0xe4, 0x6a, 0xf0, 0xb6, 0x9c, 0xc2, 0x4a, 0x1e, 0x8c, 0x00,
+  0x15, 0x34, 0x6f, 0x99, 0x1f, 0xbe, 0x2f, 0xe6, 0xad, 0x1f, 0x0f, 0x23,
+  0x99, 0xba, 0x1b, 0xab, 0x8a, 0xf2, 0xfc, 0x7d, 0x67, 0x30, 0xa0, 0xce,
+  0x0c, 0x18, 0xd6, 0x25, 0xc1, 0x9d, 0x16, 0x3f, 0x87, 0x8a, 0x16, 0x33,
+  0x41, 0xf9, 0xec, 0x9e, 0x81, 0x08, 0xa9, 0x83, 0x8f, 0xb9, 0xec, 0xcd,
+  0x6b, 0xca, 0x20, 0x73, 0x2e, 0x3e, 0x76, 0xe2, 0x6d, 0xf8, 0xe4, 0xa5,
+  0x30, 0xa4, 0xb2, 0x3b, 0x87, 0x7f, 0x92, 0xaa, 0xcd, 0xe5, 0xe2, 0x1e,
+  0xa3, 0xbc, 0x6b, 0x41, 0x2b, 0xa2, 0xf1, 0xd5, 0xbf, 0xf3, 0x3b, 0xad,
+  0x32, 0x54, 0xc2, 0x31, 0xed, 0xed, 0x40, 0xf9, 0x89, 0x54, 0x6d, 0x3a,
+  0xab, 0xbc, 0xeb, 0x4a, 0xba, 0xad, 0xd5, 0xed, 0x3c, 0x62, 0x53, 0x8f,
+  0x87, 0xb5, 0xdd, 0x4f, 0x9f, 0x04, 0xb6, 0xa4, 0xd4, 0xd7, 0xd7, 0xa5,
+  0x0d, 0x8e, 0x19, 0xb1, 0xb3, 0x68, 0xd7, 0x45, 0xce, 0x12, 0x4d, 0xf2,
+  0xe6, 0x1c, 0xfe, 0xcd, 0xc1, 0x26, 0xea, 0x32, 0xe4, 0x45, 0x64, 0x30,
+  0x83, 0x5f, 0x3e, 0x9a, 0x20, 0xf4, 0x9a, 0xf4, 0xae, 0x88, 0x08, 0x83,
+  0xe2, 0x58, 0x3d, 0xee, 0x00, 0xf3, 0xc4, 0xf0, 0xe6, 0x32, 0x17, 0x04,
+  0xc9, 0x35, 0x35, 0x24, 0xd9, 0xa8, 0xb6, 0xc8, 0x58, 0xeb, 0x24, 0x67,
+  0xaf, 0x24, 0x09, 0xd2, 0xe5, 0x62, 0x0a, 0x50, 0x06, 0xc3, 0x51, 0xff,
+  0x8b, 0x48, 0xb1, 0xab, 0xfb, 0x64, 0x6f, 0xbf, 0x9f, 0xec, 0xef, 0xee,
+  0xed, 0x47, 0xc6, 0xd0, 0xfb, 0x2f, 0x02, 0x45, 0xed, 0xe3, 0xd7, 0xbd,
+  0xc7, 0x8e, 0xc2, 0xe5, 0x33, 0xe0, 0x26, 0x91, 0xcc, 0x5f, 0x23, 0x7c,
+  0x28, 0x3e, 0x0b, 0x22, 0x66, 0x14, 0x4b, 0x06, 0x9d, 0x1d, 0xae, 0x2d,
+  0x76, 0x12, 0x6a, 0x8d, 0x4d, 0x5b, 0x3a, 0x6c, 0x8a, 0x4a, 0x3a, 0x5c,
+  0xaf, 0x16, 0xc8, 0x17, 0xeb, 0x29, 0x4d, 0x2b, 0x54, 0x10, 0x6d, 0xaf,
+  0x51, 0xde, 0xe8, 0xb2, 0x10, 0xb4, 0x86, 0xd6, 0xc6, 0xec, 0xf7, 0xd7,
+  0x27, 0x47, 0x97, 0xca, 0x77, 0x78, 0x45, 0xca, 0x53, 0x75, 0xff, 0xb8,
+  0x62, 0x8c, 0x6b, 0x9f, 0x99, 0x1e, 0xdc, 0x64, 0x46, 0x8d, 0x2e, 0xc6,
+  0xcb, 0xeb, 0x83, 0xbf, 0xa6, 0xd5, 0x75, 0x59, 0x3c, 0xf4, 0xfc, 0x14,
+  0x09, 0x65, 0x07, 0x46, 0x42, 0xed, 0xbd, 0xd8, 0x7b, 0x82, 0xfc, 0xef,
+  0x59, 0x8e, 0x82, 0x40, 0x24, 0x20, 0x36, 0xe7, 0x9b, 0x4c, 0xb0, 0x81,
+  0x34, 0x09, 0xcb, 0xaa, 0x51, 0x4c, 0x37, 0xf9, 0xba, 0x4f, 0xfd, 0x67,
+  0xa7, 0xf2, 0x2c, 0xa7, 0x9e, 0x6f, 0x4a, 0xae, 0xc2, 0x26, 0xa5, 0x69,
+  0x2e, 0x17, 0x9b, 0x6d, 0x8a, 0xf8, 0x07, 0xc6, 0x4a, 0x9f, 0xb0, 0xb5,
+  0x27, 0x8f, 0x2c, 0xf1, 0x3d, 0x32, 0x88, 0xaa, 0x2c, 0xfd, 0xe8, 0xaa,
+  0x27, 0x3b, 0xf6, 0x0d, 0x0d, 0x79, 0x5c, 0xbc, 0x39, 0x62, 0x06, 0x53,
+  0xcd, 0x97, 0xc2, 0x54, 0x27, 0xd6, 0x35, 0xb5, 0x4d, 0xbd, 0x7c, 0xe0,
+  0xfb, 0x94, 0xdb, 0x70, 0x30, 0x1d, 0x3f, 0xe2, 0x21, 0x73, 0xee, 0x98,
+  0x2c, 0xee, 0xb0, 0x5d, 0x7a, 0x87, 0x0c, 0x35, 0xd4, 0x0f, 0xd1, 0x32,
+  0xc9, 0x5b, 0x5c, 0x89, 0x96, 0x23, 0x0e, 0xd4, 0x35, 0x2d, 0x40, 0xad,
+  0xde, 0x1d, 0xd3, 0x6f, 0xaa, 0xf2, 0xfa, 0xfa, 0xf0, 0xdc, 0x33, 0x74,
+  0x61, 0x48, 0x3a, 0xa7, 0x1e, 0x3d, 0x47, 0x86, 0x0e, 0x2a, 0xb1, 0x4b,
+  0x35, 0xa6, 0xbe, 0x33, 0x51, 0x1a, 0xc8, 0x49, 0xd2, 0x8d, 0x00, 0x90,
+  0x2f, 0xe5, 0x3e, 0x81, 0xff, 0x09, 0xd5, 0x0c, 0x66, 0xd3, 0x14, 0x81,
+  0x50, 0xb9, 0x85, 0xa0, 0x73, 0xa1, 0xad, 0x5c, 0xd0, 0x50, 0x66, 0x6d,
+  0x3e, 0x25, 0x92, 0xc4, 0x21, 0xd9, 0x2a, 0x52, 0x6f, 0x04, 0x8f, 0x51,
+  0x56, 0xf2, 0xbd, 0x0e, 0x80, 0xe5, 0xb3, 0xe9, 0x7c, 0x5a, 0x7f, 0x34,
+  0xa2, 0x94, 0x03, 0xf8, 0xe6, 0xeb, 0xb9, 0x84, 0xc0, 0xc9, 0xe9, 0x93,
+  0x33, 0x90, 0x86, 0xdc, 0x4f, 0xe0, 0x41, 0x6a, 0x2d, 0x18, 0x5f, 0x41,
+  0x64, 0x71, 0xce, 0xea, 0x8c, 0x59, 0x0b, 0x41, 0xa3, 0x43, 0x11, 0x33,
+  0x5a, 0x30, 0x58, 0x1a, 0x8a, 0x44, 0x85, 0x10, 0xa0, 0xb5, 0xdd, 0xdf,
+  0x7f, 0xf6, 0xac, 0x9f, 0xf4, 0xc8, 0x5b, 0xa7, 0x05, 0xe9, 0x69, 0x6b,
+  0x99, 0x1d, 0xda, 0x8b, 0xd6, 0xa5, 0xdd, 0xa9, 0xae, 0x26, 0xf4, 0x7f,
+  0xf4, 0x9e, 0x96, 0x63, 0xbc, 0x94, 0xf4, 0x15, 0xea, 0x26, 0x42, 0x93,
+  0x96, 0x64, 0x86, 0xd7, 0x87, 0x7e, 0x77, 0x62, 0x1d, 0x32, 0x14, 0x7d,
+  0x59, 0x64, 0xe5, 0x42, 0xc3, 0xac, 0x73, 0x29, 0xb4, 0x81, 0xef, 0x7b,
+  0xb1, 0x29, 0x04, 0xc6, 0x19, 0x57, 0x26, 0x6c, 0x02, 0xf5, 0x72, 0x3c,
+  0x90, 0xb4, 0x5a, 0x36, 0xcf, 0x72, 0x73, 0x04, 0xcc, 0x3f, 0x67, 0xea,
+  0xf7, 0x0e, 0x44, 0xdb, 0x57, 0x49, 0x4f, 0x16, 0x89, 0xfe, 0x18, 0x22,
+  0x4a, 0x9a, 0x4d, 0x68, 0x18, 0xe5, 0x2b, 0xf9, 0xc7, 0x7f, 0xfe, 0xa7,
+  0x69, 0xf6, 0x3f, 0xa9, 0x95, 0x57, 0xff, 0x51, 0x37, 0x37, 0xde, 0x33,
+  0x3d, 0xd9, 0x39, 0x27, 0x2e, 0x46, 0x0c, 0xdc, 0x17, 0xf8, 0x5a, 0x91,
+  0xfd, 0xf5, 0xf6, 0x54, 0x44, 0x5b, 0xdf, 0x1b, 0x5f, 0x8e, 0xbc, 0x3c,
+  0xf6, 0x36, 0x5a, 0xd8, 0xc5, 0x57, 0x14, 0xbf, 0xcd, 0x28, 0x9f, 0xdb,
+  0x2c, 0x02, 0xe8, 0xf8, 0xb6, 0xf5, 0xae, 0x3e, 0x7e, 0xf7, 0xdd, 0xc9,
+  0xc5, 0xd9, 0xbb, 0xb7, 0xc7, 0xef, 0x2e, 0x93, 0xef, 0x0e, 0x2f, 0x4e,
+  0x0e, 0xbf, 0x3a, 0x95, 0xb4, 0x71, 0x1a, 0x02, 0xa1, 0x65, 0x58, 0x89,
+  0xed, 0xd0, 0xa9, 0x7a, 0x19, 0x3d, 0xd1, 0x22, 0x1c, 0x9d, 0xfa, 0xc2,
+  0x1f, 0x84, 0x0b, 0x1c, 0x2a, 0xfd, 0x07, 0xd4, 0x13, 0xea, 0x93, 0x16,
+  0xf7, 0x41, 0x4b, 0x0b, 0x91, 0x15, 0x72, 0xef, 0x25, 0x22, 0x13, 0x90,
+  0x87, 0xb6, 0x94, 0x1e, 0x74, 0x57, 0x54, 0xcf, 0x56, 0xa9, 0xf8, 0x9a,
+  0x73, 0xd9, 0xb5, 0x64, 0x87, 0xbe, 0x8a, 0x35, 0x64, 0x29, 0xed, 0xfa,
+  0x70, 0x78, 0x7a, 0xea, 0x3e, 0xb5, 0xbe, 0x9a, 0x8b, 0xf0, 0x18, 0x71,
+  0x16, 0x14, 0x1a, 0xa5, 0x08, 0xdb, 0x75, 0xe9, 0x88, 0xcd, 0x8b, 0x7b,
+  0x9f, 0xc3, 0x9c, 0x3e, 0x66, 0x96, 0x63, 0x8b, 0x09, 0x28, 0x28, 0xdc,
+  0x6a, 0xac, 0xb1, 0xbc, 0xfe, 0xd8, 0x4f, 0x36, 0xff, 0x63, 0x53, 0x4a,
+  0x72, 0x83, 0x75, 0x97, 0x6b, 0xc5, 0x6c, 0xbb, 0x4e, 0xbd, 0x3b, 0x73,
+  0x7d, 0x92, 0x08, 0xa2, 0xed, 0x80, 0x7d, 0xd1, 0xc5, 0x7f, 0x6b, 0x55,
+  0x0c, 0x00, 0xbc, 0x74, 0x8f, 0x4b, 0x41, 0x05, 0x9b, 0x57, 0x2f, 0x7b,
+  0x94, 0x22, 0x44, 0xd1, 0x77, 0x61, 0xfe, 0xa4, 0x13, 0x8f, 0x5c, 0x19,
+  0x63, 0x2d, 0xc8, 0x67, 0x60, 0x8b, 0x5c, 0xa9, 0x5b, 0xcd, 0x4c, 0x35,
+  0x39, 0xc7, 0x24, 0x2e, 0xb7, 0xac, 0x45, 0x14, 0x61, 0x57, 0x7d, 0xda,
+  0xd1, 0x9a, 0x31, 0x08, 0xd6, 0x11, 0xb0, 0xbe, 0xca, 0xa7, 0x42, 0xd6,
+  0x17, 0xdd, 0x15, 0x43, 0xc4, 0x78, 0x2e, 0x8e, 0xc0, 0x6d, 0x5e, 0x50,
+  0x75, 0x43, 0x57, 0x93, 0x02, 0x20, 0x5c, 0x63, 0xc5, 0x56, 0x94, 0xd9,
+  0x56, 0xc8, 0x6d, 0x0e, 0x60, 0x2b, 0x94, 0xdd, 0xf4, 0xba, 0x54, 0x45,
+  0x36, 0xb5, 0xd1, 0x67, 0x5b, 0xb9, 0xcb, 0x53, 0x8e, 0x2d, 0x03, 0x97,
+  0xf5, 0xfd, 0x21, 0x4e, 0xad, 0x9e, 0x76, 0xc2, 0x69, 0xd1, 0x92, 0x6b,
+  0x25, 0xe6, 0xda, 0xcb, 0x71, 0x76, 0x69, 0x00, 0x24, 0x4b, 0x18, 0xed,
+  0xae, 0x94, 0x58, 0xa0, 0x21, 0xd3, 0x9c, 0x68, 0x20, 0x06, 0xd1, 0x2d,
+  0x7a, 0x10, 0x4d, 0x0a, 0xf8, 0x13, 0x4d, 0xaa, 0x13, 0xd8, 0x9c, 0x9e,
+  0x19, 0x65, 0x62, 0xa9, 0x24, 0x4a, 0x93, 0x71, 0x7e, 0xcd, 0xb9, 0xf5,
+  0x94, 0xc8, 0x4d, 0xbb, 0x04, 0x54, 0x69, 0xc6, 0x42, 0xa6, 0xa5, 0x02,
+  0x11, 0x1a, 0x94, 0xe0, 0x9b, 0x72, 0xe6, 0xb3, 0x75, 0xe9, 0x48, 0x6a,
+  0xa9, 0x49, 0xa6, 0x3e, 0x44, 0xc4, 0x10, 0x96, 0x34, 0x8f, 0x0a, 0xeb,
+  0x12, 0x9a, 0x6f, 0x01, 0xb9, 0x91, 0x73, 0x1a, 0x9c, 0x83, 0x05, 0x52,
+  0x6a, 0x34, 0x27, 0x19, 0xf3, 0xa0, 0x00, 0x60, 0x92, 0x16, 0x70, 0x48,
+  0x51, 0xbd, 0xc4, 0x2d, 0xcb, 0xd3, 0x4d, 0xad, 0x4c, 0x98, 0xe9, 0x94,
+  0x36, 0x3d, 0x87, 0x66, 0xdb, 0x85, 0x75, 0x64, 0xb1, 0x84, 0x83, 0xca,
+  0xec, 0x09, 0xea, 0xb4, 0x99, 0xa9, 0x2d, 0x4f, 0xf0, 0x14, 0x66, 0x8b,
+  0xf0, 0x63, 0x6c, 0x89, 0xc9, 0xbf, 0x06, 0xb6, 0x26, 0x98, 0x04, 0x70,
+  0xb7, 0x5d, 0x00, 0x9f, 0xaf, 0x53, 0xda, 0xad, 0x13, 0xa9, 0xca, 0x88,
+  0x50, 0x37, 0x95, 0x94, 0x04, 0xb1, 0x52, 0xcb, 0x89, 0x97, 0x68, 0xe2,
+  0xca, 0x6c, 0xe6, 0x11, 0x75, 0xb3, 0x5d, 0x9f, 0x06, 0x97, 0x38, 0x45,
+  0x59, 0x86, 0x2c, 0x01, 0x18, 0x42, 0xc3, 0xa4, 0xbe, 0xde, 0x40, 0x04,
+  0x9c, 0x4d, 0x6a, 0x4e, 0xc7, 0x37, 0xe8, 0x09, 0x34, 0x0d, 0x33, 0xfb,
+  0x17, 0x93, 0xd4, 0xa5, 0xc8, 0xd3, 0x39, 0x2b, 0x61, 0x6e, 0xf7, 0xcd,
+  0xef, 0x19, 0xbe, 0xb7, 0xb1, 0x71, 0xf4, 0x7e, 0x74, 0x79, 0xf6, 0x36,
+  0x39, 0x7b, 0x7f, 0x79, 0xfe, 0xfe, 0x52, 0x6e, 0xae, 0x31, 0x83, 0x9f,
+  0x19, 0x02, 0xc0, 0xb7, 0xa9, 0x2e, 0xe6, 0x5c, 0x02, 0xe5, 0xc0, 0x6a,
+  0x94, 0xa0, 0xe7, 0xf3, 0x98, 0x79, 0x6c, 0x72, 0x13, 0x38, 0xab, 0x98,
+  0xf7, 0x17, 0x53, 0x7e, 0x67, 0xa6, 0x1c, 0x89, 0xa9, 0xf0, 0x88, 0x69,
+  0xae, 0x14, 0xec, 0x07, 0x3d, 0x6b, 0xed, 0x9a, 0x2f, 0xf7, 0x6d, 0x7b,
+  0x00, 0x51, 0xee, 0x36, 0x13, 0x92, 0x5f, 0x7a, 0x92, 0x9d, 0x24, 0xce,
+  0x87, 0xe2, 0x63, 0x23, 0xa5, 0x70, 0xa5, 0x7a, 0x72, 0x15, 0x9e, 0x0a,
+  0xcc, 0x4e, 0x3b, 0x43, 0xcf, 0x4f, 0x14, 0x6c, 0x4a, 0x33, 0xc2, 0x1b,
+  0x0b, 0x2d, 0x27, 0x38, 0x0e, 0x20, 0x75, 0x8c, 0x44, 0x20, 0xec, 0x1a,
+  0xab, 0xde, 0xc6, 0xa0, 0x22, 0xdf, 0x7f, 0x70, 0xcb, 0xde, 0x25, 0x9b,
+  0xdf, 0x67, 0x7e, 0x83, 0x7f, 0xfc, 0x6f, 0xca, 0x7f, 0xfc, 0xa0, 0x3f,
+  0xf9, 0x07, 0x7f, 0xf2, 0xa7, 0x62, 0x13, 0x48, 0xb4, 0x76, 0xc8, 0xf9,
+  0xdb, 0xe3, 0x8b, 0xaf, 0x8e, 0x2f, 0xce, 0x46, 0x90, 0x07, 0xea, 0x37,
+  0x0a, 0xf7, 0xfa, 0xc7, 0xac, 0x1a, 0x67, 0x55, 0x29, 0xf5, 0xa8, 0xf4,
+  0x5f, 0xcf, 0x76, 0xbe, 0x1e, 0x8d, 0x0e, 0xcf, 0x4f, 0x6c, 0xc5, 0x17,
+  0x9b, 0x89, 0xc5, 0xb6, 0x46, 0xc1, 0xb9, 0x82, 0x34, 0x7e, 0x7d, 0xc5,
+  0xec, 0x8b, 0xc9, 0x47, 0x46, 0xe8, 0x06, 0xc1, 0x5d, 0x75, 0x50, 0x53,
+  0x54, 0x57, 0x12, 0xf4, 0xa8, 0x61, 0x65, 0x54, 0xf2, 0x59, 0xdb, 0x99,
+  0x5e, 0x9d, 0x9c, 0xea, 0x7d, 0x0b, 0x65, 0xfb, 0x58, 0x8d, 0x8d, 0x29,
+  0x3e, 0xf9, 0xa8, 0x05, 0x90, 0x39, 0xa1, 0xc0, 0x88, 0x4a, 0x46, 0x1a,
+  0x3b, 0xa3, 0xfd, 0x23, 0xd5, 0x92, 0xdf, 0xf9, 0x48, 0xe7, 0x83, 0xaa,
+  0x91, 0xcc, 0x86, 0x2c, 0xdd, 0xf9, 0x40, 0x29, 0x7c, 0x94, 0x44, 0xec,
+  0x3a, 0x96, 0x07, 0xf3, 0x35, 0x5b, 0x42, 0x90, 0x1d, 0x47, 0xe6, 0x27,
+  0x4f, 0x2d, 0xdd, 0x95, 0x5f, 0x8f, 0xfb, 0xca, 0x68, 0xb2, 0x8b, 0xbb,
+  0xa9, 0x5c, 0x22, 0x60, 0x7b, 0x2e, 0xd8, 0xcf, 0xcf, 0x32, 0xbc, 0x1b,
+  0xe9, 0xa1, 0x32, 0x87, 0xc8, 0x7c, 0x10, 0x5c, 0x77, 0x32, 0x9e, 0xa5,
+  0xc5, 0x47, 0xdc, 0x66, 0xb8, 0x9f, 0xc8, 0x76, 0x53, 0x12, 0x27, 0x2a,
+  0x3f, 0x89, 0xc0, 0x9e, 0xf0, 0x2a, 0x40, 0x09, 0x9c, 0x91, 0x70, 0xbb,
+  0x67, 0xa7, 0xb8, 0xe5, 0xaa, 0xf2, 0x42, 0x58, 0x38, 0x4e, 0x6e, 0x12,
+  0xc8, 0x07, 0x73, 0x7c, 0x6a, 0x2e, 0x26, 0x9b, 0xad, 0x01, 0x5b, 0x37,
+  0x9b, 0x91, 0x4f, 0x55, 0xa1, 0x35, 0x9c, 0xa0, 0x98, 0x43, 0x90, 0xb1,
+  0xf4, 0x50, 0x22, 0x72, 0x04, 0x62, 0xb0, 0x5d, 0x90, 0x87, 0x59, 0xdb,
+  0x72, 0x1d, 0x22, 0xb9, 0x59, 0x88, 0x81, 0x65, 0xd3, 0x55, 0xef, 0xf0,
+  0xeb, 0xc8, 0x08, 0x6e, 0xed, 0xc8, 0x01, 0x6b, 0x6c, 0x61, 0x2d, 0xee,
+  0x84, 0x53, 0x4b, 0x6d, 0xa8, 0xae, 0x95, 0x26, 0xb2, 0x72, 0x99, 0xf8,
+  0xf5, 0x98, 0x35, 0xcd, 0xe4, 0x60, 0x53, 0x09, 0x1c, 0x58, 0x5e, 0x1d,
+  0xc5, 0xfe, 0xb6, 0xf1, 0xb6, 0xda, 0x71, 0x0e, 0xab, 0x93, 0x17, 0x74,
+  0xd6, 0x68, 0xf4, 0x0d, 0x58, 0x51, 0xb9, 0x81, 0x9b, 0x29, 0x44, 0x4e,
+  0xd5, 0xa2, 0x7c, 0xf5, 0x61, 0xae, 0x4c, 0xfd, 0x00, 0x27, 0x1b, 0x27,
+  0x3e, 0xc0, 0x1e, 0xb0, 0xfa, 0xed, 0xe0, 0x1d, 0x5d, 0x17, 0xe5, 0x60,
+  0xbc, 0x84, 0x81, 0xe3, 0x15, 0xbc, 0xe2, 0x64, 0x48, 0x63, 0xf7, 0x30,
+  0x2b, 0x19, 0x7e, 0x4f, 0x81, 0x1d, 0xa4, 0x99, 0x73, 0xac, 0x07, 0x79,
+  0x87, 0x6d, 0xc6, 0x1a, 0xcb, 0x53, 0xc2, 0x60, 0x7e, 0x57, 0x89, 0xd7,
+  0x0e, 0x50, 0x16, 0xd9, 0xc2, 0xee, 0x0a, 0x29, 0x97, 0x8a, 0x10, 0x45,
+  0x1b, 0xba, 0xdc, 0x58, 0xe2, 0xf8, 0x4b, 0xa8, 0x09, 0x99, 0xd0, 0xa9,
+  0x2b, 0x26, 0x59, 0x33, 0x20, 0x6e, 0x1b, 0x2a, 0xd1, 0xc4, 0x14, 0x0b,
+  0xe9, 0x8c, 0xeb, 0x5d, 0xac, 0xbc, 0x4a, 0xf8, 0x30, 0x35, 0x97, 0x97,
+  0x7f, 0x39, 0x3f, 0x7e, 0xa5, 0x6f, 0xae, 0x5b, 0x33, 0x66, 0x1e, 0x03,
+  0xf8, 0x24, 0x13, 0xa6, 0x4f, 0xaf, 0xc8, 0xb4, 0xd9, 0x64, 0x83, 0x46,
+  0x83, 0xe2, 0xfc, 0x99, 0x41, 0xf2, 0xc3, 0xeb, 0x93, 0xd1, 0xf9, 0xe9,
+  0xd9, 0xd1, 0xab, 0x97, 0x3f, 0xa8, 0x48, 0xfe, 0x82, 0x7c, 0xed, 0xac,
+  0xa7, 0xd9, 0x9f, 0x39, 0x66, 0x04, 0x79, 0xef, 0xdd, 0xf1, 0xf7, 0x1f,
+  0x8c, 0x75, 0xf0, 0x8a, 0xf8, 0xd1, 0xfb, 0xb7, 0xe9, 0x4c, 0x5e, 0x22,
+  0x13, 0x2b, 0xa2, 0xdb, 0x0d, 0xdb, 0x54, 0x76, 0xdd, 0x89, 0xb5, 0x75,
+  0x3e, 0x1d, 0xe0, 0xff, 0x5e, 0xf1, 0x68, 0x5e, 0x49, 0xa7, 0xb4, 0x95,
+  0x9f, 0x1a, 0xa9, 0xca, 0xeb, 0xae, 0xff, 0xcd, 0x86, 0xc1, 0x89, 0x14,
+  0x8b, 0xf7, 0x43, 0xdc, 0x00, 0x80, 0xca, 0x6f, 0x1c, 0x30, 0x56, 0x78,
+  0x88, 0x2b, 0x42, 0x82, 0x58, 0x22, 0x47, 0x29, 0xf5, 0x8c, 0xe0, 0xb1,
+  0xb0, 0x3d, 0x0a, 0x85, 0x11, 0x61, 0x51, 0x15, 0x96, 0xae, 0x72, 0x4c,
+  0x54, 0x18, 0xdb, 0x97, 0x54, 0x8b, 0xce, 0xa2, 0xb2, 0xcd, 0xf9, 0xf1,
+  0xc5, 0xe8, 0x64, 0x74, 0x49, 0x66, 0x94, 0x54, 0x40, 0x14, 0x67, 0xae,
+  0x96, 0xa7, 0x04, 0xf9, 0x41, 0x9b, 0xb8, 0xd3, 0xaf, 0xba, 0xd1, 0x3a,
+  0xd1, 0x56, 0xcc, 0xb5, 0xb3, 0x21, 0xe9, 0x06, 0xe0, 0x14, 0x4b, 0x52,
+  0x44, 0x99, 0x7e, 0x36, 0xbd, 0xd2, 0x03, 0x5c, 0xca, 0xd6, 0xe8, 0x14,
+  0x9f, 0x40, 0xe1, 0x18, 0xac, 0xce, 0x2c, 0x1f, 0x7b, 0x25, 0xa7, 0xdb,
+  0xb1, 0x58, 0x0a, 0xf3, 0x0b, 0xd5, 0x85, 0x7f, 0x84, 0xd4, 0xb1, 0xec,
+  0x52, 0x8c, 0xa5, 0x28, 0xae, 0x5c, 0x6b, 0x92, 0x1e, 0xe8, 0x27, 0x82,
+  0x5a, 0x43, 0x15, 0xc6, 0x89, 0x5f, 0xfc, 0x1b, 0x3f, 0xf5, 0xd0, 0x9c,
+  0xc2, 0x9e, 0x04, 0xe2, 0x57, 0x11, 0xd9, 0x24, 0x94, 0x73, 0x4e, 0xe9,
+  0x22, 0x8f, 0x85, 0xd1, 0x5a, 0x90, 0xa2, 0x0e, 0xc0, 0x8d, 0x8c, 0x2c,
+  0x50, 0x41, 0x44, 0x75, 0xbc, 0xa6, 0x5c, 0x30, 0x50, 0x54, 0x4d, 0x49,
+  0xdf, 0x82, 0x2b, 0xcb, 0xff, 0x98, 0x5e, 0xa7, 0x34, 0x83, 0xe3, 0xa5,
+  0x5f, 0x52, 0xcd, 0xf6, 0x9e, 0xab, 0x7b, 0x60, 0xe2, 0x01, 0x35, 0x4c,
+  0x2b, 0x70, 0x40, 0x36, 0x42, 0xb9, 0xae, 0x86, 0x8f, 0xe0, 0x06, 0x87,
+  0x6d, 0x36, 0x1c, 0xdd, 0x97, 0x5a, 0xf6, 0x73, 0xdd, 0x8c, 0x7a, 0x35,
+  0x18, 0x69, 0xfb, 0x56, 0x99, 0x02, 0x80, 0xd8, 0xcd, 0x50, 0x93, 0xe7,
+  0xbe, 0x98, 0xd8, 0xcb, 0x98, 0xb2, 0x77, 0x28, 0x50, 0x57, 0x09, 0xd3,
+  0x90, 0x11, 0x7f, 0xe4, 0xa2, 0x45, 0xe1, 0x46, 0x54, 0x34, 0xa6, 0xf0,
+  0x95, 0xb2, 0xd0, 0x39, 0x3c, 0x34, 0x4f, 0xb7, 0xb7, 0xad, 0xd8, 0x4f,
+  0x7d, 0x2f, 0x1f, 0xb4, 0x99, 0xe6, 0xba, 0x58, 0x7d, 0x4e, 0x5c, 0x4a,
+  0x91, 0x27, 0xa3, 0x0e, 0x52, 0x2f, 0xdf, 0xb2, 0x96, 0x2c, 0x56, 0x1b,
+  0xe7, 0x85, 0xc0, 0x6b, 0x55, 0xaf, 0xa5, 0xd1, 0xb5, 0x62, 0x6c, 0x46,
+  0xbf, 0x5c, 0xa0, 0x14, 0xd1, 0x44, 0xb8, 0xd8, 0x81, 0x7e, 0xb5, 0x0d,
+  0xea, 0x25, 0xe2, 0x26, 0xcb, 0xcc, 0xea, 0xdb, 0xf7, 0xa7, 0x97, 0x27,
+  0xe7, 0x7e, 0x1c, 0x2f, 0xf9, 0xfe, 0xe4, 0xf2, 0x1b, 0xa3, 0xb5, 0x8f,
+  0x4e, 0xde, 0x7d, 0x7d, 0x4a, 0xc1, 0x92, 0xb7, 0x6f, 0x0f, 0xdf, 0x51,
+  0x9a, 0xfe, 0x3b, 0x40, 0x04, 0x0f, 0x61, 0x38, 0x90, 0x38, 0x32, 0x53,
+  0x4c, 0x7b, 0x87, 0x12, 0xb8, 0xfb, 0xa1, 0xcf, 0xbe, 0x73, 0xfc, 0xb8,
+  0x3a, 0x71, 0xd1, 0x9e, 0xa4, 0x0d, 0xd4, 0x9a, 0x86, 0x65, 0x70, 0x4f,
+  0x8e, 0x1d, 0x1c, 0x5b, 0x32, 0xb6, 0x68, 0xa2, 0xbb, 0x24, 0xec, 0x48,
+  0x16, 0x64, 0x0d, 0x1d, 0xf1, 0x68, 0xbe, 0xbb, 0x5d, 0x1c, 0x00, 0x2b,
+  0x6a, 0x29, 0x5c, 0x61, 0xc7, 0x18, 0x9d, 0xa9, 0x10, 0xbb, 0x86, 0xef,
+  0xcb, 0x36, 0x78, 0xdf, 0x7c, 0x11, 0x5d, 0x42, 0x40, 0xbe, 0x74, 0xae,
+  0x35, 0xb2, 0x38, 0xc9, 0x68, 0xbe, 0x38, 0xf5, 0x2f, 0xd4, 0x61, 0xab,
+  0x76, 0x97, 0xe2, 0xec, 0xae, 0xcb, 0xcc, 0x9d, 0xdc, 0xc1, 0x99, 0x36,
+  0xa3, 0x7e, 0x54, 0x98, 0x61, 0x7c, 0xb9, 0x0c, 0x48, 0xae, 0x0d, 0xcc,
+  0x92, 0x6c, 0xdb, 0x7a, 0x3d, 0xe2, 0x3e, 0x3b, 0x60, 0xb5, 0xd2, 0x92,
+  0x14, 0x6b, 0x99, 0x3b, 0xd3, 0x9c, 0xb6, 0x2c, 0x98, 0x0e, 0x00, 0x9b,
+  0x25, 0x3f, 0x48, 0xc6, 0x0c, 0x69, 0xa9, 0x8f, 0xb5, 0xd2, 0x9b, 0xf9,
+  0xbe, 0x3b, 0x53, 0x27, 0xbf, 0xe6, 0x87, 0xd9, 0x02, 0x6a, 0x2e, 0x04,
+  0x89, 0x12, 0x65, 0x65, 0x39, 0xcc, 0x3e, 0x65, 0x14, 0x2d, 0xa4, 0xbf,
+  0xfe, 0x75, 0x71, 0xed, 0xa7, 0x8e, 0x71, 0x81, 0xe6, 0x45, 0x6c, 0x65,
+  0x85, 0x11, 0x99, 0xd5, 0x22, 0x29, 0x0a, 0xd7, 0xea, 0x81, 0x54, 0x7a,
+  0xdb, 0x5b, 0xf5, 0x41, 0xf9, 0xfd, 0x7e, 0xf8, 0xfb, 0x7d, 0x76, 0x3b,
+  0x9e, 0x9c, 0xdf, 0x3e, 0xb7, 0x4c, 0xa2, 0x9c, 0x10, 0xed, 0xab, 0x6f,
+  0xaa, 0x14, 0xd0, 0x0e, 0xa3, 0x47, 0xf9, 0xce, 0x49, 0x59, 0x26, 0xb2,
+  0x13, 0x9d, 0xa0, 0x58, 0xcb, 0x0a, 0x89, 0x9e, 0x78, 0x04, 0xfe, 0x56,
+  0xc6, 0xcf, 0x02, 0xad, 0x06, 0x39, 0x45, 0xd7, 0x95, 0x69, 0xd0, 0xfc,
+  0xfe, 0xa9, 0x05, 0xb5, 0x3b, 0x99, 0x86, 0x62, 0x67, 0x92, 0x56, 0x34,
+  0xc8, 0x17, 0xb7, 0x5a, 0x2d, 0xd7, 0xfc, 0xf5, 0xb9, 0x2d, 0x74, 0x53,
+  0xb7, 0x82, 0x3d, 0x2d, 0xd6, 0x5e, 0x15, 0xfe, 0xe8, 0x1c, 0xf0, 0x85,
+  0x24, 0x19, 0x9c, 0x91, 0xd1, 0xe9, 0x57, 0xd6, 0x46, 0x36, 0x7b, 0xe5,
+  0x3e, 0x91, 0x3d, 0x31, 0x43, 0x8a, 0x29, 0xe4, 0x91, 0x27, 0x5c, 0x7c,
+  0xc6, 0x7c, 0x59, 0xf5, 0x1f, 0xf7, 0x77, 0x77, 0xf7, 0x0e, 0xf6, 0x3e,
+  0x7f, 0xb1, 0x7b, 0xb0, 0xb7, 0xb7, 0xb7, 0x7f, 0xb0, 0x77, 0x70, 0xb0,
+  0xbf, 0xfb, 0xf3, 0x0e, 0xf9, 0x8f, 0x6e, 0xf3, 0xec, 0x4e, 0x23, 0x3c,
+  0x9c, 0xd4, 0x86, 0x6d, 0xcd, 0x55, 0xcf, 0xc5, 0x82, 0x17, 0x3b, 0x57,
+  0x35, 0x1f, 0x4b, 0xcf, 0xc0, 0xd8, 0x73, 0xa6, 0x62, 0x5b, 0xb8, 0x94,
+  0x4d, 0x9c, 0x41, 0x8f, 0x2e, 0x1a, 0xbd, 0xfa, 0xdb, 0x92, 0x46, 0x3a,
+  0x26, 0x75, 0x00, 0x3a, 0x4d, 0x6d, 0x13, 0xe4, 0xae, 0x67, 0xe5, 0x78,
+  0x8c, 0x14, 0x00, 0x9b, 0x23, 0x3a, 0x4c, 0x88, 0x93, 0xf4, 0x23, 0x6f,
+  0x09, 0x71, 0xc1, 0x03, 0x9d, 0xc7, 0x07, 0xdd, 0xcd, 0x0e, 0x2b, 0x5e,
+  0x82, 0x48, 0x9e, 0x94, 0xc4, 0xcf, 0x3f, 0x25, 0xa1, 0x64, 0x26, 0xa9,
+  0xb2, 0xb9, 0x23, 0xc9, 0x55, 0xf6, 0xf9, 0xee, 0xc1, 0x01, 0x95, 0xd0,
+  0xf8, 0xe3, 0x5e, 0x5f, 0x80, 0x95, 0x3e, 0x5a, 0xbc, 0x6f, 0xaf, 0x27,
+  0x6e, 0x83, 0xcc, 0x0f, 0x7f, 0x9c, 0xc5, 0x72, 0x9e, 0x55, 0xc6, 0x10,
+  0xa1, 0x22, 0xac, 0x40, 0x16, 0xc2, 0xe9, 0xcd, 0x5c, 0x65, 0x60, 0x36,
+  0xe9, 0xa0, 0xda, 0xe9, 0x46, 0x60, 0xce, 0x55, 0x9b, 0xcd, 0xcd, 0xbc,
+  0x3b, 0x6e, 0x88, 0xb6, 0x6d, 0x94, 0x91, 0x01, 0xe8, 0x89, 0x73, 0x42,
+  0x38, 0x1b, 0x86, 0xef, 0x5b, 0x91, 0x0c, 0x38, 0x5c, 0x05, 0x97, 0x06,
+  0xa5, 0xc7, 0x59, 0x87, 0x87, 0xc7, 0xc4, 0x53, 0x6e, 0x25, 0x11, 0xe6,
+  0x47, 0x6f, 0xb0, 0xfb, 0xcf, 0xf6, 0x7e, 0x66, 0xdc, 0x1f, 0x1d, 0x08,
+  0x37, 0x6b, 0x52, 0x56, 0x6d, 0xea, 0xa7, 0x3a, 0xe8, 0x46, 0xda, 0xca,
+  0x86, 0xd7, 0x43, 0xd5, 0x2a, 0xc4, 0xdb, 0xd8, 0xf7, 0xd1, 0xd7, 0xcc,
+  0xf7, 0xcd, 0x05, 0x7f, 0x61, 0xa7, 0xa9, 0x43, 0x49, 0x1d, 0xc2, 0xec,
+  0xcc, 0x6c, 0xd5, 0xc7, 0x31, 0x37, 0xcc, 0xf1, 0xe5, 0xa1, 0xb9, 0x3c,
+  0xbe, 0x0d, 0x0d, 0xfd, 0xb7, 0x99, 0xb1, 0xca, 0x69, 0xb1, 0xb7, 0x70,
+  0x1e, 0x6e, 0x2d, 0xcb, 0x2e, 0xcd, 0xdd, 0xd3, 0x64, 0x8b, 0x82, 0x16,
+  0xcf, 0x3e, 0x7f, 0xf6, 0x74, 0x9b, 0x4b, 0x1a, 0xf0, 0x6b, 0x19, 0x25,
+  0x5a, 0xc0, 0x2b, 0x29, 0x2c, 0x2f, 0xe4, 0x4e, 0xb6, 0x22, 0xe9, 0xfd,
+  0xc5, 0x09, 0x1f, 0xe9, 0x1b, 0x4e, 0xc6, 0x67, 0xa3, 0xb7, 0xcb, 0xca,
+  0x86, 0xfb, 0xd6, 0x53, 0x32, 0xe6, 0x39, 0x31, 0x06, 0x22, 0x89, 0x99,
+  0x2e, 0x46, 0x9b, 0x44, 0x8f, 0x1b, 0xd6, 0x1c, 0xd0, 0x12, 0x85, 0xfe,
+  0xa4, 0x7e, 0x12, 0x3a, 0x03, 0x8a, 0x41, 0x62, 0x38, 0x95, 0x7d, 0x66,
+  0x2d, 0x30, 0xb2, 0x83, 0x58, 0x1e, 0xb1, 0xf4, 0xef, 0xb0, 0x5a, 0x6f,
+  0x73, 0xe8, 0x1c, 0x4a, 0x21, 0x6d, 0x43, 0xf3, 0xa0, 0x62, 0x30, 0xa9,
+  0xc7, 0xad, 0xb4, 0x2e, 0xa7, 0x6d, 0x7a, 0xe4, 0x48, 0xca, 0x8b, 0x22,
+  0xa2, 0xc8, 0x4e, 0x21, 0xc7, 0x85, 0x1b, 0x78, 0x16, 0xf3, 0x96, 0xcb,
+  0x47, 0x92, 0xd2, 0x91, 0x1c, 0x0e, 0xec, 0xee, 0xdc, 0x5c, 0x47, 0xd5,
+  0xbd, 0x68, 0xd8, 0x30, 0x13, 0x6c, 0x5d, 0xb2, 0x4e, 0x64, 0x9d, 0xe9,
+  0x17, 0x7c, 0x48, 0xba, 0x65, 0x1f, 0x51, 0xa3, 0xb9, 0xd5, 0x81, 0x96,
+  0xd8, 0x1f, 0xcc, 0xf5, 0x57, 0x1e, 0xf0, 0xc4, 0xcf, 0xd3, 0xd2, 0xbf,
+  0xeb, 0x73, 0x1e, 0x26, 0x31, 0xed, 0x0e, 0x6c, 0x45, 0xd7, 0x98, 0x99,
+  0x12, 0x38, 0x24, 0x6b, 0xfd, 0x6c, 0xa1, 0x27, 0x3b, 0x3b, 0xdb, 0x2b,
+  0x7a, 0x23, 0xbf, 0x8e, 0x7d, 0xfd, 0x1c, 0xe4, 0x1e, 0x5e, 0x6a, 0xa4,
+  0x59, 0xf3, 0x76, 0xe3, 0x34, 0xb5, 0x79, 0x4d, 0x2b, 0x39, 0x15, 0x80,
+  0x29, 0xbb, 0x51, 0xd5, 0xbc, 0xe2, 0xce, 0xab, 0xf0, 0x6a, 0x0f, 0x42,
+  0x30, 0x2d, 0x4a, 0xb6, 0xc4, 0xd5, 0x99, 0x39, 0x4e, 0x38, 0x4c, 0x0e,
+  0x69, 0x37, 0xb4, 0x3e, 0xec, 0x75, 0x59, 0xfd, 0xb9, 0xca, 0x1f, 0xae,
+  0x4a, 0xac, 0x75, 0xe7, 0xf5, 0xbd, 0x5f, 0xaa, 0x9a, 0xa7, 0xb9, 0xf5,
+  0xd6, 0xd9, 0x3b, 0xce, 0x98, 0x47, 0xc4, 0x4a, 0x4e, 0x8f, 0x17, 0x38,
+  0x2f, 0x5a, 0x05, 0x37, 0xa5, 0x11, 0x44, 0x8c, 0xed, 0x20, 0x40, 0x39,
+  0x58, 0x29, 0x95, 0xad, 0x5f, 0x84, 0x0f, 0xa9, 0xfc, 0x82, 0x0e, 0x67,
+  0xc5, 0xda, 0x6e, 0x62, 0x0e, 0x5b, 0x8e, 0x79, 0x7b, 0xb5, 0xe6, 0xa3,
+  0xcf, 0x3b, 0x9e, 0xd1, 0x00, 0x0c, 0x5c, 0x35, 0x87, 0x84, 0x04, 0xc6,
+  0xe1, 0xc9, 0x29, 0xc1, 0xcb, 0x4e, 0x8d, 0x89, 0x37, 0x52, 0x55, 0x09,
+  0x70, 0x4b, 0x00, 0xdf, 0x8a, 0x9c, 0xd4, 0xf5, 0xbe, 0x2d, 0xdc, 0xa1,
+  0x59, 0x47, 0xb0, 0x5b, 0x28, 0xb8, 0xc7, 0xa6, 0xbf, 0x90, 0xed, 0x99,
+  0xd5, 0x32, 0xfa, 0x52, 0xcd, 0x4e, 0x5b, 0x10, 0xd9, 0x12, 0xc5, 0xfb,
+  0x6d, 0x36, 0x2b, 0x17, 0x30, 0xa9, 0x59, 0x4c, 0xa3, 0x6e, 0x50, 0x95,
+  0xcd, 0xb2, 0x5b, 0xf1, 0xae, 0x32, 0x2d, 0xe8, 0xd7, 0x12, 0xc3, 0xe4,
+  0xc2, 0xa1, 0x8d, 0xa0, 0xc3, 0x83, 0x38, 0x29, 0x7d, 0x74, 0x87, 0xd9,
+  0x55, 0x1c, 0x69, 0x06, 0x7d, 0xdf, 0x91, 0xd9, 0x9b, 0x19, 0xb2, 0x64,
+  0xe8, 0x03, 0x32, 0x72, 0x05, 0x24, 0xfa, 0xbe, 0x16, 0x5e, 0x84, 0x2e,
+  0xea, 0x9a, 0x9d, 0x85, 0x5a, 0x7b, 0x8e, 0xbd, 0xef, 0x7d, 0xa5, 0x1b,
+  0xe6, 0x90, 0x01, 0xdd, 0x3c, 0x7d, 0xf2, 0xd4, 0x72, 0x2d, 0x75, 0x63,
+  0x91, 0x51, 0x61, 0x89, 0x3e, 0xa7, 0x60, 0x62, 0x73, 0x94, 0x33, 0xf3,
+  0x4f, 0x00, 0x93, 0x18, 0xaa, 0x68, 0x9e, 0x25, 0xba, 0x54, 0x0f, 0x1b,
+  0x6a, 0xfe, 0xc9, 0x69, 0x05, 0xf2, 0x2f, 0x34, 0x55, 0x2d, 0xc1, 0xca,
+  0xdb, 0xe7, 0xdb, 0x90, 0xa2, 0x8e, 0xcd, 0x64, 0x68, 0x7b, 0x2f, 0xd1,
+  0x73, 0xee, 0xff, 0x6b, 0x9e, 0x4a, 0x1a, 0x04, 0xeb, 0x21, 0x65, 0xa5,
+  0xd3, 0xcb, 0xcb, 0x30, 0xe6, 0x52, 0x81, 0x5f, 0x2d, 0x29, 0x1a, 0x66,
+  0x0b, 0xe1, 0x50, 0x2f, 0xe6, 0x74, 0x17, 0x65, 0x5c, 0x95, 0xd3, 0x36,
+  0x4e, 0x26, 0xdd, 0xd2, 0x2c, 0x2f, 0xb7, 0x7e, 0x5a, 0xde, 0x51, 0x49,
+  0xd1, 0xab, 0xab, 0x7c, 0x42, 0x01, 0x6e, 0xc7, 0xbe, 0x4b, 0x32, 0x9e,
+  0x1f, 0x9c, 0x6b, 0x15, 0x23, 0x33, 0xb6, 0x64, 0xb1, 0x1c, 0xcf, 0xcc,
+  0x65, 0xad, 0xb8, 0x70, 0x73, 0xaa, 0x30, 0x4b, 0xc6, 0xda, 0x42, 0x73,
+  0x4c, 0x13, 0x06, 0x83, 0xb3, 0x83, 0x45, 0x96, 0x3a, 0xeb, 0xa4, 0x82,
+  0xcf, 0x51, 0x5b, 0x95, 0x00, 0xbb, 0xf3, 0xb2, 0xd0, 0xb4, 0x92, 0x65,
+  0xcd, 0xb4, 0x8c, 0x5a, 0x94, 0x7d, 0x83, 0x43, 0x13, 0xf9, 0x4c, 0xc8,
+  0xcf, 0xc5, 0x34, 0xc7, 0x1b, 0xfe, 0x60, 0xa6, 0x83, 0xc5, 0xcd, 0x42,
+  0x57, 0x5a, 0x15, 0x22, 0xd6, 0x96, 0x24, 0x91, 0x01, 0x47, 0xef, 0xfc,
+  0x9b, 0xf3, 0x61, 0x72, 0x4c, 0x2d, 0x71, 0x9f, 0x44, 0xd1, 0x85, 0x8f,
+  0xc6, 0xfc, 0xce, 0x0c, 0xf6, 0x9a, 0x2e, 0xb0, 0xb3, 0x8a, 0xfe, 0x85,
+  0xd6, 0xe4, 0x97, 0xec, 0x96, 0xc5, 0x6f, 0xdb, 0x5f, 0x35, 0x0d, 0x29,
+  0x5c, 0xf9, 0x1c, 0x7f, 0x37, 0x67, 0xc5, 0xa8, 0x5f, 0x76, 0x99, 0xdc,
+  0x17, 0xca, 0xaa, 0x45, 0x62, 0xc3, 0x6f, 0x26, 0x46, 0x2b, 0x83, 0x6e,
+  0xb5, 0xb8, 0xc7, 0xfa, 0x79, 0xc2, 0x91, 0xf5, 0x4f, 0x6e, 0xc0, 0xdb,
+  0x5a, 0xb2, 0xfd, 0x2c, 0x10, 0x8e, 0x0f, 0x56, 0xc5, 0xf4, 0x2d, 0x55,
+  0x26, 0xb0, 0xc1, 0x52, 0xc2, 0xa4, 0xec, 0xd1, 0xa8, 0xb3, 0xce, 0x79,
+  0xf5, 0xec, 0x37, 0xfd, 0x05, 0x99, 0xdd, 0xd4, 0x17, 0xa3, 0xb5, 0x98,
+  0x25, 0x18, 0x6e, 0xfc, 0x7f, 0x01, 0x18, 0x6d, 0x77, 0xf2, 0x19, 0xca,
+  0x02, 0x00,
 };
 #define BUF_SIZE 0x10000
 static voidpf zalloc_func(voidpf opaque, unsigned int items, unsigned int size)
 {
   (void) opaque;
   /* not a typo, keep it calloc() */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_operate.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_operate.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_operate.c	2016-11-01 04:51:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_operate.c	2016-12-19 15:27:56.000000000 +0800
@@ -140,14 +140,14 @@
  *
  * For all others, have to read the entire file in, discarding the contents.
  * Most posted text files will be small, and binary files like zlib archives
  * and CD/DVD images should be either a STREAM_LF format or a fixed format.
  *
  */
-static curl_off_t vms_realfilesize(const char * name,
-                                   const struct_stat * stat_buf)
+static curl_off_t vms_realfilesize(const char *name,
+                                   const struct_stat *stat_buf)
 {
   char buffer[8192];
   curl_off_t count;
   int ret_stat;
   FILE * file;
 
@@ -171,14 +171,14 @@
 /*
  *
  *  VmsSpecialSize checks to see if the stat st_size can be trusted and
  *  if not to call a routine to get the correct size.
  *
  */
-static curl_off_t VmsSpecialSize(const char * name,
-                                 const struct_stat * stat_buf)
+static curl_off_t VmsSpecialSize(const char *name,
+                                 const struct_stat *stat_buf)
 {
   switch(stat_buf->st_fab_rfm) {
   case FAB$C_VAR:
   case FAB$C_VFC:
     return vms_realfilesize(name, stat_buf);
     break;
@@ -650,13 +650,13 @@
            */
 #ifdef __VMS
           /* Calculate the real upload site for VMS */
           infd = -1;
           if(stat(uploadfile, &fileinfo) == 0) {
             fileinfo.st_size = VmsSpecialSize(uploadfile, &fileinfo);
-            switch (fileinfo.st_fab_rfm) {
+            switch(fileinfo.st_fab_rfm) {
             case FAB$C_VAR:
             case FAB$C_VFC:
             case FAB$C_STMCR:
               infd = open(uploadfile, O_RDONLY | O_BINARY);
               break;
             default:
@@ -855,26 +855,24 @@
 
 #if !defined(CURL_DISABLE_PROXY)
         {
           /* TODO: Make this a run-time check instead of compile-time one. */
 
           my_setopt_str(curl, CURLOPT_PROXY, config->proxy);
+          /* new in libcurl 7.5 */
+          if(config->proxy)
+            my_setopt_enum(curl, CURLOPT_PROXYTYPE, config->proxyver);
+
           my_setopt_str(curl, CURLOPT_PROXYUSERPWD, config->proxyuserpwd);
 
           /* new in libcurl 7.3 */
           my_setopt(curl, CURLOPT_HTTPPROXYTUNNEL, config->proxytunnel?1L:0L);
 
-          /* new in libcurl 7.5 */
-          if(config->proxy)
-            my_setopt_enum(curl, CURLOPT_PROXYTYPE, (long)config->proxyver);
-
-          /* new in libcurl 7.10 */
-          if(config->socksproxy) {
-            my_setopt_str(curl, CURLOPT_PROXY, config->socksproxy);
-            my_setopt_enum(curl, CURLOPT_PROXYTYPE, (long)config->socksver);
-          }
+          /* new in libcurl 7.52.0 */
+          if(config->preproxy)
+            my_setopt_str(curl, CURLOPT_PRE_PROXY, config->preproxy);
 
           /* new in libcurl 7.10.6 */
           if(config->proxyanyauth)
             my_setopt_bitmask(curl, CURLOPT_PROXYAUTH,
                               (long)CURLAUTH_ANY);
           else if(config->proxynegotiate)
@@ -997,12 +995,13 @@
         if(config->use_resume)
           my_setopt(curl, CURLOPT_RESUME_FROM_LARGE, config->resume_from);
         else
           my_setopt(curl, CURLOPT_RESUME_FROM_LARGE, CURL_OFF_T_C(0));
 
         my_setopt_str(curl, CURLOPT_KEYPASSWD, config->key_passwd);
+        my_setopt_str(curl, CURLOPT_PROXY_KEYPASSWD, config->proxy_key_passwd);
 
         if(built_in_protos & (CURLPROTO_SCP|CURLPROTO_SFTP)) {
 
           /* SSH and SSL private key uses same command-line option */
           /* new in libcurl 7.16.1 */
           my_setopt_str(curl, CURLOPT_SSH_PRIVATE_KEYFILE, config->key);
@@ -1014,51 +1013,77 @@
           my_setopt_str(curl, CURLOPT_SSH_HOST_PUBLIC_KEY_MD5,
                         config->hostpubmd5);
         }
 
         if(config->cacert)
           my_setopt_str(curl, CURLOPT_CAINFO, config->cacert);
+        if(config->proxy_cacert)
+          my_setopt_str(curl, CURLOPT_PROXY_CAINFO, config->proxy_cacert);
         if(config->capath) {
           result = res_setopt_str(curl, CURLOPT_CAPATH, config->capath);
           if(result == CURLE_NOT_BUILT_IN) {
             warnf(config->global, "ignoring %s, not supported by libcurl\n",
                   capath_from_env?
                   "SSL_CERT_DIR environment variable":"--capath");
           }
           else if(result)
             goto show_error;
         }
+        if(config->proxy_capath)
+          my_setopt_str(curl, CURLOPT_PROXY_CAPATH, config->proxy_capath);
+        else if(config->capath) /* CURLOPT_PROXY_CAPATH default is capath */
+          my_setopt_str(curl, CURLOPT_PROXY_CAPATH, config->capath);
+
         if(config->crlfile)
           my_setopt_str(curl, CURLOPT_CRLFILE, config->crlfile);
+        if(config->proxy_crlfile)
+          my_setopt_str(curl, CURLOPT_PROXY_CRLFILE, config->proxy_crlfile);
+        else if(config->crlfile) /* CURLOPT_PROXY_CRLFILE default is crlfile */
+          my_setopt_str(curl, CURLOPT_PROXY_CRLFILE, config->crlfile);
 
         if(config->pinnedpubkey)
           my_setopt_str(curl, CURLOPT_PINNEDPUBLICKEY, config->pinnedpubkey);
 
         if(curlinfo->features & CURL_VERSION_SSL) {
           my_setopt_str(curl, CURLOPT_SSLCERT, config->cert);
+          my_setopt_str(curl, CURLOPT_PROXY_SSLCERT, config->proxy_cert);
           my_setopt_str(curl, CURLOPT_SSLCERTTYPE, config->cert_type);
+          my_setopt_str(curl, CURLOPT_PROXY_SSLCERTTYPE,
+                        config->proxy_cert_type);
           my_setopt_str(curl, CURLOPT_SSLKEY, config->key);
+          my_setopt_str(curl, CURLOPT_PROXY_SSLKEY, config->proxy_key);
           my_setopt_str(curl, CURLOPT_SSLKEYTYPE, config->key_type);
+          my_setopt_str(curl, CURLOPT_PROXY_SSLKEYTYPE,
+                        config->proxy_key_type);
 
           if(config->insecure_ok) {
             my_setopt(curl, CURLOPT_SSL_VERIFYPEER, 0L);
             my_setopt(curl, CURLOPT_SSL_VERIFYHOST, 0L);
           }
           else {
             my_setopt(curl, CURLOPT_SSL_VERIFYPEER, 1L);
             /* libcurl default is strict verifyhost -> 2L   */
             /* my_setopt(curl, CURLOPT_SSL_VERIFYHOST, 2L); */
           }
+          if(config->proxy_insecure_ok) {
+            my_setopt(curl, CURLOPT_PROXY_SSL_VERIFYPEER, 0L);
+            my_setopt(curl, CURLOPT_PROXY_SSL_VERIFYHOST, 0L);
+          }
+          else {
+            my_setopt(curl, CURLOPT_PROXY_SSL_VERIFYPEER, 1L);
+          }
 
           if(config->verifystatus)
             my_setopt(curl, CURLOPT_SSL_VERIFYSTATUS, 1L);
 
           if(config->falsestart)
             my_setopt(curl, CURLOPT_SSL_FALSESTART, 1L);
 
           my_setopt_enum(curl, CURLOPT_SSLVERSION, config->ssl_version);
+          my_setopt_enum(curl, CURLOPT_PROXY_SSLVERSION,
+                         config->proxy_ssl_version);
         }
         if(config->path_as_is)
           my_setopt(curl, CURLOPT_PATH_AS_IS, 1L);
 
         if(built_in_protos & (CURLPROTO_SCP|CURLPROTO_SFTP)) {
           if(!config->insecure_ok) {
@@ -1154,12 +1179,16 @@
         my_setopt(curl, CURLOPT_CONNECTTIMEOUT_MS,
                   (long)(config->connecttimeout * 1000));
 
         if(config->cipher_list)
           my_setopt_str(curl, CURLOPT_SSL_CIPHER_LIST, config->cipher_list);
 
+        if(config->proxy_cipher_list)
+          my_setopt_str(curl, CURLOPT_PROXY_SSL_CIPHER_LIST,
+                        config->proxy_cipher_list);
+
         /* new in libcurl 7.9.2: */
         if(config->disable_epsv)
           /* disable it */
           my_setopt(curl, CURLOPT_FTP_USE_EPSV, 0L);
 
         /* new in libcurl 7.10.5 */
@@ -1322,12 +1351,21 @@
           if(config->tls_password)
             my_setopt_str(curl, CURLOPT_TLSAUTH_PASSWORD,
                           config->tls_password);
           if(config->tls_authtype)
             my_setopt_str(curl, CURLOPT_TLSAUTH_TYPE,
                           config->tls_authtype);
+          if(config->proxy_tls_username)
+            my_setopt_str(curl, CURLOPT_PROXY_TLSAUTH_USERNAME,
+                          config->proxy_tls_username);
+          if(config->proxy_tls_password)
+            my_setopt_str(curl, CURLOPT_PROXY_TLSAUTH_PASSWORD,
+                          config->proxy_tls_password);
+          if(config->proxy_tls_authtype)
+            my_setopt_str(curl, CURLOPT_PROXY_TLSAUTH_TYPE,
+                          config->proxy_tls_authtype);
         }
 
         /* new in 7.22.0 */
         if(config->gssapi_delegation)
           my_setopt_str(curl, CURLOPT_GSSAPI_DELEGATION,
                         config->gssapi_delegation);
@@ -1337,12 +1375,16 @@
           long mask = (config->ssl_allow_beast ? CURLSSLOPT_ALLOW_BEAST : 0) |
                       (config->ssl_no_revoke ? CURLSSLOPT_NO_REVOKE : 0);
           if(mask)
             my_setopt_bitmask(curl, CURLOPT_SSL_OPTIONS, mask);
         }
 
+        if(config->proxy_ssl_allow_beast)
+          my_setopt(curl, CURLOPT_PROXY_SSL_OPTIONS,
+                    (long)CURLSSLOPT_ALLOW_BEAST);
+
         if(config->mail_auth)
           my_setopt_str(curl, CURLOPT_MAIL_AUTH, config->mail_auth);
 
         /* new in 7.31.0 */
         if(config->sasl_ir)
           my_setopt(curl, CURLOPT_SASL_IR, 1L);
@@ -1438,23 +1480,31 @@
              (!config->retry_maxtime ||
               (tvdiff(tvnow(), retrystart) <
                config->retry_maxtime*1000L)) ) {
             enum {
               RETRY_NO,
               RETRY_TIMEOUT,
+              RETRY_CONNREFUSED,
               RETRY_HTTP,
               RETRY_FTP,
               RETRY_LAST /* not used */
             } retry = RETRY_NO;
             long response;
             if((CURLE_OPERATION_TIMEDOUT == result) ||
                (CURLE_COULDNT_RESOLVE_HOST == result) ||
                (CURLE_COULDNT_RESOLVE_PROXY == result) ||
                (CURLE_FTP_ACCEPT_TIMEOUT == result))
               /* retry timeout always */
               retry = RETRY_TIMEOUT;
+            else if(config->retry_connrefused &&
+                    (CURLE_COULDNT_CONNECT == result)) {
+              long oserrno;
+              curl_easy_getinfo(curl, CURLINFO_OS_ERRNO, &oserrno);
+              if(ECONNREFUSED == oserrno)
+                retry = RETRY_CONNREFUSED;
+            }
             else if((CURLE_OK == result) ||
                     (config->failonerror &&
                      (CURLE_HTTP_RETURNED_ERROR == result))) {
               /* If it returned OK. _or_ failonerror was enabled and it
                  returned due to such an error, check for HTTP transient
                  errors to retry on. */
@@ -1496,13 +1546,17 @@
                  */
                 retry = RETRY_FTP;
             }
 
             if(retry) {
               static const char * const m[]={
-                NULL, "timeout", "HTTP error", "FTP error"
+                NULL,
+                "timeout",
+                "connection refused",
+                "HTTP error",
+                "FTP error"
               };
 
               warnf(config->global, "Transient problem: %s "
                     "Will retry in %ld seconds. "
                     "%ld retries left.\n",
                     m[retry], retry_sleep/1000L, retry_numretries);
@@ -1790,15 +1844,15 @@
     Curl_safefree(urlnode->url);
     Curl_safefree(urlnode->outfile);
     Curl_safefree(urlnode->infile);
     urlnode->flags = 0;
 
     /*
-    ** Bail out upon critical errors
+    ** Bail out upon critical errors or --fail-early
     */
-    if(is_fatal_error(result))
+    if(is_fatal_error(result) || (result && global->fail_early))
       goto quit_curl;
 
   } /* for-loop through all URLs */
 
   /*
   ** Nested loops end here.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_paramhlp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_paramhlp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_paramhlp.c	2016-11-01 04:51:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_paramhlp.c	2016-12-19 15:27:56.000000000 +0800
@@ -63,18 +63,21 @@
   char *string = NULL;
   size_t stringlen = 0;
   size_t buflen;
 
   if(file) {
     while(fgets(buffer, sizeof(buffer), file)) {
-      if((ptr = strchr(buffer, '\r')) != NULL)
+      ptr = strchr(buffer, '\r');
+      if(ptr)
         *ptr = '\0';
-      if((ptr = strchr(buffer, '\n')) != NULL)
+      ptr = strchr(buffer, '\n');
+      if(ptr)
         *ptr = '\0';
       buflen = strlen(buffer);
-      if((ptr = realloc(string, stringlen+buflen+1)) == NULL) {
+      ptr = realloc(string, stringlen+buflen+1);
+      if(!ptr) {
         Curl_safefree(string);
         return PARAM_NO_MEM;
       }
       string = ptr;
       strcpy(string+stringlen, buffer);
       stringlen += buflen;
@@ -99,26 +102,28 @@
         if(alloc+1 > ((size_t)-1)/2) {
           Curl_safefree(buffer);
           return PARAM_NO_MEM;
         }
         alloc *= 2;
         /* allocate an extra char, reserved space, for null termination */
-        if((newbuf = realloc(buffer, alloc+1)) == NULL) {
+        newbuf = realloc(buffer, alloc+1);
+        if(!newbuf) {
           Curl_safefree(buffer);
           return PARAM_NO_MEM;
         }
         buffer = newbuf;
       }
       nread = fread(buffer+nused, 1, alloc-nused, file);
       nused += nread;
     } while(nread);
     /* null terminate the buffer in case it's used as a string later */
     buffer[nused] = '\0';
     /* free trailing slack space, if possible */
     if(alloc != nused) {
-      if((newbuf = realloc(buffer, nused+1)) == NULL) {
+      newbuf = realloc(buffer, nused+1);
+      if(!newbuf) {
         Curl_safefree(buffer);
         return PARAM_NO_MEM;
       }
       buffer = newbuf;
     }
     /* discard buffer if nothing was read */
@@ -310,13 +315,13 @@
         return 1;
       }
     }
 
     for(pp=protos; pp->name; pp++) {
       if(curl_strequal(token, pp->name)) {
-        switch (action) {
+        switch(action) {
         case deny:
           *val &= ~(pp->bit);
           break;
         case allow:
           *val |= pp->bit;
           break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_parsecfg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_parsecfg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_parsecfg.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_parsecfg.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -206,20 +206,16 @@
           default:
             warnf(operation->global, "%s:%d: warning: '%s' uses unquoted "
                   "white space in the line that may cause side-effects!\n",
                   filename, lineno, option);
           }
         }
-      }
-
-      if(!*param) {
-        /* do this so getparameter can check for required parameters.
-           Otherwise it always thinks there's a parameter. */
-        if(alloced_param)
-          Curl_safefree(param);
-        param = NULL;
+        if(!*param)
+          /* do this so getparameter can check for required parameters.
+             Otherwise it always thinks there's a parameter. */
+          param = NULL;
       }
 
 #ifdef DEBUG_CONFIG
       fprintf(stderr, "PARAM: \"%s\"\n",(param ? param : "(null)"));
 #endif
       res = getparameter(option, param, &usedarg, global, operation);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_setopt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_setopt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_setopt.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_setopt.c	2016-12-19 15:27:56.000000000 +0800
@@ -42,12 +42,21 @@
 #define NV1(e, v) {#e, (v)}
 #define NVEND {NULL, 0}         /* sentinel to mark end of list */
 
 const NameValue setopt_nv_CURLPROXY[] = {
   NV(CURLPROXY_HTTP),
   NV(CURLPROXY_HTTP_1_0),
+  NV(CURLPROXY_HTTPS),
+  NV(CURLPROXY_SOCKS4),
+  NV(CURLPROXY_SOCKS5),
+  NV(CURLPROXY_SOCKS4A),
+  NV(CURLPROXY_SOCKS5_HOSTNAME),
+  NVEND,
+};
+
+const NameValue setopt_nv_CURL_SOCKS_PROXY[] = {
   NV(CURLPROXY_SOCKS4),
   NV(CURLPROXY_SOCKS5),
   NV(CURLPROXY_SOCKS4A),
   NV(CURLPROXY_SOCKS5_HOSTNAME),
   NVEND,
 };
@@ -80,12 +89,13 @@
   NV(CURL_SSLVERSION_TLSv1),
   NV(CURL_SSLVERSION_SSLv2),
   NV(CURL_SSLVERSION_SSLv3),
   NV(CURL_SSLVERSION_TLSv1_0),
   NV(CURL_SSLVERSION_TLSv1_1),
   NV(CURL_SSLVERSION_TLSv1_2),
+  NV(CURL_SSLVERSION_TLSv1_3),
   NVEND,
 };
 
 const NameValue setopt_nv_CURL_TIMECOND[] = {
   NV(CURL_TIMECOND_IFMODSINCE),
   NV(CURL_TIMECOND_IFUNMODSINCE),
@@ -155,12 +165,14 @@
 static const NameValue setopt_nv_CURLNONZERODEFAULTS[] = {
   NV1(CURLOPT_SSL_VERIFYPEER, 1),
   NV1(CURLOPT_SSL_VERIFYHOST, 1),
   NV1(CURLOPT_SSL_ENABLE_NPN, 1),
   NV1(CURLOPT_SSL_ENABLE_ALPN, 1),
   NV1(CURLOPT_TCP_NODELAY, 1),
+  NV1(CURLOPT_PROXY_SSL_VERIFYPEER, 1),
+  NV1(CURLOPT_PROXY_SSL_VERIFYHOST, 1),
   NVEND
 };
 
 /* Format and add code; jump to nomem on malloc error */
 #define ADD(args) do { \
   ret = easysrc_add args; \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_setopt.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_setopt.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_setopt.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_setopt.h	2016-12-19 15:27:56.000000000 +0800
@@ -44,12 +44,13 @@
 typedef struct {
   const char *name;
   unsigned long value;
 } NameValueUnsigned;
 
 extern const NameValue setopt_nv_CURLPROXY[];
+extern const NameValue setopt_nv_CURL_SOCKS_PROXY[];
 extern const NameValue setopt_nv_CURL_HTTP_VERSION[];
 extern const NameValue setopt_nv_CURL_SSLVERSION[];
 extern const NameValue setopt_nv_CURL_TIMECOND[];
 extern const NameValue setopt_nv_CURLFTPSSL_CCC[];
 extern const NameValue setopt_nv_CURLUSESSL[];
 extern const NameValueUnsigned setopt_nv_CURLSSLOPT[];
@@ -58,20 +59,22 @@
 extern const NameValueUnsigned setopt_nv_CURLAUTH[];
 
 /* Map options to NameValue sets */
 #define setopt_nv_CURLOPT_HTTP_VERSION setopt_nv_CURL_HTTP_VERSION
 #define setopt_nv_CURLOPT_HTTPAUTH setopt_nv_CURLAUTH
 #define setopt_nv_CURLOPT_SSLVERSION setopt_nv_CURL_SSLVERSION
+#define setopt_nv_CURLOPT_PROXY_SSLVERSION setopt_nv_CURL_SSLVERSION
 #define setopt_nv_CURLOPT_TIMECONDITION setopt_nv_CURL_TIMECOND
 #define setopt_nv_CURLOPT_FTP_SSL_CCC setopt_nv_CURLFTPSSL_CCC
 #define setopt_nv_CURLOPT_USE_SSL setopt_nv_CURLUSESSL
 #define setopt_nv_CURLOPT_SSL_OPTIONS setopt_nv_CURLSSLOPT
 #define setopt_nv_CURLOPT_NETRC setopt_nv_CURL_NETRC
 #define setopt_nv_CURLOPT_PROTOCOLS setopt_nv_CURLPROTO
 #define setopt_nv_CURLOPT_REDIR_PROTOCOLS setopt_nv_CURLPROTO
 #define setopt_nv_CURLOPT_PROXYTYPE setopt_nv_CURLPROXY
+#define setopt_nv_CURLOPT_SOCKS_PROXYTYPE setopt_nv_CURL_SOCKS_PROXY
 #define setopt_nv_CURLOPT_PROXYAUTH setopt_nv_CURLAUTH
 
 /* Intercept setopt calls for --libcurl */
 
 CURLcode tool_setopt_enum(CURL *curl, struct GlobalConfig *config,
                           const char *name, CURLoption tag,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_urlglob.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_urlglob.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_urlglob.c	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_urlglob.c	2016-12-19 15:27:56.000000000 +0800
@@ -41,13 +41,13 @@
   URLPattern *pat = &glob->pattern[glob->size];
   pat->type = UPTSet;
   pat->content.Set.size = 1;
   pat->content.Set.ptr_s = 0;
   pat->globindex = -1;
 
-  pat->content.Set.elements = malloc(sizeof(char*));
+  pat->content.Set.elements = malloc(sizeof(char *));
 
   if(!pat->content.Set.elements)
     return GLOBERROR("out of memory", 0, CURLE_OUT_OF_MEMORY);
 
   pat->content.Set.elements[0] = malloc(len+1);
   if(!pat->content.Set.elements[0])
@@ -115,20 +115,20 @@
       /* fall-through */
     case ',':
 
       *buf = '\0';
       if(pat->content.Set.elements) {
         char **new_arr = realloc(pat->content.Set.elements,
-                                 (pat->content.Set.size + 1) * sizeof(char*));
+                                 (pat->content.Set.size + 1) * sizeof(char *));
         if(!new_arr)
           return GLOBERROR("out of memory", 0, CURLE_OUT_OF_MEMORY);
 
         pat->content.Set.elements = new_arr;
       }
       else
-        pat->content.Set.elements = malloc(sizeof(char*));
+        pat->content.Set.elements = malloc(sizeof(char *));
 
       if(!pat->content.Set.elements)
         return GLOBERROR("out of memory", 0, CURLE_OUT_OF_MEMORY);
 
       pat->content.Set.elements[pat->content.Set.size] =
         strdup(glob->glob_buffer);
@@ -198,24 +198,27 @@
     if(rc == 3) {
       if(end_c == ':') {
         char *endp;
         unsigned long lstep;
         errno = 0;
         lstep = strtoul(&pattern[4], &endp, 10);
-        if(errno || (*endp != ']'))
+        if(errno || &pattern[4] == endp || *endp != ']')
           step = -1;
         else {
           pattern = endp+1;
           step = (int)lstep;
           if(step > (max_c - min_c))
             step = -1;
         }
       }
       else if(end_c != ']')
         /* then this is wrong */
         rc = 0;
+      else
+        /* end_c == ']' */
+        pattern += 4;
     }
 
     *posp += (pattern - *patternp);
 
     if((rc != 3) || (min_c >= max_c) || ((max_c - min_c) > ('z' - 'a')) ||
        (step <= 0) )
@@ -415,13 +418,13 @@
     if(++glob->size >= GLOB_PATTERN_NUM)
       return GLOBERROR("too many globs", pos, CURLE_URL_MALFORMAT);
   }
   return res;
 }
 
-CURLcode glob_url(URLGlob** glob, char* url, unsigned long *urlnum,
+CURLcode glob_url(URLGlob **glob, char *url, unsigned long *urlnum,
                   FILE *error)
 {
   /*
    * We can deal with any-size, just make a buffer with the same length
    * as the specified URL!
    */
@@ -510,13 +513,13 @@
 
     /* implement a counter over the index ranges of all patterns, starting
        with the rightmost pattern */
     for(i = 0; carry && (i < glob->size); i++) {
       carry = FALSE;
       pat = &glob->pattern[glob->size - 1 - i];
-      switch (pat->type) {
+      switch(pat->type) {
       case UPTSet:
         if((pat->content.Set.elements) &&
            (++pat->content.Set.ptr_s == pat->content.Set.size)) {
           pat->content.Set.ptr_s = 0;
           carry = TRUE;
         }
@@ -625,13 +628,13 @@
             break;
           }
         }
       }
 
       if(pat) {
-        switch (pat->type) {
+        switch(pat->type) {
         case UPTSet:
           if(pat->content.Set.elements) {
             appendthis = pat->content.Set.elements[pat->content.Set.ptr_s];
             appendlen =
               strlen(pat->content.Set.elements[pat->content.Set.ptr_s]);
           }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_urlglob.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_urlglob.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_urlglob.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_urlglob.h	2016-12-19 15:27:56.000000000 +0800
@@ -4,13 +4,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -65,13 +65,13 @@
   char *glob_buffer;
   char beenhere;
   const char *error; /* error message */
   size_t pos;        /* column position of error or 0 */
 } URLGlob;
 
-CURLcode glob_url(URLGlob**, char*, unsigned long *, FILE *);
+CURLcode glob_url(URLGlob**, char *, unsigned long *, FILE *);
 CURLcode glob_next_url(char **, URLGlob *);
-CURLcode glob_match_url(char **, char*, URLGlob *);
+CURLcode glob_match_url(char **, char *, URLGlob *);
 void glob_cleanup(URLGlob* glob);
 
 #endif /* HEADER_CURL_TOOL_URLGLOB_H */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_version.h	2016-11-02 14:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_version.h	2016-12-21 14:50:26.000000000 +0800
@@ -22,13 +22,13 @@
  *
  ***************************************************************************/
 #include <curl/curlver.h>
 
 #define CURL_NAME "curl"
 #define CURL_COPYRIGHT LIBCURL_COPYRIGHT
-#define CURL_VERSION "7.51.0"
+#define CURL_VERSION "7.52.0"
 #define CURL_VERSION_MAJOR LIBCURL_VERSION_MAJOR
 #define CURL_VERSION_MINOR LIBCURL_VERSION_MINOR
 #define CURL_VERSION_PATCH LIBCURL_VERSION_PATCH
 #define CURL_ID CURL_NAME " " CURL_VERSION " (" OS ") "
 
 #endif /* HEADER_CURL_TOOL_VERSION_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_writeenv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_writeenv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_writeenv.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_writeenv.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -30,13 +30,13 @@
 #include <curl/mprintf.h>
 #include "tool_writeenv.h"
 #include "memdebug.h" /* keep this as LAST include */
 
 static const struct
 {
-  const char * name;
+  const char *name;
   CURLINFO id;
   enum {
     writeenv_NONE,
     writeenv_DOUBLE,
     writeenv_LONG,
     writeenv_STRING
@@ -56,13 +56,13 @@
   {"curl_size_upload", CURLINFO_SIZE_UPLOAD, writeenv_DOUBLE},
   {"curl_speed_download", CURLINFO_SPEED_DOWNLOAD, writeenv_DOUBLE},
   {"curl_speed_upload", CURLINFO_SPEED_UPLOAD, writeenv_DOUBLE},
   {NULL, 0, writeenv_NONE}
  };
 
-static void internalSetEnv(const char * name, char * value)
+static void internalSetEnv(const char *name, char *value)
 {
   /* Add your OS-specific code here. */
 #ifdef __riscos__
   _kernel_setenv(name, value);
 #elif defined (CURLDEBUG)
   curl_memlog("ENV %s = %s\n", name, value);
@@ -75,13 +75,13 @@
   unsigned int i;
   char *string, numtext[10];
   long longinfo;
   double doubleinfo;
 
   for(i=0; variables[i].name; i++) {
-    switch (variables[i].type) {
+    switch(variables[i].type) {
     case writeenv_STRING:
       if(curl_easy_getinfo(curl, variables[i].id, &string) == CURLE_OK)
         internalSetEnv(variables[i].name, string);
       else
         internalSetEnv(variables[i].name, NULL);
       break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_writeout.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_writeout.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/src/tool_writeout.c	2016-10-31 16:44:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/src/tool_writeout.c	2016-12-19 15:27:56.000000000 +0800
@@ -49,18 +49,20 @@
   VAR_NUM_CONNECTS,
   VAR_REDIRECT_TIME,
   VAR_REDIRECT_COUNT,
   VAR_FTP_ENTRY_PATH,
   VAR_REDIRECT_URL,
   VAR_SSL_VERIFY_RESULT,
+  VAR_PROXY_SSL_VERIFY_RESULT,
   VAR_EFFECTIVE_FILENAME,
   VAR_PRIMARY_IP,
   VAR_PRIMARY_PORT,
   VAR_LOCAL_IP,
   VAR_LOCAL_PORT,
   VAR_HTTP_VERSION,
+  VAR_SCHEME,
   VAR_NUM_OF_VARS /* must be the last */
 } replaceid;
 
 struct variable {
   const char *name;
   replaceid id;
@@ -88,18 +90,20 @@
   {"num_connects", VAR_NUM_CONNECTS},
   {"time_redirect", VAR_REDIRECT_TIME},
   {"num_redirects", VAR_REDIRECT_COUNT},
   {"ftp_entry_path", VAR_FTP_ENTRY_PATH},
   {"redirect_url", VAR_REDIRECT_URL},
   {"ssl_verify_result", VAR_SSL_VERIFY_RESULT},
+  {"proxy_ssl_verify_result", VAR_PROXY_SSL_VERIFY_RESULT},
   {"filename_effective", VAR_EFFECTIVE_FILENAME},
   {"remote_ip", VAR_PRIMARY_IP},
   {"remote_port", VAR_PRIMARY_PORT},
   {"local_ip", VAR_LOCAL_IP},
   {"local_port", VAR_LOCAL_PORT},
   {"http_version", VAR_HTTP_VERSION},
+  {"scheme", VAR_SCHEME},
   {NULL, VAR_NONE}
 };
 
 void ourWriteOut(CURL *curl, struct OutStruct *outs, const char *writeinfo)
 {
   FILE *stream = stdout;
@@ -117,15 +121,20 @@
       }
       else {
         /* this is meant as a variable to output */
         char *end;
         char keepit;
         int i;
-        if(('{' == ptr[1]) && ((end = strchr(ptr, '}')) != NULL)) {
+        if('{' == ptr[1]) {
           bool match = FALSE;
+          end = strchr(ptr, '}');
           ptr += 2; /* pass the % and the { */
+          if(!end) {
+            fputs("%{", stream);
+            continue;
+          }
           keepit = *end;
           *end = 0; /* zero terminate */
           for(i = 0; replacements[i].name; i++) {
             if(curl_strequal(ptr, replacements[i].name)) {
               match = TRUE;
               switch(replacements[i].id) {
@@ -167,47 +176,47 @@
                   fprintf(stream, "%ld", longinfo);
                 break;
               case VAR_REDIRECT_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_REDIRECT_TIME,
                                      &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_TOTAL_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_TOTAL_TIME, &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_NAMELOOKUP_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_NAMELOOKUP_TIME,
                                      &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_CONNECT_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_CONNECT_TIME, &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_APPCONNECT_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_APPCONNECT_TIME,
                                      &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_PRETRANSFER_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_PRETRANSFER_TIME,
                                      &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_STARTTRANSFER_TIME:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_STARTTRANSFER_TIME,
                                      &doubleinfo))
-                  fprintf(stream, "%.3f", doubleinfo);
+                  fprintf(stream, "%.6f", doubleinfo);
                 break;
               case VAR_SIZE_UPLOAD:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_SIZE_UPLOAD, &doubleinfo))
                   fprintf(stream, "%.0f", doubleinfo);
                 break;
@@ -249,12 +258,18 @@
               case VAR_SSL_VERIFY_RESULT:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_SSL_VERIFYRESULT,
                                      &longinfo))
                   fprintf(stream, "%ld", longinfo);
                 break;
+              case VAR_PROXY_SSL_VERIFY_RESULT:
+                if(CURLE_OK ==
+                   curl_easy_getinfo(curl, CURLINFO_PROXY_SSL_VERIFYRESULT,
+                                     &longinfo))
+                  fprintf(stream, "%ld", longinfo);
+                break;
               case VAR_EFFECTIVE_FILENAME:
                 if(outs->filename)
                   fprintf(stream, "%s", outs->filename);
                 break;
               case VAR_PRIMARY_IP:
                 if(CURLE_OK ==
@@ -282,13 +297,13 @@
                 break;
               case VAR_HTTP_VERSION:
                 if(CURLE_OK ==
                    curl_easy_getinfo(curl, CURLINFO_HTTP_VERSION,
                                      &longinfo)) {
                   const char *version = "0";
-                  switch (longinfo) {
+                  switch(longinfo) {
                   case CURL_HTTP_VERSION_1_0:
                     version = "1.0";
                     break;
                   case CURL_HTTP_VERSION_1_1:
                     version = "1.1";
                     break;
@@ -297,12 +312,18 @@
                     break;
                   }
 
                   fprintf(stream, version);
                 }
                 break;
+              case VAR_SCHEME:
+                if(CURLE_OK ==
+                   curl_easy_getinfo(curl, CURLINFO_SCHEME,
+                                     &stringp))
+                  fprintf(stream, "%s", stringp);
+                break;
               default:
                 break;
               }
               break;
             }
           }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/Makefile.in	2016-10-31 17:41:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/Makefile.in	2016-12-19 16:16:47.000000000 +0800
@@ -453,13 +453,15 @@
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
 test1220 test1221 test1222 test1223 test1224 test1225 test1226 test1227 \
 test1228 test1229 test1230 test1231 test1232 test1233 test1234 test1235 \
 test1236 test1237 test1238 test1239 test1240 test1241 test1242 test1243 \
-test1244 test1245 test1246 \
+test1244 test1245 test1246 test1247 \
+\
+test1280 test1281 \
 \
 test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
 test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
 test1316 test1317 test1318 test1319 test1320 test1321 test1322          \
          test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
 test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
@@ -474,22 +476,22 @@
 \
 test1400 test1401 test1402 test1403 test1404 test1405 test1406 test1407 \
 test1408 test1409 test1410 test1411 test1412 test1413 test1414 test1415 \
 test1416 test1417 test1418 test1419 test1420 test1421 test1422 test1423 \
 test1424 \
 test1428 test1429 test1430 test1431 test1432 test1433 test1434 test1435 \
-test1436 test1437 \
+test1436 test1437 test1438 test1439 \
 \
 test1500 test1501 test1502 test1503 test1504 test1505 test1506 test1507 \
 test1508 test1509 test1510 test1511 test1512 test1513 test1514 test1515 \
 test1516 test1517 \
 \
 test1520 \
 \
 test1525 test1526 test1527 test1528 test1529 test1530 test1531 test1532 \
-test1533 \
+test1533 test1534 test1535 test1536 \
 \
 test1600 test1601 test1602 test1603 test1604 test1605 \
 \
 test1700 test1701 test1702 \
 \
 test1800 test1801 \
@@ -499,13 +501,13 @@
 test2000 test2001 test2002 test2003 test2004 test2005 test2006 test2007 \
 test2008 test2009 test2010 test2011 test2012 test2013 test2014 test2015 \
 test2016 test2017 test2018 test2019 test2020 test2021 test2022 test2023 \
 test2024 test2025 test2026 test2027 test2028 test2029 test2030 test2031 \
 test2032 test2033 test2034 test2035 test2036 test2037 test2038 test2039 \
 test2040 test2041 test2042 test2043 test2044 test2045 test2046 test2047 \
-test2048 test2049 test2050 test2051 test2052
+test2048 test2049 test2050 test2051 test2052 test2053 test2054
 
 
 # TESTCASES are taken from Makefile.inc
 EXTRA_DIST = $(TESTCASES) DISABLED CMakeLists.txt
 all: all-am
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/Makefile.inc	2016-10-31 17:41:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/Makefile.inc	2016-12-19 15:27:56.000000000 +0800
@@ -124,13 +124,15 @@
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
 test1220 test1221 test1222 test1223 test1224 test1225 test1226 test1227 \
 test1228 test1229 test1230 test1231 test1232 test1233 test1234 test1235 \
 test1236 test1237 test1238 test1239 test1240 test1241 test1242 test1243 \
-test1244 test1245 test1246 \
+test1244 test1245 test1246 test1247 \
+\
+test1280 test1281 \
 \
 test1300 test1301 test1302 test1303 test1304 test1305 test1306 test1307 \
 test1308 test1309 test1310 test1311 test1312 test1313 test1314 test1315 \
 test1316 test1317 test1318 test1319 test1320 test1321 test1322          \
          test1325 test1326 test1327 test1328 test1329 test1330 test1331 \
 test1332 test1333 test1334 test1335 test1336 test1337 test1338 test1339 \
@@ -145,22 +147,22 @@
 \
 test1400 test1401 test1402 test1403 test1404 test1405 test1406 test1407 \
 test1408 test1409 test1410 test1411 test1412 test1413 test1414 test1415 \
 test1416 test1417 test1418 test1419 test1420 test1421 test1422 test1423 \
 test1424 \
 test1428 test1429 test1430 test1431 test1432 test1433 test1434 test1435 \
-test1436 test1437 \
+test1436 test1437 test1438 test1439 \
 \
 test1500 test1501 test1502 test1503 test1504 test1505 test1506 test1507 \
 test1508 test1509 test1510 test1511 test1512 test1513 test1514 test1515 \
 test1516 test1517 \
 \
 test1520 \
 \
 test1525 test1526 test1527 test1528 test1529 test1530 test1531 test1532 \
-test1533 \
+test1533 test1534 test1535 test1536 \
 \
 test1600 test1601 test1602 test1603 test1604 test1605 \
 \
 test1700 test1701 test1702 \
 \
 test1800 test1801 \
@@ -170,7 +172,7 @@
 test2000 test2001 test2002 test2003 test2004 test2005 test2006 test2007 \
 test2008 test2009 test2010 test2011 test2012 test2013 test2014 test2015 \
 test2016 test2017 test2018 test2019 test2020 test2021 test2022 test2023 \
 test2024 test2025 test2026 test2027 test2028 test2029 test2030 test2031 \
 test2032 test2033 test2034 test2035 test2036 test2037 test2038 test2039 \
 test2040 test2041 test2042 test2043 test2044 test2045 test2046 test2047 \
-test2048 test2049 test2050 test2051 test2052
+test2048 test2049 test2050 test2051 test2052 test2053 test2054
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1021 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1021
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1021	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1021	2016-12-19 15:27:56.000000000 +0800
@@ -24,13 +24,13 @@
 # this is returned first since we get no proxy-auth
 <connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 Content-Length: 28
 
-And you should ignore this data.
+27 bytes and newline to ign
 </connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
 <connect1002>
 HTTP/1.1 200 Things are fine in proxy land
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1060 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1060
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1060	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1060	2016-12-19 15:27:56.000000000 +0800
@@ -836,13 +836,12 @@
 
 # then this is returned when we get proxy-auth
 <connect1000>
 HTTP/1.1 200 OK swsbounce
 Server: no
 
-Nice proxy auth sir!
 </connect1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Content-Length: 40000
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1061 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1061
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1061	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1061	2016-12-19 15:27:56.000000000 +0800
@@ -841,13 +841,12 @@
 
 # then this is returned when we get proxy-auth
 <connect1000>
 HTTP/1.1 200 OK swsbounce
 Server: no
 
-Nice proxy auth sir!
 </connect1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: Digest realm="weirdorealm", nonce="12345"
 Transfer-Encoding: chunked
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1097 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1097
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1097	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1097	2016-12-19 15:27:56.000000000 +0800
@@ -12,33 +12,31 @@
 # Server-side
 <reply>
 <data>
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
 Content-Length: 27
-
+
 This is all fine and dandy
 </data>
 
+# This is the CONNECT response
 <connect1001>
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
-Content-Length: 27
-
-This is all fine and dandy
+
 </connect1001>
 
 <datacheck>
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
-Content-Length: 27
-
+
 HTTP/1.1 200 We are fine and cool
 Server: Apache/1.3.27 (Dorw1n) PHP/44.1.2
 Content-Length: 27
-
+
 This is all fine and dandy
 </datacheck>
 </reply>
 
 # Client-side
 <client>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1135
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1135	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1135	2016-12-19 15:27:56.000000000 +0800
@@ -55,13 +55,13 @@
 CURL_EXTERN CURLcode curl_easy_pause(CURL *handle, int bitmask);
 CURL_EXTERN CURL *curl_easy_init(void);
 CURL_EXTERN CURLcode curl_easy_setopt(CURL *curl, CURLoption option, ...);
 CURL_EXTERN CURLcode curl_easy_perform(CURL *curl);
 CURL_EXTERN void curl_easy_cleanup(CURL *curl);
 CURL_EXTERN CURLcode curl_easy_getinfo(CURL *curl, CURLINFO info, ...);
-CURL_EXTERN CURL* curl_easy_duphandle(CURL *curl);
+CURL_EXTERN CURL *curl_easy_duphandle(CURL *curl);
 CURL_EXTERN void curl_easy_reset(CURL *curl);
 CURL_EXTERN CURLcode curl_easy_recv(CURL *curl, void *buffer, size_t buflen,
 CURL_EXTERN CURLcode curl_easy_send(CURL *curl, const void *buffer,
 CURL_EXTERN int curl_mprintf(const char *format, ...);
 CURL_EXTERN int curl_mfprintf(FILE *fd, const char *format, ...);
 CURL_EXTERN int curl_msprintf(char *buffer, const char *format, ...);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1230
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1230	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1230	2016-12-19 15:27:56.000000000 +0800
@@ -20,20 +20,18 @@
 mooooooo
 </data>
 
 <connect>
 HTTP/1.1 200 welcome dear
 Date: Thu, 09 Nov 2010 14:49:00 GMT
-Content-Length: 0
 
 </connect>
 
 <datacheck>
 HTTP/1.1 200 welcome dear
 Date: Thu, 09 Nov 2010 14:49:00 GMT
-Content-Length: 0
 
 HTTP/1.1 200 OK
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Content-Length: 9
 
 mooooooo
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1247
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1280
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1281
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1438
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1439
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1525 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1525
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1525	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1525	2016-12-19 15:27:56.000000000 +0800
@@ -11,25 +11,23 @@
 </info>
 
 # Server-side
 <reply>
 <connect>
 HTTP/1.1 200 OK
-Content-Length: 17
 
 </connect>
 <data>
 HTTP/1.1 200 OK swsclose
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Last-Modified: Tue, 13 Jun 2000 12:10:00 GMT
 ETag: "21025-dc7-39462498"
 </data>
 <datacheck>
 HTTP/1.1 200 OK
-Content-Length: 17
 
 HTTP/1.1 200 OK swsclose
 Date: Thu, 09 Nov 2010 14:49:00 GMT
 Server: test-server/fake
 Last-Modified: Tue, 13 Jun 2000 12:10:00 GMT
 ETag: "21025-dc7-39462498"
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1534
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1535
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test1536
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1800 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1800
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1800	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1800	2016-12-19 15:27:56.000000000 +0800
@@ -45,11 +45,11 @@
 <protocol>
 GET /1800 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 Connection: Upgrade, HTTP2-Settings
 Upgrade: %H2CVER
-HTTP2-Settings: AAMAAABkAAQAAP__
+HTTP2-Settings: AAMAAABkAARAAAAA
 
 </protocol>
 </verify>
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1801 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1801
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test1801	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test1801	2016-12-19 15:27:56.000000000 +0800
@@ -55,13 +55,13 @@
 <protocol>
 GET /1801 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 Connection: Upgrade, HTTP2-Settings
 Upgrade: %H2CVER
-HTTP2-Settings: AAMAAABkAAQAAP__
+HTTP2-Settings: AAMAAABkAARAAAAA
 
 </protocol>
 # CURLE_HTTP2: Send failure: Broken pipe
 <errorcode>
 16
 </errorcode>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test2032 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test2032
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test2032	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test2032	2016-12-19 15:27:56.000000000 +0800
@@ -2,12 +2,13 @@
 <info>
 <keywords>
 HTTP
 HTTP GET
 HTTP Basic auth
 HTTP NTLM auth
+flaky
 </keywords>
 </info>
 # Server-side
 <reply>
 
 <!-- Basic auth -->
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test2053
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data: test2054
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test209
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test209	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test209	2016-12-19 15:27:56.000000000 +0800
@@ -13,12 +13,13 @@
 <reply>
 
 # this is returned first since we get no proxy-auth
 <connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
+Content-Length: 33
 
 And you should ignore this data.
 </connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
@@ -49,12 +50,13 @@
 Nice proxy auth sir!
 </data1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
+Content-Length: 33
 
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
 HTTP/1.1 200 OK
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test213
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test213	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test213	2016-12-19 15:27:56.000000000 +0800
@@ -13,12 +13,13 @@
 <reply>
 
 # this is returned first since we get no proxy-auth
 <connect1001>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
+Content-Length: 33
 
 And you should ignore this data.
 </connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
@@ -49,12 +50,13 @@
 Nice proxy auth sir!
 </data1000>
 
 <datacheck>
 HTTP/1.1 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
+Content-Length: 33
 
 HTTP/1.1 200 Things are fine in proxy land
 Server: Microsoft-IIS/5.0
 Content-Type: text/html; charset=iso-8859-1
 
 HTTP/1.1 200 OK
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test265
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test265	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test265	2016-12-19 15:27:56.000000000 +0800
@@ -16,13 +16,13 @@
 <connect1001>
 HTTP/1.0 407 Authorization Required to proxy me my dear
 Proxy-Authenticate: NTLM TlRMTVNTUAACAAAAAgACADAAAAAGgoEAc51AYVDgyNcAAAAAAAAAAG4AbgAyAAAAQ0MCAAQAQwBDAAEAEgBFAEwASQBTAEEAQgBFAFQASAAEABgAYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAwAsAGUAbABpAHMAYQBiAGUAdABoAC4AYwBjAC4AaQBjAGUAZABlAHYALgBuAHUAAAAAAA==
 Content-Length: 1033
 
 And you should ignore this data.
z

 </connect1001>
 
 # This is supposed to be returned when the server gets the second
 # Authorization: NTLM line passed-in from the client
 <connect1002>
 HTTP/1.1 200 Things are fine in proxy land
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test556 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test556
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test556	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test556	2016-12-19 15:27:56.000000000 +0800
@@ -5,13 +5,13 @@
 HTTP GET
 </keywords>
 </info>
 
 <reply>
 <data>
-HTTP/1.1 200 OK
+HTTP/1.1 200 OK swsclose
 Server: test-server/fake
 Last-Modified: Tue, 13 Jun 2000 12:10:00 GMT
 Content-Length: 6
 Connection: close
 
 -foo-
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test557 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test557
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test557	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test557	2016-12-19 15:27:56.000000000 +0800
@@ -37,10 +37,11 @@
 All curl_mprintf() unsigned int tests OK!
 All curl_mprintf() signed int tests OK!
 All curl_mprintf() unsigned long tests OK!
 All curl_mprintf() signed long tests OK!
 All curl_mprintf() curl_off_t tests OK!
 All curl_mprintf() strings tests OK!
+All float strings tests OK!
 </stdout>
 </verify>
 
 </testcase>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test558 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test558
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test558	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test558	2016-12-19 15:27:56.000000000 +0800
@@ -38,14 +38,14 @@
 <file name="log/memdump">
 FD hostip6.c: socket()
 FD connect.c: sclose()
 MEM lib558.c: malloc()
 MEM lib558.c: free()
 MEM escape.c: malloc()
-MEM escape.c: realloc()
-MEM escape.c: realloc()
+MEM strdup.c: realloc()
+MEM strdup.c: realloc()
 MEM escape.c: free()
 </file>
 <stripfile>
 s/ =.*//
 s/\(.*\)/()/
 s/:\d+/:/
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test71
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test71	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test71	2016-12-19 15:27:56.000000000 +0800
@@ -28,12 +28,13 @@
 HTTP and -F upload in config file
  </name>
 <stdin>
 -F name=daniel
 -F tool=curl
 -F file=@log/test71.txt
+user-agent = ""
 </stdin>
  <command>
 http://%HOSTIP:%HTTPPORT/we/want/71 -K -
 </command>
 # We create this file before the command is invoked!
 <file name="log/test71.txt">
@@ -43,17 +44,16 @@
 </file>
 </client>
 
 # Verify data after the test has been "shot"
 <verify>
 <strip>
-^(User-Agent:|Content-Type: multipart/form-data;|------------).*
+^(Content-Type: multipart/form-data;|------------).*
 </strip>
 <protocol>
 POST /we/want/71 HTTP/1.1
-User-Agent: curl/7.10.4 (i686-pc-linux-gnu) libcurl/7.10.4 OpenSSL/0.9.7a ipv6 zlib/1.1.3
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
 Content-Length: 408
 Expect: 100-continue
 Content-Type: multipart/form-data; boundary=----------------------------9ef8d6205763
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test864 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test864
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/data/test864	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/data/test864	2016-12-19 15:27:56.000000000 +0800
@@ -8,13 +8,13 @@
 
 #
 # Server-side
 <reply>
 <servercmd>
 CAPA APOP
-REPLY welcome +OK cURL POP3 server ready to serve <1972.987654321\@curl>
+REPLY welcome +OK curl POP3 server ready to serve <1972.987654321\@curl>
 </servercmd>
 <data>
 From: me@somewhere
 To: fake@nowhere
 
 body
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/ftpserver.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/ftpserver.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/ftpserver.pl	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/ftpserver.pl	2016-12-19 15:27:56.000000000 +0800
@@ -606,13 +606,13 @@
             'welcome' => join("",
             '        _   _ ____  _     '."\r\n",
             '    ___| | | |  _ \| |    '."\r\n",
             '   / __| | | | |_) | |    '."\r\n",
             '  | (__| |_| |  _ {| |___ '."\r\n",
             '   \___|\___/|_| \_\_____|'."\r\n",
-            '+OK cURL POP3 server ready to serve '."\r\n")
+            '+OK curl POP3 server ready to serve '."\r\n")
         );
     }
     elsif($proto eq 'imap') {
         %commandfunc = (
             'APPEND'     => \&APPEND_imap,
             'CAPABILITY' => \&CAPABILITY_imap,
@@ -640,13 +640,13 @@
             'welcome' => join("",
             '        _   _ ____  _     '."\r\n",
             '    ___| | | |  _ \| |    '."\r\n",
             '   / __| | | | |_) | |    '."\r\n",
             '  | (__| |_| |  _ {| |___ '."\r\n",
             '   \___|\___/|_| \_\_____|'."\r\n",
-            '* OK cURL IMAP server ready to serve'."\r\n")
+            '* OK curl IMAP server ready to serve'."\r\n")
         );
     }
     elsif($proto eq 'smtp') {
         %commandfunc = (
             'DATA' => \&DATA_smtp,
             'EHLO' => \&EHLO_smtp,
@@ -1054,13 +1054,13 @@
     }
 
     return 0;
 }
 
 sub QUIT_smtp {
-    sendcontrol "221 cURL $smtp_type server signing off\r\n";
+    sendcontrol "221 curl $smtp_type server signing off\r\n";
 
     return 0;
 }
 
 # What was deleted by IMAP STORE / POP3 DELE commands
 my @deleted;
@@ -1602,13 +1602,13 @@
     }
 
     return 0;
 }
 
 sub LOGOUT_imap {
-    sendcontrol "* BYE cURL IMAP server signing off\r\n";
+    sendcontrol "* BYE curl IMAP server signing off\r\n";
     sendcontrol "$cmdid OK LOGOUT completed\r\n";
 
     return 0;
 }
 
 ################
@@ -1938,13 +1938,13 @@
     if(@deleted) {
         logmsg "deleting @deleted message(s)\n";
 
         @deleted = ();
     }
 
-    sendcontrol "+OK cURL POP3 server signing off\r\n";
+    sendcontrol "+OK curl POP3 server signing off\r\n";
 
     return 0;
 }
 
 ################
 ################ FTP commands
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1500.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1500.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1500.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1500.c	2016-12-19 15:27:56.000000000 +0800
@@ -26,14 +26,14 @@
 #include "memdebug.h"
 
 #define TEST_HANG_TIMEOUT 60 * 1000
 
 int test(char *URL)
 {
-  CURL* curls = NULL;
-  CURLM* multi = NULL;
+  CURL *curls = NULL;
+  CURLM *multi = NULL;
   int still_running;
   int i = TEST_ERR_FAILURE;
   int res = 0;
   CURLMsg *msg;
 
   start_test_timing();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1502.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1502.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1502.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1502.c	2016-12-19 15:27:56.000000000 +0800
@@ -38,14 +38,14 @@
 #include "memdebug.h"
 
 #define TEST_HANG_TIMEOUT 60 * 1000
 
 int test(char *URL)
 {
-  CURL* easy = NULL;
-  CURLM* multi = NULL;
+  CURL *easy = NULL;
+  CURLM *multi = NULL;
   int still_running;
   int res = 0;
 
   char redirect[160];
 
   /* DNS cache injection */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1507.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1507.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1507.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1507.c	2016-12-19 15:27:56.000000000 +0800
@@ -65,13 +65,13 @@
 {
    int res = 0;
    CURL *curl = NULL;
    CURLM *mcurl = NULL;
    int still_running = 1;
    struct timeval mp_start;
-   struct curl_slist* rcpt_list = NULL;
+   struct curl_slist *rcpt_list = NULL;
 
    curl_global_init(CURL_GLOBAL_DEFAULT);
 
    easy_init(curl);
 
    multi_init(mcurl);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1511.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1511.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1511.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1511.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -23,13 +23,13 @@
 
 #include "memdebug.h"
 
 int test(char *URL)
 {
   long unmet;
-  CURL* curl = NULL;
+  CURL *curl = NULL;
   int res = 0;
 
   global_init(CURL_GLOBAL_ALL);
 
   easy_init(curl);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1515.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1515.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1515.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1515.c	2016-12-19 15:27:56.000000000 +0800
@@ -110,13 +110,13 @@
 
   return res;
 }
 
 int test(char *URL)
 {
-  CURLM* multi = NULL;
+  CURLM *multi = NULL;
   int res = 0;
   char *address = libtest_arg2;
   char *port = libtest_arg3;
   char *path = URL;
   char dns_entry[256];
   int i;
@@ -133,13 +133,14 @@
   for(i = 1; i <= count; i++) {
     char target_url[256];
     snprintf(target_url, sizeof(target_url),
              "http://testserver.example.com:%s/%s%04d", port, path, i);
 
     /* second request must succeed like the first one */
-    if((res = do_one_request(multi, target_url, dns_entry)))
+    res = do_one_request(multi, target_url, dns_entry);
+    if(res)
       goto test_cleanup;
 
     if(i < count)
       sleep(DNS_TIMEOUT + 1);
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1520.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1520.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1520.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1520.c	2016-12-19 15:27:56.000000000 +0800
@@ -78,13 +78,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   rcpt_list = curl_slist_append(rcpt_list, TO);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1525.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1525.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1525.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1525.c	2016-12-19 15:27:56.000000000 +0800
@@ -53,13 +53,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   hhl = curl_slist_append(hhl, "User-Agent: Http Agent");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1526.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1526.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1526.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1526.c	2016-12-19 15:27:56.000000000 +0800
@@ -51,13 +51,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   hhl = curl_slist_append(hhl, "User-Agent: Http Agent");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1527.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1527.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1527.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1527.c	2016-12-19 15:27:56.000000000 +0800
@@ -52,13 +52,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   hhl = curl_slist_append(hhl, "User-Agent: Http Agent");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1528.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1528.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1528.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1528.c	2016-12-19 15:27:56.000000000 +0800
@@ -34,13 +34,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   hhl = curl_slist_append(hhl, "User-Agent: Http Agent");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1529.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1529.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1529.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1529.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -33,13 +33,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, bURL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1530.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1530.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1530.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1530.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -43,13 +43,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, "http://99.99.99.99:9999");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1533.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1533.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib1533.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib1533.c	2016-12-19 15:27:56.000000000 +0800
@@ -133,13 +133,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(curl == NULL) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   reset_data(&data, curl);
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest: lib1534.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest: lib1535.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest: lib1536.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib500.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib500.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib500.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib500.c	2016-12-19 15:27:56.000000000 +0800
@@ -65,13 +65,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib501.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib501.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib501.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib501.c	2016-12-19 15:27:56.000000000 +0800
@@ -32,13 +32,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_HEADER, 1L);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib506.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib506.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib506.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib506.c	2016-12-19 15:27:56.000000000 +0800
@@ -47,13 +47,13 @@
   struct userdata *user = (struct userdata *)useptr;
   int locknum;
 
   (void)handle;
   (void)laccess;
 
-  switch (data) {
+  switch(data) {
     case CURL_LOCK_DATA_SHARE:
       what = "share";
       locknum = 0;
       break;
     case CURL_LOCK_DATA_DNS:
       what = "dns";
@@ -83,13 +83,13 @@
 static void my_unlock(CURL *handle, curl_lock_data data, void *useptr)
 {
   const char *what;
   struct userdata *user = (struct userdata *)useptr;
   int locknum;
   (void)handle;
-  switch (data) {
+  switch(data) {
     case CURL_LOCK_DATA_SHARE:
       what = "share";
       locknum = 0;
       break;
     case CURL_LOCK_DATA_DNS:
       what = "dns";
@@ -192,13 +192,14 @@
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* prepare share */
   printf("SHARE_INIT\n");
-  if((share = curl_share_init()) == NULL) {
+  share = curl_share_init();
+  if(!share) {
     fprintf(stderr, "curl_share_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   if(CURLSHE_OK == scode) {
@@ -227,13 +228,14 @@
     curl_share_cleanup(share);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* initial cookie manipulation */
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_share_cleanup(share);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
   printf("CURLOPT_SHARE\n");
@@ -272,13 +274,14 @@
     curl_free(tdata.url);
   }
 
 
   /* fetch a another one and save cookies */
   printf("*** run %d\n", i);
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_share_cleanup(share);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
@@ -299,13 +302,14 @@
   printf("CLEANUP\n");
   curl_easy_cleanup(curl);
   curl_free(url);
   curl_slist_free_all(headers);
 
   /* load cookies */
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_share_cleanup(share);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
   url = suburl(URL, i);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib507.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib507.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib507.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib507.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -26,14 +26,14 @@
 #include "memdebug.h"
 
 #define TEST_HANG_TIMEOUT 60 * 1000
 
 int test(char *URL)
 {
-  CURL* curls = NULL;
-  CURLM* multi = NULL;
+  CURL *curls = NULL;
+  CURLM *multi = NULL;
   int still_running;
   int i = -1;
   int res = 0;
   CURLMsg *msg;
 
   start_test_timing();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib508.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib508.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib508.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib508.c	2016-12-19 15:27:56.000000000 +0800
@@ -59,13 +59,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib509.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib509.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib509.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib509.c	2016-12-19 15:27:56.000000000 +0800
@@ -119,13 +119,14 @@
                              custom_calloc);
   if(res != CURLE_OK) {
     fprintf(stderr, "curl_global_init_mem() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_USERAGENT, "test509"); /* uses strdup() */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib510.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib510.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib510.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib510.c	2016-12-19 15:27:56.000000000 +0800
@@ -65,13 +65,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   slist = curl_slist_append(slist, "Transfer-Encoding: chunked");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib511.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib511.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib511.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib511.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib513.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib513.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib513.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib513.c	2016-12-19 15:27:56.000000000 +0800
@@ -39,13 +39,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib514.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib514.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib514.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib514.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib515.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib515.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib515.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib515.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib516.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib516.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib516.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib516.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib518.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib518.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib518.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib518.c	2016-12-19 15:27:56.000000000 +0800
@@ -486,13 +486,14 @@
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     close_file_descriptors();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     close_file_descriptors();
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib519.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib519.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib519.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib519.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib520.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib520.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib520.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib520.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib521.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib521.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib521.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib521.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib523.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib523.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib523.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib523.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib524.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib524.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib524.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib524.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib537.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib537.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib537.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib537.c	2016-12-19 15:27:56.000000000 +0800
@@ -488,13 +488,14 @@
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     close_file_descriptors();
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     close_file_descriptors();
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib539.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib539.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib539.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib539.c	2016-12-19 15:27:56.000000000 +0800
@@ -32,43 +32,44 @@
 
    if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
      fprintf(stderr, "curl_global_init() failed\n");
      return TEST_ERR_MAJOR_BAD;
    }
 
-   if((curl = curl_easy_init()) == NULL) {
+   curl = curl_easy_init();
+   if(!curl) {
      fprintf(stderr, "curl_easy_init() failed\n");
      curl_global_cleanup();
      return TEST_ERR_MAJOR_BAD;
    }
 
    /*
-    * Begin with cURL set to use a single CWD to the URL's directory.
+    * Begin with curl set to use a single CWD to the URL's directory.
     */
    test_setopt(curl, CURLOPT_URL, URL);
    test_setopt(curl, CURLOPT_VERBOSE, 1L);
    test_setopt(curl, CURLOPT_FTP_FILEMETHOD, (long) CURLFTPMETHOD_SINGLECWD);
 
    res = curl_easy_perform(curl);
 
    /*
     * Change the FTP_FILEMETHOD option to use full paths rather than a CWD
     * command.  Alter the URL's path a bit, appending a "./".  Use an innocuous
-    * QUOTE command, after which cURL will CWD to ftp_conn->entrypath and then
+    * QUOTE command, after which curl will CWD to ftp_conn->entrypath and then
     * (on the next call to ftp_statemach_act) find a non-zero ftpconn->dirdepth
     * even though no directories are stored in the ftpconn->dirs array (after a
     * call to freedirs).
     */
    newURL = aprintf("%s./", URL);
    if(newURL == NULL) {
      curl_easy_cleanup(curl);
      curl_global_cleanup();
      return TEST_ERR_MAJOR_BAD;
    }
 
-   slist = curl_slist_append (NULL, "SYST");
+   slist = curl_slist_append(NULL, "SYST");
    if(slist == NULL) {
      free(newURL);
      curl_easy_cleanup(curl);
      curl_global_cleanup();
      return TEST_ERR_MAJOR_BAD;
    }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib540.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib540.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib540.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib540.c	2016-12-19 15:27:56.000000000 +0800
@@ -45,13 +45,13 @@
 #define HOST test_argv[4]
 
 #define NUM_HANDLES 2
 
 CURL *eh[NUM_HANDLES];
 
-static int init(int num, CURLM *cm, const char* url, const char* userpwd,
+static int init(int num, CURLM *cm, const char *url, const char *userpwd,
                 struct curl_slist *headers)
 {
   int res = 0;
 
   res_easy_init(eh[num]);
   if(res)
@@ -96,13 +96,13 @@
   curl_easy_cleanup(eh[num]);
   eh[num] = NULL;
 
   return res; /* failure */
 }
 
-static int loop(int num, CURLM *cm, const char* url, const char* userpwd,
+static int loop(int num, CURLM *cm, const char *url, const char *userpwd,
                 struct curl_slist *headers)
 {
   CURLMsg *msg;
   long L;
   int Q, U = -1;
   fd_set R, W, E;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib541.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib541.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib541.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib541.c	2016-12-19 15:27:56.000000000 +0800
@@ -76,13 +76,14 @@
     fprintf(stderr, "curl_global_init() failed\n");
     fclose(hd_src);
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* get a curl handle */
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     fclose(hd_src);
     return TEST_ERR_MAJOR_BAD;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib542.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib542.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib542.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib542.c	2016-12-19 15:27:56.000000000 +0800
@@ -39,13 +39,14 @@
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* get a curl handle */
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* enable verbose */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib543.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib543.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib543.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib543.c	2016-12-19 15:27:56.000000000 +0800
@@ -33,20 +33,21 @@
 
   CURL *easy;
   int asize;
   char *s;
   (void)URL;
 
-  if((easy = curl_easy_init()) == NULL) {
+  easy = curl_easy_init();
+  if(!easy) {
     fprintf(stderr, "curl_easy_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
   asize = (int)sizeof(a);
 
-  s = curl_easy_escape(easy, (char*)a, asize);
+  s = curl_easy_escape(easy, (char *)a, asize);
 
   if(s)
     printf("%s\n", s);
 
   if(s)
     curl_free(s);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib544.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib544.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib544.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib544.c	2016-12-19 15:27:56.000000000 +0800
@@ -44,13 +44,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib547.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib547.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib547.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib547.c	2016-12-19 15:27:56.000000000 +0800
@@ -87,13 +87,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib549.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib549.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib549.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib549.c	2016-12-19 15:27:56.000000000 +0800
@@ -35,13 +35,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_PROXY, libtest_arg2);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib552.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib552.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib552.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib552.c	2016-12-19 15:27:56.000000000 +0800
@@ -86,13 +86,13 @@
              void *userp)
 {
   struct data *config = (struct data *)userp;
   const char *text;
   (void)handle; /* prevent compiler warning */
 
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "== Info: %s", (char *)data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
@@ -144,13 +144,13 @@
   printf("%.*s", amount, (char *)ptr);
   (void)stream;
   return size * nmemb;
 }
 
 
-static curlioerr ioctl_callback(CURL * handle, int cmd, void *clientp)
+static curlioerr ioctl_callback(CURL *handle, int cmd, void *clientp)
 {
   (void)clientp;
   if(cmd == CURLIOCMD_RESTARTREAD) {
     printf("APPLICATION: recieved a CURLIOCMD_RESTARTREAD request\n");
     printf("APPLICATION: ** REWINDING! **\n");
     current_offset = 0;
@@ -169,13 +169,14 @@
   struct data config;
   size_t i;
   static const char fill[] = "test data";
 
   config.trace_ascii = 1; /* enable ascii tracing */
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_DEBUGFUNCTION, my_trace);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib553.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib553.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib553.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib553.c	2016-12-19 15:27:56.000000000 +0800
@@ -64,13 +64,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   for(i = 0; i < NUM_HEADERS; i++) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib554.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib554.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib554.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib554.c	2016-12-19 15:27:56.000000000 +0800
@@ -159,13 +159,14 @@
                         CURLFORM_BUFFERLENGTH, (long)9,
                         CURLFORM_END);
 
   if(formrc)
     printf("curl_formadd(4) = %d\n", (int)formrc);
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_formfree(formpost);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib556.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib556.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib556.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib556.c	2016-12-19 15:27:56.000000000 +0800
@@ -42,13 +42,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
@@ -73,31 +74,32 @@
     char buf[1024];
 
     res = curl_easy_send(curl, request, strlen(request), &iolen);
 
     if(!res) {
       /* we assume that sending always work */
-      size_t total=0;
 
       do {
         /* busy-read like crazy */
-        res = curl_easy_recv(curl, buf, 1024, &iolen);
+        res = curl_easy_recv(curl, buf, sizeof(buf), &iolen);
 
 #ifdef TPF
         sleep(1); /* avoid ctl-10 dump */
 #endif
 
         if(iolen) {
           /* send received stuff to stdout */
           if(!write(STDOUT_FILENO, buf, iolen))
             break;
         }
-        total += iolen;
 
-      } while(((res == CURLE_OK) || (res == CURLE_AGAIN)) && (total < 129));
+      } while((res == CURLE_OK && iolen != 0) || (res == CURLE_AGAIN));
     }
+
+    if(res != CURLE_OK || iolen != 0)
+      return TEST_ERR_FAILURE;
   }
 
 test_cleanup:
 
   curl_easy_cleanup(curl);
   curl_global_cleanup();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib557.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib557.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib557.c	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib557.c	2016-12-19 15:27:56.000000000 +0800
@@ -1371,22 +1371,37 @@
   else
     printf("Some curl_mprintf() curl_off_t tests Failed!\n");
 
   return failed;
 }
 
-static int string_check(char *buf, const char *buf2)
+static int _string_check(int linenumber, char *buf, const char *buf2)
 {
   if(strcmp(buf, buf2)) {
     /* they shouldn't differ */
-    printf("sprintf failed:\nwe '%s'\nsystem: '%s'\n",
-           buf, buf2);
+    printf("sprintf line %d failed:\nwe      '%s'\nsystem: '%s'\n",
+           linenumber, buf, buf2);
     return 1;
   }
   return 0;
 }
+#define string_check(x,y) _string_check(__LINE__, x, y)
+
+static int _strlen_check(int linenumber, char *buf, size_t len)
+{
+  size_t buflen = strlen(buf);
+  if(len != buflen) {
+    /* they shouldn't differ */
+    printf("sprintf strlen:%d failed:\nwe '%d'\nsystem: '%d'\n",
+           linenumber, buflen, len);
+    return 1;
+  }
+  return 0;
+}
+
+#define strlen_check(x,y) _strlen_check(__LINE__, x, y)
 
 /*
  * The output strings in this test need to have been verified with a system
  * sprintf() before used here.
  */
 static int test_string_formatting(void)
@@ -1520,12 +1535,125 @@
   if(errors)
     printf("Some curl_mprintf() weird arguments tests failed!\n");
 
   return errors;
 }
 
+/* DBL_MAX value from Linux */
+#define MAXIMIZE -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000
+
+static int test_float_formatting(void)
+{
+  int errors = 0;
+  char buf[512]; /* larger than max float size */
+  curl_msnprintf(buf, sizeof(buf), "%f", 9.0);
+  errors += string_check(buf, "9.000000");
+
+  curl_msnprintf(buf, sizeof(buf), "%.1f", 9.1);
+  errors += string_check(buf, "9.1");
+
+  curl_msnprintf(buf, sizeof(buf), "%.2f", 9.1);
+  errors += string_check(buf, "9.10");
+
+  curl_msnprintf(buf, sizeof(buf), "%.0f", 9.1);
+  errors += string_check(buf, "9");
+
+  curl_msnprintf(buf, sizeof(buf), "%0f", 9.1);
+  errors += string_check(buf, "9.100000");
+
+  curl_msnprintf(buf, sizeof(buf), "%10f", 9.1);
+  errors += string_check(buf, "  9.100000");
+
+  curl_msnprintf(buf, sizeof(buf), "%10.3f", 9.1);
+  errors += string_check(buf, "     9.100");
+
+  curl_msnprintf(buf, sizeof(buf), "%-10.3f", 9.1);
+  errors += string_check(buf, "9.100     ");
+
+  curl_msnprintf(buf, sizeof(buf), "%-10.3f", 9.123456);
+  errors += string_check(buf, "9.123     ");
+
+  curl_msnprintf(buf, sizeof(buf), "%.-2f", 9.1);
+  errors += string_check(buf, "9.100000");
+
+  curl_msnprintf(buf, sizeof(buf), "%*f", 10, 9.1);
+  errors += string_check(buf, "  9.100000");
+
+  curl_msnprintf(buf, sizeof(buf), "%*f", 3, 9.1);
+  errors += string_check(buf, "9.100000");
+
+  curl_msnprintf(buf, sizeof(buf), "%*f", 6, 9.2987654);
+  errors += string_check(buf, "9.298765");
+
+  curl_msnprintf(buf, sizeof(buf), "%*f", 6, 9.298765);
+  errors += string_check(buf, "9.298765");
+
+  curl_msnprintf(buf, sizeof(buf), "%*f", 6, 9.29876);
+  errors += string_check(buf, "9.298760");
+
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 6, 9.2987654);
+  errors += string_check(buf, "9.298765");
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 5, 9.2987654);
+  errors += string_check(buf, "9.29877");
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 4, 9.2987654);
+  errors += string_check(buf, "9.2988");
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 3, 9.2987654);
+  errors += string_check(buf, "9.299");
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 2, 9.2987654);
+  errors += string_check(buf, "9.30");
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 1, 9.2987654);
+  errors += string_check(buf, "9.3");
+  curl_msnprintf(buf, sizeof(buf), "%.*f", 0, 9.2987654);
+  errors += string_check(buf, "9");
+
+  /* very large precisions easily turn into system specific outputs so we only
+     check the output buffer length here as we know the internal limit */
+
+  curl_msnprintf(buf, sizeof(buf), "%.*f", (1<<30), 9.2987654);
+  errors += strlen_check(buf, 325);
+
+  curl_msnprintf(buf, sizeof(buf), "%10000.10000f", 9.2987654);
+  errors += strlen_check(buf, 325);
+
+  curl_msnprintf(buf, sizeof(buf), "%240.10000f",
+                 123456789123456789123456789.2987654);
+  errors += strlen_check(buf, 325);
+
+  /* 1<<31 turns negative (-2147483648) when used signed */
+  curl_msnprintf(buf, sizeof(buf), "%*f", (1<<31), 9.1);
+  errors += string_check(buf, "9.100000");
+
+  /* curl_msnprintf() limits a single float output to 325 bytes maximum
+     width */
+  curl_msnprintf(buf, sizeof(buf), "%*f", (1<<30), 9.1);
+  errors += string_check(buf, "                                                                                                                                                                                                                                                                                                                             9.100000");
+  curl_msnprintf(buf, sizeof(buf), "%100000f", 9.1);
+  errors += string_check(buf, "                                                                                                                                                                                                                                                                                                                             9.100000");
+
+  curl_msnprintf(buf, sizeof(buf), "%f", MAXIMIZE);
+  errors += strlen_check(buf, 317);
+
+  curl_msnprintf(buf, 2, "%f", MAXIMIZE);
+  errors += strlen_check(buf, 1);
+  curl_msnprintf(buf, 3, "%f", MAXIMIZE);
+  errors += strlen_check(buf, 2);
+  curl_msnprintf(buf, 4, "%f", MAXIMIZE);
+  errors += strlen_check(buf, 3);
+  curl_msnprintf(buf, 5, "%f", MAXIMIZE);
+  errors += strlen_check(buf, 4);
+  curl_msnprintf(buf, 6, "%f", MAXIMIZE);
+  errors += strlen_check(buf, 5);
+
+  if(!errors)
+    printf("All float strings tests OK!\n");
+  else
+    printf("test_float_formatting Failed!\n");
+
+  return errors;
+}
+
 
 int test(char *URL)
 {
   int errors = 0;
   (void)URL; /* not used */
 
@@ -1544,11 +1672,13 @@
   errors += test_signed_long_formatting();
 
   errors += test_curl_off_t_formatting();
 
   errors += test_string_formatting();
 
+  errors += test_float_formatting();
+
   if(errors)
     return TEST_ERR_MAJOR_BAD;
   else
     return 0;
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib562.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib562.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib562.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib562.c	2016-12-19 15:27:56.000000000 +0800
@@ -43,13 +43,14 @@
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* get a curl handle */
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* enable verbose */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib566.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib566.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib566.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib566.c	2016-12-19 15:27:56.000000000 +0800
@@ -32,13 +32,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib567.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib567.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib567.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib567.c	2016-12-19 15:27:56.000000000 +0800
@@ -34,13 +34,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* Dump data to stdout for protocol verification */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib568.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib568.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib568.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib568.c	2016-12-19 15:27:56.000000000 +0800
@@ -52,24 +52,26 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_HEADERDATA, stdout);
   test_setopt(curl, CURLOPT_WRITEDATA, stdout);
 
   test_setopt(curl, CURLOPT_URL, URL);
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -97,13 +99,14 @@
 
   test_setopt(curl, CURLOPT_UPLOAD, 0L);
   fclose(sdpf);
   sdpf = NULL;
 
   /* Make sure we can do a normal request now */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -112,13 +115,14 @@
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
   /* Now do a POST style one */
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -141,13 +145,14 @@
   test_setopt(curl, CURLOPT_POSTFIELDS, NULL);
   test_setopt(curl, CURLOPT_RTSPHEADER, NULL);
   curl_slist_free_all(custom_headers);
   custom_headers = NULL;
 
   /* Make sure we can do a normal request now */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib569.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib569.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib569.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib569.c	2016-12-19 15:27:56.000000000 +0800
@@ -50,13 +50,14 @@
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     fclose(idfile);
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     fclose(idfile);
     return TEST_ERR_MAJOR_BAD;
   }
 
@@ -74,13 +75,14 @@
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
 
   /* Go through the various Session IDs */
   for(i = 0; i < 3; i++) {
-    if((stream_uri = suburl(URL, request++)) == NULL) {
+    stream_uri = suburl(URL, request++);
+    if(!stream_uri) {
       res = TEST_ERR_MAJOR_BAD;
       goto test_cleanup;
     }
     test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
     free(stream_uri);
     stream_uri = NULL;
@@ -93,13 +95,14 @@
       goto test_cleanup;
 
     curl_easy_getinfo(curl, CURLINFO_RTSP_SESSION_ID, &rtsp_session_id);
     fprintf(idfile, "Got Session ID: [%s]\n", rtsp_session_id);
     rtsp_session_id = NULL;
 
-    if((stream_uri = suburl(URL, request++)) == NULL) {
+    stream_uri = suburl(URL, request++);
+    if(!stream_uri) {
       res = TEST_ERR_MAJOR_BAD;
       goto test_cleanup;
     }
     test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
     free(stream_uri);
     stream_uri = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib570.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib570.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib570.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib570.c	2016-12-19 15:27:56.000000000 +0800
@@ -37,13 +37,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_HEADERDATA, stdout);
@@ -51,13 +52,14 @@
   test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   test_setopt(curl, CURLOPT_URL, URL);
 
   test_setopt(curl, CURLOPT_RTSP_REQUEST, CURL_RTSPREQ_OPTIONS);
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -71,13 +73,14 @@
 
   test_setopt(curl, CURLOPT_RTSP_CLIENT_CSEQ, 999L);
   test_setopt(curl, CURLOPT_RTSP_TRANSPORT,
                     "RAW/RAW/UDP;unicast;client_port=3056-3057");
   test_setopt(curl, CURLOPT_RTSP_REQUEST, CURL_RTSPREQ_SETUP);
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -85,13 +88,14 @@
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
   test_setopt(curl, CURLOPT_RTSP_REQUEST, CURL_RTSPREQ_PLAY);
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib571.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib571.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib571.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib571.c	2016-12-19 15:27:56.000000000 +0800
@@ -47,13 +47,14 @@
 
 #define RTP_DATA_SIZE 12
 static const char *RTP_DATA = "$_1234\n\0asdf";
 
 static int rtp_packet_count = 0;
 
-static size_t rtp_write(void *ptr, size_t size, size_t nmemb, void *stream) {
+static size_t rtp_write(void *ptr, size_t size, size_t nmemb, void *stream)
+{
   char *data = (char *)ptr;
   int channel = RTP_PKT_CHANNEL(data);
   int message_size;
   int coded_size = RTP_PKT_LENGTH(data);
   size_t failure = (size * nmemb) ? 0 : 1;
   int i;
@@ -114,21 +115,23 @@
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     fclose(protofile);
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     fclose(protofile);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
   test_setopt(curl, CURLOPT_URL, URL);
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -143,13 +146,14 @@
 
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
   /* This PLAY starts the interleave */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -157,26 +161,28 @@
 
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
   /* The DESCRIBE request will try to consume data after the Content */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
   test_setopt(curl, CURLOPT_RTSP_REQUEST, CURL_RTSPREQ_DESCRIBE);
 
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib572.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib572.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib572.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib572.c	2016-12-19 15:27:56.000000000 +0800
@@ -52,13 +52,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
 
@@ -66,13 +67,14 @@
   test_setopt(curl, CURLOPT_WRITEDATA, stdout);
   test_setopt(curl, CURLOPT_VERBOSE, 1L);
 
   test_setopt(curl, CURLOPT_URL, URL);
 
   /* SETUP */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -80,13 +82,14 @@
   test_setopt(curl, CURLOPT_RTSP_TRANSPORT, "Planes/Trains/Automobiles");
   test_setopt(curl, CURLOPT_RTSP_REQUEST, CURL_RTSPREQ_SETUP);
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -114,13 +117,14 @@
 
   test_setopt(curl, CURLOPT_UPLOAD, 0L);
   fclose(paramsf);
   paramsf = NULL;
 
   /* Heartbeat GET_PARAMETERS */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -128,13 +132,14 @@
   res = curl_easy_perform(curl);
   if(res)
     goto test_cleanup;
 
   /* POST GET_PARAMETERS */
 
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
@@ -146,13 +151,14 @@
   if(res)
     goto test_cleanup;
 
   test_setopt(curl, CURLOPT_POSTFIELDS, NULL);
 
   /* Make sure we can do a normal request now */
-  if((stream_uri = suburl(URL, request++)) == NULL) {
+  stream_uri = suburl(URL, request++);
+  if(!stream_uri) {
     res = TEST_ERR_MAJOR_BAD;
     goto test_cleanup;
   }
   test_setopt(curl, CURLOPT_RTSP_STREAM_URI, stream_uri);
   free(stream_uri);
   stream_uri = NULL;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib574.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib574.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib574.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib574.c	2016-12-19 15:27:56.000000000 +0800
@@ -37,13 +37,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib578.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib578.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib578.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib578.c	2016-12-19 15:27:56.000000000 +0800
@@ -55,13 +55,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib579.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib579.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib579.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib579.c	2016-12-19 15:27:56.000000000 +0800
@@ -94,13 +94,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   slist = curl_slist_append(slist, "Transfer-Encoding: chunked");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib582.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib582.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib582.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib582.c	2016-12-19 15:27:56.000000000 +0800
@@ -142,16 +142,16 @@
   return 0;
 }
 
 /**
  * Check for curl completion.
  */
-static int checkForCompletion(CURLM* curl, int* success)
+static int checkForCompletion(CURLM *curl, int *success)
 {
   int numMessages;
-  CURLMsg* message;
+  CURLMsg *message;
   int result = 0;
   *success = 0;
   while((message = curl_multi_info_read(curl, &numMessages)) != NULL) {
     if(message->msg == CURLMSG_DONE) {
       result = 1;
       if(message->data.result == CURLE_OK)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib583.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib583.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib583.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib583.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -30,14 +30,14 @@
 
 #include "memdebug.h"
 
 int test(char *URL)
 {
   int stillRunning;
-  CURLM* multiHandle = NULL;
-  CURL* curl = NULL;
+  CURLM *multiHandle = NULL;
+  CURL *curl = NULL;
   int res = 0;
 
   global_init(CURL_GLOBAL_ALL);
 
   multi_init(multiHandle);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib586.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib586.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib586.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib586.c	2016-12-19 15:27:56.000000000 +0800
@@ -42,13 +42,13 @@
   const char *what;
   struct userdata *user = (struct userdata *)useptr;
 
   (void)handle;
   (void)laccess;
 
-  switch (data) {
+  switch(data) {
     case CURL_LOCK_DATA_SHARE:
       what = "share";
       break;
     case CURL_LOCK_DATA_DNS:
       what = "dns";
       break;
@@ -69,13 +69,13 @@
 /* unlock callback */
 static void my_unlock(CURL *handle, curl_lock_data data, void *useptr)
 {
   const char *what;
   struct userdata *user = (struct userdata *)useptr;
   (void)handle;
-  switch ( data) {
+  switch(data) {
     case CURL_LOCK_DATA_SHARE:
       what = "share";
       break;
     case CURL_LOCK_DATA_DNS:
       what = "dns";
       break;
@@ -98,13 +98,14 @@
 {
   CURLcode code;
   struct Tdata *tdata = (struct Tdata*)ptr;
   CURL *curl;
   int i=0;
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     return NULL;
   }
 
   curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, 0L);
   curl_easy_setopt(curl, CURLOPT_VERBOSE,    1L);
@@ -145,13 +146,14 @@
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* prepare share */
   printf("SHARE_INIT\n");
-  if((share = curl_share_init()) == NULL) {
+  share = curl_share_init();
+  if(!share) {
     fprintf(stderr, "curl_share_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   if(CURLSHE_OK == scode) {
@@ -194,13 +196,14 @@
     fire(&tdata);
   }
 
 
   /* fetch a another one */
   printf("*** run %d\n", i);
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_share_cleanup(share);
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib590.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib590.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib590.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib590.c	2016-12-19 15:27:56.000000000 +0800
@@ -43,13 +43,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib598.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib598.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib598.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib598.c	2016-12-19 15:27:56.000000000 +0800
@@ -30,13 +30,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   test_setopt(curl, CURLOPT_URL, URL);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib599.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib599.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/lib599.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/lib599.c	2016-12-19 15:27:56.000000000 +0800
@@ -47,13 +47,14 @@
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* First set the URL that is about to receive our POST. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/libauthretry.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/libauthretry.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/libauthretry.c	2016-10-31 19:48:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/libauthretry.c	2016-12-19 15:27:56.000000000 +0800
@@ -29,13 +29,13 @@
 
 static CURLcode send_request(CURL *curl, const char *url, int seq,
                              long auth_scheme, const char *userpwd)
 {
   CURLcode res;
   size_t len = strlen(url) + 4 + 1;
-  char* full_url = malloc(len);
+  char *full_url = malloc(len);
   if(!full_url) {
     fprintf(stderr, "Not enough memory for full url\n");
     return CURLE_OUT_OF_MEMORY;
   }
 
   snprintf(full_url, len, "%s%04d", url, seq);
@@ -98,13 +98,14 @@
     fprintf(stderr, "curl_global_init() failed\n");
     return TEST_ERR_MAJOR_BAD;
   }
 
   /* Send wrong password, then right password */
 
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   res = send_wrong_password(curl, url, 100, main_auth_scheme);
@@ -117,14 +118,14 @@
     goto test_cleanup;
   curl_easy_reset(curl);
 
   curl_easy_cleanup(curl);
 
   /* Send wrong password twice, then right password */
-
-  if((curl = curl_easy_init()) == NULL) {
+  curl = curl_easy_init();
+  if(!curl) {
     fprintf(stderr, "curl_easy_init() failed\n");
     curl_global_cleanup();
     return TEST_ERR_MAJOR_BAD;
   }
 
   res = send_wrong_password(curl, url, 300, main_auth_scheme);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/libntlmconnect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/libntlmconnect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/libntlmconnect.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/libntlmconnect.c	2016-12-19 15:27:56.000000000 +0800
@@ -34,13 +34,13 @@
 #define MAX_EASY_HANDLES 3
 
 static CURL *easy[MAX_EASY_HANDLES];
 static curl_socket_t sockets[MAX_EASY_HANDLES];
 static int res = 0;
 
-static size_t callback(char* ptr, size_t size, size_t nmemb, void* data)
+static size_t callback(char *ptr, size_t size, size_t nmemb, void *data)
 {
   ssize_t idx = ((CURL **) data) - easy;
   curl_socket_t sock;
   long longdata;
   CURLcode code;
 
@@ -101,13 +101,13 @@
   CURLM *multi = NULL;
   int running;
   int i, j;
   int num_handles = 0;
   enum HandleState state = ReadyForNewHandle;
   size_t urllen = strlen(url) + 4 + 1;
-  char* full_url = malloc(urllen);
+  char *full_url = malloc(urllen);
 
   start_test_timing();
 
   if(!full_url) {
     fprintf(stderr, "Not enough memory for full url\n");
     return TEST_ERR_MAJOR_BAD;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/Makefile.in	2016-10-31 17:41:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/Makefile.in	2016-12-19 16:16:48.000000000 +0800
@@ -122,12 +122,13 @@
 	lib1509$(EXEEXT) lib1510$(EXEEXT) lib1511$(EXEEXT) \
 	lib1512$(EXEEXT) lib1513$(EXEEXT) lib1514$(EXEEXT) \
 	lib1515$(EXEEXT) lib1517$(EXEEXT) lib1520$(EXEEXT) \
 	lib1525$(EXEEXT) lib1526$(EXEEXT) lib1527$(EXEEXT) \
 	lib1528$(EXEEXT) lib1529$(EXEEXT) lib1530$(EXEEXT) \
 	lib1531$(EXEEXT) lib1532$(EXEEXT) lib1533$(EXEEXT) \
+	lib1534$(EXEEXT) lib1535$(EXEEXT) lib1536$(EXEEXT) \
 	lib1900$(EXEEXT) lib2033$(EXEEXT)
 @USE_CPPFLAG_CURL_STATICLIB_TRUE@am__append_1 = -DCURL_STATICLIB
 @CURL_LT_SHLIB_USE_NO_UNDEFINED_TRUE@am__append_2 = -no-undefined
 @CURL_LT_SHLIB_USE_MIMPURE_TEXT_TRUE@am__append_3 = -mimpure-text
 @DOING_CURL_SYMBOL_HIDING_TRUE@am__append_4 = -DCURL_HIDDEN_SYMBOLS
 @DOING_CURL_SYMBOL_HIDING_TRUE@am__append_5 = $(CFLAG_CURL_SYMBOL_HIDING)
@@ -360,479 +361,500 @@
 am__objects_75 = lib1533-testutil.$(OBJEXT)
 am__objects_76 = ../../lib/lib1533-warnless.$(OBJEXT)
 am_lib1533_OBJECTS = lib1533-lib1533.$(OBJEXT) $(am__objects_74) \
 	$(am__objects_75) $(am__objects_76)
 lib1533_OBJECTS = $(am_lib1533_OBJECTS)
 lib1533_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_77 = lib1900-first.$(OBJEXT)
-am__objects_78 = lib1900-testutil.$(OBJEXT)
-am__objects_79 = ../../lib/lib1900-warnless.$(OBJEXT)
-am_lib1900_OBJECTS = lib1900-lib1900.$(OBJEXT) $(am__objects_77) \
+am__objects_77 = lib1534-first.$(OBJEXT)
+am__objects_78 = lib1534-testutil.$(OBJEXT)
+am__objects_79 = ../../lib/lib1534-warnless.$(OBJEXT)
+am_lib1534_OBJECTS = lib1534-lib1534.$(OBJEXT) $(am__objects_77) \
 	$(am__objects_78) $(am__objects_79)
+lib1534_OBJECTS = $(am_lib1534_OBJECTS)
+lib1534_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_80 = lib1535-first.$(OBJEXT)
+am__objects_81 = lib1535-testutil.$(OBJEXT)
+am__objects_82 = ../../lib/lib1535-warnless.$(OBJEXT)
+am_lib1535_OBJECTS = lib1535-lib1535.$(OBJEXT) $(am__objects_80) \
+	$(am__objects_81) $(am__objects_82)
+lib1535_OBJECTS = $(am_lib1535_OBJECTS)
+lib1535_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_83 = lib1536-first.$(OBJEXT)
+am__objects_84 = lib1536-testutil.$(OBJEXT)
+am__objects_85 = ../../lib/lib1536-warnless.$(OBJEXT)
+am_lib1536_OBJECTS = lib1536-lib1536.$(OBJEXT) $(am__objects_83) \
+	$(am__objects_84) $(am__objects_85)
+lib1536_OBJECTS = $(am_lib1536_OBJECTS)
+lib1536_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__objects_86 = lib1900-first.$(OBJEXT)
+am__objects_87 = lib1900-testutil.$(OBJEXT)
+am__objects_88 = ../../lib/lib1900-warnless.$(OBJEXT)
+am_lib1900_OBJECTS = lib1900-lib1900.$(OBJEXT) $(am__objects_86) \
+	$(am__objects_87) $(am__objects_88)
 lib1900_OBJECTS = $(am_lib1900_OBJECTS)
 lib1900_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_80 = lib2033-first.$(OBJEXT)
-am__objects_81 = lib2033-testutil.$(OBJEXT)
-am__objects_82 = ../../lib/lib2033-warnless.$(OBJEXT)
+am__objects_89 = lib2033-first.$(OBJEXT)
+am__objects_90 = lib2033-testutil.$(OBJEXT)
+am__objects_91 = ../../lib/lib2033-warnless.$(OBJEXT)
 am_lib2033_OBJECTS = lib2033-libntlmconnect.$(OBJEXT) \
-	$(am__objects_80) $(am__objects_81) $(am__objects_82)
+	$(am__objects_89) $(am__objects_90) $(am__objects_91)
 lib2033_OBJECTS = $(am_lib2033_OBJECTS)
 lib2033_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_83 = lib500-first.$(OBJEXT)
-am__objects_84 = lib500-testutil.$(OBJEXT)
-am__objects_85 = lib500-testtrace.$(OBJEXT)
-am_lib500_OBJECTS = lib500-lib500.$(OBJEXT) $(am__objects_83) \
-	$(am__objects_84) $(am__objects_85)
+am__objects_92 = lib500-first.$(OBJEXT)
+am__objects_93 = lib500-testutil.$(OBJEXT)
+am__objects_94 = lib500-testtrace.$(OBJEXT)
+am_lib500_OBJECTS = lib500-lib500.$(OBJEXT) $(am__objects_92) \
+	$(am__objects_93) $(am__objects_94)
 lib500_OBJECTS = $(am_lib500_OBJECTS)
 lib500_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_86 = lib501-first.$(OBJEXT)
-am_lib501_OBJECTS = lib501-lib501.$(OBJEXT) $(am__objects_86)
+am__objects_95 = lib501-first.$(OBJEXT)
+am_lib501_OBJECTS = lib501-lib501.$(OBJEXT) $(am__objects_95)
 lib501_OBJECTS = $(am_lib501_OBJECTS)
 lib501_LDADD = $(LDADD)
 lib501_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_87 = lib502-first.$(OBJEXT)
-am__objects_88 = lib502-testutil.$(OBJEXT)
-am__objects_89 = ../../lib/lib502-warnless.$(OBJEXT)
-am_lib502_OBJECTS = lib502-lib502.$(OBJEXT) $(am__objects_87) \
-	$(am__objects_88) $(am__objects_89)
+am__objects_96 = lib502-first.$(OBJEXT)
+am__objects_97 = lib502-testutil.$(OBJEXT)
+am__objects_98 = ../../lib/lib502-warnless.$(OBJEXT)
+am_lib502_OBJECTS = lib502-lib502.$(OBJEXT) $(am__objects_96) \
+	$(am__objects_97) $(am__objects_98)
 lib502_OBJECTS = $(am_lib502_OBJECTS)
 lib502_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_90 = lib503-first.$(OBJEXT)
-am__objects_91 = lib503-testutil.$(OBJEXT)
-am__objects_92 = ../../lib/lib503-warnless.$(OBJEXT)
-am_lib503_OBJECTS = lib503-lib503.$(OBJEXT) $(am__objects_90) \
-	$(am__objects_91) $(am__objects_92)
+am__objects_99 = lib503-first.$(OBJEXT)
+am__objects_100 = lib503-testutil.$(OBJEXT)
+am__objects_101 = ../../lib/lib503-warnless.$(OBJEXT)
+am_lib503_OBJECTS = lib503-lib503.$(OBJEXT) $(am__objects_99) \
+	$(am__objects_100) $(am__objects_101)
 lib503_OBJECTS = $(am_lib503_OBJECTS)
 lib503_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_93 = lib504-first.$(OBJEXT)
-am__objects_94 = lib504-testutil.$(OBJEXT)
-am__objects_95 = ../../lib/lib504-warnless.$(OBJEXT)
-am_lib504_OBJECTS = lib504-lib504.$(OBJEXT) $(am__objects_93) \
-	$(am__objects_94) $(am__objects_95)
+am__objects_102 = lib504-first.$(OBJEXT)
+am__objects_103 = lib504-testutil.$(OBJEXT)
+am__objects_104 = ../../lib/lib504-warnless.$(OBJEXT)
+am_lib504_OBJECTS = lib504-lib504.$(OBJEXT) $(am__objects_102) \
+	$(am__objects_103) $(am__objects_104)
 lib504_OBJECTS = $(am_lib504_OBJECTS)
 lib504_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_96 = lib505-first.$(OBJEXT)
-am_lib505_OBJECTS = lib505-lib505.$(OBJEXT) $(am__objects_96)
+am__objects_105 = lib505-first.$(OBJEXT)
+am_lib505_OBJECTS = lib505-lib505.$(OBJEXT) $(am__objects_105)
 lib505_OBJECTS = $(am_lib505_OBJECTS)
 lib505_LDADD = $(LDADD)
 lib505_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_97 = lib506-first.$(OBJEXT)
-am_lib506_OBJECTS = lib506-lib506.$(OBJEXT) $(am__objects_97)
+am__objects_106 = lib506-first.$(OBJEXT)
+am_lib506_OBJECTS = lib506-lib506.$(OBJEXT) $(am__objects_106)
 lib506_OBJECTS = $(am_lib506_OBJECTS)
 lib506_LDADD = $(LDADD)
 lib506_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_98 = lib507-first.$(OBJEXT)
-am__objects_99 = lib507-testutil.$(OBJEXT)
-am__objects_100 = ../../lib/lib507-warnless.$(OBJEXT)
-am_lib507_OBJECTS = lib507-lib507.$(OBJEXT) $(am__objects_98) \
-	$(am__objects_99) $(am__objects_100)
+am__objects_107 = lib507-first.$(OBJEXT)
+am__objects_108 = lib507-testutil.$(OBJEXT)
+am__objects_109 = ../../lib/lib507-warnless.$(OBJEXT)
+am_lib507_OBJECTS = lib507-lib507.$(OBJEXT) $(am__objects_107) \
+	$(am__objects_108) $(am__objects_109)
 lib507_OBJECTS = $(am_lib507_OBJECTS)
 lib507_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_101 = lib508-first.$(OBJEXT)
-am_lib508_OBJECTS = lib508-lib508.$(OBJEXT) $(am__objects_101)
+am__objects_110 = lib508-first.$(OBJEXT)
+am_lib508_OBJECTS = lib508-lib508.$(OBJEXT) $(am__objects_110)
 lib508_OBJECTS = $(am_lib508_OBJECTS)
 lib508_LDADD = $(LDADD)
 lib508_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_102 = lib509-first.$(OBJEXT)
-am_lib509_OBJECTS = lib509-lib509.$(OBJEXT) $(am__objects_102)
+am__objects_111 = lib509-first.$(OBJEXT)
+am_lib509_OBJECTS = lib509-lib509.$(OBJEXT) $(am__objects_111)
 lib509_OBJECTS = $(am_lib509_OBJECTS)
 lib509_LDADD = $(LDADD)
 lib509_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_103 = lib510-first.$(OBJEXT)
-am_lib510_OBJECTS = lib510-lib510.$(OBJEXT) $(am__objects_103)
+am__objects_112 = lib510-first.$(OBJEXT)
+am_lib510_OBJECTS = lib510-lib510.$(OBJEXT) $(am__objects_112)
 lib510_OBJECTS = $(am_lib510_OBJECTS)
 lib510_LDADD = $(LDADD)
 lib510_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_104 = lib511-first.$(OBJEXT)
-am_lib511_OBJECTS = lib511-lib511.$(OBJEXT) $(am__objects_104)
+am__objects_113 = lib511-first.$(OBJEXT)
+am_lib511_OBJECTS = lib511-lib511.$(OBJEXT) $(am__objects_113)
 lib511_OBJECTS = $(am_lib511_OBJECTS)
 lib511_LDADD = $(LDADD)
 lib511_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_105 = lib512-first.$(OBJEXT)
-am_lib512_OBJECTS = lib512-lib512.$(OBJEXT) $(am__objects_105)
+am__objects_114 = lib512-first.$(OBJEXT)
+am_lib512_OBJECTS = lib512-lib512.$(OBJEXT) $(am__objects_114)
 lib512_OBJECTS = $(am_lib512_OBJECTS)
 lib512_LDADD = $(LDADD)
 lib512_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_106 = lib513-first.$(OBJEXT)
-am_lib513_OBJECTS = lib513-lib513.$(OBJEXT) $(am__objects_106)
+am__objects_115 = lib513-first.$(OBJEXT)
+am_lib513_OBJECTS = lib513-lib513.$(OBJEXT) $(am__objects_115)
 lib513_OBJECTS = $(am_lib513_OBJECTS)
 lib513_LDADD = $(LDADD)
 lib513_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_107 = lib514-first.$(OBJEXT)
-am_lib514_OBJECTS = lib514-lib514.$(OBJEXT) $(am__objects_107)
+am__objects_116 = lib514-first.$(OBJEXT)
+am_lib514_OBJECTS = lib514-lib514.$(OBJEXT) $(am__objects_116)
 lib514_OBJECTS = $(am_lib514_OBJECTS)
 lib514_LDADD = $(LDADD)
 lib514_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_108 = lib515-first.$(OBJEXT)
-am_lib515_OBJECTS = lib515-lib515.$(OBJEXT) $(am__objects_108)
+am__objects_117 = lib515-first.$(OBJEXT)
+am_lib515_OBJECTS = lib515-lib515.$(OBJEXT) $(am__objects_117)
 lib515_OBJECTS = $(am_lib515_OBJECTS)
 lib515_LDADD = $(LDADD)
 lib515_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_109 = lib516-first.$(OBJEXT)
-am_lib516_OBJECTS = lib516-lib516.$(OBJEXT) $(am__objects_109)
+am__objects_118 = lib516-first.$(OBJEXT)
+am_lib516_OBJECTS = lib516-lib516.$(OBJEXT) $(am__objects_118)
 lib516_OBJECTS = $(am_lib516_OBJECTS)
 lib516_LDADD = $(LDADD)
 lib516_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_110 = lib517-first.$(OBJEXT)
-am_lib517_OBJECTS = lib517-lib517.$(OBJEXT) $(am__objects_110)
+am__objects_119 = lib517-first.$(OBJEXT)
+am_lib517_OBJECTS = lib517-lib517.$(OBJEXT) $(am__objects_119)
 lib517_OBJECTS = $(am_lib517_OBJECTS)
 lib517_LDADD = $(LDADD)
 lib517_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_111 = lib518-first.$(OBJEXT)
-am__objects_112 = ../../lib/lib518-warnless.$(OBJEXT)
-am_lib518_OBJECTS = lib518-lib518.$(OBJEXT) $(am__objects_111) \
-	$(am__objects_112)
+am__objects_120 = lib518-first.$(OBJEXT)
+am__objects_121 = ../../lib/lib518-warnless.$(OBJEXT)
+am_lib518_OBJECTS = lib518-lib518.$(OBJEXT) $(am__objects_120) \
+	$(am__objects_121)
 lib518_OBJECTS = $(am_lib518_OBJECTS)
 lib518_LDADD = $(LDADD)
 lib518_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_113 = lib519-first.$(OBJEXT)
-am_lib519_OBJECTS = lib519-lib519.$(OBJEXT) $(am__objects_113)
+am__objects_122 = lib519-first.$(OBJEXT)
+am_lib519_OBJECTS = lib519-lib519.$(OBJEXT) $(am__objects_122)
 lib519_OBJECTS = $(am_lib519_OBJECTS)
 lib519_LDADD = $(LDADD)
 lib519_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_114 = lib520-first.$(OBJEXT)
-am_lib520_OBJECTS = lib520-lib520.$(OBJEXT) $(am__objects_114)
+am__objects_123 = lib520-first.$(OBJEXT)
+am_lib520_OBJECTS = lib520-lib520.$(OBJEXT) $(am__objects_123)
 lib520_OBJECTS = $(am_lib520_OBJECTS)
 lib520_LDADD = $(LDADD)
 lib520_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_115 = lib521-first.$(OBJEXT)
-am_lib521_OBJECTS = lib521-lib521.$(OBJEXT) $(am__objects_115)
+am__objects_124 = lib521-first.$(OBJEXT)
+am_lib521_OBJECTS = lib521-lib521.$(OBJEXT) $(am__objects_124)
 lib521_OBJECTS = $(am_lib521_OBJECTS)
 lib521_LDADD = $(LDADD)
 lib521_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_116 = lib523-first.$(OBJEXT)
-am_lib523_OBJECTS = lib523-lib523.$(OBJEXT) $(am__objects_116)
+am__objects_125 = lib523-first.$(OBJEXT)
+am_lib523_OBJECTS = lib523-lib523.$(OBJEXT) $(am__objects_125)
 lib523_OBJECTS = $(am_lib523_OBJECTS)
 lib523_LDADD = $(LDADD)
 lib523_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_117 = lib524-first.$(OBJEXT)
-am_lib524_OBJECTS = lib524-lib524.$(OBJEXT) $(am__objects_117)
+am__objects_126 = lib524-first.$(OBJEXT)
+am_lib524_OBJECTS = lib524-lib524.$(OBJEXT) $(am__objects_126)
 lib524_OBJECTS = $(am_lib524_OBJECTS)
 lib524_LDADD = $(LDADD)
 lib524_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_118 = lib525-first.$(OBJEXT)
-am__objects_119 = lib525-testutil.$(OBJEXT)
-am__objects_120 = ../../lib/lib525-warnless.$(OBJEXT)
-am_lib525_OBJECTS = lib525-lib525.$(OBJEXT) $(am__objects_118) \
-	$(am__objects_119) $(am__objects_120)
+am__objects_127 = lib525-first.$(OBJEXT)
+am__objects_128 = lib525-testutil.$(OBJEXT)
+am__objects_129 = ../../lib/lib525-warnless.$(OBJEXT)
+am_lib525_OBJECTS = lib525-lib525.$(OBJEXT) $(am__objects_127) \
+	$(am__objects_128) $(am__objects_129)
 lib525_OBJECTS = $(am_lib525_OBJECTS)
 lib525_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_121 = lib526-first.$(OBJEXT)
-am__objects_122 = lib526-testutil.$(OBJEXT)
-am__objects_123 = ../../lib/lib526-warnless.$(OBJEXT)
-am_lib526_OBJECTS = lib526-lib526.$(OBJEXT) $(am__objects_121) \
-	$(am__objects_122) $(am__objects_123)
+am__objects_130 = lib526-first.$(OBJEXT)
+am__objects_131 = lib526-testutil.$(OBJEXT)
+am__objects_132 = ../../lib/lib526-warnless.$(OBJEXT)
+am_lib526_OBJECTS = lib526-lib526.$(OBJEXT) $(am__objects_130) \
+	$(am__objects_131) $(am__objects_132)
 lib526_OBJECTS = $(am_lib526_OBJECTS)
 lib526_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_124 = lib527-first.$(OBJEXT)
-am__objects_125 = lib527-testutil.$(OBJEXT)
-am__objects_126 = ../../lib/lib527-warnless.$(OBJEXT)
-am_lib527_OBJECTS = lib527-lib526.$(OBJEXT) $(am__objects_124) \
-	$(am__objects_125) $(am__objects_126)
+am__objects_133 = lib527-first.$(OBJEXT)
+am__objects_134 = lib527-testutil.$(OBJEXT)
+am__objects_135 = ../../lib/lib527-warnless.$(OBJEXT)
+am_lib527_OBJECTS = lib527-lib526.$(OBJEXT) $(am__objects_133) \
+	$(am__objects_134) $(am__objects_135)
 lib527_OBJECTS = $(am_lib527_OBJECTS)
 lib527_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_127 = lib529-first.$(OBJEXT)
-am__objects_128 = lib529-testutil.$(OBJEXT)
-am__objects_129 = ../../lib/lib529-warnless.$(OBJEXT)
-am_lib529_OBJECTS = lib529-lib525.$(OBJEXT) $(am__objects_127) \
-	$(am__objects_128) $(am__objects_129)
+am__objects_136 = lib529-first.$(OBJEXT)
+am__objects_137 = lib529-testutil.$(OBJEXT)
+am__objects_138 = ../../lib/lib529-warnless.$(OBJEXT)
+am_lib529_OBJECTS = lib529-lib525.$(OBJEXT) $(am__objects_136) \
+	$(am__objects_137) $(am__objects_138)
 lib529_OBJECTS = $(am_lib529_OBJECTS)
 lib529_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_130 = lib530-first.$(OBJEXT)
-am__objects_131 = lib530-testutil.$(OBJEXT)
-am__objects_132 = ../../lib/lib530-warnless.$(OBJEXT)
-am_lib530_OBJECTS = lib530-lib530.$(OBJEXT) $(am__objects_130) \
-	$(am__objects_131) $(am__objects_132)
+am__objects_139 = lib530-first.$(OBJEXT)
+am__objects_140 = lib530-testutil.$(OBJEXT)
+am__objects_141 = ../../lib/lib530-warnless.$(OBJEXT)
+am_lib530_OBJECTS = lib530-lib530.$(OBJEXT) $(am__objects_139) \
+	$(am__objects_140) $(am__objects_141)
 lib530_OBJECTS = $(am_lib530_OBJECTS)
 lib530_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_133 = lib532-first.$(OBJEXT)
-am__objects_134 = lib532-testutil.$(OBJEXT)
-am__objects_135 = ../../lib/lib532-warnless.$(OBJEXT)
-am_lib532_OBJECTS = lib532-lib526.$(OBJEXT) $(am__objects_133) \
-	$(am__objects_134) $(am__objects_135)
+am__objects_142 = lib532-first.$(OBJEXT)
+am__objects_143 = lib532-testutil.$(OBJEXT)
+am__objects_144 = ../../lib/lib532-warnless.$(OBJEXT)
+am_lib532_OBJECTS = lib532-lib526.$(OBJEXT) $(am__objects_142) \
+	$(am__objects_143) $(am__objects_144)
 lib532_OBJECTS = $(am_lib532_OBJECTS)
 lib532_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_136 = lib533-first.$(OBJEXT)
-am__objects_137 = lib533-testutil.$(OBJEXT)
-am__objects_138 = ../../lib/lib533-warnless.$(OBJEXT)
-am_lib533_OBJECTS = lib533-lib533.$(OBJEXT) $(am__objects_136) \
-	$(am__objects_137) $(am__objects_138)
+am__objects_145 = lib533-first.$(OBJEXT)
+am__objects_146 = lib533-testutil.$(OBJEXT)
+am__objects_147 = ../../lib/lib533-warnless.$(OBJEXT)
+am_lib533_OBJECTS = lib533-lib533.$(OBJEXT) $(am__objects_145) \
+	$(am__objects_146) $(am__objects_147)
 lib533_OBJECTS = $(am_lib533_OBJECTS)
 lib533_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_139 = lib536-first.$(OBJEXT)
-am__objects_140 = lib536-testutil.$(OBJEXT)
-am__objects_141 = ../../lib/lib536-warnless.$(OBJEXT)
-am_lib536_OBJECTS = lib536-lib536.$(OBJEXT) $(am__objects_139) \
-	$(am__objects_140) $(am__objects_141)
+am__objects_148 = lib536-first.$(OBJEXT)
+am__objects_149 = lib536-testutil.$(OBJEXT)
+am__objects_150 = ../../lib/lib536-warnless.$(OBJEXT)
+am_lib536_OBJECTS = lib536-lib536.$(OBJEXT) $(am__objects_148) \
+	$(am__objects_149) $(am__objects_150)
 lib536_OBJECTS = $(am_lib536_OBJECTS)
 lib536_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_142 = lib537-first.$(OBJEXT)
-am__objects_143 = ../../lib/lib537-warnless.$(OBJEXT)
-am_lib537_OBJECTS = lib537-lib537.$(OBJEXT) $(am__objects_142) \
-	$(am__objects_143)
+am__objects_151 = lib537-first.$(OBJEXT)
+am__objects_152 = ../../lib/lib537-warnless.$(OBJEXT)
+am_lib537_OBJECTS = lib537-lib537.$(OBJEXT) $(am__objects_151) \
+	$(am__objects_152)
 lib537_OBJECTS = $(am_lib537_OBJECTS)
 lib537_LDADD = $(LDADD)
 lib537_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_144 = lib539-first.$(OBJEXT)
-am_lib539_OBJECTS = lib539-lib539.$(OBJEXT) $(am__objects_144)
+am__objects_153 = lib539-first.$(OBJEXT)
+am_lib539_OBJECTS = lib539-lib539.$(OBJEXT) $(am__objects_153)
 lib539_OBJECTS = $(am_lib539_OBJECTS)
 lib539_LDADD = $(LDADD)
 lib539_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_145 = lib540-first.$(OBJEXT)
-am__objects_146 = lib540-testutil.$(OBJEXT)
-am__objects_147 = ../../lib/lib540-warnless.$(OBJEXT)
-am_lib540_OBJECTS = lib540-lib540.$(OBJEXT) $(am__objects_145) \
-	$(am__objects_146) $(am__objects_147)
+am__objects_154 = lib540-first.$(OBJEXT)
+am__objects_155 = lib540-testutil.$(OBJEXT)
+am__objects_156 = ../../lib/lib540-warnless.$(OBJEXT)
+am_lib540_OBJECTS = lib540-lib540.$(OBJEXT) $(am__objects_154) \
+	$(am__objects_155) $(am__objects_156)
 lib540_OBJECTS = $(am_lib540_OBJECTS)
 lib540_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_148 = lib541-first.$(OBJEXT)
-am_lib541_OBJECTS = lib541-lib541.$(OBJEXT) $(am__objects_148)
+am__objects_157 = lib541-first.$(OBJEXT)
+am_lib541_OBJECTS = lib541-lib541.$(OBJEXT) $(am__objects_157)
 lib541_OBJECTS = $(am_lib541_OBJECTS)
 lib541_LDADD = $(LDADD)
 lib541_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_149 = lib542-first.$(OBJEXT)
-am_lib542_OBJECTS = lib542-lib542.$(OBJEXT) $(am__objects_149)
+am__objects_158 = lib542-first.$(OBJEXT)
+am_lib542_OBJECTS = lib542-lib542.$(OBJEXT) $(am__objects_158)
 lib542_OBJECTS = $(am_lib542_OBJECTS)
 lib542_LDADD = $(LDADD)
 lib542_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_150 = lib543-first.$(OBJEXT)
-am_lib543_OBJECTS = lib543-lib543.$(OBJEXT) $(am__objects_150)
+am__objects_159 = lib543-first.$(OBJEXT)
+am_lib543_OBJECTS = lib543-lib543.$(OBJEXT) $(am__objects_159)
 lib543_OBJECTS = $(am_lib543_OBJECTS)
 lib543_LDADD = $(LDADD)
 lib543_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_151 = lib544-first.$(OBJEXT)
-am_lib544_OBJECTS = lib544-lib544.$(OBJEXT) $(am__objects_151)
+am__objects_160 = lib544-first.$(OBJEXT)
+am_lib544_OBJECTS = lib544-lib544.$(OBJEXT) $(am__objects_160)
 lib544_OBJECTS = $(am_lib544_OBJECTS)
 lib544_LDADD = $(LDADD)
 lib544_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_152 = lib545-first.$(OBJEXT)
-am_lib545_OBJECTS = lib545-lib544.$(OBJEXT) $(am__objects_152)
+am__objects_161 = lib545-first.$(OBJEXT)
+am_lib545_OBJECTS = lib545-lib544.$(OBJEXT) $(am__objects_161)
 lib545_OBJECTS = $(am_lib545_OBJECTS)
 lib545_LDADD = $(LDADD)
 lib545_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_153 = lib547-first.$(OBJEXT)
-am_lib547_OBJECTS = lib547-lib547.$(OBJEXT) $(am__objects_153)
+am__objects_162 = lib547-first.$(OBJEXT)
+am_lib547_OBJECTS = lib547-lib547.$(OBJEXT) $(am__objects_162)
 lib547_OBJECTS = $(am_lib547_OBJECTS)
 lib547_LDADD = $(LDADD)
 lib547_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_154 = lib548-first.$(OBJEXT)
-am_lib548_OBJECTS = lib548-lib547.$(OBJEXT) $(am__objects_154)
+am__objects_163 = lib548-first.$(OBJEXT)
+am_lib548_OBJECTS = lib548-lib547.$(OBJEXT) $(am__objects_163)
 lib548_OBJECTS = $(am_lib548_OBJECTS)
 lib548_LDADD = $(LDADD)
 lib548_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_155 = lib549-first.$(OBJEXT)
-am_lib549_OBJECTS = lib549-lib549.$(OBJEXT) $(am__objects_155)
+am__objects_164 = lib549-first.$(OBJEXT)
+am_lib549_OBJECTS = lib549-lib549.$(OBJEXT) $(am__objects_164)
 lib549_OBJECTS = $(am_lib549_OBJECTS)
 lib549_LDADD = $(LDADD)
 lib549_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_156 = lib552-first.$(OBJEXT)
-am__objects_157 = ../../lib/lib552-warnless.$(OBJEXT)
-am_lib552_OBJECTS = lib552-lib552.$(OBJEXT) $(am__objects_156) \
-	$(am__objects_157)
+am__objects_165 = lib552-first.$(OBJEXT)
+am__objects_166 = ../../lib/lib552-warnless.$(OBJEXT)
+am_lib552_OBJECTS = lib552-lib552.$(OBJEXT) $(am__objects_165) \
+	$(am__objects_166)
 lib552_OBJECTS = $(am_lib552_OBJECTS)
 lib552_LDADD = $(LDADD)
 lib552_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_158 = lib553-first.$(OBJEXT)
-am_lib553_OBJECTS = lib553-lib553.$(OBJEXT) $(am__objects_158)
+am__objects_167 = lib553-first.$(OBJEXT)
+am_lib553_OBJECTS = lib553-lib553.$(OBJEXT) $(am__objects_167)
 lib553_OBJECTS = $(am_lib553_OBJECTS)
 lib553_LDADD = $(LDADD)
 lib553_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_159 = lib554-first.$(OBJEXT)
-am_lib554_OBJECTS = lib554-lib554.$(OBJEXT) $(am__objects_159)
+am__objects_168 = lib554-first.$(OBJEXT)
+am_lib554_OBJECTS = lib554-lib554.$(OBJEXT) $(am__objects_168)
 lib554_OBJECTS = $(am_lib554_OBJECTS)
 lib554_LDADD = $(LDADD)
 lib554_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_160 = lib555-first.$(OBJEXT)
-am__objects_161 = lib555-testutil.$(OBJEXT)
-am__objects_162 = ../../lib/lib555-warnless.$(OBJEXT)
-am_lib555_OBJECTS = lib555-lib555.$(OBJEXT) $(am__objects_160) \
-	$(am__objects_161) $(am__objects_162)
+am__objects_169 = lib555-first.$(OBJEXT)
+am__objects_170 = lib555-testutil.$(OBJEXT)
+am__objects_171 = ../../lib/lib555-warnless.$(OBJEXT)
+am_lib555_OBJECTS = lib555-lib555.$(OBJEXT) $(am__objects_169) \
+	$(am__objects_170) $(am__objects_171)
 lib555_OBJECTS = $(am_lib555_OBJECTS)
 lib555_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_163 = lib556-first.$(OBJEXT)
-am__objects_164 = ../../lib/lib556-warnless.$(OBJEXT)
-am_lib556_OBJECTS = lib556-lib556.$(OBJEXT) $(am__objects_163) \
-	$(am__objects_164)
+am__objects_172 = lib556-first.$(OBJEXT)
+am__objects_173 = ../../lib/lib556-warnless.$(OBJEXT)
+am_lib556_OBJECTS = lib556-lib556.$(OBJEXT) $(am__objects_172) \
+	$(am__objects_173)
 lib556_OBJECTS = $(am_lib556_OBJECTS)
 lib556_LDADD = $(LDADD)
 lib556_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_165 = lib557-first.$(OBJEXT)
-am_lib557_OBJECTS = lib557-lib557.$(OBJEXT) $(am__objects_165)
+am__objects_174 = lib557-first.$(OBJEXT)
+am_lib557_OBJECTS = lib557-lib557.$(OBJEXT) $(am__objects_174)
 lib557_OBJECTS = $(am_lib557_OBJECTS)
 lib557_LDADD = $(LDADD)
 lib557_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_166 = lib558-first.$(OBJEXT)
-am_lib558_OBJECTS = lib558-lib558.$(OBJEXT) $(am__objects_166)
+am__objects_175 = lib558-first.$(OBJEXT)
+am_lib558_OBJECTS = lib558-lib558.$(OBJEXT) $(am__objects_175)
 lib558_OBJECTS = $(am_lib558_OBJECTS)
 lib558_LDADD = $(LDADD)
 lib558_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_167 = lib560-first.$(OBJEXT)
-am__objects_168 = lib560-testutil.$(OBJEXT)
-am__objects_169 = ../../lib/lib560-warnless.$(OBJEXT)
-am_lib560_OBJECTS = lib560-lib560.$(OBJEXT) $(am__objects_167) \
-	$(am__objects_168) $(am__objects_169)
+am__objects_176 = lib560-first.$(OBJEXT)
+am__objects_177 = lib560-testutil.$(OBJEXT)
+am__objects_178 = ../../lib/lib560-warnless.$(OBJEXT)
+am_lib560_OBJECTS = lib560-lib560.$(OBJEXT) $(am__objects_176) \
+	$(am__objects_177) $(am__objects_178)
 lib560_OBJECTS = $(am_lib560_OBJECTS)
 lib560_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_170 = lib562-first.$(OBJEXT)
-am_lib562_OBJECTS = lib562-lib562.$(OBJEXT) $(am__objects_170)
+am__objects_179 = lib562-first.$(OBJEXT)
+am_lib562_OBJECTS = lib562-lib562.$(OBJEXT) $(am__objects_179)
 lib562_OBJECTS = $(am_lib562_OBJECTS)
 lib562_LDADD = $(LDADD)
 lib562_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_171 = lib564-first.$(OBJEXT)
-am__objects_172 = lib564-testutil.$(OBJEXT)
-am__objects_173 = ../../lib/lib564-warnless.$(OBJEXT)
-am_lib564_OBJECTS = lib564-lib564.$(OBJEXT) $(am__objects_171) \
-	$(am__objects_172) $(am__objects_173)
+am__objects_180 = lib564-first.$(OBJEXT)
+am__objects_181 = lib564-testutil.$(OBJEXT)
+am__objects_182 = ../../lib/lib564-warnless.$(OBJEXT)
+am_lib564_OBJECTS = lib564-lib564.$(OBJEXT) $(am__objects_180) \
+	$(am__objects_181) $(am__objects_182)
 lib564_OBJECTS = $(am_lib564_OBJECTS)
 lib564_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_174 = lib565-first.$(OBJEXT)
-am_lib565_OBJECTS = lib565-lib510.$(OBJEXT) $(am__objects_174)
+am__objects_183 = lib565-first.$(OBJEXT)
+am_lib565_OBJECTS = lib565-lib510.$(OBJEXT) $(am__objects_183)
 lib565_OBJECTS = $(am_lib565_OBJECTS)
 lib565_LDADD = $(LDADD)
 lib565_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_175 = lib566-first.$(OBJEXT)
-am_lib566_OBJECTS = lib566-lib566.$(OBJEXT) $(am__objects_175)
+am__objects_184 = lib566-first.$(OBJEXT)
+am_lib566_OBJECTS = lib566-lib566.$(OBJEXT) $(am__objects_184)
 lib566_OBJECTS = $(am_lib566_OBJECTS)
 lib566_LDADD = $(LDADD)
 lib566_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_176 = lib567-first.$(OBJEXT)
-am_lib567_OBJECTS = lib567-lib567.$(OBJEXT) $(am__objects_176)
+am__objects_185 = lib567-first.$(OBJEXT)
+am_lib567_OBJECTS = lib567-lib567.$(OBJEXT) $(am__objects_185)
 lib567_OBJECTS = $(am_lib567_OBJECTS)
 lib567_LDADD = $(LDADD)
 lib567_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_177 = lib568-first.$(OBJEXT)
-am_lib568_OBJECTS = lib568-lib568.$(OBJEXT) $(am__objects_177)
+am__objects_186 = lib568-first.$(OBJEXT)
+am_lib568_OBJECTS = lib568-lib568.$(OBJEXT) $(am__objects_186)
 lib568_OBJECTS = $(am_lib568_OBJECTS)
 lib568_LDADD = $(LDADD)
 lib568_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_178 = lib569-first.$(OBJEXT)
-am_lib569_OBJECTS = lib569-lib569.$(OBJEXT) $(am__objects_178)
+am__objects_187 = lib569-first.$(OBJEXT)
+am_lib569_OBJECTS = lib569-lib569.$(OBJEXT) $(am__objects_187)
 lib569_OBJECTS = $(am_lib569_OBJECTS)
 lib569_LDADD = $(LDADD)
 lib569_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_179 = lib570-first.$(OBJEXT)
-am_lib570_OBJECTS = lib570-lib570.$(OBJEXT) $(am__objects_179)
+am__objects_188 = lib570-first.$(OBJEXT)
+am_lib570_OBJECTS = lib570-lib570.$(OBJEXT) $(am__objects_188)
 lib570_OBJECTS = $(am_lib570_OBJECTS)
 lib570_LDADD = $(LDADD)
 lib570_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_180 = lib571-first.$(OBJEXT)
-am__objects_181 = ../../lib/lib571-warnless.$(OBJEXT)
-am_lib571_OBJECTS = lib571-lib571.$(OBJEXT) $(am__objects_180) \
-	$(am__objects_181)
+am__objects_189 = lib571-first.$(OBJEXT)
+am__objects_190 = ../../lib/lib571-warnless.$(OBJEXT)
+am_lib571_OBJECTS = lib571-lib571.$(OBJEXT) $(am__objects_189) \
+	$(am__objects_190)
 lib571_OBJECTS = $(am_lib571_OBJECTS)
 lib571_LDADD = $(LDADD)
 lib571_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_182 = lib572-first.$(OBJEXT)
-am_lib572_OBJECTS = lib572-lib572.$(OBJEXT) $(am__objects_182)
+am__objects_191 = lib572-first.$(OBJEXT)
+am_lib572_OBJECTS = lib572-lib572.$(OBJEXT) $(am__objects_191)
 lib572_OBJECTS = $(am_lib572_OBJECTS)
 lib572_LDADD = $(LDADD)
 lib572_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_183 = lib573-first.$(OBJEXT)
-am__objects_184 = lib573-testutil.$(OBJEXT)
-am__objects_185 = ../../lib/lib573-warnless.$(OBJEXT)
-am__objects_186 = lib573-testtrace.$(OBJEXT)
-am_lib573_OBJECTS = lib573-lib573.$(OBJEXT) $(am__objects_183) \
-	$(am__objects_184) $(am__objects_185) $(am__objects_186)
+am__objects_192 = lib573-first.$(OBJEXT)
+am__objects_193 = lib573-testutil.$(OBJEXT)
+am__objects_194 = ../../lib/lib573-warnless.$(OBJEXT)
+am__objects_195 = lib573-testtrace.$(OBJEXT)
+am_lib573_OBJECTS = lib573-lib573.$(OBJEXT) $(am__objects_192) \
+	$(am__objects_193) $(am__objects_194) $(am__objects_195)
 lib573_OBJECTS = $(am_lib573_OBJECTS)
 lib573_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_187 = lib574-first.$(OBJEXT)
-am_lib574_OBJECTS = lib574-lib574.$(OBJEXT) $(am__objects_187)
+am__objects_196 = lib574-first.$(OBJEXT)
+am_lib574_OBJECTS = lib574-lib574.$(OBJEXT) $(am__objects_196)
 lib574_OBJECTS = $(am_lib574_OBJECTS)
 lib574_LDADD = $(LDADD)
 lib574_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_188 = lib575-first.$(OBJEXT)
-am__objects_189 = lib575-testutil.$(OBJEXT)
-am__objects_190 = ../../lib/lib575-warnless.$(OBJEXT)
-am_lib575_OBJECTS = lib575-lib575.$(OBJEXT) $(am__objects_188) \
-	$(am__objects_189) $(am__objects_190)
+am__objects_197 = lib575-first.$(OBJEXT)
+am__objects_198 = lib575-testutil.$(OBJEXT)
+am__objects_199 = ../../lib/lib575-warnless.$(OBJEXT)
+am_lib575_OBJECTS = lib575-lib575.$(OBJEXT) $(am__objects_197) \
+	$(am__objects_198) $(am__objects_199)
 lib575_OBJECTS = $(am_lib575_OBJECTS)
 lib575_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_191 = lib576-first.$(OBJEXT)
-am_lib576_OBJECTS = lib576-lib576.$(OBJEXT) $(am__objects_191)
+am__objects_200 = lib576-first.$(OBJEXT)
+am_lib576_OBJECTS = lib576-lib576.$(OBJEXT) $(am__objects_200)
 lib576_OBJECTS = $(am_lib576_OBJECTS)
 lib576_LDADD = $(LDADD)
 lib576_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_192 = lib578-first.$(OBJEXT)
-am_lib578_OBJECTS = lib578-lib578.$(OBJEXT) $(am__objects_192)
+am__objects_201 = lib578-first.$(OBJEXT)
+am_lib578_OBJECTS = lib578-lib578.$(OBJEXT) $(am__objects_201)
 lib578_OBJECTS = $(am_lib578_OBJECTS)
 lib578_LDADD = $(LDADD)
 lib578_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_193 = lib579-first.$(OBJEXT)
-am_lib579_OBJECTS = lib579-lib579.$(OBJEXT) $(am__objects_193)
+am__objects_202 = lib579-first.$(OBJEXT)
+am_lib579_OBJECTS = lib579-lib579.$(OBJEXT) $(am__objects_202)
 lib579_OBJECTS = $(am_lib579_OBJECTS)
 lib579_LDADD = $(LDADD)
 lib579_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_194 = lib582-first.$(OBJEXT)
-am__objects_195 = lib582-testutil.$(OBJEXT)
-am__objects_196 = ../../lib/lib582-warnless.$(OBJEXT)
-am_lib582_OBJECTS = lib582-lib582.$(OBJEXT) $(am__objects_194) \
-	$(am__objects_195) $(am__objects_196)
+am__objects_203 = lib582-first.$(OBJEXT)
+am__objects_204 = lib582-testutil.$(OBJEXT)
+am__objects_205 = ../../lib/lib582-warnless.$(OBJEXT)
+am_lib582_OBJECTS = lib582-lib582.$(OBJEXT) $(am__objects_203) \
+	$(am__objects_204) $(am__objects_205)
 lib582_OBJECTS = $(am_lib582_OBJECTS)
 lib582_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_197 = lib583-first.$(OBJEXT)
-am_lib583_OBJECTS = lib583-lib583.$(OBJEXT) $(am__objects_197)
+am__objects_206 = lib583-first.$(OBJEXT)
+am_lib583_OBJECTS = lib583-lib583.$(OBJEXT) $(am__objects_206)
 lib583_OBJECTS = $(am_lib583_OBJECTS)
 lib583_LDADD = $(LDADD)
 lib583_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_198 = lib585-first.$(OBJEXT)
-am__objects_199 = lib585-testutil.$(OBJEXT)
-am__objects_200 = lib585-testtrace.$(OBJEXT)
-am_lib585_OBJECTS = lib585-lib500.$(OBJEXT) $(am__objects_198) \
-	$(am__objects_199) $(am__objects_200)
+am__objects_207 = lib585-first.$(OBJEXT)
+am__objects_208 = lib585-testutil.$(OBJEXT)
+am__objects_209 = lib585-testtrace.$(OBJEXT)
+am_lib585_OBJECTS = lib585-lib500.$(OBJEXT) $(am__objects_207) \
+	$(am__objects_208) $(am__objects_209)
 lib585_OBJECTS = $(am_lib585_OBJECTS)
 lib585_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_201 = lib586-first.$(OBJEXT)
-am_lib586_OBJECTS = lib586-lib586.$(OBJEXT) $(am__objects_201)
+am__objects_210 = lib586-first.$(OBJEXT)
+am_lib586_OBJECTS = lib586-lib586.$(OBJEXT) $(am__objects_210)
 lib586_OBJECTS = $(am_lib586_OBJECTS)
 lib586_LDADD = $(LDADD)
 lib586_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_202 = lib587-first.$(OBJEXT)
-am_lib587_OBJECTS = lib587-lib554.$(OBJEXT) $(am__objects_202)
+am__objects_211 = lib587-first.$(OBJEXT)
+am_lib587_OBJECTS = lib587-lib554.$(OBJEXT) $(am__objects_211)
 lib587_OBJECTS = $(am_lib587_OBJECTS)
 lib587_LDADD = $(LDADD)
 lib587_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_203 = lib590-first.$(OBJEXT)
-am_lib590_OBJECTS = lib590-lib590.$(OBJEXT) $(am__objects_203)
+am__objects_212 = lib590-first.$(OBJEXT)
+am_lib590_OBJECTS = lib590-lib590.$(OBJEXT) $(am__objects_212)
 lib590_OBJECTS = $(am_lib590_OBJECTS)
 lib590_LDADD = $(LDADD)
 lib590_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_204 = lib591-first.$(OBJEXT)
-am__objects_205 = lib591-testutil.$(OBJEXT)
-am__objects_206 = ../../lib/lib591-warnless.$(OBJEXT)
-am_lib591_OBJECTS = lib591-lib591.$(OBJEXT) $(am__objects_204) \
-	$(am__objects_205) $(am__objects_206)
+am__objects_213 = lib591-first.$(OBJEXT)
+am__objects_214 = lib591-testutil.$(OBJEXT)
+am__objects_215 = ../../lib/lib591-warnless.$(OBJEXT)
+am_lib591_OBJECTS = lib591-lib591.$(OBJEXT) $(am__objects_213) \
+	$(am__objects_214) $(am__objects_215)
 lib591_OBJECTS = $(am_lib591_OBJECTS)
 lib591_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_207 = lib597-first.$(OBJEXT)
-am__objects_208 = lib597-testutil.$(OBJEXT)
-am__objects_209 = ../../lib/lib597-warnless.$(OBJEXT)
-am_lib597_OBJECTS = lib597-lib597.$(OBJEXT) $(am__objects_207) \
-	$(am__objects_208) $(am__objects_209)
+am__objects_216 = lib597-first.$(OBJEXT)
+am__objects_217 = lib597-testutil.$(OBJEXT)
+am__objects_218 = ../../lib/lib597-warnless.$(OBJEXT)
+am_lib597_OBJECTS = lib597-lib597.$(OBJEXT) $(am__objects_216) \
+	$(am__objects_217) $(am__objects_218)
 lib597_OBJECTS = $(am_lib597_OBJECTS)
 lib597_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_210 = lib598-first.$(OBJEXT)
-am_lib598_OBJECTS = lib598-lib598.$(OBJEXT) $(am__objects_210)
+am__objects_219 = lib598-first.$(OBJEXT)
+am_lib598_OBJECTS = lib598-lib598.$(OBJEXT) $(am__objects_219)
 lib598_OBJECTS = $(am_lib598_OBJECTS)
 lib598_LDADD = $(LDADD)
 lib598_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_211 = lib599-first.$(OBJEXT)
-am_lib599_OBJECTS = lib599-lib599.$(OBJEXT) $(am__objects_211)
+am__objects_220 = lib599-first.$(OBJEXT)
+am_lib599_OBJECTS = lib599-lib599.$(OBJEXT) $(am__objects_220)
 lib599_OBJECTS = $(am_lib599_OBJECTS)
 lib599_LDADD = $(LDADD)
 lib599_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_212 = libauthretry-first.$(OBJEXT)
+am__objects_221 = libauthretry-first.$(OBJEXT)
 am_libauthretry_OBJECTS = libauthretry-libauthretry.$(OBJEXT) \
-	$(am__objects_212)
+	$(am__objects_221)
 libauthretry_OBJECTS = $(am_libauthretry_OBJECTS)
 libauthretry_LDADD = $(LDADD)
 libauthretry_DEPENDENCIES = $(am__DEPENDENCIES_1)
-am__objects_213 = libntlmconnect-first.$(OBJEXT)
-am__objects_214 = libntlmconnect-testutil.$(OBJEXT)
-am__objects_215 = ../../lib/libntlmconnect-warnless.$(OBJEXT)
+am__objects_222 = libntlmconnect-first.$(OBJEXT)
+am__objects_223 = libntlmconnect-testutil.$(OBJEXT)
+am__objects_224 = ../../lib/libntlmconnect-warnless.$(OBJEXT)
 am_libntlmconnect_OBJECTS = libntlmconnect-libntlmconnect.$(OBJEXT) \
-	$(am__objects_213) $(am__objects_214) $(am__objects_215)
+	$(am__objects_222) $(am__objects_223) $(am__objects_224)
 libntlmconnect_OBJECTS = $(am_libntlmconnect_OBJECTS)
 libntlmconnect_DEPENDENCIES = $(am__DEPENDENCIES_1)
 AM_V_P = $(am__v_P_@AM_V@)
 am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
 am__v_P_0 = false
 am__v_P_1 = :
@@ -873,12 +895,13 @@
 	$(lib1509_SOURCES) $(lib1510_SOURCES) $(lib1511_SOURCES) \
 	$(lib1512_SOURCES) $(lib1513_SOURCES) $(lib1514_SOURCES) \
 	$(lib1515_SOURCES) $(lib1517_SOURCES) $(lib1520_SOURCES) \
 	$(lib1525_SOURCES) $(lib1526_SOURCES) $(lib1527_SOURCES) \
 	$(lib1528_SOURCES) $(lib1529_SOURCES) $(lib1530_SOURCES) \
 	$(lib1531_SOURCES) $(lib1532_SOURCES) $(lib1533_SOURCES) \
+	$(lib1534_SOURCES) $(lib1535_SOURCES) $(lib1536_SOURCES) \
 	$(lib1900_SOURCES) $(lib2033_SOURCES) $(lib500_SOURCES) \
 	$(lib501_SOURCES) $(lib502_SOURCES) $(lib503_SOURCES) \
 	$(lib504_SOURCES) $(lib505_SOURCES) $(lib506_SOURCES) \
 	$(lib507_SOURCES) $(lib508_SOURCES) $(lib509_SOURCES) \
 	$(lib510_SOURCES) $(lib511_SOURCES) $(lib512_SOURCES) \
 	$(lib513_SOURCES) $(lib514_SOURCES) $(lib515_SOURCES) \
@@ -911,12 +934,13 @@
 	$(lib1509_SOURCES) $(lib1510_SOURCES) $(lib1511_SOURCES) \
 	$(lib1512_SOURCES) $(lib1513_SOURCES) $(lib1514_SOURCES) \
 	$(lib1515_SOURCES) $(lib1517_SOURCES) $(lib1520_SOURCES) \
 	$(lib1525_SOURCES) $(lib1526_SOURCES) $(lib1527_SOURCES) \
 	$(lib1528_SOURCES) $(lib1529_SOURCES) $(lib1530_SOURCES) \
 	$(lib1531_SOURCES) $(lib1532_SOURCES) $(lib1533_SOURCES) \
+	$(lib1534_SOURCES) $(lib1535_SOURCES) $(lib1536_SOURCES) \
 	$(lib1900_SOURCES) $(lib2033_SOURCES) $(lib500_SOURCES) \
 	$(lib501_SOURCES) $(lib502_SOURCES) $(lib503_SOURCES) \
 	$(lib504_SOURCES) $(lib505_SOURCES) $(lib506_SOURCES) \
 	$(lib507_SOURCES) $(lib508_SOURCES) $(lib509_SOURCES) \
 	$(lib510_SOURCES) $(lib511_SOURCES) $(lib512_SOURCES) \
 	$(lib513_SOURCES) $(lib514_SOURCES) $(lib515_SOURCES) \
@@ -1494,12 +1518,21 @@
 lib1532_SOURCES = lib1532.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1532_LDADD = $(TESTUTIL_LIBS)
 lib1532_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1532
 lib1533_SOURCES = lib1533.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1533_LDADD = $(TESTUTIL_LIBS)
 lib1533_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1533
+lib1534_SOURCES = lib1534.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1534_LDADD = $(TESTUTIL_LIBS)
+lib1534_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1534
+lib1535_SOURCES = lib1535.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1535_LDADD = $(TESTUTIL_LIBS)
+lib1535_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1535
+lib1536_SOURCES = lib1536.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1536_LDADD = $(TESTUTIL_LIBS)
+lib1536_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1536
 lib1900_SOURCES = lib1900.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1900_LDADD = $(TESTUTIL_LIBS)
 lib1900_CPPFLAGS = $(AM_CPPFLAGS)
 lib2033_SOURCES = libntlmconnect.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib2033_LDADD = $(TESTUTIL_LIBS)
 lib2033_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_PIPELINING
@@ -1745,12 +1778,30 @@
 ../../lib/lib1533-warnless.$(OBJEXT): ../../lib/$(am__dirstamp) \
 	../../lib/$(DEPDIR)/$(am__dirstamp)
 
 lib1533$(EXEEXT): $(lib1533_OBJECTS) $(lib1533_DEPENDENCIES) $(EXTRA_lib1533_DEPENDENCIES) 
 	@rm -f lib1533$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(lib1533_OBJECTS) $(lib1533_LDADD) $(LIBS)
+../../lib/lib1534-warnless.$(OBJEXT): ../../lib/$(am__dirstamp) \
+	../../lib/$(DEPDIR)/$(am__dirstamp)
+
+lib1534$(EXEEXT): $(lib1534_OBJECTS) $(lib1534_DEPENDENCIES) $(EXTRA_lib1534_DEPENDENCIES) 
+	@rm -f lib1534$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(lib1534_OBJECTS) $(lib1534_LDADD) $(LIBS)
+../../lib/lib1535-warnless.$(OBJEXT): ../../lib/$(am__dirstamp) \
+	../../lib/$(DEPDIR)/$(am__dirstamp)
+
+lib1535$(EXEEXT): $(lib1535_OBJECTS) $(lib1535_DEPENDENCIES) $(EXTRA_lib1535_DEPENDENCIES) 
+	@rm -f lib1535$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(lib1535_OBJECTS) $(lib1535_LDADD) $(LIBS)
+../../lib/lib1536-warnless.$(OBJEXT): ../../lib/$(am__dirstamp) \
+	../../lib/$(DEPDIR)/$(am__dirstamp)
+
+lib1536$(EXEEXT): $(lib1536_OBJECTS) $(lib1536_DEPENDENCIES) $(EXTRA_lib1536_DEPENDENCIES) 
+	@rm -f lib1536$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(lib1536_OBJECTS) $(lib1536_LDADD) $(LIBS)
 ../../lib/lib1900-warnless.$(OBJEXT): ../../lib/$(am__dirstamp) \
 	../../lib/$(DEPDIR)/$(am__dirstamp)
 
 lib1900$(EXEEXT): $(lib1900_OBJECTS) $(lib1900_DEPENDENCIES) $(EXTRA_lib1900_DEPENDENCIES) 
 	@rm -f lib1900$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(lib1900_OBJECTS) $(lib1900_LDADD) $(LIBS)
@@ -2160,12 +2211,15 @@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1528-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1529-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1530-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1531-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1532-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1533-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1534-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1535-warnless.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1536-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib1900-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib2033-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib502-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib503-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib504-warnless.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@../../lib/$(DEPDIR)/lib507-warnless.Po@am__quote@
@@ -2269,12 +2323,21 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1532-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1532-lib1532.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1532-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1533-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1533-lib1533.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1533-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1534-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1534-lib1534.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1534-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1535-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1535-lib1535.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1535-testutil.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1536-first.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1536-lib1536.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1536-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-lib1900.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib1900-testutil.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-first.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-libntlmconnect.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib2033-testutil.Po@am__quote@
@@ -3963,12 +4026,180 @@
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1533_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1533-warnless.obj -MD -MP -MF ../../lib/$(DEPDIR)/lib1533-warnless.Tpo -c -o ../../lib/lib1533-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1533-warnless.Tpo ../../lib/$(DEPDIR)/lib1533-warnless.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1533-warnless.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1533_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1533-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
 
+lib1534-lib1534.o: lib1534.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1534-lib1534.o -MD -MP -MF $(DEPDIR)/lib1534-lib1534.Tpo -c -o lib1534-lib1534.o `test -f 'lib1534.c' || echo '$(srcdir)/'`lib1534.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1534-lib1534.Tpo $(DEPDIR)/lib1534-lib1534.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1534.c' object='lib1534-lib1534.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1534-lib1534.o `test -f 'lib1534.c' || echo '$(srcdir)/'`lib1534.c
+
+lib1534-lib1534.obj: lib1534.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1534-lib1534.obj -MD -MP -MF $(DEPDIR)/lib1534-lib1534.Tpo -c -o lib1534-lib1534.obj `if test -f 'lib1534.c'; then $(CYGPATH_W) 'lib1534.c'; else $(CYGPATH_W) '$(srcdir)/lib1534.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1534-lib1534.Tpo $(DEPDIR)/lib1534-lib1534.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1534.c' object='lib1534-lib1534.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1534-lib1534.obj `if test -f 'lib1534.c'; then $(CYGPATH_W) 'lib1534.c'; else $(CYGPATH_W) '$(srcdir)/lib1534.c'; fi`
+
+lib1534-first.o: first.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1534-first.o -MD -MP -MF $(DEPDIR)/lib1534-first.Tpo -c -o lib1534-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1534-first.Tpo $(DEPDIR)/lib1534-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='first.c' object='lib1534-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1534-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1534-first.obj: first.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1534-first.obj -MD -MP -MF $(DEPDIR)/lib1534-first.Tpo -c -o lib1534-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1534-first.Tpo $(DEPDIR)/lib1534-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='first.c' object='lib1534-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1534-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1534-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1534-testutil.o -MD -MP -MF $(DEPDIR)/lib1534-testutil.Tpo -c -o lib1534-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1534-testutil.Tpo $(DEPDIR)/lib1534-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='testutil.c' object='lib1534-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1534-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1534-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1534-testutil.obj -MD -MP -MF $(DEPDIR)/lib1534-testutil.Tpo -c -o lib1534-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1534-testutil.Tpo $(DEPDIR)/lib1534-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='testutil.c' object='lib1534-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1534-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+../../lib/lib1534-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1534-warnless.o -MD -MP -MF ../../lib/$(DEPDIR)/lib1534-warnless.Tpo -c -o ../../lib/lib1534-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1534-warnless.Tpo ../../lib/$(DEPDIR)/lib1534-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1534-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1534-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+../../lib/lib1534-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1534-warnless.obj -MD -MP -MF ../../lib/$(DEPDIR)/lib1534-warnless.Tpo -c -o ../../lib/lib1534-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1534-warnless.Tpo ../../lib/$(DEPDIR)/lib1534-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1534-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1534_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1534-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib1535-lib1535.o: lib1535.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1535-lib1535.o -MD -MP -MF $(DEPDIR)/lib1535-lib1535.Tpo -c -o lib1535-lib1535.o `test -f 'lib1535.c' || echo '$(srcdir)/'`lib1535.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1535-lib1535.Tpo $(DEPDIR)/lib1535-lib1535.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1535.c' object='lib1535-lib1535.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1535-lib1535.o `test -f 'lib1535.c' || echo '$(srcdir)/'`lib1535.c
+
+lib1535-lib1535.obj: lib1535.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1535-lib1535.obj -MD -MP -MF $(DEPDIR)/lib1535-lib1535.Tpo -c -o lib1535-lib1535.obj `if test -f 'lib1535.c'; then $(CYGPATH_W) 'lib1535.c'; else $(CYGPATH_W) '$(srcdir)/lib1535.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1535-lib1535.Tpo $(DEPDIR)/lib1535-lib1535.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1535.c' object='lib1535-lib1535.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1535-lib1535.obj `if test -f 'lib1535.c'; then $(CYGPATH_W) 'lib1535.c'; else $(CYGPATH_W) '$(srcdir)/lib1535.c'; fi`
+
+lib1535-first.o: first.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1535-first.o -MD -MP -MF $(DEPDIR)/lib1535-first.Tpo -c -o lib1535-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1535-first.Tpo $(DEPDIR)/lib1535-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='first.c' object='lib1535-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1535-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1535-first.obj: first.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1535-first.obj -MD -MP -MF $(DEPDIR)/lib1535-first.Tpo -c -o lib1535-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1535-first.Tpo $(DEPDIR)/lib1535-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='first.c' object='lib1535-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1535-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1535-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1535-testutil.o -MD -MP -MF $(DEPDIR)/lib1535-testutil.Tpo -c -o lib1535-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1535-testutil.Tpo $(DEPDIR)/lib1535-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='testutil.c' object='lib1535-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1535-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1535-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1535-testutil.obj -MD -MP -MF $(DEPDIR)/lib1535-testutil.Tpo -c -o lib1535-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1535-testutil.Tpo $(DEPDIR)/lib1535-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='testutil.c' object='lib1535-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1535-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+../../lib/lib1535-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1535-warnless.o -MD -MP -MF ../../lib/$(DEPDIR)/lib1535-warnless.Tpo -c -o ../../lib/lib1535-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1535-warnless.Tpo ../../lib/$(DEPDIR)/lib1535-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1535-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1535-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+../../lib/lib1535-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1535-warnless.obj -MD -MP -MF ../../lib/$(DEPDIR)/lib1535-warnless.Tpo -c -o ../../lib/lib1535-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1535-warnless.Tpo ../../lib/$(DEPDIR)/lib1535-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1535-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1535_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1535-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
+lib1536-lib1536.o: lib1536.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1536-lib1536.o -MD -MP -MF $(DEPDIR)/lib1536-lib1536.Tpo -c -o lib1536-lib1536.o `test -f 'lib1536.c' || echo '$(srcdir)/'`lib1536.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1536-lib1536.Tpo $(DEPDIR)/lib1536-lib1536.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1536.c' object='lib1536-lib1536.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1536-lib1536.o `test -f 'lib1536.c' || echo '$(srcdir)/'`lib1536.c
+
+lib1536-lib1536.obj: lib1536.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1536-lib1536.obj -MD -MP -MF $(DEPDIR)/lib1536-lib1536.Tpo -c -o lib1536-lib1536.obj `if test -f 'lib1536.c'; then $(CYGPATH_W) 'lib1536.c'; else $(CYGPATH_W) '$(srcdir)/lib1536.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1536-lib1536.Tpo $(DEPDIR)/lib1536-lib1536.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1536.c' object='lib1536-lib1536.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1536-lib1536.obj `if test -f 'lib1536.c'; then $(CYGPATH_W) 'lib1536.c'; else $(CYGPATH_W) '$(srcdir)/lib1536.c'; fi`
+
+lib1536-first.o: first.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1536-first.o -MD -MP -MF $(DEPDIR)/lib1536-first.Tpo -c -o lib1536-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1536-first.Tpo $(DEPDIR)/lib1536-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='first.c' object='lib1536-first.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1536-first.o `test -f 'first.c' || echo '$(srcdir)/'`first.c
+
+lib1536-first.obj: first.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1536-first.obj -MD -MP -MF $(DEPDIR)/lib1536-first.Tpo -c -o lib1536-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1536-first.Tpo $(DEPDIR)/lib1536-first.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='first.c' object='lib1536-first.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1536-first.obj `if test -f 'first.c'; then $(CYGPATH_W) 'first.c'; else $(CYGPATH_W) '$(srcdir)/first.c'; fi`
+
+lib1536-testutil.o: testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1536-testutil.o -MD -MP -MF $(DEPDIR)/lib1536-testutil.Tpo -c -o lib1536-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1536-testutil.Tpo $(DEPDIR)/lib1536-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='testutil.c' object='lib1536-testutil.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1536-testutil.o `test -f 'testutil.c' || echo '$(srcdir)/'`testutil.c
+
+lib1536-testutil.obj: testutil.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1536-testutil.obj -MD -MP -MF $(DEPDIR)/lib1536-testutil.Tpo -c -o lib1536-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1536-testutil.Tpo $(DEPDIR)/lib1536-testutil.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='testutil.c' object='lib1536-testutil.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1536-testutil.obj `if test -f 'testutil.c'; then $(CYGPATH_W) 'testutil.c'; else $(CYGPATH_W) '$(srcdir)/testutil.c'; fi`
+
+../../lib/lib1536-warnless.o: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1536-warnless.o -MD -MP -MF ../../lib/$(DEPDIR)/lib1536-warnless.Tpo -c -o ../../lib/lib1536-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1536-warnless.Tpo ../../lib/$(DEPDIR)/lib1536-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1536-warnless.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1536-warnless.o `test -f '../../lib/warnless.c' || echo '$(srcdir)/'`../../lib/warnless.c
+
+../../lib/lib1536-warnless.obj: ../../lib/warnless.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../../lib/lib1536-warnless.obj -MD -MP -MF ../../lib/$(DEPDIR)/lib1536-warnless.Tpo -c -o ../../lib/lib1536-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../../lib/$(DEPDIR)/lib1536-warnless.Tpo ../../lib/$(DEPDIR)/lib1536-warnless.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../../lib/warnless.c' object='../../lib/lib1536-warnless.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1536_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../../lib/lib1536-warnless.obj `if test -f '../../lib/warnless.c'; then $(CYGPATH_W) '../../lib/warnless.c'; else $(CYGPATH_W) '$(srcdir)/../../lib/warnless.c'; fi`
+
 lib1900-lib1900.o: lib1900.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lib1900-lib1900.o -MD -MP -MF $(DEPDIR)/lib1900-lib1900.Tpo -c -o lib1900-lib1900.o `test -f 'lib1900.c' || echo '$(srcdir)/'`lib1900.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lib1900-lib1900.Tpo $(DEPDIR)/lib1900-lib1900.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib1900.c' object='lib1900-lib1900.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib1900_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lib1900-lib1900.o `test -f 'lib1900.c' || echo '$(srcdir)/'`lib1900.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/Makefile.inc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/Makefile.inc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/Makefile.inc	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/Makefile.inc	2016-12-19 15:27:56.000000000 +0800
@@ -20,14 +20,14 @@
         lib560 lib562 lib564 lib565 lib566 lib567 lib568 lib569 lib570   \
  lib571 lib572 lib573 lib574 lib575 lib576        lib578 lib579 lib582   \
  lib583 lib585 lib586 lib587        lib590 lib591 lib597 lib598 lib599   \
  lib1500 lib1501 lib1502 lib1503 lib1504 lib1505 lib1506 lib1507 lib1508 \
  lib1509 lib1510 lib1511 lib1512 lib1513 lib1514 lib1515         lib1517 \
  lib1520 \
- lib1525 lib1526 lib1527 lib1528 lib1529 lib1530 lib1531 lib1532 \
- lib1533 \
+ lib1525 lib1526 lib1527 lib1528 lib1529 lib1530 lib1531 lib1532 lib1533 \
+ lib1534 lib1535 lib1536 \
  lib1900 \
  lib2033
 
 chkhostname_SOURCES = chkhostname.c ../../lib/curl_gethostname.c
 chkhostname_LDADD = @CURL_NETWORK_LIBS@
 chkhostname_DEPENDENCIES =
@@ -397,12 +397,24 @@
 lib1532_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1532
 
 lib1533_SOURCES = lib1533.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1533_LDADD = $(TESTUTIL_LIBS)
 lib1533_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1533
 
+lib1534_SOURCES = lib1534.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1534_LDADD = $(TESTUTIL_LIBS)
+lib1534_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1534
+
+lib1535_SOURCES = lib1535.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1535_LDADD = $(TESTUTIL_LIBS)
+lib1535_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1535
+
+lib1536_SOURCES = lib1536.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
+lib1536_LDADD = $(TESTUTIL_LIBS)
+lib1536_CPPFLAGS = $(AM_CPPFLAGS) -DLIB1536
+
 lib1900_SOURCES = lib1900.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib1900_LDADD = $(TESTUTIL_LIBS)
 lib1900_CPPFLAGS = $(AM_CPPFLAGS)
 
 lib2033_SOURCES = libntlmconnect.c $(SUPPORTFILES) $(TESTUTIL) $(WARNLESS)
 lib2033_LDADD = $(TESTUTIL_LIBS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/test.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/test.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/test.h	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/test.h	2016-12-19 16:15:11.000000000 +0800
@@ -17,12 +17,14 @@
  *
  * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
  * KIND, either express or implied.
  *
  ***************************************************************************/
 
+/* !checksrc! disable ASSIGNWITHINCONDITION all */
+
 /* Now include the curl_setup.h file from libcurl's private libdir (the source
    version, but that might include "curl_config.h" from the build dir so we
    need both of them in the include path), so that we get good in-depth
    knowledge about the system we're building this on */
 
 #define CURL_NO_OLDIES
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/testtrace.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/testtrace.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/libtest/testtrace.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/libtest/testtrace.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -107,13 +107,13 @@
     secs = epoch_offset + tv.tv_sec;
     now = localtime(&secs);  /* not thread safe but we don't care */
     snprintf(timebuf, sizeof(timebuf), "%02d:%02d:%02d.%06ld ",
              now->tm_hour, now->tm_min, now->tm_sec, (long)tv.tv_usec);
   }
 
-  switch (type) {
+  switch(type) {
   case CURLINFO_TEXT:
     fprintf(stderr, "%s== Info: %s", timestr, (char *)data);
   default: /* in case a new one is introduced to shock us */
     return 0;
 
   case CURLINFO_HEADER_OUT:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/manpage-scan.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/manpage-scan.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/manpage-scan.pl	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/manpage-scan.pl	2016-12-19 15:27:56.000000000 +0800
@@ -144,16 +144,16 @@
     '--eprt' => 6,
     '--epsv' => 6,
     '--keepalive' => 6,
     '-N, --buffer' => 6,
     '--sessionid' => 6,
 
-    # deprecated options do not need to be in curl -h output
-    '--krb4' => 4,
-    '--ftp-ssl' => 4,
-    '--ftp-ssl-reqd' => 4,
+    # deprecated options do not need to be in tool_help.c nor curl.1
+    '--krb4' => 6,
+    '--ftp-ssl' => 6,
+    '--ftp-ssl-reqd' => 6,
 
     # for tests and debug only, can remain hidden
     '--test-event' => 6,
     '--wdebug' => 6,
     );
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/pathhelp.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/pathhelp.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/pathhelp.pm	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/pathhelp.pm	2016-12-19 15:27:56.000000000 +0800
@@ -17,13 +17,13 @@
 #
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 ###########################################################################
 
-# This Perl package helps with path transforming when running cURL tests on
+# This Perl package helps with path transforming when running curl tests on
 # Win32 platform with Msys or Cygwin.
 # Three main functions 'sys_native_abs_path', 'sys_native_path' and
 # 'build_sys_abs_path' autodetect format of given pathnames. Following formats
 # are supported:
 #  (1) /some/path   - absolute path in Unix-style
 #  (2) D:/some/path - absolute path in Win32-style
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/README	2016-10-12 07:15:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/README	2016-12-19 15:27:56.000000000 +0800
@@ -1,13 +1,13 @@
                                   _   _ ____  _
                               ___| | | |  _ \| |
                              / __| | | | |_) | |
                             | (__| |_| |  _ <| |___
                              \___|\___/|_| \_\_____|
 
-The cURL Test Suite
+The curl Test Suite
 
  1. Running
   1.1 Requires to run
   1.2 Port numbers used by test servers
   1.3 Test servers
   1.4 Run
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/runtests.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/runtests.pdf differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/runtests.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/runtests.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/runtests.pl	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/runtests.pl	2016-12-19 15:27:56.000000000 +0800
@@ -2650,13 +2650,13 @@
                "*\n");
     }
 
     logmsg sprintf("* Servers: %s", $stunnel?"SSL ":"");
     logmsg sprintf("%s", $http_ipv6?"HTTP-IPv6 ":"");
     logmsg sprintf("%s", $http_unix?"HTTP-unix ":"");
-    logmsg sprintf("%s\n", $ftp_ipv6?"FTP-IPv6 ":"OFF");
+    logmsg sprintf("%s\n", $ftp_ipv6?"FTP-IPv6 ":"");
 
     logmsg sprintf("* Env: %s%s", $valgrind?"Valgrind ":"",
                    $run_event_based?"event-based ":"");
     logmsg sprintf("%s\n", $libtool?"Libtool ":"");
 
     if($verbose) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/getpart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/getpart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/getpart.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/getpart.c	2016-12-19 15:27:56.000000000 +0800
@@ -306,13 +306,14 @@
       ** closing section tag
       */
 
       ptr++;
       end = ptr;
       EAT_WORD(end);
-      if((len.sig = end - ptr) > MAX_TAG_LEN) {
+      len.sig = end - ptr;
+      if(len.sig > MAX_TAG_LEN) {
         error = GPE_NO_BUFFER_SPACE;
         break;
       }
       memcpy(ptag, ptr, len.uns);
       ptag[len.uns] = '\0';
 
@@ -367,13 +368,14 @@
       ** opening section tag
       */
 
       /* get potential tag */
       end = ptr;
       EAT_WORD(end);
-      if((len.sig = end - ptr) > MAX_TAG_LEN) {
+      len.sig = end - ptr;
+      if(len.sig > MAX_TAG_LEN) {
         error = GPE_NO_BUFFER_SPACE;
         break;
       }
       memcpy(ptag, ptr, len.uns);
       ptag[len.uns] = '\0';
 
@@ -386,13 +388,14 @@
       /* get all potential attributes */
       ptr = end;
       EAT_SPACE(ptr);
       end = ptr;
       while(*end && ('>' != *end))
         end++;
-      if((len.sig = end - ptr) > MAX_TAG_LEN) {
+      len.sig = end - ptr;
+      if(len.sig > MAX_TAG_LEN) {
         error = GPE_NO_BUFFER_SPACE;
         break;
       }
       memcpy(patt, ptr, len.uns);
       patt[len.uns] = '\0';
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/rtspd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/rtspd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/rtspd.c	2016-11-01 06:47:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/rtspd.c	2016-12-19 15:27:56.000000000 +0800
@@ -126,13 +126,13 @@
 #ifndef DEFAULT_LOGFILE
 #define DEFAULT_LOGFILE "log/rtspd.log"
 #endif
 
 const char *serverlogfile = DEFAULT_LOGFILE;
 
-#define RTSPDVERSION "cURL test suite RTSP server/0.1"
+#define RTSPDVERSION "curl test suite RTSP server/0.1"
 
 #define REQUEST_DUMP  "log/server.input"
 #define RESPONSE_DUMP "log/server.response"
 
 /* very-big-path support */
 #define MAXDOCNAMELEN 140000
@@ -257,42 +257,48 @@
 }
 
 static void install_signal_handlers(void)
 {
 #ifdef SIGHUP
   /* ignore SIGHUP signal */
-  if((old_sighup_handler = signal(SIGHUP, SIG_IGN)) == SIG_ERR)
+  old_sighup_handler = signal(SIGHUP, SIG_IGN);
+  if(old_sighup_handler == SIG_ERR)
     logmsg("cannot install SIGHUP handler: %s", strerror(errno));
 #endif
 #ifdef SIGPIPE
   /* ignore SIGPIPE signal */
-  if((old_sigpipe_handler = signal(SIGPIPE, SIG_IGN)) == SIG_ERR)
+  old_sigpipe_handler = signal(SIGPIPE, SIG_IGN);
+  if(old_sigpipe_handler == SIG_ERR)
     logmsg("cannot install SIGPIPE handler: %s", strerror(errno));
 #endif
 #ifdef SIGALRM
   /* ignore SIGALRM signal */
-  if((old_sigalrm_handler = signal(SIGALRM, SIG_IGN)) == SIG_ERR)
+  old_sigalrm_handler = signal(SIGALRM, SIG_IGN);
+  if(old_sigalrm_handler == SIG_ERR)
     logmsg("cannot install SIGALRM handler: %s", strerror(errno));
 #endif
 #ifdef SIGINT
   /* handle SIGINT signal with our exit_signal_handler */
-  if((old_sigint_handler = signal(SIGINT, exit_signal_handler)) == SIG_ERR)
+  old_sigint_handler = signal(SIGINT, exit_signal_handler);
+  if(old_sigint_handler == SIG_ERR)
     logmsg("cannot install SIGINT handler: %s", strerror(errno));
   else
     siginterrupt(SIGINT, 1);
 #endif
 #ifdef SIGTERM
   /* handle SIGTERM signal with our exit_signal_handler */
-  if((old_sigterm_handler = signal(SIGTERM, exit_signal_handler)) == SIG_ERR)
+  old_sigterm_handler = signal(SIGTERM, exit_signal_handler);
+  if(old_sigterm_handler == SIG_ERR)
     logmsg("cannot install SIGTERM handler: %s", strerror(errno));
   else
     siginterrupt(SIGTERM, 1);
 #endif
 #if defined(SIGBREAK) && defined(WIN32)
   /* handle SIGBREAK signal with our exit_signal_handler */
-  if((old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler)) == SIG_ERR)
+  old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler);
+  if(old_sigbreak_handler == SIG_ERR)
     logmsg("cannot install SIGBREAK handler: %s", strerror(errno));
   else
     siginterrupt(SIGBREAK, 1);
 #endif
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/sockfilt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/sockfilt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/sockfilt.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/sockfilt.c	2016-12-19 15:27:56.000000000 +0800
@@ -203,42 +203,48 @@
 }
 
 static void install_signal_handlers(void)
 {
 #ifdef SIGHUP
   /* ignore SIGHUP signal */
-  if((old_sighup_handler = signal(SIGHUP, SIG_IGN)) == SIG_ERR)
+  old_sighup_handler = signal(SIGHUP, SIG_IGN);
+  if(old_sighup_handler == SIG_ERR)
     logmsg("cannot install SIGHUP handler: %s", strerror(errno));
 #endif
 #ifdef SIGPIPE
   /* ignore SIGPIPE signal */
-  if((old_sigpipe_handler = signal(SIGPIPE, SIG_IGN)) == SIG_ERR)
+  old_sigpipe_handler = signal(SIGPIPE, SIG_IGN);
+  if(old_sigpipe_handler == SIG_ERR)
     logmsg("cannot install SIGPIPE handler: %s", strerror(errno));
 #endif
 #ifdef SIGALRM
   /* ignore SIGALRM signal */
-  if((old_sigalrm_handler = signal(SIGALRM, SIG_IGN)) == SIG_ERR)
+  old_sigalrm_handler = signal(SIGALRM, SIG_IGN);
+  if(old_sigalrm_handler == SIG_ERR)
     logmsg("cannot install SIGALRM handler: %s", strerror(errno));
 #endif
 #ifdef SIGINT
   /* handle SIGINT signal with our exit_signal_handler */
-  if((old_sigint_handler = signal(SIGINT, exit_signal_handler)) == SIG_ERR)
+  old_sigint_handler = signal(SIGINT, exit_signal_handler);
+  if(old_sigint_handler == SIG_ERR)
     logmsg("cannot install SIGINT handler: %s", strerror(errno));
   else
     siginterrupt(SIGINT, 1);
 #endif
 #ifdef SIGTERM
   /* handle SIGTERM signal with our exit_signal_handler */
-  if((old_sigterm_handler = signal(SIGTERM, exit_signal_handler)) == SIG_ERR)
+  old_sigterm_handler = signal(SIGTERM, exit_signal_handler);
+  if(old_sigterm_handler == SIG_ERR)
     logmsg("cannot install SIGTERM handler: %s", strerror(errno));
   else
     siginterrupt(SIGTERM, 1);
 #endif
 #if defined(SIGBREAK) && defined(WIN32)
   /* handle SIGBREAK signal with our exit_signal_handler */
-  if((old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler)) == SIG_ERR)
+  old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler);
+  if(old_sigbreak_handler == SIG_ERR)
     logmsg("cannot install SIGBREAK handler: %s", strerror(errno));
   else
     siginterrupt(SIGBREAK, 1);
 #endif
 }
 
@@ -1280,13 +1286,13 @@
       error = SOCKERRNO;
       logmsg("getsockname() failed with error: (%d) %s",
              error, strerror(error));
       sclose(sock);
       return CURL_SOCKET_BAD;
     }
-    switch (localaddr.sa.sa_family) {
+    switch(localaddr.sa.sa_family) {
     case AF_INET:
       *listenport = ntohs(localaddr.sa4.sin_port);
       break;
 #ifdef ENABLE_IPV6
     case AF_INET6:
       *listenport = ntohs(localaddr.sa6.sin6_port);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/sws.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/sws.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/sws.c	2016-11-01 06:46:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/sws.c	2016-12-19 15:27:56.000000000 +0800
@@ -137,13 +137,13 @@
 #ifndef DEFAULT_LOGFILE
 #define DEFAULT_LOGFILE "log/sws.log"
 #endif
 
 const char *serverlogfile = DEFAULT_LOGFILE;
 
-#define SWSVERSION "cURL test suite HTTP server/0.1"
+#define SWSVERSION "curl test suite HTTP server/0.1"
 
 #define REQUEST_DUMP  "log/server.input"
 #define RESPONSE_DUMP "log/server.response"
 
 /* when told to run as proxy, we store the logs in different files so that
    they can co-exist with the same program running as a "server" */
@@ -262,42 +262,48 @@
 }
 
 static void install_signal_handlers(void)
 {
 #ifdef SIGHUP
   /* ignore SIGHUP signal */
-  if((old_sighup_handler = signal(SIGHUP, SIG_IGN)) == SIG_ERR)
+  old_sighup_handler = signal(SIGHUP, SIG_IGN);
+  if(old_sighup_handler == SIG_ERR)
     logmsg("cannot install SIGHUP handler: %s", strerror(errno));
 #endif
 #ifdef SIGPIPE
   /* ignore SIGPIPE signal */
-  if((old_sigpipe_handler = signal(SIGPIPE, SIG_IGN)) == SIG_ERR)
+  old_sigpipe_handler = signal(SIGPIPE, SIG_IGN);
+  if(old_sigpipe_handler == SIG_ERR)
     logmsg("cannot install SIGPIPE handler: %s", strerror(errno));
 #endif
 #ifdef SIGALRM
   /* ignore SIGALRM signal */
-  if((old_sigalrm_handler = signal(SIGALRM, SIG_IGN)) == SIG_ERR)
+  old_sigalrm_handler = signal(SIGALRM, SIG_IGN);
+  if(old_sigalrm_handler == SIG_ERR)
     logmsg("cannot install SIGALRM handler: %s", strerror(errno));
 #endif
 #ifdef SIGINT
   /* handle SIGINT signal with our exit_signal_handler */
-  if((old_sigint_handler = signal(SIGINT, exit_signal_handler)) == SIG_ERR)
+  old_sigint_handler = signal(SIGINT, exit_signal_handler);
+  if(old_sigint_handler == SIG_ERR)
     logmsg("cannot install SIGINT handler: %s", strerror(errno));
   else
     siginterrupt(SIGINT, 1);
 #endif
 #ifdef SIGTERM
   /* handle SIGTERM signal with our exit_signal_handler */
-  if((old_sigterm_handler = signal(SIGTERM, exit_signal_handler)) == SIG_ERR)
+  old_sigterm_handler = signal(SIGTERM, exit_signal_handler);
+  if(old_sigterm_handler == SIG_ERR)
     logmsg("cannot install SIGTERM handler: %s", strerror(errno));
   else
     siginterrupt(SIGTERM, 1);
 #endif
 #if defined(SIGBREAK) && defined(WIN32)
   /* handle SIGBREAK signal with our exit_signal_handler */
-  if((old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler)) == SIG_ERR)
+  old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler);
+  if(old_sigbreak_handler == SIG_ERR)
     logmsg("cannot install SIGBREAK handler: %s", strerror(errno));
   else
     siginterrupt(SIGBREAK, 1);
 #endif
 }
 
@@ -2228,15 +2234,15 @@
     struct timeval timeout = {0, 250000L}; /* 250 ms */
     curl_socket_t maxfd = (curl_socket_t)-1;
 
     /* Clear out closed sockets */
     for(socket_idx = num_sockets - 1; socket_idx >= 1; --socket_idx) {
       if(CURL_SOCKET_BAD == all_sockets[socket_idx]) {
-        char* dst = (char *) (all_sockets + socket_idx);
-        char* src = (char *) (all_sockets + socket_idx + 1);
-        char* end = (char *) (all_sockets + num_sockets);
+        char *dst = (char *) (all_sockets + socket_idx);
+        char *src = (char *) (all_sockets + socket_idx + 1);
+        char *end = (char *) (all_sockets + num_sockets);
         memmove(dst, src, end - src);
         num_sockets -= 1;
       }
     }
 
     if(got_exit_signal)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/tftpd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/tftpd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/tftpd.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/tftpd.c	2016-12-19 15:27:56.000000000 +0800
@@ -12,13 +12,13 @@
  *
  * This source file was started based on netkit-tftpd 0.17
  * Heavily modified for curl's test suite
  */
 
 /*
- * Copyright (c) 1983 Regents of the University of California.
+ * Copyright (c) 1983, 2016 Regents of the University of California.
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -364,37 +364,42 @@
 }
 
 static void install_signal_handlers(void)
 {
 #ifdef SIGHUP
   /* ignore SIGHUP signal */
-  if((old_sighup_handler = signal(SIGHUP, SIG_IGN)) == SIG_ERR)
+  old_sighup_handler = signal(SIGHUP, SIG_IGN);
+  if(old_sighup_handler == SIG_ERR)
     logmsg("cannot install SIGHUP handler: %s", strerror(errno));
 #endif
 #ifdef SIGPIPE
   /* ignore SIGPIPE signal */
-  if((old_sigpipe_handler = signal(SIGPIPE, SIG_IGN)) == SIG_ERR)
+  old_sigpipe_handler = signal(SIGPIPE, SIG_IGN);
+  if(old_sigpipe_handler == SIG_ERR)
     logmsg("cannot install SIGPIPE handler: %s", strerror(errno));
 #endif
 #ifdef SIGINT
   /* handle SIGINT signal with our exit_signal_handler */
-  if((old_sigint_handler = signal(SIGINT, exit_signal_handler)) == SIG_ERR)
+  old_sigint_handler = signal(SIGINT, exit_signal_handler);
+  if(old_sigint_handler == SIG_ERR)
     logmsg("cannot install SIGINT handler: %s", strerror(errno));
   else
     siginterrupt(SIGINT, 1);
 #endif
 #ifdef SIGTERM
   /* handle SIGTERM signal with our exit_signal_handler */
-  if((old_sigterm_handler = signal(SIGTERM, exit_signal_handler)) == SIG_ERR)
+  old_sigterm_handler = signal(SIGTERM, exit_signal_handler);
+  if(old_sigterm_handler == SIG_ERR)
     logmsg("cannot install SIGTERM handler: %s", strerror(errno));
   else
     siginterrupt(SIGTERM, 1);
 #endif
 #if defined(SIGBREAK) && defined(WIN32)
   /* handle SIGBREAK signal with our exit_signal_handler */
-  if((old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler)) == SIG_ERR)
+  old_sigbreak_handler = signal(SIGBREAK, exit_signal_handler);
+  if(old_sigbreak_handler == SIG_ERR)
     logmsg("cannot install SIGBREAK handler: %s", strerror(errno));
   else
     siginterrupt(SIGBREAK, 1);
 #endif
 }
 
@@ -1037,27 +1042,27 @@
     return 1;
   }
 
 #ifdef USE_WINSOCK
   recvtimeout = sizeof(recvtimeoutbak);
   getsockopt(peer, SOL_SOCKET, SO_RCVTIMEO,
-             (char*)&recvtimeoutbak, (int*)&recvtimeout);
+             (char *)&recvtimeoutbak, (int *)&recvtimeout);
   recvtimeout = TIMEOUT*1000;
   setsockopt(peer, SOL_SOCKET, SO_RCVTIMEO,
-             (const char*)&recvtimeout, sizeof(recvtimeout));
+             (const char *)&recvtimeout, sizeof(recvtimeout));
 #endif
 
   if(tp->th_opcode == opcode_WRQ)
     recvtftp(test, pf);
   else
     sendtftp(test, pf);
 
 #ifdef USE_WINSOCK
   recvtimeout = recvtimeoutbak;
   setsockopt(peer, SOL_SOCKET, SO_RCVTIMEO,
-             (const char*)&recvtimeout, sizeof(recvtimeout));
+             (const char *)&recvtimeout, sizeof(recvtimeout));
 #endif
 
   return 0;
 }
 
 /* Based on the testno, parse the correct server commands. */
@@ -1229,25 +1234,23 @@
  * Send the requested file.
  */
 static void sendtftp(struct testcase *test, struct formats *pf)
 {
   int size;
   ssize_t n;
-  /* This is volatile to live through a siglongjmp */
+  /* These are volatile to live through a siglongjmp */
   volatile unsigned short sendblock; /* block count */
-  struct tftphdr *sdp;      /* data buffer */
-  struct tftphdr *sap;      /* ack buffer */
+  struct tftphdr * volatile sdp = r_init(); /* data buffer */
+  struct tftphdr * const sap = &ackbuf.hdr; /* ack buffer */
 
   sendblock = 1;
 #if defined(HAVE_ALARM) && defined(SIGALRM)
   mysignal(SIGALRM, timer);
 #endif
-  sdp = r_init();
-  sap = &ackbuf.hdr;
   do {
-    size = readit(test, &sdp, pf->f_convert);
+    size = readit(test, (struct tftphdr **)&sdp, pf->f_convert);
     if(size < 0) {
       nak(errno + 100);
       return;
     }
     sdp->th_opcode = htons((unsigned short)opcode_DATA);
     sdp->th_block = htons(sendblock);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/util.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/util.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/util.c	2016-11-01 06:46:21.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/util.c	2016-12-19 15:27:56.000000000 +0800
@@ -132,13 +132,13 @@
     fprintf(stderr, "Msg not logged: %s %s\n", timebuf, buffer);
   }
 }
 
 #ifdef WIN32
 /* use instead of perror() on generic windows */
-void win32_perror (const char *msg)
+void win32_perror(const char *msg)
 {
   char buf[512];
   DWORD err = SOCKERRNO;
 
   if(!FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM, NULL, err,
                     LANG_NEUTRAL, buf, sizeof(buf), NULL))
@@ -312,13 +312,13 @@
 static char raw_toupper(char in)
 {
 #if !defined(CURL_DOES_CONVERSIONS)
   if(in >= 'a' && in <= 'z')
     return (char)('A' + in - 'a');
 #else
-  switch (in) {
+  switch(in) {
   case 'a':
     return 'A';
   case 'b':
     return 'B';
   case 'c':
     return 'C';
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/util.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/util.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/server/util.h	2016-11-01 06:48:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/server/util.h	2016-12-19 16:15:11.000000000 +0800
@@ -41,13 +41,13 @@
 #include <fcntl.h>
 
 #define sleep(sec)   Sleep ((sec)*1000)
 
 #undef perror
 #define perror(m) win32_perror(m)
-void win32_perror (const char *msg);
+void win32_perror(const char *msg);
 #endif  /* WIN32 */
 
 #ifdef USE_WINSOCK
 void win32_init(void);
 void win32_cleanup(void);
 #endif  /* USE_WINSOCK */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/testcurl.pdf and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/testcurl.pdf differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit: CMakeLists.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/Makefile.am	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/Makefile.am	2016-12-19 15:27:56.000000000 +0800
@@ -51,13 +51,13 @@
               -I$(top_builddir)/lib          \
               -I$(top_srcdir)/lib            \
               -I$(top_srcdir)/src            \
               -I$(top_srcdir)/tests/libtest
 endif
 
-EXTRA_DIST = Makefile.inc
+EXTRA_DIST = Makefile.inc CMakeLists.txt
 
 # Prevent LIBS from being used for all link targets
 LIBS = $(BLANK_AT_MAKETIME)
 
 LDADD = $(top_builddir)/src/libcurltool.la   \
         $(top_builddir)/lib/libcurlu.la      \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/Makefile.in	2016-10-31 17:41:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/Makefile.in	2016-12-19 16:16:48.000000000 +0800
@@ -577,13 +577,13 @@
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/lib \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/src \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/tests/libtest \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_builddir)/ares \
 @USE_EMBEDDED_ARES_TRUE@	-I$(top_srcdir)/ares -DCURL_STATICLIB \
 @USE_EMBEDDED_ARES_TRUE@	-DUNITTESTS
-EXTRA_DIST = Makefile.inc
+EXTRA_DIST = Makefile.inc CMakeLists.txt
 LDADD = $(top_builddir)/src/libcurltool.la   \
         $(top_builddir)/lib/libcurlu.la      \
         @LDFLAGS@ @LIBCURL_LIBS@
 
 DEPENDENCIES = $(top_builddir)/src/libcurltool.la \
                $(top_builddir)/lib/libcurlu.la
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1303.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1303.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1303.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1303.c	2016-12-19 15:27:56.000000000 +0800
@@ -66,18 +66,18 @@
   bool connecting;
   long result;
   const char *comment;
 };
 
 UNITTEST_START
+{
+  struct timeval now;
+  long timeout;
+  unsigned int i;
 
-struct timeval now;
-long timeout;
-unsigned int i;
-
-const struct timetest run[] = {
+  const struct timetest run[] = {
   /* both timeouts set, not connecting */
   {BASE + 4, 0,      10000, 8000, FALSE, 6000, "6 seconds should be left"},
   {BASE + 4, 990000, 10000, 8000, FALSE, 5010, "5010 ms should be left"},
   {BASE + 10, 0,     10000, 8000, FALSE, -1,   "timeout is -1, expired"},
   {BASE + 12, 0,     10000, 8000, FALSE, -2000, "-2000, overdue 2 seconds"},
 
@@ -123,24 +123,23 @@
   {BASE + 10, 0,     0, 0, TRUE, 290000, "no timeout active"},
   {BASE + 12, 0,     0, 0, TRUE, 288000, "no timeout active"},
 
   /* both timeouts set, connecting, connect timeout the longer one */
   {BASE + 4, 0,      10000, 12000, TRUE, 6000, "6 seconds should be left"},
 
-};
+  };
 
-/* this is the pretended start time of the transfer */
-data->progress.t_startsingle.tv_sec = BASE;
-data->progress.t_startsingle.tv_usec = 0;
-data->progress.t_startop.tv_sec = BASE;
-data->progress.t_startop.tv_usec = 0;
-
-for(i=0; i < sizeof(run)/sizeof(run[0]); i++) {
-  NOW(run[i].now_s, run[i].now_us);
-  TIMEOUTS(run[i].timeout_ms, run[i].connecttimeout_ms);
-  timeout =  Curl_timeleft(data, &now, run[i].connecting);
-  if(timeout != run[i].result)
-    fail(run[i].comment);
+  /* this is the pretended start time of the transfer */
+  data->progress.t_startsingle.tv_sec = BASE;
+  data->progress.t_startsingle.tv_usec = 0;
+  data->progress.t_startop.tv_sec = BASE;
+  data->progress.t_startop.tv_usec = 0;
+
+  for(i=0; i < sizeof(run)/sizeof(run[0]); i++) {
+    NOW(run[i].now_s, run[i].now_us);
+    TIMEOUTS(run[i].timeout_ms, run[i].connecttimeout_ms);
+    timeout =  Curl_timeleft(data, &now, run[i].connecting);
+    if(timeout != run[i].result)
+      fail(run[i].comment);
+  }
 }
-
-
 UNITTEST_STOP
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1304.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1304.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1304.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1304.c	2016-12-19 15:27:56.000000000 +0800
@@ -45,13 +45,13 @@
   Curl_safefree(login);
 }
 
 UNITTEST_START
   int result;
 
-  static const char* const filename1 = "log/netrc1304";
+  static const char * const filename1 = "log/netrc1304";
   memcpy(filename, filename1, strlen(filename1));
 
   /*
    * Test a non existent host in our netrc file.
    */
   result = Curl_parsenetrc("test.example.com", &login, &password, filename);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1305.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1305.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1305.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1305.c	2016-12-19 15:27:56.000000000 +0800
@@ -75,23 +75,26 @@
 
 static Curl_addrinfo *fake_ai(void)
 {
   static Curl_addrinfo *ai;
   int ss_size;
 
-  ss_size = sizeof (struct sockaddr_in);
+  ss_size = sizeof(struct sockaddr_in);
 
-  if((ai = calloc(1, sizeof(Curl_addrinfo))) == NULL)
+  ai = calloc(1, sizeof(Curl_addrinfo));
+  if(!ai)
     return NULL;
 
-  if((ai->ai_canonname = strdup("dummy")) == NULL) {
+  ai->ai_canonname = strdup("dummy");
+  if(!ai->ai_canonname) {
     free(ai);
     return NULL;
   }
 
-  if((ai->ai_addr = calloc(1, ss_size)) == NULL) {
+  ai->ai_addr = calloc(1, ss_size);
+  if(!ai->ai_addr) {
     free(ai->ai_canonname);
     free(ai);
     return NULL;
   }
 
   ai->ai_family = AF_INET;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1308.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1308.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1308.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1308.c	2016-12-19 15:27:56.000000000 +0800
@@ -2,13 +2,13 @@
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
  * You may opt to use, copy, modify, merge, publish, distribute and/or sell
@@ -39,14 +39,14 @@
   (*(size_t *) arg) += len;
   return len;
 }
 
 UNITTEST_START
   int rc;
-  struct curl_httppost* post = NULL;
-  struct curl_httppost* last = NULL;
+  struct curl_httppost *post = NULL;
+  struct curl_httppost *last = NULL;
   size_t total_size = 0;
   char buffer[] = "test buffer";
 
   rc = curl_formadd(&post, &last, CURLFORM_COPYNAME, "name",
                     CURLFORM_COPYCONTENTS, "content", CURLFORM_END);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1602.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1602.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1602.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1602.c	2016-12-19 15:27:56.000000000 +0800
@@ -29,13 +29,13 @@
 #include "memdebug.h" /* LAST include file */
 
 static struct curl_hash hash_static;
 
 static void mydtor(void *p)
 {
-  int *ptr = (int*)p;
+  int *ptr = (int *)p;
   free(ptr);
 }
 
 static CURLcode unit_setup(void)
 {
   return Curl_hash_init(&hash_static, 7, Curl_hash_str,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1604.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1604.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/tests/unit/unit1604.c	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/tests/unit/unit1604.c	2016-12-19 15:27:56.000000000 +0800
@@ -39,24 +39,26 @@
 {
 
 }
 
 #if defined(MSDOS) || defined(WIN32)
 
-static char *getflagstr(int flags) {
+static char *getflagstr(int flags)
+{
   char *buf = malloc(256);
   fail_unless(buf, "out of memory");
   snprintf(buf, 256, "%s,%s,%s,%s",
     ((flags & SANITIZE_ALLOW_COLONS) ? "SANITIZE_ALLOW_COLONS" : ""),
     ((flags & SANITIZE_ALLOW_PATH) ? "SANITIZE_ALLOW_PATH" : ""),
     ((flags & SANITIZE_ALLOW_RESERVED) ? "SANITIZE_ALLOW_RESERVED" : ""),
     ((flags & SANITIZE_ALLOW_TRUNCATE) ? "SANITIZE_ALLOW_TRUNCATE" : ""));
   return buf;
 }
 
-static char *getcurlcodestr(int cc) {
+static char *getcurlcodestr(int cc)
+{
   char *buf = malloc(256);
   fail_unless(buf, "out of memory");
   snprintf(buf, 256, "%s (%d)",
     (cc == SANITIZE_ERR_OK ? "SANITIZE_ERR_OK" :
      cc == SANITIZE_ERR_BAD_ARGUMENT ? "SANITIZE_ERR_BAD_ARGUMENT" :
      cc == SANITIZE_ERR_INVALID_PATH ? "SANITIZE_ERR_INVALID_PATH" :
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/winbuild/MakefileBuild.vc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/winbuild/MakefileBuild.vc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/winbuild/MakefileBuild.vc	2016-10-31 20:34:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/winbuild/MakefileBuild.vc	2016-12-19 15:27:56.000000000 +0800
@@ -120,14 +120,28 @@
 !ELSEIF "$(WITH_SSL)"=="static"
 SSL_LIBS     = libeay32.lib ssleay32.lib gdi32.lib user32.lib crypt32.lib
 USE_SSL      = true
 SSL          = static
 !ENDIF
 
+!IFNDEF USE_NGHTTP2
+USE_NGHTTP2  = false
+!ENDIF
+
 !IFDEF USE_SSL
 SSL_CFLAGS   = /DUSE_OPENSSL /I"$(DEVEL_INCLUDE)/openssl"
+
+!IF "$(USE_NGHTTP2)"=="yes"
+USE_NGHTTP2  = true
+!ENDIF
+
+!IF "$(USE_NGHTTP2)"=="true"
+SSL_CFLAGS   = $(SSL_CFLAGS) /DUSE_NGHTTP2
+SSL_LIBS     = $(SSL_LIBS) nghttp2.lib
+!ENDIF
+
 !ENDIF
 
 !IF "$(WITH_MBEDTLS)"=="dll" || "$(WITH_MBEDTLS)"=="static"
 USE_MBEDTLS    = true
 MBEDTLS        = $(WITH_MBEDTLS)
 MBEDTLS_CFLAGS = /DUSE_MBEDTLS
@@ -413,12 +427,13 @@
 	@cd $(DIRDIST)
 	@-$(ZIP) -9 -q -r ..\$(CONFIG_NAME_LIB).zip .>nul 2<&1
 	@cd $(MAKEDIR)
 
 $(TARGET): $(LIB_OBJS) $(LIB_DIROBJ) $(DISTDIR)
 	@echo Using SSL: $(USE_SSL)
+	@echo Using NGHTTP2: $(USE_NGHTTP2)
 	@echo Using c-ares: $(USE_CARES)
 	@echo Using SSH2: $(USE_SSH2)
 	@echo Using ZLIB: $(USE_ZLIB)
 	@echo Using IDN:  $(USE_IDN)
 	@echo Using IPv6: $(USE_IPV6)
 	@echo Using SSPI: $(USE_SSPI)
@@ -491,13 +506,12 @@
 CURL_LIBCURL_LIBNAME=$(LIB_NAME_IMP)
 !ENDIF
 !ENDIF
 
 CURL_FROM_LIBCURL=$(CURL_DIROBJ)\tool_hugehelp.obj \
  $(CURL_DIROBJ)\nonblock.obj \
- $(CURL_DIROBJ)\strcase.obj \
  $(CURL_DIROBJ)\strtoofft.obj \
  $(CURL_DIROBJ)\warnless.obj
  
 $(PROGRAM_NAME): $(CURL_DIROBJ) $(CURL_FROM_LIBCURL) $(EXE_OBJS)
 	$(CURL_LINK) $(CURL_LFLAGS) $(CURL_LIBCURL_LIBNAME) $(WIN_LIBS) $(CURL_FROM_LIBCURL) $(EXE_OBJS)
 	$(MANIFESTTOOL)
@@ -506,14 +520,12 @@
 	$(CURL_CC) $(CURL_CFLAGS) /Fo"$@"  $<
 
 $(CURL_DIROBJ)\tool_hugehelp.obj: $(CURL_SRC_DIR)\tool_hugehelp.c
 	$(CURL_CC) $(CURL_CFLAGS) /Zm200 /Fo"$@" $(CURL_SRC_DIR)\tool_hugehelp.c
 $(CURL_DIROBJ)\nonblock.obj: ../lib/nonblock.c
 	$(CURL_CC) $(CURL_CFLAGS) /Fo"$@" ../lib/nonblock.c
-$(CURL_DIROBJ)\strcase.obj: ../lib/strcase.c
-	$(CURL_CC) $(CURL_CFLAGS) /Fo"$@" ../lib/strcase.c
 $(CURL_DIROBJ)\strtoofft.obj: ../lib/strtoofft.c
 	$(CURL_CC) $(CURL_CFLAGS) /Fo"$@" ../lib/strtoofft.c
 $(CURL_DIROBJ)\warnless.obj: ../lib/warnless.c
 	$(CURL_CC) $(CURL_CFLAGS) /Fo"$@" ../lib/warnless.c
 $(CURL_DIROBJ)\curl.res: $(CURL_SRC_DIR)\curl.rc
 	rc $(CURL_RC_FLAGS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/winbuild/Makefile.vc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/winbuild/Makefile.vc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.51.0/winbuild/Makefile.vc	2016-10-10 20:12:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/repos/curl-7.52.0/winbuild/Makefile.vc	2016-12-19 15:27:56.000000000 +0800
@@ -18,12 +18,14 @@
 !MESSAGE   VC=<6,7,8,9,10,11,12,14>     - VC versions
 !MESSAGE   WITH_DEVEL=<path>            - Paths for the development files (SSL, zlib, etc.)
 !MESSAGE                                  Defaults to sibbling directory deps: ../deps
 !MESSAGE                                  Libraries can be fetched at http://pecl2.php.net/downloads/php-windows-builds/
 !MESSAGE                                  Uncompress them into the deps folder.
 !MESSAGE   WITH_SSL=<dll or static>     - Enable OpenSSL support, DLL or static
+!MESSAGE   ENABLE_NGHTTP2=<yes or no>   - Enable HTTP/2 support, defaults to no
+!MESSAGE                                  Requires OpenSSL
 !MESSAGE   WITH_CARES=<dll or static>   - Enable c-ares support, DLL or static
 !MESSAGE   WITH_ZLIB=<dll or static>    - Enable zlib support, DLL or static
 !MESSAGE   WITH_SSH2=<dll or static>    - Enable libSSH2 support, DLL or static
 !MESSAGE   WITH_MBEDTLS=<dll or static> - Enable mbedTLS support, DLL or static
 !MESSAGE   ENABLE_IDN=<yes or no>       - Enable use of Windows IDN APIs, defaults to yes
 !MESSAGE                                  Requires Windows Vista or later, or installation from:
@@ -106,12 +108,22 @@
 SSL     = dll
 !ELSEIF "$(WITH_SSL)"=="static"
 USE_SSL = true
 SSL     = static
 !ENDIF
 
+!IF "$(USE_SSL)"=="true"
+!IF "$(ENABLE_NGHTTP2)"=="yes"
+USE_NGHTTP2 = true
+!ENDIF
+!ENDIF
+
+!IFNDEF USE_NGHTTP2
+USE_NGHTTP2 = false
+!ENDIF
+
 !IF "$(WITH_MBEDTLS)"=="dll" || "$(WITH_MBEDTLS)"=="static"
 USE_MBEDTLS = true
 MBEDTLS     = $(WITH_MBEDTLS)
 !ENDIF
 
 !IF ( "$(USE_SSL)"=="true" && "$(USE_WINSSL)"=="true" ) \
@@ -210,12 +222,13 @@
 	@SET MACRO_NAME=CURL_OBJS
 	@SET OUTFILE=CURL_OBJS.inc
 	@gen_resp_file.bat $(CURL_OBJS)
 
 	@SET CONFIG_NAME_LIB=$(CONFIG_NAME_LIB)
 	@SET MACHINE=$(MACHINE)
+	@SET USE_NGHTTP2=$(USE_NGHTTP2)
 	@SET USE_IDN=$(USE_IDN)
 	@SET USE_IPV6=$(USE_IPV6)
 	@SET USE_SSPI=$(USE_SSPI)
 	@SET USE_WINSSL=$(USE_WINSSL)
 	@$(MAKE) /NOLOGO /F MakefileBuild.vc
 
